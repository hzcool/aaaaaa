[
    {
        "content": "## \u9898\u610f\n\u6709 $L$ \u7c7b\u5c5e\u6027\uff0c\u7ed9\u5b9a $N$ \u53ea\u5976\u725b\u5728\u6bcf\u7c7b\u5c5e\u6027\u7684\u53d6\u503c\uff0c\u4ee4\u6bcf\u7c7b\u5c5e\u6027\u51fa\u73b0\u8fc7\u7684\u503c\u5c31\u662f\u8be5\u7c7b\u5c5e\u6027\u7684\u53d6\u503c\u96c6\u5408\u3002\u6c42\u6bcf\u7c7b\u5c5e\u6027\u6240\n\u6709\u53ef\u80fd\u7684\u53d6\u503c\u7ec4\u5408\u4e2d\uff0c\u6309\u5b57\u5178\u5e8f\u6392\u5e8f\u540e\uff0c\u6ca1\u6709\u51fa\u73b0\u5728\u8fd9 $N$ \u53ea\u5976\u725b\u5217\u8868\u91cc\u7684\u7b2c $K$ \u4e2a\u53d6\u503c\u7ec4\u5408\u662f\u4ec0\u4e48\u3002\n## \u601d\u8def\n\u6bcf\u7c7b\u5c5e\u6027\u5b9e\u9645\u4e0a\u5c31\u662f\u8fdb\u5236\u4e2d\u7684\u4e00\u4f4d\uff0c\u6240\u6709\u5c5e\u6027\u6784\u6210\u4e00\u4e2a\u6df7\u5408\u8fdb\u5236\u3002\n\n\u9996\u5148\u6211\u4eec\u8981\u6c42\u51fa\u6bcf\u4e00\u4f4d\u7684\u8fdb\u7387\uff0c\u548c\u6bcf\u53ea\u5976\u725b\u5728\u6bcf\u4e00\u4f4d\u4e0a\u5bf9\u5e94\u7684\u503c\uff0c\u53ef\u4ee5\u5bf9\u6bcf\u2f00\u7c7b\u5c5e\u6027\u7684\u503c\u6392\u5e8f\uff0c\u7136\u540e\u53bb\u91cd\uff0c\u6309\u987a\u5e8f\n\u4ece $0$ \u5f00\u59cb\u7f16\u53f7\u3002\u4e5f\u53ef\u4ee5\u66f4\u52a0\u7c97\u66b4\u7684\u5148\u5224\u65ad\u6bcf\u4e2a\u503c\u662f\u5426\u7b2c\u4e00\u6b21\u51fa\u73b0\uff0c\u7136\u540e\u5bf9\u6bcf\u4e2a\u503c\u7edf\u8ba1\u6bd4\u5b83\u5c0f\u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u503c\u7684\u4e2a\u6570\uff0c\u5c31\u5f97\u5230\u4e86\u6bcf\u4e2a\u503c\u5bf9\u5e94\u7684\u7f16\u53f7\uff0c\u6700\u5927\u7684\u7f16\u53f7 $+1$ \u5c31\u662f\u8be5\u4f4d\u7684\u8fdb\u7387\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u5c06\u6bcf\u53ea\u5976\u725b\u5bf9\u5e94\u7684\u6df7\u5408\u8fdb\u5236\u6570\u8f6c\u6362\u6210\u6700\u5c0f\u5355\u4f4d\u6570\u91cf\uff0c\u6392\u5e8f\u540e\u8fd9\u4e9b\u6570\u5c06\u6570\u8f74\u5206\u6210 $N + 1$ \u4e2a\u533a\u95f4\uff0c\u6211\u4eec\u6309\u987a\u5e8f\u5904\u7406\u6bcf\u4e2a\u533a\u95f4\uff0c\u5c31\u80fd\u627e\u5230\u7b2c $K$ \u4e2a\u6570\u5bf9\u5e94\u7684\u6570\u503c\u3002\n\u6700\u540e\u6211\u4eec\u518d\u5c06\u6570\u503c\u8f6c\u6362\u56de\u6df7\u5408\u8fdb\u5236\uff0c\u8f93\u51fa\u6bcf\u4f4d\u4e0a\u7684\u6570\u5bf9\u5e94\u7684\u5c5e\u6027\uff0c\u5c31\u662f\u7b54\u6848\u3002\n## \u590d\u6742\u5ea6\n\u4ee4\u5c5e\u6027\u7c7b\u7684\u6570\u91cf\u4e3a $L$\u3002\n### \u65f6\u95f4\n\u5c5e\u6027\u503c\u603b\u6570 $\\mathcal O(NL)$\u3002\n* \u5224\u65ad\u6bcf\u4e2a\u5c5e\u6027\u662f\u5426\u9996\u6b21\u51fa\u73b0 $\\mathcal O(N)$\uff0c\u6ce8\u610f\u5e38\u6570\u4e3a\u5c5e\u6027\u2ed3\u5ea6 $10$\u3002\n* \u8ba1\u7b97\u5c5e\u6027\u5bf9\u5e94\u7684\u6570\u503c $\\mathcal O(N)$\uff0c\u6ce8\u610f\u5e38\u6570\u4e3a\u5c5e\u6027\u2ed3\u5ea6 $10$\u3002\n* \u8ba1\u7b97\u8fdb\u5236\u8f6c\u6362\u5bf9\u5e94\u7684\u503c $\\mathcal O(1)$\u3002\n\n\u5976\u725b\u5bf9\u5e94\u7684\u5341\u8fdb\u5236\u6570\u6392\u5e8f $\\mathcal O(n \\log n)$\u3002\n\n\u5bfb\u627e\u7b2c $K$ \u4e2a\u6570 $\\mathcal O(N)$\u3002\n\n\u8f6c\u6362\u56de\u6df7\u5408\u8fdb\u5236 $\\mathcal O(L)$\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(N^2L)$\u3002\n### \u7a7a\u95f4\n\u8bb0\u5f55\u5c5e\u6027 $\\mathcal O(NL)$\uff0c\u6ce8\u610f\u5e38\u6570\u4e3a\u5c5e\u6027\u957f\u5ea6 $10$\u3002\n## \u4ee3\u7801\n```cpp\n#include <algorithm>\n#include <iostream>\n\nusing namespace std;\n\nconst int kMaxN = 102, kMaxL = 31;\n\nstruct P {          // \u5c5e\u6027\u79cd\u7c7b\n  int r, w;         // \u4f4d\u6743\u3001\u8fdb\u7387\n  string s[kMaxN];  // \u4f4d\u4e0a\u7684\u6570\u5bf9\u5e94\u7684\u5c5e\u6027\u503c\n} p[kMaxL];\nstring s[kMaxN][kMaxL], str;\nint b[kMaxN][kMaxL], v[kMaxN], n, k, l, x;\n\nint main() {\n  cin >> n >> k;\n  for (int i = 1; i <= n; i++) {\n    cin >> str >> str >> str >> str;\n    for (l = 0;; l++) {  // \u8bfb\u5165\u5c5e\u6027\n      cin >> str;\n      if (str == \"cow.\") {  // \u5c5e\u6027\u7ed3\u675f\n        break;\n      }\n      s[i][l] = str, b[i][l] = 1;       // \u8bb0\u5f55\u5c5e\u6027\u3001\u521d\u59cb\u5316\u9996\u6b21\u51fa\u73b0\u6807\u8bb0\n      for (int j = 1; j < i; j++) {     // \u679a\u4e3e\u4e4b\u524d\u7684\u540c\u7c7b\u5c5e\u6027\n        b[i][l] &= s[j][l] != s[i][l];  // \u5224\u91cd\u6807\u8bb0\u662f\u5426\u9996\u6b21\u51fa\u73b0\n      }\n    }\n  }\n  for (int k = l - 1; k >= 0; k--) {                    // \u6743\u91cd\u7531\u4f4e\u5230\u9ad8\u679a\u4e3e\u5c5e\u6027\u7c7b\u578b\n    p[k].w = k == l - 1 ? 1 : p[k + 1].w * p[k + 1].r;  // \u8ba1\u7b97\u5f53\u524d\u5c5e\u6027\u7684\u4f4d\u6743\n    for (int i = 1; i <= n; i++) {                      // \u679a\u4e3e\u6bcf\u53ea\u5976\u725b\n      int c = 0;                                        // \u521d\u59cb\u5316\u4f4d\u4e0a\u7684\u503c\n      for (int j = 1; j <= n; j++) {                    // \u679a\u4e3e\u5176\u4ed6\u5976\u725b\n        c += b[j][k] && s[j][k] < s[i][k];              // \u8ba1\u7b97\u8f83\u5c0f\u540c\u7c7b\u5c5e\u6027\u6570\u91cf\n      }\n      p[k].r = max(p[k].r, c + 1);  // \u66f4\u65b0\u8fdb\u7387\n      p[k].s[c] = s[i][k];          // \u8bb0\u5f55\u503c\u5bf9\u5e94\u7684\u5c5e\u6027\n      v[i] += c * p[k].w;           // \u7d2f\u52a0\u4f4d\u5bf9\u5e94\u7684\u503c\n    }\n  }\n  sort(v + 1, v + 1 + n);             // \u5c06\u62e5\u6709\u7684\u5976\u725b\u6309\u503c\u6392\u5e8f\n  v[0] = -1, v[n + 1] = 1e9 + 1;      // \u521d\u59cb\u5316\u8fb9\u754c\n  for (int i = 1; i <= n + 1; i++) {  // \u679a\u4e3e\u7f1d\u9699\u5bfb\u627e\u7b2ck\u53ea\n    if (k <= v[i] - v[i - 1] - 1) {   // \u5728\u5f53\u524d\u7f1d\u9699\u4e2d\n      x = v[i - 1] + k;\n      break;\n    } else {\n      k -= v[i] - v[i - 1] - 1;  // \u51cf\u53bb\u5f53\u524d\u7f1d\u9699\u957f\u5ea6\n    }\n  }\n  for (int i = 0; i < l; i++) {   // \u503c\u8f6c\u6df7\u5408\u8fdb\u5236\n    int y = x / p[i].w % p[i].r;  // \u8ba1\u7b97\u4f4d\u4e0a\u7684\u503c\n    cout << (i ? \" \" : \"\") << p[i].s[y];\n  }\n  return 0;\n}\n```",
        "postTime": 1643774685,
        "uid": 413140,
        "name": "\u7ea2\u9ed1\u6811",
        "ccfLevel": 5,
        "title": "P3087 \u9898\u89e3"
    },
    {
        "content": "update\uff1a2022/4/17 \u66f4\u6b63\u4e86\u535a\u5ba2\u5730\u5740\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P3087)\n\n[\u535a\u5ba2\u4e2d\u89c2\u770b\u4f53\u9a8c\u66f4\u597d](https://ttzytt.com/2021/09/P3087/)\n\n\u524d\u8a00\uff1a\u8fd9\u7bc7\u9898\u89e3\u5199\u7684\u53ef\u80fd\u6bd4\u8f83\u5570\u55e6\uff0c\u4e3b\u8981\u65f6\u662f\u56e0\u4e3a\u6211\u628a\u6240\u6709\u601d\u8003\u7684\u8fc7\u7a0b\u90fd\u5199\u4e0b\u6765\u4e86\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u5df2\u7ecf\u6709\u4e86\u57fa\u672c\u7684\u601d\u8def\uff0c\u6216\u8005\u662f\u5e0c\u671b\u627e\u4e00\u7bc7\u7b80\u6d01\u7684\u9898\u89e3\uff0c\u5c31\u53ef\u4ee5\u8df3\u8fc7\u8fd9\u7bc7\u9898\u89e3\u4e86\u3002\n\n# 1\uff1a\u7406\u89e3\u9898\u610f\n\n\u603b\u5171\u6709 $cow$ \u5934\u725b\uff0c$type$ \u7c7b\u5f62\u5bb9\u8bcd\uff0c\u6709 $num_i$ \u4e2a\u7b2c $i$ \u7c7b\u5f62\u5bb9\u8bcd\uff0c\u7b2c $i$ \u7c7b\u7684\u7b2c $j$ \u79cd\u5f62\u5bb9\u8bcd\u662f $adj_{i,j}$ \uff0c\u6bcf\u5934\u725b\u90fd\u9700\u8981\u6709\u8fd9 $type$ \u7c7b\u5f62\u5bb9\u8bcd\u6309\u7167\u987a\u5e8f\u6765\u4fee\u9970\u3002\u73b0\u5728\u544a\u8bc9\u4f60\u8981\u5220\u9664\u8fd9 $cow$ \u5934\u725b\u4e2d\u7684 $n$ \u5934\uff0c\u95ee\u4f60\u5728\u8fd9\u5269\u4e0b\u7684 $cow-n$ \u5934\u725b\u4e2d\uff0c\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5e8f\uff0c\u6392\u5728\u7b2c $k$ \u4f4d\u7684\u725b\u662f\u54ea\u4e00\u5934?\n\n# 2\uff1a\u5206\u6790\u548c\u8f6c\u5316\u95ee\u9898\n\n## 2.1\uff1a\u548c\u6570\u5b57\u7cfb\u7edf\u7684\u5173\u8054\n\u5355\u770b\u8fd9\u6837\u7684\u63cf\u8ff0\u53ef\u80fd\u6709\u4e9b\u62bd\u8c61\uff0c\u73b0\u5728\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u6837\u4f8b\u662f\u600e\u4e48\u6837\u7684\uff0c\u518d\u5728\u6837\u4f8b\u7684\u57fa\u7840\u4e0a\u601d\u8003\u5e94\u8be5\u600e\u4e48\u89e3\u51b3\u8fd9\u9053\u9898\u3002\n\n\u5728\u6837\u4f8b\u4e2d $n=3$\uff0c$k = 7$\u3002$adj_{i,j}$\u7684\u503c\u5982\u4e0b\n\n| $adj_{i,j}$           | $j=1$   | $j=2$    | $j=3$     |\n| :-------------------- | :------ | :------- | :-------- |\n| $i=1$\uff08\u7b2c\u4e00\u7c7b\u5f62\u5bb9\u8bcd\uff09 | \"large\" | \"small\"  | N/A       |\n| $i=2$\uff08\u7b2c\u4e8c\u7c7b\u5f62\u5bb9\u8bcd\uff09 | \"brown\" | \"white\"  | \"spotted\" |\n| $i=3$\uff08\u7b2c\u4e09\u7c7b\u5f62\u5bb9\u8bcd\uff09 | \"noisy\" | \"silent\" | N/A       |\n\n\u56e0\u4e3a\u6837\u4f8b\u4e2d\u8ba9\u6211\u4eec\u6c42\u7684\u662f\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5728\u7b2c7\u7684\u725b\uff0c\u6211\u4eec\u53ef\u4ee5\u601d\u8003\u4e00\u4e0b\u4ee5\u5b57\u5178\u5e8f\u4e3a\u5173\u952e\u5b57\u8fdb\u884c\u6392\u5e8f\u7684\u8fc7\u7a0b\u662f\u4ec0\u4e48\u6837\u7684\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a\u6709\u4e24\u4e2a\u5b57\u7b26\u4e32\"abc\"\u548c\u5b57\u7b26\u4e32\"cde\"\u9700\u8981\u8fdb\u884c\u5b57\u5178\u5e8f\u6392\u5e8f\uff0c\u9996\u5148\u6211\u4eec\u5e94\u8be5\u6bd4\u8f83\u5728\u7b2c\u4e00\u4f4d\u7684\u5b57\u7b26\"a\"\u548c\"c\"\u7684\u5b57\u5178\u5e8f\uff0c\u518d\u6bd4\u8f83\u7b2c\u4e8c\u4f4d\"b\"\u548c\"c\"\u7684\u5b57\u5178\u5e8f\uff0c\u6700\u540e\u624d\u662f\u7b2c\u4e09\u4f4d\u7684\u5b57\u7b26\u3002\n\n\u4ece\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e00\u4f4d\u5b57\u7b26\u5bf9\u4e8e\u5b57\u7b26\u4e32\u6574\u4f53\u5b57\u5178\u5e8f\u7684\u5f71\u54cd\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u5176\u4e2d\u7b2c\u4e00\u4f4d\u7684\u5f71\u54cd\u6700\u5927\uff0c\u6700\u540e\u4e00\u4f4d\u6700\u5c0f\u3002\u56e0\u6b64\u6211\u4eec\u5c31\u53ef\u4ee5\u8bf4\u4ed6\u4eec\u5bf9\u4e8e\u6574\u4e2a\u5b57\u7b26\u4e32\u7684\u5b57\u5178\u5e8f\u7684\u5f71\u54cd\u7684\u201c\u6743\u503c\u201d\u4e0d\u540c\u3002\u5982\u679c\u6211\u4eec\u6309\u7167\u5b57\u5178\u5e8f\u7ed9\u4e0d\u540c\u7684\u5b57\u7b26\u4e32\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4e0d\u7ba1\u4ece\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u5230\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u7684\u5b57\u5178\u5e8f\u6709\u591a\u5c0f\uff0c\u5982\u679c\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u5b57\u5178\u5e8f\u5f88\u5927\uff0c\u90a3\u4e48\u5b83\u4e5f\u4f1a\u6392\u5728\u5f88\u540e\u9762\n\n\u518d\u89c2\u5bdf\u8fd9\u9053\u9898\u76ee\u4e2d\u8ba9\u6211\u4eec\u6c42\u89e3\u7684\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u7b2c1\u7c7b\u5f62\u5bb9\u8bcd\u6bd4\u5982\"large\"\u5bf9\u4e8e\u6574\u4e32\u5b57\u7b26\u7684\u5f71\u54cd\u662f\u6700\u5927\u7684\uff0c\u5176\u6b21\u662f\u7b2c\u4e8c\u7c7b\uff0c\u6bd4\u5982\"brown\"\uff0c\u6700\u540e\u624d\u662f\u7b2c\u4e09\u7c7b\u3002\n\n\u5206\u6790\u5230\u8fd9\u91cc\uff0c\u76f8\u4fe1\u4f60\u5df2\u7ecf\u4f53\u4f1a\u5230\u8fd9\u4e2a\u95ee\u9898\u548c\u6570\u5b57\u7cfb\u7edf\u7684\u76f8\u5173\u6027\u4e86\u3002\n\n\u90a3\u5c31\u662f\u6211\u4eec\u5728\u6bd4\u8f83\u6570\u5b57\u65f6\uff0c\u91c7\u7528\u7684\u65b9\u6cd5\u4e5f\u662f\u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d\u8fdb\u884c\u6bd4\u8f83\n\n\u6bd4\u5982\u6709\u8fd9\u6837\u4e00\u4e2a $10$ \u8fdb\u5236\u6570\u5b57 $(123456789)_{10}$\n\n\u6570\u5b57 $1$ \u4ee3\u8868\u7684\u503c\u662f $100000000$ \u5b83\u4ee3\u8868\u7684\u503c\u662f\u6240\u6709\u6570\u5b57\u4e2d\u6700\u5927\u7684\uff081\u662f\u7b2c\u4e00\u4f4d\uff09\n\n\u6570\u5b57 $2$ \u4ee3\u8868\u7684\u503c\u662f $20000000$  \u5b83\u4ee3\u8868\u7684\u503c\u662f\u7b2c\u4e8c\u5927\u7684\uff082\u662f\u7b2c\u4e8c\u4f4d\uff09\n\n\u6570\u5b57 $x$ \u5728\u7b2c $i$ \u4f4d\u4ee3\u8868\u7684\u503c\u5c31\u662f $10^{i-1}\\times x$\uff0c\u6574\u4e2a $10$ \u8fdb\u5236\u6570\u4ee3\u8868\u7684\u503c\u5c31\u6bcf\u4e00\u4f4d\u6570\u5b57\u4ee3\u8868\u7684\u503c\u7684\u7d2f\u52a0\n\n\u628a\u6574\u4e2a\u89c4\u5219\u63a8\u5e7f\u5230 $k$ \u8fdb\u5236\uff0c\u90a3\u4e48\u6570\u5b57 $x$ \u5728\u7b2c $i$ \u4f4d\u4ee3\u8868\u7684\u503c\u5c31\u662f $k^{i-1}\\times x$\n\n## 2.2\uff1a\u89e3\u51b3\u7b80\u5316\u8fc7\u7684\u95ee\u9898\n\n\u90a3\u4e48\u95ee\u9898\u5c31\u6765\u4e86\uff0c\u4e0d\u7ba1\u662f\u6211\u4eec\u521a\u521a\u8ba8\u8bba\u7684 $10$ \u8fdb\u5236\u8fd8\u662f $k$ \u8fdb\u5236\uff0c\u5b83\u4eec\u7684\u673a\u5236\u90fd\u662f \u201c\u9022 $k$ \u5c31\u8fdb $1$\u201d\uff0c\u56e0\u6b64\u7b2c $i+1$ \u4f4d\u7684 \u201c\u6570\u5b57 $1$\u201d \u5728\u5341\u8fdb\u5236\u4e2d\u4ee3\u8868\u7684\u503c\u4e00\u5b9a\u662f\u7b2c $i$ \u4f4d\u7684 \u201c\u6570\u5b57 $1$\u201d \u4ee3\u8868\u7684\u503c\u7684 $k$ \u500d\u3002\u800c\u5728\u6211\u4eec\u8fd9\u4e2a\u95ee\u9898\u4e2d\uff0c\u6bcf\u4e00\u7c7b\u5f62\u5bb9\u8bcd\u7684\u6570\u91cf\u662f\u4e0d\u4e00\u5b9a\u7684\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u5c1d\u8bd5\u89e3\u51b3\u6bcf\u7c7b\u5f62\u5bb9\u8bcd\u6570\u91cf\u4e00\u5b9a\u7684\u60c5\u51b5\uff0c\u8bbe\u6bcf\u7c7b\u5f62\u5bb9\u8bcd\u7684\u6570\u91cf\u90fd\u662f $k$ \uff0c\u9996\u5148\u6211\u4eec\u8981\u5bf9\u6bcf\u7c7b\u5f62\u5bb9\u8bcd\u8fdb\u884c\u5b57\u5178\u5e8f\u6392\u5e8f\uff0c\u628a\u7ed3\u679c\u5b58\u5728 `rank[i][j]`\u4e2d\uff0c\u5176\u4e2d $i$ \u4ee3\u8868\u5f62\u5bb9\u8bcd\u7c7b\u578b\uff0c$j$ \u4ee3\u8868\u6392\u540d\u3002\n\n\u8fd9\u4e00\u6b65\u7684\u76ee\u7684\u662f\u628a\u5b57\u7b26\u4e32\u8f6c\u5316\u6210\u6570\u5b57\uff0c\u65b9\u4fbf\u540e\u7eed\u7684\u8ba1\u7b97\u3002\uff08\u628a\u6bcf\u4e2a\u5f62\u5bb9\u8bcd\u6620\u5c04\u5230\u6570\u5b57\u7cfb\u7edf\u4e2d\u7684 \u201c\u7b2c $i$ \u4f4d\u7684\u6570\u5b57 $j$ \u201d\uff0c\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\u5f62\u5bb9\u8bcd\u7684\u7c7b\u6570\u8d8a\u5c0f\uff0c\u5bf9\u6574\u4f53\u5b57\u5178\u5e8f\u5f71\u54cd\u8d8a\u5927\uff0c\u6570\u5b57\u7684\u4f4d\u6570\u8d8a\u5c0f\uff0c\u5bf9\u6574\u4f53\u7684\u503c\u7684\u5f71\u54cd\u8d8a\u5c0f\uff09\n\n\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86\u5f62\u5bb9\u8bcd\u5230\u6570\u5b57\u7684\u6620\u5c04\uff0c\u6240\u4ee5\u4e0b\u9762\u8981\u505a\u7684\u5c31\u7b49\u4e8e\u201c\u628a $10$ \u8fdb\u5236\u8f6c\u6362\u5230 $k$ \u8fdb\u5236\u201d\uff0c\u518d\u628a\u5f97\u5230\u7684\u6570\u5b57\u8f6c\u6362\u56de\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\n\n\u8fd9\u6837\u7684\u4f8b\u5b50\u53ef\u80fd\u6709\u4e9b\u62bd\u8c61\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u6a21\u62df\u4e00\u904d\u8fd9\u4e2a\u8fc7\u7a0b\n\n\u6211\u4eec\u89c4\u5b9a\u7b2c\u4e00\u7c7b\u5f62\u5bb9\u8bcd\u6709\u4ee5\u4e0b\u4e24\u4e2a {\"a\",\"b\"}, \u7b2c\u4e8c\u7c7b\u5f62\u5bb9\u8bcd\u4e5f\u6709\u4ee5\u4e0b\u4e24\u4e2a{\"c\",\"d\"}, \u7b2c\u4e09\u7c7b\u662f{\"e\",\"f\"}\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa\u4ee5\u4e0b\u7684`rank`\u6570\u7ec4\n\n\uff08\u56e0\u4e3a\u65b9\u4fbf\u8ba1\u7b97\uff0c\u6240\u4ee5\u6392\u540d\u4ece0\u5f00\u59cb\uff09\n\n| $rank_{i,j}$          | $j=0$ | $j=1$ |\n| :-------------------- | :---- | :---- |\n| $i=1$\uff08\u7b2c\u4e00\u7c7b\u5f62\u5bb9\u8bcd\uff09 | \"a\"   | \"b\"   |\n| $i=2$\uff08\u7b2c\u4e8c\u7c7b\u5f62\u5bb9\u8bcd\uff09 | \"c\"   | \"d\"   |\n| $i=3$\uff08\u7b2c\u4e09\u7c7b\u5f62\u5bb9\u8bcd\uff09 | \"e\"   | \"f\"   |\n\n\u5982\u679c\u6211\u4eec\u60f3\u6c42\u5b57\u5178\u5e8f\u6392\u5728\u7b2c $3$ \u4f4d\u7684\u725b\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u5148\u6c42\u51fa $3$ \u7684\u4e8c\u8fdb\u5236\u6570\uff0c\u4e5f\u5c31\u662f $(011)_2$\u3002\u7136\u540e\u628a\u8fd9\u4e2a\u6570\u5b57\u5012\u8fc7\u6765\uff0c\u53d8\u6210 $(110)_{2\u53cd}$\uff08\u5f62\u5bb9\u8bcd\u7684\u7c7b\u6570\u8d8a\u5c0f\uff0c\u5bf9\u6574\u4f53\u5b57\u5178\u5e8f\u5f71\u54cd\u8d8a\u5927\uff0c\u6570\u5b57\u7684\u4f4d\u6570\u8d8a\u5c0f\uff0c\u5bf9\u6574\u4f53\u7684\u503c\u7684\u5f71\u54cd\u8d8a\u5c0f\uff09\uff0c\u6700\u540e\u518d\u628a $(110)_{2\u53cd}$ \u6620\u5c04\u56de\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\uff08\u7b2c\u51e0\u4f4d\u5bf9\u5e94\u7b2c\u51e0\u7c7b\uff09\uff0c\u6700\u540e\u7684\u7b54\u6848\u4e5f\u5c31\u662f \"a, d, f\"\n\n## 2.3\uff1a\u89e3\u51b3\u539f\u95ee\u9898\n\u5728\u89e3\u51b3\u521a\u521a\u7b80\u5316\u8fc7\u7684\u95ee\u9898\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u628a\u6bcf\u7c7b\u5f62\u5bb9\u8bcd\u7684\u7c7b\u6620\u5c04\u5230\u4e86\u6570\u5b57\u7cfb\u7edf\u7684 \u201c\u7b2c\u51e0\u4f4d\u6570\u201d\uff0c\u628a\u5b83\u4eec\u7684\u6392\u540d $j$ \u6620\u5c04\u5230\u4e86\u6570\u5b57\u7cfb\u7edf\u4e2d\u7684\u6570\u5b57 $j$\uff0c\u800c\u6bcf\u7c7b\u5f62\u5bb9\u8bcd\u7684\u6570\u91cf\u5c31\u6210\u4e86\u8fd9\u4e2a\u6570\u5b57\u7cfb\u7edf\u7684\u8fdb\u5236\u6570\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u89e3\u51b3\u539f\u95ee\u9898\u7684\u5173\u952e\u5c31\u5728\u4e8e\u8fdb\u5236\uff0c\u5728\u521a\u521a\u7b80\u5316\u8fc7\u7684\u95ee\u9898\u4e2d\uff0c\u6570\u5b57\u7cfb\u7edf\u4e2d\u6bcf\u4e00\u4f4d\u7684\u8fdb\u5236\u662f\u4e00\u6837\u7684\uff0c\u5e76\u4e14\u6bcf\u4e00\u7c7b\u5f62\u5bb9\u8bcd\u7684\u6570\u91cf\u4e5f\u662f\u4e00\u5b9a\u7684\uff0c\u90a3\u4e48\u518d\u89e3\u51b3\u5f53\u524d\u95ee\u9898\u65f6\uff0c\u6bcf\u4e00\u7c7b\u7684\u5f62\u5bb9\u8bcd\u6570\u91cf\u662f\u4e0d\u4e00\u5b9a\u7684\uff0c\u6240\u4ee5\u76f8\u5e94\u7684\uff0c\u6bcf\u4e00\u4f4d\u7684\u8fdb\u5236\u4e5f\u8981\u6709\u6240\u6539\u53d8\u3002\n\n\u56de\u5230\u9898\u76ee\u7ed9\u7684\u6837\u4f8b\uff0c\u6bcf\u7c7b\u5f62\u5bb9\u8bcd\u7684\u6570\u91cf\u662f $num_1 = 2$, $num_2 = 3$, $num_3 = 2$ \n\n\u800c\u7b2c\u4e09\u7c7b\u7684\u5f62\u5bb9\u8bcd\u88ab\u6211\u4eec\u6620\u5c04\u5230\u4e86\u6570\u5b57\u7cfb\u7edf\u4e2d\u7684\u7b2c\u4e00\u4f4d\u6570\u5b57\uff0c\u7b2c\u4e8c\u7c7b\u662f\u7b2c\u4e8c\u4f4d\uff0c\u540c\u6837\u7684\uff0c\u7b2c\u4e00\u7c7b\u5c31\u662f\u7b2c\u4e09\u4f4d\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u89c4\u5b9a\uff0c\u5728\u7b2c\u4e00\u4f4d\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u6570\u5b57\u7cfb\u7edf\u662f\u4e8c\u8fdb\u5236\u7684\uff0c\u5728\u7b2c\u4e8c\u4f4d\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u6570\u5b57\u7cfb\u7edf\u662f\u4e09\u8fdb\u5236\u7684\uff0c\u7b2c\u4e09\u4f4d\u4e5f\u662f\u4e8c\u8fdb\u5236\u3002\n\n\u867d\u7136\u6211\u4eec\u53ef\u4ee5\u505a\u5230\u7528\u8fd9\u6837\u7684 \"$2,3,2$\" \u8fdb\u5236\u6765\u63cf\u8ff0\u6bcf\u4e00\u79cd\u725b\uff0c\u4f46\u662f\u5728\u89e3\u51b3\u8fd9\u9053\u9898\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u628a\u5341\u8fdb\u5236\u8f6c\u6362\u6210\u8fd9\u6837\u7684 \"$2,3,2$\" \u8fdb\u5236\u3002\n\n\u5927\u5bb6\u80af\u5b9a\u5bf9\u5341\u8fdb\u5236\u8f6c\u4e8c\u8fdb\u5236\u8fd9\u6837\u7684\u95ee\u9898\u975e\u5e38\u719f\u6089\uff0c\u6bd4\u5982\u8981\u628a\u4e00\u4e2a\u5341\u8fdb\u5236\u6570 $a$ \u8f6c\u6362\u6210 $x$ \u4f4d\u7684\u4e8c\u8fdb\u5236\u6570 $b$ \uff0c\u8981\u505a\u7684\u5c31\u662f\u4ece $b$ \u7684\u6700\u9ad8\u4f4d $x$ \u5f00\u59cb\uff0c\u6bcf\u6b21\u90fd\u8fdb\u884c $\\lfloor a \\div \uff08b\u7684\u8fd9\u4e00\u4f4d\u5728\u5341\u8fdb\u5236\u4e2d\u4ee3\u8868\u7684\u503c\uff09 \\rfloor$ \u7684\u64cd\u4f5c\uff0c\u7136\u540e\u518d\u8ba1\u7b97 $a = a \\bmod \uff08b\u7684\u8fd9\u4e00\u4f4d\u5728\u5341\u8fdb\u5236\u4e2d\u4ee3\u8868\u7684\u503c\uff09$\n\n\u5199\u6210\u7a0b\u5e8f\u7684\u8bdd\uff0c\u5c31\u662f\u8fd9\u6837\u7684\n~~~cpp\n    //k\u662f\u5341\u8fdb\u5236\u6570\n    //weight_in_pos[i]\u662f\u7b2ci\u4f4d\uff08\u4ece\u6700\u9ad8\u4f4d\u5f00\u59cb\u8ba1\uff0c\u548c\u6211\u4eec\u5e73\u5e38\u7528\u7684\u65b9\u6cd5\u76f8\u53cd\uff09\u5728\u5341\u8fdb\u5236\u4e2d\u4ee3\u8868\u7684\u503c\n    //i\u662f\u5f53\u524d\u4f4d\uff08\u4ece\u6700\u9ad8\u4f4d\u5f00\u59cb\u8ba1\uff0c\u548c\u6211\u4eec\u5e73\u5e38\u7528\u7684\u65b9\u6cd5\u76f8\u53cd\uff09\n    for (int i = 1; i <= adj_num; i++)\n    {\n        cout << adj_by_pos[i][(k) / weight_in_pos[i]] << \" \";\n        k %= weight_in_pos[i];\n    }\n~~~\n\n\u6240\u4ee5\u5462\uff0c\u5bf9\u4e8e \"$2,3,2$\" \u8fd9\u6837\u7684\u8fdb\u5236\uff0c\u6211\u4eec\u53ea\u9700\u8981\u63d0\u524d\u8ba1\u7b97\u597d\u4ed6\u4eec\u6bcf\u4e00\u4f4d\u5728\u5341\u8fdb\u5236\u4e2d\u4ee3\u8868\u7684\u503c\u5c31\u53ef\u4ee5\u628a\u5341\u8fdb\u5236\u8f6c\u6362\u6210\u8fd9\u6837\u7684\u8fdb\u5236\u4e86\u3002\n\n\uff08\u6bcf\u4e00\u4f4d\u5728\u5341\u8fdb\u5236\u4e2d\u4ee3\u8868\u7684\u503c\u7684\u610f\u601d\u5c31\u662f \u5728\u539f\u8fdb\u5236\u7cfb\u7edf\u4e2d\uff0c\u5982\u679c\u8fd9\u4e00\u4f4d\u662f $1$ \uff0c\u5176\u4ed6\u4f4d\u90fd\u662f $0$ \uff0c\u8f6c\u6362\u6210 $10$ \u8fdb\u5236\u4e4b\u540e\u7684\u503c\uff09\n\n\u90a3\u4e48\u8fd9\u6837\u7684\u8fdb\u5236\u7684\u6bcf\u4e00\u4f4d\u5728\u5341\u8fdb\u5236\u4e2d\u4ee3\u8868\u7684\u503c\u5982\u4f55\u8ba1\u7b97\u5462\uff1f\n\n\u4e0d\u7ba1\u662f\u5728\u51e0\u8fdb\u5236\u7684\u7cfb\u7edf\u91cc\uff0c\u53ea\u8981\u4e24\u4e2a\u6570\u7684\u8fdb\u5236\u7cfb\u7edf\u76f8\u540c\uff0c\u90a3\u4e48\u4e00\u4e2a \u4f4d\u6570\u66f4\u591a\u7684\u6570 \u6240\u4ee3\u8868\u7684\u503c\u4e00\u5b9a\u6bd4\u4f4d\u6570\u66f4\u5c11\u7684\u90a3\u4e2a\u8981\u5927\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u8ba1\u7b97\u7b2c $i$ \u4f4d\u5728\u5341\u8fdb\u5236\u4e2d\u6240\u4ee3\u8868\u7684\u503c\uff0c\u5c31\u662f\u7b2c $i-1$ \u4f4d\u6570\u5b57\u5728\u5341\u8fdb\u5236\u4e2d\u4ee3\u8868\u7684\u503c\u518d\u4e58\u4e0a\u7b2c $i-1$ \u4f4d\u4e0a\u80fd\u8868\u793a\u7684\u6700\u5927\u7684\u6570\u5b57 $+ 1$\uff08\u786e\u4fdd\u4f4d\u6570\u66f4\u591a\u7684\u6570\u4e00\u5b9a\u6bd4\u4f4d\u6570\u66f4\u5c11\u7684\u5927\uff09\uff0c\u5e76\u4e14\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u6700\u5927\u7684\u6570\u5b57 $+ 1$ \u521a\u597d\u5c31\u662f\u8fd9\u4e00\u4f4d\u7684\u8fdb\u5236\u3002\uff08\u6bd4\u5982 $2$ \u8fdb\u5236\u6700\u5927\u7684\u6570\u662f $1$ \uff09\n\n\u6709\u4e86\u8fd9\u4e2a\u7ed3\u8bba\u5c31\u53ef\u4ee5\u9012\u63a8\u7684\u6c42\u89e3\u6bcf\u4e00\u4f4d\u5728\u5341\u8fdb\u5236\u4e2d\u4ee3\u8868\u7684\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u7b54\u6848\u5b58\u5728 `weight_in_pos[i]` \u6570\u7ec4\u4e2d\uff08\u7b2c $i$ \u4f4d\u4ee3\u8868\u7684\u503c\uff09\uff0c\u5e76\u4e14\u628a\u7b2c\u4e00\u4f4d\u4ee3\u8868\u7684\u503c\u521d\u59cb\u5316\u4e3a $1$\n\n\u5728\u6837\u4f8b\u7684 \"$2,3,2$\" \u8fdb\u5236\u4e2d\uff0c\u7b2c\u4e00\u4f4d\u5728\u5341\u8fdb\u5236\u4e2d\u4ee3\u8868\u7684\u503c\u88ab\u521d\u59cb\u5316\u4e3a $1$\uff0c\u7b2c\u4e8c\u4f4d\u7684 weight_in_pos \u503c\u5c31\u662f $1\\times 2 = 2$\uff0c\u7b2c\u4e09\u4f4d\u5c31\u662f $2\\times 3 = 6$\uff0c\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u80fd\u8ba1\u7b97\u51fa\u6240\u6709\u725b\u4e2d\u6392\u5728\u7b2c $k$ \u4e2a\u7684\u725b\u4e86\uff0c\u4f46\u662f\u9898\u76ee\u95ee\u7684\u662f\u5728\u8fd9\u5269\u4e0b\u7684 $cow-n$ \u5934\u725b\u4e2d\uff0c\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5e8f\uff0c\u6392\u5728\u7b2c $k$ \u4f4d\u7684\u725b\u662f\u54ea\u4e00\u5934\u3002\n\n\u8fd9\u4e2a\u5c0f\u95ee\u9898\u7684\u6c42\u89e3\u5c31\u6bd4\u8f83\u7b80\u5355\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u628a $k$ \u8f6c\u5316\u6210\u5728\u6240\u6709\u725b\u4e2d\u7684\u6392\u540d\uff0c\u800c\u4e0d\u662f\u5269\u4e0b\u7684\u725b\u7684\u6392\u540d\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u8ba1\u7b97\u51fa\u8981\u5220\u9664\u7684\u90a3 $n$ \u5934\u725b\u5728\u6240\u6709\u725b\u4e2d\u7684\u6392\u540d\uff0c\u5982\u679c\u8fd9 $n$ \u5934\u725b\u4e2d\u6709\u725b\u7684\u6392\u540d\u6bd4 $k$ \u5c0f\uff0c\u6216\u662f\u7b49\u4e8e $k$ \uff0c\u90a3\u4e48\u5c31\u9700\u8981\u628a $k$ \u52a0 $1$\u3002\uff08\u76f8\u5f53\u4e8e\u6392\u540d\u524d $k$ \u7684\u8fd9\u4e9b\u725b\u4e2d\u6709\u4e00\u4e9b\u662f\u4e0d\u80fd\u9009\u53d6\u7684\uff0c\u800c\u6211\u4eec\u8981\u9009\u51fa $k$ \u5934\uff0c\u6240\u4ee5\u8981\u52a0\u4e0a\u5220\u53bb\u7684 $n$ \u5934\u725b\u4e2d\u6392\u540d\u6bd4 $k$ \u5c0f\u7684\uff09\n\n# \u4ee3\u7801\u548c\u7ec6\u8282\n\u7ec6\u8282\u90fd\u6709\u6ce8\u91ca\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\nint n, k;\nint adj_num = 0;\nvector<string> str[105];          //str[i]\u8868\u793a\u7528\u4e8e\u4fee\u9970\u7b2ci\u5934\u725b\u7684\u5f62\u5bb9\u8bcd\nvector<string> adj_by_pos[35];    //adj_by_pos[i]\u8868\u793a\u6240\u6709\u5728\u4f4d\u7f6ei\u51fa\u73b0\u7684\u5f62\u5bb9\u8bcd\nset<string> is_appear[35];        //is_appear[i]\u7528\u4e8e\u5224\u65ad\u5728\u4f4d\u7f6ei\u4e0a\uff0c\u67d0\u4e2a\u5f62\u5bb9\u8bcd\u662f\u5426\u51fa\u73b0\nint weight_in_pos[35];            //\u6bcf\u4e00\u4f4d\u4ee3\u8868\u7684\u503c\uff08\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5728\u7b2c\u51e0\uff09\nmap<string, int> rank_in_pos[35]; //rank_in_pos[i][j]\u4ee3\u8868\u5728\u4f4d\u7f6ei\u4e0a\uff0c\u5b57\u7b26\u4e32j\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5e8f\uff0c\u6392\u5728\u7b2c\u51e0\nint cow_rank[105];                //fj\u6ca1\u6709\u7684\u725b\u7684\u6392\u540d\nbool debug = false;               //\u8c03\u8bd5\u5f00\u5173\uff0c\u53ef\u4ee5\u6253\u5f00\u53bb\u4f53\u4f1a\u4e00\u4e0b\u89e3\u9898\u7684\u8fc7\u7a0b\nvoid mapping()                    //\u5bf9\u6bcf\u7c7b\u5f62\u5bb9\u8bcd\u8fdb\u884c\u5b57\u5178\u5e8f\u6392\u5e8f\uff0c\u628a\u7ed3\u679c\u5b58\u5728 rank[i][j]\u4e2d\uff0c\u5176\u4e2d i \u4ee3\u8868\u5f62\u5bb9\u8bcd\u7c7b\u578b\uff0cj \u4ee3\u8868\u6392\u540d\n{                                 //\u6ce8\u610f\u8fd9\u91cc\u7684\u6392\u540d\u4ece0\u5f00\u59cb\uff08\u8fd9\u662f\u628a\u5355\u8bcd\u6620\u5c04\u5230\u6570\u5b57\u4e0a\uff0c\u6570\u5b57\u662f\u4ece0\u5f00\u59cb\u7684\uff09\n    for (int i = 1; i <= adj_num; i++)\n    {\n        int rank = 0;\n        for (auto j : adj_by_pos[i]) //c++11\u7684\u65b0\u7279\u6027\uff0c\u610f\u601d\u662f\u7528j\u904d\u5386\u6240\u6709adj_by_pos[i]\u7684\u5143\u7d20\n        {\n            rank_in_pos[i][j] = rank;\n            if (debug)\n                cout << j << \" rank = \" << rank << \" i = \" << i << endl;\n            rank++;\n        }\n    }\n}\n\nint get_pos(int cow_id)\n{\n    int ans = 0;\n    for (int i = 1; i <= adj_num; i++)\n    {\n        ans += weight_in_pos[i] * (rank_in_pos[i][str[cow_id][i - 1]]);\n    }\n    return ans + 1; //\u7b54\u6848\u53ef\u80fd\u662f0\uff0c\u4f46\u662f\u6392\u4f4d\u5e94\u8be5\u4ece1\u5f00\u59cb\n}\n\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin >> n >> k;\n    string temp_str;\n    for (int i = 1; i <= n; i++)\n    {\n        cin >> temp_str;\n        while (temp_str != \"no\")\n        {\n            cin >> temp_str;\n        }\n        int adj_pos = 1;\n\n        while (1)\n        {\n            cin >> temp_str;\n            if (temp_str == \"cow.\")\n            {\n                break;\n            }\n            str[i].push_back(temp_str);\n            if (!is_appear[adj_pos].count(temp_str)) //\u8fd8\u6ca1\u6709\u51fa\u73b0\u8fc7\uff0c\u8fd9\u91cc\u662f\u53bb\u91cd\u64cd\u4f5c\n            {\n                adj_by_pos[adj_pos].push_back(temp_str);\n                is_appear[adj_pos].insert(temp_str);\n            }\n            if (i == 1)\n            {\n                adj_num++; //\u8ba1\u7b97\u5f62\u5bb9\u8bcd\u7684\u79cd\u7c7b\u6570\n            }\n            adj_pos++;\n        }\n    }\n    for (int i = 1; i <= adj_num; i++)\n    {\n        sort(adj_by_pos[i].begin(), adj_by_pos[i].end()); //\u5bf9\u6bcf\u4e2a\u7c7b\u578b\u7684\u5f62\u5bb9\u8bcd\u8fdb\u884c\u6392\u5e8f\n    }\n\n    weight_in_pos[adj_num + 1] = 1;            //\u7b2c\u4e00\u4f4d\u4ee3\u8868\u7684\u6570\u5b57\u5e94\u8be5\u662f1\n    adj_by_pos[adj_num + 1].push_back(\"temp\"); //1\u548c1\u76f8\u4e58\u662f1\uff0c\u6240\u4ee5\u8981push\u4e00\u4e2a\u5143\u7d20\u8fdb\u53bb\uff0c\u8fd9\u6837\u5b50size\u5c31\u662f1\n\n    for (int i = adj_num; i >= 1; i--) //\u8ba1\u7b97\u6bcf\u4e00\u4f4d\u5728\u5341\u8fdb\u5236\u4e2d\u4ee3\u8868\u7684\u503c\uff08\u8fd9\u91cc\u7684\u4f4d\u7684\u8ba1\u7b97\u65b9\u6cd5\u548c\u5e73\u65f6\u7684\u65b9\u6cd5\u662f\u53cd\u7684\uff09\n    {                                  //\u8fd9\u662f\u56e0\u4e3a\u672c\u9898\u4e2d\u7684\u5f62\u5bb9\u8bcd\u7c7b\u578b\u548c\u6570\u5b57\u7cfb\u7edf\u7684 \u201c\u4f4d\u201d \u662f\u76f8\u53cd\u7684\n        if (debug)\n            cout << \"i\" << i << endl;\n        weight_in_pos[i] = weight_in_pos[i + 1] * adj_by_pos[i + 1].size();\n    }\n    mapping();\n    for (int i = 1; i <= n; i++)\n    {\n        cow_rank[i] = get_pos(i); //\u8ba1\u7b97\u51fa\u8981\u5220\u9664\u7684n\u5934\u725b\u7684\u6574\u4f53\u6392\u540d\n        if (debug)\n            cout << \"cowrkw \" << i << \" = \" << cow_rank[i] << endl;\n    }\n    sort(cow_rank + 1, cow_rank + n + 1); //\u6309\u7167\u6bcf\u79cd\u725b\u7684\u6392\u540d\u8fdb\u884c\u6392\u5e8f\n    for (int i = 1; i <= n; i++)\n    {\n        if (cow_rank[i] <= k)\n        {\n            k++;\n        }\n        else\n        {\n            break;\n        }\n    }\n    k--; //k\u539f\u672c\u4ee3\u8868\u7684\u662f\u6392\u5728\u7b2c\u51e0\u7684\u725b\uff0c\u4f46\u662f\u6211\u4eec\u5df2\u7ecf\u628a\u725b\u7684\u6392\u540d\u8f6c\u5316\u6210\u6570\u5b57\u4e86\uff0c\n        //\u6392\u540d\u6700\u5c0f\u7684\u725b\u7684\u6570\u5b57\u662f0\u800c\u4e0d\u662f1\uff0c\u6240\u4ee5\u8fd9\u91cc\u8981\u51cf1\n    if (debug)\n        cout << \"new k\" << k << endl;\n    for (int i = 1; i <= adj_num; i++)\n    {\n        cout << adj_by_pos[i][(k) / weight_in_pos[i]] << \" \";\n        if (debug)\n            cout << \"i \" << i << \" (k) / weight_in_pos[i] \" << (k) / weight_in_pos[i] << endl;\n        k %= weight_in_pos[i];\n    }\n    system(\"pause\");\n}\n```\n\n\u9898\u89e3\u5c31\u5230\u8fd9\u91cc\u4e86\uff0c\u5982\u679c\u4f60\u53d1\u73b0\u9898\u89e3\u6709\u95ee\u9898\uff0c\u6216\u662f\u6709\u770b\u4e0d\u61c2\u7684\u5730\u65b9\uff0c\u90fd\u6b22\u8fce\u79c1\u4fe1\u6211\u6216\u8005\u662f\u5728\u8bc4\u8bba\u533a\u91cc\u8bb2\uff0c\u5982\u679c\u4f60\u89c9\u5f97\u5bf9\u4f60\u6709\u5e2e\u52a9\u5c31\u70b9\u4e2a\u8d5e\u5427\uff0c\u8c22\u8c22\u3002",
        "postTime": 1630883085,
        "uid": 394488,
        "name": "tzyt",
        "ccfLevel": 0,
        "title": "\u6d1b\u8c37P3087\uff0c[USACO13NOV]Farmer John has no Large Brown Cow S \u9898\u89e3"
    },
    {
        "content": "\u611f\u89c9\u8fd9\u662f\u4e00\u9053\u4ee3\u7801\u9898\n\n\u7ec4\u5408\u8ba1\u6570+\u4e71\u641e\n\n\u628a\u539f\u9898\u4e2d\u5355\u8bcd\u53d8\u4e3a\u8fdb\u5236\u5373\u53ef\n\n\u6ce8\u610f\uff1aFJ\u6ca1\u6709\u7684\u725b\u4e0d\u7b97\u5728\u6570\u91cf\u5185\uff08\u6211\u662f\u628a\u4ed6\u5df2\u6709\u7684\u7b2cK\u5934\u725b\u53d8\u6210\u6240\u6709\u725b\u4e2d\u7684\u7b2cP\u5934\u725b\uff0c\u4f46\u662f\u4ee3\u7801\u91cc\u4e00\u5f8b\u7528\u7684\u662fP\uff0c\u8bf7\u89c1\u8c05\uff09\n\n```c++\n#include<iostream>\n#include<cstdio>\n#include<map>\n#include<algorithm>\n#include<cmath>\n#define elc every_lost_cow\nusing namespace std;\n\nconst int maxp=35;\nconst int maxn=105;\nint every_lost_cow[maxn];\nint n, p, adj, k[maxp], w[maxp];\nstring s[maxp][maxn];\nstring c[maxn][maxp];\n\nint findd(int x, string y) {\n\tint j;\n\tfor(j=1; j <= k[x]; j++){\n\t\tif(s[x][j]==y)return j;\n\t}\n\treturn 0;\t\n}\n\nint tmp(string a, string b) {\n\tint i;\n\t\n\tfor(i=0; i < min(a.size(),b.size()); i++) {\n\t\tif(a[i] != b[i])return a[i] < b[i];\n\t}\n\t\n\treturn a.size() < b.size();\n}\n\nint turn(int x) {\n\tint t=0,i;\n\t\n\tfor(i=1; i <= adj; i++) {\n\t\tt=t+ w[i]*(findd(i,c[x][i])-1);\n\t}\n\t\n\treturn t+1;\n}\n\nint main() {\n\tcin>>n>>p;\n\t\n\tint ti, i, j;\n\tstring t;\n\t\n\tfor(i=1; i <= n; i++) {\n\t\tti=0;\n\t\t\n\t\tcin>>t;\n\t\twhile(t != \"no\")\n\t\t\tcin>>t;\n\t\t\n\t\tti++;\n\t\tcin>>c[i][ti];\n\t\twhile(c[i][ti] != \"cow.\") {\n\t\t\tif(!findd(ti, c[i][ti])) {\n\t\t\t\tk[ti]++;\n\t\t\t\ts[ti][k[ti]]=c[i][ti];\n\t\t\t}\n\t\t\tti++;\n\t\t\tcin>>c[i][ti];\n\t\t}\n\t\t\n\t\tadj=ti-1;\n\t}\n\t\n\tfor(i=1; i <= adj; i++){\n\t\tsort(s[i]+1,s[i]+1+k[i],tmp);\n\t}\n\t\n\tw[adj+1]=1;\n\tk[adj+1]=1;\n\tfor(i=adj; i >= 1; i--)\n\t\tw[i]=w[i+1]*k[i+1];\n\t\n//for(i=1; i <= n; i++) {\n//\tfor(int j=1; j <= k[i]; j++)\n//\t\tcout<<s[i][j]<<' ';\n//\tcout<<endl;\n//}\n\t\n\tfor(i=1; i <= n; i++) \n\t\telc[i]=turn(i);\n\t\n\tsort(elc+1,elc+1+n);\n\t\n\tfor(i=1; i <= n; i++) {\n\t\tif(elc[i] <= p) p++;\n\t\telse break;\n\t}\n\t\n//cout<<p<<endl;\n\t\n\tp--;\n\tfor(i=1; i <= adj; i++) {\n\t\tti=p/w[i]+1;\n\t\tcout<<s[i][ti]<<' ';\n\t\tp=p%w[i];\n\t}\n\t\n\treturn 0;\n}\n```",
        "postTime": 1532503261,
        "uid": 18883,
        "name": "CR_Raphael",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3087 \u3010[USACO13NOV]\u519c\u6c11\u7ea6\u7ff0\u6ca1\u6709\u5927\u68d5\u725bFarmer John has no Large Brown Cow\u3011"
    },
    {
        "content": "## Sol ##\n[blog\u98df\u7528](http://www.caolaoshi.men/index.php/archives/usaco13nov-fjhnlbc.html)\n\n~~\u54c7\u54c7\u54c7\uff0c\u6628\u665a\u8c03\u4e86\u4e00\u4e2a\u5c0f\u65f6\u6ca1\u8c03\u51fa\u6765\uff0c\u4eca\u5929\u65e9\u4e0a\u8c03\u4e86\u4e00\u4f1a\u5c31\u51fa\u6765\u4e86~~\u5751\u70b9\u4e0d\u7b97\u5f88\u591a\uff0c\u53ea\u662f\u6211\u6bd4\u8f83\u7c97\u5fc3\u2026\u2026\n\n\u62ff\u5230\u9898\uff0c\u4e00\u773c\u80af\u5b9a\u60f3\u5230\u548c\u6392\u5217\u7ec4\u5408\u6709\u5173\u7684\u77e5\u8bc6\uff0c\u5176\u5b9e\u7528\u5230\u7684\u4e5f\u4e0d\u662f\u592a\u591a\uff0c\u9996\u5148\u5bf9\u4e8e\u5355\u8bcd\u7684\u5b58\u50a8\uff0c\u6211\u4eec\u60f3\u65b9\u8bbe\u6cd5\u7684\u628a\u6bcf\u4e00\u884c\u548c\u6bcf\u4e00\u5217\u7684\u5355\u8bcd\u90fd\u5206\u522b\u5b58\u4e0b\u6765\uff0c\u4ee5\u540e\u90fd\u4f1a\u8c03\u7528\u5230\u7684\u3002\u7136\u540e\u9884\u5904\u7406\u51fa\u7b2c$i$\u5217\u7b2c$j$\u884c\u540e\u9762\u6709\u591a\u5c11\u79cd\u53ef\u80fd\u6027\u653e\u5230$qc$\u6570\u7ec4\u4e2d\uff0c\u9012\u63a8\u516c\u5f0f\uff1a\n\n$$qc_{i,j} = qc_{i+1,j} \u00d7  cnt[i+1]$$\n\n\u5728\u9884\u5904\u7406\u4e4b\u524d\u5462\uff0c\u6211\u4eec\u6c42\u51fa\u6bcf\u4e00\u5217\u4e0d\u540c\u7684\u5355\u8bcd\u6570\u91cf\uff0c\u5b58\u5230$cnt$\u6570\u7ec4\u4e2d\uff0c\u53ef\u4ee5\u6392\u597d\u5e8f\u4e4b\u540e\u7528\u7c7b\u4f3c\u6808\u7684\u505a\u6cd5\u505a\uff0c\u4e0d\u591a\u89e3\u91ca\u4e86\uff0c\u622a\u6b62\u5230\u73b0\u5728\uff0c\u6392\u5217\u7ec4\u5408\u7684\u77e5\u8bc6\u5df2\u7ecf\u5168\u90e8\u7528\u5b8c~\n\n\u7136\u540e\uff0c\u6211\u4eec\u6c42**\u5982\u679c\u6ca1\u6709\u5220\u9664(\u5728\u6240\u6709\u7684\u725b\u4e2d\u53bb\u6389\u6ca1\u6709\u7684\u725b)\u64cd\u4f5c\uff0c\u6211\u4eec\u8981\u67e5\u8be2\u7684$K$\u6240\u5bf9\u5e94\u7684\u4f4d\u7f6e\u3002**\u4ec0\u4e48\u53eb\u5bf9\u5e94\u7684\u4f4d\u7f6e\u5462\uff1f\u5c31\u662f\u5f00\u59cb\u6211\u4eec\u7684\u72b6\u538b\u4e86\uff1a**\u5bf9\u4e8e\u6bcf\u4e00\u5217\uff0c\u6bcf\u4e00\u4e2a\u5355\u8bcd\u90fd\u6807\u8bb0\u4e00\u4e0b\uff0c\u8be5\u5355\u8bcd\u662f\u8fd9\u4e00\u5217\u7684\u7b2c\u51e0\u4e2a\u5355\u8bcd\u3002**\u90a3\u4e48\u6211\u4eec\u7b2c\u4e00\u6b21\u6c42$K$\u7684\u4f4d\u7f6e\u7684\u65f6\u5019\uff0c\u5c31\u80fd\u628a\u6c42\u5f97\u7684\u8fd9\u4e9b\u4f4d\u7f6e\u5b58\u5230$Knum$\u6570\u7ec4\u4e2d\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u5220\u9664\u64cd\u4f5c\uff0c\u6240\u8c13\u5220\u9664\uff0c\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u7406\u89e3\u4e3a\uff1a**\u5982\u679c\u6709\u6bd4$K$\u7684\u4f4d\u7f6e\u5c0f\u7684\u6570\uff0c\u6211\u4eec\u5c31\u628a$K$\u5f80\u540e\u79fb\u3002**~~\u5e94\u8be5\u5f88\u5bb9\u6613\u7406\u89e3\u5427\u3002~~\u4e8e\u662f\u6211\u4eec\u5c31\u679a\u4e3e\u6bcf\u4e00\u884c\uff0c\u628a\u6bcf\u4e00\u884c\u7684\u51e0\u4e2a\u5355\u8bcd\u5bf9\u5e94\u7684\u4f4d\u7f6e\u5904\u7406\u51fa\u6765\uff0c\u5b58\u5230$Pnum$\u6570\u7ec4\u4e2d\uff0c\u7528$sol$\u51fd\u6570\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u6bd4$K$\u7684\u4f4d\u7f6e\u8981\u5c0f\uff0c$K$\u5c31\u540e\u79fb\u3002\u6700\u540e$Knum$\u4e2d\u7684\u6570\u5c31\u662f\u6211\u4eec\u7b54\u6848\u5728\u4ed6\u6240\u5728\u5217\u7684\u4f4d\u7f6e\uff0c\u8f93\u51fa\u5c31\u597d\u4e86\u3002\n\n\u518d\u8bf4\u8bf4\u628a\u5355\u8bcd\u8f6c\u5316\u4e3a\u4f4d\u7f6e\u7684\u505a\u6cd5\uff0c\u521a\u624d\u6211\u4eec\u7ef4\u62a4\u4e86\u7b2c$i$\u884c\u7b2c$j$\u5217\u540e\u9762\u7684\u53ef\u80fd\u6027\u3002\u6211\u4eec\u6bcf\u4e00\u5217\u6bcf\u4e00\u5217\u7684\u6c42\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5217\uff0c\u679a\u4e3e\u4ed6\u7684\u6bcf\u4e00\u884c\uff0c\u5982\u679c\u4ece\u679a\u4e3e\u5230\u7684\u8fd9\u4e00\u884c\u5411\u4e0a\uff0c\u6240\u6709\u53ef\u80fd\u6027\u7684\u603b\u548c\u6bd4\u6211\u4eec\u8981\u67e5\u7684\u4f4d\u7f6e\u8981\u5927\uff0c\u6211\u4eec\u5c31\u53d6\u8fd9\u4e00\u884c\uff0c\u66f4\u65b0\u6211\u4eec\u8981\u67e5\u7684\u4f4d\u7f6e\uff0c**\u66f4\u65b0\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u8bb0\u5f97\u4e58\u4e0a\u884c\u6570\u51cf\u4e00\uff01**\n\n**\u51e0\u4e2a\u6613\u9519\u7684\u5730\u65b9\uff1a**\n\n1.\u6700\u540e\u6bd4\u8f83\u6bcf\u4e00\u884c\u4e0e$K$\u6240\u5bf9\u5e94\u7684\u4f4d\u7f6e\u7684\u65f6\u5019\uff0c\u4e00\u4f4d\u4e00\u4f4d\u7684\u6bd4\u8f83\uff0c\u53d1\u73b0\u5c0f\u7684\uff0c\u7acb\u5373\u505c\u6b62\uff0c\u6ce8\u610f\uff0c\u4e0d\u662f$break$\uff0c\u662f$return$\uff0c\u56e0\u4e3a\u9898\u76ee\u4e2d\u53ef\u80fd\u4f1a\u6709\u6bd4\u8f83\u7684\u4e24\u4e2a\u5b57\u7b26\u4e32\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u5bf9\u5e94\u76f8\u7b49\u7684\u60c5\u51b5\uff0c\u56e0\u6b64\u5728\u6700\u540e\u6253\u4e0a\u6807\u8bb0\u5c31\u884c\u3002\n\n2.\u628a\u6bcf\u4e00\u4e2a\u5355\u8bcd\u8f6c\u5316\u4e3a\u6bcf\u4e00\u5217\u7684\u7b2c\u51e0\u4e2a\u5355\u8bcd\u7684\u65f6\u5019\uff0c\u6ce8\u610f\u4e24\u4e2a\u5730\u65b9\uff0c\u7b2c\u4e00\u4e2a\u5c31\u662f\u76f8\u7b49\u7684\u60c5\u51b5\uff0c\u5982\u679c\u76f8\u7b49\uff0c\u540e\u9762\u7684\u76f4\u63a5\u53d6\u6700\u540e\u4e00\u884c\uff1b\u7b2c\u4e8c\u79cd\u662f\u6700\u540e\u4e00\u5217\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u5c31\u53ef\u4ee5\u8d4b\u503c\u3002\n\n## Code ##\n\n```\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<algorithm>\nusing namespace std;\n\nstruct Letr {\n\tint group;\n\tstring adj;\n\tbool operator < (const Letr &a) const {\n\t\treturn adj < a.adj;\n\t}\n};\nLetr adj[30005];\nvector<string>str[350];\nint n , k , num , top = 0 , cnt[350] , qc[350][1050], knum[350] , pnum[350], flag;\nstring gro[350][1050];\n\nint jud(string s) {\n\tif(s != \"Farmer\" && s != \"John\" && s != \"has\" && s != \"no\" && s != \"cow.\")\n\t\treturn 1;\n\treturn 0;\n}\n\nvoid update(int t) {\n\tfor(int i=1; i<num; i++) {\n\t\tint sum = 0;\n\t\tfor(int j=1; j<=cnt[i]; j++) {\n\t\t\tsum += qc[i][j];\n\t\t\tif(sum == t) {\n\t\t\t\tknum[i] = j;\n\t\t\t\tfor(int l=i+1; l<=num; l++)\n\t\t\t\t\tknum[l] = cnt[i];\n\t\t\t\treturn ;\n\t\t\t}\n\t\t\tif(sum > t) {\n\t\t\t\tknum[i] = (j-1<1)?1:j;\n\t\t\t\tt -= (qc[i][(j-1<1)?1:(j-1)]*(j-1));\n\t\t\t\tbreak;\t\t\n\t\t\t}\n\t\t}\n\t}\n\tknum[num] = t;\n} \n\nvoid sol(int x[] , int y[]) {\n\tfor(int i=1; i<=num; i++) {\n\t\tif(x[i] > y[i])\n\t\t\treturn;\n\t\tif(x[i] < y[i]) {\n\t\t\tflag = 1;\n\t\t\treturn;\t\t\n\t\t}\n\t}\n\tflag = 1;\n}\n\nint main() {\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1; i<=n; i++) {\n\t\tstring s;\n\t\tnum = 0;\n\t\twhile(1) {\n\t\t\tcin>>s;\n\t\t\tif(jud(s)) {\n\t\t\t\tnum++;\n\t\t\t\tstr[i].push_back(s);\n\t\t\t\tadj[++top].adj = s;\n\t\t\t\tadj[top].group = num;\n\t\t\t}\n\t\t\tif(s == \"cow.\")\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tsort(adj , adj+top+1);\n\tfor(int i=1; i<=top; i++) {\n\t\tif(adj[i].adj == adj[i-1].adj && adj[i].group == adj[i-1].group)\n\t\t\tcontinue;\n\t\tgro[adj[i].group][++cnt[adj[i].group]] = adj[i].adj;\n\t}\n\tfor(int i=1; i<=n; i++)\n\t\tqc[num][i] = 1;\n\tfor(int i=num-1; i>=1; i--)\n\t\tfor(int j=1; j<=n; j++)\n\t\t\tqc[i][j] = qc[i+1][j]*cnt[i+1];\n\tupdate(k);\n\tfor(int i=1; i<=n; i++) {\n\t\tflag = 0;\n\t\tfor(int j=0; j<str[i].size(); j++) {\n\t\t\tfor(int l=1; l<=cnt[j+1]; l++) {\n\t\t\t\tif(str[i][j] == gro[j+1][l]) {\n\t\t\t\t\tpnum[j+1] = l;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\t\t\n\t\t}\n\t\tsol(pnum , knum);\n\t\tif(flag) {\n\t\t\tk++;\n\t\t\tupdate(k);\n\t\t}\n\t}\n\tfor(int i=1; i<=num; i++)\n\t\tcout<<gro[i][knum[i]]<<\" \";\n\treturn 0;\n}\n```\n\n\n  [1]: https://www.luogu.org/problemnew/show/P3087",
        "postTime": 1535416718,
        "uid": 37427,
        "name": "\u66f9\u8001\u5e08",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3087 \u3010[USACO13NOV]\u519c\u6c11\u7ea6\u7ff0\u6ca1\u6709\u5927\u68d5\u725bFarmer John has no Large Brown Cow\u3011"
    }
]