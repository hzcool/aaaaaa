[
    {
        "content": "\u8bbe $f_i$ \u4e3a\u4ec5\u8003\u8651\u524d $i$ \u4e2a\u4f4d\u7f6e\u7684\u7b54\u6848\u3002\n\n$f_i=\\max\\{f_j-sum(j+1,i)+calc(j+1,i),f_{i-1}\\}$\n\n$sum(j+1,i)$ \u4e3a $c$ \u533a\u95f4\u548c\uff0c$calc(i,j)$ \u4e3a\u5b8c\u5168\u5728 $[i,j]$ \u4e2d\u7684\u6f14\u51fa\u6536\u76ca\u548c\u3002\n\n\u505a\u4e00\u4e2a\u626b\u63cf\u7ebf\uff08\u6216\u8005\u53eb\u7ebf\u6bb5\u6811\u4f18\u5316 dp\uff09\u5373\u53ef\u89e3\u51b3\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<set>\n#include<algorithm>\n#define pb push_back\n#define mp std::make_pair\n#define fir first\n#define sec second\ntypedef std::pair<int, int> pii;\ntypedef std::vector<int> veci;\ntypedef std::vector<pii> vecpii;\ntypedef long long ll;\nll Abs(ll x) { return x < 0 ? -x : x; }\nll Max(ll x, ll y) { return x > y ? x : y; }\ntemplate <typename T>\nT& read(T& r) {\n    r = 0; bool w = 0; char ch = getchar();\n    while(ch < '0' || ch > '9') w = ch == '-' ? 1 : 0, ch = getchar();\n    while(ch >= '0' && ch <= '9') r = r * 10 + (ch ^ 48), ch = getchar();\n    return r = w ? -r : r;\n}\nconst int N = 2000100;\nint n, m;\nll c[N], f[N];\n#define ls tree[x].lson\n#define rs tree[x].rson\n#define tl tree[x].l\n#define tr tree[x].r\nint trnt;\nstruct SGT {\n\tint l, r, lson, rson;\n\tll mx, tag;\n}tree[N << 1];\ninline void pushup(int x) { tree[x].mx = Max(tree[ls].mx, tree[rs].mx); }\ninline void pushdown(int x) {\n\tif(tree[x].tag) {\n\t\tll p = tree[x].tag;\n\t\ttree[ls].mx += p; tree[rs].mx += p; \n\t\ttree[ls].tag += p; tree[rs].tag += p;\n\t\ttree[x].tag = 0;\n\t}\n}\nint build(int l, int r) {\n\tint x = ++trnt;\n\ttl = l; tr = r;\n\tif(l == r) return x;\n\tls = build(l, (l+r)>>1); rs = build(tree[ls].r+1, r);\n\tpushup(x); return x;\n}\nvoid modify(int x, int l, int r, ll v) {\n\tif(tl >= l && tr <= r) {\n\t\ttree[x].mx += v;\n\t\ttree[x].tag += v;\n\t\treturn ;\n\t}\n\tint mid = (tree[x].l + tree[x].r) >> 1;\n\tpushdown(x);\n\tif(mid >= l) modify(ls, l, r, v);\n\tif(mid < r) modify(rs, l, r , v);\n\tpushup(x);\n}\nll query(int x, int l, int r) {\n\tif(tl >= l && tr <= r) return tree[x].mx;\n\tint mid = (tree[x].l + tree[x].r) >> 1; ll sumq = 0;\n\tpushdown(x);\n\tif(mid >= l) sumq = Max(sumq, query(ls, l, r));\n\tif(mid < r) sumq = Max(sumq, query(rs, l, r));\n\tpushup(x);\n\treturn sumq;\n}\nvoid Modify(int l, int r, ll v) { modify(1, l+1, r+1, v); }\nll Query(int l, int r) { return query(1, l+1, r+1); }\n#undef ls\n#undef rs\n#undef tl\n#undef tr\nstruct Node {\n\tint l, r;\n\tll v;\n}q[N];\nbool cmp(Node x, Node y) {\n\treturn x.r < y.r;\n}\nsigned main() {\n\tread(n); read(m);\n\tfor(int i = 1; i <= n; ++i) read(c[i]);\n\tbuild(1, n+1);\n\tfor(int i = 1; i <= m; ++i) read(q[i].l), read(q[i].r), read(q[i].v);\n\tstd::sort(q + 1, q + m + 1, cmp);\n\tint top = 1;\n\tfor(int i = 1; i <= n; ++i) {\n\t\tModify(0, i-1, -c[i]);\n\t\twhile(q[top].r == i && top <= m) {\n\t\t\tModify(0, q[top].l-1, q[top].v);\n\t\t\t++top;\n\t\t}\n\t\tf[i] = Query(0, i-1);\n\t\tf[i] = Max(f[i], f[i-1]);\n\t\tModify(i, i, f[i]);\n\t}\n\tprintf(\"%lld\\n\", f[n]);\n\treturn 0;\n}\n```",
        "postTime": 1631334575,
        "uid": 223298,
        "name": "do_while_true",
        "ccfLevel": 8,
        "title": "\u300c\u9898\u89e3\u300d\u6d1b\u8c37P7867 \u300cEVOI-RD1\u300d\u9a6c\u620f\u56e2"
    },
    {
        "content": "## P7867 \u9a6c\u620f\u56e2 - \u5b98\u65b9\u9898\u89e3\n\n#### \u9898\u5916\u8bdd\n\u5148\u8bf4\u4e24\u53e5\uff0c\u8fd9\u4e2a\u9898\u786e\u5b9e\u662f\u633a\u90a3\u5565\uff0c\u9898\u76ee\u672c\u8eab\u4e0d\u96be\uff0c\u4f46\u662f\u5374\u5f88\u5bb9\u6613\u5c31\u628a\u89e3\u6cd5\u60f3\u7684\u975e\u5e38\u9ebb\u70e6 ~~\uff08\u6211\u4e00\u5f00\u59cb\u5c31\u60f3\u6210\u4e86\u56fe\u8bba~~ \uff0c\u6700\u540e\u5728\u51e0\u4f4d\u7237\u7684\u6307\u6b63\u4e0b\u4fee\u6b63\u4e86\u505a\u6cd5\uff0c\u5176\u5b9e\u8fd9\u9898\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\u3002\n\n***\n\n\u5148\u5206\u6790\u4e00\u4e0b\u9898\u610f\uff0c\u7b80\u5316\u4e00\u4e0b\u5c31\u662f\uff1a\n\n\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u7136\u540e\u7ed9\u51fa\u51e0\u4e2a\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9\u548c\u5176\u4ef7\u503c\uff0c\u8ba9\u4f60\u9009\u62e9\u5176\u4e2d\u7684\u51e0\u4e2a\uff0c\u603b\u82b1\u8d39\u662f\u533a\u95f4\u7684\u5728\u5e8f\u5217\u4e0a\u7684 **\u5e76\u96c6** \u4e4b\u548c\uff0c\u603b\u4ef7\u503c\u662f\u8fd9\u4e9b **\u9009\u62e9\u7684\u533a\u95f4\u7684\u4ef7\u503c\u4e4b\u548c** \uff0c\u6700\u540e\u8981\u6c42\u7684\u7b54\u6848\u5c31\u662f\u603b\u4ef7\u503c\u51cf\u603b\u82b1\u8d39\u7684\u6700\u5927\u503c\u3002\n\n\u6211\u4eec\u8bbe $f_i$ \u8868\u793a\u524d $i$ \u4e2a\u821e\u53f0\u4e14\u4ee5\u7b2c $i$ \u4e2a\u821e\u53f0\u4f5c\u4e3a **\u6700\u540e\u4e00\u4e2a** \u533a\u95f4\u7684 **\u53f3\u7aef\u70b9** \u6240\u80fd\u4ea7\u751f\u7684\u6700\u5927\u5229\u76ca\u3002\u7136\u540e\u5148\u5904\u7406\u51fa $sum(j,i)$ \u8868\u793a\u6240\u6709\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9\u5728 $j \\sim i$ \u8fd9\u6bb5\u91cc\u9762\u7684\u4ef7\u503c\u4e4b\u548c \u548c $s(j,i)$ \u8868\u793a\u7b2c $j$ \u4e2a\u5230\u7b2c $i$ \u4e2a\u821e\u53f0\u6240\u8981\u7684\u8d39\u7528\u3002\n\n\u663e\u7136\uff0c\u6211\u4eec\u6700\u540e\u9009\u5b8c\u533a\u95f4\uff0c\u4f1a\u53d1\u73b0\u6211\u4eec\u9009\u62e9\u7684\u6240\u6709\u533a\u95f4\u4e00\u5b9a\u662f\u51e0\u4e2a **\u4e0d\u76f8\u4ea4** \u7684 **\u8fde\u7eed\u533a\u95f4** \uff0c\u90a3\u6211\u4eec\u8003\u8651\u679a\u4e3e\u6bcf\u4e2a\u70b9\u5f53\u505a\u67d0\u4e2a\u533a\u95f4\u7684 **\u53f3\u7aef\u70b9** \uff0c\u518d\u679a\u4e3e\u5f53\u524d\u8fd9\u4e2a\u533a\u95f4\u7684\u5de6\u7aef\u70b9\uff0c\u6c42\u4e00\u4e2a\u5f53\u524d\u8fd9\u4e2a\u533a\u95f4\u7684\u6700\u5927\u503c\uff0c\u6700\u540e\u518d\u628a\u6bcf\u4e00\u4e2a\u533a\u95f4\u7684\u6700\u5927\u503c\u52a0\u8d77\u6765\uff0c\u5c31\u662f\u7b54\u6848\u4e86\u3002\n\n$sum(j,i)$ \u7684\u5904\u7406\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2avector\u6570\u7ec4 $vc_i$ \u8bb0\u5f55\u4ee5 $i$ \u4e3a\u53f3\u7aef\u70b9\u7684\u533a\u95f4\uff0c\u7136\u540e\u6211\u4eec\u6bcf\u6b21\u679a\u4e3e $i$ \u7684\u65f6\u5019\u5c31\u628a\u65b0\u7684 $i$ \u6570\u7ec4\u5185\u7684\u533a\u95f4\u7684\u5f71\u54cd\u52a0\u8fdb\u53bb\uff0c\u6bcf\u4e00\u4e2a\u533a\u95f4\u6211\u4eec\u4f1a\u5f71\u54cd\u7684 $sum(j,i)$ \u91cc\u9762\u7684 $j$ \u503c\u5c31\u53ea\u6709\u5f53\n$j \\le$ \u5f53\u524d\u533a\u95f4\u7684\u5de6\u7aef\u70b9\n\u8fd9\u4e2a\u6761\u4ef6\u6ee1\u8db3\u7684\u65f6\u5019\u4f1a\u6709\u5f71\u54cd\uff0c\u6240\u4ee5\u6211\u4eec\u628a $1$ \u5230\u5f53\u524d\u8fd9\u4e2a\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u7ed9\u533a\u95f4\u52a0\u4e0a\u5f53\u524d\u533a\u95f4\u7684\u4ef7\u503c\uff08 ~~\u53ef\u80fd\u4f1a\u6709\u70b9\u7ed5\uff0c~~ \u4ed4\u7ec6\u60f3\u60f3\u5c31\u660e\u767d\u4e86\uff09\u3002\n\n$s(j,i)$ \u7684\u5904\u7406\u5c31\u7528\u4e00\u4e2a\u524d\u7f00\u548c\u5c31\u597d\u4e86\u3002\n\n\u7531\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u8fd9\u4e48\u4e00\u4e2a\u65b9\u7a0b\u5f0f\uff1a\n\n$$\nf_i = \\max ( f_{i-1} , \\max ( f_{j-1} + sum(j,i) + s(j,i)  (1 \\le j \\le i ) ) )\n$$\n\n\u4e0a\u9762\u90a3\u4e2a\u5f0f\u5b50\u7b2c\u4e8c\u4e2a $max$ \u4e4b\u524d\u7684\u4e1c\u897f\u90fd\u5f88\u597d\u7406\u89e3\uff0c\u8bf4\u4e00\u4e0b\u7b2c\u4e8c\u4e2a $max$ \u91cc\u9762\u7684\u4e1c\u897f\u3002\n\n$f_{j-1}$ \u8868\u793a\u7b2c $j$ \u4e2a\u4e4b\u524d\u6700\u5927\u7684\u5229\u76ca\uff0c\u6240\u4ee5\u8fd9\u540e\u534a\u90e8\u5206\u7684\u5f0f\u5b50\u8868\u793a\u6709\u4e00\u4e2a\u4ece $j$ \u5230 $i$ \u7684\u533a\u95f4\u6211\u4eec\u5168\u90e8\u9009\u62e9\u3002\n\n\u8fd9\u6837\u5b50\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n^2)$ \u7ea7\u522b\u7684\u89e3\u6cd5\uff0c\u4f46\u662f\u6570\u636e\u8303\u56f4\u662f $10^6$\uff0c\u6240\u4ee5\u80af\u5b9a\u4f1a\u70b8\uff0c\u8003\u8651\u4f18\u5316\u3002\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u6574\u4e2a\u5f0f\u5b50\u5176\u5b9e\u662f\u7531\u4e24\u4e2a $max$ \u7ec4\u6210\u7684\uff0c\u800c\u4e14\u6211\u4eec\u53d1\u73b0\u7b2c\u4e00\u4e2a $max$  \u53ef\u4ee5 $O(1)$ \u505a\uff0c\u7b2c\u4e8c\u4e2a $max$ \u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6765\u4f18\u5316\uff0c\u800c\u4e14\u6211\u4eec\u52a0\u5165\u65b0\u7684\u533a\u95f4\u65f6\u4e5f\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6765\u533a\u95f4\u52a0\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u4e3a $O(n \\log n)$\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u7684\u8bdd\uff0c\u770b\u4ee3\u7801\u5427\u3002~~\u7801\u98ce\u7a0d\u5fae\u6709\u70b9\u5947\u602a\uff0c\u5e0c\u671b\u4e0d\u5f71\u54cd\u9605\u8bfb\u3002~~\n\n## **Code\uff1a**\n\n```cpp\n#include <iostream>\n#include <vector>\n#include <cstdio>\nusing namespace std ;\n\nconst long long INF = 0x3f3f3f3f3f3f3f3f ;\n\nstruct Node\n{\n\tint l , r ;\n\tlong long v ;\n} q[1000005] ;\n\nint n , m ;\nlong long s[1000005] , f[1000005] , t[4000005] , lz[4000005] ;\nvector < int > vc[1000005] ;\n\nvoid build ( int k , int l , int r )\n{\n\tif ( l == r )\n\t{\n\t\tt [ k ] = s [ l - 1 ] ;\n\t\treturn ;\n\t}\n\tint mid = ( l + r ) >> 1 ;\n\tbuild ( k << 1 , l , mid ) ;\n\tbuild ( k << 1 | 1 , mid + 1 , r ) ;\n\tt [ k ] = max ( t [ k << 1 ] , t [ k << 1 | 1 ] ) ;\n}\n\nvoid pushdown ( int k )\n{\n\tif ( lz [ k ] )\n\t{\n\t\tt [ k << 1 ] += lz [ k ] ;\n\t\tt [ k << 1 | 1 ] += lz [ k ] ;\n\t\tlz [ k << 1 ] += lz [ k ] ;\n\t\tlz [ k << 1 | 1 ] += lz [ k ] ;\n\t\tlz [ k ] = 0 ;\n\t}\n}\n\nvoid change ( int k , int l , int r , int x , int y , long long z )\n{\n\tif ( x <= l && r <= y )\n\t{\n\t\tt [ k ] += z ;\n\t\tlz [ k ] += z ;\n\t\treturn ;\n\t}\n\tpushdown ( k ) ;\n\tint mid = ( l + r ) >> 1 ;\n\tif ( x <= mid )\n\t\tchange ( k << 1 , l , mid , x , y , z ) ;\n\tif ( y > mid )\n\t\tchange ( k << 1 | 1 , mid + 1 , r , x , y , z ) ;\n\tt [ k ] = max ( t [ k << 1 ] , t [ k << 1 | 1 ] ) ;\n}\n\nlong long query ( int k , int l , int r , int x , int y )\n{\n\tif ( x <= l && r <= y )\n\t\treturn t [ k ] ;\n\tpushdown ( k ) ;\n\tint mid = ( l + r ) >> 1 ;\n\tlong long res = -INF ;\n\tif ( x <= mid )\n\t\tres = query ( k << 1 , l , mid , x , y ) ;\n\tif ( y > mid )\n\t\tres = max ( res , query ( k << 1 | 1 , mid + 1 , r , x , y ) ) ;\n\treturn res ;\n}\n\nint main ( )\n{\n\tcin >> n >> m ;\n\tfor ( int i = 1 ; i <= n ; ++ i )\n\t{\n\t\tlong long x ;\n\t\tcin >> x ;\n\t\ts [ i ] = s [ i - 1 ] + x ;\n\t}\n\tfor ( int i = 1 ; i <= m ; ++ i )\n\t{\n\t\tcin >> q [ i ] .l >> q [ i ] .r >> q [ i ] .v ;\n\t\tvc [ q [ i ] .r ] .push_back ( i ) ;\n\t}\n\tf [ 0 ] = 0 ;\n\tbuild ( 1 , 1 , n ) ;\n\tfor ( int i = 1 ; i <= n ; ++ i )\n\t{\n\t\tfor ( int j = 0 ; j < ( int ) vc [ i ] .size ( ) ; ++ j )\n\t\t\tchange ( 1 , 1 , n , 1 , q [ vc [ i ] [ j ] ] .l , q [ vc [ i ] [ j ] ] .v ) ;\n\t\tf [ i ] = max ( f [ i - 1 ] , query ( 1 , 1 , n , 1 , i ) - s [ i ] ) ;\n\t\tchange ( 1 , 1 , n , i + 1 , i + 1 , f [ i ] ) ;\n\t}\n\tcout << f [ n ] << endl ;\n\treturn 0 ;\n}\n```",
        "postTime": 1629975066,
        "uid": 68882,
        "name": "\u7075\u534e",
        "ccfLevel": 6,
        "title": "P7867 \u9a6c\u620f\u56e2 \u9898\u89e3"
    }
]