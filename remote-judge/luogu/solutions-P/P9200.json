[
    {
        "content": "## \u5b98\u65b9\u9898\u89e3\r\n\r\n\u6211\u4eec\u53d1\u73b0\uff0c\u5230\u5e95\u628a $n+1$ \u53f7\u5b9e\u9a8c\u8154\u63d2\u5230\u54ea\u91cc\u662f\u4e00\u4e2a\u5f88\u96be\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u4eec\u66b4\u529b\u679a\u4e3e\u63d2\u5165\u4f4d\u7f6e\u3002\r\n\r\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5c06 $s$ \u6570\u7ec4\u8fdb\u884c\u524d\u7f00\u548c\uff0c\u56e0\u4e3a $\\sum\\limits_{i=1}^{n+1} s_i=0$\uff0c\u6240\u4ee5\u4ee5 $i$ \u4e3a\u8d77\u70b9\uff0c\u8d70\u5230 $j$ \u4f4d\u7f6e\u65f6\uff0c\u7c92\u5b50\u7684\u542b\u7535\u8377\u91cf\u4e3a $s_j-s_{i-1}$\u3002\u8fd9\u4e00\u6b65\u76f8\u5f53\u4e8e\u65ad\u73af\u6210\u94fe\uff0c\u4f46\u662f\u4e0d\u500d\u957f\u3002\r\n\r\n\u5f53\u6211\u4eec\u786e\u5b9a $n+1$ \u63d2\u5165\u4f4d\u7f6e\u540e\uff0c\u53ea\u9700\u8981\u627e\u5230\u8d77\u70b9\u3002\u4e5f\u5c31\u662f\u627e\u5230\u4e00\u4e2a\u6574\u6570 $i\\in[1,n+1]$ \uff0c\u4f7f\u5f97 $\\sum\\limits_{j=1}^{n+1}|s_j-s_i|\\times c_j$ \u6700\u5c0f\u3002\u56e0\u4e3a\u6700\u7ec8\u4e5f\u9700\u8981\u5bf9\u6240\u6709\u8d77\u70b9\u8fdb\u884c\u679a\u4e3e\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06 $s_{i-1}$ \u6362\u6210 $s_i$\uff0c\u6548\u679c\u7b49\u4ef7\u3002\r\n\r\n\u770b\u5230\u7edd\u5bf9\u503c\uff0c\u6211\u4eec\u4e8e\u662f\u60f3\u5230\u628a $s$ \u4e22\u5230\u6570\u8f74\u4e0a\uff0c\u672c\u9898\u5c31\u5316\u7b80\u4e3a\u4e86\u6709 $n+1$ \u4e2a\u57ce\u5e02\uff0c\u7b2c $i$ \u4e2a\u5728 $s_i$ \u5904\uff0c\u6709 $c_i$ \u4e2a\u4eba\uff0c\u5e0c\u671b\u627e\u4e00\u4e2a\u57ce\u5e02\u5efa\u8d85\u5e02\u4f7f\u5f97\u6240\u6709\u4eba\u5230\u8d85\u5e02\u7684\u8ddd\u79bb\u603b\u548c\u6700\u5c0f\u3002\u8fd9\u5c31\u5316\u4e3a\u4e86\u6211\u4eec\u719f\u6089\u7684\u95ee\u9898\u3002\r\n\r\n\u663e\u7136\uff0c\u8d85\u5e02\u5e94\u8be5\u5efa\u5728\u6700\u5c0f\u7684 $i$ \u4f7f\u5f97 $\\sum\\limits_{j=1}^i c_{pos_j}\\ge \\sum\\limits_{j=i+1}^{n+1} c_{pos_j}$\u3002$pos$ \u6570\u7ec4\u4e3a\u6309\u7167 $s$ \u4e22\u5230\u6570\u7ec4\u4e0a\u540e\u7684\u987a\u5e8f\u3002\r\n\r\n\u5f53\u6211\u4eec\u66f4\u6539 $n+1$ \u7684\u4f4d\u7f6e\u65f6\uff0c\u76f8\u5f53\u4e8e\u524d\u7f00\u548c\u6570\u7ec4\u4e0a\u5355\u70b9\u4fee\u6539\u3002\r\n\r\n\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u4e8c\u5206\u5728 $O(\\log{n})$ \u7684\u590d\u6742\u5ea6\u5185\u627e\u5230\u6700\u4f18\u8d77\u70b9\uff0c\u53ea\u9700\u8981\u89e3\u51b3\u79fb\u4f4d\u53d1\u751f\u7684\u52a8\u6001\u95ee\u9898\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u56db\u4e2a\u6811\u72b6\u6570\u7ec4\u5206\u522b\u7ef4\u62a4 $s$ \u5927\u4e8e\u7b49\u4e8e\u8d77\u70b9\u7684 $\\sum s\\times c$\uff0c$\\sum c$\uff0c$s$ \u5c0f\u4e8e\u7b49\u4e8e\u8d77\u70b9\u7684 $\\sum s\\times c$\uff0c$\\sum c$\u3002\u5229\u7528\u8fd9\u56db\u4e2a\u503c\u548c $s_{start}$ \u80fd\u8ba1\u7b97\u51fa\u7ed9\u5b9a\u8d77\u70b9\u540e\u7684\u8ddd\u79bb\u548c\u3002\uff08\u76f8\u5f53\u4e8e\u62c6\u7edd\u5bf9\u503c\u5206\u7c7b\u8ba8\u8bba\uff09\r\n\r\n\u79bb\u6563\u5316\u662f\u5fc5\u987b\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e0d\u8d85\u8fc7 $2n$ \u4e2a\u53ef\u80fd\u51fa\u73b0\u7684 $s$ \u4e8b\u5148\u8fdb\u884c\u79bb\u6563\u5316\u3002\u8fd9\u6837\u5c31\u89e3\u51b3\u4e86\u8fd9\u4e00\u9898\u3002\u603b\u4f53\u590d\u6742\u5ea6 $\\mathcal O(n\\log^2n)$\u3002\r\n\r\nPS.\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u4e8c\u5206\u505a\u5230 $\\mathcal O(n\\log n)$\u3002",
        "postTime": 1679206530,
        "uid": 575320,
        "name": "yinhy09",
        "ccfLevel": 5,
        "title": "GMOI R2 T3 Solution"
    },
    {
        "content": "**\u672c\u9898\u89e3\u504f\u5411\u601d\u8def\u7684\u6e10\u8fdb\uff0c\u4e0d\u559c\u52ff\u55b7**\n\n\u5927\u524d\u63d0\u6709 $n$ \u79cd\u60c5\u51b5\uff0c\u5206\u522b\u662f $n+1$ \u52a0\u5165\u5230\u73af\u4e2d\u7684 $n$ \u79cd\u60c5\u51b5\u3002\n\n\u5c06\u73af\u91cd\u65b0\u7f16\u53f7\uff08$0\\sim n$\uff09\uff0c\u5df2\u77e5 $c_i$\uff0c$e_i$\u3002\n\n\u8bbe\u4ece $i$ \u53f7\u5f00\u59cb\uff0c\u8ba1\u7b97 $s_{i - 1} = 0, s_j=s_{j - 1} + e_j$ \u73af\u72b6\u524d\u7f00\u548c\uff1b\n\n\u6c42\n$$\n\\min_i\\sum_{j = 0} ^ n c_j \\times|s_j|\n$$\n\u5c31\u662f\u8bf4\uff0c$e$ \u7684\u524d\u7f00\u548c\u4e0e $c$ \u540c\u4f4d\u7ed3\u5408\uff0c\u524d\u7f00\u548c\u5f00\u59cb\u7684\u4f4d\u7f6e\u4f9d\u6b21\u5411\u540e\u3002\n\n\u6bcf\u4e00\u6b21\u8fed\u4ee3\uff0c$s_j \\to s_j - s_{i - 1}, s_{i - 2} = s_{\\text{all}}$\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u8981~~\u66b4\u529b~~\u76f4\u63a5\u7edf\u8ba1\uff08\u65e0\u8bba\u7528\u4ec0\u4e48\u7edf\u8ba1\u65b9\u6cd5\uff0c\u7531\u4e8e\u662f\u8ba1\u7b97\u6700\u5927\u503c\uff0c\u6700\u7ec8\u90fd\u9700\u8981\u8ba1\u7b97 $n^2$ \u79cd\u60c5\u51b5\uff09\u7684\u8bdd\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n^2)$\u3002\n\n\u76ee\u6807\uff1a$O(n) \\sim O(n \\log n)$\u3002\n\n---\n\n## sub1\n\n\u89c2\u5bdf\u7279\u6b8a\u6570\u636e\uff0c$i \\in [1,n+1](i\\in Z)$\uff0c\u6ee1\u8db3 $c_i=0$\u3002\n\n\u7531\u4e8e\u662f $c_i = 0$\uff0c\u5f0f\u5b50\u603b\u4e3a $0$\u3002\u7b54\u6848\u4e3a $0$\u3002\n\n---\n\n## sub3\n\n\u89c2\u5bdf\u7279\u6b8a\u6570\u636e\uff0c$i \\in [1,n+1](i\\in Z)$\uff0c\u6ee1\u8db3 $c_i=1$\u3002\n\n\u4e0e\u7279\u6b8a\u6027\u8d28 $A$ \u6709\u6240\u533a\u522b\u7684\uff0c\u662f\u540e\u9762 $c_i$ \u7684\u6570\u503c\u3002\n\n\u5e26\u5165\u3002\n\n\u5373\n$$\n\\min_i\\sum_{j = 1} ^ {n + 1} |s_j|\n$$\n\u9898\u610f\u53d8\u4e3a\u63d2\u5165\u4e00\u4e2a\u4e0b\u6807\u4e3a $i$ \u4f4d\u7f6e\u7684 $(e,c)_{i + 1}$ \u4f7f\u5f97\u4ece\u67d0\u4e00\u4f4d\u7f6e\u5f00\u59cb\u7edf\u8ba1\u7684\u73af\u5f62\u524d\u7f00\u548c\u7edd\u5bf9\u503c\u603b\u548c\u6700\u5c0f\u3002\n\n\u8981\u6c42 $O(n)$ \u6216 $O(n\\log n)$\u3002\n\n$i$ \u7684\u53d6\u820d\u5e76\u4e0d\u5408\u9002\u3002\n\n\u53ef\u4ee5\u6539\u53d8\u4e00\u4e0b\u524d\u7f00\u548c\u7684\u5f62\u5f0f\uff1a$s_i' = s_{i - 1}' + e_i$\uff0c\u5bf9\u5e94\u5230\u5f53 $s_i$ \u505a\u5f00\u5934\u65f6\u7684\u73af\u5f62\u524d\u7f00\u548c\uff0c$s_j = s_j' - s_{i - 1}'$\uff0c**\u8fd9\u91cc $s'$ \u8868\u793a\u4ee5 $1$ \u4f5c\u4e3a\u5f00\u5934\u7684\u524d\u7f00\u548c**\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u65e0\u8bba $s'$ \u8868\u793a\u4ece\u4f55\u5904\u5f00\u59cb\u7684\u524d\u7f00\u548c\uff0c\u8ba1\u7b97\u524d\u7f00\u548c\u7684\u65b9\u5f0f\u90fd\u662f $s_j = s_j' - s_{i - 1}'$\u3002\n\n\u8bc1\u660e\uff1a\u5f53 $j > i$ \u65f6\uff0c\u8fd9\u6761\u5f0f\u5b50\u662f\u539f\u5f62\u5f0f\u3002\u5f53 $i > j$ \u65f6\uff0c\u5373\u8de8\u8fb9\u754c\u8fdb\u884c\u4e86\u524d\u7f00\u548c\u65f6\uff0c$(s_j'-s_{i-1}') \\to (-\\sum_{q = i} ^ j e_q)$\uff1b\u7531\u4e8e\u6574\u4e2a\u73af\u52a0\u548c\u4e3a $0$\uff0c\u90a3\u4e48\u8fd9\u4e00\u6bb5\u7684\u76f8\u53cd\u6570\u6b63\u597d\u5c31\u662f\u8fd9\u4e00\u6bb5\u8de8\u8fb9\u754c\u7684\u524d\u7f00\u548c\u503c\u3002\n\n\u90a3\u4e48\u5c31\u53ef\u4ee5\u5c06 $s$ \u6570\u7ec4\u9002\u5f53\u8054\u60f3\u3002\n\n\u7531\u4e8e $i$ \u5e76\u4e0d\u597d\u964d\u4f4e\u679a\u4e3e\u590d\u6742\u5ea6\uff0c\u6240\u4ee5\u8fd9\u4e00\u6b65\u76f4\u63a5\u679a\u4e3e\u3002\uff08\u4fee\u6539\u63d2\u5165 $c_{n + 1}$ \u7684\u4f4d\u7f6e\u5bf9\u524d\u7f00\u548c\u7684\u5f71\u54cd\u4e3a\u5355\u70b9\u4fee\u6539\uff0c\u4e0d\u4f1a\u5f71\u54cd\u6574\u4f53\u590d\u6742\u5ea6\uff09\n\n\u6709\u4e86\u4e0a\u9762\u7684\u63d0\u793a\uff0c\u90a3\u4e48\u53ef\u4ee5\u8f6c\u6362\u4e3a\uff1a\n$$\n\\min_i \\sum_{j = 1} ^ {n + 1} |s_j' - s_{i - 1}'|\n$$\n\u5355\u72ec\u62bd\u51fa\u6765\uff0c\n$$\n\\sum_{j = 1} ^ {n + 1} |s_j' - s_i'|\\ \\ (\\text{\u4e3a\u65b9\u4fbf\u8ba8\u8bba\u5c06}\\ (i - 1) \\to i)\n$$\n\u8fd9\u6761\u5f0f\u5b50\u4e0d\u5c31\u662f\u6240\u6709\u70b9\u5230 $i - 1$ \u7684\u8ddd\u79bb\u4e4b\u548c\u5417\uff1f\n\n\u4e8e\u662f\u628a\u6570\u7ec4 $s$ \u62bd\u8c61\u5230\u5750\u6807\u8f74\u4e0a\uff0c\u90a3\u4e48\u95ee\u9898\u8f6c\u5316\u4e3a\u5728\u4e00\u4e2a\u70b9\u96c6\u4e2d\u9009\u62e9\u4e00\u4e2a\u70b9\u8ba9\u4f7f\u6240\u6709\u70b9\u5230\u8be5\u70b9\u7684\u8ddd\u79bb\u4e4b\u548c**\u6700\u5c0f**\u3002\u4e8e\u662f\u95ee\u9898\u5c31\u8f6c\u6362\u4e3a\u6211\u4eec\u719f\u6089\u7684\u95ee\u9898\u3002\n\n\u7ed3\u8bba\u662f\uff1a\u7406\u60f3\u5230\u6570\u8f74\u4e0a\u7684\u4e2d\u95f4\u7684\u4f4d\u7f6e\uff0c\u5373\u4f4d\u7f6e $i$ \u6ee1\u8db3\u5728\u4e2d\u95f4\u7684\u4f4d\u7f6e\u3002\n\n\u5982\u679c\u662f\u5076\u6570\u4e2a\u70b9\uff0c\u90a3\u4e48\u5de6\u53f3\u4e24\u8fb9\u7684\u70b9\u90fd\u662f\u6b27\u514b\u7684\u3002\n\n\u7406\u7531\uff0c\u4efb\u610f\u5411\u4e2d\u95f4\u79fb\u52a8\u8ddd\u79bb $x$\uff0c\u5e76\u5f53\u524d\u7684\u4f4d\u7f6e\u4e3a $i$\uff0c\u90fd\u4f1a\u589e\u52a0\u5c11 $(i - 1)x$ \u7684\u603b\u8d21\u732e\uff0c\u4e14\u51cf\u5c11 $(n - i + 1)x$\uff0c\u90a3\u4e48\u76f8\u51cf\u5c31\u662f $(2i-2-n)x$\u3002\u5f53 $i = n / 2 + 1$ \u5373 $2(i - 1) =n $ \u65f6\uff0c\uff08\u5c31\u662f\u8bf4\u6709\u5076\u6570\u4e2a\u70b9\u5e76\u5728\u4e2d\u5fc3\u5de6\u8fb9\uff09\u539f\u5f0f $=0$\u3002\u5373\u5f53 \u7531\u4e2d\u5fc3\u504f\u5de6\u4f4d\u7f6e \u5411 \u4e2d\u5fc3\u504f\u53f3\u4f4d\u7f6e \u79fb\u52a8\u65f6\uff0c\u79fb\u52a8\u8d21\u732e\u4e3a $0$\u3002\n\n\u5229\u7528\u8fd9\u4e2a\u7ebf\u6027\u7684\u6027\u8d28\uff0c\u53ef\u4ee5 $O(1)$ \u8ba1\u7b97\u51fa\u6700\u4f18\u7684**\u5f00\u59cb\u4f4d\u7f6e** $b$\u3002\n\n\u89e3\u51b3\u5f00\u59cb\u95ee\u9898\u540e\uff0c\u5c31\u5269\u4e0b\u7edf\u8ba1\u6700\u7ec8\u7684\u7b54\u6848\u3002\n\n\u90a3\u4e48\u5982\u4f55 $O(\\log n) \\text{ or } O(1)$ \u6c42\n$$\n\\sum_{j = 1} ^ {n + 1} |s_b' - s_j'|\n$$\n\u5176\u4e2d $b$ \u4e3a\u9009\u5b9a\u7684\u5f00\u59cb\uff0c\u5e76\u4e14\u5728 $s'$ \u6709\u5355\u70b9\u4fee\u6539\uff08\u63d2\u5165\u7684\u4f4d\u7f6e\uff09\u7684\u60c5\u51b5\u5462\uff1f\uff08\u6b64\u5904\u4e3a\u672c\u9898\u96be\u70b9\uff09\n\n\u5bf9 $s'$ \u6392\u5e8f\uff0c\u5f97\u5230 $t$\u3002\u62c6\u5f00\u8fd9\u6761\u5f0f\u5b50\uff0c\u53ef\u4ee5\u5f97\u5230\n$$\n\\sum_{j = 1} ^ {b'} (s_b' - s_j') \\cdot c_j + \\sum_{j = b' + 1} ^ {n + 1}(s_j' - s_b')\\cdot c_j\n$$\n\u6240\u4ee5\u6700\u540e\u7b54\u6848\u662f\n$$\n\\sum_{j = b' + 1} ^ {n + 1}s_j'\\cdot c_j -\\sum_{j = 1} ^ {b'} s_j' \\cdot c_j + s_b'\\cdot \\left(\\sum_{j = 1} ^ {b'} c_j- \\sum_{j = b' + 1} ^ {n + 1}c_j\\right)\n$$\n\u4e8e\u662f\u6211\u4eec\u53d1\u73b0\u9700\u8981\u7ef4\u62a4\u7684\u662f\u533a\u95f4\u7684 $\\sum s_j'\\cdot c_j$ \u548c $\\sum c_j$\u3002\n\n\u8003\u8651\u5230\u6bcf\u6b21\u6539\u53d8\u67d0\u4e00\u4e2a\u524d\u7f00\u548c\u4f4d\u7f6e\u7684\u65f6\u5019\u8981\u6c42 $\\log n$ \u505a\uff0c\u4fee\u6539\u7684\u5185\u5bb9\u662f\u4ec0\u4e48\uff1f\n\n\u4fee\u6539\u7684\u5c31\u662f $s_j'$\uff0c\u548c\u5bf9\u5e94 $c_j$ \u7684\u4f4d\u7f6e\u3002\uff08\u7531\u4e8e\u662f\u6709\u5e8f\u7684\uff0c\u6240\u4ee5\u5f97\u4fdd\u8bc1 $s_j'$ \u548c $c_j$ \u4f4d\u7f6e\u662f\u5bf9\u5e94\u7684\uff0c\u5426\u5219\u7edf\u8ba1\u4e0d\u4e86\uff09\n\n\u5982\u679c\u6bcf\u4e00\u6b21\u4fee\u6539 $s_j'$ \u90fd\u79fb\u52a8\u6574\u4e2a\u6570\u5217\u6765\u8ba9\u6574\u4e2a\u7ebf\u6bb5\u6811\u53d8\u5f97\u6709\u5e8f\uff0c\u90a3\u4e48\u5c31\u4e0d\u662f $O(\\log n)$ \u7684\u4e86\u3002\n\n\u53ef\u4ee5\u8003\u8651\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\uff0c\u7531\u4e8e\u6bcf\u6b21\u4fee\u6539\u7684\u5185\u5bb9\u662f\u786e\u5b9a\u7684\uff0c\u5e76\u4e14\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u5bf9\u5e94\u7684\u4fee\u6539\u7684\u6700\u7ec8\u503c\u662f\u786e\u5b9a\u552f\u4e00\u7684\uff0c\u90a3\u4e48\u53ef\u4ee5\u60f3\u5230\u5f00\u5230\u4e24\u500d\u7684\u7ebf\u6bb5\u6811\uff0c\u521d\u59cb\u5c06\u6240\u6709\u7684 $s_j'$ \u548c $s_j' - (e_j + e_{n + 1})$\uff08\u8fd9\u91cc\u7684\u5f0f\u5b50\u539f\u56e0\u5728\u540e\u9762\uff09\u90fd\u9884\u52a0\u5165\uff0c\u4e00\u8d77\u6392\u5e8f\uff0c\u5f97\u5230\u7684\u9884\u6392\u5e8f\u7ed3\u679c\u5c31\u5305\u542b\u4e86\u589e\u52a0\u4fee\u6539\u7684\u90e8\u5206\u3002\n\n\u89e3\u51b3\u4e86\u6709\u5e8f\u7684\u95ee\u9898\u4e4b\u540e\uff0c\u8003\u8651\u89e3\u51b3\u524d\u7f00\u548c\u6539\u53d8\u540e\uff0c\u6574\u4e2a\u524d\u7f00\u548c\u6570\u7ec4\u7684\u6539\u53d8\u3002\n\n\u8fd9\u662f\u6837\u4f8b\u524d\u7f00\u548c\u6570\u7ec4\u6539\u53d8\u7684\u89c4\u5f8b\uff1a\n\n```\n3 -5 1 1  3 -2 -1 0\n          1 3  2  2\n3 -5 1 1  3 -2 -1 0\n          1 3  2  2\n3 1 -5 1  3 4 -1 0\n          1 2 3  2\n1 3 -5 1  1 4 -1 0\n          2 1 3  2\n```\n\n\u53ef\u4ee5\u901a\u8fc7\u89c2\u5bdf\u6570\u636e\u5f97\u5230\u4ee5\u4e0b\u89c4\u5f8b\uff0c\n\n\u7531\u4e8e\u4e00\u5f00\u59cb $e_{n + 1}$ \u5df2\u7ecf\u9884\u52a0\u5165\u5230 $s'$ \u4e2d\uff0c\u90a3\u4e48\u8bbe\u5f53\u524d\u79fb\u52a8\u540e\u6765\u5230\u4e86 $i$ \u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u5c31\u8981\u4fee\u6539 $s_i \\to s_i - (e_i + e_{n + 1})$\u3002\n\n\u7ef4\u62a4\u7684\u65b9\u6cd5\uff0c\u6bcf\u6b21\u79fb\u52a8\u7684\u65f6\u5019\uff0c\u5148\u5220\u9664\u5f53\u524d\u7684 $s'$\uff0c\u518d\u52a0\u5165 $s_i - (e_i + e_{n + 1})$ \u5c31\u597d\u804a\u3002\u522b\u5fd8\u4e86\u79fb\u52a8 $c_i$\u3002\n\n---\n\n\u89e3\u51b3\u4e86\u6027\u8d28 B\uff0c\u5176\u5b9e\u5728\u6027\u8d28 B \u4e4b\u540e\u53ef\u4ee5\u76f4\u63a5\u505a\u6b63\u89e3\u4e86\u3002\u53ea\u662f\u9700\u8981\u591a\u7ef4\u62a4\u4e2a $c$ \u5c31\u53ef\u4ee5\u4e86\u3002\u6bcf\u6b21\u53ea\u9700\u8981\u79fb\u52a8\u4e00\u6b21 $c_{i}$ \u548c $c_{i + 1}$\uff0c\u540c\u65f6\u7ef4\u62a4\u4e00\u4e0b\u4e24\u4e2a $\\Sigma$ \u5c31\u53e3\u4ee5\u4e86\u3002\n\n\u5728\u524d\u6587\u4e2d\u5df2\u7ecf\u6697\u793a\u4e86\u542b $c_i$ \u7684\u505a\u6cd5\uff0c\u6240\u4ee5\u4e0d\u591a\u8bb2\u89e3\uff1b\u6211\u7684 Code\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <vector>\n#include <algorithm>\n\ntemplate<typename T>\nvoid read(T &r) { r = 0; static char ch, last; ch = getchar(), last = 'z'; while (ch < '0' || ch > '9') last = ch, ch = getchar(); while (ch >= '0' && ch <= '9') r = (r << 1) + (r << 3) + (ch ^ 48), ch = getchar(); r = (last == '-') ? -r : r; }\ntemplate<typename T, typename...Ts>\nvoid read(T &arg, Ts&...arg_left) { read(arg); read(arg_left...); }\n\ntemplate<typename T>\nvoid write(T x) { if (x < 0) putchar('-'), x = -x; int len = 0; static char ch[100]; while (x) ch[++len] = x % 10 + '0', x /= 10; if (!len) ch[++len] = '0'; while (len) putchar(ch[len--]); }\ntemplate<typename T, typename...Ts>\nvoid write(T arg, Ts...arg_left) { write(arg); putchar(' '); write(arg_left...); }\ntemplate<typename T>\nvoid writeln(T x) { write(x); putchar('\\n'); }\ntemplate<typename T, typename...Ts>\nvoid writeln(T arg, Ts...arg_left) { write(arg); putchar(' '); write(arg_left...); putchar('\\n'); }\n\n#define int long long\nconst int maxn = (int)(2e5 + 100) << 2;\nconst int inf = 0x3f3f3f3f3f3f3f3fll;\nint n;\nint c[maxn], e[maxn];\nint s[maxn], t[maxn], tot = 0;\n\nstruct Tree {\n    struct Node {\n        int l, r, lc, rc;\n        int c, x; // x mean s * c\n    } nds[maxn << 2];\n\n    int cnt = 0;\n    int init(int l, int r) {\n        int id = ++cnt;\n        nds[id] = {l, r, -1, -1, 0, 0};\n        if (l == r) return id;\n        int mid = (l + r) >> 1;\n        nds[id].lc = init(l, mid);\n        nds[id].rc = init(mid + 1, r);\n        return id;\n    }\n\n    void add(int u, int pt, int s, int c, int pos) {\n        nds[u].c += c * pos; nds[u].x += c * s * pos;\n        if (nds[u].l == nds[u].r) return;\n        int mid = (nds[u].l + nds[u].r) >> 1;\n        if (pt <= mid) add(nds[u].lc, pt, s, c, pos);\n        else add(nds[u].rc, pt, s, c, pos);\n    }\n\n    int queryc(int u, int l, int r) {\n        if (u == -1) return 0;\n        if (l == nds[u].l && nds[u].r == r) return nds[u].c;\n        int mid = (nds[u].l + nds[u].r) >> 1;\n        if (r <= mid) return queryc(nds[u].lc, l, r);\n        else if (l > mid) return queryc(nds[u].rc, l, r);\n        else return queryc(nds[u].lc, l, mid) + queryc(nds[u].rc, mid + 1, r);\n    }\n    int queryx(int u, int l, int r) {\n        if (u == -1) return 0;\n        if (l == nds[u].l && nds[u].r == r) return nds[u].x;\n        int mid = (nds[u].l + nds[u].r) >> 1;\n        if (r <= mid) return queryx(nds[u].lc, l, r);\n        else if (l > mid) return queryx(nds[u].rc, l, r);\n        else return queryx(nds[u].lc, l, mid) + queryx(nds[u].rc, mid + 1, r);\n    }\n\n    int find() {\n        int u = 1, c = 0, cpos = nds[1].c / 2;\n        while (nds[u].l != nds[u].r) {\n            if (c + nds[nds[u].lc].c <= cpos) {\n                c += nds[nds[u].lc].c;\n                u = nds[u].rc;\n            } else {\n                u = nds[u].lc;\n            }\n        }\n        return nds[u].l;\n    }\n\n    int query() {\n        int b = find(), qs;\n        int lc = queryc(1, 1, b), rc = queryc(1, b + 1, tot);\n        int lx = queryx(1, 1, b), rx = queryx(1, b + 1, tot);\n        if (lc - rc != 0) qs = queryx(1, b, b) / queryc(1, b, b);\n        else qs = 0;\n        return (lc - rc) * qs - (lx - rx);\n    }\n} tr;\n\n\n\nsigned main() {\n    #ifdef LOCAL\n        freopen(\".in\", \"r\", stdin);\n        freopen(\".out\", \"w\", stdout);\n    #endif\n\n    read(n);\n    for (int i = 1; i <= n + 1; ++i) read(c[i]);\n    for (int i = 1; i <= n; ++i) read(e[i]), t[++tot] = s[i] = s[i - 1] + e[i];\n    e[n + 1] = -s[n]; t[++tot] = s[n + 1] = s[n] + e[n + 1];\n    for (int i = 1; i <= n; i++) {\n        t[++tot] = s[i] - (e[i] - e[n + 1]);\n    }\n    std::sort(t + 1, t + tot + 1);\n\n    tr.init(1, tot);\n    for (int i = 1; i <= n + 1; i++) { // \u4e3a\u4ec0\u4e48\u662f n + 1\n        tr.add(1, std::lower_bound(t + 1, t + tot + 1, s[i]) - t, s[i], c[i], 1);\n    }\n    int ans = inf;\n    for (int i = n; i >= 1; i--) {\n        ans = std::min(ans, tr.query());\n        tr.add(1, std::lower_bound(t + 1, t + tot + 1, s[i]) - t, s[i], c[i], -1);\n        tr.add(1, std::lower_bound(t + 1, t + tot + 1, s[i + 1]) - t, s[i + 1], c[i + 1], -1); // \u4e3a\u4ec0\u4e48\u8981\u66f4\u65b0\u8fd9\u91cc\uff1f\n        // writeln(std::lower_bound(t + 1, t + tot + 1, s[i]) - t, tr.queryc(1, std::lower_bound(t + 1, t + tot + 1, s[i]) - t, std::lower_bound(t + 1, t + tot + 1, s[i]) - t));\n        s[i] -= (e[i] - e[n + 1]); std::swap(c[i], c[i + 1]);\n        tr.add(1, std::lower_bound(t + 1, t + tot + 1, s[i]) - t, s[i], c[i], 1);\n        tr.add(1, std::lower_bound(t + 1, t + tot + 1, s[i + 1]) - t, s[i + 1], c[i + 1], 1);\n    }\n    writeln(ans);\n    return 0;\n}\n\n```\n",
        "postTime": 1681708242,
        "uid": 414231,
        "name": "Lotuses",
        "ccfLevel": 0,
        "title": "Solution"
    },
    {
        "content": "\u6211\u5148\u8003\u8651\u679a\u4e3e\u63d2\u5165\u5728\u54ea\u91cc\uff0c\u56e0\u4e3a\u770b\u8d77\u6765\u8fd9\u4e2a\u8981\u63a8\u7ed3\u8bba\u8fc7\u4e8e\u590d\u6742\u3002\n\n\u90a3\u8003\u8651\u518d\u679a\u4e3e\u8d77\u70b9\uff0c\u5c1d\u8bd5\u53bb\u7ef4\u62a4\u7b54\u6848\u3002\u968f\u4fbf\u53d6\u4e2a\u8d77\u70b9\u7ef4\u62a4\u524d\u7f00\u548c\uff0c\u663e\u7136\u8d77\u70b9\u79fb\u52a8\u4e00\u4f4d\uff0c\u76f8\u5f53\u4e8e\u5168\u5c40\u52a0\u4e0a / \u51cf\u53bb\u4e00\u4e2a\u6570\uff0c\u7136\u540e\u4ea4\u6362\u4e00\u4e0b\u76f8\u90bb\u7684 $c$\uff0c\u7136\u540e\u6c42\u7edd\u5bf9\u503c\u4e58\u4e0a $c_i$ \u7684\u548c\u3002\u968f\u4fbf\u4e0a\u4e2a\u6570\u636e\u7ed3\u6784\u52a0\u4e0a\u61d2\u6807\u8bb0\u5dee\u4e0d\u591a\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u8003\u8651\u6b63\u89e3\uff0c\u6ce8\u610f\u5230\u4e00\u5708\u7684\u548c\u4e3a $0$\uff0c\u6240\u4ee5\u65e0\u8bba\u5728\u8d77\u70b9 $p$ \u4e4b\u524d\u8fd8\u662f\u4e4b\u540e\u7684\u4f4d\u7f6e $i$\uff0c\u5176\u7535\u8377\u91cf\u90fd\u53ef\u4ee5\u8868\u793a\u4e3a $s_i-s_{p-1}$\u3002\n\n\u7136\u540e\u5148\u524d\u90a3\u90e8\u5206\u6709\u70b9\u50cf\u52a0\u6743\u4e2d\u4f4d\u6570\u554a\uff0c\u662f\u4e0d\u662f\u505a\u5b8c\u4e86\u3002\n\n\u5c31\u662f\u5148\u6c42 $c$ \u4e4b\u548c\uff0c\u7136\u540e\u8003\u8651\u7b2c\u4e00\u4e2a\u8fbe\u5230 $\\dfrac{c}{2}$ \u7684\u6570\uff0c\u968f\u4fbf\u7ebf\u6bb5\u6811\u4e8c\u5206\u7ef4\u62a4\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define mid (l + r) / 2\nusing namespace std;\n\nconst int maxn = 300005;\ntypedef long long ll;\nconst ll inf = 0x3f3f3f3f3f3f3f3f;\nint n, num, rt;\nll ans = inf, b[maxn], c[maxn], e[maxn], s[maxn];\nstruct Seg {\n\tint l, r;\n\tll x, c, s;\n} t[maxn * 8];\nint tot;\nSeg merge(Seg p, Seg q) {\n\treturn {0, 0, p.x + q.x, p.c + q.c, p.s + q.s};\n}\nvoid insert(int &p, int l, int r, int i, int x, ll c) {\n\t// s = b[i]\n\tif (!p) p = ++tot;\n\tt[p].x += x, t[p].c += c * x, t[p].s += c * b[i] * x;\n\tif (l == r) return;\n\tif (i <= mid) insert(t[p].l, l, mid, i, x, c);\n\telse insert(t[p].r, mid + 1, r, i, x, c);\n}\n// \u5927\u4e8e k \u7684\u7b2c\u4e00\u4e2a\u6570\nint find(int p, int l, int r, ll x) {\n\tif (l == r) return l;\n\tif (t[t[p].l].c > x) return find(t[p].l, l, mid, x);\n\treturn find(t[p].r, mid + 1, r, x - t[t[p].l].c);\n}\n// \u7136\u540e\u67e5\u8be2\u4e00\u4e2a\u533a\u95f4\u548c\u3002\nSeg query(int p, int l, int r, int ql, int qr) {\n//\tcout << l << \" \" << r << \" \" << ql << \" \" <<qr << endl;\n\tif (r < ql || l > qr) return {0, 0, 0, 0};\n\tif (ql <= l && r <= qr) return t[p];\n\treturn merge(query(t[p].l, l, mid, ql, qr), query(t[p].r, mid + 1, r, ql, qr));\n}\nll get(int x) {\n\tif (x == -1) return inf;\n\tSeg tl = query(rt, 1, num, 1, x), tr = query(rt, 1, num, x + 1, num);\n\treturn tl.c * b[x] - tl.s + tr.s - tr.c * b[x];\n}\nsigned main() {\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n + 1; ++i) scanf(\"%lld\", c + i);\n\tfor (int i = 1; i <= n; ++i) scanf(\"%lld\", e + i), b[++num] = s[i] = s[i - 1] + e[i];\n\te[n + 1] = -s[n];\n\tfor (int i = n + 1; i >= 1; --i) b[++num] = s[i] + e[n + 1];\n\tsort(b + 1, b + 1 + num);\n\tnum = unique(b + 1, b + 1 + num) - b - 1;\n\tfor (int i = 1; i <= n + 1; ++i)\n\t\tinsert(rt, 1, num, lower_bound(b + 1, b + 1 + num, s[i]) - b, 1, c[i]);\n\tfor (int i = n; i >= 1; --i) {\n\t\tans = min(ans, get(find(rt, 1, num, t[rt].c / 2)));\n\t\tinsert(rt, 1, num, lower_bound(b + 1, b + 1 + num, s[i]) - b, -1, c[i]);\n\t\tinsert(rt, 1, num, lower_bound(b + 1, b + 1 + num, s[i + 1]) - b, -1, c[i + 1]);\n\t\ts[i] = s[i - 1] + e[n + 1], swap(c[i], c[i + 1]);\n\t\tinsert(rt, 1, num, lower_bound(b + 1, b + 1 + num, s[i]) - b, 1, c[i]);\n\t\tinsert(rt, 1, num, lower_bound(b + 1, b + 1 + num, s[i + 1]) - b, 1, c[i + 1]);\n\t}\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1680694584,
        "uid": 62440,
        "name": "MuelsyseU",
        "ccfLevel": 0,
        "title": "P9200 \u300cGMOI R2-T3\u300d\u7c92\u5b50\u73af\u6e38"
    }
]