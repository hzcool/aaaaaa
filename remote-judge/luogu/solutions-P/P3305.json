[
    {
        "content": "\u9996\u5148\u4e0d\u8981\u88ab\u6807\u9898\u8ff7\u60d1\u54e6,\u8fd9\u4e2a\u9898\u8ddf\u8d39\u7528\u6d41\u5173\u7cfb\u4e0d\u5927.\n\n\u7136\u540e\u5c31\u662f\u91cd\u8fb9,\u4e2a\u4eba\u8ba4\u4e3a\u91cd\u8fb9\u4e0d\u5e94\u53bb\u9664,\u7406\u7531\u5982\u4e0b:\n\n\u663e\u7136\u6839\u636e\u672c\u9898\u7684\u6a21\u578b,\u5728\u7b54\u6848\u7684\u6700\u5927\u6d41\u65b9\u6848\u4e2d\u6d41\u91cf\u6700\u9ad8\u7684\u8fb9\u6536\u8d39p\u5373\u53ef.\n\n\u8fd9\u6837\u5c31\u5bfc\u81f4\u7b80\u5355\u5408\u5e76\u8fb9\u53ef\u80fd\u4e0d\u5bf9. ~~\u867d\u7136\u8fd9\u79cd\u505a\u6cd5\u80fd\u9a97\u523080~~\n\n\u6b63\u89e3:\n\n\u5728\u7b54\u6848\u7684\u6700\u5927\u6d41\u65b9\u6848\u4e2d\u6d41\u91cf\u6700\u9ad8\u7684\u8fb9\u6536\u8d39p,\u8981\u6c42\u7b54\u6848\u6700\u5927\u6d41\u65b9\u6848\u6d41\u91cf\u6700\u591a\u7684\u8fb9\u5b9e\u9645\u6d41\u91cf\u6700\u5c0f.\u8003\u8651\u4e8c\u5206\u6d41\u91cf\u4e0a\u754c,\u5bf9\u4e8e\u4e0a\u754c\u5224\u65ad\u662f\u5426\u80fd\u5f62\u6210\u6700\u5927\u6d41.\n\n\u672c\u849f\u84bb\u7b2c\u4e00\u9053\u5b9e\u6570\u4e8c\u5206...\n\n```cpp\n#include<algorithm>\n#include<cctype>\n#include<cmath>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<iostream>\n#include<map>\n#include<queue>\n#include<stack>\n#include<vector>\n#define size 500010\n#define debug(x) cerr<<#x<<\"=\"<<x\n#define gc getchar()\n#define tp to[p]\n#define inf 1e9+9\n#define eps 1e-5\n#define ll long long\n#define db double\n#define rep(i,s,n) for (register int i=s;i<=n;i++)\n#define drep(i,n,s) for (register int i=n;i>=s;i--)\n#define il inline\nusing namespace std;\n\nil ll r()\n{\n    char c; ll x,f=1;\n    for (c=gc;!isdigit(c);c=gc) if (c=='-') f=-1; x=c-'0';\n    for (c=gc;isdigit(c);c=gc) x=(x<<1)+(x<<3)+c-'0';\n    return f*x;\n}\n\nint head[size],to[size],nxt[size],num=1,S,T,sta[size],q[size],n,m,cur[size];\ndb mx,len[size],lim=1e15,lenn[size],p;\n\nvoid add(int x,int y,db z)\n{\n    num++; to[num]=y;lenn[num]=z; nxt[num]=head[x];head[x]=num;\n}\n\nvoid create(int x,int y,db z) { add(x,y,z); add(y,x,0); }\n\nbool bfs()\n{\n\tint f=0,r=0;\n\tmemset(sta,-1,sizeof(sta));\n\tq[++r]=S,sta[S]=0;\n\twhile (f<r)\n\t{\n\t\tint x=q[++f]; \n\t\tfor (int p=head[x];p;p=nxt[p])\n\t\t\tif (len[p]>0&&sta[tp]==-1) sta[tp]=sta[x]+1,q[++r]=tp;\t\t\n\t}\n\tif (~sta[T]) return 1; return 0; \n}\n\ndb dfs(int x,db flow)\n{\n\tif (x==T) return flow;\n\tdb now=0,used=0;\n\tfor (int &p=cur[x];p;p=nxt[p])\n\t\tif (len[p]>0&&sta[tp]==sta[x]+1)\n\t\t{\n\t\t\tnow=dfs(tp,min(len[p],flow-used)); used+=now;\n\t\t\tlen[p]-=now; len[p^1]+=now; if (used==flow) break;\n\t\t}\n\treturn used; \n}\n\nvoid init()\n{\n\trep(i,1,num) len[i]=min(lenn[i],lim); \n}\n\ndb dinic()\n{\n\tdb ans=0;\n\twhile (bfs())\n\t{\n\t\trep(i,1,n) cur[i]=head[i];\n\t\tans+=dfs(S,1e9+7); \n\t}\n\treturn ans;\n}\n\nint main()\n{\n    n=r(),m=r(); S=1,T=n; cin>>p;\n    rep(i,1,m) \n    {\n    \tint x,y; db z;\n       \tscanf(\"%d%d%lf\",&x,&y,&z); create(x,y,z);\n    }\n    init(); \n    db mf=dinic();printf(\"%.4lf\\n\",mf);\n\tdb lb=0,rb=1e9,ans=0;\n\twhile (rb-lb>0.00001) \n\t{\n\t\tdb mid=(lb+rb)/2;\n\t\tlim=mid; init();\n\t\tdb nowflow=dinic();\n\t\tif (fabs(nowflow-mf)<0.00001) rb=mid,ans=mid;\n\t\telse lb=mid; \n\t}\n    lim=ans; init(); int t=dinic();  db mx=0;\n    for (int i=1;i<=num;i+=2)  mx=max(mx,len[i]); printf(\"%.5lf\",mx*p); \n    return 0;\n}\n\n```",
        "postTime": 1520478705,
        "uid": 44273,
        "name": "\u786b\u4ee3\u786b\u9178\u94a0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3305 \u3010[SDOI2013]\u8d39\u7528\u6d41\u3011"
    },
    {
        "content": "~~\u8fd9\u9053\u9898\u6807\u9898\u5199\u7740\u8d39\u7528\u6d41\uff0c\u53ef\u597d\u50cf\u5b9e\u9645\u4e0a\u8ddf\u8d39\u7528\u6d41\u6ca1\u6709\u751a\u5173\u7cfb\uff08\u8fd9\u4e0d\u662f\u5e9f\u8bdd\u5417\uff0c\u4e0d\u7136nodgd\u7ed9\u4f60\u653e\u5728\u6700\u5927\u6d41\u91cc\u5e72\u561b \u96fe\uff09~~\n\n### \u9898\u610f\uff1a\n\u7ed9\u51fa\u4e00\u4e2a\u56fe\uff0c\u7136\u540e$Alice$\u5728\u56fe\u4e0a ~~\uff08\u5f88\u81ed\u4e0d\u8981\u8138\u7684\uff09~~ \u5148\u8dd1\u4e00\u4e2a\u6700\u5927\u6d41\uff0c\u53ea\u8981\u6bcf\u4e2a\u8282\u70b9\u6d41\u5165\u91cf=\u6d41\u51fa\u91cf\u5c31\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u201c\u6700\u5927\u6d41\u201d\uff0c\n\n\u7136\u540e$Bob$\u9009\u4e00\u4e9b\u8fb9\u52a0\u8d39\u7528\uff0c\u6240\u6709\u8fb9\u7684\u52a0\u7684\u6700\u8d39\u7528=P\u3002\n\n\u603b\u8d39\u7528$=\\sum$ \u6bcf\u6761\u8fb9\u7684\u5b9e\u9645\u6d41\u91cf $\\times$ \u8fd9\u6761\u8fb9\u7684\u8d39\u7528\n\n\u7136\u540e$Ailce$\u5e0c\u671b\u6700\u7ec8\u7684\u603b\u8d39\u7528\u6700\u5c0f\uff0c$Bob$\u5e0c\u671b\u6700\u7ec8\u7684\u603b\u8d39\u7528\u6700\u5927\u3002\u4e14\u90fd\u91c7\u7528**\u6700\u4f18\u7b56\u7565**\uff0c\u6c42\u51fa\u6700\u5927\u6d41\u548c\u603b\u8d39\u7528\u3002\n\n----\n\u663e\u7136$Bob$\u7684\u7b56\u7565\u4e3a\uff1a\n> \u54ea\u91cc\u6d41\u91cf\u5927\uff0c\u5c31\u628a\u8d39\u7528\u4e00\u6b21\u6027\u5168\u7ed9\u5b83\u90a3\u4e00\u6761\u8fb9\n>\n> \u4e5f\u5c31\u627e\u5230\u5b9e\u9645\u6d41\u91cf\u6700\u5927\u7684\u4e00\u6761\u8fb9\uff0c\u5c06\u8fd9\u6761\u8fb9\u7684\u8d39\u7528\u4e3aP\uff0c**\u603b\u8d39\u7528=\u5b9e\u9645\u6d41\u91cf$\\times$P**\n\n$Alice$\u7684\u7b56\u7565\u4e3a\uff1a\n> \u8ba9\u5b9e\u9645\u6d41\u91cf\u6700\u5927\u7684\u8fb9\uff0c\u6700\u540e\u6d41\u51fa\u7684\u6d41\u91cf\u6700\u5c0f\u4e14\u5408\u6cd5\n\n-----\n\n#### \u5b9e\u73b0\uff1a\n\n\u7b2c\u4e00\u6b65\uff1a\u6c42\u539f\u56fe\u6700\u5927\u6d41\u4e00\u6b21\u3002\n\u7b2c\u4e8c\u90e8\uff1a\u6c42\u6700\u5927\u5b9e\u9645\u6d41\u91cf\u7684\u6700\u5c0f\u503c\uff08~~\u663e\u7136~~**\u4e8c\u5206**\uff09\n> \u9a8c\u8bc1 \u6700\u5927\u5b9e\u9645\u6d41\u91cf=K \u662f\u5426\u53ef\u884c\n\n> \u5c06\u539f\u56fe\u7684\u5bb9\u91cf\u5927\u4e8e>K\u7684\u8fb9\u7684\u5bb9\u91cf\u8bbe\u4e3aK\n\n> \u7136\u540e\u6c42\u6700\u5927\u6d41\uff0c\u9a8c\u8bc1\u662f\u5426\u7b49\u4e8e\u539f\u6765\u7684\u6700\u5927\u6d41\u5373\u53ef\n\n\n**\u5c0f\u6280\u5de7\uff1a\u56e0\u4e3a\u539f\u56fe\u4e0d\u53d8\uff0c\u53d8\u7684\u53ea\u662f\u6743\u503c\uff0c\u6240\u4ee5\u53ef\u4ee5\u53ea\u4fee\u6539\u8fb9\u6743\uff0c\u800c\u4e0d\u7528\u91cd\u65b0\u5efa\u56fe ~~\uff08\u5176\u5b9e\u4e5f\u5feb\u4e0d\u4e86\u591a\u5c11\uff09~~**\n\n$code(isap):$\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2005;\nconst int M=10005;\nconst double inf=1e10;\nint n,m,p,S,T,w[N];\nint Next[M],End[M],tot;\nint Last[N],_last[N],dis[N],gap[N];\ndouble len[M],flow_past;\nvoid cb(int x,int y,int z,int z0=0){\n    End[tot]=y,Next[tot]=Last[x],len[tot]=z,Last[x]=tot++;\n    End[tot]=x,Next[tot]=Last[y],len[tot]=z0,Last[y]=tot++;\n}\nvoid cg(double z){\n    len[tot++]=z;\n    len[tot++]=0;\n}\nvoid bfs(){\n    for(int i=1;i<=T;i++) dis[i]=n,gap[i]=0;\n    gap[0]=0;\n\tdis[n]=0;\n    queue<int> q;\n    q.push(n);\n    while(q.size()){\n        int x=q.front();\n        q.pop();\n        for(int i=Last[x];i;i=Next[i]){\n            int y=End[i];\n            if(dis[y]>dis[x]+1){\n                dis[y]=dis[x]+1;\n                q.push(y);\n            }\n        }\n    }\n    for(int i=1;i<=T;i++) gap[dis[i]]++,_last[i]=Last[i];\n}\ndouble isap(int x,double flow){\n    if(x==T) return flow;\n    double flow_now=0;\n    for(int &i=_last[x];i;i=Next[i]){\n        int y=End[i];\n        if(len[i]>1e-10 && dis[x]==dis[y]+1){\n            double f=isap(y,min(flow-flow_now,len[i]));\n            flow_now+=f;\n            len[i]-=f;\n            len[i^1]+=f;\n            if(flow_now+1e-10>=flow || dis[S]==n) return flow_now;\n        }\n    }\n    gap[dis[x]]--;\n    if(!gap[dis[x]]) dis[S]=n;\n    dis[x]++;\n    gap[dis[x]]++;\n    _last[x]=Last[x];\n    return flow_now;\n}\nbool check(double k){\n    tot=2;\n    for(int i=1;i<=m;i++) cg(min((double)w[i],k));\n    double flow=0;\n    bfs();\n    while(dis[S]<T) flow+=isap(S,inf);\n    if(flow+1e-10<flow_past) return false;\n    return true;\n}\nint main(){\n    scanf(\"%d %d %d\",&n,&m,&p);\n    S=1,tot=2,T=n;\n    int maxn=0;\n    for(int i=1;i<=m;i++){\n        int x,y;\n        scanf(\"%d %d %d\",&x,&y,&w[i]);\n\t\tcb(x,y,w[i]);\n        maxn=max(maxn,w[i]);\n    }\n    bfs();\n    while(dis[S]<T) flow_past+=isap(S,inf);\n    printf(\"%0.lf\\n\",flow_past);\n    double l=1,r=maxn+1,ans=0;\n    while(r-l>1e-7){\n        double mid=(l+r)*0.5;\n        if(check(mid)) r=mid;\n        else l=mid;\n    }\n    printf(\"%.4lf\\n\",l*p);\n    return 0;\n}\n```",
        "postTime": 1582694379,
        "uid": 156001,
        "name": "TheAutumnGlory",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3305 \u3010[SDOI2013]\u8d39\u7528\u6d41\u3011"
    },
    {
        "content": "\u9898\u76ee\u505a\u4e86\u4e00\u5e74\uff0c\u7ec8\u4e8e\u8c03\u51fa\u6765\u4e86\u3002\n\n\u4e8c\u5206+\u6700\u5927\u6d41\uff0c\u597d\u50cf\u65f6\u95f4\u590d\u6742\u5ea6\u8981\u6c42\u4e0d\u9ad8\uff0c\u4e0d\u8fc7\u6709\u4e9b\u4e1c\u897f\u8981\u6ce8\u610f\u5230\u3002\n\n1\u3001\u6709\u91cd\u8fb9\uff0cT\u7684\u8bdd\u6709\u53ef\u80fd\u662f\u56e0\u4e3a\u8fd9\u4e2a\u3002\n\n2\u3001\u5e94\u8be5\u5bf9\u5c0f\u6570\u8fdb\u884c\u4e8c\u5206\uff0c\u89e3\u91ca\u8d77\u6765\u6709\u70b9\u70e6\uff0c\u4f46\u4e00\u5b9a\u8981\u8003\u8651\u5230\u3002\n\n\u90bb\u63a5\u8868+dinic\uff0c\u7565\u957f\uff0c\u7b2c\u4e00\u6b21\u7528dinic\u3002\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cstdio>\n#include<iomanip>\n#include<queue>\nusing namespace std;\nstruct Edge{\n    double va;\n    int to,fx;\n    Edge(){}\n    Edge(int a,double b,int c):to(a),va(b),fx(c){};\n};\ndouble GX(double a,double b){\n    if(a<b) return a;\n    return b;\n}\nqueue<int> q;\nint n,m,s,t;\nvector<Edge> lu[128],cop[128];\nint dis[128];\nint done[128];\nint ans;\ndouble dfs(int pl,double p){\n    if(pl==t) return p;\n    double f;\n    int len=lu[pl].size();\n    for(int i=0;i<len;i++){\n        Edge &now=lu[pl][i];\n        if(now.va&&dis[now.to]==dis[pl]+1){\n            f=dfs(now.to,GX(p,now.va));\n            if(f){\n                now.va-=f;\n                lu[now.to][now.fx].va+=f;\n                return f;\n            }\n        }\n    }\n    return 0;\n}\nbool bfs(){\n    int st,len;\n    q.push(1);\n    memset(dis,-1,sizeof(dis));\n    dis[1]=0;\n    while(!q.empty()){\n        st=q.front();\n        q.pop();\n        len=lu[st].size();\n        for(int i=0;i<len;i++){\n            Edge &now=lu[st][i];\n            if(now.va&&dis[now.to]==-1){\n                dis[now.to]=dis[st]+1;\n                q.push(now.to);\n            }\n        }\n    }\n    return dis[t]!=-1;\n}\nbool pc(double a){\n    double tot=0;\n    double f;\n    for(int i=1;i<=n;i++){\n        memset(done,-1,sizeof(done));\n        for(int j=0;j<lu[i].size();j++){\n            if(done[lu[i][j].to]==-1){\n                lu[i][j].va=GX(a,cop[i][j].va);\n                done[lu[i][j].to]=j;\n            }\n            else{\n                lu[i][done[lu[i][j].to]].va+=GX(a,cop[i][j].va);\n            }\n        }\n    }\n    while(bfs()){\n        while((f=dfs(1,a))&&f>0.00001) tot+=f;\n    }\n    return tot==ans;\n}\nint main(){\n    cin>>n>>m>>s;\n    t=n;\n    for(int i=0;i<m;i++){\n        int a,b;\n        double c;\n        cin>>a>>b>>c;\n        cop[a].push_back(Edge(b,c,cop[b].size()));\n        cop[b].push_back(Edge(a,0.0,cop[a].size()-1));\n        lu[a].push_back(Edge(b,0.0,lu[b].size()));\n        lu[b].push_back(Edge(a,0.0,lu[a].size()-1));\n    }\n    int f;\n    for(int i=1;i<=n;i++){\n        memset(done,-1,sizeof(done));\n        for(int j=0;j<lu[i].size();j++){\n            if(done[lu[i][j].to]==-1){\n                lu[i][j].va=cop[i][j].va;\n                done[lu[i][j].to]=j;\n            }\n            else{\n                lu[i][done[lu[i][j].to]].va+=cop[i][j].va;\n            }\n        }\n    }\n    while(bfs()){\n        while(f=dfs(1,1008610086)) ans+=f;\n    }\n    cout<<ans<<\"\\n\";\n    double l=0,r=100000086,mid;\n    while(r-0.00001>l){\n        mid=(l+r)/2;\n        if(!pc(mid)) l=mid+0.00001;\n        else r=mid;\n    }\n    cout<<fixed<<setprecision(4)<<double(l*s)<<\"\\n\";\n    return 0;\n}-\n```",
        "postTime": 1481019740,
        "uid": 26393,
        "name": "\u6211\u7684\u59b9\u59b9syf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3305 \u3010[SDOI2013]\u8d39\u7528\u6d41\u3011"
    },
    {
        "content": "1A\u8fd8\u662f\u5f88\u5f00\u5fc3\u554a~~\u867d\u7136\u505a\u7684\u65f6\u5019\u6253\u9519\u4e86\u4e00\u4e2a\u4e1c\u897f\u8c03\u4e86\u5f88\u4e45~~  \n### \u9898\u76ee\u94fe\u63a5  \n [[SDOI2013] \u8d39\u7528\u6d41](https://www.luogu.org/problemnew/show/P3305)  \n### \u9898\u76ee\u5927\u610f  \n\u7ed9\u5b9a\u4e00\u5f20\u8fd0\u8f93\u7f51\u7edc\uff0c\u6c42\u6700\u5927\u6d41\u4ee5\u53ca\u7ed9\u6240\u6709\u8fb9\u8d4b\u4e00\u4e2a\u4ef7\u683c$c_i$\uff0c\u4e14$\\sum c_i=P$\uff0c\u6b64\u65f6\u7684$\\sum c_i*f_i$\u7684\u6700\u5c0f\u503c\uff0c$f_i$\u4e3a\u7b2c$i$\u6761\u8fb9\u4e0a\u7684\u6d41\u91cf\u3002  \n### \u9898\u76ee\u601d\u8def  \n\u7b2c\u4e00\u5c0f\u95ee\u7684\u6700\u5927\u6d41\u5c31\u4e0d\u7528\u8bf4\u4e86\u3002  \n\u7b2c\u4e8c\u5c0f\u95ee\u4e2d\u4e0d\u8981\u88ab\u90a3\u4e2a$P$\u8bef\u5bfc\u4e86\uff0c\u53ea\u8981\u8d2a\u5fc3\u4e00\u4e0b\u5c31\u77e5\u9053\u80af\u5b9a\u662f\u628a\u4e00\u6761\u8fb9\u53d8\u6210$P$\uff0c\u800c\u5176\u4ed6\u90fd\u662f$0$\u3002\u518d\u8d2a\u5fc3\u4e00\u4e0b\u5c31\u77e5\u9053\u80af\u5b9a\u662f\u7ed9\u6d41\u91cf\u6700\u5927\u7684\u90a3\u6761\u8fb9\u3002\u90a3\u4e48\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u4e86\u5728\u6700\u5927\u6d41\u4e2d\uff0c\u4f7f\u5f97\u6d41\u91cf\u6700\u5927\u7684\u8fb9\u6d41\u91cf\u6700\u5c0f\u3002\u6700\u5927\u503c\u6700\u5c0f\uff0c\u662f\u4e0d\u662f\u5f88\u719f\u6089\uff0c\u4e8c\u5206\u4e0d\u5c31\u53ef\u4ee5\u4e86\uff1f  \n\n\u4e0a\u4ee3\u7801:  \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N=100010,M=1000010;\nconst int inf=0x3f3f3f3f;\nconst double eps=1e-10;\n\nint head[N],ver[M],edge1[M],nxt[M],d[N]; \ndouble edge[M],maxflow=0;\nint n,m,p,tot=1,s,t;\nbool visit[N];\ninline void add(int x,int y,int z) //\u52a0\u8fb9 \n{\n\tver[++tot]=y,edge[tot]=edge1[tot]=z,nxt[tot]=head[x],head[x]=tot;\n\tver[++tot]=x,edge[tot]=edge1[tot]=0,nxt[tot]=head[y],head[y]=tot;\n}\n\nqueue<int> q;\ninline bool bfs() //bfs\u904d\u5386\u6b8b\u4f59\u7f51\u7edc \n{\n\twhile(q.size()) q.pop();\n\tq.push(s);\n\tmemset(d,0,sizeof(d));\n\td[s]=1;\n\twhile(q.size())\n\t{\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tfor(int i=head[x];i;i=nxt[i])\n\t\t{\n\t\t\tint y=ver[i];\n\t\t\tif(edge[i]>eps&&!d[y])\n\t\t\t{\n\t\t\t\td[y]=d[x]+1;\n\t\t\t\tq.push(y);\n\t\t\t\tif(y==t) return true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\ninline double dinic(int x,double flow) //dinic \n{\n\tif(x==t||flow<eps) return flow;\n\tdouble rest=flow,k;\n\tfor(int i=head[x];i&&rest>eps;i=nxt[i])\n\t{\n\t\tint y=ver[i];\n\t\tif(edge[i]>eps&&d[y]==d[x]+1)\n\t\t{\n\t\t\tk=dinic(y,min(edge[i],rest));\n\t\t\tif(k<eps) d[y]=0;\n\t\t\trest-=k;\n\t\t\tedge[i]-=k;\n\t\t\tedge[i^1]+=k;\n\t\t}\n\t}\n\treturn flow-rest;\n}\n\ninline ll read()\n{\n\tll s=0;\n\tbool flag=false;\n\tchar ch=getchar();\n\tfor(;ch<'0'||ch>'9';ch=getchar()) if(ch=='-') flag=true;\n\tfor(;'0'<=ch&&ch<='9';ch=getchar()) s=(s<<3)+(s<<1)+(ch^48);\n\tif(flag) return -s;\n\treturn s;\n}\ninline void write(ll x)\n{\n\tif(!x)\n\t{\n\t\tputchar('0'),putchar(' ');\n\t\treturn ;\n\t}\n\tif(x<0) putchar('-'),x=-x;\n\tchar ch[20];\n\tint tot=0;\n\twhile(x) ch[++tot]=x%10,x/=10;\n\tfor(int i=tot;i;i--) putchar(ch[i]^'0');\n\tputchar(' ');\n}\ninline void writeln(ll x)\n{\n\twrite(x);\n\tputchar('\\n');\n}\n\nint main()\n{\n\tn=read(),m=read(),p=read(),s=1,t=n;\n\tdouble l=0,r=0;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint a=read(),b=read(),c=read();\n\t\tadd(a,b,c);\n\t\tr=max(r,(double)c);\n\t}\n\tdouble flow=0;\n\twhile(bfs()) //\u5148\u7b97\u51fa\u6700\u5927\u6d41\uff0c\u8bb0\u4e3amaxflow \n\t\twhile((flow=dinic(s,inf))>eps) maxflow+=flow;\n\tfor(int i=1;i<=100;i++) //\u4e5f\u53ef\u4ee5\u5199\u6210l+eps<r \n\t{\n\t\tdouble mid=(l+r)/2;\n\t\tfor(int j=1;j<=tot;j++) edge[j]=min((double)edge1[j],mid); //\u66f4\u65b0\u8fb9\u6743 \n\t\tdouble maxn=0;\n\t\twhile(bfs()) //\u7b97\u51fa\u6bcf\u6761\u8fb9\u6700\u5927\u6d41\u91cf\u4e3amid\u65f6\u7684\u6700\u5927\u603b\u6d41\u91cf\uff0c\u8bb0\u4e3amaxn \n\t\t\twhile((flow=dinic(s,inf))>eps) maxn+=flow;\n\t\tif(abs(maxflow-maxn)<eps) r=mid; //\u82e5maxn<maxflow\uff0c\u90a3\u4e48mid\u8981\u53d8\u5927 \n\t\telse l=mid; //\u5426\u5219\u8981\u53d8\u5c0f \n\t}\n\tprintf(\"%.0lf\\n%.4lf\\n\",maxflow,l*p);\n\treturn 0;\n}\n```",
        "postTime": 1548928864,
        "uid": 54728,
        "name": "wangxuye",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3305 \u3010[SDOI2013]\u8d39\u7528\u6d41\u3011"
    },
    {
        "content": "\u597d\u9898\u3002\n\n\u8003\u8651\u73b0\u5728 Alice \u5df2\u7ecf\u8dd1\u51fa\u4e86\u4e00\u79cd\u6700\u5927\u6d41\uff0cBob \u7684\u7b56\u7565\u3002\n\n\u663e\u7136\uff0c\u5c06\u8d39\u7528\u5168\u704c\u5230\u6d41\u91cf\u6700\u5927\u7684\u8fb9\u4e0a\uff0c\u7b56\u7565\u6700\u4f18\u3002\n\n\u76f8\u5e94\u5730\uff0cAlice \u8981\u4fdd\u8bc1\u5728\u6700\u5927\u6d41\u4e0d\u53d8\u7684\u524d\u63d0\u4e0b\uff0c\u6d41\u91cf\u6700\u5927\u7684\u8fb9\u5c3d\u53ef\u80fd\u7684\u5c0f\u3002\n\n\u8003\u8651\u4e8c\u5206\u3002\u6bcf\u6b21\u4e8c\u5206\u51fa\u6d41\u91cf\u7684\u6700\u5927\u503c\uff0c\u5c06\u5176\u8bbe\u7f6e\u6210\u4e3a\u6700\u5927\u5bb9\u91cf\uff0c\u7136\u540e\u770b\u8dd1\u51fa\u7684\u6700\u5927\u6d41\u662f\u5426\u4e0e\u539f\u56fe\u76f8\u7b49\u5373\u53ef\u3002\u82e5\u76f8\u7b49\uff0c\u5373\u8bd5\u7740\u518d\u6b21\u51cf\u5c11\u6700\u5927\u6d41\u91cf\uff1b\u82e5\u4e0d\u76f8\u7b49\uff0c\u5219\u8bd5\u7740\u6269\u5927\u6700\u5927\u6d41\u91cf\u3002\n\n\u8b66\u793a\u540e\u4eba\uff1a\u6ce8\u610f\u53d8\u91cf\u7c7b\u578b\u3002~~\u4e0d\u8981\u50cf\u6211\u4e00\u6837\u628a\u4e00\u4e2a double \u578b\u7684\u53d8\u91cf\u5b9a\u4e49\u6210 int \u7136\u540e\u8c03\u4e86\u597d\u4e45\u3002~~\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#define rep(a, b, c) for(int (a) = (b); (a) <= (c); ++ (a))\n#define per(a, b, c) for(int (a) = (b); (a) >= (c); -- (a))\nusing namespace std;\n\nconst int N = 110, M = 2010, inf = 1e9;\nconst double eps = 1e-8;\n\nint n, m, S, T, p;\nint hd[N], to[M], nt[M], idx;\nint cur[N], q[N], d[N];\ndouble f[M], t[M], max_flow;\n\nvoid add(int u, int v, double c) {\n\tto[idx] = v, f[idx] = c, nt[idx] = hd[u], hd[u] = idx ++ ;\n\tto[idx] = u, f[idx] = 0, nt[idx] = hd[v], hd[v] = idx ++ ;\n}\n\nbool bfs() {\n\tint hh = 0, tt = 1;\n\tmemset(d, -1, sizeof d);\n\td[S] = 0, q[0] = S, cur[S] = hd[S];\n\twhile(hh <= tt) {\n\t\tint u = q[hh ++ ];\n\t\tfor(int i = hd[u]; ~i; i = nt[i]) {\n\t\t\tint v = to[i];\n\t\t\tif(d[v] == -1 && f[i]) {\n\t\t\t\td[v] = d[u] + 1;\n\t\t\t\tcur[v] = hd[v];\n\t\t\t\tif(v == T) return true;\n\t\t\t\tq[ ++ tt] = v;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\ndouble find(int u, double limit) {\n\tif(u == T) return limit;\n\tdouble flow = 0;\n\tfor(int i = cur[u]; ~i && flow < limit; i = nt[i]) {\n\t\tcur[u] = i;\n\t\tint v = to[i];\n\t\tif(f[i] && d[v] == d[u] + 1) {\n\t\t\tdouble t = find(v, min(f[i], limit - flow));\n\t\t\tif(!t) d[v] = -1;\n\t\t\tf[i] -= t, f[i ^ 1] += t, flow += t;\n\t\t} \n\t}\n\treturn flow;\n}\n\ndouble dinic() {\n\tdouble res = 0, flow;\n\twhile(bfs()) while(flow = find(S, inf)) res += flow;\n\treturn res;\n}\n\nbool check(double mid) {\n\tfor(int i = 0; i < idx; i += 2) {\n\t\tf[i] += f[i ^ 1];\n\t\tf[i ^ 1] = 0;\n\t\tf[i] = min(t[i], mid);\n\t}\n\treturn fabs(dinic() - max_flow) < eps;\n}\n\nint main() {\n\tmemset(hd, -1, sizeof hd);\n\tscanf(\"%d%d%d\", &n, &m, &p);\n\tS = 1, T = n;\n\twhile(m -- ) {\n\t\tint a, b; double c;\n\t\tscanf(\"%d%d%lf\", &a, &b, &c);\n\t\tadd(a, b, c);\n\t}\n\trep(i, 0, idx - 1) t[i] = f[i];\n\tprintf(\"%.0lf\\n\", max_flow = dinic());\n\tdouble l = 0, r = 50000;\n\twhile(r - l > eps) {\n\t\tdouble mid = (l + r) / 2;\n\t\tif(check(mid)) r = mid;\n\t\telse l = mid;\n\t}\n\tprintf(\"%.5lf\\n\", l * p);\n\treturn 0;\n}\n```",
        "postTime": 1680096402,
        "uid": 477674,
        "name": "Lagerent",
        "ccfLevel": 0,
        "title": "[SDOI2013]\u8d39\u7528\u6d41 \u9898\u89e3"
    },
    {
        "content": "\u4e8c\u5206 + \u7f51\u7edc\u6d41\n\n\u521d\u770b\u53ef\u80fd\u50cf\u535a\u5f08\u8bba\uff0c\u4f46\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u6761\u4ef6\uff1a Bob \u5728 Alice \u9009\u4e4b\u540e\u9009\u3002\u6240\u4ee5\u8bf4\uff0c\u4f5c\u4e3a Bob \u5c31\u4f1a\u628a\u6240\u6709\u8d39\u7528\u653e\u5728 Alice \u7ecf\u8fc7\u8fb9\u4e0a\u6d41\u91cf\u6700\u5927\u7684\u8fb9\u3002\n\n\u4e8c\u5206\u7b54\u6848\uff0c\u5224\u65ad\u6700\u5927\u8fb9\u6d41\u91cf\u4e0d\u8d85\u8fc7 $x$ \u7684\u65f6\u5019\u662f\u5426\u6709\u6700\u5927\u6d41\u3002\n\n```cpp\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"inline\")\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#define re register\n#define in inline\nusing namespace std;\nconst int Mxdt=5000;\t \ninline char gc(){\n\tstatic char buf[Mxdt],*p1=buf,*p2=buf;\n\treturn p1==p2&&(p2=(p1=buf)+fread(buf,1,Mxdt,stdin),p1==p2)?EOF:*p1++;\n}\ninline int read()\n{\n\tint res=0;char ch=gc();\n\twhile(ch<'0')ch=gc();\n\twhile(ch>='0')res=(res<<3)+(res<<1)+(ch^48),ch=gc();\n\treturn res;\n}\ninline double min(re double x,re double y){\n\treturn x<y?x:y;\n}\nstruct edge{\n\tint to,next;\n\tdouble w;\n}e[2002],e1[2002];\nint n,dis[102],gap[102],mxd,ans,cnt=1,head[102],m,s,t,a,b,c,v[102],p;\ndouble dlt;\nqueue<int>q;\ninline void add(re int x,re int y,re int z){\n\te1[++cnt].to=y;\n\te1[cnt].w=z;\n\te1[cnt].next=head[x];\n\thead[x]=cnt;\n\te1[++cnt].to=x;\n\te1[cnt].w=0;\n\te1[cnt].next=head[y];\n\thead[y]=cnt;\n}\ninline double dfs(re int x,re double y){\n\tif(x==t)return y;\n\tre double tmp=0;\n\tfor(re int i=head[x];i;i=e[i].next){\n\t\tint z=e[i].to;\n\t\tif(e[i].w>1e-5&&dis[x]==dis[z]+1){\n\t\t\tdlt=dfs(z,min(y,e[i].w));\n\t\t\ttmp+=dlt;\n\t\t\te[i].w-=dlt;\n\t\t\te[i^1].w+=dlt;\n\t\t\tif(dis[s]==n||(y-=dlt)<1e-5)return tmp;\n\t\t}\n\t}\n\tif(!(--gap[dis[x]]))dis[s]=n;\n\t++gap[++dis[x]];\n\treturn tmp;\n}\ninline double fabs(re double x){\n\treturn x<0?-x:x;\n}\ninline double sap(){\n\tre double ans=0;\n\tq.push(t);\n\tmemset(v,0,sizeof(v));\n\tmemset(gap,0,sizeof(gap));\n\tmemset(dis,0,sizeof(dis));\n\tv[t]=1;\n\tdis[t]=0;\n\twhile(!q.empty()){\n\t\t\tre int tmp=q.front();\n\t\t\tq.pop();\n\t\t\tfor(re int i=head[tmp];i;i=e[i].next){\n\t\t\t\tif(!v[e[i].to]){\n\t\t\t\t\tv[e[i].to]=1;\n\t\t\t\t\t++gap[dis[e[i].to]=dis[tmp]+1];\n\t\t\t\t\tq.push(e[i].to);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\twhile(dis[s]<n)ans+=dfs(s,1e9);\n\treturn ans;\n}\nint main(){\n\tn=read();\n\tm=read();\n\tp=read();\n\ts=1,t=n;\n\tre double r=0;\n\tfor(re int i=1;i<=m;++i){\n\t\ta=read();\n\t\tb=read();\n\t\tc=read();\n\t\tadd(a,b,c);\n\t\tif((double)c>r)r=(double)c;\n\t}for(re int i=2;i<=cnt;++i)e[i]=e1[i];\n\tre double lsy_ak_ioi=sap();\n\tprintf(\"%.0lf\\n\",lsy_ak_ioi);\n\tre double l=0;\n\twhile(r-l>1e-4){\n\t\tre double mid=(l+r)/2;\n\t\tfor(re int i=2;i<=cnt;++i)e[i].w=e1[i].w<mid?e1[i].w:mid;\n\t\tif(fabs(sap()-lsy_ak_ioi)>1e-5)l=mid;\n\t\telse r=mid;\n\t}\n\tprintf(\"%.4lf\",l*(double)p);\n}\n```\n",
        "postTime": 1584847001,
        "uid": 41476,
        "name": "gyh20",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3305 \u3010[SDOI2013]\u8d39\u7528\u6d41\u3011"
    },
    {
        "content": "#### [\u9898\u76ee\u94fe\u63a5  $Click$  $Here$](https://www.luogu.org/problemnew/show/P3305)\n\n\u975e\u5e38\u6709\u8da3\u7684\u4e00\u4e2a\u9898\u76ee\u3002\n\n\u5173\u952e\u7ed3\u8bba\uff1a\u6240\u6709\u7684\u5355\u4f4d\u8d39\u7528\u5e94\u8be5\u88ab\u5206\u914d\u5728\u6d41\u91cf\u6700\u5927\u7684\u8fb9\u4e0a\u3002\n\n\u5373\uff1a\u5728\u4fdd\u8bc1\u6700\u5927\u6d41\u7684\u524d\u63d0\u4e0b\uff0c\u4f7f\u6700\u5927\u6d41\u91cf\u6700\u5c0f\u3002\u8fd9\u91cc\u6211\u4eec\u91c7\u7528\u4e8c\u5206\u7684\u65b9\u6cd5\uff0c\u6bcf\u6b21\u5224\u65ad\u8ba9\u6240\u6709\u8fb9\u7684\u6d41\u91cf$<=mid$\u65f6\u662f\u5426\u4f9d\u7136\u6709\u6700\u5927\u6d41\uff0c\u6c42\u5f97\u6700\u5c0f\u7684\u6700\u5927\u6d41\u91cf$*p$\u5373\u53ef\u3002\n\n\u4e3a\u4ec0\u4e48\u4f1a\u6709\u5b9e\u6570\u6d41\u91cf\u5462\uff1f\u6216\u8bb8\u662f\u56e0\u4e3a\u6d41\u91cf\u6700\u5927\u7684\u8fb9\u4e0d\u4e00\u5b9a\u6ee1\u6d41\u5427\u3002\u88ab\u5c0f\u5c0f\u7684\u5751\u4e86\u4e00\u4e0b\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 400010;\nconst int M = 400010;\nconst int INF = 0x3f3f3f3f;\n\nint u[N], v[N], flow[N]; double f[N];\n\nint n, m, p, cnt = -1, head[N];\n\nstruct edge {\n\tint nxt, to; double f;\n}e[M];\n\nvoid add_edge (int from, int to, double flw) {\n\te[++cnt].nxt = head[from];\n\te[cnt].to = to;\n\te[cnt].f = flw;\n\thead[from] = cnt;\n}\n\nvoid add_len (int u, int v, double f) {\n\tadd_edge (u, v, f);\n\tadd_edge (v, u, 0);\n}\n\nqueue <int> q;\nint cur[N], deep[N];\n\nbool bfs (int s, int t) {\n\tmemcpy (cur, head, sizeof (head));\n\tmemset (deep, 0x3f, sizeof (deep));\n\tdeep[s] = 0; q.push (s);\n\twhile (!q.empty ()) {\n\t\tint u = q.front (); q.pop ();\n\t\tfor (int i = head[u]; ~i; i = e[i].nxt) {\n\t\t\tint v = e[i].to;\n\t\t\tif (deep[v] == INF && fabs (e[i].f) > 1e-8) {\n\t\t\t\tdeep[v] = deep[u] + 1;\n\t\t\t\tq.push (v);\n\t\t\t}\n\t\t}\n\t}\n\treturn deep[t] != INF;\n}\n\ndouble dfs (int u, int t, double lim) {\n\tif (u == t || fabs (lim) < 1e-8) {\n\t\treturn lim;\n\t}\n\tdouble tmp = 0, flow = 0;\n\tfor (int &i = cur[u]; ~i; i = e[i].nxt) {\n\t\tint v = e[i].to;\n\t\tif (deep[v] == deep[u] + 1) {\n\t\t\ttmp = dfs (v, t, min (lim, e[i].f));\n\t\t\tlim -= tmp;\n\t\t\tflow += tmp;\n\t\t\te[i ^ 0].f -= tmp;\n\t\t\te[i ^ 1].f += tmp;\n\t\t\tif (fabs (lim) < 1e-8) break;\n\t\t}\n\t}\n\treturn flow;\n} \n\ndouble Dinic (int s, int t) {\n\tdouble res = 0;\n\twhile (bfs (s, t)) {\n\t\tres += dfs (s, t, INF);\n\t}\n\treturn res;\n}\n\ndouble max_flow;\n\nbool can_use (double flw) {\n\tcnt = -1; int s = 1, t = n;\n\tmemset (head, -1, sizeof (head));\n\tfor (int i = 1; i <= m; ++i) {\n\t\tadd_len (u[i], v[i], min (f[i], flw));\n\t}\n\treturn fabs (Dinic (s, t) - max_flow) < 1e-8;\n}\n\nint main () {\n\tmemset (head, -1, sizeof (head));\n\tcin >> n >> m >> p;\n\tfor (int i = 1; i <= m; ++i) {\n\t\tcin >> u[i] >> v[i] >> f[i];\n\t\tadd_len (u[i], v[i], f[i]);\n\t}\n\tint s = 1, t = n; max_flow = Dinic (s, t);\n\tprintf (\"%.0lf\\n\", max_flow);\n\tdouble l = 0, r = INF;\n\twhile (r - l > 1e-8) {\n\t\tdouble mid = (l + r) / 2.0;\n\t\tif (can_use (mid)) {\n\t\t\tr = mid;\n\t\t} else {\n\t\t\tl = mid;\n\t\t}\n\t}\n\tprintf (\"%.4lf\\n\", r * p);\n} \n\n```\n\n",
        "postTime": 1552208692,
        "uid": 58698,
        "name": "Nativ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3305 \u3010[SDOI2013]\u8d39\u7528\u6d41\u3011"
    },
    {
        "content": "\u663e\u7136\uff0c\u5bf9\u4e8e Alice \u63d0\u4f9b\u7684\u4e00\u4e2a\u53ef\u884c\u7684\u6700\u5927\u6d41\u65b9\u6848\uff0cBob \u4f1a\u5c06\u5176\u4e2d\u6d41\u91cf\u6700\u5927\u7684\u4e00\u6761\u8fb9\u7684\u8d39\u7528\u8bbe\u4e3a $P$\uff0c\u5176\u4f59\u8fb9\u7684\u8d39\u7528\u8bbe\u4e3a $0$\u3002\u56e0\u6b64\u4e3a\u4e86\u4f7f\u8d39\u7528\u6700\u5c0f\uff0cAlice \u9700\u8981\u4f7f\u5979\u7ed9\u51fa\u7684\u6700\u5927\u6d41\u4e2d\u6d41\u91cf\u6700\u5927\u7684\u8fb9\u7684\u6d41\u91cf\u5c3d\u53ef\u80fd\u5c0f\u3002\n\n\u4e8e\u662f\u6211\u4eec\u4e8c\u5206\u5404\u8fb9\u6d41\u91cf\u7684\u6700\u5927\u503c\uff0c\u6bcf\u6b21 check \u7684\u65f6\u5019\u5c06\u6240\u6709\u8fb9\u7684\u6d41\u91cf\u5bf9 $\\mathrm{mid}$ \u53d6 $\\min$\uff0c\u7136\u540e\u8dd1\u6700\u5927\u6d41\u548c\u539f\u56fe\u7684\u6700\u5927\u6d41\u6bd4\u8f83\u5373\u53ef\u3002\u5177\u4f53\u5b9e\u73b0\u65f6\u9700\u8981\u6ce8\u610f\u5b9e\u6570\u4e8c\u5206\u7684\u4e00\u4e9b\u7ec6\u8282\u3002\n\n```cpp\n#define int long long\n \nconst int maxn = 1e6 + 5;\nconst int maxm = 26;\nconst int mod = 1e9 + 7;\nconst double inf = 1e15;\nconst double eps = 10e-7;\n \ninline int min(int x, int y) { return x < y ? x : y; }\ninline int max(int x, int y) { return x > y ? x : y; }\n\nstruct node {\n    int nxt, to;\n    double flow;\n} edge[maxn << 1];\nint n, m, s, t, p, tot = 1, head[maxn];\ndouble len[maxn], maxLen;\n\ninline void addedge(int u, int v, double w) {\n    edge[++tot] = (node){head[u], v, w}, head[u] = tot;\n}\n\nqueue <int> q;\nint dep[maxn];\n\ninline bool bfs(int s, int t) {\n    for (int i = 1;i <= n;i++) dep[i] = 0;\n    dep[s] = 1, q.push(s);\n    while (!q.empty()) {\n        int u = q.front(); q.pop();\n        for (int i = head[u];i;i = edge[i].nxt) {\n            int v = edge[i].to;\n            if (!dep[v] && len[i] > 0) {\n                dep[v] = dep[u] + 1;\n                q.push(v);\n            }\n        }\n    }\n    return dep[t];\n}\n\nint cur[maxn];\n\ninline double dfs(int u, double rest = 1e9) {\n    if (u == t) return rest;\n    double flow = 0;\n    for (int i = cur[u];i;i = edge[i].nxt) {\n        cur[u] = i;\n        int v = edge[i].to;\n        if (len[i] > 0 && dep[v] == dep[u] + 1) {\n            double x = dfs(v, fmin(rest, len[i]));\n            len[i] -= x;\n            len[i ^ 1] += x;\n            rest -= x;\n            flow += x;\n        }\n        if (rest < eps) break;\n    }\n    return flow;\n}\n\ninline double dinic() {\n    double ans = 0;\n    while (bfs(s, t)) {\n        for (int i = 1;i <= n;i++) cur[i] = head[i];\n        ans += dfs(s);\n        //printf(\"%.4lf\\n\", ans);\n    }\n    return ans;\n}\n\nsigned main(void) {\n    n = read(), m = read(), s = 1, t = n, cin >> p;\n    for (int i = 1;i <= m;i++) {\n        int u, v; double w;\n        u = read(), v = read(), cin >> w;\n        addedge(u, v, w), addedge(v, u, 0);\n        maxLen = fmax(maxLen, w);\n    }\n    for (int i = 2;i <= tot;i++) len[i] = fmin(edge[i].flow, inf);\n    double maxFlow = dinic();\n    printf(\"%.4lf\\n\", maxFlow);\n    double l = 0, r = maxLen + 1, ans = 0;\n    while (r - l > eps) {\n        double mid = (l + r) / 2;\n        for (int i = 2;i <= tot;i++) {\n            len[i] = fmin(edge[i].flow, mid);\n        }\n        if (fabs(dinic() - maxFlow) < eps) r = ans = mid;\n        else l = mid;\n    }\n    double mx = 0;\n    for (int i = 2;i <= tot;i++) {\n        len[i] = fmin(edge[i].flow, ans);\n    }\n    dinic();\n    for (int i = 1;i <= tot;i += 2) {\n        mx = fmax(mx, len[i]);\n    }\n    printf(\"%.4lf\\n\", mx * p);\n    return 0;\n}\n```\n",
        "postTime": 1626450768,
        "uid": 246019,
        "name": "_came11ia_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4320\u3010\u8d39\u7528\u6d41\u3011"
    },
    {
        "content": "\u6765\u53d1\u4e00\u4e2a\u4e0d\u4e00\u6837\u7684\u9898\u89e3\uff1a\n\n**\u5168\u7f51\u7edc\u4e3a\u5565\u90fd\u627e\u4e0d\u5230\u4e00\u4e2a\u7528long long\u5199\u7684\u9898\u89e3\u5462\uff1f**\n\n\u5c31\u662f\u4e0d\u559c\u6b22double\uff0c\u4efb\u6027\u7528long long\u8c03\u4e863\u4e2a\u5c0f\u65f6\u2026\u2026\n\n\n\u603b\u4e4bBob\u6700\u4f18\u65b9\u6848\u5c31\u662f\u628a\u6240\u6709\u8d39\u7528\u653e\u5728\u5b9e\u9645\u6700\u5927\u6d41\u8fb9\u4e0a\uff08\u53cd\u8bc1\u6cd5\uff09\n\nAlice\u5c31\u8981\u5728\u6700\u5927\u6d41\u7684\u6240\u6709\u65b9\u6848\u4e2d\u9009**\u6700\u5927\u6d41\u8fb9\u6700\u5c0f**\uff1a\u4e8c\u5206\u7b54\u6848\n\n\u672c\u4eba\u7528\u4e8c\u5206long long \u6cd5\uff0c \u5c06\u6570\u636e\u90fd\u4e58\u4ee5\u7cbe\u5ea6\uff0c\u7b97\u51fa\u6765\u518d\u9664\u6389\u7cbe\u5ea6\u5c31\u597d\u4e86\n\n\n\u4e0d\u8981\u95ee\u6211\u600e\u4e48\u77e5\u9053\u7684\uff0c\u8bb0\u4f4f\uff1a**\u521d\u59cb\u5316\uff0c\u628a\u8fb9\u8ba1\u6570\u5668\u521d\u59cb\u5316\u4e3a0\uff01\uff01\uff01\uff01\u4e0d\u662f1\uff01\uff01\uff01\uff01**\uff08\u56e0\u4e3a\u7528u^1\u64cd\u4f5c\uff09\n\n\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n#define MAXN 200\n#define MAXM 2000\n#define BASE 10000000\n#define INF 10611095670000000ll\n#define ll long long\n#define mid ((lef+rig)>>1)\n#define gc() getchar()\ninline int read(int ans = 0, int sgn = ' ', int ch = gc())\n{\n    for(;ch < '0' || ch > '9'; sgn=ch,ch=gc());\n    for(;ch >='0' && ch <='9'; (ans*=10)+=ch-'0',ch=gc());\n    return sgn-'-' ? ans : -ans;\n}\nstruct Edge\n{\n    int to,nex;\n    ll c;\n    Edge(int _to=0, int _nex=0, ll _c=0):to(_to),nex(_nex),c(_c){}\n}e[MAXM+5];\nint first[MAXN+5], q[MAXN+5], level[MAXN+5], cur[MAXN+5], A[MAXM+5], B[MAXM+5], C[MAXM+5], tot = 1, N, M, P, S, T;\nll lef, rig, W;\ninline void Add(int a, int b, ll c)\n{\n    e[tot] = Edge(b,first[a],c), first[a] = tot++;\n    e[tot] = Edge(a,first[b],0), first[b] = tot++;\n    return;\n}\ninline bool BFS()\n{\n    memset(level,0,sizeof(level)), q[0] = S, level[S] = 1;\n    for(register int head = 0, tail = 1, t, u, v; head-tail; )\n        for(t = q[head++], head %= MAXN, u = first[t]; u+1; u = e[u].nex)\n            if(e[u].c > 0 && !level[v=e[u].to])\n            {\n                level[v] = level[t]+1, q[tail++] = v, tail %= MAXN;\n                if(v == T)\n                    return true;\n            }\n    return false;\n}\nll DFS(int p, ll f, ll tag = 0, ll del = 0)\n{\n    if(p == T)\n        return f;\n    for(register int &u = cur[p], v; u+1; u = e[u].nex)\n        if(e[u].c > 0 && level[v=e[u].to] == level[p]+1)\n        {\n            del = DFS(v,min(e[u].c,f-tag)), e[u].c -= del, e[u^1].c += del, tag += del;\n            if(f == tag)\n                return tag;\n        }\n    return tag;\n}\ninline ll Dinic(ll ans = 0)\n{\n    for(register int i; BFS(); ans += DFS(S,INF))\n        for(i = 0; i <= N; cur[i] = first[i], i++);\n    return ans;\n}\ninline void Build(ll k)\n{\n    memset(first,-1,sizeof(first)), tot = 0;\n    for(register int i = 1; i <= M; Add(A[i],B[i],min(k,1ll*BASE*C[i])), i++);\n    return;\n}\nint main()\n{\n    N = read(), M = read(), P = read(), S = 1, T = N;\n    for(register int i = 1; i <= M; A[i]=read(), B[i]=read(), C[i]=read(), rig = max(rig,1ll*C[i]), i++);\n    for(Build(INF), W = Dinic(), lef = 1, rig *= BASE; lef < rig; )\n        if(Build(mid), Dinic() < W)\n            lef = mid+1;\n        else\n            rig = mid;\n    printf(\"%lld\\n%.5lf\\n\",W/BASE,1.*rig/BASE*P);\n     return 0;\n}\n```",
        "postTime": 1486800694,
        "uid": 16528,
        "name": "magolor",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3305 \u3010[SDOI2013]\u8d39\u7528\u6d41\u3011"
    }
]