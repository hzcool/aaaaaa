[
    {
        "content": "### \u8fd9\u9053\u9898\u7b97\u662f\u4e00\u4e2a\u6700\u77ed\u8def\u7684\u6c34\u9898\u4e86\uff0c\u7136\u800c\u96be\u5ea6\u662f\u63d0\u9ad8+/\u7701\u9009-\uff1f\n\n\u5148\u8bf4\u8bf4\u8fd9\u9898\u7684\u601d\u8def\uff1a\n1. \u5148\u8bfb\u5165\u4e00\u4e2a\u56fe\u7684\u9876\u70b9\u6570n\u548c\u8fb9\u6570m\uff0c\u518d\u8bfb\u5165\u6bcf\u4e2a\u8fb9\u7684\u4fe1\u606f\uff08\u8d77\u70b9\uff0c\u7ec8\u70b9\uff09\uff0c\u628a\u5b83\u4eec\u5b58\u50a8\u8d77\u6765\uff0c\u8fd9\u91cc\u6211\u7528\u7684\u90bb\u63a5\u8868\u5b58\u50a8\u6cd5\uff08\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528\u90bb\u63a5\u77e9\u9635\u5b58\u50a8\uff09\u3002\n1. \u63a5\u4e0b\u6765\u5f00\u59cb\u8bfb\u5165\u95ee\u9898\uff08\u4e5f\u662f\u6574\u4e2a\u7a0b\u5e8f\u7684\u6838\u5fc3\uff09\uff0c\u8bfb\u5165v,u\u3002\u5148\u7528spfa\u5355\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u51fav\u70b9\u5230\u5176\u4ed6\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u7528d\u6570\u7ec4\u5b58\u50a8\uff08SPFA\u6a21\u677f\u4e0d\u9610\u8ff0\uff09\u3002\u7136\u540e\u518d\u7528spfa\u7b97\u51fau\u70b9\u5230\u5176\u4ed6\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u7528d2\u6570\u7ec4\u5b58\u50a8\u3002\u7b97\u5b8c\u6700\u77ed\u8ddd\u79bb\u540e\u5f00\u59cb\u904d\u5386\u6bcf\u4e2a\u70b9\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u5230v\u7684\u6700\u77ed\u8def\u5f84\u52a0\u4e0a\u8fd9\u4e2a\u70b9\u5230u\u7684\u6700\u77ed\u8def\u5f84\u6070\u597d\u7b49\u4e8ev\u5230u\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u90a3\u4e48\u5c31\u8f93\u51fa\u8fd9\u4e2a\u70b9\u7684\u7f16\u53f7\u3002\n\n\u601d\u8def\u5c31\u8fd9\u4e48\u591a\uff0c\u5341\u5206\u7b80\u5355\u3002\n\n\u4e0b\u9762\u6709\u8bf7\u53ef\u7231\u7684\u4ee3\u7801\u541b\u4e0a\u573aqwq\n\n### \u6ce8\u610f:\u51cf\u5c11\u4ee3\u7801\u590d\u5236\uff0c\u5171\u521b\u7f8e\u597d\u6d1b\u8c37\uff01\n\n```cpp\n#include <iostream>\n#include <queue>\n#include <vector>\n#include <stack>\n#include <cstdio>\n#include <cstring>  //\u5934\u6587\u4ef6 \nusing namespace std;\nstruct node{\n    int to,cost;\n};\nvector<node> G[110];//vector\u6570\u7ec4\uff0c\u90bb\u63a5\u8868\u5b58\u50a8 \nint d[110],d2[110];//d\u6570\u7ec4\u5b58\u7684\u662fv\u70b9\u5230\u5176\u4ed6\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0cd2\u6570\u7ec4\u5b58\u7684\u662fu\u70b9\u5230\u5176\u4ed6\u70b9\u7684\u6700\u77ed\u8ddd\u79bb \nbool used[110];\nint n,m,x;\nstack<int>s;\ninline int read()//\u8bfb\u5165\u4f18\u5316 \n{\n    int n=0;\n    char ch=getchar();\n    while(ch>'9'||ch<'0') ch=getchar();\n    while(ch>='0'&&ch<='9')\n     {\n         n=n*10+ch-'0';\n         ch=getchar();\n     }\n    return n; \n}\nvoid spfa(int s)//SPFA\u6a21\u677f \n{\n    queue<int>q;\n    fill(d+1,d+n+1,100000000);//\u4e00\u5f00\u59cb\u8981\u521d\u59cb\u5316\u4e00\u4e2a\u5f88\u5927\u7684\u6570 \n    fill(used+1,used+n+1,false);\n    d[s]=0;\n    used[s]=true;\n    q.push(s);\n    while(!q.empty())\n    {\n        int v=q.front();\n        q.pop();\n        used[v]=false;\n        for(int i=0; i<G[v].size(); i++)\n        {\n            node e=G[v][i];\n            if(d[v]+e.cost<d[e.to])\n            {\n                d[e.to]=d[v]+e.cost;\n                if(!used[e.to])\n                {\n                    q.push(e.to);\n                    used[e.to]=true;\n                }\n            }\n        }\n    }\n}\nvoid spfa2(int s)//\u540c\u6837\u662f\u6a21\u677f \n{\n    queue<int>q;\n    fill(d2+1,d2+n+1,100000000);\n    fill(used+1,used+n+1,false);\n    d2[s]=0;\n    used[s]=true;\n    q.push(s);\n    while(!q.empty())\n    {\n        int v=q.front();\n        q.pop();\n        used[v]=false;\n        for(int i=0; i<G[v].size(); i++)\n        {\n            node e=G[v][i];\n            if(d2[v]+e.cost<d2[e.to])\n            {\n                d2[e.to]=d2[v]+e.cost;\n                if(!used[e.to])\n                {\n                    q.push(e.to);\n                    used[e.to]=true;\n                }\n            }\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);//\u8bfb\u5165 \n    for(int i=1; i<=m; i++)\n    {\n        int a,b,c;\n        a=read(),b=read();//\u8bfb\u5165 \n        G[a].push_back((node){b,1});//\u90bb\u63a5\u8868\u5b58\u50a8\u6cd5\uff0c\u6ce8\u610f\u6743\u503c\u8981\u4e3a1 \n        G[b].push_back((node){a,1});\n    }\n    int q;\n    cin>>q;//\u8bfb\u5165\u95ee\u9898\u7684\u6570\u91cf \n    while(q--)\n    {\n    \tint v,u;\n    \tcin>>v>>u;\n    \tspfa(v);\n    \tspfa2(u);//SPFA\u5927\u6cd5\u597d \n    \tfor(int i=1; i<=n; i++)\n    \tif(d[i]+d2[i]==d[u]) cout<<i<<' ';//\u5982\u679c\u7b2ci\u70b9\u5230v\u7684\u6700\u77ed\u8def\u5f84\u52a0\u4e0a\u5230u\u7684\u6700\u77ed\u8def\u5f84\u6070\u597d\u7b49\u4e8ed[u]\uff0c\u90a3\u4e48\u5c31\u8f93\u51fai\n    \tcout<<endl;//\u6362\u884c \n    }\n    return 0;//\u5c31\u8fd9\u6837\u5b8c\u7f8e\u7684\u7ed3\u675f \n}\n\n```\n\np.s \u672c\u4eba\u849f\u84bb\u4e00\u679a\uff0c\u5982\u679c\u6b64\u9898\u89e3\u6709\u5730\u65b9\u8bf4\u7684\u4e0d\u597d\u6216\u662f\u8bf4\u9519\u4e86\uff0c\u8bf7\u5728\u8bc4\u8bba\u533a\u544a\u8bc9\u9519\u8bef\u539f\u56e0\uff0c\u8c22\u8c22\uff01\u5982\u679c\u60a8\u8ba4\u4e3a\u8fd9\u7bc7\u9898\u89e3\u4e0d\u9519\uff0c\u5c31\u8bf7\u8bdd1\u79d2\u949f\u7684\u65f6\u95f4\u70b9\u4e2a\u8d5e\u5427\uff01",
        "postTime": 1529657871,
        "uid": 42443,
        "name": "06ray",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3906 \u3010Geodetic\u96c6\u5408\u3011"
    },
    {
        "content": "emm.....\u600e\u4e48\u9898\u89e3\u51e0\u4e4e\u5168\u662f $Floyd$....\n\n\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a $BFS$ \u505a\u6cd5 ~~\u4ec0\u4e48\uff1f\u65e0\u6743\u56fe\u4f60\u7528 SPFA \uff1f~~\n\n\u601d\u8def\u5f88\u7b80\u5355\u7684...\u5c31\u662f\u5728\u6c42\u6700\u77ed\u8def\u7684\u8fc7\u7a0b\u4e2d\u8bb0\u5f55\u4e00\u4e0b\u5f53\u524d\u70b9\u7684\u524d\u9a71\n\n\u7531\u4e8e\u524d\u9a71\u73c2\u80fd\u6709\u591a\u4e2a\uff0c\u6240\u4ee5\u5f00\u4e8c\u7ef4\u6570\u7ec4\u5b58\u50a8\n\n\u7136\u540e\u4ece\u7ec8\u70b9\u5012\u7740\u641c\u4e00\u904d\u5c31\u5f97\u5230\u7b54\u6848\u4e86\n\n\u7531\u4e8e $n$ \u5f88\u5c0f\uff0c\u6240\u4ee5\u4e5f\u61d2\u5f97\u5199\u90bb\u63a5\u8868\u4e86qwq\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(kn^2)$\uff0c\u7528\u90bb\u63a5\u8868\u7684\u8bdd\u662f $O(k(n+m))$\n\n\u8c8c\u4f3c\u6bd4 $Floyd$ \u505a\u6cd5\u5feb\u4e00\u70b9\uff1f~~\u7136\u800c\u5e76\u6ca1\u7ed9 k \u7684\u8303\u56f4~~\n\n\u4ee3\u7801\uff1a\uff08\u4e5f\u4e0d\u6bd4 $Floyd$ \u96be\u5199\u591a\u5c11qwq\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nqueue<int>q;\nbool ans[41];\nint a[41][41],pre[41][41],num[41],dis[41],n;\nvoid bfs(int s,int t){\n\tmemset(num,0,sizeof num),memset(dis,63,sizeof dis);  //  \u5fd8\u4e86\u6e05\u6570\u7ec4\u4f1a\u72060\n\tdis[s]=0,q.push(s);\n\twhile(!q.empty()){\n\t\ts=q.front(),q.pop();\n\t\tfor(int i=1;i<=n;i++) if(a[s][i])\n\t\t\tif(dis[i]>dis[s]+1)\n\t\t\t\tdis[i]=dis[s]+1,pre[i][++num[i]]=s,q.push(i);\n\t\t\telse if(dis[i]==dis[s]+1) pre[i][++num[i]]=s;  //  \u5206\u60c5\u51b5\u8bb0\u5f55\u524d\u9a71\n\t}\n\tmemset(ans,0,sizeof ans),q.push(t),ans[t]=1;\n\twhile(!q.empty()){\n\t\ts=q.front(),q.pop();\n\t\tfor(int i=num[s];i;i--) if(!ans[pre[s][i]])\n\t\t\tans[pre[s][i]]=1,q.push(pre[s][i]);  //  \u5012\u7740\u641c\u56de\u53bb\n\t}\n\tfor(int i=1;i<=n;i++) if(ans[i]) printf(\"%d \",i);\n}\nint main(){\n\tint m,q,x,y;\n\tscanf(\"%d%d\",&n,&m);\n\twhile(m--) scanf(\"%d%d\",&x,&y),a[x][y]=1,a[y][x]=1;\n\tscanf(\"%d\",&q);\n\twhile(q--) scanf(\"%d%d\",&x,&y),bfs(x,y),putchar('\\n');\n\treturn 0;\n}\n```",
        "postTime": 1536824329,
        "uid": 100018,
        "name": "\u304b\u306a\u3067",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3906 \u3010Geodetic\u96c6\u5408\u3011"
    },
    {
        "content": "### \u8bf4\u5b9e\u8bdd\uff0c\u771f\u4e0d\u77e5\u9053\u8fd9\u9898\u662f\u600e\u4e48\u6210\u84dd\u9898\u7684\n~~\u4e4b\u524d\u4e00\u76f4\u89c9\u5f97Floyd\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u592a\u9ad8\u5c31\u6ca1\u5b66\uff0c\u7136\u540e\u5c31\u6ca1\u5b66~~  \n### \u5177\u4f53\u601d\u8def\u5c31\u662f\u8dd1\u4e00\u904d**Floyd**\uff0c\u6c42\u51fa\u4efb\u610f\u4e24\u70b9\u95f4\u7684\u8ddd\u79bb\uff08\u5230\u8fd9\u91cc\u5b9e\u9645\u4e0a\u5c31\u662f**Floyd**\u7684\u6a21\u677f\uff09  \n\u7136\u540e\u6211\u4eec\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u4e24\u70b9\uff0c\u679a\u4e3e\u4e2d\u95f4\u70b9\uff0c\u7136\u540e...  \n\u5443\u5443\u5443\uff0c\u5177\u4f53\u770b\u4ee3\u7801\u5427\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,m,T;\npriority_queue<int,vector<int>,greater<int> > q; \n// \u4f18\u5148\u5bf9\u5217\uff0c\u4fbf\u4e8e\u540e\u9762\u7684\u8282\u70b9\u6392\u5e8f\n// \u5b9e\u9645\u62ff\u4e2a\u6570\u7ec4\uff0csort\u4e00\u904d\u4e5f\u884c\uff0c\u53ef\u80fd\u66f4\u9ad8\u6548\uff08\u96fe\nint f[44][44];\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tmemset(f,999999,sizeof(f));\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y;scanf(\"%d%d\",&x,&y);\n\t\tf[x][y]=1;\n\t\tf[y][x]=1;\n\t}\n    //Floyd\u6a21\u677f\u6c42\u4e24\u70b9\u6700\u77ed\u8def\n\tfor(int k=1;k<=n;k++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tfor(int i=1;i<=n;i++){\n\t\t\t\tif(i==j||i==k||j==k) continue;\n\t\t\t\tf[i][j]=min(f[i][j],f[i][k]+f[k][j]);\n\t\t\t\tf[j][i]=min(f[j][i],f[j][k]+f[k][i]);\n\t\t\t}\n\t\t}\n\t}\n\tscanf(\"%d\",&T);\n\tfor(int i=1;i<=T;i++){\n\t\tint x,y;scanf(\"%d%d\",&x,&y);\n\t\tq.push(x);q.push(y); //\u8d77\u70b9\u548c\u7ec8\u70b9\u5165\u5bf9\u5217\n\t\tfor(int k=1;k<=n;k++){\n\t\t\tif(k==x||k==y) continue;\n\t\t\tif(f[x][y]==f[x][k]+f[k][y])  \n            /*\n\t\t\t\u91cd\u70b9\uff01\n\t\t\t\u5982\u679c\u4e2d\u95f4\u70b9k\u5230\u8d77\u70b9\u548c\u7ec8\u70b9\u7684\u8ddd\u79bb\u7b49\u4e0e\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8282\u70b9\u5c31\u5728\u6700\u77ed\u8def\u4e0a\n\t\t\t\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06k\u70b9\u5165\u961f\u5217 \n\t\t*/\n\t\t\tq.push(k);\n\t\t}\n\t\twhile(!q.empty()){\n\t\t\tcout<<q.top()<<\" \";\n\t\t\tq.pop();\n\t\t}\n\t\tcout<<endl;\n\t}\n}  \n```\n\n  \n  \n\u7efc\u4e0a\u6240\u8ff0\uff0c\u8fd9\u662f\u8be5\u662f\u9ec4\u9898 \nqwq",
        "postTime": 1573544341,
        "uid": 122784,
        "name": "_Blue_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3906 \u3010Geodetic\u96c6\u5408\u3011"
    },
    {
        "content": "## \u8fd9\u91cc\u53d1\u4e00\u4e0bDijkstra + \u4f18\u5148\u961f\u5217 + \u94fe\u5f0f\u524d\u5411\u661f\u7684\u505a\u6cd5\u3002\n\n-  \u5148\u8bf4\u4e00\u4e0b**\u601d\u8def**\uff1a\n\u5148\u7528Dijkstra\u8dd1\u4e00\u904du\u7684\u6700\u77ed\u8def\uff0c\u7528dis1\u6570\u7ec4\u50a8\u5b58\uff0c\u7136\u540e\u518d\u8dd1\u4e00\u904dv\u7684\u6700\u77ed\u8def\uff0c\u7528dis2\u6570\u7ec4\u50a8\u5b58\uff0c\u6700\u540e\u904d\u5386\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5982\u679c**dis1[ i ] + dis2[ i ] \u7b49\u4e8e dis1[ v ]**\uff0c\u5c31\u628a\u70b9 i \u653e\u8fdb\u6211\u4eec\u7684\u96c6\u5408\u91cc\u3002\n\n-  **\u7406\u7531**\uff1a\n\u56e0\u4e3a\u5982\u679c\u70b9u\u5230\u70b9i\u7684\u6700\u77ed\u8def\u548c\u70b9v\u5230\u70b9i\u7684\u6700\u77ed\u8def\u76f8\u52a0\u7684\u548c\u7b49\u4e8e\u70b9u\u5230\u70b9v\u7684\u6700\u77ed\u8def\uff0c\u5c31\u8bf4\u660e\u70b9i\u662f\u70b9u\u5230\u70b9v\u7684\u6700\u77ed\u8def\u7684\u4e00\u90e8\u5206\uff0c\u6240\u4ee5\u70b9i\u4e5f\u5c31\u662f\u662f\u6211\u4eec\u8981\u7684\u96c6\u5408\u4e2d\u7684\u4e00\u90e8\u5206\u3002\n\n- code:\n\n\n```c\n#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = 0x7f7f7f7f;\nstruct node\n{\n\tint x,w;\n\tnode(){}//\u8fd9\u662f\u6784\u9020\u51fd\u6570\u3002 \n\tnode(int _x,int _w) : x(_x),w(_w){}\n\tbool operator < (const node &s) const//\u8fd9\u91cc\u6ce8\u610f\u8981\u91cd\u8f7d\u5c0f\u4e8e\u53f7 \u3002 \n\t{\n\t\treturn w > s.w;\n\t}\n};\nstruct Edge//\u94fe\u5f0f\u524d\u5411\u661f \u3002 \n{\n\tint to,next;\n}edge[20010];\nint n,m,cnt,k,u1,v1,head[100],ans[100];//ans\u662f\u7b54\u6848\u96c6\u5408 \u3002 \nint dis[100],dis2[100];\nvoid add(int u,int v)//\u52a0\u8fb9 \u3002 \n{\n\tedge[cnt].to = v;\n\tedge[cnt].next = head[u];\n\thead[u] = cnt++;\n}\nvoid bfs1()//\u8dd1\u4e00\u904du\u7684\u6700\u77ed\u8def \u3002 \n{\n\tbool vis[100];\n\tpriority_queue <node> q;\n\tmemset(dis,inf,sizeof(dis)),memset(vis,0,sizeof(vis));\n\tq.push(node(u1,0));//\u5e94\u4e3a\u6709\u4e86\u4e0a\u9762\u7684\u6784\u9020\u51fd\u6570\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fd9\u6837\u5199\u4e86\u3002 \n\tdis[u1] = 0;\n\twhile(!q.empty())//\u6700\u77ed\u8def\u7684\u6a21\u677f \u3002 \n\t{\n\t\tint u = q.top().x;q.pop();\n\t\tif(vis[u]) continue;\n\t\tvis[u] = 1;\n\t\tfor(int i = head[u];~i;i = edge[i].next)\n\t\t{\n\t\t\tint v = edge[i].to;\n\t\t\tif(!vis[v] && dis[u] + 1 < dis[v])\n\t\t\t{\n\t\t\t\tdis[v] = dis[u] + 1;\n\t\t\t\tq.push(node(v,dis[v]));\n\t\t\t}\n\t\t}\n\t}\n}\nvoid bfs2()//\u518d\u8dd1\u4e00\u904dv\u7684\u6700\u77ed\u8def \u3002 \n{\n\tpriority_queue <node> q;\n\tbool vis[100];\n\tmemset(dis2,inf,sizeof(dis2)),memset(vis,0,sizeof(vis));\n\tq.push(node(v1,0));\n\tdis2[v1] = 0;\n\twhile(!q.empty())\n\t{\n\t\tint u = q.top().x;q.pop();\n\t\tif(vis[u]) continue;\n\t\tvis[u] = 1;\n\t\tfor(int i = head[u];~i;i = edge[i].next)\n\t\t{\n\t\t\tint v = edge[i].to;\n\t\t\tif(!vis[v] && dis2[u] + 1 < dis2[v])\n\t\t\t{\n\t\t\t\tdis2[v] = dis2[u] + 1;\n\t\t\t\tq.push(node(v,dis2[v]));\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tmemset(head,-1,sizeof(head));//\u9884\u5904\u7406head\u6570\u7ec4\u7684\u521d\u59cb\u503c \u3002 \n\tscanf(\"%d%d\",&n,&m);\n\tint u,v;\n\tfor(int i = 1;i <= m;i++)\n\t{\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tadd(u,v);//\u6ce8\u610f\u662f\u53cc\u5411\u8fb9 \u3002 \n\t\tadd(v,u);\n\t}\n\tscanf(\"%d\",&k);\n\twhile(k--)\n\t{\t\n\t\tcnt = 0;\n\t\tmemset(ans,0,sizeof(ans));\n\t\tscanf(\"%d%d\",&u1,&v1);\n\t\tbfs1();\n\t\tbfs2();\n\t\tfor(int i = 1;i <= n;i++)\n\t\tif(dis[i] + dis2[i] == dis[v1])//\u5982\u679c\u6ee1\u8db3\u8981\u6c42\u5c31\u52a0\u8fdbans\u6570\u7ec4\u4e2d \u3002 \n\t\tans[++cnt] = i;\n\t\tfor(int i = 1;i <= cnt;i++) printf(\"%d \",ans[i]);\n\t\tputs(\"\");\n\t}\n\treturn 0;//\u517b\u6210\u597d\u4e60\u60ef\uff0c\u7ed3\u675f\u7a0b\u5e8f\u3002 \n} \n```\n/* \u5e0c\u671b\u7ba1\u7406\u5458\u5927\u5927\u80fd\u7ed9\u4e2a\u8fc7\uff0cthanks\u3002*/",
        "postTime": 1599657502,
        "uid": 351015,
        "name": "\u65ed\u65e5\u4e34\u7a97",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3906 \u3010Geodetic\u96c6\u5408\u3011"
    },
    {
        "content": "# \u9898\u76ee\u63cf\u8ff0\n\u5b9a\u4e49 $I(v,u)$ \u4e3a $v$ \u5230 $u$ \u6700\u77ed\u8def\u4e0a\u7684\u70b9\u7684\u96c6\u5408\u3002\u7ed9\u5b9a\u56fe $G$ \u548c\u82e5\u5e72\u70b9\u5bf9 $(v,u)$\uff0c\u6c42\u51fa $I(v,u)$\u3002\n# \u9898\u89e3\n- \u8fd9\u9898\u65e2\u53ef\u4ee5\u7528 floyd\uff0c\u4e5f\u53ef\u4ee5\u7528 spfa (\u5176\u5b9e\u5c31\u662f bfs)\uff0c\u4f46\u662f\u51fa\u4e8e\u6211\u5bf9 STL \u7684\u559c\u7231\uff0c\u6211\u9009\u62e9\u4e86\u540e\u8005\u3002\n- \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u5bf9 $(v,u)$\uff0c\u9996\u5148\u6c42\u51fa $v$ \u5230 $u$ \u7684\u6700\u77ed\u8def\uff0c\u5e76\u8bb0\u5f55\u5728 $t$ \u4e2d\uff1b\u518d\u6c42\u51fa $u$ \u5230 $v$ \u7684\u6700\u77ed\u8def\uff0c\u5e76\u8bb0\u5f55\u5728 $dis$ \u4e2d\u3002**\u82e5\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $i$ \u6ee1\u8db3\uff0c$v$ \u5230 $i$ \u7684\u6700\u77ed\u8def\u52a0\u4e0a $i$ \u5230 $u$ \u7684\u6700\u77ed\u8def\u7b49\u4e8e $v$ \u5230 $u$ \u7684\u6700\u77ed\u8def\uff0c\u5219 $i$ \u5728 $I(v,u)$ \u4e2d\u3002**\n## \u4f8b\u5b50\n![](https://cdn.luogu.com.cn/upload/image_hosting/q10wob6h.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u5982\u4e0a\u56fe\uff0c$1$ \u5230 $2$ \u7684\u6700\u77ed\u8def\u4e3a $1$\uff0c$2$ \u5230 $4$ \u7684\u6700\u77ed\u8def\u4e3a $1$\uff0c$1$ \u5230 $4$ \u7684\u6700\u77ed\u8def\u4e3a $2$\uff0c$d_{1->2}+d_{2->4}=d_{1->4}$\uff0c\u6240\u4ee5 $2$ \u5728 $I(1,4)$ \u4e2d\u3002\u540c\u7406\uff0c$1,3,4$ \u4e5f\u5728\u96c6\u5408\u4e2d\u3002\n## \u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,a,b,k,dis[50],t[50];\nbool vis[50];\nvector<int> g[50];\nqueue<int> q;\nvoid spfa(int s)\n{\n    memset(dis,0x3f,sizeof(dis));\n    memset(vis,false,sizeof(vis));\n    q.push(s);\n    dis[s]=0;\n    vis[s]=true;\n    while(!q.empty())\n    {\n        int tmp=q.front();\n        q.pop();\n        vis[tmp]=false;\n        for(int i=0;i<g[tmp].size();i++)\n        {\n            if(dis[tmp]+1<dis[g[tmp][i]])\n            {\n                dis[g[tmp][i]]=dis[tmp]+1;\n                if(!vis[g[tmp][i]])\n                {\n                    vis[g[tmp][i]]=true;\n                    q.push(g[tmp][i]);\n                }\n            }\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&a,&b);\n        g[a].push_back(b);\n        g[b].push_back(a);\n    }//\u5b58\u56fe\n    scanf(\"%d\",&k);\n    while(k--)\n    {\n        scanf(\"%d%d\",&a,&b);\n        spfa(a);//a\u7684\u6700\u77ed\u8def\n        memcpy(t,dis,sizeof(t));//\u590d\u5236\u5230t\u6570\u7ec4\n        spfa(b);//b\u7684\u6700\u77ed\u8def\n    \tfor(int i=1;i<=n;i++)\n    \t{\n    \t\tif(dis[i]+t[i]==t[b])//\u6838\u5fc3\u4ee3\u7801\n    \t\t\tprintf(\"%d \",i);\n\t\t}\n\t\tprintf(\"\\n\");\n    }\n    return 0;\n}\n```",
        "postTime": 1632750732,
        "uid": 379058,
        "name": "Ginger_he",
        "ccfLevel": 0,
        "title": "\u6d1b\u8c37P3906\u9898\u89e3"
    },
    {
        "content": "\u611f\u8c22\u901d\u661fDS\u7684\u6307\u6b63\n\n\u4eca\u5929\u65e9\u4e0a\u5237\u56fe\u8bba\uff0c\u6b63\u597d\u505a\u5230\u8fd9\u9053\u9898\uff0c\u6765\u5199\u4e00\u6ce2\u9898\u89e3\u3002\u3002\u3002\n\n\u521a\u770b\u9898\u76ee\uff0c\u770b\u5230\u662f\u6700\u77ed\u8def\uff0c\u6709\u591a\u7ec4\u8be2\u95ee\uff0c\u663e\u7136\u662f\u591a\u6e90\u6700\u77ed\u8def\u3002Floyd\uff01\uff01\uff01\n\n\u53c8\u60f3\u5230\u4e86NOIP2012\u6587\u5316\u4e4b\u65c5\u7684Floyd\u5199\u6cd5\uff0c\u7a81\u7136\u6709\u4e86\u7075\u611f\uff0c\u4e00\u628aAC\u4e86\u3002\u3002\u3002\n\n\u8ba9\u6211\u4eec\u6765\u8bb2\u4e00\u8bb2\u89e3\u6cd5\uff1a\n\n\u9996\u5148\uff0c\u9898\u76ee\u8ba9\u6211\u4eec\u8f93\u51fa\u7684\u662f\u4eceu\u5230v\u7684\u6700\u77ed\u8def\u96c6\u5408\uff0c\u6240\u4ee5Floyd\u9700\u8981\u53e6\u5f00\u4e00\u4e2ag\u6570\u7ec4\uff0c\u6570\u7ec4\u5f00\u4e09\u7ef4\uff0c\u7528Bool\u7c7b\u578b\u50a8\u5b58\uff0c\u8bb0\u5f55I\uff08u\uff0cv\uff09\u3002\n\n\u8ba9\u6211\u4eec\u518d\u6b21\u5b9a\u4e49\u4e00\u4e0b\u53d8\u91cf\uff1a\n\n**f[i][j]\u8868\u793a\u4ecei\u5230j\u7684\u6700\u77ed\u8def\u5f84\u3002**\n\n**g[i][j][k]\u8868\u793a\u4ecei\u5230j\u7684\u6700\u77ed\u8def\u96c6\u5408\uff0cg[i][j][k]=true\u8868\u793ak\u5c5e\u4e8e\u8fd9\u4e2a\u96c6\u5408\u4e2d,g[i][j][k]=false\u8868\u793ak\u4e0d\u5c5e\u4e8e\u8fd9\u4e2a\u96c6\u5408\u3002**\n\n\u73b0\u5728\u5f00\u59cb\u5faa\u73af\uff1a-------->\n\n**\u5f53f[i][j]>f[i][k]+f[k][j]\u65f6\uff0c\u8bf4\u660eg\u6570\u7ec4\u9700\u8981\u88ab\u5b8c\u5168\u91cd\u65b0\u66f4\u6539\uff08\u56e0\u4e3a\u5b58\u5728\u66f4\u4f18\u89e3\uff09\u679a\u4e3et\u4ece1\u5230n\uff0cg[i][j][t]=g[i][k][t] or \uff08|\uff09 g[j][k][t]\uff08\u4e4b\u8981\u4e24\u4e2a\u96c6\u5408\u4e2d\u4efb\u610f\u4e00\u4e2a\u5b58\u5728t\uff0c\u90a3\u4e48g[i][j]\u96c6\u5408\u4e5f\u5b58\u5728t\uff09\u3002**\n\n\u5f53f[i][j]<f[i][k]+f[k][j]\u65f6\uff0c\u4e0d\u7528\u66f4\u6539\uff08~~\u8fd9\u5c82\u4e0d\u662f\u5e9f\u8bdd~~\uff09\u3002\n\n**\u5f53f[i][j]=f[i][k]+f[k][j]\u65f6\uff0c\u8bf4\u660eg\u6570\u7ec4\u9700\u8981\u5728\u539f\u6765\u7684\u57fa\u7840\u4e0a\u65b0\u52a0\u5165\u4e24\u4e2a\u96c6\u5408\uff08\u56e0\u4e3a\u539f\u6765\u7684\u96c6\u5408\u548c\u73b0\u5728\u7684\u96c6\u5408\u90fd\u5c5e\u4e8e\u5f53\u524d\u7684\u6700\u77ed\u8def\u96c6\u5408\uff09\uff0c\u90a3\u4e48\u8f6c\u79fb\u65b9\u7a0b\u5f88\u5bb9\u6613\u51fa\u6765\u4e86\uff0cg[i][j][t]=g[i][j][t] or g[i][k][t] or g[k][j][t]\uff08~~\n\u663e\u7136~~\uff09\u3002**\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO\uff08n^4\uff09\n\n\u8fd0\u884c\u65f6\u95f4\uff1a4ms\n\n\u4e0aPascal\u4ee3\u7801\uff1a\uff08~~\u597d\u50cf\u5fd8\u8bb0\u8ddf\u4f60\u4eec\u8bf4\u4e86\u6211\u662fP\u515a~~\uff09\uff1a\n\n```cpp\n\n// luogu-judger-enable-o2//O2\u4f18\u5316\u3002\u3002\u3002\nvar\n  f:array[0..50,0..50]of int64;//f[i][j]\u8868\u793a\u4ecei\u5230j\u7684\u6700\u77ed\u8def\u5f84\u3002\n  g:array[0..50,0..50,0..50]of boolean;//g[i][j][k]\u8868\u793a\u4ecei\u5230j\u7684\u6700\u77ed\u8def\u96c6\u5408\uff0cg[i][j][k]=true\u8868\u793ak\u5c5e\u4e8e\u8fd9\u4e2a\u96c6\u5408\u4e2d,g[i][j][k]=false\u8868\u793ak\u4e0d\u5c5e\u4e8e\u8fd9\u4e2a\u96c6\u5408\u3002\n  n,m,i,j,k,t,q,x,y:longint;\n  inf:int64;\nbegin\n  readln(n,m);\n  inf:=100000000007;\n  for i:=0 to n do\n    for j:=0 to n do\n      f[i][j]:=inf;//\u8d4b\u521d\u503c\n  for i:=1 to m do\n  begin\n    readln(x,y);\n    f[x][y]:=1;//\u66f4\u65b0\n    f[y][x]:=1;//\u66f4\u65b0\n    g[x][y][x]:=true;//\u5728x\u5230y\u7684\u8def\u5f84\u96c6\u5408\u4e2d\u4e00\u5b9a\u5b58\u5728x\u548cy\uff0c\u4e0b\u540c\n    g[x][y][y]:=true;\n    g[y][x][x]:=true;\n    g[y][x][y]:=true;\n  end;\n  for k:=1 to n do//Floyd\u5fc5\u987b\u5148\u679a\u4e3e\u4e2d\u8f6c\u7ad9\n    for i:=1 to n do\n      for j:=1 to n do\n        if (i<>j) and (j<>k) and (i<>k) then//\u6211\u597d\u60f3\u8fd8\u662f\u4e0d\u6e05\u695a\u4e3a\u4ec0\u4e48\u8981\u5199\u8fd9\u53e5\u8bdd\uff0c\u6c42\u5927\u4f6c\u7684\u89e3\u91ca\u3002\n        begin\n          if f[i][k]+f[k][j]<f[i][j] then//\u5b8c\u5168\u66f4\u65b0\n          begin\n            f[i][j]:=f[i][k]+f[k][j];//\u66f4\u65b0\u6700\u77ed\u8def\n            for t:=1 to n do//\u679a\u4e3et\n              g[i][j][t]:=g[i][k][t] or g[k][j][t];\n          end else\n          if f[i][k]+f[k][j]=f[i][j] then//\u51fa\u73b0\u66f4\u591a\u7684\u6700\u77ed\u8def\n          begin\n            for t:=1 to n do//\u679a\u4e3et\n              g[i][j][t]:=g[i][j][t] or g[i][k][t] or g[k][j][t];\n          end;\n        end;\n  readln(q);\n  for i:=1 to q do\n  begin\n    readln(x,y);\n    for j:=1 to n do\n      if g[x][y][j] then//\u76f4\u63a5\u8f93\u51fa\u8be5\u96c6\u5408\n        write(j,' ');\n    writeln;\n  end;\nend.\n```",
        "postTime": 1534306149,
        "uid": 10341,
        "name": "GK0328",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3906 \u3010Geodetic\u96c6\u5408\u3011"
    },
    {
        "content": "\u3010\u672c\u4eba\u7b2c\u4e00\u7bc7\u9898\u89e3\u3011\n\n   \u8bf4\u5b9e\u8bdd\uff0c\u8fd9\u9053\u9898\u771f\u7684\u633a\u6c34\u7684\uff0c\u56e0\u4e3a\u70b9\u6570n\u7279\u522b\u5c0f\uff0c<=40\uff0c\u6240\u4ee5\u8bf4\u6211\u4eec\u4e0d\u59a8\u7528 Floyd (Floyd\u4e07\u5c81\uff01\uff01\uff01),\u5e76\u4e14\u4e5f\u4e0d\u7528\u5224\u65ad\u91cd\u8fb9\n\n   \u5148\u7528Floyd\u7b97\u6cd5\u7b97\u51fa\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb;\u5bf9\u4e8e\u8981\u6c42\u7684\u4efb\u610f\u4e24\u4e2a\u70b9v, u\uff0c\u679a\u4e3e\u6240\u6709\u70b9\u5982\u679c\u6ee1\u8db3\uff1af[v][j]+f[j][u]=f[v][u],\u8f93\u51faj\n   \n   \u4e0b\u9762\u7ed9\u51fa\u849f\u84bb\u7684\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,m,t,f[50][50],v,u;\n\nint main()\n{\n\tmemset(f,10,sizeof(f));\n\tscanf(\"%d %d\",&n,&m);    //\u8f93\u5165\u4e0d\u8bf4\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tf[x][y]=f[y][x]=1;\n\t}\n\tfor(int i=1;i<=n;i++) f[i][i]=0;\n\tfor(int k=1;k<=n;k++)            //Floyd\n\t    for(int i=1;i<=n;i++)\n\t        for(int j=1;j<=n;j++)\n\t            f[i][j]=min(f[i][j],f[i][k]+f[k][j]);\n\tscanf(\"%d\",&t);\n\tfor(int i=1;i<=t;i++)\n\t{\n\t\tscanf(\"%d %d\",&v,&u);\n\t\tfor(int j=1;j<=n;j++)\n\t\t    if(f[v][j]+f[j][u]==f[v][u]) printf(\"%d \",j);      //\u679a\u4e3ej\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1524990388,
        "uid": 43322,
        "name": "Darkmaster",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3906 \u3010Geodetic\u96c6\u5408\u3011"
    },
    {
        "content": "## \u90bb\u63a5\u77e9\u9635+Floyd\n\n1. \u6211\u4eec\u9996\u5148\u770b\u4e00\u4e0b\u6570\u636e\u8303\u56f4\uff0c\u9876\u70b9\u6570\u5c45\u7136\u662f\u4e0d\u5927\u4e8e $40$\uff01\u4e8e\u662f\u4fbf\u5f88\u5bb9\u6613\u731c\u60f3\u5230 Floyd \u7b97\u6cd5\uff0c\u518d\u6765\u770b\u4e00\u4e0b\u6b64\u9898\u662f\u5426\u4e3a\u591a\u6e90\u6700\u77ed\u8def\u5f84\u3002\n\n2. \u9996\u5148\u4ece\u9898\u610f\u51fa\u53d1\uff0c\u5b83\u662f\u8ba9\u6211\u4eec\u6c42\u7ed9\u5b9a**\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4**\u7684\u6240\u6709\u6700\u77ed\u8def\u9876\u70b9\u7f16\u53f7\uff0c\u6240\u4ee5\u53ef\u4ee5\u8bc1\u660e\u4e0a\u6587\u7684\u731c\u60f3\uff0c\u6545\u6b64\u9898\u8dd1 Floyd\u3002\n\n## Code:\n```cpp\n#include<bits/stdc++.h>\n#define SIZE 105\nusing namespace std;\nint n,m,dis[SIZE][SIZE]; //dis[i][j]\u6570\u7ec4\u662f\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8ddd\u79bb. \nvoid Floyd(){\n\tfor(register int k=1;k<=n;k++){ //\u628a\u524dk\u4e2a\u70b9\u90fd\u5f53\u4f5c\u53ef\u7528\u7684\u4e2d\u8f6c\u70b9.\n\t\tfor(register int i=1;i<=n;i++){ //i \u8d77\u70b9.\n\t\t\tfor(register int j=1;j<=n;j++){ //j \u7ec8\u70b9. \n\t\t\t\tdis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j]); //\u677e\u5f1b\u64cd\u4f5c(\u5982\u679c\u5b58\u5728\u6bd4\u4f60\u66f4\u5c0f\u7684\u503c\u5c31\u66f4\u65b0,\u7ef4\u62a4\u6700\u5c0f\u503c). \n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\nint main(){\n\tstd::ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n\tcin>>n>>m;\n\tfor(register int i=1;i<=n;i++){\n\t\tfor(register int j=1;j<=n;j++){\n\t\t\tdis[i][j]=(i==j)?0:1e9; //\u521d\u59cb\u5316\uff0c\u9ed8\u8ba4\u81ea\u5df1\u5230\u81ea\u5df1\u8ddd\u79bb\u4e3a0\uff0c\u5230\u5176\u4ed6\u70b9\u8d4b\u503c\u6781\u5927\u503c. \n\t\t}\n\t}\n\tfor(register int i=1;i<=m;i++){\n\t\tint a,b; cin>>a>>b;\n\t\tdis[a][b]=dis[b][a]=1; //\u6b64\u9898\u662f\u65e0\u5411\u56fe\uff0c1\u8868\u793aa\u3001b\u4e4b\u95f4\u5b58\u5728\u4e00\u6761\u8fb9. \n\t}\n\tFloyd();\n\tint k; cin>>k;\n\twhile(k--){\n\t\tint v,u; cin>>v>>u;\n\t\tfor(register int i=1;i<=n;i++){\n\t\t\tif(dis[v][i]+dis[i][u]==dis[v][u]){ //\u6ee1\u8db3\u6761\u4ef6\uff0c\u8f93\u51fa\u7b54\u6848. \n\t\t\t\tcout<<i<<' ';\n\t\t\t}\n\t\t}\n\t\tcout<<'\\n';\n\t}\n\treturn 0;\n}\n```\n\u795d\u5927\u5bb6\u5b66\u4e60\u987a\u5229\uff01",
        "postTime": 1625551487,
        "uid": 252013,
        "name": "Answer_21",
        "ccfLevel": 0,
        "title": "P3906 Geodetic\u96c6\u5408 \u9898\u89e3"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9898\u641c\u7d22\u5c31\u884c\u4e86\uff0c\u5f53\u7136\u4e0d\u662f\u7b80\u5355\u7684\u641c\u7d22\u3002\n\n\u8fd9\u9898\u6709\u4e24\u4e2a\u96be\u70b9\n1. \u5982\u4f55\u786e\u5b9a\u6b65\u6570\u3002\n2. \u5982\u4f55\u8bb0\u5f55\u548c\u8f93\u51fa\u8def\u5f84\u3002\n\n\u7528\u8fed\u4ee3\u52a0\u6df1\u548cset&deque\u5c31\u884c\u4e86~\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<deque>\n#include<cstring>\n#include<set>\nstruct MyStruct{\n\tint x,y,next;\n}a[40*40+5];\nint len=0, n, m, k, last[45];\nbool v[45];\nstd::deque<int> q;\nstd::set<int> set;\nvoid ins(int x,int y)\n{\n\tlen++;\n\ta[len].x=x;\n\ta[len].y=y;\n\ta[len].next=last[x];\n\tlast[x]=len;\n}\nbool dfs(int m, int x, int step, int end)\n{\n\tif(step > m)\n\t{\n\t\treturn 0;\n\t}\n\tif(x == end)\n\t{\n\t\tfor(std::deque<int>::iterator i = q.begin();i!=q.end();i++)\n\t\t{\n\t\t\tset.insert((*i));\n\t\t}\n\t\treturn 1;\n\t}\n\tbool flag = 0;\n\tfor(int i = last[x];i;i = a[i].next)\n\t{\n\t\tconst int y = a[i].y;\n\t\tif(v[y] == 0)\n\t\t{\n\t\t\tv[y] = 1;\n\t\t\tq.push_back(y);\n\t\t\tif(dfs(m,y,step+1, end) == 1)\n\t\t\t\tflag = 1;\n\t\t\tq.pop_back();\n\t\t\tv[y] = 0;\n\t\t}\n\t}\n\treturn flag;\n}\nvoid go(int start,int end)\n{\n\tif(start == end)\n\t{\n\t\tprintf(\"%d\", start);\n\t\treturn;\n\t}\n\tset.clear();\n\tfor(int i=1;i<=40;i++)\n\t{\n\t\tq.clear();\n\t\tmemset(v,0,sizeof(v));\n\t\tq.push_back(start);\n\t\tv[start] = 1;\n\t\tif(dfs(i, start,0,end) == 1)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\tstd::set<int>::iterator i;\n\tsize_t tmp=0;\n\tfor(i = set.begin();i!=set.end();i++)\n\t{\n\t\ttmp++;\n\t\tif(tmp == set.size())\n\t\t\tprintf(\"%d\\n\",(*i));\n\t\telse printf(\"%d\\x20\",(*i));\n\t}\n}\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i = 1, x, y;i<=m;i++)\n\t{\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tins(x, y);\n\t\tins(y, x);\n\t}\n\tscanf(\"%d\", &k);\n\tfor(int i=1, start,end;i<=k;i++)\n\t{\n\t\tscanf(\"%d %d\",&start, &end);\n\t\tgo(start,end);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1573563415,
        "uid": 57365,
        "name": "\u6a31\u82b1\u98de\u821e",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3906 \u3010Geodetic\u96c6\u5408\u3011"
    },
    {
        "content": "# \u4e00\u9053\u6c34\u9898\n\n\u8fd9\u4e48\u6c34\u7684\u4e00\u9053\u84dd\u9898\u6ca1\u4eba\u5199$dijkstra$\uff1f\n\n\u7adf\u7136\u90fd\u7528\u7684\u662f\u590d\u6742\u5ea6\u4e3a$O(n^3)$\u7684$Floyd$\uff01\n\n\u849f\u84bb\u4fbf\u6765\u6253\u8d77$dijkstra$\u7684\u5927\u65d7\u3002\n\n---\n**\u4e3b\u4f53\u601d\u8def**\uff1a\n\n\u5c06\u6bcf\u4e2a\u8fb9\u7684\u8fb9\u6743\u8bbe\u4e3a$1$\uff0c\n\n\u5bf9\u4e8e\u7b2c$i$\u6b21\u8be2\u95ee\uff0c\n\n\u4ee5$v_i$\u4e3a\u8d77\u70b9\u8dd1\u4e00\u8fb9\u6700\u77ed\u8def\uff0c\u5c06\u7b54\u6848\u5b58\u5728\u6570\u7ec4$d1[\\space]$\u4e2d\uff0c\u518d\u4ee5$u_i$\u4e3a\u8d77\u70b9\u8dd1\u4e00\u8fb9\u6700\u77ed\u8def\uff0c\u5c06\u7b54\u6848\u5b58\u5728$d2[\\space]$\u4e2d\u3002\n\n\u6700\u540e\uff0c\u518d\u679a\u4e3e$1$~$V$\u5404\u4e2a\u9876\u70b9\uff0c\n\n\u5bf9\u4e8e\u7b2c$k$\u4e2a\u70b9\uff0c\u5982\u679c$d1_k+d2_k=d1_v$\uff0c\u90a3\u4e48\uff0c$k$\u53f7\u8282\u70b9\u4fbf\u4e3a\u76ee\u524d$Geodetic$\u96c6\u5408\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u5e76\u8f93\u51fa\u3002\n\n---\n\n$Code:$\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<algorithm>\n#include<queue>\n#include<cstring>\nusing namespace std;\nconst int MAXN=50;\nint n,m,k,d1[MAXN],d2[MAXN];\n//n\u4e2a\u70b9\uff0cm\u6761\u8fb9\uff0ck\u6b21\u8be2\u95ee\uff0cd1\u548cd2\u5df2\u7ecf\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86\u3002 \ninline int read()\n{\n\tint s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')s=s*10+(ch-'0'),ch=getchar();\n\treturn s*w;\n}\n//\u5feb\u8bfb\uff0c\u4e00\u662f\u53ef\u4ee5\u88c5\u661f\uff0c\u4e8c\u662f\u53ef\u4ee5\u8ba9\u4ee3\u7801\u66f4\u5feb\u4e9b\uff08\u5176\u5b9e\u4e5f\u5feb\u4e0d\u4e86\u591a\u5c11 \nstruct edge\n{\n\tint to,cost; \n};\nvector<edge>G[MAXN];\n//\u7528vector\u5b58\u56fe\uff08\u6211\u8fd9\u79cd\u849f\u84bb\u53ea\u4f1avector\u4e86\u2026\u2026 \ntypedef pair<int,int>P;\n//\u5b9a\u4e49pair\u7c7b\u578b\u7684P\uff0c\u53ef\u4f9b\u88c5\u661f \nvoid dijkstra(int s)\n//\u7b2c\u4e00\u6b21dijkstra \n{\n\tpriority_queue<P,vector<P>,greater<P> >q;\n\tfor(register int i=1;i<=n;i++) d1[i]=1e9;\n\td1[s]=0;\n\tq.push(P{0,s});\n\twhile(!q.empty())\n\t{\n\t\tP p=q.top();\n\t\tq.pop();\n\t\tint v=p.second;\n\t\tif(d1[v]<p.first) continue;\n\t\tfor(register int i=0;i<G[v].size();i++)\n\t\t{\n\t\t\tedge e=G[v][i];\n\t\t\tif(d1[e.to]>d1[v]+e.cost)\n\t\t\t{\n\t\t\t\td1[e.to]=d1[v]+e.cost;\n\t\t\t\tq.push(P{d1[e.to],e.to});\n\t\t\t}\n\t\t}\n\t}\n}\nvoid dijkstra2(int s)\n//\u7b2c\u4e8c\u6b21dijkstra \n{\n\tpriority_queue<P,vector<P>,greater<P> >q;\n\tfor(register int i=1;i<=n;i++) d2[i]=1e9;\n\td2[s]=0;\n\tq.push(P{0,s});\n\twhile(!q.empty())\n\t{\n\t\tP p=q.top();\n\t\tq.pop();\n\t\tint v=p.second;\n\t\tif(d2[v]<p.first) continue;\n\t\tfor(register int i=0;i<G[v].size();i++)\n\t\t{\n\t\t\tedge e=G[v][i];\n\t\t\tif(d2[e.to]>d2[v]+e.cost)\n\t\t\t{\n\t\t\t\td2[e.to]=d2[v]+e.cost;\n\t\t\t\tq.push(P{d2[e.to],e.to});\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tn=read(),m=read();\n\twhile(m--)\n\t{\n\t\tint u=read(),v=read();\n\t\tG[u].push_back(edge{v,1});\n\t\tG[v].push_back(edge{u,1});\n\t\t//\u4e00\u5b9a\u8981\u5b58\u53cc\u5411\u8fb9\uff01 \n\t}\n\tk=read();//k\u6b21\u8be2\u95ee \n\twhile(k--)\n\t{\n\t\tint s=read(),t=read();\n\t\tdijkstra(s);\n\t\tdijkstra2(t);\n\t\tfor(register int k=1;k<=n;k++) if(d1[k]+d2[k]==d1[t]) printf(\"%d \",k);\n\t\t//\u516c\u5f0f \n\t\tprintf(\"\\n\");\n\t\t//\u522b\u5fd8\u6362\u884c \n\t}\n\treturn 0;//\u517b\u6210\u597d\u4e60\u60ef\n\t//\u5b8c\u7ed3\u6492\u82b1~~~ \n} \n```\n---\n\n\u8fd9\u9053\u9898\u603b\u4f53\u6765\u8bf4\u8fd8\u662f\u5f88\u6c34\u7684\uff0c\u5e94\u8be5\u662f\u4e00\u4e2a\u9ec4\u9898\u7684\u96be\u5ea6\u3002\n\n\u770b\u849f\u84bb\u6211\u5199\u5f97\u8fd9\u4e48\u8ba4\u771f\uff0c\u53ef\u4e0d\u53ef\u4ee5\u70b9\u4e2a\u8d5e\u518d\u8d70\u5462\uff1f",
        "postTime": 1587904658,
        "uid": 174303,
        "name": "_NaCly_Fish",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3906 \u3010Geodetic\u96c6\u5408\u3011"
    },
    {
        "content": "\n------------\n\n$Solution$\n\n\u5982\u679c\u67d0\u4e00\u70b9i\u5728\u8fb9(u,v)\u6700\u77ed\u8def\u4e0a\u5219$dis[u][i] + dis[i][v] = dis[u][v]$\n\n1\u3001\u5148\u4ee5u\u4e3a\u8d77\u70b9\u641c\u4e00\u904d\uff0c\u6c42$dis1[i]$,\u5373\u8d77\u70b9u\u5230\u6bcf\u4e00\u70b9\u7684\u8ddd\u79bb\uff0c\u5373\u6c42\u51fa$dis[u][i]$\n\n2\u3001\u5148\u4ee5v\u4e3a\u8d77\u70b9\u641c\u4e00\u904d\uff0c\u6c42$dis2[i]$,\u5373\u8d77\u70b9v\u5230\u6bcf\u4e00\u70b9\u7684\u8ddd\u79bb\uff0c\u5373\u6c42\u51fa$dis[v][i]$\u4e5f\u5c31\u662f$dis[i][v]$\n\n3\u3001\u6700\u540e\uff0c\u679a\u4e3e\u70b9\uff0c\u770b\u662f\u5426\u5728\u6700\u77ed\u8def\u4e0a\n\n------------\n\n\n$AC code $\u5448\u4e0a\uff08~~\u7801\u98ce\u73c2\u8fd8\u884c\uff1f~~\uff09\n```cpp\n#include <cstdio>\n#include <queue>\n#include <algorithm>\n#define maxn 1600\n#define inf 0x3f3f3f3f\nusing namespace std;\nstruct node \n{\n\tint to,next;\n}edge[maxn<<1];\nint head[maxn<<1],tot,N,M,K,dis1[maxn],dis2[maxn];\npriority_queue<pair<int,int> ,vector<pair<int,int> >,greater<pair<int,int > > >q;\nvoid add_edge(int u,int v){edge[++tot] = (node){v,head[u]};head[u]=tot;}\nvoid Dijkstra(int st,int *dis)\n{\n\tfor(int i = 1 ;i <= N;i ++)dis[i] = inf;\n\tdis[st] = 0;q.push(make_pair(0,st));\n\twhile(!q.empty())\n\t{\n\t\tpair<int,int> t = q.top();q.pop();int u = t.second;\n\t\tif(dis[u] != t.first)continue;\n\t\tfor(int i = head[u]; i ; i = edge[i].next)\n\t\t{\n\t\t\tint v = edge[i].to;\n\t\t\tif(dis[v] > dis[u] + 1)\n\t\t\tdis[v] = dis[u] + 1 , q.push(make_pair(dis[v],v));\n\t\t}\n\t}\n\treturn ;\n}\nint main()\n{\n\tint u,v;\n\tscanf(\"%d%d\",&N,&M);\n\tfor(int i = 1; i <= M; i ++)\n\t{\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tadd_edge(u,v);\n\t\tadd_edge(v,u);\n\t}\n\tscanf(\"%d\",&K);\n\twhile(K--)\n\t{\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tDijkstra(u,dis1);\n\t\tDijkstra(v,dis2);\n\t\tfor(int i = 1 ;i <= N; i ++)\n\t\tif(dis1[i] + dis2[i] == dis1[v])printf(\"%d \",i);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1571385763,
        "uid": 116162,
        "name": "\u7fbd\u5107",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P3906 \u3010Geodetic\u96c6\u5408\u3011"
    },
    {
        "content": "\u95ee\u9898\u5206\u6790\uff1a\u91cd\u70b9\u5728\u4e8e\u53ef\u80fd\u5b58\u5728\u591a\u4e2a\u70b9\u6ee1\u8db3\u8def\u5f84\u6700\u77ed\uff0c\u6240\u4ee5\u53ea\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u884c\u4e0d\u901a\u6216\u8005\u8bf4\u9700\u8981\u5904\u7406\u3002\n\n\u89e3\u51b3\u65b9\u6cd5:\u5f17\u6d1b\u4f0a\u5fb7\u5927\u6cd5\u597d\u3002\u7531\u4e8e\u6570\u636e\u8303\u56f4\u7684\u9650\u5236\uff0c\u672c\u9898\u53ef\u4ee5\u7528\u4ee3\u7801\u91cf\u76f8\u5bf9\u8f83\u5c11\u4e14\u4e0d\u6613\u51fa\u9519\u7684\u5f17\u6d1b\u4f0a\u5fb7\u89e3\u51b3\u3002\u7531\u4e8e\u5f17\u6d1b\u4f0a\u5fb7\u662f\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\uff0c\u6240\u4ee5\u53ea\u8981\u6ee1\u8db3\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u7b49\u4e8e\u8d77\u70b9\u5148\u5230\u4e2d\u95f4\u70b9\u518d\u4ece\u4e2d\u95f4\u70b9\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u76f8\u7b49\uff0c\u5c31\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u4e2d\u95f4\u70b9\u8ba1\u5165\u7b54\u6848\uff0c\u53ef\u80fd\u5b58\u5728\u591a\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u4e2d\u95f4\u70b9\u3002\n\n\u8fd9\u5c31\u4f53\u73b0\u4e86\u5f17\u6d1b\u4f0a\u5fb7\u7684\u4f18\u52bf\u6240\u5728\uff0c\u5728\u6570\u636e\u8303\u56f4\u5141\u8bb8\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u7684\u4ee3\u7801\u91cf\u8f83\u5c11\uff0c\u4f7f\u7528\u76f8\u5bf9\u65b9\u4fbf\u3002\n\n\u603b\u7ed3\uff1a\u672c\u9898\u5e94\u8be5\u8bf4\u662f\u6700\u77ed\u8def\u7684\u53d8\u5f62\uff0c\u9002\u5408\u4f5c\u4e3a\u6700\u77ed\u8def\u65b0\u5b66\u8005\u7ec3\u4e60\u7b97\u6cd5\uff0c\u719f\u6089\u7b97\u6cd5\u4e4b\u95f4\u7684\u4f18\u52bf\u4e0e\u7f3a\u70b9\u3002\n\n\n\u4ee3\u7801\u5b9e\u73b0\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint dis[50][50];\nint n,m,k;\nvoid Floyd(){//\u5f17\u6d1b\u4f0a\u5fb7\u6a21\u677f\n\tfor(int k=1;k<=n;k++)\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=i+1;j<=n;j++)//\u65e0\u5411\u56fe\u7684\u4e00\u4e2a\u5e38\u6570\u7ea7\u4f18\u5316\n\tif(dis[i][j]>dis[i][k]+dis[k][j])\n\tdis[i][j]=dis[j][i]=dis[i][k]+dis[k][j];\n}\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=n;j++)\n\tdis[i][j]=999999999;//\u8d4b\u521d\u503c\n\tfor(int i=1;i<=m;i++){\n\t\tint u,v;\n\t\tcin>>u>>v;\n\t\tdis[u][v]=dis[v][u]=1;\n\t}\n\tfor(int i=1;i<=n;i++)dis[i][i]=0;//\u81ea\u5df1\u5230\u81ea\u5df1\u5f53\u7136\u662f0\n\tFloyd();\n\tcin>>k;\n\twhile(k--){\n\t\tint a,b;\n\t\tcin>>a>>b;\n\t\tfor(int i=1;i<=n;i++)\n\t\tif(dis[a][b]==dis[a][i]+dis[i][b])//\u70b9\u96c6\u5408\u5224\u5b9a\n\t\tcout<<i<<\" \";\n\t\tcout<<endl;\n\t}\n\treturn 0;\n}\n```\n\n\u5e0c\u671b\u80fd\u5e2e\u52a9\u5230\u5927\u5bb6\u3002\u8c22\u8c22\uff01",
        "postTime": 1627975801,
        "uid": 114015,
        "name": "Marginal_world",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3906 \u3010Geodetic\u96c6\u5408\u3011"
    },
    {
        "content": "~~\u5148\u5410\u69fd\u4e00\u4e0b\u8fd9\u4e48\u6c34\u7684\u9898\u600e\u4e48\u4e0a\u84dd\u7684~~  \n\u770b\u5230\u6570\u636e\u8303\u56f4 $ n \\leqslant 50 $ \u679c\u65ad\u60f3\u5230 Floyd \uff0c\u4e00\u904d\u8dd1\u5b8c\u4e4b\u540e\u5f97\u5230\u6240\u6709\u70b9\u4e4b\u95f4\u7684\u76f8\u4e92\u8ddd\u79bb\uff0c\u4e0d\u59a8\u79f0\u4e4b\u4e3a $f$ \u3002  \n\u7136\u540e\u8003\u8651\u5bf9\u4e8e\u70b9\u5bf9 $a,b$ \uff0c\u5047\u5982\u5b58\u5728\u70b9 $i$ \u4f7f\u5f97 $f_{a,i}+f_{i,b}=f_{a,b}$ \uff0c\u90a3\u4e48\u4ece $a$ \u8d70\u5230 $i$ \u7136\u540e\u8d70\u5230 $b$ \u548c\u76f4\u63a5\u4ece $a$ \u8d70\u5230 $b$ \u4e00\u6837\u957f\uff0c\u5373 $i$ \u5728 $a$ \u5230 $b$ \u7684\u6700\u77ed\u8def\u4e0a\u3002  \n\n\u6240\u4ee5\u8dd1\u5b8c Floyd \u4e4b\u540e\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\u53ea\u8981**\u4ece\u5c0f\u5230\u5927**\u679a\u4e3e $i$ \u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a $O(n^3+nk)=O(n^3)$  \n\nFloyd \u76f8\u6bd4 bfs \u7684\u597d\u5904\uff1a\n* \u4ee3\u7801\u91cf\u7565\u5c0f\n* \u53ef\u4ee5\u5904\u7406\u8fb9\u6743\u4e0d\u7b49\u4e8e1\u7684\u60c5\u51b5\n\nFloyd \u76f8\u6bd4 SPFA \u7684\u597d\u5904\uff1a\n* \u4ee3\u7801\u91cf\u660e\u663e\u5c0f\n* SPFA \u53ef\u4ee5\u88ab\u5361\u5230 $O(nmk)$ \u5373 $O(n^3k)$ \uff0c Floyd \u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u7a33\u5b9a\u3002 ~~\u4f46\u662f\u8fd9\u9053\u9898 $n$ \u7279\u5c0f\u6240\u4ee5\u6ca1\u5173\u7cfb~~\n\n\u849f\u84bb\u7684\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <vector>\n#define INF 0x3f3f3f3f\nusing std::vector;\n#define N 50\nint n,m;\nint f[N][N];\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n            f[i][j]=i==j?0:INF;\n    while(m--)\n    {\n        int u,v;\n        scanf(\"%d%d\",&u,&v);\n        f[u][v]=f[v][u]=1;\n    }\n    for(int k=1;k<=n;k++)\n        for(int i=1;i<=n;i++)\n            for(int j=1;j<=n;j++)\n                if(f[i][k]+f[k][j]<f[i][j])\n                    f[i][j]=f[i][k]+f[k][j];\n    int k;\n    scanf(\"%d\",&k);\n    while(k--)\n    {\n        int a,b;\n        scanf(\"%d%d\",&a,&b);\n        for(int i=1;i<=n;i++)\n            if(f[a][i]+f[i][b]==f[a][b]) printf(\"%d \",i);\n        putchar('\\n');\n    }\n    return 0;\n}\n```",
        "postTime": 1627485211,
        "uid": 298051,
        "name": "xkcdjerry",
        "ccfLevel": 7,
        "title": "P3906\u9898\u89e3"
    },
    {
        "content": "- \u8fd9\u9053\u9898\u7528 Dijkstra \u5806\u4f18\u5316 + \u94fe\u5f0f\u524d\u5411\u661f \u5373\u53ef\n- Dijkstra \u6709\u5b9e\u7528\u6027\u5f3a\uff0c\u4ee3\u7801\u901f\u5ea6\u7a33\u5b9a\uff0c\u4e0d\u5bb9\u6613\u88ab\u5361\u7684\u4f18\u70b9\u3002\n\n- \u6240\u4ee5\u8bdd\u4e0d\u591a\u8bf4\uff0c\u76f4\u63a5\u8bf4\u4e00\u4e0b Dijkstra \u7684\u601d\u8def\uff1a\u7528\u6a21\u677f Dijkstra \u5148\u8dd1\u4e00\u904d\u8d77\u70b9 $u$ \u548c\u7ec8\u70b9 $v$\uff0c\u7528\u4e24\u4e2a\u6570\u7ec4 dis \u548c dist \u5206\u522b\u5b58\u6700\u77ed\u8def\u957f\u5ea6\u3002\u904d\u5386\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5982\u679c\u5bf9\u4e8e\u70b9 $i$\uff0c\u5982\u679c $dis[i] + dist[i] = dis[v]$\uff08\u6216 dist[u]\uff09\uff0c\u5219\u5c06 $i$ \u70b9\u52a0\u5165\u96c6\u5408\u4e2d\u3002\u6700\u540e\u6309\u987a\u5e8f\u8f93\u51fa\u5373\u53ef\u3002\n\n- code\uff1a\n\n```\n#include <bits/stdc++.h>\n#define maxn 200\nusing namespace std;\ninline int read() {\n  char c = getchar();\n  int x = 0, f = 1;\n  while (c < '0' || c > '9') {\n    if (c == '-') f = -1;\n    c = getchar();\n  }\n  while (c >= '0' && c <= '9') {\n    x = x * 10 + c - '0';\n    c = getchar();\n  }\n  return x * f;\n}\ninline void write(int x) {\n   if (x < 0) {\n       x = ~(x - 1);\n       putchar('-');\n   }\n   if (x > 9) \n       write(x / 10);\n   putchar(x % 10 + '0');\n}//\u5feb\u8bfb\u5feb\u8f93\nstruct edge {\n\tint to, nxt;\n}e[4000005];//\u7528\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\nstruct node {\n\tint u, cur;\n\tinline bool operator < (const node &x) const {//\u91cd\u8f7d\u8fd0\u7b97\u7b26<\u7ef4\u62a4\u5806\n\t\treturn cur > x.cur;\n\t}\n};\nint n, m, head[maxn], dis[maxn], dist[maxn], k, s, t, p;\npriority_queue <node> q;\npriority_queue <int, vector <int>, greater<int>> ans;//ans \u5373\u7b54\u6848\u96c6\u5408\nbool vis[maxn];\ninline void add (int u, int v) {\n\te[++k].to = v;\n\te[k].nxt = head[u];\n\thead[u] = k;\n}//\u94fe\u5f0f\u524d\u5411\u661f\u52a0\u8fb9\uff0ck \u4ece1\u8d77\ninline void dijkstra () {\n\tfor (int i = 1; i <= n; i++) dis[i] = 2147483647;\n\tdis[s] = 0;\n\tq.push((node){s, 0});//\u52a0\u5165\u8d77\u70b9\n\twhile (!q.empty()) {\n\t\tint u = q.top().u;//\u53d6\u51fa\u8d77\u70b9\n\t\tif (vis[u]) continue;//\u5224\u91cd\n\t\tfor (int i = head[u]; i; i = e[i].nxt) {//\u94fe\u5f0f\u524d\u5411\u661f\u904d\u5386\u6240\u6709\u8fb9\n\t\t\tint v = e[i].to;\n\t\t\tif (vis[v]) continue;\n\t\t\tif (dis[v] > dis[u] + 1) {//\u5982\u679c\u80fd\u677e\u5f1b\n\t\t\t\tdis[v] = dis[u] + 1;\n\t\t\t\tq.push((node){v, dis[v]});//\u677e\u5f1b\uff0cv \u70b9\u5165\u961f\n\t\t\t}\n\t\t}\n\t\tq.pop();\n\t\tvis[u] = 1;//\u66f4\u65b0\u961f\u5217\u548c\u6807\u8bb0\n\t}\n}\n//\u4ece\u8d77\u70b9 u \u505a Dijkstra \u904d\u5386\ninline void dijkstra1 () {\n\tfor (int i = 1; i <= n; i++) dist[i] = 2147483647;\n\tdist[t] = 0;\n\tq.push((node){t, 0});\n\twhile (!q.empty()) {\n\t\tint u = q.top().u;\n\t\tif (vis[u]) continue;\n\t\tfor (int i = head[u]; i; i = e[i].nxt) {\n\t\t\tint v = e[i].to;\n\t\t\tif (vis[v]) continue;\n\t\t\tif (dist[v] > dist[u] + 1) {\n\t\t\t\tdist[v] = dist[u] + 1;\n\t\t\t\tq.push((node){v, dist[v]});\n\t\t\t}\n\t\t}\n\t\tq.pop();\n\t\tvis[u] = 1;\n\t}\n}//\u4ece\u7ec8\u70b9v\u904d\u5386\nint main () {\n\tn = read(), m = read();\n\tfor (int i = 0; i < m; i++) {\n\t\tint u = read(), v = read();\n\t\tadd (u, v);\n\t\tadd (v, u);\n\t}//\u8f93\u5165\uff0c\u8bb0\u5f97\u662f\u65e0\u5411\u8fb9\n\tp = read();\n\twhile (p--) {\n\t\ts = read(), t = read();\n\t\tmemset (vis, 0, sizeof (vis));\n\t\twhile (!q.empty()) q.pop();//\u8bb0\u5f97\u521d\u59cb\u5316\u961f\u5217\n\t\tdijkstra();\n\t\twhile (!q.empty()) q.pop();\n\t\tmemset (vis, 0, sizeof (vis));\n\t\tdijkstra1();\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tif (dis[t] == dis[i] + dist[i]) ans.push(i);\n\t\t}//\u904d\u5386\uff0c\u627e\u7b54\u6848\n\t\twhile (!ans.empty()) {\n\t\t\twrite (ans.top());\n\t\t\tputchar (' ');\n\t\t\tans.pop();\n\t\t}//\u8f93\u51fa\n\t\tputs(\"\");\n\t}\n}\n```\n",
        "postTime": 1626857715,
        "uid": 317495,
        "name": "JWRuixi",
        "ccfLevel": 7,
        "title": "P3906 Solution"
    },
    {
        "content": "# \u8bfb\u9898\n\u770b\u5230\u5927\u5bb6\u90fd\u7528 $\\texttt{SPFA}$\uff0c\u96be\u9053\u6ca1\u6709\u53d1\u73b0 $n$ \u5f88\u5c0f\u5417\uff1f\n\n\u518d\u770b\u4e00\u4e0b\u591a\u6b21\u8be2\u95ee\uff0c\u591a\u6e90\u6700\u77ed\u8def\uff0c\u679c\u65ad\u7528 $\\texttt{Floyd}$\u3002\n\n# \u7b97\u6cd5\n\u6c42\u51fa\u4e86\u6700\u77ed\u8def\uff0c\u7136\u540e\u5462\uff1f\n\n\u5982\u4f55\u5224\u65ad $x$ \u662f\u5426\u5728 $v \\rightarrow u$ \u7684\u6700\u77ed\u8def\u4e0a\uff1f\n\n\u5f88\u7b80\u5355\uff0c\u5728 $v \\rightarrow u$ \u7684\u6700\u77ed\u8def\u4e0a\u53d6\u4e00\u70b9 $x$\uff0c\u5219 $v \\rightarrow u = v \\rightarrow x \\rightarrow u = v \\rightarrow x + x \\rightarrow u$\u3002\n\n\u53cd\u4e4b\uff0c\u5982\u679c $v \\rightarrow x + x \\rightarrow u = v \\rightarrow u$\uff0c\u5219 $v \\rightarrow x \\rightarrow u$ \u4e3a\u6700\u77ed\u8def\uff0c\u4e8e\u662f $x$ \u5728 $v \\rightarrow u$ \u7684\u6700\u77ed\u8def\u4e0a\u3002\n\n\u53e6\u5916\uff0c$u, v$ \u672c\u8eab\u4e0d\u9700\u8981\u7279\u5224\uff0c\u56e0\u4e3a $u \\rightarrow u = 0$\uff0c$v$ \u540c\u7406\u3002\n\n\u4e8e\u662f\u7b97\u6cd5\u5c31\u51fa\u6765\u4e86\uff0c\u5148\u7528 $\\texttt{Floyd}$ \u6c42\u4e00\u904d\u6700\u77ed\u8def\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee\uff0c\u627e\u51fa\u6240\u6709\u6ee1\u8db3\u7684 $x$\uff0c\u4e00\u4e00\u8f93\u51fa\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6\u4e3a $\\Theta(n^3)-\\Theta(n)$\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n, m, t, u, v;\nint dis[100][100];\nint main() {\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++) {\n\t\tfor (int j = 1; j <= n; j++) {\n\t\t\tif (i == j) dis[i][j] = 0;\n\t\t\telse dis[i][j] = 0x3F3F3F3F;\n\t\t}\n\t}\n\twhile (m--) {\n\t\tcin >> u >> v;\n\t\tdis[u][v] = dis[v][u] = 1;\n\t}\n\tfor (int k = 1; k <= n; k++) {\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tfor (int j = 1; j <= n; j++) {\n\t\t\t\tdis[i][j] = min(dis[i][j], dis[i][k] + dis[k][j]);\n\t\t\t}\n\t\t}\n\t}\n\tcin >> t;\n\twhile (t--) {\n\t\tcin >> u >> v;\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tif (dis[u][i] + dis[i][v] == dis[u][v]) cout << i << ' ';\n\t\t}\n\t\tcout << endl;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1623678041,
        "uid": 153422,
        "name": "0x3F",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3906 \u3010Geodetic\u96c6\u5408\u3011"
    },
    {
        "content": "\u5f88\u6c34\u7684\u4e00\u9053\u9898\n\n\u9898\u76ee\u5927\u610f\u662f\u6c42\u51fa$u->v$\u6700\u77ed\u8def\u70b9\u7684\u96c6\u5408\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5148\u628a\u6700\u77ed\u8def\u6c42\u51fa\u6765,\u5982\u679c\u6211\u4eec\u53d1\u73b0$dis_{u->i}+dis_{i->v}=dis_{u->v}$\u7684\u70b9$i$,\u90a3\u4e48$i$\u4e00\u5b9a\u5728\u6700\u77ed\u8def\u4e0a\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981$floyed$\u6c42\u51fa\u6700\u77ed\u8def,\u7136\u540e\u5bf9\u4e8e\u6bcf\u7ec4\u8be2\u95ee\n\n\u4ece$1$\u5230$n$\u5224\u65ad$i$\u5408\u6cd5,\u7136\u540e\u8f93\u51fa\u5408\u6cd5\u7684$i$\u5373\u53ef\n\n\u4ee3\u7801\uff1a\n\n```\n#include<bits/stdc++.h>\n#define INF 20041026\n#define N 51\nusing namespace std;\nint d[N][N],n,m;\nbool vis[N];\nint main( ){\n\tint i,j,k,x,y;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=1;i<=n;++i){\n\t\tfor(j=1;j<=n;++j)\n\t\td[i][j]=20041026;\n\t\td[i][i]=0;\n\t}\n\tfor(i=1;i<=m;++i){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\td[x][y]=d[y][x]=1;\n\t}\n\tfor(k=1;k<=n;++k)\n\tfor(i=1;i<=n;++i)\n\tfor(j=1;j<=n;++j)\n\td[i][j]=min(d[i][j],d[i][k]+d[k][j]);\n\tscanf(\"%d\",&m);\n\twhile(m--){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tfor(i=1;i<=n;++i)\n\t\tif(d[x][i]+d[i][y]==d[x][y])printf(\"%d \",i);\n\t\tputchar('\\n');\n\t}\n}\n```",
        "postTime": 1603240045,
        "uid": 117658,
        "name": "Space_Gold_Trash",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3906 \u3010Geodetic\u96c6\u5408\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u76ee\u90a3\u4e48\u7b80\u5355\u6ca1\u51e0\u4e2a\u9898\u89e3\uff0c\u6211\u5c31\u6765\u53d1\u4e00\u4e2a\u5427\u3002\u76f4\u63a5bfs\uff0c\u7136\u540edfs\u5c31\u641e\u5b8c\u4e86\u3002\n\u7b97\u51fa\u6bcf\u4e2a\u70b9\u7684\u8ddd\u79bb\u6e90\u70b9\u7684\u6700\u77ed\u8def\u5f84\uff0c\u7136\u540ed[u]==d[v]+1\uff0c\u5c31\u8fd9\u6837\uff0c\u53ef\u4ee5\u627e\u5230\u6240\u6709\u7684\u8def\u5f84\uff0c\u6700\u540e\u7528unique\u53bb\u91cd\uff0c\u5c31\u5b8c\u4e86\u3002\u7279\u522b\u7b80\u5355\u3002\n```c\n#include<bits/stdc++.h>\n#pragma GCC optimize(2)\n#define MAXN 50\n#define maxnode 1000005\n#define sigma_size 26\n#define md 12345678\n#define INF 0x3f3f3f3f\n#define pii pair<int,int>\nusing namespace std;\n\nint n,m,k;\nvector<int> G[MAXN];\nvector<int> P;\nint d[MAXN];\nbool vis[MAXN];\nint s,t;\n\nvoid dfs(int u)\n{\n    P.push_back(u);\n    if(u==s)\n        return ;\n    for(int i=0;i<G[u].size();i++)\n    {\n        int v=G[u][i];\n        if(d[v]==d[u]-1)\n            dfs(v);\n    }\n}\n\nvoid solve(int s,int t)\n{\n    memset(d,INF,sizeof(d));\n    memset(vis,false,sizeof(vis));\n    queue<int> Q;\n    Q.push(s);\n    d[s]=0;\n    vis[s]=true;\n    while(!Q.empty())\n    {\n        int X=Q.front();\n        Q.pop();\n        for(int i=0;i<G[X].size();i++)\n        {\n            int v=G[X][i];\n            if(vis[v])\n                continue;\n            vis[v]=true;\n            Q.push(v);\n            d[v]=d[X]+1;\n        }\n    }\n}\n\nint main()\n{\n    scanf(\"%d %d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        int u,v;\n        scanf(\"%d %d\",&u,&v);\n        G[u].push_back(v);\n        G[v].push_back(u);\n    }\n    scanf(\"%d\",&k);\n    for(int i=1;i<=k;i++)\n    {\n        P.clear();\n        scanf(\"%d %d\",&s,&t);\n        solve(s,t);\n        dfs(t);\n        sort(P.begin(),P.end());\n        vector<int>::iterator it;\n        it=unique(P.begin(),P.end());\n        P.erase(it,P.end());\n        for(int i=0;i<P.size();i++)\n            printf(\"%d \",P[i]);\n        printf(\"\\n\");\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1573306336,
        "uid": 210155,
        "name": "abandentsky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3906 \u3010Geodetic\u96c6\u5408\u3011"
    },
    {
        "content": "#### \u5f53\u6211\u770b\u5230n<=40\u7684\u65f6\u5019\uff0c\u54ce\uff0c\u6211\u5c31\u660e\u767d\uff0c\u8fd9\u9898\u5c31\u662f\u8981\u6211\u4eec\u5199\u4e2an\u4e09\u65b9\u7684\u66b4\u529b\n**\u6211\u7684\u65b9\u6cd5\u4e5f\u662f\u5148floyd\u6c42\u6240\u6709\u70b9\u5bf9\u7684\u6700\u77ed\u8def**\n\n#### \u518d\u4e0b\u9762\u7528\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u5224\u65ad\u662f\u5426\u5728a->b \u7684\u6700\u77ed\u8def\u4e0a\n```cpp\n\tfor(int i=1;i<=n;i++)\n\tif(f[a][i]+f[i][b]==f[a][b])printf(\"%lld \",i);\n```\n\n**\u5982\u679ck\u6bd4\u8f83\u5927\u7684\u8bdd\uff0c\u590d\u6742\u5ea6 O(k*n)**\n\n**(\u56e0\u4e3a\u8fd9\u91ccn\u6700\u5927\u53ea\u6709\u56db\u5341\uff0c\u6240\u4ee5\u6211\u8ba4\u4e3a n*n\u8fdc\u8fdc\u5c0f\u4e8ek ,\u628an*n\u5f53\u505a\u5e38\u6570\u4e86)**\n\n## \u73b0\u5728\u624d\u662f\u91cd\u70b9\n## \u524d\u9762\u4e00\u7bc7\u9898\u89e3\u8bf4\u8981\u6392\u5e8f\uff0c\u5176\u5b9e\u6839\u672c\u4e0d\u9700\u8981\n## \u76f4\u63a5\u4ece1\u5230n\u5224\u65ad\u5c31\u597d\u4e86\u554a,\u8d77\u70b9\u7ec8\u70b9\u5c31\u7b97\u548c\u5224\u65ad\u7684\u70b9\u4e00\u6837\u4e5f\u6ca1\u6709\u5173\u7cfb\n### \u521d\u59cb\u5316\u7684\u65f6\u5019\u52a0\u4e0a\u8fd9\u4e2a\n```cpp\n\tfor(int i=1;i<=n;i++)f[i][i]=0;\n```\n### \u5347\u5e8f\u5224\u65ad\uff0c\u5347\u5e8f\u8f93\u51fa\n### \u5982\u679c\u8981\u6392\u5e8f\u7684\u8bdd\uff0c\u590d\u6742\u5ea6\u76f4\u63a5\u5c31\u591a\u4e86\u4e00\u4e2alog\n### ~~\u8fd9\u91ccn<=40,\u5012\u4e5f\u6ca1\u4ec0\u4e48\u95ee\u9898~~\n### \u8981\u662f\u6570\u636e\u5927\u4e86\uff0c\u80af\u5b9a\u5c31\u4f1a\u6709\u533a\u522b\u7684\u5427\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n#define int long long\nconst int N=50;\nint f[N][N];\nsigned main(){\n\tint n,m;\n\tcin>>n>>m;\n\tmemset(f,0x3f,sizeof(f));\n\tfor(int i=1;i<=n;i++)f[i][i]=0;\n\tfor(int i=1,u,v;i<=m;i++){\n\t\tscanf(\"%lld%lld\",&u,&v);\n\t\tf[u][v]=1,f[v][u]=1;\n\t}\n\n\tfor(int k=1;k<=n;k++)\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=n;j++)\n\tf[i][j]=min(f[i][k]+f[k][j],f[i][j]);\n\tint k;\n\tcin>>k;\n\tint a,b;\n\twhile(k--){\n\t\tscanf(\"%lld%lld\",&a,&b);\n\t\tfor(int i=1;i<=n;i++)\n\t\tif(f[a][i]+f[i][b]==f[a][b])printf(\"%lld \",i);\n\t\tprintf(\"\\n\");\n\t}\n}\n```\n\n",
        "postTime": 1569497971,
        "uid": 113695,
        "name": "\u767d\u6728\u5076\u541b",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3906 \u3010Geodetic\u96c6\u5408\u3011"
    },
    {
        "content": "\u5199\u8fd9\u9898\u7684\u91cd\u70b9\u4ee3\u7801\u5c31\u53ea\u6709\u4e00\u884c\uff0c\u53ea\u8981\u60f3\u5230\u8fd9\u4e2a\u70b9\u4e86\u5c31\u5f88\u597d\u5199\u4e86\u3002\n\n\u56e0\u4e3a\u6570\u636e\u5f88\u5c0f\uff08\u770b\u8d77\u6765\u5f88\u5c0f\uff0c\u867d\u7136\u53ea\u544a\u8bc9\u4e86n\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528floyd\u6765\u5199\uff0c\u800c\u4e14\u4e0d\u7528\u62c5\u5fc3\u8d85\u65f6\u3002\n\n\u9898\u76ee\u8bf4\u4e86\u8fd9\u662f\u4e2a\u65e0\u5411\u8fde\u901a\u56fe\uff0c\u6240\u4ee5\u628a\u4e24\u4e2a\u4f4d\u7f6e\u90fd\u8d4b\u4e0a\u503c\u3002\n\n```cpp\nfor(int i=1;i<=m;i++)\n{\n\tcin>>a>>b;\n\td[a][b]=d[b][a]=1;//\u5f88\u597d\u7406\u89e3\uff0c\u65e0\u5411\u56fe\n}\n```\n\u7136\u540e\u5c31\u662f\u6a21\u677f\u7684floyd\uff08\u4e09\u5faa\u73af\uff09\uff1a\n\n```cpp\nfor(int i=1;i<=n;i++)\n{\n\tfor(int j=1;j<=n;j++)\n\t{\n\t\tfor(int k=1;k<=n;k++)\n\t\t{\n\t\t\tif(d[j][k]>d[j][i]+d[i][k])\n\t\t\t{\n\t\t\t\td[j][k]=d[j][i]+d[i][k];\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\u5230\u8fd9\u91cc\u90fd\u4e0d\u9700\u8981\u4fee\u6539\u6a21\u677f\uff0c\u4e5f\u7528\u65b0\u5efa\u4e00\u4e2a\u6570\u7ec4\u5728\u4e09\u5faa\u73af\u4e2d\uff08\u90a3\u662f\u53ea\u6c42\u4e00\u79cd\uff09\u3002\u6211\u4eec\u8981\u6c42\u7684\u662f\u591a\u79cd\u6700\u77ed\u8def\u3002\u53ea\u9700\u8981\u5728\u7ebf\u5904\u7406\u5c31\u597d\u4e86\u3002\n\n\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u8981\u6392\u5e8f\u6240\u4ee5\u8fd8\u8981\u7528\u4e00\u4e2a\u53d8\u91cf\u5b58\u8d77\u6765\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u91cd\u70b9\u4ee3\u7801\uff1a\n\n```cpp\nfor(int j=1;j<=n;j++)\n{\n\tif(d[v][j]+d[j][u]==d[v][u])\n\t{\n\t\ttot++;\n\t\tc[tot]=j;\n\t}\n}\n```\n\u8fd9\u6b65\u7684\u76ee\u7684\u5f88\u5bb9\u6613\u5c31\u4ece\u4ee3\u7801\u4e2d\u770b\u51fa\u6765\u4e86\u5427\u3002\n\n\u5c31\u76f8\u5f53\u4e8e\u7ed9\u4f604\u4e2a\u70b9A\u3001B\u3001C\u3001D\u544a\u8bc9\u4f60\u5404\u4e2a\u70b9\u7684\u8ddd\u79bb\uff0c\u8ba9\u4f60\u627e\u6709\u51e0\u79cd\u65b9\u6cd5\u62fc\u51d1\u6210A\u5230D\u7684\u8ddd\u79bb\u4e00\u6837\u3002\n\n\u628a\u6240\u6709\u627e\u7684\u65b9\u6cd5\u5b58\u5165\u6570\u7ec4\u4e2d\uff0c\u5728\u62cd\u4e2a\u5e8f\u8f93\u51fa\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4e0b\u4e00\u6b21\u64cd\u4f5c\u8bb0\u5f97\u8981\u521d\u59cb\u5316\u3002\n\n\u603b\u4ee3\u7801:\n\n```cpp\n#include<bits/stdc++.h>\n//#pragma GCC optimize(2)//O2\u4f18\u5316\nusing namespace std;\ntypedef long long ll;\nconst int N=1600+10;\nint n,m,a,b,k,v,u;\nint tot,d[N][N],c[N];\nint main()\n{\n\tmemset(d,0x3f,sizeof(d));\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\td[i][i]=0;\n\t}\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>a>>b;\n\t\td[a][b]=d[b][a]=1;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tfor(int k=1;k<=n;k++)\n\t\t\t{\n\t\t\t\tif(d[j][k]>d[j][i]+d[i][k])\n\t\t\t\t{\n\t\t\t\t\td[j][k]=d[j][i]+d[i][k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcin>>k;\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\tcin>>v>>u;\n\t\ttot=1;\n\t\tc[tot]=v;\n\t\ttot++;\n\t\tc[tot]=u;\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tif(d[v][j]+d[j][u]==d[v][u])\n\t\t\t{\n\t\t\t\ttot++;\n\t\t\t\tc[tot]=j;\n\t\t\t}\n\t\t}\n\t\tsort(c+1,c+1+tot);\n\t\tfor(int j=1;j<=tot;j++)\n\t\t{\n\t\t\tcout<<c[j]<<\" \";\n\t\t}\n\t\tcout<<endl;\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1569381368,
        "uid": 156734,
        "name": "dfydada\u26a1\u26a1\u26a1",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3906 \u3010Geodetic\u96c6\u5408\u3011"
    },
    {
        "content": "**\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u5806\u4f18\u5316\u7684dijisktra\u8dd1\u4e00\u8fb9\uff0c\u7528\u52a8\u6001\u6570\u7ec4Vector\u4fdd\u5b58\u80fd\u591f\u5230\u8fbe\u7ec8\u70b9\u7684\u8def\u7ebf\u4e2d\u6bcf\u4e2a\u70b9\u7684\u524d\u4e00\u4e2a\u70b9\uff0c\u6700\u540e\u7528dfs\u5b58\u4e0b\u6240\u6709\u8def\u5f84\uff0c\u7528\u53bb\u91cd\u51fd\u6570unique\u53bb\u91cd\uff0c\u518d\u6392\u5e8f\u5c31\u53ef\u4ee5\u4e86\uff01\uff01\uff01**\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<queue>\n#include<vector>\n#include<cstring>\nusing namespace std;\nconst int N=1010010;\nvector<int>g[N];\nstruct node{\n\tint next,to;\n}e[N];\nint head[N],cnt,vis[N],dis[N],a[N],n,m,k,cnt1;\nvoid add(int from,int to){\n\te[++cnt].next=head[from];\n\te[cnt].to=to;\n\thead[from]=cnt;\n}\nstruct edge{\n\tint l,d;\n\tbool operator<(const edge&a)const{\n\t\treturn d>a.d;\n\t}\n};\npriority_queue<edge> q;\nvoid spfa(int x){\n\tmemset(vis,0,sizeof(vis));\n\tfor(int i=1;i<=n;i++) dis[i]=0x7fffffff,g[i].clear();\n\tdis[x]=0;\n\tq.push((edge){x,0});\n\twhile(!q.empty()){\n\t\tedge p=q.top();\n\t\tq.pop();\n\t\tint u=p.l;\n\t\tif(vis[u]) continue;\n\t\tvis[u]=1;\n\t\tfor(int i=head[u];i;i=e[i].next){\n\t\t\tint v=e[i].to;\n\t\t\tif(dis[v]>=dis[u]+1){\n\t\t\t\tdis[v]=dis[u]+1;\n\t\t\t\tg[v].push_back(u);\n\t\t\t\t//printf(\"%d %d\\n\",u,v);\n\t\t\t\tif(!vis[v]){\n\t\t\t\t\tq.push((edge){v,dis[v]});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nvoid dfs(int x,int p){\n\tif(x==p) {\n\t\treturn;\n\t}\n\tfor(int j=0;j<g[x].size();j++){\n\t\ta[++cnt1]=g[x][j];\n\t\tdfs(g[x][j],p);\n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y);\n\t\tadd(y,x);\n\t}\n    scanf(\"%d\",&k);\n    for(int i=1;i<=k;i++){\n    \tint s,t;\n    \tscanf(\"%d%d\",&s,&t);\n    \tspfa(s);\n    \tdfs(t,s);\n    \ta[++cnt1]=t;\n    \tsort(a+1,a+cnt1+1);\n    \tint pp=unique(a+1,a+cnt1+1)-(a+1);\n\t\tunique(a+1,a+cnt1+1)-(a+1);\n    \tfor(int j=1;j<=pp;j++){\n    \t\tif(a[j]!=0)\n    \t\tprintf(\"%d \",a[j]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t\tcnt1=0;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1551594317,
        "uid": 94973,
        "name": "\u51b0\u6868",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3906 \u3010Geodetic\u96c6\u5408\u3011"
    }
]