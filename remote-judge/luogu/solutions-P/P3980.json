[
    {
        "content": "# \u5e7f\u544a\n\n[\u849f\u84bb\u7684blog](http://www.cnblogs.com/dedicatus545/p/8777535.html)\n\n\u7531\u4e8e\u672c\u4eba\u6c34\u5e73\u6709\u9650\uff0c\u65e0\u6cd5\u63d0\u4f9b\u56fe\u7247\uff0c\u5404\u4f4ddalao\u5c06\u5c31\u7740\u770b\u770b\u5427\n\n\u56fe\u7247\u8bf4\u660e\u7684\u8bdd\uff0c\u697c\u4e0b\u90a3\u4f4d\u6709\u54e6\uff08\u867d\u7136\u4e5f\u5c31\u662f\u4e00\u5f20\u6bd4\u8f83\u7b80\u7565\u7684\u3010\u96fe\u3011\uff09\n\n# \u6b63\u6587\n\n## \u5f15\u5165\uff1a\u7f51\u7edc\u6d41\uff1f\n\n\u770b\u5230\u8fd9\u9053\u9898\uff0c\u7b2c\u4e00\u60f3\u6cd5\u662f\u7528\u4e00\u4e2adp\u6765\u5b8c\u6210\u51b3\u7b56\n\n\u4f46\u662f\uff0c\u663e\u7136\u8fd9\u9053\u9898\u7684\u6570\u636e\u5e76\u4e0d\u5141\u8bb8\u6211\u4eec\u8fdb\u884cdp\uff0c\u5c24\u5176\u662f\u670910000\u79cd\u5fd7\u613f\u8005\u7684\u60c5\u51b5\u4e0b\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u60f3\u522b\u7684\u529e\u6cd5\u6765\u89e3\u51b3\uff1a\n\n\u8d2a\u5fc3\uff1f\u8fd9\u9053\u9898\u505a\u7684\u51b3\u7b56\u9664\u4e86\u4ef7\u503c\u4ee5\u5916\u8fd8\u6709\u8986\u76d6\u9762\u95ee\u9898\uff0c\u800c\u4e14\u66f4\u81f4\u547d\u7684\u662f\u6bcf\u4e00\u5929\u7684\u4eba\u6570\u9700\u6c42\u8fd8\u4e0d\u4e00\u6837\n\n\u90a3\u4e48\u9898\u76ee\u9650\u5236\u5982\u6b64\u591a\u5143\u5316\u7684\u9898\u76ee\uff0c\u6211\u4eec\u5c31\u4e00\u5b9a\u8981\u60f3\u5230\u7528\u90a3\u4e2a\u4f20\u8bf4\u4e2d\u7684\u4e07\u80fd\u7b97\u6cd5\u2014\u2014\u7f51\u7edc\u6d41\n\n\u60f3\u5230\u7f51\u7edc\u6d41\u4ee5\u540e\uff0c\u4e00\u4e2a\u76f4\u89c2\u7684\u60f3\u6cd5\u5c31\u662f\u6e90\u70b9\u8fde\u4eba\uff0c\u4eba\u8fde\u53ef\u4ee5\u88ab\u96c7\u4f63\u7684\u65e5\u5b50\uff0c\u65e5\u5b50\u8fde\u6c47\u70b9\uff0c\u7136\u540e\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\n\n\u4f46\u662f\u8fd9\u6837\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u672c\u9898\u4e2d\u7684\u96c7\u4f63\u4e0d\u662f\u53ef\u4ee5\u4e00\u5929\u7528\u4e00\u5929\u4e0d\u7528\u7684\uff0c\u800c\u662f\u4f60\u82b1\u4e86\u90a3\u4e48\u591a\u94b1\uff0c\u4ed6\u5c31\u4e00\u6b21\u6027\u5e2e\u4f60\u4eceSi\u505a\u5230Ti\uff0c\u4e0d\u80fd\u6309\u5929\u8d2d\u4e70\n\n\u800c\u6211\u4eec\u7684\u8fd9\u4e2a\u7f51\u7edc\u6d41\u6a21\u578b\u663e\u7136\u53ef\u4ee5\u8ba9\u6d41\u91cf\u4ece\u6bcf\u4e2a\u201c\u4eba\u70b9\u201d\u7684\u4e00\u90e8\u5206\u51fa\u8fb9\u6d41\u51fa\uff0c\u5e76\u4e0d\u6b63\u786e\n\n## \u201c\u4e00\u9762\u5bf9\u591a\u9762\u201d\n\n\u8fd9\u91cc\u7684\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u79f0\u4e4b\u4e3a\u201c\u4e00\u9762\u5bf9\u591a\u9762\u201d\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u51b3\u7b56\u4f1a\u5f71\u54cd\u5230\u591a\u4e2a\u9650\u5236\u6761\u4ef6\u7684\u6539\u53d8\uff0c\u4f46\u662f\u7f51\u7edc\u6d41\u4e2d\u7684\u6d41\u91cf\u662f\u4e00\u5bf9\u4e00\u7684\uff0c\u4e5f\u5c31\u662f\u4e00\u70b9\u6d41\u91cf\u4e0d\u80fd\u5728\u67d0\u4e00\u4e2a\u70b9\u201c\u5206\u201d\u6210\u5f88\u591a\u6d41\u91cf\uff0c\u6240\u4ee5\u5e76\u4e0d\u80fd\u89e3\u51b3\u8fd9\u79cd\u201c\u4e00\u9762\u5bf9\u591a\u9762\u201d\u7684\u95ee\u9898\n\n\u90a3\u6211\u4eec\u5c31\u8981\u8003\u8651\u66f4\u6362\u601d\u8def\u4e86\n\n\u6211\u4eec\u4e4b\u524d\u7684\u60f3\u6cd5\u662f\u4ee5\u201c\u4e00\u4e2a\u88ab\u96c7\u4f63\u7684\u4eba\u201d\u4e3a\u201c\u4e00\u70b9\u6d41\u91cf\u201d\uff0c\u4f46\u662f\u4ed4\u7ec6\u601d\u7d22\uff0c\u53d1\u73b0\u51fa\u73b0\u4e0a\u8ff0\u95ee\u9898\u7684\u672c\u8d28\u5728\u4e8e\uff1a\u4e0d\u540c\u7684\u65e5\u5b50\u53ef\u80fd\u4f1a\u7528\u540c\u4e00\u4e2a\u4eba\uff0c\u800c\u4ee3\u8868\u540c\u4e00\u4e2a\u4eba\u7684\u6d41\u91cf\u53ea\u6709\u4e00\n\n\u90a3\u6211\u4eec\u5c31\u8981\u60f3\u529e\u6cd5\u8ba9\u8fd9\u4e00\u4e2a\u6d41\u91cf\uff0c\u53bb\u8986\u76d6\u6240\u6709\u7684Si\u5230Ti\u7684\u65e5\u5b50\n\n\u8fd9\u5f15\u5bfc\u6211\u4eec\u60f3\u5230\u5982\u4e0b\u6a21\u578b\uff1a\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2d\u5fd7\u613f\u8005(si,ti,ci)\uff0c\u6211\u4eec\u5efa\u4e00\u6761\u8de8\u8fc7si\u5230ti\u7684\u6240\u6709\u70b9\u7684\u8fb9\uff0c\u8d39\u7528\u4e3aci\uff0c\u6765\u8868\u793a\u201c\u8fd9\u4e00\u4e2a\u6d41\u91cf\u4e00\u76f4\u6d41\u5b8c\u4e86\u8fd9\u4e9b\u533a\u57df\u201d\n\n\u4f46\u662f\u95ee\u9898\u5728\u4e8e\uff0c\u53ea\u662f\u8fd9\u6837\u5efa\u56fe\u7684\u8bdd\uff0c\u5e76\u6ca1\u6709\u628a\u6bcf\u5929\u7684\u4eba\u6570\u9650\u5236ai\u653e\u5230\u56fe\u91cc\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2a\u56fe\u7f3a\u5c11\u4fe1\u606f\n\n## \u8865\u5168\u4fe1\u606f\n\n\u6b64\u65f6\u6211\u4eec\u9700\u8981\u60f3\u529e\u6cd5\u628a\u4eba\u6570\u9650\u5236\u653e\u5230\u56fe\u91cc\n\n\u6211\u4eec\u8003\u8651\u6700\u5927\u6d41\u7b97\u6cd5\uff1a\u5b83\u4f1a\u6c42\u51fa\u6700\u5927\u7684\u6d41\u91cf\n\n\u90a3\u6211\u4eec\u65e2\u7136\u7528\u4e00\u70b9\u6d41\u91cf\u8868\u793a\u4e00\u4e2a\u4eba\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e0d\u628a\u8fd9\u4e2a\u201c\u9700\u8981\u7528\u4eba\u201d\u7684\u9650\u5236\uff0c\u653e\u5230\u53e6\u5916\u51e0\u6761\u8fb9\u4e0a\u5462\uff1f\n\n\u6211\u4eec\u5728\u70b9(i,i+1)\u4e4b\u95f4\u5efa\u8fb9\uff0c\u8bbe\u6d41\u91cf\u4e3a-a[i]\uff0c\u4e5f\u5c31\u662f\u8d1f\u7684\u5f53\u5929\u9700\u6c42\u6570\uff0c\u8d39\u7528\u81ea\u7136\u662f\u96f6\u7684\n\n\u7136\u540e\uff0c\u4ee4\u4e0a\u6587\u4e2d\u7684\u5fd7\u613f\u8005(si,ti,ci)\uff0c\u5efa\u8fb9(si,ti+1)\uff0c\u8d39\u7528ci\uff0c\u6d41\u91cf\u65e0\u9650\n\n\u6b64\u65f6\u6211\u4eec\u76f8\u5f53\u4e8e\u662f\u628a\u7b2ci\u5929\u7684\u51b3\u7b56\u653e\u5230\u4e86\u7b2ci\u4e2a\u70b9\u548c\u7b2ci+1\u4e2a\u70b9\u4e4b\u95f4\u7684\u6240\u6709\u8fb9\u4e0a\uff08\u5c31\u662f\u628a\u6240\u6709\u70b9\u6392\u6210\u4e00\u6392\uff0c\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u90a3\u4e00\u6761\u4f4d\u7f6e\u91cc\u7684\u6240\u6709\u8fb9\uff0c\u5305\u62ec\u8de8\u8fc7\u8fd9\u4e2a\u533a\u95f4\u7684\u5fd7\u613f\u8005\u8fb9\uff09\n\n\u9700\u8981\u5fd7\u613f\u8005\uff1f\u8ba9\u5b83\u4eec\u4ece\u5fd7\u613f\u8005\u8fb9\u4e0a\u6d41\u8fc7\u53bb\uff0c\u540c\u65f6\u8ba9\u4eba\u6570\u9650\u5236\u8fb9\u6ee1\u6d41\u5230-a[i]\uff0c\u8fd9\u6837\u6c42\u4e00\u4e2a1-n+1\u7684\u6700\u5927\u6d41\uff0c\u6d41\u91cf\u4e3a0\u7684\u6700\u5c0f\u8d39\u7528\u5c31\u662f\u96c7\u4f63\u4eba\u7684\u6700\u5c0f\u8d39\u7528\u4e86\n\n\u4e3a\u4e86\u8ba9\u8fd9\u4e2a\u9650\u5236\u8d77\u6548\uff0c\u53c8\u56e0\u4e3a\u7f51\u7edc\u6d41\u4e2d\u6d41\u91cf\u975e\u8d1f\uff0c\u6240\u4ee5\u6211\u4eec\u5efa\u7acb\u70b9SS\u548cTT\uff0c\u8fde\u8fb9(SS,1)(n+1,TT)\uff0c\u9650\u5236\u4e3ainf\uff0c\u8d39\u7528\u4e3a0\n\n\u540c\u65f6\uff0c\u6211\u4eec\u628a\u4e4b\u524d\u7684\u4eba\u6570\u9650\u5236\u8fb9\u7684\u6d41\u91cf\u6539\u6210(inf-a[i])\uff0c\u8fd9\u6837\u6700\u7ec8\u7684SS-TT\u6700\u5927\u6d41\u4e00\u5b9a\u662finf\uff0c\u800c\u4e14\u9650\u5236\u4f9d\u7136\u6210\u7acb\n\n## \u5b8c\u6210\n\n# \u603b\u7ed3\n\n\u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u672c\u9898\u7684\u5efa\u6a21\uff0c\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u590d\u6742\u800c\u5341\u5206\u6df1\u523b\u7684\uff0c\u6211\u4eec\u4ece\u6700\u5f00\u59cb\u7684\u66b4\u529b\u3001dp\uff0c\u8f6c\u5316\u5230\u7f51\u7edc\u6d41\uff0c\u53c8\u4ece\u201c\u4e00\u9762\u5bf9\u591a\u9762\u201d\u7684\u95ee\u9898\u4e2d\u8df3\u4e86\u51fa\u6765\uff0c\u8f6c\u5316\u5230\u4e86\u6700\u540e\u7684\u65b9\u6cd5\uff0c\u53c8\u589e\u52a0\u4e86inf\u7684\u6d41\u91cf\u6765\u4f7f\u6574\u4e2a\u56fe\u5408\u6cd5\n\n\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u9053\u9898\u91cc\u4e3b\u8981\u89e3\u51b3\u7684\u5c31\u662f\u4e24\u4e2a\u77db\u76fe\uff1adp\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u591f\uff0c\u4ee5\u53ca\u201c\u4e00\u9762\u5bf9\u591a\u9762\u201d\u4e0d\u53ef\u884c\n\n\u7b2c\u4e00\u4e2a\u77db\u76fe\u662f\u65f6\u95f4\u4e0a\u7684\uff0c\u6211\u4eec\u53d1\u73b0\u65e0\u6cd5\u8fdb\u884c\u4f18\u5316\u4ee5\u540e\uff0c\u8f6c\u6362\u4e86\u7b97\u6cd5\n\n\u7b2c\u4e8c\u4e2a\u77db\u76fe\u5728\u4e8e\u5efa\u6a21\u4e4b\u4e0a\uff0c\u6211\u4eec\u91c7\u53d6\u4e86\u7814\u7a76\u7b97\u6cd5\u672c\u8d28\u3001\u91cd\u65b0\u6784\u5efa\u6a21\u578b\u7684\u65b9\u6cd5\uff0c\u820d\u5f03\u4e86\u5e38\u89c1\u7684\u5efa\u56fe\u6a21\u578b\u800c\u5efa\u7acb\u4e86\u8fd9\u9053\u9898\u7684\u72ec\u6709\u6a21\u578b\n\n\u7531\u6b64\u53ef\u89c1\uff0c\u505a\u9898\u7684\u65f6\u5019\u601d\u8def\u4e00\u5b9a\u8981\u653e\u5f00\uff0c\u8981\u5927\u80c6\uff1b\u5982\u679c\u53d1\u73b0\u5e38\u7528\u7684\u201c\u5957\u8def\u201d\u4e0d\u5408\u9002\uff0c\u5c31\u8981\u679c\u65ad\u653e\u5f03\u3001\u9009\u62e9\u65b0\u65b9\u6cd5\n\n\u540c\u65f6\uff0c\u7814\u7a76\u7b97\u6cd5\u3001\u5efa\u7acb\u6a21\u578b\u8981\u4ece\u7b97\u6cd5\u672c\u8d28\u51fa\u53d1\uff1b\u4e00\u5b9a\u8981\u5148\u60f3\u597d\u7b97\u6cd5\u4e2d\u7684\u4ec0\u4e48\u4e1c\u897f\u4ee3\u8868\u9898\u76ee\u4e2d\u7684\u54ea\u4e2a\u4e1c\u897f\uff0c\u518d\u653e\u5230\u7b97\u6cd5\u6846\u67b6\u4e2d\uff0c\u9488\u5bf9\u6027\u6784\u5efa\u6a21\u578b\uff1b\u4e0d\u80fd\u751f\u642c\u786c\u5957\u65e7\u5957\u8def\n\n# Code\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define inf 1e9\nusing namespace std;\ninline int read(){\n    int re=0,flag=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){\n        if(ch=='-') flag=-1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9') re=(re<<1)+(re<<3)+ch-'0',ch=getchar();\n    return re*flag;\n}\nint n,m,cnt=-1,ans,first[10010],dis[10010],vis[10010];\nstruct edge{\n    int to,next,w,cap;\n}a[200010];\ninline void add(int u,int v,int w,int cap){\n    a[++cnt]=(edge){v,first[u],w,cap};first[u]=cnt;\n    a[++cnt]=(edge){u,first[v],-w,0};first[v]=cnt;\n}\nint q[100010];\nbool spfa(int s,int t){\n    int head=0,tail=1,i,u,v,w;\n    memset(dis,-1,sizeof(dis));memset(vis,0,sizeof(vis));\n    q[0]=t;vis[t]=1;dis[t]=0;\n    while(head<tail){\n        u=q[head++];vis[u]=0;\n        for(i=first[u];~i;i=a[i].next){\n            v=a[i].to;w=a[i].w;\n            if(a[i^1].cap&&((dis[v]==-1)||(dis[v]>dis[u]-w))){\n                dis[v]=dis[u]-w;\n                if(!vis[v]) q[tail++]=v,vis[v]=1;\n            }\n        }\n    }\n    return ~dis[s];\n}\nint dfs(int u,int t,int limit){\n    if(u==t||!limit){vis[u]=1;return limit;}\n    int i,v,f,flow=0,w;vis[u]=1;\n    for(i=first[u];~i;i=a[i].next){\n        v=a[i].to;w=a[i].w;\n        if(!vis[v]&&(dis[v]==dis[u]-w)&&(a[i].cap)){\n            if(!(f=dfs(v,t,min(limit,a[i].cap)))) continue;\n            a[i].cap-=f;a[i^1].cap+=f;ans+=f*w;\n            flow+=f;limit-=f;\n            if(!limit) return flow;\n        }\n    }\n    return flow;\n}\nint zkw(int s,int t){//zkw\u8d39\u7528\u6d41\n    int re=0;\n    while(spfa(s,t)){\n        vis[t]=1;\n        while(vis[t]){\n            memset(vis,0,sizeof(vis));\n            re+=dfs(s,t,inf);\n        }\n    }\n    return re;\n}\nint main(){\n    int i,t1,t2,t3;memset(first,-1,sizeof(first));\n    n=read();m=read();\n    for(i=1;i<=n;i++) t1=read(),add(i,i+1,0,inf-t1);//\u6784\u5efa\u201c\u4eba\u6570\u9650\u5236\u8fb9\u201d\n    add(0,1,0,inf);add(n+1,n+2,0,inf);\n    for(i=1;i<=m;i++){//\u6784\u5efa\u201c\u5fd7\u613f\u8005\u8fb9\u201d\n        t1=read();t2=read();t3=read();\n        add(t1,t2+1,t3,inf);\n    }\n    zkw(0,n+2);//\u6700\u5927\u6d41\u503c\u4e00\u5b9a\u662finf\uff0c\u8d39\u7528\u5c31\u662f\u7b54\u6848\n    cout<<ans<<endl;\n}\n```",
        "postTime": 1523329998,
        "uid": 27753,
        "name": "Orion545",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3980 \u3010[NOI2008]\u5fd7\u613f\u8005\u62db\u52df\u3011"
    },
    {
        "content": "\u8bbe\u7b2c $i$ \u5929\u9700\u8981 $x_i$ \u4e2a\u5fd7\u613f\u8005\uff0c\u8bb0 $m_{ij}$ \u8868\u793a\u7b2c $i$ \u5929\u7b2c $j$ \u4e2a\u5fd7\u613f\u8005\u662f\u5426\u80fd\u5de5\u4f5c\uff0c\u5219\u5b83\u4eec\u9700\u8981\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\uff1a\n\n ![](https://cdn.luogu.com.cn/upload/pic/11963.png) \n\n\u4e8e\u662f\u6240\u9700\u8d39\u7528\u5373 $C_1 x_1 + C_2 x_2 + \\cdots + C_m x_m$\uff0c\u9700\u8981\u4ee4\u5b83\u6700\u5c0f\u5316\u3002\n\n\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u662f\u4e00\u4e2a**\u7ebf\u6027\u89c4\u5212**\u95ee\u9898\u3002\n\n\u7531\u4e8e\u5b83\u662f**\u6700\u5c0f\u5316**\u578b\u7ebf\u6027\u89c4\u5212\uff0c\u4e0d\u662f\u6807\u51c6\u5f62\u5f0f\u7684\u3002\u56e0\u6b64\uff0c\u53ef\u4ee5\u5229\u7528**\u7ebf\u6027\u89c4\u5212\u5bf9\u5076\u5b9a\u7406** (\u8bc1\u660e\u53ef\u4ee5\u767e\u5ea6\u7b49\uff0c\u6bd4\u5982[\u8fd9\u91cc](https://wenku.baidu.com/view/14e748bb49649b6648d747cb.html)) \u5c06\u5176\u8f6c\u5316\u4e3a\u4e00\u4e2a**\u6700\u5927\u5316**\u578b\u7ebf\u6027\u89c4\u5212\uff1a\n\n ![](https://cdn.luogu.com.cn/upload/pic/11964.png) \n\n\u7531\u4e8e $C_i$ \u90fd\u662f $\\geq 0$ \u7684\u6574\u6570\uff0c\u4e8e\u662f\u4e0a\u9762\u7684\u7ebf\u6027\u89c4\u5212\u5c31\u6709\u57fa\u672c\u89e3 (\u96f6\u89e3)\u3002\u4e8e\u662f\u5199\u4e2a\u6700\u5355\u7eaf\u7684\u5355\u7eaf\u5f62\u6cd5\u5c31\u53ef\u4ee5\u4e86 (\u8fde `init()` \u90fd\u4e0d\u7528\u5199~)\u3002\n\n\u5177\u4f53\u5730\u8fc7\u7a0b\uff0c\u5c31\u662f\u5bfb\u627e\u5927\u4e8e $0$ \u7684\u975e\u57fa (\u81ea\u7531) \u53d8\u91cf\u8f6c\u5316\u6210\u57fa\u53d8\u91cf\uff0c\u7136\u540e\u8f6c\u8f74 (\u6ce8\u610f\u4ee3\u7801\u5b9e\u73b0\u65f6\u548c Gauss \u6d88\u5143\u7684\u533a\u522b)\uff0c\u6700\u540e\u5f97\u5230\u7684\u5c31\u662f\u6700\u5c0f\u82b1\u8d39\u3002\n\n(\u5176\u5b9e\u73b0\u5728\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u7ebf\u6027\u89c4\u5212\u7684\u6700\u4f18\u89e3\u4f1a\u4e0d\u4f1a\u51fa\u73b0\u5206\u6570\u7684\u95ee\u9898\uff0c\u8fd9\u4e2a\u653e\u5230\u6700\u540e\u8bb2)\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define N 1034\n#define E 10034\nusing namespace std;\n\nconst double eps = 1e-8;\n\nint n, e, l, r;\nint i, j;\n\nint id[N + E];\ndouble m[E][N], b[E], *c = m[0], ans[N + E];\n\nvoid pivot(int r, int c){\n    int i, j; double coe = 1.0 / m[r][c];\n    swap(id[n + r], id[c]);\n    m[r][c] = 1.0;\n    for(j = 1; j <= n; ++j)\n        m[r][j] *= coe;\n    b[r] *= coe;\n    for(i = 0; i <= e; ++i){\n        if(i == r) continue;\n        coe = m[i][c]; m[i][c] = 0.0;\n        for(j = 1; j <= n; ++j)\n            m[i][j] -= coe * m[r][j];\n        b[i] -= coe * b[r];\n    }\n}\n\nbool simplex(){\n    int i, j, basic, free; double G;\n    for(; ; ){\n        basic = free = 0; G = INFINITY;\n        for(i = 1; i <= n; ++i) // free (nonbasic) variable\n            if(c[i] > c[free]) free = i;\n        if(!free) return true;\n        for(j = 1; j <= e; ++j) // basic variable\n            if(m[j][free] > eps && b[j] < G * m[j][free]){\n                G = b[j] / m[j][free]; basic = j;\n            }\n        if(!basic) return puts(\"Unbounded\"), false;\n        pivot(basic, free);\n    }\n}\n\nint main(){\n    scanf(\"%d%d\", &n, &e);\n    for(j = 1; j <= n; ++j) scanf(\"%lf\", c + j);\n    for(i = 1; i <= e; ++i){\n        scanf(\"%d%d%lf\", &l, &r, b + i);\n        for(j = l; j <= r; ++j)\n            m[i][j] = 1.0;\n    }\n    if(simplex())\n        printf(\"%.lf\\n\", -*b);\n    return 0;\n}\n```\n~~(\u542c\u8bf4\u8fd9\u9898\u8fd8\u53ef\u4ee5\u7528\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u505a\uff1f\u7b49\u5f85\u697c\u4e0a\u6765\u586b\u5751)~~\n\n\u63a5\u4e0b\u6765\u4e00\u4e2a\u5c0f\u7ec6\u8282\u5c31\u662f\u8bc1\u660e\u4e0a\u8ff0\u7ebf\u6027\u89c4\u5212\u5fc5\u6709\u6574\u6570\u89e3\u3002\n\n\u6211\u4eec\u77e5\u9053\uff0c\u7ebf\u6027\u89c4\u5212\u7684\u95ee\u9898\u7684\u6700\u4f18\u89e3\u4e3a\u6574\u6570\u7684\u4e00\u4e2a**\u5fc5\u8981**\u6761\u4ef6\u662f\u5b83\u7684\u4efb\u610f\u4e00\u4e2a\u5b50\u65b9\u9635\u7684\u884c\u5217\u5f0f\u4e3a $-1, 0, 1$\u3002\n\n\u800c\u8fd9\u662f\u4e00\u4e2a 0/1 \u65b9\u9635\uff0c\u4e14\u6bcf\u4e00\u884c\u4e2d\u7684 $1$ \u662f\u8fde\u7eed\u7684\u3002\u6211\u4eec\u63a5\u4e0b\u6765\u8bc1\u660e\uff0c\u8fd9\u4e2a\u65b9\u9635\u7684\u884c\u5217\u5f0f\u4e00\u5b9a\u4e3a $-1, 0, 1$ \u4e2d\u4e4b\u4e00\u3002\n\n\u6211\u4eec\u5148\u7528\u7b2c $n-1$ \u5217\u4e58\u4e0a $-1$ \u52a0\u5230\u7b2c $n$ \u5217\uff0c\u7b2c $n-2$ \u5217\u4e58\u4e0a $-1$ \u52a0\u5230\u7b2c $n-1$ \u5217\uff0c\u2026\u2026\uff0c\u7b2c $1$ \u5217\u4e58\u4e0a $-1$ \u52a0\u5230\u7b2c $2$ \u5217\uff0c\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u65b0\u65b9\u9635\uff1a\n\n\u5176\u4e2d\u6bcf\u4e00\u884c\u6709\u5de6\u8fb9\u4e00\u4e2a $1$\uff0c\u53f3\u8fb9 $1$ \u4e2a $-1$ (\u4e5f\u53ef\u80fd\u6ca1\u6709)\uff0c\u6bd4\u5982\uff1a\n\n```plain\n 1  0  0 -1  0  0  0\n 1  0  0  0  0 -1  0\n 0  1  0  0 -1  0  0\n 0  1  0  0  0  0 -1\n 0  0  1  0  0 -1  0\n 0  0  0  1  0  0  0\n 0  0  0  0  1 -1  0\n```\n\u6211\u4eec\u5c06\u8fd9\u4e9b\u884c\u6309\u7167 $1$ \u7684\u4f4d\u7f6e\u4ece\u5de6\u5230\u53f3\u6392\u5e8f\uff0c\u76f8\u540c\u7684\u4ee5 $-1$ \u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u5982\u4e0a\u9762\u7684\u77e9\u9635 (\u5df2\u7ecf\u6392\u597d\u5e8f\u7684)\uff0c\u53ef\u77e5\u5b83\u7684\u884c\u5217\u5f0f\u8981\u4e48\u4e0d\u53d8\uff0c\u8981\u4e48\u53d8\u4e3a\u5b83\u7684\u76f8\u53cd\u6570\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u5bf9\u4e8e $1$ \u7684\u4f4d\u7f6e\u76f8\u540c\u7684\u51e0\u884c\uff0c\u628a\u6700\u4e0a\u9762\u4e00\u884c\u4e58\u4ee5 $-1$\uff0c\u52a0\u5230\u4e0b\u9762\u51e0\u884c (\u5c31\u50cf Gauss \u6d88\u5143\u4e00\u6837)\uff0c\u6700\u540e\u518d\u6392\u5e8f\uff0c\u91cd\u590d\u6b64\u8fc7\u7a0b\uff0c\u4f1a\u5f97\u5230 (\u7c7b\u4f3c) \u5982\u4e0b\u7684\u77e9\u9635\uff1a\n\n```plain\n 1  0  0 -1  0  0  0\n 0  1  0  0 -1  0  0\n 0  0  1  0  0 -1  0\n 0  0  0  1  0 -1  0\n 0  0  0  0  1 -1  0\n 0  0  0  0  0  1 -1\n 0  0  0  0  0  0  1\n```\n\u6700\u7ec8\u60c5\u51b5\u4e0b\uff0c\u5b83\u8981\u4e48\u662f\u4e00\u4e2a**\u4e0a\u4e09\u89d2\u77e9\u9635**\uff0c\u5219\u539f\u884c\u5217\u5f0f\u663e\u7136\u4e3a $\\pm 1$\uff0c\u5f53\u7136\uff0c\u50cf Gauss \u6d88\u5143\u4e00\u6837\uff0c\u53ef\u80fd\u51fa\u73b0\u4e2d\u95f4\u67d0\u4e2a\u65f6\u523b\u4e00\u884c\u4e3a $0$\uff0c\u90a3\u4e48\u539f\u884c\u5217\u5f0f\u5c31\u4e3a $0$\uff0c\u8bc1\u6bd5\u3002\n",
        "postTime": 1513236819,
        "uid": 10420,
        "name": "\u865e\u7693\u7fd4",
        "ccfLevel": 10,
        "title": "P3980"
    },
    {
        "content": "//\u6392\u7248\u6709\u70b9\u95ee\u9898\u91cd\u4ea4\u4e00\u904d\n\n\u9b3c\u755c\u7684\u5efa\u56fe\u65b9\u5f0f\u3002\u3002\u3002\n\n\u672c\u6765\u6211\u662f\u60f3\u6e90\u70b9\u8fde\u5fd7\u613f\u8005\u3001\u5fd7\u613f\u8005\u8fde\u63a7\u5236\u7684\u5929\uff08\u533a\u95f4\uff09\u3001\u5929\u8fde\u6c47\u70b9\n\n\u518d\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u5c31\u884c\u5566\n\n\u7136\u540e\u8fde\u6837\u4f8b\u90fd\u6ca1\u8fc7\n\n\u62b1\u7740~~\u4eba\u6709\u591a\u5927\u80c6\u5730\u6709\u591a\u5927\u4ea7\u7684~~\u4fa5\u5e78\u5fc3\u7406\n\n\u4e00\u4ea4\n\u679c\u7136\u72060\u3002\u3002\u3002\n\n\u6765\u89e3\u91ca\u4e00\u4e0b\u5efa\u56fe\u65b9\u5f0f~~\u6bd5\u7adf\u6211\u89c9\u5f97\u697c\u4e0b\u8bf4\u7684\u6ca1\u770b\u61c2~~\n\n\u6e90\u70b9\u8fde\u7b2c\u4e00\u5929\n\n\u6c47\u70b9\u8fde\u6700\u540e\u4e00\u5929\n\n\u5bb9\u91cf\u4e3aINF\u8d39\u7528\u4e3a0\n\n\u8fd9\u6837\u8dd1\u7f51\u7edc\u6d41\u662f\u6cbf\u65f6\u95f4\u6d41\u7684\uff08\u5c31\u662f\u4f9d\u6b21\u89e3\u51b3\u6bcf\u4e00\u5929\u7684\u95ee\u9898\uff09\n\n\u7136\u540e\u6bcf\u4e00\u5929\u5411\u540e\u4e00\u5929\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3aINF-a[i]\n\n\u8d39\u7528\u4e3a0\u7684\u8fb9\n\n\u4e3a\u4ec0\u4e48\u5bb9\u91cf\u4e3aINF-a[i]\n\n\u8fd9\u5c31\u76f8\u5f53\u4e8e\u5c11\u4e86a[i]\n\n\u5f97\u7528\u5e26\u6743\u8fb9\u8865\u5168INF\n\n\u8fd9\u5c31\u662f\u5fd7\u613f\u8005\u8fde\u7eed\u5e72\u65f6\u6cbf\u8fd9\u6761\u8fb9\u8dd1\n\n\u56e0\u4e3a\u8fde\u7eed\u5e72\u4e0d\u82b1\u94b1\n\n\u6240\u4ee5\u4f18\u5148\u9009\u8fd9\u79cd\u8fb9\n\n\u7136\u540e\u5c06\u6bcf\u4e00\u7c7b\u5fd7\u613f\u8005s[i]\u4e0et[i]+1\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a\n\nINF\u82b1\u8d39\u4e3ac[i]\u7684\u8fb9\n\n\u5f53\u8fde\u7eed\u5e72\u7684\u4eba\u4e0d\u591f\u65f6\n\n\u5c31\u5f97~~\u5145\u94b1~~\u4f7f\u52b2\u5f80\u91cc\u585e\u4eba\n\n\u8865\u5168INF\n\n\u5982\u56fe\n ![](https://cdn.luogu.com.cn/upload/pic/12955.png) \n\n~~\u4f3c\u4e4e~~\u5c31\u662f\u8fd9\u6837\n\n```cpp\n# include<iostream>\n# include<cstdio>\n# include<cstring>\n# include<queue>\nusing namespace std;\nconst int MAX=2e6+1,INF=1e7,t=2e6;\nstruct p{\n    int x,y,dis,cn;\n}c[MAX<<2];\nint n,m,num,tot1;\nint d[MAX],h[MAX],pre[MAX];\nbool use[MAX];\nvoid add(int x,int y,int dis,int cn)\n{\n    c[num].x=h[y],c[num].y=x,c[num].dis=0,c[num].cn=-cn,h[y]=num++;\n    c[num].x=h[x],c[num].y=y,c[num].dis=dis,c[num].cn=cn,h[x]=num++;\n}\nvoid EK()\n{\n    while(1)\n    {\n        queue<int> qu;\n        qu.push(0);\n        memset(pre,0,sizeof(pre));\n        memset(d,1,sizeof(d));\n        d[0]=0;\n        while(!qu.empty())\n        {\n            int tt=qu.front();\n            qu.pop();\n            use[tt]=0;\n            for(int i=h[tt];i;i=c[i].x)\n              if(c[i].dis&&d[c[i].y]>d[tt]+c[i].cn)\n              {\n                  d[c[i].y]=d[tt]+c[i].cn;\n                  pre[c[i].y]=i;\n                  if(!use[c[i].y])\n                  {\n                      use[c[i].y]=1;\n                      qu.push(c[i].y);\n                }\n              }\n        }\n        if(d[t]>INF) return;\n        int sum=INF,hh=t;\n        while(pre[hh])\n        {\n            int l=pre[hh];\n            sum=min(sum,c[l].dis);\n            hh=c[l^1].y;\n        }\n        hh=t;\n        while(pre[hh])\n        {\n            int l=pre[hh];\n            c[l].dis-=sum;\n            c[l^1].dis+=sum;\n            tot1+=sum*c[l].cn;\n            hh=c[l^1].y;\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n      {\n          int x;\n          scanf(\"%d\",&x);\n          add(i,i+1,INF-x,0);\n      }\n    add(0,1,INF,0);\n    add(n+1,t,INF,0);\n    for(int i=1;i<=m;i++)\n      {\n          int x,y,dis;\n          scanf(\"%d%d%d\",&x,&y,&dis);\n          add(x,y+1,INF,dis);\n      }\n    EK();\n    printf(\"%d\",tot1);\n    return 0;\n}\n```\n\u6253\u5b8c\u9898\u89e3\u540e\u5fc3\u529b\u6194\u60b4\u7684\u6211-> ![](https://cdn.luogu.com.cn/upload/pic/12343.png)",
        "postTime": 1515497536,
        "uid": 49206,
        "name": "Dispwnl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3980 \u3010[NOI2008]\u5fd7\u613f\u8005\u62db\u52df\u3011"
    },
    {
        "content": "\u65e2\u7136\u697c\u4e0b\u63d0\u5230\u586b\u5751\uff0c\u90a3\u5c31\u586b\u4e86\u5427\u3002\u3002\u3002\u3002\u3002\u3002\n\n##\u8d39\u7528\u6d41\n\n\u8fde\u8fb9\u65b9\u6cd5(\u4ee5\u4e0b\u63cf\u8ff0\u4e2d\uff0c\u7528\u4e8c\u5143\u7ec4$(f,w)$\u8868\u793a\u5bb9\u91cf\u4e3a$f$\u8d39\u7528\u4e3a$w$\u7684\u8fb9):\n\n\n\u5bf9\u4e8e\u6bcf\u4e00\u5929\u5411\u540e\u4e00\u5929\u8fde\u8fb9$(inf-a_i,0)$\n\n\n\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u5fd7\u613f\u8005\u9009\u62e9\uff0c$s_i$\u5411$t_i+1$\u8fde\u8fb9$(inf,c_i)$\n\n\n\u4ece\u8d85\u7ea7\u6e90\u5411\u7b2c\u4e00\u5929\u8fde\u8fb9$(inf,0)$\n\n\n\u4ece\u6700\u540e\u4e00\u5929+1\u5411\u8d85\u7ea7\u6c47\u8fde\u8fb9$(inf,0)$\n\n\n\u7136\u540e\u4ece\u8d85\u7ea7\u6e90\u5411\u8d85\u7ea7\u6c47\u8dd1\u8d39\u7528\u6d41\u3002\n\n\n\u4e3a\u4ec0\u4e48\u8fd9\u6837\u8dd1\u4f1a\u6b63\u786e\u5462\uff1f\u53ef\u4ee5\u53d1\u73b0\uff0c\u7b2c\u4e00\u6b21\u7f51\u7edc\u6d41\u540e\u6240\u6709\u5929\u6570\u8fb9\u7684\u5bb9\u91cf\u4f1a\u88ab\u586b\u81f3$max-a_i$($max$\u4e3a\u9700\u6c42\u6700\u5927\u5929\u7684\u9700\u6c42\u91cf)\uff0c\u4e0d\u4f1a\u8d70\u5e26\u6743\u8fb9\u3002\u7136\u540e\u56e0\u4e3a\u6709\u5e26\u6743\u8fb9\u5b58\u5728\uff0c\u6240\u4ee5\u7f51\u7edc\u8fd8\u53ef\u4ee5\u6269\u5bb9\u3002\u56e0\u4e3a\u4fdd\u8bc1\u4e00\u5b9a\u5b58\u5728\u53ef\u884c\u89e3\uff0c\u6240\u4ee5\u5bb9\u91cf\u4e00\u5b9a\u53ef\u4ee5\u6269\u6210$inf$\u3002\u90a3\u4e48\u6bcf\u6761\u5929\u6570\u8fb9\u90fd\u53ef\u4ee5\u89c6\u4e3a\u586b\u6ee1(\u56e0\u4e3a\u5929\u6570\u8fb9\u6743\u503c\u4e3a0,\u4e00\u5b9a\u4f18\u4e8e\u5e26\u6743\u8fb9\uff0c\u4f1a\u4f18\u5148\u88ab\u586b\u6ee1\uff0c\u51fa\u73b0\u524d\u9762\u586b\u5e26\u6743\u8fb9\u8986\u76d6\u672c\u6761\u8fb9\u60c5\u51b5\u9664\u5916)\u3002\u7136\u540e\u5bf9\u4e8e\u6bcf\u5929\uff0c\u4e0d\u901a\u8fc7\u5929\u6570\u8fb9\u7ecf\u8fc7\u7684\u6d41\u91cf\u603b\u548c\u4e00\u5b9a\u81f3\u5c11\u4e3a$a_i$\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u7f3a\u5c11\u7684\u6d41\u91cf\u4f1a\u4ece\u5e26\u6743\u8fb9\u6d41\u8fc7\uff0c\u81ea\u52a8\u8865\u9f50inf\u3002\u5e76\u4e14\u8d39\u7528\u6d41\u7b97\u6cd5\u4f1a\u81ea\u52a8\u6c42\u51fa\u8d39\u7528\u6700\u5c0f\u89e3\uff0c\u56e0\u6b64\u53ef\u4ee5\u4fdd\u8bc1\u65b9\u6848\u4e00\u5b9a\u6700\u4f18\u3002\n\n\n\u4ee3\u7801(Dinic)\uff1a\n\n    \n```cpp\n    #include<bits/stdc++.h>\n    #define For(i,a,b) for(i=(a);i<=(b);++i)\n    #define Forward(i,a,b) for(i=(a);i>=(b);--i)\n    #define Rep(i,a,b) for(register int i=(a);i<=(b);++i)\n    #define Repe(i,a,b) for(register int i=(a);i>=(b);--i)\n    using namespace std;\n    template<typename T>inline void read(T &x)\n    {\n        T s=0,f=1;char k=getchar();\n        while(!isdigit(k)&&(k^'-'))k=getchar();\n        if(!isdigit(k)){f=-1;k=getchar();}\n        while(isdigit(k)){s=s*10+(k^48);k=getchar();}\n        x=s*f;\n    }\n    void file()\n    {\n        #ifndef ONLINE_JUDGE\n            freopen(\"volunteer.in\",\"r\",stdin);\n            freopen(\"volunteer.out\",\"w\",stdout);\n        #endif\n    }\n    const int MAXN=2000;\n    const int inf=2147483647;\n    static struct edge\n    {\n        int v,next,w,f;\n    }p[MAXN*100];\n    static int fee,dis[MAXN],e=1,head[MAXN],gap[MAXN],n,m;\n    static bool vis[MAXN];\n    inline void add(int u,int v,int f,int w)\n    {\n        p[++e].v=v;p[e].w=w;p[e].f=f;\n        p[e].next=head[u];head[u]=e;\n    }\n    static deque<int>G;\n    inline bool spfa(int s,int t)\n    {\n        memset(dis,0x3f,sizeof dis);\n        static int u,v;vis[s]=true;dis[s]=0;\n        for(G.push_back(s);!G.empty();)\n        {\n            u=G.front();G.pop_front();\n            for(v=head[u];v;v=p[v].next)if(p[v].f&&dis[p[v].v]>dis[u]+p[v].w)\n            {\n                dis[p[v].v]=dis[u]+p[v].w;\n                if(!vis[p[v].v])\n                {\n                    vis[p[v].v]=true;\n                    if(G.empty()||dis[p[v].v]>dis[G.front()])G.push_front(p[v].v);\n                    else G.push_back(p[v].v);\n                }\n            }\n            vis[u]=0;\n        }\n        return dis[t]^dis[0];\n    }\n    int dfs(int u,int t,int flow)\n    {\n        if(u==t||!flow)return flow;\n        vis[u]=true;\n        int sum=0;\n        for(register int &v=gap[u];flow&&v;v=p[v].next)\n            if(!vis[p[v].v]&&dis[p[v].v]==dis[u]+p[v].w&&p[v].f)\n            {\n                int f=dfs(p[v].v,t,min(flow,p[v].f));\n                p[v].f-=f;p[v^1].f+=f;sum+=f;flow-=f;fee+=f*p[v].w;\n            }\n        vis[u]=false;\n        return sum;\n    }\n    inline void Dinic(int s,int t){for(;spfa(s,t);memcpy(gap,head,sizeof gap),dfs(s,t,inf));}\n    void init()\n    {\n        read(n);read(m);static int x;\n        Rep(i,1,n)read(x),add(i,i+1,inf-x,0),add(i+1,i,0,0);\n        add(n+2,1,inf,0);\n        add(1,n+2,0,0);\n        static int u,v,w;\n        Rep(i,1,m)read(u),read(v),read(w),add(u,v+1,inf,w),add(v+1,u,0,-w);\n    }\n    void solve()\n    {\n        Dinic(n+2,n+1);\n        printf(\"%d\\n\",fee);\n    }\n    int main()\n    {\n        file();\n        init();\n        solve();\n        return 0;\n    }\n\n```",
        "postTime": 1513340855,
        "uid": 7035,
        "name": "Great_Influence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3980 \u3010\u5fd7\u613f\u8005\u62db\u52df\u3011"
    },
    {
        "content": "[\u53ef\u80fd\u66f4\u597d\u7684\u4f53\u9a8c](https://m-sea-blog.com/archives/4600/)\n\n---\n\n\u8fd9\u662f\u4e00\u4e2a\u7ebf\u6027\u89c4\u5212\u505a\u6cd5\u3002\u4e0b\u9762\u4e3e\u7684\u6817\u5b50\u4e3a\u6837\u4f8b\u3002\n\n\u8bbe $X_i$ \u4e3a\u7b2c $i$ \u7c7b\u5fd7\u613f\u8005\u7684\u62db\u52df\u6570\uff0c$P_i$ \u4e3a\u7b2c $i$ \u5929\u62db\u52df\u5fd7\u613f\u8005\u7684\u6570\u91cf\uff0c\u90a3\u4e48\u53ef\u4ee5\u5217\u51fa\u4e00\u4e9b\u4e0d\u7b49\u5f0f\n\n$$\\begin{cases}P_1=X_1\\geq 2\\\\P_2=X_1+X_2\\geq 3\\\\P_3=X_3\\geq 4\\end{cases}$$\n\n\u8bbe $Y_i$ \u4e3a\u7b2c $i$ \u5929\u591a\u62db\u52df\u7684\u6570\u91cf\uff0c\u90a3\u4e48\u53ef\u4ee5\u628a\u4e0d\u7b49\u5f0f\u5316\u4e3a\u7b49\u5f0f\n\n$$\\begin{cases}P_1=X_1-Y_1=2\\\\P_2=X_1+X_2-Y_2=3\\\\P_3=X_3-Y_3=4\\end{cases}$$\n\n\u4ee4 $P_0=0,P_4=0$\uff0c\u4e0a\u4e0b\u76f8\u90bb\u4e24\u9879\u76f8\u51cf\u5f97\n\n$$\\begin{cases}P_1-P_0=X_1-Y_1=2\\\\P_2-P_1=X_2+Y_1-Y_2=1\\\\P_3-P_2=-X_1-X_2+X_3+Y_2-Y_3=1\\\\P_4-P_3=-X_3+Y_3=-4\\end{cases}$$\n\n\u6ce8\u610f\u5230\u6bcf\u4e2a\u53d8\u91cf\u6070\u51fa\u73b0 $2$ \u6b21\u4e14\u7cfb\u6570\u4e00\u6b63\u4e00\u8d1f\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e2a\u7b49\u5f0f\u770b\u505a\u4e00\u4e2a\u70b9\uff0c\u6b63\u6570\u4ee3\u8868\u6d41\u5165\uff0c\u8d1f\u6570\u4ee3\u8868\u6d41\u51fa\uff0c\u90a3\u4e48\u7b49\u5f0f\u76f8\u5f53\u4e8e\u6d41\u91cf\u5e73\u8861\u3002\n\n\u56e0\u6b64\u6211\u4eec\u5f97\u5230\u4e86\u8fd9\u6837\u7684\u5efa\u56fe\u65b9\u6cd5\uff1a\n\n- \u5982\u679c $P_i-P_{i-1}>0$\uff0c\u4ece\u6e90\u70b9\u5411 $i$ \u8fde\u5bb9\u91cf\u4e3a $P_i-P_{i-1}$\u3001\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\uff0c\u5426\u5219\u4ece $i$ \u5411\u6c47\u70b9\u8fde\u5bb9\u91cf\u4e3a $P_{i-1}-P_i$\u3001\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\uff0c\u8868\u793a\u7b49\u5f0f\u4e2d\u7684\u5e38\u6570\u9879\u3002\n- \u4ece $i+1$ \u5411 $i$ \u8fde\u5bb9\u91cf\u4e3a $+\\infty$\u3001\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\uff0c\u8868\u793a $Y_i$\u3002\n- \u5bf9\u4e8e\u6bcf\u7c7b\u5fd7\u613f\u8005\uff0c\u4ece $s_i$ \u5411 $t_i+1$ \u8fde\u5bb9\u91cf\u4e3a $+\\infty$\u3001\u8d39\u7528\u4e3a $c_i$ \u7684\u8fb9\uff0c\u8868\u793a $X_i$\u3002\n\n\u8fd9\u6837\u5b50\u8dd1\u6700\u5927\u6d41\uff0c\u5f97\u5230\u6bcf\u6761\u8fb9\u7684\u6d41\u91cf\u4f5c\u4e3a\u5bf9\u5e94\u53d8\u91cf\u7684\u503c\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u7ec4\u6ee1\u8db3\u4e0d\u7b49\u5f0f\u7684\u89e3\u3002\u800c\u6211\u4eec\u5e0c\u671b $\\sum X_i\\times w_i$ \u6700\u5c0f\u5373\u6574\u5f20\u56fe\u7684\u603b\u8d39\u7528\u6700\u5c0f\uff0c\u56e0\u6b64\u6c42\u51fa\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n```cpp\n// ===================================\n//   author: M_sea\n//   website: http://m-sea-blog.com/\n// ===================================\n#include <bits/stdc++.h>\n#define re register\nusing namespace std;\n\ninline int read() {\n    int X=0,w=1; char c=getchar();\n    while (c<'0'||c>'9') { if (c=='-') w=-1; c=getchar(); }\n    while (c>='0'&&c<='9') X=X*10+c-'0',c=getchar();\n    return X*w;\n}\n\nconst int N=1000+10,M=20000+10;\nconst int inf=0x3f3f3f3f;\n\nint n,m,s,t,p[N];\n\nstruct edge { int v,w,c,nxt; } e[M<<1];\nint head[N];\ninline void addEdge(int u,int v,int w,int c) {\n    static int cnt=1;\n    e[++cnt]=(edge){v,w,c,head[u]},head[u]=cnt;\n    e[++cnt]=(edge){u,0,-c,head[v]},head[v]=cnt;\n}\n\nint dis[N],inq[N],lst[N];\ninline int spfa() {\n    memset(dis,0x3f,sizeof(dis)),memset(lst,0,sizeof(lst));\n    queue<int> Q; Q.push(s); dis[s]=0,inq[s]=1;\n    while (!Q.empty()) {\n        int u=Q.front(); Q.pop(); inq[u]=0;\n        for (re int i=head[u];i;i=e[i].nxt) {\n            int v=e[i].v,c=e[i].c;\n            if (e[i].w&&dis[u]+c<dis[v]) {\n                dis[v]=dis[u]+c,lst[v]=i;\n                if (!inq[v]) inq[v]=1,Q.push(v);\n            }\n        }\n    }\n    return lst[t]!=0;\n}\n\nint main() {\n    n=read(),m=read(),s=0,t=n+2;\n    for (re int i=1;i<=n;++i) p[i]=read();\n    for (re int i=1;i<=n+1;++i) {\n        if (p[i]-p[i-1]>0) addEdge(s,i,p[i]-p[i-1],0);\n        else addEdge(i,t,p[i-1]-p[i],0);\n    }\n    for (re int i=1;i<=n;++i) addEdge(i+1,i,inf,0);\n    for (re int i=1;i<=m;++i) {\n        int l=read(),r=read(),c=read();\n        addEdge(l,r+1,inf,c);\n    }\n    int ans=0;\n    while (spfa()) {\n        int f=inf;\n        for (re int i=lst[t];i;i=lst[e[i^1].v]) f=min(f,e[i].w);\n        for (re int i=lst[t];i;i=lst[e[i^1].v]) e[i].w-=f,e[i^1].w+=f;\n        ans+=dis[t]*f;\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1579264663,
        "uid": 38370,
        "name": "M_sea",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3980 \u3010[NOI2008]\u5fd7\u613f\u8005\u62db\u52df\u3011"
    },
    {
        "content": "### \u9898\u89e3\r\n\r\n\u9996\u5148\u7ed9\u51fa\u4e00\u6761\u94fe\uff0c\u8868\u793a\u65f6\u95f4\u8f74\u3002\u6bcf\u5929\u5411\u4e0b\u4e00\u5929\u8fde\u8fb9\uff0c\u8868\u793a\u53ef\u4ee5\u628a\u5f53\u5929\u7684\u5fd7\u613f\u8005\u4f20\u9012\u7ed9\u4e0b\u4e00\u5929\u3002\u7136\u540e\u5bf9\u4e8e\u4e00\u79cd\u5fd7\u613f\u8005\uff0c\u8003\u8651\u5efa\u7acb\u4e00\u4e2a\u865a\u62df\u7684\u201c\u5fd7\u613f\u8005\u57fa\u5730\u201d\uff0c\u4ee4\u4e3a $x$\uff0c\u5b83\u7684\u4f5c\u7528\u533a\u95f4\u662f $[l_x,r_x]$\u3002\u90a3\u4e48 $x$ \u5411 $l_x$ \u8fde\u8fb9\uff0c\u8868\u793a\u4ece\u7b2c $l_x$ \u5929\u8fd9\u79cd\u5fd7\u613f\u8005\u5f00\u59cb\u5de5\u4f5c\uff0c\u4ece $r_x$ \u5411 $x$ \u8fde\u8fb9\uff0c\u8868\u793a\u8fd9\u79cd\u7c7b\u578b\u7684\u5fd7\u613f\u8005\u5b8c\u6210\u5de5\u4f5c\u56de\u5230\u5fd7\u613f\u8005\u57fa\u5730\u3002\u4f46\u662f\u5f88\u5bb9\u6613\u4f1a\u60f3\u5230\u4e00\u4e2a\u95ee\u9898\uff0c\u8fd9\u79cd\u5fd7\u613f\u8005\u4f3c\u4e4e\u53ef\u80fd\u7ee7\u7eed\u5f80\u4e0b\u4e00\u5929\u8d70\u3002\u6ca1\u5173\u7cfb\uff0c\u6839\u636e $x$ \u7684\u6d41\u91cf\u5e73\u8861\u539f\u7406\uff0c$x \\rightarrow l_x$ \u548c $r_x \\rightarrow x$ \u7684\u6d41\u91cf\u76f8\u540c\uff0c\u90a3\u4e48\u8fd9\u79cd\u5fd7\u613f\u8005\u53bb\u4e86\u51e0\u4e2a\u5c31\u4f1a\u56de\u6765\u51e0\u4e2a\u3002\u81f3\u4e8e\u5230\u5e95\u662f\u4e0d\u662f\u90a3\u51e0\u4e2a\u4eba\uff0c\u6839\u672c\u65e0\u6240\u8c13\u3002\u56e0\u4e3a\u8ba1\u7b97\u8d39\u7528\u53ea\u548c\u4eba\u6570\u76f8\u5173\u3002\r\n\r\n\u8fdb\u4e00\u6b65\u5730\uff0c\u6211\u4eec\u53d1\u73b0 $x$ \u8fd9\u4e2a\u865a\u62df\u7684\u201c\u5fd7\u613f\u8005\u57fa\u5730\u201d\u5b9e\u5219\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\uff0c\u53ef\u4ee5\u9000\u51fa\u5386\u53f2\u7684\u821e\u53f0\uff0c\u76f4\u63a5 $r_x \\rightarrow l_x$ \u5373\u53ef\u3002\r\n\r\n\u5177\u4f53\u7684\u8fde\u8fb9\uff1a\u5c06\u6bcf\u5929\u62c6\u6210\u4e24\u4e2a\u70b9 $\\text{id}_{i,0},\\text{id}_{i,1}$\uff0c\r\n\r\n1. $\\text{id}_{i,0} \\rightarrow \\text{id}_{i,1}$\uff0c\u5bb9\u91cf\u4e0b\u754c\u4e3a\u5f53\u5929\u9700\u8981\u7684\u5fd7\u613f\u8005\u4eba\u6570\uff0c\u4e0a\u754c\u4e3a $+\\infty$\uff0c\u8d39\u7528\u4e3a $0$\u3002\r\n\r\n2. $\\forall i < n,\\text{id}_{i,1} \\rightarrow \\text{id}_{i + 1, 0}$\uff0c\u5bb9\u91cf\u4e0b\u754c\u4e3a $0$\uff0c\u4e0a\u754c\u4e3a $+\\infty$\uff0c\u8d39\u7528\u4e3a $0$\u3002\r\n\r\n3. $\\text{id}_{t_j, 1} \\rightarrow \\text{id}_{s_j, 0}$\uff0c\u5bb9\u91cf\u4e0b\u754c\u4e3a $0$\uff0c\u4e0a\u754c\u4e3a $+\\infty$\uff0c\u8d39\u7528\u4e3a $c_j$\u3002\r\n\r\n\u5728\u5efa\u51fa\u7684\u56fe\u4e0a\u8dd1\u6700\u5c0f\u8d39\u7528\u53ef\u884c\u6d41\u5373\u53ef\u3002\r\n\r\n[code](https://www.luogu.com.cn/paste/uetbkunn)",
        "postTime": 1657066230,
        "uid": 385093,
        "name": "uniqueharry",
        "ccfLevel": 0,
        "title": "P3980 [NOI2008] \u5fd7\u613f\u8005\u62db\u52df\u9898\u89e3"
    },
    {
        "content": "# \u8fd9\u91cc\u8bb2\u4e00\u4e0b\u8fd9\u9053\u9898\u505a\u6cd5\u7684\u4e00\u79cd\u7406\u89e3\u65b9\u5f0f\n\n\u9996\u5148\u5efa\u56fe\u5927\u5bb6\u5e94\u8be5\u90fd\u77e5\u9053\u4e86\uff0c\u6bcf\u4e2a\u70b9\u5411\u4e0b\u4e00\u4e2a\u70b9\u8fde(i, i + 1, Inf - a[i], 0)\u7684\u8fb9\uff0c\u6bcf\u79cd\u4eba\u8fde(s[i], t[i] + 1, Inf, c[i])\u7684\u8fb9\n\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u5462\uff0c\u53ef\u4ee5\u8fd9\u4e48\u7406\u89e3\n\n\u9996\u5148\u6700\u5927\u6d41\u7684\u503c\u660e\u663e\u662fInf\n\n\u6240\u4ee5\u6211\u4eec\u5047\u8bbe\u4e00\u5f00\u59cb\u6709Inf\u4f4d\u5fd7\u613f\u8005\uff0c\u5373\u7b2c0\u5929\u4e0d\u5de5\u4f5c\u7684\u5fd7\u613f\u8005\u6709Inf\n\n\u6bcf\u4e00\u5929\u4f1a\u6709\u4e00\u4e9b\u5fd7\u613f\u8005\u53bb\u5de5\u4f5c\uff0c\u6240\u4ee5\u90a3\u4e00\u5929\u4e0d\u5de5\u4f5c\u7684\u5fd7\u613f\u8005\u4e0d\u80fd\u8d85\u8fc7Inf - a[i]\u4f4d\n\n\u4eces[i]\u8fde\u5411t[i]+1\u8868\u793a\u8fd9\u4e2a\u5fd7\u613f\u8005\u5728\u7b2cs[i]\u5230t[i]\u5929\u4e00\u76f4\u5728\u5de5\u4f5c\n\n\u7136\u540e\u5230\u6700\u540e\u8fd8\u8981\u56de\u6765Inf\u4f4d\u5fd7\u613f\u8005\uff0c\u5373\u6bd4\u8d5b\u7ed3\u675f\u540e\u4e0d\u5de5\u4f5c\u7684\u5fd7\u613f\u8005\u8fd8\u662fInf\u4e2a\n\n\u8fd9\u4e2a\u5f53\u7136\u4e0d\u662f\u5f88\u4e25\u8c28\uff0c\u4f46\u53ef\u4ee5\u611f\u6027\u7406\u89e3\u4e00\u4e0b\n\n\u4e0b\u9762\u7ed9\u51fa\u5efa\u56fe\u7684\u4ee3\u7801\n```\nint n, m, l, r, t, i;\n\tscanf(\"%lld%lld\", &n, &m);\n\tS = 0, T = n + 2;\n\tadd(S, 1, inf, 0); add(n + 1, T, inf, 0);\n\tfor(i = 1; i <= n; i++)\n\t{\n\t\tscanf(\"%lld\", &t);\n\t\tadd(i, i + 1, inf - t, 0);\n\t}\n\tfor(i = 1; i <= m; i++)\n\t{\n\t\tscanf(\"%lld%lld%lld\", &l, &r, &t);\n\t\tadd(l, r + 1, 3e18, t);\n\t}\n```",
        "postTime": 1554638071,
        "uid": 47140,
        "name": "\u65af\u8302",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3980 \u3010[NOI2008]\u5fd7\u613f\u8005\u62db\u52df\u3011"
    },
    {
        "content": "\u8fd9\u9898\u697c\u4e0b\u7684\u6784\u56fe\u65b9\u5f0f\u5176\u5b9e\u662f\u5bf9\u4e0b\u56fe\u7684\u4e00\u79cd\u53d8\u5f62\u2193\n\n![](https://cdn.luogu.com.cn/upload/pic/15983.png)\n\n\u6b64\u56fe\u4e2d\u5c06\u6bcf\u4e00\u5929\u62c6\u4e3a\u4e24\u4e2a\u70b9\uff0c\u6bcf\u5929\u7684\u4e0a\u5348\u5411\u4e0b\u5348\u8fde\u4e00\u6761\u6743\u4e3aINF-a[i]\u7684\u8fb9\uff0c\u6bcf\u5929\u4e0b\u5348\u5411\u7b2c\u4e8c\u5929\u4e0a\u5348\u8fde\u4e00\u6761\u6743\u4e3aINF\u7684\u8fb9\uff0c\u5bf9\u4e8e\u5fd7\u613f\u8005\uff0c\u4ece\u5f00\u59cb\u5de5\u4f5c\u7684\u4e0a\u5348\u5411\u7ed3\u675f\u5de5\u4f5c\u7684\u4e0b\u5348\u8fde\u4e00\u6761\u6743INF\u8d39\u7528\u4e3ac[i]\u7684\u8fb9\uff0c\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u3002\n\n\u53d8\u5f62\u7684\u6838\u5fc3\u601d\u60f3\u662f\u7f29\u70b9\uff0c\u5c06INF\u8fb9\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u7f29\u4e3a\u4e00\u4e2a\uff0c\u5982\u4e0b\u56fe\u2193\n\n![](https://cdn.luogu.com.cn/upload/pic/15982.png)\n\n\u4e24\u4e2a\u56fe\u5b9e\u9645\u4e0a\u662f\u7b49\u6548\u7684\u3002\n\n\u4e0b\u9762\u7ed9\u51fa\u65b9\u6848\u4e00\uff08\u539f\u4e8c\u5206\u56fe\uff09\u4ee3\u7801\u2193\n\n```\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\nconst int INF=2e9;\n\nint n,m,x,y,z,np=1,s,t,mct;\nint h[2005],ln[2005],q[55505];\nbool vis[2005];\nstruct rpg{\n\tint li,nx,ln,ct;\n}a[55505];\n\nvoid add(int ls,int nx,int ln,int ct){\n\ta[++np]=(rpg){h[ls],nx,ln,ct};\n\th[ls]=np;\n\ta[++np]=(rpg){h[nx],ls,0,-ct};\n\th[nx]=np;\n}\n\nbool spfa(){\n\tmemset(vis,0,sizeof(vis));\n\tfor(int i=0;i<=t;++i) ln[i]=INF;\n\tint hd=1,tl=1;\n\tq[hd]=t;\n\tln[t]=0;\n\tvis[t]=1;\n\twhile(hd<=tl){\n\t\tint nw=q[hd++];\n\t\tvis[nw]=0;\n\t\tfor(int i=h[nw];i;i=a[i].li){\n\t\t\tif(a[i^1].ln&&ln[a[i].nx]>ln[nw]-a[i].ct){\n\t\t\t\tln[a[i].nx]=ln[nw]-a[i].ct;\n\t\t\t\tif(!vis[a[i].nx]){\n\t\t\t\t\tvis[a[i].nx]=1;\n\t\t\t\t\tq[++tl]=a[i].nx;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}return ln[s]<INF;\n}\n\nint dfs(int u,int maxn){\n\tif(u==t||!maxn) return maxn;\n\tvis[u]=1;\n\tint sum=0;\n\tfor(int i=h[u];i;i=a[i].li){\n\t\tif(a[i].ln&&!vis[a[i].nx]&&ln[a[i].nx]==ln[u]-a[i].ct){\n\t\t\tint f=dfs(a[i].nx,min(maxn,a[i].ln));\n\t\t\tif(f){\n\t\t\t\tmaxn-=f;\n\t\t\t\tsum+=f;\n\t\t\t\ta[i].ln-=f;\n\t\t\t\ta[i^1].ln+=f;\n\t\t\t\tif(!maxn) break;\n\t\t\t}\n\t\t}\n\t}return sum;\n}\n\nvoid dnc(){\n\twhile(spfa()){\n\t\tvis[t]=1;\n\t\twhile(vis[t]){\n\t\t\tmemset(vis,0,sizeof(vis));\n\t\t\tint d=dfs(s,INF);\n\t\t\tmct+=d*ln[s];\n\t\t}\n\t}\n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&m);t=(n<<1)+1;\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%d\",&x);\n\t\tadd(i,i+n,INF-x,0);\n\t\tif(i<n) add(i+n,i+1,INF,0);\n\t}for(int i=1;i<=m;++i){\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tadd(x,y+n,INF,z);\n\t}add(s,1,INF,0);\n\tadd(n<<1,t,INF,0);\n\tdnc();\n\tprintf(\"%d\\n\",mct);\n\treturn 0;\n}\n```\n\n\u7136\u540e\u662f\u65b9\u6848\u4e8c\uff08\u7f29\u70b9\u540e\uff09\u4ee3\u7801\u2193\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\nconst int INF=2e9;\n\nint n,m,x,y,z,np=1,s,t,mct;\nint h[1005],ln[1005],q[25505];\nbool vis[1005];\nstruct rpg{\n\tint li,nx,ln,ct;\n}a[25505];\n\nvoid add(int ls,int nx,int ln,int ct){\n\ta[++np]=(rpg){h[ls],nx,ln,ct};\n\th[ls]=np;\n\ta[++np]=(rpg){h[nx],ls,0,-ct};\n\th[nx]=np;\n}\n\nbool spfa(){\n\tmemset(vis,0,sizeof(vis));\n\tfor(int i=0;i<=t;++i) ln[i]=INF;\n\tint hd=1,tl=1;\n\tq[hd]=t;\n\tln[t]=0;\n\tvis[t]=1;\n\twhile(hd<=tl){\n\t\tint nw=q[hd++];\n\t\tvis[nw]=0;\n\t\tfor(int i=h[nw];i;i=a[i].li){\n\t\t\tif(a[i^1].ln&&ln[a[i].nx]>ln[nw]-a[i].ct){\n\t\t\t\tln[a[i].nx]=ln[nw]-a[i].ct;\n\t\t\t\tif(!vis[a[i].nx]){\n\t\t\t\t\tvis[a[i].nx]=1;\n\t\t\t\t\tq[++tl]=a[i].nx;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}return ln[s]<INF;\n}\n\nint dfs(int u,int maxn){\n\tif(u==t||!maxn) return maxn;\n\tvis[u]=1;\n\tint sum=0;\n\tfor(int i=h[u];i;i=a[i].li){\n\t\tif(a[i].ln&&!vis[a[i].nx]&&ln[a[i].nx]==ln[u]-a[i].ct){\n\t\t\tint f=dfs(a[i].nx,min(maxn,a[i].ln));\n\t\t\tif(f){\n\t\t\t\tmaxn-=f;\n\t\t\t\tsum+=f;\n\t\t\t\ta[i].ln-=f;\n\t\t\t\ta[i^1].ln+=f;\n\t\t\t\tif(!maxn) break;\n\t\t\t}\n\t\t}\n\t}return sum;\n}\n\nvoid dnc(){\n\twhile(spfa()){\n\t\tvis[t]=1;\n\t\twhile(vis[t]){\n\t\t\tmemset(vis,0,sizeof(vis));\n\t\t\tint d=dfs(s,INF);\n\t\t\tmct+=d*ln[s];\n\t\t}\n\t}\n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&m);t=n+2;\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%d\",&x);\n\t\tadd(i,i+1,INF-x,0);\n\t}for(int i=1;i<=m;++i){\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tadd(x,y+1,INF,z);\n\t}add(s,1,INF,0);\n\tadd(n+1,t,INF,0);\n\tdnc();\n\tprintf(\"%d\\n\",mct);\n\treturn 0;\n}\n```\n\n\u4e0e\u7f29\u70b9\u524d\u76f8\u6bd4\uff0c\u7f29\u70b9\u540e\u7684\u7a0b\u5e8f\u65e0\u8bba\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u662f\u7a7a\u95f4\u590d\u6742\u5ea6\u90fd\u5f97\u5230\u4e86\u4e00\u5b9a\u7684\u4f18\u5316\uff0c\u5efa\u8bae\u521d\u5b66\u8005\u4f7f\u7528\u7b2c\u4e00\u79cd\u65b9\u5f0f\u6784\u56fe\uff0c\u6709\u4e00\u5b9a\u57fa\u7840\u7684\u540c\u5b66\u53ef\u4ee5\u5c1d\u8bd5\u7b2c\u4e8c\u79cd\u3002\n\n[\u5b89\u5229\u4e00\u53d1blog](https://www.luogu.org/blog/31293/)",
        "postTime": 1521727248,
        "uid": 31293,
        "name": "Adove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3980 \u3010[NOI2008]\u5fd7\u613f\u8005\u62db\u52df\u3011"
    },
    {
        "content": "[\u4ee3\u7801\u592a\u5360\u7bc7\u5e45\uff0c\u653e\u8fd9\u4e86](https://blog.csdn.net/qq_33831360/article/details/94151862)\n\n## \u5206\u6790\u4e0e\u5efa\u6a21\n\u8bbe\u7b2c $i$ \u5929\u9700\u8981 $x_i$ \u4e2a\u5fd7\u613f\u8005\uff0c\u8bb0 $a_{ij}$ \u4e3a\u7b2c $i$ \u5929\u7b2c $j$ \u4e2a\u5fd7\u613f\u8005\u662f\u5426\u80fd\u5de5\u4f5c\u3002\n\u9898\u76ee\u8981\u6c42\u603b\u8d39\u7528\u6700\u4f4e\uff0c\u5373\u6c42\uff1a$Min \\, z = \\sum_{i=1}^{n}{C_i * x_i}$\u3002\n\u5b83\u4eec\u9700\u8981\u6ee1\u8db3\u8981\u6c42\uff1a\n\n$$\\begin{cases}  a_{11}x_1+a_{12}x_2+a_{13}x_3...+a_{1m}x_m \\geq A_1 \\\\a_{21}x_1+a_{22}x_2+a_{23}x_3...+a_{2m}x_m \\geq A_2 \\\\ ...\\\\a_{n1}x_1+a_{n2}x_2+a_{n3}x_3...+a_{nm}x_m \\geq A_n \\\\ x_1,x_2,x_3  ... x_m \\geq 0 \\end{cases}$$\n\n\u8fd9\u660e\u663e\u662f\u4e00\u4e2a\u7684\u7ebf\u6027\u89c4\u5212\u95ee\u9898,\u4f46\u5b83\u4e0d\u662f\u6807\u51c6\u5f62\u5f0f,\u9700\u8981\u4e00\u4e9b\u6539\u9020\u3002\n### \u65b9\u6cd5\u4e00 \u8f6c\u5316\u4e3a\u5bf9\u5076\u95ee\u9898\n\u89c2\u5bdf\u5b83\u7684\u5bf9\u5076\u95ee\u9898\uff1a$Max \\, w = \\sum_{i=1}^{m}A_i*y_i$\u3002\n\u8bbe$b_{ij} = a_{ji}$, \u4e3a\u7b2c $i$ \u4e2a\u5fd7\u613f\u8005\u7b2c $j$ \u5929\u662f\u5426\u80fd\u5de5\u4f5c,\u65b0\u7684\u7ea6\u675f\u6761\u4ef6\u4e3a\uff1a\n\n$$\\begin{cases}b_{11}y_1+b_{12}y_2+b_{13}y_3...+b_{1n}y_n \\leq C_1 ;\\\\b_{21}y_1+b_{22}y_2+b_{23}y_3...+b_{2n}y_n \\leq C_2 ;\\\\ ...;\\\\b_{m1}y_1+b_{m2}y_2+b_{m3}y_3...+b_{mn}y_n \\leq C_n ;\\\\ y_1,y_2,y_3  ... y_n \\geq 0;\\end{cases}$$\n\n\u6dfb\u52a0\u677e\u5f1b\u53d8\u91cf\u540e\u4e3a\uff1a\n\n$$\\begin{cases}b_{11}y_1+b_{12}y_2+b_{13}y_3...+b_{1n}y_n+y_{n+1} = C_1 \\\\b_{21}y_1+b_{22}y_2+b_{23}y_3...+b_{2n}y_n+y_{n+2} = C_2 \\\\ ...\\\\b_{m1}y_1+b_{m2}y_2+b_{m3}y_3...+b_{mn}y_n+y_{n+m} = C_n \\\\ y_1,y_2,y_3  ... y_{n+m} \\geq 0\\end{cases}$$\n\n\u8fd9\u662f\u7ebf\u6027\u89c4\u5212\u7684\u6807\u51c6\u5f62\u5f0f\uff0c\u5bf9\u5076\u95ee\u9898\u53ef\u4ee5\u4f7f\u7528\u539f\u59cb\u5355\u7eaf\u578b\u6cd5\u6c42\u89e3\u3002\n\u6839\u636e\u5bf9\u5076\u5b9a\u7406\uff0c\u82e5\u539f\u95ee\u9898\u6709\u6700\u4f18\u89e3\uff0c\u90a3\u4e48\u5bf9\u5076\u95ee\u9898\u4e5f\u6709\u6700\u4f18\u89e3\uff0c\u4e14\u76ee\u6807\u51fd\u6570\u503c\u76f8\u7b49\u3002\u9898\u76ee\u8981\u7684\u53ea\u6709\u76ee\u6807\u51fd\u6570\u503c\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u6c42\u89e3\u5bf9\u5076\u95ee\u9898\uff0c\u4f46\u8fd9\u79cd\u65b9\u6cd5\u5f97\u5230\u7684\u89e3\u4e0d\u662f\u539f\u95ee\u9898\u7684\u89e3\uff0c\u6240\u4ee5\u8fd9\u79cd\u65b9\u6cd5\u5b9e\u9645\u4e0a\u4e0d\u592a\u5408\u9002\uff0c\u4e0d\u8fc7\u5b83\u53ea\u8981\u6700\u57fa\u672c\u7684\u5355\u7eaf\u5f62\u6cd5\uff0c\u6545\u653e\u7b2c\u4e00\u4f4d\u3002\n\n### \u65b9\u6cd5\u4e8c \u4eba\u5de5\u53d8\u91cf\u6cd5\n\u5728\u52a0\u5165\u5269\u4f59\u53d8\u91cf\u540e\uff0c\u5206\u522b\u7ed9\u6bcf\u4e2a\u7ea6\u675f\u65b9\u7a0b\u52a0\u5165\u4eba\u5de5\u53d8\u91cf$x_{m+n+1},...,x_{m+n+n}$,\u5f97\u5230\u521d\u59cb\u57fa\u53ef\u884c\u89e3\u3002\n\n$$\\begin{cases}a_{11}x_1+a_{12}x_2+a_{13}x_3...+a_{1m}x_m - x_{m+1} + x_{m+n+1} = A_1 \\\\ a_{21}x_1+a_{22}x_2+a_{23}x_3...+a_{2m}x_m - x_{m+2} + x_{m+n+2} = A_2 \\\\ ...\\\\a_{n1}x_1+a_{n2}x_2+a_{n3}x_3...+a_{nm}x_m - x_{m+n} + x_{m+n+n} = A_n \\\\ x_1,x_2,x_3  ... x_m+n+n \\geq 0\\end{cases}$$\n\n#### 1. \u5927M\u6cd5\n\u4eba\u5de5\u53d8\u91cf\u4e0d\u80fd\u5f71\u54cd\u76ee\u6807\u51fd\u6570\u53d6\u503c\uff0c\u5fc5\u987b\u4ece\u57fa\u53d8\u91cf\u4e2d\u6362\u51fa\u6765\u3002\u4e3a\u6b64\uff0c\u53ef\u4ee5\u5728\u76ee\u6807\u51fd\u6570\u4e2d\u628a\u4eba\u5de5\u53d8\u91cf\u7684\u7cfb\u6570\u8bbe\u6210M(\u4e00\u4e2a\u5145\u5206\u5927\u7684\u6570/\u60e9\u7f5a\u7cfb\u6570)\uff0c\u4f7f\u5f97\u5728\u6c42Min\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4eba\u5de5\u53d8\u91cf\u53d8\u4e3a\u975e\u57fa\u53d8\u91cf\u53ef\u4ee5\u5927\u5927\u51cf\u5c0f\u76ee\u6807\u51fd\u6570\u503c\n$Min \\, z = \\sum_{i=1}^{n}{C_i * x_i}+\\sum_{j=m+n+1}^{m+n+n}M*x_j$\n\n\n#### 2. \u4e24\u9636\u6bb5\u6cd5\n\u4e24\u9636\u6bb5\u6cd5\u5219\u66f4\u4e3a\u76f4\u63a5\uff0c\u7b2c\u4e00\u6b65\uff0c\u76ee\u6807\u51fd\u6570\u4e3a$Min \\, w = \\sum_{i=m+1}^{m+n}{x_i}$\uff0c\u5373\u5c3d\u91cf\u4f7f\u4eba\u5de5\u53d8\u91cf\u53d6\u503c\u4e3a0\uff0c\u5982\u679c$w>0$\uff0c\u8bf4\u660e\u4eba\u5de5\u53d8\u91cf\u6362\u4e0d\u51fa\u53bb\uff0c\u5373\u65e0\u89e3\u3002\u82e5$w = 0$\uff0c\u8bf4\u660e\u6709\u53ef\u884c\u89e3\uff0c\u8fdb\u884c\u7b2c\u4e8c\u9636\u6bb5\uff0c\u628a\u77e9\u9635\u4e2d\u4eba\u5de5\u53d8\u91cf\u90e8\u5206\u5220\u6389\uff0c\u76ee\u6807\u51fd\u6570\u6362\u56de\u539f\u95ee\u9898\u7684\uff0c\u5373$Min \\, z = \\sum_{i=1}^{n}{C_i * x_i}$\n\n### \u65b9\u6cd5\u4e09 \u5bf9\u5076\u5355\u7eaf\u5f62\u6cd5\n\n\u5c06\u6240\u6709\u5f0f\u5b50\u540c\u4e58$-1$\u540e\u5f97\u5230\u7c7b\u4f3c\u6807\u51c6\u5f62\u5f0f\uff0c\u4f46\u662fb\u5217\u51fa\u73b0\u8d1f\u6570\uff0c\u4e0d\u80fd\u7528\u539f\u59cb\u5355\u7eaf\u5f62\u6cd5\u3002\n\u6574\u7406\u4e00\u4e0b\u5f0f\u5b50\uff1a$Max \\,z_{'} = \\sum_{i=1}^{n}{-C_i * x_i}$\n\n$$\\begin{cases}-a_{11}x_1-a_{12}x_2-a_{13}x_3...-a_{1m}x_m + x_{m+1} = -A_1 \\\\ -a_{21}x_1-a_{22}x_2-a_{23}x_3...-a_{2m}x_m + x_{m+2} = -A_2 \\\\ ...\\\\-a_{n1}x_1-a_{n2}x_2-a_{n3}x_3...-a_{nm}x_m + x_{m+n} = -A_n \\\\ x_1,x_2,x_3  ... x_m \\geq 0\\end{cases}$$\n\n\u8fd9\u91cc\u53ea\u4ecb\u7ecd\u4e00\u4e0b\u6b65\u9aa4\uff0c\u6b63\u786e\u6027\u8bc1\u660e\u8bf7\u767e\u5ea6\u3002\n 1) \u5bf9\u7ebf\u6027\u89c4\u5212\u95ee\u9898\u662f\u6240\u6709\u68c0\u9a8c\u6570<=0,\u5373\u5bf9\u5076\u95ee\u9898\u4e3a\u57fa\u53ef\u884c\u89e3\u3002(\u672c\u9898\u521d\u59cb\u65e2\u6ee1\u8db3)\u3002\n 2) \u68c0\u9a8c\uff1a\u82e5b\u5217\u90fd\u975e\u8d1f\uff0c\u68c0\u9a8c\u6570\u90fd\u975e\u6b63\uff0c\u5df2\u8fbe\u5230\u6700\u4f18\u89e3\uff0c\u505c\u6b62\u8ba1\u7b97\u3002\n 3) \u6309$min[(B^{-1}b)_i,|(B^{-1}b<0)_i]=(B^{-1}b)_l$\u5bf9\u5e94\u7684\u57fa\u53d8\u91cf$x_l$\u4e3a\u6362\u51fa\u53d8\u91cf\n 4) \u68c0\u67e5$x_l$\u884c\u5404\u7cfb\u6570$a_{lj}$\uff0c\u82e5\u6240\u6709$a_{lj}>=0$\uff0c\u8bf4\u660e\u65e0\u89e3\u3002\u5426\u5219\uff0c\u8ba1\u7b97$\\theta = min_j(\\frac{c_j-z_j}{a_{lj}} |a_{lj}<0) = \\frac{c_k-z_k}{a_{lk}}$\uff0c\u4ee5\u5bf9\u5e94\u7684$x_k$ \u4e3a\u6362\u5165\u53d8\u91cf($\\theta$\u89c4\u5219\u4fdd\u8bc1\u5bf9\u5076\u95ee\u9898\u7684\u89e3\u4ecd\u4e3a\u53ef\u884c\u89e3)\u3002\n 5) \u4ee5$a_{lk}$\u4e3a\u4e3b\u5143\u7d20\uff0c\u8fdb\u884c\u8fed\u4ee3\uff0c\u5f97\u5230\u65b0\u8868\u3002\n\u91cd\u590d(2)\uff5e(5)\u3002\n",
        "postTime": 1561806645,
        "uid": 24701,
        "name": "wine",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3980 \u3010[NOI2008]\u5fd7\u613f\u8005\u62db\u52df\u3011"
    },
    {
        "content": "# [\u9898\u9762](https://www.luogu.org/problemnew/show/P3980)\n[\u60ca\u559c](https://www.cnblogs.com/ztlztl/p/10574372.html)\n\n\u200b\t\u53c8\u4e00\u6b21\u8003\u8bd5\u7f51\u7edc\u6d41\u7206\u96f6......\n\n\u200b\t\u8fd9\u4e00\u9898\u4e00\u770b\u5c31\u662f\u7f51\u7edc\u6d41, \u4f46\u662f\u8981\u600e\u4e48\u6784\u56fe\u5462? \u8003\u8651\u5230\u9014\u4e2d\u7684\u4e00\u4e9b\u56e0\u7d20, \u9996\u5148, \u6bcf\u4e00\u79cd\u5fd7\u613f\u8005\u63a7\u5236\u7684\u533a\u95f4\u8303\u56f4\u4e3a$S_{i}$\u5230$T_{i}$, \u6240\u4ee5, \u6211\u4eec\u8981\u4f7f\u5f97\u6bcf\u79cd\u5fd7\u613f\u8005\u53ea\u80fd\u63a7\u5236\u8fd9\u6bb5\u533a\u95f4, \u5176\u4ed6\u7684\u4e0d\u80fd\u591f\u63a7\u5236, \u5176\u6b21, \u6bcf\u4e2a\u65f6\u95f4\u90fd\u6709\u4e00\u4e2a\u6700\u5c0f\u7684\u503c, \u4e5f\u5c31\u662f\u8fd9\u6761\u8fb9(\u6211\u4eec\u5c06\u65f6\u95f4\u6bb5\u770b\u4e3a\u4e00\u6761\u8fb9\u66f4\u52a0\u65b9\u4fbf)\u6709\u4e00\u4e2a\u4e0b\u754c, \u60f3\u5230\u4e86\u4ec0\u4e48, \u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41, \u6bcf\u6761\u8fb9\u90fd\u8981\u7b26\u5408\u4e0a\u754c\u548c\u4e0b\u754c\u7684\u7ea6\u675f, \u6ca1\u6709\u5b66\u8fc7\u7684\u53ef\u4ee5[\u6233\u4e00\u4e0b](https://www.cnblogs.com/ztlztl/p/10565775.html).\n\n\u200b\t\u90a3\u4e48\u521d\u59cb\u7684\u6784\u56fe\u4e5f\u5c31\u51fa\u6765\u4e86, \u6bcf\u4e2a\u65f6\u95f4\u4f5c\u4e3a\u4e00\u6761\u8fb9, \u90a3\u4e48\u7531$i$\u5411$i + 1$\u8fde\u4e00\u6761\u8fb9, \u5bb9\u91cf\u4e3a$INF - lower(i)$, \u8d39\u7528\u4e3a0(\u7531\u4e8e\u4eba\u662f\u63a7\u5236\u4e00\u6bb5\u533a\u95f4\u7684, \u4ed6\u5728\u8fd9\u6bb5\u533a\u95f4\u4e2d\u7684\u4efb\u610f\u4e24\u4e2a\u70b9\u6d41\u8d39\u7528\u90fd\u4e3a0, \u53ef\u4ee5\u770b\u505a\u8fd9\u4e2a\u4eba\u7ee7\u7eed\u505a\u4e8b, ~~\u5df2\u7ecf\u4ed8\u94b1\u4e86, \u4f60\u5f97\u7ed9\u6211\u505a\u5b8c\u4e8b\u624d\u80fd\u8d70~~)($lower(i)$\u4ee3\u8868\u65f6\u95f4$i$\u6700\u5c11\u9700\u8981\u591a\u5c11\u4eba, \u5176\u5b9e\u8fd9\u6761\u8fb9\u5bb9\u91cf\u4e3a$INF$\u6ca1\u6709\u95ee\u9898, \u5047\u88c5\u4e0a\u754c\u4e3a$INF + lower(i)$\u5c31\u53ef\u4ee5\u4e86, \u53cd\u6b63\u53ef\u4ee5\u4e0d\u505c\u5730\u6d41), \u8003\u8651\u5230\u4e4b\u524d\u6240\u8bf4, \u6bcf\u4e2a\u70b9\u53ea\u80fd\u7ea6\u675f\u81ea\u5df1\u7684\u4e00\u6bb5\u533a\u95f4, \u6709\u70b9\u50cf\u5faa\u73af\u6d41, \u4ece$S_{i}$\u51fa\u53d1, \u6d41\u5230$T_{i}$\u5c31\u91cd\u65b0\u6d41, \u4f46\u662f\u8fd9\u91cc\u7531\u4e8e$T_{i}$\u88ab\u770b\u6210\u4e86\u4e00\u6761\u8fb9, \u6240\u4ee5\u6211\u4eec\u9700\u8981\u5728\u70b9$T_{i} + 1$\u5f80$S_{i}$\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a$INF$, \u8d39\u7528\u4e3a$c$\u7684\u8fb9, \u4ee3\u8868\u5f53\u524d\u7c7b$i$\u7684\u5fd7\u613f\u8005\u63a7\u5236\u4e14\u53ea\u80fd\u63a7\u5236$S_{i}$\u5230$T_{i}$\u8fd9\u6bb5\u65f6\u95f4.\n\n\u200b\t\u6700\u7ec8\u6784\u56fe\u662f\u8fd9\u6837\u7684: \u6bcf\u4e2a\u70b9$i$\u5411$i + 1$\u8fde\u8fb9, \u6bcf\u4e2a$T_{i} + 1$\u5411$S_{i}$\u8fde\u8fb9, \u6ce8\u610f\u5728\u6bcf\u4e2a\u70b9$i$\u5411$i + 1$\u8fde\u8fb9\u65f6, \u7531\u4e8e\u4f60\u662f\u9ed8\u8ba4\u8fd9\u6761\u8fb9\u6d41\u4e86\u4e00\u4e2a\u4e0b\u754c\u7684, \u4f60\u6bcf\u4e2a\u70b9\u7684\u6d41\u91cf\u4e0d\u4e00\u5b9a\u5e73\u8861, \u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e2a\u70b9\u6d41\u5165\u548c\u6d41\u51fa\u7684\u5dee, \u5bf9\u4e8e\u4e00\u6761\u4e0b\u754c\u4e3a$x$\u7684\u8fb9i -> i + 1, \u8bb0$delta[i]$\u4e3a\u70b9$i$\u6d41\u5165\u4e0e\u6d41\u51fa\u7684\u5dee, \u5219$delta[i] -= x$, $delta[i + 1] += x$, \u8fde\u5b8c\u6240\u6709\u8fb9\u540e, \u6ce8\u610f\u5230\u6bcf\u4e2a\u70b9\u7684$delta$\u4e0d\u4e00\u5b9a\u4e3a0, \u5bf9\u4e8e$delta$\u5927\u4e8e\u6216\u8005\u5c0f\u4e8e0\u7684\u60c5\u51b5, \u6233\u4e0a\u9762\u90a3\u4e2a\u5427, \u6709\u8be6\u7ec6\u7684\u4ecb\u7ecd, \u6700\u540e\u8dd1\u4e00\u904d\u65e0\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5c0f\u8d39\u7528\u53ef\u884c\u6d41\u5c31\u53ef\u4ee5\u4e86, \u4e5f\u5c31\u662f\u5728\u6784\u51fa\u7684\u6709\u6e90\u6c47\u7684\u56fe\u4e2d\u8dd1\u4e00\u904d\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u5373\u53ef.\n\n**\u5177\u4f53\u4ee3\u7801**\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <queue>\n#define N 2005\n#define INF 1e9\nusing namespace std;\n\nint n, m, S, T, delta[N], head[N], cnt = 1, p[N], vis[N]; \nstruct node\n{\n\tint from, to, next;\n\tlong long flow, cost; \n} edge[100005];\nlong long a[N], d[N]; \n\ninline int read()\n{\n\tint x = 0, w = 1;\n\tchar c = getchar();\n\twhile(c < '0' || c > '9') { if (c == '-') w = -1; c = getchar(); }\n\twhile(c >= '0' && c <= '9') { x = x * 10 + c - '0'; c = getchar(); }\n\treturn x * w;\n}\n\ninline void add(int u, int v, long long w, long long cost)\n{\n\tedge[++cnt] = { u, v, head[u], w, cost }; head[u] = cnt;\n\tedge[++cnt] = { v, u, head[v], 0, -cost }; head[v] = cnt; \n}\n\nbool SPFA(long long &cost)\n{\n\tmemset(d, 0x3f, sizeof(d)); memset(a, 0x3f, sizeof(a)); \n\tqueue<int> q; q.push(S); d[S] = 0; vis[S] = 1; \n\twhile(!q.empty())\n\t{\n\t\tint u = q.front(); q.pop(); vis[u] = 0;\n\t\tfor(int i = head[u]; i; i = edge[i].next)\n\t\t{\n\t\t\tint v = edge[i].to;\n\t\t\tif(d[v] > d[u] + edge[i].cost && edge[i].flow > 0)\n\t\t\t{\n\t\t\t\td[v] = d[u] + edge[i].cost; a[v] = min(a[u], edge[i].flow);\n\t\t\t\tp[v] = i; if(!vis[v]) { vis[v] = 1; q.push(v); }\n\t\t\t}\n\t\t}\n\t} \n\tif(d[T] == d[0]) return 0;\n\tcost += (a[T] * d[T]); \n\tfor(int i = T; i != S; i = edge[p[i]].from)\n\t{\n\t\tedge[p[i]].flow -= a[T]; edge[p[i] ^ 1].flow += a[T]; \n\t}\n\treturn 1; \n}\n\nint main()\n{\n\tn = read(); m = read();\n\tS = n + 2; T = S + 1; \n\tfor(int i = 1; i <= n; i++) { int x = read(); add(i, i + 1, INF, 0); delta[i] -= x; delta[i + 1] += x; }\n\tfor(int i = 1; i <= m; i++)\n\t{\n\t\tint u = read(), v = read(), c = read();\n\t\tadd(v + 1, u, INF, c); \n\t}\n\tfor(int i = 1; i <= n + 1; i++)\n\t{\n\t\tif(delta[i] < 0) add(i, T, -delta[i], 0);\n\t\tif(delta[i] > 0) add(S, i, delta[i], 0); \n\t} \n\tlong long cost = 0;\n\twhile(SPFA(cost));\n\tprintf(\"%lld\\n\", cost); \n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1553171558,
        "uid": 160323,
        "name": "mgzc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3980 \u3010[NOI2008]\u5fd7\u613f\u8005\u62db\u52df\u3011"
    },
    {
        "content": "\u6211\u6765\u8bf4\u4e00\u4e0b\u8fd9\u4e2a\u9898\u7684\u7ebf\u6027\u89c4\u5212\u8f6c\u8d39\u7528\u6d41\u7684\u505a\u6cd5\u5427\n\n\uff08\u9996\u5148\u819c\u90a3\u4e2a\u7ebf\u6027\u89c4\u5212\u7684dalao\uff09\n\n\uff08\u518d\u6765\u5ba3\u4f20\u4e00\u6ce2blog\uff1a[\u6211\u7684blog](http://blog.csdn.net/stone41123/article/details/79185673)\uff09\n\n\u6211\u4eec\u8bbe\u7b2ci\u7c7b\u7684\u5fd7\u613f\u8005\u7684\u6570\u91cf\u4e3aXi\uff0c\u5de5\u4f5c\u533a\u95f4\u4e3a[Si,Ti]\n\n\u8bbe\u7b2ci\u5929\u7684\u5fd7\u613f\u8005\u9700\u6c42\u91cf\u4e3aAi\uff0c\u90a3\u4e48\u5408\u6cd5\u6761\u4ef6\u4e0b\u5c31\u6709\u4ee5\u4e0b\u51e0\u4e2a\u4e0d\u7b49\u5f0f\uff1a\n\n\uff08\u4ee5\u4e0b\u5747\u4e3a\u6837\u4f8b\uff09\n\n```plain\nP1 : X1>=A1\nP2 : X1+X2>=A2\nP3 : X2+X3>=A3\n```\n\uff08\u5176\u4e2dPi\u4ee3\u8868\u7b2ci\u4e2a\u4e0d\u7b49\u5f0f\uff09\n\n\u7136\u540e\u8fd9\u4e2a\u4e0d\u7b49\u5f0f\u975e\u5e38\u4e0d\u723d\uff0c\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0n\u4e2a\u8f85\u52a9\u53d8\u91cfYi\uff0c\u4f7f\u5b83\u53d8\u4e3a\u7b49\u5f0f\uff1a\n\n```plain\nP1 : X1+Y1=A1\nP2 : X1+X2+Y2=A2\nP3 : X2+X3+Y3=A3\n```\n\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u5c06\u7b49\u5f0f\u770b\u4f5c\u6bcf\u4e2a\u70b9\u7684\u6d41\u91cf\u5e73\u8861\n\n\u4f46\u662f\u56e0\u4e3a\u6709\u591a\u4e2aX1\uff0c\u65e0\u6cd5\u7528\u7f51\u7edc\u6d41\u5904\u7406\u8fd9\u6837\u7684\u95ee\u9898\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5bf9\u7b49\u5f0f\u8fdb\u884c\u5dee\u5206\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u53d8\u6210\u51e0\u4e2a\u6bd4\u8f83\u4f18\u7f8e\u7684\u5f0f\u5b50\uff1a\n\n```plain\nQ1 : X1+Y1=A1\nQ2 : X2+Y2=A2-A1\nQ3 : -X1+X3+Y3=A3-A2\nQ4 : -X2-X3+Y4=-A3\n```\n\u7136\u540e\u53f3\u8fb9\u7684\u90a3\u4e2a\u5c31\u770b\u4f5c\u6bcf\u4e2a\u70b9\u7684\u76c8\u4f59\u91cf\uff0c\u548c\u6e90\u70b9\u6216\u6c47\u70b9\u8fde\u8fb9\n\n\u5de6\u8fb9\u7684\u4e00\u5806Xi\u5c31\u770b\u505aSi\u548cTi+1\u4e4b\u95f4\u7684\u6d41\u91cf\u6d41\u52a8\uff0c\u7136\u540e\u8fde\u8fb9\u8dd1\u8d39\u7528\u6d41\u5c31\u597d\u4e86\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<iostream>\n#include<algorithm>\n#define ll long long\n#define max(a,b) a>b?a:b\n#define min(a,b) a<b?a:b\nusing namespace std;\ninline int read(){\n    int x=0,f=1;char ch=' ';\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9')x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n    return x*f;\n}\nconst int N=1010,M=N*30;\nint n,m,s,t,tot=-1,k;\nint head[N],d[N],q[M],cur[N],mark[N],inq[N],Next[M],to[M],flow[M],cost[M];\ninline void addedge(int x,int y,int l,int c){\n    to[++tot]=y;Next[tot]=head[x];head[x]=tot;flow[tot]=l;cost[tot]=c;\n    to[++tot]=x;Next[tot]=head[y];head[y]=tot;flow[tot]=0;cost[tot]=-c;\n}\ninline bool spfa(){\n    for(int i=s;i<=t;i++)d[i]=0x3f3f3f3f,inq[i]=0;\n    int l=M/2,r=M/2;d[s]=0;q[l]=s;inq[s]=1;\n    while(l<=r){\n        int x=q[l++];\n        for(int i=head[x];i!=-1;i=Next[i]){\n            int u=to[i];\n            if(flow[i]&&d[u]>d[x]+cost[i]){\n                d[u]=d[x]+cost[i];\n                if(!inq[u]){\n                    inq[u]=1;\n                    if(d[u]<d[q[l]])q[--l]=u;\n                    else q[++r]=u;\n                }\n            }\n        }\n        inq[x]=0;\n    }\n    return d[t]!=0x3f3f3f3f;\n}\ninline int dfs(int x,int a){\n    mark[x]=1;\n    if(x==t||!a)return a;\n    int F=0,f;\n    for(int &i=cur[x];i!=-1;i=Next[i]){\n        int u=to[i];\n        if(!mark[u]&&flow[i]&&d[u]==d[x]+cost[i]&&(f=dfs(u,min(a,flow[i])))>0){\n            flow[i]-=f;\n            flow[i^1]+=f;\n            F+=f;\n            a-=f;\n            if(!a)return F;\n        }\n    }\n    return F;\n}\nint F,C;\ninline void MCMF(){\n    F=0;C=0;\n    while(spfa()){\n        mark[t]=1;\n        while(mark[t]){\n            for(int i=s;i<=t;i++)cur[i]=head[i],mark[i]=0;\n            int f=dfs(s,0x3f3f3f3f);\n            F+=f;\n            C+=d[t]*f;\n        }\n    }\n}\nconst int inf=0x3f3f3f3f;\nint a[N],T[N];\nint main(){\n    memset(head,-1,sizeof(head));\n    n=read();m=read();s=0;t=n+2;\n    for(int i=1;i<=n;i++)a[i]=read();\n    for(int i=1;i<=n+1;i++)T[i]=a[i]-a[i-1];\n    for(int i=1;i<=n+1;i++){\n        if(T[i]>=0)addedge(i,t,T[i],0);\n        else addedge(s,i,-T[i],0);\n        if(i<=n)addedge(i,i+1,inf,0);\n    }\n    for(int i=1;i<=m;i++){\n        int si=read(),ti=read(),c=read();\n        addedge(ti+1,si,inf,c);\n    }\n    MCMF();\n    printf(\"%d\",C);\n    return 0;\n}\n```",
        "postTime": 1517363219,
        "uid": 39505,
        "name": "\u73ab\u8475\u4e4b\u8776",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3980 \u3010[NOI2008]\u5fd7\u613f\u8005\u62db\u52df\u3011"
    },
    {
        "content": "~~\u6781\u5176\u795e\u4ed9\u7684\u4e00\u9053\u9898~~\n\n\u795e\u4ed9\u5c31\u795e\u4ed9\u5728\u4e00\u4e2a\u4eba\u53ef\u4ee5\u5bf9\u4e00\u6bb5\u533a\u95f4\u9020\u6210\u8d21\u732e\n\n\u89e3\u9898\u7528\u5230\u7684\u4e3b\u8981\u662f\u5f88\u795e\u4ed9\u7684\u5efa\u56fe\u65b9\u6cd5$($\u770b\u4e86\u9898\u89e3$)$\n\n\u6211\u4eec\u4ee5\u5929\u6570\u4e3a\u70b9,\u7136\u540e\u7b2c$i$\u5929\u5411\u7b2c$i+1$\u5929\u8fde$INF-w[i]$ $($\u7b2c$i$\u5929\u9700\u8981\u4eba\u6570$)$\u5bb9\u91cf\uff0c$0$\u4ef7\u503c\u7684\u8fb9\n\n\u6e90\u70b9\u5411\u7b2c\u4e00\u5929\uff0c\u7b2c$n+1$\u5929\u5411\u6c47\u70b9\u8fde$INF$\u5bb9\u91cf\uff0c$0$\u4ef7\u503c\u7684\u8fb9\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u5de5\u4f5c\u5929\u6570\u4ece$s-t$\u7684\u5fd7\u613f\u8005\uff0c\u6211\u4eec\u4ece\u7b2c$s$\u5929\u5411\u7b2c$t+1$\u5929\u8fde$INF$\u5bb9\u91cf\uff0c$c$\u4ef7\u503c\u7684\u8fb9\n\n\u8fd9\u5f20\u56fe\u600e\u4e48\u7406\u89e3\u5462\uff1f\n\n\u9996\u5148\u8fd9\u5f20\u56fe\u7684\u6700\u5927\u6d41\u80af\u5b9a\u662f$INF$\n\n\u4e2d\u95f4\u7b2c$i$\u5929\u5411\u7b2c$i+1$\u5929\u8fde$INF-w[i]$\u5bb9\u91cf\u7684\u8fb9\uff0c\u6d41\u91cf\u5c11\u4e86$w[i]$\uff0c\u5c31\u9700\u8981\u9760\u5fd7\u613f\u8005\u6765\u8865\u9f50\n\n\u4e00\u4e2a\u5fd7\u613f\u8005\u53ef\u4ee5\u7ed9$s-t$\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8fb9\u8865\u4e0a$1$\u7684\u6d41\u91cf\n\n\u6211\u4eec\u8981\u8ba1\u7b97\u7684\u5c31\u662f\u83b7\u5f97\u6700\u5927\u6d41$INF$\u6240\u9700\u8981\u7684\u6700\u5c0f\u8d39\u7528\n\n\u5373\u8dd1\u4e00\u904d\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\n```cpp\n#include<bits/stdc++.h>\n#define ts cout<<\"ok\"<<endl\n#define ll long long\n#define hh puts(\"\")\n#define time TTTT\nusing namespace std;\nint n,m,st,ed,head[20005],vis[20005],time,dis[20005],w[1005];\nint cnt=1,cost,ans;\nstruct Edge{\n    int v,nx,val,s;\n}e[2000005];\ninline int read(){\n    int ret=0,ff=1;char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-') ff=-ff;ch=getchar();}\n    while(isdigit(ch)){ret=ret*10+(ch^48);ch=getchar();}\n    return ret*ff;\n}\ninline void add(int x,int y,int val,int s){\n    e[++cnt].v=y;\n    e[cnt].val=val;\n    e[cnt].s=s;\n    e[cnt].nx=head[x];\n    head[x]=cnt;\n}\ninline bool spfa(){\n    for(int i=0;i<=ed;i++) vis[i]=0,dis[i]=1e9;\n    dis[st]=0;\n    queue<int> q;\n    q.push(st);\n    while(!q.empty()){\n        int now=q.front();\n        q.pop();\n        vis[now]=0;\n        for(int i=head[now];i;i=e[i].nx){\n            int v=e[i].v;\n            if(dis[v]>dis[now]+e[i].val&&e[i].s){\n                dis[v]=dis[now]+e[i].val;\n                if(!vis[v]){\n                    vis[v]=1;\n                    q.push(v);\n                }\n            }\n        }\n    }\n    return dis[ed]!=1e9;\n}\nint dfs(int now,int ma){\n    if(now==ed) return ma;\n    vis[now]=time;\n    int used=0,t;\n    for(int i=head[now];i;i=e[i].nx){\n        int v=e[i].v;\n        if((v==ed||vis[v]!=time)&&e[i].s&&dis[v]==dis[now]+e[i].val){\n            if(t=dfs(v,min(ma-used,e[i].s))){\n                e[i].s-=t;\n                e[i^1].s+=t;\n                cost+=e[i].val*t;\n                used+=t;\n                if(used==ma) break;\n            }\n        }\n    }\n    return used;\n}\nsigned main(){\n    n=read(),m=read();\n    st=0,ed=n+2;\n    for(int i=1;i<=n;i++){\n        int t=read();\n        add(i,i+1,0,1e9-t);\n        add(i+1,i,0,0);\n    }\n    add(st,1,0,1e9);\n    add(1,st,0,0);\n    add(n+1,ed,0,1e9);\n    add(ed,n+1,0,0);\n    for(int i=1;i<=m;i++){\n        int s=read(),t=read(),c=read();\n        add(s,t+1,c,1e9);\n        add(t+1,s,-c,0);\n    }\n    while(spfa()){\n        do{\n            time++;\n            dfs(st,1e9);\n        }while(vis[ed]==time);\n    }\n    printf(\"%d\",cost);\n    return 0;\n}\n```",
        "postTime": 1559024774,
        "uid": 27858,
        "name": "ycyaw",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3980 \u3010[NOI2008]\u5fd7\u613f\u8005\u62db\u52df\u3011"
    },
    {
        "content": "\u7b97\u662f\u6709**\u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41**\u7684\u6a21\u677f\u4e86\u3002\n```\n\n\u9996\u5148\u6211\u4eec\u8981\u4fdd\u8bc1\u6bcf\u4e2a\u70b9\u7684\u6d41\u5165\u6d41\u91cf\u7b49\u4e8e\u6d41\u51fa\u6d41\u91cf  \n\n\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u53ef\u884c\u6d41,\u90a3\u4e48\u4e00\u5b9a\u6ee1\u8db3\u6bcf\u6761\u8fb9\u7684\u6d41\u91cf\u90fd\u5927\u4e8e\u7b49\u4e8e\u6d41\u91cf\u7684\u4e0b\u9650.\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4ee4\u6bcf\u6761\u8fb9\u7684\u6d41\u91cf\u7b49\u4e8e\u6d41\u91cf\u4e0b\u9650,\u5f97\u5230\u4e00\u4e2a\u521d\u59cb\u6d41,\u7136\u540e\u5efa\u51fa\u8fd9\u4e2a\u6d41\u7684\u6b8b\u91cf\u7f51\u7edc\uff0c\u6bcf\u6761\u8fb9\u7684\u6d41\u91cf\u7b49\u4e8e\u4e0a\u9650\u51cf\u4e0b\u9650\u3002\n\n\u4f46\u73b0\u5728\u53ef\u80fd\u6d41\u91cf\u4e0d\u662f\u5b88\u6052\u7684\uff0c\u8ba9t[i]=\u6d41\u5165\u91cf-\u6d41\u51fa\u91cf\n\n\u6211\u4eec\u5efa\u51fa\u865a\u62df\u7684\u6e90\u70b9\u548c\u6c47\u70b9\uff0c\u5982\u679ct[i]>0,\u6e90\u70b9\u5411i\u8fdet[i]\u7684\u8fb9\uff0c\u5426\u5219i\u70b9\u5411\u6c47\u70b9\u8fde-t[i]\u7684\u8fb9\n\n```\n\u4ee5\u4e0a\u5c31\u662f\u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41\u7684\u57fa\u672c\u505a\u6cd5\u4e86\uff08\u8f6c\u81ea\u8bfe\u4ef6ppt\uff09\u3002\n\n\u672c\u9898\u4e2d\uff0c\u628a\u8fd9 $n$ \u5929\u770b\u6210\u4e00\u6761\u7ebf\uff0c\u6bcf\u5929\u5411\u4e0b\u4e00\u5929\u8fde\u4e0b\u754c\u4e3a $ai$ \uff0c\u4e0a\u754c\u4e3a INF  \u7684\u8fb9\uff0c\u4ee3\u8868\u6bcf\u5929\u9700\u8981\u7684\u4eba\u6570\u3002\u7136\u540e\u5982\u679c\u6709\u5fd7\u613f\u8005\u8981\u5728 $[l,r]$ \u5929\u5de5\u4f5c\uff0c\u5c31\u4ece $r$ \u5411 $l$ \u8fde\u4e00\u6761\u4e0b\u754c\u4e3a $0$ \uff0c\u4e0a\u754c INF \u7684\u8fb9\uff0c\u8d39\u7528\u4e3a $ci$ \u3002\n\n**\u4e3a\u4ec0\u4e48\u662f\u5bf9\u7684\uff1f**\n\n\u5fd7\u613f\u8005\u8fde\u8fb9\u4e4b\u540e\uff0c\u6bcf\u591a\u4e00\u6761\u5faa\u73af\u6d41\uff0c\u5c31\u8981\u82b1\u8d39 $ci$ \u7684\u4ee3\u4ef7\uff0c\u540c\u65f6 $[l,r]$ \u7684\u6d41\u91cf\u5c31\u53ef\u4ee5 $+1$ \uff0c\u7b26\u5408\u9898\u610f\u3002\n\n\u7136\u540e\u8dd1**\u65e0\u6e90\u6c47\u70b9\u7684\u6700\u5c0f\u8d39\u7528\u6d41**\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define N 1005\n#define M 1000005\n#define INF 1e9\nusing namespace std;\n\ninline void rd(int &X){\n    X=0;int w=0;char ch=0;\n    while(!isdigit(ch))w|=ch=='-',ch=getchar();\n    while( isdigit(ch))X=(X<<3)+(X<<1)+(ch^48),ch=getchar();\n    X=w?-X:X;\n}\n\nint n,m,s=N-3,t=N-2,ans;\nint head[N],cnt=1,T[N];\nint d[N],mn[N],v[N],pre[N];\nstruct nd{int nxt,to,v,c,l,r,pd;}e[M];\n#define For(x) for(int y,i=head[x];(y=e[i].to);i=e[i].nxt)\n\ninline void add(int x,int y,int v,int c=0,int l=0,int r=0){\n\tif(!v) v=r-l;\n\te[++cnt]=(nd){head[x],y,v, c,l,r,-1};head[x]=cnt;\n\te[++cnt]=(nd){head[y],x,0,-c,l,r, 1};head[y]=cnt;\n}\nbool SPFA()\n{\n    memset(d,0x3f,sizeof d);d[s]=0;\n    queue<int> q;q.push(s);mn[s]=1<<29;\n    while(!q.empty()){\n        int x=q.front();q.pop();v[x]=0;\n        For(x) if(e[i].v&&d[y]>d[x]+e[i].c)\n        {\n            pre[y]=i; d[y]=d[x]+e[i].c;\n            mn[y]=min(mn[x],e[i].v);\n            if(!v[y]) v[y]=1,q.push(y);\n        }\n    }\n    return d[t]!=0x3f3f3f3f;\n}\nvoid up()\n{\n    ans+=d[t]*mn[t];\n    for(int i,x=t;x!=s;x=e[i^1].to)\n        i=pre[x],e[i].v-=mn[t],e[i^1].v+=mn[t];\n}\nvoid solve()\n{\n\tfor(int x=1;x<=n+1;x++)\n\t\tFor(x) T[x]+=e[i].pd*e[i].l,ans+=e[i].l*e[i].c*(e[i].pd<0);\n\tfor(int i=1;i<=n+1;i++)\n\t\tif(T[i]>0) add(s,i,T[i],0);\n\t\telse if(T[i]<0) add(i,t,-T[i],0);\n\twhile(SPFA()) up();\n}\nsigned main(){\n\trd(n);rd(m);\n\tfor(int x,i=1;i<=n;i++)\n\t\trd(x),add(i,i+1,0,0,x,INF);\n\tfor(int l,r,x,i=1;i<=m;i++)\n\t\trd(l),rd(r),rd(x),add(r+1,l,0,x,0,INF);\n\tsolve();cout<<ans;\n}\n\n```",
        "postTime": 1544795168,
        "uid": 56659,
        "name": "AubRain",
        "ccfLevel": 0,
        "title": "[NOI2008]\u5fd7\u613f\u8005\u62db\u52df\u2014\u2014\u6700\u5c0f\u8d39\u7528\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41"
    },
    {
        "content": "\u5982\u679c\u7b2c $i$ \u5929\u7684\u9700\u6c42\u4e3a $a_{i}$\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5728 $i$ \u4e0e $i+1$ \u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $INF-a_{i}$\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5fd7\u613f\u8005 $(s,t,c)$ \u6211\u4eec\u5728 $s$ \u548c $t+1$ \u95f4\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $INF$\uff0c\u8d39\u7528\u4e3a $c$ \u7684\u8fb9\n\n\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u5efa\u6a21\u5462\uff1f\u9996\u5148\u6211\u4eec\u77e5\u9053\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u6c42\u7684\u662f\u5728\u6d41\u6700\u5927\u7684\u524d\u63d0\u4e0b\u7684\u6700\u4e0b\u8d39\u7528\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u4eba\u4e3a\u5b9a\u4e00\u4e2a\u6700\u5927\u6d41\uff0c\u7136\u540e\u82b1\u94b1\u6765\u8fbe\u5230\u8fd9\u4e2a\u6700\u5927\u6d41\u3002\u5bf9\u4e8e\u8fd9\u9898\u6765\u8bf4\uff0c\u663e\u7136\u6700\u5927\u6d41\u5c31\u662f $INF$\uff0c\u7b2c $i$ \u4e0e\u7b2c $i+1$ \u4e2a\u8282\u70b9\u95f4\u7684\u8fb9\u7684\u5bb9\u91cf\u4e3a $INF-a_{i}$\uff0c\u4e8e\u662f\u8981\u8fbe\u5230\u6700\u5927\u6d41\u6211\u4eec\u5c31\u8fd8\u9700\u8981\u4ece\u5fd7\u613f\u8005\u7684\u8fb9\u4e0a\u8865\u4e0a\u8fd9 $a_{i}$ \u7684\u6d41\u91cf\u3002\u800c\u4e00\u4e2a\u4ece $s$ \u5de5\u4f5c\u5230 $t$ \u7684\u5fd7\u613f\u8005\u53ef\u4ee5\u4e3a $s$ \u5230 $t$ \u4e4b\u95f4\u7684\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u8865\u5145\u6d41\u91cf\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u5728 $s$ \u548c $t+1$ \u95f4\u8fde\u4e0a\u4e00\u6761\u8d39\u7528\u4e3a $c$ \u7684\u8fb9\uff0c\u8868\u793a\u6bcf\u8865 $1$ \u6d41\u91cf\u9700\u8981\u82b1\u8d39 $c$ \u7684\u4ee3\u4ef7\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <queue>\nusing namespace std;\n\ntypedef struct edge{\n    int from,to,cap,cost,next;\n}edge;\n\nconst int INF=100000000;\nedge e[40010];\nint n,m,k,s,t,head[1010],tot=1,c[1010],p[1010],f[1010],inque[1010],flow,cost,cnt;\n\ninline int read(){\n    int num=0,k=1; char c=getchar();\n    while(c>'9' || c<'0') k=(c=='-')?0:k,c=getchar();\n    while(c>='0' && c<='9') num=num*10+c-'0',c=getchar();\n    return k?num:-num;\n}\n\nvoid addedge(int u,int v,int cap,int cost){\n    e[++tot].from=u; e[tot].to=v; e[tot].cap=cap; e[tot].cost=cost; e[tot].next=head[u]; head[u]=tot;\n    e[++tot].from=v; e[tot].to=u; e[tot].cap=0; e[tot].cost=-cost; e[tot].next=head[v]; head[v]=tot;\n}\n\nint spfa(){\n    for(int i=1;i<=cnt;i++) p[i]=f[i]=0,c[i]=INF;\n    queue<int> q;\n    q.push(s); inque[s]=1; c[s]=0; f[s]=INF;\n    while(!q.empty()){\n        int x=q.front(); q.pop(); inque[x]=0;\n        for(int i=head[x],to=e[i].to;i;i=e[i].next){\n            to=e[i].to;\n            if(e[i].cap && e[i].cost+c[x]<c[to]){\n                c[to]=e[i].cost+c[x]; p[to]=i; f[to]=min(f[x],e[i].cap);\n                if(!inque[to]) {q.push(to); inque[to]=1;}\n            }\n        }\n    }\n    return f[t];\n}\n\nvoid solve(){\n    while(spfa()){\n        flow+=f[t]; cost+=f[t]*c[t];\n        for(int i=p[t];i;i=p[e[i].from]) e[i].cap-=f[t],e[i^1].cap+=f[t];\n    }\n    return;\n}\n\nint main(){\n    n=read(); m=read(); s=n+2; t=n+3; cnt=n+3;\n    for(int i=1;i<=n;i++) addedge(i,i+1,INF-read(),0);\n    for(int i=1,ss,tt,c;i<=m;i++){\n        ss=read(); tt=read(); c=read();\n        addedge(ss,tt+1,INF,c);\n    }\n    addedge(s,1,INF,0); addedge(n+1,t,INF,0);\n    solve();\n    printf(\"%d\",cost);\n    return 0;\n}\n\n```",
        "postTime": 1554461498,
        "uid": 100037,
        "name": "kkxhh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3980 \u3010[NOI2008]\u5fd7\u613f\u8005\u62db\u52df\u3011"
    },
    {
        "content": "# \u5173\u4e8e\u7f51\u7edc\u6d41\u89e3\u7ebf\u6027\u89c4\u5212\u95ee\u9898\n\n\u4ee5\u4e0b\u7686\u4e3a\u7384\u5b66\uff0c\u5982\u6709\u95ee\u9898\uff0c\u79c1\u4fe1\uff08\u6211\u4e5f\u4e0d\u4f1a\u3002\n\n\u989d\uff0c\u8fd9\u4e2a\u4e1c\u897f\uff0c\u4e0d\u597d\u89e3\u91ca\u3002\n\n- **\u5f15\u5b50**\n\n\t\n    \u6211\u4eec\u77e5\u9053\u7f51\u7edc\u6d41\u6709\u4e2a\u53eb\u6d41\u91cf\u5b88\u6052\u7684\u4e1c\u897f\uff08\u5e73\u5e38\u6ca1\u4eba\u4f1a\u5728\u610f\u4ed6\u3002\n\n\t\u6211\u4eec\u5728\u770b\u4e00\u4e2a\u7b49\u5f0f x1+x2-x3 = 0\uff0c\u5982\u679c\u6211\u4eec\u628a\u6d41\u5165\u770b\u505a\u52a0\uff0c\u6d41\u51fa\u770b\u505a\u51cf\u7684\u8bdd\uff0c\u7f51\u7edc\u6d41\u4e2d\u7684\u70b9\u5728\u67d0\u79cd\u610f\u4e49\u4e0a\u53ef\u4ee5\u8868\u793a\u4e00\u4e2a\u7b49\u5f0f\u3002\n\n- **\u4f8b\u9898**\n\t\n     [\u5fd7\u613f\u8005\u62db\u52df](https://www.luogu.com.cn/problem/P3980)\n\n    \u6211\u4eec\u5982\u679c\u8bbe\u7b2c$i$\u79cd\u5fd7\u613f\u8005\u4f7f\u7528\u6570\u76ee\u4e3a$x_i$\uff0c\u53ef\u4ee5\u5f97\u5230\u4e0d\u7b49\u5f0f\n\n    $x_j+x_{j+1}+x_k...>a_i$,$a_i$\u4e3a\u7b2ci\u4e2a\u4f4d\u7f6e\u81f3\u5c11\u9700\u8981\u7684\u5fd7\u613f\u8005\u91cf\u3002\n\n    \u4e4b\u540e\u7a9d\u4eec\u628a\u5b83\u53d8\u6210\u7b49\u5f0f $x_j+x_{j+1}+x_k...-y_i-a_i = 0$\n\n    \u6211\u4eec\u4e8e\u662f\u5f97\u5230\u4e86\u5f62\u5982\u4e0a\u9762\u7684n\u4e2a\u5f0f\u5b50\uff0c\u7136\u540e\u5728\u524d\u9762\u548c\u540e\u9762\u8865\u5145$0=0$,$0=0$\u4e4b\u540e\uff0c\u7528\u7740n+2\u4e2a\u5f0f\u5b50\u8fdb\u884c\u5dee\u5206\u51fan+1\u4e2a\u5f0f\u5b50\u3002\n    \u6211\u4eec\u53d1\u73b0\u8fd9\u91cc\u6bcf\u4e2a$x_i$\u53ea\u51fa\u73b0\u4e86\u4e00\u6b63\u4e00\u8d1f\uff0c\u8fd9\u91cc\u8981\u5f15\u51fa\u6211\u4eec\u7528\u7f51\u7edc\u6d41\u89e3\u7ebf\u89c4\u95ee\u9898\u7684\u4e00\u4e2a\u6761\u4ef6\uff0c\u5c31\u662f\u7ebf\u89c4\u65b9\u7a0b\u5fc5\u987b\u201c\u8fde\u7eed\u201d\u3002\n\n    - \u4f8b\u5b50\uff1a\n\n        $x_1+x_2+x_3>a_1$\n\n        $x_2+x_3>a_2$\n\n        $x_3+x_4+x_5>a_3$\n\n        $......$\n\n    \u8fd9\u6837\u6211\u4eec\u6700\u540e\u5dee\u5206\u51fa\u7684\u662f\u5f0f\u5b50\u624d\u80fd\u4fdd\u8bc1$x_i$,\u53ea\u51fa\u73b0\u4e00\u6b63\u4e00\u8d1f\u3002\n\n    \u81f3\u4e8e\u4e3a\u4ec0\u4e48\u53ea\u80fd\u5728$x_i$\u4e00\u6b63\u4e00\u8d1f\u7684\u65f6\u5019\u52a8\u7528\u7f51\u7edc\u6d41\uff0c\u662f\u56e0\u4e3a\u6211\u4eec\u8868\u8fbe\u7b49\u5f0f\u662f\u7528\u8fb9\u7684\uff0c\u4f46\u6211\u4eec\u5982\u679c\u540c\u65f6\u53c8\u591a\u5bf9$x_i$,\u90a3\u8fd9\u51e0\u7ec4\u8fb9\u4e4b\u95f4\u5c06\u65e0\u6cd5\u8fdb\u884c\u7ea6\u675f\u3002\n\n    - **\u5efa\u56fe**\n\n\n        \u7b49\u5230\u5dee\u5206\u7b49\u5f0f\u4e4b\u540e\uff0c\u6211\u4eec\u5c06$x_i$\u4e3a\u8d1f\u7684\u4f4d\u7f6e\u8fde\u5411$x_i$\u4e3a\u6b63\u7684\u4f4d\u7f6e\uff0c\u8865\u5145\u5e38\u6570$y_i$\u7c7b\u4f3c\uff0c\u5e38\u6570\u9879\u82e5\u662f\u8d1f\u6570\uff0c\u5411T\u8fde\u8fb9\uff0c\u5426\u5219S\u5411i\u8fde\u8fb9\u3002\n        \u6ee1\u8db3\u6761\u4ef6\u5c31\u662f\u8bb2S\u7684\u51fa\u8fb9\u6d41\u6ee1\u3002\n\n**\u849f\u84bb\u778e\u63b0\u4e00\u53e5\uff0c\u5176\u5b9e\u8fd9\u7c7b\u9898\u5c31\u662f\u8ba9\u4f60\u5217\u51fa\u5f0f\u5b50\u540e\uff0c\u5c3d\u53ef\u80fd\u7684\u6d88\u5143\uff0c\u6784\u9020\u51fa\u7f51\u7edc\u6d41\u53ef\u4ee5\u8fdb\u884c\u6709\u6548\u7ea6\u675f\u7684\u5f0f\u5b50\u3002**\n\n\n",
        "postTime": 1580482802,
        "uid": 165030,
        "name": "Sweetie_Liu",
        "ccfLevel": 6,
        "title": "\u5173\u4e8e\u7f51\u7edc\u6d41\u89e3\u7ebf\u6027\u89c4\u5212\u95ee\u9898"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u70b9\u8fd9\u91cc](https://blog.csdn.net/A_Comme_Amour/article/details/79772741)\n\n\n\u9898\u76ee\n-\n\n[\u4f20\u9001\u95e8](https://www.lydsy.com/JudgeOnline/problem.php?id=1061)\n\n\u9898\u89e3\n-\n\n\u8fd9\u9053\u9898\u53ef\u4ee5\u8bf4\u4ee3\u8868\u4e86\u4e00\u7c7b\u9898\u3002\u8fd9\u9053\u9898\u548c[\u6700\u957fk\u53ef\u91cd\u533a\u95f4\u96c6\u95ee\u9898](https://blog.csdn.net/a_comme_amour/article/details/79605403)\u7684\u5efa\u56fe\u65b9\u6cd5\u662f\u975e\u5e38\u50cf\u7684\uff0c\u5e76\u4e14\u8fd9\u79cd\u95ee\u9898\u90fd\u6709\u4e24\u79cd\u5efa\u56fe\u65b9\u6cd5\uff0c\u4e0b\u9762\u6211\u6765\u4ecb\u7ecd\u4e00\u4e0b\uff1b\n\n\u6211\u4eec\u6682\u4e14\u628a\u8fd9\u79cd\u95ee\u9898\u53eb\u505a\u201c\u9009\u62e9\u533a\u95f4\u95ee\u9898\u201d\uff08\u53e3\u80e1\uff09\u5427\uff1b\u6211\u8003\u8651\u5230\u5f53\u524d\u70b9\u9009\u62e9\u5728\u67d0\u4e00\u4e2a\u533a\u95f4\u91cc\u9762\uff0c\u4f1a\u5bf9\u201c\u8fc7\u53bb\u201d\u4ea7\u751f\u5f71\u54cd\uff0c\u4e5f\u4f1a\u5bf9\u201c\u672a\u6765\u201d\u9020\u6210\u5f71\u54cd\uff08\u4e2a\u4eba\u7406\u89e3\uff09\n\n\u7b2c\u4e00\u79cd\u5efa\u56fe\u65b9\u6cd5\uff1a\u628a\u6bcf\u4e00\u5929\u90fd\u62c6\u70b9\uff0c\u70b9 i \u5230 i+n \u5bb9\u91cf\u4e3ainf-a[i]\uff0c\u8d39\u7528\u4e3a0\uff0ci+n\u5230i+1\u8fde\u5bb9\u91cf\u4e3ainf\uff0c\u8d39\u7528\u4e3ac[i]\u7684\u8fb9\uff0c\u5bf9\u4e8e\u5fd7\u613f\u8005\u7684\u5de5\u4f5c\u65f6\u95f4 < x , y >\u4ecex\u5411y+n\u8fde\u4e00\u6761\u6743INF\u8d39\u7528\u4e3ac[i]\u7684\u8fb9\uff0c\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41;\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u6211\u4eec\u591a\u8fde\u4e86\u4e00\u4e9b\u591a\u4f59\u7684\u8fb9\uff1b\n\n\u4e0b\u4e00\u79cd\u5efa\u56fe\u65b9\u6cd5\u6211\u628a\u5b83\u53eb\u505a\u201d**\u5728\u94fe\u4e0a\u5efa\u56fe**\u201c\uff1a\u6bcf\u4e00\u5929\u5411\u4e0b\u4e00\u5929\u7684\u5bb9\u91cf\u4e3ainf-a[i]\uff0c\u8d39\u7528\u4e3a0\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u8fde\u7eed\u5de5\u4f5c\u662f\u4e0d\u9700\u8981\u989d\u5916\u82b1\u94b1\u7684\uff0c\u6bcf\u4e00\u4e2a\u5fd7\u613f\u8005\u5de5\u4f5c\u7684\u5929\u6570\uff08x\uff0cy\uff09\uff0c\u4ecex\u8fde\u8fb9\u5411y+1\uff0c\u5bb9\u91cf\u4e3ainf\u8d39\u7528\u4e3ac[i]; \n\n\u5bb9\u91cf\u7684\u5999\u5904\u5728\u4e8e\u4f18\u5148\u9009\u62e9\u8fde\u7eed\u5de5\u4f5c\uff0c\u51cf\u4e86a[i]\u90a3\u4e48\u7a0b\u5e8f\u4f1a\u201d\u4f7f\u52b2\u201c\u4f7f\u5b83\u8fbe\u5230\u6ee1\u6d41\uff0c\u8fd9\u6837\u7684\u8bdd\u5c31\u9700\u8981\u989d\u5916\u82b1\u94b1\u3002\n\n\u4ee3\u7801\n-\n\n```\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <iostream>\n#include <queue>\nusing namespace std;\nconst int maxn=1e6;\nconst int inf=1e9;\nint read(){\n    char ch=getchar(); int now=0,f=1;\n    while (ch<'0'||ch>'9') {if (ch=='-') f=-1; ch=getchar();}\n    while (ch>='0'&&ch<='9') {now=(now<<1)+(now<<3)+ch-'0'; ch=getchar();}\n    return now*f;}\n\nqueue <int> q;\nint n,m,day[maxn],maxflow,mincost;\nstruct Poe{\n    int s,t,c;\n}a[maxn];\nstruct Edge{\n    int next,to,flow,dis;\n}edge[maxn<<1];\nint num_edge=-1,head[maxn],dis[maxn],flow[maxn],last[maxn],pre[maxn];\nbool vis[maxn];\n\nvoid add_edge(int from,int to,int flow,int dis)\n{\n    edge[++num_edge].next=head[from];\n    edge[num_edge].flow=flow;\n    edge[num_edge].dis=dis;\n    edge[num_edge].to=to;\n    head[from]=num_edge;\n}\nvoid add(int x,int y,int z,int f) {add_edge(x,y,z,f); add_edge(y,x,0,-f);}\n\nbool spfa(int s,int t)\n{\n    memset(dis,0x7f,sizeof(dis));\n    memset(flow,0x7f,sizeof(flow));\n    memset(vis,0,sizeof(vis));\n    while (!q.empty()) q.pop();\n    q.push(s); dis[s]=0; vis[s]=1; pre[t]=-1;\n    while (!q.empty())\n    {\n        int now=q.front(); q.pop();\n        vis[now]=0;\n        for (int i=head[now]; i!=-1; i=edge[i].next)\n        {\n            int to=edge[i].to;\n            if (edge[i].flow>0 && dis[to]>dis[now]+edge[i].dis)\n            {\n                dis[to]=dis[now]+edge[i].dis;\n                flow[to]=min(flow[now],edge[i].flow);\n                last[to]=i;\n                pre[to]=now;\n                if (!vis[to])\n                {\n                    vis[to]=1;\n                    q.push(to);\n                }\n            }\n        }\n    }\n    return pre[t]!=-1;\n}\n\nvoid MCMF(int s,int t)\n{\n    while (spfa(s,t))\n    {\n        int now=t;\n        maxflow+=flow[t];\n        mincost+=flow[t]*dis[t];\n        while (now!=s)\n        {\n            edge[last[now]].flow-=flow[t];\n            edge[last[now]^1].flow+=flow[t];\n            now=pre[now];\n        }\n    }\n}\nvoid debug()\n{\n    for (int i=0; i<=num_edge; i++) printf(\"%d: %d %d %d %d\\n\",i,edge[i^1].to,edge[i].to,edge[i].flow,edge[i].dis);\n    printf(\"\\n\");\n}\n\nint main()\n{\n    memset(head,-1,sizeof(head));\n    n=read(); m=read();\n    int S=0,T=n+2;\n    for (int i=1; i<=n; i++)\n    {\n    \tint x=read(); add(i,i+1,inf-x,0);\n\t}\n    for (int i=1; i<=m; i++)\n    {\n        int s=read(); int t=read(); int c=read();\n        add(s,t+1,inf,c);\n    }\n    add(S,1,inf,0); add(n+1,T,inf,0);\n\tMCMF(S,T);\n    printf(\"%d\\n\",mincost);\n    return 0;\n}\n```\n\n\u603b\u7ed3\n-\n\n**\u94fe\u4e0a\u5efa\u56fe**\u5de7\u5999\n\u5bb9\u91cf\u51cf\u53bb\u4e00\u4e2a\u503c\n",
        "postTime": 1522505608,
        "uid": 48036,
        "name": "\u79cb\u65e5\u79c1\u8bed",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3980 \u3010[NOI2008]\u5fd7\u613f\u8005\u62db\u52df\u3011"
    }
]