[
    {
        "content": "   \n\n\u770b\u4e86\u597d\u591a\u5927\u4f6c\u7528\u7684\u8d28\u56e0\u6570\u5206\u89e3\u6765\u505a\u8fd9\u4e2a\u9898\uff0c\u6211\u6765\u4e00\u53d1\u601d\u8def\u4e0d\u4e00\u6837\u7684$QwQ~$\n\n\u6211\u4eec\u770b\u8fd9\u4e2a\u6570\u636e\uff1a$m_1$\u7684\u8303\u56f4\u662f $30000$ \u4ee5\u5185\uff0c$m_2$ \u7684\u8303\u56f4\u662f$10000$ \u4ee5\u5185\uff0c\u82e5\u6211\u4eec\u76f4\u63a5\u6c42 $m_1^{m_2}$\u2026\u2026\uff0c\u66b4\u7684\u4e0d\u582a\u8bbe\u60f3\uff1b\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u6362\u4e00\u79cd\u522b\u7684\u65b9\u6cd5\u55bd\uff0c\u5f53\u7136\u5206\u89e3\u8d28\u56e0\u6570\u53ef\u4ee5\uff0c\u800c\u4e14\u8fd9\u4e2a\u601d\u8def\u5f88\u597d\uff0c\u9898\u89e3\u91cc\u5f88\u591a\u5927\u4f6c\u8be6\u7ec6\u7684\u8bb2\u89e3\u4e86\uff0c\u4f46\u662f\u6211\u4e5f\u8bf4\u4e0b\u6211\u7684\u601d\u8def\u5566\uff1a\n\n\u9996\u5148\u6211\u4eec\u5c06\u6bcf\u79cd\u7ec6\u80de\u5355\u72ec\u62ff\u51fa\u6765\u8003\u8651\uff0c\u5c31\u8bbe\u5b83\u662f $S_i$ \u5427\uff0c\u90a3\u4e48\u603b\u6709$m1^{m2}$ | $Si^n$ \uff0c\u8fd9\u91cc\u8fd9\u4e2a $n$ \u5c31\u662f\u8981\u6c42\u7684\u6700\u5c0f\u65f6\u95f4\uff1b\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u6c42\u51fa\u6765 $m_1$ \u4e0e $S_i$ \u7684\u6700\u5927\u516c\u7ea6\u6570 $gcd_1$\uff0c\u56e0\u4e3a\u60f3\u5230\u8fd9\u4e2a $gcd_1$ \u5728\u524d\u9762\u4f1a\u88ab\u7b97\u4e2a${gcd_1}^{m2}$\uff0c\u5728\u540e\u9762\u53c8\u4f1a\u88ab\u7b97\u4e2a${gcd_1}^n$\uff0c\u89c9\u5f97\u6709\u70b9\u6d6a\u8d39\uff08\u5f53\u65f6\u6211\u771f\u7684\u8fd9\u4e48\u60f3\uff09\uff0c\u5c31\u5355\u72ec\u5c06\u5b83\u6458\u51fa\u6765\u5427\uff1b\n\n\u6709\u4e86\u6700\u5927\u516c\u7ea6\u6570\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06$m_1^{m_2}$\u548c$S_i^n$\u8f6c\u5316\u4e00\u4e0b\u5f62\u5f0f\u5566\uff1a\n\n\u8bbe $m_1=m*gcd_1$\uff0c$S_i=s*gcd_1$\uff0c\u90a3\u4e48$(m*gcd_1)^{m2} | (s*gcd_1)^n$\uff0c\u4e5f\u5c31\u662f $m^{m_2}$\\*${gcd_1}^{m_2}$ | $s^n$ *$ {gcd_1}^n$\uff1b\n\n\u4e24\u8fb9\u540c\u9664\u4ee5 ${gcd_1}^{m_2}$\u540e\u5f97\u5230\uff1a  $m^{m_2} | s^n * {gcd_1}^{n-m_2}$\uff1b\n\n\u6211\u4eec\u7ee7\u7eed\u770b\u5de6\u8fb9\u8fd9\u4e2a\u4e1c\u4e1c\uff0c\u5b83\u662f\u4e0d\u662f\u5f88\u50cf\u539f\u6765\u6211\u4eec\u4e00\u5f00\u59cb\u5217\u51fa\u7684\u5f0f\u5b50\uff1a      \n$m1^{m_2}$ | $Si^n$  \u4e0e $ m^{m_2}$ | $s^n$ * $ {gcd_1}^{n-m_2} $\uff1b\n\n\u867d\u7136\u53ea\u662f\u6709\u4e00\u70b9\u70b9\u50cf\u5566\uff0c\u4f46\u662f\u8fd9\u53f3\u8fb9\u5dee\u7684\u6709\u70b9\u5927\u554a$qwq$\uff0c\u80fd\u4e0d\u80fd\u5316\u7b80\u4e00\u4e0b\u5566\uff1f\n\n\u5f53\u7136\u80fd\uff01\u6211\u4eec\u770b\u4e00\u4e2a\u5b9a\u7406\uff1a\n\n**\u82e5\u6709\u4e24\u4e2a\u4e92\u8d28\u7684\u6570 $p,q$\uff0c\u5219\u4e00\u5b9a\u5b58\u5728 $p^n$ % $q^m$ $\u2260 0$**\uff08\u5176\u5b9e\u662f $gcd$\uff08$p^n$\uff0c$q^m$\uff09$=1$\uff09 \uff0c\u5176\u5b9e\u5c31\u662f\u65e0\u8bba\u591a\u5c11\u6b21\u65b9\u90fd\u4e0d\u80fd\u6574\u9664\uff01\n\n\u8349\u8349\u8bc1\u660e\u4e00\u4e0b\u5427\uff1a\n\n$\u2235$ $p$\uff0c$q$ \u4e92\u8d28\n\n$\u2234p$ \u548c $q$ \u65e0\u4efb\u4f55\u76f8\u540c\u7684\u56e0\u5b50\n\n\u53c8$\u2235$ $p^n$ \u548c $q^m$ \u53ea\u662f\u6539\u53d8\u4e86\u56e0\u5b50\u7684\u6307\u6570\uff0c\u800c\u5e76\u6ca1\u6709\u589e\u52a0\u6216\u51cf\u5c11\u56e0\u5b50\u672c\u8eab\u7684\u6570\u503c\n\n$\u2234$ \u4ecd\u6ca1\u6709\u76f8\u540c\u7684\u56e0\u5b50\uff0c\u5373\u4ecd\u4e92\u8d28 \n\n\u6709\u4e86\u8fd9\u4e2a\u5b9a\u7406\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5316\u7b80\u53f3\u8fb9\u7684\u4e00\u5927\u5806\u5f0f\u5b50\u4e86\uff1a\n\n\u56e0\u4e3a $m$ \u548c $s$ \u662f\u5206\u522b\u7531 $m_1$ \u548c $S_i$ \u540c\u9664\u4ee5\u5b83\u4eec\u7684\u6700\u5927\u516c\u7ea6\u6570 $gcd_1$ \u5f97\u5230\uff0c\u90a3\u4e48 $m$ \u548c $s$ \u4e00\u5b9a\u662f\u4e92\u8d28\u7684\uff01\uff08\u6240\u6709\u76f8\u540c\u7684\u56e0\u5b50\u90fd\u88ab\u9664\u4e86\uff0c\u53ea\u5269\u4e0b\u4e0d\u76f8\u540c\u7684\u4e86\uff09\n\n\u90a3\u4e48\u4e5f\u5c31\u662f\u8bf4\uff0c\u53f3\u8fb9\u7684 $s^n$ \u65e0\u8bba\u5982\u4f55\u90fd\u4e0d\u80fd\u4f7f $m^m2$ | $s^n$\uff0c\u7b54\u6848\u53ea\u53ef\u80fd\u4ece\u4e0a\u9762\u7684${gcd_1}^{n-m_2}$\u4e2d\u4ea7\u751f\uff01\u6240\u4ee5\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u820d\u5f03$s^n$\u6765\u5316\u7b80\u5f0f\u5b50\uff0c\u90a3\u4e48\u5f0f\u5b50\u5c31\u5316\u7b80\u6210\uff1a\n\n$m^{m_2}$ | ${gcd_1}^{n-m_2}$   \n\n\u6211\u4eec\u53ef\u4ee5\u5c06 $n-m_2$ \u770b\u6210\u4e00\u4e2a\u6574\u4f53\uff0c\u8fd9\u6837\u5c31\u771f\u7684\u548c\u6211\u4eec\u4e00\u5f00\u59cb\u5217\u51fa\u7684\u5f0f\u5b50\u5f88\u50cf\u4e86$QwQ$\n\n\u6240\u4ee5\u6211\u4eec\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u8fdb\u884c\u6211\u4eec\u521a\u521a\u6267\u884c\u7684\u64cd\u4f5c\uff1a**\u627e\u6700\u5927\u516c\u7ea6\u6570**\uff01\n\n\u6069\uff0c\u7ee7\u7eed\u627e\u6700\u5927\u516c\u7ea6\u6570\uff1a\n\n\u6211\u4eec\u8bbe $gcd_2=gcd \\ (m,gcd_1)$\uff0c\u5219 $m = {gcd_2}$ $*  mm$\uff0c$gcd_1=gcd_2 *  ggcd_1$ \uff08\u6709\u70b9\u6df7\uff0c\u4f46\u662f\u771f\u7684\u627e\u4e0d\u51fa\u6765\u597d\u53d8\u91cf\u540d\u4e86\uff0c$gcd_2$ \u662f\u6700\u5927\u516c\u7ea6\u6570\uff0c$mm$ \u662f $m$ \u9664\u4ee5\u6700\u5927\u516c\u7ea6\u6570\u540e\u5269\u4e0b\u7684\u6570\uff0c$ggcd_1$ \u662f $gcd_1$ \u9664\u4ee5\u6700\u5927\u516c\u7ea6\u6570\u540e\u5269\u4e0b\u7684\u6570\uff09\uff1b\n\n\u8fd8\u662f\u521a\u521a\u90a3\u6837\uff0c\u7528\u6700\u5927\u516c\u7ea6\u6570\u5c06\u539f\u5148\u7684 $m$ \u548c $gcd_1$ \u8868\u793a\u51fa\u6765\uff1a\n\n$m^{m_2}$ | ${gcd_1}^{n-m_2}$\n\n=$(gcd_2 * mm)^{m_2}$ | $(gcd_2 * ggcd_1)^{n-m_2} $\n\n=${gcd_2}^{m_2}$ * $ mm^{m_2}$ | ${gcd_2}^{n-m_2}* {ggcd_1}^{n-m_2}$ \n\n\u7136\u540e\u6211\u4eec\u8fd8\u662f\u628a\u6700\u5927\u516c\u7ea6\u6570\u90a3\u4e00\u9879\u9664\u5230\u53f3\u8fb9\u6765\uff1a\n\n=$mm^{m_2}$ | ${gcd_2}^{n-m_2-m_2}* {ggcd_1}^{n-m_2}$\n\n=$mm^{m_2} | {gcd_2}^{n-2 * m_2}* {ggcd_2}^{n-m_2}$\n\n\u8fd8\u662f\u518d\u5957\u7528\u4e0a\u9762\u7684\u5b9a\u7406\uff1a    \n\n$\u2235mm$\u4e0e $ggcd_2$ \u4e92\u8d28\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u820d\u5f03 ${ggcd_2}^{n-m_2}$\n\n\u90a3\u4e48\u5f0f\u5b50\u53c8\u7b80\u5316\u4e3a\uff1a $mm^{m_2} | {gcdd_2}^{n-2 * m_2}$\n\n\u7136\u540e\u6211\u4eec\u8fd8\u53ef\u4ee5\u627e\u6700\u5927\u516c\u7ea6\u6570\u2026\u2026\u2026\u2026\uff0c\u6709\u6ca1\u6709\u53d1\u73b0\u5176\u5b9e\u8fd9\u5c31\u662f\u4e00\u4e2a\u9012\u5f52\u64cd\u4f5c\uff0c\u90a3\u6709\u6ca1\u6709\u754c\u9650\u5462\uff1f\n\n\u5f53\u7136\u6709\uff01\u6211\u4eec\u4e0a\u8ff0\u7684\u64cd\u4f5c\u5176\u5b9e\u5c31\u662f\u4e00\u76f4\u5c06 $m_1$ \u9664\u4ee5\u67d0\u4e2a\u6570\uff0c\u90a3\u4e48\u6700\u540e\u5b83\u4e00\u5b9a\u4f1a\u88ab\u9664\u5230 $1$ \u7684\uff01\u8fd9\u6837\u4e00\u6765\uff0c\u5f0f\u5b50\u5c31\u6210\u4e86\uff1a\n\n$1^{m_2}$ | \u2026\u2026\u2026\u2026\uff0c\u5bf9\u6ca1\u9519\uff0c$1^{m_2}$\u8fd8\u662f $1$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u95ee\u9898\u5c31\u88ab\u6211\u4eec\u5de7\u5999\u7684\u8f6c\u5316\u6210\u4e86\uff1a\n\n\u6c42\u6700\u5c0f\u7684 $n$\uff0c\u4f7f\u5f97\u53f3\u8fb9\u90a3\u4e00\u5806\u5f0f\u5b50\u662f\u6574\u6570\uff01\uff08\u662f\u4e0d\u662f\u5f88\u795e\u5947\u554a\uff01\uff09\n\n\n\n\u6211\u4eec\u6765\u4e00\u7ec4\u8be6\u7ec6\u7684\u6570\u5b57\u6765\u8ba4\u771f\u5f97\u4f53\u4f1a\u4e0a\u9762\u7684\u8fc7\u7a0b\uff1a\n\n$m_1=96$\uff0c$m_2=5$\n\n$S_1=36$\n\n\u90a3\u4e48\u6211\u4eec\u5148\u5217\u51fa\u4e00\u4e2a\u7c97\u7565\u7684\u5f0f\u5b50\uff1a\n\n${m_1}^{m_2} | S1^n$\uff08\u8fd9\u4e2an\u548c\u9898\u76ee\u4e2d\u7684 $n$ \u4e0d\u4e00\u6837\uff0c\u8fd9\u4e2a $n$ \u5c31\u662f\u6211\u4eec\u8981\u6c42\u7684\u6700\u77ed\u65f6\u95f4\uff09\uff0c\u4ee3\u5165\u6570\u636e\u5c31\u662f\uff1a$96^5 | 36 ^n$\n\n\u9996\u5148\u6c42\u51fa $gcd$\uff08$96$\uff0c$36$\uff09$=12$\uff0c\u7136\u540e\u5c06\u6700\u5927\u516c\u7ea6\u6570\u4ee3\u5165\u539f\u5f0f\uff1a\n\n$(12 * 8)^5 |( 12* 3)^n$ = $12^5$ \\* $8^5$|$ 12^n * 3^n$\n\n\u7136\u540e\u6211\u4eec\u5c06\u6700\u5927\u516c\u7ea6\u6570 $12$ \u90a3\u4e00\u9879\u9664\u5230\u53f3\u8fb9\uff1a\n\n$8^5$ | $12^{n-5} * 3^n$\uff0c\u8fd0\u7528\u5b9a\u7406\u53ef\u77e5 $3^n$ \u4e0d\u53ef\u80fd\u4ea7\u751f\u7b54\u6848\uff0c\u6211\u4eec\u53ef\u4ee5\u820d\u5f03\u5b83\uff1a\n\n$8^5$ | $12^{n-5}$\uff0c\u6211\u4eec\u7ee7\u7eed\u627e\u5230 $gcd$\uff08$8$ , $1$2\uff09$=4$\uff0c\u5e76\u4ee3\u5165\u539f\u5f0f\uff1a\n\n$(4*2)^5$ | $(4*3)^{n-5}$=$4^5 * 2^5| 4^{n-5}* 3^{n-5}$\n\n\u5c06\u6700\u5927\u516c\u7ea6\u6570 $4$ \u7684\u90a3\u4e00\u9879\u9664\u5230\u53f3\u8fb9\uff1a\n\n$2^5 | 4^{n-10}*  3^{n-5}$\uff0c\u8fd0\u7528\u5b9a\u7406\u53ef\u77e5$3^{n-5}$\u4e0d\u53ef\u80fd\u4ea7\u751f\u7b54\u6848\uff0c\u6211\u4eec\u53ef\u4ee5\u820d\u5f03\u5b83\uff1a\n\n$2^5 | 4^{n-10}$\uff0c\u6211\u4eec\u7ee7\u7eed\u627e\u5230 $gcd$\uff08$2$ , $4$\uff09$=2$\uff0c\u5e76\u4ee3\u5165\u539f\u5f0f\uff1a\n\n$(1 * 2)^5 | (2 * 2)^{n-10}$=$1^5 * 2^5$|$ 2^{n-10}*  2^{n-10}$\n\n\u4f60\u662f\u4e0d\u662f\u5df2\u7ecf\u77e5\u9053\u4e86\uff1f\u628a\u6700\u5927\u516c\u7ea6\u6570 $2$ \u90a3\u4e00\u9879\u9664\u8fc7\u53bb\uff1a\n\n$1^5 | 2^{n-15}* 2^{n-10}  $= $ 1 | 2^{2n-25}$\n\n\u54c7\uff01\u6211\u4eec\u5c06\u5de6\u8fb9\u7684 $m_1$ \u7ed9\u641e\u6210 $1$ \u4e86\u8036\uff0c\u63a5\u4e0b\u6765\u7684\u4efb\u52a1\u4e0d\u5c31\u662f\u6c42\u6700\u5c0f\u7684 $n$ \u4f7f\u5f97$2^{n-25}$\u662f\u6574\u6570\u4e86\u561b\uff1f\n\n$It  \\ is\\  so\\  easy$\uff01 \u5217\u51fa\u4e0d\u7b49\u5f0f $2^{2n-25}>=2^0$\uff0c\u5219$(2n-25)>=0$\uff0c\u89e3\u5f97\u6700\u5c0f\u7684\u6574\u6570 $n=13$\n\n$So$ \u6211\u4eec\u63a5\u4e0b\u6765\u603b\u7ed3\u4e00\u4e0b\u6211\u4eec\u6bcf\u4e00\u6b65\u7684\u64cd\u4f5c\uff0c\u65b9\u4fbf\u603b\u7ed3\u89c4\u5f8b\u7136\u540e\u5199\u4ee3\u7801\uff1a\n\n**$1.$\u6c42\u51fa$m_1$\u548c$S_i$\u7684\u6700\u5927\u516c\u7ea6\u6570 $gcd$\uff08$m_1$,$S_i$);**\n\n**$2.$\u82e5$gcd=1$\uff0c\u8bf4\u660e\u8fd9\u4e24\u4e2a\u6570\u4e92\u8d28\uff0c\u5219\u4e0d\u53ef\u80fd\u6709\u89e3\uff0c\u76f4\u63a5\u8df3\u51fa\uff1b**\n\n**$3.$\u5c06 $m_1$ \u548c $S_i$ \u7528\u8fd9\u4e2a\u6700\u5927\u516c\u7ea6\u6570\u8868\u793a\u51fa\u6765\uff0c\u7136\u540e\u5c06\u5de6\u4fa7\u7684\u6700\u5927\u516c\u7ea6\u6570\u9664\u5230\u53f3\u4fa7\u53bb**\uff1b\n\n**$4.$\u53ef\u4ee5\u820d\u5f03\u4e0e\u5de6\u4fa7\u4e92\u8d28\u7684\u90e8\u5206\uff0c\u5176\u5b9e\u4e5f\u5c31\u662f $S_i / gcd$ \u540e\u7684\u6570\uff1b**\n\n**$5.$\u4ece\u7b2c\u4e00\u6b65\u5f00\u59cb\u7ee7\u7eed\u91cd\u590d\u4e0a\u8ff0\u64cd\u4f5c\uff0c\u76f4\u5230$gcd=1$ \u6216 $m_1=1$**\uff1b\n\n\u4f60\u4f1a\u53d1\u73b0\u6211\u4eec\u4e0a\u8ff0\u64cd\u4f5c\u59cb\u7ec8\u548c $m_2$ \u6ca1\u5565\u4e8b\uff0c\u4f46\u662f\u5b83\u4e0d\u53ef\u80fd\u662f\u6765\u6253\u9171\u6cb9\u7684\u5427$QwQ~$\n\n\u5176\u5b9e\u5b83\u548c\u6700\u540e\u7684\u7b54\u6848 $n$ \u6709\u5173\uff0c\u6211\u4eec\u518d\u6765\u627e\u4e00\u4e0b $m_2$ \u7684\u89c4\u5f8b\uff1a\n\n\u63a5\u4e0b\u6765\u8fd9\u4e2a\u4f8b\u5b50\u6211\u4eec\u4e0d\u518d\u5c06$m_2$\u5e26\u8fdb\u53bb\u4e86\uff0c\u8fd9\u6837\u80fd\u66f4\u597d\u7684\u627e\u5230\u89c4\u5f8b\u54e6\uff1a\n\n$m_1=32$\uff0c $m_2$  \uff0c$S_1=56$ \n\n\u5217\u51fa\u5f0f\u5b50  $m_1^{m_2}$ | $S_1^n$\uff1a\n\n\u5c06$m_1$\uff0c$S_1$\u4ee3\u5165\u5f97\uff1a  $32^{m_2} | 56^n$\uff1b\n\n\u7b2c\u4e00\u6b21\u5faa\u73af\uff1a\n\n$1.$\u6c42\u51fa$gcd$\uff08$32$\uff0c$56$\uff09$=8$\uff1b\n\n$2.gcd$ \u4e0d\u4e3a $1$\uff0c\u8bf4\u660e\u76ee\u524d\u9636\u6bb5\u6709\u89e3\uff1b\n\n$3.$ \u539f\u5f0f = $(8 * 4)^{m_2} | (8 * 7)^n$     ------\u7528\u6700\u5927\u516c\u7ea6\u6570\u8868\u793a\n\n= $8^{m_2} * 4^{m_2}| 8^n*7^n$      ------\u62c6\u62ec\u53f7\n\n=$4^{m_2} | 8^{n-m_2} * 7^n$       ------\u5c06\u6700\u5927\u516c\u7ea6\u6570\u90a3\u4e00\u9879\u9664\u5230\u53f3\u4fa7\n\n4.\u820d\u5f03\u4e0e $4^{m_2}$\u4e92\u8d28\u7684\u90a3\u4e00\u9879\uff1a$7^n$\uff0c\u539f\u5f0f\u6210\u4e3a\uff1a$4^{m_2} | 8^{n-m_2}$\uff1b\n\n\u7b2c\u4e8c\u6b21\u5faa\u73af\uff1a\n\n$1.$\u6c42\u51fa$gcd$\uff08$4,8$\uff09$=4$\uff1b\n\n$2.gcd$ \u4e0d\u4e3a $1$\uff0c\u8bf4\u660e\u76ee\u524d\u9636\u6bb5\u6709\u89e3\uff1b\n\n$3.$ \u539f\u5f0f = $(4 * 1)^{m_2} | (4 * 2)^{n-m_2}$                            ------\u7528\u6700\u5927\u516c\u7ea6\u6570\u8868\u793a\n\n= $4^{m_2} * 1^{m_2}| 4^{n-m_2} * 2^{n-m_2}$                 ------\u62c6\u62ec\u53f7\n\n=$1^{m_2} | 4^{n-m_2-m_2} * 2^{n-m_2}$                              ------\u5c06\u6700\u5927\u516c\u7ea6\u6570\u90a3\u4e00\u9879\u9664\u5230\u53f3\u4fa7\n\n=$1 | 4^{n-2 * m_2}* 2^{n-m_2}$\n\n$4.$ \u5de6\u4fa7\u6211\u4eec\u5df2\u7ecf\u9664\u5230 $1$ \u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8df3\u51fa\uff0c\u5206\u6790\u7b54\u6848\u4ea7\u751f\uff1b\n\n\u4e0d\u77e5\u9053\u5404\u4f4d\u5728\u521a\u521a\u7684\u4f8b\u5b50\u4e2d\u6709\u6ca1\u6709\u53d1\u73b0\u6709\u5173 $m_2$ \u7684\u89c4\u5f8b\uff0c\u6765\u548c\u6211\u53d1\u73b0\u7684\u89c4\u5f8b\u5bf9\u6bd4\u4e00\u4e0b\u54ea\u4e2a\u66f4\u597d\uff1a\n\n**$1.$ \u6211\u4eec\u5728\u7b2c $3$ \u6b65\u64cd\u4f5c\u7ed3\u675f\u4ee5\u540e\uff08\u5c31\u662f\u5c06\u6700\u5927\u516c\u7ea6\u6570\u90a3\u4e00\u9879\u9664\u8fc7\u53bb\u540e\uff09\uff0c\u53f3\u4fa7\u6700\u5927\u516c\u7ea6\u6570\u7684\u90a3\u4e00\u9879\u7684\u6307\u6570\u90fd\u4f1a\u51cf\u53bb $m_2$ \u662f\u5427\uff0c\u5982\u679c\u6211\u4eec\u5355\u72ec\u62ff\u51fa\u6765\u6bcf\u4e00\u4e2a\u5faa\u73af\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff1a\u53f3\u4fa7\u6700\u5927\u516c\u7ea6\u6570\u90a3\u4e00\u9879\u7684\u6307\u6570\u5b83\u51cf\u53bb\u7684 $m_2$ \u7684\u4e2a\u6570\u662f\u548c\u5f53\u524d\u8fd9\u662f\u7b2c\u51e0\u5927\u6b65\u662f\u76f8\u540c\u7684\uff08\u5176\u5b9e\u8fd9\u4e2a\u5f88\u597d\u7406\u89e3\uff0c\u6211\u4eec\u6bcf\u4e00\u4e2a\u5927\u6b65 $s$ \u7684\u6307\u6570\u53ea\u51cf\u53bb $1$ \u4e2a$m_2$\uff0c\u4f46\u662f\u5374\u975e\u5e38\u91cd\u8981\uff09\uff1b**\n\n\u6211\u4eec\u53ef\u4ee5\u6765\u8bb0\u5f55\u8fdb\u5165\u4e86\u51e0\u6b21\u5faa\u73af\u6765\u5224\u65ad\u53f3\u4fa7\u6700\u5927\u516c\u7ea6\u6570 $s$ \u90a3\u4e00\u9879\u7684\u6307\u6570\u51cf\u4e86\u51e0\u4e2a$m_2$\uff0c\u5728\u4ee3\u7801\u4e2d\u7528 $t$ \u6765\u8bb0\u5f55\uff1b\n\n```cpp\n        while(m!=1)\n        {\n            gcdd=gcd(m,s);                //\u7b2c\u4e00\u5c0f\u6b65\uff0c\u6c42\u6700\u5927\u516c\u7ea6\u6570 \n            if(gcdd==1) {flag=0;break;}   //\u5982\u679c\u4e92\u8d28\uff0c\u90a3\u4e48\u80af\u5b9a\u65e0\u89e3\uff0c\u76f4\u63a5\u8df3\u51fa \n            m/=gcdd;                      //\u5de6\u8fb9\u5269\u4e0b\u4e86m/gcdd \n            q=s/gcdd;                     //q\u5c31\u662fs\u9664\u4ee5gcdd\u540e\u5269\u4e0b\u7684\u6570 \n            s=gcdd;                       //\u53f3\u8fb9\u5269\u4e0b\u4e86gcdd         \n            t++;                          //\u6bcf\u8fdb\u5165\u4e00\u6b21\u5faa\u73af\uff0c\u5c31\u8981\u591a\u51cf1\u4e2am2   \n        } \n```\n\n\n\n\n**$2.$\u540c\u65f6\u5b83\u540e\u9762\u7684 $q$ \u90a3\u4e00\u9879\u7684\u6307\u6570\u51cf\u53bb\u7684 $m_2$ \u7684\u4e2a\u6570\u662f $t-1$\uff1b**\n\n**$3.$\u6211\u4eec\u53ef\u4ee5\u6839\u636e $m_2$ \u6765\u6c42\u89e3\u6700\u540e\u7684\u7b54\u6848\uff1b**\n\n**$4.$\u4e00\u4e2a\u4e0d\u662f\u5173\u4e8e $m_2$ \u7684\u89c4\u5f8b\uff08\u5b9e\u5728\u4e0d\u77e5\u9053\u8981\u5f80\u54ea\u653e\u4f46\u662f\u6ca1\u6709\u8fd9\u4e2a\u603b\u7ed3\u4ee3\u7801\u53ef\u80fd\u770b\u4e0d\u61c2\uff09\uff1a**\n\n\u7ed3\u5408\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u518d\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff0c\u6211\u4eec\u5c06\u5de6\u8fb9\u7684\u6700\u5927\u516c\u7ea6\u6570\u9664\u5230\u53f3\u8fb9\u540e\uff0c\u5de6\u8fb9\u53ea\u5269\u4e0b\u4e86$m_1 / gcd$\uff0c\u800c\u53f3\u8fb9\u5462\uff1f\u7531\u4e8e$S_i / gcd$ \u540e\u4e0e $m_1 / gcd$ \u4e92\u8d28\uff0c\u5c31\u88ab\u629b\u5f03\u4e86$QwQ~$\uff0c\u6240\u4ee5\u53f3\u8fb9\u53ea\u5269\u4e0b\u4e86\u6700\u5927\u516c\u7ea6\u6570 $gcd$\uff0c$So$ \u8fdb\u884c\u4e0b\u4e00\u5927\u6b65\u64cd\u4f5c\u7684\u5c31\u662f $m_1 / gcd | gcd$\uff08\u8fd9\u91cc\u7701\u7565\u4e86\u6307\u6570\u65b9\u4fbf\u7406\u89e3\uff09 \uff0c\u4e5f\u5c31\u662f\u8bf4\uff1a\u6211\u4eec\u4ee4 $m_1=m_1 / gcd$\uff0c$S_i = gcd$ \u5c31\u53ef\u4ee5\u8fdb\u884c\u4e0b\u4e00\u5927\u6b65\u64cd\u4f5c\u4e86\uff1b\n\n\u8bb2\u5b8c\u4e86 $m_2$ \u7684\u89c4\u5f8b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u4e0a\u9762\u7684\u6b65\u9aa4\u8f6c\u5316\u6210\u4ee3\u7801\u5566\uff08\u5176\u5b9e\u5f88\u77ed\uff09\uff1a\n```cpp\n        m=m1;                             //\u62f7\u8d1d\u4e00\u4efdm1\u7684\u503c\n        s=S[i];                           //\u62f7\u8d1d\u4e00\u4efdS[i]\u7684\u503c \n        flag=1;                           //\u5224\u65ad\u662f\u5426\u6709\u89e3 \n        t=0;                              //\u8bb0\u5f55\u6700\u5927\u516c\u7ea6\u6570\u8981\u51cf\u51e0\u4e2am2 \n        while(m!=1)\n        {\n            gcdd=gcd(m,s);                //\u7b2c\u4e00\u5c0f\u6b65\uff0c\u6c42\u6700\u5927\u516c\u7ea6\u6570 \n            if(gcdd==1) {flag=0;break;}   //\u5982\u679c\u4e92\u8d28\uff0c\u90a3\u4e48\u80af\u5b9a\u65e0\u89e3\uff0c\u76f4\u63a5\u8df3\u51fa \n            m/=gcdd;                      //\u5de6\u8fb9\u5269\u4e0b\u4e86m/gcdd \n            q=s/gcdd;                     //q\u5c31\u662fs\u9664\u4ee5gcdd\u540e\u5269\u4e0b\u7684\u6570 \n            s=gcdd;                       //\u53f3\u8fb9\u5269\u4e0b\u4e86gcdd         \n            t++;                          //\u6bcf\u8fdb\u5165\u4e00\u6b21\u5faa\u73af\uff0c\u5c31\u8981\u591a\u51cf1\u4e2am2   \n        }\n```\n\u4e0b\u9762\u5c31\u8981\u52a8\u52a8\u8111\u7b4b\u4ed4\u7ec6\u601d\u8003\u5c0f\u7ec6\u8282\u4e86\uff1a\n\n\u5f53\u7136\u8fd9\u4e2a\u5c06 $m_1$ \u9664\u5230 $1$ \u7684\u8fc7\u7a0b\u662f\u6ca1\u6709\u9505\u7684\u5427\uff0c\u90a3\u4e48\u54ea\u91cc\u8fd8\u9700\u8981\u6ce8\u610f\u5462\uff1f\n\n\u5c31\u662f\u6700\u540e\u7684\u6c42 $n$ \u7684\u8fc7\u7a0b\u4e86\uff01\u5176\u5b9e\u4e0d\u77e5\u9053\u5c0f\u4f19\u4f34\u4eec\u6709\u6ca1\u6709\u770b\u51fa\u6765\u6211\u524d\u9762\u7684\u4f8b\u5b50\u4e2d\u6c42 $n$ \u603b\u662f\u5f88\u542b\u7cca\uff08\u56e0\u4e3a\u8fd8\u6ca1\u8bb2\u5230\u8fd9\u91cc\u9e2d\uff09\uff0c\u6240\u4ee5\u6211\u5c31\u8981\u5e2e\u5e2e\u5e26\u7740\u7591\u60d1\u770b\u4e0b\u6765\u7684\u5c0f\u4f19\u4f34\u4eec\u4ed4\u7ec6\u5f97\u8003\u8651\u4e00\u4e0b\u4e0b\uff1a\n\n\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u5206\u89e3\u5230\u4e86\u6700\u540e\u4e00\u6b65\uff0c\u4e5f\u5c31\u662f$m_1$\u5df2\u7ecf\u88ab\u6211\u4eec\u9664\u52301\u4e86\uff0c\u90a3\u4e48\u53f3\u8fb9\u7684\u5f0f\u5b50\u6211\u4eec\u5c31\u53ef\u4ee5\u5199\u6210\uff1a\n\n$s^{n - t * m_2} * q^{ n - (t-1) * m_2 }$    ------\uff08\u8fd9\u91cc$s$\uff0c$q$\uff0c$t$ \u7684\u542b\u4e49\u548c\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684\u542b\u4e49\u76f8\u540c\uff0c\u8fd8\u6709\u8fd9\u91cc\u8868\u793a\u6307\u6570\u7528\u4e86\u4e0a\u9762\u603b\u7ed3\u7684\u516c\u5f0f\uff0c\u4e0d\u61c2\u5f97\u5c0f\u4f19\u4f34\u53ef\u4ee5\u518d\u56de\u5230\u4e0a\u9762\u770b\u770b\uff09\n\n\u90a3\u4e48\u65e0\u975e\u6709\u8fd9 $3$ \u79cd\u60c5\u51b5\uff1a\n\n**1. $s$ \u4e0e $q$ \u4e92\u8d28\uff0c\u4e5f\u5c31\u662f $gcd$\uff08$s$\uff0c$q$\uff09$=1$\uff0c\u8fd9\u65f6\u5019$n = t * m_2$\uff1b**\n\n$Why$\uff1f\u56e0\u4e3a\u8fd9\u65f6\u5019\u6211\u4eec\u8981\u4fdd\u8bc1\u53f3\u8fb9\u90a3\u4e00\u5768\u5f0f\u5b50\u6700\u540e\u7b97\u51fa\u6765\u662f\u4e2a\u6574\u6570\uff0c\u800c\u4e14\u8fd9\u4e24\u4e2a\u6570\u8fd8\u662f\u4e92\u8d28\u7684\uff0c\u6240\u4ee5\u82e5\u6709\u4e00\u4e2a\u662f\u5206\u6570\u7684\u8bdd\uff0c\u53e6\u5916\u4e00\u4e2a\u6570\u65e0\u8bba\u591a\u5c11\u6b21\u65b9\u90fd\u4e0d\u4f1a\u628a\u5b83\u4e58\u6210\u6574\u6570\u7684$qwq$\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u4fdd\u8bc1\u8fd9\u4e24\u4e2a\u6570 $s$ \u548c $q$ \u7684\u6307\u6570\u90fd\u8981$>=0$\uff0c\u56e0\u4e3a\u6211\u4eec\u8003\u8651\u5230 $s$ \u7684\u6307\u6570\u6bd4$q$ \u7684\u6307\u6570\u591a\u51cf\u4e86\u4e2a $m_2$\uff0c\u6240\u4ee5\u6211\u4eec\u628a $s$ \u7684\u6307\u6570\u641e\u6210$0$ \u7684\u8bdd\uff0c$q$ \u7684\u6307\u6570\u4e00\u5b9a $>0$\uff08\u663e\u7136\u8fd9\u65f6\u5019\u6307\u6570\u4e3a $m_2$\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8003\u8651\u5c06 $s$ \u7684\u6307\u6570\u5f04\u6210 $0$ \u5c31\u597d\u5566\uff0c\u663e\u7136\u8fd9\u65f6\u5019 $n=t * m_2$\uff1b\n\n**$2.gcd_1$ \u662f $q$ \u7684\u56e0\u6570\uff0c\u4e5f\u5c31\u662f $gcd$\uff08$s$\uff0c$q$\uff09$=gcd_1$\uff0c**\n\n\u8fd9\u65f6\u5019 $n = ceil [(t+(t-1) * tot ] * m_2 / (tot+1))$\uff0c$tot$ \u662f $q$\u5185\u542b $s$ \u7684\u4e2a\u6570\uff1b\n\n\u4e3a\u4ec0\u4e48\u8fd8\u8981\u628a\u8fd9\u79cd\u60c5\u51b5\u5355\u72ec\u8003\u8651\u5462\uff1f\u5982\u679c\u6211\u4eec\u50cf\u7b2c\u4e00\u79cd\u60c5\u51b5\u53ea\u8003\u8651$s$\u7684\u6307\u6570\u7684\u8bdd\uff0c\u76f4\u63a5 $n=t * m_2$ \uff1f$NO$\uff01\u56e0\u4e3a\u65e2\u7136 $q$ \u662f $s$ \u7684\u500d\u6570\uff0c\u90a3\u4e48\u5fc5\u7136\u6211\u4eec\u5c06 $q$ \u8fdb\u884c\u5206\u89e3\u8d28\u56e0\u6570\u7684\u8bdd\uff0c\u91cc\u9762\u4f1a\u6709 $s$\uff08\u4f46\u662f\u6307\u6570\u4e0d\u540c\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u5c06s\u8fdb\u884c\u5408\u5e76\u7684\u8bdd\uff0c\u6307\u6570\u4e0d\u518d\u662f $n-t *   m_2$\u4e86\uff0c\u90a3\u662f\u591a\u5c11\u5462\uff1f------\u53d6\u51b3\u4e8e $q$ \u91cc\u9762\u542b\u6709\u591a\u5c11\u4e2a $s$\uff01   \n\n\u8fd9\u662f\u5c06 $q$ \u91cc\u9762\u6240\u6709 $s$ \u5168\u90e8\u5206\u79bb\u51fa\u6765\u7684\u4ee3\u7801\uff1a\n```\n                while(q%s==0)      //\u5982\u679cq\u91cc\u9762\u542b\u6709s\uff0c\u5206\u79bb\u51fa\u6765 \n                {\n                    tot++;         //tot\u8868\u793a\u80fd\u5206\u79bb\u51fa\u6765\u591a\u5c11\u4e2as\uff0c\u7b2c\u4e00\u79cd\u60c5\u51b5\u5c31\u662ftot=0\u7684\u60c5\u51b5 \n                    q/=s;           \n                }\n```\n\n\u4e3a\u4e86\u533a\u5206\uff0c\u6211\u4eec\u5c06\u5206\u79bb\u51fa\u6765\u7684 $s$ \u53eb\u505a _ $s$\uff0c\u5f88\u663e\u7136 $s$ \u548c _ $s$ \u7684\u6307\u6570\u4e0d\u540c\u662f\u5427\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651 _ $s$ \u7684\u6307\u6570\u662f\u591a\u5c11?\n\n\u7531\u4e8e\u5b83\u662f\u4ece $q$ \u4e2d\u5206\u79bb\u51fa\u6765\u7684\uff0c\u90a3\u4e48\u663e\u7136 _ $s$ \u548c $q$ \u7684\u6307\u6570\u662f\u76f8\u540c\u7684\uff0c\u770b\u5230\u4e0a\u9762 $q$ \u7684\u6307\u6570\u662f$[  n - (t-1) * m_2 ]$\uff0c\u90a3\u4e48 _     $s$ \u7684\u6307\u6570\u4e5f\u662f$[ n-(t-1) * m_2 ]$\uff1b\n\n\u90a3\u4e48\u6211\u4eec\u662f\u4e0d\u662f\u53ef\u4ee5\u5c06 $s$ \u548c _ $s$ \u5408\u5e76\u8d77\u6765\u9e2d\uff1f\uff08\u5e95\u6570\u76f8\u540c\u4e0d\u5c31\u53ef\u4ee5\u5408\u5e76\u561b\uff1f\uff09\n\n\u5408\u5e76\u540e\u7684 $s$ \u7684\u6307\u6570\u5c31\u662f $[ n-(t * m_2) ]+$ ${ tot * [n-(t-1) * m_2] }$   \uff0c\u7b80\u5355\u4e00\u8bb0\u5c31\u662f\uff1a$1$ \u4e2a $s$ \u7684\u6307\u6570 $+tot$ \u4e2a _$s$ \u7684\u6307\u6570\uff1b\n\n\u518d\u60f3\u60f3\u54c8~\u6211\u4eec\u5c06 $q$ \u6240\u6709\u7684 $s$ \u90fd\u5206\u89e3\u51fa\u6765\u4e86\uff0c\u90a3\u4e48\u5269\u4e0b\u7684\u4e1c\u4e1c\u5c31\u548c $s$ \u4e92\u8d28\u4e86~ \u6240\u6709\u8fd9\u4e0d\u5c31\u53c8\u53d8\u6210\u4e86\u7b2c\u4e00\u79cd\u60c5\u51b5\u4e86\uff1f\n\n\u8fd8\u662f\u8001\u6837\u5b50\uff0c\u6211\u4eec\u53ea\u8981\u4f7f\u5f97 $s$ \u7684\u6307\u6570\u4e3a $0$ \u5c31\u662f\u89e3\u4e86\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8981\u89e3\u8fd9\u4e2a\u65b9\u7a0b\uff1a$[ n-(t * m_2) ]+{ tot * [n-(t-1) * m_2] }  = 0$\n\n\u9996\u5148\u62c6\u62ec\u53f7\uff1a $n-t * m_2 + { tot * [ n-(t * m_2-m_2)]  }$\n\n$=n- t * m_2 + { tot * ( n - t * m_2 + m_2) }$\n\n$=n - t * m_2 + tot *  n - t * m_2 * tot + m_2* tot$\n\n$=0$\n\n\u6211\u4eec\u5c06 $n$ \u653e\u5728\u5de6\u8fb9\uff0c$m_2$ \u653e\u5728\u53f3\u8fb9\uff0c\u4e8e\u662f\u6211\u4eec\u5f97\u5230\uff1a\n\n$n + tot * n = t * m_2 +t * m_2 * tot - m_2 * tot$\n\n\u63d0\u53d6\u516c\u56e0\u5f0f\uff1a  $(1+tot)* n =m_2 * (t + t * tot -tot)$\n\n$(1+tot) * n = m_2 * [ t + tot * (t -1) ]$\n\n\u6700\u540e\u6211\u4eec\u5c06 $n$ \u7684\u7cfb\u6570\u5316 $1$\uff0c\u5c31\u5f97\u5230\u4e86\u7b54\u6848\uff1a \n\n$n = m_2 * [ t + tot * (t -1) ] /(1+tot)$     \n\n\n\n$So$ \u8fd9\u79cd\u60c5\u51b5\u7684 $n$ \u6211\u4eec\u4e5f\u641e\u5b9a\u4e86\uff08\u54ce\uff0c\u6709\u6ca1\u6709\u53d1\u73b0\u5176\u5b9e\u7b2c\u4e00\u79cd\u60c5\u51b5\u5c31\u662f $tot=0$ \u7684\u60c5\u51b5\u8036\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u5c06\u7b2c\u4e00\uff0c\u4e8c\u4e2d\u60c5\u51b5\u5408\u8d77\u6765\u5199\uff09\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n                while(q%s==0)      //\u5982\u679cq\u91cc\u9762\u542b\u6709s\uff0c\u5206\u79bb\u51fa\u6765 \n                {\n                    tot++;         //tot\u8868\u793a\u80fd\u5206\u79bb\u51fa\u6765\u591a\u5c11\u4e2as\uff0c\u7b2c\u4e00\u79cd\u60c5\u51b5\u5c31\u662ftot=0\u7684\u60c5\u51b5 \n                    q/=s;           \n                }\n                if((t*m2+tot*(t-1)*m2)%(tot+1)==0)    //\u6211\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48ceil\u51fa\u6765\u7684\u7b54\u6848\u4e0d\u5bf9\uff0c\u53ea\u80fd\u81ea\u5df1\u6a21\u62df\u5411\u4e0a\u53d6\u6574\u4e86 \n                   ans=(t*m2+tot*(t-1)*m2)/(tot+1);   //\u6ca1\u4f59\u6570\u8bf4\u660e\u6b63\u597d\u6574\u9664 \n                else ans=(t*m2+tot*(t-1)*m2)/(tot+1)+1;//\u5982\u679c\u6709\u4f59\u6570\u5c31\u8981+1(\u8fd9\u4e2a1\u5c31\u662f\u4f59\u6570\u9664\u6210\u5c0f\u6570\u540e\u518d\u5411\u4e0a\u53d6\u6574\u540e\u5f97\u5230\u7684) \n                minx=min(minx,ans);        //\u9898\u76ee\u8981\u6c42\u6574\u4f53\u6700\u5c0f\u65f6\u95f4 \n```\n**$3.gcd$\uff08$s$\uff0c$q$\uff09$\u22601$\uff0c$gcd_1$ \uff1b**\n\n\u8fd9\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u5c31\u662f\u5f53 $s$ \u548c $q$ \u65e2\u4e0d\u4e92\u8d28\uff0c\u4e5f\u4e0d\u662f\u500d\u6570\u5173\u7cfb\u7684\u65f6\u5019\uff1b \n\n\u8fd9\u79cd\u60c5\u51b5\u6709\u4ec0\u4e48\u9b54\u529b\u5462\uff1f\u4f60\u770b\u5982\u679c\u6211\u4eec\u7528\u7b2c\u4e8c\u79cd\u60c5\u51b5\u7684\u516c\u5f0f\u7684\u8bdd\uff0c\u663e\u7136 $tot=0$\uff08$q$ \u4e0d\u662f $s$ \u7684\u500d\u6570\uff09\uff0c\u4f46\u662f\u6211\u4eec\u6ce8\u610f\u5230 $gcd$\uff08$s$\uff0c$q$\uff09$\u2260 1$\uff0c\u90a3\u4e48\u8bf4\u660e\u5b83\u4eec\u8fd8\u6709\u516c\u5171\u90e8\u5206\uff01\n\n\u663e\u7136\u8fd9\u4e2a\u516c\u5171\u90e8\u5206\u5c31\u662f $gcd$\uff08$s$\uff0c$q$\uff09\uff0c\u6682\u4e14\u8bb0\u4e3a $gc=gcd$\uff08$s$\uff0c$q$\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u50cf\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e2d\u7684 $q$ \u5206\u79bb $s$ \u4e00\u6837\uff0c\u5206\u522b\u5c06 $s$ \u548c $q$ \u4e2d\u7684 $gc$ \u5206\u79bb\u51fa\u6765\uff08\u9003 \uff1b\n\n\u5206\u79bb\u7684\u8fc7\u7a0b\u548c\u4e0a\u9762\u51e0\u4e4e\u4e00\u6837\uff1a\n```\n                while(q%gc==0)      //\u5982\u679cq\u4e2d\u542b\u6709gc\u5c31\u5206\u79bb \n                {\n                    totq++;         //q\u4e2d\u542b\u6709gc\u7684\u4e2a\u6570 \n                    q/=gc;\n                }\n                while(s%gc==0)      //\u5982\u679cs\u4e2d\u542b\u6709gc\u5c31\u5206\u79bb \n                {\n                    tots++;         //s\u4e2d\u542b\u6709gc\u7684\u4e2a\u6570 \n                    s/=gc;\n                }\n```\n$So$ \u6211\u4eec\u5c31\u4ece $s$ \u4e2d\u5206\u79bb\u51fa\u4e86 $tot_s$ \u4e2a $gc$\uff0c\u4ece $q$ \u4e2d\u5206\u79bb\u51fa\u4e86 $tot_q$ \u4e2a $gc$\uff0c\u5f53\u7136\u8fd9\u4e24\u90e8\u5206 $gc$ \u7684\u6307\u6570\u662f\u4e0d\u540c\u7684\uff1b\n\n\u5176\u4e2d $tot_s$ \u4e2a $gc$ \u7684\u6307\u6570\u662f\u548c $s$ \u7684\u6307\u6570\u76f8\u540c\uff0c\u5747\u4e3a $n - t * m_2$\uff1b$tot_q$ \u4e2a $gc$ \u7684\u6307\u6570\u662f\u548c $q$ \u7684\u6307\u6570\u76f8\u540c\uff0c\u5747\u4e3a $n - (t -1)* m_2$ \uff1b\n\n\u7136\u540e\u6211\u4eec\u5c06\u6240\u6709 $gc$ \u7684\u6307\u6570\u5408\u5e76\uff08\u5c31\u662f $tot_s$ \u4e2a $gc$ \u548c $tot_q$ \u4e2a $gc$ \u7684\u6307\u6570\u548c\uff09\uff1a\n\n$tot_s * (n - t * m_2)+tot_q * [ n -(t-1)* m_2 ]$  \n\n$=tot_s * n - tot_s * t * m_2 + tot_q * n - tot_q * m_2 * (t-1)$\n\n\u6211\u4eec\u5df2\u7ecf\u628a $s$ \u548c $q$ \u7684\u516c\u5171\u90e8\u5206 $gc$ \u5168\u90e8\u90fd\u5206\u79bb\u51fa\u6765\u4e86\uff0c\u90a3\u4e48\u5269\u4e0b\u7684 $s / gc$ \u548c $q / gc$ \u4e00\u5b9a\u90fd\u4e0e $gc$ \u4e92\u8d28\uff0c\u8fd9\u5176\u5b9e\u53c8\u8f6c\u5316\u6210\u4e86\u7b2c\u4e00\u79cd\u60c5\u51b5\uff1b\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5c06 $gc$ \u7684\u6307\u6570\u641e\u6210 $0$ \u5c31\u597d\u4e86\uff1a\n\n\u4ee4 $gc$ \u7684\u6307\u6570\u4e3a $0$\uff1a\n\n$tot_s * n - tot_s * t * m_2 + tot_q * n - tot_q * m_2 * (t-1)=0$    \n\n$tot_s * n + tot_q * n = tot_s * t * m_2 + tot_q * m_2 * (t-1)$  \n-----\u5c06\u6709\u5173 $m_2$ \u7684\u9879\u79fb\u5230\u53f3\u8fb9\n\n$(tot_s + tot_q)* n= m_2 * [tot_s * t + tot_q * (t-1)]$\n\n------\u63d0\u53d6\u516c\u56e0\u5f0f\n\n$n =  m_2 * [tot_s * t + tot_q * (t-1)]/ (tot_s + tot_q)$\n\n------$n$ \u7cfb\u6570\u5316 $1$\n\n\u6240\u4ee5\u8fd9\u79cd\u60c5\u51b5\u7684\u516c\u5f0f\u6211\u4eec\u4e5f\u63a8\u51fa\u6765\u4e86\uff0c\u6240\u4ee5\u8fd9\u4e2a\u9898\u6211\u4eec\u5c31\u505a\u5b8c\u4e86$QwQ~$ \n```cpp\n                if((t*m2*tots+totq*(t-1)*m2)%(tots+totq)==0)    //\u8fd9\u79cd\u60c5\u51b5\u7684\u516c\u5f0f\uff0c\u6ce8\u610f\u5411\u4e0a\u53d6\u6574 \n\t\t\t\t   ans=(t*m2*tots+totq*(t-1)*m2)/(tots+totq);   \n                else ans=(t*m2*tots+totq*(t-1)*m2)/(tots+totq)+1;\n```\n\u4e0b\u9762\u5c31\u662f\u5b8c\u6574\u4ee3\u7801\u5566\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nint read()                            //\u8bfb\u5165\u4f18\u5316 \n{\n    char ch=getchar();\n    int a=0,x=1;\n    while(ch<'0'||ch>'9')\n    {\n        if(ch=='-') x=-x;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9')\n    {\n        a=(a<<3)+(a<<1)+(ch-'0');\n        ch=getchar();\n    }\n    return a*x;\n}\nint n,m1,m2,minx,gcdd,m,s,q,t,flag,tot,ans,tots,totq;        //t\u4ee3\u8868q\u80fd\u5206\u89e3\u6210\u591a\u5c11\u4e2as         \nint S[10001];\nint gcd(int a,int b)                  //\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u6c42\u6700\u5927\u516c\u7ea6\u6570 \n{\n    if(b==0) return a;\n    else return gcd(b,a%b);\n}\nint main()\n{\n    n=read();\n    m1=read();\n    m2=read();\n    minx=1e9;\n    if(m1==1)                             //\u8fd9\u91cc\u4e00\u5b9a\u8981\u6ce8\u610f\u7279\u5224m1==1\u7684\u60c5\u51b5\uff0c\u4e0d\u7136\u4f1aTLE \n    {\n        cout<<0;                          //\u65e0\u9700\u7b49\u5f85\uff0c\u56e0\u4e3a\u4efb\u4f55\u6570\u90fd\u662f1\u7684\u500d\u6570 \n        return 0;\n    }\n    for(int i=1;i<=n;i++) S[i]=read();\n    for(int i=1;i<=n;i++)                 \n    {\n        tot=0;\n        m=m1;                             //\u62f7\u8d1d\u4e00\u4efdm1\u7684\u503c\n        s=S[i];                           //\u62f7\u8d1d\u4e00\u4efdS[i]\u7684\u503c \n        flag=1;                           //\u5224\u65ad\u662f\u5426\u6709\u89e3 \n        t=0;                              //\u8bb0\u5f55\u6700\u5927\u516c\u7ea6\u6570\u8981\u51cf\u51e0\u4e2am2 \n        while(m!=1)\n        {\n            gcdd=gcd(m,s);                //\u7b2c\u4e00\u5c0f\u6b65\uff0c\u6c42\u6700\u5927\u516c\u7ea6\u6570 \n            if(gcdd==1) {flag=0;break;}   //\u5982\u679c\u4e92\u8d28\uff0c\u90a3\u4e48\u80af\u5b9a\u65e0\u89e3\uff0c\u76f4\u63a5\u8df3\u51fa \n            m/=gcdd;                      //\u5de6\u8fb9\u5269\u4e0b\u4e86m/gcdd \n            q=s/gcdd;                     //q\u5c31\u662fs\u9664\u4ee5gcdd\u540e\u5269\u4e0b\u7684\u6570 \n            s=gcdd;                       //\u53f3\u8fb9\u5269\u4e0b\u4e86gcdd         \n            t++;                          //\u6bcf\u8fdb\u5165\u4e00\u6b21\u5faa\u73af\uff0c\u5c31\u8981\u591a\u51cf1\u4e2am2   \n        } \n        if(flag)\n        {\n            int gc=gcd(q,s);        //\u5148\u6c42\u51fagcd(q,s) \n            if(gc!=1&&gc!=s)        //\u5355\u72ec\u8ba8\u8bba\u7b2c\u4e09\u79cd\u60c5\u51b5 \n            {\n                totq=0;tots=0;      //\u6ce8\u610f\u6e05\u7a7a \n                while(q%gc==0)      //\u5982\u679cq\u4e2d\u542b\u6709gc\u5c31\u5206\u79bb \n                {\n                    totq++;         //q\u4e2d\u542b\u6709gc\u7684\u4e2a\u6570 \n                    q/=gc;\n                }\n                while(s%gc==0)      //\u5982\u679cs\u4e2d\u542b\u6709gc\u5c31\u5206\u79bb \n                {\n                    tots++;         //s\u4e2d\u542b\u6709gc\u7684\u4e2a\u6570 \n                    s/=gc;\n                }\n                if((t*m2*tots+totq*(t-1)*m2)%(tots+totq)==0)    //\u8fd9\u79cd\u60c5\u51b5\u7684\u516c\u5f0f\uff0c\u6ce8\u610f\u5411\u4e0a\u53d6\u6574 \n\t\t\t\t   ans=(t*m2*tots+totq*(t-1)*m2)/(tots+totq);   \n                else ans=(t*m2*tots+totq*(t-1)*m2)/(tots+totq)+1;\n                minx=min(minx,ans);\n            }\n            else                   //\u7b2c\u4e00\uff0c\u4e8c\u79cd\u60c5\u51b5 \n            {\n                while(q%s==0)      //\u5982\u679cq\u91cc\u9762\u542b\u6709s\uff0c\u5206\u79bb\u51fa\u6765 \n                {\n                    tot++;         //tot\u8868\u793a\u80fd\u5206\u79bb\u51fa\u6765\u591a\u5c11\u4e2as\uff0c\u7b2c\u4e00\u79cd\u60c5\u51b5\u5c31\u662ftot=0\u7684\u60c5\u51b5 \n                    q/=s;           \n                }\n                if((t*m2+tot*(t-1)*m2)%(tot+1)==0)    //\u6211\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48ceil\u51fa\u6765\u7684\u7b54\u6848\u4e0d\u5bf9\uff0c\u53ea\u80fd\u81ea\u5df1\u6a21\u62df\u5411\u4e0a\u53d6\u6574\u4e86 \n                   ans=(t*m2+tot*(t-1)*m2)/(tot+1);   //\u6ca1\u4f59\u6570\u8bf4\u660e\u6b63\u597d\u6574\u9664 \n                else ans=(t*m2+tot*(t-1)*m2)/(tot+1)+1;//\u5982\u679c\u6709\u4f59\u6570\u5c31\u8981+1(\u8fd9\u4e2a1\u5c31\u662f\u4f59\u6570\u9664\u6210\u5c0f\u6570\u540e\u518d\u5411\u4e0a\u53d6\u6574\u540e\u5f97\u5230\u7684) \n                minx=min(minx,ans);        //\u9898\u76ee\u8981\u6c42\u6574\u4f53\u6700\u5c0f\u65f6\u95f4 \n            }\n        }\n    }\n    if(minx==1e9) cout<<-1;        //\u5982\u679cminx\u6ca1\u88ab\u66f4\u65b0\uff0c\u8bf4\u660e\u65e0\u89e3 \n    else cout<<minx;\n    return 0;\n} \n\n```\n\u8fd9\u79cd\u601d\u8def\u6211\u4e5f\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u6b63\u89e3 $QwQ$, \u5982\u679c\u6709\u8bef\u8bf7\u6307\u51fa\uff0c\u6211\u4f1a\u8ba4\u771f\u5b8c\u5584\u7684~\n\n\u89c9\u5f97\u8fd9\u4e2a\u601d\u8def\u6bd4\u8f83\u4e0d\u9519\u7684\u5c31\u70b9\u4e2a\u63a8\u8350\u5457~~~\n\n\u611f\u8c22\u4f60\u7684\u89c2\u770b$QwQ~$ \n\n\n",
        "postTime": 1560995076,
        "uid": 177070,
        "name": "\u6697\u3056\u4e4b\u6b87",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1069 \u3010\u7ec6\u80de\u5206\u88c2\u3011"
    },
    {
        "content": "\u3010\u505a\u9898\u80cc\u666f\u3011\u6570\u5b66\u9898\uff0c\u79d2\u6740\uff01\n\n\u3010\u7b97\u6cd5\u540d\u79f0\u3011\u8d28\u56e0\u6570\u5206\u89e3\n\n\u3010\u7b97\u6cd5\u5206\u6790\u3011\u9898\u76ee\u5373\u8981\u6c42\u6700\u5c0f\u7684\u6b63\u6574\u6570k\u4f7f\u5f97\u6709\u4e00\u4e2ai\uff081~n\uff09\uff0c\u6ee1\u8db3si^k|m1^m2\u3002\n\n\u4ee5\u6837\u4f8b\u4e8c\u4e3a\u4f8b\uff0c24^1=24=2^3\\*3\n\n\u5bf9\u4e8e\u7ec6\u80de\u4e00\uff0c30=2\\*3\\*5\n\n\u8981\u4f7f\u6bcf\u4e00\u4e2a\u8d28\u56e0\u6570\u5747\u6ee1\u8db3\u8981\u6c42\uff0c\n\n\u6700\u5c0f\u503cnow\u7684\u8ba1\u7b97\u8fc7\u7a0b\u4e3a\uff1a\n\nstep 1\uff1a\u5bf9\u4e8e\u8d28\u56e0\u5b502\uff0cnow=3\n\nstep 2\uff1a\u5bf9\u4e8e\u8d28\u56e0\u5b503\uff0cnow=3\n\n\u5bf9\u4e8e\u7ec6\u80de\u4e8c\uff0c12=2^2\\*3\n\n\u8981\u4f7f\u6bcf\u4e00\u4e2a\u8d28\u56e0\u6570\u5747\u6ee1\u8db3\u8981\u6c42\uff0c\n\n\u6700\u5c0f\u503cnow\u7684\u8ba1\u7b97\u8fc7\u7a0b\u4e3a\uff1a\n\nstep 1\uff1a\u5bf9\u4e8e\u8d28\u56e0\u5b502\uff0cnow=2\n\nstep 2\uff1a\u5bf9\u4e8e\u8d28\u56e0\u5b503\uff0cnow=2\n\n\u6240\u4ee5\uff0cmin\u503c\u4e3a2 \u7b97\u6cd5\u7ed3\u675f~~~\n\n\u3010\u6ce8\u610f\u4e8b\u9879\u3011\n\n1.\u5bf9\u4e8e30\uff0c\u8d28\u56e0\u5b505\u6ca1\u6709\u4efb\u4f55\u7528\u5904\uff0c\u56e0\u4e3a30^k\u5e94\u4e3a24\u7684\u500d\u6570\u3002\n\n2.\u628a30000\u4ee5\u5185\u6240\u6709\u8d28\u6570\u90fd\u679a\u4e3e\u51fa\u6765\u5e94\u8be5\u4f1a\u66f4\u5feb\u3002\n\n3.\u8d28\u56e0\u6570\u5206\u89e3\u7684\u8fc7\u7a0b\u5343\u4e07\u4e0d\u80fd\u5199\u9519\uff08\u522b\u5fd8\u4e86\u628am1\u7684\u8d28\u56e0\u5b50\u4e2a\u6570\u90fd\\*m2\u54e6\uff09\uff01\n\n4.\u8bf7\u52ff\u6284\u88ad\u9898\u89e3\uff01\n\n\u8d34\u4e0a\u534e\u4e3d\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<cstring>\nusing namespace std;\nconst int maxn=30000+10;\nint n,i,j,m1,m2,minn=2147483647;\nint prime[maxn]={0};  //30000\u4ee5\u5185\u6240\u6709\u7684\u8d28\u6570\nbool flag=false,here;  //flag\u4e3a\u6240\u6709\u7ec6\u80de\uff0chere\u4e3a\u5355\u4e2a\u7ec6\u80de\u7684\u5224\u65ad\nint pipe_prime[maxn];  //\u8bd5\u7ba1\u7684\u8d28\u56e0\u6570\u5206\u89e3\nint cell_prime[maxn];  //\u7ec6\u80de\u7684\u8d28\u56e0\u6570\u5206\u89e3\nint sum_prime=0,cell,now;  //30000\u4ee5\u5185\u8d28\u6570\u603b\u6570\u8bb0\u4e3asum_prime\nbool pr(int k)  //\u5224\u65ad\u662f\u5426\u4e3a\u7d20\u6570\uff0c\u4e0d\u4e88\u4ee5\u6ce8\u91ca\n{\n    int m;\n    for(m=2;m<=floor(sqrt(k));m++)\n    if(k%m==0)return false;\n    return true;\n}\nint main()  //\u4e3b\u7a0b\u5e8f\u5f00\u59cb\n{\n    cin>>n; cin>>m1>>m2;\n    for(i=2;i<=maxn;i++)  //\u628a30000\u4ee5\u5185\u7684\u8d28\u56e0\u6570\u679a\u4e3e\u51fa\u6765\n    if(pr(i))\n    {\n        sum_prime++;\n        prime[sum_prime]=i;\n    }\n    i=1; while(m1!=1)  //\u4e3am1\u8d28\u56e0\u6570\u5206\u89e3\n    {\n        if(m1%prime[i]==0)\n        while(m1%prime[i]==0)  //\u9664\u5230\u6ca1\u6709\u4e3a\u6b62\n        {pipe_prime[i]+=m2; m1/=prime[i]; }\n        i++;\n    }\n    for(i=1;i<=n;i++)\n    {\n        cin>>cell; j=1; now=0; here=true;  //\u521d\u59cb\u5316\n        memset(cell_prime,0,sizeof(cell_prime));  //\u521d\u59cb\u5316\uff0c\u52a0\u5934\u6587\u4ef6cstring\n        while(j<=sum_prime)  //\u5927\u4e8e30000\u7684\u8d28\u56e0\u5b50\u5ffd\u7565\uff0c\u5373\u572830000\u5185\u8d28\u56e0\u6570\u5206\u89e3\n        {\n            if(cell%prime[j]==0)\n            while(cell%prime[j]==0)\n            {cell_prime[j]++; cell/=prime[j]; }\n            j++;\n        }\n        for(j=1;j<=sum_prime;j++)\n        {\n            if(pipe_prime[j]!=0&&cell_prime[j]==0)here=false;  //\u5982\u679c\u7ec6\u80de\u6ca1\u6709\u8bd5\u7ba1\u6240\u62e5\u6709\u7684\u8d28\u56e0\u5b50\uff0c\u8be5\u7ec6\u80de\u4e0d\u53ef\u7528\n            if(pipe_prime[j]!=0&&cell_prime[j]!=0)  //\u5982\u679c\u8bd5\u7ba1\u6ca1\u6709\u8be5\u8d28\u56e0\u5b50\uff0c\u4e0d\u7528\u505a\n            {\n                if(pipe_prime[j]%cell_prime[j]==0)\n                now=max(now,pipe_prime[j]/cell_prime[j]);\n                else now=max(now,pipe_prime[j]/cell_prime[j]+1);  //\u8bb0\u5f97\u8981+1\uff0c\u6574\u9664\u65f6\u4e0d\u7528\u52a0\n            }\n        }\n        if(here){flag=true; if(now<minn)minn=now;}  //\u5982\u679c\u8be5\u7ec6\u80de\u53ef\u884c\uff0c\u505a\u4e2a\u6807\u5fd7\uff0c\u66ff\u6362\n    }\n    if(flag)cout<<minn<<endl;  //\u5982\u679c\u53ef\u884c\n    else cout<<-1<<endl;\n    return 0;\n}\n```\n\u6709\u70b9\u513f\u957f\uff0c\u8bf7\u5927\u795e\u591a\u591a\u6307\u6559\uff01",
        "postTime": 1495359135,
        "uid": 8682,
        "name": "\u5218\u5fc3\u8fdc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1069 \u3010\u7ec6\u80de\u5206\u88c2\u3011"
    },
    {
        "content": "# \u9ad8\u80fd\u9884\u8b66\uff01\n# \u9ad8\u80fd\u9884\u8b66\uff01\uff01\n# \u9ad8\u80fd\u9884\u8b66\uff01\uff01\uff01\n\n\n\n\n------------\n\u6570\u8bba\u9898\uff0c\u4e3b\u8981\u65b9\u6cd5\u662f\u5206\u89e3\u8d28\u56e0\u6570(\u8fd9\u70b9\u522b\u7684\u9898\u89e3\u5df2\u7ecf\u8bb2\u8fc7\u4e86\uff0c\u5728\u6b64\u4e0d\u518d\u8d58\u8ff0)\u3002\u4f46\u6211\u7b97\u4e86\u4e00\u904d\uff0c\u5206\u89e3\u8d28\u56e0\u6570\u6709\u70b9\u6162\uff0c\u548b\u529e\uff1f\n\n\n------------\n## \u90a3\u5c31\u5217\u8d28\u6570\u8868\u554a\uff01\uff01\uff01\n\n\n------------\nm1<=30000\uff0c\u6c42\u51fa\u7d20\u6570\u8868\uff0c\u518d\u4e00\u4e2a\u4e00\u4e2a\u6bd4\u554a\uff01\uff01\uff01\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\uff08\u524d\u65b9\u9ad8\u80fd\uff09\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <climits>\n#include <algorithm>\nusing namespace std;\nlong long n,m1,m2;\nlong long pn=3245,prm[10000]={0,2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083,2087,2089,2099,2111,2113,2129,2131,2137,2141,2143,2153,2161,2179,2203,2207,2213,2221,2237,2239,2243,2251,2267,2269,2273,2281,2287,2293,2297,2309,2311,2333,2339,2341,2347,2351,2357,2371,2377,2381,2383,2389,2393,2399,2411,2417,2423,2437,2441,2447,2459,2467,2473,2477,2503,2521,2531,2539,2543,2549,2551,2557,2579,2591,2593,2609,2617,2621,2633,2647,2657,2659,2663,2671,2677,2683,2687,2689,2693,2699,2707,2711,2713,2719,2729,2731,2741,2749,2753,2767,2777,2789,2791,2797,2801,2803,2819,2833,2837,2843,2851,2857,2861,2879,2887,2897,2903,2909,2917,2927,2939,2953,2957,2963,2969,2971,2999,3001,3011,3019,3023,3037,3041,3049,3061,3067,3079,3083,3089,3109,3119,3121,3137,3163,3167,3169,3181,3187,3191,3203,3209,3217,3221,3229,3251,3253,3257,3259,3271,3299,3301,3307,3313,3319,3323,3329,3331,3343,3347,3359,3361,3371,3373,3389,3391,3407,3413,3433,3449,3457,3461,3463,3467,3469,3491,3499,3511,3517,3527,3529,3533,3539,3541,3547,3557,3559,3571,3581,3583,3593,3607,3613,3617,3623,3631,3637,3643,3659,3671,3673,3677,3691,3697,3701,3709,3719,3727,3733,3739,3761,3767,3769,3779,3793,3797,3803,3821,3823,3833,3847,3851,3853,3863,3877,3881,3889,3907,3911,3917,3919,3923,3929,3931,3943,3947,3967,3989,4001,4003,4007,4013,4019,4021,4027,4049,4051,4057,4073,4079,4091,4093,4099,4111,4127,4129,4133,4139,4153,4157,4159,4177,4201,4211,4217,4219,4229,4231,4241,4243,4253,4259,4261,4271,4273,4283,4289,4297,4327,4337,4339,4349,4357,4363,4373,4391,4397,4409,4421,4423,4441,4447,4451,4457,4463,4481,4483,4493,4507,4513,4517,4519,4523,4547,4549,4561,4567,4583,4591,4597,4603,4621,4637,4639,4643,4649,4651,4657,4663,4673,4679,4691,4703,4721,4723,4729,4733,4751,4759,4783,4787,4789,4793,4799,4801,4813,4817,4831,4861,4871,4877,4889,4903,4909,4919,4931,4933,4937,4943,4951,4957,4967,4969,4973,4987,4993,4999,5003,5009,5011,5021,5023,5039,5051,5059,5077,5081,5087,5099,5101,5107,5113,5119,5147,5153,5167,5171,5179,5189,5197,5209,5227,5231,5233,5237,5261,5273,5279,5281,5297,5303,5309,5323,5333,5347,5351,5381,5387,5393,5399,5407,5413,5417,5419,5431,5437,5441,5443,5449,5471,5477,5479,5483,5501,5503,5507,5519,5521,5527,5531,5557,5563,5569,5573,5581,5591,5623,5639,5641,5647,5651,5653,5657,5659,5669,5683,5689,5693,5701,5711,5717,5737,5741,5743,5749,5779,5783,5791,5801,5807,5813,5821,5827,5839,5843,5849,5851,5857,5861,5867,5869,5879,5881,5897,5903,5923,5927,5939,5953,5981,5987,6007,6011,6029,6037,6043,6047,6053,6067,6073,6079,6089,6091,6101,6113,6121,6131,6133,6143,6151,6163,6173,6197,6199,6203,6211,6217,6221,6229,6247,6257,6263,6269,6271,6277,6287,6299,6301,6311,6317,6323,6329,6337,6343,6353,6359,6361,6367,6373,6379,6389,6397,6421,6427,6449,6451,6469,6473,6481,6491,6521,6529,6547,6551,6553,6563,6569,6571,6577,6581,6599,6607,6619,6637,6653,6659,6661,6673,6679,6689,6691,6701,6703,6709,6719,6733,6737,6761,6763,6779,6781,6791,6793,6803,6823,6827,6829,6833,6841,6857,6863,6869,6871,6883,6899,6907,6911,6917,6947,6949,6959,6961,6967,6971,6977,6983,6991,6997,7001,7013,7019,7027,7039,7043,7057,7069,7079,7103,7109,7121,7127,7129,7151,7159,7177,7187,7193,7207,7211,7213,7219,7229,7237,7243,7247,7253,7283,7297,7307,7309,7321,7331,7333,7349,7351,7369,7393,7411,7417,7433,7451,7457,7459,7477,7481,7487,7489,7499,7507,7517,7523,7529,7537,7541,7547,7549,7559,7561,7573,7577,7583,7589,7591,7603,7607,7621,7639,7643,7649,7669,7673,7681,7687,7691,7699,7703,7717,7723,7727,7741,7753,7757,7759,7789,7793,7817,7823,7829,7841,7853,7867,7873,7877,7879,7883,7901,7907,7919,7927,7933,7937,7949,7951,7963,7993,8009,8011,8017,8039,8053,8059,8069,8081,8087,8089,8093,8101,8111,8117,8123,8147,8161,8167,8171,8179,8191,8209,8219,8221,8231,8233,8237,8243,8263,8269,8273,8287,8291,8293,8297,8311,8317,8329,8353,8363,8369,8377,8387,8389,8419,8423,8429,8431,8443,8447,8461,8467,8501,8513,8521,8527,8537,8539,8543,8563,8573,8581,8597,8599,8609,8623,8627,8629,8641,8647,8663,8669,8677,8681,8689,8693,8699,8707,8713,8719,8731,8737,8741,8747,8753,8761,8779,8783,8803,8807,8819,8821,8831,8837,8839,8849,8861,8863,8867,8887,8893,8923,8929,8933,8941,8951,8963,8969,8971,8999,9001,9007,9011,9013,9029,9041,9043,9049,9059,9067,9091,9103,9109,9127,9133,9137,9151,9157,9161,9173,9181,9187,9199,9203,9209,9221,9227,9239,9241,9257,9277,9281,9283,9293,9311,9319,9323,9337,9341,9343,9349,9371,9377,9391,9397,9403,9413,9419,9421,9431,9433,9437,9439,9461,9463,9467,9473,9479,9491,9497,9511,9521,9533,9539,9547,9551,9587,9601,9613,9619,9623,9629,9631,9643,9649,9661,9677,9679,9689,9697,9719,9721,9733,9739,9743,9749,9767,9769,9781,9787,9791,9803,9811,9817,9829,9833,9839,9851,9857,9859,9871,9883,9887,9901,9907,9923,9929,9931,9941,9949,9967,9973,10007,10009,10037,10039,10061,10067,10069,10079,10091,10093,10099,10103,10111,10133,10139,10141,10151,10159,10163,10169,10177,10181,10193,10211,10223,10243,10247,10253,10259,10267,10271,10273,10289,10301,10303,10313,10321,10331,10333,10337,10343,10357,10369,10391,10399,10427,10429,10433,10453,10457,10459,10463,10477,10487,10499,10501,10513,10529,10531,10559,10567,10589,10597,10601,10607,10613,10627,10631,10639,10651,10657,10663,10667,10687,10691,10709,10711,10723,10729,10733,10739,10753,10771,10781,10789,10799,10831,10837,10847,10853,10859,10861,10867,10883,10889,10891,10903,10909,10937,10939,10949,10957,10973,10979,10987,10993,11003,11027,11047,11057,11059,11069,11071,11083,11087,11093,11113,11117,11119,11131,11149,11159,11161,11171,11173,11177,11197,11213,11239,11243,11251,11257,11261,11273,11279,11287,11299,11311,11317,11321,11329,11351,11353,11369,11383,11393,11399,11411,11423,11437,11443,11447,11467,11471,11483,11489,11491,11497,11503,11519,11527,11549,11551,11579,11587,11593,11597,11617,11621,11633,11657,11677,11681,11689,11699,11701,11717,11719,11731,11743,11777,11779,11783,11789,11801,11807,11813,11821,11827,11831,11833,11839,11863,11867,11887,11897,11903,11909,11923,11927,11933,11939,11941,11953,11959,11969,11971,11981,11987,12007,12011,12037,12041,12043,12049,12071,12073,12097,12101,12107,12109,12113,12119,12143,12149,12157,12161,12163,12197,12203,12211,12227,12239,12241,12251,12253,12263,12269,12277,12281,12289,12301,12323,12329,12343,12347,12373,12377,12379,12391,12401,12409,12413,12421,12433,12437,12451,12457,12473,12479,12487,12491,12497,12503,12511,12517,12527,12539,12541,12547,12553,12569,12577,12583,12589,12601,12611,12613,12619,12637,12641,12647,12653,12659,12671,12689,12697,12703,12713,12721,12739,12743,12757,12763,12781,12791,12799,12809,12821,12823,12829,12841,12853,12889,12893,12899,12907,12911,12917,12919,12923,12941,12953,12959,12967,12973,12979,12983,13001,13003,13007,13009,13033,13037,13043,13049,13063,13093,13099,13103,13109,13121,13127,13147,13151,13159,13163,13171,13177,13183,13187,13217,13219,13229,13241,13249,13259,13267,13291,13297,13309,13313,13327,13331,13337,13339,13367,13381,13397,13399,13411,13417,13421,13441,13451,13457,13463,13469,13477,13487,13499,13513,13523,13537,13553,13567,13577,13591,13597,13613,13619,13627,13633,13649,13669,13679,13681,13687,13691,13693,13697,13709,13711,13721,13723,13729,13751,13757,13759,13763,13781,13789,13799,13807,13829,13831,13841,13859,13873,13877,13879,13883,13901,13903,13907,13913,13921,13931,13933,13963,13967,13997,13999,14009,14011,14029,14033,14051,14057,14071,14081,14083,14087,14107,14143,14149,14153,14159,14173,14177,14197,14207,14221,14243,14249,14251,14281,14293,14303,14321,14323,14327,14341,14347,14369,14387,14389,14401,14407,14411,14419,14423,14431,14437,14447,14449,14461,14479,14489,14503,14519,14533,14537,14543,14549,14551,14557,14561,14563,14591,14593,14621,14627,14629,14633,14639,14653,14657,14669,14683,14699,14713,14717,14723,14731,14737,14741,14747,14753,14759,14767,14771,14779,14783,14797,14813,14821,14827,14831,14843,14851,14867,14869,14879,14887,14891,14897,14923,14929,14939,14947,14951,14957,14969,14983,15013,15017,15031,15053,15061,15073,15077,15083,15091,15101,15107,15121,15131,15137,15139,15149,15161,15173,15187,15193,15199,15217,15227,15233,15241,15259,15263,15269,15271,15277,15287,15289,15299,15307,15313,15319,15329,15331,15349,15359,15361,15373,15377,15383,15391,15401,15413,15427,15439,15443,15451,15461,15467,15473,15493,15497,15511,15527,15541,15551,15559,15569,15581,15583,15601,15607,15619,15629,15641,15643,15647,15649,15661,15667,15671,15679,15683,15727,15731,15733,15737,15739,15749,15761,15767,15773,15787,15791,15797,15803,15809,15817,15823,15859,15877,15881,15887,15889,15901,15907,15913,15919,15923,15937,15959,15971,15973,15991,16001,16007,16033,16057,16061,16063,16067,16069,16073,16087,16091,16097,16103,16111,16127,16139,16141,16183,16187,16189,16193,16217,16223,16229,16231,16249,16253,16267,16273,16301,16319,16333,16339,16349,16361,16363,16369,16381,16411,16417,16421,16427,16433,16447,16451,16453,16477,16481,16487,16493,16519,16529,16547,16553,16561,16567,16573,16603,16607,16619,16631,16633,16649,16651,16657,16661,16673,16691,16693,16699,16703,16729,16741,16747,16759,16763,16787,16811,16823,16829,16831,16843,16871,16879,16883,16889,16901,16903,16921,16927,16931,16937,16943,16963,16979,16981,16987,16993,17011,17021,17027,17029,17033,17041,17047,17053,17077,17093,17099,17107,17117,17123,17137,17159,17167,17183,17189,17191,17203,17207,17209,17231,17239,17257,17291,17293,17299,17317,17321,17327,17333,17341,17351,17359,17377,17383,17387,17389,17393,17401,17417,17419,17431,17443,17449,17467,17471,17477,17483,17489,17491,17497,17509,17519,17539,17551,17569,17573,17579,17581,17597,17599,17609,17623,17627,17657,17659,17669,17681,17683,17707,17713,17729,17737,17747,17749,17761,17783,17789,17791,17807,17827,17837,17839,17851,17863,17881,17891,17903,17909,17911,17921,17923,17929,17939,17957,17959,17971,17977,17981,17987,17989,18013,18041,18043,18047,18049,18059,18061,18077,18089,18097,18119,18121,18127,18131,18133,18143,18149,18169,18181,18191,18199,18211,18217,18223,18229,18233,18251,18253,18257,18269,18287,18289,18301,18307,18311,18313,18329,18341,18353,18367,18371,18379,18397,18401,18413,18427,18433,18439,18443,18451,18457,18461,18481,18493,18503,18517,18521,18523,18539,18541,18553,18583,18587,18593,18617,18637,18661,18671,18679,18691,18701,18713,18719,18731,18743,18749,18757,18773,18787,18793,18797,18803,18839,18859,18869,18899,18911,18913,18917,18919,18947,18959,18973,18979,19001,19009,19013,19031,19037,19051,19069,19073,19079,19081,19087,19121,19139,19141,19157,19163,19181,19183,19207,19211,19213,19219,19231,19237,19249,19259,19267,19273,19289,19301,19309,19319,19333,19373,19379,19381,19387,19391,19403,19417,19421,19423,19427,19429,19433,19441,19447,19457,19463,19469,19471,19477,19483,19489,19501,19507,19531,19541,19543,19553,19559,19571,19577,19583,19597,19603,19609,19661,19681,19687,19697,19699,19709,19717,19727,19739,19751,19753,19759,19763,19777,19793,19801,19813,19819,19841,19843,19853,19861,19867,19889,19891,19913,19919,19927,19937,19949,19961,19963,19973,19979,19991,19993,19997,20011,20021,20023,20029,20047,20051,20063,20071,20089,20101,20107,20113,20117,20123,20129,20143,20147,20149,20161,20173,20177,20183,20201,20219,20231,20233,20249,20261,20269,20287,20297,20323,20327,20333,20341,20347,20353,20357,20359,20369,20389,20393,20399,20407,20411,20431,20441,20443,20477,20479,20483,20507,20509,20521,20533,20543,20549,20551,20563,20593,20599,20611,20627,20639,20641,20663,20681,20693,20707,20717,20719,20731,20743,20747,20749,20753,20759,20771,20773,20789,20807,20809,20849,20857,20873,20879,20887,20897,20899,20903,20921,20929,20939,20947,20959,20963,20981,20983,21001,21011,21013,21017,21019,21023,21031,21059,21061,21067,21089,21101,21107,21121,21139,21143,21149,21157,21163,21169,21179,21187,21191,21193,21211,21221,21227,21247,21269,21277,21283,21313,21317,21319,21323,21341,21347,21377,21379,21383,21391,21397,21401,21407,21419,21433,21467,21481,21487,21491,21493,21499,21503,21517,21521,21523,21529,21557,21559,21563,21569,21577,21587,21589,21599,21601,21611,21613,21617,21647,21649,21661,21673,21683,21701,21713,21727,21737,21739,21751,21757,21767,21773,21787,21799,21803,21817,21821,21839,21841,21851,21859,21863,21871,21881,21893,21911,21929,21937,21943,21961,21977,21991,21997,22003,22013,22027,22031,22037,22039,22051,22063,22067,22073,22079,22091,22093,22109,22111,22123,22129,22133,22147,22153,22157,22159,22171,22189,22193,22229,22247,22259,22271,22273,22277,22279,22283,22291,22303,22307,22343,22349,22367,22369,22381,22391,22397,22409,22433,22441,22447,22453,22469,22481,22483,22501,22511,22531,22541,22543,22549,22567,22571,22573,22613,22619,22621,22637,22639,22643,22651,22669,22679,22691,22697,22699,22709,22717,22721,22727,22739,22741,22751,22769,22777,22783,22787,22807,22811,22817,22853,22859,22861,22871,22877,22901,22907,22921,22937,22943,22961,22963,22973,22993,23003,23011,23017,23021,23027,23029,23039,23041,23053,23057,23059,23063,23071,23081,23087,23099,23117,23131,23143,23159,23167,23173,23189,23197,23201,23203,23209,23227,23251,23269,23279,23291,23293,23297,23311,23321,23327,23333,23339,23357,23369,23371,23399,23417,23431,23447,23459,23473,23497,23509,23531,23537,23539,23549,23557,23561,23563,23567,23581,23593,23599,23603,23609,23623,23627,23629,23633,23663,23669,23671,23677,23687,23689,23719,23741,23743,23747,23753,23761,23767,23773,23789,23801,23813,23819,23827,23831,23833,23857,23869,23873,23879,23887,23893,23899,23909,23911,23917,23929,23957,23971,23977,23981,23993,24001,24007,24019,24023,24029,24043,24049,24061,24071,24077,24083,24091,24097,24103,24107,24109,24113,24121,24133,24137,24151,24169,24179,24181,24197,24203,24223,24229,24239,24247,24251,24281,24317,24329,24337,24359,24371,24373,24379,24391,24407,24413,24419,24421,24439,24443,24469,24473,24481,24499,24509,24517,24527,24533,24547,24551,24571,24593,24611,24623,24631,24659,24671,24677,24683,24691,24697,24709,24733,24749,24763,24767,24781,24793,24799,24809,24821,24841,24847,24851,24859,24877,24889,24907,24917,24919,24923,24943,24953,24967,24971,24977,24979,24989,25013,25031,25033,25037,25057,25073,25087,25097,25111,25117,25121,25127,25147,25153,25163,25169,25171,25183,25189,25219,25229,25237,25243,25247,25253,25261,25301,25303,25307,25309,25321,25339,25343,25349,25357,25367,25373,25391,25409,25411,25423,25439,25447,25453,25457,25463,25469,25471,25523,25537,25541,25561,25577,25579,25583,25589,25601,25603,25609,25621,25633,25639,25643,25657,25667,25673,25679,25693,25703,25717,25733,25741,25747,25759,25763,25771,25793,25799,25801,25819,25841,25847,25849,25867,25873,25889,25903,25913,25919,25931,25933,25939,25943,25951,25969,25981,25997,25999,26003,26017,26021,26029,26041,26053,26083,26099,26107,26111,26113,26119,26141,26153,26161,26171,26177,26183,26189,26203,26209,26227,26237,26249,26251,26261,26263,26267,26293,26297,26309,26317,26321,26339,26347,26357,26371,26387,26393,26399,26407,26417,26423,26431,26437,26449,26459,26479,26489,26497,26501,26513,26539,26557,26561,26573,26591,26597,26627,26633,26641,26647,26669,26681,26683,26687,26693,26699,26701,26711,26713,26717,26723,26729,26731,26737,26759,26777,26783,26801,26813,26821,26833,26839,26849,26861,26863,26879,26881,26891,26893,26903,26921,26927,26947,26951,26953,26959,26981,26987,26993,27011,27017,27031,27043,27059,27061,27067,27073,27077,27091,27103,27107,27109,27127,27143,27179,27191,27197,27211,27239,27241,27253,27259,27271,27277,27281,27283,27299,27329,27337,27361,27367,27397,27407,27409,27427,27431,27437,27449,27457,27479,27481,27487,27509,27527,27529,27539,27541,27551,27581,27583,27611,27617,27631,27647,27653,27673,27689,27691,27697,27701,27733,27737,27739,27743,27749,27751,27763,27767,27773,27779,27791,27793,27799,27803,27809,27817,27823,27827,27847,27851,27883,27893,27901,27917,27919,27941,27943,27947,27953,27961,27967,27983,27997,28001,28019,28027,28031,28051,28057,28069,28081,28087,28097,28099,28109,28111,28123,28151,28163,28181,28183,28201,28211,28219,28229,28277,28279,28283,28289,28297,28307,28309,28319,28349,28351,28387,28393,28403,28409,28411,28429,28433,28439,28447,28463,28477,28493,28499,28513,28517,28537,28541,28547,28549,28559,28571,28573,28579,28591,28597,28603,28607,28619,28621,28627,28631,28643,28649,28657,28661,28663,28669,28687,28697,28703,28711,28723,28729,28751,28753,28759,28771,28789,28793,28807,28813,28817,28837,28843,28859,28867,28871,28879,28901,28909,28921,28927,28933,28949,28961,28979,29009,29017,29021,29023,29027,29033,29059,29063,29077,29101,29123,29129,29131,29137,29147,29153,29167,29173,29179,29191,29201,29207,29209,29221,29231,29243,29251,29269,29287,29297,29303,29311,29327,29333,29339,29347,29363,29383,29387,29389,29399,29401,29411,29423,29429,29437,29443,29453,29473,29483,29501,29527,29531,29537,29567,29569,29573,29581,29587,29599,29611,29629,29633,29641,29663,29669,29671,29683,29717,29723,29741,29753,29759,29761,29789,29803,29819,29833,29837,29851,29863,29867,29873,29879,29881,29917,29921,29927,29947,29959,29983,29989};\nlong long m1_m2[10000];\nlong long t[10000];\nlong long tm(long long x) //\u00d7\u00ee\u00b6\u00cc\u00ca\u00b1\u00bc\u00e4\u00a3\u00ac\u00c3\u00bb\u00d3\u00d0\u00be\u00cd-1\n{\n\tfor (int i=1;i<=pn;i++)\n\t\tt[i]=0;\n    for (int i=1;i<=pn;i++)\n\t\twhile (x%prm[i]==0)\n\t\t\tx/=prm[i],t[i]++;\n\tlong long mx=0;\n\tfor (int i=1;i<=pn;i++)\n\t\tif (t[i]==0&&m1_m2[i]!=0)\n\t\t\treturn LONG_LONG_MAX;\n\t\telse\n\t\t\tif (m1_m2[i]!=0)\n\t\t\t\tmx=max(mx,m1_m2[i]/t[i]+bool(m1_m2[i]%t[i]));\n\treturn mx;\n}\nint main()\n{\n\tcin>>n>>m1>>m2;\n\tfor (int i=1;i<=pn;i++)\n\t{\n\t\twhile (m1%prm[i]==0)\n\t\t{\n\t\t\tm1/=prm[i];\n\t\t\tm1_m2[i]+=m2;\n\t\t}\n\t}\n\tlong long mnt=LONG_LONG_MAX; //minimum time\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tlong long t;\n\t\tcin>>t;\n\t\tmnt=min(mnt,tm(t));\n\t}\n\tif (mnt==LONG_LONG_MAX)\n\t\tcout<<-1<<endl;\n\telse\n\t\tcout<<mnt<<endl;\n\treturn 0;\n}\n\n```\n\n------------\nemmmm...\n\n\u6709\u591a\u5c11\u4eba\u6709\u6211\u8fd9\u4e48\u75af\u72c2\uff1f\n\n\u4f30\u8ba1\u6ca1\u4e86\u3002",
        "postTime": 1539876052,
        "uid": 66287,
        "name": "\u6a31\u521d\u97f3\u6597\u6a61\u76ae",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1069 \u3010\u7ec6\u80de\u5206\u88c2\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u6b21\u72ec\u7acb\u505a\u5bf9\u4e00\u9053\u7eff\u8272\u7684\u6570\u5b66\u9898\uff0c\u5f00\u5fc3\uff01\n\n~~\u6211\u4e5f\u53c8\u50bb\u50bb\u5730\u5199\u51fa\u6c42\u89e3\u8fc7\u7a0b\u4e86~~\n\n\u9898\u76ee\u5176\u5b9e\u662f\u8ba9\u6c42\u51fa\u6700\u5c0f\u7684k,\u4f7f\u6709\u4e00\u4e2a$i(i\u2208\\mathbb{Z},1\\leqslant i\\leqslant n)$ \u6ee1\u8db3 $s_i^k|m_1^{m_2}$\n\n\u4e0b\u9762\u662f\u4e00\u6bb5\u795e(you)\u5947(zhi)\u7684\u64cd\u4f5c\uff1a\n\n> \u8981\u60f3\u4f7f$s^k|m_1^{m_2}$\uff0c\u5219$s$\u5fc5\u987b\u5305\u542b\u6240\u6709$m_1$\u7684\u8d28\u56e0\u6570\u3002\n\n---\n> \u6211\u4eec\u5148\u770bs\u80fd\u4e0d\u80fd\u6574\u9664$m_1$\u7684\u8d28\u56e0\u6570\uff0c\u5982\u679c$s$\u4e0d\u80fd\u6574\u9664\uff0c\u65e0\u8bba$k$\u662f\u591a\u5c11\uff0c$s^k$\u90fd\u4e0d\u53ef\u80fd\u6574\u9664$m_1^{m_2}$\uff0c\u6b64\u65f6\u5c31\u4e0d\u7528\u5f80\u4e0b\u8ba1\u7b97\u4e86\uff01\n\n---\n\n>\u8bbe$f(a,b)$\u8868\u793a$a$\u7684\u8d28\u56e0\u6570\u4e2d$b$\u7684\u6570\u91cf\uff08\u5177\u4f53\u89c1\u4ee3\u7801\uff09,$m_1$\u7684\u8d28\u56e0\u5b50$i$\u51fa\u73b0\u7684\u6b21\u6570$b_i$\n\n> \u5982\u679c$s$\u7684\u8d28\u56e0\u6570\u4e2d\u5305\u542b\u6240\u6709$m_1$\u7684\u8d28\u56e0\u6570\uff0c\u6b64\u65f6\u82e5$m$\u6709\u8d28\u56e0\u6570$j$\uff0c\u53ef\u4ee5\u5f97\u5230$kf(s,j) \\geqslant m_2b_j$\n\n> \u6240\u4ee5$k \\geqslant \\frac{m_2b_j}{f(s,j)}$\n\n> \u540c\u65f6k\u8d8a\u5c0f\u65f6\u95f4\u8d8a\u77ed\uff0c\u53ef\u4ee5\u5f97\u5230$k=max(k,\\left \\lceil \\frac{m_2b_j}{f(s,j)} \\right \\rceil)$\n\n> \u53ef\u4ee5\u4f7f\u7528ceil()\u51fd\u6570\u3002\u5982\u679c\u8981\u5c3d\u91cf\u907f\u514d\u5c0f\u6570\u8fd0\u7b97\u5c31\u53ef\u4ee5\u5199\u6210\n`k=max(k,(b[j]*m2+f(s,j)-1)/f(s,j))`\n\n> \u540e\u4e24\u6b65\u53ef\u4ee5\u5408\u5e76\uff0c\u5916\u52a0\u70b9\u4f18\u5316\uff0c\u5c31OK\u4e86(liao)\u3002\u5177\u4f53\u89c1\u4ee3\u7801\u3002\n\n\u4ee3\u7801\uff08\u5728\u67d0\u5904\u6dfb\u52a0\u4e86\u9632\u6284\u88ad\u8bed\u53e5\uff09\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint f(int a,int b){\n    int s=0;\n    while(a>0&&a%b==0){\n        a/=b;\n        s++;\n    }\n    return s;\n}\nint main(){\n    int n,m1,m2,a[10010],ans=0x7fffffff;\n    scanf(\"%d\",&n);\n    scanf(\"%d%d\",&m1,&m2);\n    for(register int i=1;i<=n;i++)scanf(\"%d\",&a+i);\n    int b[30010],s=0;\n    memset(b,0,sizeof(b));\n    for(register int i=2;i<=m1;i++){\n        while(m1>0&&m1%i==0){\n            m1/=i;\n            b[i]++;\n        }\n        b[i]*=m2;\n        if(!b[i])s++;\n    }\n    for(register int i=1;i<=n;i++){\n        bool flag=1;\n        int sec=0,cnt=0;\n        for(register int j=2;j<=30000;j++)\n        if(b[j]){\n            if(a[i]%j==0){\n                cnt++;\n                int tmp=f(a[i],j);\n                sec=max(sec,(b[j]+tmp-1)/tmp);\n            }else {\n                flag=0;\n                break;\n            }\n            if(cnt==s)break;\n        }\n        if(flag)\n            ans=min(ans,sec);\n    }\n    if(ans!=0x7fffffff)printf(\"%d\",ans);\n    else printf(\"-1\");\n    return 0;\n}\n```",
        "postTime": 1528691953,
        "uid": 51621,
        "name": "Altria_Pendragon_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1069 \u3010\u7ec6\u80de\u5206\u88c2\u3011"
    },
    {
        "content": "\u5176\u5b9e\u5c31\u662f\u5206\u89e3\u8d28\u56e0\u6570\u2026\u2026\u2026\u2026\u77e5\u9053\u65b9\u6cd5\u5c31\u5f88\u7b80\u5355\u5566\n\n\u9996\u5148\u770b\u7ec6\u80de\u7684\u8d28\u56e0\u6570\u662f\u4e0d\u662f\u5305\u542b\u4e86\u5bb9\u5668\u7684\u6240\u6709\u8d28\u56e0\u6570\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u90a3\u4e48\u5c31\u4e0d\u80fd\u653e\u5165\u5bb9\u5668\u4e2d\n\n\u5982\u679c\u5168\u90e8\u5305\u542b\uff0c\u90a3\u4e48\u6700\u7ec8\u503c\u5c31\u662f\u8d28\u56e0\u6570\u6b21\u6570\u4e4b\u5dee\u7684\u6700\u5927\u503c+1\u3002\n\n```cpp\n#include <iostream>\nusing namespace std;\nint n,m1,m2,s[10001],zs[10001]={0},mz,t=2,c,ans=0x7fffffff,l;\nint main()\n{\n    cin>>n>>m1>>m2;\n    for (int i=1;i<=n;i++) cin>>s[i];\n    if (m1==1) {cout<<0<<endl;return 0;}\n    while(m1!=1)\n    {\n        while (!(m1%t)) m1/=t,zs[t]++;\n        mz=max(mz,t);\n        zs[t++]*=m2;//\u8981\u4e58\u4e0am2\n```\n}//\u7b5b\u8d28\u56e0\u6570\n```cpp\n    for (int i=1;i<=n;i++)\n    {\n        l=0;\n        for (int j=2;j<=mz;j++)\n        {\n            if (!zs[j]) continue;\n            c=0;\n            while (!(s[i]%j)) s[i]/=j,c++;\n            if (!c) {l=0x7fffffff;break;}\n            l=max(l,(zs[j]-1)/c);//\u7b97\u6b21\u6570\u5dee\n        }\n        ans=min(ans,l);\n    }\n    cout<<(ans==0x7fffffff?-1:ans+1)<<endl;//\u4e00\u5b9a\u8bb0\u4f4f\u8981+1\uff0c\u8840\u7684\u6559\u8bad\u554a\uff01\uff01\uff01\n    return 0;\n}\n```",
        "postTime": 1477997703,
        "uid": 14380,
        "name": "24680esz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1069 \u3010\u7ec6\u80de\u5206\u88c2\u3011"
    },
    {
        "content": "\u8fd9\u9898\u672c\u849f\u84bb\u5199\u4e86\u4e94\u516d\u4e2a\u5c0f\u65f6\uff0c\u7136\u540e\u53d1\u73b0\u662f~~\u6211\u5f31\u667a\u4e86~~\uff1b\n\n\u8fd9\u9898\u5f88\u660e\u663e\u6ee1\u5206\u4ee3\u7801\u662f\u5206\u89e3\u8d28\u56e0\u7d20,\u4f46\u6211\u8fd9\u4e2a\u849f\u84bb\u534a\u5929\u6ca1\u5199\u51fa\u6765\uff0c\u9694\u58c1\u6253\u4e86\u4e2a\u66b4\u529b\u62ff\u4e8650\u52062333\uff0c\u6240\u4ee5\u5bf9~~\u4e8e\u50cf\u6211\u4e00\u6837\u849f\u84bb\u7684\u4eba~~\u8fd8\u662f\u5148\u5199\u66b4\u529b\u5427\u3002\n\n\u671b\u8ff7\u4eba\u7684\u7ba1\u7406\u5458\u901a\u8fc7QAQ\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<cstdio>\nusing namespace std;\nint shudu[233333];\nint main() {\n\tint min=23333;\n\tint xibaoshu;\n\tint zhishu,mi;\n\tscanf(\"%d%d%d\",&xibaoshu,&zhishu,&mi);\n\tunsigned long guanshu;\n\tguanshu=pow(zhishu,mi);//\u76f4\u63a5\u66b4\u529b\u4e58\u51fa\u7ba1\u6570\n\tfor(int a=1; a<=xibaoshu; a++) {\n\t\tscanf(\"%d\",&shudu[a]);\n\t}\n\tint qwq;\n\tint qaq=1;\n\tfor(int a=1; a<=xibaoshu; a++) {\n\t\tqaq=1;\n\t\tfor(int b=1; b<1000; b++) {\n\t\t\tqaq=(qaq*shudu[a])%guanshu;//\u76f2\u76ee\u5904\u7406\u75af\u72c2\u5904\u7406\n\t\t\tif(qaq==0) {\n\t\t\t\tqwq=b;\n\t\t\t\tif(qwq<min) {\n\t\t\t\t\tmin=qwq;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\tif(guanshu==1) cout<<0;\n\telse {\n\t\tif(min==23333) cout<<-1;\n\t\telse cout<<min;\n\t}\n\treturn 0;\n}\n\n```\n\n\u8fd9\u4e2a\u5176\u5b9e\u5f88\u597d\u7406\u89e3\uff0c\u5c31\u662f\u76f4\u63a5\u5904\u7406\uff0c\u76f8\u5f53\u4e8e\u5199\u4e86\u4e2a\u6a21\u62df\u3002\n\n\u90a3\u4e48\u4e3a\u4e86AC\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u600e\u4e48\u529e\u5462\uff1f\n\n```cpp\n\u4e3e\u4e2a\u6817\u5b50~~~~~~~~~~\n\u7ec6\u80de\u6bcf\u6b21\u80fd\u5206\u88c2\u621030\u4e2a\uff0c\u7ba1\u6570\u4e3a24\n30=2*3*5\uff1b\n24=2*2*2*3\uff1b\n\u800c24\u4e0e5\u6ca1\u6709\u4efb\u4f55\u7684\u5173\u8054\uff0c\u771f\u6b63\u80fd\u7528\u4e8e\u5747\u5206\u7684\u53ea\u67092\u548c3\u4e24\u4e2a\u56e0\u5b50\uff0c\u800c24\u91cc\u9762\u67093\u4e2a2\u548c1\u4e2a3\uff0c24*24\u91cc\u9762\u67096\u4e2a2\u548c2\u4e2a3\uff1b\u4e5f\u5c31\u662f\u8bf4\u8981\u5747\u520624*24\u7ba1\u5fc5\u987b\u5305\u542b2*2*2*2*2*2*3*3,30\u91cc\u53ea\u67091\u4e2a2\u548c1\u4e2a3\uff0c\u8981\u6ee1\u8db32\u7684\u9700\u6c42\u9700\u89816\u4e2a30\uff0c\u6ee1\u8db33\u9700\u89812\u4e2a30\uff0c\u5219\u9700\u8981\u5206\u88c26\u6b21\n```\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<set>\n#include<string>\n#include<stack>\n#include<queue>\nusing namespace std;\nint prm[10000]= {2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083,2087,2089,2099,2111,2113,2129,2131,2137,2141,2143,2153,2161,2179,2203,2207,2213,2221,2237,2239,2243,2251,2267,2269,2273,2281,2287,2293,2297,2309,2311,2333,2339,2341,2347,2351,2357,2371,2377,2381,2383,2389,2393,2399,2411,2417,2423,2437,2441,2447,2459,2467,2473,2477,2503,2521,2531,2539,2543,2549,2551,2557,2579,2591,2593,2609,2617,2621,2633,2647,2657,2659,2663,2671,2677,2683,2687,2689,2693,2699,2707,2711,2713,2719,2729,2731,2741,2749,2753,2767,2777,2789,2791,2797,2801,2803,2819,2833,2837,2843,2851,2857,2861,2879,2887,2897,2903,2909,2917,2927,2939,2953,2957,2963,2969,2971,2999,3001,3011,3019,3023,3037,3041,3049,3061,3067,3079,3083,3089,3109,3119,3121,3137,3163,3167,3169,3181,3187,3191,3203,3209,3217,3221,3229,3251,3253,3257,3259,3271,3299,3301,3307,3313,3319,3323,3329,3331,3343,3347,3359,3361,3371,3373,3389,3391,3407,3413,3433,3449,3457,3461,3463,3467,3469,3491,3499,3511,3517,3527,3529,3533,3539,3541,3547,3557,3559,3571,3581,3583,3593,3607,3613,3617,3623,3631,3637,3643,3659,3671,3673,3677,3691,3697,3701,3709,3719,3727,3733,3739,3761,3767,3769,3779,3793,3797,3803,3821,3823,3833,3847,3851,3853,3863,3877,3881,3889,3907,3911,3917,3919,3923,3929,3931,3943,3947,3967,3989,4001,4003,4007,4013,4019,4021,4027,4049,4051,4057,4073,4079,4091,4093,4099,4111,4127,4129,4133,4139,4153,4157,4159,4177,4201,4211,4217,4219,4229,4231,4241,4243,4253,4259,4261,4271,4273,4283,4289,4297,4327,4337,4339,4349,4357,4363,4373,4391,4397,4409,4421,4423,4441,4447,4451,4457,4463,4481,4483,4493,4507,4513,4517,4519,4523,4547,4549,4561,4567,4583,4591,4597,4603,4621,4637,4639,4643,4649,4651,4657,4663,4673,4679,4691,4703,4721,4723,4729,4733,4751,4759,4783,4787,4789,4793,4799,4801,4813,4817,4831,4861,4871,4877,4889,4903,4909,4919,4931,4933,4937,4943,4951,4957,4967,4969,4973,4987,4993,4999,5003,5009,5011,5021,5023,5039,5051,5059,5077,5081,5087,5099,5101,5107,5113,5119,5147,5153,5167,5171,5179,5189,5197,5209,5227,5231,5233,5237,5261,5273,5279,5281,5297,5303,5309,5323,5333,5347,5351,5381,5387,5393,5399,5407,5413,5417,5419,5431,5437,5441,5443,5449,5471,5477,5479,5483,5501,5503,5507,5519,5521,5527,5531,5557,5563,5569,5573,5581,5591,5623,5639,5641,5647,5651,5653,5657,5659,5669,5683,5689,5693,5701,5711,5717,5737,5741,5743,5749,5779,5783,5791,5801,5807,5813,5821,5827,5839,5843,5849,5851,5857,5861,5867,5869,5879,5881,5897,5903,5923,5927,5939,5953,5981,5987,6007,6011,6029,6037,6043,6047,6053,6067,6073,6079,6089,6091,6101,6113,6121,6131,6133,6143,6151,6163,6173,6197,6199,6203,6211,6217,6221,6229,6247,6257,6263,6269,6271,6277,6287,6299,6301,6311,6317,6323,6329,6337,6343,6353,6359,6361,6367,6373,6379,6389,6397,6421,6427,6449,6451,6469,6473,6481,6491,6521,6529,6547,6551,6553,6563,6569,6571,6577,6581,6599,6607,6619,6637,6653,6659,6661,6673,6679,6689,6691,6701,6703,6709,6719,6733,6737,6761,6763,6779,6781,6791,6793,6803,6823,6827,6829,6833,6841,6857,6863,6869,6871,6883,6899,6907,6911,6917,6947,6949,6959,6961,6967,6971,6977,6983,6991,6997,7001,7013,7019,7027,7039,7043,7057,7069,7079,7103,7109,7121,7127,7129,7151,7159,7177,7187,7193,7207,7211,7213,7219,7229,7237,7243,7247,7253,7283,7297,7307,7309,7321,7331,7333,7349,7351,7369,7393,7411,7417,7433,7451,7457,7459,7477,7481,7487,7489,7499,7507,7517,7523,7529,7537,7541,7547,7549,7559,7561,7573,7577,7583,7589,7591,7603,7607,7621,7639,7643,7649,7669,7673,7681,7687,7691,7699,7703,7717,7723,7727,7741,7753,7757,7759,7789,7793,7817,7823,7829,7841,7853,7867,7873,7877,7879,7883,7901,7907,7919,7927,7933,7937,7949,7951,7963,7993,8009,8011,8017,8039,8053,8059,8069,8081,8087,8089,8093,8101,8111,8117,8123,8147,8161,8167,8171,8179,8191,8209,8219,8221,8231,8233,8237,8243,8263,8269,8273,8287,8291,8293,8297,8311,8317,8329,8353,8363,8369,8377,8387,8389,8419,8423,8429,8431,8443,8447,8461,8467,8501,8513,8521,8527,8537,8539,8543,8563,8573,8581,8597,8599,8609,8623,8627,8629,8641,8647,8663,8669,8677,8681,8689,8693,8699,8707,8713,8719,8731,8737,8741,8747,8753,8761,8779,8783,8803,8807,8819,8821,8831,8837,8839,8849,8861,8863,8867,8887,8893,8923,8929,8933,8941,8951,8963,8969,8971,8999,9001,9007,9011,9013,9029,9041,9043,9049,9059,9067,9091,9103,9109,9127,9133,9137,9151,9157,9161,9173,9181,9187,9199,9203,9209,9221,9227,9239,9241,9257,9277,9281,9283,9293,9311,9319,9323,9337,9341,9343,9349,9371,9377,9391,9397,9403,9413,9419,9421,9431,9433,9437,9439,9461,9463,9467,9473,9479,9491,9497,9511,9521,9533,9539,9547,9551,9587,9601,9613,9619,9623,9629,9631,9643,9649,9661,9677,9679,9689,9697,9719,9721,9733,9739,9743,9749,9767,9769,9781,9787,9791,9803,9811,9817,9829,9833,9839,9851,9857,9859,9871,9883,9887,9901,9907,9923,9929,9931,9941,9949,9967,9973,10007,10009,10037,10039,10061,10067,10069,10079,10091,10093,10099,10103,10111,10133,10139,10141,10151,10159,10163,10169,10177,10181,10193,10211,10223,10243,10247,10253,10259,10267,10271,10273,10289,10301,10303,10313,10321,10331,10333,10337,10343,10357,10369,10391,10399,10427,10429,10433,10453,10457,10459,10463,10477,10487,10499,10501,10513,10529,10531,10559,10567,10589,10597,10601,10607,10613,10627,10631,10639,10651,10657,10663,10667,10687,10691,10709,10711,10723,10729,10733,10739,10753,10771,10781,10789,10799,10831,10837,10847,10853,10859,10861,10867,10883,10889,10891,10903,10909,10937,10939,10949,10957,10973,10979,10987,10993,11003,11027,11047,11057,11059,11069,11071,11083,11087,11093,11113,11117,11119,11131,11149,11159,11161,11171,11173,11177,11197,11213,11239,11243,11251,11257,11261,11273,11279,11287,11299,11311,11317,11321,11329,11351,11353,11369,11383,11393,11399,11411,11423,11437,11443,11447,11467,11471,11483,11489,11491,11497,11503,11519,11527,11549,11551,11579,11587,11593,11597,11617,11621,11633,11657,11677,11681,11689,11699,11701,11717,11719,11731,11743,11777,11779,11783,11789,11801,11807,11813,11821,11827,11831,11833,11839,11863,11867,11887,11897,11903,11909,11923,11927,11933,11939,11941,11953,11959,11969,11971,11981,11987,12007,12011,12037,12041,12043,12049,12071,12073,12097,12101,12107,12109,12113,12119,12143,12149,12157,12161,12163,12197,12203,12211,12227,12239,12241,12251,12253,12263,12269,12277,12281,12289,12301,12323,12329,12343,12347,12373,12377,12379,12391,12401,12409,12413,12421,12433,12437,12451,12457,12473,12479,12487,12491,12497,12503,12511,12517,12527,12539,12541,12547,12553,12569,12577,12583,12589,12601,12611,12613,12619,12637,12641,12647,12653,12659,12671,12689,12697,12703,12713,12721,12739,12743,12757,12763,12781,12791,12799,12809,12821,12823,12829,12841,12853,12889,12893,12899,12907,12911,12917,12919,12923,12941,12953,12959,12967,12973,12979,12983,13001,13003,13007,13009,13033,13037,13043,13049,13063,13093,13099,13103,13109,13121,13127,13147,13151,13159,13163,13171,13177,13183,13187,13217,13219,13229,13241,13249,13259,13267,13291,13297,13309,13313,13327,13331,13337,13339,13367,13381,13397,13399,13411,13417,13421,13441,13451,13457,13463,13469,13477,13487,13499,13513,13523,13537,13553,13567,13577,13591,13597,13613,13619,13627,13633,13649,13669,13679,13681,13687,13691,13693,13697,13709,13711,13721,13723,13729,13751,13757,13759,13763,13781,13789,13799,13807,13829,13831,13841,13859,13873,13877,13879,13883,13901,13903,13907,13913,13921,13931,13933,13963,13967,13997,13999,14009,14011,14029,14033,14051,14057,14071,14081,14083,14087,14107,14143,14149,14153,14159,14173,14177,14197,14207,14221,14243,14249,14251,14281,14293,14303,14321,14323,14327,14341,14347,14369,14387,14389,14401,14407,14411,14419,14423,14431,14437,14447,14449,14461,14479,14489,14503,14519,14533,14537,14543,14549,14551,14557,14561,14563,14591,14593,14621,14627,14629,14633,14639,14653,14657,14669,14683,14699,14713,14717,14723,14731,14737,14741,14747,14753,14759,14767,14771,14779,14783,14797,14813,14821,14827,14831,14843,14851,14867,14869,14879,14887,14891,14897,14923,14929,14939,14947,14951,14957,14969,14983,15013,15017,15031,15053,15061,15073,15077,15083,15091,15101,15107,15121,15131,15137,15139,15149,15161,15173,15187,15193,15199,15217,15227,15233,15241,15259,15263,15269,15271,15277,15287,15289,15299,15307,15313,15319,15329,15331,15349,15359,15361,15373,15377,15383,15391,15401,15413,15427,15439,15443,15451,15461,15467,15473,15493,15497,15511,15527,15541,15551,15559,15569,15581,15583,15601,15607,15619,15629,15641,15643,15647,15649,15661,15667,15671,15679,15683,15727,15731,15733,15737,15739,15749,15761,15767,15773,15787,15791,15797,15803,15809,15817,15823,15859,15877,15881,15887,15889,15901,15907,15913,15919,15923,15937,15959,15971,15973,15991,16001,16007,16033,16057,16061,16063,16067,16069,16073,16087,16091,16097,16103,16111,16127,16139,16141,16183,16187,16189,16193,16217,16223,16229,16231,16249,16253,16267,16273,16301,16319,16333,16339,16349,16361,16363,16369,16381,16411,16417,16421,16427,16433,16447,16451,16453,16477,16481,16487,16493,16519,16529,16547,16553,16561,16567,16573,16603,16607,16619,16631,16633,16649,16651,16657,16661,16673,16691,16693,16699,16703,16729,16741,16747,16759,16763,16787,16811,16823,16829,16831,16843,16871,16879,16883,16889,16901,16903,16921,16927,16931,16937,16943,16963,16979,16981,16987,16993,17011,17021,17027,17029,17033,17041,17047,17053,17077,17093,17099,17107,17117,17123,17137,17159,17167,17183,17189,17191,17203,17207,17209,17231,17239,17257,17291,17293,17299,17317,17321,17327,17333,17341,17351,17359,17377,17383,17387,17389,17393,17401,17417,17419,17431,17443,17449,17467,17471,17477,17483,17489,17491,17497,17509,17519,17539,17551,17569,17573,17579,17581,17597,17599,17609,17623,17627,17657,17659,17669,17681,17683,17707,17713,17729,17737,17747,17749,17761,17783,17789,17791,17807,17827,17837,17839,17851,17863,17881,17891,17903,17909,17911,17921,17923,17929,17939,17957,17959,17971,17977,17981,17987,17989,18013,18041,18043,18047,18049,18059,18061,18077,18089,18097,18119,18121,18127,18131,18133,18143,18149,18169,18181,18191,18199,18211,18217,18223,18229,18233,18251,18253,18257,18269,18287,18289,18301,18307,18311,18313,18329,18341,18353,18367,18371,18379,18397,18401,18413,18427,18433,18439,18443,18451,18457,18461,18481,18493,18503,18517,18521,18523,18539,18541,18553,18583,18587,18593,18617,18637,18661,18671,18679,18691,18701,18713,18719,18731,18743,18749,18757,18773,18787,18793,18797,18803,18839,18859,18869,18899,18911,18913,18917,18919,18947,18959,18973,18979,19001,19009,19013,19031,19037,19051,19069,19073,19079,19081,19087,19121,19139,19141,19157,19163,19181,19183,19207,19211,19213,19219,19231,19237,19249,19259,19267,19273,19289,19301,19309,19319,19333,19373,19379,19381,19387,19391,19403,19417,19421,19423,19427,19429,19433,19441,19447,19457,19463,19469,19471,19477,19483,19489,19501,19507,19531,19541,19543,19553,19559,19571,19577,19583,19597,19603,19609,19661,19681,19687,19697,19699,19709,19717,19727,19739,19751,19753,19759,19763,19777,19793,19801,19813,19819,19841,19843,19853,19861,19867,19889,19891,19913,19919,19927,19937,19949,19961,19963,19973,19979,19991,19993,19997,20011,20021,20023,20029,20047,20051,20063,20071,20089,20101,20107,20113,20117,20123,20129,20143,20147,20149,20161,20173,20177,20183,20201,20219,20231,20233,20249,20261,20269,20287,20297,20323,20327,20333,20341,20347,20353,20357,20359,20369,20389,20393,20399,20407,20411,20431,20441,20443,20477,20479,20483,20507,20509,20521,20533,20543,20549,20551,20563,20593,20599,20611,20627,20639,20641,20663,20681,20693,20707,20717,20719,20731,20743,20747,20749,20753,20759,20771,20773,20789,20807,20809,20849,20857,20873,20879,20887,20897,20899,20903,20921,20929,20939,20947,20959,20963,20981,20983,21001,21011,21013,21017,21019,21023,21031,21059,21061,21067,21089,21101,21107,21121,21139,21143,21149,21157,21163,21169,21179,21187,21191,21193,21211,21221,21227,21247,21269,21277,21283,21313,21317,21319,21323,21341,21347,21377,21379,21383,21391,21397,21401,21407,21419,21433,21467,21481,21487,21491,21493,21499,21503,21517,21521,21523,21529,21557,21559,21563,21569,21577,21587,21589,21599,21601,21611,21613,21617,21647,21649,21661,21673,21683,21701,21713,21727,21737,21739,21751,21757,21767,21773,21787,21799,21803,21817,21821,21839,21841,21851,21859,21863,21871,21881,21893,21911,21929,21937,21943,21961,21977,21991,21997,22003,22013,22027,22031,22037,22039,22051,22063,22067,22073,22079,22091,22093,22109,22111,22123,22129,22133,22147,22153,22157,22159,22171,22189,22193,22229,22247,22259,22271,22273,22277,22279,22283,22291,22303,22307,22343,22349,22367,22369,22381,22391,22397,22409,22433,22441,22447,22453,22469,22481,22483,22501,22511,22531,22541,22543,22549,22567,22571,22573,22613,22619,22621,22637,22639,22643,22651,22669,22679,22691,22697,22699,22709,22717,22721,22727,22739,22741,22751,22769,22777,22783,22787,22807,22811,22817,22853,22859,22861,22871,22877,22901,22907,22921,22937,22943,22961,22963,22973,22993,23003,23011,23017,23021,23027,23029,23039,23041,23053,23057,23059,23063,23071,23081,23087,23099,23117,23131,23143,23159,23167,23173,23189,23197,23201,23203,23209,23227,23251,23269,23279,23291,23293,23297,23311,23321,23327,23333,23339,23357,23369,23371,23399,23417,23431,23447,23459,23473,23497,23509,23531,23537,23539,23549,23557,23561,23563,23567,23581,23593,23599,23603,23609,23623,23627,23629,23633,23663,23669,23671,23677,23687,23689,23719,23741,23743,23747,23753,23761,23767,23773,23789,23801,23813,23819,23827,23831,23833,23857,23869,23873,23879,23887,23893,23899,23909,23911,23917,23929,23957,23971,23977,23981,23993,24001,24007,24019,24023,24029,24043,24049,24061,24071,24077,24083,24091,24097,24103,24107,24109,24113,24121,24133,24137,24151,24169,24179,24181,24197,24203,24223,24229,24239,24247,24251,24281,24317,24329,24337,24359,24371,24373,24379,24391,24407,24413,24419,24421,24439,24443,24469,24473,24481,24499,24509,24517,24527,24533,24547,24551,24571,24593,24611,24623,24631,24659,24671,24677,24683,24691,24697,24709,24733,24749,24763,24767,24781,24793,24799,24809,24821,24841,24847,24851,24859,24877,24889,24907,24917,24919,24923,24943,24953,24967,24971,24977,24979,24989,25013,25031,25033,25037,25057,25073,25087,25097,25111,25117,25121,25127,25147,25153,25163,25169,25171,25183,25189,25219,25229,25237,25243,25247,25253,25261,25301,25303,25307,25309,25321,25339,25343,25349,25357,25367,25373,25391,25409,25411,25423,25439,25447,25453,25457,25463,25469,25471,25523,25537,25541,25561,25577,25579,25583,25589,25601,25603,25609,25621,25633,25639,25643,25657,25667,25673,25679,25693,25703,25717,25733,25741,25747,25759,25763,25771,25793,25799,25801,25819,25841,25847,25849,25867,25873,25889,25903,25913,25919,25931,25933,25939,25943,25951,25969,25981,25997,25999,26003,26017,26021,26029,26041,26053,26083,26099,26107,26111,26113,26119,26141,26153,26161,26171,26177,26183,26189,26203,26209,26227,26237,26249,26251,26261,26263,26267,26293,26297,26309,26317,26321,26339,26347,26357,26371,26387,26393,26399,26407,26417,26423,26431,26437,26449,26459,26479,26489,26497,26501,26513,26539,26557,26561,26573,26591,26597,26627,26633,26641,26647,26669,26681,26683,26687,26693,26699,26701,26711,26713,26717,26723,26729,26731,26737,26759,26777,26783,26801,26813,26821,26833,26839,26849,26861,26863,26879,26881,26891,26893,26903,26921,26927,26947,26951,26953,26959,26981,26987,26993,27011,27017,27031,27043,27059,27061,27067,27073,27077,27091,27103,27107,27109,27127,27143,27179,27191,27197,27211,27239,27241,27253,27259,27271,27277,27281,27283,27299,27329,27337,27361,27367,27397,27407,27409,27427,27431,27437,27449,27457,27479,27481,27487,27509,27527,27529,27539,27541,27551,27581,27583,27611,27617,27631,27647,27653,27673,27689,27691,27697,27701,27733,27737,27739,27743,27749,27751,27763,27767,27773,27779,27791,27793,27799,27803,27809,27817,27823,27827,27847,27851,27883,27893,27901,27917,27919,27941,27943,27947,27953,27961,27967,27983,27997,28001,28019,28027,28031,28051,28057,28069,28081,28087,28097,28099,28109,28111,28123,28151,28163,28181,28183,28201,28211,28219,28229,28277,28279,28283,28289,28297,28307,28309,28319,28349,28351,28387,28393,28403,28409,28411,28429,28433,28439,28447,28463,28477,28493,28499,28513,28517,28537,28541,28547,28549,28559,28571,28573,28579,28591,28597,28603,28607,28619,28621,28627,28631,28643,28649,28657,28661,28663,28669,28687,28697,28703,28711,28723,28729,28751,28753,28759,28771,28789,28793,28807,28813,28817,28837,28843,28859,28867,28871,28879,28901,28909,28921,28927,28933,28949,28961,28979,29009,29017,29021,29023,29027,29033,29059,29063,29077,29101,29123,29129,29131,29137,29147,29153,29167,29173,29179,29191,29201,29207,29209,29221,29231,29243,29251,29269,29287,29297,29303,29311,29327,29333,29339,29347,29363,29383,29387,29389,29399,29401,29411,29423,29429,29437,29443,29453,29473,29483,29501,29527,29531,29537,29567,29569,29573,29581,29587,29599,29611,29629,29633,29641,29663,29669,29671,29683,29717,29723,29741,29753,29759,29761,29789,29803,29819,29833,29837,29851,29863,29867,29873,29879,29881,29917,29921,29927,29947,29959,29983,29989};\nint shu[1000000];\nint num[1000000];\nint ci[1000000],n,x,y;\nlong long ans=1000000000;\nint  gcd(int a, int b) {\n\treturn !b ? a : gcd(b, a % b);\n}\nint main() {\n\tint kol;\n\tcin>>n>>x>>y;\n\tkol=x;\n\tfor(int i=0; i<n; i++) {\n\t\tscanf(\"%d\",&num[i]);\n\t}\n\tint b[10000],kl=0;\n\tfor(int d=0;; d++) {\n\t\tif(x==1) {\n\t\t\tbreak;\n\t\t}\n\t\tif(x%prm[d]==0) {\n\t\t\tb[kl]=prm[d];\n\t\t\tkl++;\n\t\t}\n\t\twhile(x%prm[d]==0) {\n\t\t\tshu[prm[d]]+=y;\n\t\t\tx/=prm[d];\n\t\t}\n\t}\n\tfor(int i=0; i<n; i++) {\n\t\tint tot=-1;\n\t\tif(gcd(num[i],kol)==1) {\n\t\t\tcontinue;\n\t\t} else {\n\t\t\tfor(int d=0;; d++) {\n\t\t\t\tif(num[i]==1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\twhile(num[i]%prm[d]==0) {\n\t\t\t\t\tci[prm[d]]+=1;\n\t\t\t\t\tnum[i]/=prm[d];\n\t\t\t\t}\n\t\t\t}\n\t\t\tint lp=0;\n\t\t\tfor(int d=0; d<kl; d++) {\n\t\t\t\tlp=floor(shu[b[d]]/ci[b[d]]);\n\t\t\t\tif(lp>tot) {\n\t\t\t\t\ttot=lp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout<<tot<<endl;\n\t\tif(tot<=ans) {\n\t\t\tans=tot;\n\t\t}\n\t}\n\tif(ans!=1000000000)\n\t\tcout<<ans;\n\telse\n\t\tcout<<\"-1\";\n\treturn 0;\n}\n```\n\n\u4f46\u662f\uff01\uff0c\u53ea\u670920\u5206\uff01\u51fa\u73b0\u4e868\u4e2aRE\n\u7ecf\u8fc7\u51e0\u4e2a\u5c0f\u65f6\u7684\u8c03\u8bd5\u540e\uff0c\u53d1\u73b0\u6211\uff0c\u6211\uff0c\u6211\u8868\u6253\u592a\u957f\u4e86\n\u4e8e\u662f\u5728\u8d28\u6570\u53e6\u5916\u5224\u65ad\u540e\u5b8c\u7f8eAC\u4e86\uff1b\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<set>\n#include<string>\n#include<stack>\n#include<queue>\nusing namespace std;\nint prm[5000]; \nint shu[30500];\nint num;\nint ci[30500], n, x, y;\nint  ans = 0x7fffffff;\nbool quick_prime(int x) {\n\tif(x==2||x==3) return true;\n\tif(x%6!=1&&x%6!=5) return false;\n\tfor(int i=5; i<=sqrt(x); i+=6)\n\t\tif(x%i==0||x%(i+2)==0) return false;\n\treturn true;\n}\nint main() {\n\tint mo=0;\n\tfor(int i=2;i<30000;i++){\n\t\tif(quick_prime(i)){\n\t\t\tprm[mo++]=i;\n\t\t}\n\t}\n\tcin >> n >> x >> y;\n\tint b[10000], kl = 0;\n\tfor (register int d = 0; d<mo; d++) {\n\t\tif (x <= 1) {\n\t\t\tbreak;\n\t\t}\n\t\tif (x%prm[d] == 0) {\n\t\t\tb[kl] = prm[d];\n\t\t\tkl++;\n\t\t}\n\t\twhile (x%prm[d] == 0) {\n\t\t\tshu[prm[d]] += y;\n\t\t\tx /= prm[d];\n\t\t}\n\t}//\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u56e0\u4e3ax\u5728\u540e\u6587\u4e0d\u518d\u51fa\u73b0\uff0c\u6240\u4ee5\u65e0\u9700\u5907\u4efd\uff0cb\u6570\u7ec4\u548ckl\u7528\u4e8e\u5feb\u901f\u6307\u5411x\u6240\u6709\u7684\u8d28\u56e0\u6570\uff0c\u907f\u514d\u5faa\u73af3w\u6b21\n\tfor (register int i = 0; i<n; i++) {\n\t\tcin>>num;\n\t\tmemset(ci,0,sizeof(ci));\n\t\tfor (register int d = 0; d<mo; d++) {\n\t\t\tif (num <= 1) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\twhile (num % prm[d] == 0) {\n\t\t\t\tci[prm[d]] += 1;\n\t\t\t\tnum /= prm[d];\n\t\t\t}\n\t\t}//\u5206\u89e3\u8d28\u56e0\u6570\n\t\tint lp = 0;\n\t\tfor (register int d = 0; d<kl; d++) {\n\t\t\tif (ci[b[d]] == 0) {\n\t\t\t\tlp = ans;\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tlp =lp>ceil((shu[b[d]] *1.0)/ ci[b[d]])? lp: ceil((shu[b[d]] * 1.0) / ci[b[d]]);//\u7531\u4e8e\u62c5\u5fc3max\u51fd\u6570\u7528\u4e0d\u4e86\u5c31\u7528\u4e09\u76ee\u4e86\n\t\t\t}\n\t\t}\n\t\tif (lp <ans) {\n\t\t\tans = lp;\n\t\t};\n\t}\n\tif (ans != 0x7fffffff)\n\t\tcout << ans;\n\telse\n\t\tcout << \"-1\";\n\treturn 0;\n}\n```\n\n\u70b9\u4e2a\u8d5e\u5427\uff0c\u8c22\u8c22",
        "postTime": 1565483502,
        "uid": 234271,
        "name": "\u8c2c\u60a0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1069 \u3010\u7ec6\u80de\u5206\u88c2\u3011"
    },
    {
        "content": "\u5f88\u7ecf\u5178\u7684\u6570\u5b66\u9898\uff0c\u4e0d\u9700\u8981\u6709\u5f88\u9ad8\u7684\u6570\u5b66\u80fd\u529b\uff0c\u53ea\u9700\u8981\u6709\u5c0f\u5b66\u5965\u6570\u7684\u6c34\u5e73\uff08\u51fa\u5c40\uff09\u5c31\u884c\u4e86\n```\n \u90a3\u4f60\u8fd8\u63d0\u4ea4\u4e86\u8fd9\u4e48\u591a\u904d!\n```\n\u597d\u5427\u6211\u627f\u8ba4\u6211\u5f88\u5f31\n\n\n-------------------\n### \u9898\u76ee\u5927\u610f\uff1a\n\u6709n\u4e2a\u6570,\u6bcf\u4e2a\u6570\u6bcf\u4e2a\u65f6\u95f4\u5355\u4f4d\u53ef\u4ee5\u4e58si\uff0c\u95ee\u591a\u5c11\u4e2a\u65f6\u95f4\u5355\u4f4d\u540e\u8fd9\u4e2a\u6570\u80fd\u88abM\u6574\u9664\n\n**\u9898\u76ee\u7b80\u5355\uff0c\u65b9\u6cd5\u4e5f\u5f88\u7b80\u5355**\n### \u89e3\u9898\u601d\u8def\uff1a\n- \u770b\u5230\u9898\u76ee\u7684\u8f93\u5165\u6570\u636e\uff0c\u89c2\u5bdf\u4e00\u4e0b\uff1aM\u4e3a\u4ec0\u4e48\u8981\u5c06\u5b83\u62c6\u4e3a\u5e42\u7684\u5f62\u5f0f\u7ed9\u51fa\uff1f\u4e0d\u53ea\u662f\u5927\u5c0f\u7684\u95ee\u9898\uff0c\u8fd9\u91cc\u76f4\u63a5\u63d0\u793a\u6211\u4eec\u8fdb\u884c\u5206\u89e3\u8d28\u56e0\u6570\n- \u5c0f\u5b66\u5965\u6570\u767b\u573a\uff1a\n - \u5982\u679cA\u88abB\u6574\u9664\uff0c\u90a3\u4e48B\u7684\u8d28\u56e0\u5b50A\u5168\u90e8\u5305\u62ec\n - A\u7684n\u6b21\u65b9\uff0c\u4e0d\u8bban\uff08n>0\uff09\u6709\u591a\u5927\uff0c\u8d28\u56e0\u5b50\u7684\u79cd\u7c7b\u6c38\u8fdc\u7b49\u4e8eA\u7684\u8d28\u56e0\u5b50\u7684\u79cd\u7c7b\uff0c\u4f8b\uff1a\u5f53A\u7b49\u4e8e2\uff0c\u4e0d\u8bba\u662f2\u7684\u591a\u5c11\u6b21\u65b9\uff0c\u6c38\u8fdc\u53ea\u67092\u8fd9\u4e00\u79cd\u8d28\u56e0\u5b50\n- \u7a0b\u5e8f\u601d\u8def\uff1a\n - \u9996\u5148\u5bf9M\u8fdb\u884c\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u7136\u540e\u5bf9S\u8fdb\u884c\u5206\u89e3\u8d28\u56e0\u6570\n - \u5982\u679cS\u7684\u8d28\u56e0\u6570\u79cd\u7c7bM\u5e76\u6ca1\u6709\u5168\u90e8\u5305\u542b\uff0c\u90a3\u4e48\u8fd9\u79cd\u7ec6\u80de\u6c38\u8fdc\u65e0\u6cd5\u8fbe\u5230\u8981\u6c42\n - \u5426\u5219\u6700\u5c11\u65f6\u95f4\u4e3amax(ans,(si>mi?1:mi/si))\n - \u6700\u540e\u8f93\u51fa\u6240\u6709\u6570\u4e2d\u7528\u65f6\u6700\u5c11\u7684\uff0c\u90fd\u4e0d\u6ee1\u8db3\u8981\u6c42\u76f4\u63a5\u8d34-1\n\n\n------------\n### \u7a0b\u5e8f\u90e8\u5206\n```\n\u521d\u59cb\u5316\u90e8\u5206\n```\n```cpp\n#include<bits/stdc++.h>\n#define M (1<<30)\nusing namespace std;\nint n,m1,m2,s,a[10005],sta[10005],pop=0;\n//a\u4fdd\u7559m\u7684\u5206\u89e3\u8d28\u56e0\u6570\uff0csta\u4fdd\u7559\u6bcf\u4e2as\u7684\u5206\u89e3\u8d28\u56e0\u6570\n```\n```\n\u5bf9m\u8fdb\u884c\u5206\u89e3\u8d28\u56e0\u6570\u64cd\u4f5c\n```\n```\nvoid init()\n{\n\tmemset(a,0,sizeof(a));int f=m1;\n\tfor(int i=2;i<=f;i++){\n\t\tif(m1%i==0&&!a[i])pop++,sta[pop]=i;\n\t\twhile(m1%i==0){\n\t\t\ta[i]+=m2;\n\t\t\tm1/=i;\n\t\t}\n\t}\n}\n```\n```\n\u5224\u65ad\u6709\u591a\u5c11\u4e2a\u8d28\u56e0\u5b50\n```\n```\nint work(int x){\n\tint sum=0;\n\tint f=s;\n\twhile(f%x==0)\n\t  sum++,f/=x;\n\treturn sum;\n}\n```\n```\n\u4e3b\u7a0b\u5e8f\u5982\u4e0b\n```\n```\nint main()\n{\n\tscanf(\"%d\",&n);\n\tscanf(\"%d%d\",&m1,&m2);\n\tif(m1==1){cout<<\"0\";return 0;}\n\tinit();int ans=M;\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&s);bool flag=true;int Max=-1;\n\t\tfor(int j=1;j<=pop;j++)\n\t\t  {\n\t\t  \tint k=work(sta[j]);\n\t\t  \tif(!k){flag=false;break;}\n\t\t  \tif(k>=a[sta[j]]){Max=max(Max,1);}\n\t\t\telse Max=max(Max,a[sta[j]]/k+(a[sta[j]]%k==0?0:1));\n\t\t  }\n\t\tif(flag)\n\t\t  ans=min(ans,Max);\n\t}\n\tif(ans==M)cout<<\"-1\";\n\telse cout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1542288265,
        "uid": 119261,
        "name": "7KByte",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1069 \u3010\u7ec6\u80de\u5206\u88c2\u3011"
    },
    {
        "content": "\u6b64\u9898\u67092\u5904\u5751\n\n1.\u82e5\u8bd5\u7ba1\u6570\u4e3a1\uff0c\u76f4\u63a5\u7b26\u5408\u6761\u4ef6\n\n2.m2\u5e94\u5728\u8ba1\u7b97\u8d28\u56e0\u6570\u4e2a\u6570\u65f6\u4e58\uff0c\u800c\u975e\u6700\u540e\u3002\u8d77\u521d\u6211\u5c31\u662f\u56e0\u4e3a\u5148\u627e\u4e2a\u6570\u4e3am1\u65f6\u7684\u6700\u5c0f\u503c\uff0c\u518d\u4e58m2\uff0c\u4e8e\u662f\u53ea\u5f97\u4e8660\u5206\u3002 \u53cd\u4f8b\u5982\u4e0b\uff1a\n\n\u8bd5\u7ba1\u6570\uff1a \uff08x \\* y\uff09^ 3   \u800c\u67d0\u79cd\u7ec6\u80de\u5206\u88c2\u901f\u5ea6\uff1a(x \\* y) ^ 5\n\n\u5b9e\u9645\u4e0a\u53ea\u97001\u6b21\uff0c\u800c\u6309\u7167\u5982\u4e0a60\u5206\u7684\u7a0b\u5e8f\uff0c\u6bcf\u4e00\u4e2am1\u90fd\u4f1a\u6709(x \\* y) ^ 4 \u6d6a\u8d39\u6389\uff0c\u5bfc\u81f4WA.\n\n// \u5f53\u7136\uff0c\u548c\u6211\u72af\u76f8\u540c\u9519\u8bef\u7684\u540c\u5b66\u6216\u8bb8\u4e0d\u4f1a\u6709\u5427\n\n\u597d\u5566\uff0c\u9644\u4e0aC++\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nint n,m1,m2,ans=150000; \nint i,j;\nint s[10001],f[10001];\nbool p[30001];\nint prime[501][3],size=0;\nint main()\n{\n    memset(p,1,sizeof(p));\n    memset(f,0,sizeof(f));\n    scanf(\"%d%d%d\",&n,&m1,&m2);\n    if (m1 == 1) { printf(\"0\"); return 0; }  //1.\u82e5\u8bd5\u7ba1\u6570\u4e3a1\uff0c\u76f4\u63a5\u7b26\u5408\u6761\u4ef6 \n    for (i=1; i<=n; i++)\n      scanf(\"%d\",&s[i]);\n    int xx=floor(sqrt(m1));\n    for (i=2; i<=xx; i++) //\u627e\u8d28\u56e0\u6570 \n      if (p[i])\n      {\n            if (m1 % i == 0)\n            {\n                prime[++size][1]=i;\n                prime[size][2]=1;\n          }\n            int tim=2;\n            while (tim*i <= m1)\n            {\n                  p[tim*i]=0;\n                  tim++;\n            }\n      }\n    for (i=1; i<=size; i++) //\u627e\u8d28\u56e0\u6570\u4e2a\u6570 \n    {\n        int num=prime[i][1];\n        while (m1 % (num*prime[i][1]) == 0)\n        {\n            num*=prime[i][1];\n            prime[i][2]++;\n        }\n        prime[i][2] *= m2;\n    }\n    if (size == 0) //\u82e5\u4e3a\u8d28\u6570\uff0c\u8d28\u56e0\u6570\u4e3a\u672c\u8eab \n    {\n        prime[++size][1] = m1;\n        prime[size][2] = m2;\n    }\n    for (i=1; i<=n; i++)\n    {\n        for (j=1; j<=size; j++)\n        {\n            if (s[i] % prime[j][1] != 0) //\u82e5\u65e0\u67d0\u4e2a\u56e0\u6570\uff0c\u76f4\u63a5break \n            {\n                f[i] = 150000; //\u6781\u5927\u503c : 10000*log 2 30000 \n                break;\n            }\n            int tim=1;\n            long long num=prime[j][1];\n            while (s[i] % (num*prime[j][1]) == 0)\n            {\n                num*=prime[j][1];\n                tim++;\n            }\n            int an=(prime[j][2]-1) / tim + 1; //\u7b49\u4ef7\u4e8eceil\u51fd\u6570 \n            if (an > f[i]) f[i] = an;\n        }\n    }   \n    for (i=1; i<=n; i++)\n      if (ans > f[i]) ans=f[i];\n    if (ans == 150000) printf(\"-1\"); \n    else printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1472195002,
        "uid": 19884,
        "name": "\u7fe0\u7af9\u53f6\u98de",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1069 \u3010\u7ec6\u80de\u5206\u88c2\u3011"
    },
    {
        "content": "\t\u849f\u84bb\u7684\u7b2c\u4e8c\u7bc7\u9898\u89e3~~~~\n    \n    \u53d1\u73b0\u9898\u89e3\u4e4b\u524d\u4e0d\u591f\u5b8c\u5584\uff0c\u4fee\u6539\u4e00\u4e0b~~\n      \n- **\u8fd9\u4e00\u9898\u5176\u5b9e\u5c31\u662f\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u628a\u8bd5\u7ba1\u6570\u548c\u6bcf\u79cd\u7ec6\u80de\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u8bd5\u7ba1\u6709\u7684\u8d28\u56e0\u6570\u7ec6\u80de\u4e5f\u8981\u6709\uff0c\u624d\u80fd\u5728\u4e00\u6bb5\u65f6\u95f4\u540e\u88c5\u5165\u8bd5\u7ba1\u3002**\n  \n- \u5982\u679cA\u88abB\u6574\u9664\uff0c\u90a3\u4e48B\u7684\u8d28\u56e0\u5b50A\u5168\u90e8\u5305\u62ec\n- A\u7684n\u6b21\u65b9\uff0c\u4e0d\u8bban\uff08n>0\uff09\u6709\u591a\u5927\uff0c\u8d28\u56e0\u5b50\u7684\u79cd\u7c7b\u6c38\u8fdc\u7b49\u4e8eA\u7684\u8d28\u56e0\u5b50\u7684\u79cd\u7c7b\uff0c\u4f8b\uff1a\u5f53A\u7b49\u4e8e2\uff0c\u4e0d\u8bba\u662f2\u7684\u591a\u5c11\u6b21\u65b9\uff0c\u6c38\u8fdc\u53ea\u67092\u8fd9\u4e00\u79cd\u8d28\u56e0\u5b50\n\n------------\n\n- \u5206\u89e3\u8d28\u56e0\u6570\uff1a\n \u5f53\u8fd8\u80fd\u5206\u89e3\u65f6\uff0c\u7ee7\u7eed\u5206\u89e3\uff1b\n\n```cpp\n\twhile(x%i==0)//\u5206\u89e3\u8d28\u56e0\u6570\n\t{\n    \tx/=i;\n    \ta[top].count++;\n\t}\n```\n\n------------\n\nAC\t\u4ee3\u7801\uff1a\n```\n    #include<cstdio>\n    #include<iostream>\n    #define t 2147483647 //t\u7684\u503c\u4e3a2147483647\n    using namespace std;\n    struct node{\n        int number,count;\n    }a[101];\n    int m1,m2,n,top;\n    int main()\n    {\n        scanf(\"%d%d%d\",&n,&m1,&m2);\n        int x=m1;\n        for(int i=2;i<=x;i++)\n        {\n            if(x%i==0)\n            {\n                a[++top].number=i;\n                while(x%i==0)//\u5206\u89e3\u8d28\u56e0\u6570\n                {\n                    x/=i;\n                    a[top].count++;//\u627e\u51fam1\uff1b\n                }\n                a[top].count*=m2;//\u8bd5\u7ba1\u603b\u6570\n            }\n        }\n        int minn=t;\n        for(int i=1;i<=n;i++)\n        {\n            int m;\n            scanf(\"%d\",&m);\n            bool b=true;\n            for(int j=1;j<=top;j++)\n            \tb=b&&(m%a[j].number==0);\n            if(b)\n            {\n                int maxx=0;\n                for(int j=1;j<=top;j++)\n                {\n                    int ans=0,mx=m;\n                    while(mx%a[j].number==0)//\u5206\u89e3\u8d28\u56e0\u6570\n                    {\n                        mx/=a[j].number;\n                        ans++;\n                    }\n                    ans=(a[j].count-1)/ans+1;\n                    maxx=max(maxx,ans);\n                }\n                minn=min(minn,maxx);//\u6700\u5c11\u79d2\u65f6\u53ef\u4ee5\u88c5\u8fdb\u8bd5\u7ba1\n            }\n        }\n        if(minn==t)\n        \tprintf(\"-1\");//\u5982\u679c\u6ca1\u6709\u6539\u53d8\uff0c\u8f93\u51fa-1\n        else \n        \tprintf(\"%d\",minn);//\u8f93\u51fa\u7ed3\u679c\n        return 0;\n    }\n```",
        "postTime": 1546153305,
        "uid": 114791,
        "name": "D\u611a\u8005",
        "ccfLevel": 0,
        "title": "\u7ec6\u80de\u5206\u88c2   \u9898\u89e3"
    },
    {
        "content": "\u53d1\u73b0\u6ca1\u6709Pascal\u9898\u89e3\uff0c\u4e8e\u662f\u6765\u4e00\u53d1\u3002\n\n\u5c06m1\u5206\u89e3\u8d28\u56e0\u6570\uff0cm\u7684\u8d28\u56e0\u6570\u4e2a\u6570\u5373\u53ef\u6c42\u5f97\u3002\n\n\u518d\u5bf9\u6bcf\u79cd\u7ec6\u80de\uff0c\u6c42\u5b83\u5305\u542bm\u6bcf\u4e2a\u8d28\u56e0\u5b50\u4e2a\u6570\u3002\n\n\u6570\u636e\u4e0d\u5927\uff0c\u8f7b\u677e\u65e0\u6bd4\uff0c\u4f46\u5199\u8d77\u6765\u5f88\u70e6\u3002\n\n\u6807\u7a0b:\n\n```cpp\nuses math;\nvar a,b:array[1..10000] of longint;\n     k,i,n,m1,m2,j,p,q,x,ans:longint; f,flag:boolean;\nfunction cl(a,b:longint):longint;\nbegin\n if b mod a=0 then exit(b div a); exit(b div a+1);\nend;\nbegin\n read(n,m1,m2);\n k:=0;\n i:=2;\n repeat//\u5206\u89e3\u8d28\u56e0\u6570\n     if m1 mod i=0 then\n         begin\n          inc(k);\n          a[k]:=i;\n          b[k]:=0;\n          while m1 mod i=0 do begin inc(b[k]); m1:=m1 div i; end;\n          b[k]:=b[k]*m2;\n         end;\n     inc(i);\n until m1=1;\n f:=true;//\u5b58\u50a8\u6709\u65e0\u89e3\n q:=1000000000;\n for i:=1 to n do\n     begin\n      read(x); flag:=true;\n      ans:=0;\n      for j:=1 to k do\n          begin\n           if x mod a[j]<>0 then begin flag:=false; break; end;\n           p:=0;\n           while x mod a[j]=0 do begin inc(p); x:=x div a[j]; end;\n           ans:=max(ans,cl(p,b[j]));\n          end;\n      if flag then\n          begin\n           f:=false;//\u6709\u89e3\n           q:=min(q,ans);//\u53d6\u8f83\u5c0f\u503c\n          end;\n     end ;\n if f then writeln(-1) else writeln(q);\nend .\n```",
        "postTime": 1472990367,
        "uid": 10291,
        "name": "fighter_OI",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1069 \u3010\u7ec6\u80de\u5206\u88c2\u3011"
    },
    {
        "content": "\u5f88\u8003\u67e5\u57fa\u7840\u7684\u4e00\u9053\u6570\u8bba\u9898\n\n\n------------\n\u8fd9\u9053\u9898\u7684\u601d\u8def\u697c\u4e0a\u7684\u5927\u4f6c\u5df2\u7ecf\u8bb2\u7684\u5f88\u6e05\u695a\u4e86\uff1a\n\n\u5148\u628a\u8bd5\u7ba1\u7684\u6570\u91cf$m1$\u5206\u89e3\u8d28\u56e0\u6570\n\n\u518d\u628a\u6bcf\u4e00\u79cd\u7ec6\u80de\u7684\u4e2a\u6570$s$\u5206\u89e3\u8d28\u56e0\u6570\n\n\u6bd4\u8f83\u4e00\u4e0b\u4e24\u8005\u7684\u8d28\u56e0\u6570\uff0c\u770b\u770b$s$\u7684\u8d28\u56e0\u6570\u662f\u5426\u5305\u542b$m1$\u7684\u6240\u6709\u8d28\u56e0\u6570\n\n\u5305\u542b\uff1a\u66f4\u65b0\u7b54\u6848\n\n\u4e0d\u5305\u542b\uff1a\u7ee7\u7eed\u5faa\u73af\n\n------------\n\u90a3\u6211\u4eec\u5c31\u8981\u601d\u8003\u4e00\u4e0b\u7ec6\u8282\u4e86\n\n\u8fd8\u662f\u6709\u4e00\u70b9\u601d\u7ef4\u96be\u5ea6\u7684\uff08\u5c24\u5176\u662f\u8003\u573a\u4e0a\uff09\n\n------------\n\n\n\u9996\u5148\uff0c\u5982\u4f55\u5206\u89e3\u8d28\u56e0\u6570\uff1f\n\n\u8fd9\u662f\u7b2c\u4e00\u9053\u574e\uff0c\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff1a\u9700\u8981\u5b8c\u5168\u5206\u89e3$s$\u5417\uff1f\n\n\u7b54\u6848\u662f\u4e0d\u9700\u8981\uff01\n\n\u4e3a\u4ec0\u4e48\uff1f\n\n\u60f3\u4e00\u60f3\u6211\u4eec\u5206\u89e3$s$\u7684\u521d\u8877\uff1a\u5224\u65ad\u80fd\u5426\u6574\u9664\u5e76\u8ba1\u7b97\u6240\u9700\u65f6\u95f4\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n\n```\n\u8bd5\u7ba1\u6570\u4e3a10\uff0c\u7ec6\u80de\u6570\u4e3a30\n\n6=2*3,30=2*3*5\n\n\u6211\u4eec\u5224\u65ad\u7684\u8bdd\u53ea\u4f1a\u7528\u52306\u7684\u4e24\u4e2a\u8d28\u56e0\u65702,3\n\n5\u8fd8\u9700\u8981\u5206\u89e3\u51fa\u6765\u5417\uff1f \u663e\u7136\u4e0d\u9700\u8981\uff0c\u8ba9\u5b83\u5f85\u5728\u90a3\u5c31\u884c\u4e86\n```\n\u56e0\u6b64\uff0c\u6211\u4eec**\u5bf9\u4e8e$s$\uff0c\u53ea\u9700\u7528$m1$\u7684\u8d28\u56e0\u6570\u5c06\u5b83\u8fdb\u884c\u90e8\u5206\u5206\u89e3**\n\n\n------------\n\u8fd8\u6709\uff0c\u600e\u6837\u8bb0\u5f55\u8d28\u56e0\u6570\u548c\u6b21\u6570\uff1f\n\n\u6709\u4e24\u79cd\u9009\u62e9\uff1a\n\n\u7b2c\u4e00\u79cd\u9009\u62e9\u7c7b\u4f3c\u4e8e\u5e7f\u641c\u5b58\u5750\u6807\u7684\u65b9\u6cd5\n\n\u5373\u7528\u4e24\u4e2a\u4e00\u7ef4\u6570\u7ec4\uff0c\u628a\u5b83\u4eec**\u5bf9\u9f50**\n\n**\u4e00\u65e6\u5206\u89e3\u5230\u4e00\u4e2a\u8d28\u56e0\u6570\uff0c\u5c31\u628a\u8be5\u8d28\u56e0\u6570\u548c\u5176\u6b21\u6570\u5206\u522b\u5b58\u5230\u4e24\u4e2a\u6570\u7ec4\u91cc**\n\n\u7b2c\u4e8c\u79cd\u9009\u62e9\u662f\u7528map\u548cvector\n\n**vector\u5b58\u8d28\u56e0\u6570\uff0cmap\u5219\u5efa\u7acb\u7531\u8d28\u56e0\u6570\u5230\u6b21\u6570\u7684\u6620\u5c04**\n\n~~\u901b\u4e86\u4e00\u5708\u90fd\u6ca1\u53d1\u73b0\u6709\u4eba\u7528map\uff0c\u90a3\u6211\u5c31\u7528map\u4e86~~\n\n\n------------\n\u53e6\u5916\uff0c\u6709\u4e00\u4e2a\u6ce8\u610f\u70b9\uff1a\n\n\u5f53$m1=1$\u65f6\uff0c\u76f4\u63a5\u8f93\u51fa0\n\n\n------------\n\u60f3\u5230\u4e86\u8fd9\u4e9b\uff0c\u8fd9\u9053\u9898\u76ee\u5c31\u987a\u5229\u7684AC\u4e86\n\n------------\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<map>//map\u5e93 \n#include<vector>//vector\u5e93 \n#define maxx 0x7fffffff//\u8fd9\u662fint\u7684\u6700\u5927\u503c \nusing namespace std;\nmap<long long,long long> a1;//\u5efa\u7acbm1\u7684\u8d28\u56e0\u6570\u5230\u6b21\u6570\u7684\u6620\u5c04\nvector<long long> x1;//\u5b58\u653em1\u8d28\u56e0\u6570\nbool su(long long k){//\u7d20\u6570\u5224\u65ad\u51fd\u6570 \n    for(int i=2;i*i<=k;++i){\n        if(k%i==0) return 0;\n    }\n    return 1;\n}\nint main(){\n    long long n,m1,m2,ans=maxx,t1,t2,time,l2,l1,cnt1;//time\u8868\u793a\u5355\u4e2a\u7ec6\u80de\u7684\u65f6\u95f4,ans\u4e3a\u6700\u7ec8\u7b54\u6848 \n    long long s;\n    bool flag2=0;//flag2\u7528\u6765\u6807\u8bb0\u662f\u5426\u6709\u89e3\n    cin>>n>>m1>>m2;\n    if(m1==1){//\u662f1\uff0c\u76f4\u63a5\u8f93\u51fa0\u5c31\u5b8c\u4e8b \n    \tcout<<0;\n    \treturn 0;\n    }\n    if(su(m1)){//\u5b83\u662f\u4e2a\u7d20\u6570\uff0c\u4e0d\u7528\u5206\u89e3\u4e86 \n        a1[m1]=m2;\n        x1.push_back(m1);\n        l1=1;\n    }\n    else{//\u662f\u5408\u6570 \n        t1=m1;//\u627e\u4e2a\u66ff\u8eab \n        for(int i=2;i*i<=t1;++i){//\u679a\u4e3e\u53ef\u80fd\u7684\u56e0\u5b50 \n            if(m1%i!=0) continue;//\u4e0d\u662f\u56e0\u5b50\uff0c\u7ee7\u7eed\u679a\u4e3e \n    //\u597d\u554a\uff0c\u907f\u5f00\u4e86continue\uff0c\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\u7684\u53ea\u6709\u8d28\u56e0\u6570 \n            x1.push_back(i);//\u538b\u8fdb\u53bb\uff01 \n            while(m1%i==0){//\u4e0d\u65ad\u5faa\u73af\uff0c\u69a8\u5e72\u5b83\uff01 \n                a1[i]++;//\u6bcf\u5faa\u73af\u4e00\u6b21\uff0c\u6b21\u6570+1 \n                m1/=i;\n            }\n            a1[i]*=m2;//\u522b\u628am2\u5fd8\u4e86 \n        }\n        l1=x1.size();//\u53d6\u5927\u5c0f \n    }\n    for(int i=1;i<=n;++i){//\u5f00\u59cb\u8f93\u5165\u7ec6\u80de\u6570\u91cfs \n        scanf(\"%lld\",&s);\n        time=0;//\u6bcf\u79cd\u7ec6\u80de\u6240\u82b1\u65f6\u95f4 \n        t2=s;//\u8fd8\u662f\u66ff\u8eab \n        for(int j=0;j<l1;++j){\n        \tif(t2%x1[j]!=0){//\u4e0d\u5305\u542b\uff01 \n        \t\tgoto here;//goto\u8bed\u53e5\u8e22\u51fa\u53bb \n        \t}\n        \tcnt1=0;//\u53ea\u9700\u8981\u4fdd\u5b58\u5355\u4e2a\u8d28\u56e0\u6570\u7684\u6b21\u6570 \n        \twhile(t2%x1[j]==0){\n        \t\tt2/=x1[j];\n        \t\tcnt1++;\n        \t}      \t\n        \tint tt=ceil(a1[x1[j]]*1.0/cnt1);//\u53d6\u5206\u88c2\u6b21\u6570(\u5411\u4e0a\u53d6\u6574) \n        \tif(tt>time) time=tt;//\u66f4\u65b0time \n        }\n        flag2=1;//\u6ca1\u6709\u88ab\u8e22\uff0c\u5c31\u662f\u6709\u89e3 \n        if(time<ans) ans=time;//\u66f4\u65b0\u7b54\u6848 \n        here: continue;//\u4e00\u811a\u8e22\u5230\u8fd9\u91cc\uff0c\u5565\u4e8b\u4e5f\u6ca1 \n    }\n    if(flag2) cout<<ans;//\u6709\u89e3\uff0c\u8f93\u51faans \n    else cout<<-1;//\u65e0\u89e3\uff0c\u8f93\u51fa-1 \n    return 0;//\u540e\u8bdd\uff1a\u8fd9\u9898\u662f\u4e2a\u6570\u8bba\u9898 \n}\n```\n\n\n------------\n\n\u4f60AC\u4e86\u6ca1\uff1fAC\u4e86\u5c31\u7ed9\u4e2a\u8d5e\u5457\n",
        "postTime": 1577605784,
        "uid": 238408,
        "name": "vectorwyx",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1069 \u3010\u7ec6\u80de\u5206\u88c2\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\u5206\u522b\u8003\u8651\u6bcf\u4e00\u79cd\u7ec6\u80de\uff0c\u6c42\u51fa\u4ed6\u4eec\u6700\u5c11\u5206\u88c2\u7684\u6b21\u6570\uff0c\u6700\u540e\u53bb\u6700\u5c0f\u503c\u5373\u53ef\uff1b\n\n\u3000\u3000\u5047\u8bbe\u7b2ci\u79cd\u7ec6\u80de\u81f3\u5c11\u5206\u88c2k\u6b21\u53ef\u5e73\u5747\u5206\u914d\u7d66\u5bb9\u5668\uff0c\u90a3\u4e48\u5e94\u8be5\u6ee1\u8db3si^k=(m1^m2)*p, p\u662f\u4e00\u4e2a\u6574\u6570\u3002\n\n\u3000\u3000\u5982\u679ca\u53ef\u4ee5\u6574\u9664b\uff0ca\u548cb\uff0c\u90fd\u7528\u8d28\u6570\u7684\u4e58\u79ef\u6765\u8868\u793a\u3002\u90a3\u4e48a\u7684\u8d28\u6570\u90fd\u53ef\u4ee5\u5728b\u4e2d\u627e\u5230\u3002\n\n\u3000\u3000\u5bf9\u4e8e\u6b64\u9898\uff0c\u6211\u4eec\u5148\u628am1\u5206\u89e3\uff08m2\u4e0d\u5f71\u54cd\u8d28\u6570\uff0c\u53ea\u5f71\u54cd\u8d28\u6570\u7684\u6b21\u6570\uff09\uff0c\u4e4b\u540e\u6211\u4eec\u5206\u89e3\u6bcf\u4e00\u4e2asi\uff0c\u5982\u679cm1\u7684\u6bcf\u4e2a\u8d28\u6570\u90fd\u80fd\u5728si\u4e2d\u627e\u5230\uff0c\u8bf4\u660e\u53ef\u4ee5\u88ab\u6574\u9664\uff0c\u53cd\u4e4b\u53ea\u8981\u6709\u4e00\u4e2a\u627e\u4e0d\u5230\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\u8be5\u7ec6\u80de\u65e0\u8bba\u5206\u88c2\u591a\u5c11\u6b21\u90fd\u4e0d\u53ef\u80fd\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u3000\u3000\u5bf9\u4e8e\u80fd\u591f\u6574\u9664\u7684si\uff0c\u6211\u4eec\u9010\u4e00\u5224\u65ad\u6bcf\u4e00\u4e2a\u8d28\u6570\u81f3\u5c11\u9700\u8981\u591a\u5c11\u6b21\u5206\u88c2\u624d\u80fd\u6ee1\u8db3\u6761\u4ef6\uff0c\u6700\u540e\u53d6\u6700\u5927\u7684\u4e00\u4e2a\u5373\u662f\u8be5\u7ec6\u80de\u6700\u5c11\u7684\u5206\u88c2\u6b21\u6570\uff1b\n  \u4e0b\u9762\u9644\u4ee3\u7801\n  ```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nconst int N = 1e5+10;\nint cnt[N],p[N],q[N],cnk[N];\nint main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tcout.tie(0);\n\tint m1,m2;\n\tint ans=1e7;\n\tint n;\n\tcin>>n;\n\tcin>>m1>>m2;\n\tif(m1==1) {\n\t\tcout<<0<<endl;\n\t\treturn 0;\n\t}\n\tmemset(cnt,0,sizeof(cnt));\n\tmemset(p,0,sizeof(p));\n\tint res=1;\n\tfor(int i=2; i*i<=m1; i++) {\n\t\tif(m1%i==0) {\n\t\t\tcnt[res++]=i;\n\t\t\twhile(m1%i==0) {\n\t\t\t\tp[i]++;\n\t\t\t\tm1/=i;\n\t\t\t}\n\t\t}\n\t}\n\n\tif(m1>1)cnt[res++]=m1,p[m1]++;\n\n\tfor(int i=1; i<=n; i++) {\n\t\tint s;\n\t\tcin>>s;\n\n\t\tbool f=false;\n\t\tint flag=0;\n\n\t\tmemset(q,0,sizeof(q));\n\n\t\tfor(int j=2; j*j<=s; j++) {\n\t\t\tif(j>cnt[res-1])break;\n\t\t\tif(s%j==0) {\n\t\t\t\twhile(s%j==0) {\n\t\t\t\t\tq[j]++;\n\t\t\t\t\ts/=j;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(s>1&&s<=cnt[res-1])q[s]++;\n\n\n\t\tfor(int j=1; j<res; j++) {\n\t\t\tif(q[cnt[j]]==0) {\n\t\t\t\tf=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tflag=max(flag,int(ceil(p[cnt[j]]*m2*1.0/q[cnt[j]])));\n\t\t}\n\n\t\tif(!f)ans=min(ans,flag);\n\t}\n\n\tif(ans!=1e7)cout<<ans<<endl;\n\telse cout<<-1 <<endl;\n\n\treturn 0;\n\n}\n```\n\u5e0c\u671b\u5927\u5bb6\u559c\u6b22\uff0c\u8c22\u8c22Thanks\u266a(\uff65\u03c9\uff65)\uff89\uff0c\u5982\u679c\u6709\u4ec0\u4e48\u66f4\u597d\u7684\u65b9\u6cd5\u53ef\u4ee5\u6559\u6559\u849f\u84bb",
        "postTime": 1572532464,
        "uid": 230323,
        "name": "\u10e6\ufe4f\ufeec\u5317\u2766\u6800",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1069 \u3010\u7ec6\u80de\u5206\u88c2\u3011"
    },
    {
        "content": "\u6b64\u9898\u662fNOIP2009\u5e74\u666e\u53ca\u7ec4\u7684\u9898\u76ee\uff0c\u90a3\u65f6\u6211\u8fd8\u5ae9\u3002\u73b0\u5728\u6765\u5206\u6790\u4e00\u4e0b\u9898\u610f\u3002\n\n$m1$\u548c$m2$\u7684\u610f\u601d\u5373\u4e3a\uff0c$M$=$m1^{m2}$ \u662f\u535a\u58eb\u7684\u8bd5\u7ba1\u6570\u3002\n\n\u800c\u63a5\u4e0b\u6765\u7684$Si$\u610f\u5473\u7740\u8be5\u79cd\u7ec6\u83cc\u4e00\u79d2\u949f\u53ef\u4ee5\u5206\u88c2\u7684\u6570\u76ee\u3002\n\n\u518d\u8fdb\u4e00\u6b65\u7b80\u5316\u9898\u610f\uff0c\u5373\u4e3a\u6c42$Si^{timei}$ $mod$ $M$=$0$ \u6c42$timei$\u7684\u6700\u5c0f\u503c\u3002\n\n\u7b2c\u4e00\u6b65\u60f3\u66b4\u529b\u76f4\u63a5\u6c42$M$\uff0c\u518d\u679a\u4e3e$timei$\u5373\u53ef\n\n\u63a5\u4e0b\u6765\u8003\u8651\u65e2\u7136$M$\u5982\u6b64\u5927\uff0c\u6211\u4eec\u53ef\u4ee5\u601d\u8003\u6807\u7b97\u4e86\u3002\n\n\u5148\u7b5b\u51fa$1$~$90000$\u7684\u8d28\u56e0\u6570\uff0c\u591f\u7528\u5c31\u884c\u3002\n\n\u5c06$m1$\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u56e0$m2$\u662f$m1$\u7684\u5e42\uff0c\u6240\u4ee5$m1^{m2}$\u6216$M$\u7684\u8d28\u56e0\u6570\u5373\u4e3a$m1$\u7684\u8d28\u56e0\u6570\u518d\u4e58\u4e0a$m2$\u3002\u6211\u4eec\u7528$ai$\u8868\u793a\u8d28\u56e0\u6570\uff0c$bi$\u8868\u793a\u6709\u51e0\u4e2a\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u8003\u8651\u5230\u4e86\u8bfb\u5165\u7684\u6570\u3002\u5148\u628a$Si$\u4e5f\u5206\u89e3\u8d28\u56e0\u6570\u3002\u5982\u679c$Si$\u7684\u8d28\u56e0\u6570\u6ca1\u6709\u5305\u542b$M$\u7684\u8d28\u56e0\u6570\uff0c\u5219\u4e0d\u53ef\u80fd\u5206\u88c2\u73a9\u3002\u5373\u6b64\u6b21\u7b54\u6848$-1$\n\u90a3\u6700\u5c0f\u503c\u5373\u4e3a$M$\u7684\u6bcf\u4e2a\u8d28\u56e0\u6570\u4e2a\u6570\u9664\u4ee5$Si$\u7684\u8be5\u8d28\u56e0\u6570\u4e2a\u6570\u7684\u6700\u5927\u503c\u3002\u518d\u505a\u8fc7\u6765\u5c31AC\u4e86\u3002\n\n```pascal\nvar m,m1,m2,t,w,i,j,n,ww:longint;max,sum,x,y,z:int64;\na,b,c,d,p:array[0..100000] of int64;t1:boolean;\nf:array[1..900001] of boolean;\nprocedure sc;\nbegin\nwhile (n>1) do\n    begin\n    while (n mod p[t]=0)and(t<=8713) do\n      begin\n      n:=n div p[t];\n      c[p[t]]:=c[p[t]]+1;\n      if d[ww]<>p[t] then\n        begin\n        ww:=ww+1;\n        d[ww]:=p[t];\n        end;\n      end;\n    t:=t+1;\n    if sqrt(n)<p[t] then break;\n    end;\nend;\nbegin\nreadln(m);\nfor i:=2 to 90000 do //\u7b5b\u7d20\u6570\n  if (f[i]=false)then\n  begin\n  t:=t+1;p[t]:=i;\n  for j:=2 to 90000div i do\n    f[i*j]:=true;\n  end;\nreadln(m1,m2);\nt:=1;w:=0;\nwhile (m1>1) do  //\u5206\u89e3\u8d28\u56e0\u6570\n  begin\n  while (m1 mod p[t]=0)and(t<=8713) do\n    begin\n    m1:=m1 div p[t];\n    a[p[t]]:=a[p[t]]+m2;\n    if b[w]<>p[t] then\n      begin\n      w:=w+1;\n      b[w]:=p[t];\n      end;\n    end;\n  t:=t+1;\n  end;\nmax:=-1;\nfor j:=1 to m do\n  begin\n  read(n);\n  for i:=1 to ww do\n    begin\n    c[d[i]]:=0;d[i]:=0;\n    end;\n  t:=1;ww:=0;\n  sc;//\u5206\u89e3\u8d28\u56e0\u6570\n  t1:=true;sum:=0;\n  for i:=1 to w do\n    begin\n    if c[b[i]]=0 then //\u5982\u679c\u8be5\u7ec6\u80de\u672a\u542b\u6709M\u7684\u8d28\u56e0\u5b50\uff0c\u5219\u4e0d\u80fd\u6ee1\u8db3\u8981\u6c42\n      begin\n      t1:=false;\n      break;\n      end;\n    x:=a[b[i]];y:=c[b[i]];//\u6c42\u6700\u5c0f\u9700\u8981\u7684\u65f6\u95f4\n    if x mod y=0 then z:=x div y else z:=x div y+1;\n    if z>sum then sum:=z;\n    end;\n  //writeln(j);\n  if t1=false then continue;\n  if max=-1 then max:=sum\n  else if max>sum then max:=sum;\n  end;\nwriteln(max);\nclose(input);close(output);\nend.\n```",
        "postTime": 1542979370,
        "uid": 119685,
        "name": "Kevin_Wa",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1069 \u3010\u7ec6\u80de\u5206\u88c2\u3011"
    },
    {
        "content": "### [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P1069)\n\n\u5f88\u597d\u7684\u4e00\u9053\u6570\u8bba\u9898\n\n\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u95ee\u9898\uff1a\n\n```\u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\u65e0\u8bba\u5982\u4f55\u8fd9\u4e2a\u7ec6\u80de\u5206\u88c2\u591a\u5c11\u6b21\u4e5f\u65e0\u6cd5\u5747\u5206\uff1f```\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a\u4e00\u4e2a\u7ec6\u80de\u6bcf\u6b21\u5206\u88c23\u4e2a\uff0c\u4f46\u9700\u5747\u5206\u62102\u4e2a\u8bd5\u7ba1\uff0c\u5f88\u660e\u663e\u4e0d\u53ef\u80fd\u3002\u4e00\u4e2a\u7ec6\u80de\u6bcf\u6b21\u5206\u88c25\u4e2a\uff0c\u4f46\u9700\u5747\u5206\u62103\u4e2a\u8bd5\u7ba1\u5f88\u660e\u663e\u4e5f\u4e0d\u53ef\u80fd\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u603b\u7ed3\u51fa\u5982\u4e0b\u5f0f\u5b50(\u6b64\u65f6\u4e0d\u8003\u8651m2\uff0c\u6bcf\u4e00\u4e2ap\u4e3a\u4e00\u4e2a\u8d28\u56e0\u5b50)\n\n$$m1=p_1^{a_1}*p_2^{a_2}*......*p_n^{a_n}$$\n\n\u82e5\u6bcf\u4e00\u4e2a\u7ec6\u80de\u4e2d\u4e0d\u542b\u6709\u8fd9\u4e9b\u6240\u6709\u7684\u8d28\u56e0\u5b50\uff0c\u90a3\u4e48\u4e00\u5b9a\u4e0d\u53ef\u4ee5\u5747\u5206\u3002\n\n\n### \u8fd8\u8981\u6ce8\u610f\u4e00\u4e9b\u7ec6\u8282 ~~\uff08\u4e0d\u8981\u5728\u610f\u8fd9\u4e9b\u7ec6\u8282\uff09~~\n1.\u5982\u4f55\u8d28\u56e0\u6570\u5206\u89e3 -> [\u5efa\u8bae\u505a\u505a\u8fd9\u9898](https://www.luogu.com.cn/problem/P2043)\n\n\u7531\u4e8e\u8fd9\u5f88\u57fa\u672c\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\nint x;\nfor(int i=2;i*i<=x;i++)\n{\n\tint cnt=0;\n\twhile(x%i==0)\n\t{\n\t\tx/=i;\n\t\tcnt++;\n\t}\n\tif(!cnt)\n\t\tcout<<i<<\" \"<<cnt<<endl;\n}\nif(x>1)\n\tcout<<x<<\" \"<<1<<endl;\n```\n\n2.\u5982\u4f55\u77e5\u9053\u6240\u6709\u7684m\u7684\u8d28\u56e0\u5b50\u90fd\u5728\u6bcf\u4e00\u4e2a\u7ec6\u80de\u4e2d\u51fa\u73b0\u8fc7\uff1a\n```\u7528\u4e00\u4e2atotal\u6307\u9488\uff0c\u6bcf\u6709\u4e00\u4e2a\u8d28\u56e0\u5b50\u51fa\u73b0\uff0ctotal++\uff08\u8df3\u5411\u4e0b\u4e00\u4e2a\u8d28\u56e0\u5b50\uff09\uff0c\u6700\u540e\u5982\u679ctotal-1=m\u7684\u8d28\u56e0\u5b50\u4e2a\u6570\uff0c\u4ee3\u8868\u5168\u626b\u5b8c\u4e86\u3002```\n\n## \u770b\u4e0d\u61c2\uff1f\u770b\u770b\u4ee3\u7801\u548c\u6ce8\u91ca\u5c31\u597d\u4e86\uff1a\n```cpp\n#include <iostream>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\n\n//\u4e00\u4e9b\u5b9a\u4e49 \nconst int N=1e4+5;\ntypedef long long ll;\nll n,m1,m2,x,cnt,tm,tx,ans=1e10,total;\nll zm[N],fm[N],zx[N],fx[N];\nbool flag;\n\nint main()\n{\n\tcin>>n>>m1>>m2;\n\t//\u7279\u5224 \n\tif(m1==1)\n\t{\n\t\tcout<<0<<endl;\n\t\treturn 0;\n\t}\n\t//\u5206\u89e3\u8d28\u56e0\u6570m1^m2 \n\tfor(ll i=2;i*i<=m1;i++)\n\t{\n\t\tcnt=0;\n\t\twhile(m1%i==0)\n\t\t\tm1/=i,cnt++;\n\t\tif(cnt!=0)\n\t\t{\n\t\t\tzm[++tm]=i;\n\t\t\tfm[tm]=cnt*m2;\n\t\t}\t\t\n\t}\n\tif(m1>1)\n\t\tzm[++tm]=m1,fm[tm]=m2;\n\t\t \n\tfor(ll i=1;i<=n;i++)\n\t{ \n\t\tcin>>x;tx=0;total=1;\n\t\tll nowans=0;flag=true;\n\t\t//\u7ec6\u80de\u4e00\u6b21\u6570\u91cf\u7684\u8d28\u56e0\u6570\u5206\u89e3 \n\t\tfor(ll i=2;i*i<=x;i++)\n\t\t{\n\t\t\tcnt=0;\n\t\t\twhile(x%i==0)\n\t\t\t\tx/=i,cnt++;\n\t\t\tif(cnt!=0)\n\t\t\t{\n\t\t\t\tzx[++tx]=i;\n\t\t\t\tfx[tx]=cnt;\n\t\t\t}\t\t\n\t\t\t//\u5982\u679c\u6709\u6b64\u8d28\u56e0\u5b50 \n\t\t\tif(zx[tx]==zm[total])\n\t\t\t{\n\t\t\t\tll z;\n\t\t\t\t//\u6c42\u4e00\u4e0b\u8fd9\u4e2a\u8d28\u56e0\u5b50\u9700\u591a\u5c11\u79d2 \n\t\t\t\tif(fm[total]%fx[tx]==0)\n\t\t\t\t\tz=fm[total]/fx[tx];\n\t\t\t\telse\n\t\t\t\t\tz=fm[total]/fx[tx]+1;\n\t\t\t\tnowans=max(nowans,z);\n\t\t\t\ttotal++;\n\t\t\t}\n\t\t}\n\t\tif(x>1)\n\t\t\tzx[++tx]=x,fx[tx]=1;\n\t\t//\u5982\u679c\u6709\u6b64\u8d28\u56e0\u5b50 \n\t\tif(zx[tx]==zm[total])\n\t\t{\n\t\t\tll z;\n\t\t\t//\u6c42\u4e00\u4e0b\u8fd9\u4e2a\u8d28\u56e0\u5b50\u9700\u591a\u5c11\u79d2 \n\t\t\tif(fm[total]%fx[tx]==0)\n\t\t\t\tz=fm[total]/fx[tx];\n\t\t\telse\n\t\t\t\tz=fm[total]/fx[tx]+1;\n\t\t\tnowans=max(nowans,z);\n\t\t\ttotal++;\n\t\t}\n\t\t//\u5982\u679c\u6709\u5168\u90e8x\u7684\u8d28\u56e0\u5b50 \n\t\tif(total-1==tm)\n\t\t{\n\t\t\t//\u66f4\u65b0\u7b54\u6848 \n\t\t\tans=min(nowans,ans);\n\t\t}\n\t\t\t\n\t}\n\tif(ans==1e10)\n\t\tcout<<-1<<endl;\n\telse\n\t\tcout<<ans<<endl;\n\treturn 0;\n}\n\n```\n",
        "postTime": 1576064957,
        "uid": 159610,
        "name": "Meaninglessness",
        "ccfLevel": 4,
        "title": "P1069 \u6570\u8bba\u9898"
    },
    {
        "content": "#~~\u5165\u95e8\u96be\u5ea6\uff1a\u8d28\u56e0\u6570\u5206\u89e3~~\n\n\u8fd9\u9053\u9898\u5c31\u662f\u8d28\u56e0\u6570\u5206\u89e3\uff0c\u628a\u5982\u679c\u8981\u628a\u7b2csi\u79cd\u7ec6\u80de\u53d8\u5f97\u53ef\u4ee5\u5e73\u5747\u5206\u7684\u8bdd\uff0c\u90a3\u4e48si\u4e2d\u5fc5\u987b\u5f97\u6709m1\u7684\u6240\u6709\u8d28\u56e0\u6570\uff0c\u800cm2\u53ea\u662f\u7ed9m1\u7684\u6240\u6709\u8d28\u56e0\u6570\u5e26\u4e86\u4e00\u4e2a\u6307\u6570\u5e42\uff0c\u6240\u4ee5\u53ea\u8981\u628am2\u76f4\u63a5\u4e58\u8fdbm1\u7684\u8d28\u56e0\u6570\u4e2a\u6570\u4e2d\u5c31\u597d\uff0c\u7136\u540e\u518d\u628asi\u5bf9\u6bcf\u4e00\u4e2a\u8d28\u56e0\u6570\u8fdb\u884c\u5206\u89e3\uff0c\u770b\u5bf9\u6bcf\u4e00\u4e2a\u8d28\u56e0\u6570\u8981\u5206\u88c2\u51e0\u6b21\uff0c\u7136\u540e\u6700\u5927\u7684\u90a3\u4e2a\u5c31\u662f\u8981\u5206\u88c2\u7684\u6b21\u6570\uff0c\u4e0d\u8fc7\u8981\u6ce8\u610f\uff0c\u8fd9\u9053\u9898\u7b2c\u4e00\u4e2a\u6570\u636e\u662f\u4e2a\u5751\uff0c\u5f53M1\u662f1\u65f6\uff0c\u4efb\u4f55\u6570\u90fd\u53ef\u4ee5\uff0c\u6240\u4ee5\u76f4\u63a5\u51fa0\u5373\u53ef\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 10000000\nusing namespace std;\nint a[maxn],b[maxn],pri[maxn];//a\u662fm1\u4e2d\u7684\u8d28\u56e0\u6570\uff0cb\u5bf9\u5e94\u5f97\u8868\u793a\u8d28\u56e0\u6570\u7684\u4e2a\u6570\uff0cpri\u5c31\u662f\u5728a\u8303\u56f4\u5185\u7684\u8d28\u6570\nbool V[maxn];//\u6807\u8bb0\u8d28\u56e0\u6570\u7684\u73a9\u610f\nint main()\n{\n    int n,m1,m2;\n    scanf(\"%d%d%d\",&n,&m1,&m2);\n    if(m1==1)\n    {\n        printf(\"0\");\n        return 0;\n    }//\u5751\u7684\u6570\u636e\u5904\u7406\n    memset(V,true,sizeof(V));\n    for(int i=2;i*i<=m1;i++)//\u5c0f\u4e8e\u5e73\u65b9\u6839\uff0c\u5927\u5bb6\u90fd\u61c2\n      if(V[i])\n        for(int j=i;i*j<=m1;j++)\n          V[i*j]=false;\n    int k=0;\n    for(int i=2;i<=m1;i++)\n      if(V[i])\n      {\n          pri[++k]=i;\n      }\n    int x=m1;k=0;\n    for(int i=1;pri[i]*pri[i]<=x;i++)\n      if(x%pri[i]==0)\n      {\n          k++;\n          a[k]=pri[i];\n          while(x%pri[i]==0)\n          {\n              b[k]++;\n              x/=pri[i];\n        }\n        b[k]*=m2;\n      }\n    if(x>1)//\u5206\u89e3\u5230\u6700\u540e\u53ef\u80fd\u4f1a\u5269\u4f59\u4e00\u4e2a\u8d28\u56e0\u5b50 \n    {\n        a[++k]=x;\n        b[k]=m2;\n    }//\u5206\u89e3m1\n    //a[i]\u662fM1^m2\u7684\u7b2ci\u79cd\u8d28\u56e0\u5b50\n    //b[i]\u662fm1^m2\u7b2ci\u79cd\u8d28\u56e0\u5b50\u7684\u4e2a\u6570\n    int ans=1<<30;\n    for(int i=1;i<=n;i++)\n    {\n        int si;\n        scanf(\"%d\",&si);\n        int t=0;\n        for(int j=1;j<=k;j++)\n        {\n            if(si%a[j])//\u5982\u679c\u4e0d\u542b\u6709\u76f8\u540c\u7684\u8d28\u56e0\u5b50\uff0c\u5c31\u8df3\u51fa \n            {\n                t=1<<30;\n                break;\n            }\n            int p=0;\n            while(si%a[j]==0)\n            {\n                p++;\n                si/=a[j];\n            }\n            //b[j]\u662f\u7b2cj\u79cd\u8d28\u56e0\u5b50\u7684\u4e2a\u6570\uff0cP\u662f\u5f53\u524d\u7ec6\u80de\u8be5\u79cd\u8d28\u56e0\u5b50\u7684\u4e2a\u6570\n            int d=b[j]/p;\n            if(b[j]%p)d++; //\u5411\u4e0a\u53d6\u6574\uff0c\u5404\u4f4d\u5927\u4f6c\u4e5f\u53ef\u4ee5\u7528ceil\uff0c\u4e0d\u8fc7\u7528\u8fd9\u4e2a\u6548\u7387\u9ad8\u70b9\n            if(d>t)t=d; //\u66f4\u65b0\u6bcf\u4e2a\u7ec6\u80de\u9700\u8981\u5206\u88c2\u7684\u6b21\u6570\n        }\n        if(t<ans)ans=t;//\u66f4\u65b0\u7b54\u6848\n    }\n    if(ans==1<<30)ans=-1;//\u5904\u7406\u4e0d\u884c\u7684\u60c5\u51b5\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1508243241,
        "uid": 29261,
        "name": "Masterchief",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1069 \u3010\u7ec6\u80de\u5206\u88c2\u3011"
    },
    {
        "content": "\u8d28\u56e0\u6570\u5206\u89e3\u3002\n\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u8bb0\u5f55\u6b21\u65b9\uff0c\u5982\u679csi\u6ca1\u6709m1\u7684\u8d28\u56e0\u6570\uff0csi\u5c31\u4e0d\u53ef\u7528\uff0c\u53cd\u4e4b\u8bb0\u5f55\uff08m2\\*m1\u6b21\u65b9\u6570\uff09/si\u6b21\u65b9\u6570\uff0c\u53d6\u6700\u5927\u503c\u3002\u6ce8\u610f\u662f\u4e0a\u53d6\u6574~\n\n\n\n\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nint n,m1,m2,s,ans,num[30001],a[30001],c[30001][2],maxx,cnt,flag;\nbool b[30001];\nvoid findd()\n{\n    int kkz=m1;\n    for(int i=2;i<=m1;i++)\n    {\n        if(!b[i])\n        {\n            a[++a[0]]=i;\n            if(!(kkz%i))\n            {\n                  c[++c[0][0]][0]=i;\n                  while(!(kkz%i)) kkz/=i,c[c[0][0]][1]++;\n            }\n        }\n        for(int j=1;j<=a[0] && a[j]*i<=m1;j++)\n        {\n            b[i*a[j]]=1;\n            if(!(i%a[j])) break;\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m1,&m2);ans=-1;findd();\n    while(n--)\n    {\n        cnt++;flag=0;\n        scanf(\"%d\",&s);maxx=0;\n        for(int i=1;i<=c[0][0];i++)\n          if(s%c[i][0])\n          {\n              flag=1;break;\n          }\n          else\n          {\n              int k=c[i][0],aim=c[i][1],now1=0,now2=0;\n              while(!(s%k)) s/=k,now1++;\n              now2=aim*m2/now1;\n              if(aim*m2%now1) now2++;\n              maxx=max(maxx,now2);\n          }\n        if(flag) continue;\n        if(ans==-1)\n        {\n            ans=maxx;\n        }\n        else ans=min(ans,maxx);\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1477389621,
        "uid": 16334,
        "name": "licone",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1069 \u3010\u7ec6\u80de\u5206\u88c2\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9898\u5462\uff0c\u662f\u7528\u5206\u89e3\u8d28\u56e0\u6570\u505a\u7684\u3002\n\n1.\u6211\u4eec\u53ef\u4ee5\u5148\u628aM1\u7684\u8d28\u56e0\u6570\u901a\u8fc7\u6b27\u62c9\u7b5b\u6cd5\u6c42\u7d20\u6570\u627e\u51fa\uff0c\u7136\u540e\u6bcf\u4e2a\u90fd\u4e58M2\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230M1^M2\u7684\u8d28\u56e0\u6570\u3002\n\n2.\u6211\u4eec\u6bcf\u8bfb\u5165\u4e00\u4e2aSi,\u5c31\u5224\u65ad\u662f\u5426\u80fd\u901a\u8fc7\u4e58\u65b9\u5f97\u5230M1^M2\u7684\u500d\u6570\uff0c\n\u6bcf\u4e00\u6b21\u66f4\u65b0\u6700\u5c0f\u503c\uff0c\u8f93\u51fa\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct data\n{\n\tlong long x,y;\n}a[10001];\nlong long n,m,k,cnt,x,minn=99999999;\nbool vis[30001];\nlong long max(long long a,long long b)\n{\n\tif(a>=b)\n\t{\n\t\treturn a;\n\t}\n\treturn b;\n}\nlong long work(long long x,long long y)\n{\n\tlong long z=1;\n\twhile(x*z<y)\n\t{\n\t\tz++;\n\t}\n\treturn z;\n}\nlong long check(long long y)\n{\n\tlong long maxn=0,sum,z;\n\tfor(register long long i=1;i<=cnt;i++)\n\t{\n\t\tif(y%a[i].x!=0)\n\t\t{\n\t\t\treturn -1;\n\t\t}else{\n\t\t\tsum=1;\n\t\t\ty/=a[i].x;\n\t\t\twhile(y%a[i].x==0)\n\t\t\t{\n\t\t\t\ty/=a[i].x;\n\t\t\t\tsum++;\n\t\t\t}\n\t\t\tz=work(sum,a[i].y);\n\t\t\tmaxn=max(maxn,z);\n\t\t}\n\t}\n\treturn maxn;\n}\nint main()\n{\n\tcin>>n>>m>>k;\n\tfor(register long long i=2;i<=100;i++)\n\t{\n\t\tif(m==1)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tif(!vis[i])\n\t\t{\n\t\t\tif(m%i==0)\n\t\t\t{\n\t\t\t\ta[++cnt].x=i;\n\t\t\t\ta[cnt].y++;\n\t\t\t\tm/=i;\n\t\t\t\twhile(m%i==0)\n\t\t\t\t{\n\t\t\t\t\tm/=i;\n\t\t\t\t\ta[cnt].y++;\n\t\t\t\t}\n\t\t\t\ta[cnt].y*=k;\n\t\t\t}\n\t\t\tfor(register long long j=2;j<=100/i;j++)\n\t\t\t{\n\t\t\t\tvis[j*i]=1;\n\t\t\t}\n\t\t}\n\t}\n\tfor(register long long i=1;i<=n;i++)\n\t{\n\t\tcin>>x;\n\t\tx=check(x);\n\t\tif(x==-1)\n\t\t{\n\t\t\tcontinue;\n\t\t}else{\n\t\t\tminn=min(minn,x);\n\t\t}\n\t}\n\tif(minn==99999999)\n\t{\n\t\tcout<<\"-1\"<<endl;\n\t}else{\n\t\tcout<<minn<<endl;\n\t}\n\treturn 0;\n}\n```\nQAQ",
        "postTime": 1541228403,
        "uid": 103334,
        "name": "Honor\u8a89",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1069 \u3010\u7ec6\u80de\u5206\u88c2\u3011"
    },
    {
        "content": "### [\u6c38\u9060\u306e\u8a18\u61b6 ~ Precious Memories]\u65bd\u5de5D3  \n\n------------\n  \n2020.3.5  \n  \n## P1069 \u7ec6\u80de\u5206\u88c2  \n  \nNoip2009 T3  \n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P1069)  \n  \n\u4e00\u9053\u6570\u5b66\u9898\uff0c\u4e0a\u624b\u5148\u5206\u6790  \n\u9898\u76ee\u4e3b\u8981\u63cf\u8ff0\u4e86\u8fd9\u4e48\u4e00\u4e2a\u4e1c\u897f  \n\u7ed9\u5b9a**m1**,**m2**\u4e24\u4e2a\u91cf  \n\u8fd8\u6709**n**\u4e2a\u57fa\u6570**S**  \n\u6c42(S[i] ^ x) | m1 ^ m2\u4e2d**x**\u7684\u6700\u5c0f\u503c  \n~~\u5176\u5b9e\u5982\u679c\u5f53\u5e74\u6211\u5728\u8003\u573a\u4e0a\u7684\u8bdd\uff0c\u8981\u6c42x\u7684\u6700\u5c0f\u503c\uff0c\u6211\u80af\u5b9a\u5c31\u76f4\u63a5\u628aS[i]\u7684\u6700\u5927\u503c\u6c42\u51fa\u6765\u7136\u540e\u9664\u4e86\uff0c\u56e0\u4e3a\u8fd9\u6837\u6bd4\u8f83\u597d\u6df7\u5206(\u5927\u96fe~~  \n  \n\u601d\u8def\u6bd4\u8f83\u7b80\u5355\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u522b\u5c06S[i]\u548cm1\u5206\u89e3\uff0c  \n\u7136\u540e\u53bb\u5224\u65adm1\u6240\u5305\u542b\u7684\u6240\u6709\u7d20\u56e0\u6570\u4e2dS[i]\u4e2d\u662f\u5426\u90fd\u6709\uff0c  \n\u5982\u679c\u6ca1\u6709\u7684\u8bdd\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5continue\uff0c  \n\u5982\u679c\u5168\u90e8\u90fd\u6709\u7684\u8bdd\u8fd9\u4e00\u9879\u7684\u7ed3\u679c\u5c31\u662f  \nm1\u4e2d\u6bcf\u4e2a\u7d20\u56e0\u6570\u4e0eS[i]\u4e2d\u6bcf\u4e2a\u5bf9\u5e94\u7d20\u56e0\u6570\u6b21\u6570\u5dee\u7684\u6700\u5927\u503c+1  \n\u7b54\u6848\u5c31\u8ba9\u6211\u4eec\u6c42\u6700\u5c0f\u7684\u8fd9\u4e2a\u503c  \n  \n\u6709\u4e86\u4ee5\u4e0a\u7684\u601d\u8def\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u53bb\u5b9e\u73b0\u4e86  \n\u4ee3\u7801\u5982\u4e0b:  \n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\n\nconst ll maxn = 1e4+5;\nconst ll maxm = 3e4+5;\nll n;\nll m1, m2;\nll m1_p[maxm];\nll s[maxn];\nll ans[maxn];\nll idxm1, idxsi;\nbool flag = false;\nll ret = 1e7;\n\nint divide_prime(ll x) {\n\tint i = 2;\n\tint idx = -1e7;\n\twhile (x != 1) {\n\t\twhile (x % i == 0) {\n\t\t\tm1_p[i]++;\n\t\t\tx /= i;\n\t\t}\n\t\tidx = max(idx, i);\n\t\tm1_p[i++] *= m2; // \u6b21\u6570  \n\t}\n\treturn idx;\n}\n\nint main() {\n\tscanf(\"%lld\", &n);\n\tscanf(\"%lld%lld\", &m1, &m2);\n\tif (m1 == 1) {\n\t\tcout << 0 << endl;\n\t\treturn 0;\n\t}\n\tidxm1 = divide_prime(m1);\n\tfor (ll i = 1; i <= n; ++i) {\n\t\tll maxx = -100000;\n\t\tflag = false;\n\t\tscanf(\"%lld\", &s[i]);\n\t\tfor (ll j = 2; j <= idxm1; ++j) {\n\t\t\tif (!m1_p[j]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tll temp = 0;\n\t\t\t\twhile (s[i] % j == 0) {\n\t\t\t\t\ts[i] /= j;\n\t\t\t\t\t++temp;\n\t\t\t\t} // \u5206\u89e3\u987a\u4fbf\u8bb0\u6b21\u6570 \n\t\t\t\tif (!temp) {\n\t\t\t\t\tflag = true;\n\t\t\t\t\tbreak;\n\t\t\t\t} // \u6ca1\u6709\u8fd9\u4e00\u9879  \n\t\t\t\tmaxx = max(maxx, (m1_p[j] - 1) / temp); // \u56e0\u4e3a\u524d\u9762\u4e58\u8fc7\u4e86\uff0c\u6240\u4ee5\u8fd9\u91cc\u662f\u9664  \n\t\t\t}\n\t\t}\n\t\tif (flag) {\n\t\t\tans[i] = -1;\n\t\t}\n\t\telse ans[i] = maxx;\n\t}\n\tfor (ll i = 1; i <= n; ++i) {\n\t\tif (ans[i] != -1) {\n\t\t\tret = min(ans[i], ret);\n\t\t}\n\t}\n\tif (ret == 1e7) {\n\t\tprintf(\"-1\\n\");\n\t}\n\telse {\n\t\tprintf(\"%lld\\n\", ret + 1);\n\t}\n\treturn 0;\n}\n\n```\n\u5728\u5199\u7684\u65f6\u5019\uff0c\u51fa\u73b0\u4e86\u5f88\u591a\u795e\u5947\u7684\u95ee\u9898  \n1. \u524d\u9762\u7684\u7d20\u56e0\u6570\u5206\u89e3\uff0c\u4e0d\u80fd\u7528for(int i = 2; i * i <= n; ++i)\u4eb2\u6d4b\u4f1a\u7206\u4e24\u4e2a\u70b9  \n1. \u5f53m1 == 1\u65f6\u5fc5\u987b\u7279\u5224\uff0c\u4e0d\u7136\u7b2c\u4e00\u4e2a\u70b9\u4f1aWA  \n1. \u4ee3\u7801\u4e2d\u6c42maxx\u90a3\u4e00\u884c\u4e2d\u5fc5\u987b\u8981\u662f(m1_p[j] - 1)\u4e0d\u80fd\u662fm1_p[j]\uff0c\u4e0d\u7136\u4f1aWA(\u5177\u4f53\u4ec0\u4e48\u539f\u56e0\u6211\u4e5f\u4e0d\u662f\u5f88\u6e05\u695a\uff0c\u5e0c\u671b\u80fd\u6709dalao\u89e3\u91ca\u4e00\u4e0b\u3002\u3002\u3002  \n1. \u6700\u540e\u8f93\u51fa\u7684\u7b54\u6848\u5fc5\u987b\u52a01\uff0c\u8fd9\u4e2a\u5f88\u597d\u7406\u89e3\uff0c\u56e0\u4e3a\u521a\u5f00\u59cb\u7684\u65f6\u5019\u4e5f\u7b97\u4e00\u6b21\n\n\n\u53e6\u5916\uff0c\u611f\u8c22@24680esz \u5927\u4f6c\u7684\u9898\u89e3\uff0c\u4e0a\u8ff0\u7684\u8bb8\u591a\u95ee\u9898\u90fd\u662f\u7814\u7a76\u5b8c\u9898\u89e3\u624d\u53d1\u73b0\u7684  \n  \n  \n[\u5199\u5728\u6700\u540e]  \n\u8fd9\u9053\u9898\u76ee\u603b\u4f53\u96be\u5ea6\u4e0d\u662f\u5f88\u5927\uff0c\u4e3b\u8981\u8003\u5bdf\u9009\u624b\u7684\u4ed4\u7ec6\u7a0b\u5ea6\uff0c\u4f46\u662f\u60f3\u5fc5\u5f53\u5e74\u8fd9\u9053\u9898\u8fd8\u662f\u5361\u4e86\u4e0d\u5c11\u4eba\u5427(\u96fe  \n\u8981\u662f\u6211\u5f53\u5e74\u6b63\u597d\u5728\u8003\u573a\u4e0a\u7684\u8bdd\uff0c\u63a8\u51fa\u89c4\u5f8b\u5e94\u8be5\u4e0d\u96be\uff0c\u4f46\u662f\u80fd\u4e0d\u80fd\u5199\u51fa\u5b8c\u6574\u7684\u4ee3\u7801\u5c31\u662f\u4e2a\u95ee\u9898\u4e86\uff0c\u56e0\u4e3a\u8003\u573a\u4e0a\u6bd5\u7adf\u8fd8\u662f\u5f88\u7d27\u5f20\u7684  \n\u73b0\u5728\u6b63\u597d\u80fd\u5b85\u5728\u5bb6\u91cc\uff0c\u6709\u7a7a\u5199\u70b9\u9898\uff0c\u8981\u662f\u5728\u4e0a\u5b66\u7684\u65f6\u5019\u4f30\u8ba1\u662f\u5199\u4e0d\u51fa\u6765\u7684\uff0c\u56e0\u4e3a\u90a3\u65f6\u5019\u623e\u6c14\u592a\u91cd\u4e86  \n\u5148\u5199\u5230\u8fd9\u91cc\u5427\uff0c\u5df2\u7ecf\u665a\u4e0a\u5341\u4e00\u70b9\u534a\u4e86  \nps:\u5e0c\u671b\u80fd\u8fc7\u5ba1\uff01  \n\n",
        "postTime": 1583422374,
        "uid": 130069,
        "name": "zy_turtle",
        "ccfLevel": 0,
        "title": "[\u6c38\u9060\u306e\u8a18\u61b6 ~ Precious Memories]P1069\u9898\u89e3"
    },
    {
        "content": "\u4ee3\u7801\u5341\u5206\u7b80\u5355\n\n\u51fd\u6570\n\n```cpp\nbool pr(int k)  \n{\n    int m;\n    for(m=2;m<=floor(sqrt(k));m++)\n    if(k%m==0)return false;\n    return true;\n}\n```\n\n\u4e0b\u9762\u732e\u4e0a\u4ee3\u7801\uff08\u4e5f\u5c3176-18\u884c\uff09\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=30000+10;\nint n,i,j,m1,m2,minn=2147483647;\nint prime[maxn]={0};  \nbool flag=false,here;\nint pipe_prime[maxn];  \nint cell_prime[maxn];  \nint sum_prime=0,cell,now; \nbool pr(int k)  \n{\n    int m;\n    for(m=2;m<=floor(sqrt(k));m++)\n    if(k%m==0)return false;\n    return true;\n}\nint main() \n{\n    cin>>n; cin>>m1>>m2;\n    for(i=2;i<=maxn;i++) \n    if(pr(i))\n    {\n        sum_prime++;\n        prime[sum_prime]=i;\n    }\n    i=1; while(m1!=1)  \n    {\n        if(m1%prime[i]==0)\n        while(m1%prime[i]==0)  \n        {pipe_prime[i]+=m2; m1/=prime[i]; }\n        i++;\n    }\n    for(i=1;i<=n;i++)\n    {\n        cin>>cell; j=1; now=0; here=true;  \n        memset(cell_prime,0,sizeof(cell_prime));  \n        while(j<=sum_prime) \n        {\n            if(cell%prime[j]==0)\n            while(cell%prime[j]==0)\n            {cell_prime[j]++; cell/=prime[j]; }\n            j++;\n        }\n        for(j=1;j<=sum_prime;j++)\n        {\n            if(pipe_prime[j]!=0&&cell_prime[j]==0)here=false;\n            if(pipe_prime[j]!=0&&cell_prime[j]!=0)  \n            {\n                if(pipe_prime[j]%cell_prime[j]==0)\n                now=max(now,pipe_prime[j]/cell_prime[j]);\n                else now=max(now,pipe_prime[j]/cell_prime[j]+1);  \n            }\n        }\n        if(here){flag=true; if(now<minn)minn=now;} \n    }\n    if(flag)cout<<minn<<endl;  \n    else cout<<-1<<endl;\n    return 0;\n}\n```\n\u4ee3\u7801\u6ca1\u4e86QWQ",
        "postTime": 1575607525,
        "uid": 203271,
        "name": "gmq2008",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1069 \u3010\u7ec6\u80de\u5206\u88c2\u3011"
    },
    {
        "content": "\u6b64\u9898\u7684\u5927\u610f\u4e3a\u5728n\u4e2a\u6570\u91cc\u9762\u9009\u62e9\u4e00\u4e2a\u6570\u4f7f$m1^{m2}|n^k$\uff0c\u4e14\u8fd9\u4e2ak\u6700\u5c0f\n1. \u5148\u628a$m1^{m2}$\u5206\u89e3\u8d28\u56e0\u6570\n```\nvector<int> mfac;\nint mpow[15];\n\nfor(i=2;i<=ma;i++){\n\tbool pushed=false;\n\twhile(ma%i==0){\n\t\tma/=i;\n\t\tif(!pushed){\n\t\t\tpushed=true;\n\t\t\tmfac.push_back(i);\n\t\t\tmpow[mfac.size()-1]=mb;\n\t\t}\n\t\telse{\n\t\t\tmpow[mfac.size()-1]+=mb;\n\t\t}\t\n\t}\n}\n```\n\n2. \u518d\u770b\u5176\u4ed6n\u4e2a\u6570\u91cc\u9762\u5206\u522b\u6709\u591a\u5c11\u4e2amfac[i]\n```\nfor(i=0;i<n;i++){\n\tfor(j=0;j<mfac.size();j++){\n\t\twhile(s[i]%mfac[j]==0){\n\t\t\ts[i]/=mfac[j];\n\t\t\tspow[i][j]++;\n\t\t}\n\t}\n}\n```\n3. \u5199\u4e2a\u5411\u4e0a\u53d6\u6574\u7684\u9664\u6cd5\u51fd\u6570\uff0c\u4ee5\u5907\u540e\u9762\u4f7f\u7528\n```\nint updiv(int a,int b){\n\tint i,j;\n\tif(a%b==0)\n\t\treturn a/b;\n\telse\n\t\treturn a/b+1;\n}\n\n```\n4. \u6bd4\u51fa\u6700\u4f18\u89e3\uff0c\u6700\u4f18\u89e3\u4e3a\u6700\u5927\u7684```updiv(mpow[j],spow[i][j])```\u7684j\u4e2d\u503c\u6700\u5c0f\u7684i\uff08\u8868\u8fbe\u53ef\u80fd\u4e0d\u591f\u597d\uff0c\u770b\u4ee3\u7801\u5427\uff09\n```\nfor(i=0;i<n;i++){\n\tint maxc=0;\n\tbool ca=true;\n\tfor(j=0;j<mfac.size();j++){\n\t\tif(spow[i][j]==0){\n\t\t\tca=false;\n\t\t\tbreak;\n\t\t}\n\t\tif(updiv(mpow[j],spow[i][j])>maxc)\n\t\t\tmaxc=updiv(mpow[j],spow[i][j]);\n\t}\n\tif(maxc<minmaxc && ca)\n\t\tminmaxc=maxc;\n}\n```\n\u6700\u540e\u4e0a\u5b8c\u6574\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<vector>\nusing namespace std;\n\nint n,ma,mb;\nint s[10005];\nvector<int> mfac;\nint mpow[15],spow[10005][15];\n\nint updiv(int a,int b){\n\tint i,j;\n\tif(a%b==0)\n\t\treturn a/b;\n\telse\n\t\treturn a/b+1;\n}\n\nint main(){\n\tint i,j;\n\tcin>>n>>ma>>mb;\n\tfor(i=0;i<n;i++){\n\t\tcin>>s[i];\n\t}\n\tfor(i=2;i<=ma;i++){\n\t\tbool pushed=false;\n\t \twhile(ma%i==0){\n\t\t\tma/=i;\n\t\t\tif(!pushed){\n\t\t\t\tpushed=true;\n\t\t\t\tmfac.push_back(i);\n\t\t\t\tmpow[mfac.size()-1]=mb;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tmpow[mfac.size()-1]+=mb;\n\t\t\t}\t\n\t\t}\n\t}\n\tfor(i=0;i<n;i++){\n\t\tfor(j=0;j<mfac.size();j++){\n\t\t\twhile(s[i]%mfac[j]==0){\n\t\t\t\ts[i]/=mfac[j];\n\t\t\t\tspow[i][j]++;\n\t\t\t}\n\t\t}\n\t}\n\tint minmaxc=0x7fffffff;\n\tfor(i=0;i<n;i++){\n\t\tint maxc=0;\n\t\tbool ca=true;\n\t\tfor(j=0;j<mfac.size();j++){\n\t\t\tif(spow[i][j]==0){\n\t\t\t\tca=false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(updiv(mpow[j],spow[i][j])>maxc)\n\t\t\t\tmaxc=updiv(mpow[j],spow[i][j]);\n\t\t}\n\t\tif(maxc<minmaxc && ca)\n\t\t\tminmaxc=maxc;\n\t}\n\tcout<<(minmaxc==0x7fffffff ? -1 : minmaxc)<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1558754641,
        "uid": 54769,
        "name": "lgmulti",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1069 \u3010\u7ec6\u80de\u5206\u88c2\u3011"
    },
    {
        "content": "\u770b\u8d77\u6765\u9898\u89e3\u57fa\u672c\u90fd\u662f\u66b4\u529b\u5206\u89e3\u8d28\u56e0\u6570\u7684\u554a\n\n\u6765\u4e00\u53d1\u7ebf\u7b5b\u5206\u89e3\u8d28\u56e0\u6570\n\n\u9898\u610f:\u6c42\u4e00\u4e2a\u6700\u5c0f\u7684$a_i$\u4f7f\u5f97$m_1^{m_2}|S_i^{a_i}$\uff0c\u5bf9\u6240\u6709$a_i$\u53d6\u6700\u5c0f\u503c\n\n\u8003\u8651\u5206\u89e3$m_1=\\prod p_i^{k_i}$\uff0c\u90a3\u4e48$m_1^{m_2}=\\prod p_i^{m_2k_i}$\n\n\u663e\u7136\u4e00\u4e2a\u6570$S$\u6709\u89e3\u5f53\u4e14\u4ec5\u5f53$\\prod p_i|S$\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8d28\u56e0\u6570$p_i$\uff0c\u8bbe\u5b83\u5728$S$\u4e2d\u7684\u6b21\u6570\u4e3a$k'_i$\uff0c\u90a3\u4e48\u6709$a_ik'_i\\geq m_2k_i$\uff0c\u5373$a_i=\\lceil\\dfrac{m_2k_i}{k'_i}\\rceil$\n\n\u5bf9\u6bcf\u4e2a$p_i$\u5206\u522b\u6c42\u4e00\u6b21\uff0c\u7136\u540e\u53d6\u6700\u5927\u7684$a_i$\u5c31\u662f$S$\u7684\u7b54\u6848\uff0c\u5728\u6240\u6709$S_i$\u7684\u7b54\u6848\u4e2d\u53d6\u6700\u5c0f\u503c\u5c31\u662f\u6700\u7ec8\u7b54\u6848\n\n\u63a5\u4e0b\u6765\u662f\u5206\u89e3\u8d28\u56e0\u6570\n\n\u5bb9\u6613\u770b\u51fa\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u5b58$m_1$\u5206\u89e3\u8d28\u56e0\u6570\u7684\u7ed3\u679c\u5373\u53ef\n\n\u7ebf\u7b5b\u7684\u65f6\u5019\u8bb0\u5f55$pm[i]$\u8868\u793a$i$\u662f\u901a\u8fc7\u54ea\u4e00\u4e2a\u7d20\u6570\u8f6c\u79fb\u6765\u7684\uff0c\u90a3\u4e48$pm[i*prime[j]]=prime[j],pm[p]=p(p\\ \\ is\\ \\ prime)$\n\n\u6700\u540edfs\u4e00\u904d\u6c42\u51fa$m_1$\u7684\u5206\u89e3\u5f0f\n\n\u5bf9\u6bcf\u4e2a$S_i$\u76f4\u63a5\u4f7f\u7528$m_1$\u7684\u8d28\u56e0\u6570\u5206\u89e3\u5373\u53ef\n\n\u8be6\u89c1\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nconst int inf=1e9+7;\nint ans=inf,p[200000],prime[200000],pm[200000],mp[200000],cnt,tot[200000],n,m1,m2;\nvoid make(int n)\n{\n\tp[0]=p[1]=1;\n\tpm[1]=1;\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tif(!p[i])prime[++cnt]=i,pm[i]=i;\n\t\tfor(int j=1;j<=cnt&&i*prime[j]<=n;j++)\n\t\t{\n\t\t\tint x=i*prime[j];\n\t\t\tp[x]=1,pm[x]=prime[j];//\u8bb0\u5f55\u8f6c\u79fb\n\t\t\tif(i%prime[j]==0)break;\n\t\t}\n\t}\n}\nvoid dfs(int x)\n{\n\tif(x==1)return;\n\tint t=x/pm[x];\n\tdfs(t);\n\tif(pm[x]!=pm[t])mp[++cnt]=pm[x];\n\ttot[cnt]++;//\u8bb0\u5f55\u5206\u89e3\u5f0f\uff0c\u5bb9\u6613\u8bc1\u660epm\u662f\u5355\u8c03\u4e0d\u964d\u7684\n}\nint getin()\n{\n\tint x=0;char ch=getchar();\n\twhile(ch<'0'||ch>'9')ch=getchar();\n\twhile(ch>='0'&&ch<='9')x=x*10+ch-48,ch=getchar();\n\treturn x;\n}\nint main()\n{\n\tcin>>n>>m1>>m2;\n\tif(m1==1){cout<<0;return 0;}//\u7279\u52241\n\tmake(m1);cnt=0;dfs(m1);//\u7ebf\u7b5b\u6253\u8868\n\tint s=1;\n\tfor(int i=1;i<=cnt;i++)s=s*mp[i],tot[i]*=m2;//\u8fd9\u91cc\u8bb0\u5f55\u4e00\u4e2as\u7528\u6765\u5feb\u901f\u5224\u65ad\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint a=getin();\n\t\tif(a%s)continue;//\u5982\u679cSi\u4e0d\u542b\u6709m1\u4e2d\u7684\u5168\u90e8\u8d28\u56e0\u6570\u5c31\u662f\u65e0\u89e3\u7684\n\t\tint tt=0;\n\t\tfor(int j=1;j<=cnt;j++)\n\t\t{\n\t\t\tint t=0;\n\t\t\twhile(a%mp[j]==0)t++,a/=mp[j];\n\t\t\ttt=max(tt,(int)ceil(1.0*tot[j]/t));//\u5206\u89e3Si\u5e76\u7edf\u8ba1\u7b54\u6848\n\t\t}\n\t\tans=min(ans,tt);\n\t}\n\tif(ans==inf)cout<<-1;//\u65e0\u89e3\n\telse cout<<ans;\n\treturn 0;\n}\n```\n\u590d\u6742\u5ea6\u7684\u8bdd\uff0c\u5206\u89e3$m_1$\u662f$O(m_1)$\u7684\uff0c$m_1$\u7684\u8d28\u56e0\u5b50\u4e2a\u6570\u662f$O(\\log m_1)$\u7684\uff0c\u6bcf\u4e2a\u8d28\u56e0\u5b50\u5728$S_i$\u4e2d\u7684\u6b21\u6570\u662f$O(\\log S_i)$\u7684\uff0c\u6240\u4ee5\u6700\u7ec8\u590d\u6742\u5ea6$O(n\\log m\\log S)$",
        "postTime": 1534773268,
        "uid": 22136,
        "name": "qwaszx",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1069 \u3010\u7ec6\u80de\u5206\u88c2\u3011"
    },
    {
        "content": "## \u56e0\u4e3aP\u515a\u6ca1\u6709\u5149\u641c\u9898\u89e3\uff0c\u6765\u6c34\u4e00\u6ce2\n\u2474\u4ece\u6587\u4ef6\u4e2d\u8bfb\u5165m*n\u77e9\u9635\u9635\u5217\uff0c\u5c06\u5176\u8f6c\u6362\u4e3aboolean\u77e9\u9635\u5b58\u5165bz\u6570\u7ec4\u4e2d\uff1b   \n\u2475\u6cbfbz\u6570\u7ec4\u77e9\u9635\u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u5de6\u5230\u53f3\uff0c\u627e\u5230\u9047\u5230\u7684\u7b2c\u4e00\u4e2a\u7ec6\u80de\uff1b   \n\u2476\u5c06\u7ec6\u80de\u7684\u4f4d\u7f6e\u5165\u961fh\uff0c\u5e76\u6cbf\u5176\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\u56db\u4e2a\u65b9\u5411\u4e0a\u7684\u7ec6\u80de\u4f4d\u7f6e\u5165\u961f\uff0c\u5165\u961f\u540e\u7684\u4f4d\u7f6ebz\u6570\u7ec4\u7f6e\u4e3aFLASE\uff1b\n\u2477\u5c06h\u961f\u7684\u961f\u5934\u51fa\u961f\uff0c\u6cbf\u5176\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\u56db\u4e2a\u65b9\u5411\u4e0a\u7684\u7ec6\u80de\u4f4d\u7f6e\u5165\u961f\uff0c\u5165\u961f\u540e\u7684\u4f4d\u7f6ebz\u6570\u7ec4\u7f6e\u4e3aFLASE\uff1b  \n\u2478\u91cd\u590d4\uff0c\u76f4\u81f3h\u961f\u7a7a\u4e3a\u6b62\uff0c\u5219\u6b64\u65f6\u627e\u51fa\u4e86\u4e00\u4e2a\u7ec6\u80de\uff1b  \n\u2479\u91cd\u590d2\uff0c\u76f4\u81f3\u77e9\u9635\u627e\u4e0d\u5230\u7ec6\u80de\uff1b  \n\u247a\u8f93\u51fa\u627e\u5230\u7684\u7ec6\u80de\u6570\u3002\n###### \u559c\u95fb\u4e50\u89c1\u7684\u4ee3\u7801\u6765\u4e86\n```\nvar\n  n,m1,m2,i,j,k,ans,x,max:longint;\n  d:array[0..10001]of longint;\n  a,b,c:array[1..101]of longint;\nbegin\n\n\n  readln(n);\n  readln(m1,m2);\n  for i:=1 to n do\n    read(d[i]);\n\n  k:=0;\n  for i:=2 to m1 do\n    if m1 mod i=0 then\n      begin\n        inc(k);\n        a[k]:=i;\n        b[k]:=0;\n        while m1 mod i=0 do\n          begin\n            m1:=m1 div i;\n            b[k]:=b[k]+1;\n          end;\n        b[k]:=b[k]*m2;\n      end;\n\n  ans:=-1;\n  for i:=1 to n do\n    begin\n      x:=d[i];\n      for j:=1 to k do\n        begin\n          c[j]:=0;\n          while x mod a[j]=0 do\n            begin\n              x:=x div a[j];\n              c[j]:=c[j]+1;\n            end;\n        end;\n      max:=0;\n      for j:=1 to k do\n        if (c[j]<>0)and(max<>-1) then\n                                   begin\n                                     if (b[j]-1)div c[j]+1>max then\n                                                                 max:=(b[j]-1)div c[j]+1;\n                                   end\n                                 else\n                                   begin\n                                     max:=-1;\n                                     break;\n                                   end;\n      if (max<>-1)and((max<ans)or(ans=-1)) then\n                                             ans:=max;\n    end;\n\n  write(ans);\n\nend.\n\n```",
        "postTime": 1533870048,
        "uid": 66204,
        "name": "\u88d8\u5c0f\u5c0f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1069 \u3010\u7ec6\u80de\u5206\u88c2\u3011"
    },
    {
        "content": "##  \u672c\u9898\u6838\u5fc3\u601d\u60f3\uff1a\u8d28\u56e0\u6570\u5206\u89e3\n\n~~\u672c\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3,\u5927\u795e\u52ff\u55b7~~\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u5206\u5272\u7ebf\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\u5148\u8d34\u4ee3\u7801\u518d\u89e3\u91ca\uff1a\n\n```pascal\nvar\n ans,max1,i,j,n,m1,m2,x,xb:longint;\n a,b,c,d:array[1..30000]of longint;\n t:boolean;\nfunction max(x,y:longint):longint;\nbegin\n if x>y then\n  exit(x);\n exit(y);\nend;\nfunction qz(x,y:longint):longint;\nbegin\n if x mod y=0 then\n  exit(x div y) else\n  exit(x div y+1);//\u80fd\u6574\u9664\u5219\u8fd4\u56de\u6574\u9664\u503c\uff0c\u4e0d\u80fd\u5219\u8fd4\u56de\u6574\u9664\u503c+1\nend;\nbegin\n ans:=maxlongint;//\u8bbe\u7f6e\u6700\u5927\u503c\uff0c\u65b9\u4fbf\u540e\u9762\u6bd4\u8f83\n readln(n);\n readln(m1,m2);\n i:=2;\n while m1<>1 do\n  if m1 mod i=0 then\n   begin\n    inc(a[i]);\n    m1:=m1 div i;\n   end else\n    inc(i);//\u5bf9m1\u8fdb\u884c\u8d28\u56e0\u6570\u5206\u89e3\uff0c\u628a\u8d28\u56e0\u6570\u548c\u4e2a\u6570\u4fdd\u5b58\u5728a\u6570\u7ec4\n for i:=1 to 30000 do\n  if a[i]<>0 then\n   begin\n    inc(xb);\n    b[xb]:=i;\n   end;//\u5229\u7528\u6876\u628a\u4e0d\u662fm1\u7684\u8d28\u56e0\u6570\u548c\u5408\u6570\u7b5b\u53bb\uff0c\u505a\u4e00\u4e2a\u4f18\u5316\uff0c\u8282\u7701\u65f6\u95f4\n for i:=1 to xb do\n  a[b[i]]:=a[b[i]]*m2;//\u628a\u9700\u8981\u7684\u8d28\u56e0\u6570\u4e58m2\n for i:=1 to n do\n  begin\n   read(x);\n   c:=d;//\u6e05\u7a7ac\u6570\u7ec4\n   t:=true;//\u7528\u6765\u5224\u65adx\u662f\u5426\u5408\u6cd5\u7684\u5e03\u5c14\u503c\n   for j:=1 to xb do\n    if x mod b[j]<>0 then//\u662f\u5426\u5305\u542b\u6240\u6709\u9700\u8981\u7684\u8d28\u56e0\u5b50\n     begin\n      t:=false;\n      break;//\u4e0d\u5305\u542b\u5219\u9000\u51fa\u5e76\u5c06t\u6539\u5047\n     end else\n      while x mod b[j]=0 do//\u5305\u542b\u5219\u5c06\u5176\u4e00\u76f4\u5206\u89e3\u81f3\u65e0\u6cd5\u5206\u89e3\n       begin\n        inc(c[b[j]]);\n        x:=x div b[j];\n       end;\n   if not t then\n    continue;//\u4e0d\u5408\u6cd5\u5219\u4e0b\u4e00\u4e2a\n   max1:=0;//\u7528\u4e8e\u6c42\u5355\u4e2a\u5408\u6cd5\u7ec6\u80de\u57f9\u517b\u6700\u5c0f\u65f6\u95f4\n   for j:=1 to xb do//\u6bd4\u8f83max1\u548c\u7ec6\u80de\u8d28\u56e0\u5b50\u4e0e\u8bd5\u7ba1\u8d28\u56e0\u5b50\uff0cqz\u51fd\u6570\u89c1\u4e0a\n    max1:=max(max1,qz(a[b[j]],c[b[j]]));\n   if ans>max1 then\n    ans:=max1;//\u6c42\u51fa\u6700\u5c0f\u503c\n  end;\n if ans=maxlongint then\n  writeln(-1) else\n  writeln(ans);//\u5224\u65ad\u662f\u5426\u6709\u5408\u6cd5\u503c\u5e76\u8f93\u51fa\nend.\n\n```\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u53cd\u6284\u88ad\u5206\u5272\u7ebf\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n### \u8fd8\u8bf7\u5927\u795e\u6307\u6559",
        "postTime": 1531748593,
        "uid": 35049,
        "name": "tangwenjie",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1069 \u3010\u7ec6\u80de\u5206\u88c2\u3011"
    },
    {
        "content": "\u770b\u5230\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u9996\u5148\u53ef\u4ee5\u60f3\u5230\u4efb\u610f\u4e00\u4e2a\u5927\u4e8e1\u7684\u6570\u53ef\u4ee5\u552f\u4e00\u5206\u89e3\u6210\u51e0\u4e2a\uff08\u6216\u4e00\u4e2a\uff09\u7d20\u6570\u4e4b\u79ef\u7684\u5f62\u5f0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06\u521d\u59cb\u7684m1\u5206\u89e3\u6210\u51e0\u4e2a\u7d20\u6570\u7684\u4e58\u79ef\uff0c\u7531\u4e8e\u5b58\u5728\u6307\u6570m2\uff0c\u6240\u4ee5\u518d\u5c06\u5206\u89e3\u51fa\u7684\u7d20\u6570\u7684\u6307\u6570\u4e58\u4e0am2\uff0c\u5c31\u662f\u90a3\u4e2a\u5927\u6570\u7684\u8d28\u56e0\u6570\u5206\u89e3\u7ed3\u679c\u3002\u4e4b\u540e\u5c06n\u4e2a\u6570\u9010\u4e2a\u8fdb\u884c\u8d28\u56e0\u6570\u5206\u89e3\uff0c\u82e5\u5b58\u5728\u67d0\u4e2a\u8d28\u56e0\u5b50\u5728\u5927\u6570\u4e2d\u51fa\u73b0\u800c\u672a\u5728\u7b2ci\u4e2a\u6570\u4e2d\u51fa\u73b0\uff0c\u5219\u65e0\u6cd5\u5206\u5272\uff0c\u5426\u5219\uff0c\u6c42\u51fa \u7b2ci\u4e2a\u6570\u4e2d\u6700\u5c11\u590d\u5236\u51e0\u6b21\u53ef\u4ee5\u4f7f\u6240\u6709\u8d28\u56e0\u5b50\u4e2a\u6570\u5927\u4e8e\u90a3\u4e2a\u5927\u6570\uff0c\u518d\u5c1d\u8bd5\u66f4\u65b0\u7b54\u6848\u3002\u53e6\u5916\u7b5b\u9009\u7d20\u6570\u6700\u597d\u4f7f\u7528\u6b27\u62c9\u7b5b\u6cd5\uff0c\u901f\u5ea6\u5feb\u3002\n\n#include<iostream>\n\n#include<cstring>\n\nusing namespace std;\n\nint n,m1,m2,num[10001],divide[30001],temp[30001],m1len,templen,\n\n```cpp\nnowans,ans=0x7fffffff;\nint prime[30001],counts=0;\nbool flag[30001],ok;\nvoid getprime(int maxn){\n    for (int i=2;i<=maxn;i++){\n        if (!flag[i]){\n            prime[++counts]=i;\n        }\n        for (int j=1;j<=counts&&prime[j]*i<=maxn;j++){\n            flag[prime[j]*i]=true;\n            if (i%prime[j]==0) break;\n        }\n    }\n}\nint minlarger(const int &orig,const int &targ){\n    for (int i=1;;i++)\n        if (targ*i>=orig) return i;\n}\nvoid prime_divide(int *arr,int num,const int *prime,int &len){\n    int i;\n    for (i=1;prime[i]<=num&&prime[i]!=0;i++)\n        while (num%prime[i]==0){\n            arr[i]++;\n            num/=prime[i];\n        }\n    len=i-1;\n}\nint main(){\n    std::ios::sync_with_stdio(false);\n    cin.tie(0);\n    cin>>n;\n    cin>>m1>>m2;\n    for (int i=1;i<=n;i++) cin>>num[i];\n    getprime(m1);\n    prime_divide(divide,m1,prime,m1len);\n    for (int i=1;i<=m1len;i++)\n        divide[i]*=m2;\n    for (int i=1;i<=n;i++){\n        memset(temp,0,sizeof(temp));\n        prime_divide(temp,num[i],prime,templen);\n        ok=true;\n        nowans=0;\n        for (int j=1;j<=m1len;j++)\n            if (divide[j])\n                if (temp[j]==0){\n                    ok=false;\n                    break;\n                }else{\n                    nowans=max(nowans,minlarger(divide[j],temp[j]));\n                }\n        if (!ok) continue;\n        ans=min(nowans,ans);\n    }\n    if (ans!=0x7fffffff) cout<<ans;\n    else cout<<-1;\n    return 0;\n}\n```",
        "postTime": 1472116772,
        "uid": 9508,
        "name": "\u9648\u56fd\u51ef",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1069 \u3010\u7ec6\u80de\u5206\u88c2\u3011"
    },
    {
        "content": "/\\*\n\u4e0d\u96be\u770b\u51fa\uff0c\u8fd9\u662f\u4e00\u9053\u5e94\u7528\u552f\u4e00\u5206\u89e3\u5b9a\u7406\u7684\u6570\u8bba\u9898\n\n\u5176\u5b9e\u8003\u8bd5\u7684\u65f6\u5019\u5c31\u770b\u51fa\u6765\u4e86\uff0c\u65e0\u5948\u5c31\u5f97\u4e8640\u5206\uff0c\u662f\u56e0\u4e3a\u6211\u628a\u6bcf\u4e2asi\u5206\u89e3\u65f6\n\n\u7528\u4e86\u4e8c\u7ef4\u6570\u7ec4\uff0c\u4e0d\u6562\u5f00\u5927\u6570\u7ec4\uff0c\u5176\u5b9e\u4e00\u60f3\uff0c\u7528\u4e00\u7ef4\u6570\u7ec4\u5c31\u884c\uff0c\u4ec0\u4e48\u65f6\u5019\u7528\n\n\u4ec0\u4e48\u65f6\u5019\u5728\u7ebf\u7b97\uff0c\u8111\u6b8b\u7adf\u7136\u6ca1\u53d1\u73b0 \u2026\u2026\n\n\\*/\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#define M 10002\n#define INF 1000010\nusing namespace std;\nint a[M],n,x,y,fen[M],sum[M];\nint su[M],f[M*3],cnt;\nint read()\n{\n    char c=getchar();int num=0,flag=1;\n    while(c<'0'||c>'9'){if(c=='-')flag=-1;c=getchar();}\n    while(c>='0'&&c<='9'){num=num*10+c-'0';c=getchar();}\n    return num*flag;\n}\nvoid get_su()\n{\n    for(int i=2;i<=x;i++)\n      f[i]=1;\n    for(int i=2;i<=x;i++)\n      if(f[i])\n      {\n          su[++cnt]=i;\n          for(int j=2;i*j<=x;j++)\n            f[i*j]=0;\n      }\n}\nvoid get_fen()\n{\n    int xx=x;\n    for(int j=1;j<=cnt;j++)\n    {\n        if(xx==1)break;\n        while(xx&&xx%su[j]==0)\n          fen[j]++,xx/=su[j];\n        fen[j]*=y;\n    }\n}\nvoid get_sum(int xx)\n{\n    memset(sum,0,sizeof(sum));\n    for(int j=1;j<=cnt;j++)\n    {\n        if(xx==1)break;\n        while(xx&&xx%su[j]==0)\n          sum[j]++,xx/=su[j];\n    }\n}\nint main()\n{\n    n=read();x=read();y=read();\n    if((x==1&&y==1)||y==0){printf(\"0\");return 0;}\n    for(int i=1;i<=n;i++)\n      a[i]=read();\n    get_su();\n    get_fen();\n    int ans=INF;\n    for(int i=1;i<=n;i++)\n    {\n        int p=0;\n        get_sum(a[i]);\n        for(int j=1;j<=cnt;j++)\n        {\n            if(sum[j])\n            {\n                if(fen[j]%sum[j]==0) p=max(p,fen[j]/sum[j]);\n                else p=max(p,fen[j]/sum[j]+1);\n            } \n            else if(fen[j]){p=INF;break;}\n        }\n        ans=min(ans,p);\n    }\n    if(ans<INF)printf(\"%d\",ans);\n    else printf(\"-1\");\n    return 0;\n}\n```",
        "postTime": 1471668417,
        "uid": 20376,
        "name": "wangzh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1069 \u3010\u7ec6\u80de\u5206\u88c2\u3011"
    },
    {
        "content": "\u7531\u4e8e\u6570\u636e\u592a\u5927\uff0c\u6839\u672c\u4e0d\u80fd\u76f4\u63a5\u8ba1\u7b97\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u56e0\u5f0f\u5206\u89e3\u6765\u627e\u5230\u7a81\u7834\u70b9\u3002\u5f53m1\u5206\u89e3\u51fa\u4e00\u4e2a\u56e0\u6570\u800cs[i]\u6ca1\u6709\u65f6\uff0c\u8fd9\u79cd\u60c5\u51b5\u80af\u5b9a\u65e0\u89e3\uff0c\u5f53m1\u548cs[i]\u5bf9\u6b64\u56e0\u6570\u5404\u6709\u4e00\u5b9a\u6570\u91cf\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u7b97\u51fa\u8ba9\u6b64\u56e0\u6570\u5f97\u5230\u6574\u9664\u7684a\u6700\u5c0f\u503c\uff08\u53ef\u80fd\u4e0d\u662f\u6240\u6709\u56e0\u6570\u4e2d\u6700\u4f18\u7b54\u6848\uff0c\u53d6\u6240\u6709\u56e0\u6570\u7b54\u6848\u6700\u5927\u7684\uff09\u8bbex\u4e3am1\u6b64\u56e0\u6570\u7684\u4e2a\u6570\uff0cy\u4e3as[i]\u6b64\u56e0\u6570\u7684\u4e2a\u6570\uff0c\u5219\n\na=x div y; If  x\\*a<y then inc(a)\u3002\n",
        "postTime": 1380711129,
        "uid": 1187,
        "name": "AKB48",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1069 \u3010\u7ec6\u80de\u5206\u88c2\u3011"
    }
]