[
    {
        "content": "\u6b64\u9898\u6709\u4e09\u79cd\u505a\u6cd5\uff1a\n\n\n1.\u5e73\u8861\u6811\u5957\u7ebf\u6bb5\u6811\n\n\n2.\u7ebf\u6bb5\u6811\u5957\u7ebf\u6bb5\u6811\n\n\n3.\u6574\u4f53\u4e8c\u5206\n\n\n\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e0b\u540e\u4e24\u79cd\u505a\u6cd5\u3002\n\n\n\u6211\u5148\u5199\u4e86\u4e2a200+\u884c\u7684\u7ebf\u6bb5\u6811\u5957\u5e73\u8861\u6811\uff08~~\u6ce8\u610f\u987a\u5e8f~~\uff09\uff0c\u7136\u540e\u6548\u7387\u662f$O(nlog^3n)$\uff0c\u7b80\u76f4\u7206\u70b8\u3002\n\n\n### 2.\u7ebf\u6bb5\u6811\u5957\u7ebf\u6bb5\u6811\n\n\u4e3a\u4ec0\u4e48\u7ebf\u6bb5\u6811\u5957\u5e73\u8861\u6811\u662f$O(nlog^3n)$\u7684\u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u67e5\u8be2\u7684\u662f\u6743\u503c\uff0c\u7136\u800c\u6211\u5916\u5c42\u662f\u7ebf\u6bb5\u6811\uff0c\u6240\u4ee5\u5148\u4e8c\u5206\u7b54\u6848\uff0c\u7136\u540e\u5206\u89e3\u533a\u95f4\uff0c\u5230\u4e86\u5404\u4e2a\u5e73\u8861\u6811\u65f6\uff0c\u53c8\u76f8\u5f53\u4e8e\u4e8c\u5206\u4e86\u4e00\u6b21\u4f4d\u7f6e\uff0c\u5b9e\u5728\u662f\u6ca1\u5fc5\u8981\u3002\n\n\n\u56e0\u6b64\uff0c\u8fd9\u91cc\uff0c\u6211\u4eec\u7684\u7ebf\u6bb5\u6811\u5957\u7ebf\u6bb5\u6811\uff0c\u786e\u5207\u7684\u8bf4\u5e94\u8be5\u662f\u6743\u503c\u7ebf\u6bb5\u6811\u5957\u533a\u95f4\u7ebf\u6bb5\u6811\u3002\n\n\n\u5916\u5c42\u662f\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u5b9e\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a\u4e8c\u5206\u7b54\u6848\u7684\u8fc7\u7a0b\uff0c\u7136\u540e\u8fd0\u7528\u7c7b\u4f3c\u5f52\u5e76\u6811\u548c\u4e3b\u5e2d\u6811\u7684\u601d\u60f3\uff0c\u6211\u4eec\u8bbe\u8be2\u95ee\u533a\u95f4\u4e3a$[ql,qr]$,\u7b54\u6848\u533a\u95f4\u4e3a$[l,r]$,\u53d6\u5176$mid$\uff0c\u7136\u540e\u8ba1\u7b97\u5728\u5de6\u513f\u5b50$[l,mid]$\u548c\u8be2\u95ee\u533a\u95f4$[ql,qr]$\u4e2d\u7684\u6570\u7684\u4e2a\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5224\u65ad\u7b54\u6848\u662f\u5927\u4e8e$mid$\u8fd8\u662f\u5c0f\u4e8e$mid$\u7684\u4e86\u3002\u800c\u5728\u6743\u503c\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u4e0a\u90fd\u5efa\u4e00\u4e2a\u533a\u95f4\u7ebf\u6bb5\u6811\uff0c\u6765\u7ef4\u62a4\u8be5\u6743\u503c\u5728$[1,n]$\u6240\u6709\u533a\u95f4\u4e0a\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u7136\u540e\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u548c\u5c31\u597d\u4e86\u3002\n\n\n\u8fd8\u6709\u5c31\u662f\u9632\u6b62MLE\uff0c\u5728\u533a\u95f4\u7ebf\u6bb5\u6811\u4e0a\u641e\u4e2a\u52a8\u6001\u5f00\u70b9\u5c31\u597d\u4e86\u3002\n\n\n\u7b97\u6cd5\u8bbe\u8ba1\u57fa\u672c\u4e0a\u5c31\u662f\u8fd9\u6837\u4e86\uff0c\u5177\u4f53\u7ec6\u8282\u5c31\u770b\u4ee3\u7801\u4e86\u3002\n\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<vector>\n#include<iostream>\n#include<ctime>\n#define rint register int\nusing namespace std;\ntypedef long long ll;\nconst int inf = 0x7fffffff;\nconst int N=5e4+5;\nconst int Tree=N*400;\nint n,m,node=0,totn;\nint ql[N],qr[N],op[N],b[N],k[N];\nint rt[N<<2],tag[Tree];\nll sz[Tree];\nstruct Tnode{\n    int L,R;\n}T[Tree];\ninline int read(){\n    int x=0,f=1;char ch=getchar();\n    while (ch<'0' || ch>'9'){if (ch=='-')f=-1;ch=getchar();}\n    while ('0'<=ch && ch<='9'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n    return x*f;\n}\n#define lc p<<1\n#define rc p<<1|1\ninline void pushdown(int p,int l,int r){\n    int &v=tag[p],mid=(l+r)>>1;\n    if (!T[p].L)T[p].L=++node;\n    if (!T[p].R)T[p].R=++node;\n    tag[T[p].L]+=v,tag[T[p].R]+=v;\n    sz[T[p].L]+=v*(mid-l+1),sz[T[p].R]+=v*(r-mid);\n    v=0;\n}\ninline void update(int &p,int ql,int qr,int l=1,int r=n){\n    if (!p)p=++node;\n    if (ql<=l && r<=qr){\n        ++tag[p];sz[p]+=r-l+1;\n        return;\n    }\n    if (tag[p])pushdown(p,l,r);\n    rint mid=(l+r)>>1;\n    if (ql<=mid) update(T[p].L,ql,qr,l,mid);\n    if (mid<qr) update(T[p].R,ql,qr,mid+1,r);\n    sz[p]=sz[T[p].L]+sz[T[p].R];\n}\ninline ll getsum(int &p,int ql,int qr,int l=1,int r=n){\n    if (!p)return 0;\n    if (ql<=l && r<=qr) return sz[p];\n    if (tag[p])pushdown(p,l,r);\n    rint mid=(l+r)>>1;\n    ll tt=0;\n    if (ql<=mid) tt+=getsum(T[p].L,ql,qr,l,mid);\n    if (mid<qr) tt+=getsum(T[p].R,ql,qr,mid+1,r);\n    return tt;\n}\ninline void add(int ql,int qr,int k,int p=1,int l=1,int r=totn){\n    update(rt[p],ql,qr);\n    if (l==r) return;\n    rint mid=(l+r)>>1;\n    if (k<=mid) add(ql,qr,k,lc,l,mid);\n        else add(ql,qr,k,rc,mid+1,r);\n}\ninline int query(int ql,int qr,ll k,int p=1,int l=1,int r=totn){\n    if (l==r) return b[l];\n    rint mid=(l+r)>>1;\n    ll tt=getsum(rt[rc],ql,qr);\n    if (tt<k) return query(ql,qr,k-tt,lc,l,mid);\n        else return query(ql,qr,k,rc,mid+1,r);\n}\nint main(){\n    n=read(),m=read();\n    for (rint i=1;i<=m;++i){\n        op[i]=read(),ql[i]=read(),qr[i]=read(),k[i]=read();\n        if (op[i]==1)b[++totn]=k[i];\n    }\n    sort(b+1,b+totn+1);\n    totn=unique(b+1,b+totn+1)-b-1;\n    for (rint i=1;i<=m;++i)\n        if (op[i]==1)k[i]=lower_bound(b+1,b+totn+1,k[i])-b;\n    for (rint i=1;i<=m;++i){\n        if (op[i]==1){\n            add(ql[i],qr[i],k[i]);\n        }else{\n            printf(\"%d\\n\",query(ql[i],qr[i],k[i]));\n        }\n    }\n    return 0;\n}\n```\n\n### 3.\u6574\u4f53\u4e8c\u5206\n\n\u8fd9\u5e94\u8be5\u5c5e\u4e8e\u7ec3\u6574\u4f53\u4e8c\u5206\u7684\u4e00\u9053\u6bd4\u8f83\u57fa\u7840\u7684\u9898\u76ee\u4e86\u3002\n\n\n\u4f55\u8c13\u6574\u4f53\u4e8c\u5206\uff1f\u5c31\u662f\u76f4\u63a5\u4e00\u8d77\u4e8c\u5206\u6240\u6709\u7684\u8be2\u95ee\u64cd\u4f5c\u7684\u7b54\u6848\uff0c\u7136\u540e\u66b4\u529b\u626b\u63cf\u5f53\u524d\u64cd\u4f5c\u533a\u95f4\uff0c\u5c06\u5176\u5212\u5206\u4e3a\u7b54\u6848\u7684\u5de6\u5b50\u533a\u95f4\u4e0e\u53f3\u5b50\u533a\u95f4\u4e24\u4e2a\u90e8\u5206\u3002\n\n\n\u90a3\u4e48\u4ee5\u4ec0\u4e48\u4e3a\u5212\u5206\u4f9d\u636e\u5462\uff1f\u770b\u770b\u8fd9\u4e2a\u64cd\u4f5c\u5bf9\u4e8e\u5de6\u5b50\u533a\u95f4\u6709\u6ca1\u6709\u8d21\u732e\u3002\u5982\u679c\u6ca1\u6709\uff0c\u90a3\u4e48\u5c31\u5212\u5206\u5230\u53f3\u5b50\u533a\u95f4\u4e2d\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u64cd\u4f5c\u7684\u6743\u503c\u66f4\u6539\u4e3a\u8fd9\u4e2a\u8d21\u732e\u51cf\u53bb\u6240\u9700\u7684\u8d21\u732e\uff0c\u53cd\u4e4b\uff0c\u5219\u5212\u5206\u5230\u5de6\u5b50\u533a\u95f4\u4e2d\uff0c\u540c\u65f6\u5c06\u8fd9\u4e2a\u64cd\u4f5c\u7684\u8d21\u732e\u52a0\u5165\u67d0\u4e00\u4e2a\u5bb9\u5668\uff0c\u4e3a\u8be2\u95ee\u64cd\u4f5c\u670d\u52a1\u3002\n\n\n\u8fd9\u4e48\u8bf4\u53ef\u80fd\u6709\u70b9\u6655\u3002\u5c31\u8fd9\u9053\u9898\u8bf4\u7684\u8bdd\uff0c\u5e94\u8be5\u662f\u8fd9\u6837\uff1a\n\n\u6211\u4eec\u8bbe\u5c1a\u672a\u89e3\u51b3\u7684\u64cd\u4f5c\u533a\u95f4\u4e3a$[ql,qr]$,\u7b54\u6848\u533a\u95f4\u4e3a$[l,r]$,\u4ee4\u5f53\u524d\u7b54\u6848\u4e3a$mid$\u3002\n\n\n\u5219\u82e5\u8be5\u64cd\u4f5c\u662f\u6dfb\u52a0\u64cd\u4f5c\uff0c\u5982\u679c\u5176\u6dfb\u52a0\u7684$C<=mid$\uff0c\u8fd9\u6b64\u6b21\u64cd\u4f5c\u5bf9\u4e8e\u5de6\u5b50\u533a\u95f4\u6709\u8d21\u732e\uff0c\u52a0\u5165\u5de6\u5b50\u533a\u95f4\u4e2d\uff0c\u5e76\u5c06\u533a\u95f4\u7ebf\u6bb5\u6811\u4e2d\u7684\u533a\u95f4$[q[i].l,q[i].r]$\u6574\u4f53\u52a0$1$.\n\n\n\u53cd\u4e4b\uff0c\u5219\u5c06\u64cd\u4f5c\u52a0\u5165\u5230\u53f3\u5b50\u533a\u95f4\u4e2d\u3002\n\n\n\u82e5\u8be5\u64cd\u4f5c\u662f\u8be2\u95ee\u64cd\u4f5c\uff0c\u5982\u679c\u5f53\u524d\u7684$mid$\u5728\u7ebf\u6bb5\u6811\u4e2d\u67e5\u8be2\u5230\u7684\uff0c\u6bd4\u5b83\u5927\u7684\u6570\u7684\u4e2a\u6570$query()>=q[i].k$\uff0c\u5219\u8bc1\u660e\u8be5\u8be2\u95ee\u64cd\u4f5c\u5e94\u8be5\u5728\u53f3\u5b50\u533a\u95f4\u5185\u53ef\u4ee5\u627e\u5230\u7b54\u6848\u3002\u53cd\u4e4b\uff0c\u5219\u5c06$q[i].k-=query()$\uff0c\u51cf\u53bb\u6b64\u6b21\u67e5\u8be2\u7684\u8d21\u732e\uff0c\u7136\u540e\u5c06\u8be2\u95ee\u64cd\u4f5c\u6dfb\u52a0\u5230\u5de6\u5b50\u533a\u95f4\u4e2d\u3002\n\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#define rint register int\nusing namespace std;\ntypedef long long ll;\nconst int N=5e4+5;\nstruct Ask{\n    int op,l,r,id;\n    ll v;\n}q[N],tl[N],tr[N];\nint tag[N<<2],rec[N<<2],ans[N];\nll sum[N<<2];\nint n,m,Q;\ninline int read(){\n    int x=0,f=1;char ch=getchar();\n    while (ch<'0' || ch>'9'){if (ch=='-')f=-1;ch=getchar();}\n    while ('0'<=ch && ch<='9'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n    return x*f;\n}\n#define lc p<<1\n#define rc p<<1|1\ninline void pushdown(int p,int l,int r){\n    if (rec[p]){\n        rec[p]=0;\n        tag[lc]=tag[rc]=sum[lc]=sum[rc]=0;\n        rec[lc]=1,rec[rc]=1;\n    }\n    if (tag[p]){\n        rint mid=(l+r)>>1;\n        tag[lc]+=tag[p],tag[rc]+=tag[p];\n        sum[lc]+=tag[p]*(mid-l+1);\n        sum[rc]+=tag[p]*(r-mid);\n        tag[p]=0;\n    }\n}    \ninline void add(int ql,int qr,int w,int p=1,int l=1,int r=n){\n    if (ql<=l && r<=qr){\n        tag[p]+=w;sum[p]+=w*(r-l+1);\n        return;\n    }\n    if (tag[p] || rec[p])pushdown(p,l,r);\n    rint mid=(l+r)>>1;\n    if (ql<=mid) add(ql,qr,w,lc,l,mid);\n    if (mid<qr) add(ql,qr,w,rc,mid+1,r);\n    sum[p]=sum[lc]+sum[rc];\n}\ninline ll query(int ql,int qr,int p=1,int l=1,int r=n){\n    if (ql<=l && r<=qr)return sum[p];\n    rint mid=(l+r)>>1;\n    ll tt=0;\n    if (tag[p] || rec[p])pushdown(p,l,r);\n    if (ql<=mid) tt+=query(ql,qr,lc,l,mid);\n    if (mid<qr) tt+=query(ql,qr,rc,mid+1,r);\n    return tt;\n}\ninline void solve(int st,int en,int l,int r){\n    if (l==r){\n        for (rint i=st;i<=en;++i)\n            if (q[i].op==2) ans[q[i].id]=l;\n        return;\n    }\n    rint mid=(l+r)>>1;\n    bool fl=0,fr=0;\n    rint L=0,R=0;\n    rec[1]=1;tag[1]=sum[1]=0;\n    for (rint i=st;i<=en;++i)\n        if (q[i].op==1){\n            if (q[i].v>mid){\n                add(q[i].l,q[i].r,1);\n                tr[++R]=q[i];\n            }else\n                tl[++L]=q[i];\n        }else{\n            ll val=query(q[i].l,q[i].r);\n            if (val<q[i].v){\n                q[i].v-=val;\n                fl=1;\n                tl[++L]=q[i];\n            }else{\n                fr=1;\n                tr[++R]=q[i];\n            }\n        }\n    for (rint i=1;i<=L;++i) q[st+i-1]=tl[i];\n    for (rint i=L+1;i<=L+R;++i) q[st+i-1]=tr[i-L];\n    if (fl) solve(st,st+L-1,l,mid);\n    if (fr) solve(st+L,en,mid+1,r);\n}\nint main(){\n    n=read(),m=read();\n    for (rint i=1;i<=m;++i){\n        q[i].op=read(),q[i].l=read(),q[i].r=read(),q[i].v=read();\n        if (q[i].op==2)q[i].id=++Q;\n    }\n    solve(1,m,-n,n);\n    for (rint i=1;i<=Q;++i)\n        printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```\n\n\u8c8c\u4f3c\u4e00\u6bd4\uff0c\u6811\u5957\u6811\u8fd8\u597d\u5199\u4e00\u70b9\u54c8\uff1f\n",
        "postTime": 1517058792,
        "uid": 54916,
        "name": "I_AM_HelloWord",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3332 \u3010[ZJOI2013]K\u5927\u6570\u67e5\u8be2\u3011"
    },
    {
        "content": "## \u4ece0\u8d77\u6b65\u7684\u6811\u72b6\u6570\u7ec4->\u7ebf\u6bb5\u6811->\u52a8\u6001\u5f00\u70b9->\u6811\u5957\u6811\uff01\n\n---\n\n\u526f\u56fe\u8be6\u89e3\uff0c\u4e0d\u4f1a\u7684\u540c\u5b66\u53ef\u4ee5\u6765\u770b\u770bqwq \u3010\u6709\u4e9b\u4ee3\u7801\u6ca1\u7f16\u8bd1\u8fc7\uff0c\u6709\u9519\u8bf7\u5927\u4f6c\u4eec\u6307\u51fa\u3011\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u7ebf\u6bb5\u6811\uff0c\u6811\u72b6\u6570\u7ec4\uff0c\u52a8\u6001\u5f00\u70b9\n\n---\n\n## 1.\u524d\u7f6e\u77e5\u8bc6\uff0c\u4f1a\u7684\u795e\u4ed9\u8bf7\u8df3\u8fc7\n\n### 1.\u6811\u72b6\u6570\u7ec4\n\u6811\u72b6\u6570\u7ec4\u6709\u5341\u5206\u4f18\u79c0\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u5e38\u6570\u3002\n\n\u5b9a\u4e49 `lowbit(x)` \u4e3a $x$ \u4e8c\u8fdb\u5236\u4e0b\u7684\u6700\u4f4e\u4f4d\n\n`lowbit(x)=x&-x`\uff0c\u4e3b\u8981\u662f\u5229\u7528\u8865\u7801\u7684\u6027\u8d28\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8be6\u7ec6\u5c55\u5f00\u4e86\n\n\u7b80\u5355\u8bb2\uff0c\u6811\u72b6\u6570\u7ec4\u5c31\u662f\u628a\u4e00\u4e2a\u6570\u62c6\u6210\u51e0\u4e2a$2^x$\u7684\u548c\u6765\u5904\u7406\uff0c\u5c31\u662f\u8fd9\u4e2a\u6570$2$\u8fdb\u5236\u4e2d\u7684$1$\u6765\u5904\u7406\n\n\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u6570\u7ec4$a$\uff0c\u6811\u72b6\u6570\u7ec4\u4e3a$b$\n\n\u5219\u6709$b_i= \\sum_{i-2^{lowbit(i)}+1}^{i}a_i$\n\n\u5148\u526f\u4e00\u5f20\u56fe\n![](https://cdn.luogu.com.cn/upload/image_hosting/xnqjau4s.png)\n\u663e\u7136\uff0c\u627e\u5230\u4e00\u4e2a\u8282\u70b9$x$\u7684\u7236\u4eb2\u4e3a `x+lowbit(x)`\n\n#### 1.\u4fee\u6539\n\n\u6811\u72b6\u6570\u7ec4\u652f\u6301\u5355\u70b9\u4fee\u6539\u3002\n\n\u5047\u8bbe\u6211\u4eec\u8981\u6539\u53d8 $a_x$ \u7684\u503c\u3002\n\n\u7531\u4e8e\u6211\u4eec\u8981\u627e\u6539\u53d8\u7684$b$,\u6211\u4eec\u53ea\u8981\u4ece$x$\u5f00\u59cb\uff0c\u4e0d\u505c\u5730\u5f80\u4e0a\u8df3\u5373\u53ef\uff0c\u4ee3\u7801:\n\n`for(int i = x; i <= n; i += lowbit(i))`\n\n\u590d\u6742\u5ea6:$O(\\log n)$\n#### 2.\u67e5\u8be2\n\n\u5047\u8bbe\u6211\u4eec\u8981\u67e5\u8be2\u7684\u662f$\\sum_{l}^{r}a_i$\n\n\u6211\u4eec\u53ea\u8981\u7528$\\sum_{1}^{r}a_i-\\sum_{1}^{l-1}a_i$\u5373\u53ef\n\n\u5047\u8bbe\u6211\u4eec\u8981\u8ba1\u7b97$\\sum_{x}^{r}a_i$\n\n\u524d\u9762\u6211\u4eec\u8bf4$b_i= \\sum_{i-2^{lowbit(i)}+1}^{i}a_i$\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u6bcf\u6b21\u51cf\u53bb\u8fd9\u4e2a\u8282\u70b9\u6240\u8986\u76d6\u7684\u533a\u95f4\uff0c\u76f4\u5230$0$\u4e3a\u6b62,\u4ee3\u7801:\n\n`for(int i = x; i != 0; i -= lowbit(i) sum+=b[i];`\n\n### 2.\u7ebf\u6bb5\u6811(\u6807\u8bb0\u6c38\u4e45\u5316)\n\u8fd9\u91cc\u6211\u4eec\u8bb2\u7684\u662f\u6807\u8bb0\u6c38\u4e45\u5316\n\n\u7ebf\u6bb5\u6811\u662f\u76f4\u63a5\u628a\u4e00\u4e2a\u533a\u95f4\u62c6\u6210\u51e0\u4e2a\u5757\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/nq0i2hxy.png)\n\n#### 1.\u4fee\u6539\n\n\u5047\u8bbe\u6211\u4eec\u8981\u628a$a_4 - a_7$ \u52a0 $1$\n![](https://cdn.luogu.com.cn/upload/image_hosting/d12qg82n.png)\n\u8fd9\u91cc\u6709\"+\"\u7684\u533a\u95f4\u548c\u589e\u52a0\uff0c\u6253\u7ea2\u221a\u7684\u8981\u52a0\u4e00\u4e2a$lazy$\u6807\u8bb0\uff0c\u4ed6\u4eec\u7684$lazy$\u6807\u8bb0\u52a0\u4e00\n\n\u5728\u5b9e\u9645\u8fd0\u7528\u4e2d\uff0c\u6211\u4eec\u628a\u67d0\u4e2a\u8282\u70b9\u7684\u5de6\u513f\u5b50\u4e3a`\u8fd9\u4e2a\u8282\u70b9\u7f16\u53f7<<1`\uff0c\u53f3\u513f\u5b50\u4e3a`\u8fd9\u4e2a\u8282\u70b9\u7f16\u53f7<<1|1`\n\n\u4ee3\u7801:\n```\nvoid ins(int L,int R,int l,int r,int c,int nod) {\n\tint mid = ((L+R)>>1);\n\tsum[nod]+=(r-l+1)*c;\n\tif(L==l&&R==r) lazy[nod]+=c;\n\telse if(r<=mid) ins(L,mid,l,r,c,nod<<1);\n\telse if(l> mid) ins(mid+1,R,l,r,c,nod<<1|1);\n\telse ins(L,mid,l,mid,c,nod<<1),ins(mid+1,R,mid+1,r,c,nod<<1|1);\n}\n```\n#### 2.\u67e5\u8be2\n\n\u6b64\u65f6\u6211\u4eec\u9012\u5f52\u65f6\u53ea\u8981\u7ecf\u8fc7\u8fd9\u4e2a\u7ed3\u70b9\uff0c\u5c31\u628a\u8fd9\u4e2a\u7ed3\u70b9\u7684\u7b54\u6848\u52a0\u4e0a $lazy\u00d7(r-l+1)$ ($r$, $l$\u4e3a\u9012\u5f52\u65f6\u67e5\u8be2\u7684\u5de6\u53f3\u7aef\u70b9)\n\n\u5982\u679c\u8fd9\u4e2a\u533a\u95f4\u6070\u597d\u4e0e\u67e5\u8be2\u533a\u95f4\u91cd\u5408\uff0c\u76f4\u63a5$return$\u8fd9\u4e2a\u8282\u70b9\u7684$sum$\u5373\u53ef\n\n\u4ee3\u7801\uff1a\n```\nint query(int L,int R,int l,int r,int nod) {\n\tint mid = ((L+R)>>1);\n\tif(L==l&&R==r) return sum[nod];\n\telse if(r<=mid) return lazy[nod]*(r-l+1)+query(L,mid,l,r,nod<<1);\n\telse if(l> mid) return lazy[nod]*(r-l+1)+query(mid+1,R,l,r,nod<<1|1);\n\telse return lazy[nod]*(r-l+1)+query(L,mid,l,mid,nod<<1)+query(mid+1,R,mid+1,r,nod<<1|1);\n}\n```\n\n### 3.\u52a8\u6001\u5f00\u70b9\n\n\u5982\u679c\u6bd2\u7624\u7684\u51fa\u9898\u4eba\u8981\u6c42\u4fee\u6539\u67e5\u8be2\u4e00\u4e2a\u957f\u5ea6\u4e3a $100000000000000000$ \u7684\u5e8f\u5217\uff0c\u90a3\u8be5\u600e\u4e48\u529e\u5462\uff1f\n\n\u7ebf\u6bb5\u6811\u663e\u7136\u4f1a\u66b4\u7a7a\u95f4\uff0c\u6211\u4eec\u9700\u8981\u4f18\u5316\u3002\n\n\u6211\u4eec\u5176\u5b9e\u53ef\u4ee5\u53d1\u73b0\u6bcf\u6b21\u4fee\u6539\u4f7f\u7528\u7684\u8282\u70b9\u53ea\u6709 $\\log 100000000000000000$ \u4e2a\uff01\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u7528\u628a\u8fd9 $\\log 100000000000000000$ \u4e2a\u8282\u70b9\u50a8\u5b58\u8d77\u6765\u5373\u53ef\n\n\u4fee\u6539\u4ee3\u7801\uff1a\n\n```\nint q(int &x) {if(x==0) ++tot,x=tot;return x;}\nvoid ins(int L,int R,int l,int r,int c,int nod) {\n\tint mid = ((L+R)>>1);\n\tsum[nod]+=r-l+1;\n\tif(L==l&&R==r) lazy[nod]++;\n\telse if(r<=mid) ins(L,mid,l,r,c,q(son[nod][0]));\n\telse if(l> mid) ins(mid+1,R,l,r,c,q(son[nod][1]));\n\telse ins(L,mid,l,mid,c,q(son[nod][0])),ins(mid+1,R,mid+1,r,c,q(son[nod][1]));\n}\n```\n\n\u67e5\u8be2\u4ee3\u7801\uff1a\n\n```\nint query(int L,int R,int l,int r,int nod) {\n\tint mid = ((L+R)>>1);\n\tif(L==l&&R==r) return sum[nod];\n\telse if(r<=mid) return lazy[nod]*(r-l+1)+(son[nod][0]==0?0:query(L,mid,l,r,son[nod][0]));\n\telse if(l> mid) return lazy[nod]*(r-l+1)+(son[nod][1]==0?0:query(mid+1,R,l,r,son[nod][1]));\n\telse return lazy[nod]*(r-l+1)+(son[nod][0]==0?0:query(L,mid,l,mid,son[nod][0]))+(son[nod][1]==0?0:query(mid+1,R,mid+1,r,son[nod][1]));\n}\n```\n\n## 2.\u6811\u5957\u6811\n\n\u5176\u5b9e\u6811\u5957\u6811\u5c31\u662f\u4e24\u9897\u6811\u3002\n\n\u8fd9\u9898\u662f\u6811\u72b6\u6570\u7ec4\u5957\u7ebf\u6bb5\u6811\n\n\u6211\u4eec\u53ef\u4ee5\u8ba9\u6240\u6709\u7684\u6570\u53d8\u6210 $n-c+1$, \u7136\u540e\u5c31\u4ece\u6c42\u7b2c $k$ \u5927\u53d8\u6210\u79cb\u7b2c $k$ \u5c0f\u3002\u8fd9\u6837\u65b9\u4fbf\u6811\u72b6\u6570\u7ec4\u5904\u7406\u3002\u73b0\u5728\u7684\u6570\u7ec4\u7f16\u53f7\u5bf9\u5e94\u7684\u5b9e\u9645\u7f16\u53f7\u5c31\u53cd\u7740\u6765\u4e86\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/m43zlqk1.png)\n\n\u9996\u5148\u6211\u4eec\u5148\u5efa\u7acb\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u662f\u6309\u7167\u6743\u503c\u5efa\u7acb\uff0c\u50a8\u5b58\u7684\u662f1~n\u7684\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u7684\u8282\u70b9\u6211\u4eec\u90fd\u6709\u4e00\u4e2a\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u8fd9\u4e00\u4e2a\u8282\u70b9\u7684\u4fe1\u606f\uff0c\u5373\u53ef\u4ee5\u6c42\u51fa\u5c5e\u4e8e\u7b2c $l$ \u5230\u7b2c $r$ \u4e2a\u96c6\u5408\u7684\u5728\u8fd9\u4e2a\u6743\u503c\u8303\u56f4\u5185\u7684\u6570\u4e2a\u6570\n\n\u67e5\u8be2\u7684\u65f6\u5019\u5982\u679c\u4e8c\u5206\u6743\u503c\uff0c\u4f1a\u591a\u4e00\u4e2a $\\log$\uff0c\u4e09\u4e2a $\\log$ \u53ef\u80fd\u8fc7\u4e0d\u53bb\u3002\u90a3\u4e48\u6211\u4eec\u73c2\u4ee5\u76f4\u63a5\u5229\u7528\u6811\u72b6\u6570\u7ec4\u7684\u6027\u8d28\uff0c\u7c7b\u4f3c\u4e8e **\u500d\u589e** \u7684\u505a\u6cd5\uff0c\u4ece `1<<(int)(log2(x))` \u5f00\u59cb\uff0c\u6bcf\u6b21\u770b\u770b\u5982\u679c\u52a0\u4e0a\u8fd9\u4e2a\u6570\uff0c\u662f\u5426\u6ee1\u8db3\u5c0f\u4e8e\u7b49\u4e8e\u4ed6\u7684\u6570\u7684\u4e2a\u6570\u5c0f\u4e8ec\u3002\u5982\u679c\u6ee1\u8db3\u5c31\u52a0\u4e0a\u8fd9\u6b21\u500d\u589e\u7684 `1 << k`\u3002\u7136\u540e\u4e0d\u505c\u9664\u4ee5 $2$ \u903c\u8fd1\u7b54\u6848\u3002_\u7ec6\u8282 \uff1a \u6700\u540e\u7b54\u6848\u8981\u52a0\u4e00_\n\n\u7531\u4e8e\u76f4\u63a5\u666e\u901a\u7ebf\u6bb5\u6811\u5b58\u7a7a\u95f4\u7206\u70b8\uff0c\u6240\u4ee5\u8981\u52a8\u6001\u5f00\u70b9\n\n\u590d\u6742\u5ea6\uff1a$O(m\\log n ^ 2)$\n\nCode \u8d85\u77ed\u7684\uff01~~\u56e0\u4e3a\u6211\u538b\u4e86\u884c\u3002\u3002\u3002~~\n\n```\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nint n,m,tot,a[50001],son[5000001][2],lazy[10000001],sum[10000001];\nint lowbit(int x) {return x&-x;}\nint LB(int x) {return 1ll<<(int)(log2(x));}\nint q(int &x) {if(x==0) ++tot,x=tot;return x;}\nvoid ins(int L,int R,int l,int r,int nod) {\n\tint mid = ((L+R)>>1);\n\tsum[nod]+=r-l+1;\n\tif(L==l&&R==r) lazy[nod]++;\n\telse if(r<=mid) ins(L,mid,l,r,q(son[nod][0]));\n\telse if(l> mid) ins(mid+1,R,l,r,q(son[nod][1]));\n\telse ins(L,mid,l,mid,q(son[nod][0])),ins(mid+1,R,mid+1,r,q(son[nod][1]));\n}\nint query(int L,int R,int l,int r,int nod) {\n\tint mid = ((L+R)>>1);\n\tif(L==l&&R==r) return sum[nod];\n\telse if(r<=mid) return lazy[nod]*(r-l+1)+(son[nod][0]==0?0:query(L,mid,l,r,son[nod][0]));\n\telse if(l> mid) return lazy[nod]*(r-l+1)+(son[nod][1]==0?0:query(mid+1,R,l,r,son[nod][1]));\n\telse return lazy[nod]*(r-l+1)+(son[nod][0]==0?0:query(L,mid,l,mid,son[nod][0]))+(son[nod][1]==0?0:query(mid+1,R,mid+1,r,son[nod][1]));\n}\nint opt,l,r,c;\nsigned main() {\n\tscanf(\"%lld%lld\",&n,&m),tot=n;\n\twhile(m--) {\n\t\tscanf(\"%lld%lld%lld%lld\",&opt,&l,&r,&c);\n\t\tif(2-opt) for(int i = n-c+1; i <= n; i += lowbit(i)) ins(1,n,l,r,i);\n\t\telse {\n\t\t\tint SUM=0,ANS=0;\n\t\t\tfor(int i = LB(n); i != 0; i >>= 1) {\n\t\t\t\tif(ANS+i>n) continue;\n\t\t\t\tint F=query(1,n,l,r,ANS+i)+SUM;\n\t\t\t\tif(F<c) ANS+=i,SUM=F;\n\t\t\t}\n\t\t\tANS++,printf(\"%lld\\n\",n-ANS+1);\n\t\t}\n\t}\n}\n```\n\n\u6811\u5957\u6811\u7ec3\u4e60\u9898\uff1a\n\n[\u3010\u6a21\u677f\u3011\u4e8c\u903c\u5e73\u8861\u6811\uff08\u6811\u5957\u6811\uff09](https://www.luogu.com.cn/problem/P3380)\n\u6709\u591a\u79cd\u89e3\u6cd5\uff0c\u4f8b\u5982\u5916\u5c42\u52a8\u6001\u5f00\u70b9\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u5185\u5c42\u5e73\u8861\u6811 (\u849f\u84bb\u7684\u5199\u6cd5)\n\n[Dynamic Rankings](https://www.luogu.com.cn/problem/P2617) \u6811\u72b6\u6570\u7ec4\u5957\u4e3b\u5e2d\u6811\uff0c\u4f46\u662f\u849f\u84bb\u7684\u6743\u503c\u7ebf\u6bb5\u6811\u5957\u666e\u901a\u7ebf\u6bb5\u6811\u548c\u6743\u503c\u7ebf\u6bb5\u6811\u5957\u5e73\u8861\u6811\u90fd\u6302\u4e86\u3002\u6240\u4ee5\u5927\u5bb6\u8fd8\u662f\u597d\u597d\u5199\u6811\u72b6\u6570\u7ec4\u5957\u4e3b\u5e2d\u6811\u5427\u3002",
        "postTime": 1586610114,
        "uid": 173660,
        "name": "zhoukangyang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3332 \u3010[ZJOI2013]K\u5927\u6570\u67e5\u8be2\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\uff0c\u4fee\u6539+\u533a\u95f4\u67e5\u8be2\u7b2c$K$\u5927\uff0c\u5c31\u662f\u6574\u4f53\u4e8c\u5206\u7684\u6a21\u677f\u9898\u4e86\u3002\n\n\u6574\u4f53\u4e8c\u5206\u7684\u539f\u7406\u5c31\u662f\uff1a\u5c06\u6240\u6709\u7684\u4fee\u6539\u548c\u67e5\u8be2\u64cd\u4f5c\u79bb\u7ebf\u5b58\u4e0b\u6765\u3002\u6bcf\u6b21\u4e8c\u5206\u6240\u6709\u4fee\u6539\u548c\u8be2\u95ee\u64cd\u4f5c\uff0c\u5206\u6210\u4e24\u90e8\u5206\uff0c\u8fd9\u4e24\u90e8\u5206\u4e2d\u4e00\u4e2a\u90e8\u5206\u7684\u7b54\u6848$\\leqslant mid$\uff0c\u53e6\u4e00\u90e8\u5206$> mid$\uff0c\u800c$C\\leqslant mid$\u7684\u4fee\u6539\u653e\u5728\u7b2c\u4e00\u4e2a\u90e8\u5206\uff0c$C>mid$\u7684\u4fee\u6539\u653e\u5728\u53e6\u4e00\u90e8\u5206\uff0c\u56e0\u4e3a$C>mid$\u7684\u4fee\u6539\u5bf9\u7b54\u6848$\\leqslant mid$\u7684\u90e8\u5206\u6beb\u65e0\u5f71\u54cd\u3002\n\n\u81f3\u4e8e\u5982\u4f55\u8fdb\u884c\u5206\u7c7b\u5462\uff1f\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\uff0c\u5b83\u7ef4\u62a4\u6bcf\u6bb5\u533a\u95f4\u4e2d\u6709\u591a\u5c11\u4e2a\u6570$>mid$\uff0c\u6bcf\u6b21\u9047\u5230\u4e00\u4e2a$C>mid$\u7684\u64cd\u4f5c\u5c31\u628a$[l,r]$\u8fd9\u6bb5\u533a\u95f4+1\uff0c\u6bcf\u6b21\u9047\u5230\u4e00\u4e2a\u8be2\u95ee\u5c31\u8ba1\u7b97\u4e00\u4e0b$[l,r]$\u6709\u591a\u5c11\u4e2a\u6570$>mid$\uff0c\u5b58\u5728\u4e00\u4e2a\u8f85\u52a9\u6570\u7ec4$cur$\u91cc\u3002\u7136\u540e\u5c06\u7ebf\u6bb5\u6811\u6e05\u7a7a\uff08\u8fd9\u91cc\u53ef\u4ee5\u7528lazytag\u7ef4\u62a4\u533a\u95f4\u8d4b\u503c\uff0c\u4e5f\u53ef\u4ee5\u5c06\u4e0a\u8ff0\u7684\u64cd\u4f5c\u5728\u91cd\u505a\u4e00\u904d-1\uff09\u3002\u6211\u4eec\u5224\u65ad\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee\uff0c\u82e5$cur[i]\\geqslant K$\uff0c\u5219\u7b54\u6848$>mid$\uff0c\u5426\u5219$\\leqslant mid$\uff0c\u4e4b\u540e\u9012\u5f52\u5904\u7406\u5373\u53ef\u3002\n\n\u5982\u679c\u4e0a\u8ff0\u6587\u5b57\u770b\u5f97\u6709\u70b9\u5403\u529b\uff08\u672c\u4eba\u6587\u7b14\u4e0d\u592a\u597d\uff09\uff0c\u53ef\u4ee5\u7ed3\u5408\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u770b\u4e00\u770b\uff0c\u9898\u89e3\u91cc\u5176\u4ed6\u5927\u4f6c\u5199\u5f97\u4e5f\u5f88\u8be6\u5c3d\u3002\n\n~~\u8bdd\u8bf4\u540c\u5b66\u7528\u6811\u72b6\u6570\u7ec4800ms\u540a\u6253\u62113600ms\u662f\u4ec0\u4e48\u9b3c~~\n\n~~\u66b4\u9732\u4e86\u6211\u7684\u4ee3\u7801\u5e38\u6570\u7565\u5fae\u5927\u4e86\u4e00\u70b9\uff08\u4eba\u4e11\u81ea\u5e26\u5927\u5e38\u6570\uff09~~\n\n\u770b\u5230\u8fd9\u91cc\u7684\u540c\u5b66\uff0c\u73b0\u5728\u6d3e\u53d1$fread$\u8bfb\u5165\u4f18\u5316\u6a21\u677f\uff0c~~\u8bf7\u7d20\u8d28\u4e09\u8fde\uff08\u624b\u52a8\u6ed1\u7a3d\uff09~~\n```cpp\n#include<cstdio>\n#define Rint register int\nusing namespace std;\ntypedef long long LL;\nconst int N = 50003;\nchar buffer[200000], *s, *t;\ninline int Getchar(){\n    if(s == t){\n        t = (s = buffer) + fread(buffer, 1, 200000, stdin);\n        if(s == t)\n            return EOF;\n    }\n    return *s ++;\n}\ninline LL read(){\n    int ch = Getchar();\n    LL res = 0;\n    bool flag = false;\n    while((ch < '0' || ch > '9') && ch != '-') ch = Getchar();\n    if(ch == '-'){\n        flag = true;\n        ch = Getchar();\n    }\n    while(ch >= '0' && ch <= '9'){\n        res = (res << 3) + (res << 1) + (ch ^ '0');\n        ch = Getchar();\n    }\n    return flag ? -res : res;\n}\nstruct Query {\n    int l, r, id, opt;\n    LL k;\n} q[N], q1[N], q2[N];\nint n, m;\nLL seg[N << 2], tag[N << 2];\nLL ans[N];\ninline void pushup(int x){seg[x] = seg[x << 1] + seg[x << 1 | 1];}\ninline void pushdown(int x, int L, int R){\n    int mid = L + R >> 1;\n    seg[x << 1] += tag[x] * (mid - L + 1);\n    seg[x << 1 | 1] += tag[x] * (R - mid);\n    tag[x << 1] += tag[x];\n    tag[x << 1 | 1] += tag[x];\n    tag[x] = 0;\n}\ninline void change(int x, int L, int R, int l, int r, int v){\n    if(l <= L && R <= r){\n        seg[x] += (R - L + 1) * v;\n        tag[x] += v;\n        return;\n    }\n    int mid = L + R >> 1;\n    pushdown(x, L, R);\n    if(l <= mid) change(x << 1, L, mid, l, r, v);\n    if(mid < r) change(x << 1 | 1, mid + 1, R, l, r, v);\n    pushup(x);\n}\ninline LL query(int x, int L, int R, int l, int r){\n    if(l <= L && R <= r) return seg[x];\n    int mid = L + R >> 1;\n    LL ans = 0;\n    pushdown(x, L, R);\n    if(l <= mid) ans += query(x << 1, L, mid, l, r);\n    if(mid < r) ans += query(x << 1 | 1, mid + 1, R, l, r);\n    return ans;\n}\nLL cur[N];\ninline void solve(int front, int last, LL l, LL r){\n    if(front > last || l > r) return;\n    if(l == r){\n        for(Rint i = front;i <= last;i ++)\n            if(q[i].opt == 2) ans[q[i].id] = l;\n        return;\n    }\n    LL mid = l + r >> 1;\n    for(Rint i = front;i <= last;i ++)\n        if(q[i].opt == 1 && q[i].k > mid) change(1, 1, n, q[i].l, q[i].r, 1);\n        else if(q[i].opt == 2) cur[i] = query(1, 1, n, q[i].l, q[i].r);\n    for(Rint i = front;i <= last;i ++)\n        if(q[i].opt == 1 && q[i].k > mid) change(1, 1, n, q[i].l, q[i].r, -1);\n    int t1 = 0, t2 = 0;\n    for(Rint i = front;i <= last;i ++)\n        if(q[i].opt == 2){\n            if(cur[i] >= q[i].k)\n                q2[t2 ++] = q[i];\n            else {\n                q[i].k -= cur[i];\n                q1[t1 ++] = q[i];\n            }\n        } else {\n            if(q[i].k <= mid) q1[t1 ++] = q[i];\n            else q2[t2 ++] = q[i];\n        }\n    for(Rint i = 0;i < t1;i ++) q[front + i] = q1[i];\n    for(Rint i = 0;i < t2;i ++) q[front + t1 + i] = q2[i];\n    solve(front, front + t1 - 1, l, mid);\n    solve(front + t1, last, mid + 1, r);\n}\nint main(){\n    n = read(); m = read();\n    int tot = 0;\n    for(Rint i = 1;i <= m;i ++){\n        q[i].opt = read(); q[i].l = read(); q[i].r = read(); q[i].k = read();\n        if(q[i].opt == 2) q[i].id = tot ++;\n    }\n    solve(1, m, 0, n);\n    for(Rint i = 0;i < tot;i ++)\n        printf(\"%lld\\n\", ans[i]);\n}\n```",
        "postTime": 1544766181,
        "uid": 68148,
        "name": "watermoon",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3332 \u3010[ZJOI2013]K\u5927\u6570\u67e5\u8be2\u3011"
    },
    {
        "content": "# \u672c\u6587\u5199\u7ed9\u521a\u521a\u5b66\u4e60\u6570\u636e\u7ed3\u6784,\u5bf9\u4e8e\u504f\u5e8f\u95ee\u9898\u8fd8\u4e0d\u719f\u7ec3\u7684Oier.\n### \u5982\u679c\u60a8\u662f\u5199\u4e86\u8fd9\u4e2a\u505a\u6cd5\u88ab\u5361\u4e86\u76f4\u63a5\u770b3.\n### \u60f3\u8981\u4e86\u89e3\u6574\u4f53\u4e8c\u5206(~~\u4e09\u5206~~)\u7684\u53ef\u4ee5\u6362\u4e00\u7bc7.\n\n\n## (\u503c\u57df)\u7ebf\u6bb5\u6811 \u5957 (\u533a\u95f4\u548c)\u7ebf\u6bb5\u6811 \u7684\u4e5f\u8bb8\u552f\u4e00\u677f\u5b50\u9898.\n\n### \u672c\u6587\u5185\u5bb9\n1. \u5982\u4f55\u5f97\u5230\u8fd9\u4e2a\u505a\u6cd5+\u590d\u6742\u5ea6\u5206\u6790.\n2. \u5b9e\u9645\u4ee3\u7801\u7f16\u5199.\n3. \u5982\u4f55\u8ba9\u8fd9\u4e2a\u4ee3\u7801\u5361\u8fc7\u53bb(f read/write\u4ee3\u66ff\u683c\u5f0f\u5316IO, \u7ebf\u6bb5\u6811\u533a\u95f4\u52a0\u7684\u6807\u8bb0\u6c38\u4e45\u5316)\n\n### 1. val<X \u548c pos<Y \u662f\u4e00\u6837\u7684!\n\u9996\u5148\u7a9d\u5fc5\u987b\u8bf4,\u7a9d\u5e76\u6ca1\u80fd\u81ea\u5df1\u72ec\u7acb\u89e3\u51b3\u8fd9\u4e2a\u9898\u76ee,\u8fd9\u4e2a\u89e3\u6cd5\u662f\u542cdl lxl\u8bb2\u8bfe\u65f6\u4e86\u89e3\u5230\u7684. \u8fd9\u662f\u552f\u4e00\u4e00\u4e2a\u7a9d\u542c\u61c2\u4e86,\u5e76\u4e14\u5f97\u5230\u5f88\u5927\u542f\u53d1\u7684\u9898\u76ee.~~\u5c31\u662f\u56e0\u4e3a\u6211\u592a\u83dc\u4e86\u5176\u4ed6\u90fd\u6ca1\u6709\u542c\u61c2\u597d\u5427~~  \n\n\n------------\n\n\u9996\u5148\u770b\u5230\u9898\u76ee,\u662f\u4e0d\u662f \u6811\u5957\u6811\u5355\u70b9\u4fee\u6539\u533a\u95f4kth \u5373\u89c6\u611f?  \n\u597d\u7684\u6211\u4eec\u56de\u987e\u4e00\u4e0b \u6811\u5957\u6811\u5355\u70b9\u4fee\u6539\u533a\u95f4kth\u7684\u73a9\u6cd5.  \n~~emm\u65e0 \u7aef \u8dd1 \u9898, \u81ea \u88c1, \u8bf7~~  \n\n\u56de\u987e\u7ebf\u6bb5\u6811\u5957\u5e73\u8861\u6811\u7684\u6700\u5e38\u89c4\u505a\u6cd5,\u9996\u5148\u5916\u5c42\u7684\u7ebf\u6bb5\u6811\u662f\u7528\u6765\u89e3\u51b3\u533a\u95f4\u9650\u5236\u7684,\u5373\u53ea\u64cd\u4f5c\\[l,r]\u5185\u7684\u5143\u7d20.\u5185\u5c42\u7684\u5e73\u8861\u6811\u5219\u662f\u7528\u6765\u89e3\u51b3\u503c\u57df\u4e0a\u7684\u9650\u5236\u7684. \u6211\u4eec\u770b\u770b\u4e4b\u524d\u90a3\u4e2alog^3\u7684\u533a\u95f4kth\u662f\u600e\u4e48\u73a9\u7684.  \n1. \u4e8c\u5206\u7b54\u6848(\u4f60\u770b\u5916\u5c42\u662f\u4e3a\u4e86\u6ee1\u8db3\u4f4d\u7f6e\u7ea6\u675f\u9020\u7684\u7ebf\u6bb5\u6811\u800c\u4e0d\u662f\u5bf9\u4e8e\u503c\u57df\u5efa\u7acb\u7684\u5e73\u8861\u6811/\u7ebf\u6bb5\u6811.\u6ca1\u6cd5\u76f4\u63a5\u505a,\u53ea\u80fd\u505a\u4e00\u4e9b\u7edf\u8ba1\u6bd4\u5982pos in \\[l,r], count( a\\[pos] < x ).~~\u6ca1\u9519\u8fd9\u5c31\u662f\u67e5\u8be2\u6392\u540d\u561b~~\n2. \u8ba1\u7b97mid\u518d\\[l,r]\u5185\u7684\u6392\u540d,\u8003\u8651\u7684\u533a\u95f4\u51cf\u534a,\u6700\u540e\u627e\u5230\u7b54\u6848.  \n\n\u5bf9\u4e8e\u5355\u70b9\u4fee\u6539,\u5728\u5916\u5c42\u7ebf\u6bb5\u6811\u4e0a\u6d89\u53calogn\u4e2a\u70b9,\u5185\u5c42\u5e73\u8861\u6811\u4e0a\u64cd\u4f5c\u590d\u6742\u5ea6\u662flogn\u7684,\u6240\u4ee5\u76f4\u63a5\u66b4\u529b\u505a.  \n \n\u6211\u4eec\u7528\u6811\u5957\u6811\u5176\u5b9e\u53ea\u505a\u4e86\u4e00\u4e2a\u4e8b\u60c5\u5c31\u662f,\u5c31\u662f\u7edf\u8ba1 l<= p <= r && a\\[p] < x,\u6211\u4eec\u8003\u8651\u628a(p,a\\[p])\u770b\u4f5c\u4e00\u4e2a\u70b9,\u7ea6\u675f\u662f\u4e24\u4e2a\u4e0d\u7b49\u5f0f,\u4e0d\u7b49\u5f0f\u53ef\u4ee5\u7528\u6765\u8868\u793a\u533a\u57df,\u8fd9\u4e24\u4e2a\u4e0d\u7b49\u5f0f\u8868\u793a\u7684\u533a\u57df\u662f\u4e2a\u77e9\u5f62....\u6240\u4ee5.\u8fd9\u4e2a\u64cd\u4f5c\u5176\u5b9e\u5c31\u662f\u518d\u4e00\u4e2a\u77e9\u5f62\u533a\u57df\u91cc\u9762\u6570\u70b9! \n\n\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u6bd2\u7624\u4e00\u70b9\u628a\u4e4b\u524d(2b\u5e73\u8861\u6811)\u4e2d\u7684\u5355\u70b9\u4fee\u6539\u641e\u6210\u5728\u67d0\u4f4d\u7f6e\u63d2\u5165\u4e00\u5806\u6570,\u60a8\u662f\u4e0d\u662f\u4e5f\u4f1a\u505a\u4e86\u5462?(emm,\u603b\u63d2\u5165\u6570\u5b57\u4e2a5e4\u7ea7\u522b).   \n \n~~\u6211\u4eec\u56de\u987e\u4e00\u4e0b\u8fd9\u4e00\u90e8\u5206\u7684\u6807\u9898~~ \u7b49\u7b49\u7a9d\u8981\u8bf4\u4ec0\u4e48? \u5bf9\u4e8e\u503c\u57df\u7684\u7ea6\u675f\u548c\u5bf9\u4e8e\u533a\u95f4\u7684\u7ea6\u675f\u662f\u4e00\u6837\u7684!,\u6211\u4eec\u8003\u8651\u4e4b\u524d\u90a3\u4e2a\u9898\u76ee\u7684\u672c\u8d28\u662f\u4e8c\u7ef4\u6570\u70b9,\u6211\u4eec\u628a\u5750\u6807\u7cfb\u8f6c\u52a8pi/2\u5c31\u80fd\u770b\u5230(\u5176\u5b9e\u5c31\u662f\u628a\u4e24\u4e2a\u4e0d\u7b49\u5f0f\u4ea4\u6362\u987a\u5e8f\u561bqwq),\u95ee\u9898\u8fd8\u662f\u4e00\u4e2a\u77e9\u5f62\u6570\u70b9\u7684\u95ee\u9898.  \n\u6211\u4eec\u6709\u4e86\u8fd9\u4e2a\u60f3\u6cd5\u4e4b\u540e\u5f88\u5feb\u53ef\u4ee5\u5199\u51fa\u4e00\u4e2a\u5916\u5c42\u662f\u89e3\u51b3\u503c\u57df\u7ea6\u675f,\u5185\u5c42\u662f\u89e3\u51b3\u533a\u95f4\u7ea6\u675f\u7684(2b\u5e73\u8861\u6811\u505a\u6cd5)\u5bf9\u5427,\u76f4\u63a5\u70b9\u8bf4,swap(p,a\\[p])\u4e5f\u662f\u53ef\u4ee5\u6309\u7167\u539f\u6765\u7684\u505a\u6cd5\u6765\u505a.  \n\n\n\n------------\n\n### \u597d\u4e86\u56de\u5230\u672c\u9898\n\u672c\u9898\u7684\u4fee\u6539\u64cd\u4f5c\u662f\u5728\u533a\u95f4\u4e0a\u63d2\u5165\u76f8\u540c\u503c.\u6211\u4eec\u5199\u4e2a\u4f2a\u4ee3\u7801\u6765\u8bf4\u660e\u95ee\u9898.\n```python\nfor i in range(l,r+1):\n\tarr[i].append(c)\n```\n~~\u4e0a\u6587\u8bf4\u5230,val\u548cpos\u7684\u7ea6\u675f\u6ca1\u4ec0\u4e48\u533a\u522b\u6211\u4eec\u5c1d\u8bd5\u4e5f\u505a\u8fd9\u6837\u4e00\u4e2a\u65cb\u8f6c\u5750\u6807\u7cfb\u7684\u64cd\u4f5c,\u5373arr\\[i]\u4fdd\u5b58,val=i\u7684\u4f4d\u7f6e.  \n```python\nfor i in range(l,r+1):\n\tarr[c].append(i)\n```\n\u66f4\u8fdb\u4e00\u6b65\u7684,\u6211\u4eec\u8003\u8651arr\\[c]\\[i]\u8868\u793aval=c,pos=i(\u8fd9\u91cc\u987a\u5e8f\u5176\u5b9e\u5df2\u7ecf\u65e0\u5173\u4e86).\u7684\u5143\u7d20\u4e2a\u6570.\u90a3\u4e48\u8fd9\u4e2a\u64cd\u4f5c\u662f\u5728\u5e72\u4ec0\u4e48\u5462?  \n```python\nfor i in range(l,r+1):\n\tarr[c][i]+=1\n```\n### \u54e6\u6ca1\u9519\u662f\u533a\u95f4\u52a0\u6cd5!\n\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u5957\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4arr.\u5373\u53ef\u5feb\u901f\u505a\u4fee\u6539\u64cd\u4f5c,\u5916\u5c42\u662f\u5355\u70b9\u4fee\u6539,\u5185\u5c42\u662f\u533a\u95f4\u52a0\u6cd5,log^2\u53ef\u505a!.  \n**\u5177\u4f53\u8bf4,\u5916\u5c42\u533a\u95f4\\[l,r]\u8868\u793al<=val<=r,\u5185\u5c42\\[l,r]\u8868\u793al<=pos<=r\u7684\u5143\u7d20\u6709\u591a\u5c11\u4e2a,\u5408\u8d77\u6765\u770b\u5c31\u662f\u7ef4\u62a4\u4e86\u503c\u5728l,r,\u4f4d\u7f6e\u5728a,b\u5185\u7684\u5143\u7d20\u4e2a\u6570**\n\n## \u7b49\u7b49\u67e5\u8be2\u64cd\u4f5c\u5462,\u53ea\u80fd\u4fee\u6539\u6ca1\u7528\u554a23333\n\u597d\u8bf4\u554a,\u6211\u4eec\u5957\u7528\u4e4b\u524d\u533a\u95f4kth\u7684\u89e3\u6cd5.\u800c\u4e14\u4e0d\u662f\u8bf4\u4e86\u503c\u57df\u7ea6\u675f\u548c\u4f4d\u7f6e\u7ea6\u675f\u4e00\u6837\u5417,\u5b9e\u5728\u4e0d\u4f1a\u505a\u5c31\u65cb\u8f6c\u5750\u6807\u8f74\u554a2333.  \n\n\u5f97\u5230log^3\u7684\u505a\u6cd5,\u4f46\u662f\u5916\u5c42\u662f\u7ef4\u62a4\u503c\u57df\u7684\u7ebf\u6bb5\u6811\u53ef\u4ee5\u5728\u5b83\u4e0a\u9762\u4e8c\u5206,\u7528\u7ebf\u6bb5\u6811\u5b9e\u73b0\u4e00\u4e2a\u7ef4\u62a4\u6570\u96c6\u7684\u5e73\u8861\u6811,kth\u600e\u4e48\u505a?\u60f3\u5230\u4e86\u5427!\u7701\u6389\u4e00\u4e2alog(\u4e8c\u5206\u7684log).\n\n## \u81f3\u6b64,\u5f97\u5230\u4e86\u4fee\u6539\u67e5\u8be2\u5747\u4e3alog^2n\u7684\u505a\u6cd5.  \n\n\u6211\u4eec\u7a0d\u5fae\u5206\u6790\u4e00\u4e0b\u7a7a\u95f4\u590d\u6742\u5ea6\u518d\u8dd1\u8def\u597d\u4e86233,emm\u662fO(V\\*N)\u7684\u5427,V\u662f\u503c\u57df\u548cN\u540c\u9636\u7684?emm,\u8bf4\u5f97\u5bf9,\u4f46\u662f\u6211\u4eec\u4e4b\u540e\u8ba8\u8bba\u600e\u4e48\u89e3\u51b3.\n\n\n\n\n------------\n\n------------\n~~\u5206\u5272\\*2\u4ee5\u793a\u5c0a\u656c.~~  \n### 2.\u5b9e\u9645\u4ee3\u7801\u7f16\u5199\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u95ee\u9898\u7684\u89e3\u51b3.\n1. \u7a7a\u95f4\u590d\u6742\u5ea6\u95ee\u9898,\u76f8\u4fe1\u60a8\u5df2\u7ecf\u60f3\u5230\u4e86\u662f\u52a8\u6001\u5f00\u70b9,\u8fd9\u4e2a\u64cd\u4f5c\u5728\u6ca1\u6709\u6570\u636e\u7ed3\u6784\u5d4c\u5957\u65f6\u770b\u4e0d\u51fa\u592a\u5927\u7684\u4f18\u52bf.\u4f46\u662f\u6570\u636e\u7ed3\u6784\u5d4c\u5957\u540e,\u5f80\u5f80\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684.  \n**\u7b49\u7b49\u8fd9\u54ea\u4e00\u5c42\u52a8\u6001\u5f00\u554a,\u5185\u5c42\u53ef\u662f\u533a\u95f4\u52a0\u554a?**  \n**\u6211\u5fc5\u987b\u8bf4\u660e,\u6211\u6ca1\u529e\u6cd5\u8bb2\u6e05\u695a\u4e3a\u4f55\u8fd9\u4e48\u505a,\u5982\u679c\u4e0b\u9762\u7684\u8bb2\u89e3\u5e76\u4e0dmake sense,\u90a3\u4e48\u60a8\u53ef\u4ee5\u9009\u62e9\u79c1\u4fe1\u6211,\u6216\u8005\u770b\u4e00\u4e9b\u5176\u4ed6\u9898\u89e3**  \n\n\u5916\u5c42\u80fd\u4e0d\u80fd\u52a8\u6001\u5f00\u70b9?\u6211\u8ba4\u4e3a\u4e5f\u662f\u53ef\u4ee5\u7684\u53ea\u662f\u6ca1\u6709\u610f\u4e49.\u6bcf\u6b21\u64cd\u4f5cc\u4e0d\u76f8\u7b49,\u5916\u5c42\u52a8\u6001\u5f00\u70b9\u5931\u53bb\u610f\u4e49.  \u6211\u4eec\u4f7f\u7528\u7ebf\u6bb5\u6811\u52a8\u6001\u5f00\u70b9\u6280\u5de7\u65f6\u5e94\u8be5\u6ce8\u610f \u5b9e\u9645\u4f7f\u7528\u662f\u4e0d\u662f\u8fbe\u5230\u4e86 \u6574\u4e2a\u8303\u56f4,\u5982\u679c\u662f,\u90a3\u4e48\u6ca1\u6709\u529e\u6cd5\u8282\u7701\u7a7a\u95f4.  \n\n\u6211\u4eec\u8003\u8651\u4f18\u5316\u5185\u5c42\u7ebf\u6bb5\u6811\u7684\u7a7a\u95f4\u590d\u6742\u5ea6.\u8003\u8651\u5728\u4e00\u4e2a\u5185\u5c42\u6811\u4e0a,\u533a\u95f4\u52a0\u6cd5\u6d89\u53ca\u7684\u8282\u70b9\u4e2a\u6570(\u4e0d\u662f\u6700\u7ec8\u9009\u4e2d\u4fee\u6539\u7684\u8282\u70b9,\u662f\u7ecf\u8fc7\u7684\u8282\u70b9\u4e2a\u6570)\u662f\u591a\u5c11.\u9009\u5b9alogn,\u5e73\u5747\u6df1\u5ea6logn,\u662f\u4e0d\u662flog^2n?  \n\u5e76\u4e0d\u662f,\u5982\u679c\u60a8\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48,\u8bf7\u5c1d\u8bd5\u81ea\u5df1\u5206\u6790,\u8fd9\u8bf4\u660e\u60a8\u8fde\u7ebf\u6bb5\u6811\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u5206\u6790\u4e0d\u5bf9.   \n\n\u63d0\u793a,\u8003\u8651\u6bcf\u5c42\u7ecf\u8fc7\u591a\u5c11\u8282\u70b9,\u8fd9\u662fO(1)\u7684,\u7136\u540e\u53ef\u4ee5\u8bc1\u660e.\n\n\n\n------------\n\n\n### \u90a3\u4e48\u5185\u5c42\u52a8\u6001\u5f00\u70b9\u4e4b\u540e,\u4fee\u6539\u64cd\u4f5c\u5916\u5c42\u6d89\u53calogn\u8282\u70b9,\u5185\u5c42\u6700\u591a\u5f00logn\u8282\u70b9,\u7a7a\u95f4\u590d\u6742\u5ea6nlog^2n(\u8fd9\u91ccn,m,v\u662f\u540c\u9636\u7684\u6211\u4eec\u4e0d\u505a\u533a\u5206)\n\n## \u81f3\u6b64\u7a7a\u95f4\u590d\u6742\u5ea6\u95ee\u9898\u5f97\u5230\u89e3\u51b3,\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u7f16\u5199\u4ee3\u7801.\n**\u6211\u8fd9\u91cc\u76f4\u63a5\u653e\u51fa\u6211\u7684AC\u4ee3\u7801,\u5305\u542b\u4e86\u8bb8\u591a\u4e0a\u6587\u6ca1\u6709\u8bf4\u5230\u7684\u4f18\u5316,\u6211\u4eec3\u4e2d\u8bb2\u89e3**\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <iostream>\nusing namespace std;\ntypedef long long ll; //\u6ce8\u610f\u6bcf\u6b21\u4fee\u6539[1,n],\u5143\u7d20\u4e2a\u65702.5e9\u8d85\u8fc7\u4e86int.\ntypedef unsigned int uint; // \u6ca1\u9519\u6211\u5c31\u662f\u6362\u4e86\u7c7b\u578b\u5c1d\u8bd5\u5361\u65f6\u95f4\u7684.\n// IO \u4f18\u5316, \u4f7f\u7528 fread,fwrite\u624b\u52a8\u7ef4\u62a4buffer. \u6548\u7387\u6781\u9ad8,\u6ca1\u6709\u5fc5\u8981\u6bcf\u4e2a\u9898\u76ee\u90fd\u4f7f\u7528\n// \u5efa\u8bae\u81ea\u5df1\u627e\u8d44\u6599\u5b66\u4e60.\u6211\u8fd9\u91cc\u7684\u4ee3\u7801\u4e5f\u662f\u7c98\u8d34\u7684,\u5982\u679c\u60a8\u8ba4\u4e3a\u8fd9\u6bb5\u4ee3\u7801\u4fb5\u72af\u4e86\u60a8\u7684\u6743\u5229\u8bf7\u8054\u7cfb\u672c\u4eba\u5220\u9664.\nnamespace IO{\n\tconst int IN_LEN=10000000;\n\tinline char nc() {\n\t\tstatic char buf[IN_LEN], *p1 = buf, *p2 = buf;\n\t\treturn p1 == p2 && (p2 = (p1 = buf) + fread (buf, 1, IN_LEN, stdin), p1 == p2) ? EOF : *p1++;\n\t}\n\ttemplate<typename T>\n\t\tinline T read() {\n\t\t\tchar ch = nc();\n\t\t\tT tf = 0;\n\t\t\tT sum = 0;\n\t\t\twhile((ch < '0' || ch > '9') && (ch != '-')) ch = nc();\n\t\t\ttf = ((ch == '-') && (ch = nc()));\n\t\t\twhile(ch >= '0' && ch <= '9') sum = sum * 10+ (ch - 48), ch = nc();\n\t\t\t(tf) && (sum =- sum);\n\t\t\treturn sum;\n\t\t}\n\tinline int gi(){ return read<int>(); }\n\tinline ll gll(){ return read<ll>(); }\n\tconst int OUT_LEN=10000000;\n\tchar obuf[OUT_LEN], *oh = obuf;\n\tinline void print(char c) {\n\t\tif (oh == obuf + OUT_LEN) fwrite(obuf, 1, OUT_LEN, stdout), oh = obuf;\n\t\t*oh++ = c;\n\t}\n\tinline void print(int x) {\n\t\tstatic int buf[30], cnt;\n\t\tif (x == 0) {\n\t\t\tprint('0');\n\t\t} else {\n\t\t\tif (x < 0) print('-'), x = -x;\n\t\t\tfor (cnt = 0; x; x /= 10) buf[++cnt] = x % 10 + 48;\n\t\t\twhile (cnt) print((char)buf[cnt--]);\n\t\t}\n\t\tprint('\\n');\n\t}\n\tinline void flush() { fwrite(obuf, 1, oh - obuf, stdout); }\n}\nconst int N=50000+10;\nconst int M=N<<2;\n// \u7a7a\u95f4\u590d\u6742\u5ea6\u8ba1\u7b97\u7684\u95ee\u9898,linux\u53d1\u884c\u7248\u90fd\u6709Python,\u968f\u4fbf\u7b97\u5373\u53ef.\u8bb0\u5f97\u7b97\u4e0a\u5e38\u6570(\u6bd4\u5982\u53ef\u80fd\u67d0\u9898\u76ee\u6bcf\u6b21\u4fee\u6539\u662f\u4e24\u6b21\u64cd\u4f5c\u90a3\u4e48\u7a7a\u95f4*2)\nconst int P=N*17*17;\nstruct Node{\n// \u52a8\u6001\u5f00\u70b9\u540e\u4e0d\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\u7ed3\u6784,\u5fc5\u987b\u4fdd\u5b58\u5de6\u53f3\u513f\u5b50\u4f4d\u7f6e.\n// \u5982\u679c\u662f64\u4f4d\u7cfb\u7edfpointer\u7a7a\u95f4\u591a\u4e00\u500d,\u5c0f\u5fc3MLE,\u6211\u8fd9\u91cc\u6ca1\u7528\u4f7f\u7528.\n\tuint lc,rc,add;\n\tll sum;\n\tNode():lc(0),rc(0),add(0),sum(0LL){}\n}t[P];uint cnt;\nstruct Q{ int opt,l,r;ll c; }q[N];\ninline uint newnode(){ return ++cnt; }\nuint n,m,maxn;\n#define ls (o<<1)\n#define rs ((o<<1)|1)\nuint L[M],R[M],tree[M];\nvoid build(uint o,uint l,uint r){\n\tL[o]=l;R[o]=r;tree[o]=newnode();\n\tif(l==r) return ;\n\tuint mid=(l+r)>>1;\n\tbuild(ls,l,mid);build(rs,mid+1,r);\n}\ninline uint len(uint l,uint r){ return r-l+1; }\ninline uint intersect(uint a,uint b,uint c,uint d){\n\tint x=max(a,c),y=min(b,d);\n\tif(x>y) return 0;\n\treturn y-x+1;\n}\nvoid add(uint o,uint L,uint R,uint l,uint r){\n\tif(L>r||R<l) return ;\n\tt[o].sum+=intersect(L,R,l,r);\n\tif(l<=L&&R<=r){ t[o].add++; return ; }\n\tuint mid=(L+R)>>1;\n\tif(t[o].lc==0) t[o].lc=newnode();\n\tif(t[o].rc==0) t[o].rc=newnode();\n\tadd(t[o].lc,L,mid,l,r);\n\tadd(t[o].rc,mid+1,R,l,r);\n}\nll query(uint o,uint L,uint R,uint l,uint r,uint add=0){\n\tif(L>r||R<l) return 0;\n// \u8fd9\u91cc\u6d89\u53ca\u4e86 \u6807\u8bb0\u6c38\u4e45\u5316. \u5982\u679c\u770b\u4e0d\u61c2\u6211\u4eec\u4e4b\u540e\u8bb2\u89e3.\n\tif(l<=L&&R<=r) return t[o].sum+add*len(L,R);\n\tuint mid=(L+R)>>1;\n\treturn query(t[o].lc,L,mid,l,r,add+t[o].add)+query(t[o].rc,mid+1,R,l,r,add+t[o].add);\n}\n// \u5916\u5c42\u4fee\u6539,\u5bfb\u627e\u5355\u70b9,\u8def\u5f84\u4e0a\u7684\u6811\u8fdb\u884c\u533a\u95f4\u52a0\u6cd5.\nvoid insert(uint o,uint l,uint r,uint c){\n\tadd(tree[o],1,n,l,r);\n\tif(L[o]==R[o]) return ;\n\tuint mid=(L[o]+R[o])>>1;\n\tif(c<=mid) insert(ls,l,r,c);\n\telse \t\t\t insert(rs,l,r,c);\n}\n// \u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206,\u4e0d\u505a\u8fc7\u591a\u89e3\u91ca,\u4e0d\u7406\u89e3\u53bb\u770b\u666e\u901a\u5e73\u8861\u6811\u6216\u8005\u79c1\u4fe1\u6211.\n// \u601d\u8def\u548c\u6b63\u5e38\u7684\u5e73\u8861\u6811\u4e0akth\u5176\u5b9e\u4e00\u6837.\nuint kth(uint o,uint l,uint r,ll k){\n\tif(L[o]==R[o]) return L[o];\n\tll rcnt=query(tree[rs],1,n,l,r);\n\tif(rcnt>=k) return kth(rs,l,r,k);\n\treturn kth(ls,l,r,k-rcnt);\n}\nstruct B{\n\tint val,id;\n\tinline bool operator<(const B &x)const{ return val<x.val; }\n}b[N];\n// \u6211\u559c\u6b22\u624b\u52a8\u79bb\u6563\u5316.\nvoid init(){\n\tsort(b+1,b+1+maxn);\n\tuint i=1,j=1;\n\twhile(j<=maxn){\n\t\tb[i]=b[j];\n\t\twhile(b[i].val==b[j].val&&j<=maxn) q[b[j++].id].c=i;\n\t\t++i;\n\t}maxn=i-1;\n}\nusing namespace IO;\nint main(){\n// \u4f7f\u7528\u4e86fread,\u4e0d\u80fd\u4f7f\u7528\u952e\u76d8\u5728console\u8f93\u5165,\u5fc5\u987b\u4f7f\u7528\u6587\u4ef6\u8f93\u5165.\n// \u6253\u5370\u65f6\u95f4\u592a\u957f\u6211\u4eec\u91cd\u5b9a\u5411\u8fdb\u6587\u4ef6(\u4e0d\u7136\u672c\u5730\u6d4b\u8bd5\u65f6\u95f4\u592a\u957f)\n\t//freopen(\"in.in\",\"r\",stdin);\n\t//freopen(\"tmp\",\"w\",stdout);\n\tn=gi();m=gi();\n\tfor(register uint i=0;i<m;++i){\n\t\tq[i].opt=gi();\n\t\tq[i].l=gi();\n\t\tq[i].r=gi();\n\t\tq[i].c=gll();\n\t\tif(q[i].opt==1){ b[++maxn].val=q[i].c; b[maxn].id=i; }\n\t}\n\tinit();\n\tbuild(1,1,maxn);\n\tfor(register uint i=0;i<m;++i){\n\t\tif(q[i].opt==1) insert(1,q[i].l,q[i].r,q[i].c);\n\t\telse \t\t\t\t\t\tprint(b[kth(1,q[i].l,q[i].r,q[i].c)].val);\n\t}\n\tflush();\n\treturn 0;\n}\n\n\n```\n\n\n------------\n\n### 3.\u4f18\u5316\u8be6\u89e3.\n(\u8fd9\u4e2a\u90e8\u5206\u53ef\u80fd\u4f1a\u8865\u5145\u4e1c\u897f\u8fdb\u6765)\n1. IO\u4f18\u5316,\u4e0d\u89e3\u91ca\u8bf7\u81ea\u5df1\u627e\u8d44\u6599.\u6ca1\u5fc5\u8981\u5199\u8fd9\u4e2a,putchar getchar\u5373\u53ef\u5e94\u5bf9\u5927\u591a\u6570\u60c5\u51b5.\n2. \u6807\u8bb0\u6c38\u4e45\u5316.\n\n\u8fd9\u91cc\u662f\u533a\u95f4sum,\u533a\u95f4add\u7684\u6807\u8bb0\u6c38\u4e45\u5316,\u6807\u8bb0\u6c38\u4e45\u5316\u5176\u5b9e\u8fd8\u80fd\u89e3\u51b3\u533a\u95f4cover\u4e4b\u7c7b\u7684\u4e1c\u897f,\u8fd9\u4e2a\u4e1c\u897f\u7684\u4f5c\u7528\u662f\u6254\u6389pushdown\u4e0b\u4f20\u6807\u8bb0(\u7ebf\u6bb5\u6811\u5927\u5e38\u6570\u4e00\u65b9\u9762\u6765\u81ea\u4e8e\u7ecf\u8fc7\u8282\u70b9\u4e2a\u6570\u662f4logn\u7684,\u53e6\u4e00\u65b9\u9762\u5c31\u662f\u4e24\u4e2apush\u4e00\u4e2a\u66f4\u65b0\u4e00\u4e2a\u4e0b\u4f20,\u540e\u8005\u5f80\u5f80\u5f71\u54cd\u8d85\u8fc7\u524d\u8005.\u6240\u4ee5\u5224\u65ad\u6807\u8bb0\u662f\u4e0d\u662f\u7a7a\u5176\u5b9e\u975e\u5e38\u6709\u5fc5\u8981)  \n\n\u6c38\u4e45\u5316\u7684\u6807\u8bb0\u662f\u4e0d\u4e0b\u7a7f\u7684,\u800c\u662f\u8fdb\u5165\u5b50\u6811\u65f6\u8ba1\u7b97\u4e0a\u5b83\u7684\u8d21\u732e.\n\u6253\u6807\u8bb0\u53ea\u662f\u5bf9\u4e8e\u9009\u4e2d\u76842logn\u4e2a\u8282\u70b9\u6253\u6807\u8bb0,\u5176\u4ed6\u6709\u4fee\u6539\u7684\u8282\u70b9\u90fd\u662f\u90e8\u5206\u4fee\u6539,\u76f4\u63a5\u52a0\u4e0a\u8d21\u732e.  \n\n\u6b63\u786e\u6027\u548c\u590d\u6742\u5ea6\u5206\u6790\u7565\u53bb,\u56e0\u4e3a\u6211\u4e0d\u4f1a. \u5982\u679c\u9700\u8981\u8bf7\u81ea\u884c\u5bfb\u627e.  \n\n## \u5b8c\u7ed3\u6492\u82b1,\u5982\u679c\u60a8\u6709\u4efb\u4f55\u95ee\u9898\u6216\u8005\u6211\u7684\u9898\u89e3\u51fa\u73b0\u4e86\u4efb\u4f55\u95ee\u9898(\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u6392\u7248 \u6982\u5ff5\u9519\u8bef)\u8bf7\u53ca\u65f6\u79c1\u4fe1\u8054\u7cfb\u6211.\n\n\n\n",
        "postTime": 1544089272,
        "uid": 15295,
        "name": "hehelego",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3332 \u3010[ZJOI2013]K\u5927\u6570\u67e5\u8be2\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u4e00\u9053\u975e\u5e38\u597d\u7684\u5165\u624b\u6574\u4f53\u4e8c\u5206\u7684\u9898\n\n\u90a3\u4e48\u6211\u4eec\u8bb2\u89e3\u4e00\u4e0b\u6574\u4f53\u4e8c\u5206\u7684\u539f\u7406\u597d\u4e86\n\n## \u6574\u4f53\u4e8c\u5206\n\n\u6574\u4f53\u4e8c\u5206\u6b63\u5982\u5b57\u9762\u4e0a\u8bb2\u7684\u4e00\u6837\uff0c\u662f\u9700\u8981\u4ee5\u4e8c\u5206\u4e3a\u57fa\u7840\u7684\n\n\u90a3\u4e48\u5728\u4f7f\u7528\u4e8c\u5206\u6cd5\u7684\u65f6\u5019\u9700\u8981\u5148\u628a\u539f\u95ee\u9898\u8f6c\u5316\u4e3a\u4e00\u4e2a**\u5224\u5b9a\u95ee\u9898**\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u662f\u8be2\u95ee\n\n\u201c\u5728\u533a\u95f4l-r\u4e2d**\u662f\u5426**\u6709**K**\u4e2a\u6bd4X\u5927\u7684\u6570\u201d\n\n\u90a3\u4e48\u53d1\u73b0\u8fd9\u662f\u4e2a\u6211\u4eec\u719f\u6089\u7684\u6709**\u4e24\u4e2a\u9650\u5236\u6761\u4ef6**\u7684**\u7edf\u8ba1\u95ee\u9898**\n\n\u601d\u8def\u5f88\u7b80\u5355\uff0c\u6441\u6b7b\u4e00\u4e2a\u5728\u89e3\u51b3\u53e6\u4e00\u4e2a\uff0c\u8fd9\u91cc\u662f\u4f18\u5148\u8003\u8651\u6bd4X\u5927\n\n\u679a\u4e3e\u6bcf\u4e00\u4e2a\u4fee\u6539\uff0c\u5982\u679c\u6bd4x\u5927\u5c31\u533a\u95f4+1\uff08\u8868\u660e\u8fd9\u4e9b\u4f4d\u7f6e\u90fd\u6709\u4e00\u4e2a\u6bd4X\u5927\u7684\u6570\uff09\n\n\u5982\u679c\u6bd4X\u5c0f\u5c31\u4ec0\u4e48\u4e5f\u4e0d\u505a\n\n\u6700\u540e\u6c42\u51fa\uff08l,r\uff09\u7684\u533a\u95f4\u548c\u5373\u53ef\u5bf9\u5427\uff0c\u7ebf\u6bb5\u6811\u88f8\u9898\n\n\n```cpp\n    #include<cstdio>\n    #include<algorithm>\n    using namespace std;\n    typedef long long ll;\n    struct query//\u8be2\u95ee\u7ed3\u6784\u4f53\n    {\n        int id;int l;int r;ll k;int ans;int num;\n        inline void prit(){printf(\"%d %d %d %lld\\n\",id,l,r,k);}\n        friend bool operator <(query a,query b){return a.num<b.num;}\n    }q[50010],tr[2][50010];//\u8be2\u95ee\u6570\u7ec4\uff0c\u8f85\u52a9\u6570\u7ec4\n    int cnt[2];int n;int m;\n    struct linetree//\u7ebf\u6bb5\u6811\n    {\n        ll val[200010];ll add[200010];\n        inline void pushdown(int p,int l,int r)\n        {\n            if(r-l>1){add[2*p]+=add[p];add[2*p+1]+=add[p];}\n            val[p]+=add[p]*(r-l);add[p]=0;return;\n        }\n        void setadd(int p,int l,int r,int dl,int dr,int plus)\n        {\n            if(dl==l&&dr==r){add[p]+=plus;pushdown(p,l,r);return;}\n            if(add[p]!=0)pushdown(p,l,r);int mid=(l+r)/2;\n            if(dl<mid)setadd(2*p,l,mid,dl,min(dr,mid),plus);\n            else pushdown(2*p,l,mid);\n            if(mid<dr)setadd(2*p+1,mid,r,max(dl,mid),dr,plus);\n            else pushdown(2*p+1,mid,r);\n            val[p]=val[2*p]+val[2*p+1];return;\n        }\n        ll sum(int p,int l,int r,int dl,int dr)\n        {\n            if(add[p]!=0)pushdown(p,l,r);\n            if(dl==l&&dr==r){return val[p];}\n            int mid=(l+r)/2;ll res=0;\n            if(dl<mid)res+=sum(2*p,l,mid,dl,min(dr,mid));\n            if(mid<dr)res+=sum(2*p+1,mid,r,max(dl,mid),dr);\n            return res;\n        }\n        inline void cadd(int l,int r,int plus){setadd(1,0,n,l-1,r,plus);}\n        inline ll csum(int l,int r){return sum(1,0,n,l-1,r);}\n    }lt;\n    void solve(int l,int r,int ql,int qr)//\u6574\u4f53\u4e8c\u5206\n    {\n        if(r==l){for(int i=ql+1;i<=qr;i++){if(q[i].id==2)q[i].ans=r;}return;}\n        int mid=(l+r+1)/2;//r=l\u66f4\u65b0\u7b54\u6848\n        for(int i=ql+1;i<=qr;i++)\n        {\n            if(q[i].id==1)\n            {\n                if(q[i].k<mid){tr[0][++cnt[0]]=q[i];}//\u653e\u5de6\u8fb9\n                else {lt.cadd(q[i].l,q[i].r,1);tr[1][++cnt[1]]=q[i];}//\u653e\u53f3\u8fb9\n            }else \n            {\n                ll t=lt.csum(q[i].l,q[i].r);\n                if(q[i].k<=t){tr[1][++cnt[1]]=q[i];}//\u653e\u5de6\u8fb9\n                else {q[i].k-=t;tr[0][++cnt[0]]=q[i];}//\u653e\u53f3\u8fb9\n            }\n        }\n        for(int i=1;i<=cnt[0];i++){q[ql+i]=tr[0][i];}//\u4fdd\u8bc1\u5de6\u53f3\u662f\u4e00\u6bb5\u8fde\u7eed\u7684\u5e8f\u5217\n        for(int i=1;i<=cnt[1];i++)\n        {q[ql+cnt[0]+i]=tr[1][i];if(tr[1][i].id==1)lt.cadd(tr[1][i].l,tr[1][i].r,-1);}\n        //\u64a4\u56de\u4e4b\u524d\u7684\u7ebf\u6bb5\u6811\u64cd\u4f5c\n        int div1=ql+cnt[0];int div2=ql+cnt[0]+cnt[1];cnt[0]=0;cnt[1]=0;\n        if(ql!=div1)solve(l,mid-1,ql,div1);if(div1!=div2)solve(mid,r,div1,div2);\n        //\u5411\u5de6\u8d70\uff0c\u5411\u53f3\u8d70\n    }\n    int main()\n    {\n        scanf(\"%d%d\",&n,&m);\n        for(int i=1;i<=m;i++){scanf(\"%d%d%d%lld\",&q[i].id,&q[i].l,&q[i].r,&q[i].k);q[i].num=i;}\n        solve(-n,n,0,m);sort(q+1,q+m+1);//\u7531\u4e8e\u6574\u4f53\u4e8c\u5206\u4f1a\u6253\u4e71\u987a\u5e8f\uff0c\u6700\u540e\u8fd8\u9700\u6392\u5e8f\u540e\u8f93\u51fa\n        for(int i=1;i<=m;i++){if(q[i].id==2)printf(\"%d\\n\",q[i].ans);}return 0;\n    }\n```\n\u5f53\u7136\u8fd9\u53ea\u80fd\u6c42\u4e00\u4e2a\u8be2\u95ee\uff0c\u6211\u4eec\u9762\u5bf9\u7684\u662f\u591a\u7ec4\u4fee\u6539\u548c\u67e5\u8be2\n\u8fd9\u91cc\u5c31\u662f\u5206\u6cbb\u6cd5\u7684\u7cbe\u9ad3\u4e86\n\n\u53d1\u73b0\u4fee\u6539-\u67e5\u8be2\u4e4b\u95f4\u5173\u7cfb\u7684\u672c\u8d28\u5c31\u662f\n\n\u67e5\u8be2=\u5408\u5e76**\u65f6\u95f4\u5728\u8be5\u67e5\u8be2\u4e4b\u524d**\u7684\u6240\u6709\u4fee\u6539\n\n\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ef\u4ee5\u4e0d\u7528\u8003\u8651\u7cbe\u786e\u7684\u65f6\u95f4\uff0c\u800c\u662f\u53ea\u8981\u4fdd\u8bc1**\u6709\u6548**\u4fee\u6539\u5728\u67e5\u8be2\u4e4b\u524d\u5c31\u597d\n\n\u5177\u4f53\u6765\u8bb2\uff0c\u6574\u4f53\u4e8c\u5206\u5c06\u6240\u6709\u8be2\u95ee\u5206\u4e3a**\u5de6\u4fa7\u6709\u7528**\u548c**\u53f3\u4fa7\u6709\u7528**\u4e24\u4e2a\u96c6\u5408\n\n**\u9012\u5f52**\u7684\u5904\u7406\u8fd9\u4e24\u4e2a\u96c6\u5408\uff0c\u540c\u65f6\u4e0d\u65ad\u7684\u7f29\u5c0f\u7b54\u6848\u533a\u95f4\uff0c\u5f97\u51fa\u7b54\u6848\n\n//\u8bb2\u4e86\u4e00\u5806\u7384\u5b66\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\n\n\u8003\u8651\u73b0\u5728\u6b63\u5728\u4e8c\u5206\u7684\u7b54\u6848\u662fX\n\n\u7136\u540e\u6211\u4eec\u6709\u4e00\u4e2a\u8be2\u95ee\u662f\u95eeK1\u5927\uff0c\u53e6\u4e00\u4e2a\u662fK2\u5927\n\n\u53d1\u73b0K1\u5c0f\u4e8e\u67e5\u51fa\u6765\u7684\u533a\u95f4\u548c\uff0ck2\u5927\u4e8e\u67e5\u51fa\u6765\u7684\u533a\u95f4\u548c\n\n\u90a3\u4e48\u662f\u4e0d\u662fX\u5927\u4e86\u4ee5\u540e\uff0cK2\u8fd8\u662f\u4f1a\u8d85\uff0cX\u5c0f\u4e86\u4ee5\u540e\uff0cK1\u80af\u5b9a\u66f4\u5c0f\uff1f\n\n\u90a3\u4e48\u4e8c\u5206\u5c31\u9700\u8981\u540c\u65f6\u5411\u4e24\u4e2a\u65b9\u5411\u8d70\uff0c\u5411\u5de6\u8d70\uff08x\u51cf\u5c0f\uff09\u5904\u7406K2,\u5411\u53f3\u8d70\u5904\u7406K1\n\n\u6211\u4eec\u73b0\u5728\u53c8\u6709\u4e00\u4e2a\u4fee\u6539\u63d2\u5165V1,\u8fd8\u6709\u4e00\u4e2a\u4fee\u6539\u63d2\u5165V2\n\nv1\u5927\u4e8ex,\u800cv2\u5c0f\u4e8ex\n\n\u90a3\u4e48X\u5927\u4e86\u4ee5\u540e\uff0cv2\u80af\u5b9a\u8fd8\u6ca1\u7528\uff0cx\u5c0f\u4e86\u4ee5\u540e\uff0cV1\u4e00\u5b9a\u88ab\u7edf\u8ba1\u5230\n\n\u6240\u4ee5\u4e8c\u5206\u5411\u5de6\u8d70\u7684\u65f6\u5019\u5904\u7406v2\uff0c\u5411\u53f3\u8d70\u65f6\u5019\u5904\u7406v1\n\n\u540c\u65f6\uff0c\u5411\u5de6\u8d70\u7684\u65f6\u5019\u7ed9\u5bf9\u5e94\u7684\u67e5\u8be2\u51cf\u53bb\u4e00\u4e2a\u5f53\u524d\u533a\u95f4\u548c\uff0c\u4e3a\u4e86\u7edf\u8ba1\u5230\u4e00\u5b9a\u4f1a\u88ab\u7edf\u8ba1\u7684V1\n\n\u73b0\u5728\u8003\u8651\u8fd9\u6837\u7684\u64cd\u4f5c\u5e8f\u5217\n\nC1\uff0cc2,a1,a2\uff08\u7ee7\u7eed\u4e0a\u9762\u7684\u6837\u4f8b\uff09\n\n\u90a3\u4e48\u4e8c\u5206\u5411\u5de6\u8d70\u5904\u7406\u7684\u662f\uff1aC2,A2\n\n\u5411\u53f3\u8d70\u5904\u7406\u7684\u662f\uff1aC1\uff0cA1\n\n\u53d1\u73b0C2\u88ab\u201c\u62bd\u8d70\u4e86\u201d\uff0c\u4f46\u662f\u62bd\u8d70\u7684\u662f\u65e0\u6548\u7684\u64cd\u4f5c\n\n\u8fd9\u5c31\u662f\u6574\u4f53\u4e8c\u5206\u5566\n\n\u6bcf\u6b21\u6574\u4f53\u4e8c\u5206\u90fd\u4f1a\u5f80\u4e24\u4e2a\u65b9\u5411\u8d70\uff0c\u4e00\u4e2aX\u51cf\u5c0f\uff0cX\u589e\u5927\n\n\u4e4b\u540e\u6839\u636e\u4e00\u4e9b\u89c4\u5219\uff0c\u5224\u65ad\u54ea\u4e9b\u64cd\u4f5c\u6d41\u5411\u5de6\u8fb9\uff0c\u90a3\u4e9b\u64cd\u4f5c\u6d41\u5411\u53f3\u8fb9\n\n\u540c\u65f6\u6bcf\u6b21\u4fdd\u8bc1\u6d41\u5411\u5de6\u8fb9\u548c\u53f3\u8fb9\u7684\u64cd\u4f5c\u90fd\u662f\u76f8\u5bf9\u6709\u5e8f\u7684\n\n\u6211\u4eec\u62bd\u53bb\u7684\u4e1c\u897f\uff0c\u5168\u90e8\u662f\u65e0\u6548\u64cd\u4f5c\uff0c\u8981\u4e48\u4e00\u5b9a\u6267\u884c\uff0c\u8981\u4e48\u4e00\u5b9a\u4e0d\u6267\u884c\n\n\u5f53\u4e8c\u5206\u7684\u7b54\u6848\u53ea\u6709\u4e00\u4e2a\u53d6\u503c\u65f6\uff0c\u66f4\u65b0\u7b54\u6848\u5c31\u597d\u4e86\n\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u521a\u624d\u7684\u8fc7\u7a0b\u5b9e\u9645\u4e0a\u5728**\u65f6\u95f4\u7ef4\u5ea6**\u4e0a\u5f62\u6210\u4e86**\u4e00\u9897\u51b3\u7b56\u6811**\uff0c\u6811\u4e0a\u7684\u6bcf\u4e00\u4e2a**\u8282\u70b9**\u5bf9\u5e94\u4e00\u4e2a**\u64cd\u4f5c\u96c6\u5408**\uff0c\u6bcf\u4e2a\u64cd\u4f5c\u96c6\u5408\u9700\u8981\u5bf9**\u7ebf\u6bb5\u6811**\u64cd\u4f5c\uff0c\u5176\u5b9e\u662f**\u53e6\u4e00\u79cd\u7248\u672c\u7684\u6811\u5957\u6811**\n\n\u548cdp\u7684\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\u7c7b\u4f3c\uff0cdp\u662f\u7528**\u65f6\u95f4\u7ef4\u7f6e\u6362**\u4e86\u4e00\u4e2a\u771f\u5b9e\u7684**\u6570\u7ec4\u7ef4**\n\n\u800c\u6574\u4f53\u4e8c\u5206\uff0c\u5219\u662f\u7528\u65f6\u95f4\u4e0a\u751f\u6210\u7684**\u201c\u51b3\u7b56\u6811\u201d\u7f6e\u6362**\u4e86\u4e00\u9897\u771f\u5b9e\u7684**\u5916\u5c42\u6811**\n\n\n\u4e0b\u9762\u662f\u4e00\u4e9b\u5b9e\u73b0\u7684\u7ec6\u8282\uff0c\u6211\u4eec\u6bcf\u6b21\u5c06\u5de6\u8fb9\u64cd\u4f5c\u96c6\u5408\u548c\u53f3\u8fb9\u64cd\u4f5c\u96c6\u5408\u5b58\u5728\u4e24\u4e2a\u6570\u7ec4\u91cc\n\n\u4e4b\u540e\u628a\u4ed6\u4eec\u8d34\u5230\u539f\u6765\u7684\u64cd\u4f5c\u533a\u95f4\u4e0a\uff0c\u4fdd\u8bc1\u5de6\u8fb9\u64cd\u4f5c\u548c\u53f3\u8fb9\u64cd\u4f5c\u662f\u8fde\u7eed\u7684\u4e00\u6bb5\u533a\u95f4\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u5de6\u53f3\u533a\u95f4\u7684\u76f8\u5bf9\u65e0\u5e8f\u5e76\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4e92\u4e0d\u76f8\u5173\u4e86\n\n\u4e0a\u4ee3\u7801~\n\n\n\n\n",
        "postTime": 1515839431,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3332 \u3010[ZJOI2013]K\u5927\u6570\u67e5\u8be2\u3011"
    },
    {
        "content": "~~\u6811\u5957\u6811\u5927\u6cd5\u543c\u554a~~\n\n\u7c7b\u4f3c\u4e8edynamic rankings\uff0c\u53ea\u662f\u5355\u70b9\u4fee\u6539\u53d8\u6210\u4e86\u533a\u95f4\u4fee\u6539\uff0c\u540c\u6837\u53ef\u4ee5\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u5957\u4e3b\u5e2d\u6811\u7684\u65b9\u6cd5\u89e3\u51b3\uff0c\u590d\u6742\u5ea6O(nlog^2 n)\n\n\u5355\u70b9\u6700\u5927500ms-\uff0c~~\u88ab\u6574\u4f53\u4e8c\u520650ms-\u540a\u8d77\u6765\u9524~~\n\n```cpp\n// luogu-judger-enable-o2\n#include <stdio.h>\n#include <string.h>\n#include <algorithm>\nusing namespace std;\ntypedef long long ll;\nconst int N=5e4+2,M=3e7+2;\nint c[M][2],rt[N],xrt[N],a[N],b[N];\nint dr,n,m,i,j,x,y,fh,gs,ggs,pos,ds,dt,st1[N],st2[N],st3[N],st4[N];\nll s[M],z,ddr,op[N][4],tp1,tp2,tp3,tp4;\ninline int lb(int x)\n{\n    return x&(-x);\n}\ninline ll read()\n{\n    dr=getchar();fh=1;\n    while ((dr<48)||(dr>57))\n    {\n        if (dr=='-') fh=-1;\n        dr=getchar();\n    }\n    ddr=dr^48;dr=getchar();\n    while ((dr>=48)&&(dr<=57))\n    {\n        ddr=ddr*10+(dr^48);\n        dr=getchar();\n    }\n    return ddr*fh;\n}\nvoid build(int &now,int pre,int l,int r)\n{\n    s[now=++ds]=s[pre]+dt;\n    if (l==r) return;\n    if (pos<=l+r>>1)\n    {\n        c[now][1]=c[pre][1];\n        build(c[now][0],c[pre][0],l,l+r>>1);\n    }\n    else\n    {\n        c[now][0]=c[pre][0];\n        build(c[now][1],c[pre][1],(l+r>>1)+1,r);\n    }\n}\nvoid sol()\n{\n    int l=1,r=gs;\n    ll sum;\n    while (l<r)\n    {\n        sum=0;\n        for (j=1;j<=tp1;j++) sum-=op[i][1]*s[c[st1[j]][1]];\n        for (j=1;j<=tp2;j++) sum+=(op[i][2]+1)*s[c[st2[j]][1]];\n        for (j=1;j<=tp3;j++) sum+=s[c[st3[j]][1]];\n        for (j=1;j<=tp4;j++) sum-=s[c[st4[j]][1]];\n        if (sum>=op[i][3])\n        {\n            for (j=1;j<=tp1;j++) st1[j]=c[st1[j]][1];\n            for (j=1;j<=tp2;j++) st2[j]=c[st2[j]][1];\n            for (j=1;j<=tp3;j++) st3[j]=c[st3[j]][1];\n            for (j=1;j<=tp4;j++) st4[j]=c[st4[j]][1];\n            l=(l+r>>1)+1;\n        }\n        else\n        {\n            for (j=1;j<=tp1;j++) st1[j]=c[st1[j]][0];\n            for (j=1;j<=tp2;j++) st2[j]=c[st2[j]][0];\n            for (j=1;j<=tp3;j++) st3[j]=c[st3[j]][0];\n            for (j=1;j<=tp4;j++) st4[j]=c[st4[j]][0];\n            op[i][3]-=sum;\n            r=l+r>>1;\n        }\n    }\n    printf(\"%d\\n\",b[l]);\n}\nint main()\n{\n    n=read();m=read();\n    for (i=1;i<=m;i++)\n    {\n        op[i][0]=read();op[i][1]=read();op[i][2]=read();op[i][3]=read();\n        if (op[i][0]==1) a[++ggs]=op[i][3];\n    }\n    sort(a+1,a+ggs+1);\n    b[gs=1]=a[1];\n    for (i=2;i<=ggs;i++) if (a[i]!=a[i-1]) b[++gs]=a[i];\n    for (i=1;i<=m;i++)\n    {\n        if (op[i][0]==1)\n        {\n            pos=lower_bound(b+1,b+gs+1,op[i][3])-b;\n            dt=1;\n            for (j=op[i][1];j<=n;j+=lb(j)) build(rt[j],rt[j],1,gs);\n            dt=op[i][1];\n            for (j=op[i][1];j<=n;j+=lb(j)) build(xrt[j],xrt[j],1,gs);\n            dt=-1;\n            for (j=op[i][2]+1;j<=n;j+=lb(j)) build(rt[j],rt[j],1,gs);\n            dt=-(op[i][2]+1);\n            for (j=op[i][2]+1;j<=n;j+=lb(j)) build(xrt[j],xrt[j],1,gs);\n        }\n        else\n        {\n            tp1=tp2=tp3=tp4=0;\n            for (j=op[i][1]-1;j;j-=lb(j)) st1[++tp1]=rt[j];\n            for (j=op[i][2];j;j-=lb(j)) st2[++tp2]=rt[j];\n            for (j=op[i][1]-1;j;j-=lb(j)) st3[++tp3]=xrt[j];\n            for (j=op[i][2];j;j-=lb(j)) st4[++tp4]=xrt[j];\n            sol();\n        }\n    }\n}\n```",
        "postTime": 1546747394,
        "uid": 29826,
        "name": "SSerxhs",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3332 \u3010[ZJOI2013]K\u5927\u6570\u67e5\u8be2\u3011"
    },
    {
        "content": "\u9898\u76ee\u4f20\u9001\u95e8\uff1a\n\n### [P3332 [ZJOI2013]K\u5927\u6570\u67e5\u8be2](https://www.luogu.org/problemnew/show/P3332)\n\n~~mmp\u521a\u770b\u5230\u8fd9\u4e00\u9898\u4ee5\u4e3a\u6bcf\u4e2a\u4f4d\u7f6e\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u64cd\u4f5c\u662f\u533a\u95f4\u52a0\uff0c\u5fc3\u60f3\u8fd9\u600e\u4e48\u53ef\u80fd\u53ef\u505a~~\n\n\u672c\u9898\u89e3\u4ecb\u7ecd\u66b4\u529b\u7684\u6811\u72b6\u6570\u7ec4\u5957\u6743\u503c\u7ebf\u6bb5\u6811\u505a\u6cd5\u3002\n\n\u9996\u5148\u6211\u4eec\u6765\u56de\u987e\u4e00\u4e0b\u8fd9\u9898\uff1a\n\n### [P2617 Dynamic Rankings](https://www.luogu.org/problemnew/show/P2617)\n\n\u533a\u95f4\u7b2cK\u5927\uff0c\u5355\u70b9\u4fee\u6539\u4e3a\u4e00\u4e2a\u503c\u3002\n\n\u8fd9\u9053\u9898\u7684\u6811\u72b6\u6570\u7ec4\u5957\u6743\u503c\u7ebf\u6bb5\u6811\u505a\u6cd5\u7684\u6838\u5fc3\u601d\u60f3\u662f\uff0c\u641e\u51fa\u4e00\u4e2a\u6743\u503c\u7ebf\u6bb5\u6811\u7136\u540e\u5728\u4e0a\u9762\u4e8c\u5206\uff1a\u5de6\u5b50\u533a\u95f4\u5143\u7d20\u592a\u5c11\u5c31\u5230\u53f3\u8fb9\u627e\uff0c\u5de6\u5b50\u533a\u95f4\u5143\u7d20$\\ge k$\u5c31\u8fdb\u5165\u5de6\u5b50\u533a\u95f4\u627e\u3002\n\n\u800c\u6811\u72b6\u6570\u7ec4\u548c\u6743\u503c\u7ebf\u6bb5\u6811\u7684\u610f\u4e49\u5c31\u662f\u901a\u8fc7\u201c\u524d\u7f00\u548c\u201d\u76f8\u51cf\u5f97\u51fa\u201c\u533a\u95f4\u548c\u201d\u7684\u65b9\u5f0f\uff0c\u5f97\u51fa\u8fd9\u6837\u4e00\u68f5\u6743\u503c\u7ebf\u6bb5\u6811\u3002\u6811\u72b6\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u4e00\u68f5\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u6309\u7167\u548c\u4e0d\u5957\u4e1c\u897f\u7684\u6811\u72b6\u6570\u7ec4\u4e00\u6a21\u4e00\u6837\u7684\u65b9\u5f0f\u628a\u4e00\u4e9b\u6743\u503c\u7ebf\u6bb5\u6811\u52a0\u8d77\u6765\u5c31\u80fd\u5f97\u5230\u201c\u524d\u7f00\u548c\u201d\u3002\n\n\u6b64\u9898\u7684\u533a\u522b\u5728\u4e8e\u9700\u8981\u533a\u95f4\u52a0\u3002~~\u56e0\u4e3a\u6811\u72b6\u6570\u7ec4\u597d\u5199\u5f97\u591a\u4e86\u6240\u4ee5\u6211\u9009\u62e9\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u800c\u4e0d\u662f\u7ebf\u6bb5\u6811\u6765\u5957\u6743\u503c\u7ebf\u6bb5\u6811\u3002~~\u4f17\u6240\u5468\u77e5\uff0c\u4e0d\u5957\u4ec0\u4e48\u5947\u5947\u602a\u602a\u7684\u6811\u72b6\u6570\u7ec4\u5904\u7406\u8fd9\u79cd\u95ee\u9898\u7684\u65b9\u5f0f\u662f\u4f7f\u7528\u5dee\u5206\uff1a\n\n\u8bb0\n\n$$b[i]=a[i]-a[i-1]\\quad(a[0]=0)$$\n\n\u5219\n\n$$a[1]+a[2]+...+a[n]=n*b[1]+(n-1)*b[2]+...+b[n]$$\n\n\u7b49\u4e8e\n\n$$(n+1)*(b[1]+b[2]+...+b[n])-(1*b[1]+2*b[2]+...+n*b[n])$$\n\n$b[1]+b[2]+...+b[n]$\u548c$1*b[1]+2*b[2]+...+n*b[n]$\u90fd\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\uff0c\u800c\u5957\u4e86\u6743\u503c\u7ebf\u6bb5\u6811\u7684\u6811\u72b6\u6570\u7ec4\u548c\u8fd9\u4e2a\u7684\u5904\u7406\u65b9\u5f0f\u771f\u7684\u662f\u5b8c\u5168\u4e00\u81f4\u3002\u53ea\u9700\u8981\u6309\u7167\u6811\u72b6\u6570\u7ec4\u7ed9\u51fa\u7684\u5bf9\u5e94\u7684\u6743\u503c\u7ebf\u6bb5\u6811\u4e0a\u64cd\u4f5c\u5373\u53ef\u3002\n\n\u4e0b\u9762\u662f\u4ee3\u7801\u3002\u5b9e\u9645\u5199\u8d77\u6765\u662f\u6709\u4e00\u4e9b\u9700\u8981\u6ce8\u610f\u7684\u7ec6\u8282\u7684\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\n\nconst int maxN=50005;\n\nint N,M,n;\nint Rot[2][maxN];\nll sum[maxN*400];int lc[maxN*400],rc[maxN*400],idx;\n//\u7a7a\u95f4\u5c3d\u91cf\u5f00\u5927 \nint Update(int x,int l,int r,int pos,int K){\n\tif(!x) x=++idx;\n\tsum[x]+=K;\n\tif(l!=r){\n\t\tint mid=(l+r)>>1;\n\t\tif(pos<=mid) lc[x]=Update(lc[x],l,mid,pos,K);\n\t\telse rc[x]=Update(rc[x],mid+1,r,pos,K);\n\t}\n\treturn x;\n}\n\nint stk[4][25],len[4];\nint Query(int l,int r,ll K){\n\tlen[0]=len[1]=len[2]=len[3]=0;\n\tfor(int x1=l-1;x1;x1-=x1&-x1) stk[0][++len[0]]=Rot[0][x1];\n\tfor(int x1=l-1;x1;x1-=x1&-x1) stk[1][++len[1]]=Rot[1][x1];\n\tfor(int x1=r;x1;x1-=x1&-x1) stk[2][++len[2]]=Rot[0][x1];\n\tfor(int x1=r;x1;x1-=x1&-x1) stk[3][++len[3]]=Rot[1][x1]; \n\tint L=1,R=n,mid;ll SUM;\n\twhile(L<R){\n\t\tmid=(L+R)>>1;\n\t\tSUM=0;\n\t\tfor(int i=1;i<=len[0];i++) SUM-=1LL*l*sum[rc[stk[0][i]]];\n\t\tfor(int i=1;i<=len[1];i++) SUM+=sum[rc[stk[1][i]]];\n\t\tfor(int i=1;i<=len[2];i++) SUM+=1LL*(r+1)*sum[rc[stk[2][i]]];\n\t\tfor(int i=1;i<=len[3];i++) SUM-=sum[rc[stk[3][i]]];\n\t\t//\u6ce8\u610f\u4e0a\u65b9\u52a0\u51cf\u53f7\uff01\u7ec6\u8282*1 \n\t\tif(SUM>=K){\n\t\t\tfor(int i=1;i<=len[0];i++) stk[0][i]=rc[stk[0][i]];\n\t\t\tfor(int i=1;i<=len[1];i++) stk[1][i]=rc[stk[1][i]];\n\t\t\tfor(int i=1;i<=len[2];i++) stk[2][i]=rc[stk[2][i]];\n\t\t\tfor(int i=1;i<=len[3];i++) stk[3][i]=rc[stk[3][i]];\n\t\t\tL=mid+1;\n\t\t}\n\t\telse{\n\t\t\tfor(int i=1;i<=len[0];i++) stk[0][i]=lc[stk[0][i]];\n\t\t\tfor(int i=1;i<=len[1];i++) stk[1][i]=lc[stk[1][i]];\n\t\t\tfor(int i=1;i<=len[2];i++) stk[2][i]=lc[stk[2][i]];\n\t\t\tfor(int i=1;i<=len[3];i++) stk[3][i]=lc[stk[3][i]];\n\t\t\tR=mid;\n\t\t\tK-=SUM;\n\t\t}\n\t\t//\u6ce8\u610f\u4e0a\u65b9\u8df3\u513f\u5b50\u65f6\u7684\u5224\u65ad\u3002K\u7684\u542b\u4e49\u662f\u7b2cK\u5927\u800c\u4e0d\u662f\u7b2cK\u5c0f\uff01\u7ec6\u8282*2 \n\t}\n\treturn L;\n}\n\nint main(){\n\tscanf(\"%d%d\",&N,&M);n=2*N+1;\n\t//\u61d2\u5f97\u79bb\u6563\u5316\u4e86 \n\twhile(M--){\n\t\tint opt,l,r;scanf(\"%d%d%d\",&opt,&l,&r);\n\t\tif(opt==1){\n\t\t\tint c;scanf(\"%d\",&c);c+=N+1;\n\t\t\tfor(int x1=l;x1<=N;x1+=x1&-x1)\n\t\t\t\tRot[0][x1]=Update(Rot[0][x1],1,n,c,1);\n\t\t\tfor(int x1=l;x1<=N;x1+=x1&-x1)\n\t\t\t\tRot[1][x1]=Update(Rot[1][x1],1,n,c,l);\n\t\t\tfor(int x1=r+1;x1<=N;x1+=x1&-x1)\n\t\t\t\tRot[0][x1]=Update(Rot[0][x1],1,n,c,-1);\n\t\t\tfor(int x1=r+1;x1<=N;x1+=x1&-x1)\n\t\t\t\tRot[1][x1]=Update(Rot[1][x1],1,n,c,-r-1);\n\t\t}\n\t\telse{\n\t\t\tll c;scanf(\"%lld\",&c);\n\t\t\tprintf(\"%d\\n\",Query(l,r,c)-N-1);\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n\n```\n",
        "postTime": 1564707305,
        "uid": 58567,
        "name": "x\u4e49x",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3332 [ZJOI2013]K\u5927\u6570\u67e5\u8be2"
    },
    {
        "content": "[toc]\n\n# \u9898\u76ee\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3332)\n\n\u8fd9\u91cc\u7684\u52a0\u5165\u662f\u628a\u6bcf\u4e2a\u5143\u7d20\u770b\u6210\u4e00\u4e2a\u96c6\u5408\uff01\uff01\uff01\n\n# \u89e3\u6cd5\n\n$\\sf{FBI\\ Warning}$\uff1a\u6700\u597d\u5148\u8df3\u5230 \"\u6211 \u6ca1 \u5b66 \u61c2\" \u677f\u5757\u5f00\u59cb\u770b\uff0c\u4e0d\u7136\u4f60\u53ef\u80fd\u4f1a\u88ab\u6211\u7ed5\u8fdb\u53bb\u3002\n\n---\n\n\u8fd9\u9053\u9898\u4e3b\u8981\u662f\u8bb2\u4e00\u4e0b **\u6574\u4f53\u4e8c\u5206**\u3002\n\n\u6574\u4f53\u4e8c\u5206\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u6709\u4e00\u5768\u6570\uff0c\u89c4\u5b9a\u4e00\u4e2a $\\text{mid}$ \u8fdb\u884c\u4e8c\u5206 ~~\uff08\u597d\u50cf\u4e00\u70b9\u4e5f\u4e0d\u6e05\u695a\uff09~~\u3002\n\n\u601d\u8003\u4e00\u4e0b\u666e\u901a\u7684\u4e8c\u5206\uff0c\u6211\u4eec\u5176\u5b9e\u662f\u5e2e\u52a9 **\u4e00\u4e2a\u6570\u503c** $ans$ \u9009\u62e9\u4e00\u4e2a\u5408\u9002\u7684\u503c\u3002\u6574\u4f53\u4e8c\u5206\u5c31\u662f\u5e2e\u52a9\u5f88\u591a\u4e2a\u6570\u503c\u9009\u62e9\u4e00\u4e2a\u5408\u9002\u7684\u503c\u3002\n\n\u63a5\u4e0b\u6765\u8bf4\u4e00\u4e0b\u7b97\u6cd5\u6d41\u7a0b\u5427\u3002\n\n\u5bf9\u503c\u57df\u8fdb\u884c\u4e8c\u5206\u3002\u6211\u4eec\u5b9a\u4e49\u4e24\u4e2a\u5e8f\u5217 $L$ \u4e0e $R$\uff0c\u5206\u522b\u5411\u4e0b\u9012\u5f52\u81f3 $[l,\\text{mid}],[\\text{mid}+1,r]$\u3002\u5bf9\u4e8e\u6b64\u9898\u6211\u4eec\u7684 $\\text{mid}$ \u5c31\u662f **\u5047\u5b9a** \u7b2c $C$ \u5927\u7684\u6570\uff0c\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u6b21\u904d\u5386\u5927\u4e8e $\\text{mid}$ \u7684\u6570\u5c31\u662f\u80fd\u5bf9\u7ed3\u679c\u4ea7\u751f\u5f71\u54cd\u7684\uff0c\u8bbe\u76ee\u524d\u4e3a\u6b62\u5927\u4e8e $\\text{mid}$ \u7684\u6570\u7684\u4e2a\u6570\u4e3a $num$\u3002\n\n\u9996\u5148\u6211\u4eec\u7684\u65f6\u95f4\u6233\u662f\u6709\u5e8f\u7684\uff0c\u8fd9\u4e2a\u5c31\u4e0d\u7528\u6392\u5e8f\u4e86\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u4e0e\u63d2\u5165\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\u3002\n\n- \u64cd\u4f5c\u4e3a\u8be2\u95ee\uff0c$num$ \u5c0f\u4e8e\u8be2\u95ee\u8981\u6c42\u7684 $C$\u3002\u8fd9\u8bf4\u660e\u6211\u4eec\u628a $mid$ \u7684\u503c\u8c03\u5927\u4e86\uff0c\u6211\u4eec\u5c06 $C$ \u51cf\u53bb $num$\uff0c\u518d\u5728 $[l,mid]$ \u4e2d\u9009\u62e9\u65b0\u503c\uff08\u5373\u63d2\u5165 $L$\uff09\u3002\uff08**\u6ce8\u610f\u8fd9\u91cc\u7684 $mid$ \u662f\u53ef\u4ee5\u53d6\u5230\u7684\uff0c\u56e0\u4e3a\u5224\u65ad\u6761\u4ef6\u662f $num < C$**\uff09\n- \u64cd\u4f5c\u4e3a\u8be2\u95ee\uff0c$num$ \u5927\u4e8e\u7b49\u4e8e\u8981\u6c42\u7684 $C$\u3002\u6211\u4eec\u5148\u524d\u5224\u65ad\u7528\u7684\u662f**\u4e25\u683c\u5927\u4e8e**\u624d\u52a0\u5165\u6811\u72b6\u6570\u7ec4\uff0c\u6240\u4ee5\u7b49\u4e8e\u7684\u60c5\u51b5\u4e0d\u4f1a\u89e6\u53ca $mid$\u3002\u4ece $[mid+1,r]$ \u4e2d\u627e\u5c31\u884c\u4e86\u3002\n- \u64cd\u4f5c\u4e3a\u63d2\u5165\uff0c$C>mid$\u3002\u8fd9\u79cd\u6743\u503c\u63d2\u5165 $R$\uff0c\u518d\u5728\u6811\u72b6\u6570\u7ec4\u4e2d\u66f4\u65b0\u5c31\u884c\u4e86\u3002\n- \u64cd\u4f5c\u4e3a\u63d2\u5165\uff0c$C\\le mid$\u3002\u8fd9\u79cd\u6743\u503c\u663e\u7136\u4e0d\u80fd\u8d21\u732e $[mid+1,r]$ \u7684 $mid'$\uff0c\u63d2\u5165 $L$ \u5c31\u884c\u4e86\u3002\n\n------\n\n$\\text{Update on 2021.2.16}$\uff1a\n\n\u6211\u4e4b\u524d\u5199\u4e86\u4e2a\u5565\uff0c~~\u6211\u600e\u4e48\u8fd9\u4e48\u5e7c\u7a1a~~\u3002\n\n\u8fd9\u9898\u9700\u8981\u7ef4\u62a4\u533a\u95f4\u52a0\u548c\u533a\u95f4\u548c\u3002\u6811\u72b6\u6570\u7ec4\u662f\u5355\u70b9\u52a0\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u65f6\u95f4\u590d\u6742\u5ea6\u5bb9\u6613\u60f3\u5230\u5dee\u5206\u7684\u601d\u60f3\u3002\n\n\u7136\u540e\u53ef\u4ee5\u770b\u770b [\u6211\u7684\u53e6\u4e00\u7bc7\u535a\u5ba2](https://www.cnblogs.com/AWhiteWall/p/12787417.html)\uff0c\u8bb2\u4e86\u6811\u72b6\u6570\u7ec4\u600e\u4e48\u7ef4\u62a4\u3002\n\n------\n\n\u770b\u5230\u6811\u72b6\u6570\u7ec4\u4e5f\u8bb8\u4f60\u770b\u4e0d\u61c2 ~~\uff08\u5f53\u7136\u4f60\u53ef\u4ee5\u5199\u7ebf\u6bb5\u6811\uff0c\u6bd4\u6811\u72b6\u6570\u7ec4\u597d\u7406\u89e3\u5f97\u591a\uff0c\u6211\u662f\u56e0\u4e3a\u6211\u662f $250$ \u624d\u4f1a\u53bb\u505a\u7684 $QwQ$\uff09~~\uff0c\u63a5\u4e0b\u6765\u6211\u4f1a\u8be6\u7ec6\u8bb2\u89e3\u6811\u72b6\u6570\u7ec4\uff0c\u5982\u679c\u6ca1\u6709\u770b\u61c2\u53ef\u4ee5\u79c1\u4fe1\u6216\u8bc4\u8bba\u54df\uff01 ~~\uff08\u849f\u84bb\u6c42\u8d5e\uff09~~\n\n\u5148\u6765\u4e00\u5f20\u56fe\uff08\u8fd9\u4e2a\u53ef\u4ee5\u7ed3\u5408\u4ee3\u7801\u89c2\u770b\uff0c\u8fd9\u4e2a\u90e8\u5206\u611f\u89c9\u7f51\u4e0a\u6709\u4e9b\u4ee3\u7801\u53ef\u80fd\u6709\u95ee\u9898\u5c31\u6bd4\u5982\u6211\u770b\u7684\u90a3\u4efd\u6811\u72b6\u6570\u7ec4\u4ee3\u7801\uff09\uff1a\n\n![](https://img2020.cnblogs.com/blog/1889894/202005/1889894-20200506220334011-2021660189.png)\n\n\u6211\u4eec\u5728 $2$ \u8fd9\u4e2a\u8282\u70b9\u52a0\u4e86 $1$ \u8fd9\u4e2a\u6570\u503c\uff0c\u7528\u53e6\u4e00\u4e2a\u6570\u7ec4\u52a0\u4e86 $2-1=1$ \u8fd9\u4e2a\u6570\u503c\u3002\n\n\u63a5\u4e0b\u6765\u5047\u8bbe\u6211\u4eec $ask(x=5)$\u3002\u56e0\u4e3a\u8fd9\u76f8\u5f53\u4e8e\u662f\u4e00\u4e2a\u524d\u7f00\u548c\uff1a\u5bf9\u4e8e $c1[]$\uff0c\u8bb0\u5f55\u7684\u5c31\u662f\u5728 $[1,x]$ \u4e4b\u95f4\u6709\u591a\u5c11\u4e2a\u6dfb\u52a0\u7684 $1$\uff08\u6ce8\u610f\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u6539\u6210 $-1$\uff0c\u8fd9\u4e2a\u90e8\u5206\u6211\u5c31\u4e0d\u8bb2\u4e86\uff0c\u4e00\u901a\u767e\u901a\uff09\u3002\u800c\u5bf9\u4e8e $c2[]$\uff0c\u8bb0\u5f55\u7684\u5c31\u662f\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u88ab\u6dfb\u52a0\u7684\u6b21\u6570 $*$ \uff08\u4f4d\u7f6e $ - 1$\uff09\uff08**\u6ce8\u610f\u8fd9\u91cc\u7684\u4e24\u4e2a\u6570\u7ec4\u5df2\u7ecf\u5b8c\u6210 $ask$ \u4e2d\u7684\u7d2f\u52a0**\uff09\u3002\n\n\u90a3\u4e48 $\\sum c1*x-\\sum c2$ \u5bf9\u5e94\u5728\u56fe\u4e0a\u5c31\u662f\u4e00\u6761\u957f\u7684\u6a59\u8272\u7684\u7ebf\u6bb5\u51cf\u53bb\u77ed\u7684\u6a59\u8272\u7684\u7ebf\u6bb5\uff0c\u6b63\u597d\u5c31\u662f\u9ec4\u8272\u7684\u7ebf\u6bb5\uff1a\u8fd9\u4e2a $1$ \u5230 $x$ \u4e4b\u95f4\u7684\u4f4d\u7f6e\u4e2a\u6570\u3002\n\n\u603b\u7ed3\u4e00\u4e0b\uff1a\u8fd9\u4e2a $ask$ \u51fd\u6570\u8fd4\u56de\u7684\u503c\u5c31\u662f $x$ \u4e0e\u4e4b\u524d\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u8ddd\u79bb $*$ \u8fd9\u4e2a\u4f4d\u7f6e\u88ab\u6dfb\u52a0 $1$ \u7684\u4e2a\u6570\u3002\n\n\n\n\u597d\u7684\u6211\u4eec\u518d\u653e\u4e00\u5f20\u56fe\uff0c\u6765\u89e3\u91ca\u6700\u7ec8\u7684\u7b54\u6848\u3002\n\n![](https://img2020.cnblogs.com/blog/1889894/202005/1889894-20200506223358361-1552121530.png)\n\n$ask(L-1)=5-2+1=4$\uff0c$ask(R)=(8-2+1)+(8-7+1)=9$\u3002\n\n\u76f8\u51cf\u5373\u4e3a\u6240\u6c42\uff1a\u5728 $[L,R]$ \u533a\u95f4\u5185\u5927\u4e8e $mid$ \u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u6211\u7adf\u7136\u5199\u5b8c\u4e86 $QwQ$\uff08\u5e0c\u671b\u4e0d\u8981\u88ab\u5e03\u5e03\u6263\u8f6c\u8f7d\u5c0f\u58f0\u54d4\u54d4\uff09\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#define int long long\n\nconst int N = 5e4 + 5;\nint n, m, p[N], ans[N], op[N], l[N], r[N], c1[N], c2[N], c[N], lef[N], rig[N];\n\nint read() {\n    int x = 0, f = 1; char s;\n    while((s = getchar()) < '0' || s > '9') if(s == '-') f = -1;\n    while(s >= '0' && s <= '9') {x = (x << 1) + (x << 3) + (s ^ 48); s = getchar();}\n    return x * f;\n}\n\nint lowbit(const int x) {return x & -x;}\n\nvoid add(const int x, const int k) {\n    for(int i = x; i <= n; i += lowbit(i))\n        c1[i] += k, c2[i] += k * (x - 1);\n}\n\nint ask(const int x) {\n    int r = 0;\n    for(int i = x; i; i -= lowbit(i))\n        r += c1[i] * x - c2[i];\n    return r;\n}\n\nvoid cdq(const int L, const int R, const int down, const int up) {\n    if(L > R || down > up) return;\n    if(down == up) {for(int i = L; i <= R; ++ i) ans[p[i]] = up; return;}\n    int mid = up + down >> 1; int lenl = 0, lenr = 0;\n    for(int i = L; i <= R; ++ i) {\n        int pos = p[i];\n        if(op[pos] & 2) {\n            int num = ask(r[pos]) - ask(l[pos] - 1);\n            if(num < c[pos]) lef[++ lenl] = pos, c[pos] -= num;\n            else rig[++ lenr] = pos;\n        }\n        else {\n            if(c[pos] > mid) add(l[pos], 1), add(r[pos] + 1, -1), rig[++ lenr] = pos;\n            else lef[++ lenl] = pos;\n        }\n    }\n    for(int i = 1; i <= lenl; ++ i) p[L + i - 1] = lef[i];\n    for(int i = 1; i <= lenr; ++ i) {\n        p[L + i + lenl - 1] = rig[i];\n        if(op[p[L + i + lenl - 1]] & 1) add(l[p[L + i + lenl - 1]], -1), add(r[p[L + i + lenl - 1]] + 1, 1);\n    }\n    cdq(L, L + lenl - 1, down, mid); cdq(L + lenl, R, mid + 1, up);\n}\n\nsigned main() {\n    n = read(), m = read();\n    for(int i = 1; i <= m; ++ i)\n        p[i] = i, op[i] = read(), l[i] = read(), r[i] = read(), c[i] = read();\n    cdq(1, m, -n, n);\n    for(int i = 1; i <= m; ++ i)\n        if(op[i] & 2) printf(\"%lld\\n\", ans[i]);\n    return 0;\n}\n```\n\n# \u6211 \u6ca1 \u5b66 \u61c2\n\n\u662f\u8fd9\u6837\u7684\uff0c\u5728\u8003\u573a\u4e0a\u53c8\u5199\u6302\u4e86\u3002\n\n\u6709\u4e00\u4e2a\u66f4\u6613\u7406\u89e3\u7684\u65b9\u6cd5\uff1a\u4e8c\u5206 $\\text{mid}$\uff0c\u5c06\u6bd4\u5b83\u5927\u7684\u6570\u52a0\u5165\u7ebf\u6bb5\u6811\u3002\u67e5\u8be2\u65f6\u8be2\u95ee\u533a\u95f4\u5185\u5927\u4e8e $\\text{mid}$ \u7684\u6570\u7684\u4e2a\u6570\uff0c\u5982\u679c $c\\le \\text{Query}$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u503c\u5c31\u5e94\u8be5\u5728 $[\\text{mid}+1,r]$ \u4e4b\u95f4\u3002\n\n\u5173\u4e8e\u590d\u6742\u5ea6\uff0c\u6bcf\u4e00\u5c42\u90fd\u6709 $m+q$ \u4e2a\u64cd\u4f5c\uff0c\u4e00\u5171\u6709 $\\log n$ \u5c42\uff0c\u4e00\u6b21\u64cd\u4f5c\u662f $\\mathcal O(\\log n)$ \u7684\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u662f $\\mathcal O((m+q)\\cdot \\log^2 n)$ \u54d2\uff01\n\n```cpp\n#include <cstdio>\n#define rep(i,_l,_r) for(signed i=(_l),_end=(_r);i<=_end;++i)\n\ntypedef long long ll;\nconst int maxn=5e4+5;\n\nint n,m,tag[maxn<<2];\nbool is[maxn];\nll t[maxn<<2],ans[maxn];\nstruct node {int l,r,op,id; ll c;} s[maxn],tl[maxn],tr[maxn];\n\nvoid pushDown(int o,int l,int r) {\n\tif(!tag[o]) return;\n\tint mid=l+r>>1;\n\ttag[o<<1]+=tag[o],tag[o<<1|1]+=tag[o];\n\tt[o<<1]+=1ll*(mid-l+1)*tag[o],t[o<<1|1]+=1ll*(r-mid)*tag[o];\n\ttag[o]=0;\n}\n\nvoid pushUp(int o) {t[o]=t[o<<1]+t[o<<1|1];}\n\nll Query(int o,int l,int r,int L,int R) {\n\tif(l>R || r<L) return 0;\n\tif(l>=L && r<=R) return t[o];\n\tint mid=l+r>>1;\n\tpushDown(o,l,r);\n\treturn Query(o<<1,l,mid,L,R)+Query(o<<1|1,mid+1,r,L,R);\n}\n\nvoid modify(int o,int l,int r,int L,int R,int k) {\n\tif(l>R || r<L) return;\n\tif(l>=L && r<=R) return (void)(tag[o]+=k,t[o]+=1ll*(r-l+1)*k);\n\tint mid=l+r>>1;\n\tpushDown(o,l,r);\n\tmodify(o<<1,l,mid,L,R,k),modify(o<<1|1,mid+1,r,L,R,k);\n\tpushUp(o);\n}\n\nvoid dicon(int l,int r,int ql,int qr) {\n\tif(ql>qr || l>r) return;\n\tif(l==r) {\n\t\trep(i,ql,qr) ans[s[i].id]=l;\n\t\treturn;\n\t}\n\tint mid=l+r>>1,totl=0,totr=0; ll tmp;\n\trep(i,ql,qr)\n\t\tif(s[i].op==1) {\n\t\t\tif(s[i].c>mid) modify(1,1,n,s[i].l,s[i].r,1),tr[++totr]=s[i];\n\t\t\telse tl[++totl]=s[i];\n\t\t}\n\t\telse {\n\t\t\ttmp=Query(1,1,n,s[i].l,s[i].r);\n\t\t\tif(s[i].c<=tmp) tr[++totr]=s[i];\n\t\t\telse s[i].c-=tmp,tl[++totl]=s[i];\n\t\t}\n\trep(i,1,totl) s[ql+i-1]=tl[i];\n\trep(i,1,totr) {\n\t\ts[ql+totl+i-1]=tr[i];\n\t\tif(tr[i].op==1) modify(1,1,n,tr[i].l,tr[i].r,-1);\n\t}\n\tdicon(l,mid,ql,ql+totl-1),dicon(mid+1,r,ql+totl,ql+totl+totr-1);\n}\n\nsigned main() {\n\tscanf(\"%d %d\",&n,&m);\n\trep(i,1,m) scanf(\"%d %d %d %lld\",&s[i].op,&s[i].l,&s[i].r,&s[i].c),s[i].id=i,is[i]=(s[i].op==2);\n\tdicon(-n,n,1,m);\n\trep(i,1,m) if(is[i]) printf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1588776215,
        "uid": 154787,
        "name": "Oxide",
        "ccfLevel": 0,
        "title": "\u6574\u4f53\u4e8c\u5206\u2014\u2014K\u5927\u6570\u67e5\u8be2"
    },
    {
        "content": "\u597d\u50cf\u6574\u4f53\u4e8c\u5206\u8dd1\u5f97\u98de\u5feb\uff0c\u4e0d\u8fc7\u849f\u84bb\u662f\u6765\u7ec3\u6811\u5957\u6811\u7684\u3002~~\u624d\u4e0d\u662f\u6211\u4e0d\u4f1a\u4efb\u4f55\u79bb\u7ebf\u7b97\u6cd5~~\n\n\u64cd\u4f5c\u6d89\u53ca\u533a\u95f4\u63d2\u5165\u3001\u533a\u95f4\u67e5\u8be2k\u5c0f\u503c\u3002\u5148\u60f3\u5230\u4e86\u6743\u503c\u7ebf\u6bb5\u6811\u5957\u5e73\u8861\u6811\uff0c\u5e73\u8861\u6811\u5b58\u50a8\u4f4d\u7f6e\u3002\n\n\u67e5\u8be2\u65f6\uff08\u5047\u8bbe\u67e5\u8be2\u533a\u95f4 $[l,r]$ \u7684\u7b2ck\u540d\uff09\u4ece\u6743\u503c\u7ebf\u6bb5\u6811\u6839\u8282\u70b9\u51fa\u53d1\uff0c\u67e5\u8be2\u53f3\u513f\u5b50\u5e73\u8861\u6811\u7684$r$\u7684\u6392\u540d-\uff08$l-1$\uff09\u7684\u6392\u540d\uff0c\u4e5f\u5c31\u662f\u53f3\u8fb9\u533a\u95f4\u4e2d\u5728\u533a\u95f4 $[l,r]$\u7684\u6570\u7684\u4e2a\u6570\uff0c\u6bd4$k$\u5c0f\uff0c\u5c31\u8ba9$k$\u51cf\u53bb\u5b83\uff0c\u8df3\u5230\u5de6\u513f\u5b50\u4e0a\uff1b\u53cd\u4e4b\u8df3\u5230\u53f3\u513f\u5b50\u4e0a\u3002\uff08\u6bd4\u8f83\u50cf\u4e3b\u5e2d\u6811\u533a\u95f4$k$\u5927\u503c\uff09\n\n\u63d2\u5165\u66b4\u529b\u5c06\u6bcf\u4e2a\u4f4d\u7f6e\u6328\u4e2a\u63d2\u5230\u5e73\u8861\u6811\u4e2d\u3002\n\n\u590d\u6742\u5ea6 $O(nlog^{2}n+len*log^{2}n)$ $\\text{\uff08len\u4e3a\u603b\u63d2\u5165\u6570\u5b57\u7684\u4e2a\u6570\uff09}$\n\n$T$\u4e86$10$\u4e2a\u70b9\u3002$len$\u975e\u5e38\u5927\u3002\u74f6\u9888\u5c31\u5728\u4e8e\u63d2\u5165\u3002\u4e00\u4e2a\u4e2a\u63d2\u5165\u786e\u5b9e\u592a\u6162\u4e86\uff0c\u6709\u6ca1\u6709\u4ec0\u4e48\u80fd\u5feb\u901f\u628a\u4e00\u6bb5\u8fde\u7eed\u533a\u95f4\u52a0\u8fdb\u53bb\uff1f\n\n\u7ebf\u6bb5\u6811\u53ef\u4ee5\u3002\u6743\u503c\u7ebf\u6bb5\u6811\u91cc\u5957\u4e00\u4e2a\u7ef4\u62a4\u4f4d\u7f6e\u7684\u7ebf\u6bb5\u6811\u3002\u63d2\u5165\u76f4\u63a5\u533a\u95f4\u52a0 $1$\uff0c\u67e5\u8be2\u533a\u95f4\u6c42\u548c\uff0c\u65f6\u95f4\u90fd\u662f$logn$\u7684\u3002\u4e3a\u4e86\u4fdd\u8bc1\u7a7a\u95f4\uff0c\u8fd8\u8981\u52a8\u6001\u5f00\u70b9\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u6bcf\u6b21\u63d2\u5165\u67e5\u8be2\u90fd\u8981\u8bbf\u95ee\u6743\u503c\u7ebf\u6bb5\u6811\u7684$logn$\u4e2a\u8282\u70b9\uff0c\u6bcf\u4e2a\u8282\u70b9\u8981\u8bbf\u95ee\u5185\u90e8\u7684\u7ebf\u6bb5\u6811\u7684$logn$\u4e2a\u8282\u70b9\u3002\u603b\u590d\u6742\u5ea6$O(nlog^{2}n)$\u3002\n\n\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\u6bcf\u6b21\u63d2\u5165\u90fd\u8981\u8bbf\u95ee\u6743\u503c\u7ebf\u6bb5\u6811\u7684$logn$\u4e2a\u8282\u70b9\uff0c\u6bcf\u4e2a\u8282\u70b9\u5185\u90e8\u7684\u7ebf\u6bb5\u6811\u6700\u591a\u4f1a\u65b0\u5f00$logn$\u4e2a\u8282\u70b9\uff0c\u603b\u590d\u6742\u5ea6$O(nlog^{2}n)$\u3002\n\n\u4e0d\u8fc7\u6bd5\u7adf\u6811\u5957\u6811\u5e38\u6570\u5927\uff0c\u5bb9\u6613 $T$ \u3002\u641e\u4e2a\u6807\u8bb0\u6c38\u4e45\u5316\u80fd\u4f18\u5316\u4e0d\u5c11\u3002\u4e0d\u8fc7\u849f\u84bb\u5e76\u4e0d\u4f1a\u5361\u5e38\uff0c\u7a0b\u5e8f\u81ea\u5e26\u5927\u5e38\u6570\uff08\u6bd4\u5982AC\u81ea\u52a8\u673a\u6c38\u8fdc\u8dd1\u4e0d\u8fdb $9000ms$\uff09\uff0c\u6807\u8bb0\u6c38\u4e45\u5316\u8fd8\u662f $T$ \u4e86\u4e00\u4e2a\u70b9\u3002\u52a0\u4e86$fread$\u3001\u5feb\u8f93\u624d\u80fd\u4e0d\u5f00$O2$\u8fc7\u3002\n\n\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n\n#define maxn 50005\n#define inf 0x3f3f3f\n#define pn putchar('\\n')\n#define px(x) putchar(x)\n#define ps putchar(' ')\n#define pd puts(\"======================\")\n#define pj puts(\"++++++++++++++++++++++\")\n#define getchar() (*head++)\n\nusing namespace std;\n\nchar buf[1<<23],*head=buf;//fread\u4f18\u5316\ninline int read(){\n    int x=0,y=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')y=1;ch=getchar();}\n    while(ch>='0'&&ch<='9')x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n    return y?-x:x;\n}\ntemplate<typename T>\ninline T read(){\n    T x=0;\n    int y=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')y=1;ch=getchar();}\n    while(ch>='0'&&ch<='9')x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n    return y?-x:x;\n}//\u5feb\u8bfb\nvoid put(int x){\n\tif(x<0)px('-')\uff0cx=-x;\n\tif(x>9)put(x/10);\n\tpx(x%10+48);\n}//\u5feb\u8f93\nint n;\n#define ls(x) ls[x]\n#define rs(x) rs[x]\nstruct Position_Segment_Tree{\n    long long dat[maxn*400];\n    int tag[maxn*400],ls[maxn*400],rs[maxn*400],cnt;\n    void add(int L,int R,int l,int r,int &node){\n        if(!node)node=++cnt;//\u52a8\u6001\u5f00\u70b9\n        dat[node]+=(long long)(min(R,r)-max(L,l)+1);//\u6807\u8bb0\u6c38\u4e45\u5316\n        if(L<=l&&R>=r){\n            ++tag[node];\n            return;\n        }\n        int mid=l+r>>1;\n        if(L<=mid)add(L,R,l,mid,ls(node));\n        if(R>mid)add(L,R,mid+1,r,rs(node));\n    }\n    long long ask(int L,int R,int l,int r,int node,long long t=0){\n        if(!node)return (long long)(min(R,r)-max(L,l)+1)*t;\n        if(L<=l&&R>=r)return dat[node]+1ll*(min(R,r)-max(L,l)+1)*t;\n        int mid=l+r>>1;\n        long long ans=0;\n        if(L<=mid)ans=ask(L,R,l,mid,ls(node),t+tag[node]);\n        if(R>mid)ans+=ask(L,R,mid+1,r,rs(node),t+tag[node]);\n        return ans;\n    }\n}pst;\n#undef ls\n#undef rs\n#define ls(x) (x<<1)\n#define rs(x) (x<<1|1)\nstruct Data_Segment_Tree{\n    int root[maxn<<3];\n    void insert(int poi,int L,int R){\n\t\tint l=-n,r=n,node=1;\n\t\twhile(1){\n\t\t\tpst.add(L,R,1,n,root[node]);\n\t\t\tif(l==r)return;\n\t\t\tint mid=l+r>>1;\n\t\t\tif(poi<=mid)node=ls(node),r=mid;\n\t\t\telse node=rs(node),l=mid+1;\n\t\t}\n    }//\u4e3a\u4e86\u5361\u5e38\u628a\u9012\u5f52\u6539\u6210\u4e86\u975e\u9012\u5f52\u7684\u3002\u4e0d\u8fc7\u597d\u50cf\u6ca1\u4ec0\u4e48\u6548\u679c\u3002\u3002\u3002\n    void ask(int L,int R,long long k){\n        int l=-n,r=n,node=1;\n        while(l<r){\n            int mid=l+r>>1;\n            long long sum=pst.ask(L,R,1,n,root[rs(node)]);\n            if(sum>=k)node=rs(node),l=mid+1;\n            else k-=sum,node=ls(node),r=mid;\n        }\n\t\tput(l),pn;\n    }\n}dst;\nint main(){\n\tfread(buf,1,1<<23,stdin);\n    n=read();\n    int m=read();\n    while(m--){\n        int s=read(),l=read(),r=read();\n        if(s==1){\n            int d=read();\n            dst.insert(d,l,r);\n        }\n        else {\n            long long k=read<long long>();\n            dst.ask(l,r,k);\n        }\n    }\n}\n\n```",
        "postTime": 1550283548,
        "uid": 111762,
        "name": "_ctz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3332 \u3010[ZJOI2013]K\u5927\u6570\u67e5\u8be2\u3011"
    },
    {
        "content": "\u5438\u6c27\u8fc7\u4e86\uff0c\u5b9e\u9645\u4e0a\u5361\u5361\u5e38\u5e94\u8be5\u8fd8\u662f\u53ef\u4ee5\u7684\u3002\u6bd4\u5982fread~~\u672c\u4eba\u4e0d\u4f1a~~\u3002\n\u90a3\u4e48\u8fd9\u4e2a\u9898\u5462\u5c31\u662f\u6743\u503c\u7ebf\u6bb5\u6811\u5957\u533a\u95f4\u7ebf\u6bb5\u6811\u3002\u5728\u6743\u503c\u7ebf\u6bb5\u6811\u4e0a\u8fdb\u884c\u4e8c\u5206\uff0c\u5728\u4e0d\u65ad\u5411\u4e0b\u8d70\u7684\u8fc7\u7a0b\u4e2d\uff0c\u518d\u5728\u533a\u95f4\u7ebf\u6bb5\u6811\u5bf9\u5e94\u533a\u95f4\u4e0a\u8fdb\u884c\u76f8\u5e94\u64cd\u4f5c\u3002\n\u672c\u4eba\u4f7f\u7528\u4e86\u6807\u8bb0\u6c38\u4e45\u5316\uff0c\u56e0\u4e3a\u5bf9\u6807\u8bb0\u4e0d\u65addown\u4f1a\u5f88\u6d6a\u8d39\u65f6\u95f4\uff0c\u6807\u8bb0\u6c38\u4e45\u5316\u4e5f\u662f\u5f88\u65b9\u4fbf\u3002\n```cpp\n// luogu-judger-enable-o2\n#include <iostream>\n#include <cstdio>\n#define uint unsigned int\nusing namespace std;\nconst int N = 50000;\nint n , m;\ninline int read()\n{\n    int x=0,f=1;char ch=getchar();\n    while (ch<'0' || ch>'9'){if (ch=='-')f=-1;ch=getchar();}\n    while ('0'<=ch && ch<='9'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n    return x*f;\n}\ninline uint in()\n{\n    uint x=0,f=1;char ch=getchar();\n    while (ch<'0' || ch>'9'){if (ch=='-')f=-1;ch=getchar();}\n    while ('0'<=ch && ch<='9'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n    return x*f;\n}\nstruct Segment_tree\n{\n\tstruct node\n\t{\n\t\tnode *ls , *rs , *tr;\n\t\tint l , r;\n\t\tuint sum , tag;\n\t\tnode (int l = 0,int r = 0) : l(l) , r(r) {ls = rs = tr = NULL , tag = 0 , sum = 0;}\n\t\tinline int len() {return r - l + 1;}\n\t\tinline int mid() {return (l + r) >> 1;}\n\t} *root , pool[12000000] , *tail;\n\tSegment_tree () {root = NULL;tail = pool;}\n\tvoid chenge(node *&p,int x,int y,int l,int r)\n\t{\n\t\tif(p == NULL)\tp = new (tail ++) node(l,r);\n\t\tp -> sum += min(r,y) - max(l,x) + 1;\n\t\tif(x <= p -> l && p -> r <= y)\treturn (void)(p -> tag ++);\n\t\tif(x <= p -> mid())\tchenge(p -> ls,x,y,l,p -> mid());\n\t\tif(y > p -> mid())\tchenge(p -> rs,x,y,p -> mid() + 1,r);\n\t}\n\tvoid build(node *&p,int l,int r)\n\t{\n\t\tp = new (tail ++) node(l,r);\n\t\tif(l == r)\treturn;\n\t\tbuild(p -> ls,l,p -> mid());\n\t\tbuild(p -> rs,p -> mid() + 1,r);\n\t}\n\tvoid insert(node *p,int x,int y,int c)\n\t{\n\t\tchenge(p -> tr,x,y,1,n);\n\t\tif(p -> l == p -> r)\treturn;\n\t\tif(c <= p -> mid())\tinsert(p -> ls,x,y,c);\n\t\telse insert(p -> rs,x,y,c);\n\t}\n\tuint query(node *p,int x,int y,int l,int r,int tag = 0)\n\t{\n\t\tif(p == NULL) return tag * (min(r,y) - max(l,x) + 1);\n\t\tif(x <= p -> l && p -> r <= y)\treturn tag * p -> len() + p -> sum;\n\t\tuint res = 0;\n\t\tif(x <= p -> mid())\tres += query(p -> ls,x,y,l,p -> mid(),tag + p -> tag);\n\t\tif(y > p -> mid())\t\tres += query(p -> rs,x,y,p -> mid() + 1,r,tag + p -> tag);\n\t\treturn res;\n\t}\n\tint kth(node *p,int x,int y,uint c)\n\t{\n\t\tif(p -> l == p -> r)\treturn p -> l;\n\t\tuint tmp = query(p -> rs -> tr,x,y,1,n);\n\t\tif(c <= tmp)\treturn kth(p -> rs,x,y,c);\n\t\telse return kth(p -> ls,x,y,c - tmp);\n\t}\n}cf;\nint main()\n{\n\tn = read(); m = read();\n\tuint c;\n\tcf.build(cf.root,-N,N);\n\tfor(int i = 1 , opt , l , r;i <= m;i ++)\n\t{\n\t\topt = read(); l = read(); r = read(); c = in();\n\t\tif(opt & 1)\tcf.insert(cf.root,l,r,(int)c);\n\t\telse printf(\"%d\\n\",cf.kth(cf.root,l,r,c));\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1568283391,
        "uid": 153898,
        "name": "Treaker",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3332 \u3010[ZJOI2013]K\u5927\u6570\u67e5\u8be2\u3011"
    },
    {
        "content": "# \u6d45\u663e\u6613\u61c2\u7684\u6574\u4f53\u4e8c\u5206\u505a\u6cd5\n\n\u9996\u5148\uff1a\n\n\u786e\u7acb\u53ef\u4ee5\u4e8c\u5206\uff1a\n\n\u7b2cK\u5927\u7684\u6570\u2014\u2014\u6807\u51c6\u4e8c\u5206\n\n\u6240\u4ee5\u5b9a\u4e49\u7ed3\u6784\u4f53\n\na,b,c\u2014\u2014\u5982\u9898\u610f\n\nid\u2014\u2014\u67e5\u8be2\u7f16\u53f7\n\ncur\u2014\u2014\u8d21\u732e\u503c\u6ce8\u610f\u5f00long long\n\n\n\n    \n```cpp\n    #include<iostream>\n    #include<cstdio>\n    using namespace std;\n    #define LL long long\n    #define f(i,a,b) for(int i=a;i<=b;i++)\n    int n,m,mid,l,r,len,i,j,cnt;\n    const int N=5e5 + 1;\n    LL ans[N],bit0[N],bit1[N];\n    struct data{\n      int a,b,id,c;//cur:contribution value   q_id:Q_number\n      LL cur;\n    };\n    data q[2*N],q1[2*N],q2[2*N];\n```\n###### ## Q:\u90a3\u4e48\u600e\u4e48\u89e3\u51b3\u533a\u95f4\u63d2\u5165\u5462\uff08\u4f4d\u7f6e\u64cd\u4f5c\uff09\n###### A:\u6811\u72b6\u6570\u7ec4\u533a\u95f4\u4fee\u6539\u533a\u95f4\u67e5\u8be2\n\n##### \u6811\u72b6\u6570\u7ec4\uff08\u6a21\u677f\uff09~~\u4e0d\u662f\u91cd\u70b9~~\n\n\n\n```cpp\n    void add(LL bit[],int x,int v){ \n      for(int i=x;i<=n;i+=(i&-i)) bit[i]+=v;\n    }\n    LL sum(LL bit[],int x){\n      LL ret=0;for(int i=x;i>0;i-=(i&-i))ret+=bit[i];return ret;\n    }\n    void add_area(int x,int y,int v){\n      add(bit0,x,-v*(x-1));\n      add(bit1,x,v);\n      add(bit0,y+1,v*y);\n      add(bit1,y+1,-v);\n    }\n    LL sum_area(int x,int y){\n      LL ret=0;\n      ret+=sum(bit0,y)+sum(bit1,y)*y;\n      ret-=(sum(bit0,x-1)+sum(bit1,x-1)*(x-1));\n      return ret;\n    }`\n```\n##### \u6574\u4f53\u4e8c\u5206\u90e8\u5206~~\u4e5f\u662f\u6a21\u677f~~\n\n\n\n    \n```cpp\n    void solve(int ql,int qr,int l,int mid){\n      f(i,ql,qr){\n        if(q[i].id){//find\n            q[i].cur=sum_area(q[i].a,q[i].b);\n        }else if (q[i].c<=mid){//change\n           add_area(q[i].a,q[i].b,q[i].cur);\n        }\n      }\n      f(i,ql,qr){\n        if(!q[i].id && q[i].c<=mid){\n           add_area(q[i].a,q[i].b,-q[i].cur);\n        }\n      }\n    }\n    void divide(int ql,int qr,int l,int r){\n      if(l==r){\n        f(i,ql,qr){\n          if(q[i].id){\n            ans[q[i].id]=l;\n            }\n          }\n        return;\n      }\n      int mid=(l+r)/2;\n      solve(ql,qr,l,mid);//solve__cur\n      int len1=0,len2=0;\n      f(i,ql,qr){\n        if(q[i].id){//find\n            if(q[i].c<=q[i].cur){\n              q1[++len1]=q[i];\n            }\n            else {\n              q[i].c-=q[i].cur;\n              q2[++len2]=q[i];\n            }\n        }\n        else{//change\n            if(q[i].c<=mid){\n                q1[++len1]=q[i];\n            }\n            else {\n                q2[++len2]=q[i];\n            }\n          }\n        }\n        f(i,1,len1) q[ql+i-1]=q1[i];\n        f(i,1,len2) q[ql+len1+i-1]=q2[i];\n        if(len1>0) divide(ql,ql+len1-1,l,mid);\n        if(len2>0) divide(ql+len1,qr,mid+1,r);\n    }\n```\n##### \u6620\u5c04\u91cd\u70b9\u6765\u4e86\uff0c\u8fd9\u9053\u9898\u662f\u7b2cC\u5927\u6570\n\u90a3\u4e48\u4e3a\u4ec0\u4e48\u4e0a\u9762\u7684\u4ee3\u7801\uff08\u7b2cC\u5c0f\uff09\u53ef\u4ee5\u8fc7\u5462\uff1f\u8fd9\u7528\u5230\u4e86**\u6620\u5c04**\n\n\n\n```cpp\n    int main(){\n      cin>>n>>m;\n     f(i,1,m){\n         int type,c;\n       scanf(\"%d%d%d%d\",&type,&q[i].a,&q[i].b,&c);\n       if(type==1){\n       q[i].c=n-c+1;q[i].id=0;q[i].cur=1;//\u7a0b\u5e8f\u7cbe\u534e\u6240\u5728\n       }\n       else{\n           q[i].c=c;q[i].id=++cnt;q[i].cur=0;\n       }\n     }\n      divide(1,m,1,2*n+1);\n      f(i,1,cnt){\n          printf(\"%d\\n\",n-ans[i]+1);//\u91cd\u65b0\u6620\u5c04\u56de\u53bb\n      }\n    }\n\n```",
        "postTime": 1512870460,
        "uid": 21275,
        "name": "gyfer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3332"
    },
    {
        "content": "# K\u5927\u6570\u67e5\u8be2\n## \u601d\u8def\n\u795e\u4ed9\u9898\u76ee\u3002\u3002\u3002\n\n\u8003\u8651\u6811\u5957\u6811\uff0c\u76f4\u63a5\u5916\u9762\u4e00\u5c42\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u91cc\u9762\u666e\u901a\u7ebf\u6bb5\u6811\uff0c\u4e00\u8d77\u7ef4\u62a4$[l,r]$\u8fd9\u6bb5\u503c\u57df\u5728\u539f\u5e8f\u5217\u4e2d\u6bcf\u4e2a\u533a\u95f4\u6709\u591a\u5c11\u4e2a\u6570\u3002\n\n\u7136\u540e\u5c31\u6ca1\u6709\u4e86\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\u3002\n## $\\text {Code}$\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define Int register int\n#define int long long\n#define MAXN 50005\n\nstruct node\n{\n\tint ls,rs,sum,lazy;\n}tree[MAXN << 8];\n\nint n,m,L,R,c;\nint rt[MAXN << 2];\n\n#define lson tree[i].ls\n#define rson tree[i].rs\n\nint query (int i,int l,int r)\n{\n\tif (l >= L && r <= R) return tree[i].sum;\n\tint mid = (l + r) >> 1,t1 = 0,t2 = 0;\n\tif (L <= mid) t1 = query (lson,l,mid);\n\tif (R > mid) t2 = query (rson,mid + 1,r);\n\treturn t1 + t2 + (min (r,R) - max (l,L) + 1) * tree[i].lazy;\n}\n\nint Segquery ()\n{\n\tint l = 1,r = n,i = 1;\n\tfor (;l ^ r;)\n\t{\n\t\tint mid = (l + r) >> 1,tmp;\n\t\tif ((tmp = query (rt[i << 1],1,n)) >= c) r = mid,i = i << 1;\n\t\telse l = mid + 1,c -= tmp,i = i << 1 | 1;\n\t}\n\treturn l;\n}\n\nint cur;\n\nvoid update (int &i,int l,int r)\n{\n\tif (!i) i = ++ cur;\n\tif (l >= L && r <= R) return tree[i].sum += r - l + 1,++ tree[i].lazy,void ();\n\tint mid = (l + r) >> 1;\n\tif (L <= mid) update (lson,l,mid);\n\tif (R > mid) update (rson,mid + 1,r);\n\ttree[i].sum = tree[lson].sum + tree[rson].sum + (r - l + 1) * tree[i].lazy; \n}\n\nvoid Change ()\n{\n\tint l = 1,r = n,i = 1;\n\tfor (;l ^ r;)\n\t{\n\t\tint mid = (l + r) >> 1;\n\t\tupdate (rt[i],1,n);\n\t\tif (c <= mid) r = mid,i = i << 1;\n\t\telse l = mid + 1,i = i << 1 | 1;\n\t}\n\tupdate (rt[i],1,n);\n}\n\nint read ()\n{\n\tint x = 0;char c = getchar();int f = 1;\n\twhile (c < '0' || c > '9'){if (c == '-') f = -f;c = getchar();}\n\twhile (c >= '0' && c <= '9'){x = (x << 3) + (x << 1) + c - '0';c = getchar();}\n\treturn x * f;\n}\n\nvoid write (int x)\n{\n\tif (x < 0){x = -x;putchar ('-');}\n\tif (x > 9) write (x / 10);\n\tputchar (x % 10 + '0');\n}\n\nsigned main()\n{\t\n\tn = read (),m = read ();\n\tfor (Int i = 1;i <= m;++ i)\n\t{\n\t\tint type = read ();\n\t\tif (type == 1)\n\t\t{\n\t\t\tL = read (),R = read (),c = n - read () + 1;\n\t\t\tChange ();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tL = read (),R = read (),c = read ();\n\t\t\twrite (n - Segquery () + 1),putchar ('\\n');\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1584708447,
        "uid": 124781,
        "name": "Walking_Dead",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3332 \u3010[ZJOI2013]K\u5927\u6570\u67e5\u8be2\u3011"
    },
    {
        "content": "#### [my blog](https://www.cnblogs.com/happyLittleRabbit/p/10392238.html)\n\n\n[\u9898\u76ee\u63cf\u8ff0](https://www.luogu.org/problemnew/show/P3332)\n\n#### \u6743\u503c\u7ebf\u6bb5\u6811\u5957\u7ebf\u6bb5\u6811\u677f\u5b50\u9898\n\n\u9996\u5148\u89c2\u5bdf\u9898\u76ee\uff0c\u5224\u65ad\u4e3a\u4e8c\u7ef4\u504f\u5e8f\u95ee\u9898\n\n\u64cd\u4f5c1\u4e3a\u533a\u95f4\u4fee\u6539\uff0c\u6240\u4ee5\u4e00\u5b9a\u662f\u5916\u90e8\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6743\u503c\uff0c\u5185\u90e8\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6240\u5728\u533a\u95f4\uff0c\u5426\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u7206\u70b8qwq\n\n\u4e3a\u65b9\u4fbf\u67e5\u627e\uff0c\u54c8\u5e0c\u65f6\u6211\u91c7\u7528\u54c8\u5e0c\u6bcf\u4e2a\u6570\u7684\u76f8\u53cd\u6570\u7684\u65b9\u6cd5\u5c06\u6c42\u7b2ck\u5927\u8f6c\u6362\u4e3a\u6c42\u7b2ck\u5c0f\n\n\u8be2\u95ee\u53ef\u4ee5\u76f4\u63a5\u60f3\u5230\u7684\u505a\u6cd5\u5c31\u662f\u4e8c\u5206\u7b54\u6848\uff0c\u67e5\u8be21~ans\u5728\u533a\u95f4\u5185\u7684\u4e2a\u6570\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 O(nlog^3n)\n\n\u5c1d\u8bd5\u53bb\u6389\u4e00\u4e2alog\uff0c\u601d\u8003\u53d1\u73b0\u53ef\u4ee5\u76f4\u63a5\u5728\u6743\u503c\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\uff0c\u6bcf\u6b21\u67e5\u8be2\u5de6\u5b50\u6811\u8868\u793a\u7684\u6570\u5728\u533a\u95f4\u5185\u7684\u4e2a\u6570p\uff0c\u82e5p\u5927\u4e8e\u7b49\u4e8e\u5f53\u524d\u67e5\u8be2\u7684\u7b2ck\u5c0f\u5219\u76f4\u63a5\u8fdb\u5165\u5de6\u5b50\u6811\uff0c\u5426\u5219\u8fdb\u5165\u53f3\u5b50\u6811\u5e76\u5c06k\u51cfp\u3002\u65f6\u95f4\u590d\u6742\u5ea6O(nlog^2n)\n\n\u5185\u90e8\u7ebf\u6bb5\u6811\u91c7\u7528\u52a8\u6001\u5f00\u70b9\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(nlog^2n) (n\u3001m\u540c\u9636)\n\n\u4f46\u662f\u6211\u7b2c\u4e00\u6b21\u5199\u7684\u6811\u5957\u6811\u8c8c\u4f3c\u5e38\u6570\u8fc7\u5927\uff0cT\u4e867\u4e2a\u70b9\uff0c\u4e8e\u662f\u53c8\u52a0\u4e0a\u4e86\u6807\u8bb0\u6c38\u4e45\u5316\uff0c\u7701\u53bb\u4e86\u6807\u8bb0\u4e0b\u653e\u7684\u65f6\u95f4\u548c\u4e0d\u5fc5\u8981\u7684\u7a7a\u95f4\u6d6a\u8d39\u3002\u533a\u95f4\u4fee\u6539\u65f6\u76f4\u63a5\u5728\u7ecf\u8fc7\u7684\u8282\u70b9\u4e0a\u4fee\u6539\u6743\u503c\u5e76\u5728\u539f\u5148\u6253\u6807\u8bb0\u7684\u8282\u70b9\u4e0a\u6253\u4e0a\u6c38\u4e45\u5316\u6807\u8bb0\uff0c\u67e5\u8be2\u662f\u5c06\u7ecf\u8fc7\u7684\u70b9\u7684\u6807\u8bb0\u90fd\u52a0\u8d77\u6765\u4e58\u533a\u95f4\u957f\u5ea6\u518d\u52a0\u4e0a\u8be2\u95ee\u533a\u95f4\u7684\u6743\u503c\u5373\u4e3a\u7b54\u6848\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u89c1\u4ee3\u7801\n\n```C++\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#define gc getchar\n#define re register\nusing namespace std;\ntemplate <typename T> void rd(T& s)\n{\n    s = 0;\n    bool p = 0;\n    char ch;\n    while (ch = gc(), p |= ch == '-', ch < '0' || ch > '9');\n    while (s = s * 10 + ch - '0', ch = gc(), ch >= '0' && ch <= '9');\n    s *= (p ? -1 : 1);\n}\ntemplate <typename T, typename... Args> void rd(T& s, Args&... args)\n{\n    rd(s);\n    rd(args...);\n}\nint cnt, tot;\n#define LL long long\n#define new_node(ls, rs, val) (st[++cnt] = node(ls, rs, val), cnt)\nconst int MAXN = 50050;\nconst int MAX = 50000000;\nstruct node\n{\n    int ls, rs;\n    LL val;\n    int tag;\n    node(int ls, int rs, LL val) : ls(ls), rs(rs), val(val), tag(0) {}\n    node() {}\n}st[MAX];\nstruct que\n{\n    int opt, a, b;\n    LL c;\n    que(int opt, int a, int b, LL c) : opt(opt), a(a), b(b), c(c) {}\n    que() {}\n}qu[MAXN];\nint n;\nLL hs[MAXN];\nint tree[MAXN << 2];\nvoid modify(int& o, re int l, re int r, re int ll, re int rr)\n{\n    if (!o)\n        o = new_node(0, 0, 0);\n    st[o].val += (r - l + 1);\n    if (l == ll && r == rr)\n    {\n        st[o].tag += 1;\n        return;\n    }\n    re int mid = (ll + rr) >> 1;\n    if (r <= mid)\n        modify(st[o].ls, l, r, ll, mid);\n    else\n        if (l > mid)\n            modify(st[o].rs, l, r, mid + 1, rr);\n        else\n            modify(st[o].ls, l, mid, ll, mid),\n            modify(st[o].rs, mid + 1, r, mid + 1, rr);\n}\nLL query(re int o, re int l, re int r, re int ll, re int rr, re int tag)\n{\n    if (!o)\n        return tag * 1ll * (r - l + 1);\n    if (l == ll && r == rr)\n        return st[o].val + tag * 1ll * (r - l + 1);\n    re int mid = (ll + rr) >> 1;\n    if (r <= mid)\n        return query(st[o].ls, l, r, ll, mid, tag + st[o].tag);\n    else\n        if (l > mid)\n            return query(st[o].rs, l, r, mid + 1, rr, tag + st[o].tag);\n        else\n            return query(st[o].ls, l, mid, ll, mid, tag + st[o].tag) + query(st[o].rs, mid + 1, r, mid + 1, rr, tag + st[o].tag);\n}\nvoid add(re int o, re int k, re int l, re int r, re int ll, re int rr)\n{\n    modify(tree[o], l, r, 1, n);\n    if (ll == rr)\n        return;\n    re int mid = (ll + rr) >> 1;\n    if (k <= mid)\n        add(o << 1, k, l, r, ll, mid);\n    else\n        add((o << 1) | 1, k, l, r, mid + 1, rr);\n}\nint midsearch(re int o, re int ll, re int rr, re int l, re int r, re int k)\n{\n    if (ll == rr)\n        return ll;\n    re LL p = query(tree[o << 1], l, r, 1, n, 0);\n    if (p >= k)\n        return midsearch(o << 1, ll, (ll + rr) >> 1, l, r, k);\n    else\n        return midsearch((o << 1) | 1, ((ll + rr) >> 1) + 1, rr, l, r, k - p);\n}\nint main()\n{\n    re int m = 0, opt, a, b;\n    re LL c;\n    rd(n, m);\n    for (re int i = 1; i <= m; ++i)\n    {\n        rd(opt, a, b);\n        rd(c);\n        qu[i] = que(opt, a, b, c);\n        if (opt == 1)\n            hs[++tot] = -c;\n    }\n    sort(hs + 1, hs + 1 + tot);\n    tot = unique(hs + 1, hs + 1 + tot) - hs - 1;\n    for (re int i = 1; i <= m; ++i)\n    {\n        if (qu[i].opt == 1)\n        {\n            add(1, lower_bound(hs + 1, hs + 1 + tot, -qu[i].c) - hs, qu[i].a, qu[i].b, 1, tot);\n        }\n        else\n        {\n            printf(\"%lld\\n\", -hs[midsearch(1, 1, tot, qu[i].a, qu[i].b, qu[i].c)]);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1558696394,
        "uid": 47707,
        "name": "\u0397ydra",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3332 \u3010[ZJOI2013]K\u5927\u6570\u67e5\u8be2\u3011"
    },
    {
        "content": "[\u6233\u6211\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8cqwq](https://www.goldenpotato.cn/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/luogu-p3332zjoi2013k%E5%A4%A7%E6%95%B0%E6%9F%A5%E8%AF%A2/)\n\n---\n# Solution\n\n\u8fd9\u662f\u4e00\u9053\u4e0d\u8fa3\u4e48\u6a21\u677f\u7684\u6574\u4f53\u4e8c\u5206\u9898\u3002\n\n.\n\n\u9996\u5148\uff0c\u6211\u4eec\u5148\u6765\u5047\u8bbe\u4e00\u4e0b\u53ea\u6709\u4e00\u4e2a\u8be2\u95ee\u5e94\u8be5\u600e\u4e48\u641e\u3002\n\n\u8003\u8651\u8fd9\u6837\u505a\uff1a\u6211\u4eec\u5148\u4e8c\u5206\u4e00\u4e2a\u7b54\u6848\uff0c\u4fee\u6539\u4e2d\uff0c\u5982\u679c\u6240\u8981\u4fee\u6539\u7684\u6570\u5927\u4e8emid\uff0c\u5219\u5728\u8fd9\u6bb5\u533a\n\u95f4\u4e2d\u6bcf\u4e2a\u6570\u52a0\u4e0a1\u3002\u5426\u5219\u4ec0\u4e48\u90fd\u4e0d\u505a\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u6700\u540e\u6211\u4eec\u53ea\u9700\u8981\u770b\u4e00\u4e0b\u8be2\u95ee\u7684\u533a\u95f4\u7684\n\u533a\u95f4\u548c\u662f\u5426\u5927\u4e8e$K$\u5373\u53ef\u3002\n\n.\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8003\u8651\u5982\u4f55\u628a\u6240\u6709\u8be2\u95ee\u4e00\u8d77\u6765\u4e8c\u5206\u3002\n\n\u540c\u6837\u8fd8\u662f\u4e8c\u5206\u4e00\u4e2a\u7b54\u6848\uff0c\u628a\u6240\u6709\u7b54\u6848\u5927\u4e8emid\u7684\u8be2\u95ee\u4e22\u5230\u53f3\u8fb9\uff0c\u5176\u4f59\u4e22\u5230\u5de6\u8fb9\u5373\u53ef\u3002\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u663e\u7136\u53d1\u73b0\u5bf9\u4e8e\u53f3\u8fb9\u7684\u533a\u95f4\uff0c**\u6240\u6709\u4fee\u6539$<=mid$\u7684\u4fee\u6539\u90fd\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8003\u8651\u628a\u6240\u6709$<=mid$\u7684\u4fee\u6539\u653e\u5728\u53f3\u8fb9\uff0c\u5176\u4f59\u7684\u653e\u5728\u5de6\u8fb9**\u3002\u663e\u7136\uff0c**\u5bf9\u4e8e\u5de6\u8fb9\u6240\u6709\u7684\u8be2\u95ee\uff0c$>=mid$\u7684\u4fee\u6539\u4e00\u5b9a\u4f1a\u5bf9\u5de6\u8fb9\u9020\u6210\u5f71\u54cd\uff0c\u56e0\u6b64\u8fd8\u8981\u628a\u6240\u6709\u5728\u5de6\u8fb9\u7684\u8be2\u95ee\u51cf\u4e0a\u5bf9\u5e94\u7684\u503c**\uff08\u5728\u8fd9\u4e2a\u8be2\u95ee\u4e4b\u524d\u6240\u6709\u7684\u64cd\u4f5c\u5bf9\u5b83\u4ea7\u751f\u76841\u7684\u6570\u91cf\uff09\u3002\n\n\u5bf9\u4e8e\u8be2\u95ee\u548c\u4fee\u6539\u7684\u987a\u5e8f\u95ee\u9898\uff1a\u6211\u4eec\u5206\u522b\u4fdd\u8bc1\u8be2\u95ee\u4e0e\u4fee\u6539\u6309\u7167\u65f6\u95f4\u6709\u5e8f\uff0c\u7528\u4e24\u4e2a\u6307\u9488\u5206\u5f00\u5904\u7406\uff0c\u6bcf\u6b21\u8be2\u95ee\u4e4b\u524d\u628a\u5728\u5b83\u4e4b\u524d\u7684\u4fee\u6539\u5168\u90e8\u505a\u4e86\u5373\u53ef\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u65f6\u95f4\u5408\u6cd5\u3002\n\n.\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(nlog^2n)$\n\n\u5c31\u9171\uff0c\u6211\u4eec\u53c8\u5207\u6389\u4e00\u9053\u9898\u5566(\uff89\u2267\u2200\u2266)\uff89\n\n---\n# Code\n**\u6570\u636e\u751f\u6210\u5668**\n\n[\u5728\u8fd9\u91cc](https://www.goldenpotato.cn/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/luogu-p3332zjoi2013k%E5%A4%A7%E6%95%B0%E6%9F%A5%E8%AF%A2/)\n\n**\u6b63\u89e3**\n```cpp\n//Luogu P3332 [ZJOI2013]K\u5927\u6570\u67e5\u8be2 \n//Mar,27th,2019\n//\u6574\u4f53\u4e8c\u5206+\u7ebf\u6bb5\u6811\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<vector>\n#include<cmath>\nusing namespace std;\nlong long read()\n{\n\tlong long x=0,f=1; char c=getchar();\n\twhile(!isdigit(c)){if(c=='-') f=-1;c=getchar();}\n\twhile(isdigit(c)){x=x*10+c-'0';c=getchar();}\n\treturn x*f;\n}\nconst int N=50000+100;\nstruct SegmentTree\n{\n\t#define lson (now<<1)\n\t#define rson (now<<1|1)\n\t#define mid ((now_l+now_r)>>1)\n\tlong long sum[N<<2];\n\tint lazy[N<<2];\n\tinline void update(int now)\n\t{\n\t\tsum[now]=sum[lson]+sum[rson];\n\t}\n\tinline void pushdown(int now,int now_l,int now_r)\n\t{\n\t\tif(now_l!=now_r)\n\t\t{\n\t\t\tsum[lson]+=lazy[now]*(mid-now_l+1),sum[rson]+=lazy[now]*(now_r-mid);\n\t\t\tlazy[lson]+=lazy[now],lazy[rson]+=lazy[now];\n\t\t}\n\t\tlazy[now]=0;\n\t}\n\tvoid Change(int l,int r,int w,int now,int now_l,int now_r)\n\t{\n\t\tpushdown(now,now_l,now_r);\n\t\tif(now_l>=l and now_r<=r)\n\t\t{\n\t\t\tlazy[now]=w,sum[now]+=1ll*w*(now_r-now_l+1);\n\t\t\treturn;\n\t\t}\n\t\tif(l<=mid) Change(l,r,w,lson,now_l,mid);\n\t\tif(r>mid) Change(l,r,w,rson,mid+1,now_r);\n\t\tupdate(now);\n\t}\n\tlong long Query(int l,int r,int now,int now_l,int now_r)\n\t{\n\t\tpushdown(now,now_l,now_r);\n\t\tif(now_l>=l and now_r<=r)\n\t\t\treturn sum[now];\n\t\tlong long t_ans=0;\n\t\tif(l<=mid) t_ans+=Query(l,r,lson,now_l,mid);\n\t\tif(r>mid) t_ans+=Query(l,r,rson,mid+1,now_r);\n\t\treturn t_ans;\n\t}\n\t#undef lson\n\t#undef rson\n\t#undef mid\n}sgt;\nstruct OP\n{\n\tint l,r,no;\n\tlong long w;\n}op1[N],op2[N];//op1:\u8be2\u95ee\uff0cop2:\u4fee\u6539\nstruct DL\n{\n\tint l,r;\n\tvector <OP> op,qur;\n}mqueue[2*N];\nint n,m,q,p,K=2*N-20;//q:\u8be2\u95ee\uff0cp:\u4fee\u6539\nint ans[N];\nint main()\n{\n\tfreopen(\"3332.in\",\"r\",stdin);\n\tfreopen(\"3332.out\",\"w\",stdout);\n\t\n\tn=read(),m=read();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint op=read();\n\t\tif(op==1)\n\t\t\top2[++p].l=read(),op2[p].r=read(),op2[p].w=read(),op2[p].no=i;\n\t\telse\n\t\t\top1[++q].l=read(),op1[q].r=read(),op1[q].w=read(),op1[q].no=i;\n\t}\n\t\n\tint front=0,tail=0;\n\tmqueue[tail].l=-N,mqueue[tail].r=N;\n\tfor(int i=1;i<=p;i++)\n\t\tmqueue[tail].op.push_back(op2[i]);\n\tfor(int i=1;i<=q;i++)\n\t\tmqueue[tail].qur.push_back(op1[i]);\n\ttail++;\n\tmemset(ans,0x3f,sizeof ans);\n\t\n\twhile(front!=tail)\n\t{\n\t\t//cerr<<front<<\" \"<<tail<<\" \"<<mqueue[front].l<<\" \"<<mqueue[front].r<<endl;\n\t\tif(mqueue[front].l==mqueue[front].r)\n\t\t{\n\t\t\tfor(int i=0;i<int(mqueue[front].qur.size());i++)\n\t\t\t\tans[mqueue[front].qur[i].no]=mqueue[front].l;\n\t\t}\n\t\telse if(mqueue[front].qur.size()>0)\n\t\t{\n\t\t\tint mid=int(floor((mqueue[front].l+mqueue[front].r)/2.0)),T=0;\n\t\t\tDL L,R;\n\t\t\tfor(int i=0;i<int(mqueue[front].qur.size());i++)\n\t\t\t{\n\t\t\t\tfor(;T<int(mqueue[front].op.size()) and mqueue[front].qur[i].no>mqueue[front].op[T].no;T++)\n\t\t\t\t{\n\t\t\t\t\tsgt.Change(mqueue[front].op[T].l,mqueue[front].op[T].r,mqueue[front].op[T].w>mid,1,1,n);\n\t\t\t\t\tif(mqueue[front].op[T].w>mid)\n\t\t\t\t\t\tR.op.push_back(mqueue[front].op[T]);\n\t\t\t\t\telse\n\t\t\t\t\t\tL.op.push_back(mqueue[front].op[T]);\n\t\t\t\t}\n\t\t\t\tlong long t=sgt.Query(mqueue[front].qur[i].l,mqueue[front].qur[i].r,1,1,n);\n\t\t\t\tif(t>=mqueue[front].qur[i].w)\n\t\t\t\t\tR.qur.push_back(mqueue[front].qur[i]);\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmqueue[front].qur[i].w-=t;\n\t\t\t\t\tL.qur.push_back(mqueue[front].qur[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i=0;i<T;i++)\n\t\t\t\tsgt.Change(mqueue[front].op[i].l,mqueue[front].op[i].r,-(mqueue[front].op[i].w>mid),1,1,n);\n\t\t\tL.l=mqueue[front].l,L.r=mid;\n\t\t\tR.l=mid+1,R.r=mqueue[front].r;\n\t\t\tmqueue[tail]=L,tail=(tail+1)%K;\n\t\t\tmqueue[tail]=R,tail=(tail+1)%K;\n\t\t}\n\t\tfront=(front+1)%K;\n\t}\n\t\n\tfor(int i=1;i<=m;i++)\n\t\tif(ans[i]!=0x3f3f3f3f)\n\t\t\tprintf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n\n```\n\n\n\n\n",
        "postTime": 1553673650,
        "uid": 52563,
        "name": "GoldenPotato137",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3332 \u3010[ZJOI2013]K\u5927\u6570\u67e5\u8be2\u3011"
    },
    {
        "content": "~~\u4eba\u50bb\u5e38\u6570\u5927\uff0c\u53ea\u80fd\u5404\u79cd\u4f18\u5316~~\n\n\u8fd9\u91cc\u4ecb\u7ecd\u6700\u57fa\u7840\u7684\u65b9\u6cd5\uff1a\u6743\u503c\u7ebf\u6bb5\u6811\u5957\u533a\u95f4\u7ebf\u6bb5\u6811\n\n# problem\n\n\u9898\u76ee\u7684\u610f\u601d\u662f\u6bcf\u4e2a\u70b9\u53ef\u4ee5\u770b\u505a\u4e00\u4e2a\u80cc\u5305\uff0c\u80cc\u5305\u91cc\u9762\u53ef\u4ee5\u653e\u4efb\u610f\u591a\u4e2a\u5143\u7d20\n\n\n\u7136\u540e\u6bcf\u6b21\u7ed9\u51fa\u64cd\u4f5c\uff1a\n\n>1.\u4e00\u4e2a\u533a\u95f4\u5185\u7684\u80cc\u5305\u653e\u5165\u5143\u7d20 x \n\n>2.\u67e5\u8be2\u4e00\u4e2a\u533a\u95f4\u5185\u6240\u6709\u80cc\u5305\u91cc\u9762\u7684\u5143\u7d20\u6392\u5e8f\u540e\u7b2c K \u5927\u7684\u5143\u7d20\n\n\n# noteskey\n\n\n\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\u53ef\u4ee5\u5efa n \u68f5\u7ebf\u6bb5\u6811\uff0c\u6bcf\u68f5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u79cd\u6743\u503c\n\n\u4f46\u662f\u8fd9\u6837\u5b58\u5728\u4e24\u4e2a\u95ee\u9898\uff1a\n\n\n1. n \u68f5\u7ebf\u6bb5\u6811\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u592a\u5927\u4e86\n\n> \u6211\u4eec\u8003\u8651\u52a8\u6001\u5f00\u70b9\u89e3\u51b3\uff0c\u4f46\u662f\u7a7a\u95f4\u590d\u6742\u5ea6\u4ecd\u7136\u5de8\u5927\uff0c\u4ecd\u9700\u8c28\u614e\u5730\u5361\u7a7a\u95f4\n\n2. \u9898\u76ee\u6c42\u7b2c K \u5927\u7684\u5143\u7d20\uff0c\u76f4\u63a5\u4ece\u6743\u503c\u6700\u5927\u7684\u7ebf\u6bb5\u6811\u5f00\u59cb\u627e\u590d\u6742\u5ea6\u4f1a\u70b8\n\n> \u6211\u4eec\u8003\u8651\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u81ea\u5e26\u7684\u4e8c\u5206\u529f\u80fd\u89e3\u51b3\n\n\n\u6743\u503c\u7ebf\u6bb5\u6811\u4e0d\u4f1a\uff1f\u51fa\u95e8\u5de6\u8f6c\n\n\u7ebf\u6bb5\u6811\u4e0d\u4f1a\uff1f~~\u60a8\u624d\u521a\u5165\u95e8 OI \u5c31\u6765\u505a\u6811\u5957\u6811\u554a~~\n\n\n# improve\n\n\n\u7136\u540e\u662f\u5404\u79cd\u5361\u5e38\n\n\n>1. \u6807\u8bb0\u6c38\u4e45\u5316\u5566...\n\n>2. \u5c11\u7528 long long \u5566...\n\n>3. \u6570\u7ec4\u5f00\u5c0f\u4e00\u70b9\u5566...\n\n\n\u7b2c\u4e09\u4e2a\u5f97\u62ff\u634f\u5206\u5bf8\u7684...QWQ\n\n# code\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u5f00\u59cb\u6572\u4ee3\u7801\u4e86\n\n\n\uff08\u987a\u4fbf\u63d2\u4e00\u53e5\uff0c\u672c\u6765\u60f3\u7528 BIT \u4f18\u5316\u65f6\u95f4\u7684\uff09\n\n\n\u672c\u6765\u6ca1\u538b\u884c\u662f 60 \u884c\u7684...\n\n\n\u4e3a\u4e86\u4e0d\u5f71\u54cd\u9605\u8bfb\u4f53\u9a8c\u624b\u52a8\u683c\u5f0f\u5316\u4e86\uff08\u81ea\u52a8\u683c\u5f0f\u5316\u6bd4\u8f83\u65e0\u8111\uff09\n\n```\n//by Judge\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#define fp(i,a,b) for(int i=(a),I=(b)+1;i<I;++i)\n#define fd(i,a,b) for(int i=(a),I=(b)-1;i>I;--i)\n#define uint unsigned int\n#define ll long long\nusing namespace std;\nconst int M=5e4+3;\nconst int N=M<<8|3;\ntypedef int arr[M];\n#ifndef Judge\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n#endif\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline int Min(int a,int b){return a<b?a:b;}\ninline int Max(int a,int b){return a>b?a:b;}\ninline ll read(){ ll x=0,f=1; char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0'; return x*f;\n} char sr[1<<21],z[20];int C=-1,Z;\ninline void Ot(){fwrite(sr,1,C+1,stdout),C=-1;}\ninline void print(ll x,char chr='\\n'){\n    if(C>1<<20)Ot();if(x<0)sr[++C]=45,x=-x;\n    while(z[++Z]=x%10+48,x/=10);\n    while(sr[++C]=z[Z],--Z);sr[++C]=chr;\n} int n,m,node,tot,b[M],rt[M<<2]; uint tag[N],siz[N];\nstruct node{int l,r;}t[N];\nstruct que{ int op,l,r; ll k; }q[M];\n#define ls k<<1\n#define rs k<<1|1\n#define mid (l+r>>1)\n#define lson ls,l,mid\n#define rson rs,mid+1,r\ninline int len(int a,int b,int l,int r){\n\treturn Min(b,r)-Max(a,l)+1;\n}\nvoid update(int& k,int l,int r,int L,int R){\n\tif(!k) k=++node; siz[k]+=len(L,R,l,r);\n\tif(L<=l&&r<=R) return ++tag[k],void();\n\tif(L<=mid) update(t[k].l,l,mid,L,R);\n\tif(R>mid) update(t[k].r,mid+1,r,L,R);\n}\nll get_sum(int k,int l,int r,int L,int R){ int ans=0;\n\tif(!k) return 0; if(L<=l&&r<=R) return siz[k];\n\tans+=L<=mid?get_sum(t[k].l,l,mid,L,R):0;\n\tans+=R>mid?get_sum(t[k].r,mid+1,r,L,R):0;\n\treturn ans+len(L,R,l,r)*tag[k];\n}\nvoid update(int k,int l,int r,int L,int R,ll K){\n\tupdate(rt[k],1,n,L,R); if(l==r) return ;\n\tif(K<=mid) update(lson,L,R,K);\n\telse update(rson,L,R,K);\n}\nll query(int k,int l,int r,int L,int R,ll K){\n\tif(l==r) return b[l];\n\tll tt=get_sum(rt[rs],1,n,L,R);\n\tif(tt<K) return query(lson,L,R,K);\n\telse return query(rson,L,R,K);\n}\nint main(){ n=read(),m=read();\n\tfp(i,1,m) { q[i].op=read(),\n\t\tq[i].l=read(),q[i].r=read(),q[i].k=read();\n\t\tif(q[i].op&1) b[++tot]=q[i].k;\n\t}\n\tsort(b,b+1+tot),\n\ttot=unique(b+1,b+1+tot)-b;\n\tfp(i,1,m) if(q[i].op&1)\n\t\tq[i].k=lower_bound(b+1,b+tot,q[i].k)-b;\n\tfp(i,1,m)\n\t\tif(q[i].op&1) update(1,1,tot,q[i].l,q[i].r,q[i].k);\n\t\telse if(q[i].op&2) print(query(1,1,tot,q[i].l,q[i].r,q[i].k));\n\treturn Ot(),0;\n}\n```\n\n\n\n\n\n",
        "postTime": 1553236494,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3332 \u3010[ZJOI2013]K\u5927\u6570\u67e5\u8be2\u3011"
    },
    {
        "content": "\u7a7f\u68ad\u5728\u832b\u832b\u7684\u6811\u5957\u6811\u6d77\u6d0b\u4e2d\uff0c\u849f\u84bb\u6df1\u6df1\u5730\u611f\u89c9\u5230\u4e86\u81ea\u5df1\u7684\u83dc\u3002\u5404\u4f4d\u5927\u4f6c\u4e0d\u662f\u6574\u4f53\u4e8c\u5206\u5c31\u662f\u7ebf\u6bb5\u6811\u3001\u5e73\u8861\u6811\u4e71\u5957\uff0c\u6211\u53ea\u770b\u5f97\u773c\u82b1\u7f2d\u4e71\u3002\u4e8e\u662f\uff0c\u5c31\u53ea\u597d\u5f00\u59cb\u778e\u641e\uff0c\u6211\u91c7\u7528\u7684\u65b9\u6cd5\u662f\uff1acdq\u5206\u6cbb+\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u533a\u95f4\u7b2cc\u5927\u7684\u503c\uff0c2368msAC\uff0c\u8fd8\u662f\u6bd4\u8f83\u5feb\u7684\u3002\n\u4e0b\u9762\u5c31\u6765\u770b\u4e00\u770b\u4e00\u679d\u72ec\u79c0\u7684\u4f18\uff08zha\uff09\u79c0\uff08zha\uff09\u4ee3\u7801\uff1a\n```\n#include<iostream>\n#include<vector> //\u52a8\u6001\u6570\u7ec4\uff08\u5206\u6cbb\u7528\uff09\nusing namespace std;\nstruct op\n{\n long long l,r;\n long long k;\n bool isquery;\n long long qid;\n}; //\u5206\u6cbb\u7528\u7ed3\u6784\u4f53\nlong long n,m,ty;\nlong long ans[50005],a[50005],a2[50005];\nvoid add_bit(int k,int d)\n{\n while(k<=n)\n {\n  a[k]+=d;\n  k+=k&-k;\n }\n}\nvoid add_bit2(int k,int d)\n{\n while(k<=n)\n {\n  a2[k]+=d;\n  k+=k&-k;\n } \n}\nvoid add(int l,int r,int d) //\u8d85\u7ea7\u6811\u72b6\u6570\u7ec4\u5355\u70b9\u4fee\u6539\n{\n add_bit(l,d);\n add_bit(r+1,-d);\n add_bit2(l,d*l);\n add_bit2(r+1,-d*(r+1));\n}\nlong long sum_bit(int i)\n{\n int s=0;\n while(i>0)\n {\n  s+=a[i];\n  i-=i&-i;\n }\n return s;\n}\nlong long sum_bit2(int i)\n{\n int s=0;\n while(i>0)\n {\n  s+=a2[i];\n  i-=i&-i;\n }\n return s;\n}\nlong long sum(int k) //\u8d85\u7ea7\u6811\u72b6\u6570\u7ec4\u533a\u95f4\u548c\u67e5\u8be2\n{\n return(sum_bit(k))*(k+1)-sum_bit2(k);\n}\nvoid solve(int lb,int ub,vector<op> &q) //cdq\u5206\u6cbb \n{ //\u601d\u8def\u4e0equicksort\u7c7b\u4f3c\uff0c\u5148\u5206\u518d\u6cbb\n vector<op> left;\n vector<op> right;\n if(ub-lb==1)\n {\n  for(int i=0; i<q.size(); i++)\n    if(q[i].isquery) ans[q[i].qid]=lb;\n  return;\n }\n int t=(ub+lb)/2;\n for(int i=0; i<q.size(); i++)\n   if(q[i].isquery)\n   {\n    long long count=sum(q[i].r)-sum(q[i].l-1);\n    if(q[i].k>count) \n    {\n     q[i].k-=count;\t\n     left.push_back(q[i]);\t\n    }\n    else right.push_back(q[i]);  \n   }\n   else if(q[i].k<t) left.push_back(q[i]);\n          else \n          {\n           right.push_back(q[i]);\n           add(q[i].l,q[i].r,1);\n          }\n for(int i=0; i<q.size(); i++)\n   if(!q[i].isquery&&q[i].k>=t) add(q[i].l,q[i].r,-1);\n solve(lb,t,left); //\u533a\u95f4\u5de6\u95ed\u53f3\u5f00 \n solve(t,ub,right);  \n}\nint main()\n{\n cin>>n>>m;\n vector<op> q(m);\n int qid=0;\n for(int i=0; i<m; i++)\n {\n  cin>>ty>>q[i].l>>q[i].r>>q[i].k;\n  q[i].isquery=(ty==2);\n  if(ty==2)\n  {\n   qid++;\n   q[i].qid=qid;\n  }\n }\n solve(-50000,50001,q); //cdq\u5206\u6cbb\u6c42\u89e3\n for(int i=0; i<q.size(); i++) \n   if(q[i].isquery) cout<<ans[q[i].qid]<<endl; //\u8f93\u51fa\n return 0;\n} //\u5e0c\u671b\u5bf9\u5927\u5bb6\u6709\u5e2e\u52a9\n```",
        "postTime": 1518964872,
        "uid": 9156,
        "name": "\u5fae\u96e8\u71d5\u53cc\u98de",
        "ccfLevel": 0,
        "title": "p3332\u9898\u89e3"
    },
    {
        "content": "\u7b2c\u4e09\u6b21\u63d0\u4ea4\u4e86\uff0c\u524d\u9762\u90fd\u6709\u4e00\u4e9b\u9519\u8bef\uff0c\u5982\u679c\u524d\u9762\u5408\u683c\u4e86\uff0c\u8fd9\u4e00\u6b21\u76f4\u63a5\u8ba9\u8fc7\u5427\u3002\n\n[my blog](https://www.cnblogs.com/hht2005/p/11421235.html)\n\n# \u9898\u76ee\u5927\u610f\n\n\u91cd\u65b0\u8bb2\u4e00\u4e0b\u542b\u7cca\u4e0d\u6e05\u7684\u9898\u610f\uff1a\n\n\u6709n\u4e2a\u53ef\u91cd\u96c6\u5408\uff0c\u6709m\u4e2a\u64cd\u4f5c\uff0c\u64cd\u4f5c\u5206\u4e3a\u4e24\u79cd\uff1a\n* 1 l r c \u7ed9\u7b2cl\u5230\u7b2cr\u4e2a\u53ef\u91cd\u96c6\u5408\u90fd\u52a0\u5165\u4e00\u4e2a\u6570c\u3002\n* 2 l r c \u8be2\u95ee\u7b2cl\u5230\u7b2cr\u4e2a\u53ef\u91cd\u96c6\u5408\u7b2cc\u5927\u7684\u6570\u662f\u591a\u5c11\u3002\n\n$n\\le 50000,m\\le 50000,1\\le l\\le r\\le n$\uff0c1\u4e2d\u7684$|c|\\le n$\uff0c2\u4e2d\u7684$c\\le long\\space long$\n# sol\n## \u66b4\u529b\n\u7ed9\u6bcf\u4e00\u4e2a\u70b9\u5f00\u4e00\u4e2a`vector`\u66b4\u529b\u63d2\u5165\uff0c\u8be2\u95ee\u65f6\u5c06l\u5230r\u7684\u6570\u66b4\u529b\u6392\u4e00\u4e2a\u5e8f\u3002\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$\\Theta(n^3\\log n)$\u3002\n\n\u57fa\u4e8e\u66b4\u529b\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u6811\u5957\u6811\u6765\u505a\u3002\n## \u4e8c\u5206\n\u5bf9\u4e0e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u6211\u4eec\u53ef\u4ee5\u5728-n\u5230n\u4e4b\u95f4\u4e8c\u5206\uff0c\u4e8c\u5206\u51fa\u4e00\u4e2amid\u540e\uff0c\u6211\u4eec\u66b4\u529b\u626b\u4e00\u904d\u6240\u6709\u5728\u5b83\u4e4b\u524d\u7684\u63d2\u5165\uff0c\u7edf\u8ba1\u51fal\u5230r\u4e2d\u6709\u591a\u5c11\u4e2a\u6570\u5927\u4e8emid\uff0c\u5982\u679c\u5927\u4e8emid\u7684\u6570\u5927\u4e8ec\uff0c\u8bf4\u660e\u6211\u4eec\u4e8c\u5206\u5c0f\u4e86\uff0c\u53cd\u4e4b\u8bf4\u660e\u6211\u4eec\u4e8c\u5206\u5927\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$\\Theta(n^2\\log n)$\n\n## \u6574\u4f53\u4e8c\u5206\n\u6574\u4f53\u4e8c\u5206\u987e\u540d\u601d\u4e49\u5c31\u662f\u6240\u6709\u7684\u8be2\u95ee\u4e00\u8d77\u4e8c\u5206\u3002\u5176\u5b9e\u5728\u5355\u6b21\u4e8c\u5206\u65f6\uff0c\u6211\u4eec\u5f97\u51fa\u4e86\u5f88\u591a\u6709\u7528\u4fe1\u606f\uff0c\u5bf9\u4e4b\u540e\u7684\u8be2\u95ee\u4f9d\u7136\u6709\u7528\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u628a\u6240\u6709\u8be2\u95ee\u4e00\u8d77\u4e8c\u5206\u3002\n\n\u4e8c\u5206\u601d\u8def\u5c31\u5728\u4e0a\u9762\u3002\u4e0b\u9762\u8bb2\u4e00\u4e9b\u4e0d\u4e00\u6837\u7684\u5730\u65b9\u3002\n\n\u6211\u4eec\u5148\u65b0\u5f00\u51fa\u4e00\u4e2a\u533a\u95f4\u548c\u4e24\u4e2a\u6570\u7ec4\uff0c\u7b2c\u4e00\u4e2a\u6570\u7ec4\u5b58\u8981\u5411\u5c0f\u4e8c\u5206\u7684\u64cd\u4f5c\uff0c\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u5b58\u8981\u5411\u5927\u4e8c\u5206\u7684\u64cd\u4f5c\u3002\n\n\u5728\u6574\u4f53\u4e8c\u5206\u65f6\uff0c\u6211\u4eec\u4e8c\u5206\u51fa\u4e86\u4e00\u4e2amid\uff0c\u4f9d\u6b21\u626b\u8fc7\u6bcf\u4e00\u4e2a\u64cd\u4f5c\uff1a\n1. \u63d2\u5165\uff0c\u8ba8\u8bba\u5b83\u7684c\u503c\uff0c\u5982\u679c\u5927\u4e8emid\uff0c\u5c31\u5728\u65b0\u533a\u95f4\u7684l\u5230r\u52a0\u4e00\uff0c\u628a\u5b83\u6254\u5230\u7b2c\u4e8c\u4e2a\u6570\u7ec4\uff0c\u5426\u5219\u6254\u5230\u7b2c\u4e00\u4e2a\u6570\u7ec4\u3002\n2. \u67e5\u8be2\uff0c\u4ee4num\u7b49\u4e8e\u65b0\u533a\u95f4l\u5230r\u7684\u503c\u4e4b\u548c\uff0c\u5219num\u5c31\u7b49\u4e8el\u5230r\u5927\u4e8emid\u7684\u6570\u7684\u4e2a\u6570\u3002\u5982\u679cnum\u5c0f\u4e8ec\uff0c\u5219c-=num\uff0c\u628a\u64cd\u4f5c\u6254\u5230\u7b2c\u4e00\u4e2a\u6570\u7ec4\u91cc\uff0c\u5426\u5219\u6254\u5230\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u3002\n\n\u6700\u540e\uff0c\u9012\u5f52\u5904\u7406\u4e24\u4e2a\u6570\u7ec4\u3002\n\n\u8bc1\u660e\u4e00\u4e0b\u8fd9\u6837\u505a\u7684\u6b63\u786e\u6027\uff1a\n\n\u67e5\u8be2\u65f6\uff0c\u5982\u679cc\u5927\u4e8enum\uff0c\u90a3\u4e48\u5bf9num\u4ea7\u751f\u8d21\u732e\u7684\u63d2\u5165\u90fd\u4f1a\u548c\u5b83\u5230\u4e0d\u540c\u7684\u6570\u7ec4\u4e2d\uff0c\u4ee5\u540e\u4e0d\u4f1a\u518d\u4ea7\u751f\u8d21\u732e\u3002\u4f46\u7531\u4e8e\u6211\u4eec\u5f80\u5c0f\u4e8c\u5206\uff0c\u90a3\u4e9b\u63d2\u5165\u5b9e\u9645\u4e0a\u662f\u4f1a\u5bf9\u5b83\u4ea7\u751f\u8d21\u732e\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u5c31\u8981\u628a\u8d21\u732e\u8bb0\u4e0b\u6765\uff0c\u5b9e\u9645\u64cd\u4f5c\u5c31\u662f\u51cf\u53bbnum\u3002\u5982\u679cc\u5c0f\u4e8enum\uff0c\u90a3\u4e48\u5bf9num\u4ea7\u751f\u8d21\u732e\u7684\u63d2\u5165\u90fd\u4f1a\u548c\u5b83\u5230\u76f8\u540c\u7684\u6570\u7ec4\u4e2d\uff0c\u6ca1\u6709\u95ee\u9898\u3002\n\n\u63d2\u5165\u64cd\u4f5c\u5176\u5b9e\u662f\u968f\u7740\u67e5\u8be2\u64cd\u4f5c\u6765\u7684\uff0c\u67e5\u8be2\u6ca1\u9519\u5b83\u5c31\u6ca1\u9519\u3002\n\n\u5bf9\u4e8e\u65b0\u533a\u95f4\u7684\u533a\u95f4\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\uff0c\u6811\u72b6\u6570\u7ec4\u6216\u7ebf\u6bb5\u6811\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$\\Theta(n\\log^2 n)$\n\n\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\u548c\u4f18\u5316\u90fd\u5728\u4ee3\u7801\u6ce8\u91ca\u91cc\u3002\n\n**code:**\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int maxn=50010;\nint n,m;\nll ans[maxn];\nstruct BIT {//\u6811\u72b6\u6570\u7ec4\n\tll c[maxn];\n\tinline void add(int x,int y) {\n\t\tfor(int i=x; i<=n; i+=i&-i)c[i]+=y;\n\t}\n\tinline ll sum(int x) {\n\t\tll ans=0;\n\t\tfor(int i=x; i; i-=i&-i)ans+=c[i];\n\t\treturn ans;\n\t}\n} a,b,c;\nstruct node {//\u64cd\u4f5c\u7684\u7ed3\u6784\u4f53\n\tint tp,l,r,id;\n\tll c;\n} q[maxn],tem1[maxn],tem2[maxn];//tem\u4e3a\u4e24\u65b0\u6570\u7ec4\nvoid solve(int x,int y,int l,int r) {//\u6574\u4f53\u4e8c\u5206\n\tif(l==r) {//\u627e\u5230\u7b54\u6848\n\t\tfor(int i=x; i<=y; i++)\n\t\t\tans[q[i].id]=l;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1,cnt1=0,cnt2=0;\n\tfor(int i=x; i<=y; i++)\n\t\tif(q[i].tp==2) {//\u67e5\u8be2\n\t\t\tll num=q[i].r*a.sum(q[i].r)-b.sum(q[i].r)-(q[i].l-1)*a.sum(q[i].l-1)+b.sum(q[i].l-1);\n\t\t\tif(num<q[i].c) {\n\t\t\t\tq[i].c-=num;\n\t\t\t\ttem1[++cnt1]=q[i];\n\t\t\t} else tem2[++cnt2]=q[i];\n\t\t} else {//\u63d2\u5165\n\t\t\tif(q[i].c>mid) {\n\t\t\t\ta.add(q[i].l,1),a.add(q[i].r+1,-1);\n\t\t\t\tb.add(q[i].l,q[i].l-1),b.add(q[i].r+1,-q[i].r);\n\t\t\t\ttem2[++cnt2]=q[i];\n\t\t\t} else tem1[++cnt1]=q[i];\n\t\t}\n\tfor(int i=x; i<=y; i++)//\u6e05\u7a7a\u6811\u72b6\u6570\u7ec4\uff0c\u4e0d\u80fd\u7528memset\uff0c\u5426\u5219\u65f6\u95f4\u4f1a\u7206\u70b8\n\t\tif(q[i].tp==1&&q[i].c>mid) {\n\t\t\ta.add(q[i].l,-1),a.add(q[i].r+1,1);//\u7167\u6837\u51cf\u56de\u53bb\n\t\t\tb.add(q[i].l,-q[i].l+1),b.add(q[i].r+1,q[i].r);\n\t\t}\n\tfor(int i=1; i<=cnt1; i++)q[x+i-1]=tem1[i];//\u6eda\u52a8\u4e00\u4e0b\u4f18\u5316\u7a7a\u95f4\n\tfor(int i=1; i<=cnt2; i++)q[x+cnt1+i-1]=tem2[i];\n\tif(cnt1)solve(x,x+cnt1-1,l,mid);//\u5206\u522b\u53bb\u4e8c\u5206\n\tif(cnt2)solve(x+cnt1,y,mid+1,r);\n}\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\tint Q=0;\n\tfor(int i=1; i<=m; i++) {\n\t\tscanf(\"%d%d%d%lld\",&q[i].tp,&q[i].l,&q[i].r,&q[i].c);\n\t\tif(q[i].tp==2)q[i].id=++Q;\n\t}\n\tsolve(1,m,-n,n);\n\tfor(int i=1; i<=Q; i++)\n\t\tprintf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n```\n# \u603b\u7ed3\n\u6574\u4f53\u4e8c\u5206\u4e0d\u80fd\u5728\u7ebf\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5176\u5b9e\u548c\u6811\u5957\u6811\u4e00\u6837\u3002\u4f46\u5b83\u4ee3\u7801\u77ed\uff0c\u5e38\u6570\u5c0f\uff0c\u8fd8\u662f\u633a\u6709\u7528\u7684\u4e00\u4e2a\u7b97\u6cd5\u3002",
        "postTime": 1566916329,
        "uid": 151722,
        "name": "hht2005",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3332 \u3010[ZJOI2013]K\u5927\u6570\u67e5\u8be2\u3011"
    },
    {
        "content": "\u6743\u503c\u7ebf\u6bb5\u6811\u5957\u533a\u95f4\u7ebf\u6bb5\u6811,\u6bcf\u6b21\u4e8c\u5206\u6743\u503c\u7136\u540e\u53bb\u5bf9\u5e94\u7684\u533a\u95f4\u91cc\u67e5\u8be2\u6216\u8005\u4fee\u6539\u5c31\u597d\u4e86\u3002\u5177\u4f53\u4e00\u70b9\u8bb2,\u7ebf\u6bb5\u6811\u91cc\u6bcf\u4e2a\u8282\u70b9\u5b58\u7684\u662f\u6743\u503c\u5728a-b \u5728\u533a\u95f4l-r\u4e0a\u7684\u70b9\u7684\u4e2a\u6570\n\u53ef\u80fd\u6211\u592a\u83dc\u4e86\u3002\u3002\u3002\u88f8\u7684\u7ebf\u6bb5\u6811\u5957\u7ebf\u6bb5\u6811\u6211T\u4e09\u4e2a\u70b9\u3002\u3002\u3002\u52a0\u4e86\u4e2a\u6807\u8bb0\u6c38\u4e45\u5316\u3002\u3002\u3002\u5f31\u5c0f.jpg\n``` c++\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define rep(i,x,y) for(register int i=x;i<=y;++i)\n#define repd(i,x,y) for(register int i=x;i>=y;--i)\n#define ll long long\nusing namespace std;\nconst int N=5e4+7;\nconst int M=N*400;\nll tr[M],lz[M],C[N],n,m,cnt,rk[N];\nint ls[M],rs[M],root[N<<2],A[N],B[N],op[N],len,ct;\ntemplate <typename T>inline void read(T &x){\n\tx=0;char c;int sign=1;\n\tdo{c=getchar(); if(c=='-')sign=-1;}while(c<'0'||c>'9');\n\tdo{x=x*10+c-'0';c=getchar();}while(c>='0'&&c<='9');\n\tx*=sign;\n}\ninline void update(int &o,int l,int r,int L,int R){\n    if(!o)o=++cnt;\n    tr[o]+=min(r,R)-max(l,L)+1;\n    if(L<=l&&R>=r){lz[o]++;return ;}\n    int mid=l+r>>1;\n    if(L<=mid)update(ls[o],l,mid,L,R);\n    if(R>mid)update(rs[o],mid+1,r,L,R);\n}\ninline void UPDATE(int a,int b,int c){\n    int l=1,r=len,k=1;\n    while(l<r){\n        int mid=l+r>>1;\n        update(root[k],1,n,a,b);\n        if(c<=mid)k<<=1,r=mid;\n        else k=k<<1|1,l=mid+1;\n    }\n    update(root[k],1,n,a,b);\n}\ninline ll query(int o,int l,int r,int L,int R){\n    if(!o)return 0;\n    if(L<=l&&R>=r)return tr[o];\n    int mid=l+r>>1;ll ans=lz[o]*(min(r,R)-max(L,l)+1);\n    if(L<=mid)ans+=query(ls[o],l,mid,L,R);\n    if(R>mid)ans+=query(rs[o],mid+1,r,L,R);\n    return ans;\n}\ninline int QUERY(int a,int b,int c){\n    int l=1,r=len,k=1;\n    while(l<r){\n        int mid=l+r>>1;ll t=query(root[k<<1],1,n,a,b);\n        if(c<=t)r=mid,k<<=1;\n        else l=mid+1,k=k<<1|1,c-=t;\n    }\n    return l;\n}\nint main(){\n    read(n);read(m);\n\trep(i,1,m){read(op[i]);read(A[i]);read(B[i]);read(C[i]);if(op[i]==1)rk[++ct]=C[i];}\n    sort(rk+1,rk+ct+1);\n    len=unique(rk+1,rk+ct+1)-rk-1;\n    rep(i,1,m)if(op[i]==1)C[i]=lower_bound(rk+1,rk+len+1,C[i])-rk;\n    rep(i,1,m){\n        if(op[i]==1){UPDATE(A[i],B[i],len-C[i]+1);}\n        else printf(\"%d\\n\",rk[len-QUERY(A[i],B[i],C[i])+1]);\n    }\n    return 0;\n}\n```",
        "postTime": 1524748790,
        "uid": 46982,
        "name": "Angora",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3332 \u3010[ZJOI2013]K\u5927\u6570\u67e5\u8be2\u3011"
    },
    {
        "content": "\u601d\u8def{\n\n \n\u5927\u610f:\u6709N\u4e2a\u4f4d\u7f6e\uff0cM\u4e2a\u64cd\u4f5c\u3002\u64cd\u4f5c\u6709\u4e24\u79cd\uff0c\u6bcf\u6b21\u64cd\u4f5c\u5982\u679c\u662f1\n\na b c\u7684\u5f62\u5f0f\u8868\u793a\u5728\u7b2ca\u4e2a\u4f4d\u7f6e\u5230\u7b2cb\u4e2a\u4f4d\u7f6e\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u52a0\u5165\u4e00\u4e2a\u6570c.\u5982\u679c\u662f2\n\na b c\u5f62\u5f0f\uff0c\u8868\u793a\u8be2\u95ee\u4ece\u7b2ca\u4e2a\u4f4d\u7f6e\u5230\u7b2cb\u4e2a\u4f4d\u7f6e\uff0c\u7b2cC\u5927\u7684\u6570\u662f\u591a\u5c11\u3002\n\n\u601d\u8def\uff1a\u53ef\u4ee5\u6811\u5957\u6811\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e5f\u53ef\u4ee5\u6574\u4f53\u4e8c\u5206\u3002\n\n\u4f55\u8c13\u6574\u4f53\u4e8c\u5206\uff1f\u5c31\u662f\u5bf9\u4e8e\u591a\u4e2a\u8be2\u95ee\u64cd\u4f5c\uff0c\u4e8c\u5206\u7b54\u6848\uff0c\u4f46\u5728\u4e8c\u5206\u7b54\u6848\u7684\u65f6\u5019\uff0c\u4f20\u53c2\u5f53\u524d\u7b54\u6848\u7684\u5bf9\u4e8e\u6bcf\u7ec4\u8be2\u95ee\u7684\u53ef\u884c\u8303\u56f4\u3002\u5bf9\u5f53\u524d\u82e5\u5e72\u4e2a\u8be2\u95ee\u6216\u8005\u64cd\u4f5c\u8fdb\u884c\u548c\u4e8c\u5206\u7684\u7b54\u6848mid\u7684\u6bd4\u5bf9\uff0c\u5224\u65ad\u4e22\u5230\u5de6\u8fb9\u4e00\u6bb5\u7684\u4e8c\u5206\u6216\u8005\u662f\u53f3\u8fb9\u4e00\u6bb5\u7684\u4e8c\u5206\uff0c\u5f97\u51fa\u6bcf\u6b21\u4e8c\u5206\u7b54\u6848\u7684\u5224\u5b9a\u8303\u56f4\u3002\u7136\u540e\u9012\u5f52\u6c42\u89e3(\u7eaf\u5c5e\u4e2a\u4eba\u7406\u89e3)\n\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898:\u4e8c\u5206\u7b54\u6848\uff0c\u5982\u679c\u5f53\u524d\u63d2\u5165\u64cd\u4f5c\u7684\u503c\u5927\u4e8emid\u5e94\u5f53\u8bb0\u5f55\u8fd9\u4e00\u4e2a\uff0c\u53ef\u4ee5\u7ebf\u6bb5\u6811\uff0c\u4e5f\u53ef\u4ee5\u5e26\u533a\u95f4\u4fee\u6539\u7684\u6811\u72b6\u6570\u7ec4\u3002\u628a\u5b83\u52a0\u5165\u54ea\u4e00\u6bb5\u5462\uff1f\u601d\u8003:\u82e5\u5927\u4e8emid\u8bf4\u660e\u4ed6\u80fd\u591f\u5f71\u54cd\u66f4\u5927\u7684\u89e3\uff0c\u6240\u4ee5\u628a\u5b83\u52a0\u5165\u53f3\u7aef\u5f85\u8be2\u95ee\u7684\u533a\u95f4\u3002(\u5373\u9012\u5f52\u4e0b\u53bb\u4e3al=mid);\u53cd\u4e4b\u5c0f\u4e8emid\u52a0\u5165\u5de6\u7aef\u5f85\u9009\u533a\u95f4(r=mid)\u3002\u5bf9\u4e8e\u67e5\u8be2\u64cd\u4f5c\uff0c\u7531\u4e8e\u52a0\u5165\u987a\u5e8f\u6ee1\u8db3\u65f6\u95f4\u987a\u5e8f\uff0c\u65e0\u9700\u8003\u8651\u51b2\u7a81\uff0c\u6240\u4ee5\u67e5\u8be2\u5f85\u8be2\u95ee\u533a\u95f4\u4e2d\u5927\u4e8emid\u7684\u6570\u6709\u591a\u5c11\u4e2a\u3002\u82e5\u5927\u4e8e\u4e86\uff2b,\u8bf4\u660e\u4e8c\u5206\u7684\u7b54\u6848mid\u5c0f\u4e86\u3002\n\n\u628a\u5b83\u4e22\u5230\u53f3\u7aef\u5f85\u8be2\u95ee\u7684\u533a\u95f4.(\u5373\u9012\u5f52\u4e0b\u53bb\u4e3al=mid)\uff1b\u53cd\u4e4b\u5c0f\u4e8emid\u52a0\u5165\u5de6\u7aef\u5f85\u9009\u533a\u95f4(r=mid\\*\u5728\u8fd9\u4e2a\u5730\u65b9\u9700\u8981\u8bb0\u5f55\u4e00\u4e0b\u8d21\u732e\u503c!)\u3002\u7136\u540e\u6e05\u7a7a\u672c\u6b21\u6811\u72b6\u6570\u7ec4\u6216\u7ebf\u6bb5\u6811\u3002\u9012\u5f52\u89e3\u4e24\u4e2a\u5b50\u95ee\u9898\uff0c\u77e5\u9053\u4e8c\u5206\u7b54\u6848\u7684\u5de6\n\n\n\u53f3\u7aef\u70b9\u91cd\u5408\uff0c\u5c31\u8bb0\u5f55\u5f53\u524d\u6240\u6709\u8be2\u95ee\u7684\u7b54\u6848\u5373\u53ef\u3002\n\n\n```cpp\n}\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdlib>\n#include <cstdio>\n#include <vector>\n#include <cmath>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#define inf (1<<30)\n#define il inline\n#define RG register\n#define LL long long\n#define N 500010\nusing namespace std;\nstruct ASK{int l,r,id,flag,k;}ask[N];\nint n,sum,m,ans[N];LL tree1[N],tree2[N];\n#define lowbit(o) o&(-o)\nvoid Insert(int x,int y){for(int i=x;i<=n;i+=lowbit(i))tree1[i]+=y,tree2[i]+=(LL)x*y;}\nLL query(int x){LL aa=0;for(int i=x;i;i-=lowbit(i))aa+=tree1[i]*(x+1)-tree2[i];return aa;}\nASK quel[N],quer[N];\nil void solve(int head,int tail,int L,int R){\n    if(L==R){\n        for(RG int i=head;i<=tail;++i)ans[ask[i].id]=L;\n        return;\n    }int mid=(L+R+1)>>1;int ln=0,rn=0;bool ll=0,rr=0;\n    for(RG int i=head;i<=tail;++i){\n        if(ask[i].flag==1){\n            if(ask[i].k>=mid){\n                Insert(ask[i].l,1),Insert(ask[i].r+1,-1);\n                quer[++rn]=ask[i];\n            }\n            else quel[++ln]=ask[i];\n        }\n        else {\n            LL x=query(ask[i].r)-query(ask[i].l-1);\n            if(x>=ask[i].k)quer[++rn]=ask[i],rr=1;\n            else ll=1,ask[i].k-=x,quel[++ln]=ask[i];\n        }\n    }for(RG int i=head;i<=tail;++i)if(ask[i].flag==1&&ask[i].k>=mid)Insert(ask[i].l,-1),Insert(ask[i].r+1,1); \n    for(RG int i=1;i<=ln;++i)ask[head+i-1]=quel[i];\n    for(RG int i=1;i<=rn;++i)ask[head+ln+i-1]=quer[i];\n    if(ll)solve(head,head+ln-1,L,mid-1);\n    if(rr)solve(head+ln,tail,mid,R);\n}\nil void work(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;++i){\n        scanf(\"%d%d%d%d\",&ask[i].flag,&ask[i].l,&ask[i].r,&ask[i].k);\n        if(ask[i].flag==2)ask[i].id=++sum;\n    }\n    solve(1,m,1,n);\n    for(int i=1;i<=sum;++i)printf(\"%d\\n\",ans[i]);\n}\nint main(){\n    work();\n    return 0;\n}\n```",
        "postTime": 1501497752,
        "uid": 23122,
        "name": "\u57c3\u7f57\u8292\u963f\u8001\u5e08\u00b7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3332 \u3010[ZJOI2013]K\u5927\u6570\u67e5\u8be2\u3011"
    },
    {
        "content": "\u6811\u5957\u6811\u662f\u66b4\u529b\u597d\u4e0d\u597d\uff1b\n\n\u6211\u6765\u8bb2\u6807\u7b97\uff08\u4f2a\uff09\n\nmy blog:-----\n\nhttp://blog.csdn.net/largecub233/article/details/69383828\n\n\u6574\u4f53\u4e8c\u5206\\cdq\u5206\u6cbb\n\n\n\n\u7b2c\u4e00\u6b21\u63a5\u89e6\u6574\u4f53\u4e8c\u5206\uff1b\n\n\u4e0a\u8bfe\u7684\u65f6\u5019\u5c0f\u7ea2\u8bf4\u8fd9\u7528\u6811\u5957\u6811\u505a\uff0c\u4f46\u611f\u89c9\u597d\u96be\u554a\uff0c\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u90fd\u4e0d\u4f1a\uff0c\u600e\u4e48\u505a\u6811\u5957\u6811\u554a\uff1b\n\n\u7136\u540e\u5c31\u53bb\u505a\u6574\u4f53\u4e8c\u5206\u4e86\uff1b\n\n\u6574\u4f53\u4e8c\u5206\u901a\u8fc7\u9012\u5f52\u5b9e\u73b0\uff0c\u548c\u7ebf\u6bb5\u6811\u4e00\u6837\uff0c\u628a\u4e00\u6bb5\u4e1c\u897f\u53d8\u6210\u4e24\u6bb5\uff0c\u5904\u7406\u597d\u8fd9\u4e24\u6bb5\u4e4b\u95f4\u7684\u5173\u7cfb\u540e\uff0c\u8fd9\u4e24\u6bb5\u5c31\u76f8\u5bf9\u72ec\u7acb\u4e86\uff0c\u6211\u4eec\u76f4\u63a5\u5206\u6cbb\u8fd9\u4e24\u6bb5\uff1b\n\n\u9996\u5148\u8fd9\u9898\u6211\u4eec\u8981\u79bb\u7ebf\u505a\uff1b\n\n\u603b\u5171\u6709\u4e24\u79cd\u64cd\u4f5c\n\n\u63d2\u5165\uff0c\u67e5\u8be2\uff1b\n\n\u67e5\u8be2\u7684\u662f\u7b2ck\u5927\uff1b\n\n\u6211\u4eec\u4e8c\u5206\u8fd9\u4e2ak;\n\n\u4e8c\u5206\u533a\u95f4\u5c31\u662fk\u7684\u53d6\u503c\u8303\u56f4\uff0c\u5373-n~n;\n\n\u4e8c\u5206\u51fa\u6765\u7684\u4e2d\u95f4\u503cmid;\n\n\u5bf9\u4e8e\u63d2\u5165\uff1b\n\n\u8bbe\u63d2\u5165\u7684\u503c\u662fv;\n\n\u5982\u679cv<=x\uff1b\u90a3\u4e48\u73b0\u5728\u6765\u8bf4\u8fd9\u4e2av\u5bf9\u7b54\u6848\u6ca1\u4ec0\u4e48\u8d21\u732e\uff1b\n\n\u56e0\u4e3a\u6211\u4eec\u8981\u6c42\u6bd4mid\u5927\u7684\u6709\u51e0\u4e2a\uff1b\n\n\u90a3\u4e48\u5c31\u76f4\u63a5\u628a\u8fd9\u4e2a\u64cd\u4f5c\u653e\u5230\u5de6\u5806\uff1b\n\n\u5206\u6cbb\u5de6\u5806\u7684\u65f6\u5019\u4e8c\u5206\u7684\u533a\u95f4\u4f1a\u51cf\u5c0f\uff0c\u53f3\u5bf9\u4f1a\u589e\u5927\uff1b\n\n\u5c31\u662f\u8bf4\u5f53\u524d\u7684\u5806\u662fl~r\n\n\u505a\u5bf9l~mid;\n\n\u53f3\u5806mid+1~r;\n\n\u5982\u679cv>mid;\n\n\u663e\u7136\u5982\u679c\u6267\u884c\u8fd9\u4e2a\u64cd\u4f5c\u90a3\u4e48\u4f1a\u5bf9\u7b54\u6848\u7167\u6210\u8d21\u732e\uff1b\n\n\u90a3\u4e48\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u8bb0\u5f55\u4e00\u4e0b\u8fd9\u4e2a\u8d21\u732e\uff1b\n\n\u6811\u72b6\u6570\u7ec4\u4e0d\u4f1a\n\n\u8bb0\u5f55\u597d\u4e4b\u540e\u8fd9\u4e2a\u64cd\u4f5c\u5c31\u65e0\u7528\u4e86\uff0c\u653e\u5230\u53f3\u5806\uff1b\n\n\n\u5bf9\u4e8e\u67e5\u8be2\uff1b\n\n\u8bbe\u67e5\u8be2\u533a\u95f4xl,xr\uff1b\n\n\u67e5\u8be2\u7b2ck\u5927\uff1b\n\n\u6211\u4eec\u770b\u770bxl~xr\u8fd9\u4e2a\u533a\u95f4\u73b0\u5728\u503c\u662fv;\n\nv\u4ee3\u8868xl~xr\u533a\u95f4\u91cc\u9762\u6bd4mid\u5927\u7684\u6570\u7684\u4e2a\u6570\uff1b\n\n\u8fd9\u4e2a\u5c31\u662f\u4e0a\u9762\u8bf4\u5230\u7684\u8d21\u732e\uff0c\u7528\u7ebf\u6bb5\u6811\u53d6\u7ef4\u62a4\uff1b\n\n\u5982\u679cv < k,\n\n\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u628ak-v\u4e4b\u540e\u628a\u8fd9\u4e2a\u64cd\u4f5c\u653e\u5230\u5de6\u5806\uff1b\n\n\u56e0\u4e3amid+1~r\u7684\u533a\u95f4\u7684\u503c\u53ea\u6709v\u4e2a\uff0ck>v\u6240\u4ee5\u663e\u7136\u7b54\u6848\u5728l~mid\u91cc\u9762\uff1b\n\n\u8981\u662fv>=k\u76f4\u63a5\u653e\u5230\u53f3\u5806\u5206\u6cbb\uff1b\n\n\n\u6574\u4e2a\u601d\u60f3\u5c31\u662f\u4e8c\u5206\u91cc\u9762\u5957\u5206\u6cbb\uff0c\u518d\u52a0\u4e00\u9897\u7ebf\u6bb5\u6811\uff1b\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#include<cstring>\n#define ui unsigned int\nusing namespace std;\nstruct in{\n    int num,l,r,kind,v,ans,c;\n}a[50005];\nstruct tree{\n    ui v,tag;\n    bool p;\n}T[131072];\nint n,m;\nbool cmp2(in x,in y){return x.num<y.num;}\nbool cmp1(in x,in y){return x.c<y.c;}\nvoid pushdown(int num,int l,int r){\n    if(l==r)return;\n    if(T[num].p){//\u66f4\u65b0\u513f\u5b50\uff1b \n        T[num*2].v=T[num*2+1].v=0;\n        T[num*2].tag=T[num*2+1].tag=0;\n        T[num*2].p=T[num*2+1].p=1;\n        T[num].p=0;\n    }\n    int mid=(l+r)/2;\n    T[num*2].v+=(mid-l+1)*T[num].tag;\n    T[num*2+1].v+=(r-(mid+1)+1)*T[num].tag;\n    T[num*2].tag+=T[num].tag;\n    T[num*2+1].tag+=T[num].tag;\n    T[num].tag=0;\n}\nvoid init(int l,int r,int x,int y,int num){\n    pushdown(num,l,r);\n    if(x<=l&&r<=y){\n        T[num].v+=(r-l+1)*1;\n        T[num].tag+=1;\n        return;\n    }\n    int mid=l+r>>1;\n    if(mid  >=x)init(l,mid  ,x,y,num<<1  );\n    if(mid+1<=y)init(mid+1,r,x,y,num<<1|1);\n    T[num].v=T[num*2].v+T[num*2+1].v;\n}\nui outit(int l,int r,int x,int y,int num){\n    pushdown(num,l,r);\n    if(x<=l&&r<=y)return T[num].v;\n    int mid=l+r>>1;\n    ui ans=0;\n    if(mid  >=x)ans+=outit(l,mid  ,x,y,num<<1  );\n    if(mid+1<=y)ans+=outit(mid+1,r,x,y,num<<1|1);\n    return ans;\n}\nvoid er(int l,int r,int x,int y){\n    if(l==r){\n        for(int i=x;i<=y;i++)a[i].ans=l;//\u66f4\u65b0\u7b54\u6848\uff1b \n        return;\n    }\n    int mid=l+r>>1;\n    int L=0,R=y;//\u5206\u5f00\u5de6\u53f3\u5806 \n    T[1].v=T[1].tag=0; T[1].p=1;//\u66f4\u65b0\u7ebf\u6bb5\u6811\n    //p\u8868\u793a\u73b0\u5728\u8fd9\u4e2a\u8282\u70b9\u7684\u5de6\u53f3\u513f\u5b50\u6709\u6ca1\u6709\u88ab\u6e05\u7a7a\u8fc7\uff0c\u907f\u514dmemset\uff1b \n    for(int i=x;i<=y;i++)\n    if(a[i].kind==1){\n        if(a[i].v<=mid)a[i].c=++L;else{\n            a[i].c=++R;\n            init(1,n,a[i].l,a[i].r,1);\n        }\n    }else{\n        ui temp=outit(1,n,a[i].l,a[i].r,1);\n        if(temp<(ui)a[i].v){\n            a[i].v-=temp;\n            a[i].c=++L;\n        }else a[i].c=++R;\n    }\n    sort(a+x,a+y+1,cmp1);//\u6392\u597d\u5e8f\u5de6\u53f3\u5bf9\u5c31\u5206\u79bb\u4e86 \n    er(l,mid,x,x+L-1);\n    er(mid+1,r,x+L,y);\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++){\n        scanf(\"%d%d%d%d\",&a[i].kind,&a[i].l,&a[i].r,&a[i].v);\n        a[i].num=i;\n    }\n    er(-n,n,1,m);//\u5f00\u59cb\u5206\u6cbb \n    sort(a+1,a+m+1,cmp2);\n    for(int i=1;i<=m;i++)\n        if(a[i].kind==2)printf(\"%d\\n\",a[i].ans);\n}\n\n```",
        "postTime": 1491448093,
        "uid": 7442,
        "name": "\u5de8\u578b\u65b9\u5757",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3332 \u3010[ZJOI2013]K\u5927\u6570\u67e5\u8be2\u3011"
    }
]