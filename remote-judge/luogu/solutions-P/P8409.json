[
    {
        "content": "## \u601d\u8def\n\n\u9996\u5148\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5229\u7528\u884c\u3001\u5217\u65cb\u8f6c\u53ef\u4ee5\u653e\u7f6e\u4efb\u610f\u5143\u7d20\u3002\n\n\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u884c\u6216\u5217\u3002\u4f8b\u5982\uff0c\u8ba9\u5e8f\u5217 $s= \\{p_1,p_2,\\dots,p_r\\}$ \u7684 $r$ \u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u60f3\u653e\u5728\u7b2c\u4e00\u5217\u3002\u5bf9\u4e8e\u7b2c $i$ \u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u53ef\u4ee5\uff1a\n\n- \u5982\u679c $p_i$ \u5df2\u7ecf\u5728\u7b2c\u4e00\u5217\uff0c\u6211\u4eec\u628a\u5b83\u653e\u51fa\u6765\uff0c\u5c06\u884c\u65cb\u8f6c $1$\u3002\n\n- \u65cb\u8f6c\u5305\u542b $p_i$ \u7684\u5217\uff0c\u4f7f\u5176\u5728\u7b2c $i$ \u884c\u3002\n\n- \u65cb\u8f6c\u5305\u542b $p_i$ \u7684\u884c\uff0c\u4f7f\u5176\u4f4d\u4e8e\u7b2c $1$ \u5217\u3002\n\n\u4f7f\u7528\u8fd9\u4e2a\u7b97\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4efb\u610f\u9009\u62e9\u7684 $r$ \u5143\u7d20\u653e\u5728\u7b2c\u4e00\u5217\uff0c\u4efb\u610f\u9009\u62e9\u7684 $s$ \u5143\u7d20\u653e\u5728\u7b2c\u4e00\u884c\u3002\u73b0\u5728\u53ef\u4ee5\u5bf9\u7b2c\u4e00\u884c\u3001\u5217\u4e2d\u7684\u6240\u6709\u5143\u7d20\u6c42\u53cd\u3002\u5982\u679c\u6211\u4eec\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u77e9\u9635\u4e2d\u4efb\u610f\u7684 $a \\times r+b \\times s \\le r \\times s$ \u4e2a\u5143\u7d20\u5e76\u5bf9\u5b83\u4eec\u6c42\u53cd\u3002\n\n\u56e0\u4e3a\u8fd9\u4e0d\u603b\u662f\u53ef\u80fd\u7684\uff0c\u6211\u4eec\u9700\u8981\u9009\u62e9\u8fd9\u6837\u7684 $a$ \u548c $b$\uff0c\u4ece\u800c\u627e\u5230\u6700\u5c0f\u7684\u53ef\u80fd\u7684\u89e3\u51b3\u65b9\u6848\u3002\u5bf9\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\u5e76\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5f97\u5230\u6700\u4f73\u7684 $a$ \u548c $b$\u3002\n\n\u6ce8\u610f\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u6700\u591a\u4f7f\u7528 $3$ \u6b21\u65cb\u8f6c\u548c $2$ \u6b21\u5426\u5b9a\uff0c\u8fd9\u786e\u4fdd\u64cd\u4f5c\u7684\u6b21\u6570\u5c0f\u4e8e $5 \\times r \\times s$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O((\\max \\{r,s\\})^4)$\u3002\n\n## AC Code\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <vector>\n#include <string>\n#include <algorithm>\n\n#define Row first\n#define Col second\n\nusing namespace std;\nvector< string > rez;\nvector< pair< int, int > > koord;\n\nint R, S, mat[ 105 ][ 105 ], niz[ 10005 ];\nint recon[ 20005 ], moguce[ 20005 ] = { 1 };\nint sumuk[ 20005 ] = { 0 }, negativnih = 0;\nint por[ 10005 ], tmp[ 105 ], cnt = 0;\nchar tmpbuff[ 105 ], ozn[ 105 ][ 105 ];\n\n\nvoid rotaterow( int row, int K ) {\n\tfor( int i = 0; i < S; ++i )\n\t\ttmp[ ( i + K ) % S ] = mat[ row ][ i ];\n\tfor( int i = 0; i < S; ++i )\n\t\tmat[ row ][ i ] = tmp[ i ];\n\tfor( int i = 0; i < ( int )koord.size(); ++i )\n\t\tif( koord[ i ].Row == row )\n\t\t\tkoord[ i ].Col = ( koord[ i ].Col + K ) % S;\n\t\n\tsprintf( tmpbuff, \"rotR %d %d\", row + 1, K );\n\trez.push_back( string( tmpbuff ) );\n}\n\nvoid rotatecol( int col, int K ) {\n\tfor( int i = 0; i < R; ++i )\n\t\ttmp[ ( i + K ) % R ] = mat[ i ][ col ];\n\tfor( int i = 0; i < R; ++i )\n\t\tmat[ i ][ col ] = tmp[ i ];\n\tfor( int i = 0; i < ( int )koord.size(); ++i )\n\t\tif( koord[ i ].Col == col )\n\t\t\tkoord[ i ].Row = ( koord[ i ].Row + K ) % R;\n\t\n\tsprintf( tmpbuff, \"rotS %d %d\", col + 1, K );\n\trez.push_back( string( tmpbuff ) );\n}\n\nvoid changerow( int row ) {\n\tfor( int i = 0; i < S; ++i )\n\t\tmat[ row ][ i ] = -mat[ row ][ i ];\n\t\n\tsprintf( tmpbuff, \"negR %d\", row + 1 );\n\trez.push_back( string( tmpbuff ) );\n}\n\nvoid changecol( int col ) {\n\tfor( int i = 0; i < R; ++i )\n\t\tmat[ i ][ col ] = -mat[ i ][ col ];\n\t\n\tsprintf( tmpbuff, \"negS %d\", col + 1 );\n\trez.push_back( string( tmpbuff ) );\n}\n\nint suma( int a, int b ) {\n\tif( a > b ) return( 0 );\n\treturn( sumuk[ b ] - ( a == 0 ? 0 : sumuk[ a-1 ] ) );\n}\n\nint evalpod( int X ) {\n\treturn( suma( X, R * S - 1 ) - suma( 0, X - 1 ) );\n}\n\npair< int, int > pronadji( int X ) {\n\tfor( int i = 0; i < R; ++i )\n\t\tfor( int j = 0; j < S; ++j )\n\t\t\tif( !ozn[ i ][ j ]  &&  mat[ i ][ j ] == X ) {\n\t\t\t\tozn[ i ][ j ] = 1;\n\t\t\t\treturn make_pair( i, j );\n\t\t\t}\n\t\n\treturn make_pair( -1, -1 );\n}\n\nvoid sredi_stupac( void ) {\n\tint len = ( int )koord.size();\n\tfor( int i = 0; i < len; ++i ) {\n\t\tint razl = i - koord[ i ].Row;\n\t\tif( razl < 0 ) razl += R;\n\t\t\n\t\tif( koord[ i ].Col == 0 ) rotaterow( koord[ i ].Row, 1 );\n\t\tif( koord[ i ].Row != i ) rotatecol( koord[ i ].Col, razl );\n\t\trotaterow( koord[ i ].Row, S - koord[ i ].Col );\n\t}\n}\n\nvoid sredi_redak( void ) {\n\tint len = ( int )koord.size();\n\tfor( int i = 0; i < len; ++i ) {\n\t\tint razl = i - koord[ i ].Col;\n\t\tif( razl < 0 ) razl += S;\n\t\t\n\t\tif( koord[ i ].Row == 0 ) rotatecol( koord[ i ].Col, 1 );\n\t\tif( koord[ i ].Col != i ) rotaterow( koord[ i ].Row, razl );\n\t\trotatecol( koord[ i ].Col, R - koord[ i ].Row );\n\t}\n}\n\nint main( void ) {\n\tscanf( \"%d %d\", &R, &S );\n\tfor( int i = 0; i < R; ++i )\n\t\tfor( int j = 0; j < S; ++j ) {\n\t\t\tscanf( \"%d\", &mat[ i ][ j ] );\n\t\t\tniz[ S * i + j ] = mat[ i ][ j ];\n\t\t}\n\t\n\tsort( niz, niz + R * S );\n\tfor( int i = 0; i < R * S; ++i ) {\n\t\tnegativnih += ( niz[ i ] < 0 );\n\t\tsumuk[ i ] = ( i > 0 ? sumuk[ i-1 ] : 0 ) + niz[ i ];\n\t\t\n\t\tif( !moguce[ i ] ) continue;\n\t\tmoguce[ i + R ] = 1;\n\t\tmoguce[ i + S ] = 1;\n\t\trecon[ i + R ] = i;\n\t\trecon[ i + S ] = i;\n\t}\n\t\n\tint X, A = -1, B = -1;\n\tfor( int i = 0; i <= R * S; ++i ) {\n\t\tif( !moguce[ i ] ) continue;\n\t\tif( i <= negativnih ) A = i;\n\t\tif( i >= negativnih && B == -1 )\n\t\t\tB = i;\n\t}\n\t\n\tif( A == -1 ) X = B; else if( B == -1 ) X = A;\n\telse X = ( evalpod( A ) > evalpod( B ) ? A : B );\n\t\n\tint prez = evalpod( X );\n\twhile( X != 0 ) {\n\t\tpor[ cnt++ ] = X;\n\t\tX = recon[ X ];\n\t}\n\t\n\tpor[ cnt++ ] = 0;\n\treverse( por, por + cnt );\n\t\n\tfor( int i = 0; i < cnt-1; ++i ) {\n\t\tmemset( ozn, 0, sizeof( ozn ) );\n\t\tkoord.clear();\n\t\t\n\t\tfor( int j = por[ i ]; j < por[ i + 1 ]; ++j )\n\t\t\tkoord.push_back( pronadji( niz[ j ] ) );\n\t\t\n\t\tif( por[ i + 1 ] - por[ i ] == R ) {\n\t\t\tsredi_stupac();\n\t\t\tchangecol( 0 );\n\t\t} else {\n\t\t\tsredi_redak();\n\t\t\tchangerow( 0 );\n\t\t}\n\t}\n\t\n\tprintf( \"%d %d\\n\", prez, ( int )rez.size() );\n\tfor( int i = 0; i < ( int )rez.size(); ++i )\n\t\tprintf( \"%s\\n\", rez[ i ].c_str() );\n\t\n\treturn( 0 );\n}\n```",
        "postTime": 1656918895,
        "uid": 675646,
        "name": "Dyousks",
        "ccfLevel": 0,
        "title": "P8409 \u9898\u89e3"
    }
]