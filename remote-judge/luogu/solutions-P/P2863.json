[
    {
        "content": "## 1.1 \u7b80\u8ff0\u5f3a\u8054\u901a\u5206\u91cf\u4e0eTarjan\n\u5728\u6709\u5411\u56feG\u4e2d\uff0c\u5982\u679c\u4e24\u4e2a\u9876\u70b9\u95f4\u81f3\u5c11\u5b58\u5728\u4e00\u6761\u8def\u5f84\uff0c\u79f0\u4e24\u4e2a\u9876\u70b9\u5f3a\u8fde\u901a\u3002\u5982\u679c\u6709\u5411\u56feG\u7684\u6bcf\u4e24\u4e2a\u9876\u70b9\u90fd\u5f3a\u8fde\u901a\uff0c\u79f0G\u662f\u4e00\u4e2a\u5f3a\u8fde\u901a\u56fe\u3002\u975e\u5f3a\u8fde\u901a\u56fe\u6709\u5411\u56fe\u7684\u6781\u5927\u5f3a\u8fde\u901a\u5b50\u56fe\uff0c\u79f0\u4e3a\u5f3a\u8fde\u901a\u5206\u91cf\u3002\n\n~~\u8bf4\u767d\u4e86\u5c31\u662f\u5982\u679c\u4e00\u4e2a\u6709\u5411\u56fe\u7684\u5b50\u56fe\u91cc\u6bcf\u4e2a\u70b9\u53ef\u4ee5\u4e24\u4e24\u4e92\u8fbe\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5b50\u56fe\u662f\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf~~\n\nTarjan\u7b97\u6cd5\u5c31\u662f\u57fa\u4e8eDFS\u6c42\u5f3a\u8054\u901a\u5206\u91cf\u7684\u7b97\u6cd5\u3002\n\n\n## 2.1 Tarjan\u601d\u60f3\n\n#### 2.1.1 Tarjan\u7ef4\u62a4\u7684\u53d8\u91cf\n\u5728Tarjan\u7b97\u6cd5\u4e2d\u6211\u4eec\u7ef4\u62a4\u5982\u4e0b\u7684\u53d8\u91cf\uff1a\n```\nvector<int> G[maxn];//\u56fe\u672c\u8eab\uff08\u90bb\u63a5\u8868\uff09\nstack<int>s;//\u6808\uff0c\u5b58\u653e\u7b54\u6848\nint vis[maxn];//\u6807\u8bb0\u70b9\u662f\u5426\u5728\u6808\u4e2d\nint dfn[maxn];//\u8282\u70b9i\u7684\u65f6\u95f4\u6233\nint low[maxn];//\u8282\u70b9i\u80fd\u591f\u56de\u6eaf\u5230\u7684\u6700\u65e9\u4f4d\u4e8e\u6808\u4e2d\u7684\u8282\u70b9\u3002\uff08\u5b50\u6811\u7684\u6839\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u5e76\u67e5\u96c6\u7684\u201c\u7956\u5148\u201d\u4e00\u7c7b\u7684\u4e1c\u897f\uff09\nint color[maxn];//\u6bcf\u4e2a\u70b9\u5c5e\u4e8e\u7b2c\u51e0\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\nint colornum;//\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u4e2a\u6570\nint cnt;//\u5f53\u524d\u65f6\u95f4\n```\n\n#### 2.2.2 Tarjan\u7b97\u6cd5\u8fd0\u884c\u8fc7\u7a0b\n\n1. \u6309\u7167\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u7684\u65b9\u5f0f\u904d\u5386\u8fd9\u5f20\u56fe\u3002\n2. \u904d\u5386\u5f53\u524d\u8282\u70b9\u6240\u51fa\u7684\u6240\u6709\u8fb9\u3002\u5728\u904d\u5386\u8fc7\u7a0b\u4e2d\uff1a\n\n    ( 1 ) \u5982\u679c\u5f53\u524d\u8fb9\u7684\u7ec8\u70b9\u8fd8\u6ca1\u6709\u8bbf\u95ee\u8fc7\uff0c\u8bbf\u95ee\u3002\n\n\t\u56de\u6eaf\u56de\u6765\u4e4b\u540e\u6bd4\u8f83\u5f53\u524d\u8282\u70b9\u7684low\u503c\u548c\u7ec8\u70b9\u7684low\u503c\u3002\u5c06\u8f83\u5c0f\u7684\u53d8\u4e3a\u5f53\u524d\u8282\u70b9\u7684low\u503c\u3002\uff08\u56e0\u4e3a\u904d\u5386\u5230\u7ec8\u70b9\u65f6\u6709\u53ef\u80fd\u89e6\u53d1\u4e862\uff09\n\n\t( 2 )  \u5982\u679c\u5df2\u7ecf\u8bbf\u95ee\u8fc7\uff0c\u90a3\u6211\u4eec\u4e00\u5b9a\u8d70\u5230\u4e86\u4e00\u4e2a\u4e4b\u524d\u5df2\u7ecf\u8d70\u8fc7\u7684\u70b9\uff08\u7ec8\u70b9\u7684\u65f6\u95f4\u6233\u4e00\u5b9a\u6bd4\u5f53\u524d\u7684\u5c0f\uff09\n\n\t\u5219\u6bd4\u8f83\u5f53\u524d\u8282\u70b9\u7684low\u503c\u548c\u7ec8\u70b9\u7684dfn\u503c\u3002\u5c06\u8f83\u5c0f\u7684\u53d8\u4e3a\u5f53\u524d\u8282\u70b9\u7684low\u503c\n3. \u5728\u56de\u6eaf\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u4e8e\u4efb\u610f\u8282\u70b9u\u7528\u5176\u51fa\u8fb9\u7684\u7ec8\u70b9v\u7684low\u503c\u6765\u66f4\u65b0\u8282\u70b9u\u7684low\u503c\u3002\u56e0\u4e3a\u8282\u70b9v\u80fd\u591f\u56de\u6eaf\u5230\u7684\u5df2\u7ecf\u5728\u6808\u4e2d\u7684\u8282\u70b9\uff0c\u8282\u70b9u\u4e5f\u4e00\u5b9a\u80fd\u591f\u56de\u6eaf\u5230\u3002\u56e0\u4e3a\u5b58\u5728\u4eceu\u5230v\u7684\u76f4\u63a5\u8def\u5f84\uff0c\u6240\u4ee5v\u80fd\u591f\u5230\u7684\u8282\u70b9u\u4e5f\u4e00\u5b9a\u80fd\u591f\u5230\u3002\n\n4. \u5f53\u4e00\u4e2a\u8282\u70b9\u7684dfn\u503c\u548clow\u503c\u76f8\u7b49\u65f6\uff0c\u8fd9\u4e2a\u8282\u70b9\u662f\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u7684\u201c\u6839\u201d\u3002\u538b\u6808\uff0c\u8f93\u51fa\u3002\n\n~~\u6211\u77e5\u9053\u8fd9\u8ba9\u4f60\u542c\u5f97\u5f88\u8ff7\u7cca\uff0c~~\u5148\u6765\u4e00\u6bb5\u4f2a\u4ee3\u7801\u770b\u770b\u5427\u3002\n```\nvoid tarjan(int u)//\u5f53\u524d\u8282\u70b9\n{\n\tdfn[u]=low[u]=++cnt;//\u8be5\u8282\u70b9\u672c\u8eab\u662f\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\n    \u8282\u70b9\u5165\u6808;\n    vis[u]=true;//\u5f53\u524d\u8282\u70b9\u5df2\u5165\u6808\n    for(\u904d\u5386\u8be5\u8282\u70b9\u6240\u6709\u51fa\u8fb9)\n    {\n    \tint v=\u5f53\u524d\u8fb9\u7684\u7ec8\u70b9;\n        if (!dfn[v])\n        {\n        \ttarjan(v);//\u6df1\u5ea6\u4f18\u5148\u904d\u5386\n            low[u]=min(low[u],low[v]);\n        }\n        else low[u]=min(dfn[v],low[u]);\n    }\n    if (low[u]==dfn[u])\n    {\n    \twhile(\u6808\u9876!=v)\n        {\n            \u67d3\u8272;\n        \t\u51fa\u6808;\n        }\n    }\n    \u67d3\u8272;\n    \u51fa\u6808;\n}\n```\n\u624b\u6a21\u4e00\u7ec4\u6570\u636e\u5c31\u4e0d\u6a21\u5566\uff0c\u7f51\u4e0a\u5230\u5904\u90fd\u662f\u3002\n\n## 3.1 \u5b8c\u6574code\n\u8fd9\u91cc\u4ee5\u6d1b\u8c37P2863 `[USACO06JAN]\u725b\u7684\u821e\u4f1aThe Cow Prom`\u4e3a\u4f8b\u3002\u9898\u610f\u4e3a\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u56fe\uff0c\u8981\u6c42\u56fe\u4e2d\u8282\u70b9\u6570\u5927\u4e8e\u4e00\u7684\u5f3a\u8054\u901a\u5206\u91cf\u4e2a\u6570\u3002\n\u5bf9\u4e8e\u8fd9\u9053~~\u6a21\u677f~~\u9898\uff0c\u6211\u4eec\u5e94\u5f53\u505a\u5230\u4e00\u904dA\u6389\u3002\n```\n#include<bits/stdc++.h>\n#define maxn 10001\nusing namespace std;\nvector<int>G[maxn];\nstack<int>s;\nint n,m;\nint dfn[maxn],used[maxn],vis[maxn],low[maxn],color[maxn],num[maxn],colornum=0,cnt=0,ans=0;\nvoid paint(int x)\n{\n    s.pop();\n    color[x]=colornum;\n    num[colornum]++;\n    vis[x]=false;\n}\nvoid tarjan(int x)\n{\n    dfn[x]=low[x]=++cnt;\n    s.push(x);\n    vis[x]=used[x]=true;\n    for(int i=0;i<G[x].size();i++)\n    {\n        int q=G[x][i];\n        if (!dfn[q])\n        {\n            tarjan(q);\n            low[x]=min(low[x],low[q]);\n        }\n        else if (vis[q]) low[x]=min(low[x],dfn[q]);\n    }\n    if (low[x]==dfn[x])\n    {\n        colornum++;\n        while(s.top()!=x)\n        {\n            int t=s.top();\n            paint(t);\n        }\n        paint(x);\n    }\n}\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=m;i++)\n    {\n        int u,v;\n        cin>>u>>v;\n        G[u].push_back(v);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if (!used[i]) tarjan(i);\n    }\n    for(int i=1;i<=colornum;i++)\n    {\n        if (num[i]>1) ans++;\n    }\n    cout<<ans;\n    return 0;\n}\n```\n\n### 3.2 \u6211\u63a5\u4e0b\u6765\u5b66\u4e60\u4ec0\u4e48\u7b97\u6cd5\uff1f\n\u7f29\u70b9\u3002[ P2341 [HAOI2006]\u53d7\u6b22\u8fce\u7684\u725b](https://www.luogu.org/problemnew/show/P2341)\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u9053\u6a21\u677f\u9898\u3002\n\n\u656c\u8bf7\u671f\u5f85\u3002",
        "postTime": 1526190880,
        "uid": 41953,
        "name": "\u5188\u5d0e\u68a6\u7f8e",
        "ccfLevel": 0,
        "title": "Tarjan\u5927\u6cd5\u597d"
    },
    {
        "content": "//\u8fd9\u9053\u9898\u601d\u8def\u8fd8\u662f\u5f88\u7b80\u5355\u7684   \u4e00\u4e2a\u88f8\u7684tarjan\u5f3a\u8fde\u901a\u5206\u91cf    \u5728\u8fd9\u91cc\u8fd8\u662f\u7740\u91cd\u89e3\u91ca\u4e00\u4e0btarjan\u7684\u4ee3\u7801\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint n,m;\nint cnt;//\u8bb0\u5f55\u5f3a\u8054\u901a\u5206\u91cf\u7684\u4e2a\u6570\nint visitnum;//\u904d\u5386\u7684\u6b65\u6570\nint dfn[100010];//\u8bb0\u5f55\u5143\u7d20\u7b2c\u4e00\u6b21\u88ab\u8bbf\u95ee\u7684\u6b65\u6570\nint low[100010];//\u5305\u542bi\u7684\u5f3a\u8054\u901a\u5206\u91cf\u6700\u65e9\u88ab\u8bbf\u95ee\u7684\u6b65\u6570\nint num[100010];//\u8bb0\u5f55\u5f3a\u8054\u901a\u5206\u91cf\u91cc\u7684\u70b9\u7684\u4e2a\u6570\nint belong[100010];//i\u4ece\u5c5e\u7684\u5f3a\u8054\u901a\u5206\u91cf\u7684\u5e8f\u53f7\nint top;//\u6808\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\nint stack[100010];//\u624b\u6253\u6808\nint instack[100010];//\u5224\u65ad\u5143\u7d20\u662f\u5426\u5728\u6808\u4e2d\nint head[100010];\nstruct node{\nint to,next;\n}edge[100010];//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u8fb9\nint read()//\u8bfb\u5165\u4f18\u5316\n{\n    int x=0,w=1;char ch=getchar();\n    while(ch>'9'||ch<'0') {if(ch=='-')w=-1;ch=getchar();}\n    while(ch<='9'&&ch>='0') x=(x<<3)+(x<<1)+ch-'0',ch=getchar();\n    return x*w;\n}\nvoid tarjan(int);\nint main()\n{\n    int ans=0;\n    int p,q;\n    n=read();m=read();\n    for(int i=1;i<=m;i++)\n    {\n        p=read();q=read();\n        edge[i].to=q;\n        edge[i].next=head[p];\n        head[p]=i;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(!dfn[i])//i\u6ca1\u88ab\u8bbf\u95ee\u8fc7\u4e86\n        {\n            tarjan(i);\n        }\n    }\n    for(int i=1;i<=cnt;i++)\n    {\n        if(num[i]>1)\n        ans++;\n    }\n    printf(\"%d\",ans);\n}\nvoid tarjan(int u)\n{\n    int v;\n    visitnum++;\n    dfn[u]=low[u]=visitnum;\n    stack[++top]=u;//\u5165\u6808\n    instack[u]=1;//\u5165\u6808\n    for(int i=head[u];i;i=edge[i].next)\n    {\n        v=edge[i].to;\n        if(!dfn[v])//\u8fd8\u6ca1\u88ab\u8bbf\u95ee\u8fc7\n        {\n            tarjan(v);\n            low[u]=min(low[u],low[v]);//\u5224\u65adu\u662f\u5426\u4e3av\u7684\u5b50\u8282\u70b9\n        }\n        else if(instack[v])\n        {\n            low[u]=min(low[u],dfn[v]);\n                       //\u5176\u5b9e\u8fd9\u91cc\u7684dfn[v]\u4e5f\u80fd\u6362\u6210low[v] \u4f46\u6700\u597d\u5199dfn\n        }\n    }\n    if(dfn[u]==low[u])//u\u4e3a\u5f3a\u8054\u901a\u5206\u91cf\u7684\u6839\n    {\n        cnt++;\n        do//\u9000\u6808\n        {\n            num[cnt]++;\n            v=stack[top--];\n            belong[v]=cnt;\n            instack[v]=0;\n        }while(u!=v);\n    }\n}\n```",
        "postTime": 1509158849,
        "uid": 45206,
        "name": "Frozen_Heart",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2863 \u3010[USACO06JAN]\u725b\u7684\u821e\u4f1aThe Cow Prom\u3011"
    },
    {
        "content": "\n# \u5e7f\u544a\n\n## [\u6211\u7684blog & \u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.jeb.website/)\n\n\n\n------------\n\n\n\n### Have you \u542c\u8fc7 Tarjan\uff1f\n\n> \u6b64\u7b97\u6cd5\u4ee5\u4e00\u4e2a\u6709\u5411\u56fe\u4f5c\u4e3a\u8f93\u5165\uff0c\u5e76\u6309\u7167\u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7ed9\u51fa\u5176\u9876\u70b9\u96c6\u7684\u4e00\u4e2a\u5212\u5206\u3002\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u53ea\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u51fa\u73b0\uff0c\u5373\u4f7f\u662f\u5728\u6709\u4e9b\u8282\u70b9\u5355\u72ec\u6784\u6210\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u60c5\u51b5\u4e0b\uff08\u6bd4\u5982\u56fe\u4e2d\u51fa\u73b0\u4e86\u6811\u5f62\u7ed3\u6784\u6216\u5b64\u7acb\u8282\u70b9\uff09\u3002\n\u7b97\u6cd5\u7684\u57fa\u672c\u601d\u60f3\u5982\u4e0b\uff1a\u4efb\u9009\u4e00\u8282\u70b9\u5f00\u59cb\u8fdb\u884c\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08\u82e5\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u7ed3\u675f\u540e\u4ecd\u6709\u672a\u8bbf\u95ee\u7684\u8282\u70b9\uff0c\u5219\u518d\u4ece\u4e2d\u4efb\u9009\u4e00\u70b9\u518d\u6b21\u8fdb\u884c\uff09\u3002\u641c\u7d22\u8fdb\u7a0b\u4e2d\u5df2\u8bbf\u95ee\u7684\u8282\u70b9\u4e0d\u518d\u8bbf\u95ee\u3002\u641c\u7d22\u6811\u7684\u82e5\u5e72\u5b50\u6811\u6784\u6210\u4e86\u56fe\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u3002\n\u8282\u70b9\u6309\u7167\u88ab\u8bbf\u95ee\u7684\u987a\u5e8f\u5b58\u5165\u5806\u6808\u4e2d\u3002\u4ece\u641c\u7d22\u6811\u7684\u5b50\u6811\u8fd4\u56de\u81f3\u4e00\u4e2a\u8282\u70b9\u65f6\uff0c\u68c0\u67e5\u8be5\u8282\u70b9\u662f\u5426\u662f\u67d0\u4e00\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6839\u8282\u70b9\uff08\u89c1\u4e0b\uff09\u5e76\u5c06\u5176\u4ece\u5806\u6808\u4e2d\u5220\u9664\u3002\u5982\u679c\u67d0\u8282\u70b9\u662f\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6839\uff0c\u5219\u5728\u5b83\u4e4b\u524d\u51fa\u5806\u6808\u4e14\u8fd8\u4e0d\u5c5e\u4e8e\u5176\u4ed6\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u8282\u70b9\u6784\u6210\u4e86\u8be5\u8282\u70b9\u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u3002\n(\u6765\u81ea[Wikipedia](https://zh.wikipedia.org/wiki/Tarjan%E7%AE%97%E6%B3%9))\n\n\n~~\u770b\u4e0d\u61c2\u5bf9\u4e0d\u5bf9\uff1f~~\n\n~~\u6211\u4e5f\u662f~~\n\n\u90a3\u6211\u4eec\u4e00\u4e2a\u4e00\u4e2a\u6765\u89e3\u51b3\u3002\n\n## \u4ec0\u4e48\u662f\u5f3a\u8fde\u901a\u5206\u91cf\uff1f\n\n> \u5f3a\u8fde\u901a\u5206\u91cf\uff08\u82f1\u8bed\uff1aStrongly connected component\uff09\u662f\u56fe\u8bba\u4e2d\u7684\u6982\u5ff5\u3002\u56fe\u8bba\u4e2d\uff0c\u5f3a\u8fde\u901a\u56fe\u6307\u6bcf\u4e00\u4e2a\u9876\u70b9\u7686\u53ef\u4ee5\u7ecf\u7531\u8be5\u56fe\u4e0a\u7684\u8fb9\u62b5\u8fbe\u5176\u4ed6\u7684\u6bcf\u4e00\u4e2a\u70b9\u7684\u6709\u5411\u56fe\u3002\u610f\u5373\u5bf9\u4e8e\u6b64\u56fe\u4e0a\u6bcf\u4e00\u4e2a\u70b9\u5bf9$(Va,Vb)$ \uff0c\u7686\u5b58\u5728\u8def\u5f84 $Va\u2192Vb$ \u4ee5\u53ca $Vb\u2192Va$ \u3002\u5f3a\u8fde\u901a\u5206\u91cf\u5219\u662f\u6307\u4e00\u5f20\u6709\u5411\u56fe$G$\u7684\u6781\u5927\u5f3a\u8fde\u901a\u5b50\u56fe$G'$\u3002\u5982\u679c\u5c06\u6bcf\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7f29\u6210\u4e00\u4e2a\u70b9\uff0c\u5219\u539f\u56fe$G$\u5c06\u4f1a\u53d8\u6210\u4e00\u5f20\u6709\u5411\u65e0\u73af\u56fe\u3002\u4e00\u5f20\u56fe\u88ab\u79f0\u4e3a\u6709\u5411\u65e0\u73af\u56fe\u5f53\u4e14\u4ec5\u5f53\u6b64\u56fe\u4e0d\u5177\u6709\u70b9\u96c6\u5408\u6570\u91cf\u5927\u4e8e\u4e00\u7684\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u56e0\u4e3a\u6709\u5411\u73af\u5373\u662f\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u800c\u4e14\u4efb\u4f55\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7686\u5177\u6709\u81f3\u5c11\u4e00\u4e2a\u6709\u5411\u73af\u3002\n(\u4f9d\u7136\u6765\u81ea[Wikipedia](https://zh.wikipedia.org/wiki/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F))\n\n~~\u4f9d\u65e7\u770b\u4e0d\u61c2\u5bf9\u4e0d\u5bf9\uff1f~~\n\n\u90a3\u6211\u4eec\u7ed9\u4e2a\u7b80\u660e\u7684\u5b9a\u4e49\uff1a\n\n>  $$G'=\\{V|V \\in G,\\forall V_a\u2192V_b\\}$$ , $G'$ \u5373\u4e3a\u5f3a\u8fde\u901a\u5206\u91cf\n\n~~\u8fd8\u662f\u770b\u4e0d\u61c2\uff1f~~\n\n\u4e0a\u56fe\n\n![](https://www.jeb.website/img/tarjan1.png)\n\n\u5728\u4e0b\u9762der\u5b50\u56fe\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u70b9\u90fd\u53ef\u4ee5\u7ecf\u8fc7\u67d0\u6761\u6216\u67d0\u51e0\u6761\u8fb9\u5230\u8fbe\u5176\u4ed6\u4efb\u610f\u7684\u4e00\u4e2a\u70b9\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5b50\u56fe\u662f\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u3002\u800c\u5728\u4e0b\u9762\u90a3\u4e2a\u56fe\u4e2d\uff0c\u4e0d\u662f\u6240\u6709\u7684\u70b9\u90fd\u53ef\u4ee5\u53bb\u5230\u5176\u4ed6\u6240\u6709\u7684\u70b9\uff08\u5b9e\u9645\u4e0a\uff0c\u4e00\u4e2a\u90fd\u4e0d\u80fd\uff09\u3002\u6240\u4ee5\uff0c\u8fd9\u4e2a\u5b50\u56fe\u5c31\u4e0d\u662f\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u3002\n\n~~\u53c8\u355b\u53d2\u53d5\u770b\u4e0d\u61c2\uff1f\uff1f\uff1f~~\n\n###### ~~\u6211\u8bf4\u4e86\uff0c\u8fd8\u89e3\u91ca\u4e86\uff0c\u8fd8\u770b\u4e0d\u61c2\uff0c\u6211\u8fd8\u6709\u4ec0\u4e48\u597d\u8bf4\u7684\uff1f~~\n\n\n## \u5b9e\u73b0\n\n### \u601d\u8def\n\n\u6211\u4eec\u968f\u4fbf\u627e\u4e2a\u70b9\u5411\u4e0bdfs\uff0c\u5982\u679c\u82e5\u5e72\u6b21\u540e\u53c8\u53ef\u4ee5\u56de\u5230\u5b83\uff0c\u90a3\u663e\u800c\u6613\u89c1\u7684\uff0c\u4ece\u8be5\u70b9\u56de\u5230\u8be5\u70b9\u7684\u6240\u6709\u7684\u70b9\u6240\u6784\u6210\u7684\u56fe\uff0c\u5373\u4e3a\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u3002\n\n\u53ef\u662f\u6211\u4eecdfs\u7684\u65f6\u5019\uff0c\u53ea\u80fd\u627e\u5230\u8def\u5f84\uff0c\u90a3\u6211\u4eec\u600e\u4e48\u6807\u8bb0\u5b83\u4eec\u662f\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5462\uff1f\n\n\u6211\u4eec\u5f15\u5165**\u8ffd\u6eaf\u503c**\u3002\n\n**\u8ffd\u6eaf\u503c**\u8868\u793a\u5728dfs\u4e2d\uff0c\u5b83\u80fd\u8bbf\u95ee\u7684\u6240\u6709\u70b9\u4e2d\uff0c**dfs\u5e8f**\u6700\u5c0f\u7684\u90a3\u4e2a\u7f16\u53f7\u3002\u5bb9\u6613\u5f97\u51fa\uff0c\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u8ffd\u6eaf\u503c\u90fd\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u628a\u8ffd\u6eaf\u503c\u4e00\u6837\u7684\u70b9\u90fd\u6807\u8bb0\u4e00\u4e0b\u3002\u90a3\u6211\u4eec\u600e\u4e48\u505a\u5230\u6807\u8bb0\u5462\uff1f\u6211\u4eec\u5c31\u8981\u7528\u4e00\u4e2a\u6808\u3002\u5728\u8fdb\u5165dfs\u7684\u65f6\u5019\u628a\u5b83\u538b\u5165\u6808\u91cc\uff0c\u5f53\u6bcf\u4e2a\u53ef\u5230\u8fbe\u7684\u70b9\u7684\u8ffd\u6eaf\u503c\u90fd\u5927\u4e8e\u5b83\u65f6\uff0c\u8bf4\u660e\u5b83\u5c31\u662f\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff08\u5b83\u81ea\u5df1\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff09\u4e2d\u7684dfs\u5e8f\u6700\u5c0f\u7684\u90a3\u4e2a\u70b9\uff08\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u6700\u6d45\u7684\u90a3\u4e2a\u70b9\uff09\uff0c\u4e8e\u662f\u628a\u538b\u5728\u5b83\u4e0a\u9762\u7684\u6808\u7684\u70b9\u90fd\u6253\u4e0a\u6807\u8bb0\u5c31\u597d\u4e86\u3002\n\n### \u4f2a\u4ee3\u7801\n\n```\nalgorithm tarjan is\ninput: \u5716 G = (V, E)\noutput: \u4ee5\u6240\u5728\u7684\u5f37\u9023\u901a\u5206\u91cf\u5283\u5206\u7684\u9802\u9ede\u96c6\n\nindex := 0\nS := empty // \u7f6e\u5806\u758a\u70ba\u7a7a\nfor each v in V do\n if (v.index is undefined)\n   strongconnect(v)\n end if\n\nfunction strongconnect(v)\n // \u5c07\u672a\u4f7f\u7528\u7684\u6700\u5c0findex\u503c\u4f5c\u70ba\u7bc0\u9edev\u7684index\n v.index := index\n v.lowlink := index\n index := index + 1\n S.push(v)\n\n // \u8003\u616ev\u7684\u5f8c\u7e7c\u7bc0\u9ede\n for each (v, w) in E do\n   if (w.index is undefined) then\n     // \u5f8c\u7e7c\u7bc0\u9edew\u672a\u8a2a\u554f\uff0c\u547c\u53eb\u905e\u8ff4\n     strongconnect(w)\n     v.lowlink := min(v.lowlink, w.lowlink)\n   else if (w is in S) then\n     // w\u5df2\u5728\u5806\u758aS\u4e2d\uff0c\u4ea6\u5373\u5728\u7576\u524d\u5f37\u9023\u901a\u5206\u91cf\u4e2d\n     v.lowlink := min(v.lowlink, w.index)\n   end if\n\n // \u82e5v\u662f\u6839\u5247\u51fa\u5806\u758a\uff0c\u4e26\u6c42\u5f97\u4e00\u500b\u5f37\u9023\u901a\u5206\u91cf\n if (v.lowlink = v.index) then\n   start a new strongly connected component\n   repeat\n     w := S.pop()\n     add w to current strongly connected component\n   until (w = v)\n   output the current strongly connected component\n end if\nend function\n\n//Wikipedia\u5927\u6cd5\u597d\n```\n\n### C++\u5b9e\u73b0\n\n#### \u5b9a\u4e49\u4e00\u4e9b\u4e1c\u897f\n\n```cpp\nstruct Node\n{\n\tint y,next;\n};\nNode node[M];//\u90bb\u63a5\u6570\u7ec4\n//dfn dfs\u5e8f\uff0ccntcolor \u6807\u8bb0\u603b\u6570\u7684\u7edf\u8ba1\uff0clow \u8ffd\u6eaf\u503c\uff0ccolor \u6807\u8bb0\uff0ccolortot \u4e0d\u540c\u6807\u8bb0\nint last[N],cntcolor[N],dfn[N],low[N],color[N],tot,colortot,dtot;\nbool vis[N];\nstack<int> st;\nvoid paint();\nvoid tarjan(int x);\npublic:\n\tTarjan();\n\tvoid insert(int x,int y);\n\tint calcAmount(int n);\n```\n\n#### Tarjan\u4ee3\u7801\n\n```cpp\nvoid Tarjan::tarjan(int x)\n{\n\tdfn[x]=low[x]=++dtot;//\u8bb0\u5f55dfs\u5e8f\uff1b\u6bcf\u4e2a\u70b9\u90fd\u53ef\u89c6\u4e3a\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u6240\u4ee5low\u521d\u59cb\u5316\u4e3adfn\n\tst.push(x);//\u538b\u5165\u6808\u4e2d\n\tvis[x]=true;//\u6807\u8bb0\u8bbf\u95ee\u8fc7\n\tfor (int i=last[x];i;i=node[i].next)//\u904d\u5386\u6bcf\u4e2a\u76f8\u8fde\u7684\u70b9\n\t{\n\t\tint y=node[i].y;\n\t\tif (!dfn[y])//\u6ca1\u6709\u641c\u7d22\u8fc7\n\t\t{\n\t\t\ttarjan(y);//\u5411\u4e0b\u66f4\u65b0\n\t\t\tlow[x]=min(low[x],low[y]);//\u66f4\u65b0low\n\t\t}\n\t\telse if (vis[y])//\u641c\u7d22\u8fc7\n\t\t{\n\t\t\tlow[x]=min(low[x],low[y]);//\u76f4\u63a5\u7528\n\t\t}\n\t}\n\tif (dfn[x]==low[x])//\u641c\u7d22\u5b8c\u4e86\n\t{\n\t\tcolortot++;//\u65b0\u52a0\u6807\u8bb0\n\t\twhile (st.top()!=x)\n\t\t\tpaint();//\u5bf9\u4e8e\u6240\u6709\u5728\u5b83\u4e0a\u9762\u7684\u70b9\u6807\u8bb0\n\t\tpaint();//\u6807\u8bb0\u5b83\u81ea\u5df1\n\t}\n}\n```\n\n**\u8981\u6ce8\u610f\u7684\u662f\uff0c\u53ef\u80fd\u4f1a\u6709\u51e0\u4e2a\u5b64\u7acb\u7684\u5b50\u56fe\uff0c\u56e0\u6b64\u8981\u904d\u5386\u6240\u6709\u7684\u70b9\uff0c\u628a\u524d\u9762\u6ca1\u6709\u641c\u8fc7\u7684\u70b9\u90fd\u4e22\u8fdb\u53bbdfs\u641c\u4e00\u4e0b**\n\n\u90a3\u653e\u5b8c\u6574\u4ee3\u7801\u5427\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<vector>\n#include<algorithm>\n#include<stack>\n#define N 1000001\n#define M 1000001\nusing namespace std;\n\n//--------------------------------------------\nclass Tarjan\n{\n\tstruct Node\n\t{\n\t\tint y,next;\n\t};\n\tNode node[M];\n\tint last[N],cntcolor[N],dfn[N],low[N],color[N],tot,colortot,dtot;\n\tbool vis[N];\n\tstack<int> st;\n\tvoid paint();\n\tvoid tarjan(int x);\n\tpublic:\n\t\tTarjan();\n\t\tvoid insert(int x,int y);\n\t\tint calcAmount(int n);\n\t\t\n};\n\nvoid Tarjan::paint()\n{\n\tint x=st.top();\n\tst.pop();\n\tvis[x]=false;\n\tcolor[x]=colortot;\n\tcntcolor[colortot]++;\n}\n\nvoid Tarjan::tarjan(int x)\n{\n\tdfn[x]=low[x]=++dtot;\n\tst.push(x);\n\tvis[x]=true;\n\tfor (int i=last[x];i;i=node[i].next)\n\t{\n\t\tint y=node[i].y;\n\t\tif (!dfn[y])\n\t\t{\n\t\t\ttarjan(y);\n\t\t\tlow[x]=min(low[x],low[y]);\n\t\t}\n\t\telse if (vis[y])\n\t\t{\n\t\t\tlow[x]=min(low[x],low[y]);\n\t\t}\n\t}\n\tif (dfn[x]==low[x])\n\t{\n\t\tcolortot++;\n\t\twhile (st.top()!=x)\n\t\t\tpaint();\n\t\tpaint();\n\t}\n}\n\nTarjan::Tarjan():tot(0),colortot(0),dtot(0)\n{\n\tmemset(node,0,sizeof node);\n\tmemset(last,0,sizeof last);\n\tmemset(cntcolor,0,sizeof cntcolor);\n\tmemset(dfn,0,sizeof dfn);\n\tmemset(low,0,sizeof low);\n\tmemset(color,0,sizeof color);\n} \n\nvoid Tarjan::insert(int x,int y)\n{\n\tnode[++tot]={y,last[x]};\n\tlast[x]=tot;\n}\n\nint Tarjan::calcAmount(int n)\n{\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tif (!dfn[i])//dfn\u4e3a0\uff0c\u8bf4\u660e\u6ca1\u6709\u8bbf\u95ee\u8fc7\n\t\t\ttarjan(i);\n\t}\n\tint ans=0;\n\tfor (int i=1;i<=colortot;i++)\n\t\tif (cntcolor[i]>1)\n\t\t\tans++;\n\treturn ans;\n}\n//--------------------------------------------\n\nTarjan tj;\nint main()\n{\n\tint n,m;\n\tcin>>n>>m;\n\tfor (int i=1,x,y;i<=m;i++)\n\t\tcin>>x>>y,tj.insert(x,y);\n\tcout<<tj.calcAmount(n); \n\treturn 0;\n}\n```\n\n\n## \u677f\u5b50\n\n[\u6d1b\u8c37P2863](https://www.luogu.org/fe/problem/P2863)\n",
        "postTime": 1555143150,
        "uid": 84788,
        "name": "Jeblqr",
        "ccfLevel": 5,
        "title": "Tarjan (\u6709\u5411\u56fe\u5f3a\u8fde\u901a\u5206\u91cf\uff09"
    },
    {
        "content": "\u88f8\u7684\u5f3a\u8fde\u901a\u56fe\uff0c\u7528Tarjan\u5c31\u597d\n\u89e3\u91ca\u90fd\u5728\u6e90\u7a0b\u5e8f\u91cc\u9762\u5566\n```cpp\n//#include <bits/stdc++.h>\n#include <iostream>\n#include <vector>\n#include <cstdio>\n#include <stack>\nusing namespace std;\n\nconst int MAXN = 100000 + 10;\n\nstack<int> S;\nvector<int> G[MAXN]; // \u5b58\u56fe \n\n//n\uff1a\u70b9\u6570 m\uff1a\u8fb9\u6570 deep\uff1a\u6df1\u5ea6 sum\uff1a\u5f3a\u8fde\u901a\u5757\u4e2a\u6570  Ans\uff1a\u7b54\u6848\u4e2a\u6570 \nint n, m, deep, sum, Ans;  \n// dfn low \u90fd\u77e5\u9053\uff0c\uff0c col\uff1a\u7b2c x\u4e2a\u70b9\u67d3\u7684\u4ec0\u4e48\u989c\u8272 \nint dfn[MAXN], low[MAXN], col[MAXN]; \nint cnt[MAXN]; // \u989c\u8272\u4e3a x\u7684\u4e2a\u6570 \nbool vis[MAXN]; // \u5224\u65ad\u6709\u6ca1\u6709\u8bbf\u95ee\u8fc7 \n\nvoid Tarjan(int now) {\n\tvis[now] = true; // \u6807\u8bb0\u4e3a\u8bbf\u95ee\u8fc7\n\tS.push(now); // \u5c06\u8be5\u70b9\u538b\u5165\u6808\u4e2d \n\tdfn[now] = low[now] = ++deep; //\u8bb0\u5f55\u65f6\u95f4\u6233\n\tfor(int i=0; i<G[now].size(); i++) { // \u641c\u7d22\u4e0e\u8be5\u70b9\u8054\u901a\u7684\u70b9 \n\t\tint To = G[now][i]; // \u4e0b\u4e00\u4e2a\u5c06\u8981\u8bbf\u95ee\u7684\u70b9 \n\t\tif(!dfn[To]) { // \u5982\u679c\u6ca1\u6709\u88ab\u641c\u8fc7 \n\t\t\tTarjan(To); //\u5f00\u59cb\u641c\u7d22 \n\t\t\tlow[now] = min(low[now], low[To]); // \u56de\u6eaf\u66f4\u65b0 low\u503c \n\t\t}\n\t\telse if(vis[To]) low[now] = min(low[now], low[To]); // \u641c\u8fc7\u4e86 \u76f4\u63a5\u66f4\u65b0 low \n\t}\n\tif(dfn[now] == low[now]) { // \u627e\u5230\u4e00\u4e2a\u5f3a\u8fde\u901a\u5757\u7684\u6839 \n\t\tcol[now] = ++sum;  // \u67d3\u8272 \n\t\tvis[now] = false;  \n\t\twhile(true) { //\u5c06\u641c\u7d22\u6808\u4e2d\u8be5\u70b9\u4ee5\u4e0a\u7684\u70b9\u5f39\u51fa  \u4ed6\u4eec\u90fd\u662f\u5728\u8fd9\u4e2a\u5f3a\u8054\u901a\u5757\u4e2d \n\t\t\tint x = S.top(); S.pop();\n\t\t\tcol[x] = sum; // \u8be5\u5f3a\u8054\u901a\u5757\u67d3\u6210\u7b2c sum\u79cd\u989c\u8272 \n\t\t\tvis[x] = false;\n\t\t\tif(now == x) break; // \u5c06\u6839\u5f39\u51fa\u540e \u7ed3\u675f\u5faa\u73af \n\t\t}\n\t}\n}\n\nint main() {\n\tscanf(\"%d%d\", &n, &m);\n\tfor(int i=1; i<=m; i++) { // \u8bfb\u5165\u6709\u5411\u56fe \n\t\tint x, y;\n\t\tscanf(\"%d%d\", &x, &y);\n\t\tG[x].push_back(y);\n\t}\n\tfor(int i=1; i<=n; i++) // \u904d\u5386 n\u4e2a\u70b9 \n\t\tif(!dfn[i]) // \u5982\u679c\u8fd9\u4e2a\u70b9\u6ca1\u6709\u88ab\u641c\u8fc7 \u5f00\u59cbTarjan \n\t\t\tTarjan(i);\n\tfor(int i=1; i<=n; i++) // \u8bb0\u5f55\u7b2c i\u79cd\u989c\u8272\u7684\u70b9\u6709\u51e0\u4e2a \n\t\tcnt[col[i]] ++;\n\tfor(int i=1; i<=sum; i++) // \u5982\u679c\u662f\u7b2c i\u79cd\u989c\u8272\u7684\u70b9\u5927\u4e8e1 \u5219\u5c31\u662f\u4e00\u4e2a\u5f3a\u8054\u901a\u5757\n\t\tif(cnt[i] > 1)\n\t\t\tAns ++;\n\tprintf(\"%d\\n\", Ans); // \u8f93\u51fa\u7b54\u6848 \n\treturn 0;\n}\n```",
        "postTime": 1521723345,
        "uid": 19741,
        "name": "Marginalin",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2863 \u3010[USACO06JAN]\u725b\u7684\u821e\u4f1aThe Cow Prom\u3011"
    },
    {
        "content": "#\u7a81\u7136\u53d1\u73b0\u4ee5\u524d\u81ea\u5df1\u633a\u50bb\u7684\n\n\u6b64\u9898\u53ea\u8981\u7ef4\u62a4\u5f3a\u8fde\u901a\u5206\u91cf\u5927\u5c0f\u5c31\u53ef\u4ee5\u4e86\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u6808\u3002\n\n\u9996\u5148\uff0c\u4e00\u6b21dfs\u4f1a\u4e14\u53ea\u4f1a\u627e\u51fa\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u800c\u5b83\u7684\u5927\u5c0f\u5c31\u662f\u8fd9\u6b21dfs\u6700\u5927\u7684pre[x]-low[x]+1\uff0c\u6b64\u9898\u5224\u65ad\u5927\u4e8e1\uff0c\u5373\u4e3apre[x]\u4e0d\u7b49\u4e8elow[x]\n\n\u4e8e\u662f\u6b64\u9898\u5c31\u7b80\u5355\u4e86\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=10001,M=50001;\nint pre[N],low[N],fi[N],nscc[N],isc[N],ne[M],b[M],clk,n,m,x,y,ans;\nbool ri;\nvoid dfs(int x){\n    pre[x]=low[x]=++clk;\n    for (int j=fi[x],y=b[j]; j; j=ne[j],y=b[j])\n    {\n        if (!pre[y]) dfs(y);\n           if (!isc[y]) low[x]=min(low[x],low[y]);\n    }\n    if (pre[x]!=low[x]) ri=1;\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    while (m){\n        scanf(\"%d%d\",&x,&y);\n        b[m]=y; ne[m]=fi[x]; fi[x]=m--;\n    }\n    for (int i=1; i<=n; i++) \n       if (!pre[i]){\n             ri=0;\n             dfs(i);\n             if (ri) ++ans;\n        }        \n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1503231239,
        "uid": 8742,
        "name": "zhaimingshuzms",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2863 \u3010[USACO06JAN]\u725b\u7684\u821e\u4f1aThe Cow Prom\u3011"
    },
    {
        "content": "\u9898\u89e3\u91cc\u6ee1\u5730\u90fd\u662ftarjan\u554a\n\n\u4e3a\u4e86\u8868\u793a\u5bf9\u5199tarjan\u7684\u5404\u4f4d\u9009\u624b\u7684\u656c\u4f69\uff0c\u6211\u5728\u6b64\u4ecb\u7ecd\u4e00\u4e0bkosaraju\u7b97\u6cd5\u5427\n\n\u4ee5\u4e0b\u5185\u5bb9\u6765\u81ea\u300a\u4fe1\u606f\u5b66\u5965\u8d5b\u4e00\u672c\u901a\u300b\uff1a\n\n\u57fa\u4e8e\u4e24\u6b21DFS\u7684\u6709\u5411\u56fe\u5f3a\u8fde\u901a\u5b50\u56fe\u7b97\u6cd5\u3002\n\n\u7b2c\u4e00\u6b65\uff0c\u5bf9\u539f\u6709\u5411\u56feG\u8fdb\u884cDFS\uff0c\u8bb0\u5f55\u7ed3\u70b9\u8bbf\u95ee\u5b8c\u7684\u987a\u5e8fd[i],d[i]\u8868\u793a\u7b2ci\u4e2a\u8bbf\u95ee\u5b8c\u7684\u7ed3\u70b9\u662fd[i];\n\n\u7b2c\u4e8c\u6b65\uff0c\u9009\u62e9\u5177\u6709\u6700\u665a\u8bbf\u95ee\u5b8c\u7684\u9876\u70b9\uff0c\u5bf9\u53cd\u5411\u56feGT\u8fdb\u884cDFS\uff0c\u5220\u9664\u80fd\u591f\u904d\u5386\u5230\u7684\u9876\u70b9\uff0c\u8fd9\u4e9b\u9876\u70b9\u6784\u6210\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\n\n\u7b2c\u4e09\u6b65\uff0c\u5982\u679c\u8fd8\u6709\u9876\u70b9\u6ca1\u6709\u5220\u9664\uff0c\u7ee7\u7eed\u7b2c\u4e8c\u6b65\uff0c\u5426\u5219\u7b97\u6cd5\u7ed3\u675f\n\n\u6240\u4ee5\u6bcf\u6b21\u5728\u505a\u7b2c\u4e8c\u6b21dfs\u7684\u65f6\u5019\uff0c\u7edf\u8ba1\u5220\u9664\u70b9\u7684\u4e2a\u6570\uff0c\u8d85\u8fc71\u4e86\u5c31ans++\n\n\u4e0a\u4ee3\u7801\n\n```\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\nconst int maxn=10001;\nconst int maxm=50001;\n\nstruct edge\n{\n    int v,next;\n}G[maxm*2],G_f[maxm*2];\nint head[maxn],head_f[maxn],vis[maxn],d[maxn];\nint n,m,top=0,top_f=0,cnt=0,ans=0;\n\nint add(int x,int y)\n{\n    G[++top].next=head[x];\n    head[x]=top;\n    G[top].v=y;\n}\n\nvoid add_f(int x,int y)\n{\n    G_f[++top_f].next=head_f[x];\n    head_f[x]=top_f;\n    G_f[top_f].v=y;\n}\n\nvoid dfs1(int x)\n{\n    vis[x]=false;\n    for (int i=head[x];i;i=G[i].next)\n    {\n        int v=G[i].v;\n        if (vis[v]) dfs1(v);\n    }\n    d[++cnt]=x; //\u7edf\u8ba1d\u6570\u7ec4\n}\n\nvoid dfs2(int x)\n{\n    vis[x]=false;\n\tcnt++;\n    for (int i=head_f[x];i!=0;i=G_f[i].next)\n    {\n        int v=G_f[i].v;\n        if (vis[v]) dfs2(v);\n    }\n    return;\n}\n\nvoid kosaraju()\n{\n    memset(vis,true,sizeof(vis));\n    cnt=0;\n    for (int i=1;i<=n;i++)\n        if (vis[i]) dfs1(i);\n    memset(vis,true,sizeof(vis));\n    for (int i=n;i>=1;i--)\n    {\n        int now=d[i];\n        if (vis[now])\n        {\n            cnt=0;\n            dfs2(now);\n            if (cnt!=1) ans++;\n        }\n    }\n    printf(\"%d \",ans);\n}\n\nint main()\n{\n    scanf(\"%d %d\",&n,&m);\n    memset(head,0,sizeof(head));\n    memset(head_f,0,sizeof(head_f));\n    for (int i=1;i<=m;i++)\n    {\n        int a,b;\n        scanf(\"%d %d\",&a,&b);\n\t\tadd(a,b);\n\t\tadd_f(b,a); //\u56fe\u548c\u53cd\u56fe\n    }\n    kosaraju();\n    return 0;\n}\n```",
        "postTime": 1534609666,
        "uid": 5931,
        "name": "Misaka19280",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2863 \u3010[USACO06JAN]\u725b\u7684\u821e\u4f1aThe Cow Prom\u3011"
    },
    {
        "content": "### \u6b64\u9898\u4f5c\u4e3a\u4e00\u9053tarjan\u6a21\u677f\u9898\uff0c\u601d\u8def\u8fd8\u662f\u6bd4\u8f83\u597d\u60f3\n\n\u522b\u770b\u539f\u9898\u4e00\u5927\u5806\u82f1\u6587\uff0c\u7ffb\u8bd1\u8fc7\u6765\u4e4b\u540e\u5404\u79cd\u4e71\u4e03\u516b\u7cdf\u7684\u63cf\u8ff0\n\n\u9898\u610f\u5374\u5f88\u6e05\u6670\uff0c\u5c31\u662f\u7ed9\u6211\u4eec\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u8ba9\u6211\u4eec\u6c42\u8282\u70b9\u6570\u5927\u4e8e1\u7684\u5f3a\u8054\u901a\u5206\u91cf\u7684\u4e2a\u6570\n\n\u81f3\u4e8e\u4ec0\u4e48\u662f\u5f3a\u8054\u901a\u5206\u91cf\u6211\u5c31\u4e0d\u8d58\u8ff0\u4e86\uff0c\u76f8\u4fe1\u5404\u4f4d\u795e\u4ed9\u90fd\u61c2\n\n\u65e2\u7136\u6211\u4eec\u80fd\u6e05\u6670\u7684\u4e86\u89e3\u9898\u610f\uff0c\u90a3\u4e48\u4ee3\u7801\u7684\u601d\u8def\u4e5f\u5c31\u5f88\u660e\u4e86\u4e86\n\n\u76f4\u63a5\u5c31\u662f\u5e38\u89c4tarjan\u601d\u8def\uff0c\u53ea\u4e0d\u8fc7\u591a\u4e86\u4e2a\u7edf\u8ba1\u7f29\u70b9\u540e\u6bcf\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u7684\u91cc\u70b9\u7684\u4e2a\u6570\n\n#### \u4e0b\u9762\u5c31\u662f\u4ee3\u7801\u4e86\uff0c\u770b\u4e0d\u61c2\u6709\u6ce8\u91ca\u5462\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\ninline int read(){\n    int res=0,f=1;char ch=' ';\n    while(!isdigit(ch)){if(ch=='-') f=-1;ch=getchar();}\n    while(isdigit(ch)){res=res*10+ch-'0';ch=getchar();}\n    return res*f;\n}\nconst int N=3e5+5;    //\u5176\u5b9e\u53ef\u4ee5\u4e0d\u5f00\u8fd9\u4e48\u5927\uff0c5e4+5\u5373\u53ef\nint n,m,cnt,cut,to[N],nxt[N],head[N],dfn[N],ins[N],top,low[N],st[N],id,belong[N],ans,vis[N],num[N];\nint _min(int a,int b){return a<b?a:b;}\nvoid qxx(int x,int y){\n\tto[++cnt]=y;\n\tnxt[cnt]=head[x];\n\thead[x]=cnt;\n}\nvoid tarjan(int x){   //\u5e38\u89c4tarjan\u64cd\u4f5c\n\tdfn[x]=low[x]=++id;\n\tst[++top]=x;\n\tins[x]=1;\n\tfor(register int i=head[x];i;i=nxt[i]){\n\t\tint k=to[i];\n\t\tif(!dfn[k]){  //\u5982\u679c\u8fd9\u4e2a\u70b9\u6ca1\u6709\u904d\u5386\u8fc7\uff0c\u5c31\u7ee7\u7eed\u8dd1\n\t\t\ttarjan(k);\n\t\t\tlow[x]=_min(low[x],low[k]);\n\t\t}\n\t\telse if(ins[k])low[x]=_min(low[x],dfn[k]);\n\t}\n\tif(low[x]==dfn[x]){\n\t\t++cut;\n\t\tdo{\n\t\t\tbelong[st[top]]=cut;\n\t\t\tins[st[top]]=0;\n\t\t\tnum[belong[st[top]]]++; \n                        //\u7edf\u8ba1\u7f29\u70b9\u540e\u6bcf\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u7684\u70b9\u6570\n\t\t}while(st[top--]!=x);\n\t}\n}\nint main() {\n\tn=read(),m=read();\n\tfor(register int i=1;i<=m;i++){\n\t\tint l=read(),r=read();\n\t\tqxx(l,r);\n\t}\n\tfor(register int i=1;i<=n;i++)if(!dfn[i])tarjan(i);\n    \t\t\t//\u6240\u6709\u70b9\u5168\u90e8\u8dd1\u4e00\u904d\n\tfor(register int i=1;i<=n;i++)\n\t\tif(!vis[belong[i]]&&num[belong[i]]>1){\n\t\t\tans++;\n\t\t\tvis[belong[i]]=1;//\u7edf\u8ba1\u7b54\u6848\n\t\t}\n\tprintf(\"%d\\n\",ans);\n    return 0;\n}\n```\n#### \u5c31\u662f\u8fd9\u4e48\u7b80\u5355\n",
        "postTime": 1562830855,
        "uid": 123318,
        "name": "ViXpop",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2863 \u3010[USACO06JAN]\u725b\u7684\u821e\u4f1aThe Cow Prom\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\n\n\u5176\u5b9e\u6ca1\u6709\u4ec0\u4e48\u601d\u8def\u7684\u5566\uff0c\u53ea\u662fTarjan\u7b97\u6cd5\u7684\u88f8\u9898\uff0c\u53ea\u8981\u5224\u65ad\u5f3a\u8fde\u901a\u5206\u91cf\u662f\u5426\u59271\u5c31\u884c\u4e86\uff0c\u5982\u679c\u5927\u4e8e\u5c31\u7b54\u6848++\uff0c\u6700\u540e\u8f93\u51fa\u5c31\u884c\u4e86\u3002\n\n\u4e0b\u9762\u4e3a\u8d34\u4ee3\u7801\u8fc7\u7a0b\n\n\n\n\n\n\n\n    \n\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<stack>\n#define N 10009\n#define M 50009\nusing namespace std;\nint en,ans,n,m;\nint t,cnt,low[N],dfn[N];\nbool instack[N];\nstack<int> sta;\nstruct edge{\n    int e;\n    edge *next;\n}*v[N],ed[M];\nvoid add_edge(int s,int e){\n    en++;\n    ed[en].next = v[s],v[s] = ed+en,v[s]->e = e;\n}\nvoid dfs(int now){\n    t++;\n    low[now] = dfn[now] = t;\n    instack[now] = true;\n    sta.push(now);\n    for(edge *e = v[now];e;e = e->next)\n      if(!dfn[e->e]){\n              dfs(e->e);\n              low[now] = min(low[now],low[e->e]);\n      }\n      else if(instack[e->e])low[now] = min(low[now],dfn[e->e]);\n    if(dfn[now] == low[now]){\n        cnt++;\n        int siz = 0;\n        while(sta.top() != now){\n            instack[sta.top()] = false;\n            siz++;\n            sta.pop();\n        }\n        instack[now] = false;\n        sta.pop();\n        siz++;\n        if(siz > 1)ans++;\n    }\n}\nvoid tarjan(){\n    for(int a = 1; a<= n; a++)\n      if(!dfn[a])dfs(a);\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i = 1; i <= m; i++){\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        add_edge(x,y);     //\u6709\u5411\u56fe \n    }\n    tarjan();\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1504791953,
        "uid": 32526,
        "name": "\u9648\u65b0\u6708",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2863 \u3010[USACO06JAN]\u725b\u7684\u821e\u4f1aThe Cow Prom\u3011"
    },
    {
        "content": "### \u521a\u521a\u624d\u53d1\u73b0\u7528$vector$\u505a$Tarjan$\u5f88\u597d\u7528\u3001\u3001\n\u5176\u5b9e\u8fd9\u4e2a\u9898\u76ee\u5c31\u662f\u4e00\u4e2a$Tarjan$\u6c42\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u88f8\u9898\uff0c\u672c~~\u795e\u7287~~\u5728\u5f88\u65e9\u4ee5\u524d\u5c31\u5df2\u7ecf\u5199\u8fc7\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u4f46\u662f\u53d1\u73b0\u8fd9\u9053\u9898\u76ee\u7684\u65f6\u5019~~\u65e9\u5c31\u5df2\u7ecf\u5fd8\u5f97\u4e00\u5e72\u4e8c\u51c0\u4e86~~\u6211\u9760( \u2035o\u2032)\u51f8,$I$\u670d\u4e86$U!!$\n1. \u597d\u4e86\uff0c\u4e0d\u5f00\u73a9\u7b11\u4e86\uff0c\u5176\u5b9e\u7528$vector$\u5199$Tarjan$\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff0c\u4e0d\u7528\u50cf\u5404\u79cd\u56fe\u8bba\u9898\u76ee\u4e00\u6837\u5199\u4e2a$add$()\u5efa\u56fe\uff0c\u76f4\u63a5\u6807\u8bb0\u4e00\u4e0b\u5c31\u53ef\u4ee5\u7528\uff0c~~\u50cf\u6211\u8fd9\u79cd\u61d2\u5f97\u591a\u4e00\u53e5\u90fd\u5f88\u96be\u53d7\u7684\u4eba\uff0c~~\u8fd8\u662f\u5f88\u9002\u5408\u6211\u7684\u4e48\u3002\u3002\n2. \u5176\u5b9e\u8fd9\u4e2a\u9898\u76ee\u8dd1\u5b8c$Tarjan$\u4e4b\u540e\u5224\u65ad\u4e00\u4e0b$cnt>1$\uff0c\u6210\u7acb\u7684\u8bdd\u5c31$ans$++\uff0c\u6700\u540e\u8f93\u51fa$ans$\u5c31\u53ef\u4ee5\u4e86\u3002\n#### \u7c98\u4e00\u4e0b\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<vector>\n#define N 10010\nusing namespace std;\nvector<int>g[N];\nint color[N],dfn[N<<1],low[N<<1],stack[N<<1],vis[N],cnt[N],deep,top,n,m,sum,ans;\ninline void tarjan(int u)\n{\n\t\n\tvis[u]=1;\t\t\t\t//\u5224\u65ad\u6709\u6ca1\u6709\u8bbf\u95ee\u8fc7\n\tstack[++top]=u;          //\u624b\u52a8\u5efa\u7acb\u4e00\u4e2a\u6808\n    dfn[u]=++deep;           //\u5176\u5b9e\u8fd9\u4e24\u4e2a\u624d\u662f\u6700\u91cd\u8981\u7684\uff0c~~\u697c\u4e0b\u5927\u4f6c\u5df2\u7ecf\u8bb2\u7684\u591f\u6e05\u695a\u4e86\uff0c\u672c\u795e\u7287\u5c31\u4e0d\u591a\u8bb2\u4e86~~\n\tlow[u]=deep;\n\tint sz=g[u].size();\n\tfor(int i=0;i<sz;i++)\n\t{\n\t\tint v=g[u][i];\n\t\tif(!dfn[v])\n\t\t{\n\t\t\ttarjan(v);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}\n\t\telse\n\t\t\tif(vis[v])\n\t\t\t\tlow[u]=min(low[u],low[v]);\n\t}\n\tif(dfn[u]==low[u])\n\t{\n\t\tcolor[u]=++sum;\n\t\tvis[u]=0;\n\t\twhile(stack[top]!=u)\n\t\t{\n\t\t\tcolor[stack[top]]=sum;\n\t\t\tvis[stack[top--]]=0;\n\t\t}\n\t\ttop--;\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint a,b;\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tg[a].push_back(b);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(!dfn[i])\n\t\t\ttarjan(i);\n\tfor(int i=1;i<=n;i++)\n\t\tcnt[color[i]]++;\n\tfor(int i=1;i<=sum;i++)\n\t\tif(cnt[i]>1)\n\t\t\tans++;\n\tprintf(\"%d\",ans);\n    return 0;                //~~\u7a0b\u5e8f\u5b8c\u7f8e\u7684\u7ed3\u675f\uff0c~~AC\u5566\uff01\uff01\n}\n```",
        "postTime": 1521252747,
        "uid": 66635,
        "name": "Ervin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2863 \u3010[USACO06JAN]\u725b\u7684\u821e\u4f1aThe Cow Prom\u3011"
    },
    {
        "content": "**Tarjan\u7f29\u70b9\u7b80\u5355\u9898**\n\n\u5982\u679c\u4e0d\u4f1aTarjan\u7f29\u70b9\u7684\u8bdd\uff0c\u8bf7\u770b\u4e00\u4e0b\u6559\u7a0b\u5427\uff1b\n\n\u6709\u51e0\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u70b9\uff1a\n\n1.\u6570\u7ec4\u4e00\u5b9a\u8981\u5f00\u5f97\u591f\u5927\uff0c\u5c3d\u91cf\u8981\u6bd4\u7ed9\u51fa\u7684\u6570\u636e\u8303\u56f4\u5927\u4e0a\u4e00\u4e9b\uff1b\n\n2.\u9898\u76ee\u4e2d\u7ed9\u51fa\u7684\u7ef3\u7d22\uff08\u5373\u8fb9\uff09\u662f\u5355\u5411\u7684\uff1b\u5b58\u56fe\u65f6\u8981\u6ce8\u610f\n\n\u4e3b\u8981\u601d\u8def\u5c31\u662f\u8d70\u4e00\u904dTarjan\uff0c\u518d\u53bb\u7edf\u8ba1\u4e00\u4e0b\u7f29\u70b9\u540e\u7684\u70b9\u7684size\u503c\u5927\u4e8e1\u7684\u4e2a\u6570\uff0c\u5373\u4e3a\u7b54\u6848\uff1b\n\n\u4ee3\u7801\u5728\u8fd9\u91cc\n```cpp\n#include<iostream>\n#include<cstdio>\n#define cq(i,s,n) for(int i=s;i<=n;i++)\nusing namespace std;\nstruct edge{\n\tint nxt,to;\n}edge[400005];\n\nint head[400005],vis[400005];\nint n,m,x,y,a,b,num,ans;\nint tot,col;\nint dfn[400005],low[400005],st[400005],belong[400005];\nint size[400005];\nint top;\n\nvoid add(int from,int to){\n\tedge[++num].nxt=head[from];\n\tedge[num].to=to;\n\thead[from]=num;\n}\n\nvoid Tarjan(int u){\n\tdfn[u]=low[u]=++tot;\n\tst[++top]=u;\n\tfor(int i=head[u];i;i=edge[i].nxt){\n\t\tint v=edge[i].to;\n\t\tif(!dfn[v]){\n\t\t\tTarjan(v);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}\n\t\telse if(!belong[v]){\n\t\t\tlow[u]=min(low[u],dfn[v]);\n\t\t}\n\t}\n\tif(low[u]==dfn[u]){\n\t\tbelong[u]=++col;\n\t\tsize[belong[u]]++;\n\t\twhile(st[top]!=u){\n\t\t\tbelong[st[top]]=col;\n\t\t\tsize[belong[u]]++;\n\t\t\ttop--;\n\t\t}\n\t\ttop--;\n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tcq(i,1,m){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y);\n//\t\tadd(y,x);   \u6ce8\u610f\u5b58\u5355\u5411\u8fb9\n\t}\n\tcq(i,1,n){\n\t\tif(!dfn[i])Tarjan(i);\n\t}\n\tcq(i,1,col){\n\t\tif(size[i]>1)ans++;\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n} \n```",
        "postTime": 1534204664,
        "uid": 87942,
        "name": "w_x_c_q",
        "ccfLevel": 0,
        "title": "P2863 [USACO06JAN]\u725b\u7684\u821e\u4f1aThe Cow Prom"
    },
    {
        "content": "~~\u849f\u84bb\u53d1\u9898\u89e3\u5566~~\n\n\u4e00\u9053\u5341\u5206\u7b80\u5355\u7684tarjan\u6a21\u7248\u9898\uff0c\u6ca1\u5b66\u8fc7tarjan\u7684\u53ef\u4ee5[\u770b\u770b](https://blog.csdn.net/qq_34374664/article/details/77488976)\n\n\uff08\u7f51\u4e0a\u627e\u7684\uff0c\u6ca1\u6709\u5e2e\u4eba\u5ba3\u4f20\u7684\u610f\u601d\uff09\n\n\u5269\u4e0b\u7684\u5c31\u76f4\u63a5\u5957\u6a21\u7248\u5566~\u53ea\u8981\u5224\u65ad\u4e00\u4e0b\u5f3a\u8054\u901a\u5206\u91cf\u70b9\u7684\u4e2a\u6570\u5c31\u884c\u8fa3\n\n~~\u8d34\u4ee3\u7801~~\n```cpp\n#include<iostream>\nusing namespace std;\nint head[100010],n,m;\nint dfn[100010]={0},low[100010],sta[100010],dn=0\uff1b\nint ans=0,top=0,cnt=0;\nint num[100010]={0};\nbool vis[100010]={0};\n\nstruct Edge //\u524d\u5411\u661f\u5b58\u56fe\uff0c\u90bb\u63a5\u8868\u4f1a\u7206\n{\n\tint to,next;\n}edge[100010];\n\nvoid add(int u,int v,int c)//\u8fde\u8fb9\n{\n\tedge[c].to=v;\n\tedge[c].next=head[u];\n\thead[u]=c;\n}\n\nvoid tarjan(int x)//tarjan\u672c\u4f53~~\n{\n\tdfn[x]=++dn;\n\tlow[x]=dn;\n\tvis[x]=true;\n\tsta[++top]=x;\n\tfor(int i=head[x];i;i=edge[i].next)\n\t{\n\t\tint k=edge[i].to;\n\t\tif(!dfn[k])\n\t\t{\n\t\t\ttarjan(k);\n\t\t\tlow[x]=min(low[x],low[k]);\n\t\t}\n\t\telse if(vis[k]) low[x]=min(low[x],low[k]);\n\t}\n\tif(dfn[x]==low[x])\n\t{\n\t\t++cnt;\n\t\tdo\n\t\t{\n\t\t\tnum[cnt]++;\n\t\t\tvis[sta[top--]]=false;\n\t\t}while(sta[top+1]!=x);\n\t}\n}\n\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++)//\u8f93\u5165\u8fde\u8fb9\n\t{\n\t\tint u,v;\n\t\tcin>>u>>v;\n\t\tadd(u,v,i);\n\t}\n\tfor(int i=1;i<=n;i++)//\u9632\u6b62\u6f0f\u70b9\n\t\tif(!dfn[i])\n\t\t\ttarjan(i);\n\tfor(int i=1;i<=cnt;i++)//\u68c0\u9a8c\u8fd9\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u7684\u70b9\u4e2a\u6570\u662f\u5426\u5927\u4e8e\u4e00\n\t\tif(num[i]>1)\n\t\t\tans++\uff1b\n\tcout<<ans;\n\treturn 0;\n}\n```\n",
        "postTime": 1547013220,
        "uid": 40796,
        "name": "wohohohoho",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2863 \u3010[USACO06JAN]\u725b\u7684\u821e\u4f1aThe Cow Prom\u3011"
    },
    {
        "content": "tarjan\u6c42\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u57fa\u7840\u9898\n\n\u4e3b\u8981\u5229\u7528\u4e86dfs\u56de\u6eaf\u65f6\u7684\u201c\u8fde\u9501\u53cd\u5e94\u201d\u5224\u65ad\u5f3a\u8fde\u901a\u5206\u91cf\n\n\n\u7531\u4e8edfs\u56de\u6eaf\u7684\u81ea\u8eab\u6027\u8d28\uff1b\u4f1a\u628a\u5927\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u5305\u542b\u7684\u5c0f\u5206\u91cf\u6210\u5458\u5148\u51fa\u6808\uff0c\u4f46\u8fd9\u9053\u9898\u53ea\u8003\u8651\u5206\u91cf\u6570\u91cf\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u7528\u8bb0\u5f55\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u6df1\u5ea6\u6700\u4f4e\u7684\u70b9\uff08\u5373\u521d\u70b9\uff09\u6709\u591a\u5c11\u4e2a\u5c31\u80fd\u6c42\u51fa\u5206\u91cf\u6570\u91cf\n\n\u4f46tarjan\u4e2d\u7684\u51fa\u6808\u64cd\u4f5c\u540c\u6837\u4f1a\u628a\u4e0d\u5c5e\u4e8e\u5f3a\u8fde\u901a\u5206\u91cf\u7684 \u53f6\u8282\u70b9 \u5f53\u505a\u521d\u70b9\u8131\u51fa\uff0c\u7531\u4e8e\u53ea\u6709\u56de\u6eaf\u5230\u521d\u70b9\u8fd9\u5c42\u65f6\u624d\u4f1a\u6709\u51fa\u6808\u64cd\u4f5c\uff0c\u6211\u4eec\u7528sum\u6570\u7ec4\u5224\u65ad\u4ee5u\u4e3a\u521d\u70b9\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u6709\u51e0\u4e2a\u6210\u5458\uff0c\u6210\u5458\u5927\u4e8e1\u624d\u662f\u5408\u6cd5\u5f3a\u8fde\u901a\u5206\u91cf\n\n```cpp\n#include<iostream>\nusing namespace std;\nint n,m;\nint nxt[50001],to[50001],x[10001];\n\nint dfn[10001],low[10001],vis[10001];//dfn:dfs\u5e8f(\u8d8a\u6df1\u8d8a\u5927\uff0c\u5206\u91cf\u521d\u70b9\u5728\u6574\u4e2a\u5206\u91cf\u4e2d\u6700\u5c0f)  low[]:\u8be5\u70b9\u53ca\u5176\u5b50\u5b59\u4e2d\u80fd\u8fde\u5230\u7684dfn\u4e2d\u7684\u6700\u5c0f\u503c  vis[]:\u8be5\u70b9\u662f\u5426\u5728\u6808\u4e2d\uff08\u4e0d\u662f\u662f\u5426\u641c\u8fc7\uff01\uff09\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u521d\u59cb\u65f6\u662f\u81ea\u5df1\u80fd\u8fde\u5230\u7684\u6700\u5c0f\u503c\nint sta[10001],q=0;\nint sum[10001];\n\nvoid dfs(int u,int deep)\n{\n\tdfn[u]=deep;\n\tlow[u]=deep;\n\tvis[u]=1;\n\tsta[++q]=u;\n\tfor(int j=x[u];j!=0;j=nxt[j])\n\t{\tint v=to[j];\n\tif(!dfn[v])//\u4e0b\u4e00\u4e2a\u70b9\u6ca1\u641c\u8fc7\uff0c\u7ee7\u7eed\u641c\u4e0b\u53bb\n\t\t{\n\t\t\tdfs(v,deep+1);\n\t\t\tlow[u]=std::min(low[u],low[v]);//\u653e\u5728dfs\u540e\u66f4\u65b0\u5f88\u5173\u952e\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u81ea\u5df1\u7684\u5b50\u5b59\u627e\u5230\u56de\u5230\u201c\u56de\u5230\u8fc7\u53bb\uff08\u5206\u91cf\u521d\u70b9\uff09\u201d\u7684\u8def\u5f84\u540e\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u7531\u4e0b\u4e00\u4e2aelse if\u66f4\u65b0low[],\u7136\u540e\u5728\u56de\u6eaf\u65f6\u8fde\u9501\u66f4\u65b0\uff08\u4e0d\u8d85\u8fc7\u521d\u70b9\u7684\uff09\u7956\u5148\u7684low[]\n\t\t}\n\t\telse if(vis[v])//\u4e0b\u4e2a\u70b9\u5df2\u7ecf\u8fdb\u6808\uff08\u662f\u7956\u5148\uff09\n\t\t{\n\t\t\tlow[u]=std::min(low[u],low[v]);//\u7956\u5148\u7684low[]\u80af\u5b9a\u5c0f\uff0c\u8fd9\u91cc\u5c31\u662f\u628a\u5f53\u524d\u8282\u70b9\u7684low[]\u6307\u5411\u5206\u91cf\u521d\u70b9\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u8fd9\u91cc\u66f4\u65b0\u540e\uff0c\u81ea\u5df1\u7684\u7236\u8282\u70b9\u4f1a\u548c\u81ea\u5df1\u6bd4\u8f83\uff0c\u56e0\u4e3a\u81ea\u5df1\u7684low[]\u4e2d\u5e26\u5206\u91cf\u521d\u70b9\u7684\u503c(low[]\u5728\u5206\u91cf\u4e2d\u6700\u5c0f)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u53ea\u8981\u81ea\u5df1\u7684\u7236\u8282\u70b9\u5728\u5206\u91cf\u5185\u90e8\uff0c\u4e0e\u81ea\u5df1\u53d6min\u503c\u5fc5\u4f1a\u4e5f\u66f4\u65b0\u4e3a\u5206\u91cf\u521d\u70b9\u7684\u503c\n\t\t\t\n\t\t}\n\t}\n\tif(dfn[u]==low[u])//\u8be5\u70b9\u6ca1\u6709\u51fa\u8fb9 /\u8be5\u70b9\u662f\u5206\u91cf\u521d\u70b9  \u5c31\u4f1a\u8fdb\u53bbif()\n\t{\n\t\twhile(sta[q]!=u)\n\t\t{\n\t\t\tvis[sta[q]]=0;//\u51fa\u6808\n\t\t\tq--;\n\t\t\tsum[u]++;//\u4e00\u822c\u9700\u8981\u6c42\u5206\u91cf\u7684\u6570\u91cf\u3001\u7ec4\u5408\u7b49\u5c31\u5728\u51fa\u6808\u65f6\u7528\u6570\u7ec4\u5b58\u50a8\u8bb0\u5f55\n\t\t}\n\t\tvis[sta[q]]=0;\n\t\tq--;//\u5f3a\u8fde\u901a\u5206\u91cf\u521d\u70b9\u5355\u72ec\u51fa\u6808\n\t\tsum[u]++;\n\t}\n\t\n}\n\n\nint main()\n{\n\nstd::ios::sync_with_stdio(0);\ncin>>n>>m;\nint cnt=0;\nint a,b;\nfor(int i=1;i<=m;i++)\n{\n\tcin>>a>>b;\n\tcnt++;\n\tto[cnt]=b;\n\tnxt[cnt]=x[a];\n\tx[a]=cnt;\n}\n\nfor(int i=1;i<=n;i++)\n{\t\t\t\t\t\t\t//dfn\u6709\u8d4b\u503c\u4ee3\u8868\u641c\u8fc7\uff0c\u4e0d\u71360\nif(!dfn[i])dfs(i,1);//\u7528dfn\u8868\u793a\u8be5\u70b9\u6709\u6ca1\u6709\u641c\u8fc7\uff08\u641c\u8fc7\u4e0d\u4e3a0\uff09\n\t\t\t\t\t\t//\u6ce8\u610fvis[]\u8868\u793a\u662f\u5426\u5728\u6808\u4e2d\uff0c\u4e0e\u662f\u5426\u641c\u8fc7\u65e0\u5173\n}\nint ans=0;\nfor(int i=1;i<=n;i++)\n{\n\tif(sum[i]>1)ans++;//sum==1\u7684\u70b9\u662f\u6ca1\u6709\u4e0b\u4e00\u6761\u51fa\u8fb9\u800c\u51fa\u6808\u7684\u70b9\uff0c\u53bb\u6389\n\t\n}\n\ncout<<ans;\n\n\nreturn 0;\n}\n\n```",
        "postTime": 1541075225,
        "uid": 110873,
        "name": "Coding\u7684\u4e8c\u8425\u957f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2863 \u3010[USACO06JAN]\u725b\u7684\u821e\u4f1aThe Cow Prom\u3011"
    },
    {
        "content": "\u8d64\u88f8\u88f8\u7684\u677f\u5b50\uff0c\u5c31\u52a0\u4e00\u4e2a\u7279\u5224\u5c31\u884c\u3002\u76f4\u63a5\u4e0a\u4ee3\u7801\n\n```cpp\n#include<stdio.h>\n#include<algorithm>\n#include<iostream>\nusing namespace std;\nbool ins[10000000];//\u8bb0\u5f55\u5165\u6ca1\u5165\u6808\u3002\nbool typ[10000000];//\u7279\u5224*1\uff0c\u662f\u5f3a\u8fde\u901a\u5206\u91cf\u5c31\u76f4\u63a5\u8fc7\u4e86\u3002\nint top;int ans[10000000];\nint stack[10000000];//\u624b\u5199\u6808\u3002\nvoid push(int x)//\u624b\u5199\u6808ing.\n{\n    ins[x]=true;\n    stack[++top]=x;\n    return ;\n}\nvoid pop()\n{\n    ins[stack[top]]=false;\n    top--;\n    return ;\n}\nstruct data{\n    int v;int next;\n}edge[10000000];\nint cnt;int alist[10000000];\nvoid add(int u,int v)//\u7ee7\u7eed\u624b\u5199\u7ed3\u6784\u4f53\u3002\n{\n    edge[++cnt].v=v;\n    edge[cnt].next=alist[u];\n    alist[u]=cnt;\n}\nint dfn[100000];int dfu;//dfn\u4f5c\u4e3ax\u7684\u5165\u6808\u5e8f\u53f7\u3002\nint low[1000000];int res=0;\nvoid dfs(int x)//dfs\n{\n    dfn[x]=++dfu;//\u8bb0\u5f55\u641c\u7d22\u5e8f\u53f7\n    push (x);\n    low[x]=dfn[x];\n    int next=alist[x];\n    while(next)\n    {\n        int v=edge[next].v;\n        if(ins[v]==true)//\u88ab\u641c\u8fc7\u5c31\u4e0d\u7528\u518d\u641c\u4e86\n        {\n            low[x]=min(low[x],low[v]);\n        }\n        else if(ins[v]==false)\n        {\n            dfs(v);\n            low[x]=min(low[x],low[v]);\n        }\n        next=edge[next].next;\n    }\n    if(dfn[x]==low[x])//\u5982\u679c\u641c\u56de\u6765\u4e86\u3002\n    {\n        while(low[stack[top]]==low[x])\n        {\n            typ[stack[top]]=true;\n            pop();\n            ans[x]++;\n        }\n        if(ans[x]>1) res++;//\u60f3\u8981\u8f6c\u5708\u7684\u8bdd\u5fc5\u987b\u8981\u4e24\u4e2a\u4eba\u53ca\u4ee5\u4e0a\u3002\n    }\n    return;\n}\nint n,m;\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        int n1,m1;\n        scanf(\"%d%d\",&n1,&m1);//\u4e0d\u89e3\u91ca\u3002\n        add(n1,m1);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(typ[i]==1) continue;//\u8981\u662f\u5728\u626b\u8fc7\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u9762\u76f4\u63a5\u8fc7\u3002\n        else dfs(i);\n    }\n    printf(\"%d\",res);\n    return 0;//\u7a0b\u5e8f\u62dc\u62dc\n}\n```",
        "postTime": 1508925245,
        "uid": 57699,
        "name": "Arcturus1350",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2863 \u3010[USACO06JAN]\u725b\u7684\u821e\u4f1aThe Cow Prom\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\u88f8\u5730\u677f\u5b50\u9898\uff0c\u88f8\u5230\u4e00\u5b9a\u5883\u754c\u4e86\u3002\u3002\u3002\uff08\u6c42\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u4e2a\u6570\u3002\u3002\u3002\u3002\u3002\uff09\n\n\n\u53ea\u9700\u8981\u5728\u677f\u5b50\u91cc\u9762\u52a0\u4e00\u4e2a\u7edf\u8ba1\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2a\u6570\u7684ans\uff0c\u7531\u4e8e\u6211\u4eec\u6c42\u7684\u662f\u7ec4\u5408\uff0c\u4e00\u4e2a\u4eba\u80af\u5b9a\u4e0d\u662f\u4e00\u4e2a\u7ec4\u5408\u5bf9\u5427\uff1f\uff01\n\n\n\u8fd9\u6837\u6211\u4eec\u5728\u5224\u65ad\u4e00\u4e0bans\u662f\u5426\u7b49\u4e8e1\uff0c\u5982\u679c\u662f\u7684\u8bdd\u5f3a\u8054\u901a\u5206\u91cf\u7684\u4e2a\u6570-1.\n\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define N 100001\nusing namespace std;\nbool vis[N];\nint n,m,x,y,tim,tot,top,sum;\nint head[N],dfn[N],low[N],stack[N],belong[N];\ninline int read()\n{\n    int x=0,f=1; char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-') f=-1; ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0'; ch=getchar();}\n    return x*f;\n}\nstruct Edge\n{\n    int from,next,to;\n}edge[N];\nint add(int x,int y)\n{\n    tot++;\n    edge[tot].to=y;\n    edge[tot].next=head[x];\n    head[x]=tot;\n}\nint tarjan(int now)\n{\n    dfn[now]=low[now]=++tim;\n    stack[++top]=now;vis[now]=true;\n    for(int i=head[now];i;i=edge[i].next)\n    {\n        int t=edge[i].to;\n        if(vis[t]) low[now]=min(low[now],dfn[t]);\n        else if(!dfn[t]) tarjan(t),low[now]=min(low[now],low[t]);\n    }\n    if(low[now]==dfn[now])\n    {\n        sum++;belong[now]=sum;\n        int ans=1;\n        for(;stack[top]!=now;top--)\n        {\n            vis[stack[top]]=false;\n            belong[stack[top]]=sum;\n            ans++;\n        }\n        vis[now]=false;top--;\n        if(ans==1) sum--;\n    }\n}\nint main()\n{\n    n=read(),m=read();\n    for(int i=1;i<=m;i++)\n     x=read(),y=read(),add(x,y);\n    for(int i=1;i<=n;i++)\n      if(!dfn[i]) tarjan(i);\n    printf(\"%d\",sum);\n    return 0;\n}\n\n```",
        "postTime": 1497753337,
        "uid": 43615,
        "name": "QwQ_operator",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2863 \u3010[USACO06JAN]\u725b\u7684\u821e\u4f1aThe Cow Prom\u3011"
    },
    {
        "content": "\n**\u8fd9\u9898\u662ftarjan\u6c42\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6a21\u677f\u9898\u3002**\ntarjan\u7b97\u6cd5\u662f\u7528\u6765\u6c42\u6709\u5411\u56fe\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u7b97\u6cd5\uff0c\u4f5c\u7528\u662f\u8fdb\u884c\u7f29\u70b9\u64cd\u4f5c\uff0c\u56e0\u4e3a\u6709\u4e9b\u7b97\u6cd5\u662f\u9700\u8981DAG\u56fe\uff08\u6709\u5411\u65e0\u73af\u56fe\uff09\u624d\u80fd\u8fdb\u884c\u64cd\u4f5c\u7684\uff0c\u6240\u4ee5\u5f88\u591a\u56fe\u8bba\u7b97\u6cd5\u4e4b\u524d\u90fd\u9700\u8981\u8fdb\u884c\u7f29\u70b9\u3002\n\ntarjan\u7b97\u6cd5\u6838\u5fc3\u9700\u8981\u4e24\u4e2a\u6570\u7ec4\uff1a\ndfn[i] \uff1a\u7528\u6765\u5b58\u50a8\u6574\u5f20\u56fe\u904d\u5386\u5230 i \u8282\u70b9\u7684\u65f6\u95f4\u987a\u5e8f\uff0c\u4ece 1 \u5f00\u59cb\u8ba1\u6570\u3002\nlow[i] \uff1a\u8282\u70b9 i \u80fd\u591f\u56de\u6eaf\u5230\u7684\u6700\u65e9\u4f4d\u4e8e\u6808\u4e2d\u7684\u8282\u70b9\u3002\n\n\u6b64\u5916\u8fd8\u9700\u8981\u4e00\u4e2a\u6570\u7ec4\u7528\u6765\u6a21\u62df\u6808\u3002\n\t[\u8be6\u7ec6\u63a8\u8350\u6587\u7ae0~]\n\n\u5bf9tarjan\u7b97\u6cd5\u7684\u7406\u89e3\uff1a\n1\u3001\u5bf9\u4e8e\u6808\u4e2d\u5143\u7d20u\uff0c\u90a3\u4e48u\u4e0a\u9762\u7684\u8282\u70b9\uff08\u5bf9\u4e8e\u6808\uff09\u5c31\u662f\u4ee5 **\u201cu\u4e3a\u6839\u7684\u5f3a\u8fde\u901a\u201d** \u7684\u8282\u70b9\uff0c**u\u8282\u70b9\u4e00\u5b9a\u4f1a\u901a\u8fc7\u6709\u5411\u56fe\u8fbe\u5230\u8fd9\u4e9b\u8282\u70b9\u3002**\n\n2\u3001\u5bf9\u4e8e\u904d\u5386\u5230\u65b0\u8282\u70b9\uff08\u5373\u672a\u88ab\u8bbf\u95ee\u8fc7\u7684\uff09\u65f6\uff0c\u518d\u6b21\u4ee5DFS\u5f62\u5f0f\uff0c\u8fdb\u884c\u5411\u5185\u6df1\u641c\uff0c\u800c\u9012\u5f52\u8fd4\u56de\u65f6\uff0c\u5e94\u8be5**low[u]=min\uff08low[u],low[v]\uff09**\u3002\u610f\u4e49\u5c31\u662f\uff0c\u53d6 u \u80fd\u591f\u56de\u6eaf\u7684\u6700\u65e9\u4f4d\u4e8e\u6808\u4e2d\u7684\u8282\u70b9\uff0c\u800c\u7531\u4e8e v \u662f\u65b0\u8282\u70b9\uff0c\u6240\u4ee5\u9012\u5f52\u5230\u8fd9\u65f6 v \u4e00\u5b9a\u5df2\u7ecf\u5728\u6808\u4e2d\u3002\n\n3\u3001\u5bf9\u4e8e\u904d\u5386\u5230\u8001\u8282\u70b9\uff08\u5373\u5df2\u7ecf\u88ab\u8bbf\u95ee\u8fc7\u7684\uff09\u65f6\uff0c\u4e14 v \u8282\u70b9\u5df2\u7ecf\u5728\u6808\u4e2d\u3002\u5219\u5e94\u8be5**low[u]=min(low[u],dfn[v])** \u3002\u7531\u4e8e v \u88ab\u904d\u5386\u8fc7\uff0c\u4e14 v \u5728\u6808\u4e2d\uff0c\u8bf4\u660e\u56fe\u4e2d**\u8fd8\u53ef\u80fd\u4f1a\u6709\u4e00\u4e2a \u4ee5 v \u8282\u70b9\u4e3a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6839\u8282\u70b9**\u3002\n\n v \u5728\u6808\u4e2d\uff0c\u8fd8\u8bf4\u660e\u5b83\u80af\u5b9a\u6bd4 u \u66f4\u5148\u904d\u5386\u5230\uff0c\u800c\u6b64\u65f6\u6709 u -> v \u8fd9\u6761\u8fb9\uff0c\u5219**\u8bf4\u660e u \u4e0e v \u662f\u53cc\u5411\u53ef\u8fbe\u7684**\uff0c\u5373\u8bf4\u660e **v \u56de\u6eaf\u65f6\u4e00\u5b9a\u53ef\u4ee5\u5230 u**\uff0c\u800c\u4e3a\u4e86\u6ee1\u8db3 low[]\u6570\u7ec4\u7684\u6761\u4ef6\uff0c\u6240\u4ee5\u76f4\u63a5\u53d6**low[u]=min(low[u],dfn[v])** \u5373\u53ef\u3002\n \n 4\u3001\u82e5 u \u70b9\u9000\u51fa\u4e86for\u5faa\u73af\uff0c\u8bf4\u660e\u4ee5 u \u4e3a\u8d77\u70b9\u7684\u8fb9\u5df2\u7ecf\u904d\u5386\u5b8c\u4e86\uff0c\u82e5\u6b64\u65f6\u4ecd\u7136\u6709 **low[u]==dfn[u]**\uff0c\u5219\u8bf4\u660e**\u6709\u4e00\u4e2a\u4ee5 u \u4e3a\u6839\u8282\u70b9\u7684\u6811**\uff0c\u8fd9\u4e2a\u6811\u4e0a\u7684\u8282\u70b9\u7684low[]\u6570\u7ec4\u503c\u90fd\u4e3alow[u]\u503c\uff0c\u5219\u8bf4\u660e\u8fd9\u6811\u4e0a\u7684\u70b9\u90fd\u76f8\u4e92\u53ef\u8fbe\u3002\u6545\u8fd9\u91cc\u5c31\u6709**\u4e00\u4e2a\u4ee5 u \u4e3a\u6839\u8282\u70b9\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6811**\u3002\n \n \u6b64\u9898\u662f\u6a21\u677f\u9898\uff0c\u53ea\u9700\u8981\u6392\u9664 \u8282\u70b9\u6570\u4e3a 1 \u7684\u5f3a\u8fde\u901a\u5206\u91cf\u6811\u5c31\u53ef\u4ee5\u4e86\u3002\n \u4ee3\u7801\u5982\u4e0b:\n ```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#define MAXN 10008\n#define MAXM 50008\nusing namespace std;\nint dfn[MAXN], vis[MAXN], head[MAXN], s[MAXN], low[MAXN];\nint N, M, cnt, top, tot, sum;\nstruct Edge\n{\n\tint to;\n\tint next;\n}edge[MAXM];\ninline void add(int u, int v)\n{\n\tedge[++cnt].to = v;\n\tedge[cnt].next = head[u];\n\thead[u] = cnt;\n\treturn;\n}\ninline void init()\n{\n\tsum = cnt = top = tot = 0;\n\tmemset(head, 0, sizeof(head));\n\tmemset(low, 0, sizeof(low));\n\tmemset(vis, 0, sizeof(vis));\n\tmemset(dfn, 0, sizeof(dfn));\n\tmemset(s, 0, sizeof(s));\n\treturn;\n}\ninline void tarjan(int u)\n{\n\tdfn[u] = low[u] = ++tot;\n\tvis[u] = 1;\n\ts[++top] = u;\n\tfor (int i = head[u]; i; i = edge[i].next)\n\t{\n\t\tint v = edge[i].to;\n\t\tif (!dfn[v]) {\n\t\t\ttarjan(v);\n\t\t\tlow[u] = min(low[u], low[v]);\n\t\t}\n\t\telse if (vis[v])\n\t\t\tlow[u] = min(low[u], dfn[v]);\n\t}\n\tif (dfn[u] == low[u]) {\n\t\tint ans = 0;\n\t\twhile (s[top] != u) {\n\t\t\tvis[s[top--]] = 0;\n\t\t\tans++;\n\t\t}\n\t\ttop--, ans++;\n\t\tif (ans > 1) sum++;\n\t}\n\treturn;\n}\nint main()\n{\n\twhile (~scanf(\"%d%d\", &N, &M))\n\t{\n\t\tint A, B;\n\t\tfor (int i = 1; i <= M; i++) {\n\t\t\tscanf(\"%d%d\", &A, &B);\n\t\t\tadd(A, B);\n\t\t}\n\t\tfor (int i = 1; i <= N; i++) {\n\t\t\tif (!dfn[i]) tarjan(i);\n\t\t}\n\t\tprintf(\"%d\\n\", sum);\n\t}\n}\n\n```\n",
        "postTime": 1561980453,
        "uid": 178665,
        "name": "\u5927\u5934\u51b2\u950b\u8f66\u4e36",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2863 \u3010[USACO06JAN]\u725b\u7684\u821e\u4f1aThe Cow Prom\u3011"
    },
    {
        "content": "##### \u6628\u5929\u5b66\u7684tarjan\u7b97\u6cd5\uff0c\u73b0\u5728\u6765\u770b\u4e00\u4e0b\u6807\u7b7e\u4e3atarjan\u7684\u552f\u4e00\u4e00\u9053\u7eff\u9898\n\n~~\u8fd9\u9053\u9898\u662ftarjan\u88f8\u9898~~\n\n\u5173\u4e8etarjan\u7b97\u6cd5\uff0c\u6211\u662f\u770b\u8fd9\u7bc7\u7b97\u6cd5\u5165\u95e8\u7684\uff1a\n[http://www.cnblogs.com/shadowland/p/5872257.html](http://www.cnblogs.com/shadowland/p/5872257.html)\n\n~~\u6211\u624d\u4e0d\u4f1a\u544a\u8bc9\u4f60\u524d\u5411\u661f\u6211\u4e5f\u662f\u624d\u5b66\u7684~~\uff1a\n\n[https://blog.csdn.net/acdreamers/article/details/16902023](https://blog.csdn.net/acdreamers/article/details/16902023)\n\n##### \u90a3\u4e48\uff01\u8fd9\u9053\u9898\u5c31\u53ef\u4ee5\uff1a\n\n1. \u524d\u5411\u661f\u8f93\u5165\u540e\n\n1. \u5148\u6c42\u51fa\u5f3a\u8054\u901a\u5206\u91cf\uff0c\n\n1. \u7136\u540e\u7edf\u8ba1\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6210\u5458\u4e2a\u6570\u3002\u5982\u679c\u6210\u5458\u4e2a\u6570\u5927\u4e8e1\uff0c\u90a3\u4e48s++\n\n1. \u8f93\u51fas\n\n\n\n##### \u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 10001\nstruct edge{\n\tint to,next;\n}e[50001];\nint head[N],gjc[N],s;\nvoid add(int u,int v,int cnt)\n{\n\te[cnt].to=v;\n\te[cnt].next=head[u];\n\thead[u]=cnt;\n}\nint dfn[N],low[N],vis[N],Stack[N],dfs_num,color[N],top,col_num,n,m;\nvoid tarjan(int x)\n{\n\tdfn[x]=++dfs_num;\n\tlow[x]=dfs_num;\n\tvis[x]=1;\n\tStack[++top]=x;\n\t\n\tfor(int i=head[x];i!=0;i=e[i].next)\n\t{\n\t\tint temp=e[i].to;\n\t\tif(dfn[temp]==0)\n\t\t{\n\t\t\ttarjan(temp);\n\t\t\tlow[x]=min(low[x],low[temp]);\n\t\t}\n\t\telse if(vis[temp]==1)\n\t\t{\n\t\t\tlow[x]=min(low[x],dfn[temp]);\n\t\t}\n\t}\n\tif(dfn[x]==low[x])\n\t{\n\t\tvis[x]=1;\n\t\tcolor[x]=++col_num;\n\t\tgjc[col_num]++;\n\t\twhile(Stack[top]!=x)\n\t\t{\n\t\t\tcolor[Stack[top]]==col_num;\n\t\t\tvis[Stack[top--]]=0;\n\t\t\tgjc[col_num]++;\n\t\t}\n\t\ttop--;\n\t}\n}\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x,y;\n\t\tcin>>x>>y;\n\t\tadd(x,y,i);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(dfn[i]==0)\n\t\t{\n\t\t\ttarjan(i);\n\t\t}\n\t}\n\tfor(int i=1;i<=col_num;i++)\n\t{\n\t\tif(gjc[i]>1)\n\t\t{\n\t\t\ts++;\n\t\t}\n\t}\n\tcout<<s;\n}\n```\n",
        "postTime": 1556287948,
        "uid": 104319,
        "name": "Why_not_use_longlong",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2863 \u3010[USACO06JAN]\u725b\u7684\u821e\u4f1aThe Cow Prom\u3011"
    },
    {
        "content": "    \u7f29\u70b9\u7684\u6a21\u677f\u9898\n    \n    \u9996\u5148\u6ce8\u610f\u5ba1\u9898 \n    \u6211\u4eec\u8981\u6839\u636e\u987a\u65f6\u9488\u5efa\u56fe \u8fd9\u5c31\u51b3\u5b9a\u4e86\u8fd9\u9053\u8bd5\u9898\u662f\u4e00\u9053\u6709\u5411\u56fe \u800c\u4e0d\u662f\u65e0\u5411\u56fe\n    \u7f29\u70b9\u7684\u65f6\u5019\u6211\u4eec\u8981\u7528\u7684\u662ftarjan\u800c\u4e0d\u662f\u5e76\u67e5\u96c6\n    \n    \u5176\u5b9e\u63a5\u4e0b\u6765\u5c31\u662f\u7f29\u70b9\u7684\u5e38\u89c4\u601d\u8def\u4e86\n    \u8fd9\u9053\u9898\u6bd43387\u8fd8\u8981\u7b80\u5355\u4e00\u4e0b\n    \u56e0\u4e3a\u8fd9\u9053\u9898\u4e0d\u9700\u8981\u5efa\u65b0\u56fe \u53ea\u8981\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u7684\u70b9\u6709\u51e0\u4e2a\u5c31\u597d\u4e86\n    \u5982\u679c\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u7684\u70b9\u5927\u4e8e\u7b49\u4e8e2\u4e2a \u90a3\u4e48ans++\u5373\u53ef\n    \n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<stack>\nusing namespace std;\nconst int maxn = 10005;\nconst int maxm = 50005;\nint n,m,head[maxn],top,dfn[maxn],low[maxn],countt[maxn],indexx,ans,cnt;\nbool instack[maxn] ;\nstruct edge {\n\tint to,next ;\n}e[maxm];\nstack< int > s;\nvoid add_edge(int u,int v) {\n\te[++top].to = v;\n\te[top].next = head[u] ;\n\thead[u] = top ;\n}\n\nvoid tarjan(int u) {\n\tdfn[u] = low[u] = ++indexx ;\n\ts.push(u) ;\n\tinstack[u] = 1;\n\tfor(int i = head[u]; i ;i = e[i].next) {\n\t\tif(!dfn[e[i].to]) {\n\t\t\ttarjan(e[i].to) ;\n\t\t\tlow[u] = min(low[u] , low[e[i].to]) ;\n\t\t}\n\t\telse\n\t\t  if(instack[e[i].to])\n\t\t    low[u] = min(low[u] , low[e[i].to]) ;\n\t}\n\tif(dfn[u] == low[u]) {\n\t\tcnt++;\n\t\twhile(s.top() != u) {\n\t\t\tint k = s.top() ;  s.pop() ;\n\t\t\tinstack[k] = 0;\n\t\t\tcountt[cnt]++ ;   //\u8bb0\u5f55\u4e00\u4e0b\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u6709\u51e0\u4e2a\u70b9 \n\t\t}\n\t\ts.pop() ;\n\t\tcountt[cnt]++;\n\t\tinstack[u] = 0;\n\t}\n}\n\nint main() {\n\tscanf(\"%d%d\",&n,&m) ;\n\tfor(int i = 1;i <= m ;++i) {\n\t\tint x,y; scanf(\"%d%d\",&x,&y) ;\n\t\tadd_edge(x , y) ;\n\t}\n\tfor(int i = 1;i <= n ;++i)\n\t  if(!dfn[i]) tarjan( i ) ;\n\tfor(int i = 1;i <= cnt ;++i) \n\t\tif(countt[i] > 1) ans++;\n\tprintf(\"%d\",ans) ;\n\treturn 0;\n}\n```",
        "postTime": 1534677893,
        "uid": 88340,
        "name": "Tiffany_Tendering",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2863 \u3010[USACO06JAN]\u725b\u7684\u821e\u4f1aThe Cow Prom\u3011"
    },
    {
        "content": "~~(\u8fd9\u9898\u771f\u5947\u602a..).~~\n\n\u9898\u76ee\u505a\u6cd5.3\u9875\u9898\u89e3\u7ed9\u7684\u4e0d\u80fd\u518d\u6e05\u695a\u4e86..\n\n\u6240\u4ee5\u6211\u4eec\u8ba8\u8bba\u4e9b\u522b\u7684\u4e8b..\n\n\u5199\u5b8c\u4e4b\u540e\u53d1\u73b0.\u6240\u6709\u9898\u89e3\u8fde\u7684\u5168\u662f\u6709\u5411\u8fb9..\n\n\u770b\u9898\u76ee\u63cf\u8ff0..\u7ffb\u8bd1\u4e0a\u6765\u770b...~~\u871c\u6c41\u7275\u5f15~~...\n\n\u7136\u800c\u539f\u6587\u4e0a\u597d\u50cf\u8bf4\u7684\u662f..\u6b63\u62c9\u53cd\u62c9\u90fd\u662f\u53ef\u4ee5\u7684...\n\n~~(\u82f1\u8bed\u5dee\u8bf7\u5410\u69fd.).~~\n\n\u6240\u4ee5\u4f3c\u4e4e\u7ffb\u8bd1\u7684\u68c0\u9a8c\u65b9\u5f0f\u7565\u6709\u5dee\u9519.?\n\n~~\u53cd\u6b63\u53ea\u80fd\u5355\u5411\u7528\u529b\u7684\u7ef3\u5b50\u5f88\u9ad8\u7ea7.~~.\n\n\u6709dalao\u80fd\u53bb\u627e\u5b98\u65b9\u9898\u89e3\u5417..~~\u6682\u65f6\u4e0d\u80fd\u7ffb\u5899.~~.\n\n\u53cd\u6b63\u6709\u5411\u80fd\u8fc7\u5c31\u5bf9\u4e86..\n\n\u90a3\u4e48\u65e0\u5411\u600e\u4e48\u5f04.?\n\n**\u6362\u79cd\u5224\u65ad\u540c\u8fb9\u7684\u65b9\u6cd5:\u6bcf\u6761\u8fb9\u53ea\u80fd\u75281\u6b21.**,\n\n~~(\u4ee3\u7801\u592a\u4e11.\u62d2\u53d1.).~~.\n\n(\u0ca1\u03c9\u0ca1).\n",
        "postTime": 1525494775,
        "uid": 20454,
        "name": "BFSBFSBFSBFS",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2863 \u3010[USACO06JAN]\u725b\u7684\u821e\u4f1aThe Cow Prom\u3011"
    },
    {
        "content": "#### tarjan\u88f8\u9898\uff0c\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u662f\u666e\u53ca+\u63d0\u9ad8\n\u8981\u6ce8\u610f\u7684\u662f\u5976\u725b\u81ea\u5df1\u4e0d\u7b97\u4e00\u4e2a\u5f3a\u8fde\u901a\u56fe\n##  **\u5982\u679cused\u548cway\u6570\u7ec4\u4e0d\u7528bool\u7c7b\u578b\u4f1a\u70b8\uff08MLE\uff09**\n### **\u4e3b\u8981\u601d\u60f3\uff1a**~~\u4ee3\u7801\u91cc\u90fd\u8bf4\u4e86\u76f4\u63a5\u770b\u4ee3\u7801\u5427~~ \n\u5982\u679c\u6ca1\u770b\u61c2\u7684\u8bdd\u53ef\u4ee5\u770b[\u8fd9\u4e2a\u7f51\u5740](http://blog.csdn.net/jeryjeryjery/article/details/52829142?locationNum=4&fps=1)**\u4ed6\u7684\u4ee3\u7801\u6709\u4e9b\u95ee\u9898**\u4f46\u601d\u8def\u662f\u6b63\u786e\u7684\uff08\u548c\u6211\u4e00\u6837\uff09\uff0c\u518d\u878d\u5408\u4ed6\u7684\u601d\u60f3\u7406\u89e3\u6211\u7684\u4ee3\u7801\u5c31\u53ef\u4ee5\u4e86\n\u5e9f\u8bdd\u4e0d\u591a\u8bf4\u5148\u9644\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<stdio.h>\n#include<stack>\n#define N 10010\nusing namespace std;\nstruct cow{int dfn,low;bool used;}f[N];\n//dfn\u4e3a\u8be5\u70b9\u5165\u6808\u7f16\u53f7\uff0clow\u4e3a\u5176\u6700\u65e9\u5165\u6808\u7684\u7956\u5148\uff0cused\u8bb0\u5f55\u5176\u662f\u5426\u88ab\u4f7f\u7528 \nstack<int> s;//\u6808\uff0c\u4e00\u4e2a\u540e\u8fdb\u5148\u51fa\u7684\u7ed3\u6784\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u201c\u5012\u961f\u5217\u201dps\uff1a\u5982\u679c\u961f\u5217\uff08queue\uff09\u4f60\u90fd\u4e0d\u4f1a\u90a3\u4f60\u516b\u6210\u5e9f\u4e86\nint n,m,i,j,cnt,ans;\nbool way[N][N];\n//used\u548cway\u4e00\u5b9a\u8981\u5b9a\u6210bool\u7c7b\u578b\uff0c\u5426\u5219\u4f1aMLE \ninline int read()//\u5feb\u901f\u8bfb\u5165 \n{\n\tint sign=1,num=0;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')sign=-1;ch=getchar();}\n\twhile(isdigit(ch)){num=num*10+(ch-'0');ch=getchar();}\n\treturn sign*num;\n}\nvoid init()//\u8f93\u5165 \n{\n\tn=read();\n\tm=read();\n\twhile(m--)\n\t{\n\t\ti=read();\n\t\tj=read();\n\t\tway[i][j]=1;//i\u5976\u725b\u7275\u5f15j\u5976\u725b\n\t\t\t\t\t//\u7531\u4e8e\u8fb9\u662f\u53c8\u5411\u7684\u6240\u4ee5\u53ea\u5b58\u4e00\u6b21 \n\t}\n}\nvoid tarjan(int i) \n{\n\tf[i].dfn=f[i].low=++cnt;\n\tf[i].used=1;\n\ts.push(i);\n\t//\u521d\u59cb\u5316 \n\tfor(int j=1;j<=n;++j)\n\t{\n\t\t//\u5224\u65adi\u5976\u725b\u662f\u5426\u7275\u5f15j\u5976\u725b \n\t\tif(way[i][j])\n\t\t\tif(!f[j].dfn)\n\t\t\t{\n\t\t\t\ttarjan(j);\n\t\t\t\tf[i].low=min(f[i].low,f[j].low);//\u66f4\u65b0\u7956\u5148 \n\t\t\t}\n\t\t\t//used\u5728\u6b64\u5904\u4e0d\u52a0\u4f1a\u5f71\u54cd\u5df2\u8fde\u63a5\u7684\u8fde\u901a\u56fe \n\t\t\telse if(f[j].used) \n\t\t\t\tf[i].low=min(f[i].low,f[j].low);\n\t}\n\t//\u6784\u6210\u8fde\u901a\u56fe \uff0c\u5e76\u6e05\u6808\u51c6\u5907\u4e0b\u4e00\u70b9\u67e5\u627e \n\tif(f[i].dfn==f[i].low) \n\t{\n\t\tint t,c(0);\n\t\tdo\n\t\t{\n\t\t\tf[t=s.top()].used=0;\n\t\t\ts.pop();\n\t\t\t++c;\n\t\t}while(t!=i);\n\t\tif(c>1)++ans;//c\u81f3\u5173\u91cd\u8981\uff0c\u56e0\u4e3a\u9898\u76ee\u4e2d\u4e00\u53ea\u5976\u725b\u81ea\u5df1\u4e0d\u7b97\u4e00\u4e2a\u8fde\u901a\u56fe \n\t}\n}\nint main()\n{\n\tinit();\n\tfor(int i=1;i<=n;++i)if(!f[i].dfn)tarjan(i);\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\u4e0d\u61c2\u7684\u5728\u8ba8\u8bba\u680f\u91cc\u95ee\u6211\n\n~~\u7136\u800c\u6211\u5e76\u4e0d\u4f1a\u53bb\u7406\u4f60~~\n",
        "postTime": 1520649119,
        "uid": 67841,
        "name": "yqkkkkk",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2863 \u3010[USACO06JAN]\u725b\u7684\u821e\u4f1aThe Cow Prom\u3011"
    },
    {
        "content": "tarjan\u7684\u88f8\u9898\u5566\uff0c\u76f4\u63a5\u4e00\u904d\u6d82\u8272\uff0c\u518d\u641c\u7d22\u4e0d\u540c\u989c\u8272\u7684\u4e2a\u6570\uff0c\u5982\u679c\u6709\u4e24\u5934\u725b\u53ca\u4ee5\u4e0a\u540c\u8272\u5c31\u5c06ans+1.\n\n\u6ce8\u610f\u725b\u53ef\u80fd\u201c\u79bb\u7fa4\u201d\uff0c\u6240\u4ee5\u6bcf\u5934\u725b\u90fd\u8981\u641c\u4e00\u904d\uff08\u5982\u679c\u672a\u641c\u5230\uff09\n\n\u4e0a\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=10005;\nstruct sd\n{\n    int node;\n    vector <int> next;\n};\nsd data[N];\nint low[N];//\u6808\u4e2d\u6700\u65e9\u7684\u4e0e\u81ea\u5df1\u5728\u540c\u4e00\u73af\u4e2d\u7684\u4f4d\u7f6e \nint dfn[N];//\u65f6\u95f4\u6233\uff0c\u8868\u793adfs\u65f6\u7684\u987a\u5e8f \nbool vis[N];\nint color[N];//\u67d3\u8272\u7ed3\u679c \nbool gone[N]; \nint dye[N];\nint dfnnum=0,col=0;//col\u8868\u793a\u67d3\u8272\u7684\u79cd\u7c7b \nstack <int> mystack;\ninline void tarjan(int p)\n{\n    gone[p]=true;\n    dfnnum++;\n    dfn[p]=dfnnum;\n    low[p]=dfn[p];\n    vis[p]=true;\n    mystack.push(p);\n    for(register int i=data[p].next.size()-1;i>=0;i--)\n    {\n        int tar=data[p].next[i];\n        if(dfn[tar]==0)//\u672a\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9 \n        {\n            tarjan(tar);\n            low[p]=min(low[tar],low[p]);\n        }\n        else if(vis[tar])//\u5df2\u8bbf\u95ee \n        {\n            low[p]=min(low[p],dfn[tar]);\n        }\n    }\n    if(dfn[p]==low[p])//\u56de\u6eaf\u6d82\u8272\uff0c\u5c06\u6574\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u6d82\u6210\u4e00\u79cd\u989c\u8272 \n    {\n        vis[p]=false;\n        col++;\n        color[p]=col;\n        while(mystack.top()!=p)\n        {\n            color[mystack.top()]=col;\n            vis[mystack.top()]=false;\n            mystack.pop();\n        } \n        mystack.pop();\n    }\n}\nint main()\n{\n    int cow, rope,a,b;\n    memset(gone,false,sizeof(gone));\n    memset(dye,false,sizeof(dye));\n    memset(vis,false,sizeof(vis));\n    memset(dfn,false,sizeof(dfn));\n    scanf(\"%d%d\",&cow,&rope);\n    for(int i=1;i<=rope;i++)\n    {\n        scanf(\"%d%d\",&a,&b);\n        data[a].next.push_back(b);\n    }\n    for(int i=1;i<=cow;i++)//\u4e3a\u4e86\u786e\u4fdd\u6ca1\u6709\u201c\u79bb\u7fa4\u7684\u725b\u201d\u6bcf\u5934\u725b\u90fd\u5c1d\u8bd5\u641c\u4e00\u904d \n    {\n        if(!gone[i])\n        {\n            tarjan(i);\n        }\n    }\n    int ans=0;\n    for(int i=1;i<=cow;i++)//\u786e\u5b9a\u989c\u8272\u6570\u91cf \n    {\n        if(dye[color[i]]==0)\n        {\n            dye[color[i]]++;\n            continue;\n        }\n        if(dye[color[i]]==1)\n        {\n            dye[color[i]]++;\n            ans++;\n        }\n        else dye[color[i]]++;\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1509868292,
        "uid": 67492,
        "name": "LPA20020220",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2863 \u3010[USACO06JAN]\u725b\u7684\u821e\u4f1aThe Cow Prom\u3011"
    },
    {
        "content": "\u88f8\u7684tarjan\u6c42\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u5c31\u662f\u7b54\u6848\u3002\u6a21\u677f\u9898\u5dee\u4e0d\u591a\u3002\u3002\u3002\n\n\n\n    \n    \n\n    \n    \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<stack>\n#include<vector>\nusing namespace std;\nstruct node\n{\n    int num,par;\n}p[10005];\nint n,m,index=1,x,y,cnt;\nvector<int>v[10005];\nbool vis[10005];\nint ind[10005];\nstack<int>s;\nbool in_stack[10005];\nvoid tarjan(int x)\n{\n    p[x].num=index;\n    p[x].par=p[x].num;\n    index++;\n    vis[x]=1;\n    in_stack[x]=1;\n    s.push(x);\n    for(int i=0;i<v[x].size();i++)\n    {\n        if(!vis[v[x][i]])\n        {\n            tarjan(v[x][i]);\n            p[x].par=min(p[x].par,p[v[x][i]].par);\n        }\n        else if(in_stack[v[x][i]])\n        {\n            p[x].par=min(p[x].par,p[v[x][i]].num);\n        }\n    }\n    if(p[x].num==p[x].par)\n    {\n        ++cnt;\n        int gutc=0;\n        int k;\n        do\n        {\n            k=s.top();\n            s.pop();\n            in_stack[k]=0;\n            gutc++;\n        }while(k!=x);\n        if(gutc==1)cnt--;\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&x,&y);\n        v[x].push_back(y);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(!vis[i])tarjan(i);\n    }\n    printf(\"%d\\n\",cnt);\n    return 0;\n} \n\n```",
        "postTime": 1484052055,
        "uid": 16817,
        "name": "winmt",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2863 \u3010[USACO06JAN]\u725b\u7684\u821e\u4f1aThe Cow Prom\u3011"
    },
    {
        "content": "[\u53ef\u5728\u535a\u5ba2\u5185\u9605\u8bfb](https://www.luogu.org/blog/62246/solution-p2863)\n\n\n------------\n\n# \u5199\u5728\u524d\u9762\n\n**$tarjan$\u7b97\u6cd5\u524d\u7f6e\u5c0f\u829d\u58eb\uff1a$dfs$\u5e8f\uff0c\u5f3a\u8fde\u901a\u5206\u91cf**\n\n**$1^o$\u5f3a\u8fde\u901a\u5206\u91cf**\uff1a\u5728\u4e00\u4e2a**\u6709\u5411\u56fe**\u7684\u4efb\u610f\u4e00\u975e\u7a7a\u5b50\u56fe\u4e2d\uff0c**\u4efb\u610f**\u4e24\u70b9\u90fd\u80fd\u4e92\u76f8\u5230\u8fbe\uff0c\u5219\u79f0\u8fd9\u4e2a\u5b50\u56fe\u4e3a\u8be5\u65e0\u5411\u56fe\u7684\u4e00\u4e2a**\u5f3a\u8fde\u901a\u5206\u91cf**\u3002\u4e3e\u4e2a\u6817\u5b50\uff1a\u73af\u5c31\u662f\u4e00\u79cd\u5f3a\u8fde\u901a\u5206\u91cf\u3002\n\n**\u91cd\u8981\u6027\u8d281**\uff1a\u5728\u4e00\u4e2a**\u8fb9\u6743\u4e3a\u6b63**\u7684**\u6709\u5411\u56fe**\u4e2d\uff0c\u82e5\u6709\u4e00\u6761\u7ecf\u8fc7\u70b9\u7684\u6743\u503c\u548c\u6700\u5927\u7684\u8def\u5f84\u901a\u8fc7\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u4e00\u70b9\uff0c\u5219\u8fd9\u6761\u8def\u5f84\u901a\u8fc7\u5176**\u6240\u6709\u70b9**\u3002\uff08\u7f29\u70b9\u7684\u7406\u8bba\u57fa\u7840\uff09\n\n**\u91cd\u8981\u6027\u8d282**\uff1a\u4e00\u4e2a\u65e0\u5411\u56fe\u7684\u6240\u6709\u5f3a\u8fde\u901a\u5206\u91cf\u90fd\u662f**\u76f8\u4e92\u72ec\u7acb**\u7684\uff0c\u6ca1\u6709\u76f8\u540c\u7684\u70b9\u6216\u8fb9\u3002\uff08\u8fd9\u4e5f\u662f\u5176\u88ab\u79f0\u4e3a\u201c\u5206\u91cf\u201d\u7684\u539f\u56e0\uff09\n\n**\u4ee5\u4e0a\u4e24\u6761\u6027\u8d28\u90fd\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u4f46\u5374\u975e\u5e38\u91cd\u8981\u3002**\n\n**$2^odfs$\u5e8f**\uff1a\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u5728$dfs$\u4e00\u4e2a\u56fe\u65f6\u904d\u5386\u5404\u4e2a\u70b9\u7684**\u5148\u540e\u987a\u5e8f**\u3002\n\n**\u4f18\u70b9**\uff1a\u5c06\u6811\u6216\u56fe\u7528**\u7ebf\u6027**\u7684\u7ed3\u6784\u5b58\u50a8\uff0c\u4fbf\u4e8e**\u67e5\u8be2**\u548c**\u4fee\u6539**\u3002\n\n\n\n------------\n\n# \u7b97\u6cd5\u5185\u5bb9\n$tarjan$\u7b97\u6cd5\u662f\u4e00\u79cd\u57fa\u4e8e$dfs$\u7684\u6c42\u5f3a\u8fde\u901a\u5206\u91cf\u7b97\u6cd5\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u5982\u4e0b\uff1a\u7ef4\u62a4\u4e00\u4e2a$dfs$\u5e8f\u2014\u2014\u6570\u7ec4$dfn[]$\uff0c\u548c\u7531$i$\u8282\u70b9\u80fd\u8fbe\u5230\u7684$dfn$\u503c\u6700\u5c0f\u7684\u8282\u70b9\u7684$dfn$\u503c\u2014\u2014$low[]$\uff0c\u5e76\u7ef4\u62a4\u4e00\u4e2a\u6808\uff0c\u5728\u6700\u5f00\u59cb\u65f6\u5c06\u8282\u70b9\u538b\u5165\u6808\u4e2d\u3002\u663e\u7136\uff0c**\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u6240\u6709\u70b9\u7684$low$\u503c\u90fd\u4e3a\u8be5\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d$dfn$\u503c\u6700\u5c0f\u7684\u8282\u70b9\u7684$dfn$\u503c**\u3002\u5229\u7528\u8fd9\u6761\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa\u6240\u6709\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u3002\n\n\u5728\u6bcf\u904d\u5386\u5b8c\u4e00\u4e2a\u8282\u70b9\u4ee5\u53ca\u5b83\u4e4b\u540e\u7684\u8282\u70b9\u540e\uff0c\u5224\u65ad\u5176$dfn$\u503c\u662f\u5426\u548c$low$\u503c\u76f8\u7b49\u3002\u5982\u679c\u662f\uff0c\u90a3\u4e48**\u8be5\u8282\u70b9\u5373\u4e3a\u5176\u6240\u5728\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u7684$dfn$\u503c\u6700\u5c0f\u7684\u70b9**\uff0c\u5c06\u6808\u4e2d\u8be5\u8282\u70b9\u53ca\u5176\u4ee5\u4e0a\u7684\u6240\u6709\u8282\u70b9\u5168\u90e8\u53d6\u51fa\uff0c\u5373\u4e3a\u8be5\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6240\u6709\u70b9\u3002\n\n#### \u7ed9\u51fa\u4f2a\u4ee3\u7801\uff1a\n\n```\nvoid tarjan(int u){\n\tdfn[u]=low[u]=++\u65f6\u95f4\u7f16\u53f7;\n\t\u5c06u\u538b\u5165\u6808\u4e2d;\n\t\u904d\u5386\u6240\u6709u\u80fd\u5230\u8fbe\u7684\u70b9v{\n\t\tif v\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7{\n        tarjan(v);\n           low[u]=min(low[u],low[v]);\n\t\t}\n\t\telse if v\u4ecd\u5728\u6808\u4e2d{\n\t\t\tlow[u]=min(low[u],dfn[v]);\n\t\t}\n   }\n\tif low[u]==dfn[u]{\n\t\t++\u5f3a\u8fde\u901a\u5206\u91cf\u7f16\u53f7;\n\t\twhile \u6808\u9876!=u{\n\t\t\t\u5c06\u6808\u9876\u7f16\u53f7;\n\t\t\t\u5f39\u51fa\u6808\u9876;\n\t\t}\n\t}\n}\n```\n\n### \u5bf9\u4e8e\u672c\u9898\u800c\u8a00\uff0c\u53ea\u8981\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5305\u542b\u8d85\u8fc7$1$\u5934\u5976\u725b\uff0c\u90a3\u4e48\u4ed6\u4eec\u5c31\u73c2\u4ee5\u6109\u5feb\u7684\u8df3\u5706\u821e\uff0c\u53ea\u987b\u7edf\u8ba1\u51fa$size$\u5927\u4e8e$1$\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u4e2a\u6570\u5373\u53ef\u3002\n\n\n------------\n\n# \u4ee3\u7801\u5b9e\u73b0\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n    int x=0,f=0;char ch=getchar();\n    while(!isdigit(ch)){f|=ch=='-';ch=getchar();}\n    while(isdigit(ch)){x=x*10+(ch^48);ch=getchar();}\n    return f?-x:x;\n}\nint n,m,ans=0;\nint dfn[10005],low[10005],ins[10005],timing;\nint colcnt,col[10005],colnum[10005];\nvector<int> e[10005];\nstack<int> q;\ninline void tarjan(int u){\n    dfn[u]=low[u]=++timing;q.push(u);ins[u]=1;\n    for(int v:e[u])\n        if(!dfn[v])\n            tarjan(v),low[u]=min(low[u],low[v]);\n        else if(ins[v])\n            low[u]=min(low[u],dfn[v]);\n    if(dfn[u]==low[u]){\n        ++colcnt;\n        int tmp;\n        do{\n            tmp=q.top();q.pop();ins[tmp]=0;\n            col[tmp]=colcnt;\n            colnum[colcnt]++;//\u7edf\u8ba1size\u5927\u5c0f\n        }while(tmp!=u);\n    }\n}\nint main(){\n    n=read();m=read();\n    for(register int i=1,a,b;i<=m;++i)\n        a=read(),b=read(),e[a].push_back(b);\n    for(register int i=1;i<=n;++i)\n        if(!dfn[i])\n            tarjan(i);\n    for(register int i=1;i<=colcnt;++i)\n        if(colnum[i]>1)\n            ans++;//\u8ba1\u6570\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1566737635,
        "uid": 62246,
        "name": "Del_Your_Heart",
        "ccfLevel": 0,
        "title": "P2863"
    },
    {
        "content": "\u8fd9\u8fd9\u7740\u8fd9\u8fd9\u9053\u9898\u53ea\u8981\u628a\u677f\u5b50\u7a0d\u5fae\u6539\u4e00\u4e0b\u4e0b\u5c31\u597d\u5566\n\n**\u611f\u8c22[Rothen](https://www.luogu.org/space/show?uid=99827)  \u5927\u4f6c \u5e2e\u6211\u6539\u4e86\u4e00\u4e0b\u7ec6\u8282**\n\n\u81f3\u4e8e\u7b97\u6cd5\u5728\u8fd9\u91cc\u5c31\u4e0d\u8fc7\u591a\u9610\u8ff0\u7f57~~\u6211\u624d\u4e0d\u4f1a\u544a\u8bc9\u4f60\u5176\u5b9e\u6211\u4e5f\u4e0d\u600e\u4e48\u61c2\uff08\u90a3\u9006\u8fd8\u53d1\u9898\u89e3\uff09~~\n\n\u5b9e\u5728\u770b\u4e0d\u61c2\u7684\u8bdd  \u5c31\u53bb\u627e2018luogu\u535a\u5ba2 [\u4f20\u9001\u95e8](https://www.luogu.org/blog/styx-ferryman/chu-tan-tarjan-suan-fa-qiu-qiang-lian-tong-fen-liang-post)\n\n\u4e0d\u5e9f\u8bdd\u7f57\u76f4\u63a5\u8d34\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\nvector<ll> g[10000+500];\nll dfn[10000+500],sta[10000+500],/*\u6808*/low[10000+500],color[10000+500],num[10000+500];\nbool vis[10000+500];\nll deep,top,sum;\ninline ll read(){//\u5feb\u8bfb\n    bool f=1;ll x=0;char c=getchar();\n    while(c<'0'||c>'9') {if(c=='-') f=!f;c=getchar();}\n    while(c>='0'&&c<='9') {x=x*10+c-'0';c=getchar();}\n    return f?x:-x;\n}\nvoid tarjan(ll u){\n    dfn[u]=++deep;\n    low[u]=deep;\n    vis[u]=1;\n    sta[++top]=u;\n    for(ll i=0;i<g[u].size();i++){\n        if(!dfn[g[u][i]]) {\n             tarjan(g[u][i]);\n            low[u]=min(low[u],low[g[u][i]]);\n        }\n       else if(vis[g[u][i]])\n            low[u]=min(low[u],low[g[u][i]]);\n    }\n    if(dfn[u]==low[u]){\n        vis[u]=0;\n        color[u]=++sum;\n         num[summ]++;\n        while(sta[top]!=u){\n            vis[sta[top--]]=0;\n            num[sum]++;\n            color[sta[top]]=sum;\n        }\n        top--;\n    }\n}\nint main()\n{\n    ll i,j;\n    ll n,m;\n    ll a,b;\n    ll ans=0;\n    n=read();m=read();\n    for(i=1;i<=m;i++){\n        a=read();b=read();\n        g[a].push_back(b);\n    }\n    for(i=1;i<=n;i++)\n        if(!dfn[i])\n            tarjan(i);\n    for(i=1;i<=sum;i++)\n        if(num[i]>1) ans++;       \n    cout<<ans;\n    return 0;\n}\n```\n\n**\u6e29\u99a8\u63d0\u793a\uff1a\u5343\u4e07\u4e0d\u8981ctrl+c  ctrl+v**\n![](https://cdn.luogu.com.cn/upload/pic/64567.png)",
        "postTime": 1563692114,
        "uid": 127605,
        "name": "Hyxss",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2863 \u3010[USACO06JAN]\u725b\u7684\u821e\u4f1aThe Cow Prom\u3011"
    }
]