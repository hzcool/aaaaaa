[
    {
        "content": "### \u778e\u626f\n\n\u6708\u8d5b\u4e0a\u809d\u4e86\u4e00\u4e2a\u591a\u5c0f\u65f6\u8fd9\u4e2a\u9898\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u7ec6\u8282\u7206\u70b8\u554a qaq\n\n### \u505a\u6cd5\n\n\u505a\u6cd5\uff1a\u7ebf\u6bb5\u6811+set\n\n\u8003\u8651\u4e00\u79cd\u5de7\u5999\u7684\u7ef4\u62a4\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $a_i$\uff0c\u7ef4\u62a4 $b_i=\\max j<i$\uff0c\u4f7f\u5f97 $a_i$ \u4e0e $a_j$ \u53d1\u751f\u5173\u7cfb\uff08\u53ef\u4e92\u9006\uff09\uff0c\u4e14 $\\forall j<k<i,a_k \\not =a_i$\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee\u533a\u95f4 $l,r$\uff0c\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u76f8\u540c\u7684 $a_i$ \u53ea\u6709\u7b2c\u4e00\u4e2a\u5bf9 $b_i$ \u6709\u8d21\u732e\uff0c\u6240\u4ee5\u7b54\u6848\u5373\u4e3a $\\max \\{q_i|l\\leq i\\leq r\\}$\uff0c\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u901a\u8fc7\u53ea\u6709\u8be2\u95ee\u7684\u70b9\u4e86\u3002\n\n\u8003\u8651\u4fee\u6539\u64cd\u4f5c\uff0c\u7ef4\u62a4 $p_i$ \u7684\u9006\u6570\u7ec4 $ap_i$\uff0c\u56e0\u4e3a\u662f\u5355\u70b9\u4fee\u6539\uff0c\u53ea\u9700\u8981\u66f4\u65b0\u4fee\u6539\u4f4d\u7f6e\u540e\u7684\u6240\u6709 $a_i,p_{a_i},ap_{a_i}$ \u5373\u53ef\uff0c\u7528\u5bf9\u6bcf\u4e00\u4e2a\u503c\u5f00 set \u7ef4\u62a4\uff0c\u503c\u7684\u4fee\u6539\u4f7f\u7528 `.insert()`\uff0c`.erase()`\uff0c`.lower_bound()`\u3002\u66f4\u65b0\u7ed3\u675f\u540e\u6309\u7167\u9884\u5904\u7406\u7684\u65b9\u6cd5\u66f4\u65b0\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n\u5177\u4f53\u7ec6\u8282\u89c1\u4ee3\u7801\u5b9e\u73b0\u3002\n\n\u5f3a\u70c8\u5efa\u8bae\uff1a\u4e00\u5b9a\u8981\u5199\u51fd\u6570\uff01\uff01\uff01\uff01\n\n### \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#pragma GCC optimize(2,3,\"Ofast\",\"unroll-loops\")\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define re register int\n#define db double\n#define in inline\nnamespace fast_io\n{\n\tchar buf[1<<12],*p1=buf,*p2=buf,sr[1<<23],z[23],nc;int C=-1,Z=0,Bi=0;\n\tin char gc() {return p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<12,stdin),p1==p2)?EOF:*p1++;}\n\tin ll read()\n\t{\n\t\tll x=0,y=1;while(nc=gc(),(nc<48||nc>57)&&nc!=-1)if(nc==45)y=-1;Bi=1;\n\t\tx=nc-48;while(nc=gc(),47<nc&&nc<58)x=(x<<3)+(x<<1)+(nc^48),Bi++;return x*y;\n\t}\n\tin db gf() {re a=read(),b=(nc!='.')?0:read();return (b?a+(db)b/pow(10,Bi):a);}\n\tin int gs(char *s) {char c,*t=s;while(c=gc(),c<32);*s++=c;while(c=gc(),c>32)*s++=c;return s-t;}\n\tin void ot() {fwrite(sr,1,C+1,stdout);C=-1;}\n\tin void flush() {if(C>1<<22) ot();}\n\ttemplate <typename T>\n\tin void write(T x,char t)\n\t{\n\t\tre y=0;if(x<0)y=1,x=-x;while(z[++Z]=x%10+48,x/=10);\n\t\tif(y)z[++Z]='-';while(sr[++C]=z[Z],--Z);sr[++C]=t;flush();\n\t}\n\tin void write(char *s) {re l=strlen(s);for(re i=0;i<l;i++)sr[++C]=*s++;sr[++C]='\\n';flush();}\n};\nusing namespace fast_io;\nconst int N=5e5+5;\nint n,m,a[N],b[N],ab[N],c[N],p[N],ap[N],mx[N<<2],lst[N];\nset<int>s[N];\n#define ls(x) (x<<1)\n#define rs(x) (x<<1|1)\n#define mid ((l+r)>>1)\nin void push_up(re x) {mx[x]=max(mx[ls(x)],mx[rs(x)]);}\nvoid build(re p,re l,re r)\n{\n\tif(l==r) return mx[p]=b[l],void();\n\tbuild(ls(p),l,mid);build(rs(p),mid+1,r);push_up(p);\n}\nvoid update(re p,re l,re r,re x,re y)\n{\n\tif(l==r) return mx[p]=y,void();\n\t(x<=mid)?update(ls(p),l,mid,x,y):update(rs(p),mid+1,r,x,y);push_up(p);\n}\nint query(re p,re l,re r,re ql,re qr)\n{\n\tif(ql<=l&&r<=qr) return mx[p];\n\tif(ql>mid) return query(rs(p),mid+1,r,ql,qr);\n\tif(qr<=mid) return query(ls(p),l,mid,ql,qr);\n\treturn max(query(rs(p),mid+1,r,ql,qr),query(ls(p),l,mid,ql,qr));\n}\n#define lb lower_bound\nin void update(re x,re y) {update(1,1,n,x,y);}\nin int get(re x)\n{\n\tauto it=s[a[x]].lb(x);re pre=0,pp=0,v=p[a[x]],av=ap[a[x]];\n\tif(it!=s[a[x]].begin()) pre=*--it;\n\tif((it=s[v].lb(x))!=s[v].begin()) pp=*--it;\n\tif((it=s[av].lb(x))!=s[av].begin()) pp=max(pp,*--it);\n\treturn pp>pre?pp:0;\n}\nin void upd(set<int>::iterator it) {update(*it,b[*it]=get(*it));}\nin void erase(re x)\n{\n\ts[a[x]].erase(x),b[x]=0;auto it=s[a[x]].lb(x);re v=p[a[x]],av=ap[a[x]];\n\tif(it!=s[a[x]].end()) upd(it);\n\tif((it=s[v].lb(x))!=s[v].end()) upd(it);\n\tif((it=s[av].lb(x))!=s[av].end()) upd(it);\n}\nin void add(re x,re y)\n{\n\ta[x]=y,s[a[x]].insert(x);auto it=s[a[x]].lb(x);\n\tre v=p[a[x]],av=ap[a[x]];upd(it);it++;\n\tif(it!=s[a[x]].end()) upd(it);\n\tif((it=s[v].lb(x))!=s[v].end()) upd(it);\n\tif((it=s[av].lb(x))!=s[av].end()) upd(it);\n}\nint main()\n{\n\tn=read(),m=read();\n\tfor(re i=1;i<=n;i++) p[i]=read(),ap[p[i]]=i;\n\tfor(re i=1;i<=n;i++) a[i]=read();\n\tfor(re i=1;i<=n;i++) \n\t{\n\t\ts[a[i]].insert(i);re v=p[a[i]],pp=max(lst[v],lst[ap[a[i]]]);\n\t\tif(pp>lst[a[i]]) update(1,1,n,i,b[i]=pp);lst[a[i]]=i;\n\t}\n\tbuild(1,1,n);\n\twhile(m--)\n\t{\n\t\tre op=read(),x=read(),y=read();\n\t\tif(op==2) (query(1,1,n,x,y)>=x)?write(\"Yes\"):write(\"No\");\n\t\telse erase(x),add(x,y);\n\t}\n\treturn ot(),0;\n}\n//Author: disangan233\n//In my dream's scene,I can see the everything that in Cyaegha.\n```",
        "postTime": 1572239057,
        "uid": 72679,
        "name": "disangan233",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5604 \u3010\u5c0fO\u4e0e\u6392\u5217\u3011"
    },
    {
        "content": "\u63a8\u4e00\u6ce2\u849f\u84bb\u7684BLOG\uff1ahttps://blog.csdn.net/zhangjianjunab\n\n[\u5c0fO\u4e0e\u6392\u5217](https://www.luogu.org/problem/P5604)\n\n\u8fd9\u9053\u9898\u76ee\u5982\u679c\u6ca1\u6709\u795e\u7287\u63d0\u793a\u6839\u672c\u505a\u4e0d\u51fa\u6765\u3002\n\n~~\u9996\u5148\u6211\u4eec\u6709\u4e2a\u5f88\u660e\u663e\u7684\u601d\u8def\uff0c\u5e26\u4fee\u83ab\u961f\u3002~~\n\n\u9996\u5148\u8fd9\u9053\u9898\u76ee\u6211\u4eec\u5f88\u660e\u663e\u53ef\u4ee5\u5f97\u5230$n$\u4e2a\u6570\u5bf9\uff0c\u5c31\u662f\u8bf4\u533a\u95f4\u5185\u53ea\u8981\u6709\u8fd9\u4e9b\u6570\u5bf9\u7684\u8bdd\u5c31\u662fYes\uff0c\u90a3\u4e48\u5bf9\u4e8e$P_i=j$\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u6570\u5bf9$(i,j)$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4f4d\u7f6e$i$\uff0c\u5206\u522b\u5bf9\u4e8e\u4e24\u4e2a\u53ef\u4ee5\u548c\u4ed6\u7ec4\u6210\u6570\u5bf9\u7684$k_1,k_2$\uff0c\u6c42\u51fa\u6700\u5c0f\u7684\u533a\u95f4$[i,j](j>i,a[j]=k_1ork_2)$\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230$2n$\u4e2a\u533a\u95f4\uff0c\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\uff0c\u8be2\u95ee\u533a\u95f4\u4e2d\u662f\u5426\u5305\u542b\u4e00\u4e2a\u5c0f\u533a\u95f4\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a$r$\u5efa\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u5bf9\u4e8e\u7ba1\u7406$r$\u7684\u53f6\u5b50\u8282\u70b9\uff0c\u4ed6\u5b58\u7684\u662f\u6700\u5927\u7684$l$\u4f7f\u5f97\u6709$[l,r]$\u8fd9\u4e2a\u533a\u95f4\u3002\n\n\u800c\u5bf9\u4e8e\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u5c31\u662f\u5de6\u53f3\u513f\u5b50\u7684\u6700\u5927\u503c\uff0c\u5176\u5b9e\u5c31\u662f\u5f53$r$\u5728\u8fd9\u4e2a\u533a\u95f4\u7684\u65f6\u5019\uff0c\u6700\u5927\u7684$l$\u662f\u591a\u5c11\uff0c\u7136\u540e\u5728\u8be2\u95ee\u7684\u65f6\u5019\u628a\u8be2\u95ee\u533a\u95f4\u7684$l$\u4f20\u8fdb\u53bb\uff0c\u5728$l,r$\u4e2d\u8be2\u95ee\u4e00\u4e0b\uff0c\u5982\u679c\u53d1\u73b0\u4e00\u4e2a\u8282\u70b9\u88ab\u5b8c\u5168\u8986\u76d6\u4e14$c$\u503c\u5927\u4e8e\u7b49\u4e8e$l$\uff0c\u90a3\u4e48\u5c31\u662f\u6709\u5c0f\u533a\u95f4\u3002\n\n~~\u8bb2\u771f\u5f53\u65f6\u60f3\u51fa\u6765\u8fd9\u4e2a\uff0c\u7acb\u9a6c\u547d\u540d\u6210ZJJ\u5224\u65ad\u7ebf\u6bb5\u6811\uff0c\u8fc8\u7740\u56a3\u5f20\u7684\u6b65\u4f10\uff0c\u7136\u540e\u88ab\u795e\u7287ZFY\u5410\u69fd\uff1a\u8fd9\u4e0d\u5c31\u662f\u4e2a\u6700\u5927\u503c\u7ebf\u6bb5\u6811\u5417\u3002\u3002\u3002~~\n\n\u67e5\u8be2\u590d\u6742\u5ea6$O(logn)$\n\n---\n\n\u4f46\u662f\u5409\u5229\u6252\u62c9\u4e86\u4e00\u5927\u5768\uff0c\u5982\u4f55\u4fee\u6539\uff1f\n\n\u5bf9\u4e8e\u4fee\u6539\u4f4d\u7f6e$i$\uff0c\u628a$i$\u7684$old$\u503c\u6539\u6210$now$\u503c\u3002\n\n\u90a3\u4e48\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u56db\u4e2a\u533a\u95f4\uff0c\u4e00\u4e2a\u662f\u539f\u6765$l$ $or$ $r$\u662f$i$\u7684\uff0c\u4ee5\u53ca\u65b0\u7684$l$ $or$ $r$\u662f$i$\u7684\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u539f\u6765$r$\u662f$i$\u7684\u6211\u4eec\u8981\u600e\u4e48\u7ef4\u62a4\uff1f\n\n\u6211\u4eec\u5148\u627e\u5230$j(j>i,a[j]=old)$\uff0c\u7136\u540e\u628a$i$\u7684\u503c\u8d4b\u5230$j$\u4e0a\u5c31\u884c\u4e86\u3002\n\n\u5bf9\u4e8e\u539f\u672c$l$\u662f$i$\u7684\u5462\uff1f\u6211\u4eec\u5bf9\u4e8e\u4e24\u79cd\u6570\u5bf9\u5206\u522b\u627e\u5230\u4e86\u533a\u95f4$[i,r_1],[i,r_2]$\uff0c\u6211\u4eec\u8981\u660e\u767d\u4e00\u4e2a\u4e8b\u60c5\uff0c$x$\u4f4d\u7f6e\u4f5c\u4e3a$r$\u7684\u8bdd\uff0c\u90a3\u4e48\u4ed6\u7684\u6700\u5927\u7684$l$\u5c31\u662f\u4e24\u79cd\u5bf9\u6570\u65b9\u6848\u7684\u6700\u5927\u7684$l$\u7684\u6700\u5927\u503c\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u4e8e$r_1,r_2$\u91cd\u65b0\u627e\u4e00\u904d\u5c31\u884c\u4e86\u3002\n\n\u5bf9\u4e8e\u65b0\u7684$l$\u662f$i$\u7684\uff0c\u6211\u4eec\u968f\u4fbf\u641e\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\n\n\u5bf9\u4e8e\u65b0\u7684$r$\u662f$i$\u7684\uff0c\u6211\u4eec\u9700\u8981\u8dd1\u5230\u524d\u9762\u627e\u627e\u6700\u63a5\u8fd1\u4ed6\u7684\u4e24\u79cd\u503c\u3002\n\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u6211\u4eec\u600e\u4e48\u77e5\u9053\u6570\u503c\u4e3a$x$\u7684\u4e0b\u6807\u6700\u63a5\u8fd1$y$\u7684\u70b9\u4e0b\u6807\u662f\u591a\u5c11\uff1f\n\n\u6811\u5957\u6811\uff1f\u4e0d\u8981\uff0c\u7a7a\u95f4\u65f6\u95f4\u90fdSB\u4e86\u3002\n\n\u4ed4\u7ec6\u60f3\u60f3\uff0c\u8c8c\u4f3c\u6211\u4eec\u53ea\u8981\u5bf9\u4e8e\u6bcf\u79cd\u6570\u503c\u5efa\u4e00\u68f5\u4e0b\u6807\u4e3a\u952e\u503c\u7684\u5e73\u8861\u6811\uff0c\u8282\u70b9\u603b\u6570\u662f\u4e3a$n$\u4e2a\u8282\u70b9\u7684\uff0c\u5999\u554a\u3002\n\n\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f$O((n+m)logn)$\n\nupdate\uff1a\n\u7b2c\u4e8c\u6b21\u66f4\u65b0\uff01\n\n\u5728\u819c\u62dc\u4e86zhoufangyuan\u795e\u7287$\u221e$\u6b21\u540e\uff0c\u4ed6\u7a81\u7136\u964d\u795e\u65e8\u4e8e\u4eba\u95f4\uff0c\u6211\u7684\u4ee3\u7801\u6709\u9519\uff1f\n\n\u4ed4\u7ec6\u770b\u770b\uff0c\u539f\u6765\u662f\u56e0\u4e3a\u4e00\u4e2a\u70b9\u662f\u53ef\u4ee5\u627e\u524d\u9762\u6700\u8fd1\u7684\u70b9\u5bf9\u66f4\u65b0$l$\uff0c\u4f46\u662f\u8fd8\u662f\u8981\u6ce8\u610f\u4e00\u4e2a\u7ec6\u8282\uff0c\u5c31\u662f\u6570\u5bf9\u4e4b\u95f4\u6709\u4e0e\u8fd9\u4e2a\u70b9\u76f8\u540c\u7684\u6743\u503c\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u53ea\u80fd\u66f4\u65b0$0$\u3002\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20191029130511719.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3poYW5namlhbmp1bmFi,size_16,color_FFFFFF,t_70)\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<ctime>\n#define  N  510000\n#define  NN  1100000\nusing  namespace  std;\nstruct  node\n{\n\tint  lc,rc,l,r,c;\n}tr[NN];int  len;\nvoid  bt(int  l,int  r)\n{\n\tlen++;int  now=len;\n\ttr[now].l=l;tr[now].r=r;\n\tif(l<r)\n\t{\n\t\tint  mid=(l+r)>>1;\n\t\ttr[now].lc=len+1;bt(l,mid);\n\t\ttr[now].rc=len+1;bt(mid+1,r);\n\t}\n}\ninline  int  mymax(int  x,int  y){return  x>y?x:y;}\nint  change(int  now,int  x,int  k,int  type/*type=0\u8868\u793a\u4ee3\u66ff\uff0ctype=1\u8868\u793a\u53d6max*/)//\u8fd4\u56de\u7684\u662fx\u7684\u503c\n{\n\tif(tr[now].l==tr[now].r){int  ans=tr[now].c;type==0?tr[now].c=k:tr[now].c=mymax(tr[now].c,k);return  ans;}\n\tint  mid=(tr[now].l+tr[now].r)/2,lc=tr[now].lc,rc=tr[now].rc,ans=0;\n\tif(x<=mid)ans=change(lc,x,k,type);\n\telse  ans=change(rc,x,k,type);\n\ttr[now].c=mymax(tr[lc].c,tr[rc].c);\n\treturn  ans;\n}\nbool  findans(int  now,int  l,int  r,int  k/*\u53c2\u6570*/)//\u8fd4\u56de\u662f\u5426\u5305\u542b\u533a\u95f4\n{\n\tif(tr[now].l==l  &&  tr[now].r==r)return  tr[now].c>=k;\n\tint  mid=(tr[now].l+tr[now].r)/2,lc=tr[now].lc,rc=tr[now].rc;\n\tif(r<=mid)return  findans(lc,l,r,k);\n\telse  if(mid<l)return  findans(rc,l,r,k);\n\telse  return  findans(lc,l,mid,k)|findans(rc,mid+1,r,k);\n}\n//\u7ebf\u6bb5\u6811\nclass  fhq//fhq treap\u4e07\u5c81 \n{\n\tpublic:\n\t\tint  size[N],vio[N],root[N],key[N],son[N][2];\n\t\tinline  void  pushup(int  x){size[x]=size[son[x][0]]+size[son[x][1]];}\n\t\tvoid  spilt(int  now,int  k,int  &x,int  &y)\n\t\t{\n\t\t\tif(!now)x=0,y=0;\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(key[now]<=k)x=now,spilt(son[x][1],k,son[x][1],y),pushup(x);\n\t\t\t\telse  y=now,spilt(son[y][0],k,x,son[y][0]),pushup(y),pushup(y);\n\t\t\t}\n\t\t}\n\t\tint  merge(int  x,int  y)\n\t\t{\n\t\t\tif(!x  ||  !y)return  x+y;\n\t\t\tif(vio[x]<=vio[y])son[x][1]=merge(son[x][1],y);\n\t\t\telse  son[y][0]=merge(x,son[y][0]),x^=y^=x^=y;\n\t\t\tpushup(x);return  x;\n\t\t}\n\t\tvoid  first_do(int  x)\n\t\t{\n\t\t\tfor(int  i=1;i<=x;i++)size[i]=1,vio[i]=rand(),key[i]=i;\n\t\t}\n\t\tvoid  add(int  &rt,int  id/*\u7f16\u53f7*/)\n\t\t{\n\t\t\tif(!rt)rt=id;\n\t\t\telse\n\t\t\t{\n\t\t\t\tint  x,y;spilt(rt,id,x,y);\n\t\t\t\trt=merge(merge(x,id),y);\n\t\t\t}\n\t\t}\n\t\tvoid  del(int  &rt,int  id)//\u4ece\u6839\u4e3art\u7684\u6811\u4e2d\u5206\u79bbid \n\t\t{\n\t\t\tint  x,y,z;spilt(rt,id-1,x,y);spilt(y,id,y,z);\n\t\t\trt=merge(x,z);\n\t\t}\n\t\tint  findqian(int  &rt,int  k/*\u67e5\u627ek\u7684\u524d\u9a71*/)\n\t\t{\n\t\t\tif(rt==0)return  0;\n\t\t\tint  x=rt,ans=0;\n\t\t\twhile(x)\n\t\t\t{\n\t\t\t\tif(key[x]>=k)x=son[x][0];\n\t\t\t\telse  if(key[x]<k)ans=x,x=son[x][1];\n\t\t\t}\n\t\t\treturn  ans;\n\t\t}\n\t\tint  findhou(int  &rt,int  k/*\u67e5\u627ek\u7684\u524d\u9a71*/)\n\t\t{\n\t\t\tif(rt==0)return  0;\n\t\t\tint  x=rt,ans=0;\n\t\t\twhile(x)\n\t\t\t{\n\t\t\t\tif(key[x]>k)ans=x,x=son[x][0];\n\t\t\t\telse  if(key[x]<=k)x=son[x][1];\n\t\t\t}\n\t\t\treturn  ans;\n\t\t}\n}zjj;\nint  to[N][2],n,m;\nint  a[N],b[N];\nint  main()\n{\n\tsrand(999);\n\tscanf(\"%d%d\",&n,&m);\n\tzjj.first_do(n);bt(1,n);\n\tfor(int  i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&b[i]);\n\t\tto[i][0]=b[i];to[b[i]][1]=i;\n\t}\n\tfor(int  i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tzjj.add(zjj.root[a[i]],i);\n\t}\n\tfor(int  i=1;i<=n;i++)\n\t{\n\t\tfor(int  j=0;j<=1;j++)\n\t\t{\n\t\t\tint  x=zjj.findhou(zjj.root[to[a[i]][j]],i);//\u627e\u5230\u7b26\u5408\u5bf9\u6570\u7684\u6570\u5b57\u3002\n\t\t\tif(x)change(1,x,i,1);\n\t\t}\n\t}\n\t//\u5efa\u6811\n\tfor(int  i=1;i<=m;i++)\n\t{\n\t\tint  type,l,r;scanf(\"%d%d%d\",&type,&l,&r);\n\t\tif(type==2)\n\t\t{\n\t\t\tif(findans(1,l,r,l)==true)printf(\"Yes\\n\");\n\t\t\telse  printf(\"No\\n\");\n\t\t}//\u77ed\u77ed\u7684\u8be2\u95ee\n\t\telse\n\t\t{\n\t\t\tint  x=0;\n\t\t\tfor(int  j=0;j<=1;j++)x=mymax(x,zjj.findqian(zjj.root[to[r][j]],l));//\u4ee3\u66ff\u6570\u5b57 \n\t\t\tx=change(1,l,x,0);//\u8868\u793a\u66ff\u4ee3\u539f\u6765\u7684\u4f4d\u7f6e\uff0c\u5e76\u4e14\u83b7\u53d6\u5230\u73b0\u5728\u7684\u4f4d\u7f6e\n\t\t\t//\u4ee5\u65b0\u7684\"l\"\u4e3ar\u7684\u533a\u95f4\n\t\t\tint  y=zjj.findhou(zjj.root[a[l]],l);\n\t\t\tif(y)change(1,y,x,1);\n\t\t\t//\u4ee5\u65e7\u7684\"l\"\u4e3ar\u7684\u533a\u95f4\n\t\t\tzjj.del(zjj.root[a[l]],l);zjj.add(zjj.root[r],l);\n\t\t\t//\u5e73\u8861\u6811\u6362\u70b9\n\t\t\tfor(int  j=0;j<=1;j++)\n\t\t\t{\n\t\t\t\tint  xx=to[a[l]][j];//\u8868\u793a\u4e0e\u4ed6\u6709\u5173\u7684 \n\t\t\t\ty=zjj.findhou(zjj.root[xx],l);\n\t\t\t\tif(y)\n\t\t\t\t{\n\t\t\t\t\tint  z=0;\n\t\t\t\t\tfor(int  k=0;k<=1;k++)z=mymax(z,zjj.findqian(zjj.root[to[xx][k]],y));//\u91cd\u65b0\u53bb\u627e\n\t\t\t\t\tchange(1,y,z,0);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//\u4ee5\u65e7\u7684\"l\"\u4e3al\u7684\u533a\u95f4\n\t\t\tfor(int  j=0;j<=1;j++)\n\t\t\t{\n\t\t\t\tx=zjj.findhou(zjj.root[to[r][j]],l);//\u4ee3\u66ff\u6570\u5b57 \n\t\t\t\tif(x)change(1,x,l,1);\n\t\t\t}\n\t\t\t//\u4ee5\u65b0\u7684\"l\"\u4e3al\u7684\u533a\u95f4\n\t\t\ta[l]=r;\n\t\t}\n\t}\n\treturn  0;\n}\n```",
        "postTime": 1572250921,
        "uid": 65602,
        "name": "\u7231\u559d\u654c\u654c\u754f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5604 \u3010\u5c0fO\u4e0e\u6392\u5217\u3011"
    },
    {
        "content": "# \u5c0fO\u4e0e\u6392\u5217\n\n\u8fd9\u662f\u4e00\u4e2a\u597d\u9898\u3002[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P5604)\n\n## \u9898\u76ee\u53d9\u8ff0\n\n\u7ed9\u4f60$n$\u4e2a\u6620\u5c04\u5173\u7cfb\uff0c\u6c42\u4e00\u4e2a\u533a\u95f4\u91cc\u6709\u6ca1\u6709\u4e24\u4e2a\u5143\u7d20\u53ef\u4ee5\u6620\u5c04\u3002\n\n## \u9898\u89e3\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u8bb8\u591a\u6570\u5bf9\uff0c\u53ea\u8981\u533a\u95f4\u91cc\u6709\u8fd9\u4e9b\u6570\u5bf9\u5c31\u884c\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570\u548c\u6700\u9760\u8fd1\u5b83\u7684\u3001\u5728\u5b83\u524d\u9762\u7684\u3001\u5e76\u53ef\u4ee5\u548c\u4ed6\u7ec4\u6210\u6570\u5bf9\u7684\u6570\u7684\u4f4d\u7f6e\u3002\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\u5373\u53ef\uff08\u5224\u65ad\u533a\u95f4\u6700\u5927\u503c\u662f\u4e0d\u662f\u5728`l`\u540e\u9762\uff09\u3002\n\n\u8003\u8651\u5982\u4f55\u5e94\u5bf9\u4fee\u6539\u64cd\u4f5c\u3002\u53d1\u73b0\u6bcf\u4e00\u6b21\u4fee\u6539\u53ef\u80fd\u5f71\u54cd\u6700\u591a$\\mathcal O(n)$\u4e2a\u70b9\u7684\u503c\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u6709\u95ee\u9898\u3002\u8003\u8651\u53bb\u6389\u4e00\u4e9b\u65e0\u610f\u4e49\u6570\u5bf9\uff0c\u4e00\u4e2a\u70b9\u53ea\u627e\u4e24\u8fb9\u90fd\u662f\u6700\u8fd1\u7684\u90a3\u79cd\uff0c\u5c31\u662f\u4e0e`A`\u6700\u8fd1\u7684\u662f`B`\uff0c\u4e0e`B`\u6700\u8fd1\u7684\u662f`A`\u90a3\u79cd\u3002\u8fd9\u6837\u53ef\u4ee5\u5f97\u5230$\\le n$\u4e2a\u6570\u5bf9\uff0c\u590d\u6742\u5ea6\u5c31\u6b63\u786e\u4e86\u3002\n\n\u7531\u4e8e\u6211\u4eec\u9700\u8981\u6743\u503c\u4e3a$x$\u4e0e\u8fd9\u4e2a\u70b9\u6700\u8fd1\u7684\u90a3\u4e2a\u70b9\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e00\u4e2a\u6743\u503c\u4e00\u4e2a\u5e73\u8861\u6811\u3002\n\n## \u77e5\u8bc6\u70b9\n\n+ \u5728\u533a\u95f4\u91cc\u6709\u6ca1\u6709\u6570\u5bf9\u8fd9\u79cd\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6cd5\u503c\u5f97\u5b66\u4e60\u3002\n+ \u53bb\u6389\u5197\u4f59\u6570\u5bf9\u7684\u65b9\u5f0f\u4e5f\u503c\u5f97\u5b66\u4e60\u3002\n\n## \u4ee3\u7801\n\n\u8fd9\u4efd\u4ee3\u7801\u5728\u6700\u4f18\u89e3\u7684\u7b2c\u4e00\u4f4d\u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstdlib>\n#include <ctime>\n#include <stack>\nusing namespace std;\nconst int N = 5e5 + 5;\ninline int Read() {\n\tint ret = 0;\n\tchar ch = getchar();\n\twhile (!isdigit(ch)) ch = getchar();\n\twhile (isdigit(ch)) ret = ret * 10 + (ch - '0'), ch = getchar();\n\treturn ret;\n}\nstruct SegmentTree {\n\t#define ls(x) (x << 1)\n\t#define rs(x) (x << 1 | 1)\n\tint mx[N * 4];\n\tinline void PushUp(int now) {\n\t\tmx[now] = max(mx[ls(now)], mx[rs(now)]);\n\t}\n\tvoid Insert(int now, int L, int R, int pos, int val) {\n\t\tif (L == R) {\n\t\t\tmx[now] = val;\n\t\t\treturn ;\n\t\t}\n\t\tint mid = (L + R) >> 1;\n\t\tif (pos <= mid) Insert(ls(now), L, mid, pos, val);\n\t\telse Insert(rs(now), mid + 1, R, pos, val);\n\t\tPushUp(now);\n\t}\n\tint Ask(int now, int L, int R, int al, int ar) {\n\t\tif (al <= L && R <= ar) return mx[now];\n\t\tif (al > R || ar < L) return 0;\n\t\tint mid = (L + R) >> 1;\n\t\treturn max(Ask(ls(now), L, mid, al, ar), Ask(rs(now), mid + 1, R, al, ar));\n\t}\n} tr;\nint root[N];\nstruct FHQ_Treap {\n\tint ch[N][2], pri[N], val[N], siz[N], tail, aRt, bRt, cRt;\n\tstack<int> trash;\n\tinline void Update(int id) {\n\t\tsiz[id] = siz[ch[id][0]] + siz[ch[id][1]] + 1;\n\t}\n\tinline int NewNode(int num) {\n\t\tint id = ++tail;\n\t\tif (!trash.empty()) id = trash.top(), trash.pop();\n\t\tpri[id] = rand(), val[id] = num, siz[id] = 1;\n\t\treturn id;\n\t}\n\tvoid Split(int id, int num, int &ln, int &rn) {\n\t\tif (!id) ln = rn = 0;\n\t\telse {\n\t\t\tif (val[id] <= num) {\n\t\t\t\tln = id;\n\t\t\t\tSplit(ch[id][1], num, ch[id][1], rn);\n\t\t\t} else {\n\t\t\t\trn = id;\n\t\t\t\tSplit(ch[id][0], num, ln, ch[id][0]);\n\t\t\t}\n\t\t\tUpdate(id);\n\t\t}\n\t}\n\tint Merge(int A, int B) {\n\t\tif (!A || !B) return A + B;\n\t\tif (pri[A] < pri[B]) {\n\t\t\tch[A][1] = Merge(ch[A][1], B);\n\t\t\treturn Update(A), A;\n\t\t} else {\n\t\t\tch[B][0] = Merge(A, ch[B][0]);\n\t\t\treturn Update(B), B;\n\t\t}\n\t}\n\tvoid Insert(int &rt, int num) {\n\t\tSplit(rt, num, aRt, bRt);\n\t\trt = Merge(Merge(aRt, NewNode(num)), bRt);\n\t}\n\tvoid Erase(int &rt, int num) {\n\t\tSplit(rt, num - 1, aRt, bRt);\n\t\tSplit(bRt, num, bRt, cRt);\n\t\trt = Merge(aRt, cRt);\n\t\tif (bRt) trash.push(bRt);\n\t}\n\tint Kth(int rt, int kth) {\n\t\tif (kth > siz[rt] || kth < 1) return 0;\n\t\tint now = rt;\n\t\twhile (1) {\n\t\t\tif (kth <= siz[ch[now][0]]) now = ch[now][0];\n\t\t\telse if (siz[ch[now][0]] + 1 == kth) return val[now];\n\t\t\telse kth -= siz[ch[now][0]] + 1, now = ch[now][1];\n\t\t}\n\t}\n\tint Prev(int &rt, int num) {\n\t\tSplit(rt, num - 1, aRt, bRt);\n\t\tint ret = Kth(aRt, siz[aRt]);\n\t\trt = Merge(aRt, bRt);\n\t\treturn ret;\n\t}\n\tint Next(int &rt, int num) {\n\t\tSplit(rt, num, aRt, bRt);\n\t\tint ret = Kth(bRt, 1);\n\t\trt = Merge(aRt, bRt);\n\t\treturn ret;\n\t}\n} bt;\nint len, nbQry, sht[N], inv[N], seq[N], last[N], pre[N];\ninline void Update(int pos) {\n\tint shtPrev = bt.Prev(root[sht[seq[pos]]], pos);\n\tif (bt.Prev(root[seq[pos]], pos) > shtPrev) shtPrev = 0;\n\tint invPrev = bt.Prev(root[inv[seq[pos]]], pos);\n\tif (bt.Prev(root[seq[pos]], pos) > invPrev) invPrev = 0;\n\tint mx = max(shtPrev, invPrev);\n\ttr.Insert(1, 1, len, pos, mx);\n}\ninline void Change(int pos, int num) {\n\tint shtNext1 = bt.Next(root[sht[seq[pos]]], pos);\n\tint invNext1 = bt.Next(root[inv[seq[pos]]], pos);\n\tint oriNext1 = bt.Next(root[seq[pos]], pos);\n\tbt.Erase(root[seq[pos]], pos);\n\tseq[pos] = num;\n\tbt.Insert(root[seq[pos]], pos);\n\tint shtNext2 = bt.Next(root[sht[seq[pos]]], pos);\n\tint invNext2 = bt.Next(root[inv[seq[pos]]], pos);\n\tint oriNext2 = bt.Next(root[seq[pos]], pos);\n\tif (shtNext1) Update(shtNext1);\n\tif (invNext1) Update(invNext1);\n\tif (oriNext1) Update(oriNext1);\n\tif (shtNext2) Update(shtNext2);\n\tif (invNext2) Update(invNext2);\n\tif (oriNext2) Update(oriNext2);\n\tUpdate(pos);\n}\nint main() {\n\tsrand(123456789);\n\tlen = Read(), nbQry = Read();\n\tfor (int i = 1; i <= len; ++i) sht[i] = Read(), inv[sht[i]] = i;\n\tfor (int i = 1; i <= len; ++i) seq[i] = Read(), bt.Insert(root[seq[i]], i);\n\tfor (int pos = 1; pos <= len; ++pos) {\n\t\tint pos1 = last[sht[seq[pos]]], pos2 = last[inv[seq[pos]]];\n\t\tint pp = max(pos1, pos2);\n\t\tif (pp > pre[last[seq[pos]]]) {\n\t\t\ttr.Insert(1, 1, len, pos, pre[pos] = pp);\n\t\t}\n\t\tlast[seq[pos]] = pos;\n\t}\n\twhile (nbQry--) {\n\t\tint opt, fir, sec;\n\t\topt = Read(), fir = Read(), sec = Read();\n\t\tif (opt == 1) {\n\t\t\tChange(fir, sec);\n\t\t} else {\n\t\t\tif (tr.Ask(1, 1, len, fir, sec) >= fir) puts(\"Yes\");\n\t\t\telse puts(\"No\");\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1585468819,
        "uid": 75715,
        "name": "KokiNiwa",
        "ccfLevel": 0,
        "title": "\u5c0fO\u4e0e\u6392\u5217\uff08\u7ebf\u6bb5\u6811\uff0c\u5e73\u8861\u6811\uff09"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u6ce5\u840c~~\u4ee3\u7801~~\u90fd\u8fd9\u4e48\u77ed\u554a\uff1f\uff1f\uff1f\n\n\u6bd4\u8d5b\u7684\u65f6\u5019\u4e00\u773c $O(\\frac {n^2}{32})$\uff0c\u770b\u5230 $n\\le 5\\times 10^5$\uff0c\u81ea\u95ed\u4e86\u3002\u3002\u3002\n\n\u672c\u4ee5\u4e3a\u53ef\u4ee5\u6bd4\u8d5b\u6700\u540e 1h rush \u5b8c\u8fd9\u9898\u7684\uff0c\u7ed3\u679c\u8c03\u4e0d\u51fa\u6765\uff0c\u52a0\u8d5b\u540e\u5199\u4e86\u5c06\u8fd1 6h\n\n\u80af\u5b9a\u4f1a\u6709\u66f4\u7b80\u5355\u7684\u5199\u6cd5 $\\text{QAQ}$\n\n\u51fa\u9898\u4eba\u7684\u9898\u89e3\u4e0a\u5df2\u7ecf\u5199\u5f97\u5f88\u6e05\u695a\u4e86\u3002\n\n\u5148\u8003\u8651\u4e00\u4e2a\u4e0d\u5e26\u4fee\u7684\u505a\u6cd5\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u6211\u4eec\u5148\u628a\u5b83\u5de6\u8fb9\u548c\u53f3\u8fb9 $p_{a_i}$ \u6700\u8fd1\u7684\u51fa\u73b0\u4f4d\u7f6e\uff0c\u8be2\u95ee\u76f8\u5f53\u4e8e\u5728\u7ebf\u6bb5\u6811\u4e0a\u67e5\u4e00\u67e5\u6700\u503c\u3002\n\n\u5e26\u4fee\u6539\u7684\u8bdd\uff0c\u5bf9\u4e8e $a$ \u662f\u6392\u5217\uff0c\u53ef\u4ee5\u8bb0\u4e00\u8bb0\u6743\u503c\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u914d\u5408\u4e0a\u9762\u7684\u7b97\u6cd5\u4ee5\u53ca\u66b4\u529b\uff0c\u53ef\u4ee5\u62ff\u5230 $\\text{60pts}$\u3002\n\n\u82e5 $a$ \u662f\u5e8f\u5217\uff0c\u76f4\u63a5\u66b4\u529b\u4fee\u6539\u540e\u9762\u7684\u503c\u4f1a\u9000\u5316\u6210 $O(n^2)$\u3002\u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u60f3\u60f3\u662f\u5426\u53ef\u4ee5\u53bb\u6389\u4e00\u4e9b\u591a\u4f59\u7684\u6570\u5bf9\u3002\n\n\uff08\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u5339\u914d\u90fd\u662f\u5355\u5411\u5339\u914d\uff0c$0$ \u8868\u793a\u672a\u5339\u914d\uff09\n\n\u6bd4\u5982\u8bf4 $i\\rightarrow k,j\\rightarrow k,|i-k|>|j-k|$\uff0c\u90a3\u4e48 $j\\rightarrow k$ \u4e00\u5b9a\u66f4\u4f18\u3002\n\n\u8bb0 $\\text{pre}$ \u4e3a\u4e00\u4e2a\u70b9\u7684\u524d\u9762\u5339\u914d\u7684\u4f4d\u7f6e\uff0c\u5047\u8bbe\u4e2d\u95f4\u7684\u4f4d\u7f6e\u5339\u914d\u4e24\u8fb9\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u5176\u4e2d\u7684\u4e00\u6bb5 $\\text{pre}_{i\\sim j}$ \u5c31\u662f\u957f\u8fd9\u6837\u7684\uff1a\n\n`(?)(i, 0, 0, 0, 0, 0, 0, 0, 0)(?)`\n\n\u540c\u7406\uff0c$\\text{suf}_{i\\sim j}$ \u662f\u957f\u8fd9\u6837\u7684\uff1a\n\n`(?)(0, 0, 0, 0, 0, 0, 0, 0, j)(?)`\n\n\u6bcf\u6b21\u4fee\u6539\u53ea\u4f1a\u6ce2\u53ca\u539f\u6765\u3001\u540e\u6765\u3001\u539f\u6765\u9006\u5339\u914d\u3001\u540e\u6765\u9006\u5339\u914d\u7684\u503c\u7684\u524d\u9a71\u540e\u7ee7\u7684\u4f4d\u7f6e\u4ee5\u53ca\u4fee\u6539\u4f4d\u7f6e\u7684 $\\text{pre,suf}$\uff0c\u8fd9\u6837\u6570\u5bf9\u7684\u66f4\u65b0\u662f $O(1)$\uff0c\u7528 $\\text{set}$ \u7ef4\u62a4\u4e00\u4e0b\uff0c\u52a0\u4e0a\u7ebf\u6bb5\u6811\uff0c\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n\u5177\u4f53\u7684\u5206\u7c7b\u8fd8\u662f\u81ea\u5df1\u624b\u63a8\u4e00\u904d\u5427\uff0c\u8bb2\u4e5f\u8bb2\u4e0d\u6e05\u695a\uff0c\u770b\u4ee3\u7801\u597d\u4e86\u3002\n\n$Code\\ Below:$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=500005;\nint n,m,p[maxn],a[maxn],pos[maxn],lst[maxn],id[maxn][2];\nset<int> s[maxn];\nset<int>::iterator it,itl,itr;\nstruct Segment_Tree\n{\n\tint op,sum[maxn<<2];\n\t#define ls (rt<<1)\n\t#define rs (rt<<1|1)\n\t#define pushup(rt) sum[rt]=!op?max(sum[ls],sum[rs]):min(sum[ls],sum[rs])\n\tvoid build(int rt,int l,int r)\n\t{\n\t\tif(l==r) { sum[rt]=id[l][op]; return; }\n\t\tint mid=(l+r)>>1;\n\t\tbuild(ls,l,mid),build(rs,mid+1,r),pushup(rt);\n\t}\n\tvoid update(int rt,int l,int r,int pos,int val,int t=0)\n\t{\n\t\tif(l==r) { sum[rt]=!t?val:!op?max(sum[rt],val):min(sum[rt],val); return; }\n\t\tint mid=(l+r)>>1;\n\t\tif(pos<=mid) update(ls,l,mid,pos,val,t);\n\t\telse update(rs,mid+1,r,pos,val,t);\n\t\tpushup(rt);\n\t}\n\tint query(int rt,int l,int r,int x,int y)\n\t{\n\t\tif(x<=l && r<=y) return sum[rt];\n\t\tint mid=(l+r)>>1;\n\t\tif(y<=mid) return query(ls,l,mid,x,y);\n\t\tif(x>mid) return query(rs,mid+1,r,x,y);\n\t\treturn !op?max(query(ls,l,mid,x,y),query(rs,mid+1,r,x,y)):\n\t\tmin(query(ls,l,mid,x,y),query(rs,mid+1,r,x,y));\n\t}\n}mx,mn;\n#define mxupd(x,y) mx.update(1,1,n,x,y)\n#define mnupd(x,y) mn.update(1,1,n,x,y)\ninline void erase(int x)\n{\n\tint u=a[x],v=pos[a[x]];\n\titl=s[u].lower_bound(x);\n\tif(u==v) { s[u].erase(itl); return; }\n\titr=s[v].lower_bound(x);\n\tint pa=0,sa=n+1,pb=0,sb=n+1;\n\tit=itl; if(it!=s[u].begin()) pa=*--it;\n\tit=itl; if(++it!=s[u].end()) sa=*it;\n\tit=itr; if(it!=s[v].begin()) pb=*--it;\n\tit=itr; if(it!=s[v].end()) sb=*it;\n\t// pa...x...sa\n\t// pb...x...sb\n\tif(sb!=n+1)\n\t{\n\t\t// x...sa...()...sb\n\t\tif(sa!=n+1 && sa<sb) mx.update(1,1,n,sb,sa,1);\n\t\t// pb...pa...x...sb\n\t\telse if(pa && pa>pb) mxupd(sb,pa);\n\t\telse mxupd(sb,0);\n\t}\n\tif(pb)\n\t{\n\t\t// pb...()...pa...x\n\t\tif(pa && pa>pb) mn.update(1,1,n,pb,pa,1);\n\t\t// pb...x...sa...sb\n\t\telse if(sa!=n+1 && sa<sb) mnupd(pb,sa);\n\t\telse mnupd(pb,n+1);\n\t}\n\tv=p[a[x]],itr=s[v].lower_bound(x),pb=0,sb=n+1;\n\tit=itr; if(it!=s[v].begin()) pb=*--it;\n\tit=itr; if(it!=s[v].end()) sb=*it;\n\t// pb...pa...x...sb...sa\n\tif(pa && sb!=n+1 && pb<pa && sb<sa) mnupd(pa,sb);\n\t// pa...pb...x...sa...sb\n\tif(sa!=n+1 && pb && sb>sa && pb>pa) mxupd(sa,pb);\n\ts[u].erase(itl);\n}\ninline void insert(int x)\n{\n\tint u=a[x],v=pos[a[x]];\n\titl=s[u].insert(x).first;\n\tif(u==v) { mxupd(x,x),mnupd(x,x); return; }\n\titr=s[v].lower_bound(x);\n\tint pa=0,sa=n+1,pb=0,sb=n+1;\n\tit=itl; if(it!=s[u].begin()) pa=*--it;\n\tit=itl; if(++it!=s[u].end()) sa=*it;\n\tit=itr; if(it!=s[v].begin()) pb=*--it;\n\tit=itr; if(it!=s[v].end()) sb=*it;\n\t// pa...x...sb...sa\n\tif(sb!=n+1 && sb<sa) mxupd(sb,x);\n\t// pa...pb...x\n\tif(pb && pa<pb) mnupd(pb,x);\n\tv=p[a[x]],itr=s[v].lower_bound(x),pb=0,sb=n+1;\n\tit=itr; if(it!=s[v].begin()) pb=*--it;\n\tit=itr; if(it!=s[v].end()) sb=*it;\n\t// pa...x...sb...sa\n\tif(sb!=n+1 && sa>sb)\n\t{\n\t\t// pb...pa...x...sb\n\t\tif(pa && pa>pb) mnupd(pa,n+1);\n\t\tmnupd(x,sb);\n\t}\n\telse mnupd(x,n+1);\n\t// pa...pb...x...sa\n\tif(pb && pa<pb)\n\t{\n\t\t// pa...pb...x...sa...sb\n\t\tif(sa!=n+1 && sa<sb) mxupd(sa,0);\n\t\tmxupd(x,pb);\n\t}\n\telse mxupd(x,0);\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&p[i]),pos[p[i]]=i;\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]),s[a[i]].insert(i);\n\tfor(int i=1;i<=n;i++) id[i][0]=(p[a[i]]==a[i])?i:(lst[p[a[i]]]<lst[a[i]])?0:lst[p[a[i]]],lst[a[i]]=i;\n\tfor(int i=1;i<=n;i++) lst[i]=n+1;\n\tfor(int i=n;i;i--) id[i][1]=(p[a[i]]==a[i])?i:(lst[p[a[i]]]>lst[a[i]])?n+1:lst[p[a[i]]],lst[a[i]]=i;\n\tmx.op=0,mn.op=1,mx.build(1,1,n),mn.build(1,1,n);\n\tint op,x,y;\n\twhile(m--)\n\t{\n\t\tscanf(\"%d%d%d\",&op,&x,&y);\n\t\tif(op==1) erase(x),a[x]=y,insert(x);\n\t\telse puts((mx.query(1,1,n,x,y)>=x || mn.query(1,1,n,x,y)<=y)?\"Yes\":\"No\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1572251816,
        "uid": 35069,
        "name": "Owen_codeisking",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5604 \u3010\u5c0fO\u4e0e\u6392\u5217\u3011"
    }
]