[
    {
        "content": "\u8fd9\u9053\u9898\u5e94\u4e3a\u6811\u5f62DP\u3002\n\n\u611f\u6027\u7684\u7406\u89e3\u4e00\u4e0b\uff0c\u706d\u706b\u5668\u5e94\u8be5\u653e\u5728\u8d8a\u4e0a\u9762\u7684\u5730\u65b9\u8d8a\u597d\u3002\n\n\u90a3\u4e48\u5c31\u6309\u7167\u6df1\u5ea6\u7531\u5927\u5230\u5c0f\u6765\u653e\u706d\u706b\u5668\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9x\uff0c\n\n\u5982\u679c\u5728\u5b83\u7684\u5b50\u6811\u4e2d\u4ecd\u5b58\u5728\u7740\u8ddd\u79bb\u5b83k\u7684\u8282\u70b9\u6ca1\u6709\u706d\u706b\u5668\uff0c\n\n\u90a3\u4e48\u8fd9\u4e9b\u706d\u706b\u5668\u5c31\u4e00\u5b9a\u8981\u5728x\u8fd9\u4e2a\u4f4d\u7f6e\u5206\u914d\u51fa\u53bb\uff0c\n\n\u56e0\u4e3a\u518d\u4e0a\u9762\u7684\u8282\u70b9\u65e0\u6cd5\u7ed9\u8fd9\u4e9b\u8282\u70b9\u5206\u914d\u3002\n\n\u8bbef[x][k]\u8868\u793a\u5728x\u7684\u5b50\u6811\u4e2d\uff0c\u8ddd\u79bbx\u4e3ak\u7684\u706d\u706b\u5668\u6709\u591a\u5c11\u4e2a\u70b9\u80fd\u5206\u914d\u3002\n\n\u8bbeg[x][k]\u8868\u793a\u5728x\u7684\u5b50\u6811\u79cd\uff0c\u8ddd\u79bbx\u4e3ak\u7684\u706d\u706b\u5668\u9700\u6c42\u7684\u70b9\u6570\u3002\n\ngx,k \u662f\u4e00\u5b9a\u8981\u5728x\u8fd9\u4e2a\u8282\u70b9\u5206\u914d\u5b8c\u7684\u3002\n\nlca\u4e3ax\u7684\u4e5f\u4e00\u4e2a\u5728\u8fd9\u8bfe\u5b50\u6811\u91cc\u9762\u5339\u914d\u5b8c\u3002\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\n#define ll long long\n#define re register\n#define il inline\n#define fp(i,a,b) for(re int i=a;i<=b;i++)\n#define fq(i,a,b) for(re int i=a;i>=b;i--)\nusing namespace std;\nconst int N=2e5+50;\nint n,s,k;\nint f[N][22],g[N][22],ans=0,h[N],cnt;//G[x][k]\u8868\u793ax\u4e0b\u9762\u8ddd\u79bb\u4e3ak\u7684\u9700\u8981\u706d\u706b\u5668\u7684\u623f\u95f4\u6570\uff0cF[x][k]\u8868\u793ax\u4e0b\u9762\u8ddd\u79bb\u4e3ak\u7684\u591a\u4f59\u706d\u706b\u5668\u6570\nstruct Edge\n{\n    int to,next;\n}e[N];\nil int gi()\n{\n    re int x=0;\n    re int t=1;\n    re char ch=getchar();\n    while((ch<'0'||ch>'9')&&ch!='-') ch=getchar();\n    if(ch=='-') t=-1,ch=getchar();\n    while(ch>='0'&&ch<='9') x=x*10+ch-48,ch=getchar();\n    return x*t;\n}\nil int ceil(int x)//\u9664\u4ee5s\u7684\u5411\u4e0a\u53d6\u6574\n{\n    return x ? (x-1)/s+1 : 0;\n}\nil void add(int u,int v)\n{\n    e[++cnt]=(Edge){v,h[u]};h[u]=cnt;\n}\nil void dfs(int u,int fa)\n{\n    for(re int i=h[u];i+1;i=e[i].next)\n    {\n        int v=e[i].to;\n        if(v==fa) continue;\n        dfs(v,u);\n        fp(j,1,k)\n            f[u][j]=min(n,f[u][j]+f[v][j-1]),g[u][j]+=g[v][j-1];//\u628a\u80fd\u5206\u914d\u7684\u70b9\u6570\u5411\u4e0a\u6c47\u603b\uff08\u5f53\u7136\u8981\u5c0f\u4e8e\u7b49\u4e8en\uff09\uff0c\u9700\u8981\u7684\u70b9\u6570\u4e5f\u5411\u4e0a\n    }\n    g[u][0]++;//\u5b50\u6811\u6839\u8282\u70b9\u9700\u8981\u706d\u706b\u5668\n    if(g[u][k])\n    {\n        int t=ceil(g[u][k]);//\u5982\u679c\u8981\u5206\u914d\u70b9\u6570\uff0c\u5411\u4e0a\u53d6\u6574\u53d6\u706d\u706b\u5668\u4e2a\u6570\n        f[u][0]=min(1ll*n,1ll*t*s),ans+=t;//\u4fdd\u8bc1\u80fd\u706d\u70b9\u6570\u5c0f\u4e8en\n    }\n    fp(i,0,k)\n    {\n        int j=k-i,d=min(f[u][i],g[u][j]);\n        f[u][i]-=d,g[u][j]-=d;\n    }\n    fp(i,0,k-1)//\u6b64\u5faa\u73af\u57fa\u672c\u662f\u5bf9\u4e0a\u4e00\u4e2a\u5faa\u73af\u7684\u91cd\u590d\uff0c\u56e0\u5982\u679c\u706d\u706b\u5668\u548c\u4e00\u4e2a\u9700\u8981\u914d\u5bf9\u7684\u70b9\u8ddd\u79bb\u4e3ak\u6216k-1\uff0c\u90a3\u4e48\u5728\u4ed6\u4eec\u7684lca\u5904\u80af\u5b9a\u8981\u8fdb\u884c\u5339\u914d\uff0c\u56e0\u4e3a\u5982\u679c\u5f80\u4e0a\u5c31\u662fk+2\n    {\n        int j=k-1-i,d=min(f[u][i],g[u][j]);\n        f[u][i]-=d,g[u][j]-=d;\n    }\n}\nint main()\n{\n//    freopen(\"repulsed.in\",\"r\",stdin);\n//    freopen(\"repulsed.out\",\"w\",stdout);\n    memset(h,-1,sizeof(h));\n    n=gi();s=gi();k=gi();\n    fp(i,1,n-1)\n    {\n        int u=gi(),v=gi();\n        add(u,v);add(v,u);\n    }\n    dfs(1,0);\n    fp(i,0,k)\n        fq(j,k,0)\n        if(i+j<=k)\n        {\n            int d=min(f[1][i],g[1][j]);\n            f[1][i]-=d,g[1][j]-=d;\n        }\n    int tot=0;\n    fp(i,0,k) tot+=g[1][i];\n    ans+=ceil(tot);\n    printf(\"%d\\n\",ans);\n    //fclose(stdin);\n    //fclose(stdout);\n    return 0;\n}\n\n```",
        "postTime": 1508679178,
        "uid": 21534,
        "name": "ysner",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3479 \u3010[POI2009]GAS-Fire Extinguishers\u3011"
    },
    {
        "content": "\u597d\u96be\u7684\u4e00\u9053\u9898\u3002\u3002\u3002\n\n\u9996\u5148\u6211\u4eec\u4ece\u4e0b\u5f80\u4e0a\u8003\u8651\uff0c\u76f4\u5230\u5fc5\u987b\u8981\u9009\u7684\u65f6\u5019\u518d\u9009\uff0c\u53ef\u4ee5\u8bc1\u660e\u8fd9\u6837\u4e00\u5b9a\u6700\u4f18\u3002\n\n\u6211\u4eec\u8bbe\u8ba1\u4e24\u4e2a\u72b6\u6001\u3002\n\n$f[i][j]$\u8868\u793a\u4ee5$i$\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u8ddd\u79bb$i$\u4e3a$j$\u7684\u706d\u706b\u5668\u8fd8\u6709\u591a\u5c11\u70b9\u80fd\u5206\u914d\u3002\n\n$g[i][j]$\u8868\u793a\u4ee5$i$\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u8ddd\u79bb$i$\u4e3a$j$\u7684\u70b9\u8fd8\u6709\u591a\u5c11\u6ca1\u6709\u706d\u706b\u3002\n\n\u6211\u4eec\u8003\u8651\u70b9$x$\u662f\u5426\u653e\u7f6e\u706d\u706b\u5668\u7684\u6761\u4ef6\uff0c\u5f53\u4e14\u4ec5\u5f53\u8ddd\u79bb$x$\u4e3a$k$\u7684\u70b9\u8fd8\u9700\u8981\u653e\u7f6e\u706d\u706b\u5668\u3002\u56e0\u4e3a\u5982\u679c\u4e0d\u8003\u8651$x$\uff0c\u90a3\u4e48\u5b50\u6811\u5df2\u7ecf\u8fbe\u5230\u6700\u4f18\uff0c\u800c\u4e14\u6211\u4eec\u4e0d\u80fd\u4f7f\u7528$x$\u7684\u5176\u4ed6\u5b50\u6811\u4e2d\u7684\u706d\u706b\u5668\uff0c\u56e0\u4e3a\u8ddd\u79bb\u548c\u5927\u4e8e$k$\u3002\n\n\u63a5\u7740\uff0c\u6211\u4eec\u8fd8\u8981\u8003\u8651\u5b50\u6811\u4e4b\u95f4\u7684\u60c5\u51b5\u3002\n\n\u8003\u8651\u4e24\u4e2a\u4f4d\u4e8e\u4e0d\u540c\u5b50\u6811\u4e2d\u7684\u706d\u706b\u5668\u548c\u70b9\uff0c\u5982\u679c\u4ed6\u4eec\u7684\u8ddd\u79bb\u548c\u4e3a$k$\u6216$k-1$\uff0c\u90a3\u4e48\u5c31\u5c06\u4ed6\u4eec\u76f8\u6d88\u3002\n\n\u5173\u4e8e\u8bc1\u660e\uff0c\u5982\u679c\u4ed6\u4eec\u90fd\u5339\u914d\u4e86\u8ddd\u79bb\u4e4b\u548c\u5c0f\u4e8e$k-1$\u7684\u70b9\uff0c\u90a3\u4e48\u4ea4\u6362\u5339\u914d\u4e0d\u4f1a\u4f7f\u5f97\u7b54\u6848\u66f4\u52a3\u3002\n\n\u6839\u7ed3\u70b9\u9700\u8981\u7279\u6b8a\u8003\u8651\u3002",
        "postTime": 1572949536,
        "uid": 208081,
        "name": "MikukuOvO",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3479 \u3010[POI2009]GAS-Fire Extinguishers\u3011"
    },
    {
        "content": "\u8fd9\u9898\u771f\u6ca1\u4ec0\u4e48\u601d\u8def\uff0c\u611f\u89c9\u81ea\u5df1\u8fd8\u662f\u592a\u83dc\u4e86\u3002\u60f3\u7684\u8d2a\u5fc3\u8c8c\u4f3c\u4e0d\u5168\u9762\uff0cnaive\uff01\n\n\u4e3b\u8981\u601d\u8def\u5c31\u662f\u4e07\u4e0d\u5f97\u5df2\u4e00\u5b9a\u8981\u7528\u7684\u65f6\u5019\u624d\u7528\u3002\u4e0b\u9762\u8bf4\u4e00\u4e0b\u8d2a\u5fc3\u7684\u8fc7\u7a0b\u3002\n\n\u8bbef[u][d]\u8868\u793a\u5728\u5b50\u6811\u4e2d\u4e0e\u70b9u\u8ddd\u79bb\u4e3ad\u7684\u70b9\u6709\u591a\u5c11\u80fd\u5206\u914d\n\n\u8bbeg[u][d]\u8868\u793a\u5728\u5b50\u6811\u4e2d\u4e0e\u70b9u\u8ddd\u79bb\u4e3ad\u7684\u70b9\u6709\u591a\u5c11\u9700\u8981\u88ab\u5206\u914d\uff08\u672a\u88ab\u7ba1\u7406\uff09\n\n1.\u7ee7\u627f\u513f\u5b50\u7684\u6570\u7ec4\u503c\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u5904\u7406\u5fc5\u8981\u7684\u70b9\u4e86\u3002\n\n2.\u8986\u76d6\u79bb\u5f53\u524d\u6839\u8282\u70b9\u8ddd\u79bb\u4e3ad\u7684\u672a\u8986\u76d6\u7684\u70b9\u3002\n\n3.\u8986\u76d6\u4e24\u70b9\u4e4b\u95f4\u8ddd\u79bb\u4e3ad\u7684\u672a\u8986\u76d6\u7684\u70b9\u3002\n\n4.\u8986\u76d6\u4e24\u70b9\u4e4b\u95f4\u8ddd\u79bb\u4e3ad-1\u7684\u672a\u8986\u76d6\u7684\u70b9\u3002\uff08\u5982\u679c\u5411\u4e0a\u722c\u4e00\u6b65\uff0c\u4e24\u70b9\u95f4\u8ddd\u79bb\u4f1a\u53d8\u6210d+1\uff09\n\n\u6700\u540e\u518d\u5904\u7406\u4e00\u4e0b\u6839\u8282\u70b9\u7684\u7279\u6b8a\u60c5\u51b5\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\ninline int read(){int x=0,f=1,ch=getchar(); while(ch<'0'||ch>'9'){if(ch=='-') f=-1; ch=getchar();} while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();} return x*f;}\ninline void write(int x){if (x<0) putchar('-'),x=-x; if (x>=10) write(x/10); putchar(x%10+'0');}\ninline void writeln(int x){write(x); puts(\"\");}\nconst int N=100005;\nstruct edge{\n\tint link,next;\n}e[N<<1];\nint n,s,d,head[N],tot;\ninline void add_edge(int u,int v){\n\te[++tot]=(edge){v,head[u]}; head[u]=tot;\n}\ninline void insert(int u,int v){\n\tadd_edge(u,v); add_edge(v,u);\n}\ninline void init(){\n\tn=read(); s=read(); d=read();\n\tfor (int i=1;i<n;i++){\n\t\tint u=read(),v=read();\n\t\tinsert(u,v);\n\t}\n}\nint ans,f[N][25],g[N][25];\ninline int ceil(int x){return x?(x-1)/s+1:0;}\nvoid dfs(int u,int fa){\n\tfor (int i=head[u];i;i=e[i].next){\n\t\tint v=e[i].link;\n\t\tif (v!=fa){\n\t\t\tdfs(v,u);\n\t\t\tfor (int j=1;j<=d;j++){\n\t\t\t\tf[u][j]=min(f[u][j]+f[v][j-1],n);\n\t\t\t\tg[u][j]+=g[v][j-1];\n\t\t\t}\n\t\t}\n\t}\n\tg[u][0]++;\n\tif (g[u][d]){\n\t\tint t=ceil(g[u][d]);\n\t\tf[u][0]=min(n,s*t); ans+=t;\n\t}\n\tfor (int i=0;i<=d;i++){\n\t\tint j=d-i,res=min(g[u][j],f[u][i]);\n\t\tf[u][i]-=res; g[u][j]-=res;\n\t}\n\tfor (int i=0;i<d;i++){\n\t\tint j=d-1-i,res=min(g[u][j],f[u][i]);\n\t\tf[u][i]-=res; g[u][j]-=res;\n\t}\n}\ninline void solve(){\n\tdfs(1,0);\n\tfor (int i=0;i<=d;i++){\n\t\tfor (int j=d;j>=0;j--){\n\t\t\tif (i+j<=d){\n\t\t\t\tint res=min(f[1][i],g[1][j]);\n\t\t\t\tf[1][i]-=res; g[1][j]-=res;\n\t\t\t}\n\t\t}\n\t}\n\tint res=0;\n\tfor (int i=0;i<=d;i++){\n\t\tres+=g[1][i];\n\t}\n\tans+=ceil(res);\n\twriteln(ans); \n}\nint main(){\n\tinit();\n\tsolve();\n\treturn 0;\n}\n```",
        "postTime": 1525952050,
        "uid": 34444,
        "name": "\u5927\u83dc\u9e21fks",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3479 \u3010[POI2009]GAS-Fire Extinguishers\u3011"
    },
    {
        "content": "\u4e00\u9053\u70e7\u8111\u7684\u6811\u4e0a\u4f18\u5316\u95ee\u9898. \u76ee\u524d\u7684\u51e0\u7bc7\u9898\u89e3\u5e76\u6ca1\u6709\u628a\u5173\u952e\u60f3\u6cd5\u4ee5\u53ca\u5b9a\u4e49\u8bf4\u5f97\u8db3\u591f\u6e05\u695a\uff0c\u800c\u4e14\u8fd9\u4e2a\u4f18\u5316\u601d\u8def\u503c\u5f97\u4e00\u770b\uff0c\u56e0\u6b64\u5199\u4e00\u7bc7\u65b0\u7684\u9898\u89e3.\n\n***\n\u7b80\u660e\u9898\u610f\uff1a\u5728\u4e00\u68f5\u6811\u4e0a\u5b89\u88c5\u5c3d\u53ef\u80fd\u5c11\u7684\u706d\u706b\u5668\uff0c\u5e0c\u671b\u5176\u5f71\u54cd\u8303\u56f4\u8986\u76d6\u6574\u68f5\u6811. \u6bcf\u4e2a\u706d\u706b\u5668\u7684\u5f71\u54cd\u8282\u70b9\u6570\u76ee\u548c\u534a\u5f84\u6709\u9650\u5236. \u6c42\u51fa\u6700\u5c11\u7684\u706d\u706b\u5668\u6570.\n\n\u5f62\u5f0f\u5316\u9898\u610f\uff1a\u7ed9\u5b9a\u6b63\u6574\u6570 $n,s,k$ \u548c\u4e00\u68f5 $n$ \u8282\u70b9\u7684\u6811 $T$. \u5b9a\u4e49\u4e00\u4e2a**\u706d\u706b\u5668** $E$ \u4e3a\u4e00\u4e2a\u4e8c\u5143\u7ec4 $(loc, range)$\uff0c\u5176\u4e2d**\u4f4d\u7f6e** $loc$ \u662f $T$ \u7684\u4e00\u4e2a\u8282\u70b9\uff0c**\u7ba1\u8f96\u8303\u56f4** $range$ \u662f\u5143\u6570 $\\leq s$ \u7684\u70b9\u96c6\uff0c\u5176\u6bcf\u4e2a\u70b9\uff08\u79f0\u5176\u88ab $E$ \u7ba1\u8f96\uff09\u90fd\u5728 $T$ \u4e0a\u4e14\u4e0e $loc$ \u95f4\u7684\u8def\u5f84\u957f\u7686\u4e0d\u8d85\u8fc7 $k$. \u4f60\u53ef\u4ee5\u6784\u9020 $m$ \u4e2a\u706d\u706b\u5668\u5e76\u4efb\u610f\u6307\u5b9a\u5176\u4f4d\u7f6e\u548c\u7ba1\u8f96\u8303\u56f4\uff0c\u6c42\u6700\u5c0f\u7684 $m$ \u4f7f\u5f97\u6240\u6709\u706d\u706b\u5668\u7684\u7ba1\u8f96\u8303\u56f4\u4e4b\u5e76\u4e3a $T$  \u7684\u5168\u4f53\u8282\u70b9.\n\n\u6570\u636e\u8303\u56f4\uff1a$1\\leq s\\leq n\\leq 10^5$\uff0c$1\\leq k \\leq 20$.\n\n\u672c\u9898\u6837\u4f8b\u56fe\u793a\uff1a![](https://szkopul.edu.pl/problemset/problem/b6w9exQhg7_bIqOTUqj3cTGk/site/images/OI16/gas1.gif).\n\n***\n\u9996\u5148\uff0c\u6211\u4eec\u514d\u4e0d\u4e86\u4efb\u9009\u4e00\u4e2a\u6839\u5bf9\u6811 DFS\uff08\u8fd9\u8fb9\u91c7\u7528\u540e\u6839\u5468\u6e38\uff09\uff0c\u6b64\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4ee5\u6811\u4e0a DP \u7684\u65b9\u5f0f\u66f4\u65b0\u7b54\u6848.\n\n\u6bcf\u4e2a\u8282\u70b9 $pos$ \u7684\u5b50\u95ee\u9898\u662f\u4ec0\u4e48\uff1f\u76ee\u6807\u662f\u5728 $pos$ \u4e0a\u653e\u706d\u706b\u5668\uff0c\u4f46\u662f\u9700\u8981**\u6700\u4f18**\u5730\u653e\u7f6e.\n\n$s$ \u548c $k$ \u5206\u522b\u7ea6\u675f\u4e86\u706d\u706b\u5668\u7684\u5f71\u54cd\u6570\u91cf\u548c\u534a\u5f84\uff0c\u53ef\u4ece\u5176\u5165\u624b. \u7531\u4e8e\u4e00\u4e2a\u8282\u70b9\u53ef\u4ee5\u653e\u591a\u4e2a\u706d\u706b\u5668\uff0c\u800c\u76f8\u5bf9\u4f4d\u7f6e\u662f\u786e\u5b9a\u7684\uff0c\u8bd5\u7740\u4f18\u5148\u5361 $k$ \u7684\u754c\uff0c\u5373\u5c3d\u91cf\u5728\u8ddd\u79bb\uff08\u8def\u5f84\u957f\uff09\u8fbe\u5230 $k$ \u65f6\u653e\u706d\u706b\u5668. \u5f88\u81ea\u7136\u5730\uff0c\u9700\u8981\u77e5\u9053 $pos$ \u7684\u5b50\u6811\u4e2d\u4e0e\u5176\u8ddd\u79bb\u4e3a $k$ \u7684\u70b9\u6709\u591a\u5c11\u4e2a\uff0c\u6545\u7528\u4e8c\u7ef4\u53d8\u91cf $neibs(pos, dist)$ \u8bb0\u5f55 $pos$ \u7684\u5b50\u6811\u4e2d\u4e0e\u5176\u8ddd\u79bb\u4e3a $dist$ \u7684\u70b9\u6570\uff0cDFS \u65f6\u9012\u63a8\u66f4\u65b0.\n\n\u56e0\u4e3a\u4e0d\u5e0c\u671b\u540c\u4e00\u4e2a\u8282\u70b9\u88ab\u591a\u4e2a\u706d\u706b\u5668\u7ba1\u8f96\uff0c\u65b0\u589e\u7684\u706d\u706b\u5668\u7ba1\u8f96\u7684\u70b9\u5e94\u8be5\u201c\u6263\u9664\u201d\u6389\uff0c\u6545\u9700\u8981\u4e00\u4e2a\u52a8\u6001\u91cf. \u6539\u7528\u53d8\u91cf $unasn(pos, dist)$ \u8868\u793a\u5b50\u6811\u4e2d\u4e0e $pos$ \u8ddd\u79bb\u4e3a $dist$ \u7684**\u672a\u88ab\u7ba1\u8f96\u70b9\u6570**. \u5047\u8bbe\u5728\u5f53\u524d\u4f4d\u7f6e $unasn(pos, k)>0$\uff0c\u5219\u5fc5\u987b\u5728 $pos$ \u65b0\u589e $d=\\lceil\\frac{unasn(pos, k)}{s}\\rceil$ \u4e2a\u706d\u706b\u5668.\n\n***\n\u63a5\u4e0b\u6765\uff0c\u4e00\u79cd\u5e73\u51e1\u7684\u8d2a\u5fc3\u601d\u8def\u5c31\u662f\u628a $unasn(pos, k)$ \u5185\u7684\u70b9\u5168\u90e8\u6263\u9664\uff0c\u7136\u540e\u4ece\u8fdc\u5230\u8fd1\u5206\u914d\u5b50\u6811\u91cc\u521a\u653e\u7f6e\u7684\u706d\u706b\u5668\u7684**\u5269\u4f59\u53ef\u7ba1\u8f96\u70b9\u6570** $d\u00d7s-unasn(pos, k)$\uff0c\u5e76\u6263\u9664\u76f4\u5230\u5176\u4e3a $0$.\n\n\u8fd9\u6837\u5408\u9002\u5417\uff1f\n\n\u4e14\u4e0d\u8bf4\u8fd9\u6837\u5269\u4f59\u7ba1\u8f96\u6743\u53ef\u80fd\u6263\u4e0d\u5b8c\uff0c\u4e00\u4e2a\u70b9\u7684\u706d\u706b\u5668\u9664\u4e86\u53ef\u4ee5\u7ba1\u8f96 DFS \u6b63\u5411\u7684\u5b50\u6811\uff0c\u8fd8\u53ef\u4ee5\u7ba1\u5230**\u53cd\u5411\u7684\u90a3\u68f5\u5b50\u6811**\uff0c\u8fd9\u540c\u6837\u9700\u8981\u65a4\u65a4\u8ba1\u8f83.\n\n\u6240\u4ee5\u4e4b\u524d\u5b89\u88c5\u8fc7\u7684\u706d\u706b\u5668\u4e4b\u540e\u4ecd\u9700\u5b9a\u4f4d\u548c\u66f4\u65b0\uff0c\u4e8e\u662f\u5f15\u5165\u7b2c\u4e8c\u4e2a\u52a8\u6001\u53d8\u91cf $margin(pos, dist)$ \u8868\u793a\u5b50\u6811\u4e2d\u4e0e $pos$ \u8ddd\u79bb\u4e3a $dist$ \u7684**\u706d\u706b\u5668**\u7684**\u5269\u4f59\u53ef\u7ba1\u8f96\u70b9\u6570**. \u5e73\u51e1\u601d\u8def\u4e5f\u4e0d\u80fd\u7528\uff0c\u6682\u65f6\u53ea\u628a $pos$ \u5904\u7684\u706d\u706b\u5668\u5206\u914d\u7ed9 $unasn(pos, k)$ \u8fd9\u4e9b\u70b9.\n\n***\n\u4e00\u53e5\u9884\u8b66\uff0c\u4e0b\u9762\u8d2a\u5fc3\u7b56\u7565\u7684\u6700\u4f18\u6027\u8bc1\u660e\u4e0d\u4ec5\u6211\u4e0d\u4f1a\uff0c\u800c\u4e14\u7f51\u4e0a\u4e5f\u6ca1\u627e\u5230\uff0c\u5e94\u8be5\u4e0d\u662f\u4e09\u8a00\u4e24\u8bed\u7684\u95ee\u9898. \u8d2a\u5fc3\u65b9\u6cd5\u5f88\u591a\u65f6\u5019\u662f\u5fae\u5999\u7684\uff0c\u6211\u4eec\u597d\u505a\u7684\u53ea\u662f\u76f4\u89c9\u4e0a\u7406\u89e3\u4e3a\u4ec0\u4e48\u5b83\u597d\u3001\u4ee5\u53ca\u8bf4\u660e\u5176\u5b83\u7b56\u7565\u6ca1\u6709\u5b83\u4f18.\n\n\u4e0b\u8fb9\u662f\u4e24\u4e2a\u4e3b\u8981\u89c2\u5bdf\uff1a\n\ni) \u4e3a\u5904\u7406\u4e00\u4e2a\u4f4d\u4e8e $p$ \u7684\u706d\u706b\u5668\u7ba1\u8f96\u53cd\u5411\u5b50\u6811\u7684\u60c5\u51b5\uff0c\u53ea\u9700\u5904\u7406 $p$ \u4e0e\u5176\u5177\u6709\u5171\u540c LCA \u7684\u90a3\u4e9b\u5b50\u6811\u4e2d\u672a\u88ab\u7ba1\u8f96\u70b9\u7684\u5173\u7cfb. \u6362\u8a00\u4e4b\uff0cDFS \u5230\u4e00\u4e2a\u4f4d\u7f6e $pos$ \u65f6\uff0c\u8981\u8003\u8651**\u5b50\u6811\u95f4\u7ba1\u8f96\u6743\u7684\u5206\u914d**.\n\nii) \u6211\u4eec\u4ecd\u60f3\u300c**\u5c3d\u91cf\u53ea\u7ba1\u4e0e\u706d\u706b\u5668\u76f8\u8ddd $k$ \u7684\u70b9**\u300d\uff0c\u90a3\u5c31\u5c06\u5176\u5b9e\u65bd\u4e0b\u53bb. \u8bb0 $D(u, v)$ \u4e3a\u8282\u70b9\u8ddd\u79bb\uff0c\u6211\u4eec\u5bfb\u627e\u5b50\u6811\u95f4\u8fd9\u6837\u7684\u70b9\u5bf9 $x, y$\uff0c\u5176\u6ee1\u8db3 $D(x, pos)+D(pos, y)=k$\uff0c\u4e14 $x$ \u4f4d\u7f6e\u6709\u6ca1\u8017\u5c3d\u7ba1\u8f96\u6743\u7684\u706d\u706b\u5668\u4e14 $y$ \u70b9\u8fd8\u6ca1\u88ab\u7ba1\u8f96. \u9664\u975e $x$ \u548c $y$ \u5728\u4e00\u68f5\u5b50\u6811\u4e0a\uff0c\u5426\u5219 $k=D(x, pos)+D(pos, y)=D(x, y)$. **\u7136\u540e\u628a $x$ \u4f4d\u7684\u706d\u706b\u5668\u7ba1\u8f96\u6743\u5206\u7ed9 $y$**\uff0c\u5373\u8ba9 $margin(pos, D(x, pos))$ \u548c $unasn(pos, D(pos, y))$ \u503c\u540c\u65f6\u51cf\u5c0f\u81f3\u4e00\u4e2a\u4e3a $0$.\uff08\u6ce8\u610f $D(x, pos)=0$ \u5c31\u662f\u524d\u9762\u5206\u914d $pos$ \u5904\u706d\u706b\u5668\u7684\u60c5\u51b5.\uff09\n\n\u6362\u8a00\u4e4b\uff0c\u6211\u4eec\u9700\u8981\u5728\u6bcf\u4e2a $pos$ \u5904\u5408\u5e76\u6240\u6709\u5b50\u6811\u7684\u4fe1\u606f\uff0c\u7136\u540e**\u679a\u4e3e\u5b50\u6811\u95f4\u8282\u70b9\u7684\u201c\u4e2d\u95f4\u8ddd\u79bb\u201d $D(x, pos)$** \u4f5c\u4e0a\u8ff0\u66f4\u65b0\uff1a\n```\nusing std::min;\n\nint nodes, capacity, reach; // n, s, k\nvector<vector<int>> edge, unassigned, margin; // unassigned \u5373 unasn\nint count = 0; // \u7edf\u8ba1\u706d\u706b\u5668\n\ninline int ceil_div(int above, int below){\n\treturn (above+below-1)/below;\n}\n\nvoid travel_and_assign(int pos, int prev){\n\tunassigned[pos][0] = 1;\n\tfor(auto &neib: edge[pos]){ // \u904d\u5386\u5b50\u8282\u70b9\n\t\tif(neib==prev) continue;\n\t\ttravel_and_assign(neib, pos);\n\t\tfor(int dist = 1; dist<=reach; ++ dist){\n\t\t\tunassigned[pos][dist] += unassigned[neib][dist-1];\n\t\t\tmargin[pos][dist] += margin[neib][dist-1]; margin[pos][dist] = min(margin[pos][dist], nodes); // \u706d\u706b\u5668\u53ef\u7ba1\u8f96\u70b9\u6570\u8d85\u8fc7 nodes \u65f6\uff0c\u65e0\u610f\u4e49\n\t\t}\n\t}\n\tif(unassigned[pos][reach]>0){ // \u51b3\u5b9a\u5728 pos \u5904\u653e\u706d\u706b\u5668\n\t\tint employed = ceil_div(unassigned[pos][reach], capacity);\n\t\tcount += employed;\n\t\tmargin[pos][0] = min(employed*capacity, nodes);\n\t}\n\tfor(int dist = 0; dist<=reach; ++ dist){ // \u679a\u4e3e\u4e2d\u95f4\u8ddd\u79bb\u5e76\u201c\u518d\u5206\u914d\u201d\n\t\tint offset = min(unassigned[pos][reach-dist], margin[pos][dist]);\n\t\tunassigned[pos][reach-dist] -= offset; margin[pos][dist] -= offset;\n\t}\n}\n```\n\u8fd9\u57fa\u672c\u662f\u6b63\u89e3\u4e86\uff0c\u53ef\u5f97 ${\\rm 20\\,pts}$\uff0c\u8fd8\u9700~~\u4ebf~~\u4e9b\u4fee\u6539.\n\ni) \u6839\u8282\u70b9\u8981\u7279\u6b8a\u5904\u7406.\n\n\u56e0\u4e3a\u4e4b\u524d\u5728\u6bcf\u4e2a $pos$ \u90fd\u6ca1\u6709\u628a\u706d\u706b\u5668\u7684\u7ba1\u8f96\u5206\u914d\u5f7b\u5e95\uff0c\u5fc5\u987b\u7ed9\u6700\u540e\u5269\u4e0b\u7684**\u5168\u90e8**\u672a\u88ab\u7ba1\u8f96\u70b9\u5206\u914d. \u5bf9\u5e94\u7684\u6539\u52a8\u662f\uff0c\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684 ``reach-dist`` \u9700\u8981\u6539\u6210\u4e00\u4e2a\u4ece ``reach-dist`` \u679a\u4e3e\u5230 ``0`` \u7684\u5faa\u73af\u53d8\u91cf. \u6709\u53ef\u80fd\u5206\u5b8c\u8fd8\u6709\u672a\u88ab\u7ba1\u8f96\u70b9\uff0c\u5219\u6700\u540e\u5728\u6839\u8282\u70b9\u8865\u706d\u706b\u5668\u89e3\u51b3. ${\\rm 60\\,pts}$.\n\nii) \u5982\u4e0a\u6240\u8bf4\uff0c\u6bcf\u4e2a $pos$ \u90fd\u6ca1\u6709\u628a\u706d\u706b\u5668\u7684\u7ba1\u8f96\u5206\u914d\u5f7b\u5e95\uff0c\u5f71\u54cd\u6700\u4f18\u6027.\n\n\u8fd9\u91cc\u662f\u6b64\u8d2a\u5fc3\u6cd5\u6700\u5fae\u5999\u7684\u5730\u65b9.\n\n\u6211\u4eec\u4e5f\u4e0d\u613f\u610f\u5728\u6bcf\u4e2a $pos$ \u50cf\u6839\u8282\u70b9\u90a3\u6837\u5f7b\u5e95\u5206\u914d\uff0c\u76f4\u5230\u5b50\u6811\u4e0d\u7559\u672a\u88ab\u7ba1\u8f96\u70b9\uff0c\u8fd9\u6837\u4f1a\u6d6a\u8d39\u7ba1\u8f96\u534a\u5f84. \u2014\u2014 \u5b9e\u9645\u4e0a\u672c\u4eba\u8fd9\u6837\u5199\u7adf\u901a\u8fc7\u4e86\u672c\u9898\uff0c${\\rm 326\\,ms}$\uff0c\u4f3c\u4e4e\u6570\u636e\u8f83\u6c34\uff0c\u4f46\u6837\u4f8b\u7684\u8f93\u51fa\u662f\u9519\u7684......\n\n\u6211\u4eec\u53ef\u4ee5\u505a\u4e2a\u6298\u8877\uff0c\u524d\u9762\u5c06\u5b50\u6811\u5185\u6240\u6709\u706d\u706b\u5668\u7684\u7ba1\u8f96\u6743\u5206\u7ed9\u4e86\u4e0e\u5176\u8ddd\u79bb\u4e3a $k$ \u7684\u70b9\uff0c\u73b0\u5728\u6211\u4eec\u518d\u5206\u7ed9\u201c**\u6b21\u5fc5\u8981**\u201d\u7684\u4e0e\u5176\u8ddd\u79bb\u4e3a $k-1$ \u7684\u70b9\uff1a\u8003\u8651 $pos$ \u5b50\u6811\u5185\u6ee1\u8db3 $D(x, pos)+D(pos, y)=k-1$ \u7684\u70b9 $x, y$\uff0c\u5f53 DFS \u8df3\u5230 $pos$ \u7684\u524d\u9a71 $pos'$ \u65f6\uff0c$D(x, pos')+D(pos', y)=(k-1)+2=k+1>k$\uff0c\u6545 $x$ \u548c $y$ \u5982\u679c\u4e0d\u5728 $pos$ \u5904\u7406\u5c31\u65e0\u6cd5\u518d\u5728 $pos'$ \u540c\u6cd5\u5904\u7406.\n\n\u5373\u9012\u5f52\u4e2d\u8981\u518d\u52a0\u4e00\u6761\u679a\u4e3e\uff1a\n```\n\tfor(int dist = 0; dist<=reach-1; ++ dist){\n\t\tint offset = min(unassigned[pos][reach-1-dist], margin[pos][dist]);\n\t\tunassigned[pos][reach-1-dist] -= offset; margin[pos][dist] -= offset;\n\t}\n```\n\u5982\u6b64\u53ef\u901a\u8fc7\u672c\u9898\uff0c${\\rm 794\\,ms}$.\n\n\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6 $O(kn)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(kn)$.\n\n\u672c\u9898\u6700\u5927\u7684\u770b\u70b9\u5728\u4e8e\u8bbe\u8ba1\u5b50\u95ee\u9898\uff08DP \u72b6\u6001\uff09\u4ee5\u53ca\u5bf9\u8d2a\u5fc3\u539f\u5219\u7684\u575a\u6301.\n\n***\n\u5b8c\u6574\u4ee3\u7801. \u4e0d\u5acc\u7d2f\u5f0f\u7801\u98ce\u8b66\u544a.\n```\n#include <bits/stdc++.h>\n\n#define IOS_SPEED std::ios::sync_with_stdio(false)\n\nusing std::cin, std::cout;\nusing std::vector;\nusing std::min;\n\nusing lli = long long;\n\nint nodes, capacity, reach;\nvector<vector<int>> edge;\n\ninline int ceil_div(int above, int below){\n\treturn (above+below-1)/below;\n}\n\nvoid travel_and_assign(int pos, int prev, vector<vector<int>> &unassigned, vector<vector<int>> &margin, int &count){\n\tunassigned[pos][0] = 1;\n\tfor(auto &neib: edge[pos]){\n\t\tif(neib==prev) continue;\n\t\ttravel_and_assign(neib, pos, unassigned, margin, count);\n\t\tfor(int dist = 1; dist<=reach; ++ dist){\n\t\t\tunassigned[pos][dist] += unassigned[neib][dist-1];\n\t\t\tmargin[pos][dist] += margin[neib][dist-1]; margin[pos][dist] = min(margin[pos][dist], nodes);\n\t\t}\n\t}\n\tif(unassigned[pos][reach]>0){\n\t\tint employed = ceil_div(unassigned[pos][reach], capacity);\n\t\tcount += employed;\n\t\tmargin[pos][0] = min(employed*capacity, nodes);\n\t}\n\tfor(int dist = 0; dist<=reach; ++ dist){\n\t\tint offset = min(unassigned[pos][reach-dist], margin[pos][dist]);\n\t\tunassigned[pos][reach-dist] -= offset; margin[pos][dist] -= offset;\n\t}\n\tfor(int dist = 0; dist<=reach-1; ++ dist){\n\t\tint offset = min(unassigned[pos][reach-1-dist], margin[pos][dist]);\n\t\tunassigned[pos][reach-1-dist] -= offset; margin[pos][dist] -= offset;\n\t}\n}\n\nint least_extinguishers(){\n\tint ret = 0;\n\tauto unassigned = vector(nodes+1, vector<int>(reach+1, 0)), margin = vector(nodes+1, vector<int>(reach+1, 0));\n\ttravel_and_assign(1, 0, unassigned, margin, ret);\n\tfor(int dist = 0; dist<=reach; ++ dist){\n\t\tfor(int other = reach-dist; other>=0; -- other){\n\t\t\tint offset = min(unassigned[1][other], margin[1][dist]);\n\t\t\tunassigned[1][other] -= offset; margin[1][dist] -= offset;\n\t\t}\n\t}\n\tint rest = 0;\n\tfor(int dist = 0; dist<=reach; ++ dist) rest += unassigned[1][dist];\n\tret += ceil_div(rest, capacity);\n\treturn ret;\n}\n\nvoid interface(){\n\tcin >> nodes >> capacity >> reach;\n\tedge.resize(nodes+1);\n\tfor(int i=0; i<nodes-1; ++i){\n\t\tint X, Y; cin >> X >> Y;\n\t\tedge[X].emplace_back(Y); edge[Y].emplace_back(X);\n\t}\n\tcout << least_extinguishers() << \"\\n\";\n\tedge.clear();\n}\n\nint main()\n{\n\tIOS_SPEED;\n\tinterface();\n\treturn 0;\n}\n```",
        "postTime": 1658093201,
        "uid": 726246,
        "name": "Blithe_C",
        "ccfLevel": 0,
        "title": "P3479 [POI 2009] GAS - Fire Extinguishers \u89e3"
    },
    {
        "content": "## \u53c8\u53cc\u53d2\u53d5\u4e22\u4eba\u7684\u6811\u5f62DP\u3002\n\u611f\u89c9\u9898\u89e3\u91ccdalao\u4eec\u8bb2\u5f97\u4e0d\u662f\u5f88\u8be6\u7ec6~~\u662f\u6211\u592a\u83dc\u4e86\u5417~~\u3002  \n\u9996\u5148\u6211\u5f00\u4e86\u65e0\u5411\u56fe\uff0c\u5224\u65adfa\uff08\u597d\u50cf\u6709\u5411\u4e5f\u53ef\u4ee5\uff1f\u3002 \n\n\u8bb0\u5f55\u4e24\u4e2a\u6570\u7ec4f[u][i]\uff0cg[u][i],\u5206\u522b\u8868\u793au\u7684\u5b50\u6811\u4e2d\uff0c\u6709i\u4e2a\u53ef\u4ee5\u5206\u914d\u7684\u70b9\u548c\u5fc5\u987b\u5206\u914d\u7684\u70b9\u3002\n  \n\u8fd9\u9898\u6211\u4ec5\u4ec5\u662f\u6837\u4f8b\u5c31\u8c03\u4e86n\u904d\uff0c\u4e0b\u9762\u5206\u4eab\u4e00\u4e0b\u5751\u70b9qwq  \u3002  \n\n### 1.\u6bcf\u6b21dfs\u65f6\uff0c\u8981\u628a\u6839\u8282\u70b9u\u7684g++ \u3002 \n\u56e0\u4e3a\u5728\u76ee\u524d\u72b6\u6001\u6765\u770b\uff0c\u53ea\u6709\u6839\u8282\u70b9\u7684\u706d\u706b\u5668\u53ef\u4ee5\u8986\u76d6\u81ea\u5df1\uff0c\u6240\u4ee5\u8981\u52a01\u3002  \n### 2.\u6bcf\u6b21\u8f6c\u79fb\u65f6\u8981\u4e0b\u53d6\u6574\u3002  \n\u8282\u70b9\u6570\u9664\u4ee5s\u53ef\u80fd\u4f1a\u662f\u5c0f\u6570\uff0c\u8981\u8fdb\u4e0a\u90a3\u4e00\u4f4d\uff08\u8fdb\u4e00\u6cd5\uff09\u3002 \n### 3.\u5bf9\u5b50\u6811\u6765\u8bf4\uff0c\u8ddd\u79bb\u4e3ak\u548ck-1\u7684\u70b9\u90fd\u8981\u8003\u8651  \n\u8ddd\u79bb\u4e3ak\u7684\u70b9\u663e\u7136\u3002  \n\n\u53cd\u8bc1\u6cd5\uff0c\u8ddd\u79bb\u4e3ak-1\u7684\u70b9\u5982\u679c\u4e0d\u5904\u7406\uff0c\u5728\u5f80\u4e0a\u8c03\u7684\u65f6\u5019\u8ddd\u79bb\u4f1a\u53d8\u6210k+1\uff0c\u4e0d\u7b26\u5408\u4e86\u3002  \n\n### 4.\u5b50\u6811\u4e2d\u76f8\u5bf9\u5e94\u7684\u70b9\u8981\u62b5\u6d88\u6389\n\n\u7406\u89e3\u5f88\u5bb9\u6613\uff0c\u56e0\u4e3a\u5982\u679c\u8ddd\u79bb\u6839\u4e3ai\u70b9\u5728\u6839\u5904\u89e3\u51b3\u4e86\uff0c\u90a3\u4e48\u548c\u6839\u8ddd\u79bbk-i\u70b9\u4e5f\u88ab\u8986\u76d6\u4e86\u3002\n\n### 5.\u6839\u8282\u70b9\u7279\u5224\n\n\u56e0\u4e3a\u65e0\u6cd5\u5411\u4e0a\u8df3\uff0c\u6240\u4ee5\u7279\u5224\u3002\n\u5e76\u4e14\u6240\u6709\u7684\u4fe1\u606f\u90fd\u8981\u5728\u6839\u5904\u6c47\u603b\u3002\n\n\u6ca1\u4ec0\u4e48\u53ef\u8bf4\u7684\u4e86qwq\u3002\n```\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=100009;\n\nint n,s,k,ans;\nint h[N],ver[N<<1],nxt[N<<1],tot;\nint g[N][29],f[N][29];\n\ninline void add(int x,int y)\n{\n\tver[++tot]=y,nxt[tot]=h[x],h[x]=tot;\n}\n\ninline void dfs(int u,int fa)\n{\n\tfor(int i=h[u];i;i=nxt[i])\n\t{\n\t\tint v=ver[i];\n\t\tif(v!=fa) \n\t\t{\n\t\t\tdfs(v,u);\n\t\t\tfor(int j=1;j<=k;j++) f[u][j]=min(n,f[u][j]+f[v][j-1]),g[u][j]+=g[v][j-1];\n\t\t}\n\t}\n\tg[u][0]++;\n\tif(g[u][k])\n\t{\n\t\tint tem=(g[u][k]+s-1)/s;\n\t\tf[u][0]=min(n,s*tem),ans+=tem;\n\t}\n\tif(u==1)\n\t{\n\t\tfor(int i=0;i<=k;i++)\n\t\t\tfor(int j=k-i;j>=0;j--)\n\t\t\t{\n\t\t\t\tint tem=min(f[1][i],g[1][j]);\n\t\t\t\tf[1][i]-=tem,g[1][j]-=tem;\n\t\t\t}\n\t\treturn;\n\t}\n\tfor(int i=0;i<=k;i++)\n\t{\n\t\tint tem=min(f[u][i],g[u][k-i]);\n\t\tf[u][i]-=tem,g[u][k-i]-=tem;//\u53ef\u4ee5\u5408\u5e76\uff0c\u80fd\u591f\u6ee1\u8db3f[u][i]\u7684\u4e00\u5b9a\u6ee1\u8db3g[u][k-i]\n\t}\n\tfor(int i=0;i<=k-1;i++)\n\t{\n\t\tint tem=min(f[u][i],g[u][k-i-1]);\n\t\tf[u][i]-=tem,g[u][k-i-1]-=tem;\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&s,&k);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y),add(y,x);\n\t}\n\tdfs(1,0);\n\tint tem=0;\n\tfor(int i=0;i<=k;i++) tem+=g[1][i];\n\tans+=(tem+s-1)/s;\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1583075982,
        "uid": 237308,
        "name": "AlanSP",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3479 \u3010[POI2009]GAS-Fire Extinguishers\u3011"
    }
]