[
    {
        "content": "\u8fd9\u9053\u9898\u5982\u679c\u8981\u4f7f\u7528\u66b4\u529b\u641c\u7d22\u76f4\u63a5\u6c42\u89e3\u4f1a\u4e25\u91cd\u8d85\u65f6\u3002\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u4e2a\u6240\u8c13\u7684\u6700\u77ed\u8df3\u8dc3\u8ddd\u79bb\u663e\u7136\u4e0d\u80fd\u8d85\u8fc7\u4e00\u4e2a\u8303\u56f4\uff0c\u800c\u8fd9\u4e2a\u8303\u56f4\u9898\u76ee\u4e0a\u5df2\u7ecf\u7ed9\u4e86\u51fa\u6765\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u7b54\u6848\u662f\u6709\u4e00\u4e2a\u786e\u5b9a\u7684\u8303\u56f4\u9650\u5236\u7684\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651\u4e00\u79cd\u53e6\u5916\u7684\u65b9\u6cd5\u53bb\u89e3\u51b3\u2014\u2014\u679a\u4e3e\u7b54\u6848\uff0c\u5e76\u53bb\u9a8c\u8bc1\u7b54\u6848\u662f\u5426\u53ef\u884c\u3002\n\n\n\u5b9e\u9645\u4e0a\uff0c\u679a\u4e3e\u7b54\u6848\u6709\u65f6\u5019\u4e5f\u4f1a\u8d85\u65f6\u3002\u8fd9\u5c31\u597d\u6bd4\u8bf4\u4f60\u8981\u4ece\u4e00\u672c\u82f1\u6c49\u8bcd\u5178\u4e0a\u67e5\u4e00\u4e2a\u5355\u8bcd\uff0c\u4f60\u4ece\u5934\u5230\u5c3e\u4e00\u9875\u4e00\u9875\u7684\u7ffb\u7740\u627e\uff0c\u8fd9\u6837\u627e\u53ef\u4ee5\u4fdd\u8bc1\u4e00\u5b9a\u80fd\u627e\u5230\uff0c\u4f46\u662f\u6700\u574f\u60c5\u51b5\u4f60\u8981\u628a\u6574\u672c\u8bcd\u5178\u90fd\u7ffb\u4e00\u904d\uff0c\u90a3\u5c31\u9ebb\u70e6\u4e86\u3002\n\n\n\u6709\u4ec0\u4e48\u6539\u8fdb\u7684\u65b9\u6cd5\u5417\uff1f\u5f53\u7136\u6709\u3002\n\n\n\u8003\u8651\u628a\u8fd9\u4e2a\u8bcd\u5178\u4ece\u4e2d\u95f4\u5206\u5f00\uff0c\u770b\u4e00\u4e0b\u4e2d\u95f4\u90a3\u4e00\u9875\u7684\u4e3b\u8981\u5355\u8bcd\u90fd\u662f\u5565\uff0c\u7136\u540e\u53bb\u5224\u65ad\u6211\u8981\u627e\u7684\u5355\u8bcd\u5e94\u8be5\u5728\u5de6\u534a\u90e8\u5206\u8fd8\u662f\u53f3\u534a\u90e8\u5206\uff0c\u518d\u53bb\u90a3\u4e00\u90e8\u5206\u8003\u8651\u600e\u4e48\u627e\u5c31\u597d\u4e86\u3002\u540c\u6837\u7684\uff0c\u5728\u53e6\u4e00\u90e8\u5206\u4e5f\u662f\u8981\u8fdb\u884c\u5212\u5206\u5e76\u4e14\u5224\u65ad\u7684\u64cd\u4f5c\u3002\u8fd9\u6837\u4e00\u76f4\u8fdb\u884c\u4e0b\u53bb\uff0c\u4fbf\u80fd\u5f88\u5feb\u7684\u627e\u5230\u7b54\u6848\uff0c\u800c\u4e14\u6839\u672c\u4e0d\u9700\u8981\u7ffb\u8fc7\u6574\u4e2a\u8bcd\u5178\u6765\u3002\n\n\n\u53ef\u4ee5\u8bc1\u660e\uff0c\u5982\u679c\u4e00\u9875\u4e00\u9875\u7684\u627e\uff0c\u6700\u591a\u8981\u627en\u6b21\uff0c\u4f46\u662f\u7528\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u6700\u591a\u627efloor(log2n)\u6b21\u3002\n\n\n\u6211\u4eec\u628a\u8fd9\u4e2a\u65b9\u6cd5\u53eb\u505a\u201c\u4e8c\u5206\u7b54\u6848\u201d\u3002\u987e\u540d\u601d\u4e49\uff0c\u5b83\u7528\u4e8c\u5206\u7684\u65b9\u6cd5\u679a\u4e3e\u7b54\u6848\uff0c\u5e76\u4e14\u679a\u4e3e\u65f6\u5224\u65ad\u8fd9\u4e2a\u7b54\u6848\u662f\u5426\u53ef\u884c\u3002\u4f46\u662f\uff0c\u4e8c\u5206\u5e76\u4e0d\u662f\u5728\u6240\u6709\u60c5\u51b5\u4e0b\u90fd\u662f\u53ef\u7528\u7684\uff0c\u4f7f\u7528\u4e8c\u5206\u9700\u8981\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6\u3002\u4e00\u4e2a\u662f\u6709\u754c\uff0c\u4e00\u4e2a\u662f\u5355\u8c03\u3002\n\n\n\u4e8c\u5206\u7b54\u6848\u5e94\u8be5\u662f\u5728\u4e00\u4e2a\u5355\u8c03\u95ed\u533a\u95f4\u4e0a\u8fdb\u884c\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e8c\u5206\u7b54\u6848\u6700\u540e\u5f97\u5230\u7684\u7b54\u6848\u5e94\u8be5\u662f\u4e00\u4e2a\u786e\u5b9a\u503c\uff0c\u800c\u4e0d\u662f\u50cf\u641c\u7d22\u90a3\u6837\u4f1a\u51fa\u73b0\u591a\u89e3\u3002\u4e8c\u5206\u4e00\u822c\u7528\u6765\u89e3\u51b3\u6700\u4f18\u89e3\u95ee\u9898\u3002\u521a\u624d\u6211\u4eec\u8bf4\u5355\u8c03\u6027\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5355\u8c03\u6027\u5e94\u8be5\u4f53\u73b0\u5728\u54ea\u91cc\u5462\uff1f\n\n\n\u53ef\u4ee5\u8fd9\u6837\u60f3\uff0c\u5728\u4e00\u4e2a\u533a\u95f4\u4e0a\uff0c\u6709\u5f88\u591a\u6570\uff0c\u8fd9\u4e9b\u6570\u53ef\u80fd\u662f\u6211\u4eec\u8fd9\u4e9b\u95ee\u9898\u7684\u89e3\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u8fd9\u91cc\u6709\u5f88\u591a\u4e0d\u5408\u6cd5\u7684\u89e3\uff0c\u4e5f\u6709\u5f88\u591a\u5408\u6cd5\u7684\u89e3\u3002\u6211\u4eec\u53ea\u8003\u8651\u5408\u6cd5\u89e3\uff0c\u5e76\u79f0\u4e4b\u4e3a\u53ef\u884c\u89e3\u3002\u8003\u8651\u6240\u6709\u53ef\u884c\u89e3\uff0c\u6211\u4eec\u80af\u5b9a\u662f\u8981\u4ece\u8fd9\u4e9b\u53ef\u884c\u89e3\u4e2d\u627e\u5230\u4e00\u4e2a\u6700\u597d\u7684\u4f5c\u4e3a\u6211\u4eec\u7684\u7b54\u6848\uff0c \u8fd9\u4e2a\u7b54\u6848\u6211\u4eec\u79f0\u4e4b\u4e3a\u6700\u4f18\u89e3\u3002\n\n\n\u6700\u4f18\u89e3\u4e00\u5b9a\u53ef\u884c\uff0c\u4f46\u53ef\u884c\u89e3\u4e0d\u4e00\u5b9a\u6700\u4f18\u3002\u6211\u4eec\u5047\u8bbe\u6574\u4e2a\u5e8f\u5217\u5177\u6709\u5355\u8c03\u6027\uff0c\u4e14\u4e00\u4e2a\u6570x\u4e3a\u53ef\u884c\u89e3\uff0c\u90a3\u4e48\u4e00\u822c\u7684\uff0c\u6240\u6709\u7684x'(x'<x)\u90fd\u662f\u53ef\u884c\u89e3\u3002\u5e76\u4e14\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u6570y\u662f\u975e\u6cd5\u89e3\uff0c\u90a3\u4e48\u4e00\u822c\u7684\uff0c\u6240\u6709\u7684y'(y'>y)\u90fd\u662f\u975e\u6cd5\u89e3\u3002\n\n\n\u90a3\u4e48\u4ec0\u4e48\u65f6\u5019\u9002\u7528\u4e8c\u5206\u7b54\u6848\u5462\uff1f\u6ce8\u610f\u5230\u9898\u9762\uff1a\u4f7f\u5f97\u9009\u624b\u4eec\u5728\u6bd4\u8d5b\u8fc7\u7a0b\u4e2d\u7684\u6700\u77ed\u8df3\u8dc3\u8ddd\u79bb\u5c3d\u53ef\u80fd\u957f\u3002\u5982\u679c\u9898\u76ee\u89c4\u5b9a\u4e86\u6709\u201c\u6700\u5927\u503c\u6700\u5c0f\u201d\u6216\u8005\u201c\u6700\u5c0f\u503c\u6700\u5927\u201d\u7684\u4e1c\u897f\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4e1c\u897f\u5e94\u8be5\u5c31\u6ee1\u8db3\u4e8c\u5206\u7b54\u6848\u7684\u6709\u754c\u6027\uff08\u663e\u7136\uff09\u548c\u5355\u8c03\u6027\uff08\u80fd\u770b\u51fa\u6765\uff09\u3002\n\n\n\u90a3\u5c31\u597d\u529e\u4e86\u3002\u6211\u4eec\u4e8c\u5206\u8df3\u8dc3\u8ddd\u79bb\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u8df3\u8dc3\u8ddd\u79bb\u201c\u8ba4\u4e3a\u201d\u662f\u6700\u77ed\u7684\u8df3\u8dc3\u8ddd\u79bb\uff0c\u7136\u540e\u53bb\u4ee5\u8fd9\u4e2a\u8ddd\u79bb\u4e3a\u6807\u51c6\u79fb\u77f3\u5934\u3002\u4f7f\u7528\u4e00\u4e2ajudge\u5224\u65ad\u8fd9\u4e2a\u89e3\u662f\u4e0d\u662f\u53ef\u884c\u89e3\u3002\u5982\u679c\u8fd9\u4e2a\u89e3\u662f\u53ef\u884c\u89e3\uff0c\u90a3\u4e48\u6709\u53ef\u80fd\u4f1a\u6709\u6bd4\u8fd9\u66f4\u4f18\u7684\u89e3\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53bb\u5b83\u7684\u53f3\u8fb9\u4e8c\u5206\u3002\u4e3a\u4ec0\u4e48\u53bb\u53f3\u8fb9\uff1f\u7b54\u6848\u662f\uff0c\u8fd9\u4e2a\u533a\u95f4\u662f**\u9012\u589e**\u7684 \uff0c\u800c\u6211\u4eec\u6c42\u7684\u662f\u6700\u77ed\u8df3\u8dc3\u8ddd\u79bb\u7684**\u6700\u5927\u503c**\uff0c\u663e\u7136\u518d\u53f3\u8fb9\u7684\u503c\u80af\u5b9a\u6bd4\u5de6\u8fb9\u5927\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u6709\u53ef\u80fd\u627e\u5230\u6bd4\u8fd9\u66f4\u4f18\u7684\u89e3\uff0c\u76f4\u5230\u627e\u4e0d\u5230\uff0c\u90a3\u4e48\u6700\u540e\u627e\u5230\u7684\u89e3\u5c31\u6709\u7406\u7531\u8ba4\u4e3a\u662f\u533a\u95f4\u5185\u6700\u4f18\u89e3\u3002\u53cd\u8fc7\u6765\uff0c\u5982\u679c\u4e8c\u5206\u5230\u7684\u8fd9\u4e2a\u89e3\u662f\u4e00\u4e2a\u975e\u6cd5\u89e3\uff0c\u6211\u4eec\u5c31\u4e0d\u53ef\u80fd\u518d\u53bb\u53f3\u8fb9\u627e\u4e86\u3002\u56e0\u4e3a\u6027\u8d28\uff0c\u53f3\u8fb9\u7684\u89e3\u4e00\u5b9a\u5168\u90fd\u662f\u975e\u6cd5\u89e3\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u5e94\u8be5\u53bb\u5de6\u8fb9\u627e\u89e3\u3002\u6574\u4e2a\u8fc7\u7a0b\u770b\u8d77\u6765\u5f88\u50cf\u9012\u5f52\uff0c\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u9012\u5f52\u5199\uff0c \u4e5f\u53ef\u4ee5\u5199\u6210\u975e\u9012\u5f52\u5f62\u5f0f\uff0c\u6211\u4e2a\u4eba\u6bd4\u8f83\u559c\u6b22\u4f7f\u7528\u975e\u9012\u5f52\u5f62\u5f0f\u3002\n\n\n\u4e0b\u4e00\u4e2a\u95ee\u9898\uff0c\u8fd9\u4e2ajudge\u600e\u4e48\u5b9e\u73b0\u5462\uff1fjudge\u51fd\u6570\u6bcf\u4e2a\u9898\u6709\u6bcf\u4e2a\u9898\u7684\u5199\u6cd5\uff0c\u4f46\u5927\u4f53\u4e0a\u7684\u601d\u60f3\u5e94\u8be5\u90fd\u662f\u4e00\u6837\u7684\u2014\u2014\u60f3\u529e\u6cd5\u68c0\u6d4b\u8fd9\u4e2a\u89e3\u662f\u4e0d\u662f\u5408\u6cd5\u3002\u62ff\u8fd9\u4e2a\u9898\u6765\u8bf4\uff0c\u6211\u4eec\u53bb\u5224\u65ad\u5982\u679c\u4ee5\u8fd9\u4e2a\u8ddd\u79bb\u4e3a\u6700\u77ed\u8df3\u8dc3\u8ddd\u79bb\u9700\u8981\u79fb\u8d70\u591a\u5c11\u5757\u77f3\u5934\uff0c\u5148\u4e0d\u5fc5\u8003\u8651\u9650\u5236\u79fb\u8d70\u591a\u5c11\u5757\uff0c\u7b49\u5168\u90e8\u62ff\u5b8c\u518d\u628a\u62ff\u8d70\u7684\u6570\u91cf\u548c\u9650\u5236\u8fdb\u884c\u6bd4\u5bf9\uff0c\u5982\u679c\u8d85\u51fa\u9650\u5236\uff0c\u90a3\u4e48\u8fd9\u5c31\u662f\u4e00\u4e2a\u975e\u6cd5\u89e3\uff0c\u53cd\u4e4b\u5c31\u662f\u4e00\u4e2a\u5408\u6cd5\u89e3\uff0c\u5f88\u597d\u7406\u89e3\u5427\u3002\n\n\n\u53ef\u4ee5\u53bb\u6a21\u62df\u8fd9\u4e2a\u8df3\u77f3\u5934\u7684\u8fc7\u7a0b\u3002\u5f00\u59cb\u4f60\u5728i(i=0)\u4f4d\u7f6e\uff0c\u6211\u5728\u8df3\u4e0b\u4e00\u6b65\u7684\u65f6\u5019\u53bb\u5224\u65ad\u6211\u8fd9\u4e2a\u5f53\u524d\u8df3\u8dc3\u7684\u8ddd\u79bb\uff0c\u5982\u679c\u8fd9\u4e2a\u8df3\u8dc3\u8ddd\u79bb\u6bd4\u4e8c\u5206\u51fa\u6765\u7684mid\u5c0f\uff0c**\u90a3\u8fd9\u5c31\u662f\u4e00\u4e2a\u4e0d\u5408\u6cd5\u7684\u77f3\u5934\uff0c\u5e94\u8be5\u79fb\u8d70\u3002**\u4e3a\u4ec0\u4e48\uff1f\u6211\u4eec\u4e8c\u5206\u7684\u662f\u6700\u77ed\u8df3\u8dc3\u8ddd\u79bb\uff0c\u5df2\u7ecf\u662f\u6700\u77ed\u4e86\uff0c\u5982\u679c\u8df3\u8dc3\u8ddd\u79bb\u6bd4\u6700\u77ed\u66f4\u77ed\u5c82\u4e0d\u662f\u663e\u7136\u4e0d\u5408\u6cd5\uff0c\u662f\u8fd9\u6837\u7684\u5427\u3002\u79fb\u8d70\u4e4b\u540e\u8981\u600e\u4e48\u505a\uff1f\u5148\u628a\u8ba1\u6570\u5668\u52a0\u4e0a1\uff0c\u518d\u8003\u8651\u5411\u524d\u8df3\u554a\u3002\u53bb\u770b\u79fb\u8d70\u4e4b\u540e\u7684\u4e0b\u4e00\u5757\u77f3\u5934\uff0c\u518d\u6b21\u5224\u65ad\u8df3\u8fc7\u53bb\u7684\u8ddd\u79bb\uff0c\u5982\u679c\u8fd9\u6b21\u7684\u8df3\u8dc3\u8ddd\u79bb\u6bd4\u6700\u77ed\u7684\u957f\uff0c\u90a3\u4e48\u8fd9\u6837\u8df3\u662f\u5b8c\u5168\u53ef\u4ee5\u7684\uff0c\u6211\u4eec\u5c31\u8df3\u8fc7\u53bb\uff0c\u7ee7\u7eed\u5224\u65ad\uff0c\u5982\u679c\u8df3\u8fc7\u53bb\u7684\u8ddd\u79bb\u4e0d\u5408\u6cd5\u5c31\u518d\u62ff\u8d70\uff0c\u8fd9\u6837\u4e0d\u65ad\u8fdb\u884c\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u76f4\u5230i = n+1\uff0c\u4e3a\u5565\u662fn+1\uff1f\u6cb3\u4e2d\u95f4\u6709n\u5757\u77f3\u5934\uff0c\u663e\u7136\u7ec8\u70b9\u5728n+1\u5904\u3002\uff08\u8fd9\u91cc\u5343\u4e07\u8981\u6ce8\u610f\u4e0d\u8981\u628an\u8ba4\u4e3a\u662f\u7ec8\u70b9\uff0c\u5b9e\u9645\u4e0a\u4ecen\u8fd8\u8981\u8df3\u4e00\u6b65\u624d\u80fd\u5230\u7ec8\u70b9\uff09\u3002\n\n\n\u6a21\u62df\u5b8c\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u6211\u4eec\u67e5\u770b\u8ba1\u6570\u5668\u7684\u503c\uff0c\u8fd9\u4e2a\u503c\u4ee3\u8868\u7684\u542b\u4e49\u662f\u6211\u4eec\u4ee5mid\u4f5c\u4e3a\u7b54\u6848\u9700\u8981\u79fb\u8d70\u7684\u77f3\u5934\u6570\u91cf\uff0c\u7136\u540e\u5224\u65ad\u8fd9\u4e2a\u6570\u91cf \u662f\u4e0d\u662f\u8d85\u4e86\u5c31\u884c\u3002\u5982\u679c\u8d85\u4e86\u5c31\u8fd4\u56defalse\uff0c\u4e0d\u8d85\u5c31\u8fd4\u56detrue\u3002\n\n\n\u6574\u9053\u9898\u6211\u5df2\u7ecf\u8bf4\u5b8c\u4e86\u3002\u3002\u3002\u5982\u679c\u5b9e\u5728\u96be\u4ee5\u7406\u89e3\uff0c\u8bf7\u770b\u4ee3\u7801\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cctype>\n#define maxn 500010\nusing namespace std;\nint d,n,m;\nint a[maxn];\nint l,r,mid,ans;\ninline int read(){//\u6211\u559c\u6b22\u5feb\u8bfb\n    int num = 0;\n    char c;\n    bool flag = false;\n    while ((c = getchar()) == ' ' || c == '\\n' || c == '\\r');\n        if (c == '-') flag = true;\n    else\n        num = c - '0';\n    while (isdigit(c = getchar()))\n    num = num * 10 + c - '0';\n    return (flag ? -1 : 1) * num;\n}\n\nbool judge(int x){//judge\u51fd\u6570\uff0cx\u4ee3\u8868\u5f53\u524d\u4e8c\u5206\u51fa\u6765\u7684\u7b54\u6848\n    int tot = 0;//tot\u4ee3\u8868\u8ba1\u6570\u5668\uff0c\u8bb0\u5f55\u4ee5\u5f53\u524d\u7b54\u6848\u9700\u8981\u79fb\u8d70\u7684\u5b9e\u9645\u77f3\u5934\u6570\n    int i = 0;//i\u4ee3\u8868\u4e0b\u4e00\u5757\u77f3\u5934\u7684\u7f16\u53f7\n    int now = 0;//now\u4ee3\u8868\u6a21\u62df\u8df3\u77f3\u5934\u7684\u4eba\u5f53\u524d\u5728\u4ec0\u4e48\u4f4d\u7f6e\n    while (i < n+1){//\u5343\u4e07\u6ce8\u610f\u4e0d\u662fn\uff0cn\u4e0d\u662f\u7ec8\u70b9\uff0cn+1\u624d\u662f\n        i++;\n        if (a[i] - a[now] < x)//\u5224\u65ad\u8ddd\u79bb\uff0c\u770b\u4e8c\u8005\u4e4b\u95f4\u7684\u8ddd\u79bb\u7b97\u5dee\u503c\u5c31\u597d\n            tot++;//\u5224\u5b9a\u6210\u529f\uff0c\u628a\u8fd9\u5757\u77f3\u5934\u62ff\u8d70\uff0c\u7ee7\u7eed\u8003\u8651\u4e0b\u4e00\u5757\u77f3\u5934\n        else\n            now = i;//\u5224\u5b9a\u5931\u8d25\uff0c\u8fd9\u5757\u77f3\u5934\u4e0d\u7528\u62ff\u8d70\uff0c\u6211\u4eec\u5c31\u8df3\u8fc7\u53bb\uff0c\u518d\u8003\u8651\u4e0b\u4e00\u5757\n    }\n    if (tot > m)\n        return false;\n    else\n        return true;\n}\n\nint main(){\n    d = read();//d\u4ee3\u8868\u603b\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f\u53f3\u8fb9\u754c\n    n = read();//n\u5757\u77f3\u5934\n    m = read();//\u9650\u5236\u79fb\u8d70m\u5757\uff0c\u601d\u8003\u7684\u65f6\u5019\u53ef\u522b\u88ab\u8fd9\u4e2am\u9650\u5236\n    for (int i=1;i<=n;i++)\n        a[i] = read();\n    a[n+1] = d;//\u6572\u9ed1\u677f\u5212\u91cd\u70b9\uff0c\u518d\u5f3a\u8c03\u4e00\u904d\uff0cn\u4e0d\u662f\u7ec8\u70b9\n    l = 1;//l\u548cr\u5206\u522b\u4ee3\u8868\u4e8c\u5206\u7684\u5de6\u8fb9\u754c\u548c\u53f3\u8fb9\u754c\n    r = d;\n    while (l <= r){//\u975e\u9012\u5f52\u5f0f\u4e8c\u5206\u6b63\u5e38\u5411\u5199\u6cd5\uff0c\u53ef\u7406\u89e3\u4e3a\u4e00\u822c\u6846\u67b6\n        mid = (l+r) / 2;//\u8fd9\u518d\u770b\u4e0d\u51fa\u662f\u5565\u610f\u601d\u53ef\u4ee5\u9000\u7fa4\u4e86\n        if (judge(mid)){//\u5e26\u5165judge\u51fd\u6570\u5224\u65ad\u5f53\u524d\u89e3\u662f\u4e0d\u662f\u53ef\u884c\u89e3\n            ans = mid;\n            l = mid + 1;//\u8d70\u5230\u8fd9\u91cc\uff0c\u770b\u6765\u662f\u53ef\u884c\u89e3\uff0c\u6211\u4eec\u5c1d\u8bd5\u770b\u770b\u662f\u4e0d\u662f\u6709\u66f4\u597d\u7684\u53ef\u884c\u89e3\n        }\n        else\n            r = mid - 1;//\u566b\uff0c\u4f60\u627e\u4e86\u4e2a\u975e\u6cd5\u89e3\uff0c\u8d76\u7d27\u56de\u5230\u5de6\u534a\u8fb9\u770b\u770b\u6709\u6ca1\u6709\u53ef\u884c\u89e3\n    }\n    cout << ans << endl;//\u6700\u540e\u7684ans\u7edd\u5bf9\u662f\u6700\u4f18\u89e3\n    return 0;\n}\n```\n\n",
        "postTime": 1504084221,
        "uid": 20197,
        "name": "ShawnZhou",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2678 \u3010\u8df3\u77f3\u5934\u3011"
    },
    {
        "content": "\u4e8c\u5206\u7b54\u6848\u4e0d\u7406\u89e3\u7684\u8bdd\u662f\u5f88\u96be\u770b\u61c2\u7684\uff0c\u770b\u4e86\u770b\u51e0\u4efd\u9898\u89e3\u6709\u70b9\u61f5\uff0c\u53c8\u53bb\u7f51\u4e0a\u627e\u4e86\u4efd[\u535a\u5ba2](http://www.cnblogs.com/rjgcs/p/5797704.html)\u501f\u9274\u4e86\u4e00\u4e0b\u9898\u89e3\u8bf4\u4e0d\u660e\u767d\u7684\u5730\u65b9\uff0c\u6700\u540e\u7531\u849f\u84bbrisho\u6765\u6574\u5408\u4e00\u4e0b\u601d\u8def\uff0c\u5c3d\u53ef\u80fd\u8bf4\u7684\u660e\u767d\u4e00\u4e9b\uff0c\u628a\u4e00\u5f00\u59cb\u96be\u4f4f\u6211\u7684\u5730\u65b9\u8ba4\u771f\u6ce8\u91ca\u4e86\u4e00\u4e0b\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#define INF 0x7ffffff\n#define maxn 2000000\nusing namespace std;\nint n,a[maxn],m,ll,rr,l,s,num,mid,ans;\nint half(int x)//x\u662f\u76ee\u524d\u7684\u7406\u60f3\u8ddd\u79bb \n{\n    s=0,num=0;//num\u662f\u8ba1\u6570\u5668\uff0c\u8bb0\u5f55\u79fb\u8d70\u7684\u77f3\u5934\u6570\u76ee\uff0cs\u8ba1\u6570\u5668\uff0c\u662f\u6307\u76ee\u524d\u7684\u77f3\u5934\u79bb\u8d77\u70b9\u7684\u8ddd\u79bb\uff08\u96be\u7406\u89e3\uff1f\u770b\u5e95\u4e0b\u4e00\u5c42\u5faa\u73af\uff09 \n    for(int i=1;i<=n+1;i++)\n{\n         //\u679a\u4e3e\u7b2c1\u5230\u7ec8\u70b9\u7684n+1\u5757\u77f3\u5934 if(a[i]-s<x)//\u5982\u679c\u7b2ci\u5757\u77f3\u5934\u7684\u8ddd\u79bb\u51cf\u53bbs\uff0c\u4ec0\u4e48\u610f\u601d\uff1f\u8fd9\u4e24\u5757\u77f3\u5934\u4e4b\u95f4\u7684\u8ddd\u79bb\uff01 \u82e5\u4e24\u5757\u4e4b\u95f4\u7684\u8ddd\u79bb<\u671f\u671b\u7684\u8ddd\u79bb\nnum++;//\u79fb\u8d70\u7684\u6570\u76ee+1\uff0c\u56e0\u4e3a\u4f60\u8981\u7684\u662f\u79fb\u8d700~m\u5757\u77f3\u5934\uff0c\u4f7f\u4ed6\u4eec\u4e4b\u95f4\u7684\u8ddd\u79bb\u90fd\u5927\u4e8e\u7b49\u4e8em\nelse s=a[i];//\u82e5\u8ddd\u79bb\u5927\u4e8e\u671f\u671b\u8ddd\u79bb\u4e86\uff0cs\u66f4\u65b0\u5230i\u7684\u8ddd\u79bb\n//\u679a\u4e3e\u5b8c\u4e86\uff0c\u7edf\u8ba1\u5b8c\u4e86\u79fb\u8d70\u7684\u6570\u76ee\n}\nif(num>m) return 0;\n//\u5982\u679c\u79fb\u8d70\u77f3\u5757>m\u624d\u80fd\u5230\u671f\u671b\u8ddd\u79bb\uff0c\u5c31\u662f\u4e0d\u6ee1\u8db3\u6761\u4ef6\n    return 1;//\u5426\u5219\u5c31\u662f\u6ee1\u8db3\u6761\u4ef6 \n}\nint main()\n{\n    scanf(\"%d%d%d\",&l,&n,&m);\n    for(int i=1;i<=n;i++)\n     scanf(\"%d\",&a[i]);\n    a[n+1]=l;//n\u662f\u7ec8\u70b9\u524d\u7684\u6700\u540e\u4e00\u5757\u77f3\u5934\uff0c\u6240\u4ee5a[n+1]=l\uff0c\u8bb0\u5f55\u7ec8\u70b9\u7684\u503c \n    ll=0,rr=l;//\u5b9a\u4e49\u4e00\u4e2a\u4e8c\u5206\u8fb9\u754c \n    while(ll<=rr)//\u5f53\u5de6\u53f3\u8fb9\u754c\u91cd\u5408\u7684\u65f6\u5019\u5c31\u662f\u7b54\u6848\uff0c\u9000\u51fa\u5faa\u73af \n     {\n         mid=(ll+rr)/2;//\u53d6\u4e24\u8fb9\u754c\u7684\u4e2d\u95f4\u503c\uff0c\u679a\u4e3e\u4e00\u4e2a\u6700\u5927\u8ddd\u79bb \n         if(half(mid))//\u5f53\u8be5\u8ddd\u79bb\u6ee1\u8db3\u6761\u4ef6\u7684\u65f6\u5019 \n{\n              //\u53bb\u5bfb\u627e\u53f3\u534a\u90e8\u5206\uff0c\u770b\u770b\u8fd8\u6709\u6ca1\u6709\u7b26\u5408\u6761\u4ef6\u7684\u66f4\u5927\u7684\u503c\n              ll=mid+1;//ll\u4e0amid\u53f3\u8fb9\uff0c\u627e\u53f3\u534a\u90e8\u5206 \n              ans=mid;//\u8bb0\u5f55\u7b54\u6848\uff08\u66f4\u65b0\u4e2d\uff09 \n          }\n        else rr=mid-1;//\u82e5\u8fd9\u4e2a\u503c\u4e0d\u6ee1\u8db3\uff0c\u5c31\u627e\u5de6\u90e8\u5206 \n     }\n    printf(\"%d\",ans);//\u8f93\u51fa\u7b54\u6848\uff08\u5faa\u73af\u65f6\u5df2\u7ecf\u66f4\u65b0\u4e86\uff09 \n    return 0;\n}\n```",
        "postTime": 1509403478,
        "uid": 49851,
        "name": "\u777f\u5c7f\u9752\u886b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2678 \u3010\u8df3\u77f3\u5934\u3011"
    },
    {
        "content": "\t\uff08\u9996\u5148\u5411 ShawnZhou \u5927\u4f6c\u8868\u793a\u6700\u5d07\u9ad8\u7684\u656c\u610f\uff01(^^\u309e\uff09\n    \n     \t\u76f4\u63a5\u8003\u8651\u95ee\u9898\u6bd4\u8f83\u56f0\u96be\u3002\u6211\u4eec\u9996\u5148\u8003\u8651\u53e6\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u7ed9\u5b9a\u4e00\u4e2a\u8ddd\u79bbd\uff0c\n     \u95ee\u81f3\u5c11\u8981\u79fb\u8d70\u591a\u5c11\u77f3\u5934\u624d\u80fd\u6ee1\u8db3\u77f3\u5934\u4e4b\u95f4\u7684\u6700\u5c0f\u8ddd\u79bb\u4e0d\u5c0f\u4e8ed\uff1f\u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\uff0c\n     \u7b54\u6848\u5c31\u5f88\u7b80\u5355\u4e86\u3002\u6211\u4eec\u91c7\u53d6\u8d2a\u5fc3\u7684\u7b56\u7565\u8ba1\u7b97\uff1a\u4ece\u5de6\u5cb8\u5f00\u59cb\uff0c\u79fb\u8d70\u5b83\u5c0f\u4e8ed\u7684\u6240\n     \u6709\u77f3\u5934\uff0c\u518d\u5f80\u540e\u8df3\u4e00\u6b65\uff0c\u5faa\u73af\u5f80\u590d\u3002\u6240\u4ee5\u6211\u4e48\u5c06\u77f3\u5934\u6309\u4f4d\u7f6e\u6392\u5e8f\uff0c\u5728\u6a21\u62df\u4e00\u904d\n     \u8df3\u7684\u8fc7\u7a0b\u5c31\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e2a\u95ee\u9898\u7684\u7b54\u6848\u3002\n     \n     \t\u63a5\u4e0b\u6765\uff0c\u6709\u4e00\u70b9\u662f\u663e\u800c\u6613\u89c1\u7684\uff0cd\u589e\u5927\u65f6\uff0c\u9700\u8981\u79fb\u8d70\u7684\u77f3\u5934\u6570\u4e00\u5b9a\u4e0d\u53d8\u6216\n     \u66f4\u591a\u3002\u76f4\u63a5\u679a\u4e3ed\u7684\u503c\u4f1a\u5f88\u6162\uff0c\u6240\u4ee5\u6211\u4eec\u5bf9\u8fd9\u4e2ad\u8fdb\u884c\u4e8c\u5206\uff0c\u5224\u65ad\u6700\u5c0f\u8ddd\u79bb\n     \u4e3ad\u65f6\u79fb\u8d70\u7684\u6700\u5c11\u77f3\u5934\u6570\u662f\u5426\u4f1a\u8d85\u8fc7M\u5757\u3002\u6211\u4eec\u7528\u53d8\u91cflo\u8bb0\u5f55\u53ef\u884c\u89e3\uff0c\u7528\n     hi\u8bb0\u5f55\u4e0d\u53ef\u884c\u89e3\u3002\u6bcf\u6b21mid=(lo+hi)/2,\u68c0\u9a8cmid\u662f\u5426\u53ef\u884c\uff0c\u53ef\u884c\u5219\n     lo=mid\uff0c\u4e0d\u53ef\u884c\u5219hi=mid\uff0c\u76f4\u5230lo+1\u4e0ehi\u76f8\u7b49\u65f6\u505c\u6b62\uff0clo\u5c31\u662f\u6700\u540e\u7b54\n        \u6848\u3002\u5c31\u8fd9\u6837\uff0c\u6574\u4e2a\u95ee\u9898\u5c31\u88ab\u6210\u529f\u89e3\u51b3\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(nlog2L)\u3002\n        \n        \uff08\u624b\u6253\u597d\u7d2f\u3002\u3002\u3002\u6c42\u8fc7\u3002\uff09\n```c\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#define M(a) memset(a,127,sizeof a)\n#define fo(j,n) for(i=j;i<=n;i++)\nusing namespace std;\nint i,L,N,M,a[50010];\n\nint check(int dist){//\u68c0\u9a8c\u51fd\u6570\uff0c\u6c42\u51fa\u7ed9\u5b9a\u8ddd\u79bbdist\u540e \u9700\u8981\u79fb\u8d70\u591a\u5c11\u77f3\u5934\uff0c\u662f\u5426\u4e0d\u8d85\u8fc7M \n\tint i,last=0,cnt=0;\n\tfor(i=1;i<=N;i++){\n\t\tif(a[i]-last<dist)cnt++;\n\t\telse last=a[i];\n\t}\n\tif(L-last<dist)cnt++;\n\treturn cnt<=M;\n}\n \nint main(){\n\tscanf(\"%d %d %d\",&L,&N,&M);\n\tfor(i=1;i<=N;i++)scanf(\"%d\",a+i);\n\tsort(a+1,a+1+N);\n\tint lo=1,hi=L+1,mid;\n\twhile(lo+1<hi){//\u4e8c\u5206\u67e5\u627e\u6a21\u677f \n\t\tmid=(lo+hi)/2;\n\t\tif(check(mid))lo=mid;\n\t\telse hi=mid;\n\t}\n\tprintf(\"%d\\n\",lo);\n}\n```",
        "postTime": 1517584253,
        "uid": 30224,
        "name": "\u6c5f\u5357\u5c0f\u5deb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2678 \u3010\u8df3\u77f3\u5934\u3011"
    },
    {
        "content": "\u611f\u89c9\u697c\u4e0b\u8bb2\u7684\u6709\u70b9\u7ed5\uff0c\u697c\u4e0b\u7684\u697c\u4e0b\u8bb2\u7684\u53c8\u6709\u70b9\u592a\u96be\u4e86\uff0c\u4e8c\u5206\u7b54\u6848\u5e94\u8be5\u7b97\u662f\u666e\u53ca\u7ec4\u7b97\u6cd5\uff0c\u4f46\u662f\u5728\u63d0\u9ad8\u7ec4\u91cc\u4e5f\u4f1a\u8003\uff0c\u800c\u4e14\u4f5c\u4e3a\u4f18\u5316\u6765\u8bf4\u4e5f\u662f\u5f88\u5927\u7684\u63d0\u5347\uff0c\u4eceO(n)\u5230logn\u7edd\u5bf9\u662f\u975e\u5e38\u597d\u7684\u4f18\u5316\u3002\n\n\n\n\u6709\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u9047\u5230\u4e00\u4e9b\u7279\u6b8a\u7684\u95ee\u9898\uff1a\u5b83\u4eec\u5f88\u96be\u76f4\u63a5\u6c42\u89e3\uff0c\u6216\u8005\u6839\u672c\u65e0\u6cd5\u76f4\u63a5\u6c42\u89e3\uff0c\n\n\u8fd9\u79cd\u65f6\u5019\u5c31\u5e94\u8be5\u6362\u4e2a\u89d2\u5ea6\uff0c\u4ece\u7b54\u6848\u65b9\u9762\u5165\u624b\u3002\u4f8b\u5982\uff0c\u4e00\u5143\u4e09\u6b21\u65b9\u7a0b\u6c42\u89e3\u90a3\u9053\u9898\uff0c\u5927\u5bb6\u8fd8\u8bb0\u5f97\n\n\u5427\uff1f\n\u00a0\n\u66f4\u591a\u7684\uff0c\u6211\u4eec\u628a\u8fd9\u79cd\u601d\u8def\u62d3\u5c55\u5230\u8fd9\u4e00\u7c7b\u95ee\u9898\uff0c\u6211\u4eec\u5f88\u96be\u76f4\u63a5\u4ece\u6b63\u9762\u6c42\u89e3\uff0c\u4f46\u5b83\u7684\u7b54\u6848\u8303\n\n\u56f4\u6709\u8fb9\u754c\uff0c\u5373\u5177\u6709\u6709\u754c\u6027\uff0c\u4e14\uff08\u81f3\u5c11\u5728\u4e00\u5b9a\u8303\u56f4\u5185\uff09\u5177\u6709\u5355\u8c03\u6027\uff08\u9876\u591a\u5c40\u90e8\u4e0d\u53d8\uff09\n\n\uff0c\u6211\u4eec\u5c31\u53ef\n\n\u4ee5\u62d3\u5c55\u4e00\u4e0b\u5206\u6cbb\u601d\u60f3\uff0c\u4ece\u7b54\u6848\u8fd9\u8fb9\u4e8c\u5206\uff0c\u4e0d\u65ad\u903c\u8fd1\u6b63\u89e3\uff0c\u76f4\u5230\u627e\u5230\u6b63\u89e3\uff08\u6574\u6570\uff09\u6216\u903c\u8fd1\u5230\u7cbe\n\n\u5ea6\u5185\uff08\u5b9e\u6570\uff09\u00a0\n\n\n\u4e0a\u6bb5\u53d6\u81eadjdj1506\u7684\u5206\u6cbb\u4e0e\u500d\u589e\uff0c\u628a\u4e8c\u5206\u7b54\u6848\u7684\u4f5c\u7528\u8bb2\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u8fd9\u91cc\u8be6\u7ec6\u89e3\u91ca\u4e00\u4e0b\u4ec0\u4e48\u662f\u8fb9\u754c\u6027\uff0c\u4ec0\u4e48\u662f\u5355\u8c03\u6027\n\n\u8fb9\u754c\u6027\uff0c\u8bf4\u7684\u901a\u4fd7\u4e00\u70b9\u5c31\u662f\u8fd9\u4e2a\u7b54\u6848\u662f\u6709\u8303\u56f4\u7684\uff0c\u4e0d\u50cf\u662fbfs\u8fd9\u79cd\u5f88\u591a\u89e3\u7684\uff0c\n\n\u5355\u8c03\u6027\uff0c\u5c31\u662f\u5c0f\u7684\u5982\u679c\u80fd\u6210\u529f\uff0c\u5927\u7684\u5c31\u4e00\u5b9a\u80fd\u6210\u529f\uff0cjudge\u51fd\u6570\u5199\u8d77\u6765\u5c31\u662fFFFFFFTTTTTT\u8fd9\u6837\u7684\u5e8f\u5217\n\n\uff08\u4f5c\u8005\u4e5f\u662f\u849f\u84bb\uff0c\u80fd\u529b\u6709\u9650\uff0c\u8fd8\u8bf7\u5404\u4f4d\u5728\u9898\u76ee\u4e2d\u81ea\u884c\u7406\u89e3\uff09 \u8fd9\u79cd\u9898\u76ee\u663e\u8457\u7684\u7279\u70b9\u5c31\u662f\u6bd4\u8f83\u5bb9\u6613\u544a\u8bc9\u4f60\u7b54\u6848\u5224\u65ad\u80fd\u5426\u6210\u529f\uff0c\u800c\u4e0d\u662f\u6b63\u9762\u5f3a\u63a8\n\n\u4e8c\u5206\u7b54\u6848\u5c31\u8bb2\u5230\u8fd9\u513f\uff0c\u9898\u76ee\u7684\u8bb2\u89e3\u76f4\u63a5\u770b\u4ee3\u7801\u6ce8\u91ca\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define N (50000+10) \nusing namespace std;\nint a[N];\nint d,n,m,ans;\nbool judge(int x){//\u4e8c\u5206\u63a8\u8350\u5199judge\uff0c\u6bd4\u8f83\u89c4\u8303\u6bd4\u8f83\u6807\u51c6\uff0c\u5bb9\u6613\u68c0\u67e5\n    int tot=0,i=0,now=0;//tot\u8868\u793a\u9700\u8981\u642c\u8d70\u7684\u77f3\u5757\u6570\u91cf\uff0ci\u8868\u793a\u627e\u7684\u77f3\u5934\uff0cnow\u8868\u793a\u6211\u7ad9\u5728\u54ea\u4e00\u5757\u77f3\u5934\u4e0a\n    while (i<n+1){\n        i++;\n        if (a[i]-a[now]<x){//\u5982\u679c\u8ddd\u79bb\u5c0f\u4e8e\u6211\u4e8c\u5206\u7684\u7b54\u6848x\uff0c\u90a3\u4e48\u8fd9\u5757\u77f3\u5934\u9700\u8981\u642c\u8d70\n            tot++;\n        } \n        else{\n            now=i;//\u4e0d\u7136\u6211\u5c31\u8df3\u8fc7\u6765\n        }\n    }\n    if (tot>m) return false;//\u5982\u679c\u8981\u642c\u8d70\u7684\u77f3\u5934\u591a\u4e8em\u5757\uff0c\u90a3\u4e48\u8fd9\u4e2a\u89e3\u592a\u5927\u4e86\n    else return true;\n}\nint main(){\n    scanf(\"%d%d%d\",&d,&n,&m);\n    for (int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n    a[n+1]=d; \n    int l=1,r=d,mid;\n    while (l<=r){//\u53ef\u4ee5\u8bf4\u7b97\u662f\u4e8c\u5206\u7684\u683c\u5f0f\u5427\n        mid=(l+r)/2;\n        if (judge(mid)){\n            ans=mid;\n            l=mid+1;\n        } \n        else r=mid-1;\n    }\n    printf(\"%d\",ans);\n}\n\u5e0c\u671b\u5927\u5bb6\u770b\u5b8c\u524d\u9762\u7684\u8bf4\u660e\u548cac\u4ee3\u7801\u540e\u80fd\u591f\u5bf9\u4e8c\u5206\u7b54\u6848\u6709\u4e2a\u66f4\u597d\u7684\u8ba4\u8bc6\uff0c\u4e5f\u80fd\u66f4\u52a0\u7075\u6d3b\u7684\u4f7f\u7528\u4e8c\u5206\u7b54\u6848\uff0c\u5e0c\u671b\u8fd9\u7bc7\u9898\u89e3\u80fd\u591f\u5bf9\u5927\u5bb6\u5e26\u6765\u5e2e\u52a9\n```",
        "postTime": 1499952079,
        "uid": 15232,
        "name": "Michael_Li",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2678 \u3010\u8df3\u77f3\u5934\u3011"
    },
    {
        "content": "\u6b64\u9898\u65e0\u8bba\u662f\u9898\u76ee\uff0c\u8fd8\u662f\u4ee3\u7801\uff0c\u601d\u8def\u90fd\u975e\u5e38\u7b80\u6d01\u660e\u4e86\u3002\u4e00\u9053\u5f88\u597d\u7684\u53c8\u5f88\u7ecf\u5178\u7684\u4e8c\u5206\u67e5\u627e\u9898\u3002\n\n\u9996\u5148\u5047\u5982\u679a\u4e3e\uff0c\u90a3\u4e0d\u7528\u8bf4\uff0c\u76f4\u63a5TLE\u3002\n\n\u7136\u800c\u5f88\u591a\u4eba\u5c31\u5361\u5728\u5982\u4f55\u4e8c\u5206\u4e0a\u9762\u3002\u8fd9\u5c31\u975e\u5e38\u5947\u602a\u4e86\uff0c\u56e0\u4e3a\u4e00\u65e6\u7406\u89e3\u4e86\u66b4\u529b\u7684\u5224\u65ad\u662f\u5982\u4f55\u8fbe\u5230\u7684\uff0c\u90a3\u4e8c\u5206\u4e5f\u5c31\u4e00\u76ee\u4e86\u7136\u4e86\u3002\n\n\u9996\u5148\u5c06\u77f3\u5934\u4f4d\u7f6e\u6392\u4e2a\u5e8f\uff0c\u4ee5\u4fbf\u5904\u7406\u65b9\u4fbf\u3002\u8fd9\u4e00\u6b65\u4e5f\u662f\u5fc5\u987b\u8981\u505a\u7684\uff0c\u56e0\u4e3a\u82e5\u4e0d\u6392\u5e8f\uff0c\u90a3\u5224\u65ad\u5c06\u975e\u5e38\u7684\u56f0\u96be\u3002\u800c\u4e0b\u9762\u8fd9\u4e00\u6b65\uff0c\u4e5f\u662f\u6b64\u9898\u4e4b\u7cbe\u9ad3\u2014\u2014\n\n\u6211\u4eec\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6x\uff0c\u60f3\u770b\u770b\u5b83\u662f\u5426\u53ef\u4ee5\u7b26\u5408\u5220\u9664\u77f3\u5934\u6570\u5c0f\u4e8e\u7b49\u4e8em\uff0c\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a\n\n\u4ece\u4f4d\u7f6e\u7684\u5c0f\u5230\u5927\u626b\u904d\u6240\u6709\u77f3\u5934\uff0c\u7528\u4e00\u4e2a\u53d8\u91cf\u5b58\u50a8\u4e0a\u4e00\u4e2a\u8df3\u5230\u7684\u70b9\u3002\u7b2c\u4e00\u4e2a\u4e0e\u8fd9\u4e0a\u4e00\u4e2a\u70b9\u7684\u8ddd\u79bb\u5927\u4e8e\u7b49\u4e8ex\u7684\u77f3\u5934\u5373\u662f\u4e0b\u4e00\u4e2a\u8df3\u5230\u7684\u70b9\u3002\u8fd9\u91cc\u7528\u4e86\u4e00\u70b9\u8d2a\u5fc3\u7684\u601d\u60f3\uff1a\u56e0\u4e3a\u5982\u679c\u4e0d\u8df3\u5230\u7b2c\u4e00\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u70b9\u4e0a\uff0c\u90a3\u4e48\u6574\u4e2a\u961f\u5217\u7684\u7a00\u758f\u5ea6\u5c31\u4f1a\u63d0\u9ad8\uff0c\u6700\u7ec8\u9700\u8981\u5220\u9664\u7684\u77f3\u5934\u4e5f\u4f1a\u66f4\u591a\u3002\u56e0\u4e3a\u6211\u4eec\u8981\u53d6\u6700\u4f18\u72b6\u6001\uff0c\u6240\u4ee5\u8981\u4fdd\u8bc1\u8df3\u8fc7\u7684\u77f3\u5934\u6570\u6700\u5c11\u3002\u5f53\u7136\uff0c\u5982\u679c\u67d0\u4e2a\u77f3\u5934\u5230\u7ec8\u70b9\u7684\u8ddd\u79bb\u5c0f\u4e8ex\uff0c\u90a3\u5b83\u4e0d\u80fd\u88ab\u7edf\u8ba1\u5230\u2014\u2014\u6240\u4ee5\u5f97\u5220\u53bb\u540e\u9762\u8fd9\u4e9b\u65e0\u6cd5\u8df3\u5230\u7684\u77f3\u5934\u3002\u6211\u81ea\u8ba4\u4e3a\u8fd9\u5e94\u8be5\u4e5f\u662f\u4e00\u4e2a\u5751\u70b9\uff08\u867d\u7136\u6211\u7b2c\u4e00\u904d\u5c31\u5224\u65ad\u4e86\uff09\u3002\n\n\u8fd9\u6837\uff0c\u4fbf\u6c42\u51fa\u4e86\u8fd9\u4e2ax\u662f\u5426\u53ef\u884c\uff0c\u5982\u679c\u53ef\u884c\uff0c\u90a3\u5c31\u5f80\u53f3\u8fb9\u4e8c\u5206\uff0c\u4f46\u8981\u8bb0\u5f97\u8303\u56f4\u8981\u5305\u62ecx\uff1b\u82e5\u4e0d\u884c\uff0c\u5219\u5f80\u5de6\u8fb9\u4e8c\u5206\uff0c\u53f3\u9650\u5236\u4e0d\u5305\u62ecx\u3002\u7136\u540e\uff0c\u4e8c\u5206\u5230\u5de6\u53f3\u8fb9\u754c\u76f8\u7b49\uff0c\u8f93\u51fa\u5373\u53ef\u3002\n\n\u7136\u540e\u6b64\u9898\u5c31\u505a\u5b8c\u4e86\u3002\u5927\u5bb6\u5e94\u8be5\u5f88\u5bb9\u6613\u7406\u89e3\u3002\n\n\u5982\u679c\u8fd8\u6709\u4e0d\u592a\u61c2\u7684\uff0c\u90a3\u5177\u4f53\u8bf7\u89c1\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint sto[100000];//\u5f00\u5927\u4e00\u70b9\uff0c\u4fdd\u9669\nint main()\n{\n    int s,n,m;\n    scanf(\"%d%d%d\",&s,&n,&m);\n    int zuo=1,you=s,mid;//\u6240\u6709\u8fb9\u754c\u4e3a1\u3001s\n    for(int i=0;i<n;i++)scanf(\"%d\",&sto[i]);\n    sort(sto,sto+n);//\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n    int sg,cnt,ii;\n    while(zuo!=you)\n    {\n        mid=(zuo+you+1)>>1;//\u4f4d\u8fd0\u7b97\u52a0\u901f\n        sg=cnt=0;//\u521d\u59cb\u5316\n        for(ii=0;ii<n;ii++)\n        {\n            if(s-sto[ii]<mid)break;//\u5982\u89e3\u6790\u4e2d\u6240\u8ff0\uff0c\u82e5\u518d\u8df3x\u5df2\u8d85\u8fc7\u7ec8\u70b9\uff0c\u5219\u4e0d\u53ef\u53d6\u6b64\u70b9\uff0c\u5b83\u540e\u9762\u7684\u4e5f\u663e\u7136\u4e0d\u53ef\u53d6\n            if(sto[ii]-sg<mid)cnt++;//\u8df3\u8fc7\n            else sg=sto[ii];//\u8d2a\u5fc3\uff0c\u76f4\u63a5\u8df3\u5230\n        }\n        cnt+=n-ii;//\u7edf\u8ba1\u6700\u540e\u88ab\u5220\u9664\u7684\u70b9\u6570\n        if(cnt<=m)zuo=mid;\n        else you=mid-1;//\u4e8c\u5206\u8fb9\u754c\u66f4\u65b0\uff0c\u5177\u4f53\u8bf7\u89c1\u89e3\u6790\n    }\n    printf(\"%d\",zuo);//\u8f93\u51fa\n    return 0;\n}\n```",
        "postTime": 1506086743,
        "uid": 32275,
        "name": "KesdiaelKen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2678 \u3010\u8df3\u77f3\u5934\u3011"
    },
    {
        "content": "\u3010\u9898\u76ee\u5927\u610f\u3011\u7ed9\u4f60\u4e00\u6392N\u5757\u77f3\u5934\uff0c\u4f60\u53ef\u4ee5\u79fb\u8d70M\u5757\u77f3\u5934\uff0c\u4f7f\u5f97\u6700\u5c0f\u7684\u4e24\u5757\u77f3\u5934\u4e4b\u95f4\u7684\u8ddd\u79bb\u5c3d\u53ef\u80fd\u957f\uff0cN,M\u226450000\u3002\n\n\n\u3010\u89e3\u9898\u8bf4\u660e\u3011\n\n\n20\u5206\u505a\u6cd5\uff1a\u76f4\u63a5\u66b4\u529b\u5373\u53ef\n\n\n50\u5206\u505a\u6cd5\uff1a\u8003\u8651DP\uff0cf[i][j]\u8868\u793a\u5728\u524di\u5757\u77f3\u5934\u79fb\u8d70j\u5757\u77f3\u5934\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u8f6c\u79fb\u5373\u53ef\n\n\n60\u5206\u505a\u6cd5\uff1a\u8003\u8651\u8d2a\u5fc3\uff0c\u6bcf\u6b21\u5220\u9664\u95f4\u8ddd\u6700\u5c0f\u7684\uff0c\u7528\u5806\u7ef4\u62a4\n\n\n100\u5206\u505a\u6cd5\uff1a\u8003\u8651\u4e8c\u5206\u7b54\u6848\u540e\u8d2a\u5fc3\uff0c\u5148\u4e8c\u5206\u8fd9\u4e2a\u8ddd\u79bb\u4f7f\u5176\u53d8\u4e3a\u5224\u65ad\u53ef\u884c\u6027\u95ee\u9898\uff0c\u7136\u540e\u4ece\u524d\u5f80\u540e\u626b\uff0c\u4e00\u65e6\u8fd9\u4e2a\u77f3\u5934\u5230\u4e0a\u4e00\u4e2a\u9009\u7684\u77f3\u5934\u7684\u8ddd\u79bb\u5c0f\u4e8e\u8fd9\u4e2a\u4e8c\u5206\u7684\u7b54\u6848\u5c31\u628a\u8fd9\u5757\u77f3\u5934\u79fb\u8d70\n\n\n\u8fd9\u6837\u663e\u7136\u662f\u6b63\u786e\u7684\uff0c\u5f88\u5bb9\u6613\u8bc1\u660e\u5148\u79fb\u4e00\u5b9a\u6bd4\u540e\u79fb\u597d\uff0c\u6240\u4ee5\u8fd9\u4e2a\u7b97\u6cd5\u662f\u6b63\u786e\u7684\n\n\n\u3010\u4ee3\u7801\u3011\n\n\n```cpp\n#include<cstdio>\nint L,n,m,i,w,l,r,mid,pos,ans,a[55555];\nbool ok(int x){\n    for(pos=w=0,i=1;i<=n;i++)if(a[i]-pos<x)w++;else pos=a[i];\n    return w<=m;\n}\nint main(){\n    for(scanf(\"%d%d%d\",&L,&n,&m),i=1;i<=n;i++)scanf(\"%d\",&a[i]);a[++n]=L;\n    for(l=1,r=L;l<=r;)if(ok(mid=l+r>>1))ans=mid,l=mid+1;else r=mid-1;\n    printf(\"%d\",ans);\n}\n\u3010\u65f6\u95f4\u590d\u6742\u5ea6\u3011 O(nlgL) \u3010\u7a7a\u95f4\u590d\u6742\u5ea6\u3011 O(n) \u3010\u601d\u60f3\u96be\u5ea6\u3011 30 \u3010\u7f16\u7a0b\u96be\u5ea6\u3011 23 \u3010\u603b\u7528\u65f6\u301110 min\n```",
        "postTime": 1494157700,
        "uid": 31611,
        "name": "pan1e1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2678 \u3010\u8df3\u77f3\u5934\u3011"
    },
    {
        "content": "### \u8df3\u77f3\u5934\n#### Solution\n\u3000\u3000\u5178\u578b\u7684\u4e8c\u5206\u7b54\u6848\u9898, \u7b54\u6848\u4e3a**\u6700\u77ed\u8df3\u8dc3\u8ddd\u79bb\u7684\u6700\u5927\u503c**, \u8bb0\u4e3a$\\textbf{ans}$, \u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f$l,l<\\textbf{ans}$, \u4ee5\u5176\u4e3a\u6700\u77ed\u8df3\u8dc3\u8ddd\u79bb\u90fd\u80fd\u79fb\u8d70\u4e0d\u8d85$m$\u4e2a\u77f3\u5b50\u8df3\u8fc7\u6cb3; \u5bf9\u4e8e\u4efb\u610f$l,l>\\textbf{ans}$, \u4ee5\u5176\u4e3a\u6700\u77ed\u8df3\u8dc3\u8ddd\u79bb\u4e0d\u80fd\u79fb\u8d70\u4e0d\u8d85$m$\u4e2a\u77f3\u5b50\u8df3\u8fc7\u6cb3, \u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u4ee5$f(l)$\u8868\u793a\u4ee5$l$\u4e3a\u6700\u77ed\u8ddd\u79bb\u80fd\u4e0d\u80fd\u8fc7\u6cb3, $f(l),l\\in \\textbf{N}\\text{\u4e14}0<l\\leq l$ \u5177\u6709\u5355\u8c03\u6027.\n\n\u3000\u3000\u6240\u4ee5\u5bf9\u4e8e\u4efb\u610f$l$, \u6240\u9700\u8981\u627e\u5230\u7684\u5c31\u662f\u8fd9\u4e48\u4e00\u4e2a\u70b9$u$\u4f7f\u5f97$f(u)=1$\u7684\u6700\u5927\u503c, \u4e5f\u5c31\u662f\u672c\u9898\u7684\u7b54\u6848.\n\n\u3000\u3000\u4e5f\u5c31\u662f\u8bf4\u9700\u8981\u4e8c\u5206\u8fd9\u4e2a\u7b54\u6848\u7684\u70b9\u7684\u4f4d\u7f6e, \u901a\u8fc7**\u4e8c\u5206\u7b54\u6848**.\n\n![e](https://cdn.luogu.com.cn/upload/pic/18182.png)  \n\u3000\u3000**\u5982\u4f55\u5224\u65ad$f(l)$\u7684\u503c\u5462?**\n\n\u3000\u3000\u53d1\u73b0\u5982\u679c**\u4e24\u4e2a\u70b9\u4e4b\u95f4\u8ddd\u79bb\u5c0f\u4e8e\u6700\u5c0f\u8df3\u8dc3\u8ddd\u79bb**, \u90a3\u4e48\u5c31\u5fc5\u987b\u5c06\u5176\u4e2d\u4e00\u4e2a\u77f3\u5b50\u79fb\u53bb.\u5047\u8bbe\u8fd9**\u4e24\u4e2a\u70b9\u4e4b\u524d\u6240\u6709\u77f3\u5b50\u5df2\u7ecf\u6ee1\u8db3\u8981\u6c42**\u4e86, \u53d1\u73b0\u5982\u679c\u79fb\u53bb\u524d\u4e00\u4e2a\u77f3\u5b50, \u53ef\u662f\u524d\u4e00\u4e2a\u77f3\u5b50\u4e0e\u5b83\u524d\u9762\u7684\u77f3\u5b50\u672c\u6765\u5c31\u5927\u4e8e\u6700\u77ed\u8ddd\u79bb, \u79fb\u53bb\u540e\u540e\u9762\u7684\u77f3\u5b50\u4e0e\u518d\u540e\u9762\u7684\u77f3\u5b50\u53ef\u80fd\u8fd8\u662f\u5927\u4e8e\u6700\u77ed\u8ddd\u79bb;\u3000\u3000  \n\u5982\u679c\u79fb\u8d70\u540e\u9762\u7684\u77f3\u5b50, \u4e0d\u4f1a\u6539\u53d8\u524d\u9762\u77f3\u5b50, \u90a3\u4e48\u5b83\u524d\u9762\u77f3\u5b50\u4e0e\u540e\u9762\u7684\u77f3\u5b50\u7684\u8ddd\u79bb\u51cf\u5c0f\u4e86, \u4e5f\u5c31\u662f.\n\n![](https://cdn.luogu.com.cn/upload/pic/18183.png)\n\n\u3000\u3000***Tips:***\n- \u4e8c\u5206\u4f1a\u51fa\u8be1\u5f02\u7684\u95ee\u9898, \u6709\u4e09\u4e2a\u6d4b\u8bd5\u70b9\u8f93\u51fa\u6bd4\u7b54\u6848\u5927\u4e00, \u6240\u4ee5\u6211\u7279\u5224\u4e86...\n\n#### Code\n```\n#include<cstdio>\n\nint k,n,m;\nint pos[50005];\n\nbool check(int mid){\n    int ans=0,st=0;\n    for(int i=1;i<=n;++i)\n        if(pos[i]-st<mid)\n            ans=ans+1;\n        else st=pos[i];\n    return ans<=m;\n}\n\nint main(){\n    scanf(\"%d%d%d\",&k,&n,&m);\n    for(int i=1;i<=n;++i)scanf(\"%d\",&pos[i]);\n    int l=0,r=k,mid;\n    while(l<r){\n        mid=(l+r)>>1;\n        if(check(mid))l=mid+1;\n        else r=mid-1;\n    }\n    if(!check(l))l-=1;\n    printf(\"%d\\n\",l);\n    return 0;\n}\n```",
        "postTime": 1524874517,
        "uid": 39067,
        "name": "aiyougege",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2678 \u3010\u8df3\u77f3\u5934\u3011"
    },
    {
        "content": "## \u9898\u89e3.\n\n\u4e00. \u9898\u76ee\u5206\u6790\n\n\u6211\u4eec\u53ef\u4ee5\u770b\u5230 **\u6700\u77ed\u8df3\u8dc3\u8ddd\u79bb\u5c3d\u53ef\u80fd\u957f** , \u6240\u4ee5\u8fd9\u9898\u80af\u5b9a\u662f\u4e8c\u5206\u505a\u6cd5\u4e86.\n\n\u90a3\u4e48\u4e8c\u5206\u4ec0\u4e48\u5462\uff1f\u5f88\u663e\u7136\u53ef\u4ee5\u770b\u51fa\u5c31\u662f **\u6700\u77ed\u8df3\u8dc3\u8ddd\u79bb**.\n\n\u4e8c. \u4e8c\u5206\u68c0\u6d4b\n\nCheck \u51fd\u6570.\u8bbe\u4e8c\u5206\u6700\u77ed\u8df3\u8dc3\u8ddd\u79bb\u4e3a Mid.\n\n\u6211\u4eec\u8003\u8651\u5230\u4e86 i \u548c i+1 \u4e24\u5757\u77f3\u5934.\n\n- \u5982\u679c\u8fd9\u4e24\u5757\u77f3\u5934\u4e4b\u95f4\u8ddd\u79bb\u5927\u4e8e\u7b49\u4e8e Mid,\u90a3\u4e48\u53ef\u4ee5\u8df3\u8fc7\uff08\u8df3\u8dc3\u8ddd\u79bb\u6ee1\u8db3\u6761\u4ef6\uff09.\n\n- \u5426\u5219\uff0c\u6211\u4eec\u5e94\u8be5\u79fb\u8d70\u7b2c i \u5757\u77f3\u5934\uff0c\u4f7f\u5f97\u4e24\u5757\u77f3\u5934\u4e4b\u95f4\u8ddd\u79bb\u5927\u4e8e\u7b49\u4e8e Mid.\n\n\u6700\u540e\uff0c\u6211\u4eec\u770b\u79fb\u8d70\u7684\u77f3\u5934\u4e2a\u6570\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e M \u5373\u53ef.\n\n\u4e8c\u5206\u8fb9\u754c\uff1a l=0,r=L. \n\n\u4e09. \u4ee3\u7801\n\n```\n#include<iostream> \n\nusing namespace std;\n\nlong long L,N,M,d[50005],ans;\n\nbool check(long long mid)\n{\n\tint temp=0,now=0;\n\tfor(int i=1;i<=N;i++)\n\t    if(d[i]-d[now]<mid)  temp++;//\u79fb\u8d70\u8fd9\u5757\u77f3\u5934\n\t    else now=i;//\u4e0d\u79fb\u8d70\n\tif(temp>M)  return false;\n\treturn true;//\u80fd\u66f4\u65b0\u7b54\u6848\n}\n\nint main()\n{\n\tcin>>L>>N>>M;//\u8bfb\u5165\n\tfor(int i=1;i<=N;i++)  cin>>d[i]; \n\t\n\tint l=0,r=L;//\u4e8c\u5206\n\twhile(l<=r)\n\t{\n\t\tlong long mid=(l+r)>>1;\n\t\tif(check(mid))  ans=mid,l=mid+1;\n\t\telse r=mid-1;\n\t}\n\t\n\tcout<<ans<<endl;//\u8f93\u51fa\n\t\n\treturn 0;\n}\n```\n",
        "postTime": 1572607476,
        "uid": 87197,
        "name": "\u6709\u670b\u81ea\u8fdc\u65b9\u6765",
        "ccfLevel": 0,
        "title": "P2678 \u3010\u8df3\u77f3\u5934\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u91c7\u7528**\u4e8c\u5206\u7b54\u6848**\u7684\u601d\u60f3  \n\n###  1.\u521d\u59cb\u5316\u65f6\uff0c\u8ba9L\uff0cR\u5206\u522b\u4e3a\u8d77\u70b9\u4e0e\u7ec8\u70b9\uff0cmid\u5219\u4e3a\u5f53\u524d\u5904\u7406\u7684\u7b54\u6848\n###  2.\u6b64\u65f6\u7684mid\u4e3a\u77f3\u5934\u4e4b\u95f4\u7684\u6700\u5c0f\u957f\u5ea6\uff0c\u8fdb\u5165judge\u51fd\u6570\n###  3.\u5f00\u59cb\u6bd4\u8f83\u77f3\u5934\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u5982\u679c\u4e24\u5757\u77f3\u5934\u95f4\u7684\u8ddd\u79bb\u6bd4mid\uff0c\u4e5f\u5c31\u662f\u6700\u5c0f\u7684\u7b54\u6848\u8fd8\u5c0f\uff0c\u5219\u8981\u79fb\u5f00\uff0c\u8ba1\u6570\u5668+1\u3002\u4f46\u8fd9\u91cc\u9700\u8981\u5904\u7406\u4e00\u4e0b\n## \u5047\u8bbe\u67093\u5757\u77f3\u5934ABC\uff0c\uff08A<B<C)\uff0c\u5f53A\u4e0eB\u6bd4\u8f83\u5e76\u4e14B\u88ab\u79fb\u8d70\u65f6\uff0c\u5bf9\u4e8e\u672c\u6765\u8981\u4e0eB\u6bd4\u8f83\u7684C\u6765\u8bf4\uff0cA\u5c31\u6210\u4e86B\uff0c\u6240\u4ee5\u8981\u628a\u77f3\u5934B\u7684\u5750\u6807\u53d8\u6210\u77f3\u5934A\u7684\u5750\u6807\uff0c\u8fd9\u6837C\u4e0eB\u6bd4\u8f83\u65f6\uff0c\u5c31\u662f\u4e0eA\u6bd4\u8f83\u4e86\u3002\n###  4.\u5982\u679c\u8ba1\u6570\u5668>m,\u5373\u8981\u79fb\u8d70\u7684\u77f3\u5934\u6570\u91cf\u8d85\u8fc7\u4e86\u9650\u5236\uff0c\u5219\u8fd4\u56de\u5047\uff0c\u8fd9\u65f6\u8303\u56f4\u5c31\u5fc5\u987b\u5411\u5de6\u8fb9\u7f29\u5c0f\u4e86\u3002\u53cd\u4e4b\uff0c\u5982\u679c\u6ca1\u6709\u8d85\u8fc7\u9650\u5236\uff0c\u53ef\u80fd\u6709\u66f4\u4f18\u89e3\uff0c\u6b64\u65f6\u5c31\u53ef\u4ee5\u5728mid\u7684\u53f3\u8fb9\u627e\u4e86\u3002  \n\u4ee3\u7801\u4e2d\u82e5\u6709\u4e0d\u61c2\u7684\u7ec6\u8282\u770b\u6ce8\u91ca\u5c31\u884c\u4e86\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint river[50010],b[50010];\nint n,m;\nbool judge(int mid)\n{\n\tint k=0;\n\tfor(int i=0;i<=n;i++) b[i]=river[i];\n    //\u7528b\u6570\u7ec4\u66ff\u4ee3river\u6765\u5904\u7406\uff0c\u8fd9\u6837\u5f85\u4f1a\u5904\u7406\u65f6\u539f\u6570\u7ec4\u5c31\u4e0d\u4f1a\u88ab\u6539\u53d8\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(b[i]-b[i-1]<mid) b[i]=b[i-1],k++;\n\t}\n\treturn (k<=m)?true:false;\n    //\u95ee\u53f7\u8868\u8fbe\u5f0f\uff0cA?B:C,\u5982\u679cA\u771f\u5219B\uff0celse\u5219C\n}\n\nint main()\n{\n\tint lon;\n\tcin>>lon>>n>>m;\n\tfor(int i=1;i<=n;i++) cin>>river[i];\n\tn++;//\u8fd9\u91cc\u5f88\u91cd\u8981\uff0c\u8d77\u70b9\u548c\u7ec8\u70b9\u4e5f\u8981\u7b97\u4e00\u4e2a\u201c\u77f3\u5934\u201d\n\triver[0]=0,river[n]=lon;\n\tint L=0,R=lon;\n    //\u849f\u84bb\u7528\u5de6\u95ed\u53f3\u5f00\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u6bd4\u8f83\u597d\u7406\u89e3\uff0cL\u662f\u5408\u6cd5\u89e3\uff0cR\u662f\u4e0d\u5408\u6cd5\u7684\u56e0\u6b64\u6700\u540e\u76f4\u63a5\u8fd4\u56deL\u5c31\u884c\u4e86\n\twhile(L+1<R)//\u5de6\u95ed\u53f3\u5f00\uff0c\u7ed3\u675f\u65f6L\u521a\u597d\u5728R\u5de6\u8fb9\n\t{\n\t\tint mid=(L+R)/2;\n\t\tif(judge(mid)) L=mid;//\u5408\u6cd5\uff0cL\u53ef\u4ee5\u53d6\u5230\n\t\telse R=mid;//\u4e0d\u5408\u6cd5\uff0cR\u53d6\u4e0d\u5230\n\t}\n\tcout<<(judge(R)?R:L);\n    //\u4e0d\u662f\u8bf4\u76f4\u63a5\u8fd4\u56deL\u5c31\u884c\u4e86\u5417\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u8981\u5224\u65ad\u5462\uff1f\n    //\u56e0\u4e3a\u6709\u4e00\u4e2a\u6d4b\u8bd5\u70b9\uff08\u6bd2\u7624\uff09\u6ca1\u6709\u77f3\u5934\uff0c\u6240\u4ee5R\u662f\u5408\u6cd5\u7684\uff0c\u8fd9\u65f6\u76f4\u63a5\u8f93\u51fa\u8d5b\u9053\u5168\u957f\n    //\u4f46\u4e00\u822c\u6765\u8bf4\u662f\u4e0d\u7528\u5224\u65ad\u7684\n\treturn cz666;//\u9632\u6284\u88ad\n}\n```",
        "postTime": 1547526533,
        "uid": 71966,
        "name": "AlphaPig",
        "ccfLevel": 0,
        "title": "P2678\u8df3\u77f3\u5934"
    },
    {
        "content": "\u8bdd\u8bf4\u8fd9\u9053\u9898\uff0c\u5e94\u8be5\u7b97\u4e8c\u5206\u7b54\u6848\u7684\u4f8b\u9898\u4e4b\u4e00\uff08\u8fd8\u6709[\u7f51\u7ebf\u4e3b\u7ba1](http://noi.openjudge.cn/ch0111/04/)\uff0c\u8fd9\u662fnoi\uff08open judge\uff09\u4e0a\u7684\uff0c\u6d1b\u8c37\u5e76\u6ca1\u6709\uff09\n\n\u540c\u4e8c\u5206\u67e5\u627e\u4e00\u6837\u5b9a\u4e49left,mid,right\uff0c\u4f46\u4e8c\u5206\u67e5\u627e\u662f\u4f5c\u4e3a\u4e0b\u6807\uff0c\u4e8c\u5206\u7b54\u6848\u662f\u76f4\u63a5\u4f5c\u4e3a\u503c\n\n\u5927\u81f4\u6a21\u677f(\u6709\u591a\u79cd\u5199\u6cd5\uff0c\u4f46\u6211\u4eec\u8001\u5e08\u63a8\u8350\u4e0b\u9762\u8fd9\u79cd\uff0c\u4f46\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u867d\u7136\u6211\u4eec\u8001\u5e08\u8bf4\u8fd9\u79cd\u5199\u6cd5\u5305\u62ec\u6240\u6709\u60c5\u51b5\uff0c\u4e8b\u5b9e\u5374\u4e0d\u662f\u8fd9\u6837,\u4f46\u662f\u81f3\u5c11\u8fd9\u9053\u9898\u662f\u6ca1\u95ee\u9898\u7684\uff09\n\n\u6bcf\u6b21\u90fd\u5206\u6210\u4e24\u4e2a\u533a\u95f4\uff08\u6240\u6709\u60c5\u51b5\u4e0b\u90fd\u662f\u5de6\u95ed\u53f3\u5f00\uff0c\u5305\u62ec\u8d77\u59cb\u72b6\u6001\uff09\uff0c\u7b54\u6848\u8fc7\u5927\uff0c\u5c31\u53d6\u5de6\u533a\u95f4\uff08\u5c0f\uff09\uff0c\u7b54\u6848\u8fc7\u5c0f\u5c31\u53d6\u53f3\u533a\u95f4\uff08\u5927\uff09\n\n```cpp\n\tl=0,r=max\u7b54\u6848+1;\n    \t//l\u662f\u80fd\u53d6\u5230\u7684\uff0c\u800cr\u662f\u53d6\u4e0d\u5230\u7684\n        //r\u4e5f\u53ef\u4ee5\u8d4b\u4e3a\u4e00\u4e2a\u5f88\u5927\u7684\u503c \n\twhile(l+1<r)\n \t{\n \t\tm=(l+r)/2;\n \t\t\n \t\tint sum=0 //\u8fd9\u90e8\u5206\u51e0\u884c\u5c31\u662f\u5927\u5bb6\u81ea\u5df1\u53d1\u6325\u7684\u4e86\n \t\t//\u8fd9\u91ccsum\u4f5c\u4e3a\u5224\u65ad\u8fd9\u4e2am\u662f\u5426\u53ef\u884c\uff08\u6216\u662f\u66f4\u4f18\uff09\u7684\u4f9d\u636e \n\t\t....... \n\t\t\n  \t\tif(sum<=p)l=m;//p\u4e3a\u9898\u76ee\u91cc\u7684\u8981\u6c42 \n        \t//\u5927\u4e8e\u53f7\u5c0f\u4e8e\u53f7\u4ee5\u9898\u76ee\u6216\u4e2a\u4eba\u4ee3\u7801\n\t\telse  r=m;\n\t} \n```\n\n\n\n------------\n\n------------\n\n\n\u4e0b\u9762\u662f\u8fd9\u9053\u9898\u76ee\n\n```cpp\n #include<iostream>\n using namespace std;\n int l,m,n;\n int dis[50007];//\u6bcf\u4e2a\u77f3\u5934\u5230\u8d77\u70b9\u7684\u8ddd\u79bb\n int main()\n {\n \tcin>>l>>n>>m;\n \tfor(int i=1;i<=n;i++)\n\t\tcin>>dis[i];\n\tdis[n+1]=l;//\u7ec8\u70b9\n\tint left=0,right=l+1,mid;//\u4e24\u4e2a\u6781\u503c\uff0c\u4f46\u6ce8\u610fleft\u53ef\u4ee5\u53d6\u5230\uff0c\u800cright\u4e0d\u80fd\u53d6\u5230\n\twhile(left+1<right)\n\t{\n\t\tmid=(left+right)/2;\n\t\tint sum=0,x=dis[0];//sum\u662f\u5f53\u524d\u7b54\u6848\u4e0b\u8981\u79fb\u591a\u5c11\u77f3\u5934\uff0cx\u662f\u5f53\u524d\u8d77\u8df3\u7684\u77f3\u5934\uff08\u521d\u59cb\u4e3a\u8d77\u70b9\uff09\n\t\tfor(int i=1;i<=n+1;i++)//\u6ce8\u610f\u662fn+1\uff08\u56e0\u4e3a\u6709\u7ec8\u70b9\u554a\uff09\n\t\tif(dis[i]-x<mid)sum++;//\u8d77\u8df3\u8ddd\u79bb\u5c0f\u4e8e\u5f53\u524d\u7b54\u6848\uff0c\u8bf4\u660e\u8981\u79fb\u8d70\n\t\telse x=dis[i];//\u6362\u5230\u5f53\u524d\u4f4d\u7f6e\u8d77\u8df3\n\t\tif(sum<=m)left=mid;//\u8981\u79fb\u7684\u6570\u91cf\u5c0f\u4e8e\u7b49\u4e8e\u9898\u76ee\u8981\u6c42\uff0c\u8bf4\u660e\u7b54\u6848\u8fd8\u53ef\u4ee5\u66f4\u5927\n\t\telse right=mid;//\u7b54\u6848\u8fc7\u5927\n\t}\n\tcout<<left<<endl;//left\u5373\u4e3a\u7b54\u6848\n\treturn 0;\n } \n```",
        "postTime": 1565359575,
        "uid": 164840,
        "name": "zhaowangji",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2678 \u3010\u8df3\u77f3\u5934\u3011"
    },
    {
        "content": "**\u91c7\u53d6\u4e8c\u5206\u7b54\u6848\u7684\u601d\u8def**\n\n\u5de6\u8fb9\u754c\u4ece1\u5f00\u59cb\uff0c\u53f3\u8fb9\u754c\u4eceL\u5f00\u59cb\n\n\u6211\u4eec\u60f3\uff0c\u5982\u679c\u4e24\u4e2a\u77f3\u5934\u4e4b\u95f4\u7684\u8ddd\u79bb\u5c0f\u4e8emid\uff0c\u8bf4\u660e\u5b83\u8981\u88ab\u79fb\u8d70\n\n\u6570\u91cf\u5c0f\u4e8em\uff0c\u5219\u7b26\u5408\u9898\u610f\uff0c\u6536\u7f29\u4e00\u4e0b\u5de6\u8fb9\u754c\u4e3amid\uff0c\u5bfb\u627e\u66f4\u5927\u7684\u6700\u77ed\u957f\u5ea6\n\n\u82e5\u5927\u4e8em\uff0c\u8981\u5220\u6389\u7684\u77f3\u5934\u8fc7\u591a\uff0c\u5219mid\u8fc7\u5927\uff0c\u9700\u8981\u6536\u7f29\u53f3\u8fb9\u754c\u4e3amid-1\uff0c\u5bfb\u627e\u5408\u9002\u7684\u6700\u77ed\u957f\u5ea6\n\n\u4e00\u4e9b\u7ec6\u8282\uff1a\n\n1\u3001\u4e24\u4e2a\u77f3\u5934\u95f4\u7684\u8ddd\u79bb\u53ef\u4ee5\u7528\u5dee\u5206\u6570\u7ec4\u7ef4\u62a4\uff0c\u4f46\u6ce8\u610f\u4e0d\u8981\u5fd8\u8bb0\u6700\u540e\u7684\u4e24\u5757\u77f3\u5934\u95f4\u7684\u8ddd\u79bb\uff08\u4e5f\u5c31\u662f\u5230\u5012\u6570\u7b2c\u4e8c\u5757\u77f3\u5934\u5230\u7ec8\u70b9\u7684\u8ddd\u79bb\uff09\n\n2\u3001\u4e8c\u5206\u65f6\u6211\u4eec\u91c7\u53d6\n\nmid=\uff08L+R+1\uff09>>1\u7684\u65b9\u6cd5\n\n\u53ef\u4ee5\u5047\u8bbe\u67d0\u65f6\u523bL=1\uff0cR=2\n\n\u82e5mid=\uff08L+R\uff09>>1\u7684\u8bdd\uff0cmid=1\n\n\u82e5R=mid-1\uff0c\u8868\u73b0\u5728\u6570\u8f74\u4e0a\u4f1a\u5728L\u5de6\u8fb9\uff0c\u6bd4L\u5c0f\uff0c\u4e0d\u884c\n\n\u82e5L=mid\uff0c\u8868\u73b0\u5728L\u8fd8\u662f\u4e3a1\uff0c\u4f1a\u9677\u5165\u6b7b\u5faa\u73af\n\n\uff08\u6458\u81ea\u300a\u7b97\u6cd5\u7ade\u8d5b\u8fdb\u9636\u6307\u5357\u300b\uff09\n\n\u849f\u84bb\u4ee3\u7801\u5982\u4e0b\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nconst int maxn=50005;\nint d[maxn],dif[maxn];\nint main()\n{\n\tint L,n,m;\n\tscanf(\"%d%d%d\",&L,&n,&m);\n\t\n\tfor(int i=1; i<=n; i++)\n\t{\n\t\tscanf(\"%d\",&d[i]);\n\t\tdif[i]=d[i]-d[i-1]; //\u5dee\u5206\u6570\u7ec4\u5b58\u50a8\u4e24\u77f3\u5934\u95f4\u8ddd\u79bb \n\t}\n\tdif[n+1]=L-d[n]; //\u4e0d\u8981\u5fd8\u8bb0\u5012\u6570\u7b2c\u4e8c\u5757\u77f3\u5934\u5230\u7ec8\u70b9\u7684\u8ddd\u79bb \n\t\n\tint left=1,right=L,mid,sum;\n\twhile(left<right)\n\t{\n\t\tsum=0; //<mid\u7684\u77f3\u5934\u6570 \n\t\tfor(int i=1; i<=n+1; i++)\n\t\t{\n\t\t\td[i]=dif[i];\n\t\t}\n\t\tmid=(left+right+1)>>1;\n\t\tfor(int i=1; i<=n+1; i++)\n\t\t{\n\t\t\tif(d[i]<mid) //ok\n\t\t\t{\n\t\t\t\tsum++;\n\t\t\t\td[i+1]=d[i+1]+d[i]; //\u79fb\u8d70\uff0c\u4e0b\u4e00\u7ea7\u8865\u4e0a \n\t\t\t}\n\t\t}\n\t\t\n\t\tif(sum<=m) //ok,\u5c1d\u8bd5\u6709\u6ca1\u6709\u66f4\u5927\u7684 \n\t\t{\n\t\t\tleft=mid;\n\t\t}\n\t\telse //no,\u79fb\u8d70\u6570\u76ee\u8fc7\u591a\uff0c\u8bf4\u660emid\u8fc7\u5927 \n\t\t{\n\t\t\tright=mid-1; \n\t\t} \n\t}\n\t\n\tprintf(\"%d\\n\",left);\n\treturn 0;\n}\n```\n",
        "postTime": 1573216417,
        "uid": 169765,
        "name": "marklikeamd",
        "ccfLevel": 0,
        "title": "[NOIP2015] P2678 \u8df3\u77f3\u5934"
    },
    {
        "content": "\u8fd9\u9898\u7684\u7b97\u6cd5\u662f![](https://s2.ax1x.com/2019/07/30/eG9cvj.png)\n\n\u4e3b\u8981\u505a\u6cd5\uff1a\u4e8c\u5206\u8df3\u8dc3\u7684\u7684\u6700\u5927\u503c\uff0c\u7136\u540e\u5224\u65ad\uff0c\u7528now\u8868\u793a\u4e4b\u524d\u7684\u77f3\u5934\uff0c\u7528i\u5faa\u73af\u73b0\u5728\u7684\u77f3\u5934\uff0c\u6bd4\u8f83a_now\u548ca_i\u7684\u503c\uff0c\u5982\u679c\u6bd4\u73b0\u5728\u7b54\u6848\u5c0f\u4e86\uff0c\u7d2f\u52a0\u7d2f\u52a0\u5668\uff0c\u5426\u5219\u66f4\u65b0now\u3002\u4e4b\u540e\u5224\u65ad\u4e00\u4e0b\u7d2f\u52a0\u5668\u548cm\u5c31\u53ef\u4ee5\u4e86\n\n\u7406\u89e3\u96be\u70b9\uff1apd\u90e8\u5206\n\n\u6211\u4eec\u5047\u8bbe\u73b0\u5728\u6709\u77f3\u59343\uff0c4\uff0c5\uff0c3\u548c4\u4e4b\u95f4\u7684\u8ddd\u79bb\u662f2\uff08\u4e0d\u7b26\u5408\u8981\u6c42\uff09\uff0c4\u548c5\u4e4b\u95f4\u7684\u8ddd\u79bb\u662f4\uff08\u7b26\u5408\u8981\u6c42\uff09\uff0c\u6b64\u65f6now\u662f3\uff0ci\u662f5\n\n![](https://s2.ax1x.com/2019/07/30/eG9Rrn.png)\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u820d\u53bb\u77f3\u59344\uff0c\u66f4\u65b0i\u540e\uff0c\u5c31\u8981\u6bd4\u8f83\u77f3\u59343\u548c\u77f3\u59345\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u6240\u4ee5\u6b64\u65f6\u5c31\u4e0d\u5e94\u8be5\u66f4\u65b0now\n\n![](https://s2.ax1x.com/2019/07/30/eG9Wbq.png)\n\n\u5f53\u6211\u4eec\u540e\u6765\u9047\u5230\u4e0d\u7528\u820d\u53bb\u7684\u77f3\u5934\u65f6\uff0c\u5c31\u8981\u628anow\u66f4\u65b0\u4e3a\u6b64\u65f6\u7684\u6709\u6548\u77f3\u5934\n\n```pascal\nvar\n  l,n,m,i,z,y,mid,ans:longint;\n  a:array[0..50001] of longint;\nfunction pd(x:longint):boolean;//\u5224\u65ad\u7b54\u6848\u662f\u5426\u6210\u7acb\nvar\n  i:longint;\n  s:longint=0;\n  now:longint=0;//\u8fc7\u7a0b\u4e2d\u7684\u53d8\u91cf\u8981\u6e05\u96f6\uff01\nbegin\n  for i:=1 to n+1 do\n    if (a[i]-a[now]<x) then\n      inc(s)//\u4e0d\u5230\u6700\u77ed\u8ddd\u79bb\uff0c\u7d2f\u52a0\u5668+1\uff0c\u4e0d\u7528\u66f4\u65b0\u4e0a\u6b21\u77f3\u5934\n    else\n      now:=i;//\u66f4\u65b0\u4e0a\u6b21\u77f3\u5934\n  if s>m then exit(false)//\u6b64\u65f6\u7b54\u6848\u7684s,\u8d85\u4e86\u9898\u76ee\u7684m\n    else exit(true);\nend;\nbegin\n  read(l,n,m);\n  for i:=1 to n do\n    read(a[i]);\n  a[0]:=0;//\u6ce8\u610f\u8d77\u70b9\u662f0\n  a[n+1]:=l;//\u6ce8\u610f\u7ec8\u70b9\u662fn+1\n  z:=1;y:=l;\n  while z<=y do//\u4e8c\u5206\u6700\u957f\u8ddd\u79bb\n  begin\n    mid:=(z+y) shr 1;\n    if pd(mid) then\n    begin\n      z:=mid+1;//\u5bfb\u627e\u53ef\u80fd\u7684\u6700\u4f18\u7b54\u6848\n      ans:=mid;//\u53ca\u65f6\u4fdd\u5b58\u53ef\u884c\u7b54\u6848\n    end\n    else\n      y:=mid-1;\n  end;\n  writeln(ans);\nend.\n```\n\n",
        "postTime": 1564451953,
        "uid": 219900,
        "name": "\u4e16\u754c\u7ecf\u5178",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2678 \u3010\u8df3\u77f3\u5934\u3011"
    },
    {
        "content": "\u4e8c\u5206+\u8d2a\u5fc3\n\n\n\n```cpp\n#include<cstdio> \nint L,n,m,i,w,l,r,mid,pos,ans,a[55555]; \nbool ok(int x){\n  for(pos=w=0,i=1;i<=n;i++)if(a[i]-pos<x)w++;else pos=a[i];\n  return w<=m; \n} \nint main(){\n  for(scanf(\"%d%d%d\",&L,&n,&m),i=1;i<=n;i++)scanf(\"%d\",&a[i]);a[++n]=L; \n  for(l=1,r=L;l<=r;)if(ok(mid=l+r>>1))ans=mid,l=mid+1;else r=mid-1; \n  printf(\"%d\",ans); \n  return 0;\n}\n```",
        "postTime": 1479221066,
        "uid": 28043,
        "name": "WANGjerry",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2678 \u3010\u8df3\u77f3\u5934\u3011"
    },
    {
        "content": "\u901a\u8fc7\u4e8c\u5206\u53ef\u4ee5\u6c42\u51fa\u6700\u5927\u7684$Len$\u3002\n\u5269\u4e0b\u7684\u95ee\u9898\u662f\u5982\u4f55\u5224\u65ad\u7ed9\u5b9a$Len$\u7684\u60c5\u51b5\u4e0b\uff0c\u80fd\u5426\u6700\u591a\u62ff\u8d70M\u5757\u77f3\u5934\uff0c\u4f7f\u5f97\u6240\u6709\u76f8\u90bb\u4e24\u5757\u77f3\u5934\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e0d\u5c0f\u4e8e$Len$\u3002\n\n\u8fd9\u4e00\u6b65\u53ef\u4ee5\u8d2a\u5fc3\u6765\u505a\u3002\u4ece\u524d\u5f80\u540e\u626b\u63cf\uff0c\u5e76\u8bb0\u4e00\u4e0b\u4e0a\u4e00\u5757\u77f3\u5934\u7684\u4f4d\u7f6e\u3002\n\u5982\u679c\u5f53\u524d\u77f3\u5934\u548c\u4e0a\u4e00\u5757\u77f3\u5934\u7684\u8ddd\u79bb\u5c0f\u4e8e$Len$\uff0c\u5219\u5c06\u5f53\u524d\u77f3\u5934\u62ff\u8d70\u3002\n\n\u5982\u679c\u5f53\u524d\u77f3\u5934\u548c\u4e0a\u4e00\u5757\u77f3\u5934\u7684\u8ddd\u79bb\u5927\u4e8e\u7b49\u4e8e$Len$\uff0c\u5219\u5c06\u4e0a\u4e00\u5757\u77f3\u5934\u66f4\u65b0\u6210\u5f53\u524d\u8fd9\u5757\u3002\n\u626b\u63cf\u7ed3\u675f\u540e\u5224\u65ad\u62ff\u8d70\u7684\u77f3\u5934\u6570\u91cf\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e$M$\u3002\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std; const int N = 50010;\n \nint L, n, m;\nint d[N];\n \nbool check(int mid)\n{\n    int last = 0, cnt = 0;\n    for (int i = 1; i <= n; i++)\n        if (d[i] - last < mid) cnt++;\n        else last = d[i];\n    return cnt <= m;\n}//\u5224\u65ad\u662f\u5426\u7b26\u5408\u9898\u610f\n \nint main()\n{\n    scanf(\"%d%d%d\", &L, &n, &m);\n    for (int i = 1; i <= n; i++) scanf(\"%d\", &d[i]);\n    d[++n] = L;\n \n    int l = 1, r = 1e9;\n    while (l < r)//\u4e8c\u5206\n    {\n        int mid = l + r + 1 >> 1;\n        if (check(mid)) l = mid;\n        else r = mid - 1;\n    }\n \n    printf(\"%d\\n\", r);\n    return 0;\n}\n \n```\n",
        "postTime": 1569652008,
        "uid": 96855,
        "name": "\u6c15\u6c18\u6c1a\u52e5\u70ce",
        "ccfLevel": 0,
        "title": "\u8df3\u77f3\u5934\u9898\u89e3"
    },
    {
        "content": "# \u6d1b\u8c37P2678\uff0cNOIP2015\n\n## \u56e0\u4e3a\u8981\u6c42\u6700\u77ed\u8ddd\u79bb\u7684\u6700\u5927\u503c\uff0c\u5f88\u81ea\u7136\u7684\u8003\u8651\u4e8c\u5206\uff08\u867d\u8bf4\u521a\u5f00\u59cb\u4e0d\u4f1a\u5206\uff09\uff0c\u7136\u540e\u6765\u770b\u770b\u600e\u4e48\u5206\n\n#### \u7b2c\u4e00\u79cd\u6781\u7aef\u60c5\u51b5\uff0c\u4e0d\u79fb\u77f3\u5934\uff0c\u4e0d\u8bba\u5982\u4f55\u90fd\u5f97\u4ece\u8fd9\u5934\u8df3\u5230\u5bf9\u5cb8\uff0c\u8ddd\u79bb\u6700\u5c0f\u4e3al\n\n#### \u7b2c\u4e8c\u79cd\u53ef\u4ee5\u8003\u8651\u4e24\u5757\u77f3\u5934\uff0c\u79fb\u4e00\u5757\uff0c\u7b2c\u4e00\u5757\u5230\u5cb8\u8fb9\u8ddd\u79bb\u4e3al/3\uff0c\u7b2c\u4e8c\u5757\u4e3al/2\uff0c\u90a3\u4e48\u8df3\u8dc3\u8ddd\u79bb\u5206\u522b\u4e3al/3\uff0cl/6\uff0cl/2\uff1a\u7b2c\u4e8c\u79cd\u53ef\u4ee5\u8003\u8651\u4e24\u5757\u77f3\u5934\uff0c\u79fb\u4e00\u5757\uff0c\u7b2c\u4e00\u5757\u5230\u5cb8\u8fb9\u8ddd\u79bb\u4e3al/3\uff0c\u7b2c\u4e8c\u5757\u4e3al/2\uff0c\u90a3\u4e48\u8df3\u8dc3\u8ddd\u79bb\u5206\u522b\u4e3al/3\uff0cl/6\uff0cl/2\uff1a\n\n\u5982\u679c\u79fb\u7b2c\u4e00\u5757\uff0c\u8ddd\u79bb\u53d8\u6210l/2\uff0cl/2\uff1b\n\n\u5982\u679c\u79fb\u7b2c\u4e8c\u5757\uff0c\u8ddd\u79bb\u4e3al/3\uff0cl*2/3\uff1b\n\n\u4e24\u79cd\u60c5\u51b5\u5bf9\u5e94\u7684\u6700\u77ed\u8ddd\u79bb\u7684\u6700\u5927\u503c\u5206\u522b\u4e3al/3\uff0cl/2\uff0c\u6240\u4ee5\u9009\u62e9\u7b2c\u4e00\u79cd\n\u5230\u4e86\u8fd9\u91cc\u5f88\u81ea\u7136\u7684\u60f3\u5230\u679a\u4e3e\uff0c\u4f46\u6b64\u65f6\u53ea\u79fb\u4e00\u5757\u77f3\u5934\uff0c\u5f53m\u66f4\u5927\uff08\u751a\u81f3\u4e3a10000\u65f6\uff09\u80af\u5b9aTLE\u5230\u4e86\u8fd9\u91cc\u5f88\u81ea\u7136\u7684\u60f3\u5230\u679a\u4e3e\uff0c\u4f46\u6b64\u65f6\u53ea\u79fb\u4e00\u5757\u77f3\u5934\uff0c\u5f53m\u66f4\u5927\uff08\u751a\u81f3\u4e3a10000\u65f6\uff09\u80af\u5b9aTLE\n#### \u6240\u4ee5\u5f00\u59cb\u8003\u8651\u5176\u4ed6\u7b97\u6cd5\n\u4ece\u4e0a\u9762\u4e24\u4e2a\u6817\u5b50\u53ef\u4ee5\u770b\u51fa\uff0c\u6700\u5f00\u59cb\u7684\u8ddd\u79bb\u5e94\u8be5\u662f\u5168\u957f\uff0c\u90a3\u4e48\u65e2\u7136\u8981\u5c1d\u8bd5\u6240\u6709\u7b54\u6848\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53c8\u4e0d\u80fd\u592a\u5927\uff0c\u54b1\u53ef\u4ee5\u8bd5\u8bd5\u4e8c\u5206\u679a\u4e3e\n\u5de6\u7aef\u70b9\u4e3a\u5cb8\uff0c\u53f3\u7aef\u70b9\u4e3a\u5bf9\u5cb8\uff08\u4eff\u4f5b\u5e9f\u8bdd\uff09\n\u5c31\u4f1a\u6709\u5982\u4e0b\u7684\u4f2a\u7801\u63cf\u8ff0\n\u521d\u59cb\u533a\u95f4\u4e3a\u603b\u957f\u5ea6\n{\n\t\u5c1d\u8bd5\u5f53\u524d\u533a\u95f4\u957f\u5ea6\uff08\u8df3\u8dc3\u8ddd\u79bb\uff09\u662f\u5426\u5408\u6cd5\uff1b\n\tif\uff081\uff09\u53bb\u53f3\u533a\u95f4\u67e5\u627e\u66f4\u4f18\u89e3\uff1b\n\telse \u5de6\u533a\u95f4\u5bfb\u627e\u53ef\u884c\u89e3\uff1b\n}\n\u6700\u5927\u590d\u6742\u5ea6\u4e3alog 1e9\n#### \u5148\u5728\u6765\u770b\u770b\u5224\u65ad\u51fd\u6570\n\u6309\u7167\u4e0a\u9762\u7684\u60f3\u6cd5\uff0c\u6211\u4eec\u5f97\u628a\u6574\u4e2a\u77f3\u5934\u6570\u7ec4\u904d\u5386\u4e00\u904d\uff0c\u6bcf\u5230\u4e00\u5757\u65b0\u7684\u77f3\u5934\uff0c\u5c31\u8981\u5224\u65ad\u4e00\u6b21\u662f\u5426\u5408\u6cd5\uff0c\u5c31\u662f\u5f53\u524d\u8fd9\u4e24\u5757\u77f3\u5934\u4e4b\u95f4\u7684\u8ddd\u79bb\u662f\u5426\u5927\u4e8eMid(\u7406\u89e3\u4e00\u4e0b)\n\u5982\u679c\u8ddd\u79bb\u6bd4mid\u5c0f\uff0c\u8bf4\u660e\u6b64\u65f6\u4e24\u8005\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e0d\u6ee1\u8db3\u4f7f\u5f53\u524d\u7684mid\u4e3a\u6700\u5c0f\u7684\u8df3\u8dc3\u8ddd\u79bb\uff0c\u90a3\u5c31\u79fb\u52a8\uff0c\u8ba1\u6570\u5668++\n\u5982\u679c\u6bd4mid\u5927\uff0c\u90a3\u5c31\u8df3\u8fc7\u53bb\n#### \u5230\u8fd9\u6709\u540c\u5b66\u8fd8\u662f\u6655\u7684\u8bdd\uff0c\u53ef\u4ee5\u505c\u4e0b\u6765\u7406\u89e3\u4e00\u4e0b\u8fd9\u4e2a\u6700\u77ed\u8ddd\u79bb\u7684\u6700\u5927\u503c\u662f\u4ec0\u4e48\u610f\u601d\n\u6700\u77ed\u8ddd\u79bb\uff0c\u6bcf\u4e00\u79cd\u79fb\u52a8\u65b9\u6848\u5bf9\u5e94\u4e00\u4e2a\u8ddd\u79bb\uff0c\u6bcf\u4e00\u4e2a\u8ddd\u79bb\u4e5f\u8fd4\u56de\u53bb\u5bf9\u5e94\u4e00\u79cd\u79fb\u52a8\u65b9\u6848\uff0c\u9996\u5148\u8981\u5728\u30100\uff0cl\u3011\u5185\u627e\u5230\u6700\u5927\u7684\u79fb\u52a8\u8ddd\u79bb\uff0c\u7136\u540e\u5224\u65ad\u662f\u5426\u5408\u6cd5\uff0c\u5373\u8ba9\u8fd9\u4e2a\u8ddd\u79bb\u4e3a\u6b64\u6b21\u8df3\u77f3\u5934\u7684\u6700\u5c0f\u503c\uff0c\u7136\u540e\u5c1d\u8bd5\u5f88\u591a\u79cd\u8ddd\u79bb\uff0c\u7528\u4e8c\u5206\u627e\u5230\u4e00\u4e2a\u89e3\uff0c\u53ef\u884c\u5c31\u53bb\u627e\u66f4\u5927\u7684\uff0c\u4e0d\u884c\u5c31\u627e\u66f4\u5c0f\u7684\n#### \u6700\u5c0f\u8ddd\u79bb\u6307\u6bcf\u6b21\u8df3\u8dc3\u7684\u8ddd\u79bb\uff0c\u90a3\u4e48\u6700\u5927\u503c\u5c31\u662f\u6240\u6709\u8fd9\u4e2a\u8ddd\u79bb\u91cc\u9762\u6700\u5927\u7684\u503c\n\u597d\u4e86\u8be5\u653e\u4ee3\u7801\u4e86\n```#include<iostream>\n#include<cstdio>\nusing namespace std;\nint l,n,m,dis;\nint shitou[50010];\nbool panduan(int mid);\nint main()\n{\n\tscanf(\"%d%d%d\",&l,&n,&m);\n\tfor(int i=1;i<=n;i++)\n\tscanf(\"%d\",&shitou[i]);\n\tshitou[n+1]=l;\n\tint left=0,right=l;\n\twhile(left<=right)\n\t{\n\t\tint mid=(left+right)/2;\n\t\tif(panduan(mid))\n\t\tleft=mid+1,dis=mid;\n\t\telse\n\t\tright=mid-1;\n\t}\n\tcout<<dis<<endl;\n}\nbool panduan(int mid)\n{\n\tint cnt=0,cur=0;\n\tfor(int i=1;i<=n+1;i++)\n\t{\n\t\tif(shitou[i]-shitou[cur]<mid)\n\t\tcnt++;\n\t\telse\n\t\tcur=i;\n\t}\n\tif(cnt>m)\n\treturn 0;\n\telse\n\treturn 1;\n}```\n\n \n\n \n\n \n\n \n\n \n",
        "postTime": 1526895968,
        "uid": 58134,
        "name": "Methylene_Blue",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2678 \u3010\u8df3\u77f3\u5934\u3011"
    },
    {
        "content": "\u8868\u793a\u672c\u9898\u4e00\u773c\u9898\uff0c\u4f46\u662f\u5199\u4ee3\u7801\u5374\u2026\u2026\u4e00\u8a00\u96be\u5c3d\u554a\u3002\n\n\u9996\u5148\uff0c\u201c\u6700\u5c0f\u503c\u6700\u5927\u201d\uff0c\u663e\u7136\u662f\u4e00\u9053\u4e8c\u5206\u88f8\u9898\u3002\n\n\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e\u6700\u5c0f\u8ddd\u79bb\uff0c\u7136\u540e\u4ece\u524d\u5f80\u540e\u626b\u4e00\u904d\uff0c\u5c31\u53ef\u4ee5\u5224\u65ad\u51fa\u8fd9\u79cd\u60c5\u51b5\u8981\u79fb\u8d70\u591a\u5c11\u77f3\u5934\u3002\n\n\u5177\u4f53\u4e00\u70b9\u6765\u8bf4\uff0c\u6211\u4eec\u4fdd\u5b58\u4e00\u4e2a\u5f53\u524d\u70b9\u4f4d\uff0c\u7136\u540e\u5982\u679c\u5f53\u524d\u9009\u624b\u70b9\u4e0e\u679a\u4e3e\u5230\u7684\u70b9\u8ddd\u79bb\u4e0d\u8d85\u8fc7\u4e8c\u5206\u7684\u8ddd\u79bb\uff0c\u5c31\u8981\u628a\u5b83\u632a\u8d70\uff0c\u5426\u5219\u4fdd\u7559\uff0c\u7136\u540e\u5c06\u5f53\u524d\u9009\u624b\u70b9\u66f4\u65b0\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u5224\u65ad\u51fd\u6570\u5c31\u5199\u5b8c\u4e86\u3002\n\n\u4e07\u4e8b\u5927\u5409\uff0c\u662f\u4e0d\u662f\uff1f\n\n\u4e4b\u540e\u5c31\u6709\u4e86\u4e00\u4e2a\u5de8\u5927\u7684\u95ee\u9898\u2026\u2026\n\n#\u6211\u5fd8\u8bb0\u6574\u6570\u4e8c\u5206\u600e\u4e48\u5199\u4e86\uff01\uff01\uff01\uff01\uff01\n\n\u600e\u4e48\u529e\u600e\u4e48\u529e\uff1f\uff1f\uff1f\n\n\u5176\u5b9e\u89e3\u51b3\u4e5f\u4e0d\u96be\u3002\n\n\u53ea\u8981\u628a\u77f3\u5934\u7684\u4f4d\u7f6e\u6570\u7ec4\u6539\u6210double\u7684\uff0c\u518d\u52a0\u4e00\u4e2aeps\uff0c\u76f4\u63a5\u5206\u6570\u4e8c\u5206\u5c31\u4ec0\u4e48\u95ee\u9898\u90fd\u6ca1\u6709\u4e86\uff01\u5475\u54c8\u54c8\u54c8\u54c8\u54c8\uff08\u9634\u9669\u7684\u7b11\u58f0\uff09\u2026\u2026\n\n\u5206\u6570\u4e8c\u5206\u7684\u4f18\u70b9\u662f\u6bd4\u8f83\u597d\u5199\uff08\u867d\u7136\u6709\u65f6\u5019\u6574\u6570\u4e8c\u5206\u66f4\u77ed\uff09\u800c\u4e14\u4e0d\u6613\u5199\u9519\uff08\u8fd9\u662f\u771f\u7684\uff09\u3002\n\n\u4e0d\u8fc7\u4e5f\u6709\u4e00\u4e2a\u52a3\u52bf\uff0c\u5b83\u8dd1\u8d77\u6765\u76f8\u5bf9\u6bd4\u8f83\u6162\uff0c\u6240\u4ee5\u5728\u4e00\u4e9b\u6570\u636e\u8303\u56f4\u6bd4\u8f83\u5927\u7684\u9898\u76ee\u4e2d\u662f\u7528\u4e0d\u4e86\u7684\u3002\u4e0d\u8fc7\u5bf9\u4e8e\u8fd9\u9053\u826f\u5fc3\u88f8\u9898\uff0c\u5206\u6570\u4e8c\u5206\u7684\u65f6\u95f4\u662f\u53ef\u4ee5\u627f\u53d7\u7684\u3002\u6240\u4ee5\uff0c\u5c31\u8fd9\u4e48\u6109\u5feb\u7684\u51b3\u5b9a\u4e86\uff0c\u5206\u6570\u4e8c\u5206\uff01\n\n\u6700\u540e\u6709\u4e00\u4e2a\u7ec6\u8282\u9700\u8981\u6ce8\u610f\uff08\u672c\u53e5\u5df2\u7ecf\u6536\u5165\u300awx\u7ecf\u5178\u8bed\u5f55\u300b\uff09\uff1a\u6700\u540e\u8f93\u51fa\u65f6\u9700\u8981\u56db\u820d\u4e94\u5165\uff0c\u800c\u4e0d\u80fd\u76f4\u63a5\u622a\u5c3e\u8f93\u51fa\u3002\u5177\u4f53\u539f\u56e0\uff0c\u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u601d\u8003\u3002\n\n\u8bf4\u4e86\u534a\u5929\uff0c\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nint n,m,l;\ndouble a[50002],eps=1e-3;\nbool check(double p)\n{\n    double q=0;\n    int num=0;\n    for(int i=1;i<=n;i++)\n    {\n        if(a[i]-q<p)num++;\n        else q=a[i];\n    }\n    return num<=m;\n}\nint main()\n{\n    scanf(\"%d%d%d\",&l,&n,&m);\n    for(int i=1;i<=n;i++)scanf(\"%lf\",&a[i]);\n    a[++n]=l;\n    double le=1,re=l;\n    while(re-le>eps)\n    {\n        double mid=(re+le)/2;\n        if(check(mid))le=mid;\n        else re=mid;\n    }\n    printf(\"%d\",(int)(le+0.5));\n    return 0;\n}\n```",
        "postTime": 1505640217,
        "uid": 30261,
        "name": "Mr_QwQ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2678 \u3010\u8df3\u77f3\u5934\u3011"
    },
    {
        "content": "\u4e00\u4e2a\u65b0\u5b66\u4e8c\u5206\u7b54\u6848\u7684\u4eba\u5bf9\u4e8e\u8fd9\u9898\u7684\u7406\u89e3\uff08\u542c\u8bf4\u8fd9\u662f\u7ecf\u5178\u9898\uff0c\u4e8e\u662f\u5c31\u505a\u4e86\uff09\u3002\u4e00\u5f00\u59cb\u770b\u5230\u8fd9\u9898\u5c31\u8499\u4e86\uff0c\u4e0d\u77e5\u9053\u8be5\u600e\u4e48\u505a\uff0c\u611f\u89c9\u6709\u4e00\u70b9\u641c\u7d22\u7684\u97f5\u5473\u3002\u3002\u3002\u4f46\u662f\u540e\u9762\u53d1\u73b0\u662f\u8fd9\u6837\u505a\u7684\uff1a\u6211\u4eec\u8981\u6c42\u7684\u662f\u6700\u5c0f\u8df3\u8dc3\u8ddd\u79bb\u7684\u6700\u5927\u503c\uff0c\u6700\u5c0f\u8df3\u8dc3\u8ddd\u79bb\u7684\u6700\u5927\u503c\u518d\u5927\u4e5f\u4e0d\u80fd\u5927\u8fc7\u603b\u957f\u5ea6\u662f\u5427\uff0c\u90a3\u4e48\u6211\u4eec\u4fbf\u53ef\u4ee5\u679a\u4e3e\u8ddd\u79bb\u4e86\u554a\uff0c\u4f46\u662f\u6b64\u9898\u53c8\u662f\u6c42\u6700\u5c0f\u8ddd\u79bb\u4e2d\u7684\u6700\u5927\u503c\u554a\uff0c\u90a3\u53c8\u53ef\u4ee5\u8d2a\u5fc3\u5730\u5c06\u79fb\u5f00\u77f3\u5934\u4e4b\u540e\u6bcf\u4e00\u4e2a\u8ddd\u79bb\u90fd\u8bbe\u4e3a\u521a\u597d\u5927\u4e8e\u7b49\u4e8e\u679a\u4e3e\u7684\u8ddd\u79bb\u554a\uff1b\u5982\u679c\u8fd9\u4e2a\u8ddd\u79bb\u662f\u53ef\u4ee5\u7684\uff0c\u90a3\u4e48\u6700\u5927\u7684\u7b54\u6848\u80af\u5b9a\u5728\u5b83\u4e4b\u4e0a\u554a\uff0c\u6bd4\u5b83\u5c0f\u7684\u5c31\u4e0d\u53ef\u80fd\u6210\u4e3a\u6700\u5927\u7684\u554a\uff08\u56e0\u4e3a\u5b83\u90fd\u53ef\u4ee5\u554a\uff09\uff0c\u90a3\u4e0d\u662f\u5c31\u53ef\u4ee5\u4e8c\u5206\u4e86\u5417\uff1f\uff08\u6709\u4e00\u70b9\u7ed5\u554a\uff09\n\n\u6211\u7684\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<cstdlib>\nusing namespace std;\nconst int maxn=50000+10;\nint l,n,m,a[maxn];\nbool find(int now)\n{\n    int count=0,s=0;\n    for(int i=1;i<=n+1;i++)//\u8fd9\u91cc\u6709\u4e00\u4e2a\u60c5\u51b5\u9700\u8981\u7279\u6b8a\u5730\u8bf4\u660e\u4e00\u4e0b\uff0c\u5f53\u679a\u4e3e\u5230\u6700\u540e\u7ec8\u70b9\u7684\u77f3\u5934\u65f6\uff0ccount++\u5e76\u4e0d\u662f\u5c06\u6700\u540e\u7684\u77f3\u5934\u79fb\u6389\uff08\u56e0\u4e3a\u4e0d\u53ef\u4ee5\u79fb\uff09\uff0c\u800c\u662f\u5c06\u524d\u9762\u7684\u77f3\u5934\u79fb\u6389\u4e00\u5757\u554a\uff1b\n        if(a[i]-s<now)count++;\n        else s=a[i];\n    if(count>m)return false;//\u5982\u679c\u76ee\u524d\u6211\u901a\u8fc7\u79fb\u52a8\u77f3\u5934\u65f6\u5f97\u8fbe\u5230\u4e86\u679a\u4e3e\u7684\u957f\u5ea6\uff0c\u90a3\u4e48\u6570\u91cf\u53c8<=\u7684\u8bdd\uff0c\u5c31\u662f\u53ef\u884c\u7684\u65b9\u6848\n    return true;\n}\nint main()\n{\n    scanf(\"%d%d%d\",&l,&n,&m);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&a[i]);\n    a[n+1]=l;//\u5c06\u6700\u540e\u4e00\u4e2a\u77f3\u5934\u4e5f\u8ba1\u5165\u6570\u7ec4\uff1b\n    int left=0,right=l;\n    while(left+1<=right) //\u5982\u679c\u5de6\u53f3\u7684\u503c\u90fd\u662f\u76f8\u90bb\u7684\u4e86\uff0c\u90a3\u6211\u5e72\u8106\u5c31\u505c\u4e86\uff0c\u53cd\u6b63\u662f\u4e2a\u95ed\u533a\u95f4\uff1b\n    {\n        int mid=((left+right+1))/2;\n        if(find(mid))left=mid;//\u5411\u5de6\u5f62\u6210\u95ed\u533a\u95f4\uff1b\n        else right=mid-1;//\u51cf\u4e00\u662f\u56e0\u4e3a\u6211\u8981\u5f62\u6210\u4e00\u4e2a\u95ed\u533a\u95f4\uff0c\u8ba9\u7b54\u6848\u4e00\u5b9a\u5728\u8fd9\u4e2a\u95ed\u533a\u95f4\u91cc\u9762\n    }\n    printf(\"%d\",right);//\u95ed\u533a\u95f4\u4e2d\u5f53\u7136\u662f\u53f3\u8fb9\u7684\u5927\u4e86~\\(\u2267\u25bd\u2266)/~\u5566\u5566\u5566\n    return 0;\n}\n```",
        "postTime": 1499406059,
        "uid": 20059,
        "name": "ylsoi",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2678 \u3010\u8df3\u77f3\u5934\u3011"
    },
    {
        "content": " \n \n \n \n \n  \n  \n  \n  \n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int maxn=50010;\n//n,m,L\u7684\u610f\u4e49\u548c\u9898\u76ee\u63cf\u8ff0\u4e2d\u7684\u4e00\u6837,a[]\u8868\u793a\u6bcf\u4e2a\u77f3\u5934\u5230\u8d77\u70b9\u7684\u8ddd\u79bb\uff0c\u65b9\u4fbf\u8d77\u89c1\uff0c\u5c06\u7ec8\u70b9\u8865\u5145\u4e3a\u6700\u540e\u4e00\u5757\u77f3\u5934\nint n,m,L;\nint a[maxn];\n//\u4e8c\u5206\u4e86\u6700\u77ed\u8df3\u8dc3\u8ddd\u79bb mid\u4e4b\u540e\uff0c\u5f00\u59cb\u68c0\u67e5\u8fd9\u4e2a\u7b54\u6848mid\u80fd\u4e0d\u80fd\u6ee1\u8db3\u81f3\u591a\u62bd\u8d70m\u5757\u77f3\u5934\nbool check(int mid){\n //last\u8868\u793a\u4e0a\u4e00\u5757\u6ca1\u6709\u88ab\u62bd\u8d70\u7684\u77f3\u5934\u79bb\u8d77\u70b9\u7684\u8ddd\u79bb\n int last=0,cnt=0;\n for(int i=1;i<=n;i++){\n  //\u5982\u679c\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u6bd4\u8df3\u8dc3\u8ddd\u79bb\u77ed\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u628a\u8fd9\u4e00\u5757\u77f3\u5934\u62ff\u8d70\uff0c\u4e0d\u7136\u7684\u8bdd\u5c31\u53ef\u4ee5\u4e0d\u7528\u7ba1\u3002\n  //\u5f53\u7136\u5982\u679ci==n\u4e5f\u5c31\u662f\u7ec8\u70b9\u7684\u65f6\u5019\u662f\u4e0d\u80fd\u62ff\u8d70\u7ec8\u70b9\u7684\uff0c\u4f46\u662f\u8fd9\u4e2a\u65f6\u5019\u62ff\u6389\u524d\u4e00\u4e2a\u77f3\u5934\u4e5f\u4e00\u5b9a\u80fd\u8fbe\u6210\u76ee\u7684\uff0c\u6240\u4ee5\u4e0d\u7ba1\u600e\u6837\u53ea\u9700\u8981\u62ff\u6389\u4e00\u4e2a\u77f3\u5934\u3002\n  //\u5982\u679c\u4e0d\u7528\u62ff\u6389\u7684\u8bdd\uff0c\u4e0a\u4e00\u5757\u6ca1\u6709\u62bd\u8d70\u7684\u77f3\u5934\u5c31\u662f\u5f53\u524d\u8fd9\u4e00\u5757\u4e86\u3002\n  if(a[i]-last<mid) cnt++;\n  else last=a[i];\n }\n //\u5982\u679c\u5fc5\u987b\u8981\u62ff\u6389\u7684\u77f3\u5934\u6570\u76ee<=m\u4e2a\uff0c\u8bf4\u660e\u4e8c\u5206\u51fa\u7684\u6700\u77ed\u8ddd\u79bb\u53ef\u4ee5\u63a5\u53d7\uff0c\u8fd4\u56detrue\n if(cnt<=m) return true;\n return false;\n}\nint main(){\n int ans;\n scanf(\"%d%d%d\",&L,&n,&m);\n n++;a[n]=L;\n for(int i=1;i<n;i++) scanf(\"%d\",&a[i]);\n int l=0,r=a[n],mid;\n while(r-l>1){\n  mid=(l+r)>>1;\n  //\u5982\u679c\u8fd9\u4e2a\u503c\u53ef\u4ee5\u63a5\u53d7\uff0c\u90a3\u4e48\u6bd4\u5b83\u5c0f\u7684\u503c\u90fd\u53ef\u4ee5\u63a5\u53d7\uff0c\u4e8c\u5206\u7684\u4e0b\u754c\u5c31\u53ef\u4ee5\u53d8\u6210\u8fd9\u4e2a\u65b0\u7684\u503c\n  //\u5982\u679c\u4e0d\u80fd\u63a5\u53d7\uff0c\u90a3\u4e48\u6bd4\u5b83\u5927\u7684\u503c\u4e5f\u4e0d\u80fd\u63a5\u53d7\uff0c\u4e8c\u5206\u7684\u4e0a\u754c\u53d8\u6210\u8fd9\u4e2a\u65b0\u7684\u503c\n  if(check(mid)) l=mid;\n  else r=mid;\n }\n //\u5f53\u7136\u5982\u679c\u6700\u540e\u533a\u95f4\u8fd8\u5269\u4e0b\u4e24\u4e2a\u7684\u65f6\u5019\uff0c\u6709\u53ef\u80fd\u4e0a\u754c\u4e5f\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002[\u5176\u5b9e\u8fd9\u79cd\u60c5\u51b5\u53ea\u53d1\u751f\u5728a[n]\u4e3a\u6700\u5927\u8ddd\u79bb\u65f6]\n if(check(r)) ans=r;\n else ans=l;\n printf(\"%d\",ans);\n return 0;\n}\n```",
        "postTime": 1488361263,
        "uid": 17511,
        "name": "The_Key",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2678 \u3010\u8df3\u77f3\u5934\u3011"
    },
    {
        "content": "\u4eca\u5929\u8003\u8bd5\u8003\u8fd9\u9898\u7adf\u7136\u6ca1\u4ebaA\u6389\u2026\u2026\n\n\u8003\u573a\u4e0a\u5df2\u7ecf\u60f3\u5230\u4e86\u4e8c\u5206\uff0c\u5f88\u53ef\u60dc\u9a8c\u8bc1\u5199\u9519\u4e86\uff0c\u5bfc\u81f4\u5d29\u5230\u53ea\u526910\u5206\u2026\u2026\n\n```cpp\n#include<cstdio>\nusing namespace std;\nint l,n,m,d[50009],lef=233333333,rig,mid,sum,last;\nint check(int s)\n{\n    sum=0,last=0;\n    for(int i=1;i<n;i++)//\u8ba1\u7b97\u8981\u53bb\u6389\u591a\u5c11\u4e2a\u77f3\u5b50\n    {\n        if(d[i]-last<s){sum++;continue;}\n        last=d[i];\n    }\n    if(sum>m){return 0;}\n    else{return 1;}\n}\nint main()\n{\n    scanf(\"%d%d%d\",&l,&n,&m);\n    n++;\n    for(int i=1;i<=n-1;i++)\n    {\n        scanf(\"%d\",&d[i]);\n        if(d[i]-d[i-1]<lef){lef=d[i]-d[i-1];}//\u5de6\u533a\u95f4\u4e3a\u6700\u77ed\u957f\u5ea6\n    }\n    d[n]=l,rig=l;//\u53f3\u533a\u95f4\u4e3a\u6700\u957f\u957f\u5ea6l\uff0c\u5e76\u4e14\u628al\u52a0\u5165\u77f3\u5b50\n    while(lef+1<rig)//\u4e8c\u5206\n    {\n        mid=(lef+rig)/2;\n        if(check(mid)){lef=mid;}\n        else{rig=mid;}\n    }\n    if(check(rig)){printf(\"%d\",rig);return 0;}\u989d\u5916\u5224\u65ad\u4e00\u4e0b\n    printf(\"%d\",lef);\n    return 0;\n}\n```",
        "postTime": 1478447378,
        "uid": 14378,
        "name": "doby",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2678 \u3010\u8df3\u77f3\u5934\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e3b\u8981\u5e94\u7528###\u4e8c\u5206\u67e5\u627e###\u601d\u60f3\uff0c\u4e8c\u5206\u6700\u5c0f\u7684\u8ddd\u79bb\uff0c\u5224\u65ad\u65b9\u6848\u662f\u5426\u53ef\u884c\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint ans,n,m,l,a[50002],d[50002],le,ri,x,mid;\ninline void read(int &x){//\u8bfb\u5165\u4f18\u5316\n    char c;int fl;\n    for(c=getchar();c!='-'&&(c<'0'||c>'9');c=getchar());\n    if(c=='-')x=0,fl=1;\n    else x=c^48,fl=0;\n    for(c=getchar();c<='9'&&c>='0';c=getchar())x=x*10+(c^48);\n    if(fl)x=-x;\n}\nint main(){\n    freopen(\"p2678.in\",\"r\",stdin);//\u81ea\u884c\u5220\u53bb\u8fd9\u4e24\u884c\n    freopen(\"p2678.out\",\"w\",stdout);\n    read(l);read(n);read(m);\n    for(int i=1;i<=n;i++)read(d[i]);\n    le=1;ri=l;n++;d[n]=l;//left\u4e0eright\u4e3a\u5de6\u53f3\u6307\u9488\n    while(le<=ri){//\u5faa\u73af\u6761\u4ef6\n        mid=(le+ri)/2;x=0;//x\u4e3a\u5f53\u524d\u72b6\u6001\u4e0b\u62ff\u6389\u7684\u77f3\u5934\u6570\n        for(int i=1;i<=n;i++)a[i]=d[i]-d[i-1];//a[i]\u8868\u793a\u7b2ci\u5757\u77f3\u5934\u4e0e\u524d\u9762\u76f8\u90bb\u4e00\u5757\u7684\u8ddd\u79bb\n        for(int i=1;i<=n;i++)//\u8fd9\u5c31\u662f\u5224\u65ad\u8fa3\uff0c\u5982\u679c\u7b2ci-1\u5230\u7b2ci\u5757\u77f3\u5934\u7684\u8ddd\u79bb\u4e0d\u591f\u957f\uff0c\u62ff\u6389\u7b2ci\u5757\u77f3\u5934\n          if(a[i]<mid){\n              a[i+1]+=a[i];x++;}//\u7531\u4e8e\u679a\u4e3e\u662f\u4ece\u524d\u5f80\u540e\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e0d\u7ba1\u524d\u9762\uff0c\u76f4\u63a5\u628a\u7b2ci+1\u5757\u77f3\u5934\u5230\u524d\u4e00\u5757\u7684\u8ddd\u79bb\u589e\u52a0a[i]\uff08ps\uff1a\u5176\u5b9e\u5e94\u8be5\u6807\u8bb0\u4e00\u4e0b\u7b2ci\u5757\u77f3\u5934\u5230\u524d\u4e00\u5757\u7684\u8ddd\u79bb\u4e3a-1\uff09\n        if(x<=m){le=mid+1;ans=mid;}//left\u524d\u4e00\u4e2a\u80af\u5b9a\u6ee1\u8db3\n        else ri=mid-1;//right\u7684\u540e\u4e00\u6b21\u80af\u5b9a\u4e0d\u6ee1\u8db3\n    }\n    printf(\"%d\",ans);//\u8f93\u51fa\n    return 0;\n}\n```",
        "postTime": 1493017598,
        "uid": 22073,
        "name": "\u738b\u529b\u4fe1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2678 \u3010\u8df3\u77f3\u5934\u3011"
    },
    {
        "content": "//\u4e00\u9053\u7b80\u5355\u7684\u4e8c\u5206\uff0c\u53ea\u53ef\u60dc\u8003\u573a\u4e0a\u7684\u6211\u8fde\u8d2a\u5fc3\u90fd\u6ca1\u5199\u3002\u3002\u3002\n\n//\u8bdd\u8bf4\u770b\u5230\u8fd9\u79cd\u6700\u77ed\u8df3\u8dc3\u8ddd\u79bb\u5c3d\u53ef\u80fd\u957f\u8fd9\u79cd\u5c31\u662f\u4e8c\u5206\n\n//\u5f53\u7136\u8fd9\u4e00\u9898\u7684\u6570\u636e\u4e5f\u66b4\u9732\u4e86\uff0c\u53ea\u6709O\uff08n\uff09\u53ca\u66f4\u4f18\u7684\u7b97\u6cd5\u53ef\u4ee5\u8fc7\uff0c\u679c\u65ad\u4e8c\u5206\uff0c\u8bdd\u8bf42^30=1073741824,\u5dee\u4e0d\u591a30\u6b21\u5c31\u53ef\u4ee5\u5206\u51fa\u6765\uff0c\u518d\u52a0\u4e0aO\uff08n\uff09\u7684\u5224\u65ad\uff0c\u8f7b\u677e\u8fc7>\\_<\n\n```cpp\n//\u60f3\u4e0d\u51fa\u7684\u771f\u5fc3\u63a8\u8350\u8d2a\u5fc3\u5bfc\u8bba\uff0c\u6709\u5206\u5c31\u662f\u738b\u9053 \n#include<cstdio>\n#include<iostream>\n#include<cstdlib>\n#include<cstring>\n#define maxn 50000+10\nusing namespace std;\n////////////////////////// \nint len,m,n;//\u539f\u672c\u7684l,m,n;l\u548cleft\u91cd\u4e86\u3002\u3002\u3002 \nint dis[maxn];//dis[i]\u8bb0\u5f55\u7b2ci\u53f7\u77f3\u5934\u8ddd\u79bb\u539f\u70b9\u7684\u8ddd\u79bb\uff0c\u624b\u52a8\u52a0\u4e0adis[n+1]=len... \nint mid;\n//////////////////////////\ninline void in()\n{\n    scanf(\"%d %d %d\",&len,&n,&m);\n    for(int i=1;i<=n;i++)\n      scanf(\"%d\",&dis[i]);\n    dis[n+1]=len;\n}\nint check(int l,int r)//check()\u624d\u662f\u4e8c\u5206\u7684\u7cbe\u9ad3\u554a \n{\n    mid=(l+r)/2;\n    int num=0,last=0;\n    for(int i=1;i<=n+1;i++)\n      {\n          if(dis[i]-last<mid)\n          num++;\n        else\n          last=dis[i];\n      }\n    if(num>m)\n      return 0;\n    else\n      return 1;\n}\n//////////////////////////\nint main()\n{\n    freopen(\"stone.txt\",\"r\",stdin);\n    in();//\u8bfb\u5165 \n    //\u4ee5\u4e0b\u662f\u4e8c\u5206\u8fc7\u7a0b \n    int l=1,r=len,ans;\n    while(l<=r)\n      {\n          mid=(l+r)/2;\n          if(check(l,r)==1)//\u5982\u679c\u6ee1\u8db3\u6700\u5c0f\u503c(\u9664\u5f00m\u4e2a\u8df3\u8fc7\u7684)\u90fd\u5927\u4e8emid \n            {\n                ans=mid;//\u8bb0\u5f55\u7b54\u6848 \n              l=mid+1;//\u7ee7\u7eed\u7f29\u5c0f\u7b54\u6848\u8303\u56f4 \n          }\n          else\n            r=mid-1;//\u5426\u5219\u4e8c\u5206\u65b0\u7b54\u6848 \n      }\n    cout<<ans;//\u8f93\u51fa \n}>\n```",
        "postTime": 1477493375,
        "uid": 14941,
        "name": "\u65f6\u5149_Memory",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2678 \u3010\u8df3\u77f3\u5934\u3011"
    },
    {
        "content": "```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#define nmax 100100\nusing namespace std;\nunsigned long long l,r,mid,n,m,L[nmax],LL[nmax],LLL[nmax],tot;//\u5b57\u5934\uff1b\nbool can(int x){\n    tot=0;//tot\u8868\u79fb\u8d70\u77f3\u5934\u7684\u4e2a\u6570\uff1b\n    for(int i=1;i<=n+1;i++)   LLL[i]=LL[i];//\u628aLL\u6570\u7ec4\u590d\u5236\u5230LLL\u6570\u7ec4\u91cc\uff1b\n    for(int i=1;i<=n+1;i++){\n        if(LLL[i]<x){//\u4e00\u6bb5\u8ddd\u79bb\u5c0f\u4e8e\u6700\u5c0f\u503c\u4e86\uff1b\n            tot++;LLL[i+1]+=LLL[i];//\u79fb\u8d70\u4e00\u6bb5\u77f3\u5934\uff1b\n        }\n    }\n    return tot<=m;//\u770b\u4e00\u5171\u79fb\u8d70\u7684\u77f3\u5934\u548cm\u8c01\u5927\uff1b\n}\nint main(){\n    cin>>r>>n>>m;\n    for(int i=1;i<=n;i++){\n        cin>>L[i];\n        LL[i]=L[i]-L[i-1];//LL\u8868\u4e24\u5757\u77f3\u5934\u95f4\u7684\u8ddd\u79bb\uff0c\u662f\u4e0d\u80fd\u53d8\u7684\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48can\u51fd\u6570\u91cc\u8981\u518d\u7528\u4e00\u4e2aLLL\u6570\u7ec4\uff1b\n```\n}//\u4e0d\u7528\u6392\u5e8f\u771f\u597d\uff1b\n```cpp\n    LL[n+1]=r-L[n];\u6709n\u5757\u77f3\u5934\uff0c\u5c31\u6709n+1\u6bb5\u8ddd\u79bb\uff1b\n    while(l+1<r){//\u5f00\u59cb\u65e0\u8111\u4e8c\u5206\uff1b\n        mid=(l+r)/2;\n        if(can(mid)){//\u5982\u679c\u8fd9\u662f\u4e00\u4e2a\u6700\u5c0f\u503c\uff1b\n            l=mid;//\u5c31\u53bb\u6bd4\u4ed6\u5927\u7684\u6570\u91cc\u518d\u627e\uff1b\n        }\n        else{\n            r=mid;//\u53cd\u4e4b\uff1b\n        }\n    }\n    if(can(r)) cout<<r;\n    else cout<<l;//\u4e00\u4e2a\u83ab\u540d\u5176\u5999\u7684\u5224\u65ad\uff1b\u56e0\u4e3a\u6211\u5fd8\u4e86\u8981\u8f93\u51fal\u8fd8\u662fr\u4e86\uff1b\u597d\u50cf\u4e0d\u540c\u7684\u6570\u636e\u662f\u4e0d\u4e00\u6837\u7684\uff1b\uff08\u5c34\u5c2c\uff09\n    return 0;\n}//\u4ee5\u4e0a\uff1b\n```",
        "postTime": 1476538967,
        "uid": 19551,
        "name": "NishikinoMaki",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2678 \u3010\u8df3\u77f3\u5934\u3011"
    },
    {
        "content": "\u66b4\u529b+\u4e8c\u5206\u3002\n\n\u7ed9\u5bf9\u4e8c\u5206\u67e5\u627e\u8fb9\u754c\uff0c\u8303\u56f4\u61f5\u61f5\u61c2\u61c2\u7684OIer\u732e\u4e0a\uff08\u5176\u5b9e\u6211\u4e5f\u662f\uff09\u3002\n\n\u5f53l-r>=5\u65f6\uff0c\u4e8c\u5206\u8fdb\u884c\uff0c\u5f53l-r<5\u65f6\uff0c\u5f00\u59cb\u8fdb\u884c\u66b4\u529b\u679a\u4e3e\uff0c\u89c1\u4ee3\u7801\u3002\n```cpp\n#include<cstdio>\nusing namespace std;\nint dis[50100];\nint lon;\nint n,m;\nbool check (int x)//\u68c0\u9a8c\u5f53\u524d\u89e3\u662f\u5426\u53ef\u884c\n{\n\tint ans=0;\n\tint i=1;\n\tint po=0;\n\twhile(i<=n+1)\n\t{\n\t\tif(dis[i]-dis[po]<x)\n\t\t{\n\t\t\tans++;\t\n\t\t}\t\n\t\telse \n\t\t{\n\t\t\tpo=i;\n\t\t}\n\t\ti++;\n\t}\n\tif(ans>m)\n\t{\n\t\treturn false;\n\t}\n\telse return true;\n}\nint main()\n{\n\tscanf(\"%d%d%d\",&lon,&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&dis[i]);\n\t}\n\tdis[n+1]=lon;\n\tint l=1,r=lon;\n\tint mid=(l+r)/2;\n\twhile(r-l>=5)//\u7701\u53bb\u4e86\u8fb9\u754c\u7684\u9ebb\u70e6\n\t{\n\t\tmid=(l+r)/2;//\u6b64\u5904\u53ef\u4ee5\u6539\u4e3amid=l+(r-l)>>1; //\u52a0\u5feb\u8fd0\u7b97\u901f\u5ea6\uff0c\u9632\u6b62\u6570\u636e\u6ea2\u51faint\u8303\u56f4\n\t\tif(check(mid))\n\t\t{\n\t\t\tl=mid;//mid+1\u4e5f\u53ef\u4ee5\n\t\t}\n\t\telse\n\t\t{\n\t\t\tr=mid;//mid-1\u4e5f\u53ef\u4ee5\n\t\t}\n\t}\n\tfor(int i=r;i>=l;i--)//i\u4ecer\u5f00\u59cb\u9012\u51cf\u5230l,\u51fa\u73b0\u7684\u7b2c\u4e00\u4e2a\u53ef\u884c\u89e3\u5373\u4e3a\u6700\u4f18\u89e3\u3002\n\t{\n\t\tif(check(i))\n\t\t{\n\t\t\t\n\t\t\tmid=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tprintf(\"%d\",mid);\n\treturn 0;\n}",
        "postTime": 1564061577,
        "uid": 185364,
        "name": "a2476100824",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2678 \u3010\u8df3\u77f3\u5934\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5f88\u663e\u7136\u662f\u7528\u4e8c\u5206\u6cd5\uff0c\u5927\u90e8\u5206\u4eba\u4e5f\u662f\u8fd9\u4e48\u505a\u7684\uff0c\u4f46\u662f\u6709\u4e2a\u95ee\u9898\u5927\u5bb6\u90fd\u6ca1\u6ce8\u610f\u5230\uff0c\u5c31\u662f\u4e8c\u5206\u7684\u521d\u59cb\u8303\u56f4\u3002\n\n## \u4e8c\u5206\u8303\u56f4\u7684\u4e0a\u9650\n\u7531\u4e8e\u79fb\u8d70\u4e86M\u5757\u5ca9\u77f3\uff0c\u6240\u4ee5\u8fd8\u5269\u4e0bN-M\u5757\u5ca9\u77f3\uff0c\u5c06\u6cb3\u9053\u5206\u5272\u6210\u4e86N-M+1\u4e2a\u90e8\u5206\uff0c\u8bbe\u6700\u77ed\u8df3\u8dc3\u8ddd\u79bb\u4e3aD\uff0c\u5219\n\nD\u00d7\uff08N-M+1\uff09<=L\n\n\u5373 D <= L / (N-M+1)\n\n\u6240\u4ee5\u6700\u77ed\u8df3\u8dc3\u8ddd\u79bb\u7684\u6700\u5927\u503c= L / (N-M+1)\n## \u4e8c\u5206\u8303\u56f4\u7684\u4e0b\u9650\n\n\u4ee4D1\u4e3a\u521d\u59cb\u8ddd\u79bb\u7684\u7b2cM+1\u5c0f\u503c\uff0c\u5373\u521d\u59cb\u65f6\u4e00\u5171\u6709M\u4e2a\u8ddd\u79bb\u5c0f\u4e8eD1\uff0c\u7531\u4e8e\u4e24\u4e2a\u76f8\u90bb\u7684\u5ca9\u77f3\u4ea7\u751f\u4e00\u4e2a\u8ddd\u79bb\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5c0f\u4e8eD1\u7684\u8ddd\u79bb\uff0c\u4efb\u9009\u5176\u4e24\u4fa7\u7684\u5ca9\u77f3\u4e4b\u4e00\u53d6\u8d70\uff0c\u8fd9\u6837\u6bcf\u53d6\u8d70\u4e00\u4e2a\u5ca9\u77f3\uff0c\u5c0f\u4e8eD1\u7684\u8ddd\u79bb\u5c31\u4f1a\u5c11\u4e00\u4e2a\uff0c\u53d6\u8d70M\u4e2a\u5ca9\u77f3\u540e\uff0c\u5ca9\u77f3\u4e4b\u95f4\u7684\u6700\u5c0f\u8ddd\u79bb\u5fc5\u7136 >=D1\uff0c\u53ef\u80fd\u8fd9\u53e5\u8bdd\u4e0d\u597d\u7406\u89e3\uff0c\u6211\u4ee5\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\u89e3\u91ca\u4e00\u4e0b\u3002\n\n0\uff087\uff091\uff081\uff092\uff083\uff093\uff084\uff094\uff085\uff095\uff086\uff096\uff082\uff097\uff088\uff098\n\n0\u30018\u4ee3\u8868\u4e86\u4e24\u7aef\u70b9\uff0c1\u30012\u3001\u00b7\u00b7\u00b77\u4ee3\u8868\u4e867\u5757\u5ca9\u77f3\uff0c\u62ec\u53f7\u91cc\u7684\u6570\u5b57\u4ee3\u8868\u4e86\u5ca9\u77f3\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\u5047\u8bbeM=2\uff0c\u5219\u521d\u59cb\u8ddd\u79bb\u7684\u7b2cM+1\u5c0f\u503c\u4e3a3\uff082\u30013\u5ca9\u77f3\u4e4b\u95f4\u7684\u8ddd\u79bb\uff09\uff0c\u6bd43\u8ddd\u79bb\u5c0f\u7684\u8ddd\u79bb\u4e3a1\uff081\u30012\u5ca9\u77f3\u95f4\uff09\u548c2\uff086\u30017\u5ca9\u77f3\u95f4\uff09\u3002\u82e5\u53d6\u8d70\u76842\u4e2a\u77f3\u5934\u662f1\u30012\u5ca9\u77f3\u4e2d\u7684\u4e00\u4e2a\uff0c6\u30017\u5ca9\u77f3\u4e2d\u7684\u4e00\u4e2a\uff0c\u5219\u8ddd\u79bb1\u548c2\u90fd\u4e0d\u5b58\u5728\u4e86\uff0c\u6bcf\u53d6\u8d70\u4e00\u4e2a\u77f3\u5934\uff0c\u5c0f\u4e8eD1\u7684\u8ddd\u79bb\u5c31\u5c11\u4e00\u4e2a\uff0c\u6240\u4ee5\u6700\u77ed\u8df3\u8dc3\u8ddd\u79bb\u7684\u6700\u5c0f\u503c\u5fc5\u7136 >=D1\u3002 \u5373\u4e8c\u5206\u521d\u59cb\u8303\u56f4\u7684\u4e0b\u9650\u4e3a\u8ddd\u79bb\u4e2d\u7b2cM+1\u5c0f\u503c\u3002\n\n\u4e4b\u540e\u7684\u505a\u6cd5\u5c31\u662f\u4e8c\u5206\u6cd5\u4e86\uff0c\u9644\u4e0aAC\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#include<math.h>\nusing namespace std;\nvoid quickSort(int* a, int l, int r)\n{\n\tif (l < r)\n\t{   int i, j, x;\n\t\ti = l;\n\t\tj = r;\n\t\tx = a[i];\n\t\twhile (i < j)\n\t\t{\n\t\t\twhile (i < j && a[j] > x)\n\t\t\t\tj--;\n\t\t\tif (i < j)\n\t\t\t\ta[i++] = a[j];\n\t\t\twhile (i < j && a[i] < x)\n\t\t\t\ti++;\n\t\t\tif (i < j)\n\t\t\t\ta[j--] = a[i];\n\t\t}\n\t\ta[i] = x;\n\t\tquickSort(a, l, i - 1);\n\t\tquickSort(a, i + 1, r);\n\t}\n}\nint main()\n{\n\tint l, m, n, i, a[50000], c[50001], d, e, mid, f = 0, g = 0;\n\tcin >> l >> n >> m;\n\td = l / (n - m + 1);\n\tfor (i = 0;i <= n - 1;i++)\n\t{\n\t\tcin >> a[i];\n\t}\n\ta[n] = l;\n\tc[0] = a[0];\n\tc[n] = l - a[n - 1];\n\tfor (i = 1;i <= n - 1;i++)\n\t{\n\t\tc[i] = a[i] - a[i - 1];\n\t}\n\n\tquickSort(c, 0, n);\n\te = c[m];\n\twhile (e + 1 < d)\n\t{\n\t\tg = 0;\n\t\tf = 0;\n\t\tmid = (e + d) / 2;\n\t\ti = 0;\n\t\twhile (1)\n\t\t{\n\t\t\twhile (i <= n && a[i] - g < mid)\n\t\t\t{\n\t\t\t\tf++;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tif (i >= n) break;\n\t\t\tif (i < n)\n\t\t\t{\n\t\t\t\tg = a[i];\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t}\n\t\tif (f <= m)\n\t\t{\n\t\t\te = mid;\n\t\t}\n\t\telse d = mid;\n\t}\n\tcout << e;\n\treturn 0;\n}\n```\n\n\n------------\n~~\n\n------------\n### \u624b\u6253\u4e0d\u6613\uff0c\u6c42\u8fc7~~~~",
        "postTime": 1558348309,
        "uid": 208975,
        "name": "LT123456",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2678 \u3010\u8df3\u77f3\u5934\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u662f\u9898\u76ee\uff1a[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P2678)\n\n\u8fd9\u9053\u9898\uff0c\u6bd4\u8f83\u7b80\u5355\uff0c\u53c8\u5c5e\u4e8e\u6c42\u6700\u5c0f\u503c\u6700\u5927\u7684\u9898\u76ee\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u5c1d\u8bd5\u7528\u4e8c\u5206\u6765\u89e3\u51b3\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u6700\u540e\u7684\u7b54\u6848\uff0c\u4e4b\u540e\u8fd0\u7528\u5230\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u5f53\u4e24\u4e2a\u77f3\u5934\u4e4b\u95f4\u7684\u8ddd\u79bb\u5c0f\u4e8em\u7684\u65f6\u5019\uff0c\u624d\u642c\u8d70\u77f3\u5934\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u526a\u679d\u7684\u897f\uff0c\u5f53\u5f53\u524d\u7684\u77f3\u5934\u5230\u6700\u540e\u4e00\u4e2a\u70b9\u7684\u8ddd\u79bb\u5df2\u7ecf\u5927\u4e8e\u4e86\u6240\u4e8c\u5206\u7684\u503c\u5c31\u53ef\u4ee5\u4e86\u3002\u6216\u8005\u8bf4\uff0c\u4ece\u521a\u5f00\u5934\u5230\u6700\u540e\u7684\u8ddd\u79bb\u90fd\u4e0d\u591f\u7684\u8bdd\uff0c\u5176\u5b9e\u4e5f\u53ef\u4ee5\u7ed3\u675f\u4e86\u3002\n\n\u4e8c\u8bdd\u4e0d\u8bf4\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\nint l,n,m,d[50010];\n\nbool check(int x)\n{\n    int num=0,place=0;\n    for(int i=1;i<=n;++i){\n        if((d[n+1]-d[place])<x)\n            return false;\n        if(num+n-place+1<=m)\n\t\t\treturn true;\n        if((d[i]-d[place])<x)\n            num++;\n        else\n            place=i;\n    }\n    if(num>m)\n        return false;\n    return true;\n}\n\nint erfen(int l,int r)\n{\n    while(l<=r){\n        int mid=(l+r)/2;\n        if(check(mid))\n            l=mid+1;\n        else\n            r=mid-1;\n    }\n    return l-1;\n}\n\nint main()\n{\n\tfreopen(\"stone.in\",\"r\",stdin);\n\tfreopen(\"stone.out\",\"w\",stdout);\n    cin>>l>>n>>m;\n    d[0]=0;\n\td[n+1]=l;\n    for(int i=1;i<=n;++i)\n        cin>>d[i];\n    cout<<erfen(0,l)<<endl;\n    return 0;\n}\n```\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8fd8\u662f\u8fd0\u7528\u5230\u4e86\u4e8c\u5206\u7684\u601d\u60f3\uff0c\u4f46\u662f\uff0c\u5728\u5224\u65ad\u662f\u5426\u7b26\u5408\u6761\u4ef6\u7684\u65f6\u5019\u4e0d\u662f\u8fd0\u7528\u8d2a\u5fc3\uff0c\u800c\u662f\u7528\u795e\u5947\u7684\u52a8\u6001\u89c4\u5212\u3002\n\u9996\u5148\uff0c\u5148\u6765\u4e00\u4e2a50\u5206\u7684\u7b80\u5355\u7684\u505a\u6cd5\uff0c\u6211\u4eec\u7528f\u6570\u7ec4\u6765\u8868\u793a\u5230\u7b2ci\u4e2a\u77f3\u5934\u6ee1\u8db3\u6bcf\u4e2a\u77f3\u5934\u4e4b\u95f4\u7684\u8ddd\u79bb\u5927\u4e8em\u6700\u5c11\u9700\u8981\u642c\u8d70\u591a\u5c11\u4e2a\u77f3\u5934\u3002\n\n\u5f53\u6211\u4eec\u5728\u505af[i]\u7684\u65f6\u5019\uff0c\u5148\u627e\u5230\u4e0e\u4ed6\u8ddd\u79bb\u81f3\u5c11m\u8ddd\u79bb\u7684\u77f3\u5934j\uff0c\u6240\u4ee5f[i]=f[j]+i-j-1,\u5728\u6c42\u51fa\u4e00\u4e2a\u6700\u5c0f\u503c\u5c31\u884c\u4e86\uff0c\u6700\u540e\u518d\u5224\u65adf[n+1]\u7684\u503c\u662f\u4e0d\u662f\u5c0f\u4e8e\u7b49\u4e8e\u8fd9\u4e2a\u503c\u5c31\u884c\u4e86\u3002\n\n\u9644\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\nint l,n,m,d[50010];\nint f[50010],pre[50010];\n\nvoid prepare(int x)\n{\n    memset(f,-1,sizeof(f));\n    f[0]=0;\n    for(int i=1;i<=n+1;++i){\n        if(d[i]>=x){\n            for(int j=0;j<=i-1;++j){\n                if(d[i]-d[j]<x)\n                    break;\n                if(f[j]!=-1&&(f[i]==-1||f[i]>f[j]+i-j-1))\n                    f[i]=f[j]+i-j-1;\n            }\n        }\n    }\n}\n\nbool check(int x)\n{\n    prepare(x);\n    if(f[n+1]<=m)\n    \treturn true;\n    return false;\n}\n\nint erfen(int l,int r)\n{\n    while(l<=r){\n        int mid=(l+r)/2;\n        if(check(mid))\n            l=mid+1;\n        else\n            r=mid-1;\n    }\n    return l-1;\n}\n\nint main()\n{\n    //freopen(\"stone.in\",\"r\",stdin);\n    //freopen(\"stone.out\",\"w\",stdout);\n    cin>>l>>n>>m;\n    d[0]=0;\n    d[n+1]=l;\n    for(int i=1;i<=n;++i)\n        cin>>d[i];\n    cout<<erfen(0,l)<<endl;\n    return 0;\n}\n```\n\n\u4f46\u662f\u8fd9\u6837\u5b50\u7684\u8bdd\u679a\u4e3e\u4e00\u4e2ai\uff0c\u518d\u679a\u4e3e\u4e00\u4e2aj\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662fO\uff08n^2\uff09\uff0c\u80af\u5b9a\u4f1a\u8d85\u65f6\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u8bb0\u5f55\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u7b2c\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u77f3\u5934\u5728p\u8fd9\u91cc\uff0c\u5f53\u6211\u4eec\u8f6c\u79fb\u5230\u6c42\u540e\u9762\u4e00\u5757\u77f3\u5b50\u7684\u65f6\u5019\uff0c\u53ea\u8981\u5c06\u8fd9\u4e00\u4e2a\u6307\u9488\u5f80\u540e\u79fb\u51e0\u4f4d\uff08\u5f53\u7136\u4e86\uff0c\u600e\u4e48\u4f1a\u5f80\u524d\u634f\uff1f\u8fd9\u662f\u4e00\u4e2a\u5355\u8c03\u9012\u589e\u7684\u6570\u5217\u554a\uff09\uff0c\u4e4b\u540e\uff0c\u6211\u4eec\u5728\u7ef4\u62a4\u4e00\u4e2a\u524d\u7f00\u6700\u5c0f\u503c\uff0c\u7ef4\u62a4\u7684\u662ff[x]-x\u7684\u6700\u5c0f\u503c\u3002\u8fd9\u6837\u5b50\uff0cf[i]=pre[p]+i-1\uff0c\u4e4b\u540e\u5c31\u548c\u4e0a\u976250\u5206\u7684\u4ee3\u7801\u4e00\u6837\u4e86\u3002\u3002\u3002\n\n\u6700\u540e\uff0c\u9644\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\nint l,n,m,d[50010];\nint f[50010],pre[50010];\n\nvoid prepare(int x)\n{\n    memset(f,-1,sizeof(f));\n    memset(pre,-1,sizeof(pre));\n    f[0]=0;\n    pre[0]=0;\n    int r=0;\n    //cout<<x<<endl;\n    for(int i=1;i<=n+1;++i){\n        pre[i]=pre[i-1];\n        if(d[i]>=x){\n            while(r<i-1&&d[i]-d[r+1]>=x)\n                r++;\n            f[i]=pre[r]+i-1;\n            pre[i]=min(pre[i],f[i]-i);\t\n        }\n        //cout<<i<<\" \"<<r<<\" \"<<f[i]<<\" \"<<pre[i]<<endl;\n    } \n    /*memset(pre,-100,sizeof(pre));\n    int now;\n    for(int i=1;i<=n+1;++i){\n        if(d[i]>=x){\n            now=i;\n            f[i]=i-1;\n            pre[i]=f[i]-i;\n            break;\n        }\n    }\n    cout<<x<<\" \"<<now<<endl;\n    for(int i=now+1;i<=n+1;++i){\n        for(int j=i-1;j>=now;--j){\n            pre[i]=i-1;\n            if(d[i]-d[j]>=m){\n                f[i]=pre[j]+i-1;\n                pre[i]=min(pre[i],f[i]-i);\n            }\n        }\n        cout<<i<<\" \"<<f[i]<<\" \"<<pre[i]<<endl;\n    }*/\n}\n\nbool check(int x)\n{\n    prepare(x);\n    if(f[n+1]>=0&&f[n+1]<=m)\n    \treturn true;\n    return false;\n}\n\nint erfen(int l,int r)\n{\n    while(l<=r){\n        int mid=(l+r)/2;\n        if(check(mid))\n            l=mid+1;\n        else\n            r=mid-1;\n    }\n    return l-1;\n}\n\nint main()\n{\n    //freopen(\"stone.in\",\"r\",stdin);\n    //freopen(\"stone.out\",\"w\",stdout);\n    cin>>l>>n>>m;\n    d[0]=0;\n    d[n+1]=l;\n    for(int i=1;i<=n;++i)\n        cin>>d[i];\n    cout<<erfen(0,l)<<endl;\n    return 0;\n}\n```",
        "postTime": 1540537801,
        "uid": 112221,
        "name": "Nirvana_Xero",
        "ccfLevel": 0,
        "title": "P2678 \u8df3\u77f3\u5934"
    },
    {
        "content": "```cpp\n//\u9996\u5148\u66b4\u529b\u601d\u8def\u662f\u5f88\u76f4\u63a5\u7684 \n//\u81ea\u7136TLE\u4e5f\u5f88\u5bb9\u6613\n//\u53ea\u80fd\u8003\u8651\u7b80\u5355\u7684\u9012\u63a8\u548c\u4e8c\u5206\n//\u800c\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u6700\u5927\u6700\u77ed\u8ddd\u79bb\u5728\u8d2a\u5fc3\u5237\u51fa\u6ee1\u8db3\u6b64\u8ddd\u79bb\u6700\u5c11\u9700\u8981\u79fb\u8d70\u7684\u77f3\u5934\u6570\n//\u518d\u5224\u5b9a\u662f\u5426\u5728\u9884\u7b97\u5185\n//\u6700\u5c11\u9700\u8981\u79fb\u8d70\u7684\u8d2a\u5fc3\u8fc7\u7a0b\u89c1\u4ee3\u7801 \n#include<cstdio>\n#include<algorithm>\n#include<iostream>\nusing namespace std;\nint num[1000005];\nint main()\n{\n    int s,n,m;\n    cin>>s>>n>>m;\n    int l=1,e=s,mid;\n    for(int i=1;i<=n;i++)cin>>*(num+i);\n    sort(num,num+n);\n    int t,k,p;\n    while(l<e)\n    {\n        mid=(l+e+1)/2;\n        p=t=0;\n        for(k=1;k<=n;k++)\n        {\n            if(num[k]-p<mid)t++;\n            else p=num[k];\n        }\n        if(t<=m) \n        l=mid;\n        else e=mid-1;\n    }\n    cout<<l<<\"\\n\";\n    return 0;\n}\n```",
        "postTime": 1515754876,
        "uid": 40629,
        "name": "zzw4257",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2678 \u3010\u8df3\u77f3\u5934\u3011"
    },
    {
        "content": "\u6211\u8fd9\u4e2a\u4e8c\u5206\u5199\u7684\u5f88\u5947\u602a\uff0c\u4e0d\u662f\u5f88\u7b80\u6d01\uff0c\u5177\u4f53\u53c2\u89c1\u4ee3\u7801\u3002\n\n\u539f\u7406\uff1a\n\n\u6211\u4eec\u5047\u8bbe\u6211\u4eec\u6c42\u7684\u8fd9\u4e2a\u6700\u5927\u7684\u6700\u5c0f\u503c\u4e3aminval\n\n\u6839\u636eminval\u7684\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u8fd9\u6837\u4e00\u4e2a\u7ed3\u8bba\uff1a\u5982\u679c\u7b2ci\u4e2a\u77f3\u5934\u88ab\u62ff\u8d70\u4e86\uff0c\u90a3\u4e48\u5b83\u540e\u9762\u548c\u5b83\u8ddd\u79bb\u5c0f\u4e8eminval\u7684\u77f3\u5934\u90fd\u8981\u62ff\u8d70\uff0c\u5426\u5219\u4e0d\u7b26\u5408minval\u6700\u5c0f\u7684\u6027\u8d28\u3002\n\n\u90a3\u4e48\u597d\uff0c\u5982\u679cminval\u786e\u5b9a\u4e86\uff0c\u90a3\u4e48\u6240\u9700\u8981\u62ff\u8d70\u7684\u6700\u5c0f\u77f3\u5934\u6570\u4e5f\u5c31\u786e\u5b9a\u4e86\uff0c\u6211\u4eec\u5047\u8bbe\u8fd9\u4e2a\u6570\u91cf\u4e3ar\u3002\n\n\u4f46\u662f\u9898\u76ee\u4e2d\u9650\u5236\u4e86m\uff0c\u56e0\u6b64\u5f53r>m\u7684\u65f6\u5019\uff0cminval\u8fd9\u79cd\u65b9\u6848\u662f\u4e0d\u53ef\u884c\u7684\uff0c\u6b64\u65f6\u53ea\u80fd\u964d\u4f4e\u8981\u6c42\uff0c\u6362\u53e5\u8bdd\u8bf4\u89e3\u4e00\u5b9a\u5c0f\u4e8eminval\uff0c\u800c\u5f53r<=m\u7684\u65f6\u5019minval\u6216\u4ee5\u4e0a\u7684\u503c\u90fd\u662f\u53ef\u80fd\u7684\u89e3\u3002\n\n\u6211\u4eec\u5229\u7528\u4e8c\u5206\u6765\u903c\u8fd1\u7b54\u6848\uff0c\u6bcf\u6b21\u5f97\u5230\u7684left\u548cright\u8868\u793a\u89e3\u4e00\u5b9a\u5c5e\u4e8e[left, right]\u3002\n\n\u5f53\u4e8c\u5206\u5230\u533a\u95f4\u957f\u5ea6\u4e3a1\u6216\u80050\u7684\u65f6\u5019\uff0c\u4e5f\u5c31\u662f\u6700\u6734\u7d20\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u76f4\u63a5\u6c42\u89e3\u3002\n\n```cpp\n#include <iostream>\n#include <stdlib.h>\n#include <math.h>\n#include <algorithm>\n#define N 50005\nusing namespace std;\nint l, n, m, dis[N];\nvoid Input()\n{\n    cin >> l >> n >> m;\n    dis[0] = 0;\n    dis[n + 1] = l;\n    for (int i = 1; i <= n; ++i)\n    {\n        cin >> dis[i];\n    }\n}\nbool Check(int mid)\n{\n    int removeCount = 0;\n    int lastNotRemoved = 0;\n    for (int i = 1; i <= n; ++i)\n    {\n        if (dis[i] - dis[lastNotRemoved] < mid)\n        {\n            ++removeCount;\n        }\n        else\n        {\n            lastNotRemoved = i;\n        }\n    }\n    return removeCount <= m;\n}\nint Solve()\n{\n    int left = 1, right = l, mid;\n    while (true)\n    {\n        if (left == right) return left;\n        if (left + 1 == right)\n        {\n            return Check(right) ? right : left;\n        }\n        mid = (left + right) / 2;\n        if (Check(mid))\n        {\n            left = mid;\n        }\n        else\n        {\n            right = mid - 1;\n        }\n    }\n}\nvoid Output()\n{\n    cout << Solve();\n}\nint main()\n{\n    Input();\n    Output();\n    return 0;\n}\n```",
        "postTime": 1508682459,
        "uid": 28027,
        "name": "KaenbyouRin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2678 \u3010\u8df3\u77f3\u5934\u3011"
    },
    {
        "content": "\n    \n    \n    \n```cpp\n#include<cstdio>\n#include<cstdlib>\nusing namespace std;\n#define MAXN 50010\n#define MAXL 1000000010\nint L,n,m,count;\nint dis[MAXN+2];\nint l,r,mid;\nint ans; \nbool flag;\n//\u6ce8\u610f\u5168\u5c40\u53d8\u91cf\u5728\u6539\u53d8\u540e\u7684\u521d\u59cb\u5316\u64cd\u4f5c!!! \nbool check(int mid)//\u8fd9\u91cc\u7684mid \u662f\u8fd9\u6b21\u7684\u8df3\u8dc3\u8ddd\u79bb\u6700\u5c0f\u503c \n{\n    int last = 0;//\u4e0d\u662f\u5168\u5c40\u53d8\u91cf \u8981\u521d\u59cb\u5316\u4e3a0 \n    count = m;//\u6ce8\u610f\u521d\u59cb\u5316\u64cd\u4f5c\uff01\uff01\uff01\u503c\u5728\u4e0a\u4e00\u6b21\u6539\u53d8\u4e86 \n    for(int i=1;i<=n+1;i++){\n        if(dis[i] - last < mid)\n            count--;\n        else\n            last = dis[i];\n}\n    if(count < 0)\n        return false;\n    return true;\n} \nint main()\n{\n    scanf(\"%d%d%d\",&L,&n,&m);\n    //count = m;\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&dis[i]);\n    dis[n+1] = L;//\u6ce8\u610f\u6700\u540e\u4e00\u5757\u77f3\u5934\u5230\u7ec8\u70b9\u4e5f\u662f\u6709\u8ddd\u79bb\u7684!!!   \u4e0d\u7136\u4f1aWA  !!!\n    //\u6240\u4ee5\u4e00\u5171n+1\u4e2a\u8ddd\u79bb!!! \n    l = 0;\n    r = L;//\u6ce8\u610f l != L \u6211\u4eec\u5bf9L \u6709\u8f93\u5165\uff01\uff01\u4ed6\u662f\u6574\u4e2a\u6cb3\u9053\u7684\u957f\u5ea6!! \n    //\u6211\u4eec\u8981\u6c42\u6700\u5927\u8df3\u8dc3\u8ddd\u79bb\u7684\u6700\u5c0f\u503c \n    while(l <= r)//\u56e0\u4e3a\u90fd\u662f\u6574\u6570\u6240\u4ee5 +1 \n```\n{//\u6ce8\u610f\u662f\u5de6 < \u53f3 \u4e0d\u80fd\u5199\u6210 r <= l\n```cpp\n        mid = (l + r) / 2;\n        if(check(mid)){\n            l = mid+1;//\u8981\u6c42\u6700\u5927\u503c\u6240\u4ee5\u662f l\n            ans = mid;//\u6ce8\u610fans \u8981\u5728\u9014\u4e2d =mid \u4e0d\u7136\u4e4b\u540el = mid+1 \u4e86 \u4f46\u662fmid\u5982\u679c\u662f\u89e3\u5219\u2026\u2026 \n        }\n        else\n            r = mid-1; \n    }\n    printf(\"%d\",ans);\n        return 0;\n}\n```\n/\\*\n\u5206\u6790\uff1a\u8fd9\u9053\u9898\u6211\u4eec\u76f4\u63a5\u6a21\u62df\u662f\u5341\u5206\u590d\u6742\u800c\u4e14\u6613\u9519\u7684\n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\uff1a\u5bf9\u4e8e\u6700\u77ed\u8df3\u8dc3\u8ddd\u79bb\u4e3ak\n\n\u90a3\u4e48\u5927\u4e8ek\u7684\u6570\u636e\uff08\u8981\u5728\u9898\u76ee\u7684\u8f93\u5165\u7684\u6240\u6709\u60c5\u51b5\u5185\uff09\u8bdd\u4e00\u5b9a\u53ef\u4ee5\u6ee1\u8db3\n\n\u6ee1\u8db3\u53ef\u4e8c\u5206\u6027\n\n\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\n\n\u6211\u4eec\u53ef\u4ee5check\u5f53\u6700\u5927\u8ddd\u79bb\u4e3amid\u65f6\uff0c\u6240\u9700\u8981\u642c\u8d70\u7684\u77f3\u5934\u7684\u4e2a\u6570\u3002\n\n\u65b9\u6cd5\u5c31\u662f\u4e00\u4e2a\u5c0f\u5c0f\u7684\u8d2a\u5fc3\u2014\u2014\u80fd\u4e0d\u62ff\u8d70\u5c31\u4e0d\u62ff\u8d70\uff0c\u80fd\u5c11\u62ff\u8d70\u5c31\u5c11\u62ff\u8d70\n\n\u7136\u540e\u4e00\u6b21check\u5728O(n)\u7684\u65f6\u95f4\u5185\u8dd1\u8fc7\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(nlogn)\u3002\n\n\\*/",
        "postTime": 1507276300,
        "uid": 24027,
        "name": "IG_TheShy_",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2678 \u3010\u8df3\u77f3\u5934\u3011"
    },
    {
        "content": "\u201c\u6700\u5c0f\u503c\u6700\u5927\u201d\u662f\u5f88\u660e\u663e\u7684\u4e8c\u5206\u7b54\u6848\uff0c\u6211\u7684\u65b9\u6cd5\u662f\u4e8c\u5206\u53ef\u4ee5\u8df3\u7684\u8ddd\u79bb\uff0c\u7edf\u8ba1\u4ee5\u6b64\u8ddd\u79bb\u53ef\u4ee5\u5ffd\u7565\u7684\u7684\u77f3\u5934\u6570\u3002\u5982\u679c\u53ef\u5ffd\u7565\u77f3\u5934\u6570\u5927\u4e8e\u8981\u6c42\u64a4\u53bb\u77f3\u5934\u6570\u5219\u8bf4\u660e\u8df3\u7684\u8ddd\u79bb\u53ef\u4ee5\u5728\u7f29\u5c0f\uff0c\u53cd\u4e4b\u5219\u6269\u5927\u3002emmm \u8be6\u7ec6\u770b\u4ee3\u7801\n\n     \n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int maxn=1e4*5+10;\nint l,m,n,a[maxn],le=1,ri;\nbool sad(int x,int y){      //\u4e8c\u5206\u8fc7\u7a0b\n     int mid=(x+y)/2,dis=mid,sum=0;\n     for(int i=1;i<=n+1;i++){\n         if(dis>=a[i]-a[i-1]) dis-=a[i]-a[i-1];\n         else sum++,dis=mid; //\u7edf\u8ba1\u4e0d\u80fd\u8df3\u8fc7\u77f3\u5934\u6570\n     }\n     if(sum>(n-m)) return 1;\n     else return 0;\n}\nint main(){\n    scanf(\"%d%d%d\",&l,&n,&m);\n    a[n+1]=l,ri=l;\n    for(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n    while(le+1!=ri){\n        if(sad(le,ri)) le=(le+ri)/2;//\u7f29\u5c0f\u8303\u56f4\n        else ri=(le+ri)/2;\n    }\n    printf(\"%d\",le+1);\n    return 0;\n}\n\n```",
        "postTime": 1507213411,
        "uid": 36431,
        "name": "\u843d\u6708\u9a7f\u7ad9",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2678 \u3010\u8df3\u77f3\u5934\u3011"
    },
    {
        "content": "\u8fd9\u4e0d\u5c31\u662f\u4e00\u9053\u7b80\u5355\u7684\u4e8c\u5206\u6cd5\u5417\uff1f\n\n\u5148\u4e8c\u5206\u67e5\u627e\u7b54\u6848\n\n\u540e\u6c42\u89e3\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[5000050];\nint d,n,m;\nbool check(int x)\n{\n    int sum=0,i=0,last=0;\n    while  (i<n+1)\n        {\n            ++i;\n            if (a[i]-a[last]<x)\n                ++sum;\n            else \n                last=i;\n        }\n    return sum<=m;\n```\n}//\u4e8c\u5206\u8fc7\u7a0b\n```cpp\nint main()\n{\n    int ans;\n    scanf(\"%d%d%d\",&d,&n,&m);\n    for (int i=1; i<=n; i++) \n        scanf(\"%d\",a+i);\n    a[n+1]=d;\n    int l=1,r=d,mid;\n    while (l<=r)\n        {\n            mid=(l+r)/2;\n            if (check(mid))\n                {\n                    ans=mid;\n                    l=mid+1;\n                }\n            else r=mid-1;\n```\n}//\u4e8c\u5206\u6a21\u677f\n    printf(\"%d\",ans);\n\n}",
        "postTime": 1503235451,
        "uid": 51172,
        "name": "hsq0929",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2678 \u3010\u8df3\u77f3\u5934\u3011"
    },
    {
        "content": "\u76f8\u5f53\u5165\u95e8\u7684\u4e8c\u5206\u7b54\u6848\u9898\uff0c\u9996\u5148\u8003\u8651\u679a\u4e3e\u8d2a\u5fc3\uff0c\u6bcf\u6b21\u679a\u4e3e\u4e00\u4e2adis\u503c\u904d\u5386\u6c42\u89e3\uff08\u5927\u6982\u53ef\u4ee5\u8fc7\u76f8\u5f53\u591a\u7684\u5206\uff1f\uff1f\uff1f\uff09\uff0c\u4f46\u662f\u6570\u636eL\u8fd8\u662f\u8fc7\u5927\uff0c\u53ef\u4ee5\u53d1\u73b0dis\u4e0e\u79fb\u52a8\u7684\u5ca9\u77f3\u6570\u76f8\u5173\uff0c\u8003\u8651\u4e00\u4e0b\u53ef\u4ee5\u53d1\u73b0dis\u503c\u8d8a\u5927\uff0c\u79fb\u52a8\u5ca9\u77f3\u6570\u76ee\u5219\u8d8a\u591a\uff0c\u76f8\u5f53\u5355\u8c03\uff0c\u53ef\u4ee5\u8fdb\u884c\u4e8c\u5206\u3002\n\nc++\u4ee3\u7801\u5982\u4e0b\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint l,ans,m,n,len[50010];    \nint last,ansi;\nbool check(int dis,int m){\n    ans=0;last=0;\n    for(int i=1;i<=n;i++){\n        if(len[i]-last<dis) {ans++; } \n        else last=len[i];\n        }\n    if(ans>m) return false;\n    else return true;\n    }\nint bin_search(int l,int r){\n    while(l<=r){\n        int dis=(l+r)/2;//\u4e8c\u5206\u51fa\u7684mid \n        if(check(dis,m)==true) {ansi=dis;l=dis+1;}\n        else r=dis-1;\n        }\n    return ansi;\n    }\nint main(){\n    cin>>l>>n>>m;\n    for(int i=1;i<=n;i++){\n        cin>>len[i];\n        }\n    if(m==0) {cout<<l;return 0;}\n    cout<<bin_search(0,1000000000);//\u76f4\u63a5\u6309\u6570\u636e\u6700\u5927\u503c\u641c\u7684\uff0c\u5199\u6210bin_search\uff080\uff0cl\uff09 \u5c31\u591f\u4e86\u3002 \n    return 0;\n}\n```",
        "postTime": 1493126414,
        "uid": 27454,
        "name": "EricPaul",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2678 \u3010\u8df3\u77f3\u5934\u3011"
    },
    {
        "content": "# **\u672c\u849f\u84bb\u7b2c\u4e00\u7bc7\u9898\u89e3**#\n\u9996\u5148\u8bf4\u4e0b\u672c\u9898\u601d\u8def\uff1a\n\n1.\u770b\u6570\u636e\uff1a\u663e\u7136n^2\u4e0d\u53ef\u80fd\uff0c\u4e8e\u662f\u60f3\u5230**nlogn**\u3002\n\n2.\u5206\u6790\u590d\u6742\u5ea6\uff1alogn\u80af\u5b9a\u4e0e\u6392\u5e8f\uff0c\u4e8c\u5206\uff0c\u5806\u6709\u5173\uff0c\u8f93\u5165\u6570\u636e\u672c\u6765\u5c31\u6709\u5e8f\uff0c\u4e0d\u7528\u6392\u5e8f\uff1b\u5806\uff0c\u4e5f\u7528\u6765\u505a\u6392\u5e8f\u4e4b\u7c7b\u7684\u5de5\u4f5c\uff0c\u4e8e\u662f\u6392\u9664\uff1b\u6240\u4ee5\u7528\u4e8c\u5206\u7b54\u6848\u3002\n\n3.\u600e\u4e48\u9a8c\u8bc1\uff1a\u6bcf\u6b21\u6c42\u5f53\u524d\u77f3\u5934\u4e0e\u4e0a\u4e00\u4e2a\u6709\u6548\u7684\u77f3\u5934\u8ddd\u79bb\uff0c\u7136\u540e\u4e0e\u800c\u4e8c\u5206\u6570\u636e\u6bd4\u8f83\u770b\u662f\u5426\u53bb\u6389\uff0c\u82e5\u53bb\u6389\uff0c\u8ba1\u6570\u5668\u52a0\u4e00\uff0c\u6700\u540e\u518d\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u5728\u8981\u6c42\u8303\u56f4\u5185\u5c31\u53ef\u4ee5\u4e86\u3002\n\nP.S: \u5751\u70b9\uff1a\u9898\u76ee\u4e2d\u8bf4\u7684L\u662f\u6709\u7528\u7684\uff0c\u8868\u793a**\u6700\u540e\u4e00\u4e2a\u77f3\u5934**\uff08\u7ec8\u70b9\uff09\u4e0e\u8d77\u70b9\u7684\u8ddd\u79bb\uff01\uff01~~\uff08\u6211\u8c03\u4e861\u4e2a\u5c0f\u65f6\uff09~~\n\n\n\u770b\u4ee3\u7801\u5427\uff1a\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <queue>\n#include <iomanip>\n#include <algorithm>\n#include <cstring>   //\u672c\u4eba\u4e0d\u559c\u6b22\u4e07\u80fd\u5934\u6587\u4ef6\u3002\u3002\nusing namespace std;\nint k, m, n, a[1000005];\ninline int read() {\n\tint ch = getchar();\n\twhile (ch > '9' || ch < '0')ch = getchar();\n\tint num = ch - '0';\n\tch = getchar();\n\twhile (ch >= '0' && ch <= '9') {\n\t\tnum *= 10;\n\t\tnum += ch - '0';\n\t\tch = getchar();\n\t}\n\treturn num;\n}                             //\u5feb\u8bfb\u662f\u4e2a\u597d\u4e60\u60ef\ninline bool check(int x) {   //\u8d2a\u5fc3\u9a8c\u8bc1\u4e8c\u5206\n\tint num = 0, now = 0;   //num\u8bb0\u5f55\u632a\u5f00\u77f3\u5934\u6570\n\tfor (register int i = 1; i <= n + 1; i++) \t  {\n\t\tif (a[i] - a[now] >= x) \n\t\t\tnow = i;\n\t\telse //\u632a\u5f00\n\t\t\tnum++;\n\t}\n\tif (num <= m)return true;//\u5224\u5b9a\u662f\u5426\u7b26\u5408\u6807\u51c6\n\treturn false;\n}\nint main() {\n\tk = read();\n\tn = read();\n\tm = read();\n\tfor (register int i = 1; i <= n; i++) {\n\t\ta[i] = read();\n\t}//\u8bfb\u5165\u6570\u636e\n\ta[n + 1] = k;  //\u7ec8\u70b9\u77f3\u5934\u4e5f\u8981\u7b97\uff01\uff01\n\tint l = 0, r = k, mid, ans;//ans\u4e3a\u7b54\u6848\n\twhile (l <= r) {  //\u4e8c\u5206\u7b54\u6848\n\t\tmid = (l + r) / 2;\n\t\tif (check(mid) == true) {\n\t\t\tl = mid + 1;\n\t\t\tans = mid;\n\t\t}\n\t\telse\n\t\t\tr = mid - 1;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n```\n\u7ba1\u7406\u5927\u5927\u6c42\u8fc7\uff01\uff01",
        "postTime": 1548772685,
        "uid": 67966,
        "name": "alan20050721",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2678 \u3010\u8df3\u77f3\u5934\u3011"
    }
]