[
    {
        "content": "\u7b2c\u4e00\u7bc7\u9898\u89e3\u5416\n\n###  \u5173\u952e\u8bcd\uff1a\u66b4\u529b\uff0c\u6392\u5e8f\uff0cAC\u3002\n\n\n\u5148\u8bf4\u4e0b\u601d\u60f3\uff0c\u5efa\u8bae\u770b\u61c2\u7684\u81ea\u5df1\u505a\u4e0d\u8981\u770b\u4ee3\u7801\uff0c\u5b9e\u5728\u4e0d\u4f1a(~~\u6216\u8005\u88ab\u6211\u8fd9\u6beb\u65e0\u7ae0\u6cd5\u7684\u8bed\u8a00\u6076\u5fc3\u5230\u4e86\u7684~~)\u518d\u53bb\u770b\u770b(~~\u6211\u90a3\u4e11\u4e0d\u62c9\u51e0\u7684~~)\u4ee3\u7801\u5427~  \n\n\n### \u601d\u8def\uff1a  \n1\uff0c\u5148\u6309\u7167**\u5355\u4ef7**\u6392\u5e8f\uff0c**\u5355\u4ef7\u5c0f**\u7684\u5728\u524d\u9762\uff1b \u5355\u4ef7**\u4e00\u6837**\u7684\u5c31\u628a**\u4ea7\u91cf\u591a**\u7684\u653e\u524d\u9762\uff1b\uff08\u6211\u662f\u7528**\u7ed3\u6784\u4f53**\u505a\u7684\uff0c\u6392\u5e8f\u65b9\u4fbf\uff09  \n\n2\uff0c\u5f53\u8fd8\u9700\u8981\u91c7\u8d2d\u65f6\uff08**n\u4e0d\u4e3a\u96f6**\uff09\uff0c\u6211\u4eec\u4ece**\u5f53\u524d\u8fd8\u9700\u91c7\u8d2d\u503c**\u5f00\u59cb\uff0c\u6328\u4e2a**\u51cf\u4e00**\uff0c**\u603b\u4ef7\u94b1\u52a0\u4e0a\u5f53\u524d\u6700\u5c0f\u5355\u4ef7**\uff0c\u5f53\u8fd9\u5934\u725b**\u4ea7\u91cf\u4e3a\u96f6**\uff08\u4e0d\u80fd\u518d\u4ece\u5b83\u8d2d\u4e70\u65f6\uff09\uff0c\u6362\u4e00\u5934\u725b\uff08**\u6570\u7ec4\u52a0\u4e00**\uff09\uff0c\u76f4\u5230\u8d2d\u4e70\u5b8c\uff08**n=0**\uff09\u4e3a\u6b62\u3002\n\n3\uff0c\u8f93\u51fa**\u603b\u4ef7\u94b1**\uff0c\u7b49\u5f85\u8bc4\u6d4b\uff0c\u7136\u540e**AC**;\n\n## \u4e0b\u9762\u662f\u4ee3\u7801\uff1a\n\n```cpp\n/*(^-^)*/\n#include<cmath>\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nint n,m,ans;//\u603b\u9700\u6c42\u91cf\uff0c\u63d0\u4f9b\u7684\u4e2a\u6570\uff0c\u603b\u4ef7\uff1b\n\nstruct node\n{\n    int a,b;//\u725b\u5976\u5355\u4ef7\u548c\u4ea7\u91cf\n}a[5005];//\u5b9a\u4e49\u7ed3\u6784\u4f53\n\nbool cmp(node a,node b)\n{\n    if(a.a!=b.a)return a.a<b.a;\n    else return a.b>b.b;\n}//\u597d\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5224\u65ad\u51fd\u6570\uff0c\u6761\u4ef6\u89c1\u601d\u8def1\uff1b\n\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=m;i++)\n    \tcin>>a[i].a>>a[i].b;\n    sort(a+1,a+1+m,cmp);//\u7528\u521a\u5b9a\u4e49\u7684\u51fd\u6570\u7ed9\u5b83\u6392\u5e8f\n    int i=1;\n    while(n)//\u4ecen\u5f00\u59cb\u51cf\u8d77\uff0c\u76f4\u8fben\u4e3a\u96f6\u505c\u6b62\n    {\n        if(a[i].b!=0)//\u5f53\u8fd9\u5934\u725b\u8fd8\u6ca1\u8d2d\u4e70\u5b8c\n        {\n            a[i].b--;//\u8fd9\u5934\u725b\u53ef\u8d2d\u4e70\u6570\u51cf\u4e00\n            ans+=a[i].a;//\u603b\u82b1\u8d39\u52a0\u4e0a\u8fd9\u5934\u725b\u7684\u5355\u4ef7\uff08\u6216\u8005\u8bf4\u5f53\u524d\u6700\u5c0f\u5355\u4ef7\uff09\n            n--;//\u9700\u6c42\u91cf\u51cf\u4e00\n        }\n        else i++;//\u8d2d\u4e70\u5b8c\u4e86\u6362\u5934\u725b\n    }\n    cout<<ans;\n    return 0;\n}\n```\n\u5ba1\u6838\u771f\u597d\u770b\uff01~~\u7ed9\u8fc7\u5427QWQ\uff08\u5973\u751f\u5b66oi\u4e0d\u5bb9\u6613\uff01\uff09~~",
        "postTime": 1537690742,
        "uid": 99840,
        "name": "\u6768\u54a9\u54a9\u54a9\u554a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u7bc7\u9898\u89e3\uff08\u5404\u4f4d\u5e2e\u5fd9\u70b9\u4e2a\u8d5e\uff09\n\u5148\u8f93\u5165\uff0c\u518d\u7528\u5355\u4ef7\u8fdb\u884c\u6392\u5e8f\n\u5148\u7528\u4e00\u4e2atot\u8bb0\u5f55\u5f53\u524d\u6570\u91cf\uff0c\u5982\u679c\u5f53\u524d\u6570\u91cf\u5c0f\u4e8e\u4e8e\u7b49\u4e8e\u6240\u6c42\u6570\u91cf\uff0c\u7528sum\u8bb0\u5f55\u5f53\u524d\u6240\u7528\u94b1\u6570\uff0c\u56e0\u4e3a\u7528\u5355\u4ef7\u4ece\u5c0f\u5230\u5927\u6392\u4e86\u5e8f\uff0c\u6240\u4ee5\u5f53\u5f53\u524d\u6570\u91cf\u5927\u4e8e\u6240\u6c42\u6570\u91cf\u65f6\uff0c\u6b64\u65f6\u7684\u603b\u4ef7\u5c31\u662f\u6700\u5c0f\u7684\u94b1\u6570\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\nconst int maxn=2000000+5;\n\nstruct cow{\n\tint p,a;\n\tcow(int p=0,int a=0): p(p),a(a){}\n}milk[maxn];\n\n/*bool operator<(const cow& u, const cow& v)\n{\n\treturn u.p < v.p;\n}*/\nbool cmp(const cow &a,const cow &b)\n{\n   return a.p<b.p;\n}\nint main (){\n\tint n,m,dj;\n\tcin>>n>>m;\n\tfor (int i=0;i<m;i++){\n\t\tcin>>milk[i].p>>milk[i].a;\n\t}\n\tsort(milk,milk+m,cmp);\n\tint tot=0,sum=0;\n\tfor (int i=0;i<m;i++){\n\t\tif (tot+milk[i].a<=n) {\n\t\t\ttot+=milk[i].a;\n\t\t\tsum+=milk[i].p*milk[i].a;\n\t\t}\n\t\telse {\n\t\t\tsum+=(n-tot)*milk[i].p; \n\t\t\tbreak;\n\t\t}\n\t}\n\tcout<<sum;\n\treturn 0;\n}\n```\n",
        "postTime": 1566460144,
        "uid": 112819,
        "name": "\u9752\u964c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9053\u9898\u5df2\u7ecf\u6709\u5f88\u591a\u9898\u89e3\u4e86\uff0c\u6211\u8fd9\u79cd\u89e3\u6cd5\u5176\u5b9e\u6709\u5f88\u591a\u53d1\u4e86\n\n~~\u6240\u4ee5\u6211\u53ea\u662f\u6765\u5212\u6c34\u7684~~\n\n\u6211\u53ea\u662f\u60f3\u7ed9\u5927\u5bb6\u4e00\u4e9b\u7ec6\u8282\u4e0a\u7684\u5efa\u8bae\n\n\u5177\u4f53\u4f1a\u653e\u5728\u4ee3\u7801\u4e2d\n\n```cpp\n#include<iostream>//\u4e4b\u6240\u4ee5\u6211\u6253\u4e86\u90a3\u4e48\u591a\u5934\u800c\u4e0d\u7528\u4e07\u80fd\u5934\n#include<cstdio>//\u662f\u56e0\u4e3a\u4e07\u80fd\u5934\u636e\u8bf4\u6709\u5f88\u591a\u4e0d\u597d\u7684\u5730\u65b9\n#include<algorithm>//\u4f8b\u5982\u4f20\u8bf4\u4e2d\u8981\u53602mb\u5185\u5b58\n#include<cstring>//\u4f8b\u5982\u6709\u4e9b\u51fd\u6570\u5bb9\u6613\u51fa\u9519\n#include<cmath>//\u4ee5\u53ca\u4f60\u6709\u4e9b\u53d8\u91cf\u540d\u548c\u4e0d\u77e5\u54ea\u91cc\u7684\u51fd\u6570\u91cd\u590d\u5bfc\u81f4RE\n#include<set>//\u800c\u4e14\u8fd9\u4e9b\u5934\u662f\u53ef\u4ee5\u590d\u5236\u7c98\u8d34\u7684\uff0c\u4e0d\u9700\u8981\u989d\u5916\u7684\u65f6\u95f4\n#include<string>//\u7ade\u8d5b\u4e2d\u4e5f\u4e0d\u8ba9\u7528\u4e07\u80fd\u5934\n#include<stack>\n#include<queue>\nusing namespace std;\nstruct bao//\u5f00\u7ed3\u6784\u4f53\u800d\u5b50\uff0c\u5176\u5b9e\u7ed3\u6784\u4f53\u6700\u5927\u7684\u597d\u5904\u5c31\u662f\u770b\u7740\u8212\u670d\n{//\u6761\u7406\u6e05\u6670\uff0c\u4e0d\u5bb9\u6613\u9057\u5fd8\u81ea\u5df1\u54ea\u4e9b\u53d8\u91cf\u662f\u5e72\u4ec0\u4e48\u7684233\n\tint dan;//\u5355\u4ef7\n\tint shu;//\u6570\u91cf\n}bei[10000];//\u6570\u7ec4\u540d\u5b57\uff0c\u6570\u636e\u6700\u59275000\u4f46\u53ea\u8981\u7a7a\u95f4\u5141\u8bb8\u5f00\u53cc\u500d\u6bd4\u8f83\u8212\u670d\uff0c5005\u8fd9\u79cd\u5199\u6cd5\u6709\u4e9b\u65f6\u5019\u4f1a\u83ab\u540dRE\nbool com(bao x, bao y) {\n\treturn x.dan <= y.dan;//\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff0c\u7531\u4e8e\u5355\u4ef7\u76f8\u540c\u5e76\u4e0d\u4f1a\u6709\u5176\u4ed6\u5f71\u54cd\uff0c\u6240\u4ee5\u6ca1\u5fc5\u8981\u53bb\u5224\u65ad\u6570\u91cf\n}\nint  num,ans,fei=0,k=0;//\u9700\u6c42\uff0c\u7267\u6c11\u6570\u91cf\uff0c\u6240\u82b1\u7684\u94b1\uff0c\u4e00\u4e2a\u5f00\u5173\nint main() {\n\tcin >> num >> ans;\n\tfor (int i = 0; i < ans; i++) {//\u4ece\u96f6\u5f00\u59cb\uff0c\u53ef\u4ee5\u4f7f\u4ee3\u7801\u66f4\u6574\u6d01\u4e00\u70b9\n\t\tcin >> bei[i].dan >> bei[i].shu\uff1b//\u76f4\u63a5\u8bfb\u5165\n\t}\n\tsort(bei, bei + ans, com);//\u5982\u679c\u4ece\u4e00\u5f00\u59cb\u8fd9\u91cc\u5c31\u4f1a\u66f4\u9ebb\u70e6\uff0c\u8fd8\u5bb9\u6613\u51fa\u73b0\u5c11\u6253+1\u5bfc\u81f4RE\u7684\u60c5\u51b5\uff1b\n\twhile (num > 0) {//while\u633a\u597d\u7528\u7684\uff0c\u6ce8\u610f\u6ca1\u6709\u7b49\u4e8e\u53f7\n\t\tif (bei[k].shu <= num) {\n\t\t\tnum -= bei[k].shu;//\u6211\u4eec\u8fd8\u9700\u8981\u7684\u6570\u91cf\u5728\u4e0d\u65ad\u51cf\u5c11\n\t\t\tfei +=( bei[k].shu*bei[k].dan);//\u7d2f\u52a0\u8d39\u7528\n\t\t}\n\t\telse {\t\t//\u5230\u4e86\u8fd9\u91cc\uff0c\u5c31\u662f\u6700\u540e\u4e00\u4e2a\u4e86\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u90a3\u4e48\u591a\u725b\u5976\u4e86\n\t\t\tfei += (num*bei[k].dan);//\u6309\u9700\u6c42\u7b97\n\t\t\tnum = 0\uff1b\n\t\t}\n\t\tk+=1;//\u5b8c\u6210\u4f9d\u6b21\u8bbf\u95ee\n\t}\n\tcout << fei;//\u8f93\u51fa\n\treturn 0;\n\t//\u7ed3\u675f\u4e86\uff0cAC\uff1b\n\twhile (1);\n}\n```\n\n\n\u671b\u901a\u8fc7\n\u672c\u7070\u540d\u849f\u84bb\u7b2c\u4e00\u7bc7\u9898\u89e3//\u8fd9\u662f\u7b2c\u4e8c\u4e2a\u53f7\uff0c\u521a\u521b\u6240\u4ee5\u7070\u540d233\nQwQ\n\u7ed9\u4e2a\u8d5e\u9e2d",
        "postTime": 1565065065,
        "uid": 234271,
        "name": "\u8c2c\u60a0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "#\u9700\u6392\u5e8f\n\n```cpp\nstruct n{\n    int a;int b;\n}t[5002];//\u7ed3\u6784\u4f53\nbool cmp(n x,n y)\n{return x.a < y.a;\n}\nint main()\n{\n    int n,m,i,sum=0;\n    scanf(\"%d%d\",&n,&m);\n    for(i=0;i<m;i++)\n    scanf(\"%d%d\",&t[i].a,&t[i].b);//\u8f93\u5165\n    sort(t,t+m,cmp);i=0;//\u6392\u5e8f\n    while(1){\n        if(n>t[i].b){sum+=t[i].a*t[i].b;n-=t[i].b;\n        }else {sum+=n*t[i].a;break;}i++;//\u7d2f\u52a0\n    }printf(\"%d\",sum);\u8f93\u51fa\n}\n```",
        "postTime": 1493905543,
        "uid": 36616,
        "name": "lili_flyingcutter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "# \u8fd9\u9053\u9898\u6211\u548c\u5927\u5bb6\u597d\u50cf\u90fd\u4e0d\u4e00\u6837\uff01\n\n### \u54b3\u54b3\uff0c\u597d\u8db4\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u79cd\u6bd4\u8f83\u597d\u7406\u89e3\u7684\u7b28\u65b9\u6cd5\uff0c\u4f46\u662f\u5728\u5199\u7684\u65f6\u5019\u4f1a\u6709\u4e00\u70b9\u5bb9\u6613\u51fa\u73b0\u601d\u8def\u4e0d\u6e05\u6670\u7684\u72b6\u51b5\u3002\u4f46\u662f\u53ea\u8981\u4e00\u8fb9\u505a\u4e00\u8fb9\u7406\u89e3\u5c31\u4e0d\u4f1a\u51fa\u95ee\u9898\u3002\n\u9996\u5148\u6211\u4eec\u6765\u770b\u770b\u8fd9\u9053\u9898\u6211\u7684\u601d\u8def\uff1a\n\n------------\n\n\u7b2c\u4e00\uff1a\u5efa\u7acb\u53d8\u91cf\u4e0e\u53d8\u91cf\u4e4b\u95f4\u7684\u5173\u7cfb\n\u5982\u56fe\u6240\u793a\uff1a![](https://cdn.luogu.com.cn/upload/pic/65551.png)\nOK\uff0c\u6211\u4eec\u63a5\u7740\u6765\u3002\n\n------------\n\n\u7b2c\u4e8c\u6b65\uff1a\u5f00\u59cb\u5206\u6790\u9898\u76ee\uff0c\u9996\u5148\u6211\u4eec\u5148\u6765\u770b\u8fd9\u4e2a\u9898\u76ee\u7684\u8981\u6c42\uff0c\u662f\u6c42\u6700\u5c0f\u7684\u8d39\u7528\uff0c\u90a3\u4e48\u6211\u4eec\u5f88\u5bb9\u6613\u5c31\u53ef\u4ee5\u60f3\u5230\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u6392\u5e8f\uff0c\u5c06\u6700\u5c0f\u8d39\u7528\u7684\u6392\u5728\u524d\u9762\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u62ff\u6bcf\u4e00\u4e2a\u6700\u5c0f\u8d39\u7528\u6240\u5bf9\u5e94\u7684\u6570\u91cf\u53bb\u53e0\u52a0\uff0c\u76f4\u5230\u8d85\u8fc7ALL\u8fd9\u4e2a\u6307\u6807\u3002\n### \u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u600e\u4e48\u5728\u6392\u5b8c\u5e8f\u540e\u518d\u7528\u4ed6\u7684\uff2d\uff2f\uff2e\uff25\uff39\u5462\uff1f\n\u4e0a\u4ee3\u7801\uff1a\n```c\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int mx=2000000;\nint money[mx];\nint num[mx];\nint xu[mx];\nint n,all,cnt=0,tem;\nint main(){\n\tscanf(\"%d%d\",&all,&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d%d\",&money[i],&num[i]);\n\t\txu[money[i]]=i;\n\t}\n\tsort(money+1,money+1+n);\n\tfor(int i=1;i<=n;i++){\n    \u3000\u3000\u3000\u3000\u3000\u3000\uff08\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\uff09\uff01\uff01\uff01\n\t\tif(cnt<all&&cnt+num[xu[money[i]]]<=all)\n\t\ttem+=money[i]*num[xu[money[i]]],\n\t\tcnt+=num[xu[money[i]]];\n\t\tif(cnt+num[xu[money[i]]]>all)\n\t\ttem=tem+money[i]*(all-cnt),cnt=cnt+(all-cnt);\n\t\tif(cnt>=all)\n\t\tbreak;\t\n\t}\n\telse cout<<tem;\n\treturn 0;\n}\n```\n\u6ca1\u9519\uff0c\u8fd9\u4e2a\uff38\uff35\u5c31\u662f\u672c\u9898\u7684\u7cbe\u9ad3\uff0c\u6211\u4eec\u5728\u5faa\u73af\u8f93\u5165\u65f6\u5c31\u53ef\u4ee5\u4ee5\u6570\u636e\u505a\u4e0b\u6807\uff0c\u7136\u540e\u518d\u6765\u8c03\u7528\uff0c\u5c31\u663e\u5f97\u5341\u5206\u65b9\u4fbf\u3002\n\u4f46\u662f\u7528\u8fd9\u79cd\u65b9\u6cd5\uff0c\u8981\u6ce8\u610f\u4e00\u4e2a\u70b9\uff0c\u5c31\u662f\u4ee3\u7801\u4e2d\u7684\uff08\uff09\uff0c\u90a3\u91cc\u8981\u52a0\u4e00\u4e2a\u7279\u5224\uff0c\u6765\u786e\u5b9a\u91cd\u590d\u7684\uff49\u5e94\u8be5\u600e\u4e48\u5904\u7406\uff0c\u8fd9\u91cc\u5c31\u4e0d\u5199\u51fa\u6765\u5566\uff0c\u5927\u5bb6\u4e5f\u8981\u81ea\u5df1\u601d\u8003\u54e6\uff01\n\n------------\n\n\u603b\u7ed3\u4e00\u4e0b\uff0c\u8fd9\u9053\u9898\u89e3\u4e3b\u8981\u662f\u5229\u7528\u4e86\u6570\u7ec4\u4e0b\u6807\u7684\u7075\u6d3b\u6027\uff0c\u5e76\u4e14\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528\u7ed3\u6784\u4f53\u505a\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\u840c\u65b0\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u6709\u4ec0\u4e48\u4e0d\u8db3\u671b\u5927\u4f6c\u8f7b\u62cd\n\n------------\n\n~~\uff31\uff36\uff31\u5e05\u6c14\u7ba1\u7406\u6c42\u8fc7~~",
        "postTime": 1563964568,
        "uid": 128619,
        "name": "Z_Ovids",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": " P1208 [USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\n \n \n \n\u9898\u76ee\u63cf\u8ff0\n\u7531\u4e8e\u4e73\u5236\u54c1\u4ea7\u4e1a\u5229\u6da6\u5f88\u4f4e\uff0c\u6240\u4ee5\u964d\u4f4e\u539f\u6750\u6599\uff08\u725b\u5976\uff09\u4ef7\u683c\u5c31\u53d8\u5f97\u5341\u5206\u91cd\u8981\u3002\u5e2e\u52a9Marry\u4e73\u4e1a\u627e\u5230\u6700\u4f18\u7684\u725b\u5976\u91c7\u8d2d\u65b9\u6848\u3002\n\nMarry\u4e73\u4e1a\u4ece\u4e00\u4e9b\u5976\u519c\u624b\u4e2d\u91c7\u8d2d\u725b\u5976\uff0c\u5e76\u4e14\u6bcf\u4e00\u4f4d\u5976\u519c\u4e3a\u4e73\u5236\u54c1\u52a0\u5de5\u4f01\u4e1a\u63d0\u4f9b\u7684\u4ef7\u683c\u662f\u4e0d\u540c\u7684\u3002\u6b64\u5916\uff0c\u5c31\u50cf\u6bcf\u5934\u5976\u725b\u6bcf\u5929\u53ea\u80fd\u6324\u51fa\u56fa\u5b9a\u6570\u91cf\u7684\u5976\uff0c\u6bcf\u4f4d\u5976\u519c\u6bcf\u5929\u80fd\u63d0\u4f9b\u7684\u725b\u5976\u6570\u91cf\u662f\u4e00\u5b9a\u7684\u3002\u6bcf\u5929Marry\u4e73\u4e1a\u53ef\u4ee5\u4ece\u5976\u519c\u624b\u4e2d\u91c7\u8d2d\u5230\u5c0f\u4e8e\u6216\u8005\u7b49\u4e8e\u5976\u519c\u6700\u5927\u4ea7\u91cf\u7684\u6574\u6570\u6570\u91cf\u7684\u725b\u5976\u3002\n\n\u7ed9\u51faMarry\u4e73\u4e1a\u6bcf\u5929\u5bf9\u725b\u5976\u7684\u9700\u6c42\u91cf\uff0c\u8fd8\u6709\u6bcf\u4f4d\u5976\u519c\u63d0\u4f9b\u7684\u725b\u5976\u5355\u4ef7\u548c\u4ea7\u91cf\u3002\u8ba1\u7b97\u91c7\u8d2d\u8db3\u591f\u6570\u91cf\u7684\u725b\u5976\u6240\u9700\u7684\u6700\u5c0f\u82b1\u8d39\u3002\n\n\u6ce8\uff1a\u6bcf\u5929\u6240\u6709\u5976\u519c\u7684\u603b\u4ea7\u91cf\u5927\u4e8eMarry\u4e73\u4e1a\u7684\u9700\u6c42\u91cf\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;//n\u9700\u8981\u725b\u5976\u7684\u603b\u6570,m\u63d0\u4f9b\u725b\u5976\u7684\u519c\u6c11\u4e2a\u6570\nint tot=0;//tot\u8bb0\u5f55\u82b1\u7684\u94b1\nstruct node\n{\n    int a,p;\n} a[100010];\nint cmp(node x,node y)//\u7ed3\u6784\u4f53\u6bd4\u8f83\n{\n    return x.p<y.p;\n}\nint main()\n{\n    cin>>n>>m;\n    for(int i=1; i<=m; i++)\n        cin>>a[i].p>>a[i].a;\n    sort(a+1,a+m+1,cmp);//sort\u5feb\u6392\n    for(int i=1; i<=m; i++)\n        if(n>0)\n        {\n            if(n>a[i].a)\n            {\n                n-=a[i].a;\n                tot+=a[i].p*a[i].a;\n            }\n            else if(n<=a[i].a)//\u56e0\u4e3a\u6700\u540e\u4e00\u4e2a\u519c\u592b\u7684\u5976\u7528\u4e0d\u5b8c\n            {\n                tot+=a[i].p*n;//\u770b\u8fd8\u9700\u591a\u5c11\u5976\uff0c\u8fd9\u91cc\u8bb0\u5f55\u94b1\u5fc5\u987b\u5728n--\u524d\uff0c\u8981\u4e0d\u7136\u5c31\u6210\u8d1f\u6570\u4e86\n                n-=a[i].a;\n            }\n        }\n    cout<<tot;\n}\n\n```",
        "postTime": 1541319137,
        "uid": 109376,
        "name": "\u5982\u5e7b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "\u624b\u5199\u4e00\u4e2a\u5806\u7ec3\u7ec3\u624b\u3002\u3002\u3002\n\n\u7b97\u6cd5\u601d\u8def\u5f88\u7b80\u5355\uff0c\u66b4\u529b\u8d2a\u5fc3\uff0c\u6bcf\u6b21\u9009\u5355\u4ef7\u6700\u5c0f\u7684\uff0c\u76f4\u5230\u5b8c\u6210\u4efb\u52a1\n\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<vector>\n#define Runtime int\n#define Error main\nconst int ERROR=0;\nusing namespace std;\ninline void getint(int &_int){                            \u6ca1\u6709\u4ec0\u4e48\u7528\u7684\u8f93\u5165\u4f18\u5316\n    char ch=_int=0;\n    while(!isdigit(ch)){\n        ch=getchar();\n    }\n    while(isdigit(ch)){\n        _int=_int*10+ch-48;\n        ch=getchar();\n    }\n}\nclass source{                                            \u5b9a\u4e49\u4e00\u4e2a\u7c7b\u6765\u5b58\u5976\u6e90\n```\npublic:\n```cpp\n        inline source(int _price=0,int _amount=0){\n            price=_price;\n            amount=_amount;\n        }\n        int price;\n        int amount;\n        inline bool operator <(source _src){                    \u4e3a\u540e\u9762\u7684\u5806\u670d\u52a1\u7684\u91cd\u8f7d\n            return price<_src.price;\n        }\n        inline bool operator ==(source _src){\n            return price==_src.price;\n        }\n        inline bool operator >(source _src){\n            return price>_src.price;\n        }\n        inline void operator =(source _src){\n            price=_src.price;\n            amount=_src.amount;\n        }\n};\ntemplate <class tp>                                \u6a21\u677f233333\nclass heap{\n```\npublic:\n```cpp\n        inline heap(){\n            array.clear();\n            _size=0;\n        }\n        inline void push(tp ele){                        \u5411\u5806\u91cc\u538b\u4e00\u4e2a\u5143\u7d20\n            array.push_back(ele);\n            _size++;\n            now=_size;\n            next=now/2;\n            while(next){\n                if(array[now-1]>array[next-1]){\n                    break;\n                }\n                swap(array[now-1],array[next-1]);\n                now=next;\n                next=now/2;\n            }\n        }\n        inline tp pop(){                                                \u5f39\u51fa\u4e00\u4e2a\u5143\u7d20\n            if(!_size){                                    \u6ce8\u610f\uff01\uff01\u5982\u679c\u4e0d\u5224\u65ad\u7a7a\u5806\u7684\u8bdd\n                tp _ret;                                        \u4f1a\u5728n=0, m=0\uff08\u5c31\u662f\u7b2c\u4e8c\u4e2a\u70b9\uff09\u65f6RE\n                return _ret;\n            }\n            ret=array[0];\n            array[0]=array[_size-1];\n            array.pop_back();\n            _size--;\n            now=1;\n            next=find_next();\n            while(next<=_size){\n                if(array[now-1]<array[next-1]){\n                    break;\n                }\n                swap(array[now-1],array[next-1]);\n                now=next;\n                next=find_next();\n            }\n            return ret;\n        }\n```\nprivate:\n```cpp\n        inline int find_next(){\n            t1=now<<1;\n            t2=t1+1;\n            if(t1>=_size){\n                return t1;\n            }\n            if(array[t1-1]<array[t2-1]){\n                return t1;\n            }\n            return t2;\n        }\n        inline void swap(tp &p1,tp &p2){\n            temp=p1;\n            p1=p2;\n            p2=temp;\n        }\n        vector<tp> array;\n        tp ret,temp;\n        int now,next,t1,t2,_size;\n};\nint n,m,cnt,tot;\nheap<source> hp;\nRuntime Error(){\n    getint(n);getint(m);\n    int i;\n    source tmp;\n    for(i=1;i<=m;i++){\n        getint(tmp.price);getint(tmp.amount);\n        hp.push(tmp);\n    }\n    while(true){\n        tmp=hp.pop();                                                \u627e\u5230\u5f53\u524d\u6700\u4fbf\u5b9c\u7684\u5976\u6e90\n        if(cnt+tmp.amount<n){\n            cnt+=tmp.amount;\n            tot+=tmp.amount*tmp.price;\n        }else{\n            tot+=(n-cnt)*tmp.price;\n            cnt+=n-cnt;\n            break;\n        }\n    }\n    printf(\"%d\\n\",tot);\n    return ERROR;\n}\n```",
        "postTime": 1476529770,
        "uid": 21903,
        "name": "vegetabird",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "\u8bdd\u8bf4\u56de\u6765\uff0c\u8fd9\u5e94\u8be5\u662f\u4e00\u9053\u5f88\u597d\u5199\u7684\u9898\u76ee\u4e86\uff0c\u4f46\u6709\u4e2a\u5751\u5728\u4e0b\u6ca1\u6ce8\u610f\u5230\u3002\u60f3\u60f3\u4e5f\u662f\uff0c\u6709\u8c01\u4f1a\u8d70\u5230\u5546\u5e97\u95e8\u53e3\u8bf7\u4eba\u5e2e\u4ed6\u7b97\u94b1\uff0c\u5374\u544a\u8bc9\u4eba\u5bb6\uff0c\u81ea\u5df1\u4ec0\u4e48\u90fd\u6ca1\u4e70\uff1f\n\n###### \u5207\u5165\u6b63\u9898\n\n\u8fd9\u4e00\u9898\u7b80\u5355\u5230\u4e0d\u6562\u76f8\u4fe1\u5b83\u662f\u666e\u53ca-\uff0c\u660e\u660e\u5f88\u5165\u95e8OK\uff1f\n\n\u4e0d\u5c31\u662f\u8f93\u5165\u540e\u6392\u4e2a\u5e8f\uff0c\u7528\u4e2a\u53cc\u5c42\u5faa\u73af\u8ba1\u7b97\u4e00\u4e0b\u4ef7\u94b1\u5c31\u80fd\u641e\u5b9a\u7684\u4e8b\u5417\uff1f\n\n\u53ea\u8981\u6ce8\u610f\u4e00\u4e0b\u90a3\u4e2a\u8f93\u5165\u4e24\u4e2a\u201c0\u201d\u7684\u6781\u7aef\u60c5\u51b5\u5c31\u884c\u4e86\u3002\n\n\u5728\u4e0b\u5199\u7a0b\u5e8f\u4e0d\u5bb9\u6613\uff08~~\u597d\u5427\u8fd9\u9898\u5f88\u5199\u7684\u5f88\u5bb9~~~~\u6613~~\uff09\uff0c\u6240\u4ee5\u5728\u4e0b\u6084\u6084\u52a0\u4e86\u4e00\u4e2a\u5c0f\u9519\u8bef\uff08\u4e00\u4e2a\u5206\u53f7\uff09\uff0c\u8fd9\u9898\u5f88\u5bb9\u6613\uff0c\u76f8\u4fe1\u5927\u5bb6\u5e94\u8be5\u4e5f\u4e0d\u5c51\u6284\u6211\u7684\u9898\u89e3\u4e86\u5427~\n\n\u597d\u4e86\u597d\u4e86\uff0c\u4e0a\u4ee3\u7801\uff0c\u76f8\u4fe1\u5927\u5bb6\u90fd\u770b\u5f97\u61c2\n```cpp\n\n\t#include<bits/stdc++.h>\n\tusing namespace std;\n\tint n,m,s,t;//s\u4ee3\u8868\u94b1,t\u4ee3\u8868\u6570\u91cf \n\tstruct milk//\u8fd9\u662f\u4e00\u4e2a\u7f8e\u5473\u7684\u7ed3\u6784\u4f53 \n\t{\n\t\tint jg;//\u4ef7\u683c \n\t\tint cl;//\u4ea7\u91cf \n\t}a[2000000];//\u6570\u7ec4\u4e00\u5b9a\u8981\u5927\uff01\uff01\uff01 \n\tbool cmp(milk a,milk b)//\u8fd9\u662f\u4e00\u4e2a\u6807\u51c6\u7684cmp\u51fd\u6570\uff0c\u5bd3\u610f\u6211\u8981\u7528STL \n\t{\n\t\tif(a.jg==b.jg)//\u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u53e5\u6ca1\u5fc5\u8981 \n\t\t\treturn a.cl>b.cl;//\u5982\u679c\u5355\u4ef7\u76f8\u7b49\uff0c\u4ea7\u91cf\u591a\u7684\u5728\u524d\uff08\u771f\u6ca1\u5fc5\u8981\uff09 \n\t\treturn a.jg<b.jg\uff1b//\u4fbf\u5b9c\u7684\u5728\u524d \n\t}\n\tint main()\n\t{\n\t\tcin>>n>>m;//\u8f93\u5165\uff0c\u6ca1\u8bdd\u8bf4 \n\t\tif(n==0&&m==0)//\u4e8b\u5b9e\u8bc1\u660e\u6709\u8fd9\u79cd\u5947\u8469\u60c5\u51b5 \n\t\t{\n\t\t\tcout<<\"0\";//\u4e0d\u4fe1\u4f60\u5220\u4e86\u8bd5\u8bd5\uff1f \n\t\t\treturn 0;\n\t\t}\n\t\tfor(int i=0;i<m;i++)\n\t\t\tcin>>a[i].jg>>a[i].cl;\n\t\tsort(a,a+m,cmp);//\u4e0a\u5427\uff0c\u6211\u7684STL\uff01\uff01\uff01 \n\t\tfor(int i=0;i<m;i++)//\u76f8\u5f53\u4e8e\u62dc\u8bbf\u6bcf\u5bb6\u5976\u5546 \n\t\t{\n\t\t\tfor(int j=1;j<=a[i].cl;j++)//\u76f8\u5f53\u4e8e\u4e00\u74f6\u74f6\uff08\u6876\u6876\uff09\u62ff\u5976 \n\t\t\t{\n\t\t\t\ts+=a[i].jg;//\u52a0\u4e0a\u5355\u4ef7 \n\t\t\t\tt++;//\u8ba1\u6570 \n\t\t\t\tif(t==n)//\u91cf\u591f\u4e86 \n\t\t\t\t{\n\t\t\t\t\tcout<<s;//\u8f93\u51fa\u5427 \n\t\t\t\t\treturn 0;//\u7ed3\u675f\u4e86\uff0c\u8be5\u56de\u5bb6\u4e86 \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\treturn 0;//\u55ef\u2026\u2026\u8fd9\u53e5\u8c8c\u4f3c\u4e0d\u9700\u8981\u4e86 \n\t}\n\n```\n\u6211\u76f8\u4fe1\uff08\u83ab\u540d\u81ea\u4fe1\uff09\u5927\u5bb6\u90fd\u80fd\u770b\u61c2\u5427\uff1f~~\u770b~~~~\u61c2\u7684\u4e3e\u4e2a\u722a\uff01\uff01~~\n\n",
        "postTime": 1565611040,
        "uid": 162141,
        "name": "\u716e\u9152\u8bba\u82f1\u96c4",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "\u5feb\u6392+\u8d2a\u5fc3\u3002\n\n\u9996\u5148\u5bf9\u4e8e\u6bcf\u79cd\u725b\u5976\u7684\u5355\u4ef7\u8fdb\u884c\u6392\u5e8f\uff0c\u4f46\u662f\u6bcf\u79cd\u725b\u5976\u7684\u5355\u4ef7\u548c\u6570\u91cf\u90fd\u5fc5\u987b\u4ea4\u6362\u3002\n\n\u7136\u540e\u7528\u8d2a\u5fc3\uff0c\u4ece\u5355\u4ef7\u6700\u5c0f\u7684\u725b\u5976\u5f00\u59cb\u679a\u4e3e\uff0c\u5982\u679c\u5269\u4e0b\u8981\u4e70\u7684\u725b\u5976\u5927\u4e8e\u8be5\u725b\u5976\u6570\u91cf\uff0c\u5c31\u4e70\u4e0b\u6240\u6709\u8fd9\u79cd\u725b\u5976\u3002\n\n\u6700\u540e\u5f53\u65e0\u6cd5\u4e70\u4e0b\u6240\u6709\u8fd9\u79cd\u725b\u5976\u7684\u65f6\u5019\uff0c\u5c31\u4e70\u6240\u6709\u80fd\u4e70\u7684\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nvoid sort(int,int);//\u5feb\u6392\nstruct milk\n{\n    int v;\n    int n;\n}a[5001];\nvoid sort(int l,int r)\n{\n    int i,mid,j,t;\n    i=l;j=r;\n    mid=a[(l+r)/2].v;\n    while(i<=j)\n    {\n        while(a[i].v<mid)\n        {\n            i++;\n        }\n        while(a[j].v>mid)\n        {\n            j--;\n        }\n        if(i<=j)\n        {\n            t=a[i].v;\n            a[i].v=a[j].v;\n            a[j].v=t;\n            t=a[i].n;\n            a[i].n=a[j].n;\n            a[j].n=t;\n            i++;\n            j--;\n        }\n    }\n    if(l<j) sort(l,j);\n    if(i<r) sort(i,r);\n}\nlong long wmilk;\nlong long ans=0;\nint n;\nint main()\n{\n    scanf(\"%lld%d\",&wmilk,&n);\n    int i,j,k=0;\n    for(i=1;i<=n;i++)\n    {\n        cin>>a[i].v>>a[i].n;\n    }\n    sort(1,n);\n    while(wmilk>a[k].n)\n    {\n        ans+=a[k].v*a[k].n;//\u88c5\u5165\u6240\u6709\n        wmilk=wmilk-a[k].n;\n        k++;\n    }\n    ans+=wmilk*a[k].v;//\u88c5\u5165\u6700\u540e\u7684\n    printf(\"%lld\",ans);\n    return 0;\n}\n```",
        "postTime": 1493705425,
        "uid": 38035,
        "name": "Uni_Tune",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "\u8fd9\u9898\u4e2a\u4eba\u611f\u89c9\u6bd4\u8f83\u6c34\u3002\n\n\n## \u76f4\u63a5\u8d2a\u5fc3\u5c31OK\u4e86\u554a\uff08\u5de8\u8d2a\u65e0\u6bd4\uff09\n\n\n\u8d2a\u5fc3\u7b56\u7565\u524d\u9762\u7684\u9898\u89e3\u8bf4\u7684\u6bd4\u6211\u6e05\u695a\uff0c\u6211\u5c31\u7b80\u7565\u8bf4\u4e00\u4e0b\u5427\uff1a\n\n\u5bf9\u82b1\u8d39\u6392\u5e8f\uff0c\u7136\u540e\u4ece\u5c0f\u5230\u5927\u626b\u4e00\u904d\n\n\u770b\u770b\u6570\u91cf\u662f\u5426\u8fbe\u5230\u6807\u51c6 \u8d85\u8fc7\u7684\u8bdd\u5c31\u5e73\u6389\n\n\n## \u6ce8\u610f\u82b1\u8d39(p[i])\u548c\u6570\u91cf(a[i])\u4e0d\u8981\u641e\u6df7\u2026\u2026\n\n\u81f3\u4e8e\u5176\u4ed6\u7684\u4e00\u4e9b\u95ee\u9898**\u8bf7\u770b\u4ee3\u7801**\n\n\u00b7\u00b7\u00b7cpp\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#define rint register int\nconst int maxn=5001; \nusing namespace std;\ninline int read(rint ans=0,rint sgn=' ',rint ch=getchar())   //\u8bfb\u5165\u4f18\u5316\uff0c\u5c31\u662f\u4e2a\u677f\u5b50\uff0c\u5927\u5bb6\u770b\u770b\u5c31\u597d\n{\n    for(;ch<'0' || ch>'9';sgn=ch,ch=getchar());\n    for(;ch>='0' && ch<='9';(ans*=10)+=ch-'0',ch=getchar());\n    return sgn-'-'?ans:-ans;\n}\nstruct Node{\n    int p,a;\n    inline bool operator < (const Node &a) const {    //\u8fd9\u91cc\u662f\u7ed3\u6784\u4f53\u6392\u5e8f\uff0c\u7b49\u4ef7\u4e8e\u5728\u7ed3\u6784\u4f53\u5916\u5199\u4e2abool cmp\n        return p<a.p;                                                     //\u7136\u800c\u5728sort\u51fd\u6570\u91cc\u9762\u56e0\u4e3a\u9ed8\u8ba4\u4f7f\u7528<\u6bd4\u8f83\uff0c\u6240\u4ee5\u5b9a\u4e49\u7684\u662f<\n    }\n}farmer[maxn];\nint n,m,sum=0,ans=0,cnt=0;\nint main(int argc,char **argv)\n{\n    n=read();m=read();\n    for(rint i=1;i<=m;i++)\n    {\n        farmer[i].p=read();farmer[i].a=read();     //\u5148\u82b1\u8d39\uff0c\u540e\u6570\u91cf\uff01\n    }\n    sort(farmer+1,farmer+m+1);   //\u7ed3\u6784\u4f53\u91cc\u9762\u5199\u5b8c\u4ee5\u540e\u5c31\u662f\u8fd9\u4e2a\u6548\u679c\n    while(sum<n)   //sum\u662f\u4e2a\u7ea6\u675f\u6761\u4ef6\u7684\u8ba1\u6570\u5668\n    {\n        int tmp=0;cnt++;\n        sum+=farmer[cnt].a;\n        if(sum>n)    tmp=sum-n,sum=n;   //\u5982\u679c\u8d85\u8fc7\u7684\u8bdd\u5c31\u5e73\u6389\n        ans+=farmer[cnt].p*(farmer[cnt].a-tmp);   //\u4fdd\u8bc1\u4e0d\u4f1a\u8d85\u8fc7\n    }\n    printf(\"%d\\n\",ans);\n    //fclose(stdin);fclose(stdout);\n    return 0;\n}\n```\n\u00b7\u00b7\u00b7\n\u5c31\u8fd9\u6837\u5427\n\n",
        "postTime": 1509335711,
        "uid": 23083,
        "name": "Eternalblue",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "\u8fd9\u662f Nathan312 \u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\u5416\uff08\u70b9\u8d5e\u652f\u6301\u4e00\u4e0b\u5457\uff0c\u6211\u60f3\u8ba9\u66f4\u591a\u4eba\u770b\u5230\u8fd9\u79cd\u89e3\u6cd5 qwq\uff09\u3002\r\n\r\n\u6211\u770b\u4e86\u4e00\u4e0b\u5176\u4ed6\u5927\u4f6c\u7684\u9898\u89e3\uff0c\u51e0\u4e4e\u90fd\u7528\u5230\u7ed3\u6784\u4f53 sort \u6392\u5e8f\uff0c\u6211\u6709\u4e00\u79cd\u4ee3\u7801\u5f88\u7b80\u77ed\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e0a\u53c8\u6709\u4f18\u5316\u7684\u89e3\u6cd5\u3002\u5176\u5b9e\u8fd9\u9898\u53ef\u4ee5\u7528**\u6876\u6392**\u3002\r\n\r\n## \u9898\u76ee\u5927\u610f\uff1a\r\n\u7ed9\u51fa\u9700\u8981\u7684**\u725b\u5976\u603b\u91cf** $n$\uff0c$m$ **\u4e2a\u519c\u6c11**\u3002\u6bcf\u4e2a\u519c\u6c11\u7ed9\u51fa**\u725b\u5976\u5355\u4ef7**\uff0c\u548c**\u4e00\u5929\u80fd\u5356\u51fa\u7684\u725b\u5976\u91cf**\u3002\u95ee\u4f60\u7528**\u6700\u5c11**\u591a\u5c11\u94b1\u80fd\u62ff\u5230\u603b\u91cf $n$ \u7684\u725b\u5976\uff1f\r\n\r\n## \u601d\u8def\uff1a\r\n\u8d2a\u5fc3\uff0c\u4f18\u5148\u53d6**\u4ef7\u503c\u4f4e**\u7684\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u5c3d\u53ef\u80fd\u5730\u964d\u4f4e\u6700\u540e\u603b\u5171\u9700\u8981\u7684\u4ef7\u503c\uff0c\u6240\u4ee5\u8981\u6392\u5e8f\uff0c\u7136\u540e\u4f9d\u6b21\u4ece\u4ef7\u503c\u4f4e\u7684\u5f80\u540e\u53d6\uff0c\u5230\u53d6\u4e0d\u4e0b\u4e3a\u6b62\u3002\r\n\r\n## \u5b9e\u73b0\u6b65\u9aa4:\r\n1. **\u9884\u5904\u7406**\uff1a\u5b9a\u4e49\u4e00\u4e2a $ans$ \u8bb0\u5f55\u6700\u540e\u603b\u5171\u9700\u8981\u7684\u4ef7\u503c\uff0c\u8fd8\u9700\u8981 $p$ \u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u4ef7\u503c\u7684\u725b\u5976\u6709\u591a\u5c11\u4efd\uff0c$p_i$ \u7684\u4e0a\u9650\u662f $1000$\uff0c\u6240\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u5927\u5c0f\u4e3a $1001$ \u7684 $p$ \u6570\u7ec4\u3002\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u519c\u6c11\u8bfb\u5165 $a$ \u5355\u4ef7\uff0c$b$ \u4efd\u6570\uff0c\u5728 $p$ \u6570\u7ec4\u5bf9\u5e94\u7684\u5355\u4ef7\u589e\u52a0\u5bf9\u5e94\u7684\u4efd\u6570\u3002\r\n\r\n1. **\u7b97\u6cd5\u5b9e\u73b0**\uff1a\u9996\u5148\u679a\u4e3e\u6bcf\u4e00\u4e2a\u4ef7\u503c\uff0c\u4ece $0$ \u5f00\u59cb\u679a\u4e3e\u5230 $1000$\u3002\u5982\u679c**\u5b58\u5728\u8fd9\u4e48\u4e00\u4e2a\u4ef7\u503c\uff0c\u4e14\u7528\u5f97\u5b8c**\uff1a\u7528 $n$ \u51cf\u53bb\u5bf9\u5e94\u4efd\u6570\uff0c$ans$ \u52a0\u4e0a\u4ef7\u503c\uff08\u5355\u4ef7$\\times$\u4efd\u6570\uff0c\u4e5f\u5c31\u662f $i \\times p[i]$ \uff09\u3002\u5982\u679c**\u5b58\u5728\u8fd9\u4e48\u4e00\u4e2a\u4ef7\u503c\uff0c\u4f46\u7528\u4e0d\u5b8c**\uff1a\u548c\u4e0a\u9762\u4e00\u6837\uff0c\u7528 $n$ \u51cf\u53bb\u5bf9\u5e94\u4efd\u6570\uff0c$ans$ \u52a0\u4e0a\u4ef7\u503c\uff08\u4e5f\u5c31\u662f $i \\times n$ \uff09\uff0c\u5230\u8fd9\u91cc\u5df2\u7ecf\u8fbe\u5230\u4e86\u9700\u8981\u7684\u6570\u91cf\uff0c\u6240\u4ee5 break \u9000\u51fa\u5faa\u73af\u3002\r\n\r\n1. \u8f93\u51fa\u6700\u540e\u603b\u5171\u9700\u8981\u7684\u6700\u5c0f\u4ef7\u503c $ans$\u3002\r\n\r\n\r\n## \u6570\u636e\u8303\u56f4\uff1a\r\n$0 \\leq n, a_i \\leq 2 \\times 10^6, 0 \\leq m \\leq 5000, 0 \\leq p_i \\leq 1000$\r\n\r\n\u4ece\u6570\u636e\u8303\u56f4\u4f60\u770b\u51fa\u4e86\u4ec0\u4e48\uff0c\u662f\u4e0d\u662f $p_i$ \u7684\u8303\u56f4\u6bd4\u8f83\u5c0f\uff0c\u4e5f\u5c31\u662f**\u503c\u57df\u5c0f**\uff0c\u7acb\u9a6c\u60f3\u5230\u7684\u5c31\u662f**\u6876\u6392**\u3002\r\n\r\n## CODE\uff1a\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nint n, m, ans, p[1001];\r\nint main() {\r\n\tscanf(\"%d%d\", &n, &m);\r\n\tint a, b;\r\n\tfor (int i = 1; i <= m; i++) {\r\n\t\tscanf(\"%d%d\", &a, &b);// a \u662f\u5355\u4ef7\uff0cb \u662f\u4efd\u6570\r\n\t\tp[a] += b;\r\n\t}\r\n\tfor (int i = 0; i <= 1000; i++) { // \u6ce8\u610f\u8d77\u70b9\u662f 0\r\n\t\tif (p[i] != 0 && n - p[i] >= 0) {// \u5982\u679c\u5b58\u5728\u8fd9\u4e48\u4e00\u4e2a\u4ef7\u503c\uff0c\u4e14\u7528\u5f97\u5b8c\r\n\t\t\tn -= p[i];\r\n\t\t\tans += (i * p[i]);\r\n\t\t} else if (p[i] != 0 && n - p[i] < 0) {// \u5982\u679c\u5b58\u5728\u8fd9\u4e48\u4e00\u4e2a\u4ef7\u503c\uff0c\u4f46\u7528\u4e0d\u5b8c\r\n\t\t\tans += (i * n);\r\n\t\t\tbreak; // \u6b64\u65f6 n \u7528\u5b8c\u4e86\uff0c\u9000\u51fa\u5faa\u73af\r\n\t\t}\r\n\t}\r\n\tcout << ans;\r\n\treturn 0;\r\n}\r\n\r\n\r\n```\r\n\u7ba1\u7406\u5458\u8f9b\u82e6\u4e86\uff0c\u611f\u8c22\u7ba1\u7406\u5458\u7684\u5ba1\u6838\uff01\uff08~~\u7ba1\u7406\u5458\u6700\u5e05\u4e86\uff0c\u8fd9\u7bc7\u9898\u89e3\u7ed9\u4e2a\u901a\u8fc7\u561b\uff0c\u7b2c\u4e00\u6b21\u5199\u4e0d\u5bb9\u6613 qwq~~\uff09\r\n",
        "postTime": 1675264850,
        "uid": 767295,
        "name": "Nathan312",
        "ccfLevel": 4,
        "title": "P1208 [USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk"
    },
    {
        "content": "# \u8fd9\u9898\u538b\u6839\u4e0d\u7528\u6392\u5e8f\n\n\u6211\u770b\u5230\u697c\u4e0a\u697c\u4e0b\u8bb8\u591a\u795e\u7287\u4eec\u90fd\u662f\u7528\u6392\u5e8f\u7684\uff0c\u53ef\u8fd9\u9898\u5b8c\u5168\u53ef\u4ee5\u4e0d\u6392\u5e8f\uff1a\n\n\u53ef\u4ee5\u5728\u6bcf\u4e00\u6b21\u8d2d\u4e70\u524d\u628a\u6240\u6709\u5355\u4ef7\u904d\u5386\u4e00\u904d\uff0c\u627e\u51fa\u5355\u4ef7\u6700\u5c11\u7684\uff0c\u4e70\u5b8c\u540e\u628a\u4ed6\u7684\u5355\u4ef7\u63d0\u52301000\u4ee5\u4e0a\u5c31\u884c\u4e86\uff08\u56e0\u4e3a\u5355\u4ef7<=1000\uff09\n\n\u6211\u7528\u4e86\u4e24\u4e2a\u6570\u7ec4p\u548ca\u6765\u8868\u793a\u5355\u4ef7\u548c\u6bcf\u4e2a\u519c\u592b\u7684\u6700\u5927\u4ea7\u91cf\uff08~~\u6211\u7edd\u5bf9\u4e0d\u4f1a\u544a\u8bc9\u4f60\u539f\u56e0\u662f\u6211\u4e0d\u4f1a\u7528\u6570\u636e\u7ed3\u6784~~\uff09\n\n\u5177\u4f53\u770b\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\nusing namespace std;\nint n,m,ans;\nint p[5050],a[5050];//p\u662f\u5355\u4ef7\uff0ca\u662f\u6bcf\u4e2a\u519c\u592b\u7684\u6700\u5927\u4ea7\u91cf\nint main(){\n    cin>>n>>m;\n    for(int i=0;i<m;i++)\n        cin>>p[i]>>a[i];//\u8f93\u5165\u5355\u4ef7\u548c\u4ea7\u91cf\n\twhile(n>0){\n\t\tint minp=0;//minp\uff1a\u6700\u4f4e\u5355\u4ef7\n\t\tfor(int i=1;i<m;i++)\n\t\t    if(p[i]<p[minp])//\u5982\u679c\u8fd8\u6709\u66f4\u4fbf\u5b9c\u7684\u5c31\u9009\u4ed6\n\t\t\t    minp=i; \n\t\tif(n<a[minp]){//\u5982\u679c\u53ef\u8d2d\u4e70\u7684\u6bd4\u9700\u8981\u7684\u591a\u5c31\u76f4\u63a5\u8865\u8db3\n\t\t\tans+=p[minp]*n;//\u76f4\u63a5\u8865\u8db3\n\t\t\tbreak;//\u8df3\u51fa\u5faa\u73af\n\t\t}\n\t\telse{//\u5426\u5219\u5168\u90e8\u90fd\u4e70\n\t\t\tans+=p[minp]*a[minp];\n\t\t\tp[minp]=1010;//\u628a\u4ed6\u7684\u5355\u4ef7\u63d0\u5230\u6570\u636e\u8303\u56f4\u5916\uff0c\u8ba9\u5b83\u4e0d\u4f1a\u518d\u88ab\u9009\u4e2d\uff08\u4f60\u88ab\u629b\u5f03\u4e86\uff09\n\t\t\tn-=a[minp];//\u51cf\u53bb\u4e70\u5230\u7684\u6570\u91cf\n\t\t}\n\t} \n\tcout<<ans<<endl;\n\treturn false;//\u6492\u82b1\n}\n```\n\n~~\u6211\u7edd\u5bf9\u4e0d\u4f1a\u544a\u8bc9\u4f60\u6211\u7528\u8fd9\u4e2a\u4ee3\u7801\u4e00\u6b21\u5c31\u8fc7\u4e86~~",
        "postTime": 1571059705,
        "uid": 246288,
        "name": "yzx4188",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "\u8fd9\u9898\u771f\u662fSTL\u7684\u597d\u5e7f\u544a\u554a\u2026\u2026\u7528pair+sort\u5c31\u5f88\u65b9\u4fbf\u4e86\u2026\u2026\n\n```cpp\n\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint n,m,ans,i,t;\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cin>>n>>m;\n    pair<int,int> a[m];\n    for(;i<m;i++)cin>>a[i].first>>a[i].second;\n    sort(a,a+m);\n    for(i=0;n>0;i++)t=min(n,a[i].second),n-=t,ans+=t*a[i].first;\n    cout<<ans;\n    \n    return 0;\n}\n\n```",
        "postTime": 1438834992,
        "uid": 7487,
        "name": "plazum",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "\u5173\u952e\u8bcd\uff1a  \n###\u8d2a\u5fc3\uff0c\u6a21\u62df\uff01\uff01\uff01   \n\u5565\u90fd\u4e0d\u8bf4\u4e86\uff0c\u76f4\u63a5\u770b\u4ee3\u7801\n```\n#include <algorithm>\n//\u5feb\u6392\u9700\u8981 \n#include <iostream>\n#include <utility>\n//pair\u6240\u9700\u8981\u7684\u5934\u6587\u4ef6 \n#include <cstdio>\n/*\n\u6807\u51c6\u5316\u8f93\u5165\u8f93\u51fa\uff08scanf\u548cprintf\uff09\n\u4e0d\u4f1a\u7528\u7684\u540c\u5b66\u8981\u5e38\u5e38\u4f7f\u7528\uff0c\u8fd9\u4e2a\u6bd4cin\u548ccout\u5feb \n*/\nusing namespace std;\nint n,m;\n//n\u662f\u4e00\u5171\u9700\u8981\u591a\u5c11\u4efd\u725b\u5976\uff0cm\u662f\u6709\u591a\u5c11\u4eba\u53ef\u4ee5\u63d0\u4f9b\u725b\u5976 \n//\u8fd9\u4e2an\u4e5f\u662f\u5b9e\u65f6\u66f4\u65b0\u7684 \npair < int , int > p[5005];//\u7b2c\u4e00\u5173\u952e\u5b57\uff1a\u8d39\u7528\uff1b\u7b2c\u4e8c\u5173\u952e\u5b57\u6570\u91cf\n/*\npair\u662fSTL\u4e2d\u7684\u4e00\u4e2a\uff0c\n\u6709\u4e24\u4e2a\u53c2\u6570\u7ec4\u6210 \uff0c\n\u5206\u522b\u662f\u7b2c\u4e00\u5173\u952e\u5b57\u548c\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\n\u8fd9\u91cc\u5e94\u7528\u7684\u539f\u56e0\u5c31\u662f\uff1a\npair \u5b9a\u4e49\u7684\u6570\u7ec4\u6392\u5e8f\u6309\u7167\u7b2c\u4e00\u5173\u952e\u5b57\u4f18\u5148\u6392\u5e8f\uff0c\n\u7b2c\u4e00\u5173\u952e\u5b57\u76f8\u540c\u6309\u7167\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\u7684\u7279\u70b9\n\n\u5c31\u628apair\u5f53\u505a\u4e00\u4e2a\u53d8\u91cf first\uff0c\u53e6\u4e00\u4e2a\u53d8\u91cf\u662fsecond\u7684\u7ed3\u6784\u4f53\u5c31\u597d\u4e86\uff0c\n\u5c31\u662f\u5728\u5feb\u901f\u6392\u5e8f\u6392\u5e8f\u65f6\u53ef\u4ee5\u5077\u61d2\u5c11\u5199\u4e00\u4e2acmp\u3002\n\npair\u7684\u8c03\u7528\u4e5f\u5f88\u7b80\u5355\uff0c\n//eg\uff08\u4f8b\u5982\uff09pair < int ,int > s ;\uff08\u8981\u52a0\u5165\u5206\u53f7\u7684 )\ns.first \u5c31\u662f\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\ns.second\u5c31\u662f\u7b2c\u4e8c\u5173\u952e\u5b57 \n*/\nlong long sum;\n//\u4e0d\u7528long long\u53ef\u80fd\u8981\u7206\u7684 ,sum\u5c31\u662f\u6700\u540e\u8981\u8f93\u51fa\u7684 \nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n\t//\u8f93\u5165\u8f93\u51fa\uff0c\u8bb0\u5f97\u52a0\u53d6\u5730\u5740\u7b26\u201c&\u201d \n    for(int i=0;i<m;++i)\n\t//\u5faa\u73af\u8bfb\u5165\u6570\u636e\uff0c\u7b2c\u4e00\u5173\u952e\u5b57\u662f\u5355\u4ef7\uff0c\u7b2c\u4e8c\u5173\u952e\u5b57\u662f\u6570\u91cf \n    scanf(\"%d%d\",&p[i].first,&p[i].second);\n    sort(p,p+m);\n\t//\u5feb\u6392\uff0c\u56e0\u4e3a\u7528\u4e86pair\u6240\u4ee5\u4e0d\u7528\u5199cmp\u6392\u5e8f\u51fd\u6570 \n    for(int i=0;i<m;++i)\n\t//\u6392\u5e8f\u597d\u4e86\u6240\u4ee5\u4ece\u5934\u5f00\u59cb\u904d\u5386 \n    {\n\t//\u8fd9\u91cc\u7684p[i]\u65b9\u6848\u90fd\u662f\u5f53\u524d\u6ca1\u6709\u4e70\u5976\u7684\u5355\u4ef7\u6700\u4fbf\u5b9c\u7684 \n\t    if(n<=p[i].second)\n\t\t//\u5224\u65ad\u5982\u679c\u9700\u8981\u4e70\u7684\u5976<=\u8fd9\u4e2a\u5976\u519c\u5356\u7684\u6700\u9ad8\u6570\u91cf \n\t    {\n\t\t    sum+=p[i].first*n;\n\t\t\t//sum\u52a0\u4e0a\u8fd9\u4e2a\u4eba\u4e70\u7684\u5355\u4ef7*\u5269\u4e0b\u7684\u9700\u8981\u8d2d\u5165\u7684\u725b\u5976 \n\t\t\tbreak;\n\t\t\t//\u56e0\u4e3a\u5df2\u7ecf\u4e70\u591f\u4e86\uff0c\u6240\u4ee5\u8df3\u51fa\u5faa\u73af \n\t\t}\n\t\t/*\n\t\t\u56e0\u4e3a\u5982\u679c\u4e70\u591f\u4e86\u5c31\u4f1a\u8df3\u51fa\u5faa\u73af\uff0c\n\t\t\u6240\u4ee5\u8fd9\u91cc\u4e0d\u7528\u5728\u52a0\u4e00\u4e2aif()\u5224\u65ad\u4e86\n\t\t\u90fd\u662f\u5728n>\u5976\u519c\u5356\u7684\u6700\u9ad8\u6570\u91cf \n\t\t\u6240\u4ee5\u5f53\u9047\u5230\u8fd9\u4e2a\u4eba\u7684\u65f6\u5019\u5c31\u4f1a\u4e70\u5149\u4ed6\u63d0\u4f9b\u7684\u5976\n\t\t\u2014\u2014\u56e0\u4e3a\u8d2a\u5fc3\uff0c\n\t\t\u4ed6\u4e70\u7684\u662f\u5f53\u524d\u6700\u4fbf\u5b9c\u7684\uff0c\uff08sort\u6392\u5e8f\u8fc7\uff09 \n\t\t*/\n\t\tsum+=p[i].first*p[i].second;\n\t\t//sum\u52a0\u4e0a\u4e70\u5149\u8fd9\u4e2a\u4eba\u63d0\u4f9b\u7684\u725b\u5976\u7684\u82b1\u8d39 \n\t\tn-=p[i].second; \n\t\t/*\u56e0\u4e3a\u6211\u4eec\u7684n\u662f\u5b9e\u65f6\u66f4\u65b0\u7684\uff0c\n\t\t\u6240\u4ee5\uff0c\u8fd9\u4e2a\u5730\u65b9n\u8981\u51cf\u53bb\u4e70\u5165\u7684\u725b\u5976\u7684\u6570\u91cf\n\t\t\u8fdb\u5165\u4e0b\u4e00\u5c42\u5faa\u73af \n\t    */\n\t\t}\n\tprintf(\"%d\\n\",sum);//\u6700\u540e\u628a\u7b54\u6848\u8f93\u51fa\uff08\u6211\u4e2a\u4eba\u4e60\u60ef\u5728\u6700\u540e\u8f93\u51fa\u4e00\u4e2a\u6362\u884c\uff0c\u5e76\u4e0d\u7b97\u9519\uff09 \n\treturn ~~(0-0);//\u6492\u82b1\u7ed3\u5c3e \n}\n ```\n\u8bf7\u5927\u5bb6\u6ce8\u610f\uff0c\u7279\u522b\u662f\u8fd8\u4e0d\u4f1a\u4f7f\u7528STL \u7684\u5c0f\u4f19\u4f34\uff0cSTL\u662f\u4e2a\u597d\u4e1c\u897f\uff0c\u4e00\u5b9a\u8981\u8bb0\u5f97\u4f7f\u7528\u554a\uff01",
        "postTime": 1550471401,
        "uid": 149537,
        "name": "Atlicd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nint rn,nn;\nint p[5001];  //\u4ef7\u683c\nint n[5001]; //\u6570\u91cf\nint k=0; //\u94b1\nint main()\n{\n    int i,j,t;\n    cin>>rn>>nn; //\u8f93\u5165\n    for(i=1;i<=nn;i++)\n        cin>>p[i]>>n[i];\n        for(i=1; i<=nn; i++) //\u6392\u5e8f\n    {\n        for(j=nn; j>=i; j--)\n            if(p[j]<p[j-1])\n            {\n                t=p[j-1];\n                p[j-1]=p[j];\n                p[j]=t;\n                t=n[j-1];\n                n[j-1]=n[j];\n                n[j]=t;\n            }\n    }\n    i=1;\n    while(rn>0)//\u8d2a\u5fc3\u7b97\u6cd5\n    {\n            if(rn>=n[i])\n        {\n            k=k+n[i]*p[i];\n            rn=rn-n[i];\n        }\n        else\n        {\n            k=k+rn*p[i];\n            rn=0;\n        }\n        i++;\n    }\n    cout<<k;\n        return 0;\n}\n\n```",
        "postTime": 1499086609,
        "uid": 37007,
        "name": "sky2001108",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "\u770b\u5230\u8fd9\u9898\u76ee\u7684\u65f6\u5019\uff0c\u6211\u4e5f\u662f\u60f3\u6392\u5e8f\u6765\u89e3\uff0c\u540e\u6765\u770b\u5230\u519c\u6c11\u7684\u725b\u5976\u7684\u5355\u4ef7\u6700\u591a\u662f1000\u65f6\u5019\uff0c\u800c\u4e14\u6bcf\u4e2a\u5355\u4ef7\u90fd\u5bf9\u5e94\u4e86\u4e00\u4e2a\u6570\u91cf\uff0c\u6211\u5c31\u60f3\u7528\u4e00\u4e2a1000\u5927\u5c0f\u7684\u6570\u7ec4\u6765\u5b58\u653e\u519c\u6c11\u725b\u5976\u5355\u4ef7\u5bf9\u5e94\u7684\u725b\u5976\u6570\u91cf\u3002\u5728\u6c42\u89e3\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u904d\u5386\u4e00\u4e0b\u8fd9\u4e2a\u6570\u7ec4\uff0c\u5c31\u80fd\u89e3\u51b3\u95ee\u9898\n\n\n```cpp\n#include <iostream>\nusing namespace std;\nint main(){\n    long long n,m,ai,pi[1001]={0},sum=0; \n    int i,price,flag[1001]={0};\n    cin>>n>>m;\n    for(i=0;i<m;i++){\n        cin>>price>>ai;//\u519c\u6c11\u725b\u5976\u5355\u4ef7\u548c\u6570\u91cf \n        pi[price]+=ai;//\u7528\u76f8\u52a0\u662f\u56e0\u4e3a\u53ef\u80fd\u6709\u76f8\u540c\u5355\u4ef7\u7684\u6570\u91cf\uff0c\u4e0d\u7136\u4f1a\u8986\u76d6\u503c \n        flag[price]=1;//\u6807\u5fd7\u8fd9\u4e2a\u503c\u662f\u6709\u7528\u7684\uff0c\u5b58\u5728\u725b\u5976\u4e0d\u8981\u94b1\u7684\u60c5\u51b5 \n    }\n    for(i=0;i<=1000;i++)\n        if(flag[i]){\n            n-=pi[i];//\u9700\u8981\u6570\u91cf\u51cf\u53bb\u519c\u6c11\u80fd\u63d0\u4f9b\u7684\u6570\u91cf \n            if(n>0) sum+=(i*pi[i]);//\u5927\u4e8e0\u5219\u8fd8\u6ca1\u6536\u8d2d\u5b8c\u6210\uff0c\u53ef\u4ee5\u8bb2\u5f53\u524d\u5355\u4ef7\u7684\u5168\u90e8\u6536\u8d2d \n            else {n+=pi[i];sum+=(i*n);break;}//\u5c0f\u4e8e0\u6216\u8005\u7b49\u4e8e0\u8868\u793a\u521a\u597d\u6536\u8d2d\u591f\u6216\u8005\u6536\u591a\u4e86\uff0c\u5c31\u5f97\u6062\u590d\u539f\u672c\u7684\u6570\u91cf\u6309\u5269\u4f59\u91cf\u6536\u8d2d \n        }\n    cout<<sum;\n}\n\n```",
        "postTime": 1496498186,
        "uid": 44962,
        "name": "a3375948",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "    \n```cpp\n#include<stdio.h>\nstruct milk // \u7ed3\u6784\u4f53\u5b58\u50a8\u725b\u5976\u7684\u5355\u4ef7\u548c\u6570\u91cf\n{\n    long  money;\n    long  count;\n}a[5000]; // \u6700\u591a\u67095000\u4e2a\u5976\u519c\nint main(void)\n{\n    long rest,sum,price;\n    long t,i,j,n,m,p;\n    sum=0;\n    price=0;\n    scanf(\"%ld%ld\",&n,&m);\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d%d\",&a[i].money,&a[i].count);\n    }\n    for(i=0;i<m-1;i++)  // \u5192\u6ce1\u6392\u5e8f     \u725b\u5976\u7684\u5355\u4ef7\u3001\u6570\u91cf \n    {\n        for(j=0;j<m-i-1;j++)\n        {\n            if(a[j].money>a[j+1].money)\n            {\n                t=a[j].money;\n                a[j].money=a[j+1].money;\n                a[j+1].money=t; \n                p=a[j].count;\n                a[j].count=a[j+1].count;\n                a[j+1].count=p; \n            }\n        }\n    } \n    for(i=0;sum<n;i++)   // \u9000\u51fa\u5faa\u73af\u7684\u65f6\u5019sum>=n\n    {\n        sum=sum+a[i].count;\n        price=price+a[i].count*a[i].money;    \n    }\n    if(sum==n)\n    {\n        printf(\"%d\\n\",price);\n    }\n    else\n    {\n        rest=sum-n;\n        price=price-rest*a[i-1].money;\n        printf(\"%d\\n\",price);\n    }\n    return 0;\n}\n```",
        "postTime": 1469428733,
        "uid": 19977,
        "name": "\u4f55\u82d7\u82d7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "\u770b\u5230\u597d\u591a\u5946\u4f6c\u5728\u7528\u7ed3\u6784\u4f53\u6392\u5e8f\uff0c\u672c\u849f\u84bb\u745f\u745f\u53d1\u6296qwq\n\n\u6211\u521a\u5f00\u59cb\u505a\u8fd9\u9053\u9898\u7684\u65f6\u5019\u538b\u6839\u6ca1\u60f3\u5230\u6392\u5e8f\n\n## ~~\u7eaf\u6a21\u62df\u5c31\u505a\u5b8c\u4e86\u561b\u3002~~\n\n**\u601d\u8def\uff1a\u6bcf\u6b21\u5faa\u73af\u627e\u5230\u5f53\u524d\u725b\u5976\u5355\u4ef7\u6700\u5c0f\u503c\uff0c\u7136\u540e\u7edf\u8ba1\u94b1\u6570\u3001\u5220\u6389\u8fd9\u4e2a\u725b\u5976\u7684\u5546\u5bb6\uff0c\u5982\u679c\u725b\u5976\u8fd8\u6ca1\u6709\u8fbe\u5230\u9700\u8981\u7684\u6570\u91cf\uff0c\u90a3\u5c31\u63a5\u7740\u5faa\u73af\u3002**\n\nAC\u4ee3\u7801+\u6ce8\u91ca\uff1a\n\n```cpp\n#include<bits/stdc++.h>//\u4e60\u60ef\u6027\u6253\u4e07\u80fd\u5934\uff08\u597d\u5b69\u5b50\u522b\u5b66\u6211\uff09\nint main()\n{\n\tint n,m,s=0,r,minqwq;\n    //n=\u6240\u9700\u725b\u5976\u7684\u6570\u91cf\uff0cm=\u5546\u5e97\u4e2a\u6570\uff0cs=\u94b1\uff0cr=\u6807\u8bb0\uff0cminqwq=\u5f53\u524d\u6700\u5c0f\u503c\uff1b\n\tscanf(\"%d%d\",&n,&m);\n\tint a[m],b[m];//\u4e2a\u4eba\u4e60\u60ef\uff0ca[]=\u5355\u4ef7\uff0cb[]=\u6570\u91cf\uff1b\n\tfor(int i=0;i<m;i++)\n\t\tscanf(\"%d%d\",&a[i],&b[i]);//\u8f93\u5165\u725b\u5976\u5355\u4ef7\u548c\u6570\u91cf\n\twhile(n>0)//\u968f\u7740\u5df2\u8d2d\u725b\u5976\u6570\u91cf\u7684\u589e\u591a\uff0c\u9700\u8981\u7684\u725b\u5976\u7684\u6570\u91cf\u4e0d\u65ad\u51cf\u5c11\u3002\u5f53\u4e0d\u9700\u8981\u518d\u8d2d\u4e70\u725b\u5976\u65f6\uff0c\u9000\u51fa\u5faa\u73af\u3002\n\t{\n\t\tminqwq=9999;//\u6700\u5c0f\u503c\u5b9a\u4e49\u6700\u5927\n\t\tfor(int i=0;i<m;i++)\n\t\t    if(a[i]<minqwq)\n\t\t        minqwq=a[i];//\u627e\u5230\u5f53\u524d\u6700\u5c0f\u503c\n\t\tfor(int i=0;i<m;i++)\n\t\t    if(a[i]==minqwq)\n\t\t    {\n\t\t    \tr=i;//\u6807\u8bb0\u725b\u5976\u5546\u5bb6\u7684\u53f7\u7801\uff08\u5c31\u76f8\u5f53\u4e8e\u4f60\u77e5\u9053\u8fd9\u5bb6\u5546\u5e97\u7269\u7f8e\u4ef7\u5ec9\uff0c\u4f60\u5c31\u8bb0\u5728\u672c\u5b50\u4e0a\uff0c\u4e0b\u6b21\u7ee7\u7eed\u6765\u8fd9\u5bb6\u5546\u5e97\u4e70\u4e1c\u897f\uff09\n\t\t    \tbreak;\n\t\t\t}\n\t\tif(n>=b[r])//\u5982\u679c\u9700\u8981\u725b\u5976\u7684\u6570\u91cf\u5927\u4e8e\u7b49\u4e8e\u5546\u5e97\u91cc\u7684\u725b\u5976\u6570\u91cf\n\t\t{\n\t\t\ts=s+a[r]*b[r];//\u8bb0\u5f55\u94b1\u6570\n\t\t\tn=n-b[r];//\u6240\u9700\u725b\u5976\u7684\u6570\u91cf\u51cf\u5c11\n\t\t}\n\t\telse\n\t\t{\n\t\t\ts=s+n*a[r];//\u8bb0\u5f55\u94b1\u6570\n\t\t\tn=0;//\u4e0d\u9700\u8981\u518d\u4e70\u725b\u5976\u4e86\n\t\t}\n\t\ta[r]=99999;//\u628a\u4ef7\u683c\u7092\u5230\u5929\u4e0a\u53bb\n\t\tb[r]=0;//\u725b\u5976\u5356\u5b8c\u4e86\n        //\u4e0a\u9762\u4e24\u884c\u76f8\u5f53\u4e8e\u544a\u8bc9\u7535\u8111\uff1a\u8fd9\u5bb6\u725b\u5976\u5e97\u4e0d\u5356\u725b\u5976\u4e86\uff0c\u4f60\u4e0d\u80fd\u8fdb\u4ed6\u7684\u5e97\n\t}\n\tprintf(\"%d\",s);//\u8f93\u51fa\u603b\u94b1\u6570\n\treturn 0;\n} \n```\n\n\u5b8c\u7f8e\u7ed3\u675f\uff01\u4e07\u7269\u7686\u53ef\u6a21\u62df\uff01~~\u5e72\u561b\u975e\u8981\u7528\u7ed3\u6784\u4f53\u5462~~",
        "postTime": 1572094766,
        "uid": 182281,
        "name": "CandyCandyFruit",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "\u7ffb\u4e86\u4e00\u4e0b\u9898\u89e3\uff0c\u53d1\u73b0~~\u51e0\u4e4e~~\u6ca1\u6709\u4eba\u8ddf\u6211\u5199\u7684\u4e00\u6837\uff0c\u5411\u5927\u5bb6\u4ecb\u7ecd\u4e00\u4e2a\u795e\u5947\u7684\u4e1c\u897f\u3002\n## c++\u798f\u5229\uff1a\npriority_queue\uff08\u4f18\u5148\u961f\u5217\uff09\n\n\u5927\u4f6c\u53ef\u4ee5\u76f4\u63a5\u8df3\u81f3\u6b63\u6587\u90e8\u5206\uff0c\u4ee5\u4e0b\u5185\u5bb9\u4e3a\u4e2a\u4eba\u5bf9\u4f18\u5148\u961f\u5217\u7684\u7406\u89e3\n\n\u4f18\u5148\u961f\u5217\u7684\u6838\u5fc3\u601d\u60f3\u5c31\u662f\u7ef4\u62a4\u4e00\u4e2a\u5927\u6839\u5806\u3002\u6bcf\u6b21\u7528O(logn)\u7684\u65f6\u95f4\u8fdb\u884c\u63d2\u5165\u3001\u67e5\u8be2\u548c\u53d6\u51fa\u7684\u64cd\u4f5c\u3002\u53d6\u51fa\u64cd\u4f5c\u4f1a\u53d6\u51fa\u6839\u8282\u70b9\uff0c\u63d2\u5165\u64cd\u4f5c\u4f1a\u52a0\u5165\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u3002\u63d2\u5165\u548c\u53d6\u51fa\u64cd\u4f5c\u540e\u90fd\u4f1a\u91cd\u65b0\u7ef4\u62a4\u8fd9\u4e2a\u5806\u3002\u5177\u4f53\u64cd\u4f5c\u53ef\u4ee5\u53c2\u7167\u9898\u89e3\u4e2d\u53e6\u4e00\u4f4ddalao\u7684\u624b\u5199\u5806\u3002\n\n\u4f18\u5148\u961f\u5217\u4e2d\u6bcf\u4e2a\u5143\u7d20\u90fd\u88ab\u8d4b\u4e88\u4e86\u4e00\u4e2a\u4f18\u5148\u7ea7\u3002\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u5143\u7d20\u4f1a\u6700\u5148\u53d6\u51fa\u3002\u4e00\u822c\u6765\u8bf4\u90fd\u662f\u6309\u5927\u5c0f\u6765\u6392\u5217\u4f18\u5148\u7ea7\u7684\uff0c\u8d8a\u5927\u7684\u5143\u7d20\u4f18\u5148\u7ea7\u8d8a\u9ad8,\u4f18\u5148\u961f\u5217\u6700\u5927\u597d\u5904\u5c31\u662f\u51cf\u5c11\u7f16\u7801\u91cf\uff08\u5e9f\u8bdd\uff09\u3002\u901a\u8fc7\u91cd\u8f7d\u8fd0\u7b97\u7b26\u53ef\u4ee5\u6539\u53d8\u4f18\u5148\u961f\u5217\uff08\u6bd4\u5982\u6539\u6210\u5c0f\u6839\u5806\uff09\u3002\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u591a\u7ef4\u4f18\u5148\u961f\u5217\u4e2d\uff08\u4f8b\u5982priority_queue<pair<int,int> >\uff09\u5f71\u54cd\u5143\u7d20\u4f18\u5148\u7ea7\u7684\u53ea\u6709\u7b2c\u4e00\u7ef4\u3002\u60f3\u8981\u591a\u7ef4\u5f71\u54cd\u5143\u7d20\u7684\u4f18\u5148\u7ea7\uff1f~~\u56de\u53bb\u5199\u91cd\u8f7d~~\n## \u4f18\u5148\u961f\u5217\u652f\u6301\u7684\u64cd\u4f5c\n\u56e0\u4e3a\u9898\u76ee\u4e2d\u67092\u4e2a\u6570\u636e\uff0c\u6240\u4ee5\u7528\u4e8c\u7ef4\u4f18\u5148\u961f\u5217\u5b58\u50a8\u3002\u4ee5\u4e0b\u64cd\u4f5c\u4e5f\u5747\u4e3a2\u7ef4\u4f18\u5148\u961f\u5217\u652f\u6301\u7684\u3002\n\n1.q.top().first\uff1a\u67e5\u8be2\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u7b2c\u4e00\u7ef4\uff08\u5bf9\u5e94\u4e3a\u9898\u4e2d\u7684\u4ef7\u94b1\uff09\n\n2.q.top().second\uff1a\u540c\u4e0a\uff0c\u5bf9\u5e94\u4e3a\u9898\u4e2d\u7684\u725b\u5976\u91cf\n\n3.q.push(make_pair(a,b))\u5411\u961f\u5217\u4e2d\u63d2\u5165(a,b)\u5143\u7d20\n\n4.q.pop()\u5f39\u51fa\u9996\u4e2a\u5143\u7d20\u3002\n\n\u4ee5\u4e0a\u4e3a\u6b64\u9898\u7528\u5230\u7684\u64cd\u4f5c\uff0c\u5176\u4ed6\u64cd\u4f5c\uff0c\u81ea\u884c\u67e5\u9605\u8d44\u6599\u3002\n## \u6b63\u6587\u90e8\u5206\n\u6ca1\u770b\u9898\u7684\u5c0f\u4f19\u4f34[\u8bf7\u5148\u770b\u9898](https://www.luogu.org/problem/P1208)\n\n\u5f88\u660e\u663e\uff0c\u8bfb\u4e00\u7ec4\u5c31\u8fdb\u5165\u961f\u5217\u3002\u4ef7\u683c\u81ea\u52a8\u6392\u5e8f\u540e\u6bcf\u6b21\u53d6\u51fa\u9996\u4e2a\u5143\u7d20\uff0c\u5982\u679c.second>=\u5269\u4f59\u6240\u9700\u725b\u5976\u6570\u91cf\uff0cans+=top().first* \u5269\u4f59\u9700\u8981\u6570\uff0c\u8f93\u51fa\u7b54\u6848\u3002\u5426\u5219ans+=top().first* top.()second\u3002\u7136\u540e\u5f39\u51fa\u9996\u4e2a\u5143\u7d20\u3002\n\n\u7136\u540e\u4ee3\u7801\u6765\u4e86\n```cpp\n#include<cstdio>\n#include<queue>\npriority_queue<pair<int,int> >q;\nint main(){\n\tint n,m,ans=0,i,j;\n\tscanf(\"%d%d\",&n,&m);\n\tint a,b;\n\tfor(i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tq.push(make_pair(a,b));\n\t}\n\tint all=0;\n\twhile(1){\n\t\tint k=-q.top().first;\n\t\tif(all+q.top().second>=n){\n\t\t\tans+=(n-all)*k;\n\t\t\tprintf(\"%d\",ans);\n\t\t\treturn 0;\n\t\t}\n\t\tall+=q.top().second;\n\t\tans+=q.top().second*k;\n\t\tq.pop();\n\t}\n}\n```\n\u522b\u7740\u6025\u3002\u8fd9\u4e2a\u4ee3\u7801\u7f16\u8bd1\u90fd\u8fc7\u4e0d\u53bb\u3002\u9519\u8bef\u4fe1\u606f\uff1aerror:priority_queue does not name a type\n\n\u6240\u4ee5\uff0c\u8fd9\u91cc\u80af\u5b9a\u7f3a\u4e86\u4ec0\u4e48\u4e1c\u897f-----using namespace std;\u5b9a\u4e49\u6240\u6709\u6808\u548c\u961f\u5217\u90fd\u9700\u8981\u7684\u4e00\u53e5\u8bdd\u3002\n\n\u4e8e\u662f\uff0c\u62ff\u7740\u6539\u5b8c\u7684\u7801\uff0c\u63d0\u4ea4\uff0c\u7b49\u5f85AC\n```cpp\n#include<cstdio>\n#include<queue>\nusing namespace std;\npriority_queue<pair<int,int> >q;\nint main(){\n\tint n,m,ans=0,i,j;\n\tscanf(\"%d%d\",&n,&m);\n\tint a,b;\n\tfor(i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tq.push(make_pair(a,b));\n\t}\n\tint all=0;\n\twhile(1){\n\t\tint k=-q.top().first;\n\t\tif(all+q.top().second>=n){\n\t\t\tans+=(n-all)*k;\n\t\t\tprintf(\"%d\",ans);\n\t\t\treturn 0;\n\t\t}\n\t\tall+=q.top().second;\n\t\tans+=q.top().second*k;\n\t\tq.pop();\n\t}\n}\n```\n\u7136\u540e\u4f60\u5c31\u201c\u7a3b\u82b1\u9999\u91cc\u8bf4\u4e30\u5e74\uff0c\u542c\u53d6WA\u58f0\u4e00\u7247\u201d\u3002\n\u4e3a\u4ec0\u4e48\uff1f\u6d4b\u8bd5\u6837\u4f8b\uff0c\u5f97\u5230\u7684\u662f840\uff0c\u4e0d\u662f630\uff01840=9* 40+8* 60\n\n\u539f\u56e0\u5f88\u7b80\u5355\u3002\u961f\u5217\u7ef4\u62a4\u7684\u662f\u4e00\u4e2a\u5927\u6839\u5806\uff0c\u53ef\u4f60\u8981\u53d6\u51fa\u7684\u662f\u6700\u5c0f\u7684\u3002\u4f60\u9700\u8981\u628a\u5927\u6839\u5806\u8f6c\u5316\u6210\u5c0f\u6839\u5806\u3002\u91cd\u8f7d\uff1f~~\u544a\u8bc9\u4f60\uff0c\u4e0d\u53ef\u80fd\u7684~~\n\n\u6ce8\u610f\u4e00\u4e2a\u6027\u8d28\u3002\u82e5a>b,c<0\u5219a* c<b* c\u3002\n\n\u5b66\u8fc7dijkstra\u7684mlogm\u7b97\u6cd5\u7684\u5e94\u8be5\u77e5\u9053\u3002\u5b58d[y]\u7684\u65f6\u5019\u6211\u4eec\u5b58\u7684\u662f(-d[y],y)\uff1b\n\n\u6ca1\u9519\uff0c\u5229\u7528\u4e0d\u7b49\u5f0f\u7684\u6027\u8d283\uff0c\u7b2c\u4e00\u9879\u6bcf\u6b21\u90fd\u53d6\u76f8\u53cd\u6570\uff0c\u5c31\u53ef\u4ee5\u5b8c\u7f8e\u8f6c\u5316\u6210\u5c0f\u6839\u5806\u4e86\u3002\u4ef7\u94b1\u8ba1\u7b97\u65f6\u53d6-q.top().first\u3002\n\n\u5347\u7ea7\u540e\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<queue>\nusing namespace std;\npriority_queue<pair<int,int> >q;\nint main(){\n\tint n,m,ans=0,i,j;\n\tscanf(\"%d%d\",&n,&m);\n\tint a,b;\n\tfor(i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tq.push(make_pair(-a,b));\n\t}\n\tint all=0;\n\twhile(1){\n\t\tint k=-q.top().first;\n\t\tif(all+q.top().second>=n){\n\t\t\tans+=(n-all)*k;\n\t\t\tprintf(\"%d\",ans);\n\t\t\treturn 0;\n\t\t}\n\t\tall+=q.top().second;\n\t\tans+=q.top().second*k;\n\t\tq.pop();\n\t}\n}\n```\n\u7136\u540e\u4f60\u5c31\u4f1a[\u50cf\u6211\u8fd9\u6837\u6302\u6389](https://www.luogu.org/record/23261601)\n\nwhy?\n\n\u7b2c\u4e8c\u4e2a\u70b9\u7684\u6570\u636e\uff1a\n#### input\n0 0\n#### output\n0\n\n\u770b\u770b\u7a0b\u5e8f\u91cc\u9762\u3002q\u961f\u5217\u4e3a\u7a7a\uff0cq.top().first\u4e3a\u4e0d\u5b58\u5728\u7684\u6570\u636e\uff0c\u4e0dRE\u624d\u602a\u3002\n\n\u56e0\u4e3a\u6570\u636e\u4fdd\u8bc1\u6709\u89e3\uff0c\u6240\u4ee5\u7279\u5224 n=0\u5c31\u53ef\u4ee5\u4e86\u3002\n\n#### AC\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<queue>\nusing namespace std;\npriority_queue<pair<int,int> >q;\nint main(){\n\tint n,m,ans=0,i,j;\n\tscanf(\"%d%d\",&n,&m);\n\tif(n==0){\n\t\tputs(\"0\");//printf\u4e5f\u884c\u3002\u7eaf\u5c5e\u624b\u61d2\n\t\treturn 0;\n\t}\n\tint a,b;\n\tfor(i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tq.push(make_pair(-a,b));//\u5b58\u8d1f\u6743\uff0c\u4fdd\u8bc1\u53d6\u51fa\u7684\u4e3a\u5b9e\u9645\u4e0a\u5269\u4f59\u6700\u4fbf\u5b9c\u7684\n\t}\n\tint all=0;//all\u5b58\u50a8\u5f53\u524d\u5df2\u8d2d\u725b\u5976\u6570\u91cf\n\twhile(1){\n\t\tint k=-q.top().first;//\u4ef7\u94b1\n\t\tif(all+q.top().second>=n){\n\t\t\tans+=(n-all)*k;//n-all\u4e3a\u8fd8\u9700\u8981\u725b\u5976\u6570\u91cf\n\t\t\tprintf(\"%d\",ans);\n\t\t\treturn 0;\n\t\t}\n\t\tall+=q.top().second;\n\t\tans+=q.top().second*k;\n\t\tq.pop();\n\t}\n}\n```\n### \u4e00\u4e2a\u7ec6\u8282\n\u8fd9\u9053\u9898\u91cc\u9762\u4e0d\u7528\u5f00longlong\uff0c\u56e0\u4e3aANSmax=Nmax* Pmax=2,000,000* 1,000=2,000,000,000\u800cINTmax=2,147,483,647\uff08\u4f46\u4e0b\u4e00\u6b21\u5c31\u4e0d\u4e00\u5b9a\u4e86\uff09",
        "postTime": 1566641548,
        "uid": 128606,
        "name": "2018ljw",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "# \u597d\u5f00\u5fc3\u554a\uff0c\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\n**\u6211\u849f\u84bb\uff0c\u6709\u4e9b\u5730\u65b9\u4e0d\u6070\u5f53\u8bf7\u63d0**\n\n**\u522b\u770b\u6df7\u5408\u725b\u5976\u9898\u9762\u633a\u957f\uff0c~~\u90fd\u53ef\u4ee5\u5f53\u8bed\u6587\u9605\u8bfb\u9898\u4e86~~\uff0c\u4f46\u662f\u53ea\u8981\u4ed4\u7ec6\u8bfb\u9898\uff0c\u5c31\u5b8c\u5168\u53ef\u4ee5\u5f53\u505a\u6570\u5b66\u5e94\u7528\u9898\u6765\u505a~~\uff08\u672c\u6765\u5c31\u662f\uff09~~**\n\n### \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\n\n```c\nstruct Marry{//\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53Marry\uff08Marry\u4e73\u4e1a\uff09 \n\tint price,noun;//price\u4ee3\u8868\u519c\u6c11i\u7684\u725b\u5976\u5355\u4ef7\uff0c\n    noun\u8868\u793a\u519c\u6c11i\u4e00\u5929\u80fd\u5356\u7ed9Marry\u7684\u725b\u5976\u5236\u9020\u516c\u53f8\u7684\u725b\u5976\u6570\u91cf\n}a[2000001];\n```\n\n### \u56e0\u4e3a\u8981\u8ba1\u7b97\u91c7\u8d2d\u8db3\u591f\u6570\u91cf\u7684\u725b\u5976\u6240\u9700\u7684\u6700\u5c0f\u82b1\u8d39\uff0c\u6240\u4ee5\u8981\u8ba9\u4ef7\u683c\u7531\u5c0f\u5230\u5927\u8fdb\u884c\u6392\u5e8f\n\n```c\nbool cmp(Marry a,Marry b){//\u91c7\u7528\u5347\u5e8f\u6392\u5e8f \n\treturn a.price<b.price;\n}\n```\n\n## \u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```c\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\uff0c\u5c31\u662f\u597d\u7528 \nusing namespace std;     \nstruct Marry{//\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53Marry\uff08Marry\u4e73\u4e1a\uff09 \n\tint price,noun;//price\u4ee3\u8868\u519c\u6c11i\u7684\u725b\u5976\u5355\u4ef7\uff0cnoun\u8868\u793a\u519c\u6c11i\u4e00\u5929\u80fd\u5356\u7ed9Marry\u7684\u725b\u5976\u5236\u9020\u516c\u53f8\u7684\u725b\u5976\u6570\u91cf\n}a[2000001];\nlong long n,m,ans;//n\u662f\u9700\u8981\u725b\u5976\u7684\u603b\u6570\uff1bm\u662f\u63d0\u4f9b\u725b\u5976\u7684\u519c\u6c11\u4e2a\u6570\nbool cmp(Marry a,Marry b){//\u91c7\u7528\u5347\u5e8f\u6392\u5e8f \n\treturn a.price<b.price;\n}\nint main(){\n\tcin>>n>>m;//\u8f93\u5165 \n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&a[i].price,&a[i].noun);\n\t}\n\tsort(a+1,a+m+1,cmp);//\u6309\u4ef7\u683c\u7531\u5c0f\u5230\u5927\u8fdb\u884c\u6392\u5e8f \n\tfor(int i=1;i<=m;++i){\n\t\tif(n>a[i].noun){ \n\t\t\tn-=a[i].noun;//\u5982\u679c\u6709\u4f59\uff0c\u5219\u5168\u90e8\u526a\u6389 \n\t\t\tans+=a[i].price*a[i].noun;//\u8ba1\u7b97\u8d39\u7528 \n\t\t}\n\t\telse {\n\t\t\tans+=a[i].price*(n);//\u8ba1\u7b97\u8d39\u7528 \n\t\t\tn=0; \n\t\t\tbreak;\n\t\t}\n\t}\n\tcout<<ans<<endl;//\u8f93\u51fa \n\treturn 0;\n}\n```\n\n\u55ef\u55ef\uff0c\u8fd9\u5c31\u662f\u9898\u89e3\uff0c\u6709\u95ee\u9898\u5c3d\u7ba1\u63d0\uff0c\u4f46\u5343\u4e07\u522b\u5acc\u5f03\uff0c~~\u6211\u4e5f\u662fAC\u8fc7\u7684\uff0c\u6700\u5c11\u4e0d\u4f1a\u8ba9\u4f60\u542c\u53d6WA\u58f0\u4e00\u7247~~",
        "postTime": 1565852252,
        "uid": 230652,
        "name": "\u51b7\u57dfOfficial",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "# \u8c8c\u4f3c\u5927\u5bb6\u90fd\u5728\u7528\u5feb\u6392\u554a\n\n## \u5176\u5b9e\u9009\u62e9\u6392\u5e8f\u5c31\u80fd\u8fc7\n\n**\u672c\u4eba\u4eb2\u6d4b**\n\n[\u5c31\u5728\u8fd9\u91cc](https://www.luogu.org/record/22235793)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\uff08\u5207\u5165\u6b63\u9898\uff09\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n## \u601d\u8def\uff1a\u6392\u5e8f+\u8d2a\u5fc3\n\n~~\u5176\u5b9e\u4e00\u5f00\u59cb\u770b\u5230\u9898\u76ee\u65f6\u4ee5\u4e3a\u662f\u80cc\u5305\uff0c\u6ca1\u529e\u6cd5\uff0c\u6211\u592a\u849f\u4e86~~\n\n### \u65e2\u7136\u662f\u8ba1\u7b97\u6700\u5c0f\u82b1\u8d39\uff0c\u90a3\u4e48\u5c31\u80af\u5b9a\u662f\u4f18\u5148\u9009\u62e9\u5355\u4ef7\u6700\u4fbf\u5b9c\u7684\n\n~~\uff08\u8c8c\u4f3c\u8fd9\u53e5\u8bdd\u662f\u5e9f\u8bdd\uff09~~\n\n### \u90a3\u5355\u4ef7\u4e00\u6837\u7684\u600e\u4e48\u529e\uff1f\n\n\u7b54\u66f0\uff1a\u4f18\u5148\u9009\u62e9\u63d0\u4f9b\u725b\u5976\u6700\u591a\u7684\n\n### why\uff1f\n\n\u6392\u5e8f\u7ed3\u675f\u540e\uff0c\u5c31\u6309\u7167\u5355\u4ef7\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u76f4\u63a5\u6a21\u62df\uff0c\u5982\u679c\u628a\u4ea7\u91cf\u6700\u591a\u7684\u653e\u524d\u9762\uff0c\u66f4\u7701\u65f6\n\n## \u76f4\u63a5\u653e\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\uff08\u4e0d\u8fc7\u697c\u4e0b\u597d\u50cf\u4e0d\u63a8\u8350\uff09\nusing namespace std;\n\nlong long m,n;\nlong long p[5001],a[5001];\nlong long t,tt;\nlong long sum,ans;\n//\u5176\u5b9e\u5b8c\u5168\u6ca1\u6709\u5fc5\u8981\u5f00long long\uff0c\u5f00\u4e86\u8fd8\u5360\u5185\u5b58\uff0c\u4f46\u662f\u5728\u5185\u5b58\u8db3\u591f\u7684\u60c5\u51b5\u4e0b\uff0c\u66f4\u4fdd\u9669\n\nint main()\n{\n\tcin>>m>>n;\n    //scanf(\"%lld%lld\",&m,&n);\n    //\u4f46\u662f\u7528cin\u4e5f\u4e0d\u4f1a\u8d85\u65f6\n\tif(m==0)\n\t{\n\t\tcout<<\"0\"<<endl;\n\t\treturn 0;\n\t}\n    //\u8fd9\u4e2a\u7279\u5224\u4e00\u5b9a\u8981\uff01\u5982\u679c\u9700\u6c42\u4e3a\u96f6\uff0c\u5e72\u561b\u8981\u4e70\n    //\u6211\u5c31\u88ab\u5751\u8fc7QAQ\n\tfor(int i=1;i<=n;i++)cin>>p[i]>>a[i];\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tt=i;\n\t\tfor(int j=i+1;j<=n;j++)\n\t\t{\n\t\t\tif(p[t]>p[j])t=j;\n\t\t\tif(p[t]==p[j])\n\t\t\t{\n\t\t\t\tif(a[t]<a[j])t=j;\n\t\t\t}\n\t\t}\n\t\tif(t!=i)\n\t\t{\n\t\t\ttt=p[i];p[i]=p[t];p[t]=tt;\n\t\t\ttt=a[i];a[i]=a[t];a[t]=tt;\n\t\t}\n\t}\n    //\u4ee5\u4e0a\u662f\u9009\u62e9\u6392\u5e8f\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(sum+a[i]<m)\n\t\t{\n\t\t\tsum+=a[i];\n\t\t\tans=ans+a[i]*p[i];\n            //\u5982\u679c\u4e70\u8fd9\u4e2a\u8fd8\u4e0d\u591f\u7684\u8bdd\uff0c\u5168\u90e8\u4e70\u6389\u7ee7\u7eed\u5f80\u4e0b\u627e\n\t\t}\n\t\t  else\n\t\t  {\n\t\t  \tans=ans+(m-sum)*p[i];\n\t\t  \tcout<<ans<<endl;\n\t\t  \treturn 0;\n            //\u5982\u679c\u591f\u4e86\uff0c\u53ea\u4e70\u81ea\u5df1\u9700\u8981\u7684\n            //\u518d\u5b8c\u7f8e\u7684\u7ed3\u675f\u7a0b\u5e8f\n\t\t  }\n\t}\n}\n```\n",
        "postTime": 1565161940,
        "uid": 205346,
        "name": "liaokq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "**###\u5f88\u7b80\u5355\u7684\u4e00\u9053\u9898**\n\n\u9996\u5148\u8bfb\u5165\uff0c\u6211\u8fd9\u91cc\u5b9a\u4e49\u4e86\u6570\u636e\u7ed3\u6784struct node\uff0cp\u548ca\u540c\u9898\u76ee\u4e2d\u7684pi\u548cai\uff0c\n\n\u7136\u540e\u7528sort\u5c06\u6570\u7ec4\u6309\u7167\u4ef7\u683c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff08\u5b9a\u4e49cmp\uff09#**\uff08\u6392\u5e8f\u5b8c\u5148\u8f93\u51fa\u4e00\u904d\u81ea\u5df1\u770b\u770b\u5bf9\u4e0d\u5bf9\uff09\uff01\uff01**\uff1b\n\n\u7136\u540e\u4ece\u7b2c\u4e00\u4e2a\u5f00\u59cb\u641c\u7d22\uff0cn\u4e3a\u8fd8\u9700\u8981\u725b\u5976\u7684\u91cf\uff0cans\u4e3a\u603b\u4ef7\u683c\uff1b\n\n\u6700\u540e\u8f93\u51fa\uff0cAC\n\n###\u4e0d\u8981\u641e\u6df7\u5355\u4ef7\u548c\u6570\u91cf\uff01\uff01\n\nAC\u4ee3\u7801\u5982\u4e0b\n\n\n        \n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nstruct node\n{\n    int p,a;\n};\nbool cmp(node x,node y)\n{\n    return x.p<y.p;\n}\nstruct node b[5010];\nint main()\n{\n    int n,m,ans=0;\n    scanf(\"%d%d\",&n,&m);\n    for(int i=0;i<m;i++)\n    {\n        scanf(\"%d%d\",&b[i].p,&b[i].a);\n    }\n    sort(b,b+m,cmp);\n    for(int i=0;i<m;i++)\n    {\n        if(n>=b[i].a)\n        {\n            ans=ans+b[i].a*b[i].p;\n            n=n-b[i].a;\n        }\n        else\n        {\n            ans=ans+b[i].p*n;\n            break;\n        }\n    }\n    printf(\"%d\",ans); \n}\n```",
        "postTime": 1507031503,
        "uid": 31390,
        "name": "\u5f3a\u529b\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u90e8\u5206\u80cc\u5305\uff0c\u4e0e01\u80cc\u5305\u4e0d\u540c\uff0c\u4ed6\u53ef\u4ee5\u53ea\u62ff\u4e00\u6837\u7269\u54c1\u7684\u4e00\u90e8\u5206\uff08\u5e9f\u8bdd\uff0c\u6ed1\u9e21\uff09\uff0c\u800c01\u80cc\u5305\u7684\u539f\u5219\u662f\uff1a\u8981\u4e48\u4e0d\u53d6\uff0c\u8981\u4e48\u53d6\uff0c\u4e14\u53ea\u80fd\u53d6\u4e00\u6837\u3002\n\n\n\u4e25\u683c\u6765\u8bb2\uff0c\u90e8\u5206\u80cc\u5305\u66f4\u50cf\u662f\u4e00\u79cd\u8d2a\u5fc3\uff08\u8d2a\u5fc3\u539f\u5219\uff1a\u6392\u5e8f\uff0c\u6700\u5c0f\u4ef7\u503c\u4f18\u5148\u53d6\uff0c\u592a\u591a\u4e86\u5c31\u9000\u51fa\u5faa\u73af\uff0c\u8f93\u51fa\u4e4b\u524d\u7684\u4ef7\u503c+\u8fd8\u6709\u591a\u5c11\u9700\u6c42\\*\u9000\u51fa\u65f6\u7684\u5355\u4ef7\uff09\uff0c\u4e0b\u9762\u7684\u7a0b\u5e8f\u5df2\u7ecf\u8bb2\u4e86\u3002\n\n\n\u4e0a\u4ee3\u7801\uff01\uff01\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\nvar n,m,i,j,t,s:longint;a,b:array[1..100000] of longint;\nbegin\n   readln(n,m);\n   for i:=1 to m do\n   read(a[i],b[i]);\n   for i:=1 to m-1 do\n    for j:=i+1 to m do\n    if a[i]>a[j] then\n    begin\n       t:=a[i];a[i]:=a[j];a[j]:=t;\n       t:=b[i];b[i]:=b[j];b[j]:=t;\n    end;//\u6570\u636e\u5f88\u83dc\uff0c\u9009\u6392\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a5000*5000=25000000\uff0c\u4e0d\u4f1a\u7206\n   i:=1;\n   while (i<=m) and (b[i]<=n) do//\u5faa\u73af\u6761\u4ef6\uff1a\u6240\u6709\u519c\u6c11\u6ca1\u6709\u9009\u62e9\u5b8c\uff0c\u518d\u52a0\u4e0a\u7b2ci\u4f4d\u519c\u6c11\u7684\u4ea7\u91cf\u4f4e\u4e8e\u9700\u6c42\n   begin\n      s:=s+a[i]*b[i];//\u628a\u6b64\u4f4d\u519c\u6c11\u7684\u725b\u5976\u90fd\u4e70\u5149\n      dec(n,b[i]);//\u9700\u6c42\u51cf\u5c11\n      inc(i);//\u53bb\u626b\u4e0b\u4e00\u4f4d\u519c\u6c11\n   end;\n   writeln(s+n*a[i]);//\u7531\u4e8e\u6570\u636e\u4fdd\u8bc1\u725b\u5976\u8db3\u591f\uff0c\u6240\u4ee5\u2026\u2026\nend.\n\u6211\u53ea\u60f3\u8bf4\uff0c\u6c34\u9898\uff0c\u6c34\u8303\u56f4\uff0c\u6c34\u6570\u636e\u2026\u2026\n```",
        "postTime": 1485485078,
        "uid": 33348,
        "name": "Kidd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "\u7ffb\u4e86\u4e00\u4e0b\u9898\u89e3\uff0c\u53d1\u73b0\u6211\u7684\u7b97\u6cd5\u5df2\u7ecf\u6709\u4eba\u5199\u4e86\u3002\u3002\u3002\n\n\u8bbef[i]\u8868\u793a\u5355\u4ef7\u4e3ai\u7684\u725b\u5976\u7684\u4ea7\u91cf\uff0c\u5c31\u53ef\u4ee5\u8282\u7701\u6392\u5e8f\u7684\u65f6\u95f4\u3002\u6700\u540e\u4e00\u4e2a0\u52301000\u7684\u5faa\u73af\u8d2a\u5fc3\u5c31\u884c\u4e86\u3002\n\n```pascal\nvar\n  f:array[0..1001]of longint;\n    i,n,m,ans,a,b:longint;\nbegin\n  fillchar(f,sizeof(f),0);\n  readln(m,n);\n    for i:=1 to n do\n    begin\n      readln(a,b);\n        f[a]:=f[a]+b;\n    end;\n    ans:=0;\n    for i:=0 to 1000 do\n      if m>f[i] then begin ans:=ans+f[i]*i;m:=m-f[i]; end\n                            else begin ans:=ans+m*i;break; end;\n    write(ans);\nend.\n```\n\u6ce8\u610f\u5982\u679c\u5df2\u7ecf\u4e70\u5b8c\u4e86\u725b\u5976\u4e00\u5b9a\u8981\u9000\u51fa\uff01\n",
        "postTime": 1469494295,
        "uid": 3116,
        "name": "\u98de\u7fd4",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "\n```cpp\n//pascal\u505a\u6cd5\uff0c\u8d2a\u5fc3\nvar a,b:array[1..5005] of longint;\n  m,s,n,i:longint;\nprocedure qsort(l,r:longint);   //\u5feb\u6392\u5c0f\u5230\u5927\nvar i,j,x,y:longint;\nbegin\n  i:=l;j:=r;x:=a[(l+r) div 2];   //x\u53d6\u4e2d\u95f4\u503c\n  repeat\n    while a[i]<x do inc(i);    \n    //\u641c\u7d22\uff0c\u5982\u679c\u8fd9\u4e2a\u6570\u6bd4\u4e2d\u95f4\u503c\u5c0f\u7684\u8bdd\u5c31\u7ee7\u7eed\uff0c\u76f4\u5230\u627e\u5230\u6bd4\u4e2d\u95f4\u503c\u5927\u7684\u6570\n    while x<a[j] do dec(j);\n   //\u548c\u4e0a\u9762\u76f8\u53cd\uff0c\u5982\u679c\u8fd9\u4e2a\u6570\u6bd4\u4e2d\u95f4\u503c\u5927\u5c31\u7ee7\u7eed\uff0c\u76f4\u5230\u627e\u5230\u6bd4\u4e2d\u95f4\u503c\u5c0f\u7684\u6570\n    if i<=j then\n   //\u8fd9\u91cc\u4ea4\u6362\uff0c\u6761\u4ef6\u662f\u5927\u7684\u6570\u5728\u6570\u5217\u7684\u5de6\u8fb9\uff0c\u5c0f\u7684\u5728\u6570\u5217\u53f3\u8fb9\u624d\u884c\n    begin\n      y:=a[i];a[i]:=a[j];a[j]:=y;\n      y:=b[i];b[i]:=b[j];b[j]:=y;\n      inc(i); dec(j);//\u7ee7\u7eed\u641c\u7d22\uff0c\u6ca1\u6709\u8fd9\u4e00\u884c\u548c\u4e0b\u4e00\u884c\u4f1a\u6b7b\u5faa\u73af\uff0c\u6c38\u4e0d\u505c\u6b62\n    end;\n  until i>j;\n  if l<j then qsort(l,j);\n  //\u8fd9\u91cc\u548c\u4e0b\u4e00\u884c\u90fd\u662f\u5224\u65ad\uff0c\u5982\u679c\u8fd8\u6709\u4e00\u6bb5\u6ca1\u6709\u641c\u7d22\u8fc7\uff0c\u5c31\u641c\u7d22\u90a3\u4e00\u6bb5\n  if i<r then qsort(i,r);\nend;\nbegin\n  readln(m,n);  //\u8f93\u5165\n  for i:=1 to n do readln(a[i],b[i]);   //\u8f93\u5165\u5355\u4ef7\u548c\u4ea7\u91cf\n  qsort(1,n);    //\u5feb\u6392\n  for i:=1 to n do\n  begin\n    m:=m-b[i];   //\u51cf\u53bb\u4ea7\u91cf\uff0c\u5f97\u51fa\u5269\u4e0b\u9700\u8981\u591a\u5c11\n    s:=s+a[i]*b[i];   //\u8ba1\u7b97\u4ef7\u683c\n    if m<=0 then begin s:=s-(0-m)*a[i]; break; end;\n    //\u6709\u65f6\u4f1a\u4e0d\u7528\u90a3\u4e48\u591a\uff0c\u51cf\u56de\u4ef7\u683c\u91cc\u7684\u591a\u51fa\u7684\u725b\u5976\u7684\u4ef7\u683c\n  end;\n  writeln(s);    //\u8f93\u51fa\u4ef7\u683c\nend.\n```",
        "postTime": 1461562219,
        "uid": 15811,
        "name": "guobaipeng0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "\n\n\n\n```cpp\n//\u7b80\u5355\u7684\u8d2a\u5fc3\uff0c\u6309\u5355\u4ef7\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\nvar xq,n,i,ss,s,a,j:longint;\n    jq,sl:array[0..50000] of longint;\nbegin\n  readln(xq,n);\n  for i:=1 to n do\n    readln(jq[i],sl[i]);\n  for i:=1 to n-1 do\n    for j:=i+1 to n do\n      if jq[i]>jq[j] then\n        begin\n          a:=jq[i];jq[i]:=jq[j];jq[j]:=a;\n          a:=sl[i];sl[i]:=sl[j];sl[j]:=a;\n        end;\n  for i:=1 to n do\n    if s+sl[i]<=xq then begin s:=s+sl[i];ss:=ss+jq[i]*sl[i];end else begin ss:=ss+(xq-s)*jq[i];break;end;\n  writeln(ss);\nend.\n```",
        "postTime": 1449031705,
        "uid": 12335,
        "name": "\u9093\u6653\u84dd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "\u5f31\u7206\u4e86\u7684\u9898\u76ee\uff0c\u7eaf\u8d2a\u5fc3\n\n\u6309\u5355\u4ef7\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u8fdb\u884c\u8d2a\u5fc3\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>    \nusing namespace std;   \nint n,m,v[5001],w[5001];  \nvoid read()  \n{  \n    cin>>n>>m;  \n    for(int i=1;i<=m;i++)  \n    cin>>v[i]>>w[i];  \n}  \nvoid sort()  \n{  \n    for(int i=1;i<m;i++)  \n    for(int j=i+1;j<=m;j++)  \n    if(v[i]>v[j])  \n    {  \n        swap(v[i],v[j]);  \n        swap(w[i],w[j]);  \n    }  \n}  \nint tanxin()  \n{  \n    int i,ans=0;  \n    for(i=1;i<=m;i++)  \n    {  \n        if(n>=w[i])  \n        {  \n            n-=w[i];  \n            ans+=v[i]*w[i];  \n        }  \n        else{  \n            ans+=n*v[i];  \n            return ans;  \n        }  \n    }  \n    return ans;  \n}  \nint main()  \n{  \n    read();  \n    sort();  \n    cout<<tanxin();  \n    return 0;  \n}\n```",
        "postTime": 1430650577,
        "uid": 3525,
        "name": "hfctf0210",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "\u8fd9\u9898\u4e0d\u96be\u3002\u3002\u3002\u4e0d\u9700\u8981\u591a\u4e48\u7cbe\u6df1\u7684\u7b97\u6cd5\u3002\u3002\u3002\u53ea\u8981\u6309\u4ef7\u683c\u6392\u4e2a\u5e8f\uff0c\u7136\u540e\u518d\u4ece\u4fbf\u5b9c\u7684\u5f00\u59cb\u6bd4\u8f83\u4e70\u7684\u6570\u91cf\u591f\u4e0d\u591f\uff0c\u987a\u4fbf\u7d2f\u52a0\u4e00\u4e0b\u94b1\u6570\uff0c\u6570\u91cf\u8db3\u591f\u4e86\uff0c\u5c31\u8f93\u51fa\u4ef7\u683c\u3002\u3002\u3002\u3002\u5c31\u53ef\u4ee5\u4e86\uff0c\u5f88\u7b80\u5355\u54e6\u3002\u3002\u3002\n\n\n```cpp\nvar  \n      a,p:array[1..2000000] of longint;  \n      n,m,x,i,j,t:longint;  \n    begin  \n     readln(n,m);  \n     for i:=1 to m do  \n      readln(p[i],a[i]);  \n     for i:=1 to m-1 do  \n      for j:=m downto i+1 do  \n       if p[j]<p[j-1] then  \n       begin  \n         t:=a[j];a[j]:=a[j-1];a[j-1]:=t;  \n         t:=p[j];p[j]:=p[j-1];p[j-1]:=t;  \n        end;  \n       x:=0;  \n       i:=1;  \n       while n>0do  \n        begin  \n         if a[i]=0 then i:=i+1;  \n         a[i]:=a[i]-1;  \n         n:=n-1;  \n         x:=x+p[i];  \n        end;  \n       writeln(x);  \n     end.  \nwater\u9898\u3002\u3002\u3002\u3002\u3002\u3002\n```",
        "postTime": 1427981346,
        "uid": 3440,
        "name": "wswhy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u751a\u81f3\u7528\u4e0d\u5230\u5feb\u6392\uff0c\u53cd\u6b63\u6d1b\u8c37\u4e0d\u8d85\u65f6\u3002\u3002\u3002\u3002\u3002\u3002\u628a\u725b\u5976\u7684\u5355\u4ef7\u6392\u4e00\u4e0b\u5e8f\uff0c\u4ece\u5c0f\u5230\u5927\u4e00\u4e2a\u4e2a\u53bb\u8bd5\uff0c\u7528\u7b80\u5355\u7684while\u5faa\u73af\u5c31\u53ef\u4ee5\u5b9e\u73b0\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u4e0b\u9762\u662fPascal\u7684\u7a0b\u5e8f\n\n```delphi\n var\n  a,p:array[1..2000000] of longint;\n  n,m,x,i,j,t:longint;\nbegin\n readln(n,m);\n for i:=1 to m do\n  readln(p[i],a[i]);//\u8bfb\u5165\n for i:=1 to m-1 do\n  for j:=m downto i+1 do\n   if p[j]<p[j-1] then\n   begin\n     t:=a[j];a[j]:=a[j-1];a[j-1]:=t;\n     t:=p[j];p[j]:=p[j-1];p[j-1]:=t;\n    end;//\u5192\u6ce1\u3002\u3002\u3002\n   x:=0;\n   i:=1;\n   while n>0do\n    begin\n     if a[i]=0 then i:=i+1;\n     a[i]:=a[i]-1;\n     n:=n-1;\n     x:=x+p[i];\n    end;\n   writeln(x);//\u8f93\u51fa\n end.\n```",
        "postTime": 1427965906,
        "uid": 3425,
        "name": "\u678d\u66ae77",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "\nimport java.util.*;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner cin = new Scanner(System.in);\n\t\tint need = cin.nextInt();// \u5546\u5bb6\u9700\u91cf\n\t\tint n = cin.nextInt();// \u63d0\u4f9b\u725b\u5976\u7684\u519c\u95e8\u6570\u76ee\n\t\tint a[][] = new int[n][2];// \u6bcf\u4e00\u4e2a\u519c\u95e8\u63d0\u4f9b\u7684\u725b\u5976\u4ef7\u683c\u548c\u80fd\u63d0\u4f9b\u7684\u6700\u5927\u91cf\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i][0] = cin.nextInt();// \u4ef7\u683c\n\t\t\ta[i][1] = cin.nextInt();// \u91cf\n\t\t}\n\n\t\tfor (int i = 0; i < n - 1; i++) {\n\t\t\tfor (int j = 0; j < n - i - 1; j++) {\n\t\t\t\tif (a[j][0] > a[j + 1][0]) {\n\t\t\t\t\tint temp = a[j][0];\n\n\t\t\t\t\ta[j][0] = a[j + 1][0];\n\t\t\t\t\ta[j + 1][0] = temp;\n\t\t\t\t\ttemp = a[j][1];\n\t\t\t\t\ta[j][1] = a[j + 1][1];\n\t\t\t\t\ta[j + 1][1] = temp;\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\tint money=0;//\u516c\u53f8\u9700\u8981\u82b1\u8d39\u7684\u6700\u5c0f\u91d1\u989d\n\t\tint temp1=0;\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tneed=need-a[i][1];\n\t\t\tif(need>=0) {\n\t\t\t\tmoney=money+a[i][0]*a[i][1];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmoney=money+(need+a[i][1])*a[i][0];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t/*\n\t\t * for(int i=0;i<n;i++) {\n\t\t\tSystem.out.println(a[i][0]+\" \"+a[i][1]);\n\t\t}\n\t\t */\n\t\tSystem.out.print(money);\n\n\t}\n\n}\n",
        "postTime": 1569551685,
        "uid": 235298,
        "name": "19917628707a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "# **\u849f\u84bb\u7684\u7b2c\u4e00\u53d1\u9898\u89e3\uff0c\u505a\u7684\u4e0d\u597d\u8bf7\u89c1\u8c05**\n\n\u7b80\u5355\u5206\u6790\u4e00\u4e0b\uff0c\u8fd9\u9053\u9898\u5176\u5b9e\u5f88\u7b80\u5355\n\n### **\u4e3b\u8981\u601d\u8def\uff1a\u65e2\u7136\u8981\u603b\u4ef7\u6700\u5c0f\uff0c\u5c31\u5148\u5728\u5355\u4ef7\u6700\u5c0f\u7684\u5976\u519c\u90a3\u91cc\u4e70**\n\u5e9f\u8bdd\u5c11\u8bf4\uff0c\u4e0a\u4ee3\u7801\n```c\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node{\n\tint price;\n\tint num;   //\u5b9a\u4e49\u7ed3\u6784\u4f53\u4ee3\u8868\u725b\u5976\uff0c\u6bcf\u4e2a\u5976\u519c\u7684\u725b\u5976\u90fd\u6709\u5355\u4ef7\u548c\u6570\u91cf\u4e24\u79cd\u5c5e\u6027 \n};\nnode milk[5005];\nint cmp(node x,node y)\n{\n\treturn x.price<y.price;\n}\n//cmp\u8fc7\u7a0b \nint main()\n{\n\tint m,n,money=0;   //\u5b9a\u4e49\u9700\u8981\u725b\u5976\u6570\uff0c\u5976\u519c\u6570\u548c\u603b\u4ef7 \n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>milk[i].price>>milk[i].num;\n\t}\n\tsort(milk+1,milk+1+m,cmp);   //\u6309\u7167\u725b\u5976\u7684\u5355\u4ef7\u4ece\u5c0f\u5230\u5927\u6392\u5e8f \n\tfor(int i=1;;i++)\n\t{\n\t\tif(n<=milk[i].num)\n\t\t{\n\t\t\tmoney=money+(milk[i].price*n);    //\u5982\u679c\u8fd8\u9700\u8981\u7684\u725b\u5976\u6570\u5c0f\u4e8e\u8fd9\u4f4d\u5976\u519c\u7684\u5976\u91cf\uff08\u96fe\uff09\u5219\u6309\u9700\u8981\u7684\u725b\u5976\u6570\u8ba1\u6570 \n\t\t\tbreak;\n\t\t}\n\t\tn=n-milk[i].num;   //\u8ba1\u7b97\u8fd8\u9700\u8981\u591a\u5c11\u725b\u5976 \n\t\tmoney=money+(milk[i].price*milk[i].num); \n\t}\n\tcout<<money;\n\treturn 0;\n}\n```\n\n",
        "postTime": 1568968145,
        "uid": 35202,
        "name": "\u975e\u6d32\u738b\u516b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "\u5176\u5b9e\u6839\u672c\u6ca1\u6709\u4e00\u697cdalao\u63cf\u8ff0\u7684\u90a3\u4e48\u9ebb\u70e6......  \n### \u4e00\u697cdalao\u5176\u5b9e\u5427\uff0c\u91c7\u7528\u4e86\u4e00\u79cd\u7eaf\u5c5e\u6a21\u62df\u7684\u65b9\u5f0f\u3002  \n### \u4e0b\u9762\u662f\u6211\u7684\u5927\u8dc3\u8fdb\u601d\u60f3\n\u4f46\u662f\u4e00\u4e2a\u4e2a\u5730\u505a\u51cf\u6cd5\u662f\u4e0d\u662f\u592a\u6162\u4e86\uff1f~~(\u5927\u8dc3\u8fdb\u601d\u60f3)~~  \n\u4e8e\u662f\u6211\u4eec\u662f\u4e0d\u662f\u53ef\u4ee5\u76f4\u63a5\u8fdb\u884c\u4e00\u4e2a\u5927\u8de8\u6b65\u5f0f\u7684\u65b9\u6cd5  \n### \u4f60\u7684\u5976\u6211\u76f4\u63a5\u5168\u90fd\u8981\u4e86\uff1f\n\u6572\u4e00\u4e2a\u4f2a\u4ee3\u7801\u7406\u89e3\u4e00\u4e0b\n```cpp\nwhile (\u5f53\u524d\u9700\u8981\u5976\u91cf)\n{\n    if (\u5976\u519c\u7684\u63d0\u4f9b\u91cf<=\u73b0\u5728\u7684\u9700\u6c42\u91cf)\n    {\n        \u73b0\u5728\u7684\u9700\u6c42\u91cf-\u5976\u519c\u7684\u63d0\u4f9b\u91cf\n        \u4f60\u7684money-\u5976\u519c\u7684\u63d0\u4f9b\u91cf*\u5976\u519c\u7684\u5355\u4ef7\n        \u6362\u4e00\u4e2a\u5976\u519c//\u8fd9\u4e2a\u7684\u63d0\u4f9b\u91cf\u5df2\u7ecf=0\n    }\n    else\n    {\n        \u4f60\u7684money-\u5269\u4f59\u9700\u6c42\u91cf*\u5976\u519c\u7684\u5355\u4ef7\n        \u9700\u6c42\u91cf=0\n    }\n}\n```\n\u7136\u540e\u8fd9\u4e2a\u7b97\u6cd5\u7684\u4f18\u52bf\u5c31\u662f**\u5927\u8dc3\u8fdb**  \n\u8ba9\u4e00\u4e2a\u5976\u519c\u4e0d\u7528\u5206\u6279\u6b21\u7ed9\u4f60\u9001\u725b\u5976\uff08n--\uff09  \n**\u76f4\u63a5\u4e00\u6b65\u5230\u4f4d\uff0c\u591a\u5feb\u597d\u7701**  \n\u7136\u540e\u8d34\u4e0a~~\u9ad8\u6e05\u6253\u7801~~\u7684\u4ee3\u7801\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n\nusing namespace std;\ntypedef long long int lli;\nlli n,m,sum;\nstruct nainong{\n\tlli dj,num;\n\tvoid input(){cin>>this->dj>>this->num;}\n}milk[5001],*now=&milk[1];\nbool cmp(const nainong &a,const nainong &b)\n{\n\tif (a.dj!=b.dj)return a.dj<b.dj;\n\telse return a.num>b.num;\n}\n\nint main()\n{\n\tcin>>n>>m;\n\tfor (register int i=1;i<=m;i++)\n\t{\n\t\tmilk[i].input();\n\t}\n\tsort(milk+1,milk+m+1,cmp);\n\twhile (n)//\u5f53\u4efb\u52a1\u8fd8\u6ca1\u6709\u5b8c\u6210\u7684\u65f6\u5019\n\t{\n\t    if (now->num<=n)//\u5982\u679c\u8fd9\u4e2a\u5976\u519c\u4ea7\u51fa\u7684\u5976\u4e0d\u591f\u7528\n\t    {\n\t        n-=now->num;//\u51cf\u6389\u8fd9\u4e2a\u5976\u519c\u7684\u4ea7\u91cf(\u6211\u5168\u90fd\u8981\u4e86qwq)\n\t        sum+=(now->dj)*(now->num);//\u52a0\u4e0a\u8fd9\u4e2a\u5976\u519c\u7684\u8981\u4ef7\n\t        now++;//\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u4f4d\u7f6e(or\u2014\u2014\u5976\u519cqwq)\n\t    }\n\t    else//\u5976\u519c\u4ea7\u51fa\u7684\u5976\u91cf\u4e0d\u8db3(\u4efb\u52a1\u5373\u5c06\u5b8c\u6210)\n\t    {\n\t        sum+=(now->dj)*n;//\u4e70\u5230\u6700\u540e\u7684\u5976\n\t        n=0;//\u4efb\u52a1\u5b8c\u6210\n\t    }\n\t}\n\tcout<<sum;\n\treturn 0;\n}\n```\n\u7136\u540e\u5462\uff0c\u770b\u770b\u4e24\u4e2a\u4ee3\u7801\u4e4b\u95f4\u7684\u5dee\u8ddd\uff1a  \n![](https://cdn.luogu.com.cn/upload/pic/52566.png)  \n(\u5341\u5206\u5efa\u8bae@chen_zhe \u6570\u636e\u52a0\u5f3a\u5361\u4e00\u4e0b\uff0c\u9003qwq)",
        "postTime": 1550922137,
        "uid": 122927,
        "name": "Jelly_Goat",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "\u597d\u4e86\uff0c\u8fd9\u662f\u672c\u849f\u84bb\u7b2c\u4e8c\u6b21FA\u2642\u9898\u89e3\u4e86\n\n# \u4e00\u5f00\u59cb\u63d0\u4ea4\u603b~~TM~~\u6709\u4e00\u4e2a\u70b9RE\n\n#### \u6211\u8fd8\u4ee5\u4e3a\u6211\u6570\u7ec4\u5f00\u7684\u4e0d\u591f\u5927\uff0c\u7ed3\u679c\u770b\u4e86\u4e00\u4e0b\u6570\u636e\u8303\u56f4\n\n## 0<=N<=2,000,00\n\n\u5fc3\u60f3\u6211\u6570\u7ec4\u5f00\u7684\u8db3\u591f\u5927\u4e86\u5440\u4e3a\u5565\u4f1aRE\uff0c\u65e0\u6cd5\u7406\u89e3\n\n\u76f4\u5230\u540e\u6765\u6211\u4e0b\u8f7d\u4e86\u6211RE\u90a3\u4e2a\u70b9\u7684\u6570\u636e\n\n## \u8fd9\u662f\u8f93\u5165\n\n![](https://cdn.luogu.com.cn/upload/pic/46435.png)\n\n## \u8fd9\u662f\u8f93\u51fa\n\n![](https://cdn.luogu.com.cn/upload/pic/46436.png)\n\n# \u3002\u3002\u3002\u3002\u3002\u3002\n# ~~WTF~~\u8fd9\u662f\u4ec0\u4e48\u9b3c\uff0c\u6545\u610f\u5751\u6211\u7684\u5427\n\n## \u8fd8\u597d\uff0c\u8fd9\u9053\u9898\u6ca1\u6709\u90a3\u79cdUSACO\u90a3\u79cd\u795e\u5751\u8f93\u5165\u7684\u683c\u5f0f\uff0c\u8981\u4f60\u591a\u7ec4\u6570\u636e\u75280 0\u7ed3\u5c3e\n\n### \u597d\u4e86\uff0c\u4e8c\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0a\u4ee3\u7801\uff01\uff01\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,k=1;\nstruct node\n{\n\tint v;\n\tint w;\n}r[100000001];\nint ans=0;\nbool cmp(node a,node b)\n{\n\treturn a.v<b.v;\n}\nint main()\n{\n\tcin>>m>>n;\n\tif(m==0&&n==0)\n\t{\n\t\tcout<<\"0\";\n\t\treturn 0;\n\t}//\u8f9b\u9178\u90fd\u662f\u6cea\n\tfor(int i=1;i<=n;i++)\n\t  cin>>r[i].v>>r[i].w;\n\tsort(r+1,r+n+1,cmp);//\u7ed3\u6784\u4f53\u6392\u5e8f\n\tfor(int i=1;;i++)\n\t{\n\t\tif(r[k].w==0)\n\t\t{\n\t\t\tk++;\n\t\t\tcontinue;\n\t\t}\n\t\tif(m==1)\n\t\t{\n\t\t\tans+=r[k].v;\n\t\t\tbreak;\n\t\t}\n\t\tm--;\n\t\tr[k].w--;\n\t\tans+=r[k].v;\n\t}\n\tcout<<ans;\n\treturn 0;//\u7ed3\u675f\n}\n```",
        "postTime": 1544960223,
        "uid": 108984,
        "name": "_\u8c26\u9000_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "```python\nn=input().split()\nN=int(n[0])\nM=int(n[1])\na=[]\nfor i in range(M):\n    n=input().split()\n    a.append([int(n[0]),int(n[1])])\na.sort(key=lambda x:x[0])\n#list\u7684\u6bcf\u4e2a\u5143\u7d20\u8fd8\u662f\u4e2alist\uff0c\u6240\u4ee5\u6392\u5e8f\u65f6\u5019\u6309\u7167\u6bcf\u4e2a\u5143\u7d20\u7684\n#\u7b2c\u4e00\u4e2a\u7684\u5927\u5c0f\u8fdb\u884c\u6392\u5e8f\nsum=0\nshengyu=N\nfor i in a:\n    if shengyu-i[1]<=0:\n        sum+=shengyu*i[0]#\u7528shengyu\u8fd9\u4e2a\u53d8\u91cf\u662f\u5bb9\u6613\u5192\n        break\n    else:\n        sum+=i[0]*i[1]\n        shengyu-=i[1]\nprint(sum)\n```\npython\u8f93\u5165\u9ebb\u70e6\u7684\u4e00\u70b9\u5c31\u662f\u5168\u90fd\u662f\u5b57\u7b26\u4e32\u4e14\u53ea\u6309\u884c\u8bfb\uff0c\u6240\u4ee5\u9700\u8981\u5904\u7406\n",
        "postTime": 1537242008,
        "uid": 20597,
        "name": "woshigui",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "\u6df7\u5408\u725b\u5976\u662f\u4e00\u9053\u975e\u5e38\u7ecf\u5178\u7684\u9898\uff0c\u5927\u591a\u6570\u4eba\u90fd\u662f\u5199\u7ed3\u6784\u4f53\u6765\u6807\u51c6\u5730\u53bb\u5b8c\u6210\uff0c\u5bf9\u4e8e\u6211\u2014\u2014\u4e00\u4e2a\u5077\u61d2\u7684\u5237\u9898\u8005\uff1a\u7ed9\u5927\u5bb6\u770b\u4e2a\u5b9d\u8d1d\uff1a\n\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\nusing namespace std;\ninline long long read(){\n    char c;long long x=0;\n    c=getchar();\n    while(!isdigit(c))c=getchar();\n    while(isdigit(c)){\n        x=x*10+c-'0';\n        c=getchar();\n    }\n    return x;\n}\n```\n\u4ee5\u4e0a\u5feb\u8bfb\uff0c\u65e0\u9700\u7406\u776c\u3002\n```cpp\nint main(){\n    long long n=read(),k=read(),p[5050],s=0,i;//s\u7528\u4e8e\u8bb0\u5f55\u7ed3\u679c\uff0ci\u8bb0\u5f55\u8fc7\u7a0b\uff0cp\u8bb0\u5f55\u6570\u636e\uff0cn\u3001k\u4e0d\u591a\u4f5c\u5197\u8ff0\u3002\n    for(i=0;i<k;i++)p[i]=read()*10000000+read();//\u7531\u8f93\u5165\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u7b2ci+1\u4e2a\u519c\u6c11\u725b\u5976\u5355\u4ef7\u4e3ap[i]/10000000\uff0c\u7b2ci+1\u4e2a\u519c\u6c11\u725b\u5976\u6570\u91cf\u4e3ap[i]%10000000\u3002\n    sort(p,p+k);\n    i=0;\n    while(n){\n        if(n>=(p[i++]%10000000))s+=(p[i-1]/10000000)*(p[i-1]%10000000),n-=p[i-1]%10000000;\n        else s+=(p[i-1]/10000000)*n,n=0;//\u6309\u4e4b\u524d\u8bf4\u7684\u8fdb\u884c\u8d2a\u5fc3\u3002\n    }\n    cout<<s<<endl;//\u8f93\u51fa\u7ed3\u679c\u3002\n    return 0;\n}\n\u4ee5\u72b6\u6001\u538b\u7f29\uff0c\u6839\u636e\u6570\u636e\u8303\u56f4\u653e\u5927\u4ef7\u683c\uff0c\u4f7f\u4ef7\u683c\u4f18\u5148\uff0c\u666e\u666e\u901a\u901a\u7684\u4e00\u6b21sort\u6392\u5e8f\uff0c\u518d\u51fa\u7ed3\u679c\u3002\n```",
        "postTime": 1509252242,
        "uid": 31684,
        "name": "attack_shane",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": ">\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u6392\u5e8f\u6765\u5199\u3002\n```cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint n,m,fee=0; // n\u662f\u9700\u8981\u725b\u5976\u7684\u603b\u6570\uff0cm\u662f\u63d0\u4f9b\u725b\u5976\u7684\u519c\u6c11\u4e2a\u6570\nstruct data {\n    int p; // \u5355\u4ef7\n    int a; // \u6570\u91cf\n} d[5000]; // \u5b9a\u4e49\u7ed3\u6784\u4f53\u5b58\u50a8\u5355\u4ef7\u548c\u6570\u91cf\nbool cmp(data lhs, data rhs) { // \u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\n    return lhs.p < rhs.p; // \u8fd4\u56de\u6bd4\u8f83\n}\nint main() {\n    ios::sync_with_stdio(false); // iostream \u5feb\u8fc7 cstdio \u7684\u51fd\u6570\n    cin>>n>>m; // \u8f93\u5165\n    for(int t=0;t<m;t++) cin>>d[t].p>>d[t].a; // \u8f93\u5165 \u7b2c 2 \u5230 M+1 \u884c:\u6bcf\u884c\u4e8c\u4e2a\u6574\u6570:Pi\uff08\u5355\u4ef7\uff09 \u548c Ai\uff08\u6570\u91cf\uff09\u3002\n    sort(d,d+m,cmp); // stl_algo.h: sort(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)\uff0c\u6545\u6b64\u5904__comp\u4e3a\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff0c\u6309\u8fd4\u56de\u503c\u8fdb\u884c\u6392\u5e8f\n    for(int t=0;t<m;t++) {\n        if(n>=d[t].a) // \u6570\u91cf\u672a\u5230\u8fbe\u8981\u6c42\n        {\n            fee+=d[t].a*d[t].p; // \u8ba1\u7b97\u8d39\u7528\n            n-=d[t].a; // \u5df2\u7ecf\u5b8c\u6210\uff0c\u51cf\u5c11\u6570\u91cf\u8981\u6c42\n        }\n        else // \u5df2\u5230\u8fbe\u6570\u91cf\u8981\u6c42\n        {\n            fee+=d[t].p*n; // \u6700\u540e\u8ba1\u7b97\u8d39\u7528\n            break; // \u8df3\u51fa\n        }\n    }\n    cout<<fee<<endl; // \u8f93\u51fa\u8d39\u7528\n}\n```",
        "postTime": 1507383552,
        "uid": 39153,
        "name": "TURX",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "\u8d2a\u5fc3 \u6bcf\u6b21\u9009\u62e9\u5355\u4ef7\u4f4e\u7684...\u8bf4\u80cc\u5305\u7684\u662f\u4ec0\u4e48\u9b3c....\n\n\u6ce8\u610flong long\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint n,mk,now=1;\nlong long ans;\nstruct Milk{\n    int v,w; \n}m[5002];\nbool cmp(Milk a,Milk b){\n    return a.v<b.v;\n}\nint main(){\n    scanf(\"%d%d\",&n,&mk);\n    for(int i=1;i<=mk;i++)scanf(\"%d%d\",&m[i].v,&m[i].w);\n    sort(m+1,m+mk+1,cmp);\n    while(n){\n        int k=min(n,m[now].w);\n        ans+=(1LL*k*m[now].v);\n        n-=k;\n        now++;\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1505726196,
        "uid": 49431,
        "name": "xun\u85b0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "##\u6b64\u9898\u5c31\u662f\u6309\u7167\u4ef7\u683c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u6309\u987a\u5e8f\u4ece\u5934\u5f00\u59cb\u4e70\u725b\u5976\u3002\u4e70\u65f6\u7528\u4e00\u4e2a\u53d8\u91cf\u8bb0\u5f55\u603b\u94b1\u6570\u5373\u53ef\u3002\n\n\u4e00\u5f00\u59cb\u6211\u4e5f\u4ee5\u4e3a\u662f\u80cc\u5305\u6765\u7740\u2026\u2026\u5176\u5b9e\u5c31\u662f\u8d2a\u5fc3+\u6392\u5e8f\u2026\u2026\n\n\n\u5176\u5b83\u90fd\u9644\u5728\u4ee3\u7801\u91cc\u4e86\uff0c\u5e0c\u671b\u80fd\u5e2e\u5230\u5927\u5bb6^\\_^\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>//sort\nusing namespace std;\nint n,need,m=0;//n\u662f\u519c\u6c11\u6570\uff0cneed\u662f\u9700\u6c42\u91cf\uff0cm\u662f\u603b\u94b1\u6570\nstruct farmer{\n    int p;//\u4ef7\u683c \n    int num;//\u5976\u91cf \n}f[5001];\nint milk_cmp(const farmer &a,const farmer &b){//\u7ed3\u6784\u4f53\u6392\u5e8f\n    return a.p<b.p;\n}\nint main(){\n    scanf(\"%d%d\",&need,&n);\n    for(int i=0;i<n;i++)scanf(\"%d%d\",&f[i].p,&f[i].num);//\u8bfb\u5165\n    sort(f,f+n,milk_cmp);\n    for(int i=0;i<n;i++){\n        if(need-f[i].num<=0){m+=f[i].p*need;break;}//\u52a0\u4e0a\u82b1\u8d39\uff0c\u9000\u51fa\u5faa\u73af\n        else{\n            need-=f[i].num;//\u51cf\u53bb\u8d2d\u4e70\u91cf\n            m+=f[i].p*f[i].num;//\u52a0\u4e0a\u82b1\u8d39\n        }\n    }\n    printf(\"%d\",m);//\u8f93\u51fa\n}\n```",
        "postTime": 1504518039,
        "uid": 52913,
        "name": "CreeperK",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "pair\u51fd\u6570\u7684\u5b8c\u7f8e\u6f14\u793a~\n\n```cpp\n#include <iostream>\n#include<cstdio> \n#include<algorithm>\nusing namespace std;\nint m,n,num=0,ans=0;\npair<int ,int>a[5005];\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++){\n    scanf(\"%d\",&a[i].first);\n    scanf(\"%d\",&a[i].second);\n    }\n    sort(a+1,a+m+1);\n    for(int i=1;i<=m;i++){\n    if(num+a[i].second>=n)\n    {\n        ans+=(n-num)*a[i].first;\n        break;\n    }\n    if(num+a[i].second<n){\n    num+=a[i].second;\n    ans+=a[i].second*a[i].first;\n    }\n    }\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1504267919,
        "uid": 20596,
        "name": "night",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "\u8c01\u8bf4\u8fd9\u9053\u9898\u662f\u80cc\u5305\uff1f\u660e\u660e\u662f\u8d2a\u5fc3\u597d\u4e0d\u597d\uff01\u5176\u5b9e\u5f04\u4e24\u4e2a\u6570\u7ec4\uff0c\u4e00\u4e2a\u5355\u4ef7\uff0c\u4e00\u4e2a\u6570\u91cf\uff0c\u7136\u540e\u6839\u636e\u5355\u4ef7\u6392\u5e8f\u4e5f\u53ef\u4ee5\uff0c\u4f46\u662f\u6211\u4e0d\u60f3\u6392\u5e8f\uff0c\u56e0\u4e3ap\u3010i\u3011\u7684\u8303\u56f4\u6700\u5927\u624d\u52301000\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5f04\u4e00\u4e2a0\u52301000\u7684\u6570\u7ec4\uff0c\u8868\u793a\u4ef7\u683c\u4e3ap\u7684\u725b\u5976\u7684\u603b\u6570\u91cf\uff0c\u6bcf\u6b21\u8bfb\u5165\uff0c\u90fd\u7ed9a\u3010p\u3011\u52a0\u4e0a\u6570\u91cfv\uff0c\u6700\u540e\u7528\u4e00\u4e2afor\u5faa\u73af\u4ece0\u626b\u52301000\uff0c\u5982\u679c\u4e2d\u95f4\u725b\u5976\u591f\u4e86\uff0c\u5c31\u628a\u5b83\u9000\u4e86\u3002lz\u8f6cc++\u4e00\u4e2a\u6708\u4e86\uff0c\u7279\u5f04\u4e00\u4e2aPascal\u7a0b\u5e8f\u7ec3\u7ec3\u624b\n\n```cpp\nvar\n a:array[0..1000]of qword;//\u5bb3\u6015\u52a0\u7206\u4e86\uff0c\u53cd\u6b63\u6ca1\u6709\u8d1f\u6570\u7684\u53ef\u80fd\uff0c\u5c31\u7528qword\u4e86\n n,i,m,s,p,v:longint;\nbegin\n readln(n,m);\n fillchar(a,sizeof(a),0);//\u4e00\u5f00\u59cb\u521d\u59cb\u5316\u4e3a0\uff0c\u5176\u5b9e\u4e0d\u521d\u59cb\u5316\u4e5f\u53ef\u4ee5\uff0c\u56e0\u4e3aPascal\u662f\u81ea\u52a8\u6321\u7684\u8f66\uff0cc++\u662f\u624b\u52a8\u6321\u7684\u8f66\n for i:=1 to m do begin\n  readln(p,v);//\u8bfb\u5165\u5355\u4ef7\u548c\u6570\u91cf\n  a[p]:=a[p]+v;//\u6bcf\u6b21\u90fd\u7ed9\u5355\u4ef7\u4e3ap\u7684\u5355\u5143\u52a0\u4e0av\n end;\n for i:=0 to 1000 do begin//\u4ece0\u5230p\u626b\n  if n=0 then begin write(s);exit;end;//\u5982\u679c\u73b0\u5728\u725b\u5976\u591f\u4e86\uff0c\u5c31\u8f93\u51fa\uff0c\u518d\u5f39\u51fa\u53bb\n  if a[i]<>0 then\u5982\u679c\u6709i\u5355\u4ef7\u7684\u725b\u5976\n   if a[i]>=n then begin\n    write(s+n*i);\n    exit;\n   end//\u5982\u679c\u5355\u4ef7\u4e3ai\u7684\u725b\u5976\u6570\u91cf\u5927\u4e8e\u9700\u8981\u7684\u725b\u5976\u6570\u91cf\uff0c\u5c31\u76f4\u63a5\u7ed9\u8f93\u51fa\uff0c\u5f39\u4e86\n   else begin\n    s:=s+i*a[i];\n    n:=n-a[i];\n   end;//\u5982\u679c\u5355\u4ef7\u4e3ai\u7684\u725b\u5976\u6570\u91cf\u4e0d\u591f\u9700\u8981\u7684\u725b\u5976\u6570\u91cf\uff0c\u6211\u4eec\u4e5f\u8981\u4e70\uff0c\u6709\u591a\u5c11\u4e70\u591a\u5c11\uff0c\u8bb0\u4f4f\u9700\u8981\u7684\u725b\u5976\u603b\u6570\u91cf\u8981\u51cf\n end;\nend.\n\u5176\u5b9e\u539f\u672c\u51c6\u5907\u5f04\u4e00\u4e2a\u80cc\u5305\u73a9\u73a9\uff0c\u8c01\u77e5\u9053\u8fd9\u9053\u8d2a\u5fc3\u9898\u7adf\u7136\u5728\u80cc\u5305\u91cc\u9762\u9c7c\u76ee\u6df7\u73e0\uff0c\u6211\u592a\u751f\u6c14\u4e86\uff0c\u5fcd\u4e0d\u4f4f\u9898\u89e3\u6765\u4e00\u53d1\uff01\u8c22\u8c22\u5927\u5bb6\uff0c\u4e0d\u559c\u52ff\u55b7\u54e6\uff0c\u518d\u6b21\u8c22\u8c22\uff0c\u4e00\u8d77\u5411\u7701\u961f\u52a0\u6cb9\uff01\n```",
        "postTime": 1500870556,
        "uid": 41003,
        "name": "LMB_001",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "```cpp\n  var n,j,m,i,temp,money:longint;\n     a,p:array[1..5005] of longint;\n   begin\n   readln(m,n);\n   if (m=0) and (n=0) then writeln(0);\n   for i:=1 to n do\n   readln(a[i],p[i]);\n   for i:=1 to n-1 do\n    for j:=i to n do\n    if a[i]>a[j] then \n   begin temp:=a[i];\n         a[i]:=a[j];\n         a[j]:=temp;  \n         temp:=p[i]; \n         p[i]:=p[j];      \n         p[j]:=temp;  end;\n   for i:=1 to n do\n   begin if p[i]>=m  then\n   begin    money:=money+m*a[i];\n            writeln(money);\n            exit;  end\n                     else \n   begin    m:=m-p[i];\n            money:=money+p[i]*a[i];  end;\n    end;\n  end.\n//\u5148\u6392\u5e8f\uff0c\u518d\u8fdb\u884c\u8d2a\u5fc3\n\n//\u5982\u679c\u9700\u8981\u7684\u5927\u4e8e\u5355\u4ef7\u6700\u5c0f\u7684\u5c31\u5168\u90e8\u4e70\u6765\uff0c\u5c0f\u4e8e\u7b49\u4e8e\u5c31\u4e70\u6240\u9700\u7684\u3002\n\n```",
        "postTime": 1495429618,
        "uid": 41698,
        "name": "hl666",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "\u8d2a\u5fc3\uff0c\u627e\u5355\u4ef7\u6700\u5c0f\u7684\u5c31\u53ef\u4ee5\u3002\n\n\nsum \u8bb0\u5f55\u5f53\u524d\u5df2\u7ecf\u4e70\u4e86\u591a\u5c11\u725b\u5976\uff0c\u5982\u679c\u4e0b\u4e00\u4e2a\u5976\u519c\u7684\u725b\u5976\u603b\u91cf+sum\u5927\u4e8e\u9700\u8981\u7684\uff0c\u52a0\u4e0a\u5269\u4f59\u7684\uff0c\u5c0f\u4e8e\u7b49\u4e8e\u5c31\u5168\u4e70\u4e86\u3002\n\n\n\n\n\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int N = 5005;\nstruct milk{\n    int w,v;    //\u5206\u522b\u662f\u5355\u4ef7\uff0c\u591a\u5c11 \n}t[N];\nint n,m,ans,sum;\nbool cmp(milk a,milk b)\n{\n    return a.w < b.w;\n}\nint main()\n{\n    scanf(\"%d%d\",&m,&n);\n    for(int i=1;i<=n;++i)\n        scanf(\"%d%d\",&t[i].w,&t[i].v);\n    sort(t+1,t+n+1,cmp);\n    for(int i=1;i<=n;++i)\n    {\n        if(t[i].v+sum > m)\n        {\n            ans += (m-sum)*t[i].w;\n            break;\n        }\n        ans += t[i].w*t[i].v;\n        sum += t[i].v;\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1495098393,
        "uid": 39828,
        "name": "amstar",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "//\u5b66\u957f\u95ee\u6211\u4e3a\u4ec0\u4e48\u5199\u8fd9\u4e48\u591a\u6ce8\u91ca\u2026\u2026\u6211\u8fd8\u662f\u5199\u4e86\u2026\u2026:)\n\n\n\n```cpp\n#include <cstdio>\nconst int MAXM = 5001, MAXG = 1001;\nint G[MAXG];                                    //\u6bcf\u4e2a\u4ef7\u683c\u4e4b\u4e0b\u7684\u725b\u5976\u91cf\u3002 \nint n, m;                                        //n=\u6240\u9700\u725b\u5976\u91cf\uff0cm=\u4f9b\u5e94\u5546\u6570\u91cf\u3002 \nint main() {\n    int cost = 0, j = 0, tmp = 0;                //cost=\u82b1\u8d39\u91cf\uff0cj=\u5f53\u524d\u5355\u4ef7\uff0ctmp=\u5f53\u524d\u725b\u5976\u91cf\u3002 \n    scanf(\"%d%d\", &n, &m);\n    for (int i = 1, x, y; i <= m; i++) {\n        scanf(\"%d%d\", &x, &y);                    //\u4ef7\u683c\u4e3ax\u7684\u4f9b\u5e94\u5546\u62e5\u6709\u591a\u5c11\u725b\u5976\u3002 \n        G[x] += y;    \n    }\n    while (tmp < n) {\n        if (tmp + G[j] <= n) {                    //\u5982\u679c\u3010\u5f53\u524d\u725b\u5976\u91cf\u3011\u4e0e\u3010\u5f53\u524d\u4ef7\u683c\u7684\u725b\u5976\u91cf\u3011\u4e4b\u548c\u5c0f\u4e8e\u6216\u7b49\u4e8e\u6240\u9700\u725b\u5976\u91cf\u7684\u8bdd\uff0c\u5c31\u9700\u8981\u628a\u8fd9\u4e2a\u4ef7\u683c\u7684\u725b\u5976\u5168\u4e70\u4e86\u3002 \n            tmp += G[j];                        //\u5f53\u7136\uff0c\u5982\u679c\u3010\u5f53\u524d\u4ef7\u683c\u7684\u725b\u5976\u91cf\u3011\u7b49\u4e8e0\uff0c,tmp+=G[j]\u65e0\u5f71\u54cd\uff0c\u6240\u4ee5\u4e0d\u7528\u8003\u8651G[j]=0\u7684\u60c5\u51b5\u3002 \n            cost += j * G[j];                    //j*G[j]\u4e3a\u4e70\u8fd9\u4e2a\u4f9b\u5e94\u5546\u7684\u725b\u5976\u7684\u4ef7\u683c\u3002 \n        } else {                                //\u5982\u679c\u3010\u5f53\u524d\u725b\u5976\u91cf\u3011\u4e0e\u3010\u5f53\u524d\u4ef7\u683c\u7684\u725b\u5976\u91cf\u3011\u4e4b\u548c\u5927\u4e8e\u6240\u9700\u725b\u5976\u91cf\u7684\u8bdd\uff0c\u53ea\u9700\u8981\u4e70\u4e00\u90e8\u5206\u725b\u5976\uff0c\u8fbe\u5230\u6240\u9700\u5373\u53ef\u3002 \n            cost += j * (n - tmp);                //\u8fd9\u6837\u5b50\u7684\u8bdd\u8fd8\u9700\u8981\u7684\u725b\u5976\u91cf\u4e3a(n-tmp)\uff0c\u518d\u4e58\u4e0a\u4ef7\u683c\u5373\u53ef\u5f97\u5230\u6240\u9700\u7684\u4ef7\u683c\u3002 \n            tmp = n;                            //\u6b64\u65f6\u624b\u4e2d\u7684\u725b\u5976\u91cf\u5df2\u7ecf\u8fbe\u5230\u8981\u6c42\uff0c\u8fd9\u6837\u7684\u8bddtmp=n\u5c31\u53ef\u4ee5\u4e86\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u6b7b\u5faa\u73af\u3002 \n        }\n        j++;                                    //\u4e70\u5b8c\u8fd9\u4e2a\u4f9b\u5e94\u5546\u4e4b\u540e\uff0c\u5355\u4ef7\u52a01\u8868\u793a\u4e70\u4e0b\u4e00\u4e2a\u4f9b\u5e94\u5546\u7684\u725b\u5976\u3002 \n    }\n    printf(\"%d\", cost);\n    return 0;\n}\n```",
        "postTime": 1492607179,
        "uid": 26339,
        "name": "cilc3543",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "0MS \u6876\u6392\u5e8f\u8fc7,\u79d2\u6740\u5feb\u6392\u548csort()\n\n\u8fd9\u91cc\u7684\u6876\u6bcf\u4e2a\u6570\u5b57\u4e00\u4e2a \u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(N) \uff1b\u672c\u9898\u6700\u5927\u4ef7\u683c\u4e3a1000\u5f88\u9002\u5408\u7528\u6876\u6392\u5e8f \u7a7a\u95f4\u590d\u6742\u5ea6\u4e3aO(1000)\uff1b\n\n\u4ee3\u7801\uff1a\n\n\u2018\u2019\u2018c++\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\nusing namespace std;\n/*basic*/const int maxn=2000005, maxm=5000, radix=1001;\n/*basic*/int N,M,G[radix]={0};\nint main(){\n    int cost=0, tmp=0,j=0;\n    scanf(\"%d%d\",&N,&M);\n    for(int i=0;i<M;i++){\n        int v,n;\n        scanf(\"%d%d\",&v,&n);\n        G[v]+=n;\n    }\n    while(tmp<N){\n        if(tmp+G[j]<=N) tmp+=G[j], cost+=j*G[j];\n        else{cost+=(N-tmp)*j, tmp=N;}\n        j++;\n    }\n    printf(\"%d\\n\",cost);\n    return 0;\n}\n\u2019\u2018\u2019\n```",
        "postTime": 1491185572,
        "uid": 8296,
        "name": "March",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "\u5982\u679c\u597d\u4e86\u5c31\u9000\u51fa\uff0c\u7136\u540e\u5c31\u6ca1\u5565\u4e86\n\n```cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nstruct niu\n{\n    int m,n;//m\u662f\u4e00\u4e2a\u725b\u5976\u591a\u5c11\u94b1\uff0cn\u662f\u591a\u5c11\u4e2a\u725b\u5976 \n}; \nint cmp(const niu &a,const niu &b)\n{\n    if (a.m<b.m) return 1;\n    else return 0;\n}\nint main()\n{\n    niu c[5010];\n    int i,u,v,sum=0;\n    cin>>u>>v;\n    for (i=1;i<=v;i++)\n    {\n        cin>>c[i].m>>c[i].n;\n    }\n    sort(c+1,c+v+1,cmp);\n    for (i=1;i<=v;i++)\n    {\n         if (u<c[i].n) c[i].n=u;//\u91cd\u70b9\n         sum+=c[i].m*c[i].n;\n         u-=c[i].n;\n         if (u==0) break;\n    }\n    cout<<sum;\n    return 0;\n}\n\n```",
        "postTime": 1481985888,
        "uid": 20420,
        "name": "\u7761\u5728\u5899\u4e0a\u7684\u732b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "\u4e00\u9053\u6bd4\u8f83\u5178\u578b\u7684\u8d2a\u5fc3\u9898\u76ee\uff0c\u6309\u5355\u4ef7\u4ece\u5c0f\u5230\u5927\u628a\u5976\u519c\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u8fdb\u884c\u6536\u8d2d\uff0c\u76f4\u5230\u6ee1\u8db3\u8981\u6c42\u540e\u8df3\u51fa\u3002\n\n\uff0c\uff0c\uff0c\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstdlib>\nusing namespace std;\nstruct data\n{\n    int dp;//\u5355\u4ef7\n    int a;//\u4ea7\u91cf\n}nm[5001];\nint N,M,pr;\nint zy(struct data a,struct data b) //\u91cd\u8f7d\u5c0f\u4e8e\u53f7\uff0c\u6309\u5355\u4ef7\u6392\u5e8f\n{\n    return a.dp<b.dp;\n}\nint main()\n{\n    int i,j;\n    scanf(\"%d%d\",&M,&N);\n    if(M==0&&N==0)\n    {\n        printf(\"0\");\n        return 0;\n    }\n    for(i=1;i<=N;i++)\n    {\n        scanf(\"%d%d\",&nm[i].dp,&nm[i].a);\n    }\n    sort(nm+1,nm+N+1,zy); //\u6392\u5e8f\n    for(i=1;i<=N;i++)\n    {\n        if(M>=nm[i].a)\n        {\n            pr+=nm[i].a*nm[i].dp;\n            M-=nm[i].a;\n        }\n        else\n        {\n            pr+=M*nm[i].dp;\n            break;\n        }\n    }\n    printf(\"%d\",pr);\n    return 0;\n}\n\uff0c\uff0c\uff0c\n```",
        "postTime": 1479092629,
        "uid": 15157,
        "name": "\u53f8\u5f92\u51b0\u96e8",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u5e94\u8be5\u7b97\u662f\u5148\u6876\u6392\u518d\u8d2a\u5fc3\uff1f\u56e0\u4e3a\u4ef7\u683c\u57281000-\uff0c\u6876\u6392\u7684\u6570\u7ec4\u5f00\u5c0f\u4e00\u4e9b\u5c31\u591f\u4e86\uff0c\u4e00\u4e2a\u6876\u7684\u4ef7\u683c\u533a\u95f4\u662f1\uff0c\u8bfb\u5165\u6570\u636e\u7684\u65f6\u5019\u5c31\u8ddf\u7740\u6392\u5e8f\uff0c\u6700\u540e\u4ece\u5c0f\u5230\u5927\u8d2a\u5fc3\u5c31\u53ef\u4ee5\u4e86\u3002\n\n>#include <iostream>\n```cpp\n#include<cstdio>\nusing namespace std;\nint main() {\n    int price[1001] = { 0 };\n    int need, farmer, fee=0;\n    cin >> need >> farmer;\n    for (int i = 0; i < farmer; i++) {\n        int a, b;\n        cin >> a >> b;\n        price[a] += b;\n    }\n    for (int i = 0; i <= 1000; i++) {\n        if (need > price[i]) {\n            need -= price[i];\n            fee += price[i] * i;\n        }\n        else if (need > 0) {\n            fee += need*i;\n            need = 0;\n        }\n        else if (need == 0) {\n            break;\n        }\n    }\n    cout << fee;\n    return 0;\n}\n```",
        "postTime": 1475308672,
        "uid": 24672,
        "name": "Rika",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "\u7ffb\u4e86\u4e00\u4e0b\u9898\u89e3\uff0c\u53d1\u73b0\u8fd8\u6ca1\u6709\u8fd9\u79cd\u65b9\u6cd5\u3002\n\n\u8fd9\u4e2a\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a\u4ef7\u683c\u7684\u8303\u56f4\u57281..1000\u4e4b\u5185\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u8981\u5728\u8bfb\u5165\u6570\u636e\u7684\u65f6\u5019\u628a\u76f8\u540c\u4ef7\u683c\u7684\u5408\u5e76\u5373\u53ef\uff0c\u8fdb\u884c\u8ba1\u7b97\u65f6\uff0c\u4e5f\u53ea\u9700\u8981for i:=0 to 1000 do\u8fdb\u884c\u626b\u63cf\u5982\u679c\u6709\u4ef7\u683c\u4e3ai\u7684\u725b\u5976\u5c31\u6536\u8d2d\u5373\u53ef\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u6392\u5e8f\u3002\u7406\u8bba\u4e0a\u6548\u7387\u6700\u9ad8\u3002\n\n[/color]```cpp\n\n#include <iostream>\nusing namespace std;\nint main() {\n    int value, n, milk[1002]={0}, money(0);\n    cin >> value >> n;                             //\u8bfb\u5165\n    for (int i=0; i<n; ++i) {\n        int a, b;\n        cin >> a >> b;\n        milk[a] += b;                                 //\u5408\u5e76\n    }\n    for (int i=0; i<=1000; ++i) {\n        if (value > milk[i]) {                      //\u80fd\u5168\u90e8\u6536\u8d2d\n            value -= milk[i];\n            money += i * milk[i];\n        }\n        else {\n            money += value * i;\n            break;\n        }\n    }\n    cout << money << endl;\n    return 0;\n}\n\n```",
        "postTime": 1462233246,
        "uid": 17689,
        "name": "\u8fdc\u822a\u4e4b\u66f2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "```cpp\n// \u8fd9\u662fPascal\u89e3\u6cd5\uff1b\nvar n,m,i,j,s,w:longint;\n    a,b:array[1..100000] of longint;\nbegin\n  readln(n,m); //\u8bfb\u5165\u9700\u8981\u7684\u725b\u5976\u6570\u548c\u63d0\u4f9b\u725b\u5976\u7684\u5976\u519c\u7684\u4eba\u6570\uff1b\n  for i:=1 to m do readln(a[i],b[i]);  //\u8f93\u5165\u5404\u5976\u519c\u725b\u5976\u7684\u5355\u4ef7\u548c\u6570\u91cf\uff1b\n  for i:=1 to m-1 do\n    for j:=i+1 to m do\n      if a[i]>a[j] then\n        begin\n          w:=a[i];a[i]:=a[j];a[j]:=w;\n          w:=b[i];b[i]:=b[j];b[j]:=w;\n        end;  //\u628a\u5355\u4ef7\u548c\u6570\u91cf\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u786e\u4fddMarry\u7684\u725b\u5976\u5236\u9020\u516c\u53f8\u7528\u6700\u5c0f\u8d39\u7528\u62ff\u5230\u6240\u9700\u7684\u725b\u5976\uff1b\n  for j:=1 to m do if b[j]>n then begin s:=s+a[j]*n;break;end else begin s:=s+a[j]*b[j];n:=n-b[j];end;  //\u5224\u65ad\u7b2cj\u4e2a\u5976\u519c\u6240\u63d0\u4f9b\u7684\u725b\u5976\u662f\u5426\u591a\u4e8e\u9700\u8981\u7684\u725b\u5976\u6570\uff0c\u5982\u679c\u7b2cj\u4e2a\u5976\u519c\u6240\u63d0\u4f9b\u7684\u725b\u5976\u5c11\u4e8e\u6216\u7b49\u4e8e\u9700\u8981\u7684\u725b\u5976\u6570\uff0c\u5c31\u76f4\u63a5\u7528a[i]*b[i](\u4e5f\u5c31\u662f\u5168\u90e8\u4e70\u4e0b)\uff0c\u7136\u540e\u7528\u539f\u6765\u6240\u9700\u8981\u7684\u725b\u5976\u6570\u51cf\u53bb\u5df2\u8d2d\u4e70\u7684\u725b\u5976\u6570\uff0c\u6c42\u51fa\u8fd8\u9700\u8981\u8d2d\u4e70\u7684\u725b\u5976\u6570\uff1b\u5982\u679c\u7b2cj\u4e2a\u5976\u519c\u6240\u63d0\u4f9b\u7684\u725b\u5976\u591a\u4e8e\u9700\u8981\u7684\u725b\u5976\u6570\uff0c\u5c31\u7528n*a[i](\u4e5f\u5c31\u662f\u53ea\u5356\u9700\u8981\u7684\u725b\u5976)\uff0c\u7136\u540e\u9000\u51fa\u5faa\u73af\uff1b\n  writeln(s); //\u8f93\u51fa\uff1b\nend.\n```",
        "postTime": 1461646653,
        "uid": 15830,
        "name": "\u4f55\u660a\u71ca1046",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    },
    {
        "content": "```cpp\n//\u8fd9\u91cc\u662fpascal\u7684\u505a\u6cd5\nvar p,a:array[1..10000] of longint; n,i,k,m,j,t:longint; //\u9996\u5148\u5b9a\u4e49\u53d8\u91cf\u662f\u5fc5\u987b\u7684\u4e86\nbegin\n  readln(n,m);//\u6309\u7167\u9898\u76ee\u8f93\u5165\u9700\u8981\u725b\u5976\u7684\u603b\u6570\u548c\u63d0\u4f9b\u725b\u5976\u7684\u519c\u6c11\u4e2a\u6570\n  for i:=1 to m do read(p[i],a[i]); //\u518d\u8f93\u5165P[i] \u548c A[i]\n  for i:=1 to m-1 do  //\u4ee5\u5c0f\u5230\u5927\u6392\u5e8fP[i]\u548cA[i]\uff0c\u4ee5\u786e\u4fddMarry\u7684\u725b\u5976\u5236\u9020\u516c\u53f8\u62ff\u5230\u6240\u9700\u7684\u725b\u5976\u6240\u8981\u7684\u6700\u5c0f\u8d39\u7528\n    for j:=i+1 to m do\n    if p[i]>p[j] then\n    begin\n      t:=p[i];\n      p[i]:=p[j];\n      p[j]:=t;\n      t:=a[i];\n      a[i]:=a[j];\n      a[j]:=t;\n    end;\n  for i:=1 to m do//\u5faa\u73af\n  begin\n    if n-a[i]>=0 then begin n:=n-a[i]; k:=k+a[i]*p[i]; end //\u5982\u679c\u9700\u8981\u725b\u5976\u7684\u603b\u6570\u51cf\u53bb\u519c\u6c11 i \u4e00\u5929\u80fd\u5356\u7ed9Marry\u7684\u725b\u5976\u5236\u9020\u516c\u53f8\u7684\u725b\u5976\u6570\u91cf\u5927\u4e8e\u7b49\u4e8e0\uff08\u4e5f\u5c31\u662f\u8bf4\u8be5\u516c\u53f8\u53ef\u4ee5\u628a\u8be5\u519c\u6c11\u7684\u725b\u5976\u5168\u8d2d\u4e86\uff09\u5c31\u4e70\u4e0b\u4e86\u519c\u6c11\u7684\u6240\u6709\u725b\u5976\u5e76\u4e14\u7ed9k\u52a0\u4e0a\u6240\u9700\u7684\u8d39\u7528\n     else begin k:=k+p[i]*n; n:=0; end;//\u5426\u5219\u5c31\u4e70\u516c\u53f8\u76ee\u524d\u6240\u9700\u8981\u7684\u725b\u5976\u5e76\u7ed9k\u52a0\u4e0a\u6240\u9700\u7684\u8d39\u7528\uff0cn=0\n    if n=0 then break;//\u5c31\u662f\u8bf4\u5982\u679cMarry\u7684\u725b\u5976\u5236\u9020\u516c\u53f8\u5df2\u7ecf\u62ff\u5230\u6240\u9700\u7684\u725b\u5976\u5c31\u76f4\u63a5\u9000\u51fa\u5faa\u73af\n  end;\n  writeln(k);//\u8f93\u51faMarry\u7684\u725b\u5976\u5236\u9020\u516c\u53f8\u62ff\u5230\u6240\u9700\u7684\u725b\u5976\u6240\u8981\u7684\u6700\u5c0f\u8d39\u7528\nend.\n```",
        "postTime": 1461562735,
        "uid": 12772,
        "name": "pgz123",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1208 \u3010[USACO1.3]\u6df7\u5408\u725b\u5976 Mixing Milk\u3011"
    }
]