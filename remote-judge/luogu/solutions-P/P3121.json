[
    {
        "content": "\u65e2\u7136\u6ca1\u4eba\u641e\u9898\u89e3\uff0c\u90a3\u6211\u5c31\u6765\u4efd\u9898\u89e3\u5427\u3002\n\n\u8fd9\u4e2a\u9898\u5b9e\u9645\u4e0a\u662f\u7528\u6808+AC\u81ea\u52a8\u673a\u5b9e\u73b0O\uff08n\uff09\u6548\u7387\u7684\u3002\n\n\u518d\u6b21\u5410\u69fd\u4e00\u4e0b\u6570\u636e\uff0c\u7eaf\u66b4\u529b\u90fd\u80fd\u8fc793\u5206\uff0c\u6570\u636e\u6c34\u7684\u4e0d\u8981\u4e0d\u8981\u7684\u3002\n\n\u4e24\u79cd\u505a\u6cd5\uff1a\n\n##\u6cd51\uff1a\u6808+AC\u81ea\u52a8\u673a\n\n\u5f00\u4e24\u4e2a\u6808\uff0c\u4e00\u4e2a\u8bb0\u5f55\u5f53\u524d\u8282\u70b9\u626b\u5230AC\u81ea\u52a8\u673a\u7684\u54ea\u4e2a\u5730\u65b9\u4e86\uff0c\u4e00\u4e2a\u8bb0\u5f55\u5f53\u7136\u6808\u5185\u5408\u6cd5\u7684\u5b57\u7b26\uff0c\u6bcf\u5f53\u53d1\u73b0\u4e00\u4e2a\u80fd\u5220\u53bb\u7684\u5b57\u7b26\u4e32\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u628a\u4e24\u4e2a\u6808\u90fd\u51cf\u53bb\u5b57\u7b26\u4e32\u957f\u5ea6\u5373\u53ef\uff0c\u628anow\u4fee\u6539\u4e00\u4e0b\uff0c\u7ee7\u7eed\u5f80\u540e\u626b\u5373\u53ef\uff0c\u6700\u540e\u8f93\u51fa\u7b2c\u4e8c\u4e2a\u6808\u5373\u53ef\u3002\n\n##\u6cd52\uff1a\u66b4\u529b\u7384\u5b66AC\u81ea\u52a8\u673a\n\n\u4e0d\u7528\u6808\uff0csign\u8bb0\u5f55\u5f53\u524d\u8282\u70b9\u626b\u5230AC\u81ea\u52a8\u673a\u7684\u54ea\u4e2a\u5730\u65b9\uff0c\u6211\u4eec\u5f00\u4e00\u4e2anext\u6570\u7ec4\u548cpre\u6570\u7ec4\uff0c\u8bb0\u5f55\u5f53\u524d\u8fd9\u4e2a\u70b9\u7684\u540e\u9762\u90a3\u4e2a\u70b9\u662f\u51e0\u53f7\u3001\u524d\u9762\u90a3\u4e2a\u70b9\u662f\u51e0\u53f7\uff0c\u6bcf\u5f53\u53d1\u73b0\u4e00\u4e2a\u80fd\u5220\u53bb\u7684\u5b57\u7b26\u4e32\u7684\u65f6\u5019\uff0c\u66b4\u529b\u8df3\u5230\u5b57\u7b26\u4e32\u5934\u4e0a\u7684pre\uff0c\u5c06\u5176\u7684next\u4fee\u6539\u4e3a\u5b57\u7b26\u4e32\u5c3e\u7684next\uff0c\u4fee\u6539\u4e00\u4e0bnow\uff0c\u7ee7\u7eed\u626b\u5c31\u884c\uff0c\u8fd9\u6837\u4e5f\u80fdA\u3002\u56e0\u4e3a\u8981O\uff08n\uff09\u9884\u5904\u7406\u4e00\u4e0bnext\u548cpre\uff0c\u6240\u4ee5\u4f1a\u6bd4\u6cd51\u7a0d\u5fae\u6162\u4e00\u4e22\u4e22\u3002\uff08\u9b3c\u77e5\u9053\u6211\u4e3a\u5565\u7384\u5b66\u7684\u6cd52\u5361\u8bc4\u6d4b\u673a\u7684\u6bd4\u6cd51\u8dd1\u7684\u5feb\u51e0\u6beb\u79d2\uff09\n\n##\u6cd51\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nchar s[100001],ori[100001];\nint n,tot,w,top;\nint trie[100001][26],fail[100001],heap[100001],sign[100001];\nint isend[100001];\nvoid insert(char *s){\n    int now=0,len=strlen(s);\n    for(int i=0;i<len;i++){\n        int x=s[i]-'a';\n        if(!trie[now][x])trie[now][x]=++tot;\n        now=trie[now][x];\n    }\n    isend[now]=len;\n}\nvoid makefail(){\n    queue<int> q;\n    for(int i=0;i<26;i++)\n    if(trie[0][i])q.push(trie[0][i]);\n    while(!q.empty()){\n        int now=q.front();q.pop();\n        for(int i=0;i<26;i++){\n            if(!trie[now][i]){\n                trie[now][i]=trie[fail[now]][i];\n                continue;\n            }        \n            fail[trie[now][i]]=trie[fail[now]][i];\n            q.push(trie[now][i]);\n        }\n    }\n}\nvoid solve(char *s){\n    int now=0,len=strlen(s),i=0;\n    w=0;\n    while(i<len){\n        int x=s[i]-'a';\n        now=trie[now][x];\n        sign[++top]=now;\n        heap[top]=i;\n        if(isend[now]){\n            top-=isend[now];\n            if(!top) now=0;\n            else now=sign[top];\n        }\n        i++;\n    }\n}\nint main()\n{\n    scanf(\"%s\",s);\n    scanf(\"%d\",&n);\n    int len=strlen(s);\n    for(int i=1;i<=n;i++){\n        scanf(\"%s\",ori);\n        insert(ori);\n    }\n    makefail();\n    solve(s);\n    for(int i=1;i<=top;i++)\n    printf(\"%c\",s[heap[i]]);\n    return 0;\n}\n```",
        "postTime": 1489546659,
        "uid": 24559,
        "name": "Treeloveswater",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3121 \u3010[USACO15FEB]\u5ba1\u67e5\uff08\u9ec4\u91d1\uff09Censoring (Gold)\u3011"
    },
    {
        "content": "\u5b9e\u6d4b\u672c\u9898\u6570\u636e\u5f88\u6c34 \u81ea\u7136\u6ea2\u51fa\u54c8\u5e0c\u53ef\u4ee5\u8fc7 \u53c8\u6ca1\u770b\u5230\u6709\u4eba\u53d1\u54c8\u5e0c\u7684\u9898\u89e3 \u6240\u4ee5\u6765\u53d1\u4e00\u7bc7...\uff08\u5176\u5b9e\u662f\u56e0\u4e3a\u672c\u83dc\u9e21\u8c03\u4e0d\u51faAC\u81ea\u52a8\u673a\uff09\n\n\u9996\u5148\u626b\u63cf\u5355\u8bcd\u7684\u65f6\u5019\u628a\u6bcf\u4e2a\u5355\u8bcd\u7684Hash\u503c\u9884\u5904\u7406\u51fa\u6765 \u7136\u540e\u8ddf\u5b83\u7684\u957f\u5ea6\u4e00\u8d77\u5b58\u5728\u7ed3\u6784\u4f53\u91cc\uff0c\u628a\u7ed3\u6784\u4f53\u6309\u7167\u5355\u8bcd\u957f\u5ea6\u6392\u5e8f\uff0c\u7136\u540e\u5728\u6700\u540e\u5728\u6808\u91cc\u6a21\u62df\u7684\u65f6\u5019\u4e00\u4e2a\u4e00\u4e2a\u628a\u539f\u4e32\u4e2d\u7684\u5b57\u7b26\u63a8\u5230\u6808\u91cc\uff0c\u53ea\u8981\u5927\u4e8e\u6700\u5c0f\u7684\u5355\u8bcd\u957f\u5ea6\u5c31\u53ef\u4ee5\u5f00\u59cb\u54c8\u5e0c\u5339\u914d\uff0c\u5982\u679c\u5339\u914d\u6210\u529f\u5c31\u628a\u8fd9\u4e00\u6bb5\u51fa\u6808\u3002\n\n\u603b\u4f53\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(n*\u4e32\u957f) \uff0c\u8dd1\u4e0d\u6ee1\u5c31\u662f\u4e86......\u4e0b\u9762\u4e0a\u4ee3\u7801\u3002\n\n```cpp\n// luogu-judger-enable-o2\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\nconst int maxn=100000+10;\nconst ll b=131;\nll Hash[maxn],Pow[maxn]={1};\nchar str[maxn],u[maxn],tmp[maxn];\nstruct Tmp\n{\n    int len;\n    ll Hash;\n}t[maxn];//\u7ed3\u6784\u4f53\u5b58\u5355\u8bcd\nbool cmp(const Tmp & a,const Tmp & b)\n{\n    return a.len<b.len;\n}\nint ptr;\ninline ll GetHash(int j,int i)\n{\n    return Hash[i]-Hash[j-1]*Pow[i-j+1];\n}//\u8ba1\u7b97\u5b50\u4e32\u54c8\u5e0c\u503c\nint main()\n{\n    scanf(\"%s\",str+1);\n    int n=strlen(str+1),m;\n    scanf(\"%d\",&m);\n    for(int i=1;i<=m;++i)\n    {\n        scanf(\"%s\",tmp+1);\n        t[i].len=strlen(tmp+1);\n        for(int j=1;j<=t[i].len;++j)\n            t[i].Hash=t[i].Hash*b+tmp[j];\n    }\n    sort(t+1,t+1+m,cmp);\n    for(int i=1;i<=n;++i)\n        Pow[i]=(Pow[i-1]*b);\n    for(int i=1;i<=n;++i)\n    {\n        u[++ptr]=str[i],Hash[ptr]=Hash[ptr-1]*b+u[ptr];\n        while(ptr<t[1].len&&i<n)u[++ptr]=str[++i],Hash[ptr]=Hash[ptr-1]*b+u[ptr];\n        //\u786e\u4fdd\u6808\u4e2d\u5b57\u7b26\u6570\u91cf\u5927\u4e8e\u6700\u5c0f\u7684\u5355\u8bcd\u957f\u5ea6\n        for(int j=1;j<=m&&ptr;++j)\n            if(ptr-t[j].len+1>=1&&GetHash(ptr-t[j].len+1,ptr)==t[j].Hash){ptr-=t[j].len;}\n            //\u5339\u914d\u64cd\u4f5c\uff0c\u82e5\u5339\u914d\u5219\u51fa\u6808\n    }\n    for(int i=1;i<=ptr;++i)\n        putchar(u[i]);\n    puts(\"\");\n    return 0;\n}\n\n```\n\n\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\u6c42\u8fc7...\u8c22\u8c22\u4e86",
        "postTime": 1537406035,
        "uid": 65475,
        "name": "w43322",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3121 \u3010[USACO15FEB]\u5ba1\u67e5\uff08\u9ec4\u91d1\uff09Censoring (Gold)\u3011"
    },
    {
        "content": "\u5199\u8fd9\u4e00\u9898\u4e4b\u524d\u5148\u770b\u8fd9\u4e00\u9898,\n\n[P4824 [USACO15FEB]Censoring (Silver) \u5ba1\u67e5(\u94f6)](https://www.luogu.org/problem/P4824)\n\n\u521a\u521a\u90a3\u9053\u9898\u7684AC\u601d\u8def\u662f\u8fd9\u6837\u7684\uff1a\n\n- KMP\u626b\u63cf\u5b57\u7b26\u4e32S,\u7528\u6808\u5b58\u4e0b\u626b\u8fc7\u7684\u90e8\u5206,\n\n    \u53ca\u5f53\u65f6\u5b57\u7b26\u4e32T\u5339\u914d\u5230\u7684\u4f4d\u7f6eid\n\n- \u5982\u679c\u5339\u914d\u6210\u529f,\u5219\u5728\u6808\u4e2d\u5220\u9664\u4e32T,\u540c\u65f6id\u66f4\u65b0\u4e3a\u6808\u9876\u7684id\n\n   ####     \u539f\u56e0:\u5220\u9664\u5b50\u4e32\u540e\u51fa\u73b0\u7684\u65b0\u5b50\u4e32\u53ea\u4f1a\u5728\u63a5\u5408\u5904\u4ea7\u751f\n    \n- \u5339\u914d\u5b8c\u540e\u8f93\u51fa\u6808\u5373\u53ef,\u65f6\u95f4\u590d\u6742\u5ea6O(n)\n\n\u65e2\u7136\u521a\u624d\u5355\u6a21\u5f0f\u4e32\u6211\u4eec\u662f\u7528KMP+\u6808\u5b8c\u6210\u7684,\n\n\u90a3\u4e48\u5f53\u524d\u7684\u591a\u6a21\u5f0f\u4e32\u6211\u4eec\u53ef\u7528**AC\u81ea\u52a8\u673a+\u6808**O(n)\u8f7b\u677e\u5b8c\u6210,\u505a\u6cd5\u76f8\u540c\n\n### AC\u4ee3\u7801(318ms,15.93MB)\n\n```cpp\n#include<cstdio>\nusing namespace std;\ninline unsigned int read(){\n    register char c=getchar();\n    while('0'>c||c>'9')c=getchar();\n    register unsigned int a=0;\n    while('0'<=c&&c<='9'){\n        a=a*10+c-'0';\n        c=getchar(); \n    }\n    return a;\n}//\u5feb\u8bfb(\u5c3d\u7ba1\u57fa\u672c\u6ca1\u7528) \n/*************\u961f\u5217\u548c\u6808******************/\ntemplate<typename type>class queue{\n    private:\n        type *all;\n        unsigned int head,tail,length;\n    public:\n        queue(const unsigned int size){\n            all=new type[size];\n            length=size;\n            head=1;\n            tail=0;\n        }\n        ~queue(){delete[] all;}\n        inline void push(type read){\n            tail++;\n            if(tail==length) tail=0;\n            all[tail]=read;\n        }\n        inline void pop(){\n            head++;\n            if(head==length) head=0;\n        }\n        inline bool empty(){return head==tail+1;}\n        inline type front(){return all[head];}\n};\ntemplate<typename type>class stack{\n    public:\n        unsigned int size;\n        type *t;\n        stack(const unsigned int&length){\n            t=new type[length+1];\n            size=0;\n        }\n        ~stack(){delete[] t;}\n        inline void push(type infor){\n            size++;\n            t[size]=infor;\n        }\n        inline void pop(const unsigned int&length){\n        \tsize-=length;\n        }\n        inline bool empty(){return size==0;}\n        inline type top(){return t[size];}\n};\n/***************************************/\nstruct pair{\n    char c;\n    unsigned int id;\n}pa;//\u6808\u5b58\u5165\u7684\u6570\u636e \n#define maxn 131072\nchar *q;\n#define readstring(q)    \\\n    do{\t\\\n        q=new char[maxn];\t\\\n        scanf(\"%s\",q);\t\\\n    }while(0);\n\n/*******************\u5b57\u5178\u6811Trie***********************/ \nclass Trie{\n    private:\n        struct point{\n            unsigned int next[26],nxt,floor;\n            bool b;\n            point(){\n                for(register int i=0;i<26;i++)\n                    next[i]=0;\n                b=0;\n            }\n        }*all;\n        int size;\n    public:\n        Trie(const int&length){\n            all=new point[length+1];\n            size=0;\n            all[0].nxt=0;\n            all[0].floor=0;\n        }\n        ~Trie(){delete[] all;} \n        inline void read(){//\u8bfb\u5165\u6a21\u5f0f\u4e32T\u5e76\u5efa\u7acb\u5b57\u5178\u6811 \n            register unsigned int p=0;\n            register char c=getchar();\n            while('a'>c||c>'z') c=getchar();\n            for(;'a'<=c&&c<='z';c=getchar()){\n                c-='a';\n                if(all[p].next[c]==0){\n                    size++;\n                    all[p].next[c]=size;\n                    all[size].floor=all[p].floor+1;\n                }\n                p=all[p].next[c];\n            }\n            all[p].b=1;\n        }\n        inline void getnxt(){//\u6784\u9020\u5931\u914d\u6307\u9488,\u8f6c\u5316\u4e3aTrie\u56fe \n            queue<unsigned int>q(size+2);\n            for(register char i=0;i<26;i++){\n                if(all[0].next[i]){\n                    all[all[0].next[i]].nxt=0;\n                    q.push(all[0].next[i]);\n                }\n            }\n            register int p=q.front(),nextnxt;\n            for(;!q.empty();p=q.front()){\n                q.pop();\n                for(register int i=0;i<26;i++){\n                    nextnxt=all[all[p].nxt].next[i];\n                    if(all[p].next[i]!=0){\n                    all[all[p].next[i]].nxt=nextnxt;\n                        q.push(all[p].next[i]);\n                    }\n                    else all[p].next[i]=nextnxt;\n                }\n            }\n        }\n        inline void AC_auto(){//\u5339\u914d \n            stack<pair> s(maxn);\n            pa.id=0;\n            register int i;\n            for(i=0;'a'<=q[i]&&q[i]<='z';i++){\n                pa.c=q[i]-'a';\n                pa.id=all[pa.id].next[pa.c];//\u5339\u914d\u4e0b\u884c \n                s.push(pa);//\u628a\u5339\u914d\u7684\u4f4d\u7f6e\u5b58\u5165\u6808 \n                if(all[pa.id].b){\n                    s.pop(all[pa.id].floor);\n                    if(s.empty()) pa.id=0;\n                    else pa=s.top();\n                }//\u5339\u914d\u6210\u529f,\u5f39\u51fa\u6808 \n            }\n            delete q;\n            for(i=1;i<=s.size;i++)\n            \tputchar(s.t[i].c+'a');//\u8f93\u51fa \n            putchar('\\n');\n            //\u6ce8\u610f\u8f93\u51fa\u65f6\u4e00\u5b9a\u8981\u6362\u884c,\u4e0d\u7136\u53ea\u670993!!!!!!!!!!! \n        }\n}; \n/******************************************************/\nint main(){\n    readstring(q);//\u8f93\u5165\u6a21\u5f0f\u4e32S \n    const unsigned int n=read();\n    Trie tree(maxn);\n    for(register unsigned int i=0;i<n;i++) tree.read();\n    tree.getnxt();\n    tree.AC_auto();\n    return 0;\n}\n```\n\u6700\u540e\u518d\u5f3a\u8c03\u6700\u91cd\u8981\u7684\u4e00\u70b9:\n\n## \u8f93\u51fa\u65f6\u4e00\u5b9a\u8981\u6362\u884c,\u4e0d\u7136\u7b2c7\u4e2a\u70b9\u4f1aWA,\u53ea\u670993!!!\n\n\u56e0\u4e3a\u8fd9\u4e2a\u539f\u56e0\u8c03\u4e86\u4e09\u4e2a\u6708QAQ",
        "postTime": 1564621029,
        "uid": 104726,
        "name": "wangrx",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3121 \u3010[USACO15FEB]\u5ba1\u67e5\uff08\u9ec4\u91d1\uff09Censoring (Gold)\u3011"
    },
    {
        "content": "\u849f\u84bb\u6211\u53c8\u5f00\u59cb\u5199\u9898\u89e3\u4e86\n\n\u6b22\u8fce\u8bbf\u95ee\u6211\u7684\u535a\u5ba2 <https://yjzoier.gitee.io/hexo>\n\n---\n\n\u9996\u5148\u8fd9\u9053\u9898\u6709\u4e00\u4e2a\u660e\u663e\u7684\u7279\u5f81:**\u591a\u6a21\u5f0f\u4e32\u5339\u914d**, \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5efa\u51fa **Trie\u56fe**(\u4e5f\u5c31\u662f **AC\u81ea\u52a8\u673a**)\n\n\u90a3\u4e48\u8fd9\u9053\u9898\u552f\u4e00\u7684\u96be\u70b9\u5c31\u662f\u6240\u8c13\u7684\u62fc\u5408\u8fc7\u7a0b, \u6bd4\u5982\u8bf4\u6837\u4f8b, \u5339\u914d\u8fc7\u7a0b\u662f\u8fd9\u6837\u7684:\n\n> beginthe**escape**xecutionatthebreakofdawn \n\n> beginth**execution**atthebreakofdawn \n\n> beginthatthebreakofdawn \n\n\u5176\u5b9e\u6211\u4eec\u53d1\u73b0, \u6211\u4eec\u53ea\u9700\u8981\u8bb0\u5f55\u5728\u67d0\u4e2a\u70b9\u7684\u65f6\u5019\u5728 **Trie\u56fe** \u4e0a\u5339\u914d\u7684\u4f4d\u7f6e\u5c31\u53ef\u4ee5\u4e86, \u5339\u914d\u6210\u529f\u67d0\u4e2a\u5355\u8bcd\u540e, \u53ea\u9700\u8981\u8df3\u5230\u8fd9\u4e2a\u5355\u8bcd\u7684\u524d\u4e00\u4e2a\u5b57\u7b26\u7684\u4f4d\u7f6e\u5373\u53ef.\n\n\u4f46\u662f\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u5220\u9664\u5b57\u7b26\u4e32\u4e2d\u67d0\u4e00\u6bb5\u5e76\u4e14\u8ba1\u7b97\u4f4d\u7f6e\u7684\u64cd\u4f5c, \u5176\u5b9e\u6211\u4eec\u4e0d\u9700\u8981\u7ef4\u62a4\u5220\u9664\u64cd\u4f5c, \u8fd9\u6837\u4f1a\u6bd4\u8f83\u590d\u6742, \u53ef\u4ee5\u628a\u6bcf\u4e00\u4e2a\u5b57\u7b26\u4f9d\u6b21\u538b\u5165\u6808, \u5220\u9664\u7684\u65f6\u5019\u9010\u4e2a\u5220\u9664\u5c31\u53ef\u4ee5\u4e86, \u7531\u4e8e\u6bcf\u4e00\u4e2a\u5b57\u7b26\u53ea\u4f1a\u5220\u9664\u4e00\u6b21, \u65f6\u95f4\u5c31\u662f $O(n)$\n\n```c++\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <queue>\nusing namespace std;\n\nconst int N = 100007;\n\nstruct AC{\n\tint c[N][26], fail[N], val[N], top;\n\tqueue<int> q;\n\tvoid ins(char *ch){\n\t\tint len = strlen(ch), now = 0;\n\t\tfor (int i = 0; i < len; ++i){\n\t\t\tint v = ch[i] - 'a';\n\t\t\tif (!c[now][v]) c[now][v] = ++top;\n\t\t\tnow = c[now][v];\n\t\t}\n\t\tval[now] = len;\n\t}\n\tvoid build(){\n\t\tfor (int i = 0; i < 26; ++i)\n\t\t\tif (c[0][i]){\n\t\t\t\tq.push(c[0][i]);\n\t\t\t\tfail[c[0][i]] = 0;\n\t\t\t}\n\t\twhile (!q.empty()){\n\t\t\tint u = q.front(); q.pop();\n\t\t\tfor (int i = 0; i < 26; ++i)\n\t\t\t\tif (c[u][i]){\n\t\t\t\t\tfail[c[u][i]] = c[fail[u]][i];\n\t\t\t\t\tq.push(c[u][i]);\n\t\t\t\t} else c[u][i] = c[fail[u]][i];\n\t\t}\t\t\t\n\t}\n} ac;\n\nint n, top, loc[N], ans[N];\nchar p[N], s[N];\n\nint main(){\n\tscanf(\"%s\", s);\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; ++i){\n\t\tscanf(\"%s\", p);\n\t\tac.ins(p);\n\t}\n\tac.build();\n\tint len = strlen(s), now = 0;\n\tfor (int i = 0; i < len; ++i){\n\t\tloc[i] = now = ac.c[now][s[i] - 'a'];\n\t\tans[++top] = i;\n\t\tif (ac.val[now]) {\n\t\t\ttop -= ac.val[now];\n\t\t\tnow = loc[ans[top]];\n\t\t}\n\t}\n\tfor (int i = 1; i <= top; ++i)\n\t\tputchar(s[ans[i]]);\n\tputchar('\\n');\n\treturn 0;\n}\n```\n\n",
        "postTime": 1547633919,
        "uid": 31635,
        "name": "yingjz",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3121 \u3010[USACO15FEB]\u5ba1\u67e5\uff08\u9ec4\u91d1\uff09Censoring (Gold)\u3011"
    },
    {
        "content": "# [USACO15FEB]Censoring G\uff08AC\u81ea\u52a8\u673a\uff0c\u53ef\u6301\u4e45\u5316\uff09\n\n## \u9898\u76ee\u53d9\u8ff0\n\n\u7ed9\u4f60\u4e00\u4e2a\u6587\u672c\u4e32\uff0c\u548c\u4e00\u5927\u5806\u6a21\u5f0f\u4e32\uff0c\u73b0\u5728\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a\n\n+ \u627e\u5230\u51fa\u73b0\u4f4d\u7f6e\u6700\u9760\u524d\u7684\u6a21\u5f0f\u4e32\u3002\n+ \u5220\u6389\u5b83\u3002\n\n\u4fdd\u8bc1\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5b50\u4e32\u3002\n\n## \u9898\u89e3\n\n\u5efa\u7acb`AC`\u81ea\u52a8\u673a\uff0c\u628a\u6587\u672c\u4e32\u653e\u8fdb\u53bb\u5339\u914d\u3002\u5339\u914d\u5230\u4e00\u4e2a\u51fa\u73b0\u8fc7\u7684\u5b57\u7b26\u4e32\uff0c\u628a\u5b83\u5220\u6389\u3002\u5177\u4f53\u5982\u4f55\u5220\uff1f\u641e\u4e00\u4e2a\u5e76\u67e5\u96c6\uff0c\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u533a\u95f4\u8d4b\u96f6\uff0c\u5e76\u67e5\u96c6\u91cc\u7ef4\u62a4\u4e0b\u4e00\u4e2a\u662f1\u7684\u70b9\u5373\u53ef\u3002\u5220\u6389\u4e4b\u540e\uff0c\u6211\u4eec\u53d1\u73b0\u8981\u8d70\u5230\u4ee5\u524d\u7684\u8282\u70b9\u4e0a\uff08\u5176\u5b9e\u5c31\u662f\u64a4\u9500\u64cd\u4f5c\u3002\u3002\u3002\uff09\uff0c\u4e8e\u662f\u8003\u8651\u7528\u6808\u53ef\u6301\u4e45\u5316\u4e00\u4e0b\u4ee5\u524d\u8d70\u5230\u7684\u5730\u65b9\u5c31\u53ef\u4ee5\u4e86\u3002\u7136\u540e\u4f1a\u53d1\u73b0\u5e76\u4e0d\u9700\u8981\u5e76\u67e5\u96c6\uff0c\u56e0\u4e3a\u53ea\u8981\u5728\u6808\u91cc\u8bb0\u5f55\u8d70\u5230\u6bcf\u4e2a\u5b57\u7b26\u65f6\uff0c\u8d70\u5230\u4e86\u6811\u4e0a\u7684\u54ea\u4e2a\u70b9\u3002\u6700\u540e\u6808\u7684\u6837\u5b50\u5c31\u662f\u7b54\u6848\u3002\n\n## \u4ee3\u7801\n\n+ **`AC`\u81ea\u52a8\u673a\u521d\u59cb\u5316\u6df1\u5ea6\u65f6\uff0c\u8981\u7ed9\u6839\u8282\u70b9\u7684\u513f\u5b50\u521d\u59cb\u5316\uff01\uff01\uff01**\n+ **\u9000\u56de\u7684\u65f6\u5019\u6ce8\u610f\u662f\u5426\u628a\u6808\u90fd\u9000\u5b8c\u4e86\uff0c\u5982\u679c\u9000\u5b8c\u4e86\uff0c\u5219\u9700`now=1`**\n\n```cpp\n#include <cstdio>\n#include <queue>\n#include <cstring>\nusing namespace std;\nconst int maxLen = 1e5 + 5;\nstruct AcAutomation {\n\tint tot, ch[maxLen][26], fail[maxLen], dep[maxLen];\n\tbool tag[maxLen];\n\tAcAutomation() : tot(1) {}\n\tvoid Insert(char *str) {\n\t\tint now = 1, len = strlen(str + 1);\n\t\tfor (int pos = 1; pos <= len; ++pos) {\n\t\t\tif (!ch[now][str[pos] - 'a'])\n\t\t\t\tch[now][str[pos] - 'a'] = ++tot;\n\t\t\tnow = ch[now][str[pos] - 'a'];\n\t\t}\n\t\ttag[now] = 1;\n\t}\n\tvoid BuildFail() {\n\t\tqueue<int> Q;\n\t\twhile (!Q.empty()) Q.pop();\n\t\tfail[1] = 1;\n\t\tfor (int son = 0; son < 26; ++son) {\n\t\t\tif (ch[1][son]) {\n\t\t\t\tfail[ch[1][son]] = 1;\n\t\t\t\tdep[ch[1][son]] = 1;\n\t\t\t\tQ.push(ch[1][son]);\n\t\t\t} else\n\t\t\t\tch[1][son] = 1;\n\t\t}\n\t\twhile (!Q.empty()) {\n\t\t\tint now = Q.front();\n\t\t\tQ.pop();\n\t\t\tfor (int son = 0; son < 26; ++son) {\n\t\t\t\tif (ch[now][son]) {\n\t\t\t\t\tfail[ch[now][son]] = ch[fail[now]][son];\n\t\t\t\t\tQ.push(ch[now][son]);\n\t\t\t\t\tdep[ch[now][son]] = dep[now] + 1;\n\t\t\t\t} else\n\t\t\t\t\tch[now][son] = ch[fail[now]][son];\n\t\t\t}\n\t\t}\n\t}\n\tvoid Check() {\n\t\tfor (int i = 1; i <= tot; ++i) {\n\t\t\tprintf(\"i : %d fail : %d\\n\", i, fail[i]);\n\t\t\tfor (int son = 0; son < 26; ++son)\n\t\t\t\tprintf(\"\tson : %d node id : %d\\n\", son, ch[i][son]);\n\t\t}\n\t}\n} ac;\nint nbSml, top;\nchar big[maxLen], sml[maxLen];\nstruct Node {\n\tint node;\n\tchar ch;\n\tNode(int p, char c) : node(p), ch(c) {}\n\tNode() : node(0), ch(0) {}\n} stk[maxLen];\nint main() {\n\tscanf(\"%s%d\", big + 1, &nbSml);\n\tfor (int i = 1; i <= nbSml; ++i) {\n\t\tscanf(\"%s\", sml + 1);\n\t\tac.Insert(sml);\n\t}\n\tac.BuildFail();\n\tint bigLen = strlen(big + 1);\n\tint now = 1;\n\tfor (int pos = 1; pos <= bigLen; ++pos) {\n\t\tnow = ac.ch[now][big[pos] - 'a'];\n\t\tstk[++top] = Node(now, big[pos]);\n\t\tif (ac.tag[now]) {\n\t\t\ttop -= ac.dep[now];\n\t\t\tif (top) now = stk[top].node;\n\t\t\telse now = 1;\n\t\t}\n\t}\n\tfor (int i = 1; i <= top; ++i) printf(\"%c\", stk[i].ch);\n\tprintf(\"\\n\");\n\treturn 0;\n}\n```\n\n## \u77e5\u8bc6\u70b9\n\n+ \u7b80\u964b\u7684\u53ef\u6301\u4e45\u5316\u53ef\u4ee5\u7528\u6808\u5b9e\u73b0\uff08\u540c\u6837\u7684\u4e1c\u897f\u8fd8\u6709\uff0c\u53ef\u64a4\u9500\u5e76\u67e5\u96c6\u3002\u3002\u3002\uff09\u3002",
        "postTime": 1582889605,
        "uid": 75715,
        "name": "KokiNiwa",
        "ccfLevel": 0,
        "title": "Censoring G\uff08AC\u81ea\u52a8\u673a\uff0c\u53ef\u6301\u4e45\u5316\uff09"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](https://www.luogu.org/problem/P3121)\u770b\u9898\u76ee\u3002 \n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5efa\u8bae\u5148\u53bb\u628a\u5b6a\u751f\u9898[[USACO15FEB]Censoring (Silver) \u5ba1\u67e5(\u94f6)](https://www.luogu.org/problem/P4824)\u7ed9~~\u6c34\u8fc7\u53bb~~\u505a\u4e86\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7136\u540e\u8003\u8651\u5199\u8fd9\u4e00\u9053\u9898\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u770b\u5230\u4e00\u4e2a\u6587\u672c\u4e32\uff0c\u591a\u4e2a\u6a21\u5f0f\u4e32\u7684\u9898\uff0c\u4e0d\u96be\u60f3\u5230$AC$\u81ea\u52a8\u673a\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7136\u540e\u8003\u8651\u5982\u4f55\u5bf9$AC$\u81ea\u52a8\u673a\u9b54\u6539\u4e4b\u540e\u505a\u8fd9\u4e00\u9053\u9898\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8003\u8651\u7528\u4e00\u4e2a\u6307\u9488$p$\u5b58\u4e0b\u6765$Trie$\u4e0a\u9762\u7684\u4f4d\u7f6e\u3002\u5982\u679c\u52a0\u5165\u4e00\u4e2a\u5b57\u7b26\u4e4b\u540e\uff0c$p$\u6307\u5411\u4e86\u4e00\u4e2a\u5e26\u6709\u7ec8\u6b62\u6807\u8bb0\u7684\u8282\u70b9\uff0c\u6211\u4eec\u663e\u7136\u5c31\u8981\u628a\u6307\u5411\u7684\u8fd9\u4e2a\u8282\u70b9\u6240\u4ee3\u8868\u7684\u6a21\u5f0f\u4e32\u4ece\u6587\u672c\u4e32\u4e2d\u5220\u9664\u3002\u8003\u8651\u8fd9\u4e2a\u64cd\u4f5c\u7684\u5b9e\u9645\u542b\u4e49\u3002\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u76f8\u5f53\u4e8e\u8fdb\u884c\u4e86\u4e00\u6b65\u56de\u6eaf\u2014\u2014\u5047\u5982\u5f53\u524d\u4f4d\u4e8e$T_i$\uff0c\u5f53\u524d\u9700\u8981\u5220\u9664\u7684\u957f\u5ea6\u4e3a$l$\uff0c\u6211\u4eec\u5c31\u76f8\u5f53\u4e8e\u91cd\u65b0\u8d70\u5230\u4e86\u8fd9\u4e2a\u5355\u8bcd\u7684$i-l$\u7684\u4f4d\u7f6e\uff0c\u5e76\u4e14\u6211\u4eec\u4e0b\u4e00\u6b65\u5c31\u4f1a\u76f4\u63a5\u52a0\u5165\u5b57\u7b26$i+1$\uff0c\u800c\u4e0d\u662f$i-l+1$\u4e86\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e0d\u96be\u60f3\u5230\u7528\u4e00\u4e2a\u6570\u7ec4$tp[i]$\uff0c\u8868\u793a\u8d70\u5230$T_i$\u65f6\u5019$p$\u7684\u4f4d\u7f6e\uff0c\u8fd9\u6837\u56de\u6eaf\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u76f4\u63a5\u5957\u7528\u539f\u6765\u7684\u4fe1\u606f\u4e86\u3002\n# \u4ee3\u7801\n```cpp\n#include <queue>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n\nconst int MAXS = 1e5 + 5, MAXL = 1e5 + 5;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n    x = 0;char s = getchar();int f = 1;\n    while( s < '0' || '9' < s ){ if( s == '-' ) f = -1; s = getchar(); }\n    while( '0' <= s && s <= '9' ){ x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar(); }\n    x *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n    if( x < 0 ){ x = -x, putchar( '-' ); }\n    if( 9 < x ){ write( x / 10 ); }\n    putchar( x % 10 + '0' );\n}\n\nqueue<int> q;\n\nint trie[MAXL][26], fail[MAXL], dep[MAXL];\n//dep\u7528\u4e8e\u56de\u6eaf\u65f6\u5019\u5f97\u5230\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 \nint tmp[MAXS];\nchar S[MAXS], str[MAXL], ans[MAXS];\nint N, siz = 1;\nbool ending[MAXL];\n\nvoid insert( const char *s )\n{\n\tint len = strlen( s + 1 ), p = 1, indx;\n\tfor( int i = 1 ; i <= len ; i ++ )\n\t{\n\t\tindx = s[i] - 'a';\n\t\tif( ! trie[p][indx] ) trie[p][indx] = ++ siz, dep[trie[p][indx]] = dep[p] + 1;\n\t\tp = trie[p][indx];\n\t}\n\tending[p] = true;\n}\n\nvoid init()\n{\n\twhile( ! q.empty() ) q.pop();\n\tfail[1] = 0, q.push( 1 );\n\tint u, v;\n\twhile( ! q.empty() )\n\t{\n\t\tu = q.front(); q.pop();\n\t\tfor( int i = 0 ; i < 26 ; i ++ )\n\t\t{\n\t\t\tif( ! trie[u][i] ) { trie[u][i] = trie[fail[u]][i]; continue; }\n\t\t\tv = fail[u];\n\t\t\twhile( v && ! trie[v][i] ) v = fail[v];\n\t\t\tif( trie[v][i] ) fail[trie[u][i]] = trie[v][i];\n\t\t\telse fail[trie[u][i]] = 0;\n\t\t\tq.push( trie[u][i] );\n\t\t\t//\u7531\u4e8e\u9898\u76ee\u4fdd\u8bc1\u4e86\u4e0d\u4f1a\u6709\u4e00\u4e2a\u4e32\u662f\u53e6\u4e00\u4e2a\u7684\u5b50\u4e32\uff0c\u6240\u4ee5\u4e0d\u7528\u5bf9\u7ed3\u5c3e\u6807\u8bb0\u8fdb\u884c\u8f6c\u79fb \n\t\t}\n\t}\n}\n\nint main()\n{\n\tscanf( \"%s\", S + 1 );\n\tread( N );\n\tfor( int i = 0 ; i < 26 ; i ++ ) trie[0][i] = 1; ending[0] = false, fail[0] = 0;\n\tfor( int i = 1 ; i <= N ; i ++ ) scanf( \"%s\", str + 1 ), insert( str );\n\tinit();\n\tint p = 1, r = 0, L = strlen( S + 1 );\n\ttmp[0] = 1;\n\tfor( int i = 1, indx ; i <= L ; i ++ )\n\t{\n\t\tindx = S[i] - 'a';\n\t\twhile( p && ! trie[p][indx] ) p = fail[p];\n\t\tif( trie[p][indx] ) p = trie[p][indx];\n\t\tr ++;\n \t\tif( ending[p] ) p = tmp[r -= dep[p]];\n \t\t//\u8fdb\u884c\u56de\u6eaf \n\t\telse ans[r] = S[i], tmp[r] = p;\n\t\t//\u5411\u7b54\u6848\u52a0\u5165\u5b57\u7b26\uff08\u4f46\u5e76\u4e0d\u662f\u6700\u7ec8\u7684\u7b54\u6848\uff0c\u4e4b\u540e\u53ef\u80fd\u8fd8\u4f1a\u5220\u9664\u4e00\u4e9b\uff09 \n\t}\n\tfor( int i = 1 ; i <= r ; i ++ ) putchar( ans[i] );\n\tputs( \"\" );\n\treturn 0;\n}\n```",
        "postTime": 1573738986,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[USACO15FEB]\u5ba1\u67e5\uff08\u9ec4\u91d1\uff09Censoring (Gold)"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u697c\u4e0b\u5946\u4f6c\u90fd\u7528\u6808\u554aQwQ\n\n\u8fd9\u9898\u7528\u94fe\u8868\u4e5f\u53ef\u4ee5\u554a\n\n\u5148\u628a\u5355\u8bcd\u5efa\u6210ac\u673a\uff0c\u7136\u540e\u628a\u6587\u7ae0\u653e\u8fdb\u53bb\u8dd1\u4e00\u904d\uff0c\u5220\u9664\u7684\u65f6\u5019\u7528\u94fe\u8868\u6807\u8bb0\u5c31\u53ef\u4ee5\u4e86\u3002\n\n**\u4f46\u662f\u8fd9\u91cc\u6709\u4e2a\u95ee\u9898\uff1a**\n\n\u5220\u9664\u5b8c\u4e4b\u540e\uff0c$i$\u8fd8\u8981\u7ee7\u7eed\u589e\u52a0\uff0c\u4f46\u662f$u$\uff08\u81ea\u52a8\u673a\u4e2d\u7684\u8282\u70b9\uff09\u8fd8\u662f\u73b0\u5728\u7684\uff0c\u6240\u4ee5\u8981\u628a$u$\u8fd8\u539f\u5230\u5220\u9664\u4e4b\u524d\u7684\u72b6\u6001\u3002\n\n\u4ee5\u6837\u4f8b\u4e3a\u4f8b\uff1a\n\n```\nbegintheescapexecutionatthebreakofdawn \n2 \nescape \nexecution \n\n```\n\u7b2c\u4e00\u6b21\u5339\u914d\u5230$escape$\uff0c\u6b64\u65f6$i$\u5728$13$\uff08\u4e5f\u5c31\u662f\u5b57\u7b26$p$\u7684\u4f4d\u7f6e\uff09\uff0c\u524d\u9762\u4e0e\u540e\u9762\u63a5\u5728\u4e00\u8d77\u4e86\uff0c\u8981\u5339\u914d$execution$\uff0c\u4f46\u6b64\u65f6$u$\u8fd8\u662f\u5728\u5339\u914d\u5b8c$escape$\uff08\u4e5f\u5c31\u662f$i$\u5728$p$\u7684\u4f4d\u7f6e\uff09\u65f6\u7684\u4f4d\u7f6e\uff0c\u4e0d\u80fd\u7ee7\u7eed\u5339\u914d\uff0c\u9700\u8981\u8c03\u5230$execution$\u7684\u5f00\u5934\u65f6\u7684\u4f4d\u7f6e\u624d\u53ef\u4ee5\u7ee7\u7eed\u5339\u914d\uff0c\u6240\u4ee5\u9700\u8981\u518d\u5f00\u4e00\u4e2a$bk$\u6570\u7ec4\u5b58\u50a8\u5f53\u5339\u914d\u5230\u7b2c$i$\u4f4d\u65f6\uff0c$u$\u7684\u4f4d\u7f6e\u3002\n\ncode:\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nchar wz[5200010];//\u6587\u7ae0\nchar dc[5200010];//\u5355\u8bcd\nint ch[5200010][30];//Trie\u6811,ch[u][i]\u8868\u793au\u53f7\u8282\u70b9\u7684\u8f6c\u79fb\u8fb9i\u8fde\u63a5\u7684\u8282\u70b9\nint bo[5200010];//\u7ed3\u5c3e\u6807\u8bb0\nint ans[5200010];\nint T;\nint n,m;\nint tot=1;//\u8282\u70b9\u4e2a\u6570\nbool bs=0;//\u5f00\u5934\u7684\u5904\u7406\uff08\u5982\u679c\u5355\u8bcd\u51fa\u73b0\u5728\u5f00\u5934\u7684\u8bdd\u5c31\u4f1a\u51fa\u9505\uff0c\u8981\u5355\u72ec\u5904\u7406\uff09\nint que[5200010];\nint nxt[5200010];//\u5931\u914d\u6307\u9488\nint f[5200010];\nint pre[5200010];//\u94fe\u8868\u7684\u4e0b\u4e00\u4e2a\uff08\u8fd9\u91ccnxt\u7528\u6389\u4e86\u53ea\u80fd\u7528pre\uff0c\u7531\u4e8e\u82f1\u6587\u4e0d\u597d\u641e\u53cd\u4e86\uff0c\u672c\u6765\u5e94\u8be5\u662f\u4e0a\u4e00\u4e2a\u7684\uff09\nint per[5200010];//\u4e0a\u4e00\u4e2a\nint bk[5200010];//bk\nint ff(char c){//\u628a\u5b57\u7b26\u8f6c\u6362\u4e3a\u6570\u5b57\n\treturn c-'a';\n}\nvoid insert(char *s){//\u63d2\u5165\n\tint u=1;\n\tint len=strlen(s);\n\tfor(int i=0;i<len;i++){\n\t\tint c=ff(s[i]);\n\t\tif(!ch[u][c]){\n\t\t\tch[u][c]=++tot;\n\t\t}\n\t\tu=ch[u][c];\n\t}\n\tbo[u]++;\n\tf[u]=len;\n}\nvoid bfs(){//\u6784\u5efa\u5931\u914d\u8fb9\n\tnxt[1]=0;\n\tfor(int i=0;i<26;i++){\n\t\tch[0][i]=1;\n\t}\n\tque[1]=1;\n\tfor(int head=1,tail=1;head<=tail;head++){\n\t\tint u=que[head];\n\t\tfor(int i=0;i<26;i++){\n\t\t\tif(!ch[u][i]){\n\t\t\t\tch[u][i]=ch[nxt[u]][i];\n\t\t\t}\n\t\t\telse{\n\t\t\t\tque[++tail]=ch[u][i];\n\t\t\t\tnxt[ch[u][i]]=ch[nxt[u]][i];\n\t\t\t}\n\t\t}\n\t}\n}\nvoid query(){//\u67e5\u8be2\n\tint u=1;\n\tint len=strlen(wz);\n\tfor(int i=0;i<len;i++){\n\t\tpre[i]=i+1;\n\t\tper[i]=i-1;\n\t}//\u521d\u59cb\u5316\n\tfor(int i=0;i<len;i=pre[i]){\n\t\tint c=ff(wz[i]);\n\t\tu=ch[u][c];\n\t\tbk[i]=u;//\u6807\u8bb0\n\t\tif(bo[u]){//\u5982\u679c\u5339\u914d\u5230\u4e86\n\t\t\tint pr=i;//pr\u4ee3\u8868i\u5f80\u524d\u8df3m\u4e2a\u4f4d\u7f6e\uff08\u4e5f\u5c31\u662f\u627e\u5230\u5355\u8bcd\u65f6\u5355\u8bcd\u5f00\u5934\u7684\u4f4d\u7f6e\uff09\n\t\t\tfor(int k=1;k<=f[u];k++){\n\t\t\t\tpr=per[pr];\n\t\t\t}\n\t\t\tif(pr<0){//\u6ce8\u610f\uff01\u5982\u679c\u5f80\u524d\u8df3m\u4f4d\u65f6pr<0\uff0c\u5c31\u8bf4\u660e\u5728\u5f00\u5934\u65f6\u5c31\u53d1\u73b0\u4e86\u5355\u8bcd\n\t\t\t\tpr=0;\n\t\t\t\tbs=1;\n\t\t\t}\n\t\t\tint now=pre[i];\n\t\t\tpre[pr]=now;\n\t\t\tper[now]=pr;//\u628a\u4e2d\u95f4\u4e00\u6bb5\u5220\u6389\n\t\t\tu=bk[pr];\n\t\t}\n\t}\n}\nint main() {\n\ttot=1;\n\tscanf(\"%s\",wz);\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%s\",dc);\n\t\tinsert(dc);//\u63d2\u5165\n\t}\n\tbfs();\n\tquery();\n\tint len=strlen(wz);\n\tfor(int i=0;i<len;i=pre[i]){\n\t\tif(i==0 && bs) continue;//\u5982\u679c\u6709\u5f00\u5934\u6807\u8bb0\u8bf4\u660e\u5f00\u59cb\u90a3\u4e00\u6bb5\u5df2\u7ecf\u5220\u6389\u4e86\uff0c\u8981\u8df3\u8fc7\n        \t\t\t\t//\u4e0d\u7136\u5c31\u4f1a\u591a\u8f93\u51fa\u4e00\u4e2a\u5b57\u7b26\n\t\tprintf(\"%c\",wz[i]);\n\t}\n\tprintf(\"\\n\");//\u7b2c\u4e03\u4e2a\u70b9\u6709\u5751\uff0c\u8981\u6362\u884c...\n\treturn 0;\n}\n\n```",
        "postTime": 1562295907,
        "uid": 56565,
        "name": "Stella_Yan",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3121 \u3010[USACO15FEB]\u5ba1\u67e5\uff08\u9ec4\u91d1\uff09Censoring (Gold)\u3011"
    },
    {
        "content": "\u7528\u54c8\u5e0c\u505a\u7684\uff0c\u81ea\u8ba4\u4e3a\u7801\u91cf\u8f83\u5c0f\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nchar s[10000001],t[10000001],u[10000001];\nunsigned long long ha[10000001],hash[100000001],powe[10000001];\nint n,t_len[100000001];\nint base=2333333;\nint main(){\n\tpowe[0]=1;\n\thash[0]=0;\n\tscanf(\"%s%d\",s+1,&n);\n\tint cnt=0,s_len=strlen(s+1);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%s\",t+1);\n\t\tt_len[i]=strlen(t+1);\n\tfor(int j=1;j<=t_len[i];j++){\n\t\tif(!powe[j])\n\t\t\tpowe[j]=powe[j-1]*base;\n\t\tha[i]*=base;//\u6c42\u5404\u4e2a\u5355\u8bcd\u7684\u54c8\u5e0c\u503c\n\t\tha[i]+=(unsigned long long)t[j];\n\t}\n\t}\n\tfor(int i=1;i<=s_len;i++){\n\t\tu[++cnt]=s[i];\n\t\thash[cnt]=hash[cnt-1]*base+(unsigned long long)s[i];\n\t\tfor(int j=1;j<=n;j++){\n\t\tif(ha[j]==hash[cnt]-hash[cnt-t_len[j]]*powe[t_len[j]])//\u6bd4\u8f83\n                                                        //\u54c8\u5e0c\u503c\u662f\u5426\u76f8\u7b49\n\t\t\tcnt-=t_len[j];//\u6808\u9876\u6307\u9488\u4e0b\u538b\uff0c\u5f39\u51fa\u6b64\u5355\u8bcd\n\t\t}\n\t\t\n\t}\n\tfor(int i=1;i<=cnt;i++)\n\t\tprintf(\"%c\",u[i]);\n\tprintf(\"\\n\");//\u4e00\u5b9a\u8981\u6362\u884c\uff01\uff01\uff01\n\treturn 0;\n}\n```",
        "postTime": 1550201291,
        "uid": 108098,
        "name": "FourteenObsidian",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3121 \u3010[USACO15FEB]\u5ba1\u67e5\uff08\u9ec4\u91d1\uff09Censoring (Gold)\u3011"
    },
    {
        "content": "\u554a\uff0c\u7ec8\u4e8e\u8fc7\u4e86\uff0c\n\n\u6211\u7684\u505a\u6cd5\u662fac\u81ea\u52a8\u673a\u6807\u51c6\u6a21\u677f+\u6808+\u8bb0\u5fc6\u5316\u641c\u7d22\n\n\u56e0\u4e3a\u6bcf\u4e2a\u5355\u8bcd\u9075\u5faa\u540e\u8fdb\u5148\u51fa\u7684\u539f\u5219\uff0c\u5e76\u4e14\u6bcf\u4e2a\u5b57\u6bcd\u5728ac\u81ea\u52a8\u673a\u67e5\u627e\u7684\u4f4d\u7f6e\u65e0\u540e\u6548\u6027\uff0c\u6240\u4ee5\u53ef\u4ee5\u8bb0\u5f55\u6bcf\u4e2a\u5b57\u6bcd\u5728ac\u81ea\u52a8\u673a\u4e0a\u7684\u4f4d\u7f6e\uff0c\u7528\u6808\u7ef4\u62a4\u5f53\u524d\u53e5\u5b50\uff1b\uff08\u6ce8\uff1a\u7b2c14\u4e2a\u70b9\u65e0\u6bd4\u53cb\uff08dan\uff09\u5584\uff08teng\uff09\uff0c \u7531\u4e8e\u6bcf\u4e2a\u76f8\u540c\u4f4d\u7f6e\u63d2\u76f8\u540c\u5b57\u6bcd\u7684\u7ed3\u679c\u662f\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u8bb0\u641c\u4f18\u5316\u4e00\u4e0b\uff09\n\n\n\u611a\u8822\u5de8\u6162\u7684\u4ee3\u7801\uff1a\n\n\n\n\n\n\n\n        \n      \n        \n\n\n       \n        \n    \n    \n        \n    \n\n     \n        \n        \n       \n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\n#include<cstring>\nstruct ac {\n    ac *fail; \n    ac * xia[26];\n    int ci,ceng; \n   ac() { \n        fail = NULL;\n        ci= 0;\n        memset(xia, NULL, sizeof (xia));\n    }\n} *q[500001],*root;\nint hehe,changdu[100001],i,huhu; \nchar s1[100001];\nint zhen1,zhen2; \nvoid insert(char *str, ac *root) {\n    ac *p = root;\n    int i = 0, zimu;\n    while (str[i]) {\n        zimu = str[i] - 'a';\n        if (p->xia[zimu] == NULL)\n        {\n            p->xia[zimu] = new ac();\n        }\n        p = p->xia[zimu];\n        i++;\n    }\n    p->ci=++hehe;\n}\nvoid shipei(ac *root) {\n    int i;\n    root->fail = NULL;\n    q[zhen1++] = root;\n    while (zhen1 != zhen2) {\n        ac *now = q[zhen2++];\n        ac *p = NULL;\n        for (i = 0; i < 26; i++) {\n            if (now->xia[i] != NULL) {\n                if (now == root)\n                    now->xia[i]->fail = root;\n                else {\n                    p = now->fail;\n                    while (p != NULL) {\n                        if (p->xia[i] != NULL) {\n                            now->xia[i]->fail = p->xia[i];\n                            break;\n                        }\n                        p = p->fail;\n                    }\n                    if (p == NULL)\n                        now->xia[i]->fail = root;\n                }\n                q[zhen1++] = now->xia[i];\n            }\n        }\n    }\n}\nac *jisou[200001][27];\nint zhan[100009],zhen;\nchar ystr[100005];\nint zimu;\nac *tui(ac *now)\n{      int jishu=0;\nzimu = ystr[i] - 'a';\n   if(zhan[zhen-1]>=0&&jisou[zhan[zhen-1]][zimu]!=NULL)return jisou[zhan[zhen-1]][zimu];\n    while (now->xia[zimu] == NULL && now != root) now = now->fail,++jishu;\n        now = now->xia[zimu];\n        if(now==NULL)now=root;\n       if(zhan[zhen-1]>=0) jisou[zhan[zhen-1]][zimu]=now;\n        //if(jishu>2)cout<<i<<\" \"<<\"gg\";\n        return now;\n}\nac *f[100008];\nvoid work()\n{    //cout<<\"ppp\";\n   // ac *shang=root;\n    zhan[0]=100005;\n    f[100005]=root;int fin=strlen(ystr);\n    for(i=0;i<fin;i++)\n    {\n       zhan[++zhen]=i;\n       f[i]=tui(f[zhan[zhen-1]]);\n       if(f[i]->ci)\n       {\n           zhen-=changdu[f[i]->ci];\n       }\n    }\n    for(i=1;i<=zhen;i++)\n    {\n        printf(\"%c\",ystr[zhan[i]]);\n    }\n}\nint main() {\n//    freopen(\"censor.in\",\"r\",stdin);\n//    freopen(\"censor.out\",\"w\",stdout);\n    int n, t;\n    scanf(\"%s\", ystr);\n        zhen1 = zhen2 = 0;\n      root = new ac();\n        scanf(\"%d\", &n);\n        for(i=1;i<=n;i++){\n            scanf(\"%s\",s1);\n            insert(s1, root);\n            changdu[i]=strlen(s1);\n        }\n     //   cout<<strlen(ystr)<<\" \";\n        shipei(root);\n        //cout<<\"pp\";\n      work();\n    return 0;\n}\n```",
        "postTime": 1489558093,
        "uid": 20220,
        "name": "_HLLY_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3121 \u3010[USACO15FEB]\u5ba1\u67e5\uff08\u9ec4\u91d1\uff09Censoring (Gold)\u3011"
    },
    {
        "content": "# \u53cc\u6808+AC\u81ea\u52a8\u673a\n\u8fd9\u9898\u5176\u5b9e\u8ddf\u4e00\u9053KMP\u7b97\u6cd5\u7684\u9898\u6709\u4e00\u4e9b\u6e0a\u6e90,\u5b83\u5c31\u662f\u8fd9\u9053\u9898\u7684\u7b80\u5355\u677f\u3002\n\nClear:\n\u7ed9\u4f60\u4e24\u4e2a\u4e32A,B\uff0c\u6bcf\u6b21\u5728B\u4e32\u4e2d\u4ece\u5de6\u5230\u53f3\u627e\u4e32A\uff0c\u5e76\u5c06\u8be5\u5b50\u4e32\u5220\u9664\uff0c\u76f4\u5230\u627e\u4e0d\u5230\u4e3a\u6b62\uff0c\u95ee\u4f60\u80fd\u5220\u51e0\u6b21\u3002\n\n\u6837\u4f8b\u8f93\u5165\uff1a\nabc\n\nabcabcabaabcbccc\n\n\u6837\u4f8b\u8f93\u51fa\uff1a\n5\n\n\u601d\u8def\uff1a\n\u5f00\u4e00\u4e2a\u6808\uff0c\u6bcf\u6b21\u653e\u5165\u88ab\u5339\u914d\u5b57\u7b26\u4e32\u7684\u4e00\u4e2a\u5b57\u7b26\u3002\u5982\u679c\u5f53\u524d\u6808\u4e2d\u5b57\u7b26\u6570\u91cf\u5927\u4e8e\u7b49\u4e8e\u5339\u914d\u4e32\u7684\u957f\u5ea6\uff0c\u5f00\u59cb\u5339\u914d\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u5355\u8bcd\u5339\u914d\u5931\u8d25\uff0cbreak\u6389\uff0c\u7ee7\u7eed\u653e\u5b57\u7b26\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint lc,lb,cnt,flag,ans;\nchar a[10000001];\nstring b,c;\nint main()\n{\n\tcin>>b>>c;\n\tlb=b.size();\n\tlc=c.size();\n\tfor(int i=0;i<lc;i++)\n\t{\n\t\ta[++cnt]=c[i];\n\t\tif(cnt<b.size())\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tif(a[cnt]!=b[lb-1])\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tflag=0;\n\t\tfor(int i=cnt-lb+1,j=0;i<cnt;i++,j++)//\u5339\u914d\n\t\t{\n\t\t\tif(a[i]!=b[j])\n\t\t\t{\n\t\t\t\tflag=1;//\u53d1\u73b0\u76ee\u6807\u4e32\uff0c\u6807\u8bb0\u3002\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!flag)\n\t\t{\n\t\t\tans++;\n\t\t\tcnt-=lb;//\u51cf\u957f\u5ea6\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);//\u8f93\u51fa\n\treturn 0;\n}\n```\n\u90a3\u4e48\u7ecf\u8fc7\u8fd9\u9898\u7684\u601d\u8003\u4e4b\u540e\uff0c\u52a0\u5f3a\u7248\uff08\u5c31\u662f\u8fd9\u9898\uff09\u7684\u601d\u8def\u4e5f\u5e94\u8be5\u6cb9\u7136\u800c\u751f\u4e86\u2014\u2014\u6211\u4eec\u540c\u6837\u7528\u6808\u505a\uff0c\u4e00\u4e2a\u6808\u547d\u540d\u4e3as2\uff0c\u7528\u6765\u8868\u793a\u5f53\u524d\u8282\u70b9\u8dd1\u5230\u4e86AC\u81ea\u52a8\u673a\u4e2d\u7684trie\u6811\u54ea\u91cc\u4e86\uff0c\u53e6\u4e00\u4e2a\u6808s3\uff0c\u7528\u6765\u8868\u793a\u6700\u540e\u7684\u5b57\u7b26\u4e32\u7559\u4e0b\u4e86\u539f\u5b57\u7b26\u4e32\u7684\u54ea\u4e9b\u4f4d\u4e0a\u7684\u5b57\u7b26\u3002\n\n\u5982\u679c\u53d1\u73b0\u5f53\u524d\u8fd9\u4e00\u4e2a\u6808\u4e2d\u7684\u5b57\u7b26\u7684\u540e\u7f00\u662f\u5355\u8bcd\uff0c\u76f4\u63a5\u51cf\u53bb\u5355\u8bcd\u7684\u957f\u5ea6\uff08\u6240\u4ee5isword\u8981\u5b58\u7684\u662f\u957f\u5ea6\uff09\u3002\n\n\u5269\u4e0b\u5c31\u662f\u8f93\u51fa\u4e86\u3002\n\n\u63d0\u4e00\u4ef6\u4e8b\uff0c\u672b\u5c3e\u8bb0\u5f97putchar\uff08\"\\n\"\uff09,\u5426\u5219\u7b2c7\u4e2a\u70b9\u7384\u5b66WA\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint cnt,s2[100010],s3[100010],n,wei,top;//s2\u662f\u5b58root\uff0cs3\u662f\u5b58\u5269\u4e0b\u7684\u3002\nstring s1,s;\nqueue<int>q;\nstruct data\n{\n    int b[26],fail,isword;//isword\u7528\u6765\u5b58s.size\u3002\n}a[1000001];\nvoid build(string t)//\u5efatrie\u6811\n{\n    int root=0;\n    for(int i=0;t[i];i++)\n    {\n        int x=t[i]-'a';\n        if(!a[root].b[x])a[root].b[x]=++cnt;\n        root=a[root].b[x];\n    }\n    a[root].isword=t.size();\n}\nint main()\n{\n    cin>>s;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        cin>>s1;\n        build(s1);\n    }\n    for(int i=0;i<26;i++)\n    {\n        if(a[0].b[i])\n        {\n            q.push(a[0].b[i]);\n        }\n    }\n    while(!q.empty())\n    {\n        int k=q.front();\n        q.pop();\n        for(int i=0;i<26;i++)\n        {\n            if(a[k].b[i])\n            {\n                a[a[k].b[i]].fail=a[a[k].fail].b[i];\n                q.push(a[k].b[i]);\t\n            }else{\n            \ta[k].b[i]=a[a[k].fail].b[i];\n            } \n        }\n    }\n    int root=0;\n    //\u53cc\u6808\u8d70\u8d77\n    while(wei<s.size())\n    {\n    \tint x=s[wei]-'a';\n    \troot=a[root].b[x];\n    \ts2[++top]=root;\n    \ts3[top]=wei;\n    \tif(a[root].isword)\n    \t{\n    \t\ttop-=a[root].isword;\n    \t\tif(top==0)\n    \t\t{\n    \t\t\troot=top;\n    \t\t}else{\n    \t\t\troot=s2[top];\n    \t\t}\n    \t}\n    \twei++;\n    }\n    for(int i=1;i<=top;i++)\n    {\n    \tcout<<s[s3[i]];\n    }\n    putchar('\\n');\n    return 0;\n}\n```\nQAQAQAQ",
        "postTime": 1552651006,
        "uid": 103334,
        "name": "Honor\u8a89",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3121 \u3010[USACO15FEB]\u5ba1\u67e5\uff08\u9ec4\u91d1\uff09Censoring (Gold)\u3011"
    },
    {
        "content": "### P3121\u603b\u7ed3\n\n### \u3010\u9898\u76ee\u5927\u610f\u3011\n- \u7ed9\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32\u548cn\u4e2a\u5b57\u5178\u5355\u8bcd\uff0c\u4e00\u65e6\u53d1\u73b0\u4e00\u4e2a\u5b57\u5178\u5355\u8bcd\u5c31\u5220\u9664\uff0c\u5148\u8f93\u5165\u5b57\u5178\u5355\u8bcd\u4f18\u5148\u5220\u9664\uff0c\u6bcf\u6b21\u5220\u9664\u540e\u53ef\u80fd\u518d\u6b21\u51fa\u73b0\u5b57\u5178\u5355\u8bcd\u3002\u6c42\u6700\u7ec8\u7684\u5b57\u7b26\u4e32\u3002\n\n### \u3010\u89e3\u9898\u601d\u8def\u3011\n1. \u660e\u663e\u5730\uff0c\u9700\u8981\u5148\u5236\u9020\u4e00\u4e2aAC\u81ea\u52a8\u673a\u3002\n\n2. \u628a\u5b57\u7b26\u4e32\u653e\u5165AC\u81ea\u52a8\u673a\u91cc\u8dd1\uff0c\u5982\u679c\u53d1\u73b0\u6709\u4e00\u4e2a\u8282\u70b9\u662f\u5b57\u5178\u5355\u8bcd\u7684\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u628a\u8fd9\u6bb5\u5b57\u7b26\u4e32\u201c\u5220\u9664\u201d\u3002\u5982\u4f55\u201c\u5220\u9664\u201d\u5462\uff1f\u603b\u4e0d\u80fd\u7528erase\u5427\uff1f\uff01\u5176\u5b9e\u53ef\u4ee5\u7528\u4e00\u4e2a\u6808\u6765\u8868\u793a\u7b54\u6848\uff1a\u6bcf\u52a0\u5165\u4e00\u4e2a\u5b57\u7b26\uff0c\u5c31\u538b\u5165\u6808\uff1b\u6bcf\u5220\u9664\u4e00\u6bb5\uff0c\u5c31\u628a\u6808\u9876\u76f4\u63a5\u4e0b\u62c9\u81f3\u8fd9\u6bb5\u5b57\u7b26\u4e32\u524d\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8868\u793a\u5220\u9664\u4e86\uff01\n\n3. \u4e00\u65e6\u5220\u9664\u4e86\u4e00\u6bb5\u5b57\u7b26\u4e32\uff0cAC\u81ea\u52a8\u673a\u91cc\u7684\u8282\u70b9\u4e5f\u5e94\u8be5\u8981\u5411\u4e0a\u8df3\u3002\u4e8e\u662f\u53c8\u53ef\u4ee5\u5efa\u9020\u4e00\u4e2a\u6808\u8868\u793a\u524d\u4e00\u4e2a\u6808\u7684\u7b2ci\u4e2a\u5b57\u7b26\u5bf9\u5e94\u7684AC\u81ea\u52a8\u673a\u8282\u70b9\u3002\u90a3\u4e48AC\u81ea\u52a8\u673a\u8282\u70b9\u5e94\u8be5\u8df3\u5f80\u7b2c\u4e8c\u4e2a\u6808\u7684\u5220\u9664\u5b57\u7b26\u4e32\u7684\u524d\u4e00\u4f4d\u7684\u8282\u70b9\u3002\n\n4. \u6700\u7ec8\u7b54\u6848\u5c31\u662f\u7b2c\u4e00\u4e2a\u6808\u3002\n\n### \u3010\u53c2\u8003\u7a0b\u5e8f\u3011\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\nchar st[100005],s[100005];\nint fail[100005],n,top,heap[100005],sign[100005],L;\nstruct TRIE{\n\tint son[27],val;\n}trie[100005];\nvoid Fill_in(char *st)\n{\n\tint len=strlen(st),u=0;\n\tfor (int i=0;i<strlen(st);i++)\n\t{\n\t\tint v=st[i]-'a';\n\t\tif (!trie[u].son[v])\n\t\t\ttrie[u].son[v]=++L;\n\t\tu=trie[u].son[v];\n\t}\n\ttrie[u].val=len;\n}\nvoid Build()\n{\n\tqueue <int> q;\n\tfor (int i=0;i<26;i++)\n\t\tif (trie[0].son[i])\n\t\t{\n\t\t\tq.push(trie[0].son[i]);\n\t\t\tfail[trie[0].son[i]]=0;\n\t\t}\n\twhile (!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor (int i=0;i<26;i++)\n\t\t\tif (trie[u].son[i])\n\t\t\t{\n\t\t\t\tfail[trie[u].son[i]]=trie[fail[u]].son[i];\n\t\t\t\tq.push(trie[u].son[i]);\n\t\t\t}else\n\t\t\ttrie[u].son[i]=trie[fail[u]].son[i];\n\t}\n}\nvoid Check(char *st)\n{\n\tint len=strlen(st),u=0;\n\tfor (int i=0;i<len;i++)\n\t{\n\t\tint v=st[i]-'a';\n\t\tu=trie[u].son[v];\n\t\theap[++top]=i;\n\t\tsign[top]=u;\n\t\tif (trie[u].val)\n\t\t{\n\t\t\ttop-=trie[u].val;\n\t\t\tif (top <=0) u=0;else\n\t\t\tu=sign[top];\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%s%d\",&st,&n);\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%s\",s);\n\t\tFill_in(s);\n\t}\n\tBuild();\n\tCheck(st);\n\tfor (int i=1;i<=top;i++)\n\t\tprintf(\"%c\",st[heap[i]]);\n\treturn 0;\n}",
        "postTime": 1521090395,
        "uid": 12349,
        "name": "FREEH",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3121 \u3010[USACO15FEB]\u5ba1\u67e5\uff08\u9ec4\u91d1\uff09Censoring (Gold)\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9898\u7684\u601d\u8def\u5c31\u662f\u624b\u52a8\u6a21\u62df\u4e00\u4e2a\u6808\uff0c\u7136\u540e\u7528AC\u81ea\u52a8\u673a\u5339\u914d\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5982\u679c\u8fd8\u662f\u4e0d\u592a\u660e\u767d\u53ef\u4ee5\u770b\u4e00\u770b[\u8fd9\u9053\u9898](https://blog.csdn.net/qq_38944163/article/details/81014977)\uff0c\u73b0\u5728\u8fd9\u9898\u5c31\u76f8\u5f53\u4e8e\u90a3\u9053\u7684\u5347\u7ea7\u7248\u3002\n\n\u55ef~\n\u5c31\u662f\u90a3\u4e2a\u6808\u6765\u6a21\u62df\uff0c\u7136\u540e\u7528AC\u81ea\u52a8\u673a\u52a0\u901f\u5339\u914d\u5373\u53ef\n\u592a\u611f\u52a8\u4e86\uff0c\u7adf\u4e00\u6b21\u8fc7~\u3002\n\n\u597d\u4e86\uff0c\u4e0a\u4ee3\u7801\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 1000005;\nconst int C = 26;\nint ch[N][C],cnt[N],tot,nxt[N],n,t,top,_[N];\nchar st[N],stt[N],sta[N];\nvoid insert(int x){//AC\u81ea\u52a8\u673a\uff08\u5b57\u5178\u6811trie\uff09\u7684\u6807\u51c6\u63d2\u5165\n\tint p=0;\n\tfor(int i=0;i<x;i++){\n\t\tif(!ch[p][st[i]-'a']) ch[p][st[i]-'a']=++tot;\n\t\tp=ch[p][st[i]-'a'];\n\t}\n\tcnt[p]=x;\n}\nvoid build(){//\u5efa\u6811\uff0c\u4e0d\u591a\u8bf4\n\tqueue<int>q;\n\tint p=0;\n\tfor(int i=0;i<C;i++){\n\t\tif(ch[p][i]) q.push(ch[p][i]);\n\t}\n\twhile(!q.empty()){\n\t\tp=q.front();q.pop();\n\t\tfor(int i=0;i<C;i++){\n\t\t\tif(ch[p][i]){\n\t\t\t\tq.push(ch[p][i]);\n\t\t\t\tnxt[ch[p][i]]=ch[nxt[p]][i];\n\t\t\t}else ch[p][i]=ch[nxt[p]][i];\n\t\t}\n\t}\n}\nvoid find(int x){//\u8fd9\u91cc\u9700\u8981\u5404\u4f4d\u8ba4\u771f\u770b\u770b\u5e76\u7406\u89e3\u6e05\u695a\uff0c\u8fd9\u662f\u5173\u952e\n\tint p=0,ret=0;\n\tfor(int i=0;i<x;i++){ \n\t\tsta[++top]=stt[i];//\u624b\u52a8\u6a21\u62df\u6808\n\t\tp=ch[p][stt[i]-'a'];\n\t\tif(cnt[p]){//\u5339\u914d\u5230\u4e86\uff0c\u5f80\u56de\u8df3\uff08\u5f39\u6808)\u3002\n\t\t\ttop-=cnt[p];\n\t\t\tp=_[top];\n\t\t}else _[top]=p;/\u8bb0\u5f55\u4f4d\u7f6e\uff0c\u770b\u4e86\u4e0a\u9762\u90a3\u7bc7blog\u5e94\u8be5\u4f1a\u6bd4\u8f83\u6e05\u695a\n\t}\n}\nint main(){\n\tscanf(\"%s\",stt);\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%s\",st);\n\t\tinsert(strlen(st));\n\t} \n\tbuild();\n\tfind(strlen(stt));\n\tfor(int i=1;i<=top;i++) printf(\"%c\",sta[i]);//\u8f93\u51fa\n\treturn 0;\n}\n```\n",
        "postTime": 1533880532,
        "uid": 31656,
        "name": "lomit",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3121 \u3010[USACO15FEB]\u5ba1\u67e5\uff08\u9ec4\u91d1\uff09Censoring (Gold)\u3011"
    },
    {
        "content": "\u4e00\u5f00\u59cb\u7684\u786e\u6ca1\u5565\u601d\u8def\u2026\u2026\u4e00\u770b\u5230\u6709\u6808\u8fd9\u4e2a\u6807\u7b7e\u5c31\u660e\u4e86\u4e86\u2026\u2026\n\n\u679c\u7136\u6211\u8fd8\u662f\u6c34\u5e73\u592a\u83dc\u554a\n\n\u4e0d\u8fc7\u4e00\u770b\u5230\u6808\u8fd9\u4e2a\u9898\u5c31\u6ca1\u4ec0\u4e48\u601d\u8003\u96be\u5ea6\u4e86\u2026\u2026\u5c31\u57fa\u672c\u5168\u9760\u7ec6\u8282\u4e86\n\n\u9996\u5148\u628a\u81ea\u52a8\u673a\u5efa\u51fa\u6765\u2026\u2026\u8bdd\u8bf4\u6211\u8fd9\u51e0\u5929\u624d\u53d1\u73b0\u539f\u6765\u81ea\u5df1\u5efa\u7684\u4e00\u76f4\u53ebtrie\u56fe\n\n\u7136\u540e\u4e00\u4f4d\u4e00\u4f4d\u653e\u5230\u81ea\u52a8\u673a\u4e0a\u8dd1\u3002\n\n\u5206\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1\u3001\u6808\u7a7a\n\n   \u5224\u65ad\u662f\u5426\u662f\u6839\u8282\u70b9\u7684\u4e00\u4e2a\u513f\u5b50\u5373\u53ef(\u5373\u5224\u65ad\u662f\u5426\u662f\u5355\u8bcd\u7684\u7b2c\u4e00\u4f4d)\n   \n2\u3001\u6808\u4e0d\u4e3a\u7a7a\n\n   \u5224\u65ad\u5f53\u524d\u4f4d\u80fd\u5426\u548c\u4e0a\u4e00\u4f4d\u5339\u914d\uff0c\u5982\u679c\u4e0d\u80fd\u7684\u8bdd\u5c31\u6e05\u7a7a\u6808(\u56e0\u4e3a\u6709\u8fd9\u4e00\u4f4d\u6321\u7740\u5c31\u5df2\u7ecf\u524d\u529f\u5c3d\u5f03\u4e86)\n   \n\u7136\u540e\u5f53\u5f53\u524d\u4f4d\u5339\u914d\u5230\u67d0\u4e00\u4f4d\u7684\u672b\u5c3e\u540e\uff0c\u5c31\u5c06\u8fd9\u4e2a\u5355\u8bcd\u4ece\u6808\u4e2d\u6e05\u7a7a(\u56e0\u4e3a\u9898\u76ee\u8bf4\u4e86\u8d8a\u9760\u524d\u51fa\u73b0\u7684\u8d8a\u65e9\u6e05\u7a7a) \n\n\u6e05\u7a7a\u6808\u7684\u65f6\u5019\u8f93\u51fa\u4e00\u4e0b\u5c31\u597d\u4e86(\u9664\u4e86\u5339\u914d\u5230\u7684\u5355\u8bcd\u4e0d\u8f93\u51fa) \n\n[\u4ee3\u7801](http://www.cnblogs.com/refun/p/8685682.html)\n",
        "postTime": 1522710347,
        "uid": 41890,
        "name": "Refun",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3121 \u3010[USACO15FEB]\u5ba1\u67e5\uff08\u9ec4\u91d1\uff09Censoring (Gold)\u3011"
    },
    {
        "content": "~~\u88ab\u81ea\u5df1\u5b66\u6821OJ\u7684\u6bd2\u7624\u6d4b\u8bc4\u59ec\u5361\u5230\u81ea\u95ed~~\n\nHash+\u6808+\u4f18\u5316\u66b4\u529b\n\n\u5176\u5b9e\u601d\u8def\u4e5f\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u628a\u5355\u8bcd\u5b58\u8fdb\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u8bb0\u5f55\u5176\u54c8\u5e0c\u503c\u548c\u957f\u5ea6\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5f00\u59cb\u5339\u914d\u4e86\n\n\u4f46\u662f\uff0c\u7406\u8bba\u590d\u6742\u5ea6\u5f88\u9ad8\uff0c\u4e3a$O(n*length)$~~\u867d\u7136\u5b9e\u9645\u4f53\u9a8c\u6548\u679c\u4e0d\u9519~~\n\n\u6240\u4ee5\uff0c~~\u4e3a\u4e86\u5361\u8fc7\u81ea\u5bb6\u5b66\u6821\u7684OJ~~\uff0c\u52a0\u4e86\u4e00\u70b9\u5c0f\u4f18\u5316\n\n\u989d\u5916\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4$num[i]$,\u8bb0\u5f55\u4ee5\u5355\u8bcd\u7ed3\u5c3e\u5b57\u7b26\u7684ascll\u7801\u503c\u4e3ai\u7684\u5355\u8bcd\u7f16\u53f7\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u6bcf\u6b21\u904d\u5386\u7684\u65f6\u5019\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u5c31\u4f1a\u5927\u5927\u5c0f\u4e8e\u5355\u8bcd\u603b\u4e2a\u6570\uff0c\u4f1a\u6bd4\u6734\u7d20\u7b97\u6cd5\u5feb\u5f88\u591a\uff0c~~\u867d\u7136\u6700\u574f\u590d\u6742\u5ea6\u8fd8\u662f~~~~$O(n*length)$~~\n\n~~**\u4e0d\u8fc7\u8fd8\u662f\u795d\u613f\u6211\u65e9\u65e5\u809d\u51faAC\u81ea\u52a8\u673a\uff08\u6211\u592a\u83dc\u4e86\uff09**~~\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<vector>\n#pragma GCC optimize(3)\n#pragma G++ optimize(3)\nusing namespace std;\nconst int base=131;\nchar a[1000010],b[1000010];\ntypedef unsigned long long ull;\nchar ans[1000010];\nint lena,lenb,cnt;\null ba[1000010];\null h[1000010];\nstruct cc{\n\tint len;\n\tull has;\n}w[100010];\nint g[300][1000],tot[300];\nint main()\n{\n    int n;\n    scanf(\"%s\",a+1);\n    lena=strlen(a+1);\n    scanf(\"%d\",&n);\n    for(register int i=1;i<=n;++i)\n    {\n    \tscanf(\"%s\",b+1);\n    \tw[i].len=strlen(b+1);\n    \tba[0]=1;\n    \tfor(register int j=1;j<=w[i].len;++j)\n        \tw[i].has=w[i].has*base+b[j];//\u6c42\u6bcf\u4e2a\u5355\u8bcd\u7684\u54c8\u5e0c\u503c\n        ++tot[b[w[i].len]];\n        g[b[w[i].len]][tot[b[w[i].len]]]=i;//\u7edf\u8ba1\u5355\u8bcd\n\t}\n\tfor(register int i=1;i<=100000;++i)\n\t\tba[i]=ba[i-1]*base;\n    for(register int i=1;i<=lena;++i)\n    {\n        ++cnt;\n        ans[cnt]=a[i];\n        h[cnt]=h[cnt-1]*base+a[i];\n        int q=tot[a[i]];\n        for(register int j=1;j<=q;++j)//\u4f18\u5316\u66b4\u529b\n        {\n        \tif(cnt-w[g[a[i]][j]].len>=0&&w[g[a[i]][j]].has==h[cnt]-h[cnt-w[g[a[i]][j]].len]*ba[w[g[a[i]][j]].len])\n            \tcnt-=w[g[a[i]][j]].len;\n\t\t}\n    }    \n    for(register int i=1;i<=cnt;++i)\n\tputchar(ans[i]);\n\tputchar(\"\\n\");\n    return 0;\n} \n```\n\n",
        "postTime": 1545825630,
        "uid": 43957,
        "name": "HenryHuang",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3121 \u3010[USACO15FEB]\u5ba1\u67e5\uff08\u9ec4\u91d1\uff09Censoring (Gold)\u3011"
    },
    {
        "content": "AC\u81ea\u52a8\u673a\u5728\u9884\u5904\u7406fail\u7684\u65f6\u5019\u9884\u5904\u7406\u4e0b\u8282\u70b9\u5bf9\u5e94\u7684\u5339\u914d\u4e32\u7684\u957f\u5ea6\n\n\u8fd9\u6837\u590d\u6742\u5ea6\u5c31\u662f\u4e25\u683c$\\Theta(n)$\u7684\n\n\u53ea\u9700\u8981\u4e00\u4e2a\u6808\uff0c\u5728trie\u56fe\u4e0a\u8dd1\u5c31\u53ef\u4ee5\u4e86\n\n```cpp\n#include\"cstdio\"\n#include\"cstring\"\n#include\"iostream\"\n#include\"algorithm\"\nusing namespace std;\n\nconst int MAXN=1e5+5;\nconst int siz=26;\n\nint n,cnt;\nint q[MAXN],id[MAXN];\nchar s[MAXN],ch[MAXN],stk[MAXN];\nstruct Trie{\n\tint vis,fail,dep,val;\n\tint sn[siz];\n}T[MAXN];\n\nvoid ins(char *ch)\n{\n\tint ln=strlen(ch+1),nw=0;\n\tfor(int i=1;i<=ln;++i){\n\t\tif(!T[nw].sn[ch[i]-'a']) T[nw].sn[ch[i]-'a']=++cnt,T[cnt].dep=T[nw].dep+1;\n\t\tnw=T[nw].sn[ch[i]-'a'];\n\t}++T[nw].vis,T[nw].val=T[nw].dep;\n\treturn;\n}\n\nvoid Getfail()\n{\n\tint hd=1,tl=0;\n\tfor(int i=0;i<siz;++i) if(T[0].sn[i]) q[++tl]=T[0].sn[i];\n\twhile(hd<=tl){\n\t\tint nw=q[hd++];\n\t\tT[nw].val=max(T[nw].val,T[T[nw].fail].val);\n\t\tfor(int i=0;i<siz;++i){\n\t\t\tif(T[nw].sn[i]){\n\t\t\t\tT[T[nw].sn[i]].fail=T[T[nw].fail].sn[i];\n\t\t\t\tq[++tl]=T[nw].sn[i];\n\t\t\t}else T[nw].sn[i]=T[T[nw].fail].sn[i];\n\t\t}\n\t}return;\n}\n\nvoid slv(char *ch)\n{\n\tint ln=strlen(ch+1),ct=0;\n\tfor(int i=1;i<=ln;++i){\n\t\tstk[++ct]=ch[i];\n\t\tid[ct]=T[id[ct-1]].sn[ch[i]-'a'];\n\t\tct-=T[id[ct]].val;\n\t}for(int i=1;i<=ct;++i) putchar(stk[i]);\n\tputs(\"\");\n\treturn;\n}\n\nint main()\n{\n\tscanf(\"%s\",s+1);\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i) scanf(\"%s\",ch+1),ins(ch);\n\tGetfail();slv(s);\n\treturn 0;\n}\n```",
        "postTime": 1543827535,
        "uid": 31293,
        "name": "Adove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3121 \u3010[USACO15FEB]\u5ba1\u67e5\uff08\u9ec4\u91d1\uff09Censoring (Gold)\u3011"
    },
    {
        "content": "\u65f6\u9694\u4e00\u5e74\u518d\u6b21\u5199\u8fd9\u9898\u3002\n\n\u601d\u8def\u5f88\u88f8\u3002\u5c31\u662f \u5efa\u4e2atrie\u56fe\u4e71\u8dd1\uff0c\u6bcf\u6b21\u5f39\u6808\u8bb0\u4e2a\u4f4d\u7f6e\u3002\u5f39\u51fa\u4e00\u4e32\u5c31\u8df3\u5230\u6808\u9876\u5b57\u7b26\u5bf9\u5e94\u7684trie\u56fe\u8282\u70b9\u4e0a\u3002\n\u542c\u8bf4\u76f4\u63a5\u81ea\u52a8\u673a\u4f1a\u88ab\u5361\uff1ftrie\u56fe\u8c8c\u4f3c\u6bd4\u8f83\u4f18\u7f8e\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1e5+5;\nstruct node{\n\tint tran[26],fail;\n}a[maxn];\nchar S[maxn],s[maxn];\nint top,Stack[maxn],pos[maxn],dep[maxn],n,tot,end[maxn];\ninline void insert(){\n\tint len=strlen(S+1),x=0;\n\tfor (int i=1;i<=len;i++){\n\t\tint c=S[i]-'a';\n\t\tif (!a[x].tran[c]) a[x].tran[c]=++tot;\t\n\t\tx=a[x].tran[c];\n\t}\n\tend[x]=1; dep[x]=len;\n}\ninline void init(){\n\tscanf(\"%s\",s+1); scanf(\"%d\",&n);\n\tfor (int i=1;i<=n;i++) scanf(\"%s\",S+1),insert();\n}\nint h,t,q[maxn];\ninline void Fail(){\n\tfor (int i=0;i<26;i++) if (a[0].tran[i]) q[++t]=a[0].tran[i];\n\twhile (h<t){\n\t\tint x=q[++h];\n\t\tfor (int i=0;i<26;i++)\n\t\t\tif (!a[x].tran[i]) a[x].tran[i]=a[a[x].fail].tran[i];\n\t\t\t\telse a[a[x].tran[i]].fail=a[a[x].fail].tran[i],q[++t]=a[x].tran[i];\n\t}\n}\ninline void run(){\n\tint len=strlen(s+1),x=0; \n\tfor (int i=1;i<=len;i++){\n\t\tint c=s[i]-'a'; Stack[++top]=i; x=a[x].tran[c]; pos[top]=x;\n\t\tif (end[x]) top-=dep[x],x=pos[top];\n\t}\n\tfor (int i=1;i<=top;i++) putchar(s[Stack[i]]);\n}\nint main(){\n\tinit(); Fail(); run();\n\treturn 0;\n}\n```",
        "postTime": 1522988489,
        "uid": 34444,
        "name": "\u5927\u83dc\u9e21fks",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3121 \u3010[USACO15FEB]\u5ba1\u67e5\uff08\u9ec4\u91d1\uff09Censoring (Gold)\u3011"
    }
]