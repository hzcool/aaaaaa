[
    {
        "content": "\u6a21\u677f\u9898\u554a\uff0cac\u7387\u4f3c\u4e4e\u4e0d\u7406\u60f3\u3002\n\n\u5c06\u88ab\u5360\u9886\u7684\u57ce\u5e02\u653e\u5165\u961f\u5217\u4e2d\uff0c\u8fdb\u884cbfs\uff0cbfs\u65f6\uff0cs\u5c42\u4ee5\u5185\u7684\u90fd\u6807\u8bb0\u4e3a\u5371\u9669\u3002\n\n\u7136\u540e\u6700\u77ed\u8def\u3002\n\n\u70b9\u6743\u6700\u77ed\u8def\u600e\u4e48\u6c42\u5462\uff1f\n\n\u4e00\u79cd\u529e\u6cd5\u662f\uff0c\u4e00\u6761\u8fb9\u7684\u8fb9\u6743\u6539\u6210\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u6743\u4e4b\u548c\uff0c\u7b97\u5b8c\u6700\u77ed\u8def\u540e\u7ed3\u679cdiv 2\n\n\u8fd8\u6709\u522b\u7684\u4e00\u4e9b\u529e\u6cd5\u3002\n",
        "postTime": 1474719652,
        "uid": 1,
        "name": "kkksc03",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3393 \u3010\u9003\u79bb\u50f5\u5c38\u5c9b\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u5176\u5b9e\u662f\u6700\u77ed\u8def\u88f8\u9898\u3002\n\n\u9996\u5148\u770b\u5230\u9898\u76ee\uff0c\u8981\u6c42\u7684\u5230\u201c\u88ab\u5360\u70b9\u201d\u8ddd\u79bb\u4e0d\u5927\u4e8eS\u7684\u70b9\uff0c\u81ea\u7136\u60f3\u5230\u4e86\u4ee5\u201c\u88ab\u5360\u70b9\u201d\u4e3a\u6e90\u70b9\uff0c\u6c42\u4e00\u904d\u6700\u77ed\u8def\uff0c\u5904\u7406\u51fa\u201c\u5371\u9669\u70b9\u201d\u3002\n\n\u53ef\u662f\u95ee\u9898\u6765\u4e86\uff0c\u201c\u88ab\u5360\u70b9\u201d\u6709k\u4e2a\uff0c\u603b\u4e0d\u80fd\u6c42k\u6b21\u6700\u77ed\u8def\u5427\uff0c\u4e8e\u662f\u6211\u5c31\u60f3\u5230\uff0c\u5c06\u6240\u6709\u201c\u88ab\u5360\u70b9\u201d\u5f52\u7eb3\u57280\u8fd9\u4e00\u4e2a\u5916\u52a0\u70b9\u4e0a\uff0c\u89c6\u4f5c\u4e00\u4e2a\u70b9\uff0c\u5f53\u201c\u88ab\u5360\u70b9\u201d\u4eec\u4e0e\u5176\u4ed6\u70b9\u8fde\u8fb9\u65f6\uff0c\u5c31\u75280\u4e0e\u5176\u76f8\u8fde\uff0c\u201c\u88ab\u5360\u70b9\u201d\u4e4b\u95f4\u4e0d\u8fde\u8fb9\u3002\n\n\u7136\u540e\uff0c\u8dd1\u4e00\u8fb9spfa\uff0c\u8fb9\u6743\u5168\u90fd\u662f1(\u5f53\u7136\u4e5f\u53ef\u4ee5\u5e7f\u641c)\uff0c\u518d\u626b\u4e00\u904d\uff0c\u627e\u51fa\u5371\u9669\u70b9\u3002\n\n\u6700\u540e\uff0c\u4ee51\u4e3a\u6e90\u70b9\uff0c\u6c42\u4e00\u904d\u6700\u77ed\u8def\uff0c\u5f53\u5230\u8fbe\u70b9\u4e3a\u201c\u5371\u9669\u70b9\u201d\u65f6\uff0c\u8fb9\u6743\u4e3aQ\uff0c\u4e3a1\u6216n\u70b9\u65f6\uff0c\u8fb9\u6743\u4e3a0\uff0c\u4e3a\u201c\u88ab\u5360\u70b9\u201d\u65f6\uff0c\u8fb9\u6743\u4e3ainf\u3002\u8f93\u51fadis[n]\u5373\u53ef\u3002\n\n\u6ce8\u610f\uff0c\u8981\u5f00long long~\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N=100010;\nconst long long inf=214748364701;\nqueue <int> q;\nint n,m,k,ss,P,Q;\nlong long dis[N],w[N<<2];\nint s[N<<2][2],o[N],cnt;\nbool ocp[N],vis[N],dgs[N];\ninline void add(int,int);\n\ninline void spfa(int now)\n{\n    memset(vis,0,sizeof(vis));\n    for (int i=1;i<=n;++i) dis[i]=inf;\n    while (!q.empty()) q.pop();\n    q.push(now);dis[now]=0;vis[now]=1;\n    while (!q.empty()) {\n        int x=q.front();\n        for (int i=o[x];i;i=s[i][1]) {\n            int y=s[i][0];\n            if (dis[y]>dis[x]+w[i]) {\n                dis[y]=dis[x]+w[i];\n                if (!vis[y])\n                    vis[y]=1,q.push(y);\n            }\n        }\n        vis[x]=0;q.pop();\n    }\n}\n\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin>>n>>m>>k>>ss>>P>>Q;\n    int x,y;\n    for (int i=1;i<=k;++i)\n        cin>>x,ocp[x]=1;\n    for (int i=1;i<=m;++i) {\n        cin>>x>>y;\n        if (ocp[x]&&ocp[y]) continue;\n        if (ocp[x]) add(0,y),add(y,0);\n        else if (ocp[y]) add(0,x),add(x,0);\n        else add(x,y),add(y,x);\n    }\n    for (int i=1;i<=cnt;++i) w[i]=1;\n    spfa(0);\n    for (int i=1;i<=n;++i)\n        if (dis[i]<=ss) dgs[i]=1;\n    for (int i=1;i<=cnt;++i) {\n        if (dgs[s[i][0]]) w[i]=Q;\n        else if (ocp[s[i][0]]) w[i]=inf;\n        else w[i]=P;\n        if (s[i][0]==1||s[i][0]==n) w[i]=0;\n    }\n    spfa(1);\n    cout<<dis[n]<<endl;\n    return 0;\n}\n\ninline void add(int x,int y)\n{\n    s[++cnt][0]=y;s[cnt][1]=o[x];o[x]=cnt;\n}\n```",
        "postTime": 1530324435,
        "uid": 45781,
        "name": "fyfy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3393 \u3010\u9003\u79bb\u50f5\u5c38\u5c9b\u3011"
    },
    {
        "content": "# [\u987e](https://www.luogu.org/blog/RPdreamer/#)[z](https://www.cnblogs.com/-guz/)\n\n~~\u4f60\u6ca1\u6709\u53d1\u73b0\u4e24\u4e2a\u5b57\u91cc\u7684blog\u90fd\u4e0d\u4e00\u6837\u561b~~ qwq\n\n\u9898\u76ee\u63cf\u8ff0--->[p3393 \u9003\u79bb\u50f5\u5c38\u5c9b](https://www.luogu.org/problemnew/show/P3393)\n\n\u5237\u9898\u6709\u76ca\u4e8e\u8eab\u5fc3\u5065\u5eb7. \u8fd8\u6709,\u8c01\u8bf4\u8fd9\u662f\u4e2a\u7b80\u5355\u9898\u4e86 emm\n \n### \u5206\u6790\n\n\u660e\u663e\u6700\u77ed\u8def\u7684\u9898\u3002\n\n\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\u6709\u4e00\u4e9b\u4f20\u67d3\u6e90,\u8fd9\u4e9b\u4f20\u67d3\u6e90\u4f1a\u63a7\u5236\u4e00\u4e9b\u70b9.\n\n\u6211\u4eec\u9700\u8981$Bfs$\u5904\u7406\u51fa\u8fd9\u4e9b\u70b9,\u6807\u8bb0\u5b83\u4eec\u662f$Safe$\u4e0e\u5426\u3002\n\n\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e9b\u5b9a\u4e49.\n\n- $Safe[i]==1$\u4ee3\u8868\u57ce\u5e02\u5b89\u5168,\u5c45\u4f4f\u4ef7\u94b1\u4e3a$P$\n- $Safe[i]==-1$\u8868\u793a\u57ce\u5e02\u4e3a\u4f20\u67d3\u6e90,\u4e0d\u53ef\u5c45\u4f4f.\n- $Safe[i]==0$\u8868\u793a\u57ce\u5e02\u5371\u9669,\u5c45\u4f4f\u4ef7\u94b1\u4e3a$Q$.\n\n\u8fd9\u4e2a\u65f6\u5019\u9884\u5904\u7406\u51fa\u6765\u4e4b\u540e\u76f4\u63a5\u8dd1\u6700\u77ed\u8def\u5c31\u884c.\n\n\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f,\u8dd1\u5b8c\u6700\u77ed\u8def\u4e4b\u540e\u6211\u4eec\u4f1a\u5728$n$\u70b9\u5c45\u4f4f\u3002($Dijkstra$\u543c\u554a\n\n\u6240\u4ee5\u9700\u8981\u51cf\u53bb$n$\u4f4d\u7f6e\u7684\u4ef7\u503c\u3002\n\n**\u6ce8\u610f\u9700\u8981\u5224\u65ad$n$\u70b9\u662f\u5426\u5b89\u5168,\u800c\u51b3\u5b9a\u6211\u4eec\u51cf\u53bb\u54ea\u4e2a\u8d39\u7528**\n\n\u5982\u679c$Wa$\u6389\uff034\u548c\uff036\u7684\u8bdd\u9700\u8981**\u5c06\u6781\u5927\u503c\u8d4b\u7684\u8db3\u591f\u5927\uff0e**\n\n\u8fd8\u6709 \u8bb0\u5f97\u5f00$long \\ long $!\n\n## \u4ee3\u7801\n\n```c++\n#include<cstdio>\n#include<queue>\n#include<cctype>\n#define N 1000008\n#define R register\n#define int long long \nusing namespace std;\ninline void in(int &x)\n{\n\tint f=1;x=0;char s=getchar();\n\twhile(!isdigit(s)){if(s=='-')f=-1;s=getchar();}\n\twhile(isdigit(s)){x=x*10+s-'0';s=getchar();}\n\tx*=f;\n}\nint n,m,k,S,c[N],head[N],tot,safe[N];\nint p,Q,dis[N];\nbool vis[N];\nstruct cod{int u,v;}edge[N<<4];\ninline void add(int x,int y)\n{\n\tedge[++tot].u=head[x];\n\tedge[tot].v=y;\n\thead[x]=tot;\n}\nstruct coc{int u,dis;};\nqueue<coc>q1;//\u7ed3\u6784\u4f53\u7248bfs\ninline void bfs()\n{\n\twhile(!q1.empty())\n\t{\n\t\tint u=q1.front().u,dis=q1.front().dis;\n\t\tq1.pop();\n\t\tfor(R int i=head[u];i;i=edge[i].u)\n\t\t{\n\t\t\tif(dis<S and safe[edge[i].v]==1)\n\t\t\t{\n\t\t\t\tsafe[edge[i].v]=0;\n\t\t\t\tq1.push((coc){edge[i].v,dis+1});\n\t\t\t}\n\t\t}\n\t}\n}\nstruct hop{\n\tint u,d;\n\tbool operator<(const hop&a)const\n\t{\n\t\treturn d>a.d;\n\t}\n};\ninline void dij()//dijkstra\n{\n\tfor(R int i=1;i<=n;i++)dis[i]=21474836476666;\n\tpriority_queue<hop>q;\n\tq.push((hop){1,0});dis[1]=0;\n\twhile(!q.empty())\n\t{\n\t\tint u=q.top().u;q.pop();\n\t\tif(vis[u])continue;\n\t\tvis[u]=true;\n\t\tfor(R int i=head[u];i;i=edge[i].u)\n\t\t{\n\t\t\tif(safe[edge[i].v]==-1)continue;//\u5982\u679c-1\u4e0d\u53ef\u5c45\u4f4f\n\t\t\tif(safe[edge[i].v]==0)\n\t\t\t\tif(dis[edge[i].v]>dis[u]+Q)\n\t\t\t\t{\n\t\t\t\t\tdis[edge[i].v]=dis[u]+Q;\n\t\t\t\t\tq.push((hop){edge[i].v,dis[edge[i].v]});\n\t\t\t\t}\n\t\t\tif(safe[edge[i].v]==1)\n\t\t\t\tif(dis[edge[i].v]>dis[u]+p)\n\t\t\t\t{\n\t\t\t\t\tdis[edge[i].v]=dis[u]+p;\n\t\t\t\t\tq.push((hop){edge[i].v,dis[edge[i].v]});\n\t\t\t\t}\n\t\t}\n\t}\n}\nsigned main()\n{\n\tin(n),in(m),in(k),in(S);\n\tin(p),in(Q);\n\tfor(R int i=1;i<=n;i++)safe[i]=1;//\u521a\u5f00\u59cb\u90fd\u662f\u5b89\u5168\u7684.\n\tfor(R int i=1;i<=k;i++)\n\t{\n\t\tin(c[i]),safe[c[i]]=-1;//\u6807\u8bb0\u4e3a\u4e0d\u5b89\u5168\n\t\tq1.push((coc){c[i],0});\n\t}\n\tfor(R int i=1,x,y;i<=m;i++)\n\t{\n\t\tin(x),in(y);\n\t\tadd(x,y);add(y,x);\n\t}\n\tbfs();dij();\n\tif(safe[n]==0)dis[n]-=Q;\n\telse dis[n]-=p;//\u5224\u65ad\u662fn\u662f\u54ea\u79cd\u57ce\u5e02\n\tprintf(\"%lld\",dis[n]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1539078772,
        "uid": 87960,
        "name": "\u987ez",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3393 \u3010\u9003\u79bb\u50f5\u5c38\u5c9b\u3011"
    },
    {
        "content": "\u7b97\u6cd5\uff1aDIJKSTRA\uff08\u5806\u4f18\u5316\uff09+BFS\uff08~~\u5173\u4e8eSPFA\uff0c\u5b83SHI\u4e86~~\uff09\n\n\u601d\u8def\uff1a\u5148\u4ece\u6bcf\u4e2a\u50f5\u5c38\u57ceBFS\u6c42\u51fa\u5176\u8303\u56f4\u5185\u7684\u5371\u9669\u57ce\u5e02\uff0c\u7136\u540e\u518d\u5c06\u70b9\u6743\u8f6c\u5316\u4e3a\u8fb9\u6743\u3002\u6700\u540eDIJKSTRA\u6c42\u51fa\u6700\u77ed\u8def\uff08\u6700\u5c0f\u82b1\u8d39\uff09\u3002\n\n~~\u4e11\u964b\u7801\u98ce\u8bf7\u89c1\u8c05~~\n\n```cpp\n#include<bits/stdc++.h>\n#define GC getchar\n#define OUT printf\n#define DURU scanf\n#define HEHE while\n#define FSORT sort\n#define STLMAP map\nconst long long INF=30000000000;                                    //\u6ce8\u610f\uff1a\u56e0\u4e3a\u662f long long\uff0cINF\u8981\u8bbe\u5927\u4e9b \nconst int MAX=200000+5;\nusing namespace std;\nlong long W[MAX<<1],TO[MAX<<1],DIS[MAX],HEAD[MAX],NEXT[MAX<<1];     //\u4e0d\u5f00 long long \u70b8\uff0c\u65e0\u5411\u56fe\u8fb9\u8981 *2 \npriority_queue< pair<long long,long long> > Q1;                     //\u4f18\u5148\u961f\u5217 \nlong long M,N,K,S,U,V,X,Y,CNT;\nbool F1[MAX],F2[MAX];                                               //F1\u8bb0\u5f55\u67d0\u70b9\u662f\u5426\u5165\u8fc7\u4f18\u5148\u961f\u5217\uff0cF2\u8bb0\u5f55\u67d0\u70b9\u662f\u5426\u4e3a\u50f5\u5c38\u57ce \nqueue<long long> Q2;                                                //BFS\u7684\u961f\u5217 \nvoid READ(long long &X){                                            //\u8bfb\u5165\u4f18\u5316 \n    int F=1;X=0;\n    char C=GC();\n    while(C<'0' || C>'9'){if(C=='-')F=-1;C=GC();}\n    while(C>='0' && C<='9'){X=X*10+C-'0';C=GC();}\n\tX*=F;\n}\nvoid BUILD(int X,int Y){                                            //\u90bb\u63a5\u8868\u5efa\u56fe \n\tTO[++CNT]=Y; NEXT[CNT]=HEAD[X]; HEAD[X]=CNT;\n}\nvoid BFS(int SUM){                                                  //BFS\u6c42\u51fa\u5371\u9669\u57ce\u5e02 \n\tHEHE(Q2.size()){\n        int X=Q2.front();\n\t\tQ2.pop();\n        if(DIS[X]==SUM)                                             //\u5f53\u524d\u57ce\u5e02\u5728\u50f5\u5c38\u57ce\u8fb9\u754c\uff0c\u4e0d\u518d\u7531\u8be5\u70b9\u6269\u5c55 \n\t\t\tcontinue;\n        for(register int I=HEAD[X];I;I=NEXT[I]){\n            int Y=TO[I];\n\t\t\tif(!DIS[Y]){ \n\t\t\t\tDIS[Y]=DIS[X]+1;                                    //\u8ba1\u7b97\u8ddd\u79bb \n\t\t\t\tQ2.push(Y);\n\t\t\t}\n        }\n    }\n\tfor(register int I=1;I<=CNT;I++){                               //\u5bf9\u6bcf\u4e2a\u57ce\u5e02\u7684\u5bbe\u9986 \u201c\u5b9a\u4ef7 \u201d \n        int Y=TO[I];\n\t\tif(Y==M)continue;                                           //\u7ec8\u70b9\u514d\u8d39 \n        if(F2[Y]!=0)continue;                                       //\u50f5\u5c38\u57ce \n        if(DIS[Y]==0)W[I]=U;                                        //\u5b89\u5168\u57ce\u5e02 \n        else W[I]=V;                                                //\u5371\u9669\u57ce\u5e02 \n    }\n}\nvoid DIJKSTRA(int S){                                               //\u4f18\u5148\u961f\u5217\uff08\u5806\u4f18\u5316\uff09DIJKSTRA \n\tfor(register int I=1;I<=M;I++)                                  //\u521d\u59cb\u5316 \n\t\tDIS[I]=INF;\n    Q1.push(make_pair(0,S));                                        //\u8d77\u70b9\u5165\u961f \n    DIS[S]=0;                                                       //\u8d77\u70b9\u5230\u81ea\u5df1\u7684\u8ddd\u79bb\u4e3a 0 \n    while(Q1.size()){\n        int X=Q1.top().second;                                      //\u53d6\u51fa\u961f\u9996 \n        Q1.pop();\n        if(F1[X])continue;                                          //\u82e5\u8be5\u70b9\u5df2\u904d\u5386\u8fc7\uff0c\u5219\u8df3\u8fc7 \n        F1[X]=1;\n        for(register int I=HEAD[X];I;I=NEXT[I]){\n            int Y=TO[I],K=W[I];\n            if(DIS[Y]>DIS[X]+K && F2[Y]!=1){                        //DIJKSTRA\u6807\u51c6\u64cd\u4f5c \n                DIS[Y]=DIS[X]+K;\n                Q1.push(make_pair(-DIS[Y],Y));                      //\u6ce8\u610f\uff1apair\u8981\u7528\u76f8\u53cd\u6570(\u56e0\u4e3a priority_queue\u9ed8\u8ba4\u5927\u6839\u5806\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u6253\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff09 \n            }\n        }\n    }\n}\nint main( ){\n\tREAD(M); READ(N);\n\tREAD(K); READ(S);\n\tREAD(U); READ(V);\n\tfor(register int I=1;I<=K;I++){                                  //\u50f5\u5c38\u57ce\u5165BFS\u961f \n        READ(X); F2[X]=1;\n\t\tQ2.push(X);\n    }\n\tfor(register int I=1;I<=N;I++){                                  //\u5efa\u56fe \n        READ(X); READ(Y);\n        BUILD(X,Y);\n        BUILD(Y,X);\n    }\n    BFS(S);  DIJKSTRA(1);                                            //BFS+DIJKSTRA \n    OUT(\"%lld\\n\",DIS[M]); \n\treturn 0;\n}\n```\n\n\u6700\u540e\u9644\u4e0a~~\u84bb\u84bb\u7684~~\u8bc4\u6d4b\u7ed3\u679c\uff1a\n\n#1\nAC\n3ms/788KB\n \n#2\nAC\n4ms/8828KB\n \n#3\nAC\n3ms/648KB\n \n#4\nAC\n33ms/7192KB\n \n#5\nAC\n6ms/6924KB\n \n#6\nAC\n101ms/13572KB\n \n#7\nAC\n119ms/13468KB",
        "postTime": 1541591777,
        "uid": 18250,
        "name": "\u6d6e\u68a6\u82e5\u751f",
        "ccfLevel": 0,
        "title": "P3393 \u9003\u79bb\u50f5\u5c38\u5c9b"
    },
    {
        "content": "\u9898\u76ee\u63cf\u8ff0\uff1a\u6709k\u4e2a\u70b9\u4e0d\u80fd\u901a\u884c\uff0c\u4e0e\u8fd9k\u4e2a\u70b9\u76f8\u8ddd\u5c0f\u4e8e\u7b49\u4e8es\u7684\u70b9\u6743\u4e3aq\uff0c\u5176\u4ed6\u70b9\u4e3ap\u3002\n\n## part1 \u786e\u5b9a\u70b9\u6743\n\u6c42\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u8fd9\u79cd\u95ee\u9898\u53ef\u4ee5\u4f7f\u7528\u5e7f\u641c\u6765\u89e3\u51b3\u3002\u4ece\u6bcf\u4e00\u4e2a\u50f5\u5c38\u5360\u9886\u7684\u57ce\u5e02\u51fa\u53d1\u5e7f\u641c\uff0c\u5982\u679c\u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8es\u5c31\u6807\u8bb0\u4e00\u4e0b\u3002\n\n\u4ee3\u7801\n```\nfor(int i=1;i<=k;i++){\n\tq.push(z[i]);\n\twhile(!q.empty()){\n\t\tu=q.front();\n\t\tif(sa[u]==0)sa[u]=1;\n\t\tq.pop();\n\t\tvis[u]=0;\n\t\tif(d[u]==s)continue;\n\t\tfor(int j=head[u];j;j=edge[j].next){\n\t\t\tv=edge[j].to;\n\t\t\tif(d[v]>d[u]+1){\n\t\t\t\td[v]=d[u]+1;\n\t\t\t\tif(!vis[v]){\n\t\t\t\t\tq.push(v);\n\t\t\t\t\tvis[v]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n```\n## part2 \u505a\u6700\u77ed\u8def\n\u518d\u7ed9\u6bcf\u4e00\u4e2a\u70b9\u8d4b\u6743\uff0c\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u786e\u5b9a\u6700\u77ed\u8ddd\u79bb\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4ee3\u7801\n```\n\tfor(int i=1;i<=n;i++){\n\t\tif(sa[i]==0)va[i]=pp;\n\t\tif(sa[i]==1)va[i]=qq;\n\t}\n\tdis[1]=0;\n\tva[n]=0;\n\tva[1]=0;\n\tp.push(lmf(1,0));\n\tfor(int i=1;i<=n;i++){\n\t\tu=p.top().u;\n\t\tw=p.top().w;\n\t\tp.pop();\n\t\tif(w>dis[u])continue;\n\t\tfor(int j=head[u];j;j=edge[j].next){\n\t\t\tv=edge[j].to;\n\t\t\tif(sa[v]==-1)continue;\n\t\t\tif(dis[v]>dis[u]+va[v]){\n\t\t\t\tdis[v]=dis[u]+va[v];\n\t\t\t\tp.push(lmf(v,dis[v]));\n\t\t\t}\n\t\t}\n\t}\n```\n\u90a3\u8fd9\u5c31\u7ed3\u675f\u4e86\u5462\n\n\u4e0aAC\u4ee3\u7801\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=100005,M=200005;\nconst long long INF=10000000005;\nint n,m,k,s,pp,qq;\nint z[N],d[N];\nlong long dis[N];\nint head[N],en,sa[N],va[N];\nstruct Edge{\n\tint next,to;\n}edge[M*2];\nstruct lmf{\n\tint u;\n\tlong long w;\n\tlmf(int a,long long b){\n\t\tu=a;\n\t\tw=b;\n\t}\n\tbool operator <(const lmf &i) const{\n\t\treturn w>i.w;\n\t}\n};\npriority_queue<lmf> p;\nvoid add(int u,int v){\n\tedge[++en].next=head[u];\n\tedge[en].to=v;\n\thead[u]=en;\n}\nqueue<int> q;\nbool vis[N];\nint main(){\n\tcin>>n>>m>>k>>s>>pp>>qq;\n\tfor(int i=1;i<=n;i++){\n\t\td[i]=N;\n\t\tdis[i]=INF;\n\t}\n\tfor(int i=1;i<=k;i++){\n\t\tcin>>z[i];\n\t\td[z[i]]=0;\n\t\tsa[z[i]]=-1;\n\t}\n\tint u,v,w;\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>u>>v;\n\t\tadd(u,v);\n\t\tadd(v,u);\n\t}\n\tfor(int i=1;i<=k;i++){\n\t\tq.push(z[i]);\n\t\twhile(!q.empty()){\n\t\t\tu=q.front();\n\t\t\tif(sa[u]==0)sa[u]=1;\n\t\t\tq.pop();\n\t\t\tvis[u]=0;\n\t\t\tif(d[u]==s)continue;\n\t\t\tfor(int j=head[u];j;j=edge[j].next){\n\t\t\t\tv=edge[j].to;\n\t\t\t\tif(d[v]>d[u]+1){\n\t\t\t\t\td[v]=d[u]+1;\n\t\t\t\t\tif(!vis[v]){\n\t\t\t\t\t\tq.push(v);\n\t\t\t\t\t\tvis[v]=1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(sa[i]==0)va[i]=pp;\n\t\tif(sa[i]==1)va[i]=qq;\n\t}\n\tdis[1]=0;\n\tva[n]=0;\n\tva[1]=0;\n\tp.push(lmf(1,0));\n\tfor(int i=1;i<=n;i++){\n\t\tu=p.top().u;\n\t\tw=p.top().w;\n\t\tp.pop();\n\t\tif(w>dis[u])continue;\n\t\tfor(int j=head[u];j;j=edge[j].next){\n\t\t\tv=edge[j].to;\n\t\t\tif(sa[v]==-1)continue;\n\t\t\tif(dis[v]>dis[u]+va[v]){\n\t\t\t\tdis[v]=dis[u]+va[v];\n\t\t\t\tp.push(lmf(v,dis[v]));\n\t\t\t}\n\t\t}\n\t}\n\tcout<<dis[n];\n\treturn 0;\n}\n```\n\n",
        "postTime": 1591690219,
        "uid": 181521,
        "name": "\u73c8\u4e50\u552f\u6bd2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3393 \u3010\u9003\u79bb\u50f5\u5c38\u5c9b\u3011"
    },
    {
        "content": "# \u9898\u89e3 P3393 \u3010\u9003\u79bb\u50f5\u5c38\u5c9b\u3011\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.org/problem/P3393)\n\n\u6ca1\u9519\u8fd9\u9898\u5c31\u662f\u5355\u5143\u6700\u77ed\u8def\u5f84\u7684\u88f8\u9898\u3002\n\n\u540c\u65f6\u4e5f\u53ef\u4ee5\u7ec3\u4e60\u4e00\u4e0b\u591a\u6e90BFS\n\n\u5728\u5904\u7406\u88ab\u5360\u9886\u70b9\u5468\u56f4\u7684\u201c\u5371\u9669\u70b9\u201d\u65f6\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528bfs\uff0c\u5bf9\u4e8ek\u4e2a\u88ab\u5360\u9886\u70b9\u4e00\u4e2a\u4e00\u4e2aBFS\u663e\u7136\u592a\u6162~~\u6ca1\u6709B\u683c~~\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u591a\u6e90BFS\uff0c\u4e5f\u5c31\u662f\u7b2c\u4e00\u6b21\u5c31\u628a\u6240\u6709\u7684\u88ab\u5360\u9886\u70b9\u538b\u5230\u961f\u5217\u91cc\u3002\n\n\u67d3\u5b8c\u8272\u4ee5\u540e\u5904\u7406\u6bcf\u4e2a\u70b9\u7684\u6743\u503c\uff0c\u5371\u9669\u70b9\u7684\u6743\u503c\u8bbe\u4e3aq\uff0c\u5b89\u5168\u70b9\u7684\u6743\u503c\u8bbe\u4e3ap\uff0c\u88ab\u5360\u9886\u7684\u70b9\u6743\u503c\u8bbe\u4e3a\u4e00\u4e2a\u6bd4\u8f83\u5927\u7684\u6570\u3002\n\n\u7136\u540e\u4ece\u70b91\u8dd1\u6700\u77ed\u8def\u5f84\u5c31\u884c\u4e86\u3002\n\n\u603b\u4e4b\u8fd9\u662f\u4e00\u9053\u6709\u70b9\u7ec6\u8282\u7684\u6a21\u677f\u9898\uff0c\u8981\u5f00long long\u4e0d\u7136\u7384\u5b66\u9519\u8bef\n\n\u4ee3\u7801\uff1a\n\n```cpp\n/*PROPERTY OF YUANQI*/\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#define ll long long\n#define N 200005\nusing namespace std;\n\ninline ll read()\n{\n\tll x = 0, f = 1;\n\tchar c = getchar();\n\twhile (c < '0' || c > '9') {\n\t\tif (c == '-') f = -1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9') {\n\t\tx = x * 10 + c - '0';\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\n\n\nll n, m, tot, head[N], P, Q, K, S, c[N], cost[N], dis[N], vis[N];\nqueue < int > q;\nstruct edge {\n\tll to, next;\n\tedge () {\n\t}\n\tedge (int x, int y) {\n\t\tto = x, next = y;\n\t}\n}a[2 * N];\n\nvoid addedge(ll from, ll to) {\n\ta[++tot] = edge(to, head[from]);\n\thead[from] = tot;\n}\n\nvoid spfa() { //\u4ed6\u6b7b\u4e86\n\twhile (!q.empty()) {\n\t\tint u = q.front();\n\t\tq.pop();\n\t\tvis[u] = false;\n\t\tfor (int i = head[u]; i; i = a[i].next) {\n\t\t\tll v = a[i].to;\n\t\t\tif (dis[u] + cost[v] < dis[v]) {\n\t\t\t\tdis[v] = dis[u] + cost[v];\n\t\t\t\tif (!vis[v]) {\n\t\t\t\t\tq.push(v);\n\t\t\t\t\tvis[v] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tmemset(dis, 0x3f3f3f3f, sizeof(dis));\n\tn = read(), m = read(), K = read(), S = read();\n\tP = read(), Q = read();\n\tfor (int i = 1; i <= K; i++) {\n\t\tint ci = read();\n\t\tc[ci] = S + 1;\n\t\tq.push(ci);\n\t}\n\tfor (int i = 1; i <= m; i++) {\n\t\tint a1 = read(), a2 = read();\n\t\taddedge(a1, a2);\n\t\taddedge(a2, a1);\n\t}\n\twhile (!q.empty()) {\n\t\tint u = q.front();\n\t\tq.pop();\n\t\tif (c[u] == 1) continue;\n\t\tfor (int i = head[u]; i; i = a[i].next) {\n\t\t\tint v = a[i].to;\n\t\t\tif (!c[v]) {\n\t\t\t\tc[v] = c[u] - 1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}//\u591a\u6e90bfs c\u6570\u7ec4\u8868\u793a\u8fd9\u4e2a\u70b9\u662f\u5426\u8fd8\u80fd\u6269\u5c55\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (c[i] == S + 1) cost[i] = 1000000;\n\t\telse if (c[i]) cost[i] = Q;\n\t\telse cost[i] = P;\n\t}//\u521d\u59cb\u5316\u70b9\u6743\n\tcost[1] = 0, cost[n] = 0;\n\tdis[1] = 0;\n\tq.push(1);\n\tvis[1] = true;\n\tspfa();//\u4ed6\u6b7b\u4e86\n\tcout << dis[n] << endl;\n\treturn 0;\n}\n\n```\nps\uff1a\u6700\u597d\u5b66\u4e60\u4e00\u4e0b\u8fea\u6770\u65af\u7279\u62c9\u4e0d\u7136\u5f88\u53ef\u80fd\u88ab\u5361\u6389qwq\n",
        "postTime": 1569133691,
        "uid": 92008,
        "name": "Yuyuanqi",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3393 \u3010\u9003\u79bb\u50f5\u5c38\u5c9b\u3011"
    },
    {
        "content": "3k\u541b\u8bf4\u662f\u6a21\u677f\u9898\uff0c\u4f3c\u4e4e\u771f\u7684\u662f\u5462\u3002\n\n\u601d\u8def\u6e05\u6670\uff1a\u6c42\u51fa\u5371\u9669\u7684\u57ce\u5e02\uff0c\u5728\u8dd1spfa\u3002\n\n\u5751\u70b9\u4e0d\u5c11\uff1a\n\n1 \u8981\u7528long long\u3002\n\n2 dfs\u65f6\u8981\u7528\u5230spfa\u7684\u601d\u60f3\uff0c\u4e0d\u662f\u641c\u8fc7\u5c31\u4e0d\u641c\uff0c\u800c\u662f\u5982\u679c\u53ef\u4ee5\u66f4\u65b0\u8fd8\u8981\u641c\u7d22\u3002\n\n3 \u5173\u4e8ecst\u6570\u7ec4 \u5982\u679c\u8fb9\u641c\u7d22\u8fb9\u8d4b\u503c\uff0c\u6709\u53ef\u80fd\u7ed9n\u8d4b\u4e86\u503c\u3002\uff08\u4f1a\u575163\u5206\uff09\n\n\n\u8d34\u4e00\u4e0bc++\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<vector>\n#include<cstdio>\n#include<queue>\nusing namespace std;\nconst long long inf=1000000000ll*1000000000ll+10ll;\nconst int maxn=100005;\nvector<int>v[maxn];\nqueue<int>que;\nint n,m,k,s,stp[maxn],c[maxn];\nlong long p,q,dis[maxn],cst[maxn];\nbool b[maxn],inq[maxn];//b[]\u662f\u4e0d\u80fd\u5230\u8fbe\nvoid dfs(int u)\n{\n    if(stp[u]==s)\n        return ;\n    for(int i=0;i<v[u].size();i++)\n        if(!b[v[u][i]]&&stp[v[u][i]]>stp[u]+1)\n        {\n            stp[v[u][i]]=stp[u]+1;\n            cst[v[u][i]]=q;\n            dfs(v[u][i]);\n        }\n}\nvoid spfa()\n{\n    for(int i=1;i<=n;i++)\n        dis[i]=inf;\n    que.push(1);\n    inq[1]=1;\n    dis[1]=0;\n    while(!que.empty())\n    {\n        int u=que.front();\n        que.pop();\n        inq[u]=0;\n        for(int i=0;i<v[u].size();i++)\n            if(!b[v[u][i]])\n                if(dis[v[u][i]]>dis[u]+cst[v[u][i]])\n                {\n                    dis[v[u][i]]=dis[u]+cst[v[u][i]];\n                    if(!inq[v[u][i]])\n                    {\n                        que.push(v[u][i]);\n                        inq[v[u][i]]=1;\n                    }\n                }\n    }\n    printf(\"%lld\\n\",dis[n]);\n}\nint main()\n{\n    scanf(\"%d%d%d%d%lld%lld\",&n,&m,&k,&s,&p,&q);\n    for(int i=2;i<=n-1;i++)\n        cst[i]=p;\n    for(int i=1;i<=k;i++)\n    {\n        scanf(\"%d\",&c[i]);\n        b[c[i]]=1;\n    }\n    for(int i=1;i<=m;i++)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        v[x].push_back(y);\n        v[y].push_back(x);\n    }\n    memset(stp,0x3f,sizeof(stp));\n    for(int i=1;i<=k;i++)\n    {\n        stp[c[i]]=0;\n        dfs(c[i]);\n    }\n    cst[n]=0;\n    spfa();\n    return 0;\n}\n```",
        "postTime": 1474798875,
        "uid": 12070,
        "name": "Lynx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3393 \u3010\u9003\u79bb\u50f5\u5c38\u5c9b\u3011"
    },
    {
        "content": "## \u8fd9\u91cc\u53d1\u4e00\u4e0bDijkstra + \u4f18\u5148\u961f\u5217 + \u94fe\u5f0f\u524d\u5411\u661f + \u6784\u9020\u51fd\u6570\u7684\u505a\u6cd5\n\n- \u601d\u8def\uff1a\u5176\u5b9e\u8fd9\u9053\u9898\u5206\u4e3a\u4e24\u6b65\uff1a\n\n1. \u5148\u8dd1\u4e00\u904d\u591a\u6e90\u6700\u77ed\u8def\uff0c\u6bcf\u4e00\u4e2a\u88ab\u50f5\u5c38\u63a7\u5236\u7684\u57ce\u5e02\u5c31\u662f\u4e00\u4e2a\u6e90\u70b9\uff0c\u8ddd\u79bb\u7528 d \u6570\u7ec4\u50a8\u5b58\uff0c\u6807\u8bb0\u4e00\u4e0b\u5371\u9669\u548c\u5b89\u5168\u57ce\u5e02\u3002\n\n1. \u8fd9\u4e00\u6b65\u7684\u5173\u952e\u70b9\u5728\u4e8e\u5982\u4f55\u628a\u70b9\u6743\u8f6c\u5316\u6210\u8fb9\u6743\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u505a\uff0c\u5982\u679c\u5373\u5c06\u66f4\u65b0\u7684\u57ce\u5e02\u5df2\u7ecf\u88ab\u50f5\u5c38\u5360\u9886\u4e86\uff0c\u5c31\u76f4\u63a5\u8df3\u8fc7\uff0c\u5982\u679c\u662f\u5b89\u5168\u57ce\u5e02\uff0c\u90a3\u8fb9\u6743\u5c31\u662f P ,\u5982\u679c\u662f\u5371\u9669\u57ce\u5e02\uff0c\u90a3\u8fb9\u6743\u5c31\u662f Q ,\u6700\u540e\u518d\u8dd1\u4e00\u904d\u6700\u77ed\u8def\uff0c\u8f93\u51fa dis[ n ] \u5c31\u884c\u4e86\u3002\n\n- \u7406\u7531\uff1a \u56e0\u4e3a\u6211\u4eec\u6bcf\u5230\u4e00\u4e2a\u70b9\u5c31\u8981\u4f4f\u5bbf\uff0c\u53ef\u4ee5\u770b\u505a\u662f\u6536\u8d39\uff0c\u6211\u4eec\u628a\u70b9\u6743\u8f6c\u5316\u6210\u8fb9\u6743\uff0c\u5c31\u53ef\u4ee5\u770b\u4f5c\u662f\u5728\u8def\u4e0a\u5c31\u63d0\u524d\u6536\u8d39\u4e86\uff0c\u8fd9\u6837\u5c31\u597d\u7406\u89e3\u591a\u4e86\u3002\n\n- code\uff1a\n```c\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst ll inf = 0x7f7f7f7f7f7f;//dis\u6570\u7ec4\u521d\u59cb\u5316\u7684\u65f6\u5019\u7528\u3002 \nstruct node\n{\n\tll x,w;\n\tnode(){}//\u6784\u9020\u51fd\u6570 \n\tnode(ll _x,ll _w) : x(_x),w(_w){}\n\tbool operator < (const node &s) const//\u522b\u5fd8\u8bb0\u91cd\u8f7d\u5c0f\u4e8e\u53f7\u3002 \n\t{\n\t\treturn w > s.w;\n\t}\n};\nstruct Edge\n{\n\tint to,next;\n}edge[400010];//\u94fe\u5f0f\u524d\u5411\u661f\u3002 \nint n,m,k,s,P,Q,cnt,head[100010],f[100010];//f\u6570\u7ec4\u8bb0\u5f55\u88ab\u5360\u9886\u57ce\u5e02\u3002 \nll dis[100010],men[100010]; \nbool die[100010],vis[100010];//die\u8bb0\u5f55\u57ce\u5e02i\u6709\u6ca1\u6709\u88ab\u5360\u9886\u3002 \npriority_queue <node> q;\nvoid bfs()\n{\n\tfor(int i = 1;i <= n;i++) dis[i] = inf;\n\tfor(int i = 1;i <= k;i++) q.push(node(f[i],0)),dis[f[i]] = 0;\n\twhile(!q.empty())//\u591a\u6e90\u6700\u77ed\u8def\u6a21\u677f\u3002 \n\t{\n\t\tll u = q.top().x;q.pop();\n\t\tif(vis[u]) continue;\n\t\tvis[u] = 1;\n\t\tfor(int i = head[u];~i;i = edge[i].next)\n\t\t{\n\t\t\tint v = edge[i].to;\n\t\t\tif(!vis[v] && dis[u] + 1 < dis[v])\n\t\t\t{\n\t\t\t\tdis[v] = dis[u] + 1;\n\t\t\t\tq.push(node(v,dis[v]));\n\t\t\t}\n\t\t}\n\t}\n}\nvoid bfs2()\n{\n\tfor(int i = 1;i <= n;i++) dis[i] = inf;\n\tmemset(vis,0,sizeof(vis));\n\tq.push(node(1,0));\n\tdis[1] = 0;\n\twhile(!q.empty())//\u6700\u77ed\u8def\u6a21\u677f\u3002 \n\t{\n\t\tint u = q.top().x;q.pop();\n\t\tif(vis[u]) continue;\n\t\tvis[u] = 1;\n\t\tfor(int i = head[u];~i;i = edge[i].next)\n\t\t{\n\t\t\tint v = edge[i].to;\n\t\t\tif(die[v]) continue;//\u5982\u679c\u88ab\u5360\u9886\uff0c\u5c31\u8df3\u8fc7\u3002 \n\t\t\tint w = men[v];\n\t\t\tif(!vis[v] && dis[u] + w < dis[v])\n\t\t\t{\n\t\t\t\tdis[v] = dis[u] + w;\n\t\t\t\tq.push(node(v,dis[v]));\n\t\t\t}\n\t\t}\n\t}\n}\nvoid add(int u,int v)//\u5b58\u8fb9\u3002 \n{\n\tedge[cnt].to = v;\n\tedge[cnt].next = head[u];\n\thead[u] = cnt++;\n}\nint main()\n{\n\tmemset(head,-1,sizeof(head));\n\tscanf(\"%d%d%d%d\",&n,&m,&k,&s);\n\tscanf(\"%d%d\",&P,&Q);\n\tint x;\n\tfor(int i = 1;i <= k;i++)\n\t{\n\t\tscanf(\"%d\",&x);\n\t\tf[i] = x;\n\t\tdie[x] = 1;\n\t}\n\tint u,v;\n\tfor(int i = 1;i <= m;i++)\n\t{\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tadd(u,v);\n\t\tadd(v,u);\n\t}\n\tbfs();\n\tfor(int i = 1;i <= n;i++)\n\t{\n\t\tif(dis[i] <= s) men[i] = Q;//\u8bb0\u5f55\u8fb9\u6743\u3002 \n\t\telse men[i] = P;\n\t}\n\tmen[n] = 0;//\u6ce8\u610f\u5230n\u4e0d\u9700\u8981\u4f4f\u5bbf\uff0c\u4e5f\u5c31\u662f\u4e0d\u9700\u8981\u6536\u8d39\u3002 \n\tmen[1] = 0; \n\tbfs2();\n\tprintf(\"%lld\",dis[n]);//\u8f93\u51fa\u7b54\u6848\u3002 \n\treturn 0;\n } \n```\n\n\n",
        "postTime": 1600351789,
        "uid": 351015,
        "name": "\u65ed\u65e5\u4e34\u7a97",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3393 \u3010\u9003\u79bb\u50f5\u5c38\u5c9b\u3011"
    },
    {
        "content": "\u6211\u7684\u505a\u6cd5\u548c\u5927\u4f6c\u4eec\u4e00\u6837\uff0c\u90fd\u662fbfs+SPFA\uff0c\u770b\u5230\u5404\u4f4d\u5927\u4f6c\u90fd\u662f\u628a\u70b9\u6743\u6362\u4e3a\u8fb9\u6743\u505a\u7684\uff0c\u5728\u8fd9\u91cc\u6211\u4ecb\u7ecd\u4e00\u4e0b\u76f4\u63a5\u62ff\u70b9\u6743\u505a\u7684\u65b9\u6cd5\uff0c\u8bbe\u5f53\u524d\u4ece\u961f\u5217\u91cc\u51fa\u6765\u7684\u70b9\u4e3aa\uff0c\u6709\u4e00\u6761\u8fb9\u628a\u5b83\u4e0eb\u8fde\u63a5\uff0c\u800cb\u672c\u8eab\u7684\u6743\u503c\u4e3av\uff0c\u8fd9\u65f6\u82e5\u60f3\u4fee\u6539\u5219\u987b\u6ee1\u8db3\uff08d[a]+v<d[b]\uff09\uff08d[i]\u4e3a\u5f53\u524d1\u5230i\u7684\u6700\u77ed\u8def\u7684\u503c\uff08SPFA\u6807\u51c6\u554a\uff09\uff09\uff0c\u6362\u53e5\u8bdd\u6765\u8bf4\u5c31\u662f\u628a\u70b9\u53d8\u4e3a\u8fb9\uff0c\u8fb9\u53d8\u6210\u70b9\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u8fd9\u662f\u4e00\u5f20\u56fe\uff1a\uff08\u62ec\u53f7\u5185\u662f\u6743\u503c\uff09\n\uff081\uff09\u2014\u2014\uff082\uff09\u53d8\u4e3a\u2014\u2014\uff081\uff09\u2014\u2014\u67d0\u4e2a\u70b9\u2014\u2014\uff082\uff09\u2014\u2014\n\u5bf9\u4e8eBFS\u5c31\u662f\u4e0d\u65ad\u5730\u66f4\u65b0\uff0c\u4f46\u662f\u4e0d\u89c1\u5f97\u88ab\u66f4\u65b0\u8fc7\u7684\u70b9\u5c31\u4e0d\u7528\u518d\u88ab\u8ddf\u65b0\u4e86\uff0c\u6240\u4ee5\u5c31\u7528SPFA\u7684\u601d\u60f3\u2014\u2014\u5728\u961f\u5217\u91cc\u5c31\u4e0d\u7528\u66f4\u65b0\u4e86\u3002\n\u8fd8\u6709\u70ed\u5fc3\u5730\u63d0\u9192\uff0c\u5728bfs\u65f6\u5982\u679c\u4e0b\u4e00\u4e2a\u662f\u5360\u9886\u7684\u70b9\u5c31\u4e0d\u8981\u66f4\u65b0\uff0c\u5343\u4e07\u4e0d\u8981\uff0c\u6211\u4e3a\u4e86\u8fd9\u4e2a\u51e0\u4e4e\u82b1\u4e863\u4e2a\u5c0f\u65f6\u5230\u6700\u540e\u90fd\u6000\u7591\u4eba\u751f\u4e86\n\u8be6\u60c5\u8bf7\u89c1\u4ee3\u7801\u3002\n```cpp\n#include <iostream>\n#include <queue>\n#include <vector>\n#include <cstring>\n#include <cstdio>\nusing namespace std;\nstruct search{\n\tlong long int time;\n\tint number;\n};\nqueue<int> qq;\nvector<int> bian[100005];//\u5b58\u56fe\u7528 \nint c[100005];//\u9898\u76ee\u4e2d\u7684c \nlong long int va[100005];//\u70b9\u7684\u6743\u503c \uff0c\u8bb0\u5f97\u5f00long long \nlong long int n,k,m,s1,p,q;//s1\u662f\u9898\u76ee\u4e2d\u7684s,\u5176\u4f59\u4e00\u6837 \nlong long int d[100005];//d[i]\u4e3a\u5f53\u524d1\u5230i\u7684\u6700\u77ed\u8def\u7684\u503c \nbool vis[100005];//SPFA\u7528 \nbool vas[100005];//BFS\u7528 \nvoid bf(int s){\n\tmemset(vas,0,sizeof(vas));\n\tqueue <search> q1;\n\tsearch tp;\n\ttp.number=s;\n\ttp.time=0;\n\tq1.push(tp);\n\tva[s]=21474836476666;//\u88ab\u7ad9\u70b9\u9644\u6210\u5f88\u5927\u7684\u6570\u8fd9\u6837\u5c31\u4e0d\u4f1a\u88ab\u8d70\u5230\u4e86 \n\tvas[s]=1;\n\twhile (!q1.empty()){\n\t\ttp=q1.front();\n\t\tq1.pop();\n\t\t//cout<<tp.time<<' ';\n\t\tvas[tp.number]=0;//\u51fa\u961f\u4e86 \n\t\tfor (int i=0;i<bian[tp.number].size();i++){\n\t\t\tint number=bian[tp.number][i];\n\t\t\tif (tp.time+1<=s1&&vas[number]==0&&va[number]!=21474836476666){//\u4e0d\u5728\u961f\u91cc\u4e14\u4e0d\u662f\u88ab\u5360\u8fc7\u7684\u70b9 \n\t\t\t\tvas[number]=1;\n\t\t\t\tva[number]=q;\n\t\t\t\tsearch t1;\n\t\t\t\tt1.number=number;\n\t\t\t\tt1.time=tp.time+1;\n\t\t\t\tq1.push(t1);//\u5165\u961f \n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\t\n\tcin>>n>>m>>k>>s1;\n\tcin>>p>>q;\n\tfor (int i=1;i<=k;i++) {\n\t\tscanf(\"%d\",&c[i]);\n\t}\n\t\n\tfor (int i=1;i<=n;i++) va[i]=p;\n\tint t1,t2;\n\tfor (int i=1;i<=m;i++){\n\t\tcin>>t1>>t2;\n\t\tbian[t1].push_back(t2);\n\t\tbian[t2].push_back(t1);\n\t}\n\tfor (int i=1;i<=k;i++) bf(c[i]);\n\t//for (int i=1;i<=n;i++) {\n\t\t//if (va[i]==q) cout<<i<<' ';\n\t//}\n\tmemset(d,0x3f,sizeof(d));\n\td[1]=va[1];\n\tint t=1;\n\tvis[1]=true;\n\tqq.push(t);\n\twhile (!qq.empty()){//SPFA \n\t\tt=qq.front();\n\t\tqq.pop();\n\t\tvis[t]=false;\n\t\tfor (int i=0;i<bian[t].size();i++){\n\t\t\tint id=bian[t][i];\n\t\t\tif (d[id]>d[t]+va[id]){//\u5177\u4f53\u539f\u56e0\u5df2\u7ecf\u8bb2\u8fc7 \n\t\t\t\td[id]=d[t]+va[id];\n\t\t\t\tif (vis[id]==false){\n\t\t\t\t\tvis[id]=true;\n\t\t\t\t\tqq.push(id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout<<d[n]-va[1]-va[n];//1\u548cn\u4e0d\u7528\u4f4f\u6240\u4ee5\u51cf\u53bb \n}\n```\n",
        "postTime": 1552127616,
        "uid": 122077,
        "name": "momo5440",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3393 \u3010\u9003\u79bb\u50f5\u5c38\u5c9b\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6a21\u677f\uff0c\u5176\u5b9e\u5c31\u4e24\u4e2a\u70b9\uff0c\u6c42\u5371\u9669\u533a\u3001\u628a\u70b9\u6743\u8f6c\u5316\u4e3a\u8fb9\u6743...\u7136\u540e\u8dd1\u4e00\u4e2a\u6700\u77ed\u8def\u5373\u53ef\u3002\n\u90a3\u4e48\u6211\u63d0\u4f9b\u4e00\u79cd~~\uff0c\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u4f46~~\u5e38\u6570\u6bd4\u8f83\u5927\u7684\u8f6c\u5316\u65b9\u6cd5\u5427\u3002\n\u901a\u4fd7\u6765\u8bf4\u5c31\u662f**\u62c6\u70b9**\uff0c\u76f4\u89c2\u4e0a\u7684**\u8fb9\u6743\u5168\u90e8\u4e3a0**\uff0c\u6bcf\u4e2a\u70b9\u62c6\u4e3a\u4e24\u4e2a\uff0c\u4e00\u4e2a\u53ea\u8d1f\u8d23\u8fdb\uff0c\u4e00\u4e2a\u53ea\u8d1f\u8d23\u51fa(\u5c31\u662f\u5f3a\u884c\u7ed9\u57ce\u5e02\u52a0\u4e0a\u51fa\u53e3\u548c\u5165\u53e3\u5427...)\uff0c\u6211\u662f\u628ai\u57ce\u5e02\u51fa\u70b9\u7684\u7f16\u53f7\u6539\u6210i**+n**,\u4ed6\u4eec\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\uff0c\u8fb9\u6743\u4e3a**\u623f\u8d39**\uff0c\u4e8e\u662f\u5c31\u5b8c\u6210\u4e86...\u5982\u4e0b\u56fe\u3002\n![\u9898\u89e3\u7528](https://cdn.luogu.com.cn/upload/pic/17214.png)\n\u62c6\u70b9\u601d\u8def\u7f51\u7edc\u6d41\u7684\u9898\u6bd4\u8f83\u5e38\u7528\u5427...\u53ef\u80fd\u662f\u6211\u6700\u8fd1\u5237\u591a\u4e86\uff0c\u5927\u5bb6\u4e86\u89e3\u4e00\u4e0b\u4e5f\u6709\u597d\u5904...\n\u4ee3\u7801\u5982\u4e0b\uff0c\u8fd9\u9053\u9898\u5e76\u6ca1\u6709\u5361\u5e38...\n```\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<vector>\n#include<queue>\n#define debug(x) cout<<#x<<\":\"<<x<<endl\n#define ll long long\nusing namespace std;\nconst ll maxn=200005;\nconst ll inf=922337203685477580;\nvector<ll> linker[maxn],via[maxn];\nll c[maxn],vis[maxn],d[maxn],m,n,k,s,p,qq,x,y,i,inq[maxn],u,v,w;\ninline void addedge(ll x,ll y,ll z){\n\tlinker[x].push_back(y);\n\tvia[x].push_back(z);\n}\ninline void bfs(){\n\tqueue<ll> q;\n\tfor(ll i=1;i<=n*2;i++)d[i]=0;\n\tfor(ll i=1;i<=k;i++){q.push(c[i]);vis[c[i]]=1;d[c[i]]=0;addedge(c[i],c[i]+n,inf);}\n\twhile(!q.empty()){\n\t\tll e=q.front();q.pop();\n\t\tif(d[e]==s)return;\n\t\tfor(ll i=0;i<linker[e+n].size();i++)\n\t\t if(!vis[linker[e+n][i]]){\n\t\t \td[linker[e+n][i]]=d[e]+1;\n\t\t \tq.push(linker[e+n][i]);\n\t\t \taddedge(linker[e+n][i],linker[e+n][i]+n,qq);\n\t\t\tvis[linker[e+n][i]]=1;\n\t\t }\n\t}\n}\nvoid spfa(){       \n\tqueue<ll> q;\n\tfor(i=1;i<=n*2;i++)d[i]=inf;\n\td[1+n]=0;inq[1+n]=1;q.push(1+n);\n\twhile(!q.empty()){\n\t\tu=q.front();q.pop();inq[u]=0;\n\t\tfor(i=0;i<linker[u].size();i++){\n\t\t\tv=linker[u][i];w=via[u][i];\n\t\t\tif(d[v]>d[u]+w){\n\t\t\t\td[v]=d[u]+w;\n\t\t\t\tif(!inq[v]){inq[v]=1;q.push(v);}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%lld\",d[n]);\n}\nint main(){\n\tscanf(\"%lld%lld%lld%lld%lld%lld\",&n,&m,&k,&s,&p,&qq);\n\tfor(i=1;i<=k;i++)scanf(\"%lld\",&c[i]);\n\tfor(i=1;i<=m;i++){\n\t\tscanf(\"%lld%lld\",&x,&y);\n\t\taddedge(x+n,y,0);\n\t\taddedge(y+n,x,0);\n\t}\n\tbfs();\n\tfor(i=2;i<=n-1;i++)if(!vis[i]){addedge(i,i+n,p);}\n\tspfa();\n\treturn 0;\n}\n```",
        "postTime": 1523367348,
        "uid": 5464,
        "name": "ChoHakuNe",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3393 \u3010\u9003\u79bb\u50f5\u5c38\u5c9b\u3011"
    },
    {
        "content": " [\u539f\u535a\u5ba2\u98df\u7528\u66f4\u4f73](https://www.cnblogs.com/C202202chenkelin/p/14060757.html)\n \n\u5f88\u660e\u663e\u662f\u4e00\u4e2a\u6700\u77ed\u8def\uff0c\u4f46\u662f\u5982\u4f55\u5efa\u56fe\u624d\u662f\u5173\u952e\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4e0d\u53ef\u904d\u5386\u5230\u7684\u70b9\uff0c\u53ef\u4ee5\u5411\u5916\u6269\u6563\uff0c\u627e\u5230\u5371\u9669\u57ce\u5e02\u3002\n\n\u82e5\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8fd9\u6837\u7684\u57ce\u5e02\u8fdb\u884c\u641c\u7d22\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u4e3a$O(n^2)$\uff0c\u663e\u7136\u8fc7\u4e0d\u4e86\u3002\u4e0d\u59a8\u628a\u5b83\u4eec\u653e\u5728\u4e00\u4e2aBFS\u91cc\u9762\u8fdb\u884c\u641c\u7d22\uff0c\u5148\u904d\u5386\u53ef\u4ee5\u5411\u5916\u5ef6\u4f38\u6700\u957f\u7684\u70b9\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u70b9\u662f\u53ef\u4ee5\u5b58\u6d3b\u5f88\u957f\u7684\u3002\u82e5\u4e4b\u540e\u518d\u904d\u5386\u5230\u8fd9\u4e2a\u70b9\u7684\u65f6\u5019\uff0c\u5c31\u4e0d\u7528\u5728\u904d\u5386\u4e86\uff0c\u56e0\u4e3a\u8fd9\u65f6\u5019\u7684\u5b58\u6d3b\u65f6\u95f4\u5df2\u7ecf\u6ca1\u6709\u4e4b\u524d\u904d\u5386\u7684\u65f6\u5019\u9ad8\u4e86\u3002BFS+\u6253\u6807\u8bb0\u904d\u5386\u5b8c\u4e00\u5f20\u56fe\u53ea\u9700\u8981$O(n)$\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5f88\u5927\u7a0b\u5ea6\u4e0a\u4f18\u5316\u4e86\u5efa\u56fe\u65b9\u9762\u3002\n\n\u6700\u540e\u6839\u636e\u6240\u7ed9\u7684\u8fb9\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u5373\u53ef\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <queue>\n#include <cstdio>\n#include <vector>\n#include <cstring>\nusing namespace std;\n#define LL long long\n#define INF 0x3f3f3f3f\nvoid Quick_Read(LL &N) {\n\tN = 0;\n\tchar c = getchar();\n\tLL op = 1;\n\twhile(c < '0' || c > '9') {\n\t\tif(c == '-')\n\t\t\top = -1;\n\t\tc = getchar();\n\t}\n\twhile(c >= '0' && c <= '9') {\n\t\tN = (N << 1) + (N << 3) + c - 48;\n\t\tc = getchar();\n\t}\n\tN *= op;\n}\nconst LL MAXN = 1e6 + 5;\nstruct Node {\n\tLL to, dist;\n\tNode() {}\n\tNode(LL T, LL D) {\n\t\tto = T;\n\t\tdist = D;\n\t}\n\tfriend bool operator > (Node x, Node y) {\n\t\treturn x.dist > y.dist;\n\t}\n};\nstruct Flee {\n\tLL step, id;\n\tFlee() {}\n\tFlee(LL I, LL S) {\n\t\tstep = S;\n\t\tid = I;\n\t}\n\tfriend bool operator > (Flee x, Flee y) {\n\t\treturn x.step < y.step;\n\t}\n}; \nvector<LL> v[MAXN];\nvector<Node> wg[MAXN];\nqueue<Flee> que;\npriority_queue<Node, vector<Node>, greater<Node> > qu;\nbool f[MAXN], vis[MAXN], vi[MAXN], V[MAXN];\nLL c[MAXN], w[MAXN];\nLL A[MAXN], B[MAXN], d[MAXN];\nLL n, m, k, s, p, q;\nvoid Dijkstra() {\n\tmemset(d, 0x3f, sizeof(d));\n\tqu.push(Node(1, 0));\n\td[1] = 0;\n\twhile(!qu.empty()) {\n\t\tLL now = qu.top().to; qu.pop();\n\t\tif(V[now])\n\t\t\tcontinue;\n\t\tV[now] = true;\n\t\tLL SIZ = wg[now].size();\n\t\tfor(LL i = 0; i < SIZ; i++) {\n\t\t\tLL next = wg[now][i].to;\n\t\t\tif(d[now] + wg[now][i].dist < d[next]) {\n\t\t\t\td[next] = d[now] + wg[now][i].dist;\n\t\t\t\tqu.push(Node(next, d[next]));\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%lld\", d[n]);\n}\nvoid bfs() {\n\tfor(LL i = 1; i <= k; i++) {\n\t\tque.push(Flee(c[i], s));\n\t\tvi[c[i]] = 1;\n\t}\n\twhile(!que.empty()) {\n\t\tFlee now = que.front(); que.pop();\n\t\tif(vis[now.id])\n\t\t\tcontinue;\n\t\tvis[now.id] = 1;\n\t\tvi[now.id] = 1;\n\t\tif(now.step == 0)\n\t\t\tcontinue;\n\t\tLL SIZ = v[now.id].size();\n\t\tfor(LL i = 0; i < SIZ; i++) {\n\t\t\tLL nex = v[now.id][i];\n\t\t\tque.push(Flee(nex, now.step - 1));\n\t\t}\n\t}\n}\nvoid Read() {\n\tQuick_Read(n);\n\tQuick_Read(m);\n\tQuick_Read(k);\n\tQuick_Read(s);\n\tQuick_Read(p);\n\tQuick_Read(q);\n\tfor(LL i = 1; i <= k; i++) {\n\t\tQuick_Read(c[i]);\n\t\tf[c[i]] = true;\n\t}\n\tfor(LL i = 1; i <= m; i++) {\n\t\tQuick_Read(A[i]);\n\t\tQuick_Read(B[i]);\n\t\tv[A[i]].push_back(B[i]);\n\t\tv[B[i]].push_back(A[i]);\n\t}\n}\nvoid Build() {\n\tfor(LL i = 1; i <= n; i++)\n\t\tw[i] = p;\n\tfor(LL i = 1; i <= n; i++)\n\t\tif(vi[i])\n\t\t\tw[i] = q;\n\tfor(LL i = 1; i <= k; i++)\n\t\tw[c[i]] = INF;\n\tfor(LL i = 1; i <= m; i++) {\n\t\tif(B[i] == n) {\n\t\t\twg[A[i]].push_back(Node(B[i], 0));\n\t\t\twg[B[i]].push_back(Node(A[i], w[A[i]]));\n\t\t}\n\t\telse if(A[i] == n) {\n\t\t\twg[A[i]].push_back(Node(B[i], w[B[i]]));\n\t\t\twg[B[i]].push_back(Node(A[i], 0));\n\t\t}\n\t\telse {\n\t\t\twg[A[i]].push_back(Node(B[i], w[B[i]]));\n\t\t\twg[B[i]].push_back(Node(A[i], w[A[i]]));\n\t\t}\n\t}\n}\nint main() {\n\tRead();\n\tbfs();\n\tBuild();\n\tDijkstra();\n\treturn 0;\n}\n```",
        "postTime": 1606713613,
        "uid": 254733,
        "name": "Night_Bringer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3393 \u3010\u9003\u79bb\u50f5\u5c38\u5c9b\u3011"
    },
    {
        "content": "\u5e94\u8be5\u662f\u4e00\u7bc7\u5f88\u4e0d\u4e00\u6837\u7684\u9898\u89e3\u3002     \n\n\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff0c\u6211\u7a81\u7136\u60f3\u4e0d\u8d77\u6765\u600e\u4e48 $BFS$ \u4e86\u3002        \n\n\u4e8e\u662f\u6211\u53c8\u5f00\u59cb\u60f3\u522b\u7684\u7b97\u6cd5\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c\u4f5c\u4e3a\u88ab\u611f\u67d3\u7684\u57ce\u5e02\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u628a\u5b83\u4eec\u7f29\u6210\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u628a\u5927\u70b9\u5f80\u6bcf\u4e2a\u4e0e\u611f\u67d3\u57ce\u5e02\u76f8\u90bb\u7684\u70b9\u4e0a\u8fde\u8fb9\u540e\u8dd1\u4e00\u4e2a $Dij$ \u6c42\u51fa\u79bb\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053\u6bcf\u4e2a\u70b9\u7684\u6743\u503c\uff0c\u628a\u8fd9\u9053\u9898\u53d8\u6210\u4e86\u4e00\u9053 $Dij$ \u6a21\u677f\u3002    \n\n\u5982\u679c\u60a8\u518d\u7cbe\u70bc\u4e00\u70b9\u53ef\u4ee5\u628a\u4e24\u4e2a $Dij$ \u5408\u5728\u4e00\u8d77\u5199\uff0c\u6574\u9053\u9898\u7684\u7801\u91cf\u987f\u65f6\u4e5f\u5c31\u6210\u4e86\u4e00\u4e2a\u6a21\u677f\u9898\u7684\u7801\u91cf\u3002    \n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#include<cmath>\nusing namespace std;\nconst int Len = 3e5 + 5;\nconst long long Inf = 1e12;\nint n,m,head[Len],TAT[Len],cnt,k;\nlong long dis[Len],val[Len],S,CH,EXP;\nbool vis[Len],f[Len] , LLL[Len];\nstruct node\n{\n\tint next,to;\n}edge[Len << 1];\nstruct Node\n{\n\tint idx;\n\tlong long dis;\n\tbool operator < (const Node &Ano) const\n\t{\n\t\treturn dis > Ano.dis;\n\t}\n};\nvoid add(int from,int to)\n{\n\tedge[++ cnt].to = to;\n\tedge[cnt].next = head[from];\n\thead[from] = cnt;\n}\nvoid Dij(int s)\n{\n\tNode P , C;\n\tpriority_queue<Node> q;\n\tfor(int i = 1 ; i <= n + 1 ; i ++) dis[i] = Inf , f[i] = false;\n\tdis[s] = 0;\n\tP.idx = s , P.dis = 0;\n\tq.push(P);\n\twhile(!q.empty())\n\t{\n\t\tP = q.top();q.pop();\n\t\tif(!f[P.idx])\n\t\t{\n\t\t\tf[P.idx] = true;\n\t\t\tfor(int e = head[P.idx] ; e ; e = edge[e].next)\n\t\t\t{\n\t\t\t\tint to = edge[e].to;\n\t\t\t\tif(dis[to] > dis[P.idx] + 1)\n\t\t\t\t{\n\t\t\t\t\tdis[to] = dis[P.idx] + 1;\n\t\t\t\t\tif(!f[to]){C.dis = dis[to] , C.idx = to ; q.push(C);}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = 1 ; i <= n ; i ++) val[i] = (dis[i] <= S) ? EXP : CH;\n\tval[1] = val[n] = 0;\n}\nvoid Dij_ans(int s)\n{\n\tNode P , C;\n\tpriority_queue<Node> q;\n\tfor(int i = 1 ; i <= n ; i ++) dis[i] = Inf , f[i] = false;\n\tdis[s] = 0;\n\tP.idx = s , P.dis = 0;\n\tq.push(P);\n\twhile(!q.empty())\n\t{\n\t\tP = q.top();q.pop();\n\t\tif(!f[P.idx])\n\t\t{\n\t\t\tf[P.idx] = true;\n\t\t\tfor(int e = head[P.idx] ; e ; e = edge[e].next)\n\t\t\t{\n\t\t\t\tint to = edge[e].to;\n\t\t\t\tif(!vis[to] && dis[to] > dis[P.idx] + val[to])\n\t\t\t\t{\n\t\t\t\t\tdis[to] = dis[P.idx] + val[to];\n\t\t\t\t\tif(!f[to]){C.dis = dis[to] , C.idx = to ; q.push(C);}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nsigned main()\n{\n\tscanf(\"%d %d %d %lld %lld %lld\",&n,&m,&k,&S,&CH,&EXP);\n\tfor(int i = 1 ; i <= k ; i ++) scanf(\"%d\",&TAT[i]);\n\tfor(int i = 1 ; i <= m ; i ++)\n\t{\n\t\tint x,y;scanf(\"%d %d\",&x,&y);\n\t\tadd(x , y) , add(y , x);\n\t}\n\tfor(int i = 1 ; i <= k ; i ++)\n\t{\n\t\tint x;x = TAT[i];\n\t\tvis[x] |= 1;\n\t\tfor(int e = head[x] ; e ; e = edge[e].next)\n\t\t{\n\t\t\tint to = edge[e].to;\n\t\t\tif(!LLL[to])\n\t\t\t{\n\t\t\t\tLLL[to] = true;\n\t\t\t\tadd(n + 1 , to);\n\t\t\t}\n\t\t}\n\t}\n\tDij(n + 1);\n\tDij_ans(1);\n\tprintf(\"%lld\",dis[n]);\n\treturn 0;\n}\n```",
        "postTime": 1604585692,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3393 \u3010\u9003\u79bb\u50f5\u5c38\u5c9b\u3011"
    },
    {
        "content": "# P3393 \u9003\u79bb\u50f5\u5c38\u5c9b\n[\u539f\u9898\u5730\u5740](https://www.luogu.org/problemnew/show/P3393)\n\n[GitHub\u9898\u89e3](https://github.com/jerrykcode/luogu)\n\n## \u601d\u8def\n\n\u8ba1\u7b97\u51fa\u70b9\u6743\uff0c\u6309\u70b9\u6743dijkstra\u5373\u53ef\n\n### \u8ba1\u7b97\u70b9\u6743\n\n* \u666e\u901a\u57ce\u5e02 \u70b9\u6743\u4e3ap\n\n* \u5371\u9669\u57ce\u5e02 \u70b9\u6743\u4e3aq\n\n* \u88ab\u5360\u9886\u57ce\u5e02 \u4e0d\u53ef\u8fbe\uff0c\u65e0\u70b9\u6743\n\n* \u8d77\u70b9\u548c\u7ec8\u70b9 \u70b9\u6743\u4e3a0\n\n\u5173\u952e\u5728\u4e8e\u8ba1\u7b97\u51fa\u54ea\u4e9b\u662f\u5371\u9669\u57ce\u5e02\uff0c\u5373\u88ab\u5360\u9886\u57ce\u5e02\u5468\u56f4s\u5c42\u5185\u7684\u57ce\u5e02\n\n\u6240\u6709\u88ab\u5360\u9886\u57ce\u5e02\u5148\u8fdb\u961f\u5217\uff0c\u7528last\u8bb0\u5f55\u6700\u540e\u4e00\u4e2a\u8fdb\u961f\u5217\u7684\u9876\u70b9\uff0ctail\u8bb0\u4e3a\u4e0a\u4e00\u5c42\u7684\u6700\u540e\u4e00\u4e2a\u9876\u70b9\n\n\u82e5\u6240\u6709\u88ab\u5360\u9886\u57ce\u5e02\u4e3a\u7b2c0\u5c42\uff0c\u6211\u4eec\u5f00\u59cb\u8ba1\u7b97\u5468\u56f4\u7b2c\u4e00\u5c42\uff0c\u521d\u59cblast\u548ctail\u7684\u503c\u76f8\u540c\uff0c\u4e3a\u6240\u6709\u88ab\u5360\u9886\u57ce\u5e02\u4e2d\u6700\u540e\u4e00\u4e2a\u8fdb\u961f\u5217\u7684(last\u4e3a\u6700\u540e\u8fdb\u961f\u5217\u7684\u9876\u70b9\uff0ctail\u4e3a\u4e0a\u4e00\u5c42\u5373\u7b2c0\u5c42\u6700\u540e\u4e00\u4e2a\u9876\u70b9)\uff0cwhile\u961f\u5217\u4e0d\u7a7a\u5219\u4e00\u4e2a\u9876\u70b9\u51fa\u961f\u5217\uff0c\u8fd9\u4e2a\u9876\u70b9\u6269\u5c55\u5230\u7684\u9876\u70b9\u5747\u4e3a\u7b2c\u4e00\u5c42\u7684\u9876\u70b9\uff0c\u5b83\u4eec\u90fd\u8fdb\u961f\u5217\uff0c\u66f4\u65b0last\u4e3a\u5b83\u4eec\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u3002\u82e5\u5f53\u524d\u51fa\u961f\u5217\u7684\u9876\u70b9\u4e3atail\uff0c\u5219\u7b2c0\u5c42\u7684\u90fd\u6269\u5c55\u5b8c\u6bd5\uff0c\u51c6\u5907\u5f00\u59cb\u5c06\u7b2c\u4e00\u5c42\u7684\u9876\u70b9\u51fa\u961f\u5217\u5e76\u6269\u5c55\uff0c\u66f4\u65b0tail\u4e3alast\u3002\u8bb0\u5f55\u5c42\u6570\uff0c\u5c42\u6570\u5230\u8fbes\u65f6\u8df3\u51fa\u5faa\u73af\u3002\n\n\n```\n    6\n    |\n    |\n    |\n2---0---1---4---7---8---9\n    |       |   |\n    |       |   |\n    |       |   |\n    3       5   10\n```\n\n\u5982\u56fe\uff0c\u82e50\u548c1\u88ab\u5360\u9886\uff0cs=2\uff0c\u5219 2 3 4 5 6 7 \u4e3a\u5371\u9669\u9876\u70b9\n\n\n|\u64cd\u4f5c|last|tail|\u961f\u5217|\u5371\u9669\u9876\u70b9(\u5c06\u5371\u9669\u9876\u70b9\u7684\u70b9\u6743\u8bbe\u4e3aq)|\u5c42\u6570|\n|:--:|:--:|:--:|:--:|:--:|:--:|\n|0\uff0c1\u8fdb\u961f\u5217|1|1|0 1|-|0|\n|0\u51fa\u961f\u5217\uff0c2\uff0c3\uff0c6\u8fdb\u961f\u5217|6|1|1 2 3 6|2 3 6|0|\n|1\u51fa\u961f\u5217\uff0c4\u8fdb\u961f\u5217|4|1|2 3 6 4|2 3 4 6|0|\n|\u53d1\u73b01==tail\uff0c\u7b2c0\u5c42\u5df2\u6269\u5c55\u7ed3\u675f|4|4|2 3 6 4|2 3 4 6|1|\n|2\u51fa\u961f\u5217|4|4|3 6 4|2 3 4 6|1|\n|3\u51fa\u961f\u5217|4|4|6 4|2 3 4 6|1|\n|6\u51fa\u961f\u5217|4|4|4|2 3 4 6|1|\n|4\u51fa\u961f\u5217\uff0c5\uff0c7\u8fdb\u961f\u5217|7|4|5 7|2 3 4 5 6 7|1|\n|\u53d1\u73b04==tail\uff0c\u7b2c1\u5c42\u5df2\u6269\u5c55\u7ed3\u675f|7|7|5 7|2 3 4 5 6 7|2|\n|\u5230\u8fbe\u7b2c2\u5c42\uff0c\u7ed3\u675f||||||\n\n\n##### \u6ce8\u610f BFS\u6709\u53ef\u80fd\u6269\u5c55\u5230\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u5373\u5c06\u8d77\u70b9\u548c\u7ec8\u70b9\u7684\u70b9\u6743\u7f6e\u4e3aq\uff0c\u4f46\u4e0d\u8bba\u5982\u4f55\u5b83\u4eec\u7684\u70b9\u6743\u5e94\u8be5\u4e3a0\uff0c[\u53c2\u8003](https://www.luogu.org/discuss/show/27571)\n\n### \u8ba1\u7b97\u6700\u77ed\u8def\n\n* \u6309\u70b9\u6743\u8ba1\u7b97\uff0c\u5373(a, b)\u7684\u8fb9\u6743\u4e3ab\u7684\u70b9\u6743\uff0c(b, a)\u7684\u8fb9\u6743\u4e3aa\u7684\u70b9\u6743\u3002\n\n* \u8bb0\u5f55\u56fe\u65f6\uff0c\u4e0d\u9700\u8981\u8bb0\u5f55\u5177\u4f53\u7684\u8fb9\u6743\uff0cdijkstra\u65f6\uff0c\u5047\u8bbe\u5bf9min_v\u6269\u5c55\u90bb\u63a5\u70b9\uff0c\u90bb\u63a5\u70b9\u8bbe\u4e3aadj_v\uff0c\u5219min_v\u5230adj_v\u7684\u8fb9\u6743\u5373adj_v\u7684\u70b9\u6743\u3002\n\n* \u5bf9\u4e8e\u88ab\u5360\u9886\u7684\u9876\u70b9\u4e0d\u80fd\u88ab\u6269\u5c55\n\n\u5176\u4f59\u548c\u666e\u901adijkstra\u65e0\u533a\u522b\u3002\n\n## C++\u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <vector>\n#include <queue>\nusing namespace std;\n\n#define NO_VALUE -1\ntypedef long long LL;\n\nclass Escape {\npublic:\n    Escape() {}\n    ~Escape() {}\n\n    //main\u4e2d\u8c03\u7528\u7684\u51fd\u6570\n    void escape();\nprivate:\n    //dijkstra\u4e2d\u4f18\u5148\u961f\u5217\u4f7f\u7528\u7684\u7ed3\u6784\u4f53\n    struct Node {\n        int v;\n        LL dist;\n        Node(int v, LL dist) : v(v), dist(dist) {}\n    };\n    struct cmp {\n        bool operator () (Node& a, Node& b) {\n            return a.dist > b.dist;\n        }\n    };\n\n    //private\u6210\u5458\u51fd\u6570\n    void input(); //\u8f93\u5165\n    void bfs(); //\u8ba1\u7b97\u5371\u9669\u57ce\u5e02\n    LL dijkstra(); //\u8ba1\u7b97\u6700\u77ed\u8def\u5f84\n    void clear(); //\u91ca\u653e\u5185\u5b58\n\n    //\u7c7b\u53d8\u91cf\n    int n, m, k, s;\n    int p, q;\n    int src, des;\n    vector<int> *graph;\n    int *cost_; //cost_[i]\u4e3a\u57ce\u5e02i\u7684\u8d39\u7528\uff0c\u5373\u70b9\u6743\n};\n\nvoid Escape::escape() {\n    input();\n    bfs();\n    printf(\"%lld\", dijkstra());\n    clear();\n}\n\nvoid Escape::input() {\n    scanf(\"%d %d %d %d %d %d\", &n, &m, &k, &s, &p, &q);\n    src = 0, des = n - 1; //\u6539\u4e3a\u4ece0\u5f00\u59cb\u7f16\u53f7\n    cost_ = new int[n];\n    fill(cost_, cost_ + n, p);\n    for (int i = 0, ci; i < k; i++) {\n        scanf(\"%d\", &ci);\n        ci--; //\u6539\u4e3a\u4ece0\u5f00\u59cb\u7f16\u53f7\n        cost_[ci] = NO_VALUE;\n    }\n    graph = new vector<int>[n];\n    for (int i = 0, ai, bi; i < m; i++) {\n        scanf(\"%d %d\", &ai, &bi);\n        ai--; bi--; //\u6539\u4e3a\u4ece0\u5f00\u59cb\u7f16\u53f7\n        graph[ai].push_back(bi);\n        graph[bi].push_back(ai);\n    }\n}\n\nvoid Escape::bfs() {\t\n    //\u88ab\u5360\u9886\u57ce\u5e02\u5468\u56f4s\u5c42\u5185\u7684\u57ce\u5e02\u4e3a\u5371\u9669\u57ce\u5e02\n    if (s <= 0) return;\n    queue<int> que;\n    bool *collected = new bool[n];\n    fill(collected, collected + n, false);\n    int last, tail; //last\u4e3a\u5f53\u524d\u6700\u540e\u4e00\u4e2a\u8fdb\u961f\u5217\u7684\uff0ctail\u4e3a\u4e0a\u4e00\u5c42\u7684\u6700\u540e\u4e00\u4e2a\n    for (int i = 0; i < n; i++) \n        if (cost_[i] == NO_VALUE) {\n            //\u904d\u5386\u6240\u6709\u88ab\u5360\u9886\u57ce\u5e02\n            que.push(i);\n            collected[i] = true;\n            last = tail = i;\n        }\n    int level = 0; //\u5f53\u524d\u8bb0\u4e3a0\u5c42\n    while (!que.empty()) {\n        int v = que.front();\n        que.pop();\n        for (int adj_v : graph[v]) \n            if (!collected[adj_v]) {\n                collected[adj_v] = true;\t\t\t\t\n                que.push(adj_v);\n                cost_[adj_v] = q; //\u8bb0\u4e3a\u5371\u9669\u57ce\u5e02\n                last = adj_v; //\u66f4\u65b0\u6700\u540e\u5165\u961f\u7684\u9876\u70b9\n            }\n        if (v == tail) { //\u82e5\u4e0a\u4e00\u5c42\u7684\u6700\u540e\u4e00\u4e2a\u51fa\u961f\u5217\u4e86\uff0c\u5219\u8fd9\u4e00\u5c42\u7ed3\u675f\n            if (++level >= s) { //\u5c42\u6570\u589e\u52a0\n                while (!que.empty()) que.pop();\n                break;\n            }\n            tail = last; //\u66f4\u65b0tail\u4e3a\u672c\u5c42\u6700\u540e\u4e00\u4e2a\uff0c\u5373last\n        }\n    }\n    free(collected);\n    cost_[src] = cost_[des] = 0;\n}\n\nLL Escape::dijkstra() {\n    //dijkstra\u8ba1\u7b97\u6700\u77ed\u8def\u5f84\n    //\u8fd9\u91cc(a, b)\u7684\u8d39\u7528\u5373\u4e3ab\u7684\u8d39\u7528\uff0c(b, a)\u7684\u8d39\u7528\u5373\u4e3aa\u7684\u8d39\u7528\uff0c\u5373\n    //(a, b)\u7684\u8fb9\u6743\u4e3ab\u7684\u70b9\u6743\uff0c(b, a)\u7684\u8fb9\u6743\u4e3aa\u7684\u70b9\u6743\n    LL *dist = new LL[n];\n    fill(dist, dist + n, NO_VALUE);\n    bool *collected = new bool[n];\n    fill(collected, collected + n, false);\n    dist[src] = 0;\n    priority_queue<Node, vector<Node>, cmp> que;\n    que.push(Node(src, dist[src]));\n    int min_v;\n    LL tmp_dist;\n    while (!que.empty()) {\n        min_v = que.top().v;\n        que.pop();\n        if (collected[min_v]) continue;\n        collected[min_v] = true;\n        if (min_v == des) {\n            while (!que.empty()) que.pop();\n            break;\n        }\n        for (int adj_v : graph[min_v]) { //\u904d\u5386\u90bb\u63a5\u70b9\n            if (!collected[adj_v] && cost_[adj_v] != NO_VALUE) {\n                tmp_dist = dist[min_v] + cost_[adj_v]; //(min_v, adj_v) \u7684\u8fb9\u6743\u4e3a adj_v\u7684\u70b9\u6743\u5373cost_[adj_v]\n                if (tmp_dist < dist[adj_v] || dist[adj_v] == NO_VALUE) {\n                    dist[adj_v] = tmp_dist;\n                    que.push(Node(adj_v, tmp_dist));\n                }\n            }\n        } //for adj_v\n    } //while\n    LL result = dist[des];\n    free(dist);\n    free(collected);\n    return result;\n}\n\nvoid Escape::clear() {\n    free(cost_);\n    for (int i = 0; i < n; i++)\n        vector<int>().swap(graph[i]);\n}\n\nint main() {\n    Escape escape;\n    escape.escape();\n    return 0;\n}\n```\n\n\n\n\n",
        "postTime": 1555149028,
        "uid": 194439,
        "name": "rediserver",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3393 \u3010\u9003\u79bb\u50f5\u5c38\u5c9b\u3011"
    },
    {
        "content": "# \u865a\u62df\u70b9bfs+dijkstra\n\n\u633a\u6c34\u7684\u4e00\u9053\u9898\uff0c\u63d0\u4ea4\u7684\u65f6\u5019\u614c\u5f97\u4e00\u6279\uff0c\u7ed3\u679c\u4e00\u904d\u5c31\u8fc7\u4e86\uff0c\u5f00\u5fc3:-\uff09\n\n## \u6211\u4eec\u4ee50\u4e3a\u8d77\u70b9\uff0c\u5411\u6bcf\u4e00\u4e2a\u611f\u67d3\u70b9\u8fde\u4e00\u6761\u5355\u5411\u8fb9\uff0c\u7136\u540e\u8dd1bfs\uff0c\u7528safe\u6570\u7ec4\u67d3\u8272\u3002\n\n### safe==0\uff0c\u672a\u611f\u67d3\n### safe==1\uff0c\u611f\u67d3\n### safe==-1\uff0c\u4f20\u67d3\u6e90\n### \u8dd1bfs\uff0c\u5982\u679cu\u4e3a0\uff0c\u5c31\u76f4\u63a5\u8ba9v\u5165\u961f\uff08\u56e0\u4e3a\u6b64\u65f6v\u4e00\u5b9a\u662f\u4f20\u67d3\u6e90\uff0c\u7136\u540esafe\u76f8\u5f53\u4e8e\u5224\u91cd\u6570\u7ec4\uff0c\u9650\u5b9adis<s\uff0c\u5f88\u5bb9\u6613\u5730\u5c31\u5199\u51fa\u4e86bfs\uff0c\u7136\u540e\u5c31\u4ece1\u5f00\u59cb\u8dd1\u6700\u77ed\u8def\uff09\n#### TIPS\uff1a\u8981\u5f00long long\uff0cinf\u8981\u5f00\u5f88\u5927\uff0c\u6ce8\u610f\u6700\u540edist[n]\u8981\u51cf\u53bb\u591a\u52a0\u7684\u8d39\u7528\uff081\uff0cn\u4e24\u70b9\u4e0d\u6536\u8d39\uff0c\u800c\u8dd1\u6700\u77ed\u8def\u65f6n\u80af\u5b9a\u662f\u6536\u8d39\u7684\uff09\n\n##### \u76f4\u63a5\u4e0acode\u5427\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<queue>\nusing namespace std;\ntypedef long long LL;\nconst LL inf=9999999999999;\nconst int N=100010;\nconst int M=200010;\nstruct node\n{\n\tint next,to;\n}g[M*4];\nint head[N],cnt;\n\nint n,m,k,s,P,Q;\nint safe[N];\nint e[N];\nLL dist[N];\nbool vis[N];\n\ninline void addedge(int u,int v)\n{\n\tg[++cnt].next=head[u];\n\tg[cnt].to=v;\n\thead[u]=cnt;\n}\n\nvoid bfs()\n{\n\tqueue<LL>q,qs;\n\tq.push(0);\n\tqs.push(-1);\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front(),d=qs.front();\n\t\tq.pop();qs.pop();\n\t\tfor(int i=head[u];i;i=g[i].next)\n\t\t{\n\t\t\tint v=g[i].to;\n\t\t\tif(u==0){q.push(v);qs.push(0);}\n\t\t\tif(d<s&&!safe[v])\n\t\t\t{\n\t\t\t\tsafe[v]=1;\n\t\t\t\tq.push(v);qs.push(d+1);\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid dijkstra()\n{\n\tpriority_queue<pair<LL,LL> >q;\n\tq.push(make_pair(0,1));\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tdist[i]=inf;vis[i]=0;\n\t}\n\tdist[1]=0;\n\twhile(!q.empty())\n\t{\n\t\tint u=q.top().second;q.pop();\n\t\tif(vis[u])continue;\n\t\tvis[u]=1;\n\t\tfor(int i=head[u];i;i=g[i].next)\n\t\t{\n\t\t\tint v=g[i].to;\n\t\t\tif(safe[v]==1)\n\t\t\t{\n\t\t\t\tif(dist[v]>dist[u]+Q)\n\t\t\t\t{\n\t\t\t\t\tdist[v]=dist[u]+Q;\n\t\t\t\t\tq.push(make_pair(-dist[v],v));\n\t\t\t\t}\n\t\t\t}if(!safe[v])\n\t\t\t{\n\t\t\t\tif(dist[v]>dist[u]+P)\n\t\t\t\t{\n\t\t\t\t\tdist[v]=dist[u]+P;\n\t\t\t\t\tq.push(make_pair(-dist[v],v));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(safe[n]==0)dist[n]-=P;\n\telse dist[n]-=Q;\n\tcout<<dist[n];\n}\n\nint main()\n{\n\tscanf(\"%d%d%d%d\",&n,&m,&k,&s);\n\tscanf(\"%d%d\",&P,&Q);\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\tscanf(\"%d\",&e[i]);\n\t\taddedge(0,e[i]);\n\t\tsafe[e[i]]=-1;\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint a,b;\n\t\tscanf(\"%d%d\",&a,&b);\n\t\taddedge(a,b);addedge(b,a);\n\t}\n\tbfs();\n\t//for(int i=1;i<=n;i++)cout<<safe[i]<<\" \";cout<<endl;\n\tdijkstra();\n}\n\t\n```\n",
        "postTime": 1554305681,
        "uid": 38330,
        "name": "Numenor",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3393 \u3010\u9003\u79bb\u50f5\u5c38\u5c9b\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u6709$N$\u4e2a\u70b9\uff0c$M$\u6761\u53cc\u5411\u8fb9\uff0c$K$\u4e2a\u88ab\u4fb5\u7565\u57ce\u5e02\uff0c\u4e0e\u8fd9$K$\u4e2a\u88ab\u4fb5\u7565\u57ce\u5e02\u8ddd\u79bb$\\leqslant$$S$\u7684\u57ce\u5e02\u5c31\u662f\u5371\u9669\u57ce\u5e02\u3002\u5176\u4ed6\u5c31\u662f\u5b89\u5168\u57ce\u5e02\u3002\u5b89\u5168\u57ce\u5e02\u7684\u70b9\u6743\u5c31\u662f$P$\uff0c\u5371\u9669\u57ce\u5e02\u7684\u70b9\u6743\u5c31\u662f$Q$,\u95ee\u624d$1$\u53f7\u70b9\u5230$N$\u53f7\u70b9\u7684\u6700\u5c0f\u82b1\u8d39\u3002\n\n\u6807\u8bb0\u5371\u9669\u57ce\u5e02\u663e\u7136\u9700\u8981\u8dd1\u6700\u77ed\u8def\uff0c\u4f46\u662f\u5bf9\u4e8e$K$\u4e2a\u70b9\u8dd1$K$\u6b21\u6700\u77ed\u8def\u65f6\u95f4\u590d\u6742\u5ea6\u592a\u9ad8\uff0c\u4e8e\u662f\u6211\u4eec\u5efa\u7acb\u865a\u70b9\u8fde\u63a5$K$\u4e2a\u70b9\uff0c\u8fb9\u6743\u4e3a$0$,\u539f\u5148\u9053\u8def\u8fb9\u6743\u4e3a$1$,\u8dd1\u6700\u77ed\u8def\u5373\u53ef\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u627e\u5230\u6240\u6709\u5371\u9669\u57ce\u5e02\u4e86\u3002\n\n\u5bf9\u4e8e\u70b9\u6743\u6700\u77ed\u8def\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u5230\u8fbe\u70b9\u7684\u6743\u503c\u8bbe\u4e3a\u8fb9\u6743\u5373\u53ef\uff0c\u5bf9\u4e8e\u5230\u8fbe\u70b9\u662f\u5371\u9669\u57ce\u5e02\u6216\u662f$1$\u6216$N$\u7279\u5224\u3002\n\n\u8bb0\u5f97\u5f00long long\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define inf 0x3f3f3f3f\nusing namespace std;\nstruct node{\n\tint to,next,dis;\n}e[499999];\ninline int read(){\n\tint x=0,w=0;char ch=getchar();\n\twhile (!isdigit(ch))w|=ch=='-',ch=getchar();\n\twhile (isdigit(ch))x=(x<<1)+(x<<3)+ch-'0',ch=getchar();\n\treturn w?-x:x;\n}\n\nint cnt,head[400000],dis[300000],inque[300000],tag[300000];\ninline void add(int u,int v,int d){\n\te[++cnt].to=v;\n\te[cnt].dis=d;\n\te[cnt].next=head[u];\n\thead[u]=cnt;\n}\nvoid spfa(int s){\n\tmemset(dis,0x3f,sizeof(dis));\n\tmemset(inque,0,sizeof(inque));\n\tdis[s]=0;queue<int>q;q.push(s);\n\twhile (!q.empty()){\n\t\tint u=q.front();q.pop();inque[u]=0;\n\t\tfor (int i=head[u];i;i=e[i].next){\n\t\t\tint v=e[i].to;\n\t\t\tif (dis[v]>dis[u]+e[i].dis){\n\t\t\t\tdis[v]=dis[u]+e[i].dis;\n\t\t\t\tif (!inque[v]){\n\t\t\t\t\tinque[v]=1;q.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nsigned main(){\n\tint n=read(),m=read(),k=read(),s=read(),p=read(),q=read();\n\tfor (int i=1;i<=k;++i){\n\t\tint t=read();\n\t\ttag[t]=2;\n\t\tadd(0,t,0);\n\t}\n\tfor (int i=1;i<=m;++i){\n\t\tint u=read(),v=read();\n\t\tadd(u,v,1);add(v,u,1);\n\t}\n\tspfa(0);\n\tfor (int i=1;i<=n;++i)\n\t\ttag[i]=tag[i]==0?dis[i]<=s:2;\n\tfor (int i=1;i<=cnt;++i){\n\t\tif (tag[e[i].to]==2){e[i].dis=inf;continue;}\n\t\tif (e[i].to==n||e[i].to==1){e[i].dis=0;continue;}\n\t\tif (tag[e[i].to]==1){e[i].dis=q;continue;}\n\t\telse e[i].dis=p;\n\t}\n\tspfa(1);\n\tprintf(\"%lld\",dis[n]);\n\treturn 0;\n}\n```",
        "postTime": 1555774031,
        "uid": 54260,
        "name": "tcchyc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3393 \u3010\u9003\u79bb\u50f5\u5c38\u5c9b\u3011"
    },
    {
        "content": "   \n   kkk \u53e3\u4e2d\u7684\u6a21\u677f\u9898\uff0c\u5f53\u6211\u4e00\u76f4\u5728wa\u7684\u65f6\u5019\u4e00\u76f4\u5728\u60f3\u8fd9\u9898\u600e\u4e48\u4f1a\u662f\u6a21\u677f\u9898\uff1f\uff1f\uff1f\u4f46\u505a\u5b8c\u53d1\u73b0\u786e\u5b9e\u662f\u6a21\u677f\u9898\uff0c\uff0c\uff0c\n   \n   \u8fd9\u9053\u9898\uff0c\u544a\u8bc9\u4e86\u6211\u8fd9\u79cd\u53ea\u4f1a\u6a21\u677f\u7684\u849f\u84bb\u6c42\u6700\u77ed\u8def\u65f6\uff0cbfs\u5728\u6240\u9700\u8981\u7684\u8282\u70b9\u6bd4\u8f83\u5c11\u65f6\uff08\u8ddd\u79bb\u6bd4\u8f83\u77ed\u65f6\uff09\u6216\u8bb8\u662f\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002\n   \n   \u9996\u5148\uff0c\u5148\u8bf4\u4e0b\u81ea\u5df1\u7684\u601d\u8def\uff0c\u6211\u4e00\u5f00\u59cb\u60f3\u7684\u662f\u5bf9\u6bcf\u4e00\u4e2a\u611f\u67d3\u57ce\u5e02\u8dd1spfa\u627e\u5371\u9669\u57ce\u5e02\uff0c\u6700\u540e\u518d\u8dd1\u4e00\u904d\u5bf9\u5168\u56fe\u7684spfa\uff0c\u7136\u800c\u53ea\u670928\u5206\uff0ct\u4e24\u4e2a\u70b9\uff086,7\uff09\uff0cwa\u4e86\u4e09\u4e2a\u70b9\uff082,3,4\uff09\uff1b\n\n28\u5206\u4ee3\u7801\uff1a\n   ```cpp\n#include<iostream>\n#include<cstdio> \n#include<algorithm>\n#include<cstring>\n#include<queue> \nusing namespace std;\ninline int read(){\n    int x = 0;int f = 1;char c = getchar();\n    while(c<'0'||c>'9'){\n        if(c == '-')f = -f;\n        c = getchar();\n    }\n    while(c<='9'&&c>='0'){\n        x = x*10 + c - '0';\n        c = getchar();\n    } \n    return x*f;\n}\nconst int maxn = 2002000;\nconst int inf = 2147483647;\nint cnt,p,q,n,m,k,s;\nint x[maxn],y[maxn],val[maxn],vis[maxn],c[maxn],head[maxn*2];\nlong long dis[maxn];\nstruct edge{\n    int from,to,v;\n}e[maxn];\nvoid add(int a,int b,int c){\n    cnt++;\n    e[cnt].from = head[a];\n    e[cnt].to = b;\n    e[cnt].v = c;\n    head[a] = cnt; \n} \nvoid spfa(int start){\n    for(int i = 1; i<=n; i++)dis[i] = inf;\n    memset(vis,0,sizeof(vis));\n    queue<int>que;\n    que.push(start);\n    dis[start] = 0;\n    vis[start] = 1;\n    while(!que.empty()){\n        int f = que.front();que.pop();\n        vis[f] = 0;\n        for(int i = head[f] ; i ;i = e[i].from){\n            int u = e[i].to;\n            if(dis[u] > dis[f] + e[i].v){\n                dis[u] = dis[f] + e[i].v;\n                if(!vis[u]){\n                    vis[u] = 1;\n                    que.push(u);\n                }\n \t\t\t}\n        }\n    } \n}\nint main(){\n    n = read();m = read();k = read();s = read();\n    p = read();q = read();\n    for(int i = 1; i<=k; i++)c[i] = read();\n    for(int i = 1; i<=m; i++){\n      \tint a,b;\n      \tx[i] = read(); y[i] = read();\n      \tadd(x[i],y[i],1);\n      \tadd(y[i],x[i],1);\n    }\n    for(int i = 1; i<=n; i++)val[i] = p;\n    for(int i = 1; i<=k; i++){\n        spfa(c[i]);\n        for(int i = 1; i<=n; i ++){\n            if(dis[i] <= s)val[i] = q;\n        } \n    }//\tfor(int i = 1; i<=n; i++)cout<<dis[i]<<' '; \n    val[1] = 0;val[n] = 0;\n    memset(e,0,sizeof(e));\n    memset(head,0,sizeof(head));\n    for(int i = 1; i<=m; i++){\n        add(x[i],y[i],val[y[i]]);\n        add(y[i],x[i],val[x[i]]);\n    }\n    //cout<<dis[n]<<' ';\n\n    spfa(1);\n    printf(\"%lld\",dis[n]);\n    \n    \n    return 0;\n}\n```\n      \n   \u5176\u5b9e\u5f88\u5bb9\u6613\u5c31\u53d1\u73b0\u5bf9\u4e8e\u5168\u56fe\u7684spfa\u662f\u5f88\u6d6a\u8d39\u7684\u5f53\u8ddd\u79bb\u8d85\u8fc7s\u5b8c\u5168\u5c31\u53ef\u4ee5\u505c\u6b62\uff0c\u6240\u4ee5\u6211\u4eec\u57fa\u4e8espfa\u7684\u601d\u60f3\u5bf9\u6240\u6709\u50f5\u5c38\u63a7\u5236\u7684\u57ce\u5e02\u8fdb\u884cbfs\u5bf9\u5728s\u8ddd\u79bb\u5185\u7684\u57ce\u5e02\u8fdb\u884c\u6807\u8bb0\uff0cbfs\u7ed3\u675f\u540e\uff0c\u5bf9\u8fb9\u6743\u8fdb\u884c\u8d4b\u503c\uff0c\u4e00\u6761\u8fb9\u7684\u6743\u503c\u4e3a\u8fd9\u6761\u8fb9\u6240\u6307\u5411\u57ce\u5e02\u7684\u65c5\u5e97\u6240\u9700\u82b1\u8d39\uff0c\uff08**\u6240\u4ee5\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u5f53\u6307\u5411\u57ce\u5e02\u4e3an\u65f6\u9700\u8981\u8df3\u8fc7**\uff09\uff0c\u6700\u540e\u4e00\u904d\u6700\u77ed\u8def\u5373\u53ef\u6c42\u51fa\u6240\u9700\u82b1\u8d39\uff0c\u4f46\u5728\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u4e24\u70b9\uff01\uff01\uff01\n   \n **  1 \uff1a\u5f00long long**\n \n** 2:dis \u6700\u5927\u503c\u56e0\u4e3a\u4f1a\u7206int\u7684\u7f18\u6545\u6240\u4ee5\u4e0d\u80fd\u75282147483647\uff01\uff01\uff01**\n\n\u8d34\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<queue> \n#include<cstring>\n#define inf 31147483647//\u56e0\u4e3a\u4f1a\u7206int\u6240\u4ee5\u6240\u6c42\u7684\u503c\u4f1a\u8d85\u8fc7214748367\uff0c\u6240\u4ee5\u4e00\u5b9a\u8981\u6bd42147483647\u5927\n#define ll long long\nusing namespace std;\ninline int read(){\n    int x = 0;int f = 1;char c = getchar();\n    while(c<'0'||c>'9'){if(c=='-')f=-f;c=getchar();}\n    while(c<='9'&&c>='0'){x=x*10+c-'0';c=getchar();}\n    return x*f;\n}\nconst int maxn = 5000000;\nint cnt,n,m,k,ans,s,p,q;\nqueue<int>que;\nstruct edge{\n    int from,to,v;\n}e[maxn];\nll dis[maxn];\nint head[maxn],vis[maxn],flag[maxn];\nvoid add(int a,int b){\n    cnt++;\n    e[cnt].from = head[a];\n    e[cnt].to = b;\n    head[a] = cnt;\n}\nvoid spfa(){\n    memset(vis,0,sizeof(vis));\n    for(int i = 1; i<=n; i++)dis[i] = inf;\n    que.push(1);\n    dis[1] = 0;\n    vis[1] = 1;\n    while(!que.empty()){\n        int f = que.front();que.pop();\n        vis[f] = 0;\n        for(int i = head[f] ; i ; i =e[i].from){\n            int u = e[i].to;\n            if(dis[u] > dis[f] + e[i].v){\n                dis[u] = dis[f] + e[i].v;\n                if(!vis[u]){\n                    vis[u] = 1;\n                    que.push(u);\n                }\n            }\n        } \n    } \n}\nint main(){\n    n = read(); m = read(); k = read(); s = read(); p = read(); q = read();\n    for(int i = 1; i<=k; i++){\n        int a;\n        a = read();\n        flag[a]++;//\u6807\u8bb0\u50f5\u5c38\u63a7\u5236\u7684\u57ce\u5e02\n        que.push(a);\n    }\n     for(int i = 1; i<=m; i++){\n     \tint a,b;\n     \ta = read();\n     \tb = read();\n     \tadd(a,b);\n     \tadd(b,a);\n     } \n     //bfs\u6c42\u5371\u9669\u57ce\u5e02\n    while(!que.empty()){\n        int f = que.front();que.pop();\n        if(dis[f] == s)continue;\n        for(int i = head[f] ; i ; i = e[i].from){\n            if(dis[e[i].to] == 0){\n            dis[e[i].to] = dis[f] + 1;\n            que.push(e[i].to);\t\n            }\n        }\n    }  \n   //\u5bf9\u8fb9\u6743\u8d4b\u503c\n    for(int i = 1; i<=cnt; i++){\n    \tif(e[i].to == n)continue;//\u7ec8\u70b9\u4e0d\u5305\u62ec\u5728\u5185\u7684\u539f\u56e0\u6240\u4ee5\u8df3\u8fc7\n        //\u5982\u679c\u662f\u88ab\u50f5\u5c38\u63a7\u5236\u7684\u57ce\u5e02\u628a\u8fb9\u6743\u8d4b\u503c\u6210\u4e00\u4e2a\u6781\u5927\u503c\u4fdd\u8bc1\u8fd9\u6761\u8fb9\u4e0d\u4f1a\u51fa\u73b0\u5728\u6700\u540e\u6240\u6c42\u7684\u8def\u5f84\u91cc\n    \tif(flag[e[i].to]){\n    \t\te[i].v = inf;\n    \t\tcontinue;\n    \t}\n        //\u5982\u679c\u662f\u5371\u9669\u57ce\u5e02\u8d4b\u503c\u6210q\u5426\u5219\u590d\u5236\u6210p\n        if(dis[e[i].to])e[i].v =q;\n        else e[i].v = p;\n    }\n    spfa();\n    printf(\"%lld\",dis[n]);  \n    return 0;\n}\n\n\n```\n\u5b8c\u7ed3\n\n[\u849f\u84bb\u7684\u535a\u5ba2](https://www.cnblogs.com/Euplectella/)\n",
        "postTime": 1541345051,
        "uid": 118717,
        "name": "Euplectella",
        "ccfLevel": 0,
        "title": "P3393 \u9003\u79bb\u50f5\u5c38\u5c9b"
    },
    {
        "content": "qwqq\u60ca\u4e86 \u672c\u6765\u4ee5\u4e3a\u9876\u592957\u4e0a\u4e0d\u53bb\u4e86 \u7ed3\u679c\u6539\u4e86\u4e00\u4e2a\u5730\u65b9\u4e00\u4e0b\u5c31A\u4e86\n\n\u5176\u5b9ekkk\u5df2\u7ecf\u8bf4\u7684\u5f88\u6e05\u695a\u4e86\uff08\u8bf4\u51fa\u6765\u4e4b\u540e\u518d\u5199\u8ddf\u5199\u6a21\u62df\u4e00\u6837\uff09\n\n\u5176\u5b9e\u4e0b\u9762\u7684dalao\u8bf4\u7684\u5df2\u7ecf\u5f88\u6e05\u695a \u6211\u8fd9\u91cc\u53ea\u662f\u8865\u5145\u800c\u5df2\n\n\uff08\u5176\u5b9e\u5199\u51fa\u6765\u624d\u53d1\u73b0\u4ee3\u7801\u7684\u601d\u60f3\u548c\u4e0b\u9762\u67d0\u4e2adalao\u7684\u5f88\u50cf\uff09\n\n\uff08\u4e0d\u8fc7\u8fd9\u4f4ddalao\u7684\u4ee3\u7801\u6709\u4e9b\u5730\u65b9\u5728\u6211\u770b\u6765\u5c31\u662f\u795e\u4ed9\u4ee3\u7801qwqq\uff09\n\n\u4e8e\u662f \u6211\u5c31\u6765\u8d34\u4e00\u4e0b\u6211\u7684\u4ee3\u7801\u5427...\n\n~~\u53ef\u8bfb\u6027\u5e94\u8be5\u662f\u4fdd\u8bc1\u4e86..~~\n\n```\n//#define fre yes\n\n#include <queue>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n//\u53cd\u6b63\u4e0d\u8fc71kw\u968f\u4fbf\u600e\u4e48\u5f00\u90fd\u53ef\u4ee5...\nconst int maxn = 400005;\nlong long cur[maxn];\nint date[maxn];\nbool Use[maxn];\nint arr[maxn];\n\nint head[maxn];\nint ver[maxn];\nint to[maxn];\n\nlong long d[maxn];\nint inq[maxn];\n\nint n,m,k,s,tot;\nint P,Q;\n\n//\u6bd2\u7624\u5feb\u8bfb\ntemplate<typename T>inline void read(T&x)\n{\n    x = 0;char c;int lenp = 1;\n    do { c = getchar();if(c == '-') lenp = -1; } while(!isdigit(c));\n    do { x = x * 10 + c - '0';c = getchar(); } while(isdigit(c));\n    x *= lenp;\n}\n\n//bfs\u627e\u5371\u9669\u7684\u57ce\u5e02\nvoid bfs()\n{\n    memset(date,0,sizeof(date));\n\n    queue<int> q;\n    for (int i=1;i<=k;i++)\n    {\n        q.push(arr[i]);\n        Use[arr[i]] = 1;\n        date[arr[i]] = 0;\n    }\n    \n    while(!q.empty())\n    {\n        int now = q.front();q.pop();\n        if(date[now] == s) continue;\n        for (int i=head[now];~i;i=to[i])\n        {\n            int v = ver[i];\n            if(!Use[v]) \n            { \n                Use[v] = 1;\n                q.push(v);\n                date[v] = date[now] + 1; \n            }\n        }\n    }\n}\n\n//\u9886\u63a5\u8868\u5b58\u56fe\nvoid addedge(int x,int y)\n{\n    ver[tot] = y;\n    to[tot] = head[x];\n    head[x] = tot++;\n}\n\n//spfa\u8dd1\u6700\u77ed\u8def\n//\u8fd9\u91cc\u7684\u601d\u60f3\u662f\u4e24\u4e2a\u57ce\u5e02\u7684\u70b9\u6743\u503c\u76f8\u52a0 \u6700\u540e\u6211\u4eec\u8f93\u51fa\u7684\u65f6\u5019/2\u5c31\u53ef\u4ee5\u4e86\nvoid spfa(int x)\n{\n    queue<int> q;\n    \n    q.push(x);\n    inq[x] = 1;d[x] = 0;\n    while(!q.empty())\n    {\n        int now = q.front();q.pop();inq[now] = 0;\n        for (int i=head[now];~i;i=to[i])\n        {\n            int v = ver[i];\n            if(d[v] > d[now] + cur[v] + cur[now])\n            {\n                d[v] = d[now] + cur[v] + cur[now];\n                if(inq[v]) continue;\n                inq[v] = 1;\n                q.push(v);\n            }\n        }\n    }\n}\n\nint main()\n{\n    memset(head,-1,sizeof(head));\n    memset(d,0x3f,sizeof(d));\n\n    read(n);read(m);read(k);read(s);\n    read(P);read(Q);\n\n    for (int i=1;i<=k;i++)\n    {\n        int x;\n        read(x);\n        arr[i] = x;\n    }\n\n    for (int i=1;i<=m;i++)\n    {\n        int x,y;\n        read(x);read(y);\n        addedge(x,y);\n        addedge(y,x);\n    }\n\n    bfs();\n    for (int i=1;i<=n;i++)\n    {\n        if(Use[i] == 1) cur[i] = Q;\n        else cur[i] = P;\n    }\n\t\n    //WA\u4e86\u51e0\u904d \u91cd\u65b0\u8bfb\u4e86\u4e0b\u9898 \u53d1\u73b0\u4e0d\u80fd\u8d70\u5df2\u7ecf\u6ca6\u9677\u7684\u57ce\u5e02..\n    //\u624b\u63a8\u4e86\u4e00\u4e0b \u611f\u89c9\u7684\u786e\u8981\u6539 \u4e8e\u662f\u6539\u5b8c\u4e4b\u540e\u745f\u745f\u53d1\u6296\u7684\u70b9\u4e86\u63d0\u4ea4\n    //\u7ed3\u679c..A\u4e86\n    for (int i=1;i<=k;i++) cur[arr[i]] = 10000000; \n\t\n    //\u7b2c\u4e00\u4e2a\u57ce\u5e02\u548c\u6700\u540e\u4e00\u4e2a\u57ce\u5e02\u4e0d\u7528\u4f4f\u5e97\n    cur[1] = cur[n] = 0;\n    \n    //\u4ece1\u5f00\u59cbspfa\n    spfa(1);\n    \n    //\u8f93\u51fa\u7b54\u6848\u7684\u4e00\u534a\n    printf(\"%lld\\n\",d[n]/2);\n    return 0;\n}\n```",
        "postTime": 1530244512,
        "uid": 89856,
        "name": "Steinway",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3393 \u3010\u9003\u79bb\u50f5\u5c38\u5c9b\u3011"
    },
    {
        "content": "\u89e3\u9898\u601d\u8def\uff1a\u6211\u4eec\u5148\u8dd1\u4e00\u904dBFS\uff0c\u6c42\u51fa\u54ea\u4e9b\u662f\u5371\u9669\u57ce\u5e02\uff0c\u7136\u540e\u8bb0\u5f55\u6bcf\u4e2a\u57ce\u5e02\u7684\u8def\u8d39\uff08\u8c8c\u4f3cint\u4f1a\u7206\uff0c\u6211\u7528long long\uff0c\u628a\u88ab\u5360\u9886\u57ce\u5e02\u8bbe\u4e3a0x1111111111111111LL\uff09\uff0c\u8dd1SPFA\u3002\n\n\u4f46\u662f\u662f\u70b9\u6743\u600e\u4e48\u529e\uff1f\u6211\u4eec\u53ef\u4ee5\u6bcf\u6761\u8fb9\u7684\u8fb9\u6743\u8bbe\u4e3a\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u7684\u70b9\u6743\uff0c\u7136\u540e\u6700\u540e\u7684\u7b54\u6848\u9664\u4ee52\u5373\u53ef\u3002\n\nC++ Code\uff1a\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<cstring>\n#define C c=getchar()\nint n,m,k,s;\nlong long P,Q,dis[100005],ans[100005];\nint head[400005],nxt[400005],to[400005],cnt,q1[200001],q2[200001],l,r;\nbool vis[100005];\ninline int readint(){\n    char C;\n    while(!isdigit(c))C;\n    int p=0;\n    while(isdigit(c))p=(p<<3)+(p<<1)+(c^'0'),C;\n    return p;\n}\nvoid bfs(){\n    memset(q2,0,sizeof(q2));\n    while(l!=r){\n        int u=q1[l=l%200000+1];\n        int now=q2[l]+1;\n        if(now<=s)\n        for(int i=head[u];i;i=nxt[i]){\n            int v=to[i];\n            if(dis[v]==-1){\n                dis[v]=Q;\n                q1[r=r%200000+1]=v;\n                q2[r]=now;\n            }\n        }\n    }\n    for(int i=1;i<=n;++i)\n    if(dis[i]==-1)dis[i]=P;\n}\nvoid spfa(){\n    memset(q1,0,sizeof q1);\n    memset(vis,0,sizeof(vis));\n    l=0,vis[1]=q1[1]=r=1;\n    memset(ans,0x11,sizeof ans);\n    ans[1]=0;\n    while(l!=r){\n        int u=q1[l=l%200000+1];\n        for(int i=head[u];i;i=nxt[i]){\n            int v=to[i];\n            if(ans[v]>ans[u]+dis[u]+dis[v]){\n                ans[v]=ans[u]+dis[u]+dis[v];\n                if(!vis[v]){\n                    vis[v]=1;\n                    q1[r=r%200000+1]=v;\n                }\n            }\n        }\n        vis[u]=0;\n    }\n}\nint main(){\n    n=readint(),m=readint(),k=readint(),s=readint();\n    P=readint(),Q=readint();\n    memset(dis,-1,sizeof(dis));\n    dis[1]=dis[n]=0;\n    l=r=0;\n    while(k--){\n        int x=readint();\n        dis[x]=0x1111111111111111LL;\n        q1[++r]=x;\n    }\n    cnt=0;\n    while(m--){\n        int x=readint(),y=readint();\n        to[++cnt]=y;\n        nxt[cnt]=head[x];\n        head[x]=cnt;\n        to[++cnt]=x;\n        nxt[cnt]=head[y];\n        head[y]=cnt;\n    }\n    bfs();\n    spfa();\n    printf(\"%lld\\n\",ans[n]/2);\n}\n```",
        "postTime": 1530107181,
        "uid": 98954,
        "name": "\u4e0d\u5b58\u5728\u4e4b\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3393 \u3010\u9003\u79bb\u50f5\u5c38\u5c9b\u3011"
    },
    {
        "content": "\u6211\u611f\u89c9\u8fd9\u4e00\u9898\u662f\u6a21\u7248\u9898\uff0c\u4f46\u662f\u6211\u5374\u6ca1\u6709\u505a\u8fc7\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u6211\u4f7f\u7528\u4e86\u6700\u77ed\u8def\u7684SPFA\u7b97\u6cd5\n\n\u6211\u7684\u65b9\u6cd5\u53ef\u80fd\u6ca1\u6709dalao\u4eec\u7684\u90a3\u4e48\u597d\uff1a\n\n\uff081\uff09\u628a\u6bcf\u4e00\u4e2a\u88ab\u50f5\u5c38\u63a7\u5236\u7684\u57ce\u5e02\u653e\u8fdb\u961f\u5217\u91cc\u9762\u641c\u7d22\uff0c\u627e\u51fa\u5371\u9669\u57ce\u5e02\n\n\uff082\uff09\u641c\u7d22\u6bcf\u4e00\u6761\u8fb9\uff0c\u7ed9\u6bcf\u4e00\u6761\u8fb9\u8d4b\u503c\uff0c\u56e0\u4e3a\u4e00\u5f00\u59cb\u8fb9\u662f\u6ca1\u6709\u503c\u5f97\n\n\uff083\uff09\u4e5f\u662f\u6700\u540e\u4e00\u6b65\uff0c\u6211\u4eec\u524d\u9762\u628a\u8fb9\u90fd\u627e\u597d\u4e86\uff0c\u603b\u7684\u6765\u8bf4\u524d\u9762\u7684\u90fd\u662f\n\n\u4e3a\u4e86\u627e\u8fb9\u7684\u503c\u3002\u6211\u4eec\u628a1\u653e\u8fdb\u961f\u5217\u91cc\u9762\uff0c\u7136\u540e\u5f00\u59cb\u641c\u7d22\uff0c\u6700\u540e\u8f93\u51fa\u5c31\u597d\u4e86\u3002\n\n\u6ce8\u610f\u4e8b\u9879\uff1a\n\n\uff081\uff09  1\u548cn\u4e0d\u7528\u4f4f\u5bbf\uff1b\n\n\uff082\uff09\u5360\u9886\u533a\u4e0d\u53ef\u4ee5\u53bb\uff0c\u4e5f\u4e0d\u53ef\u4ee5\u66f4\u65b0\u5176\u4ed6\u503c\uff1b\n\n\uff083\uff09long long\uff0c100000^2   >      2^64-1,\u5982\u679c\u4e0d\u7528long long\u5219\u4f1a\u5728\u7b2c4\u4e2a\u70b9\u51fa\u73b0\u9519\u8bef\n\n\u6570\u7ec4\u5b9a\u4e49\uff1a\n\nlist \u8868\u793a\u641c\u7d22\u65f6\u7684\u961f\u5217\n\nOccupied \u8868\u793a\u88ab\u50f5\u5c38\u5360\u9886\u7684\u70b9\n\ncan[x] \u8868\u793a\u70b9x\u662f\u5426\u80fd\u8d70\uff08true\u4e3a\u80fd\u8d70)\n\ndanger[x] \u8868\u793ax\u662f\u5426\u4e3a\u5371\u9669\u533a\u57df(true\u4e3a\u5371\u9669\uff09\n\nv[x]\u8868\u793ax\u662f\u5426\u80fd\u641c\u7d22\uff08true\u8868\u793a\u80fd\uff09\n\nd[x]\u8868\u793a1\u5230x\u7684\u6700\u5c0f\u8d39\u7528(\u548cDP\u6709\u70b9\u513f\u50cf\uff09\n\n\u4e0b\u9762\u662f\u6211\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#define MAXN 100001\nusing namespace std;\ntypedef long long ll;\nstruct node\n{\n\tint x,y,c,next;\n}a[MAXN*4];\nint len,last[MAXN];\ninline void ins(int x,int y,int c)//SPFA\u7b97\u6cd5\u7684\u5efa\u8fb9\u65b9\u5f0f\uff0c\u4e0d\u4f1a\u7684\u540c\u5b66\u8d76\u7d27\u5b66\u4e00\u4e0b \n{\n\tlen++;\n\ta[len].x=x;a[len].y=y;a[len].c=c;\n\ta[len].next=last[x];last[x]=len;\n}\nint n,m,k,s,p,q;\nint head,tail,list[MAXN],Occupied[MAXN];\nbool can[MAXN],danger[MAXN],v[MAXN];\nll d[MAXN];\ninline void Find_danger(int Zombie)//\u6b65\u9aa4\uff081\uff09 \n{\n\tint x,y,kk;\n\tmemset(d,127,sizeof(d));d[Zombie]=0;//\u521d\u59cb\u5316 \n\tmemset(v,true,sizeof(v));v[Zombie]=false;\n\thead=1;tail=2;list[1]=Zombie;\n\twhile(head!=tail)\n\t{\n\t\tx=list[head];\n\t\tfor(kk=last[x];kk;kk=a[kk].next)\n\t\t{\n\t\t\ty=a[kk].y;\n\t\t\tif(d[y]>d[x]+ll(1))//\u641c\u5bfb\u6700\u77ed\u8fb9 \n\t\t\t{\n\t\t\t\td[y]=d[x]+ll(1);//\u53d6\u6700\u77ed\u8fb9 \n\t\t\t\tif(d[y]<=s && v[y]==true)//\u5982\u679c\u957f\u5ea6\u8d85\u51fa\u4e86s\uff0c\u90a3\u5c31\u6beb\u65e0\u610f\u4e49\u4e86\uff0c\u800c\u4e14\u6d6a\u8d39\u65f6\u95f4 \n\t\t\t\t{\n\t\t\t\t\tdanger[y]=true;//\u5728s\u8ddd\u79bb\u4ee5\u5185\u7684\u90fd\u662f\u5371\u9669\u533a\u57df \n\t\t\t\t\tv[y]=false;\n\t\t\t\t\tlist[tail]=y;tail++;\n\t\t\t\t\tif(tail==n+1) tail=1;//\u8fd9\u662f\u4e00\u4e2a\u4f18\u5316\uff0c\u8282\u7701\u4e86\u4e0d\u5c11\u7684\u7a7a\u95f4\uff0c\u800c\u4e14\u907f\u514d\u4e86\u7a7a\u95f4\u8d85\u9650\u7684\u60c5\u51b5 \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tv[x]=true;//\u8bb0\u5f97\u628a\u70b9x\u53d8\u5f97\u80fd\u8d70\uff0c\u56e0\u4e3a\u4ee5\u540e\u53ef\u80fd\u4f1a\u6709\u522b\u7684\u6765\u66f4\u65b0\u8fd9\u4e2a\u70b9 \n\t\tlist[head]=0;//\u56e0\u4e3a\u4ee5\u540e\u53ef\u80fd\u4f1a\u7ee7\u7eed\u4f7f\u7528\u8fd9\u4e2a\uff0c\u6240\u4ee5\u8981\u4e3a0 \n\t\thead++;if(head==n+1) head=1;//\u8bb0\u5f97\u628ahead\u4e5f\u589e\u52a0\uff0c\u6211\u4ee5\u524d\u7ecf\u5e38\u72af\u8fd9\u4e2a\u9519\u8bef \n\t}\n}\ninline void Flee_Zombie_Island()\n{\n\tint x,y,i;\n\tscanf(\"%d%d%d%d\",&n,&m,&k,&s);\n\tscanf(\"%d%d\",&p,&q);\n\tmemset(can,true,sizeof(can));//\u521d\u59cb\u5316\uff0c\u4e00\u5f00\u59cb\u90fd\u662f\u53ef\u4ee5\u8d70\u7684 \n\tfor(i=1;i<=k;i++){scanf(\"%d\",&Occupied[i]);can[Occupied[i]]=false;}//\u628a\u88ab\u5360\u9886\u7684\u533a\u57df\u6807\u8bb0\u4e3a\u4e0d\u80fd\u8d70 \n\tfor(i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);//\u5efa\u7acb\u8fb9 \n\t\tins(x,y,0);ins(y,x,0);//\u4e00\u5f00\u59cb\u4e3a0\uff0c\u8fd9\u4e2a\u4e0d\u91cd\u8981 \n\t}\n\tmemset(danger,false,sizeof(danger));//\u4e00\u5f00\u59cb\u90fd\u4e0d\u662f\u5371\u9669\u533a\u57df \n\tfor(i=1;i<=k;i++) Find_danger(Occupied[i]);//\u641c\u7d22\u6bcf\u4e00\u4e2a\u88ab\u5360\u9886\u7684\u70b9 \n\tfor(i=1;i<=len;i++)//\u641c\u7d22\u6bcf\u4e00\u6761\u8fb9 \n\t{\n\t\tif(can[a[i].x]==false || can[a[i].y]==false) continue;//\u5982\u679c\u8d77\u70b9\u6216\u7ec8\u70b9\u4e3a\u5371\u9669\u533a\u57df\uff0c\u5c31\u8df3\u8fc7\uff0c\u56e0\u4e3a\u5b83\u6839\u672c\u8d70\u4e0d\u4e86 \n\t\tif(a[i].y==1 || a[i].y==n) continue;//\u6ce8\u610f\u4e8b\u9879\uff082\uff09  \n\t\tif(danger[a[i].y]==false) a[i].c=p;//\u65c5\u5e97\u7684\u4ef7\u94b1 \n\t\telse\t\t\t\t\t  a[i].c=q;\n\t}\n\tmemset(d,127,sizeof(d));d[1]=0;//\u521d\u59cb\u5316\uff0c\u81ea\u5df1\u5230\u81ea\u5df1\u672c\u6765\u5c31\u662f\u4e3a0 \n\tmemset(v,true,sizeof(v));v[1]=false;//\u81ea\u5df1\u4e0d\u80fd\u518d\u8d70 \n\thead=1;tail=2;list[1]=1;//\u8fd9\u91cc\u4e5f\u662f\u521d\u59cb\u5316 \n\twhile(head!=tail)//\u641c\u7d22\u5f00\u59cb \n\t{\n\t\tx=list[head];\n\t\tfor(int k=last[x];k;k=a[k].next)//\u679a\u4e3e\u6bcf\u4e00\u6761\u8fb9\u4e0ex\u6709\u5173\u8054\u7684\u8fb9 \n\t\t{\n\t\t\ty=a[k].y;//\u8fd9\u4e00\u6761\u8fb9\u7684\u7ec8\u70b9 \n\t\t\tif(can[y]==true)//\u800c\u4e14\u8fd9\u8df3\u53d8\u80fd\u8d70 \n\t\t\t{\n\t\t\t\tif(d[y]>d[x]+ll(a[k].c))//\u53d6\u6700\u4f18\u503c \n\t\t\t\t{\n\t\t\t\t\td[y]=d[x]+ll(a[k].c);\n\t\t\t\t\tif(v[y]==true)//\u5982\u679c\u8fd9\u4e2a\u70b9\u76ee\u524d\u6ca1\u6709\u5b58\u5728\u8fd9\u4e2a\u6570\u7ec4\u91cc\u9762\uff0c\u6709\u5c31\u76f4\u63a5\u4f18\u5316\u5c31\u884c\uff0c\u4e0d\u7528\u7ee7\u7eed\u641c\u4e86\uff01 \n\t\t\t\t\t{\n\t\t\t\t\t\tv[y]=false;//\u7ee7\u7eed\u5f80\u4e0b\u641c\u7d22 \n\t\t\t\t\t\tlist[tail]=y;\n\t\t\t\t\t\ttail++;if(tail==n+1) tail=1;//\u8fd9\u4e2a\u548c\u4e0a\u9762\u7684\u4e00\u6837 \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tv[x]=true; \n\t\tlist[head]=0;\n\t\thead++;if(head==n+1) head=1;\n\t}\n\tprintf(\"%lld\\n\",d[n]);//\u8f93\u51fa \n}\nint main() {//\u7279\u522b\u8212\u670d\u7684\u4e3b\u7a0b\u5e8f \n\tFlee_Zombie_Island();return 0; \n}\n```\n",
        "postTime": 1523193418,
        "uid": 66181,
        "name": "Celebrate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3393 \u3010\u9003\u79bb\u50f5\u5c38\u5c9b\u3011"
    },
    {
        "content": "\u770b\u5230\u697c\u4e0b\u90a3\u4e48\u591a\u5927\u4f6c\u53d1\u4e86 \u654c\u6cd5\u5e08\uff08dfs\uff09\u7684\u9898\u89e3\uff0c\u4f46\u662f\u6ca1\u770b\u5230\u6709 BFS \u7684\nso\u3002\u3002\u672c\u84bb\u5c31\u53d1\u4e00\u4e0bla\n\u60f3\u6cd5\u5f88\u7b80\u5355\uff0cBFS/DFS \u9884\u5904\u7406 \u51fa\u5371\u9669\u57ce\u5e02\uff0c\u7136\u540e\u9884\u5904\u7406\u70b9\u6743\uff0cSPFA\u7684\u65f6\u5019\u5c31\u62ffver[i]\u7684\u70b9\u6743\u53bb\u66f4\u65b0\uff1b\n4\u4e2a\u5751\uff1a\n1. 1\u548cn\u4e0d\u7528\u4f4f\u5bbf\uff1b\n2. \u5360\u9886\u533a\u4e0d\u53ef\u4ee5\u53bb\uff0c\u4e5f\u4e0d\u53ef\u4ee5\u66f4\u65b0\u5176\u4ed6\u503c\uff1b\n3. long long \n4. BFS \u66f4\u65b0\u7684\u65f6\u5019\u4e0d\u8981\u91cd\u590d\u66f4\u65b0\uff1b \nand \u8d34\u4ee3\u7801\uff1a\n\n\n\n------------\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define M  500000\n#define INF 0x3f3f3f3f\nint higher[M];\nlong long dis[M];\nint vis[M],n,m,k,s,P,Q;\nint head[M],nxt[M],ver[M],val[M],cnt=0;\nvoid add(int x,int y){nxt[++cnt]=head[x],ver[cnt]=y,head[x]=cnt;return ;}\nqueue<int >tag;\nvoid BFS(){\n\twhile(tag.size()){\n\t\tint now=tag.front();tag.pop();\n\t\tfor(int i=head[now];i;i=nxt[i]){\n\t\t\tif(!higher[ver[i]]){//\u5982\u679c\u5df2\u7ecf\u7684\u5230deep \u5c31\u4e0d\u518d\u7ba1\u4ed6\uff0c\u56e0\u4e3a\uff0c\uff0c\u5b83\u5c31\u662f\u4f1a\u6709\u5371\u9669\uff0c\u5728\u66f4\u65b0\u6ca1\u610f\u4e49\uff1b\n\t\t\t\thigher[ver[i]]=higher[now]+1;\n\t\t\t\ttag.push(ver[i]);\n\t\t\t}\n\t\t}\n\t}\n}\nvoid spfa(int s){\n\tmemset(dis,INF,sizeof(dis));dis[s]=0;vis[s]=1;\n\tqueue<int >q;q.push(s);\n\twhile(q.size()){\n\t\tint now=q.front();q.pop();vis[now]=0;\n\t\tfor(int i=head[now];i;i=nxt[i]){\n\t\t\tif(vis[ver[i]]==2)continue;\n\t\t\tif(dis[ver[i]]>dis[now]+val[ver[i]]){\n\t\t\t\tdis[ver[i]]=dis[now]+val[ver[i]];\n\t\t\t\tif(!vis[ver[i]]){\n\t\t\t\t\tq.push(ver[i]);\n\t\t\t\t\tvis[ver[i]]=1;\n\t\t\t\t}\n\t}}}return ;\n}\nint main(){\n\tint x,y;\n\tscanf(\"%d%d%d%d\",&n,&m,&k,&s);\n\tscanf(\"%d%d\",&P,&Q);\n\tmemset(vis,0,sizeof(vis));\n\tfor(int i=1;i<=k;i++){scanf(\"%d\",&x);vis[x]=2;tag.push(x);}\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y);add(y,x);\n\t}\n\tBFS();\n\tfor(int i=2;i<n;i++){//2 \u5230 n \u5c31\u597d\n\t\tif(higher[i]<=s)val[i]=Q;\n\t\telse val[i]=P;\n\t}spfa(1); \n\tprintf(\"%lld\\n\",dis[n]);\n} \n```",
        "postTime": 1522315641,
        "uid": 72722,
        "name": "AndyXLaer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3393 \u3010\u9003\u79bb\u50f5\u5c38\u5c9b\u3011 BFS+SPFA"
    },
    {
        "content": "####\u770b\u5230\u697c\u4e0b\u7528bfs\u591a\uff0c\u5176\u5b9e\u4e5f\u53ef\u4ee5\u8dd1\u4e24\u904dspfa\uff08>\\_>\uff09\uff1b\n\n####\u7528\u90bb\u63a5\u8868\uff08\u94fe\u5f0f\u524d\u5411\u661f\uff1f\uff1f\uff09\u5b58\u56fe\uff0c\u4e0d\u7136\u4f1a\u7206\n\n###z\u6ce8\u610f1<p<q<=100000\u800cn\u6709100000,10^6\\*10^6>maxlongint;\n\n####\u88ab\u8fd9\u4e2a\u6570\u636e\u8303\u56f4\u5751\u6389\u4e86\u7b2c\u56db\u4e2a\u70b9\uff0c\u5982\u679c\u9519\u4e86\u53ef\u80fd\u662f\u6ca1\u5f00\uff08int64/long long\uff09\n\n####\u4e0b\u9762\u4e0a\u4ee3\u7801\uff08\u6015\u4ee3\u7801\u6bd4\u8f83\u957f\u8bc6\u522b\u4e0d\u51fa\uff0c\u53ef\u80fd\u770b\u8d77\u6765\u4e0d\u8212\u670d\uff09\n\n\u00b7\u00b7\u00b7Pascal\n\n\n```cpp\ntype  arr=record\n      t,next:int64;\nend;\nvar i,j,k,n,m,s,p,q1,x,cnt,y:longint;\n    h,c,cdioost,q,dis,dist:array[0..100001] of int64;\n    e:array[0..1000000] of arr;//\u90bb\u63a5\u8868\u5b58\u56fe\n    v:array[0..100001] of boolean;//\u8868\u793a\u8be5\u70b9\u662f\u5426\u88ab\u8bbf\u95ee\u8fc7\nprocedure add(u,v:longint);\nbegin\n  inc(cnt);\n  e[cnt].t:=v;\n  e[cnt].next:=h[u];\n  h[u]:=cnt;\nend;//\u52a0\u8fb9\u5c31\u4e0d\u7528\u8bf4\u4e86\nprocedure spfa1;//\u7b2c\u4e00\u904dspfa\u8dd1\u51fa\u5371\u9669\u57ce\u5e02\nvar i,head,tail,u:longint;\nbegin\n  fillchar(q,sizeof(q),0);\n  fillchar(v,sizeof(v),false);\n  fillchar(dis,sizeof(dis),$3f);\n  head:=1; tail:=k;\n  for i:=1 to k do\n    begin\n      q[i]:=c[i];\n      v[c[i]]:=true;\n      dis[c[i]]:=0;\n    end;//\u5148\u628a\u88ab\u611f\u67d3\u7684\u57ce\u5e02\u5165\u961f\uff0cdis\u6570\u7ec4\u5b58\u5230\u5371\u9669\u57ce\u5e02\u7684\u8ddd\u79bb\n  while head<=tail do\n    begin\n      u:=q[head];\n      i:=h[u];\n      while i<>0 do\n        begin\n          if dis[e[i].t]>dis[u]+1 then\n            begin\n              dis[e[i].t]:=dis[u]+1;\n              if not v[e[i].t] then\n                begin\n                  inc(tail);\n                  q[tail]:=e[i].t;\n                  v[e[i].t]:=true;\n                end;//\u628ae[i].t\u5165\u961f\n            end;\n          i:=e[i].next;//\u8fed\u4ee3\u5230\u4e0b\u4e00\u4e2a\u70b9\n        end;\n      v[u]:=false;//\u522b\u5fd8\u4e86\u91ca\u653e\u5934\u7ed3\u70b9\n      inc(head);//q.pop()\n    end;\nend;//\u90bb\u63a5\u8868\u7684spfa\nprocedure spfa2;//\u8dd1\u51fa1-n\u7684\u6700\u5c0f\u82b1\u8d39\nvar i,head,u,tail:longint;\nbegin\n  fillchar(q,sizeof(q),0);\n  fillchar(v,sizeof(v),false);\n  fillchar(dist,sizeof(dist),$3f);\n  for i:=1 to k do dist[c[i]]:=0;//\u5230\u4e0d\u4e86\u7684\u5371\u9669\u57ce\u5e02\n  dist[1]:=0; q[1]:=1;\n  v[1]:=true;\n  head:=1; tail:=1;\n  while head<=tail do//spfa\u5927\u4f53\u540c\u4e0a\uff0c\u4f46\u6253\u8d77\u6765\u6bd4bfs\u6574\u9f50\u70b9\n    begin\n      u:=q[head];\n      i:=h[u];\n      while i<>0 do\n        begin\n        if (dist[e[i].t]>dist[u]+cost[e[i].t])and(dis[e[i].t]<>0){\u989d\u8fd9\u4e2a\u6709\u70b9\u591a\u4f59} then\n          begin\n            dist[e[i].t]:=dist[u]+cost[e[i].t];\n            if not v[e[i].t] then\n              begin\n                inc(tail);\n                q[tail]:=e[i].t;\n                v[e[i].t]:=true;\n              end;\n          end;\n        i:=e[i].next;\n        end;\n      v[u]:=false;\n      inc(head);\n    end;\nend;\nbegin\n  readln(n,m,k,s); readln(p,q1);\n  for i:=1 to k do readln(c[i]);//c[i]\u5b58\u5371\u9669\u57ce\u5e02\u7f16\u53f7\n  for i:=1 to m do\n    begin\n      readln(x,y);\n      add(x,y);add(y,x);//\u90bb\u63a5\u8868\u52a0\u8fb9\n    end;\n  spfa1;\n  for i:=1 to n do\n    if dis[i]<=s then cost[i]:=q1 else cost[i]:=p;//\u82e5i\u5230\u5371\u9669\u57ce\u5e02\u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8es\u90a3\u4e48\u8d39\u7528\u4e3aq1\u8d1f\u8d23\u4e3ap\n  cost[1]:=0; cost[n]:=0;//\u8d77\u70b9\u548c\u7ec8\u70b9\u4e0d\u7b97\u94b1\n  spfa2;\n  writeln(dist[n]);\nend.\n\n```",
        "postTime": 1509590550,
        "uid": 19485,
        "name": "scarborough_fair",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3393 \u3010\u9003\u79bb\u50f5\u5c38\u5c9b\u3011"
    },
    {
        "content": "\u6ca1\u6709pas\u7684\u9898\u89e3\u3002\u6211\u6765\u4e00\u4e2a\n\n\u5f88\u88f8\u7684\u6a21\u677f\u9898\u5440.\n\n\u4e3b\u8981\u601d\u8def\uff1abfs\u51fa\u5371\u9669\u7684\u57ce\u5e02\uff0c\u518d\u4fee\u6539\u8fb9\u6743\uff0c\u7136\u540e\u518d\u6c42\u6700\u77ed\u8def.\n\n\u91c7\u7528\u90bb\u63a5\u8868\u5b58\u50a8\u56fe\n\n\u672c\u6765\u662f\u60f3\u79bb\u6563\u4f18\u5316\u4e00\u4e0b\u8def\u6743\uff0c\u4f46\u662f\u7b2c4\u4e2a\u6d4b\u8bd5\u70b9\u8fc7\u4e0d\u4e86\uff0c\u8fd8\u662f\u9009\u62e9\u7528int64/long long\n\n```cpp\nconst max=maxlongint*999;       \n  type node=record                     \n       va:longint;  \n       num:longint;\n       end;    \n  var head,next,h:array[0..400000] of longint;\n      dis:array[0..1000000] of int64;\n      e,v,w:array[0..1000000] of longint;\n      book,inj,inf,bks:array[0..100000] of boolean;      \n     //inj\u8868\u793a\u88ab\u611f\u67d3\u7684\u57ce\u5e02\uff0cinf\u8868\u793a\u5371\u9669\u57ce\u5e02\uff0cbook\u662fspfa\u7684\uff0cbks\u662f\u5e7f\u641c\u91cc\u7684\n      que:array[0..1000000] of node;               //\u5e7f\u641c\u961f\u5217\uff0cva\u8868\u793a\u8282\u70b9\uff0cnum\u8868\u793a\u8282\u70b9\u5c42\u6570\n      i,j,m,n,s,p,q,c,k,tot,a1,b1,h1,t1,gc:longint;\n  function gcd(m,n:longint):longint;            //\u8f97\u8f6c\u76f8\u9664\u6cd5\u505a\u4f18\u5316\n  begin \n  if n<>0 then exit(gcd(n,m mod n))\n   else exit(m);\n  end;\n  procedure ad(x,y:longint);         //\u5bf9\u4e8ex,y\u4e24\u4e2a\u8282\u70b9\u5efa\u7acb\u65e0\u5411\u8fb9\n  begin\n  if inj[y]=false then       //\u82e5\u662f\u53bb\u7684\u90a3\u4e2a\u70b9(v[i]),\u662f\u88ab\u611f\u67d3\u7684\u57ce\u5e02\uff0c\u90a3\u5c31\u4e0d\u6dfb\u52a0\u8fd9\u6761\u8fb9\n    begin                       //\u53cd\u4e4b\uff0c\u5219\u9700\u6dfb\u52a0\n    inc(tot);                    //\u8fd9\u6837\u4fdd\u8bc1\u4e86\u4e0d\u53ef\u80fd\u53bb\u88ab\u611f\u67d3\u7684\u57ce\u5e02\n    e[tot]:=x;                  //\u4e5f\u4fdd\u8bc1\u4e86\u5371\u9669\u57ce\u5e02\u7684\u5b58\u5728\n    v[tot]:=y;\n    next[tot]:=head[x];\n    head[x]:=tot;\n    end;\n  if inj[x]=false then\n    begin\n    inc(tot);\n    e[tot]:=y;\n    v[tot]:=x;\n    next[tot]:=head[y];\n    head[y]:=tot;\n    end;\n  end;\n  procedure bfs;               //\u5e7f\u641c\uff0c\u91c7\u7528\u5faa\u73af\u961f\u5217\uff0c\u8981\u4e0d\u7136\u7a7a\u95f4\u4e0a\u5403\u4e0d\u6d88\n  var pos:longint;            //\u548c\u697c\u4e0b\u8bf4\u7684\u4e00\u6837\uff0c\u8981\u7528\u5230spfa\u7684\u601d\u60f3\uff0c\u70b9\u5728\u961f\u5217\u91cc\u5c31\u4e0d\u641c\n  begin\n  while h1<t1 do\n   begin\n   if que[h1].num=s then exit;  //\u82e5\u5df2\u7ecf\u662fs\u5c42\u4e86\uff0c\u8fd9\u8981\u53ca\u65f6\u9000\u51fa\n   pos:=head[que[h1].va];\n   while pos<>-1 do\n    begin\n     if bks[v[pos]]=false then\n       begin\n       bks[v[pos]]:=true;\n       inf[v[pos]]:=true;\n       que[t1].va:=v[pos];\n       que[t1].num:=que[h1].num+1;\n       t1:=t1 mod 1000000 +1;\n       end;\n     pos:=next[pos];\n   end;\n   bks[que[h1].va]:=false;       //\u51fa\u961f\u65f6\u8981\u7f6e\u4e3afalse\n   h1:=h1 mod 1000000+1;\n   end;\n  end;\n  procedure spfa(x:longint);       //spfa\u6c42\u6700\u77ed\u8def\uff0c\u4e0d\u4f5c\u7d2f\u8ff0\n  var i,j,pos,qh,t:longint;\n  begin\n  h[0]:=x;\n  t:=1;\n  qh:=0;\n  book[1]:=true;\n  while qh<t do\n   begin\n   pos:=head[h[qh]];\n   while pos<>-1 do\n    begin\n    if dis[h[qh]]+w[pos]<dis[v[pos]] then\n     begin\n     dis[v[pos]]:=w[pos]+dis[h[qh]];\n     if book[v[pos]]=false then\n       begin\n       book[v[pos]]:=true;\n       h[t]:=v[pos];\n       inc(t);\n       end;\n     end;\n    pos:=next[pos];\n   end;\n   book[h[qh]]:=false;\n   inc(qh);\n   end;\n  end;\n  begin\n  read(n,m,k,s,p,q);\n  gc:=gcd(p,q);\n  p:=p div gc;\n  q:=q div gc;\n  tot:=0;\n  for i:=1 to k do\n    begin\n    readln(c);\n    inj[c]:=true;\n    end;\n  for i:=1 to n do head[i]:=-1;\n  for i:=1 to m do\n   begin\n   read(a1,b1);\n   ad(a1,b1);\n   end;\n   h1:=0;\n   t1:=0;\n   for i:=1 to n do\n    if inj[i] then\n     begin\n     que[t1].va:=i;\n     inc(t1);\n     end;           //\u5728\u5e7f\u641c\u4e4b\u524d\u8981\u628a\u5df2\u7ecf\u88ab\u611f\u67d3\u7684\u57ce\u5e02\u5165\u961f\n   bfs;\n   for i:=1 to tot do\n    begin\n    if inf[v[i]] then w[i]:=q\n      else w[i]:=p;\n    if v[i]=n then w[i]:=0;   //\u7b2cn\u70b9\u4e0d\u8981\u4f4f\u5e97\uff0c\u5219\u4e3a0\n    end;                  //\u5e7f\u641c\u4e4b\u540e\uff0c\u6309\u7167\u662f\u5426\u5b89\u5168\u7ed9\u8fb9\u8d4b\u503c\n   for i:=2 to n do dis[i]:=max;\n   spfa(1);\n   writeln(dis[n]*gc);\n   readln;\nend.\n```",
        "postTime": 1493268390,
        "uid": 27019,
        "name": "shenyi1343395317",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3393 \u3010\u9003\u79bb\u50f5\u5c38\u5c9b\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\u2026\u2026\u7d27\u5f20\u2026\u2026\u8868\u793a\u4e0d\u592a\u4f1a\u7528Markdown\uff0c\u5e0c\u671b\u6ca1\u95ee\u9898\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u4f18\u5316dijkstra\u7684\u89e3\u9898\u4ee3\u7801\n\n\u601d\u8def\uff1a\u5148BFS\u51fa\u5371\u9669\u7684\u57ce\u5e02\uff0c\u7136\u540e\u518d\u641c\u6700\u77ed\u8def\n\n\n\u56e0\u4e3a\u90bb\u63a5\u8868vec\u5efa\u7acb\u7684\u5f62\u5f0f\uff0c\u6211\u7528\u4e86\u4e00\u4e2a\u6bd4\u8f83\u7b28\u7684\u65b9\u6cd5\u6765\u5728BFS\u66f4\u6539\u8def\u6743\uff0c\u8be6\u60c5\u89c1\u4ee3\u7801\n\n\u7136\u540e\u8def\u6743\u8bbe\u7f6e\u4e3a\u76ee\u6807\u57ce\u5e02\u7684\u8d39\u7528\uff0c\u53bb\u5b89\u5168\u57ce\u5e02\u5c31\u662fsafe\uff0c\u5426\u5219\u662fdanger\n\n\u6ce8\u610f\uff1a\u76ee\u6807\u57ce\u5e02N\u7684\u8def\u6743\u5168\u90e8\u4e3a0\n\n\u4ee3\u7801\u4e0d\u662f\u7279\u522b\u597d\uff0c\u8fd8\u6709\u53ef\u4ee5\u4f18\u5316\u7684\u5730\u65b9\n\n\u8d34\u4e00\u4e0bC++\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<vector>\n#include<queue>\n#define Max 20000000000\nusing namespace std;\n\nstruct edge{\n    int to, distance;\n};\nvector<edge> vec1[100010];//\u7528\u4e8eBFS \nvector<edge> vec2[100010];//\u5c06\u98a0\u5012\u7684vec1\u53cd\u8f6c\u56de\u6765 \nedge e;\n\n//dijstra\u4f18\u5148\u961f\u5217\u4f18\u5316 \ntypedef pair<int,int> P;\npriority_queue< P, vector<P>, greater<P> > que;\nP p;\n\nqueue<P> que_danger;//BFS\u5371\u9669\u57ce\u5e02 \n\nlong long int dis[100010], safe, danger;//safe\u8868\u793a\u5b89\u5168\u57ce\u5e02\u8d39\u7528\uff0cdanger\u53cd\u4e4b \nint N, M, K, S, from, to, distance;\nbool sign[100010];//\u6807\u8bb0\u662f\u5426\u88ab\u4fb5\u5360 \n\nint main(){\n    ios::sync_with_stdio(false);//\u8f93\u5165\u8f93\u51fa\u4f18\u5316 \n    cin >> N >> M >> K >> S >> safe >> danger;\n    //\u5371\u9669\u57ce\u5e02\u52a0\u5165que_danger\n    for( register int i = 1; i <= N; i ++ ) sign[i] = true;\n    for( register int i = 0; i < K; i ++ ){\n        cin >> from;\n        sign[from] = false;//\u6807\u8bb0\uff0cdijkstra\u65f6\u4e0d\u7ecf\u8fc7\u8fd9\u4e2a\u57ce\u5e02 \n        que_danger.push( P(from,0) );\n    }\n    //\u5efa\u7acbvec1\n    for( register int i = 1; i <= M; i ++ ){\n        cin >> from >> to;\n        e.to = to; e.distance = safe;\n        vec1[from].push_back( e );\n        e.to = from;\n        vec1[to].push_back( e );\n    }\n    //\u5371\u9669\u57ce\u5e02BFS \n    while( que_danger.size() ){\n        p = que_danger.front();\n        que_danger.pop();\n        if( p.second == S + 1 ) break;\n        for( register int i = 0; i < vec1[p.first].size(); i ++ ){\n            if( vec1[p.first][i].distance != danger ){\n                vec1[p.first][i].distance = danger;//\u56e0\u4e3a\u662f\u51fa\u57ce\u8def\u6743\u6539\u6210danger\uff0c\u6240\u4ee5\u8fd8\u8981\u53cd\u8f6c\u53d8\u4e3a\u5165\u57ce\u8def\u6743\u662fdanger \n                que_danger.push( P(vec1[p.first][i].to,p.second+1) );\n            }\n        }\n    }\n    //\u53cd\u8f6cvec1\u6210vec2 \n    for( register int j, i = 1; i <= N; i ++ ){\n        for( j = 0; j < vec1[i].size(); j ++ ){\n            to = vec1[i][j].to;\n            e.to = i;\n            if( i == N ) e.distance = 0;//\u7ec8\u70b9N\u57ce\u5e02\u5165\u57ce\u8def\u6743\u4e3a0 \n            else e.distance = vec1[i][j].distance;\n            vec2[to].push_back( e );\n        }\n    }\n    //dijkstra\n    for( register int i = 2; i <= N; i ++ ) dis[i] = Max;\n    dis[1] = 0;\n    que.push( P(1,0) );\n    while( que.size() ){\n        p = que.top();\n        que.pop();\n        if( p.second > dis[p.first] ) continue;\n        from = p.first;\n        for( register int i = 0; i < vec2[from].size(); i ++ ){\n            e = vec2[from][i];\n            if( dis[from] + e.distance < dis[e.to] && sign[e.to] ){\n                dis[e.to] = dis[from] + e.distance;\n                que.push( P(e.to,dis[e.to]) );\n            }\n        }\n    }\n    cout << dis[N];\n    return 0;\n}\n```",
        "postTime": 1477826831,
        "uid": 19174,
        "name": "YF1999",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3393 \u3010\u9003\u79bb\u50f5\u5c38\u5c9b\u3011"
    },
    {
        "content": "~~\u5904\u5973\u4f5c\u9898\u89e3~~\n\u8fd9\u9053\u9898\u53ef\u4ee5\u5148\u53c2\u80031144,\u7528\u540c\u6837\u7684\u65b9\u6cd5\u5148\u5904\u7406\u51fa\u5371\u9669\u6751\u5e84,\u5c06\u6bcf\u4e2a\u6751\u5e84\u7684\u70b9\u6743\u8d4b\u4e3a\u6751\u5e84\u7684\u4f4f\u5bbf\u4ef7\u683c,\u518d\u8dd1\u4e00\u4e2a\u6700\u77ed\u8def\u65e7\u884c\u4e86,~~\u6f02\u4eae\u7684\u4ee3\u7801~~```\n```pascal\nvar\n l,r,u,v:longint;\n tow,next:array[0..1000001] of int64;\n head,c,cost,q,dis,d:array[0..100001] of int64;\n vis:array[0..100001] of boolean;\n i,j,n,m,k,s,pp,qq,x,y,cnt:longint;\n\nprocedure add(u,v:longint);\nbegin\n inc(cnt);\n tow[cnt]:=v;\n next[cnt]:=head[u];\n head[u]:=cnt;\nend;//\u5b58\u56fe\nbegin\n readln(n,m,k,s);\n readln(pp,qq);\n for i:=1 to k do read(c[i]);\n for i:=1 to m do\n  begin\n   readln(x,y);\n   add(x,y);\n   add(y,x);\n  end;\n fillchar(q,sizeof(q),0);\n  fillchar(vis,sizeof(vis),false);\n  fillchar(dis,sizeof(dis),$3f);\n  l:=0;r:=k;\n  for i:=1 to k do\n   begin\n    q[i]:=c[i];\n    vis[c[i]]:=true;\n    dis[c[i]]:=0;\n   end;\n  while l<r do\n   begin\n    inc(l);\n    u:=q[l];\n    i:=head[u];\n    while i<>0 do\n     begin\n      v:=tow[i];\n      if dis[v]>dis[u]+1 then\n       begin\n        dis[v]:=dis[u]+1;//\u6751\u5e84\u4e0e\u50f5\u5c38\u6751\u5e84\u7684\u8ddd\u79bb\n        if not vis[v] then\n         begin\n          vis[v]:=true;\n          inc(r);\n          q[r]:=v;\n         end;\n       end;\n      i:=next[i];\n     end;\n    vis[u]:=false;\n   end;\n //\u4ee5\u4e0a\u662f\u548c1144\u4e00\u6837\u7684\u4fdd\u5b58\u8ddd\u79bb,\u4e0b\u9762\u662fSPFA\n for i:=1 to n do\n  if dis[i]<=s then cost[i]:=qq\n   else cost[i]:=pp;\n cost[1]:=0;cost[n]:=0;\n fillchar(q,sizeof(q),0);\n  fillchar(vis,sizeof(vis),false);\n  fillchar(d,sizeof(d),$3f);\n  for i:=1 to k do d[c[i]]:=0;\n  d[1]:=0;q[1]:=1;vis[1]:=true;\n  l:=0;r:=1;\n  while l<=r do\n   begin\n    inc(l);\n    u:=q[l];\n    i:=head[u];\n    while i<>0 do\n     begin\n      v:=tow[i];\n      if (d[v]>d[u]+cost[v])and(dis[v]<>0) then\n       begin\n        d[v]:=d[u]+cost[v];\n        if not vis[v] then\n         begin\n          vis[v]:=true;\n          inc(r);\n          q[r]:=v;\n         end;\n       end;\n      i:=next[i];\n     end;\n    vis[u]:=false;\n   end;\n writeln(d[n]);\nend.\n\n```",
        "postTime": 1528097822,
        "uid": 70635,
        "name": "\u76ae\u76ae\u7f8a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3393 \u3010\u9003\u79bb\u50f5\u5c38\u5c9b\u3011"
    }
]