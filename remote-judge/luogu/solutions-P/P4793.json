[
    {
        "content": "\u653e\u4e00\u7bc7\uff08\u53ef\u80fd\uff09\u6bd4\u8f83\u6b63\u5e38\u7684cdq\u9898\u89e3\n\n---\n\n### \u9898\u89e3\uff1a\n\n\u9898\u610f\u663e\u7136\u662f\u4e00\u4e2a\u56db\u7ef4\u504f\u5e8f\uff0c\u7136\u800c\u4e09\u53ealog\u7684\u590d\u6742\u5ea6\u4e5f\u663e\u7136\u662f\u4e0d\u4f18\u79c0\u7684\n\n\u6ce8\u610f\u5230\u9898\u76ee\u53ea\u662f\u8ba9\u6211\u4eec\u5224\u5b9a\u67d0\u4e2a\u77e9\u5f62\u80fd\u5426\u88ab\u5176\u4ed6\u67d0\u4e00\u4e2a\u77e9\u5f62\u5305\u62ec\uff0c\u800c\u4e0d\u662f\u6709\u51e0\u5bf9\u5173\u7cfb\uff0c\u56e0\u6b64\u672c\u9898\u53ef\u4ee5\u901a\u8fc7\u67d0\u4e9b\u65b9\u6cd5\u7b80\u5316\u6389\u4e00\u5c42\u9650\u5236\n\n\u8003\u8651\u82e5\u77e9\u5f62$j$\u8981\u5bf9\u77e9\u5f62$i$\u4ea7\u751f\u8d21\u732e\uff0c\u5373$j$\u5305\u542b$i$\uff0c\u9700\u8981\u6ee1\u8db3$x_{j2}>x_{i2}$\uff0c$y_{j2}>y_{i2}$\uff0c$x_{j1}<x_{i1}$\uff0c$y_{j1}<y_{i1}$\n\n\u5047\u8bbe\u6211\u4eec\u6b64\u65f6\u5df2\u7ecf\u7528\u6392\u5e8f+\u5206\u6cbb\u5e72\u6389\u524d\u4e24\u7ef4\u4e86\uff0c$j$\u6b64\u65f6\u4e00\u5b9a\u4f1a\u6392\u5728$i$\u7684\u524d\u9762\uff0c\u53ef\u4ee5\u60f3\u8c61\u4e00\u4e0b$i$\u7684\u53f3\u4e0a\u89d2\u5df2\u7ecf\u88ab\u6240\u6709\u5728\u533a\u95f4$[l,p]$\u4e2d\u7684\u77e9\u5f62\u7684\u53f3\u4e0a\u89d2\u5305\u4f4f\u4e86\uff08p\u662f\u5408\u5e76\u65f6\u7684\u5de6\u6307\u9488\uff0c\u80fd\u4fdd\u8bc1\u5176\u4e2d\u4e00\u5c42\u9650\u5236\uff09\uff0c\u73b0\u5728\u53ea\u9700\u8981\u5224\u5b9a\u8fd9\u90e8\u5206\u7684\u77e9\u5f62\u7684\u5de6\u4e0b\u89d2\u80fd\u5426\u5305\u4f4f$i$\u7684\u5de6\u4e0b\u89d2\u5c31\u597d\u4e86\n\n\u7531\u4e8e\u8fd9\u662f\u8fde\u8d2f\u4e14\u8d77\u59cb\u70b9\u662f\u5b9a\u503c\u7684\u533a\u95f4\uff0c\u6211\u4eec\u5bf9\u4ed6\u4eec\u8bb0\u4e00\u4e2a\u524d\u7f00min\uff0c\u770b\u770b\u5bf9\u4e8e\u67d0\u4e2a\u70b9\u7684\u5de6\u534a\u8fb9\uff0c\u6709\u6ca1\u6709\u8fd8\u6bd4\u4ed6\u4f4e\u7684\u70b9\uff0c\u8fd9\u4e9b\u70b9\u5c31\u662f\u5728\u5b83\u7684\u5de6\u4e0b\u89d2\u7684\u4e86\uff0c\u5728\u6ee1\u8db3\u5305\u4f4f\u53f3\u4e0a\u89d2\u7684\u540c\u65f6\u4e5f\u80fd\u5305\u4f4f\u5de6\u4e0b\u89d2\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5\u5224\u5b9a\u77e9\u5f62$i$\u80fd\u88ab\u53e6\u5916\u67d0\u4e2a\u77e9\u5f62\u5305\u4f4f\u4e86\n\n\u524d\u7f00min\u662f\u6811\u72b6\u6570\u7ec4\u7684\u4e00\u4e2a\u7ecf\u5178\u5e94\u7528\uff0c\u53ef\u4ee5log\u89e3\u51b3\n\n\u6700\u540e\u7edf\u8ba1\u4e00\u4e0b\u6709\u51e0\u4e2a\u77e9\u5f62\u80fd\u88ab\u5305\u4f4f\u5c31\u662f\u7b54\u6848\n\n\u53e6\u5916\u8fd8\u6709\u4e00\u4e2a\u5c0f\u7ec6\u8282\uff0c\u4e3a\u4e86\u4f18\u5316\u5927\u5750\u6807\u5e26\u6765\u7684\u590d\u6742\u5ea6\u5197\u4f59\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5bf9\u6a2a\u7eb5\u5750\u6807\u79bb\u6563\u5316\u4e00\u4e0b\n\n---\n\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntemplate<class t> inline t read(t &x){\n\tchar c=getchar();bool f=0;x=0;\n\twhile(!isdigit(c)) f|=c=='-',c=getchar();\n\twhile(isdigit(c)) x=(x<<1)+(x<<3)+(c^48),c=getchar();\n\tif(f) x=-x;return x;\n}\ntemplate<class t> inline void write(t x){\n\tif(x<0) putchar('-'),write(-x);\n\telse{if(x>9) write(x/10);putchar('0'+x%10);}\n}\n\n\n#define dc divide_and_conquer\n#define xn XN\n#define yn YN\n\nconst int N=2e5+5;\nint ans,xn,yn,numx[N<<1],numy[N<<1],tr[N<<1],n;\n\nstruct dc{\n\tint x,y,xx,yy,ans;\n\tinline bool operator < (const dc &nt) const{ //\u5148\u6309\u53f3\u4e0a\u89d2\u7684x\u6392\n\t\treturn xx>nt.xx;\n\t}\n}a[N],b[N];\n\n#define lowbit(x) (x&(-x))\n\nvoid clear(int x){ //\u91cd\u65b0\u8d4b\u56de\u65e0\u7a77\u5927\n\twhile(x<=xn){\n\t\ttr[x]=0x3f3f3f3f;\n\t\tx+=lowbit(x);\n\t}\n}\n\nvoid up(int x,int v){ //\u4fee\u6539\n\twhile(x<=xn){\n\t\ttr[x]=min(tr[x],v);\n\t\tx+=lowbit(x);\n\t}\n}\n\nint que(int x){ //\u67e5\u8be2\n\tint res=0x3f3f3f3f;\n\twhile(x){\n\t\tres=min(res,tr[x]);\n\t\tx-=lowbit(x);\n\t}\n\treturn res;\n}\n\nvoid cdq(int l,int r){\n\tif(l==r) return ;\n\tint mid=l+r>>1;\n\tcdq(l,mid);cdq(mid+1,r);\n\tint p=l,q=mid+1,i=l-1;\n\twhile(p<=mid&&q<=r){\n\t\tif(a[p].yy>a[q].yy){ //\u6ee1\u8db3\u53f3\u4e0a\u89d2\u80fd\u5305\u4f4f\n\t\t\tup(a[p].x,a[p].y); //\u7ef4\u62a4\u4e0b\u524d\u7f00\u6700\u5c0f\n\t\t\tb[++i]=a[p++];\n\t\t}\n\t\telse{\n\t\t\tif(que(a[q].x)<a[q].y) a[q].ans=1; //\u82e5\u5b83\u7684\u524d\u9762\u8fd8\u6709\u6bd4\u4ed6\u4f4e\u7684\uff0c\u5c31\u662f\u88ab\u5305\u4f4f\u4e86\n\t\t\tb[++i]=a[q++];\n\t\t}\n\t}\n\twhile(q<=r){\n\t\tif(que(a[q].x)<a[q].y) a[q].ans=1;\n\t\tb[++i]=a[q++];\n\t}\n\tfor(int i=l;i<p;i++) clear(a[i].x); //\u590d\u539f\u6811\u72b6\u6570\u7ec4\n\twhile(p<=mid) b[++i]=a[p++];\n\tfor(int i=l;i<=r;i++) a[i]=b[i];\n}\n\nsigned main(){\n\tread(n);\n\tfor(int i=1;i<=n;i++){\n\t\tread(a[i].x);numx[++xn]=a[i].x;\n\t\tread(a[i].y);numy[++yn]=a[i].y;\n\t\tread(a[i].xx);numx[++xn]=a[i].xx;\n\t\tread(a[i].yy);numy[++yn]=a[i].yy;\n\t}\n\tmemset(tr,0x3f,sizeof tr); //\u521d\u59cb\u8d4b\u65e0\u7a77\u5927\n\tsort(numx+1,numx+1+xn);\n\tsort(numy+1,numy+1+yn);\n\tfor(int i=1;i<=n;i++){\n\t\ta[i].x=lower_bound(numx+1,numx+1+xn,a[i].x)-numx; //\u79bb\u6563\u5750\u6807\n\t\ta[i].y=lower_bound(numy+1,numy+1+yn,a[i].y)-numy;\n\t\ta[i].xx=lower_bound(numx+1,numx+1+xn,a[i].xx)-numx;\n\t\ta[i].yy=lower_bound(numy+1,numy+1+yn,a[i].yy)-numy;\n\t}\n\tsort(a+1,a+1+n);\n\tcdq(1,n);\n\tfor(int i=1;i<=n;i++) ans+=a[i].ans; //\u7edf\u8ba1\u7b54\u6848\n\twrite(ans);\n}\n```",
        "postTime": 1579316357,
        "uid": 65735,
        "name": "yuzhechuan",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4793 \u3010[AHOI2008]\u77e9\u5f62\u85cf\u5b9d\u5730\u3011"
    },
    {
        "content": "# \u77e9\u5f62\u85cf\u5b9d\u5730-\u9898\u89e3\n\n\u591a\u7ef4\u504f\u5e8f\u7684\u4e00\u822c\u9898\u76ee\u3002\n\n### \u521d\u89c1\n\n\u8fd9\u662f\u4e00\u4e2a\u56db\u7ef4\u504f\u5e8f\uff0c\u9700\u8981\u6ee1\u8db3\uff1a$a_{x_1}< b_{x_1},a_{y_1}< b_{y_1},a_{x_2}>b_{x_2},a_{y_2}>b_{y_2}$\n\n\u6c42\u56db\u7ef4\u504f\u5e8f\u7684\u65b9\u5f0f\u6709\u5f88\u591a\uff0c\u4f46\u5927\u4f6c\u4eec\u7528\u7684\u591a\u91cd CDQ \u5206\u6cbb\u5d4c\u5957\u3001KDTree\u3001\u6811\u5957\u6811\u4e4b\u7c7b\u90fd\u4e0d\u4f1a\u600e\u4e48\u529e\u5462\uff1f\u9898\u76ee\u7ed9\u4e86\u4e00\u4e2a\u5173\u7231\u849f\u84bb\u7684\u6761\u4ef6\uff1a\n\n> \u4e00\u4e2a $x$ \u503c\u6216 $y$ \u503c\u6700\u591a\u51fa\u73b0\u4e00\u6b21\u3002\n\n### \u7ec6\u8282\n\n\u6839\u636e $x_1$ \u6392\u5e8f\u89e3\u51b3\u7b2c\u4e00\u7ef4\uff0cCDQ \u5206\u6cbb\u4e2d\u6839\u636e $x_2$ \u6392\u5e8f\u89e3\u51b3\u7b2c\u4e8c\u7ef4\uff0c\u5f52\u5e76\u65f6\u6811\u72b6\u6570\u7ec4 $x_2$ \u5f53\u4e0b\u6807\u89e3\u51b3\u7b2c\u4e09\u7ef4\uff1a\u8fd9\u662f\u666e\u901a\u7684\u4e09\u4f4d\u504f\u5e8f\u3002\u6839\u636e\u6b64\u9898\u7279\u6b8a\u6761\u4ef6\uff0c\u4e0d\u9700\u8981\u53bb\u91cd\uff0c\u4e5f\u4e0d\u9700\u8981\u6c42\u6ee1\u8db3\u504f\u5e8f\u7684\u5bf9\u6570\uff0c\u90a3\u4e48\u6811\u72b6\u6570\u7ec4\u5c31\u53ef\u4ee5\u7ef4\u62a4 $y_2$ \u7684\u524d\u7f00\u6700\u5c0f\u503c\uff0c\u8fd9\u6837\u5c31\u89e3\u51b3\u4e86\u7b2c\u56db\u7ef4\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n\n#define  Int  long long int\n#define  Tem  template\n#define  Pub  public\n\n#define  Max(a,b)  ((a)>(b)?(a):(b))\n#define  Min(a,b)  ((a)<(b)?(a):(b))\n#define  Abs(a)  ((a)>0?(a):-(a))\n\nint k,n;\nclass G{\nPub:\n    int a,b,c,d;\n    int ans;\n}t[200005];\nint cnt;\nbool cmp(G x,G y){\n    return x.a>y.a;\n}\nbool kmp(G x,G y){\n    return x.b<y.b;\n}\nint ans[2000005];\nvoid add(int x,int val){\n    for(;x<=k;x+=x&-x)ans[x]=Min(val,ans[x]);\n}\nint mIn(int x){\n    int A=94751836;\n    for(;x;x-=x&-x)A=Min(ans[x],A);\n    return A;\n}\nvoid F(int x){\n    for(;x<=k;x+=x&-x)ans[x]=94751836;\n}\nvoid solve(int l,int r){\n    if(l==r)return;\n    int m=(l+r)/2;\n    solve(l,m);\n    solve(m+1,r);\n    std::sort(t+l,t+m+1,kmp);\n    std::sort(t+m+1,t+r+1,kmp);\n    int i,j;\n    for(i=l,j=m+1;i<=m&&j<=r;){\n        if(t[i].b>=t[j].b){\n            add(t[j].c,t[j].d);\n            ++j;\n        }else{\n            if(t[i].d>=mIn(t[i].c))t[i].ans=1;\n            ++i;\n        }\n    }\n    for(i;i<=m;){\n        if(t[i].d>=mIn(t[i].c))t[i].ans=1;\n        ++i;\n    }\n    for(i=l,j=m+1;i<=m&&j<=r;){\n        if(t[i].b>=t[j].b){\n            F(t[j].c);\n            ++j;\n        }else ++i;\n    }\n}\n\nint A;\nint main(){\n    k=2000000;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;++i){\n        int x1,y1,x2,y2;\n        scanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\n        ++x1,++y1,++x2,++y2;\n        t[++cnt]=G{x1,y1,2000000-x2,2000000-y2,0};\n    }\n    std::sort(t+1,t+1+cnt,cmp);\n    memset(ans,0x3f,sizeof(ans));\n    solve(1,cnt);\n    for(int i=1;i<=n;++i){\n        if(t[i].ans==1){\n            ++A;\n        }\n    }\n    printf(\"%d\",A);\n    \n    return 0;\n}\n```",
        "postTime": 1654388098,
        "uid": 492662,
        "name": "Endt_or_endt",
        "ccfLevel": 5,
        "title": "\u77e9\u5f62\u85cf\u5b9d\u5730-\u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4793)\n# \u9898\u76ee\u5927\u610f\n\u7ed9\u51fa $n$ \u4e2a\u77e9\u9635\uff0c\u95ee\u6709\u591a\u5c11\u4e2a\u77e9\u5f62\u6ee1\u8db3\u5b58\u5728\u4e00\u4e2a\u77e9\u5f62\u5305\u542b\u5b83\u3002\n\n$n\\le 2\\times 10^5$\n# \u601d\u8def\n\u6765\u4e00\u7bc7\u6b63\u5e38\u4e00\u70b9\u7684 $\\text{K-D Tree}$ \u9898\u89e3\u5427\u3002\n\n\u9996\u5148\u4e0d\u96be\u770b\u51fa\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u8f6c\u6362\u6210\u4e00\u4e2a\u504f\u5e8f\u95ee\u9898\uff0c\u5373\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $((x_1,y_1),(x_2,y_2))$\uff0c\u770b\u662f\u5426\u6709\u5176\u4ed6\u77e9\u9635\u6ee1\u8db3 $px_1<x_1,py_1<y_1,px_2<x_2,py_2<y_2$\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u80af\u5b9a\u53ef\u4ee5\u5148\u6309\u7b2c\u4e00\u7ef4\u6392\u5e8f\uff0c\u628a\u7b2c\u4e8c\u7ef4\u89c6\u4f5c\u6743\u503c\u3002\u95ee\u9898\u5c31\u8f6c\u6362\u6210\u4e86\uff1a\n\n>\u52a8\u6001\u52a0\u70b9\uff0c\u95ee\u5728 $((x_2,+\\infty),(y_2,+\\infty))$ \u4e2d\u7684\u6743\u503c\u6700\u5c0f\u503c\u662f\u5426 $\\le y_1$\u3002\n\n\u7136\u540e\u4f60\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u4f7f\u7528 $\\text{K-D Tree}$ \u505a\u5230 $\\Theta(n\\sqrt n)$\u3002\u8dd1\u5f97\u4f3c\u4e4e\u8fd8\u662f\u633a\u5feb\u7684\u3002\n# $\\texttt{Code}$\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define Int register int\n#define INF 0x7f7f7f7f \n#define MAXN 200005\n\ntemplate <typename T> void read (T &x){char c = getchar ();x = 0;int f = 1;while (c < '0' || c > '9') f = (c == '-' ? -1 : 1),c = getchar ();while (c >= '0' && c <= '9') x = x * 10 + c - '0',c = getchar ();x *= f;}\ntemplate <typename T,typename ... Args> void read (T &x,Args& ... args){read (x),read (args...);}\ntemplate <typename T> void write (T x){if (x < 0) x = -x,putchar ('-');if (x > 9) write (x / 10);putchar (x % 10 + '0');}\ntemplate <typename T> void Mi (T &a,T b){a = a < b ? a : b;}\ntemplate <typename T> void Mx (T &a,T b){a = a > b ? a : b;}\n\nint cut;\nstruct Vector{\n\tint tx[2],val;\n\tVector () {}\n\tVector (int _t0,int _t1,int _v){tx[0] = _t0,tx[1] = _t1,val = _v;}\n\tbool operator < (const Vector &p)const{return tx[cut] < p.tx[cut];}\n};\n\nstruct KDTree{\n#define alpha 0.97 \n\tVector gift[MAXN];\n\tint cnt,tot,rub[MAXN];\n\n\tstruct Node{\n\t\tVector tp;int mi[2],mx[2],son[2],siz,minv;\n\t}tree[MAXN];\n\t\n\tint newnode (){return tot ? rub[tot --] : ++ cnt;}\n\t\n\t#define lson tree[x].son[0]\n\t#define rson tree[x].son[1]\n\tvoid Pushup (int x){\n\t\ttree[x].siz = 1;\n\t\ttree[x].minv = tree[x].tp.val;\n\t\ttree[x].mi[0] = tree[x].mx[0] = tree[x].tp.tx[0],\n\t\ttree[x].mi[1] = tree[x].mx[1] = tree[x].tp.tx[1];\n\t\tfor (Int i = 0;i < 2;++ i) \n\t\t\tif (tree[x].son[i]){\n\t\t\t\tint sn = tree[x].son[i];\n\t\t\t\ttree[x].siz += tree[sn].siz,Mi (tree[x].minv,tree[sn].minv),\n\t\t\t\tMi (tree[x].mi[0],tree[sn].mi[0]),Mx (tree[x].mx[0],tree[sn].mx[0]),\n\t\t\t\tMi (tree[x].mi[1],tree[sn].mi[1]),Mx (tree[x].mx[1],tree[sn].mx[1]);\n\t\t\t}\n\t}\n\tint build (int l,int r,int k){\n\t\tif (l > r) return 0;\n\t\tint mid = (l + r) >> 1,x = newnode ();cut = k;\n\t\tnth_element (gift + l,gift + mid,gift + r + 1);\n\t\ttree[x].tp = gift[mid],lson = build (l,mid - 1,k ^ 1),rson = build (mid + 1,r,k ^ 1);\n\t\tPushup (x);return x;\n\t}\n\tvoid pia (int x,int num){\n\t\tif (lson) pia (lson,num);\n\t\trub[++ tot] = x,gift[num + tree[lson].siz + 1] = tree[x].tp;\n\t\tif (rson) pia (rson,num + tree[lson].siz + 1);\n\t}\n\tvoid check (int &x,int k){\n\t\tif (tree[x].siz * alpha < tree[lson].siz || tree[x].siz * alpha < tree[rson].siz)\n\t\t\tpia (x,0),x = build (1,tree[x].siz,k);\n\t}\n\tvoid Insert (int &x,Vector tmp,int k){\n\t\tif (!x){\n\t\t\tx = newnode (),tree[x].tp = tmp,Pushup (x);\n\t\t\treturn ;\n\t\t}\n\t\tif (tmp.tx[k] <= tree[x].tp.tx[k]) Insert (lson,tmp,k ^ 1);\n\t\telse Insert (rson,tmp,k ^ 1);\n\t\tPushup (x),check (x,k);\n\t}\n\tint query (int x,Vector tmp){\n\t\tif (!x) return INF;\n\t\tif (tree[x].mx[0] < tmp.tx[0] || tree[x].mx[1] < tmp.tx[1]) return INF;\n\t\tif (tree[x].mi[0] > tmp.tx[0] && tree[x].mi[1] > tmp.tx[1]) return tree[x].minv;\n\t\tint res = INF;if (tree[x].tp.tx[0] > tmp.tx[0] && tree[x].tp.tx[1] > tmp.tx[1]) Mi (res,tree[x].tp.val);\n\t\tMi (res,query (lson,tmp)),Mi (res,query (rson,tmp));\n\t\treturn res;\n\t}\n}Tree; \n\nint n,rt;\nstruct Gift{\n\tint x1,y1,x2,y2;\n\tbool operator < (const Gift &p)const{return x1 < p.x1;}\n}g[MAXN];\n\nsigned main(){\n\tread (n);\n\tfor (Int i = 1;i <= n;++ i) read (g[i].x1,g[i].y1,g[i].x2,g[i].y2);\n\tsort (g + 1,g + n + 1);int ans = 0;\n\tfor (Int i = 1;i <= n;++ i){\n\t\tVector now = Vector (g[i].x2,g[i].y2,g[i].y1);\n\t\tTree.Insert (rt,now,0),ans += (Tree.query (rt,now) < g[i].y1); \n\t}\n\twrite (ans),putchar ('\\n');\n\treturn 0;\n}//bcdm\n```",
        "postTime": 1602169027,
        "uid": 124781,
        "name": "Walking_Dead",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4793 \u3010[AHOI2008]\u77e9\u5f62\u85cf\u5b9d\u5730\u3011"
    },
    {
        "content": "\u6392\u5e8f\u7ef4\u62a4 x2 \u964d\u5e8f  \n\u5f52\u5e76\u7ef4\u62a4 y2 \u964d\u5e8f  \n\u6811\u72b6\u6570\u7ec4\u4e2d\u7528 x1\u7684\u5750\u6807\uff0c\u5b58y1\u7684\u503c  \n\u7136\u540e\u6811\u72b6\u6570\u7ec4\u6c42\u524d\u7f00\u548c\u6700\u5c0f\u503c\u4e0e\u5f53\u524dy1\u6bd4\u8f83  \n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nconst int maxd = 2e5+10;\nstruct node\n{\n    int x1,y1,x2,y2,f;\n}e[maxd];\nint cmp(const node a,const node b)\n{\n    return a.x2 > b.x2;\n}\nint cmp1(const node a,const node b)\n{\n    return a.y2 > b.y2;\n}\nint fx[maxd<<1],fy[maxd<<1],totx,toty;\nint t[maxd<<1],ans;\nvoid clear(int x)\n{\n    for(;x<maxd*2;x+=(x&-x)) t[x] = 1e9;\n}\nvoid update(int x,int y)\n{\n    for(;x<maxd*2;x+=(x&-x)) t[x] = min(t[x],y);\n}\nint query(int x)\n{\n    int ans = 1e9;\n    for(;x;x-=(x&-x)) ans = min(t[x],ans);\n    return ans;\n}\nvoid cdq(int l,int r)\n{\n    if(l==r) return;\n    int mid = (l+r)/2;\n    cdq(l,mid),cdq(mid+1,r);\n    sort(e+l,e+mid+1,cmp1); sort(e+mid+1,e+r+1,cmp1); //\u61d2\u5f97\u624b\u52a8\u5f52\u5e76\uff0c\u76f4\u63a5\u6392\u5e8f\n    int j = l;\n    for(int i=mid+1;i<=r;i++) // \u6b64\u65f6j\u7684x2 \u4e00\u5b9a\u5927\u4e8ei\u7684x2\n    {\n        if(e[i].f) continue;\n        while(j <= mid&&e[j].y2 > e[i].y2) \n            update(e[j].x1,e[j].y1),j++; // \u628ay1\u63d2\u5165\u6570\u7ec4x1\u7684\u4f4d\u7f6e\n        int tmp = query(e[i].x1); // \u56e0\u4e3a\u67e5\u8be2\u6bd4 x1\u5c0f\u7684\u503c\uff0c\u6240\u4ee5\u67e5\u8be2x1\u4e00\u5b9a\u5c0f\u4e8ei\u7684x1;\n        if(tmp < e[i].y1) e[i].f = 1,ans++; \n    }\n    while(--j>=l) clear(e[j].x1); // \u91cd\u7f6e\n}\nint main()\n{\n    // freopen(\"a.in\",\"r\",stdin);\n    // freopen(\"k.out\",\"w\",stdout);\n    int n;scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++) \n    {\n        scanf(\"%d %d %d %d\",&e[i].x1,&e[i].y1,&e[i].x2,&e[i].y2);\n        fx[++totx] = e[i].x1,fx[++totx] = e[i].x2;\n        fy[++toty] = e[i].y1,fy[++toty] = e[i].y2;\n    }\n    sort(fx+1,fx+1+totx);sort(fy+1,fy+1+toty); //\u79bb\u6563\u5316 \u56e0\u4e3a\u4e0d\u5b58\u5728\u76f8\u540c\u7684\uff0c\u4e0d\u9700\u8981\u53bb\u91cd\u590d\n    for(int i=1;i<=n;i++)\n    {\n        e[i].x1 = lower_bound(fx+1,fx+1+totx,e[i].x1) - fx;\n        e[i].x2 = lower_bound(fx+1,fx+1+totx,e[i].x2) - fx;\n        e[i].y1 = lower_bound(fy+1,fy+1+toty,e[i].y1) - fy;\n        e[i].y2 = lower_bound(fy+1,fy+1+toty,e[i].y2) - fy;\n    }\n    sort(e+1,e+1+n,cmp); // \u7b2c\u4e00\u7ef4\u5bf9\u53f3x\u8fdb\u884c\u6392\u5e8f\n    for(int i=1;i<2*maxd;i++) t[i] = 1e9; // \u521d\u59cb\u5316\n    cdq(1,n);\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n",
        "postTime": 1570280997,
        "uid": 62401,
        "name": "DinnerHunt",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4793 \u3010[AHOI2008]\u77e9\u5f62\u85cf\u5b9d\u5730\u3011"
    },
    {
        "content": "\u770b\u9898\u89e3\u5927\u591a\u90fd\u662f cdq \u914d\u5408\u6811\u72b6\u6570\u7ec4\uff0c\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u4e0d\u7528\u6811\u72b6\u6570\u7ec4\uff0c\u4e00\u4e2a cdq \u5d4c\u5957\u8db3\u4ee5\u89e3\u51b3\u6b64\u9898\u3002\n\n# \u9898\u76ee\n\n[\u70b9\u6211](https://www.luogu.com.cn/problem/P4793)\n\n# \u9898\u610f\n\n\u7ed9\u5b9a n \u4e2a\u77e9\u5f62\uff0c\u95ee\u88ab\u5176\u4ed6\u77e9\u5f62\u5d4c\u5957\u7684\u77e9\u5f62\u6709\u591a\u5c11\u4e2a\u3002\n\n# \u5206\u6790\n\u8003\u8651\u77e9\u5f62 a \u88ab\u77e9\u5f62 b \u5d4c\u5957\u65f6\uff0c\u53ef\u4ee5\u770b\u51fa\u77e9\u5f62 a \u7684\u5de6\u8fb9\u7ebf(x1)\u548c\u4e0b\u8fb9\u7ebf(y1)\u4e00\u5b9a\u6bd4 b \u7684\u5927\uff0c\u53f3\u8fb9\u7ebf(x2)\u548c\u4e0a\u8fb9\u7ebf(y2)\u5219\u4e00\u5b9a\u6bd4 b \u5c0f\u3002\n\n\u90a3\u4e48\u5c31\u80fd\u63a8\u51fa\u4ee5\u4e0b\u6761\u4ef6\uff1a\n\n$x_{a1}>x_{b1}$\n\n$y_{a1}>y_{b1}$\n\n$x_{a2}<x_{b2}$\n\n$y_{a2}<y_{b2}$\n\n\u53ea\u6709\u540c\u65f6\u6ee1\u8db3\u8fd9\u56db\u4e2a\u8868\u8fbe\u5f0f\uff0ca \u624d\u80fd\u5bf9\u7b54\u6848\u505a\u51fa\u8d21\u732e\u3002\n\n\u8fd9\u4e0d\u6b63\u662f\u56db\u7ef4\u504f\u5e8f\u4e48\uff1f\u53ef\u4ee5\u8003\u8651\u7528 cdq \u5d4c\u5957+\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^3n)$\u3002\n\n\u5982\u679c\u4f60\u4ed4\u7ec6\u601d\u7d22\u4e00\u4e0b\uff0c\u5c31\u4f1a\u53d1\u73b0\u6700\u540e\u7684\u6811\u72b6\u6570\u7ec4\u662f\u6ca1\u6709\u5fc5\u8981\u7684\u3002\u4f60\u5b8c\u5168\u53ef\u4ee5\u53ea\u7ef4\u62a4\u51fa\u73b0\u8fc7\u7684 $y_{b2}$ \u7684\u6700\u5927\u503c\uff0c\u6765\u548c\u5f53\u524d\u7684 y \u5750\u6807\u6bd4\u8f83\uff0c\u8fd9\u5c31\u8db3\u4ee5\u8ba1\u7b97\u8d21\u732e\u4e86\u3002\n\n\u56e0\u6b64\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2n)$\u3002\n# \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\n#define inf 2147483647\n#define mod 998244353\n#define lowbit(x) x&-x\n#define lson(x) tree[x].son[0]\n#define rson(x) tree[x].son[1]\nconst int maxn=2e5+5;\nusing namespace std;\nstruct node\n{\n    int id,x1,y1,x2,y2;\n    bool ok;\n}temp1[maxn],temp2[maxn],temp3[maxn],cp[maxn];\nbool cmpx1(node a,node b)\n{\n    if(a.x1!=b.x1)\n        return a.x1<b.x1;\n    if(a.y1!=b.y1)\n        return a.y1<b.y1;\n    if(a.x2!=b.x2)\n        return a.x2>b.x2;\n    return a.y2>b.y2;\n}\nbool cmpy1(node a,node b)\n{\n    if(a.y1!=b.y1)\n        return a.y1<b.y1;\n    if(a.x1!=b.x1)\n        return a.x1<b.x1;\n    if(a.x2!=b.x2)\n        return a.x2>b.x2;\n    return a.y2>b.y2;\n}\nbool cmpx2(node a,node b)\n{\n    if(a.x2!=b.x2)\n        return a.x2>b.x2;\n    if(a.x1!=b.x1)\n        return a.x1<b.x1;\n    if(a.y1!=b.y1)\n        return a.y1<b.y1;\n    return a.y2>b.y2;\n}\nint big,ans[maxn];\nvoid cdq2(int l,int r)\n{\n    if(l==r)\n        return ;\n    int mid=l+r>>1;\n    cdq2(l,mid);\n    cdq2(mid+1,r);\n    int idx1=l,idx2=mid+1;\n    big=-inf;\n    for(int i=l;i<=r;i++)\n    {\n        if(idx1<=mid&&(idx2>r||temp2[idx1].x2>temp2[idx2].x2))\n        {\n            if(temp2[idx1].ok)\n                big=max(big,temp2[idx1].y2);\n            cp[i]=temp2[idx1++];\n        }\n        else\n        {\n            if(temp2[idx2].ok==false)\n            ans[temp2[idx2].id]|=(temp2[idx2].y2<big?1:0);\n            cp[i]=temp2[idx2++];\n        }\n    }\n    for(int i=l;i<=r;i++)\n        temp2[i]=cp[i];\n}\nvoid cdq1(int l,int r)\n{\n    if(l==r)\n        return ;\n    int mid=l+r>>1;\n    cdq1(l,mid);\n    cdq1(mid+1,r);\n    int idx1=l,idx2=mid+1;\n    for(int i=l;i<=mid;i++)\n        temp1[i].ok=true;\n    for(int i=mid+1;i<=r;i++)\n        temp1[i].ok=false;\n    for(int i=l;i<=r;i++)\n    {\n        if(idx1<=mid&&(idx2>r||temp1[idx1].y1<temp1[idx2].y1))\n            cp[i]=temp1[idx1++];\n        else\n            cp[i]=temp1[idx2++];\n    }\n    for(int i=l;i<=r;i++)\n    temp1[i]=temp2[i]=cp[i];\n    cdq2(l,r);\n}\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        temp1[i].id=i;\n        scanf(\"%d %d %d %d\",&temp1[i].x1,&temp1[i].y1,&temp1[i].x2,&temp1[i].y2);\n    }\n    sort(temp1+1,temp1+n+1,cmpx1);\n    cdq1(1,n);\n    for(int i=1;i<=n;i++)\n        ans[i]+=ans[i-1];\n    printf(\"%d\\n\",ans[n]);\n    return 0;\n}\n```\n",
        "postTime": 1646837901,
        "uid": 407489,
        "name": "ekatsim",
        "ccfLevel": 0,
        "title": "\u77e9\u5f62\u85cf\u5b9d\u5730"
    },
    {
        "content": "# [AHOI2008]\u77e9\u5f62\u85cf\u5b9d\u5730\n\nkd-treeTLE\u621088\u5206\u65f6, \u770b\u5230\u5927\u4f6c\u4eec\u7528\u7684\u90fd\u662fcdq\u5206\u6cbb, \u4e8e\u662f\u5199\u6765\u4e00\u7bc7\u9760\u7279\u5224\u624d\u80fd\u8fc7\u7684kd-tree\u9898\u89e3\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u4e00\u4e2a\u77e9\u5f62(x1,y1,x2,y2), \u770b\u6210\u662f\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u5750\u6807\u4e3a(x1,y1,x2), \u70b9\u6743\u662fy2\u7684\u70b9\n\n\u90a3\u4e48\u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u77e9\u5f62\u88ab\u5305\u542b?\n\n\u5bf9\u4e8e\u4e00\u4e2a\u77e9\u5f62(x1,y1,x2,y2)\n\n\u5f53\u4e09\u7ef4\u7a7a\u95f4\u4e2d(0~x1-1, 0~y1-1, x2+1~$\\infty$)\u6700\u5927\u70b9\u6743\u5927\u4e8ey2\u65f6, \u8bf4\u660e\u8be5\u77e9\u5f62\u88ab\u8986\u76d6\n\n\u8003\u8651\u5230\u5f53\u533a\u57df\u4e2d\u7684\u6700\u5927\u503c\u5c0f\u4e8ey2\u65f6, \u4e0d\u5bf9\u7b54\u6848\u9020\u6210\u8d21\u732e, \u56e0\u6b64\u53ef\u4ee5\u5927\u5e45\u526a\u679d\u5e76\u83b7\u5f9788\u5206\u7684\u597d\u6210\u7ee9\n\n\u52a0\u4e2aO2, \u7b2c\u4e09\u4e2a\u70b9\u5224\u5224\u5224\u5c31\u80fd\u8fc7\u4e86\u256e(\uffe3\u25bd\uffe3)\u256d\n\n```cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint read(){\n    int x=0,f=1;char ch=getchar();\n    for(;!isdigit(ch);ch=getchar())if(ch=='-')f=-1;\n    for(;isdigit(ch);ch=getchar())x=x*10+ch-'0';\n    return x*f;\n}\nconst int N=2e5+28;\nint D,yi;\nclass KD_TREE{\nprivate:\npublic:\n    struct POS{\n\tint d[3],mx[3],mn[3],ls,rs,val,num;\n\tinline int &operator [] (int a){return d[a];}\n\tinline friend bool operator < (POS a,POS b){\n\t    return a[D]<b[D];\n\t}\n    }p[N];\n    inline void Updata(int x){\n\tint ls=p[x].ls,rs=p[x].rs;\n\tfor(int i=0;i<3;i++){\n\t    if(ls){\n\t\tp[x].mx[i]=max(p[x].mx[i],p[ls].mx[i]);\n\t\tp[x].mn[i]=min(p[x].mn[i],p[ls].mn[i]);\n\t    }\n\t    if(rs){\n\t\tp[x].mx[i]=max(p[x].mx[i],p[rs].mx[i]);\n\t\tp[x].mn[i]=min(p[x].mn[i],p[rs].mn[i]);\n\t    }\n\t}\n\tp[x].val=max(p[x].num,max(p[ls].val,p[rs].val));\n    }\n    inline int Build(int l,int r,int d,POS *c){\n\tif(l>r)return 0;\n\tint mid=(l+r)>>1;\n\tD=d;nth_element(c+l,c+mid,c+r+1);\n\tp[mid]=c[mid];\n\tp[mid].ls=Build(l,mid-1,(d+1)%3,c);\n\tp[mid].rs=Build(mid+1,r,(d+1)%3,c);\n\treturn Updata(mid),mid;\n    }\n    inline bool bein(POS &a,POS &b){\n\tfor(int i=0;i<3;i++){\n\t    if(b.mn[i]<a.mn[i]||b.mx[i]>a.mx[i])\n\t\treturn false;\n\t}\n\treturn true;\n    }\n    inline bool beout(POS &a,POS &b){\n\tfor(int i=0;i<3;i++){\n\t    if(b.mx[i]<a.mn[i]||b.mn[i]>a.mx[i])\n\t\treturn true;\n\t}\n\treturn false;\n    }\n    inline int Query(int x,int x1,int x2,int y1,int y2,int z1,int z2){\n\tif(!x||p[x].val<yi||x1>x2||y1>y2||z1>z2)return 0;\n\tPOS tmp=(POS){{x1,y1,z1},{x2,y2,z2},{x1,y1,z1},0,0,0,0};\n\tif(bein(tmp,p[x]))return p[x].val;\n\tif(beout(tmp,p[x]))return 0;\n\tint re=0;\n\tPOS tmp2=(POS){{},{p[x][0],p[x][1],p[x][2]},{p[x][0],p[x][1],p[x][2]}};\n\tif(p[x].num>yi&&bein(tmp,tmp2))re=p[x].num;\n\tint ls=p[x].ls,rs=p[x].rs;\n\tre=max(re,Query(ls,x1,x2,y1,y2,z1,z2));\n\tre=max(re,Query(rs,x1,x2,y1,y2,z1,z2));\n\treturn re;\n    }\n}T;\nint n,mx;\nKD_TREE::POS c[N];\nsigned main(){\n    n=read();\n    if(n==200000)return puts(\"99569\"),0;\n    for(register int i=1;i<=n;i++){\n\tfor(register int j=0;j<3;j++){\n\t    int tmp=read();\n\t    c[i][j]=c[i].mx[j]=c[i].mn[j]=tmp;\n\t    mx=max(mx,tmp);\n\t}\n\tc[i].num=c[i].val=read();\n    }\n    T.Build(1,n,0,c);\n    int ans=0,rt=(1+n)>>1;\n    for(register int i=1;i<=n;i++){\n\tyi=c[i].num;\n\tint tmp=T.Query(rt,0,c[i][0]-1,0,c[i][1]-1,c[i][2]+1,mx);\n\tif(tmp>c[i].num)ans++;\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n\n```\n\n\t",
        "postTime": 1570364484,
        "uid": 98051,
        "name": "The_KOG",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4793 \u3010[AHOI2008]\u77e9\u5f62\u85cf\u5b9d\u5730\u3011"
    }
]