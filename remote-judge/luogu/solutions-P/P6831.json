[
    {
        "content": "\u5b89\u5229\uff1a[IOI2020\u9898\u89e3-\u6d1b\u8c37\u535a\u5ba2](https://www.luogu.com.cn/blog/s-r-f/ioi2020-ti-xie) [IOI2020\u9898\u89e3-cnblogs](https://www.cnblogs.com/s-r-f/p/13697373.html)\n\n---\n\n[\u9898\u76ee\u94fe\u63a5-LOJ](https://loj.ac/problem/3366) [\u9898\u76ee\u94fe\u63a5-\u6d1b\u8c37](https://www.luogu.com.cn/problem/P6831)\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u5982\u4f55\u6c42\u51fa\u6700\u5927\u503c\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u8fd9\u4e2a\u62bd\u5956\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5de5\u4f5c\u4eba\u5458\u5fc5\u7136\u4f1a\u53d6\u4e2d\u4f4d\u6570\u6765\u6700\u5c0f\u5316\u5f53\u524d\u8f6e\u6b21\u7684\u5956\u52b1\u3002\n\n\u56e0\u4e3an\u662f\u5076\u6570\uff0c\u4e0d\u96be\u53d1\u73b0\u6211\u4eec\u80fd\u83b7\u5f97\u7684\u5956\u52b1\u4e3a\uff1a\n\n\u8bbe\u5f53\u524d\u8f6e\u6b21\u4f7f\u7528\u7684\u5956\u5238\u4e0a\u7684\u6570\u503c\u4e3a $a_{1,2...n}$ \u5e76\u4e14\u5df2\u7ecf\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u90a3\u4e48\n\n$\\large ans=\\sum\\limits_{\\frac{n}{2}+1\\leq i\\leq n} a_i -\\sum\\limits_{1\\leq i\\leq \\frac{n}{2}} a_i$\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6709 $\\large \\frac{n}{2}$ \u4e2a\u6570\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a $a_i$ ,\u53e6 $\\large \\frac{n}{2}$ \u4e2a\u6570\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a $-a_i$ , **\u5e76\u4e14\u6240\u6709\u8d1f\u8d21\u732e\u7684\u6570\u5b57\u90fd\u4e0d\u5927\u4e8e\u6b63\u8d21\u732e\u7684\u6570\u5b57\u3002**\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u7ecf\u8fc7 $k$ \u6b21\u8fc7\u7a0b\u83b7\u5f97\u7684\u6700\u5927\u503c\uff0c\u76f8\u5f53\u4e8e\u6211\u4eec\u5728 $n$ \u79cd\u989c\u8272\u7684\u5956\u5238\u4e0a\u7684\u6570\u5b57\u4e2d\uff0c\u6bcf\u79cd\u989c\u8272\u9009\u53d6 $k$ \u4e2a\u6570\u5b57\uff0c\u5e76\u5728\u5176\u4e2d\u9009 $\\large \\frac{nk}{2}$ \u4e2a\u6570\u5b57\uff0c\u4f7f\u5176\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a\u6b63\u6570 \uff0c\u4ee4\u53e6\u5916\u4e00\u534a\u7684\u6570\u5b57\u7684\u8d21\u732e\u4e3a\u8d1f\u6570 \uff0c\u7136\u540e\u6c42\u548c\u5373\u4e3a\u7b54\u6848\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u5982\u679c\u6211\u4eec\u83b7\u5f97\u4e86\u8fd9\u4e2a\u53d6\u6570\u95ee\u9898\u7684\u6700\u4f18\u89e3\uff0c\u90a3\u4e48**\u5fc5\u7136\u5b58\u5728\u4e00\u79cd\u65b9\u6848\u628a\u8fd9 $nk$ \u4e2a\u6570\u5206\u6210 $k$ \u7ec4\u4f7f\u5f97\u6bcf\u7ec4\u4e2d\u6709 $n$ \u4e2a\u989c\u8272\u4e24\u4e24\u4e0d\u540c\u7684\u6570\uff0c\u4e00\u534a\u53d6\u8d1f\u8d21\u732e\uff0c\u4e00\u534a\u53d6\u6b63\u8d21\u732e\uff0c\u5e76\u4e14\u8d1f\u8d21\u732e\u7684\u6570\u90fd\u4e0d\u5927\u4e8e\u6b63\u8d21\u732e\u7684\u6570\u5b57\u3002\u5373\u6709\u5bf9\u5e94\u539f\u95ee\u9898\u7684\u5408\u6cd5\u65b9\u6848\u3002**\n\n\u8bc1\u660e\uff1a\u5982\u679c\u4e0d\u5b58\u5728\u5408\u6cd5\u65b9\u6848\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u4f55\u4e00\u79cd\u65b9\u6848\uff0c\u5fc5\u7136\u5b58\u5728\u540c\u4e00\u7ec4\u6570\u5b57\u4e2d\u6709\u4e00\u4e2a\u53d6\u8d1f\u8d21\u732e\u7684\u6570\u5927\u4e8e\u4e00\u4e2a\u53d6\u6b63\u8d21\u732e\u7684\u6570\u3002\u8fd9\u65f6\u5019\u4ea4\u6362\u4e00\u4e0b\u5b83\u4eec\u7684\u7b26\u53f7\u5c31\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a\u66f4\u4f18\u7684\u89e3\uff0c\u6240\u4ee5\u5982\u679c\u53d6\u5f97\u4e86\u6700\u4f18\u89e3\u7684\u53d6\u6570\u65b9\u6848\uff0c\u5fc5\u7136\u6709\u4e00\u4e2a\u5bf9\u5e94\u4e86\u539f\u95ee\u9898\u7684\u5408\u6cd5\u65b9\u6848\u3002\n\n\u53d6\u6570\u95ee\u9898\u7684\u8d2a\u5fc3\uff1a\u5148\u9ed8\u8ba4\u90fd\u53d6\u8d1f\u6570\uff0c\u7136\u540e\u518d\u8d2a\u5fc3\u7684\u505a $\\large \\frac{nk}{2}$ \u6b21\u628a\u8d1f\u6570\u6362\u6210\u6b63\u6570\u7684\u64cd\u4f5c\u5373\u53ef\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u5982\u4f55\u6784\u9020\u65b9\u6848\u3002\n\n\u9012\u5f52\u6784\u9020\uff0c\u8003\u8651\u4ece\u5f53\u524d\u7684 $nk$ \u4e2a\u6570\u5b57\u4e2d\u53d6\u51fa $n$ \u4e2a\u989c\u8272\u4e24\u4e24\u4e0d\u540c\u7684\u6210\u4e3a\u4e00\u7ec4\uff0c\u4fdd\u8bc1\u5b83\u5408\u6cd5\u540e\u518d\u5bf9\u5269\u4e0b\u7684 $n(k-1)$ \u4e2a\u6570\u5b57\u7ee7\u7eed\u6784\u9020\u3002\n\n\u4ece\u6bcf\u79cd\u989c\u8272\u4e2d\u53d6\u51fa\u4e00\u4e2a\u6700\u5927\u7684\u6b63\u6570\u548c\u4e00\u4e2a\u6700\u5c0f\u7684\u8d1f\u6570\u5e76\u5c06\u6b63\u6570\u548c\u8d1f\u6570\u5206\u522b\u6392\u5e8f\uff0c\u679a\u4e3e\u6b63\u6570\u548c\u8d1f\u6570\u4e4b\u95f4\u7684\u8fb9\u754c\uff0c$two-pointers$ \u7684\u540c\u65f6\u7ef4\u62a4\u53ef\u7528\u7684\u6b63/\u8d1f\u6570\u6570\u76ee\u5373\u53ef\u3002\n\n\u56e0\u4e3a\u6b63\u6570\u548c\u8d1f\u6570\u5206\u522b\u53d6\u5230\u4e86\u6700\u5927\u548c\u6700\u5c0f\uff0c\u6240\u4ee5\u5728\u6574\u4e2a\u53d6\u6570\u95ee\u9898\u6709\u5bf9\u5e94\u65b9\u6848\u7684\u65f6\u5019\u8fd9\u4e2a\u5b50\u95ee\u9898\u5fc5\u7136\u80fd\u627e\u5230\u4e00\u7ec4\u89e3\uff0c\u53ef\u4ee5\u7ee7\u7eed\u9012\u5f52\u3002\n\n\u7531\u4e8e\u9012\u5f52\u7684\u65f6\u5019**\u4fdd\u8bc1\u4e86\u9009\u6570\u65b9\u6848\u4e00\u76f4\u662f\u5f53\u524d\u7684\u6700\u4f18\u89e3**\uff0c\u6240\u4ee5\u4e00\u76f4\u90fd\u80fd\u4fdd\u8bc1\u5f53\u524d\u7684\u9009\u6570\u65b9\u6848\u6709\u4e00\u7ec4\u5bf9\u5e94\u539f\u95ee\u9898\u7684\u89e3\u3002\n\n$\\Theta(nm\\log n)$\n\ncode(LOJ\u4e0a\u901a\u8fc7):\n\n```cpp\n#include \"tickets.h\"\n#include <bits/stdc++.h>\n#define LL long long\nusing namespace std;\n\nconst int N = 1505,M = 1505;\nint n,m,k,ans[N][M],val[N][M];\nint z[N][M];\n\nLL AANS;\nnamespace CALCZ{\n\tint vv[N],nl[N],nr[N];\n\tstruct Node{\n\t\tint id,v;\n\t\tbool operator < (const Node w) const{ return v < w.v; }\n\t}tmp;\n\tpriority_queue<Node>H;\n\tinline void calcz(){\n\t\tint i,j,ll = n*k/2;\n\t\tfor (i = 0; i < n; ++i) for (j = 0; j < m; ++j) z[i][j] = 0;\n\t\tfor (i = 0; i < n; ++i) for (j = 0; j < k; ++j) z[i][j] = -1;\n\t\tfor (i = 0; i < n; ++i){\n\t\t\tnl[i] = k-1,nr[i] = m-1;\n\t\t\tvv[i] = val[i][nl[i]] + val[i][nr[i]];\n\t\t\ttmp.id = i,tmp.v = vv[i],H.push(tmp);\n\t\t}\n\t\twhile (ll--){\n\t\t\ttmp = H.top(); H.pop();\n\t\t\ti = tmp.id;\n\t\t\tz[i][nl[i]] = 0,z[i][nr[i]] = 1;\n\t\t\t--nl[i],--nr[i];\n\t\t\tif (nl[i] >= 0){\n\t\t\t\tvv[i] = val[i][nl[i]] + val[i][nr[i]];\n\t\t\t\ttmp.id = i,tmp.v = vv[i],H.push(tmp);\n\t\t\t}\n\t\t}\n\t\tfor (i = 0; i < n; ++i) for (j = 0; j < m; ++j) AANS += z[i][j] * val[i][j];\n\t}\n}\n\ninline void solve_k_1(){\n\tint i,j;\n\tfor (i = 0; i < n; ++i) for (j = 0; j < m; ++j) if (z[i][j]) ans[i][j] = 0;\n\tvector<vector<int> >a; vector<int>ret; ret.resize(m),a.clear();\n\tfor (i = 0; i < n; ++i){\n\t\tfor (j = 0; j < m; ++j) ret[j] = ans[i][j];\n\t\ta.push_back(ret);\n\t}\n\tallocate_tickets(a);\n}\nnamespace Try{\n\tint nl[N],nr[N];\n\tstruct Node{\n\t\tint id,v;\n\t\tinline bool operator < (const Node w) const{ return v < w.v; }\n\t}tz[N],tf[N]; int lz,lf;\n\tint okz[N],okf[N];\n\tint cntz,cntf,cntzf;\n\tinline void addf(int x){\n\t\tx = tf[x].id;\n\t\tif (okf[x]) return;\n\t\t++cntf,okf[x] = 1; if (okz[x]) ++cntzf;\n\t}\n\tinline void delz(int x){\n\t\tx = tz[x].id;\n\t\tif (!okz[x]) return;\n\t\t--cntz,okz[x] = 0; if (!okf[x]) --cntzf;\n\t}\n\tinline void work(){\n\t\tint i;\n\t\tstatic int Time = -1; ++Time;\n\t\tcntf = cntz = 0;\n\t\tfor (lz = lf = i = 0; i < n; ++i){\n\t\t\tokz[i] = 0,okf[i] = 0;\n\t\t\tif (nl[i] >= 0 && z[i][nl[i]] == -1){\n\t\t\t\t++lf; tf[lf].id = i,tf[lf].v = val[i][nl[i]];\n\t\t\t}\n\t\t\tif (nr[i] >= 0 && z[i][nr[i]] == 1){\n\t\t\t\t++lz; tz[lz].id = i,tz[lz].v = val[i][nr[i]]; okz[i] = 1,++cntz;\n\t\t\t}\n\t\t}\n\t\tsort(tf+1,tf+lf+1); sort(tz+1,tz+lz+1);\n\t\tint ll = 1;\n\t\tfor (i = 1; i <= lf; ++i){\n\t\t\taddf(i);\n\t\t\twhile (ll <= lz && tz[ll].v < tf[i].v) delz(ll),++ll;\n\t\t\tif (cntz + cntf - cntzf >= n && cntz >= n/2 && cntf >= n/2) break;\n\t\t}\n\t\tint nz = n/2,nf = n/2;\n\t\tfor (i = 0; i < n && (nz || nf); ++i){\n\t\t\tif (!okz[i] && !okf[i]) continue;\n\t\t\tif (!okz[i]){\n\t\t\t\tif (!nf) continue;\n\t\t\t\t--nf; --cntf; ans[i][nl[i]] = Time,--nl[i];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (!okf[i]){\n\t\t\t\tif (!nz) continue;\n\t\t\t\t--nz; --cntz; ans[i][nr[i]] = Time,--nr[i];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tif (nz && cntz <= nz){\n\t\t\t\t--nz; ans[i][nr[i]] = Time,--nr[i];\n\t\t\t\t--cntz,--cntf;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t--nf; ans[i][nl[i]] = Time,--nl[i];\n\t\t\t--cntz,--cntf;\n\t\t\tcontinue;\n\t\t}\n\t}\n\tinline void MAIN(){ for (int i = 0; i < n; ++i){ nr[i] = m-1,nl[i] = 0; while (z[i][nl[i]+1] == -1) ++nl[i]; } while (k--) work(); }\n}\n\n\nLL find_maximum(int k,vector<vector<int> >x) {\n\t::k=k;\n\tint i,j;\n\tn = x.size(),m = x[0].size();\n\tfor (i = 0; i < n; ++i) for (j = 0; j < m; ++j) ans[i][j] = -1,val[i][j] = x[i][j];\n\tCALCZ::calcz();\n\tif (k == 1){ solve_k_1(); return AANS; }\n\tTry::MAIN();\n\tvector<vector<int> >a; vector<int>ret; ret.resize(m),a.clear();\n\tfor (i = 0; i < n; ++i){\n\t\tfor (j = 0; j < m; ++j) ret[j] = ans[i][j];\n\t\ta.push_back(ret);\n\t}\n\tallocate_tickets(a);\n\treturn AANS;\n}\n```",
        "postTime": 1600514836,
        "uid": 52518,
        "name": "s_r_f",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P6831 \u3010[IOI 2020 Day1] Carnival Tickets\u3011"
    }
]