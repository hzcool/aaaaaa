[
    {
        "content": "\u770b\u89c1\u6ca1\u6709 ISAP \u7684\u9898\u89e3\uff0c\u849f\u84bb\u521a\u5b66 ISAP \u5c31\u8d21\u732e\u4e00\u4e2a\u5427\u3002\n\n### \u6b65\u5165\u6b63\u9898\n\n**1.ISAP \u7b97\u6cd5\u662f\u4ec0\u4e48\uff1f**\n\n\u662f\u4e00\u79cd\u8ba1\u7b97\u7f51\u7edc\u6d41\u7684\u9ad8\u6548\u6700\u77ed\u589e\u5e7f\u8def\u7b97\u6cd5\uff0c\u5b83\u5176\u5b9e\u662f\u4f18\u5316\u7248\u7684\u6700\u77ed\u589e\u5e7f\u8def\u7b97\u6cd5\uff0c\u6700\u77ed\u589e\u5e7f\u8def\u7b97\u6cd5\u5373 EK \u7b97\u6cd5\u3002\n\n**2.Dinic \u7b97\u6cd5\u548c ISAP \u7b97\u6cd5\u7684\u533a\u522b\uff1f**\n\nDinic \u7b97\u6cd5\u6bcf\u6b21 DFS \u540e\uff0c\u4f1a\u4ece\u6e90\u70b9 $s$ \u5230\u6c47\u70b9 $t$ \u8fdb\u884c\u4e00\u6b21 BFS \u6765\u7ef4\u62a4\u5c42\u6b21\u56fe\u3002\u4f46 ISAP \u7b97\u6cd5\u4ece\u59cb\u81f3\u7ec8\u53ea\u8fdb\u884c\u4e00\u6b21\u4ece\u6c47\u70b9 $t$ \u5230\u6e90\u70b9 $s$ \u7684 BFS\uff0c\u4f46 DFS \u7684\u65f6\u5019\u8981\u540c\u65f6\u7ef4\u62a4\u7ed3\u70b9\u7684\u6df1\u5ea6\u3002\n\n**3.ISAP \u7b97\u6cd5\u5177\u4f53\u6709\u54ea\u4e9b\u6b65\u9aa4\uff1f**\n\n1.\u9996\u5148\uff0c**\u4ece\u6c47\u70b9 $t$ \u5230\u6e90\u70b9 $s$** \u8fdb\u884c\u4e00\u6b21 BFS\u3002\n\n2.\u7136\u540e\uff0c\u6bcf\u6b21\u6cbf\u7740**\u6df1\u5ea6\u8fde\u7eed**\u7684\u7ed3\u70b9\u8fdb\u884c\u589e\u5e7f\uff0c\u7136\u540e**\u66f4\u65b0\u8def\u5f84\u4e0a\u7684\u7ed3\u70b9\u6df1\u5ea6**\u3002\n\n3.\u5982\u679c**\u67d0\u4e2a\u6df1\u5ea6\u4e0d\u5b58\u5728**\u6216\u8005**\u6e90\u70b9 $s$ \u7684\u6df1\u5ea6\u5927\u4e8e\u7b49\u4e8e\u7ed3\u70b9\u4e2a\u6570 $n$ **\u65f6\u7ed3\u675f\uff0c\u5426\u5219**\u8f6c\u6b65\u9aa4 2**\uff08\u4e0d\u662f\u8f6c\u6b65\u9aa4 1\uff09\n\nISAP \u7684\u795e\u5947\u4e4b\u5904\u5728\u4e8e\u5b83\u4e0d\u7528\u518d\u8fdb\u884c BFS \u5c31\u80fd\u7ef4\u62a4\u5c42\u6b21\u56fe\u3002\n\n\u9996\u5148\u662f\u521d\u59cb\u5316\u5386\u7a0b\uff0c\u8fd9\u91cc**\u4f7f\u7528\u94fe\u5f0f\u524d\u5411\u661f\u8fdb\u884c\u5b58\u56fe\u3002**\n\n```cpp\n#define inf 1000000000000000\n#define V 20010\n#define E 500010\ntypedef long long int ll;\nstruct edge {\npublic:\n\tint to, next;\n\tll capa;\n};\nint cnt = 0, head[V]; int n, m; vector<edge>node(E);\ninline void add(int fir, int nxt, ll w) {\n\tnode[cnt].to = nxt;\n\tnode[cnt].capa = w;\n\tnode[cnt].next = head[fir];\n\thead[fir] = cnt; ++cnt;\n}\nint s, t, dep[V], gap[V], cur[V]; queue<int>que; ll sum = 0;\ninline void initing() {\n\tmemset(dep, -1, (n + 1) * sizeof(int));\n\tmemcpy(cur, head, (n + 1) * sizeof(int));\n}\n```\n\n\u5176\u4e2d\u6709\u4e09\u4e2a\u65b0\u6570\u7ec4\uff1a\u5206\u522b\u662f $dep$, $gap$ \u548c $cur$\u3002\n\n$cur$ \u7528\u4e8e\u201c\u5f53\u524d\u5f27\u4f18\u5316\u201d\uff0c\u5c06\u4e8e\u540e\u9762\u4ecb\u7ecd\uff0c\u90a3 $dep$ \u548c $gap$ \u662f\u6307\u4ec0\u4e48\u5462\uff1f\n\n\u5728\u56fe $G=(V,E)$ \u4e2d\uff0c $dep$ \u53ef\u4ee5\u5bf9\u5e94\u4e8e\u4e00\u4e2a\u65b0\u51fd\u6570 \u3002\n$$\n\\operatorname{dep}(u),u \\in V\n$$\n\n\u5b83\u4ee3\u8868\u8fd9\u4e2a\u7ed3\u70b9\u7684**\u6df1\u5ea6**\u3002\u4f60\u5148\u4e0d\u8981\u7ea0\u7ed3\u6df1\u5ea6\u662f\u4ec0\u4e48\uff0c\u4e0b\u9762\u4f1a\u8bb2\u3002\n\n\u540c\u6837\uff0c $gap$ \u4e5f\u53ef\u4ee5\u5bf9\u5e94\u4e00\u4e2a\u65b0\u51fd\u6570\u3002\n$$\n\\operatorname{gap}(d),d \\in \\operatorname{deep(u)},u \\in V\n$$\n\n\u5b83\u4ee3\u8868**\u8fd9\u4e2a\u6df1\u5ea6\u5bf9\u5e94\u7684\u7ed3\u70b9\u6570**\u3002\n\n\u90a3\u5b83\u4eec\u6709\u4ec0\u4e48\u7528\u5462\uff1f\n\n\u5148\u653e\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/6306ndod.png)\n\n\u56e0\u4e3a\u5de5\u5177\u7684\u9650\u5236\uff0c\u53cd\u5411\u5f27\u4ee5\u53ca\u7ed3\u70b9 $v1$ \u548c $v2$ \u4e4b\u95f4\u7684\u91cd\u8fb9\u65e0\u6cd5\u6b63\u5e38\u5c55\u793a\u3002\n\nISAP \u4f1a\u5148\u7528 BFS \u9020\u5c42\u6b21\u56fe\u3002\u6ce8\u610f\u662f\u4ece\u6c47\u70b9 $t$ \u5f00\u59cb BFS \uff0c\u4e0d\u662f\u4ece\u6e90\u70b9 $s$ \u5f00\u59cb\u7684\u3002\n\n\u4e0b\u9762\u662f BFS \u540e\u56fe\u7684\u72b6\u6001\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/e3tznebx.png)\n\n\u5177\u4f53\u8fc7\u7a0b\u5982\u4e0b\uff1a\n\n1.\u5c06\u6c47\u70b9 $t$ \u5165\u961f\u3002\n\n2.**\u904d\u5386\u961f\u9996\u7ed3\u70b9\u6bcf\u4e2a\u51fa\u8fb9**\uff0c\u5c06\u8fb9\u5bf9\u5e94\u7684\u7ed3\u70b9\u5165\u961f\uff0c**\u5165\u961f\u7684\u7ed3\u70b9\u6df1\u5ea6\u4e3a\u961f\u9996\u7ed3\u70b9\u6df1\u5ea6 +$1$**\n\n3.\u5c06\u961f\u9996\u7ed3\u70b9\u51fa\u961f\uff0c**\u5982\u679c\u961f\u5217\u4e0d\u4e3a\u7a7a\uff0c\u8f6c\u6b65\u9aa4 $2$\uff0c\u5426\u5219\u76f4\u63a5\u7ed3\u675f**\n\n\u6ce8\u610f\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u5751\u70b9\uff1a\n```cpp\nif (dep[ito] == -1)\n```\nBFS \u7684\u65f6\u5019\u4e00\u5b9a\u53ea\u901a\u8fc7\u6df1\u5ea6\u5224\u5b9a\u662f\u5426\u904d\u5386\u8fc7\uff0c\u4e0d\u80fd\u5224\u5b9a\u8fb9\u6743\u5927\u5c0f\uff0c\u56e0\u4e3a\u521d\u59cb\u53cd\u5411\u8fb9\u662f\u6ca1\u6709\u8fb9\u6743\u7684\uff0c\u800c\u6211\u4eec\u56e0\u4e3a\u662f\u4ece\u6c47\u70b9 $t$ \u5f00\u59cb BFS \u7684\uff0c\u6240\u4ee5\u8981\u901a\u8fc7\u53cd\u5411\u8fb9\u624d\u80fd\u5230\u8fbe\u6e90\u70b9 $s$\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nvoid bfs() {\n\tint fro, i, ito;\n\tque.push(t); deep[t] = 0; ++gap[deep[t]];\n\twhile (!que.empty()) {\n\t\tfro = que.front(); que.pop();\n\t\tfor (i = head[fro]; i != -1; i = node[i].next) {\n\t\t\tito = node[i].to;\n\t\t\tif (deep[ito] == -1) {//\u4e0d\u8981\u7279\u5224\u8fb9\u6743\u4e3a 0\n\t\t\t\tdeep[ito] = deep[fro] + 1;\n\t\t\t\tque.push(ito);\n\t\t\t\t++gap[deep[ito]];//\u522b\u5fd8\u4e86\u7ed9 gap \u52a0 1\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n\u6709\u4e86\u8fd9\u4e2a\u6df1\u5ea6\u6709\u4ec0\u4e48\u7528\u5462\uff1f**\u80fd\u8ba9\u6211\u4eec\u627e\u5230\u7684\u589e\u5e7f\u8def\u4e00\u5b9a\u662f\u6700\u77ed\u589e\u5e7f\u8def\u3002**\n\n\u600e\u4e48\u8d70\u5462\uff1f\n\n\u9996\u5148\u7ed9 DFS \u4e24\u4e2a\u53c2\u6570\uff1a\u201c\u5f53\u524d\u7ed3\u70b9 $u$\u201d \u548c \u201c\u4ece $s$ \u5230 $u$ \u589e\u5e7f\u8def\u5f84\u4e0a\u6700\u5c0f\u8fb9\u6743 $flow$\u201d\u3002\u518d\u52a0\u4e0a\u4e00\u4e2a\u53d8\u91cf\uff1a\u201c\u5f53\u524d\u7ed3\u70b9\u5df2\u7ecf\u589e\u5e7f\u51fa\u53bb\u7684\u6d41\u91cf $used$ \u201d\u3002\n\n\u8bb0\u4f4f\u4e0b\u9762\u51e0\u4e2a\u539f\u5219\uff1a\n\n1.\u4ece\u6e90\u70b9 $s$ \u5f00\u59cb DFS\u3002\n\n2.\u53ea\u6cbf\u7740**\u6df1\u5ea6\u8fde\u7eed**\u7684\u589e\u5e7f\u8def\u5f84\u589e\u5e7f\uff0c\u53ea\u901a\u8fc7\u8fb9\u6743\u4e0d\u4e3a $0$ \u7684\u8fb9\u589e\u5e7f\u3002\n\n3.\u5f53 $used$ \u7b49\u4e8e $flow$ \u65f6\u53ca\u65f6\u505c\u6b62\u3002\n\n4.\u5f53\u589e\u5e7f\u540e $used$ \u5c0f\u4e8e $flow$ \u65f6\u5c06\u7ed3\u70b9 $u$ \u7684\u6df1\u5ea6 +$1$\u3002\n\n\u5148\u770b\u770b\u4ee3\u7801\u611f\u53d7\u4e00\u4e0b\u3002\n\n```cpp\nll dfs(int u, ll flow) {\n\tif (u == t || flow == 0)return flow; ll used = 0;\n\tfor (int i = cur[u]; i != -1; i = node[i].next;) {\n\t\tcur[u] = i;\n\t\tif (dep[u] == dep[node[i].to] + 1 && node[i].capa > 0) {\n\t\t\tll wei = dfs(node[i].to, min(flow - used, node[i].capa));\n\t\t\tif (wei) {\n\t\t\t\tnode[i].capa -= wei;\n\t\t\t\tnode[i ^ 1].capa += wei;\n\t\t\t\tused += wei;\n\t\t\t}\n\t\t}\n\t\tif (used == flow)return used;\n\t}\n\tif (used > flow)used = flow;\n\tif (used < flow) {\n\t\t--gap[dep[u]];\n\t\tif (!gap[dep[u]])dep[s] = n + 1;\n      ++gap[++dep[u]];\n\t}\n        //\u8fd9\u91cc\u7684 if \u8bed\u53e5\u624d\u662f\u4e0e Dinic \u7b97\u6cd5\u771f\u6b63\u7684\u4e0d\u540c\u4e4b\u5904\n\treturn used;\n}\n```\n\u4f60\u5927\u6982\u542c\u8bf4\u8fc7\u4e00\u4e2a\u4e0e ISAP \u51e0\u4e4e\u4e00\u81f4\u7684\u7b97\u6cd5\uff1a\u201cDinic \u7b97\u6cd5\u201d\u3002\n\nDinic \u7b97\u6cd5\u4e0e ISAP \u7b97\u6cd5\u6709\u4e00\u70b9\u4e0d\u4e00\u6837\uff1a Dinic \u5728 DFS \u540e\u76f4\u63a5\u66b4\u529b BFS \u7ef4\u62a4\u5c42\u6b21\u56fe\uff0c\u4f46\u662f ISAP \u5374\u5728 DFS \u7684\u65f6\u5019\u4e5f\u5728\u7ef4\u62a4\u5c42\u6b21\u56fe\u3002\u8fd9\u4e00\u70b9\u4e0d\u540c\u5bfc\u81f4 ISAP \u7b97\u6cd5\u7684\u8fd0\u884c\u901f\u5ea6\u5f80\u5f80\u6bd4 Dinic \u7b97\u6cd5\u5feb\u4e0a\u6570\u500d\u3002\n\nISAP \u7b97\u6cd5\u662f\u8fd9\u6837\u7ef4\u62a4\u5c42\u6b21\u56fe\u7684\uff1a\u5982\u679c\u4ece\u4e0a\u4e00\u4e2a\u7ed3\u70b9\u4f20\u8fc7\u6765\u7684\u6d41\u91cf\u5927\u4e8e\u4ece\u8fd9\u4e2a\u7ed3\u70b9\u589e\u5e7f\u51fa\u53bb\u7684\u6d41\u91cf\uff0c\u90a3\u4e48\u5c06\u8fd9\u4e2a\u7ed3\u70b9\u7684\u6df1\u5ea6 +$1$\u3002\n\n\u5c31\u662f\u8fd9\u4e48\u7b80\u6d01\u3002\n\n\u4f60\u53ef\u80fd\u8fd8\u60f3\u95ee\uff1a\u201c\u4e3a\u4ec0\u4e48 \u2018\u5f53\u589e\u5e7f\u540e $used$ \u5c0f\u4e8e $flow$ \u65f6\u5c06\u7ed3\u70b9 $u$ \u7684\u6df1\u5ea6 +$1$\u2019 \u5462\uff1f\u201d\n\n\u8bf7\u770b\uff1a\n\n```cpp\nif (used < flow) {\n\t\t--gap[dep[u]];\n\t\tif (!gap[dep[u]])dep[s] = n + 1;\n     \t\t++gap[++dep[u]];\n\t}\n```\nISAP \u7684\u601d\u60f3\u5728\u8fd9\u77ed\u77ed\u7684\u51e0\u884c\u4ee3\u7801\u91cc\u8868\u73b0\u5f97\u6dcb\u6f13\u5c3d\u81f4\u3002\n\n\u4e3a\u4ec0\u4e48\u8fd9\u662f\u5bf9\u7684\uff1f\n\n\u5047\u8bbe\u6709\u4e00\u4e2a\u7ed3\u70b9 $u \\in V$ \u662f\u5f53\u524d DFS \u8003\u8651\u7684\u7ed3\u70b9\uff0c\u5e76\u4e14\u6211\u4eec\u77e5\u9053\u6c47\u70b9 $t$ \u7684\u6df1\u5ea6\u662f\u4e0d\u53d8\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u9047\u5230\u4e86\u6c47\u70b9 $t$ \u5c31 ```return```\uff0c\u800c\u6e90\u70b9 $s$ \u7684\u6df1\u5ea6\u662f\u6bcf\u8f6e\u5fc5\u53d8\u7684\uff0c\u56e0\u4e3a\u521d\u59cb\u6e90\u70b9 $s$ \u7684 $flow$ \u662f $\\infty$\u3002\n\n\u8fd9\u53ef\u4ee5\u63a8\u5bfc\u51fa\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u7ed3\u8bba\uff1a\u201c**\u5f53\u524d DFS \u627e\u5230\u7684\u589e\u5e7f\u8def\u5f84\u957f\u5ea6\u76f8\u7b49\u4e14\u90fd\u7b49\u4e8e $\\operatorname{dep}(s)$**\u201d\u3002\n\n\u8fd9\u610f\u5473\u7740\u5982\u679c\u6709\u4e00\u4e2a\u7ed3\u70b9 $u \\in V$\uff0c \u4ece $u$ \u589e\u5e7f\u51fa\u53bb\u7684\u6d41\u91cf\u5c0f\u4e8e\u589e\u5e7f\u8def\u5f84\u4e0a\u6700\u5c0f\u8fb9\u6743\u7684\u5bb9\u91cf\uff0c\u4e5f\u5c31\u610f\u5473\u7740**\u7ecf\u8fc7 $u$ \u7684\u6240\u6709\u957f\u5ea6\u7b49\u4e8e $\\operatorname{dep}(s)$ \u7684\u589e\u5e7f\u8def\u90fd\u5df2\u7ecf\u88ab\u589e\u5e7f\u8fc7\u4e86**\uff0c\u800c\u4e14\u901a\u8fc7\u8fd9\u4e2a\u7ed3\u8bba\u6211\u4eec\u4e5f\u53ef\u4ee5\u8bc1\u660e\uff0c\u6240\u6709\u957f\u5ea6\u5c0f\u4e8e $\\operatorname{dep}(s)$ \u7684\u589e\u5e7f\u8def\u90fd\u5df2\u7ecf\u88ab\u589e\u5e7f\u5b8c\u4e86\u3002\n\n**\u8fd9\u65f6\u5019\u5c06\u7ed3\u70b9 $u$ \u7684\u6df1\u5ea6\u63d0\u9ad8\uff0c\u76f8\u5f53\u4e8e\u901a\u8fc7\u7ed3\u70b9 $u$ \u7684\u589e\u5e7f\u8def\u5f84\u957f\u5ea6\u53d8\u957f\u4e86\uff0c\u4e5f\u5c31\u80fd\u589e\u5e7f\u5176\u4ed6\u6bd4\u539f\u672c\u7684\u589e\u5e7f\u8def\u66f4\u957f\u7684\u589e\u5e7f\u8def\u4e86\u3002**\n\n#### \u7ed3\u675f\u6761\u4ef6\uff0c gap \u4f18\u5316\u4ee5\u53ca\u5f53\u524d\u5f27\u4f18\u5316\n```cpp\nwhile (dep[s] < n) {\n\t\tsum += dfs(s, inf);\n\t\tmemcpy(cur, head, (n + 1) * sizeof(int));\n\t}\n```\n\u8fd9\u662f\u8fd0\u884c ISAP \u7684\u6838\u5fc3\u4ee3\u7801\u4e4b\u4e00\u3002\n\n\u53ef\u4ee5\u770b\u5230\u7ed3\u675f\u6761\u4ef6\u662f ```dep[s]<n``` \u3002\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u589e\u5e7f\u8def\u6700\u957f\u53ea\u6709 $n$\uff0c```dep[s]``` \u7b49\u4e8e $n$ \u65f6\u589e\u5e7f\u8def\u80af\u5b9a\u90fd\u627e\u5b8c\u4e86\u3002\n\n\u90a3 gap \u4f18\u5316\u53c8\u662f\u4f18\u5316\u5230\u90a3\u91cc\u4e86\u5462\uff1f\n```cpp\nif (used < flow) {\n\t\t--gap[dep[u]];\n\t\tif (!gap[dep[u]])dep[s] = n + 1;\n     \t\t++gap[++dep[u]];\n\t}\n```\n\u65e0\u6bd4\u7684\u5408\u7406\uff0c\u5f53\u4e00\u4e2a\u6df1\u5ea6\u5bf9\u5e94\u7684\u7ed3\u70b9\u6570\u76ee\u4e3a $0$ \u7684\u65f6\u5019\uff0c\u90a3\u4e48\u5c31\u4f1a\u5f62\u6210\u65ad\u5c42\uff0c\u4e5f\u5c31\u627e\u4e0d\u5230\u589e\u5e7f\u8def\u4e86\uff0c\u627e\u4e0d\u5230\u589e\u5e7f\u8def\u5c31\u8bf4\u660e\u5df2\u7ecf\u662f\u6700\u5927\u6d41\u4e86\u3002\u8fd9\u91cc\u5229\u7528 ```dep[s]=n+1``` \u8fd8\u80fd\u4f7f\u7a0b\u5e8f\u5c11\u4e00\u4e2a\u7279\u5224\u3002\n\n\u7a0b\u5e8f\u8fd8\u4f7f\u7528\u4e86\u4e00\u4e2a\u4f18\u5316\uff1a\u201c\u5f53\u524d\u5f27\u4f18\u5316\u201d\u3002\n\n\u5f53\u524d\u5f27\u4f18\u5316\u7684\u6838\u5fc3\u5728\u8fd9\u91cc\uff1a\n\n```cpp\nfor (int i = cur[u]; i != -1; i=node[i].next) {\n\tcur[u] = i;\n        ...\n}\n\n```\n\u8fd9\u91cc\u7684\u4f5c\u7528\u662f\uff1a\u5f53\u6211\u4eec\u518d\u6b21\u904d\u5386\u5230\u8fd9\u4e2a\u70b9\u65f6\uff0c\u524d\u9762\u7684\u8fb9\u80af\u5b9a\u5df2\u7ecf\u88ab\u589e\u5e7f\u5b8c\u4e86\uff0c\u5c31\u6ca1\u5fc5\u8981\u518d\u8d70\u4e86\uff0c\u5728\u8fd9\u91cc\u8fdb\u884c\u4e00\u6b21\u526a\u679d\uff0c\u901f\u5ea6\u4e5f\u6781\u5927\u63d0\u5347\u3002\n#### ISAP \u7684\u6b63\u786e\u6027\uff1a\n\n\u5728\u56fe $G=(V,E)$ \u4e2d\uff0c\u5f88\u663e\u7136\u6e90\u70b9 $s$ \u7684\u6df1\u5ea6\u5728\u6bcf\u6b21 DFS \u540e\u90fd\u4f1a\u63d0\u9ad8\uff0c\u5e76\u4e14\u6bcf\u6b21 DFS \u90fd\u627e\u7684\u662f\u6700\u77ed\u589e\u5e7f\u8def\uff0c\u5982\u679c\u4e00\u76f4\u6ca1\u51fa\u73b0\u65ad\u5c42\uff0c\u5b9a\u4e49\u51fd\u6570 $\\operatorname{dep}(U),U \\in V$ \u4e3a\u7ed3\u70b9 $U$ \u7684\u6df1\u5ea6\u3002 \n\u6700\u591a\u4f1a\u8dd1 $V-\\operatorname{dep}(s)$ \u6b21\u589e\u5e7f\u8def\uff0c\u53ef\u4ee5\u8bc1\u660e\uff0c\u5f53 $\\operatorname{dep}(s) \u2265 V$ \u65f6\u5fc5\u5b9a\u51fa\u73b0\u65ad\u5c42\uff0c\u4e5f\u5c31\u4e0d\u5b58\u5728\u589e\u5e7f\u8def\u5f84\uff0c\u56e0\u6b64 ISAP \u7b97\u6cd5\u627e\u51fa\u7684\u4e00\u5b9a\u662f\u6700\u5927\u6d41\u3002\n\n#### \u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\uff1a\n\u5728\u56fe $G=(V,E)$ \u4e2d\uff0cBFS \u662f $\\Theta(V+E)$ \u7684\uff0c\u51e0\u4e4e\u4e0d\u5f71\u54cd\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u663e\u7136\uff0c\u6bcf\u6b21 DFS \u540e\uff0c\u6e90\u70b9 $s$ \u5230\u6c47\u70b9 $t$ \u7684\u8ddd\u79bb\u90fd\u4f1a\u589e\u52a0 $1$\uff0c\u6700\u591a\u8fdb\u884c $V-\\operatorname{dep}(s)$ \u6b21 DFS\uff0c\u76f4\u89c2\u4e0a\u770b\uff0c$\\operatorname{dep}(s)$ \u6bd4 $V$ \u7684\u9636\u5c0f\uff0c\u56e0\u6b64\u5171\u8fdb\u884c $O(V)$ \u6b21 DFS\uff0c\u6bcf\u6b21\u6784\u9020\u51fa\u4e00\u4e2a\u65b0\u7684\u5c42\u6b21\u56fe\uff0c\u56fe\u4e0a\u6700\u591a\u6709 $O(E)$ \u4e2a\u589e\u5e7f\u8def\uff0c\u5bfb\u627e\u6bcf\u4e2a\u589e\u5e7f\u8def\u7684\u65f6\u95f4\u6700\u591a\u662f $O(V)$ \u7684\uff0c\u6240\u4ee5 ISAP \u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e0a\u9650\u4e3a $O(V^2E)$\u3002\n\n\u8bc1\u6bd5\u3002\n\nACcode\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define inf 1000000000000000\n#define V 50010\n#define E 1000010\ntypedef long long int ll;\nstruct edge {\npublic:\n\tint to, next;\n\tll capa;\n};\nint cnt = 0, head[V]; int n, m; vector<edge>node(E);\ninline void add(int fir, int nxt, ll w) {\n\tnode[cnt].to = nxt;\n\tnode[cnt].capa = w;\n\tnode[cnt].next = head[fir];\n\thead[fir] = cnt; ++cnt;\n}\nint s, t, deep[V], gap[V], cur[V]; queue<int>que; ll sum = 0;\ninline void initing() {\n\tmemset(deep, -1, V * sizeof(int));\n\tmemcpy(cur, head, (n+1)*sizeof(int));\n}\ninline void bfs() {\n\tint fro, ito;\n\tque.push(t); deep[t] = 0; ++gap[deep[t]];\n\twhile (!que.empty()) {\n\t\tfro = que.front(); que.pop();\n\t\tfor (register int i = head[fro]; i != -1; i = node[i].next) {\n\t\t\tito = node[i].to;\n\t\t\tif (deep[ito] == -1) {\n\t\t\t\tdeep[ito] = deep[fro] + 1;\n\t\t\t\tque.push(ito);\n\t\t\t\t++gap[deep[ito]];\n\t\t\t}\n\t\t}\n\t}\n}\nll dfs(int u, ll flow) {\n\tif (u == t || flow == 0)return flow; ll used = 0,wei=0;\n\tfor (int i = cur[u]; i != -1; i = node[i].next) {\n\t\tcur[u] = i;\n\t\tif (deep[u] == deep[node[i].to] + 1 && node[i].capa > 0) {\n\t\t\twei = dfs(node[i].to, min(flow - used, node[i].capa));\n\t\t\tif (wei) {\n\t\t\t\tnode[i].capa -= wei;\n\t\t\t\tnode[i ^ 1].capa += wei;\n\t\t\t\tused += wei;\n\t\t\t}\n\t\t}\n\t\tif (used == flow)return used;\n\t}\n\tif (used < flow) {\n\t\t--gap[deep[u]];\n\t\tif (!gap[deep[u]])deep[s] = n + 1;\n\t\t++gap[++deep[u]];\n\t}\n\treturn used;\n}\nll ISAP() {\n\tiniting(); bfs();\n\twhile (deep[s] < n) {\n\t\tsum += dfs(s, inf);\n\t\tmemcpy(cur, head, (n+1) * sizeof(int));\n\t}\n\treturn sum;\n}\nint main() {\n\tios::sync_with_stdio(0);\n\tmemset(head, -1, V*sizeof(int));\n\tcin >> n >> m >> s >> t;\n\tint f, n; ll w;\n\tfor (register int i = 0; i < m; i++) {\n\t\tcin >> f >> n >> w;\n\t\tadd(f, n, w);\n\t\tadd(n, f, 0);\n\t}\n\tcout << ISAP();\n\treturn 0;\n}\n```",
        "postTime": 1644820894,
        "uid": 551861,
        "name": "wql_cai",
        "ccfLevel": 4,
        "title": "\u6700\u5927\u6d41ISAP\u7b97\u6cd5"
    },
    {
        "content": "\u88f8\u7684\u7f51\u7edc\u6d41\u6a21\u677f\u9898\uff0c\u7528 Dinic \u5373\u53ef\u3002\n\n## \u9898\u76ee\u5927\u610f\n\u7ed9\u5b9a\u4e00\u5f20 $n$ \u4e2a\u8282\u70b9\uff0c$m$ \u6761\u8fb9\u7684\u7f51\u7edc\uff0c\u4ee5\u53ca\u6e90\u70b9\u3001\u6c47\u70b9 $s,t$\uff0c\u6c42 $s$ \u5230 $t$ \u7684\u6700\u5927\u6d41\u3002\n\n## \u5927\u4f53\u601d\u8def\n### \u7f51\u7edc\u6d41\u6982\u5ff5\n\u4e00\u4e2a\u7f51\u7edc $G=(V,E)$ \u662f\u4e00\u5f20\u6709\u5411\u56fe\uff0c\u6bcf\u6761\u8fb9 $(x,y)$ \u6709\u4e00\u4e2a\u6743\u503c $c$\uff0c\u8868\u793a\u8fb9\u7684\u5bb9\u91cf\uff08capability)\u3002\u56fe\u4e2d\u6709\u4e24\u4e2a\u7279\u6b8a\u8282\u70b9 $s,t$\uff0c\u8868\u793a\u6e90\u70b9\u548c\u6c47\u70b9\uff08source, sink)\u3002\n\n\u8bbe\u6d41\u91cf\u51fd\u6570\u4e3a $f(x,y),\\ x,y\\in V$\uff0c\u5219\u6ee1\u8db3\n1. $f(x,y)\\le c(x,y)$\uff0c\u5373\u6d41\u91cf\u9650\u5236\u3002\n2. $f(x,y)=-f(y,x)$\uff0c\u5373\u659c\u5bf9\u79f0\uff08\u53cd\u5bf9\u79f0\uff09\u3002\n3. $\\forall x\\neq S,x\\neq T,\\sum_{(u,x)\\in E}f(u,x)=\\sum_{(x,v)\\in E}f(x,v)$\uff0c\u5373\u6d41\u91cf\u5b88\u6052\u3002\n\n$(x,y)\\in E$\uff0c\u79f0 $f(x,y)$ \u8868\u793a\u8be5\u8fb9\u7684\u6d41\u91cf\uff0c$c(x,y)-f(x,y)$ \u8868\u793a\u8be5\u8fb9\u7684\u5269\u4f59\u5bb9\u91cf\u3002\n\n\u6709\u4e00\u5f20\u56fe\uff0c\u8981\u6c42\u4ece\u6e90\u70b9\u6d41\u5411\u6c47\u70b9\u7684\u6700\u5927\u6d41\u91cf\uff08\u53ef\u4ee5\u6709\u5f88\u591a\u6761\u8def\u5230\u8fbe\u6c47\u70b9\uff09\uff0c\u5c31\u662f\u6211\u4eec\u7684\u6700\u5927\u6d41\u95ee\u9898\u3002\u6700\u5927\u6d41\u7684\u5e38\u7528\u7b97\u6cd5\u6709 EK, Dinic, ISAP, \u5176\u4e2d\u524d\u8005\u590d\u6742\u5ea6\u4e3a $O(nm^2)$\uff0c\u540e\u4e24\u8005\u7684\u7406\u8bba\u590d\u6742\u5ea6\u4e0a\u754c\u4e3a $O(n^2m)$\uff0c\u4f46\u5b9e\u9645\u6548\u7387\u5747\u8fdc\u9ad8\u4e8e\u6b64\u3002\n\n### Dinic \u4e0e\u589e\u5e7f\u8def\n\u6c42\u89e3\u6700\u5927\u6d41\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u8ba4\u8bc6\u4ee5\u4e0b\u589e\u5e7f\u8def\u7684\u6982\u5ff5\u3002\n\n**\u589e\u5e7f\u8def** \u6307\u7684\u662f\uff0c\u4ece\u6e90\u70b9\u5230\u6c47\u70b9\uff0c\u53ea\u8981\u6709 $flow>0$ \u6d41\u8fc7\u53bb\uff0c\u8fd9\u6761\u8def\u5c31\u662f\u589e\u5e7f\u8def\u3002\u5728\u4e00\u4e9b\u6700\u5927\u6d41\u7b97\u6cd5\u4e2d\uff0c\u5c31\u662f\u5c06\u8fd9\u4e9b\u8def **\u589e\u5e7f** \uff08\u610f\u601d\u5c31\u662f\u8d70\u6389\u8fd9\u6761\u8def\uff0c\u5e26\u8d70\u7684\u6d41\u91cf\u80af\u5b9a\u5c31\u662f\u8fd9\u6761\u8def\u7684\u6700\u5c0f\u6d41\u91cf\uff09\u3002\n\n\u5728\u4efb\u610f\u65f6\u523b\uff0c\u7f51\u7edc\u4e2d\u6240\u6709\u8282\u70b9\u4ee5\u53ca\u5269\u4f59\u5bb9\u91cf\u5927\u4e8e 0 \u7684\u8fb9\u6784\u6210\u7684\u5b50\u56fe\u79f0\u4e3a **\u6b8b\u91cf\u7f51\u7edc**\u3002\n\nEK \u7b97\u6cd5\u6bcf\u8f6e\u4f1a\u904d\u5386\u6574\u4e2a\u6b8b\u91cf\u7f51\u7edc\uff0c\u4f46\u53ea\u627e\u51fa\u4e00\u6761\u589e\u5e7f\u8def\uff0c\u56e0\u6b64\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4f18\u5316\u3002\u7531\u6b64\u4fbf\u8bde\u751f\u4e86 Dinic\u3002\n\nBFS \u4e2d\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u8282\u70b9\u7684\u5c42\u6b21 $d_x$\uff0c\u8868\u793a $S\\to x$ \u7ecf\u8fc7\u7684\u6700\u5c11\u8fb9\u6570\u3002\u5728\u6b8b\u91cf\u7f51\u7edc\u4e2d\uff0c\u6ee1\u8db3 $d_y=d_x+1$ \u7684\u8fb9 $(x,y)$ \u6784\u6210\u7684\u5b50\u56fe\u662f\u5206\u5c42\u56fe\uff0c\u5176\u663e\u7136\u662f DAG\u3002\n\nDinic \u7b97\u6cd5\u662f\u4e0d\u65ad\u91cd\u590d\u4ee5\u4e0b\u6d41\u7a0b\uff0c\u76f4\u5230 $S$ \u5728\u6b8b\u91cf\u7f51\u7edc\u4e0a\u65e0\u6cd5\u8fbe\u5230 $T$\uff1a\n1. \u5728\u6b8b\u91cf\u7f51\u7edc\u4e0a BFS \u5f97\u5230\u5206\u5c42\u56fe\uff1b\n2. \u5728\u5206\u5c42\u56fe\u4e0a\u8fdb\u884c DFS \u5bfb\u627e\u589e\u5e7f\u8def\uff0c\u56de\u6eaf\u65f6\u66f4\u65b0\u5269\u4f59\u5bb9\u91cf\uff08\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8e\u6bcf\u6761\u8fb9\u53ea\u9700\u8bb0\u5f55\u5269\u4f59\u5bb9\u91cf $c_i$ \u5373\u53ef\uff09\u3002\n\n\u5728\u6b64\u8fc7\u7a0b\u4e2d\uff0c\u6709\u4e00\u4e9b\u4f18\u5316\uff1a\n1. \u591a\u8def\u589e\u5e7f\uff1a\u6bcf\u6b21\u627e\u5230\u4e00\u6761\u589e\u5e7f\u8def\u7684\u65f6\u5019\uff0c\u5982\u679c\u6b8b\u4f59\u6d41\u91cf\u6ca1\u6709\u7528\u5b8c\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u6b8b\u4f59\u90e8\u5206\u6d41\u91cf\uff0c\u518d\u627e\u51fa\u4e00\u6761\u589e\u5e7f\u8def\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u4e00\u6b21 DFS \u4e2d\u627e\u51fa\u591a\u6761\u589e\u5e7f\u8def\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u7b97\u6cd5\u7684\u6548\u7387\u3002\n\n2. \u5f53\u524d\u5f27\u4f18\u5316\uff1a\u589e\u5e7f\u65f6\uff0c\u4e00\u6761\u8fb9\u4e0d\u53ef\u80fd\u88ab\u589e\u5e7f\u7b2c\u4e8c\u6b21\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u66f4\u65b0\u90bb\u63a5\u8868\u4e34\u65f6\u8868\u5934\u8df3\u8fc7\u8fd9\u4e9b\u8fb9\u3002\n\n3. \u6ee1\u6d41\u526a\u679d\uff1a\u589e\u5e7f\u65f6\uff0c\u5bf9\u4e8e\u4e00\u6761\u8fb9\u589e\u5e7f\u5931\u8d25\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06\u5bf9\u5e94\u8282\u70b9\u7684\u5c42\u6570\u8bbe\u7f6e\u4e3a $-1$\uff0c\u8fd9\u6837\u4e0d\u4f1a\u518d\u5bf9\u8fd9\u4e9b\u8fb9\u8fdb\u884c\u589e\u5e7f\u3002\n\n### \u7f51\u7edc\u6d41\u4e0e\u4e8c\u5206\u56fe\u5339\u914d\n\u7f51\u7edc\u6d41\u662f\u6c42\u89e3\u4e8c\u5206\u56fe\u5339\u914d\u95ee\u9898\u7684\u5e38\u7528\u624b\u6bb5\uff0c\u4e5f\u662f\u4e00\u79cd\u901a\u7528\u624b\u6bb5\u3002\u7531\u4e8e\u4e00\u7ec4\u5339\u914d\u662f\u6bcf\u4e2a\u5de6\u90e8\u70b9\u51fa\u4e00\u6761\u8fb9\uff0c\u6bcf\u4e2a\u53f3\u90e8\u70b9\u5165\u4e00\u6761\u8fb9\uff0c\u7b49\u4ef7\u4e8e\u5efa\u7acb\u8d85\u7ea7\u6e90\u70b9\u548c\u8d85\u7ea7\u6c47\u70b9 $s,t$\uff0c\u7531 $s$ \u5411\u6240\u6709\u5de6\u90e8\u70b9\u8fde\u6d41\u91cf\u4e3a $1$ \u7684\u8fb9\uff0c\u7531\u6240\u6709\u53f3\u90e8\u70b9\u5411 $t$ \u8fde\u6d41\u91cf\u4e3a $1$ \u7684\u8fb9\uff0c\u539f\u56fe\u4e2d\u8fb9 $(x,y)$ \u5bf9\u5e94 $x$ \u5411 $y$ \u8fde\u6d41\u91cf\u4e3a $1$ \u7684\u8fb9\uff0c\u6c42\u6700\u5927\u6d41\u5373\u4e3a\u6700\u5927\u5339\u914d\u3002\n\n\u7279\u522b\u5730\uff0cDinic \u7b97\u6cd5\u5728\u6c42\u89e3\u4e0a\u8ff0\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u95ee\u9898\u65f6\u7684\u590d\u6742\u5ea6\u4e0a\u754c\u4e3a $O(m\\sqrt n)$\uff0c\u5b9e\u9645\u66f4\u5feb\u3002\n\n## \u5b8c\u6574\u4ee3\u7801\n```cpp\n#include<cstring>\n#include<iostream>\n#include<cstdio>\n#include<queue>\nusing namespace std;\n#define rep(ii,aa,bb) for(re int ii=aa;ii<=bb;ii++)\n#define Rep(ii,aa,bb) for(re int ii=aa;ii>=bb;ii--)\ntypedef long long ll;\ntypedef unsigned long long ull;\nconst int maxn=1e4+5;\nconst ll inf=1ll<<60;\nnamespace IO_ReadWrite{\n\t#define re register\n\t#define gg (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n\tchar buf[1<<21],*p1=buf,*p2=buf;\n\ttemplate <typename T>\n\tinline void read(T &x){\n\t\tx=0;re T f=1;re char c=gg;\n\t\twhile(c>57||c<48){if(c=='-') f=-1;c=gg;}\n\t\twhile(c>=48&&c<=57){x=(x<<1)+(x<<3)+(c^48);c=gg;}\n\t\tx*=f;return;\n\t}\n\tinline void ReadChar(char &c){\n\t\tc=gg;\n\t\twhile(!isalpha(c)) c=gg;\n\t}\n\ttemplate <typename T>\n\tinline void write(T x){\n\t\tif(x<0) putchar('-'),x=-x;\n\t\tif(x>9) write(x/10);\n\t\tputchar('0'+x%10);\n\t}\n\ttemplate <typename T>\n\tinline void writeln(T x){write(x);putchar('\\n');}\n}\nusing namespace IO_ReadWrite;\nint ver[maxn],head[maxn],nxt[maxn],c[maxn],tot=1;\ninline void add(int u,int v,int w){\n\tver[++tot]=v;c[tot]=w;nxt[tot]=head[u];head[u]=tot;\n\tver[++tot]=u;c[tot]=0;nxt[tot]=head[v];head[v]=tot;\n}\nint d[maxn],cur[maxn],n,m,s,t;\ninline bool bfs(){// BFS \u8fdb\u884c\u5206\u5c42 \n\tmemset(d,-1,sizeof(d));\n\tqueue<int> q;\n\tq.push(s);d[s]=1;cur[s]=head[s];\n\twhile(!q.empty()){\n\t\tint u=q.front();q.pop();\n\t\tfor(int i=head[u];i;i=nxt[i]){\n\t\t\tint v=ver[i];\n\t\t\tif(c[i]&&d[v]==-1){\n\t\t\t\td[v]=d[u]+1;q.push(v);\n\t\t\t\tcur[v]=head[v];\n\t\t\t\tif(v==t) return 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\ninline int dfs(int u,int limit){// DFS \u8fdb\u884c\u589e\u5e7f\n\tif(u==t||limit==0) return limit;\n\tint flow=0; // \u591a\u8def\u589e\u5e7f\n\tfor(int i=cur[u];i&&flow<limit;i=nxt[i]){\n\t\tcur[u]=i;// \u5f53\u524d\u5f27\u4f18\u5316\n\t\tint v=ver[i];\n\t\tif(d[v]==d[u]+1&&c[i]){\n\t\t\tint f=dfs(v,min(c[i],limit-flow));\n\t\t\tif(!f) d[v]=-1;// \u6ee1\u6d41\u526a\u679d\n\t\t\tflow+=f;c[i]-=f;c[i^1]+=f;\n\t\t}\n\t}\n\treturn flow;\n}\ninline ll dinic(){ // \u6c42\u6700\u5927\u6d41\n\tll maxflow=0,flow=0;\n\twhile(bfs()) while(flow=dfs(s,inf)) maxflow+=flow;\n\treturn maxflow;\n}\nint main(){\n\tread(n);read(m);read(s);read(t);\n\tfor(int i=1,u,v,w;i<=m;i++){\n\t\tread(u);read(v);read(w);\n\t\tadd(u,v,w);\n\t}\n\twriteln(dinic());\n\treturn 0;\n}\n```",
        "postTime": 1625280647,
        "uid": 279197,
        "name": "Mars_Dingdang",
        "ccfLevel": 6,
        "title": "B3606 \u7f51\u7edc\u6d41"
    },
    {
        "content": "EK \u7b97\u6cd5\u662f\u5bf9 FF \u7b97\u6cd5\u7684\u4e00\u79cd\u6539\u8fdb\uff0c\u8fd9\u4e24\u79cd\u7b97\u6cd5\u7684\u601d\u60f3\u662f\uff1a\u6bcf\u6b21\u5bf9\u7f51\u7edc\u8fdb\u884c\u4e00\u6b21\u904d\u5386\uff0c\u627e\u51fa\u6700\u5c0f\u7684\u6b8b\u91cf\uff08\u4ece\u6e90\u70b9\u5230\u6c47\u70b9\uff09\uff0c\u8fdb\u884c\u589e\u5e7f\u3002\n\nFF \u7b97\u6cd5\u6838\u5fc3\u4ee3\u7801\uff1a\n\n```cpp\nint dfs(int u,int in){\n    if(u==t){\n        ans+=in;\n        flag=1;//\u627e\u5230\u589e\u5e7f\u8def\n        return in;\n    }\n    vis[x]=1;\n    for(int i=fir[u];i;i=nxt[i]){\n        int v=to[i];\n        if(vis[v]||flow[i]==0) continue;\n        int res=dfs(v,min(in,flow[i]));//\u6d41\u91cf\u53d7\u6700\u5c0f\u7684\u8fb9\u7684\u9650\u5236\n        if(flag){\n            flow[i]-=res;\n            flow[i^1]+=res;//\u53cd\u5411\u8fb9\u8fdb\u884c\u52a0\uff0c\u65b9\u4fbf\u8fdb\u884c\u53cd\u6094\u64cd\u4f5c\n            return res;\n        }\n    }\n    return 0;\n}\nvoid ff(){\n    do{\n        memset(vis,0,sizeof(vis));\n        flag=0; \n        dfs(s,INF);\n    }while(flag);\n}\n```\n\u7531\u4e8e FF \u7b97\u6cd5\u6bcf\u6b21\u627e\u5230\u7684\u589e\u5e7f\u8def\u4e0d\u662f\u6700\u77ed\u8def\u5f84\uff0c\u8fd9\u5bfc\u81f4\u4e00\u6761\u8fb9\u6210\u4e3a\u5173\u952e\u8fb9\u7684\u6700\u5927\u6b21\u6570\u4e3a $ \\max \\{c_1,c_2,c_3,... \\ ,c_{m-1},c_m \\} \\div 2$ \uff08 $m$ \u4e3a\u8fb9\u6570\uff0c $c_i$ \u4e3a\u7b2c $i$ \u6761\u8fb9\u7684\u6d41\u91cf\uff09\u3002\u8fd9\u4f1a\u88ab\u6d41\u91cf\u5361\uff0c\u590d\u6742\u5ea6\u5f88\u7cdf\u7cd5\u3002\n\n\u6240\u4ee5 EK \u91c7\u7528\u4e86 BFS \u6765\u5bfb\u627e\u589e\u5e7f\u8def\uff0c\u8fd9\u786e\u4fdd\u4e86\u6bcf\u6b21\u627e\u5230\u7684\u589e\u5e7f\u8def\u90fd\u662f\u6700\u77ed\u8def\u5f84\u3002\u4f7f\u5f97\u590d\u6742\u5ea6\u4e0b\u964d\u3002\n\n\u590d\u6742\u5ea6\u5206\u6790\uff1a\uff08\u5b9a\u4e49\u5173\u952e\u8fb9\u4e3a\uff1a\u8be5\u8fb9\u7684\u6b8b\u91cf\u4e3a\u589e\u5e7f\u8def\u7684\u6b8b\u91cf\u7684\u8fb9\uff09\n\n\u4ece\u8fb9 $(u,v)$ \u6210\u4e3a\u5173\u952e\u8fb9\u5230\u4e0b\u4e00\u6b21\u6210\u4e3a\u5173\u952e\u8fb9\uff0c\u539f\u7ed3\u70b9\u5230 $u$ \u7684\u8ddd\u79bb\u81f3\u5c11\u589e\u52a0 $2$ \u4e2a\u5355\u4f4d\u3002\u7531\u4e8e\u4ece\u6e90\u7ed3\u70b9 $s$ \u5230\u7ed3\u70b9 $u$ \u7684\u7684\u6700\u77ed\u8def\u5f84\u4e2d\u95f4\u7ed3\u70b9\u4e0d\u53ef\u80fd\u5305\u62ec $s,u,t$ \uff0c\u4ece $s$ \u5230 $u$ \u7684\u6700\u77ed\u8def\u5f84\u6700\u957f\u4e3a $n-2$ \u3002\n\n\u4e00\u6761\u8fb9\u6210\u4e3a\u5173\u952e\u8fb9\u7684\u6700\u5927\u53ef\u80fd\u662f $(n-2) \\div 2$ \uff0c\u4e00\u5171\u6709 $m$ \u6761\u8fb9\uff0c\u5173\u952e\u8fb9\u603b\u6570\u4e3a $O(nm)$ \uff0cBFS \u590d\u6742\u5ea6\u4e3a $O(m)$ \uff0c\u6240\u4ee5 EK \u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u4e0a\u754c\u662f $O(nm^2)$ \u3002\n\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#define int long long\nusing namespace std;\nconst int maxn=35;\nconst int inf=0x7fffffff;\nint r[maxn][maxn],pre[maxn],m,n;\nbool vis[maxn];\nbool bfs(int s,int t) {\n\tint u;\n\tqueue<int>q;\n\tmemset(pre,0,sizeof(pre));\n\tmemset(vis,0,sizeof(vis));\n\tpre[s]=s;\n\tvis[s]=true;\n\tq.push(s);\n\twhile(!q.empty()) {\n\t\tu=q.front();\n\t\tq.pop();\n\t\tfor(int i=1; i<=n; i++) {\n\t\t\tif(r[u][i]>0&&!vis[i]) {//\u6709\u6d41\u91cf\u624d\u80fd\u6d41 \n\t\t\t\tpre[i]=u;\n\t\t\t\tvis[i]=true;\n\t\t\t\tif(i==t) return true;\n\t\t\t\tq.push(i);\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nint ek(int s,int t) {\n\tint flow=0,d;\n\twhile(bfs(s,t)) {\n\t\td=inf;\n\t\tfor(int i=t; i!=s; i=pre[i])\n\t\t\td=(d<r[pre[i]][i]?d:r[pre[i]][i]);//\u6b8b\u91cf\u53d6\u51b3\u4e8e\u6700\u5c0f\u8fb9\u7684\u6d41\u91cf \n\t\tfor(int i=t; i!=s; i=pre[i]) {\n\t\t\tr[pre[i]][i]-=d;\n\t\t\tr[i][pre[i]]+=d;//\u53cd\u8fb9\u6dfb\u52a0\u6d41\u91cf\uff0c\u4ee5\u8fdb\u884c\u53cd\u6094\u64cd\u4f5c\u3002 \n\t\t}\n\t\tflow+=d;\n\t}\n\treturn flow;\n}\nsigned main() {\n\tint s,t,u,v,w;\n\tscanf(\"%lld%lld%lld%lld\",&n,&m,&s,&t);\n\tfor(int i=1; i<=m; i++) {\n\t\tscanf(\"%lld%lld%lld\",&u,&v,&w);\n\t\tr[u][v]+=w;//\u91cd\u8fb9\u5904\u7406 \n\t}\n\tprintf(\"%lld\\n\",ek(s,t));\n\treturn 0;\n}\n```\n",
        "postTime": 1640326097,
        "uid": 434929,
        "name": "Usada_Pekora",
        "ccfLevel": 7,
        "title": "B3606 \u7f51\u7edc\u6d41\u6a21\u677f"
    },
    {
        "content": "\u7f51\u7edc\u6d41\u677f\u5b50\uff0c\u4f7f\u7528 Dinic \u7b97\u6cd5\n\n## \u5b9a\u4e49\n\n\u5b9a\u4e49\u4e00\u4e2a\u7f51\u7edc $G$ \u7684**\u6b8b\u91cf\u7f51\u7edc** $G'$ \u4e3a\u5176\u6240\u6709\u8282\u70b9\u548c\u5269\u4f59\u6d41\u91cf $> 0$ \u7684\u8fb9\u6784\u6210\u7684\u7f51\u7edc\u3002\n\n\u5b9a\u4e49**\u589e\u5e7f\u8def**\u4e3a\u6b8b\u91cf\u7f51\u7edc\u4e2d\u7684\u8fb9\u3002\n\n## EK \u7b97\u6cd5\n\n\u5927\u4f53\u601d\u8def\u5c31\u662f BFS \u5bfb\u627e\u589e\u5e7f\u8def\uff0c\u7136\u540e\u5bf9\u5176\u589e\u5e7f\uff08\u8d70\u8fc7\u8fd9\u6761\u8fb9\uff09\u3002\n\n\u5728\u6b8b\u91cf\u7f51\u7edc\u4e0a\uff0c\u4ece\u6e90\u70b9\u51fa\u53d1\u8fdb\u884c BFS \u76f4\u5230\u9047\u5230\u6c47\u70b9\uff0c\u7136\u540e\u589e\u5e7f\u3002\n\n\u6ce8\u610f\u5230\u8fd9\u91cc\u4e0d\u4e00\u5b9a\u4e00\u6b21\u627e\u5230\u6700\u4f18\u89e3\uff0c\u6211\u4eec\u5728\u589e\u5e7f\u65f6\u5efa\u7acb**\u53cd\u5411\u8fb9**\uff0c\u76ee\u7684\u662f\u8ba9\u6211\u4eec\u6709\u53cd\u6094\u7684\u673a\u4f1a\u3002\n\n## Dinic \u7b97\u6cd5\n\nDinic \u7b97\u6cd5\u5bf9 EK \u8fdb\u884c\u4e86\u6539\u8fdb\u3002\n\n\u5728\u6bcf\u6b21\u5bfb\u627e\u589e\u5e7f\u8def\u524d\uff0c\u6211\u4eec\u4f7f\u7528 BFS \u5bf9\u56fe\u8fdb\u884c\u5206\u5c42\u3002\u968f\u540e\u6211\u4eec\u4f7f\u7528 DFS \u5bfb\u627e\u589e\u5e7f\u8def\u3002\u663e\u7136\uff0c\u5982\u679c\u6c47\u70b9\u7684\u5c42\u6570\u4e3a 0 \u65f6\u589e\u5e7f\u7ed3\u675f\u3002\u5bf9\u4e8e\u589e\u5e7f\u5931\u8d25\u7684\u8fb9\uff0c\u53ef\u4ee5\u5728\u5c42\u6570\u4e0a\u6253\u6807\u8bb0\uff0c\u4f7f\u6548\u7387\u63d0\u5347\u3002\n\n\u8fd9\u6837\u505a\u7684\u597d\u5904\u5c31\u662f\u6700\u591a\u8fdb\u884c $n-1$ \u6b21\u589e\u5e7f\u5373\u53ef\u5f97\u5230\u7b54\u6848\u3002\u5e76\u4e14\uff0c\u7531\u4e8e\u6211\u4eec\u6bcf\u6b21\u589e\u5e7f\u4e86\u4e00\u6761\u8def\u540e\uff0c\u5c31\u4e0d\u53ef\u80fd\u518d\u589e\u5e7f\u7b2c\u4e8c\u6b21\uff0c\u4e0b\u4e00\u6b21\u589e\u5e7f\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7\u3002\u8fd9\u4e2a\u4f18\u5316\u53eb\u505a**\u5f53\u524d\u5f27\u4f18\u5316**\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u597d\u5904\u5c31\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u5145\u5206\u5229\u7528\u5269\u4f59\u6d41\u91cf\uff0c\u627e\u51fa\u5176\u5b83\u7684\u589e\u5e7f\u8def\u3002\u8fd9\u88ab\u79f0\u4e3a**\u591a\u8def\u589e\u5e7f**\u3002\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <queue>\n#include <cstring>\nusing namespace std;\n#define int long long\nconst int N = 205, M = 5005, INF = 0x3f3f3f3f3f3f3f3f;\nint st, ed, n, m;\nstruct Edge {\n\tint to, next;\n\tint weight;\n} e[M << 1];\nint head[N], ecnt = 1;\nvoid addedge(int from, int to, int w) {\n\te[++ecnt] = (Edge) { to, head[from], w };\n\thead[from] = ecnt; \n}\nqueue<int> q;\nint flow[N], cur[N], dep[N];\nbool bfs(int s) {\n\tmemset(dep, 0, sizeof(dep));\n\twhile (q.size()) q.pop();\n\tq.push(s);\n\tdep[s] = 1;\n\twhile (!q.empty()) {\n\t\tconst int x = q.front();\n\t\tq.pop();\n\t\tfor (int i=head[x]; i; i=e[i].next) {\n\t\t\tconst int y = e[i].to;\n\t\t\tif (!e[i].weight || dep[y]) continue;\n\t\t\tdep[y] = dep[x] + 1;\n\t\t\tq.push(y);\n\t\t}\n\t}\n\tif (dep[ed]) {\n\t\tfor (int i=1; i<=n; i++) cur[i] = head[i];\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nint dfs(int x, int f) {\n\tif (x == ed || !f) return f;\n\tint res = 0;\n\tfor (int i=cur[x]; i; i=e[i].next) {\n\t\tconst int y = e[i].to;\n\t\tcur[x] = i;\n\t\tif (dep[y] != dep[x] + 1) continue;\n\t\tint delta = dfs(y, min(f, e[i].weight));\n\t\tif (delta) {\n\t\t\tf -= delta, e[i].weight -= delta, e[i^1].weight += delta;\n\t\t\tres += delta;\n\t\t\tif (!f) break;\n\t\t}\n\t}\n\treturn res;\n}\nint dinic() {\n\tint res = 0;\n\twhile (bfs(st)) res += dfs(st, INF);\n\treturn res;\n}\nsigned main(void) {\n\tscanf(\"%lld%lld%lld%lld\", &n, &m, &st, &ed);\n\tfor (int i=1, u, v, w; i<=m; i++) {\n\t\tscanf(\"%lld%lld%lld\", &u, &v, &w);\n\t\taddedge(u, v, w), addedge(v, u, 0);\n\t}\n\tprintf(\"%lld\\n\", dinic());\n\treturn 0;\n}\n```",
        "postTime": 1625898478,
        "uid": 255095,
        "name": "PragmaGCC",
        "ccfLevel": 6,
        "title": "B3606 \u9898\u89e3"
    },
    {
        "content": "\u5f3a\u70c8\u63a8\u8350[\u7f51\u7edc\u6d41\u6d1b\u8c37\u65e5\u62a5](https://www.luogu.com.cn/blog/ONE-PIECE/wang-lao-liu-di-zong-jie)\uff08\u6211\u5c31\u662f\u4ece\u8fd9\u5b66\u7684\uff09\u3002\n\n\u6ce8\uff1a\u672c\u7bc7\u9898\u89e3\u4e0d\u4fa7\u91cd\u4e8e\u4e25\u8c28\u7684\u8bc1\u660e\uff0c\u66f4\u504f\u5411\u4e8e\u7406\u89e3\u7684\u65b9\u5f0f\u3002\n\n\u6211\u4eec\u5148\u770b\u4e00\u4e2a\u5b9e\u9645\u4f8b\u5b50\uff08\u5f15\u7528\u65e5\u62a5\uff09\uff1a\n\n> \u6211\u4eec\u60f3\u8c61\u4e00\u4e0b\u81ea\u6765\u6c34\u5382\u5230\u4f60\u5bb6\u7684\u6c34\u7ba1\u7f51\u662f\u4e00\u4e2a\u590d\u6742\u7684\u6709\u5411\u56fe\uff0c\u6bcf\u4e00\u8282\u6c34\u7ba1\u90fd\u6709\u4e00\u4e2a\u6700\u5927\u627f\u8f7d\u6d41\u91cf\u3002\u81ea\u6765\u6c34\u5382\u4e0d\u653e\u6c34\uff0c\u4f60\u5bb6\u5c31\u65ad\u6c34\u4e86\u3002\u4f46\u662f\u5c31\u7b97\u81ea\u6765\u6c34\u5382\u62fc\u547d\u7684\u5f80\u7ba1\u7f51\u91cc\u9762\u6ce8\u6c34\uff0c\u4f60\u5bb6\u6536\u5230\u7684\u6c34\u6d41\u91cf\u4e5f\u662f\u4e0a\u9650\uff08\u6bd5\u7adf\u6bcf\u6839\u6c34\u7ba1\u627f\u8f7d\u91cf\u6709\u9650\uff09\u3002\u4f60\u60f3\u77e5\u9053\u4f60\u80fd\u591f\u62ff\u5230\u591a\u5c11\u6c34\uff0c\u8fd9\u5c31\u662f\u4e00\u79cd\u7f51\u7edc\u6d41\u95ee\u9898\u3002\n\n\u6211\u4eec\u4ece\u4e2d\u53ef\u4ee5\u63d0\u53d6\u5230\u5f88\u591a\u4fe1\u606f\uff1a\n\n1.\u56fe\u4e2d\u5b58\u5728\u6e90\u70b9\uff08\u81ea\u6765\u6c34\u5382\uff09\u548c\u6c47\u70b9\uff08\u4f60\u5bb6\uff09\u3002\n\n2.\u6bcf\u6761\u8fb9\u90fd\u6709\u4e00\u4e2a\u6d41\u91cf\u4e0a\u9650\uff0c\u6240\u901a\u8fc7\u7684\u6d41\u91cf\u4e0d\u80fd\u8d85\u8fc7\u4e0a\u9650\u3002\n\n3.\u4f60\u60f3\u77e5\u9053\u4ece\u6c47\u70b9\u6700\u591a\u80fd\u83b7\u5f97\u591a\u5c11\u6d41\u91cf\uff08\u4f60\u80fd\u83b7\u5f97\u591a\u5c11\u6c34\uff09\u3002\n\n## \u6700\u5927\u6d41\uff08EK\u7b97\u6cd5\uff09\n\n\u5982\u679c\u4f60\u73b0\u5728\u6709\u4e00\u4e2a\u7f51\u7edc\u6d41\u56fe\uff0c\u4f60\u60f3\u628a\u5b83\u624b\u73a9\u51fa\u6765\uff0c\u4f60\u5e94\u8be5\u600e\u4e48\u505a\uff1f\n\n\u5148\u627e\u5230\u4e00\u6761\u4ece\u6e90\u70b9\u5230\u6c47\u70b9\u7684\u4e00\u6761\u8fb9\u7684\u6d41\u91cf\u90fd\u4e0d\u4e3a `0` \u7684\u8def\uff0c\u5b83\u88ab\u79f0\u4e3a **\u589e\u5e7f\u8def** \uff0c\u8fd9\u6761\u589e\u5149\u8def\u80fd\u901a\u8fc7\u7684\u6700\u5927\u6d41\u91cf\u663e\u7136\u5c31\u662f\u589e\u5149\u8def\u6240\u7ecf\u8fc7\u7684\u6d41\u91cf\u7684 **\u6700\u5c0f\u503c** \u3002\n\n\u800c\u6211\u4eec\u7684 `EK` \u7b97\u6cd5\u5c31\u662f\u6839\u636e\u589e\u5e7f\u8def\u6c42\u89e3\u7684\uff0c\u7531\u6b64\u6211\u4eec\u5c31\u53ef\u4ee5\u8bbe\u8ba1\u51fa `EK` \u7b97\u6cd5\u7684\u96cf\u5f62\u3002\n\n\u5148\u5199\u4e00\u4e2a `bfs` \u4f7f\u5176\u80fd\u627e\u5230\u4e00\u6761\u589e\u5e7f\u8def\uff0c\u6bcf\u6b21\u8c03\u7528\u8fd9\u4e2a `dfs` \uff0c\u5c06\u6c42\u51fa\u7684\u589e\u5e7f\u8def\u7d2f\u52a0\u7b54\u6848\uff08\u6d41\u91cf\u6700\u5c0f\u503c\uff09\uff0c\u518d\u628a\u8fd9\u6761\u589e\u5e7f\u8def\u4e0a\u6240\u6709\u7684\u6d41\u91cf **\u51cf\u53bb** \u8fd9\u4e2a\u6700\u5c0f\u503c\u3002\n\n\u4e3a\u4ec0\u4e48\u8981\u51cf\u53bb\u5462\uff1f\u56e0\u4e3a\u6d41\u8fc7\u53bb\u5360\u7528\u4e86\u4e00\u90e8\u5206\u7684\u6d41\u91cf\uff0c\u8fd9\u4e9b\u6d41\u91cf\u4e0d\u80fd\u518d\u6b21\u4f7f\u7528\u3002\n\n\u96be\u9053\u8fd9\u5c31\u662f\u5168\u90e8\u7684 `EK` \u7b97\u6cd5\u5417\uff1f\n\n\u4e0d\uff0c\u6211\u4eec\u770b\u8fd9\u6837\u4e00\u4e2a\u4f8b\u5b50\uff08\u518d\u6b21\u501f\u9274\u65e5\u62a5\uff09\n![](https://cdn.luogu.com.cn/upload/pic/24602.png)\n\n\u5982\u679c\u7b2c\u4e00\u6b21\u7684\u589e\u5e7f\u8def\u662f\uff1a$s \\rightarrow 3\\rightarrow 5 \\rightarrow t$\u6d41\u91cf\u663e\u7136\u662f `10`\uff0c\u7b2c\u4e8c\u6b21\u7684\u589e\u5e7f\u8def\u662f $s \\rightarrow 4 \\rightarrow 5 \\rightarrow t$ \u6d41\u91cf\u663e\u7136\u662f`35`\u3002\n\n\u800c\u8fd9\u79cd\u65b9\u6848\u663e\u7136\u4e0d\u5982\uff1a$s \\rightarrow 4 \\rightarrow 5 \\rightarrow t$ \u6d41\u91cf\u4e3a `45` \uff0c$s \\rightarrow 3 \\rightarrow t$\u6d41\u91cf\u4e3a `10`\u3002\n\n\u8fd9\u600e\u4e48\u5904\u7406\u5462\uff1f`dp` ? \u9ad8\u65af\u6d88\u5143\uff1f\n\n\u5176\u5b9e\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ef\u4ee5\u5efa **\u53cd\u5411\u8fb9**\u3002\n\n\u4e3a\u4ec0\u4e48\u53cd\u5411\u8fb9\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f\u6211\u4eec\u5728\u5efa\u53cd\u5411\u8fb9\u7684\u65f6\u5019\u6d41\u91cf\u8d4b\u4e3a `0`\uff0c\u5728\u7d2f\u52a0\u7b54\u6848\u7684\u65f6\u5019\uff0c\u666e\u901a\u8fb9\u51cf\u53bb\u6700\u5c0f\u503c\uff0c\u800c\u53cd\u5411\u8fb9 **\u52a0\u4e0a** \u6700\u5c0f\u503c\u3002\n\n\u8fd9\u5c31\u53ef\u4ee5\u652f\u6301\u6211\u4eec\u8fdb\u884c**\u53cd\u6094**\uff0c\u4e4b\u524d\u7684\u64cd\u4f5c\u4e0d\u591f\u4f18\u79c0\uff0c\u540e\u9762\u6211\u4eec\u53d1\u73b0\u66f4\u4f18\u79c0\u7684\u64cd\u4f5c\u5c31\u53ef\u4ee5\u89e3\u51b3\u3002\n\n\u6211\u4eec\u5982\u4f55\u5904\u7406\u53cd\u5411\u8fb9\u4e0e\u666e\u901a\u8fb9\u7684\u8054\u7cfb\u5462\uff1f\u8fd9\u91cc\u7528 `vector` \u5b58\u8fb9\u5c31\u4f1a\u7565\u663e\u9ebb\u70e6\uff0c\u6240\u4ee5\u6211\u4eec\u7528 **\u90bb\u63a5\u8868** \u5b58\u8fb9\uff0c\u800c\u4e14\u666e\u901a\u8fb9\u548c\u53cd\u5411\u8fb9\u662f\u6210\u5bf9\u5b58\u5728\u7684\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528**\u5f02\u6216**\u6765\u627e\u53cd\u5411\u8fb9\u3002\n\n\u5206\u6790\u4e00\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u6211\u4eec\u6700\u591a\u9700\u8981\u627e `m` \u6b21\u589e\u5e7f\u8def\uff0c$dfs$ \u627e\u589e\u5e7f\u8def\u65f6\u95f4\u4e3a\u6700\u591a $\\mathcal{O}(nm)$\uff0c\u56e0\u4e3a $bfs$ \u662f\u5e7f\u5ea6\u7684\uff0c\u4e00\u4e2a\u56fe\u91cc\u9762\u6700\u591a\u6709 $nm$ \u4e2a\u589e\u5e7f\u8def\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u4e3a $nm^2$ \u3002\n\n\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u6bcf\u6b21\u627e\u7684\u662f\u957f\u5ea6\u6700\u77ed\u7684\u589e\u5e7f\u8def\uff0c\u8fdc\u8fdc\u8fbe\u4e0d\u5230 $nm$ \uff0c\u589e\u5e7f\u6b21\u6570\u4e5f\u8fbe\u4e0d\u5230 `m` \u6b21\uff0c\u6240\u4ee5\u6b63\u5e38\u80fd\u5904\u7406 $10^3$ \u5230 $10^4$ \u7684\u56fe\u3002\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff1a\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<string>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n#define ll long long \nusing namespace std;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nusing namespace std;\nconst ll inf=922337203685477587;\nint n,m,s,t;\nstruct point{\n    int v,next;\n\tll val;\n}a[200001];\nint top=1,head[100001];\ninline void add(int u,int v,ll w){\n    a[++top].v=v;\n    a[top].val=w;\n    a[top].next=head[u];\n    head[u]=top;\n}\nint book[101010];\nstruct Pre{\n    int v,edge; \n}b[100001];\ninline bool bfs(){\n    queue<int> q;\n    memset(book,0,sizeof(book));\n    memset(b,-1,sizeof(b));\n    book[s]=1;\n    q.push(s);\n    while(!q.empty()){\n        int u=q.front();\n        q.pop();\n        for(int i=head[u];i;i=a[i].next){\n            int x=a[i].v;\n            if(!book[x]&&a[i].val){\n            \tb[x].v=u;\n            \tb[x].edge=i;\n            \tif(x==t)\n\t\t\t\t\treturn 1;\n            \tbook[x]=1;\n            \tq.push(x);\n            }\n        }\n    }\n    return 0;\n}\nll EK(){\n    ll ans=0;\n    while(bfs()){\n        ll minn=inf;\n        for(int i=t;i!=s;i=b[i].v)\n            minn=min(minn,a[b[i].edge].val);\n        for(int i=t;i!=s;i=b[i].v){\n            a[b[i].edge].val-=minn;\n            a[b[i].edge^1].val+=minn;\n        }\n    \tans+=minn;\n\t}\n    return ans;\n}\nint main(){\n    n=read(),m=read(),s=read(),t=read();\n    for(int i=1;i<=m;i++){\n    \tint u,v;\n\t\tll w;\n    \tu=read(),v=read();\n    \tcin>>w;\n\t\tadd(u,v,w);\n\t\tadd(v,u,0);\t\n\t}\n\tcout<<EK();\n    return 0;\n}\n```\n\u8c22\u8c22\u5927\u5bb6\uff01",
        "postTime": 1627395111,
        "uid": 253738,
        "name": "\u542c\u53d6MLE\u58f0\u4e00\u7247",
        "ccfLevel": 7,
        "title": "B3606 \u7f51\u7edc\u6d41"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u6a21\u677f\u9898\u3002\u672c\u9898\u7684\u6570\u636e\u8303\u56f4\u5f88\u5c0f\uff0c\u5e76\u4e0d\u9700\u8981\u4f7f\u7528 Dinic, ISAP \u751a\u81f3 HLPP \u7b49\u9ad8\u7aef\u7684\u65b9\u6cd5\uff0c\u53ea\u9700\u8981\u6700\u6734\u7d20\u7684 Edmonds-Karp \u7b97\u6cd5\u3002\uff08Ford-Fulkerson \u6ca1\u6709\u8fdb\u884c\u6d4b\u8bd5\uff0c\u4f46\u662f\u590d\u6742\u5ea6\u7ea7\u522b\u5e94\u8be5\u80fd\u8fc7\uff09\u3002\n\n# Ford-Fulkerson \u7b97\u6cd5\n\nFord-Fulkerson \u7b97\u6cd5\u5176\u5b9e\u662f\u4e00\u4e2a\u975e\u5e38\u6734\u7d20\u7684\u601d\u60f3\u3002\u5176\u6838\u5fc3\u6b65\u9aa4\u662f**\u5bfb\u627e\u589e\u5e7f\u8def**\uff0c\u5176\u5b9e\u5c31\u662f\u641c\u7d22\u4e00\u6761\u4ece\u6e90\u70b9 $s$ \u5230\u6c47\u70b9 $t$ \u7684\u8def\u5f84\uff0c\u4f7f\u5f97\u9014\u5f84\u7684\u6bcf\u4e00\u6761\u8fb9\u90fd\u80fd\u901a\u8fc7\u81f3\u5c11 $1$ \u4e2a\u6d41\u91cf\u3002\u8fd9\u6837\u76f8\u5f53\u4e8e\u628a\u603b\u7684\u6700\u5927\u6d41\u589e\u52a0\u4e86 $1$\u3002\n\n\u5b9e\u9645\u8fed\u4ee3\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8981\u5728\u6bcf\u4e00\u6b21\u641c\u7d22\u5230\u8def\u5f84\u540e\u5c06\u8fd9\u6761\u8fb9\u539f\u672c\u7684\u6700\u5927\u5bb9\u91cf\u51cf $1$\u3002\u83b7\u5f97\u7684\u65b0\u56fe\u7f51\u7edc\u79f0\u4e3a**\u6b8b\u7559\u7f51\u7edc**\u3002\u4e4b\u540e\u7684\u8fed\u4ee3\u5c31\u5728\u6b8b\u7559\u7f51\u7edc\u4e0a\u8fdb\u884c\uff0c\u4e0d\u65ad\u66f4\u65b0\uff0c\u77e5\u9053\u627e\u4e0d\u5230\u65b0\u7684\u589e\u5e7f\u8def\uff0c\u5219\u8fed\u4ee3\u7ed3\u675f\uff0c\u6700\u5927\u6d41\u88ab\u627e\u5230\u3002\n\n\u7136\u800c\u5982\u679c\u76f4\u63a5\u5728\u539f\u56fe\u4e0a\u51cf\uff0c\u4f1a\u5f97\u5230\u9519\u8bef\u7684\u7ed3\u8bba\u3002\u8fd9\u662f\u56e0\u4e3a\uff0c\u6bcf\u4e00\u6b21\u8fed\u4ee3\u662f**\u6709\u540e\u6548\u6027**\u7684\u3002\u5982\u679c\u8fd9\u6761\u589e\u5e7f\u8def\u4e0d\u662f\u6700\u5927\u6d41\u7ecf\u8fc7\u7684\u589e\u5e7f\u8def\uff0c\u4ed6\u5c31\u4f1a\u5360\u4f4f\u6b63\u786e\u7684\u5176\u4ed6\u8def\u5f84\u7684\u6d41\u91cf\u3002\n\n\u600e\u6837\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f\u6211\u4eec\u9700\u8981\u5bf9\u6bcf\u6761\u8fb9\u8865\u5145\u4e00\u6761**\u65b9\u5411\u76f8\u53cd\uff0c\u6d41\u91cf\u4e3a\u5df2\u7528\u6d41\u91cf**\u7684\u8fb9\u3002\u8fd9\u6837\u505a\u7684\u539f\u7406\u53ef\u4ee5\u7406\u89e3\u4e3a\uff1a\u4e00\u6761\u6c34\u6c9f\u867d\u7136\u662f\u5355\u5411\u7684\uff0c\u4f46\u662f\u7531\u4e8e\u641c\u5230\u7684\u589e\u5e7f\u8def\u53ef\u80fd\u662f\u9519\u8bef\u7684\uff0c\u9700\u8981\u53cd\u5411\u7684\u6c34\u6d41**\u501f\u9053**\u628a\u9519\u8bef\u5360\u7528\u7684\u6d41\u91cf**\u62b5\u6d88\u6389**\u3002\n\n\u8fd9\u4e2a\u7b97\u6cd5\u7684\u4e3b\u8981\u5185\u5bb9\u5c31\u662f\u5bfb\u627e\u589e\u5e7f\u8def\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u74f6\u9888\u4e5f\u5728\u4e8e\u589e\u5e7f\u8def\u3002\u5982\u679c\u91c7\u7528 DFS\uff0c\u53ef\u80fd\u4f1a\u9677\u5165\u957f\u65f6\u95f4\u7684\u65e0\u6548\u8fed\u4ee3\uff0c\u5bfc\u81f4\u6781\u4f4e\u7684\u7b97\u6cd5\u6548\u7387\u3002\n\n\u5982\u679c\u7528 BFS \u6765\u5b9e\u73b0\uff0c\u8fed\u4ee3\u6b21\u6570\u5c06\u5927\u5927\u964d\u4f4e\u3002\n\n# Edmonds-Karp \u7b97\u6cd5\n\n\u5982\u679c\u7528 BFS \u6765\u5b9e\u73b0 Ford-Fulkerson \u7b97\u6cd5\uff0c\u5c31\u662f Edmonds-Karp \u7b97\u6cd5\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u5bfb\u627e\u589e\u5e7f\u8def\u9700\u8981 $O(VE)$ \u6b21\u8fed\u4ee3\uff0c\u800c\u6bcf\u6b21 BFS \u590d\u6742\u5ea6\u662f $O(E)$\uff0c\u56e0\u6b64\u603b\u590d\u6742\u5ea6\u662f $O(VE^2)$\uff0c\u53ef\u4ee5\u89e3\u51b3 $V\\le 50,E\\le1000$ \u7684\u95ee\u9898\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int inf=1e17,N=250;\nint n,m,s,t,g[N][N],pre[N];\ninline int min(int x, int y) {\n    return x<y?x:y;\n}\ninline int read() {\n    char ch=getchar();\n    while(ch<'0'||ch>'9') ch=getchar();\n    int x=0;\n    while(ch>='0'&&ch<='9') x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n    return x;\n}\nint bfs()  {\n\tint flow[N];\n\tmemset(pre,-1,sizeof(pre));\n\tflow[s]=inf;pre[s]=0;\n\tqueue<int>Q; Q.push(s);\n\twhile(!Q.empty()) {\n\t\tint u=Q.front();Q.pop();\n\t\tif(u==t) break;\n\t\tfor(int i=1;i<=m;++i)\n\t\t\tif(i^s&&g[u][i]&&pre[i]==-1) {\n\t\t\t\tpre[i]=u,Q.push(i);\n\t\t\t\tflow[i]=min(flow[u],g[u][i]);\n\t\t\t}\n\t}\n\tif(pre[t]==-1) return -1;\n\treturn flow[t];\n}\nint mflow() {\n\tint Mflow=0;\n\twhile(true) {\n\t\tint f=bfs();\n\t\tif(f==-1) break;\n\t\tint cur=t;\n\t\twhile(cur^s) {\n\t\t\tint fa=pre[cur];\n\t\t\tg[fa][cur]-=f;\n\t\t\tg[cur][fa]+=f;\n\t\t\tcur=fa;\n\t\t}\n\t\tMflow+=f;\n\t}\n\treturn Mflow;\n}\nsigned main(void) {\n\tn=read(),m=read(),s=read(),t=read();\n\tfor(int i=0;i<m;++i) {\n\t\tint u,v,w;\n\t\tu=read(),v=read(),w=read();\n\t\tg[u][v]+=w;\n\t}\n\tprintf(\"%lld\\n\",mflow());\n\treturn 0;\n}\n```\n\n~~\u76f4\u63a5\u4ece\u4e3b\u9898\u5e93\u677f\u5b50\u7c98\u8fc7\u6765\u7684 maxn \u90fd\u6ca1\u6539~~\n\n# \u5176\u5b83\u7b97\u6cd5\n\n\u6c42\u89e3\u6700\u5927\u6d41\u8fd8\u53ef\u4ee5\u7528 Dinic \u548c ISAP \u7b97\u6cd5\u3002\u4e24\u79cd\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f $O(V^2E)$\uff0c\u4f46\u662f ISAP \u7a0d\u5feb\u4e00\u4e9b\u3002\n\n\u6b64\u5916\u8fd8\u6709 HLPP \u7b97\u6cd5\uff0cMPM \u7b97\u6cd5\u7b49\u7b49\u3002",
        "postTime": 1626013019,
        "uid": 372299,
        "name": "\u8d85\u7ea7\u739b\u4e3d\u738b\u5b50",
        "ccfLevel": 5,
        "title": "\u7f51\u7edc\u6d41\u57fa\u7840 - B3606"
    }
]