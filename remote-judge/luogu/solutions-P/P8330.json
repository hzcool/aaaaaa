[
    {
        "content": "\u90fd\u6709\u4f17\u6570\u4e86\uff0c\uff0c\uff0c\u611f\u89c9\u5c31\u4e0d\u80fd polylog\uff01\n\n\u5c31\u662f\u9009\u4e00\u6bb5\u533a\u95f4\uff0c\u7b97\u51fa\u4ed6\u91cc\u9762\u7684\u4f17\u6570 + \u5916\u9762\u7684\u4f17\u6570\u6700\u5927\u503c\uff0c\u7136\u540e\u8fd9\u4e2a\u8d21\u732e\u662f\u5916\u9762\u4f17\u6570\u989c\u8272\u7684\u3002\n\n\u8003\u8651\u5bf9\u6bcf\u79cd\u989c\u8272\u5927\u5c0f\u6839\u53f7\u5206\u6cbb\uff0c\u6682\u4e14\u4ee5 $\\sqrt{n}$ \u4e3a\u754c\u3002\n\n\u5bf9\u4e8e $> \\sqrt{n}$ \u7684\u989c\u8272\uff0c\u53ef\u4ee5 $O(n)$ \u66b4\u529b\u505a\uff0c\u5148\u9884\u5904\u7406\u5173\u4e8e\u8fd9\u4e2a\u989c\u8272\u7684\u524d\u7f00\u548c\uff0c\u53ef\u4ee5\u5feb\u901f\u6c42\u51fa\u4e00\u6bb5\u533a\u95f4\u6709\u591a\u5c11\u8fd9\u4e2a\u989c\u8272\uff0c\u53ef\u4ee5\u679a\u4e3e\u6bcf\u79cd\u53e6\u5916\u4e00\u4e2a\u989c\u8272\uff0c\u7136\u540e\u7528 $O(\u8fd9\u4e2a\u989c\u8272\u5927\u5c0f)$ \u7684\u590d\u6742\u5ea6\u7b97\u51fa\u4ed6\u5728\u4e24\u8fb9\u6216\u8005\u5728\u4e2d\u95f4\u7684\u8d21\u732e\u3002\u590d\u6742\u5ea6 $O(n \\sqrt{n})$\n\n\u4e8e\u662f\u6211\u4eec\u53ea\u5269\u4e0b\u4e86\u4e24\u4e24\u90fd\u662f $\\le \\sqrt{n}$  \u7684\u3002\n\n\u8003\u8651\u6211\u4eec\u53ef\u4ee5\u66b4\u529b\u679a\u4e3e\u9009\u7684\u533a\u95f4\u5de6\u53f3\u7aef\u70b9\u4e86\uff0c\u56e0\u4e3a\u5982\u679c\u4e24\u8fb9\u90fd\u6709\u6570\uff0c\u4e24\u8fb9\u5916\u9762\u90fd\u662f\u8fd9\u4e2a\u989c\u8272\u4e00\u5b9a\u4e0d\u52a3\u3002\u8003\u8651\u626b\u63cf\u7ebf\uff0c\u679a\u4e3e\u9009\u7684\u53f3\u7aef\u70b9\uff0c\u7136\u540e\u66b4\u529b\u679a\u4e3e\u8fd9\u4e2a\u989c\u8272\u524d\u9762\u6240\u6709\u51fa\u73b0\u7684\u4f4d\u7f6e\u5f53\u5de6\u7aef\u70b9\u3002\n\n\u7136\u540e\u6211\u4eec\u8981\u5feb\u901f\u7b97\u8fd9\u4e4b\u95f4\u7684\u4f17\u6570\uff0c\u4f3c\u4e4e\u4e0d\u592a\u80fd\u505a\uff0c\u4f46\u5176\u5b9e\u6211\u4eec\u53ea\u7528\u8003\u8651\u51fa\u73b0\u6b21\u6570 $\\le \\sqrt{n}$ \u7684\u989c\u8272\u5c31\u884c\uff0c\u7b54\u6848\u4e5f\u80af\u5b9a\u4e0d\u8d85\u8fc7\u6839\u53f7\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5f00\u4e2a\u6570\u7ec4 $S_i$ \u8868\u793a\u73b0\u4ee5 $i$ \u4e3a\u5de6\u7aef\u70b9\u7684\u4f17\u6570\uff08\u53ea\u7ba1\u6b21\u6570\u5c0f\u4e8e\u6839\u53f7\u7684\uff09\uff0c\u8003\u8651\u66f4\u65b0\u7684\u65f6\u5019\u4e5f\u662f\u66b4\u529b\u679a\u4e3e\u4ed6\u7684\u4e4b\u524d\u6240\u6709\u989c\u8272\u7684\u4f4d\u7f6e $j$\uff0c\u8003\u8651\u4e4b\u95f4\u6709 $k$ \u4e2a\u8fd9\u4e2a\u989c\u8272\u7684\uff0c\u9700\u8981\u505a\u7684\u5c31\u662f\u5bf9 $S_{1 \\sim j}$ \u5bf9 $k$ \u8fdb\u884c $\\text{chkMax}$\uff0c\u6211\u4eec\u53d1\u73b0 $S$ \u6570\u7ec4\u662f\u4e0d\u589e\u7684\uff0c\u5e76\u4e14\u503c\u57df\u4e0d\u8d85\u8fc7\u6839\u53f7\uff0c\u90a3\u5176\u5b9e\u80fd $\\text{chkMax}$ \u5c31\u5f80\u524d\u8df3\uff0c\u4e0d\u80fd\u5c31\u505c\u5c31\u597d\u4e86\uff0c\u8003\u8651\u6bcf\u6b21 chkMax \u81f3\u5c11\u4f7f $S$ \u603b\u548c $+1$\uff0c\u800c\u6700\u7ec8 $S$ \u603b\u548c\u4e0d\u4f1a\u8d85\u8fc7 $n \\sqrt {n}$\uff0c\u90a3\u4e48\u590d\u6742\u5ea6\u5c31\u662f\u5bf9\u7684\u3002\n\n\u7efc\u4e0a\uff0c\u56e0\u4e3a\u4e24\u4fa7\u90fd\u8fbe\u5230\u4e86\u4e0a\u5c4a\uff0c\u6240\u4ee5\u5206\u5757\u754c\u662f\u5408\u9002\u7684\uff08\u8fd9\u8303\u56f4\u4e5f\u4e0d\u592a\u53ef\u80fd\u6709 $\\log$ \u4e86\u3002\u3002\n\n\u8fd8\u8981\u6ce8\u610f\u4e00\u4e9b\u7ec6\u8282\uff0c\u4f8b\u5982\u4e24\u8fb9\u53ef\u80fd\u53ea\u6709\u4e00\u8fb9\u6709\u8fd9\u4e2a\u989c\u8272\uff0c\u8fd8\u5f97\u6b63\u53cd\u626b\u4e00\u904d\uff1f\n\n\u603b\u590d\u6742\u5ea6 $O(n \\sqrt {n})$\n\n```cpp\n// Skyqwq\n#include <bits/stdc++.h>\n\n#define pb push_back\n#define fi first\n#define se second\n#define mp make_pair\n\nusing namespace std;\n\ntypedef pair<int, int> PII;\ntypedef long long LL;\n\ntemplate <typename T> bool chkMax(T &x, T y) { return (y > x) ? x = y, 1 : 0; }\ntemplate <typename T> bool chkMin(T &x, T y) { return (y < x) ? x = y, 1 : 0; }\n\ntemplate <typename T> void inline read(T &x) {\n    int f = 1; x = 0; char s = getchar();\n    while (s < '0' || s > '9') { if (s == '-') f = -1; s = getchar(); }\n    while (s <= '9' && s >= '0') x = x * 10 + (s ^ 48), s = getchar();\n    x *= f;\n}\n\nconst int N = 2e5 + 5;\n\nint n, a[N], b[N], len, d[N], t, ans, w[N], B, s[N], pos[N], L[N], R[N], loc[N], cnt[N];\n\nint S[N];\n\nint inline get(int x) {\n    return lower_bound(b + 1, b + 1 + len, x) - b;\n}\n\nvector<int> c[N];\n\nvoid inline pr() {\n    for (int i = 1; i <= n; i++) b[i] = a[i];\n    len = n;\n    sort(b + 1, b + 1 + len);\n    len = unique(b + 1, b + 1 + len) - b - 1;\n    for (int i = 1; i <= len; i++) w[i] = 0;\n    for (int i = 1; i <= n; i++) a[i] = get(a[i]);\n    for (int i = 1; i <= n; i++) loc[i] = c[a[i]].size(), c[a[i]].pb(i);\n    B = sqrt(n);\n    // B = 1;\n    for (int i = 1; i <= n; i++) {\n        pos[i] = (i - 1) / B + 1;\n        if (!L[pos[i]]) L[pos[i]] = i;\n        R[pos[i]] = i;\n    }\n}\n\n// x \u5728\u4e24\u8fb9\uff0cx \u524d\u7f00\u548c s\uff0cy \u5728\u4e2d\u95f4\n\nvoid inline wk1(int x, int y) {\n    int v = -1e9, ret = 0;\n    for (int A = 0; A < (int)c[y].size(); A++) {\n        chkMax(v, -A + s[c[y][A] - 1]);\n        chkMax(ret, v + A + 1 + s[n] - s[c[y][A]]);\n    }\n    chkMax(w[x], ret);\n}\n\n// y \u5728\u4e24\u8fb9\uff0cx \u5728\u4e2d\u95f4\uff0cx \u524d\u7f00\u548c s\n\nvoid inline wk2(int x, int y) {\n    int v = -1e9, ret = 0;\n    for (int A = 0; A < (int)c[y].size(); A++) {\n        chkMax(ret, v + s[c[y][A] - 1] + (int)c[y].size() - A + 1);\n        chkMax(v, A + -s[c[y][A]]);\n        chkMax(ret, s[c[y][A] - 1] + (int)c[y].size() - A);\n        chkMax(ret, A + 1 + s[n] - s[c[y][A]]);\n    }\n    chkMax(w[y], ret);\n}\n\nvoid inline big() {\n    for (int i = 1; i <= len; i++) {\n        if ((int)c[i].size() > B) {\n            for (int j = 1; j <= n; j++) s[j] = 0;\n            for (int v: c[i]) s[v] = 1;\n            for (int j = 1; j <= n; j++) s[j] += s[j - 1];\n            for (int j = 1; j <= len; j++)\n                if (i != j) wk1(i, j);\n            for (int j = 1; j <= len; j++)\n                if ((int)c[j].size() <= B) wk2(i, j);\n        }\n    }\n}\n\nvoid inline upd(int x, int y) {\n    while (x && S[x] < y) {\n        S[x] = y;\n        --x;\n    }\n}\n\nvoid inline small() {\n    for (int i = 1; i <= n; i++) {\n        if ((int)c[a[i]].size() <= B) {\n            // do calc\n            int val = (int)c[a[i]].size() - loc[i] + S[1];\n            for (int j = loc[i] - 1; j >= 0; j--) {\n                int p = c[a[i]][j];\n                chkMax(val, j + 1 + (int)c[a[i]].size() - loc[i] + S[p + 1]);\n            }\n            chkMax(w[a[i]], val);\n            // do upd\n            for (int j = loc[i]; j >= 0; j--)\n                upd(c[a[i]][j], loc[i] - j + 1);\n        }\n    }\n    int mx = 0;\n    for (int i = n; i; i--) {\n        chkMax(w[a[i]], mx + loc[i] + 1);\n        cnt[a[i]]++;\n        chkMax(mx, cnt[a[i]]);\n    }\n}\n\nvoid inline out() {\n    ans = 0;\n    for (int i = 1; i <= len; i++)\n        chkMax(ans, w[i]);\n    for (int i = 1; i <= len; i++)\n        if (w[i] == ans) d[++t] = b[i];\n    printf(\"%d\\n\", ans);\n    sort(d + 1, d + 1 + t);\n    t = unique(d + 1, d + 1 + t) - d - 1;\n    for (int i = 1; i <= t; i++) printf(\"%d\\n\", d[i]);\n}\n\nvoid inline clr() {\n    for (int i = 1; i <= len; i++) c[i].clear();\n    for (int i = 1; i <= n; i++) cnt[i] = 0, S[i] = 0, pos[i] = L[i] = R[i] = w[i] = 0;\n    ans = 0;\n    t = 0;\n    len = 0;\n}\n\nint main() {\n    //freopen(\"mode.in\", \"r\", stdin);\n    //freopen(\"mode.out\", \"w\", stdout);\n    int T; read(T);\n    while (T--) {\n        read(n); \n        for (int i = 1; i <= n; i++) read(a[i]);\n        pr();\n        big();\n        small();\n        out();\n        clr();\n    }\n    return 0;\n}\n\n\n```",
        "postTime": 1651592837,
        "uid": 161687,
        "name": "Remake",
        "ccfLevel": 0,
        "title": "P8330 [ZJOI2022] \u4f17\u6570"
    },
    {
        "content": "## \u524d\u8a00\n\u8fd9\u54ea\u6709\u9ed1\u554a\u2026\u2026\n## \u601d\u8def\n\u663e\u7136\u4e00\u5b9a\u662f\u5728\u4e0d\u5728\u5b50\u533a\u95f4\u91cc\u7684\u9009\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\uff0c\u5728\u5b50\u533a\u95f4\u91cc\u9009\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\uff0c\u7136\u540e\u8f6c\u8fc7\u53bb\u3002\n\n\u66b4\u529b A\uff1a\u626b\u6240\u6709\u533a\u95f4\u5224\u65ad\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\frac{n^3}{w})$\uff0c\u56e0\u4e3a\u8981\u50a8\u5b58\u51fa\u73b0 $x$ \u6b21\u7684\u6570\u7684\u96c6\u5408\u3002\n\n\u66b4\u529b B\uff1a\u679a\u4e3e\u4ece $x$ \u53d8\u6210 $y$\u7684\u7b54\u6848\uff0c\u53ef\u4ee5\u53cc\u6307\u9488\u626b\u4e00\u904d\uff0c\u590d\u6742\u5ea6 $O(cn)$\uff0c$c$ \u4e3a\u989c\u8272\u6570\u3002\n\n\u6839\u53f7\u5206\u6cbb\uff1a\u5bf9\u4e8e\u51fa\u73b0\u6b21\u6570\u5927\u4e8e $B$ \u7684\u8dd1\u66b4\u529b B\uff0c\u4e0d\u7136\u8dd1\u66b4\u529b A\u3002\n\n\u7136\u800c\u66b4\u529b A \u8fd8\u662f\u6ca1\u6cd5\u5904\u7406\u5c0f\u533a\u95f4\uff0c\u6211\u4eec\u8981\u518d\u6539\u4e00\u4e0b\u3002\n\n\u6ce8\u610f\u5230\u66b4\u529b B \u53ef\u4ee5\u5904\u7406\u5927\u5927\u4e4b\u95f4\u548c\u5927\u5c0f\u4e4b\u95f4\uff0c\u6240\u4ee5\u66b4\u529b A \u4e2d\u4e24\u4e2a\u533a\u95f4\u7684\u51fa\u73b0\u6b21\u6570\u90fd\u5c0f\u4e8e\u7b49\u4e8e $B$\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5904\u7406\u5bf9\u4e8e\u6bcf\u4e2a\u5de6\u7aef\u70b9\uff0c\u4f7f\u5f97\u4e00\u4e2a\u6570\u51fa\u73b0 $d=1,2,\\cdots,B$ \u6b21\u7684\u6700\u5c0f\u53f3\u7aef\u70b9\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(nB)$\u3002\n\n\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e\u6bcf\u79cd\u6570\uff0c\u53bb\u6389\u54ea\u4e00\u4e2a\u533a\u95f4\uff0c\u53bb\u6389\u8fd9\u4e00\u4e2a\u533a\u95f4\u540e\u80fd\u591a\u51fa\u51e0\u4e2a\u6570\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(nB)$\u3002\n\n\u66b4\u529b B \u65f6\u95f4\u590d\u6742\u5ea6 $O(\\frac{n^2}{B})$\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6 $O(n\\sqrt n)$\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u770b\u770b\u4ee3\u7801\u3002\n## \u4ee3\u7801\n```cpp\n//Take me with you Miss Diana\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\ninline int read()\n{\n\tint r=0;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9') c=getchar();\n\twhile(c>='0'&&c<='9') r=r*10+c-48,c=getchar();\n\treturn r;\n}\nint a[200003],lsh[200003],ans[200003],pre[200003],cnt[200003];\nint g[200003][449];\nvector<int> c[200003];\nconst int B=449;\nsigned main()\n{\n\tfor(int T=read(); T--;)\n\t{\n\t\tint n=read();\n\t\tfor(int i=1; i<=n; ++i) lsh[i]=a[i]=read();\n\t\tsort(lsh+1,lsh+n+1);\n\t\tint m=unique(lsh+1,lsh+n+1)-lsh-1;\n\t\tfor(int i=1; i<=n; ++i) a[i]=lower_bound(lsh+1,lsh+m+1,a[i])-lsh;\n\t\tfor(int i=1; i<=m; ++i) c[i].clear(),ans[i]=0;\n\t\tfor(int i=1; i<=n; ++i) c[a[i]].push_back(i);\n\t\tfor(int i=1; i<=m; ++i) if(c[i].size()>=B)\n\t\t{\n\t\t\tfor(int j=1; j<=n; ++j) pre[j]=pre[j-1]+(a[j]==i);\n\t\t\tfor(int j=1; j<=m; ++j) if(i!=j)\n\t\t\t{\n\t\t\t\tint mx=-1,mn=0,idx=0;\n\t\t\t\tfor(int k:c[j]) \n\t\t\t\t\t--idx,ans[i]=max(ans[i],mx-pre[k]-idx+1),ans[j]=max(ans[j],pre[k]+idx-mn+1),\n\t\t\t\t\tmx=max(mx,pre[k]+idx),mn=min(mn,pre[k]+idx);\n\t\t\t\tans[i]=max(ans[i],mx-pre[n]-idx+1),--idx,ans[j]=max(ans[j],pre[n]+idx-mn+1);\n\t\t\t}\n\t\t}\n\t\tfor(int i=1; i<=n+1; ++i)\n\t\t\tfor(int j=1; j<B; ++j)\n\t\t\t\tg[i][j]=0x3f3f3f3f;\n\t\tfor(int i=1; i<=m; ++i) if(c[i].size()<B)\n\t\t{\n\t\t\tint sz=c[i].size();\n\t\t\tfor(int j=0; j<sz; ++j)\n\t\t\t\tfor(int k=j; k<sz; ++k)\n\t\t\t\t\tg[c[i][j]][k-j+1]=min(g[c[i][j]][k-j+1],c[i][k]);\n\t\t}\n\t\tfor(int i=n; i>=1; --i)\n\t\t\tfor(int j=1; j<B; ++j)\n\t\t\t\tg[i][j]=min(g[i][j],g[i+1][j]);\n\t\tfor(int i=1; i<=m; ++i) if(c[i].size()<B)\n\t\t{\n\t\t\tint sz=c[i].size();\n\t\t\tfor(int k=1,o=0; k<B&&g[1][k]!=0x3f3f3f3f; ++k)\n\t\t\t{\n\t\t\t\twhile(o<sz&&g[1][k]>=c[i][o]) ++o;\n\t\t\t\tans[i]=max(ans[i],k-o);\n\t\t\t}\n\t\t\tfor(int j=0; j<sz; ++j) //after the i-th element\n\t\t\t\tfor(int A=c[i][j]+1,k=1,o=j+1; k<B&&g[A][k]!=0x3f3f3f3f; ++k)\n\t\t\t\t{\n\t\t\t\t\twhile(o<sz&&g[A][k]>=c[i][o]) ++o;\n\t\t\t\t\tans[i]=max(ans[i],k-o+j+1);\n\t\t\t\t}\n\t\t}\n\t\tfor(int i=1; i<=m; ++i) ans[i]+=(int)c[i].size();\n\t\tint mx=0;\n\t\tfor(int i=1; i<=m; ++i) if(ans[i]>mx) mx=ans[i];\n\t\tprintf(\"%d\\n\",mx); \n\t\tfor(int i=1; i<=m; ++i) if(ans[i]==mx) printf(\"%d\\n\",lsh[i]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1651840950,
        "uid": 111055,
        "name": "dead_X",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P8330"
    },
    {
        "content": "> [P8330 [ZJOI2022] \u4f17\u6570](https://www.luogu.com.cn/problem/P8330)\n\n\u8f6c\u5316\u4e00\u4e0b\u9898\u610f\uff0c\u6c42\u51fa\u5c06\u5faa\u73af\u5e8f\u5217\u5207\u6210\u4e24\u6bb5\uff0c\u6bcf\u6bb5\u533a\u95f4\u4f17\u6570\u51fa\u73b0\u6b21\u6570\u4e4b\u548c\u7684\u6700\u5927\u503c\u3002\n\n\u4e00\u822c \u201c**\u51fa\u73b0\u6b21\u6570**\u201d \u90fd\u4e0e **\u6839\u53f7\u5206\u6cbb** \u6302\u94a9\uff0c\u56e0\u4e3a\u51fa\u73b0\u6b21\u6570\u5c11\u7684\u6570\u53ef\u4ee5\u76f4\u63a5\u8003\u8651\u51fa\u73b0\u6b21\u6570\uff0c\u51fa\u73b0\u6b21\u6570\u591a\u7684\u6570\u53ef\u4ee5\u76f4\u63a5\u8003\u8651\u6bcf\u4e2a\u6570\uff0c\u8fd9\u6837\u5c31\u51fa\u73b0\u4e86\u6839\u53f7\u3002\n\n\u5c06\u51fa\u73b0\u6b21\u6570 $\\geq B$ \u7684\u6570\u6210\u4e3a\u5927\u6570\uff0c\u53cd\u4e4b\u6210\u4e3a\u5c0f\u6570\u3002\n\n\u8003\u8651\u5927\u6570\u5728\u5916\u4fa7\u7684\u60c5\u51b5\u3002\u679a\u4e3e\u6bcf\u4e2a\u5927\u6570 $x$\uff0c\u5148\u628a\u6240\u6709 $x$ \u9009\u4e0a\uff0c\u518d\u8003\u8651\u679a\u4e3e\u5185\u5c42\u7684\u6570 $y$\uff0c\u90a3\u4e48\u4e00\u6bb5\u533a\u95f4 $[l, r]$ \u7684\u8d21\u732e\u5c31\u662f $[l, r]$ \u5185 $y$ \u7684\u4e2a\u6570\u51cf\u53bb $x$ \u7684\u4e2a\u6570\u3002\u8fd9\u662f\u4e00\u4e2a\u6700\u5927\u5b50\u6bb5\u548c\u95ee\u9898\u3002\u533a\u95f4\u53f3\u7aef\u70b9\u5fc5\u7136\u53ef\u4ee5\u8c03\u6574\u81f3\u4ec5\u5728 $y$ \u51fa\u73b0\u7684\u4f4d\u7f6e\u53d6\u5230\u3002\n\n\u5927\u6570\u5728\u5185\u4fa7\u540c\u7406\uff0c\u53ea\u8981\u5148\u628a\u6240\u6709 $y$ \u9009\u4e0a\uff0c\u8d21\u732e\u53d6\u76f8\u53cd\u6570\u5373\u53ef\u3002\u540c\u7406\uff0c\u6b64\u65f6\u533a\u95f4\u53f3\u7aef\u70b9\u5728 $y$ \u51fa\u73b0\u7684\u524d\u4e00\u4e2a\u4f4d\u7f6e\u53d6\u5230\u3002\u9884\u5904\u7406 $[a_i = x]$ \u7684\u524d\u7f00\u548c\uff0c\u8fd9\u6837\u5bf9\u6bcf\u4e2a $x$ \u679a\u4e3e\u6240\u6709 $y$ \u7684\u603b\u590d\u6742\u5ea6\u5c31\u662f\u7ebf\u6027\uff0c\u8fd9\u90e8\u5206\u662f $\\dfrac {n ^ 2} B$\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u53ea\u5173\u5fc3\u5c0f\u6570\u914d\u5bf9\u5c0f\u6570\u7684\u60c5\u51b5\u3002\u5982\u679c\u786e\u5b9a\u4e86\u67d0\u4e2a\u5c0f\u6570 $x$ \u5728\u5916\u4fa7\uff0c\u90a3\u4e48\u5bb9\u6613\u8bc1\u660e\u5185\u4fa7\u533a\u95f4 $[l, r]$ \u53ef\u4ee5\u8c03\u6574\u81f3\u6ee1\u8db3 $l = 1$ \u6216 $a_{l - 1} = x$\uff0c\u4e14 $r = n$ \u6216 $a_{r + 1} = x$\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u53ef\u80fd\u7684\u5185\u4fa7\u533a\u95f4\u4e2a\u6570\u53ea\u6709\u51fa\u73b0\u6b21\u6570\u5e73\u65b9\u4e2a\u3002\n\n\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u6c42\u51fa\u533a\u95f4 $[l, r]$ \u7684\u4f17\u6570\u51fa\u73b0\u6b21\u6570\uff08\u751a\u81f3\u4e0d\u9700\u8981\u5177\u4f53\u503c\uff0c\u56e0\u4e3a\u6700\u7ec8\u5185\u4fa7\u4f1a\u53d8\u6210\u5916\u4fa7\uff0c\u4e5f\u5c31\u662f\u5916\u4fa7\u7684\u503c\u624d\u6709\u7528\uff09\u3002\n\n\u666e\u901a\u5730\u6c42 $q$ \u6b21\u4f17\u6570\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u83ab\u961f\u6216\u8005\u5206\u5757\u7684 $q\\sqrt n$\uff0c\u653e\u5728\u672c\u9898\u80af\u5b9a\u4e0d\u884c\u3002\n\n\u5b9e\u9645\u4e0a\u8fd8\u6709\u4e00\u4e2a\u6027\u8d28\u6ca1\u6709\u7528\u5230\uff0c\u5c31\u662f\u53ea\u9700\u8981\u4f17\u6570\u51fa\u73b0\u6b21\u6570 $\\leq B$\u3002\u6211\u4eec\u5bf9\u6bcf\u4e2a\u4f4d\u7f6e $i$ \u9884\u5904\u7406\u51fa\u6765\u4f7f\u5f97 $[i, r]$ \u7684\u4f17\u6570\u51fa\u73b0\u6b21\u6570\u7b49\u4e8e $j$ \u6700\u5c0f\u7684 $r$\uff08\u6ce8\u610f\u5faa\u73af\u5e8f\u5217\uff09\uff0c\u8bb0\u4f5c $p_{i, j}$\u3002\u8fd9\u4e2a\u679a\u4e3e\u51fa\u73b0\u6b21\u6570\u7136\u540e two-pointers\u3002\n\n\u8fd9\u6837\u67e5\u8be2\u533a\u95f4 $[l, r]$ \u7684\u4f17\u6570\u7684\u65f6\u5019\u53ea\u9700\u8981\u4e8c\u5206\u51fa\u73b0\u6b21\u6570\u5e76\u5224\u65ad\u662f\u5426\u6709 $p_{l, mid} \\leq r$ \u5373\u53ef\u5728\u5bf9\u6570\u65f6\u95f4\u5185\u6c42\u4f17\u6570\u3002\u53ef\u4ee5\u901a\u8fc7 50pts\u3002\n\n\u66f4\u8fdb\u4e00\u6b65\u5730\uff0c\u8003\u8651\u5de6\u7aef\u70b9 $l$ \u56fa\u5b9a\uff0c\u53f3\u7aef\u70b9\u53f3\u79fb\u7684\u8fc7\u7a0b\uff0c$[l, r]$ \u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570\u4e00\u5b9a\u4e0d\u65ad\u589e\u52a0\u3002\u6839\u636e\u5355\u8c03\u6027\u7528\u6307\u9488\u7ef4\u62a4\u5373\u53ef\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u5de6\u7aef\u70b9\u6700\u591a\u53f3\u79fb $B$ \u6b21\u53f3\u7aef\u70b9\uff0c\u800c\u6307\u9488\u7684\u79fb\u52a8\u6b21\u6570\u5747\u644a\u4e5f\u662f $B$ \u6b21\uff0c\u6240\u4ee5\u8fd9\u90e8\u5206\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(nB)$\u3002\n\n\u53d6 $B = \\sqrt n$ \u5f97\u5230\u65f6\u7a7a\u590d\u6742\u5ea6 $\\mathcal{O}(n\\sqrt n)$\u3002\u6ce8\u610f\u5927\u5c0f\u4e3a\u6839\u53f7\u7684\u90a3\u4e00\u7ef4\u8981\u653e\u5728\u524d\u9762\uff0c\u9632\u6b62\u8fc7\u591a cache miss\uff08\u5361\u8f66\u4e22\u5931\uff0c\u5927\u96fe\uff09\u5bfc\u81f4 TLE\u3002\n\n- \u4e00\u79cd\u7a7a\u95f4\u590d\u6742\u5ea6\u7ebf\u6027\u7684\u505a\u6cd5\uff1a\u8003\u8651\u4ece\u5de6\u5f80\u53f3\u626b\u63cf\u7ebf\u679a\u4e3e\u53f3\u7aef\u70b9 $r$\uff0c\u65f6\u523b\u7ef4\u62a4 $S_i$ \u8868\u793a $[i, r - 1]$ \u7684\u4f17\u6570\u51fa\u73b0\u6b21\u6570\u3002\u8df3\u8fc7\u51fa\u73b0\u6b21\u6570\u5927\u4e8e\u7b49\u4e8e $B$ \u7684 $a_r$\u3002\u63a5\u4e0b\u6765\u8ba8\u8bba\u7684 $a_r$ \u7684\u51fa\u73b0\u6b21\u6570\u5747\u5c0f\u4e8e $B$\u3002\n\n  \u9996\u5148\u5bf9\u4e8e $a_r$ \u7684\u6240\u6709\u51fa\u73b0\u4f4d\u7f6e $l$\uff0c\u7528 $l$ \u4e4b\u524d $a_r$ \u7684\u51fa\u73b0\u6b21\u6570\uff0c\u52a0\u4e0a $r$ \u4e4b\u540e $a_r$ \u7684\u51fa\u73b0\u6b21\u6570\uff0c\u52a0\u4e0a $S_{l + 1}$ \u66f4\u65b0 $a_r$ \u7684\u7b54\u6848\u3002\n\n  \u5168\u90e8\u66f4\u65b0\u5b8c\u6bd5\u540e\u518d\u5c06 $S_i$ \u4ece $[i, r - 1]$ \u66f4\u65b0\u4e3a $[i, r]$\uff0c\u8fd9\u90e8\u5206\u53ef\u4ee5\u518d\u679a\u4e3e $a_r$ \u7684\u6240\u6709\u51fa\u73b0\u4f4d\u7f6e $l$\uff0c\u7528 $[l, r]$ \u5185 $a_r$ \u7684\u51fa\u73b0\u6b21\u6570 $c$ \u66f4\u65b0\u6240\u6709 $S_{1\\sim l - 1}$\u3002\u6ce8\u610f\u5230 $S$ \u7684\u5355\u8c03\u4e0d\u589e\u6027\uff0c\u6240\u4ee5\u4ece $l - 1$ \u5230 $1$ \u679a\u4e3e $p$\uff0c\u4e00\u65e6 $S_p\\geq c$ \u90a3\u4e48\u8bf4\u660e\u518d\u5f80\u524d\u66f4\u65b0\u4e5f\u662f\u65e0\u7528\u7684\uff0c\u53ef\u4ee5 break \u6389\u3002\n\n  \u7531\u4e8e\u6bcf\u6b21 $p$ \u5411\u524d\u79fb\u52a8\u90fd\u4f1a\u4f7f $S$ \u7684\u603b\u548c\u81f3\u5c11\u589e\u52a0 $1$\uff0c\u800c $S$ \u7684\u603b\u548c\u6700\u7ec8\u4e0d\u8d85\u8fc7 $nB$\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u662f\u7ebf\u6027\u6839\u53f7\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ninline int read() {\n\tint x = 0;\n\tchar s = getchar();\n\twhile(!isdigit(s)) s = getchar();\n\twhile(isdigit(s)) x = x * 10 + s - '0', s = getchar();\n\treturn x;\n}\nconst int B = 200;\nconst int N = 2e5 + 5;\nint n, a[N], d[N], ans[N], pointer[B][N];\nvector <int> pos[N];\nvoid solve() {\n\tcin >> n;\n\tfor(int i = 1; i <= n; i++) pos[i].clear(), ans[i] = 0;\n\tfor(int i = 1; i <= n; i++) scanf(\"%d\", &a[i]), d[i] = a[i];\n\tsort(d + 1, d + n + 1);\n\tfor(int i = 1; i <= n; i++) pos[a[i] = lower_bound(d + 1, d + n + 1, a[i]) - d].push_back(i);\n\tfor(int i = 1; i <= n; i++) {\n\t\tif(pos[i].size() < B) continue;\n\t\tstatic int pre[N];\n\t\tmemset(pre, 0, sizeof(pre));\n\t\tfor(int it : pos[i]) pre[it] = 1;\n\t\tfor(int p = 1; p <= n; p++) pre[p] += pre[p - 1];\n\t\tfor(int j = 1; j <= n; j++) {\n\t\t\tif(i == j) continue;\n\t\t\tint mx = 1, cur = 1;\n\t\t\tfor(int ind = 1; ind < pos[j].size(); ind++) mx = max(mx, cur = max(1, cur - (pre[pos[j][ind]] - pre[pos[j][ind - 1]]) + 1));\n\t\t\tans[i] = max(ans[i], mx + (int) pos[i].size());\n\t\t\tmx = cur = 0;\n\t\t\tfor(int ind = 1; ind < pos[j].size(); ind++) {\n\t\t\t\tmx = max(mx, cur += pre[pos[j][ind]] - pre[pos[j][ind - 1]]);\n\t\t\t\tcur = max(0, cur - 1);\n\t\t\t}\n\t\t\tans[j] = max(ans[j], mx + (int) pos[j].size());\n\t\t}\n\t}\n\tint limit = 0;\n\tfor(int i = 1; i <= n; i++) limit = max(limit, (int) pos[i].size());\n\tlimit = min(limit, B - 1);\n\tfor(int i = 1; i <= limit; i++) {\n\t\tstatic int buc[N], mode;\n\t\tmemset(buc, mode = 0, sizeof(buc));\n\t\tfor(int l = 1, r = 0; l <= n; buc[a[l++]]--) {\n\t\t\twhile(buc[mode] < i) {\n\t\t\t\tbuc[a[r = r < n ? r + 1 : 1]]++;\n\t\t\t\tif(buc[a[r]] > buc[mode]) mode = a[r];\n\t\t\t}\n\t\t\tpointer[i][l] = r;\n\t\t}\n\t}\n\tfor(int i = 1; i <= n; i++) {\n\t\tif(pos[i].size() > limit) continue;\n\t\tfor(int j = 0; j < pos[i].size(); j++) { // \u679a\u4e3e\u5de6\u7aef\u70b9 l.\n\t\t\tfor(int k = 1; k <= limit; k++) if(pointer[k][1] < pos[i][j]) ans[i] = max(ans[i], (int) pos[i].size() - j + k); // \u5148\u5904\u7406\u4e00\u4e0b l = 1 \u7684\u60c5\u51b5.\n\t\t\tint pt = j, p = pos[i][j] + 1;\n\t\t\tif(p > n) continue;\n\t\t\tfor(int k = 1; k <= limit; k++) { // \u8fd9\u91cc\u4e0d\u540c\u4e8e\u9898\u89e3\u7684\u662f, \u6211\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u51fa\u73b0\u6b21\u6570, \u7528\u6307\u9488\u7ef4\u62a4\u6700\u5c0f\u7684\u5408\u6cd5\u53f3\u7aef\u70b9, \u672c\u8d28\u6ca1\u6709\u592a\u5927\u5dee\u522b.\n\t\t\t\tif(pointer[k][p] < p) break; // \u5982\u679c\u8981\u7ed5\u8fc7\u53bb\u53d8\u6210\u5916\u4fa7\u5c31\u4e0d\u884c\u4e86.\n\t\t\t\twhile(pt < pos[i].size() && pos[i][pt] <= pointer[k][p]) pt++; // \u51fa\u73b0\u6b21\u6570\u589e\u5927\u4f7f\u5f97\u53f3\u7aef\u70b9\u53f3\u79fb.\n\t\t\t\tans[i] = max(ans[i], j + k + 1 + (int) pos[i].size() - pt);\n\t\t\t}\n\t\t}\n\t}\n\tint mx = 0;\n\tfor(int i = 1; i <= n; i++) mx = max(mx, ans[i]);\n\tcout << mx << endl;\n\tfor(int i = 1; i <= n; i++) if(ans[i] == mx) printf(\"%d\\n\", d[i]);\n}\nint main() {\n\tint T;\n\tcin >> T;\n\twhile(T--) solve();\n\treturn cerr << clock() << endl, 0;\n}\n/*\n2022/5/8\nstart thinking at ??:??\n\u9ad8\u5999\u6839\u53f7\u5206\u6cbb\u9898.\n\u5148\u5904\u7406\u5927\u5757\u4e0e\u5927\u5757\u548c\u5c0f\u5757.\n\u518d\u5904\u7406\u5c0f\u5757\u4e4b\u95f4\u7684\u60c5\u51b5.\n\u5199\u4e00\u4e2a sqrt log \u8bd5\u8bd5\u770b.\n\u53c8 T \u53c8 WA, \u6211\u4e0d\u7406\u89e3.\nstart coding at 14:42\n\u4ea4\u6362 N, B \u4e24\u7ef4\u8dd1\u5f97\u98de\u5feb\u554a.\n\u5b9e\u9645\u4e0a\u5c06 B \u5f00\u5c0f\u4e00\u70b9\u6548\u7387\u4f1a\u6bd4\u8f83\u9ad8, \u56e0\u4e3a\u5bf9\u4e8e\u5c0f\u6570\u7684\u5904\u7406\u7528\u4e86\u5de8\u5927\u7684\u4e8c\u7ef4\u6570\u7ec4, \u5b9e\u5728\u662f\u592a\u6162\u4e86.\nfinish debugging at 16:21\n*/\n```",
        "postTime": 1652020066,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "P8330 [ZJOI2022] \u4f17\u6570"
    },
    {
        "content": "\u5927\u5bb6\u597d\uff0c\u6211\u4e0d\u4f1a\u6839\u53f7\u5b9e\u9524\u4e86\u3002\n\n\u56e0\u4e3a\u8ddf\u4f17\u6570\u6709\u5173\u5e76\u4e14\u770b\u8d77\u6765\u5c31\u8981\u5bf9\u6240\u6709\u79cd\u7c7b\u7684\u6570\u6c42\u4e00\u4e2a\u7b54\u6848\uff0c\u53ef\u4ee5\u76f4\u63a5\u8003\u8651\u6839\u53f7\u7b97\u6cd5\u3002\n\n\u6ca1\u6709\u4ec0\u4e48\u597d\u7684\u5206\u5757\u601d\u8def\uff0c\u4e0d\u59a8\u6839\u53f7\u5206\u6cbb\u3002\u6309\u6570\u7684\u79cd\u7c7b\u5904\u7406\uff0c\u6309\u5927\u5c0f\u5206\u6cbb\uff1a\n\n- \u51fa\u73b0\u6b21\u6570\u5927\u4e8e $\\sqrt n$\uff1a\u8fd9\u79cd\u6570\u6700\u591a $O(\\sqrt n)$ \u4e2a\uff0c\u989c\u8272\u662f $O(n)$ \u4e2a\u7684\uff0c\u6bcf\u79cd\u989c\u8272\u5904\u7406\u4e00\u4e0b\u5c31\u662f $O(n \\sqrt n)$ \u7684\uff1b   \n- \u51fa\u73b0\u6b21\u6570\u5c0f\u4e8e\u7b49\u4e8e $\\sqrt n$\uff1a\u8bb0\u5176\u51fa\u73b0\u4f4d\u7f6e\u4e3a $p_0=0,p_1,p_2,\\cdots ,p_k,p_{k+1}=n+1$\uff0c\u90a3\u4e48\u6539 $(p_i, p_j)$ \u5bf9\u8fd9\u79cd\u6570\u6765\u8bf4\u6700\u4f18\uff0c\u679a\u4e3e $i,j$\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\u540e\u53ef\u77e5\u662f $O(n \\sqrt n)$ \u7684\u3002\n\n\u7136\u540e\u5148\u5904\u7406\u51fa\u73b0\u6b21\u6570\u5927\u4e8e $\\sqrt n$ \u7684\u3002\u5047\u8bbe\u8fd9\u79cd\u989c\u8272\u4e3a $p$\uff0c\u6211\u4eec\u8bd5\u56fe\u628a $p$ \u6539\u6210 $q$ \u66f4\u65b0 $q$\uff0c\u6216\u662f\u628a $q$ \u6539\u6210 $p$ \u66f4\u65b0 $p$\u3002\u7ef4\u62a4 $p$ \u51fa\u73b0\u6b21\u6570\u7684\u524d\u7f00\u548c\u76f4\u63a5\u5904\u7406\uff0c\u8fd9\u662f\u7b80\u5355\u7684\u3002\n\n\u7136\u540e\u518d\u5904\u7406\u51fa\u73b0\u6b21\u6570\u4e0d\u5927\u4e8e $\\sqrt n$ \u7684\u6570\u3002\u6ce8\u610f\u5230\u4e00\u70b9\u662f\u5728\u4e0a\u9762\u7684\u5904\u7406\u4e2d\u6211\u4eec\u5904\u7406\u4e86\u4e00\u4e2a\u51fa\u73b0\u6b21\u6570\u5927\u4e8e $\\sqrt n$ \u7684\u6570 $p$ \u6539\u6210\u51fa\u73b0\u6b21\u6570\u4e0d\u5927\u4e8e $\\sqrt n$ \u7684\u6570 $q$\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u53ea\u8003\u8651\u4e24\u4e2a\u6570\u51fa\u73b0\u6b21\u6570\u90fd\u4e0d\u5927\u4e8e $\\sqrt n$ \u7684\u3002\n\n\u90a3\u4e48\u76f8\u5f53\u4e8e\u505a $O(n \\sqrt n)$ \u6b21\u533a\u95f4\u4f17\u6570\u3002\u4f46\u662f\u6709\u4e00\u70b9\u662f\u6bcf\u4e2a\u6570\u51fa\u73b0\u6b21\u6570\u90fd\u662f\u4e0d\u5927\u4e8e $O(\\sqrt n)$ \u7684\u3002\u90a3\u4e48\u8bb0 $s_i$ \u4e3a $[i,n]$ \u7684\u4f17\u6570\u51fa\u73b0\u6b21\u6570\uff0c\u5bb9\u6613\u53d1\u73b0 $\\sum s_i = O(n \\sqrt n)$ \u7684\uff0c\u5176\u652f\u6301\u66b4\u529b\u7ef4\u62a4\u3002\n\n\u66b4\u529b\u679a\u4e3e $[l,r]$\u3002\u73b0\u5728\u5df2\u7ecf\u679a\u4e3e\u4e86 $r$\uff0c\u518d\u679a\u4e3e $l$\u3002\u5bb9\u6613\u53d1\u73b0\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u4e0a\u9762\u5206\u8ba8\u5f97\u51fa\u7684\u4e00\u4e2a\u7b80\u5355\u5c0f\u7ed3\u8bba\u4f18\u5316\u679a\u4e3e\u8fc7\u7a0b\uff0c\u4e5f\u5c31\u662f\u4fdd\u8bc1 $l-1$ \u548c $r$ \u989c\u8272\u4e00\u6837\uff0c\u6216\u8005 $l=1$ \u5373\u53ef\u3002\u663e\u7136 $s_i \\geq s_{i-1}$\uff0c\u6211\u4eec\u53ef\u4ee5\u66b4\u529b\u66f4\u65b0 $[i,r]$ \u7684\u533a\u95f4\u4f17\u6570\uff0c\u66f4\u65b0\u6b21\u6570\u4e0d\u5927\u4e8e $O(n \\sqrt n)$\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u590d\u6742\u5ea6\u3002\n\n\u4ee3\u7801\u6bd4\u9898\u89e3\u6e05\u695a\u3002\n\n```cpp\nvoid SmChunk()\n{\n    for(int i=1;i<=n;++i)   sum[i]=0;\n    for(int i=1;i<=n;++i)\n    {\n        if(app[a[i]]<=Sqr)\n        {\n            int p=lower_bound(Pos[a[i]].begin(),Pos[a[i]].end(),i)-Pos[a[i]].begin();\n            for(int j=p;~j;--j)\n            {\n                int l=j?Pos[a[i]][j-1]+1:1,r=Pos[a[i]][j];\n                maxn[a[i]]=max(maxn[a[i]],sum[l]-(p-j));\n                while(l<=r && sum[r]<p-j+1) sum[r--]=p-j+1;\n            }\n        }\n    }\n}\nvoid Solve()\n{\n    n=read();\n    for(int i=1;i<=n;++i)   a[i]=b[i]=read();\n    sort(b+1,b+1+n);\n    len=unique(b+1,b+1+n)-b-1;\n    for(int i=1;i<=n;++i)   a[i]=lower_bound(b+1,b+1+len,a[i])-b;\n    for(int i=1;i<=len;++i) app[i]=0,Pos[i].clear(),maxn[i]=0;\n    for(int i=1;i<=n;++i)   ++app[a[i]],Pos[a[i]].push_back(i);\n    for(int p=1;p<=len;++p)\n    {\n        if(app[p]>Sqr)\n        {\n            for(int i=1;i<=n;++i)   sum[i]=sum[i-1]+int(a[i]==p);\n            for(int q=1;q<=len;++q)\n            {\n                int N=app[q],l,s;\n                l=s=0;\n                for(int i=0;i<N;++i)\n                {\n                    int r=Pos[q][i];\n                    s=max(0,s-(sum[r]-sum[l]))+1;\n                    maxn[p]=max(maxn[p],s);\n                    l=r;\n                }\n                l=s=0;\n                for(int i=0;i<N;++i)\n                {\n                    int r=Pos[q][i];\n                    s=max(0,s)+sum[r]-sum[l];\n                    maxn[q]=max(maxn[q],s--);\n                    l=r;\n                }\n            }\n        }\n    }\n    SmChunk();\n    reverse(a+1,a+1+n);\n    for(int i=1;i<=len;++i)\n    {\n        reverse(Pos[i].begin(),Pos[i].end());\n        for(auto &st:Pos[i])    st=n-st+1;\n    }\n    SmChunk();\n    for(int i=1;i<=len;++i) maxn[i]+=app[i];\n    int ans=0;\n    for(int i=1;i<=len;++i) ans=max(ans,maxn[i]);\n    write(ans),puts(\"\");\n    for(int i=1;i<=len;++i) if(maxn[i]==ans)    write(b[i]),puts(\"\");\n}\n```",
        "postTime": 1652698138,
        "uid": 184977,
        "name": "pomelo_nene",
        "ccfLevel": 9,
        "title": "\u5b9d\u6851\uff0c\u60a8\u592a\u725b\u5566\uff01"
    },
    {
        "content": "\u8003\u573a\u4e0a $O(n^{5/3})$ \u7684\u66b4\u529b\u505a\u6cd5\uff0c\u4f46\u662f\u4ed6\u8fc7\u4e86\u3002\n\n\u770b\u5230\u4f17\u6570\uff0c\u8003\u8651\u6839\u53f7\u5206\u6cbb\u3002\u6211\u4eec\u7684\u64cd\u4f5c\u80af\u5b9a\u662f\u9009\u4e00\u4e2a\u503c $x$\uff0c\u9009\u4e00\u4e2a\u533a\u95f4 $[l,r]$\uff0c\u7136\u540e\u628a\u533a\u95f4\u4f17\u6570\u6539\u6210 $x$\uff0c\u533a\u95f4\u5185\u7684 $x$ \u6539\u6210\u5176\u4ed6\u503c\u3002  \n\u5bf9\u4e8e\u51fa\u73b0\u6b21\u6570 $\\ge B$ \u7684\u6570 $x$\uff0c\u53ef\u4ee5\u8003\u8651\u679a\u4e3e\u533a\u95f4\u4f17\u6570\u7684\u53d6\u503c $y$\uff0c\u7136\u540e\u628a\u4e00\u4e2a\u533a\u95f4\u4e2d\u7684 $y$ \u5168\u90e8\u6539\u6210 $x$\u3002\u6ce8\u610f\u5230\u6700\u4f18\u65b9\u6848\u4e24\u7aef\u80af\u5b9a\u90fd\u662f $y$\uff0c\u4e0d\u7136\u533a\u95f4\u5411\u91cc\u7f29\uff0c\u589e\u91cf\u4e0d\u53d8\u800c\u5185\u90e8 $x$ \u53ef\u80fd\u51cf\u5c11\u3002\u540c\u65f6\u4e5f\u53ef\u4ee5\u4e0d\u5f3a\u5236\u662f\u533a\u95f4\u4f17\u6570\uff0c\u76f4\u63a5\u8003\u8651\u6240\u6709\u4e24\u7aef\u76f8\u540c\u7684\u533a\u95f4\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u6570\u5f00\u6876\u5b58\u524d\u7f00\u548c\u5373\u53ef\u505a\u5230\u5355\u6b21 $O(n)$\uff0c\u603b\u590d\u6742\u5ea6 $O\\left(\\dfrac{n^2}{B}\\right)$\u3002  \n\u5bf9\u4e8e\u51fa\u73b0\u6b21\u6570 $<B$ \u7684\u6570\uff0c\u8003\u8651\u679a\u4e3e\u4fee\u6539\u7684\u533a\u95f4\u3002\u8fd9\u65f6\u5019\u53ea\u6709\u5305\u542b $x$ \u6570\u91cf\u4e0d\u540c\u7684\u533a\u95f4\u624d\u6709\u533a\u522b\uff0c\u51fa\u73b0\u6b21\u6570\u76f8\u540c\u7684\u533a\u95f4\u80af\u5b9a\u662f\u8d8a\u957f\u8d8a\u597d\uff0c\u8fd9\u6837\u533a\u95f4\u4f17\u6570\u51fa\u73b0\u6b21\u6570\u4f1a\u53d8\u591a\u3002\u4e8e\u662f\u76f4\u63a5\u4f7f\u7528\u83ab\u961f\u6c42\u533a\u95f4\u4f17\u6570\u3002\u6839\u636e\u5747\u503c\u4e0d\u7b49\u5f0f\uff0c\u6700\u591a\u6709 $O(nB)$ \u4e2a\u533a\u95f4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\sqrt{nB})$\u3002\u53d6 $B=O(n^{1/3})$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^{5/3})$\u3002\n\n\u8003\u573a\u4ee3\u7801\n```cpp\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <fstream>\n#include <iostream>\n#include <vector>\nvoid checkmax(int &x, int y) {\n  if (x < y) x = y;\n}\nvoid checkmin(int &x, int y) {\n  if (x > y) x = y;\n}\nstd::ifstream fin(\"mode.in\");\nstd::ofstream fout(\"mode.out\");\nint n, a[200001], b[200001], c[200001], ans, c1[200001], mn[200001], c2[200001];\nstd::vector<int> pos[200001];\nint CalcBig(int x) {\n  for (int i = 1; i <= n; i++) c2[i] = c2[i - 1] + (a[i] == x);\n  std::memset(mn, 0x3f, 4 * n);\n  int maxd = 0;\n  for (int i = 1; i <= n; i++) {\n    if (a[i] == x) continue;\n    c1[a[i]]++;\n    checkmin(mn[a[i]], c1[a[i]] - 1 - c2[i - 1]);\n    checkmax(maxd, c1[a[i]] - c2[i] - mn[a[i]]);\n  }\n  return c[x] + maxd;\n}\nstruct Node {\n  int l, r, d;\n} d[3000001];\nint tot, bel[200001], ct[200001], cc[200001], maxc, dt[200001];\nvoid CalcSmall(int x) {\n  for (std::size_t i = 0; i < pos[x].size(); i++) {\n    if (pos[x][i] > 1) d[++tot] = {1, pos[x][i] - 1, (int)i};\n    for (std::size_t j = 0; j < i; j++)\n      if (pos[x][j] + 1 < pos[x][i])\n        d[++tot] = {pos[x][j] + 1, pos[x][i] - 1, (int)(i - j - 1)};\n    if (pos[x][i] < n)\n      d[++tot] = {pos[x][i] + 1, n, (int)(pos[x].size() - i - 1)};\n  }\n}\ninline void Add(int x) {\n  cc[ct[x]++]--, cc[ct[x]]++;\n  checkmax(maxc, ct[x]);\n}\ninline void Del(int x) {\n  cc[ct[x]--]--, cc[ct[x]]++;\n  if (cc[maxc] == 0) maxc--;\n}\nvoid Mo() {\n  int MoB = n / std::sqrt(tot + 1) + 1;\n  for (int i = 1; i <= n; i++) bel[i] = (i - 1) / MoB + 1;\n  std::sort(d + 1, d + tot + 1, [](const Node &lhs, const Node &rhs) {\n    return bel[lhs.l] == bel[rhs.l]\n               ? bel[lhs.l] & 1 ? lhs.r < rhs.r : lhs.r > rhs.r\n               : bel[lhs.l] < bel[rhs.l];\n  });\n  std::memset(ct + 1, 0, 4 * n);\n  std::memset(cc + 1, 0, 4 * n);\n  maxc = 0;\n  for (int l = 1, r = 0, i = 1; i <= tot; i++) {\n    while (r < d[i].r) Add(a[++r]);\n    while (l > d[i].l) Add(a[--l]);\n    while (r > d[i].r) Del(a[r--]);\n    while (l < d[i].l) Del(a[l++]);\n    int id = r < n ? a[r + 1] : a[l - 1];\n    checkmax(dt[id], maxc - d[i].d);\n  }\n}\nvoid Solve() {\n  std::cin >> n;\n  for (int i = 1; i <= n; i++) std::cin >> a[i];\n  std::memcpy(b + 1, a + 1, 4 * n);\n  std::sort(b + 1, b + n + 1);\n  int nn = std::unique(b + 1, b + n + 1) - b - 1;\n  for (int i = 1; i <= n; i++)\n    a[i] = std::lower_bound(b + 1, b + nn + 1, a[i]) - b;\n  std::memset(c + 1, 0, 4 * nn);\n  for (int i = 1; i <= n; i++) c[a[i]]++;\n  int B = std::pow(n, 1.0 / 3.0) + 1;\n  for (int i = 1; i <= nn; i++) pos[i].clear();\n  for (int i = 1; i <= nn; i++)\n    if (c[i] < B) pos[i].reserve(c[i]);\n  for (int i = 1; i <= n; i++)\n    if (c[a[i]] < B) pos[a[i]].emplace_back(i);\n  ans = tot = 0;\n  std::vector<int> sol;\n  for (int i = 1; i <= nn; i++)\n    if (c[i] >= B) {\n      int cnt = CalcBig(i);\n      if (cnt > ans) {\n        ans = cnt;\n        std::vector<int>(1, i).swap(sol);\n      } else if (cnt == ans) {\n        sol.emplace_back(i);\n      }\n    } else {\n      CalcSmall(i);\n    }\n  std::memset(dt + 1, 0, 4 * nn);\n  Mo();\n  for (int i = 1; i <= nn; i++)\n    if (c[i] < B) {\n      if (c[i] + dt[i] > ans) {\n        ans = c[i] + dt[i];\n        std::vector<int>(1, i).swap(sol);\n      } else if (c[i] + dt[i] == ans) {\n        sol.emplace_back(i);\n      }\n    }\n  std::sort(sol.begin(), sol.end());\n  std::cout << ans << '\\n';\n  for (const auto x : sol) std::cout << b[x] << '\\n';\n}\nint main(int argc, char const *argv[]) {\n  std::cin.rdbuf(fin.rdbuf()), std::cout.rdbuf(fout.rdbuf());\n  int T;\n  std::cin >> T;\n  while (T--) Solve();\n  return 0;\n}\n```",
        "postTime": 1652831466,
        "uid": 68273,
        "name": "xyf007",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P8330 \u3010[ZJOI2022] \u4f17\u6570\u3011"
    },
    {
        "content": "[P8330 [ZJOI2022] \u4f17\u6570](https://www.luogu.com.cn/problem/P8330) \u89e3\u9898\u62a5\u544a\uff1a\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/xiaoziyao/p/16219543.html)\n\n## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217\uff0c\u4f60\u80fd\u5bf9\u5b83\u8fdb\u884c\u4e00\u6b21\u533a\u95f4\u52a0\uff0c\u6700\u5927\u5316\u4f17\u6570\u51fa\u73b0\u6b21\u6570\u3002\n\n$1\\leqslant n\\leqslant 2\\times 10^5$\u3002\n\n## \u5206\u6790\n\nZJOI T2\uff0c\u4f20\u7edf\u7b7e\u5230\u9898\uff01\u573a\u5916\u9009\u624b\u6765\u53e3\u80e1\u4e00\u4e0b\u3002\n\n\u663e\u7136\u7b54\u6848\u7684\u5f62\u6001\u5c31\u662f aaabbbaaa\uff0c\u8003\u8651\u5bf9\u989c\u8272\u51fa\u73b0\u6b21\u6570\u6839\u53f7\u5206\u6cbb\uff1a\n\n- a/b \u5b58\u5728\u4e00\u4e2a\u662f\u5927\u989c\u8272\uff1a\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5927\u989c\u8272\uff0c\u626b\u4e00\u904d\u5e8f\u5217\uff0c\u5bf9\u6bcf\u79cd\u989c\u8272\u7ef4\u62a4\u4e00\u4e2a\u6781\u957f\u7684 aaabbb \u6bb5\u4ee5\u53ca\u4e00\u4e2a bbbaaa \u6bb5\u5373\u53ef\u3002\n- a/b \u5747\u4e3a\u5c0f\u989c\u8272\uff1a\u679a\u4e3e\u5904\u4e8e\u5916\u9762\u7684\u989c\u8272\uff0c\u90a3\u4e48\u95ee\u9898\u8f6c\u5316\u4e3a $O(n\\sqrt n)$ \u6b21\u533a\u95f4\u4f17\u6570\u3002\u4f46\u6b64\u65f6\u4f17\u6570\u5927\u5c0f\u4e0d\u8d85\u8fc7\u6839\u53f7\uff0c\u6211\u4eec\u5c06\u8be2\u95ee\u6709\u5e8f\u5730\u6302\u5728\u53f3\u7aef\u70b9\uff0c\u679a\u4e3e\u4f17\u6570\u51fa\u73b0\u6b21\u6570\uff0c\u79fb\u52a8\u53f3\u7aef\u70b9\u5e76\u7ef4\u62a4\u7b26\u5408\u6761\u4ef6\u6700\u9760\u540e\u7684\u5de6\u7aef\u70b9\uff0c\u5f39\u7b26\u5408\u8981\u6c42\u7684\u8be2\u95ee\u5c31\u597d\u4e86\u3002\n\n\u8fd9\u6837\u5c31\u505a\u5230\u4e86 $O(n\\sqrt n)$\u3002\n\n## \u4ee3\u7801\n\n\u5495\u4e86\u3002",
        "postTime": 1651586199,
        "uid": 35754,
        "name": "Verdandi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P8330\u3010[ZJOI2022] \u4f17\u6570\u3011"
    },
    {
        "content": "\u4e3a\u4e86\u8c61\u5f81\u6027\u7684\u8bc1\u660e\u81ea\u5df1\u6ca1\u6709\u6446\u70c2\uff0c\u6240\u4ee5\u6765\u5199\u9898\u89e3\u4e86\u3002\u611f\u89c9\u8fd9\u8fd8\u7b97\u662f\u4e00\u9053\u6bd4\u8f83\u4f20\u7edf\u7684\u9898\u76ee\u5427\uff0c\u867d\u7136\u6211\u53ef\u80fd\u60f3\u4e86\u4e00\u4e2a\u534a\u5c0f\u65f6\u624d\u505a\u51fa\u6765\uff0c\u4f46\u662f\u505a\u51fa\u6765\u4e4b\u540e\u53c8\u611f\u89c9\u597d\u50cf\u4e0d\u662f\u5f88\u96be\u3002\n\n### \u7b80\u8981\u9898\u610f\n\n\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u6570\u5217\uff0c\u4f60\u53ef\u4ee5\u7ed9\u5176\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u8fde\u7eed\u6bb5\u52a0\u4e0a\u4efb\u610f\u5927\u7684\u4e00\u4e2a\u6570\uff0c\u95ee\u4fee\u6539\u5b8c\u4e4b\u540e\u6570\u5217\u7684\u4f17\u6570\u6700\u591a\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\uff0c\u5e76\u8f93\u51fa\u54ea\u4e9b\u6570\u53ef\u4ee5\u8fbe\u5230\u8fd9\u4e2a\u51fa\u73b0\u6b21\u6570\u3002\n\n### \u6570\u636e\u8303\u56f4\n\n\u591a\u6d4b\uff01\uff01\uff01\n\n$n \\leq 2\\times10^5$\uff0c\u4fdd\u8bc1\u4e00\u4e2a\u6570\u5217\u4e2d\u7684\u6570\u4e0d\u5168\u76f8\u7b49\uff08\u8981\u4e0d\u7136\u5c31\u6709\u65e0\u9650\u4e2a\u89e3\u4e86\uff09\u3002\n\n### \u89e3\u9898\u601d\u8def\n\n\u9996\u5148\u53ef\u4ee5\u53d1\u73b0\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u66b4\u529b\u679a\u4e3e\u4e24\u4e2a\u6570\uff0c\u8ba1\u7b97\u66f4\u6539\u5176\u4e2d\u4e00\u4e2a\u6570\u4e4b\u540e\uff0c\u53e6\u4e00\u4e2a\u6570\u6700\u591a\u51fa\u73b0\u591a\u5c11\u6b21\u3002\u90a3\u4e48\u6211\u4eec\u5728\u8fd9\u4e2a\u8bf4\u8fd9\u4e2a\u53eb\u505a\u88ab\u66f4\u6539\u7684\u6570\u5bf9\u7edf\u8ba1\u7b54\u6848\u7684\u6570\u7684\u8d21\u732e\u3002\n\n\u663e\u7136\u6211\u4eec\u53ea\u9700\u8981\u66b4\u529b\u8ba1\u7b97\u51fa\u4efb\u610f\u4e24\u4e2a\u6570\u7684\u8d21\u732e\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u591a\u9879\u5f0f\u7684\u505a\u6cd5\u3002\n\n\u6211\u4eec\u5177\u4f53\u601d\u8003\u4e00\u4e0b\u5e94\u8be5\u600e\u4e48\u505a\uff1a\u5047\u5982\u662f $1$ \u5bf9 $2$ \u505a\u8d21\u732e\uff0c\u6211\u4eec\u5b9a\u4e49\u4e24\u4e2a\u6570\u7ec4 $s1,s2$ \u5206\u522b\u8868\u793a $1$ \u548c $2$ \u4e2a\u6570\u7684\u524d\u7f00\u548c\u3002\u6b64\u65f6\u53ef\u4ee5\u53d1\u73b0\u6211\u4eec\u7684\u7b54\u6848\u5c31\u662f $max_{r=1}^{n}{max_{l=1}^{r}{(s2_n-s2_r+s2_{l-1}+s1_r-s1_{l-1})}}$\u3002\n\n\u5bf9\u4e8e\u4e0a\u9762\u7684\u5f0f\u5b50\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u628a\u5b83\u53d8\u6210 $s2_n+max_{r=1}^{n}{max_{l=1}^{r}{((-s2_r+s1_r)+(s2_{l-1}-s1_{l-1}))}}$\uff0c\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u5bf9 $s2_{l-1}-s1_{l-1}$ \u8bb0\u5f55\u4e00\u4e2a\u524d\u7f00 $min$ \u5c31\u53ef\u4ee5 $O(n)$ \u7684\u8ba1\u7b97\u4e24\u4e2a\u6570\u7684\u8d21\u732e\u4e86\u3002\n\n\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n^3)$\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5176\u5b9e $2$ \u8fd9\u4e2a\u6570\u662f\u8c01\u662f\u5b8c\u5168\u65e0\u5173\u7d27\u8981\u7684\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u5229\u7528 $O(n)$ \u7684\u65f6\u95f4\u8ba1\u7b97\u51fa\u6765\u4e00\u4e2a\u6570\u5bf9\u4e8e\u6240\u6709\u6570\u7684\u8d21\u732e\uff0c\u8fd9\u6837\u6211\u4eec\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u53d8\u6210\u4e86 $O(n^2)$\u3002\n\n\u6bd5\u7adf\u662f\u6570\u636e\u7ed3\u6784\u9898\u800c\u4e14\u8fd8\u662f\u4f17\u6570\uff0c\u6211\u4eec\u80af\u5b9a\u4f1a\u5f80\u6839\u53f7\u7684\u65b9\u5411\u4e0a\u53bb\u60f3\u7684\uff08\u63a5\u4e0b\u6765\u6211\u4eec\u7528 $B$ \u4ee3\u8868 $\\sqrt{n}$\uff09\uff0c\u53ef\u4ee5\u53d1\u73b0\u5927\u4e8e $B$ \u7684\u6570\u53ea\u6709 $\\frac{n}{B}$ \u79cd\uff0c\u5b8c\u5168\u53ef\u4ee5\u89e3\u51b3\u4e00\u4e2a\u5927\u6570\u5bf9\u5176\u4ed6\u6570\u7684\u8d21\u732e\u3002\uff08\u6211\u4eec\u4e4b\u540e\u7ba1\u5927\u4e8e $B$ \u7684\u6570\u53eb\u5927\u6570\uff0c\u5c0f\u4e8e\u7b49\u4e8e $B$ \u7684\u6570\u53eb\u5c0f\u6570\uff09\u3002\n\n\u663e\u7136\u4e4b\u540e\u53ea\u9700\u8981\u601d\u8003\u4e00\u4e2a\u5c0f\u6570\u5bf9\u5176\u4ed6\u6570\u7684\u8d21\u732e\u5c31\u884c\u4e86\u3002\n\n\u4e4b\u540e\u6211\u7684\u505a\u6cd5\u53ef\u80fd\u5c31\u7565\u5fae\u6709\u4e00\u70b9\u9ebb\u70e6\u4e86\uff1a\n\n\u5148\u8003\u8651\u4e00\u4e2a\u5c0f\u6570\u5bf9\u4e00\u4e2a\u5c0f\u6570\u7684\u8d21\u732e\uff1a\n\n\u6211\u4eec\u4ece\u5de6\u5f80\u53f3\u626b\uff0c\u628a\u5f53\u524d\u70b9\u53eb\u505a $i$\u3002\u4ee5 $i$ \u4e3a\u53f3\u7aef\u70b9\uff0c\u5bf9\u4e8e\u6240\u6709\u7684\u70b9\u8bb0\u5f55\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u5de6\u7aef\u7684\u7684\u4f17\u6570\u51fa\u73b0\u6b21\u6570\u3002\u8fd9\u6837\u6bcf\u6b21\u67e5\u8be2 $i$ \u7684\u8d21\u732e\u7684\u65f6\u5019\uff0c\u6211\u4eec\u66b4\u529b\u679a\u4e3e\u548c $i$ \u6743\u503c\u76f8\u540c\u7684\u70b9 $j$\u3002\u90a3\u4e48\u5982\u679c\u6211\u4eec\u4fee\u6539 $j$ \u5230 $i$ \u4e2d\u95f4\u7684\u4e00\u6bb5\u8d21\u732e\u5c31\u662f $i$ \u4e4b\u540e\u548c $j$ \u4e4b\u524d\u548c $i$ \u76f8\u540c\u7684\u70b9\u7684\u4e2a\u6570\u52a0\u4e0a $j$ \u5230 $i$ \u8fd9\u4e00\u6bb5\u7684\u4f17\u6570\u51fa\u73b0\u6b21\u6570\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u6570\u6700\u591a\u53ea\u6709 $B$ \u4e2a\u6240\u4ee5\u6bcf\u6b21\u6700\u591a\u53ea\u4f1a\u679a\u4e3e $B$ \u6b21\uff0c\u8fd9\u6837\u679a\u4e3e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $nB$ \u7684\u4e86\u3002\n\n\u4f46\u662f\u73b0\u5728\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u5982\u4f55\u7ef4\u62a4\u4ee5\u6bcf\u4e2a\u70b9\u4e3a\u5de6\u7aef\u70b9\u7684\u4f17\u6570\u4e2a\u6570\uff0c\u53ef\u4ee5\u53d1\u73b0\u6211\u4eec\u7684\u6bcf\u4e00\u6b21\u4fee\u6539\u4e5f\u662f\u627e\u5230\u6240\u6709\u7684 $j$\uff0c\u7136\u540e\u533a\u95f4\u7ed9\u4e00\u4e2a\u524d\u7f00\u53d6 $max$\uff0c\u663e\u7136\u5982\u679c\u76f4\u63a5\u53d6 $max$ \u6211\u4eec\u5c31\u4f1a\u591a\u4e00\u4e2a $\\log$ \u8fd9\u6837\u662f\u4e0d\u80fd\u63a5\u53d7\u7684\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8003\u8651\uff0c\u8fd9\u91cc\u9762\u7ef4\u62a4\u7684\u6bcf\u4e00\u4e2a\u4f17\u6570\u4e2a\u6570\u7684\u5927\u5c0f\u6700\u591a\u53ea\u6709 $B$\uff0c\u800c\u4e14\u5b83\u4e00\u5b9a\u662f\u4ece\u5de6\u5230\u53f3\u9012\u51cf\u7684\uff0c\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u6bcf\u6b21\u4fee\u6539\u5176\u5b9e\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u6539\uff0c\u5982\u679c\u4e0a\u4e00\u4e2a\u70b9\u53ef\u4ee5\u6539\u5c31\u8df3\u5230\u4e0a\u4e00\u4e2a\u70b9\uff0c\u5982\u679c\u518d\u4e0a\u4e00\u4e2a\u70b9\u8fd8\u53ef\u4ee5\u6539\uff0c\u5c31\u7ee7\u7eed\u8df3\u3002\u53ef\u4ee5\u53d1\u73b0\u603b\u4fee\u6539\u6b21\u6570\u662f $n$ \u4e58\u6bcf\u4e2a\u5de6\u7aef\u70b9\u4f17\u6570\u6b21\u6570\u6700\u5927\u503c\u7684\u4e5f\u5c31\u662f $B$\uff0c\u8fd9\u6837\u6211\u4eec\u7684\u4fee\u6539\u6b21\u6570\u4e5f\u662f $nB$ \u7684\u4e86\u3002\n\n\u4e4b\u540e\u6211\u4eec\u518d\u8003\u8651\u4e00\u4e2a\u5c0f\u6570\u5bf9\u4e00\u4e2a\u5927\u6570\u7684\u8d21\u732e\uff1a\n\n\u663e\u7136\u8fd9\u56de\u6211\u4eec\u7edf\u8ba1\u7b54\u6848\u7684\u65f6\u5019\u5c31\u4e0d\u80fd\u66b4\u529b\u7684\u627e\u5230\u6bcf\u4e00\u4e2a $j$ \u4e86\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4f60\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u53f3\u7aef\u70b9\uff0c\u6240\u6709\u5de6\u7aef\u70b9\u7684\u4f17\u6570\u51fa\u73b0\u6b21\u6570\u6700\u5927\u53ea\u6709 $B$\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u53ea\u7ef4\u62a4\u5f53\u4f17\u6570\u51fa\u73b0\u6b21\u6570\u662f $B$ \u7684\u65f6\u5019\uff0c\u5de6\u7aef\u70b9\u7684\u6700\u5927\u503c\u53ef\u4ee5\u662f\u591a\u5c11\u3002\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5927\u6570\u8bb0\u5f55\u4e00\u4e2a\u524d\u7f00\u548c\u7136\u540e\u679a\u4e3e\u4e2d\u95f4\u4fee\u6539\u7684\u6570\u7684\u4e2a\u6570\u3002\u8fd9\u6837\u67e5\u8d21\u732e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $O(nB)$ \u7684\u4e86\u3002\u81f3\u4e8e\u5982\u4f55\u7ef4\u62a4\u8fd9\u4e2a\u5de6\u7aef\u70b9\u7684\u6700\u5927\u503c\u5c31\u975e\u5e38\u7684\u7b80\u5355\u4e86\u3002\u8fd8\u662f\u53ef\u4ee5\u8003\u8651\u66b4\u529b\u679a\u4e3e $j$ \u76f4\u63a5\u4fee\u6539\u5c31\u884c\u4e86\u3002\n\n\u8fd9\u6837\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u53ef\u4ee5\u505a\u5230 $O(n\\sqrt{n})$ \u4e86\u3002\n\n### \u5173\u4e8e\u4ee3\u7801\n\n\u8eab\u4e3a\u4e00\u9053\u6570\u636e\u7ed3\u6784\u9898\u6ca1\u6709\u5361\u5e38\u8fd8\u662f\u975e\u5e38\u7684\u826f\u5fc3\u7684\u3002\n\n\u4ee3\u7801\u4e0d\u662f\u7279\u522b\u957f\uff0c\u4e5f\u6bd4\u8f83\u597d\u5199\uff0c\u6211\u5199\u51fa\u6765\u90fd\u6ca1\u6709\u8c03\u5c31\u8fc7\u4e86\uff08\u6216\u8bb8\u662f\u6570\u636e\u592a\u6c34\u4e86\uff09\u3002\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff1a\n\n```cpp\nconst int N = 2e5 + 10;\n\nint n, a[N], b[N], c, ct[N], B, ans[N], mx[N], s[N], lst[N], fir[N], k[N], rk[N];\nint pre[500][N];\n\nvoid calc1(int col) {\n\tfor (int i = 1; i <= n; i++) mx[i] = s[i] = 0;\n\tint nw = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (a[i] == col) nw++;\n\t\telse {\n\t\t\tckmax(ans[a[i]], ct[a[i]] - s[a[i]] + nw + mx[a[i]]);\n\t\t\ts[a[i]]++, ckmax(mx[a[i]], s[a[i]] - nw);\n\t\t}\n\t}\n\tfor (int i = 1; i <= c; i++) ckmax(ans[i], nw + mx[i]);\n}\n\nvoid solve() {\n\tscanf(\"%d\", &n), c = 0;\n\tfor (int i = 1; i <= n; i++)\n\t\tscanf(\"%d\", &a[i]), b[++c] = a[i];\n\tsort (b + 1, b + c + 1);\n\tc = unique (b + 1, b + c + 1) - b - 1;\n\tfor (int i = 1; i <= n; i++)\n\t\ta[i] = lower_bound(b + 1, b + c + 1, a[i]) - b;\n\tB = sqrt(n); int mxc = 0, crk = 0;\n\tfor (int i = 1; i <= c; i++) ct[i] = 0;\n\tfor (int i = 1; i <= n; i++) ckmax(mxc, ++ct[a[i]]);\n\tfor (int i = 1; i <= c; i++) ans[i] = mxc, rk[i] = 0;\n\tfor (int i = 1; i <= c; i++)\n\t\tif (ct[i] > B) calc1(i), rk[i] = ++crk;\n\tfor (int i = 1; i <= crk; i++)\n\t\tfor (int j = 1; j <= n; j++)\n\t\t\tpre[i][j] = pre[i][j - 1] + (rk[a[j]] == i);\n\tfor (int i = 1; i <= n; i++) lst[i] = fir[i] = k[i] = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (ct[a[i]] <= B) {\n\t\t\tlst[i] = fir[a[i]], fir[a[i]] = i;\n\t\t\tfor (int o = 1, j = fir[a[i]]; j; o++, j = lst[j])\n\t\t\t\tckmax(k[o], j);\n\t\t}\n\t\telse {\n\t\t\tfor (int o = 1; k[o] && o <= B; o++)\n\t\t\t\tckmax(ans[a[i]], ct[a[i]] - pre[rk[a[i]]][i - 1] + o + pre[rk[a[i]]][k[o] - 1]);\n\t\t}\n\t}\n\tfor (int i = 1; i <= c; i++) if (ct[i] > B)\n\t\tfor (int o = 1; k[o] && o <= B; o++)\n\t\t\tckmax(ans[i], o + pre[rk[i]][k[o] - 1]);\n\tfor (int i = 1; i <= n; i++) lst[i] = fir[i] = k[i] = s[i] = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (ct[a[i]] <= B) {\n\t\t\ts[i] = s[fir[a[i]]] + 1;\n\t\t\tfor (int j = fir[a[i]]; j; j = lst[j])\n\t\t\t\tckmax(ans[a[i]], ct[a[i]] - s[i] + 1 + s[j] + k[j + 1]);\n\t\t\tckmax(ans[a[i]], ct[a[i]] - s[i] + 1 + k[1]);\n\t\t\tlst[i] = fir[a[i]], fir[a[i]] = i;\n\t\t\tfor (int o = 1, j = fir[a[i]]; j; o++, j = lst[j]) {\n\t\t\t\tint tmp = j;\n\t\t\t\twhile (tmp > 0 && k[tmp] < o) k[tmp--] = o;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 1; i <= c; i++) if (ct[i] <= B)\n\t\tfor (int j = fir[i]; j; j = lst[j]) {\n\t\t\tif (j == n) continue;\n\t\t\tckmax(ans[i], s[j] + k[j + 1]);\n\t\t}\n\tint as = 0; vector<int> out;\n\tfor (int i = 1; i <= c; i++) {\n\t\tif (as < ans[i]) out.clear(), out.push_back(b[i]), as = ans[i];\n\t\telse if (as == ans[i]) out.push_back(b[i]);\n\t}\n\tprintf(\"%d\\n\", as);\n\tsort (out.begin(), out.end());\n\tfor (int x : out) printf(\"%d\\n\", x);\n}\n\nint T;\n\nint main() {\n\tfor (scanf(\"%d\", &T); T; T--) solve();\n\treturn 0;\n}\n```",
        "postTime": 1651910573,
        "uid": 111892,
        "name": "Cherished",
        "ccfLevel": 9,
        "title": "[ZJOI2022] \u4f17\u6570\u9898\u89e3"
    },
    {
        "content": "\u4f17\u6240\u5468\u77e5\uff0cZJOI \u7684\u7b7e\u5230\u9898\u4e00\u822c\u5728 D1T2\u3002\n\n\u6ca1\u53bb ZJOI\uff0c\u5728\u5bb6\u53e3\u80e1\u7684\u3002\u60f3\u4e86\u4e00\u4f1a\u4f3c\u4e4e\u5c31\u4f1a\u6839\u53f7\u505a\u6cd5\u4e86\u3002\u771f\u96be\u53d7\u6ca1\u5f97\u53bb\u7701\u9009\uff0c\u672c\u6765\u53ef\u80fd\u4f1a\u662f\u8003\u573a\u4e0a\u505a\u51fa\u7684\u7b2c\u4e00\u4e2a\u9ed1\u5427\u3002\n\n------------\n\n\n\u539f\u9898\u662f\u9009\u62e9\u4e00\u6bb5\u533a\u95f4 $[l,r]$\uff0c\u4f7f\u5f97 $[l,r]$ \u5185\u7684\u4f17\u6570\u6b21\u6570\u4e0e\u9664\u53bb\u6b64\u6bb5\u533a\u95f4\u5916\u7684\u4f17\u6570\u6b21\u6570\u7684\u548c\u6700\u5927\uff0c\u6b64\u65f6\u4f17\u6570\u7b54\u6848\u662f $[l,r]$ \u5916\u7684\u4efb\u4f55\u4e00\u4e2a\u4f17\u6570\u3002\n\n\u6839\u53f7\u5206\u6cbb\u3002\u8bbe $B=\\sqrt n$\u3002\u8003\u8651\u989c\u8272\u51fa\u73b0\u6b21\u6570\u4e0d\u8d85\u8fc7 $B$ \u7684\u662f A \u7c7b\uff0c\u5426\u5219\u662f B \u7c7b\u3002\u6211\u4eec\u679a\u4e3e\u4e00\u4e0b $[l,r]$ \u5916\u7684\u4f17\u6570\u662f $x$\u3002\n\n1. \u5185\u90e8\u7684\u4f17\u6570\u662f A \u7c7b\u3002\u6b64\u65f6\u5185\u90e8\u7684\u4f17\u6570\u6b21\u6570\u5fc5\u7136\u4e0d\u8d85\u8fc7 $B$\u3002\n\n\u679a\u4e3e\u5185\u90e8\u4f17\u6570\u51fa\u73b0\u6b21\u6570 $k$\uff0c\u6b64\u65f6\u53ea\u8981\u8ba9 $[l,r]$ \u5185\u7b54\u6848\u662f $k$ \u4e14 $x$ \u7684\u51fa\u73b0\u6b21\u6570\u6700\u5c0f\u5c31\u884c\u4e86\u3002\u5bf9\u4e8e\u6bcf\u4e2a $k$\uff0c\u9884\u5904\u7406\u597d\u4f4d\u7f6e $i$ \u7684\u989c\u8272\u7684\u4e4b\u524d\u7b2c $k$ \u4e2a\u51fa\u73b0\u4f4d\u7f6e $pre_{i}$\u3002\u8003\u8651\u6240\u6709\u76f8\u90bb $x$ \u7684\u4f4d\u7f6e\u4e4b\u95f4\u7684\u95f4\u9694\uff0c\u627e\u5230\u8fd9\u91cc $pre$ \u7684\u6700\u5927\u503c\u5c31\u884c\u4e86\u3002\u7136\u540e\u7528\u53cc\u6307\u9488\u627e\u4e00\u4e0b\u5f53\u524d $pre$ \u7684\u6700\u5927\u503c\u4f4d\u4e8e\u54ea\u4e2a\u95f4\u9694\uff0c\u5c31\u53ef\u4ee5\u8ba1\u7b97\u3002\n\n\n2. \u5185\u90e8\u7684\u4f17\u6570\u662f B \u7c7b\u3002\u6b64\u65f6\u5185\u90e8\u7684\u4f17\u6570\u79cd\u7c7b\u4e0d\u8d85\u8fc7 $B$\u3002\n\n\u679a\u4e3e\u5f53\u524d\u5185\u90e8\u4f17\u6570\u662f $y$\u3002\u5047\u8bbe\u6bcf\u4e2a $x$ \u662f $+1$\uff0c\u6bcf\u4e2a $y$ \u662f $-1$\uff0c\u76ee\u6807\u662f\u627e\u5230 $l,r$ \u4f7f\u5f97 $[1,l]+[r,n]$ \u6700\u5927\u3002\u6240\u4ee5 $l,r$ \u5fc5\u7136\u843d\u5728 $+1$ \u4e0a\uff0c\u524d\u7f00\u548c\u4e00\u4e0b\u53ef\u4ee5\u7528 $x$ \u7684\u6b21\u6570\u6b21\u68c0\u67e5\u5b8c\u6210\u3002\n\n\u603b\u590d\u6742\u5ea6 $O(n\\sqrt n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nconst int N=2e5+5,B=447;\nstruct point\n{\n\tint x,id;\n}b[N];\nint a[N],ans[N],c[N],col[N],pre[N],d[N];\nint A[N],C[N],cnta,cntc,sum[N];\nvector<int>g[N];\nbool cmp(point x,point y)\n{\n\treturn x.x<y.x;\n}\ninline int read()\n{\n\tchar C=getchar();\n\tint F=1,ANS=0;\n\twhile (C<'0'||C>'9')\n\t{\n\t\tif (C=='-') F=-1;\n\t\tC=getchar();\n\t}\n\twhile (C>='0'&&C<='9')\n\t{\n\t\tANS=ANS*10+C-'0';\n\t\tC=getchar();\n\t}\n\treturn F*ANS;\n}\nvoid work()\n{\n\tn=read();\n\tfor (int i=1;i<=n;i++) b[i].id=i,b[i].x=read();\n\tsort(b+1,b+n+1,cmp);\n\tm=0;\n\tint gp=0; \n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tif (i==1||b[i].x!=b[i-1].x) c[++m]=b[i].x;\n\t\ta[b[i].id]=m;\n\t}\n\tfor (int i=1;i<=m;i++) ans[i]=0,col[i]=0;\n\tfor (int i=1;i<=m;i++) g[i].clear();\n\tfor (int i=1;i<=n;i++) col[a[i]]++,g[a[i]].push_back(i),d[i]=col[a[i]];\n\tcnta=0,cntc=0;\n\tint b=0;\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tgp=max(gp,col[i]);\n\t\tif (col[i]>B) A[++cnta]=i;\n\t\telse C[++cntc]=i,b=max(b,col[i]);\n\t}\n\tfor (int j=1;j<=cnta;j++)\n\t{\n\t\tint v=A[j];\n\t\tfor (int i=1;i<=n;i++) sum[i]=0;\n\t\tfor (int i:g[v]) sum[i]=-1;\n\t\tfor (int i=1;i<=n;i++) sum[i]+=sum[i-1];\n\t\tfor (int u=1;u<=m;u++)\n\t\t{\n\t\t\tint res=0,tot=0;\n\t\t\tfor (int i:g[u])\n\t\t\t{\n\t\t\t\tans[u]=max(ans[u],col[v]+col[u]-res+sum[n]-sum[i-1]+tot);\n\t\t\t\tres++;\n\t\t\t\ttot=max(tot,res+sum[i]);\n\t\t\t}\n\t\t\tans[u]=max(ans[u],tot+col[v]);\n\t\t}\n\t}\n\tint res=0;\n\tfor (int i=1;i<=m;i++) res=max(res,ans[i]);\n\tfor (int k=1;k<=b;k++)\n\t{\n\t\tif (k+gp<res) continue;\n\t\tpre[0]=-1;\n\t\tfor (int i=1;i<=n;i++)\n\t\t{\n\t\t\tif (d[i]-k<=-1) pre[i]=-1;\n\t\t\telse pre[i]=g[a[i]][d[i]-k];\n\t\t}\n\t\tfor (int i=2;i<=n;i++) pre[i]=max(pre[i-1],pre[i]);\n\t\tfor (int u=1;u<=m;u++)\n\t\t{\n\t\t\tint res=0,tot=0;\n\t\t\tfor (int i:g[u])\n\t\t\t{\n\t\t\t\tint p=pre[i-1];\n\t\t\t\tif (p==-1)\n\t\t\t\t{\n\t\t\t\t\tres++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\twhile (tot<col[u]&&p>g[u][tot]) tot++;\n\t\t\t\tans[u]=max(ans[u],k+col[u]-(res-tot));\n\t\t\t\tres++;\n\t\t\t}\n\t\t\tif (pre[n]!=-1) \n\t\t\t{\n\t\t\t\tint p=pre[n];\n\t\t\t\twhile (tot<col[u]&&p>g[u][tot]) tot++;\n\t\t\t\tans[u]=max(ans[u],k+col[u]-(res-tot));\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i=1;i<=m;i++) res=max(res,ans[i]);\n\tprintf(\"%d\\n\",res);\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tif (ans[i]==res) printf(\"%d\\n\",c[i]);\n\t}\n}\nint main()\n{\n\tint T=read();\n\twhile (T--) work();\n\treturn 0;\n}\n```\n",
        "postTime": 1651844172,
        "uid": 151475,
        "name": "Little09",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P8330 [ZJOI2022] \u4f17\u6570"
    },
    {
        "content": "ZJOI 2022 \u4f17\u6570\u3002\r\n\r\n\u548c\u51fa\u73b0\u6b21\u6570\uff0c\u4f17\u6570\u6302\u94a9\u7684\u5927\u6982\u5f88\u5bb9\u6613\u8054\u60f3\u5230 sqrt.\r\n\r\n\u8003\u8651\u5e73\u8861\u89c4\u5212\uff0c\u5957\u8def\u7684\uff0c\u5bf9\u51fa\u73b0\u6b21\u6570\u5206\u6cbb\u3002\u8bb0 $cnt_i$ \u8868\u793a $i$ \u5728\u5e8f\u5217\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002\r\n\r\n- $cnt_i>B$\uff0c\r\n  - \u8fd9\u6837\u7684 $i$ \u7684\u4e2a\u6570\u4e0d\u8d85\u8fc7 $\\frac{n}{B}$ \u4e2a\uff0c\u6211\u4eec\u8003\u8651\u679a\u4e3e\u8fd9\u4e2a\u6570\u7684\u5177\u4f53\u662f\u4ec0\u4e48\uff0c\u5e76\u679a\u4e3e\u4ed6\u662f\u5426\u4f5c\u4e3a\u533a\u95f4\u5185\u7684\u6570\u3002\r\n  - \u6ce8\u610f\u5230\u533a\u95f4\u5185\u548c\u533a\u95f4\u5916\u672c\u8d28\u4e0a\u662f\u7b49\u4ef7\u7684\uff0c\u6545\u53ea\u5206\u6790\u533a\u95f4\u5185\u7684\u60c5\u51b5\u3002\r\n  - \u6211\u4eec\u540c\u65f6\u679a\u4e3e\u533a\u95f4\u5916\u7684\u6570 $j$ \u662f\u4ec0\u4e48\uff0c\u5e76\u4e14\u628a\u539f\u5e8f\u5217\u4e2d\u7b49\u4e8e $i$ \u7684\u6570\u8bbe\u505a $-1$\uff0c\u7b49\u4e8e $j$  \u7684\u6570\u5b57\u8bbe\u505a $1$\uff0c\u90a3\u4e48\u539f\u95ee\u9898\u7b49\u4ef7\u4e8e\u6c42\u4e00\u4e2a\u6700\u5927\u5b50\u6bb5\u548c\u7684\u3002\r\n  - \u4f46\u662f\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u662f\u592a\u9ad8\u4e86\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u6211\u4eec\u9009\u62e9\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9\u5fc5\u7136\u662f\u9876\u7740 $j$ \u7684\uff0c\u5219\u6700\u5927\u5b50\u6bb5\u548c\u7684\u6709\u6548\u8f6c\u79fb\u70b9\u4e3a $cnt_j$\u3002\r\n  - \u8fd9\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(\\frac{n}{B}\\times \\sum cnt_j)=\\mathcal{O}(\\frac{n^2}{B})$\u3002\r\n- $cnt_i\\leq B$\r\n  - \u6b64\u65f6\u6211\u4eec\u53ea\u9700\u8981\u89e3\u51b3\u533a\u95f4\u5185\u5916\u7684\u6570**\u90fd**\u5c0f\u4e8e\u7b49\u4e8e $B$ \u7684\u60c5\u51b5\u3002\r\n  - \u4ecd\u7136\u679a\u4e3e\u5916\u5c42\u7684\u6570\uff0c\u4f46\u662f\u8fd9\u6b21\u6211\u4eec\u76f4\u63a5\u679a\u4e3e\u5185\u5c42\u7684\u4f17\u6570**\u5927\u5c0f**\uff0c\u8fd9\u4e2a\u4e1c\u897f\u663e\u7136\u662f\u6709\u5355\u8c03\u6027\u7684\uff0c\u53ef\u4ee5\u9884\u5904\u7406\u3002\r\n  - \u7136\u540e\u540c\u6837\u7684\uff0c\u533a\u95f4\u7aef\u70b9\u4e5f\u4e00\u5b9a\u662f\u9876\u7740 $i$ \u7684\u3002\r\n  - \u5177\u4f53\u7684\u7ec6\u8282\u4e0a\u5927\u6982\u9700\u8981\u5148\u679a\u4e3e $i$ \u548c\u8d77\u59cb\u4f4d\u7f6e\uff0c\u7136\u540e\u679a\u4e3e\u5185\u5c42\u7b54\u6848\uff0c\u8fd9\u6837\u5c31\u80fd\u4fdd\u8bc1\u65f6\u95f4\u590d\u6742\u5ea6\u63a7\u5236\u5728 $\\mathcal{O}(nB)$\u3002\r\n\r\n\u7136\u540e\u5e73\u8861\u4e00\u4e0b\u53d6 $B=\\sqrt n$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f\u4e25\u683c\u5355\u6839\u4e86\u3002\r\n\r\n~~\u8fd9\u79cd\u9898\u771f\u7684\u4e00\u4e0d\u5c0f\u5fc3\u5c31\u590d\u6742\u5ea6\u9000\u5316\u4e86\u554a\u3002~~\r\n\r\n",
        "postTime": 1676132278,
        "uid": 183026,
        "name": "Cocoly1990",
        "ccfLevel": 0,
        "title": "[ZJOI2022] \u4f17\u6570 \u9898\u89e3\u62a5\u544a\u3002"
    },
    {
        "content": "## \u4f17\u6570\n\n### \u9898\u610f\n\n\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217\uff0c\u7136\u540e\u7b2c $i$ \u4e2a\u5143\u7d20\u662f $a_i$\uff0c\u4f60\u53ef\u4ee5\u5bf9\u4e8e\u5e8f\u5217\u8fdb\u884c\u4e00\u6b21\u64cd\u4f5c\uff0c\u4f7f\u5f97 $[l,r]$ \u8fd9\u4e2a\u533a\u95f4\u5185\u6240\u6709\u6570\u5b57\u52a0\u4e0a $k$\u3002\u4f60\u5e0c\u671b\u64cd\u4f5c\u4e4b\u540e\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570\u5c3d\u91cf\u591a\uff0c\u4f60\u9700\u8981\u8f93\u51fa\u6700\u7ec8\u5e8f\u5217\u7684\u4f17\u6570\u51fa\u73b0\u6b21\u6570\u7684\u6700\u5927\u503c\uff0c\u5e76\u8f93\u51fa\u8fd9\u4e2a\u4f17\u6570\u7684\u6240\u6709\u53ef\u80fd\u53d6\u503c\u3002\u6ce8\u610f\u5bf9\u4e8e\u4e00\u4e2a\u5e8f\u5217\uff0c\u4f17\u6570\u7684\u53d6\u503c\u53ef\u80fd\u4e0d\u6b62\u4e00\u4e2a\u3002\n\n$n\\le 2\\times 10^5,a_i\\le 10^9$\n\n### \u9898\u89e3\n\n\u4f17\u6570\u7684\u9898\uff0c\u770b\u8d77\u6765\u5c31\u4e0d\u80fdpolylog\uff0c\u8003\u8651\u600e\u4e48\u6839\u53f7\u80fd\u505a\u3002\n\n\u8003\u8651\u600e\u4e48\u6839\u53f7\u7684\u505a\u3002\n\n\u9996\u5148\u5bf9\u4e8e\u8fd9\u79cd\u4e1c\u897f\uff0c\u90fd\u6709\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u6027\u8d28\uff0c\u5c31\u662f\u8bf4\uff0c\u51fa\u73b0\u6b21\u6570\u5927\u4e8e $\\sqrt n$ \u7684\u989c\u8272\uff0c\u4e0d\u8d85\u8fc7 $O(\\sqrt n)$ \u4e2a\uff0c\u4e8e\u662f\u53ef\u4ee5\u6bcf\u79cd\u989c\u8272 $O(n)$ \u505a\uff0c\u7136\u540e\u5728\u8003\u8651\u5c0f\u7684\u989c\u8272\u4e92\u76f8\u7684\u7b54\u6848\u5373\u53ef\u3002\n\n\u9996\u5148\u5148\u505a\u4e00\u70b9\u51c6\u5907\u5de5\u4f5c\uff0c\u6bd4\u5982\u5148\u628a\u6570\u5b57\u79bb\u6563\u5316\uff0c\u7136\u540e\u4ee4 $pos_i$ \u8868\u793a $i$ \u989c\u8272\u51fa\u73b0\u7684\u4e0b\u6807\u6570\u7ec4\u3002\n\n\u5bf9\u4e8e\u4e00\u79cd\u5927\u4e8e $O(\\sqrt n)$ \u7684\u989c\u8272\uff0c\u4ee4 $s$ \u4e3a\u4ed6\u7684\u524d\u7f00\u548c\u6570\u7ec4\uff0c\u7136\u540e\u5408\u6cd5\u7684\u65b9\u6848\u80af\u5b9a\u662f ``xxxyyyyxxx` \u6216\u8005\u662f `yyyyxxxyyy`\uff0c\u4e8e\u662f\u6211\u4eec\u5355\u72ec\u8003\u8651\u73b0\u5728\u7684\u989c\u8272 $x$ \u548c\u4e00\u79cd\u989c\u8272 $y$\uff0c\u4ece\u524d\u5411\u540e\u626b\u4e00\u904d\u540c\u65f6\u8bb0\u5f55\u4e00\u4e9b\u503c\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ea\u5269\u4e0b\u4e86\u4e24\u4e24\u90fd\u662f $\\le \\sqrt n$ \u7684\u989c\u8272\uff0c\u600e\u4e48\u529e\u5462\u3002\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e2a\u989c\u8272\uff0c\u66b4\u529b\u679a\u4e3e\u989c\u8272\u7684\u5de6\u53f3\u7aef\u70b9\uff0c\u7136\u540e\u4e2d\u95f4\u5c31\u662f\u6c42\u8fd9\u4e00\u6bb5\u533a\u95f4\u5185\u54ea\u4e2a\u989c\u8272\u51fa\u73b0\u6b21\u6570\u6700\u591a\uff0c\u8003\u8651\u626b\u63cf\u7ebf\uff0c\u7136\u540e\u4ee4 $s_i$ \u8868\u793a $i$ \u4e3a\u5de6\u7aef\u70b9\u7684\u60c5\u51b5\u4e0b\uff0c\u5f53\u524d\u4f17\u6570\u6700\u591a\u662f\u591a\u5c11\u3002\u6211\u4eec\u8003\u8651\u8fd9\u73a9\u610f\u5176\u5b9e\u4e0d\u597d\u7ef4\u62a4\uff0c\u4f46\u662f\u6ce8\u610f\u5230 $s_i$ \u4e0d\u589e\uff0c\u7136\u800c\u4ee5 $i$ \u4e3a\u5de6\u7aef\u70b9\u7684\u4f17\u6570\u6700\u591a\u662f  $\\sqrt n$\uff0c\u7136\u540e\u603b\u5171 $s_i$ \u6570\u7ec4\u7684\u603b\u548c\u4e0d\u8d85\u8fc7 $n\\sqrt n$\uff0c\u4e8e\u662f\u53ef\u4ee5\u66b4\u529b\u66f4\u65b0\uff0c\u590d\u6742\u5ea6\u662f\u5bf9\u7684\u3002\n\n\u7136\u540e\u6ce8\u610f\u5230\u6211\u4eec\u53ef\u80fd\u4f1a\u7b97\u6f0f\u4e00\u79cd\u5c31\u662f\u5bf9\u4e8e $x$ \u7684 `xxyyy` \u7684\u8d21\u732e\u3002\n\n```cpp\n// Siriqwq\n#include <bits/stdc++.h>\nusing std::cin;\nusing std::cout;\nusing std::vector;\nusing std::copy;\nusing std::reverse;\nusing std::sort;\nusing std::get;\nusing std::unique;\nusing std::swap;\nusing std::array;\nusing std::cerr;\nusing std::function;\nusing std::map;\nusing std::set;\nusing std::pair;\nusing std::mt19937;\nusing std::make_pair;\nusing std::tuple;\nusing std::make_tuple;\nusing std::uniform_int_distribution;\nusing ll = long long;\nnamespace qwq {\n\tmt19937 eng;\n\tvoid init(int Seed) {return eng.seed(Seed);}\n\tint rnd(int l = 1, int r = 1000000000) {return uniform_int_distribution<int> (l, r)(eng);}\n}\ntemplate <typename T>\ninline T min(const T &x, const T &y) {return x < y ? x : y;}\ntemplate<typename T>\ninline T max(const T &x, const T &y) {return x > y ? x : y;}\ntemplate<typename T>\ninline void read(T &x) {\n\tx = 0;\n\tbool f = 0;\n\tchar ch = getchar();\n\twhile (!isdigit(ch)) f = ch == '-', ch = getchar();\n\twhile (isdigit(ch)) x = x * 10 + ch - '0', ch = getchar();\n\tif (f) x = -x;\n}\ntemplate<typename T, typename ...Arg>\ninline void read(T &x, Arg &... y) {\n\tread(x);\n\tread(y...);\n}\ntemplate<typename T>\ninline void chkmin(T &x, const T &y) {if (x > y) x = y;}\ntemplate<typename T>\ninline void chkmax(T &x, const T &y) {if (x < y) x = y;}\n#define O(x) cerr << #x << \" : \" << x << '\\n'\nconst double Pi = acos(-1);\nconst int MAXN = 262144, MOD = 998244353, inv2 = (MOD + 1) / 2, I32_INF = 0x3f3f3f3f;\nconst long long I64_INF = 0x3f3f3f3f3f3f3f3f;\nauto Ksm = [] (int x, int y) -> int {\n\tif (y < 0) {\n\t\ty %= MOD - 1;\n\t\ty += MOD - 1;\n\t}\n\tint ret = 1;\n\tfor (; y; y /= 2, x = (long long) x * x % MOD) if (y & 1) ret = (long long) ret * x % MOD;\n\treturn ret;\n};\nauto Mod = [] (int x) -> int {\n\tif (x >= MOD) return x - MOD;\n\telse if (x < 0) return x + MOD;\n\telse return x;\n};\ninline int ls(int k) {return k << 1;}\ninline int rs(int k) {return k << 1 | 1;}\nint N, A[MAXN], B[MAXN], w[MAXN], pos[MAXN], blk_sz, s[MAXN];\nvector<int> vec[MAXN];\n// xxxyyyxxx\nvoid wk_1(int x, int y) {\n\tint tmp = -I32_INF, ret = 0;\n\tfor (int j = 0; j < vec[y].size(); ++j) {\n\t\tchkmax(tmp, s[vec[y][j]] - j);\n\t\tchkmax(ret, tmp + j + 1 + s[N] - s[vec[y][j]]);\n\t}\n\tchkmax(w[x], ret);\n}\n// yyyyxxxyyy\nvoid wk_2(int x, int y) {\n\tint tmp = -I32_INF, ret = 0;\n\tfor (int j = 0; j < vec[y].size(); ++j) {\n\t\tchkmax(ret, tmp + s[vec[y][j]] + (int)vec[y].size() - j);\n\t\tchkmax(tmp, j - s[vec[y][j]] + 1);\n\t\tchkmax(ret, (int)vec[y].size() - j + s[vec[y][j]]);\n\t\tchkmax(ret, j + 1 + s[N] - s[vec[y][j]]);\n\t}\n\tchkmax(w[y], ret);\n}\nvoid wk_big() {\n\tfor (int i = 1; i <= *B; ++i) {\n\t\tif (vec[i].size() > blk_sz) {\n\t\t\tfor (int j = 1; j <= N; ++j) s[j] = 0;\n\t\t\tfor (auto &j: vec[i]) s[j] = 1;\n\t\t\tfor (int j = 2; j <= N; ++j) s[j] += s[j - 1];\n\t\t\tfor (int j = 1; j <= *B; ++j) if (j != i) wk_1(i, j);\n\t\t\tfor (int j = 1; j <= *B; ++j) if (vec[j].size() <= blk_sz) wk_2(i, j);\n\t\t}\n\t}\n}\ninline void mfy(int x, int y) {while (x && s[x] < y) s[x--] = y;}\nvoid wk_small() {\n\tfor (int i = 1; i <= N; ++i) s[i] = 0;\n\tfor (int i = 1; i <= N; ++i) if (vec[A[i]].size() <= blk_sz) {\n\t\tint tmp = vec[A[i]].size() - pos[i] + s[1];\n\t\tfor (int j = pos[i] - 1; j >= 0; --j) {\n\t\t\tint cyc = vec[A[i]][j];\n\t\t\tchkmax(tmp, j + 1 + (int)vec[A[i]].size() - pos[i] + s[cyc + 1]);\n\t\t}\n\t\tchkmax(w[A[i]], tmp);\n\t\tfor (int j = pos[i]; j >= 0; --j) mfy(vec[A[i]][j], pos[i] - j + 1);\n\t}\n\tfor (int i = 1; i <= N; ++i) s[i] = 0;\n\tint mx = 0;\n\tfor (int i = N; i; --i) {\n\t\tchkmax(w[A[i]], pos[i] + 1 + mx);\n\t\tchkmax(mx, ++s[A[i]]);\n\t}\n}\nint main() {\n\t// std::ios::sync_with_stdio(0);\n\t// cout << std::fixed << std::setprecision(8);\n\t// cin.tie(0);\n\t// cout.tie(0);\n// \tfreopen(\"1.in\", \"r\", stdin);\n// \tfreopen(\"1.out\", \"w\", stdout);\n\tqwq::init(20050112);\n\tint T;\n\tfor (read(T); T--; ) {\n\t\t// prepare work\n\t\tread(N);\n\t\tfor (int i = 1; i <= N; ++i) read(A[i]), B[i] = A[i];\n\t\tsort(B + 1, B + 1 + N);\n\t\t*B = unique(B + 1, B + 1 + N) - B - 1;\n\t\tfor (int i = 1; i <= N; ++i) vec[A[i] = std::lower_bound(B + 1, B + 1 + *B, A[i]) - B].push_back(i), pos[i] = vec[A[i]].size() - 1;\n\t\tblk_sz = sqrt(N);\n\t\t// work class\n\t\twk_big();\n\t\twk_small();\n\t\tint ans = 0;\n\t\tfor (int i = 1; i <= *B; ++i) chkmax(ans, w[i]);\n\t\tprintf(\"%d\\n\", ans);\n\t\tfor (int i = 1; i <= *B; ++i) if (w[i] == ans) printf(\"%d\\n\", B[i]);\n\t\tfor (int i = 1; i <= *B; ++i) vec[i].clear(), w[i] = 0;\n\t}\n\t// cout << (-3 / 2);\n\tcerr << ((double) clock() / CLOCKS_PER_SEC) << '\\n';\n\treturn (0-0);\n}\n```\n",
        "postTime": 1652806468,
        "uid": 232125,
        "name": "SiRiehn_nx",
        "ccfLevel": 9,
        "title": "[ZJOI2022] \u4f17\u6570"
    }
]