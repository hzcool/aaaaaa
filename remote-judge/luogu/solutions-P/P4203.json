[
    {
        "content": "\u8fd9\u9898\u7adf\u7136\u6ca1\u6709\u9898\u89e3qaq\u3002\n\n\u4e8b\u5148\u58f0\u660e\uff1a\u6211\u7684\u5efa\u6a21\u548c\u7f51\u4e0a\u67d0\u4e9b\u9898\u89e3\u4e0d\u4e00\u6837\uff0c\u5bfc\u81f4\u6211\u7684\u6811\u72b6\u6570\u7ec4\u8981\u5f00 $3len\\ast 3len$ \u800c\u4e0d\u662f $2len\\ast 2len$\uff0c\u4e0d\u8fc7\u590d\u6742\u5ea6\u6ca1\u53d8\u3002\n\n\u53e6\u5916\uff0c\u53ef\u4ee5\u53d1\u73b0\u4e91\u6735\u7684\u989c\u8272\u53ea\u662f\u7528\u6765\u6807\u8bb0\u4e91\u6735\u4fbf\u4e8e\u5220\u9664\u7684\uff0c\u6240\u4ee5\u4ee5\u4e0b\u5148\u4e0d\u4e88\u8003\u8651\u3002\n\n\u8003\u8651\u5230\u6bcf\u4e2a\u4e91\u6735\u7684\u8fd0\u52a8\u5468\u671f\u90fd\u662f $2len$\uff08\u7ecf\u8fc7 $2len$ \u7684\u65f6\u95f4\u4e4b\u540e\u56de\u5230\u539f\u5904\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e2a\u4e91\u5f69\u5728*\u4f4d\u7f6e-\u65f6\u95f4*\u5750\u6807\u7cfb\u91cc\u753b\u6210\u4e00\u4e2a\u56fe\u5f62\uff1a\u6a2a\u5750\u6807\u662f\u4f4d\u7f6e\uff1b\u7eb5\u5750\u6807\u662f\u65f6\u95f4\uff0c\u800c\u7eb5\u5750\u6807\u7684\u53d6\u503c\u8303\u56f4\u53ea\u6709 $[0,2len]$\u3002\u4e00\u4e2a\u70b9 $(x,T)$ \u5728\u8fd9\u4e2a\u56fe\u5f62\u91cc\u5f53\u4e14\u4ec5\u5f53 $T$ \u65f6\u523b\u65f6 $x$ \u8fd9\u4e2a\u4f4d\u7f6e\u80fd\u63a5\u5230\u8fd9\u4e2a\u4e91\u6735\uff08\u5047\u5b9a\u7ebf\u6bb5\u7684\u51fa\u73b0\u65f6\u95f4\u6bd4 $T$ \u65e9\uff09\u3002\n\n\u6bd4\u5982\u6837\u4f8b 1\uff0c$len=10$\uff0c\u4e00\u4e2a\u533a\u95f4\u5728\u65f6\u523b 0 \u51fa\u73b0\u5728 \n$[1,3]$\uff0c\u5411\u5de6\u79fb\u52a8\u3002\u90a3\u4e48\u5b83\u5bf9\u5e94\u7684\u56fe\u5f62\u662f\u8fd9\u6837\u7684\uff1a\n\n![qwq](https://cdn.luogu.com.cn/upload/pic/46551.png)\n\n\u5982\u679c\u8fd9\u4e2a\u533a\u95f4\u662f\u5728\u65f6\u523b 25 \u51fa\u73b0\u5728 $[4,6]$ \u5e76\u5f80\u53f3\u79fb\u52a8\uff0c\u90a3\u5b83\u5bf9\u5e94\u7684\u56fe\u5f62\u662f\u4e00\u6837\u7684\u3002\n\n\u4e00\u822c\u7684\uff0c\u5982\u679c\u4e00\u4e2a\u533a\u95f4\u5728 $0$ \u65f6\u523b\uff08\u6ce8\u610f\uff0c\u65f6\u95f4\u5bf9 $2len$ \u53d6\u6a21\uff0c\u76f8\u5f53\u4e8e\u5728 $2k\\cdot len$ \u65f6\u523b\uff09\u5904\u4e8e $[l,r]$ \u4e14\u5411\u5de6\u8d70\uff0c\u90a3\u4e48\u84dd\u6298\u7ebf\u4e3a $(l,0)-(0,l)-(len,len+l)-(l,2len)$\uff0c\u7ea2\u6298\u7ebf\u7684\u56db\u4e2a\u70b9\u5206\u522b\u662f\u84dd\u6298\u7ebf\u56db\u4e2a\u70b9\u5411\u53f3\u5e73\u79fb $r-l$\uff1b\u5982\u679c\u8fd9\u4e2a\u533a\u95f4\u5728 $0$ \u65f6\u523b\u5904\u4e8e $[l,r]$ \u4e14\u5411\u53f3\u8d70\uff0c\u90a3\u84dd\u6298\u7ebf\u5c31\u662f $(l,r)-(len,len-l)-(0,2len-l)-(l,0)$\uff0c\u7ea2\u6298\u7ebf\u540c\u4e0a\u3002\n\n\u6211\u4eec\u628a\u56fe\u4e2d\u7684\u84dd\u8272\u6298\u7ebf KIGE \u79f0\u4f5c\u56fe\u5f62\u7684\u201c\u5de6\u8fb9\u754c\u201d\uff0c\u7ea2\u8272\u6298\u7ebf MJHF \u79f0\u4f5c\u5176\u201c\u53f3\u8fb9\u754c\u201d\u3002\n\n\u4e00\u4e2a $T$ \u65f6\u523b\u51fa\u73b0\u7684\u8be2\u95ee\u533a\u95f4 $[l,r]$ \u53ef\u4ee5\u5bf9\u5e94\u56fe\u4e2d\u7684\u4e00\u6761\u6c34\u5e73\u7ebf\u6bb5 $(l,T)-(r,T)$\uff1b\u663e\u7136\u8fd9\u4e2a\u5e03\u888b\u80fd\u63a5\u5230\u8fd9\u4e2a\u4e91\u5f69\u5f53\u4e14\u4ec5\u5f53\u8fd9\u4e2a\u7ebf\u6bb5\u548c\u4e0a\u56fe\u7684\u56fe\u5f62\u76f8\u4ea4\uff1b\u8fd9\u7b49\u4ef7\u4e8e\u8bf4 $(l,T)$ \u5728\u53f3\u8fb9\u754c\u5de6\u8fb9\u5e76\u4e14 $(r,T)$ \u5728\u5de6\u8fb9\u754c\u53f3\u8fb9\uff08\u53ef\u4ee5\u6070\u597d\u5728\u8fb9\u754c\u4e0a\uff09\u3002\n\n\u8fd9\u542f\u793a\u6211\u4eec\u628a\u8be2\u95ee\u62c6\u5f00\uff1a\u8be2\u95ee\u53f3\u7aef\u70b9\u5728\u591a\u5c11\u56fe\u5f62\u7684\u84dd\u6298\u7ebf\u53f3\u8fb9\uff08\u5305\u62ec\u5728\u6298\u7ebf\u4e0a\uff09\uff0c\u518d\u8be2\u95ee\u5de6\u7aef\u70b9\u5728\u591a\u5c11\u56fe\u5f62\u7ea2\u6298\u7ebf\u7684\u53f3\u8fb9\uff08\u4e0d\u5305\u62ec\u5728\u6298\u7ebf\u4e0a\uff09\uff1b\u4e24\u8005\u76f8\u51cf\u5c31\u662f\u7b54\u6848\u3002\uff08\u5982\u679c\u4f60\u65e0\u6cd5\u7406\u89e3\u7684\u8bdd\uff0c\u60f3\u4e00\u60f3\u4e91\u5f69\u6539\u6210\u4e0d\u52a8\u7684\u600e\u4e48\u505a\u5c31\u77e5\u9053\u4e86\uff09\n\n\u663e\u7136\u4e24\u4e2a\u95ee\u9898\u662f\u5bf9\u79f0\u7684\uff0c\u6211\u4eec\u53ea\u8003\u8651\u5982\u4f55\u6c42\u524d\u8005\uff08\u7ed9\u5b9a\u5750\u6807\u7cfb\u91cc\u4e00\u70b9\u95ee\u5b83\u5728\u591a\u5c11\u84dd\u6298\u7ebf\u53f3\u8fb9\uff09\u3002\n\n\u5982\u679c\u84dd\u8272\u6298\u7ebf\u53ea\u7531\u6c34\u5e73\u548c\u7ad6\u76f4\u7684\u7ebf\u6bb5\u7ec4\u6210\u7684\u8bdd\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u62c6\u6210\u82e5\u5e72\u77e9\u5f62\u4ece\u800c\u4f7f\u7528\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u89e3\u51b3\uff1b\u4f46\u662f\u73b0\u5728\u7ebf\u6bb5\u90fd\u662f\u503e\u659c $45^\\circ,135^\\circ$ \u7684\u3002\n\n\u53ef\u4ee5\u60f3\u5230\u65cb\u8f6c\u5750\u6807\u7cfb\u3002\u5982\u679c\u6211\u4eec\u628a\u5750\u6807\u7cfb\u65cb\u8f6c $45^\\circ$\uff0c\u5982\u4e0b\u56fe\n\n![qaq](https://cdn.luogu.com.cn/upload/pic/46554.png)\n\n\u9009\u53d6\u70b9 $O(-len,len)$ \u4e3a\u539f\u70b9\uff08\u5176\u5b9e\u54ea\u91cc\u90fd\u65e0\u6240\u8c13\u7684\uff09\uff0c\u4e24\u6761\u7eff\u8272\u7ebf\u662f\u65b0\u5750\u6807\u8f74\u3002\u4e0d\u96be\u53d1\u73b0\u8fd9\u6837\u5904\u7406\u4e4b\u540e\u7ea2\u6298\u7ebf\u548c\u84dd\u6298\u7ebf\u5728\u65b0\u5750\u6807\u7cfb\u91cc\u662f\u6c34\u5e73\u548c\u7ad6\u76f4\u7ebf\u6bb5\u7ec4\u6210\u7684\uff08\u8bf7\u503e\u659c $45^\\circ$ \u770b\uff09\u3002\n\n\u8bbe\u539f\u5750\u6807\u4e3a $(x,T)$\uff0c\u65b0\u5750\u6807\u4e3a $X,Y$\uff0c\u53ef\u4ee5\u53d1\u73b0\u6362\u7b97\u89c4\u5219\u662f\uff08\u5982\u679c\u8981\u6c42\u957f\u5ea6\u4e0d\u53d8\u7684\u8bdd\u5b9e\u9645\u4e0a\u6709 $\\frac1{\\sqrt2}$ \u7684\u7cfb\u6570\uff0c\u4f46\u662f\u65e2\u7136\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u76f8\u5bf9\u4f4d\u7f6e\u5173\u7cfb\uff0c\u6240\u4ee5\u65e0\u6240\u8c13\u4e86\uff09\n\n$$\\left\\{\\begin{aligned}X&=x-T+2len\\\\Y&=x+T\\end{aligned}\\right.$$\n\n\u6240\u4ee5\u73b0\u5728\u95ee\u9898\u53d8\u6210\uff1a\u5728\u65b0\u5750\u6807\u7cfb\u91cc\u6bcf\u6b21\u6dfb\u52a0\u6216\u5220\u9664\u4e00\u6761\u50cf\u56fe\u4e2d\u84dd\u6298\u7ebf\u90a3\u6837\u7684\u7ebf\uff0c\u4ee5\u53ca\u5bf9\u4e00\u4e2a\u70b9\u95ee\u5b83\u5728\u591a\u5c11\u6298\u7ebf\u7684\u53f3\u4fa7\uff08\u6216\u8005\u4e0a\u4fa7\uff0c\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff09\u3002\n\n\u5229\u7528\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\uff0c\u6211\u4eec\u6dfb\u52a0\u56fe\u4e2d\u84dd\u6298\u7ebf\u7684\u65f6\u5019\u53ea\u9700\u8981\u5728 $K,G$ \u5904\u5404\u52a0\u4e00\u3001\u5728 $I$ \u5904\u51cf\u4e00\uff1b\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u4e0d\u4f1a\u6709\u70b9\u5904\u5728 $I$ \u7684\u53f3\u4e0a\u4fa7\uff08$I$ \u70b9\u672c\u8eab\u9664\u5916\uff0c\u53ef\u4ee5\u7279\u5224\u4e00\u4e0b\uff09\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5728 $K,G$ \u70b9\u5404\u52a0\u4e00\u5373\u53ef\uff1b\u7ea2\u6298\u7ebf\u4e5f\u5b8c\u5168\u76f8\u540c\u3002\n\n\u4e8e\u662f\u8fd9\u9898\u5728 $O(n\\log^2len)$ \u7684\u65f6\u95f4\u5185\u89e3\u51b3\u3002\n\n\u4e0a\u4ee3\u7801\uff08CDQ\u5206\u6cbb\uff0c\u5e76\u975e\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\uff0c\u7a7a\u95f4 $O(n+len)$\uff09\uff1a\n\n```cpp\n#include <algorithm>\n#include <cctype>\n#include <cstdio>\n#include <cstring>\n\nconst int L = 2050;\nconst int N = 200050;\nconst int C = 1000050;\n\nint m, len, cl[C], cr[C], cd[C], ans[N], k;\nint P[L * 2];\n\nint readInt() {\n  int ans = 0, c, f = 1;\n  while (!isdigit(c = getchar()))\n    if (c == '-') f = -1;\n  do ans = ans * 10 + c - '0';\n  while (isdigit(c = getchar()));\n  return ans * f;\n}\n\nstruct Event {\n  int tp, x, y, id;\n  Event() {}\n  Event(int t, int X, int T, int id = 0)\n      : tp(t), x(X - T + 2 * len), y(X + T), id(id) {\n  }\n  friend bool operator<(const Event &a, const Event &b) {\n    if (a.x != b.x) return a.x < b.x;\n    return a.y < b.y;\n  }\n} e1[N * 2], e2[N * 2];\n\nint S[L * 3], ll;\n\nvoid add(int x, int y) { for (++x; x <= ll; x += x & -x) S[x] += y; }\nint get(int x) { int y = 0; for (++x; x; x &= x - 1) y += S[x]; return y; }\n\nvoid Solve(Event *e, int l, int r) {\n  if (l == r - 1) return;\n  int mid = (l + r) / 2;\n  Solve(e, l, mid);\n  Solve(e, mid, r);\n  for (int i = l, j = mid; i < mid || j < r; ) {\n    if (i < mid && (j == r || e[i].x <= e[j].x)) {\n      if (e[i].tp) add(e[i].y, e[i].tp);\n      ++i;\n    } else {\n      if (!e[j].tp) ans[e[j].id] += get(e[j].y);\n      ++j;\n    }\n  }\n  for (int i = l; i < mid; ++i)\n    if (e[i].tp) add(e[i].y, -e[i].tp);\n  std::inplace_merge(e + l, e + mid, e + r);\n}\n\ninline void eventAdd(int L, int R, int D, int tp) {\n  if (D == 1) {\n    e1[m] = Event(tp, L, 0);\n    e1[m + 1] = Event(tp, 0, 2 * len - L);\n    P[len - L] -= tp;\n    e2[m] = Event(-tp, R, 0);\n    e2[m + 1] = Event(-tp, R - L, 2 * len - L);\n  } else {\n    e1[m] = Event(tp, 0, L);\n    e1[m + 1] = Event(tp, L, 2 * len);\n    P[len + L] -= tp;\n    e2[m] = Event(-tp, R - L, L);\n    e2[m + 1] = Event(-tp, R, 2 * len);\n  }\n  m += 2;\n}\n\ninline void eventQuery(int L, int R, int T, int i) {\n  e1[m] = Event(0, R, T, i);\n  e2[m++] = Event(0, L - 1, T, i);\n  if (R == len) ans[i] += P[T];\n}\n\nint main() {\n  int n = readInt();\n  len = readInt();\n  while (n--) {\n    int op = readInt(), T = readInt() % (2 * len);\n    if (op == 1) {\n      int C = readInt(), L = readInt(), R = readInt() - L, D = readInt();\n      for (L -= T * D; L < 0 || L > len; D = -D)\n        L = L < 0 ? -L : 2 * len - L;\n      eventAdd(L, R += L, D, 1);\n      cl[C] = L;\n      cr[C] = R;\n      cd[C] = D;\n    } else if (op == 2) {\n      int L = readInt(), R = readInt();\n      eventQuery(L, R, T, k++);\n    } else {\n      int C = readInt();\n      eventAdd(cl[C], cr[C], cd[C], -1);\n    }\n  }\n  ll = len * 3;\n  Solve(e1, 0, m);\n  Solve(e2, 0, m);\n  for (int i = 0; i < k; ++i)\n    printf(\"%d\\n\", ans[i]);\n  return 0;\n}\n```",
        "postTime": 1545131312,
        "uid": 7868,
        "name": "_rqy",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4203 \u3010[NOI2008]\u7cd6\u679c\u96e8 \u3011"
    },
    {
        "content": "\u53d1\u73b0\u4efb\u4f55\u65f6\u523b\u4e0d\u4f1a\u51fa\u73b0\u4e24\u7247\u989c\u8272\u76f8\u540c\u7684\u4e91\u6735\uff0c\u56e0\u6b64\u4e91\u6735\u7684\u989c\u8272\u662f\u4e0d\u7528\u8003\u8651\u7684\uff0c\u8be2\u95ee\u5373\u4e3a\u533a\u95f4\u5185\u6709\u591a\u5c11\u4e2a\u4e91\u6735\u3002\n\n\u56e0\u4e3a\u4e91\u6735\u7684\u8fd0\u52a8\u662f\u5728\u5929\u7a7a\u4e2d\u5f80\u8fd4\u7684\uff0c\u5177\u6709\u5468\u671f\u6027\uff0c\u4e14\u6bcf\u4e2a\u4e91\u6735\u8fd0\u52a8\u901f\u5ea6\u90fd\u76f8\u540c\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u4e8c\u5143\u7ec4 $(time,lenth)$ \u6765\u8868\u793a\u4e00\u4e2a\u4e91\u6735\uff0c$time$ \u4e3a\u8be5\u4e91\u6735\u5de6\u7aef\u70b9\u4f4d\u4e8e\u5de6\u8fb9\u754c\u65f6\u7684\u65f6\u523b\uff0c\u5373 $t-ld \\bmod 2len$\uff0c$lenth$ \u4e3a\u8be5\u4e91\u6735\u7684\u957f\u5ea6\uff0c\u5373 $r-l$\uff0c\u53d1\u73b0\u6bcf\u4e2a\u4e91\u6735\u90fd\u80fd\u7528\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u70b9 $(x,y)$ \u6765\u8868\u793a\u3002\n\n\u63a5\u7740\u8003\u8651\u5982\u4f55\u89e3\u51b3\u8be2\u95ee $(t,l,r)$\uff0c\u9996\u5148\u5bf9 $t$ \u8f6c\u5316\u4e3a $t \\bmod 2len$\u3002\u7136\u540e\u901a\u8fc7\u5206\u7c7b\u8ba8\u8bba\u6765\u627e\u5230\u5bf9\u4e8e\u8be5\u8be2\u95ee\u5728\u4e8c\u7ef4\u5e73\u9762\u4e0a\u5bf9\u5e94\u7684\u4f4d\u7f6e\u3002\u8bbe\u4e91\u6735\u7684\u5750\u6807\u4e3a $(x,y)$\uff0c\u5f97\uff1a\n\n\u5f53 $t \\geqslant x$ \u65f6\uff0c\u8be5\u4e91\u6735\u8981\u5230\u8fbe\u8be2\u95ee\u7684\u65f6\u523b\u8fd8\u9700\u518d\u7ecf\u8fc7\u4e00\u6bb5\u65f6\u95f4\uff0c\u7ecf\u8fc7\u8fd9\u4e9b\u65f6\u95f4\u540e\u4e91\u6735\u7684\u5de6\u7aef\u70b9\u8981\u5728\u8be2\u95ee\u7684\u53f3\u7aef\u70b9\u5de6\u8fb9\uff0c\u5373 $t-x \\leqslant r$\uff0c\u4e91\u6735\u7684\u53f3\u7aef\u70b9\u8981\u5728\u8be2\u95ee\u7684\u5de6\u7aef\u70b9\u53f3\u8fb9\uff0c\u5373 $t-x+y \\geqslant l$\u3002\n\n\u5f53 $t < x$ \u65f6\uff0c\u8be5\u4e91\u6735\u5df2\u7ecf\u8d85\u8fc7\u8be2\u95ee\u7684\u65f6\u523b\uff0c\u56e0\u6b64\u5176\u9700\u8981\u65f6\u5149\u5012\u6d41\uff0c\u56e0\u4e3a\u8fd0\u52a8\u7684\u5468\u671f\u6027\uff0c\u5176\u8fd8\u662f\u5411\u53f3\u8fd0\u52a8\uff0c\u628a\u8fd9\u4e9b\u65f6\u95f4\u5012\u6d41\u540e\u4e91\u6735\u7684\u5de6\u7aef\u70b9\u8981\u5728\u8be2\u95ee\u7684\u53f3\u7aef\u70b9\u5de6\u8fb9\uff0c\u5373 $x-t \\leqslant r$\uff0c\u4e91\u6735\u7684\u53f3\u7aef\u70b9\u8981\u5728\u8be2\u95ee\u7684\u5de6\u7aef\u70b9\u53f3\u8fb9\uff0c\u5373 $x-t+y \\geqslant l$\u3002\n\n\u7efc\u4e0a\u6240\u8ff0\u5f97\u8be2\u95ee\u5728\u4e8c\u7ef4\u5e73\u9762\u4e0a\u5bf9\u5e94\u7684\u4f4d\u7f6e\u4e3a $t-r \\leqslant x \\leqslant t+r,| x-t | +y \\geqslant l$\uff0c\u5728\u5e73\u9762\u4e0a\u753b\u51fa\u56fe\u6765\u5f97\uff1a\n\n![](https://s1.ax1x.com/2020/08/27/dfH0CF.png)\n\n\u53d1\u73b0\u56fe\u50cf\u4e3a\u4e24\u4e2a\u5bf9\u79f0\u7684\u4e94\u8fb9\u5f62\uff0c\u82e5\u5176\u8d85\u51fa\u4e86\u8fb9\u754c\uff0c\u5c31\u5728\u53e6\u4e00\u7aef\u8865\u4e0a\u6765\uff0c\u5bf9\u4e8e\u8be5\u56fe\u50cf\u4e0d\u597d\u8fdb\u884c\u7edf\u8ba1\uff0c\u56e0\u6b64\u8fd8\u9700\u518d\u8fdb\u884c\u8f6c\u5316\uff0c\u5c06\u5176\u8865\u6210\u5e73\u884c\u56db\u8fb9\u5f62\u5f97\uff1a\n\n![](https://s1.ax1x.com/2020/08/27/dfHB34.png)\n\n\u7136\u540e\u8003\u8651\u5bf9\u8fd9\u4e24\u4e2a\u5e73\u884c\u56db\u8fb9\u5f62\u8f6c\u5316\u4e3a\u77e9\u5f62\u6765\u8fdb\u884c\u7edf\u8ba1\uff0c\u56e0\u4e3a\u662f\u8be2\u95ee\u5b58\u5728\u6027\uff0c\u800c\u4e0d\u662f\u9762\u79ef\u4e4b\u7c7b\u7684\u4fe1\u606f\uff0c\u6240\u4ee5\u5bf9\u4e8e\u8be2\u95ee\u7684\u8303\u56f4\u8fdb\u884c\u8f6c\u5316\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u4e91\u6735\u7684\u5750\u6807\u4e5f\u8fdb\u884c\u8f6c\u5316\uff0c\u7136\u540e\u8fdb\u884c\u8be2\u95ee\u5c31\u662f\u5408\u6cd5\u7684\u3002\u5bf9\u4e8e\u53f3\u8fb9\u5411\u53f3\u503e\u659c\u7684\u5e73\u884c\u56db\u8fb9\u5f62\uff0c\u5bf9\u5176\u5e94\u7528\u53d8\u6362 $(x,y) \\Rightarrow (x,x+y)$\uff0c\u5bf9\u4e8e\u5de6\u8fb9\u5411\u5de6\u503e\u659c\u7684\u5e73\u884c\u56db\u8fb9\u5f62\uff0c\u5bf9\u5176\u5e94\u7528\u53d8\u6362 $(x,y) \\Rightarrow (x,y-x+2len)$\uff0c\u8fd9\u91cc\u52a0\u4e0a $2len$ \u7684\u539f\u56e0\u662f\u9632\u6b62\u51fa\u73b0\u8d1f\u5750\u6807\u3002\u7136\u540e\u5bf9\u4e8e\u8fd9\u4e24\u4e2a\u5e73\u884c\u56db\u8fb9\u5f62\u5206\u522b\u7528\u4e24\u4e2a\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4\uff0c\u6bcf\u4e2a\u4e91\u6735\u5728\u6811\u72b6\u6570\u7ec4\u4e0a\u8fdb\u884c\u52a0\u70b9\u5220\u70b9\u65f6\u4e5f\u5e94\u7528\u76f8\u5e94\u7684\u53d8\u6362\u5373\u53ef\u3002\n\n\u6ce8\u610f\u5230\u5f53\u8be2\u95ee\u51fa\u73b0 $r=len$ \u7684\u60c5\u51b5\u65f6\uff0c$t-r$ \u548c $t+r$ \u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u4f1a\u7b97\u91cd\uff0c\u56e0\u6b64\u9700\u8981\u7279\u5224\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 4010\n#define maxm 1000010\n#define lowbit(x) (x&(-x))\nusing namespace std;\ntemplate<typename T> inline void read(T &x)\n{\n    x=0;char c=getchar();bool flag=false;\n    while(!isdigit(c)){if(c=='-')flag=true;c=getchar();}\n    while(isdigit(c)){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n    if(flag)x=-x;\n}\nint n,len;\nstruct node\n{\n    int x,y;\n}p[maxm];\nstruct BIT\n{\n    int t[maxn][maxn];\n    void update(int x,int y,int v)\n    {\n        for(int i=x+1;i<=2*len;i+=lowbit(i))\n            for(int j=y+1;j<=4*len;j+=lowbit(j))\n                t[i][j]+=v;\n    }\n    int ask(int x,int y)\n    {\n        if(x<0||y<0) return 0;\n        int v=0;\n        for(int i=min(x+1,2*len);i;i-=lowbit(i))\n            for(int j=min(y+1,4*len);j;j-=lowbit(j))\n                v+=t[i][j];\n        return v;\n    }\n    int query(int x1,int y1,int x2,int y2)\n    {\n        return ask(x2,y2)-ask(x2,y1-1)-ask(x1-1,y2)+ask(x1-1,y1-1);\n    }\n}T1,T2;\nint main()\n{\n    read(n),read(len);\n    for(int i=1;i<=n;++i)\n    {\n        int opt,t,c,l,r,d,v=0;\n        read(opt);\n        if(opt==1)\n        {\n            read(t),read(c),read(l),read(r),read(d);\n            p[c].x=(t-l*d+2*len)%(2*len),p[c].y=r-l;\n            T1.update(p[c].x,p[c].x+p[c].y,1),T2.update(p[c].x,p[c].y-p[c].x+2*len,1);\n        }\n        if(opt==2)\n        {\n            read(t),read(l),read(r),d=(r==len),t%=2*len;\n            v+=T1.query(t,t+l,t+r-d,4*len);\n            v+=T1.query(0,t+l-2*len,t+r-2*len,4*len);\n            v+=T2.query(t-r+d,l-t+2*len,t-1,4*len);\n            v+=T2.query(t-r+2*len,l-t,2*len,4*len);\n            printf(\"%d\\n\",v);\n        }\n        if(opt==3)\n        {\n            read(t),read(c);\n            T1.update(p[c].x,p[c].x+p[c].y,-1),T2.update(p[c].x,p[c].y-p[c].x+2*len,-1);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1598487910,
        "uid": 172489,
        "name": "lhm_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4203 \u3010[NOI2008]\u7cd6\u679c\u96e8\u3011"
    },
    {
        "content": "\u5e72\u4e86\u4e00\u4e0b\u5348\u7ec8\u4e8e\u770b\u61c2\u4e86\u9898\u89e3Qwq\n\n\u8bf4\u4e00\u4e0b\u5927\u4f17\u5316\u7684\u601d\u8def \u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4+\u6570\u5f62\u7ed3\u5408\n\n~~\u5f88\u61d2\u6ca1\u753b\u56fe \u767e\u5ea6\u767e\u5ea6\u5427~~\n\n\u6b64\u9898\u89e3\u4ecd\u7136\u5b58\u5728\u5f88\u591a\u4e0d\u8db3 \u4ec5\u4f9b\u53c2\u8003 \n\uff08\u4e2a\u4eba\u8ba4\u4e3a\u6709\u4e9b\u5730\u65b9\u6bd4\u7f51\u4e0a\u7684\u66f4\u52a0\u8be6\u7ec6\uff09\n\n```cpp\n/*\n\t\u6240\u6709\u7684\u4e8b\u4ef6\u6309\u7167\u8f93\u5165\u987a\u5e8f\u4f9d\u6b21\u53d1\u751f\n\t\u641e\u4e86\u534a\u5929\u4e0d\u9700\u8981\u53ef\u6301\u7eed\u3002\u3002\u3002 \n\t\u9996\u5148\u770b\u9898\u89e3\n\t\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4e91 \u6709\uff08\u51fa\u73b0\u65f6\u95f4\uff0c\u8303\u56f4\uff0c\u8fd0\u52a8\u65b9\u5411\uff09 \n\t\u56e0\u4e3a\u8fd0\u52a8\u662f\u5f80\u8fd4\u7684 \u5b58\u5728\u5468\u671f\u6027\n\t\u628a\u5f80\u53f3\u79fb\u52a8\u7684\u4e91\u770b\u505a+len\u4f4d\u7f6e\u540e \u5411\u5de6\u79fb\u52a8 \n\t\u6240\u4ee5\u5468\u671f\u4e3a 2*len \n\t\u6240\u4ee5\u5bf9\u4e8e\u6240\u6709\u7684 t\u548c t%(2*len) \u6548\u679c\u662f\u4e00\u6837\u7684 \n\t\u800c\u4e14\u8be2\u95ee\u548cadd cut\u90fd\u662f\u6309\u65f6\u95f4\u6765\u7684 \n\t\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u4e00\u4e2a\u4e91\u8868\u793a\u4e3a \n\t\t\uff08\u4e91\u7684\u5de6\u7aef\u8fd0\u52a8\u5230\u5de6\u8fb9\u754c\u7684\u65f6\u95f4 \uff0c\u4e91\u7684\u957f\u5ea6\uff09\n\t\u653e\u8fdb\u4e8c\u4f4d\u5750\u6807\u7cfb\n\t\u5bf9\u4e8eadd\n\t\t\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u4e91\u7684\u5750\u6807\u4e3a \n\t\t( (Ti-Li*Di)%(2*len) ,Ri-Li )\n\t\t\u8bb0\u5f55\u4e0b\u6539\u989c\u8272\u5bf9\u5e94\u7684\u5750\u6807 \u65b9\u4fbf\u5220\u9664 \n\t\t\u653e\u8fdb\u4e8c\u4f4d\u7684\u6811\u72b6\u6570\u7ec4 \n\t\u5bf9\u4e8ecut\n\t\t\u65f6\u95f4\u90fd\u6ca1\u4f5c\u7528 \n\t\t\u56e0\u4e3a\u4efb\u4f55\u65f6\u5019 \u4e91\u7684\u989c\u8272\u4e92\u5f02 \n\t\t\u76f4\u63a5\u5728\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u91cc\u5220\u9664\u5bf9\u5e94\u989c\u8272\u7684\u5750\u6807\n\t\u5bf9\u4e8eask (t,l,r)\n\t\t\u56e0\u4e3a\u4e91\u662f\u5f80\u8fd4\u8fd0\u52a8 \n\t\t\u6240\u4ee5 (t,l,r)\u7684\u8986\u76d6\u9762\u79ef\u662f\u5173\u4e8ex=len\u5bf9\u79f0\u7684 \n\t\t\u5148\u8003\u8651x<=len\u7684\u60c5\u51b5\n\t\t\u8003\u8651\u91cd\u5408 x\u8f83\u5927\u7684\u65f6\u5019\u548c\u5176\u91cd\u5408\u7684\u6982\u7387\u8f83\u5c0f \n\t\t\u56e0\u4e3a\u6b64\u65f6\u5de6\u7aef\u70b9\u5c31\u5f88\u5927 \n\t\t\u53ef\u80fd\u7ecf\u8fc7\u4e00\u6bb5\u65f6\u95f4\u540e\u5de6\u7aef\u70b9\u4efb\u7136\u5728r\u7684\u53f3\u8fb9 \n\t\t\u5c31\u4e00\u5b9a\u4e0d\u4f1a\u6709\u91cd\u5408\n\t\t\u56e0\u6b64 \u8981\u6ee1\u8db3 x-t<=r => x<=t+r \n\t\t\u5373\u5de6\u7aef\u70b9\u5de6\u79fbt\u548c\u5355\u4f4d\u8981\u5728r\u7684\u5de6\u8fb9 \n\t\t\u540c\u6837\u7684 x\u8f83\u5c0f\u7684\u65f6\u5019\u91cd\u5408\u6982\u7387\u4e5f\u5f88\u5c0f\n\t\t\u56e0\u4e3a\u6b64\u65f6\u5de6\u7aef\u70b9\u78b0\u5230\u5de6\u8fb9\u4e5f\u53f3\u79fb \n\t\t\u65f6\u95f4\u8db3\u591f\u957f\u5c31\u53ef\u80fd\u79fb\u5230r\u7684\u53f3\u8fb9\n\t\t\u6240\u4ee5\u8981\u6ee1\u8db3 t-x<=r => x>=t-r \n\t\t\u7efc\u4e0a t-r<=x<=t+r \n\t\t\u5de6\u7aef\u70b9\u6ee1\u8db3\u6b64\u6761\u4ef6\u662f\u53ef\u80fd\u91cd\u5408 \n\t\t\u5982\u679c\u8be5\u4e91\u957f\u5ea6\u8fc7\u5c0f\u4e5f\u53ef\u80fd\u4e0d\u91cd\u5408 \n\t\t\u5df2\u7ecf\u6ee1\u8db3\u5de6\u7aef\u70b9<=r \u5982\u679c\u53f3\u7aef\u70b9>=l \u5219\u4e00\u5b9a\u6709\u91cd\u5408 \n\t\t\u800c \u8be5\u4e91\u4ece\u5f00\u59cb\u8fd0\u52a8 t \u7684\u65f6\u95f4 \n\t\t\u8ddd\u79bb\u5de6\u8fb9\u754c |x-t|\n\t\t\u6240\u4ee5 length>=l-|x-t| \u624d\u80fd\u4fdd\u53f3\u7aef\u70b9>=l  \n\t\t\u753b\u51fa\u6765\u7684\u56fe\u50cf\u5f88\u5947\u8469 \u53ef\u4ee5\u8865\u5168\u4e3a\u4e00\u4e2a\u5e73\u884c\u56db\u8fb9\u5f62\n\t\t\u867d\u7136\u9762\u79ef\u53d8\u5927\u4e86 \n\t\t\u4f46\u662f\u70b9\u6307\u6325\u51fa\u73b0\u5728\u5408\u6cd5\u7684\u9762\u79ef\u5185 \u4e0d\u5f71\u54cd\u7b54\u6848 \n\t\t\u5bf9\u4e8e\u5b58\u5728( y=-x+k ) \u7684\u5e73\u884c\u56db\u8fb9\u5f62 \n\t\t\u6211\u4eec\u628a\u5750\u6807\u53d8\u4e3a (x,x+y)\n\t\t\u5bf9\u4e8e\u5b58\u5728( y=x+k ) \u7684\u5e73\u884c\u56db\u8fb9\u5f62 \n\t\t\u6211\u4eec\u628a\u5750\u6807\u53d8\u4e3a (x,y-x+len*2) \n\t\t\t+\u662f\u4e3a\u4e86\u907f\u514d\u51fa\u73b0\u8d1f\u6570\n\t\t\u7136\u540e\u7ef4\u62a4\u4e24\u79cd\u4e2a\u626d\u66f2\u7684\u5750\u6807\u7cfb\n\t\t\u6240\u4ee5\u6811\u72b6\u6570\u7ec4\u4fee\u6539\u7684\u65f6\u5019\u8981\u4fee\u6539\u4e24\u79cd Qwq \n\t\u6ce8\u610f \n\t\u6811\u72b6\u6570\u7ec4\u6ca1\u6cd5\u4fdd\u5b58\u4e0b\u6807\u4e3a0\u7684\u4fe1\u606f  \u4e0b\u6807\u90fd\u540e\u79fb\u4e00\u4f4d\n\tr==len \u4e00\u6761\u76f4\u7ebf\u4e0a\u7684\u70b9\u4f1a\u88ab\u91cd\u590d\u8ba1\u7b97 \u5224\u91cd \n*/ \n#include<bits/stdc++.h> \n#define lowbit(x) ((x)&(-x))\nusing namespace std;\nconst int N=2005,M=1000010;\nint n,len,len2,len4; // \u8868\u793a 2\u500d\u7684len  4\u500d\u7684len \nint s[2][N][N<<1],x[M],y[M];\nvoid add(int k,int a,int b,int c)\n{\n\ta++;b++;\n\tfor(int i=a;i<=len2;i+=lowbit(i))\n\tfor(int j=b;j<=len4;j+=lowbit(j)) \n\t\ts[k][i][j]+=c;\n\t// \u56e0\u4e3a\u7b2c\u4e8c\u7ef4\u6709+len2 \u6240\u4ee5\u8981\u5faa\u73af\u5230len4 \n}\nint sum(int k,int a,int b)\n{\n\ta++;b++; int res=0;\n\tif(a<=0||b<=0) return 0; // \u5224\u65ad\u5408\u6cd5  \n\tif(a>len2) a=len2;\n\tif(b>len4) b=len4; // \u7ea6\u6570\u5728\u70b9\u96c6\u8303\u56f4\u5185 \n\tfor(int i=a;i;i-=lowbit(i))\n\tfor(int j=b;j;j-=lowbit(j))\n\t\tres+=s[k][i][j];\n\treturn res;\n}\nint calc(int k,int x1,int y1,int x2,int y2)\n{\n\treturn sum(k,x2,y2)-sum(k,x2,y1-1)\n\t\t\t-sum(k,x1-1,y2)+sum(k,x1-1,y1-1);\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&len);;\n\tlen2=(len<<1);len4=(len2<<1);\n\twhile(n--)\n\t{\n\t\tint op,t,c,l,r,d;\n\t\tscanf(\"%d\",&op);\n\t\tif(op==1)\n\t\t{\n\t\t\tscanf(\"%d%d%d%d%d\",&t,&c,&l,&r,&d);\n\t\t\tx[c]=((t-l*d)%len2+len2)%len2;\n\t\t\ty[c]=r-l;\n\t\t\tadd(0,x[c],x[c]+y[c],1);\n\t\t\tadd(1,x[c],-x[c]+y[c]+len2,1);\n\t\t}\n\t\telse if(op==2)\n\t\t{\n\t\t\tscanf(\"%d%d%d\",&t,&l,&r); t%=len2;\n\t\t\tint res=0,flag=(r==len); // \u7279\u6b8a\u60c5\u51b5 \n\t\t\tres+=calc(0,t,l+t,t+r,len4);\n            res+=calc(0,0,l+t-len2,t+r-len2-flag,len4);\n            res+=calc(1,t-r+len2+flag,l-t,len2,len4);\n            res+=calc(1,t-r,l-t+len2,t-1,len4);\n            // \u8fd94\u4e2a\u7406\u89e3\u4e00\u4e0b\u5c31\u884c\u4e86 \u521a\u5f00\u59cb\u770b\u5c31\u662f\u770b\u4e0d\u61c2 \n            printf(\"%d\\n\",res);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tscanf(\"%d%d\",&t,&c); // \u65f6\u95f4\u9012\u589e t\u6ca1\u7528\u3002\u3002\u3002 \n\t\t\tadd(0,x[c],x[c]+y[c],-1);\n\t\t\tadd(1,x[c],-x[c]+y[c]+len2,-1);\n\t\t}\n\t}\n\treturn 0;\n}\n\n\n\n\n```\n\n",
        "postTime": 1548238102,
        "uid": 77807,
        "name": "\u7a1a\u540d\u771f\u767d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4203 \u3010[NOI2008]\u7cd6\u679c\u96e8 \u3011"
    },
    {
        "content": "~~\u8fd9\u9898\u521a\u5f00\u59cb\u770b\u662f\u61f5\u903c\u7684\uff0c\u76f4\u5230\u6211\u770b\u4e862\u697c\u7684\u9898\u89e3 \u4e8c\u697cTQL~~\n\n\u6211\u7684\u505a\u6cd5\u601d\u8def\u548c\u4e8c\u697c\u5dee\u4e0d\u591a\uff0c\u4e0d\u8fc7\u5b9e\u73b0\u4e0d\u4e00\u6837\uff0c\u53ef\u4ee5\u53d1\u73b0\u6bcf\u6b21\u8be2\u95ee\u90fd\u662f\u95ee\u4e00\u6bb5\u533a\u95f4\u53ef\u591a\u5c11\u4e2a\u56fe\u50cf\u76f8\u4ea4\uff0c\u7136\u540e\u53ef\u4ee5\u53d1\u73b0\u5bf9\u4e8e\u8be2\u95ee$[l,r]$ \u53ef\u4ee5\u7528\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u67e5\u8be2\u6709\u591a\u5c11\u7ebf\u6bb5\u7684\u8d77\u59cb\u7aef\u70b9\u5728r\u5de6\u8fb9\uff0c\u518d\u51cf\u53bb\u7ec8\u6b62\u7aef\u70b9\u5728l\u5de6\u8fb9\u7684\u6570\u91cf\u5c31\u662f\u7b54\u6848\u4e86\n\n\u90a3\u4e48\u600e\u4e48\u7ef4\u62a4\u6bcf\u4e2a\u56fe\u50cf\u5462\uff1f\n\n\u53ef\u4ee5\u7528\u65cb\u8f6c\u5750\u6807\u8f74\u540e\u7684\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\n\n\u53d1\u73b0\u5728\u65b0\u5750\u6807\u8f74\u7684\u5750\u6807\uff08x,y\uff09 \u5206\u522b\u662f\uff08\u70b9\u5230y=x+2*len\u8ddd\u79bb,\u70b9\u5230y=-x\u8ddd\u79bb\uff09\uff0c\u7136\u540e\u53d1\u73b0\u6709\u4e2a\u6839\u53f72\u7684\u5e38\u6570\uff0c\u53bb\u6389\u5c31\u597d\u4e86\n\n\u7136\u540e\u53d1\u73b0\u5bf9\u4e8e\u8fd9\u4e2a\u56fe\u50cf\u53ea\u8981\u5728\u51f9\u70b9+1\uff0c\u5728\u51f8\u70b9-1\u5c31\u53ef\u4ee5\u4e0d\u91cd\u590d\u7684\u8986\u76d6\u8fd9\u4e2a\u56fe\u50cf\u7684\u53f3\u8fb9\n\n\u8fd8\u6709\u5c31\u662f\u6a21\u62df\u4e91\u6735\u8fd0\u52a8\n\n\u5176\u4ed6\u4e5f\u6ca1\u4ec0\u4e48\u4e86\uff0c\u8fd8\u6709\u5c31\u770b\u4ee3\u7801\u5427\u3002\n```cpp\n#include<iostream>\n#include<cstdio>\n#define For(i,a,b) for(int i=a;i<=b;i++)\n#define lowbit(x) ((x)&(-(x)))\nconst int M=1e6+100;\nconst int N=1e3+100;\nvoid read(int &x)\n{\n\tint t=0,opt=1;\n\tchar c=getchar();\n\twhile (c<'0'||c>'9') (c=='-'?opt=-1:0),c=getchar();\n\twhile ('0'<=c&&c<='9')\n\t{\n\t\tt=t*10+c-'0';\n\t\tc=getchar();\n\t}\n\tx=t*opt;return ;\n}\nint L[M],R[M],T[M],D[M],n,len,opt,t,l,r,flag,temp;\nint c[2][3*N][3*N],ans;\nstd::pair<int,int> p;\nvoid update(int flag,int x,int y,int v)\n{\n\tint temp;\n\twhile (x<=3*len)\n\t{\n\t\ttemp=y;\n\t\twhile (temp<=3*len) \n\t\t{\n\t\t\tc[flag][x][temp]+=v;\n\t\t\tif (!temp) break;temp+=lowbit(temp);\n\t\t}\n\t\tif (!x) break;x+=lowbit(x);\n\t}\n}\nint query(int flag,int x,int y)\n{\n\tint temp,ans=0;\n\twhile (x) \n\t{\n\t\ttemp=y;while (temp) ans+=c[flag][x][temp],temp-=lowbit(temp);ans+=c[flag][x][temp];\n\t\tx-=lowbit(x);\n\t}\n\ttemp=y;while (temp) ans+=c[flag][x][temp],temp-=lowbit(temp);ans+=c[flag][x][temp];\n\treturn ans;\n}\nstd::pair<int,int> match(int x,int y)\n{\n\treturn std::make_pair(x-y+2*len,x+y);\n}\nint main()\n{\n\tread(n);read(len);\n\tFor(i,1,n)\n\t{\n\t\tread(opt);read(t);t%=2*len;\n\t\tif (opt==2) \n\t\t{\n\t\t    read(l);read(r);ans=0;\n\t\t    p=match(r,t);ans+=query(0,p.first,p.second); \n\t\t    if (l) p=match(--l,t),ans-=query(1,p.first,p.second); \n\t\t\tprintf(\"%d\\n\",ans);\n\t\t}\n\t\tif (opt==1||opt==3)\n\t\t{\n\t\t\tint c,d;read(c);d=opt==1?1:-1;\n\t\t\tif (opt==1) read(L[c]),read(R[c]),read(D[c]),T[c]=t;\n\t\t\tl=L[c];r=R[c];t=T[c];flag=D[c];temp=0;\n\t\t\twhile (1) \n\t\t\t{\n\t\t\t\tl+=temp*flag; r+=temp*flag;t+=temp;t%=2*len;\n\t\t\t\tif (l==0) flag=1,temp=std::min(2*len-t,len);\n\t\t\t\telse \n\t\t\t\t{\n\t\t\t\t\tif (l==len) flag=-1,temp=std::min(2*len-t,len);\n\t\t\t\t\telse  \n\t\t\t\t\t{\n\t\t\t\t\t\tif (flag==1) temp=std::min(2*len-t,len-l);\n\t\t\t\t\t\telse temp=std::min(2*len-t,l); \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!t) break;\n\t\t\t}temp=0;\n\t\t\tfor(int j=0;j<2*len-1;)\n\t\t\t{\n\t\t\t\tl+=temp*flag,r+=temp*flag,j+=temp;t=(t+temp)%(2*len); \n\t\t\t\tif (l==0) flag=1,temp=std::min(len,2*len-1-j);\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (l==len) flag=-1,temp=std::min(len,2*len-1-j);\n\t\t\t\t\telse \n\t\t\t\t\t{\n\t\t\t\t\t\tif (flag==1) temp=std::min(2*len-1-j,len-l);\n\t\t\t\t\t\telse temp=std::min(2*len-1-j,l);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tp=match(l,t);\n\t\t\t\tif (t==0) if (flag==1) update(0,p.first,p.second,1*d);\n\t\t\t\tif (t==2*len-1) if ((l<len&&flag==-1)||(l==0)) update(0,p.first,p.second,1*d);\n\t\t\t\tif (0<t&&t<2*len-1) update(0,p.first,p.second,flag*d);\n\t\t\t\tp=match(r,t);\n\t\t\t\tif (t==0) if (flag==1) update(1,p.first,p.second,1*d);\n\t\t\t\tif (t==2*len-1) if ((l<len&&flag==-1)||(l==0)) update(1,p.first,p.second,1*d);\n\t\t\t\tif (0<t&&t<2*len-1) update(1,p.first,p.second,flag*d);\n\t\t\t}\n\t\t}\n\t}\n    return 0;\n}\n```\n",
        "postTime": 1556767812,
        "uid": 87510,
        "name": "\u54af\u54af\u54af",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4203 \u3010[NOI2008]\u7cd6\u679c\u96e8 \u3011"
    }
]