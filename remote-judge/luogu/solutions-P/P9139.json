[
    {
        "content": "\u573a\u5207\u4e86\uff0c \u5e76\u4e14\u662f\u6b63\u89e3\uff0c \u5f88\u9ad8\u5174\uff0c \u6765\u5199\u4e00\u7bc7\u9898\u89e3\u3002\n\n~~\u4f46\u662f\u7206\u641c\u8fc7\u4e86~~\n\n## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $4n$ \u7684\u5e8f\u5217 $a_{1\\sim 4n}$\uff0c \u5176\u4e2d $1\\sim n$ \u5404\u51fa\u73b0 $4$ \u6b21\uff0c \u95ee\u80fd\u5426\u5c06\u5176\u5212\u5206\u4e3a\u4e24\u4e2a\u5b8c\u5168\u76f8\u540c\u7684\u5b50\u5e8f\u5217\u3002\n\n## \u9898\u89e3\n\n\u9996\u5148\u8003\u8651\u4e00\u4e2a\u5f31\u5316\u7248\uff1a \u5982\u679c\u6bcf\u4e2a\u6570\u53ea\u51fa\u73b0\u4e24\u6b21\u3002 \u8003\u8651\u8fd9\u4e2a\u95ee\u9898\u6709\u6ca1\u6709\u4ec0\u4e48\u7b80\u6d01\u7684\u65b9\u6cd5\u3002\n\n\u4ee4\u4e00\u4e2a\u6570 $i$ \u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e3a $l_i$, \u7b2c\u4e8c\u6b21\u4e3a $r_i$\uff0c \u90a3\u4e48\u6709\u89e3\u7684\u5145\u8981\u6761\u4ef6\u4e3a\u4efb\u610f\u4e24\u4e2a $[l_i,r_i]$ \u6ca1\u6709\u5305\u542b\u5173\u7cfb\u3002\n\n\u9996\u5148\u5982\u679c\u5b58\u5728\u5305\u542b\u5173\u7cfb\u5c31\u4e00\u5b9a\u65e0\u89e3\uff08\u8fd9\u4e24\u4e2a\u6570\u5728\u4e24\u4e2a\u5e8f\u5217\u4e2d\u7684\u51fa\u73b0\u987a\u5e8f\u4e0d\u540c\uff09\u3002 \u5426\u5219\u53ef\u4ee5\u5c06\u6240\u6709 $l_i$ \u5212\u5206\u5230\u7b2c\u4e00\u4e2a\u5e8f\u5217\u4e2d\uff0c $r_i$ \u5212\u5206\u5230\u7b2c\u4e8c\u4e2a\u5e8f\u5217\u4e2d\uff0c \u8fd9\u6837\u4e00\u5b9a\u662f\u6b63\u786e\u7684\u3002 \u53ef\u4ee5\u611f\u6027\u7406\u89e3\u4e3a\u4efb\u610f\u4e24\u4e2a\u6570\u7684\u51fa\u73b0\u987a\u5e8f\u5728\u4e24\u4e2a\u5e8f\u5217\u4e2d\u662f\u76f8\u540c\u7684\u3002\n\n\u56de\u5230\u672c\u9898\u3002 \u7531\u4e8e\u6709 $4$ \u4e2a\u6570\uff0c \u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5c06\u5b83\u4eec\u5212\u5206\u4e3a\u4e24\u5bf9\u7136\u540e\u505a\u4e0a\u9762\u7684\u6784\u9020\u3002 \u53ef\u4ee5\u53d1\u73b0\u65e0\u8bba\u8fd9 $4$ \u4e2a\u6570\u5982\u4f55\u5212\u5206\uff0c \u90fd\u53ef\u4ee5\u89c4\u7ea6\u6210\u4e24\u5bf9\u4e0d\u540c\u989c\u8272\u7684\u60c5\u51b5\u3002 \u5e76\u4e14\u53ef\u4ee5\u663e\u7136\u5730\u53d1\u73b0\u53ea\u6709 $(1,2)\\&(3,4),(1,3)\\&(2,4)$ \u8fd9\u4e24\u79cd\u5212\u5206\u65b9\u6cd5\uff0c \u56e0\u4e3a $(1,4)\\&(2,3)$ \u5df2\u7ecf\u65e0\u89e3\u4e86\u3002\n\n\u5206\u6790\u5230\u8fd9\u513f\uff0c \u5c31\u53ef\u4ee5\u60f3\u5230 $\\operatorname{2-sat}$ \u4e86\u3002\u5176\u4e2d\u9650\u5236\u662f\u533a\u95f4\u4e0d\u80fd\u5305\u542b\u3002 \u5c06\u533a\u95f4\u770b\u6210\u5e73\u9762\u4e0a\u7684\u70b9\uff0c \u548c\u67d0\u4e00\u4e2a\u533a\u95f4\u4e4b\u95f4\u6709\u9650\u5236\u7684\u533a\u95f4\u5c31\u5728\u4e00\u4e2a\u77e9\u5f62\u5185\u90e8\u4e86\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e3b\u5e2d\u6811\u6765\u4f18\u5316\u5efa\u56fe\uff0c \u7136\u540e\u76f4\u63a5\u8dd1 $\\operatorname{2-sat}$ \u5c31\u884c\u4e86\u3002 \u7ebf\u6bb5\u6811\u5efa\u56fe\u4f18\u5316 $\\operatorname{2-sat}$ \u53ef\u4ee5\u770b [ARC069F](https://www.luogu.com.cn/problem/AT_arc069_d)\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002 \u5e38\u6570\u53ef\u60f3\u800c\u77e5\u3002\n\n~~\u4f46\u662f\u7206\u641c\u8fc7\u4e86\u3002~~\n\n\u4e5f\u53ef\u4ee5\u4f7f\u7528 cdq \u5206\u6cbb\u6765\u4f18\u5316\u5efa\u56fe\uff0c \u672c\u8d28\u76f8\u540c\u3002 ~~\u90fd\u6bd4\u7206\u641c\u6162\u4e00\u4e07\u500d\u3002~~\n\n\u4ee3\u7801\u5c31\u4e0d\u653e\u4e86\u3002 \u573a\u4e0a\u5199\u7684\uff0c \u5e38\u6570\u5927\u8fd8\u5f88\u4e11\u3002",
        "postTime": 1678190440,
        "uid": 225370,
        "name": "loverintime",
        "ccfLevel": 8,
        "title": "P9139 \u9898\u89e3"
    },
    {
        "content": "\u5927\u5bb6\u90fd\u5199\u7684\u597d\u7b80\u7565\u554a\uff0c\u4e0d\u592a\u9002\u5408\u6211\uff0c\u5199\u4e00\u7bc7\u8be6\u5c3d\u4e00\u4e9b\u7684\u3002\n\n------------\n\n## \u5206\u6790\n\n\u6211\u4eec\u5148\u5047\u8bbe\u6211\u4eec\u4e00\u5b9a\u80fd\u6784\u9020\u51fa\u6765\u3002\n\n$4$ \u4e2a\u540c\u6837\u7684\u6570\u5206\u4e3a\u4e24\u7ec4\uff0c\u6211\u4eec\u901a\u8fc7\u5217\u4e3e\u53d1\u73b0\u53ea\u6709\u5982\u4e0b\u4e09\u79cd\u60c5\u51b5\uff08\u6570\u5b57\u8868\u793a\u7b2c\u51e0\u4e2a\u51fa\u73b0\u7684\u8be5\u6570\u5b57\uff09\uff1a\n\n1.\t$\\langle1, 2\\rangle$ \u548c $\\langle3, 4\\rangle$\uff1b\n2.\t$\\langle1, 3\\rangle$ \u548c $\\langle2, 4\\rangle$\uff1b\n3.\t$\\langle1, 4\\rangle$ \u548c $\\langle2, 3\\rangle$\uff1b\n\n\u6211\u4eec\u5b66\u5230\u7684\u5f88\u591a\u7b97\u6cd5\u90fd\u662f\u5efa\u7acb\u5728\u4e24\u79cd\u76f8\u5bf9\u5173\u7cfb\u4e0a\u7684\uff0c\u6d89\u53ca\u4e09\u4e2a\u7684\u5374\u5c11\u4e4b\u53c8\u5c11\uff0c\u56e0\u800c\u6211\u4eec\u53ef\u4ee5\u60f3\u4e00\u60f3\u6709\u54ea\u4e00\u79cd\u5206\u6cd5\u53ef\u4ee5\u7528\u5176\u4ed6\u5206\u6cd5\u5305\u542b\u3002\n\n\u89c2\u5bdf\u4e0a\u9762\u4e09\u79cd\u5206\u6cd5\uff0c\u5bb9\u6613\u53d1\u73b0\u53ea\u6709\u7b2c\u4e09\u79cd\u662f\u4e00\u4e2a\u5305\u542b\u5173\u7cfb\uff0c\u6211\u4eec\u731c\u60f3\u53ef\u4ee5\u7528\u524d\u4e24\u4e2a\u5206\u6cd5\u540c\u6837\u8fbe\u5230\u6784\u9020\u6548\u679c\uff0c\u4e0b\u9762\u6765\u8bba\u8bc1\u4e00\u4e0b\uff1a\n\n\n------------\n\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/lcsrkvlm.png)\n\n\u5982\u4e0a\u56fe\uff0c\u6211\u4eec\u628a\u4e00\u4e2a\u80fd\u6709\u7b2c\u4e09\u79cd\u5206\u6cd5\u5206\u51fa\u6765\u7684\u65b9\u6848\u753b\u51fa\u6765\uff0c\u7ea2\u8272\u7403\u8868\u793a\u5728 $\\langle1,4\\rangle$ \u5b50\u5e8f\u5217\u4e2d\uff0c\u84dd\u8272\u5219\u662f $\\langle2,3\\rangle$\u3002\u8fdb\u800c\u6211\u4eec\u53d1\u73b0 $(3,4)$ \u95f4\u7684\u6570\u603b\u662f\u5c5e\u4e8e $\\langle1,4\\rangle$ \u5b50\u5e8f\u5217\u7684\uff0c$\\langle2,3\\rangle$ \u5b50\u5e8f\u5217\u4e2d\u7684\u6570\u90fd\u6765\u81ea\u539f\u5e8f\u5217 $(2,3)$ \u4e4b\u95f4\u3002\u540c\u65f6\uff0c\u5206\u51fa\u7684\u5b50\u5e8f\u5217\u4e2d\u5404\u6570\u7684\u5927\u5c0f\u5173\u7cfb\u5728\u539f\u5e8f\u5217\u4e2d\u4e0d\u53d8\u3002\u90a3\u6211\u4eec\u4e0d\u59a8\u628a \u6240\u6709\u5728 $(3,4)$ \u4e2d\u51fa\u73b0\u7684\u6570 **\u5bf9\u5e94\u4e0a** \u5728 $(2, 3)$ \u4e2d\u51fa\u73b0\u5728\u53e6\u4e00\u4e2a\u5b50\u5e8f\u5217\u7684\u6570\uff0c\u5e76\u4e14\u628a\u4e24\u7ec4\u6570\u91cd\u65b0\u5206\u914d\u5230\u53e6\u4e00\u4e2a\u5b50\u5e8f\u5217\u4e2d\uff0c\u5982\u679c\u6709\u5176\u4ed6\u6570\u51b2\u7a81\u5219\u6309\u539f\u5148\u5206\u914d\u65b9\u6cd5\u53d8\u52a8\uff0c\u601d\u8003\u540e\u53d1\u73b0\u8fd9\u6837\u53d8\u6362\u540e\u6700\u7ec8\u5b50\u5e8f\u5217\u6ca1\u53d8\uff0c\u5b50\u5e8f\u5217\u4e2d\u6570\u95f4\u7684\u5927\u5c0f\u5173\u7cfb\u6ca1\u6709\u5f71\u54cd\uff0c\u56e0\u800c\u6211\u4eec\u901a\u8fc7\u53d8\u6362\u5c06\u7b2c\u4e09\u79cd\u6784\u9020\u65b9\u5f0f\u53d8\u6210\u4e86\u7b2c\u4e8c\u79cd\u6784\u9020\u65b9\u5f0f\u3002\u8fdb\u800c\u6211\u4eec\u53ef\u4ee5\u63a8\u5e7f\u5230\u6bcf\u4e2a\u6570\u90fd\u53ef\u4ee5\u8fd9\u6837\u53d8\u6362\uff0c\u56e0\u800c\u5c31\u4e0d\u7528\u8003\u8651\u7b2c\u4e09\u79cd\u6784\u9020\u65b9\u6848\u4e86\u3002\n\n------------\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u5224\u65ad\u662f\u5426\u6709\u89e3\u3002\u6211\u4eec\u8bb0 $x_i$ \u8868\u793a\u6570\u5b57 $x$ \u5728\u539f\u5e8f\u5217\u4e2d\u7b2c $i$ \u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\u5982\u679c\u6211\u4eec\u628a $x_i$\u3001$x_j$ \uff08 $i,j$ \u53d6\u503c\u5e94\u8be5\u7b26\u5408\u6211\u4eec\u8003\u8651\u7684\u90a3\u4e24\u79cd\u6784\u9020\u65b9\u6cd5\uff09\u5206\u522b\u5206\u914d\u5728\u4e24\u4e2a\u5b50\u5e8f\u5217\u4e2d\uff0c\u90a3\u4e48\u5bf9\u4e8e\u53e6\u4e00\u4e2a\u6570 $y$\uff0c\u5b83\u7684\u5206\u914d\u65b9\u6848\u662f\u628a $y_k$\u3001$y_l$ \u62c6\u6563\uff0c\u8fd9\u79cd\u6784\u9020\u65b9\u6848\u5408\u6cd5\u7684\u5fc5\u8981\u6761\u4ef6\u5c31\u662f $[x_i<y_k] = [x_j<y_l]$\u3002\u5373\u4e24\u5bf9\u6570\u5728\u76f8\u5e94\u5b50\u5e8f\u5217\u4e2d\u7684\u504f\u5e8f\u5173\u7cfb\u76f8\u540c\u3002\u5982\u679c\u4e0d\u76f8\u540c\u5219\u4e24\u79cd\u5206\u914d\u65b9\u6cd5\u4e0d\u80fd\u540c\u65f6\u9009\uff0c\u8fd9\u8ba9\u6211\u4eec\u8054\u60f3\u5230\u4e86 2-SAT \u95ee\u9898\uff0c\u628a\u4e0a\u8ff0\u5206\u914d\u65b9\u6cd5\u770b\u505a\u4e00\u4e2a\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u5728\u77db\u76fe\u7684\u65b9\u6cd5\u4e4b\u95f4\u8fde\u8fb9\uff08\u6ce8\u610f\u8fde\u8fb9\u7684\u610f\u4e49\u662f\u4e00\u4e2a\u65b9\u6848\u7528\u4e86\u53e6\u4e00\u4e2a\u65b9\u6848\u5c31\u4e0d\u80fd\u7528\uff09\u5373\u53ef\u3002\n\n\u522b\u4ee5\u4e3a\u8fd9\u5c31\u505a\u5b8c\u4e86\uff0c\u5b9e\u73b0\u4e0a\u4ecd\u7136\u6709\u96be\u70b9\u3002\n\n## \u7ec6\u8282\u4e0e\u5b9e\u73b0\n\n\u628a\u53ef\u80fd\u7684\u5206\u914d\u65b9\u6cd5\u7f57\u5217\u4e00\u4e0b\uff1a\n\n-\t$\\langle x_1,x_3\\rangle$ \u548c $\\langle x_2,x_4\\rangle$\uff08\u5bf9\u5e94\u5206\u6790\u4e2d\u7684\u65b9\u6848 1\uff09\uff1b\n-\t$\\langle x_1,x_2\\rangle$ \u548c $\\langle x_3,x_4\\rangle$\uff08\u5bf9\u5e94\u5206\u6790\u4e2d\u7684\u65b9\u6848 2\uff09\uff1b\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6bcf\u6761\u5206\u914d\u65b9\u6cd5\u4e2d\u7684\u4e24\u4e2a\u5206\u914d\u8981\u540c\u65f6\u53d6\u6216\u4e0d\u53d6\uff0c\u56e0\u6b64\u516c\u7528\u4e00\u4e2a\u70b9\uff1b\u4e14\u4e0a\u8ff0\u4e24\u79cd\u5206\u914d\u65b9\u6cd5\u662f\u5bf9\u7acb\u7684\uff0c\u6545\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u70b9\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u5efa\u56fe\u5566\uff01\u2026\u2026\u5417\uff1f\n\n\u663e\u7136\u8fd9\u6837\u505a\u8fde\u8fb9\u7684\u65f6\u7a7a\u590d\u6742\u5ea6\u90fd\u662f $O(n^2)$\uff0c\u4f1a\u7206\u70b8\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u79cd\u66f4\u52a0\u4f18\u5316\u7684\u5efa\u56fe\u65b9\u5f0f\u3002\n\n\u77db\u76fe\u5173\u7cfb\u6709\u4e24\u79cd\uff1a\n\n-\t$x_i < y_k \\ \\land y_l < x_j$\uff1b\n-\t$y_k < x_i \\ \\land x_j < y_l$\uff1b\n\n\u8fd9\u4e24\u79cd\u672c\u8d28\u4e0a\u5176\u5b9e\u90fd\u662f\u5305\u542b\u5173\u7cfb\uff0c\u56e0\u800c\u6211\u4eec\u89c4\u5b9a\u679a\u4e3e\u70b9\u5efa\u56fe\u65f6\u53ea\u5411\u4e0e\u5b83\u6240\u5305\u542b\u7684\u77db\u76fe\u70b9\u8fde\u8fb9\u3002\u5f53\u7136\uff0c\u8fd9\u6837\u4e0d\u4f1a\u5bfc\u81f4\u6709\u8fb9\u6f0f\u8fde\uff0c\u56e0\u4e3a\u5982\u679c\u8be5\u70b9\u88ab\u5305\u542b\u90a3\u4e48\u7b49\u5230\u6211\u4eec\u679a\u4e3e\u5305\u542b\u5b83\u7684\u77db\u76fe\u70b9\u65f6\u4e5f\u4f1a\u5c06\u8fd9\u6761\u8fb9\u8fde\u4e0a\u3002\n\n\u6211\u4eec\u7684\u7a7a\u95f4\u548c\u65f6\u95f4\u80fd\u627f\u53d7\u7684\u65f6\u7a7a\u590d\u6742\u5ea6\u5927\u6982\u662f $O(n\\log n)$\uff0c\u6545\u6211\u4eec\u60f3\u5230\u4e86\u5f62\u4f3c\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe\u7684\u65b9\u6cd5\u3002\u4f46\u662f\u56e0\u4e3a\u5efa\u56fe\u65f6\u8981\u540c\u65f6\u8003\u8651\u4e24\u79cd\u5173\u7cfb\uff0c\u56e0\u800c\u666e\u901a\u7684\u7ebf\u6bb5\u6811\u5b9e\u73b0\u8d77\u6765\u6709\u4e9b\u56f0\u96be\u3002\u9488\u5bf9\u8fd9\u79cd\u4e8c\u7ef4\u504f\u5e8f\u95ee\u9898\u6211\u4eec\u53ef\u4ee5\u9996\u5148\u4f7f\u4e00\u4e2a\u7ef4\u5ea6\u6709\u5e8f\uff0c\u53e6\u4e00\u4e2a\u7eac\u5ea6\u518d\u901a\u8fc7\u6570\u636e\u7ed3\u6784\u6765\u5b9e\u73b0\u3002\u6211\u4eec\u8003\u8651\u628a\u6240\u6709\u5206\u914d\u65b9\u6cd5\u6309\u53f3\u7aef\u70b9\u5347\u5e8f\u6392\u5e8f\uff0c\u7136\u540e\u5efa\u4e00\u9897\u6743\u503c\u4e3b\u5e2d\u6811\uff0c\u968f\u7740\u987a\u6b21\u679a\u4e3e\uff0c\u4e3b\u5e2d\u6811\u4e2d\u5b58\u50a8\u7684\u5206\u914d\u65b9\u6cd5\u7684\u53f3\u7aef\u70b9\u90fd\u5e94\u5c0f\u4e8e\u6211\u4eec\u65b0\u679a\u4e3e\u7684\uff0c\u56e0\u800c\u6211\u4eec\u53ea\u7528\u67e5\u8be2\u4e3b\u5e2d\u6811\u4e2d\u5de6\u7aef\u70b9\u6bd4\u65b0\u679a\u4e3e\u65b9\u6cd5\u7684\u5de6\u7aef\u70b9\u5927\u5373\u53ef\uff0c\u5bb9\u6613\u53d1\u73b0\u8fd9\u662f\u5411\u4e00\u4e2a\u533a\u95f4\u91cc\u7684\u6bcf\u4e2a\u70b9\u8fde\u8fb9\uff0c\u7b26\u5408\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe\u7684\u601d\u60f3\u3002\n\n\n\n\n------------\n\u4e0b\u9762\u662f\u4e00\u4e9b\u9700\u8981\u6ce8\u610f\u7684\u7ec6\u8282\uff1a\n\n1.\t\u6211\u4eec\u4e3a\u4e86\u53d6\u5de7\uff0c\u5c06\u7ec6\u8282\u4e0e\u5b9e\u73b0\u4e00\u8282\u4e2d\u4e00\u5f00\u59cb\u7684\u4e24\u5bf9\u5bf9\u7acb\u5206\u914d\u65b9\u6848\u6240\u4f7f\u7528\u7684\u70b9\u7684\u7f16\u53f7\u653e\u5728\u4e00\u8d77\uff0c\u8fdb\u800c\u53cd\u70b9\u53ef\u4ee5\u8f7b\u677e\u901a\u8fc7\u5f02\u6216\u64cd\u4f5c\u89e3\u51b3\u3002\n\n2.\t\u5728\u5bf9\u4e00\u79cd\u77db\u76fe\u5173\u7cfb\u7684\u65b9\u6848\u8fde\u8fb9\u65f6\uff0c\u9700\u8981\u6ce8\u610f\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n\t-\t\u524d\u9009\u540e\u4e0d\u80fd\u9009\uff1b\n    -\t\u540e\u9009\u524d\u4e0d\u80fd\u9009\uff1b\n    \n    \u56e0\u800c\u4e00\u6b21\u77db\u76fe\u5173\u7cfb\u8fde\u8fb9\u5185\u90e8\u5b9e\u9645\u4e0a\u8fde\u4e86\u4e24\u6761\u8fb9\u3002\n    \n3.\t\u5728\u4e3b\u5e2d\u6811\u4e0a\u8fde\u8fb9\u65f6\uff0c\u6811\u4e2d\u5b58\u7684\u5e94\u8be5\u662f\u4e4b\u524d\u5206\u914d\u65b9\u6cd5\u7684\u53cd\u70b9\uff0c\u8fd9\u6837\u5982\u679c\u77db\u76fe\u7684\u8bdd\u5f53\u524d\u70b9\u76f4\u63a5\u5c31\u80fd\u4e0e\u4e4b\u524d\u7684\u53cd\u70b9\u76f8\u8fde\u3002\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u53c2\u8003\u4ee3\u7801\u3002\n\n4.\t\u6570\u7ec4\u5927\u5c0f\u8981\u5f00\u591f\uff0c\u4f46\u53c8\u4e0d\u80fd\u7206\uff0c\u8fd9\u91cc\u5e0c\u671b\u81ea\u5df1\u601d\u8003\u6216\u8005\u53c2\u8003\u4ee3\u7801\u3002\n\n## \u4ee3\u7801\n\n\u6700\u7ec8\u7684\u65f6\u7a7a\u590d\u6742\u5ea6\u5747\u4e3a $O(n\\log n)$\u3002\n\n\n```cpp\n/* 2-SAT + \u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe + \u6784\u9020 */\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n\nusing namespace std;\nconst int N = 200010, M = N * 20, V = (N + M) * 2, E = V * 4;\n\nstruct SegmentTree{\n    int ls, rs;\n    int id;\n}tr[M];\nint root[N], idx;\nstruct Edge{\n    int v, next;\n}e[E];\nint p[V], len;\nint dfn[V], low[V], timestamp;\nint id[V], scc_cnt, stk[V], top;\nbool in_stk[V];\nint pos[50010][5];\nstruct Method{\n    int l, r;\n    int id;\n\n    bool operator < (const Method &b) const{\n        return r < b.r;\n    }   \n}option[N];\nint tot, ed, n;\nbool ans[N];\n\nvoid add(int u, int v){\n    e[len] = (Edge){v, p[u]}, p[u] = len ++;\n}\n\nvoid addEdge(int u, int v){\n    add(u, v), add(v ^ 1, u ^ 1);\n}\n\nvoid tarjan(int u){\n    dfn[u] = low[u] = ++ timestamp;\n    stk[++ top] = u, in_stk[u] = true;\n\n    for (int i = p[u]; ~i; i = e[i].next){\n        int v = e[i].v;\n        if (!dfn[v]) tarjan(v), low[u] = min(low[u], low[v]);\n        else if (in_stk[v]) low[u] = min(low[u], dfn[v]);\n    }\n\n    if (dfn[u] == low[u]){\n        scc_cnt ++;\n        int y;\n        do {\n            y = stk[top --];\n            in_stk[y] = false;\n            id[y] = scc_cnt;\n        } while (y != u);\n    }\n}\n\nint insert(int p, int l, int r, int x, int id){//\u5efa\u7acb\u65b0\u7248\u672c\n    int q = ++ idx;\n    tr[q] = tr[p];\n    tr[q].id = tot;\n    tot += 2;//\u53d6\u5de7\uff0c\u8981\u6ee1\u8db3\u5f02\u6216\u6240\u9700\u8981\u7684\u6761\u4ef6\n    if (l == r){\n        addEdge(tr[q].id, id);\n        return q;\n    }\n    int mid = (l + r) >> 1;\n    if (x <= mid) tr[q].ls = insert(tr[p].ls, l, mid, x, id);\n    else tr[q].rs = insert(tr[p].rs, mid + 1, r, x, id);\n    addEdge(tr[q].id, tr[tr[q].ls].id), \n    addEdge(tr[q].id, tr[tr[q].rs].id);\n    return q;\n}\n\nvoid insert(int p, int l, int r, int a, int b, int id){//\u5728\u539f\u5148\u7684\u7248\u672c\u4e0a\u8fde\u8fb9\n    if (!p) return;\n    if (a <= l && r <= b){\n        addEdge(id, tr[p].id);\n        return;\n    }\n    int mid = (l + r) >> 1;\n    if (a <= mid) insert(tr[p].ls, l, mid, a, b, id);\n    if (b > mid) insert(tr[p].rs, mid + 1, r, a, b, id);\n}\n\nint main(){\n    ios::sync_with_stdio(false);\n    cin.tie(0), cout.tie(0);\n    memset(p, -1, sizeof p);\n\n    cin >> n;\n    for (int i = 1; i <= n << 2; i ++){\n        int x;\n        cin >> x;\n        pos[x][++ pos[x][0]] = i;//\u8bb0\u5f55\u51fa\u73b0\u4f4d\u7f6e\n    }\n    for (int i = 1; i <= n; i ++){\n        /* \u7ec6\u82823\uff1a\u6ce8\u610f\u76f8\u5e94\u65b9\u6cd5\u5171\u7528\u4e00\u4e2a\u70b9\uff0c\u77db\u76fe\u65b9\u6cd5\u7528\u4e00\u5bf9\u6b63\u53cd\u70b9 */\n        option[++ ed] = (Method){pos[i][1], pos[i][2], tot},\n        option[++ ed] = (Method){pos[i][3], pos[i][4], tot},\n        option[++ ed] = (Method){pos[i][1], pos[i][3], tot ^ 1},\n        option[++ ed] = (Method){pos[i][2], pos[i][4], tot ^ 1};\n        tot += 2;\n    }\n    sort(option + 1, option + ed + 1);\n    tr[0] = (SegmentTree){0, 0, tot};\n    tot += 2;\n    for (int i = 1; i <= n << 2; i ++){\n        insert(root[i - 1], 1, n << 2, option[i].l, option[i].r, option[i].id);\n        root[i] = insert(root[i - 1], 1, n << 2, option[i].l, option[i].id ^ 1);\n    }\n    for (int i = 0; i < tot; i ++){\n        if (!dfn[i]) tarjan(i);\n    }\n    for (int i = 0; i < tot; i += 2){\n        if (id[i] == id[i ^ 1]){//\u6b63\u53cd\u70b9\u5728\u4e00\u8d77\uff0c\u65e0\u89e3\uff01\n            cout << \"No\" << endl;\n            return 0;\n        }\n    }\n    cout << \"Yes\" << endl;\n    for (int i = 1; i <= n << 2; i ++){\n        if (id[option[i].id] < id[option[i].id ^ 1]){//\u6839\u636e2-SAT\u505a\u6cd5\u9009\u53d6\u62d3\u6251\u5e8f\u5728\u540e\u7684\u70b9\u4f5c\u4e3a\u65b9\u6848\n            ans[option[i].l] = 0, ans[option[i].r] = 1;\n        }\n    }\n    for (int i = 1; i <= n << 2; i ++){\n        cout << ans[i];\n    }\n    cout << endl;\n\n    return 0;\n}\n```",
        "postTime": 1683687129,
        "uid": 528114,
        "name": "jjsnam",
        "ccfLevel": 6,
        "title": "P9139\u9898\u89e3"
    }
]