[
    {
        "content": "## \u524d\u8a00\n\n\u8fd9\u9053\u9898\u76ee\u5462\uff0c\u770b\u4e0a\u53bb\u5f88\u96be\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u89e3\u51b3\u8fd9\u9053\u9898\u76ee\u3002\n\n## \u6b63\u6587\n\n\u6211\u4eec\u7ef4\u62a4 `sum`\u3001`len`\u3001`tag`\u3001`lmax`\u3001`rmax`\u3001`ans`\u3002\n\n`sum` \u5c31\u662f\u8fd9\u6bb5\u533a\u95f4\u975e\u8111\u6d1e\u7684\u4e2a\u6570\n\n`len` \u5c31\u662f\u8fd9\u6bb5\u533a\u95f4\u7684\u957f\u5ea6\n\n`tag` \u5c31\u662f\u6211\u4eec\u7684 `lazy_tag`\n\n`lmax` \u5c31\u662f\u4ece\u5de6\u5f00\u59cb\u7684\u8fde\u7eed\u8111\u6d1e\u4e2a\u6570\n\n`rmax` \u5c31\u662f\u4ece\u53f3\u5f00\u59cb\u7684\u8fde\u7eed\u8111\u6d1e\u4e2a\u6570\n\n`ans` \u5c31\u662f\u8fd9\u6bb5\u533a\u95f4\u6700\u5927\u7684\u8fde\u7eed\u8111\u6d1e\n\n### \u5efa\u6811\n\n\u7531\u4e8e `len` \u662f\u4e0d\u53d8\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5efa\u6811\u7684\u65f6\u5019\u5c31\u6c42\u51fa `len`\n\n```cpp\nt[num].len=r-l+1;\n```\n\n### `pushup`\n\n#### `sum`\n\n`sum` \u5c31\u662f\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u7684 `sum` \u7684\u548c\u3002\n\n```cpp\nt[num].sum=t[ls].sum+t[rs].sum;\n```\n\n#### `lmax`\n\n`lmax` \u7684\u8bdd\u6709\u4e24\u79cd\u60c5\u51b5\n\n##### \u7b2c $1$ \u79cd\u60c5\u51b5\n\n![aaasajdfhiujhkja.png](https://i.loli.net/2020/03/27/oNTSrnHFZu6XAJk.png)\n\n`lmax`=\u5de6\u5b50\u6811\u7684 `lmax`\n\n##### \u7b2c $2$ \u4e2d\u60c5\u51b5\n\n![asdssssajdfhiujhkja.png](https://i.loli.net/2020/03/27/LTaj5UisqMS3eP8.png)\n\n`lmax`=\u5de6\u5b50\u6811\u7684 `len` + \u53f3\u5b50\u6811\u7684 `lmax`\n\n```cpp\nif(t[ls].lmax==t[ls].len)t[num].lmax=t[ls].len+t[rs].lmax;\nelse t[num].lmax=t[ls].lmax;\n```\n\n#### `rmax`\n\n`rmax` \u7684\u8bdd\u4e5f\u4e24\u79cd\u60c5\u51b5\n\n##### \u7b2c $1$ \u79cd\u60c5\u51b5\n\n![kja.png](https://i.loli.net/2020/03/27/FNKtdnUw6rpACl1.png)\n\n`rmax`=\u53f3\u5b50\u6811\u7684 `rmax`\n\n![df.png](https://i.loli.net/2020/03/27/3h7ZYsAqWMrK2EG.png)\n\n`lmax`=\u53f3\u5b50\u6811\u7684 `len` + \u5de6\u5b50\u6811\u7684 `rmax`\n\n```cpp\nif(t[rs].rmax==t[rs].len)t[num].rmax=t[rs].len+t[ls].rmax;\nelse t[num].rmax=t[rs].rmax;\n```\n\n#### `ans`\n\n`ans` \u7684\u8bdd\u6709 $3$ \u79cd\u60c5\u51b5\n\n##### \u7b2c $1$ \u79cd\u60c5\u51b5\n\n![asdsajdfhiujhkja.png](https://i.loli.net/2020/03/27/wjYa8XCmQEtOe6S.png)\n\n`ans`=\u5de6\u5b50\u6811\u7684 `ans`\n\n##### \u7b2c $2$ \u79cd\u60c5\u51b5\n\n![asdasajdfhiujhkja.png](https://i.loli.net/2020/03/27/cVXrQhiG9YbxwIW.png)\n\n`ans`=\u53f3\u5b50\u6811\u7684 `ans`\n\n##### \u7b2c $3$ \u79cd\u60c5\u51b5\n\n![aasdasajdfhiujhkja.png](https://i.loli.net/2020/03/27/kVchXdzs7QT5BnL.png)\n\n`ans`=\u5de6\u5b50\u6811\u7684 `rmax`+\u53f3\u5b50\u6811\u7684 `lmax`\n\n```cpp\nt[num].ans=max(max(t[ls].ans,t[rs].ans),t[ls].rmax+t[rs].lmax);\n```\n\n### `pushdown`\n\n#### `tag`\n\n\u6211\u4eec\u7684 `tag` \u6709 `3` \u79cd\u503c\uff0c\u5206\u522b\u4e3a `0`\uff0c`1`\uff0c`2`\n\n`0` \u8868\u793a\u4ec0\u4e48\u90fd\u6ca1\u6709\n\n`1` \u8868\u793a\u5168\u90e8\u4e3a\u8111\u6d1e\n\n`2` \u8868\u793a\u5168\u90e8\u4e0d\u4e3a\u8111\u6d1e\n\n##### `0`\n\n`0` \u7684\u8bdd\uff0c\u4ee3\u8868\u6ca1\u6709\u4efb\u4f55\u64cd\u4f5c\uff0c\u4e0d\u8981\u7ba1\u3002\n\n##### `1`\n\n\u6211\u4eec\u5bf9\u7167\u4e0a\u9762\u7684\u53d1\u73b0\uff1a\n\n`ans`\u3001`lmax`\u3001`rmax` \u90fd\u4e3a `len`\u3002\n\n\u800c `sum` \u5219\u4e3a `0`\u3002\n\n`tag` \u7684\u6807\u8bb0\u5f53\u7136\u8981\u6253\u5566\u3002\n\n```cpp\nvoid down1(int num){\n\tt[num].ans=t[num].lmax=t[num].rmax=t[num].len;\n\tt[num].sum=0;\n\tt[num].tag=1;\n}\n```\n\n##### `2`\n\n\u6211\u4eec\u5bf9\u7167\u4e0a\u9762\u7684\u53d1\u73b0\uff1a\n\n`ans`\u3001`lmax`\u3001`rmax` \u90fd\u4e3a `0`\u3002\n\n\u800c `sum` \u5219\u4e3a `len`\u3002\n\n`tag` \u7684\u6807\u8bb0\u5f53\u7136\u8981\u6253\u5566\u3002\n\n```cpp\nvoid down2(int num){\n\tt[num].ans=t[num].lmax=t[num].rmax=0;\n\tt[num].sum=t[num].len;\n\tt[num].tag=2;\n}\n```\n\n### \u4e8c\u5206\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u64cd\u4f5c `2` \u5c31\u662f\u5148\u7edf\u8ba1\u4e00\u904d $[l0,r0]$ \u4e2d\u975e\u8111\u6d1e\u7684\u4e2a\u6570\u3002\n\n\u7136\u540e\u628a $[l0,r0]$ \u8fd9\u6bb5\u533a\u95f4\u5168\u90e8\u53d8\u6210\u8111\u6d1e\uff0c\u518d\u53bb\u5728 $[l1,r1]$ \u8fd9\u6bb5\u533a\u95f4\u91cc\u627e\u5230\u4ece $l0$ \u5f00\u59cb\u7b97\u8d77\u6700\u53f3\u8fb9\u8111\u6d1e\u4e2a\u6570 $\\leq[l0,r0]$ \u4e2d\u8111\u6d1e\u7684\u4e2a\u6570\u3002\n\n\u6211\u4eec\u53d1\u73b0\u8111\u6d1e\u4e2a\u6570\u662f\u5355\u8c03\u9012\u589e\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u3002\n\n\u6211\u91c7\u7528\u7684\u5199\u6cd5\u662f\u5de6\u95ed\u53f3\u5f00\u3002\n\n```cpp\nvoid work(){\n\tint x=query0(1,l0,r0);//\u7edf\u8ba1\n\tif(x==0)return;//\u8fd9\u91cc\u8981\u6ce8\u610f\uff0c\u5426\u5219\u6211\u4eec\u7684\u8fb9\u754c\u5c31\u662f\u9519\u7684\n\tchange(1,l0,r0,1);//\u5168\u90e8\u53d8\u6210\u8111\u6d1e\n\tint l=l1,r=r1+1;//\u4e8c\u5206\u7684\u8fb9\u754c\n\twhile(l+1<r){//\u7ecf\u5178\u5199\u6cd5\n\t\tint mid=(l+r)>>1;//\u6c42mid\n\t\tif(query1(1,l1,mid)<=x)l=mid;//\u5c0f\u4e8e\u7b49\u4e8e\n\t\telse r=mid;\n\t}\n\tchange(1,l1,l,2);//\u586b\u4e0a\u53bb\n}\n```\n\n### \u4ee3\u7801\n\n\u590d\u6742\u5ea6 $O(n \\log n + q \\log^2 n)$\n\n```cpp\n#include <bits/stdc++.h>\n#define ls num<<1\n#define rs num<<1|1\nusing namespace std;\ntypedef long long ll;\ntemplate<typename T>inline void read(T &FF){\n\tT RR=1;FF=0;char CH=getchar();\n\tfor(;!isdigit(CH);CH=getchar())if(CH=='-')RR=-1;\n\tfor(;isdigit(CH);CH=getchar())FF=(FF<<1)+(FF<<3)+(CH^48);\n\tFF*=RR;\n}\ntemplate<typename T>inline void write(T x){\n\tif(x<0)putchar('-'),x*=-1;\n\tif(x>9)write(x/10);\n\tputchar(x%10+48);\n}\ntemplate<typename T>inline void writen(T x){\n\twrite(x);\n\tputs(\"\");\n}\nconst int N=2e5+10;\nstruct Tree{\n\tint l,r,lmax,rmax,sum,tag,len,ans;\n}t[N<<2];\nint n,m,l0,r0,l1,r1,f;\nvoid pushup(int num){\n\tt[num].sum=t[ls].sum+t[rs].sum;\n\tif(t[ls].lmax==t[ls].len)t[num].lmax=t[ls].len+t[rs].lmax;\n\telse t[num].lmax=t[ls].lmax;\n\tif(t[rs].rmax==t[rs].len)t[num].rmax=t[rs].len+t[ls].rmax;\n\telse t[num].rmax=t[rs].rmax;\n\tt[num].ans=max(max(t[ls].ans,t[rs].ans),t[ls].rmax+t[rs].lmax);\n}\nvoid down1(int num){\n\tt[num].ans=t[num].lmax=t[num].rmax=t[num].len;\n\tt[num].sum=0;\n\tt[num].tag=1;\n}\nvoid down2(int num){\n\tt[num].ans=t[num].lmax=t[num].rmax=0;\n\tt[num].sum=t[num].len;\n\tt[num].tag=2;\n}\nvoid pushdown(int num){\n\tif(t[num].tag==1){\n\t\tdown1(ls);down1(rs);\n\t\tt[num].tag=0;\n\t}\n\tif(t[num].tag==2){\n\t\tdown2(ls);down2(rs);\n\t\tt[num].tag=0;\n\t}\n}\nvoid build(int num,int l,int r){\n\tt[num].tag=0;\n\tt[num].l=l;\n\tt[num].r=r;\n\tt[num].len=r-l+1;\n\tif(l==r){\n\t\tt[num].sum=1;\n\t\tt[num].ans=t[num].lmax=t[num].rmax=0;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(ls,l,mid);\n\tbuild(rs,mid+1,r);\n\tpushup(num);\n}\nvoid change(int num,int x,int y,int z){\n\tif(t[num].l>=x&&t[num].r<=y){\n\t\tif(z==1)down1(num);\n\t\tif(z==2)down2(num);\n\t\treturn;\n\t}\n\tpushdown(num);\n\tif(t[ls].r>=x)change(ls,x,y,z);\n\tif(t[rs].l<=y)change(rs,x,y,z);\n\tpushup(num);\n}\nint query0(int num,int x,int y){\n\tif(t[num].l>=x&&t[num].r<=y)return t[num].sum;\n\tpushdown(num);\n\tif(t[ls].r<x)return query0(rs,x,y);\n\tif(t[rs].l>y)return query0(ls,x,y);\n\treturn query0(ls,x,y)+query0(rs,x,y);\n}\nint query1(int num,int x,int y){\n\tif(t[num].l>=x&&t[num].r<=y)return t[num].len-t[num].sum;\n\tpushdown(num);\n\tif(t[ls].r<x)return query1(rs,x,y);\n\tif(t[rs].l>y)return query1(ls,x,y);\n\treturn query1(ls,x,y)+query1(rs,x,y);\n}\nvoid work(){\n\tread(l1);read(r1);\n\tint x=query0(1,l0,r0);\n\tif(x==0)return;\n\tchange(1,l0,r0,1);\n\tint l=l1,r=r1+1;\n\twhile(l+1<r){\n\t\tint mid=(l+r)>>1;\n\t\tif(query1(1,l1,mid)<=x)l=mid;\n\t\telse r=mid;\n\t}\n\tchange(1,l1,l,2);\n}\nint query2(int num,int x,int y){\n\tif(t[num].l>=x&&t[num].r<=y)return t[num].ans;\n\tpushdown(num);\n\tif(t[ls].r<x)return query2(rs,x,y);\n\tif(t[rs].l>y)return query2(ls,x,y);\n\treturn max(max(query2(ls,x,y),query2(rs,x,y)),min(t[ls].rmax,t[rs].l-x)+min(t[rs].lmax,y-t[ls].r));\n}\nint main(){\n\tread(n);read(m);\n\tbuild(1,1,n);\n\twhile(m--){\n\t\tread(f);read(l0);read(r0);\n\t\tswitch(f){\n\t\t\tcase 0:change(1,l0,r0,1);break;\n\t\t\tcase 1:work();break;\n\t\t\tcase 2:writen(query2(1,l0,r0));break;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n### \u62d3\u5c55\n\n\u8fd9\u9053\u9898\u76ee\u8fd8\u6709\u66f4\u4f18\u79c0\u7684\u89e3\u6cd5\uff0c\u590d\u6742\u5ea6\u53ef\u4ee5\u5c11\u6389\u4e00\u4e2a $\\log$ \u4e5f\u5c31\u662f\u53d8\u6210 $O(n \\log n+q \\log{n})$\u3002\n\n\u6211\u4eec\u8fd8\u662f\u5148\u7edf\u8ba1\u975e\u8111\u6d1e\u4e2a\u6570\u3002\n\n\u6211\u4eec\u5199\u4e00\u4e2a\u51fd\u6570 $fill$ \u5c31\u662f\u6211\u4eec\u7528\u6765\u628a\u8111\u7ec6\u80de\u586b\u5165\u8111\u6d1e\u7684\u51fd\u6570\u3002\u6211\u4eec\u8981\u586b $x$ \u4e2a\u8111\u7ec6\u80de\uff0c\u4f1a\u53d1\u73b0\u6709 $2$ \u79cd\u60c5\u51b5\u3002\n\n- \u7b2c $1$ \u79cd\u60c5\u51b5\u662f\u6240\u6709\u8111\u7ec6\u80de\u90fd\u586b\u5165\u5de6\u5b50\u6811\u3002\n\n- \u7b2c $2$ \u79cd\u60c5\u51b5\u662f\u6240\u6709\u8111\u7ec6\u80de\u4e0d\u4ec5\u628a\u5de6\u8fb9\u586b\u6ee1\uff0c\u8fd8\u6709\u591a\u7684\u653e\u5230\u53f3\u5b50\u6811\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u5199\u4ee3\u7801\uff1a\n\n```cpp\nint fill(int num,int l,int r,int x){//fill\u7684\u8fd4\u56de\u503c\u5c31\u662f\u5269\u4f59\u7684\u8111\u7ec6\u80de\u6570\u91cf\n\tif(x==0)return 0;\n\tif(t[num].l>=l&&t[num].r<=r&&t[num].sum<=x){\n\t\tint s=t[num].sum;//\u52a1\u5fc5\u8981\u5148\u5b58\u8d77\u6765\n\t\tdown2(num);\n\t\treturn x-s;\n\t}\n\tpushdown(num);int ans;\n\tif(t[ls].r<l)ans=fill(rs,l,r,x);\n\telse if(t[rs].l>r)ans=fill(ls,l,r,x);\n\t\telse ans=fill(rs,l,r,fill(ls,l,r,x));\n\tpushup(num);\n\treturn ans;//\u7b54\u6848\n}\n```\n\u611f\u8c22 @LightningUZ \u7684\u8865\u5145\uff01",
        "postTime": 1585277019,
        "uid": 180242,
        "name": "orzdevinwang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4344 \u3010[SHOI2015]\u8111\u6d1e\u6cbb\u7597\u4eea\u3011"
    },
    {
        "content": "### \u5927\u5bb6\u597d\uff0c\u6211\u559c\u6b22\u66b4\u529b\u6570\u636e\u7ed3\u6784\uff0c\u6240\u4ee5\u6211\u7528\u5206\u5757\u5361\u8fc7\u4e86\u8fd9\u9053\u9898\u3002\r\n\r\n\u4e4b\u524d\u9898\u89e3\u91cc\u9762\u6ca1\u6709\u5206\u5757\uff0c\u8fd9\u91cc\u8865\u5145\u5206\u5757\u505a\u6cd5\u53ca\u4f18\u5316\u3002\r\n\r\n\u6211\u4eec\u89c4\u5b9a\u8111\u6d1e\u662f `0`\uff0c\u6b63\u5e38\u662f `1`\u3002\r\n\r\n\u5206\u5757\uff0c\u9700\u8981\u7ef4\u62a4\u7684\u662f\u6bcf\u4e2a\u5757 `0` \u7684\u524d\u7f00\u957f\u5ea6\uff0c`0` \u7684\u540e\u7f00\u957f\u5ea6\uff0c\u6700\u957f\u8fde\u7eed `0` \u7684\u957f\u5ea6,`0` \u7684\u4e2a\u6570\uff0c`1` \u7684\u4e2a\u6570\uff0c\u4ee5\u53ca\u4e00\u4e2a tag \u8bb0\u5f55\u662f\u5426\u5168\u90e8\u63a8\u5e73\u3002\u7136\u540e\u521d\u59cb\u5316\u51fd\u6570\u548c\u63a8\u5e73\u51fd\u6570\u5f88\u5bb9\u6613\u60f3\u5230\u4e86\u3002\r\n\r\n\u4e0b\u9762\u662f\u4ee3\u7801\uff1a\r\n\r\n```\r\ninline void build(int x){\r\n\ttag[x]=-1;\r\n\tint l=L[x],r=R[x],s=0;\r\n\tpre[x]=suf[x]=b[x]=sum[x]=ss[x]=0;\r\n\tfor(register int i=l;i<=r;i++){\r\n\t\tif(a[i])\r\n\t\t\tbreak;\r\n\t\tpre[x]++;\r\n\t}\r\n\tfor(register int i=r;i>=l;i--){\r\n\t\tif(a[i])\r\n\t\t\tbreak;\r\n\t\tsuf[x]++;\r\n\t}\r\n\tfor(register int i=l;i<=r;i++){\r\n\t\tif(!a[i]){\r\n\t\t\ts++;\r\n\t\t\tsum[x]++;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tss[x]++;\r\n\t\tb[x]=max(b[x],s);\r\n\t\ts=0;\r\n\t}\r\n\tb[x]=max(b[x],s);\r\n\treturn;\r\n}\r\ninline void change(int x){\r\n\tif(tag[x]==-1)\r\n\t\treturn;\r\n\tif(tag[x]==1){\r\n\t\tfor(register int i=L[x];i<=R[x];i++)\r\n\t\t\ta[i]=1;\r\n\t\ttag[x]=-1;\r\n\t\tpre[x]=suf[x]=b[x]=sum[x]=0;\r\n\t\tss[x]=R[x]-L[x]+1;\r\n\t}\r\n\tif(tag[x]!=-1){\r\n\t\tfor(register int i=L[x];i<=R[x];i++)\r\n\t\t\ta[i]=0;\r\n\t\ttag[x]=-1;\r\n\t\tpre[x]=suf[x]=b[x]=sum[x]=R[x]-L[x]+1;\r\n\t\tss[x]=0;\r\n\t}\r\n\treturn;\r\n}\r\n```\r\n\r\n\u67e5\u8be2\u5c31\u662f\u53c2\u7167[\u5e8f\u5217\u64cd\u4f5c](https://www.luogu.com.cn/problem/P2572)\uff0c\u76f4\u63a5\u987a\u7740\u626b\u4e00\u904d\u5373\u53ef\uff0c\u6ce8\u610f\u8981\u5904\u7406\u5757\u4e0e\u5757\u8fde\u63a5\u7684\u5730\u65b9\uff0c\u5982\u679c `0` \u5168\u90e8\u586b\u6ee1\u8fd9\u4e2a\u5757\uff0c\u8bf4\u660e\u53ef\u4ee5\u628a\u4e24\u8fb9\u90fd\u8fde\u8d77\u6765\u3002\r\n\r\n\u63a5\u7740\u5904\u7406\u533a\u95f4\u4fee\u6539\uff0c\u6316\u8111\u6d1e\u5c31\u662f\u628a\u4e00\u90e8\u5206\u5168\u90e8\u6539\u4e3a `0`\uff0c\u76f4\u63a5\u63a8\u5e73\u5373\u53ef\u3002\u6ce8\u610f\u8981\u4fee\u6539 tag\u3002\r\n\r\n\u7136\u540e\u662f\u6cbb\u7597\uff0c\u5206\u4e3a\u4e24\u90e8\u5206\u3002\u7b2c\u4e00\u90e8\u5206\u662f\u67e5\u8be2 $l_0,r_0$ \u4e4b\u95f4\u6709\u591a\u5c11 `1`\uff0c\u7136\u540e\u5c06 $l,r$ \u5168\u90e8\u6e05\u4e3a `0`\uff1b\u7b2c\u4e8c\u90e8\u5206\u662f\u628a\u8fd9\u4e9b\u6570\u91cf\u5168\u90e8\u586b\u5230 $l_1,r_1$ \u4e4b\u95f4\u3002\r\n\r\n\u7b2c\u4e00\u90e8\u5206\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u7edf\u8ba1\u5373\u53ef\uff0c\u8bb0\u5f55 `res`\u3002\u7b2c\u4e8c\u90e8\u5206\u5c31\u904d\u5386\u6bcf\u4e2a\u5757\uff0c\u5982\u679c\u5f53\u524d\u5757 `0` \u7684\u4e2a\u6570\u6bd4 `res` \u5927\u5c31\u4e00\u4e2a\u4e00\u4e2a\u586b\uff0c\u63a5\u7740\u7ed3\u675f\uff0c\u5426\u5219\u5c31\u533a\u95f4\u76f4\u63a5\u586b\u5165\u3002\u5982\u679c\u586b\u5230\u6700\u540e\u6709\u5269\u4f59\u5c31\u4e0d\u7ba1\u3002\u7531\u6b64\u5f97\u51fa[\u4ee3\u7801](https://www.luogu.com.cn/paste/74dye6dw)\u3002\r\n\r\n\u5199\u5b8c\u5c31\u4f1a\u5c31\u80fd\u83b7\u5f97 50 \u5206\u7684\u597d\u6210\u7ee9\u3002\r\n\r\n\u4e0b\u9762\u8bf4\u4e00\u4e2a\u5927\u4f18\u5316\uff0c\u52a0\u4e86\u80fd\u5feb\u5f88\u591a\uff0c\u518d\u52a0\u70b9\u7ec6\u679d\u672b\u8282\u7684\u5c31\u80fd\u8fc7\u4e86\u3002\r\n\r\n\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c`build` \u51fd\u6570\u7684\u91cd\u6784\u6211\u4eec\u5728\u4ee3\u7801\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u592a\u591a\u4e86\uff0c\u53ef\u4ee5\u9488\u5bf9\u8fd9\u4e2a\u4f18\u5316\u3002\r\n\r\n\u7b2c\u4e00\u6b65\u662f\u628a `build` \u5904\u7406\u4e00\u8f66\u6807\u8bb0\u7684\u5730\u65b9\u590d\u5236\u5230 `change` \u51fd\u6570\u91cc\u9762\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u7701\u53bb `build` \u7684\u5faa\u73af\u3002\r\n\r\n\u7b2c\u4e8c\u6b65\u662f\u628a\u67e5\u8be2\u4e2d\u80fd\u89e3\u51b3\u7684\u91cd\u6784\u90fd\u5e72\u6389\uff0c\u4e0d\u96be\u770b\u51fa\u67e5\u8be2\u7684\u5730\u65b9\u6709\u5f88\u591a `build`\uff0c\u56e0\u4e3a\u6ca1\u6709\u4fee\u6539\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u66ff\u6362\u4e3a `change`\uff0c\u628a\u91cd\u6784\u5168\u90e8\u5e72\u6389\uff01\r\n\r\n\u7b2c\u4e09\u6b65\u662f\u628a\u533a\u95f4\u4fee\u6539\u7684\u80fd\u4e0d\u91cd\u6784\u5c31\u4e0d\u91cd\u6784\uff0c\u5177\u4f53\u4e00\u70b9\u662f\u5982\u679c\u4e4b\u524d\u7684 `tag` \u4e3a `0`\uff0c\u5c31\u4e0d\u7528\u6539\u4e86\u3002\r\n\r\n\u7b2c\u56db\u6b65\u662f\u79fb\u690d\u8111\u7ec4\u7ec7\u7684\u8ba1\u6570\u53ef\u4ee5\u548c\u4fee\u6539\u653e\u5728\u4e00\u8d77\uff0c\u53c8\u53ef\u4ee5\u5e72\u6389\u4e00\u4e9b\u91cd\u6784\u3002\r\n\r\n\u518d\u52a0\u4e2a\u5feb\u8bfb\u5feb\u8f93\u5c31\u80fd\u8fc7\u4e86\uff08\u597d\u50cf\u5e76\u4e0d\u80fd\u5feb\u591a\u5c11\uff09\u3002\r\n\r\n\u5b8c\u6574\u4ee3\u7801\uff1a\r\n\r\n```\r\n#include<iostream>\r\n#include<cmath>\r\n#include<cstdio>\r\n#include<string>\r\n#include<cstring>\r\n#include<algorithm>\r\n#include<vector>\r\n#include<queue>\r\n#include<map>\r\n#include<set>\r\nusing namespace std;\r\n#define ll long long\r\n#define rep(i, f, t) for (int i = (f), ed##i = (t); i <= ed##i; ++i)\r\n#define re(i, t) rep (i, 1, t)\r\n#define per(i, t, f) for (int i = (t), ed##i = (f); i >= ed##i; --i)\r\n#define ste(i, f, t, s) for (int i = (f), ed##i = (t); i <= ed##i; i += s)\r\n#define each(i, x) for (auto& i : (x))\r\n#define nxt(i, f, g) for (int i = g.h[f]; i; i = g.e[i].n)\r\n#define dbg(x) (cerr << \"(dbg) \" << #x \" = \" << (x) << '\\n')\r\n#define umod(x) ((x) >= mo && ((x) -= mo))\r\n#define dmod(x) ((x) < 0 && ((x) += mo))\r\n#define up(x, y) (((x) < (y)) && ((x) = (y)))\r\n#define down(x, y) (((x) > (y)) && ((x) = (y)))\r\n#define y1 y1__\r\nnamespace FastIO {\r\n\tconst int SZ=(1<<21)+1;\r\n\tstruct I {\r\n\t\tchar ibuf[SZ],*iS,*iT,c;int f,_eof;FILE*fi;\r\n\t\tI(FILE*f):fi(f){}\r\n\t\tinline char Gc(){return iS==iT?(iT=(iS=ibuf)+fread(ibuf,1,SZ,fi),(iS==iT?EOF:*iS++)):*iS++;}\r\n\t\tinline ll operator()(){ll x;operator()(x);return x;}\r\n\t\tinline I&operator()(char&x){x=Gc();return*this;}\r\n\t\tinline I&operator()(char*s){for(c=Gc();c<32||c>126||c==' ';)c=Gc();for(;c>31&&c<127&&c!=' '&&c!='\\n'&&c!='\\r';++s,c=Gc())*s=c;*s=0;return*this;}\r\n\t\ttemplate<class T>inline I&operator()(T&x){_eof=0;for(f=1,c=Gc();(c<'0'||c>'9')&&!_eof;c=Gc()){if(c=='-')f=-1;_eof|=c==EOF;}for(x=0;c<='9'&&c>='0'&&!_eof;c=Gc())x=x*10+(c&15),_eof|=c==EOF;x*=f;return*this;}\r\n\t\ttemplate<class T>I&operator()(T*x,const int&n,const int&st=1){rep(i,st,n){operator()(x[i]);}return*this;}\r\n\t} in(stdin);\r\n\tstruct O {\r\n\t\tchar obuf[SZ],*oS=obuf,*oT=oS+SZ-1,qu[55];int f,qr;FILE*fi;\r\n\t\tO(FILE*f):fi(f){}\r\n\t\t~O(){Flush();}\r\n\t\tinline void Flush(){fwrite(obuf,1,oS-obuf,fi),oS=obuf;}\r\n\t\tinline O&operator()(char x){*oS++=x;if(oS==oT)Flush();return*this;}\r\n\t\tinline O&operator()(const char*s){int len=strlen(s);for(f=0;f<len;++f)operator()(s[f]);return*this;}\r\n\t\ttemplate<class T>inline O&operator()(T x){if(!x)operator()('0');if(x<0)operator()('-'),x=-x;while(x)qu[++qr]=x%10+'0',x/=10;while(qr)operator()(qu[qr--]);return*this;}\r\n\t\ttemplate<class T>O&operator()(T*x,const int&n,const char&ed=' ',const int&st=1){rep(i,st,n)operator()(x[i])(ed);return*this;}\r\n\t} out(stdout);\r\n}\r\nusing FastIO::in;using FastIO::out;\r\nconst int N=2e5+10;\r\nconst int M=500;\r\nint n,m,t,L[M],R[M],pos[N];\r\nint a[N],tag[M],sum[M],ss[M],pre[M],suf[M],b[M];\r\ninline void build(int x){\r\n\ttag[x]=-1;\r\n\tint l=L[x],r=R[x],s=0;\r\n\tpre[x]=suf[x]=b[x]=sum[x]=ss[x]=0;\r\n\tfor(register int i=l;i<=r;i++){\r\n\t\tif(a[i])\r\n\t\t\tbreak;\r\n\t\tpre[x]++;\r\n\t}\r\n\tfor(register int i=r;i>=l;i--){\r\n\t\tif(a[i])\r\n\t\t\tbreak;\r\n\t\tsuf[x]++;\r\n\t}\r\n\tfor(register int i=l;i<=r;i++){\r\n\t\tif(!a[i]){\r\n\t\t\ts++;\r\n\t\t\tsum[x]++;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tss[x]++;\r\n\t\tb[x]=max(b[x],s);\r\n\t\ts=0;\r\n\t}\r\n\tb[x]=max(b[x],s);\r\n\treturn;\r\n}\r\ninline void change(int x){\r\n\tif(tag[x]==-1)\r\n\t\treturn;\r\n\tif(tag[x]==1){\r\n\t\tfor(register int i=L[x];i<=R[x];i++)\r\n\t\t\ta[i]=1;\r\n\t\ttag[x]=-1;\r\n\t\tpre[x]=suf[x]=b[x]=sum[x]=0;\r\n\t\tss[x]=R[x]-L[x]+1;\r\n\t}\r\n\tif(tag[x]!=-1){\r\n\t\tfor(register int i=L[x];i<=R[x];i++)\r\n\t\t\ta[i]=0;\r\n\t\ttag[x]=-1;\r\n\t\tpre[x]=suf[x]=b[x]=sum[x]=R[x]-L[x]+1;\r\n\t\tss[x]=0;\r\n\t}\r\n\treturn;\r\n}\r\ninline void debug(){\r\n\tcout<<endl<<\"debug:\\n\";\r\n\tfor(int i=1;i<=t;i++){\r\n\t\tchange(i);\r\n\t\tbuild(i);\r\n\t}\r\n\tfor(int i=1;i<=n;i++)\r\n\t\tcout<<a[i]<<' ';\r\n\tcout<<endl<<\"finish\\n\";\r\n}\r\ninline void update(int l,int r){\r\n\tint p=pos[l],q=pos[r];\r\n\tif(p==q){\r\n\t\tif(tag[p]==0)\r\n\t\t\treturn;\r\n\t\tchange(p);\r\n\t\tfor(register int i=l;i<=r;i++)\r\n\t\t\ta[i]=0;\r\n\t\tbuild(p);\r\n\t\treturn;\r\n\t}\r\n\tif(tag[p]!=0){\r\n\t\tchange(p);\r\n\t\tfor(register int i=l;i<=R[p];i++)\r\n\t\t\ta[i]=0;\r\n\t\tbuild(p);\t\r\n\t}\r\n\tfor(register int i=p+1;i<=q-1;i++){\r\n\t\ttag[i]=ss[i]=0;\r\n\t\tpre[i]=suf[i]=sum[i]=b[i]=R[i]-L[i]+1;\r\n\t}\r\n\tif(tag[q]!=0){\r\n\t\tchange(q);\r\n\t\tfor(register int i=L[q];i<=r;i++)\r\n\t\t\ta[i]=0;\r\n\t\tbuild(q);\t\r\n\t}\r\n\treturn;\r\n}\r\ninline void modity(int l,int r,int x,int y){\r\n\tint p=pos[l],q=pos[r],res=0;\r\n\tif(p==q){\r\n\t\tif(tag[p]==-1)\r\n\t\t\tbuild(p);\r\n\t\telse change(p);\r\n\t\tfor(register int i=l;i<=r;i++)\r\n\t\t\tres+=a[i];\r\n\t}\r\n\telse{\r\n\t\tif(tag[p]==-1)\r\n\t\t\tbuild(p);\r\n\t\telse change(p);\r\n\t\tfor(register int i=l;i<=R[p];i++)\r\n\t\t\tres+=a[i];\r\n\t\tif(tag[q]==-1)\r\n\t\t\tbuild(q);\r\n\t\telse change(q);\r\n\t\tfor(register int i=L[q];i<=r;i++)\r\n\t\t\tres+=a[i];\r\n\t\tfor(register int i=p+1;i<=q-1;i++)\r\n\t\t\tres+=ss[i];\r\n\t}\r\n\tupdate(l,r);\r\n\tp=pos[x],q=pos[y];\r\n\tif(p==q){\r\n\t\tchange(p);\r\n\t\tfor(register int i=x;i<=y&&res;i++){\r\n\t\t\tif(a[i]==0)\r\n\t\t\t\tres--;\r\n\t\t\ta[i]=1;\r\n\t\t}\r\n\t\tbuild(p);\r\n\t\treturn;\r\n\t}\r\n\tchange(p);\r\n\tfor(register int i=x;i<=R[p]&&res;i++){\r\n\t\tif(a[i]==0)\r\n\t\t\tres--;\r\n\t\ta[i]=1;\r\n\t}\r\n\tbuild(p);\r\n\tif(!res)\r\n\t\treturn;\r\n\tfor(register int i=p+1;i<=q-1;i++){\r\n\t\tif(sum[i]>res){\r\n\t\t\tchange(i);\r\n\t\t\tfor(register int j=L[i];j<=R[i]&&res;j++){\r\n\t\t\t\tif(a[j]==0)\r\n\t\t\t\t\tres--;\r\n\t\t\t\ta[j]=1;\r\n\t\t\t}\r\n\t\t\tbuild(i);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tres-=sum[i];\r\n\t\ttag[i]=1;\r\n\t\tpre[i]=suf[i]=b[i]=sum[i]=0;\r\n\t\tss[i]=R[i]-L[i]+1;\r\n\t}\r\n\tif(!res)\r\n\t\treturn;\r\n\tchange(q);\r\n\tfor(register int i=L[q];i<=y&&res;i++){\r\n\t\tif(a[i]==0)\r\n\t\t\tres--;\r\n\t\ta[i]=1;\r\n\t}\r\n\tbuild(q);\r\n\treturn;\r\n}\r\ninline void query(int l,int r){\r\n\tint p=pos[l],q=pos[r];\r\n\tint s=0,res=0;\r\n\tif(p==q){\r\n\t\tchange(p);\r\n\t\tfor(register int i=l;i<=r;i++){\r\n\t\t\tif(a[i]){\r\n\t\t\t\tres=max(res,s);\r\n\t\t\t\ts=0;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\ts++;\r\n\t\t}\r\n\t\tres=max(res,s);\r\n\t\tout(res)('\\n');\r\n\t\treturn;\r\n\t}\r\n\tchange(p);\r\n\tfor(register int i=l;i<=R[p];i++){\r\n\t\tif(a[i]){\r\n\t\t\tres=max(res,s);\r\n\t\t\ts=0;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\ts++;\r\n\t}\r\n\tres=max(res,s);\r\n\tfor(register int i=p+1;i<=q-1;i++){\r\n\t\tres=max(res,b[i]);\r\n\t\tif(b[i]==(R[i]-L[i]+1)){\r\n\t\t\ts+=sum[i];\r\n\t\t\tres=max(res,s);\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\ts+=pre[i];\r\n\t\tres=max(res,s);\r\n\t\ts=suf[i];\r\n\t}\r\n\tchange(q);\r\n\tfor(register int i=L[q];i<=r;i++){\r\n\t\tif(a[i]){\r\n\t\t\tres=max(res,s);\r\n\t\t\ts=0;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\ts++;\r\n\t}\r\n\tres=max(res,s);\r\n\tout(res)('\\n');\r\n\treturn ;\r\n}\r\nint main()\r\n{\r\n\tin(n)(m);\r\n\tt=sqrt(n);\r\n\tfor(int i=1;i<=t;i++){\r\n\t\tL[i]=(i-1)*t+1;\r\n\t\tR[i]=i*t;\r\n\t}\r\n\tif(R[t]<n){\r\n\t\tt++;\r\n\t\tL[t]=R[t-1]+1;\r\n\t\tR[t]=n;\r\n\t}\r\n\tfor(register int i=1;i<=t;i++){\r\n\t\tfor(register int j=L[i];j<=R[i];j++){\r\n\t\t\tpos[j]=i;\r\n\t\t\ta[j]=1;\r\n\t\t}\r\n\t\ttag[i]=-1;\r\n\t\tpre[i]=suf[i]=b[i]=sum[i]=0;\r\n\t\tss[i]=R[i]-L[i]+1;\r\n\t}\r\n\tint opt,l,r,x,y;\r\n\twhile(m--){\r\n\t\t//debug();\r\n\t\tin(opt)(l)(r);\r\n\t\tif(opt==0){\r\n\t\t\tupdate(l,r);\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif(opt==1){\r\n\t\t\tin(x)(y);\r\n\t\t\tmodity(l,r,x,y);\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif(opt==2)\r\n\t\t\tquery(l,r);\r\n\t}\r\n\treturn 0;\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n",
        "postTime": 1655805946,
        "uid": 253738,
        "name": "\u542c\u53d6MLE\u58f0\u4e00\u7247",
        "ccfLevel": 7,
        "title": "P4344 [SHOI2015]\u8111\u6d1e\u6cbb\u7597\u4eea \u9898\u89e3"
    },
    {
        "content": "\u8c03\u4e86\u5c06\u8fd1\u4e00\u4e2a\u4e0b\u5348\u7ec8\u4e8eA\u4e86\u8fd9\u9053\u9898\uff0c\u4f3c\u4e4e\u6ca1\u6709\u6211\u60f3\u7684\u90a3\u4e48\u96be\uff1f\uff1f\uff1f\n\n\u5176\u4ed6\u4e24\u7bc7\u9898\u89e3\u6211\u5e76\u6ca1\u6709\u770b\u61c2\uff0c\u679c\u7136\u8fd8\u662f\u592a\u83dc\u4e86%%%\u5b88\u671b\u5927\u4f6c\u3002\n\n\u6b65\u5165\u6b63\u9898\uff1a\u80af\u5b9a\u662f\u8981\u7528\u7ebf\u6bb5\u6811\u7684\uff0c\u90a3\u6211\u4eec\u6765\u770b\u600e\u4e48\u5b9e\u73b0\u3002\n\n0\u64cd\u4f5c\uff1a\u533a\u95f4\u4fee\u6539\uff0c\u628a\u677f\u5b50\u5199\u4e0a\u6539\u4e00\u4e0b\uff0c\u5b8c\u3002\u3002\n\n1\u64cd\u4f5c\uff1a\u9996\u5148\u6a21\u62df\u9898\u610f\uff0c\u628al0\u5230r0\u7684\u8111\u7ec6\u80de\u53d6\u51fa\u6765\uff08\u533a\u95f4\u6c42\u548c+\u533a\u95f4\u4fee\u6539\uff09\uff0c\u7136\u540e\u5728l1\u5230r1\u533a\u95f4\u627e\u51fa\u51e0\u4e2a\u8fde\u7eed\u76840\u628a\u8111\u7ec6\u80de\u8865\u4e0a\n\n\u600e\u4e48\u627e0\u5462\uff1f\u9996\u5148\u66b4\u529b\u80af\u5b9a\u662f\u4e0d\u884c\u7684\uff0c\u7531\u4e8e\u8fde\u7eed\u6700\u957f\u76840\u6ee1\u8db3\u5355\u8c03\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u67e5\u627e\u3002\n\n\u800c\u8fd9\u4e2a\u4e8c\u5206\u8fd8\u6709\u4e00\u4e2a\u524d\u63d0\u5c31\u662f\u5f53\u524d\u5e8f\u5217\u7684\u8d77\u70b9\u5f97\u662f0\uff0c\u4e0d\u7136\u600e\u4e48\u4e5f\u627e\u4e0d\u5230\u3002\n\n\u90a3\u600e\u4e48\u529e\u5462\uff1f\u7531\u4e8e\u8d77\u70b9\u4e0d\u662f\u96f6\u5c31\u662f\u4e00\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u4e8c\u5206\u627e\u4ee5\u8d77\u70b9\u5f00\u5934\u8fde\u7eed\u6700\u957f\u76841\u5e8f\u5217\uff0c\u7136\u540e\u628a\u5b83\u7684\u7ec8\u70b9\u540e\u9762\u4e00\u4e2a\u5143\u7d20\uff08\u4e00\u5b9a\u662f0\uff09\u4f5c\u4e3a0\u5e8f\u5217\u7684\u8d77\u70b9\uff0c\u8fd9\u6837\u5c31\u627e\u5230\u4e00\u4e2a\u4ee5\u5f53\u524d\u8d77\u70b9\u8fde\u7eed\u6700\u957f\u76840\uff0c\u7136\u540e\u628a\u5b83\u8865\u4e0a\uff08\u533a\u95f4\u4fee\u6539\u6210\u4e00\uff09\u3002\n\n\u8fd9\u662f\u5982\u679c\u8fd8\u80fd\u8865\uff0c\u6211\u4eec\u5c31\u53c8\u9762\u4e34\u5f53\u65f6\u7684\u90a3\u4e2a\u95ee\u9898\uff0c\u5faa\u73af\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n2\u64cd\u4f5c\uff1a\u6211\u4eec\u4f1a\u4e86\u4e00\u64cd\u4f5c\uff0c\u8fd9\u4e2a\u81ea\u7136\u4e5f\u4f1a\u4e86\u3002\n\n```\n#include<cstdio>\n#include<iostream>\n#ifdef ONLINE_JUDGE\nchar ss[1<<17],*A=ss,*B=ss;\ninline char gc(){if(A==B){B=(A=ss)+fread(ss,1,1<<17,stdin);if(A==B)return EOF;}return*A++;}\ntemplate<class T>inline void read(T&x){\n    static char c;static int y;\n    for(c=gc(),x=0,y=1;c<48||57<c;c=gc())if(c=='-')y=-1;\n    for(;48<=c&&c<=57;c=gc())x=((x+(x<<2))<<1)+(c^'0');\n    x*=y;\n}\n#else\nvoid read(int &x){scanf(\"%d\",&x);}\n#endif\t\t//\u5feb\u8bfb\nusing namespace std;\nint ad[800001],sum[800001],n,t;\ninline void write(int x){if(x>9) write(x/10);putchar(x%10^48);}\ninline void pushup(int rt){\n\tsum[rt]=sum[rt<<1]+sum[rt<<1|1];\n}\nvoid build(int rt,int l,int r){\t\t//\u83dc\u9e21\u4e13\u5c5e\u5efa\u6811\n\tif (l==r){\n\t\tsum[rt]=1;\n\t\treturn;\n\t}\n\tint m=(l+r)>>1;\n\tbuild(rt<<1,l,m);\n\tbuild(rt<<1|1,m+1,r);\n\tpushup(rt);\n}\ninline void pushdown(int rt,int l,int r){\n\tif (ad[rt]){\n\t\tint m=(l+r)>>1;\n\t\tad[rt]--;\n\t\tsum[rt<<1]=ad[rt]*(m-l+1);\n\t\tsum[rt<<1|1]=ad[rt]*(r-m);\n\t\tad[rt<<1]=ad[rt]+1;\n\t\tad[rt<<1|1]=ad[rt]+1;\n\t\tad[rt]=0;\n\t}\n}\nvoid update(int rt,int l,int r,int x,int y,int k){\t//\u533a\u95f4\u90fd\u9644\u6210k\n\tif (l>y||x>r) return;\n\tif (x<=l&&r<=y){\n\t\tad[rt]=k+1;\t\t//\u7531\u4e8e\u67090\uff0ck+1\u65b9\u4fbf\u4e00\u4e9b\n\t\tsum[rt]=k*(r-l+1);\n\t\treturn;\n\t}\n\tpushdown(rt,l,r);\n\tint m=(l+r)>>1;\n\tif (m>=x) update(rt<<1,l,m,x,y,k);\n\tif (m<y) update(rt<<1|1,m+1,r,x,y,k);\n\tpushup(rt);\n}\nint query(int rt,int l,int r,int x,int y){\t\t//\u67e5\u8be2\u533a\u95f4\u548c\n\tif (l>y||x>r) return 0;\n\tif (x<=l&&r<=y) return sum[rt];\n\tpushdown(rt,l,r);\n\tint m=(l+r)>>1,ret=0;\n\tif (m>=x) ret+=query(rt<<1,l,m,x,y);\n\tif (m<y) ret+=query(rt<<1|1,m+1,r,x,y);\n\treturn ret;\n}\ninline int ef(int x,int y,int k){\t//\u4e8c\u5206\u67e5\u627ex\u5230y\u4e4b\u95f4\u8fde\u7eed\u6700\u957f\u7684k\u5e8f\u5217\n\tint l=0,r=y-x,mid;\n\tif (x>y) return -1;\n\twhile (l<=r){\n\t\tmid=(l+r)>>1;\n\t\tif (query(1,1,n,x,x+mid)==k*(mid+1)) l=mid+1;\n\t\telse r=mid-1;\n\t}\n\treturn l;\n}\nint main(){\n\tint x,y,b,c,d;\n\tread(n); read(t);\n\tbuild(1,1,n);\n\twhile (t--){\n\t\tread(b),read(x),read(y);\n\t\tif (b==0){\n\t\t\tupdate(1,1,n,x,y,0);\n\t\t}\n\t\tif (b==1){\n\t\t\tread(c),read(d);\n\t\t\tint num=query(1,1,n,x,y),p=0;\n\t\t\tupdate(1,1,n,x,y,0);\n\t\t\tif (num>=(d-c+1)-query(1,1,n,c,d)){\t\n\t\t\t\tupdate(1,1,n,c,d,1); continue;\n\t\t\t}\n\t\t\tif (num==0) continue;//\u4ee5\u4e0a\u4e24\u4e2a\u7279\u5224\u4e3a\u83dc\u9e21T\u4e86\u4e4b\u540e\u65e0\u52a9\u7684\u6323\u624e\n\t\t\twhile (1){\n\t\t\t\tif (query(1,1,n,c,c)==1){\t//\u5f00\u5934\u4e3a\u4e00\n\t\t\t\t\tp=ef(c,d,1); c+=p; \n\t\t\t\t}\n\t\t\t\tp=ef(c,d,0);\n\t\t\t\tif (p==-1) break;\n\t\t\t\tif (p>num){\n\t\t\t\t\tupdate(1,1,n,c,c+num-1,1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tupdate(1,1,n,c,c+p-1,1);\n\t\t\t\t\tnum-=p; c+=p;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (b==2){\n\t\t\tint ans=0,p=0;\n\t\t\twhile (1){\n\t\t\t\tif (query(1,1,n,x,x)==1){\n\t\t\t\t\tp=ef(x,y,1); x+=p;\n\t\t\t\t}\n\t\t\t\tp=ef(x,y,0);\n\t\t\t\tif (p==-1) break;\n\t\t\t\tans=max(ans,p);\n\t\t\t\tx+=p; if (x>y) break;\t//\u5fd8\u5199\u8fd9\u4e2a85\u5206\u6b7b\u5faa\u73af\n\t\t\t}\n\t\t\twrite(ans); puts(\"\");\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1535110656,
        "uid": 63661,
        "name": "Taduro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4344 \u3010[SHOI2015]\u8111\u6d1e\u6cbb\u7597\u4eea\u3011"
    },
    {
        "content": "ODT\u3002  \n\u7a76\u6781\u66b4\u529b\u5927\u6cd5\u597d\uff0c\u6ca1\u60f3\u5230 ODT \u66b4\u529b\u5199\u5e76\u4e0d\u4f1a T \u5462\u2026\u2026  \n\u7167\u4f8b\u4e00\u4e2a\u4e00\u4e2a\u64cd\u4f5c\u5206\u6790\uff1a  \n - 0 \u64cd\u4f5c\uff1a\u76f4\u63a5\u63a8\u5e73\u3002  \n - 1 \u64cd\u4f5c\uff1a\u5148\u8ba1\u7b97 $[l_0,r_0]$ \u4e2d\u7684\u8111\u7ec4\u7ec7\u6570\u91cf\uff0c\u7136\u540e\u76f4\u63a5\u63a8\u5e73\uff0c\u518d\u4e00\u4e2a\u4e00\u4e2a\u533a\u95f4\u6765\u5bf9 $[l_1,r_1]$ \u4fee\u6539\uff0c\u5047\u5b9a\u6211\u4eec\u7684\u8111\u7ec4\u7ec7\u6570\u91cf\u4e3a $\\text{sum}$\uff0c\u5982\u679c\u5f53\u524d\u7684 $0$ \u533a\u95f4 $\\text{len}\\leq\\text{sum}$\uff0c\u76f4\u63a5\u4fee\u6539 $\\text{val}$\uff0c\u540c\u65f6 $\\text{sum}=\\text{sum}-\\text{len}$\uff1b\u53cd\u4e4b\u63a8\u5e73\u5f53\u524d\u533a\u95f4\u9760\u524d\u7684 $\\text{sum}$ \u4e2a\u5373\u53ef\u3002\n - 2 \u64cd\u4f5c\uff1a\u76f4\u63a5\u4e00\u4e2a\u4e00\u4e2a\u533a\u95f4\u626b\u8fc7\u53bb\u5c31\u597d\u4e86\uff0c\u7528\u4e00\u4e2a $\\text{res}$ \u8bb0\u5f55\u4e34\u65f6\u7b54\u6848\uff0c\u5982\u679c\u5f53\u524d\u533a\u95f4\u4e3a $1$ \u66f4\u65b0 $\\text{ans}$\uff0c\u5c06 $\\text{res}$ \u6e05\u7a7a\uff0c\u5426\u5219 $\\text{res}=\\text{res}+\\text{len}$\uff0c\u4e0d\u8981\u5fd8\u4e86\u6700\u540e\u8fd8\u8981\u66f4\u65b0\u4e00\u904d $\\text{ans}$\uff0c\u8f93\u51fa\u5373\u53ef\u3002\n \n```cpp\n#include<bits/stdc++.h>\n#define MAXN 200005\n#define reg register\n#define inl inline\n#define iter set<Node>::iterator \nusing namespace std;\nstruct Node\n{\n\tint l,r;\n\tmutable int val;\n\tbool operator < (const Node &x) const\n\t{\n\t\treturn l<x.l;\n\t}\n}a[MAXN];\nint n,Q;\nset<Node> s;\ninl iter Split(reg int pos)\n{\n\treg iter it=s.lower_bound((Node){pos,pos,-1});\n\tif(it!=s.end() && it->l==pos) return it;\n\tit--;\n\treg Node x=*it;\n\ts.erase(it);\n\ts.insert((Node){x.l,pos-1,x.val});\n\treturn s.insert((Node){pos,x.r,x.val}).first;\n}\ninl void Assign(reg int l,reg int r,reg int val)\n{\n\treg iter R=Split(r+1),L=Split(l);\n\ts.erase(L,R);\n\ts.insert((Node){l,r,val});\n}\ninl void Modify(reg int x,reg int y,reg int l,reg int r)\n{\n\treg iter R=Split(y+1),L=Split(x);\n\treg int sum=0;\n\tfor(reg iter it=L;it!=R;it++) if(it->val) sum+=(it->r-it->l+1);\n\tAssign(x,y,0);\n\tR=Split(r+1);\n\tL=Split(l);\n\tfor(reg iter it=L;it!=R && sum;it++)\n\t{\n\t\tif(!(it->val))\n\t\t{\n\t\t\tif(sum>=(it->r-it->l+1))\n\t\t\t{\n\t\t\t\tit->val=1;\n\t\t\t\tsum-=(it->r-it->l+1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tAssign(it->l,it->l+sum-1,1);\n\t\t\t\tsum=0;\n\t\t\t}\n\t\t}\n\t}\n}\ninl int Query(reg int l,reg int r)\n{\n\treg iter R=Split(r+1),L=Split(l);\n\treg int res=0,ans=0;\n\tfor(reg iter it=L;it!=R;it++)\n\t{\n\t\tif(!(it->val)) res+=(it->r-it->l+1);\n\t\telse\n\t\t{\n\t\t\tans=max(ans,res);\n\t\t\tres=0;\n\t\t}\n\t}\n\treturn max(ans,res);\n}\ninl void Out()\n{\n\tputs(\"\\n ST:\");\n\treg iter R=Split(n+1),L=Split(1);\n\tfor(reg iter it=L;it!=R;it++)\n\t{\n\t\tfor(reg int i=1;i<=(it->r-it->l+1);i++) printf(\"%d \",it->val);\n\t}\n\tputs(\"\\n\");\n}\nint main()\n{\n\tscanf(\"%d %d\",&n,&Q);\n\ts.insert((Node){1,n,1});\n\twhile(Q--)\n\t{\n\t\treg int opt,x,y,l,r;\n\t\tscanf(\"%d %d %d\",&opt,&x,&y);\n\t\tif(!opt) Assign(x,y,0);\n\t\telse if(opt==1)\n\t\t{\n\t\t\tscanf(\"%d %d\",&l,&r);\n\t\t\tModify(x,y,l,r);\n\t\t}\n\t\telse printf(\"%d\\n\",Query(x,y));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1568730666,
        "uid": 23243,
        "name": "VenusM1nT",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4344 \u3010[SHOI2015]\u8111\u6d1e\u6cbb\u7597\u4eea\u3011"
    },
    {
        "content": "\u7ebf\u6bb5\u6811\u88f8\u9898\uff0c\u7ef4\u62a4\u6700\u5927\u8fde\u7eed\u5b50\u6bb5\n\n\u64cd\u4f5c\u53ea\u6709\u533a\u95f4\u8986\u76d6\uff08\u5168\u53d8\u4e3a0\uff09\u548c\u4e00\u4e2a\u533a\u95f4\u8865\u5168\uff08\u59d1\u4e14\u8fd9\u4e48\u547d\u540d\uff09\n\n\u533a\u95f4\u8986\u76d6\u597d\u8bf4\uff0c\u4e00\u4e2a\u6807\u8bb0\u5c31\u884c\u4e86\n\n\u533a\u95f4\u8865\u5168\u600e\u4e48\u641e\u5462\uff1f\n\n\u53ef\u4ee5\u5728\u7ed9\u5b9a\u7684\u533a\u95f4\u91cc\u627e\u51fa\u8fde\u7eed\u4e3a0\u7684\u4e00\u6bb5\uff0c\u5e76\u4e14\u4f60\u73b0\u5728\u6709\u7684\u8111\u7ec4\u7ec7\u53ef\u4ee5\u586b\u6ee1ta\n\n\u8fd9\u6837\u5c31\u53c8\u662f\u533a\u95f4\u8986\u76d6\uff08\u5168\u53d8\u4e3a1\uff09\u4e86\n\n\u8981\u662f\u8111\u7ec4\u7ec7\u4e0d\u591f\uff0c\u5c31\u7ee7\u7eed\u4e8c\u5206\u76f4\u5230\u627e\u5230\u53ef\u4ee5\u586b\u6ee1\u7684\u533a\u95f4\n\n\u5982\u56fe\uff1a![](http://a-failure.github.io/img/study/naodong.png)\n\n\u7ea2\u8272\u7ebf\u6bb5\u662f\u6709\u7684\u8111\u7ec4\u7ec7\uff0c\u84dd\u8272\u865a\u7ebf\u90e8\u5206\u662f\u8111\u6d1e\n\n![](http://a-failure.github.io/img/study/naodong1.png)\n\n\u628a\u7ea2\u8272\u90e8\u5206\u586b\u8fdb\u8111\u6d1e1\n\n![](http://a-failure.github.io/img/study/naodong2.png)\n\n\u8fd9\u65f6\u7ea2\u8272\u5269\u4f59\u90e8\u5206\u4e0d\u591f\u586b\u5145\u8111\u6d1e2\u4e86\uff0c\u4e8e\u662f\u4e8c\u5206\u8111\u6d1e2\u76f4\u5230\u627e\u5230\u53ef\u4ee5\u586b\u5145\u7684\u90e8\u5206\n\n\u8fd9\u6837\u52a0\u4e0a\u4e00\u4e9b\u4f18\u5316\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u6982\u662f$O(nlogn)$\u591a\u4e00\u70b9\uff1f~~\u6211\u4e5f\u4e0d\u4f1a\u7b97~~\n\n\u53cd\u6b63\u5f00$O2$\u8dd1\u7684\u633a\u5febqwq\n\n\u4ee3\u7801\uff1a\n```cpp\n# include<iostream>\n# include<cstring>\n# include<cstdio>\n# include<algorithm>\n# define tl (k<<1)\n# define tr (k<<1|1)\n# define mid (l+r>>1)\nusing namespace std;\nconst int MAX=2e5+1;\nstruct p{\n    int Sum,l,r,sum,lazy;\n    p(){lazy=-1;}\n}s[MAX<<2];\nint n,m,tot,TOT;\nint read()\n{\n    int x=0;\n    char ch=getchar();\n    for(;!isdigit(ch);ch=getchar());\n    for(;isdigit(ch);x=x*10+ch-48,ch=getchar());\n    return x;\n}\np pus(int dis,p a,p b,int l,int r)\n{\n    p c;\n    c.l=c.r=c.sum=c.Sum=0,c.lazy=dis;\n    c.Sum=a.Sum+b.Sum;\n    c.l=a.l,c.r=b.r;\n    if(a.l==mid-l+1) c.l+=b.l;\n    if(b.r==r-mid) c.r+=a.r;\n    c.sum=a.r+b.l;\n    c.sum=max(c.sum,max(a.sum,b.sum));\n    c.sum=max(c.l,max(c.r,c.sum));\n    return c;\n}\nvoid down(int l,int r,int k)\n{\n    int dis=s[k].lazy;\n    s[k].lazy=-1;\n    if(dis==-1) return;\n    s[tl].Sum=dis*(mid-l+1),s[tl].sum=s[tl].l=s[tl].r=(dis==0)*(mid-l+1),s[tl].lazy=dis;\n    s[tr].Sum=dis*(r-mid),s[tr].sum=s[tr].l=s[tr].r=(dis==0)*(r-mid),s[tr].lazy=dis;\n}\nvoid change1(int l,int r,int k,int L,int R)\n{\n    if(l==L&&r==R)\n    {\n        s[k].Sum=0,s[k].sum=s[k].l=s[k].r=r-l+1,s[k].lazy=0;\n        return;\n    }\n    down(l,r,k);\n    if(R<=mid) change1(l,mid,tl,L,R);\n    else if(L>mid) change1(mid+1,r,tr,L,R);\n    else change1(l,mid,tl,L,mid),change1(mid+1,r,tr,mid+1,R);\n    s[k]=pus(s[k].lazy,s[tl],s[tr],l,r);\n}\nvoid change3(int l,int r,int k)\n{\n    if(!TOT) return;\n\tif(s[k].Sum==r-l+1) return;\n    if(!s[k].Sum&&TOT>=r-l+1)\n    {\n        s[k].Sum=r-l+1,s[k].sum=s[k].l=s[k].r=0,s[k].lazy=1;\n        TOT-=r-l+1,tot+=r-l+1;\n        return;\n    }\n    if(l>=r) return;\n    down(l,r,k);\n    change3(l,mid,tl),change3(mid+1,r,tr);\n    s[k]=pus(s[k].lazy,s[tl],s[tr],l,r);\n}\nvoid change2(int l,int r,int k,int L,int R,int dis)\n{\n    if(tot>=dis) return;\n    if(l==L&&r==R)\n    {\n        TOT=dis-tot,change3(l,r,k);\n        return;\n    }\n    down(l,r,k);\n    if(R<=mid) change2(l,mid,tl,L,R,dis);\n    else if(L>mid) change2(mid+1,r,tr,L,R,dis);\n    else change2(l,mid,tl,L,mid,dis),change2(mid+1,r,tr,mid+1,R,dis);\n    s[k]=pus(s[k].lazy,s[tl],s[tr],l,r);\n}\nint ask1(int l,int r,int k,int L,int R)\n{\n    if(l==L&&r==R) return s[k].Sum;\n    down(l,r,k);\n    if(R<=mid) return ask1(l,mid,tl,L,R);\n    if(L>mid) return ask1(mid+1,r,tr,L,R);\n    return ask1(l,mid,tl,L,mid)+ask1(mid+1,r,tr,mid+1,R);\n}\np ask2(int l,int r,int k,int L,int R)\n{\n    if(l==L&&r==R) return s[k];\n    down(l,r,k);\n    if(R<=mid) return ask2(l,mid,tl,L,R);\n    if(L>mid) return ask2(mid+1,r,tr,L,R);\n    p LL=ask2(l,mid,tl,L,mid),RR=ask2(mid+1,r,tr,mid+1,R);\n    return pus(-1,LL,RR,l,r);\n}\nint Ask(int l,int r)\n{\n    int ans=ask1(1,n,1,l,r);\n    change1(1,n,1,l,r);\n    return ans;\n}\nint main()\n{\n    n=read(),m=read();\n    s[1].lazy=1,s[1].Sum=n;\n    for(int i=1;i<=m;++i)\n      {\n      \tint op=read(),l=read(),r=read(),l1,r1;\n      \tif(!op) change1(1,n,1,l,r);\n      \telse if(op==1)\n      \t{\n      \t\tl1=read(),r1=read();\n      \t\tint dis=Ask(l,r);\n      \t\tif(dis) tot=TOT=0,change2(1,n,1,l1,r1,dis);\n      \t}\n      \telse if(op==2) printf(\"%d\\n\",ask2(1,n,1,l,r).sum);\n      }\n    return 0;\n}\n```",
        "postTime": 1530076912,
        "uid": 49206,
        "name": "Dispwnl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4344 \u3010[SHOI2015]\u8111\u6d1e\u6cbb\u7597\u4eea\u3011"
    },
    {
        "content": "### \u524d\u8a00\n\n~~\u7ebf\u6bb5\u6811\u8fd9\u4e48\u597d\u4e3a\u4ec0\u4e48\u8981\u5199\u73c2\u6735\u8389\u6811\u5462\uff1f\u8fd8\u4f1a\u88ab\u5361~~\n\n\u7ebf\u6bb5\u6811+\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u3002\n\n\u5199\u4e86\u4e24\u4e2a\u5c0f\u65f6\u624d\u5199\u51fa\u6765...\n\n\u800c\u4e14\u6211\u60f3\u51fa\u7684\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u5355\u6b21$O(\\log_2n)$\u7684\uff0c\u800c\u4e0d\u662f\u5747\u644a\u7684\u3002\n\n\u5176\u4ed6\u4e09\u7bc7\u9898\u89e3\u90fd\u662f\u5747\u644a\u590d\u6742\u5ea6$O(\\log_2n)$\u3002\u3002\u3002\n\n\u6240\u4ee5\u6211\u6765\u53d1\u4e00\u7bc7\u597d\u5566\uff01\n\n### \u7ea6\u5b9a\n\n\u8bbe\u8111\u6d46\u4e3a$1$\uff0c\u8111\u6d1e\u4e3a$0$\u3002\n\n------------\n\n\n\u9996\u5148\u6211\u4eec\u8981**\u7406\u89e3**\u7ebf\u6bb5\u6811\u3002\n\n\u7136\u540e\u770b\u770b\u7b2c$3$\u4e2a\u64cd\u4f5c\u600e\u4e48\u5199\u3002\n\n\u6211\u4eec\u7ef4\u62a4\u7ebf\u6bb5\u6811\u4e0a\u533a\u95f4\u7684\u4fe1\u606f\u6709\uff1a\n\n- \u533a\u95f4\u6709\u591a\u5c11\u4e2a$1$\uff0c\u8bb0\u4e3a x\n\n- **\u6700\u591a**\u6709\u591a\u5c11\u4e2a$0$\uff0c\u8bb0\u4e3a ans\u3002\n\n- \u4ece\u5de6\u7aef\u70b9\u5411\u53f3\u5ef6\u4f38**\u6700\u591a**\u6709\u591a\u5c11\u4e2a$0$\uff0c\u8bb0\u4e3a lmax\u3002\n\n- \u4ece\u53f3\u7aef\u70b9\u5411\u5de6\u5ef6\u4f38**\u6700\u591a**\u6709\u591a\u5c11\u4e2a$0$\uff0c\u8bb0\u4e3a  rmax\u3002\n\n- \u533a\u95f4\u957f\u5ea6\uff0c\u8bb0\u4e3a len \n\n\u5982\u4f55\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\uff08\u4ece\u5de6\u5230\u53f3\u4e3a$a,b$\uff09\uff1f\u8bbe\u6700\u540e\u5408\u6210\u7684\u533a\u95f4\u4e3a$c$\n\n```cpp\n\nc.x=a.x+b.x\n\nc.len=a.len+b.len\n\nc.lmax=(a.len==a.lmax)?a.len+b.lmax:a.lmax\n\nc.rmax=(b.len==b.rmax)?b.len+a.rmax:b.rmax\n\nc.ans=max{a.rmax+b.lmax,a.ans,b.ans,c.lmax,c.rmax}\n\n```\n\n\u90a3\u4e48\u5c31\u53ef\u4ee5\u50cf[GSS1](https://www.luogu.org/problemnew/show/SP1043)\u4e00\u6837\u505a\u4e86\u3002\n\n\n------------\n\n\u7b2c$1$\u4e2a\u64cd\u4f5c\u5f88\u7b80\u5355\u5c31\u662f\u533a\u95f4\u8d4b\u503c\uff0c\u6253\u61d2\u6807\u8bb0\u5373\u53ef\u3002\n\n\u7b2c$2$\u4e2a\u64cd\u4f5c\uff0c\u5c31\u662f\u5148\u6316\u7a7a\uff08\u5168\u90e8\u53d8\u6210$0$\uff09$[l_1,r_1]$\uff0c\u5e76\u6c42\u51fa\u533a\u95f4\u6709\u591a\u5c11\u4e2a$1$\uff08\u53ef\u4ee5\u4e00\u4e2a\u51fd\u6570\u5b8c\u6210\uff09\n\n\u7136\u540e\u628a$[l_2,r_2]$\u6309\u987a\u5e8f\u586b\u5145\uff0c\u80fd\u586b\u591a\u5c11\u586b\u591a\u5c11\uff0c\u586b\u6ee1\u4e86\u5c31\u6254\u6389\u591a\u4f59\u7684\u8111\u6d46\u3002\n\n\u600e\u4e48\u6309\u987a\u5e8f\u586b\u5145\u5462\uff1f\n\n\u5982\u679c\u8111\u6d46\u591a\u4f59\u4e86\uff0c\u5c31\u76f4\u63a5\u533a\u95f4\u8986\u76d6\uff08\u5168\u90e8\u8986\u76d6\u6210$1$\uff09\u3002\n\n\u5982\u679c\u8111\u6d46\u6ca1\u6709\u5269\u4f59\u5462\uff1f\u6ce8\u610f\u5230\u5982\u679c\u8fd9\u4e2a\u4f4d\u7f6e\u6709\u8111\u6d46\u5c31\u4e0d\u9700\u8981\u8986\u76d6\uff0c\u8fd9\u600e\u4e48\u641e\uff1f\n\n\u53d1\u73b0\u53ef\u4ee5\u4e8c\u5206\u3002\u76f4\u63a5\u4e8c\u5206\u6316\u51fa\u7684\u8111\u6d46\u6700\u591a\u53ef\u4ee5\u8986\u76d6\u5230\u7684\u4f4d\u7f6e\u3002\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log_2^2n)$\n\n\u5f53\u7136\u8fd9\u662f\u8fc7\u4e0d\u53bb\u7684\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u66f4\u4f18\u7684\u89e3\u6cd5\u3002\n\n\u6211\u4eec\u5148\u628a$[l_2,r_2]$\u6254\u5230\u7ebf\u6bb5\u6811\u4e0a\uff0c\u8ba9\u6574\u4e2a\u533a\u95f4\u6839\u636e\u7ebf\u6bb5\u6811\u7ed3\u6784\u5206\u6210$O(\\log_2n)$\u4e2a\u533a\u95f4\u3002\n\n\u53d1\u73b0\u8fd9\u4e9b\u533a\u95f4\u6709\u4e9b\u662f\u88ab**\u5b8c\u5168\u4fee\u8865**\u7684\uff0c\u6709\u4e9b\u533a\u95f4\u6ca1\u6709\u88ab\u4fee\u8865\u3002\n\n\u4e00\u5b9a\u6709\u4e00\u4e2a\u533a\u95f4\uff0c\u6ee1\u8db3\u5b83\u7684\u4e0b\u4e00\u4e2a\u533a\u95f4\u6ca1\u6709\u88ab\u4fee\u8865\uff08\u5982\u679c\u4e0d\u5b58\u5728\u4e0b\u4e00\u4e2a\u533a\u95f4\u4e5f\u7b97\uff09\uff0c\u800c\u5b83\u81ea\u5df1\u88ab**\u90e8\u5206\u4fee\u8865**\uff08\u53ef\u80fd\u6b63\u597d\u88ab\u586b\u6ee1\uff09\n\n\u6c42\u51fa\u8fd9\u4e2a\u533a\u95f4\u3002\n\n\u7136\u540e\u5728\u8fd9\u4e2a\u533a\u95f4\u7684\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\uff0c\u627e\u5230\u6700\u540e\u4fee\u8865\u7684\u90a3\u4e2a\u70b9$\\text{pos}$\u3002\n\n\u8fd9\u53ef\u4ee5\u7528\u7c7b\u4f3c\u7b2c$k$\u5c0f\u7684\u65b9\u6cd5\u8fdb\u884c\u3002\n\n\u6700\u540e$[l_2,\\text{pos}]$\u5168\u90e8\u8986\u76d6\u4e0a$1$\u5373\u53ef\u3002\n\n\u5e38\u6570\u8fd8\u884c\u5427\u3002\u5177\u4f53\u770b\u6ce8\u91ca\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define ljc 998244353\nusing namespace std;\n#ifdef Fading\n#define gc getchar\n#endif\n#ifndef Fading\ninline char gc(){\n    static char now[1<<16],*S,*T;\n    if (T==S){T=(S=now)+fread(now,1,1<<16,stdin);if (T==S) return EOF;}\n    return *S++;\n}\n#endif\ninline ll read(){\n    register ll x=0,f=1;char ch=gc();\n    while (!isdigit(ch)){if(ch=='-')f=-1;ch=gc();}\n    while (isdigit(ch)){x=(x<<3)+(x<<1)+ch-'0';ch=gc();}\n    return (f==1)?x:-x;\n}\nstruct node{\n    int x,lmax,rmax,ans,len;\n}seg[4000001];\ninline node init(int x,int y,int a,int b,int xx){\n    return (node){x,y,a,b,xx};\n}\ninline node operator + (const node &a,const node &b){//\u5408\u5e76\u533a\u95f4\u3002\n    node c=init(a.x+b.x,(a.len==a.lmax)?a.len+b.lmax:a.lmax,(b.len==b.rmax)?b.len+a.rmax:b.rmax,\n    max(a.rmax+b.lmax,max(a.ans,b.ans)),a.len+b.len);\n    c.ans=max(c.ans,max(c.lmax,c.rmax));\n    return c;\n}\nint Len[4000001],LB[4000001],RB[4000001],fg[4000001],n,m,Q;\n#define mid ((lb+rb)>>1)\ninline void pushup(int rt){\n    seg[rt]=seg[rt<<1]+seg[rt<<1|1];\n}\nvoid build(int rt,int lb,int rb){\n    fg[rt]=-1;LB[rt]=lb;RB[rt]=rb;\n    if (lb==rb) return (void)(seg[rt]=init(1,0,0,0,1));\n    build(rt<<1,lb,mid);build(rt<<1|1,mid+1,rb);\n    pushup(rt);Len[rt]=Len[rt<<1]+Len[rt<<1|1];\n}\ninline void pushdown(int rt,int lb,int rb){\n    if (~fg[rt]){\n        int ls=rt<<1,rs=rt<<1|1;\n        fg[ls]=fg[rs]=fg[rt];\n        seg[ls]=init(fg[rt]*(mid-lb+1),(1-fg[rt])*(mid-lb+1),(1-fg[rt])*(mid-lb+1),(1-fg[rt])*(mid-lb+1),mid-lb+1);\n        seg[rs]=init(fg[rt]*(rb-mid),(1-fg[rt])*(rb-mid),(1-fg[rt])*(rb-mid),(1-fg[rt])*(rb-mid),rb-mid);\n        fg[rt]=-1;\n    }\n}\nll dig(int rt,int lb,int rb,int l,int r,int x){\n//\u638f\u7a7a\u8fd9\u4e2a\u533a\u95f4\u5e76\u8fd4\u56de\u6709\u591a\u5c11\u4e2a1\u3002\n    if (lb>r||rb<l) return 0;\n    if (lb>=l&&rb<=r){\n        int tmp=seg[rt].x;fg[rt]=x;\n        seg[rt]=init(x*(rb-lb+1),(1-x)*(rb-lb+1),(1-x)*(rb-lb+1),(1-x)*(rb-lb+1),rb-lb+1);\n        return tmp;\n    }\n    pushdown(rt,lb,rb);\n    int ans=dig(rt<<1,lb,mid,l,r,x)+dig(rt<<1|1,mid+1,rb,l,r,x);\n    pushup(rt);return ans;\n}\nint dl[101],tot;\nvoid Get(int rt,int lb,int rb,int l,int r){//\u62c6\u5206\u533a\u95f4\u3002\n    if (lb>r||rb<l) return;\n    if (lb>=l&&rb<=r) return (void)(dl[++tot]=rt);\n    pushdown(rt,lb,rb);\n    Get(rt<<1,lb,mid,l,r);Get(rt<<1|1,mid+1,rb,l,r);\n}\nnode query(int rt,int lb,int rb,int l,int r){//3\u64cd\u4f5c\u3002\n    if (lb>r||rb<l) return init(seg[rt].len,0,0,0,seg[rt].len);\n    if (lb>=l&&rb<=r) return seg[rt];\n    pushdown(rt,lb,rb);\n    return query(rt<<1,lb,mid,l,r)+query(rt<<1|1,mid+1,rb,l,r);\n}\nint findit(int rt,int lb,int rb,int x,int sz){//\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u627e\u70b9\u3002\n    pushdown(rt,lb,rb);\n    if (sz+seg[rt].len-seg[rt].x==x) return rb;\n    if (sz+(seg[rt<<1].len-seg[rt<<1].x)<x) \n        return findit(rt<<1|1,mid+1,rb,x,sz+seg[rt<<1].len-seg[rt<<1].x);\n        //\u5de6\u533a\u95f4\u4e0d\u591f\u7528\uff0c\u53bb\u53f3\u533a\u95f4\u627e\u3002\n    else return findit(rt<<1,lb,mid,x,sz);//\u5de6\u533a\u95f4\u591f\u7528\uff0c\u53bb\u5de6\u533a\u95f4\u627e\u3002\n}\nsigned main(){\n    n=read();m=read();\n    build(1,1,n);\n    while (m--){\n        int opt=read(),l=read(),r=read();\n        if (opt==0){\n            dig(1,1,n,l,r,0);\n        }else if (opt==1){\n            int brain=dig(1,1,n,l,r,0);\n            int L=read(),R=read();\n            if (!brain) continue;\n            tot=0,Get(1,1,n,L,R);\n            int sum=0,maxrt;bool flag=0;\n            for (int i=1;i<=tot;i++){\n            \tint rt=dl[i];\n                sum+=seg[rt].len-seg[rt].x;\n                if (sum>=brain){//\u627e\u533a\u95f4\u3002\n                    sum=brain-sum+seg[rt].len-seg[rt].x;\n                    maxrt=dl[i];flag=1;break;\n                }\n            }\n            if (!flag) dig(1,1,n,L,R,1);\n            else{\n                int ansR=findit(maxrt,LB[maxrt],RB[maxrt],sum,0);\n                dig(1,1,n,L,ansR,1);\n            }\t\t\t\n        }else{\n            printf(\"%d\\n\",query(1,1,n,l,r).ans);\n        }\n    }\n    return 0;\n}\n```\n",
        "postTime": 1561626092,
        "uid": 20309,
        "name": "Fading",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4344 \u3010[SHOI2015]\u8111\u6d1e\u6cbb\u7597\u4eea\u3011"
    },
    {
        "content": "\u672c\u9898\u771f\u7684\u5f88\u4e0d\u9519\uff0c\u867d\u7136\u6211\u8db3\u8db3\u5199\u4e86\u4e00\u5929\n\n\u6211\u4e0d\u4f1a\u4ec0\u4e48\u73c2\u6735\u8389\u6811\uff0c\u4f46\u6211\u8ba4\u4e3a\u8fd9\u9898\u7528\u7ebf\u6bb5\u6811\u505a\u771f\u7684\u5f88\u5999\n\n\u6211\u7684\u590d\u6742\u5ea6\u662f$ O(Nlog^2N) $\u8fd8\u5927\u4e00\u70b9\uff0c\u505a\u6cd5\u548c\u522b\u7684\u7ebf\u6bb5\u6811\u4e0d\u5927\u4e00\u6837\uff0c\u7ef4\u62a4\u7684\u503c\u5f88\u591a\n\n\n\u64cd\u4f5c0\uff1a\u5f88\u5bb9\u6613\u60f3\u5230\u5168\u90e8\u8bbe\u4e3a0\uff08change\u51fd\u6570\uff09\n\n\u64cd\u4f5c2\uff1a\u67e5\u8be2\u533a\u95f4\u6700\u957f\u8fde\u7eed\u5b50\u6bb50\uff08query\u51fd\u6570\uff09\n\n#### \u63a5\u4e0b\u6765\u7684\u64cd\u4f5c1\u662f\u91cd\u5934\u620f\n\u9996\u5148\uff0c\u6211\u4eec\u80af\u5b9a\u8981\u77e5\u9053\u6709\u591a\u5c11\u6b63\u5e38\u7684\u8111\u7ec4\u7ec7\u53ef\u7528\uff0c\u56e0\u6b64\u9700\u8981\u5728\u5f85\u6316\u51fa\u7684\u533a\u95f4$ [l_0,r_0] $\u5185\u67e5\u8be2\u533a\u95f4\u548c\uff08qsum\u51fd\u6570\uff09\uff0c\u7136\u540e\u5168\u90e8\u8bbe\u4e3a0\n\n#### \u9ebb\u70e6\u7684\u662f\uff0c\u586b\u8111\u6d1e\u65f6\u8981\u4ece\u6700\u524d\u9762\u7684\u586b\u8d77\uff0c\u6211\u7684\u505a\u6cd5\u662f\u7ef4\u62a4\u533a\u95f4\u6700\u5de60\u7684\u4f4d\u7f6e\uff08\u4ee3\u7801\u4e2d\u7684lp\u6570\u7ec4\uff09\n\n\u7136\u540e\u67e5\u8be2\u51fa\u533a\u95f4$ [l_1,r_1] $\u7684\u6700\u5de60\u7684\u4f4d\u7f6e,\u8bb0\u4e3apos\uff0c\u63a5\u4e0b\u6765\u627e\u4ee5pos\u4e3a\u8d77\u59cb\u70b9\u7684\u6700\u957f\u5b50\u6bb50\n\n\u8003\u8651\u4e00\u4e2a\u5b50\u6bb5\uff0c\u5982\u679c\u5b50\u6bb5\u5185\u67091\uff0c\u90a3\u4e48\u66f4\u957f\u7684\u5b50\u6bb5\u4e5f\u4e0d\u53ef\u80fd\u6ee1\u8db3\uff0c\u56e0\u6b64\u53ef\u4ee5\u4e8c\u5206\u7ec8\u70b9\u7684\u4f4d\u7f6e\uff0c\u5f97\u5230\u4e00\u4e2a\u6700\u957f\u8fde\u7eed\u7684\u5b50\u6bb50\uff0c\uff08\u540c\u65f6\u8fd8\u8981\u6ee1\u8db3\u8fd9\u4e2a\u5b50\u6bb5\u80fd\u7528\u5f53\u524d\u5269\u4f59\u7684\u7ec4\u7ec7\u586b\u4e0a\uff09\n\n### \u5982\u4f55\u5224\u5b9a\u5f53\u524d\u4e8c\u5206\u7684\u5b50\u6bb5\u5185\u662f\u5426\u67091?\u67e5\u8be2\u533a\u95f4\u548c\u5c31\u53ef\u4ee5\u4e86\n\n\u91cd\u590d\u4ee5\u4e0a\u8fc7\u7a0b\u76f4\u81f3$ [l_1,r_1] $\u5185\u7684\u8111\u6d1e\u88ab\u586b\u5b8c\u6216\u7ec4\u7ec7\u4e0d\u591f\n\n\u4f1a\u4e0d\u4f1a\u592a\u6162?\n\n\u53ef\u80fd\u51fa\u73b00,1\u4ea4\u66ff\u7684\u60c5\u51b5,\u6240\u5e78\u8fd9\u79cd\u60c5\u51b5\u5e76\u4e0d\u5e38\u89c1(\u56e0\u4e3a\u4e8b\u5148\u9700\u8981\u5927\u91cf\u7684\u4fee\u6539),\u4e5f\u5f88\u5bb9\u6613\u89e3\u51b3(\u56e0\u4e3a\u64cd\u4f5c\u7ed3\u675f\u540e\u4f1a\u51fa\u73b0\u4e00\u57680)\n\n\u4e8e\u662f\u672c\u9898\u89e3\u51b3\n\n\u7ebf\u6bb5\u6811\u7ef4\u62a4:\u6700\u5927\u5b50\u6bb50:sub\n\n\u6700\u5927\u524d\u7f000:lmax\n\n\u6700\u5927\u540e\u7f000:rmax\n\n\u533a\u95f4\u548c: sum\n\n\u533a\u95f4\u6700\u5de60: lp(\u82e5\u533a\u95f4\u4e0d\u5b58\u57280\u5219\u8bb0\u4e3a-1)\n\n\u533a\u95f4\u4fee\u6539\u61d2\u6807\u8bb0: setc\n\n\u8fd8\u6709\u95ee\u9898\u5c31\u770b\u4ee3\u7801,\u5982\u679c\u6700\u5927\u5b50\u6bb5\u548c\u4e0d\u4f1a\u6c42\u7684\u8bdd,\u53ef\u4ee5\u4e0a\u7f51\u770b\u770b,\u8fd9\u4e2a\u5730\u65b9\u4e5f\u5f88\u5bb9\u6613\u9519\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN=200005;\nint sub[MAXN<<2],lmax[MAXN<<2],sum[MAXN<<2];\nint setc[MAXN<<2],rmax[MAXN<<2],lp[MAXN<<2];\nint n,m;\nvoid read(int& x)\n{\n    char c=getchar();\n    x=0;\n    while(c<'0'||c>'9')c=getchar();\n    while(c>='0'&&c<='9')\n    {\n        x=x*10+c-'0';\n        c=getchar();\n    }\n}\nvoid pushdown(int o,int l,int r)\n{\n    if(setc[o]>=0)\n    {\n    \tint mid=(l+r)>>1;\n        setc[o<<1]=setc[o<<1|1]=setc[o];\n //       cout<<\"pushdown: \"<<o<<\" \"<<l<<\" \"<<r<<\" \"<<lp[o]<<endl;\n        if(setc[o])\n        {\n            lmax[o<<1]=rmax[o<<1]=sub[o<<1]=0;\n            lmax[o<<1|1]=rmax[o<<1|1]=sub[o<<1|1]=0;\n            lp[o<<1]=lp[o<<1|1]=-1;\n            sum[o<<1]=mid-l+1;\n            sum[o<<1|1]=r-mid;\n        }\n        else\n        {\n            lmax[o<<1]=rmax[o<<1]=sub[o<<1]=mid-l+1;\n            lmax[o<<1|1]=rmax[o<<1|1]=sub[o<<1|1]=r-mid;\n            lp[o<<1]=l;\n            lp[o<<1|1]=mid+1;\n            sum[o<<1]=sum[o<<1|1]=0;\n        }\n        setc[o]=-1;\n    }\n}\nvoid update(int o,int l,int r)\n{\n    int mid=(l+r)>>1;\n    sub[o]=max(rmax[o<<1]+lmax[o<<1|1],max(sub[o<<1],sub[o<<1|1]));\n    if(sub[o<<1]==mid-l+1)lmax[o]=sub[o<<1]+lmax[o<<1|1];\n    else lmax[o]=lmax[o<<1];\n    if(sub[o<<1|1]==r-mid)rmax[o]=sub[o<<1|1]+rmax[o<<1];\n    else rmax[o]=rmax[o<<1|1];\n    if(lp[o<<1]==-1)lp[o]=lp[o<<1|1];\n    else lp[o]=lp[o<<1];\n //   cout<<\"update: \"<<o<<\" \"<<l<<\" \"<<r<<\" \"<<lp[o]<<endl;\n    sum[o]=sum[o<<1]+sum[o<<1|1];\n}\nvoid build(int o,int l,int r)\n{\n    if(l==r)\n    {\n    \tlp[o]=-1;\n    \tlmax[o]=rmax[o]=sub[o]=0;\n    \tsum[o]=1;\n        return ;\n    }\n    int mid=(l+r)>>1;\n    build(o<<1,l,mid);\n    build(o<<1|1,mid+1,r);\n    sum[o]=sum[o<<1]+sum[o<<1|1];\n    lp[o]=-1;\n}\nvoid change(int o,int l,int r,int ql,int qr,int k)\n{\n    if(ql<=l&&qr>=r)\n    {\n    \tsetc[o]=k;\n        if(k)\n        {\n            lmax[o]=rmax[o]=sub[o]=0;\n            sum[o]=r-l+1;\n            lp[o]=-1;\n        }\n        else\n        {\n            lmax[o]=rmax[o]=sub[o]=r-l+1;\n            sum[o]=0;\n            lp[o]=l;\n        }\n//        cout<<\"change: \"<<o<<\" \"<<l<<\" \"<<r<<\" \"<<lp[o]<<endl;\n        return ;\n    }\n    int mid=(l+r)>>1;\n    pushdown(o,l,r);\n    if(ql<=mid)change(o<<1,l,mid,ql,qr,k);\n    if(qr>mid)change(o<<1|1,mid+1,r,ql,qr,k);\n    update(o,l,r);\n}\nint qsum(int o,int l,int r,int ql,int qr)\n{\n    if(ql<=l&&qr>=r)\n    {\n        return sum[o];\n    }\n    int mid=(l+r)>>1,ans=0;\n    pushdown(o,l,r);\n    if(ql<=mid)ans+=qsum(o<<1,l,mid,ql,qr);\n    if(qr>mid)ans+=qsum(o<<1|1,mid+1,r,ql,qr);\n    return ans;\n}\nint query(int o,int l,int r,int ql,int qr)\n{\n    if(ql<=l&&qr>=r)\n    {\n        return sub[o];\n    }\n    int mid=(l+r)>>1,ansl=-1,ansr=-1,lans=-1,rans=-1;\n    pushdown(o,l,r);\n    if(ql<=mid)\n    {\n        ansl=query(o<<1,l,mid,ql,qr);\n        if(qr>mid)lans=min(rmax[o<<1],mid-ql+1);\n    }\n    if(qr>mid)\n    {\n        ansr=query(o<<1|1,mid+1,r,ql,qr);\n        if(ql<=mid)rans=min(lmax[o<<1|1],qr-mid);\n    }\n    return max(lans+rans,max(ansl,ansr));\n}\nint ask(int o,int l,int r,int ql,int qr)\n{\n    if(ql<=l&&qr>=r)\n    {\n        return lp[o];\n    }\n    int mid=(l+r)>>1,ans=-1;\n    pushdown(o,l,r);\n    if(ql<=mid)ans=ask(o<<1,l,mid,ql,qr);\n    if(ans==-1&&qr>mid)ans=ask(o<<1|1,mid+1,r,ql,qr);\n    return ans;\n}\nint main()\n{\n//\tfreopen(\"1.out\",\"w\",stdout);\n    read(n);\n    read(m);\n    memset(setc,-1,sizeof(setc));\n    build(1,1,n);\n    for(int i=1;i<=m;i++)\n    {\n    \tint op;\n    \tread(op);\n    \tif(!op)\n    \t{\n    \t\tint l,r;\n    \t\tread(l);\n    \t\tread(r);\n    \t\tchange(1,1,n,l,r,0);\n        }\n        else if(op==1)\n        {\n            int pl,pr,ql,qr;\n            read(pl);\n            read(pr);\n            read(ql);\n            read(qr);\n            int cnt=qsum(1,1,n,pl,pr);//\u6c42\u51fa\u53ef\u7528\u7684\u7ec4\u7ec7 \n            change(1,1,n,pl,pr,0);\n            int pos=ask(1,1,n,ql,qr);//\u6c42\u51fa\u8111\u6d1e\u7684\u8d77\u59cb\u533a\u95f4\n            while(pos!=-1&&cnt)\n            {\n                int l=pos,r=qr;//\u4e8c\u5206\u5bfb\u627e\u53f3\u8fb9\u754c \n                while(l<r)\n                {\n                    int mid=(l+r+1)>>1;\n                    if(!qsum(1,1,n,pos,mid))l=mid;\n                    else r=mid-1;\n                }\n                l=min(l,pos+cnt-1);//\u5982\u679c\u7ec4\u7ec7\u4e0d\u591f\uff0c\u53ef\u586b\u5145\u7684\u4f4d\u7f6e\u8fd8\u8981\u7f29\u5c0f\n                change(1,1,n,pos,l,1);\n                cnt-=(l-pos+1);\n                pos=ask(1,1,n,ql,qr);\n            }\n        }\n        else\n        {\n            int l,r;\n            read(l);\n            read(r);\n            printf(\"%d\\n\",query(1,1,n,l,r));\n        }\n    }\n}\n\n```\n",
        "postTime": 1551710568,
        "uid": 68207,
        "name": "CreeperLordVader",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4344 \u3010[SHOI2015]\u8111\u6d1e\u6cbb\u7597\u4eea\u3011"
    },
    {
        "content": "\u6ca1\u6709\u9898\u89e3\u4e48\u2026\u2026\u6211\u6765\u5199\u4e00\u7bc7\u597d\u4e86\n\n\u9898\u76ee\u8981\u6c42\u4ec0\u4e48\uff1f\n\n- \u533a\u95f4\u8d4b0\n- \u6700\u957f\u8fde\u7eed0\n- \u628a\u4e00\u4e2a\u533a\u95f4\u76841\u4f9d\u6b21\u586b\u5230\u53e6\u4e00\u4e2a\u533a\u95f4\n\n\u8fd9\u4f3c\u4e4e\u662f\u4e00\u9053\u7ebf\u6bb5\u6811\u88f8\u9898\u2026\u2026\n\n\u8d4b0\uff0c\u6700\u957f\u8fde\u7eed0\u90fd\u662f\u7ebf\u6bb5\u6811\u57fa\u672c\u64cd\u4f5c\n\nO(nlogn)\n\n\u7b2c\u4e09\u6761\u4e8c\u5206\u4e00\u4e0b\u90a3\u4e00\u6bb5\u521a\u597d\u88ab\u586b\u5c31\u597d\n\nO(nlog\u00b2n)\n\n\u80fd\u505a\u5230\u66f4\u4f18\u5417\uff1f\n\n\u89c2\u5bdf\uff1a\u533a\u95f4\u8d4b0\n\n\u4f7f\u7528\u73c2\u6735\u8389\u6811![\u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389](https://i.loli.net/2018/04/09/5aca3ca156185.jpg)\n\n\u73c2\u6735\u8389\u6811\uff0c\u4f18\u7f8e\u7684\u66b4\u529b\uff0c\u7528\u4e8e\u6709\u63a8\u5e73\u533a\u95f4\u64cd\u4f5c\uff0c\u968f\u673a\u7684\u9898\u76ee\n\n\u5c31\u662f\u628a\u76f8\u540c\u7684\u6570\u5b58\u4e00\u8d77\n\n\u53ea\u6709O(nlogn)\n\n\u8be5\u66b4\u529b\u66b4\u529b\u597d\u4e86\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstdlib>\n#include<cstring>\n#include<memory.h>\n#include<map>\n#include<set>\n#include<queue>\nusing namespace std;\nstruct node{\n\tint l,r,v;\n\tnode(){}\n\tnode(int L,int R=-1,int V=0):l(L),r(R),v(V){}\n\tinline bool operator<(const node&o)const\t{\n\t\treturn l<o.l;}\n};\nset<node>S;\ntypedef set<node>::iterator iter;\niter split(int pos){\n\tset<node>::iterator it=S.lower_bound(node(pos));\n\tif(it!=S.end()&&it->l==pos)return it;\n\t--it;\n\tif(pos>it->r)return S.end();\n\tint L=it->l,R=it->r,V=it->v;\n\tS.erase(it);\n\tS.insert(node(L,pos-1,V));\n\treturn S.insert(node(pos,R,V)).first;}\ninline void debug()\n{\n\tfor(iter it=S.begin();it!=S.end();it++)\n\t{\n\t\tfor(int i=it->l;i<=it->r;i++)\n\t\t{\n\t\t\tprintf(\"%d,%d \",i,it->v);\n\t\t}\n\t\tputchar('/');\n\t}\n\tputs(\"\");\n}\ninline void del(int l,int r)\n{\n\titer itr=split(r+1),itl=split(l);\n\tS.erase(itl,itr);\n\tS.insert(node(l,r,0));\n}\ninline void maxi(int l,int r)\n{\n\titer itr=split(r+1),itl=split(l);\n\tint maxi=0,now=0;\n\tfor(;itl!=itr;itl++)\n\tif(!itl->v)now+=itl->r-itl->l+1;else maxi=max(maxi,now),now=0;\n\tprintf(\"%d\\n\",max(maxi,now));\n}\ninline void cure(int l0,int r0,int l,int r)\n{\n\titer itr=split(r0+1),itl=split(l0),it=itl;\n\tint sum=0;\n\tfor(;itl!=itr;itl++)if(itl->v)sum+=itl->r-itl->l+1;\n\tS.erase(it,itr);\n\tS.insert(node(l0,r0,0));\n\tif(!sum)return;\n\titr=split(r+1);\n\tit=itl=split(l);\n\tint que=0;\n\tfor(;itl!=itr&&que<sum;itl++)if(!itl->v)que+=itl->r-itl->l+1;\n\tif(que<sum)S.erase(it,itr),S.insert(node(l,r,1));else\n\t{\n\t\titl--;\n\t\tint ri=itl->r+sum-que;\n\t\titr=split(ri+1);\n\t\tS.erase(it,itr);\n\t\tS.insert(node(l,ri,1));\n\t}\n}\nint n,m;\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tS.insert(node(1,n,1));\n\twhile(m--)\n\t{\n\t\tint op,l,r,l1,r1;\n\t\tscanf(\"%d%d%d\",&op,&l,&r);\n\t\tif(op==0)del(l,r);else\n\t\tif(op==2)maxi(l,r);else\n\t\t{\n\t\t\tscanf(\"%d%d\",&l1,&r1);\n\t\t\tcure(l,r,l1,r1);\n\t\t}\n\t\t//debug();\n\t}\n}\n```",
        "postTime": 1523193666,
        "uid": 10291,
        "name": "fighter_OI",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4344 \u3010[SHOI2015]\u8111\u6d1e\u6cbb\u7597\u4eea\u3011"
    },
    {
        "content": "\u524d\u6bb5\u65f6\u95f4\u5b66\u4e86\u73c2\u6735\u8389\u6811\uff0c\u73b0\u5728\u770b\u5230\u533a\u95f4\u63a8\u5e73\u5c31\u60f3\u73c2\u6735\u8389\u6811\u505a\u600e\u4e48\u529e\uff08\u5927\u96fe\n\n\u8fd9\u9898\u7684\u4e09\u4e2a\u64cd\u4f5c\u8fd8\u662f\u633a\u9002\u5408\u73c2\u6735\u8389\u6811\u7684\uff1a\u533a\u95f4\u63a8\u5e73\uff1b\u533a\u95f4\u6700\u957f\u8fde\u7eed$0$\u7684\u4e2a\u6570\uff1b\u533a\u95f4\u8f6c\u79fb\uff08\u8bdd\u8bf4\u533a\u95f4\u8f6c\u79fb\u662f\u4ec0\u4e48\u53eb\u6cd5\uff09\n\n\u524d\u4e24\u4e2a\u64cd\u4f5c\u90fd\u662f\u73c2\u6735\u8389\u6811\u6a21\u677f\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u8003\u8651\u7b2c\u4e09\u4e2a\u64cd\u4f5c\u3002\n\n\u8fd9\u4e2a\u64cd\u4f5c\u7684\u5b9e\u9645\u610f\u601d\u662f\uff1a\u628a\u4e00\u6bb5\u533a\u95f4\u5185$1$\u7684\u4e2a\u6570\u627e\u51fa\u6765\u5e76\u628a\u8fd9\u6bb5\u533a\u95f4\u63a8\u5e73\u4e3a$0$\uff0c\u518d\u628a\u8fd9\u4e9b$1$\u6309\u7167\u987a\u5e8f\u586b\u5165\u53e6\u4e00\u4e2a\u5e8f\u5217\u7684$0$\u4f4d\u7f6e\uff0c\u5982\u679c\u6700\u540e\u8fd8\u6709\u5269\u4f59\u5c31\u4e0d\u7ba1\u4e86\u3002\n\n\u6211\u4eec\u8003\u8651\u628a\u7b2c\u4e00\u4e2a\u533a\u95f4\u5185\u7684$1$\u7684\u4e2a\u6570\u7edf\u8ba1\u4e00\u4e0b\uff0c\u7136\u540e\u5728\u7b2c\u4e8c\u4e2a\u533a\u95f4\u4e2d\u66b4\u529b\u5145\u586b\u3002\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\u5f53\u524d\u5269\u4f59$1$\u7684\u4e2a\u6570\u548c\u8fd9\u6bb5$0$\u533a\u95f4\u7684\u957f\u5ea6\u3002\u5982\u679c\u524d\u8005\u5927\uff0c\u663e\u7136\u628a\u8fd9\u6bb5$0$\u533a\u95f4\u5168\u90e8\u6539\u6210$1$\u5373\u53ef\uff0c\u5426\u5219\u5c31\u8ba1\u7b97\u4e00\u4e0b\u80fd\u586b\u5230\u54ea\uff0c\u7136\u540e\u628a\u8fd9\u4e00\u90e8\u5206\u90fd\u586b\u5b8c\u76f4\u63a5\u8df3\u51fa\u5faa\u73af\u5373\u53ef\u3002\u5728\u6570\u636e\u968f\u673a\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e2a\u505a\u6cd5\u7684\u590d\u6742\u5ea6\u8fd8\u662f\u633a\u4f18\u826f\u7684\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n//\u58f0\u8d77\u7acb\u534e\u4e50\u72ec\u594f\uff0c\u66f2\u672b\u97f3\u65e0\u5fc3\u7ed3\u5f26\u3002\n//I think the players who have done all the bad things here are those who have rotted to the bone in the real world.\n//The journey of the future is so far away, but the light we can see is so rare. Even so, I still haven't given up hope completely.\n//No matter what kind of memory, it's the life we lived.\n//I can do anything as long as I have you.\n//People can only see what they want to see and hear what they want to hear, and I am no exception.\n//No matter what you see in the past, please don't lose yourself. No matter what you become, I am your companion.\n//Like the night sky, wrap the sad world gently.\n//Because we are born with nothing, we can have everything.\n//Even if you forget me, I will not forget you.\n//Even if it's only one in six billion, we'll still meet.\n//You will no longer be a prop, but a person as his name.\n//No matter what the final result is, as long as this is the path of your choice.\n#include <bits/stdc++.h>\nusing namespace std;\nint n,m;\nstruct ODT\n{\n\tint l,r; mutable int val;\n\tODT(int L,int R=-1,int V=0):l(L),r(R),val(V){}\n\tinline bool operator<(const ODT& a)const{return l<a.l; }\n}; set<ODT> Q;\ninline char nc()\n{\n    static char buf[100000],*p1=buf,*p2=buf;\n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++;\n}\nchar ch; int ss;\ninline int read()\n{\n\tss=0; ch=nc();\n\twhile(ch<'0'||ch>'9') ch=nc();\n\twhile(ch>='0'&&ch<='9') ss=(ss<<3)+(ss<<1)+(ch^48),ch=nc(); return ss;\n}\ninline set<ODT>::iterator Split(int pos)\n{\n\tset<ODT>::iterator s=Q.lower_bound(ODT(pos));\n\tif(s!=Q.end()&&s->l==pos) return s; s--;\n\tint L=s->l,R=s->r,V=s->val; Q.erase(s); Q.insert(ODT(L,pos-1,V));\n\treturn Q.insert(ODT(pos,R,V)).first;\n}\ninline void Assign(int l,int r,int k)\n{\n\tset<ODT>::iterator itr=Split(r+1),itl=Split(l);\n\tQ.erase(itl,itr); Q.insert(ODT(l,r,k));\n}\ninline void Solve(int l1,int r1,int l2,int r2)\n{\n\tset<ODT>::iterator itr=Split(r1+1),itl=Split(l1);\n\tint res=0;\n\tfor(register set<ODT>::iterator it=itl;it!=itr;it++) if(it->val) res+=it->r-it->l+1;\n\tQ.erase(itl,itr); Q.insert(ODT(l1,r1,0));\n\tif(!res) return;\n\titr=Split(r2+1),itl=Split(l2);\n\tfor(;itl!=itr;itl++)\n\t{\n\t\tif(itl->val) continue;\n\t\tif(res<=itl->r-itl->l+1)\n\t\t{\n\t\t\tAssign(itl->l,itl->l+res-1,1);\n\t\t\tbreak;\n\t\t}\n\t\telse\n\t\t{\n\t\t\titl->val=1;\n\t\t\tres-=itl->r-itl->l+1;\n\t\t}\n\t}\n}\ninline int AskMax(int l,int r)\n{\n\tset<ODT>::iterator itr=Split(r+1),itl=Split(l);\n\tint maxx,res; maxx=res=0;\n\tfor(;itl!=itr;itl++)\n\t{\n\t\tif(!itl->val) res+=itl->r-itl->l+1;\n\t\telse maxx=max(maxx,res),res=0;\n\t} maxx=max(maxx,res); return maxx;\n}\nint main()\n{\n\tn=read(), m=read(); Q.insert(ODT(1,n,1));\n\tfor(int i=1,opt,l,r,u,v;i<=m;i++)\n\t{\n\t\topt=read(), l=read(), r=read();\n\t\tif(opt==0) Assign(l,r,0);\n\t\tif(opt==1) u=read(), v=read(), Solve(l,r,u,v);\n\t\tif(opt==2) printf(\"%d\\n\",AskMax(l,r));\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1573818462,
        "uid": 98618,
        "name": "Provicy",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4344"
    },
    {
        "content": "\u4e00\u9053\u597d\u9898  \n\u5173\u952e\u5728\u4e8e\u5904\u74062\u8be2\u95ee\u533a\u95f4\u95f4\u5173\u7cfb\u8fd9\u79cd\u7ec6\u8282    \n\u56e0\u4e3a\u9700\u8981\u7ef4\u62a4\u6700\u5927\u8fde\u7eed\u4e2a\u6570\uff0c\u9009\u62e9\u5c06\u533a\u95f4\u53d6\u53cd\u4fbf\u4e8e\u64cd\u4f5c   \n\u8003\u8651\u6bcf\u4e00\u6b21\u4fee\u6539\u90fd\u662f\u5c06\u4e00\u4e2a\u533a\u95f4\u6574\u4f53\u586b\u5145\u5230\u53e6\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u548c    \n\u5148\u67e5\u8be2\u51fal0r0\u7684\u7ec4\u7ec7\u4e2a\u6570\uff0c\u7136\u540e\u6e05\u96f6\u533a\u95f4   \n\u8fd9\u4e00\u6b65\u8981\u5728\u8be2\u95ee\u586b\u5145\u4e2a\u6570\u4e4b\u524d\u8fdb\u884c\uff0c\u56e0\u4e3a\u4f1a\u4ea7\u751f\u5f71\u54cd   \n\u7136\u540e\u8be2\u95ee\u586b\u5145\u4e2a\u6570\uff0c\u5f00\u59cb\u66f4\u65b0  \n\u5f53\u5728\u8be2\u95ee\u533a\u95f4\u5185\u65f6\uff0c\u4ece\u53f3\u5f80\u5de6\u586b\u5145    \n\u540c\u65f6\u6ce8\u610f\u6807\u8bb0\u95f4\u4e0d\u80fd\u4e92\u5b58\u8fd9\u4e2a\u7ec6\u8282  \n```cpp\n#include<bits/stdc++.h>\n#define lc (p<<1)\n#define rc (p<<1|1)\nusing namespace std;\nstruct Node{\n    int l,r,lsum,rsum,ans,sum,lazy1,lazy2;\n    //lazy1\u5224\u662f\u5426\u7a7a\uff081\uff09 lazy2\u5224\u662f\u5426\u6ee1\uff080\uff09 \n}T[2000010];\nint n,m,a[500010];\nvoid pushup(int p){\n    T[p].sum=T[lc].sum+T[rc].sum;\n\tT[p].lsum=T[lc].lsum;\n    if(T[lc].lsum==T[lc].r-T[lc].l+1)T[p].lsum+=T[rc].lsum;\n    T[p].rsum=T[rc].rsum;\n    if(T[rc].rsum==T[rc].r-T[rc].l+1)T[p].rsum+=T[lc].rsum;\n\tT[p].ans=max(max(T[lc].ans,T[rc].ans),T[lc].rsum+T[rc].lsum);\n}\nvoid build(int p,int l,int r){\n    T[p].l=l;T[p].r=r;\n    if(l==r){\n        //T[p].lsum=T[p].rsum=T[p].sum=T[p].ans=0;\n        return;\n    }\n    int mid=(l+r)>>1;\n    build(lc,l,mid);\n    build(rc,mid+1,r);\n    pushup(p);\n}\ninline void pushnow1(int p){\n\tT[p].sum=T[p].ans=T[p].lsum=T[p].rsum=T[p].r-T[p].l+1;\n\tT[p].lazy1=1;T[p].lazy2=0; \n}\ninline void pushnow2(int p){\n\tT[p].sum=T[p].ans=T[p].lsum=T[p].rsum=0;\n\tT[p].lazy2=1;T[p].lazy1=0;\n}\ninline void pushdown(int p){\n\tif(T[p].lazy1){\n\t\tpushnow1(lc);\n\t\tpushnow1(rc);\n\t\tT[p].lazy1=0;\n\t}\n\tif(T[p].lazy2){\n\t\tpushnow2(lc);\n\t\tpushnow2(rc);\n\t\tT[p].lazy2=0;\n\t}\n}\nNode query(int p,int ql,int qr){\n\tif(ql<=T[p].l&&T[p].r<=qr) return T[p];\n\tpushdown(p);\n    int mid=(T[p].l+T[p].r)>>1;\n    if(ql<=mid&&qr>mid){\n    \tNode ans,l=query(lc,ql,qr),r=query(rc,ql,qr);\n    \tans.lsum=l.lsum;\n    \tif(l.lsum==T[lc].r-T[lc].l+1)ans.lsum+=r.lsum;\n        ans.rsum=r.rsum;\n        if(r.rsum==T[rc].r-T[rc].l+1)ans.rsum+=l.rsum;\n        ans.ans=max(max(l.ans,r.ans),l.rsum+r.lsum);\n        ans.sum=l.sum+r.sum;\n        //printf(\"%d %d %d %d %d\\n\",T[p].l,T[p].r,ans.ans,ans.lsum,ans.rsum);\n        return ans;\n\t}\n\tif(ql<=mid)return query(lc,ql,qr);\n\tif(qr>mid)return query(rc,ql,qr);\n}\nvoid clear(int p,int ql,int qr){\n\t//printf(\"%d %d %d\\n\",p,T[p].l,T[p].r);\n\tif(T[p].lazy1)return;\n\tpushdown(p);\n\tif(ql<=T[p].l&&T[p].r<=qr){\n\t\tpushnow1(p);\n\t\treturn;\n\t}\n\tint mid=(T[p].l+T[p].r)>>1;\n\tif(ql<=mid)clear(lc,ql,qr);\n\tif(qr>mid)clear(rc,ql,qr);\n\tpushup(p);\n}\nint v;\nvoid update(int p,int ql,int qr){\n\tif(v==0||T[p].lazy2)return;\n\tpushdown(p);\n\tif(ql<=T[p].l&&T[p].r<=qr){\n\t\tif(T[p].sum<=v){\n\t\t\tv-=T[p].sum;\n\t\t\tpushnow2(p);\n\t\t\treturn;\n\t\t}\n\t\tif(T[lc].sum<=v){//\u5de6\u533a\u95f4\u5168\u88ab\u8986\u76d6  \n\t\t\tv-=T[lc].sum;\n\t\t\tpushnow2(lc);\n\t\t\tif(T[rc].sum<=v){\n\t\t\t\tv-=T[rc].sum;\n\t\t\t\tpushnow2(rc);\n\t\t\t}\n\t\t\telse update(rc,ql,qr);\n\t\t}\n\t\telse update(lc,ql,qr);\n\t\tpushup(p);\n\t\treturn;\n\t}\n\tint mid=(T[p].l+T[p].r)>>1;\n\tif(ql<=mid)update(lc,ql,qr);\n\tif(qr>mid)update(rc,ql,qr);\n\tpushup(p);\n}\nvoid check(int p,int l,int r){\n\t//pushdown(p);\n\t//printf(\"%d %d %d %d %d %d\\n\",l,r,T[p].sum,T[p].ans,T[p].lsum,T[p].rsum);\n\tif(l==r){\n\t\tprintf(\"%d \",T[p].sum);\n\t\treturn;\n\t}\n\tpushdown(p);\n\tint mid=(l+r)>>1;\n\tcheck(lc,l,mid);\n\tcheck(rc,mid+1,r);\n}\nint main(){\n\t//freopen(\"std.in\",\"r\",stdin);\n\t//freopen(\"my.out\",\"w\",stdout);\n    scanf(\"%d\",&n);\n    build(1,1,n);\n    scanf(\"%d\",&m);\n    for(int i=1;i<=m;++i){\n    \tint k;\n        scanf(\"%d\",&k);\n        if(k==0){\n        \tint l,r;\n        \tscanf(\"%d%d\",&l,&r);\n        \tclear(1,l,r);\n\t\t}\n    \tif(k==1){\n    \t\tint l0,r0,l1,r1;\n    \t\tscanf(\"%d%d%d%d\",&l0,&r0,&l1,&r1);\n    \t\tint all=r0-l0+1-query(1,l0,r0).sum;\n    \t\tclear(1,l0,r0);\n    \t\tint need=query(1,l1,r1).sum;\n    \t\t//printf(\"%d %d\\n\",all,need); \n    \t\tv=min(all,need);\n    \t\tupdate(1,l1,r1);\n\t\t}\n\t\tif(k==2){\n\t\t\tint l,r;\n\t\t\tscanf(\"%d%d\",&l,&r);\n\t\t\tprintf(\"%d\\n\",query(1,l,r).ans);\n\t\t}\n\t\t//check(1,1,n);\n\t\t//printf(\"\\n\\n\\n\");\n    }\n    return 0;\n}\n```\n\u987a\u4fbf\u63d0\u4f9b\u4e00\u7ec4\u6570\u636e\u751f\u6210\u5668   \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n\tfreopen(\"std.in\",\"w\",stdout);\n\tsrand(time(0));\n\tint n=100000,m=100000;\n\tprintf(\"%d %d\\n\",n,m);\n\tfor(int i=1;i<=m;++i){\n\t\tint t=rand()%3;\n\t\tprintf(\"%d \",t);\n\t\tif(t==0){\n\t\t\tint l=rand()%50000+1,k=rand()%30000;\n\t\t\tprintf(\"%d %d\\n\",l,l+k);\n\t\t}\n\t\tif(t==1){\n\t\t\tint l1=rand()%50000+1,r1=rand()%50000+1;\n\t\t\twhile(l1>r1)\n\t\t\t\tl1=rand()%50000+1,r1=rand()%50000+1;\n\t\t\tint l2=rand()%50000+1+(n>>1),r2=rand()%50000+1+(n>>1);\n\t\t\twhile(l2>r2)\n\t\t\t\tl2=rand()%50000+1+(n>>1),r2=rand()%50000+1+(n>>1);\n\t\t\tif(rand()%3)swap(l2,r1);\n\t\t\tif(rand()%2){\n\t\t\t\tswap(l1,l2);swap(r1,r2);\n\t\t\t}\n\t\t\tprintf(\"%d %d %d %d\\n\",l1,r1,l2,r2);\n\t\t}\n\t\tif(t==2){\n\t\t\tint l=1+rand()%30000,r=n-rand()%30000;\n\t\t\tprintf(\"%d %d\\n\",l,r);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1571017626,
        "uid": 138543,
        "name": "\u6597\u795e_\u541b\u83ab\u7b11",
        "ccfLevel": 0,
        "title": "P4344 \u7ebf\u6bb5\u6811"
    },
    {
        "content": "## \u53c8\u4e00\u9053\u73c2\u6735\u8389\u6811\u8dd1\u5f97\u98de\u5feb\u7684\u9898\u76ee(\u4f3c\u4e4e\u6bd4\u6b63\u89e3\u5c11\u4e2a$log?$\n\n\u73c2\u6735\u8389\u6811\u5176\u5b9e\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53set,\u7ed3\u6784\u4f53\u4e2d\u7684\u53d8\u91cf\u5206\u522b\u8868\u793a\u5de6\u53f3\u7aef\u70b9\u548c\u6743\u503c(\u8fd9\u9898\u7684\u6743\u503c\u4e3a0\u62161),\u7cbe\u9ad3\u5c31\u662f\u5206\u88c2\u548c\u63a8\u5e73\u64cd\u4f5c,\u524d\u8005\u4f7f\u5404\u79cd\u64cd\u4f5c\u90fd\u5341\u5206~~\u66b4\u529b~~\u5bb9\u6613\u5b9e\u73b0,\u540e\u8005\u4f7f\u6211\u4eec\u5728**\u968f\u673a\u6570\u636e\u4e0b**\u590d\u6742\u5ea6\u6b63\u786e.\n\n\nSTL\u5c0f\u767d\u53ef\u4ee5\u770b\u770b[\u8fd9\u7bc7\u6587\u7ae0](https://www.luogu.org/blog/communist/stl-zheng-li-zhi-set),\u7136\u540e\u770b\u6211\u7684\u4ee3\u7801\u57fa\u672c\u5c31\u6ca1\u4ec0\u4e48\u95ee\u9898\u4e86.\n\n#### \u53e6\u5916,\u56e0\u4e3a\u849f\u84bb\u6211\u6ca1\u5b66\u8fc7\u6307\u9488,\u6240\u4ee5\u7a0b\u5e8f\u91cc\u4e5f\u6ca1\u600e\u4e48\u51fa\u73b0\u6307\u9488,\u53ea\u662f\u7528\u4e86($*$\u6307\u9488)\u7528\u6765\u8868\u793a\u53d8\u91cf,\u98ce\u683c\u8fd8\u662f\u504f\u6570\u7ec4\u7684\n\n\u4ee3\u7801\u91cc\u6709\u8be6\u7ec6\u6ce8\u91ca:\n\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\nusing namespace std;\n#define qwq Chtholly_Tree//\u73c2\u6735\u8389!\n#define itset set<qwq>::iterator//\u8fd9\u4e2a\u8fed\u4ee3\u5668\u5de8\u957f\ninline int max(int a,int b){return a>b?a:b;}\ninline int read(){\n    int a=0;\n    char c=getchar();\n    while(c>'9'||c<'0')c=getchar();\n    while('0'<=c&&c<='9'){\n        a=a*10+c-48;\n        c=getchar();\n    }\n    return a;\n}\nstruct qwq{\n    int l,r;\n    mutable bool v;//\u8981\u52a0\u8fd9\u4e2amutable,\u4e0d\u7136\u4f1aCE\n    qwq(int ls,int rs=-1,int vv=0):l(ls),r(rs),v(vv){}//\u7528\u4e8e\u65b0\u5efa\u4e00\u4e2a\u7ed3\u6784\u4f53\n    bool friend operator <(qwq a,qwq b){\n        return a.l<b.l;\n    }//\u6ce8\u610f,\u56e0\u4e3a\u662fset,\u6240\u4ee5\u6211\u4eec\u8981\u91cd\u8f7d\u8fd0\u7b97\u7b26\n    int len(){return r-l+1;}\n};\nset<qwq>s;\nint x,X,y,Y,n,m,op;\nitset split(int pos){\n    itset it=s.lower_bound(qwq(pos));\n    if(it!=s.end()&&(*it).l==pos)return it;//\u5982\u679cpos\u662f\u67d0\u4e2a\u533a\u95f4\u7684\u5de6\u7aef\u70b9,\u76f4\u63a5\u8fd4\u56de\n    --it;\n    if((*it).r<pos) return s.end();//pos\u4e0d\u5728\u8fd9\u4e2a\u533a\u95f4,\u76f4\u63a5\u8fd4\u56de\u5c3e\u8fed\u4ee3\u5668,\u56e0\u4e3a\u4e0d\u7528\u64cd\u4f5c\n    int ls=(*it).l,rs=(*it).r;\n    bool vv=(*it).v;\n    s.erase(it);//\u5220\u9664\u539f\u533a\u95f4\n    s.insert(qwq(ls,pos-1,vv));//\u4e00\u5206\u4e3a\u4e8c\u5730\u63d2\u5165\n    return s.insert(qwq(pos,rs,vv)).first;\n}\nvoid change(int l,int r,int vv){//\u63a8\u5e73\u64cd\u4f5c\n    itset itrs=split(r+1),itls=split(l);\n    s.erase(itls,itrs);\n    s.insert(qwq(l,r,vv));//\u5220\u6389,\u7136\u540e\u63d2\u5165\u65b0\u7684\n}\nvoid fix(int l,int r,int L,int R){\n    itset itrs=split(r+1),itls=split(l),temp=itls;\n    int sum=0;\n    for(;itls!=itrs;++itls){\n        if((*itls).v)sum+=qwq(*itls).len();\n    }//\u7edf\u8ba11\u7684\u4e2a\u6570\n    s.erase(temp,itrs);//\u6ce8\u610f\u8fd9\u91cc\u4e0d\u80fd\u7528itls,\u56e0\u4e3aitls\u5df2\u7ecf\u88ab\u6539\u53d8\u4e86\n    s.insert(qwq(l,r,0));//\u63a8\u5e73\n    itrs=split(R+1),itls=split(L);\n    for(;itls!=itrs&&sum;++itls)\n        if(!(*itls).v){\n            if(sum>=qwq(*itls).len()) sum-=qwq(*itls).len(),(*itls).v=1;\n            else change((*itls).l,(*itls).l+sum-1,1),sum=0;//\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\n        }\n}\nint ask(int l,int r){\n    itset itrs=split(r+1),itls=split(l);\n    int ans=0,now=0;\n    for(;itls!=itrs;++itls)\n        if((*itls).v) now=0;\n            else {now+=qwq(*itls).len();ans=max(ans,now);}\n    return ans;//\u76f8\u5f53\u66b4\u529b\u7684\u9010\u4e2a\u67e5\u8be2\n}\nint main(){\n    n=read();m=read();\n    s.insert(qwq(1,n,1));\n    for(int i=1;i<=m;++i){\n        op=read();\n        x=read();y=read();\n        if(op&1){\n            X=read();Y=read();\n            fix(x,y,X,Y);\n        }\n        else if(!op)change(x,y,0);\n        else printf(\"%d\\n\",ask(x,y));\n    }\n    return 0;\n}//\u7136\u540e\u5c31\u53c8\u6c34\u4e86\u4e00\u98982333\n```\n\u5982\u679c\u8fd8\u4e0d\u600e\u4e48\u770b\u5f97\u61c2\u73c2\u6735\u8389,\u53ef\u4ee5\u53c2\u8003\u8fd9\u7bc7[\u6587\u7ae0](https://www.mina.moe/archives/9695)",
        "postTime": 1556767055,
        "uid": 7480,
        "name": "skydogli",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4344 \u3010[SHOI2015]\u8111\u6d1e\u6cbb\u7597\u4eea\u3011"
    },
    {
        "content": "\u539f\u9898\u4f20\u9001\u95e8\uff1a[P4344\u3010SHOI2015\u3011\u8111\u6d1e\u6cbb\u7597\u4eea](https://www.luogu.org/problemnew/show/P4344)\n\n\u8fd9\u9053\u9898\u76ee\u5df2\u7ecf\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u7ef4\u62a4\u4e00\u4e2a01\u5e8f\u5217\uff0cbool\u53d8\u91cf\u5c31\u884c\u4e86\u3002\n\n\u9898\u76ee\u4e2d\u8981\u6c42\u6316\u8111\u6d1e\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u5176\u7406\u89e3\u4e3a\u5c06\u4e00\u6bb5\u533a\u95f4\u8d4b\u503c\u4e3a0\uff0c\u8865\u8111\u6d1e\u53ef\u4ee5\u7406\u89e3\u4e3a\u5c06\u4e00\u6bb5\u533a\u95f4\u8d4b\u503c\u4e3a1\u3002\n\n01\u5e8f\u5217\uff0c\u533a\u95f4\u8d4b\u503c\u60f3\u5230\u4e86\u4ec0\u4e48\uff1f\u5bf9\uff0c\u73c2\u6735\u8389\u6811\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u767e\u5ea6\uff0c\u5728\u968f\u673a\u60c5\u51b5\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO\uff08mlogn\uff09\uff0cm\u4e3a\u64cd\u4f5c\u6b21\u6570\uff0cn\u4e3a\u5e8f\u5217\u957f\u5ea6\u3002\u5927\u5bb6\u53ef\u4ee5\u719f\u7ec3\u4e00\u4e0b\u5bf9set\u7684\u64cd\u4f5c\uff0c\u73c2\u6735\u8389\u6811\u662f\u9760\u533a\u95f4\u8d4b\u503c\u6765\u964d\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6\u7684\uff0c\u6bcf\u4e2a\u503c\u7684l\uff0cr\u7ef4\u62a4\u8fde\u7eed\u4e00\u6bb5\u503c\u76f8\u540c\u7684\u5de6\u53f3\u8fb9\u754c\uff0c\u67e5\u8be2\u65f6\u4e5f\u4f1a\u7b80\u4fbf\uff0c\u53ef\u4ee5\u81ea\u5df1\u601d\u8003\u601d\u8003\u3002\n\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\n#define IT set<node>::iterator\n#define LL long long\nusing namespace std;\nstruct node{\n    int l,r;\n    mutable bool v;\n    node(int L,int R=-1,bool V=0):l(L),r(R),v(V) {}\n    bool operator<(const node& o) const\n    {\n        return l<o.l;\n    }\n};\nset<node> s;\nIT split(int pos){ \n    IT it=s.lower_bound(node(pos));\n    if(it!=s.end()&&it->l==pos) return it;\n    --it;\n    int L=it->l,R=it->r;\n    bool V=it->v;\n    s.erase(it);\n    s.insert(node(L,pos-1,V));\n    return s.insert(node(pos,R,V)).first;\n}\nvoid assign_val(int l,int r,bool val){ \n    IT itr=split(r+1),itl=split(l);\n    s.erase(itl,itr);\n    s.insert(node(l,r,val));\n}\nint count(int l,int r)\n{\n    IT itr = split(r+1),itl = split(l);\n    int maxn=0;\n    for(; itl != itr; ++itl){\n    \tif(itl->v)maxn=maxn+itl->r-itl->l+1;\n    }\n    return maxn;\n}\nvoid xiubu(int l,int r,int res){\n    IT itr=split(r+1),itl=split(l);\n    for(;itl!=itr;++itl){\n        if(!res)break;\n        if(!itl->v){\n            int ok=0;\n            if(itl->r-itl->l+1>res){\n            \tok=res+itl->l-1;\n                res=0;\n                assign_val(itl->l,ok,1);\n            }\n            else{\n            \tres=res-(itl->r-itl->l+1);\n            \titl->v=1;\n            }\n        }\n    }\n}\nint cha(int l,int r){\n    IT itr = split(r+1),itl = split(l);\n    int maxn=0,nowq=0;\n    for(; itl != itr; ++itl){\n    \tif(!itl->v)\n            nowq+=itl->r-itl->l+1;\n        else if(nowq)\n            maxn=max(maxn,nowq),nowq=0;\n    }\n    return max(maxn,nowq);\n}\nint main(){\n    int n,m;\n    scanf(\"%d%d\",&n,&m);\n    s.insert(node(1,n,1));\n    s.insert(node(n+1,n+1,0));\n    while(m--){\n        int op,a,b,x,y;\n        scanf(\"%d%d%d\",&op,&a,&b);\n        if(op==0)assign_val(a,b,0);\n        else if(op==1){\n        \tscanf(\"%d%d\",&x,&y);\n        \tint num=count(a,b);\n        \tassign_val(a,b,0);\n        \txiubu(x,y,num);\n        }\n        else if(op==2){\n        \tprintf(\"%d\\n\",cha(a,b));\n        }\n    }\n    return 0;\n}\n```\n",
        "postTime": 1556711626,
        "uid": 85514,
        "name": "\u4e07\u4e07\u6ca1\u60f3\u5230",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P4344[SHOI2015]\u8111\u6d1e\u6cbb\u7597\u4eea"
    },
    {
        "content": "## [\u66f4\u597d\u7684\u9605\u8bfb](https://www.cnblogs.com/yzhang-rp-inf/p/9774948.html)\n\n#### \u539f\u9898\u4f20\u9001\u95e8\uff1a[P4344 [SHOI2015]\u8111\u6d1e\u6cbb\u7597\u4eea](https://www.luogu.org/problemnew/show/P4344)\n\n## \u524d\u7f6e\u829d\u58eb\uff1a\u73c2\u6735\u8389\u6811\n\n### [\u7a9d\u535a\u5ba2\u91cc\u5bf9\u73c2\u6735\u8389\u6811\u7684\u4ecb\u7ecd](https://www.cnblogs.com/yzhang-rp-inf/p/9443659.html )\n\n### \u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u81ea\u5df1\u770b\u770b\u5427\n\n#### \u73c2\u6735\u8389\u6811\u597d\u9898\u554a\n\n#### \u6d1b\u5495\u4e0a\u53e6\u4e00\u7bc7\u9898\u89e3\u51fa\u9505\u4e86\uff0c\u6240\u4ee5\u7a9d\u518d\u5199\u4e00\u7bc7\u9898\u89e3~~\uff08\u6570\u636e\u597d\u50cf\u53d8\u8fc7\uff1f\uff1f\uff1f\uff09~~\n\n#### \u6211\u4e00\u5f00\u59cb\u4e00\u76f4Re65\n\n#### \u540e\u6765\u91cd\u6784\u4ee3\u7801\u5c31ac\u4e86\uff0c\u6216\u8bb8\u662frp\u95ee\u9898\n\n#### \u7ebf\u6bb5\u6811\u505a\u6cd5\u597d\u50cf\u5f88\u6162\u554a\n\n#### \u6211\u7684\u73c2\u6735\u8389\u6811\u5438\u6c27\u540e\u76ee\u6d4bluogu\u6700\u4f18\u89e3\u7b2c\u4e8c\uff0c\u4e0d\u77e5\u6700\u4f18\u89e3\u533f\u540d\u5927\u4f6c\u600e\u4e48\u5199\u7684\n\n#### \u64cd\u4f5c1\uff1a\u628a\u533a\u95f4\u63a8\u5e73\u62100\uff0c\u5f00\u8111\u6d1e\uff1f\uff1f\uff1f\u73c2\u6735\u8389\u6811\u57fa\u672c\u64cd\u4f5c\n\n#### \u64cd\u4f5c2\uff1a\u628a\u533a\u95f4\u4e2d\u76841\u7684\u6570\u91cf\u7edf\u8ba1\u4e00\u4e0b\u5e76\u53d8\u62100\uff0c\u66b4\u529b\u53bb\u88ab\u4fee\u8865\u8111\u6d1e\u7684\u533a\u95f4\u586b\u8865\uff08\u7ec6\u8282\u770b\u4ee3\u7801\u6765\u7406\u89e3\uff09\n\n#### \u64cd\u4f5c3\uff1a\u67e5\u8be2\u533a\u95f4\u4e2d\u6700\u957f\u8fde\u7eed\u76841\uff0c\u66b4\u529b\u626b\u4e00\u904d\u5c31\u884c\n\n```cpp\n#pragma GCC optimize(\"O3\")\n#include<bits/stdc++.h>\n#define IT set<node>::iterator\nusing namespace std; \nstruct IO_Tp\n{\n    static const int _I_Buffer_Size = 1 << 24;\n    char _I_Buffer[_I_Buffer_Size];\n    char* _I_pos;\n    static const int _O_Buffer_Size = 1 << 24;\n    char _O_Buffer[_O_Buffer_Size];\n    char* _O_pos;\n    IO_Tp() : _I_pos(_I_Buffer), _O_pos(_O_Buffer)\n    {\n        fread(_I_Buffer, 1, _I_Buffer_Size, stdin);\n    }\n    ~IO_Tp()\n    {\n        fwrite(_O_Buffer, 1, _O_pos - _O_Buffer, stdout);\n    }\n    inline bool is_digit(const char ch)\n    {\n        return '0' <= ch && ch <= '9';\n    }\n    inline IO_Tp& operator>>(int& res)\n    {\n        res = 0;\n        while (!is_digit(*_I_pos))\n            ++_I_pos;\n        do\n            (res *= 10) += (*_I_pos++) & 15;\n        while (is_digit(*_I_pos));\n        return *this;\n    }\n    inline IO_Tp& operator<<(int n)\n    {\n        static char _buf[10];\n        char* _pos(_buf);\n        do\n            *_pos++ = '0' + n % 10;\n        while (n /= 10);\n        while (_pos != _buf)\n            *_O_pos++ = *--_pos;\n        return *this;\n    }\n    inline IO_Tp& operator<<(char ch)\n    {\n        *_O_pos++ = ch;\n        return *this;\n    }\n} IO;\ninline int Max(register int a,register int b)\n{\n    return a>b?a:b;\n}\nstruct node\n{\n    int l,r;\n    mutable bool v;\n    node(int L, int R=-1, bool V=0):l(L), r(R), v(V) {}\n    bool operator<(const node& o) const\n    {\n        return l < o.l;\n    }\n};\nset<node> s;\nIT split(int pos)\n{\n    IT it = s.lower_bound(node(pos));\n    if (it != s.end() && it->l == pos) \n        return it;\n    --it;\n    int L = it->l, R = it->r;\n    bool V = it->v;\n    s.erase(it);\n    s.insert(node(L, pos-1, V));\n    return s.insert(node(pos, R, V)).first;\n}\nvoid assign_val(int l,int r,bool v)\n{\n    IT itr = split(r+1),itl = split(l);\n    s.erase(itl, itr);\n    s.insert(node(l, r, v));\n}\nvoid scure(int l,int r,int a,int b)\n{\n    IT itr = split(r+1),itl = split(l),it = itl;\n    int sum=0;\n    for(; itl != itr; ++itl)\n        if(itl->v)\n            sum+=itl->r-itl->l+1;\n    s.erase(it,itr);\n    s.insert(node(l,r,0));\n    if(!sum)\n        return;\n    itr = split(b+1),itl = split(a),it = itl;\n    if(sum>=b-a+1)\n    {\n    \ts.erase(itl,itr);\n    \ts.insert(node(a,b,1));\n    \treturn;\n    }\n    for( ; itl != itr; ++itl)\n        if(!itl->v)\n        {\n            sum-=itl->r-itl->l+1;\n            if(sum<0)\n            {\n                assign_val(itl->l,itl->r+sum,1);\n                break;\n            }\n            else\n                itl->v=1;\n        }\n}\nvoid sMax(int l,int r)\n{\n    IT itr = split(r+1),itl = split(l);\n    int maxn=0,now=0;\n    for(; itl != itr; ++itl)\n        if(!itl->v)\n            now+=itl->r-itl->l+1;\n        else if(now)\n            maxn=Max(maxn,now),now=0;\n    IO<<Max(maxn,now)<<'\\n';\n}\nint main()\n{\n    int n,m;\n    IO>>n>>m;\n    s.insert(node(1,n,1));\n    while(m--)\n    {\n        int op,l,r;\n        IO>>op>>l>>r;\n        if(op==0)\n            assign_val(l,r,0);\n        else if(op==1)\n        {\n            int a,b;\n            IO>>a>>b;\n            scure(l,r,a,b);\n        }\n        else\n            sMax(l,r);\n    }\n    return 0;\n}\n```",
        "postTime": 1539262085,
        "uid": 37881,
        "name": "yzhang",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4344 \u3010[SHOI2015]\u8111\u6d1e\u6cbb\u7597\u4eea\u3011"
    },
    {
        "content": "## \u5f88\u591a\u9898\u89e3\u90fd\u63d0\u5230\u4e86GSS\u7cfb\u5217\u7684\u6700\u5927\u8fde\u7eed\u5b50\u6bb5\u548c\u95ee\u9898\uff0c\u90a3\u6211\u5c31\u4e0d\u8bf4\u4e86\uff0c\u6211\u53ea\u8bf4\u8fd9\u9053\u9898\u4e2d\u6211\u7528\u5230\u7684\u4e00\u4e9b\u5947\u5999\u7684\u89e3\u6cd5\n\n### 1.\u53cd\u7740\u5b9a\u4e49\n\n\u8fd9\u9053\u9898\u8981\u6c42\u7684\u662f\u6700\u5927\u8fde\u7eed0\u7684\u957f\u5ea6\uff0c\u90a3\u4e48\u7528\u6700\u5927\u5b50\u6bb5\u548c\u7684\u8bdd\u5982\u679c\u4f60\u63091\u8d70\u7edf\u8ba1\u7684\u5c31\u4e0d\u662f0\uff0c\u800c\u662f1\uff0c\u6211\u4eec\u53ef\u4ee5\u5c061\u5b9a\u4e49\u4e3a-inf\uff0c0\u5b9a\u4e49\u4e3a1\uff0c\u518d\u8dd1\u6700\u5927\u5b50\u6bb5\u548c\u5373\u53ef\n\n### 2.\u5206\u5f00\u5b58\n\ngss\u4e2d\u8981\u5b58\u4e00\u4e2a\u533a\u95f4\u548csum\uff0c\u4f46\u7531\u4e8e\u4e0a\u9762\u7684\u5b9a\u4e49\u5f62\u5f0f\uff0c\u8fd9\u73a9\u610f\u513f\u663e\u7136\u4e0d\u80fd\u8868\u793a0\uff08\u62161\uff09\u7684\u6570\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2amix\uff0c\u4e13\u95e8\u5b580\u62161\u7684\u6570\u91cf\n\n## \u5927\u4f53\u601d\u8def\uff1a\n\n### 0.\u9996\u5148\uff0c\u7ed91\u8282\u70b9\u6253\u4e0a-inf\u7684lazy\u6807\u8bb0\uff0c\u8868\u793a\u6ca1\u6709\u8111\u6d1e\n\n### 1.\u5bf9\u4e8e0\u64cd\u4f5c\uff0c\u533a\u95f4\u8986\u76d6\uff0c\u6253lazy\u6807\u8bb0\u540e\u76f4\u63a5\u4fee\u6539\u5373\u53ef\n\n### 2.\u5bf9\u4e8e2\u64cd\u4f5c\uff0cGSS\u6807\u51c6\u67e5\u8be2\u5373\u53ef\n\n### 3.\u5bf9\u4e8e1\u64cd\u4f5c\uff0c\u5148\u6c42\u51fal1,r1\u7684\u8111\u7ec4\u7ec7\u6570\uff0c\u518d\u5168\u6316\u6210\u8111\u6d1e\uff0c\u4e4b\u540e\u586b\u8fdbl2,r2\u53bb\u5373\u53ef(\u51fd\u6570\u5199\u6210int\u5f0f\uff0c\u4f18\u5148\u586b\u5de6\u533a\u95f4\uff0c\u586b\u5b8c\u540e\u8fd4\u56de\u5269\u4f59\u8111\u6d1e\u6570)\n\n### \u4ee3\u7801\uff1a\n```cpp\n// luogu-judger-enable-o2\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define rii register int i\n#define rij register int j\n#define rs 262144\n#define int long long\nusing namespace std;\nstruct tree{\n    long long lmax,rmax,sum,lazy,maxn,mix;\n}x[1000005];\nint n,m,p;\nvoid pushdown(int nl,int nr,long long val,int bh)\n{\n    int mid=(nl+nr)/2;\n    long long cd=mid-nl+1;\n    x[bh*2].lazy=val;\n    x[bh*2].lmax=val*cd;\n    x[bh*2].rmax=val*cd;\n    x[bh*2].sum=val*cd;\n    x[bh*2].maxn=val*cd;\n    x[bh*2].mix=(val%2)*cd;\n    x[bh*2+1].mix=(val%2)*cd;\n    x[bh*2+1].lazy=val;\n    x[bh*2+1].lmax=val*cd;\n    x[bh*2+1].rmax=val*cd;\n    x[bh*2+1].sum=val*cd;\n    x[bh*2+1].maxn=val*cd;\n    x[bh].lazy=0;\n}\nvoid fg(int l,int r,int nl,int nr,int bh)\n{\n    if(l<nl)\n    {\n        l=nl;\n    }\n    if(r>nr)\n    {\n        r=nr;\n    }\n    if(x[bh].lazy==1)\n    {\n        return;\n    }\n    if(x[bh].lazy==-100000)\n    {\n        pushdown(nl,nr,x[bh].lazy,bh);\n    }\n    if(l==nl&&r==nr)\n    {\n        x[bh].lazy=1;\n        x[bh].sum=(r-l+1);\n        x[bh].lmax=(r-l+1);\n        x[bh].rmax=(r-l+1);\n        x[bh].maxn=(r-l+1);\n        x[bh].mix=(r-l+1);\n        return;\n    }\n    int mid=(nl+nr)/2;\n    if(l<=mid)\n    {\n        fg(l,r,nl,mid,bh*2);\n    }\n    if(r>=mid+1)\n    {\n        fg(l,r,mid+1,nr,bh*2+1);\n    }\n    x[bh].mix=x[bh*2].mix+x[bh*2+1].mix;\n    x[bh].sum=x[bh*2].sum+x[bh*2+1].sum;\n    x[bh].lmax=max(x[bh*2].lmax,x[bh*2].sum+x[bh*2+1].lmax);\n    x[bh].rmax=max(x[bh*2+1].rmax,x[bh*2+1].sum+x[bh*2].rmax);\n    x[bh].maxn=max(x[bh*2].maxn,max(x[bh*2+1].maxn,x[bh*2].rmax+x[bh*2+1].lmax));\n}\nint sum(int l,int r,int nl,int nr,int bh)\n{\n    if(l<nl)\n    {\n        l=nl;\n    }\n    if(r>nr)\n    {\n        r=nr;\n    }\n    if(l==nl&&r==nr)\n    {\n        return x[bh].mix;\n    }\n    if(x[bh].lazy!=0&&nl!=nr)\n    {\n        pushdown(nl,nr,x[bh].lazy,bh);\n    }\n    int mid=(nl+nr)/2;\n    int ans=0;\n    if(l<=mid)\n    {\n        ans+=sum(l,r,nl,mid,bh*2);\n    }\n    if(r>=mid+1)\n    {\n        ans+=sum(l,r,mid+1,nr,bh*2+1);\n    }\n    return ans; \n}\nint add(int l,int r,int nl,int nr,int sl,int bh)\n{\n    if(l<nl)\n    {\n        l=nl;\n    }\n    if(r>nr)\n    {\n        r=nr;\n    }\n    if(x[bh].lazy!=0)\n    {\n        pushdown(nl,nr,x[bh].lazy,bh);\n    }\n    if(l==nl&&r==nr&&sl>=(r-l+1))\n    {\n        sl-=x[bh].mix;\n        x[bh].mix=0;\n        x[bh].lmax=(-100000)*(r-l+1);\n        x[bh].rmax=(-100000)*(r-l+1);\n        x[bh].maxn=(-100000)*(r-l+1);\n        x[bh].sum=(-100000)*(r-l+1);\n        x[bh].lazy=-100000;\n        return sl;\n    }\n    int mid=(nl+nr)/2;\n    if(l<=mid&&sl!=0)\n    {\n        sl=add(l,r,nl,mid,sl,bh*2);\n    }\n    if(r>=mid+1&&sl!=0)\n    {\n        sl=add(l,r,mid+1,nr,sl,bh*2+1);\n    }\n    x[bh].mix=x[bh*2].mix+x[bh*2+1].mix;\n    x[bh].sum=x[bh*2].sum+x[bh*2+1].sum;\n    x[bh].lmax=max(x[bh*2].lmax,x[bh*2].sum+x[bh*2+1].lmax);\n    x[bh].rmax=max(x[bh*2+1].rmax,x[bh*2+1].sum+x[bh*2].rmax);\n    x[bh].maxn=max(x[bh*2].maxn,max(x[bh*2+1].maxn,x[bh*2].rmax+x[bh*2+1].lmax));\n    return sl;\n}\ntree query(int l,int r,int nl,int nr,int bh)\n{\n    tree an,bn;\n    if(l<nl)\n    {\n        l=nl;\n    }\n    if(r>nr)\n    {\n        r=nr;\n    }\n    if(x[bh].lazy!=0)\n    {\n    \tpushdown(nl,nr,x[bh].lazy,bh);\n    }\n    if(nl==l&&nr==r)\n    {\n        an=x[bh];\n        return an;\n    }\n    int ltt=(nl+nr)/2;\n    if(l<=ltt&&r<=ltt)\n    {\n        return an=query(l,r,nl,ltt,bh*2);\n    }\n    if(r>ltt&&l>ltt)\n    {\n        return bn=query(l,r,ltt+1,nr,bh*2+1);\n    }\n    else\n    {\n        an=query(l,r,nl,ltt,bh*2);\n        bn=query(l,r,ltt+1,nr,bh*2+1);\n        an.maxn=max(an.maxn,max(bn.maxn,an.rmax+bn.lmax));\n        an.lmax=max(an.lmax,an.sum+bn.lmax);\n        an.rmax=max(bn.rmax,bn.sum+an.rmax);\n        an.sum=an.sum+bn.sum;\n        return an;\n    }\n}\nsigned main()\n{\n//\tfreopen(\"1.in\",\"r\",stdin);\n//\tfreopen(\"1.out\",\"w\",stdout);\n    scanf(\"%lld%lld\",&n,&m);\n    x[1].lazy=-100000;\n    for(rii=1;i<=m;i++)\n    {\n        int l,r;\n        scanf(\"%lld\",&p);\n        if(p==0)\n        {\n            scanf(\"%lld%lld\",&l,&r);\n            fg(l,r,1,rs,1);\n        }\n        if(p==2)\n        {\n            scanf(\"%lld%lld\",&l,&r);\n            tree ans=query(l,r,1,rs,1);\n            if(ans.maxn<0)\n            {\n                ans.maxn=0;\n            }\n            printf(\"%lld\\n\",ans.maxn);\n        }\n        if(p==1)\n        {\n            int l1,l2,r1,r2;\n            scanf(\"%lld%lld%lld%lld\",&l2,&r2,&l1,&r1);\n            int ltt=sum(l2,r2,1,rs,1);\n            ltt=(r2-l2+1)-ltt;\n            fg(l2,r2,1,rs,1);\n            if(ltt>(r2-l2+1))\n            {\n                ltt=r2-l2+1;\n            }\n            add(l1,r1,1,rs,ltt,1);\n        }\n    }\n}\n```",
        "postTime": 1538231881,
        "uid": 52176,
        "name": "ztz11",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4344 \u3010[SHOI2015]\u8111\u6d1e\u6cbb\u7597\u4eea\u3011"
    }
]