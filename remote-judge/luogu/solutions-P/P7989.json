[
    {
        "content": "### \u89e3\u9898\u601d\u8def\uff1a\n\n\u601d\u8def\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u8fdb\u884c\u4e00\u4e9b\u4e0d\u53ef\u80fd\u7684\u60c5\u51b5\u7684\u5224\u65ad\uff0c\u4f46\u662f\u60f3\u4e0d\u5168\u3002\n\n1. \u94fe\u5b50\u65ad\u6389\u4e86\u3002\u8bb0\u5f55\u4e0b\u67d0\u6839\u94fe\u5b50\u6700\u65e9\u51fa\u73b0\u7684\u4f4d\u7f6e\u548c\u6700\u540e\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u94fe\u5b50\u6ca1\u6709\u65ad\u6389\uff0c\u5728\u8fd9\u4e9b\u4f4d\u7f6e\u4e4b\u95f4\u4e00\u5b9a\u5168\u90fd\u4f1a\u51fa\u73b0\u8fd9\u79cd\u989c\u8272\u7684\u94fe\u5b50\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u662f\u65ad\u6389\u4e86\u3002\n\n2. \u4e00\u6761\u94fe\u5b50\u4ece\u53e6\u4e00\u6761\u5916\u9762\u8dd1\u5230\u4e86\u91cc\u9762\u6216\u8005\u8dd1\u5230\u4e86\u53e6\u4e00\u7aef\u3002\u8fd9\u4e2a\u7684\u5224\u65ad\u53ef\u4ee5\u901a\u8fc7\u8bb0\u5f55\u4e00\u4e2a\u94fe\u5b50\u548c\u53e6\u4e00\u4e2a\u94fe\u5b50\u7684\u76f8\u5bf9\u4f4d\u7f6e\u5173\u7cfb\u6765\u89e3\u51b3\u3002\u5728\u7a0b\u5e8f\u4e2d\uff0c\u6211\u5b8c\u6210\u4e86\u4e24\u4e2a\u51fd\u6570\uff0c\u4e00\u4e2a\u51fd\u6570\uff08$\\text{UP}$\uff09\u7528\u6765\u5224\u65ad\u94fe\u5b50 $x$ \u662f\u5426\u5728\u67d0\u4e00\u4e2a\u65f6\u523b\u51fa\u73b0\u5728\u4e86\u94fe\u5b50 $y$ \u7684\u4e0a\u65b9\uff0c\u53e6\u4e00\u4e2a\u51fd\u6570 $\\text{IN}$ \u5224\u65ad\u4e86\u662f\u5426\u5b58\u5728\u67d0\u4e00\u4e2a\u65f6\u523b\u4f7f\u5f97\u94fe\u5b50 $x$ \u5305\u542b\u4e8e $y$ \u5185\u3002\u8fd9\u4e24\u4e2a\u51fd\u6570\u53ea\u8981\u51fa\u73b0\u5bf9\u4e8e\u7684\u60c5\u51b5\u5c31\u7acb\u5373\u8fd4\u56de\uff0c\u5206\u522b\u8c03\u7528\u8fd9\u4e24\u4e2a\u51fd\u6570\u4e24\u6b21\uff0c\u53d6\u76f8\u5bf9\u5173\u7cfb\u3002\u5728\u6700\u540e\uff0c\u53ea\u9700\u8981\u77e5\u9053\u8fd9\u4e9b\u51fd\u6570\u4e2d\u662f\u5426\u53ea\u6709\u4e00\u4e2a\u662f\u771f\u5c31\u884c\u4e86\uff0c\u5426\u5219\u5c31\u4e00\u5b9a\u51fa\u73b0\u4e86\u4ece\u94fe\u5b50\u76f8\u4ea4\u7684\u60c5\u51b5\u3002\n\n3. \u51fa\u73b0\u4e86\u4e00\u4e2a\u94fe\u5b50\u4e00\u6bb5\u5728\u53e6\u4e00\u4e2a\u94fe\u5b50\u4e2d\u95f4\uff0c\u53e6\u4e00\u6bb5\u5728\u5916\u9762\u3002\u8fd9\u79cd\u60c5\u51b5\u6bd4\u8f83\u7b80\u5355\uff0c\u800c\u4e14\u4e00\u65e6\u51fa\u73b0\uff0c\u4e00\u5b9a\u662f\u4e0d\u7b26\u5408\u9898\u76ee\u7684\uff0c\u76f4\u63a5\u5224\u65ad\u5c31\u597d\u3002\n\n4. \u5305\u542b\u5728\u5916\u9762\u7684\u94fe\u5b50\u53ea\u51fa\u73b0\u4e86\u4e00\u5c0f\u6bb5\u3002\u8fd9\u79cd\u60c5\u51b5\u662f\u6700\u96be\u60f3\u5230\u7684\u3002\u5f53\u80fd\u7167\u5230\u7684\u5730\u65b9\u94fe\u5b50 $a$ \u5168\u90fd\u5728 $b$ \u7684\u5916\u9762\uff0c\u4f46\u662f $b$ \u8981\u6bd4 $a$ \u66f4\u957f\uff0c\u4e5f\u5c31\u662f\u51fa\u73b0\u5f97\u66f4\u65e9\u6216\u8005\u7ed3\u675f\u5f97\u66f4\u665a\uff0c\u8fd9\u79cd\u60c5\u51b5\u540c\u6837\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u56e0\u4e3a\u5728\u5982\u679c\u771f\u7684\u5305\u542b\uff0c\u5c31\u4e00\u5b9a\u5728\u5916\u5c42\u5168\u90fd\u5305\u88f9\u4f4f\uff0c\u51fa\u73b0\u4e0a\u8ff0\u60c5\u51b5\u7684\u53ef\u80fd\u7ed3\u679c\u53ea\u6709\u94fe\u5b50\u65ad\u6389\u6216\u8005\u76f8\u4ea4\uff0c\u90fd\u662f\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\u3002\n\n\n---\n### \u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint n,m,T,x1[55][55],x2[55][55],len[55],num,fi[55],la[55];\nint check(int x,int y){\n\tfor(int i=max(fi[x],fi[y]);i<=min(la[x],la[y]);i++){\n\t\tif(x1[i][x]>x1[i][y]&&x1[i][x]<x2[i][y]&&!(x2[i][x]>x1[i][y]&&x2[i][x]<x2[i][y]))return 1;\n\t\tif(x2[i][x]>x1[i][y]&&x2[i][x]<x2[i][y]&&!(x1[i][x]>x1[i][y]&&x1[i][x]<x2[i][y]))return 1;\n\t}\n\treturn 0;\n}\nint IN(int x,int y){\n\tfor(int i=max(fi[x],fi[y]);i<=min(la[x],la[y]);i++){\n\t\tif(x1[i][x]>x1[i][y]&&x1[i][x]<x2[i][y]&&x2[i][x]>x1[i][y]&&x2[i][x]<x2[i][y]){\n\t\t\tif(fi[x]<fi[y]||la[x]>la[y])return 2;\n\t\t\treturn 1;//x in y\n\t\t}\n\t}\n\treturn 0;\n}\nint UP(int x,int y){\n\tfor(int i=max(fi[x],fi[y]);i<=min(la[x],la[y]);i++){\n\t\tif(x1[i][x]>x2[i][y])return 1;\n\t}\n\treturn 0;\n}\nvoid init(){\n\tmemset(x1,0,sizeof(x1));\n\tmemset(x2,0,sizeof(x2));\n\tmemset(len,0,sizeof(len));\n\tmemset(fi,0,sizeof(fi));\n\tmemset(la,0,sizeof(la));\n}\nvoid work(){\n\tinit();\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d\",&len[i]);\n\t\tfor(int j=1;j<=len[i];j++){\n\t\t\tscanf(\"%d\",&num);\n\t\t\tif(x1[i][num]==0)x1[i][num]=j;\n\t\t\telse x2[i][num]=j;\n\t\t\tif(fi[num]==0)fi[num]=i;\n\t\t\tla[num]=i;\n\t\t}\n\t}\n\t//\u5224\u65ad\u662f\u5426\u662f\u8fde\u7eed\u7684\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++){\n\t\tif(fi[i]<=j&&j<=la[i]&&x1[j][i]==0){\n\t\t\tprintf(\"NO\\n\");\n\t\t\treturn;\n\t\t}\n\t}\n\t//\u4e24\u4e24\u5224\u65ad\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=i+1;j<=n;j++){\n\t\tif(la[i]<fi[j]||la[j]<fi[i])continue;\n\t\tif(check(i,j)||check(j,i)){\n\t\t\tprintf(\"NO\\n\");\n\t\t\treturn;\n\t\t}\n\t\tint tot=IN(i,j)+IN(j,i)+UP(i,j)+UP(j,i);\n\t\tif(tot>1){\n\t\t\tprintf(\"NO\\n\");\n\t\t\treturn;\n\t\t}\n\t}\n\tprintf(\"YES\\n\");\n}\nint main(){\n\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\twork();\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1656770558,
        "uid": 223559,
        "name": "qxp101",
        "ccfLevel": 6,
        "title": "P7989 [USACO21DEC] Bracelet Crossings G \u9898\u89e3"
    },
    {
        "content": "\u5982\u679c\u6bcf\u4e2a\u989c\u8272\u51fa\u73b0\u7684\u7ebf\u6bb5\u4e0d\u8fde\u7eed\uff0c\u663e\u7136\u662f NO\u3002\n\n\u5426\u5219\u6211\u4eec\u5bf9\u4e24\u4e2a\u989c\u8272\u8fdb\u884c\u5224\u65ad\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1. \u591a\u8fb9\u5f62\u5b58\u5728\u5305\u542b\u5173\u7cfb\n\n$a$ \u5305\u542b $b$ \u6761\u4ef6\u662f $a$ \u51fa\u73b0\u7684\u7ebf\u6bb5\u533a\u95f4\u5305\u542b $b$ \u51fa\u73b0\u7684\u7ebf\u6bb5\u533a\u95f4\uff0c\u4e14\u5728\u6bcf\u6761 $b$ \u51fa\u73b0\u7684\u7ebf\u6bb5\u4e0a $a$ \u90fd\u5728 $b$ \u5916\u4fa7\u3002\n\n2. \u4e0d\u5b58\u5728\u5305\u542b\u5173\u7cfb\n\n\u8981\u6c42\u6bcf\u4e00 $a,b$ \u540c\u65f6\u51fa\u73b0\u7684\u7ebf\u6bb5\u4e0a $a$ \u90fd\u5728 $b$ \u7684\u5de6\u4fa7\u6216\u8005\u90fd\u5728\u53f3\u4fa7\u3002\n\n\u4e24\u4e24\u5224\u65ad\u5373\u53ef\u3002\n",
        "postTime": 1640322493,
        "uid": 171487,
        "name": "cmll02",
        "ccfLevel": 8,
        "title": "QWQ"
    },
    {
        "content": "## Solution\n\nTrick : \u4e24\u4e24\u68c0\u67e5 .\n\n\u8003\u8651\u5230\u76f8\u4ea4\u80af\u5b9a\u662f\u4e24\u4e24\u76f8\u4ea4 , \u6240\u4ee5\u53ef\u4ee5\u4e24\u4e24 check \u4e00\u4e0b .\n\n\u8003\u8651\u600e\u4e48\u4e0d\u76f8\u4ea4 : \u5305\u542b\u6216\u76f8\u79bb . \u8fd9\u4e24\u4e2a\u90fd\u5f88\u597d\u5224\u65ad .\n\n\u8fd8\u6709\u8003\u8651\u65ad\u5f00 . \u663e\u7136\u51fa\u73b0\u7684\u533a\u95f4\u4e00\u5b9a\u662f\u8fde\u7eed\u7684 , \u4e0d\u8fde\u7eed\u679c\u65ad\u5224\u9519 .\n\ncode :\n\n```cpp\n#include<bits/stdc++.h>\n#define ffor(i,a,b) for(int i=(a);i<=(b);i++)\n#define roff(i,a,b) for(int i=(a);i>=(b);i--)\nusing namespace std;\nconst int MAXN=50+10;\nint T,n,m,fst[MAXN],lst[MAXN],pl1[MAXN][MAXN],pl2[MAXN][MAXN];\nint contain(int x,int y) {\n\tif(!(fst[x]<=fst[y]&&lst[x]>=lst[y])) return 0;\n\tffor(i,fst[y],lst[y]) if(!(pl1[i][x]<=pl1[i][y]&&pl2[i][x]>=pl2[i][y])) return 0;\n\treturn 1;\n}\nint diff(int x,int y) {\n\tffor(i,1,m) if(pl1[i][y]&&!(pl2[i][x]<=pl1[i][y])) return 0;\n\treturn 1;\n}\nvoid work(void) {\n\tmemset(pl1,0,sizeof(pl1)),memset(pl2,0,sizeof(pl2)),memset(fst,0,sizeof(fst)),memset(lst,0,sizeof(lst));\n\tcin>>n>>m;\n\tffor(i,1,m) {\n\t\tint len;cin>>len;\n\t\tffor(j,1,len) {\n\t\t\tint col;cin>>col;\n\t\t\tif(pl1[i][col]) pl2[i][col]=j;\n\t\t\telse pl1[i][col]=j;\n\t\t\tif(fst[col]==0) fst[col]=i;lst[col]=i;\n\t\t}\n\t}\n\tffor(col,1,n) {\n\t\tffor(j,1,m) if(j>=fst[col]&&j<=lst[col]&&!pl1[j][col]) return printf(\"NO\\n\"),void();\n\t}\n\tffor(i,1,n) ffor(j,1,n) if(i!=j&&!contain(i,j)&&!contain(j,i)&&!diff(i,j)&&!diff(j,i)) return printf(\"NO\\n\"),void();\n\tprintf(\"YES\\n\");\n\treturn ;\n}\nint main() {\n\tios::sync_with_stdio(false),cin.tie(0),cout.tie(0);\n\tcin>>T;while(T--) work();\n\treturn 0;\n}\n```",
        "postTime": 1649402308,
        "uid": 120947,
        "name": "Purslane",
        "ccfLevel": 7,
        "title": "P7989"
    }
]