[
    {
        "content": "[$$\\Large\\texttt{My Blog}$$](https://hydingsy.github.io/)\n\n---\n\n## Description\n\n> \u9898\u76ee\u94fe\u63a5\uff1a[Luogu 1646](https://www.luogu.org/problemnew/show/P1646)\n\n\u9ad8\u4e00\u4e00\u73ed\u7684\u5ea7\u4f4d\u8868\u662f\u4e2a $n\\times m$ \u7684\u77e9\u9635\uff0c\u7ecf\u8fc7\u4e00\u4e2a\u5b66\u671f\u7684\u76f8\u5904\uff0c\u6bcf\u4e2a\u540c\u5b66\u548c\u524d\u540e\u5de6\u53f3\u76f8\u90bb\u7684\u540c\u5b66\u4e92\u76f8\u6210\u4e3a\u4e86\u597d\u670b\u53cb\u3002\u8fd9\u5b66\u671f\u8981\u5206\u6587\u7406\u79d1\u4e86\uff0c\u6bcf\u4e2a\u540c\u5b66\u5bf9\u4e8e\u9009\u62e9\u6587\u79d1\u4e0e\u7406\u79d1\u6709\u7740\u81ea\u5df1\u7684\u559c\u60a6\u503c\uff0c\u800c\u4e00\u5bf9\u597d\u670b\u53cb\u5982\u679c\u80fd\u540c\u65f6\u9009\u6587\u79d1\u6216\u8005\u7406\u79d1\uff0c\u90a3\u4e48\u4ed6\u4eec\u53c8\u5c06\u6536\u83b7\u4e00\u4e9b\u559c\u60a6\u503c\u3002\n\n\u4f5c\u4e3a\u8ba1\u7b97\u673a\u7ade\u8d5b\u6559\u7ec3\u7684 scp \u5927\u8001\u677f\uff0c\u60f3\u77e5\u9053\u5982\u4f55\u5206\u914d\u53ef\u4ee5\u4f7f\u5f97\u5168\u73ed\u7684\u559c\u60a6\u503c\u603b\u548c\u6700\u5927\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$1\\le n,m\\le 100$\uff0c\u559c\u60a6\u503c\u5747\u4e3a\u5c0f\u4e8e\u7b49\u4e8e $5000$ \u7684\u975e\u8d1f\u6574\u6570\u3002\n\n------\n\n## Solution\n\n\u8003\u8651\u7528\u7f51\u7edc\u6d41\u6c42\u89e3\uff0c**\u603b\u91cf\u51cf\u53bb\u6700\u5c0f\u5272**\u5373\u4e3a\u7b54\u6848\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9 $(i,j)$\uff0c\u4ece $s$ \u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a\u9009\u62e9\u6587\u79d1\u7684\u8fb9\uff0c\u5230 $t$ \u8fde\u4e00\u6761\u5bb9\u91cf\u4f4d\u9009\u62e9\u7406\u79d1\u7684\u8fb9\u3002\n\n\u5bf9\u4e8e $(i,j)$ \u548c $(i+1,j)$ \u4e24\u4e2a\u70b9\u7684\u7ec4\u5408\u60c5\u51b5\u3002\u5047\u8bbe\u8fd9\u4e24\u4e2a\u70b9\u540c\u65f6\u9009\u6587\u79d1\u6709 $w$ \u7684\u559c\u60a6\u503c\uff0c\u6211\u4eec\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9 $x$\uff0c\u4ece $s$ \u5411 $x$ \u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a\u559c\u60a6\u503c $w$ \u7684\u8fb9\uff0c\u518d\u4ece $x$ \u5411 $(i,j)$ \u548c $(i+1,j)$ \u5206\u522b\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $\\texttt{INF}$ \u7684\u8fb9\u3002\u5bf9\u4e8e\u5de6\u53f3\u524d\u540e\u3001\u6587\u79d1\u7406\u79d1\u540c\u7406\uff01\n\n\u8003\u8651\u8fd9\u6837\u505a\u6cd5\u7684**\u6b63\u786e\u6027**\uff1a\u6bcf\u4e2a\u70b9\u81ea\u7136\u53ea\u80fd\u9009\u62e9\u4e00\u4e2a\u79d1\u76ee\uff08\u6587\u79d1\u6216\u7406\u79d1\uff09\uff0c\u5f53\u67d0\u4e2a\u70b9\u9009\u62e9\u4e86\u6587\u79d1 $s$\uff0c\u90a3\u4e48\u5b83\u5411\u7406\u79d1 $t$ \u7684\u8fb9\u90fd\u5e94\u8be5\u8981\u88ab\u65ad\u5f00\u3002\u8003\u8651\u54ea\u4e9b\u8fb9\u4f1a\u88ab\u65ad\u5f00\uff1a\u9996\u5148\u662f\u5b83\u76f4\u63a5\u8fde\u5411 $t$ \u7684\u8fb9\uff0c\u5176\u6b21\u662f\u5b83\u548c\u522b\u7684\u70b9\u7ec4\u5408\u8fde\u5411 $t$ \u7684\u8fb9\uff0c\u8fd9\u6837\u4e00\u6765\uff0c\u8fd9\u4e9b\u8fb9\u5728\u7f51\u7edc\u56fe\u7684**\u5272**\u4e2d\u662f\u6709\u8d21\u732e\u7684\uff0c\u610f\u5473\u7740\u8fd9\u4e9b\u8fb9\u7684\u5bb9\u91cf\u5728\u7b54\u6848\u4e2d\u6ca1\u6709\u8d21\u732e\uff0c\u6b63\u786e\u6027\u8bc1\u660e\u5b8c\u6bd5\u3002\n\n**\u65f6\u95f4\u590d\u6742\u5ea6**\uff1a$O((nm)^3)$\uff08$\\texttt{Dinic}$\uff09\n\n------\n\n## Code\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <queue>\n#define FOR(i,a,b) for(int i=a;i<=b;++i)\n\nconst int N=1e5+5,M=5e6+5;\nconst int inf=1<<30;\nint n,m,tot=1,lnk[N],ter[M],nxt[M],val[M],dep[N],cnr[N];\n\nint id(int x,int y) {\n\treturn (x-1)*m+y;\n}\nvoid add(int u,int v,int w) {\n\tter[++tot]=v,nxt[tot]=lnk[u],lnk[u]=tot,val[tot]=w;\n}\nvoid addedge(int u,int v,int w) {\n\tadd(u,v,w),add(v,u,0);\n}\nint bfs(int s,int t) {\n\tmemset(dep,0,sizeof(dep));\n\tmemcpy(cnr,lnk,sizeof(lnk));\n\tstd::queue<int> q;\n\tq.push(s),dep[s]=1;\n\twhile(!q.empty()) {\n\t\tint u=q.front(); q.pop();\n\t\tfor(int i=lnk[u];i;i=nxt[i]) {\n\t\t\tint v=ter[i];\n\t\t\tif(val[i]&&!dep[v]) q.push(v),dep[v]=dep[u]+1;\n\t\t}\n\t}\n\treturn dep[t];\n}\nint dfs(int u,int t,int flow) {\n\tif(u==t) return flow;\n\tint ans=0;\n\tfor(int i=cnr[u];i&&ans<flow;i=nxt[i]) {\n\t\tcnr[u]=i;\n\t\tint v=ter[i];\n\t\tif(val[i]&&dep[v]==dep[u]+1) {\n\t\t\tint x=dfs(v,t,std::min(val[i],flow-ans));\n\t\t\tif(x) val[i]-=x,val[i^1]+=x,ans+=x;\n\t\t}\n\t}\n\tif(ans<flow) dep[u]=-1;\n\treturn ans;\n}\nint dinic(int s,int t) {\n\tint ans=0;\n\twhile(bfs(s,t)) {\n\t\tint x;\n\t\twhile((x=dfs(s,t,inf))) ans+=x;\n\t}\n\treturn ans;\n}\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\tint s=0,t=n*m+2*n*(m-1)+2*(n-1)*m+1,cnt=n*m;\n\tint ans=0;\n\tFOR(i,1,n) FOR(j,1,m) {\n\t\tint x;\n\t\tscanf(\"%d\",&x),ans+=x;\n\t\taddedge(s,id(i,j),x);\n\t}\n\tFOR(i,1,n) FOR(j,1,m) {\n\t\tint x;\n\t\tscanf(\"%d\",&x),ans+=x;\n\t\taddedge(id(i,j),t,x);\n\t}\n\tFOR(i,1,n-1) FOR(j,1,m) {\n\t\tint x;\n\t\tscanf(\"%d\",&x),ans+=x;\n\t\taddedge(s,++cnt,x);\n\t\taddedge(cnt,id(i,j),inf);\n\t\taddedge(cnt,id(i+1,j),inf);\n\t}\n\tFOR(i,1,n-1) FOR(j,1,m) {\n\t\tint x;\n\t\tscanf(\"%d\",&x),ans+=x;\n\t\taddedge(++cnt,t,x);\n\t\taddedge(id(i,j),cnt,inf);\n\t\taddedge(id(i+1,j),cnt,inf);\n\t}\n\tFOR(i,1,n) FOR(j,1,m-1) {\n\t\tint x;\n\t\tscanf(\"%d\",&x),ans+=x;\n\t\taddedge(s,++cnt,x);\n\t\taddedge(cnt,id(i,j),inf);\n\t\taddedge(cnt,id(i,j+1),inf);\n\t}\n\tFOR(i,1,n) FOR(j,1,m-1) {\n\t\tint x;\n\t\tscanf(\"%d\",&x),ans+=x;\n\t\taddedge(++cnt,t,x);\n\t\taddedge(id(i,j),cnt,inf);\n\t\taddedge(id(i,j+1),cnt,inf);\n\t}\n\tprintf(\"%d\\n\",ans-dinic(s,t));\n\treturn 0;\n}\n```\n\n",
        "postTime": 1545534518,
        "uid": 49725,
        "name": "Siyuan",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1646 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]happiness\u3011"
    },
    {
        "content": "### \u672c\u7bc7\u7bc7\u5e45\u8fc7\u957f\uff0c\u53ef\u80fd\u4f1a\u51fa\u4e0d\u5c11\u9519\uff0c\u6211\u5df2\u7ecf\u67e5\u8fc7\u4e00\u904d\u4e86\uff0c\u5982\u679c\u8fd8\u6709\u9519\u6073\u8bf7\u63d0\u51fa\uff0c\u6211\u9a6c\u4e0a\u4fee\u6539\u3002\n\n------------\n\n## [\u9898\u610f](https://www.luogu.com.cn/problem/P1646)\n\n\u8fd9\u9898\u6709\u4e24\u79cd\u505a\u6cd5\uff1a\n\n\u6839\u636e\u5957\u8def\uff0c\u5148\u5c06\u6240\u6709\u6109\u60a6\u503c\u52a0\u4e0a\uff0c\u4e4b\u540e\u51cf\u53bb\u6700\u5c0f\u4ee3\u4ef7\u3002\n### 1.\n\n\u9996\u5148\u5957\u8def\u5730\uff0c\u4ece\u6e90\u70b9$s$\u5411\u6bcf\u4e2a\u70b9\u8fde\u9009\u6587\u79d1\u7684\u4ef7\u503c\uff0c\u4ece\u6bcf\u4e2a\u70b9\u5411\u6c47\u70b9$t$\u8fde\u9009\u7406\u79d1\u7684\u4ef7\u503c\uff0c\u5272\u90a3\u6761\u8868\u793a\u4e0d\u9009\u54ea\u79d1\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u4e2a\u4eba\u4e0d\u9009\u6587\u5c31\u9009\u7406\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u5904\u7406\u8fd9\u4e2a\u9650\u5236\uff1a  \n\u53ea\u8981\u70b9\u5bf9$(i,j)$\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u4e0d\u9009\u6587\uff08\u7406\u79d1\u540c\u7406\uff09\uff0c\u6211\u4eec\u5c31\u8981\u51cf\u53bb\u540c\u9009\u6587\u7684\u4ef7\u503c\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9$x$\uff0c\u4ece$s$\u5411$x$\u8fde\u5bb9\u91cf\u4e3a$i,j$\u540c\u9009\u6587\u7684\u4ef7\u503c\uff0c\u4e4b\u540e\u4ece$x$\u5411$i,j$\u8fde\u5bb9\u91cf\u4e3a$inf$\u7684\u8fb9\u3002\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u65f6\u5982\u679c$i,j$\u4e24\u70b9\u4e2d\u6709\u4e00\u4e2a\u70b9\u7406\u79d1\u8fb9\u6ca1\u6709\u5272\uff08\u5373\u4e0d\u9009\u6587\uff09\uff0c\u90a3\u4e48\u6b64\u65f6\u5c31\u5b58\u5728\u4e00\u6761$s-x-i/j-t$\u8fd9\u6837\u4e00\u6761\u8def\uff0c\u6211\u4eec\u53ea\u80fd\u5272\u6389$s-x$\u8fd9\u6761\u8fb9\uff0c\u56e0\u4e3a\u5982\u679c\u5272\u6389$i/j-t$\u8fd9\u6761\u8fb9\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4e0d\u5272$s-i/j$\u8fd9\u6761\u8fb9\uff0c\u8fd9\u4e0e\u9009\u6587\u79d1\u4e0d\u7b26\uff0c\u4e8e\u662f\u6211\u4eec\u8fd8\u662f\u80fd\u4fdd\u8bc1\u6bcf\u4e2a\u4eba\u90fd\u9009\u4e14\u53ea\u9009\u4e86\u4e00\u79d1\u3002\n\n\u5efa\u51fa\u7684\u56fe\u5982\u4e0b\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/9pjdyuqc.png)\n\ncode:\n```\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int maxn=110;\nconst ll inf=1e18;\nint n,m,cnt=1,tot=2,S,T;\nint head[maxn*maxn*20],cur[maxn*maxn*20],dep[maxn*maxn*20];\nll ans;\nstruct edge{int to,nxt;ll flow;}e[maxn*maxn*40];\ninline int id(int i,int j){return (i-1)*m+j;}\ninline void add(int u,int v,ll w)\n{\n\te[++cnt].nxt=head[u];\n\thead[u]=cnt;\n\te[cnt].to=v;\n\te[cnt].flow=w;\n}\ninline void addflow(int u,int v,ll w){add(u,v,w);add(v,u,0);}\ninline bool bfs()\n{\n    memset(dep,0,sizeof(dep));\n    for(int i=0;i<=tot;i++)cur[i]=head[i];\n    queue<int>q;\n    q.push(S);dep[S]=1;\n    while(!q.empty())\n    {\n        int x=q.front();q.pop();\n        for(int i=head[x];i;i=e[i].nxt)\n        {\n            int y=e[i].to;\n            if(dep[y]||e[i].flow<=0)continue;\n            dep[y]=dep[x]+1;q.push(y);\n        }\n    }\n    return dep[T]>0;\n}\nll dfs(int x,int goal,ll lim)\n{\n    if(x==goal||lim<=0)return lim;\n    ll res=lim;\n    for(int i=cur[x];i;i=e[i].nxt)\n    {\n        cur[x]=i;\n        int y=e[i].to;\n        if(e[i].flow<=0||dep[y]!=dep[x]+1)continue;\n        ll tmp=dfs(y,goal,min(res,e[i].flow));\n        if(tmp<=0)dep[y]=0;\n        res-=tmp;\n        e[i].flow-=tmp,e[i^1].flow+=tmp;\n        if(res<=0)break;\n    }\n    return lim-res;\n}\ninline ll Dinic()\n{\n    ll res=0;\n    while(bfs())res+=dfs(S,T,inf);\n    return res;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tS=0,T=n*m+1;\n\ttot=n*m+1;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1,x;j<=m;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&x);ans+=x;\n\t\t\taddflow(S,id(i,j),x);\n\t\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1,x;j<=m;j++)\n\t\t{\t\n\t\t\tscanf(\"%d\",&x);ans+=x;\n\t\t\taddflow(id(i,j),T,x);\n\t\t}\n\tfor(int i=1;i<n;i++)\n\t\tfor(int j=1,x;j<=m;j++)\n\t\t{\t\n\t\t\tscanf(\"%d\",&x);ans+=x;\n\t\t\taddflow(S,++tot,x);\n\t\t\taddflow(tot,id(i+1,j),inf),addflow(tot,id(i,j),inf);\n\t\t}\n\tfor(int i=1;i<n;i++)\n\t\tfor(int j=1,x;j<=m;j++)\n\t\t{\t\n\t\t\tscanf(\"%d\",&x);ans+=x;\n\t\t\taddflow(++tot,T,x);\n\t\t\taddflow(id(i+1,j),tot,inf),addflow(id(i,j),tot,inf);\n\t\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1,x;j<m;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&x);ans+=x;\n\t\t\taddflow(S,++tot,x);\n\t\t\taddflow(tot,id(i,j+1),inf),addflow(tot,id(i,j),inf);\n\t\t}\t\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1,x;j<m;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&x);ans+=x;\n\t\t\taddflow(++tot,T,x);\n\t\t\taddflow(id(i,j+1),tot,inf),addflow(id(i,j),tot,inf);\n\t\t}\t\t\n\tprintf(\"%lld\",ans-Dinic());\n\treturn 0;\n}\n```\n### 2.\n\n\u5e38\u89c4\u65b9\u6cd5\u89e3\u65b9\u7a0b\u3002\n\n\u8fd8\u662f\u7ecf\u5178\u8001\u56fe\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/pwzh0xcx.png)\n\n\u8fd9\u5f20\u56fe\u4e0a\u9762\u662f$i$\uff0c\u4e0b\u9762\u662f$j$\uff0c\u5de6\u8fb9\u662f\u6587\u79d1\uff0c\u53f3\u8fb9\u662f\u7406\u79d1\uff0c\u8fd9\u91cc\u5272\u54ea\u6761\u8fb9\u8868\u793a\u4e0d\u9009\u54ea\u79d1\u3002\n\n\u6211\u4eec\u5f00\u59cb\u89e3\u65b9\u7a0b\uff1a\n\n\u5148\u8bbe$a_i$\u8868\u793a$i$\u9009\u6587\u79d1\u7684\u4ef7\u503c\uff0c$b_i$\u8868\u793a$i$\u9009\u7406\u79d1\u7684\u4ef7\u503c\uff0c$c_{i,j}$\u8868\u793a$i,j$\u540c\u9009\u6587\u79d1\u7684\u4ef7\u503c\uff0c$d_{i,j}$\u8868\u793a$i,j$\u540c\u9009\u7406\u79d1\u7684\u4ef7\u503c\u3002\n\n\u5bf9\u4e8e\u70b9\u5bf9$(i,j)$\u53ef\u4ee5\u5217\u51fa\u65b9\u7a0b\uff08\u4ee5\u4e0b\u65b9\u7a0b\u6309\u7167\u201c\u540c\u6587\u201d\uff0c\u201c\u540c\u7406\u201d\uff0c\u201c$i$\u6587$j$\u7406\u201d\uff0c\u201c$i$\u7406$j$\u6587\u201d\u6392\u5e8f\uff09\uff1a\n\n$\\begin{cases}c+d=b_i+b_j+d_{i,j}<1>\\\\ a+b=a_i+a_j+c_{i,j}<2>\\\\ b+c+e=b_i+a_j+c_{i,j}+d_{i,j}<3>\\\\a+d+f=a_i+b_j+c_{i,j}+d_{i,j}<4>\\end{cases}$\n\n\u6211\u4eec\u901a\u8fc7$<3>+<4>-<1>-<2>$\u53ef\u4ee5\u5f97\u5230\uff1a$e+f=c_{i,j}+d_{i,j}$  \n\u4ee4$e=f$\uff0c\u53ef\u5f97\uff1a$e=f=\\frac{c_{i,j}+d_{i,j}}{2}$\n\n\u6211\u4eec\u4ee4$a=a_i+\\frac{c_{i,j}}{2}$\uff0c\u5373\u53ef\u89e3\u5f97\u5176\u4ed6\u53d8\u91cf\u7684\u503c\uff1a  \n$b=a_j+\\frac{c_{i,j}}{2}$  \n$c=b_i+\\frac{d_{i,j}}{2}$  \n$d=b_j+\\frac{d_{i,j}}{2}$\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u5efa\u56fe\u4e86\uff0c\u4f46\u662f\u7531\u4e8e$a,b,c,d,e,f$\u4e0d\u4e00\u5b9a\u662f\u6574\u6570\uff0c\u6211\u4eec\u5148\u6574\u4f53\u4e582\uff0c\u6700\u540e\u9664\u56de\u53bb\u5373\u53ef\u3002\n\ncode:\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=110;\nconst int inf=1e9;\nint n,m,cnt=1,S,T,ans;\nint head[maxn*maxn*20],cur[maxn*maxn*20],dep[maxn*maxn*20];\nstruct edge{int to,nxt,flow;}e[maxn*maxn*40];\ninline int read()\n{\n\tchar c=getchar();int res=0,f=1;\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9')res=res*10+c-'0',c=getchar();\n\treturn res*f;\n}\ninline int id(int i,int j){return (i-1)*m+j;}\ninline void add(int u,int v,int w)\n{\n\te[++cnt].nxt=head[u];\n\thead[u]=cnt;\n\te[cnt].to=v;\n\te[cnt].flow=w;\n}\ninline void addflow(int u,int v,int w){add(u,v,w),add(v,u,0);}\ninline bool bfs()\n{\n    memset(dep,0,sizeof(dep));\n    for(int i=S;i<=T;i++)cur[i]=head[i];\n    queue<int>q;\n    q.push(S);dep[S]=1;\n    while(!q.empty())\n    {\n        int x=q.front();q.pop();\n        for(int i=head[x];i;i=e[i].nxt)\n        {\n            int y=e[i].to;\n            if(dep[y]||e[i].flow<=0)continue;\n            dep[y]=dep[x]+1;q.push(y);\n        }\n    }\n    return dep[T]>0;\n}\nint dfs(int x,int goal,int lim)\n{\n    if(x==goal||lim<=0)return lim;\n    int res=lim;\n    for(int i=cur[x];i;i=e[i].nxt)\n    {\n        cur[x]=i;\n        int y=e[i].to;\n        if(e[i].flow<=0||dep[y]!=dep[x]+1)continue;\n        int tmp=dfs(y,goal,min(res,e[i].flow));\n        if(tmp<=0)dep[y]=0;\n        res-=tmp;\n        e[i].flow-=tmp,e[i^1].flow+=tmp;\n        if(res<=0)break;\n    }\n    return lim-res;\n}\ninline int Dinic()\n{\n    int res=0;\n    while(bfs())res+=dfs(S,T,inf);\n    return res;\n}\nint main()\n{\n\tn=read(),m=read();\n\tS=0,T=n*m+1;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tint x=read();ans+=x;\n\t\t\taddflow(S,id(i,j),x<<1);\n\t\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tint x=read();ans+=x;\n\t\t\taddflow(id(i,j),T,x<<1);\n\t\t}\n\tfor(int i=1;i<n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tint x=read();ans+=x;\n\t\t\taddflow(id(i,j),id(i+1,j),x);addflow(id(i+1,j),id(i,j),x);\n\t\t\taddflow(S,id(i,j),x),addflow(S,id(i+1,j),x);//\u4e4b\u524d\u5c11\u52a0\u3002 \n\t\t}\n\tfor(int i=1;i<n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tint x=read();ans+=x;\n\t\t\taddflow(id(i,j),id(i+1,j),x);addflow(id(i+1,j),id(i,j),x);\n\t\t\taddflow(id(i,j),T,x),addflow(id(i+1,j),T,x);\n\t\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<m;j++)\n\t\t{\n\t\t\tint x=read();ans+=x;\n\t\t\taddflow(id(i,j),id(i,j+1),x);addflow(id(i,j+1),id(i,j),x);\n\t\t\taddflow(S,id(i,j),x),addflow(S,id(i,j+1),x);\n\t\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<m;j++)\n\t\t{\n\t\t\tint x=read();ans+=x;\n\t\t\taddflow(id(i,j),id(i,j+1),x);addflow(id(i,j+1),id(i,j),x);\n\t\t\taddflow(id(i,j),T,x),addflow(id(i,j+1),T,x);\n\t\t}\n\tprintf(\"%d\",ans-(Dinic()>>1));\n\treturn 0;\n}\n```\n",
        "postTime": 1577198412,
        "uid": 145441,
        "name": "nofind",
        "ccfLevel": 6,
        "title": "P1646 [\u56fd\u5bb6\u96c6\u8bad\u961f]happiness(\u6700\u5c0f\u5272)"
    },
    {
        "content": "\u6253\u4e2a\u5e7f\u544a->[\u8fd9\u91cc](https://www.cnblogs.com/bztMinamoto/p/9568462.html)\n\n\u3000\u989d\uff0c\u8fd9\u9898\u6700\u91cd\u8981\u7684\u662f\u4e00\u4e2a\u6a21\u578b\u8f6c\u6362\u7684\u601d\u60f3\u3002\u56e0\u4e3a\u6700\u5c0f\u5272\u53ef\u4ee5\u4ee3\u8868\u9009\u62e9\u6216\u4e0d\u9009\u62e9\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8ba9\u6bcf\u4e00\u4e2a\u6700\u5c0f\u5272\u7684\u72b6\u6001\u5206\u522b\u4ee3\u8868\u9898\u76ee\u6240\u793a\u7684\u6bcf\u4e00\u4e2a\u72b6\u6001\n\n\u3000\u3000\u5148\u8003\u8651\u5efa\u56fe\uff0c\u5047\u8bbe$A$\u548c$B$\u662f\u6709\u5173\u8054\u7684\u4e24\u70b9\uff0c\u90a3\u4e48\u5efa\u5982\u4e0b\u7684\u56fe\n\n ![](https://i.loli.net/2018/09/01/5b8a22633625a.png)\n\n\u3000\u3000\u5176\u4e2d$S$\u8868\u793a\u6e90\u70b9\uff0c\u4ee3\u8868\u6587\u79d1\uff0c$T$\u8868\u793a\u6c47\u70b9\uff0c\u4ee3\u8868\u7406\u79d1\uff0c$A,B$\u662f\u4e92\u76f8\u5173\u8054\u7684\u4e24\u70b9\u3002\u8fd9\u5f20\u56fe\u7684\u610f\u601d\u662f\uff0c\u5982\u679c\u67d0\u4e2a\u70b9\u4e0e$S$\u76f8\u8fde\uff0c\u4ee3\u8868\u5b83\u9009\u62e9\u6587\u79d1\uff0c\u5982\u679c\u4e0e$T$\u76f8\u8fde\uff0c\u4ee3\u8868\u5b83\u9009\u62e9\u7406\u79d1\n\n\u3000\u3000\u90a3\u4e48\u6211\u4eec\u8003\u8651\u4e00\u4e0b\uff0c\u8981\u600e\u4e48\u6837\u624d\u80fd\u4f7f\u5168\u6587\uff0c\u5168\u7406\uff0c\u4e00\u6587\u4e00\u7406\u4e09\u79cd\u60c5\u51b5\u90fd\u80fd\u51fa\u73b0\u5462\uff1f\n\n\u3000\u3000\u6211\u4eec\u8003\u8651\u56fe\u4e2d\u8fb9\u7684\u6d41\u91cf\uff0ca=A\u6587+AB\u6587/2\uff0cc=B\u6587+AB\u6587/2\uff0cb=A\u7406+AB\u7406/2\uff0cd=B\u7406+AB\u7406/2\uff0ce=f=AB\u6587/2+AB\u7406/2\n\n\u3000\u3000\u56e0\u4e3a\u6700\u5c0f\u5272\u7684\u5272\u53ef\u4ee5\u4ee3\u8868\u9009\u62e9\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u679a\u4e3e\u5272\u6765\u679a\u4e3e\u9009\u62e9\u3002\u90a3\u4e48\u4e0a\u56fe\u4e2d\u662f\u4e0d\u662f\u6bcf\u4e00\u4e2a\u5272\u90fd\u4ee3\u8868\u4e86\u4e00\u79cd\u9009\u62e9\u5462\uff1f\n\n\u3000\u3000\u6211\u4eec\u8bbesum=A\u6587+B\u6587+A\u7406+B\u7406+AB\u6587+AB\u7406\n\n\u3000\u3000\u5f53\u4e24\u4eba\u90fd\u9009\u6587\u65f6\uff0c\u6211\u4eec\u5272\u53bbb\uff0cd\uff0c\u90a3\u4e48\u5272\u7684\u5927\u5c0f\u4e3aA\u7406+B\u7406+AB\u7406\uff0c\u7528sum\u51cf\u53bb\u5272\u5269\u4e0b\u7684\u5c31\u662f\u5168\u9009\u6587\u7684\u9ad8\u5174\u503c\n\n\u3000\u3000\u5982\u679c\u4e24\u4eba\u90fd\u9009\u7406\uff0c\u90a3\u4e48\u6211\u4eec\u5272\u53bba\uff0cc\uff0c\u548c\u4e0a\u9762\u4e00\u4e2a\u4e00\u6837\uff0c\u5c31\u4e0d\u591a\u8bf4\n\n\u3000\u3000\u5982\u679c\u4e24\u4eba\u4e00\u6587\u4e00\u7406\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u5047\u8bbeA\u6587B\u7406\uff0c\u5272\u53bba\uff0cf\uff0cd\uff0c\u90a3\u4e48sum\u51cf\u53bb\u5272\u7684\u5927\u5c0f\u5c31\u662fA\u9009\u6587\u548cB\u9009\u7406\u7684\u9ad8\u5174\u503c\n\n\u3000\u3000\u7efc\u4e0a\u6240\u8ff0\uff0c\u4e0d\u96be\u53d1\u73b0\u4e0a\u56fe\u7684\u6bcf\u4e00\u4e2a\u5272\u90fd\u4ee3\u8868\u4e86\u4e00\u79cd\u9009\u62e9\u7684\u72b6\u6001\u3002\u90a3\u4e48\u6211\u4eec\u8981\u4ee4\u9ad8\u5174\u503c\u6700\u5927\uff0c\u90a3\u4e48\u5272\u5fc5\u987b\u6700\u5c0f\uff0c\u53ea\u8981\u6c42\u51fa\u4e00\u4e2a\u6700\u5c0f\u5272\u5c31\u884c\u4e86\n\n\u3000\u3000\u4ee3\u7801\u53c2\u8003~~\uff08\u6284\uff09~~\u4e86hzwer\u7684\n```\n// luogu-judger-enable-o2\n//minamoto\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#define inf 0x3f3f3f3f\nusing namespace std;\n#define getc() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline int read(){\n    #define num ch-'0'\n    char ch;bool flag=0;int res;\n    while(!isdigit(ch=getc()))\n    (ch=='-')&&(flag=true);\n    for(res=num;isdigit(ch=getc());res=res*10+num);\n    (flag)&&(res=-res);\n    #undef num\n    return res;\n}\nconst int N=10005,M=500005;\nint head[N],Next[M],ver[M],edge[M],tot=1;\nint dep[N],cur[N],n,m,s,t,mxflow;\nint a[105][105],b[105][105],id[105][105],ans;\nqueue<int> q;\ninline void add_edge(int u,int v,int e){\n    ver[++tot]=v,Next[tot]=head[u],head[u]=tot,edge[tot]=e;\n}\ninline void ins(int u,int v,int e){\n    add_edge(u,v,e),add_edge(v,u,e);\n}\ninline void insert(int u,int v,int e){\n    add_edge(u,v,e),add_edge(v,u,0);\n}\nbool bfs(){\n    memset(dep,-1,sizeof(dep));\n    while(!q.empty()) q.pop();\n    for(int i=s;i<=t;++i) cur[i]=head[i];\n    q.push(s),dep[s]=0;\n    while(!q.empty()){\n        int u=q.front();q.pop();\n        for(int i=head[u];i;i=Next[i]){\n            int v=ver[i];\n            if(dep[v]<0&&edge[i]){\n                dep[v]=dep[u]+1,q.push(v);\n                if(v==t) return true;\n            }\n        }\n    }\n    return false;\n}\nint dfs(int u,int limit){\n    if(u==t||!limit) return limit;\n    int flow=0,f;\n    for(int i=cur[u];i;i=Next[i]){\n        int v=ver[i];cur[u]=i;\n        if(dep[v]==dep[u]+1&&(f=dfs(v,min(limit,edge[i])))){\n            flow+=f,limit-=f;\n            edge[i]-=f,edge[i^1]+=f;\n            if(!limit) break;\n        }\n    }\n    if(!flow) dep[u]=-1;\n    return flow;\n}\nvoid dinic(){\n    while(bfs()) mxflow+=dfs(s,inf);\n}\nvoid build(){\n    int x;s=0,t=n*m+1;\n    for(int i=1;i<n;++i)\n    for(int j=1;j<=m;++j){\n        x=read(),ans+=x;\n        a[i][j]+=x,a[i+1][j]+=x;\n        ins(id[i][j],id[i+1][j],x);\n    }\n    for(int i=1;i<n;++i)\n    for(int j=1;j<=m;++j){\n        x=read(),ans+=x;\n        b[i][j]+=x,b[i+1][j]+=x;\n        ins(id[i][j],id[i+1][j],x);\n    }\n    for(int i=1;i<=n;++i)\n    for(int j=1;j<m;++j){\n        x=read(),ans+=x;\n        a[i][j]+=x,a[i][j+1]+=x;\n        ins(id[i][j],id[i][j+1],x);\n    }\n    for(int i=1;i<=n;++i)\n    for(int j=1;j<m;++j){\n        x=read(),ans+=x;\n        b[i][j]+=x,b[i][j+1]+=x;\n        ins(id[i][j],id[i][j+1],x);\n    }\n    for(int i=1;i<=n;++i)\n    for(int j=1;j<=m;++j){\n        insert(s,id[i][j],a[i][j]);\n        insert(id[i][j],t,b[i][j]);\n    }\n}\nint main(){\n    //freopen(\"testdata.in\",\"r\",stdin);\n    n=read(),m=read();\n    for(int i=1;i<=n;++i)\n    for(int j=1;j<=m;++j)\n    a[i][j]=read(),ans+=a[i][j],a[i][j]<<=1;\n    for(int i=1;i<=n;++i)\n    for(int j=1;j<=m;++j)\n    b[i][j]=read(),ans+=b[i][j],b[i][j]<<=1;\n    for(int i=1;i<=n;++i)\n    for(int j=1;j<=m;++j)\n    id[i][j]=(i-1)*m+j;\n    build(),dinic();\n    printf(\"%d\\n\",ans-(mxflow>>1));\n    return 0;\n}\n```",
        "postTime": 1535779459,
        "uid": 41781,
        "name": "bztMinamoto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1646 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]happiness\u3011"
    },
    {
        "content": "> 11.29 \u6362\u4e86\u56fe\n\n\u8003\u8651\u8bb0\u5f55\u603b\u91cf\u518d\u6c42\u6700\u5c0f\u5272\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c$S$\uff08\u6e90\u70b9\uff09\u4e0eta\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a\u9009\u6587\u7684\u8fb9\uff0c$T$\uff08\u6c47\u70b9\uff09\u4e0eta\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a\u9009\u7406\u7684\u8fb9\n\n\u5efa\u7acb\u65b0\u8282\u70b9\uff0c$S$\u4e0e\u65b0\u8282\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a\u524d\u540e\u684c\u540c\u65f6\u9009\u6587\u7684\u8fb9\n\n\u65b0\u8282\u70b9\u518d\u5206\u522b\u4e0e\u524d\u540e\u684c\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a$inf$\u7684\u8fb9\uff08\u4e3a\u4e86\u4e0d\u5f71\u54cd\u7b54\u6848\uff09\n\n\u518d\u5efa\u4e00\u4e2a\u65b0\u8282\u70b9\uff0c\u65b0\u8282\u70b9\u4e0et\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a\u524d\u540e\u684c\u540c\u65f6\u9009\u7406\u7684\u8fb9\n\n\u524d\u540e\u684c\u518d\u4e0e\u65b0\u8282\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a$inf$\u7684\u8fb9\n\n\u5de6\u53f3\u684c\u540c\u7406\n\n\u8fd9\u65f6\u8dd1\u6700\u5c0f\u5272\uff08\u4e5f\u5c31\u662f\u6700\u5927\u6d41\uff09\uff0c\u5f97\u5230\u7684\u662f\u6700\u5c0f\u5f97\u4e0d\u5230\u7684\u5feb\u4e50\u503c\n\n\u6240\u4ee5\u6240\u6709\u5feb\u4e50\u503c-\u6700\u5c0f\u5272\u5c31\u662f\u7b54\u6848\n\n\u6837\u4f8b\u7684\u56fe\uff1a\n\n ![](https://a-failure.github.io/img/study/happiness.png) \n\n\u56fe\u4e2d\u7ea2\u70b9\u4e3a\u7b2c\u4e00\u4e2a\u65b0\u5efa\u7684\u70b9\uff0c\u6a59\u70b9\u4e3a\u7b2c\u4e8c\u4e2a\u65b0\u5efa\u7684\u70b9\uff0c\u84dd\u70b9\u4e3a\u539f\u6765\u7684\u70b9\uff0c\u8dd1\u6700\u5c0f\u5272\u4e3a$3$\n\n### \u4ee3\u7801\n```\n# include<iostream>\n# include<cstdio>\n# include<cstring>\n# include<cstdlib>\n# include<queue>\n# define pu(x,y) (x-1)*m+y\nusing namespace std;\nconst int MAX=2e5+1,inf=1e8,t=2e5;\nstruct p{\n    int x,y,dis;\n}c[MAX<<1];\nint n,m,num,SUM;\nint h[MAX],d[MAX];\nvoid add(int x,int y,int dis)\n{\n    c[num].x=h[y],c[num].y=x,c[num].dis=0,h[y]=num++;\n    c[num].x=h[x],c[num].y=y,c[num].dis=dis,h[x]=num++;\n}\nbool bfs()\n{\n    memset(d,0,sizeof(d));\n    queue<int> qu;\n    qu.push(0);\n    d[0]=1;\n    while(!qu.empty())\n    {\n        int tt=qu.front();\n        qu.pop();\n        for(int i=h[tt];i;i=c[i].x)\n          if(!d[c[i].y]&&c[i].dis)\n          {\n              d[c[i].y]=d[tt]+1;\n              qu.push(c[i].y);\n          }\n    }\n    return d[t];\n}\nint dfs(int x,int dix)\n{\n    if(!dix||x==t) return dix;\n    int sum=0;\n    for(int i=h[x];i;i=c[i].x)\n      if(c[i].dis&&d[c[i].y]==d[x]+1)\n      {\n          int dis=dfs(c[i].y,min(dix,c[i].dis));\n          if(dis)\n          {\n              dix-=dis;\n              sum+=dis;\n              c[i].dis-=dis;\n              c[i^1].dis+=dis;\n              if(!dix) break;\n        }\n      }\n    if(!sum) d[x]=-1;\n    return sum;\n}\nint dinic()\n{\n    int tot=0;\n    while(bfs()) tot+=dfs(0,inf);\n    return tot;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    int ss=pu(n,m);\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=m;j++)\n        {\n            int dis,tt=pu(i,j);\n            scanf(\"%d\",&dis);\n            SUM+=dis;\n            add(0,tt,dis);\n        }\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=m;j++)\n        {\n            int dis,tt=pu(i,j);\n            scanf(\"%d\",&dis);\n            SUM+=dis;\n            add(tt,t,dis);\n        }\n    for(int i=1;i<n;i++)\n      for(int j=1;j<=m;j++)\n        {\n            int dis,tt=pu(i,j)+ss,t1=pu(i,j),t2=pu(i+1,j);\n            scanf(\"%d\",&dis);\n            SUM+=dis;\n            add(0,tt,dis);\n            add(tt,t1,inf);\n            add(tt,t2,inf);\n        }\n    for(int i=1;i<n;i++)\n      for(int j=1;j<=m;j++)\n        {\n            int dis,tt=pu(i,j)+2*ss,t1=pu(i,j),t2=pu(i+1,j);\n            scanf(\"%d\",&dis);\n            SUM+=dis;\n            add(tt,t,dis);\n            add(t1,tt,inf);\n            add(t2,tt,inf);\n        }\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<m;j++)\n        {\n            int dis,tt=pu(i,j)+3*ss,t1=pu(i,j),t2=pu(i,j+1);\n            scanf(\"%d\",&dis);\n            SUM+=dis;\n            add(0,tt,dis);\n            add(tt,t1,inf);\n            add(tt,t2,inf);\n        }\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<m;j++)\n        {\n            int dis,tt=pu(i,j)+4*ss,t1=pu(i,j),t2=pu(i,j+1);\n            scanf(\"%d\",&dis);\n            SUM+=dis;\n            add(tt,t,dis);\n            add(t1,tt,inf);\n            add(t2,tt,inf);\n        }\n    printf(\"%d\",SUM-dinic());\n    return 0;\n}\n```\n",
        "postTime": 1517311484,
        "uid": 49206,
        "name": "Dispwnl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1646 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]happiness\u3011"
    },
    {
        "content": "# \u5514\u59c6\n~~\u4e00\u9053\u4ee4\u4eba\u5077\u2642\u7a0e\u7684\u7f51\u7edc\u6d41~~\n\n---\n\u6211\u4eec\u628a\u95ee\u9898\u5206\u5f00\u4e86\u8ba8\u8bba\n\n- \u9996\u5148\uff0c\u5982\u679c\u53ea\u662f\u6bcf\u4e2a\u4eba\u6587\u7406\u79d1\u53ef\u4ee5\u5f97\u76f8\u5e94\u7684\u6109\u2642\u60a6\u503c\uff0c\u90a3\u8fd9\u9898\u5c31\u662f\u6807\u51c6\u7684\u6700\u5c0f\u5272\u4e86\uff08~~\u5176\u5b9e\u76f4\u63a5\u9009\u6700\u5927\u7684\u5c31\u53ef\u4ee5\u4e86\uff0c\u4f46\u4e3a\u4e86\u8282\u76ee\u6548\u679c\uff0c\u5927\u5bb6\u914d\u5408\u4e00\u4e0b~~\uff09\u628a\u6e90\u70b9\u5411\u6bcf\u4e2a\u4eba\u8fde\u6761\u5bb9\u91cf\u4e3a\u6587\u79d1\u6109\u60a6\u503c\u7684\u8fb9\uff0c\u518d\u628a\u6bcf\u4e2a\u4eba\u5411\u6c47\u70b9\u8fde\u6761\u5bb9\u91cf\u4e3a\u7406\u79d1\u6109\u60a6\u503c\u7684\u8fb9\u3002\u7136\u540e\u7528\u603b\u6109\u60a6\u503c-\u6700\u5c0f\u5272\u5c31OK\u4e86\uff08\u8fd9\u4e0d\u7528\u8bf4\u5427\uff09\n- \u63a5\u7740\uff0c\u95ee\u9898\u6765\u4e86\u3002\u8fa3\u4e2a\u4e00\u8d77\u5b66\u4e60\u6240\u83b7\u5f97\u7684\u989d\u5916\u7684\u6109\u60a6\u503c\u80bf\u4e48\u529e\u5462\uff1f\u5176\u5b9e\u53ef\u4ee5\u770b\u505a\u628a\u8fd9\u4fe9\u4eba\u548c\u6210\u4e00\u4e2a\u70b9\uff0c\u4f46\u662f\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e3a\u4e86\u9650\u5236\u6bcf\u4e2a\u4eba\u53ea\u80fd\u9009\u4e00\u4e2a\u5b66\u79d1\uff0c\u6211\u4eec\u8981\u4e3a\u6587\u79d1\u548c\u4e00\u4e2a\u70b9\uff0c\u4e3a\u7406\u79d1\u548c\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u6e90\u8fde\u6587\uff0c\u7406\u8fde\u6c47\uff08\u5c31\u662f\u628a\u5148\u5f00\u59cb\u8bf4\u7684\u8f6c\u6362\u4e00\u4e0b\u5566\uff09\uff0c\u7136\u540e\u5404\u81ea\u8fde\u4e0a\u4ed6\u4eec\u6240\u5bf9\u5e94\u7684\u4e24\u4e2a\u70b9\uff0c\u4ee5\u4fdd\u8bc1\u6ca1\u4eba\u53ea\u80fd\u9009\u4e00\u95e8\u5b66\u79d1\u3002\n- \u6700\u540e\uff0c\u8fd8\u662f\u548c\u7b2c\u4e00\u6761\u8bf4\u7684\u90a3\u6837\uff0c\u603b\u6109\u60a6\u503c-\u6700\u5c0f\u5272\u5c31OK\u5566\uff08\u6709\u4e2a\u5927\u4f6c\u7684\u9898\u89e3\u91cc\u90a3\u56fe\u753b\u7684\u8d85\u597d\u7684\uff0c\u6709\u52a9\u4e8e\u7406\u89e3\uff0c\u5927\u5bb6\u53ef\u4ee5\u53bb\u770b\u770b\uff09\n\n~~\u8d34\u4ee3\u7801\u603b\u662f\u4ee4\u4eba\u5077\u2642\u7a0e~~\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<queue>\n#define MAXN 100050\n#define MAXM 150005\nusing namespace std;\nint head[MAXN],next[MAXM*2],to[MAXM*2],w[MAXM*2];\nint n,m,S,T;\nint cnt=-1;\nint deep[MAXN];\nvoid link(int a,int b,int c){\n     cnt++;\n     w[cnt]=c;\n     next[cnt]=head[a];\n     to[cnt]=b;\n     head[a]=cnt;\n     cnt++;\n     w[cnt]=0;\n     next[cnt]=head[b];\n     to[cnt]=a;\n     head[b]=cnt;\n}\nbool bfs(){\n     memset(deep,0,sizeof(deep));\n     queue<int> q;\n     while(!q.empty())q.pop();\n     q.push(S);\n     deep[S]=1;\n     while(!q.empty()){\n                       int now=q.front();\n                       q.pop();\n                       for(int i=head[now];i!=-1;i=next[i]){\n                               if (w[i]&&!deep[to[i]]){\n                                                       deep[to[i]]=deep[now]+1;\n                                                       q.push(to[i]);\n                               }\n                       }\n     }\n     if (deep[T])return 1;else return 0;\n}\nint dinic(int now,int last){\n    if (now==T||!last)return last;\n    int ret=0;\n    for(int i=head[now];i!=-1;i=next[i]){\n            if(deep[to[i]]-1==deep[now]&&w[i]){\n                                               int zgl=dinic(to[i],min(w[i],last-ret));\n                                               if (zgl){\n                                                        w[i]-=zgl;\n                                                        w[i^1]+=zgl;     \n                                                        ret+=zgl;\n                                               }\n            }\n    }\n    if (!ret)deep[now]=-1;\n    return ret;\n}\nint num(int a,int b){\n    return m*(a-1)+b;\n}\nint main(){\n    cin>>n>>m;\n    S=0;T=MAXN-1;\n    int a;\n    memset(head,-1,sizeof(head));\n    long long sum=0;\n    for(int i=1;i<=n;i++){\n            for(int j=1;j<=m;j++){\n                    scanf(\"%d\",&a);\n                    link(S,num(i,j),a);\n                    sum+=a;\n            }\n    }\n    for(int i=1;i<=n;i++){\n            for(int j=1;j<=m;j++){\n                    scanf(\"%d\",&a);\n                    link(num(i,j),T,a);\n                    sum+=a;\n            }\n    }\n    for(int i=1;i<n;i++){\n            for(int j=1;j<=m;j++){\n                    scanf(\"%d\",&a);\n                    link(S,num(i,j)+10100,a);\n                    link(num(i,j)+10100,num(i,j),a);\n                    link(num(i,j)+10100,num(i+1,j),a);\n                    sum+=a;\n            }\n    }\n    for(int i=1;i<n;i++){\n            for(int j=1;j<=m;j++){\n                    scanf(\"%d\",&a);\n                    link(num(i,j)+20100,T,a);\n                    link(num(i,j),num(i,j)+20100,a);\n                    link(num(i+1,j),num(i,j)+20100,a);\n                    sum+=a;\n            }\n    }\n    for(int i=1;i<=n;i++){\n            for(int j=1;j<m;j++){\n                    scanf(\"%d\",&a);\n                    link(S,num(i,j)+10100,a);\n                    link(num(i,j)+10100,num(i,j),a);\n                    link(num(i,j)+10100,num(i,j+1),a);\n                    sum+=a;\n            }\n    }\n    for(int i=1;i<=n;i++){\n            for(int j=1;j<m;j++){\n                    scanf(\"%d\",&a);\n                    link(num(i,j)+20100,T,a);\n                    link(num(i,j),num(i,j)+20100,a);\n                    link(num(i,j+1),num(i,j)+20100,a);\n                    sum+=a;\n            }\n    }\n    long long ans=0;\n    while(bfs())\n                 ans+=dinic(S,9999999);\n    cout<<sum-ans;\n    return 0;\n}\n\n```\n",
        "postTime": 1552216637,
        "uid": 118273,
        "name": "\u543e\u738b\u7f8e\u5982\u753b",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1646 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]happiness\u3011"
    },
    {
        "content": "\u6700\u5c0f\u5272\uff0c\u5272\u53bb\u6700\u5c0f\u7684\u4e0d\u53ef\u5f97\u559c\u60a6\u503c\u3002\n\n\u4e00\u79cd\u6ecb\u6ecb\u540c\u9009\u6587\u548c\u540c\u9009\u7406\u989d\u5916\u559c\u60a6\u503c\u4e0d\u540c\u7684\u5efa\u8fb9\u65b9\u6cd5\uff0c\u65b0\u5efa\u9644\u52a0\u8282\u70b9\u3002\n\n\u65b0\u5efa\u4e00\u4e9b\u9644\u52a0\u8282\u70b9node\u8868\u793aa\u4e0eb\u540c\u9009\u62e9\u6587\uff0c\u90a3\u4e48s-\u989d\u5916\u503c->node,node-inf->a,b;\u540c\u9009\u7406a,b-inf->node,node-\u989d\u5916\u503c->t\u3002\n\n\u7d2f\u8ba1\u6240\u6709\u503c\uff0c\u7136\u540e\u51cf\u53bb\u6700\u5c0f\u5272\u3002\n\n\n```cpp\n#include<iostream>\n#define inf 1<<30\n#include<cstring>\n#include<cstdio>\n#define M 1000000\n#define N 100000\n#include<queue>\nusing namespace std;\nint n,m,s,t,ans,it;\nint head[N],Next[M],to[M],cup[M],e=1;\nvoid buid(int u,int v,int c)\n{\n    Next[++e]=head[u],head[u]=e;\n    to[e]=v,cup[e]=c;\n}\nint id(int x,int y)\n{\n    return (x-1)*m+y;\n}\nint use[N],itc[N];\nqueue<int> q;\nbool bfs()\n{\n    memset(itc,0,sizeof(itc));\n    itc[s]=1;q.push(s);\n    while(!q.empty())\n    {\n        int now=q.front();q.pop();\n        for(int i=head[now];i;i=Next[i])\n        {\n            if(!cup[i]) continue;\n            int j=to[i];\n            if(!itc[j]) itc[j]=itc[now]+1,q.push(j);\n        }\n    }\n    return itc[t];\n}\nint doit(int now,int want)\n{\n    if(now==t||!want) return want;\n    int get=0;\n    for(int i=use[now];i;i=Next[i])\n    {\n        use[now]=i;\n        int j=to[i];\n        if(itc[j]==itc[now]+1)\n        {\n            int f=doit(j,min(want,cup[i]));\n            get+=f;want-=f;\n            cup[i]-=f;cup[i^1]+=f;\n            if(!want) return get;\n        }\n    }\n    return get;\n}\nvoid max_flow()\n{\n    while(bfs())\n    {\n        for(int i=s;i<=t;++i) use[i]=head[i];\n        ans-=doit(s,inf);\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);t=n*m*5+1;\n    for(int i=1;i<=n;++i)\n    for(int j=1;j<=m;++j)\n    scanf(\"%d\",&it),ans+=it,buid(s,id(i,j),it),buid(id(i,j),s,0);\n     \n    for(int i=1;i<=n;++i)\n    for(int j=1;j<=m;++j)\n    scanf(\"%d\",&it),ans+=it,buid(id(i,j),t,it),buid(t,id(i,j),0);\n     \n    for(int i=1;i<n;++i)\n    for(int j=1;j<=m;++j)\n    {\n        scanf(\"%d\",&it),ans+=it;\n        int iam=n*m+id(i,j);\n        buid(s,iam,it);\n        buid(iam,s,0);\n         \n        buid(iam,id(i,j),inf);\n        buid(id(i,j),iam,0);\n         \n        buid(iam,id(i+1,j),inf);\n        buid(id(i+1,j),iam,0);\n    }\n     \n    for(int i=1;i<n;++i)\n    for(int j=1;j<=m;++j)\n    {\n        scanf(\"%d\",&it),ans+=it;\n        int iam=2*n*m+id(i,j);\n        buid(iam,t,it);\n        buid(t,iam,0);\n         \n        buid(iam,id(i,j),0);\n        buid(id(i,j),iam,inf);\n         \n        buid(iam,id(i+1,j),0);\n        buid(id(i+1,j),iam,inf);        \n    }\n     \n    for(int i=1;i<=n;++i)\n    for(int j=1;j<m;++j)\n    {\n        scanf(\"%d\",&it),ans+=it;\n        int iam=3*n*m+id(i,j);\n        buid(s,iam,it);\n        buid(iam,s,0);\n         \n        buid(iam,id(i,j),inf);\n        buid(id(i,j),iam,0);\n         \n        buid(iam,id(i,j+1),inf);\n        buid(id(i,j+1),iam,0);\n    }\n     \n    for(int i=1;i<=n;++i)\n    for(int j=1;j<m;++j)\n    {\n        scanf(\"%d\",&it),ans+=it;\n        int iam=4*n*m+id(i,j);\n        buid(iam,t,it);\n        buid(t,iam,0);\n         \n        buid(iam,id(i,j),0);\n        buid(id(i,j),iam,inf);\n         \n        buid(iam,id(i,j+1),0);\n        buid(id(i,j+1),iam,inf);        \n    }\n    max_flow();\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1516842163,
        "uid": 35718,
        "name": "MloVtry",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1646 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]happiness\u3011"
    },
    {
        "content": "[$\\Large\\color{#FFBBFF}\\textit{Tian-Xing's blog}$](https://Tian-Xing.github.io)\n\n------------\n\n# Description\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P1646)\n\n------------\n\n# Solution\n\n\u4e00\u79cd\u5217\u65b9\u7a0b\u7684\u5957\u8def\u3002\n\n\u6211\u4eec\u5148\u5355\u72ec\u627e\u51fa\u4e24\u4e2a\u70b9\u7684\u5173\u7cfb\u6765\u8003\u8651\u3002\n\n\u5047\u8bbe\u6709$x$\u548c$y$\u4e24\u4e2a\u540c\u5b66\uff0c\u5411$S$\u8fde\u8fb9\u4ee3\u8868\u9009\u7406\u79d1\uff0c\u5411$T$\u8fde\u8fb9\u4ee3\u8868\u9009\u6587\u79d1\u3002\u8bbe$S$\u5411$x$\u8fde\u7684\u6709\u5411\u8fb9\u4e3a$a$\uff0c$S$\u5411$y$\u8fde\u7684\u6709\u5411\u8fb9\u4e3a$b$\uff0c$x$\u5411$T$\u8fde\u7684\u6709\u5411\u8fb9\u4e3a$c$\uff0c$y$\u5411$T$\u8fde\u7684\u6709\u5411\u8fb9\u4e3a$d$\uff0c$x$\u548c$y$\u4e4b\u95f4\u8fde\u4e86\u4e00\u6761\u53cc\u5411\u8fb9$e$\uff0c\u5272\u6389\u4e00\u6761\u8fb9\u7684\u6d41\u91cf\u4ee3\u8868\u635f\u5931\u4e86\u8fd9\u4e48\u591a\u7684\u6109\u60a6\u503c\u3002\n\n\u8bbe\u90fd\u9009\u7406\u79d1\u7684\u6109\u60a6\u503c\u662f$v_1$\uff0c\u90fd\u9009\u6587\u79d1\u7684\u6109\u60a6\u503c\u662f$v_2$\uff0c\u6309\u7167\u9898\u610f\u53ef\u5217\u65b9\u7a0b\u7ec4\u5982\u4e0b\uff1a\n\n$$a + b = v_1$$\n\n\u8fd9\u662f\u5bf9\u5e94\u7684\u4e24\u4e2a\u540c\u5b66\u90fd\u9009\u7406\u79d1\u3002\n\n$$c + d = v_2$$\n\n\u8fd9\u662f\u5bf9\u5e94\u7684\u4e24\u4e2a\u540c\u5b66\u90fd\u9009\u6587\u79d1\u3002\n\n$$a + e + d = v_1 + v_2$$\n\n\u8fd9\u662f\u5bf9\u5e94\u7684$x$\u9009\u7406\u79d1\uff0c$y$\u9009\u6587\u79d1\u3002\n\n$$b + e + c = v_1 + v_2$$\n\n\u8fd9\u662f\u5bf9\u5e94\u7684$x$\u9009\u6587\u79d1\uff0c$y$\u9009\u7406\u79d1\u3002\n\n\u89e3\u5f97\n\n$$a = b = \\frac{v_1}{2}, c = d = \\frac{v_2}{2}, e = \\frac{v_1 + v_2}{2}$$\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u4ece$S$\u5411\u6bcf\u4e2a\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a\u8be5\u540c\u5b66\u9009\u7406\u79d1\u7684\u6109\u60a6\u503c\u548c\u4ed6\u6240\u6709\u76f8\u90bb\u7684\u540c\u5b66\u9009\u7406\u79d1\u7684\u4e4b\u548c\u7684\u6709\u5411\u8fb9\uff0c\u4ece\u6bcf\u4e2a\u540c\u5b66\u5411$T$\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a\u8be5\u540c\u5b66\u9009\u6587\u79d1\u548c\u4ed6\u6240\u6709\u76f8\u90bb\u7684\u540c\u5b66\u90fd\u9009\u6587\u79d1\u7684\u6109\u60a6\u503c\u4e4b\u548c\u7684\u6709\u5411\u8fb9\u3002\n\n\u6bcf\u4e2a\u540c\u5b66\u5411\u5b83\u76f8\u90bb\u7684\u540c\u5b66\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a\u4ed6\u4eec\u540c\u65f6\u90fd\u9009\u7406\u79d1\u6216\u8005\u6587\u79d1\u7684\u6109\u60a6\u503c\u7684\u5e73\u5747\u503c\u7684\u53cc\u5411\u8fb9\u3002\n\n\u90a3\u4e48\u7b54\u6848\u5c31\u662f\u6240\u6709\u6109\u60a6\u503c\u7684\u548c\u51cf\u53bb\u6700\u5c0f\u5272\u3002\n\n\u6ce8\u610f\u56e0\u4e3a\u8981\u7b97\u5e73\u5747\u503c\uff0c\u6240\u4ee5\u53ef\u80fd\u51fa\u73b0\u5c0f\u6570\uff0c\u8fd9\u6837\u5728\u4e00\u5f00\u59cb\u8fde\u8fb9\u7684\u65f6\u5019\u4e58\u4e8c\uff0c\u6700\u540e\u518d\u9664\u4ee5\u4e8c\u5c31\u884c\u4e86\u3002\n\n------------\n\n# Code\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <queue> \nusing namespace std;\n\nconst int N = 1000050;\nconst int M = 2000050;\nconst int INF = 999999999;\n\nint head[N], num = 1, n, m, s, t, tu[500][500][2], tmp[500][500], sum, d[N], x;\n\nstruct Node\n{\n\tint next, to, flow;\n} edge[M * 2];\n\nvoid Addedge(int u, int v, int w)\n{\n\tedge[++num] = (Node){head[u], v, w};\n\thead[u] = num;\n\treturn;\n}\n\nvoid Add(int u, int v, int w)\n{\n\tAddedge(u, v, w);\n\tAddedge(v, u, 0);\n\treturn;\n}\n\nint Id(int a, int b)\n{\n\treturn (a - 1) * m + b;\n} \n\ntemplate <class T>\nvoid Read(T &x)\n{\n\tx = 0; int p = 0; char st = getchar();\n\twhile (st < '0' || st > '9') p = (st == '-'), st = getchar();\n\twhile (st >= '0' && st <= '9') x = (x << 1) + (x << 3) +st - '0', st = getchar();\t\n\tx = p ? -x : x;\n\treturn;\n} \n\ntemplate <class T>\nvoid Put(T x)\n{\n\tif (x < 0) putchar('-'), x = -x;\n\tif (x > 9) Put(x / 10);\n\tputchar(x % 10 + '0');\n\treturn; \n}\n\nbool Bfs()\n{\n    queue<int> q;\n    for (int i = 0; i <= t; i++) d[i] = 0;\n    d[s] = 1; q.push(s);\n    while (!q.empty())\n    {\n        int u = q.front(); q.pop();\n        for (int i = head[u]; i; i = edge[i].next)\n            if (!d[edge[i].to] && edge[i].flow)\n            {\n                d[edge[i].to] = d[u] + 1;\n                q.push(edge[i].to);\n                if (edge[i].to == t) return 1;\n            }\n    }\n    return 0;\n}\n\nint Dinic(int x, int flow)\n{\n    if (x == t || !flow) return flow;\n    int rest = flow;\n    for (int i = head[x]; i && rest; i = edge[i].next)\n        if (edge[i].flow && d[edge[i].to] == d[x] + 1)\n        {\n            int v = edge[i].to;\n            int tmp = Dinic(v, min(rest, edge[i].flow));\n            rest -= tmp;\n            edge[i].flow -= tmp;\n            edge[i ^ 1].flow += tmp;\n            if (!tmp) d[v] = 0;\n        }\n    return flow - rest;\n}\n\nint Maxflow()\n{\n\tint maxflow = 0, tmp;\n\twhile (Bfs())\n\t{\n\t\ttmp = Dinic(s, INF);\n\t\tif (tmp) maxflow += tmp;\n\t}\n\treturn maxflow;\n}\n\nint main()\n{\n\tRead(n); Read(m); t = n * m + 1;\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t{\n\t\t\tRead(x);\n\t\t\tsum += x;\n\t\t\ttu[i][j][1] += x * 2;\n\t\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t{\n\t\t\tRead(x);\n\t\t\tsum += x;\n\t\t\ttu[i][j][0] += x * 2;\n\t\t}\n\tfor (int i = 1; i <= n - 1; i++)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t{\n\t\t\tRead(x);\n\t\t\tsum += x;\n\t\t\ttmp[i][j] += x;\n\t\t\ttu[i][j][1] += x;\n\t\t\ttu[i + 1][j][1] += x;\n\t\t}\n\tfor (int i = 1; i <= n - 1; i++)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t{\n\t\t\tRead(x);\n\t\t\tsum += x;\n\t\t\ttmp[i][j] += x;\n\t\t\tAdd(Id(i, j), Id(i + 1, j), tmp[i][j]);\n\t\t\tAdd(Id(i + 1, j), Id(i, j), tmp[i][j]);\n\t\t\ttu[i][j][0] += x;\n\t\t\ttu[i + 1][j][0] += x;\n\t\t\ttmp[i][j] = 0;\n\t\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m - 1; j++)\n\t\t{\n\t\t\tRead(x);\n\t\t\tsum += x;\n\t\t\ttmp[i][j] += x;\n\t\t\ttu[i][j][1] += x;\n\t\t\ttu[i][j + 1][1] += x; \n\t\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m - 1; j++)\n\t\t{\n\t\t\tRead(x);\n\t\t\tsum += x;\n\t\t\ttmp[i][j] += x;\n\t\t\tAdd(Id(i, j), Id(i, j + 1), tmp[i][j]);\n\t\t\tAdd(Id(i, j + 1), Id(i, j), tmp[i][j]);\n\t\t\ttu[i][j][0] += x;\n\t\t\ttu[i][j + 1][0] += x;\n\t\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t{\n\t\t\tAdd(s, Id(i, j), tu[i][j][0]);\n\t\t\tAdd(Id(i, j), t, tu[i][j][1]);\n\t\t}\n\tPut(sum - Maxflow() / 2); \n\treturn 0;\n}\n```",
        "postTime": 1584177041,
        "uid": 73983,
        "name": "Infiltrator",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1646 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]happiness\u3011"
    },
    {
        "content": "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**\u5206\u6790\u4e0e\u9898\u89e3\uff1a**\u8fd9\u5c31\u662f\u4f8b\u9898\u4e8c\u7684\u9650\u5236\u6761\u4ef6\u8fdb\u884c\u4e00\u4e0b\u5c0f\u66f4\u6539\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u540c\u5b66\uff0c\u4e0d\u662f\u8981\u548c\u76f8\u90bb\u540c\u5b66\u90fd\u9009\u62e9\u4e00\u4e2a\u624d\u80fd\u6709\u989d\u5916\u6536\u76ca\uff0c\u800c\u662f\u53ea\u6709\u4e00\u4e2a\u4e00\u6837\u5c31\u80fd\u6709\u989d\u5916\u6536\u76ca\u3002\n\n```c++\n// luogu-judger-enable-o2\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#include <algorithm>\nusing namespace std;\n#define N 110\n#define inf 1000000001\nint n,m,s,t,ans,idx=1;\nint head[N*N],cur[N*N],to[(N*N)<<3],val[(N*N)<<3],nxt[(N*N)<<3];\nint math[N][N],chin[N][N];int dis[N*N];\nint ea_ma_x[N][N],ea_ch_x[N][N];\nint ea_ma_y[N][N],ea_ch_y[N][N];\nint find_id(int a,int b) {return (a-1)*m+b;}\nvoid add(int a,int b,int c)\n{nxt[++idx]=head[a],to[idx]=b,val[idx]=c,head[a]=idx;}\nbool bfs()\n{\n    memset(dis,-1,sizeof(dis));\n    queue <int> q; q.push(s),dis[s]=0;\n    while(!q.empty())\n    {\n        int p=q.front();q.pop();\n        if(p==t) return true;\n        for(int i=head[p];i;i=nxt[i])\n            if(val[i]>0&&dis[to[i]]==-1)\n                dis[to[i]]=dis[p]+1,q.push(to[i]);\n    } return false;\n}\nint dfs(int p,int flow)\n{\n    int now,temp=flow;\n    if(p==t) return flow;\n    for(int i=cur[p];i;i=nxt[i])\n        if(dis[to[i]]==dis[p]+1&&val[i]>0)\n        {\n            now=dfs(to[i],min(val[i],temp));\n            if(!now) dis[to[i]]=-1;\n            temp-=now,val[i]-=now,val[i^1]+=now;\n            if(val[i]) cur[p]=i;\n            if(!temp) break;\n        } return flow-temp;\n}\nvoid dinic() {while(bfs()) memcpy(cur,head,sizeof(head)),ans-=dfs(s,inf);}\nint main()\n{\n    scanf(\"%d%d\",&n,&m),s=n*m+1,t=n*m+2;\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            scanf(\"%d\",&math[i][j]),ans+=2*math[i][j];\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            scanf(\"%d\",&chin[i][j]),ans+=2*chin[i][j];\n    for(int i=1;i<n;i++)\n        for(int j=1;j<=m;j++) \n            scanf(\"%d\",&ea_ma_x[i][j]),ans+=2*ea_ma_x[i][j];\n    for(int i=1;i<n;i++)\n        for(int j=1;j<=m;j++) \n            scanf(\"%d\",&ea_ch_x[i][j]),ans+=2*ea_ch_x[i][j];\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<m;j++) \n            scanf(\"%d\",&ea_ma_y[i][j]),ans+=2*ea_ma_y[i][j];\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<m;j++) \n            scanf(\"%d\",&ea_ch_y[i][j]),ans+=2*ea_ch_y[i][j];\n    for(int i=1;i<=n;i++) for(int j=1;j<=m;j++)\n    {\n        add(s,find_id(i,j),math[i][j]*2+ea_ma_x[i-1][j]\n            +ea_ma_x[i][j]+ea_ma_y[i][j-1]+ea_ma_y[i][j]);\n        add(find_id(i,j),s,0);\n        add(find_id(i,j),t,chin[i][j]*2+ea_ch_x[i-1][j]\n            +ea_ch_x[i][j]+ea_ch_y[i][j-1]+ea_ch_y[i][j]);\n        add(t,find_id(i,j),0);\n        if(i!=n) add(find_id(i,j),find_id(i+1,j),ea_ch_x[i][j]+ea_ma_x[i][j]),\n            add(find_id(i+1,j),find_id(i,j),ea_ch_x[i][j]+ea_ma_x[i][j]);\n        if(j!=m) add(find_id(i,j),find_id(i,j+1),ea_ch_y[i][j]+ea_ma_y[i][j]),\n            add(find_id(i,j+1),find_id(i,j),ea_ch_y[i][j]+ea_ma_y[i][j]);\n    } dinic();\n    printf(\"%d\\n\",ans/2);\n}\n```",
        "postTime": 1545619435,
        "uid": 52851,
        "name": "ysy20021208",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1646 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]happiness\u3011"
    }
]