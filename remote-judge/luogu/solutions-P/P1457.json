[
    {
        "content": "# [\u535a\u5ba2\u56ed\u4f53\u9a8c\u66f4\u4f73](https://www.cnblogs.com/zhaohaikun/p/12189327.html)\n\n\u6765\u8ba8\u8bba\u533a\u5927\u6447\u5927\u6446\u5730\u901b\u4e86\u4e00\u5708\u540e\uff0c\u6211\u53d1\u73b0\u7adf\u7136\u5927\u5bb6\u7684\u4ee3\u7801\n# \u90fd\u5f88\u957f\n\u7136\u800c\u4ee3\u7801\u771f\u7684\u8981\u5199\u90a3\u4e48\u957f\u5417\n\n\n------------\n\n\u9996\u5148\uff0c\u6765\u5206\u6790\u95ee\u9898\uff0c1\uff0c2\uff0c4\uff0c8\uff0c\u8fd9\u4e9b\u6570\u663e\u7136\u662f\u6709\u7279\u70b9\u7684\uff0c\u4e5f\u8bb8\u4f60\u5df2\u7ecf\u60f3\u5230\u4e86\u6ca1\u9519\uff0c\u5b83\u4eec\u90fd\u662f2\u7684\u6b21\u65b9\u6570\u3002\n\n\n1\u662f2\u76840\u6b21\u65b9\n\n\n2\u662f2\u76841\u6b21\u65b9\n\n\n4\u662f2\u76842\u6b21\u65b9\n\n8\u662f2\u76843\u6b21\u65b9\n\n\u77e5\u9053\u8fd9\u4e2a\u5c31\u597d\u529e\u4e86\uff0c\u7528\u4ec0\u4e48\u5462\uff1f\u6ca1\u9519\u662f\u4f4d\u8fd0\u7b97\uff0c\u54c8\u54c8\uff01\n\n1\u7684\u4e8c\u8fdb\u5236\u662f1\n\n2\u7684\u4e8c\u8fdb\u5236\u662f10\n\n4\u7684\u4e8c\u8fdb\u5236\u662f100\n\n8\u7684\u4e8c\u8fdb\u5236\u662f1000\n\n\u4e8e\u662f\uff0c\u5c31\u5f97\u51fa\u4e86\u4ee5\u4e0b\u4ee3\u7801\uff1a\n\n```cpp\nif(x&1)a[i][j][0]=1;\nif(x&2)a[i][j][1]=1;\nif(x&4)a[i][j][2]=1;\nif(x&8)a[i][j][3]=1;\n```\n\n\u5927\u5bb6\u4e5f\u770b\u5230\u4e86\uff0c\u6211\u7528\u4e86\u4e00\u4e2a3\u7ef4\u6570\u7ec4\uff0ca[55][55][4]\u3002\n\n\u770b\u5230\u8fd9\u9053\u9898\uff0c\u6211\u9996\u5148\u60f3\u5230\u7684\u662f\u5bbd\u641c\uff08\u5bbd\u5ea6\u4f18\u5148\u641c\u7d22\uff09\uff0c\u7528\u6570\u7ec4\u6a21\u62df\uff0c\u8fd9\u9053\u9898\u7684\u6570\u636e\u8303\u56f4\u4e0d\u5927\uff0c\u7528\u6570\u7ec4\u5b8c\u5168\u53ef\u80fd\u3002\n\n\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>//\u7528\u4e07\u80fd\u5934\u6587\u4ef6\u5f00\u59cb\u4e86\u4ee3\u7801\nusing namespace std;//\u547d\u540d\u7a7a\u95f4\nint n,m,h[55][55],a[55][55][4],s,ans,z1,z2;\nint q1[10010],q2[10010],f[10010];\nint dx[4]={0,-1,0,1},dy[4]={-1,0,1,0};\nchar z3;\nstring z=\"WNEA\";\nint main(){\n\tcin>>m>>n;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tint x;\n\t\t\tcin>>x;\n\t\t\tif(x&1)a[i][j][0]=1;//\u4f4d\u8fd0\u7b97\n\t\t\tif(x&2)a[i][j][1]=1;//\u4f4d\u8fd0\u7b97\n\t\t\tif(x&4)a[i][j][2]=1;//\u4f4d\u8fd0\u7b97\n\t\t\tif(x&8)a[i][j][3]=1;//\u4f4d\u8fd0\u7b97\n\t\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tif(!h[i][j]){\n\t\t\t\tint front=0,rear=1,sum=1;\n\t\t\t\tq1[1]=i;\n\t\t\t\tq2[1]=j;\n\t\t\t\th[i][j]=++s;\n\t\t\t\twhile(front<rear){//\u5f00\u59cb\u5bbd\u641c\n\t\t\t\t\tfront++;\n\t\t\t\t\tint x=q1[front],y=q2[front];\n\t\t\t\t\tfor(int k=0;k<=3;k++){\n\t\t\t\t\t\tint tx=x+dx[k],ty=y+dy[k];\n\t\t\t\t\t\tif(tx>0&&tx<=n&&ty>0&&ty<=m&&!h[tx][ty]&&!a[x][y][k]){\n\t\t\t\t\t\t\th[tx][ty]=s;\n\t\t\t\t\t\t\tsum++;\n\t\t\t\t\t\t\tq1[++rear]=tx;\n\t\t\t\t\t\t\tq2[rear]=ty;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}ans=max(ans,sum);\n\t\t\t\tf[s]=sum;//\u8bb0\u5f55\u7f16\u53f7s\u7684\u623f\u95f4\u7684\u95f4\u6570\n\t\t\t}\n\tcout<<s<<endl<<ans<<endl;\n\tfor(int j=1;j<=m;j++)//\u8fd9\u91cc\u6709\u5751\n\t\tfor(int i=n;i>=1;i--)//\u8fd9\u91cc\u6709\u5751\n\t\t\tfor(int k=1;k<=2;k++)\n\t\t\t\tif(a[i][j][k]){\n\t\t\t\t\tint tx=i+dx[k],ty=j+dy[k];\n\t\t\t\t\tint x=f[h[tx][ty]]+f[h[i][j]];//\u6d3b\u7528\u6570\u7ec4\u4e0b\u6807\n\t\t\t\t\tif(x>ans&&h[tx][ty]!=h[i][j]){//\u4e00\u5b9a\u8981\u6ce8\u610fh[tx][ty]!=h[i][j]\uff0c\u6709\u65f6\u5019\u5c3d\u7ba1\u6709\u5899\uff0c\u4f46\u80fd\u901a\u8fc7\u522b\u7684\u623f\u95f4\uff0c\u8fbe\u5230\u8fd9\u4e2a\u623f\u95f4\u3002\uff08\u8003\u8651\u8981\u5468\u5168\uff09\n\t\t\t\t\t\tans=x;\n\t\t\t\t\t\tz1=i;\n\t\t\t\t\t\tz2=j;\n\t\t\t\t\t\tz3=z[k];\n\t\t\t\t\t}\n\t\t\t\t}\n\tcout<<ans<<endl<<z1<<\" \"<<z2<<\" \"<<z3;\n\treturn 0;//\u534e\u4e3d\u7ed3\u675f\n}\n```\n",
        "postTime": 1557234996,
        "uid": 180242,
        "name": "orzdevinwang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "### \u8f7b\u5ea6\u4e2d\u6bd2 \uff08\u9898\u89e3 in Luogu)\n\n\u660e\u660e\u8fa3\u4e48\u7b80\u5355\u7684\u4e00\u9053\u9898\uff0c\u786c\u662f\u641e\u4e861.5h,WTF?\u4ee5\u4e0b\u5217\u51fa\u672c\u9898\u7684\u4e00\u4e9b\u8981\u70b9\u3002\n\n\n- \u641c\u7d22(DFS)\u561b\uff0c\u67d3\u8272\u561b\uff0c\u7edf\u8ba1\u5927\u5c0f\u561b\uff0c\u5f88\u5bb9\u6613\u60f3\uff0c\u4e5f\u5f88\u66f4\u6613\u5904\u7406\u3002\n\n- \u63a5\u4e0b\u6765\u5c31\u53ea\u9700\u8981\u679a\u4e3e\u5899\uff0c\u5f97\u51fa\u6700\u5927\u503c\u4e86\u3002\u597d\u50cf\u5f88\u7b80\u5355\u7684\u6837\u5b50QAQ\u2014\u2014but \u2116!\u6211\u2122\u5c31\u662f\u5728\u8fd9\u91cc\u6298\u817e\u4e86\u4e00\u4e2a\u5c0f\u65f6\uff08\u53ef\u80fd\u662f\u6211\u592a\u83dc\u4e86\uff09\u3002\n\n- \u849f\u84bb\u7edf\u8ba1\u7684\u601d\u8def\u662f\uff1a\u5317\u5899(-1,0)\u4e0e\u4e1c\u5899(0,+1)\u5206\u5f00\u679a\u4e3e\uff0c\u5f97\u5230\u5404\u81ea\u7684\u6700\u4f18\u89e3\uff0c\u7136\u540e\u518d\u6bd4\u8f83\u8fd9\u4e24\u4e2a\u89e3\uff0c\u8f93\u51fa\u66f4\u597d\u7684\u90a3\u4e2a(\u6342\u8138\uff09\u3002\n\n- \u8be6\u7ec6\u89c1\u4e11\\*\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nmain() {}\nconst int fx[]= {0,-1,0,1};//W,N,E,S\nconst int fy[]= {-1,0,1,0};\nint n,m,id[51][51],a[51][51],tot,room[50*50+1];\nvoid clor(int x,int y,int c) {\n    id[x][y]=c;\n    room[c]++;//\u9762\u79ef\n    for(int i=0,nx,ny; i<4; i++)\n        if(!(a[x][y]&(1<<i)))  {//\u7f8e\u4e3d\u7684\u4e8c\u8fdb\u5236\u89e3\u6790\n            nx=x+fx[i],ny=y+fy[i];\n            if(nx>0&&ny>0&&nx<=n&&ny<=m&&!id[nx][ny])\n                clor(nx,ny,c);\n        }\n}\nint entry() {\n    scanf(\"%d%d\",&m,&n);\n    for(int i=1; i<=n; i++) {\n        for(int j=1; j<=m; j++)\n            scanf(\"%d\",&a[i][j]);\n    }\n    for(int i=1; i<=n; i++) {//\u67d3\u8272\n        for(int j=1; j<=m; j++)\n            if(!id[i][j])\n                clor(i,j,++tot);\n    }\n    int maxn=*std::max_element(room+1,room+tot+1);\n    printf(\"%d\\n\"\"%d\\n\",tot,maxn);\n    int ans1=maxn,ans2=maxn;\n    int x1=n,y1=0,x2=n,y2=0;\n    for(int i=1; i<=n; i++)\n        for(int j=1; j<=m; j++) {\n            if((a[i][j]&2)&&id[i][j]!=id[i-1][j]&&ans1<=room[id[i][j]]+room[id[i-1][j]]) {\n                if(ans1!=room[id[i][j]]+room[id[i-1][j]]) x1=i,y1=j;\n                else if(j<y1) y1=j,x1=i;//West\n                else if(j==y1 && i>x1) x1=i;//South\n                ans1=room[id[i][j]]+room[id[i-1][j]];\n            }//\u5317\u5899\n            if((a[i][j]&4)&&id[i][j]!=id[i][j+1]&&ans2<=room[id[i][j]]+room[id[i][j+1]]) {\n                if(ans2!=room[id[i][j]]+room[id[i][j+1]]) x2=i,y2=j;\n                else if(j<y2) y2=j,x2=i;//West\n                else if(j==y2 && i>x2) x2=i;//South\n                ans2=room[id[i][j]]+room[id[i][j+1]];\n            }//\u4e1c\u5899\n        }\n    if(ans1>ans2) printf(\"%d\\n%d %d N\\n\",ans1,x1,y1);\n    else if(ans1<ans2) printf(\"%d\\n%d %d E\\n\",ans2,x2,y2);//maxmize result\n    else if(y1<y2) printf(\"%d\\n%d %d N\\n\",ans1,x1,y1);\n    else if(y1>y2) printf(\"%d\\n%d %d E\\n\",ans2,x2,y2);//west\n    else if(x1>x2) printf(\"%d\\n%d %d N\\n\",ans1,x1,y1);\n    else if(x1<x2) printf(\"%d\\n%d %d E\\n\",ans2,x2,y2);//south\n    else printf(\"%d\\n%d %d N\\n\",ans1,x1,y1);\n}\nint aptal=entry();\n```\n\u5b89\u5229\u4e00\u4e0b\u4e2a\u4eba\u535a\u5ba2\uff1a[\u6211\u662f\u4f20\u9001\u95e8](http://www.cnblogs.com/FreeRing/p/7904348.html)\n",
        "postTime": 1511767591,
        "uid": 34920,
        "name": "\u65e9\u53f3\u6615",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "~~\u56fe\u8bba\u9898\u786c\u662f\u505a\u6210\u4e86bfs~~\n\n\u54b3\u54b3\uff0c\u4e00\u5f00\u59cb\u60f3\u6ca1\u6709\u8d1f\u6570\uff0c\u8f93\u5165\u6d41\u5c31\u6ca1\u6709\u7279\u6b8a\u5904\u7406\u8d1f\u6570\uff0c\u7ed3\u679c\u4e00\u76f4WA\u3002~~\u4e0d\u7981\u60f3\u8d77\u4e86\u4e66\u7684\u590d\u5236\u91cc\u4e66\u7684\u9875\u6570\u7adf\u7136\u4e5f\u6709\u8d1f\u6570~~\n\n--------------------\u8bf7\u5ffd\u7565\u4e0a\u8ff0\u5185\u5bb9\n\n#\u601d\u8def\n\n\u9996\u5148\u8f93\u5165\uff0c\u7528wall[i][j][k](1<=i<=n,1<=j<=m,1<=k<=4)\u8868\u793ai,j\u8fd9\u4e2a\u65b9\u683c\u7684\u5468\u56f4\u662f\u5426\u6709\u5899\u3002\n\n\u7528ce[i][j]\u8868\u793a\u8fd9\u4e2a\u623f\u95f4\u662f\u7b2c\u51e0\u95f4\u623f\u95f4\uff0c\u987a\u4fbf\u7528\u6765\u5c01\u8def\u3002\n\n\u7528fjh[i]\u8868\u793a\u7b2ci\u4e2a\u623f\u95f4\u4ed6\u7684\u623f\u95f4\u9762\u79ef\u3002\n\n\u6211\u4eec\u6bcf\u6b21\u627e\u5230\u4e24\u4e2a\u623f\u95f4\u53f7\u4e0d\u4e00\u6837\u7684\u623f\u95f4\uff0c\u62c6\u9664\u4ed6\u4eec\u4e4b\u95f4\u7684\u5899\uff0c\u628a\u4e24\u4e2a\u623f\u95f4\u7684\u9762\u79ef\u52a0\u5728\u4e00\u8d77\uff0c\u53d6\u5176\u4e2d\u7684\u6700\u5927\u503c\uff08**\u6ce8\u610f\uff0c\u5357\u65b9\u548c\u897f\u65b9\u7684\u623f\u95f4\u4f18\u5148**\uff09\n\n#\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#define r(i,a,b) for (int i=a;i<=b;i++)\n#define check1 fjh[ce[i][j]]+fjh[ce[i][j-1]]>ans||(fjh[ce[i][j]]+fjh[ce[i][j-1]]==ans&&j-1<qy)||(fjh[ce[i][j]]+fjh[ce[i][j-1]]==ans&&j-1==qy&&i>qx)//\u989d\uff0c\u8fd9\u4e00\u4e32\u6709\u70b9\u96be\u7406\u89e3\uff0c\u5148\u770b\u4e0b\u9762\u7684\u3002\n#define check2 fjh[ce[i][j]]+fjh[ce[i-1][j]]>ans||(fjh[ce[i][j]]+fjh[ce[i-1][j]]==ans&&j<qy)||(fjh[ce[i][j]]+fjh[ce[i-1][j]]==ans&&j==qy&&i>qx)//\u8fd9\u4e9b\u653e\u5728\u540e\u9762\u8bf4\nusing namespace std;int head,tail;//\u961f\u9996\u961f\u5c3e\nint n,m,k,fj,maxn,maxfj;//n\uff0cm\u4e3a\u77e9\u9635\u7684\u5927\u5c0f\uff0c\u662f\u6bcf\u6b21\u8f93\u5165\u7684\u6570\uff0cfj\u8868\u793a\u6709\u51e0\u95f4\u623f\u95f4\uff0cmaxn\u6ca1\u7528\uff08\u989d\uff09\uff0cmaxfj\u4e3a\u623f\u95f4\u9762\u79ef\nint ce[50+10][50+10];//ce\u4e3a\u8fd9\u4e2a\u623f\u95f4\u7684\u7f16\u53f7\uff0c\u5c31\u662f\u4ed6\u662f\u7b2c\u51e0\u95f4\uff0c\u987a\u5e26\u5c01\u8def\nbool wall[50+10][50+10][5];//\u8868\u793awall[i][j]\u5468\u56f4\u662f\u5426\u6709\u5899\u58c1\nint ans,qx,qy;//ans\u662f\u62c6\u4e86\u4e00\u9762\u5899\u540e\u6700\u5927\u7684\u623f\u95f4\u9762\u79ef\uff0c(qx,qy)\u4e3a\u62c6\u7684\u90a3\u9762\u5899\u7684\u5750\u6807\nint state[2500+10][3],father[2500+10];//\u5e7f\u641c\u6570\u7ec4\u4e0d\u7528\u89e3\u91ca\u5427\nchar ans2;int fjh[2500+10];//ans2\u7528\u6765\u8868\u793a\u6700\u540e\u662f\u62c6\u5317\u65b9\u7684\u8fd8\u662f\u4e1c\u65b9\u7684\nconst short dx[4]={-1,0,1,0};\nconst short dy[4]={0,1,0,-1};//\u56db\u4e2a\u65b9\u5411\nint max(int x,int y)//\u6700\u5927\u503c\u4e0d\u89e3\u91ca\n{\n    return x>y?x:y;\n}\nvoid read(int &f)//\u8f93\u5165\u6d41\n{\n    f=0;char c;bool d=1;\n    while (c=getchar(),c<'0'||c>'9') if (c=='-') d=0;f=f*10+c-48;//\u6c57\u989c\u3002\u3002\u3002\n    while (c=getchar(),c>='0'&&c<='9') f=f*10+c-48;\n    if (!d) f*=-1;\n}\nbool check(int x,int y,int ox,int oy)//\u5224\u65ad(ox,oy)\u80fd\u5426\u5230\u8fbe(x,y)\n{\n    if (x<1||y<1||x>n||y>m) return false;//\u8dd1\u51fa\u57ce\u5821\n    if (ox-1==x&&y==oy&&!wall[ox][oy][1]) return true;//\u5317\u9762\u53ef\u4ee5\u8d70\n    if (ox+1==x&&y==oy&&!wall[ox][oy][2]) return true;//\u5357\u9762\u53ef\u4ee5\u8d70\n    if (ox==x&&oy-1==y&&!wall[ox][oy][3]) return true;//\u897f\u9762\u53ef\u4ee5\u8d70\n    if (ox==x&&oy+1==y&&!wall[ox][oy][4]) return true;//\u4e1c\u9762\u53ef\u4ee5\u8d70\n    return false;//\u5426\u5219\n}\nvoid bfs(int x,int y)\n{\n    if (ce[x][y]>0) return;//\u5982\u679c\u8fd9\u4e2a\u623f\u95f4\u5df2\u7ecf\u641c\u8fc7\u4e86\u76f4\u63a5\u63a8\u51fa\n    head=0;tail=1;fj++;//\u623f\u95f4\u603b\u6570\u52a0\u4e00\n    state[1][1]=x;\n    state[1][2]=y;ce[x][y]=fj;//\u521d\u59cb\u5316\n    do\n    {\n        head++;\n        r(i,0,3)\n         {\n             int nx=state[head][1]+dx[i];\n             int ny=state[head][2]+dy[i];\n             if (check(nx,ny,state[head][1],state[head][2])&&!ce[nx][ny])//\u53ef\u4ee5\u5230\u8fbe\u5e76\u4e14\u6ca1\u6709\u8d70\u8fc7\n             {\n                 tail++;\n                 father[tail]=head;\n                 state[tail][1]=nx;\n                 state[tail][2]=ny;//\u5165\u961f\n                 ce[nx][ny]=fj;//\u5c01\u8def\n             }\n         }\n    }while(head<tail);\n}\nint main()\n{\n    read(m);read(n);//\u4e00\u5b9a\u8981\u8bb0\u5f97\u53cd\u8fc7\u6765\uff0c\u5176\u4ed6\u4e00\u6837\n    r(i,1,n)\n     r(j,1,m)\n      {\n          if (i==1) k-=2;\n          if (i==n) k-=8;\n          if (j==1) k-=4;\n          if (j==n) k--;//\u8fb9\u754c\u5904\u7406\uff0c\u56e0\u4e3a\u4ed6\u8bf4\u56db\u5468\u90fd\u6709\u5899\n          read(k);\n          if (k>=8) {wall[i][j][2]=true;k-=8;}//\u5148\u51cf\u53bb\u5927\u7684\uff0c\u53cd\u8fc7\u6765\u4f1a\u9519\n          if (k>=4) {wall[i][j][4]=true;k-=4;}\n          if (k>=2) {wall[i][j][1]=true;k-=2;}\n          if (k>=1) {wall[i][j][3]=true;k-=1;}\n      }\n    r(i,1,n)\n     r(j,1,m)\n      {\n          bfs(i,j);//\u5e7f\u641c\n          fjh[fj]=tail;//\u5b58\u4e0b\u7b2cfj\u4e2a\u623f\u95f4\u5bf9\u5e94\u7684\u9762\u79ef\u4e5f\u5c31\u662ftail\n          maxfj=max(maxfj,tail);//\u53d6\u4e0b\u6700\u5927\u7684\u623f\u95f4\n      }\n    printf(\"%d\\n%d\\n\",fj,maxfj);//\u8f93\u51fa\u623f\u95f4\u603b\u6570\u548c\u6700\u5927\u7684\u623f\u95f4\u9762\u79ef\n    r(i,1,n)\n     r(j,1,m)\n     {\n         if (wall[i][j][3]&&ce[i][j-1]!=ce[i][j])//\u5982\u679c\u4e1c\u9762\u6709\u5899\u5e76\u4e14\u8fd9\u4e24\u4e2a\u65b9\u683c\u4e0d\u662f\u540c\u4e00\u4e2a\u623f\u95f4\n          if (check1)//\u8fd9\u91cc\u6709\u70b9\u590d\u6742\uff1a\u5982\u679c\u8fd9\u4e24\u4e2a\u623f\u95f4\u9762\u79ef\u7684\u548c\u5927\u4e8e\u6700\u4f18\u89e3\u5c31\u8fdb\u884c\u4e0b\u9762\u7684\u8bed\u53e5\u3002\u5982\u679c\u9762\u79ef\u76f8\u7b49\u5c31\u770b\u54ea\u4e2a\u66f4\u52a0\u9760\u8fd1\u897f\u8fb9\uff0c\u5982\u679c\u79bb\u897f\u9762\u4e00\u6837\u8fd1\u5c31\u770b\u54ea\u4e2a\u66f4\u52a0\u9760\u8fd1\u5357\u9762\u3002\n          {\n              ans=fjh[ce[i][j]]+fjh[ce[i][j-1]];//\u4fdd\u5b58\u6700\u4f18\u89e3\n              qx=i;qy=j-1;//\u4fdd\u5b58\u5750\u6807\uff0c\u51cf\u4e00\u662f\u56e0\u4e3a\u662f\u5012\u63a8\uff0c\u56e0\u4e3a\u5982\u679c\u662fj\u5c31\u662f\u6c42\u4e1c\u8fb9\u7684\uff0c\u4f46\u8fd9\u6837\u7684\u7ed3\u679c\u548c\u6c42\u897f\u8fb9\u662f\u4e00\u6837\u7684\uff0c\u800c\u4e14\u5982\u679c\u6309\u7167\u9898\u76ee\u7ed9\u7684\u6a21\u62df\u7684\u8bdd\uff0c\u8fd8\u8981\u5904\u7406\u8fb9\u754c \uff0c\u800c\u5982\u679c\u53cd\u8fc7\u6765\u5c31\u6ca1\u6709\u8fd9\u6837\u7684\u987e\u5fcc\u4e86\u3002\n              ans2='E';//\u5b58\u4e0b\u65b9\u5411\n          }\n         if (wall[i][j][1]&&ce[i][j]!=ce[i-1][j])//\u8ddf\u4e0a\u9762\u9053\u7406\u662f\u4e00\u6837\u7684\uff0c\u4e0d\u8fc7\u6709\u4eba\u4f1a\u95ee\uff1a\u4e0d\u662f\u4f18\u5148\u8003\u8651\u5317\u65b9\u5417\uff1f\u600e\u4e48\u5317\u65b9\u8fd8\u5728\u540e\u9762\u5462\uff1f\u8fd9\u91cc\u89e3\u91ca\u4e00\u4e0b\uff0c\u56e0\u4e3a\u8fd9\u6837\u624d\u662f\u4f18\u5148\u8003\u8651\u5317\u65b9\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u5982\u679c\u6211\u5148\u6c42\u51fa\u4e86\u4e1c\u65b9\u53ef\u4ee5\uff0c\u90a3\u4e48\u6211\u8fd8\u4f1a\u518d\u6c42\u5317\u65b9\uff0c\u8fd9\u662f\u5317\u65b9\u5c31\u66ff\u4ee3\u4e86\u4e1c\u65b9\uff0c\u4e5f\u5c31\u76f8\u5f53\u4e8e\u5317\u65b9\u4f18\u5148\u4e86\n          if (check2)\n          {\n              ans=fjh[ce[i][j]]+fjh[ce[i-1][j]];\n              qx=i;qy=j;\n              ans2='N';\n          }\n     }\n    printf(\"%d\\n%d %d %c\",ans,qx,qy,ans2);//\u8f93\u51fa\u7b54\u6848\n}\n```",
        "postTime": 1514624274,
        "uid": 52915,
        "name": "Ajwallet",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "```cpp\n/*\n\u4e2a\u4eba\u611f\u89c9\u662f\u4e00\u9053\u4e0d\u9519\u7684\u6a21\u62df+\u641c\u7d22\u7684\u9898\uff0c\u505a\u4e86\u4e00\u4e0a\u5348\uff0c\u505a\u4e24\u5c0f\u65f6\uff0c\u8c03\u4e00\u5c0f\u65f6\uff0c\u6709\u4e00\u4e9b\u7ec6\u8282\u9700\u8981\u6ce8\u610f\u3002\n\nans_sum:\u623f\u95f4\u6570\u91cf\nans_max:\u6700\u5927\u7684\u623f\u95f4\u7684\u9762\u79ef\nans_area:\u628a\u5899\u63a8\u5012\u540e\u6700\u5927\u7684\u623f\u95f4\u7684\u9762\u79ef\nans_x:\u63a8\u5899\u7684\u683c\u5b50\u7684\u6a2a\u5750\u6807\nans_y:\u63a8\u5899\u7684\u683c\u5b50\u7684\u7eb5\u5750\u6807\nans_dir:\u63a8\u5899\u7684\u65b9\u5411 \n\n\u6309\u9898\u76ee\u7684\u610f\u601d\u5efa\u4e00\u4e2a\u56fe\uff0c\u6bcf\u4e2a\u623f\u95f4\u683c\u5360\u4e00\u683c\uff0c\u5899\u5360\u4e00\u683c\u3002\n\u753b\u51fa\u6765\u662f\u8fd9\u4e2a\u6837\u5b50\uff1a\n     #\n    #O#\n     # \n\u56db\u4e2a\u89d2\u4e0a\u4e0d\u7528\u6807\u8bb0\u4e3a\u5899\uff0c\u56e0\u4e3a\u62c6\u5899\u7684\u65b9\u5411\u90fd\u662f\u5e73\u884c\u4e8ex\u3001y\u8f74\u7684\u3002 \n\n\u524d\u4e24\u95ee\uff1a\n    \u2460\u628a\u56fe\u5efa\u8d77\u6765\u4ee5\u540e\u8dd1dfs\uff0c\u628a\u5404\u4e2a\u623f\u95f4\u683c\u8fde\u6210\u8054\u901a\u5757\uff0c\u53d8\u6210\u4e00\u4e2a\u623f\u95f4\u3002\n    \u2461for\u5faa\u73af\u5bfb\u627e\u90a3\u4e9b\u6ca1\u6709\u88ab\u8fde\u6210\u623f\u95f4\u7684\u5757\uff0c\u7136\u540e\u4ece\u8fd9\u4e2a\u70b9dfs\uff0c\u540c\u65f6\u8ba9\u623f\u95f4\u6570++\u3002\n    \u2462dfs\u7684\u65f6\u5019\u8bb0\u5f55\u5f53\u524d\u8054\u901a\u5757\u7684\u9762\u79efcnt\uff0c\u4ee5\u53ca\u5f53\u524d\u683c\u5b50\u5c5e\u4e8e\u54ea\u4e2a\u8054\u901a\u5757\n    \u2463for\u5faa\u73af\u4e00\u904d\uff0cdfs\u7684\u6b21\u6570\u5c31\u662f\u623f\u95f4\u7684\u6570\u91cf\uff0c\u6700\u5927\u9762\u79efans_max\u5728\u6bcf\u6b21dfs\u540e\u53d6max\uff0c\u8fd9\u6837\u524d\u4e24\u95ee\u5c31\u89e3\u51b3\u4e86\u3002\n\n\u540e\u4e24\u95ee\uff1a\n    \u2460\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u5c3d\u91cf\u9760\u897f\u9760\u5357\uff0c\u6240\u4ee5\u8ba9\u884ci\u4ece\u5927\u5230\u5c0f\u5faa\u73af\uff0c\u8ba9\u5217j\u4ece\u5c0f\u5230\u5927\u5faa\u73af\u3002\n    \u2461\u5c06\u5899\u63a8\u5012\u80fd\u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e\u7684\u60c5\u51b5\u5f53\u4e14\u4ec5\u5f53\u5899\u4e24\u8fb9\u7684\u683c\u5b50\u4e0d\u5c5e\u4e8e\u540c\u4e00\u4e2a\u623f\u95f4\u3002 \n    \u2462\u5982\u679cans_area\u5c0f\u4e8e\u5c06\u5f53\u524d\u7684\u5899\u6253\u7a7f\u540e\u4e24\u4e2a\u623f\u95f4\u7684\u9762\u79ef\u7684\u548c\uff0c\u90a3\u4e48\u76f4\u63a5\u66f4\u65b0\u7b54\u6848\u3002\n    \u2463\u5982\u679cans_area\u7b49\u4e8e\u5c06\u5f53\u524d\u7684\u5899\u6253\u7a7f\u540e\u4e24\u4e2a\u623f\u95f4\u7684\u9762\u79ef\u7684\u548c\uff0c\u90a3\u4e48\u5c31\u8ba9ans_y\u5c3d\u91cf\u5c0f\u3002\n*/ \n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<iomanip>\n#include<algorithm>\nusing namespace std;\n\nint n,m,a,cnt,ans_sum,ans_max,ans_area,ans_x,ans_y;\nchar ans_dir;\nint area[2505];\nbool flag[200][200],visited[200][200];\nint x_to[4]={0,-2,0,2},y_to[4]={-2,0,2,0};\nint xx_to[4]={0,-1,0,1},yy_to[4]={-1,0,1,0};\nstruct BLO\n{\n    int area,belong;\n}blo[200][200];\n\nint read()\n{\n    char c=getchar();int num=0;\n    for(;!isdigit(c);c=getchar());\n    for(;isdigit(c);c=getchar())\n        num=num*10+c-'0';\n    return num;\n}\n\nvoid west(int x,int y)\t//\u897f\u8fb9\u6709\u5899 \n{\n    flag[x][y-1]=0;\n}\n\nvoid north(int x,int y)\t//\u5317\u8fb9\u6709\u5f3a \n{\n    flag[x-1][y]=0;\n}\n\nvoid east(int x,int y)\t//\u4e1c\u8fb9\u6709\u5899 \n{\n    flag[x][y+1]=0;\n}\n\nvoid south(int x,int y)\t//\u5357\u8fb9\u6709\u5899 \n{\n    flag[x+1][y]==0;\n}\n\nvoid work(int a,int x,int y)\t//\u5f53\u524d\u683c\u5b50\u56db\u5468\u5899\u7684\u4f4d\u7f6e \n{\n    //\u6bcf\u4e2a\u65b9\u5411\u7684\u5899\u8bbe\u7f6e\u5b8c\u540e\u8ba9a\u51cf\u53bb\u5176\u5bf9\u5e94\u7684\u503c\uff0c\u65b9\u4fbf\u8bbe\u7f6e\u5176\u4ed6\u65b9\u5411\u7684\u5899 \n    if(a>=8)\t//\u548c\u5927\u4e8e\u7b49\u4e8e8\u7684\u5357\u8fb9\u4e00\u5b9a\u6709\u5899 \n        south(x,y),a-=8; \n    if(a>=4)\t//\u548c\u5927\u4e8e\u7b49\u4e8e4\u7684\u4e1c\u8fb9\u4e00\u5b9a\u6709\u5899 \n        east(x,y),a-=4;\n    if(a>=2)\t//\u548c\u5927\u4e8e2\u7684\u5317\u8fb9\u4e00\u5b9a\u6709\u5899 \n        north(x,y),a-=2;\n    if(a==1)\t//\u548c\u7b49\u4e8e1\u7684\u897f\u8fb9\u4e00\u5b9a\u6709\u5899 \n        west(x,y),a-=1;\n}\n\nbool judge(int x,int y)\t\t//\u5224\u65ad\u80fd\u4e0d\u80fd\u8054\u901a \n{\n    if(x<1||x>m||y<1||y>n||visited[x][y])\n        return false;\n    return true;\n}\n\nvoid dfs(int x,int y)\n{\n    ++cnt;\t//\u5f53\u524d\u8054\u901a\u5757\u7684\u9762\u79ef \n    blo[x][y].belong=ans_sum;\t//\u5f53\u524d\u683c\u5b50\u5c5e\u4e8e\u54ea\u4e2a\u8054\u901a\u5757 \n    visited[x][y]=1;\t//\u6807\u8bb0\u4e3a\u5df2\u8054\u901a \n    for(int i=0;i<4;++i)\t//\u5411\u5176\u4ed6\u56db\u4e2a\u65b9\u5411\u6269\u5c55 \n    {\n        int xx=x+x_to[i],yy=y+y_to[i];\n        if(judge(xx,yy))\n            if(flag[x+xx_to[i]][y+yy_to[i]])\t//\u8981\u6269\u5c55\u7684\u65b9\u5411\u6ca1\u6709\u5899\u9694\u7740 \n                dfs(xx,yy);\n    }\n}\n\nint main()\n{\n    memset(flag,1,sizeof(flag));\n    n=read(),m=read();\n    n=n*2-1,m=m*2-1;\t//\u77e9\u5f62\u7684\u5927\u5c0f\uff0c\u56e0\u4e3a\u623f\u95f4\u548c\u5899\u90fd\u5360\u683c\u5b50\uff0c\u6240\u4ee5*2 \n    for(int i=1;i<=m;++++i)\n        for(int j=1;j<=n;++++j)\n        {\n            a=read();\n            work(a,i,j);\t//\u8bbe\u7f6e\u5f53\u524d\u683c\u5b50\u56db\u5468\u7684\u5899\u7684\u4f4d\u7f6e \n        }\n    for(int i=1;i<=m;++++i)\n        for(int j=1;j<=n;++++j)\n        {\n            if(!visited[i][j])\t\t//\u4e0d\u5728\u522b\u7684\u8054\u901a\u5757\u91cc\uff0c\u627e\u5230\u4e00\u4e2a\u65b0\u7684\u623f\u95f4 \n            {\n                ++ans_sum;\t//\u7b2c\u4e00\u95ee\uff1a\u623f\u95f4\u6570\u91cf++ \n                cnt=0;\t//\u623f\u95f4\u9762\u79ef\u6e05\u96f6 \n                dfs(i,j);\n                area[ans_sum]=cnt;\t//\u65b0\u7684\u623f\u95f4\u7684\u9762\u79ef \n                ans_max=max(ans_max,cnt);\t//\u7b2c\u4e8c\u95ee\uff1a\u6700\u5927\u623f\u95f4\u7684\u9762\u79ef \n            }\n        }\n    for(int i=1;i<=m;++++i)\t\t//\u8ba9\u6bcf\u4e00\u4e2a\u683c\u5b50\u7684\u9762\u79ef\u7b49\u4e8e\u5b83\u5c5e\u4e8e\u7684\u623f\u95f4\u7684\u9762\u79ef \n        for(int j=1;j<=n;++++j)\n        {\n            blo[i][j].area=area[blo[i][j].belong];\n        }\n    ans_y=999999999;\n    for(int i=m;i>=1;----i)\n        for(int j=1;j<=n;++++j)\n        {\n            //\u5317\u9762\u7684\u5899\u4f18\u5148 \n            if(blo[i][j].belong!=blo[i-2][j].belong)\t//\u8981\u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e\uff0c\u5fc5\u987b\u4e24\u4e2a\u683c\u5b50\u4e0d\u662f\u540c\u4e00\u4e2a\u623f\u95f4\u7684 \n            {\n                if(ans_area<blo[i][j].area+blo[i-2][j].area)\t//\u80fd\u66f4\u65b0\u63a8\u5b8c\u5899\u540e\u6700\u5927\u623f\u95f4\u7684\u9762\u79efans_area \n                {\n                    ans_x=i,ans_y=j,ans_dir='N';\n                    ans_area=blo[i][j].area+blo[i-2][j].area;\n                }\n                else if(ans_area==blo[i][j].area+blo[i-2][j].area)\t//\u4e0d\u80fd\u8ddf\u65b0\u9762\u79ef\uff0c\u5224\u65ad\u662f\u5426\u80fd\u66f4\u65b0\u4f4d\u7f6e \n                {\n                    if(ans_y>j)\t//\u8ba9\u4f4d\u7f6e\u5c3d\u91cf\u9760\u897f \n                    {\n                        ans_x=i,ans_y=j,ans_dir='N';\n                        ans_area=blo[i][j].area+blo[i-2][j].area;\n                    }\n                }\n            }\n            if(blo[i][j].belong!=blo[i][j+2].belong)\n            {\n                if(ans_area<blo[i][j].area+blo[i][j+2].area)\n                {\n                    ans_area=blo[i][j].area+blo[i][j+2].area;\n                    ans_x=i,ans_y=j,ans_dir='E';\n                }\n                else if(ans_area==blo[i][j].area+blo[i][j+2].area)\n                {\n                    if(ans_y>j)\n                    {\n                        ans_area=blo[i][j].area+blo[i][j+2].area;\n                        ans_x=i,ans_y=j,ans_dir='E';\n                    }\n                    \n                }\n            }\n        }\n    printf(\"%d\\n\",ans_sum);\n    printf(\"%d\\n\",ans_max);\n    printf(\"%d\\n\",ans_area);\n    printf(\"%d %d %c\\n\",(ans_x+1)>>1,(ans_y+1)>>1,ans_dir);\n    return 0;\n}\n```",
        "postTime": 1522829427,
        "uid": 39886,
        "name": "Drifterming",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "\u9898\u89e3by\uff1aredbag\n\n\u9898\u89e3\u5730\u5740\uff1ahttp://redbag.duapp.com/?p=1122\n\n\u8fd9\u91cc\u7684\u4ee3\u7801\u6709\u7f29\u8fdb\uff0c\u6bd4\u6d1b\u8c37\u7684\u7f8e\u89c2\u4e9b\uff0c\u8fd9\u662f\u4e8b\u5b9e23333333\n\n\u6211\u7684\u535a\u5ba2\uff1ahttp://redbag.duapp.com/\n\n\u6b22\u8fce\u6765\u8e29\u3002\n\n###\u66b4\u529b\u51fa\u5947\u8ff9\n\n\u7b2c\u4e00\uff0c\u4e8c\u95ee\uff1a\n\n\n\u7b80\u5355\u7684floodfill\u3002\n\n\n\u7b2c\u4e09\uff0c\u56db\u95ee\uff1a\n\n\n\u66b4\u529b\u679a\u4e3e\n\n\u201c\u6709\u591a\u89e3\u65f6\u9009\uff08\u91cd\u5fc3\uff09\u6700\u9760\u897f\u7684\uff08\u4ecd\u7136\u6709\u591a\u89e3\u65f6\u9009\u8fd9\u4e9b\u91cc\u9762\uff08\u91cd\u5fc3\uff09\u6700\u9760\u5357\u7684\uff09\u3002\u201d \u8bf7\u6ce8\u610f\u91cd\u5fc3\u4e8c\u5b57\uff01 \u5317\u5899\u7684\u91cd\u5fc3\u6bd4\u4e1c\u5899\u7684\u8981\u9760\u897f\u554a~~\u6240\u4ee5\u62c6\u5899\u987a\u5e8f\u662f\u897f\u5899\uff0c\u5357\u5899\uff0c\u5317\u5899\uff0c\u4e1c\u5899\u3002\n\n\n\u9644\u4e0a\u4ee3\u7801\uff1a\n\n/\\*\nID: ylx14271\n\nPROG: castle\n\nLANG: C++\n\n\\*/\n```cpp\n#include<set>  \n#include<map>  \n#include<list>  \n#include<queue>  \n#include<stack>  \n#include<string>  \n#include<math.h>  \n#include<time.h>  \n#include<vector>  \n#include<bitset>  \n#include<memory>  \n#include<utility>  \n#include<stdio.h>  \n#include<sstream>  \n#include<iostream>  \n#include<stdlib.h>  \n#include<string.h>  \n#include<algorithm> \n#define LL unsigned long long   \nusing namespace std;\nint f[51][51][5];//\u5b58\u5899,f[i][j][0]\u5b58\u6240\u5c5e\u6807\u53f7 \nint n,m,i,j,ii,jj;\nint p=0;//\u8fde\u901a\u5757\u7684\u4e2a\u6570 \nint a[2501];//\u5b58\u6bcf\u4e2a\u8fde\u901a\u5757\u7684\u5927\u5c0f\uff1f \nint ff[5][3]={{0,0,0},\n             {3,0,1},//\u53f3 \n             {4,1,0},//\u4e0b \n             {1,0,-1},//\u5de6 \n             {2,-1,0}};//\u4e0a\uff0c\u6655\u4e86~~~~(>_<)~~~~  \n//\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u65b9\u5411,f[i][0]\u5b58\u5230\u8fbe\u90a3\u9700\u7a7f\u8fc7\u7684\u5899\u7684\u65b9\u5411 \nvoid dfs(int x,int y,int id)//dfs\u6c42\u8fde\u901a\u5757,id\u662f\u6807\u8bb0\u7684\u7f16\u53f7 \n{\n    if (x<=0||x>n||y<=0||y>m) return;//\u8d8a\u754c\u8fa3~\\(\u2267\u25bd\u2266)/~\n    if (f[x][y][0]!=0) return;//\u88ab\u641c\u8fc7\u8fa3\uff0c\u5f53\u7136\u8fd9\u79cd\u60c5\u51b5\u662f\u4e0d\u4f1a\u51fa\u73b0\u7684 \n    f[x][y][0]=id;//\u5b58\u7f16\u53f7 \n    a[id]++; \n    for (int ii=1;ii<=4;ii++)//\u56db\u79cd\u60c5\u51b5\u53bb\u641c\n        if ((f[x+ff[ii][1]][y+ff[ii][2]][0]==0)/*\u6ca1\u88ab\u641c\u8fc7*/&&(f[x][y][ff[ii][0]]==0)/*\u8fc7\u53bb\u6ca1\u5899*/)\n        dfs(x+ff[ii][1],y+ff[ii][2],id);//\u5f80\u4e0b\u641c \n}\nint main() \n{\n    freopen(\"castle.in\",\"r\",stdin);\n    freopen(\"castle.out\",\"w\",stdout); \n    scanf(\"%d%d\",&m,&n);//\u8bfb\u5165;\n    for (i=1;i<=n;i++)\n        for (j=1;j<=m;j++)\n        {\n            int hehe;\n            scanf(\"%d\",&hehe);//\u8bfb\u5165\u5899\u7684\u6570\u5b57\u548c\n            if (hehe>=8) \n            {\n                hehe-=8; \n                f[i][j][4]=1;//\u6807\u8bb0\u5357\u65b9\u6709\u5899 \n            }\n            if (hehe>=4) \n            {\n                hehe-=4;\n                f[i][j][3]=1;//\u6807\u8bb0\u4e1c\u65b9\u6709\u5899 \n            } \n            if (hehe>=2) \n            {\n                hehe-=2;\n                f[i][j][2]=1;//\u6807\u8bb0\u5317\u65b9\u6709\u5899 \n            } \n            if (hehe>=1) \n            {\n                hehe-=1;\n                f[i][j][1]=1;//\u6807\u8bb0\u897f\u65b9\u6709\u5899 \n            }  \n            //\u7ec8\u4e8e\u6807\u8bb0\u5b8c\u4e86\u256e(\u256f\u25bd\u2570)\u256d\n            //\u8fd9\u79cd\u65b9\u6cd5\u597d\u5de7\u554a\u3002 \n        }\n    for (i=1;i<=n;i++) \n        for (j=1;j<=m;j++)\n        {\n            if (f[i][j][0]==0)/*\u76ee\u524d\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u4e00\u4e2a\u8fde\u901a\u5757*/\n            {\n                p++;\n                dfs(i,j,p);//++p\u662f\u76ee\u524d\u641c\u7684\u8fd9\u4e2a\u8fde\u901a\u5757\u7684\u6807\u8bb0 \n            }\n        }\n    printf(\"%d\\n\",p);//\u6210\u529f\u706d\u6389\u7b2c\u4e00\u95ee \n    int maxx=a[1];//\u521d\u59cb\u5316 \n    for (i=1;i<=p;i++) if (a[i]>maxx) maxx=a[i];\n    printf(\"%d\\n\",maxx); //\u6210\u529f\u706d\u6389\u7b2c\u4e8c\u95ee \n    //\u7531\u9898\u53ef\u77e5\uff0c\u79fb\u53bb\u7684\u5899\u76f8\u5bf9\u4e8e\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u6765\u8bf4\u4e00\u5b9a\u662f\u4e1c\u9762\u6216\u8005\u5317\u9762 \n    char k;\n    for (i=1;i<=n;i++)\n        for (j=1;j<=m;j++) //\u679a\u4e3e \u6316\u8d70\u52a8\u5899\n        {\n            if (i!=1&&f[i][j][2]==1&&f[i][j][0]!=f[i-1][j][0])//\u7b2c\u4e00\u884c\u7684\u5317\u5899\u4e0d\u80fd\u6316\u8d70,\u800c\u4e14\u8981\u6709\u5899\n            //\u800c\u4e14\u6ca1\u6709\u5728\u540c\u4e00\u4e2a\u8fde\u901a\u5757 \n            {\n                int hehe=a[f[i][j][0]]+a[f[i-1][j][0]];//\u5408\u5e76\u540e\u8fde\u901a\u5757\u5927\u5c0f \n                if (hehe>maxx) \n                {\n                    maxx=hehe;\n                    ii=i;\n                    jj=j;//\u6807\u8bb0 \n                    k='N';//\u6807\u8bb0 \n                }\n                if (hehe==maxx)\n                {\n                    if ((j<jj)/*\u66f4\u897f*/||(i>ii&&j<=jj)/*\u66f4\u5357\u4e14\u4e0d\u4f1a\u66f4\u4e1c*/)\n                    {\n                        ii=i;\n                        jj=j;//\u6807\u8bb0 \n                        k='N';//\u6807\u8bb0 \n                    }\n                }\n            } \n            if (j!=m&&f[i][j][3]==1&&f[i][j][0]!=f[i][j+1][0])//\u6700\u540e\u4e00\u5217\u7684\u4e1c\u5899\u4e0d\u80fd\u6316\u8d70 ,\u800c\u4e14\u8981\u6709\u5899\n            //\u800c\u4e14\u6ca1\u6709\u5728\u540c\u4e00\u4e2a\u8fde\u901a\u5757 \n            {\n                int hehe=a[f[i][j][0]]+a[f[i][j+1][0]];//\u5408\u5e76\u540e\u8fde\u901a\u5757\u5927\u5c0f \n                if (hehe>maxx) \n                {\n                    maxx=hehe;\n                    ii=i;\n                    jj=j;//\u6807\u8bb0 \n                    k='E';//\u6807\u8bb0 \n                }\n                if (hehe==maxx)\n                {\n                    if ((j<jj)||(i>ii&&j<=jj))//\u66f4\u897f\u65b9\uff0c\u66f4\u5357\u65b9\u4e14\u4e0d\u4f1a\u66f4\u4e1c\u65b9 \n                    {\n                        ii=i;\n                        jj=j;//\u6807\u8bb0 \n                        k='E';//\u6807\u8bb0 \n                    }\n                }\n            } \n        } \n    printf(\"%d\\n\",maxx);//\u7b2c\u4e09\u95ee\u5b8c\u6210 \n    printf(\"%d %d %c\\n\",ii,jj,k);//\u7ec8\u4e8e\u5b8c\u6210\u4e86 \n    return 0;\n}\n```",
        "postTime": 1468569433,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "# \u8fd9\u4e2a\u9898\u6211\u4e2a\u4eba\u611f\u89c9\u86ee\u597d\u7684\uff0c\u5c31\u662f\u2026\u2026\n\n//\u5982\u679c\u6709\u4e2aSPJ\u5c31\u66f4\u597d\u4e86\uff08\u5c0f\u58f0\uff09\n\n\u597d\u4e86\uff0c\u4e0b\u9762\u662f\u9898\u89e3\uff1a\n\n-----------------------\u5e76\u4e0d\u534e\u4e3d\u7684\u5206\u5272\u7ebf-----------------------\n\n### \u7b2c\u4e00\u95ee\uff1aDFS\u641c\u7d22\n\n\u96be\u5ea6\uff1a\u4f4e\n\n\u4e3a\u4e86\u65b9\u4fbf\u641c\u6211\u628a\u4e8c\u8fdb\u5236\u7684\u5899\u6539\u6210\u4e86\u6570\u7ec4\n\n\u7528\u4ee5\u4e0b\u4ee3\u7801\u5b9e\u73b0\uff1a\n\n```\n\t\t\tif(d%2==1)mp[i][j][1]=1;//\u897f\u5899\n\t\t\td/=2;\n\t\t\tif(d%2==1)mp[i][j][2]=1;//\u5317\u5899\n\t\t\td/=2;\n\t\t\tif(d%2==1)mp[i][j][3]=1;//\u4e1c\u5899\n\t\t\td/=2;\n\t\t\tif(d%2==1)mp[i][j][4]=1;//\u5357\u5899\n```\n\n\u641c\u7d22\u7684\u57fa\u672c\u601d\u8def\u5c31\u662f\u67d3\u8272\u6cd5\uff1a\n\n```\nvoid t(int i,int j){\n\tb[i][j]=s;//\u8bb0\u5f55\u6240\u5c5e\u623f\u95f4\u7f16\u53f7\n\tfor(int k=1;k<=4;k++)\n\t\tif(mp[i][j][k]==0&&b[i+dx[k-1]][j+dy[k-1]]==0)a[s]++,t(i+dx[k-1],j+dy[k-1]);//\u5982\u679c\u5b83\u65c1\u8fb9\u7684\u683c\u5b50\u4e5f\u5c5e\u4e8e\u8fd9\u4e2a\u623f\u95f4\u8bb0\u5f55\u4e0b\u6765\u5e76\u7ee7\u7eed\u641c\u7d22\n}\n```\n\u90a3\u4e48\u6570\u7ec4a\u662f\u662f\u5e72\u4ec0\u4e48\u7684\u5462\uff1f\n\n~~\u90a3\u662f\u7b2c\u4e8c\u95ee\u5185\u5bb9\uff0c\u7b2c\u4e8c\u95ee\u518d\u8bf4~~\n\n\u5728\u4e3b\u7a0b\u5e8f\u91cc\u7684\u5faa\u73af\u6a21\u5757\uff1a\n\n```\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tif(b[i][j]==0)s++,a[s]=1,t(i,j);//\u5982\u679c\u4e0d\u5c5e\u4e8e\u5df2\u77e5\u7684\u4efb\u4f55\u623f\u95f4\u5c31\u641c\u7d22\n```\n### \u7b2c\u4e8c\u95ee\uff1aDFS\u641c\u7d22\u4e0a\u7684\u8ba1\u6570\n\n\u96be\u5ea6\uff1a\u4f4e\n\na\u6570\u7ec4\u53ea\u4e0d\u8fc7\u662f\u4e00\u4e2a\u8ba1\u6570\u7684\uff0c\u5f53\u7136\uff0c\u5b83\u5728\u7b2c\u4e09\u3001\u56db\u95ee\u91cc\u6709\u5927\u5e2e\u52a9\u3002//\u4e0d\u7136\u9898\u76ee\u8981\u4f60\u6c42\u5b83\u5e72\u561b\u561e\n\n### \u7b2c\u4e09\u95ee\uff1a\u679a\u4e3e\n\n\u96be\u5ea6\uff1a\u4e2d\n\n\u4f60\u4eec\u53ef\u80fd\u4f1a\u95ee\uff1a\n\n**\u679a\u4e3e\u8fd8\u80fd\u6bd4\u641c\u7d22\u96be\uff1f**\n\n~~\u660e\u660e\u90fd\u5f88\u7b80\u5355~~\n\n\u4f46\u8fd9\u4e2a\u9898\u6211\u770b\u4e86\u4e00\u4e0b\u522b\u7684\u9898\u89e3\u597d\u50cf\u90fd\u628a\u8fd9\u4e00\u95ee\u60f3\u5f97\u6bd4\u8f83\u6050\u6016\n\n\u6bd4\u5982@\u65e9\u53f3\u6615 \u7684\u9898\u89e3\uff1a\n\n```\n    for(int i=1; i<=n; i++)\n        for(int j=1; j<=m; j++) {\n            if((a[i][j]&2)&&id[i][j]!=id[i-1][j]&&ans1<=room[id[i][j]]+room[id[i-1][j]]) {\n                if(ans1!=room[id[i][j]]+room[id[i-1][j]]) x1=i,y1=j;\n                else if(j<y1) y1=j,x1=i;//West\n                else if(j==y1 && i>x1) x1=i;//South\n                ans1=room[id[i][j]]+room[id[i-1][j]];\n            }//\u5317\u5899\n            if((a[i][j]&4)&&id[i][j]!=id[i][j+1]&&ans2<=room[id[i][j]]+room[id[i][j+1]]) {\n                if(ans2!=room[id[i][j]]+room[id[i][j+1]]) x2=i,y2=j;\n                else if(j<y2) y2=j,x2=i;//West\n                else if(j==y2 && i>x2) x2=i;//South\n                ans2=room[id[i][j]]+room[id[i][j+1]];\n            }//\u4e1c\u5899\n        }\n```\n\n\u5728\u8fd9\u91ccta\u5206\u5f00\u679a\u4e3e\u4e86\u3002\n\n\u800c\u6211\u4eec\u56e0\u4e3a\u6709~~\u4eba\u5de5\u4f18\u52bf~~\uff1a**\u4e8c\u8fdb\u5236\u7684\u5899\u6539\u6210\u4e86\u6570\u7ec4\uff01**\n\n\u6240\u4ee5\u2026\u2026\n\n```\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tfor(int k=2;k<=3;k++)//\u4e8c\u662f\u5317\u4e09\u662f\u4e1c\n\t\t\t\tif(mp[i][j][k]==1&&b[i][j]!=b[i+dx[k-1]][j+dy[k-1]])\n\t\t\t\t\tans=max(ans,a[b[i][j]]+a[b[i+dx[k-1]][j+dy[k-1]]]);//\u9009\u53d6\u53ef\u884c\u7684\u5f97\u5230\u623f\u95f4\u6700\u5927\u7684\u5899\u7684\u623f\u95f4\u5927\u5c0f\uff0c\u623f\u95f4\u5927\u5c0f\u5373\u4e3aa\u6570\u7ec4\n                             \n``` \n\n\u597d\u4e86\u96be\u5173\u8fc7\u53bb\u4e86\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u8457\u540d\u7684\u5751\uff1a\n\n\u6ca1\u6709SPJ\u3002\n\n### \u7b2c\u56db\u95ee\uff1a\u91cd\u65b0\u679a\u4e3e\u627e\u51fa\u5899\u7684\u4f4d\u7f6e\n\n\u96be\u5ea6\uff1a\u9ad8\n\n\u4ed4\u7ec6\u5206\u6790\u9898\u76ee\u540e\u53d1\u73b0\uff1a\n\n**\u6709\u591a\u89e3\u65f6\u9009\u6700\u9760\u897f\u7684\uff0c\u4ecd\u7136\u6709\u591a\u89e3\u65f6\u9009\u6700\u9760\u5357\u7684\u3002\u540c\u4e00\u683c\u5b50\u5317\u8fb9\u7684\u5899\u6bd4\u4e1c\u8fb9\u7684\u5899\u66f4\u4f18\u5148\u3002**\n\n//~~\u8fd9\u4e0d\u662f\u9898\u76ee\u539f\u8bdd\u5417~~\n\n\u4f46\u662f\uff01\n\n\u5224\u65ad\u4e0b\u9762\u4e24\u9762\u5899\u8c01\u7684\u4f18\u5148\u7ea7\u5927\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/50486.png)\n\n\u6bd4\u8f83\u4e0d\u51fa\u6765\u4e86\u5427\u3002\n\n\u6ca1\u6709\u4eba\u544a\u8bc9\u8fc7\u4f60\u540c\u4e00\u683c\u5b50\u4e1c\u8fb9\u7684\u5899\u548c\u5357\u8fb9\u7684\u5899\u8c01\u5927\uff0c\u4f60\u53bb\u63a8\u4e00\u63a8\u4e5f\u63a8\u4e0d\u51fa\u6765\u3002\n\n\u6240\u4ee5\u5728\u8fd9\u6211~~\u901a\u8fc7\u4e0b\u4e86\u6570\u636e\u70b9~~\u544a\u8bc9\u5927\u5bb6\uff1a\n\n**\u5728\u4e0a\u56fe\u4e2d\u84dd\u5899\u6bd4\u7ea2\u5899\u4f18\u5148\u7ea7\u5927\u3002**\n\n\u4f46\u662f\uff0c\u4f60\u7684\u7a0b\u5e8f\u4f1a\u8fd9\u4e48\u60f3\u5417\uff1f\n\n\u6240\u4ee5\u522b\u770b\u4e0b\u9762\u5faa\u73af\u5947\u5947\u602a\u602a\uff0c\u662f\u6709\u4ed6\u4e00\u5b9a\u7684\u9053\u7406\u7684\u3002\n\n```\n\tfor(int j=1;j<=m;j++)//\u5148\u5224\u4e1c\u897f\n\t\tfor(int k=2;k<=3;k++)//\u518d\u5224\u65b9\u5411\n\t\t\tfor(int i=n;i>=1;i--)//\u6700\u540e\u5224\u5357\u5317\n\t\t\t\tif(mp[i][j][k]==1&&b[i][j]!=b[i+dx[k-1]][j+dy[k-1]]&&a[b[i][j]]+a[b[i+dx[k-1]][j+dy[k-1]]]==ans){//\u78b0\u5230\u7684\u5899\u7b2c\u4e00\u4e2a\u53ef\u884c\n\t\t\t\t\tprintf(\"%d %d \",i,j);\n\t\t\t\t\tif(k==3)printf(\"E\\n\");//\u4e09\u662f\u4e1c\n\t\t\t\t\tif(k==2)printf(\"N\\n\");//\u4e8c\u662f\u5317\n\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n}\n```\n\n\u597d\u4e86\uff0c\u601d\u8def\u8bb2\u5b8c\u4e86\uff0c\u4e0b\u9762\u4e0a\u5b8c\u6574\u4ee3\u7801\uff08\u522b\u6284\uff01\uff09\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,mp[51][51][5],b[51][51],d,s,a[2501],ans;\nconst int dx[4]={0,-1,0,1},dy[4]={-1,0,1,0};\nvoid t(int i,int j){\n\tb[i][j]=s;\n\tfor(int k=1;k<=4;k++)\n\t\tif(mp[i][j][k]==0&&b[i+dx[k-1]][j+dy[k-1]]==0)a[s]++,t(i+dx[k-1],j+dy[k-1]);\n}\nint main(){\n\tscanf(\"%d%d\",&m,&n);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tscanf(\"%d\",&d);\n\t\t\tif(d%2==1)mp[i][j][1]=1;\n\t\t\td/=2;\n\t\t\tif(d%2==1)mp[i][j][2]=1;\n\t\t\td/=2;\n\t\t\tif(d%2==1)mp[i][j][3]=1;\n\t\t\td/=2;\n\t\t\tif(d%2==1)mp[i][j][4]=1;\n\t\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tif(b[i][j]==0)s++,a[s]=1,t(i,j);\n\tprintf(\"%d\\n\",s);\n\tfor(int i=1;i<=s;i++)\n\t\tans=max(ans,a[i]);\n\tprintf(\"%d\\n\",ans);\n\tans=0;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tfor(int k=3;k<=4;k++)\n\t\t\t\tif(mp[i][j][k]==1&&b[i][j]!=b[i+dx[k-1]][j+dy[k-1]])\n\t\t\t\t\tans=max(ans,a[b[i][j]]+a[b[i+dx[k-1]][j+dy[k-1]]]);\n\tprintf(\"%d\\n\",ans);\n\tfor(int j=1;j<=m;j++)\n\t\tfor(int k=2;k<=3;k++)\n\t\t\tfor(int i=n;i>=1;i--)\n\t\t\t\tif(mp[i][j][k]==1&&b[i][j]!=b[i+dx[k-1]][j+dy[k-1]]&&a[b[i][j]]+a[b[i+dx[k-1]][j+dy[k-1]]]==ans){\n\t\t\t\t\tprintf(\"%d %d \",i,j);\n\t\t\t\t\tif(k==3)printf(\"E\\n\");\n\t\t\t\t\tif(k==2)printf(\"N\\n\");\n\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n}\n```",
        "postTime": 1548854841,
        "uid": 104662,
        "name": "PrincessQi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "\u8fd9\u9898\u641e\u4e86\u62113H\uff0c\u5176\u5b9e\u56de\u60f3\u8d77\u6765\u4e5f\u5c31\u662fBFS\u52a0\u6a21\u62df\uff08DFS\u4e5f\u884c\uff09\n\n\u7ffb\u5230\u636e\u8001\u7684\u5224\u65ad\u5899\u7684\u90a3\u91cc\uff0c\u5176\u5b9e\u4e0d\u7528\u679a\u4e3e\uff0c\u7528\u4e8c\u8fdb\u5236\u5b58\u50a8\u5373\u53ef\n```\n  while(cc)\n\t     {\n\t     \ta[i][j][l]=cc%2;\n\t     \tcc/=2;\n\t\t\tl--;\n\t\t }\n```\n\n\n\u4e00\u4e8c\u95eedfs\u626b\u623f\u95f4\u7684\u6570\u91cf\u548c\u6700\u5927\u623f\u95f4\u4e0d\u662f\u5f88\u96be\uff0c\u50cf\u6c34\u6d3c\u90a3\u9898\uff0c\u53ea\u8981\u5224\u65ad\u90a3\u91cc\u6ca1\u5899\u8d70\u90a3\u8fb9\uff0c\u987a\u4fbf\u8bb0\u4e0b\u56fe\u5f62\u9762\u79ef\u3002\uff08\u67d3\u8272\uff09\n```\nint bfs(int x,int y)\n{\n\tint xx,yy,qq[2500],tt[2500],t=1,h=0;\n\tqq[1]=x;\n\ttt[1]=y;\n\ta[x][y][0]=ans;//\u8bb0\u5f55\u5b83\u4e0e\u8c01\u4e00\u7ec4 \n\twhile(t>h)\n\t{\n\t\th++;\n\t\tfor(int i=1;i<=4;i++)\n\t\t{\t\n\t\t    xx=qq[h]+b[i];\n\t\t    yy=tt[h]+c[i];\n\t\t\tif(xx>0&&xx<=m&&yy>0&&yy<=n)\n\t\t\t  if(a[xx][yy][0]==0&&a[qq[h]][tt[h][i]==0)\n\t\t\t  {\n\t\t\t    t++;\n\t\t\t\tqq[t]=xx;\n\t\t\t\ttt[t]=yy;\n\t\t\t\ta[xx][yy][0]=ans;\n\t\t\t  }                                                                   \n\t\t}\n\t}\n\tmaxl=max(t,maxl);//\u6700\u5927\u503c\n\treturn t;//\u8fd4\u56de\u8be5\u623f\u95f4\u7684\u9762\u79ef\n}        \n```\n\n\n\u4e09\u56db\u95ee\u672c\u849f\u84bb\u7528\u4e862H\uff0c\u9898\u610f\u7684\u9b54\u9b3c\u6027\u8d28\uff0c\u5148\u897f\u540e\u5357\uff0c\u6240\u4ee5\n```\n  for(int i=1;i<=n;i++)\n    for(int j=m;j>=1;j--)\n```\n(\u4e24\u8fb9\u5faa\u73af\u4e0d\u80fd\u6362\uff09\uff01\uff01\uff01\n\n\u7136\u540e\u679a\u4e3e\u53ef\u80fd\u7684\u6761\u4ef6\uff0c\u53d6\u6700\u5927\u503c\u4e0e\u627e\u51fa\u6700\u4f73\u9009\u9879\u3002\u6ce8\u610f\uff1a\u5148\u5317\u540e\u4e1c\uff08\u63a8\u5899\uff09\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint a[100][100][6],k[100][100][6],n,m,ans,maxl;\n//a[i][j][0]\u4e3a\u54ea\u4e00\u7ec4,a[i][j][1--4]\u4e3a \u5899\u7684\u60c5\u51b5 \nint b[5]={0,1,0,-1,0};\nint c[5]={0,0,1,0,-1};\nint d[100][100];//\u5750\u6807\u683c\u6240\u5728\u7684\u623f\u95f4\u7684\u9762\u79ef \nint bfs(int x,int y)\n{\n\tint xx,yy,qq[100],tt[100],t=1,h=0;//\u5e7f\u641c\n\tqq[1]=x;\n\ttt[1]=y;\n\ta[x][y][0]=ans;//\u8bb0\u5f55\u5b83\u4e0e\u8c01\u4e00\u7ec4 \n\twhile(t>h)\n\t{\n\t\th++;\n\t\tfor(int i=1;i<=4;i++)\n\t\t{\t\n\t\t    xx=qq[h]+b[i];\n\t\t    yy=tt[h]+c[i];\n\t\t\tif(xx>0&&xx<=m&&yy>0&&yy<=n)\n\t\t\t  if(a[xx][yy][0]==0&&a[qq[h]][tt[h][i]==0)\n\t\t\t  {\n\t\t\t    t++;\n\t\t\t\tqq[t]=xx;\n\t\t\t\ttt[t]=yy;\n\t\t\t\ta[xx][yy][0]=ans;//\u67d3\u8272\n\t\t\t  }                                                                   \n\t\t}\n\t}\n\tmaxl=max(t,maxl);//\u6700\u5927\u503c\n\treturn t;//\u8fd4\u56de\u8be5\u623f\u95f4\u7684\u9762\u79ef\n}        \nint main()\n\n{\n\tint cc;\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++)\n\t  for(int j=1;j<=n;j++)\n\t  {\n\t     cin>>cc;\n\t     a[i][j][0]=0;\n\t     int l=4;\n\t     while(cc)\n\t     {\n\t     \ta[i][j][l]=cc%2;\n\t     \tcc/=2;\n\t\t\tl--;\n\t\t }//\u628a\u6570\u5316\u4e3a\u4e8c\u8fdb\u5236\u5b58\u50a8\n\t   } \n\tfor(int i=1;i<=m;i++)\n\t  for(int j=1;j<=n;j++)//\u67d3\u8272\uff0cBFS \n\t  {\n         if(a[i][j][0]==0)\n\t\t {\n\t    \tans++;        \n\t    \tint t=bfs(i,j);\n\t    \tfor(int ii=1;ii<=m;ii++)\n\t    \t{\n\t    \t  for(int jj=1;jj<=n;jj++)\n\t    \t  {\n\t    \t  \tif(a[ii][jj][0]==ans)\n\t    \t  \t{\n\t    \t  \t\td[ii][jj]=t;\n\t\t\t\t  }\n\t\t      }\n\t\t\t}\n\t\t }\n\t  }\n\t\tcout<<ans<<endl;\n\t\tcout<<maxl<<endl;\n\t\tint maxn=0,idx,idy,q,t;\n\t    for(int j=1;j<=n;j++)//\u4e09\u56db\u95ee\n\t    {\t\n\t    \tfor(int i=m;i>=1;i--)//\u6bd2\u7624\uff0c\u7531\u4e8e\u9898\u610f\u662f\u5148\u897f\u518d\u5357 \u6240\u4ee5\u8fd9\u6837 \n\t    \t{\n\t\t\t\tif(a[i][j][3]&&i!=1)//\u5c0f\u5fc3\u8d8a\u754c \n\t    \t\t{\n\t    \t\t\tif(a[i-1][j][0]!=a[i][j][0])//\u4e0d\u8981\u8fd9\u4e00\u6b65\u5c0f\u5fc3\u4e4b\u524d\u5df2\u7ecf\u88ab\u6253\u901a\u4e86 \n\t\t\t\t\t{\n\t\t\t\t\t  t=d[i-1][j]+d[i][j];// \u548c\uff08\u53ef\u4ee5\u88ab\u6253\u901a\uff09 \n\t    \t\t\t  if(t>maxn)\n\t    \t\t\t  {  \n\t    \t\t\t\tmaxn=t;\n\t    \t\t\t\tidx=i;\n\t    \t\t\t\tidy=j;\n\t    \t\t\t\tq=0;//\u5f53\u6b64\u503c\u6bd4\u6700\u5927\u503c\u5927\u65f6\uff0c\u8bb0\u5f55\u4e0b\u6765\uff0c\u5176\u4e2dq=0\u4e3a\u5317\uff0cq=1\u4e3a\u4e1c \n\t\t\t\t\t  }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(a[i][j][2]&&j!=m)//\u4e0e\u5728\u5224\u5317\u65f6\u540c\u7406\uff0c\u6ce8\u610f\uff1a\u5148\u5224\u5317\uff0c\u540e\u5224\u4e1c \n\t\t\t\t{\n\t\t\t\t //   cout<<\"f \"<<i<<\"\u3000\"<<j<<endl; \n\t\t\t\t\tif(a[i][j][0]!=a[i][j+1][0]) \n\t\t\t\t\t{\n\t\t\t\t\t  t=d[i][j+1]+d[i][j];\n\t\t\t\t\t  if(t>maxn)\n\t\t\t\t\t  {  \n\t\t\t\t\t\tmaxn=t;\n\t\t\t\t\t\tidx=i;\n\t\t\t\t\t\tidy=j;\n\t\t\t\t\t\tq=1;\n\t\t\t\t\t  }\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t    cout<<maxn<<endl;\n\t    cout<<idx<<\" \"<<idy<<\" \";\n\t\tif(q==0) cout<<\"N\";\n\t\telse cout<<\"E\"; //\u534e\u4e3d\u7ed3\u675f \n\t\t\u6284\u88ad\u515a\u6ce8\u610f\uff0c\u6b64\u7a0b\u5e8f\u6709\u51e0\u4e2a\u5c0fbug\uff0c\u4f46bug\u4e0d\u662f\u6838\u5fc3\u4ee3\u7801 \n } \n\n",
        "postTime": 1573460586,
        "uid": 25487,
        "name": "aZhouyiyulg1",
        "ccfLevel": 0,
        "title": "P1457 \u57ce\u5821 \u849f\u84bb\u7684\u9898\u89e3"
    },
    {
        "content": "\u8f9b\u8f9b\u82e6\u82e6\u5199\u4e86200\u884c\uff0c\u4e00\u6b21\u6b21\u662f\u9519\u4e2d\u7ec8\u4e8eAC\u4e86\n```\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\n\nusing namespace std;\n\nconst int N=50+10;\nconst int fx[4]={0,-1,0,1};\nconst int fy[4]={-1,0,1,0};\n\nint ans,sum,n,m,tot,xx,yy,len;\nint vis[N][N],f[N][N],num[N][N];\n// vis\u7528\u6765\u8bb0\u5f55\u662f\u5426\u8bbf\u95ee\u8fc7\n// f\u7528\u6765\u8bb0\u5f55\u8be5\u623f\u95f4\u7684\u603b\u623f\u95f4\u7684\u623f\u95f4\u6570\n// \u8bb0\u5f55\u8be5\u623f\u95f4\u662f\u7b2c\u51e0\u4e2a\u623f\u95f4 \nchar ch;\n\nstruct wall\n{\n\tint k;\n\tint w[4];\n}a[N][N];\n// \u623f\u95f4\u7684\u5899 \nstruct str\n{\n\tint x;\n\tint y;\n\tint flag;\n}edge[N*N*4];\n// \u6700\u540e\u8981\u5c06\u6240\u6709\u53ef\u80fd\u7684\u5899\u6392\u5e8f \n\nbool cmp(str p,str q)\n{\n\tif(p.y!=q.y)return p.y<q.y;// \u518d\u6309\u5f80\u897f \n\tif(p.x!=q.x)return p.x>q.x;// \u5148\u6309\u5f80\u5357 \n\treturn p.flag<q.flag;\n\t// 1\u662f\u4e1c\uff0c0\u662f\u5317\uff0c\u5317\u4f18\u5148 \n}\n\nvoid east(int x,int y)\n{\n\tedge[len].x=x;\n\tedge[len].y=y;\n\tedge[len].flag=1;\n\treturn;\n}\n\nvoid western(int x,int y)\n{\n\t// W(i,j)\uff0c\u8f6c\u5230E(i,j-1) \n\tedge[len].x=x;\n\tedge[len].y=y-1;\n\tedge[len].flag=1;\n\treturn;\n}\n\nvoid south(int x,int y)\n{\n\t// S(i,j)\uff0c\u8f6c\u5230N(i+1,j) \n\tedge[len].x=x+1;\n\tedge[len].y=y;\n\tedge[len].flag=0;\n\treturn;\n}\n\nvoid north(int x,int y)\n{\n\tedge[len].x=x;\n\tedge[len].y=y;\n\tedge[len].flag=0;\n\treturn;\n} \n\nvoid init(int s,int i,int j)\n{\n\tif(s>7)\n\t{\n\t\ts-=8;\n\t\ta[i][j].w[3]=1;\n\t}\n\telse a[i][j].w[3]=0;\n\tif(s>3)\n\t{\n\t\ts-=4;\n\t\ta[i][j].w[2]=1;\n\t}\n\telse a[i][j].w[2]=0;\n\tif(s>1)\n\t{\n\t\ts-=2;\n\t\ta[i][j].w[1]=1;\n\t}\n\telse a[i][j].w[1]=0;\n\tif(s)a[i][j].w[0]=1;\n\telse a[i][j].w[0]=0;\n\treturn;\n}\n\nvoid room(int x,int y)\n{\n\tif(vis[x][y])return;\n\tif(x>n||x<1||y>m||y<1)return;\n\tvis[x][y]=1;\n\tsum++;// \u8054\u901a\u5757\u6570\u91cf+1 \n\tfor(int i=0;i<4;i++)\n\t{\n\t\txx=fx[i]+x;\n\t\tyy=fy[i]+y;\n\t\tif(!a[x][y].w[i])// \u5982\u679c\u4e4b\u95f4\u6ca1\u6709\u5899 \n\t\t\troom(xx,yy);\n\t}\n\treturn;\n}\n\nvoid room_max(int x,int y)\n{\n\tif(f[x][y])return;\n\tif(x>n||x<1||y>m||y<1)return;\n\tf[x][y]=sum;// \u628a\u5bf9\u5e94\u7684\u623f\u95f4\u9644\u4e0a\u6b64\u603b\u623f\u95f4\u7684\u5927\u5c0f \n\tnum[x][y]=tot;// \u628a\u5bf9\u5e94\u7684\u623f\u95f4\u7f16\u53f7 \n\tfor(int i=0;i<4;i++)\n\t{\n\t\txx=fx[i]+x;\n\t\tyy=fy[i]+y;\n\t\tif(!a[x][y].w[i])// \u5982\u679c\u8fd9\u4e4b\u95f4\u6ca1\u6709\u5899 \n\t\t\troom_max(xx,yy);\n\t}\n\treturn;\n}\n\nvoid work()\n{\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tif(!vis[i][j])\n\t\t\t{\n\t\t\t\tsum=0;// \u540c\u7b2c\u4e8c\u884c\uff0c\u5bfb\u627e\u623f\u95f4\u6700\u5927 \n\t\t\t\ttot++;// \u623f\u95f4\u603b\u6570 \n\t\t\t\troom(i,j);// \u5bfb\u627e\u8054\u901a\u5757 \n\t\t\t\tans=max(ans,sum);\n\t\t\t\troom_max(i,j);// \u540c\u7b2c\u4e09\uff0c\u56db\uff0c\u5bfb\u627e\u6700\u5927\u76f8\u90bb\u623f\u95f4\u548c\u5220\u53bb\u7684\u5899 \n\t\t\t}\n\tprintf(\"%d\\n%d\\n\",tot,ans);\n\tans=0;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tfor(int k=0;k<4;k++)\n\t\t\t{\n\t\t\t\txx=i+fx[k];\n\t\t\t\tyy=j+fy[k];\n\t\t\t\tif(xx>n||xx<1||yy>m||yy<1)continue;\n\t\t\t\tif(num[i][j]!=num[xx][yy])// \u53ea\u6709\u4e24\u4e2a\u662f\u4e0d\u4e00\u6837\u7684\u623f\u95f4 \n\t\t\t\t{\n\t\t\t\t\tsum=f[i][j]+f[xx][yy];\n\t\t\t\t\tif(ans<sum)// \u5982\u679c\u6b64\u8054\u901a\u5757\u5927\uff0c\u90a3\u5c31\u9009\u4ed6 \n\t\t\t\t\t{\n\t\t\t\t\t\tlen=0;// \u5220\u9664\u6240\u6709\u7684\u8fb9 \n\t\t\t\t\t\tans=sum;// \u8d4b\u503c \n\t\t\t\t\t}\n\t\t\t\t\tif(ans==sum)// \u5982\u679c\u9762\u79ef\u4e00\u6837 \n\t\t\t\t\t{\n\t\t\t\t\t\tlen++;\n\t\t\t\t\t\tswitch(k)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase 0:western(i,j);break;// \u5982\u679c\u662f\u897f\u8fb9\u7684\u5899 \n\t\t\t\t\t\t\tcase 1:north(i,j);break;// \u5982\u679c\u662f\u5317\u8fb9\u7684\u5899 \n\t\t\t\t\t\t\tcase 2:east(i,j);break;// \u5982\u679c\u662f\u4e1c\u8fb9\u7684\u5899 \n\t\t\t\t\t\t\tcase 3:south(i,j);break;// \u5982\u679c\u662f\u897f\u8fb9\u7684\u5899 \n\t\t\t\t\t\t\tdefault:break;// \u53ef\u6709\u53ef\u65e0 \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\tprintf(\"%d\\n\",ans);// \u6253\u5370\u6700\u5927\u7684\u4e24\u623f\u8054\u901a\u9762\u79ef \n\tsort(edge+1,edge+1+len,cmp);// \u7ed9\u8fb9\u6392\u5e8f \n\tif(edge[1].flag)ch='E';\n\telse ch='N';// \u5224\u65ad \n\tprintf(\"%d %d %c\",edge[1].x,edge[1].y,ch);// \u6253\u5370\u6a2a\u7eb5\u5750\u6807 \n\treturn;\n}\n\nvoid read()\n{\n\tscanf(\"%d%d\",&m,&n);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i][j].k);\n\t\t\tinit(a[i][j].k,i,j);// \u628a\u6bcf\u5835\u5899\u5efa\u597d \n\t\t}\n\treturn;\n}\n\nint main()\n{\n\tread(); \n\twork();\n\treturn 0;\n}\n```",
        "postTime": 1541738279,
        "uid": 86309,
        "name": "\u591a\u7c73",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u8fd9\u9898\u8981\u6c42\u8f93\u51fa\u591a\u4e2a\u7b54\u6848\uff0c\u4ed6\u4eec\u5206\u522b\u662f\n1.\u521d\u59cb\u623f\u95f4\u6570\u76ee\n2.\u521d\u59cb\u7684\u6700\u5927\u623f\u95f4\u7684\u5927\u5c0f\n3.\u79fb\u9664\u4e00\u9762\u5899\u540e\u6240\u80fd\u5f97\u5230\u7684\u6700\u5927\u623f\u95f4\u7684\u5927\u5c0f\n4.\u79fb\u9664\u540e\u80fd\u591f\u5f97\u5230\u6700\u5927\u65b0\u623f\u95f4\u7684\u5899\n\u4ed4\u7ec6\u5206\u6790\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u56db\u4e2a\u95ee\u9898\u7ffb\u8bd1\u6210\u4ee5\u4e0b\u95ee\u9898\n\nquestion 1:\u8054\u901a\u5757\u6570\u91cf\nquestion 2:\u6700\u5927\u8054\u901a\u5757\u7684\u5927\u5c0f\nquestion 3:\u79fb\u9664\u4e00\u5904\u969c\u788d\u540e\u80fd\u591f\u5f97\u5230\u65b0\u7684\u6700\u5927\u8054\u901a\u5757\u7684\u5927\u5c0f\nquestion 4:\u79fb\u9664\u540e\u80fd\u591f\u5f97\u5230\u65b0\u7684\u6700\u5927\u8054\u901a\u5757\u7684\u969c\u788d\n\n\u5f88\u660e\u663e\uff0c\u5bf9\u4e8equestion 1\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7528\u5e7f\u641c\u8bb0\u5f55\u5c31\u53ef\u4ee5\u4e86\n\nquestion 2\u5176\u5b9e\u4e5f\u53ef\u4ee5\u5728\u6c42\u5b8c\u6bcf\u4e00\u4e2a\u8054\u901a\u5757\u65f6\uff0c\u5c06\u8be5\u8054\u901a\u5757\u7684\u5927\u5c0f\u4e0emax_room\u6bd4\u8f83\u4e00\u4e0b(\u4e00\u5f00\u59cbmax_room\u8bbe\u4e3a0)\uff0c\u5982\u679c\u66f4\u5927\u5c31\u5c06max_room\u66f4\u65b0\u4e3a\u8be5\u8054\u901a\u5757\u7684\u5927\u5c0f.\n\nquestion 3\uff0c\u8fd9\u4e2a\u7a0d\u5fae\u9ebb\u70e6\u4e00\u70b9\u70b9.\u9996\u5148\u6211\u4eec\u8003\u8651\u5982\u4f55\u62c6\u5899\uff0c\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5bf9\u4e8e\u57ce\u5821\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5c0f\u77e9\u5f62\uff0c\u9898\u76ee\u8981\u6c42\u6211\u4eec\u5148\u8003\u8651\u63a8\u6389\u5317\u8fb9\u7684\u5899\u518d\u8003\u8651\u63a8\u6389\u4e1c\u8fb9\u7684\u5899.\n\u5982\u679c\u5b83\u5317\u8fb9\u6709\u5899,\u5e76\u4e14\u5b83\u4e0d\u662f\u57ce\u5821\u6700\u5317\u8fb9\u7684\u5c0f\u77e9\u5f62(\u8fb9\u754c\u5224\u65ad)\uff0c\u5219\u6211\u4eec\u5148\u628a\u5b83\u5317\u8fb9\u7684\u5899\u63a8\u6389\uff0c\u518d\u4ee5\u8be5\u5c0f\u77e9\u5f62\u4e3a\u8d77\u70b9\u8fdb\u884c\u5e7f\u641c\u6c42\u8054\u901a\u5757\uff0c\u6c42\u5b8c\u540e\u518d\u770b\u80fd\u4e0d\u80fd\u66f4\u65b0max_new_room\u7684\u503c.\u7136\u540e\u628a\u5317\u8fb9\u7684\u5899\u5efa\u8d77\u6765\uff0c\u518d\u8003\u8651\u63a8\u6389\u4e1c\u8fb9\u7684\u5899\u7684\u60c5\u51b5\uff0c\u65b9\u6cd5\u4e0e\u63a8\u5317\u8fb9\u7684\u5899\u540c\u7406,\u53ea\u662f\u8fb9\u754c\u5224\u65ad\u7a0d\u5fae\u53d8\u5316\u4e86\u4e00\u4e0b\u800c\u5df2.\u9898\u76ee\u4e2d\u8981\u6c42\uff0c\u5982\u6709\u591a\u89e3\uff0c\u5219\u8f93\u51fa\u6700\u897f\u8fb9\u7684\u5899\uff0c\u82e5\u8fd8\u6709\u591a\u89e3\uff0c\u5219\u8f93\u51fa\u6700\u5357\u8fb9\u7684\u5899.\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u6309\u7167\u4ece\u5357\u5230\u5317\uff0c\u4ece\u897f\u5230\u4e1c\u7684\u987a\u5e8f\u679a\u4e3e\u5c0f\u77e9\u5f62\u641c\u7d22,\u8fd9\u6837\u7684\u987a\u5e8f\u80fd\u591f\u4fdd\u8bc1\u641c\u5230\u7684\u89e3\u4e00\u5b9a\u662f\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\u7684.\n\n\u800c\u5bf9\u4e8equestion 4\uff0c\u5b8c\u5168\u53ef\u4ee5\u5728\u89e3question 3\u7684\u65f6\u5019\u987a\u4fbf\u8bb0\u5f55\u4e0b\u6765\uff0c\u8fd9\u91cc\u5c31\u4e0d\u591a\u505a\u8d58\u8ff0\u4e86\n\n\u6700\u540e\u518d\u8bb2\u4e00\u8bb2\u4ee3\u7801\u5b9e\u73b0\u4e2d\u7684\u4e00\u4e9b\u7ec6\u8282,\u9996\u5148\u5c31\u662f\u5982\u4f55\u5bf9\u8f93\u5165\u7684 n\u4e58m \u7684\u8868\u793a\u57ce\u5821\u5185\u5899\u58c1\u7ec4\u6210\u7684\u6570\u5217\u77e9\u9635\u8fdb\u884c\u5904\u7406\uff0c\u6839\u636e\u9898\u76ee\u4e2d\u7ed9\u51fa\u76841\u5bf9\u5e94\u897f\u8fb9\u6709\u5899\uff0c2\u5bf9\u5e94\u5317\u8fb9\u6709\u5899\u7b49\u7b49\u6807\u51c6\uff0c\u6211\u4eec\u679a\u4e3e\u4e00\u4e9b\u6570\u636e\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u4e2a1\u523015\u7684\u6570\u5b57\u90fd\u5bf9\u5e94\u4e00\u79cd\u5899\u58c1\u7684\u7ec4\u6210\u60c5\u51b5(\u598211\u4ee3\u8868\u5317\uff0c\u897f\uff0c\u5357\u8fb9\u6709\u5899). \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u7528bool \u6570\u7ec4 wall[i][j][k]\u8868\u793a\u5728(i,j)\u7684\u4f4d\u7f6e\u7684k\u65b9\u5411\u6709\u65e0\u5899(\u6709\u5219\u4e3atrue\uff0c\u65e0\u5219\u4e3afalse)\uff0c\u5728\u4ee3\u7801\u91cc\u6211\u5b9a\u4e49k=0\u8868\u793a\u5317\u65b9\u5411\uff0ck=1\u8868\u793a\u4e1c\u65b9\u5411\uff0ck=2\u8868\u793a\u5357\u65b9\u5411,k=3\u8868\u793a\u897f\u65b9\u5411.\u7531\u4e8ewall\u6570\u7ec4\u91cc\u7684k\u5982\u6b64\u5b9a\u4e49\uff0c\u6240\u4ee5\u5728\u5e7f\u641c\u65f6\u7528\u5230\u7684\u65b9\u5411\u6570\u7ec4d[k]\u5e94\u8be5\u4e5f\u6309\u7167\u4e0a\u9762\u7684k\u7684\u6807\u51c6\u8fdb\u884c\u521d\u59cb\u5316.\n\u8fd8\u6709\uff0c\u5728\u89e3\u51b3question 3\u548cquestion 4\u65f6\u8bb0\u5f97\u6bcf\u6b21\u90fd\u8981\u6e05\u7a7a\u961f\u5217\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=50+5;\nint d[4][2]=\n{\n    {-1,0},//\u5317 \n    {0,1},//\u4e1c\n    {1,0},//\u5357\n    {0,-1}//\u897f \n};\nint queue1[N*N][2],room_num,max_room,max_new_room,key_wall_x,key_wall_y;\nchar key_wall;\nbool expend[N][N],wall[N][N][4];\ninline int read()\n{\n    int res=0,flag=1;\n    char ch=getchar();\n    while(!isdigit(ch))\n    {\n        if(ch=='-') flag=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        res=(res<<3)+(res<<1)+ch-'0';\n        ch=getchar();\n    }\n    return res*flag;\n}\ninline void write(int x)\n{\n    if(x/10) write(x/10);\n    putchar(char(x%10+'0'));\n}\ninline void transform(int x,int y,int direction)\n{\n    if(direction==1) wall[x][y][3]=true;\n    if(direction==2) wall[x][y][0]=true;\n    if(direction==3) wall[x][y][0]=wall[x][y][3]=true;\n    if(direction==4) wall[x][y][1]=true;\n    if(direction==5) wall[x][y][3]=wall[x][y][1]=true;\n    if(direction==6) wall[x][y][0]=wall[x][y][1]=true;\n    if(direction==7) wall[x][y][0]=wall[x][y][1]=wall[x][y][3]=true;\n    if(direction==8) wall[x][y][2]=true;\n    if(direction==9) wall[x][y][3]=wall[x][y][2]=true;\n    if(direction==10) wall[x][y][0]=wall[x][y][2]=true;\n    if(direction==11) wall[x][y][0]=wall[x][y][3]=wall[x][y][2]=true;\n    if(direction==12) wall[x][y][2]=wall[x][y][1]=true;\n    if(direction==13) wall[x][y][3]=wall[x][y][1]=wall[x][y][2]=true;\n    if(direction==14) wall[x][y][0]=wall[x][y][1]=wall[x][y][2]=true;\n    if(direction==15) wall[x][y][0]=wall[x][y][1]=wall[x][y][2]=wall[x][y][3]=true;\n}\ninline void BFS(int x,int y,int task,char down_wall)\n{\n    memset(queue1,0,sizeof(queue1));\n    int head=0,tail=1;\n    queue1[1][0]=x;queue1[1][1]=y;\n    expend[x][y]=true;\n    do\n    {\n        head++;\n        int rx=queue1[head][0];\n        int ry=queue1[head][1];\n        for(register int i=0;i<=3;++i)\n        {\n            int dx=rx+d[i][0];\n            int dy=ry+d[i][1];\n            if(!expend[dx][dy]&&!wall[rx][ry][i])\n            {\n                expend[dx][dy]=true;\n                ++tail;\n                queue1[tail][0]=dx;\n                queue1[tail][1]=dy;\n            }\n        }\n    }while(head<tail);\n    if(task==1) max_room=max(max_room,tail);\n    if(task==2)\n    {\n        if(tail>max_new_room)\n        {\n            max_new_room=tail;\n            key_wall_x=x;\n            key_wall_y=y;\n            key_wall=down_wall;\n        }\n    }\n}\nint main()\n{\n    int n,m,x;\n    m=read();n=read();\n    for(register int i=1;i<=n;++i)\n     for(register int j=1;j<=m;++j)\n     {\n     \tx=read();\n     \ttransform(i,j,x);\n     }\n     \n    for(register int i=1;i<=n;++i)\n     for(register int j=1;j<=m;++j)\n        if(!expend[i][j])\n        {room_num++;BFS(i,j,1,'M');}//step 1 and step 2\n    \n    for(register int j=1;j<=m;++j)\n     for(register int i=n;i>=1;--i)\n     {\n        if(wall[i][j][0]&&i!=1)//\u5317\u9762\u6709\u5899 \n     \t{\n     \t\tmemset(expend,false,sizeof(expend));\n            wall[i][j][0]=false;\n     \t\tBFS(i,j,2,'N');\n     \t\twall[i][j][0]=true;\n        }\n        if(wall[i][j][1]&&j!=m)//\u4e1c\u9762\u6709\u5899 \n        {\n            memset(expend,false,sizeof(expend));\n            wall[i][j][1]=false;\n            BFS(i,j,2,'E');\n            wall[i][j][1]=true;\n        }\n     }\n    write(room_num);printf(\"\\n\");\n    write(max_room);printf(\"\\n\");\n    write(max_new_room);printf(\"\\n\");\n    write(key_wall_x);printf(\" \");write(key_wall_y);printf(\" \");printf(\"%c\",key_wall);\n    return 0;\n}\n```",
        "postTime": 1536464786,
        "uid": 86110,
        "name": "\u9752\u706f\u591c\u6e38",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "\u6211\u4eec\u61a8\u539a\u7684USACO\u4e3b\u4eba\u516c\u519c\u592b\u7ea6\u7ff0(Farmer John)\u4ee5\u65e0\u6cd5\u60f3\u8c61\u7684\u8fd0\u6c14,\u5728\u4ed6\u751f\u65e5\u90a3\u5929\u6536\u5230\u4e86\u4e00\u4efd\u7279\u522b\u7684\u793c\u7269\uff1a\u4e00\u5f20\u201c\u5e78\u8fd0\u7231\u5c14\u5170\u201d\uff08\u4e00\u79cd\u5f69\u7968\uff09\u3002\u7ed3\u679c\u8fd9\u5f20\u5f69\u7968\u8ba9\u4ed6\u83b7\u5f97\u4e86\u8fd9\u6b21\u6bd4\u8d5b\u552f\u4e00\u7684\u5956\u54c1\u2014\u2014\u5750\u843d\u4e8e\u7231\u5c14\u5170\u90ca\u5916\u7684\u4e00\u5ea7\u68a6\u5e7b\u822c\u7684\u57ce\u5821\uff01\n\n\u559c\u6b22\u5439\u5618\u7684\u519c\u592b\u7ea6\u7ff0\u7acb\u523b\u56de\u5230\u6709\u7740\u5439\u5618\u4f20\u7edf\u7684\u5a01\u65af\u5eb7\u8f9b\u8001\u5bb6\u5f00\u59cb\u5439\u5618\u4e86, \u519c\u592b\u7ea6\u7ff0\u60f3\u8981\u544a\u8bc9\u4ed6\u7684\u5976\u725b\u4eec\u5173\u4e8e\u4ed6\u57ce\u5821\u7684\u4e00\u5207\u3002\u4ed6\u9700\u8981\u505a\u4e00\u4e9b\u5439\u5618\u524d\u7684\u51c6\u5907\u5de5\u4f5c\uff1a\u6bd4\u5982\u8bf4\u77e5\u9053\u57ce\u5821\u6709\u591a\u5c11\u4e2a\u623f\u95f4\uff0c\u6bcf\u4e2a\u623f\u95f4\u6709\u591a\u5927\u3002\u53e6\u5916\uff0c\u519c\u592b\u7ea6\u7ff0\u60f3\u8981\u628a\u4e00\u9762\u5355\u72ec\u7684\u5899\uff08\u6307\u4e24\u4e2a\u5355\u4f4d\u95f4\u7684\u5899\uff09\u62c6\u6389\u4ee5\u5f62\u6210\u4e00\u4e2a\u66f4\u5927\u7684\u623f\u95f4\u3002 \u4f60\u7684\u5de5\u4f5c\u5c31\u662f\u5e2e\u519c\u592b\u7ea6\u7ff0\u505a\u4ee5\u4e0a\u7684\u51c6\u5907\uff0c\u7b97\u51fa\u623f\u95f4\u6570\u4e0e\u623f\u95f4\u7684\u5927\u5c0f\u3002\n\n\u57ce\u5821\u7684\u5e73\u9762\u56fe\u88ab\u5212\u5206\u6210M*N(1 <=M,N<=50\uff09\u4e2a\u6b63\u65b9\u5f62\u7684\u5355\u4f4d\uff0c\u4e00\u4e2a\u8fd9\u6837\u7684\u5355\u4f4d\u53ef\u4ee5\u67090\u52304\u9762\u5899\u73af\u7ed5\u3002\u57ce\u5821\u5468\u56f4\u4e00\u5b9a\u6709\u5916\u5899\u73af\u7ed5\u4ee5\u906e\u98ce\u6321\u96e8\u3002\uff08\u5c31\u662f\u8bf4\u5e73\u9762\u56fe\u7684\u56db\u5468\u4e00\u5b9a\u662f\u5899\u3002\uff09\n\n\u8bf7\u4ed4\u7ec6\u7814\u7a76\u4e0b\u9762\u8fd9\u4e2a\u6709\u6ce8\u89e3\u7684\u57ce\u5821\u5e73\u9762\u56fe\uff1a\n\n![\u8fd9\u91cc\u5199\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdn.net/20180906214002572?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3N4eV9fb3J6/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n\u53cb\u60c5\u63d0\u793a\uff0c\u8fd9\u4e2a\u57ce\u5821\u7684\u5e73\u9762\u56fe\u662f7\u00d74\u4e2a\u5355\u4f4d\u7684\u3002\u4e00\u4e2a\u201c\u623f\u95f4\u201d\u7684\u662f\u5e73\u9762\u56fe\u4e2d\u4e00\u4e2a\u7531\u201c#\u201d\u3001\u201c-\u201d\u3001\u201c|\u201d\u56f4\u6210\u7684\u683c\u5b50\uff08\u5c31\u662f\u56fe\u91cc\u9762\u7684\u90a3\u4e00\u4e2a\u4e2a\u7684\u683c\u5b50\uff09\u3002\u6bd4\u5982\u8bf4\u8fd9\u4e2a\u6837\u4f8b\u5c31\u67095\u4e2a\u623f\u95f4\u3002\uff08\u5927\u5c0f\u5206\u522b\u4e3a9\u30017\u30013\u30011\u30018\u4e2a\u5355\u4f4d\uff08\u6392\u540d\u4e0d\u5206\u5148\u540e\uff09\uff09\n\n\u79fb\u53bb\u7bad\u5934\u6240\u6307\u7684\u90a3\u9762\u5899\uff0c\u53ef\u4ee5\u4f7f2\u4e2a\u623f\u95f4\u5408\u4e3a\u4e00\u4e2a\u65b0\u623f\u95f4\uff0c\u4e14\u6bd4\u79fb\u53bb\u5176\u4ed6\u5899\u6240\u5f62\u6210\u7684\u623f\u95f4\u90fd\u5927\u3002\uff08\u539f\u6587\u4e3a\uff1aRemoving the wall marked by the arrow merges a pair of rooms to make the largest possible room that can be made by removing a single wall. \uff09\n\n\u57ce\u5821\u4fdd\u8bc1\u81f3\u5c11\u67092\u4e2a\u623f\u95f4\uff0c\u800c\u4e14\u4e00\u5b9a\u6709\u4e00\u9762\u5899\u53ef\u4ee5\u88ab\u79fb\u8d70\u3002\n\n\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n\u8f93\u5165\u683c\u5f0f\uff1a\n\u7b2c\u4e00\u884c\u6709\u4e24\u4e2a\u6574\u6570\uff1aM\u548cN \u57ce\u5821\u7684\u5e73\u9762\u56fe\u7528\u4e00\u4e2a\u7531\u6570\u5b57\u7ec4\u6210\u7684\u77e9\u9635\u8868\u793a\uff0c\u4e00\u4e2a\u6570\u5b57\u8868\u793a\u4e00\u4e2a\u5355\u4f4d\uff0c\u77e9\u9635\u6709N\u884cM\u5217\u3002\u8f93\u5165\u4e0e\u6837\u4f8b\u7684\u56fe\u4e00\u81f4\u3002\n\n\u6bcf\u4e00\u4e2a\u5355\u4f4d\u7684\u6570\u5b57\u544a\u8bc9\u6211\u4eec\u8fd9\u4e2a\u5355\u4f4d\u7684\u4e1c\u897f\u5357\u5317\u662f\u5426\u6709\u5899\u5b58\u5728\u3002\u6bcf\u4e2a\u6570\u5b57\u662f\u7531\u4ee5\u4e0b\u56db\u4e2a\u6574\u6570\u7684\u67d0\u4e2a\u6216\u67d0\u51e0\u4e2a\u6216\u4e00\u4e2a\u90fd\u6ca1\u6709\u52a0\u8d77\u6765\u7684\u3002\n\n1: \u5728\u897f\u9762\u6709\u5899\n\n2: \u5728\u5317\u9762\u6709\u5899\n\n4: \u5728\u4e1c\u9762\u6709\u5899\n\n8: \u5728\u5357\u9762\u6709\u5899\n\n\u57ce\u5821\u5185\u90e8\u7684\u5899\u4f1a\u88ab\u89c4\u5b9a\u4e24\u6b21\u3002\u6bd4\u5982\u8bf4\uff081\uff0c1\uff09\u5357\u9762\u7684\u5899\uff0c\u4ea6\u4f1a\u88ab\u6807\u8bb0\u4e3a\uff082\uff0c1\uff09\u5317\u9762\u7684\u5899\u3002\n\n\u8f93\u51fa\u683c\u5f0f\uff1a\n\u8f93\u51fa\u5305\u542b\u5982\u4e0b4\u884c:\n\n\u7b2c 1 \u884c: \u57ce\u5821\u7684\u623f\u95f4\u6570\u76ee\u3002\n\n\u7b2c 2 \u884c: \u6700\u5927\u7684\u623f\u95f4\u7684\u5927\u5c0f\n\n\u7b2c 3 \u884c: \u79fb\u9664\u4e00\u9762\u5899\u80fd\u5f97\u5230\u7684\u6700\u5927\u7684\u623f\u95f4\u7684\u5927\u5c0f\n\n\u7b2c 4 \u884c: \u79fb\u9664\u54ea\u9762\u5899\u53ef\u4ee5\u5f97\u5230\u9762\u79ef\u6700\u5927\u7684\u65b0\u623f\u95f4\u3002\n\n\u9009\u62e9\u6700\u4f73\u7684\u5899\u6765\u63a8\u5012\u3002\u6709\u591a\u89e3\u65f6\u9009\u6700\u9760\u897f\u7684\uff0c\u4ecd\u7136\u6709\u591a\u89e3\u65f6\u9009\u6700\u9760\u5357\u7684\u3002\u540c\u4e00\u683c\u5b50\u5317\u8fb9\u7684\u5899\u6bd4\u4e1c\u8fb9\u7684\u5899\u66f4\u4f18\u5148\u3002\n\n\u7528\u8be5\u5899\u7684\u5357\u90bb\u5355\u4f4d\u7684\u5317\u5899\u6216\u897f\u90bb\u5355\u4f4d\u7684\u4e1c\u5899\u6765\u8868\u793a\u8fd9\u9762\u5899\uff0c\u65b9\u6cd5\u662f\u8f93\u51fa\u90bb\u8fd1\u5355\u4f4d\u7684\u884c\u6570\u3001\u5217\u6570\u548c\u5899\u7684\u65b9\u4f4d\uff08\"N\"\uff08\u5317\uff09\u6216\u8005\"E\"\uff08\u4e1c\uff09\uff09\u3002\n\n\u5148\u7528\u7279\u6b8a\u5904\u7406\u5c06\u5e73\u9762\u56fe\u8fd8\u539f\uff0c\u8ddf\u65b9\u4fbf\u4f7f\u7528dfs\n\n\u7528dfs\u5b9e\u73b0\uff0c\u679a\u4e3e\u6bcf\u4e2a\u623f\u95f4\uff0c\u6c42\u51fa\u6700\u5927\u9762\u79ef\uff0c\u5e76\u4fdd\u5b58\uff0c\u6700\u540e\u6309\u9898\u76ee\u8981\u6c42\u6c42\u51fa\u6700\u4f18\u89e3\u3002\nusaco\u57ce\u5821\u9898\u89e3\n\u4ee5\u4e0b\u4e3a\u6e90\u4ee3\u7801\uff1a\n```\nconst z:array[1..4,1..2]of -1..1=((0,-1),(-1,0),(0,1),(1,0));\n      uu:array[1..4]of 1..4=(4,2,3,1);\nvar i,j,k,i1,j1,k1:longint;\n    m,n,x,y,sum,int,int2,max:longint;\n    a,b:array[-1..500,-1..500]of boolean;\n    c,d:array[-1..500,-1..500]of longint;\n    jz:array[0..100]of longint;\n    u:array[0..10000]of longint;\n    s:string;\n    max_ch:longint;\n    max_x,max_y:longint;\n    sum2:longint;\n    boo:array[1..4]of boolean;\nprocedure jz_(m:longint); //\u5904\u7406\nbegin\n  jz[4]:=m div 8;\n  m:=m mod 8;\n  jz[3]:=m div 4;\n  m:=m mod 4;\n  jz[2]:=m div 2;\n  m:=m mod 2;\n  jz[1]:=m;\nend;\nprocedure dfs_1(x,y:longint); //\u6c42\u51fa\u7b54\u68481,2\nvar i:longint;\nbegin\n  if not b[x,y] then exit;\n  b[x,y]:=false;\n  if (x mod 2=1) and (y mod 2=1) then\n  inc(int);\n  for i:=1 to 4 do\n  dfs_1(x+z[i,1],y+z[i,2]); //\u641c\u7d22\nend;\nprocedure dfs_2(x,y:longint); //\u6c42\u51fa\u7b54\u68483\nvar i:longint;\nbegin\n  if not b[x,y] then exit;\n  b[x,y]:=false;\n  c[x,y]:=u[int2];\n  d[x,y]:=int2; //\u65b9\u4fbf\u5904\u7406\u6253\u6d1e\u4f4d\u7f6e\n  for i:=1 to 4 do\n  dfs_2(x+z[i,1],y+z[i,2]); //\u641c\u7d22\nend;\nbegin\n  read(m,n);\n  s:='WNES';\n  for i:=1 to n do\n  for j:=1 to m do\n  begin\n    read(x);\n    a[i*2-1,j*2-1]:=true;\n    jz_(x);\n    for k:=1 to 4 do\n    begin\n      if jz[k]=0 then\n      a[i*2-1+z[k,1],j*2-1+z[k,2]]:=true;\n    end;\n  end;\n  b:=a;\n  {for i:=0 to n*2 do\n  begin\n    for j:=0 to m*2 do begin if not a[i,j] then write('#') else write(' '); end;\n    writeln;\n  end;}\n  for i:=1 to n*2-1 do\n  for j:=1 to m*2-1 do\n  begin\n    if b[i,j] then\n    begin\n    inc(int2);\n    dfs_1(i,j);\n    u[int2]:=int;\n    if int>max then max:=int;\n    int:=0;\n    end;\n  end;\n  writeln(int2); // \u623f\u95f4\u6570\n  writeln(max); // \u6700\u5927\u623f\u95f4\n  b:=a;\n { for i:=0 to n*2 do\n  begin\n    for j:=0 to m*2 do begin if not a[i,j] then write('#') else write(' '); end;\n    writeln;\n  end;\n  writeln;}\n  int2:=0;\n  for i:=1 to n*2-1 do\n  for j:=1 to m*2-1 do\n  begin\n    if b[i,j] then\n    begin\n    inc(int2);\n    dfs_2(i,j);\n    end;\n  end;\n  {for i:=0 to n*2 do\n  begin\n    for j:=0 to m*2 do write(c[i,j]);\n    writeln;\n  end;}\n  max:=0;\n  // \u627e\u5230\u6253\u6d1e\u5904\n  for j:=m downto 1 do\n  for i:=1 to n do\n  begin\n    x:=i*2-1;\n    y:=j*2-1;\n    sum:=c[x,y];\n    for i1:=3 downto 2 do\n    begin\n      if not a[x+z[i1,1],y+z[i1,2]] and (d[x+z[i1,1]*2,y+z[i1,2]*2]<>d[x,y]) then\n      begin\n      if (c[x+z[i1,1]*2,y+z[i1,2]*2]+sum>=max) then\n      begin\n      max:=c[x+z[i1,1]*2,y+z[i1,2]*2]+sum;\n      for k1:=1 to 4 do boo[k1]:=false;\n      max_x:=i;\n      max_y:=j;\n      max_ch:=i1;\n      end;\n      end;\n    end;\n  end;\n  //\n  writeln(max); // \u6253\u6d1e\u540e\u6700\u5927\u623f\u95f4\n  writeln(max_x,' ',max_y,' ',s[max_ch]);\nend.\n```\n\u58f0\u660e\uff1a\u672c\u4eba\u849f\u84bb\u4e00\u679a\u3002\n\n",
        "postTime": 1536366603,
        "uid": 86625,
        "name": "Limit",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "\u5b89\u5229\u4e00\u4e0b\u6211\u7684[\u535a\u5ba2](https://www.cnblogs.com/20170330john2005)\n\n-----\n\n\u8fd9\u9053\u9898\u6211\u4e00\u5f00\u59cb\u53ea\u4f1a\u505a\u524d\u4e24\u95ee\uff0c\u56e0\u4e3a\u524d\u4e24\u95ee\u4e00\u4e2a\u66b4\u529b\u5bbd\u641c\u5c31\u53ef\u4ee5\u89e3\u51b3\u3002\n\n\u540e\u4e24\u95ee\uff0c\u6700\u5f00\u59cb\u5e76\u6ca1\u6709\u60f3\u5230\u5982\u4f55\u53bb\u505a\uff0c\u540e\u6765\u4e00\u60f3\uff0c\u53ea\u8981\u4ece\u4e0b\u5230\u4e0a\u626b\u4e00\u904d\uff0c\u6253\u4e00\u4e2a\u64c2\u53f0\u6bd4\u8f83\u5927\u5c0f\u4fbf\u89e3\u51b3\u4e86\u3002\n\n\n\u8fd9\u9053\u9898\u6570\u636e\u5f88\u6c34\uff0c\u53ea\u670950 * 50 = 2500 \uff0c99%\u4e0d\u8d85\u7a7a\u95f4\u548c\u65f6\u95f4\u3002\n\n\u8f93\u5165\u5904\u7406\u7684\u95ee\u9898\u89c1\u4ee3\u7801\u3002\n\n```cpp\n\tcin>>m>>n;\n\tfor(int i=1; i<=n; i++) {  //\u8f93\u5165\u8981\u5904\u7406\u597d\uff01\uff01\n\t\tfor(int j=1; j<=m; j++) {\n\t\t\tcin>>wall;\n\t\t\tif(wall>=8) {  //\u5357\u9762 '0' -> 8\n\t\t\t\twall-=8;\n\t\t\t\thave_wall[i][j][0]=true;\n\t\t\t}\n\t\t\tif(wall>=4) {  //\u4e1c\u9762 '1' -> 4\n\t\t\t\twall-=4;\n\t\t\t\thave_wall[i][j][1]=true;\n\t\t\t}\n\t\t\tif(wall>=2) {  //\u5317\u9762 '2' -> 2\n\t\t\t\twall-=2;\n\t\t\t\thave_wall[i][j][2]=true;\n\t\t\t}\n\t\t\tif(wall>=1) {  //\u897f\u9762 '3' -> 1\n\t\t\t\twall-=1;\n\t\t\t\thave_wall[i][j][3]=true;\n\t\t\t}\n\t\t}\n\t}\n```\n\n### \u95ee\u9898\u7684\u62c6\u5206\n\n\u95ee\u9898\u53ef\u4ee5\u62c6\u6210\u4e24\u90e8\u5206\uff1a\n- $BFS$ \u641c\u51fa\u623f\u95f4\u7684\u4e2a\u6570\uff0c\u5927\u5c0f\uff0c\u53ca\u7f16\u53f7\uff08\u540e\u9762\u6709\u7528 \u2026\u2026 \uff09\u3002\n- \u53cc\u91cd\u5faa\u73af\u9010\u4e00\u68c0\u67e5\u62c6\u53bb\u4e00\u9762\u5899\uff0c\u5982\u679c\u5899\u4e24\u8fb9\u7684\u7f16\u53f7\u4e0d\u540c\uff0c\u5c31\u628a\u9762\u79ef\u52a0\u8d77\u6765\uff0c\u6253\u64c2\u53f0\u3002\n\n### \u7b2c\u4e00\u90e8\u5206\n\n#### \u4f20\u7edf$BFS$\n\n\u8bb0\u5f55\u662f\u5426\u6765\u8fc7\uff0c\u6ca1\u6765\u8fc7\u5927\u5c0f$++$\u3002\n\n\u5728\u987a\u5e26\u8bb0\u5f55\u623f\u95f4\u53f7\u3002\n\n```cpp\nvoid bfs(int x,int y) {\n\tarea[num]=1;\t\t\t//num\u5168\u5c40\u53d8\u91cf\uff0c\u7528\u6765\u8bb0\u5f55\u623f\u95f4\u6570\n    \t\t\t\t\t\t//area[]\u7528\u6765\u8bb0\u5f55\u6bcf\u4e2a\u623f\u95f4\u5927\u5c0f\n                            //\u9644\u62101\u662f\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u623f\u95f4\u4e5f\u7b97\uff08\u5b83\u5728BFS\u4e2d\u6ca1\u6709++\uff09\n\tvis[x][y]=num;\t\t\t//vis[]\u7528\u6765\u5224\u65ad\u662f\u5426\u6765\u8fc7\u548c\u623f\u95f4\u53f7\u7801\n    \t\t\t\t\t\t//\u5982\u679c\u662f0\uff0c\u6ca1\u6765\u8fc7\uff0c\u5982\u679c\u586b\u8fc7\u6570\u5b57\u4e86\uff0c\u6765\u8fc7\u3002\n\tpos head;\t\t\t\t//\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\n\thead.x=x;\n\thead.y=y;\n\tq.push(head);\t\t\t//\u538b\u5165\u961f\u5217\n\twhile(!q.empty()) {\t\t//\u5982\u679c\u961f\u5217\u4e0d\u4e3a\u7a7a\uff0c\u8bf4\u660e\u8fd8\u6709\u72b6\u6001\n\t\tpos fa=q.front();\t//\u53d6\u51fa\u961f\u9996\n\t\tq.pop();\t\t\t//\u5f39\u51fa\u961f\u9996\n\t\tfor(int i=0; i<4; i++) {\n        \t\t\t\t\t//\u56db\u4e2a\u65b9\u5411\n\t\t\tpos son;\n\t\t\tson.x=fa.x+dx[i];\n\t\t\tson.y=fa.y+dy[i];\n\t\t\tif(have_wall[fa.x][fa.y][i]||son.x>n||son.y>m||son.x<1||son.y<1||vis[son.x][son.y]>0) continue;\n            \t\t\t\t//\u5224\u65ad\u5728\u4e0d\u5728\u8303\u56f4\u5185\uff0c\u6709\u6ca1\u6709\u5899\u62e6\u7740\uff0c\u6709\u6ca1\u6709\u6765\u8fc7\n\t\t\telse {\n\t\t\t\tvis[son.x][son.y]=num;//\u6807\u8bb0\u6765\u8fc7\n\t\t\t\tarea[num]++;//\u623f\u95f4\u5927\u5c0f++\n\t\t\t\tq.push(son);//\u538b\u5165\u961f\u5217\n\t\t\t}\n\t\t}\n\t}\n\tmax_area=max(max_area,area[num]);//\u6253\u64c2\u53f0\n}\n```\n\n### \u7b2c\u4e8c\u90e8\u5206\n\n#### \u7206\u641c+\u6253\u64c2\u53f0\n\n```cpp\nfor(int j=1; j<=m; j++) {\t//\u4e24\u4e2a\u5faa\u73af\u8c03\u6362\u8fc7\u6765\u4f1a WA!\n\tfor(int i=n; i>=1; i--) {\n\t\tif(have_wall[i][j][2]) //\u5317\u9762\u4f18\u5148(([2]\u4e3a\u5317\u9762))\n\t\t\tif(vis[i][j]!=vis[i-1][j]) {\n\t\t\t\tint tmp=area[vis[i][j]]+area[vis[i-1][j]];\n\t\t\t\t//\u5224\u65ad\u662f\u4e0d\u662f\u4e00\u4e2a\u623f\u95f4\uff0c\u5c31\u628a\u623f\u95f4\u5927\u5c0f\u76f8\u52a0\n\t\t\t\tif(tmp>col_max) {  //\u5982\u679c\u6bd4\u6700\u5f53\u524d\u5bf9\u5927\u8fd8\u8981\u5927\u7684\u8bdd\n\t\t\t\t\tcol_max=tmp;   //\u66f4\u65b0\n\t\t\t\t\tmax_area_wall[0]=i;\n                    //max_area_wall\u7528\u6765\u5b58\u88ab\u63a8\u6389\u7684\u5899\u80fd\uff08\u4f7f\u65b0\u623f\u95f4\u9762\u79ef\u6700\u5927\uff09\u7684\u4fe1\u606f\n\t\t\t\t\t//[0]\u4e3a\u6a2a\u5750\u6807\uff0c[1]\u4e3a\u7eb5\u5750\u6807\uff0c[2]\u4e3a\u4e1c\u9762\u8fd8\u662f\u5317\u9762\uff0c\u5317\u9762\u4e3a0\uff0c\u4e1c\u9762\u4e3a1\n                    max_area_wall[1]=j;\n\t\t\t\t\tmax_area_wall[2]=0;\n\t\t\t\t}\n\t\t\t}\n\t\tif(have_wall[i][j][1])  //\u540c\u4e0a([1]\u4e3a\u4e1c\u9762)\n\t\t\tif(vis[i][j]!=vis[i][j+1]) {\n\t\t\t\tint tmp=area[vis[i][j]]+area[vis[i][j+1]];\n\t\t\t\tif(tmp>col_max) {\n\t\t\t\t\tcol_max=tmp;\n\t\t\t\t\tmax_area_wall[0]=i;\n\t\t\t\t\tmax_area_wall[1]=j;\n\t\t\t\t\tmax_area_wall[2]=1;\n\t\t\t\t}\n\t\t\t}\n\t}\n}\n```\n\n### \u8bb2\u5230\u8fd9\u513f\uff0c\u5e94\u8be5\u4f1a\u5199\u4e86\u5427\uff01",
        "postTime": 1534947414,
        "uid": 72784,
        "name": "ljk_Elaina",
        "ccfLevel": 0,
        "title": "P1457  \u57ce\u5821 The Castle \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u91cc\u662f\u4f5c\u4e3a\u4e00\u4e2a\u84dd\u540d\u849f\u84bb\uff08\u63d0\u4ea4\u9898\u89e3\u65f6\u95f4\u4e3a\u51c6\uff09\u7684\u4ee3\u7801\n\u4e3b\u8981\u601d\u8def\u5c31\u662f\u7528\u5e76\u67e5\u96c6\u5224\u65ad\u662f\u5426\u5728\u4e00\u4e2a\u623f\u95f4\u3002\u3002\u3002\n\u548c\u524d\u9762\u7684\u7ea2\u540d\u5927\u7287\u4eec\u4e0d\u540c\u53ea\u82b1\u4e8620min?!\n\u5e9f\u8bdd\u4e0d\u591a\u4e0a\u4ee3\u7801~~\uff08\u4e8b\u5b9e\u4e0a\u8bf4\u4e86\u5f88\u591a\u5e9f\u8bdd\u4e86\uff09~~\n```c\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\nusing namespace std;\nstruct node\n{\n\tint fa,c;\n\tbool qiang[4];//0123:\u897f\u5317\u4e1c\u5357 \n}a[56000];\nint n,m;\nint findfa(int x)\n{\n\tif(x==a[x].fa)return x;\n\telse return a[x].fa=findfa(a[x].fa);\n}\nint xy(int x,int y){return m*(x-1)+y;}\nint main()\n{\n\tscanf(\"%d %d\",&m,&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tint x,XY=xy(i,j);\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(x>=8){x-=8;a[XY].qiang[3]=true;}\n\t\t\telse a[XY].qiang[3]=false;\n\t\t\tif(x>=4){x-=4;\ta[XY].qiang[2]=true;}\n\t\t\telse a[XY].qiang[2]=false;\n\t\t\tif(x>=2){x-=2;a[XY].qiang[1]=true;}\n\t\t\telse a[XY].qiang[1]=false;\n\t\t\tif(x>=1){x-=1;a[XY].qiang[0]=true;}\n\t\t\telse a[XY].qiang[0]=false;\n\t\t\ta[XY].fa=XY;\n\t\t\ta[XY].c=1;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=m;j>=1;j--)//\u8fd9\u91cc\u9009\u62e9\u4ece\u4e0a\u5230\u4e0b\uff0c\u53f3\u5230\u5de6(\u5176\u5b9e\u65b9\u5411\u95ee\u9898\u5e94\u8be5\u4e0d\u5927\uff0c\u5f00\u59cb\u6253\u7b97\u548c\u62c6\u5899\u653e\u5230\u4e00\u8d77\u7684\u3002\u3002\u540e\u6765\u61d2\u5f97\u60f3\u5c31\u5206\u5f00\u4e86)\n\t\t{\n\t\t\tint XY=xy(i,j);\n\t\t\tif(j!=m)//\u80fd\u8d70\u53f3\u8fb9\u7684\u8bdd\n\t\t\t{\n\t\t\t\tif(a[XY].qiang[2]==false)\n\t\t\t\t{\n\t\t\t\t\tint fax=findfa(XY),fay=findfa(XY+1);\n\t\t\t\t\tif(fax!=fay)//\u628a\u4e24\u4e2a\u683c\u5b50\u5f04\u5230\u4e00\u8d77\n\t\t\t\t\t{\n\t\t\t\t\t\ta[fax].fa=fay;\n\t\t\t\t\t\ta[fay].c+=a[fax].c;a[fax].c=0;//\u8fd9\u5c31\u6210\u4e3a\u4e86\u4e00\u4e2a\u65b0\u7684\u623f\u95f4\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(i!=1)//\u5224\u65ad\u80fd\u4e0d\u80fd\u548c\u4e0a\u9762\u7684\u683c\u5b50\u5f04\u6210\u623f\u95f4\n\t\t\t{\n\t\t\t\tif(a[XY].qiang[1]==false)\n\t\t\t\t{\n\t\t\t\t\tint fax=findfa(XY),fay=findfa(XY-m);\n\t\t\t\t\tif(fax!=fay)\n\t\t\t\t\t{\n\t\t\t\t\t\ta[fax].fa=fay;\n\t\t\t\t\t\ta[fay].c+=a[fax].c;a[fax].c=0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint max=0,ans=0;//\u6253\u4ee3\u7801\u5f00\u59cb\u7684\u65f6\u5019\u662f\u5148\u8bd5\u7740\u5f04\u524d\u4e24\u4e2a\u8f93\u51fa\uff08\u672c\u849f\u84bb\u5f00\u59cb\u662f\u6ca1\u6253\u7b97A\u7684\u3002\u3002\uff09(\u624b\u52a8\u6ed1\u7a3d)\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tint XY=xy(i,j);\n\t\t\tif(a[XY].fa==XY)\n\t\t\t{\n\t\t\t\tif(max<a[XY].c)max=a[XY].c;\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n%d\\n\",ans,max);\n\tmax=0;int maxx,maxy;bool bk;//F:\u4e1c\uff0cT:\u5317 \n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tint XY=xy(i,j);\n\t\t\tif(i!=1)//\u5148\u627e\u5317\u5899\u662f\u56e0\u4e3aij\u76f8\u540c\u65f6\u9009\u62e9\u5148\u66f4\u65b0\u7684\uff08\u4e0b\u9762\u90fd\u662fi>max,j<max\u8fd9\u6837\u6ca1\u6709\u201c=\u201d\uff09\n\t\t\t{\n\t\t\t\tint fax=findfa(XY),fay=findfa(XY-m);\n\t\t\t\tif(fax!=fay)//\u56e0\u4e3a\u5168\u5c40\u627e\u8fc7\u5c31\u4e0d\u5224\u65ad\u5899\u4e86\uff0c\u76f4\u63a5\u770b\u5728\u4e0d\u5728\u4e00\u4e2a\u623f\u95f4\n\t\t\t\t{\n\t\t\t\t\tint s=a[fax].c+a[fay].c;\n\t\t\t\t\tif(max<s)//\u5927\u5c0f\u4f18\u5148\n\t\t\t\t\t{\n\t\t\t\t\t\tmax=s;\n\t\t\t\t\t\tmaxx=i;maxy=j;\n\t\t\t\t\t\tbk=true;\n\t\t\t\t\t}\n\t\t\t\t\telse if(max==s)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(j<maxy)//\u5148\u5411\u897f\uff08j\u5c3d\u91cf\u5c0f\uff09\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmaxx=i;maxy=j;\n\t\t\t\t\t\t\tbk=true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(j==maxy) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(i>maxx)//\u518d\u5411\u5357(i\u5c3d\u91cf\u5927)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmaxx=i;maxy=j;\n\t\t\t\t\t\t\t\tbk=true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\tif(j!=m)\n\t\t\t{\n\t\t\t\tint fax=findfa(XY),fay=findfa(XY+1);\n\t\t\t\tif(fax!=fay)\n\t\t\t\t{\n\t\t\t\t\tint s=a[fax].c+a[fay].c;\n\t\t\t\t\tif(max<s)\n\t\t\t\t\t{\n\t\t\t\t\t\tmax=s;\n\t\t\t\t\t\tmaxx=i;maxy=j;\n\t\t\t\t\t\tbk=false;\n\t\t\t\t\t}\n\t\t\t\t\telse if(max==s)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(j<maxy)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmaxx=i;maxy=j;\n\t\t\t\t\t\t\tbk=false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(j==maxy) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(i>maxx)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmaxx=i;maxy=j;\n\t\t\t\t\t\t\t\tbk=false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",max);//\u8f93\u51fa\n\tprintf(\"%d %d \",maxx,maxy);\n\tif(bk==false)printf(\"E\\n\");\n\telse printf(\"N\\n\");\n\treturn 0;\n}\n```",
        "postTime": 1523344464,
        "uid": 58343,
        "name": "thhhty",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "\u4e2a\u4eba\u8868\u793a\u4e0d\u7406\u89e3\u5404\u4f4d\u5927\u4f6c\u4eec\u7684\u8054\u901a\u5757\uff0c\u89c2\u5bdf\u9898\u76ee\u540e\u611f\u89c9\u7528\u5e76\u67e5\u96c6\u4f1a\u66f4\u597d\u505a\u4e00\u4e9b\uff1b\n\n\u5c06\u4e0d\u5206\u9694\u7684\u4e24\u4e2a\u623f\u95f4\u5408\u5e76\u96c6\u5408\u4e2d\uff0c\u5408\u5e76\u540e\u623f\u95f4\u7684\u5927\u5c0f\u5c31\u662f\u4e24\u4e2a\u623f\u95f4\u5927\u5c0f\u4e4b\u548c\uff0c\u96c6\u5408\u4e2a\u6570\u5c31\u662f\u623f\u95f4\u4e2a\u6570\uff1b\n\n\u62c6\u5899\u5408\u9762\u79ef\u6bd4\u8f83\uff0c\u4e0d\u662f\u6240\u6709\u4e4b\u95f4\u6709\u5899\u7684\u76f8\u90bb\u683c\u5b50\u90fd\u4e0d\u662f\u540c\u4e00\u4e2a\u623f\u95f4\uff0c\u4f46\u6240\u6709\u4e0d\u662f\u540c\u4e00\u4e2a\u623f\u95f4\u7684\u76f8\u90bb\u683c\u5b50\u4e4b\u95f4\u4e00\u5b9a\u6709\u5899\uff1b\n\n\u6b64\u5916\uff0c\u5bf9\u4e8e\u623f\u95f4\u56db\u9762\u6709\u65e0\u5899\u7684\u5224\u65ad\u7528\u4e8c\u8fdb\u5236\uff0c\u53ef\u4ee5\u53c2\u8003\u4e0b\u9762\u51e0\u4f4d\u5927\u4f6c\u89e3\u6790\u7684\u6216\u662f\u6211\u7684\u4ee3\u7801\uff1b\n\n\u8be6\u7ec6\u89e3\u6790\u5728\u4ee3\u7801\u5728\u4ee3\u7801\u6ce8\u91ca\u91cc\uff0c\u5728\u5916\u9762\u8bf4\u4e0d\u6e05\u695a\n\n\n```cpp\n#include<iostream>\n#define MAXK 3000\nusing namespace std;\nstruct room{\n    bool e,s,w,n;//e\u4e1c\uff0cs\u5357\uff0cw\u897f\uff0cn\u5317\n    int father,area;//father\u7236\u4eb2\u8282\u70b9\uff0carea\u623f\u95f4\u9762\u79ef \n}a[MAXK];\nint m,n;\nint find(int x){//\u7956\u5148\u641c\u7d22 \n    return x==a[x].father?x:a[x].father=find(a[x].father);//\u8def\u5f84\u538b\u7f29 \n}\nvoid to(int x,int y){\n    int f1=find(x),f2=find(y);//\u627e\u7956\u5148 \n    if (f1!=f2) a[f1].father=f2,a[f2].area+=a[f1].area;//\u5e76\u67e5\u96c6\u5408\u5e76\u96c6\u5408\uff0c\u5c06\u5408\u5e76\u540e\u623f\u95f4\u5927\u5c0f\u8d4b\u503c\u7ed9\u7956\u5148\n    return;\n}\nvoid input(){//\u8f93\u5165\u4ee5\u53ca\u6570\u7ec4\u521d\u59cb\u5316 \n    cin>>m>>n;\n    int i,j,in;\n    for (i=1;i<=n*m;i++){\n        cin>>in;\n        a[i].father=i; \n        a[i].area=1;\n        a[i].w=in%2?1:0;//\u540cif (in%2==1) a[i].w==1; else a[i].w==0; \n        in/=2;\n        a[i].n=in%2?1:0;\n        in/=2;\n        a[i].e=in%2?1:0;\n        in/=2;\n        a[i].s=in%2?1:0;\n    }\n    return;\n}\nvoid work(){\n    int i,j,total=0,ans=0,wall_x,wall_y;\n    for (i=1;i<=n*m;i++){//\u65e0\u5899\u7684\u4f4d\u7f6e\u8fdb\u884c\u5408\u5e76\u96c6\u5408\uff0c\u6211\u8fd9\u91cc\u7528\u4e1c\u548c\u5357\u7684\u5899\uff0c\u4e5f\u53ef\u4ee5\u7528\u522b\u7684\u5899 \n        if (!a[i].e) to(i,i+1);//\u4e3a\u4ec0\u4e48\u4e0d\u7528\u8fb9\u754c\u7279\u5224\uff1f\u6211\u5c31\u4e0d\u4fe1\u8fd9\u623f\u5b50\u56db\u5468\u6ca1\u5899\u6f0f\u98ce\u7684 \n        if (!a[i].s) to(i,i+m);\n    }\n    for (i=1;i<=n*m;i++){\n        a[i].area=a[find(i)].area;\n        //\u987a\u4fbf\u628a\u623f\u95f4\u7684\u5927\u5c0f\u8d4b\u503c\u56de\u53bb\uff0c\u6b64\u65f6\u7b2ci\u4e2a\u533a\u57df\u6240\u5728\u623f\u95f4\u5927\u5c0f\u5c31\u662fa[i].area\uff0c\u7b49\u4f1a\u5c31\u4e0d\u7528\u591a\u6b21\u8c03\u7528\u7956\u5148\u7684\u623f\u95f4\u5927\u5c0f \n        if (a[i].area>ans) ans=a[i].area;//\u6700\u5927\u623f\u95f4 \n        if (a[i].father==i) total++;//\u623f\u95f4\u4e2a\u6570 \n    }\n    char which_wall;//\u5317\u5899\u6216\u4e1c\u5899 \n    cout<<total<<endl;\n    cout<<ans<<endl;\n    ans=0;//\u5904\u7406\u4e00\u4e0b\u7528\u6765\u5b58\u62c6\u5899\u540e\u6700\u5927\u623f\u95f4 \n    for (j=1;j<=m;j++)//\u91cd\u4e2d\u4e4b\u91cd\uff0c\u5916\u5c42\u5faa\u73af\u7b2cj\u5217\uff0c\u5185\u5c42\u5faa\u73af\u7b2ci\u884c\uff0c\u56e0\u4e3a\u662f\u5148\u9009\u5217\u6570\u91cc\u6700\u9760\u897f\u7684\uff0c\u518d\u9009\u884c\u6570\u91cc\u6700\u9760\u5357\u7684 \n        for (i=n;i>0;i--){\n            int k=(i-1)*m+j;//\u5f97\u5230\u7b2ci\u884c\u7b2cj\u5217\u7684\u5e8f\u53f7 \n            //\u5148\u5317\u540e\u4e1c \n            if (k>m&&find(k)!=find(k-m)&&a[k].area+a[k-m].area>ans){//\u8fb9\u754c\u5224\u65ad\uff0c\u662f\u5426\u5728\u4e00\u4e2a\u623f\u95f4\u5224\u65ad\uff08\u4e0d\u4e00\u5b9a\u6709\u5899\u5c31\u4e0d\u5728\u540c\u4e00\u4e2a\u623f\u95f4\u4e86\u54c8\uff09 \n                ans=a[k].area+a[k-m].area;\n                wall_x=i;\n                wall_y=j;\n                which_wall='N';\n            }\n            if (k%m!=0&&find(k)!=find(k+1)&&a[k].area+a[k+1].area>ans){\n                ans=a[k].area+a[k+1].area;\n                wall_x=i;\n                wall_y=j;\n                which_wall='E';\n            }\n        }\n    cout<<ans<<endl;\n    cout<<wall_x<<\" \"<<wall_y<<\" \"<<which_wall<<endl;\n}\nint main(){\n    input();\n    work();\n    return 0;\n}\n```",
        "postTime": 1508734045,
        "uid": 24835,
        "name": "\u8096\u6069Sean",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "\u5728\u8fd9\u4e00\u9898\u4e2d\u9119\u4eba\u662f\u91c7\u7528\u7ed3\u6784\u4f53\u6765\u8bb0\u5f55\u6bcf\u4e2a\u623f\u95f4\u7684\u56db\u5468\u7684\u5899\u7684\u60c5\u51b5\uff1b\uff08\u8bb2\u53e5\u5b9e\u8bdd\uff1a\u6211\u4e00\u5f00\u59cb\u8fd8\u5f88\u7eb3\u95f7\u4e3a\u4ec0\u4e48\u9898\u76ee\u4e2d\u7ed9\u5b9a\u7684\u5899\u7684\u6807\u53f7\u4e3a1,2,4,8\uff0c\u76f4\u5230\u6253\u65f6\u624d\u53d1\u73b01-15\u6bcf\u4e00\u4e2a\u6570\u90fd\u4ee3\u8868\u5899\u7684\u6bcf\u4e00\u79cd\u60c5\u51b5\uff09\n\n\u672c\u9898\u4e00\u4e8c\u95ee\u662f\u6700\u666e\u901a\u7684\u8054\u901a\u5757\u95ee\u9898\uff0c\u9119\u4eba\u5728\u524d\u9762\u4e24\u95ee\u91c7\u7528\u7684\u662f\u6df1\u641c\uff0c\u4f46\u662f\u5728\u6df1\u641c\u7684\u540c\u65f6\u6700\u597d\u5c06\u6bcf\u4e00\u4e2a\u623f\u95f4\u6240\u5f52\u5c5e\u7684\u8054\u901a\u5757\u8bb0\u5f55\u4e00\u4e0b\uff0c\u5e76\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u8054\u901a\u5757\u7684\u5927\u5c0f\uff0c\u4e3a\u7b2c\u4e09\u56db\u9898\u6253\u57fa\u7840\uff1b\n\n\u4e09\u56db\u95ee\u5b9e\u5728\u4e00\u4e8c\u95ee\u4e0a\u5efa\u7acb\u7684\uff0c\u56e0\u4e3a\u9898\u76ee\u4e0a\u8bf4\u4e86\u5148\u897f\u540e\u5357\uff0c\u5728\u540c\u4e00\u4e2a\u623f\u95f4\u4e2d\u5148\u5317\u540e\u4e1c\uff0c\u6240\u4ee5\u53ea\u8981\u904d\u5386\u6bcf\u4e00\u4e2a\u623f\u95f4\u7684\u5317\u5899\u548c\u4e1c\u5899\uff08\u524d\u63d0\u662f\u6709\u5899\uff09\uff0c\u5e76\u628a\u5899\u5bf9\u9762\u7684\u623f\u95f4\u6240\u5728\u8054\u901a\u5757\u7684\u5927\u5c0f\u52a0\u4e0a\u5373\u53ef\u3002\n\n\u4e0b\u9762\u8d34\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\nconst int maxn=60;\nusing namespace std;\nstruct node{\n    int u,d,l,r;//u:up\u4e0a\u5899\uff1bd:down\u4e0b\u5899\uff1bl\uff1aleft\u5de6\u5899;r:right\u53f3\u5899 \n    node(){\n        op=u=d=l=r=0;\n    }\n}a[600][600];\nint n,m,p[600][600],q[600][600],w[36100];//p:\u8bb0\u5f55\u623f\u95f4\u662f\u5426\u904d\u5386\u8fc7\uff1b\n//q:\u8bb0\u5f55\u623f\u95f4\u6240\u5728\u8fde\u901a\u5feb\u7f16\u53f7\uff0cw\uff1a\u8fde\u901a\u5757\u5927\u5c0f \nint ui[4]={1,0,0,-1};\nint vi[4]={0,-1,1,0},tot=0,ans=0;\nstruct qiang{\n    int x,y;//\u5899\u7684\u4f4d\u7f6e \n    char w;//\u65b9\u5411 \n    qiang(){\n        x=y=0;\n    }    \n}wu[36100];\nbool cmp(qiang x,qiang y){\n    return x.y<y.y||(x.y==y.y&&x.x>y.x)||(x.x==y.x&&x.y==y.y&&x.w>y.w);\n}\nvoid search(int x,int y){//\u641c\u7d22\u65f6\u6ce8\u610f\u8fb9\u754c \n    q[x][y]=ans;\n    tot++;\n    if(!p[x+1][y]&&!a[x][y].d&&x+1<=n){\n        p[x+1][y]=1;\n        search(x+1,y);\n    }\n    if(!p[x-1][y]&&!a[x][y].u&&x-1>0){\n        p[x-1][y]=1;\n        search(x-1,y);\n    }\n    if(!p[x][y+1]&&!a[x][y].r&&y+1<=m){\n        p[x][y+1]=1;\n        search(x,y+1);\n    }\n    if(!p[x][y-1]&&!a[x][y].l&&y-1>0){\n        p[x][y-1]=1;\n        search(x,y-1);\n    }\n}\nint main(){\n    int maxx=0;\n    scanf(\"%d%d\",&m,&n);//\u6ce8\u610f\u8fd9\u91cc\u5148\u5217\u540e\u884c \n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++){\n            int x;\n            scanf(\"%d\",&x);        \n            if(x==1)\n                a[i][j].l=1;\n            else if(x==2)\n                a[i][j].u=1;\n            else if(x==3)\n                a[i][j].l=a[i][j].u=1;\n            else if(x==4)\n                a[i][j].r=1;\n            else if(x==5)\n                a[i][j].l=a[i][j].r=1;\n            else if(x==6)\n                a[i][j].u=a[i][j].r=1;\n            else if(x==7)\n                a[i][j].l=a[i][j].r=a[i][j].u=1;\n            else if(x==8)\n                a[i][j].d=1;\n            else if(x==9)\n                a[i][j].l=a[i][j].d=1;\n            else if(x==10)\n                a[i][j].u=a[i][j].d=1;\n            else if(x==11)\n                a[i][j].u=a[i][j].l=a[i][j].d=1;\n            else if(x==12)\n                a[i][j].r=a[i][j].d=1;\n            else if(x==13)\n                a[i][j].l=a[i][j].r=a[i][j].d=1;\n            else if(x==14)\n                a[i][j].u=a[i][j].r=a[i][j].d=1;\n            else if(x==15)\n                a[i][j].u=a[i][j].l=a[i][j].d=a[i][j].r=1;\n        }//\u8fd9\u91cc\u662f\u60ca\u5947\u7684\u8f93\u5165\u8bb0\u5f55\u662f\u5426\u6709\u5899\uff1b \n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            if(!p[i][j]){\n                ans++;//\u8054\u901a\u5757\u6570\u91cf \n                tot=0;\n                p[i][j]=1;\n                search(i,j);\n                w[ans]=tot;\n                maxx=max(maxx,tot);//maxx:\u8bb0\u5f55\u6700\u5927\u8054\u901a\u5757\u5927\u5c0f \n            }\n    printf(\"%d\\n%d\\n\",ans,maxx);\n    maxx=0,ans=0;\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++){\n            if(a[i][j].r&&j+1<=m&&q[i][j]!=q[i][j+1]){//\u6ce8\u610f\u4e24\u4e2a\u623f\u95f4\u4e0d\u80fd\u5728\n            //\u540c\u4e00\u4e2a\u8054\u901a\u5757\u4e0a \n                if(w[q[i][j+1]]+w[q[i][j]]>maxx){\n                    ans=1;\n                    wu[ans].x=i,wu[ans].y=j;\n                    wu[ans].w='E';\n                    maxx=w[q[i][j+1]]+w[q[i][j]];\n                //    if(maxx==17)\n                //        printf(\"%d %d %c\\n\",i,j,wu[ans].w);\n                }\n                if(w[q[i][j+1]]+w[q[i][j]]==maxx){\n                    ans++;\n                    wu[ans].x=i,wu[ans].y=j;\n                    wu[ans].w='E';\n                //    printf(\"%d %d %c\\n\",i,j,wu[ans].w);\n                }\n            }                \n            if(a[i][j].u&&i-1>0&&q[i][j]!=q[i-1][j]){\n                if(w[q[i-1][j]]+w[q[i][j]]>maxx){\n                    ans=1;\n                    wu[ans].x=i,wu[ans].y=j;\n                    wu[ans].w='N';\n                    maxx=w[q[i-1][j]]+w[q[i][j]];\n                //    if(maxx==17)\n                //        printf(\"%d %d %c\\n\",i,j,wu[ans].w);\n                }\n                if(w[q[i-1][j]]+w[q[i][j]]==maxx){\n                    ans++;\n                    wu[ans].x=i,wu[ans].y=j;\n                    wu[ans].w='N';\n                //    printf(\"%d %d %c\\n\",i,j,wu[ans].w);\n                }\n            }\n        }\n    sort(wu+1,wu+ans+1,cmp);//\u6700\u540e\u628a\u6240\u6709\u53ef\u884c\u7684\u5899\u6392\u4e00\u4e0b\u5e8f\uff0c\u5e76\u53d6\u7b2c\u4e00\u4e2a \n    printf(\"%d\\n\",maxx);\n    printf(\"%d %d %c\\n\",wu[1].x,wu[1].y,wu[1].w);\n    return 0;\n}\n```",
        "postTime": 1503037371,
        "uid": 46878,
        "name": "Itache",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "\u6c42\u8054\u901a\u5206\u5757\uff0c\u7528up\u3001left\u3001down\u3001right\u6570\u7ec4\u6765\u4ee3\u66ff\u5224\u65ad\u56db\u5468\u662f\u5426\u6709\u5899\n\n\n/\\*\nID:luojiny1\n\nLANG:C++\n\nTASK:castle\n\n\\*/\n\n\n```cpp\n#include<cstdio>\nconst int maxn=50+10;\nbool up[maxn][maxn],down[maxn][maxn],left[maxn][maxn],right[maxn][maxn];\n    int n,m,input,cnt=1,color[maxn][maxn]={0},size[maxn*maxn]={0},MaxSize=0,ans=0,x,y,ans2=0;\nint dr[4]={0,1,-1,0};\nint dc[4]={-1,0,0,1};\nchar dir[]=\"WSNE\";\nvoid dfs(int r,int c,int id)\n{\n    if(color[r][c])return;\n    color[r][c]=id;\n    size[id]++;\n//    printf(\"%d\\n\",size[id]);\n    if(up[r][c]==0&&r-1>=0)dfs(r-1,c,id);\n    if(down[r][c]==0&&r+1<n)dfs(r+1,c,id);\n    if(left[r][c]==0&&c-1>=0)dfs(r,c-1,id);\n    if(right[r][c]==0&&c+1<m)dfs(r,c+1,id);\n}\nint main()\n{\n    freopen(\"castle.in\",\"r\",stdin);\n    freopen(\"castle.out\",\"w\",stdout);\n    scanf(\"%d%d\",&m,&n);\n    for(int i=0;i<n;i++)\n    for(int j=0;j<m;j++){\n        scanf(\"%d\",&input);\n        switch(input)\n        {\n            case 1:\n            left[i][j]=1;\n                break;\n            case 2:\n            up[i][j]=1;\n                break;\n            case 3:\n            left[i][j]=1;\n            up[i][j]=1;\n                break;\n            case 4:\n            right[i][j]=1;\n                break;\n            case 5:\n            left[i][j]=1;\n            right[i][j]=1;\n                break;\n            case 6:\n            up[i][j]=1;\n            right[i][j]=1;\n                break;\n            case 7:\n            left[i][j]=1;\n            up[i][j]=1;\n            right[i][j]=1;\n                break;\n            case 8:\n            down[i][j]=1;\n                break;\n            case 9:\n            left[i][j]=1;\n            down[i][j]=1;\n                break;\n            case 10:\n            up[i][j]=1;\n            down[i][j]=1;    \n                break;\n            case 11:\n            left[i][j]=1;\n            up[i][j]=1;\n            down[i][j]=1;\n                break;\n            case 12:\n            right[i][j]=1;\n            down[i][j]=1;\n                break;\n            case 13:\n                left[i][j]=1;\n                right[i][j]=1;    \n                down[i][j]=1;\n                break;\n            case 14:\n                up[i][j]=1;\n                right[i][j]=1;\n                down[i][j]=1;\n                break; \n            case 15:\n                left[i][j]=1;\n                right[i][j]=1;\n                down[i][j]=1;\n                up[i][j]=1;\n                break;\n        }\n    }\n    for(int i=0;i<n;i++)\n    for(int j=0;j<m;j++){\n        if(color[i][j]==0)\n        {\n        dfs(i,j,cnt++);        \n        if(size[cnt-1]>MaxSize)MaxSize=size[cnt-1];\n        }\n    }\n    for(int j=0;j<m;j++)\n    for(int i=n-1;i>=0;i--)\n    {\n        for(int k=0;k<4;k++)\n        {\n            int r=i+dr[k],c=j+dc[k];\n            if(r<0||r>=n||c<0||r>=m||color[i][j]==color[r][c])continue;\n            int sum=size[color[i][j]]+size[color[r][c]];\n            if(sum>ans){\n                ans=sum;x=i;y=j;ans2=k;\n            }\n        }\n    }\n    printf(\"%d\\n%d\\n%d\\n%d %d %c\\n\",cnt-1,MaxSize,ans,x+1,y+1,dir[ans2]);\n    return 0;\n}\n```",
        "postTime": 1497595882,
        "uid": 22150,
        "name": "\u548c\u5176\u6b63",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "**\u8fd9\u9053\u9898\u6b63\u89e3\u662f\u5e7f\u641c + \u679a\u4e3e**\n\n**\u5148Bfs\u4e00\u904d\u627e\u51fa\u6240\u6709\u7684\u8fde\u901a\u5757  \uff0c \u5b58\u5165\u6570\u7ec4\u91cc**\n\n**\u7136\u540e\u518d\u66b4\u529b\u679a\u4e3e \uff0c \u5bfb\u627e\u4e0d\u540c\u8fde\u901a\u5757 \uff0c \u5e76\u4e14\u6253\u64c2\u53f0 \uff0c \u627e\u6700\u5927\u5408\u5e76\u7684\u8fde\u901a\u5757\u6570\u91cf\uff08\u679a\u4e3e\u65f6\u8bb0\u4f4f\u8981\u6309\u9898\u76ee\u7ed9\u5b9a\u7684\u987a\u5e8f\u679a\u4e3e\uff0c\u5148\u4ece\u897f\u5230\u4e1c\uff0c\u518d\u4ece\u5357\u5230\u5317\uff09**\n\n**\u4e0d\u591a\u8bf4 \uff0c \u4ee3\u7801\u91cc\u6709\u8be6\u7ec6\u7684\u6ce8\u91ca233**\n\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int MAXN = 60;\nconst int STEP = 50010;\nconst int u[5] = {0,0,-1,0,1};    /* \u987a\u5e8f : \u897f\u5317\u4e1c\u5357 */\nconst int v[5] = {0,-1,0,1,0}; \nint n,m,ans,maxl,mx,my,mt;\nint num[MAXN][MAXN];    /* num[i][j] : i\u884cj\u5217\u7684\u623f\u95f4\u5c5e\u4e8e\u7b2cnum[i][j]\u4e2a\u8fde\u901a\u5757 */ \nint flag[MAXN][MAXN];    /* flag[i][j] : i\u884cj\u5217\u7684\u623f\u95f4\u6240\u5728\u7684\u8fde\u901a\u5757\u91cc\u6709flag[i][j]\u4e2a\u8fde\u901a\u5757 */\nbool grid[5][MAXN][MAXN];    /* gird[k][i][j] : i\u884cj\u5217\u7684\u623f\u95f4\u7684\u7b2ck\u4e2a\u623f\u95f4\u6709\u6ca1\u6709\u5899 */\n\nstruct node {\n    int rx;    /* \u5b58\u653e\u6a2a\u5750\u6807 */\n    int ry;    /* \u5b58\u653e\u7eb5\u5750\u6807 */\n} q[STEP];    /* \u6570\u7ec4\u6a21\u62df\u961f\u5217 */\n\ninline void read(int &x) {    /* \u5feb\u901f\u8bfb\u5165 */\n    \n    int num = 0 , negative = 0;\n    char ch = getchar();\n    \n    while((ch < '0' || ch > '9') && ch != '-')\n        ch = getchar();\n    \n    if(ch == '-')    negative = 1;\n    else    num = ch - '0';\n    \n    ch = getchar();\n    \n    while(ch >= '0' && ch <= '9') {\n        num = num * 10 + ch - '0';\n        ch = getchar();\n    }\n    \n    x = num;\n    if(negative)\n        x = -x;\n    \n}\n\ninline void judge(int x , int y , int k) {    /* \u624b\u52a8\u7279\u5224\u7b2cx\u884cy\u5217\u7684\u623f\u95f4\u91cc\u7684\u623f\u95f4\u6570 */\n    if(k == 1) {\n        grid[1][x][y] = true;\n        return ;\n    }\n    if(k == 2) {\n        grid[2][x][y] = true;\n        return;\n    }\n    if(k == 4) {\n        grid[3][x][y] = true;\n        return ;\n    }\n    if(k == 8) {\n        grid[4][x][y] = true;\n        return ;\n    }\n    if(k == 1+2) {\n        grid[1][x][y] = grid[2][x][y] = true;\n        return ;\n    }\n    if(k == 1+4) {\n        grid[1][x][y] = grid[3][x][y] = true;\n        return ;\n    }\n    if(k == 1+8) {\n        grid[1][x][y] = grid[4][x][y] = true;\n        return ;\n    }\n    if(k == 2+4) {\n        grid[2][x][y] = grid[3][x][y] = true;\n        return ;\n    }\n    if(k == 2+8) {\n        grid[2][x][y] = grid[4][x][y] = true;\n        return ;\n    }\n    if(k == 4+8) {\n        grid[3][x][y] = grid[4][x][y] = true;\n        return ;\n    }\n    if(k == 1+2+4) {\n        grid[1][x][y] = grid[2][x][y] = grid[3][x][y] = true;\n        return ;\n    }\n    if(k == 1+2+8) {\n        grid[1][x][y] = grid[2][x][y] = grid[4][x][y] = true;\n        return ;\n    }\n    if(k == 1+4+8) {\n        grid[1][x][y] = grid[3][x][y] = grid[4][x][y] = true;\n        return ;\n    }\n    if(k == 2+4+8) {\n        grid[2][x][y] = grid[3][x][y] = grid[4][x][y] = true;\n        return ;\n    }\n    if(k == 1+2+4+8) {\n        grid[1][x][y] = grid[2][x][y] = grid[3][x][y] = grid[4][x][y] = true;\n        return ;\n    }\n}\n\ninline void Bfs(int x , int y) {    /* \u5e7f\u641c */\n    \n    int head = 0 , tail = 1 , tot = 1;\n    ans++;    /* \u8fde\u901a\u5757\u6570\u91cf + 1 */\n    q[tail].rx = x;\n    q[tail].ry = y;\n    flag[x][y] = 1;\n    \n    while(head < tail) {\n        head++;    /* \u53bb\u6389\u961f\u5934 */\n        x = q[head].rx;    /* \u8bb0\u4e0b\u961f\u5934\u6a2a\u5750\u6807 */\n        y = q[head].ry;    /* \u8bb0\u4e0b\u961f\u5934\u7eb5\u5750\u6807 */\n        for(int i=1; i<=4; i++) {    /* \u679a\u4e3e4\u4e2a\u65b9\u5411 */\n            int newx = x + u[i];    /* \u6784\u9020\u65b0\u7684\u6a2a\u5750\u6807 */\n            int newy = y + v[i];    /* \u6784\u9020\u65b0\u7684\u7eb5\u5750\u6807 */\n            if(newx<1 || newx>n || newy<1 || newy>m)    /* \u5fc5\u987b\u5728\u57ce\u5821\u91cc */\n                continue;\n            if(!flag[newx][newy] && !grid[i][x][y]) {    /* \u5fc5\u987b\u6ca1\u88ab\u8fde\u901a\u4e14\u80fd\u8fde\u901a */\n                tot++;    /* \u8be5\u8fde\u901a\u5757\u533a\u57df\u5185\u6570\u91cf + 1 */\n                tail++;    /* \u961f\u5c3e + 1 , \u5b58\u5165\u961f\u5217 */\n                q[tail].rx = newx;\n                q[tail].ry = newy;\n                flag[newx][newy] = 1;    /* \u88ab\u8fde\u901a */\n            }\n        }\n    }\n    \n    for(int i=1; i<=tail; i++) {\n        num[q[i].rx][q[i].ry] = ans;    /* \u5b58\u4e0b\u5f53\u524d\u8fde\u901a\u5757\u7684\u6807\u53f7 */\n        flag[q[i].rx][q[i].ry] = tot;    /* \u5b58\u4e0b\u5f53\u524d\u8fde\u901a\u5757\u623f\u95f4\u7684\u4e2a\u6570 */\n    }\n    \n    maxl = max(maxl,tot);    /* \u6253\u64c2\u53f0\u53d6\u6700\u5927\u503c */\n    \n}\n\ninline void Search(int x , int y) {    /* \u66b4\u529b\u679a\u4e3e */\n    for(int i=1; i<=4; i++) {    /* \u4e0d\u591a\u8bf4 , \u548cBfs\u7684\u679a\u4e3e\u4e00\u6837 */\n        int newx = x + u[i];\n        int newy = y + v[i];\n        if(newx<1 || newx>n || newy<1 || newy>m)\n            continue;\n        if(num[x][y] != num[newx][newy] && grid[i][x][y]) {    /* \u5c5e\u4e8e\u4e0d\u540c\u8fde\u901a\u5757 , \u4e14\u6ca1\u5899 */\n            if(flag[x][y] + flag[newx][newy] > maxl) {    /* \u53c8\u662f\u6253\u64c2\u53f0\u3002\u3002\u3002 */ \n                maxl = flag[x][y] + flag[newx][newy];\n                mx = x;\n                my = y;\n                mt = i;\n            }\n        }\n    }\n}\n\nint main() {\n    \n    read(m) , read(n);\n    for(int i=1; i<=n; i++) {\n        for(int j=1,tmp; j<=m; j++) {\n            read(tmp);\n            judge(i,j,tmp);    /* \u624b\u52a8\u7279\u5224\u8fd9\u4e00\u4e2a\u683c\u5b50\u91cc\u6709\u51e0\u4e2a\u5899 */\n        }\n    }\n    \n    for(int i=1; i<=n; i++)\n        for(int j=1; j<=m; j++)\n            if(!flag[i][j])    /* \u679a\u4e3e\u6ca1\u88ab\u641c\u8fc7\u7684\u623f\u95f4 */\n                Bfs(i,j);\n    \n    printf(\"%d\\n%d\\n\",ans,maxl);\n    \n    maxl = 0;\n    for(int j=1; j<=m; j++)    /* \u6309\u9898\u76ee\u4e2d\u7684\u987a\u5e8f\u679a\u4e3e , \u4ece\u897f\u5230\u4e1c */\n        for(int i=n; i>=1; i--)    /* \u4ece\u5357\u5230\u5317 */\n            Search(i,j);\n    \n    printf(\"%d\\n%d %d \",maxl,mx,my);\n    if(mt == 1)    puts(\"W\");\n    if(mt == 2)    puts(\"N\");\n    if(mt == 3)    puts(\"E\");\n    if(mt == 4)    puts(\"S\");\n    \n    return 0;\n    \n}\n```",
        "postTime": 1488691162,
        "uid": 29619,
        "name": "B1ueC4t",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "//\u8fd9\u9898\u6700\u6838\u5fc3\u7684\u90e8\u5206\u5c31\u5728\u4e8e\u4e1c\u5357\u897f\u5317\u7684\u4f4d\u8fd0\u7b97\uff0c\u800c\u524d\u4e24\u4e2a\u95ee\u9898\u53ef\u4ee5\u7528\u8f83\u7b80\u5355\u7684\u6df1\u641c\u89e3\u51b3\uff0c\u987a\u4fbf\u505a\u4e00\u4e2a\u7b80\u6613\u7684\u5e76\u67e5\u96c6\uff0c\u6700\u540e\u6253\u6389\u5899\u7684\u95ee\u9898\u5c31\u53ef\u4ee5\u505a\u7a77\u4e3e\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u683c\u5b50\u90fd\u53ef\u4ee5\uff08\u53ea\u8981\u5b58\u5728\uff09\u6253\u6389\u4e1c\u3001\u5317\u4e24\u4e2a\u65b9\u5411\u7684\u56db\u5835\u5899\uff0c\u6bcf\u5835\u5899\u7684\u623f\u95f4\u5927\u5c0f\u53ea\u9700\u7528\u5899\u4e24\u8fb9\u7684\u623f\u95f4\u5927\u5c0f\uff08\u4e8b\u5148\u5b58\u50a8\u597d\uff09\u52a0\u8d77\u6765\uff0c\u518d\u6bd4\u4e2amax\u5373\u53ef\u3002\n\n\n\n    \n    \n    \n    \n    \n        \n```cpp\n//\u4ee3\u7801\uff1a\n#include<iostream>\n#include<cstring>\nusing namespace std;\nint x,y;\nstruct h\n{\n    int num;//\n    int wall;//\u8bfb\u5165\u7684\u6bcf\u4e2a\u683c\u5b50\u7684\u5899\u7684\u6570\u636e\n};\nstruct h a[51][51];\nvoid dfs(int h,int l,int num)\n{\n    a[h][l].num=num;//\u5e76\u67e5\u96c6\uff0c\u6253\u6807\u8bb0 \n    if(!(a[h][l].wall&1)&&!(a[h][l-1].num))dfs(h,l-1,num);//\u4f4d\u8fd0\u7b97\uff0c\u5982\u679c\u6709\u65b9\u5411\u6ca1\u6709\u5899\u5c31\u6df1\u641c \n    if(!(a[h][l].wall&2)&&!(a[h-1][l].num))dfs(h-1,l,num);\n    if(!(a[h][l].wall&4)&&!(a[h][l+1].num))dfs(h,l+1,num);\n    if(!(a[h][l].wall&8)&&!(a[h+1][l].num))dfs(h+1,l,num);\n    //\u6df1\u641c\uff0c \u6807\u8bb0\u623f\u95f4\u7f16\u53f7 \n}\nint main()\n{\n    cin>>y>>x;\n    int t=0;\n    for(int i=1;i<=x;i++)\n        for(int j=1;j<=y;j++)\n            cin>>a[i][j].wall;\n    for(int i=1;i<=x;i++)\n        for(int j=1;j<=y;j++)\n            if(!a[i][j].num){t++;dfs(i,j,t);}\n    int b[t+1];    \n    memset(b,0,sizeof(b));\n    for(int i=1;i<=x;i++)\n        for(int j=1;j<=y;j++)\n                b[a[i][j].num]+=1;  //\u7b97\u51fa\u623f\u95f4\u5927\u5c0f \n    int maxn=b[1];\n    for(int i=2;i<=t;i++)\n        if(b[i]>maxn)maxn=b[i];\n    cout<<t<<endl;\n    cout<<maxn<<endl;\n    //\u524d\u4e24\u95ee \n    maxn=0;\n    int h=0,l=0;\n    char f;\n    for(int j=1;j<=y;j++)//\u4f53\u73b0\u4f18\u5148\u7ea7 \n        for(int i=x;i>=1;i--)//\u9010\u4e00\u7a77\u4e3e\uff0c\u8bd5\u7740\u6253\u6389\u6bcf\u4e00\u5835\u5899 \n        {\n            if(a[i][j].wall>=2)\n                if(a[i][j].num!=a[i-1][j].num)\n                    if(i-1>=0&&b[a[i][j].num]+b[a[i-1][j].num]>maxn)\n                    {\n                        maxn=b[a[i][j].num]+b[a[i-1][j].num];\n                        h=i;l=j;\n                        f='N';\n                    }\n            if(a[i][j].wall>=4)\n                if(a[i][j].num!=a[i][j+1].num)\n                    if(j+1<=y&&b[a[i][j].num]+b[a[i][j+1].num]>maxn)\n                    {\n                        maxn=b[a[i][j].num]+b[a[i][j+1].num];\n                        h=i;l=j;\n                        f='E';\n                    }            \n        }\n        cout<<maxn<<endl<<h<<' '<<l<<' '<<f;  //\u540e\u4e24\u95ee \n    return 0;\n}\n\n```",
        "postTime": 1486188399,
        "uid": 22930,
        "name": "Lolierl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "\u3010\u89e3\u9898\u601d\u8def\u3011\n\n\u8fd9\u4e00\u9898\u63cf\u8ff0\u90a3\u4e48\u957f\uff0c\u770b\u4e0a\u53bb\u633a\u96be\u7684\u3002\u4f46\u662f\u770b\u4e86\u4e00\u4e0b\u6570\u636e\u8303\u56f4\uff0c1 <=M,N<=50\uff0c\u771f\u5c0f\u554a\uff01\u4e8e\u662f\u679c\u65ad\u7528\u4e86\u6df1\u641c\u3002\u5728\u8f93\u5165\u7684\u65f6\u5019\uff0c\u6211\u7528\u4e86\u4e00\u4e2a\u4e09\u7ef4\u6570\u7ec4\uff1aa[i][j][u]\uff0c\u5176\u4e2di\uff0cj\u4ee3\u8868\u8fd9\u662f\u7b2c\u51e0\u884c\u7b2c\u51e0\u5217\uff0c\u800cu\u4ee3\u8868\u7684\u662f\u8fd9\u4e2a\u683c\u5b50\u7684\u4e1c\u3001\u5357\u3001\u897f\u3001\u5317\u3002\u6240\u4ee5\u6570\u7ec4\u7684\u5927\u5c0f\u662fa[51][51][4]\u3002\u4ee5\u4e0b\u4e3a\u6211\u505a\u7684\u8f93\u5165\u4ee3\u7801\u7247\u6bb51\n\n```cpp\nfor(int i=1;i<=n;i++)\nfor(int j=1;j<=m;j++)\n{\n    cin>>s;\n    if(s>=8)a[i][j][1]=1,s-=8;\n    if(s>=4)a[i][j][0]=1,s-=4;\n    if(s>=2)a[i][j][3]=1,s-=2;\n    if(s>=1)a[i][j][2]=1;\n}\n```\n\u5728\u8f93\u5165\u7684\u65f6\u5019\uff0c\u6211\u76f4\u63a5\u7528a\u6570\u7ec4\u8bb0\u5f55\u4e86\u6bcf\u4e00\u4e2a\u683c\u5b50\u7684\u5468\u56f4\u6709\u6ca1\u6709\u5899\u3002\u5f53u=0\u65f6\uff0c\u4ee3\u8868\u6807\u8bb0\u4e1c\u9762\uff0cu=1\u6807\u8bb0\u5357\u9762\uff0cu=2\u6807\u8bb0\u897f\u9762\uff0cu=3\u6807\u8bb0\u5317\u9762\u3002\u8fd9\u4e48\u505a\u4f1a\u8ba9\u63a5\u4e0b\u6765\u7684\u89e3\u9898\u73af\u8282\u66f4\u52a0easy\u3002\n\u63a5\u4e0b\u6765\u89e3\u7b54\u95ee\u9898\u3002\u7b2c\u4e00\u4e2a\u95ee\u9898\u662f\u6c42\u51fa\u6709\u591a\u5c11\u4e2a\u623f\u95f4\u3002\u6211\u4eec\u5c31\u7528\u6df1\u641c\uff0c\u5728\u6b64\u9644\u4e0a\u4ee3\u7801\u7247\u6bb52\u7528\u6765\u53c2\u8003\uff1a\n\n```cpp\nint dfs(int x,int y)\n{\n    if(b[x][y]==1||x<=0||y<=0||x>n||y>m)return 0;\n    ans++;\n    b[x][y]=1;\n    if(a[x][y][0]==0)dfs(x,y+1);\n    if(a[x][y][1]==0)dfs(x+1,y);\n    if(a[x][y][2]==0)dfs(x,y-1);\n    if(a[x][y][3]==0)dfs(x-1,y);\n}\n```\n\u5f88\u663e\u7136\uff0cb\u6570\u7ec4\u7528\u6765\u6807\u8bb0\u8def\u5f84\uff0c\u5c31\u662f\u8bf4\u6211\u4eec\u4e0d\u80fd\u5728\u4e00\u4e2a\u623f\u95f4\u91cc\u4e00\u76f4\u6765\u56de\u8d70\uff0c\u8f7b\u800c\u6613\u4e3e\u5730\u62ff\u4e0b\u7b2c\u4e00\u95ee\uff08\u7b2c\u4e8c\u95ee\u4e5f\u987a\u4fbf\u62ff\u4e0b\u4e86\uff0c\u89c1ans++\uff0c\u7136\u540e\u6211\u4e0b\u9762\u505a\u4e86\u4e00\u4e2a\u627e\u6700\u5927\u7684\u3002\n\u63a5\u4e0b\u6765\u662f\u540e\u4e24\u95ee\u3002\u5176\u5b9e\u8fd9\u4e5f\u53ef\u4ee5\u8bf4\u662f\u540c\u4e00\u4e2a\u95ee\u9898\u3002\u56e0\u4e3a\u6570\u636e\u771f\u7684\u592a\u592a\u592a\u592a\u5c0f\u4e86\uff0c\u6240\u4ee5\u6211\u673a\u667a\u5730\u7528\u4e86\u5faa\u73af\u3002\n\n\u6bcf\u4e2a\u683c\u5b50\u8bd5\u4e24\u6b21\uff0c\u5220\u6389\u5317\u9762\u7684\u5899\u6216\u5220\u6389\u4e1c\u9762\u7684\u5899\uff0c\u7136\u540e\u518d\u6df1\u641c\uff0c\u6ce8\u610f\u6df1\u641c\u5b8c\u4e86\u8981\u8fd8\u539f\u6682\u65f6\u5220\u6389\u7684\u5899\u3002\u89c1\u4ee3\u7801\u7247\u6bb53\n\n```cpp\nfor(int i=1;i<=n;i++)\nfor(int j=m;j>=1;j--)\n{\n    for(int i1=1;i1<=n;i1++)for(int j1=1;j1<=m;j1++)b[i1][j1]=0; //\u521d\u59cb\u5316b\u6570\u7ec4\n    if(a[i][j][3]==1){a[i][j][3]=0;a[i-1][j][1]=0;ans=0; //\u5982\u679c\u5317\u9762\u6709\u5899\u624d\u8981\u6df1\u641c\n    dfs(i,j);\n    if(ans>maxn||(ans==maxn&&yy>j||(ans==maxn&&yy==j&&xx<i))){xx=i;yy=j;fx='N';maxn=ans;}\n    a[i][j][3]=1;a[i-1][j][1]=1;}\n    for(int i1=1;i1<=n;i1++)for(int j1=1;j1<=m;j1++)b[i1][j1]=0; //\u521d\u59cb\u5316b\u6570\u7ec4\n    if(a[i][j][0]==1){a[i][j][0]=0;a[i][j+1][2]=0;ans=0; //\u5982\u679c\u4e1c\u9762\u6709\u5899\u624d\u8981\u6df1\u641c\n    dfs(i,j);\n    if(ans>maxn||(ans==maxn&&yy>j||(ans==maxn&&yy==j&&xx<i))){xx=i;yy=j;fx='E';maxn=ans;}\n    a[i][j][0]=1;a[i][j+1][2]=1;}\n}\n```\n\u8fd9\u4e2a\u7247\u6bb5\u91cc\u9762\u8fd8\u6709\u4e00\u4e2a\u8981\u6ce8\u610f\u7684\uff0c\u5c31\u662f\u5728\u4f60\u5220\u6389\u4e1c\u9762\u7684\u5899\u540e\uff0c\u53f3\u8fb9\u7684\u683c\u5b50\u7684\u897f\u9762\u7684\u5899\u4e5f\u6ca1\u4e86\uff0c\u5317\u9762\u540c\u7406\n\u6ce8\u610f\u8fd9\u91cc\u540c\u4e00\u683c\u5b50\u5317\u8fb9\u7684\u5899\u6bd4\u4e1c\u8fb9\u7684\u5899\u66f4\u4f18\u5148\u3002\u6240\u4ee5\u6211\u8fd9\u4e2a\u5224\u65ad\u5c31\u662f\u5982\u679c\u5317\u8fb9\u7684\u7ed3\u679c==\u4e1c\u8fb9\u7684\u7ed3\u679c\uff0c\u5317\u8fb9\u4e00\u5b9a\u4f1a\u4f18\u5148\uff0c\u8be6\u7ec6\u770b\u6761\u4ef6ans>maxn||(ans==maxn&&yy>j||(ans==maxn&&yy==j&&xx<i))\n\u7136\u540e\u8f93\u51fa\uff0c\u5c31AC\u4e86\u3002\n\n\u3010\u4ee3\u7801\u3011\n\n```cpp\n#include <iostream>\n#include <cstdlib>\n#include <cstdio>\nusing namespace std;\nint n,m,a[61][61][4],b[61][61],s,maxn,ans,xx,yy;\nchar fx;\nint dfs(int x,int y)\n{\n    if(b[x][y]==1||x<=0||y<=0||x>n||y>m)return 0;\n    ans++;\n    b[x][y]=1;\n    if(a[x][y][0]==0)dfs(x,y+1);\n    if(a[x][y][1]==0)dfs(x+1,y);\n    if(a[x][y][2]==0)dfs(x,y-1);\n    if(a[x][y][3]==0)dfs(x-1,y);\n} //\u6df1\u641c\u627e\u8fd9\u4e2a\u623f\u95f4\u6709\u591a\u5927\nint main()\n{\n    cin>>m>>n;yy=10000;\n    for(int i=1;i<=n;i++)\n    for(int j=1;j<=m;j++)\n    {\n        cin>>s;\n        if(s>=8)a[i][j][1]=1,s-=8;\n        if(s>=4)a[i][j][0]=1,s-=4;\n        if(s>=2)a[i][j][3]=1,s-=2;\n        if(s>=1)a[i][j][2]=1;\n    }s=0;\n    for(int i=1;i<=n;i++)\n    for(int j=1;j<=m;j++)\n    {\n        ans=0;\n        if(b[i][j]==0)dfs(i,j),s++;\n        maxn=max(maxn,ans);\n    }ans=0;\n    cout<<s<<endl<<maxn<<endl; //\u5148\u6c42\u524d\u4e24\u4e2a\u7b54\u6848\u5e76\u8f93\u51fa\n    for(int i=1;i<=n;i++) //\u5357\u8fb9\u4f18\u5148\u6240\u4ee5\u4ece\u5317\u81f3\u5357\u5faa\u73af\n    for(int j=m;j>=1;j--) //\u897f\u8fb9\u4f18\u5148\u6240\u4ee5\u4ece\u4e1c\u81f3\u897f\u5faa\u73af\n    {\n        for(int i1=1;i1<=n;i1++)for(int j1=1;j1<=m;j1++)b[i1][j1]=0;\n        if(a[i][j][3]==1){a[i][j][3]=0;a[i-1][j][1]=0;ans=0;\n        dfs(i,j);\n        if(ans>maxn||(ans==maxn&&yy>j||(ans==maxn&&yy==j&&xx<i))){xx=i;yy=j;fx='N';maxn=ans;}\n        a[i][j][3]=1;a[i-1][j][1]=1;}\n        for(int i1=1;i1<=n;i1++)for(int j1=1;j1<=m;j1++)b[i1][j1]=0;\n        if(a[i][j][0]==1){a[i][j][0]=0;a[i][j+1][2]=0;ans=0;\n        dfs(i,j);\n        if(ans>maxn||(ans==maxn&&yy>j||(ans==maxn&&yy==j&&xx<i)))//\u5982\u679c\u5f53\u524d\u7ed3\u679c>\u5f53\u524d\u6700\u5927\u503c||\uff08\u5f53\u524d\u7ed3\u679c==\u5f53\u524d\u6700\u5927\u503c&&\u5f53\u524d\u6700\u5927\u503c\u7684\u4f4d\u7f6e\u5728\u5f53\u524d\u7ed3\u679c\u7684\u4e1c\u9762\uff09||\uff08\u5f53\u524d\u7ed3\u679c==\u5f53\u524d\u6700\u5927\u503c&&\u5f53\u524d\u6700\u5927\u503c\u7684y\u503c=\u5f53\u524d\u7ed3\u679c\u7684y\u503c&&\u5f53\u524d\u6700\u5927\u503c\u7684\u4f4d\u7f6e\u5728\u5f53\u524d\u7ed3\u679c\u7684\u5317\u9762{xx=i;yy=j;fx='E';maxn=ans;}//\u66f4\u6362\u7b54\u6848\n        a[i][j][0]=1;a[i][j+1][2]=1;}\n    }\n    cout<<maxn<<endl<<xx<<\" \"<<yy<<\" \"<<fx<<endl; //\u8f93\u51fa\n    return 0; //\u5b8c\u7f8e\u7ed3\u675f\n}\n```",
        "postTime": 1479123022,
        "uid": 14559,
        "name": "AFOier",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fde\u901a\u5757\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u66f46\u7684\u5e76\u67e5\u96c6\u89e3\u51b3\u3002\n\n\u5c06\u76f8\u8fde\u7684\u623f\u95f4union\u540e\u53ef\u4ee5\u5f97\u5230\u623f\u95f4\u6570\u548c\u6bcf\u4e2a\u623f\u95f4\u7684\u5927\u5c0f\uff0c\u4e5f\u5c31\u662f\u5f97\u5230\u4e86\u6700\u5927\u623f\u95f4\u7684\u5927\u5c0f\u3002\n\n\u8fd9\u65f6\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u623f\u95f4\u7684\u5927\u5c0f\u586b\u5230\u6bcf\u4e2a\u683c\u5b50\u91cc\uff0c\u7136\u540e\u679a\u4e3e\u6572\u6389\u7684\u5899\u58c1\u3002\n\n\u5982\u679c\u76f8\u90bb\u7684\u4e24\u4e2a\u623f\u95f4\u7684\u5927\u5c0f\u6807\u8bb0\u76f8\u52a0\u6700\u5927\uff0c\u5c31\u53ef\u4ee5\u786e\u8ba4\u8981\u6572\u6389\u7684\u662f\u8fd9\u9762\u5899\u3002\n\n\u679a\u4e3e\u7684\u5faa\u73af\u987a\u5e8f\uff01\uff01\uff01\u6ce8\u610f\u5faa\u73af\u987a\u5e8f\uff01\uff01\uff01\u6ce8\u610f\u5faa\u73af\u987a\u5e8f\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\n\n'''cpp\n/\\*\nID: frankli15\n\nPROB: castle\n\nLANG: C++11\n\n\\*/\n\n\n```cpp\n#include<cstring>\n#include<iostream>\nusing namespace std;\n#define max 1000000\nint width, height;\n//wall to break down\nint cx, cy; char ddir;\nclass Union_Find {\n    int pntOf[max];\n    int find(int c) {\n        while (pntOf[c] != -1)\n            c = pntOf[c];\n        return c;\n    }\n    int size, cntrot;\n    int *SizeOfEachRoom;\n    int *SerialOfEachRoom;\n```\npublic:\n\n\n\n\n```cpp\n    Union_Find(int s) :size(s) {\n        memset(pntOf, 255, sizeof pntOf);\n        SerialOfEachRoom = (int*)malloc(sizeof(int)*size);\n    }\n    int maxSetSize() {\n        SizeOfEachRoom = (int*)malloc((sizeof(int))*size);\n        for (int i = 0; i < size; i++)SizeOfEachRoom[i] = 0;\n        for (int i = 0; i < size; i++) {\n            SizeOfEachRoom[find(i)]++;\n        }\n        int Max = 0;\n        for (int i = 0; i < size; i++)\n            if (SizeOfEachRoom[i] > Max)Max = SizeOfEachRoom[i];\n        return Max;\n    }\n    void expandArray() {\n        for (int i = 0; i < size; i++) {\n            if (!SizeOfEachRoom[i])\n                SizeOfEachRoom[i] =\n                SizeOfEachRoom[find(i)];\n            SerialOfEachRoom[i] = find(i);\n        }\n    }\n    int maxTwoSumSize() {\n        int Max = 0;\n        for (int i = 0; i < height; i++) {\n            for (int j = width - 1; j >0; j--) {\n                if (SerialOfEachRoom[i*width + j] != SerialOfEachRoom[i * width + j - 1])\n                    if (SizeOfEachRoom[i*width + j] + SizeOfEachRoom[i*width + j - 1] >= Max) {\n                        Max = SizeOfEachRoom[i*width + j] + SizeOfEachRoom[i*width + j - 1];\n                        cx = i + 1, cy = j, ddir = 'E';\n                    }\n            }\n        }\n        for (int j = width - 1; j >= 0; j--) {\n            for (int i = 0; i < height - 1; i++) {\n                if (SerialOfEachRoom[i*width + j] != SerialOfEachRoom[(i + 1)*width + j])\n                    if (SizeOfEachRoom[i*width + j] + SizeOfEachRoom[(i + 1)*width + j] >= Max) {\n                        if (SizeOfEachRoom[i*width + j] + SizeOfEachRoom[(i + 1)*width + j] == Max) {\n                            if (j + 1 > cy)continue;\n                            if (j + 1 == cy && i + 2 < cx)continue;\n                        }\n                        Max = SizeOfEachRoom[i*width + j] + SizeOfEachRoom[(i + 1)*width + j];\n                        cx = i + 2, cy = j + 1, ddir = 'N';\n                    }\n            }\n        }\n        return Max;\n    }\n    void Union(int a, int b) {\n        int ap = find(a), bp = find(b);\n        if (ap == bp)return;\n        pntOf[bp] = ap;\n    }\n    int roots() {\n        int cnt = 0;\n        for (int i = 0; i < size; i++) {\n            if (pntOf[i] == -1)cnt++;\n        }\n        cntrot = cnt;\n        return cnt;\n    }\n};\nUnion_Find *taskone;\nint dx[5] = { 0,-1,0,1,0 };\nint dy[5] = { 0,0,-1,0,1 };\nvoid readMap() {\n    int infotemp;\n    cin >> width >> height;\n    taskone = new Union_Find(width*height);\n    for (int i = 0; i < height; i++) {\n        for (int j = 0; j < width; j++) {\n            cin >> infotemp;\n            for (int dir = 1; dir <= 4; dir++) {\n                if (!(infotemp & (1 << (dir - 1))))\n                    taskone->Union(\n```\ni\\*width + j,\n(i + dy[dir])\\*width + (j + dx[dir]));\n\n```cpp\n            }\n        }\n    }\n}\nint main() {\n    readMap();\n    //t one\n    cout << taskone->roots() << endl;\n    //t two\n    cout << taskone->maxSetSize() << endl;\n    //t three\n    taskone->expandArray();\n    cout << taskone->maxTwoSumSize() << endl;\n    //t four\n    cout << cx << \" \" << cy << \" \" << ddir << endl;\n}\n'''\n```",
        "postTime": 1477648898,
        "uid": 15514,
        "name": "FrankLi0324",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u6b21\u505a\u56fe\u8bba\uff0c\u6709\u70b9\u68d8\u624b\uff0c\u611f\u89c9\u8fd8\u662f\u8981\u601d\u8def\u6e05\u6670\u5728\u53ef\u4ee5\u8fc7\u5173\u554a\n\n\n    \n    \n    \n    \n    \n    \n  \n  \n   \n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nint i,j;  \nchar pos;\nint m,n,ansx,ansy;  \nint col,roomA,roomB,roomC;          \nint room[51][51];   //--\u623f\u95f4     \nint size[2501];     //--\u623f\u95f4\u5927\u5c0f\nint Smax;           \nbool wall[51][51][4]; //--\u5899   \nbool check[51][51];  //--\u68c0\u67e5\u662f\u5426\u8bbf\u95ee\u8fc7    \nvoid init()  //--\u8bfb\u5165\u6570\u636e \n{\n    cin>>m>>n;  \n    int t;  \n    for(i=1;i<=n;i++)        \n        for(j=1;j<=m;j++)  \n        {  \n            cin>>t;  \n            if (t>=8)\n            {\n                t-=8;\n                wall[i][j][3]=1; //--\u5357\u9762\u6709\u5899 \n            }  \n            if (t>=4)\n            {\n                t-=4;\n                wall[i][j][2]=1; //--\u4e1c\u9762\u6709\u5899 \n            }  \n            if (t>=2)\n            {\n                t-=2;\n                wall[i][j][1]=1;//--\u5317\u9762\u6709\u5899 \n            }  \n            if (t>=1)\n            {\n                t-=1;\n                wall[i][j][0]=1;//--\u897f\u9762\u6709\u5899 \n            }  \n        }\n}\nvoid dfs(int i,int j)  //--DFS\u6765FLOODFILL \n{  \n    if (room[i][j]==col) return;  \n    check[i][j]=1;   //--\u5df2\u7ecf\u641c\u8fc7\u4e86 \n    size[col]++;     //--\u8ba1\u7b97\u8be5\u79cd\u989c\u8272\u7684\u623f\u95f4\u5927\u5c0f \n    room[i][j]=col;  //--Floodfill \n    if(!wall[i][j][0])  dfs(i,j-1);  //--\u897f\u8fb9\u6ca1\u5899 \u6211\u4eec\u8d70\u897f\u8fb9 \n    if(!wall[i][j][1])  dfs(i-1,j);  //--\u5317\u9762\u6ca1\u5899 \u6211\u4eec\u8d70\u5317\u8fb9 \n    if(!wall[i][j][2])  dfs(i,j+1);  //--\u4e1c\u9762\u6ca1\u5899 \u6211\u4eec\u8d70\u4e1c\u8fb9 \n    if(!wall[i][j][3])  dfs(i+1,j);  //--\u5357\u8fb9\u6ca1\u5899 \u6211\u4eec\u8d70\u5357\u8fb9 \n}  \nint main()  \n{  \n   init();\n    for(i=1;i<=n;i++)  \n        for(j=1;j<=m;j++)  \n        {  \n            if(check[i][j]==0)  \n            {  \n                col++;     \n                dfs(i,j);\n            }  \n        }  \n    for (i=1;i<=col;i++)\n    {\n        if (size[i]>Smax) Smax=size[i];//--\u6c42\u51fa\u6700\u5927\u7684\u623f\u95f4 \n    }\n    cout<<col<<endl;\n    cout<<Smax<<endl;\n    //--1,2 floodfill 3,4\u679a\u4e3e \n    Smax=0; \n    for(i=1;i<=m;i++)  \n        for(j=n;j>=1;j--)  \n        {\n            roomA=room[j][i];//--\u641c\u7d22\u623f\u95f4 \n            roomB=room[j-1][i];//--\u641c\u7d22\u623f\u95f4\u5317\u8fb9\u7684\u623f\u95f4 \n            roomC=room[j][i+1];//--\u641c\u7d22\u623f\u95f4\u897f\u8fb9\u7684\u623f\u95f4 \n            //--\u5224\u65ad\u623f\u95f4\n            if (j>1 && wall[j][i][1]==1 && roomA!=roomB && size[roomA]+size[roomB]>Smax) \n               {\n                   Smax=size[roomA]+size[roomB];\n                   ansx=j;\n                   ansy=i;\n                   pos='N';\n               }\n            else if (i<m && wall[j][i][2]==1 && roomA!=roomC && size[roomA]+size[roomC]>Smax)\n               {\n                   Smax=size[roomA]+size[roomC];\n                   ansx=j;\n                   ansy=i;\n                   pos='E';\n               }\n          }\n          cout<<Smax<<endl<<ansx<<\" \"<<ansy<<\" \"<<pos;\n    return 0;\n}\n\n```",
        "postTime": 1470410263,
        "uid": 20684,
        "name": "Ayano",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "\u54e6\uff0c\u5899\u539f\u6765\u4e0e\u4f4d\u8fd0\u7b97\u6709\u5173\uff0c\u771f\u5fc3\u4f69\u670d\u697c\u4e0a\u3002\n\nBFS+\u8bb0\u5fc6\u5316\uff0c\u6ce8\u610f\u679a\u4e3e\u987a\u5e8f\u3002\n\n```delphi\n\ntype ftype=array[1..4]of boolean;\nconst dx:array[1..4]of shortint=(1,0,-1,0);\n      dy:array[1..4]of shortint=(0,1,0,-1);\nvar g,v:array[0..51,0..51]of integer;\n    q:array[1..2510,1..2]of integer;\n    s:array[1..2510]of integer;\n    n,m,i,j,k,x,y,ans,max,h,t:integer;\nfunction check(x,y,k:integer):boolean;//\u8bf7\u65e0\u89c6\u8fd9\u6bb5\uff0c\u5feb\u53bb\u62dc\u697c\u4e0a\nvar df:ftype;\nbegin\n  fillchar(df,sizeof(df),true);\n  if(g[x,y]=1)or(g[x,y]=3)or(g[x,y]=5)or(g[x,y]=9)or(g[x,y]=7)\n  or(g[x,y]=11)or(g[x,y]=13)or(g[x,y]=15)then df[4]:=false;\n  if(g[x,y]=2)or(g[x,y]=3)or(g[x,y]=6)or(g[x,y]=10)or(g[x,y]=7)\n  or(g[x,y]=11)or(g[x,y]=14)or(g[x,y]=15)then df[3]:=false;\n  if(g[x,y]=4)or(g[x,y]=12)or(g[x,y]=5)or(g[x,y]=6)or(g[x,y]=7)\n  or(g[x,y]=15)or(g[x,y]=13)or(g[x,y]=14)then df[2]:=false;\n  if(g[x,y]=8)or(g[x,y]=9)or(g[x,y]=10)or(g[x,y]=11)or(g[x,y]=12)\n  or(g[x,y]=14)or(g[x,y]=13)or(g[x,y]=15)then df[1]:=false;\n  exit(df[k]);\nend;\n\nbegin\n  readln(m,n);\n  for i:=1 to n do\n  begin\n    for j:=1 to m do\n    begin\n      read(g[i,j]);\n      v[i,j]:=0;\n    end;\n    readln;\n  end;\n  max:=0;\n  for i:=1 to n do\n  for j:=1 to m do\n  if v[i,j]=0 then\n  begin\n    inc(ans);\n    v[i,j]:=ans;\n    s[ans]:=1;\n    h:=0;t:=1;\n    q[1,1]:=i;\n    q[1,2]:=j;\n    while h<t do\n    begin\n      inc(h);\n      for k:=1 to 4 do\n      if check(q[h,1],q[h,2],k) then\n      begin\n        x:=q[h,1]+dx[k];\n        y:=q[h,2]+dy[k];\n        if(x>=1)and(x<=n)and(y>=1)and(y<=m)and(v[x,y]=0)then\n        begin\n          inc(t);inc(s[ans]);\n          q[t,1]:=x;q[t,2]:=y;\n          v[x,y]:=ans;//\u8bb0\u5fc6\u5316\n        end;\n      end;\n    end;\n    if max<s[ans] then max:=s[ans];\n  end;\n  writeln(ans);\n  writeln(max);max:=0;\n  for j:=1 to m do\n  for i:=n downto 1 do\n  for k:=3 downto 2 do\n  begin\n    x:=i+dx[k];\n    y:=j+dy[k];\n    if(x>=1)and(x<=n)and(y>=1)and(y<=m)and(v[x,y]<>v[i,j])then\n    if max<s[v[x,y]]+s[v[i,j]] then\n    begin\n      max:=s[v[x,y]]+s[v[i,j]];\n      h:=i;t:=j;\n      ans:=k;\n    end;\n  end;\n  writeln(max);\n  write(h,' ',t,' ');\n  case ans of\n  2:writeln('E');\n  3:writeln('N');\n  end;\nend.\n\n```",
        "postTime": 1445428321,
        "uid": 2248,
        "name": "\u6c47\u6587\u5ba2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "\u3010\u601d\u8def\u3011\n\nDfs\u3002\n\u89c2\u5bdf\u9898\u76ee\uff1a\u5229\u7528\u4f4d\u8fd0\u7b97\u80fd\u591f\u6784\u9020wall[][][]\u3002\n\n\u9996\u5148\u7528dfs\u6c42\u51fa\u8fde\u901a\u5757\uff0c\u5bf9\u6bcf\u4e00\u683c\u4e0a\u8272\u5e76\u7528cnt\u8bb0\u5f55\u989c\u8272\u6570\u76ee\u5373\u623f\u95f4\u5927\u5c0f\u3002\n\n\u5176\u6b21\u4ece\u5357\u5230\u5317\u4ece\u4e1c\u5411\u897f\u679a\u4e3e\u683c\u5b50\uff0c\u5982\u679c\u53ef\u4ee5\u5219\u5c1d\u8bd5\u62c6\u9664\u5317\u5899\u3001\u4e1c\u5899\uff0c\u627e\u5230\u6700\u4f18\u62c6\u9664\u3002\n\n\n\u3010\u4ee3\u7801\u3011\n\n```cpp\n\n#include<iostream>\n#include<cstring>\n#define FOR(a,b,c) for(int a=(b);a<=(c);a++)\nusing namespace std;\n\nconst int maxn = 100;\nconst int dx[]={0,-1,0,1};\nconst int dy[]={-1,0,1,0};\n\nint wall[maxn][maxn][4];\nint G[maxn][maxn];\nint c[maxn][maxn],colors,cnt[maxn*maxn];\nint n,m;\n\ninline bool inside(int x,int y) {\n    return x>=1 && x<=n && y>=1 && y<=m;\n}\nvoid dfs(int x,int y)\n{\n    for(int i=0;i<4;i++) if(!wall[x][y][i])\n    {\n        int xx=x+dx[i] , yy=y+dy[i];\n        if(inside(xx,yy) &&  !c[xx][yy]) {\n            c[xx][yy]=colors;\n            cnt[colors]++;\n            dfs(xx,yy);\n        }\n    }\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin>>m>>n;\n    FOR(i,1,n) FOR(j,1,m)\n       {\n             cin>>G[i][j];\n             for(int k=0;k<4;k++)\n               if(G[i][j]&(1<<k)) wall[i][j][k]=1;\n       }\n    int max_s=0;\n    FOR(i,1,n) FOR(j,1,m) {\n        if(c[i][j]) continue;\n        ++colors;\n        c[i][j]=colors; cnt[colors]++;\n        dfs(i,j);\n        max_s=max(max_s,cnt[colors]);\n    }\n    cout<<colors<<\"\\n\"<<max_s<<\"\\n\";\n    \n    char op; int ans_x,ans_y,ans=0;\n    FOR(j,1,m) for(int i=n;i;i--)\n    {\n        if(i>1 && wall[i][j][1] && c[i][j]!=c[i-1][j]) {\n            if(cnt[c[i-1][j]]+cnt[c[i][j]]>ans) {\n                ans=cnt[c[i-1][j]]+cnt[c[i][j]];\n                ans_x=i , ans_y=j , op='N';\n            }\n        }\n        if(j<m && wall[i][j][2] && c[i][j]!=c[i][j+1]) {\n            if(cnt[c[i][j+1]]+cnt[c[i][j]]>ans) {\n                ans=cnt[c[i][j+1]]+cnt[c[i][j]];\n                ans_x=i , ans_y=j , op='E';\n            }\n        }\n    }\n    cout<<ans<<\"\\n\"<<ans_x<<\" \"<<ans_y<<\" \"<<op;\n    return 0;\n}\n\n```\uff08c/c++\uff09",
        "postTime": 1444443182,
        "uid": 3482,
        "name": "hahalidaxin2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e3b\u8981\u662f\u4e24\u79cd\u65b9\u6cd5\uff0c\u4f46\u672c\u8d28\u90fd\u662f\u641c\u7d22\n1. dfs\n\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u6c42\u8054\u901a\u5757\n\u8fd9\u4e2a\u5730\u65b9\u8bb2\u89e3\u4e00\u4e0b\u4f4d\u8fd0\u7b97\uff08\u4e0d\u8981\u5acc\u6211\u70e6\u597d\u4e0d\u597dqwq\uff09\uff1a\n### \u4e00\u3001\u4f4d\u8fd0\u7b97\u7b26\n\n\n------------\n\n- and\uff1a&  \n- or\uff1a|\n- not\uff1a~\n- xor\uff1a^\n\n\n------------\n\n\n\u6ce8\uff1a\u903b\u8f91\u8fd0\u7b97\u7b26\n\n- && \u4e0e\n\n_\u53ea\u6709a\uff0cb\u90fd\u4e3a\u771f_ \u65f6\u8868\u8fbe\u5f0f\u624d\u4e3a\u771f\uff0c\u5426\u5219\u4e3a\u5047\n\n- || \u6216\n\n_\u53ea\u6709a\uff0cb\u90fd\u4e3a\u5047_ \u65f6\u8868\u8fbe\u5f0f\u624d\u4e3a\u5047\uff0c\u5426\u5219\u4e3a\u771f\n\n\n------------\n### \u4e8c\u3001\u8865\u7801\n\n\n------------\n\n- \u5b9a\u4e49\uff1a\u4e00\u4e2a\u6570\u5b57\u7684\u8865\u7801\u5c31\u662f\u5c06\u8be5\u6570\u5b57\u4f5c _\u6bd4\u7279\u53cd\u8fd0\u7b97\uff0c\u518d\u5c06\u7ed3\u679c\u52a0 1_ \uff0c\u5373\u4e3a\u8be5\u6570\u5b57\u7684\u8865\u7801\u3002\n\n - \u4f18\u52bf\uff1a\u53ef\u4ee5\u5728\u52a0\u6cd5\u6216\u51cf\u6cd5\u5904\u7406\u4e2d\uff0c\u4e0d\u9700\u56e0\u4e3a\u6570\u5b57\u7684\u6b63\u8d1f\u800c\u4f7f\u7528\u4e0d\u540c\u7684\u8ba1\u7b97\u65b9\u5f0f\u3002 _\u53ea\u8981\u4e00\u79cd\u52a0\u6cd5\u7535\u8def_ \u5c31\u53ef\u4ee5\u5904\u7406 _\u5404\u79cd\u6709\u7b26\u53f7\u6570_ \u52a0\u6cd5\n \n\n------------\n### \u4e09\u3001\u79fb\u4f4d\u8fd0\u7b97\n\n\n------------\n\u5de6\u79fb\uff1a<<\n\n\u662f\u5c06\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u7684\u64cd\u4f5c\u6570\u6309\u6307\u5b9a\u79fb\u52a8\u7684\u4f4d\u6570\u5411\u5de6\u79fb\u52a8\uff0c\u79fb\u51fa\u4f4d\u88ab\u4e22\u5f03\n\n\u53f3\u79fb\uff1a>>\n\u53f3\u8fb9\u79fb\u51fa\u7684\u7a7a\u4f4d\u4e00\u5f8b\u88650\u3002\u53f3\u79fb\u8fd0\u7b97\u662f\u5c06\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u7684\u64cd\u4f5c\u6570\u6309\u6307\u5b9a\u79fb\u52a8\u7684\u4f4d\u6570\u5411\u53f3\u79fb\u52a8\uff0c\u79fb\u51fa\u4f4d\u88ab\u4e22\u5f03\n\n\n------------\n### \u56db\u3001\u6210\u5bf9\u53d8\u6362\n\nn\u4e3a\u5076\u6570\uff1an^1 = n+1\n\nn\u4e3a\u5947\u6570\uff1an^1 = n-1\n\n\n\n------------\n\n\n\u73b0\u5728\u8bb2\u89e3\u4e00\u4e0bdfs\u51fd\u6570\uff08\u7ec8\u4e8e\u6b65\u5165\u6b63\u9898\uff09\n```cpp\nif(c[i][j]) return;\n```\n\u526a\u679d\uff08\u5176\u5b9e\u5c31\u662f\u4e00\u4e2avis\uff0c\u53ea\u4e0d\u8fc7\u5b58\u7684\u662f\u6570\u800c\u5df2\uff09\n\n```cpp\n    tmp++;\n    c[i][j] = rooms;\n    if(!(a[i][j]&1)) dfs(i,j-1);\n    if(!(a[i][j]&2)) dfs(i-1,j);\n    if(!(a[i][j]&4)) dfs(i,j+1);\n    if(!(a[i][j]&8)) dfs(i+1,j);\n```\n&\u7684\u8fd0\u7528\u4e0a\u9762\u8bb2\u4e86\uff0cdfs\u8fd9\u5f20\u77e9\u5f62\u7684\u56fe\n```cpp\nint dx[] = {-1,0};\nint dy[] = {0, 1};\n```\n\u91c7\u7528\u6eda\u52a8\u6c42\u65b9\u5411\u6765\u7701\u7565\u591a\u4e2aif\u6216switch\u8bed\u53e5\n```cpp\nvoid solve()\n{\n    for(int j=1; j<=m; j++){\n        for(int i=n; i>=1; i--){\n            for(int k=0; k<2; k++){\n                if(!(a[i][j]&(1<<(k+1)))) continue;\n                int ii = i+dx[k];\n                int jj = j+dy[k];\n                if(c[i][j] == c[ii][jj]) continue;\n                if(ii < 1|| ii>n || jj<1 || jj>m) continue;\n                int temp = cnt[c[i][j]]+cnt[c[ii][jj]];\n                if(temp > ans3){\n                    ans3 = temp;\n                    ansi = i; ansj = j;\n                    ansk = k;\n                }\n\n            }\n        }\n    }\n}\n```\n\u8fd9\u6bb5\u4ee3\u7801\u5c31\u662f\u53bb\u6c42\u8981\u79fb\u8d70\u7684\u90a3\u9762\u5899\u7684\u4f4d\u7f6e\n\n\n\u7136\u540e\u8bb2\u4e00\u4e0bdfs\u7684\u672c\u8d28\uff1a\u5728\u4e00\u4e2a\u56fe\u5185\u7684\u4e00\u4e2a\u9876\u70b9\u4e0a\u4f9d\u6b21\u9009\u4e00\u6761\u5206\u652f\u8d70\u4e0b\u53bb\n\n\u8fd9\u9053\u9898\u65f6\u95f4\u8fd8\u5feb\uff0c\u4f46\u6709\u65f6dfs\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u592a\u9ad8\uff0c\u8981\u7528\u672c\u9898\u7684\u7b2c\u4e8c\u79cd\u601d\u8def\uff0cbfs\n\n\u4ee3\u7801\u5c31\u4e0d\u8d34\u4e86\uff0c\u8d34\u4e00\u4e0bdfs\u7684\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n\nconst int N = 55;\nint a[N][N];\nint n,m;\nint rooms, maxr, ans3, ansi, ansj, ansk;\nint c[N][N], cnt[N*N];\nint tmp;\nvoid dfs(int i,int j)\n{\n    if(c[i][j]) return;\n    tmp++;\n    c[i][j] = rooms;\n    if(!(a[i][j]&1)) dfs(i,j-1);\n    if(!(a[i][j]&2)) dfs(i-1,j);\n    if(!(a[i][j]&4)) dfs(i,j+1);\n    if(!(a[i][j]&8)) dfs(i+1,j);\n}\nint dx[] = {-1,0};\nint dy[] = {0, 1};\nvoid solve()\n{\n    for(int j=1; j<=m; j++){\n        for(int i=n; i>=1; i--){\n            for(int k=0; k<2; k++){\n                if(!(a[i][j]&(1<<(k+1)))) continue;\n                int ii = i+dx[k];\n                int jj = j+dy[k];\n                if(c[i][j] == c[ii][jj]) continue;\n                if(ii < 1|| ii>n || jj<1 || jj>m) continue;\n                int temp = cnt[c[i][j]]+cnt[c[ii][jj]];\n                if(temp > ans3){\n                    ans3 = temp;\n                    ansi = i; ansj = j;\n                    ansk = k;\n                }\n\n            }\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d%d\", &m, &n);\n    for(int i=1; i<=n; i++){\n        for(int j=1; j<=m; j++){\n            scanf(\"%d\", &a[i][j]);\n        }\n    }\n\n    for(int i=1; i<=n; i++){\n        for(int j=1; j<=m; j++){\n            if(!c[i][j]){\n                ++rooms;\n                tmp = 0;\n                dfs(i,j);\n                if(maxr < tmp) maxr = tmp;\n                cnt[rooms] = tmp;\n\t\t\t}\n        }\n    }\n\n    printf(\"%d\\n%d\\n\", rooms, maxr);\n    solve();\n    printf(\"%d\\n%d %d \", ans3, ansi, ansj);\n    if(ansk == 0) printf(\"N\\n\");\n    else printf(\"E\\n\");\n\n    return 0;\n}\n/*;\t\n\n7 4\n11 6 11 6 3 10 6\n7 9 6 13 5 15 5\n1 10 12 7 13 7 5\n13 11 10 8 10 12 13\n*/\n```\n\u6700\u540e\u662f\u5e7f\u544aqwq\uff1a\u63a8\u8350\u4e00\u4e0b\u7b97\u6cd5\u7ade\u8d5b\u5165\u95e8\u7ecf\u5178\uff0c\u554a\u54c8\u7b97\u6cd5\uff08\u6709\u5bf9\u4ee3\u7801\u601d\u8def\u5f88\u597d\u7684\u5256\u6790\uff09",
        "postTime": 1583994932,
        "uid": 219033,
        "name": "Snow_Dreams",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1457 \u3010[USACO2.1]\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "### \u4e3a\u4ec0\u4e48\u5927\u5bb6\u90fd\u559c\u6b22\u7528BFS\u5462\uff1f\uff1f\uff1f\n### \u591a\u9ebb\u70e6\uff01\uff01\uff01\n### \u80fd\u7528DFS\u5e72\u5417\u7528BFS\uff1f\uff1f\uff1f\n# \u601d\u8def\uff1a\n\u5bf9\u4e8e\u8f93\u51fa\u524d\u4e24\u884c\uff0c\u5c31\u662f\u4e00\u4e2a\u8d64\u88f8\u88f8\u7684[\u8054\u901a\u5206\u5757](https://www.luogu.com.cn/problem/U102262)\u95ee\u9898\u561b\uff01\n\u5bf9\u4e8e\u8f93\u51fa\u540e\u4e24\u884c\uff0c\u66b4\u529b\u679a\u4e3e\u5c31\u884c\u4e86\uff01\n\u76f4\u63a5\u4e0a\u4ee3\u7801\n# \u7981\u6b62\u6284\u88ad\uff01\uff01\uff01(\u9ebb\u70e6\u6d1b\u8c37\u4e25\u52a0\u770b\u7ba1\uff01)\n```cpp\n# include<bits/stdc++.h>//\u4e07\u80fd\u5934\nusing namespace std;\nbool a[51][51][5];//\u8bb0\u5f55\u6bcf\u4e2a\u683c\u5b50\u662f\u5426\u6709\u5899\nint n,m,room[2501],cnt;//\u8bb0\u5f55\u623f\u95f4\u5927\u5c0f\u548c\u4e2a\u6570\nint maxr=0;//\u8bb0\u5f55\u6700\u5927\u503c\nc[51][51];//\u8bb0\u5f55\u6bcf\u4e2a\u683c\u5b50\u7684\u51fa\u53d1\u70b9\nd[51][51];//\u8bb0\u5f55\u6bcf\u4e2a\u683c\u5b50\u6240\u5728\u623f\u95f4\u5927\u5c0f\nbool b[51][51];//\u9632\u6b62\u91cd\u590d\u8ba1\u6570\nint ans=0;//\u79fb\u9664\u4e00\u9762\u5899\u80fd\u5f97\u5230\u7684\u6700\u5927\u7684\u623f\u95f4\u7684\u5927\u5c0f\nint ansx,ansy;//\u6700\u540e\u4e00\u884c\u7684\u8f93\u51fa\nchar ansf;//\u6700\u540e\u4e00\u884c\u7684\u8f93\u51fa\nvoid dfs(int x,int y,int i)//\u6df1\u641c\n{\n\tif(x>n || y>m || x<1 || y<1 || b[x][y])\n\t\treturn ;\n\tc[x][y]=i;\n\troom[cnt]++;\n\tb[x][y]=1;\n\tif(a[x][y][1]==0)\n\t\tdfs(x,y-1,i);\n\tif(a[x][y][2]==0)\n\t\tdfs(x-1,y,i);\n\tif(a[x][y][3]==0)\n\t\tdfs(x,y+1,i);\n\tif(a[x][y][4]==0)\n\t\tdfs(x+1,y,i);\n}\nint main()\n{\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(0);\n\tcin>>m>>n;//\u9898\u76ee\u5f88\u5751\uff01\u5148\u6765\u5217\u518d\u6765\u884c\uff01\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tint p;\n\t\t\tcin>>p;\n        //\u4f4d\u8fd0\u7b97\n\t\t\tif(p&1)\n\t\t\t\ta[i][j][1]=1;\n\t\t\tif(p&2)\n\t\t\t\ta[i][j][2]=1;\n\t\t\tif(p&4)\n\t\t\t\ta[i][j][3]=1;\n\t\t\tif(p&8)\n\t\t\t\ta[i][j][4]=1;\n\t\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tif(b[i][j]==0)\n\t\t\t{\n\t\t\t\tcnt++;\n\t\t\t\tdfs(i,j,cnt);\n\t\t\t\tmaxr=max(maxr,room[cnt]);\n\t\t\t}//\u524d\u4e24\u884c\u7684\u8f93\u51fa\n  \t//\u5f00\u59cb\u66b4\u529b\u679a\u4e3e\uff01\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\td[i][j]=room[c[i][j]];\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n        //\u5317\u9762\u7684\u5899\n\t\t\tif(a[i][j][2] && i!=1 && c[i][j]!=c[i-1][j])\n\t\t\t{\n\t\t\t\tif(ans<d[i][j]+d[i-1][j])\n\t\t\t\t{\n\t\t\t\t\tans=d[i][j]+d[i-1][j];\n\t\t\t\t\tansx=i;\n\t\t\t\t\tansy=j;\n\t\t\t\t\tansf='N';\n\t\t\t\t}\n\t\t\t\tif(ans==d[i][j]+d[i-1][j])\n\t\t\t\t{\n\t\t\t\t\tif(j<ansy)\n\t\t\t\t\t{\n\t\t\t\t\t\tansx=i;\n\t\t\t\t\t\tansy=j;\n\t\t\t\t\t\tansf='N';\n\t\t\t\t\t}\n\t\t\t\t\tif(j==ansy && i>=ansx)\n\t\t\t\t\t{\n\t\t\t\t\t\tansx=i;\n\t\t\t\t\t\tansf='N';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n        //\u4e1c\u9762\u7684\u5899\n\t\t\tif(a[i][j][3] && j!=m && c[i][j]!=c[i][j+1])\n\t\t\t{\n\t\t\t\tif(ans<d[i][j]+d[i][j+1])\n\t\t\t\t{\n\t\t\t\t\tans=d[i][j]+d[i][j+1];\n\t\t\t\t\tansx=i;\n\t\t\t\t\tansy=j;\n\t\t\t\t\tansf='E';\n\t\t\t\t}\n\t\t\t\tif(ans==d[i][j]+d[i][j+1])\n\t\t\t\t{\n\t\t\t\t\tif(j<ansy)\n\t\t\t\t\t{\n\t\t\t\t\t\tansx=i;\n\t\t\t\t\t\tansy=j;\n\t\t\t\t\t\tansf='E';\n\t\t\t\t\t}\n\t\t\t\t\tif(j==ansy && i>ansx)\n\t\t\t\t\t{\n\t\t\t\t\t\tansx=i;\n\t\t\t\t\t\tansf='E';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t//\u8f93\u51fa\n\tcout<<cnt<<endl;\n\tcout<<maxr<<endl;\n\tcout<<ans<<endl;\n\tcout<<ansx<<' '<<ansy<<' '<<ansf;\n}\n```\n",
        "postTime": 1580962542,
        "uid": 192374,
        "name": "wenkaijie",
        "ccfLevel": 7,
        "title": "P1457 \u57ce\u5821 The Castle \u9898\u89e3"
    },
    {
        "content": "### \u601d\u8def\n\n\u9898\u76ee\u4e00\u5171\u56db\u4e2a\u95ee\n\n\u7b2c\u4e00\u884c\uff1a\u57ce\u5821\u7684\u623f\u95f4\u6570\u76ee\u3002\n\n\u7b2c\u4e8c\u884c\uff1a\u6700\u5927\u7684\u623f\u95f4\u7684\u5927\u5c0f\n\n\u7b2c\u4e09\u884c\uff1a\u79fb\u9664\u4e00\u9762\u5899\u80fd\u5f97\u5230\u7684\u6700\u5927\u7684\u623f\u95f4\u7684\u5927\u5c0f\n\n\u7b2c\u56db\u884c\uff1a\u79fb\u9664\u54ea\u9762\u5899\u53ef\u4ee5\u5f97\u5230\u9762\u79ef\u6700\u5927\u7684\u65b0\u623f\u95f4\n\n\u524d\u4e24\u95ee\u662fFlood Fill\uff0c\u540e\u4e24\u95ee\u662f\u679a\u4e3e\n\n### \u5206\u6790\n\n\u4ece\u9898\u610f\u51fa\u53d1\n\neg. P1457_2.in\n![](https://cdn.luogu.com.cn/upload/image_hosting/3aoofgqt.png)\n\n\u8981\u7834\u9664\u6389\u7684\u5899\u58c1\u662f\u4e24\u4e2a\u65b9\u5757\u4e2d\u95f4\u7684\u90a3\u5835\u5899\n\neg. P1457_3.in\n![](https://cdn.luogu.com.cn/upload/image_hosting/adv9m97o.png)\n\n\u8981\u7834\u9664\u6389\u7684\u5899\u58c1\u662f\u7b2c\u4e00\u884c\u7b2c\u4e00\u5217\u65b9\u5757\u7684\u4e0a\u65b9\uff0c\u90a3\u5835\u5899\n\n\u9898\u9762\u8868\u660e\n\n\u201c\u9009\u62e9\u6700\u4f73\u7684\u5899\u6765\u63a8\u5012\u3002\u6709\u591a\u89e3\u65f6\u9009\u6700\u9760\u897f\u7684\uff0c\u4ecd\u7136\u6709\u591a\u89e3\u65f6\u9009\u6700\u9760\u5357\u7684\u3002\u540c\u4e00\u683c\u5b50\u5317\u8fb9\u7684\u5899\u6bd4\u4e1c\u8fb9\u7684\u5899\u66f4\u4f18\u5148\u3002\u201d\n\n\u56e0\u6b64\uff0c\u63a8\u5012\u7684\u65f6\u5019\uff0c\u8981\u6253\u4e00\u4e0b\u64c2\u53f0\u3002\n\n\n### \u6846\u67b6\n\u4e00\u3001BFS\u6c42\u5f97\u8fde\u901a\u5757\u4e2a\u6570\uff0c\u6700\u5927\u8fde\u901a\u5757\u7684\u9762\u79ef\n\n\u6c42\u8fde\u901a\u5757\u7684\u65f6\u5019\uff0c\u8bb0\u5f55\u4e00\u4e0b\u5f53\u524d\u5757\u5c5e\u4e8e\u54ea\u4e2a\u8fde\u901a\u5757\uff0c\u5e76\u628a\u6240\u6709\u7684\u8fde\u901a\u5757\u7684\u9762\u79ef\u8bb0\u5f55\u4e0b\u6765\u3002\u4e3a\u4e86\u540e\u9762\u63a8\u5bfc\u5899\u58c1\u7684\u65f6\u5019\uff0c\u4e24\u4e2a\u8fde\u901a\u5757\u9762\u79ef\u76f8\u52a0\n\n\u4e8c\u3001\u4ece\u4e0a\u81f3\u4e0b\uff0c\u4ece\u53f3\u81f3\u5de6\u7684\u904d\u5386\u3002\u4e3a\u4e86\u6709\u897f\u9762\u7684\u9009\u897f\u9762\u7684\uff0c\u6709\u5357\u9762\u7684\u9009\u5357\u9762\u7684\u3002\n\n\u5224\u65ad\u4e00\u4e2a\u65b9\u683c\u7684\u5317\u9762\u6216\u8005\u4e1c\u9762\u662f\u5426\u662f\u5899\uff0c\u8bf8\u591a\u5408\u6cd5\u5224\u65ad\u540e\uff0c\u628a\u4ed6\u63a8\u5bfc\uff0c\u83b7\u5f97\u4e24\u4e2a\u8fde\u901a\u5757\u7684\u9762\u79ef\u548c\uff0c\u6765\u66f4\u65b0\u64c2\u53f0\u4e0a\u8bb0\u5f55\u7684\u6700\u5927\u503c\n\n\n### \u4ee3\u7801\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <fstream>\n\n#define x first\n#define y second\n\nusing namespace std;\n\nconst int N = 55, M = N * N;\n\ntypedef pair<int, int> PII;\n\nint g[N][N];\nbool st[N][N];\nPII q[M];\n\nint n, m;\n\nint dx[4] = {0, -1, 0, 1}, dy[4] = {-1, 0, 1, 0};\n\nint idx, f[M];  //\u8fde\u901a\u5757\u7f16\u53f7\uff0c\u8fde\u901a\u5757\u7684\u9762\u79ef\nint g_of_idx[N][N]; //\u8bb0\u5f55\u6bcf\u4e2a\u65b9\u683c\u5c5e\u4e8e\u54ea\u4e2a\u8fde\u901a\u5757\nint max_area; //\u8bb0\u5f55\u6700\u5927\u9762\u79ef\nint max_i = -1, max_j = -1;\nchar max_dir;\nstring dir = \"WNES\";\n\nint bfs(int sx, int sy)\n{   \n    int area = 0;\n    int hh = 0, tt = 0;   //\u6a21\u677fhh = 0, tt = -1; \u6b64\u5904\u9ed8\u8ba4\u6709\u4e00\u4e2astart\u7ed3\u70b9\uff0ctt = 0\n    q[0].x = sx, q[0].y = sy;\n    st[sx][sy] = true;\n    \n    idx++;       //\u6bcf\u4e00\u4e2a\u65b0\u961f\u5217\uff0c\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u8fde\u901a\u5757\n    \n    while (hh <= tt)\n    {\n        area++;\n        PII t = q[hh++];\n\n        g_of_idx[t.x][t.y] = idx;   //\u6807\u8bb0\u8fd9\u4e2a\u65b9\u5757\u5c5e\u4e8e\u54ea\u4e2a\u623f\u95f4\n\n        for (int i = 0; i < 4; i++)\n        {\n            int a = t.x + dx[i], b = t.y + dy[i];\n\n            //\u8d8a\u754c\uff0c\u88ab\u904d\u5386\u8fc7\uff0ccontinue\n            if (a < 0 || a >= n || b < 0 || b >= m) continue;\n            if (st[a][b]) continue;\n\n            //\u8fd9\u4e2a\u65b9\u683c\u662f\u5899\uff0c\u5c31continue\n            if (g[t.x][t.y] >> i & 1) continue;\n\n            //\u5165\u961f\n            ++tt;\n            q[tt].x = a, q[tt].y = b;\n            st[a][b] = true;\n        }\n    }\n\n    f[idx] = area; //\u8bb0\u5f55\u8fd9\u4e2a\u7f16\u53f7\u8fde\u901a\u5757\u7684\u9762\u79ef\uff0c\u8bb0\u5f55\u5728f[]\u91cc\u9762\n    \n    return  area;\n}   \n\nint main()\n{\n    //freopen(\"P1457_4.in\", \"r\", stdin);\n\n    scanf(\"%d%d\", &m, &n);\n\n    for (int i = 0; i < n; i++)\n        for (int j = 0; j < m; j++)\n            scanf(\"%d\", &g[i][j]);\n\n    int area = 0, cnt = 0;\n    for (int i = 0; i < n; i++)\n        for (int j = 0; j < m; j++)\n        {\n            if (!st[i][j])\n            {\n                area = max(area, bfs(i, j));\n                cnt++;\n            }\n        }\n\n    printf(\"%d\\n%d\\n\", cnt, area);\n\n    for (int i = 0; i < n; i++)\n        for (int j = m - 1; j >= 0; j--)\n            for (int k = 1; k <= 2; k++)  //\u904d\u5386\u6bcf\u4e2a\u65b9\u683c\u7684\u5317\u9762\u548c\u4e1c\u9762\uff0c\u662f\u5426\u662f\u5899\uff0c\u53ef\u4ee5\u63a8\u5012\n            {\n                if ((g[i][j] >> k & 1) != 1) continue; //\u5f53\u524d\u7684\u65b9\u683c\u4e0d\u662f\u5899\uff0c\u5c31\u8981continue\n\n                int tx = i + dx[k], ty = j + dy[k];\n                if (tx < 0 || tx >= n || ty < 0 || ty >= m) continue;\n\n                if (g_of_idx[i][j] == g_of_idx[tx][ty]) continue;\n\n                int sum_area = f[g_of_idx[i][j]] + f[g_of_idx[tx][ty]];\n                if (sum_area > max_area)\n                {\n                    max_area = sum_area;\n                    max_i = i;\n                    max_j = j;\n                    max_dir = dir[k];\n                }\n                else if (sum_area == max_area)\n                {\n                    //\u6709\u591a\u89e3\u65f6\u9009\u6700\u9760\u897f\u7684\uff0c\u4ecd\u7136\u6709\u591a\u89e3\u65f6\u9009\u6700\u9760\u5357\u7684\u3002\u540c\u4e00\u683c\u5b50\u5317\u8fb9\u7684\u5899\u6bd4\u4e1c\u8fb9\u7684\u5899\u66f4\u4f18\u5148\u3002\n                    if ((j == max_j && i > max_i) || (i == max_i && j < max_j))\n                    {\n                        max_area = sum_area;\n                        max_i = i;\n                        max_j = j;\n                        max_dir = dir[k];\n                    }\n\n                }\n            }\n\n    printf(\"%d\\n\", max_area);\n    printf(\"%d %d %c\\n\", max_i+1, max_j+1, max_dir);  //\u4e0b\u6807\u8d77\u59cb\u95ee\u9898\n\n    return 0;\n}\n\n\n```\n\n\n### \u603b\u7ed3\n\n\u8fd9\u9053\u9898\u7684\u524d\u4e24\u95ee\u88ab\u6536\u5f55\u5230\u300a\u4e00\u672c\u901a\u300b\u4e0a\u673a\u7ec3\u4e60\u300aThe Castle\u300b\n\n2020\u5e74\u7b2c\u4e00\u9053\u9898\uff0c\u5965\u5229\u7ed9\uff01",
        "postTime": 1577939916,
        "uid": 165143,
        "name": "zqiceberg",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "\r\n\r\n\u8a00\u5f52\u6b63\u4f20\uff0c\u849f\u84bb\u4ee5\u524d\u5728Openjudge\u548c\u4e00\u672c\u901a\u4e0a\u90fd\u505a\u8fc7\u8fd9\u9898\uff0c\u770b\u5230\u7adf\u662f\u4e00\u9053\u84dd\u9898\u65f6\uff0c\u60f3\u90fd\u6ca1\u60f3\u5c31\u628a\u4e4b\u524d\u7684\u4ee3\u7801\u590d\u5236\u7c98\u8d34\u4e0a\u53bb\uff0c\u7136\u540e\u83b7\u5f97\u4e860\u5206\u7684\u597d\u6210\u7ee9\uff0c\u4ed4\u7ec6\u4e00\u770b\uff0c\u8fd8\u6709\u4e24\u95ee\u662fNOI\u548c\u4e00\u672c\u901a\u4e0a\u6ca1\u6709\u7684\uff0c\u4e8e\u662f\uff0cwsl\u3002\r\n\u6ca1\u529e\u6cd5\u53ea\u80fd\u7ee7\u7eed\u6253\u4e0b\u53bb\u3002\u5509\u2026\u2026\u4e00\u8a00\u96be\u5c3d\uff0c\u8fd9\u9898\u5361\u4e86\u6211\u4e00\u4e0a\u5348\u3002\r\n\r\n\u8be5\u9898\u7684\u96be\u70b9\uff1a\r\n\r\n1.\u600e\u4e48\u5224\u65ad\u6bcf\u4e00\u5835\u5899\u7684\u6743\u503c\uff1a![hmmm](https://cdn.luogu.com.cn/upload/image_hosting/xdrgjdvk.png)\r\n```\r\n\t7 4\r\n\t11 6 11 6 3 10 6\r\n\t7 9 6 13 5 15 5\r\n\t1 10 12 7 13 7 5\r\n\t13 11 10 8 10 12 13\r\n```\r\n\u6211\u4eec\u53ef\u4ee5\u8bbe\u897f\u5899\u6743\u503ca\uff0c\u5317\u5899\u6743\u503cb\uff0c\u4e1c\u5899\u6743\u503cc\uff0c\u5357\u5899\u6743\u503cd,\u6839\u636e\u6837\u4f8b\u4e2d3\u4e2a\u89d2\u7684\u503c11,6,13\u548c\u4e1c\u5357\u89d2\u5de6\u8fb9\u7684\u70b9\u6743\u503c12\u53ef\u4ee5\u5f97\u5230:\r\n\r\n1. a+b+d=11\r\n2. a+c+d=13\r\n3. b+c=6\r\n4. c+d=12\r\n\r\n\u4ece\u800c\u89e3\u5f97a=1,b=2,c=4,d=8\r\n\r\n2.\u4f18\u5148\u7ea7\uff1a\u897f>\u5357>\u5317>\u4e1c\r\n\r\n\u8fd9\u4e2a\u597d\u529e\u554a\uff0c\u8ba9i\u4ece\u5927\u5230\u5c0f\u5faa\u73af\uff0cj\u4ece\u5c0f\u5230\u5927\u5faa\u73af\u5c31\u8f7b\u677e\u89e3\u51b3\r\n\r\n\u5176\u4ed6\u7684\u89e3\u91ca\u90fd\u5728\u4ee3\u7801\u91cc\u4e86\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\n#define N 55\r\n#define R register int\r\n#define ll long long\r\n#define AC return 0;\r\nusing namespace std;\r\nint wall[N][N][4],//\u56db\u4e2a\u65b9\u5411\u7684\u5899\r\nvis[N][N],f[10000001];//vis\u8bb0\u5f55\u8be5\u70b9\u5b58\u5728\u7684\u623f\u95f4 \r\nint m,n,ans,room,l,r;\r\nchar ch;\r\nint dx[4]={0,-1,0,1},\r\n\tdy[4]={-1,0,1,0};//\u65b9\u5411\u6570\u7ec4 \r\nstring str=\"WNEA\";//\u65b9\u5411\u5b57\u4e32 \r\ninline int read()//\u5feb\u8bfb\r\n{\r\n\tint f=1,x=0;char ch=getchar();\r\n\twhile(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\r\n\twhile(isdigit(ch)){x=x*10+ch-'0';ch=getchar();}\r\n\treturn x*f;\r\n}\r\ninline bool judge(int x,int y)//\u8fb9\u754c\u5224\u65ad \r\n{\r\n\tif(x>0&&x<=n&&y>0&&y<=m)return true;\r\n\treturn false;\r\n}\r\nstruct node{//\u5b58\u70b9\u7684\u5750\u6807\r\n\tint x;\r\n\tint y;\r\n}now,next,st;\r\nqueue<node>Q;//STL\u5927\u6cd5\u597d\uff01\uff01\uff01 \r\ninline void bfs()\r\n{\r\n\t//\u7528STL\u961f\u5217\u5b9e\u73b0\u5e7f\u641c\r\n\tint sum=1;\r\n\tQ.push(st);\r\n\tvis[st.x][st.y]=++room;\r\n\twhile(!Q.empty())//\u5e7f\u641c\u6a21\u677f\uff0c\u4e0d\u8bb2\u4e86\r\n\t{\r\n\t\tnow=Q.front();\r\n\t\tQ.pop();\r\n\t\tint x=now.x,\r\n\t\t\ty=now.y;\r\n\t\tfor(int k=0; k<4; k++)\r\n\t\t{\r\n\t\t\tint nx=x+dx[k],\r\n\t\t\t    ny=y+dy[k];\r\n\t\t\tif(judge(nx,ny)==true&&!vis[nx][ny]&&!wall[x][y][k])//\u8be5\u70b9\u6ca1\u6709\u8d8a\u754c\uff0c\u4e14\u4e0d\u662f\u5899\u58c1\u4e14\u8be5\u70b9\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u4e00\u4e2a\u5df2\u77e5\u623f\u95f4\r\n\t\t\t{\r\n\t\t\t\tvis[nx][ny]=room;//\u628a\u8be5\u70b9\u52a0\u5165\u73b0\u5728\u7684\u623f\u95f4\r\n\t\t\t\tsum++;\r\n\t\t\t\tnext.x=nx;next.y=ny;//\u538b\u5165\u961f\u5217\r\n\t\t\t\tQ.push(next);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tans=max(ans,sum);//\u6bcf\u6b21\u5bfb\u627e\u5b8c\u4e00\u4e2a\u623f\u95f4\u5c31\u66f4\u65b0\u623f\u95f4\r\n\tf[room]=sum;//\u5b58\u50a8\u8be5\u623f\u95f4\u7684\u5927\u5c0f\r\n}\r\nvoid init()\r\n{\r\n\tios::sync_with_stdio(false);\r\n\tm=read(),n=read();\r\n\tfor(R i=1; i<=n; i++)\r\n\t{\r\n\t\tfor(R j=1; j<=m; j++)\r\n\t\t{\r\n\t\t\tint x;\r\n\t\t\tx=read();\r\n\t\t\tif(x>=8){x-=8;wall[i][j][3]=1;}//\u5357\u9762\u6709\u5899\r\n\t\t\tif(x>=4){x-=4;wall[i][j][2]=1;}//\u4e1c\u9762\u6709\u5899\r\n\t\t\tif(x>=2){x-=2;wall[i][j][1]=1;}//\u5317\u9762\u6709\u5899\r\n\t\t\tif(x>=1){x-=1;wall[i][j][0]=1;}//\u897f\u9762\u6709\u5899 \r\n\t\t}\r\n\t}\r\n}\r\nvoid findmax()\r\n{\r\n\tfor(R j=1;j<=m;j++)//\u4f18\u5148\u7ea7\u662f\u897f->\u5357\r\n\t{\r\n\t\tfor(R i=n;i>=1;i--)\r\n\t\t{ \r\n\t\t\tfor(R k=1; k<=2; k++)\r\n\t\t\t{ \r\n\t\t\t\tif(wall[i][j][k])\r\n\t\t\t\t{\r\n\t\t\t\t\tint nx=i+dx[k],\r\n\t\t\t\t\t\tny=j+dy[k];\r\n\t\t\t\t\tint size=f[vis[nx][ny]]+f[vis[i][j]];//\u6253\u7834\u5899\u58c1\u4e4b\u540e\u623f\u95f4\u5927\u5c0f=\u4e24\u4e2a\u623f\u95f4\u7684\u5927\u5c0f\u4e4b\u548c\r\n\t\t\t\t\tif(size>ans&&vis[nx][ny]!=vis[i][j])//\u66f4\u65b0\u6700\u5927\u503c\u5e76\u8bb0\u5f55\u4f4d\u7f6e\u548c\u65b9\u5411\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tans=size;\r\n\t\t\t\t\t\tl=i;r=j;ch=str[k];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} \r\n\t\t} \r\n\t}\r\n}\r\nint main()\r\n{//\u7b80\u77ed\u7684\u4e3b\u51fd\u6570QwQ \r\n\tinit();\r\n\tfor(int i=1; i<=n; i++)\r\n\t{ \r\n\t\tfor(int j=1; j<=m; j++)\r\n\t\t{ \r\n\t\t\tif(!vis[i][j]){st.x=i;st.y=j,bfs();}\r\n\t\t} \r\n\t}\r\n\tcout<<room<<endl<<ans<<endl;\r\n\tfindmax();//\u5bfb\u627e\u6700\u5927\u503c\r\n\tcout<<ans<<endl<<l<<\" \"<<r<<\" \"<<ch<<endl;\r\n\tAC\r\n}\r\n/*\r\n7 4\r\n11 6 11 6 3 10 6\r\n7 9 6 13 5 15 5\r\n1 10 12 7 13 7 5\r\n13 11 10 8 10 12 13*/\r\n```\r\n\u7ed9\u5404\u4f4d\u4e00\u7ec4\u6570\u636e\uff0c\u81ea\u5df1\u51fa\u7684\uff0c\u548c\u9898\u89e3\u8f93\u51fa\u4e00\u6837\uff0c\u5e94\u8be5\u6ca1\u9519\r\n![](https://cdn.luogu.com.cn/upload/image_hosting/4ahk8oja.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\r\n\r\n\t4 3\r\n\t15 11 14 15\r\n\t3 2  2 12\r\n\t13 9 12 15\r\n\u6700\u540e\u795d\u5404\u4f4d\r\n### CSP2019 RP++\uff0cScore++",
        "postTime": 1573356833,
        "uid": 21732,
        "name": "HeinzGuderian",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1457"
    },
    {
        "content": "# Part One \u524d\u7f6e&\u6ce8\u610f\u7684\u70b9\n------------\n### [\u9898\u9762\u6233\u8fd9\u91cc](https://www.luogu.org/problem/P1457)\n\n\u662f\u4e00\u9053\u5f88\u88f8\u7684Bfs\u9898\u3002\u4e0d\u8fc7\u4e00\u4e9b\u7ec6\u8282\u4e4b\u5904\uff0c\u771f\u7684\u53ef\u4ee5\u953b\u70bc\uff08~~\u641e\u4eba\u5fc3\u6001~~\uff09\u4eba\u7684\u8010\u5fc3\u548c\u7ec6\u5fc3\u7a0b\u5ea6\u3002\n\n\u53e6\uff1a\u8fdb\u5165[\u535a\u5ba2](https://134876.blog.luogu.org/p1457-solution)\u98df\u7528\u66f4\u4f73\n\n##  1.1 \u8bc6\u522b\n\n\u5148\u770b\u770b\u600e\u4e48\u5904\u7406\u90a3\u4e00\u8fb9\u6709\u5899\n\n\u628a\u5bf9\u5e94\u6570\u5b57\u5728\u4e8c\u8fdb\u5236\u4e0b\u5904\u7406\n\n1: \u5728\u897f\u9762\u6709\u5899 **1->1**   \n\n2: \u5728\u5317\u9762\u6709\u5899 **2->10** \n\n4: \u5728\u4e1c\u9762\u6709\u5899 **4->100**   \n\n8: \u5728\u5357\u9762\u6709\u5899 **8->1000** \n\n**\u7531\u6b64\u53ef\u77e5**\n\n\n\n\n   \u6570\u5b57 | \u65b9\u5411 | \u4e8c\u8fdb\u5236\u4e2d\u4f4d\u6570  \n-|-|-\n1 | \u897f | \u7b2c\u4e00\u4f4d\u4e3a1\n2 | \u5317 | \u7b2c\u4e8c\u4f4d\u4e3a1\n3 | \u4e1c | \u7b2c\u4e09\u4f4d\u4e3a1\n4 | \u5357 | \u7b2c\u56db\u4f4d\u4e3a1\n\n\n\n\n\n\n##  1.2 \u5224\u65ad\n\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86**\u600e\u4e48\u5224\u65ad**\u5462\n\n\u8fd9\u662f\u6211\u7684\u5224\u65ad\u51fd\u6570\uff08\u5224\u65ad\u6570x\u7684\u7b2cnum\u4f4d\u662f\u5426\u4e3a1\uff09\n\n\u5f53\u8fd9\u4e00\u4f4d\u6570\u662f\u4e00\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u65b9\u5411\u5c31\u4e0d\u80fd\u8d70\u3002\n\n\u6240\u4ee5\u8fd4\u56defalse\u3002\n\n```cpp\nbool check(int x,int num){\n\tif(x>>(num-1)&1==1) return false;\n\telse return true;\n}\n```\n\n\n\n\n> Tips: \u4f4d\u8fd0\u7b97& \u5728\u540c\u4e00\u4f4d\u4e0a \u540c\u4e3a1 \u8fd4\u56de1 \u67090 \u8fd4\u56de0\n\n# Part Two \u89e3\u9898\n------------\n\n##  2.1 \u601d\u8def\n\u505a\u9898\u5f00\u59cb\u5148\u770b\u6570\u636e\u8303\u56f4\uff01\n\n**\uff081 <=M,N<=50\uff09** \u66b4\u641c\u53ef\u505a!\n\n\u5206\u6210\u56db\u4e2a\u5b50\u95ee\u9898\u6765\u89e3\u51b3\n\n###  2.1.1 \uff08Target\uff1a\u57ce\u5821\u7684\u623f\u95f4\u6570\u76ee\uff09\n\n> \u7c7b\u4f3c\u4e8e[\u6c42\u7ec6\u80de\u6570\u91cf](https://www.luogu.org/problem/P1451)\u4fbf\u5229\u6bcf\u4e00\u4e2a\u683c\u5b50\u3002\u82e5\u6b64\u5404\u5b50\u6ca1\u6709\u88ab\u67d3\u8fc7\u8272\u3002\u5219\u4ece\u6b64\u683c\u5b50\u5f00\u59cb\u8dd1bfs\u67d3\u8272\u3002\u6700\u540e\u6709\u591a\u5c11\u79cd\u989c\u8272\u5373\u662f\u623f\u95f4\u6570\u91cf\u3002\n\n###  2.1.2\uff08Target\uff1a\u6700\u5927\u7684\u623f\u95f4\u7684\u5927\u5c0f\uff09\n\n>\u5f88\u5bb9\u6613\u3002\u5728\u6bcf\u6b21\u67d3\u8272\u65f6\u8bb0\u5f55\u4e00\u4e0b\u683c\u5b50\u6570\u76ee\uff0c\u53d6\u6700\u5927\u503c\u5c31\u597d\u4e86\u3002\n\n###  2.1.3\uff08Target\uff1a\u79fb\u9664\u4e00\u9762\u5899\u80fd\u5f97\u5230\u7684\u6700\u5927\u7684\u623f\u95f4\u7684\u5927\u5c0f\uff09\n\n>\u9996\u5148\u601d\u8003\u4e00\u4e0b\u600e\u4e48\u624d\u80fd\u505a\u5230\u62c6\u5899\u64cd\u4f5c\n\u3002\u6807\u8bb0\u8fd8\u662f\u5f520\uff1f\u90a3\u6837\u4f1a\u6709\u540e\u6548\u6027\uff0c\u4e0d\u597d\u5904\u7406\uff01\u6211\u4eec\u628a\u5899\u4e24\u8fb9\u7684\u70b9\u90fd\u52a0\u8fdb\u961f\u5217\u8fdb\u884c\u62d3\u5c55\uff0c\u65e2\u505a\u5230\u4e86\u201c\u62c6\u5899\u64cd\u4f5c\u201d\u4e5f\u6ca1\u6709\u5f71\u54cd\u5230\u540e\u9762\u7684\u5904\u7406\u3002\n\n###  2.1.4\uff08Target\uff1a\u79fb\u9664\u54ea\u9762\u5899\u53ef\u4ee5\u5f97\u5230\u9762\u79ef\u6700\u5927\u7684\u65b0\u623f\u95f4\uff09\n\n>\u56e0\u4e3a\u662fbfs\uff0c\u78b0\u5230\u6ca1\u6709\u88ab\u6807\u8bb0\u7684\u683c\u5b50\u5c31\u4f1a\u5f00\u59cb\u62d3\u5c55\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u5411\u4e1c\uff0c\u5317\u62d3\u5c55\u3002\u6700\u540e\u6c42\u5f97\u4e00\u5b9a\u662f\u897f\u8fb9\u548c\u5357\u8fb9\u7684\u5899\n\n###  Tips\n\n>\u663e\u800c\u6613\u89c1\uff0c\u64cd\u4f5c1\uff0c2\u53ef\u4ee5\u4e00\u8d77\u5b8c\u6210\uff1b3\uff0c4\u53ef\u4ee5\u4e00\u8d77\u5b8c\u6210\u3002\n\n##  2.2\n\n###  2.2.1 Code\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,anx=-2222,anx2=-1999,ax,ay,ak;//anx\u662f\u6ca1\u62c6\u5899\u65f6\u6700\u5927\u7684\u623f\u95f4\u5927\u5c0f\uff0canx2\u662f\u62c6\u4e86\u5899\u4e4b\u540e\u6700\u5927\u623f\u95f4\u7684\u5927\u5c0f \nint a[55][55],mp[55][55];\nint dy[5]={0,-1,0,1,0};//\u6ce8\u610f\uff01\u8fd9\u4e24\u4e2a\u6570\u7ec4\u7684\u987a\u5e8f\u8981\u548c\u4e0b\u9762check\u4e00\u4e00\u5bf9\u5e94\u3002\nint dx[5]={0,0,-1,0,1};//\u4e5f\u5c31\u662f\u679a\u4e3e\u65f6i\u5bf9\u5e94\u68c0\u6d4b\u7684\u65b9\u5411\u548c\u5b83\u8981\u62d3\u5c55\u7684\u65b9\u5411\u4e00\u81f4\u3002 \nstruct node{int x,y;};\nbool safe(int x,int y){return x>=1&&x<=m&&y>=1&&y<=n;}\nbool check(int x,int num){\n\tif(x>>(num-1)&1==1) return false;\n\telse return true;\n}\nvoid bfs(int sx,int sy,int cnt){//\u5904\u7406\u95ee\u98981\uff0c2\u3002cnt\u5373\u662f\u67d3\u8272\u989c\u6599 \n\tqueue<node> q;int omax=1;\n\tmp[sx][sy]=cnt;\n\tq.push((node){sx,sy}); \n\twhile(!q.empty()){\n\t\tnode u=q.front();q.pop();\n\t\tfor(int i=1;i<=4;i++){\n\t\t\tint nx=u.x+dx[i],ny=u.y+dy[i];\n\t\t\tif(mp[nx][ny]==0&&check(a[u.x][u.y],i)&&safe(nx,ny)){//\u4e00\u4e2a\u6bd4\u8f83\u5de7\u5999\u7684\u64cd\u4f5c \n\t\t\t\tmp[nx][ny]=cnt;omax++;//check\uff08x\uff0ci\uff09\u548cdx[i],dy[i]\u7684i\u662f\u4e00\u4e00\u5bf9\u5e94\u7684  \n\t\t\t\tq.push((node){nx,ny});// 1\uff1a\u897f\uff0c2\uff1b\u5317\uff0c3\uff1a\u4e1c\uff0c4\uff1a\u5357\n\t\t\t}\n\t\t}\n\t}\n\tanx=max(anx,omax);//\u6700\u5927\u7684\u623f\u95f4\u5927\u5c0f \n\treturn ;\n}\n\nvoid bfs2(int sx,int sy,int fx,int fy,int k){//\u5904\u7406\u95ee\u98983\uff0c4 \n\tmemset(mp,0,sizeof(mp)); \n\tqueue<node> q;int omax=2;\n\tmp[sx][sy]=1;\n\tmp[fx][fy]=1;\n\tq.push((node){sx,sy}); \n\tq.push((node){fx,fy}); \n\twhile(!q.empty()){\n\t\tnode u=q.front();q.pop();\n\t\tfor(int i=1;i<=4;i++){\n\t\t\tint nx=u.x+dx[i],ny=u.y+dy[i];\n\t\t\tif(mp[nx][ny]==0&&check(a[u.x][u.y],i)&&safe(nx,ny)){\n\t\t\t\tmp[nx][ny]=1;omax++;\n\t\t\t\tq.push((node){nx,ny}); \n\t\t\t}\n\t\t}\n\t}\n\tif(omax>anx2) {//\u6807\u8bb0\u5899\u9762 \n\t\t ax=sx;ay=sy;\n\t\t ak=k;\n\t}\n\tif(omax==anx2){//\u6807\u8bb0\u5899\u9762 \n\t\tif(ay>=sy) ay=sy;\n\t\tif(ay==sy&&ax<=sx) ax=sx;\n\t\tif(ay==sy&&ax==sx) ak=k;\n\t} \n\tanx2=max(anx2,omax);//\u6253\u6389\u4e00\u4e2a\u5899\u4e4b\u540e\u6700\u5927\u7684\u623f\u95f4\u5927\u5c0f \n\treturn ;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t}\n\t}\n\tmemset(mp,0,sizeof(mp));\n\tint cnt=0;\n\tfor(int i=1;i<=m;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(mp[i][j]==0){//\u904d\u5386\uff0c\u627e\u5230\u6ca1\u6709\u7684\u62d3\u5c55\u8fc7\u7684\u70b9\u3002\u4ee5\u5b83\u4e3a\u8d77\u70b9\u6269\u5c55 \n\t\t\t\tcnt++;bfs(i,j,cnt);\n\t\t\t}\n\t\t}\n\t}\n\tcout<<cnt<<endl; \n\tcout<<anx<<endl;\n\tfor(int i=1;i<=m;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tfor(int k=3;k>=2;k--){\n\t\t\t\tint nx=i+dx[k],ny=j+dy[k];//\u4fbf\u5229\u6bcf\u4e00\u5835\u5899\u3002\u628a\u4e24\u8fb9\u7684\u683c\u5b50\u52a0\u5165\u961f\u5217 \n\t\t\t\tif(check(a[i][j],k)==false&&safe(nx,ny)){bfs2(i,j,nx,ny,k);}\n\t\t\t}\n\t\t}\n\t}\n\tcout<<anx2<<endl;\n\tcout<<ax<<\" \"<<ay<<\" \";\n\tif(ak==3) cout<<\"E\";\n\tif(ak==2) cout<<\"N\";\n\treturn 0;\n}\n\n```\n# Part Three \u5199\u5728\u6700\u540e\n------------\n\u6b38\uff0c\u8fd9\u4e2a\u662f**\u56fe\u8bba**\uff1f \u4e0d\u662f\u88f8\u7684bfs\u5417\uff1f\n\n\u641c\u7d22\u5199\u7684\u771f\u7684\u5f88\u5feb\u4e50\uff08~~\u4e3b\u8981\u662f\u53ef\u4ee5\u5199\u66b4\u529b~~\uff09\u3002\n\n\u5c31\u5230\u8fd9\u91cc\u5566\u3002\n\n\u6709\u4ec0\u4e48\u95ee\u9898\u4e5f\u53ef\u4ee5\u79c1\u804a\u6211\uff08~~\u6211\u662f\u771f\u7684\u849f\u84bb~~\uff09\u3002\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1565149004,
        "uid": 134876,
        "name": "Grussg",
        "ccfLevel": 4,
        "title": "P1457 \u57ce\u5821 \u9898\u89e3"
    },
    {
        "content": "\u5982\u679c\u8fd9\u4e5f\u662f\u63d0\u9ad8+\u7684\u9898\u90a3\u6211\u4e4b\u524d\u90fd\u5728\u5e72\u4e9b\u5565\u3002\u3002\n\u641c\u7d22+\u6a21\u62df\u5c31\u597d\u4e86\uff0c\u6bcf\u4e2a\u65b9\u683c\u5b58\u50a8\u623f\u5b50\u7684\u5e8f\u53f7\u4e0e\u7a7a\u95f4\u5373\u53ef\uff0c\u7136\u540e\u679a\u4e3e\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n```\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint a[60][60][5],b[60][60],c[60][60],i,j,k,m,n,sum,lo,max1,max2;//max1\u662f\u6700\u5927\u623f\u95f4\uff0cmax2\u662f\u63a8\u5012\u540e\u80fd\u5f62\u6210\u7684\u6700\u5927\u623f\u95f4\n//c\u662f\u623f\u95f4\u5e8f\u53f7\uff0c\u9632\u6b62\u5224\u65ad\u5899\u65f6\u51fa\u73b0\u62d0\u5f2f\u540c\u623f\u4f46\u5224\u4e3a\u5f02\u623f\u7684\u9519\u8bef\n//a\u662f\u5e8f\u53f7\nint xl=-10,yl=100,fx;//\u5206\u522b\u8868\u793a\u63a8\u5012\u7684\u5899\u6240\u5904\u5750\u6807,fx\u987e\u540d\u601d\u4e49\n//1\u8868\u793a\u4e1c\uff0c\u5373j+1;\n//2\u8868\u793a\u5357\uff0c\u5373i+1;\n//3\u8868\u793a\u897f\uff0c\u5373j-1;\n//4\u8868\u793a\u5317\uff0c\u5373i-1;\n//b\u8868\u793a\u623f\u95f4\u6709\u591a\u5927;\n\nint search(int x,int y)//\u7a77\u4e3e\n{\n\tb[x][y]=-1;\n\tlo++;\n\tif(a[x][y][1]==0 && b[x][y+1]==0) {search(x,y+1);}\n\tif(a[x][y][2]==0 && b[x+1][y]==0) {search(x+1,y);}\n\tif(a[x][y][3]==0 && b[x][y-1]==0) {search(x,y-1);}\n\tif(a[x][y][4]==0 && b[x-1][y]==0) {search(x-1,y);}\n}\n\nint bl(int x,int y){//\u8d4b\u4e0a\u623f\u95f4\u7a7a\u95f4\u53ca\u5176\u5e8f\u53f7\uff0c\u65b9\u4fbf\u5224\u65ad\n\tb[x][y]=lo;\n\tc[x][y]=sum;\n\tif(a[x][y][1]==0 && b[x][y+1]==-1) {bl(x,y+1);}\n\tif(a[x][y][2]==0 && b[x+1][y]==-1) {bl(x+1,y);}\n\tif(a[x][y][3]==0 && b[x][y-1]==-1) {bl(x,y-1);}\n\tif(a[x][y][4]==0 && b[x-1][y]==-1) {bl(x-1,y);}\n}\n\nint main(){\n\tcin>>m>>n;\n\tfor(i=1;i<=n;i++)\n\t\tfor(j=1;j<=m;j++)\n\t\t\tcin>>b[i][j];\n\n\tfor(i=1;i<=n;i++)\n\t\tfor(j=1;j<=m;j++)\n\t\t{\n\t\t\tk=b[i][j]/8;\n\t\t\ta[i][j][2]=k;\n\t\t\tb[i][j]%=8;\n\n\t\t\tk=b[i][j]/4;\n\t\t\ta[i][j][1]=k;\n\t\t\tb[i][j]%=4;\n\t\t\t\n\t\t\tk=b[i][j]/2;\n\t\t\ta[i][j][4]=k;\n\t\t\tb[i][j]%=2;\n\t\t\t\n\t\t\tk=b[i][j];\n\t\t\ta[i][j][3]=k;\n\t\t\tb[i][j]=0;\n\t\t}\n\n\n\tfor(i=1;i<=n;i++)\n\t\tfor(j=1;j<=m;j++)\n\t\t{\n\t\t\tlo=0;\n\t\t\tif(b[i][j]==0)\n\t\t\t{\n\t\t\t\tsearch(i,j);\n\t\t\t\tif(lo>max1) max1=lo;\n\t\t\t\tsum++;\n\t\t\t\tbl(i,j);\n\t\t\t}\n\t\t}\n\n\tfor(i=1;i<=n;i++)//\u4f9d\u6b21\u5224\u65ad\uff0c\u5148\u4e3e\u7eb5\u518d\u4e3e\u6a2a\n\t\tfor(j=1;j<=m;j++)\n\t\t{\n\t\t\tif(a[i][j][1]==1) \n\t\t\t{\n\t\t\t\tif((max2<b[i][j]+b[i][j+1] ||(max2==b[i][j]+b[i][j+1] && j<=yl )||(max2==b[i][j]+b[i][j+1] && j==yl && i>=xl))  && c[i][j]!=c[i][j+1])\n\t\t\t\t{max2=b[i][j]+b[i][j+1];xl=i;yl=j;fx=1;}\n\t\t\t}\n\t\t\tif(a[i][j][2]==1) \n\t\t\t{\n\t\t\t\tif((max2<b[i][j]+b[i+1][j] ||(max2==b[i][j]+b[i+1][j] && j<=yl )||(max2==b[i][j]+b[i+1][j] && j==yl && i>=xl))  && c[i][j]!=c[i+1][j])\n\t\t\t\t{max2=b[i][j]+b[i+1][j];xl=i;yl=j;fx=2;}\n\t\t\t}\n\t\t\tif(a[i][j][3]==1) \n\t\t\t{\n\t\t\t\tif((max2<b[i][j]+b[i][j-1] ||(max2==b[i][j]+b[i][j-1] && j<=yl )||(max2==b[i][j]+b[i][j-1] && j==yl && i>=xl))  && c[i][j]!=c[i][j-1])\n\t\t\t\t{max2=b[i][j]+b[i][j-1];xl=i;yl=j;fx=3;}\n\t\t\t}\n\t\t\tif(a[i][j][4]==1)\n\t\t\t{\n\t\t\t\tif((max2<b[i][j]+b[i-1][j] ||(max2==b[i][j]+b[i-1][j] && j<=yl )||(max2==b[i][j]+b[i-1][j] && j==yl && i>=xl))  && c[i][j]!=c[i-1][j])\n\t\t\t\t{max2=b[i][j]+b[i-1][j];xl=i;yl=j;fx=4;}\n\t\t\t}\n\t\t}\n\t//\u8f93\u51fa\n\tcout<<sum<<\"\\n\"<<max1<<\"\\n\"<<max2<<\"\\n\"<<xl<<\" \"<<yl<<\" \";\n\tif(fx==1) cout<<\"E\";\n\tif(fx==4) cout<<\"N\";\n\treturn 0;\n}\n\tcout<<sum<<\"\\n\"<<max1<<\"\\n\"<<max2<<\"\\n\"<<xl<<\" \"<<yl<<\" \";\n\tif(fx==1) cout<<\"E\";\n\tif(fx==4) cout<<\"N\";\n\treturn 0;\n}\n```\n\n\u5145\u6ee1\u7740\u849f\u84bb\u6c14\u606f\uff0cC\u7248C++\u7684\u4ee3\u7801",
        "postTime": 1551795498,
        "uid": 55357,
        "name": "Thaumaturge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\u6df1\u641c+\u6a21\u62df\n\n\u4e2a\u4eba\u8ba4\u4e3a\u672c\u9898\u6ca1\u6709\u90a3\u4e48\u96be\uff0c\u4f46\u5f88\u8003\u5bdf\u4ee3\u7801\u80fd\u529b\u3002\n\n\u9996\u5148\u662f\u8bfb\u5165\uff0c\u7531\u4e8e\u6570\u5b57\u662f\u7531\u51e0\u4e2a\u4e8c\u7684\u5e42\u76f8\u52a0\u800c\u5f97\uff0c\u56e0\u6b64\u8003\u8651\u4f4d\u8fd0\u7b97\uff1a\n\n```cpp\nscanf(\"%d%d\",&m,&n);\nfor(int i=1,x=0;i<=n;i++)\n{\n\tfor(int j=1;j<=m;j++)\n    {\n        scanf(\"%d\",&x);\n        for(int k=0;k<4;k++)\n        {\n            wll[k][i][j]=x&(1<<k);\n        }\n    }\n}\n```\n\n\uff08\u5176\u4e2d$wll[0][i][j]$\u3001$wll[1][i][j]$\u3001$wll[2][i][j]$\u3001$wll[3][i][j]$\u5206\u522b\u8868\u793a\u5355\u4f4d\u683c$(i,j)$\u7684\u897f\u3001\u5317\u3001\u4e1c\u3001\u5357\u9762\u662f\u5426\u6709\u5899\uff09\n\n\u63a5\u4e0b\u6765\u770b\u524d\u4e24\u95ee\uff1a\n\n```\n\u7b2c 1 \u884c: \u57ce\u5821\u7684\u623f\u95f4\u6570\u76ee\u3002\n\n\u7b2c 2 \u884c: \u6700\u5927\u7684\u623f\u95f4\u7684\u5927\u5c0f\n```\n\n\u663e\u7136\u662f\u6d2a\u6cdb\u7b97\u6cd5\u80fd\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u4ee3\u7801\uff1a\n\n```cpp\nvoid get_rm(int now_x,int now_y,int now_rm)\n{\n    rm_num[now_x][now_y]=now_rm;\n    for(int i=0;i<4;i++)\n    {\n        if(now_x+mv_x[i]>=1&&now_x+mv_x[i]<=n\n        &&now_y+mv_y[i]>=1&&now_y+mv_y[i]<=m\n        &&!wll[i][now_x][now_y]\n        &&!rm_num[now_x+mv_x[i]][now_y+mv_y[i]])\n        {\n            get_rm(now_x+mv_x[i],now_y+mv_y[i],now_rm);\n        }\n    }\n}\n\nint main()\n{\n\t(read in)\n    \n    int rm_all=0;\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n        {\n            if(!rm_num[i][j])\n            {\n                rm_all++;\n                get_rm(i,j,rm_all);\n            }\n        }\n    }\n    printf(\"%d\\n\",rm_all);\n    \n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n        {\n            rm_sz[rm_num[i][j]]++;\n        }\n    }\n    int maxn_2=0;\n    for(int i=1;i<=rm_all;i++)\n    {\n        maxn_2=maxn_2>rm_sz[i]?maxn_2:rm_sz[i];\n    }\n    printf(\"%d\\n\",maxn_2);\n}\n```\n\n\uff08\u5176\u4e2d$rm$_$num[i][j]$\u4ee3\u8868\u5355\u4f4d\u683c$(i,j)$\u6240\u5904\u623f\u95f4\u7f16\u53f7\uff0c$rm$_$sz[i]$\u4ee3\u8868\u7f16\u53f7\u4e3a$i$\u7684\u623f\u95f4\u7684\u9762\u79ef\uff0c$void$ $get$_$rm(int$ $now$_$x,int$ $now$_$y,int$ $now$_$rm)$\u51fd\u6570\u529f\u80fd\u662f\u5c06\u5355\u4f4d\u683c\u53ca\u5176\u5468\u56f4\u7684\u5355\u5143\u683c\u7f16\u53f7\uff09\n\n\u63a5\u4e0b\u6765\u662f\u7b2c\u4e09\u3001\u56db\u95ee\uff1a\n\n```\n\u7b2c 3 \u884c: \u79fb\u9664\u4e00\u9762\u5899\u80fd\u5f97\u5230\u7684\u6700\u5927\u7684\u623f\u95f4\u7684\u5927\u5c0f\n\n\u7b2c 4 \u884c: \u79fb\u9664\u54ea\u9762\u5899\u53ef\u4ee5\u5f97\u5230\u9762\u79ef\u6700\u5927\u7684\u65b0\u623f\u95f4\u3002\n```\n\n\u5bf9\u4e8e\u7b2c\u4e09\u95ee\uff0c\u679a\u4e3e\u6bcf\u9762\u5899\u62c6\u6389\u540e\u6240\u5f62\u6210\u7684\u623f\u95f4\u7684\u5927\u5c0f\u5373\u53ef\u3002\n\n\u7b2c\u56db\u95ee\u8981\u6c42\u8f93\u51fa\u65b9\u6848\uff0c\u770b\u8981\u6c42\uff1a\n\n```\n\u6709\u591a\u89e3\u65f6\u9009\u6700\u9760\u897f\u7684\uff0c\u4ecd\u7136\u6709\u591a\u89e3\u65f6\u9009\u6700\u9760\u5357\u7684\u3002\u540c\u4e00\u683c\u5b50\u5317\u8fb9\u7684\u5899\u6bd4\u4e1c\u8fb9\u7684\u5899\u66f4\u4f18\u5148\u3002\n\n\u7528\u8be5\u5899\u7684\u5357\u90bb\u5355\u4f4d\u7684\u5317\u5899\u6216\u897f\u90bb\u5355\u4f4d\u7684\u4e1c\u5899\u6765\u8868\u793a\u8fd9\u9762\u5899\uff0c\u65b9\u6cd5\u662f\u8f93\u51fa\u90bb\u8fd1\u5355\u4f4d\u7684\u884c\u6570\u3001\u5217\u6570\u548c\u5899\u7684\u65b9\u4f4d\uff08\"N\"\uff08\u5317\uff09\u6216\u8005\"E\"\uff08\u4e1c\uff09\uff09\u3002\n```\n\n\u679a\u4e3e\u65f6\u6ce8\u610f\u987a\u5e8f\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\nint main()\n{\n\t(read in)\n    (question 1&2)\n    \n    int maxn_3=0,maxn_i=0,maxn_j=0,maxn_sd=0;\n    for(int j=1;j<=m;j++)\n    {\n        for(int i=n;i>=1;i--)\n        {\n            if(rm_num[i][j]!=rm_num[i-1][j])\n            {\n                if(maxn_3<rm_sz[rm_num[i][j]]+rm_sz[rm_num[i-1][j]])\n                {\n                    maxn_3=rm_sz[rm_num[i][j]]+rm_sz[rm_num[i-1][j]];\n                    maxn_i=i;\n                    maxn_j=j;\n                    maxn_sd=0;\n                }\n            }\n            if(rm_num[i][j]!=rm_num[i][j+1])\n            {\n                if(maxn_3<rm_sz[rm_num[i][j]]+rm_sz[rm_num[i][j+1]])\n                {\n                    maxn_3=rm_sz[rm_num[i][j]]+rm_sz[rm_num[i][j+1]];\n                    maxn_i=i;\n                    maxn_j=j;\n                    maxn_sd=1;\n                }\n            }\n        }\n    }\n    printf(\"%d\\n%d %d %c\",maxn_3,maxn_i,maxn_j,maxn_sd==0?'N':'E');\n}\n```\n\n\u6700\u540e\u9644\u4e0a\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n\nusing namespace std;\n\nint m,n;\nbool wll[4][51][51]={};\nint rm_num[52][52]={};\nint rm_sz[2501]={};\n\nconst int mv_x[]={0,-1,0,1};\nconst int mv_y[]={-1,0,1,0};\n\nvoid get_rm(int now_x,int now_y,int now_rm)\n{\n    rm_num[now_x][now_y]=now_rm;\n    for(int i=0;i<4;i++)\n    {\n        if(now_x+mv_x[i]>=1&&now_x+mv_x[i]<=n\n        &&now_y+mv_y[i]>=1&&now_y+mv_y[i]<=m\n        &&!wll[i][now_x][now_y]\n        &&!rm_num[now_x+mv_x[i]][now_y+mv_y[i]])\n        {\n            get_rm(now_x+mv_x[i],now_y+mv_y[i],now_rm);\n        }\n    }\n}\n\nint main()\n{\n    scanf(\"%d%d\",&m,&n);\n    for(int i=1,x=0;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n        {\n            scanf(\"%d\",&x);\n            for(int k=0;k<4;k++)\n            {\n                wll[k][i][j]=x&(1<<k);\n            }\n        }\n    }\n    \n    int rm_all=0;\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n        {\n            if(!rm_num[i][j])\n            {\n                rm_all++;\n                get_rm(i,j,rm_all);\n            }\n        }\n    }\n    printf(\"%d\\n\",rm_all);\n    \n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n        {\n            rm_sz[rm_num[i][j]]++;\n        }\n    }\n    int maxn_2=0;\n    for(int i=1;i<=rm_all;i++)\n    {\n        maxn_2=maxn_2>rm_sz[i]?maxn_2:rm_sz[i];\n    }\n    printf(\"%d\\n\",maxn_2);\n    \n    int maxn_3=0,maxn_i=0,maxn_j=0,maxn_sd=0;\n    for(int j=1;j<=m;j++)\n    {\n        for(int i=n;i>=1;i--)\n        {\n            if(rm_num[i][j]!=rm_num[i-1][j])\n            {\n                if(maxn_3<rm_sz[rm_num[i][j]]+rm_sz[rm_num[i-1][j]])\n                {\n                    maxn_3=rm_sz[rm_num[i][j]]+rm_sz[rm_num[i-1][j]];\n                    maxn_i=i;\n                    maxn_j=j;\n                    maxn_sd=0;\n                }\n            }\n            if(rm_num[i][j]!=rm_num[i][j+1])\n            {\n                if(maxn_3<rm_sz[rm_num[i][j]]+rm_sz[rm_num[i][j+1]])\n                {\n                    maxn_3=rm_sz[rm_num[i][j]]+rm_sz[rm_num[i][j+1]];\n                    maxn_i=i;\n                    maxn_j=j;\n                    maxn_sd=1;\n                }\n            }\n        }\n    }\n    printf(\"%d\\n%d %d %c\",maxn_3,maxn_i,maxn_j,maxn_sd==0?'N':'E');\n    \n    return 0;\n}\n```",
        "postTime": 1540471482,
        "uid": 112794,
        "name": "\u5468\u5b50\u8861",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "### \u8fd9\u9898\u53ef\u4ee5\u7528[\u5bbd\u5ea6\u4f18\u5148\u641c\u7d22](https://baike.so.com/doc/7806949-8081044.html)\uff0c\u641c\u7d22\u51fa\u6bcf\u4e00\u4e2a\u623f\u95f4\u518d\u8ba1\u7b97\u3002\u7136\u800c\u5728\u8ba1\u7b97\u5899\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u7528\u5230[\u6570\u636e\u538b\u7f29](https://baike.so.com/doc/6144853-6358030.html)\u3002\u6240\u4ee5\u8fd9\u9053\u9898\u6240\u8003\u7684\u77e5\u8bc6\u70b9\u8f83\u591a\uff0c\u503c\u5f97\u73c2\u5b66AC\u6389\u3002\n\n__\u8bdd\u4e0d\u591a\u8bf4\uff0c\u9644\u4e0a\u4ee3\u7801__\n\n```\n#include <stdio.h>//\u4e07\u80fd\u5934\u4e0d\u6562\u7528,\u56e0\u4e3a\u6709map \n\nconst int MAXN = 51;//\u5b9a\u4e49\u5e38\u91cf \nconst int d[4][2] = {{0, -1}, {-1 ,0}, {0, 1}, {1, 0}}; // \u6309\u7167\u9898\u76ee\uff0c\u7528\u56db\u4e2a\u65b9\u5411\u8868\u793a\u76842\u7684\u5e42\u4f5c\u4e3a\u4e0b\u6807\u3002 \nconst char name[4] = {'W', 'N', 'E', 'S'};\n\nint map[MAXN][MAXN], num[MAXN][MAXN]; // \u5730\u56fe\u548c\u6240\u5c5e\u623f\u95f4\u7f16\u53f7\u3002 \nint a[MAXN * MAXN]; // \u6bcf\u4e2a\u623f\u95f4\u7684\u5927\u5c0f\u3002 \nint n, m, ans, c, ans2, ansx, ansy, ansd;\n\nbool inMap(int x, int y) { // \u68c0\u67e5\u4e00\u4e2a\u5750\u6807\u662f\u5426\u5728\u5730\u56fe\u4e2d\u3002 \n\treturn  (x > 0) && (x <= n) && (y > 0) && (y <= m);\n}\n\nint search(int x, int y) { // \u5c06\u4e0ex,y\u5750\u6807\u540c\u4e00\u623f\u95f4\u7684\u683c\u5b50\u5168\u90e8\u6807\u8bb0\uff0c\u5e76\u8fd4\u56de\u4ece\u8be5\u683c\u5b50\u5f00\u59cb\u65b0\u641c\u7d22\u51fa\u7684\u683c\u5b50\u7684\u6570\u91cf\u3002 \n\tif (!inMap(x, y) || num[x][y] != 0) { // \u5982\u679c\u8be5\u683c\u5b50\u4e0d\u5728\u5730\u56fe\u4e2d\uff0c\u6216\u8005\u5df2\u7ecf\u88ab\u6807\u8bb0\u8fc7\u4e86\uff0c\u5219\u505c\u6b62\u641c\u7d22\u3002 \n\t\treturn 0;\n\t}\n\tnum[x][y] = c; // \u6807\u8bb0\u5f53\u524d\u683c\u5b50\u3002 \n\tint sum = 1; // \u8bb0\u5f55\u65b0\u683c\u5b50\u6570\u91cf\uff0c\u521d\u59cb\u65f6\u53ea\u6709\u5f53\u524d\u683c\u5b50\u3002 \n\tfor (int i = 0; i <= 3; i++) { // \u5411\u56db\u4e2a\u65b9\u5411\u5c1d\u8bd5\u6269\u5c55\u3002 \n\t\tif (((map[x][y] >> i) & 1) == 0) { // \u5982\u679ci\u65b9\u5411\u6ca1\u6709\u5899\uff0c\u5219\u8fdb\u884c\u6269\u5c55\u3002 \n\t\t\tsum += search(x + d[i][0], y + d[i][1]); \n\t\t}\n\t}\n\treturn sum; // \u8fd4\u56de\u683c\u5b50\u6570\u91cf\u3002 \n}\n\nvoid test(int x, int y, int i) { // \u68c0\u67e5x,y\u683c\u5b50\u5411i\u65b9\u5411\u6253\u901a\u5899\u5f97\u5230\u7684\u623f\u95f4\u5927\u5c0f\u3002 \n\tif ((map[x][y] >> i) & 1 == 0) { // \u5982\u679ci\u65b9\u5411\u6ca1\u6709\u5899\u5219\u9000\u51fa\u3002 \n\t\treturn;\n\t}\n\tint nx = x + d[i][0]; // \u8ba1\u7b97\u6253\u901a\u5899\u540e\u9694\u58c1\u7684\u683c\u5b50\u5750\u6807\u3002 \n\tint ny = y + d[i][1];\n\tif (!inMap[nx][ny]) { // \u4e0d\u80fd\u6253\u901a\u5916\u56f4\u7684\u5899\u3002 \n\t\treturn;\n\t}\n\tint sum = a[num[x][y]]; // \u8bb0\u5f55\u5f53\u524d\u623f\u95f4\u5927\u5c0f\u3002 \n\tif (num[x][y] != num[nx][ny]) { // \u5982\u679c\u5899\u540e\u7684\u683c\u5b50\u4e0d\u5c5e\u4e8e\u540c\u4e00\u623f\u95f4\u5219\u7d2f\u52a0\u5927\u5c0f\u3002 \n\t\tsum += a[num[nx][ny]];\n\t}\n\tif (sum > ans2) { //\u66f4\u65b0\u7b54\u6848\u3002 \n\t\tans2 = sum;\n\t\tansx = x;\n\t\tansy = y;\n\t\tansd = i;\n\t}\n}\n\nint main() {//\u5f00\u59cb\u4e86 \n\tscanf(\"%d %d\\n\", &m, &n);//\u8f93\u5165 \n\tfor (int i = 1; i <= n; i++) {//\u679a\u4e3e\u957f\u5bbd\u8f93\u5165 \n\t\tfor (int j = 1; j <= m; j++) {\n\t\t\tscanf(\"%d\", &map[i][j]);//\u5c06\u5176\u5b58\u5165map \n\t\t}\n\t}\n\t\n```\n\n__\u5176\u5b9e\u4ed6\u4eec\u6240\u7528\u7684\u5899\u7684\u8868\u793a\u6cd5\u662f\u7528\u5230\u4e86\u6570\u636e\u538b\u7f29\u7684\uff0c\u6240\u4ee5\u524d\u9762\u4f1a\u6709\u8ba1\u7b97\u54ea\u91cc\u6709\u5899\u7684\u51fd\u6570__\n\n```\n    \n\tfor (int i = 1; i <= n; i++) {\n\t\tfor (int j = 1; j <= m; j++) { // \u679a\u4e3e\u6bcf\u4e00\u4e2a\u683c\u5b50\u3002 \n\t\t\tif (num[i][j] == 0) { // \u5982\u679c\u5f53\u524d\u683c\u5b50\u6ca1\u6709\u6807\u8bb0\uff0c\u5219\u8868\u793a\u627e\u5230\u4e00\u4e2a\u65b0\u7684\u623f\u95f4\u3002 \n\t\t\t\tc++;\n\t\t\t\ta[c] = search(i, j); // \u6807\u8bb0\u623f\u95f4\u5185\u6240\u6709\u7684\u683c\u5b50\uff0c\u5e76\u8fd4\u56de\u683c\u5b50\u6570\u91cf\u3002 \n\t\t\t\tif (a[c] > ans) { // \u66f4\u65b0\u7b54\u6848\u3002 \n\t\t\t\t\tans = a[c]; \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (int j = 1; j <= m; j++) { // \u7531\u897f\u5f80\u4e1c\u679a\u4e3e\u5899\u3002 \n\t\tfor (int i = n; i >= 1; i--) { // \u7531\u5357\u5f80\u5317\u679a\u4e3e\u5899\u3002 \n\t\t\ttest(i, j, 1); // \u4f18\u5148\u8003\u8651\u62c6\u4e1c\u5899\u3002 \n\t\t\ttest(i, j, 2); // \u62c6\u5317\u5899\u3002 \n\t\t}\n\t}\n\tprintf(\"%d\\n%d\\n%d\\n%d %d %c\\n\", c, ans, ans2, ansx, ansy, name[ansd]);//\u8f93\u51fa \n\treturn 0;\t//\u5b8c\u7f8e\u7ed3\u5c3e \n}\n```",
        "postTime": 1540286514,
        "uid": 37682,
        "name": "\u5fa1\u00b7Dragon",
        "ccfLevel": 0,
        "title": "P1457 \u57ce\u5821 The Castle \u9898\u89e3"
    },
    {
        "content": "\u521d\u6b21\u9047\u5230\u8fd9\u9053\u9898\u672c\u849f\u84bb\u662f\u6709\u70b9\u614c\u7684 \u4e00\u770b\u8fd9\u4e48\u9ad8\u5927\u4e0a\u7684\u63cf\u8ff0 \u597d\u5f3a\u554a  \n\u5b9e\u9645\u4e0a \u5f53\u6211\u4eec\u4ed4\u7ec6\u5206\u6790\u4ed6\u7684\u63cf\u8ff0\u4e4b\u540e\u4f1a\u53d1\u73b0\uff1a\u4ed6\u5728\u9017\u6211\u4eec  \n\u9996\u5148 1 2 4 8\u8fd9\u56db\u4e2a\u6570\u53ef\u4ee5\u7ec4\u62101-15\u7684\u6240\u6709\u7684\u6570 \u800c\u8fd915\u4e2a\u6570\u5404\u81ea\u4ee3\u8868\u4e86\u5468\u56f4\u5899\u7684\u5b89\u7f6e\u60c5\u51b5:\u5177\u4f53\u6765\u8bf4\uff0c\u5c31\u662f\u6570\u5b57\u75311 2 4 8\u4e2d\u54ea\u51e0\u4e2a\u6570\u5b57\u7ec4\u6210 \u5468\u56f4\u5c31\u6709\u54ea\u4e9b\u5899\u3002  \n\u5982\u679c\u8f93\u5165\u662f0 \u90a3\u5c31\u610f\u5473\u7740\u5468\u56f4\u6ca1\u6709\u5899 \u5b83\u5728\u623f\u95f4\u4e2d\u5fc3 \u4ec0\u4e48\u4e5f\u4e0d\u7528\u64cd\u4f5c  \n\u6211\u4eec\u8fd8\u53d1\u73b0\uff0c\u4ed6\u7ed9\u7684\u77e9\u9635n\u00d7m \u662f\u4e2a\u5254\u9664\u4e86\u5899\u7684\u77e9\u9635\uff0c\u8fd9\u5c31\u4e0d\u591f\u76f4\u89c2\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u5f20\u56fe\u5c55\u5f00\uff0c\u53d8\u6210n\u00d72 \u00d7 m\u00d72\u7684\u77e9\u9635\uff0c\u628a\u5899\u52a0\u4e0a\u53bb\u3002\u4f46\u662f\u8981\u6ce8\u610f\u52a0\u5165\u5899\u7684\u65f6\u5019 \u8be5\u4f4d\u7f6e\u5728\u5899\u7684\u65b9\u5411\u4e0a\u7684\u4e09\u4e2a\u683c\u5b50\u5fc5\u987b\u90fd\u8bbe\u4e3a\u5899\u3002  \n\u8fd8\u662f\u4e0d\u591f\u76f4\u89c2\uff1f\u6ca1\u5173\u7cfb\uff0c\u6211\u4eec\u76f4\u63a5\u8f93\u51fa\u8fd9\u4e2a\u5c55\u5f00\u4e4b\u540e\u7684\u77e9\u9635\u3002  \n\u4ee5\u4e0b\u662f\u6837\u4f8b\u7684\u521d\u59cb\u77e9\u9635\u3002  \n```cpp\n -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n -1  0 -2  0 -1  0 -2  0 -1  0 -2  0 -2  0 -1\n -1 -1 -1 -2 -1 -1 -1 -2 -1 -2 -1 -1 -1 -2 -1\n -1  0 -1  0 -2  0 -1  0 -1  0 -1  0 -1  0 -1\n -1 -2 -1 -1 -1 -2 -1 -1 -1 -2 -1 -1 -1 -2 -1\n -1  0 -2  0 -2  0 -1  0 -1  0 -1  0 -1  0 -1\n -1 -2 -1 -1 -1 -1 -1 -2 -1 -1 -1 -2 -1 -2 -1\n -1  0 -1  0 -2  0 -2  0 -2  0 -2  0 -1  0 -1\n -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n```\n\u5728\u8fd9\u4e2a\u77e9\u9635\u4e2d\uff1a  \n0\u4ee3\u8868\u7a7a\u5730 \u4e5f\u5c31\u662f\u8f93\u5165\u7684\u623f\u95f4\u6240\u5728\u70b9(\u76f8\u5f53\u4e8e\u6837\u4f8b\u56fe\u7247\u4e2d\u7684\u7a7a\u5730)    \n-1\u4ee3\u8868\u5899(\u6837\u4f8b\u56fe\u7247\u4e2d\u7684#)   \n-2\u4ee3\u8868\u7684\u662f0\u5468\u56f4\u6ca1\u6709\u5899\u7684\u90a3\u4e9b\u70b9(\u6837\u4f8b\u56fe\u7247\u4e2d\u7684|\u548c-)\u3002  \n\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u53d1\u73b0\uff0c0\u548c0\u4e4b\u95f4\u5728\u4e0a\u4e0b\u5de6\u53f3\u65b9\u5411\u4e0a\u6709-1\u6216\u8005-2\u9694\u5f00 -1\u4e0d\u80fd\u8d70 -2\u53ef\u4ee5\u8d70\u4f46\u662f\u4e0d\u8bb0\u5f55\u623f\u95f4\u5927\u5c0f \u9047\u52300\u623f\u95f4\u5927\u5c0f+1\u3002  \n\u7136\u540e\u4e00\u5957dfs\u5373\u53ef\u89e3\u51b3\u3002  \n\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u7528\u4e86\u597d\u51e0\u4e2a\u4e8c\u7ef4\u6570\u7ec4  \n\u5176\u4e2da\u662f\u8f93\u5165\u7684\u539f\u6570\u7ec4  \nvis\u662fdfs\u7528\u7684\u6d82\u8272\u6570\u7ec4  \nmap\u662f\u4e00\u5b9a\u4e0d\u4f1a\u88ab\u6539\u53d8\u7684\u539f\u6570\u7ec4(\u56e0\u4e3aa\u6570\u7ec4\u540e\u6765\u9700\u8981\u7528\u6765\u5b58\u50a8\u623f\u95f4\u5927\u5c0f)  \nsam\u7528\u6765\u5b58\u50a8\u623f\u95f4\u7f16\u53f7\uff0c\u4e3a\u4e86\u540e\u9762\u5224\u65ad\u5899\u7684\u4e24\u8fb9\u4e0d\u80fd\u662f\u540c\u4e00\u4e2a\u623f\u95f4  \n\u9700\u8981\u6ce8\u610f\u7684\u5927\u6982\u5c31\u8fd9\u4e9b\uff0c\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#define re register\n#define max(x, y) (x > y ? x : y)\n#define west a[x][y - 1] = a[x - 1][y - 1] = a[x + 1][y - 1]\n#define north a[x - 1][y] = a[x - 1][y - 1] = a[x - 1][y + 1]\n#define east a[x][y + 1] = a[x - 1][y + 1] = a[x + 1][y + 1]\n#define south a[x + 1][y] = a[x + 1][y - 1] = a[x + 1][y + 1]\n\nstruct node//\u50a8\u5b58\u5899\u7684\u4fe1\u606f\n{\n\tint x, y, sum;//x,y\u5750\u6807 sum\u662f\u6253\u901a\u4e4b\u540e\u7684\u4e24\u4e2a\u623f\u95f4\u7684\u603b\u548c\n\tchar dir;//dir:\u5899\u7684\u671d\u5411\n};\n\nbool operator < (node x, node y)//\u8ba9\u4f18\u5148\u961f\u5217\u6309\u6211\u4eec\u7684\u8981\u6c42\u6392\u5e8f\n{\n\tif(x.sum == y.sum)\n\t{\n\t\tif(x.y == y.y)\n\t\t{\n\t\t\treturn x.x < y.x;\u6700\u540e\u662f\u6309\u884c(\u6700\u5357\u8fb9\u7684)\n\t\t}\n\t\treturn x.y > y.y;//\u518d\u6309\u5217\u6392(\u6700\u897f\u8fb9\u7684)\n\t}\n\treturn x.sum < y.sum;//\u5148\u6309\u623f\u95f4\u5927\u5c0f\u6392\n}\n\nstd::priority_queue<node> q;\n\nint n, m, rom, cnt, maxans;\n//rom\u623f\u95f4\u4e2a\u6570 cnt\u623f\u95f4\u5927\u5c0f maxans\u6700\u5927\u7684\u623f\u95f4\nint a[101][101], vis[101][101], map[101][101], sam[101][101];\n\ninline void build(int x, int y, int z)//\u5904\u7406\u4fe1\u606f...\n{\n\ta[x][y] = 0;\n\tif(z == 1) west = -1;//west\n\telse if(z == 2) north = -1;//north\n\telse if(z == 3) west = -1, north = -1;//west north\n\telse if(z == 4) east = -1;//east\n\telse if(z == 5) west = -1, east = -1;//west east\n\telse if(z == 6) north = -1, east = -1;//north east\n\telse if(z == 7) west = -1, north = -1, east = -1;//north east west\n\telse if(z == 8) south = -1;//south\n\telse if(z == 9) west = -1, south = -1;//south west\n\telse if(z == 10) north = -1, south = -1;//south north\n\telse if(z == 11) west = -1, north = -1, south = -1;//south north west\n\telse if(z == 12) east = -1, south = -1;//south east\n\telse if(z == 13) west = -1, east = -1, south = -1;//south east west\n\telse if(z == 14) east = -1, north = -1, south = -1;//south east north\n\telse if(z == 15) west = -1, north = -1, east = -1, south = -1;//4.\n}\n\nvoid dfs(int x, int y)//\u6807\u51c6dfs\n{\n\tif(!vis[x][y]) vis[x][y] = 1, ++cnt;//\u5982\u679c\u9047\u5230\u7a7a\u5730\u5c31+1\u5e76\u6807\u8bb0\n\tif(vis[x][y] == -2) vis[x][y] = -3;//\u9632\u6b62\u6b7b\u5faa\u73af..\n\tif(!vis[x + 1][y] || vis[x + 1][y] == -2) dfs(x + 1, y);\n\tif(!vis[x - 1][y] || vis[x - 1][y] == -2) dfs(x - 1, y);\n\tif(!vis[x][y + 1] || vis[x][y + 1] == -2) dfs(x, y + 1);\n\tif(!vis[x][y - 1] || vis[x][y - 1] == -2) dfs(x, y - 1);\n\tmaxans = max(maxans, cnt);//\u6700\u7ec8\u5f97\u51fa\u623f\u95f4\u5927\u5c0f\u548c\u6700\u5927\u7684\u623f\u95f4\u5927\u5c0f\n}\n\nint main()\n{\n\tscanf(\"%d%d\", &m, &n);\n\tfor(re int i = 0; i <= (n << 1); ++i)//\u6ce8\u610f\u8303\u56f4 0~(n*2)\u662f\u77e9\u9635\u4e0b\u6807\u8303\u56f4\n\t{\n\t\tfor(re int j = 0; j <= (m << 1); ++j)\n\t\t{\n\t\t\ta[i][j] = -2;//\u521d\u59cb\u5316a \n\t\t}\n\t}\n\tfor(re int i = 1; i <= n; ++i)\n\t{\n\t\tfor(re int j = 1; j <= m; ++j)\n\t\t{\n\t\t\tint x;\n\t\t\tscanf(\"%d\", &x);\n\t\t\tbuild((i << 1) - 1, (j << 1) - 1, x);//\u56e0\u4e3a\u5c55\u5f00\u77e9\u9635\u4e4b\u540e\u7684\u4e0b\u6807\u5c31\u4e0d\u518d\u662f\u539f\u6765\u7684\u4e86 \u8fdb\u884c\u4e582\u518d-1\u7684\u5904\u7406\n\t\t}\n\t}\n\tfor(re int i = 0; i <= (n << 1); ++i)\n\t{\n\t\tfor(re int j = 0; j <= (m << 1); ++j)\n\t\t{\n\t\t\tvis[i][j] = a[i][j];//\u76f8\u5f53\u4e8ememcpy \n\t\t\tmap[i][j] = a[i][j];\n\t\t\tsam[i][j] = a[i][j];\n\t\t}\n\t}\n\tfor(re int i = 1; i <= (n << 1) - 1; ++i)//\u8fd9\u91cc\u4e0d\u9700\u8981\u5bfb\u627e\u6700\u5916\u9762\u4e00\u5708\u7684\u57ce\u5899\n\t{\n\t\tfor(re int j = 1; j <= (m << 1) - 1; ++j)\n\t\t{\n\t\t\tcnt = 0;\n\t\t\tif(!vis[i][j])\n\t\t\t{\n\t\t\t\t++rom;//\u627e\u5230\u4e00\u4e2a\u623f\u95f4\n\t\t\t\tdfs(i, j);\n\t\t\t\tfor(re int i = 1; i <= (n << 1) - 1; ++i)\n\t\t\t\t{//\u4f7fa\u4e2d\u5b58\u50a8\u623f\u95f4\u5927\u5c0f\u4fe1\u606f \u65b9\u4fbf\u540e\u9762\u6253\u5899\n\t\t\t\t\tfor(re int j = 1; j <= (m << 1) - 1; ++j)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(vis[i][j] == -3) continue;//\u539f\u6765\u662f-2\u7684\u4f4d\u7f6e\u4e0d\u50a8\u5b58\u4fe1\u606f\n\t\t\t\t\t\tif(vis[i][j] != a[i][j])//\u4e5f\u5c31\u662f\u539f\u5148\u7684\u7a7a\u5730\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ta[i][j] = cnt;//\u8bb0\u5f55\u623f\u95f4\u5927\u5c0f\n\t\t\t\t\t\t\tvis[i][j] = cnt;//\u6ce8\u610f vis\u4e5f\u8981\u540c\u65f6\u66f4\u65b0\n\t\t\t\t\t\t\tsam[i][j] = rom;//\u50a8\u5b58\u623f\u95f4\u7f16\u53f7\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(re int i = 1; i <= (n << 1) - 1; ++i)//\u5f00\u59cb\u679a\u4e3e\u53ef\u4ee5\u6253\u901a\u7684\u5899\n\t{//\u8fd8\u662f\u4e0d\u9700\u8981\u5904\u7406\u5916\u5708\u57ce\u5899\n\t\tfor(re int j = 1; j <= (m << 1) - 1; ++j)\n\t\t{\n\t\t\tif(map[i][j] == -1)//-1\u4ee3\u8868\u5899\n\t\t\t{\n\t\t\t\tif(map[i - 1][j] == 0 && map[i + 1][j] == 0 && sam[i - 1][j] != sam[i + 1][j])//\u5982\u679c\u201c\u5357\u5317\u201d\u4e24\u8fb9\u90fd\u662f\u7a7a\u5730 \u4e14\u4e24\u8fb9\u4e0d\u5c5e\u4e8e\u540c\u4e00\u623f\u95f4 \u50a8\u5b58\u4e00\u4e0b\u8fd9\u5835\u5899\u7684\u4fe1\u606f\n\t\t\t\t{\n\t\t\t\t\tq.push((node){(i >> 1) + 1, (j + 1) >> 1, a[i - 1][j] + a[i + 1][j], 'N'});\n\t\t\t\t}\n\t\t\t\tif(map[i][j - 1] == 0 && map[i][j + 1] == 0 && sam[i][j - 1] != sam[i][j + 1])//\u201c\u4e1c\u897f\u201d\u671d\u5411\u7684\u5899\n\t\t\t\t{\n\t\t\t\t\tq.push((node){(i + 1) >> 1, j >> 1, a[i][j - 1] + a[i][j + 1], 'E'});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\", rom);\n\tprintf(\"%d\\n\", maxans);\n\tprintf(\"%d\\n\", q.top().sum);//\u8f93\u51fa\u6700\u5927\u503c\n\tprintf(\"%d %d %c\", q.top().x, q.top().y, q.top().dir);//\u6700\u9700\u8981\u6253\u901a\u7684\u5899\n\treturn 0;\n}\n```",
        "postTime": 1539615424,
        "uid": 55683,
        "name": "QianhanOfficial",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "\u770b\u5927\u5bb6\u90fd\u662f\u904d\u5386\u505a\u7684\uff0c\u53d1\u4e2a\u5e76\u67e5\u96c6\u7684\u505a\u6cd5\u5427\u3002\n\n\u9898\u76ee\u95ee\u623f\u95f4\u6570\u76ee\u548c\u6700\u5927\u623f\u95f4\u5927\u5c0f\uff0c\u660e\u663e\u5c31\u662f\u5e76\u67e5\u96c6\u7684\u529f\u80fd\u3002\n\u7528n*m\u4e2a\u5143\u7d20\u4ee3\u8868\u6bcf\u4e2a\u683c\u5b50\uff0cfa[x]\u4ee3\u8868x\u5143\u7d20\u7684\u8fde\u901a\u5757\u6839\u8282\u70b9\uff0c\u5bf9\u4e8e\u6839\u8282\u70b9\u7528sz[x]\u8868\u793a\u6b64\u8fde\u901a\u5757\u7684\u5927\u5c0f\u3002\n\n\u5e76\u67e5\u96c6\u7684\u57fa\u672c\u64cd\u4f5c\u662f\u5408\u5e76\u800c\u4e0d\u662f\u5206\u5272\uff0c\u6240\u4ee5\u6211\u4eec\u4ece\u540e\u5f80\u524d\u505a\uff0c\u5047\u8bbe\u4e00\u5f00\u59cb\u6240\u6709\u683c\u5b50\u65c1\u8fb9\u90fd\u662f\u5899\uff0c\u6574\u4e2a\u56fe\u6709n*m\u4e2a\u8fde\u901a\u5757\u3002\u7136\u540e\u8bfb\u5165\u6570\u636e\u7684\u65f6\u5019\u5bf9\u6bcf\u4e2a\u683c\u5b50\u679a\u4e3e\u56db\u4e2a\u65b9\u5411\uff0c\u5982\u679c\u6ca1\u6709\u5899\u5219\u5408\u5e76\u76f8\u90bb\u7684\u683c\u5b50\u3002\u5408\u5e76\u7684\u65f6\u5019\u8bb0\u5f97\u7ef4\u62a4sz\u548c\u8fde\u901a\u5757\u7684\u6570\u91cf\u3002\n\n\u6700\u540e\u8f93\u51fa\u8fde\u901a\u5757\u7684\u6570\u91cf\u548c\u6700\u5927\u7684sz\u5c31\u884c\u4e86\u3002\n\n\u5bf9\u4e8e\u6700\u540e\u4e24\u95ee\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u6bcf\u9762\u5899\uff0c\u5047\u8bbe\u63a8\u6389\u5b83\uff0c\u5408\u5e76\u76f8\u90bb\u4e24\u4e2a\u683c\u5b50\u8bd5\u8bd5\u5f97\u5230\u7684\u8fde\u901a\u5757\u6709\u591a\u5927\uff0c\u53d6\u6700\u5927\u7684\u66f4\u65b0\u5c31\u884c\u4e86\u3002\n\n```cpp\n#include <iostream>\n#include <string>\n#include <vector>\n#include <numeric>\n\n#define REP(i,from,to)      for(auto i=(from); i<=(to); ++i)\n#define PER(i,from,to)      for(auto i=(from); i>=(to); --i)\n#define FOR(i,less_than)    for (auto i=0; i<(less_than); ++i)\n#define FILL(container, value)    fill(container.begin(), container.end(), value)\n\nusing VI  = std::vector<int>;\nusing VVI = std::vector<VI>;\n\nusing namespace std;\n\nint n, m;\nvector<VVI> wall;\nVI fa, sz;\nint scc, max_sz;\n\nvector<int> dx={0,-1,0,1};\nvector<int> dy={-1,0,1,0};\n\ninline bool ok(int x, int y) { return x>=0 && x<n && y>=0 && y<m; }\n\nint find(int x) { return fa[x]==x ? x : fa[x]=find(fa[x]); }\n\ninline int encode(int x, int y) { return x*m+y+1; }\n\nvoid merge(int x, int y, int tx, int ty) {\n    int a = encode(x, y), b = encode(tx, ty);\n    int fx=find(a), fy=find(b);\n    if (fx!=fy) {\n        --scc;\n        fa[fx] = fy;\n        sz[fy] += sz[fx];\n        max_sz = max(max_sz, sz[fy]);\n    }\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin >> m >> n;\n    wall = vector<VVI>(n+1, VVI(m+1, VI(4)));\n\n    fa.resize(n*m+1);\n    sz.resize(n*m+1);\n    scc = n*m ,max_sz = 1;\n    iota(fa.begin(), fa.end(), 0);\n    FILL(sz, 1);\n\n    REP(i, 0, n-1) REP(j, 0, m-1) {\n        int x;\n        cin >> x;\n        REP(k, 0, 3) \n            wall[i][j][k] = (x>>k & 1);\n        REP(k, 0, 3)\n            if (!wall[i][j][k]) {\n                 int tx=i+dx[k], ty=j+dy[k];\n                 merge(i,j,tx,ty);\n            }\n    }\n\n    cout << scc << '\\n' << max_sz << '\\n';\n\n    int max_merge = 0;\n    string direction = \" NE \";\n    string pos;\n    FOR(j, m) PER(i, n-1, 0)  \n        REP(k, 1, 2)\n            if (wall[i][j][k]) {\n                int tx=i+dx[k], ty=j+dy[k];\n                if (ok(tx, ty)) {\n                    int fx = find(encode(i,j)), fy = find(encode(tx,ty));\n                    if (fx!=fy && sz[fx]+sz[fy]>max_merge) {\n                        max_merge = sz[fx] + sz[fy];\n                        pos = to_string(i+1) + \" \" + to_string(j+1) + \" \" + direction[k];\n                    }\n                }\n            }\n\n    cout << max_merge << '\\n' << pos << endl;\n\n    return 0;\n}\n```",
        "postTime": 1534086807,
        "uid": 95455,
        "name": "fengsq19474",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "```\n\u4e00\u9053\u5e76\u67e5\u96c6\u6a21\u677f\u9898\n\u6211\u7adf\u7136\u505a\u4e862.5d\n\u5404\u4f4d\u5927\u4f6c1.5h\u5c31A\u4e86\n\u6211\u597d\u83dc\uff0c\u600e\u4e48\u529e\uff1f\uff1f\uff1f\n\u597d\u5427\uff0c\u662f\u9053\u9012\u5f52+\u5e76\u67e5\u96c6\n\u89e3\u91ca\u90fd\u5728\u4e0b\u9762\u4e86\u3002\n\uff081\uff09\u5c3d\u91cf\u76f4\u63a5\u627e\u6700\u4f18\u89e3\n\uff082\uff09\u5982\u679c\u6709\u5bb6\u65cf\u6807\u8bb0\u5c31\u4e0d\u80fd\u518d\u641c\u4e86\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nstruct node\n{\n    bool b[5];//\u5357\u4e1c\u5317\u897f \n    int jz;//\u5bb6\u65cf\u53f7\n    node()\n    {\n        memset(b,1,sizeof(b));\n        jz=-1;//\u4e00\u5f00\u59cb\u6ca1\u6709\u5bb6\u65cf\n    }\n}a[52][52];//\u5b58\u56fe\nint n,m,lz,maxx,f[2601];//\u623f\u95f4\u5927\u5c0f\nconst int dx[5]={0,1,0,-1,0};\nconst int dy[5]={0,0,1,0,-1};\nvoid turn(int i,int j,int x);\nint dfs(int x,int y);\nint main()\n{\n    int ansx,ansy;\n    scanf(\"%d%d\",&m,&n);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n        {\n            int x;\n            scanf(\"%d\",&x);\n            turn(i,j,x);\n        }\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            if(a[i][j].jz==-1)\n            {\n            \t//lz:\u5bb6\u65cf\u7684\u6570\u91cf(\u7f16\u53f7) \n                f[++lz]=dfs(i,j);//\u9012\u5f52\u6c42\u5bb6\u65cf \n                maxx=max(f[lz],maxx);//\u627e\u6700\u5927\u623f\u95f4\u7684\u5927\u5c0f  \n            }\n    printf(\"%d\\n%d\\n\",lz,maxx);\n    maxx=0;char st;\n    for(int j=1;j<=m;j++)//\u627e\u7b54\u6848(\u5fc5\u4e3a\u6700\u4f18\u7b54\u6848) \n    {\n        for(int i=n;i>=1;i--)\n        {\n            if(!a[i][j].b[3]&&a[i-1][j].jz!=a[i][j].jz)//\u5317\u5899 \n            {\n                int t=f[a[i-1][j].jz]+f[a[i][j].jz];\n                if(t>maxx)//\u5224\u65ad \n                {\n                    maxx=t;\n                    ansx=i;\n                    ansy=j;\n                    st='N';\n                }\n            }\n            if(!a[i][j].b[2]&&a[i][j+1].jz!=a[i][j].jz)//\u4e1c\u5899 \n            {\n                int t=f[a[i][j+1].jz]+f[a[i][j].jz];\n                if(t>maxx)\n                {\n                    maxx=t;\n                    ansx=i;\n                    ansy=j;\n                    st='E';\n                }\n            }\n        }\n    }\n    printf(\"%d\\n%d %d %c\\n\",maxx,ansx,ansy,st);\n}\nint dfs(int x,int y)\n{\n    int s=0;\n    a[x][y].jz=lz;\n    for(int i=1;i<5;i++)\n    {\n        int xx,yy;\n        xx=x+dx[i],yy=y+dy[i];\n        if(xx>0&&xx<=n&&yy>0&&yy<=m&&a[x][y].b[i])\n            if(a[xx][yy].jz==-1)//\u6ca1\u6709\u5899\u5c31\u52a0\u5165\u5bb6\u65cf \n                s+=dfs(xx,yy);\n    }\n    return s+1;//\u52a0\u4e0a\u81ea\u5df1 \n}\nvoid turn(int i,int j,int x)\n{\n    if(x>=8)a[i][j].b[1]=a[i+1][j].b[3]=0,x-=8;//2\u8fdb\u5236,\u5224\u65ad\u8be5\u6570\u7b2c4\u4f4d\u662f\u5426\u4e3a1 \n    if(x>=4)a[i][j].b[2]=a[i][j+1].b[4]=0,x-=4;//...\n    if(x>=2)a[i][j].b[3]=a[i-1][j].b[1]=0,x-=2;//...\n    if(x>=1)a[i][j].b[4]=a[i][j-1].b[2]=0,x-=1;//...\n}\n```",
        "postTime": 1524894156,
        "uid": 58164,
        "name": "lijianyangyf",
        "ccfLevel": 0,
        "title": "P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9053\u9898\u7528\u5e76\u67e5\u96c6+\u6df1\u641c\u6765\u505a\n\n\u6b65\u9aa4\u5982\u4e0b\uff1a\n\n\uff081\uff09\u8f93\u5165\u7684\u65f6\u5019\u987a\u4fbf\u627e\u51fa\u6240\u6709\u7684\u5899\n\n\uff082\uff09\u679a\u4e3e\u884c\u548c\u5217\uff0c\u5982\u679c\u8fd9\u4e00\u4e2a\u70b9\u6ca1\u6709\u88ab\u627e\u8fc7\u7684\u8bdd\uff0c\u5c31\u628a\u5b83\u5f53\u4f5c\u7956\u5148\uff0c\u56db\u4e2a\u65b9\u5411\u641c\u7d22\uff0c\u987a\u4fbf\u67e5\u627e\u9762\u79ef\n\n\uff083\uff09\u627e\u6700\u5927\u7684\u623f\u95f4\u548c\u623f\u95f4\u603b\u6570\n\n\uff084\uff09\u679a\u4e3e\u884c\u548c\u5217\uff0c\u4e0a\u548c\u53f3\u4e24\u8fb9\u7684\u623f\u95f4\u5e76\u67e5\u627e\u4e24\u4e2a\u623f\u95f4\u4e4b\u548c\u6700\u5927\uff0c\u8fd8\u6709\u8981\u6253\u7834\u7684\u90a3\u5835\u5899\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node//(x,y)\u7684\u7236\u4eb2 \n{\n\tint x,y;\n}fa[52][52];\nint wx,wy;\nint dx[4]={-1,0,1,0};//\u4e0a\u3001\u53f3\u3001\u4e0b\u3001\u5de6\u56db\u4e2a\u65b9\u5411 \nint dy[4]={0,1,0,-1};\nint n,m,a[52][52],s;//a\u8868\u793a\u8fd9\u4e2a\u7956\u5148\u70b9\u7684\u623f\u95f4\u9762\u79ef \nbool f[52][52][52][52],v[52][52];//f[x1][y1][x2][y2]\u8868\u793a\u4e24\u4e2a\u70b9\u662f\u5426\u60f3\u901a \nvoid find_zuxian(int x,int y)//\u67e5\u627e\u7956\u5148\uff0c\u5e76\u628a\u503c\u653e\u5728wx,wy\u91cc\u9762 \n{\n\tif(fa[x][y].x==x && fa[x][y].y==y){wx=x,wy=y;return;}\n\telse find_zuxian(fa[x][y].x,fa[x][y].y);\n}\ninline void find(int x,int y,int c)//\u67e5\u627e\u70b9(x,y)\u7684\u5899 \n{\n\tif(c>=8) f[x][y][x+1][y]=f[x+1][y][x][y]=false,c-=8;\n\tif(c>=4) f[x][y][x][y+1]=f[x][y+1][x][y]=false,c-=4;\n\tif(c>=2) f[x][y][x-1][y]=f[x-1][y][x][y]=false,c-=2;\n\tif(c==1) f[x][y][x][y-1]=f[x][y-1][x][y]=false;\n}\nvoid dfs(int x,int y)//\u4ece\u70b9(x,y)\u5f00\u59cb\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u65b9\u5411\u641c\u7d22 \n{\n\tint i,xx,yy;\n\tfor(i=0;i<=3;i++)\n\t{\n\t\txx=x+dx[i];\n\t\tyy=y+dy[i];\n\t\tif(v[xx][yy]==true && f[x][y][xx][yy]==true)\n\t\t{\n\t\t\tv[xx][yy]=false;\n\t\t\tfa[xx][yy].x=x;\n\t\t\tfa[xx][yy].y=y;\n\t\t\tdfs(xx,yy);\n\t\t}\n\t}\n\ts++;//\u8bb0\u5f55\u9762\u79ef \n}\nint main()\n{\n\tint i,j,k,t;\n\tscanf(\"%d%d\",&m,&n);\n\tmemset(f,true,sizeof(f));\n\tfor(i=1;i<=n;i++)\n\t\tfor(j=1;j<=m;j++)\n\t\t\tscanf(\"%d\",&t),find(i,j,t),fa[i][j].x=i,fa[i][j].y=j;//\u67e5\u627e\u8fd9\u4e2a\u70b9\u65c1\u8fb9\u7684\u5899\uff0c\u4e00\u5f00\u59cb\u81ea\u5df1\u7684\u7956\u5148\u70b9\u5c31\u662f\u4e3a\u81ea\u5df1 \n\tmemset(v,true,sizeof(v));//\u8bb0\u5f55\u8fd9\u4e2a\u70b9\u662f\u5426\u641c\u8fc7 \n\tfor(i=1;i<=n;i++)//\u67e5\u627e\u6bcf\u4e00\u4e2a\u70b9 \n\t{\n\t\tfor(j=1;j<=m;j++)\n\t\t{\n\t\t\tif(v[i][j]==false) continue;//\u5982\u679c\u88ab\u627e\u8fc7\u4e86\uff0c\u5c31\u4e0d\u7528\u7ba1\u4e86 \n\t\t\tv[i][j]=false;s=0;//\u521d\u59cb\u5316s \n\t\t\tdfs(i,j);a[i][j]=s;//\u6df1\u641c\uff0c\u5e76\u4e14\u8bb0\u5f55s \n\t\t}\n\t}\n\tint ans=0,maxx=0;\n\tfor(i=1;i<=n;i++)//\u627e\u6700\u5927\u7684\u623f\u95f4\u548c\u623f\u95f4\u603b\u6570\n\t{\n\t\tfor(j=1;j<=m;j++)\n\t\t{\n\t\t\tif(fa[i][j].x==i && fa[i][j].y==j)//\u5982\u679c\u81ea\u5df1\u7684\u7956\u5148\u662f\u81ea\u5df1\u7684\u8bdd\uff0c\u8bf4\u660e\u5b83\u5c31\u662f\u7956\u5148 \n\t\t\t{\n\t\t\t\tans++;\n\t\t\t\tmaxx=max(maxx,a[i][j]);\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\tprintf(\"%d\\n\",maxx);\n\tmaxx=0;\n\tint max_x,max_y,max_t;\n\tfor(i=1;i<=n;i++)//\u679a\u4e3e\u884c \n\t{\n\t\tfor(j=1;j<=m;j++)//\u679a\u4e3e\u5217 \n\t\t{\n\t\t\tfor(t=0;t<=1;t++)//\u4e0a\u548c\u53f3\u4e24\u4e2a\u65b9\u5411 \n\t\t\t{\n\t\t\t\tint xx=i+dx[t];\n\t\t\t\tint yy=j+dy[t];\n\t\t\t\tif(xx>=1 && xx<=n && yy>=1 && yy<=m)//\u6ca1\u6709\u8d85\u51fa\u8fb9\u754c \n\t\t\t\t{\n\t\t\t\t\tif(f[i][j][xx][yy]==false)//\u5982\u679c\u6709\u5899\u6321\u4f4f \n\t\t\t\t\t{\n\t\t\t\t\t\tint x1,y1,x2,y2;\n\t\t\t\t\t\tfind_zuxian(i,j);x1=wx;y1=wy;//\u67e5\u627e\u8fd9\u4e24\u4e2a\u70b9\u7684\u7956\u5148 \n\t\t\t\t\t\tfind_zuxian(xx,yy);x2=wx;y2=wy;\n\t\t\t\t\t\tif(x1!=x2 || y1!=y2) //\u5982\u679c\u4e24\u4e2a\u70b9\u4e0d\u76f8\u7b49 \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(maxx<a[x1][y1]+a[x2][y2])//\u66f4\u65b0\u6700\u4f18\u503c \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmaxx=a[x1][y1]+a[x2][y2];\n\t\t\t\t\t\t\t\tmax_x=i;max_y=j;max_t=t;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if(maxx==a[x1][y1]+a[x2][y2])//\u5982\u679c\u7b49\u4e8e\u6700\u5927\u503c \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif(j<max_y)//\u5148\u9009\u62e9\u6700\u9760\u897f\u7684 \n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tmax_x=i;max_y=j;max_t=t;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if(i>max_x && j==max_y)//\u5982\u679c\u5728\u76f8\u7b49\u7684\u57fa\u7840\u4e0a\uff0c\u5c31\u9009\u6700\u9760\u5357\u7684 \n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tmax_x=i;max_y=j;max_t=t;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",maxx);//\u6700\u540e\u8f93\u51fa\u5c31\u597d\u4e86 \n\tprintf(\"%d %d \",max_x,max_y);\n\tif(max_t==0) printf(\"N\\n\");\n\telse\t\t printf(\"E\\n\");\n\treturn 0;\n}\n```",
        "postTime": 1524748676,
        "uid": 66181,
        "name": "Celebrate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "\u8fd9\u9898\u672c\u6765\u662f\u633a\u7b80\u5355\u7684\uff0c\u4f46\u662f\u8eab\u4e3a\u849f\u84bb\u7684\u6211\u8fd8\u662f\u505a\u4e86\u4e00\u4e2a\u591a\u5c0f\u65f6\n\n\u4e0b\u9762\u6211\u6765\u8bf4\u4e00\u4e0b\u8fd9\u9053\u9898\u7684\u601d\u8def\u548c\u4e3b\u8981\u8fc7\u7a0b\uff1a\n\n- \u8bfb\u56fe\n\n\u8fd9\u91cc\u9898\u76ee\u7ed9\u4e86\u4e00\u4e2a\u4e8c\u8fdb\u5236\u7684\u548c\uff0c\u8868\u793a\u6bcf\u4e2a\u5355\u4f4d\u56db\u5468\u6709\u6ca1\u6709\u5899\u3002\u5b9a\u4e49bool\u6570\u7ec4w[i][j][k]\u8868\u793a\u7b2ci\u884c\u7b2cj\u5217\u7684k\u65b9\u5411\u662f\u5426\u6709\u5899\uff08k=0, 1, 2, 3\u5206\u522b\u4ee3\u8868\u897f\u3001\u5317\u3001\u4e1c\u3001\u5357\uff09\n\n- BFS\u6c42\u8fde\u901a\u5757\n\n\u904d\u5386\u6bcf\u4e2a\u5355\u4f4d\u8dd1\u4e00\u904d\u8fde\u901a\u5757\uff0cvis[i][j]\u8868\u793a(i, j)\u8fd9\u4e2a\u70b9\u662f\u5426\u8bbf\u95ee\u8fc7\uff0ccnt\u8bb0\u5f55\u76ee\u524d\u8fde\u901a\u5757\u7684\u6570\u91cf\uff08\u76ee\u524d\u6709\u591a\u5c11\u4e2a\u8fde\u901a\u5757\uff09\uff0cnum[i]\u8bb0\u5f55\u7b2ci\u4e2a\u623f\u95f4\uff08\u8fde\u901a\u5757\uff09\u5305\u542b\u7684\u5355\u4f4d\u6570\u91cf\uff0cfa[i][j]\u8868\u793a(i, j)\u8fd9\u4e2a\u70b9\u6240\u5728\u7684\u8fde\u901a\u5757\u7684\u7f16\u53f7\uff0c maxk\u8bb0\u5f55\u6700\u5927\u7684\u623f\u95f4(\u8fde\u901a\u5757)\u6240\u5305\u542b\u5355\u4f4d\u7684\u6570\u91cf\n\n- \u627e\u51fa\u63a8\u6389\u540e\u80fd\u4f7f\u4e24\u4e2a\u623f\u95f4\u7684\u603b\u9762\u79ef\u4e4b\u548c\u6700\u5927\u7684\u5899\n\n\u904d\u5386\u6bcf\u4e00\u4e2a\u70b9\u7684\u5317\u5899\u548c\u4e1c\u5899\uff0c\u6ce8\u610f\u9898\u76ee\u63cf\u8ff0\u4e2d\u7684\u4f18\u5148\u6b21\u5e8f\u3002maxx\u8bb0\u5f55\u5f53\u524d\u63a8\u6389\u4e00\u4e2a\u5899\u4ee5\u540e\u4e24\u4e2a\u623f\u95f4\u9762\u79ef\uff08\u6240\u542b\u5355\u4f4d\u6570\u91cf\uff09\u7684\u6700\u5927\u503c\u3002\u5f53\u8fd9\u4e2a\u70b9\u4e0e\u5b83\u76f8\u90bb\u7684\u4e00\u4e2a\u70b9\u7684fa\uff08\u6240\u5728\u8fde\u901a\u5757\u7684\u7f16\u53f7\uff09\u4e0d\u540c\uff0c\u4e14\u5f53\u8fd9\u4e24\u4e2a\u70b9\u6240\u5728\u8fde\u901a\u5757\u4e2d\u6240\u542b\u5355\u4f4d\u6570\u91cf\u4e4b\u548c\u5927\u4e8emaxx\u4e4b\u65f6\uff0c\u66f4\u65b0\u7b54\u6848\n\n\n\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <queue>\nusing namespace std;\nconst int MAXN=55;\nconst int dir[4][2]={{0, -1}, {-1, 0}, {0, 1}, {1, 0}}; // \u9884\u5904\u7406\u4e0b\u4e00\u4e2a\u70b9\u4e0e\u5f53\u524d\u8282\u70b9\uff08\u623f\u95f4\uff09\u7684\u4f4d\u7f6e\u5173\u7cfb\uff08\u897f\u3001\u5317\u3001\u4e1c\u3001\u5357\uff09\nstruct node {int x, y;}; // \u8fd9\u91cc\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7ed3\u6784\u4f53\u8868\u793a\u4e00\u4e2a\u70b9\u7684\u5750\u6807\nint n, m, t, k;\n// \u4ee5\u4e0b\u6570\u7ec4\u542b\u4e49\u8bf7\u89c1\u4e0a\u9762\u7684\u601d\u8def\u548c\u4e3b\u8981\u8fc7\u7a0b\nint fa[MAXN][MAXN], num[MAXN*MAXN];\nbool b[5], w[MAXN][MAXN][5];\nbool vis[MAXN][MAXN];\nqueue<node> q; // \u8fd9\u91cc\u4f7f\u7528\u4e86\u4e00\u4e2aSTL\u961f\u5217\u4f5c\u4e3aBFS\u961f\u5217\nint main()\n{\n    scanf(\"%d%d\", &m, &n);\n    memset(w, false, sizeof w);\n    for (int i=1; i<=n; i++)\n        for (int j=1; j<=m; j++)\n        {\n            scanf(\"%d\", &t);\n            // \u5c06\u4e8c\u8fdb\u5236\u6570\u4e4b\u548c\u66b4\u529b\u5206\u89e3\n            // \u7136\u800c\u849f\u84bb\u5e76\u4e0d\u4f1a\u4e8c\u8fdb\u5236\u89e3\u6790\uff0c\u8bf7\u89c1\u697c\u4e0b\u9898\u89e3\n            while (t)\n            {\n                k=8; while (t<k) k>>=1;\n                t-=k; w[i][j][(int)log2(k)]=true;\n                // \u6ce8\u610f\u8fd9\u91cck=0, 1, 2, 3\u5206\u522b\u4ee3\u8868\u897f\u3001\u5317\u3001\u4e1c\u3001\u5357\u65b9\u5411\u6709\u5899\n            }\n        }\n    memset(vis, false, sizeof vis);\n    int cnt=0, maxk=0; \n    // bfs\u6c42\u8fde\u901a\u5757\n    for (int i=1; i<=n; i++)\n        for (int j=1; j<=m; j++) // \u904d\u5386\u6bcf\u4e2a\u8282\u70b9\n            if (!vis[i][j])\n            {\n                vis[i][j]=true; cnt++; int tmp=0;\n                q.push((node){i, j});\n                while (!q.empty())\n                {\n                    node u=q.front(); // \u53d6\u51fa\u961f\u5217\u7b2c\u4e00\u4e2a\u8282\u70b9\n                    fa[u.x][u.y]=cnt; tmp++; // \u5c06u\u6240\u5728\u7684\u8fde\u901a\u5757\u7684\u7f16\u53f7\u6807\u8bb0\u4e3acnt\uff0ctmp\u8bb0\u5f55\u7684\u662f\u5f53\u524d\u8054\u901a\u5feb\u6240\u5305\u542b\u5355\u4f4d\u7684\u6570\u91cf\n                    for (int k=0; k<4; k++) // \u904d\u53864\u4e2a\u65b9\u5411\n                        if (!w[u.x][u.y][k]) // \u5982\u679ck\u65b9\u5411\u6ca1\u6709\u5899\n                        {\n                            node v=(node){u.x+dir[k][0], u.y+dir[k][1]}; // v\u662fu\u7684k\u65b9\u5411\u7684\u76f8\u90bb\u8282\u70b9\n                            if (!vis[v.x][v.y]) vis[v.x][v.y]=true, q.push(v); // \u5982\u679cv\u6ca1\u6709\u8bbf\u95ee\u8fc7\uff0c\u5219\u8bbf\u95ee\u5b83\n                        }\n                    q.pop(); // \u8bb0\u5f97\u628a\u5df2\u7ecf\u7528\u8fc7\u7684\u7ed3\u70b9pop\u6389\n                }\n                num[cnt]=tmp; // \u7b2ccnt\u4e2a\u8fde\u901a\u5757\u6240\u5305\u542b\u7684\u5355\u4f4d\u6570\u91cf\u662ftmp\n                maxk=max(maxk, tmp); // \u66f4\u65b0maxk\n            }\n    int maxx=0, maxi, maxj, maxd; // maxi\uff0cmaxj\uff0cmaxd\u5206\u522b\u8868\u793a\u7b54\u6848\u7684\u5750\u6807\u548c\u5899\u7684\u65b9\u4f4d\n    for (int j=1; j<=m; j++) // \u9760\u897f\u4f18\u4e8e\u9760\u4e1c\n        for (int i=n; i>=1; i--) // \u9760\u5357\u4f18\u4e8e\u9760\u5317\n            for (int k=1; k<=2; k++) // \u5317\u5899\u4f18\u4e8e\u4e1c\u5899\n            {\n                int u=fa[i][j], v=fa[i+dir[k][0]][j+dir[k][1]]; // \u53d6\u51fa(i, j)\u548c\u5176k\u65b9\u5411\u7684\u76f8\u90bb\u8282\u70b9\u6240\u5728\u7684\u8fde\u901a\u5757\u7684\u7f16\u53f7\n                if (u!=v&&num[u]+num[v]>maxx) // \u6ce8\u610f\uff0c\u53ea\u6709u\u548cv\u4e0d\u5728\u540c\u4e00\u4e2a\u623f\u95f4\u5185\u624d\u80fd\u66f4\u65b0\u7b54\u6848\n                    maxx=num[u]+num[v], maxi=i, maxj=j, maxd=k;\n            }\n    printf(\"%d\\n%d\\n%d\\n%d %d %c\\n\", cnt, maxk, maxx, maxi, maxj, maxd==1?'N':'E'); // \u8f93\u51fa\u7b54\u6848\uff0cmaxd=1\uff0c2\u5206\u522b\u4ee3\u8868\u7b54\u6848\u5899\u662f(maxi, maxj)\u7684\u5317\u5899\u548c\u4e1c\u5899\n    return 0;\n}\n```",
        "postTime": 1515900269,
        "uid": 43064,
        "name": "\u6500\u5ca9\u9ad8\u624b",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "# **\u6b64\u65b9\u6cd5\u6781\u4e3a\u66b4\u529b\uff0c\u8bf7\u505a\u597d\u5fc3\u7406\u51c6\u5907**\n\n\u6211\u7528\u4e86\u4e2a\u6781\u4e3a\u66b4\u529b\u7684\u90bb\u63a5\u77e9\u9635\uff1abv[y1][x1][y2][x2]\uff0c\u6807\u8bb0\u4ece\u70b9\uff08x1,y1\uff09\u5230(x2,y2)\u4e4b\u95f4\u662f\u5426\u6709\u5899\u3002\u7136\u540e\u5269\u4e0b\u7684\u5c31\u548c\u6bd4\u8f83\u6b63\u5e38\u7684\u89e3\u6cd5\u4e00\u6837\u4e86\u3002\n\n\u5148\u7528\u4f4d\u8fd0\u7b97\u6784\u9020\u5899\uff0c\u7136\u540e\u679a\u4e3e\u6240\u6709\u6ca1\u8d70\u8fc7\u7684\u70b9\uff0c\u8ba9\u4ed6\u4eec\u4e3a\u8d77\u70b9\u4f7f\u52b2\u7684bfs\uff0c\u65e0\u6cd5\u518dbfs\u4e0b\u53bb\u540e\u5c31\u628a\u961f\u5217\u4e2d\u5b58\u7684\u6240\u6709\u70b9\u90fd\u6807\u4e0a\u7f16\u53f7\u548c\u8fde\u901a\u5757\u7684\u5927\u5c0f\uff0c\u8fd9\u6837\u5c31\u89e3\u51b3\u4e86\u5b50\u95ee\u9898\u2460\u2461\uff0c\u7136\u540e\u6211\u4eec\u81ea\u897f\u5411\u4e1c\uff0c\u81ea\u5357\u800c\u5317\uff08\u8fd9\u4e2a\u904d\u5386\u7684\u987a\u5e8f\u5f88\u91cd\u8981\uff01\uff09\u7684\u679a\u4e3e\u70b9\uff0c\u770b\u5b83\u7684\u5317\u8fb9\u6216\u4e1c\u8fb9\u662f\u5426\u6709\u5899\uff0c\u5982\u679c\u6709\uff0c\u770b\u5899\u4e24\u8fb9\u7684\u662f\u5426\u5c5e\u4e8e\u540c\u4e00\u4e2a\u8fde\u901a\u5757\uff08\u7f16\u53f7\u76f8\u540c\uff09\uff0c\u662f\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u7684\u8bdd\u5c31\u7b97\u63a8\u5899\u7684\u65b0\u5927\u5c0f\uff0c\u6700\u540e\u53d6\u4e00\u4e2a\u6700\u5148\u51fa\u73b0\u5e76\u4e14\u6700\u5927\u7684\u65b9\u6848\u5373\u53ef\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n    #include<iostream>\n    #include<cstdio>\n    using namespace std;\n    unsigned char bv[52][52][52][52];//\u5b58\u5899\u7684\u90bb\u63a5\u77e9\u9635\n    int bnumber[52][52];//\u6240\u5c5e\u8fde\u901a\u5757\u7684\u7f16\u53f7\n    int sizes[52][52];//\u6240\u5c5e\u8fde\u901a\u5757\u7684\u5927\u5c0f\n    int quex[2600];\n    int quey[2600];//\u624b\u5199\u7684\u961f\u5217\uff0c\u6700\u597d\u522b\u7528queue\n    unsigned char bvgrid[52][52];//\u6807\u8bb0\u70b9\u662f\u5426\u8d70\u8fc7\n    int lx[4]={1,-1,0,0};\n    int ly[4]={0,0,1,-1};//\u6bcf\u6b65\u79fb\u52a8\u7684\u504f\u79fb\n    int main(){\n        int width,height;\n        cin>>width>>height;\n        for(int y=1;y<=height;y++){\n            for(int x=1;x<=width;x++){\n                int a;\n                scanf(\"%d\",&a);\n                if(a&1){//\u897f\u9762\u6709\u5899\n                    bv[y][x][y][x-1]=bv[y][x-1][y][x]=1;\n                }\n                if(a&2){//\u5317\u9762\u6709\u5899\n                    bv[y][x][y-1][x]=bv[y-1][x][y][x]=1;\n                }\n                if(a&4){//\u4e1c\u9762\u6709\u5899\n                    bv[y][x][y][x+1]=bv[y][x+1][y][x]=1;\n                }\n                if(a&8){//\u5357\u9762\u6709\u5899\n                    bv[y][x][y+1][x]=bv[y+1][x][y][x]=1;\n                }\n            }\n        }\n        int gn=0;\n        int maxn=-123456789;\n        for(int yy=1;yy<=height;yy++){\n            for(int xx=1;xx<=width;xx++){\n                if(!bvgrid[yy][xx]){\n                    bvgrid[yy][xx]=1;\n                    int head=0;\n                    int tail=2;\n                    quex[1]=xx;\n                    quey[1]=yy;\n                    do{//bfs\n                        head++;\n                        for(int i=0;i<4;i++){\n                            int ix=quex[head]+lx[i];\n                            int iy=quey[head]+ly[i];\n                            if(ix>0&&ix<=width&&iy>0&&iy<=height){\n                                if(!bvgrid[iy][ix]){\n                                    if(!bv[quey[head]][quex[head]][iy][ix]){//\u6ca1\u6709\u5899\n                                        bvgrid[iy][ix]=1;\n                                        quex[tail]=ix;\n                                        quey[tail]=iy;\n                                        tail++;//\u5165\u961f\n                                    }\n                                }\n                            }\n                        }\n                    }while(head<tail);\n                    int bn=tail-1;//\u8fde\u901a\u5757\u5927\u5c0f\u5373\u4e3atail-1\n                    for(int i=1;i<=bn;i++){\n                        bnumber[quey[i]][quex[i]]=gn;\n                        sizes[quey[i]][quex[i]]=bn;\n```\n}//\u628a\u961f\u5217\u4e2d\u7684\u6240\u6709\u70b9\u6807\u4e0a\u6240\u5c5e\u8fde\u901a\u5757\u7f16\u53f7\u548c\u5927\u5c0f\n        \n```cpp\n                    maxn=max(maxn,bn);\n                    gn++;\n                }\n            }\n        }\n        cout<<gn<<endl<<maxn<<endl;\n        char fangxiang;\n        maxn=-123456789;\n        int bestx;\n        int besty;\n            for(int x=1;x<=width;x++){\n                for(int y=height;y>=1;y--){//\u4e00\u5b9a\u8981\u6309\u7167\u8fd9\u4e2a\u987a\u5e8f\uff01\u4e0d\u7136\u4f1aWA\uff01\n                if(bv[y][x][y-1][x]){\n                    if(bnumber[y][x]!=bnumber[y-1][x]){\n                    //\u5317\u9762\u6709\u5899\u4e14\u4e0d\u662f\u4e00\u4e2a\u8fde\u901a\u5757\n                        int news=sizes[y][x]+sizes[y-1][x];\n                        if(news>maxn){\n                            maxn=news;\n                            fangxiang='N';\n                            bestx=x;\n                            besty=y;\n                        }\n                    }\n                }\n                if(bv[y][x][y][x+1]){\n                    if(bnumber[y][x]!=bnumber[y][x+1]){\n                    //\u4e1c\u9762\u6709\u5899\u4e14\u4e0d\u662f\u4e00\u4e2a\u8fde\u901a\u5757\n                        int news=sizes[y][x]+sizes[y][x+1];\n                        if(news>maxn){\n                            maxn=news;\n                            fangxiang='E';\n                            bestx=x;\n                            besty=y;\n                        }\n                    }\n                }\n            }\n        }\n        printf(\"%d\\n%d %d %c\\n\",maxn,besty,bestx,fangxiang);\n        return(0);\n}\n```",
        "postTime": 1514192689,
        "uid": 56917,
        "name": "\u989c\u4f1f\u4e1a_C_Asm",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "## \u6b64\u9898\u7684\u601d\u8def\u5176\u5b9e\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff0c\u5bf9\u4e8e\u4e0a\u9762\u7684\u4e24\u4e2a\u8f93\u51fa\uff0c\u5176\u5b9e\u5c31\u662f\u8054\u901a\u5757\u7684\u77e5\u8bc6\uff0c\u4f46\u662f\u6b64\u9898\u52a0\u4e86\u4e00\u4e2a\u4e1c\u5357\u897f\u5317\u5899\u6765\u589e\u52a0\u96be\u5ea6\uff0c\u5176\u5b9e\u65e0\u8bba\u662f\u7528\u4f55\u79cd\u65b9\u6cd5\u6765\u6c42\u6bcf\u4e2a\u70b9\u7684\u4e1c\u5357\u897f\u5317\u5f3a\u90fd\u662f\u53ef\u4ee5\u7684\uff0c15\u4e2aelse if\u4e5f\u4e0d\u662f\u4e0d\u884c\u554a,\u800c\u6211\u5c31\u662f\u7528\u8fd9\u79cd\u6700zz\u7684\u65b9\u6cd5\u6c42\u5f97\uff0c\u4e0b\u9762\u6211\u7ed9\u51fa\u5bf9\u5e94\u8868\n\n> **1=W**\n> **2=N**\n> **3=WN**\n> **4=E**\n> **5=WE**\n> **6=NE**\n> **7=WNE**\n> **8=S**\n> **9=WS**\n> **10=NS**\n> **11=WNS**\n> **12=ES**\n> **13=WES**\n> **14=NES**\n> **15=WNES**\nW,E,N,S\u5206\u522b\u4e3a\u897f\u4e1c\u5317\u5357\u56db\u4e2a\u65b9\u5411\u6709\u5899\u3002\n\n\n## \u4ee3\u7801\u5982\u4e0b\uff0c\u8be6\u89e3\u5728\u4ee3\u7801\u65c1\u8fb9\n\n\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint n,m,con=1,k,M=-1,Ms,X,Y;\nint num[55][55],sum[]={0,1,2,4,8};\nint move_x[]={0,0,1,0,-1};\nint move_y[]={0,1,0,-1,0};\nint judge[55][55],ans[5000];\nchar L;\nstruct node\n{\n    bool N,S,W,E;\n    int x;\n    int y;\n}block[55][55],q[10000000];\nvoid bfs(int x,int y)\n{\n    int fr=1,tail=0;\n    q[1]=block[x][y];\n    judge[x][y]=con;\n    ans[con]++;\n    while(fr>tail)\n    {\n        node t=q[++tail];\n        for(int i=1;i<=4;i++)\n        {\n            int dx,dy;\n            dx=t.x+move_x[i];\n            dy=t.y+move_y[i];\n            if(i==1)\n            {\n                if(!t.S&&!block[dy][dx].N&&!judge[dy][dx])\n                {\n                    q[++fr]=block[dy][dx];\n                    judge[dy][dx]=con;\n                    ans[con]++;\n                }\n            }\n            else if(i==2)\n            {\n                if(!t.E&&!block[dy][dx].W&&!judge[dy][dx])\n                {\n                    q[++fr]=block[dy][dx];\n                    judge[dy][dx]=con;\n                    ans[con]++;\n                }\n            }\n            else if(i==3)\n            {\n                if(!t.N&&!block[dy][dx].S&&!judge[dy][dx])\n                {\n                    q[++fr]=block[dy][dx];\n                    judge[dy][dx]=con;\n                    ans[con]++;\n                }\n            }\n            else if(i==4)\n            {\n                if(!t.W&&!block[dy][dx].E&&!judge[dy][dx])\n                {\n                    q[++fr]=block[dy][dx];\n                    judge[dy][dx]=con;\n                    ans[con]++;\n                }\n            }\n        }\n    }\n    M=max(ans[con],M);\n    con++;return;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n        for(int j=1;j<=n;j++)\n        {\n            scanf(\"%d\",&num[i][j]);\n            switch(num[i][j])//\u5224\u65ad\u5899\u7684\u65b9\u5411\n            {\n                case 1:block[i][j].W=true;break;\n                case 2:block[i][j].N=true;break;\n                case 3:block[i][j].W=true,block[i][j].N=true;break;\n                case 4:block[i][j].E=true;break;\n                case 5:block[i][j].W=true,block[i][j].E=true;break;\n                case 6:block[i][j].N=true,block[i][j].E=true;break;\n                case 7:block[i][j].W=true,block[i][j].N=true,block[i][j].E=true;break;\n                case 8:block[i][j].S=true;break;\n                case 9:block[i][j].W=true,block[i][j].S=true;break;\n                case 10:block[i][j].N=true,block[i][j].S=true;break;\n                case 11:block[i][j].W=true,block[i][j].N=true,block[i][j].S=true;break;\n                case 12:block[i][j].E=true,block[i][j].S=true;break;\n                case 13:block[i][j].W=true,block[i][j].E=true,block[i][j].S=true;break;\n                case 14:block[i][j].N=true,block[i][j].E=true,block[i][j].S=true;break;\n                case 15:block[i][j].W=true,block[i][j].N=true,block[i][j].E=true,block[i][j].S=true;break;\n            }\n            block[i][j].x=j;\n            block[i][j].y=i;\n        }\n    for(int i=1;i<=m;i++)\n        for(int j=1;j<=n;j++)\n            if(!judge[i][j])\n                bfs(i,j);//\u6838\u5fc3\u4ee3\u78011\uff1a\u6c42\u89e3\u8054\u901a\u5757,\u7528\u4e00\u4e2ajudge\u6570\u7ec4\u6765\u5b58\u6bcf\u4e2a\u5757\u662f\u5426\u88ab\u67d3\u8fc7\u8272,ans\u6570\u7ec4\u5c31\u6765\u5b58\u6bcf\u4e2a\u989c\u8272\u67d3\u4e86\u591a\u5c11\u4e2a\u5757\uff0ccon\u5219\u4ee3\u8868\u6709\u591a\u5c11\u79cd\u989c\u8272\uff0c\u4e5f\u5c31\u662f\u8bf4\u6709\u591a\u5c11\u4e2a\u623f\u95f4\n    for(int i=1;i<=m;i++)//\u4e0b\u9762\u662f\u6253\u901a\u5899\u7684\u4ee3\u7801\n    {\n        for(int j=1;j<=n;j++)\n            for(int k=1;k<=4;k++)\n            {\n                int dx,dy,pp=0,S;\n                dx=j+move_x[k];\n                dy=i+move_y[k];//\u6a21\u62df\u6253\u901a\u54ea\u5835\u5899\n                if(judge[dy][dx]!=judge[i][j])pp=ans[judge[dy][dx]];//\u5224\u65ad\u662f\u4e0d\u662f\u6709\u5899\u53ef\u4ee5\u6253\u901a\n                S=pp+ans[judge[i][j]];\n                if(S>Ms)\n                {\n                    if(k%2==0)\n                    {\n                        L='E';X=j;Y=i;Ms=S;\n                    }\n                    else if(k%2==1)\n                    {\n                        L='N';X=j;Y=i;Ms=S;\n                    }\n                }\n                else if(S==Ms)\n                {\n                    if(k%2==0)\n                    {\n                        if(j<X)\n                        {\n                            L='E';X=j;Y=i;\n                        }\n                        else if(j==X&&i>Y)\n                        {\n                            L='E';X=j;Y=i;\n                        }\n                    }\n                    else if(k%2==1)\n                    {\n                        if(j<X)\n                        {\n                            L='N';X=j;Y=i;\n                        }\n                        else if(j==X&&i>Y)\n                        {\n                            L='N';X=j;Y=i;\n                        }\n                    }\n                }\n            }\n    }\n    if(block[Y][X].N&&block[Y][X].E&&ans[judge[Y-1][X]]==ans[judge[Y][X+1]])L='N';//\u7279\u5224\uff0c\u88ab\u5751\u4e86\u597d\u51e0\u6b21\u3002\u3002\u3002\n    printf(\"%d\\n%d\\n%d\\n%d %d %c\",con-1,M,Ms,Y,X,L);\n    return 0;\n}\n```\n> \u5173\u4e8e\u8054\u901a\u5757\u7684\u77e5\u8bc6\u4e0d\u61c2\u5f97\u7ae5\u978b\u53ef\u4ee5\u53bb\u770b\u4e00\u4e0b01\u8ff7\u5bab\n> \u81ea\u5e26\u4f20\u9001\u95e8 [01\u8ff7\u5bab](https://www.luogu.org/problem/show?pid=1141)\n",
        "postTime": 1507466034,
        "uid": 50971,
        "name": "ViXbob",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u4e0d\u96be\n\n\u4e0d\u77e5\u9053\u5927\u5bb6\u5bf9\u5904\u7406\u5899\u6709\u6ca1\u6709\u597d\u65b9\u6cd5\n\n\u6211\u5728\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e2a\n\n\n\u9898\u76ee\u8bf4\u5899\u7684\u53f7\u7801\u662f 1 2 4 8\n\n\u8fd9\u56db\u4e2a\u6570\u663e\u7136\u90fd\u662f2\u7684n\u6b21\u5e42\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u6027\u8d28 \u5c31\u662f 1 2 4 8\u56db\u4e2a\u6570\u53ef\u4ee5\u7ec4\u62101-15\u4e4b\u5185\u7684\u4efb\u610f\u4e00\u4e2a\u6570\n\n\u4e14\u6bcf\u4e2a\u6570\u53ea\u6709\u4e00\u79cd\u7ec4\u6210\u65b9\u5f0f\n\n15\u5c31\u662f1+2+4+8\n\n14\u5c31\u662f2+4+8\n\n13\u5c31\u662f1+4+8\n\n12\u5c31\u662f4+8\n\n\u3002\u3002\u3002\u3002\u3002\n\n\u6240\u4ee5 \u6bcf\u4e00\u4e2a\u6570\u5b57 \u4ee3\u8868\u4e86\u552f\u4e00\u7684\u4e00\u79cd\u60c5\u51b5\n\n\u6211\u4eec\u5c31\u53ef\u4ee5 \u5224\u65ad\u4e86\n\n\u5982\u4e0b\n\nint x[4]={0,1,0,-1};\n\nint y[4]={1,0,-1,0}; //\u4ee3\u8868\u56db\u4e2a\u641c\u7d22\u65b9\u5411 \n\n------------------------------------------------------\n\n\n\n```cpp\ninline void cal(int now,int p) {\n    if(p>=8) d[now][1]=1,p-=8;else d[now][1]=0;\n    if(p>=4) d[now][0]=1,p-=4;else d[now][0]=0;\n    if(p>=2) d[now][3]=1,p-=2;else d[now][3]=0;\n    if(p>=1) d[now][2]=1,p-=1;else d[now][2]=0;//\u5bf9\u4e8e\u4e00\u4e2a\u70b9 \u6709\u51e0\u4e2a\u641c\u7d22\u65b9\u5411\n}\n```\n\u4e0b\u9762\u662f\u6211\u7684\u4ee3\u7801\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <cstring>\n#include <algorithm>\nconst int MAXN=600;\nconst int MAXM=4000;\nint n,m,id,ans,mx;\nint f[MAXN][MAXN],sum[MAXM],d[MAXM][4],belong[MAXM];\nbool vis[MAXN][MAXN];\nint x[4]={0,1,0,-1};\nint y[4]={1,0,-1,0};\nstruct node {\n    int to;\n    int next;\n};\ninline void read(int&x) {\n    register char c=getchar();\n    for(x=0;!isdigit(c);c=getchar());\n    for(;isdigit(c);x=x*10+c-48,c=getchar());\n}\ninline int max(int a,int b) {return a<b?b:a;}\ninline void cal(int now,int p) {\n    if(p>=8) d[now][1]=1,p-=8;else d[now][1]=0;\n    if(p>=4) d[now][0]=1,p-=4;else d[now][0]=0;\n    if(p>=2) d[now][3]=1,p-=2;else d[now][3]=0;\n    if(p>=1) d[now][2]=1,p-=1;else d[now][2]=0;\n}\nvoid DFS(int the_x,int the_y) {\n    int now=(the_x-1)*m+the_y;\n    cal(now,f[the_x][the_y]);\n    vis[the_x][the_y]=true;\n    belong[now]=id;\n    ++sum[id];\n    mx=max(sum[id],mx);\n    for(int i=0;i<4;++i) {\n        int next_x=the_x+x[i];\n        int next_y=the_y+y[i];\n        if(next_x<1||next_y<1||next_x>n||next_y>m) continue;\n        if(vis[next_x][next_y]||d[now][i]) continue;\n        DFS(next_x,next_y);\n    }\n}\nint hh() {\n    read(m);read(n);\n    for(int i=1;i<=n;++i) \n      for(int j=1;j<=m;++j)\n        read(f[i][j]);\n    for(int i=1;i<=n;++i)\n      for(int j=1;j<=m;++j) \n          if(!vis[i][j]) ++id,DFS(i,j);\n    printf(\"%d\\n%d\\n\",id,mx);\n    ans=-1;char p;\n    int b_x,b_y;\n    for(int j=1;j<=m;++j)\n     for(int i=n;i>=1;--i)  {\n         if(d[(i-1)*m+j][3]&&i!=1) {\n            if(belong[(i-1)*m+j]!=belong[(i-2)*m+j])\n              if(sum[belong[(i-1)*m+j]]+sum[belong[(i-2)*m+j]]>ans) \n                b_x=i,b_y=j,ans=sum[belong[(i-1)*m+j]]+sum[belong[(i-2)*m+j]],p='N';\n        }\n         if(d[(i-1)*m+j][0]&&j!=m) {\n              if(belong[(i-1)*m+j]!=belong[(i-1)*m+j+1])\n                if(sum[belong[(i-1)*m+j]]+sum[belong[(i-1)*m+j+1]]>ans)\n                  b_x=i,b_y=j,ans=sum[belong[(i-1)*m+j]]+sum[belong[(i-1)*m+j+1]],p='E';\n        }\n      }\n    printf(\"%d\\n%d %d %c\\n\",ans,b_x,b_y,p);\n    return 0;\n} \nint sb=hh();\nint main(int argc,char**argv){;}\n```",
        "postTime": 1504941563,
        "uid": 18806,
        "name": "whistle998",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "\u55ef\u55ef\u3001\u8fd9\u9053\u9898\u5f88\u6c34\u7684\n\n\u4e0d\u8fc7\u5927\u5bb6\u7684\u9898\u89e3\u90fd\u82b1\u4e86\u5927\u7bc7\u5e45\u53bb\u89e3\u6790\u5899\u58c1\u7684\u5b58\u5728\uff08\u81f3\u5c11\u54b1\u770b\u5230\u7684\uff09\n\n\u5b8c\u5168\u6ca1\u6709\u5fc5\u898115\u4e2aif-else\u561b=-=\n\n\u8bb2\u771f\u3001\n\n```cpp\n8 = 0b1000\n4 = 0b0100\n2 = 0b0010\n1 = 0b0001\n```\n\u4e8e\u662f\u539f\u6765\u7684\u8d85\u7ea7\u96be\u53d7\u7684if-else\u5c31\u53d8\u6210\u4e86\u8fd9\u6837\u7684\u4ee3\u7801\uff1a\n```cpp\nint s = 0b1010;//s: 1 0 1 0 \nif(s & 1)      //         ^\n    goWest();  //         off!\ns >>= 1;       //s: 1 0 1 # \nif(s & 1)      //       ^\n    goNorth(); //       on!\ns >>= 1;       //s: 1 0 # #\nif(s & 1)      //     ^ \n    goEast();  //     off!\ns >>= 1;       //s: 1 # # #\nif(s & 1)      //   ^\n    goSouth(); //   on!\n```\n\u7136\u540e\u522b\u7684\u5927\u5bb6\u90fd\u8bb2\u6e05\u695a\u4e86\u6240\u4ee5\u5c31\u8fd9\u6837\u4e86\u55b5\n\n\u5566\u5566\u5566~\n",
        "postTime": 1504011924,
        "uid": 53890,
        "name": "qa24601",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u51fa\u4e00\u4e2a n\\*m \u77e9\u9635\uff0c\u77e9\u9635\u4ee3\u8868\u4e86\u4e00\u4e2a\u5927\u623f\u95f4\uff0c\u7136\u540e\u77e9\u9635\u7684\u6bcf\u4e2a\u5143\u7d20\u4ee3\u8868\u4e86\u8be5\u6a21\u5757\u7684\u4fe1\u606f\uff0c\u7528 1 \u8868\u793a WEST \u65b9\u5411\u662f\u5899\u58c1\uff0c2 \u8868\u793a NORTH \u65b9\u5411\u662f\u5899\uff0c 4 \u8868\u793a EAST \u65b9\u5411\u662f\u5899\uff0c 8 \u8868\u793a SOUTH \u65b9\u5411\u662f\u5899\uff0c\u9898\u76ee\u6240\u7ed9\u77e9\u9635\u7684\u5143\u7d20\u503c\u5c31\u662f\u8be5\u6a21\u5757\u6240\u6709\u5899\u58c1\u6570\u503c\u603b\u548c\uff0c\u73b0\u5728\u8981\u6c42\u7edf\u8ba1\u8fd9\u4e2a\u5927\u623f\u95f4\u88ab\u5206\u6210\u4e86\u51e0\u4e2a\u533a\u57df\uff0c\u5176\u4e2d\u6700\u5927\u533a\u57df\u5305\u542b\u51e0\u4e2a\u6a21\u5757\u3002\n\n \n\u663e\u7136\u7684\uff0cBFS\uff0cDFS\u53ef\u89e3\uff0c\u6211\u7528\u7684\u662f\u5e76\u67e5\u96c6\uff08= =\uff01\u4e0d\u60f3\u5199\u641c\u7d22\uff0c\u5bf9\u641c\u7d22\u7684\u4ee3\u7801\u6709\u9634\u5f71\u2026\u2026\uff09\u3002\u5176\u5b9e\u8fd9\u4e0d\u662f\u91cd\u70b9\uff0c\u5173\u952e\u662f\u600e\u4e48\u628a\u6570\u5b57\u77e9\u9635\u8f6c\u5316\u6210\u6211\u4eec\u60f3\u8981\u7684\u56fe\u5f62\u77e9\u9635\uff0c\u5c31\u662f\u4ece\u4e00\u4e2a\u6a21\u5757\u6240\u6709\u5899\u58c1\u6570\u503c\u603b\u548c\u770b\u51fa\u8fd9\u4e2a\u6a21\u5757\u90fd\u6709\u54ea\u51e0\u9762\u5899\uff0c\u8fd9\u662f\u8fd9\u9053\u9898\u7684\u4eae\u70b9\n\n \n\u672c\u4eba\u7528\u7684\u5e94\u8be5\u662f\u6700\u7b28\u7684\u65b9\u6cd5\u4e86\uff0c\u76f4\u63a5\u679a\u4e3e\u6253\u8868\u6240\u6709\u53ef\u80fd\u2026\u2026\u5c31 0 ~ 15 \u561b\uff0c\u4e5f\u4e0d\u591a\u54c8\u2026\u2026\n\n \n\u770b\u4e86\u795e\u725b\u7684\u62a5\u544a\uff0c\u53d1\u73b0\uff0c\u7528\u4f4d\u8fd0\u7b97\u7684\u8bdd\u4f1a\u98ce\u9a9a\u5f88\u591a\u2026\u2026\n\n \n1 \u76842\u8fdb\u5236 0001,2 \u7684\u662f 0010\uff0c4 \u7684\u662f 0100\uff0c8 \u7684\u662f 1000\uff0c\u4f8b\u5982 11 \u53d62\u8fdb\u5236 1011\uff0c\u53ea\u6709 4 \u548c 11 \u53d6 & \u8fd0\u7b97\u662f 0 \uff0c\u5373\u8be5\u6a21\u5757\u5728 4 \u65b9\u5411\uff08\u4e5f\u5c31\u662f EAST \u65b9\u5411\uff09\u662f\u901a\u7684\u3002\n\n\u4ee3\u7801\uff1a\n\n        \n        \n        \n```cpp\n#include<stdio.h>\n#include<string.h>\n#define M 55\nint father[M*M],n,m;\nint findx(int x)\n{\n    if(father[x]!=x)\n        father[x]=findx(father[x]);\n    return father[x];\n}\nvoid merge(int a,int b)\n{\n    int x,y;\n    x=findx(a);\n    y=findx(b);\n    if(x!=y)father[x]=y;\n    //father[a]=findx(a);\n    //father[b]=findx(b);\n}\nvoid fun(int a,int i,int j)\n{\n    if(a==0){\n        merge(m*(i-1)+j,m*(i-1)+j+1);\n        merge(m*(i-1)+j,m*(i-1)+j-1);\n        merge(m*(i-1)+j,m*(i-2)+j);\n        merge(m*(i-1)+j,m*i+j);\n    }\n    else if(a==1){\n        merge(m*(i-1)+j,m*(i-1)+j+1);\n        merge(m*(i-1)+j,m*(i-2)+j);\n        merge(m*(i-1)+j,m*i+j);\n    }\n    else if(a==2){\n        merge(m*(i-1)+j,m*(i-1)+j+1);\n        merge(m*(i-1)+j,m*(i-1)+j-1);\n        merge(m*(i-1)+j,m*i+j);\n    }\n    else if(a==3){\n        merge(m*(i-1)+j,m*(i-1)+j+1);\n        merge(m*(i-1)+j,m*i+j);\n    }\n    else if(a==4){\n        merge(m*(i-1)+j,m*(i-1)+j-1);\n        merge(m*(i-1)+j,m*(i-2)+j);\n        merge(m*(i-1)+j,m*i+j);\n    }\n    else if(a==5){\n        merge(m*(i-1)+j,m*(i-2)+j);\n        merge(m*(i-1)+j,m*i+j);\n    }\n    else if(a==6){\n        merge(m*(i-1)+j,m*(i-1)+j-1);\n        merge(m*(i-1)+j,m*i+j);\n    }\n    else if(a==7) merge(m*(i-1)+j,m*i+j);\n    else if(a==8){\n        merge(m*(i-1)+j,m*(i-1)+j+1);\n        merge(m*(i-1)+j,m*(i-1)+j-1);\n        merge(m*(i-1)+j,m*(i-2)+j);\n    }\n    else if(a==9){\n        merge(m*(i-1)+j,m*(i-2)+j);\n        merge(m*(i-1)+j,m*(i-1)+j+1);\n    }\n    else if(a==10){\n        merge(m*(i-1)+j,m*(i-1)+j-1);\n        merge(m*(i-1)+j,m*(i-1)+j+1);\n    }\n    else if(a==11) merge(m*(i-1)+j,m*(i-1)+j+1);\n    else if(a==12){\n        merge(m*(i-1)+j,m*(i-1)+j-1);\n        merge(m*(i-1)+j,m*(i-2)+j);\n    }\n    else if(a==13) merge(m*(i-1)+j,m*(i-2)+j);\n    else if(a==14) merge(m*(i-1)+j,m*(i-1)+j-1);\n}\nvoid check()\n{\n    int i,cnt,time[M*M];\n    memset(time,0,sizeof(time));\n    for(cnt=0,i=1;i<=n*m;i++)\n    {\n        time[father[i]]++;\n        if(father[i]==i)\n            cnt++;\n    }\n    int max=0;\n    for(i=1;i<=n*m;i++)\n        if(time[i]>max)max=time[i];\n        printf(\"%d/n%d/n\",cnt,max);\n}\nint main()\n{\n    int i,j,a;\n    while(~scanf(\"%d%d\",&n,&m))\n    {\n        for(i=1;i<=n;i++)\n        {\n            for(j=1;j<=m;j++)\n                father[m*(i-1)+j]=m*(i-1)+j;\n        }\n        for(i=1;i<=n;i++)\n        {\n            for(j=1;j<=m;j++)\n            {\n                scanf(\"%d\",&a);\n                fun(a,i,j);\n            }\n        }\n        for(i=1;i<=n;i++)\n        {\n            for(j=1;j<=m;j++)\n                father[m*(i-1)+j]=findx(m*(i-1)+j);\n        }\n        check();\n    }\n    return 0;\n}\n```",
        "postTime": 1502762632,
        "uid": 50938,
        "name": "\u5feb\u4e50\u8239\u957f",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "\u770b\u9898\u89e3\u6ca1\u6709\u65b0\u65b9\u6cd5\u6765\u53d1\u4e00\u7bc7\u9898\u89e3\u3002\n\n\u5904\u7406\u5730\u56fe\u7684\u65f6\u5019\u53ef\u4ee5\u5c06\u539f\u5730\u56fe\u8bbe\u7f6e\u4e3a\u4e24\u500d\uff0c\u66f4\u52a0\u597d\u5904\u7406\n\n\u4ee3\u7801\u5185\u6709\u8be6\u89e3\n\n\u76f4\u63a5\u4e0a\u4ee3\u7801C++\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#define Size 500\nusing namespace std;\nint read(){\n    int sum=0,fg=1;char c=getchar();\n    while(!isdigit(c)){if(c=='-')fg=-1;c=getchar();}\n    while(isdigit(c)){sum=sum*10+c-'0';c=getchar();}\n    return sum*fg;\n}\nint n,m,N,M;//\u5c06\u5730\u56fe\u53d8\u4e3a\u4e24\u500d \nint map[Size][Size];//0\u4e3a\u623f\u95f4\uff0c1\u4e3a\u623f\u95f4\u8fc7\u9053\uff0c2\u4e3a\u5899 \nstruct node1{\n    int count,belong;//count\u4e3a\u623f\u95f4\u9762\u79ef\u5927\u5c0f\uff0cbelong\u4e3a\u8fde\u901a\u5757\u7684\u7f16\u53f7\uff08\u5c06\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u6807\u8bb0\uff09 \n}Map[Size][Size];\nstruct node2{\n    int x,y,direct,val;//direct\u4e3a\u5899\u7684\u65b9\u5411\uff0cval\u4e3a\u623f\u95f4\u9762\u79ef \n}Wall[1000010];\nint num;\nbool p1[Size][Size],p2[Size][Size];\nint d[4][2]={{1,0},{-1,0},{0,1},{0,-1}};\nvoid print(int type){//\u8c03\u8bd5\u4fe1\u606f \n    if(type==0)\n        for(int i=1;i<=N;i++,puts(\"\"))\n            for(int j=1;j<=M;j++)\n                printf(\"%3d \",p1[i][j]);\n    else if(type==1)\n        for(int i=1;i<=N;i++,puts(\"\"))\n            for(int j=1;j<=M;j++)\n                printf(\"%3d \",p2[i][j]);\n    else if(type==2)\n        for(int i=1;i<=N;i++,puts(\"\"))\n            for(int j=1;j<=M;j++)\n                printf(\"%3d \",map[i][j]);\n    else if(type==3)\n        for(int i=1;i<=N;i++,puts(\"\"))\n            for(int j=1;j<=M;j++)\n                printf(\"%3d \",Map[i][j].count);\n    else if(type==4)\n        for(int i=1;i<=N;i++,puts(\"\"))\n            for(int j=1;j<=M;j++)\n                printf(\"%3d \",Map[i][j].belong);\n    puts(\"\");\n}\nint MAP(int x,int y,int w){//\u5efa\u7acb\u5730\u56fe\uff0c\u5224\u65ad\u5899\u7684\u65b9\u5411 \n    if(w>=8){w-=8;map[x<<1|1][y<<1]=2;}\n    else map[x<<1|1][y<<1]=1;\n    if(w>=4){w-=4;map[x<<1][y<<1|1]=2;}\n    else map[x<<1][y<<1|1]=1;\n    if(w>=2){w-=2;map[(x<<1)-1][y<<1]=2;}\n    else map[(x<<1)-1][y<<1]=1;\n    if(w>=1){w-=1;map[x<<1][(y<<1)-1]=2;}\n    else map[x<<1][(y<<1)-1]=1;\n}\nvoid init(){//\u9884\u5904\u7406 \n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=M;j++)\n            map[i<<1|1][j]=1;//\u5c06\u623f\u95f4\u8fc7\u9053\u90fd\u8bbe\u4e3a1 \n    for(int i=1;i<=m;i++)\n        for(int j=1;j<=N;j++)\n            if(map[j][i<<1|1])map[j][i<<1|1]=2;//\u7279\u6b8a\u5904\u7406 \u5c06\u5df2\u6709\u8fc7\u9053\u8bbe\u4e3a\u5899 \n            else map[j][i<<1|1]=1;\n    for(int i=1;i<=N;i++)\n        map[i][1]=map[i][M]=2;//\u5904\u7406\u8fb9\u754c\u5730\u56fe \n    for(int i=1;i<=M;i++)\n        map[1][i]=map[N][i]=2;\n}\nint dfs1(int x,int y){//\u6c42\u623f\u95f4\u9762\u79ef\u5927\u5c0f \n    int ans=0;\n    if(!map[x][y])ans++;\n    p1[x][y]=1;\n    for(int i=0;i<4;i++){\n        int x0=x+d[i][0],y0=y+d[i][1];\n        if(map[x0][y0]==2 || p1[x0][y0])continue;\n        ans+=dfs1(x0,y0);\n    }\n    return ans;\n}\nvoid dfs2(int x,int y,int val,int belong){//\u6309\u7167\u7b2c\u4e00\u6b21dfs\u7684\u8def\u5f84\u641c\uff0c\u5c06\u623f\u95f4\u9762\u79ef\u5927\u5c0f\u548c\u5c5e\u4e8e\u54ea\u4e2a\u8fde\u901a\u5757\u51fa\u5165\u5730\u56fe\u4e2d \n    p2[x][y]=1;\n    Map[x][y].count=val;\n    Map[x][y].belong=belong;\n    for(int i=0;i<4;i++){\n        int x0=x+d[i][0],y0=y+d[i][1];\n        if(!p1[x0][y0] || p2[x0][y0])continue;\n        dfs2(x0,y0,val,belong);\n    }\n}\nbool cmp(node2 a,node2 b){return a.val==b.val?a.y==b.y?a.x>b.x:a.y<b.y:a.val>b.val;}//\u8f93\u51fa\u6392\u5e8f \nint main(){\n    m=read(),n=read();\n    M=m<<1|1,N=n<<1|1;\n    init();\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=m;j++){\n            MAP(i,j,read());\n        }\n    }\n    //print(2);\n    int MAX_room=-1,sum=0;\n    for(int i=1;i<=N;i++){\n        for(int j=1;j<=M;j++){\n            if(map[i][j]!=2 && p1[i][j]!=1){\n                sum++;//\u8fde\u901a\u5757\u4e2a\u6570 \n                int ans=dfs1(i,j);//\u623f\u95f4\u9762\u79ef\u5927\u5c0f \n                MAX_room=max(MAX_room,ans);\n                dfs2(i,j,ans,sum);//\u5c06\u5c5e\u4e8e\u54ea\u4e2a\u8fde\u901a\u5757\u7684\u503c\u548c\u623f\u95f4\u9762\u79ef\u5927\u5c0f\u5b58\u5165\u5730\u56fe\u4e2d \n            }\n        }\n    }\n    //print(0);\n    //print(1);\n    for(int i=1;i<=N;i++){\n        for(int j=1;j<=M;j++){\n            if(map[i][j]==2){\n                if(Map[i-1][j].belong!=Map[i+1][j].belong){//\u4e0d\u5c5e\u4e8e\u540c\u4e00\u4e2a\u8fde\u901a\u5757 \n                    int tmp=Map[i-1][j].count+Map[i+1][j].count;//\u628a\u4e0a\u4e0b\u65b9\u5411\u7684\u5899\u6253\u901a \n                    Wall[++num].direct=1;//\u65b9\u5411\u5411\u5317 \n                    Wall[num].x=i;Wall[num].y=j;\n                    Wall[num].val=tmp;\n                }\n                if(Map[i][j-1].belong!=Map[i][j+1].belong){\n                    int tmp=Map[i][j-1].count+Map[i][j+1].count;//\u628a\u5de6\u53f3\u65b9\u5411\u7684\u5899\u6253\u901a\n                    Wall[++num].direct=2;//\u65b9\u5411\u5411\u4e1c \n                    Wall[num].x=i;Wall[num].y=j;\n                    Wall[num].val=tmp;\n                }\n            }\n        }\n    }\n    sort(Wall+1,Wall+num+1,cmp);\n    //print(3);\n    //print(4);\n    int x=Wall[1].x;\n    int y=Wall[1].y;\n    int wall=Wall[1].direct;\n    int MAX=Wall[1].val;\n    printf(\"%d\\n%d\\n%d\\n\",sum,MAX_room,MAX);\n    if(wall==1)x++;//\u7279\u6b8a\u5904\u7406 \n    if(wall==2)y--;\n    printf(\"%d %d %c\\n\",x>>1,y>>1,wall==1?'N':'E');\n    return 0;\n}\n```",
        "postTime": 1486345619,
        "uid": 19623,
        "name": "Jason_Yvan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "\u672c\u9898\u7528\u7684\u5e7f\u641c\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u683c\u5b50\uff0c\u5b58\u4e0b\u5b83\u76844\u5835\u5899\uff080/1\u8868\u793a\uff09\uff1b\n\n\u5bf9\u6bcf\u4e2a\u8054\u901a\u5757\u8fdb\u884c\u5e7f\u641c\uff08\u7f16\u53f7\uff1aid\uff0c\u8bb0\u5927\u5c0f\uff1abig\uff0c\u987a\u4fbf\u627e\u51fa\u6700\u5927\u623f\u95f4\u5927\u5c0f\uff1aans . s[0]\uff09\n\n\u6700\u540e\u679a\u4e3e\u6bcf\u4e00\u5835\u5899\uff0c\u66f4\u65b0\u7b54\u6848\uff1b\n\n       \n\n\n\n\n    \n            \n\n    \n    \n    \n            \n                \n                \n                    \n                    \n    \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nbool p[51][51];\nint cnt,big[2501],d[4][2]={{1,0},{0,1},{0,-1},{-1,0}},n,m;\nstruct node{\n    int wall[4],id;\n}map[51][51];\nstruct n{\n    int x,y;\n}q[2501];\nstruct a{\n    int s[2],x,y;\n    char w;\n}ans;\ninline void bfs(int x,int y){//\u5e7f\u641c\n    p[x][y]=1;\n    map[x][y].id=++cnt;\n    big[cnt]++;\n    q[1].x=x;\n    q[1].y=y;\n    int h=1,f=0;\n    while(f<h){\n        f++;\n        for(int i=0;i<4;i++){//\u56db\u4e2a\u65b9\u5411\n            int x1=q[f].x+d[i][0];\n            int y1=q[f].y+d[i][1];\n            if(!x1 || !y1 || x1>n || y1>m) continue;\n            if(!p[x1][y1]){         //\u907f\u514d\u91cd\u590d\u641c\u7d22\uff0c\u6b7b\u5faa\u73af\n                if(d[i][0]==0){       //\u6a2a\u7740\u52a8\n                    if(!map[q[f].x][q[f].y].wall[d[i][1]+2]){      //\u53ef\u81ea\u5df1\u63a8\u4e00\u4e0b\uff1a\u5224\u65ad\u4e24\u683c\u4e4b\u95f4\u65e0\u5899\n                        p[x1][y1]=1;\n                        q[++h].x=x1;\n                        q[h].y=y1;       //\u5165\u961f\n                        map[x1][y1].id=cnt;      //\u8bb0\u7f16\u53f7\n                        big[cnt]++;        //\u66f4\u65b0\u5927\u5c0f\n                    }\n                }\n                else         //\u540c\u4e0a\u3001\u7ad6\u7740\u52a8\n                    if(!map[q[f].x][q[f].y].wall[d[i][0]+1]){\n                        p[x1][y1]=1;\n                        q[++h].x=x1;\n                        q[h].y=y1;\n                        map[x1][y1].id=cnt;\n                        big[cnt]++;\n                    }\n            }\n        }\n    }\n    ans.s[0]=max(ans.s[0],big[cnt]);       //\u66f4\u65b0\u6700\u5927\u623f\u95f4\u5927\u5c0f\n}\nint main(){\n    int i,j,k;\n    scanf(\"%d%d\",&m,&n);\n    for(i=1;i<=n;i++)\n        for(j=1;j<=m;j++){\n            scanf(\"%d\",&k);\n            if(k>=8){\n                k-=8;\n                map[i][j].wall[2]=1;\n            }\n            if(k>=4){\n                k-=4;\n                map[i][j].wall[3]=1;\n            }\n            if(k>=2){\n                k-=2;\n                map[i][j].wall[0]=1;\n            }\n            if(k) map[i][j].wall[1]=1;         //\u5bf9\u6bcf\u4e2a\u683c\u5b50\u8bb0\u5899\uff08\u5317 0  \u897f 1  \u5357 2 \u4e1c 3\uff09\n        }\n    for(i=1;i<=n;i++)\n        for(j=1;j<=m;j++){\n            if(!p[i][j]) bfs(i,j);         //\u5e7f\u641c\u6bcf\u4e2a\u8054\u901a\u5757\n        }\n    for(i=1;i<=n;i++)\n        for(j=1;j<=m;j++){\n            for(int k=0;k<4;k++){\n                int x1=i+d[k][0];\n                int y1=j+d[k][1];\n                if(x1>n || y1>m || x1<i || y1<j) continue;          //\u52a0\u4e86\u526a\u679d\uff1a\u9632\u6b62\u91cd\u590d\u641c\n                int d1=map[i][j].id,d2=map[x1][y1].id;\n                if(d1==d2) continue;         //\u540c\u4e00\u4e2a\u623f\u95f4\u4e2d\u5c31\u8df3\u8fc7\n                if(big[d1]+big[d2]>ans.s[1]){          //\u6bd4\u7b54\u6848\u4f18\uff0c\u76f4\u63a5\u66f4\u65b0\n                    ans.s[1]=big[d1]+big[d2];\n                    if(d[k][0]==0){\n                        ans.x=i;\n                        ans.y=min(j,y1);           //\u53d6\u897f\u683c\u5b50\u7684\u4e1c\u5899\n                        ans.w='E';\n                    }\n                    else{\n                        ans.x=max(i,x1);           //\u53d6\u5357\u683c\u5b50\u7684\u5317\u5899\n                        ans.y=j;\n                        ans.w='N';\n                    }\n                }\n                else if(big[d1]+big[d2]==ans.s[1]){          //\u82e5\u4e0e\u7b54\u6848\u76f8\u7b49\n                    int xx,yy;           //\u5148\u5c06\u4fe1\u606f\u8bb0\u4e0b\uff0c\u4e0e\u7b54\u6848\u8fdb\u884c\u6bd4\u8f83\n                    char ww;\n                    if(d[k][0]==0){\n                        xx=i;\n                        yy=min(j,y1);\n                        ww='E';\n                    }\n                    else{\n                        xx=max(i,x1);\n                        yy=j;\n                        ww='N';\n                    }\n                    if(yy>ans.y) continue;\n                    if(yy<ans.y){         //\u66f4\u897f\n                        ans.x=xx;\n                        ans.y=yy;\n                        ans.w=ww;\n                    }\n                    else{\n                        if(xx<ans.x) continue;\n                        if(xx>ans.x){            //\u66f4\u4e1c\n                            ans.x=xx;\n                            ans.w=ww;\n                        }\n                        else if(ww=='N') ans.w='N';             //\u540c\u4e00\u4e2a\u683c\u5b50\u5317\u5899\u4f18\n                    }\n                }\n            }\n        }\n    printf(\"%d\\n%d\\n%d\\n%d %d %c\",cnt,ans.s[0],ans.s[1],ans.x,ans.y,ans.w);       //\u8f93\u51fa\u7b54\u6848\uff0c AC\n    return 0;\n}\n```",
        "postTime": 1486282730,
        "uid": 19683,
        "name": "Till_Gloam",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    },
    {
        "content": "\u641c\u7d22\u9898\n\n\u56db\u4e2a\u95ee\u9898\uff0c\u4e00\u4e8c\u4e2a\u5efa\u56fe\u540e\u586b\u5145\u989c\u8272\uff08\u5176\u5b9e\u4e5f\u5c31\u662f\u586b\u6570\u5b57\uff09\u53ef\u4ee5\u89e3\u51b3\n\n\u4e09\u56db\u95ee\u9700\u8981\u518d\u641c\u4e00\u6b21\uff0c\u4e24\u5c42\u5faa\u73af\uff0c\u8bb0\u4f4f\u5148\u5faa\u73afj\u518d\u5faa\u73afi\uff0c\u56e0\u4e3a\u9898\u76ee\u7684\u4f18\u5148\u65b9\u5411\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#define maxn 60\nusing namespace std;\nint wall[maxn][maxn][4]={0},map[maxn][maxn]={0},N,M,dx[5]={1,0,-1,0},dy[5]={0,1,0,-1};\nvoid savewalls(int a,int b,int c){\n    if(c>=8){\n        c-=8;\n        wall[a][b][0]=1;\n    }\n    if(c>=4){\n        c-=4;\n        wall[a][b][1]=1;\n    }\n    if(c>=2){\n        c-=2;\n        wall[a][b][2]=1;\n    }\n    if(c>=1){\n        c-=1;\n        wall[a][b][3]=1;\n    }\n}\nvoid mkmap(int a,int b,int colour){\n    map[a][b]=colour;\n    for(int i=0;i<4;i++){\n        int nx=a+dx[i],ny=b+dy[i];\n        if(nx>=0&&nx<N&&ny>=0&&ny<M&&map[nx][ny]==0&&wall[a][b][i]==0)\n            mkmap(nx,ny,colour);\n    }\n}    \nint main(){\n    int colour=1,tmp;\n    cin>>M>>N;\n    for(int i=0;i<N;i++)\n        for(int j=0;j<M;j++){\n            cin>>tmp;\n            savewalls(i,j,tmp);\n        }\n    for(int i=0;i<N;i++)\n        for(int j=0;j<M;j++){\n            if(map[i][j]==0){\n                mkmap(i,j,colour);\n                colour++;\n            }\n        }\n    cout<<colour-1<<endl;//pb en\n    int num[maxn*maxn]={0};\n    for(int i=0;i<N;i++)\n        for(int j=0;j<M;j++)\n            num[map[i][j]]++;\n    tmp=1;\n    for(int i=1;i<colour;i++) if(num[tmp]<num[i]) tmp=i;\n    cout<<num[tmp]<<endl;//pb tv\u00e5\n    char ansdir;\n    int ansx,ansy,ansize=0;\n    for(int j=0;j<M;j++)\n        for(int i=N-1;i>=0;i--){\n            int tmpsize;\n            if(i-1>=0&&i-1<N&&wall[i][j][2]==1&&map[i][j]!=map[i-1][j]){\n                tmpsize=num[map[i][j]]+num[map[i-1][j]];\n                if(tmpsize>ansize){\n                    ansize=tmpsize;\n                    ansx=i,ansy=j;\n                    ansdir='N';\n                }\n            }\n            if(j+1>=0&&j+1<M&&wall[i][j][1]==1&&map[i][j]!=map[i][j+1]){\n                tmpsize=num[map[i][j]]+num[map[i][j+1]];\n                if(tmpsize>ansize){\n                    ansize=tmpsize;\n                    ansx=i,ansy=j;\n                    ansdir='E';\n                }\n            }\n        }\n    cout<<ansize<<endl<<ansx+1<<\" \"<<ansy+1<<\" \"<<ansdir<<endl;//last pb\n    return 0;\n}\n```",
        "postTime": 1470699403,
        "uid": 18843,
        "name": "Marchia",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1457 \u3010\u57ce\u5821 The Castle\u3011"
    }
]