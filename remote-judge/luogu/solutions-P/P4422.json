[
    {
        "content": "\u6ca1\u770b\u61c2\u697c\u4e0b\u300c\u7ade\u8d5b\u6811\u300d\u4ec0\u4e48\u9b3c,\u8fd9\u9898\u672c\u8d28\u4e0d\u5c31\u7ebf\u6bb5\u6811\u4e8c\u5206\u4e48\u3002\u3002\n\n\u300c\u5e74\u9f84\u5927\u4e8e\u7b49\u4e8e$B$\u4e14\u5728\u7b2c$Y$\u7ad9\uff08\u5305\u542b\u7b2c$Y$\u7ad9\uff09\u4ee5\u524d\u4e0b\u8f66\u7684\u6700\u5e74\u8f7b\u7684\u5c0f\u5b69\u662f\u591a\u5927\uff1f\u300d\u8fd9\u79cd\u8be2\u95ee\u5c31\u662f\u6c42$[B,N]$\u533a\u95f4\u91cc\u503c\u5c0f\u4e8e$Y$\u7684\u6700\u5c0f\u4f4d\u7f6e,\u90a3\u4e48\u5c31\u53ef\u4ee5\u4ee5\u5e74\u9f84$[1,N]$\u4e3a\u4e0b\u6807\u7ef4\u62a4\u5176\u533a\u95f4\u6700\u5c0f\u503c(\u8fd9\u91cc\u7684\u503c\u6307\u7684\u662f$i$\u5c81\u7684\u4eba\u4e0b\u8f66\u4f4d\u7f6e),\u6dfb\u52a0\u64cd\u4f5c\u5c31\u662f\u8ba9$i$\u4f4d\u7f6e\u503c\u4e3a\u7ad9\u70b9\u503c,\u67e5\u8be2\u65f6\u5c31\u627e\u5230$[B,N]$\u533a\u95f4,\u5bf9\u8fd9\u4e2a\u5b8c\u6574\u533a\u95f4\u770b\u5176\u6700\u5c0f\u503c\u662f\u5426\u6bd4\u8be2\u95ee\u503c\u5c0f,\u5c0f\u5c31\u8bf4\u660e\u8fd9\u4e2a\u5c81\u6570\u533a\u95f4\u91cc\u6709\u4e0b\u8f66\u70b9\u6bd4\u67e5\u8be2\u503c\u5c0f\u7684,\u5c31\u987a\u7740\u627e\u5230\u8fd9\u4e2a\u533a\u95f4\u6700\u5c0f\u7684\u53f6\u5b50\u7ed3\u70b9.\u53ef\u80fd\u8bf4\u7684\u4e0d\u592a\u6e05\u695a,\u90a3\u4e48,\u770b\u4ee3\u7801\u3002\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N=200000+7,INF=0x3f7f3f7f;\ninline int _min(int a,int b){return a<b?a:b;}\ninline int read(){\n\tchar c;int f=0,x=0;while(!isdigit(c=getchar()))if(c==45)f=1;\n\twhile(isdigit(c))x=(x<<1)+(x<<3)+(c^48),c=getchar();return f?-x:x;\n}\nint minv[N<<2];\nchar s[3];\nint n,q,x,k,ans,qr,ql;\n#define l i<<1\n#define r i<<1|1\nvoid Update(int i,int L,int R){\n\tif(L==R){minv[i]=k;return;}\n\tint mid=L+R>>1;x<=mid?Update(l,L,mid):Update(r,mid+1,R);\n\tminv[i]=_min(minv[l],minv[r]);\n}//\u7ef4\u62a4\u6700\u5c0f\u7ad9\u70b9\u4f4d\u7f6e\nint Find(int i,int L,int R){\n\tif(minv[i]>k)return INF;\n\telse if(L==R) return L; \n\tint mid=L+R>>1;return minv[l]<=k?Find(l,L,mid):Find(r,mid+1,R);\n}//\u8fd9\u91cc\u5c31\u662f\u5982\u679cql,qr\u8986\u76d6\u4e86\u5f53\u524d\u533a\u95f4\u5c31\u5728\u8fd9\u533a\u95f4\u91cc\u627e\u6ee1\u8db3\u8981\u6c42\u6700\u5c0f\u5c81\u6570\nvoid Query(int i,int L,int R){\n\tif(ql<=L&&qr>=R){ans=Find(i,L,R);return;}\n\tint mid=L+R>>1;\n\tif(ql<=mid){Query(l,L,mid);if(ans!=INF)return;}//\u5c0f\u7ec6\u8282,\u5e74\u9f84\u5c0f\u7684\u5df2\u7ecf\u627e\u5230\u5c31\u4e0d\u7528\u627e\u53f3\u8fb9\u4e86.\n\tif(qr>mid)Query(r,mid+1,R);\n}\n#undef l\n#undef r\nint main(){\n\tqr=n=read(),q=read();memset(minv,INF,sizeof minv);//\u6ce8\u610f\u6e05\u96f6,\u60f3\u60f3\u4e3a\u4ec0\u4e48\n\twhile(q--){\n\t\tscanf(\"%s\",s);\n\t\tif(s[0]=='M')k=read(),x=read(),Update(1,1,n);\n\t\telse k=read(),ql=read(),ans=INF,Query(1,1,n),printf(\"%d\\n\",ans==INF?-1:ans);\n\t}\n\treturn 0;\n}\n```\n~~\u554a\u987a\u4fbf\u5410\u69fd\u8fd9\u5c0f\u5b69\u80fd\u6d3b200000\u5c81\u6015\u4e0d\u662f\u795e\u4ed9~~\n\nUpdate:\n\u5bf9\u4e86\u8fd9\u9898\u4e5f\u53ef\u4ee5\u5957\u4e09\u7ef4\u504f\u5e8f\u677f\u5b50\u9898\u6765\u5199\u554a,\u7ebf\u6bb5\u6811$O(nlogn)$,\u4e09\u7ef4\u504f\u5e8f$O(nlog^2n)$,\u4f46\u662f\u6211\u592a\u5f31\u7684\u6682\u65f6\u5199\u4e0d\u8d77\u6765.\u53c8\u60f3\u5230\u6709\u4e00\u9898\u548c\u8fd9\u9898\u6709\u4e9b\u7c7b\u4f3c(\u7ebf\u6bb5\u6811\u4e8c\u5206)\u63a8\u8350\u5927\u5bb6\u4e5f[\u5199\u4e00\u5199](https://www.luogu.org/problemnew/show/P4137).",
        "postTime": 1541226691,
        "uid": 28913,
        "name": "Utsuji_rissh\u016b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4422 (\u7ebf\u6bb5\u6811\u4e8c\u5206)[20181103\u6a21\u62dfT2] [COCI2017-2018#1] Deda"
    },
    {
        "content": "# \u9898\u89e3 P4422 \u3010[COCI2017-2018#1] Deda\u3011\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4422)\n\n\u611f\u8c22[DRC](https://www.luogu.com.cn/user/249736)\u5927\u4f6c\n\n### \u9898\u610f\u5206\u6790\n\n\u9898\u76ee\u4e3b\u8981\u662f\u7ebf\u6bb5\u6811\u4e8c\u5206.\n\n\u7ef4\u62a4\u4e00\u4e2a\u7ebf\u6bb5\u6811\u6765\u8bb0\u5f55\u65f6\u95f4\uff0c\u7136\u540e\u6bcf\u6b21\u5728\u5de6\u53f3\u5b50\u6811\u5206\u522b\u66f4\u65b0\u4e0b\u8f66\u7684\u5e74\u9f84.\n\n\u4e8c\u5206\u67e5\u627e\u65f6\u5982\u679c\u5de6\u53f3\u5b50\u6811\u90fd\u6709\u53ef\u884c\u7684\u503c\uff0c\u53d6\u53f3\u8fb9\u7684\u503c\uff08\u56e0\u4e3a\u65f6\u95f4\u662f\u9012\u589e\u7684\uff09.\n\nquery\u4e2d\u5982\u679c\u8fd9\u6837\u5199\uff0c\u5c31\u53ef\u4ee5\u4e0d\u7528\u5728query\u5916\u518d\u5957\u4e8c\u5206\u4e86\u3002\n```\n\tif(t[mk]>u)return 400000;//\u5982\u679c\u533a\u95f4\u4e2d\u65e0\u7b26\u5408\u6761\u4ef6\u7684\u503c \n\tif(L==R) return L;\n```\n\u5982\u6709\u4e0d\u61c2\u89c1\u6ce8\u91ca\u3002\n\n### AC\u4ee3\u7801\n\n```cpp\n#include<stdio.h>\n#include<cstring>\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#define res register int\n#define maxn 200010\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)//\u81ed\u6c27\u4f18\u5316\uff08\u6ed1\u7a3d\uff09\n#define inf 0x3f3f3f3f\ntypedef long long ll;\nusing namespace std;\nvoid read(int &x) {\n    int f = 1; x = 0;\n    char ch = getchar();\n    while (ch < '0' || ch > '9')   {if (ch == '-') f = -1; ch = getchar();}\n    while (ch >= '0' && ch <= '9') {x = x * 10 + ch - '0'; ch = getchar();}\n    x *= f;\n}\nint Min(int a,int b){return a<b?a:b;}//\u624b\u5199min\u6bd4stl\u5feb\u4e00\u70b9\u70b9 \n#define ls mk<<1|1\n#define rs mk<<1\nint t[maxn<<2];//tr[k]\u7ef4\u62a4l\u5230r\u533a\u95f4:\u4e8e\u5e74\u9f84\u6bb5l\u81f3r,\u6700\u65e9\u4f55\u65f6\u4e0b\u8f66? \nint n,q,v,k,u;\ninline int up(int L,int R,int mk){\n\tif(L==R) return t[mk]=u;\n\tint mid=L+R>>1,ans;\n\tif(v>mid){//\u4e8c\u5206 \n\t\tans=up(mid+1,R,ls);\n\t}\n\telse ans=up(L,mid,rs);\n\treturn t[mk]=Min(t[mk],ans);\n}\ninline int query(int L,int R,int mk){\n\tif(t[mk]>u)return 400000;//\u5982\u679c\u533a\u95f4\u4e2d\u65e0\u7b26\u5408\u6761\u4ef6\u7684\u503c \n\tif(L==R) return L;\n\tint mid=L+R>>1,ans;\n\tif(mid<v){//\u5982\u679c\u8981\u627e\u7684\u503c\u5728\u53f3\u5b50\u6811\u6709 \n\t\treturn query(mid+1,R,ls);\n\t}\n\tif((ans=query(L,mid,rs))<200000){\n\t\treturn ans;\n\t}\n\telse return query(mid+1,R,ls);\n}\nint main(){\n\tread(n),read(q);\n\tmemset(t,127,sizeof(t));//\u6ce8\u610f\u521d\u59cb\u5316 \n\tfor(int i=1;i<=q;i++){\n\t\tchar c;\n\t\tscanf(\"%c\",&c);\n\t\tread(u),read(v);\n\t\tif(c=='M'){\n\t\t\tup(1,n,1);\n\t\t}\n\t\telse{  \n\t\t\tint ans=query(1,n,1); \n\t\t\tcout<<(ans>200000?-1:ans)<<endl;//\u5224\u4e00\u4e0b \n\t\t}\n\t}\n\treturn 0;\n}\n```\n\u6709\u95ee\u9898\u8bc4\u8bba\u533a\u7559\u8a00\uff0c\u8c22\u8c22\n\n~~\u6c42\u70b9\u8d5eQWQ~~\n",
        "postTime": 1589024422,
        "uid": 225703,
        "name": "jyz666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4422 \u3010[COCI2017-2018#1] Deda\u3011"
    },
    {
        "content": "\uff08\u672c\u9898\u89e3\u5145\u65a5\u7740\u4e11\u964b\u7684\u56fe\u7247\uff0c\u8bf7\u7d27\u5f20\u5730\u5f80\u4e0b\u770b\uff09\n\nyy\u4e86\u4e00\u4e2a\u81ea\u4ee5\u4e3a\u662f\u7ebf\u6bb5\u6811\u7684\u505a\u6cd5\uff0c\u7ed3\u679c\u672c\u6821dalao   @deemoender \u6307\u51fa\u8fd9\u4e1c\u897f\u53eb\u7ade\u8d5b\u6811,\u65e5\u5e38\u88abdalao\u78be\u538b\u3002\n\u5148\u6765\u770b\u4ec0\u4e48\u662f\u7ade\u8d5b\u6811\uff0c\u5047\u8bbe\u6709\u8fd9\u4e48\u516b\u652f\u961f\u4f0d\u8fdb\u884c\u4e24\u4e24\u6bd4\u8d5b\uff0c\u8d62\u8005\u664b\u7ea7\u8f93\u8005\u6dd8\u6c70\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528\u8fd9\u6837\u7684\u4e00\u4e2a\u7ed3\u6784\u6765\u8868\u793a\u8fd9\u6b21\u6bd4\u8d5b\u7684\u7ed3\u679c\u3002\n\n![\u8fd9\u5c31\u662f\u80dc\u8005\u6811](https://cdn.luogu.com.cn/upload/pic/36964.png)\n\u5982\u679c\u6bd4\u8d5b\u961f\u4f0d\u4e0d\u662f$2$\u7684\u6b63\u6574\u6570\u6b21\u65b9\u5c31\u4f1a\u51fa\u73b0\u8f6e\u7a7a\u7684\u60c5\u51b5\uff0c\u8fd9\u65f6\u53ea\u9700\u8981\u8fdb\u884c\u4e00\u70b9\u70b9\u8c03\u6574\uff0c\u6bd4\u5982\u8bf4\n![](https://cdn.luogu.com.cn/upload/pic/36967.png)\n @deemoender \u8bf4\u7ade\u8d5b\u6811\u6709\u5f88\u591a\u795e\u5947\u7684\u7528\u6cd5\uff0c\u4f46\u6211\u4e0d\u4f1a\u00b7\u00b7\u00b7\u5e78\u597d\u5bf9\u4e8e\u8fd9\u9053\u9898\u6765\u8bf4\u8fd9\u5c31\u5df2\u7ecf\u591f\u7528\u4e86\u3002\n \n\u90a3\u4e48\u8fd9\u4e2a\u4e1c\u897f\u600e\u4e48\u7528\u6765\u89e3\u51b3\u8fd9\u9053\u9898\u5462\uff1f\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u6211\u4eec\u9700\u8981\u627e\u51fa\u5728$Y$\u7ad9\u6216$Y$\u7ad9\u4e4b\u524d\u4e0b\u8f66\u7684\u5927\u4e8e\u7b49\u4e8e$B$\u5c81\u7684\u4eba\u4e2d\u7684\u5e74\u9f84\u6700\u5c0f\u7684\u4eba\u7684\u5c81\u6570\uff08\u597d\u62d7\u53e3\uff09\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\uff0c\u5047\u8bbe\u8bf4\u6709\u8fd9\u4e48\u4e00\u7fa4\u4eba\uff0c\u4ed6\u4eec\u5f53\u4e2d\u4e0b\u8f66\u6700\u65e9\u7684\u4e00\u4e2a\u5728Y\u7ad9\u90fd\u6ca1\u6709\u4e0b\u8f66\uff0c\u90a3\u4e48\u4ed6\u4eec\u4e2d\u5c31\u4e0d\u53ef\u80fd\u6709\u5728$Y$\u7ad9\u6216\u4ee5\u524d\u4e0b\u8f66\u7684\u4e86\uff08\u56e0\u4e3a\u4e0b\u8f66\u6700\u65e9\u7684\u90a3\u4e2a\u5728$Y$\u90fd\u6ca1\u4e0b\u8f66\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7ef4\u62a4\u4e00\u68f5\u7ade\u8d5b\u6811\u6765\u8868\u793a\u4e00\u7fa4\u4eba\u4e2d\u4e0b\u8f66\u6700\u65e9\u7684\uff0c\u6bd4\u5982\u8bf4\u50cf\u8fd9\u6837\uff08\u56e0\u4e3a\u8981\u7ef4\u62a4\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u7528$INF$\u6765\u8868\u793a\u6ca1\u4e0b\u8f66\u7684\uff09\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/36971.png)\n\n\u53f6\u5b50\u8282\u70b9\u4ece\u5de6\u5411\u53f3\u8868\u793a\u5e74\u9f84\u4ece\u5927\u5230\u5c0f\u3002\n\n\u5047\u8bbe\u6211\u4eec\u6709\u8fd9\u6837\u4e00\u4e2a\u67e5\u8be2\u5728$25$\u7ad9\u4ee5\u524d\u4e0b\u8f66\u7684\u5927\u4e8e\u7b49\u4e8e$2$\u5c81\u7684\u4eba\uff0c\u6211\u4eec\u6765\u64cd\u4f5c\u4e00\u4e0b\n\n\u6700\u9876\u4e0a\u7684\u201c$7$\u201d\u544a\u8bc9\u6211\u4eec\u8fd9\u7fa4\u4eba\u4e2d\u6700\u65e9\u4e0b\u8f66\u7684\u662f\u5728\u201c$7$\u201d\uff0c\u800c\u8fd9\u4e2a\u67e5\u8be2\u662f\u8981\u95ee$25$\u4e4b\u524d\u7684\uff0c\u8bf4\u660e\u8fd9\u7fa4\u4eba\u91cc\u6709\u5728$25$\u4e4b\u524d\u4e0b\u8f66\u7684\n\n\u5b83\u7684\u5de6\u513f\u5b50\u662f\u201c$7$\u201d\uff0c\u540c\u4e0a\uff0c\u6211\u4eec\u6765\u5230\u4e86\u5b83\u7684\u5de6\u513f\u5b50\uff0c\u8fd9\u4e2a\u70b9\u7684\u5de6\u513f\u5b50\u662f\u201c$50$\u201d\uff0c\u8fd9\u7fa4\u4eba\u91cc\u5230\u4e86\u201c$50$\u201d\u624d\u4e0b\u8f66\uff0c\u663e\u7136\u4e0d\u7b26\u5408\u6761\u4ef6\uff0c\u800c\u53f3\u513f\u5b50\u662f\u201c$7$\u201d\uff0c\u6211\u4eec\u6765\u5230\u5b83\u7684\u53f3\u513f\u5b50\n\n\u5b83\u7684\u5de6\u513f\u5b50\u662f\u201c$14$\u201d\uff0c\u53f3\u513f\u5b50\u662f\u201c$7$\u201d\uff0c\u7531\u4e8e\u9898\u76ee\u8981\u6c42\u6211\u4eec\u627e\u7684\u662f\u5e74\u9f84\u6700\u5c0f\u7684\uff0c\u800c\u5de6\u513f\u5b50\u7684\u5e74\u9f84\uff08\u6216\u8005\u8bf4\u5de6\u513f\u5b50\u8868\u793a\u7684\u4e00\u7fa4\u4eba\u7684\u603b\u4f53\u5e74\u9f84\uff09\u662f\u5c0f\u4e8e\u53f3\u513f\u5b50\u7684\uff0c\u6240\u4ee5\u5c3d\u7ba1\u53f3\u513f\u5b50\u4e0b\u8f66\u66f4\u65e9\uff0c\u4f46\u6211\u4eec\u4ecd\u7136\u6765\u5230\u4e86\u5de6\u513f\u5b50\u3002\n\n\u6b64\u65f6\u6211\u4eec\u6765\u5230\u4e86\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8fd4\u56de\u5b83\u7684\u5e74\u9f84$3$\u4e86\u3002\n\n\u5728\u67e5\u8be2\u65f6\u9075\u5faa\u4ee5\u4e0b\u51e0\u4e2a\u8981\u70b9\uff1a\n\n1\u3001\u5c3d\u91cf\u5f80\u5de6\u5b50\u6811\u8d70\uff0c\u5de6\u5b50\u6811\u627e\u4e0d\u51fa\u5408\u9002\u7684\u4eba\u4e86\u518d\u627e\u53f3\u5b50\u6811\uff0c\u56e0\u4e3a\u5de6\u8fb9\u7684\u4eba\u6bd4\u53f3\u8fb9\u7684\u5e74\u8f7b\u3002\n\n2\u3001\u6ce8\u610f\u67e5\u8be2\u7684\u8fb9\u754c\uff0c\u4e0d\u8981\u67e5\u8be2\u4e86\u5e74\u9f84\u5c0f\u4e8e$B$\u7684\u4eba\u3002\n\n\u5f00\u59cb\u8bf4\u4e86\u6211\u662f\u81ea\u5df1yy\u7684\u6240\u8c13\u201c\u7ebf\u6bb5\u6811\u201d\u505a\u6cd5\uff0c\u6240\u4ee5\u6211\u7684\u6811\u5efa\u51fa\u6765\u5927\u6982\u662f\u8fd9\u6837\u7684\n\n![](https://cdn.luogu.com.cn/upload/pic/36977.png)\n\u5982\u679c\u4f60\u6309\u7167\u6b65\u9aa4\u4e00\u6b65\u4e00\u6b65\u6765\u6a21\u62df\u53ef\u4ee5\u53d1\u73b0\u7b54\u6848\u662f\u4e00\u6837\u7684\uff08\u4f46dalao\u548c\u6211\u8bf4\u6709\u4e9b\u7ade\u8d5b\u6811\u7684\u64cd\u4f5c\u7528\u8fd9\u79cd\u5efa\u6811\u7684\u65b9\u5f0f\u662f\u5b9e\u73b0\u4e0d\u4e86\u7684\uff0c\u5413\u5f97\u6211\u8d76\u7d27\u53bb\u5b66\u7ade\u8d5b\u6811\u53bb\u4e86\uff09\n\n\u63a5\u4e0b\u6765\u662f\u6211\u81ea\u5df1\u7684\u4e11\u964b\u7684\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nstruct stu{\n    int lc,rc;\n    long long int ans,tag;\n};\nstu tree[500050];\nint k=1;\nint n,q;\nvoid build(int l,int r,int nu)//\u6211\u5e73\u65f6\u6240\u7528\u7684\u5efa\u6811\u65b9\u5f0f \n{\n    tree[nu].ans=0x7f7f7f7f;//\u8d4b\u521d\u503c\u4e3a0x7f7f7f7f \n    if (l==r)\n    {\n        return;\n    }\n    int mid=(l+r)/2;\n    k++;\n    tree[nu].lc=k;\n    build(l,mid,tree[nu].lc);\n    k++;\n    tree[nu].rc=k;\n    build(mid+1,r,tree[nu].rc);\n}\nvoid update(int l,int r,int ll,int u,long long int v)//\u7ebf\u6bb5\u6811\u5355\u70b9\u4fee\u6539 \n{\n    if (l==ll&&r==ll)\n    {\n        tree[u].ans=v;\n        return;\n    }\n    int mid=(l+r)/2;\n    if (ll<=mid)\n    {\n        update(l,mid,ll,tree[u].lc,v);\n    }\n    else\n    {\n        update(mid+1,r,ll,tree[u].rc,v);\n    }\n    tree[u].ans=min(tree[tree[u].lc].ans,tree[tree[u].rc].ans);//\u7ef4\u62a4\u6700\u65e9\u4e0b\u8f66\u7684\u5728\u54ea\u91cc\u4e0b\u8f66 \n}\nint quary(int l,int r,int ll,int rr,int u,long long int v)//\u7ebf\u6bb5\u6811\u533a\u95f4\u67e5\u8be2 \n{\n    if (l==r)\n    {\n        return l;//\u8fd4\u56de\u5e74\u9f84 \n    }\n    int mid=(l+r)/2;\n    if (rr<=mid)//\u7ebf\u6bb5\u6811\u7684\u533a\u95f4\u67e5\u8be2\u65b9\u5f0f \n    {\n        if (tree[tree[u].lc].ans>v)//\u627e\u4e0d\u51fa\u5408\u9002\u7684\u4eba\u5c31\u8fd4\u56de0x7f7f7f \n        {\n            return 0x7f7f7f;\n        }\n        else\n        {\n            return quary(l,mid,ll,rr,tree[u].lc,v);\n        }\n    }\n    else if (ll>mid)//\u540c\u4e0a \n    {\n        if (tree[tree[u].rc].ans>v)\n        {\n            return 0x7f7f7f;\n        }\n        else return quary(mid+1,r,ll,rr,tree[u].rc,v);\n    }\n    else\n    {\n        int a1=0x7f7f7f,a2=0x7f7f7f;\n        if (tree[tree[u].lc].ans<=v)//\u5148\u627e\u5de6\u533a\u95f4 \n        {\n            a1=quary(l,mid,ll,mid,tree[u].lc,v);\n        }\n        if (tree[tree[u].rc].ans<=v&&a1==0x7f7f7f)//\u5de6\u533a\u95f4\u5b9e\u5728\u662f\u6ca1\u6709\u5408\u9002\u7684\u4eba\u4e86\u518d\u627e\u53f3\u533a\u95f4 \n        {\n            a2=quary(mid+1,r,mid+1,rr,tree[u].rc,v);\n        }\n        return min(a1,a2);\n    }\n}\nint main()\n{\n   // freopen(\"deda.in\",\"r\",stdin);\n   // freopen(\"deda.out\",\"w\",stdout);\n    scanf(\"%d%d\",&n,&q);\n    build(1,n,1);//\u5efa\u6811 \n    for (int i=1;i<=q;i++)\n    {\n        char flag[1];\n        long long int X;\n        int B; \n        scanf(\"%s%lld%d\",flag,&X,&B);\n        if (flag[0]=='M')\n        {\n            update(1,n,B,1,X);\n        }\n        else\n        {\n            int lll=quary(1,n,B,n,1,X);//\u533a\u95f4\u67e5\u8be2\u5e74\u9f84\u4eceB\u5230 N\uff08\u5e74\u9f84\u7684\u6700\u5927\u503c\uff09\u7684\u4eba\u3002 \n            if (lll==0x7f7f7f)//\u6ca1\u6709\u7b26\u5408\u6761\u4ef6\u7684\u4eba\u5c31\u8f93\u51fa-1\uff1b \n            {\n                printf(\"-1\\n\");\n            }\n            else\n            {\n                printf(\"%d\\n\",lll);\n            }\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1539073952,
        "uid": 55870,
        "name": "\u4e45\u8fdc\u5bfa\u6709\u73e0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4422 \u3010[COCI2017-2018#1] Deda\u3011"
    },
    {
        "content": "### [\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4422)\n## \u601d\u8def\n\u770b\u5230\u9898\u76ee\u4e2d\u5b69\u5b50\u5206\u522b\u4e3a $1 \\sim n$ \u5c81\uff0c\u60f3\u5230\u4e86\u7528\u5e74\u9f84\u4e3a\u4e0b\u6807\uff0c\u6784\u9020**\u7ebf\u6bb5\u6811**\u3002  \n\u6b64\u9898\u7684\u66f4\u6539\u4e3a**\u5355\u70b9\u66f4\u6539**\u3002\u201c\u5728\u7b2c $X$ \u7ad9\uff0c\u5e74\u9f84\u4e3a $A$ \u5c81\u7684\u5b69\u5b50\u4e0b\u8f66\u4e86\u3002\u201d\u5c31\u662f\u5c06\u4e0b\u6807\u4e3a $A$ \u7684\u70b9\u7684\u503c\u6539\u4e3a $X$ \u3002  \n\u6b64\u9898\u7684\u67e5\u8be2\u4e3a**\u533a\u95f4\u67e5\u8be2**\u3002\u201c\u5e74\u9f84\u5927\u4e8e\u7b49\u4e8e $B$ \u4e14\u5728\u7b2c $Y$ \u7ad9\uff08\u5305\u542b\u7b2c $Y$ \u7ad9\uff09\u4ee5\u524d\u4e0b\u8f66\u7684\u6700\u5e74\u8f7b\u7684\u5c0f\u5b69\u662f\u591a\u5927\uff1f\u201d\u6362\u53e5\u8bdd\u8bf4\uff0c\u5c31\u662f\u5728 $[B,N]$ \u7684\u533a\u95f4\u4e2d\u627e\u51fa\u503c\u5c0f\u4e8e $Y$ \u7684\u6700\u5c0f\u4e0b\u6807\u3002\u5bfb\u627e\u8fc7\u7a0b\u601d\u8def\u5982\u4e0b\uff08~~\u770b\u4e0d\u61c2\u5c31\u5bf9\u4e86~~\uff09\uff1a  \n1. \u641c\u7d22\u533a\u95f4\u662f\u5426\u5728 $[B,N]$ \u8303\u56f4\u5185\uff1f\u82e5\u662f\uff0c\u8fdb\u884c\u4e0b\u4e00\u6b65\u3002\u5426\u5219\uff0c\u641c\u7d22\u5de6\u53f3\u5b57\u6570\uff0c\u91cd\u590d\u6b65\u9aa4 $1$ \u3002\n2. \u82e5\u8be5\u533a\u95f4\u662f\u53f6\u5b50\u8282\u70b9\uff08\u5373\u627e\u5230\u67d0\u4e2a\u5b69\u5b50\uff09\u4e14\u503c\u5c0f\u4e8e $Y$ \uff0c\u8fd4\u56de\u4e0b\u6807\u3002\u82e5\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u8fdb\u884c\u4e0b\u4e00\u6b65\u3002\n3. \u82e5\u5de6\u533a\u95f4\u7684\u6700\u5c0f\u503c\u5c0f\u4e8e $Y$ \uff0c\u641c\u7d22\u5de6\u5b50\u6811\uff08\u56e0\u4e3a\u8981\u8f93\u51fa\u6700\u5c0f\u4e0b\u6807\uff09\uff0c\u5426\u5219\u641c\u7d22\u53f3\u5b50\u6811\uff0c\u8fdb\u884c\u4e0b\u4e00\u6b65\u3002\n4. \u82e5\u641c\u5230\u7684\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u8fdb\u884c\u7b2c $2$ \u6b65\uff0c\u5426\u5219\u8fdb\u884c\u7b2c $3$ \u6b65\u3002\n## AC\u4ee3\u7801\n###### ~~\u672c\u4eba\u4e0d\u538b\u884c~~\n```cpp\n#include<iostream>\n#include<cstdio>\n#define maxn 200010\n#define INF 0x3fffffff//\u5f00\u59cb\u65f6\u628a\u6bcf\u4e2a\u8282\u70b9\u8d4b\u6210\u6700\u5927\u503c\nusing namespace std;\nstruct node{\n\tint l,r,mind;//mind\u5b58\u8be5\u533a\u95f4\u7684\u6700\u5c0f\u503c\n}a[maxn*10];\nint n,q;\nchar op;\nint x,y;\nvoid pushup(int i){\n\ta[i].mind=min(a[i*2].mind,a[i*2+1].mind);\n}\nvoid build(int i,int l,int r){//\u5efa\u6811\u57fa\u672c\u64cd\u4f5c\n\ta[i].l=l;\n\ta[i].r=r;\n\tif(l==r){\n\t\ta[i].mind=INF;\n\t\ta[i*2].mind=INF;\n\t\ta[i*2+1].mind=INF;\n\t\treturn;\n\t}else{\n\t\tbuild(i*2,l,(l+r)/2);\n\t\tbuild(i*2+1,(l+r)/2+1,r);\n\t}\n\tpushup(i);\n}\nvoid update(int i,int y,int s){//\u5355\u70b9\u4fee\u6539\u57fa\u672c\u64cd\u4f5c\n\tif(a[i].l==a[i].r&&a[i].l==y){\n\t\ta[i].mind=s;\n\t\treturn;\n\t}\n\tif(a[i*2].r>=y){\n\t\tupdate(i*2,y,s);\n\t}else if(a[i*2+1].l<=y){\n\t\tupdate(i*2+1,y,s);\n\t}\n\tpushup(i);\n}\nint search(int i,int l,int r,int s){//\u641c\u7d22\n\tint ans=INF;\n\tif(a[i].l==a[i].r&&a[i].mind<=s){//\u4e0a\u8ff0\u64cd\u4f5c2\n\t\treturn a[i].l;\n\t}else if(a[i].l>=l&&a[i].r<=r){//\u4e0a\u8ff0\u64cd\u4f5c1\n\t\tif(a[i*2].mind<=s){\n\t\t\tans=search(i*2,l,r,s);\n\t\t}else if(a[i*2+1].mind<=s){\n\t\t\tans=search(i*2+1,l,r,s);\n\t\t}\n\t\treturn ans;\n\t}else{//\u4e0a\u8ff0\u64cd\u4f5c3\n\t\tif(a[i*2].r>=l){\n\t\t\tans=search(i*2,l,r,s);\n\t\t}\n\t\tif(a[i*2+1].l<=r){\n\t\t\tans=min(search(i*2+1,l,r,s),ans);\n\t\t}\n\t\treturn ans;\n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&q);\n\tbuild(1,1,n);\n\tfor(int i=1;i<=q;i++){\n\t\tscanf(\"\\n%c\",&op);\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tif(op=='M'){\n\t\t\tupdate(1,y,x);//\u5e74\u9f84y\u5728x\u7ad9\u4e0b\u8f66\u4e86 \n\t\t}else if(op=='D'){\n\t\t\tint ans=search(1,y,n,x);//\u5e74\u9f84y~n\u4e14\u5728x\u7ad9\u524d\u4e0b\u8f66\u7684 \n\t\t\tif(ans==INF){\n\t\t\t\tprintf(\"-1\\n\");\n\t\t\t}else{\n\t\t\t\tprintf(\"%d\\n\",ans);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;//\u5b8c\u7ed3\u6492\u82b1\n}\n```\n###### ~~\u52ff\u55b7~~",
        "postTime": 1618122882,
        "uid": 294382,
        "name": "qzhwlzy",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P4422 \u3010[COCI2017-2018#1] Deda\u3011"
    },
    {
        "content": "\u89c2\u5bdf\u5230\u5e74\u9f84\u5f88\u5c0f\u800c\u8f66\u7ad9\u7f16\u53f7\u5f88\u5927\uff0c\u8003\u8651\u4ee5\u5e74\u9f84\u4e3a\u4f4d\u7f6e\u5efa\u7ebf\u6bb5\u6811\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u5b58\u8be5\u5e74\u9f84\u6700\u65e9\u51fa\u73b0\u7684\u8f66\u7ad9\uff0c\u7136\u540e\u778e\u9012\u5f52\u4e00\u4e0b\u627e\u7b26\u5408\u5e74\u9f84\u533a\u95f4\u91cc\u662f\u5426\u6709\u7b26\u5408\u6761\u4ef6\u7684\u8f66\u7ad9\u5c31\u53ef\u4ee5\u4e86\u3002\n```cpp\n#include<bits/stdc++.h>\n#define N 200000\n#define reg register\n#define inl inline\n#define inf 1010580540\nusing namespace std;\nint n,Q,t[N*4+5],ans;\nvoid Modify(reg int rt,reg int l,reg int r,reg int pos,reg int x)\n{\n\tif(l==r) return t[rt]=x,void();\n\treg int mid=(l+r)>>1;\n\tif(pos<=mid) Modify(rt<<1,l,mid,pos,x);\n\telse Modify(rt<<1|1,mid+1,r,pos,x);\n\tt[rt]=min(t[rt<<1],t[rt<<1|1]);\n}\nint Find(reg int rt,reg int l,reg int r,reg int x)\n{\n\tif(t[rt]>x) return inf;\n\tif(l==r) return l;\n\treg int mid=(l+r)>>1;\n\tif(t[rt<<1]<=x) return Find(rt<<1,l,mid,x);\n\telse return Find(rt<<1|1,mid+1,r,x);\n}\nvoid Query(reg int rt,reg int l,reg int r,reg int tl,reg int tr,reg int x)\n{\n\tif(tl<=l && r<=tr) return ans=Find(rt,l,r,x),void();\n\treg int mid=(l+r)>>1;\n\tif(tl<=mid) Query(rt<<1,l,mid,tl,tr,x);\n\tif(ans!=inf) return;\n\tif(tr>mid) Query(rt<<1|1,mid+1,r,tl,tr,x);\n}\nint main()\n{\n\tmemset(t,60,sizeof(t));\n\tscanf(\"%d %d\",&n,&Q);\n\twhile(Q--)\n\t{\n\t\treg int x,y;\n\t\treg char opt[5];\n\t\tscanf(\"%s %d %d\",opt+1,&x,&y);\n\t\tif(opt[1]=='M') Modify(1,1,n,y,x);\n\t\telse\n\t\t{\n\t\t\tans=inf;\n\t\t\tQuery(1,1,n,y,n,x);\n\t\t\tprintf(\"%d\\n\",ans==inf?-1:ans);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1606314591,
        "uid": 23243,
        "name": "VenusM1nT",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4422 \u3010[COCI2017-2018#1] Deda\u3011"
    },
    {
        "content": "## Solution\n\n\u5f53\u770b\u5230\u9898\u76ee\u4e2d $2 \\leq n \\leq 2 \\times 10 ^ 5$ \u548c $1 \\leq x,y \\leq 10 ^ 9$ \u548c\u7a7a\u95f4\u7684 $\\text{62.5MB}$\uff0c\u63d0\u793a\u4e86\u6211\u4eec\u8981\u6309\u5e74\u9f84\u5efa\u6811\uff0c\u5426\u5219\u5c31\u7b97\u4f60\u5199\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u4e5f\u4f1a $\\text{MLE}$\u3002\n\n\u9996\u5148\uff0c\u6839\u636e\u5e74\u9f84\uff0c\u5efa\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u4e4b\u540e\u5bf9\u4e8e\u5c0f\u9a6c\u91cc\u5361\u7684\u8bdd\uff0c\u5bf9\u7ebf\u6bb5\u6811\u8fdb\u884c\u5355\u70b9\u4fee\u6539\uff0c\u5e76\u4e14\u5411\u4e0a\u4fee\u6539\u533a\u95f4\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n\u5982\u679c\u662f\u7237\u7237\u7684\u8bdd\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u6c42\u533a\u95f4 $[B,N]$ \u4e4b\u95f4\u4e0b\u8f66\u7684\u5730\u65b9\u5927\u4e8e $Y$ \u7684\u6700\u5c0f\u503c\u3002\n\n\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5728\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u5c31\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u601d\u8def\u67e5\u8be2 \uff1a \n\n+ \u5f53\u6574\u4e2a\u533a\u95f4\u90fd\u5728\u5de6\u5b50\u6811\uff0c\u9012\u5f52\u641c\u7d22\u5de6\u5b50\u6811\uff0c\u5982\u679c\u5de6\u5b50\u6811\u7684\u4e0b\u8f66\u4f4d\u7f6e\u7684\u6700\u5c0f\u503c\u5927\u4e8e $Y$ \u76f4\u63a5\u8fd4\u56de\u3002\n+ \u5f53\u6574\u4e2a\u533a\u95f4\u90fd\u5728\u5de6\u5b50\u6811\uff0c\u9012\u5f52\u641c\u7d22\u53f3\u5b50\u6811\uff0c\u5982\u679c\u53f3\u5b50\u6811\u7684\u4e0b\u8f66\u4f4d\u7f6e\u7684\u6700\u5c0f\u503c\u5927\u4e8e $Y$ \u76f4\u63a5\u8fd4\u56de\u3002\n+ \u5f53\u533a\u95f4\u4e00\u90e8\u5206\u5728\u5de6\u5b50\u6811\uff0c\u4e00\u90e8\u5206\u5728\u53f3\u5b50\u6811\uff0c\u90a3\u4e48\u5148\u641c\u7d22\u5de6\u5b50\u6811\uff0c\u518d\u641c\u7d22\u53f3\u5b50\u6811\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u4fdd\u8bc1\u5e74\u9f84\u6700\u5c0f\uff0c\u5982\u679c\u4e0b\u8f66\u4f4d\u7f6e\u6700\u5c0f\u503c\u5c0f\u4e8e\u7b49\u4e8e $Y$ \u641c\u7d22\u5de6\u5b50\u6811\uff0c\u5982\u679c\u53d1\u73b0\u6ca1\u6709\u641c\u5230\u7ed3\u679c\uff0c\u540c\u7406\uff0c\u518d\u641c\u7d22\u53f3\u5b50\u6811\u3002\n+ \u5982\u679c\u5f53\u524d\u662f\u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9\uff0c\u66f4\u65b0\u7b54\u6848\uff0c\u4e5f\u5c31\u662f\u548c\u533a\u95f4\u7aef\u70b9\u53d6\u6700\u5c0f\u503c\u3002\n\n\u5982\u679c\u6709\u4e00\u90e8\u5206\u5728\u5de6\u5b50\u6811\uff0c\u4e00\u90e8\u5206\u5728\u53f3\u5b50\u6811\uff0c\u67e5\u8be2\u53f3\u5b50\u6811\u7684\u65f6\u5019\u8981\u5148\u5224\u65ad\u662f\u5426\u7b54\u6848\u5df2\u7ecf\u88ab\u66f4\u65b0\u8fc7\uff0c\u5982\u679c\u66f4\u65b0\u8fc7\u5c31\u4e0d\u7528\u641c\u7d22\u4e86\uff0c\u5426\u5219\u4f1a\u8d85\u65f6\u3002\n\n\u8fd8\u6709\u5c31\u662f\u4e00\u5f00\u59cb\u6574\u68f5\u6811\u7684\u6700\u5c0f\u503c\u90fd\u8981\u8d4b\u503c\u4e3a INF\u3002\n\n## Code\n```\n#include <cstdio>\n#include <cmath>\n#include <iostream>\n#include <cstring>\n#include <algorithm>\n#define INF 0x3f3f3f3f \nusing namespace std;\nconst int Maxk = 2e6 + 10;\nstruct SegTree {\n  int l,r,min_;\n}t[Maxk << 2];\nint n,m,cnt,Ans;\ninline int read()\n{\n\tint s = 0, f = 0;char ch = getchar();\n\twhile (!isdigit(ch)) f |= ch == '-', ch = getchar();\n\twhile (isdigit(ch)) s = s * 10 + (ch ^ 48), ch = getchar();\n\treturn f ? -s : s;\n}\nvoid build(int i,int l,int r)\n{\n  t[i].l = l;\n  t[i].r = r;\n  t[i].min_ = INF;\n  if(l == r) {\n    t[i].min_ = INF;\n    return;\n  }\n  int mid = (l + r) >> 1;\n  build(i << 1,l,mid);\n  build(i << 1 | 1,mid + 1,r);\n}\nvoid Add(int i,int pos,int k)\n{\n  if(t[i].l == t[i].r && pos == t[i].l) {\n    t[i].min_ = k;\n    return;\n  } \n  int mid = (t[i].l + t[i].r) >> 1;\n  if(pos <= mid) Add(i << 1,pos,k);\n  else Add(i << 1 | 1,pos,k);\n  t[i].min_ = min(t[i << 1].min_,t[i << 1 | 1].min_);\n}\nvoid Ask(int i,int l,int r,int k)\n{\n  if(t[i].l == t[i].r) {Ans = min(Ans,t[i].l);return;}\n  int mid = (t[i].l + t[i].r) >> 1;\n  if(r < mid) {//\u6574\u4e2a\u533a\u95f4\u8981\u6c42\u7684\u7684\u533a\u95f4\u90fd\u5728\u8fd9\u4e2a\u533a\u95f4\u7684\u5de6\u8fb9 \n    if(t[i << 1].min_ > k) return;\n    else Ask(i << 1,l,r,k); \n  }\n  else if(l > mid) {\n    if(t[i << 1 | 1].min_ > k) return;\n    else if(Ans == INF) Ask(i << 1 | 1,l,r,k);\n  }\n  else {\n    if(t[i << 1].min_ <= k) Ask(i << 1,l,r,k);\n    if(t[i << 1 | 1].min_ <= k && Ans == INF) Ask(i << 1 | 1,l,r,k);\n  } \n  return;\n} \nsigned main()\n{\n  n = read(),m = read();\n  build(1,1,n);\n  for(int i = 1;i <= m;i ++) {\n    char c;cin >> c;\n    if(c == 'M') {\n      int x = read(),A = read();\n      Add(1,A,x);\n    }\n    else {\n      int y = read(),b = read();\n      Ans = INF;Ask(1,b,n,y);\n      printf(\"%d\\n\",Ans == INF ? -1 : Ans);\n    }\n  }\n  return 0;\n}\n```",
        "postTime": 1626598483,
        "uid": 381904,
        "name": "\u659c\u63fd\u6b8b\u7bab",
        "ccfLevel": 6,
        "title": "\u3010P4422 [COCI2017-2018#1] Deda\u3011\u9898\u89e3"
    },
    {
        "content": "\u9898\u610f\uff1a\u9898\u76ee\u7684\u610f\u601d\u5f88\u597d\u7406\u89e3\uff0c\u6709\u5f88\u591a\u7684\u5c0f\u5b66\u751f\uff0c\u5c0f\u5b66\u751f\u6709\u4e00\u4e2a\u5e74\u9f84\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a\u7ad9\u70b9\u4e0b\u53bb\u3002\u73b0\u5728\u6211\u4eec\u6309\u7167\u65f6\u95f4\u987a\u5e8f\u6765\u8be2\u95ee\u5728y\u8f66\u7ad9\u524d\u4e0b\u53bb\u7684\u5c0f\u5b66\u751f\u6700\u5c0f\u5e74\u9f84\u3002\n\u601d\u8def\uff1a\u601d\u8def\u548c\u4e0b\u9762\u7684\u5927\u4f6c\u7684\u4e00\u6837\uff0c\u6309\u7167\u5e74\u9f84\u6765\u5efa\u7acb\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u5728\u533a\u95f4\u91cc\u9762\u627e\u5230\u6ee1\u8db3\u503c\u5c0f\u4e8ey\u7684\u6700\u5c0f\u4e0b\u6807\u3002\n\u6ce8\u610f\uff1a\u8fd9\u4e2a\u9898\u76ee\u5728\u8bfb\u5165\u64cd\u4f5c\u7684\u65f6\u5019\u5343\u4e07\u4e0d\u8981\u7528cin\u8bfb\u53d6\u5b57\u7b26\u3002\u8fd9\u6837\u8d85\u65f65\u4e2a\u70b9\uff0c\u628amin\u51fd\u6570\u6539\u6210\u81ea\u5df1\u5199\u7684wrong\u56db\u4e2a\u70b9\u3002\u628acin\u6539\u6210scanf\uff0c\u5c31AC\u3002\u8fd8\u6709\u81ea\u5df1\u5199\u7684\u5feb\u8bfb\u7a0d\u5fae\u6bd4scanf\u5feb\u70b9\u3002\u597d\u50cf\u4e5f\u6ca1\u6709\u5176\u4ed6\u5751\u70b9\u4e86\u3002\u611f\u89c9\u697c\u4e0b\u5927\u4f6c\u4ee3\u7801\u592a\u5f3a\u4e86\uff0c\u6211\u6765\u8d34\u4e00\u4e2a\u4e66\u5199\u7b80\u5355\u70b9\u7684\u3002\uff08\u81ea\u5df1\u53ef\u4ee5\u4eb2\u6d4b\u4e00\u4e0b\uff09\u3002\n```c\n#include<bits/stdc++.h>\n#pragma GCC optimize(2)\n#define MAXN 200010\n#define maxnode 50010\n#define sigma_size 26\n#define md 1000000007\n#define INF 0x3f3f3f3f\n\nusing namespace std;\ntypedef long long LL;\n\nstruct node     //\u4ee5\u5e74\u9f84\u4e3a\u7ebf\u6bb5\u6811\uff0c\u5e76\u4e14\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6700\u5c0f\u7ad9\u70b9\n{                         //\u7ebf\u6bb5\u6811\u5224\u5b9a\u533a\u95f4\u662f\u5426\u5b58\u5728\u6bd4y\u5c0f\u7684\u503c\uff0c\u5982\u679c\u5b58\u5728\u627e\u5230\u6700\u65e9\u7684\u5c0f\u4e8ey\u7684\u4f4d\u7f6e\u70b9\u7684\u4e0b\u6807\n    int l,r;\n    int minn;\n}tr[MAXN<<2];\nint n,q;\n\ninline int _min(int a,int b){return a<b?a:b;}\n\ninline int read(){\n    char c;int f=0,x=0;while(!isdigit(c=getchar()))if(c==45)f=1;\n    while(isdigit(c))x=(x<<1)+(x<<3)+(c^48),c=getchar();return f?-x:x;\n}\n\nvoid build(int id,int l,int r)\n{\n    tr[id].l=l,tr[id].r=r,tr[id].minn=INF;\n    if(l==r)\n    {\n        tr[id].minn=INF;\n        return ;\n    }\n    int mid=(l+r)>>1;\n    build(id<<1,l,mid);\n    build(id<<1|1,mid+1,r);\n    tr[id].minn=_min(tr[id<<1].minn,tr[id<<1|1].minn);\n}\n\nvoid update(int id,int pp,int val)\n{\n    if(tr[id].l==tr[id].r)\n    {\n        tr[id].minn=_min(tr[id].minn,val);\n        return ;\n    }\n    int mid=(tr[id].l+tr[id].r)>>1;\n    if(pp<=mid)\n        update(id<<1,pp,val);\n    else\n        update(id<<1|1,pp,val);\n    tr[id].minn=_min(tr[id<<1].minn,tr[id<<1|1].minn);\n}\n\nint query(int id,int l,int r)\n{\n    if(tr[id].l>=l&&tr[id].r<=r)\n    {\n        return tr[id].minn;\n    }\n    int mid=(tr[id].l+tr[id].r)>>1;\n    int ans=INF;\n    if(l<=mid)\n        ans=_min(ans,query(id<<1,l,r));\n    if(r>mid)\n        ans=_min(ans,query(id<<1|1,l,r));\n    return ans;\n}\n\nint main()\n{\n    scanf(\"%d %d\",&n,&q);\n    build(1,1,n);                                                  //\u5b69\u5b50\u7684\u5e74\u9f84\u5927\u5c0f\u503c\u4e0d\u4f1a\u8d85\u8fc7\u5b69\u5b50\u7684\u6570\u91cf\n    char op[100];\n    int u,v;\n    for(int i=1;i<=q;i++)\n    {\n        scanf(\"%s\",op);\n        u=read(),v=read();\n        if(op[0]=='M')\n        {\n            update(1,v,u);      //\u5728u\u7ad9\uff0c\u5e74\u9f84\u4e3av\u7684\u4e0b\u8f66 ,\u5728v\u70b9\u66f4\u65b0u\n        }\n        else if(op[0]=='D')\n        {\n            if(query(1,v,n)>u)      //\u67e5\u627e\u5e74\u9f84\u533a\u95f4[v,n]\u4e4b\u95f4\u662f\u4e0d\u662f\u5b58\u5728\u8f66\u7ad9\u5c0f\u4e8eu\n            {\n                printf(\"-1\\n\");\n            }\n            else\n            {\n                int L=v,R=n;     //\u8fd9\u91cc\u9762\u4e8c\u5206\u7684\u5de6\u53f3\u533a\u95f4\u4e00\u5b9a\u8981\u6ce8\u610f\n                while(L<R)\n                {\n                    int mid=(L+R)>>1;\n                    if(query(1,L,mid)<=u)\n                        R=mid;\n                    else\n                        L=mid+1;\n                }\n                printf(\"%d\\n\",R);\n            }\n        }\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1575888290,
        "uid": 210155,
        "name": "abandentsky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4422 \u3010[COCI2017-2018#1] Deda\u3011"
    },
    {
        "content": "\u8003\u8651\u6c42\u89e3\u4ec0\u4e48\u5c31\u4ee5\u4ec0\u4e48\u5efa\u6811  \n\u90a3\u4e48\u5c31\u4ee5\u5e74\u9f84\u5efa\u6811  \n\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u7684\u4e0b\u8f66\u8f66\u7ad9  \n\u56e0\u4e3a\u4e0b\u8f66\u8f66\u7ad9\u8d8a\u524d\u5c31\u8d8a\u4f18  \n\nupdate\u90e8\u5206\u548c\u57fa\u7840\u7ebf\u6bb5\u6811\u4e00\u6837  \n\u91cd\u70b9\u662fquery\u90e8\u5206  \n\u6211\u4eec\u7ef4\u62a4\u7684\u4ec5\u4ec5\u662f\u533a\u95f4\u6709\u6ca1\u6709\u5728Y\u4e4b\u524d\u4e0b\u8f66\u8fd9\u4e2a\u4fe1\u606f  \n\u800c\u9700\u8981\u7684\u5e76\u4e0d\u662f\u6700\u65e9\u4e0b\u8f66\u7684\u4eba\uff0c\u662f\u6700\u5c0f\u5e74\u9f84  \n\u6240\u4ee5\u5e94\u8be5\u4e00\u76f4\u5411\u524d\u67e5\u627e  \n\u4ee3\u7801\u6709\u4e9b\u4e11\u964b  \n```cpp\n#include<bits/stdc++.h>\n#define lc (p<<1)\n#define rc (p<<1|1)\nusing namespace std;\nstruct Edge{\n\tint l,r,sum,place;\n}T[800010];\nvoid build(int p,int l,int r){\n\tT[p].l=l;T[p].r=r;\n\tT[p].sum=0x3f3f3f3f;\n\tif(l==r){\n\t\tT[p].place=l;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(lc,l,mid);\n\tbuild(rc,mid+1,r);\n}\ninline void pushup(int p){\n\tif(T[lc].sum<T[rc].sum){\n\t\tT[p].sum=T[lc].sum;\n\t\tT[p].place=T[lc].place;\n\t}\n\telse{\n\t\tT[p].sum=T[rc].sum;\n\t\tT[p].place=T[rc].place;\n\t}\n}\nvoid update(int p,int q,int v){\n\tif(T[p].l==T[p].r){\n\t\tT[p].sum=min(T[p].sum,v);\n\t\treturn;\n\t}\n\tint mid=(T[p].l+T[p].r)>>1;\n\tif(q<=mid)update(lc,q,v);\n\tif(q>mid)update(rc,q,v);\n\tpushup(p);\n} \npair<int,int> query(int p,int ql,int qr,int v){\n\tif(T[p].l==T[p].r){\n\t\treturn make_pair(T[p].sum,T[p].place);\n\t}\n\tif(ql<=T[p].l&&T[p].r<=qr){\n\t\tif(T[p].sum<=v){\n\t\t\tif(T[lc].sum<=v)return query(lc,ql,qr,v);\n\t\t\treturn query(rc,ql,qr,v);\n\t\t}\n\t\t//printf(\"%d %d %d %d\\n\",T[p].l,T[p].r,T[p].sum,T[p].place);\n\t\treturn make_pair(0x3f3f3f3f,0); \n\t}\n\tint mid=(T[p].l+T[p].r)>>1;\n\tpair<int,int>ans(0x3f3f3f3f,0);\n\tif(ql<=mid){\n\t\tans=query(lc,ql,qr,v);\n\t\tif(ans.first<=v){\n\t\t\t//printf(\"%d %d %d %d\\n\",T[p].l,T[p].r,ans.first,ans.second);\n\t\t\treturn ans;\n\t\t}\n\t}\n\tif(qr>mid){\n\t\tans=query(rc,ql,qr,v);\n\t\tif(ans.first<=v){\n\t\t\t//printf(\"%d %d %d %d\\n\",T[p].l,T[p].r,ans.first,ans.second);\n\t\t\treturn ans;\n\t\t}\n\t}\n\t//printf(\"%d %d %d %d\\n\",T[p].l,T[p].r,ans.first,ans.second);\n\treturn ans;\n}\nint main(){\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tbuild(1,1,n);\n\tfor(int i=1;i<=m;++i){\n\t\tchar s[3];scanf(\"%s\",s);\n\t\tif(s[0]=='M'){\n\t\t\tint x,age;\n\t\t\tscanf(\"%d%d\",&x,&age);\n\t\t\tupdate(1,age,x);\n\t\t}\n\t\tif(s[0]=='D'){\n\t\t\tint x,age;\n\t\t\tscanf(\"%d%d\",&x,&age);\n\t\t\tpair<int,int>ans=query(1,age,n,x);\n\t\t\tif(ans.first>x)printf(\"-1\\n\");\n\t\t\telse printf(\"%d\\n\",ans.second);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1572254834,
        "uid": 138543,
        "name": "\u6597\u795e_\u541b\u83ab\u7b11",
        "ccfLevel": 0,
        "title": "\u4e8c\u7ef4\u504f\u5e8f-1"
    },
    {
        "content": "\u8003\u8bd5\u8fd8\u60f3\u7528\u7ebf\u6bb5\u6811\uff0c\u6811\u72b6\u6570\u7ec4\u4ec0\u4e48\u7684\uff0c\u8fd8\u6253\u4e86\u79bb\u6563\u5316\uff0c\u6811\u72b6\u6570\u7ec4\u90fd\u5199\u597d\u4e86\u3002\u7136\u800c\u540e\u9762\u53d1\u73b0\u5e76\u4e0d\u80fd\uff08\u597d\u50cf\u53c8\u53ef\u4ee5\uff1f\uff09\u3002\u4e8e\u662f\u5f00\u59cb\u66b4\u529b\u3002\u66b4\u529b\u7684\u5206\u6570\u5f88\u9707\u60ca\u3002\u5bf9\u6b64\u611f\u5230\u60ca\u5f02...\n\n\u7ed3\u679c\u6b63\u89e3\u7ebf\u6bb5\u6811\u677f\u9898\u3002\n\n\u7531\u4e8e\u5e74\u9f84\u5f88\u5c0f\uff0c\u6211\u4eec\u7528\u5b83\u4f5c\u4e3a\u7ebf\u6bb5\u6811\u7684\u4e0b\u6807\uff08\u7136\u540e\u8003\u8bd5\u5c31\u6ca1\u60f3\u5230\uff09\u3002\u7136\u540e\u6211\u4eec\u9047\u5230\u67e5\u8be2\uff0c\u4ec5\u9700\u67e5\u8be2$B$\u5230$N$\u533a\u95f4\u4e2d\u8f66\u7ad9\u662f\u5426$Y$\uff0c\u8fd4\u56de\u90a3\u4e2a\u4e0b\u6807\u3002\u6700\u540e\u52a0\u4e2a\u526a\u679d\uff1a\u5728\u524d\u9762\u533a\u95f4\u641c\u5230\u7b54\u6848\u4fbf\u4e0d\u7528\u7ba1\u540e\u9762\u3002\u611f\u89c9\u8fd8\u771f\u633a\u7b80\u5355\u3002\u5176\u5b9e\u5c31\u662f\u6539\u53d8\u4e0b\u6807\u8fd9\u4e00\u4e2a\u70b9\u3002  \n\n\u5b9e\u73b0\u4e5f\u5c31\u5f88\u7b80\u5355\u4e86\uff1a  \n```\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nstruct qwe{\n\tll l,r,v;\n}t[8000000];\nvoid build(ll p,ll x,ll y)\n{\n\tt[p].l=x;\n\tt[p].r=y;\n\tt[p].v=1e9;\n\tif(x==y)return;\n\tbuild(p*2,x,(x+y)/2);\n\tbuild(p*2+1,(x+y)/2+1,y);\n}\n\nvoid change(ll p,ll x,ll d)\n{\n\tif(t[p].l==t[p].r)\n\t{\n\t\tt[p].v=d;\n\t\treturn;\n\t}\n\tll mid=(t[p].l+t[p].r)/2;\n\tif(x<=mid)change(p*2,x,d);\n\telse change(p*2+1,x,d);\n\tt[p].v=min(t[p*2].v,t[p*2+1].v);\n}\n\nll solve(ll p,ll x,ll y)\n{\n\tif(x<=t[p].l&&t[p].r<=y)return t[p].v;\n\t\n\tll mid=(t[p].l+t[p].r)/2;\n\tll ans=1e9;\n\tif(x<=mid)ans=solve(p*2,x,y);\n\tif(y>mid)ans=min(ans,solve(p*2+1,x,y));\n\t\n\treturn ans;\n}\n\nll gs(ll p,ll x,ll y,ll z)\n{\n\tif(t[p].l==t[p].r)return t[p].l;\n\tif(x<=t[p].l&&y>=t[p].r)\n\t{\n\t\tif(t[p*2].v<=z)return gs(p*2,x,y,z);\n\t\telse return gs(p*2+1,x,y,z);\n\t}\n\tll mid=(t[p].l+t[p].r)/2;\n\tll ans=0;\n\tif(x<=mid&&solve(p*2,x,y)<=z)return gs(p*2,x,y,z);\n\telse return gs(p*2+1,x,y,z);\n\t\n\treturn ans; \n}\nll n,m;\nchar op;\nll x,y,z;\nint main()\n{\n\tscanf(\"%lld%lld\",&n,&m);\n\tbuild(1,1,n);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>op;\n\t\tscanf(\"%lld%lld\",&x,&y);\n\t\tif(op=='M')change(1,y,x);\n\t\telse \n\t\t{\n\t\t\tif(x<solve(1,y,n))printf(\"-1\\n\");\n\t\t\telse printf(\"%lld\\n\",gs(1,y,n,x));\n\t\t}\n\t}\n}\n```\n",
        "postTime": 1615817601,
        "uid": 247269,
        "name": "MSqwq",
        "ccfLevel": 0,
        "title": "P4422 [COCI2017-2018#1] Deda"
    },
    {
        "content": "\u8fd9\u662f\u4e8c\u7ef4\u504f\u5e8f\uff0c\u6ce8\u610f\u5230\u6bcf\u4e2a\u5c0f\u670b\u53cb\u7684\u5e74\u9f84\u4e3a$1-n$\u4e0d\u540c\n\n\u53ef\u4ee5\u6309\u7167\u5c0f\u670b\u53cb\u7684\u5e74\u9f84\u4e3a\u7ebf\u6bb5\u6811\u7684\u4e0b\u6807\uff0c\u7ef4\u62a4\u4e00\u6bb5\u5c0f\u670b\u53cb\u533a\u95f4\u4e2d\u6700\u5c0f\u7684\u7ad9\u53f0\n\n\u6bcf\u6b21$update$\u66b4\u529b\u628a\u6240\u6709\u5305\u542b\u8fd9\u4e2a\u5c0f\u670b\u53cb\u7684\u533a\u95f4\u66f4\u65b0\uff0c\u8fd9\u4e2a\u90e8\u5206\u7a33\u5b9a$O(nlogn)$\n\n\u6bcf\u6b21$query$\u5148\u770b\u770b\u80fd\u4e0d\u80fd\u5f80\u5de6\u627e\u5230\u6ee1\u8db3\u7684\u5c0f\u670b\u53cb\uff0c\u4e0d\u884c\u770b\u770b\u5f80\u53f3\u8d70\u53ef\u4e0d\u53ef\u4ee5\n\n\u7b97\u662f\u4e00\u4e2a\u5e38\u6570\u6bd4\u8f83\u5927\u7684\u7ebf\u6bb5\u6811\n\nCode\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define maxn 200010\n#define ls rt << 1\n#define rs rt << 1 | 1\nusing namespace std;\nconst int inf = 2000000000;\nstruct Seg{\n\tint l, r, sum;\n}seg[maxn << 3];\nint n, m;\n\ninline int read(){\n\tint s = 0, w = 1;\n\tchar c = getchar();\n\tfor (; !isdigit(c); c = getchar()) if (c == '-') w = -1;\n\tfor (; isdigit(c); c = getchar()) s = (s << 1) + (s << 3) + (c ^ 48);\n\treturn s * w;\n}\n\nvoid pushup(int rt){ seg[rt].sum = min(seg[ls].sum, seg[rs].sum); }\n\nvoid build(int rt, int l, int r){\n\tseg[rt].l = l, seg[rt].r = r, seg[rt].sum = inf;\n//\tprintf(\"BUild:%d %d %d\\n\", seg[rt].l, seg[rt].r, seg[rt].sum);\n\tif (l == r) return;\n\tint mid = (l + r) >> 1;\n\tbuild(ls, l, mid), build(rs, mid + 1, r);\n}\n\nvoid update(int rt, int y, int x){\n\tif (seg[rt].r < y || seg[rt].l > y) return;\n\tseg[rt].sum = min(seg[rt].sum, x);\n//\tprintf(\"Update:%d %d %d\\n\", seg[rt].l, seg[rt].r, seg[rt].sum);\n\tupdate(ls, y, x), update(rs, y, x);\n}\n\nint query(int rt, int y, int x){\n\tif (seg[rt].r < y) return inf;\n//\tprintf(\"Query:%d %d %d\\n\", seg[rt].l, seg[rt].r, seg[rt].sum);\n\tif (seg[rt].l == seg[rt].r) return seg[rt].l;\n\tint ans = inf;\n\tif (seg[ls].sum <= x) ans = min(ans, query(ls, y, x));\n\tif (ans < inf) return ans;\n//\tprintf(\"%d\\n\", x);\n\tif (seg[rs].sum <= x) ans = min(ans, query(rs, y, x));\n\treturn ans;\n}\n\nint main(){\n\tfreopen(\"deda.in\", \"r\", stdin);\n\tfreopen(\"deda.out\", \"w\", stdout);\n\tn = read(), m = read();\n\tbuild(1, 1, n);\n\twhile (m--){//printf(\"%d\\n\", seg[3].sum);\n\t\tchar opt = getchar();\n\t\tfor (; opt != 'D' && opt != 'M'; opt = getchar());\n\t\tint x = read(), y = read();\n\t\tif (opt == 'D'){\n\t\t\tint ans = inf;\n\t\t\tif (seg[1].sum <= x) ans = min(ans, query(1, y, x));\n\t\t\tif (ans == inf) puts(\"-1\"); else printf(\"%d\\n\", ans);\n\t\t} else update(1, y, x);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1603356383,
        "uid": 51719,
        "name": "ModestCoder_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4422 \u3010[COCI2017-2018#1] Deda\u3011"
    },
    {
        "content": "~~kdtree\u88f8\u9898~~\n\n\u663e\u7136\u8fd9\u9898\u662f\u4e2a\u4e8c\u7ef4\u504f\u5e8f\uff0c\u628a\u5e74\u9f84\u8bb0\u4f5cage[],\u8f66\u7ad9\u8bb0\u4f5cstop[],\u5373\u8be2\u95ee\u6240\u6709x\u6ee1\u8db3age[x]>=queryage\u4e14stop[x]<=querystop\u4e2dage[x]\u7684\u6700\u5c0f\u503c\n\nq<=2*10^5 \u663e\u7136\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u76f4\u63a5\u786c\u4e0a\u6811\u5957\u6811 ~~\u6240\u4ee5\u6211\u9009\u62e9kdtree~~\n\n\u628a\u6bcf\u4e2a\u63d2\u5165\u64cd\u4f5c\u53d8\u4f5c\u4e8c\u7ef4\u5e73\u9762\u7684\u70b9(stop,age)\u4e14\u70b9\u6743\u4e3aage\n\n\u8be2\u95ee\u5c31\u662f\u67e5\u4ee5(-\u221e,queryage)\u4e3a\u5de6\u4e0a\u89d2,(querystop,+\u221e)\u4e3a\u53f3\u4e0b\u89d2\u7684\u77e9\u5f62\u4e2d\u7684\u70b9\u6743\u6700\u5c0f\u503c\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing std::max;\nusing std::min;\nusing std::nth_element;\nconst int K=2,N=2e5+10,INF=2147483647;\nint n,q,f;\nstruct point\n{\n\tint d[K],w;\n\tinline point(int a=0,int b=0,int c=0):w(c){d[0]=a;d[1]=b;}\n\tinline const bool operator<(const point &p)const\n\t{\n\t\treturn d[f]<p.d[f];\n\t}\n}a[N];\nclass KD_Tree\n{\n\tstatic const double alpha=0.75;\n\tprivate:\n\t\tstruct tree\n\t\t{\n\t\t\tint size;\n\t\t\ttree *son[2];\n\t\t\tpoint mx,mn,range;\n\t\t\tinline const void pushup()\n\t\t\t{\n\t\t\t\tsize=son[0]->size+1+son[1]->size;\n\t\t\t\tmn.w=min(range.w,min(son[0]->mn.w,son[1]->mn.w));\n\t\t\t\tfor (int i=0;i<K;i++)\n\t\t\t\t\tmn.d[i]=min(range.d[i],min(son[0]->mn.d[i],son[1]->mn.d[i])),\n\t\t\t\t\tmx.d[i]=max(range.d[i],max(son[0]->mx.d[i],son[1]->mx.d[i]));\n\t\t\t}\n\t\t\tinline const bool unbalanced()\n\t\t\t{\n\t\t\t\treturn son[0]->size>size*alpha||son[1]->size>size*alpha;\n\t\t\t}\n\t\t\tinline const bool out(const point &lower,const point &upper)\n\t\t\t{\n\t\t\t\tfor (int i=0;i<K;i++)\n\t\t\t\t\tif (mn.d[i]>upper.d[i]||mx.d[i]<lower.d[i])\n\t\t\t\t\t\treturn 1;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tinline const bool in(const point &lower,const point &upper)\n\t\t\t{\n\t\t\t\tfor (int i=0;i<K;i++)\n\t\t\t\t\tif (!(mn.d[i]>=lower.d[i]&&mx.d[i]<=upper.d[i]))\n\t\t\t\t\t\treturn 0;\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tinline const bool at(const point &lower,const point &upper)\n\t\t\t{\n\t\t\t\tfor (int i=0;i<K;i++)\n\t\t\t\t\tif (!(range.d[i]>=lower.d[i]&&range.d[i]<=upper.d[i]))\n\t\t\t\t\t\treturn 0;\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}*root,memory_pool[N],*recycle[N],*tail,*null;\n\t\tint top,cnt,flag,mn;\n\t\tinline const void init()\n\t\t{\n\t\t\ttail=memory_pool;\n\t\t\tnull=tail++;\n\t\t\tnull->mn.w=INF;\n\t\t\troot=null->son[0]=null->son[1]=null;\n\t\t\tfor (int i=0;i<K;i++)null->mn.d[i]=INF,null->mx.d[i]=-INF;\n\t\t}\n\t\tinline tree *spawn(const point &x)\n\t\t{\n\t\t\ttree *p=top?recycle[--top]:tail++;\n\t\t\tp->son[0]=p->son[1]=null;\n\t\t\tp->range=p->mn=p->mx=x;\n\t\t\tp->size=1;\n\t\t\treturn p;\n\t\t}\n\t\tinline const void reuse(tree *p)\n\t\t{\n\t\t\trecycle[top++]=p;\n\t\t}\n\t\tinline const void travel(tree *p)\n\t\t{\n\t\t\tif (p==null)return;\n\t\t\ttravel(p->son[0]);\n\t\t\ta[++cnt]=p->range;reuse(p);\n\t\t\ttravel(p->son[1]);\n\t\t}\n\t\tinline tree *build(int l,int r,int d)\n\t\t{\n\t\t\tif (l>r)return null;\n\t\t\tint mid=l+r>>1;f=d;\n\t\t\tnth_element(a+l,a+mid,a+r+1);\n\t\t\ttree *p=spawn(a[mid]);\n\t\t\tif (l==r)return p;\n\t\t\tp->son[0]=build(l,mid-1,(d+1)%K);\n\t\t\tp->son[1]=build(mid+1,r,(d+1)%K);\n\t\t\tp->pushup();\n\t\t\treturn p;\n\t\t}\n\t\tinline const void rebuild(tree *&p,int d)\n\t\t{\n\t\t\tcnt=0;\n\t\t\ttravel(p);\n\t\t\tp=build(1,cnt,d);\n\t\t}\n\t\tinline tree **insert(tree *&p,const point &x,int d)\n\t\t{\n\t\t\tif (p==null)return p=spawn(x),&null;\n\t\t\ttree **bad=insert(p->son[p->range.d[d]<x.d[d]],x,(d+1)%K);\n\t\t\tp->pushup();\n\t\t\tif (p->unbalanced())bad=&p,flag=d;\n\t\t\treturn bad;\n\t\t}\n\t\tinline const void query(tree *p,const point &x,const point &y)\n\t\t{\n\t\t\tif (p==null)return;\n\t\t\tif (p->mn.w>=mn)return;\n\t\t\tif (p->out(x,y))return;\n\t\t\tif (p->in(x,y))return (void)(mn=p->mn.w);\n\t\t\tif (p->at(x,y))mn=min(mn,p->range.w);\n\t\t\tquery(p->son[0],x,y);query(p->son[1],x,y);\n\t\t}\n\tpublic:\n\t\tinline KD_Tree(){init();}\n\t\tinline const void insert(int x,int y)\n\t\t{\n\t\t\ttree **bad=insert(root,point(x,y,y),flag=0);\n\t\t\tif (*bad==null)return;\n\t\t\trebuild(*bad,flag);\n\t\t}\n\t\tinline const int query(int x,int y)\n\t\t{\n\t\t\tmn=INF;\n\t\t\tquery(root,point(-INF,y),point(x,INF));\n\t\t\treturn mn^INF?mn:-1;\n\t\t}\n}kdt;\nint main()\n{\n\tscanf(\"%d%d\",&n,&q);\n\tchar opt;for (int x,y;q--;)\n\t\tif (scanf(\" %c%d%d\",&opt,&x,&y),opt=='M')kdt.insert(x,y);\n\t\telse printf(\"%d\\n\",kdt.query(x,y));\n\treturn 0;\n}\n```",
        "postTime": 1566271509,
        "uid": 14374,
        "name": "zhengrunzhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4422 \u3010[COCI2017-2018#1] Deda\u3011"
    },
    {
        "content": "\u8fd9\u9898\u662f\u5c0fJF\u5728\u5b66\u957f\u7684\u8003\u8bd5\u9898\u91cc\u89c1\u5230\u7684\uff0c\u542c\u540c\u7ea7\u7684dalao\u8bf4\u5206\u5757\u8981n log n sqrt n ,\u4e0d\u4fe1\u90aa\u7684JF\u5c31\u5199\u4e86\u4e2an sqrt n \u7684\u505a\u6cd5\uff0c\u4ee3\u7801\u91cf\u81ea\u7136\u4e0d\u5927, \u601d\u8def\u4e5f\u4e0d\u96be\u60f3\u3002\u8fde\u5199\u5e26\u8c03\u4e5f\u5c31\u82b1\u4e8620\u5206\u949f\uff0c\u4e0b\u9762\u5c31\u8bf4\u4e00\u4e0b\u5177\u4f53\u601d\u8def\u3002\n\n\u7ef4\u62a4\u4e00\u4e0b\u5feb\u5185\u7684\u6700\u5c0f\u503c\uff0c\u6563\u5757\u76f4\u63a5\u66b4\u529b\u5faa\u73af\uff0c \u6574\u5757\u770b\u7ef4\u62a4\u7684\u6700\u5c0f\u503c\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e\u67e5\u8be2\u503c\uff0c\u5982\u679c\u4e0d\u7b26\u5408\u7684\u8bdd\u5c31\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7\uff0c\u5426\u5219\u7b54\u6848\u5c31\u4e00\u5b9a\u5728\u8be5\u5757\u4e2d\uff0c\u66b4\u529b\u5faa\u73af\u5373\u53ef\uff0c\u590d\u6742\u5ea6 n sqrt n \uff0c \u800c\u4e14\u8fd9\u4e2a\u6700\u5c0f\u503c\u662f\u975e\u5e38\u597d\u7ef4\u62a4\u7684\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u6700\u591a\u88ab\u4fee\u6539\u4e00\u6b21\uff0c\u6240\u4ee5\u76f4\u63a5\u53d6min\u5c31\u597d\u4e86\uff0c\u4fee\u6539\u7684\u590d\u6742\u5ea6O1\n\n\u6240\u4ee5\u8be5\u7b97\u6cd5\u7684\u4fee\u6539\u662fO1 \u67e5\u8be2\u662f O(sqrt n) \u8db3\u4ee5\u901a\u8fc7\u6b64\u9898\n\n\u53e6\uff1a\u56e0\u4e3a\u8981\u6c42\u7684\u662f\u7b2c\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u6570\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u5206\u5757\u67e5\u8be2\u7684\u65f6\u5019\u8981\u6ce8\u610f\u6563\u5757\u548c\u6574\u5757\u7684\u67e5\u8be2\u987a\u5e8f\uff0c \u4e00\u5f00\u59cbsb\u7684JF\u8fd8\u56e0\u4e3a\u4e60\u60ef\u5148\u67e5\u6563\u5757\u518d\u67e5\u6574\u5757WA\u6389\u4e86\uff0c\u987a\u5e8f\u5e94\u8be5\u662f\uff1a \u5de6\u6563\u5757 -> \u4e2d\u95f4\u7684\u6574\u5757 -> \u53f3\u6563\u5757\n\n\u7136\u540e\u5c31\u6ca1\u4ec0\u4e48\u5566\uff0c\u6709\u4ec0\u4e48\u95ee\u9898\u53ef\u4ee5\u79c1\u4fe1\u5c0f\u849f\u84bb\u3002\n\n\u90a3\u4e48\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n#include<iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#define maxn 200010\n#define re register\n#define FOR(i, l, r) for(re int i = l; i <= r; ++i)\nusing namespace std;\n\nint n, m, c, r, x, y, z, k;\nint sq;\nint a[maxn], b[maxn], minn[2002];\nchar t;\n\ninline void in(re int &x){\n    x=0;int bl = 1;char c=getchar();\n    while(c<'0'||c>'9'){\n    \tif(c == '-')\n    \t  bl = -1;\n        c=getchar();\n    }\n    while(c<='9'&&c>='0'){\n        x=(x<<1)+(x<<3)+(c^'0');\n        c=getchar();\n    }\n    x *= bl;\n}\n\nvoid out(re int a){\n\tif(a < 0) {\n\t\tputchar('-');\n\t\ta = -a;\n\t}\n    if(a>=10)out(a/10);\n    putchar(a%10+'0');\n}\n\n\ninline int query(int x, int y, int k) {\n\tFOR(i, x, min(y, b[x]*sq)) //\u5de6\u6563\u5757\n\t  if(a[i] <= k)\n\t    return i;\n\tFOR(i, b[x]+1, b[y]-1) { //\u6574\u5757\n\t\tif(minn[i] > k) //\u5982\u679c\u4e0d\u7b26\u5408\u76f4\u63a5\u8df3\u8fc7\n\t\t  continue;\n\t\tFOR(j, (i-1)*sq+1, i*sq) //\u66b4\u529b\u627e\n\t\t  if(a[j] <= k)\n\t\t    return j; \n\t}\t\n\tif(b[x] != b[y]) //\u53f3\u6563\u5757\n\t  FOR(i, (b[y]-1)*sq+1, y)\n\t    if(a[i] <= k)\n\t      return i;\n\treturn -1;\n}\n\nint main(){\n\tin(n), in(m);\n\tsq = sqrt(n);\n\tFOR(i, 1, sq+100)\n\t  minn[i] = 0x7fffffff;\n\tFOR(i, 1, n)\n\t  a[i] = 0x7fffffff, b[i] = (i-1)/sq+1, minn[b[i]] = min(minn[b[i]], a[i]);\n\tFOR(i, 1, m) {\n\t\tcin >> t;\n\t\tif(t == 'M') {\n\t\t\tin(x), in(y); // y\u6539\u6210x; \n\t\t\ta[y] = x;\n\t\t\tminn[b[y]] = min(minn[b[y]], x); //\u7ef4\u62a4\u6700\u5c0f\u503c\n\t\t}\n\t\telse {\n\t\t\tin(k), in(x);\n\t\t\tout(query(x, n, k));\n\t\t\tputchar(10);\n\t\t}\n\t}\n\n} \n```",
        "postTime": 1544182023,
        "uid": 66965,
        "name": "Juan_feng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4422 \u3010[COCI2017-2018#1] Deda\u3011"
    },
    {
        "content": "\u4e00\u9053\u6bd4\u8f83\u663e\u7136\u7684\u7ebf\u6bb5\u6811\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u6c42**\u5927\u4e8e\u7b49\u4e8e $B$ \u4e14\u5728\u7b2c $Y$ \u7ad9(\u5305\u542b\u7b2c $Y$ \u7ad9)\u4ee5\u524d\u4e0b\u8f66\u7684\u6700\u5e74\u8f7b\u7684\u5c0f\u5b69\u662f\u591a\u5927**\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u628a\u5e74\u9f84\u4f5c\u4e3a\u4e0b\u89d2\u6807\uff0c\u5b58\u662f\u5728\u7b2c\u51e0\u7ad9\u4e0b\u7684\u8f66\uff0c\u6bcf\u6b21\u67e5\u627e\u5e74\u9f84\u4e3a $B-N$ \u4e2d\u7684\u7b2c\u4e00\u4e2a\u5728\u5c0f\u4e8e\u7b49\u4e8e $Y$ \u7ad9\u4e0b\u8f66\u7684\u5c0f\u5b69\u7684\u5e74\u9f84\u3002\n\n\u6211\u4eec\u7528 $mins_{rt}$ \u5b58\u4ee5 $rt$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u503c\u6700\u5c0f\u7684\u662f\u51e0\uff0c\u7136\u540e\u6bcf\u6b21\u67e5\u627e\u5c31\u5148\u627e\u51fa\u6bcf\u4e2a\u5408\u6cd5\u5b50\u6811\uff0c\u518d\u5728\u8fd9\u4e2a\u5b50\u6811\u4e2d\u5224\u65ad\u5de6\u5b50\u6811\u7684\u6700\u5c0f\u503c\u662f\u5426\u5408\u6cd5\uff0c\u5982\u679c\u5408\u6cd5\u5c31\u8fdb\u5de6\u5b50\u6811\uff0c\u5426\u5219\uff0c\u8fdb\u53f3\u5b50\u6811\uff0c\u6700\u540e\u8fd4\u56de\u4e0b\u89d2\u6807\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u627e\u6700\u5c0f\u7684\uff0c\u6240\u4ee5\u4ece\u5de6\u5b50\u6811\u5f00\u59cb\uff0c\u4e4b\u540e\u518d\u5199\u4e00\u4e2a\u5355\u70b9\u4fee\u6539\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#define N 200010\n#define INF 0x3f3f3f3f\n\nusing namespace std;\n\nint mins[N<<2],ans;\n\nvoid pushup(int rt)\n{\n\tmins[rt]=min(mins[rt<<1],mins[rt<<1|1]);\n}\n\n\nvoid update(int p,int x,int l,int r,int rt)\t//\u5355\u70b9\u4fee\u6539\uff1amins[p]=x \n{\n\tif(l==r)\n\t{\n\t\tmins[rt]=x;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(p<=mid) update(p,x,l,mid,rt<<1);\n\telse update(p,x,mid+1,r,rt<<1|1);\n\tpushup(rt);\n}\n\nint Find(int x,int l,int r,int rt)\t//\u67e5\u627e\u4ee5rt\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u7684\u7b2c\u4e00\u4e2a<=x\u7684\u4e0b\u89d2\u6807 \n{\n\tif(mins[rt]>x) return INF;\n\telse if(l==r) return l;\n\tint mid=(l+r)>>1;\n\tif(mins[rt<<1]<=x) return Find(x,l,mid,rt<<1);\n\telse return Find(x,mid+1,r,rt<<1|1);\n}\n\nvoid query(int L,int R,int x,int l,int r,int rt)\t//\u5728\u6574\u4e2a\u6811\u4e2d\u67e5\u627e\u8303\u56f4\u5728L-R\u5185\u7684\u5b50\u6811 \n{\n\tif(L<=l&&r<=R)\n\t{\n\t\tans=Find(x,l,r,rt);\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(L<=mid)\n\t{\n\t\tquery(L,R,x,l,mid,rt<<1);\n\t\tif(ans!=INF) return;\n\t}\n\tif(mid<R) query(L,R,x,mid+1,r,rt<<1|1); \n}\n\nint read()\t//\u5feb\u8bfb \n{\n\tint x=0;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9') c=getchar();\n\twhile(c>='0'&&c<='9') x=x*10+c-'0',c=getchar();\n\treturn x;\n}\n\nint main()\n{\n\tint n=read(),m=read();\n\tmemset(mins,0x7f,sizeof(mins));\n\twhile(m--)\n\t{\n\t\tchar ch[5];\n\t\tscanf(\"%s\",ch);\n\t\tint x=read(),y=read();\n\t\tif(ch[0]=='M')\n\t\t\tupdate(y,x,1,n,1);\t//\u5e74\u9f84\u4e3ay\u7684\u5728\u7b2cx\u7ad9\u4e0b\u8f66\n\t\telse\n\t\t{\n\t\t\tquery(y,n,x,1,n,1);\t//\u5728y-n\u5c81\u4e2d\u627e\u7b2c\u4e00\u4e2a<=x\u7684\u5e74\u9f84 \n\t\t\tif(ans==INF) puts(\"-1\");\n\t\t\telse printf(\"%d\\n\",ans);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1590217353,
        "uid": 211300,
        "name": "Acestar",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4422 \u3010[COCI2017-2018#1] Deda\u3011"
    }
]