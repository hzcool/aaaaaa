[
    {
        "content": "## \u88f8\u7684\u5e76\u67e5\u96c6+map\n## \uff08STL\u5927\u6cd5\u597d\uff01\uff09\n\n\n------------\n\u9898\u76ee\u80cc\u666f\u548c\u9898\u76ee\u63cf\u8ff0~~\u975e\u5e38\u76f4\u63a5\u5730~~\u544a\u8bc9\u6211\u4eec\uff1a\n\n\u8fd9\u5c31\u662f\u4e2a\u5e76\u67e5\u96c6\u6a21\u677f\uff0c\u53ea\u4e0d\u8fc7\u6539\u6210\u4e86\u5b57\u7b26\u4e32\n\n\n------------\n\u56e0\u6b64\u6211\u4eec\u7684\u95ee\u9898\u5c31\u6210\u4e86\u5982\u4f55\u5904\u7406\u5b57\u7b26\u4e32\n\n\u5f53\u7136\uff0c\u53ef\u4ee5\u7528\u7ed3\u6784\u4f53\uff0c\u7ed3\u6784\u4f53\u7684\u6210\u5458\u5305\u542b\u7f16\u53f7\u548c\u540d\u5b57\n\n\u4f46\u662f\uff0c\u8fd8\u6709\u4e00\u4e2a\u66f4\u597d\u7528\u7684\u4e1c\u897f:STL\u4e2d\u7684**map**\n\n\u76f4\u63a5**\u5efa\u7acb\u4e00\u4e2a\u7531\u5b57\u7b26\u4e32\u5230\u5b57\u7b26\u4e32\u7684\u6620\u5c04**\u4ee3\u66ff\u6570\u7ec4\n\n\u7136\u540e\u628a\u5e76\u67e5\u96c6\u7684\u6a21\u677f\u7c98\u4e0a\u53bb\u6539\u4e00\u6539\u5c31\u6210\u4e86\n\n\uff08\u6ca1\u9519\uff0c\u5c31\u662f\u8fd9\u4e48\u6c34\uff09\n\n------------\n\u4ee3\u7801\u6765\u4e86~\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<map>//map\u5e93\nusing namespace std;\nmap<string,string> a;//\u5efa\u7acb\u6620\u5c04\nstring fin(string x){//\u67e5\u627e\u5b57\u7b26\u4e32x\u7684\u7956\u5148\n\tif(a[x]==x) return x;\n\telse return a[x]=fin(a[x]);//\u8def\u5f84\u538b\u7f29\n}\nint main(){\n\tint n,m,k;\n\tstring s1,s2;//s1,s2\u53ef\u91cd\u590d\u4f7f\u7528\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;++i){\n\t\tcin>>s1;//\u9009\u624b\u540d\u5b57\n\t\ta[s1]=s1;//\u6bcf\u4e2a\u4eba\u7684\u7956\u5148\u521d\u59cb\u5316\u4e3a\u81ea\u5df1\n\t}\n\tfor(int i=1;i<=m;++i){\n\t\tcin>>s1>>s2;//\u4e24\u4f4d\u9009\u624b\n\t\tstring x1=fin(s1),x2=fin(s2);//\u5408\u5e76\n\t\tif(x1!=x2) a[x1]=x2;\n\t}\n\tcin>>k;\n\tfor(int i=1;i<=k;++i){\n\t\tcin>>s1>>s2;\n\t\tstring x1=fin(s1),x2=fin(s2);//\u67e5\u8be2\n\t\tif(x1!=x2) printf(\"No.\\n\");\n\t\telse printf(\"Yes.\\n\");\n\t}\n\treturn 0;//\u540e\u8bdd\uff1aSTL\u5927\u6cd5\u597d\uff01\n}\n```\n\n\n------------\n\u4f60AC\u4e86\u5417\uff1fAC\u4e86\u5c31\u70b9\u4e2a\u8d5e\u5457",
        "postTime": 1578057605,
        "uid": 238408,
        "name": "vectorwyx",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2256 \u3010\u4e00\u4e2d\u6821\u8fd0\u4f1a\u4e4b\u767e\u7c73\u8dd1\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P2256)\n\n[\u5e76\u67e5\u96c6\u6a21\u677f\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3367)\n\n**\u8fd9\u9053\u9898\u7684\u7b2c\u4e00\u773c\u5c31\u662f\uff1a\u5b57\u7b26\u4e32+\u677f\u5b50\u5e76\u67e5\u96c6\uff01\uff01\uff01**\n\n\u9075\u5faa\u653f\u6cbb\u8001\u5e08\u7684\u6559\u5bfc\uff0c\u672c\u9898\u89e3\u5c06\u4ece\u662f\u4ec0\u4e48\uff0c\u4e3a\u4ec0\u4e48\uff0c\u600e\u4e48\u505a\u4e09\u4e2a\u65b9\u9762\u6765\u4e3a\u5927\u5bb6\u9610\u8ff0\u5e76\u67e5\u96c6\u7684\u76f8\u5173\u77e5\u8bc6\u4ee5\u53ca\u672c\u9898\u505a\u6cd5\u3002\n\n**\u597d\u4e86\uff0c\u95f2\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0d\u4f1a\u8fd9\u9053\u9898\u7684\u7ae5\u978b\u4eec\u8ddf\u6211\u6765\uff01**\n\n\n\n------------\n\n\n### STEP 1 \u4ec0\u4e48\u662f\u5e76\u67e5\u96c6\n```\n\u5e76\u67e5\u96c6\uff0c\u662f\u7528\u6765\u6c42\u4e24\u8005\u662f\u5426\u540c\u5c5e\u4e00\u4e2a\u5355\u4f4d\u7684\u4e00\u79cd\u601d\u8def\u3002\n\u4ec5\u7531\u4e00\u4e2a\u5185\u5bb9\u4ec5\u4ec5\u4e24\u884c\u5de6\u53f3\u7684\u51fd\u6570\u4ee5\u53ca\u4e00\u4e2a\u6570\u7ec4\u5c31\u53ef\u4ee5\u5b9e\u73b0\u3002\n\u4f18\u70b9\uff1a\u65b9\u4fbf\u5feb\u6377\uff0c\u4f7f\u7528\u6709\u6548\u3002\n\u7f3a\u70b9\uff1aemmm\u2026\u2026\u6ca1\u6709\u4ec0\u4e48\u5927\u7684\u7f3a\u70b9\uff0c\u975e\u8981\u6709\u7684\u8bdd\u53ef\u80fd\u5c31\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u6709\u4e9b\u9ad8\uff0c\n     \u4f46\u662f\u8fd9\u4e2a\u662f\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u5c0f\u4f18\u5316\u89e3\u51b3\u54d2\uff01\n```\n\n\n------------\n### STEP 2 \u4e3a\u4ec0\u4e48\u8981\u7528\u5e76\u67e5\u96c6\n\u5e76\u67e5\u96c6\u662f\u7528\u6765\u5224\u65ad\u4e24\u8005\u662f\u5426\u4e3a\u4e00\u4e2a\u5355\u4f4d\u7684\u65b9\u6cd5\u3002\n\n\u5982\u679c\u540c\u5c5e\u4e8e\u4e00\u4e2a\u5355\u4f4d\u7684\u4eba\u4e3a\u4e00\u4e2a\u6218\u961f\uff0c\u90a3\u4e48\u901a\u8fc7\u6807\u8bb0\u548c\u51fd\u6570\u67e5\u627e\uff0c\u6211\u4eec\u53ef\u4ee5\u6e05\u695a\u5730\u77e5\u9053\u8fd9\u4e00\u4e2a\u6218\u961f\u7684\u961f\u957f\u662f\u8c01\uff0c\u5e76\u4e14\u4ee5\u8fd9\u4e2a\u961f\u957f\u4e3a\u8fd9\u4e2a\u6218\u961f\u7684\u6807\u5fd7\uff0c\u4ee5\u540e\u6218\u961f\u7684\u6bcf\u4e00\u4e2a\u4eba\u4e0e\u5176\u4ed6\u4eba\u78b0\u9762\uff0c\u53ea\u8981\u6807\u5fd7\u4e0d\u540c\uff0c\u90a3\u5c31\u628a\u53e6\u4e00\u4e2a\u62c9\u8fd1\u81ea\u5df1\u7684\u6218\u961f\u3002\u5728\u8bbf\u95ee\u7684\u65f6\u5019\uff0c\u53ea\u8981\u4e24\u4e2a\u4eba\u7684\u6807\u5fd7\u4e0d\u540c\uff0c\u5c31\u662f\u4e0d\u5728\u4e00\u4e2a\u6218\u961f\uff0c\u5426\u5219\u4ed6\u4eec\u5c31\u662f\u4e00\u4e2a\u6218\u961f\u7684\u597d\u54e5\u4eec\u5566\u3002\n\n\n------------\n### STEP 3 \u5e76\u67e5\u96c6\u600e\u4e48\u505a\n\n#### 1.\u5e76\u67e5\u96c6\u6807\u51c6\u5224\u65ad\u6807\u5fd7\u662f\u5426\u76f8\u540c\u51fd\u6570\n```\n//\u53ea\u662f\u4e2a\u4f8b\u5b50\nint f[100];//\u5b9a\u4e49\u4e00\u4e2a\u6570\u7ec4\uff0c\u5f53\u7136\u8fd9\u4e2a\u6570\u7ec4\u521d\u59cb\u5316\u7684\u65f6\u5019\u6bcf\u4e2a\u4eba\u7684\u961f\u957f\u90fd\u662f\u4ed6\u81ea\u5df1\nint find(int x){\n\tif (f[x]==x) return x;//\u5982\u679c\u961f\u957f\u662f\u4ed6\u81ea\u5df1\uff0c\u90a3\u4e48\u4ed6\u5c31\u662f\u961f\u957f\n\treturn find(x); //\u5426\u5219\u4e00\u76f4\u641c\uff0c\u76f4\u5230\u641c\u5230\u961f\u957f\u4e3a\u6b62\n}\n```\n\u4f46\u662f\uff0c\u4f60\u4f1a\u53d1\u73b0\uff0c\u5982\u679c\u6bcf\u4e00\u6b21\u78b0\u5230\u4e00\u4e2a\u4eba\u5c31\u4e00\u76f4\u641c\u961f\u957f\uff0c\u662f\u4e0d\u662f\u592a\u6162\u4e86\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u4f18\u5316\u4e00\u4e0b\uff0c\u53ea\u8981\u6cbf\u8def\u78b0\u5230\u7684\u5168\u5c06\u4ed6\u7684\u961f\u957f\u8bbe\u4e3a\u6700\u9ad8\u961f\u957f\u3002\n```\n//\u4f9d\u7136\u662f\u4e2a\u4f8b\u5b50\nint f[100];\nint find(int x){\n\tif (f[x]==x) return f[x];\n\treturn f[x]=find(f[x]);//\u6cbf\u8def\u7684\u90fd\u987a\u4fbf\u5c06\u4ed6\u6807\u8bb0\n}\n```\n#### 2.\u9488\u5bf9\u8fd9\u9053\u9898\u7684\u8f6c\u5316\u51fd\u6570\n\u600e\u4e48\u5728\u4e0d\u7528map\u7684\u60c5\u51b5\u4e0b\u5b9a\u4f4d\u8ddf\u8e2a\u5230\u67d0\u4e00\u4e2a\u540d\u5b57\u7684\u4f4d\u7f6e\u5462\uff1f\u8fd9\u65f6\u5019\u5c31\u9700\u8981\u65b0\u5efa\u4e00\u4e2a\u51fd\u6570\u6765\u5b9a\u4f4d\u3002\n```\nstring mz[100];//\u5927\u5c0f\u968f\u4fbf\u5f00\u7684\uff0c\u7528\u6765\u76f4\u63a5\u50a8\u5b58\u8f93\u5165\u7684\u540d\u5b57\nint fname(string name){//\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e5f\u5c31\u662f\u540d\u5b57\n\tfor (int i=1;i<=n;i++){\n\t\tif (name==mz[i]) return i;//\u4e0d\u65ad\u641c\u7d22\uff0c\u8fd4\u56de\u4ed6\u7684\u4f4d\u7f6e\n\t}\n}\n```\n\n\n------------\n\n### STEP 4 \u603bAC\u4ee3\u7801\u5e26\u6ce8\u91ca\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,k;//\u50a8\u5b58\u7684\u76f8\u5e94\u4e1c\u897f\u5982\u9898\u6240\u793a\nstring f[20001],mz[20001];//\u5206\u522b\u50a8\u5b58\u6bcf\u4e2a\u4eba\u7684\u961f\u957f\u6807\u5fd7\u4ee5\u53ca\u5e8f\u53f7\u5bf9\u5e94\u7684\u4eba\u540d\nint fname(string name){//\u8f6c\u6362\u51fd\u6570\n\tfor (int i=1;i<=n;i++){\n\t\tif (name==mz[i]) return i;\n\t}\n}\nstring find(string name){//\u5e76\u67e5\u96c6\u51fd\u6570\n\tif (f[fname(name)]==name) return name;\n\treturn f[fname(name)]=find(f[fname(name)]);//\u5c06\u540d\u5b57\u8f6c\u6362\u6210\u6570\u5b57\u50a8\u5b58\n} \nint main(){\n    scanf(\"%d %d\",&n,&m);\n    for (int i=1;i<=n;i++){\n    \tcin>>f[i];\n    \tmz[i]=f[i];\n\t} //\u6b63\u5e38\u8f93\u5165\n\tfor (int i=1;i<=m;i++){\n\t\tstring a,b;\n\t\tcin>>a>>b;\n\t\tf[fname(find(a))]=find(b);//\u5e76\u67e5\u96c6\u627e\u961f\u957f\u64cd\u4f5c\n\t}\n\tscanf(\"%d\",&k);\n\tfor (int i=1;i<=k;i++){\n\t\tstring a,b;\n\t\tcin>>a>>b;\n\t\tif (find(a)==find(b)) printf(\"Yes.\\n\");\n\t\telse printf(\"No.\\n\");//\u5bfb\u627e\u961f\u957f\u662f\u5426\u76f8\u540c\u5e76\u8f93\u51fa\n\t}\n    return 0;//\u597d\u4e60\u60ef\u8981\u517b\u6210\u54e6\uff01\n}\n```\n\n------------\n\n### STEP 5 \u5b8c\u7ed3\u6492\u82b1\n\u7ec8\u4e8e\u5b8c\u7f8e\u7684\u7ed3\u675f\u4e86\uff01\u8fd8\u4e0d\u61c2\u7684\u7ae5\u978b\u4eec\u53ef\u4ee5\u5728\u8bc4\u8bba\u533a\u7559\u8a00\uff0c\u6211\u4f1a\u7b2c\u4e00\u65f6\u95f4\u56de\u590d\u54d2\uff01\u5982\u679c\u6ca1\u6709\u95ee\u9898\u4e86\uff0c\u5c31\u70b9\u4e2a\u8d5e\u8bb0\u5f55\u7559\u5ff5\u4e00\u4e0b\u4f60\u7684\u6210\u957f\u5427\uff01\n",
        "postTime": 1585228613,
        "uid": 257621,
        "name": "\u7ffc\u5fb7\u5929\u5c0a",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2256 \u3010\u4e00\u4e2d\u6821\u8fd0\u4f1a\u4e4b\u767e\u7c73\u8dd1\u3011"
    },
    {
        "content": "* ##  ~~\u5e76\u67e5\u96c6\u6c34\u9898~~\n\u53ea\u662f\u672c\u9898\u5408\u5e76\u7684\u662f\u5b57\u7b26\u4e32\uff0c\u522b\u7684\u9898\u5408\u5e76\u7684\u662f\u6570\u5b57\u800c\u5df2\u3002\n\n\u5176\u4ed6\u7684\u771f\u7684\u53ea\u65f6\u6a21\u677f\u554a$QWQ$\n\n\u672c\u9898\u7684\u6ce8\u610f\u4e8b\u9879\uff08\u6253\u661f\u53f7\uff09\n\n1\uff1a\u5b57\u7b26\u4e32\u7684\u67e5\u627e\uff1a\n\n\u5982\u679c\u662f\u6570\u5b57\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u67e5\u627e\uff0c\u53ea\u9700\u8981\u5bf9\u6b64\u5408\u5e76\u5c31\u53ef\u4ee5\uff0c\u4f46\u662f\u5982\u679c\u662f\u5b57\u7b26\u4e32\uff0c\u5c31\u5fc5\u987b\u8981\u67e5\u627e\uff0c\u89c2\u5bdf\u8303\u56f4\u53d1\u73b0$(2<=N<=20000)$\u4e8e\u662f\u3002\u3002\u3002\u6211\u4eec\u771f\u7684\u53ef\u4ee5\u4ece$1$\u4e00\u76f4\u627e\u5230$20001$\uff0c\u5982\u679c\u627e\u5230\u4e86\uff0c\u5c31\u8fd4\u56de\u4ed6\u7684\u4e0b\u6807\u3002\n\n\u67e5\u627e\u5b57\u7b26\u4e32\u7684\u4ee3\u7801\u5982\u4e0b\n```cpp\nint findname(string s)\n{\n    int ans=0;\n    for(ri i=1;i<=20001;i++)\n        if(s==fa[i].name)return i;\n}\n```\n\n2\uff1a\u5bf9\u4e8e\u5b57\u7b26\u4e32\u548c\u5176\u5bf9\u5e94\u6570\u5b57\u7684\u5b58\u50a8\n\n\u8fd9\u4e2a\u4e5f\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5f00\u4e00\u4e2a\u7ed3\u6784\u4f53\u5c31\u53ef\u4ee5\u4e86\n\n\u5e73\u65f6\u6211\u4eec\u8fd9\u6837\u5f00\n```cpp\nint fa[200001];\n```\n\n\u73b0\u5728\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u6765\u5b58\u8d2e\u6bcf\u4e2a\u5b57\u7b26\u4e32\u548c\u4e0b\u6807\u5c31\u53ef\u4ee5\u4e86\n```cpp\nstruct node\n{\n    string name;\n    int num;\n}fa[2000001];\n```\n\n\u6240\u4ee5\uff0c\u73b0\u5728\u6211\u4eec\u67e5\u5e76\u67e5\u96c6\u7684\u65f6\u5019\u5c31\u9700\u8981\u8fd9\u6837\u5199\n```cpp\n}fa[2000001];\ninline int sfind(int x)\n{\n    if(fa[x].num==x)return x;\n    else\n    {\n        fa[x].num=sfind(fa[x].num);\n        return fa[x].num;\n    }\n}\n```\n\n3\uff1a\u5bf9\u4e8e\u7ec6\u8282\u7684\u5904\u7406\uff1a\n\n\u672c\u9898\u56e0\u4e3a\u662f\u5b57\u7b26\u4e32\uff0c\u6240\u4ee5\u5728\u67e5\u627e\u7684\u65f6\u5019\u96be\u514d\u4f1a\u51fa\u73b0\u9519\u8bef~~LZ\u5c31\u662f\u56e0\u4e3a\u8fd9\u6837\u8c03\u4e86\u8fd1\u534a\u4e2a\u5c0f\u65f6~~\n\n\u6700\u540e\u9644\u4e0aAC\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream> \n#define ri register int\n#define INF 2139063143\nusing namespace std;\nstruct node\n{\n    string name;\n    int num;\n}fa[2000001];\ninline int sfind(int x)\n{\n    if(fa[x].num==x)return x;\n    else\n    {\n        fa[x].num=sfind(fa[x].num);\n        return fa[x].num;\n    }\n}\nint findname(string s)\n{\n    int ans=0;\n    for(ri i=1;i<=20001;i++)\n        if(s==fa[i].name)return i;\n}\nint main()\n{\n    int n,m;\n    scanf(\"%d%d\",&n,&m);\n    for(ri i=1;i<=n;i++)\n    {\n        fa[i].num=i;\n        cin>>fa[i].name;\n    } \n    for(ri i=1;i<=m;i++)\n    {\n        string name1,name2;\n        cin>>name1>>name2;\n        int u=findname(name1);\n        int v=findname(name2);\n        int uu=sfind(fa[u].num);\n        int vv=sfind(fa[v].num);\n        if(uu!=vv)\n        \tfa[uu].num=vv;\n    }\n    int k;\n    scanf(\"%d\",&k);\n    for(ri i=1;i<=k;i++)\n    {\n        string name1,name2;\n        cin>>name1>>name2;\n        int u=findname(name1);\n        int v=findname(name2);\n        int uu=sfind(fa[u].num);\n        int vv=sfind(fa[v].num);\n        if(uu!=vv)printf(\"No.\\n\");\n         else printf(\"Yes.\\n\");\n    }\n    return 0;\n}\n```",
        "postTime": 1539780020,
        "uid": 51645,
        "name": "zybnxy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2256 \u3010\u4e00\u4e2d\u6821\u8fd0\u4f1a\u4e4b\u767e\u7c73\u8dd1\u3011"
    },
    {
        "content": "# \u88f8\u7684\u5e76\u67e5\u96c6+hash\n\u9996\u5148\u6211\u4eec\u6765\u4ecb\u7ecd\u4e00\u4e0b\u4ec0\u4e48\u662f\u5e76\u67e5\u96c6\uff1a\n>\u5e76\u67e5\u96c6\uff0c\u5728\u4e00\u4e9b\u6709N\u4e2a\u5143\u7d20\u7684\u96c6\u5408\u5e94\u7528\u95ee\u9898\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u662f\u5728\u5f00\u59cb\u65f6\u8ba9\u6bcf\u4e2a\u5143\u7d20\u6784\u6210\u4e00\u4e2a\u5355\u5143\u7d20\u7684\u96c6\u5408\uff0c\u7136\u540e\u6309\u4e00\u5b9a\u987a\u5e8f\u5c06\u5c5e\u4e8e\u540c\u4e00\u7ec4\u7684\u5143\u7d20\u6240\u5728\u7684\u96c6\u5408\u5408\u5e76\uff0c\u5176\u95f4\u8981\u53cd\u590d\u67e5\u627e\u4e00\u4e2a\u5143\u7d20\u5728\u54ea\u4e2a\u96c6\u5408\u4e2d\u3002\u8fd9\u4e00\u7c7b\u95ee\u9898\u8fd1\u51e0\u5e74\u6765\u53cd\u590d\u51fa\u73b0\u5728\u4fe1\u606f\u5b66\u7684\u56fd\u9645\u56fd\u5185\u8d5b\u9898\u4e2d\uff0c\u5176\u7279\u70b9\u662f\u770b\u4f3c\u5e76\u4e0d\u590d\u6742\uff0c\u4f46\u6570\u636e\u91cf\u6781\u5927\uff0c\u82e5\u7528\u6b63\u5e38\u7684\u6570\u636e\u7ed3\u6784\u6765\u63cf\u8ff0\u7684\u8bdd\uff0c\u5f80\u5f80\u5728\u7a7a\u95f4\u4e0a\u8fc7\u5927\uff0c\u8ba1\u7b97\u673a\u65e0\u6cd5\u627f\u53d7\uff1b\u5373\u4f7f\u5728\u7a7a\u95f4\u4e0a\u52c9\u5f3a\u901a\u8fc7\uff0c\u8fd0\u884c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u6781\u9ad8\uff0c\u6839\u672c\u5c31\u4e0d\u53ef\u80fd\u5728\u6bd4\u8d5b\u89c4\u5b9a\u7684\u8fd0\u884c\u65f6\u95f4\uff081\uff5e3\u79d2\uff09\u5185\u8ba1\u7b97\u51fa\u8bd5\u9898\u9700\u8981\u7684\u7ed3\u679c\uff0c\u53ea\u80fd\u7528\u5e76\u67e5\u96c6\u6765\u63cf\u8ff0\u3002\n\n>\u5e76\u67e5\u96c6\u662f\u4e00\u79cd\u6811\u578b\u7684\u6570\u636e\u7ed3\u6784\uff0c\u7528\u4e8e\u5904\u7406\u4e00\u4e9b\u4e0d\u76f8\u4ea4\u96c6\u5408\uff08Disjoint Sets\uff09\u7684\u5408\u5e76\u53ca\u67e5\u8be2\u95ee\u9898\u3002\u5e38\u5e38\u5728\u4f7f\u7528\u4e2d\u4ee5\u68ee\u6797\u6765\u8868\u793a\u3002\n\u2014\u767e\u5ea6\u767e\u79d1\n\n\u7b80\u5355\u5730\u8bf4\uff0c\u5e76\u67e5\u96c6\u53ef\u4ee5\u5feb\u901f\u7684\u5904\u7406\u4e00\u4e9b\u5143\u7d20\u7684\u5408\u5e76\u548c\u67e5\u8be2\uff0c\u4f46\u8981\u6c42\u5143\u7d20\u5177\u6709\u552f\u4e00\u6027\u3002\n\u9996\u5148\u662f\u539f\u7406\uff1a\n\n\u6211\u4eec\u628a\u6bcf\u4e00\u4e2a\u96c6\u5408\u5f53\u6210\u4e00\u68f5\u6811\uff0c\u5f53\u4e00\u4e2a\u5143\u7d20\u4e0e\u53e6\u4e00\u4e2a\u5143\u7d20\u7684father\u76f8\u540c\u65f6\uff0c\u6211\u4eec\u5c31\u8ba4\u4e3a\u4ed6\u4eec\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u5185\u3002\uff08\u8fd9\u5c31\u662f\u67e5\u8be2\uff09\n\n\u81f3\u4e8e\u5408\u5e76\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5c06\u4e00\u4e2a\u96c6\u5408\u7684root\u5408\u5e76\u5230\u53e6\u4e00\u4e2a\u96c6\u5408\u7684root\u4e0b\n\n\u521d\u59cb\u5316\uff1a\u4e00\u5f00\u59cb\u6240\u6709\u4eba\u90fd\u662f\u81ea\u5df1\u7684father~~\u6211 \u662f \u6211 \u7238 \u7238~~\n\n\u597d\u4e86\u4e0a\u4ee3\u7801\n\n__\u521d\u59cb\u5316__\n```cpp\nvoid init(int maxn){\n    f.clear();\n    for(int i=0;i<maxn;i++){\n        f.push_back(i);\n    }\n}\n```\n__\u627eroot\u51fd\u6570__\n```cpp\nint getf(int v){//\u6216\u8005\u53ebgetroot?\uff08\u5927\u96fe\uff09\n    if(v==f[v])return v;\n    return f[v]=getf(f[v]);//\u8fd9\u662f\u8def\u5f84\u538b\u7f29\n    //\u5982\u679c\u6574\u68f5\u6811\u88ab\u5361\u6210\u4e00\u6761\u94fe\uff0c\u90a3\u4e48getf\u5c31\u662fO(n)\n    //\u8fd9\u4e2a\u53ef\u4ee5\u8ba9getf\u590d\u6742\u5ea6\u5747\u644a\u6210\u4e3aO(log2n)\n}\n```\n__\u67e5\u8be2__\n```cpp\nbool in(int x,int y){\n    return f[getf(x)]==f[getf(y)];\n}\n```\n__\u5408\u5e76__\n```cpp\nvoid merge(int a,int b){\n    int fa=getf(a),fb=getf(b);\n    f[fb]=f[fa];//\u672c\u6765\u6709\u4e00\u4e2a\u53eb\u6309\u79e9\u5408\u5e76\u7684\u4e1c\u897f\uff0c\u4f46\u662f\u7528\u7684\u4e0d\u591a\uff0c\n    //\u6253\u8def\u5f84\u538b\u7f29\u5c31\u591f\u4e86\n}\n```\n\u7136\u540e\u662fhash\n>Hash\uff0c\u4e00\u822c\u7ffb\u8bd1\u505a\u6563\u5217\u3001\u6742\u51d1\uff0c\u6216\u97f3\u8bd1\u4e3a\u54c8\u5e0c\uff0c\u662f\u628a\u4efb\u610f\u957f\u5ea6\u7684\u8f93\u5165\uff08\u53c8\u53eb\u505a\u9884\u6620\u5c04pre-image\uff09\u901a\u8fc7\u6563\u5217\u7b97\u6cd5\u53d8\u6362\u6210\u56fa\u5b9a\u957f\u5ea6\u7684\u8f93\u51fa\uff0c\u8be5\u8f93\u51fa\u5c31\u662f\u6563\u5217\u503c\u3002\u8fd9\u79cd\u8f6c\u6362\u662f\u4e00\u79cd\u538b\u7f29\u6620\u5c04\uff0c\u4e5f\u5c31\u662f\uff0c\u6563\u5217\u503c\u7684\u7a7a\u95f4\u901a\u5e38\u8fdc\u5c0f\u4e8e\u8f93\u5165\u7684\u7a7a\u95f4\uff0c\u4e0d\u540c\u7684\u8f93\u5165\u53ef\u80fd\u4f1a\u6563\u5217\u6210\u76f8\u540c\u7684\u8f93\u51fa\uff0c\u6240\u4ee5\u4e0d\u53ef\u80fd\u4ece\u6563\u5217\u503c\u6765\u786e\u5b9a\u552f\u4e00\u7684\u8f93\u5165\u503c\u3002\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u4e00\u79cd\u5c06\u4efb\u610f\u957f\u5ea6\u7684\u6d88\u606f\u538b\u7f29\u5230\u67d0\u4e00\u56fa\u5b9a\u957f\u5ea6\u7684\u6d88\u606f\u6458\u8981\u7684\u51fd\u6570\u3002\n>\u2014\u767e\u5ea6\n\n>\u8fd9\u4e1c\u897f\u53ef\u4ee5\u7528\u6765\u79bb\u6563\u5316\u548c~~\u4e71\u641e~~\u5b58\u50a8\u5b57\u7b26\u4e32\n>\u2014\u6211\n\nhash\u5343\u5343\u4e07\uff0c\u4e3b\u8981\u5206\u4e3a\u5b57\u7b26\u4e32/\u6574\u6570hash\u8fd9\u91cc\u4ecb\u7ecd\u5b57\u7b26\u4e32hash\u7684\u4e00\u79cd-BKDRhash\n```cpp\ntypedef unsigned long long ull;\nconst int seed=233;\nint hash(string s){\n\tull hash_=0;\n\tfor(int i=0;i<s.length();i++) hash_=hash_*seed+s[i];\n\treturn hash_%200000;\n}\n//\u8fd9\u4e1c\u897f\u6709\u53ef\u80fd\u6709\u4e24\u4e2a\u5b57\u7b26\u4e32hash\u503c\u4e00\u6837\uff0c\u8c28\u614e\u4f7f\u7528\n```\n\u7136\u540e\u6211\u4eec\u770b\u4e00\u4e0b\uff0c\u8fd9\u9053\u9898\u9700\u8981\u5224\u65ad\u591a\u4e2a\u4e0d\u76f8\u4ea4\u96c6\u5408=>\u5e76\u67e5\u96c6\n\n\u6709\u5b57\u7b26\u4e32\u5b58\u50a8=>hash\n\n\u6240\u4ee5\u8fd9\u9053\u9898\u5c31\u662f~~\u4e71\u641e~~\u5e76\u67e5\u96c6+hash\n\ncode:\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<string>\n#include<vector>\n#include<iostream>\nusing namespace std;\ntypedef unsigned long long ull;\nstruct union_find_set{\n    vector<int> f;\n    void init(int maxn){\n    \tf.clear();\n        int i;\n        for(int i=0;i<maxn;i++){\n            f.push_back(i);\n        }\n    }\n    int getf(int v){\n        if(v==f[v])return v;\n        return f[v]=getf(f[v]);\n    }\n    void merge(int a,int b){\n        int fa=getf(a),fb=getf(b);\n        f[fb]=f[fa];\n    }\n    bool in(int x,int y){\n        return f[getf(x)]==f[getf(y)];\n    }\n};\nunion_find_set set_;\nstring a,b;\nconst int seed=233;\nint hash(string s){\n\tull hash_=0;\n\tfor(int i=0;i<s.length();i++) hash_=hash_*seed+s[i];\n\treturn hash_%200000;\n}\nint main(){\n\tset_.init(200000);\n\tint n,m,k;\n\tscanf(\"%d%d\",&n,&m);\n\twhile(n--) cin>>a;\n\twhile(m--) cin>>a>>b,set_.merge(hash(a),hash(b));\n\tscanf(\"%d\",&k);\n\twhile(k--) cin>>a>>b,puts(set_.in(hash(a),hash(b))?\"Yes.\":\"No.\");\n\treturn 0;\n}\n```\n[\u8bc4\u6d4b\u8bb0\u5f55](https://www.luogu.org/record/22952266)",
        "postTime": 1566099538,
        "uid": 157598,
        "name": "qbu666666",
        "ccfLevel": 5,
        "title": "\u9898\u89e3P2256\u3010\u4e00\u4e2d\u6821\u8fd0\u4f1a\u4e4b\u767e\u7c73\u8dd1\u3011"
    },
    {
        "content": "\uff08^_^)\n\n\n## \u601d\u8def\uff1a\n\n\u8fd9\u662f\u4e00\u9053\u5e76\u67e5\u96c6\u6c34\u9898,\u9002\u5408\u521d\u5b66\u8005\u505a\uff01\uff01\uff01\n\n\u82e5\u4e0d\u4f1a**\u5e76\u67e5\u96c6**\u7684\u70b9[\u6211](https://www.luogu.org/blog/142373/bing-zha-ji),\u90a3\u662fdalao\u7684\u535a\u5ba2\uff01\n\n\u672c\u9898\u96be\u70b9\uff1a\u540d\u5b57\u662f\u5b57\u7b26\u4e32\uff0c\u8981\u5b57\u7b26\u4e32\u5904\u7406\n\n\u7ed9\u6bcf\u4e2a\u540d\u5b57\u4e00\u4e2a\u7f16\u53f7\uff0c\u5982$1,2,3,4,5,6,...$,\u7528[**$\\texttt{STL\u7684map}$**](https://www.baidu.com/s?ie=utf-8&f=8&rsv_bp=1&tn=monline_4_dg&wd=c%2B%2B%20map&oq=%25E5%25B9%25B6%25E6%259F%25A5%25E9%259B%2586&rsv_pq=de1f539f0014f2de&rsv_t=d77eu9QPciueH67DnsfE7xASWyMBuBvGjk0V3caYcLfsj4hT9eUyPAVbBbw5RUL5pjmj&rqlang=cn&rsv_enter=1&rsv_sug3=9&rsv_sug1=8&rsv_sug7=100&bs=%E5%B9%B6%E6%9F%A5%E9%9B%86)\u5b58\u4e0b\u6765\uff0c\u7136\u540e\u666e\u901a\u5e76\u67e5\u96c6\n\n\u8fd9\u9898\u662fC++\u798f\u5229\u5566~\n\n\nPascal\u4e0d\u77e5\u9053\u6570\u7ec4\u4e0b\u6807\u80fd\u4e0d\u80fd\u7528\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u7684\u8bdd\u4e00\u4e2a\u6570\u7ec4\u641e\u5b9a\n\n## \u4ee3\u7801\uff1a\n\n\u62d2\u7edd![ctrl](https://s2.ax1x.com/2019/06/22/Z9hS8H.png)+C\n\nc++\u4ee3\u7801\n\n```cpp\n#include <iostream>\n\nusing namespace std;\n\nmap <string,int> ma;\nint f[20010],tot,n,m;\n\nint find(int k){     //\u5e76\u67e5\u96c6find()\n    if(f[k]==k)return k;\n    return f[k]=find(f[k]);\n} \n\nint main()\n{\n\t//*****\u521d\u59cb\u5316***** \n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)f[i]=i;\n\t//*****\u5b58\u540d\u5b57***** \n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tstring s;\n\t\tcin>>s;\n\t\ttot++;\n\t\tma[s]=tot;\n\t}\n\t//*****\u5e76***** \n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tstring s,st;\n\t\tcin>>s>>st;\n\t\tint a=ma[s],b=ma[st];\n\t\tf[find(a)]=find(b);\n\t} \n\t//*****\u67e5*****\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tstring s,st;\n\t\tcin>>s>>st;\n\t\tint a=ma[s],b=ma[st];\n\t\tif(find(a)==find(b))cout<<\"Yes.\\n\";\n\t\telse cout<<\"No.\\n\";\n\t} \n\treturn 0;\n}\n\n```",
        "postTime": 1561211883,
        "uid": 80695,
        "name": "Jayun",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2256 \u3010\u4e00\u4e2d\u6821\u8fd0\u4f1a\u4e4b\u767e\u7c73\u8dd1\u3011"
    },
    {
        "content": "~~\u7b97\u662f\u4e00\u9053\u5e76\u67e5\u96c6\u677f\u5b50\u9898\u5427~~\n\n\u65e2\u7136\u68c0\u67e5\u4e24\u4e2a\u9009\u624b\u662f\u5426\u5728\u4e00\u4e2a\u7ec4\u91cc\uff0c\u81ea\u7136\u800c\u7136\u7684\u5c31\u60f3\u8d77\u4e86**\u5e76\u67e5\u96c6**\n\n\u4f46\u662f\u8fd9\u4e2a\u5e76\u67e5\u96c6\u548c\u666e\u901a\u7684\u5e76\u67e5\u96c6\u6709\u4e9b\u8bb8\u7684\u4e0d\u540c\uff0c\u91cc\u9762\u591a\u4e86\u4e2a\u5b57\u7b26\u4e32\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u67e5\u627e\u6839\u8282\u70b9\u7684\u65f6\u5019\uff0c\u9700\u8981\u505a\u4e00\u4e9b\u6539\u52a8\uff0c\u8bbf\u95ee\u6570\u7ec4\u91cc\u9762\u7684\u7f16\u53f7\u9879\uff08\u8be6\u60c5\u89c1\u4ee3\u7801\uff09\n\n```cpp\nint find(int n){\n\tif(uset[n].num!=n) uset[n].num=find(uset[n].num);\n\treturn uset[n].num;\n}\n```\n\n\n\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a\u51fd\u6570\u6765\u67e5\u627e\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5728\u6570\u7ec4\u91cc\u662f\u7b2c\u51e0\u4f4d\n```cpp\nint sfind(string a){\n\tfor(int i=1;i<=n;i++){\n\t\tif(a==uset[i].s) return i;\n\t}\n}\n```\n\n\u5982\u679c\u4ed6\u4eec\u5728\u540c\u4e00\u4e2a\u7ec4\u91cc\uff0c\u4ed6\u4eec\u7684\u6839\u8282\u70b9\u662f\u80af\u5b9a\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u8f93\u5165\u65f6\u5224\u65ad\u8fd9\u4e24\u4e2a\u4eba\u5728\u6ca1\u5728\u540c\u4e00\u4e2a\u7ec4\u91cc\uff0c\u5982\u679c\u5728\u540c\u4e00\u4e2a\u7ec4\u91cc\uff0c\u4e0d\u7528\u7ba1\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u90a3\u4e48\u5408\u5e76\n\n\u5bf9\u4e8ek\u6b21\u8be2\u95ee\uff0c\u53ea\u9700\u8981\u5224\u65ad\u8fd9\u4e24\u4e2a\u4eba\u6709\u6ca1\u6709\u5728\u540c\u4e00\u4e2a\u6839\u8282\u70b9\uff0c\u5982\u679c\u5728\u5c31\u662fYes.\n\u4e0d\u5728\u5c31\u662fNo.\n\n\u9898\u610f\u4e86\u89e3\u6e05\u695a\u4e4b\u540e\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\n\n\n\n```\n#include<bits/stdc++.h>\n#define _ 0 \nusing namespace std;\nint n,m,k;\nstruct node{\t\t//\u7528\u6765\u50a8\u5b58\u540d\u5b57\u548c\u7f16\u53f7 \n\tstring s;\n\tint num;\n};\nnode uset[20000+50]; \nint find(int n){\t//\u4e0a\u6587\u63d0\u5230\u7684\u67e5\u627e \n\tif(uset[n].num!=n) uset[n].num=find(uset[n].num);\n\treturn uset[n].num;\n}\nvoid merge(int a,int b){\t//\u5408\u5e76\u5e76\u67e5\u96c6 \n\ta=find(a);\n\tb=find(b);\t\t\n\tif(a==b) return ;\n\telse uset[a].num=uset[b].num;\n}\nint sfind(string a){\t//\u67e5\u627e\u8fd9\u4e2a\u540d\u5b57 \n\tfor(int i=1;i<=n;i++){\n\t\tif(a==uset[i].s) return i;\n\t}\n}\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>uset[i].s;\t\t//\u5bf9\u4e8e\u6bcf\u6b21\u8f93\u5165\uff0c\u5b58\u7f16\u53f7 \n\t\tuset[i].num=i;\n\t}\t\n\tfor(int i=1;i<=m;i++){\t//m\u6b21\u8f93\u5165 \n\t\tstring sa,sb;\t//\u7ba1\u7406\u5927\u5927\uff0c\u6211\u83ab\u5f97\u9a82\u4eba\uff0c\u6211\u53ea\u662f\u4e0d\u77e5\u9053\u53eb\u4ec0\u4e48\u4e86 \n\t\tcin>>sa>>sb;\n\t\tif(find(sfind(sa))!=find(sfind(sb))){\t//\u67e5\u627e\u4e24\u4e2a\u540d\u5b57\n\t\t\tmerge(sfind(sa),sfind(sb));\t\t//\u5408\u5e76 \n\t\t}\n\t} \n\tcin>>k;\t \n\tfor(int i=1;i<=k;i++){\t\t//k\u6b21\u8be2\u95ee \n\t\tstring sx,bs;\n\t\tcin>>sx>>bs;\n\t\tif(find(sfind(sx))==find(sfind(bs))){\t//\u4e5f\u662f\u67e5\u627e\u4e24\u4e2a\u540d\u5b57\n\t\t\tcout<<\"Yes.\"<<endl;\t\t\t//\u5728\u4e00\u4e2a\u7ec4\u91cc \n\t\t}else {\n\t\t\tcout<<\"No.\"<<endl;\t\t\t//\u4e0d\u5728\u4e00\u4e2a\u7ec4 \n\t\t}\n\t}\n\treturn ~~(0^_^0);\t//\u76ae\u4e00\u4e0b \n}\n```\n\n\n\u8fd8\u671b\u5927\u4f6c\u591a\u591a\u6307\u70b9",
        "postTime": 1586310229,
        "uid": 114457,
        "name": "Forest_Prince",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2256 \u3010\u4e00\u4e2d\u6821\u8fd0\u4f1a\u4e4b\u767e\u7c73\u8dd1\u3011"
    },
    {
        "content": "Emmm\uff0c\u8fd9\u9898~~\u3002\n\n\u5176\u5b9e\u5f88\u5bb9\u6613\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u5e76\u67e5\u96c6\uff0c\u53ea\u4e0d\u8fc7\u5728\u5b57\u7b26\u4e32\u7684\u5904\u7406\u4e0a\u9700\u8981\u4e00\u70b9\u6280\u5de7\uff0c\u6211\u91c7\u7528\u4e8c\u5206\u67e5\u627e\u3002P.S.c++\u81ea\u5e26sort\u53ef\u4ee5\u76f4\u63a5\u5b57\u5178\u5e8f\u6392\u5e8f\u5b57\u7b26\u4e32\uff08string\uff09\u3002\n\n\u5e76\u67e5\u96c6\uff1a\n\n \u7528\u96c6\u5408\u7684\u601d\u8def\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u4eba\u5efa\u7acb\u4e00\u4e2a\u96c6\u5408\uff0c\u5f00\u59cb\u7684\u65f6\u5019\u96c6\u5408\u5143\u7d20\u662f\u8fd9\u4e2a\u4eba\u672c\u8eab\uff0c\u8868\u793a\u5f00\u59cb\u65f6\u4e0d\u77e5\u9053\u4efb\u4f55\u4eba\u548c\u4ed6\u4e00\u7ec4\u3002\u4ee5\u540e\u6bcf\u6b21\u7ed9\u51fa\u4e24\u4e2a\u4eba\u7684\u5173\u7cfb\u65f6\uff0c\u5c31\u5c06\u4e24\u4e2a\u96c6\u5408\u5408\u5e76\u3002\u8fd9\u6837\u5b9e\u65f6\u5730\u5f97\u5230\u4e86\u5728\u5f53\u524d\u72b6\u6001\u4e0b\u7684\u96c6\u5408\u5173\u7cfb\u3002\u5982\u679c\u6709\u63d0\u95ee\uff0c\u5373\u5728\u5f53\u524d\u5f97\u5230\u7684\u7ed3\u679c\u4e2d\u770b\u4e24\u5143\u7d20\u662f\u5426\u5c5e\u4e8e\u540c\u4e00\u96c6\u5408\u3002\u4f8b\u5982\u4e0b\u56fe\uff1a\n \n| \u8f93\u5165\u5173\u7cfb | \u5206\u79bb\u96c6\u5408 |\n| :-----------: |: -----------: |\n| \u521d\u59cb\u72b6\u6001  | {1}{2}{3}{4}{5}{6}{7}{8}{9}{10} |\n| (2,4) | {1}{2,4}{3}{5}{6}{7}{8}{9}{10} |\n| (5,7) | {1}{2,4}{3}{5,7}{6}{8}{9}{10} |\n| (1,3) | {1,3}{2,4}{5,7}{6}{8}{9}{10} |\n| (8,9) | {1,3}{2,4}{5,7}{6}{8,9}{10} |\n| (1,2) | {1,2,3,4}{5,7}{6}{8,9}{10} |\n| (5,6) | {1,2,3,4}{5,6,7}{8,9}{10} |\n| (2,3) | {1,2,3,4}{5,6,7}{8,9}{10} ||\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std ;\nint n , m , k ;\nstring a[20001] ;\nint f[20001] ;\nint two( string x , int head , int last ) ;\nvoid un( int x , int y ) ;\nint find( int x ) ;\n\nint main()\n{\n\tcin >> n >> m ;\n\tfor( int i = 1 ; i <= n ; i ++ )\n\t{\n\t\tcin >> a[i] ;\n\t}\n\tsort(a+1,a+n+1) ; // \u5b57\u5178\u5e8f\u6392\u5e8f\n\tfor( int i = 1 ; i <= n ; i ++ ) f[i] = i ;\n    // \u628a\u5f00\u59cb\u6bcf\u4e00\u4e2a\u4eba\u7684\u7236\u4eb2\u90fd\u8bbe\u6210\u4ed6\u81ea\u5df1\n\tstring x , y ;\n\tfor( int i = 1 ; i <= m ; i ++ )\n\t{\n\t\tcin >> x >> y ;\n\t\tint c = two(x,1,n) , d = two(y,1,n) ;\n\t\tif( c == -1 || d == -1 ) continue ;\n\t\tint r1 = find(c) ;\n\t\tint r2 = find(d) ;\n        // \u5bf9\u8f93\u5165\u7684\u6570\u636e\u8fdb\u884c\u5224\u65ad\uff1a\u662f\u5426\u5728\u540c\u4e00\u96c6\u5408\u3002\n\t\tif( r1 != r2 ) un(r1,r2) ;\n\t} \n\tcin >> k ;\n\tfor( int i = 1 ; i <= k ; i ++ )\n\t{\n\t\tcin >> x >> y ;\n\t\tint c = two(x,1,n) , d = two(y,1,n) ;\n\t\tif( c == -1 || d == -1 )\n\t\t{\n\t\t\tcout << \"No.\" ;\n\t\t\tcontinue ;\n\t\t}\n\t\tif( find(c) == find(d) ) cout << \"Yes.\" ;\n\t\telse cout << \"No.\" ;\n\t\tcout << endl ;\n\t}\n\treturn 0 ;\n} \n\nint two( string x , int head , int last )\n{\n\tif( head > last ) return -1 ;\n\tint g = ( last + head ) / 2 ;\n\tif( a[g] == x ) return g ;\n\tif( a[g] > x ) return two(x,head,g-1) ;\n\telse return two(x,g+1,last) ;\n} // \u4e8c\u5206\u67e5\u627e\n\nvoid un( int x , int y )\n{\n\tf[x] = y ;\n    // \u7528f[i]\u8868\u793a\u5143\u7d20i\u7684\u7236\u4eb2\u7ed3\u70b9\uff0c\u8fdb\u884c\u4e0d\u65ad\u5e76\u5230\u4e0d\u540c\u7684\u96c6\u5408\u4e2d\n\treturn ;\n} // \u5408\u5e76\n\nint find( int x )\n{\n\tif( f[x] != x ) f[x] = find(f[x]) ; // \u5bfb\u627e\u6839\u7ed3\u70b9\u7f16\u53f7\u5e76\u538b\u7f29\u8def\u5f84\n\treturn f[x] ;\n} // \u67e5\u627e\n```\n\nFinnish (\u30fe(\u25cd\u00b0\u2207\u00b0\u25cd)\uff89\uff9e)",
        "postTime": 1545542974,
        "uid": 134721,
        "name": "Mignon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2256 \u3010\u4e00\u4e2d\u6821\u8fd0\u4f1a\u4e4b\u767e\u7c73\u8dd1\u3011"
    },
    {
        "content": "\u8f83\u7b80\u5355\u7684\u5e76\u67e5\u96c6\u3002\u552f\u4e00\u548c\u5176\u4ed6\u9898\u76ee\u7684\u4e0d\u540c\u4e4b\u5904\u662f\u8f93\u5165\u7684\u662f\u4eba\u7684\u540d\u5b57\uff08Stirng\uff09\uff0c\u800c\u4e0d\u662f\u8f83\u591a\u89c1\u7684Int\u3002\n\n\u601d\u8def\uff1a\n\n1.\u5b9a\u4e49\u5404\u79cd\u53d8\u91cf\uff0c\u5176\u4e2d\u5305\u62ec\u4e00\u4e2a\u7ed3\u6784\u4f53People\uff0c\u91cc\u9762\u5b58\u4e86\u4e00\u4e2a\u4eba\u7684\u540d\u5b57\u548c\u7f16\u53f7\uff0c\u7f16\u53f7\u4e3a\u6570\u5b57\uff08\u7531\u4e8e\u7528\u5230\u5e76\u67e5\u96c6\uff0c\u5fc5\u987b\u81f3\u5c11\u6709\u4e00\u4e2a\u662f\u6570\u5b57\uff09\n\n2.\u8bfb\u5165\u4fe1\u606f\uff0c\u9700\u8981\u6ce8\u610f\u7684\u6709\u4e24\u70b9\uff1a\n\n\u8bfb\u5165n\u4e2a\u540d\u5b57\u7684\u65f6\u5019\uff0c\u9700\u8981\u8bfb\u5165People\u91cc\u9762\u7684name\u3002\n\n\u8bfb\u5165m\u7684\u65f6\u5019\uff0c\u8981\u5148\u627e\u51fa\u6bcf\u4e2a\u540d\u5b57\u5bf9\u5e94\u7684\u7f16\u53f7\uff0c\u518d\u5408\u5e76\u3002\n\n3.\u8bfb\u5165t\u548ct\u5bf9\u9700\u8981\u67e5\u8be2\u7684\u4eba\u540d\uff0c\u5e76\u4e14\u5224\u65ad\u7956\u5148\u662f\u5426\u76f8\u540c\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,i,t1,t2,pre[20000],tem,tem1,t,j;\nstring st1,st2;\nstruct pers              //\u5b9a\u4e49\u7ed3\u6784\u4f53\u3002\n{\n    int num;\n    string name;\n} person[20000]; \nint sch(int x)           //\u627e\u7956\u5148\u3002\n{\n    if (pre[x]==x) return pre[x];\n    pre[x]=sch(pre[x]);\n    return pre[x];\n}\nvoid join(int x,int y) \n{\n    if (sch(x)!=sch(y))      //\u7956\u5148\u4e0d\u540c\u5219\u5408\u5e76\u3002\n    {\n        pre[sch(x)]=sch(y);\n    }\n}\nint findnum(string s)        //\u627e\u5230\u540d\u5b57\u5bf9\u5e94\u7684\u7f16\u53f7\u3002\n{\n    for (j=1;j<=n;j++)\n    {\n        if (person[j].name==s) return person[j].num;\n    }\n}\nbool samef(string x,string y)   //\u5224\u65ad\u7956\u5148\u662f\u5426\u76f8\u540c\u3002\n{\n    tem=findnum(x);\n    tem1=findnum(y);\n    if (sch(tem)==sch(tem1)) return 1;\n    return 0;\n}\nint main()\n{\n    cin>>n>>m;\n    for (i=1;i<=n;i++) pre[i]=i;\n    for (i=1;i<=n;i++)\n    {\n        cin>>person[i].name;\n        person[i].num=i;\n    }\n    for (i=1;i<=m;i++)\n    {\n        cin>>st1>>st2;\n        t1=findnum(st1);\n        t2=findnum(st2);\n        join(t1,t2);\n    }\n    cin>>t;\n    for (i=1;i<=t;i++)\n    {\n        cin>>st1>>st2;\n        if (samef(st1,st2)) cout<<\"Yes.\"<<endl; else cout<<\"No.\"<<endl;\n    }\n}\n```",
        "postTime": 1488258627,
        "uid": 12613,
        "name": "PTC06",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2256 \u3010\u4e00\u4e2d\u6821\u8fd0\u4f1a\u4e4b\u767e\u7c73\u8dd1\u3011"
    },
    {
        "content": "\u672c\u9898\u662f\u5e76\u67e5\u96c6\u7a0d\u5fae\u6539\u4e86\u4e00\u70b9\u70b9\uff0c\u6309\u7406\u8bf4\u5e94\u8be5\u662f\u9053\u6a59\u9898\u7684\u3002\n\n\u9996\u5148\u6211\u4eec\u5148\u6765\u8ba4\u8bc6\u4e00\u4e0b\u5e76\u67e5\u96c6\uff1a\n\n## \u5e76\u67e5\u96c6\n\n>\u5e76\u67e5\u96c6\uff0c\u5728\u4e00\u4e9b\u6709N\u4e2a\u5143\u7d20\u7684\u96c6\u5408\u5e94\u7528\u95ee\u9898\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u662f\u5728\u5f00\u59cb\u65f6\u8ba9\u6bcf\u4e2a\u5143\u7d20\u6784\u6210\u4e00\u4e2a\u5355\u5143\u7d20\u7684\u96c6\u5408\uff0c\u7136\u540e\u6309\u4e00\u5b9a\u987a\u5e8f\u5c06\u5c5e\u4e8e\u540c\u4e00\u7ec4\u7684\u5143\u7d20\u6240\u5728\u7684\u96c6\u5408\u5408\u5e76\uff0c\u5176\u95f4\u8981\u53cd\u590d\u67e5\u627e\u4e00\u4e2a\u5143\u7d20\u5728\u54ea\u4e2a\u96c6\u5408\u4e2d\u3002 \u2014\u2014\u767e\u5ea6\u767e\u79d1\n\n\u7b80\u5355\u6765\u8bf4\uff0c\u5e76\u67e5\u96c6\u5c31\u662f\u4ece\u4e00\u4e2a\u56fe\u4e2d\uff0c\u627e\u51fa\u4e00\u4e2a\u70b9\u7684**\u6700\u7ec8\u7956\u5148**\uff0c\u9700\u8981\u5b9e\u73b0\u8be5\u64cd\u4f5c\u7684\u8bdd\uff0c\u6211\u4eec\u9996\u5148\u8981\u6709\u6570\u7ec4 $father$\uff1a\n\n```cpp\nint father[N];//N\u4e3a\u6700\u5927\u8282\u70b9\u6570\n```\n\n------------\n\n### \u521d\u59cb\u5316\n\n\u9996\u5148\uff0c\u7531\u4e8e\u6700\u5f00\u59cb\u7684\u65f6\u5019\u6bcf\u4e2a\u8282\u70b9\u90fd\u662f\u72ec\u7acb\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u6bcf\u4e2a\u8282\u70b9\u7684\u7956\u5148\u90fd\u8bbe\u7f6e\u4e3a\u5176\u672c\u8eab\uff1a\n\n```cpp\nfor (int i=1;i<=n;i++)\n{\n\tfather[i]=i;\n}\n```\n\n------------\n\n\n### \u67e5\u8be2\u64cd\u4f5c\n\n\u9898\u76ee\u4e2d\u6709\u4e00\u53e5\u8bdd\u5f88\u597d\u5730\u4f53\u73b0\u4e86\u67e5\u8be2\u64cd\u4f5c\u7684\u57fa\u7840\u3002\n\n>\u5982\u679c\u5b66\u751fA\u4e0e\u5b66\u751fB\u5728\u540c\u4e00\u7ec4\u91cc\uff0c\u5b66\u751fB\u4e0e\u5b66\u751fC\u4e5f\u5728\u540c\u4e00\u7ec4\u91cc\uff0c\u5c31\u8bf4\u660e\u5b66\u751fA\u4e0e\u5b66\u751fC\u5728\u540c\u4e00\u7ec4\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c$A$ \u7684\u7236\u8282\u70b9\u7684\u7236\u8282\u70b9\uff0c\u5c31\u662f\u4ed6\u7684\u7956\u5148\u8282\u70b9\u3002\n\n\u90a3\u4e48\uff0c\u65e2\u7136\u6211\u4eec\u8981\u627e\u7684\u53ea\u662f\u6bcf\u4e2a\u8282\u70b9\u7684**\u6700\u7ec8\u7956\u5148**\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u628a $A$ \u7684\u7236\u8282\u70b9\uff0c$A$ \u7684\u7236\u8282\u70b9\u7684\u7236\u8282\u70b9\u7684\uff0c\u4ed6\u4eec\u7684\u7236\u8282\u70b9\u90fd\u53d8\u4e3a $A$ \u7684**\u6700\u7ec8\u7956\u5148**\u5462\uff1f\n\n\u6240\u4ee5\uff0c\u8fdb\u884c\u67e5\u8be2\u64cd\u4f5c\u7684\u51fd\u6570\u5c06\u4f1a\u662f\u4e00\u4e2a**\u9012\u5f52\u51fd\u6570**\u3002\u65e2\u7136\u662f\u9012\u5f52\u51fd\u6570\uff0c\u90a3\u4e48\u5c31\u5fc5\u7136\u6709\u8fb9\u754c\u6761\u4ef6\uff1a\n\nQ\uff1a\u51fd\u6570\u4ec0\u4e48\u65f6\u5019\u7ed3\u675f\uff1f\n\nA\uff1a\u627e\u5230**\u6700\u7ec8\u7956\u5148\u8282\u70b9**\u7684\u65f6\u5019\u7ed3\u675f\u3002\n\nQ\uff1a**\u6700\u7ec8\u7956\u5148\u8282\u70b9**\u6709\u4ec0\u4e48\u7279\u70b9\uff1f\n\nA\uff1a**\u6700\u7ec8\u7956\u5148\u8282\u70b9\u7684\u7236\u8282\u70b9\u4e3a\u81ea\u8eab**\u3002\n\n\u7531\u4e8e\u6211\u4eec\u6700\u5f00\u59cb\u521d\u59cb\u5316\u7684\u65f6\u5019\u6bcf\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9\u90fd\u4e3a\u81ea\u8eab\uff0c\u800c\u5728\u8f93\u5165\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u83b7\u5f97\u7236\u8282\u70b9\u7684\u8282\u70b9\u4fbf\u662f\u7956\u5148\u8282\u70b9\uff0c\u6240\u4ee5**\u6700\u7ec8\u7956\u5148\u8282\u70b9\u7684\u7236\u8282\u70b9\u4e3a\u81ea\u8eab**\n\n\u90a3\u4e48\u6211\u4eec\u7684\u9012\u5f52\u51fd\u6570\u5177\u6709\u4e86\u8fb9\u754c\u6761\u4ef6\uff1a\n\n```cpp\ninline void find_ancestor(int x)\n{\n\tif (x==father[x])\n\t{\n\t\treturn father[x];\n\t}\n}\n```\n\n\u90a3\u4e48\u5982\u4f55\u67e5\u8be2\u5462\uff1f\n\n\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u8ba9\u51fd\u6570\u9012\u5f52\u67e5\u8be2\u5f53\u524d\u8282\u70b9\u7684\u7236\u4eb2\u8282\u70b9\u5c31\u53ef\u4ee5\u4e86\uff0c\u540c\u65f6\u8fd8\u8981\u5c06\u5f53\u524d\u8282\u70b9\u7684\u7236\u4eb2\u8282\u70b9\u7684**\u6700\u7ec8\u7956\u5148\u8282\u70b9**\u8bbe\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u7236\u4eb2\u8282\u70b9\uff0c\u63a5\u7740\u6211\u4eec\u7684 $find$_$ancesoter$ \u51fd\u6570\u5c31\u5b8c\u6210\u4e86\u3002\n\n```cpp\ninline int find_ancestor(int x)\n{\n\tif (x==father[x])\n\t{\n\t\treturn father[x];\n\t}\n   return father[x]=find_ancestor(father[x]);\n}\n```\n\n------------\n\n### \u5408\u5e76\u64cd\u4f5c\n\n\u5982\u679c\u4f60\u60f3\u8ba9\u4e24\u4e2a\u8282\u70b9\u5408\u5e76\uff0c\u90a3\u4e48\u505a\u6cd5\u5c31\u662f\u5c06\u4e00\u4e2a\u8282\u70b9\u8bbe\u4e3a\u53e6\u4e00\u4e2a\u8282\u70b9\u7684\u7956\u5148\u3002\n\n\u5982\u679c\u7406\u89e3\u4e86\u4e0a\u9762\u7684 $find$_$ancestor$ \u51fd\u6570\uff0c\u90a3\u4e48\u8fd9\u4e2a\u51fd\u6570\u5c31\u597d\u7406\u89e3\u591a\u4e86\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\u5427\n\n```cpp\ninline void emerge_nodes(int x,int y)\n{\n\tint a=find_ancestor(a);\n\tint b=find_ancestor(b);\n\tif (a!=b)\n\t{\n\t\tfather[a]=b;\n\t}\n}\n```\n\n------------\n\n\u638c\u63e1\u4e86\u8fd9\u4e9b\uff0c\u5c31\u53ef\u4ee5AC [P3367 [\u6a21\u677f] \u5e76\u67e5\u96c6](https://www.luogu.com.cn/problem/P3367) \u4e86\uff0c\u5efa\u8bae\u5148AC\u6a21\u677f\u540e\u518d\u6765\uff0c\u9605\u8bfb\u6548\u679c\u66f4\u4f73\n\n------------\n\n## \u89e3\u51b3\u672c\u9898\n\n\u672c\u9898\u4e0e\u6a21\u677f\u9898\u7684\u5dee\u5f02\u5c31\u5728\u4e8e\u672c\u9898\u591a\u4e86\u4e00\u4e2a\u5b66\u751f\u59d3\u540d\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u80fd\u518d\u7528 $father$ \u6570\u7ec4\u4e86\uff0c\u800c\u8981\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\u3002\n\n\u5bf9\uff0c\u5c31\u5dee\u8fd9\u4e48\u591a\u3002\n\n------------\n\n### \u53d8\u91cf\u58f0\u660e\n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u4e24\u4e2a\u53d8\u91cf $n$,$m$\uff0c\u542b\u4e49\u5206\u522b\u4e3a\u70b9\u6570\u548c\u8fb9\u6570\u3002\n\n```cpp\nint n,m;\n```\n\n\u63a5\u4e0b\u6765\uff0c\u7531\u4e8e\u672c\u9898\u4e2d\u6709\u201c\u540d\u5b57\u201d\u8fd9\u4e2a\u6982\u5ff5\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u7ed3\u6784\u4f53\u6765\u5b58\u50a8\u6bcf\u4e2a\u8282\u70b9\u7684\u540d\u5b57\u548c\u7236\u8282\u70b9\u3002\n\n```cpp\nstruct node\n{\n\tstring name;\n\tint father;\n}stu[N];\n```\n\n\u8fd9\u6837\uff0c``stu[i].name`` \u5c31\u8868\u793a\u4e86\u7b2c $i$ \u4e2a\u540c\u5b66\u7684\u540d\u5b57\uff0c``stu[i].father``\u5c31\u8868\u793a\u4e86\u7b2c $i$ \u4e2a\u540c\u5b66\u7684\u7236\u8282\u70b9\u3002\n\n### \u51fd\u6570\n\n\u5176\u4e2d\u8981\u6709\u4e00\u4e2a\u51fd\u6570\uff0c\u4f20\u5165\u4e00\u4e2a\u59d3\u540d\uff0c\u8fd4\u56de\u8be5\u5b66\u751f\u7684\u7f16\u53f7\uff0c\u6bd4\u8f83\u7b80\u5355\u5c31\u4e0d\u8bb2\u4e86\u3002\n\n```cpp\n//\u5176\u4e2dn\u4e3a\u5b66\u751f\u4eba\u6570\ninline int name_to_num(string a)\n{\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tif (match(a,stu[i].name))\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n}\n```\n\u7ec6\u5fc3\u7684\u4f60\u4e00\u5b9a\u6ce8\u610f\u5230\u4e86\uff0c\u8fd9\u91cc\u8fd8\u7528\u5230\u4e86\u4e00\u4e2a $match$ \u51fd\u6570\uff0c\u8fd9\u662f\u6211\u5199\u6765\u5224\u65ad\u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u5b8c\u5168\u76f8\u540c\u7684\uff0c\u56e0\u4e3a\u6211\u603b\u662f\u611f\u89c9\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e4b\u95f4\u7528 ``==`` \u5f88\u5947\u602a\u3002\n\n```cpp\ninline bool match(string a,string b)\n{\n\tif (a.size()!=b.size())\n\t{\n\t\treturn 0;\n\t}\n\tfor (int i=0;i<=a.size()-1;i++)\n\t{\n\t\tif (a[i]!=b[i])\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 1;\n}\n```\n\n\u5f88\u7b80\u5355\u5427\uff0c\u4e5f\u4e0d\u8bb2\u4e86\u3002\n\n------------\n\n\n### ~~int mian~~ \u4e3b\u51fd\u6570\n\n\u548c\u6a21\u677f\u9898\u51e0\u4e4e\u4e00\u6a21\u4e00\u6837\uff0c\u4e0d\u8bb2\u4e86\n\n```cpp\nint main()\n{\n\t//Part I\n\tcin>>n>>m;\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tcin>>stu[i].name;\n\t\tstu[i].father=i;\n\t}\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tstring a,b;\n\t\tcin>>a>>b;\n\t\tint x=name_to_num(a);\n\t\tint y=name_to_num(b);\n\t\tmerge_nodes(x,y);\n\t}\n\t//Part II\n\tint k;\n\tcin>>k;\n\tfor (int i=1;i<=k;i++)\n\t{\n\t\tstring a,b;\n\t\tcin>>a>>b;\n\t\tint x=name_to_num(a);\n\t\tint y=name_to_num(b);\n\t\tif (find_ancestor(x)==find_ancestor(y))\n\t\t{\n\t\t\tcout<<\"Yes.\"<<endl;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcout<<\"No.\"<<endl;\n\t\t}\n\t}\n}\n```\n\n------------\n\n\n## CODE\n\n\u5b8c\u6574\u4ee3\u7801~\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\nconst int N=20010;\n\nint n,m;\n\nstruct node\n{\n\tstring name;\n\tint father;\n}stu[N];\n\ninline bool match(string a,string b)\n{\n\tif (a.size()!=b.size())\n\t{\n\t\treturn 0;\n\t}\n\tfor (int i=0;i<=a.size()-1;i++)\n\t{\n\t\tif (a[i]!=b[i])\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 1;\n}\n\ninline int name_to_num(string a)\n{\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tif (match(a,stu[i].name))\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n}\n\ninline int find_ancestor(int x)\n{\n\tif (stu[x].father==x)\n\t{\n\t\treturn x;\n\t}\n\treturn stu[x].father=find_ancestor(stu[x].father);\n}\n\ninline void merge_nodes(int x,int y)\n{\n\tint a=find_ancestor(x);\n\tint b=find_ancestor(y);\n\tif (a!=b)\n\t{\n\t\tstu[a].father=b;\n\t}\n}\n\nint main()\n{\n\t//Part I\n\tcin>>n>>m;\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tcin>>stu[i].name;\n\t\tstu[i].father=i;\n\t}\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tstring a,b;\n\t\tcin>>a>>b;\n\t\tint x=name_to_num(a);\n\t\tint y=name_to_num(b);\n\t\tmerge_nodes(x,y);\n\t}\n\t//Part II\n\tint k;\n\tcin>>k;\n\tfor (int i=1;i<=k;i++)\n\t{\n\t\tstring a,b;\n\t\tcin>>a>>b;\n\t\tint x=name_to_num(a);\n\t\tint y=name_to_num(b);\n\t\tif (find_ancestor(x)==find_ancestor(y))\n\t\t{\n\t\t\tcout<<\"Yes.\"<<endl;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcout<<\"No.\"<<endl;\n\t\t}\n\t}\n}\n```\n\n\t\u7801\u5b57\u4e0d\u6613\u6c42\u70b9\u8d5e~\u62dc\u62dc\u4e86\u55b5~",
        "postTime": 1585746032,
        "uid": 310524,
        "name": "Scherzo",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P2256 \u3010\u4e00\u4e2d\u6821\u8fd0\u4f1a\u4e4b\u767e\u7c73\u8dd1\u3011"
    },
    {
        "content": "# \u5e76\u67e5\u96c6 & \u5b57\u7b26\u4e32\n\n\u672c\u9898\u4e3b\u8981\u8003\u67e5\u5bf9\u5e76\u67e5\u96c6\u7684\u7406\u89e3\u4e0e\u8fd0\u7528\uff0c\u4ee5\u53ca\u5bf9\u5b57\u7b26\u4e32\u7684\u5904\u7406\u3002\u5c31\u5e76\u67e5\u96c6\u65b9\u9762\u6765\u8bf4\uff0c\u5982\u679c\u629b\u5f00\u59d3\u540d\uff0c\u5b8c\u5168\u5c31\u662f\u5e76\u67e5\u96c6\u6a21\u677f\u9898\u3002\u4e3b\u8981\u96be\u5ea6\u5728\u5b57\u7b26\u4e32\u7684\u5904\u7406\u4e0a\u3002\n\n### String\n\n\u8fd9\u91cc\u5c31\u4e0d\u5f97\u4e0d\u63d0\u4e00\u4e0bC++\u6bd4C\u7684\u4f18\u52bf\u4e4b\u4e00\u4e86\uff1a\u65b0\u589e\u4e86string\u7c7b\u578b\uff0c\u4f7f\u6211\u4eec\u4e0d\u7528\u518d\u82e6\u903c\u5730\u53bb\u5f00\u5b57\u7b26\u6570\u7ec4\u4e86\u3002\n\n\u5148\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u7528\u4ee5\u50a8\u5b58\u6bcf\u4e2a\u4eba\u7684\u6570\u636e\n```cpp\nstruct Node\n{\n\tstring name;//\u540d\u5b57\n\tint fa,num;//\u7236\u4eb2\u7684\u7f16\u53f7\u3001\u81ea\u5df1\u7684\u7f16\u53f7\n} p[20005];\n```\n### \u5e76\u67e5\u96c6\n\n\u5e76\u67e5\u96c6\uff0c\u5728\u4e00\u4e9b\u6709N\u4e2a\u5143\u7d20\u7684\u96c6\u5408\u5e94\u7528\u95ee\u9898\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u662f\u5728\u5f00\u59cb\u65f6\u8ba9\u6bcf\u4e2a\u5143\u7d20\u6784\u6210\u4e00\u4e2a\u5355\u5143\u7d20\u7684\u96c6\u5408\uff0c\u7136\u540e\u6309\u4e00\u5b9a\u987a\u5e8f\u5c06\u5c5e\u4e8e\u540c\u4e00\u7ec4\u7684\u5143\u7d20\u6240\u5728\u7684\u96c6\u5408\u5408\u5e76\uff0c\u5176\u95f4\u8981\u53cd\u590d\u67e5\u627e\u4e00\u4e2a\u5143\u7d20\u5728\u54ea\u4e2a\u96c6\u5408\u4e2d\u3002\u8fd9\u4e00\u7c7b\u95ee\u9898\u8fd1\u51e0\u5e74\u6765\u53cd\u590d\u51fa\u73b0\u5728\u4fe1\u606f\u5b66\u7684\u56fd\u9645\u56fd\u5185\u8d5b\u9898\u4e2d\uff0c\u5176\u7279\u70b9\u662f\u770b\u4f3c\u5e76\u4e0d\u590d\u6742\uff0c\u4f46\u6570\u636e\u91cf\u6781\u5927\uff0c\u82e5\u7528\u6b63\u5e38\u7684\u6570\u636e\u7ed3\u6784\u6765\u63cf\u8ff0\u7684\u8bdd\uff0c\u5f80\u5f80\u5728\u7a7a\u95f4\u4e0a\u8fc7\u5927\uff0c\u8ba1\u7b97\u673a\u65e0\u6cd5\u627f\u53d7\uff1b\u5373\u4f7f\u5728\u7a7a\u95f4\u4e0a\u52c9\u5f3a\u901a\u8fc7\uff0c\u8fd0\u884c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u6781\u9ad8\uff0c\u6839\u672c\u5c31\u4e0d\u53ef\u80fd\u5728\u6bd4\u8d5b\u89c4\u5b9a\u7684\u8fd0\u884c\u65f6\u95f4\uff081\uff5e3\u79d2\uff09\u5185\u8ba1\u7b97\u51fa\u8bd5\u9898\u9700\u8981\u7684\u7ed3\u679c\uff0c\u53ea\u80fd\u7528\u5e76\u67e5\u96c6\u6765\u63cf\u8ff0\u3002\n\n\u5e76\u67e5\u96c6\u662f\u4e00\u79cd\u6811\u578b\u7684\u6570\u636e\u7ed3\u6784\uff0c\u7528\u4e8e\u5904\u7406\u4e00\u4e9b\u4e0d\u76f8\u4ea4\u96c6\u5408\uff08Disjoint Sets\uff09\u7684\u5408\u5e76\u53ca\u67e5\u8be2\u95ee\u9898\u3002\u5e38\u5e38\u5728\u4f7f\u7528\u4e2d\u4ee5\u68ee\u6797\u6765\u8868\u793a\u3002\n```cpp\nint merge(int x)\n{\n\tif(p[x].fa==p[x].num) return p[x].num;\n\treturn p[x].fa=merge(p[x].fa);\n}\n```\n\u6ce8\u610f\u5230**\u7b2c\u56db\u884c**\n```cpp\nreturn p[x].fa=merge(p[x].fa);\n```\n\u6211\u4eec\u53e6\u52a0\u4e86\u4e00\u4e2a\u8d4b\u503c\u8bed\u53e5\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u5c06\u6240\u6709\u4eba\u7684\u7236\u4eb2\u6307\u5411\u540c\u4e00\u4e2a\u4eba\uff0c\u907f\u514d\u51fa\u73b0\u7ebf\u6027\u7ed3\u6784\uff0c\u4ee5\u51cf\u4f4e\u590d\u6742\u5ea6\u3002\n\n### \u5982\u4f55\u5bfb\u627e\u4e00\u4e2a\u540d\u5b57\uff1f\n\n\u56e0\u4e3a\u6570\u636e\u624d2W\uff0c\u6240\u4ee5\u76f4\u63a5\u679a\u4e3e\u6240\u6709\u540d\u5b57\u77e5\u9053\u627e\u5230\u76ee\u6807\u540d\u5b57\u5e76\u8fd4\u56de\u5176\u6240\u5728\u7f16\u53f7\n```cpp\nint Find(string s)\n{\n\tint i;\n\tfor(i=1; i<=n; i++)\n\t\tif(p[i].name==s) break;\n\treturn i;\n}\n```\n### \u8bfb\u5165\u6570\u636e\u540e\u8fdb\u884c\u5408\u5e76\n\n```cpp\nfor(int i=1; i<=m; i++)\n\t{\n\t\tcin>>x>>y;\n\t\tp[merge(Find(x))].fa=merge(Find(y));\n\t}\n```\n\n### \u8be2\u95ee\u5e76\u7ed9\u51fa\u7b54\u6848\n\n```cpp\nwhile(k--)\n{\n\tcin>>x>>y;\n\tprintf(\"%s\\n\",merge(p[Find(x)].num)==merge(p[Find(y)].num)?\"Yes.\":\"No.\");\n}\n```\n## \u6807\u7a0b\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,k;\nstring x,y;\nstruct Node\n{\n\tstring name;\n\tint fa,num;\n} p[20005];\nint Find(string s)\n{\n\tint i;\n\tfor(i=1; i<=n; i++)\n\t\tif(p[i].name==s) break;\n\treturn i;\n}\nint merge(int x)\n{\n\tif(p[x].fa==p[x].num) return p[x].num;\n\treturn p[x].fa=merge(p[x].fa);\n}\nint main()\n{\n\tfor(int i=0;i<20005;i++) p[i].num=p[i].fa=i;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1; i<=n; i++) cin>>p[i].name;\n\tfor(int i=1; i<=m; i++)\n\t{\n\t\tcin>>x>>y;\n\t\tp[merge(Find(x))].fa=merge(Find(y));\n\t}\n\tscanf(\"%d\",&k);\n\twhile(k--)\n\t{\n\t\tcin>>x>>y;\n\t\tprintf(\"%s\\n\",merge(p[Find(x)].num)==merge(p[Find(y)].num)?\"Yes.\":\"No.\");\n\t}\n\treturn 0;\n}\n```\n\u6211\u662f[\u6ca1\u6709\u8f93\u5165](https://www.luogu.org/space/show?uid=154344)\uff0c\u6211\u4eec\u4e0b\u6b21\u518d\u89c1\uff01",
        "postTime": 1563849483,
        "uid": 154344,
        "name": "\u6ca1\u6709\u8f93\u5165",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2256 \u3010\u4e00\u4e2d\u6821\u8fd0\u4f1a\u4e4b\u767e\u7c73\u8dd1\u3011"
    },
    {
        "content": "\n\n### \u597d\u50cf\u6240\u6709\u5927\u4f6c\u90fd\u662f\u7528\u5e76\u67e5\u96c6\u8036\n### \u90a3\u6211\u53d1\u4e00\u4e2aHash\u7684\u505a\u6cd5\u5427\n\n\n\n~~\u672c\u849f\u84bb\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\u6765\u73a9\u73a9~~\n\n\n------------\n\n\n###### \u8d34\u4e0aAC\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define MAX 10000\nusing namespace std;\n\nint groups[MAX];\t\t\t\t\t\t//\u50a8\u5b58\u6bcf\u4e2a\u4eba\u6240\u5c5e\u7684\u7ec4\nint keys[20000];\t\t\t\t\t\t//\u50a8\u5b58\u6bcf\u4e2a\u540d\u5b57\u7684\u503c\uff08key\uff09\nint c = 0;\t\t\t\t\t\t\t\t//\u50a8\u5b58\u6709\u591a\u5c11\u4e2a\u540d\u5b57 \n\nint eHash (string s) {\t\t\t\t\t//Hash\u51fd\u6570,\u5c06\u540d\u5b57\u8f6c\u4e3a\u4e00\u4e2a\u552f\u4e00\u7684int\u503c \n\tint res = 0, len  = s.length();\n\tfor (int i = 0; i < len; i++) {\n\t\tres += (int)s[i];\t\t\t\t//\u5c06\u6bcf\u4e2a\u5b57\u6bcd\u8f6c\u6362\u6210int\u76f8\u52a0\uff08ASCII\uff09 \n\t}\n\t\n\tkeys[c] = res;\t\t\t\t\t\t \n\tc++;\n\t\n\treturn res;\n}\n\nint main () {\n\tmemset(groups,0,sizeof(groups));\t\t\t//\u5c06groups\u6240\u6709\u5143\u7d20\u521d\u59cb\u5316\u4e3a0,0\u5373\u65e0\u7ec4 \n\t\n\tstring temp;\t\t\t\t\t\t//\u8fd9\u6bb5\u7528\u6765\u8df3\u8fc7\u521a\u5f00\u59cb\u7684\u59d3\u540d\u8f93\u5165\uff08\u7528\u4e0d\u7740\uff09 \n\tint n, m;\n\tcin>>n>>m;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin>>temp;\n\t}\n\t\n\t//\u5904\u7406\u5173\u7cfb \n\tint t = 1;\t\t\t\t\t\t\t//\u8bb0\u5f55\u5f00\u4e86\u591a\u5c11\u4e2a\u5c0f\u7ec4 \n\tstring t1, t2;\n\tint b1, b2;\n\tfor (int j = 0; j < m; j++) {\n\t\tcin>>t1>>t2;\n\t\tb1 = eHash(t1);\n\t\tb2 = eHash(t2);\n\t\t\n\t\tif (groups[b1] == 0 && groups[b2] == 0) {\t\t\t\t//\u5982\u679c\u4e24\u4e2a\u540d\u5b57\u90fd\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u4e00\u4e2a\u7ec4,\u5219\u5212\u4e3a\u65b0\u7ec4 \n\t\t\tgroups[b1] = t;\n\t\t\tgroups[b2] = t;\n\t\t\tt++;\n\t\t} else if (groups[b1] == groups[b2]) {\t\t\t\t\t//\u540c\u7ec4\u8df3\u8fc7 \n\t\t\tcontinue;\n\t\t} else if (groups[b1] == 0 && groups[b2] != 0) {\t\t//\u5982\u679c\u4e24\u4e2a\u540d\u5b57\u4e2d\u6709\u4e00\u4e2a\u6709\u7ec4,\u5219\u5c06\u53e6\u4e00\u4e2a\u540d\u5b57\u5212\u4e3a\u53e6\u4e00\u4e2a\u540d\u5b57\u7684\u7ec4 \n\t\t\tgroups[b1] = groups[b2];\n\t\t} else if (groups[b2] == 0 && groups[b1] != 0) {\n\t\t\tgroups[b2] = groups[b1];\n\t\t} else if (groups[b1] != 0 && groups[b2] != 0) {\t\t//\u5982\u679c\u4e24\u4e2a\u4eba\u7684\u540d\u5b57\u90fd\u6709\u7ec4\uff0c\u5219\u5c06\u4e00\u4e2a\u7ec4\u5168\u90e8\u5212\u4e3a\u53e6\u4e00\u4e2a\u7ec4 \n\t\t\tint t = groups[b2];\n\t\t\tfor (int i = 0; i < c; i++) {\n\t\t\t\tif (groups[keys[i]] == t) {\n\t\t\t\t\tgroups[keys[i]] = groups[b1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\t\n\t//\u8f93\u51fa\u7b54\u6848 \n\tint k;\n\tcin>>k;\n\tstring a1, a2;\n\tfor (int l = 0; l < k; l++) {\n\t\tcin>>a1>>a2;\n\t\tif (groups[eHash(a1)] == 0 && groups[eHash(a2)] == 0) { //\u76f4\u63a5\u5224\u65ad\u4e24\u4eba\u662f\u5426\u4e3a\u540c\u7ec4,\u4f46\u6709\u7279\u6b8a\u60c5\u51b5,\u5373\u4e24\u4eba\u90fd\u65e0\u7ec4\uff08\u90fd\u4e3a0\uff09,\u8fd9\u79cd\u60c5\u51b5\u8f93\u51faNo \n\t\t\tcout<<\"No.\"<<endl;\n\t\t} else if (groups[eHash(a1)] == groups[eHash(a2)]) {\n\t\t\tcout<<\"Yes.\"<<endl;\n\t\t} else {\n\t\t\tcout<<\"No.\"<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1544089487,
        "uid": 135921,
        "name": "ENOR4",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2256 \u3010\u4e00\u4e2d\u6821\u8fd0\u4f1a\u4e4b\u767e\u7c73\u8dd1\u3011Hash\u505a\u6cd5"
    },
    {
        "content": "# \u8fd9\u9898\u5176\u5b9e\u6c34\u7684\u4e00\u6279\n\n## \u548c\u4eb2\u621a\u4e00\u6837\u7684\u9898\u76ee\uff0c\u662f\u4e0d\u8fc7\u662f\u5b57\u80e1\u4e32\u800c\u5df2\n\n## \u6240\u4ee5\u6211\u4eec\u53ea\u8981\u89e3\u51b3\u5b57\u80e1\u4e32\u7684\u95ee\u9898\u5c31\u53ef\u4ee5\u5566\n\n## \u849f\u84bb\u7528\u7ed3\u6784\u4f53\u5c31\u5199\u51fa\u6765\u4e86qwq\n\n## \u4ee3\u7801\u8d85\u7ea7\u77ed\uff0c\u7b80\u5355\u6613\u61c2\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<map>\nusing namespace std;\nstruct node{\n\tstring a;//a\u662f\u59d3\u540d\n\tint b;//\u7528int\u7c7b\u578b\u6765\u66ff\u4ee3\u59d3\u540d,\u5176\u5b9e\u5c31\u662f\u89e3\u51b3\u95ee\u9898\u7684\u5173\u952e\n}ar[1000];\nint n,m,k,fa[1000];\nint find(int x)//\u5e76\u67e5\u96c6\u4ee3\u7801\n{\n\twhile(x!=fa[x]) x = fa[x] = fa[fa[x]];\n\treturn x;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=0;i<1000;i++)fa[i]=i;//\u521d\u59cb\u5316\u51b0\u8336\u51e0\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&ar[i].a);\n\t\tint len = ar[i].a.length();\n\t\tint ans = 0;\n\t\tfor(int j=0;j<len;j++)ans+=ar[i].a[j];//\u7528\u6570\u5b57\u6765\u4ee3\u66ff\u5b57\u80e1\u4e32\u5c31\u5b8c\u7f8e\u89e3\u51b3\u4e86\n\t\tar[i].b = ans;\n\t}\n\tfor(int i=0;i<m;i++)\n\t{\n\t\tstring x,y;\n\t\tcin>>x>>y;\n\t\tint a,b;\n\t\tfor(int j=0;j<n;j++)\n\t\t{\n\t\t\tif(ar[j].a==x)a = j;//\u627e\u5230\u4e24\u4e2a\u4eba\u7684\u4e0b\u6807\n\t\t\tif(ar[j].a==y)b = j;\n\t\t}\n\t\tfa[find(ar[a].b)] = find(ar[b].b);//\u5408\u5e76\n\t}\n\tscanf(\"%d\",&k);\n\tfor(int i=0;i<k;i++)\n\t{\n\t\tstring x,y;\n\t\tcin>>x>>y;\n\t\tint a,b;\n\t\tfor(int j=0;j<n;j++)\n\t\t{\n\t\t\tif(ar[j].a==x)a = j;//\u4f9d\u7136\u627e\u4e0b\u6807\n\t\t\tif(ar[j].a==y)b = j;\n\t\t}\n\t\tif(find(ar[a].b)==find(ar[b].b))printf(\"Yes.\\n\");//\u5224\u65ad\u662f\u5426\u5728\u4e00\u4e2a\u96c6\u5408\u5185\n\t\telse printf(\"No.\\n\");\n\t}\n    return 0;\n}\t\n```\n~~qwq\u5e0c\u671b\u80fd\u8fc7\uff0c\u8981\u4e0d\u7136\u6700\u540e\u4e00\u5e74noip\u4e00\u7bc7\u9898\u89e3\u90fd\u6ca1\u8fc7~~",
        "postTime": 1541215119,
        "uid": 36955,
        "name": "Tools",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2256 \u3010\u4e00\u4e2d\u6821\u8fd0\u4f1a\u4e4b\u767e\u7c73\u8dd1\u3011"
    },
    {
        "content": "\u554a\uff01\u8fd9\u4e0d\u662f\u9053\u6a21\u677f\u9898\u5417\uff1f\u2014\u2014\u521a\u770b\u9898\u7684\u6211\n\n\u53ea\u8981\u56de\u4e86\u5e76\u67e5\u96c6\uff0c\u8fd9\u9898\u5206\u5206\u4e2d\u5207\u6389\uff0c\u552f\u4e00\u7684\u96be\u70b9\u5c31\u662f\u5b57\u7b26\u4e32\u5904\u7406\u3002\n\n\u5173\u4e8e\u5b57\u7b26\u4e32\u5904\u7406\uff0cc++\u91cc\u6709\u4e2a\u5e93\u51fd\u6570\u53ebmap\uff0c\uff0c\uff0c\n\n```\nmap<string,string>a;\n```\n\n\u5c31\u7b49\u540c\u4e8e\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u578b\u4e3a\u5b57\u7b26\u4e32\uff0c\u4e0b\u6807\u4e3a\u5b57\u7b26\u4e32\u7684\u6570\u7ec4a\uff0c\u672c\u9898\u7528\u8fd9\u4e2a\u50a8\u5b58\u5373\u53ef\u3002\n\n\u56e0\u4e3a\u540c\u4f34\u7684\u540d\u5b57\u80af\u5b9a\u662f\u4e2a\u5b57\u7b26\u4e32\uff0c\u6240\u4ee5\u6570\u7ec4\u7c7b\u578b\u4e5f\u662f\u5b57\u7b26\u4e32\u3002\n\n\u5173\u4e8e\u5e76\u67e5\u96c6\uff1a\n\n\u5148\u5b9a\u4e49\u961f\u4e2d\u4e00\u4e2a\u4eba\u662f\u961f\u957f\uff0c\u7136\u540e\u5b9a\u4e49f\u6570\u7ec4\uff0cf[\u961f\u5458\u7684\u540d\u5b57]=\u961f\u957f\u7684\u540d\u5b57\u3002\n\n\u4e8e\u662f\uff0c\u8fd9\u4e2a\u961f\u6240\u6709\u4eba\u7684\u7956\u5148\u90fd\u7b49\u4e8e\u961f\u957f\u7684\u540d\u5b57\u3002\n\n\u7ed9\u51fa\u5bfb\u627e\u4ee3\u7801\n```cpp\n\nstring fd(string x)//\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u540d\u5b57\n{\n\tif(f[x]==x)//\u5982\u679c\u8fd9\u4e2a\u4eba\u961f\u7684\u961f\u957f\u662f\u81ea\u5df1\uff0c\u90a3\u4e48\u4ed6\u5c31\u662f\u961f\u957f\n\t\treturn x;\n\telse\n\t\treturn f[x]=fd(f[x]);//\u5982\u679c\u4e0d\u662f\uff0c\u5c31\u7ee7\u7eed\u627e\u4e0b\u53bb\uff0c\u987a\u4fbf\u628a\u9014\u4e2d\u7684\u90fd\u6807\u8bb0\u4e00\u4e0b\u3002\n}\n```\n\n\u7ed9\u51fa\u5408\u5e76\u4ee3\u7801\uff1a\n\n```cpp\n\nstring x,y;//x,y\u4e3a\u4e24\u4e2a\u4eba\u7684\u540d\u5b57\uff0c\u8fd9\u91cc\u628a\u8f93\u5165\u52a0\u4e0a\u53bb\u4e86\ncin>>x>>y;\nf[fd(x)]=fd(y);//\u9ed8\u8ba4\u5de6\u8fb9\u7684\u4eba\u5c5e\u4e8e\u53f3\u8fb9\u7684\u961f\uff0cfd\uff08x\uff09\u5c31\u76f4\u63a5\u628a\u4ed6\u7684\u540c\u4f34\u90fd\u5408\u5e76\u5230\u90a3\u4e2a\u961f\u53bb\u4e86\u3002fd\uff08y\uff09\u4ee3\u8868\u53f3\u8fb9\u7684\u961f\u957f\u3002\n```\n\n\u5b8c\u6574\u4ee3\u7801\uff08\u65e0\u6ce8\u91ca\uff09\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nmap<string,string> f;\nstring fd(string x)\n{\n\tif(f[x]==x)\n\t\treturn x;\n\telse\n\t\treturn f[x]=fd(f[x]);\n}\nint main(){\n\tint n,m,k;\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tstring x;\n\t\tcin>>x;\n\t\tf[x]=x;\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tstring x,y;\n\t\tcin>>x>>y;\n\t\tf[fd(x)]=fd(y);\n\t}\n\tcin>>k;\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\tstring x,y;\n\t\tcin>>x>>y;\n\t\tif(fd(x)==fd(y))\n\t\t\tcout<<\"Yes.\";\n\t\telse\n\t\t\tcout<<\"No.\";\n\t\tcout<<endl;\n\t}\n\t\n\treturn 0;\n}\n\n```",
        "postTime": 1578479601,
        "uid": 151647,
        "name": "sycqwq",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2256 \u3010\u4e00\u4e2d\u6821\u8fd0\u4f1a\u4e4b\u767e\u7c73\u8dd1\u3011"
    },
    {
        "content": "##### \u5176\u5b9e\u8fd9\u9053\u9898\u5f88\u7b80\u5355\u7684\u5566\n### STL\u771f\u597d\u7528\n\n------------\n\n## \u601d\u8def\n\u4e00\u822c\u7684\u5e76\u67e5\u96c6\u662f\u8fd9\u6837\u5199\u7684\uff1a  \n$int \\ fa[20005];$  \n\u4e0d\u96be\u53d1\u73b0\uff0c\u5b83\u53ef\u4ee5\u8f6c\u5316\u6210\u8fd9\u6837\uff1a  \n$map<int,int>fa;$  \n\u90a3\u4e48\uff0c\u5bf9\u4e8e\u8fd9\u9898\uff0c\u53ef\u4ee5\u628a\u5e76\u67e5\u96c6\u5199\u6210\u8fd9\u6837\uff1a  \n$map<string,string>fa;$  \n\u7136\u540e\u518d\u5957\u6a21\u677f\u5c31\u884c\u4e86\n\n\n------------\n\n## Code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n//\u4ee5\u4e0b\u4e3a\u5e76\u67e5\u96c6\u6a21\u677f\nmap<string,string>fa;//STL\u771f\u597d\u7528\nstring find(string k){//\u6ce8\u610f\u7c7b\u578b\u4e3astring\n\tif(fa[k]!=k){\n\t\tfa[k]=find(fa[k]);\n\t}\n\treturn fa[k];\n}\nvoid unionn(string x,string y){//\u6ce8\u610f\u7c7b\u578b\u4e3astring\n\tx=find(x);\n\ty=find(y);\n\tif(x!=y){\n\t\tfa[y]=x;\n\t}\n}\nstring x,y;\nint n,m,p;\nint main(){\n\tcin>>n>>m;\n\twhile(n--){\n\t\tcin>>x;\n\t\tfa[x]=x;//\u6211 \u662f \u6211 \u7238 \u7238\n\t}\n\twhile(m--){\n\t\tcin>>x>>y;\n\t\tunionn(x,y);//\u5408\u5e76\n\t}\n\tcin>>p;\n\twhile(p--){\n\t\tcin>>x>>y;\n\t\tif(find(x)==find(y)){//\u5224\u65ad\u4ed6\u4eec\u7684\u7956\u5148\u662f\u4e0d\u662f\u540c\u4e00\u4e2a\n\t\t\tcout<<\"Yes.\"<<endl;\n\t\t}\n\t\telse{\n\t\t\tcout<<\"No.\"<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n#### \u8dd1\u5f97\u8fd8\u633a\u5feb\uff0c\u53ea\u7528\u4e86$12ms$",
        "postTime": 1575172045,
        "uid": 150843,
        "name": "\u5510\u4e00\u6587",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2256 \u3010\u4e00\u4e2d\u6821\u8fd0\u4f1a\u4e4b\u767e\u7c73\u8dd1\u3011"
    },
    {
        "content": "# P2256 \u4e00\u4e2d\u6821\u8fd0\u4f1a\u4e4b\u767e\u7c73\u8dd1 \u89e3\u9898\u62a5\u544a\n\n### \u9898\u76ee\u63cf\u8ff0\n\n\u5047\u8bbe\u4e00\u5171\u6709N\uff082<=N<=20000\uff09\u4e2a\u53c2\u8d5b\u9009\u624b\u3002\uff08\u5c3c\u739b\u5168\u6821\u5b66\u751f\u90fd\u6ca1\u8fd9\u4e48\u591a\u5427\uff09\n\n\u8001\u5e08\u4f1a\u544a\u8bc9\u4f60\u8fd9N\u4e2a\u9009\u624b\u7684\u540d\u5b57\u3002\n\n\u63a5\u7740\u4f1a\u544a\u8bc9\u4f60M\uff081<=M<=1000000\uff09\u53e5\u8bdd\uff0c\u5373\u544a\u8bc9\u4f60\u5b66\u751fA\u4e0e\u5b66\u751fB\u5728\u540c\u4e00\u4e2a\u7ec4\u91cc\u3002\n\n\u5982\u679c\u5b66\u751fA\u4e0e\u5b66\u751fB\u5728\u540c\u4e00\u7ec4\u91cc\uff0c\u5b66\u751fB\u4e0e\u5b66\u751fC\u4e5f\u5728\u540c\u4e00\u7ec4\u91cc\uff0c\u5c31\u8bf4\u660e\u5b66\u751fA\u4e0e\u5b66\u751fC\u5728\u540c\u4e00\u7ec4\u3002\n\n\u7136\u540e\u8001\u5e08\u4f1a\u95ee\u4f60K\uff081<=K<=1000000\uff09\u53e5\u8bdd\uff0c\u5373\u5b66\u751fX\u548c\u5b66\u751fY\u662f\u5426\u5728\u540c\u4e00\u7ec4\u91cc\u3002\n\n\u82e5\u662f\u5219\u8f93\u51fa\"Yes.\"\uff0c\u5426\u5219\u8f93\u51fa\"No.\"\n\n### \u601d\u8def\n\n\u8fd9\u662f\u4e00\u9053\u660e\u663e\u7684\u5e76\u67e5\u96c6\u88f8\u9898\uff0c\u548c\u4eb2\u621a\u90a3\u9053\u9898\u5dee\u4e0d\u591a\uff0c\u53ea\u4e0d\u8fc7\u662f\u5c06\u6570\u5b57\u7f16\u53f7\u53d8\u4e3a\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4f46\u662f$\\mathcal{NO} $ $\\mathcal{ PROBLEM}$\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u975e\u5e38\u597d\u7528\u7684\u4e1c\u897f\u53eb\u505a$\\mathbb{STL}$~~\uff08C++\u5927\u6cd5\u597d~~\n\n\u7136\u540e\u5176\u4e2d\u6709\u4e00\u4e2a\u53eb\u505astring\u7684\uff0c\u8fd8\u6709\u4e00\u4e2a\u53eb\u505amap\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5f00\u4e00\u4e2amap\u6765\u4ee3\u66fff\u6570\u7ec4\uff0cfind\u7684\u65f6\u5019\u76f4\u63a5\u8fd4\u56destring\u7c7b\u578b\uff0c\u90a3\u8fd9\u9053\u9898\u5c31\u662f\u975e\u5e38\u7b80\u5355\u7684\u4e86\n\n### \u4ee3\u7801\n\n```c++\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<map>\n#include<string>\n#define maxn 22000\nusing namespace std;\nmap<string,string>f;\nstring find(string x){\n\treturn f[x]==x?f[x]:f[x]=find(f[x]);\n}\nvoid merge(string a,string b){\n\ta=find(a);\n\tb=find(b);\n\tif(a==b){\n\t\treturn;\n\t}\n\tf[a]=b;\n}\nint n,m,k;\nint main(){\n\tcin>>n>>m;\n\tstring s;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>s;\n\t\tf[s]=s;\n\t}\n\tstring z;\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>s>>z;\n\t\tmerge(s,z);\n\t}\n\tcin>>k;\n\tfor(int i=1;i<=k;i++){\n\t\tcin>>s>>z;\n\t\tif(find(s)==find(z)){\n\t\t\tcout<<\"Yes.\"<<endl;\n\t\t}\n\t\telse{\n\t\t\tcout<<\"No.\"<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1569464798,
        "uid": 143418,
        "name": "\u5b51\u5f67",
        "ccfLevel": 0,
        "title": "P2256 \u4e00\u4e2d\u6821\u8fd0\u4f1a\u4e4b\u767e\u7c73\u8dd1 \u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "##### \u8fd9\u4e2a\u9898\u8fd8\u53ef\u4ee5\u5427\n# \u601d\u8def\uff1a\n1\u3001\u5b9a\u4e49map\uff0c\u5e93\u6587\u4ef6\uff1a<map> \uff08\u4e07\u80fd\u5934\u4e5f\u884c\uff09\n  \n\u683c\u5f0f\u5c31\u662f\u4ee3\u7801\u4e0a\u90a3\u6837\uff08\u6211\u4e5f\u662f\u6700\u8fd1\u521a\u5b66\u4f1a\uff09\uff0c\u5c31\u662f\u5b9a\u4e49\u7684\u6570\u7ec4\u4e2d\u90fd\u662f\u5b57\u7b26\u4e32\u7684\u65f6\u5019\u7528\u3002\n\n2\u3001\u8f93\u5165\u6bcf\u4e2a\u4eba\u7684\u540d\u5b57\uff0c\u8ba9\u6bcf\u4e2a\u4eba\u96c6\u5408\u91cc\u7684\u201c\u8001\u5927\uff08\u6839\u8282\u70b9\uff09\u201d\u90fd\u7b49\u4e8e\u81ea\u5df1\n\n3\u3001\u8f93\u5165\u4e24\u4e2a\u4eba\u540d\u5b57\uff0c\u5982\u679c\u4e24\u4e2a\u4eba\u7684\u201c\u8001\u5927\uff08\u6839\u8282\u70b9\uff09\u201d\u4e0d\u76f8\u7b49\uff0c\u5c31\u8bf4\u660e\u4e0d\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u91cc\u9762\uff0c\u5c31\u5c06\u4ed6\u4eec\u52a0\u5165\u540c\u4e00\u4e2a\u96c6\u5408\u3002\n\n4\u3001\u6700\u540e\u8f93\u5165\u4e24\u4e2a\u4eba\uff0c\u5982\u679c\u4e24\u4e2a\u4eba\u5728\u96c6\u5408\u4e2d\u201c\u8001\u5927\uff08\u6839\u8282\u70b9\uff09\u201d\u76f8\u540c\uff0c\u5c31\u8bf4\u660e\u5728\u540c\u4e00\u96c6\u5408\u4e2d\uff0c\u8f93\u51faYes.\n\n#### \u7279\u522b\u63d0\u9192\uff1a\n\n\u8f93\u51fa\u7684\u540e\u9762\u6709\u4e2a\u70b9\u201cYes.\u201d\u201cNo.\u201d\n# \u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nmap<string,string> a;\nstring find(string x)\n{\n\tif(x!=a[x])\n\ta[x]=find(a[x]);\n\treturn a[x];\t//find\u51fd\u6570\u5bfb\u627e\u201c\u8001\u5927\u201d\uff08\u6839\u8282\u70b9\uff09 \n}\nvoid lian(string x,string y)\n{\n\ta[y]=x;\t\t//lain\u51fd\u6570\u5c31\u662f\u5c06\u4e24\u4e2a\u540d\u5b57\u653e\u5230\u540c\u4e00\u96c6\u5408\u4e2d \n}\nint main()\n{\n\tint n,m;\n\tstring x,y;\n\tscanf(\"%d%d\",&n,&m);\t//\u8f93\u5165 \n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>x;\n\t\ta[x]=x;\t\t\t//\u5c06\u4ed6\u4eec\u7684\"\u8001\u5927\"\u90fd\u8bbe\u6210\u81ea\u5df1 \n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>x>>y;\n\t\tstring r1=find(x);\n\t\tstring r2=find(y);\n\t\tif(r1!=r2)\n\t\t\tlian(r1,r2);//\u6ce8\u610f\u8fd9\u91cc\u653e\u5230\u7edf\u4e00\u96c6\u5408\u4e2d\u7684\u662fr1\u548cr2 \n\t}\n\tint k;\n\tcin>>k;\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\tcin>>x>>y;\n\t\tif(find(x)==find(y))\t//\u5982\u679c\u662f\u540c\u4e00\u201c\u8001\u5927\u201d\u8f93\u51fa\uff1aYes. \n\t\tcout<<\"Yes.\"<<'\\n';\t\t//\u6709\u4e2a\u70b9\uff01\uff01\uff01\uff01 \n\t\telse\n\t\tcout<<\"No.\"<<'\\n';\t\t//\u6709\u4e2a\u70b9\uff01\uff01\uff01 \n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1554863131,
        "uid": 190316,
        "name": "F_S_R_M",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2256 \u3010\u4e00\u4e2d\u6821\u8fd0\u4f1a\u4e4b\u767e\u7c73\u8dd1\u3011"
    },
    {
        "content": "\u628a\u5b57\u7b26\u4e32\u7684\u5b58\u50a8\u65b9\u5f0f\u53d8\u6210\u6570\u5b57\uff0c\u5176\u4ed6\u7684\u5c31\u53ef\u4ee5\u7ee7\u7eed\u5957\u6a21\u7248\u5566\uff01\n\n```cpp\n#include <iostream>\n#include <unordered_map>\nusing namespace std;\nint n, m, k, pre[20005];\n\nvoid Initialize () {\n    for (int i = 1; i <= n; i++)\n        pre[i] = i;\n}\n\nint Find (int x) {\n    if (x == pre[x])\n        return x;\n    return pre[x] = Find(pre[x]);\n}\n\nvoid Join (int x, int y) {\n    int fx = Find(x);\n    int fy = Find(y);\n    if (fx != fy)\n        pre[fy] = fx;\n}\n\nint main() {\n    cin >> n >> m;\n    string s;\n    unordered_map<string, int> hash;\n    for (int i = 1; i <= n; i++) {\n        cin >> s;\n        hash[s] = i;\n    }\n    Initialize();\n    for (int i = 1; i <= m; i++) {\n        string str1, str2;\n        cin >> str1 >> str2;\n        Join(hash[str1], hash[str2]);\n    }\n    cin >> k;\n    for (int i = 1; i <= k; i++) {\n        string a, b;\n        cin >> a >> b;\n        if (Find(hash[a]) == Find(hash[b]))\n            cout << \"Yes.\" << endl;\n        else\n            cout << \"No.\" << endl;\n    }\n    \n    return 0;\n}\n```\n",
        "postTime": 1552120748,
        "uid": 141646,
        "name": "kindle",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2256 \u3010\u4e00\u4e2d\u6821\u8fd0\u4f1a\u4e4b\u767e\u7c73\u8dd1\u3011"
    },
    {
        "content": "**~~\u5e76\u67e5\u96c6+\u66b4\u529b\u543c\u554a~~**\n\n\u8fd9\u9898\u5176\u5b9e\u4e5f\u5c31\u662f\u5e76\u67e5\u96c6\u65e0\u8111\u677f\u5b50\u9898\uff0c\u4e0d\u8fc7\u9700\u8981\u5408\u5e76\u7684\u662f\u5b57\u7b26\u4e32\u3002\n\n\u5176\u5b9e\u4e5f\u5f88\u7b80\u5355\u3002\u53ea\u9700\u8981\u628a\u6bcf\u4e2a\u5b57\u7b26\u4e32\u6309\u7167\u8f93\u5165\u987a\u5e8f\u5bf9\u5e94\u7684\u4e0b\u6807\u6765\u8fdb\u884c\u5408\u5e76\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5728\u8be2\u95ee\u7684\u65f6\u5019\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u7684\u5b57\u7b26\u4e32\uff0c\u66b4\u529b\u627e\u4e0b\u6807\u518d\u5224\u662f\u5426\u5728\u540c\u4e00\u96c6\u5408\u5c31\u53ef\u4ee5\u4e86\uff08~~\u600e\u4e48\u6ca1\u6709\u88ab\u5361\u6b7b~~\uff09\n\n\u5e76\u67e5\u96c6\u8fd8\u6ca1\u5b66\uff1f\u5148\u5b66\u4e00\u5b66\uff0c\u638c\u63e1\u57fa\u672c\u64cd\u4f5c\uff0c\u518d\u628a[\u8fd9\u9053\u9898](https://www.luogu.org/problemnew/show/P3367)A\u4e86\n\n$AC$ $Code$\n\n```cpp\n#include <iostream>\nusing namespace std;\n\nint fa[1000010];\n\nstring str[1000010];//\u7528\u5b57\u7b26\u4e32\u6570\u7ec4\u5b58\u4fbf\u4e8e\u67e5\u627e\u5b57\u7b26\u4e32\u4e0b\u6807\n\nint n,m,k;\n\nint init(){\n\tfor(int i=1;i<=n;i++)\n\t\tfa[i]=i;\n}//\u5e76\u67e5\u96c6\u521d\u59cb\u5316\uff08\u6ce8\u610f\u4e00\u5b9a\u8981\u521d\u59cb\u5316\uff01\u5426\u5219\u7b49\u4e8e\u767d\u6253\uff09\n\nint findname(string s){\n\tfor(int i=1;i<=n;i++)\n\t\tif(s==str[i])\n\t\t\treturn i;\n}//\u67e5\u627e\u5b57\u7b26\u4e32\u4e0b\u6807\n\nint find(int x){\n\tif(fa[x]!=x)\n\t\tfa[x]=find(fa[x]);\n\treturn fa[x];\n}//\u5e26\u8def\u5f84\u538b\u7f29\u7684\u201c\u67e5\u201d\n\nvoid unite(int x,int y){\n\tx=find(x),y=find(y);\n\tif(x==y)\n\t\treturn ;\n\tfa[x]=y;\n}//\u57fa\u4e8e\u201c\u67e5\u201d\u4e0a\u9762\u7684\u201c\u5e76\u201d\n\nbool same(int x,int y){\n\treturn find(x)==find(y);\n}//\u5224\u65ad\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u4e0b\u6807\uff08\u53ca\u4e24\u4e2a\u5b57\u7b26\u4e32\uff09\u662f\u5426\u5728\u540c\u4e00\u96c6\u5408\u5185\n\nint main(){\n\tcin>>n>>m;\n\tinit();//\u521d\u59cb\u5316\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>str[i];\n\tfor(int i=1;i<=m;i++){\n\t\tstring s1,s2;\n\t\tcin>>s1>>s2;\n\t\tint x=findname(s1),y=findname(s2);\n\t\tunite(x,y);\n\t}//\u8bfb\u5165+\u5408\u5e76\n\tcin>>k;\n\twhile(k--){\n\t\tstring s1,s2;\n\t\tcin>>s1>>s2;\n\t\tint x=findname(s1),y=findname(s2);\n\t\tif(same(x,y))\n\t\t\tcout<<\"Yes.\\n\";\n\t\telse\n\t\t\tcout<<\"No.\\n\";\n\t}//\u8be2\u95ee\u5728\u7ebf\u641e\n\treturn 0;//\u5b8c\u7ed3\u6492\u82b1\uff01\n}\n```\n\n\u4e0d\u8fc7\u8017\u65f6\u6709\u70b9\u6162\uff0c132ms\u3002\u3002\u3002",
        "postTime": 1547911591,
        "uid": 88213,
        "name": "zhangyuhan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2256 \u3010\u4e00\u4e2d\u6821\u8fd0\u4f1a\u4e4b\u767e\u7c73\u8dd1\u3011"
    },
    {
        "content": "## Map\n\nSTL\u5927\u6cd5\u597d\u7528\uff01 \u5b9e\u73b0\u7684\u601d\u8def\u5c31\u662f\uff0c\u628a\u6bcf\u4e2a\u540d\u5b57\u5bf9\u5e94\u4e00\u4e2a\u7f16\u53f7,\u7528map\u5b58\uff0c\u7136\u540e\u5c31 **\u5b8c\u5b8c\u5168\u5168** \u662f\u5e76\u67e5\u57fa\u7684\u6a21\u677f\u4e86\u3002 \n\n\u770b\u4e0a\u53bb\u5f88\u6e05\u6670\u5f88\u660e\u767d\u554a~~\n\n\u4e0b\u9762\u662f\u5b8c\u6574\u4ee3\u7801    \n\n    \u5934\u51fd\u6570#include<map>\n```cpp\n\nmap<string,int>mp;\nint n,m,q,f[10005];\n\nint getf(int v)\n{\n\treturn v==f[v]? v:f[v]=getf(f[v]);\n}\n\nvoid merge(int a,int b)\n{\n\ta=getf(a);\n\tb=getf(b);\n\tif(a!=b)\n\t{\n\t\tf[b]=a;\n\t}\n}\n\nint main()\n{\n\tfor(int i=1;i<=10003;i++)\n\t\tf[i]=i;\n\t\t\n\tcin>>n>>m;\n\tstring s,s1,s2;\n\t\n\tfor(int i=1;i<=n;i++)\t{\n\t\tcin>>s;\n\t\tmp[s]=i;\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>s1>>s2;\n\t\tif(mp[s1]<mp[s2])  //\u5fc5\u987b\u4e25\u683c\u6309\u7167 a<b, merge(a,b) \n\t\t\tmerge(mp[s1],mp[s2]);\n\t\telse\n\t\t\tmerge(mp[s2],mp[s1]);\n\t}\n\tcin>>q;\n\twhile(q--)\n\t{\n\t\tcin>>s1>>s2;\n\t\tif( getf(mp[s1])==getf(mp[s2]))\n\t\t\tcout<<\"Yes.\"<<endl;\n\t\telse\n\t\t\tcout<<\"No.\"<<endl;\n\t}\n}\n```",
        "postTime": 1533970357,
        "uid": 62705,
        "name": "ZhangFuqun",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2256 \u3010\u4e00\u4e2d\u6821\u8fd0\u4f1a\u4e4b\u767e\u7c73\u8dd1\u3011"
    },
    {
        "content": "\u8fd9\u6570\u636e\u771f\u7684\u662f\u592a\u6c34\u4e86\u70b9\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u6bd5\u7adf\u6211\u8fd8\u6ca1\u6709\u5408\u5e76\u8fc7\u5b57\u7b26\u4e32\uff0c\u6240\u4ee5\u6211\u5c31\u5408\u5e76\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684ascll\u7801\uff0c\u6211\u611f\u89c9\u76f8\u540c\u7684\u51e0\u7387\u4f1a\u5f88\u5927\uff0c\u4e0d\u8fc7\u6570\u636e\u662f\u771f\u7684\u826f\u5fc3\uff0c\u663e\u793aAC\u754c\u9762\u7684\u65f6\u5019\u8fd8\u6709\u4e9b\u4e0d\u53ef\u601d\u8bae\n\n\u6211\u4eec\u5047\u8bbe\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7684ascll\u7801\u7684\u548c\u662f\u4e0d\u540c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u7528ascll\u7801\u5f53\u4ed6\u4eec\u7684\u7f16\u53f7\uff0c\u7136\u540e\u7528\u6734\u7d20\u7684\u5e76\u67e5\u96c6\u64cd\u4f5c\u5c31\u4e00\u8fb9\u8fc7\u4e86\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n , m , k;\nint f[30000];\nint find(int x)\n{\n\tif(f[x] == x)return x;\n\telse return f[x] = find(f[x]);\n}\n//find\u51fd\u6570\u4e0d\u4f1a\u53bb\u505a\u6a21\u677f\u9898 \nint main()\n{\n\tcin >> n >> m;\n\tfor(int i = 1; i <= n; i ++)\n\t{\n\t\tint sum = 0;\n\t\tchar s[50000];\n\t\tscanf(\"%s\",s);\n\t\tfor(int j = 0; j < strlen(s); j ++)\n\t\t\tsum += int(s[j]);\n\t\tf[sum] = sum;//\u8fd9\u4e2a\u662f\u7ed9f\u6570\u7ec4\u8d4b\u503c\uff0c\u6bcf\u4e2a\u4eba\u90fd\u662f\u81ea\u5df1\u7684\u7238\u7238 \n\t}\n\tfor(int i = 1; i <= m; i ++)\n\t{\n\t\tint sum1= 0 , sum2 = 0;\n\t\tchar s1[5000] , s2[5000];\n\t\tscanf(\"%s%s\",s1,s2);\n\t\tfor(int j = 0; j < strlen(s1); j ++)\n\t\t\tsum1 += int(s1[j]);//\u8fd9\u4e2a\u662f\u52a0\u548cascll\u503c\uff0c\u4e0b\u9762\u4e5f\u662f\u4e00\u6837 \n \t\tfor(int j = 0; j < strlen(s2); j ++)\n\t\t\tsum2 += int(s2[j]);\n\t\tint k = find(sum1) , j = find(sum2);\n\t\tif(k!=j)\n\t\t\tf[k]=j;//\u8fd9\u4e2a\u662f\u5408\u5e76\u96c6\u5408 \n\t}\n\tcin >> k;\n\tfor(int i = 1; i <= k; i ++)\n\t{\n\t\tint sum1 = 0,sum2 = 0;\n\t\tchar s1[5000] , s2[5000];\n\t\tscanf(\"%s%s\",s1,s2);\n\t\tfor(int j = 0; j < strlen(s1); j ++)\n\t\t\tsum1 += int(s1[j]);\n\t\tfor(int j = 0; j < strlen(s2); j ++)\n\t\t\tsum2 += int(s2[j]);\n\t\tif(find(sum1) == find(sum2))cout << \"Yes.\"<<endl;\n\t\telse cout << \"No.\"<<endl;\n\t}//\u8f93\u51fa\u64cd\u4f5c \n}\n//\u5b8c\u7ed3\u6492\u82b1 \n```\n\t\t\t\t\t\u7ba1\u7406\u5927\u5927\u6c42\u8fc7\u5c0f\u59b9\u8c22\u8c22\u5566",
        "postTime": 1530432008,
        "uid": 78228,
        "name": "\u6211\u6ca1\u6709\u5c0f\u767d",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2256 \u3010\u4e00\u4e2d\u6821\u8fd0\u4f1a\u4e4b\u767e\u7c73\u8dd1\u3011"
    },
    {
        "content": "\u672c\u9898\u57fa\u672c\u601d\u60f3\u662f\u5e76\u67e5\u96c6\uff0c\u5728\u8fd9\u91cc\u8865\u5145\u4e00\u4e2aPascal\u9898\u89e3\u3002\n\n\u9996\u5148\u6211\u4eec\u7528name\u6570\u7ec4\u8bb0\u5f55\u9009\u624b\u7684\u540d\u5b57\uff0c\u5728\u8bfb\u5165\u9009\u624b\u540d\u5b57\u7684\u540c\u65f6\u6784\u5efa\u5e76\u67e5\u96c6\u521d\u59cb\u72b6\u6001\uff08\u7528ufs\u6570\u7ec4\u50a8\u5b58\u6bcf\u4e2a\u5143\u7d20\u7684\u7956\u5148\u90fd\u6307\u5411\u5176\u672c\u8eab\uff09\u3002\n\n\u7136\u540e\u8bfb\u5165\u5206\u7ec4\u72b6\u6001\uff0c\u6bcf\u7ec4\u5b66\u751f\u90fd\u662f\u4e00\u4e2a\u5408\u5e76\u96c6\u5408\u7684\u8fc7\u7a0b\u3002\u6ce8\u610f\u5728\u8fd9\u91cc\u4e24\u4e2a\u9009\u624b\u7684\u540d\u5b57\u7528\u7a7a\u683c\u5206\u9694\uff0c\u56e0\u6b64\u4e0d\u80fd\u7b80\u5355\u5730\u4f7f\u7528readln\u51fd\u6570\uff0c\u800c\u8981\u8fdb\u884c\u5b57\u7b26\u4e32\u5904\u7406\u3002\u5728\u8fd9\u91cc\u6211\u4f7f\u7528\u4e86getstr\u51fd\u6570\uff0c\u5177\u4f53\u64cd\u4f5c\u89c1\u4ee3\u7801\u3002\n\n\u540c\u65f6\u6211\u4eec\u8981\u6ce8\u610f\u4e0d\u80fd\u76f4\u63a5\u7528\u9009\u624b\u7684\u540d\u5b57\u505aufs\u6570\u7ec4\u7684\u4e0b\u6807\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u6211\u4eec\u7684name\u6570\u7ec4\u5c31\u53d1\u6325\u4e86\u4f5c\u7528\uff0cname\u6570\u7ec4\u7684\u4e0b\u6807\u53ef\u4ee5\u770b\u505a\u6bcf\u4f4d\u9009\u624b\u7684\u201c\u7f16\u53f7\u201d\uff0c\u6211\u4eec\u5728\u5408\u5e76\u65f6\u53ea\u8981\u5904\u7406\u7f16\u53f7\u5c31\u884c\u4e86\u3002\n\n\u5bf9\u4e8e\u6700\u540e\u7684k\u4e2a\u8be2\u95ee\uff0c\u6211\u4eec\u53ea\u8981\u5224\u65ad\u9009\u624b\u7684\u201c\u7956\u5148\u201d\u662f\u5426\u76f8\u540c\uff0c\u82e5\u76f8\u540c\uff0c\u5219\u4e24\u4f4d\u9009\u624b\u5728\u540c\u4e00\u4e2a\u7ec4\u91cc\u3002\n\n\u8be6\u7ec6\u8fc7\u7a0b\u89c1\u4ee3\u7801\u6ce8\u91ca\u3002\n\n'''pascal\n\n```cpp\nvar\n    n,m,k,i:longint;\n    name:array[1..20000]of string;//\u5b58\u50a8\u9009\u624b\u59d3\u540d\n    ufs:array[1..20000]of longint;//\u5b58\u50a8\u9009\u624b\u7956\u5148\nfunction getstr:string;//\u5b57\u7b26\u4e32\u8bfb\u5165\u5904\u7406\n    var\n        ch:char;\n    begin\n        getstr:='';\n        read(ch);\n        repeat\n            getstr:=getstr+ch;\n            if eoln then begin//\u5982\u679c\u4e3a\u884c\u672b\u5c31\u8df3\u51fa\n                readln;\n                exit()\n            end;\n            read(ch)\n        until ch=' '//\u5982\u679c\u662f\u7a7a\u683c\u5c31\u8fc7\u6ee4\u5e76\u8df3\u51fa\n    end;\nfunction find(s:longint):longint;//\u67e5\u8be2\u7956\u5148\n    var\n        t:longint;\n    begin\n        while ufs[s]<>s do begin//\u4e00\u4e2a\u4f18\u5316\uff1a\u5c06\u6240\u6709\u76f8\u5173\u8054\u7684\u5143\u7d20\u76f4\u63a5\u8fde\u63a5\u5230\u7956\u5148\n            t:=ufs[s];\n            ufs[s]:=find(t);//\u9012\u5f52\u8c03\u7528\uff0c\u81ea\u4e0a\u800c\u4e0b\u5904\u7406\n            s:=t\n        end;\n        exit(s)\n    end;\nprocedure union(const s1,s2:longint);//\u5408\u5e76\u64cd\u4f5c\n    begin\n        ufs[find(s1)]:=find(s2)//\u5c06\u4e24\u8005\u7956\u5148\u5408\u5e76\n    end;\nfunction num(const s:string):longint;//\u5229\u7528name\u6570\u7ec4\u83b7\u53d6\u9009\u624b\u7684\u201c\u7f16\u53f7\u201d\n    var\n        i:longint;\n    begin\n        for i:=1 to n do begin\n            if name[i]=s then begin\n                exit(i)\n            end\n        end\n    end;\nprocedure union(const s1,s2:string);\n    begin\n        union(num(s1),num(s2))\n    end;\nbegin\n    readln(n,m);\n    for i:=1 to n do begin\n        readln(name[i]);\n        ufs[i]:=i\n    end;\n    for i:=1 to m do begin\n        union(getstr(),getstr())\n    end;\n    readln(k);\n    for i:=1 to k do begin\n        if find(num(getstr()))=find(num(getstr())) then begin\n            writeln('Yes.')\n        end\n        else begin\n            writeln('No.')\n        end\n    end\nend.\n'''\n```",
        "postTime": 1480681155,
        "uid": 10086,
        "name": "skylee",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2256 \u3010\u4e00\u4e2d\u6821\u8fd0\u4f1a\u4e4b\u767e\u7c73\u8dd1\u3011"
    },
    {
        "content": "```cpp\n//map \u548c\u5e76\u67e5\u96c6\n#include<iostream>\n#include<map>\nusing namespace std;\nint f[20005];\nmap <string,int> a;//\u5b9a\u4e49map \nint find(int x)\n{\n    return f[x]==x?x:f[x]=find(f[x]);//\u4e00\u884c\u5e26\u8fc7\u67e5\u627e\u548c\u538b\u7f29\u8def\u5f84 \n}\nint main()\n{\n    int n,i,m,k;\n    string s,t;\n    cin>>n>>m;\n    for(i=1;i<=n;i++)\n    {\n        cin>>s;\n        a[s]=i;\n        f[i]=i;\n    }\n    for(i=1;i<=m;i++)\n    {\n        cin>>s>>t;\n        int z=find(a[s]),x=find(a[t]);\n        if (z!=x)\n        f[z]=x;//\u628as\u7684\u7956\u5148\u6307\u5411z \n    }\n    cin>>k;\n    for(i=1;i<=k;i++)\n    {\n        cin>>s>>t;\n        int z=find(a[s]),x=find(a[t]);\n        if (z!=x)\n        cout<<\"No.\\n\";else cout<<\"Yes.\\n\"; \n    }\n    return 0;\n}\n```",
        "postTime": 1478002701,
        "uid": 22808,
        "name": "thekeyto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2256 \u3010\u4e00\u4e2d\u6821\u8fd0\u4f1a\u4e4b\u767e\u7c73\u8dd1\u3011"
    },
    {
        "content": "\u7528map\uff0c\u7136\u540e\u88f8\u5e76\u67e5\u96c6\u5c31\u884c\u4e86\n\n```cpp\n\n#include <iostream>\n#include <string>\n#include <map>\nusing namespace std;\nmap<string,string> father;\nstring getf(string v){\n    if(father[v]==v) return v;\n    else return father[v]=getf(father[v]);\n}\nvoid Union(string u,string v){\n    string x=getf(u),y=getf(v);\n    if(x!=y)\n        father[y]=x;\n}\nint main(){\n    int n,m,k;\n    scanf(\"%d %d\",&n,&m);\n    string s;\n    for(int i=1;i<=n;i++){\n        cin>>s;\n        father[s]=s;\n    }\n    for(int i=0;i<m;i++){\n        string u,v;\n        cin>>u>>v;\n        Union(u,v);\n    }\n    scanf(\"%d\",&k);\n    string x,y;\n    for(int i=0;i<k;i++){\n        cin>>x>>y;\n        if(getf(x)==getf(y))\n            printf(\"Yes.\\n\");\n        else printf(\"No.\\n\");\n    }\n    return 0;\n}\n\n```",
        "postTime": 1456620826,
        "uid": 5532,
        "name": "wcfsdcard",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2256 \u3010\u4e00\u4e2d\u6821\u8fd0\u4f1a\u4e4b\u767e\u7c73\u8dd1\u3011"
    },
    {
        "content": "map\u5bb9\u5668+string\u7c7b\n\n**STL\u5927\u6cd5\u597d\uff01\uff01\uff01**\n\n\u9644\u4ee3\u7801\n\n>#include<stdio.h>\n>#include<iostream>\n>using namespace std;\n>const int MaxN(20002);\n>map < string , int > Name;\n>string s,t;\n>int Fa[MaxN];\n>int gfather(int x)\n>{\n>if(Fa[x]!=x)\n>return Fa[x]=gfather(Fa[x]);\n>return x;\n>}\n>void Union(int x,int y)\n>{\n>int f1(gfather(x)),f2(gfather(y));\n>Fa[f1]=f2;\n>}\n>int main()\n>{\n>int N,M,K,i;\n>scanf(\"%d%d\",&N,&M);\n>for(i=1;i<=N;i++)\n>{\n>cin>>s;\n>Name[s]=i;\n>Fa[i]=i;\n>}\n>for(i=1;i<=M;i++)\n>{\n>cin>>s>>t;\n>Union(Name[s],Name[t]);\n>}\n>scanf(\"%d\",&K);\n>for(i=1;i<=K;i++)\n>{\n>cin>>s>>t;\n>if(gfather(Name[s])==gfather(Name[t]))\n>printf(\"Yes.\\n\");\n>else\n>printf(\"No.\\n\");\n>}\n>return 0;\n>}",
        "postTime": 1468161694,
        "uid": 7004,
        "name": "Conical",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2256 \u3010\u4e00\u4e2d\u6821\u8fd0\u4f1a\u4e4b\u767e\u7c73\u8dd1\u3011"
    }
]