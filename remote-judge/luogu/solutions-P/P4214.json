[
    {
        "content": "\u770b\u5230\u6709\u5927\u4f6c\u7528\u6700\u5c0f\u5272\u6811\u505a\u7684,\u849f\u84bb\u5e76\u4e0d\u4f1a\n\n\u8fd9\u91cc\u501f\u52a9\u8001\u5e08\u7684\u601d\u60f3\u5199\u4e00\u4e2a\u4e0d\u7528\u7f51\u7edc\u6d41\u7684\u505a\u6cd5\n\n\u7531\u4e8e\u6700\u5927\u6d41=\u6700\u5c0f\u5272,\u6240\u4ee5\u6700\u5927\u6d41\u4e00\u5b9a\u56de$\\leq 3$\n\n\u90a3\u4e48\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\n\n\u4f7f\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u4e00\u4e0b\n\n\u4e00\u3001\u82e5\u4e24\u4e2a\u70b9\u5728\u4e0d\u540c\u7684\u96c6\u5408,\u90a3\u4e48\u6700\u5927\u6d41\u5c31\u662f0\n\n\u4e8c\u3001\u82e5\u4e24\u4e2a\u70b9\u540c\u4e00\u4e2a\u96c6\u5408\u5185\n\n\u4f7f\u7528tarjan\u7f29\u70b9\u4e00\u4e0b\n\n1\u3001\u82e5\u4e24\u4e2a\u70b9\u4e0d\u5728\u540c\u4e00\u4e2a\u8054\u901a\u5206\u91cf\u5185,\u5219\u6613\u8bc1\u8fd9\u4e24\u4e2a\u70b9\u7684\u6700\u5927\u6d41\u4e3a1\n\n2\u3001\u82e5\u4e24\u4e2a\u70b9\u5728\u540c\u4e00\u4e2a\u8054\u901a\u5206\u91cf\u5185\n\n\u2460\u82e5\u4e24\u4e2a\u70b9\u662f\u4e09\u8054\u901a\u7684,\u5219\u6700\u5927\u6d41\u4e3a3\n\n\u2461\u5426\u5219\u4e3a2\n\n\u6309\u7167\u4ee5\u4e0a\u65b9\u5f0f\u5206\u7c7b\u5373\u53ef\n\n\u5224\u65ad\u4e24\u4e2a\u70b9\u662f\u4e09\u8054\u901a\u7684\u65b9\u5f0f:\n\n\u82e5\u8fd9\u4e24\u4e2a\u70b9\u662f\u4e09\u8054\u901a\u7684,\u5219\u6574\u5f20\u56fe\u4e2d\u5220\u9664\u4efb\u610f\u4e00\u6761\u8fb9\u540e\u8fdb\u884ctarjan\u7f29\u70b9,\u8fd9\u4e24\u4e2a\u70b9\u4ecd\u5728\u540c\u4e00\u4e2a\u8054\u901a\u5206\u91cf\u5185\u3002\n\n\u6240\u4ee5\u5220\u9664m\u6761\u8fb9\u8fd9\u4e24\u4e2a\u70b9\u6240\u5728\u7684\u8fde\u901a\u5206\u91cf\u7684\u7f16\u53f7\u662f\u76f8\u540c\u7684\n\n\u4f7f\u7528\u54c8\u5e0c\u5373\u53ef\u65b9\u4fbf\u7684\u5224\u65ad\u662f\u5426\u5b8c\u5168\u76f8\u540c,\u8fd9\u6837\u6c42\u51fa\u603b\u548c\u5373\u53ef\n\n\n```cpp\n\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define ll unsigned long long\nusing namespace std;\ninline int read()\n{\n\tint r,s=0,c;\n\tfor(;!isdigit(c=getchar());s=c);\n\tfor(r=c^48;isdigit(c=getchar());(r*=10)+=c^48);\n\treturn s^45?r:-r;\n}\nconst int N=3010,M=4510;\nconst ll p=19491001;\nint n,m;\nstruct edge\n{\n\tint to,next;\n}mem[M<<1];\nint head[N],cnt=1;\ninline void add(int u,int v)\n{\n\tmem[++cnt].next=head[u];\n\tmem[cnt].to=v;\n\thead[u]=cnt;\n}\nint fa[N],f1,f2;\ninline int getfa(int x)\n{\n\tif(fa[x]!=x)fa[x]=getfa(fa[x]);\n\treturn fa[x];\n}\nint dfn[N],low[N],ti;\nint st[N],top;\nint dcc[N],co;\nbool vis[M<<1];\nll d[N];\nvoid tarjan(int u,int no)\n{\n\tlow[u]=dfn[u]=++ti;\n\tst[++top]=u;\n\tfor(int i=head[u];i>0;i=mem[i].next)\n\t{\n\t\tif(vis[i])continue;\n\t\tif((i==no)||((i^1)==no))continue;\n\t\tint to=mem[i].to;\n\t\tif(!dfn[to])\n\t\t{\n\t\t\tvis[i]=vis[i^1]=1;\n\t\t\ttarjan(to,no);\n\t\t\tvis[i]=vis[i^1]=0;\n\t\t\tlow[u]=min(low[u],low[to]);\n\t\t}\n\t\telse\n\t\t\tlow[u]=min(low[u],dfn[to]);\n\t}\n\tif(low[u]==dfn[u])\n\t{\n\t\tdcc[u]=++co;\n\t\twhile(st[top]!=u)\n\t\t\tdcc[st[top--]]=co;\n\t\ttop--;\n\t}\n}\ninline void work()\n{\n\tfor(int i=1;i<=n;i++)\n\t\td[i]=1ll;\n\tfor(int no=1;no<=m+1;no++)\n\t{\n\t\tmemset(low,0,sizeof(low));\n\t\tmemset(dfn,0,sizeof(dfn));\n\t\tti=0,co=0,top=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tif(!dfn[i])\n\t\t\t\ttarjan(i,no<<1);\n\t\tfor(int i=1;i<=n;i++)\n\t\t\td[i]=d[i]*p+(ll)dcc[i];\n\t}\n}\ninline int calc(int u,int v)\n{\n\tf1=getfa(u),f2=getfa(v);\n\tif(f1!=f2)//\u4e0d\u5728\u4e00\u4e2a\u96c6\u5408\u5185\u6700\u5927\u6d41\u4e3a0 \n\t\treturn 0;\n\tif(dcc[u]!=dcc[v])//\u4e0d\u5728\u4e00\u4e2adcc\u5185\u6700\u5927\u6d41\u4e3a1\n\t\treturn 1;\n\tif(d[u]==d[v])//\u7528hash\u5224\u65ad\u6bcf\u6b21\u7684dcc\u662f\u5426\u5b8c\u5168\u76f8\u540c \n\t\treturn 3;/*\u5982\u679c\u5220\u6389\u4efb\u610f\u4e00\u6761\u8fb9,u,v\u4ecd\u5728\u540c\u4e00\u4e2adcc\u5185\n\t\u5219u,v\u5728\u540c\u4e00\u4e2a\u4e09\u8054\u901a\u5206\u91cf\u5185,\u5373\u6700\u5927\u6d41\u4e3a3*/\n\treturn 2;//\u5426\u5219\u6700\u5927\u6d41\u4e3a2\t\n}\nint main()\n{\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++)\n\t\tfa[i]=i;\n\tint u,v;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tu=read(),v=read();\n\t\tadd(u,v),add(v,u);\n\t\tf1=getfa(u),f2=getfa(v);\n\t\tif(f1!=f2)fa[f1]=f2;\n\t}\n\twork();\n\tint ans=0;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=i+1;j<=n;j++)\n\t\t\tans+=calc(i,j);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n\n```",
        "postTime": 1563798348,
        "uid": 25030,
        "name": "zsc2003",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4214 \u3010[CERC2015]Juice Junctions\u3011"
    },
    {
        "content": "[P4214 \u3010[CERC2015]Juice Junctions\u3011\n](https://www.luogu.com.cn/problem/P4214)\n\n# \u601d\u8def\n\n\u4e00\u773c\u6700\u5c0f\u5272\u6811\uff1f\u4e0d\u884c\uff0c $n\\le3000$ \uff0c\u80af\u5b9a\u8981 TLE \u3002\n\n\u53d1\u6398\u4e00\u4e0b\u9898\u76ee\u6027\u8d28\uff1a\n\n> \u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u53ef\u4ee5\u8fde\u63a5 $3$ \u6761\u7ba1\u9053\n\n\u6240\u4ee5\uff0c\u4efb\u610f\u4e24\u70b9\u95f4\u6700\u5927\u6d41\u4e00\u5b9a $\\le 3$ \uff01\n\n\u90a3\u5c31\u53ef\u4ee5\u5206\u7c7b\u8ba8\u8bba\uff0c\u5148\u628a\u6c42\u6700\u5927\u6d41\u8f6c\u6210\u6c42\u6700\u5c0f\u5272\u3002\n\n1. \u6700\u5c0f\u5272\u4e3a $0$\n\n\u90a3\u8fd9\u4e24\u4e2a\u70b9 $u,v$ \u5c31\u4e0d\u5728\u4e00\u4e2a\u8054\u901a\u5757\u91cc\u3002\u76f4\u63a5\u7528\u5e76\u67e5\u96c6\u5224\u65ad\u5373\u53ef\u3002\n\n2. \u6700\u5c0f\u5272\u4e3a $1$\n\n\u5272\u6389 $1$ \u6761\u8fb9\uff0c\u4e24\u4e2a\u70b9\u5c31\u5206\u5f00\u4e86\uff0c\u8fd9\u8ba9\u6211\u4eec\u60f3\u5230\u4e86\u4ec0\u4e48\u5462\uff1f\n\n$\\text{Tarjan}$ \u6c42\u5272\u8fb9\uff08\u6865\uff09\u4e0e\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\uff01\n\n\uff08\u4e0d\u4f1a Tarjan \u6c42\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u53ef\u4ee5\u53bb\u641c\u7d22\u5b66\u4e60\n\n\u4e00\u904d $\\text{Tarjan}$ \u6c42\u51fa\u6bcf\u4e2a\u70b9\u6240\u5728\u7684\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\uff0c\u5982\u679c\u4e24\u4e2a\u70b9\u4e0d\u5728\u4e00\u4e2a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u91cc\uff0c\u7b54\u6848\u4e3a $1$ \u3002\n\n\u6c42\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u7684\u4ee3\u7801\uff1a\n```cpp\nint dfn[maxn],low[maxn],frm[maxn],idx;\nint bel[maxn],scc;\nstack<int>s;\n//frm[i] \u8868\u793a i \u4ece\u54ea\u6761\u8fb9\u8fc7\u6765\nvoid dfs(int u)\n{\n\tdfn[u]=low[u]=++idx;\n\ts.push(u);\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(i==(frm[u]^1)||vis[i])continue;\n\t\tif(!dfn[v]){\n\t\t\tfrm[v]=i;dfs(v);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}else low[u]=min(low[u],dfn[v]);\n\t}\n\tif(dfn[u]!=low[u])return;\n\tscc++;int v;\n    // frm[u] \u4e3a\u5272\u8fb9\n\tdo{\n\t\tv=s.top();s.pop();\n\t\tbel[v]=scc;\n\t}while(u!=v);\n}\ninline void tarjan()\n{\n\tscc=idx=0;\n\tFor(i,1,n)dfn[i]=low[i]=frm[i]=bel[i]=0;\n\tFor(i,1,n)if(!dfn[i])dfs(i);\n}\n```\n\n3. \u6700\u5c0f\u5272\u4e3a $2$\n\n\u6709\u70b9\u590d\u6742\u3002\n\n\u8981\u5272\u6389 $2$ \u6761\u8fb9\u624d\u80fd\u5272\u65ad\uff0c\u770b\u5230 $0\\le m\\le 4500$ \uff0c\u53ef\u4ee5\u60f3\u5230\uff1a\n\n**\u6211\u4eec\u53ef\u4ee5\u66b4\u529b\u5272\u6389\u6bcf\u4e00\u6761\u8fb9\uff0c\u518d\u50cf\u6700\u5c0f\u5272\u4e3a $1$ \u65f6\u4e00\u6837\u6c42\u8fb9\u53cc\u8fde\u901a\u5206\u91cf** \uff0c\u5c31\u53ef\u4ee5\u5566\uff01\n\n\u5982\u679c 2 \u4e2a\u70b9\u5728\u6709\u4e00\u79cd\u5272\u6389\u4e00\u6761\u8fb9\u60c5\u51b5\u4e0b\uff0c\u5c5e\u4e8e\u4e0d\u540c\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u4e86\uff0c\u7b54\u6848\u5c31\u4e3a $2$ \u3002\n\n\u5272\u6389\u6bcf\u4e00\u6761\u8fb9\uff0c\u6bcf\u4e2a\u70b9\u4f1a\u6709 $m$ \u4e2a\u503c\uff0c\u8fd9\u65f6\u53ef\u4ee5\u4f7f\u7528 Hash \uff0c\u5c31\u80fd $O(1)$ \u5224\u65ad\u4e86\u3002\n\n\u8bbe $H_i$ \u4e3a $i$ \u7684\u54c8\u5e0c\u503c\uff0c\u90a3\u52a0\u5165\u5272\u4e86\u4e00\u6761\u8fb9\u540e\uff0c\u5c5e\u4e8e $bel_i$ \u8fd9\u4e2a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\uff0c\u90a3\u5c31 $H_i=H_i \\times base+bel_j$ \uff0c $H_i$ \u7528 `unsigned long long` \u5b58\uff0c `base` \u968f\u4fbf\u8bbe\u4e00\u4e2a\u6570\u3002\n\n\u5982\u679c 2 \u4e2a\u70b9\u7684 Hash \u503c\u4e0d\u540c\uff0c\u90a3\u5272\u6389\u67d0\u4e00\u6761\u8fb9\u540e\uff0c\u518d\u5272\u4e00\u6b21\u5c31\u53ef\u4ee5\u4e86\uff0c\u7b54\u6848\u4e3a $2$ \u3002\n\n\u6838\u5fc3\u4ee3\u7801\uff1a ~~\u53d6\u4e86 `base = 19491001`~~\n```cpp\nfor(int i=2;i<=tot;i+=2)\n{\n\tvis[i]=vis[i^1]=1;//\u6807\u8bb0\u4e3a\u4e0d\u80fd\u8d70\n\ttarjan();\n\tFor(j,1,n)H[j]=H[j]*19491001+bel[j];\n\tvis[i]=vis[i^1]=0;\n}\n```\n\n4. \u6700\u5c0f\u5272\u4e3a $3$\n\n\u663e\u7136\uff0c\u4e0d\u5c5e\u4e8e\u4ee5\u4e0a\u60c5\u51b5\uff0c\u5c31\u662f $3$ \u3002\n\n$m$ \u904d Tarjan + $n^2$ \u6b21 $O(1)$ \u5224\u65ad\uff0c\u590d\u6742\u5ea6\uff1a $O(m(n+m)+n^2)$\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n#pragma GCC optimize(2)\n#include<bits/stdc++.h>\n#define For(i,a,b) for(register int i=(a);i<=(b);++i)\n#define Rep(i,a,b) for(register int i=(a);i>=(b);--i)\nusing namespace std;\ninline int read()\n{\n    char c=getchar();int x=0;bool f=0;\n    for(;!isdigit(c);c=getchar())f^=!(c^45);\n    for(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+(c^48);\n    if(f)x=-x;return x;\n}\n#define maxn 3005\nint n,m,res;\nstruct edge{\n\tint to,nxt;\n}e[maxn<<3];\nint tot,head[maxn];\nbool vis[maxn<<3];\ninline void adde(int u,int v){\n\te[++tot]=(edge){v,head[u]};\n\thead[u]=tot;\n}\n\nint fa[maxn];\nint getf(int x){return fa[x]==x?x:fa[x]=getf(fa[x]);}\n\nint dfn[maxn],low[maxn],frm[maxn],idx;\nint bel[maxn],scc;\nstack<int>s;\nvoid dfs(int u)\n{\n\tdfn[u]=low[u]=++idx;\n\ts.push(u);\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(i==(frm[u]^1)||vis[i])continue;\n\t\tif(!dfn[v]){\n\t\t\tfrm[v]=i;dfs(v);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}else low[u]=min(low[u],dfn[v]);\n\t}\n\tif(dfn[u]!=low[u])return;\n\tscc++;int v;\n\tdo{\n\t\tv=s.top();s.pop();\n\t\tbel[v]=scc;\n\t}while(u!=v);\n}\ninline void tarjan()\n{\n\tscc=idx=0;\n\tFor(i,1,n)dfn[i]=low[i]=frm[i]=bel[i]=0;\n\tFor(i,1,n)if(!dfn[i])dfs(i);\n}\n\nunsigned long long H[maxn];\nsigned main()\n{\n\ttot=1,n=read(),m=read();\n\tFor(i,1,n)fa[i]=i;\n\tFor(i,1,m){\n\t\tint u=read(),v=read();\n\t\tadde(u,v);adde(v,u);\n\t\tfa[getf(u)]=getf(v);\n\t}\n\tfor(int i=2;i<=tot;i+=2)\n\t{\n\t\tvis[i]=vis[i^1]=1;\n\t\ttarjan();\n\t\tFor(j,1,n)H[j]=H[j]*19491001+bel[j];\n\t\tvis[i]=vis[i^1]=0;\n\t}\n\ttarjan();\n\tFor(i,1,n)\n\t\tFor(j,i+1,n){\n\t\t\tif(getf(i)!=getf(j));\n\t\t\telse if(bel[i]!=bel[j])res++;\n\t\t\telse if(H[i]!=H[j])res+=2;\n\t\t\telse res+=3;\n\t\t}\n\tcout<<res;\n    return 0;\n}\n```",
        "postTime": 1585148706,
        "uid": 151935,
        "name": "Rainbow_qwq",
        "ccfLevel": 0,
        "title": "P4214 \u3010[CERC2015]Juice Junctions\u3011"
    },
    {
        "content": "[$\\text{\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c}$](https://www.cnblogs.com/mfeitveer/p/15944941.html)\n\n\u6700\u5c0f\u5272\u6811\u677f\u5b50\u9898\u3002\n\n\u4e00\u5f00\u59cb\u6211\u7528\u901a\u5e38\u6211\u5199\u7684 $\\text{Isap}$ \u53bb\u8bd5\u4e86\u8bd5\uff0c\u53ea\u6709 $\\text{65pts}$\u3002\n\n\u540e\u9762\u5c1d\u8bd5\u4f7f\u7528 $\\text{Dinic}$\uff0c\u5c45\u7136\u5c31\u6709\u4e86 $\\text{100pts}$\uff0c\u8dd1\u4e86 $14s$\u3002\n\n\u6700\u540e\u9898\u89e3\u533a\u8bf4\u53ef\u4ee5\u7528 $\\text{EK}$ \u8dd1\uff0c\u6211\u8bd5\u4e86\u4e00\u4e0b\uff0c\u5c45\u7136\u53ea\u8dd1\u4e86 $\\text{6s}$\u3002\n\n\u597d\u5427\uff0c$\\text{EK}$ \u7684\u5d1b\u8d77\u4e86\u5c5e\u4e8e\u662f\u3002\n\n\u53ef\u4e3a\u5565 $\\text{Isap}$ \u6bd4 $\\text{Dinic}$ \u6162\u5462\uff0c\u4ee4\u4eba\u6781\u5ea6\u7591\u60d1\u3002\n\n### \u601d\u8def\n\n\u5e94\u8be5\u6ca1\u6709\u4eba\u4e0d\u4f1a\u6700\u5c0f\u5272\u6811\u5427\u3002\n\n\u6211\u89c9\u5f97\u80fd\u627e\u5230\u8fd9\u9898\u7684\u5e94\u8be5\u90fd\u4f1a\u6700\u5c0f\u5272\u6811\u3002\n\n\u6240\u4ee5\u8fd9\u91cc\u6211\u53ef\u4ee5\u5bf9\u8fd9\u9053\u9898\u7f51\u7edc\u6d41\u505a\u6cd5\u7684\u8ff7\u60d1\u7684\u590d\u6742\u5ea6\uff0c\u505a\u4e00\u4e9b\u611f\u6027\u7406\u89e3\u3002\n\n\u7531\u4e8e $\\text{EK}$ \u662f\u5355\u6b21\u4e0d\u65ad\u5bfb\u627e\u53ef\u884c\u8fb9\uff0c\u7136\u540e\u6211\u4eec\u5373\u53ef\u53d1\u73b0\uff0c\u672c\u9898\u4e2d\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u5c0f\u4e8e\u7b49\u4e8e\u4e09\uff0c\u5373\u5230\u6c47\u70b9\u7684\u53ef\u884c\u8fb9\u53ea\u6709\u4e09\u6761\uff0c\u800c\u53c8\u9650\u5236\u4e86\u6bcf\u6761\u8fb9\u7684\u6d41\u91cf\u4e25\u683c\u4e3a\u4e00\u3002\n\n\u6545\u5176\u7f51\u7edc\u6d41\u7684\u6700\u5927\u590d\u6742\u5ea6\u5e94\u8be5\u4e3a $O(3n)$ \uff0c\u5c31\u76f8\u5f53\u4e8e $O(n)$ \u4e86\u3002\n\n\u6545\u603b\u590d\u6742\u5ea6\u5e94\u4e3a $O(n^2)$\n\n\u800c $\\text{dinic}$ \u9700\u8981\u4e0d\u65ad\u7684\u4f7f\u7528 $\\text{dfs}$ \u5bfb\u627e\uff0c\u81ea\u7136\u591a\u4e86\u5f88\u591a\u5176\u4ed6\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u66f4\u52a3\u4e00\u4e9b\u3002\n\n\u7ed9 $\\text{EK}$ \u7684\u4ee3\u7801\u5427\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 3010;\nconst int M = 20000;\nconst int inf = 1e9 + 7;\n\nint T , n , m , s , t , q , cnt , maxflow;\nint id[N] , que[N] , vis[N] , tmp[N] , head[N];\n\nstruct edge\n{\n\tint to , nxt , val , sum;\n}e[M];\n\nstruct Pre\n{\n\tint v , edge;\n}pre[N];\n\ninline int read()\n{\n\tint asd = 0 , qwe = 1; char zxc;\n\twhile(!isdigit(zxc = getchar())) if(zxc == '-') qwe = -1;\n\twhile(isdigit(zxc)) asd = asd * 10 + zxc - '0' , zxc = getchar();\n\treturn asd * qwe;\n}\n\ninline void add(int x , int y , int z)\n{\n\te[++cnt] = {y , head[x] , z , z} , head[x] = cnt;\n\te[++cnt] = {x , head[y] , 0 , 0} , head[y] = cnt;\n}\n\ninline int bfs()\n{\n\tqueue<int> q; \n\tmemset(que , 0 , sizeof que);\n\tmemset(pre , -1 , sizeof pre);\n\tq.push(s) , que[s] = 1;\n\twhile(q.empty() == 0)\n\t{\n\t\tint x = q.front(); q.pop();\n\t\tfor(int i = head[x];i;i = e[i].nxt)\n\t\t\tif(que[e[i].to] == 0 && e[i].val)\n\t\t\t{\n\t\t\t\tque[e[i].to] = 1;\n\t\t\t\tpre[e[i].to] = (Pre){x , i};\n\t\t\t\tif(e[i].to == t) return 1;\n\t\t\t\tq.push(e[i].to);\n\t\t\t}\n \t}\n \treturn 0;\n}\n\ninline void init()\n{\n\tfor(int i = 0;i <= cnt;i++) e[i].val = e[i].sum;\n}\n\ninline int EK(int ss , int ts)\n{\n\ts = ss , t = ts , maxflow = 0 , init();\n\twhile(bfs())\n\t{\n\t\tint minn = inf;\n\t\tfor(int i = t;i != s;i = pre[i].v) minn = min(minn , e[pre[i].edge].val);\n\t\tfor(int i = t;i != s;i = pre[i].v) e[pre[i].edge].val -= minn;\n\t\tmaxflow += minn;\n\t}\n\treturn maxflow;\n}\n\nstruct GHT\n{\n\tedge tr[M];\n\tint tot , hed[N] , ans[N][N];\n\t\n\tinline void add_tree(int x , int y , int z)\n\t{\n\t\ttr[++tot] = {y , hed[x] , z} , hed[x] = tot;\n\t\ttr[++tot] = {x , hed[y] , z} , hed[y] = tot;\n\t}\n\t\n\tinline void find(int now)\n\t{\n\t\tvis[now] = 1;\n\t\tfor(int i = head[now];i;i = e[i].nxt)\n\t\t\tif(vis[e[i].to] == 0 && e[i].val) find(e[i].to);\n\t}\n\t\n\tinline void build(int l ,int r)\n\t{\n\t\tif(l >= r) return;\n\t\tint x = id[l] , y = id[l + 1] , sum = EK(x , y);\n\t\tint ls = l , rs = r;\n\t\tmemset(vis , 0 , sizeof vis) , find(x);\n\t\tadd_tree(x , y , sum);\n\t\tfor(int i = l;i <= r;i++)\n\t\t\ttmp[(vis[id[i]] ? ls++ : rs--)] = id[i];\n\t\tfor(int i = l;i <= r;i++) id[i] = tmp[i];\n\t\tbuild(l , ls - 1) , build(rs + 1 , r);\n\t}\n\t\n\tinline void get(int now , int fa , int dis , int gen)\n\t{\n\t\tans[gen][now] = dis;\n\t\tfor(int i = hed[now];i;i = tr[i].nxt)\n\t\t\tif(tr[i].to != fa) get(tr[i].to , now , min(dis , tr[i].val) , gen);\n\t}\n\t\n\tinline void solve()\n\t{\n\t\tfor(int i = 1;i <= n;i++) id[i] = i;\n\t\tbuild(1 , n);\n\t\tfor(int i = 1;i <= n;i++) get(i , 0 , inf , i);\n\t}\n\t\n\tinline int ask()\n\t{\n\t\tint res = 0;\n\t\tfor(int i = 1;i <= n;i++)\n\t\t\tfor(int j = i + 1;j <= n;j++) res += ans[i][j];\n\t\treturn res;\n\t}\n}tree;\n\nint main()\n{\n\tn = read() , m = read() , cnt = 1;\n\tfor(int i = 1;i <= m;i++)\n\t{\n\t\tint x = read() , y = read();\n\t\tadd(x , y , 1) , add(y , x , 1);\n\t}\n\ttree.solve();\n\tcout << tree.ask();\n\treturn 0;\n} \n```\n\n",
        "postTime": 1646019822,
        "uid": 320933,
        "name": "Mfeitveer",
        "ccfLevel": 0,
        "title": "P4214 [CERC2015]Juice Junctions \u9898\u89e3"
    },
    {
        "content": "## P4214 Juice Junctions\n\n### \u524d\u8a00\n\n### \u6ce8\uff1a\u4e0e\u6700\u9ad8\u8d5e\u9898\u89e3\u7684\u533a\u522b\u662f\u4e0d\u7528\u7f29\u70b9\u3002\n\n\u770b\u5230\u9898\u89e3\u533a\u6709\u4e00\u7bc7\u8bf4\u9053\uff1a\n\n>\u5e94\u8be5\u6ca1\u6709\u4eba\u4e0d\u4f1a\u6700\u5c0f\u5272\u6811\u5427\u3002\n\n>\u6211\u89c9\u5f97\u80fd\u627e\u5230\u8fd9\u9898\u7684\u5e94\u8be5\u90fd\u4f1a\u6700\u5c0f\u5272\u6811\u3002\n\n\u663e\u7136\uff0c\u6211\u88ab\u5f00\u9664\u4eba\u7c4d\u4e86\u3002\n\n\u6700\u4ee4\u4eba\u6c14\u6124\u7684\u662f\uff0c\u8fd9\u6807\u7b7e\u91cc\uff0c\u7adf\u7136\u6ca1\u6709\u70b9\u53cc\uff01\n\n\u65e0\u610f\u4e49\u5185\u5bb9\u4e0d\u591a\u8bf4\u4e86\uff0c\u5e0c\u671b\u7ba1\u7406\u80fd\u7ed9\u8fc7\u3002\n\n### \u89e3\u9898\u601d\u8def\n\n\u9898\u76ee\u4e2d\u6709\u4e00\u4e2a\u91cd\u8981\u6761\u4ef6\uff1a\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u8fde\u63a5 $3$ \u6761\u7ba1\u9053\u3002\n\n\u8fd9\u5c31\u610f\u5473\u7740\uff0c\u6bcf\u4e2a\u70b9\u5bf9\u7684\u8d21\u732e\u65e0\u975e $0,1,2$ \u6216 $3$\u3002\n\n$0$ \u5c31\u610f\u5473\u7740\uff0c\u8fd9\u4e24\u4e2a\u70b9\u4e0d\u8fde\u901a\uff08\u65e0\u5411\u56fe\uff09\u3002\n\n$1$ \u7a0d\u5fae\u590d\u6742\u4e00\u70b9\uff0c\u5b83\u7684\u610f\u601d\u662f\uff0c\u4e24\u70b9\u95f4\u6ca1\u6709\u4e24\u6761**\u6ca1\u6709\u516c\u5171\u90e8\u5206\u7684**\u8def\u5f84\u3002\n\n\u8fd9\u91cc\u7ed9\u51fa\u4e24\u79cd\u7406\u89e3\u65b9\u5f0f\uff1a\u8fd9\u4e24\u70b9\u7684\u8def\u5f84\u5fc5\u7136\u7ecf\u8fc7\u5272\u8fb9\uff0c\u6216\u8005\u8fd9\u4e24\u70b9\u4e0d\u5728\u4e00\u4e2a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u91cc\u3002\n\n\u540e\u8005\u5e94\u8be5\u66f4\u65b9\u4fbf\u7a0b\u5e8f\u5b9e\u73b0\u5427\u3002\n\n$2$ \u548c $3$ \u600e\u4e48\u5224\u65ad\u5462\uff1f\n\n~~[P6658 \u8fb9\u4e09\u8fde\u901a\u5206\u91cf](https://www.luogu.com.cn/problem/P6658)~~\n\n\u8fd9\u9053\u9898\u8d64\u88f8\u88f8\u7684\u5e73\u65b9\u7ea7\u522b\u7b97\u6cd5\u597d\u5427\uff0c\u4f60\u7ed9\u6211\u6574\u4e00\u4e2a\u9ed1\u9898\u5e72\u4ec0\u4e48\u3002\n\n\u5b9e\u9645\u4e0a\u6362\u4e2a\u89d2\u5ea6\u8003\u8651\uff0c\u8fb9\u4e09\u8fde\u901a\u5206\u91cf\u4e5f\u5c31\u610f\u5473\u7740**\u65e0\u8bba\u4f60\u5220\u53bb\u54ea\u4e00\u6761\u8fb9\uff0c\u8fd9\u4e24\uff08\u591a\uff09\u4e2a\u70b9\u90fd\u5c5e\u4e8e\u4e00\u4e2a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf**\u3002\n\n\u54e6\uff0c\u6211\u4eec\u77e5\u9053\u4e86\uff0c\u9884\u5904\u7406\u4e00\u4e0b\u6bcf\u6761\u8fb9\u5220\u53bb\u540e\u6bcf\u4e2a\u70b9\u5c5e\u4e8e\u54ea\u4e2a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\uff0c\u5982\u679c\u4e24\u4e2a\u70b9\u5728\u67d0\u6761\u8fb9\u5220\u53bb\u4e4b\u540e\u6240\u5c5e\u7684\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u4e0d\u4e00\u81f4\uff0c\u90a3\u4e48\u4ed6\u4eec\u7684\u7b54\u6848\u5c31\u4e0d\u662f $3$\u3002\n\n\u4e4d\u4e00\u770b\u8fd9\u4e2a\u7b97\u6cd5\u597d\u50cf\u8981 $O(mn+n^2m)$\u3002\n\n\u8fd9\u65f6\u5019\u5c31\u9700\u8981\u70b9\u5c0f trick \u4e86\uff0c\u5bf9\u6bcf\u4e2a\u70b9\u5728\u6bcf\u6761\u8fb9\u5220\u53bb\u540e\u7684\u6240\u5c5e\u8fb9\u53cc\u60c5\u51b5\u8fdb\u884c\u54c8\u5e0c\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u7ea6 $O(mn+n^2)$\u3002\n\n\u603b\u7ed3\uff1a\u5148\u9884\u5904\u7406\u6bcf\u4e2a\u70b9\u7684\u54c8\u5e0c\u503c\uff08\u610f\u4e49\u89c1\u4e0a\uff09\uff0c\u518d\u9884\u5904\u7406\u539f\u56fe\u6bcf\u4e2a\u70b9\u6240\u5c5e\u7684\u8fde\u901a\u5757\u548c\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\uff0c\u6700\u540e $n^2$ \u679a\u4e3e\u70b9\u5bf9\u5224\u65ad\u3002\n\n### \u4ee3\u7801\u90e8\u5206\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nvoid file(string str){\n\tfreopen((str+\".in\").c_str(),\"r\",stdin);\n\tfreopen((str+\".out\").c_str(),\"w\",stdout);\n}\nint n,m;\nint v[9010],nxt[9010],tot=1,head[3010];//\u94fe\u5f0f\u524d\u5411\u661f\nbool vis[3010];\nint dfn[3010],low[3010],idx;//tarjan\u5fc5\u5907\nint mark[9010];//\u662f\u4e0d\u662f\u5272\u8fb9\nint col[3010],bcc;//\u6240\u5c5e\u8fb9\u53cc\nint has[3010];//hash\nint fade;//\u5220\u53bb\u7684\u8fb9\u7684\u7f16\u53f7\nvoid addedge(int a,int b){v[++tot]=b;nxt[tot]=head[a];head[a]=tot;}\nvoid tarjan(int u,int fa){\n\tvis[u]=1;dfn[u]=low[u]=++idx;\n\tfor(int i=head[u];i;i=nxt[i]){\n\t\tif(i==fade||i==(fade^1))continue;//\u5220\u6389\u4e86\u5c31\u4e0d\u80fd\u8d70\n\t\tint ch=v[i];\n\t\tif(!vis[ch]){\n\t\t\ttarjan(ch,u);\n\t\t\tlow[u]=min(low[u],low[ch]);\n\t\t\tif(low[ch]>dfn[u])mark[i]=mark[i^1]=1;//\u4e24\u6761\u90fd\u6807\u8bb0\n\t\t}else if(ch!=fa) low[u]=min(low[u],dfn[ch]);\n\t}\n}\nvoid dfs(int u){\n\tcol[u]=bcc;\n\tfor(int i=head[u];i;i=nxt[i]){\n\t\tint ch=v[i];\n\t\tif(i!=fade&&i!=(fade^1)&&col[ch]==0&&mark[i]!=1)dfs(ch);//\u8fd9\u91cc\u4e5f\u8981\u8bb0\u5f97\u5220\u6389\u4e86\u7684\u4e0d\u80fd\u8d70\n\t}\n}\nint colh[3010],cc;//\u8fd9\u91cc\u662f\u5224\u8fde\u901a\u6027\u7684\uff0c\u4e3a\u4e86\u548c\u8fb9\u53cc\u7684\u53d8\u91cf\u505a\u51fa\u533a\u522b\uff0c\u5728\u6700\u540e\u52a0\u4e86\u4e2a\u5b57\u6bcdh\nvoid dfsh(int u){\n\tcolh[u]=cc;\n\tfor(int i=head[u];i;i=nxt[i]){\n\t\tint ch=v[i];\n\t\tif(!colh[ch])dfsh(ch);\n\t}\n}\nlong long final;\nvoid clear(){//\u4e0d\u6e05\u7a7acol\u5bb3\u6b7b\u4eba\n\tmemset(vis,0,sizeof(vis));\n\tmemset(dfn,0,sizeof(dfn));\n\tmemset(low,0,sizeof(low));\n\tmemset(col,0,sizeof(col));\n\tmemset(mark,0,sizeof(mark));\n\tbcc=idx=0;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++){int a,b;scanf(\"%d%d\",&a,&b);addedge(a,b);addedge(b,a);}\n\tfor(int i=1;i<=m;i++){\n\t\tfade=i*2;clear();\n\t\tfor(int j=1;j<=n;j++){if(!vis[j])tarjan(j,0);}\n\t\tfor(int j=1;j<=n;j++){if(!col[j]){bcc++;dfs(j);}}\n\t\tfor(int j=1;j<=n;j++)has[j]=(1ll*has[j]*131+col[j])%1000000007;\n\t}\n\tfade=0;clear();\n\tfor(int i=1;i<=n;i++){if(!vis[i])tarjan(i,0);}\n\tfor(int i=1;i<=n;i++){if(!col[i]){bcc++;dfs(i);}}\n\tfor(int i=1;i<=n;i++){if(!colh[i]){cc++;dfsh(i);}}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=i+1;j<=n;j++){\n\t\t\tif(colh[i]!=colh[j])final+=0;\n\t\t\telse if(col[i]!=col[j])final+=1;\n\t\t\telse if(has[i]!=has[j])final+=2;\n\t\t\telse final+=3;\n\t\t}\n\t}\n\tprintf(\"%lld\",final);\n\treturn 0;\n}\n```",
        "postTime": 1649489577,
        "uid": 225192,
        "name": "Raymondzll",
        "ccfLevel": 6,
        "title": "P4214\u9898\u89e3"
    },
    {
        "content": "## \u505a\u6cd5\n\n\u6700\u5c0f\u5272\u6811\u3002\n\n\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u5927\u5bb6\u90fd\u8bf4\u6700\u5c0f\u5272\u6811\u4e0d\u80fd\u8fc7\u2026\u2026\u53cd\u6b63\u6211\u7528 `dinic` \u6784\u9020\u7684\u6700\u5c0f\u5272\u6811\u8fc7\u4e86\u3002~~\u867d\u7136\u662f\u6700\u52a3\u89e3 /kk~~\n\n\u4e0d\u77e5\u9053\u6700\u5c0f\u5272\u6811\u7684\u53ef\u4ee5\u53bb\u770b\u8fd9\u7bc7[\u5b66\u4e60\u7b14\u8bb0](https://www.luogu.com.cn/blog/251130/zui-xiao-ge-shu-ght-xue-xi-bi-ji) awa\u3002\n\n\u9996\u5148\u8fd9\u9053\u9898\u8981\u6c42\u591a\u6b21\u6700\u5927\u6d41\uff0c\u56e0\u4e3a\u6700\u5927\u6d41 $=$ \u6700\u5c0f\u5272\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u6700\u5c0f\u5272\u6811\u6765\u5904\u7406\u3002\u4e0d\u8fc7\u6ce8\u610f\u7531\u4e8e\u8fb9\u662f\u53cc\u5411\u7684\uff0c\u6c42\u6700\u5c0f\u5272\u65f6\u4f1a\u5272\u6389\u6b63\u53cd\u4e24\u6761\u8fb9\uff0c\u6240\u4ee5\u7b54\u6848\u8981\u9664\u4ee5 `2`\u3002\n\n## AC \u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#include <vector>\n\nusing namespace std;\n\n#define S 100005\n#define MS 10005\n\nint n,m,q,s,t;\nint ineu[S],inev[S],inew[S];\nint esum,to[S],c[S],nxt[S],h[MS];\nint dep[MS],cur[MS];\nint esum2,to2[S],c2[S],nxt2[S],h2[MS];\nint nd[MS],tot1,tmp1[MS],tot2,tmp2[MS];\nint depp[MS],up[MS][30],minn[MS][30];\n\ninline void init()\n{\n    esum=1;\n    memset(h,0,sizeof(h));\n}\n\ninline void add(int x,int y,int w)\n{\n    to[++esum]=y;\n    c[esum]=w;\n    nxt[esum]=h[x];\n    h[x]=esum;\n}\n\ninline void add2(int x,int y,int w)\n{\n    to2[++esum2]=y;\n    c2[esum2]=w;\n    nxt2[esum2]=h2[x];\n    h2[x]=esum2;\n}\n\ninline bool bfs()\n{\n    memset(dep,0,sizeof(dep));\n    queue<int> q;\n    q.push(s);\n    dep[s]=1;\n    while(!q.empty())\n    {\n        int u=q.front();\n        q.pop();\n        for(int i=h[u];i;i=nxt[i])\n        {\n            int v=to[i];\n            if(c[i]>0&&dep[v]==0)\n            {\n                dep[v]=dep[u]+1;\n                q.push(v);\n            }\n        }\n    }\n    return dep[t]>0;\n}\n\nint dfs(int u,int w)\n{\n    if(u==t)\n    {\n        return w;\n    }\n    int sum=0;\n    for(int &i=cur[u];i;i=nxt[i])\n    {\n        int v=to[i];\n        if(c[i]>0&&dep[v]==dep[u]+1)\n        {\n            int re=dfs(v,min(w,c[i]));\n            c[i]-=re;\n            c[i^1]+=re;\n            w-=re;\n            sum+=re;\n            if(w==0)\n            {\n                break;\n            }\n        }\n    }\n    return sum;\n}\n\ninline int dinic()\n{\n    int ans=0;\n    while(bfs())\n    {\n        for(int i=1;i<=n;i++)\n        {\n            cur[i]=h[i];\n        }\n        ans+=dfs(s,1e8);\n    }\n    return ans;\n}\n\ninline int slove(int x,int y)\n{\n    init();\n    s=x;\n    t=y;\n    for(int i=1;i<=m;i++)\n    {\n        add(ineu[i],inev[i],inew[i]);\n        add(inev[i],ineu[i],0);\n        add(inev[i],ineu[i],inew[i]);\n        add(ineu[i],inev[i],0);\n    }\n    return dinic();\n}\n\nvoid built(int l,int r)\n{\n    if(l==r)\n    {\n        return; \n    }\n    int nans=slove(nd[l],nd[r]);\n    add2(nd[l],nd[r],nans);\n    add2(nd[r],nd[l],nans);\n    tot1=0;\n    tot2=0;\n    for(int i=l;i<=r;i++)\n    {\n        if(dep[nd[i]]>0)\n        {\n            tmp1[++tot1]=nd[i];\n        }\n        else\n        {\n            tmp2[++tot2]=nd[i];\n        }\n    }\n    for(int i=1;i<=tot1;i++)\n    {\n        nd[l+i-1]=tmp1[i];\n    }\n    for(int i=1;i<=tot2;i++)\n    {\n        nd[l+tot1-1+i]=tmp2[i];\n    }\n    int l1=l,r1=l+tot1-1;\n    int l2=l+tot1,r2=r;\n    built(l1,r1);\n    built(l2,r2);\n}\n\nvoid initque(int u,int fa,int val)\n{\n    depp[u]=depp[fa]+1;\n    up[u][0]=fa;\n    minn[u][0]=val;\n    for(int i=1;i<=25;i++)\n    {\n        up[u][i]=up[up[u][i-1]][i-1];\n        if(up[u][i]!=0)\n        {\n            minn[u][i]=min(minn[u][i-1],minn[up[u][i-1]][i-1]);\n        }\n    }\n    for(int i=h2[u];i;i=nxt2[i])\n    {\n        int v=to2[i];\n        if(v==fa)\n        {\n            continue;\n        }\n        initque(v,u,c2[i]);\n    }\n}\n\ninline int quemin(int x,int y)\n{\n    if(depp[x]<depp[y])\n    {\n        int t=x;\n        x=y;\n        y=t;\n    }\n    int res=1e8;\n    for(int i=25;i>=0;i--)\n    {\n        if(depp[up[x][i]]>=depp[y])\n        {\n            res=min(res,minn[x][i]);\n            x=up[x][i]; \n        }\n    }\n    if(x==y)\n    {\n        return res;\n    }\n    for(int i=25;i>=0;i--)\n    {\n        if(up[x][i]!=up[y][i])\n        {\n            res=min(res,min(minn[x][i],minn[y][i]));\n            x=up[x][i];\n            y=up[y][i];\n        }\n    }\n    res=min(res,min(minn[x][0],minn[y][0]));\n    return res;\n}\n\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&ineu[i],&inev[i]);\n\t\tinew[i]=1;\n\t\tineu[m+i]=ineu[i];\n\t\tinev[m+i]=inev[i];\n\t\tinew[m+i]=inew[i];\n    }\n    m*=2;\n    for(int i=1;i<=n;i++)\n    {\n        nd[i]=i;\n    }\n    built(1,n);\n    initque(1,0,0);\n    long long res=0;\n    for(int i=2;i<=n;i++)\n    {\n    \tfor(int j=1;j<i;j++)\n    \t{\n    \t\tres+=quemin(i,j);\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",res/2);\n    return 0;\n}\n```",
        "postTime": 1636463400,
        "uid": 251130,
        "name": "lovely_ckj",
        "ccfLevel": 0,
        "title": "P4214 [CERC2015]Juice Junctions \u9898\u89e3"
    },
    {
        "content": "\u6700\u5c0f\u5272\u6811+\u5e76\u67e5\u96c6\u3002\n\n\u6211\u4eec\u77e5\u9053\uff0c$u,v$ \u4e24\u70b9\u7684\u6700\u5c0f\u5272\u7684\u503c\u5373\u4e3a\u6700\u5c0f\u5272\u6811\u4e2d $u,v$ \u8def\u5f84\u4e0a\u7684\u6700\u5c0f\u8fb9\u6743\uff1b\u6211\u4eec\u53ef\u4ee5\u5c06\u6700\u5c0f\u5272\u6811\u4e0a\u7684\u8fb9 $(u,v,w)$ \u6309\u8fb9\u6743\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u52a0\u5165\u6811\u4e2d\uff0c\u540c\u65f6\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4 $u,v$ \u6240\u5728\u8fde\u901a\u5757\u7684 $size$ \uff0c\u90a3\u4e48\u6bcf\u6761\u8fb9\u7684\u8d21\u732e\u5373\u4e3a $w\\times size_{fa[u]} \\times size_{fa[v]}$\u3002\n\n**\uff08\u4f46\u662f\u8fd9\u4e2a\u65b9\u6cd5\u6ca1\u7528\u7528\u5230\u5ea6\u6570\u5c0f\u4e8e\u7b49\u4e8e3\u7684\u7279\u70b9\uff0c\u53ef\u80fd\u4e0d\u591f\u4f18\u79c0\uff09**\n\n\u611f\u8c22 bztMinamoto \u544a\u8bc9\u6211\u8fd9\u9898\u5361dinic\u653eek ~~\uff08\u8ff7\u60d1\uff09~~ \n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<queue>\n#include<algorithm>\n#define R register int\nusing namespace std;\nnamespace Luitaryi {\ninline int g() { R x=0,f=1;\n\tregister char s; while(!isdigit(s=getchar())) f=s=='-'?-1:f;\n\tdo x=x*10+(s^48); while(isdigit(s=getchar())); return x*f;\n} const int N=3010,M=9010,Inf=0x3f3f3f3f;\nint n,m,S,T,ans,tim;\nint vr[M],nxt[M],fir[N],w[M],l[M],d[N],s[N],t[N],fa[N],sz[N],cnt=1;\ninline void add(int u,int v,int ww) {\n\tvr[++cnt]=v,nxt[cnt]=fir[u],fir[u]=cnt,l[cnt]=ww;\n\tvr[++cnt]=u,nxt[cnt]=fir[v],fir[v]=cnt,l[cnt]=ww;\n}\nqueue<int> q;\ninline bool bfs() {\n\tmemset(d,0,sizeof d);\n\td[S]=1,q.push(S);\n\twhile(q.size()) { R u=q.front(); q.pop();\n\t\tfor(R i=fir[u],v;i;i=nxt[i]) \n\t\t\tif(w[i]&&!d[v=vr[i]]) d[v]=i,q.push(v);\n\t} return d[T];\n}\ninline int ek() {\n\tR ret=0; memcpy(w,l,cnt+1<<2);\n\twhile(bfs()) {\n\t\t++ret;\n\t\tfor(R i=T;i!=S;i=vr[d[i]^1])\n\t\t\t--w[d[i]],++w[d[i]^1];\n\t} return ret;\n}\nstruct node {\n\tint u,v,w;\n\tinline bool operator < (const node &that) const\n\t\t{return w>that.w;}\t\n}e[N];\ninline void build(int l,int r) { \n\tif(l>=r) return ; \n\tS=s[l],T=s[l+1];\n\tR p=l-1,q=r+1,w=ek();\n\tfor(R i=l;i<=r;++i) \n\t\td[s[i]]?t[++p]=s[i]:t[--q]=s[i];\n\te[++tim]=(node){S,T,w};\n\tfor(R i=l;i<=r;++i) s[i]=t[i]; \n\tbuild(l,p),build(q,r);\n}\ninline int getf(int x) {return x==fa[x]?x:fa[x]=getf(fa[x]);}\ninline void merge(int i) {\n\tR u=getf(e[i].u),v=getf(e[i].v); \n\tfa[u]=v;\n\tans+=e[i].w*sz[u]*sz[v];\n\tsz[v]+=sz[u];\n}\ninline void main() {\n\tn=g(),m=g();\n\tfor(R i=1,u,v;i<=m;++i) \n\t\tu=g(),v=g(),add(u,v,1);\n\tfor(R i=1;i<=n;++i) s[i]=i;\n\tbuild(1,n); for(R i=1;i<=n;++i) fa[i]=i,sz[i]=1;\n\tsort(e+1,e+n); for(R i=1;i<n;++i) merge(i);\n\tprintf(\"%d\\n\",ans);\n}\n} signed main() {Luitaryi::main(); return 0;}\n```",
        "postTime": 1585194277,
        "uid": 115086,
        "name": "Tari",
        "ccfLevel": 7,
        "title": "Jack's \u9898\u89e3 P4214 \u3010[CERC2015]Juice Junctions\u3011"
    },
    {
        "content": "\u6253\u5e7f\u544a\uff1a[\u8fd9\u91cc](https://www.cnblogs.com/bztMinamoto/p/9571156.html)\n\n\u9996\u5148\u6700\u5927\u6d41\u7b49\u4e8e\u6700\u5c0f\u5272\uff0c\u90a3\u4e48\u53ef\u4ee5\u8f6c\u5316\u4e3a\u6700\u5c0f\u5272\u6811\u6765\u505a\uff08\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f\u6700\u5c0f\u5272\u6811\u7684\u53ef\u4ee5\u770b\u770b\u8fd9\u9898->[\u8fd9\u91cc](https://www.cnblogs.com/bztMinamoto/p/9570614.html)\uff09\n\n\u5177\u4f53\u7684\u505a\u6cd5\u4f3c\u4e4e\u662f$hash[i][j]$\u8868\u793a\u6700\u5c0f\u5272\u4e3a$i$\u65f6\u70b9$j$\u662f\u5426\u4e0e$S$\u8fde\u901a\n\n\u7136\u540e\u636eClaris\u5927\u7237\u8bf4\u8fd9\u9898\u5361dinic\uff0c\u53ea\u80fd\u7528EK\n\n\u987a\u4fbf\u5410\u69fd\u4e00\u53e5\uff0cClaris\u5927\u7237\u7684\u4ee3\u7801\u771f\u7684\u4e0d\u80fd\u770b\u2026\u2026\n```\n//minamoto\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#define inf 0x3f3f3f3f3\nusing namespace std;\n#define getc() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline int read(){\n    #define num ch-'0'\n    char ch;bool flag=0;int res;\n    while(!isdigit(ch=getc()))\n    (ch=='-')&&(flag=true);\n    for(res=num;isdigit(ch=getc());res=res*10+num);\n    (flag)&&(res=-res);\n    #undef num\n    return res;\n}\nconst int N=3005;\nint ver[N<<2],Next[N<<2],edge[N<<2],head[N],tot=1;\ninline void add(int u,int v,int e){\n\tver[++tot]=v,Next[tot]=head[u],head[u]=tot,edge[tot]=e;\n\tver[++tot]=u,Next[tot]=head[v],head[v]=tot,edge[tot]=e;\n}\nint dep[N],q[N],n,m,S,T,ans;\nbool bfs(){\n\tint l=0,r=1;memset(dep+1,-1,sizeof(int)*n);dep[q[0]=S]=0;\n\twhile(l<r){\n\t\tint u=q[l++];\n\t\tfor(int i=head[u];i;i=Next[i])\n\t\tif(dep[ver[i]]<0&&edge[i])\n\t\tdep[ver[i]]=i,q[r++]=ver[i];\n\t}\n\treturn ~dep[T];\n}\nint id[N],tmp[N];\nunsigned Pow=1,Hash[4][N];\nvoid solve(int L,int R){\n\tif(L==R) return;\n\tfor(int i=2;i<=tot;i+=2)\n\tedge[i]=edge[i^1]=1;\n\tS=id[L],T=id[R];int flow=0,j;\n\twhile(bfs()){\n\t\t++flow;\n\t\tfor(int i=T;i!=S;i=ver[j^1]) --edge[j=dep[i]],++edge[j^1];\n\t}\n\tPow*=233;\n\tfor(int i=1;i<=n;++i)\n\tif(~dep[i]) Hash[flow][i]+=Pow;\n\tint l=L,r=R;\n\tfor(int i=L;i<=R;++i)\n\tif(~dep[id[i]]) tmp[l++]=id[i];\n\telse tmp[r--]=id[i];\n\tmemcpy(id+L,tmp+L,sizeof(int)*(R-L+1));\n\tsolve(L,l-1),solve(r+1,R);\n}\nint main(){\n\t//freopen(\"testdata.in\",\"r\",stdin);\n\tn=read(),m=read();\n\tfor(int i=1,u,v;i<=m;++i)\n\tu=read(),v=read(),add(u,v,1);\n\tfor(int i=1;i<=n;++i) id[i]=i;\n\tsolve(1,n);\n\tfor(int i=1;i<=n;++i)\n\tfor(int j=i+1;j<=n;++j)\n\tfor(int k=0;k<=3;++k)\n\tif(Hash[k][i]!=Hash[k][j]) {ans+=k;break;}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1535797111,
        "uid": 41781,
        "name": "bztMinamoto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4214 \u3010[CERC2015]Juice Junctions\u3011"
    }
]