[
    {
        "content": ".\u6807\u7b7e\uff1a\u8d39\u7528\u6d41.\n\n.\u7b2c$i$\u4eba\u7834\u574f\u7684\u7ed3\u70b9\u53ef\u4ee5\u7ec4\u6210\u4e00\u4e2a\u96c6\u5408$Seq_i$, \u90a3\u4e48\n$$\\forall j\\neq i, Seq_i\\cap Seq_j = \\emptyset$$\n, \u4e14\n$$Seq_1\\cup Seq_2\\cup...\\cup Seq_k=S$$\n.\u5176\u4e2d$S$\u4e3a$1$~$n$\u70b9\u7684\u96c6\u5408(\u6ca1\u5f97$0$).\n\n.\u5b9a\u4e49$dis'[u][v](u<v)$\u4e3a\u4ece$u$\u5230$v$\u4e0d\u7ecf\u8fc7\u7f16\u53f7\u5927\u4e8e$v$\u7684\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6, \u901a\u8fc7Floyd\u53ef\u4ee5\u5f88\u5bb9\u6613\u9884\u5904\u7406\u5f97.\n\n.\u90a3\u4e48\u5bf9\u4e8e\u7b2c$i$\u4e2a\u4eba, \u5176\u8d70\u8fc7\u7684\u8def\u5f84\u957f\u5ea6\u4e3a$$dis'[0][Seq_{i,1}]+\\sum_{j=1}^{|Seq_i| - 1}dis'[Seq_{i,j}][Seq_{i,j+1}]$$, \u5176\u4e2d$Seq_{i,j}$\u8868\u793a$Seq_i$\u4e2d\u7f16\u53f7\u7b2c$j$\u5c0f\u7684\u70b9.\n\n.\u56af\u54df, \u51fa\u6765\u4e86.\n\n.\u5efa\u7acb\u65b0\u56fe$G'=\\{V', E'\\}$, $V'=V$, $E'=\\{e(i,j,dis'[i][j])\\}$, \u5176\u4e2d$e(u,v,w)$\u8868\u793a\u4e00\u6761\u4ece$u$\u5230$v$\u6743\u503c\u4e3a$w$\u7684\u8fb9, \u90a3\u4e48\u7b54\u6848\u5c31\u662f:\u7528\u4e0d\u8d85\u8fc7$k$\u6761\u4ee5$0$\u4e3a\u8d77\u70b9\u7684\u8def\u5f84\u8986\u76d6\u4e00\u4e2a$DAG$\u6240\u6709\u7ed3\u70b9\u7684\u6700\u5c0f\u603b\u957f\u5ea6(\u7ed3\u70b9\u9664\u8d77\u70b9\u5916\u4e0d\u53ef\u88ab\u91cd\u590d\u8986\u76d6).\n\n.\u6252\u5f00\u8fd9\u9053\u9898\u91cd\u91cd\u4f2a\u88c5\u4e4b\u540e, \u5b83\u7ec8\u4e8e\u88f8\u4e86.\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <queue>\n#define inf 1000000009\nusing namespace std;\n\nint read() {\n    int x = 0, f = 1;\n    char c = getchar();\n    while (c < '0' || c > '9') {\n        if (c == '-') f = -1;\n        c = getchar();\n    }\n    while (c >= '0' && c <= '9') {\n        x = x * 10 + c - '0';\n        c = getchar();\n    }\n    return x * f;\n}\n\nint ds[202][202];\nint s, t;\n\nint head[2003], nxt[200005], to[200005], cap[200005], cst[200005], cnt;\nvoid add(int f, int t, int w, int c) {\n    nxt[++cnt] = head[f];\n    head[f] = cnt;\n    to[cnt] = t;\n    cap[cnt] = w;\n    cst[cnt] = c;\n    return ;\n}\n\nint dis[2003], pe[2003], pv[2003], inq[2003];\nqueue<int> q;\n\nint bk(int x) {\n    return (x & 1) ? (x + 1) : (x - 1);\n}\n\nvoid mcf() {\n    int res = 0;\n    while (1) {\n        for (int i = 1; i <= t; ++i) dis[i] = inf;\n        dis[s] = 0;\n        q.push(s);\n        while (!q.empty()) {\n            int u = q.front();\n            q.pop();\n            inq[u] = 0;\n            for (int i = head[u]; i; i = nxt[i]) {\n                int v = to[i];\n                if (cap[i] < 1 || dis[v] <= dis[u] + cst[i]) continue;\n                dis[v] = dis[u] + cst[i];\n                pe[v] = i, pv[v] = u;\n                if (!inq[v]) {\n                    q.push(v);\n                    inq[v] = 1;\n                }\n            }\n        }\n        if (dis[t] == inf) break;\n        int d = inf;\n        for (int u = t; u != s; u = pv[u]) {\n            d = min(d, cap[pe[u]]);\n        }\n        res += d * dis[t];\n        for (int u = t; u != s; u = pv[u]) {\n            cap[pe[u]] -= d;\n            cap[bk(pe[u])] += d;\n        }\n    }\n    printf(\"%d\\n\", res);\n    return ;\n}\n\nint main() {\n    int n = read() + 1, m = read(), K = read();\n    s = n * 2 + 1, t = n * 2 + 2;\n    for (int i = 1; i <= n; ++i) {\n        for (int j = 1; j <= n; ++j) {\n            ds[i][j] = inf;\n        }\n        ds[i][i] = 0;\n    }\n    for (int i = 1; i <= m; ++i) {\n        int u = read() + 1, v = read() + 1, w = read();\n        ds[u][v] = ds[v][u] = min(ds[u][v], w);\n    }\n    for (int k = 1; k <= n; ++k) {\n        for (int i = 1; i <= n; ++i) {\n            for (int j = 1; j <= n; ++j) {\n                if (k < (max(i, j)))\n                    ds[i][j] = min(ds[i][j], ds[i][k] + ds[k][j]);\n            }\n        }\n    }\n\n    for (int i = 1; i <= n; ++i) {\n        if (i == 1) add(s, i * 2 - 1, K, 0), add(i * 2 - 1, s, 0, 0);\n        else add(s, i * 2 - 1, 1, 0), add(i * 2 - 1, s, 0, 0);\n        add(i * 2, t, 1, 0), add(t * 2, i, 0, 0);\n        for (int j = i + 1; j <= n; ++j) {\n            add(i * 2 - 1, j * 2, 1, ds[i][j]);\n            add(j * 2, i * 2 - 1, 0, -ds[i][j]);\n        }\n    }\n\n    mcf();\n    return 0;\n}\n```",
        "postTime": 1549961799,
        "uid": 51237,
        "name": "Kinandra",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4542 \u3010[ZJOI2011]\u8425\u6551\u76ae\u5361\u4e18\u3011"
    },
    {
        "content": "\u7ed9\u4e2a\u4e0d\u4e00\u6837\u7684\u5efa\u56fe\u65b9\u6cd5\u3002\n\n\u9996\u5148\u9898\u76ee\u663e\u7136\u53ef\u4ee5\u88ab\u8f6c\u5316\u4e3a\u9009 $k$ \u6761\u8def\u5f84\u8986\u76d6\u6240\u6709\u70b9\u3002\n\n\u4f46\u662f\u9898\u76ee\u4e2d\u8fd9\u4e2a\u300c\u5728 $K-1$ \u53f7\u636e\u70b9\u88ab\u6467\u6bc1\u4e4b\u524d\uff0c\u4efb\u4f55\u4eba\u4e0d\u80fd\u591f\u7ecf\u8fc7 $K$ \u53f7\u636e\u70b9\u300d\u7684\u9650\u5236\u4e0d\u597d\u5904\u7406\u3002\n\n\u8003\u8651\u5c06\u8def\u5f84\u5efa\u6210\u8fb9\uff0c\u7528 Floyd \u9884\u5904\u7406\u51fa $i\\rightsquigarrow j$ \u4e14\u4e0d\u7ecf\u8fc7 $>\\max\\{i,j\\}$ \u7684\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u3002\n\n\u5728\u65b0\u56fe\u4e0a\uff0c\u8fd9\u4e2a\u9650\u5236\u5c31\u53ef\u4ee5\u88ab\u8868\u793a\u4e3a\u9009\u51fa\u7684\u6240\u6709\u8def\u5f84\u4e2d\u7684\u70b9\u7f16\u53f7\u8981\u9012\u589e\uff0c\u4e14\u6240\u6709\u8def\u5f84\u7684\u5e76\u96c6\u4e3a $\\{1,2,\\cdots,n\\}$\u3002\n\n\u4e3a\u4ec0\u4e48\u8fd9\u6837\u662f\u5bf9\u7684\u5462\uff1f\n\n\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u4eba\u90fd\u53ef\u4ee5\u5728\u4e00\u4e2a\u70b9\u7b49\uff0c\u6240\u4ee5\u5f53\u4f60\u8981\u7206\u6389 $i$ \u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u901a\u8fc7\u9002\u5f53\u63a7\u5236\u987a\u5e8f\u4fdd\u8bc1 $0\\sim i-1$ \u90fd\u5df2\u7ecf\u7206\u6389\u4e86\u3002\n\n\u4e8e\u662f\u5c31\u53ef\u4ee5\u5efa\u56fe\u4e86\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u4ee5\u4e0b\u7528 $c$ \u8868\u793a\u5bb9\u91cf\uff0c$w$ \u8868\u793a\u8d39\u7528\u3002\n\n\u9996\u5148\u62c6\u70b9\uff0c\u4e00\u4e2a\u70b9 $i$ \u62c6\u6210 $i_1$ \u548c $i_2$\u3002\n\n\u7531\u4e8e\u8981\u9650\u5236\u53ea\u6709 $k$ \u4e2a\u8def\u5f84\uff0c\u6240\u4ee5\u8fde $S\\rightarrow 0_1$\uff0c$c=k$\uff0c$w=0$\u3002\n\n\u7136\u540e\u662f\u4e00\u4e2a\u70b9\u5fc5\u987b\u8981\u8fc7 $\\geq 1$ \u6b21\u3002\u8fd9\u91cc\u5176\u5b9e\u4e0d\u7528\u4e0a\u4e0b\u754c\u8d39\u7528\u6d41\uff0c\u76f4\u63a5\u8fde\u4e24\u6761\u8fb9\uff1a$i_1\\rightarrow i_2,c=1,w=-\\infty$ \u548c $i_1\\rightarrow i_2,c=+\\infty,w=0$ \u5373\u53ef\uff0c\u56e0\u4e3a\u5c11\u8fc7\u4e00\u4e2a\u70b9\uff0c\u603b\u8d39\u7528\u4f1a\u591a\u4e00\u5927\u5806\uff0c\u80af\u5b9a\u591a\u4e8e\u5c11\u8fc7\u4e00\u4e2a\u70b9\u80fd\u7701\u4e0b\u7684\u8ddd\u79bb\u3002\n\n\u7136\u540e\u662f\u6240\u6709\u4eba\u90fd\u53ef\u4ee5\u5728\u4efb\u610f\u70b9\u7ed3\u675f\uff0c\u6240\u4ee5\u8fde\u8fb9 $i_2\\rightarrow T, c=+\\infty, w=0$\u3002\n\n\u518d\u7136\u540e\u5c31\u662f\u79fb\u52a8\uff0c\u5bf9\u4e8e $i<j$\uff0c\u5982\u679c\u53ef\u4ee5\u5728\u53ea\u7ecf\u8fc7\u7f16\u53f7 $<j$ \u7684\u70b9\u5230\u8fbe\uff0c\u5219\u8fde\u8fb9 $i_2\\rightarrow j_1,c=+\\infty, w=\\text{dis}(i,j)$\u3002\n\n\u6c42\u4e00\u904d $S\\rightarrow T$ \u7684\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u5373\u53ef\u3002\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <cstring>\n#include <cstdio>\n#include <queue>\nusing namespace std;\n\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1 << 21], *p1 = buf, *p2 = buf;\n\ninline int qread() {\n\tregister char c = getchar();\n\tregister int x = 0, f = 1;\n\twhile (c < '0' || c > '9') {\n\t\tif (c == '-') f = -1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9') {\n\t\tx = (x << 3) + (x << 1) + c - 48;\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\n\ninline int Abs(const int& x) {return (x > 0 ? x : -x);}\ninline int Max(const int& x, const int& y) {return (x > y ? x : y);}\ninline int Min(const int& x, const int& y) {return (x < y ? x : y);}\n\nconst long long INF = 0x3f3f3f3f3f3f3f3f;\nstruct Edge {\n\tint to, nxt;\n\tlong long cap, cost;\n\tEdge() {\n\t\tnxt = -1;\n\t}\n};\nint n, m, hd[310], pnt, k, g[155][155];\nlong long sum, a[805];\nEdge e[100005];\n\nnamespace MCMF {\n\tlong long dis[310];\n\tbool vis[310], mrk[310];\n\tinline void SPFA(int s) {\n\t\tqueue <int> que;\n\t\tmemset(dis, 0x3f, sizeof(dis));\n\t\tdis[s] = 0;\n\t\tque.push(s);\n\t\twhile (!que.empty()) {\n\t\t\tint u = que.front();\n\t\t\tque.pop();\n\t\t\tvis[u] = 0;\n\t\t\tfor (int i = hd[u];~i;i = e[i].nxt) {\n\t\t\t\tif (e[i].cap && dis[e[i].to] > dis[u] + e[i].cost) {\n\t\t\t\t\tdis[e[i].to] = dis[u] + e[i].cost;\n\t\t\t\t\tif (!vis[e[i].to]) {\n\t\t\t\t\t\tvis[e[i].to] = 1;\n\t\t\t\t\t\tque.push(e[i].to);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tinline long long Dfs(int u, int t, long long f) {\n\t\tif (u == t) return f;\n\t\tmrk[u] = 1;\n\t\tlong long flw = 0;\n\t\tfor (int i = hd[u];~i;i = e[i].nxt) {\n\t\t\tif (e[i].cap && !mrk[e[i].to] && dis[e[i].to] == dis[u] + e[i].cost) {\n\t\t\t\tlong long d = Dfs(e[i].to, t, Min(f - flw, e[i].cap));\n\t\t\t\tif (d) {\n\t\t\t\t\te[i].cap -= d;\n\t\t\t\t\te[i ^ 1].cap += d;\n\t\t\t\t\tflw += d;\n\t\t\t\t} else dis[e[i].to] = INF;\n\t\t\t\tif (flw == f) break;\n\t\t\t}\n\t\t}\n\t\tmrk[u] = 0;\n\t\treturn flw;\n\t}\n\tinline long long Flow(int s, int t) {\n\t\tlong long ans = 0, flw = 0;\n\t\tfor (;;) {\n\t\t\tSPFA(s);\n\t\t\t//printf(\"%lld %lld\\n\", flw, dis[t]);\n\t\t\tif (dis[t] >= 1e16) break;\n\t\t\tlong long tmp = Dfs(s, t, INF);\n\t\t\tflw += tmp;\n\t\t\tans += tmp * dis[t];\n\t\t}\n\t\t//printf(\"flw=%lld\\n\", flw);\n\t\treturn ans;\n\t}\n}\n\ninline void AddEdge(int u, int v, long long cap, long long cost) {\n\t//printf(\"%d->%d c=%lld w=%lld\\n\", u, v, cap, cost);\n\te[pnt].to = v;\n\te[pnt].cap = cap;\n\te[pnt].cost = cost;\n\te[pnt].nxt = hd[u];\n\thd[u] = pnt;\n\tpnt++;\n\te[pnt].to = u;\n\te[pnt].cap = 0;\n\te[pnt].cost = -cost;\n\te[pnt].nxt = hd[v];\n\thd[v] = pnt;\n\tpnt++;\n}\n\ninline void Read() {\n\tn = qread() + 1; m = qread(); k = qread();\n\tfor (int i = 1;i <= m;i++) {\n\t\tint u = qread() + 1, v = qread() + 1, w = qread();\n\t\tg[u][v] = g[v][u] = Min(g[u][v], w);\n\t}\n}\n\ninline void Prefix() {\n\tfor (int k = 1;k <= n;k++) {\n\t\tfor (int i = 1;i <= n;i++) {\n\t\t\tfor (int j = 1;j <= n;j++) {\n\t\t\t\tif (k < i || k < j) g[i][j] = Min(g[i][j], g[i][k] + g[k][j]);\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 1;i <= n;i++) {\n\t\tAddEdge(i, i + n, 1, -1e12);\n\t\tAddEdge(i, i + n, INF, 0);\n\t\tfor (int j = i + 1;j <= n;j++) {\n\t\t\tif (g[i][j] != 0x3f3f3f3f) AddEdge(i + n, j, INF, g[i][j]);\n\t\t}\n\t\tAddEdge(i + n, 2 * n + 1, INF, 0);\n\t}\n}\n\nint main() {\n\tmemset(hd, -1, sizeof(hd));\n\tmemset(g, 0x3f, sizeof(g));\n\tRead();\n\tPrefix();\n\tAddEdge(0, 1, k, 0);\n\tprintf(\"%lld\\n\", MCMF::Flow(0, 2 * n + 1) + 1000000000000ll * n);\n\t#ifndef ONLINE_JUDGE\n\twhile (1);\n\t#endif\n\treturn 0;\n}\n```",
        "postTime": 1611924926,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4542 \u3010[ZJOI2011]\u8425\u6551\u76ae\u5361\u4e18\u3011"
    },
    {
        "content": "\u611f\u89c9\u9898\u89e3\u5199\u7684\u90fd\u592a\u7b80\u7565\u4e86\uff0c\u53ea\u662f\u544a\u8bc9\u4f60\u600e\u4e48\u5efa\u56fe\uff0c\u800c\u6ca1\u6709\u544a\u8bc9\u4f60\u4e3a\u4ec0\u4e48\u8fd9\u6837\u5efa\uff0c\u8fd9\u6837\u5efa\u4e3a\u4ec0\u4e48\u5bf9\u3002\u5f88\u53cd\u611f\u8fd9\u79cd\u73b0\u8c61\uff0c\u4f5c\u4e3a\u8bfb\u8005\u672c\u6765\u770b\u9898\u89e3\u5c31\u662f\u56e0\u4e3a\u601d\u7ef4\u8df3\u8dc3\u6027\u4e0d\u591f\uff0c\u5230\u5934\u6765\u9898\u89e3\u4e5f\u8981\u601d\u7ef4\u8df3\u8dc3\uff0c\u771f\u6b63\u7684\u7591\u96be\u70b9\u4e5f\u6ca1\u60f3\u901a\uff0c\u6ca1\u6709\u610f\u4e49\u3002\u56e0\u6b64\u5199\u8fd9\u7bc7\u9898\u89e3\u6765\u8865\u5145\u4e00\u4e0b\u5efa\u56fe\u7684\u6b63\u786e\u6027\u548c\u539f\u56e0\u3002\n\n\n------------\n\n\u5927\u4f53\u5148\u4e32\u4e00\u4e0b\u4e3b\u6d41\u505a\u6cd5\u3002\n\n\u9996\u5148\u6211\u4eec\u7528\u6700\u77ed\u8def\u7b97\u6cd5\u6c42\u51fa $dis_{i,j}$ \u8868\u793a\u4ece $i$ \u5230 $j$ \u53ea\u7ecf\u8fc7\u7f16\u53f7\u4e0d\u5927\u4e8e $\\max(i, j)$ \u7684\u70b9\u7684\u6700\u77ed\u8def\u5f84\u3002\u4e4b\u540e\u6211\u4eec\u7528 $dis$ \u6570\u7ec4\u5efa\u56fe\uff0c\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u4ee5\u6c42\u51fa\u4e00\u4e2a\u5206\u914d\u65b9\u6848\u4f7f\u5f97\uff1a\n-\t\u6bcf\u4e2a\u70b9\u90fd\u88ab\u7ecf\u8fc7\u3002\n-\t\u6700\u540e\u603b\u82b1\u8d39\u6700\u5c11\u3002\n\n\u73b0\u5728\u6765\u60f3\u4e00\u60f3\u8fd9\u4e2a\u56fe\u600e\u4e48\u5efa\u3002\n\n\u7f51\u7edc\u6d41\u5bf9\u65f6\u95f4\u7684\u6982\u5ff5\u4e0d\u5f88\u654f\u611f\uff0c\u6240\u4ee5\u8bf4\u4e24\u4e2a\u4eba\u5206\u7740\u8d70\u5728\u7f51\u7edc\u6d41\u91cc\u53ef\u4ee5\u4e00\u8d77\u6d41\uff0c\u4e0d\u7528\u592a\u5728\u610f\u4e24\u4e2a\u4eba\u7684\u5148\u540e\u987a\u5e8f\u4f1a\u6709\u5f71\u54cd\u3002\u800c\u4e14\u4e4b\u524d\u7684 $dis$ \u6570\u7ec4\u4e5f\u5bf9\u65f6\u95f4\u987a\u5e8f\u505a\u4e86\u4e00\u4e2a\u4fdd\u8bc1\u3002\n\n\u4e0a\u9762\u7684\u8981\u6c42\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u8981\u627e\u5230\u82e5\u5e72\u6761\u8def\u5f84\uff0c\u4ee5\u8986\u76d6\u56fe\u4e2d\u6240\u6709\u70b9\u3002\u5982\u679c\u4e0d\u8003\u8651\u8d39\u7528\uff0c\u6211\u4eec\u4f1a\u8054\u60f3\u5230\u6700\u5927\u6d41\u4e2d\u7684\u6700\u5c0f\u8def\u5f84\u8986\u76d6\u95ee\u9898\uff08\u6bcf\u4e2a\u70b9\u53ea\u80fd\u7ecf\u8fc7\u4e00\u6b21\uff09\u3002\u8fd9\u4e2a\u95ee\u9898\u662f\u6309\u5982\u4e0b\u65b9\u6cd5\u89e3\u51b3\u7684\uff1a\n-\t\u5c06\u6bcf\u4e2a\u70b9 $u$ \u62c6\u5f00\u4e3a $u_{in}$ \u548c $u_{out}$\u3002\n-\t\u5efa\u7acb\u6e90\u6c47\u70b9\uff0c\u5bf9\u4e8e\u6bcf\u4e2a $u$\uff0c\u8fde\u63a5 $<S, u_{out}>$\u3001$<u_{in}, T>$\u3002\n-\t\u5bf9\u4e8e\u539f\u56fe\u4e2d\u7684\u8fb9 $<u, v>$\uff0c\u6d41\u7f51\u7edc\u91cc\u8fde $<u_{out}, v_{in}>$\u3002\n-\t\u56fe\u4e2d\u6bcf\u6761\u8fb9\u7684\u6d41\u91cf\u90fd\u662f $1$\u3002\n\n\u7136\u540e\u8dd1\u6700\u5927\u6d41\u4e8c\u5206\u56fe\u5339\u914d\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u5339\u914d $<u_{out}, v_{in}>$\uff0c\u4ee3\u8868\u6211\u4eec\u5728\u539f\u56fe\u4e2d\u628a\u8fd9\u4e24\u4e2a\u70b9\u5408\u5e76\u4e3a\u4e00\u6761\u8def\u5f84\u8d70\u8fc7\u3002\u90a3\u4e48\u6700\u5927\u6d41\u5c31\u662f\u6211\u4eec\u6700\u591a\u80fd\u5408\u5e76\u7684\u6570\u91cf\u3002\u4e00\u5f00\u59cb\u6211\u4eec\u7528 $n$ \u6761\u8def\u5f84\u8d70\u8fc7 $n$ \u4e2a\u70b9\u3002\u8dd1\u5b8c\u6700\u5927\u6d41\u6211\u4eec\u80fd\u5408\u5e76\u6700\u591a\u70b9\uff0c\u6bcf\u5408\u5e76\u4e24\u4e2a\u70b9\u9700\u8981\u7684\u8def\u5f84\u6570\u5c31\u5c11\u4e00\u4e2a\uff0c\u4e5f\u5c31\u4f7f\u7528\u4e86\u6700\u5c11\u7684\u8def\u5f84\u8986\u76d6\u6240\u6709\u70b9\u3002\n\n\u6211\u4eec\u5c1d\u8bd5\u5c06\u4e0a\u8ff0\u6a21\u578b\u5e94\u7528\u5230\u6b64\u9898\u4e2d\u3002\u9996\u5148\uff0c\u6bcf\u4e2a\u4eba\u90fd\u4ece $0$ \u53f7\u70b9\u51fa\u53d1\uff0c\u6240\u4ee5 $0$ \u53ef\u4ee5\u4f5c\u4e3a $K$ \u6761\u8def\u5f84\u7684\u8d77\u70b9\uff0c\u56e0\u800c\u5b83\u53ef\u4ee5\u4e0e $K$ \u4e2a\u70b9\u5339\u914d\u3002\u6240\u4ee5 $<S,0_{out}>$ \u8fd9\u6761\u8fb9\u7684\u6d41\u91cf\u6211\u4eec\u8981\u6539\u6210 $K$\u3002\u6b64\u5916\u6211\u4eec\u8981\u5f15\u8fdb\u8d39\u7528\u7684\u6982\u5ff5\uff0c\u6bcf\u6b21\u5339\u914d\u5c31\u4ee3\u8868\u4f7f\u7528\u4e86\u8fd9\u6761\u8fb9\uff0c\u4e5f\u5c31\u8981\u6d88\u8017\u8fd9\u6761\u8fb9\u7684\u4ee3\u4ef7\u3002\u8fd9\u6837\u56fe\u5c31\u5efa\u5b8c\u4e86\uff0c\u8dd1\u8d39\u7528\u6d41\u5373\u53ef\u3002\n\n\u4e8b\u5b9e\u8bc1\u660e\u8fd9\u6837\u5efa\u56fe\u662f\u5bf9\u7684\uff0c\u4f46\u662f\u521d\u6b21\u60f3\u5230\u6216\u8bfb\u5230\u4f1a\u4ea7\u751f\u5f88\u591a\u7591\u95ee\uff0c\u4e0b\u9762\u6211\u5bf9\u6211\u7591\u60d1\u6bd4\u8f83\u6df1\u7684\u8fdb\u884c\u89e3\u7b54\uff0c\u5e0c\u671b\u5bf9\u5927\u5bb6\u4e5f\u6709\u5e2e\u52a9\u3002\n\n1.\t**\u6700\u5c0f\u8def\u5f84\u8986\u76d6\u95ee\u9898\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4ee5\u4efb\u610f\u70b9\u4e3a\u8d77\u70b9\uff0c\u800c\u6b64\u9898\u4e2d\u6240\u6709\u4eba\u90fd\u5fc5\u987b\u4ece $0$ \u53f7\u70b9\u51fa\u53d1\uff0c\u8fd9\u65f6\u4e0a\u8ff0\u5efa\u56fe\u65b9\u6cd5\u5982\u4f55\u80fd\u4fdd\u8bc1\u5c06\u6240\u6709\u70b9\u8986\u76d6\uff1f**\n\n\t\u8fd9\u5c31\u8981\u4e0e\u8fd9\u9898\u7684 $dis$ \u6570\u7ec4\u606f\u606f\u76f8\u5173\u4e86\u3002\u539f\u56fe\u662f\u8fde\u901a\u56fe\uff0c\u56e0\u6b64\u6211\u4eec\u6c42\u51fa\u6765\u7684 $dis$ \u6570\u7ec4\u5bf9\u4e8e $\\forall u, v$\uff0c$dis_{u,v}$ \u90fd\u6709\u610f\u4e49\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c**$dis$ \u6570\u7ec4\u76f8\u5f53\u4e8e\u4e00\u4e2a\u65e0\u5411\u5b8c\u5168\u8fde\u901a\u56fe**\u3002\u56e0\u6b64\u6211\u4eec\u4e0d\u8bba\u4ece\u54ea\u4e2a\u70b9\u51fa\u53d1\uff0c\u90fd\u4e00\u5b9a\u80fd\u627e\u5230\u4e00\u6761\u4e0d\u91cd\u590d\u7684\u8def\u5f84\u4ee5\u7ecf\u8fc7\u6240\u6709\u70b9\uff08\u6bcf\u4e2a\u70b9\u4e0e\u672a\u8986\u76d6\u7684\u70b9\u90fd\u6709\u8fb9\u76f8\u8fde\uff09\uff0c\u53ea\u662f\u4ee3\u4ef7\u4e0d\u540c\u7684\u95ee\u9898\u3002\n    \n    \u5bf9\u5e94\u5230\u6d41\u7f51\u7edc\u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u8fd8\u6ca1\u6709\u8ddf\u4efb\u4f55\u5176\u4ed6\u70b9\u5339\u914d\uff0c\u90a3\u4e48\u6839\u636e\u4e0a\u8ff0\u63a8\u8bba\uff0c\u4e00\u5b9a\u80fd\u627e\u5230\u4e00\u6761\u589e\u5e7f\u8def\uff0c\u8ba9\u8fd9\u4e2a\u70b9\u5339\u914d\uff0c\u6700\u7ec8\u8ba9\u6240\u6709\u70b9\u90fd\u80fd\u76f8\u4e92\u5339\u914d\u53d8\u6210\u4e00\u6761\u8def\u5f84\uff0c\u4e5f\u5c31\u662f\u4e0a\u9762\u90a3\u6bb5\u7684\u4e00\u6761\u8def\u5f84\u8986\u76d6\u6240\u6709\u70b9\u3002\u8fd9\u6837\u53ef\u80fd\u4f1a\u8ba9\u6700\u7ec8\u4ee3\u4ef7\u589e\u52a0\uff0c\u4f46\u8981\u6ce8\u610f\u7684\u662f**\u8d39\u7528\u6d41\u5b83\u9996\u5148\u662f\u6700\u5927\u6d41**\uff0c\u6709\u589e\u5e7f\u8def\u4e00\u5b9a\u4f1a\u6d41\uff0c\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u53ea\u662f\u901a\u8fc7\u7b97\u6cd5\u8ba9\u6700\u5927\u6d41\u7684\u4ee3\u4ef7\u6700\u5c0f\u7f62\u4e86\u3002\u6240\u4ee5\u5728\u8fd9\u4e2a\u6d41\u7f51\u7edc\u4e0a\u8dd1\u8d39\u7528\u6d41\u9996\u5148\u5c31\u4f1a\u6ee1\u8db3\u8986\u76d6\u6240\u6709\u70b9\u3002\n    \n    \n2.\t**$K$ \u4e2a\u4eba\u4e0d\u4e00\u5b9a\u5168\u8981\u7528\u5230\uff0c\u8fd9\u4e2a\u5982\u4f55\u4fdd\u8bc1\uff1f**\n\n\t\u4ece\u5efa\u56fe\u76ee\u7684\u4e0a\u770b\uff0c\u6d41\u7f51\u7edc\u4e2d\u5c06 $<S,0_{out}>$ \u8fd9\u6761\u8fb9\u7684\u6d41\u91cf\u6211\u4eec\u8981\u6539\u6210 $K$\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u5728\u6240\u6709\u70b9\u90fd\u5339\u914d\u7684\u57fa\u7840\u4e0a\u901a\u8fc7\u63d0\u4f9b\u591a\u79cd\u5339\u914d\u9009\u62e9\u4ee5\u4f7f\u6700\u7ec8\u8d39\u7528\u5c3d\u91cf\u7684\u5c11\u3002\u5982\u679c\u4e00\u6761\u8def\u5f84\u5c31\u80fd\u4f18\u96c5\u4e14\u4ee3\u4ef7\u6700\u5c0f\u5730\u8d70\u8fc7\u6240\u6709\u70b9\uff0c\u81ea\u7136\u6ca1\u6709\u5fc5\u8981\u7528\u5230\u5269\u4e0b\u7684\u9009\u62e9\u4e86\u3002\n    \n    \u4ece\u56fe\u672c\u8eab\u770b\uff0c\u867d\u7136\u6e90\u70b9 $S$ \u7684\u603b\u6d41\u51fa\u91cf\u589e\u52a0\u4e86\uff0c\u4f46\u662f\u6c47\u70b9 $T$ \u7684\u603b\u6d41\u5165\u91cf\u4ecd\u7136\u662f $n$\u3002\u56e0\u6b64\u6700\u5927\u6d41\u4ecd\u7136\u662f $n$\uff0c\u4e5f\u5c31\u662f\u8bf4\u6e90\u70b9\u6d41\u4e0d\u6ee1\u3002\u90a3\u4e48\u8fd9\u65e2\u53ef\u80fd\u662f\u6211\u4eec\u4f7f\u7528\u4e86\u591a\u4f59\u7684 $K-1$ \u4e2a\u9009\u62e9\uff0c\u8ba9\u67d0\u4e9b\u70b9\u5931\u914d\uff0c\u4e5f\u53ef\u80fd\u662f\u6211\u4eec\u820d\u5f03\u4e86\u591a\u4f59\u7684\u9009\u62e9\u4fdd\u6301\u539f\u72b6\u3002\n    \n    \u603b\u7684\u6765\u8bf4\uff0c\u5c31\u662f\u7ed9\u4e00\u4e2a\u53ef\u80fd\u66f4\u4f18\u7684\u9009\u62e9\uff0c\u7b97\u6cd5\u4f1a\u81ea\u5df1\u51b3\u5b9a\u7528\u4e0d\u7528\u3002\n    \n3. **\u6bcf\u4e2a\u70b9\u771f\u7684\u53ea\u7ecf\u8fc7\u4e00\u6b21\u5417\uff1f**\n\n\t\u5f88\u591a\u9898\u89e3\u90fd\u8fd9\u4e48\u8bf4\uff0c\u4f46\u662f\u6211**\u4e0d\u8ba4\u540c**\u3002\u5728\u6211\u4eec\u5efa\u7684\u6d41\u7f51\u7edc\u4e2d\uff0c\u7684\u786e\u6bcf\u4e2a\u70b9\u6700\u591a\u53ea\u80fd\u6709\u4e00\u4e2a\u5165\u5ea6\u4e00\u4e2a\u51fa\u5ea6\uff08\u9664\u4e86 $0$ \u53f7\u70b9\uff09\u3002\u770b\u4f3c\u53ea\u7ecf\u8fc7\u4e00\u6b21\uff0c\u4f46\u662f\u8981\u6ce8\u610f\u6211\u4eec\u7684\u6d41\u7f51\u7edc\u662f\u5efa\u7acb\u5728 $dis$ \u6570\u7ec4\u8fd9\u4e2a\u770b\u505a\u662f\u65e0\u5411\u5b8c\u5168\u8fde\u901a\u56fe\u7684\u57fa\u7840\u4e0a\u7684\u3002\u800c $dis_{u, v}$ \u672c\u6765\u5c31\u4f1a\u5305\u542b\u4e0d\u5927\u4e8e $\\max(u,v)$ \u7684\u70b9\u4f5c\u4e3a\u6700\u77ed\u8def\u7684\u4e2d\u8f6c\u70b9\uff0c\u53ea\u4e0d\u8fc7\u6d41\u7f51\u7edc\u4fdd\u8bc1\u5339\u914d\u65f6\u8fd9\u4e2a\u70b9\u7b2c\u4e00\u6b21\u51fa\u73b0\u7f62\u4e86\uff0c\u56e0\u800c\u6bcf\u4e2a\u70b9\u53ea\u7ecf\u8fc7\u4e00\u6b21\u662f\u4e0d\u51c6\u786e\u7684\u3002\n    \n    \n------------\n    \n\u603b\u800c\u8a00\u4e4b\uff0c\u8fd9\u9053\u9898\u4e4b\u6240\u4ee5\u5982\u6b64\u5efa\u56fe\u548c\u4e0a\u9762\u4e09\u4e2a\u95ee\u9898\u7684\u5408\u7406\u89e3\u91ca\u90fd\u662f\u56e0\u4e3a\u6211\u4eec\u5904\u7406\u51fa\u4e86 $dis$ \u6570\u7ec4\u8fd9\u4e2a\u53ef\u4ee5\u770b\u505a\u4e00\u4e2a\u65e0\u5411\u5b8c\u5168\u8fde\u901a\u56fe\u7684\u4e1c\u897f\u3002\u867d\u7136\u89e3\u91ca\u8fd9\u4e9b\u95ee\u9898\u770b\u4f3c\u5f88\u9ebb\u70e6\uff0c\u4f46\u6211\u89c9\u5f97\u8fd9\u9898\u7684\u7cbe\u534e\u5728 $dis$ \u6570\u7ec4\u4e0a\u3002\n\n\n\u5177\u4f53\u5730\u5efa\u56fe\u65b9\u6cd5\u53ef\u4ee5\u53bb\u53c2\u8003\u522b\u7684\u9898\u89e3\uff0c\u4ee3\u7801\u4e5f\u5f88\u7b80\u5355\uff0c\u653e\u5728[\u526a\u5207\u677f](https://www.luogu.com.cn/paste/mfua9amh)\uff0c\u8c22\u8c22\u89c2\u770b\uff01\n    \n    \n    \n    \n    ",
        "postTime": 1682868409,
        "uid": 528114,
        "name": "jjsnam",
        "ccfLevel": 6,
        "title": "P4542 \u9898\u89e3"
    },
    {
        "content": "[\u535a\u5ba2\u56ed\u98df\u7528\u6548\u679c\u66f4\u4f73](https://www.cnblogs.com/ytxy-bolg/articles/P4542.html)\u3002\n\n## \u9898\u9762\u7b80\u8ff0\n\n\u7ed9\u51fa\u4e00\u5f20 $N + 1$ \u4e2a\u70b9\uff0c$M$ \u6761\u8fb9\u7684\u65e0\u5411\u8fde\u901a\u56fe\uff0c\u6bcf\u4e00\u6761\u8fb9\u6709\u4e00\u4e2a\u4ee3\u4ef7 $L_i$\u3002\n\n\u6709 $K$ \u4e2a\u4eba\uff0c\u4ed6\u4eec\u4ece $0$ \u53f7\u7ed3\u70b9\u51fa\u53d1\uff0c\u53ef\u4ee5\u5206\u5f00\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7ed3\u70b9 $i$ \u5fc5\u987b\u5728\u5df2\u7ecf\u7ecf\u8fc7 $i - 1$ \u53f7\u7ed3\u70b9\u4e4b\u540e\u624d\u80fd\u901a\u884c\u3002\n\n\u6c42\u5230\u8fbe $N$ \u53f7\u7ed3\u70b9\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n\u6570\u636e\u4fdd\u8bc1\u6709\u89e3\uff0c\u4e14 $N \\le 150,M \\le 2 \\times {10}^{4},K \\le 10,L_i \\le {10}^{4}$\u3002\n\n## \u89e3\u9898\u601d\u8def\n\n\u8fd9\u4e00\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\u6c42\u9009\u51fa $k$ \u6761\u8def\u5f84\uff0c\u4f7f\u5f97\u8fd9 $k$ \u6761\u8def\u5f84\u8986\u76d6\u6574\u5f20\u56fe\uff0c\u8def\u5f84\u4e4b\u95f4\u53ef\u4ee5\u6709\u91cd\u5408\u3002\n\n\u90a3\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u8fd9\u4e48\u60f3\u5462\u3002\u9996\u5148\u8fd9 $k$ \u4e2a\u4eba\u662f\u53ef\u4ee5\u5206\u5934\u884c\u52a8\u7684\u3002\n\n\u5176\u6b21\u5982\u679c\u4e00\u4e2a\u4eba\u5728 $i$ \u53f7\u7ed3\u70b9,\u6709\u4e00\u6761\u901a\u5411 $j (j > i)$ \u7684\u8fb9\uff0c\u4f46 $j - 1$ \u53f7\u7ed3\u70b9\u8fd8\u6ca1\u6709\u8d70\u8fc7\uff0c\u90a3\u4ed6\u662f\u53ef\u4ee5\u5728\u539f\u5730\u7b49\u5230 $j - 1$ \u88ab\u8d70\u8fc7\u4e4b\u540e\u518d\u8d70 $j$ \u53f7\u7ed3\u70b9\u7684\u3002\n\n\u6240\u4ee5\u65e0\u8bba\u4ec0\u4e48\u65f6\u5019\u90fd\u81f3\u5c11\u6709\u4e00\u4e2a\u4eba\u53ef\u4ee5\u8d70\u52a8\uff0c\u5e76\u4e14\u5728\u4ed6\u79fb\u52a8\u540e\u53c8\u4f1a\u6709\u4eba\u80fd\u8d70\u52a8\uff0c\u6211\u4eec\u4fbf\u5c06\u8fd9\u4e00\u9898\u8f6c\u5316\u4e3a\u4e86\u4e0a\u8ff0\u7684\u610f\u601d\u3002\n\n\u56e0\u4e3a\u53d7\u5230\u201c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7ed3\u70b9 $i$ \u5fc5\u987b\u5728\u5df2\u7ecf\u7ecf\u8fc7 $i - 1$ \u53f7\u7ed3\u70b9\u4e4b\u540e\u624d\u80fd\u901a\u884c\u3002\u201d\u7684\u5f71\u54cd\uff0c\u6211\u4eec\u9700\u8981\u9b54\u6539\u4e00\u4e0b floyd \u7b97\u6cd5\uff0c\u5c06 $dis_{i,j}$ \u5b9a\u4e49\u4e3a\u4ece $i$ \u5230 $j$ \u4e0d\u7ecf\u8fc7 $> \\max\\{i, j\\}$ \u7684\u7ed3\u70b9\u7684\u6700\u77ed\u8def\u5f84\uff0c\u8fd9\u6837\u4e00\u6765\u5c31\u6784\u9020\u4e86\u4e00\u5f20\u65b0\u56fe\u3002\n\n\u6b64\u65f6\uff0c\u8fd9\u4e00\u9898\u5c31\u53d8\u6210\u4e86\u5728\u8fd9\u4e00\u5f20\u65b0\u56fe\u4e0a\u6c42 $k$ \u6761\u8fb9\u7684\u6700\u5c0f\u6743\u8def\u5f84\u8986\u76d6\u3002\n\n\u8003\u8651\u5230\u8fd9\u662f\u4e00\u5f20\u4e00\u822c\u56fe\uff0c\u6211\u4eec\u5c06\u6bcf\u4e00\u4e2a\u7ed3\u70b9 $i$ \u62c6\u6210 $i_1,i_2$ \u4e24\u4e2a\u70b9\uff0c\u8fd9\u6837\u4e00\u6765\u5b83\u5c31\u53d8\u6210\u4e86\u4e00\u5f20\u4e8c\u5206\u56fe\u3002\n\n\u5efa\u7acb\u8d85\u7ea7\u6e90\u70b9 $s$ \u548c\u8d85\u7ea7\u6c47\u70b9 $t$\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e8c\u5206\u56fe\uff0c\u6240\u4ee5\u8fde\u8fb9 $(s,i_1,1,0),(i_2,t,1,0)$\u3002\n\n\u8003\u8651\u5230\u4e8c\u5206\u56fe\u7684\u6027\u8d28\uff0c\u6211\u4eec\u5c06\u65b0\u56fe\u4e2d\u7684\u8fb9 $(u,v,L_i)$ \u6362\u6210 $(u_2,v_1,1,L_i)$ \u6216\u7c7b\u4f3c\u7684\u8fde\u8fb9\u65b9\u5f0f\u3002\n\n\u4f46 $(s,0)$ \u7684\u8fd9\u4e00\u6761\u8fb9\u7684\u5bb9\u91cf\u9700\u8981\u6539\u4e3a $k$ \u6765\u652f\u6301\u6211\u4eec\u9009\u62e9 $k$ \u6761\u8def\u5f84\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u6c42\u89e3\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}({n}^{3}+mcmf(n,{n}^{2}))$\uff0c\u8db3\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<queue>\n#define INF ((int)1e9+(int)1e8)\nusing namespace std;\nconst int N(155),NN(2000),M(2e4+5);\nint n,m,k,ds[N][N],s,t;\nvoid floyd(){\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tfor(int k=1;k<=n;k++)\n\t\t\t\tif(k<max(i,j))\n\t\t\t\t\tds[j][i]=ds[i][j]=min(ds[i][k]+ds[k][j],ds[i][j]);\n}\nint tot=1,head[NN],to[M<<1],nxt[M<<1],cst[M<<1],flow[M<<1];\ninline void add(int x,int y,int flw,int c){\n\tnxt[++tot]=head[x],to[head[x]=tot]=y,flow[tot]=flw,cst[tot]=c;\n\tnxt[++tot]=head[y],to[head[y]=tot]=x,flow[tot]=0,cst[tot]=(c==0)?0:-c;\n}\nbool used[NN];\nint lstn[NN],lste[NN],dis[NN];\nqueue<int> q;\nint mcmf(){\n\tint cost=0;\n\twhile(114514){\n\t\tfor(int i=1;i<=t;i++) dis[i]=INF;\n\t\tdis[s]=0;\n\t\tq.push(s);\n\t\twhile(!q.empty()){\n\t\t\tint u=q.front();\n\t\t\tq.pop();\n\t\t\tused[u]=0;\n\t\t\tfor(int i=head[u];i;i=nxt[i]){\n\t\t\t\tint v=to[i];\n\t\t\t\tif(flow[i]&&dis[v]>dis[u]+cst[i]){\n\t\t\t\t\tdis[v]=dis[u]+cst[i];\n\t\t\t\t\tlstn[v]=u;lste[v]=i;\n\t\t\t\t\tif(!used[v]){\n\t\t\t\t\t\tused[v]=1;\n\t\t\t\t\t\tq.push(v);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(dis[t]==INF) break;\n\t\tint newflow=k;\n\t\tfor(int x=t;x!=s;x=lstn[x])\n\t\t\tnewflow=min(newflow,flow[lste[x]]);\n\t\tfor(int x=t;x!=s;x=lstn[x])\n\t\t\tflow[lste[x]]-=newflow,flow[lste[x]^1]+=newflow;\n\t\tcost+=dis[t]*newflow;\n\t}\n\treturn cost;\n}\nint main(){\n\t#ifdef ytxy\n\tfreopen(\"in.txt\",\"r\",stdin);\n\t#endif\n\tios::sync_with_stdio(0);\n\tcin.tie(0),cout.tie(0);\n\tcin>>n>>m>>k;\n\tn++;\n\ts=n*2+1,t=n*2+2;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tds[i][j]=INF;\n\t\t}\n\t\tds[i][i]=0;\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y,w;\n\t\tcin>>x>>y>>w;\n\t\tds[x+1][y+1]=ds[y+1][x+1]=min(w,ds[x+1][y+1]);\n\t}\n\tfloyd();\n\tfor(int i=1;i<=n;i++){\n\t\tif(i==1) add(s,i*2-1,k,0);\n\t\telse add(s,i*2-1,1,0);\n\t\tadd(i*2,t,1,0);\n\t\tfor(int j=i+1;j<=n;j++)\n\t\t\tadd(i*2-1,j*2,1,ds[i][j]);\n\t}\n\tcout<<mcmf();\n}\n```",
        "postTime": 1664425401,
        "uid": 661044,
        "name": "_saltFish_",
        "ccfLevel": 0,
        "title": "P4542 [ZJOI2011]\u8425\u6551\u76ae\u5361\u4e18 \u9898\u89e3"
    },
    {
        "content": "\u5b89\u5229\u4e2a\u4eba blog\uff1ahttps://www.cnblogs.com/ET2006/\n\n\u5148\u9884\u5904\u7406\u51fa $dis_{u,v}$ \u8868\u793a\u4ece $u\\to v$ \u53ea\u7ecf\u8fc7\u7f16\u53f7 $\\leq\\max(u,v)$ \u7684\u70b9\uff0c\u6240\u7ecf\u8fc7\u7684\u8ddd\u79bb\u7684\u6700\u5c0f\u503c\u3002\u663e\u7136 $dis_{u,v}$ \u53ef\u7528 Floyd \u5728 $n^3$ \u7684\u590d\u6742\u5ea6\u5185\u5904\u7406\u51fa\u6765\u3002\n\n\u5047\u8bbe $k$ \u4e2a\u4eba\u6240\u6467\u6bc1\u7684\u636e\u70b9\u7684\u5e8f\u5217\u5206\u522b\u4e3a $(a_{1,1},a_{1,2},\\dots,a_{1,c_1}),(a_{2,1},a_{2,2},\\dots,a_{2,c_2}),\\dots,(a_{k,1},a_{k,2},\\dots,a_{k,c_k})$\uff08$a_{i,j}<a_{i,j+1}$\uff09\u3002\u90a3\u4e48\u9700\u8981\u82b1\u8d39\u7684\u6700\u5c0f\u65f6\u95f4\u5c31\u662f $\\sum\\limits_{i=1}^k\\sum\\limits_{j=1}^{c_i-1}dis_{a_{i,j},a_{i,j+1}}+\\sum\\limits_{i=1}^kdis_{0,a_{i,1}}$\n\n\u4e3a\u4ec0\u4e48\uff1f\u8003\u8651\u7f16\u53f7\u4e3a $1$ \u7684\u636e\u70b9\u662f\u8c01\u6467\u6bc1\u7684\uff0c\u5047\u8bbe $1$ \u53f7\u636e\u70b9\u662f\u7b2c $x_1$ \u4e2a\u4eba\u7b2c $y_1$ \u4e2a\u6467\u6bc1\u7684\u636e\u70b9\uff0c\u90a3\u4e48\u5b83\u4ece\u81ea\u5df1\u7b2c $y_1-1$ \u4e2a\u6467\u6bc1\u7684\u636e\u70b9\uff08\u9ed8\u8ba4\u6bcf\u4e2a\u4eba\u7b2c $0$ \u4e2a\u6467\u6bc1\u7684\u636e\u70b9\u5c31\u662f $0$\uff09\u5230\u8fbe $1$ \u53f7\u636e\u70b9\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u80fd\u7ecf\u8fc7\u7f16\u53f7 $>1$ \u7684\u636e\u70b9\uff0c\u6545\u6240\u82b1\u8d39\u7684\u6700\u5c0f\u65f6\u95f4\u5c31\u662f $dis_{a_{x_1,y_1-1},a_{x_1,y_1}}$\u3002$1$ \u53f7\u636e\u70b9\u6467\u6bc1\u4e86\uff0c\u63a5\u4e0b\u6765\u8003\u8651 $2$ \u53f7\u636e\u70b9\uff0c\u540c\u7406\u5047\u8bbe $2$ \u53f7\u636e\u70b9\u662f\u7b2c $x_2$ \u4e2a\u4eba\u7b2c $y_2$ \u4e2a\u6467\u6bc1\u7684\u636e\u70b9\uff0c\u90a3\u4e48\u7b2c $x_2$ \u4e2a\u4eba\u4ece\u81ea\u5df1\u7b2c $y_2-1$ \u4e2a\u6467\u6bc1\u7684\u636e\u70b9\u8d76\u8fc7\u6765\u9700\u8981\u82b1\u8d39\u7684\u65f6\u95f4\u5c31\u662f $dis_{a_{x_2,y_2-1},a_{x_2,y_2}}$\uff0c\u4ee5\u6b64\u7c7b\u63a8\u53ef\u5f97\u4e0a\u5f0f\u3002\n\n\u770b\u5230\u8fd9\u6837\u7c7b\u4f3c\u4e8e\u8def\u5f84\u8986\u76d6\u7684\u95ee\u9898\uff0c\u53ef\u60f3\u5230\u7528\u7f51\u7edc\u6d41\u89e3\u51b3\u3002\u6211\u4eec\u7528\u4e00\u6761\u6d41\u6765\u8868\u793a\u4e00\u4e2a\u4eba\u6467\u6bc1\u636e\u70b9\u7684\u8def\u5f84\u3002\u501f\u9274 P4553 80\u4eba\u73af\u6e38\u4e16\u754c \u7684\u5efa\u56fe\u65b9\u5f0f\u53ef\u5f97\uff1a\n\n- \u5c06\u6bcf\u4e2a\u70b9 $u$ \u62c6\u6210\u4e24\u4e2a\u70b9 $in_u$ \u548c $out_u$\u3002\u5bf9\u4e8e $u\\geq 1$ \u8fde\u8fb9\u4e0a\u4e0b\u754c\u5747\u4e3a $1$ \u8d39\u7528 $0$ \u7684\u8fb9\u8868\u793a\u6bcf\u4e2a\u636e\u70b9\u5fc5\u987b\u88ab\u6070\u597d\u4e00\u4e2a\u4eba\u6467\u6bc1\u3002\u5bf9\u4e8e $u=0$ \u8fde\u4e0a\u754c $k$ \u4e0b\u754c $0$ \u8d39\u7528 $0$ \u7684\u8fb9\uff0c\u8868\u793a\u6700\u591a $k$ \u4e2a\u4eba\u7ecf\u8fc7 $0$ \u53f7\u636e\u70b9\u3002\n- \u8fde\u4e00\u6761\u4ece $S$ \u5230 $in_0$\uff0c\u4e0a\u754c $k$ \u4e0b\u754c $0$ \u8d39\u7528 $0$ \u7684\u8fb9\u8868\u793a $k$ \u4e2a\u4eba\u5fc5\u987b\u4ece $0$ \u53f7\u8282\u70b9\u5f00\u59cb\u6467\u6bc1\u636e\u70b9\u3002\u5bf9\u4e8e $u=0,1,2,\\dots,n$ \u8fde\u4e00\u6761\u4ece $out_u$ \u5230 $T$\uff0c\u4e0a\u754c $k$ \u4e0b\u754c $0$ \u8d39\u7528 $0$ \u7684\u8fb9\u8868\u793a\u6bcf\u4e2a\u4eba\u53ef\u4ee5\u5728\u4efb\u610f\u8282\u70b9\u7ed3\u675f\u6467\u6bc1\u3002\n- \u5bf9\u4e8e\u6bcf\u5bf9\u6ee1\u8db3 $(i<j)$ \u7684 $(i,j)$ \u8fde\u4e00\u6761\u4ece $out_i$ \u5230 $in_j$ \u4e0a\u754c $1$ \u4e0b\u754c $0$ \u8d39\u7528 $dis_{i,j}$ \u7684\u8fb9\u8868\u793a\u4ece $i$ \u5230 $j$ \u9700\u8981\u7684\u65f6\u95f4\u4e3a $dis_{i,j}$\u3002\n\n\u7136\u540e\u8dd1\u4e0a\u4e0b\u754c\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u5373\u53ef\u3002\n\n\u4f46\u662f\u9898\u89e3\u533a\u603b\u6709\u6bd4\u6211\u66f4\u4f18\u79c0\u7684\u505a\u6cd5\u3002\u4e8b\u5b9e\u4e0a\uff0c\u672c\u9898\u4e5f\u6709\u4e0d\u7528\u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41\u7684\u505a\u6cd5\u3002\u89c2\u5bdf\u4e00\u4e0b\u4e0a\u9762\u7684\u505a\u6cd5\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u4e2a\u6240\u8c13\u7684\u201c\u6467\u6bc1\u636e\u70b9\u7684\u8def\u5f84\u201d\uff0c\u4e0d\u5c31\u662f\u4e0d\u53ef\u76f8\u4ea4\u7684\u8def\u5f84\u8986\u76d6\u5417\uff01\u8def\u5f84\u7684\u5f00\u5934\u5143\u7d20\u8fd8\u6709\u4e00\u4e2a\u4ee3\u4ef7 $dis_{0,a_{i,1}}$\u3002\u7acb\u9a6c\u60f3\u5230 P2469 [SDOI2010]\u661f\u9645\u7ade\u901f\u3002\u53ea\u4e0d\u8fc7\u6b64\u9898\u8981\u6c42\u8def\u5f84\u4e2a\u6570 $\\leq k$\u3002\u6240\u4ee5\u4f60\u5728 P2469 [SDOI2010]\u661f\u9645\u7ade\u901f \u65b0\u5efa\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9 $S'$ \u5e76\u8fde\u4e00\u6761\u4ece $S'$ \u5230 $S$ \u5bb9\u91cf\u4e3a $k$ \u8d39\u7528\u4e3a $0$ \u7684\u8fb9\uff0c\u7136\u540e\u8dd1 Minimum Cost Maximum Flow \u5c31\u884c\u4e86\u3002",
        "postTime": 1612323200,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4542 \u3010[ZJOI2011]\u8425\u6551\u76ae\u5361\u4e18\u3011"
    },
    {
        "content": "### [\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P4542)\n\n------------\n#### #\u7f51\u7edc\u6d41#\u8d39\u7528\u6d41#\n\n\u9996\u5148 , \u6211\u4eec\u53ef\u4ee5\u8f7b\u6613\u7684\u4ece\u6570\u636e\u8303\u56f4`N<<M`\u770b\u51fa\uff0c\u8fd9\u662f\u4e00\u9053\u7f51\u7edc\u6d41\n\n\u5728\u5f97\u51fa\u7b97\u6cd5\u540e\uff0c\u6211\u4eec\u5f00\u59cb\u8003\u8651\u5efa\u6a21\u3002\n\n\u6839\u636e\u9898\u76ee\u6761\u4ef6\uff1a\n1. `\u5728\u7ecf\u8fc7K-1\u53f7\u70b9\u4e4b\u524d\uff0c\u4efb\u4f55\u4eba\u662f\u4e0d\u80fd\u591f\u7ecf\u8fc7K\u53f7\u636e\u70b9\u7684\u3002`\uff0c\u540c\u65f6\u7531\u4e8e $N\\le150$ \u8fd9\u91cc\u5f88\u5bb9\u6613\u60f3\u5230\u8dd1\u4e00\u904d\u5e26\u9650\u5236\u7684Floyd\uff0c\u5373\u7531 $x\\to y$ \uff0c\u4e0d\u7ecf\u8fc7\u8282\u70b9\u7f16\u53f7\u6bd4 $y$ \u5927\u7684\u70b9\uff0c\u518d\u4ece\u6240\u6709\u7f16\u53f7\u5c0f\u7684\u70b9\u5411\u7f16\u53f7\u5927\u7684\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $1$ , \u8fb9\u6743\u4e3a $dis(i,j)$ \u7684\u8fb9.\n2. \u540c\u65f6\uff0c\u6211\u4eec\u6700\u7ec8\u8981\u5230\u8fbe $N$ \u53f7\u70b9\uff0c\u5373\u6bcf\u4e2a\u70b9\u5747\u9700\u5230\u8fbe\u81f3\u5c11\u4e00\u6b21\u3002\u6240\u4ee5\u6211\u4eec\u5c06\u9664\u4e86 $0$ \u53f7\u70b9\u4ee5\u5916\u7684\u70b9\u90fd\u5411\u6c47\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $1$ \uff0c\u8fb9\u6743\u4e3a $0$ \u7684\u8fb9\n3. `\u5c0f\u667a\u4e00\u884cK\u4eba\u4ece\u771f\u65b0\u9547\u51fa\u53d1.`\u8fd9\u4e2a\u5f88\u597d\u89e3\u51b3\uff0c\u6211\u4eec\u76f4\u63a5\u4ece\u6e90\u70b9\u5411 $0$ \u53f7\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $K$,\u8fb9\u6743\u4e3a $0$ \u7684\u8fb9\n\n\u5728\u7c97\u7565\u5efa\u6a21\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u53d1\u73b0\u4e86\u4e00\u4e2a\u95ee\u9898: \u4ece\u6e90\u70b9\u51fa\u53bb\u7684\u6d41\u91cf\u8fdc\u5c0f\u4e8e\u6211\u4eec\u9700\u8981\u7684\u6700\u5927\u6d41\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u7f51\u7edc\u6d41\u5e38\u7528\u7684\u62c6\u70b9\u601d\u8def\u89e3\u51b3\u3002\n\n**\u6211\u4eec\u5c06\u6bcf\u4e2a\u70b9\u62c6\u4e3a\u5165\u70b9\u548c\u51fa\u70b9\uff0c\u5c06\u6bcf\u4e2a\u70b9\u7684\u5165\u70b9\u5411\u6c47\u70b9\u8fde\u8fb9\uff0c\u518d\u5c06\u6e90\u70b9\u5411\u6bcf\u4e2a\u70b9\u7684\u51fa\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $1$ \u8fb9\u6743\u4e3a $0$ \u7684\u8fb9\uff0c\u5176\u4f59\u70b9\u4e4b\u95f4\u7684\u8fde\u8fb9\u5373\u4ece $x$ \u7684\u51fa\u70b9\uff0c\u5411 $y$ \u7684\u5165\u70b9\u8fde\u8fb9\u5373\u53ef**\n\n$$\n\\large\\color{grey}{\\text{Talk is cheap , show you the code}}\n$$\n```cpp\n//\u6838\u5fc3\u5efa\u6a21\u4ee3\u7801\n\tfor(register int u,v,w,i=1;i<=m;++i)\n\t{\n\t\tu=read(),v=read(),w=read();\n\t\t++u,++v;\n\t\tf[u][v]=f[v][u]=min(f[u][v],w);\n\t}\n\tfor(register int i=1;i<=n;++i)f[i][i]=0;\n\tfor(register int k=1;k<=n;++k)\n\t\tfor(register int i=1;i<=n;++i)\n\t\t\tfor(register int j=1;j<=n;++j)\n\t\t\t\tif(k<i||k<j)f[i][j]=min(f[i][j],f[i][k]+f[k][j]);\n\tfor(register int i=1;i<=n;++i)\n\t\tfor(register int j=i+1;j<=n;++j)\n\t\t\tif(f[i][j]!=inf)addedge(i,j+n,inf,f[i][j]);\n\taddedge(s,1,lim,0);\n\tfor(register int i=1;i<=n;++i)\n\t{\n\t\taddedge(i+n,t,1,0);\n\t\tif(i!=1)addedge(s,i,1,0);\n\t}\n```\n",
        "postTime": 1596159160,
        "uid": 224229,
        "name": "Caicz",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4542 \u3010[ZJOI2011]\u8425\u6551\u76ae\u5361\u4e18\u3011"
    },
    {
        "content": "\u5982\u679c\u8fd9\u9053\u9898\u6c42\u7684\u662f\u6700\u77ed\u65f6\u95f4\u7684\u8bdd\u53ef\u80fd\u5c31\u4e0d\u5927\u597d\u505a\u4e86QWQ...\u4e8e\u662f\u8fd9\u9898\u6c42\u7684\u662f\u6700\u77ed\u8def\u5f84\u548c\n\n\u9996\u5148\u8fd9\u4e48\u5c0f\u7684\u6570\u636e\u8303\u56f4\u53ef\u4ee5\u5eb7\u51fa\u6765\u662f\u7f51\u7edc\u6d41\u7684\u561b...\u90a3\u5c31\u5c3d\u91cf\u5f80\u7f51\u7edc\u6d41\u90a3\u8fb9\u9760\n\n\u9996\u5148\u8003\u8651\u5355\u72ec\u4e00\u4e2a\u4eba\u7684\u884c\u8fdb\u8def\u7ebf\uff0c\u90a3\u4e48\u8def\u7ebf\u5fc5\u7136\u6ee1\u8db3\u6bcf\u6b21\u4ece\u5f53\u524d\u70b9 x \u5230\u76ee\u6807\u70b9 y \u65f6\u7ecf\u8fc7\u7684\u70b9\u90fd\u5c0f\u4e8e y \uff0c\u90a3\u4e48\u54b1\u6bcf\u6b21\u5355\u72ec\u8003\u8651\u4e00\u4e2a\u4eba\uff0c\u7136\u540e\u505a\u4e2a\u5e26\u9650\u5236\u7684 floyd \u5c31\u597d\u8fa3\n\n\u7136\u540e\u54b1\u8003\u8651\u6bcf\u4e2a\u70b9\u90fd\u8981\u88ab\u7ecf\u8fc7\uff0c\u8fd9\u4e0d\u5c31\u662f\u6700\u5927\u6d41\u4e48...\u9664\u4e86 0 \u53f7\u70b9\uff0c\u6bcf\u4e2a\u70b9\u5411 T \u8fde\u8fb9\u5c31\u53ef\u4ee5\u6ee1\u8db3\u4e0d\u662f\u6bcf\u4e2a\u4eba\u90fd\u8981\u5230\u8fbe\u7ec8\u70b9\u4f46\u662f\u6bcf\u4e2a\u70b9\u90fd\u4f1a\u88ab\u7ecf\u8fc7\u4e00\u6b21\uff0c\u7136\u540e S \u5411 0 \u53f7\u70b9\u8fde\u6761\u5bb9\u91cf\u4e3a K \u7684\u8fb9\uff0c\u8fd9\u6837\u7684\u8bdd\u5c31\u6ee1\u8db3\u6700\u591a K \u4e2a\u4eba\u51fa\u53d1\u6551 pkq \u8fa3\uff0c\u6700\u540e\u4e24\u4e24\u70b9\u4e4b\u95f4\u8fd8\u8981\u8fde\u8fb9\uff0c\u8fb9\u6743\u4e3a floyd \u5904\u7406\u51fa\u6765\u7684\u6700\u77ed\u8def\n\n\n\u6700\u540e\u8dd1\u4e2a mincost-maxflow \u5c31\u597d\u8fa3\n\n\n\n```\n//by Judge\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#define Rg register\n#define fp(i,a,b) for(Rg int i=(a),I=(b)+1;i<I;++i)\n#define fd(i,a,b) for(Rg int i=(a),I=(b)-1;i>I;--i)\n#define go(u) for(Rg int i=head[u],v=e[i].to;i;v=e[i=e[i].nxt].to)\n#define ll long long\nusing namespace std;\nconst int inf=1e9+7,M=2003;\ntypedef int arr[M];\n#ifndef Judge\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n#endif\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline bool cmin(int& a,int b){return a>b?a=b,1:0;}\ninline int read(){ int x=0,f=1; char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0'; return x*f;\n} int n,m,K,s,t,pat=1; arr head,dis[M];\nstruct Edge{ int to,val,flow,nxt; }e[200005];\ninline void add(int u,int v,int f,int c){\n\te[++pat]=(Edge){v,c,f,head[u]},head[u]=pat;\n\te[++pat]=(Edge){u,-c,0,head[v]},head[v]=pat;\n}\ninline int mcmf(){ queue<int> q;\n\tRg int res=0; static arr dis,in,pe,pv;\n\twhile(1){\n\t\tfp(i,1,t) dis[i]=inf;\n\t\tdis[s]=0,q.push(s);\n\t\twhile(!q.empty()){\n\t\t\tRg int u=q.front(); q.pop(),in[u]=0;\n\t\t\tgo(u) if(e[i].flow&&dis[v]>dis[u]+e[i].val){\n\t\t\t\tdis[v]=dis[u]+e[i].val,pe[v]=i,pv[v]=u;\n\t\t\t\tif(!in[v]) q.push(v),in[v]=1;\n\t\t\t}\n\t\t}\n\t\tif(dis[t]==inf) return res;\n\t\tRg int d=inf;\n\t\tfor(Rg int u=t;u^s;u=pv[u])\n\t\t\tcmin(d,e[pe[u]].flow);\n\t\tres+=d*dis[t];\n\t\tfor(Rg int u=t;u^s;u=pv[u])\n\t\t\te[pe[u]].flow-=d,e[pe[u]^1].flow+=d;\n\t}\n}\nint main(){\n\tn=read()+1,m=read(),K=read(),s=n*2+1,t=n*2+2;\n\tfp(i,1,n) memset(dis[i],0x3f,(n+2)<<2),dis[i][i]=0;\n\tfp(i,1,m){\n\t\tRg int u=read()+1,v=read()+1,w=read();\n\t\tcmin(dis[u][v],w),dis[v][u]=dis[u][v];\n\t}\n\tfp(k,1,n) fp(j,1,n) fp(i,1,n) if(k<i||k<j)\n\t\tcmin(dis[i][j],dis[i][k]+dis[k][j]);\n\tfp(i,1,n){\n\t\tif(i==1) add(s,i*2-1,K,0);\n\t\telse add(s,i*2-1,1,0);\n\t\tadd(i*2,t,1,0);\n\t\tfp(j,i+1,n) add(i*2-1,j*2,1,dis[i][j]);\n\t}\n\treturn !printf(\"%d\\n\",mcmf());\n}\n```\n\n",
        "postTime": 1567516588,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4542 \u3010[ZJOI2011]\u8425\u6551\u76ae\u5361\u4e18\u3011"
    },
    {
        "content": "\u76ae\u5361\u4e18\u6210\u529f\u88ab\u62ef\u6551\u4e86\uff01\n\n\u7b97\u662f\u670d\u4e86\uff0c\u90fd\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u81ea\u5df1\u7684\u8fea\u6770\u7279\u65af\u62c9\u8dd1\u8d39\u7528\u6d41\u4f1a\u9519\uff0c\u6362\u6210MCMF\u4e00\u4e0b\u5b50\u5c31\u8fc7\u4e86\u3002\n\n\u601d\u8def\u5e94\u8be5\u662f\u7b80\u5355\u7684\u3002\u9996\u5148\u62ff\u5230\u8fd9\u5f20\u56fe\uff0c\u80af\u5b9a\u662f\u8981\u7528\u4e0a\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84\uff0c\u6240\u4ee5floyed\u5148\u8dd1\u4e00\u6ce2\u3002\uff08\u6211\u5f00\u59cbfloyed\u90fd\u6253\u9519\u4e86\uff09\u7136\u540e\u5efa\u56fe\u4e5f\u5f88\u597d\u60f3\u7684\u3002\u5148\u5bf9\u4e24\u4e2a\u70b9\u4e4b\u95f4\u5efa\u8fb9\uff0c\u5982\u679c\u6709\u8def\u5f84\u53ef\u4ee5\u5230\u8fbe\uff0c\u5219\u5efa\u4e00\u6761\u5bb9\u91cf\u4e3a1\u8d39\u7528\u4e3a\u8def\u5f84\u957f\u5ea6\u7684\u8fb9\u3002\uff08\u53ef\u884c\u6d41\uff0c\u4e0b\u754c\u4e3a1\uff09\u518d\u8ba9S\u54110\u53f7\u5e97\u5efa\u4e00\u6761\u5bb9\u91cf\u4e3aK\uff0c\u8d39\u7528\u4e3a0\u7684\u8fb9\uff0c\u6765\u8868\u793a\u6709K\u4e2a\u4eba\u3002\u6700\u540e \u5206\u522b\u8ba9S\u548cT\u4e0e\u5176\u4ed6\u70b9\u76f8\u8fde\u5c31\u884c\u4e86\u3002\n\n\u8bc1\u660e\u6b63\u786e\u6027\uff1a\n\n1\u3001\u6700\u4f18\u6027\n\n\u8fd9\u5e94\u8be5\u662f\u6700\u660e\u663e\u7684\uff0c\u663e\u7136\u82e5\u5f53\u524d\u4e3a\u6700\u4f18\u60c5\u51b5\uff0c\u7f51\u7edc\u4e2d\u4e5f\u662f\u6700\u5c0f\u8d39\u7528\u6d41\u7684\u60c5\u51b5\u3002\n\n2\u3001\u6761\u4ef6\u6027\n\n**K\u4e2a\u4eba\u662f\u53ef\u4ee5\u5206\u5934\u884c\u52a8\u7684\uff0c\u53ea\u8981\u6709\u4efb\u4f55\u4e00\u4e2a\u4eba\u5728K-1\u53f7\u636e\u70b9\u88ab\u6467\u6bc1\u4e4b\u540e\uff0c\u7ecf\u8fc7K\u53f7\u636e\u70b9\uff0cK\u53f7\u636e\u70b9\u5c31\u88ab\u6467\u6bc1\u4e86\u3002\u663e\u7136\u7684\uff0c\u53ea\u8981N\u53f7\u636e\u70b9\u88ab\u6467\u6bc1\uff0c\u76ae\u5361\u4e18\u5c31\u5f97\u6551\u4e86\u3002**\n\n\u8fd9\u4e2a\u6761\u4ef6\u4e5f\u662f\u6ee1\u8db3\u7684\u3002\u8fd9\u4e2a\u6761\u4ef6\u5728\u7f51\u7edc\u4e2d\u7684\u5448\u73b0\u5c31\u662f\u6bcf\u4e2a\u70b9\u90fd\u6709\u6d41\u91cf\u6d41\u5411\u5b83\u4eec\uff0c\u8fd9\u70b9\u5728\u4e8eS\u54110\u53f7\u5efa\u4e00\u6761\u5bb9\u91cf\u4e3aK\u7684\u8fb9\u5c31\u53ef\u4ee5\u8bc1\u660e\u3002\u56e0\u4e3a\u8981\u6ee1\u8db3\u6700\u5927\u6d41\uff0c\u6240\u4ee5\u6bcf\u4e2a\u70b9\u5fc5\u5b9a\u88ab\u6d41\u8fc7\uff0c\u6240\u4ee5\u662f\u5bf9\u7684\u3002\n\n\u6240\u4ee5\u5c31\u8fc7\u4e86\u8fd9\u9053\u9898\u3002\n\ncode\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define res register int\n#define LL long long\n#define inf 0x3f3f3f3f\ninline int read() {\n\tint s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9') {\n\t\tif(ch=='-')w=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=getchar();\n\treturn s*w;\n}\ninline void write(res x) {\n\tif(x<0)putchar('-'),x=-x;\n\tif(x>9)write(x/10);\n\tputchar(x%10+'0');\n}\nconst int N=1e6+10,NN=2*1e2+10;\nint vis[N],n,m,s,t,pre[N],last[N],flow[N],maxflow,mincost;\nint head[N],cnt,dis[N];\nstruct mdzz {\n\tint to,next,flow,dis;\n\tmdzz() {}\n\tmdzz(res to,res next,res flow,res dis):to(to),next(next),flow(flow),dis(dis) {}\n} edge[N];\nqueue<int> q;\ninline void addedge(int from,int to,int flow,int dis) {\n\tedge[++cnt]=mdzz(to,head[from],flow,dis),head[from]=cnt;\n\tedge[++cnt]=mdzz(from,head[to],0,-dis),head[to]=cnt;\n}\ninline void init() {\n\tcnt=-1;\n\tmemset(head,-1,sizeof(head));\n}\ninline int spfa(res s,res t) {\n\tmemset(dis,inf,sizeof(dis));\n\tmemset(flow,inf,sizeof(flow));\n\tmemset(vis,0,sizeof(vis));\n\tq.push(s);\n\tvis[s]=1;\n\tdis[s]=0;\n\tpre[t]=-1;\n\twhile (!q.empty()) {\n\t\tres now=q.front();\n\t\tq.pop();\n\t\tvis[now]=0;\n\t\tfor(res i=head[now]; ~i; i=edge[i].next)\n\t\t\tif (edge[i].flow>0 && dis[edge[i].to]>dis[now]+edge[i].dis) {\n\t\t\t\tdis[edge[i].to]=dis[now]+edge[i].dis;\n\t\t\t\tpre[edge[i].to]=now;\n\t\t\t\tlast[edge[i].to]=i;\n\t\t\t\tflow[edge[i].to]=min(flow[now],edge[i].flow);\n\t\t\t\tif (!vis[edge[i].to])\n\t\t\t\t\tvis[edge[i].to]=1,q.push(edge[i].to);\n\t\t\t}\n\t}\n\treturn pre[t]!=-1;\n}\ninline void MCMF() {\n\twhile (spfa(s,t)) {\n\t\tres now=t;\n\t\tmaxflow+=flow[t];\n\t\tmincost+=flow[t]*dis[t];\n\t\twhile (now!=s) {\n\t\t\tedge[last[now]].flow-=flow[t];\n\t\t\tedge[last[now]^1].flow+=flow[t];\n\t\t\tnow=pre[now];\n\t\t}\n\t}\n}\nint K,d[NN][NN];\nint main() {\n\tinit();\n\tn=read(),m=read(),K=read();\n\ts=n*2+2,t=s+1;\n\tfor(res i=0; i<=n; i++)\n\t\tfor(res j=0; j<=n; j++)if(i!=j)d[i][j]=inf;\n\tfor(res i=1; i<=m; i++) {\n\t\tres x=read(),y=read(),z=read();\n\t\td[x][y]=d[y][x]=min(d[x][y],z);\n\t}\n\tfor(res k=0; k<=n; k++)\n\t\tfor(res i=0; i<=n; i++)\n\t\t\tfor(res j=0; j<=n; j++)\n\t\t\t\tif((k<=i||k<=j)&&d[i][j]>d[i][k]+d[k][j])d[i][j]=d[i][k]+d[k][j];\n\tfor(res i=1; i<n; i++)\n\t\tfor(res j=i+1; j<=n; j++)if(d[i][j]!=inf)addedge(i,j+n+1,1,d[i][j]);\n\tfor(res i=1; i<=n; i++)addedge(s,i,1,0),addedge(i+n+1,t,1,0);\n\taddedge(s,0,K,0);\n\tMCMF();\n\twrite(mincost);\n\treturn 0;\n}\n```",
        "postTime": 1530758191,
        "uid": 32878,
        "name": "foreverlasting",
        "ccfLevel": 7,
        "title": "\u3010ZJOI2011\u3011\u8425\u6551\u76ae\u5361\u4e18"
    },
    {
        "content": "\n\n\u505a\u7684\u7b2c\u4e00\u9053\u7f51\u7edc\u6d41\u9ed1\u9898\uff0c\u89c9\u5f97\u8fd8\u662f\u633a\u56f0\u96be\u7684\u3002\u5c24\u5176\u5bf9\u4e8e\u6700\u5c0f\u8def\u5f84\u8986\u76d6\u7684\u8f6c\u5316\u6bd4\u8f83\u5999\u3002\n\n\u7ffb\u4e86\u6bd4\u8f83\u4e45\u7684\u9898\u89e3\u624d\u60f3\u51fa\u6765\uff0c\u56e0\u6b64\u4e5f\u60f3\u81ea\u5df1\u5199\u4e00\u7bc7\u9898\u89e3\uff0c\u5e0c\u671b\u80fd\u591f\u5e2e\u52a9\u5230\u73b0\u5728\u5728\u505a\u8fd9\u9053\u9898\u7684\u540c\u5b66\u4eec\u3002\n\n\u5982\u679c\u9898\u89e3\u4e2d\u6709\u9519\u8bef\u8fd8\u8bf7\u5927\u5bb6\u6d77\u6db5\uff0c\u53ef\u4ee5\u79c1\u4fe1\u6211\u63d0\u51fa\uff0c\u6211\u4f1a\u5c3d\u5feb\u4fee\u6539\u3002\n\n## \u5bf9\u9650\u5236\u7684\u5206\u6790\n\n\u53d1\u73b0\u5b9e\u9645\u4e0a\u4e0d\u9700\u8981\u8003\u8651\u8bbf\u95ee\u987a\u5e8f\uff0c\u53ea\u9700\u8981\u5206\u914d\u6bcf\u4e2a\u4eba\u7684\u8def\u5f84\u5373\u53ef\u3002\u56e0\u4e3a\u4e00\u4e2a\u4eba\u53ef\u4ee5\u5728\u524d\u4e00\u4e2a\u70b9\u4e0a\u4e00\u76f4\u7ad9\u7740\uff08\u8bbe\u5f53\u524d\u8fd8\u4e0d\u80fd\u8fc7\u53bb\u7684\u90a3\u4e2a\u70b9\u7684\u7f16\u53f7\u4e3a $i$ \uff09\uff0c\u76f4\u5230\u5176\u4ed6\u4eba\u628a $1$ \uff5e $(i-1)$ \u7684\u6240\u6709\u70b9\u90fd\u8bbf\u95ee\u5b8c\u6bd5\u4e4b\u540e\u518d\u53bb\u3002\n\n\u5f53\u7136\uff0c\u4e0d\u8003\u8651\u8bbf\u95ee\u987a\u5e8f\u7684\u524d\u63d0\u662f\uff1a\u7ed9\u8fd9\u4e2a\u4eba\u5206\u914d\u7684\u8def\u5f84\u540e\u7eed\u4e0d\u80fd\u7531\u4ed6\u6765\u6467\u6bc1 $1$ \uff5e $(i-1)$ \u4e4b\u95f4\u7684\u4efb\u4f55\u4e00\u4e2a\u70b9\u3002\u56e0\u6b64\u6bcf\u6761\u8def\u5f84\u4e0a **\u9700\u8981\u6467\u6bc1** \u7684\u70b9\u7684\u7f16\u53f7\u5fc5\u987b\u662f\u9012\u589e\u7684\uff08\u6ce8\u610f\u4e0d\u662f\u7ecf\u8fc7\u7684\u70b9\uff09\u3002\n\n\u540c\u65f6\uff0c\u5982\u679c\u4e00\u4e2a\u4eba\u8981\u4ece $i$ \u51fa\u53d1\uff0c\u76ee\u6807\u662f\u6467\u6bc1 $j$\uff08\u4e0d\u8003\u8651\u6467\u6bc1\u5176\u4ed6\u70b9\uff09\uff0c\u5219\u4ed6\u4e00\u5b9a\u8d70 $i, j$ \u4e4b\u95f4\u7684\u6700\u77ed\u8def\u3002\u8fd9\u662f\u591a\u6e90\u591a\u6c47\u6700\u77ed\u8def\uff0c\u7528 floyd \u6c42\u51fa\u6bcf\u5bf9\u70b9 $(i,j)$ \u4e4b\u95f4\u7684\u6700\u77ed\u8def $d(i, j)$ \u5373\u53ef\u3002\n\n## \u5efa\u56fe\n\n\u4e0b\u9762\u8003\u8651\u5982\u4f55\u8fde\u8fb9\uff1a\n\n\u8fd9\u9053\u9898\u6709\u70b9\u7c7b\u4f3c \u6700\u5c0f\u8def\u5f84\u8986\u76d6\uff0c\u56e0\u6b64\u8003\u8651\u5efa\u51fa\u76f8\u4f3c\u7684\u4e8c\u5206\u56fe\uff0c\u5c06\u6bcf\u4e2a\u70b9\u62c6\u70b9\u3002\u5148\u7ed9\u51fa\u8fde\u8fb9\u65b9\u5f0f\uff08\u4ee5 `(u, v, flow, cost)` \u7684\u5f62\u5f0f\u7ed9\u51fa\uff09\uff1a\n\n\u5bf9\u4e8e\u6240\u6709 $i=1 \\cdots n$\uff0c\u8fde\u63a5 $(S, i_1, 1, 0)$ \u4e0e $(i_2, T, 1, 0)$\n\n\u5bf9\u4e8e $i=0$\uff0c\u8fde\u63a5 $(S, i_1, k, 0)$\u3002\n\n\u5bf9\u4e8e\u6bcf\u5bf9 $(i,j)$\uff08\u5176\u4e2d $i<j$ \uff09\uff0c\u8fde\u63a5 $(i_1, j_2, 1, d(i,j))$\u3002\n\n\u8003\u8651\u8fd9\u6837\u505a\u7684\u6b63\u786e\u6027\uff1a\n\n\u7c7b\u4f3c\u6700\u5c0f\u8def\u5f84\u8986\u76d6\uff0c\u6b64\u65f6\u6d41\u8fc7\u4e00\u6761\u8fb9\u4ee3\u8868\u8def\u5f84\u7684\u62fc\u63a5\u3002\n\u4f8b\u5982\uff1a\u6d41\u8fc7 $S$ -> $i_1$ -> $j_2$ -> $T$ \u4ee3\u8868 \u5176\u4e2d\u67d0\u4e2a\u4eba\u7684\u6467\u6bc1\u8def\u5f84\u662f $0$ -> $i$ -> $j$\uff0c\u5373\u7ecf\u8fc7\u4e86\u4e00\u4e9b\u70b9\u5148\u5230\u8fbe\u5e76\u6467\u6bc1\u4e86 $i$\uff0c\u53c8\u4ece $i$ \u51fa\u53d1\u6467\u6bc1\u4e86 $j$\uff0c$(i,j)$ \u8def\u5f84\u4e0a\u6ca1\u6709\u672a\u6467\u6bc1\u7684\u70b9\u3002\n\n\u5728\u8fd9\u5f20\u4e8c\u5206\u56fe\u4e0a\u7684\u201c\u8def\u5f84\u201d\u5747\u6307 **\u6467\u6bc1\u70b9\u6784\u6210\u7684\u8def\u5f84**\uff0c\u5373 \u6467\u6bc1\u70b9\u4e4b\u95f4\u8def\u8fc7\u7684\u5df2\u7ecf\u88ab\u5176\u4ed6\u8def\u5f84\u6467\u6bc1\u7684\u70b9\u662f\u4e0d\u8ba1\u5165\u7684\uff0c\u56e0\u4e3a\u5df2\u7ecf\u88ab\u5305\u542b\u5728\u6240\u6c42\u51fa\u7684 $d(i, j)$ \u4e4b\u4e2d\u4e86\u3002\n\n\u7531\u4e8e\u4e00\u4e2a\u70b9\u53ea\u80fd\u88ab\u6467\u6bc1\u4e00\u6b21\uff0c\u56e0\u6b64\u8fd9\u9053\u9898\u786e\u5b9e\u5c31\u662f **\u6700\u5c0f\u6743\u8def\u5f84\u8986\u76d6\u95ee\u9898**\u3002\n\n\u8fd9\u4e5f\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48 $S$ \u8fde\u51fa\u7684\u8fb9\u9664 $0$ \u5916\u6d41\u91cf\u5747\u4e3a $1$\uff0c\u53ea\u4f1a\u6709\u4e00\u6761\u8def\u5f84 \u7ecf\u8fc7**\u5e76\u6467\u6bc1** \u5b83\u4eec\u4e4b\u540e\u518d\u5ef6\u4f38\u51fa\u53bb\uff0c\u800c $0$ \u53ef\u4ee5\u5ef6\u4f38 $k$ \u6761\u3002\n\u8fde\u5411\u6c47\u70b9\u7684\u8fb9\u5219\u4ee3\u8868 \u5df2\u7ecf\u88ab\u8986\u76d6\uff08\u5373\u88ab\u6467\u6bc1\uff09\u3002\n\u7531\u4e8e\u521a\u624d\u5df2\u7ecf\u63d0\u5230\u8fc7\u7684 **\u6467\u6bc1\u70b9\u9012\u589e**\uff0c\u8fde\u8fb9\u4e2d\u5fc5\u987b\u6709 $i<j$\u3002\n\n## Floyd \u7684\u66f4\u6539\n\n\u4f46\u662f\u7ec6\u5fc3\u7684\u540c\u5b66\u53ef\u80fd\u4f1a\u53d1\u73b0\u4e00\u4e2a\u95ee\u9898\uff1afloyd \u6c42\u51fa\u7684\u6700\u77ed\u8def\u4e0d\u4fdd\u8bc1 $i$ \u5230 $j$ \u4e0d\u7ecf\u8fc7\u7f16\u53f7 $>j$ \u7684\u70b9\uff0c$j$ \u5c31\u4e0d\u662f $i$ \u4e4b\u540e\u7b2c\u4e00\u4e2a\u6467\u6bc1\u7684\u70b9\u4e86\u3002\n\n\u56e0\u6b64\u6211\u4eec\u9700\u8981\u7ed9\u666e\u901a\u7684 floyd \u6c42\u51fa\u7684 $d(i, j)$ \u52a0\u4e0a\u4e00\u6761\u9650\u5236\uff1a\u4ece $i$ \u5230 $j$ \u4e0d\u80fd\u7ecf\u8fc7\u7f16\u53f7\u5927\u4e8e $\\max(i,j)$ \u7684\u70b9\uff0c\u8fd9\u6837\u5c31\u80fd\u591f\u4fdd\u8bc1\u6b63\u786e\u6027\u4e86\u3002\n\n\uff08\u6ce8\uff1a\u4e3a\u4ec0\u4e48\u662f $\\max(i,j)$\uff0c\u800c\u4e0d\u80fd\u76f4\u63a5\u4e0d\u8f6c\u79fb $i>j$ \u7684\u60c5\u51b5\uff1f\u56e0\u4e3a\u6709\u53ef\u80fd\u4f1a\u51fa\u73b0 $i$ -> $(i-x)$ -> $(i+x)$ \u7684\u8def\u5f84\u4e2d\u8f6c\uff09\n\n\u8fd9\u6837\u56fe\u5c31\u5efa\u597d\u4e86\uff0c\u5efa\u5b8c\u56fe\u76f4\u63a5\u8dd1\u8d39\u7528\u6d41\u5373\u53ef\u3002\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define N 154\n#define INF 1000000000000000000ll\nusing namespace std;\ntypedef long long ll;\n\nint n, m, K;\nll d[N][N];\nll S, T, nV, dis[N*2+2], mncst;\nbool vst[N*2+2], inq[N*2+2];\n\nstruct es { int t; ll w, c; int nxt; } e[(N*N+N*2)*2];\nint hd[N*2+2], cur[N*2+2], tot=1;\n\nvoid add (int u, int v, ll w, ll c)\n{\n    e[++tot]=(es){ v, w, c, hd[u] };\n    hd[u]=tot;\n    e[++tot]=(es){ u, 0, -c, hd[v] };\n    hd[v]=tot;\n}\n\nbool spfa ()\n{\n    queue <int> q;\n    fill(dis+1, dis+nV+1, INF);\n    dis[S]=0; q.push(S); inq[S]=1;\n\n    while (!q.empty()) {\n        int u=q.front(); q.pop();\n\n        inq[u]=0;\n\n        for (int i=hd[u]; i; i=e[i].nxt) {\n            int v=e[i].t;\n            if (!e[i].w || dis[v]<=dis[u]+e[i].c) { continue; }\n            dis[v]=dis[u]+e[i].c;\n            if (!inq[v]) { q.push(v); inq[v]=1; }\n        }\n    }\n    return (dis[T]!=INF);\n}\n\nll dfs (int u, ll fl)\n{\n    if (u==T || (!fl)) { return fl; }\n\n    vst[u]=1;\n\n    ll res=0;\n    for (int i=cur[u]; i && fl; i=e[i].nxt) {\n        cur[u]=i;\n        int v=e[i].t;\n        if (!e[i].w || vst[v] || dis[v]!=dis[u]+e[i].c) { continue; }\n        ll f=dfs(v, min(fl, e[i].w));\n        e[i].w-=f; e[i^1].w+=f;\n        res+=f; fl-=f;\n        mncst+=f*e[i].c;\n    }\n\n    vst[u]=0;\n\n    return res;\n}\n\nvoid Dinic ()\n{\n    while (spfa()) {\n        for (int i=1; i<=nV; i++) { cur[i]=hd[i]; }\n        dfs(S, INF);\n    }\n}\n\nint main ()\n{\n    scanf(\"%d %d %d\", &n, &m, &K);\n    n++;\n    for (int i=1; i<=n; i++) {\n        for (int j=1; j<=n; j++) { d[i][j]=INF; }\n        d[i][i]=0;\n    }\n    for (int i=1; i<=m; i++) {\n        int u, v, c; scanf(\"%d %d %d\", &u, &v, &c);\n        u++; v++; d[u][v]=d[v][u]=min(d[u][v], (ll)c);\n    }\n    \n    // \u5e26\u9650\u5236\u7684 floyd \u6c42\u6700\u77ed\u8def\n    \n    for (int k=1; k<=n; k++) {\n        for (int i=1; i<=n; i++) {\n            for (int j=1; j<=n; j++) {\n                if (k<=max(i,j)) { d[i][j]=min(d[i][j], d[i][k]+d[k][j]); }\n            }\n        }\n    }\n    \n    // \u5efa\u56fe\n\n    S=n*2+1; T=n*2+2; nV=T;\n\n    for (int i=1; i<=n; i++) {\n        for (int j=i+1; j<=n; j++) if (d[i][j]!=INF) {\n            add(i, j+n, 1, d[i][j]);\n        }\n    }\n    for (int i=2; i<=n; i++) { add(S, i, 1, 0); add(i+n, T, 1, 0); }\n    add(S, 1, K, 0);\n\n    Dinic(); // \u8d39\u7528\u6d41\n\n    printf(\"%lld\\n\", mncst);\n\n    return 0;\n}\n```",
        "postTime": 1680082302,
        "uid": 554081,
        "name": "Rikku_eq",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011P4542 [ZJOI2011]\u8425\u6551\u76ae\u5361\u4e18"
    },
    {
        "content": "[\u53ef\u80fd\u6709\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/zheyuanxie/p/p4542.html)\n\n## \u7b80\u8981\u9898\u610f\n\n\u7ed9\u4f60\u4e00\u4e2a $N+1$ \u4e2a\u9876\u70b9\uff08\u7f16\u53f7\u4e3a $0 \\sim N$\uff09\uff0c$M$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u6bcf\u4e00\u6761\u8fb9\u6709\u4e00\u4e2a\u4ee3\u4ef7 $L_i$\u3002\n\n\u6709 $K$ \u4e2a\u4eba\uff0c\u4ed6\u4eec\u521d\u59cb\u65f6\u518d $0$ \u53f7\u8282\u70b9\uff0c\u4ed6\u4eec\u53ef\u4ee5\u5206\u5f00\u884c\u52a8\uff0c\u53ea\u6709\u7ecf\u8fc7\u8fc7 $i-1$ \u53f7\u8282\u70b9\u624d\u80fd\u7ecf\u8fc7 $i$ \u53f7\u8282\u70b9\u3002\n\n\u6c42\u51fa\u5230\u8fbe $N$ \u53f7\u8282\u70b9\u7684\u6bcf\u4e2a\u4eba\u4ed8\u51fa\u4ee3\u4ef7\u7684\u548c\u6700\u5c0f\u503c\u3002\n\n\u6570\u636e\u4fdd\u8bc1\u5408\u6cd5\uff0c\u4e14\u6ee1\u8db3 $N \\leq 150, M \\leq 2 \\times 10^{4}, 1 \\leq K \\leq 10, L_i \u2264 10^{4}$\n\n## \u601d\u8def\n\n\u7531\u4e8e\u53ea\u6709\u5230\u8fbe\u8fc7\u6240\u6709\u6bd4 $i$ \u5c0f\u7684\u70b9\uff0c\u6240\u4ee5\u8fd9\u91cc\u662f\u5e26\u9650\u5236\u7684\u3002\u5bf9\u4e8e\u6c42\u5e26\u9650\u5236\u7684\u6700\u5c0f\u4ee3\u4ef7\uff0c\u6211\u4eec\u9009\u62e9\u4f7f\u7528 Floyd\uff0c\u4e0d\u8fc7\u9700\u8981\u9b54\u6539\uff0c\u8f6c\u79fb\u65f6\u52a0\u4e0a\u5224\u65ad `k<i || k<j`\u3002\n\n\u7136\u540e\uff0c\u8fd8\u662f\u4e3a\u4e86\u6ee1\u8db3\u9650\u5236\uff0c\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u65b0\u56fe\uff0c\u56fe\u4e2d\u4efb\u610f\u8fb9 $(u,v,w)$ \u6ee1\u8db3 $u \\lt v$ \u4e14 $w=f_{u,v}$\u3002\uff08$f_{u,v}$ \u8868\u793a $u \\to v$ \u7684\u6700\u5c0f\u4ee3\u4ef7\uff09\n\n\u90a3\u4e48\u5c31\u8f6c\u6362\u6210\u4e86\u6c42\u8fd9\u4e2a\u56fe\u7684 $K$ \u6761\u8def\u5f84\u7684\u6700\u5c0f\u6743\u8def\u5f84\u8986\u76d6\u3002\u7531\u4e8e\u8fd9\u4e2a\u56fe\u4e0d\u662f\u4e8c\u5206\u56fe\uff0c\u6211\u4eec\u8003\u8651\u5c06\u5176\u53d8\u6210\u4e8c\u5206\u56fe\uff08\u56e0\u4e3a\u4e8c\u5206\u56fe\u6bd4\u8f83\u597d\u6c42\uff09\u3002\u5c06\u4e00\u822c\u56fe\u8f6c\u6362\u4e3a\u4e8c\u5206\u56fe\u7684\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u4e4b\u4e00\u5c31\u662f\u62c6\u70b9\u3002\n\n\u6211\u4eec\u5c06\u65b0\u56fe\u4e2d\u7684\u70b9 $i$ \u62c6\u6210 $i_1,i_2$ \u4e24\u4e2a\u70b9\uff0c\u7136\u540e\u5efa\u7acb\u8d85\u7ea7\u6e90\u70b9 $S$ \u548c\u8d85\u7ea7\u6c47\u70b9 $T$\u3002\n\n\u94a6\u5b9a $i_1,j_1,k_1,\\cdots$ \u662f\u540c\u4e00\u4e2a\u989c\u8272\u7684\uff0c$i_2,j_2,k_2,\\cdots$ \u662f\u540c\u4e00\u4e2a\u989c\u8272\u7684\u3002\u5219\u8fde\u8fb9 $(S,i_1,1,0)$ \u548c $(i_2,T,1,0)$\u3002\n\n\u7136\u540e\u5c31\u662f\u65b0\u56fe\u7684\u8fb9\u4e86\uff0c\u4e3a\u4e86\u6ee1\u8db3\u4e8c\u5206\u56fe\u6027\u8d28\uff0c\u6211\u4eec\u9700\u8981\u518d\u4e0d\u540c\u989c\u8272\u4e2d\u8fde\u8fb9\uff0c\u8b6c\u5982\u5bf9\u4e8e\u65b0\u56fe\u4e2d\u7684\u8fb9 $(u,v,w)$\uff0c\u8fde\u8fb9 $(u_2,v_1,1,w)$\uff08\u7c7b\u4f3c\u65b9\u6cd5\u4e5f\u53ef\u4ee5\uff09\u3002\n\n\u4f46\u662f\u8fd9\u6837\u5b50\u53ea\u662f $1$ \u6761\u8def\u5f84\uff0c\u4e0d\u662f $K$ \u6761\u8def\u5f84\u3002\u6211\u4eec\u76f4\u63a5\u5c06 $S$ \u8fde\u5411 $0$ \u7684\u8fb9\u7684\u5bb9\u91cf\u6539\u4e3a $K$\uff0c\u8fd9\u6837\u5c31\u5141\u8bb8\u4e86 $K$ \u6761\u8def\u5f84\uff08\u56e0\u4e3a\u8fd9\u6761\u8fb9\u53ef\u4ee5\u589e\u5e7f $K$ \u6b21\uff09\u3002\n\n\u7136\u540e\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u3002\u5c31\u6ca1\u4e86\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^{3}+\\operatorname{mcmf}(n,n^{2}))$\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\n\nconst int N = (150+5)<<1,M = (20000+5)<<2;\n\nint f[N][N];\nint n,m,k;\nvoid add(int u,int v,int w){\n\tf[u][v]=min(f[u][v],w);\n}\n\nvoid floyd(){\n\tfor(int i=0;i<=n;i++){\n\t\tfor(int j=0;j<=n;j++){\n\t\t\tfor(int k=0;k<=n;k++){\n\t\t\t\tif(k<i || k<j){\n\t\t\t\t\tf[j][i]=f[i][j]=min(f[i][j],f[i][k]+f[k][j]); // \u6ce8\u610f\u8fd9\u91cc f[j][i] \u548c f[i][j] \u90fd\u9700\u8981\u88ab\u8d4b\u503c\u3002\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nnamespace MCMF{\n\tstruct edge{\n\t\tint nxt,to,cap,cost;\n\t} g[M];\n\tint head[N],ec=-1;\n\tvoid add(int from,int to,int cap,int cost){\n\t\tg[++ec].nxt=head[from];\n\t\tg[ec].to=to;\n\t\tg[ec].cap=cap;\n\t\tg[ec].cost=cost;\n\t\thead[from]=ec;\n\t}\n\tvoid add_edge(int from,int to,int cap,int cost){\n\t\tadd(from,to,cap,cost);\n\t\tadd(to,from,0,-cost);\n\t}\n\tqueue<int> q;\n\tbool vis[N];\n\tint flow[N];\n\tint dis[N];\n\tint pre[N];\n\tint last[N];\n\tbool spfa(int s,int t){\n\t\tmemset(dis,0x7f,sizeof(dis));\n\t\tmemset(flow,0x7f,sizeof(flow));\n\t\tmemset(vis,0,sizeof(vis));\n\t\tq.push(s);\n\t\tvis[s]=1;\n\t\tdis[s]=0;\n\t\tpre[t]=-1;\n\t\twhile(!q.empty()){\n\t\t\tint u=q.front();\n\t\t\tq.pop();\n\t\t\tvis[u]=0;\n\t\t\tfor(int i=head[u];i!=-1;i=g[i].nxt){\n\t\t\t\tint v=g[i].to;\n\t\t\t\tif(g[i].cap>0 && dis[v]>dis[u]+g[i].cost){\n\t\t\t\t\tdis[v]=dis[u]+g[i].cost;\n\t\t\t\t\tpre[v]=u;\n\t\t\t\t\tlast[v]=i;\n\t\t\t\t\tflow[v]=min(flow[u],g[i].cap);\n\t\t\t\t\tif(!vis[v]){\n\t\t\t\t\t\tvis[v]=1;\n\t\t\t\t\t\tq.push(v);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn pre[t]!=-1;\n\t}\n\n\tpair<int,int> MCMF(int s,int t){\n\t\tint maxflow=0,mincost=0;\n\t\twhile(spfa(s,t)){\n\t\t\tint now=t;\n\t\t\tmaxflow+=flow[t];\n\t\t\tmincost+=flow[t]*dis[t];\n\t\t\twhile(now!=s){\n\t\t\t\tg[last[now]].cap-=flow[t];\n\t\t\t\tg[last[now]^1].cap+=flow[t];\n\t\t\t\tnow=pre[now];\n\t\t\t}\n\t\t}\n\t\treturn make_pair(maxflow,mincost);\n\t}\n}\n\nsigned main(){\n\tmemset(f,0x3f,sizeof(f));\n\tmemset(MCMF::head,-1,sizeof(MCMF::head));\n\tMCMF::ec=-1;\n\tios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n\tcin>>n>>m>>k;\n\tfor(int i=0;i<=n;i++){\n\t\tf[i][i]=0;\n\t}\n\tfor(int i=1,a,b,l;i<=m;i++){\n\t\tcin>>a>>b>>l;\n\t\tadd(a,b,l);\n\t\tadd(b,a,l);\n\t}\n\tfloyd();\n\tint s=(n+1)<<1,t=(n+1)<<1|1;\n\tfor(int i=0;i<=n;i++){\n\t\tif(i){\n\t\t\tMCMF::add_edge(s,i<<1|1,1,0);\n\t\t\tMCMF::add_edge(i<<1,t,1,0);\n\t\t}\n\t\telse{\n\t\t\tMCMF::add_edge(s,i<<1|1,k,0);\n\t\t\tMCMF::add_edge(i<<1,t,1,0);\n\t\t}\n\t\tfor(int v=i+1;v<=n;v++){\n\t\t\tMCMF::add_edge(i<<1|1,v<<1,1,f[i][v]);\n\t\t}\n\t}\n\tint ret=MCMF::MCMF(s,t).second;\n\tcout<<ret;\n\treturn 0;\n}\n```\n\n[AC Record](https://www.luogu.com.cn/record/87873181)\n\n[BZOJ2324 [ZJOI2011]\u8425\u6551\u76ae\u5361\u4e18(In Hydro) AC Record](https://hydro.ac/d/bzoj/record/63350de35741ce02211bacdb)",
        "postTime": 1664420625,
        "uid": 413065,
        "name": "xiezheyuan",
        "ccfLevel": 5,
        "title": "P4542 [ZJOI2011]\u8425\u6551\u76ae\u5361\u4e18"
    },
    {
        "content": "\u8fd9\u662f\u6211\u4eba\u751f\u7b2c\u4e00\u7bc7\u9ed1\u9898\u9898\u89e3\uff0c\u4e5f\u662f\u6211\u4e34\u7ec8\u540e\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\uff08\u5bf9\u8fd9\u53e5\u8bdd\u6709\u7591\u95ee\u7684\u53ef\u4ee5\u770b\u4e00\u4e0b\u4e94\u6708\u4e8c\u53f7\u7684\u9676\u7247\uff09\n\n**\u6b65\u5165\u6b63\u9898**\n\n\u9996\u5148\uff0c\u770b\u5230 $N \\le 150$\uff0c\u7b2c\u4e00\u65f6\u95f4\u60f3\u5230\u7f51\u7edc\u6d41\u3002\n\n\u9996\u5148\uff0c\u5217\u51fa\u9898\u76ee\u6761\u4ef6\uff1a\n\n1. \u5171\u6709 $K$ \u4e2a\u4eba\n\n2. \u6bcf\u4e2a\u7ed3\u70b9\u5fc5\u987b\u81f3\u5c11\u88ab\u7ecf\u8fc7\u4e00\u6b21\uff0c\u4e14\u6bcf\u4e2a\u4eba\u53ef\u4ee5\u5728\u4efb\u610f\u70b9\u51fa\u53d1\u6216\u7ed3\u675f\n\n3. \u5728 $K$ \u53f7\u7ed3\u70b9\u88ab\u8d70\u8fc7\u4e4b\u524d\uff0c\u6bcf\u4e2a\u4eba\u90fd\u53ea\u80fd\u5728\u6240\u6709\u7f16\u53f7\u5c0f\u4e8e $K$ \u7684\u7ed3\u70b9\u90fd\u88ab\u7ecf\u8fc7\u540e\u624d\u80fd\u8d70\u5230\u7f16\u53f7\u4e3a $K$ \u7684\u7ed3\u70b9\n\n4. \u5728\u6ee1\u8db3\u4e0a\u8ff0\u6240\u6709\u6761\u4ef6\u7684\u524d\u63d0\u4e0b\uff0c\u8981\u6c42\u7ecf\u8fc7\u7684\u8def\u5f84\u957f\u5ea6\u4e4b\u548c\u6700\u5c0f\n\n\u5982\u679c\u5bf9\u7f51\u7edc\u6d41\u7684\u5404\u79cd\u5efa\u6a21\u719f\u6089\u7684\u8bdd\uff0c\u5bb9\u6613\u770b\u51fa\u662f\u7b80\u5316\u9898\u610f\u662f**\u7528 $K$ \u4e2a\u8def\u5f84\uff0c\u5728\u6ee1\u8db3\u7ea6\u675f\u548c\u82b1\u8d39\u6700\u5c0f\u7684\u524d\u63d0\u4e0b\uff0c\u8986\u76d6\u6240\u6709\u7684\u70b9\u3002**\n\n$K$ \u4e2a\u8def\u5f84\u5f88\u597d\u5904\u7406\uff0c\u5efa\u7acb\u8d85\u7ea7\u6e90 $s$\uff0c\u4ece $s$ \u5230 $0$ \u53f7\u7ed3\u70b9\u8fde\u4e00\u6761\u8d39\u7528\u4e3a $0$\uff0c\u5bb9\u91cf\u4e3a $K$ \u7684\u7ed3\u70b9\uff0c\u5bf9\u8fd9\u79cd\u5efa\u6a21\u6709\u7591\u95ee\u7684\u53ef\u4ee5\u770b\u4e00\u4e0b\u8fd9\u9053\u9898 [Dijkstra, Dijkstra.](https://www.luogu.com.cn/problem/UVA10806)\n\n\u7b2c\u4e8c\u4e2a\u6761\u4ef6\uff0c\u8003\u8651\u62c6\u70b9\uff0c\u5c06\u7ed3\u70b9 $u$ \u62c6\u4e3a\u5165\u70b9 $u'$ \u548c\u51fa\u70b9 $u''$\uff0c\u53ef\u4ee5\u60f3\u5230\u4ece $s$ \u5411\u6bcf\u4e2a\u5165\u70b9 $u'$ \u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\uff1b\u4ece\u6bcf\u4e2a\u51fa\u70b9 $u''$ \u5411 $t$ \u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002\n\n**\u7b2c\u4e09\u4e2a\u6761\u4ef6\u662f\u6700\u96be\u5904\u7406\u7684\uff0c\u4e5f\u662f\u8fd9\u9053\u9898\u7684\u538b\u8f74\u90e8\u5206\u3002**\n\n\u6211\u4eec\u53d1\u73b0\u4e0d\u5f15\u5165\u5176\u4ed6\u7b97\u6cd5\u662f\u5f88\u96be\u6a21\u62df\u9898\u76ee\u4e2d\u6240\u7ed9\u6761\u4ef6\u4e86\u3002\n\n\u8003\u8651\u5c06\u7b2c\u4e09\u4e2a\u6761\u4ef6\u8fd9\u6837\u63cf\u8ff0\uff1a**\u5f53\u524d\u7ed3\u70b9 $u$ \u8d70\u5230\u53e6\u5916\u4e00\u4e2a\u7ed3\u70b9 $v$\uff0c\u53ea\u80fd\u7ecf\u8fc7\u4ece $u$ \u5230 $v$ \u4e14\u8def\u5f84\u4e0a\u6240\u6709\u7ed3\u70b9\u7684\u7f16\u53f7\u90fd\u4e0d\u5927\u4e8e $\\max(u,\\,v)$ \u7684\u6700\u77ed\u8def\u5f84**\n\n\u8003\u8651\u5230\u56fe\u4e2d\u6709\u8d1f\u6743\u8fb9\uff0c\u4e14\u8fb9\u7684\u6570\u91cf\u5f88\u5927\uff0c\u4f46\u7ed3\u70b9\u6570\u76ee\u5f88\u5c0f\uff0c\u6240\u4ee5**\u6211\u4eec\u4f7f\u7528 Floyd \u9884\u5904\u7406\u6700\u77ed\u8def\u5f84\u3002**\n\n\u9884\u5904\u7406\u6700\u77ed\u8def\u5f84\u4e4b\u540e\uff0c\u5c31\u597d\u529e\u4e86\u3002\u8bbe $\\operatorname{dis}_{i,\\,j}$ \u4e3a\u4ece $i$ \u5230 $j$ \u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\uff0c\u6bcf\u4e2a\u7ed3\u70b9 $u$ ,\u90fd\u5411\u7f16\u53f7\u6bd4 $u$ \u5927\u7684\u975e\u6e90\u6c47\u7ed3\u70b9 $v$ \u8fde\u8fb9\u3002\u7528 DAG \u7684\u6700\u5c0f\u8def\u5f84\u8986\u76d6\u7684\u8fde\u8fb9\u65b9\u5f0f\uff0c\u4ece $u''$ \u5411 $v'$ \u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a $+\\infty$\uff0c\u8d39\u7528\u4e3a $\\operatorname{dis}_{u,\\,v}$\u3002\n\n\u7b2c\u56db\u4e2a\u6761\u4ef6\uff0c\u76f4\u63a5\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\uff0c\u8d39\u7528\u5373\u4e3a\u6700\u7ec8\u7b54\u6848\u3002\n\nACcode\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define inf 1000000000000000\n#define V 100100\n#define E 500100\ntypedef long long int ll;\nstruct edge {\n\tint to, next;\n\tll capa, cost;\n};\nint cnt = 0, head[V], n, m; edge node[E];\ninline void add(int fir, int nxt, ll w, ll c) {\n\tnode[cnt].to = nxt,\n\t\tnode[cnt].capa = w,\n\t\tnode[cnt].cost = c,\n\t\tnode[cnt].next = head[fir],\n\t\thead[fir] = cnt++;\n}\nint s, t, cur[V]; deque<int>que; ll dep[V], sum = 0, cost = 0;\nbool vis[V];\ninline bool spfa() {\n\tfor (register int i = 0; i <= t; ++i)dep[i] = inf;\n\tdep[s] = 0; que.push_back(s); int u, v;\n\twhile (!que.empty()) {\n\t\tv = que.front(); que.pop_front();\n\t\tfor (register int i = head[v]; i != -1; i = node[i].next) {\n\t\t\tu = node[i].to;\n\t\t\tif (dep[v] + node[i].cost < dep[u] && node[i].capa) {\n\t\t\t\tdep[u] = dep[v] + node[i].cost;\n\t\t\t\tif (!que.empty() && dep[u] < dep[que.front()])que.push_front(u);\n\t\t\t\telse que.push_back(u);\n\t\t\t}\n\t\t}\n\t}\n\treturn (dep[t] != inf);\n}\nll dfs(register int v, register ll flow) {\n\tif (v == t || flow == 0)return flow; ll used = 0, wei = 0;\n\tvis[v] = true;\n\tfor (register int i = cur[v]; i != -1; i = node[i].next) {\n\t\tcur[v] = i;\n\t\tif (!vis[node[i].to] && dep[node[i].to] == dep[v] + node[i].cost && node[i].capa) {\n\t\t\twei = dfs(node[i].to, min(flow - used, node[i].capa));\n\t\t\tif (wei) {\n\t\t\t\tnode[i].capa -= wei,\n\t\t\t\t\tnode[i ^ 1].capa += wei,\n\t\t\t\t\tused += wei,\n\t\t\t\t\tcost += node[i].cost * wei;\n\t\t\t}\n\t\t}\n\t\tif (used == flow)break;\n\t}\n\tvis[v] = false;\n\treturn used;\n}\ninline void Dinic() {\n\twhile (spfa()) {\n\t\tmemcpy(cur, head, (t + 1) * sizeof(int));\n\t\tsum += dfs(s, inf);\n\t}\n}\nll d, dis[205][205];\ninline void addE(int u, int v, ll w, ll c) {\n\tadd(u, v, w, c);\n\tadd(v, u, 0, -c);\n}\nvoid init() {\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= n; j++)\n\t\t\tif(i != j)dis[i][j] = inf;\n}\nint main() {\n\tios::sync_with_stdio(0);\n\tcin.tie(); cout.tie();\n\tmemset(head, -1, V * sizeof(int));\n\tcin >> n >> m >> d; ++n;\n\tint u, v; ll w; s = 2 * n + 1, t = 2 * n + 2;\n\taddE(s, 1, d, 0);init();\n\tfor (int i = 1; i <= m; i++) {\n\t\tcin >> u >> v >> w; ++u, ++v;\n\t\tdis[u][v] = dis[v][u]  = min(dis[u][v], w);\n\t}\n\tfor (int k = 1; k <= n; k++)\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tfor (int j = 1; j <= n; j++)\n\t\t\t\tif (k <= max(i, j))dis[i][j] = min(dis[i][j], dis[i][k] + dis[k][j]);\n\tfor (int i = 1; i <= n; i++) {\n\t\tif(i !=\t1)addE(s, i, 1, 0);\n\t\taddE(i + n, t, 1, 0);\n\t\tfor (int j = i + 1; j <= n; j++) {\n\t\t\tif (dis[i][j] != inf)addE(i, j + n, inf, dis[i][j]);\n\t\t}\n\t}\n\tDinic();\n\tcout << cost;\n\treturn 0;\n}\n\n```\n",
        "postTime": 1651542731,
        "uid": 551861,
        "name": "wql_cai",
        "ccfLevel": 4,
        "title": "P4542\u9898\u89e3"
    },
    {
        "content": "\u6240\u4ee5\u8bf4\u6211\u8fd9\u53ea Pikachu \u88ab\u706b\u7bad\u961f\u62a2\u8d70\u4e86\u7136\u540e\u81ea\u5df1\u7528\u6e23\u6e23\u7684 OI \u6280\u672f\u5411\u5c0f\u667a\u901a\u8fc7\u5fc3\u7075\u611f\u5e94\u544a\u8bc9\u4e86\u5982\u4f55\u89e3\u6551\u81ea\u5df1\uff1f  \n~~\u76ae\u5361\u4e18\u6ca1\u6709\u5fc3\u7075\u611f\u5e94\u7684\u6280\u80fd\u5427~~  \n\u95f2\u8bdd\u5c11\u8bf4\uff0c\u5207\u5165\u6b63\u9898\u2014\u2014  \n\n---\n\u9996\u5148\u6211\u4eec\u6765\u62bd\u8c61\u4e00\u4e0b\u9898\u9762\u3002  \n> \u6709\u4e00\u4e2a $n$ \u70b9 $m$ \u8fb9\u7684\u56fe\uff0c\u7528 $k$ \u6761\u8def\u5f84\u8986\u76d6\u6240\u6709\u70b9\uff0c\u4f7f\u5f97\u8fb9\u6743\u6700\u5c0f\u3002\u89c4\u5b9a\u6bcf\u4e00\u6761\u8def\u5f84\u8282\u70b9\u7f16\u53f7\u5355\u8c03\u9012\u589e\uff0c$n \\le 150, m \\le 200000, k\\le10$ \n\n\u770b\u5230 $n \\le 150$\uff0c\u5bb9\u6613\u60f3\u5230\u7f51\u7edc\u6d41\u62c6\u70b9\u7136\u540e\u8d39\u7528\u6d41\u3002  \n\u73b0\u5728\u95ee\u9898\u6765\u4e86\u2014\u2014\u5982\u4f55\u5efa\u56fe\u5462\uff1f  \n\n---\n\u9996\u5148\u5bb9\u6613\u60f3\u5230\u7528 floyd \u6765\u6c42\u591a\u6e90\u6700\u77ed\u8def\u5f84\u4f5c\u4e3a\u8fde\u8fb9\u7684\u8d39\u7528\u3002  \n\u7136\u540e\u53ef\u4ee5\u8001\u5957\u8def\u62c6\u70b9\u3002  \n\u628a\u70b9 $x$ \u62c6\u6210 $x, x'(x + n)$ \u4e24\u4e2a\u70b9\u3002   \n\u5bf9\u4e8e\u8fb9 $(x, y')$ \u5e76\u4e14 $dis_{x, y}\\not= INF$\uff0c\u8fde\u4e00\u6761\u8d39\u7528\u4e3a $dis_{x, y}$\uff0c\u5bb9\u91cf\u4e3a $INF$ \u7684\u8fb9\uff0c\u4ee3\u8868\u8fd9\u6761\u8fb9\u53ef\u4ee5\u91cd\u590d\u8d70\uff0c\u6bcf\u8d70\u4e00\u6b21\u90fd\u8981\u82b1\u8d39 $dis_{x, y}$ \u7684\u4ee3\u4ef7\u3002  \n\u5269\u4e0b\u7684\u6bd4\u5982\u8bf4 $(s, x)$ \u554a\uff0c$(x', y)$ \u7b49\u7b49\u8fb9\uff0c\u5b83\u4eec\u7684\u8d39\u7528\u662f $0$\uff0c\u5bb9\u91cf\u662f $1$\uff0c\u663e\u7136\u7684\u7f51\u7edc\u6d41\u8001\u5957\u8def\u3002  \n\u4f46\u662f\u8bf7\u6ce8\u610f\u7279\u5224\u4e00\u4e2a $(s, 1)$\uff0c\u8fd9\u6761\u8fb9\u7684\u8d39\u7528\u4e3a $0$\uff0c\u5bb9\u91cf\u4e3a $k$\uff0c\u8868\u793a $k$ \u4e2a\u4eba\u6765\u627e pikachu \u4e86\u3002  \n\n---\n\u4ee3\u7801\uff1a  \n```cpp\n#include <cstdio> \n#include <queue>\n#include <cstring>\n#define N 200\n#define M 200000\n#define QWQ cout << \"QWQ\" << endl;\nconst int INF = 1000000000;\nusing namespace std;\nint n, m, dis[N + 10][N + 10], s, t, k;\nint min(int x, int y) {return ((x < y) ? (x) : (y));}\nint max(int x, int y) {return ((x > y) ? (x) : (y));}\nvoid ready() {//floyd \u9884\u5904\u7406\n\tfor(int p = 1; p <= 200; p++)\n\t\tfor(int i = 1; i <= 200; i++)\n\t\t\tif(p != i) dis[p][i] = INF;\n}\nvoid init() {//\u8f93\u5165\n\tready();\n\tscanf(\"%d%d%d\", &n, &m, &k), n++, s = n * 2 + 1, t = n * 2 + 2;\n\tfor(int p = 1, x, y, z; p <= m; p++) {\n\t\tscanf(\"%d%d%d\", &x, &y, &z), x++, y++;\n\t\tdis[x][y] = dis[y][x] = min(dis[x][y], z);//\u90bb\u63a5\u77e9\u9635\u8981\u5224\u91cd\u8fb9\n\t}\n}\nvoid floyd() {\n\tfor(int p = 1; p <= n; p++)\n\t\tfor(int i = 1; i <= n; i++)\n\t\t\tfor(int j = 1; j <= n; j++)\n\t\t\t\tif(p < i || p < j)\n\t\t\t\t\tdis[i][j] = min(dis[i][j], dis[i][p] + dis[p][j]);\n}\nstruct node {\n\tint to, val, ro, next;\n} gra[M * 2 + 10];\nint head[M * 2 + 10], tot = 1;\nvoid link(int x, int y, int z, int R) {\n\tgra[++tot].to = y, gra[tot].val = z, gra[tot].ro = R, gra[tot].next = head[x], head[x] = tot;\n\tgra[++tot].to = x, gra[tot].val = -z, gra[tot].ro = 0, gra[tot].next = head[y], head[y] = tot;\n}\nvoid connect() {//\u5efa\u56fe\uff0c\u91cd\u4e2d\u4e4b\u91cd\n\tlink(s, 1, 0, k);\n\tfor(int p = 1; p <= n; p++) {\n\t\tif(p != 1) link(s, p, 0, 1);\n\t\tlink(p + n, t, 0, 1);\n\t}\n\tfor(int p = 1; p <= n; p++)\n\t\tfor(int i = p + 1; i <= n; i++)\n\t\t\tif(dis[p][i] != INF)\n\t\t\t\tlink(p, i + n, dis[p][i], INF);\n}\nint d[N + 10], pre[N + 10], over[N + 10];\nbool vis[N + 10];\nint maxn = 0, minn = 0;\nvoid mcmf() {//\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\n\twhile(1) {\n\t\tqueue <int> que;\n\t    que.push(s);\n\t    memset(d, 0x7f, sizeof(d));\n\t    memset(vis, 0, sizeof(vis));\n\t    int INF = d[0];\n\t    vis[s] = 1, d[s] = 0, over[s] = 0x7f7f7f7f;\n\t    while(!que.empty()) {\n\t        int fr = que.front(); que.pop();\n\t        vis[fr] = 0;\n\t        for(int p = head[fr]; p; p = gra[p].next) {\n\t            int v = gra[p].to, w = gra[p].val;\n\t            if(gra[p].ro && d[v] > d[fr] + w) {\n\t                d[v] = d[fr] + w;\n\t                pre[v] = p, over[v] = min(over[fr], gra[p].ro);\n\t                if(!vis[v]) {\n\t                    vis[v] = 1;\n\t                    que.push(v);\n\t                }\n\t            }\n\t        }\n\t    }\n\t    if(d[t] == INF) break;\n\t\tint now = t;\n\t    while(now != s) {\n\t        int pr = pre[now];\n\t        gra[pr].ro -= over[t];\n\t        gra[pr ^ 1].ro += over[t];\n\t        now = gra[pr ^ 1].to;\n\t    }\n\t    maxn += over[t];\n\t    minn += over[t] * d[t];\n\t}\n}\nsigned main() {\n\tinit(), floyd(), connect();\n\tmcmf();\n    printf(\"%d\", minn);\n}\n```",
        "postTime": 1623495276,
        "uid": 298549,
        "name": "SIXIANG32",
        "ccfLevel": 5,
        "title": "\u9898\u89e3\u3010[ZJOI2011]\u8425\u6551\u76ae\u5361\u4e18\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u662f\u5b8c\u5b8c\u5168\u5168\u4f4e\u4eba\u4e00\u7b49\u7684\u5783\u573e\u505a\u6cd5\u3002\n\n------\n\n\u9996\u5148\u5148\u8bf4\u4e00\u4e0b\u81ea\u5df1\u7684\u601d\u8def\uff1a\u56e0\u4e3a\u51fb\u8d25\u4f4d\u7f6e $i$ \u7684\u4eba\u53ea\u80fd\u7ecf\u8fc7\u524d $i$ \u4e2a\u70b9\uff0c\u56e0\u6b64\u5c31\u6709\u8fd9\u6837\u4e00\u79cd\u601d\u8def\uff1a\u5efa\u7acb $n$ \u5c42\u7684\u56fe\uff0c\u7b2c $i$ \u5c42\u8282\u70b9\u6570\u662f $i$\uff0c\u5373\u524d $i$ \u4e2a\u70b9\u3002\u7528 $(i,j)$ \u8868\u793a\u7b2c $i$ \u5c42\u7684\u7b2c $j$ \u4e2a\u70b9\u3002\u5219\uff0c\u6211\u4eec\u8fde\u8fb9 $\\Big((i,j),(i+1,j),\\infty,0\\Big)$\uff0c\u7528\u6765\u8868\u793a\u90a3\u4e9b\u4e0d\u51fb\u8d25\u4f4d\u7f6e $i$ \u7684\u4eba\uff1b\u800c\u5bf9\u4e8e\u8fde\u63a5 $(i,i)$ \u4e0e $(i+1,i)$ \u7684\u8fb9\uff0c\u6211\u4eec\u7528\u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41\u9650\u5236\u8fd9\u6761\u8fb9\u5fc5\u987b\u6d41\u7ecf\u3002\u7136\u540e\uff0c\u5728\u6bcf\u5c42\u91cc\u9762\uff0c\u6211\u4eec\u4ec5\u8fde\u539f\u56fe\u4e2d\u4e24\u7aef\u70b9\u5747 $\\leq i$ \u7684\u8fb9\u3002\u6b64\u65b9\u6cd5\u6b63\u786e\u6027\u663e\u7136\uff0c\u4f46\u662f\u7c97\u7565\u4f30\u8ba1\u4e00\u4e0b\uff0c\u6bcf\u5c42\u90fd\u8981\u8fde $m$ \u6761\u8fb9\uff0c\u4e00\u5171 $n$ \u5c42\uff0c\u70b9\u6570 $n^2$\uff0c\u8fb9\u6570 $nm=n^3$\uff0c\u600e\u4e48\u60f3\u90fd\u4e0d\u53ef\u80fd\u8fc7\u7f62\u3002\n\n\u4f46\u662f\u53d1\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e2a\u4eba\u90fd\u7559\u5230\u5b83\u51fb\u8d25\u67d0\u5c42\u7684\u4f4d\u7f6e\u7684\u65f6\u5019\u518d\u8d70\u3002\u5177\u4f53\u800c\u8a00\uff0c\u5728\u7b2c $i$ \u5c42\uff0c\u6211\u4eec\u4e0d\u8fde\u63a5\u5168\u90e8 $m$ \u6761\u8fb9\uff0c\u800c\u662f\u5bf9\u4e8e $j<i$\uff0c\u8fde\u63a5 $\\Big((i,j),(i,i),\\infty,dis_{i,j}\\Big)$\uff0c\u8868\u793a\u4ec5\u8003\u8651 $\\leq i$ \u7684\u8fb9\u7684\u6700\u77ed\u8def\uff0c\u6216\u8005\u8bf4\u4ee5 $i$ \u4e3a\u6839\u7684\u6700\u77ed\u8def\u5f84\u6811\u3002\u663e\u7136\uff0c\u6b64\u65b9\u6cd5\u70b9\u6570 $n^2$\uff0c\u8fb9\u6570 $n^2$\uff0c\u786c\u4e0a\uff0c\u8fc7\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,p,s,t,tot,DIS[210][210],num[210][210];\nnamespace MCMF{\n\tconst int N=12000;\n\tconst int M=7000000;\n\tint head[N],cnt,deg[N],id[N],S,T,dis[N],cost;\n\tstruct edge{int to,next,val,cost;}edge[M];\n\tvoid ae(int u,int v,int w,int c){\n//\t\tprintf(\"%d %d (%d,%d)\\n\",u,v,w,c);\n\t\tedge[cnt].cost=c,edge[cnt].next=head[u],edge[cnt].to=v,edge[cnt].val=w,head[u]=cnt++;\n\t\tedge[cnt].cost=-c,edge[cnt].next=head[v],edge[cnt].to=u,edge[cnt].val=0,head[v]=cnt++;\n\t}\n\tvoid ae(int u,int v){deg[u]--,deg[v]++;}\n\tqueue<int>q;\n\tbool in[N];\n\tbool SPFA(){\n\t\tq.push(S),memset(dis,0x3f,sizeof(dis)),dis[S]=0,in[S]=true;\n\t\twhile(!q.empty()){\n\t\t\tint x=q.front();q.pop(),in[x]=false;\n\t\t\tfor(int i=head[x],y;i!=-1;i=edge[i].next)if(edge[i].val&&dis[y=edge[i].to]>dis[x]+edge[i].cost){\n\t\t\t\tdis[y]=dis[x]+edge[i].cost,id[y]=i;\n\t\t\t\tif(!in[y])in[y]=true,q.push(y);\n\t\t\t}\n\t\t}\n\t\tif(dis[T]==0x3f3f3f3f)return false;\n\t\tint mn=0x3f3f3f3f;\n\t\tfor(int x=T;x!=S;x=edge[id[x]^1].to)mn=min(mn,edge[id[x]].val);\n\t\tcost+=mn*dis[T];\n\t\tfor(int x=T;x!=S;x=edge[id[x]^1].to)edge[id[x]].val-=mn,edge[id[x]^1].val+=mn;\n\t\treturn true;\n\t}\n}\nusing namespace MCMF;\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&p),memset(DIS,0x3f,sizeof(DIS)),memset(head,-1,sizeof(head));\n\tfor(int i=0;i<=n;i++)DIS[i][i]=0;\n\tfor(int i=1,x,y,z;i<=m;i++)scanf(\"%d%d%d\",&x,&y,&z),DIS[x][y]=DIS[y][x]=min(DIS[x][y],z);\n\tfor(int i=0;i<=n;i++)for(int j=0;j<=i;j++)num[i][j]=++tot;\n\ts=++tot,t=++tot,S=++tot,T=++tot;\n\tae(s,num[0][0],p,0);\n\tfor(int k=0;k<=n;k++){\n\t\tfor(int i=0;i<=n;i++)for(int j=0;j<=n;j++)DIS[i][j]=min(DIS[i][j],DIS[i][k]+DIS[k][j]);\n\t\tfor(int i=0;i<=k;i++)ae(num[k][i],num[k][k],0x3f3f3f3f,DIS[i][k]),ae(num[k][i],t,0x3f3f3f3f,0);\n\t\tif(k<n){\n\t\t\tfor(int i=0;i<=k;i++)ae(num[k][i],num[k+1][i],0x3f3f3f3f,0);\n\t\t\tae(num[k][k],num[k+1][k]);\n\t\t}\n\t}\n\tae(num[n][n],t);\n\tae(t,s,0x3f3f3f3f,0);\n\tfor(int i=1;i<=t;i++){\n\t\tif(deg[i]>0)ae(S,i,deg[i],0);\n\t\tif(deg[i]<0)ae(i,T,-deg[i],0);\n\t}\n\twhile(SPFA());\n\tprintf(\"%d\\n\",cost);\n\treturn 0;\n}\n```\n\n\u7136\u540e\u662f\u6b63\u89e3\u3002\u6b63\u89e3\u53ea\u9700\u8981\u89c2\u5bdf\u5230\u53ef\u4ee5\u628a\u95ee\u9898\u8f6c\u6362\u6210 $k$ \u4e2a\u4eba\uff0c\u6bcf\u4e2a\u4eba\u51fb\u8d25\u7684\u4f4d\u7f6e\u9012\u589e\uff0c\u4e14\u4e24\u4e24\u4eba\u7684\u4f4d\u7f6e\u96c6\u5408\u65e0\u4ea4\u5373\u53ef\u3002\u4e8e\u662f\u95ee\u9898\u8f6c\u6362\u4e3aDAG\u4e0a\u8def\u5f84\u8986\u76d6\u95ee\u9898\uff0c\u968f\u4fbf\u62c6\u70b9\u5c31\u5b8c\u4e8b\u4e86\u3002~~\u4ee3\u7801\u5495\u4e86~~",
        "postTime": 1617623954,
        "uid": 123369,
        "name": "xtx1092515503",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4542 \u3010[ZJOI2011]\u8425\u6551\u76ae\u5361\u4e18\u3011"
    },
    {
        "content": "\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u3002\n\n---\n\n#### \u5efa\u6a21\n\n\u5148\u8003\u8651\u4e00\u4e2a\u4eba\u5982\u4f55\u4ece $u$ \u8d70\u5230 $v$\uff0c\u5e76\u4e14 $v$ \u8fd8\u6ca1\u6709\u88ab\u6467\u6bc1\u3002\n\n\u8981\u60f3\u6467\u6bc1 $v$ \u53f7\u636e\u70b9\uff0c\u5fc5\u987b\u5148\u6467\u6bc1 $1$ \u5230 $v-1$ \u53f7\u636e\u70b9\uff0c\u6240\u4ee5\u8bf4\u4ece $u$ \u8d70\u5230 $v$ \u53ea\u80fd\u7ecf\u8fc7**\u7f16\u53f7\u5c0f\u4e8e\u7b49\u4e8e** $v$  \u7684\u636e\u70b9\u3002\u56e0\u4e3a\u8981\u6c42\u8def\u5f84\u957f\u5ea6\u6700\u5c0f\uff0c\u6240\u4ee5\u4e00\u5b9a\u8d70\u7684\u662f\u6ee1\u8db3\u7ea6\u675f\uff08\u53ea\u7ecf\u8fc7\u7f16\u53f7 $\\leq v$ \u7684\u636e\u70b9\uff09\u7684\u8def\u5f84\u4e2d\u7684**\u6700\u77ed\u8def**\uff0c\u5148\u628a\u8fd9\u4e2a\u4fe1\u606f\u9884\u5904\u7406\u51fa\u6765\uff1a\n\n\u8bbe $d_{i,j}$ \u8868\u793a\u4ece $i$ \u5230 $j$\uff0c\u53ea\u7ecf\u8fc7\u7f16\u53f7 $\\leq j$ \u7684\u636e\u70b9\u7684\u6700\u77ed\u8def\u957f\u5ea6\u3002\u7531\u4e8e $N \\leq 150$ \uff0c\u4f7f\u7528~~\u9b54\u6539~~Floyd\u9884\u5904\u7406\uff1a\n\n```cpp\ninline void Floyd()\n{\n\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=1;j<=n;++j)\n\t\t\tfor(int l=1;l<=n;++l) if(i<max(j,l))\n\t\t\t\td[j][l]=min(d[j][l],d[j][i]+d[i][l]);\n}\n```\n\n\uff08\u4e3a\u4e86\u65b9\u4fbf\uff0c\u56fe\u4e2d\u6240\u6709\u636e\u70b9\u7684\u7f16\u53f7\u5728\u4ee3\u7801\u4e2d\u5747 $+1$\uff09\n\n\u73b0\u5728\u52a0\u5165\u5176\u4ed6\u7684\u4eba\uff0c\u628a\u8fd9\u4e2a\u9898\u770b\u4f5c\u4e00\u4e2a\u52a8\u6001\u7684\u8fc7\u7a0b\u3002\u4e00\u4e2a\u4eba\u53ef\u4ee5\u8d70\u4e00\u6bb5\u540e\u505c\u7559\u5728\u4e00\u4e2a\u636e\u70b9\uff0c\u7b49\u5f85\u5176\u4ed6\u4eba\u6467\u6bc1\u4e00\u4e9b\u636e\u70b9\u540e\u518d\u7ee7\u7eed\u8d70\uff0c\u6211\u4eec\u628a\u8d70\u4e00\u6bb5\u8fd9\u4e2a\u8fc7\u7a0b\u770b\u4f5c\u4e00\u6b21\u884c\u52a8\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e00\u4e2a\u636e\u70b9\u65e2\u53ef\u4ee5\u4e3a\u4e00\u6b21\u884c\u52a8\u7684\u51fa\u53d1\u70b9\uff0c\u53c8\u53ef\u4ee5\u770b\u4f5c\u4e00\u6b21\u884c\u52a8\u7684\u7ed3\u675f\u70b9\uff0c\u5373\u4e00\u4e2a\u636e\u70b9\u6709\u4e24\u79cd\u4fe1\u606f\u3002\u4e8e\u662f\u4f7f\u7528\u7f51\u7edc\u7624\u4e2d\u5e38\u7528\u7684**\u62c6\u70b9\u6cd5**\uff0c\u5c06\u4e00\u4e2a\u636e\u70b9\u62c6\u6210\u4e24\u4e2a\u70b9\uff0c\u5206\u522b\u5904\u7406**\u51fa\u53d1**\u548c**\u7ed3\u675f**\u4e24\u4e2a\u4fe1\u606f\uff0c\u8bbe\u70b9 $i$ \u62c6\u51fa\u7684\u4e24\u4e2a\u70b9\u5206\u522b\u4e3a $i$ \u548c $i'$\u3002\n\n\u5c06\u4e0a\u8ff0\u7684\u4e00\u6b21\u884c\u52a8\u4f5c\u4e3a\u4e00\u6761\u8fb9\u653e\u5165\u7f51\u7edc\u4e2d\u3002\u82e5 $i$ \u53ef\u4ee5\u7ecf\u8fc7\u7f16\u53f7\u5c0f\u4e8e\u7b49\u4e8e $j$ \u7684\u636e\u70b9\u5230\u8fbe $j$\uff0c\u5219\u8fde\u8fb9 $i \\to j'$\uff0c\u6d41\u91cf\u4e3a $\\infty$\uff0c\u8d39\u7528\u5373\u4e3a\u521a\u624d\u9884\u5904\u7406\u51fa\u7684 $d_{i,j}$\u3002\n\n\u8fde\u8fb9 $s \\to 1$\uff0c\u5bb9\u91cf\u4e3a $K$\uff0c\u8868\u793a\u4ece $1$ \u51fa\u53d1\u7684\u6709 $K$ \u4eba\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u5176\u4ed6\u7684\u636e\u70b9 $i$\uff0c\u8fde\u8fb9 $s \\to i$\uff0c\u5bb9\u91cf\u4e3a $1$\uff0c\u8868\u793a\u4ece $i$ \u51fa\u53d1\u3002\u8fde\u8fb9 $i' \\to t$\uff0c\u5bb9\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $0$\uff0c\u8868\u793a\u636e\u70b9 $i$ \u662f\u5426\u88ab\u6467\u6bc1\uff0c\u5373\u662f\u5426\u5230\u8fbe\u3002\n\n\u53ef\u89c1\u82e5\u6709\u6d41\u7ecf\u8fc7 $s \\to i \\to j' \\to t$\uff0c\u5219\u8fdb\u884c\u4e86\u884c\u52a8 $i \\to j$\u3002\n\n\u5f53\u4e14\u4ec5\u5f53\u6240\u6709\u6d41\u5165 $t$ \u7684\u8fb9\u90fd\u6ee1\u8f7d\uff0c\u5373\u6240\u6709\u636e\u70b9\u90fd\u88ab\u6467\u6bc1\uff0c\u6b64\u65f6\u5f97\u5230\u6700\u5927\u6d41\uff0c\u6c42\u51fa\u5f97\u5230\u6700\u5927\u6d41\u65f6\u7684\u6700\u5c0f\u8d39\u7528\u5373\u53ef\u3002\n\n---\n\n$\\text{Code}:$\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <queue>\n#define maxn 10005\n#define maxm 100005\n#define R register\n#define INF 0x3f3f3f3f\nusing namespace std;\ntypedef long long lxl;\n\ninline int read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9') {if(ch=='-') f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') {x=(x<<1)+(x<<3)+ch-'0';ch=getchar();}\n\treturn x*f;\n}\n\nstruct edge\n{\n\tint v,cp,w,next;\n}e[maxm<<1];\n\nint head[maxn],k;\n\ninline void add(int u,int v,int cp,int w)\n{\n\te[k]=(edge){v,cp,w,head[u]};\n\thead[u]=k++;\n\te[k]=(edge){u,0,-w,head[v]};\n\thead[v]=k++;\n}\n\nint n,m,d[200][200],mincost;\n\ninline void Floyd()\n{\n\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=1;j<=n;++j)\n\t\t\tfor(int l=1;l<=n;++l) if(i<max(j,l))\n\t\t\t\td[j][l]=min(d[j][l],d[j][i]+d[i][l]);\n}\n\nint dis[maxn],nxt[maxn];\nbool vis[maxn];\n\ninline bool SPFA(int s,int t)\n{\n\tqueue<int> q;\n\tmemset(dis,-1,sizeof(int)*(n<<2));\n\tdis[s]=0;\n\tvis[s]=true;\n\tq.push(s);\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();q.pop();\n\t\tnxt[u]=head[u];\n\t\tvis[u]=false;\n\t\tfor(int i=head[u];~i;i=e[i].next)\n\t\t{\n\t\t\tint v=e[i].v;\n\t\t\tif(e[i].cp&&(!~dis[v]||dis[v]>dis[u]+e[i].w))\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+e[i].w;\n\t\t\t\tif(!vis[v]) q.push(v),vis[v]=true;\n\t\t\t}\n\t\t}\n\t}\n\treturn ~dis[t];\n}\n\ninline int Dinic(int u,int t,int flow)\n{\n\tif(u==t||!flow) return flow;\n\tint rest=flow,i;\n\tvis[u]=true;\n\tfor(i=nxt[u];~i;i=e[i].next)\n\t{\n\t\tint v=e[i].v;\n\t\tif(!e[i].cp||dis[v]!=dis[u]+e[i].w||vis[v]) continue;\n\t\tint k=Dinic(v,t,min(rest,e[i].cp));\n\t\tif(!k) continue;\n\t\tmincost+=e[i].w*k;\n\t\te[i].cp-=k;\n\t\te[i^1].cp+=k;\n\t\trest-=k;\n\t\tif(!rest) break;\n\t}\n\tvis[u]=false;\n\tnxt[u]=i;\n\treturn flow-rest;\n}\n\nint main()\n{\n\t// freopen(\"P4542.in\",\"r\",stdin);\n\tn=read()+1,m=read();\n\tint K=read();\n\tmemset(d,0x3f,sizeof(d));\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint u=read()+1,v=read()+1;\n\t\td[u][v]=d[v][u]=min(d[u][v],read());\n\t}\n\tfor(int i=1;i<=n;++i) d[i][i]=0;\n\tFloyd();\n\tint s=0,t=1;\n\tmemset(head,-1,sizeof(head));\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tif(i!=n) add(s,i<<1,i==1?K:1,0);\n\t\tif(i!=1) add(i<<1|1,t,1,0);\n\t\tfor(int j=i+1;j<=n;++j)\n\t\t\tif(d[i][j]!=INF) add(i<<1,j<<1|1,INF,d[i][j]);\n\t}\n\t// for(int i=0;i<k;i+=2)\n\t// \tprintf(\"%d -> %d %d %d\\n\",e[i^1].v,e[i].v,e[i].cp,e[i].w);\n\tint maxflow=0;\n\twhile(SPFA(s,t))\n\t\tmaxflow+=Dinic(s,t,1<<30);\n\tprintf(\"%d\\n\", mincost);\n\treturn 0;\n}\n\n```",
        "postTime": 1596167563,
        "uid": 224236,
        "name": "GoPoux4",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4542 \u3010[ZJOI2011]\u8425\u6551\u76ae\u5361\u4e18\u3011"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.org/problemnew/show/P4542)\n\n\u7528\u6700\u591a\u7ecf\u8fc7$k$\u6761\u7ecf\u8fc7$0$\u7684\u8def\u5f84\u8986\u76d6\u6240\u6709\u70b9\u3002\n\n\u5b9a\u4e49$ds[i][j]$\u8868\u793a\u4ece$i$\u5230$j$\u4e0d\u7ecf\u8fc7\u5927\u4e8e$max(i,j)$\u7684\u70b9\u7684\u6700\u77ed\u8def\uff0c\u663e\u7136\u53ef\u4ee5\u7528\u5f17\u6d1b\u4f0a\u5fb7\u6c42\u3002\n\n\u7136\u540e\u6bcf\u4e2a\u70b9\u62c6\u6210\u5165\u51fa\u70b9\uff0c\u8fde\u8fb9\n\n\u6e90\u70b9\u5411$0$\u7684\u5165\u70b9\u8fde\u6d41\u91cfk\u8d39\u75280\u7684\u8fb9\uff0c\u8868\u793a\u6700\u591a\u7ecf\u8fc7$0$K\u6b21\n\n\u6e90\u70b9\u5411\u5176\u4f59\u6bcf\u4e2a\u70b9\u7684\u5165\u70b9\u8fde\u6d41\u91cf1\u8d39\u75280\u7684\u8fb9\n\n\u6bcf\u4e2a$i$\u7684\u5165\u70b9\u5411$j(j>i)$\u8fde\u6d41\u91cf1\u8d39\u7528$ds[i][j]$\u7684\u8fb9\n\n\u6bcf\u4e2a\u70b9\u51fa\u70b9\u5411\u6c47\u70b9\u8fde\u6d41\u91cf1\u8d39\u75280\u7684\u8fb9\n\n\u6700\u5c0f\u8d39\u7528\u5373\u4e3a\u6240\u6c42\u3002\n```cpp\n#include <cstdio>\n#include <queue>\n#include <cstring>\n#define INF 2147483647\nusing namespace std;\nconst int MAXN = 350;\nconst int MAXM = 40010;\nstruct Edge{\n\tint from, next, to, rest, cost;\n}e[MAXM];\nint head[MAXN], num = 1, n, m, k;\ninline void Add(int from, int to, int flow, int cost){\n\te[++num] = (Edge){from, head[from], to, flow, cost}; head[from] = num;\n\te[++num] = (Edge){to, head[to], from, 0, -cost}; head[to] = num;\n}\nint s, t, a, b, c, d[MAXM], now, maxflow, mincost;\nqueue <int> q;\nint v[MAXN], dis[MAXN], pre[MAXN], flow[MAXN], ds[MAXN][MAXN];\nint re(){\n\tq.push(s);\n\tmemset(dis, 127, sizeof dis);\n\tmemset(flow, 0, sizeof flow);\n\tdis[s] = 0; pre[t] = 0; flow[s] = INF;\n\twhile(q.size()){\n\t\tnow = q.front(); q.pop(); v[now] = 0;\n\t\tfor(int i = head[now]; i; i = e[i].next)\n\t\t   if(e[i].rest && dis[e[i].to] > dis[now] + e[i].cost){\n\t\t     dis[e[i].to] = dis[now] + e[i].cost;\n\t\t     pre[e[i].to] = i; flow[e[i].to] = min(flow[now], e[i].rest);\n\t\t     if(!v[e[i].to]) v[e[i].to] = 1, q.push(e[i].to);\n\t\t   }\n\t}\n\treturn pre[t];\n}\nint main(){\n\tscanf(\"%d%d%d\", &n, &m, &k); s = 345; t = 346;\n\tmemset(ds, 63, sizeof ds);\n\tfor(int i = 1; i <= m; ++i){\n\t   scanf(\"%d%d%d\", &a, &b, &c);\n\t   ds[a][b] = ds[b][a] = min(ds[a][b], c);\n    }\n    for(int k = 0; k <= n; ++k)\n       for(int i = 0; i <= n; ++i)\n          for(int j = 0; j <= n; ++j)\n             if(k < max(i, j) && ds[i][j] > ds[i][k] + ds[k][j])\n               ds[i][j] = ds[i][k] + ds[k][j];\n    for(int i = 0; i <= n; ++i){\n    \tAdd(s, i, !i ? k : 1, 0);\n    \tAdd(i + n + 1, t, 1, 0);\n    \tfor(int j = i + 1; j <= n; ++j)\n    \t   Add(i, j + n + 1, 1, ds[i][j]);\n    }\n    while(re()){\n    \tnow = pre[t];\n    \twhile(now){\n    \t\te[now].rest -= flow[t];\n    \t\te[now ^ 1].rest += flow[t];\n    \t\tmincost += e[now].cost * flow[t];\n    \t\tnow = pre[e[now].from];\n    \t}\n    }\n    printf(\"%d\\n\", mincost);\n\treturn 0;\n}\n```",
        "postTime": 1552704217,
        "uid": 61834,
        "name": "Huami360",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4542 \u3010[ZJOI2011]\u8425\u6551\u76ae\u5361\u4e18\u3011"
    }
]