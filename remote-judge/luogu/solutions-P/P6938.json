[
    {
        "content": "# \u4e00\u3001\u9898\u76ee\uff1a\n\n[\u6d1b\u8c37\u539f\u9898](https://www.luogu.com.cn/problem/P6938)\n\n[codeforces\u539f\u9898](https://codeforces.com/gym/101471)\n\n# \u4e8c\u3001\u601d\u8def\uff1a\n\n\u8fd9\u9053\u9898\u6574\u6574\u8ba9\u6211\u8c03\u4e86\u4e00\u4e2a\u4e0b\u5348\uff01\u4e00\u76f4\u88ab\u7cbe\u5ea6\u5361\uff0c\u540e\u6765\u628a\u6240\u6709\u7684\u7cbe\u5ea6\u5168\u90e8\u53d6\u6d88\u5c31 A \u4e86\uff01\n\n\u73b0\u5728\u8ba9\u6211\u4eec\u6765\u7cfb\u7edf\u68b3\u7406\u4e00\u4e0b\u8fd9\u9053\u9898\u7684\u601d\u8def\u3002\n\n\u9996\u5148\u53ef\u4ee5\u770b\u51fa\uff0c\u9898\u76ee\u4e2d\u7684\u53c2\u6570 $v$ \u7eaf\u7cb9\u662f\u8ff7\u60d1\u4eba\u7684\u3002\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u5c06 $v\\times f$ \u770b\u6210\u4e00\u4e2a\u65b0\u6d41\u3002\u6700\u7ec8\u6c42\u51fa\u6765\u7b54\u6848\u518d\u9664\u4ee5 $v^a$ \u5373\u53ef\u3002\n\n\u6211\u4eec\u8bd5\u60f3\u8fd9\u6837\u4e00\u79cd\u60c5\u51b5\uff1a\u65b0\u5efa\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9 $\\mathfrak{s}$\uff0c\u4ece $\\mathfrak{s}$ \u5206\u522b\u5411 1\u30012 \u53f7\u70b9\u8fde\u5bb9\u91cf\u662f\u65e0\u7a77\u5927\u7684\u8fb9\uff0c\u8bbe\u4ece $\\mathfrak{s}$ \u5411 3 \u53f7\u70b9\u8dd1\u6700\u5927\u6d41\u5f97\u5230\u7684\u7b54\u6848\u662f $Z$\u3002\u90a3\u4e48\u4e00\u5b9a\u6709 $F+W=Z$\u3002\n\n\u6700\u7ec8\u7684\u7b54\u6848\u8bbe\u6210\u4e00\u4e2a\u51fd\u6570 $f(F)=F^a(Z-F)^{1-a}$\uff0c\u5bf9\u8be5\u51fd\u6570\u6c42\u5bfc\uff0c\u5f97\n$$\n\\begin{aligned}\nf'(F)&=aF^{a-1}(Z-F)^{1-a}-F^a(1-a)(Z-F)^{-a}\\\\\n&=F^a(Z-F)^{-a}\\left(\\dfrac{a(Z-F)}{F}-1+a\\right)\\\\\n&=F^a(Z-F)^{-a}\\dfrac{aZ-F}{F}\n\\end{aligned}\n$$\n\u5219\u5f53 $F<aZ$ \u65f6\uff0c$f'(F)>0$\uff1b\u5f53 $F>aZ$ \u65f6\uff0c$f'(F)<0$\u3002\u6240\u4ee5\u5f53 $F=aZ$ \u65f6\uff0c$f(F)$ \u6709\u6781\u5927\u503c\u3002\n\n\u4f46\u662f\u63a5\u4e0b\u6765\u6709\u4e24\u4e2a\u95ee\u9898\u4e9f\u5f85\u6211\u4eec\u53bb\u89e3\u51b3\u3002\n\n\u7b2c\u4e00\u4e2a\u95ee\u9898\u662f\u6211\u4eec\u53ef\u80fd\u65e0\u6cd5\u8ba9 $F$ \u8fbe\u5230 $aZ$\u3002\u8bbe\u4ece 1 \u53f7\u70b9\u5411 3 \u53f7\u70b9\u8dd1\u6700\u5927\u6d41\u7684\u7b54\u6848\u662f $F_{\\max}$\uff0c\u4ece 2 \u53f7\u70b9\u5411 3 \u53f7\u70b9\u8dd1\u6700\u5927\u6d41\u7684\u7b54\u6848\u662f $W_{\\max}$\u3002\u90a3\u4e48\uff0c$F$ \u7684\u8303\u56f4\uff08\u6216\u8005\u53ef\u4ee5\u7406\u89e3\u4e3a\u5b9a\u4e49\u57df\uff09\u4e3a $[Z-W_{\\max},F_{\\max}]$\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5728 $F$ \u7684\u5b9a\u4e49\u57df\u627e\u89c1\u8ddd\u79bb $aZ$ \u6700\u8fd1\u7684\u503c\u5373\u53ef\u3002\u8bbe\u8be5\u503c\u4e3a $F^*$\uff0c$W^*=Z-F^*$\u3002\n\n\u7b2c\u4e8c\u4e2a\u95ee\u9898\u662f\uff0c\u6709\u53ef\u80fd $F^*$ \u6240\u5bf9\u5e94\u7684\u6d41\u548c $W^*$ \u6240\u5bf9\u5e94\u7684\u6d41\u53e0\u52a0\u5728\u4e00\u8d77\u65f6\uff0c\u4f1a\u9020\u6210\u540c\u4e00\u6839\u6c34\u7ba1\u4f1a\u6709\u4e0d\u540c\u65b9\u5411\u7684\u4e24\u6761\u6d41\u3002\u4f46\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u51fa\u4e00\u79cd\u6ee1\u8db3\u9898\u610f\u7684\u6d41\u3002\n\n1. \u4ece $\\mathfrak{s}$ \u5411 1 \u53f7\u70b9\u8fde\u5bb9\u91cf\u4e3a $F^*$ \u7684\u8fb9\uff0c\u5411 2 \u53f7\u70b9\u8fde\u5bb9\u91cf\u662f $W^*$ \u7684\u8fb9\u3002\u518d\u4ece $\\mathfrak{s}$ \u5411 3 \u53f7\u70b9\u8dd1\u6700\u5927\u6d41\u3002\n2. \u65b0\u5efa\u4e00\u5f20\u56fe $G$\uff0c\u65b0\u56fe\u8fb9\u7684\u65b9\u5411\u4e3a\u65e7\u56fe\u4e2d\u6700\u5927\u6d41\u7684\u6d41\u5411\uff0c\u5bb9\u91cf\u4e3a\u65e7\u56fe\u4e2d\u6700\u5927\u6d41\u7684\u6d41\u91cf\u3002\n3. \u4ece\u65b0\u56fe\u7684\u8d85\u7ea7\u6e90\u70b9 $\\mathfrak{s}$ \u5411 1 \u53f7\u70b9\u8fde\u5bb9\u91cf\u4e3a $F^*$ \u7684\u8fb9\uff0c\u518d\u4ece $\\mathfrak{s}$ \u5411 3 \u53f7\u70b9\u8dd1\u6700\u5927\u6d41\u3002\u6b64\u65f6\u6bcf\u6761\u8fb9\u7684\u6d41\u91cf\u5c31\u662f Flubber \u7684\u6700\u7ec8\u7b54\u6848\uff0c\u6bcf\u6761\u8fb9\u7684\u5bb9\u91cf\u51cf\u6d41\u91cf\u5c31\u662f water \u7684\u6700\u7ec8\u7b54\u6848\u3002\n\n\u663e\u7136\uff0c\u7531\u4e8e\u65b0\u56fe\u7684\u6bcf\u6761\u8fb9\u7684\u6d41\u91cf\u5b88\u6052\uff0c**\u5bb9\u91cf\u4e5f\u5b88\u6052**\uff0c\u6240\u4ee5 water \u7684\u6d41\u91cf\u4e5f\u662f\u5b88\u6052\u7684\u3002\u800c\u4e14 Flubber \u7684\u6d41\u91cf\u4e00\u5b9a\u662f $F^*$\uff0cwater \u7684\u6d41\u91cf\u4e00\u5b9a\u662f $W^*$\u3002\n\n# \u4e09\u3001\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream> // \u4e0d\u8981\u8bbe\u4efb\u4f55\u7684eps\uff01\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n\nusing namespace std;\n#define FILEIN(s) freopen(s, \"r\", stdin)\n#define FILEOUT(s) freopen(s, \"w\", stdout)\n#define mem(s, v) memset(s, v, sizeof s)\n\ninline int read(void) {\n    int x = 0, f = 1; char ch = getchar();\n    while (ch < '0' || ch > '9') { if (ch == '-') f = -1; ch = getchar(); }\n    while (ch >= '0' && ch <= '9') { x = x * 10 + ch - '0'; ch = getchar(); }\n    return f * x;\n}\n\nconst int MAXN = 205, MAXM = MAXN * MAXN;\nconst double INF = 1e9;\n\nint n, m, head[MAXN], tot = 1, S, T;\nint q[MAXN], cur[MAXN], d[MAXN];\nint dir[MAXM];\ndouble Fmax, Wmax, Z, F$, W$, ans, v, a;\n\nstruct Edge {\n    int y, next;\n    double w;\n    Edge() {}\n    Edge(int _y, int _next, double _w) : y(_y), next(_next), w(_w) {}\n}e[MAXM];\n\ninline void add(int x, int y, double w) {\n    e[++ tot] = Edge(y, head[x], w);\n    head[x] = tot;\n}\n\ninline void connect(int x, int y, double w) {\n    add(x, y, w); add(y, x, w);\n}\n\nbool bfs(void) {\n    int hh = 0, tt = -1;\n    q[++ tt] = S; cur[S] = head[S];\n    mem(d, -1); d[S] = 0;\n    while (hh <= tt) {\n        int x = q[hh ++];\n        for (int i = head[x]; i; i = e[i].next) {\n            int y = e[i].y;\n            if (e[i].w > 0 && d[y] == -1) {\n                d[y] = d[x] + 1;\n                cur[y] = head[y];\n                if (y == T) return true;\n                q[++ tt] = y;\n            }\n        }\n    }\n    return false;\n}\n\ndouble find(int x, double limit) {\n    if (x == T) return limit;\n    double flow = 0;\n    for (int i = cur[x]; i && flow < limit; i = e[i].next) {\n        cur[x] = i;\n        int y = e[i].y;\n        if (e[i].w > 0 && d[y] == d[x] + 1) {\n            double t = find(y, min(e[i].w, limit - flow));\n            if (t == 0) d[y] = -1;\n            e[i].w -= t; e[i ^ 1].w += t; flow += t;\n        }\n    }\n    return flow;\n}\n\ndouble dinic(void) {\n    double r = 0, flow;\n    while (bfs()) {\n        if ((flow = find(S, INF)) > 0) r += flow;\n    }\n    return r;\n}\n\ninline void restore(void) {\n    for (int i = 2; i <= tot; i += 2) {\n        double mid = (e[i].w + e[i ^ 1].w) / 2.0;\n        e[i].w = e[i ^ 1].w = mid;\n    }\n}\n\nint main() {\n    n = read(); m = read(); scanf(\"%lf%lf\", &v, &a);\n    for (int i = 1; i <= m; ++ i) {\n        int x = read(), y = read();\n        double w; scanf(\"%lf\", &w);\n        connect(x, y, w);\n    }\n    S = 1; T = 3;\n    Fmax = dinic(); restore();\n\n    S = 2;\n    Wmax = dinic(); restore();\n\n    S = n + 1; connect(S, 1, INF); connect(S, 2, INF);\n    Z = dinic(); restore();\n\n    if (Z - Wmax > a * Z) F$ = Z - Wmax;\n    else if (Fmax < a * Z) F$ = Fmax;\n    else F$ = a * Z;\n    W$ = Z - F$;\n\n    ans = pow(F$, a) * pow(W$, 1 - a);\n    ans /= pow(v, a);\n\n    for (int i = head[n + 1]; i; i = e[i].next) {\n        int y = e[i].y;\n        if (y == 1) e[i].w = F$, e[i ^ 1].w = 0;\n        else e[i].w = W$, e[i ^ 1].w = 0;\n    }\n    dinic();\n\n    for (int i = 2; i <= tot; i += 2) {\n        double mid = (e[i].w + e[i ^ 1].w) / 2;\n        if (e[i ^ 1].w > mid) { dir[i] = 1; e[i].w = e[i ^ 1].w - mid; e[i ^ 1].w = 0; }\n        else { dir[i] = -1; e[i ^ 1].w = e[i].w - mid; e[i].w = 0; }\n    }\n    for (int i = head[n + 1]; i; i = e[i].next) {\n        int y = e[i].y;\n        if (y == 1) { e[i].w = F$; e[i ^ 1].w = 0; }\n        else e[i].w = e[i ^ 1].w = 0;\n    }\n\n    S = n + 1;\n    dinic();\n    tot -= 4;\n    for (int i = 2; i <= tot; i += 2) {\n        if (dir[i] == 1)\n            printf(\"%.8lf %.8lf\\n\", e[i ^ 1].w / v, e[i].w);\n        else\n            printf(\"-%.8lf -%.8lf\\n\", e[i].w / v, e[i ^ 1].w);\n\n    }\n    printf(\"%.8lf\\n\", ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1625451828,
        "uid": 43513,
        "name": "\u5cb8\u82b7\u6c40\u5170",
        "ccfLevel": 8,
        "title": "\u6d1b\u8c37 P6938 [ICPC2017 WF]Son of Pipe Stream \u9898\u89e3"
    },
    {
        "content": "\u7cbe\u901a\u4eba\u6027\u7684\u8c1c\u8bed\u4eba\u7537\u8bb2\u5e08\u53ea\u8bb2\u4e86\u4e00\u4e0b\u6c42\u6700\u5927\u6d41\u7684\u6b63\u786e\u6027\u8fd8\u6709\u4ec0\u4e48\u4e71\u4e03\u516b\u7cdf\u7684\u4e1c\u897f\u5c31\u8bb2\u5b8c\u4e86\uff0c\u53cd\u6b63\u5c31\u662f\u8bb2\u4e0d\u5b8c\u4e00\u9053\u9898\u4e86\u5c5e\u4e8e\u662f\uff0c\u6bd5\u7adf\u9898\u76ee\u5f88\u7b80\u5355\u662f\u5427\uff0c\u6d41\u6c57\u3002           \n\n\u6211\u4eec\u9996\u5148\u53bb\u6389 $v$ \u7cfb\u6570\uff0c\u4e22\u8fdb\u8868\u8fbe\u5f0f\u4e2d\u5316\u4e00\u4e0b\u7b80\u5c31\u53ef\u4ee5\u53d1\u73b0\u662f\u5e38\u6570\uff0c\u6240\u4ee5\u76f4\u63a5\u8bbe\u4e3a $1$ \u6700\u540e\u7b97\u7b54\u6848\u65f6\u9664\u6389\u5c31\u597d\u4e86\u3002\n\n\u8fd9\u6837\u5c31\u5177\u6709\u4e00\u4e2a\u7f51\u7edc\u6d41\u6a21\u578b\u7684\u96cf\u5f62\u4e86\u3002\n\n\u9996\u5148\u6700\u5927\u6d41\u7684\u6b63\u786e\u6027\u5176\u5b9e\u8fd8\u662f\u633a\u5173\u952e\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u53cd\u8bc1\u6cd5\u540e\u5206\u7c7b\u8ba8\u8bba\u8bc1\u660e\uff1a\u663e\u7136\u60f3\u8ba9\u539f\u5f0f\u8868\u8fbe\u5f0f\u7684\u503c\u8d8a\u5927\u90a3\u4e48\u80af\u5b9a\u4e24\u4e2a\u6b63\u6570\u8d8a\u5927\u8d8a\u597d\u662f\u5427\uff0c\u90a3\u4e48\u4e0d\u662f\u6700\u5927\u6d41\u5c31\u662f\u8bf4\u6b8b\u7559\u7f51\u7edc\u4e0a\u8fd8\u5b58\u5728\u81f3\u5c11\u4e00\u6761\u589e\u5e7f\u8def\u3002         \n\n\u5bf9\u4efb\u610f\u4e00\u6761\u589e\u5e7f\u8def\u8fdb\u884c\u8ba8\u8bba\uff1a           \n\n- \u6ca1\u6709\u53cd\u5411\u8fb9\u7684\u589e\u5e7f\u8def\uff0c\u6b64\u65f6\u76f4\u63a5\u6d41\u8fc7\u53bb\u663e\u7136\u4f1a\u8ba9\u539f\u8868\u8fbe\u5f0f\u503c\u66f4\u5927\uff1b\n\n- \u6709\u53cd\u5411\u8fb9\u7684\u589e\u5e7f\u8def\u4f46\u5168\u662f\u6c34\u7684\u53cd\u5411\u8fb9\uff0c\u8fd9\u4e2a\u663e\u7136\u4e5f\u76f4\u63a5\u6d41\uff1b\n\n- \u6709\u53cd\u5411\u8fb9\u5e76\u4e14\u8be5\u589e\u5e7f\u8def\u4e0a\u6709 Flubber \u7684\u53cd\u5411\u8fb9\uff0c\u8fd9\u65f6\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u5982\u679c\u8981\u7ee7\u7eed\u5f80\u4e0b\u589e\u5e7f\u5f97\u5230\u7684\u8def\u5f84\u53ef\u80fd\u4f1a\u6709 Flubber \u548c\u6c34\u5bf9\u51b2\u7684\u60c5\u51b5\uff0c\u4f46\u662f\u4e8b\u5b9e\u4e0a\u5728\u6254\u6389\u7cfb\u6570 $v$ \u4e4b\u540e\u8fd9\u4e24\u8005\u7684\u8def\u5f84\u662f\u53ef\u4ee5\u4e92\u6362\u7684\uff0c\u8fdb\u800c\u8fd9\u6761\u589e\u5e7f\u8def\u53ef\u4ee5\u5b9e\u73b0\uff0c\u4e2a\u4eba\u5370\u8c61\u4e2d\u7f51\u7edc\u6d41\u7684\u57fa\u7840\u8bc1\u660e\u91cc\u9762\u662f\u6709\u8fd0\u7528\u8fd9\u4e2a\u5957\u8def\u7684\u3002               \n\n\u90a3\u4e48\u53ea\u8981\u6b8b\u7559\u7f51\u7edc\u4e0a\u5b58\u5728\u4e00\u6761\u589e\u5e7f\u8def\u539f\u5f0f\u7684\u503c\u5c31\u4e0d\u53ef\u80fd\u662f\u6700\u5927\u7684\u3002         \n\n\u901a\u8fc7\u5efa\u7acb\u8d85\u7ea7\u6e90\u70b9 $S$\uff0c\u5bf9 $1$ \u548c $2$ \u8fde\u5bb9\u91cf\u65e0\u7a77\u7684\u8fb9\uff0c\u5bb9\u6613\u6c42\u5f97\u539f\u56fe\u6700\u5927\u6d41 $Z$\u3002\n\n\u63a5\u7740\u6211\u4eec\u8003\u8651\u627e\u5230\u4e86\u6700\u5927\u6d41 $Z$ \u540e\u53ef\u4ee5\u600e\u6837\u6c42\u89e3\u539f\u95ee\u9898\u3002           \n\n\u7531\u4e8e $F + W = Z$\u3002\u5bf9\u4e8e\u539f\u5f0f\uff0c~~\u624b\u52a8\u4e09\u5206~~\u53d1\u73b0\u5f53 $F = aZ$ \u65f6\u539f\u5f0f\u53ef\u4ee5\u53d6\u5f97\u6700\u5927\u503c\uff0c\u800c\u4e14\u51fd\u6570\u5e94\u8be5\u957f\u6210\u4e00\u4e2a\u5355\u5cf0\u7684\u6837\u5b50\u3002                \n\n\u6211\u4eec\u4e0d\u59a8\u5bf9\u4e8e\u5168\u56fe\u627e\u5230\u5149\u662f Flubber \u8dd1\u6216\u6c34\u8dd1\u53ef\u4ee5\u5f97\u5230\u7684\u6700\u5927\u6d41\uff0c\u8bb0\u5176\u4e3a $Fmax,Wmax$\uff0c\u90a3\u4e48\u663e\u7136 $F \\in [Wmax - Fmax,Fmax]$ \u5e76\u4e14\u7531\u4e8e\u6d41\u7684\u503c\u662f\u5b9e\u6570\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u533a\u95f4\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u6570 $F$ \u90fd\u80fd\u53d6\u5230\uff0c\u4e4b\u540e\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\u8be5\u533a\u95f4\u5728\u5355\u5cf0\u51fd\u6570\u4e0a\u7684\u4f4d\u7f6e\u60c5\u51b5\u540e\u53ef\u4ee5\u5f97\u5230\u5b9e\u9645\u7684 $F'$ \u7684\u53d6\u503c\uff0c~~\u7ecf\u5178\u9ad8\u4e00\u6570\u5b66\u9898~~\u3002                   \n\n\u518d\u4e4b\u540e\u4e3a\u4e86\u6784\u9020\u51fa\u6765\u4e00\u7ec4\u4e0d\u5bf9\u51b2\u7684\u65b9\u6848\uff0c\u6211\u4eec\u91cd\u65b0\u5bf9\u7f51\u7edc\u6d41\u5efa\u6a21\u6765\u6784\u9020\u65b9\u6848\uff1a       \n- \u91cd\u65b0\u5efa\u539f\u56fe\uff0c\u7136\u540e\u628a $(S,1)$ \u7684\u5bb9\u91cf\u6539\u4e3a\u5355\u5411\u7684 $F'$\uff0c\u628a $(S,2)$ \u7684\u5bb9\u91cf\u6539\u4e3a\u5355\u5411\u7684 $W'$\uff1b\n\n- \u8dd1\u4e00\u904d\u6700\u5927\u6d41\uff0c\u6807\u8bb0\u6b8b\u7559\u7f51\u7edc\u4e0a\u6bcf\u6761\u8fb9\u5728\u4e00\u7ec4\u6700\u5927\u6d41\u4e0a\u7684\u65b9\u5411\uff0c\u539f\u56fe\u4e2d\u6bcf\u6761\u8fb9\u7684\u5bb9\u91cf\u91cd\u65b0\u8bbe\u5b9a\u4e3a\u5728\u8dd1\u5b8c\u6700\u5927\u6d41\u65f6\u8be5\u8fb9\u7684\u6d41\u91cf\uff0c\u8fd9\u4e48\u505a\u662f\u4e3a\u4e86\u5206\u914d\u8fd9\u4e2a\u6d41\u91cf\u7ed9\u6c34\u548c Flubber\u3002\uff08\u82e5\u6ca1\u8bfb\u61c2\u8bf7\u53cd\u590d\u7406\u89e3\uff09\n\n- \u6700\u540e\u5c06 $(S , 1)$ \u7684\u5bb9\u91cf\u6539\u4e3a\u5355\u5411\u7684 $F'$\uff0c\u5c06 $(S,2)$ \u7684\u5bb9\u91cf\u6539\u4e3a $0$\uff0c\u91cd\u65b0\u8dd1\u4e00\u904d\u6700\u5927\u6d41\u540e\u6bcf\u6761\u8fb9\u7684\u6d41\u91cf\u5373\u662f Flubber \u7684\u6d41\u91cf\uff0c\u800c\u5bb9\u91cf\u51cf\u53bb\u6d41\u91cf\u5c31\u662f\u6c34\u7684\u6d41\u91cf\uff0c\u6bd5\u7adf\u4e24\u8005\u7684\u6d41\u91cf\u76f8\u52a0\u603b\u7684\u5bb9\u91cf\u3002            \n\n\u6700\u540e\u8f93\u51fa\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b $-0.0$ \u4e4b\u7c7b\u7684\u60c5\u51b5\u53ef\u80fd\u8981\u624b\u5224\u4e00\u4e0b\uff0c\u4e0d\u6e05\u695aspj \u53ef\u4e0d\u53ef\u4ee5\u5224\u8fd9\u4e2a\u3002",
        "postTime": 1642940991,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6938 [ICPC2017 WF]Son of Pipe Stream"
    }
]