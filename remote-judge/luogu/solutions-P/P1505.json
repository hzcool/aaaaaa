[
    {
        "content": "   **90\u5206\u7684\u81ea\u884c\u770b\u7b2c\u4e09\u70b9**\n\n\u7531\u4e8e\u770b\u4e0d\u61c2\u5927\u4f6c\u53d1\u7684\u9898\u89e3\u5c31\u81ea\u5df1\u53d1\u4e86\u4e00\u7bc7\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u9898\u76ee\u8981\u6c42\u6211\u4eec\u652f\u63015\u79cd\u64cd\u4f5c\uff0c\u5176\u4e2d\u663e\u7136\u64cd\u4f5c2-4\u8981\u6c42\u4f7f\u7528\u6811\u5256\u6765\u5b9e\u73b0\uff08\u4e3b\u8981\u662f\u66f4\u9ad8\u7ea7\u7684\u7b97\u6cd5\u6211\u4e5f\u4e0d\u4f1a\u4e86(\uff1b\u2032\u2312`)\uff09\n\n\u4f46\u662f\u8fd9\u9053\u9898\u7684\u96be\u70b9\u5bf9\u4e8e\u672c\u849f\u84bb\u6765\u8bf4\u8fd8\u662f\u5f88\u591a\u7684\uff08\u6bd4\u5982\u7b2c\u4e00\u7bc7\u8bf4\u7684\u8fb9\u6743\u8f6c\u70b9\u6743\u6211\u5c31\u4e0d\u4f1aawa\uff09\n\n\u6240\u4ee5\u6211\u5bf9\u81ea\u5df1\u4e0d\u4f1a\u7684\u70b9\u90fd\u8fdb\u884c\u4e86\u89e3\u6790\uff01\n\n$1.$  **\u8fb9\u6743\u8f6c\u70b9\u6743**\n\n\u6211\u4eec\u8003\u8651\u628a\u8fde\u63a5\u7236\u4eb2\u4e0e\u513f\u5b50\u7684\u8fb9\u7684\u8fb9\u6743\u8d4b\u503c\u5230\u513f\u5b50\u4e0a\uff0c\u5373\u6211\u4eec\u5728\u5199\u7ebf\u6bb5\u6811\u4e0e\u8dd1\u7b2c\u4e8c\u4e2aDFS\u7684\u65f6\u5019\u5bf9\u4e8e\u6743\u503c\u7528dfs\u5e8f\u548c\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u50a8\u987a\u5e8f\u8fdb\u884c\u8f6c\u6362\uff0c\u6ca1\u60f3\u660e\u767d\u7684\u53ef\u4ee5\u770b\u770b\u6211\u4ee3\u7801\u4e2ddfs1\u548cdfs2\u4e2d\u7684\u5e94\u7528\uff0c\u8fd8\u53ef\u4ee5\u5148\u53bb\u505a[P4315 \u6708\u4e0b\u201c\u6bdb\u666f\u6811\u201d](https://www.luogu.com.cn/problem/P4315)\n\n\n```c++\ninline void dfs1(int x,int f){\n\tdep[x]=dep[f]+1;fa[x]=f;siz[x]=1;\n\tfor(int i=head[x];i;i=nex[i]){\n\t\tint v=to[i];\n\t\tif(v==f) continue;\n\t\tdfs1(v,x);\n\t\ttmp[v]=val[i];//\u8fb9\u6743\u8f6c\u70b9\u6743\n\t\tsiz[x]+=siz[v];\n\t\tif(siz[son[x]]<siz[v]) son[x]=v;\n\t}\n}\n\ninline void dfs2(int x,int topf){\n\tdfn[x]=++idx;\n    w[idx]=tmp[x];//\u8fb9\u6743\u8f6c\u70b9\u6743\n    top[x]=topf;\n\tif(son[x]) dfs2(son[x],topf);\n\tfor(int i=head[x];i;i=nex[i]){\n\t\tint v=to[i];\n\t\tif(v==fa[x]||v==son[x]) continue;\n\t\tdfs2(v,v);\n\t}\n}\n```\n\n$2.$   \u5f53\u6811\u5256\u4e2d\u8df3\u51fa$while(top[x]!=top[y])$\u8fd9\u4e2a\u5faa\u73af\u7684\u65f6\u5019\uff0c$top[x]$\u6b64\u65f6\u5c31\u662fx\u548cy\u7684$LCA$ ,\u7531\u4e8e$top[x]$\u7684\u70b9\u6743\u662f$top[x]$\u4e0e$fa[top[x]]$\u7684\u8fde\u8fb9\u7684\u8fb9\u6743\uff0c\u6240\u4ee5\u6211\u4eec\u6b64\u65f6\u4e0d\u8ba1\u7b97\u5b83\uff0c\u53e6\u5916\u5f53$x==y$ \u7684\u65f6\u5019\uff0c\u6240\u6709\u9700\u8981\u7edf\u8ba1\u7684\u8fb9\u6743\u90fd\u88ab\u7edf\u8ba1\u5230\u4e86\u76f4\u63a5\u8fd4\u56de\u5373\u53ef,\u8fd9\u91cc\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a\n\n```c++\nif(x!=y) res+=qsum(1,1,n,dfn[x]+1,dfn[y]);\n```\n\n$3.$  **\u5f88\u591a\u4eba\u90fd\u88abhack\u7684\u4e00\u70b9**\uff0c\u611f\u8c22@[\u5085\u601d\u7ef4666](https://www.luogu.com.cn/user/175131)\u5927\u4f6c\u6307\u51fa\u7684\u9519\u8bef\n\n\u4fee\u6539\u7b2c$i$\u6761\u8fb9\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4fee\u6539\u7684\u662f$(u,v)$\u8fd9\u4e2a\u70b9\u96c6\u4e2d\u6df1\u5ea6\u66f4\u5927\u7684\u70b9\u7684\u70b9\u6743\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u4fee\u6539\u70b9i\uff0c\u5177\u4f53\u64cd\u4f5c\u5728\u4ee3\u7801\u4e2d\n\n$4.$  \u5269\u4e0b\u7684\u5c31\u6ca1\u4ec0\u4e48\u96be\u7684\u4e86\uff0c\u7528$lazy[$  $]$\u5f02\u6216\u7ef4\u62a4\u8fd9\u4e2a\u70b9\u662f\u5426\u9700\u8981\u53d6\u53cd\uff0c$sum[$  $]$\u76f4\u63a5$\\times-1$\u5c31\u884c\u4e86\uff0c$maxn[$  $]$\u548c$minn[$  $]$\u4ea4\u6362\u4e4b\u540e\u53d6\u53cd\u5c31\u53ef\u4ee5\u4e86\n\n\u7136\u800c\u6700\u4f18\u89e3\u5c45\u7136\u662f\u66b4\u529b\u3002\u3002\u3002\n\n\u53e6\u5916\uff0c\u5efa\u8bae\u5404\u4f4d\u6253\u6811\u5256\u7528\u7ed3\u6784\u4f53\u5b58\u56fe\uff0c\u6211\u628atop\u5199\u6210to\u627e\u4e86\u4e00\u5c0f\u65f6\n\n\u849f\u84bb\u7801\u5b57\u4e0d\u6613\uff0c\u5982\u679c\u5bf9\u60a8\u6709\u5e2e\u52a9\u7684\u8bdd\u8bf7\u70b9\u4e2a\u8d5e\u5457\uff1f\u4ee5\u53ca\u975e\u5e38\u611f\u8c22\u7ba1\u7406\u5458\u5927\u5927\u7684\u5ba1\u6838\n\n$AC$  $CODE$\n\n\n\n```c++\n#include<bits/stdc++.h> \n\n#define int long long\n#define mid ((l+r)>>1)\n#define lson rt<<1,l,mid\n#define rson rt<<1|1,mid+1,r\nusing namespace std;\n\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-48;ch=getchar();}\n\treturn x*f;\n}\n\ninline void write(int x){\n\tif(x<0){putchar('-');x=-x;}\n\tif(x>9)write(x/10);\n\tint xx=x%10;\n\tputchar(xx+'0');\n}\n\nconst int N=2e5+10;\nint n,m;\nint cnt,head[N],to[N<<1],nex[N<<1],val[N<<1];\n//\u94fe\u5f0f\u524d\u5411\u661f\n\nint idx,fa[N],son[N],top[N],dep[N],dfn[N],siz[N],tmp[N],w[N];\n//\u6811\u94fe\u5256\u5206 \n\nint sumn[N<<2],maxn[N<<2],minn[N<<2],lz[N<<2];\n//\u7ebf\u6bb5\u6811 \n\nstruct node{\n\tint x,y;\n}id[N];\n\ninline void add(int x,int y,int w){\n\tnex[++cnt]=head[x];to[cnt]=y;val[cnt]=w;head[x]=cnt;\n}\n\ninline void dfs1(int x,int f){\n\tdep[x]=dep[f]+1;fa[x]=f;siz[x]=1;\n\tfor(int i=head[x];i;i=nex[i]){\n\t\tint v=to[i];\n\t\tif(v==f) continue;\n\t\tdfs1(v,x);\n\t\ttmp[v]=val[i];//\u8fb9\u6743\u8f6c\u70b9\u6743\n\t\tsiz[x]+=siz[v];\n\t\tif(siz[son[x]]<siz[v]) son[x]=v;\n\t}\n}\n\ninline void dfs2(int x,int topf){\n\tdfn[x]=++idx;w[idx]=tmp[x];top[x]=topf;\n\tif(son[x]) dfs2(son[x],topf);\n\tfor(int i=head[x];i;i=nex[i]){\n\t\tint v=to[i];\n\t\tif(v==fa[x]||v==son[x]) continue;\n\t\tdfs2(v,v);\n\t}\n}\n//\u4ee5\u4e0b\u4e3a\u7ebf\u6bb5\u6811 \n\ninline void pushup(int rt){\n\tsumn[rt]=sumn[rt<<1]+sumn[rt<<1|1];\n\tmaxn[rt]=max(maxn[rt<<1],maxn[rt<<1|1]);\n\tminn[rt]=min(minn[rt<<1],minn[rt<<1|1]);\n}\n\ninline void build(int rt,int l,int r){\n\tif(l==r){\n\t\tsumn[rt]=maxn[rt]=minn[rt]=w[l];\n\t\treturn;\n\t}\n\tbuild(rt<<1,l,mid);build(rt<<1|1,mid+1,r);\n\tpushup(rt);\n}\n\ninline void pushdown(int rt){\n\tlz[rt<<1]^=1;lz[rt<<1|1]^=1;\n\tsumn[rt<<1]=-sumn[rt<<1];sumn[rt<<1|1]=-sumn[rt<<1|1];\n\tmaxn[rt<<1]=-maxn[rt<<1];maxn[rt<<1|1]=-maxn[rt<<1|1];\n\tminn[rt<<1]=-minn[rt<<1];minn[rt<<1|1]=-minn[rt<<1|1];\n\tswap(maxn[rt<<1],minn[rt<<1]);\n\tswap(maxn[rt<<1|1],minn[rt<<1|1]);\n\tlz[rt]=0;\n}\n\ninline void update(int rt,int l,int r,int q,int k){\n\tif(l==r){\n\t\tsumn[rt]=maxn[rt]=minn[rt]=k;\n\t\treturn;\n\t}\n\tif(lz[rt]) pushdown(rt);\n\tif(q<=mid) update(rt<<1,l,mid,q,k);\n\tif(q>mid)  update(rt<<1|1,mid+1,r,q,k);\n\tpushup(rt);\n}\n\ninline void change(int rt,int l,int r,int L,int R){\n\tif(L<=l&&r<=R){\n\t\tlz[rt]^=1;\n\t\tsumn[rt]=-sumn[rt];\n\t\tmaxn[rt]=-maxn[rt];\n\t\tminn[rt]=-minn[rt];\n\t\tswap(maxn[rt],minn[rt]);\n\t\treturn;\n\t}\n\tif(lz[rt]) pushdown(rt);\n\tif(L<=mid) change(rt<<1,l,mid,L,R);\n\tif(R>mid)  change(rt<<1|1,mid+1,r,L,R);\n\tpushup(rt);\n}\n\ninline int qsum(int rt,int l,int r,int L,int R){\n\tint res=0;\n\tif(L<=l&&r<=R) return sumn[rt];\n\tif(lz[rt]) pushdown(rt);\n\tif(L<=mid) res+=qsum(rt<<1,l,mid,L,R);\n\tif(R>mid)  res+=qsum(rt<<1|1,mid+1,r,L,R);\n\tpushup(rt);\n\treturn res;\n}\n\ninline int qmax(int rt,int l,int r,int L,int R){\n\tint res=-2147483647;\n\tif(L<=l&&r<=R) return maxn[rt];\n\tif(lz[rt]) pushdown(rt);\n\tif(L<=mid) res=max(res,qmax(rt<<1,l,mid,L,R));\n\tif(R>mid)  res=max(res,qmax(rt<<1|1,mid+1,r,L,R));\n\tpushup(rt);\n\treturn res;\n}\n\ninline int qmin(int rt,int l,int r,int L,int R){\n\tint res=2147483647;\n\tif(L<=l&&r<=R) return minn[rt];\n\tif(lz[rt]) pushdown(rt);\n\tif(L<=mid) res=min(res,qmin(rt<<1,l,mid,L,R));\n\tif(R>mid)  res=min(res,qmin(rt<<1|1,mid+1,r,L,R));\n\tpushup(rt);\n\treturn res;\n}\n//\u4ee5\u4e0a\u662f\u7ebf\u6bb5\u6811\n//\u4ee5\u4e0b\u662f\u6811\u94fe\u5256\u5206\n\ninline void update(int x,int y){\n\twhile(top[x]!=top[y]){\n\t\tif(dep[top[x]]<dep[top[y]]) swap(x,y);\n\t\tchange(1,1,n,dfn[top[x]],dfn[x]);\n\t\tx=fa[top[x]];\n\t}\n\tif(dep[x]>dep[y]) swap(x,y);\n\tif(x!=y) change(1,1,n,dfn[x]+1,dfn[y]);\n}\n\ninline int qsum(int x,int y){\n\tint res=0;\n\twhile(top[x]!=top[y]){\n\t\tif(dep[top[x]]<dep[top[y]]) swap(x,y);\n\t\tres+=qsum(1,1,n,dfn[top[x]],dfn[x]);\n\t\tx=fa[top[x]];\n\t}\n\tif(dep[x]>dep[y]) swap(x,y);\n\tif(x!=y) res+=qsum(1,1,n,dfn[x]+1,dfn[y]);\n\treturn res;\n}\n\ninline int qmax(int x,int y){\n\tint res=-2147483647;\n\twhile(top[x]!=top[y]){\n\t\tif(dep[top[x]]<dep[top[y]]) swap(x,y);\n\t\tres=max(res,qmax(1,1,n,dfn[top[x]],dfn[x]));\n\t\tx=fa[top[x]];\n\t}\n\tif(dep[x]>dep[y]) swap(x,y);\n\tif(x!=y) res=max(res,qmax(1,1,n,dfn[x]+1,dfn[y]));\n\treturn res;\n}\n\ninline int qmin(int x,int y){\n\tint res=2147483647;\n\twhile(top[x]!=top[y]){\n\t\tif(dep[top[x]]<dep[top[y]]) swap(x,y);\n\t\tres=min(res,qmin(1,1,n,dfn[top[x]],dfn[x]));\n\t\tx=fa[top[x]];\n\t}\n\tif(dep[x]>dep[y]) swap(x,y);\n\tif(x!=y) res=min(res,qmin(1,1,n,dfn[x]+1,dfn[y]));\n\treturn res;\n}\n\nsigned main(){\n\tn=read();\n\tfor(int i=1;i<n;i++){\n\t\tint a,b,c;\n\t\ta=read()+1;b=read()+1;c=read();\n\t\tadd(a,b,c);add(b,a,c);\n\t\tid[i].x=a;id[i].y=b;\n\t}\n\tdfs1(1,0);dfs2(1,1);\n\tbuild(1,1,n);\n\tm=read();\n\twhile(m--){\n\t\tchar s[10];int a,b;\n\t\tscanf(\"%s\",s);a=read();b=read();\n\t\tif(s[0]=='C'){\n\t\t\tint tmpp;\n\t\t\tif(dep[id[a].x]>dep[id[a].y]) tmpp=id[a].x;\n\t\t\telse tmpp=id[a].y;\n\t\t\tupdate(1,1,n,dfn[tmpp],b);\n\t\t}\n\t\telse if(s[0]=='N'){\n\t\t\ta++,b++;\n\t\t\tupdate(a,b);\n\t\t}\n\t\telse if(s[0]=='S'){\n\t\t\ta++,b++;\n\t\t\twrite(qsum(a,b));puts(\"\");\n\t\t}\n\t\telse if(s[0]=='M'&&s[1]=='A'){\n\t\t\ta++,b++;\n\t\t\twrite(qmax(a,b));puts(\"\");\n\t\t}\n\t\telse if(s[0]=='M'&&s[1]=='I'){\n\t\t\ta++,b++;\n\t\t\twrite(qmin(a,b));puts(\"\");\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1604028211,
        "uid": 102347,
        "name": "jichi",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1505 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u65c5\u6e38\u3011"
    },
    {
        "content": "$$\\text{\u5173\u4e8e\u9898\u610f}$$\n\n$\\quad$\u4e00\u9053\u5f88\u7b80\u5355~~\u6bd2\u7624~~\u7684\u6811\u94fe\u5256\u5206\u7ec3\u4e60\u9898\uff0c\u53ea\u6709\u4e94\u79cd\u64cd\u4f5c\uff0c\u9664\u4e86\u7801\u91cf\u8f83\u5927\uff0c\u5c31\u6ca1\u6709\u4ec0\u4e48\u5176\u4ed6\u7279\u70b9\u4e86\uff0c\u662f\u4e00\u9053\u5f88\u597d\u7684\u7ec3\u4e60\u9898\u3002~~\u53ef\u4ee5\u953b\u70bc$OIer$\u627e\u9519\u80fd\u529b\uff0c\u6211\u8c03\u4e86\u4e00\u4e2a\u5c0f\u65f6\uff0c $WA$\u4e86\u4e00\u6b21~~\n\n$$\\text{\u5173\u4e8e\u8fb9\u6743\u8f6c\u70b9\u6743}$$\n\n$\\quad$\u6709\u51e0\u9053\u9898\u4e5f\u662f\u6811\u94fe\u5256\u5206\u8fb9\u6743\u8f6c\u70b9\u6743\uff0c\u53ef\u4ee5\u5148\u53bb\u505a\u4e00\u4e0b\uff1a[P4114 Qtree1](https://www.luogu.com.cn/problem/P4114)\uff0c[P3950 \u90e8\u843d\u51b2\u7a81](https://www.luogu.com.cn/problem/P3950)([\u6211\u7684\u9898\u89e3](https://www.luogu.com.cn/blog/Farkas/solution-p3950))\uff0c[CF165D Beard Graph](https://www.luogu.com.cn/problem/CF165D)([\u6211\u7684\u9898\u89e3](https://www.luogu.com.cn/blog/Farkas/solution-cf165d))\u3002\n\n$\\quad$\u8003\u8651\u5230\u6811\u4e0a\u6709 $n$ \u4e2a\u70b9\uff0c\u6709 $n-1$ \u6761\u8fb9\uff0c\u5e76\u4e14\u6bcf\u4e2a\u70b9\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u7236\u4eb2\u8282\u70b9(\u9664\u4e86\u6839\u8282\u70b9)\uff0c\u4f46\u662f\u6bcf\u4e2a\u70b9\u53ef\u80fd\u6709\u591a\u4e2a\u513f\u5b50(\u4e5f\u53ef\u80fd\u6ca1\u6709)\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u8fb9\u6743\u8f6c\u5316\u4e3a\u513f\u5b50\u8282\u70b9\u7684\u70b9\u6743(\u6df1\u5ea6\u66f4\u5927\u7684\u70b9)\uff0c\u8fd9\u6837\u9664\u4e86\u6839\u8282\u70b9\uff0c$n-1$ \u6761\u8fb9\u5c31\u5408\u7406\u7684\u5206\u914d\u5230 $n-1$ \u4e2a\u70b9\u4e0a\u3002(\u5982\u679c\u8fd8\u4e0d\u80fd\u5c31\u770b\u770b\u56fe\u5427)\n\n\u539f\u56fe\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/o4y4z8vc.png)\n\n\u7ecf\u8fc7\u8f6c\u5316\u540e\u7684\u56fe(\u5c06\u8fb9\u6743\u8f6c\u5316\u4e3a\u70b9\u6743)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/qtsmvd97.png)\n\n$\\quad$\u6ce8\u610f\uff1a\u5bf9\u4e8e\u8def\u5f84$4-2-5$\uff0c\u53ea\u9700\u8bbf\u95ee\u70b9 $4$ \u548c\u70b9 $5$\uff0c\u5bf9\u4e8e $4$ \u548c $5$ \u7684 $LCA$ (\u6700\u8fd1\u516c\u5171\u7956\u5148)\u4e0d\u53ef\u53d6\uff0c\u56e0\u4e3a $2$ \u5728\u539f\u56fe\u4e2d\u5bf9\u5e94\u7684\u662f\u8fb9 $1-2$\uff0c\u5e76\u4e0d\u5728\u8def\u5f84$4-2-5$\u4e0a\uff0c\u6240\u4ee5\u5728\u6811\u94fe\u5256\u5206\u4e2d\u5f53 $x$ \u548c $y$ \u5728\u540c\u4e00\u6761\u94fe\u4e0a\u65f6($dep[x]<dep[y]$)\uff0c\u53ea\u9700\u8be2\u95ee $x+1$ \u5230 $y$ \u7684\u8def\u5f84\u3002\n\n```cpp\nil void dfs1(int x,int fa,int ss) //ss\u8868\u793ax\u4e0efa(x\u7684\u7236\u4eb2)\u7684\u8fde\u8fb9\u7684\u6743\u503c\n{\n  father[x]=fa;dep[x]=dep[fa]+1;size[x]=1;a[x]=ss;\n  for(re i=head[x],y;i,y=go[i];i=next[i])\n    {\n      if(y==fa)continue;\n      dfs1(y,x,s[i]);\n      size[x]+=size[y];\n      if(size[y]>size[son[x]])son[x]=y;\n    }\n}\n\nil int query1(int x,int y,int z)\n{\n  int fx=top[x],fy=top[y],res;\n  if(z==1)res=0;\n  else if(z==2)res=-10000;\n  else if(z==3)res=10000;\n  while(fx!=fy)\n    {\n      if(dep[fx]<dep[fy])swap(x,y),swap(fx,fy);\n      if(z==1)res+=query(1,1,n,seg[fx],seg[x],z);\n      else if(z==2)res=max(res,query(1,1,n,seg[fx],seg[x],z));\n      else if(z==3)res=min(res,query(1,1,n,seg[fx],seg[x],z));\n      x=father[fx];fx=top[x];\n    }\n  if(dep[x]>dep[y])swap(x,y);\n  if(seg[x]==seg[y])return res;\n  if(z==1)res+=query(1,1,n,seg[x]+1,seg[y],z);//\u6700\u540e\u4e00\u6b21\u8be2\u95ee\u662fseg[x]+1\u5230seg[y]\n  if(z==2)res=max(res,query(1,1,n,seg[x]+1,seg[y],z));//\u6700\u540e\u4e00\u6b21\u8be2\u95ee\u662fseg[x]+1\u5230seg[y]\n  if(z==3)res=min(res,query(1,1,n,seg[x]+1,seg[y],z));//\u6700\u540e\u4e00\u6b21\u8be2\u95ee\u662fseg[x]+1\u5230seg[y]\n  return res;\n}\n```\n\n$$\\text{\u5bf9\u4e8e\u4e94\u79cd\u64cd\u4f5c}$$\n\n1. \u64cd\u4f5c1\uff1a\u5355\u70b9\u4fee\u6539\uff0c\u8f93\u5165 $C$ $i$ $w$ \u5c06\u8f93\u5165\u7684\u7b2c $i$ \u6761\u8fb9\u6743\u503c\u6539\u4e3a $w$ \uff0c\u627e\u51fa\u7b2c $i$ \u6761\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\uff0c\u4fee\u6539\u513f\u5b50\u8282\u70b9\n\n```cpp\nil void change3(int x,int y)\n{\n  int xx=go[x<<1],yy=go[(x<<1)-1];\n  if(xx==father[yy])change1(1,1,n,seg[yy],y);\n  else change1(1,1,n,seg[xx],y);\n}\n```\n\n\n2. \u64cd\u4f5c2\uff1a\u533a\u95f4\u4fee\u6539\uff0c\u8f93\u5165 $N$ $u$ $v$ \u5c06 $u,v$ \u8282\u70b9\u4e4b\u95f4\u7684\u8fb9\u6743\u90fd\u53d8\u4e3a\u76f8\u53cd\u6570\uff0c\u7528\u5e03\u5c14\u6570\u7ec4 $c[k]$ (\u61d2\u6807\u8bb0)\u8bb0\u5f55k\u533a\u95f4\u5185\u662f\u5426\u8981\u88ab\u4fee\u6539\uff0c\u6bcf\u6b21\u4fee\u6539 $c[k]$$^$$ =1$;\n\n3. \u64cd\u4f5c3\uff1a\u533a\u95f4\u8be2\u95ee\uff0c\u8f93\u5165 $SUM$ $u$ $v$ \u8be2\u95ee $u,v$ \u8282\u70b9\u4e4b\u95f4\u8fb9\u6743\u548c\n\n4. \u64cd\u4f5c4\uff1a\u533a\u95f4\u8be2\u95ee\uff0c\u8f93\u5165 $MAX$ $u$ $v$ \u8be2\u95ee $u,v$ \u8282\u70b9\u4e4b\u95f4\u8fb9\u6743\u6700\u5927\u503c\n\n5. \u64cd\u4f5c5\uff1a\u533a\u95f4\u8be2\u95ee\uff0c\u8f93\u5165 $MIN$ $u$ $v$ \u8be2\u95ee $u,v$ \u8282\u70b9\u4e4b\u95f4\u8fb9\u6743\u6700\u5c0f\u503c\n\n$\\quad$\u5176\u4ed6\u5c31\u662f\u4e00\u4e9b\u7ec6\u8282\u65b9\u9762\u7684\u95ee\u9898\u4e86\uff0c\u6bd4\u5982\u53d6\u53cd\u65f6 $sum[k]=-sum[k]$\uff0c$Min[k]=-Max[k]$\uff0c$Max[k]=-Min[k]$\n```cpp\nil void change(int k,int l,int r)\n{\n    int m1=Min[k],m2=Max[k];\n    sum[k]=-sum[k];Min[k]=-m2;Max[k]=-m1;c[k]^=1;\n}\n```\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u5b8c\u6574$AC$\u4ee3\u7801\u4e86\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<stack>\nusing namespace std;\n#define next neee\n#define re register int\n#define il inline\n#define inf 1e18\nil int read()\n{\n\tint x=0,f=1;char ch=getchar();\n    while(!isdigit(ch)&&ch!='-')ch=getchar();\n    if(ch=='-')f=-1,ch=getchar();\n    while(isdigit(ch))x=(x<<1)+(x<<3)+ch-'0',ch=getchar();\n    return x*f;\n}\nil void print(int x)\n{if(x<0)putchar('-'),x=-x;if(x/10)print(x/10);putchar(x%10+'0');}\nconst int N=2e5+5;\nint n,m,next[N<<1],go[N<<1],head[N],tot,s[N<<1],a[N],Min[N<<2],top[N];\nint sum[N<<2],Max[N<<2],seg[N],rev[N],son[N],size[N],dep[N],father[N];\nbool c[N<<2];\nil void Add(int x,int y,int z)//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\n{next[++tot]=head[x];head[x]=tot;go[tot]=y;s[tot]=z;}\n//------------\u9884\u5904\u7406---------------------------\nil void dfs1(int x,int fa,int ss)//\u7b2c\u4e00\u6b21dfs\u5904\u7406\u6570\u7ec4father\uff0cson\uff0cdep\uff0csize\uff0ca\n{\n  father[x]=fa;dep[x]=dep[fa]+1;size[x]=1;a[x]=ss;//ss\u8868\u793ax\u4e0efa(x\u7684\u7236\u4eb2)\u7684\u8fde\u8fb9\u7684\u6743\u503c\n  for(re i=head[x],y;i,y=go[i];i=next[i])\n    {\n      if(y==fa)continue;\n      dfs1(y,x,s[i]);\n      size[x]+=size[y];\n      if(size[y]>size[son[x]])son[x]=y;\n    }\n}\nil void dfs2(int x,int topf)//\u7b2c\u4e8c\u6b21dfs\u5904\u7406\u6570\u7ec4top\uff0cseg\uff0crev\n{\n  top[x]=topf;seg[x]=++seg[0];rev[seg[x]]=x;\n  if(!son[x])return;\n  dfs2(son[x],topf);\n  for(re i=head[x],y;i,y=go[i];i=next[i])\n    {\n      if(top[y])continue;\n      dfs2(y,y);\n    }\n}\nil void build(int k,int l,int r)//\u5efa\u6811\n{\n  if(l==r){Min[k]=Max[k]=sum[k]=a[rev[l]];return;}\n  int mid=l+r>>1;\n  build(k<<1,l,mid);build(k<<1|1,mid+1,r);\n  Min[k]=min(Min[k<<1],Min[k<<1|1]);\n  Max[k]=max(Max[k<<1],Max[k<<1|1]);\n  sum[k]=sum[k<<1]+sum[k<<1|1];\n}\n//------------\u9884\u5904\u7406---------------------------\n//------------\u7ebf\u6bb5\u6811---------------------------\nil void change(int k,int l,int r)//\u53d6\u53cd\u64cd\u4f5c\n{int m1=Min[k],m2=Max[k];sum[k]=-sum[k];Min[k]=-m2;Max[k]=-m1;c[k]^=1;}\nil void pushdown(int k,int l,int r,int mid)//\u4e0b\u4f20\u6807\u8bb0\n{if(l==r){c[k]=0;return;}change(k<<1,l,mid);change(k<<1|1,mid+1,r);c[k]=0;}\nil void change1(int k,int l,int r,int x,int y)//\u5355\u70b9\u4fee\u6539\n{\n  if(l==r){Min[k]=Max[k]=sum[k]=y;return;}\n  int mid=l+r>>1;\n  if(c[k])pushdown(k,l,r,mid);\n  if(x<=mid)change1(k<<1,l,mid,x,y);\n  else change1(k<<1|1,mid+1,r,x,y);\n  Min[k]=min(Min[k<<1],Min[k<<1|1]);\n  Max[k]=max(Max[k<<1],Max[k<<1|1]);\n  sum[k]=sum[k<<1]+sum[k<<1|1];\n}\nil void change2(int k,int l,int r,int x,int y)//\u533a\u95f4\u53d6\u53cd\n{\n  if(x<=l&&y>=r){change(k,l,r);return;}\n  int mid=l+r>>1;\n  if(c[k])pushdown(k,l,r,mid);\n  if(x<=mid)change2(k<<1,l,mid,x,y);\n  if(y>mid)change2(k<<1|1,mid+1,r,x,y);\n  Min[k]=min(Min[k<<1],Min[k<<1|1]);\n  Max[k]=max(Max[k<<1],Max[k<<1|1]);\n  sum[k]=sum[k<<1]+sum[k<<1|1];\n}\nil int query(int k,int l,int r,int x,int y,int z)//\u533a\u95f4\u8be2\u95ee\n{\n  if(x<=l&&y>=r){\n    if(z==1)return sum[k];//z==1-->>\u6c42SUM\n    if(z==2)return Max[k];//z==2-->>\u6c42MAX\n    return Min[k];}\t\t//z==3-->>\u6c42MIN\n  int mid=l+r>>1,res;\n  if(c[k])pushdown(k,l,r,mid);\n  if(z==1){res=0;if(x<=mid)res+=query(k<<1,l,mid,x,y,z);if(y>mid)res+=query(k<<1|1,mid+1,r,x,y,z);return res;}\n  if(z==2){res=-10000;if(x<=mid)res=max(res,query(k<<1,l,mid,x,y,z));if(y>mid)res=max(res,query(k<<1|1,mid+1,r,x,y,z));return res;}\n  res=10000;if(x<=mid)res=min(res,query(k<<1,l,mid,x,y,z));if(y>mid)res=min(res,query(k<<1|1,mid+1,r,x,y,z));return res;\n}\n//------------\u7ebf\u6bb5\u6811--------------------------\n//------------\u6811\u94fe\u5256\u5206------------------------\nil void change3(int x,int y)\n{\n  int xx=go[x<<1],yy=go[(x<<1)-1];\n  if(xx==father[yy])change1(1,1,n,seg[yy],y);\n  else change1(1,1,n,seg[xx],y);\n}\nil void change4(int x,int y)\n{\n  int fx=top[x],fy=top[y];\n  while(fx!=fy){\n    if(dep[fx]<dep[fy])swap(x,y),swap(fx,fy);\n    change2(1,1,n,seg[fx],seg[x]);\t//\u94fe\u9876\u5728\u524d\n    x=father[fx];fx=top[x];\n  }\n  if(dep[x]>dep[y])swap(x,y);\n  if(seg[x]+1<=seg[y])change2(1,1,n,seg[x]+1,seg[y]);//\u8bb0\u5f97seg[x]+1\n}\nil int query1(int x,int y,int z)\n{\n  int fx=top[x],fy=top[y],res;\n  if(z==1)res=0;\n  else if(z==2)res=-10000;\n  else if(z==3)res=10000;\n  while(fx!=fy)\n    {\n      if(dep[fx]<dep[fy])swap(x,y),swap(fx,fy);\n      if(z==1)res+=query(1,1,n,seg[fx],seg[x],z);\n      else if(z==2)res=max(res,query(1,1,n,seg[fx],seg[x],z));\n      else if(z==3)res=min(res,query(1,1,n,seg[fx],seg[x],z));\n      x=father[fx];fx=top[x];\n    }\n  if(dep[x]>dep[y])swap(x,y);\n  if(seg[x]==seg[y])return res;\n  if(z==1)res+=query(1,1,n,seg[x]+1,seg[y],z);//\u6700\u540e\u4e00\u6b21\u8be2\u95ee\u662fseg[x]+1\u5230seg[y]\n  if(z==2)res=max(res,query(1,1,n,seg[x]+1,seg[y],z));//\u6700\u540e\u4e00\u6b21\u8be2\u95ee\u662fseg[x]+1\u5230seg[y]\n  if(z==3)res=min(res,query(1,1,n,seg[x]+1,seg[y],z));//\u6700\u540e\u4e00\u6b21\u8be2\u95ee\u662fseg[x]+1\u5230seg[y]\n  return res;\n}\n//------------\u6811\u94fe\u5256\u5206------------------------\nsigned main()\n{\n  n=read();\n  for(re i=1;i<n;i++)\n  {re x=read()+1,y=read()+1,z=read();Add(x,y,z);Add(y,x,z);}\n  m=read();\n  dfs1(1,0,0);dfs2(1,1);build(1,1,n);//\u6811\u94fe\u5256\u5206\u9884\u5904\u7406\n  string s1;\n  while(m--)\n    {\n      cin>>s1;re x=read()+1,y=read()+1,z=0;\n      if(s1==\"C\"){change3(x-1,y-1);continue;}\n      if(s1==\"N\"){change4(x,y);continue;}\n      if(s1==\"SUM\")z=1;else if(s1==\"MAX\")z=2;else if(s1==\"MIN\")z=3;\n      print(query1(x,y,z));putchar('\\n');\n    }\n  return 0;\n}\n```\n$\\quad$\u5199\u9898\u89e3\u4e0d\u6613\uff0c\u5982\u679c\u89c9\u5f97\u5bf9\u60a8\u6709\u5e2e\u52a9\uff0c\u4e0d\u59a8\u70b9\u4e2a\u8d5e\u5427\uff01",
        "postTime": 1604372825,
        "uid": 109220,
        "name": "Farkas_W",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1505 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u65c5\u6e38\u3011"
    },
    {
        "content": "# P1505\u9898\u89e3\n\n\n------------\n## \u601d\u8def\uff1a\n\n\u6253\u8fd9\u9053\u9898\u7684\u65f6\u5019\u624b\u611f\u7279\u522b\u597d\uff0c\u57fa\u672c\u7b49\u4e8e\u4e00\u6b21\u8fc7\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u5c31\u662f\u8981\u67e5\u7684\u4e1c\u897f\u6bd4\u8f83\u591a\uff0c\u7b49\u540c\u4e8e\u6811\u5256\u6a21\u677f\u3002\n\n\u9996\u5148\u8fb9\u6743\u8f6c\u70b9\u6743\u8fd9\u79cd\u64cd\u4f5c\u5c31\u4e0d\u7528\u8bf4\u4e86\u5427\uff0c\u628a\u8fb9\u6743\u4e0b\u653e\u5230\u513f\u5b50\u8282\u70b9\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u7136\u540e\u5c31\u662f\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5256\u5206\u8fc7\u540e\u7684\u94fe\uff0c\u6b64\u9898\u4e2d\u7ebf\u6bb5\u6811\u7684\u8282\u70b9\u9700\u8981\u7ef4\u62a4\u4ee5\u4e0b\u4fe1\u606f\uff1a\n\n1. \u5de6\u53f3\u7aef\u70b9\n2. \u533a\u95f4\u6700\u5c0f\u6700\u5927\u503c\n3. \u533a\u95f4\u548c\n4. \u662f\u5426\u7ffb\u8f6c\u7684\u61d2\u6807\u8bb0\n\n\u4e3b\u8981\u5bf9\u7b2c4\u70b9\u4fe1\u606f\u89e3\u91ca\u4e00\u4e0b\uff0c\u56e0\u4e3a\u8fd9\u9053\u9898\u8981\u6c42\u5c06\u533a\u95f4\u7684\u6240\u6709\u6570\u53d8\u6210\u76f8\u53cd\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u75281\u6765\u7ef4\u62a4\u8981\u7ffb\u8f6c\uff0c0\u7ef4\u62a4\u4e0d\u7528\u7ffb\u8f6c\uff0c\u6bcf\u6b21pushdown\u7684\u65f6\u5019\u5f02\u6216\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5982\u4f55pushdown\uff1f\n\n\u5bf9\u6bcf\u4e00\u6b21\u53d6\u76f8\u53cd\uff0c\u6700\u5927\u503c\u53d8\u6210\u6700\u5c0f\u503c\uff0c\u6700\u5c0f\u503c\u53d8\u6210\u6700\u5927\u503c\uff0c\u533a\u95f4\u548c\u53d8\u4e3a\u76f8\u53cd\u6570\uff0c\u61d2\u6807\u8bb0\u5f02\u6216\u5373\u53ef\u3002\u4f46\u5728\u8fd9\u91cc\u8981\u6ce8\u610f\uff1a\u8981\u5148\u5f00\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\u5b58\u50a8\u6700\u5927\u503c\uff08\u6216\u6700\u5c0f\u503c\uff09\u3002\n\n**\u5f9784\u5206\u7684\u540c\u5b66\u770b\u8fc7\u6765**\uff1a\u5176\u5b9e\u4ee3\u7801\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u53ea\u662f\u9898\u76ee\u4e2d\u7684\u8282\u70b9\u662f\u4ece0\u5f00\u59cb\u7684\uff08\u6211\u4e5f\u4e0d\u6e05\u695a\u4e3a\u4ec0\u4e48\u4ece1\u5f00\u59cb\u8fd8\u80fd\u62ff84\u5206\uff09\u3002\n\n\u5904\u7406\u65b9\u6cd5\u5c31\u662f\u7ed9\u6240\u6709\u7684\u8f93\u5165+1\n\n## \u4ee3\u7801\n------------\n$dfn$ \u662f\u5256\u5206\u540e\u7684\u8282\u70b9\u7f16\u53f7\uff0c$x$ \u548c $y$ \u6570\u7ec4\u8868\u793a\u8f93\u5165\u7684\u7b2c$i$\u6761\u8fb9\u7684\u8d77\u59cb\u548c\u7ec8\u70b9\u3002\n\n\u5728\u7b2c\u4e00\u6b21 $dfs$ \u7684\u65f6\u5019\u628a\u8fb9\u6743\u4e0b\u653e\uff0c\u7528 $va$ \u6570\u7ec4\u5b58\u50a8\u539f\u6765\u8282\u70b9\u5bf9\u5e94\u7684\u8fb9\u6743\uff0c$val$ \u5b58\u50a8\u8282\u70b9\u5256\u5206\u540e\u5bf9\u5e94\u7684\u8fb9\u6743\u3002\n\n\u7136\u540e\u5c31\u6ca1\u4ec0\u4e48\u8981\u6ce8\u610f\u7684\u4e86\uff0c\u8bb0\u5f97\u8fb9\u6743\u4e0b\u653e\u8981+1\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define ri register int\n#define IO ios::sync_with_stdio(false)\n#define mid ((a[x].l+a[x].r)>>1)\nusing namespace std;\ntemplate < typename T >\ninline void read(T &x){\n\tx = 0;bool flag = 1;char c = getchar();\n\twhile(c < '0' or c > '9'){\n\t\tif(c == '-') flag = 0;\n\t\tc = getchar();\n\t}\n\twhile(c >= '0' and c <= '9'){\n\t\tx = (x << 1) + (x << 3) + (c^48);\tc = getchar();\n\t}\n\tx = (flag) ? x : -x ;\n}\ntemplate < typename T >\nvoid print(T x)\n{\n\tif(x < 0){putchar('-'),x=-x;}\n\tif(x>9)print(x/10);\n\tputchar(int (x%10) + '0');\n}\n\nconst int N = 2e5 + 10;\nint head[N],dfn[N],top[N],siz[N],fa[N],son[N],va[N],val[N],dep[N],x[N],y[N];\nint to[N<<1],nxt[N<<1],w[N<<1];\nint n,m,cnt,tim;\nstruct node{\n\tint l,r,mins,sum,maxs,laz;\n}a[N<<2];\n\ninline void add(int u,int v,int val){to[++cnt]=v,nxt[cnt]=head[u],head[u]=cnt,w[cnt]=val;}\n\nvoid dfs1(int x,int f){\n\tfa[x]=f,siz[x]=1,dep[x]=dep[f]+1;\n\tint ms=-1;\n\tfor(int i=head[x];i;i=nxt[i]){\n\t\tint v=to[i];\n\t\tif(v==f) continue;\n\t\tva[v]=w[i];\n\t\tdfs1(v,x);\n\t\tsiz[x]+=siz[v];\n\t\tif(ms<siz[v]) ms=siz[v],son[x]=v;\n\t}\n}\n\nvoid dfs2(int x,int t){\n\ttop[x]=t,dfn[x]=++tim,val[tim]=va[x];\n\tif(!son[x]) return;\n\tdfs2(son[x],t);\n\tfor(int i=head[x];i;i=nxt[i]){\n\t\tint v=to[i];\n\t\tif(v==fa[x]||v==son[x])continue;\n\t\tdfs2(v,v);\n\t}\n}\n\n//seg\ninline void pushup(int x){\n\ta[x].sum=a[x<<1].sum+a[x<<1|1].sum;\n\ta[x].maxs=max(a[x<<1].maxs,a[x<<1|1].maxs);\n\ta[x].mins=min(a[x<<1].mins,a[x<<1|1].mins);\n}\ninline void ch(int x){\n\tint tmp=a[x].maxs;\n\ta[x].laz^=1;\n\ta[x].maxs=-a[x].mins,a[x].mins=-tmp,a[x].sum=-a[x].sum;\n}\ninline void pushdown(int x){\n\tif(!a[x].laz) return;\n\tch(x<<1),ch(x<<1|1);\n\ta[x].laz^=1;\n}\n\nvoid build(int x,int l,int r){\n\ta[x].l=l,a[x].r=r;\n\tif(l==r) return a[x].mins=a[x].maxs=a[x].sum=val[l],void();\n\tbuild(x<<1,l,mid),build(x<<1|1,mid+1,r);\n\tpushup(x);\n}\n\nvoid mpoint(int x,int p,int k){\n\tif(a[x].l==a[x].r) return a[x].sum=a[x].mins=a[x].maxs=k,void();\n\tpushdown(x);\n\tif(p<=mid)mpoint(x<<1,p,k);\n\telse mpoint(x<<1|1,p,k);\n\tpushup(x);\n}\n\nvoid modify(int x,int l,int r){\n\tif(a[x].l>=l&&a[x].r<=r) return ch(x),void();\n\tpushdown(x);\n\tif(l <= mid) modify(x<<1,l,r);\n\tif(mid < r ) modify(x<<1|1,l,r);\n\tpushup(x);\n}\n\nint qsum(int x,int l,int r){\n\tif(a[x].l>=l&&a[x].r<=r) return a[x].sum;\n\tpushdown(x);\n\tint res=0;\n\tif(l<=mid) res+=qsum(x<<1,l,r);\n\tif(mid <r) res+=qsum(x<<1|1,l,r);\n\treturn res;\n}\n\nint qmin(int x,int l,int r){\n\tif(a[x].l>=l&&a[x].r<=r) return a[x].mins;\n\tpushdown(x);\n\tint res=0x7fffffff;\n\tif(l<=mid) res=min(res,qmin(x<<1,l,r));\n\tif(mid <r) res=min(res,qmin(x<<1|1,l,r));\n\treturn res;\n}\n\nint qmax(int x,int l,int r){\n\tif(a[x].l>=l&&a[x].r<=r) return a[x].maxs;\n\tpushdown(x);\n\tint res=-0x7fffffff;\n\tif(l<=mid) res=max(res,qmax(x<<1,l,r));\n\tif(mid <r) res=max(res,qmax(x<<1|1,l,r));\n\treturn res;\n}\n\nvoid mchain(int x,int y){\n\twhile(top[x]!=top[y]){\n\t\tif(dep[top[x]]<dep[top[y]]) swap(x,y);\n\t\tmodify(1,dfn[top[x]],dfn[x]);\n\t\tx=fa[top[x]];\n\t}\n\tif(dep[x] > dep[y]) swap(x,y);\n\tmodify(1,dfn[x]+1,dfn[y]);\n}\n\nint qcsum(int x,int y){\n\tint res=0;\n\twhile(top[x]!=top[y]){\n\t\tif(dep[top[x]] < dep[top[y]]) swap(x,y);\n\t\tres+=qsum(1,dfn[top[x]],dfn[x]);\n\t\tx=fa[top[x]];\n\t}\n\tif(dep[x]>dep[y]) swap(x,y);\n\tres+=qsum(1,dfn[x]+1,dfn[y]);\n\treturn res;\n}\n\nint qcmin(int x,int y){\n\tint res=0x7fffffff;\n\twhile(top[x]!=top[y]){\n\t\tif(dep[top[x]] < dep[top[y]]) swap(x,y);\n\t\tres=min(res,qmin(1,dfn[top[x]],dfn[x]));\n\t\tx=fa[top[x]];\n\t}\n\tif(dep[x]>dep[y]) swap(x,y);\n\tres=min(res,qmin(1,dfn[x]+1,dfn[y]));\n\treturn res;\n}\n\nint qcmax(int x,int y){\n\tint res=-0x7fffffff;\n\twhile(top[x]!=top[y]){\n\t\tif(dep[top[x]] < dep[top[y]]) swap(x,y);\n\t\tres=max(res,qmax(1,dfn[top[x]],dfn[x]));\n\t\tx=fa[top[x]];\n\t}\n\tif(dep[x]>dep[y]) swap(x,y);\n\tres=max(res,qmax(1,dfn[x]+1,dfn[y]));//\u8bb0\u5f97\u8981+1\n\treturn res;\n}\n\nvoid medge(int u,int v,int w){\n\tif(fa[u]==v) mpoint(1,dfn[u],w);\n\telse mpoint(1,dfn[v],w);\n}\n\nint main(int argc,const char *argv[]){\n\tstring tmp;\n\tint u,v,w;\n\tread(n);\n\tfor(int i = 1; i < n ; i++){\n\t\tread(u),read(v),read(w);\n\t\tx[i]=u+1,y[i]=v+1;\n\t\tadd(u+1,v+1,w),add(v+1,u+1,w);\n\t}\n\tdfs1(1,1),dfs2(1,1),build(1,1,n);\n\tread(m);\n\twhile(m--){\n\t\tcin >> tmp;\n\t\tread(u),read(v);\n\t\tif(tmp==\"C\") medge(x[u],y[u],v);\n\t\telse if(tmp==\"N\") mchain(u+1,v+1);\n\t\telse if(tmp==\"SUM\") print(qcsum(u+1,v+1)),putchar('\\n');\n\t\telse if(tmp==\"MIN\") print(qcmin(u+1,v+1)),putchar('\\n');\n\t\telse if(tmp==\"MAX\") print(qcmax(u+1,v+1)),putchar('\\n');\n\t}\n\treturn 0;\n}\n\n\n\n```\n",
        "postTime": 1610083937,
        "uid": 413147,
        "name": "_Alejandro_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1505 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u65c5\u6e38\u3011"
    },
    {
        "content": "\u770b\u5230\u6811\u4e0a\u70b9\u5bf9\u4e4b\u95f4\u7684\u4fee\u6539\u548c\u8be2\u95ee\u5c31\u77e5\u9053\u662f\u6811\u5256\u4e86\u3002\n\n\u7531\u4e8e\u8be2\u95ee\u548c\u64cd\u4f5c\u90fd\u662f\u5728\u8fb9\u4e0a\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5c06\u8fb9\u6743\u8f6c\u4e3a\u70b9\u6743\u3002\u4e0e\u5176\u4ed6\u6811\u5256\u9898\u4e0d\u540c\u7684\u662f\uff0c`C i`\u64cd\u4f5c\u9700\u8981\u6211\u4eec\u76f4\u63a5\u4fee\u6539\u4e00\u6761\u6307\u5b9a\u7684\u8fb9\u7684\u8fb9\u6743\uff0c\u800c\u4e0d\u662f\u4fee\u6539\u4e24\u70b9\u4e4b\u95f4\u7684\u8fb9\u6743\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u8bb0\u5f55\u6bcf\u6761\u8fb9\u5c06\u8fb9\u6743\u8f6c\u5230\u4e86\u54ea\u4e2a\u70b9\u4e0a\u3002\n\n\u5177\u4f53\u64cd\u4f5c\u65b9\u6cd5\uff1a\n\n```cpp\nil void dfs1(int x,int fa)\n{\n\tsiz[x]=1;son[x]=0;dep[x]=dep[fa]+1;f[x]=fa;\n\tfor(re int i=h[x];i;i=e[i].nxt)\n\t\tif(e[i].v^fa)\n\t\t{\n\t\t\tetp[(i+1)>>1]=e[i].v;\n\t\t\tW[e[i].v]=e[i].w;\n\t\t\tdfs1(e[i].v,x);\n\t\t\tsiz[x]+=siz[e[i].v];\n\t\t\tson[x]=siz[son[x]]<siz[e[i].v]?e[i].v:son[x];\n\t\t}\n}\n```\n\n \u6211\u4eec\u53ef\u4ee5\u5728\u7b2c\u4e00\u6b21$\\text{dfs}$\u4e2d\u5b58\u4e0b\u6bcf\u6761\u8fb9\u6307\u5411\u7684\u513f\u5b50\u7684\u7f16\u53f7\uff0c\u4e5f\u5c31\u4ee3\u7801\u4e2d\u7684`ept[]`\uff08$edge\\ to\\ point$\uff09\u3002\n\n\u89e3\u51b3\u4e86\u8fb9\u8f6c\u70b9\u7684\u95ee\u9898\u540e\uff0c\u6211\u4eec\u518d\u6765\u8003\u8651\u5982\u4f55\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u9898\u76ee\u8981\u6c42\u7684\u64cd\u4f5c\u3002 \n\n1. `C i` \u5c31\u662f\u5728$dfn[etp[i]]$\u4e0a\u5355\u70b9\u4fee\u6539\n\n   ```cpp\n   il void change1(int p,int pos,int x)\n   {\n   \tif(L[p]==R[p]){Sum[p]=Max[p]=Min[p]=x;return;}\n   \tre int mid=(L[p]+R[p])>>1;\n   \tpushdown(p);\n   \tif(pos>mid) change1(rs(p),pos,x);\n   \telse change1(ls(p),pos,x);\n   \tpushup(p);\n   }\n   \n   il void modify1(int p,int w){change1(1,dfn[p],w);}\n   \n   if(ch=='C') modify1(etp[u],v);\n   ```\n\n2. `N u v`\u533a\u95f4\u53d6\u53cd\uff0c\u4e5f\u5c31\u662f\u533a\u95f4\u4e58\u4ee5$-1$\uff08\u6ce8\u610f\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u8981\u4ea4\u6362\uff09\n\n   ``` cpp\n   il void pushdown(int p)\n   {\n   \tif(!lz[p]) return;\n   \tSum[ls(p)]*=-1;Sum[rs(p)]*=-1;\n   \tswap(Max[ls(p)],Min[ls(p)]);\n   \tswap(Max[rs(p)],Min[rs(p)]);\n   \tMax[ls(p)]*=-1;Min[ls(p)]*=-1;\n   \tMax[rs(p)]*=-1;Min[rs(p)]*=-1;\n   \tlz[ls(p)]^=1;lz[rs(p)]^=1;\n   \tlz[p]=0;\n   }\n   il void change2(int p,int l,int r)\n   {\n   \tif(L[p]>r||R[p]<l) return;\n   \tif(L[p]>=l&&R[p]<=r)\n   \t{\n   \t\tlz[p]^=1;\n   \t\tSum[p]*=-1;\n   \t\tswap(Max[p],Min[p]);\n   \t\tMax[p]*=-1;Min[p]*=-1;\n   \t\treturn;\n   \t}\n   \tpushdown(p);\n   \tchange2(ls(p),l,r);\n   \tchange2(rs(p),l,r);\n   \tpushup(p);\n   }\n   \n   il void modify2(int u,int v)\n   {\n   \twhile(top[u]^top[v])\n   \t{\n   \t\tif(dep[top[u]]<dep[top[v]]) swap(u,v);\n   \t\tchange2(1,dfn[top[u]],dfn[u]);\n   \t\tu=f[top[u]];\n   \t}\n   \tif(dep[u]<dep[v]) swap(u,v);\n   \tchange2(1,dfn[v]+1,dfn[u]);\n   }\n   \n   if(ch=='N') modify2(u+1,v+1);\n   ```\n\n3. `SUM u v`\u4e5f\u5c31\u662f\u533a\u95f4\u6c42\u548c\n\n   ```cpp\n   il int query1(int p,int l,int r)\n   {\n   \tif(L[p]>r||R[p]<l) return 0;\n   \tif(L[p]>=l&&R[p]<=r) return Sum[p];\n   \tpushdown(p);\n   \treturn query1(ls(p),l,r)+query1(rs(p),l,r);\n   }\n   \n   il int ask1(int u,int v)\n   {\n   \tre int res=0;\n   \twhile(top[u]^top[v])\n   \t{\n   \t\tif(dep[top[u]]<dep[top[v]]) swap(u,v);\n   \t\tres+=query1(1,dfn[top[u]],dfn[u]);\n   \t\tu=f[top[u]];\n   \t}\n   \tif(dep[u]<dep[v]) swap(u,v);\n   \tres+=query1(1,dfn[v]+1,dfn[u]);\n   \treturn res;\n   }\n   \n   if(ch=='S') print(ask1(u+1,v+1));\n   ```\n\n4. `MAX u v`\u548c`MIN u v`\u533a\u95f4\u6700\u503c\u67e5\u8be2\n\n   ```cpp\n   il int query2(int p,int l,int r)\n   {\n   \tif(L[p]>r||R[p]<l) return -inf;\n   \tif(L[p]>=l&&R[p]<=r) return Max[p];\n   \tpushdown(p);\n   \treturn max(query2(ls(p),l,r),query2(rs(p),l,r));\n   }\n   il int query3(int p,int l,int r)\n   {\n   \tif(L[p]>r||R[p]<l) return inf;\n   \tif(L[p]>=l&&R[p]<=r) return Min[p];\n   \tpushdown(p);\n   \treturn min(query3(ls(p),l,r),query3(rs(p),l,r));\n   }\n   \n   \n   il int ask2(int u,int v)\n   {\n   \tre int res=-inf;\n   \twhile(top[u]^top[v])\n   \t{\n   \t\tif(dep[top[u]]<dep[top[v]]) swap(u,v);\n   \t\tres=max(res,query2(1,dfn[top[u]],dfn[u]));\n   \t\tu=f[top[u]];\n   \t}\n   \tif(dep[u]<dep[v]) swap(u,v);\n   \tres=max(res,query2(1,dfn[v]+1,dfn[u]));\n   \treturn res;\n   }\n   il int ask3(int u,int v)\n   {\n   \tre int res=inf;\n   \twhile(top[u]^top[v])\n   \t{\n   \t\tif(dep[top[u]]<dep[top[v]]) swap(u,v);\n   \t\tres=min(res,query3(1,dfn[top[u]],dfn[u]));\n   \t\tu=f[top[u]];\n   \t}\n   \tif(dep[u]<dep[v]) swap(u,v);\n   \tres=min(res,query3(1,dfn[v]+1,dfn[u]));\n   \treturn res;\n   }\n   \n   if(ch=='A') print(ask2(u+1,v+1));\n   if(ch=='I') print(ask3(u+1,v+1));\n   ```\n\n\u5b8c\u6574\u4ee3\u7801\u592a\u957f\uff0c\u5c31\u4e0d\u7ed9\u4e86\u3002",
        "postTime": 1604468562,
        "uid": 209454,
        "name": "watermonster",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1505 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u65c5\u6e38\u3011"
    },
    {
        "content": "\u9898\u76ee\u5728\u8fd9\uff1a[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P1505)\n\n### \u505a\u6cd5\uff1aLink-Cut-Tree\u3002\n\n~~\u867d\u7136\u8fd9\u4e00\u9898\u7684\u6b63\u89e3\u662f\u91cd\u94fe\u5256\u5206\uff0c\u4f46\u662f\u56e0\u4e3a\u6211\u6700\u8fd1\u5728\u5237 LCT \u7684\u9898\u76ee\uff0c\u6240\u4ee5\u6211\u5728\u7528\u91cd\u94fe\u5256\u5206\u505a\u8fc7\u4e00\u6b21\u4e4b\u540e\uff0c\u53c8\u7528 LCT \u518d\u5199\u4e86\u4e00\u904d\u3002~~\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u6211\u4eec\u8fd9\u4e00\u9898\u4e0d\u662f\u6211\u4eec LCT \u6240\u719f\u6089\u7684\u70b9\u6743\uff0c\u800c\u662f\u8fb9\u6743\u3002\n\n#### \u90a3\u4e48\u6211\u4eec\u5c31\u8981\u601d\u8003\u5982\u4f55\u628a\u8fb9\u6743\u8f6c\u6362\u4e3a\u70b9\u6743\u3002\n\n\u56e0\u4e3a LCT \u7684\u7ed3\u6784\u4e0d\u50cf\u91cd\u94fe\u5256\u5206\u90a3\u6837\u662f\u56fa\u5b9a\u7684\uff0c\u800c\u662f\u4f1a\u6539\u53d8\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u628a\u8fb9\u6743\u4e0b\u65b9\u6210\u4e3a\u70b9\u6743\u3002\n\n\u600e\u4e48\u529e\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5bf9\u6bcf\u4e00\u6761\u8fb9\u90fd\u8f6c\u6362\u6210 LCT \u4e2d\u7684\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u628a\u7b2c $i$ \u6761\u8fb9\u6807\u53f7\u4e3a $n+i$ \u53f7\u70b9\uff0c\u7136\u540e\u53ea\u5728\u8fb9\u70b9\u4e0a\u8fdb\u884c\u5b58\u50a8\u503c\u3002\n\n\u9898\u76ee\u8981\u6c42\u6211\u4eec\u6539\u8fb9\u6743\u3001\u53d6\u76f8\u53cd\u6570\u3001\u6c42\u8fb9\u6743\u548c\u3001\u8fb9\u6743\u6700\u5927\u503c\u3001\u8fb9\u6743\u6700\u5c0f\u503c\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b9a\u4e49\u7ed3\u6784\u4f53\uff1a\n\n```cpp\nstruct splay{\n\tint fa,son[2];\n\tint maxn,minn;//\u5b58\u50a8\u6700\u5927\u3001\u6700\u5c0f\u503c\n\tint sum,val;//sum\u8868\u793a\u603b\u548c\uff0cval\u8868\u793a\u5f53\u524d\u70b9\u7684\u503c\n\tint rev,tag;//rev\u662f\u7ffb\u8f6c\u6807\u8bb0\uff0ctag\u662f\u53d6\u53cd\u6807\u8bb0\n};\nsplay spl[N];\n```\n\n\u7136\u540e\u6539\u52a8\u6bd4\u8f83\u5927\u7684\u4fbf\u662f pushup \u51fd\u6570\uff1a\n\n```cpp\ninline void pushup(int pos){\n\tint lson=spl[pos].son[0],rson=spl[pos].son[1];\n\tspl[pos].sum=spl[lson].sum+spl[rson].sum+spl[pos].val;//\u7edf\u8ba1\u548c\n\tspl[pos].maxn=pos>n?spl[pos].val:-INF;\n\t//\u7edf\u8ba1\u6700\u5927\u503c\u3002\u5982\u679c\u5b83\u662f\u8fb9\u70b9\uff08pos>n\uff09\uff0c\u5c31\u76f4\u63a5\u8d4b\u503c\u4e3aval\uff0c\u5426\u5219\u8d4b\u503c\u4e3a\u8d1f\u65e0\u7a77\n\tspl[pos].minn=pos>n?spl[pos].val:INF;\n\t//\u7edf\u8ba1\u6700\u5c0f\u503c\u3002\u5982\u679c\u5b83\u662f\u8fb9\u70b9\uff08pos>n\uff09\uff0c\u5c31\u76f4\u63a5\u8d4b\u503c\u4e3aval\uff0c\u5426\u5219\u8d4b\u503c\u4e3a\u6b63\u65e0\u7a77\n\tif(lson){//\u6ce8\u610f\u5982\u679c\u6709\u5de6\u513f\u5b50\u65f6\u624d\u7b97\u4e0a\u5de6\u513f\u5b50\n\t\tspl[pos].maxn=max(spl[pos].maxn,spl[lson].maxn);\n\t\tspl[pos].minn=min(spl[pos].minn,spl[lson].minn);\n\t}\n\tif(rson){//\u540c\u7406\n\t\tspl[pos].maxn=max(spl[pos].maxn,spl[rson].maxn);\n\t\tspl[pos].minn=min(spl[pos].minn,spl[rson].minn);\n\t}\n}\n```\n\n\u56e0\u4e3a\u6211\u4eec\u4e0b\u4f20\u6807\u8bb0\u65f6\u4e0d\u4ec5\u8981\u4e0b\u4f20 rev \u6807\u8bb0\uff0c\u8fd8\u8981\u4e0b\u4f20 tag \u6807\u8bb0\uff0c\u6240\u4ee5\u8981\u6539\u6539 pushdown\u3002\n\n```cpp\ninline void pushdown(int pos){\n\tif(spl[pos].rev){//rev\u6807\u8bb0\u7684\u4e0b\u4f20\n\t\tswap(spl[pos].son[0],spl[pos].son[1]);\n\t\tspl[spl[pos].son[0]].rev^=1;\n\t\tspl[spl[pos].son[1]].rev^=1;\n\t\tspl[pos].rev=0;\n\t}\n\tif(spl[pos].tag){//tag\u6807\u8bb0\u7684\u4e0b\u4f20\n\t\tint lson=spl[pos].son[0],rson=spl[pos].son[1];\n\t\tswap(spl[lson].maxn,spl[lson].minn);\n\t\tspl[lson].maxn=-spl[lson].maxn;\n\t\tspl[lson].minn=-spl[lson].minn;\n\t\tspl[lson].sum=-spl[lson].sum;\n\t\tspl[lson].val=-spl[lson].val;\n\t\tspl[lson].tag^=1;\n\t\tswap(spl[rson].maxn,spl[rson].minn);\n\t\tspl[rson].maxn=-spl[rson].maxn;\n\t\tspl[rson].minn=-spl[rson].minn;\n\t\tspl[rson].sum=-spl[rson].sum;\n\t\tspl[rson].val=-spl[rson].val;\n\t\tspl[rson].tag^=1;\n\t\tspl[pos].tag=0;\n\t}\n}\n```\n\n\u5176\u5b83\u7684\u5176\u5b9e\u548c\u6a21\u677f\u5dee\u4e0d\u591a\u4e86\u3002\n\nLCT \u867d\u662f1\u53ea log\uff0c\u4f46\u662f\u56e0\u4e3a\u5e38\u6570\u539f\u56e0\u8fd9\u4e00\u9898\u8fd8\u53ef\u80fd\u4f1aT\u3002\u6240\u4ee5\u5e94\u8be5\u4f7f\u7528\u4e00\u4e9b\u4f18\u5316\u3002~~\u5b9e\u5728\u4e0d\u884c\u53ef\u4ee5\u8bd5\u8bd5\u5438\u6c27\u3002~~\n\n\u653e\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\nconst int N=1e6+10,INF=2e9+10;\nstruct splay{\n\tint fa,son[2];\n\tint maxn,minn;\n\tint sum,val;\n\tint rev,tag;\n};\nsplay spl[N];\nstring s;\nint n;\ninline bool check_root(int pos){\n\treturn spl[spl[pos].fa].son[0]!=pos&&spl[spl[pos].fa].son[1]!=pos;\n}\ninline int relation(int pos,int fa){\n\treturn spl[fa].son[1]==pos;\n}\ninline void connect(int pos,int fa,int son){\n\tspl[pos].fa=fa;\n\tspl[fa].son[son]=pos;\n}\ninline void pushup(int pos){\n\tint lson=spl[pos].son[0],rson=spl[pos].son[1];\n\tspl[pos].sum=spl[lson].sum+spl[rson].sum+spl[pos].val;\n\tspl[pos].maxn=pos>n?spl[pos].val:-INF;\n\tspl[pos].minn=pos>n?spl[pos].val:INF;\n\tif(lson){\n\t\tspl[pos].maxn=max(spl[pos].maxn,spl[lson].maxn);\n\t\tspl[pos].minn=min(spl[pos].minn,spl[lson].minn);\n\t}\n\tif(rson){\n\t\tspl[pos].maxn=max(spl[pos].maxn,spl[rson].maxn);\n\t\tspl[pos].minn=min(spl[pos].minn,spl[rson].minn);\n\t}\n}\ninline void pushdown(int pos){\n\tif(spl[pos].rev){\n\t\tswap(spl[pos].son[0],spl[pos].son[1]);\n\t\tspl[spl[pos].son[0]].rev^=1;\n\t\tspl[spl[pos].son[1]].rev^=1;\n\t\tspl[pos].rev=0;\n\t}\n\tif(spl[pos].tag){\n\t\tint lson=spl[pos].son[0],rson=spl[pos].son[1];\n\t\tswap(spl[lson].maxn,spl[lson].minn);\n\t\tspl[lson].maxn=-spl[lson].maxn;\n\t\tspl[lson].minn=-spl[lson].minn;\n\t\tspl[lson].sum=-spl[lson].sum;\n\t\tspl[lson].val=-spl[lson].val;\n\t\tspl[lson].tag^=1;\n\t\tswap(spl[rson].maxn,spl[rson].minn);\n\t\tspl[rson].maxn=-spl[rson].maxn;\n\t\tspl[rson].minn=-spl[rson].minn;\n\t\tspl[rson].sum=-spl[rson].sum;\n\t\tspl[rson].val=-spl[rson].val;\n\t\tspl[rson].tag^=1;\n\t\tspl[pos].tag=0;\n\t}\n}\ninline void pushall(int pos){\n\tif(!check_root(pos))\n\t\tpushall(spl[pos].fa);\n\tpushdown(pos);\n}\nvoid rotate(int pos){\n\tint fa=spl[pos].fa,gf=spl[fa].fa;\n\tint t1=relation(pos,fa),t2=relation(fa,gf);\n\tconnect(spl[pos].son[t1^1],fa,t1);\n\tconnect(fa,pos,t1^1);\n\tspl[pos].fa=gf;\n\tif(spl[gf].son[t2]==fa)\n\t\tspl[gf].son[t2]=pos;\n\tpushup(fa);\n\tpushup(pos);\n}\nvoid splaying(int pos){\n\tpushall(pos);\n\twhile(!check_root(pos)){\n\t\tint fa=spl[pos].fa,gf=spl[fa].fa;\n\t\tif(!check_root(fa))\n\t\t\trelation(pos,fa)^relation(fa,gf)?rotate(pos):rotate(fa);\n\t\trotate(pos);\n\t}\n}\nvoid access(int pos){\n\tint son=0;\n\twhile(pos){\n\t\tsplaying(pos);\n\t\tspl[pos].son[1]=son;\n\t\tpushup(pos);\n\t\tson=pos;\n\t\tpos=spl[pos].fa;\n\t}\n}\nvoid make_root(int pos){\n\taccess(pos);\n\tsplaying(pos);\n\tspl[pos].rev^=1;\n}\nvoid link(int x,int y){\n\tmake_root(x);\n\tspl[x].fa=y;\n}\nvoid split(int x,int y){\n\tmake_root(x);\n\taccess(y);\n\tsplaying(y);\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tint x,y,z;\n\tfor(int i=1;i<=n-1;i++){\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tx++;\n\t\ty++;\n\t\tspl[n+i].maxn=spl[n+i].minn=spl[n+i].val=z;//\u8fb9\u8f6c\u70b9\n\t\tlink(x,n+i);\n\t\tlink(n+i,y);\n\t}\n\tint m;\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>s;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tswitch(s[0]){\n\t\t\tcase 'C':\n\t\t\t\tsplaying(n+x);\n\t\t\t\tspl[n+x].val=y;\n\t\t\t\tpushup(n+x);\n\t\t\t\tbreak;\n\t\t\tcase 'N':\n\t\t\t\tx++;\n\t\t\t\ty++;\n\t\t\t\tsplit(x,y);\n\t\t\t\tswap(spl[y].maxn,spl[y].minn);\n\t\t\t\tspl[y].maxn=-spl[y].maxn;\n\t\t\t\tspl[y].minn=-spl[y].minn;\n\t\t\t\tspl[y].sum=-spl[y].sum;\n\t\t\t\tspl[y].val=-spl[y].val;\n\t\t\t\tspl[y].tag^=1;\n\t\t\t\t//\u6ce8\u610f\u8981\u5728\u8fd9\u4fee\u6539y\n\t\t\t\tbreak;\n\t\t\tcase 'S':\n\t\t\t\tx++;\n\t\t\t\ty++;\n\t\t\t\tsplit(x,y);\n\t\t\t\tprintf(\"%d\\n\",spl[y].sum);\n\t\t\t\tbreak;\n\t\t\tcase 'M':\n\t\t\t\tx++;\n\t\t\t\ty++;\n\t\t\t\tsplit(x,y);\n\t\t\t\tif(s[1]=='A')\n\t\t\t\t\tprintf(\"%d\\n\",spl[y].maxn);\n\t\t\t\telse\n\t\t\t\t\tprintf(\"%d\\n\",spl[y].minn);\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n```\n\n\u53ef\u80fd\u662f\u6211\u7801\u98ce\u6bd4\u8f83\u602a\uff0c\u91cd\u94fe\u5256\u5206\u5199\u4e86 5KB\uff0c\u800c LCT \u53ea\u5199\u4e86 3KB\uff1b\u91cd\u94fe\u5256\u5206\u7684\u7533\u8bf7\u5185\u5b58\u4e3a 40MB\uff0c\u800c LCT \u53ea\u7528\u4e86 20MB\u3002\u5982\u679c\u4e0d\u8ba1\u5e38\u6570\uff0c\u90a3\u4e48LCT\u5219\u662f\u5728\u65f6\u590d\u3001\u7a7a\u590d\u3001\u4ee3\u7801\u957f\u5ea6\u4e0a\u5b8c\u80dc\u91cd\u94fe\u5256\u5206\u3002\u6240\u4ee5\u5efa\u8bae\u5b66\u4e60\u4e00\u4e0b\u3002",
        "postTime": 1608364683,
        "uid": 204705,
        "name": "KiDDOwithTopTree",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1505 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u65c5\u6e38\u3011"
    },
    {
        "content": "**\u8fd9\u7bc7\u9898\u89e3\u4e3b\u8981\u8bb2\u4ee3\u7801\u5b9e\u73b0\uff0c\u601d\u8def\u53ef\u80fd\u9700\u8981\u7167\u7740\u4ee3\u7801\u7406\u89e3\uff0c\u8bf7\u614e\u91cd\u9605\u8bfb**\n\n\u4e24\u5f20\u56fe\u7247\u6302\u4e86\uff0c\u91cd\u65b0\u4f20\u4e86\u4e00\u904d\u3002\n\n\u6700\u540e\u4ee3\u7801\u5199\u51fa\u67653.5Kb\uff0c\u4e0d\u5230150\u884c\uff0c\u76f8\u5bf9\u6765\u8bf4\u8fd8\u662f\u633a\u77ed\u7684...\n\n\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u8fb9\u5e26\u6743\uff0c\u7f16\u53f7 $0 \\sim n-1$\uff0c\u9700\u8981\u652f\u6301\u4e94\u79cd\u64cd\u4f5c\uff1a\n\n- `C i w` \u5c06\u8f93\u5165\u7684\u7b2c $i$ \u6761\u8fb9\u6743\u503c\u6539\u4e3a $w$\n- `N u v` \u5c06 $u,v$ \u8282\u70b9\u4e4b\u95f4\u7684\u8fb9\u6743\u90fd\u53d8\u4e3a\u76f8\u53cd\u6570\n- `SUM u v` \u8be2\u95ee $u,v$ \u8282\u70b9\u4e4b\u95f4\u8fb9\u6743\u548c\n- `MAX u v` \u8be2\u95ee $u,v$ \u8282\u70b9\u4e4b\u95f4\u8fb9\u6743\u6700\u5927\u503c\n- `MIN u v` \u8be2\u95ee $u,v$ \u8282\u70b9\u4e4b\u95f4\u8fb9\u6743\u6700\u5c0f\u503c\n\n\u4fdd\u8bc1\u4efb\u610f\u65f6\u523b\u6240\u6709\u8fb9\u7684\u6743\u503c\u90fd\u5728 $[-1000,1000]$ \u5185\u3002\n\n--------------------\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u6811\u94fe\u5256\u5206\u3002\n\n\u4e3b\u8981\u8bb2\u4ee3\u7801\u5b9e\u73b0\u3002\n\n\u9996\u5148\u56e0\u4e3a\u6811\u7684\u7f16\u53f7\u4e0d\u597d\u770b\uff0c\u6240\u4ee5\u90fd\u52a0\u4e00\u3002\n\n\u7136\u540e\u5206\u64cd\u4f5c\u8003\u8651\u3002\n\n\u6570\u7ec4\u5b9a\u4e49\u5199\u5728\u524d\u9762\uff1a\n\n```\ndep:\u6df1\u5ea6\nfa:\u7236\u4eb2\u7ed3\u70b9\nsz:\u5b50\u6811\u5927\u5c0f\nson:\u91cd\u513f\u5b50\nid:\u7ed3\u70b9\u5bf9\u5e94\u7684dfs\u5e8f\nrk:dfs\u5e8f\u5bf9\u5e94\u7684\u7ed3\u70b9\nID[i]:\u7528\u6765\u627f\u63a5 [\u6570\u7ec4\u4e2d\u5b58\u50a8\u7684\u7f16\u53f7\u4e3aid \u7684\u8fb9] \u7684\u4fe1\u606f\u7684\u70b9\u7f16\u53f7\na[u]:\u70b9u\u627f\u63a5\u4e0b\u6765\u7684\u4fe1\u606f\ntop:\u91cd\u94fe\u9876\u7aef\n\u7ebf\u6bb5\u6811\u7ed3\u70b9(\u52a8\u6001\u5f00\u70b9):{lc,rc(\u5de6\u53f3\u513f\u5b50),w(\u533a\u95f4\u548c),mx,mn(\u6781\u503c),f(=\u00b11,\u8868\u793a\u672a\u4e0b\u4f20\u7684\u53d6\u76f8\u53cd\u6570\u6807\u8bb0)}\n```\n\n\n\n#### Part 0 \u6574\u4f53\u601d\u8def\n\n\u56e0\u4e3a\u4f20\u7edf\u7684\u91cd\u94fe\u5256\u5206\u662f\u628a\u4fe1\u606f\u5bf9\u4e8e\u70b9\u6765\u50a8\u5b58\uff0c\u5bf9\u4e8e\u8fb9\u8003\u8651\u600e\u4e48\u7b97\u3002\n\n\u4e8e\u662f\u5c31\u6709\u4e00\u4e2a\u5f88\u6734\u7d20\u7684\u60f3\u6cd5\uff0c\u628a\u6bcf\u6761\u8fb9\u7684\u8fb9\u6743**\u4e0b\u6c89**\u5230\u5bf9\u5e94\u7684\u70b9\u3002\n\n\u4e5f\u5c31\u662f\u50cf\u4e0b\u9762\u8fd9\u6837\uff0c\u7528u\u53f7\u70b9\u6765\u627f\u63a5\u8fb9(f\u2192u)\u7684\u6743\u503c\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/0r46jfp6.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u56e0\u4e3a\u8f93\u5165\u7684\u8fb9\u4e0d\u4e00\u5b9a\u662f\u4ece\u7236\u4eb2\u5230\u513f\u5b50\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u628a\u8f93\u5165\u7684\u7b2c $i$ \u6761\u8fb9\u8bb0\u5f55\u5230\u6570\u7ec4\u91cc\u7b2c $2i,2i+1$ \u7684\u4f4d\u7f6e\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5728\u91cd\u94fe\u5256\u5206dfs\u7684\u65f6\u5019\uff0c\u5047\u8bbe\u901a\u8fc7\u70b9 $u$ \u8d70\u5230\u4e86 $v=to[i]$ \uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u627f\u63a5\u8fb9\u6743\u5230 $v$ \uff0c\u5373`a[v]=val[i]`\uff0c\u540c\u65f6\u4e3a\u4e86\u65b9\u4fbf\u4fee\u6539\u8fb9\u6743\u843d\u5b9e\u5230\u4fee\u6539\u70b9\u6743\uff0c\u8bb0\u5f55`ID[i/2]=v`\u3002\n\n\u7136\u540e\u8003\u8651\u8fd9\u6837\u4f1a\u5bf9\u67e5\u8be2\u64cd\u4f5c\u6709\u4ec0\u4e48\u5f71\u54cd\uff0c\u663e\u7136\u5982\u4e0b\u56fe\uff1a\n\n![image-20210309213411599](https://cdn.luogu.com.cn/upload/image_hosting/u65pyci4.png)\n\n\u6211\u4eec\u8981\u6c42 $u,v$ \u4e4b\u95f4\u7684\u8fb9\u6743\u4fe1\u606f\uff0c\u4f46\u662f\u5e38\u89c4\u7684\u91cd\u94fe\u5256\u5206\u4f1a\u628a\u4e0a\u9762\u6253\u00d7\u7684\u8fb9\u4e5f\u7edf\u8ba1\u3002\n\n\u8fd9\u4e2a\u89e3\u51b3\u5c31\u8003\u8651\u6811\u94fe\u5256\u5206\u67e5\u8be2\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u6700\u7ec8\u4f1a\u6709\u4e00\u6bb5\u5bf9\u4e8e `id[x],id[y]` \u7684\u67e5\u8be2 (`id[x]<id[y]`) \uff0c\u662f\u5728\u540c\u4e00\u6761\u91cd\u94fe\u4e0a\u7684\uff0c\u90a3\u4e48\u5bf9\u5e94\u7684 `id[x]+1,id[y]` \u5c31\u4e0d\u5305\u62ec\u5b83\u4eec\u7684LCA x\u3002\n\n\u4e8e\u662f\u8fd9\u4e2a\u95ee\u9898\u4e5f\u89e3\u51b3\u4e86\u3002\u5c31\u53ef\u4ee5\u5f00\u59cb\u5e72\u4ee3\u7801\u4e86\u3002\n\n\u5148\u6709\u4e09\u4e2a\u57fa\u7840\u7684\u51fd\u6570\u653e\u5728\u8fd9\u91cc\u3002\n\n```\nvoid up(int k){\n\tt[k].w=t[ls].w+t[rs].w,t[k].mx=max(t[ls].mx,t[rs].mx),t[k].mn=min(t[ls].mn,t[rs].mn);\n}\nvoid down(int k){\n\tif(t[k].f==1)return;\n\topp(ls),opp(rs),t[k].f=1;\n}\nvoid opp(int k){\n\tswap(t[k].mn,t[k].mx),t[k].mn*=-1,t[k].mx*=-1,t[k].w*=-1,t[k].f*=-1;\n}\n```\n\n\u5206\u522b\u662f\u7ebf\u6bb5\u6811\u7684`push_up,push_down`\u548c\u628a\u7ed3\u70b9 $k$ \u6574\u4f53\u53d6\u53cd\u3002\n\n\u8fd9\u91cc\u8bf4\u4e0b\u6574\u4f53\u53d6\u53cd\u3002\u663e\u7136\u5c31\u662f\u65b0\u7684\u6700\u5c0f\u503c\u7b49\u4e8e\u539f\u6765\u6700\u5927\u503c\u7684\u76f8\u53cd\u6570\uff0c\u6700\u5927\u503c\u540c\u7406\u3002\u6743\u503c\u548c\u5c31\u7b49\u4e8e\u4e4b\u524d\u7684\u76f8\u53cd\u6570\u3002\n\n\u6ce8\u610f\uff1a\u8fd9\u91cc\u7684 $f$ \u662f\u8fd8\u6ca1\u6709\u4f20\u4e0b\u53bb\u7684\u6807\u8bb0\uff0c\u4e0d\u80fd\u62b5\u6d88\u5c06\u8981\u6253\u5728\u81ea\u5df1\u8eab\u4e0a\u7684\u53d6\u53cd\u64cd\u4f5c\u3002\n\n----------\n\n#### Part 1 \u5355\u70b9\u8d4b\u503c\n\n\u8fd9\u4e2a\u662f\u57fa\u7840\u7ebf\u6bb5\u6811\u64cd\u4f5c\uff0c\u8f93\u5165\u628a\u8fb9 $u$ \u8d4b\u503c\u4e3a $w$ \uff0c\u90a3\u5c31\u628a\u7ebf\u6bb5\u6811\u4e0a\u7684 `id[ID[u]]` \u8d4b\u503c\u6210 $w$ \u3002\n\n```\nvoid modify(int k,int l,int r,int pos,int x){//\u5355\u70b9pos\u8d4b\u503cx \n\tif(l==r)return t[k].w=t[k].mx=t[k].mn=x,void();\n\tdown(k);\n\tint m=l+r>>1;\n\tif(pos<=m)modify(ls,l,m,pos,x);\n\telse modify(rs,m+1,r,pos,x);\n\tup(k);\n}\n```\n\n-------------------\n\n#### Part 2 \u4e24\u70b9\u8def\u5f84\u53d6\u76f8\u53cd\u6570\n\n\u5148\u662f\u5e38\u89c4\u5957\u8def\uff0c\u628a\u7ebf\u6bb5\u6811\u4e0a\u7684\u4e00\u6bb5\u7ed9\u53d6\u76f8\u53cd\u6570\u3002\n\n\u8fd9\u4e2a\u663e\u7136\u4e5f\u662f\u57fa\u7840\u7684\u7ebf\u6bb5\u6811\u7684\u64cd\u4f5c\u3002\n\n```\nvoid md(int k,int l,int r,int x,int y){//\u4e00\u6bb5\u53d6\u53cd \n\tif(x<=l&&r<=y)return opp(k);\n\tdown(k);\n\tint m=l+r>>1;\n\tif(x<=m)md(ls,l,m,x,y);\n\tif(y>m)md(rs,m+1,r,x,y);\n\tup(k);\n}\n```\n\n\u7136\u540e\u4e5f\u662f\u91cd\u94fe\u5256\u5206\u7684\u677f\u5b50\u3002\n\n\u6ce8\u610f\u8fd9\u91cc\u7684`if(x==y)return;` \uff0c\u56e0\u4e3a\u5982\u679c\u6700\u540ex,y\u91cd\u5408\uff0c\u8868\u793a\u5b83\u4eec\u90fd\u662f\u8f93\u5165\u7684x,y\u7684LCA\uff0c\u90a3\u4e48\u8d21\u732e\u5c31\u4e0d\u80fd\u8bb0\u5f55\u5230\u7b54\u6848\u91cc\u3002\n\n```\nvoid modi(int x,int y){\n\twhile(top[x]!=top[y]){\n\t\tif(dep[top[x]]<dep[top[y]])swap(x,y);\n\t\tmd(1,1,n,id[top[x]],id[x]);\n\t\tx=fa[top[x]];\n\t}\n\tif(x==y)return;\n\tif(id[x]>id[y])swap(x,y);\n\tmd(1,1,n,id[x]+1,id[y]);\n}\n```\n\n--------------------\n\n#### Part 3 \u4e09\u79cd\u67e5\u8be2\n\n\u53d1\u73b0\u8fd9\u4e09\u79cd\u67e5\u8be2\u672c\u8d28\u76f8\u540c\u3002\n\n\u4e8e\u662f\u4ee3\u7801\u57fa\u672c\u5c31\u548c\u6811\u94fe\u5256\u5206\u677f\u5b50\u4e00\u6837\u4e86\u3002\n\n```\nvoid ask_xds(int k,int l,int r,int x,int y,int op){//1:sum 2:max 3:min\n\tif(x<=l&&r<=y){\n\t\tif(op==1)res+=t[k].w;\n\t\tif(op==2)res=max(res,t[k].mx);\n\t\tif(op==3)res=min(res,t[k].mn);\n\t\treturn;\n\t}\n\tdown(k);\n\tint m=l+r>>1;\n\tif(x<=m)ask_xds(ls,l,m,x,y,op);\n\tif(y>m)ask_xds(rs,m+1,r,x,y,op);\n\tup(k);\n}\nint ask(int x,int y,int op){//1:sum 2:max 3:min\n\t int ans=op==1?0:(op==2?-1e9:1e9);\n\t while(top[x]!=top[y]){\n\t \tif(dep[top[x]]<dep[top[y]])swap(x,y);\n\t\tres=op==1?0:(op==2?-1e9:1e9);\n\t\task_xds(1,1,n,id[top[x]],id[x],op);\n\t\tif(op==1)ans+=res;\n\t\tif(op==2)ans=max(ans,res);\n\t\tif(op==3)ans=min(ans,res);\n\t\tx=fa[top[x]];\n\t }\n\t if(id[x]>id[y])swap(x,y);\n\t if(x==y)return ans;\n\t res=op==1?0:(op==2?-1e9:1e9);\n\t ask_xds(1,1,n,id[x]+1,id[y],op);\n\tif(op==1)ans+=res;\n\tif(op==2)ans=max(ans,res);\n\tif(op==3)ans=min(ans,res);\n\treturn ans;\n}\n```\n\n------------------------\n\n\n\n[\u5b8c\u6574\u4ee3\u7801Link](https://www.luogu.com.cn/paste/n4yj1h3w)\n\n",
        "postTime": 1615298006,
        "uid": 173685,
        "name": "\u6478\u9c7c\u9171",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1505 [\u56fd\u5bb6\u96c6\u8bad\u961f]\u65c5\u6e38"
    },
    {
        "content": "# Problem\r\n\u7ef4\u62a4\u4e00\u68f5\u6811\uff0c\u67095\u79cd\u64cd\u4f5c\r\n\r\n- \u4e00\u6761\u94fe\u53d6\u53cd\r\n- \u4e00\u6761\u8fb9\u6c42\u53cd\r\n- \u4e00\u6761\u94fe\u4e0a\u6c42\u548c\u3001\u6700\u5927\u3001\u5c0f\u503c\r\n\r\n# Solution\r\n- \u6811\u94fe\u5256\u5206\uff0c\u7136\u540e\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\r\n\r\n# Code\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int N=800005;\r\nchar opt[10];\r\nint ne[N],tot,fi[N],zz[N],size[N],sd[N],fa[N],w[N],son[N],sl[N],x,y,z,u[N];\r\nint v[N],n,m,top[N],id[N],rk[N];\r\nstruct Tree{\r\n\tint l,r,num1,num2,num3,flag2;\r\n}T[N*4];\r\nvoid jb(int x,int y,int z){\r\n\tne[++tot]=fi[x];\r\n\tfi[x]=tot;\r\n\tzz[tot]=y;\r\n\tsl[tot]=z;\r\n}\r\nvoid dfs1(int x,int y,int z){\r\n\tsize[x]=1;sd[x]=z;fa[x]=y;\r\n\tfor (int i=fi[x];i;i=ne[i])\r\n\t\tif (zz[i]!=y){\r\n\t\t\tw[zz[i]]=sl[i];\r\n\t\t\tdfs1(zz[i],x,z+1);\r\n\t\t\tsize[x]+=size[zz[i]];\r\n\t\t\tif (size[zz[i]]>size[son[x]])son[x]=zz[i];\r\n\t\t}\r\n}\r\nvoid dfs2(int x,int y){\r\n\ttop[x]=y;rk[x]=++tot;id[tot]=x;\r\n\tif (son[x])dfs2(son[x],y);\r\n\tfor (int i=fi[x];i;i=ne[i])\r\n\t\tif (zz[i]!=fa[x]&&zz[i]!=son[x])dfs2(zz[i],zz[i]);\r\n}\r\nint len(int x){\r\n\treturn T[x].r-T[x].l+1;\r\n}\r\nvoid update(int x){\r\n\tT[x].num1=T[x*2].num1+T[x*2+1].num1;\r\n\tT[x].num2=max(T[x*2].num2,T[x*2+1].num2);\r\n\tT[x].num3=min(T[x*2].num3,T[x*2+1].num3);\r\n}\r\nvoid down(int x){\r\n\tif (T[x].flag2){\r\n\t\tT[x].flag2=0;\r\n\t\tif (T[x].l==T[x].r)return;\r\n\t\tT[x*2].flag2^=1;\r\n\t\tT[x*2+1].flag2^=1;\r\n\t\tT[x*2].num1*=-1;\r\n\t\tT[x*2+1].num1*=-1;\r\n\t\tswap(T[x*2].num2,T[x*2].num3);\r\n\t\tswap(T[x*2+1].num2,T[x*2+1].num3);\r\n\t\tT[x*2].num2*=-1;\r\n\t\tT[x*2+1].num2*=-1;\r\n\t\tT[x*2].num3*=-1;\r\n\t\tT[x*2+1].num3*=-1;\r\n\t}\r\n}\r\nvoid build(int x,int l,int r){\r\n\tT[x].l=l;T[x].r=r;\r\n\tif (l==r){\r\n\t\tT[x].flag2=0;\r\n\t\tT[x].num1=T[x].num2=T[x].num3=w[id[l]];\r\n\t\treturn;\r\n\t}\r\n\tint mid=(l+r)/2;\r\n\tbuild(x*2,l,mid);\r\n\tbuild(x*2+1,mid+1,r);\r\n\tupdate(x);\r\n}\r\nvoid insert1(int x,int y,int z){\r\n\tif (T[x].l==T[x].r){\r\n\t\tT[x].num1=T[x].num2=T[x].num3=z;\r\n\t\treturn;\r\n\t}\r\n\tdown(x);\r\n\tint mid=(T[x].l+T[x].r)/2;\r\n\tif (y<=mid)insert1(x*2,y,z);\r\n\telse insert1(x*2+1,y,z);\r\n\tupdate(x);\r\n}\r\nvoid insert2(int x,int l,int r){\r\n\tif (l>T[x].r||T[x].l>r)return;\r\n\tif (T[x].l>=l&&T[x].r<=r){\r\n\t\tT[x].num1=-T[x].num1;\r\n\t\tswap(T[x].num2,T[x].num3);\r\n\t\tT[x].num2=-T[x].num2;\r\n\t\tT[x].num3=-T[x].num3;\r\n\t\tT[x].flag2^=1;\r\n\t\treturn;\r\n\t}\r\n\tdown(x);\r\n\tinsert2(x*2,l,r);\r\n\tinsert2(x*2+1,l,r);\r\n\tupdate(x);\r\n}\r\nint ask1(int x,int l,int r){\r\n\tif (T[x].l>r||l>T[x].r)return 0;\r\n\tif (T[x].l>=l&&T[x].r<=r)return T[x].num1;\r\n\tdown(x);\r\n\treturn ask1(x*2,l,r)+ask1(x*2+1,l,r);\r\n}\r\nint ask2(int x,int l,int r){\r\n\tif (T[x].l>r||l>T[x].r)return -2e9;\r\n\tif (T[x].l>=l&&T[x].r<=r)return T[x].num2;\r\n\tdown(x);\r\n\treturn max(ask2(x*2,l,r),ask2(x*2+1,l,r));\r\n}\r\nint ask3(int x,int l,int r){\r\n\tif (T[x].l>r||l>T[x].r)return 2e9;\r\n\tif (T[x].l>=l&&T[x].r<=r)return T[x].num3;\r\n\tdown(x);\r\n\treturn min(ask3(x*2,l,r),ask3(x*2+1,l,r));\r\n}\r\nint find1(int x,int y){\r\n\tint ans=0,fx=top[x],fy=top[y];\r\n\twhile (fx!=fy){\r\n\t\tif (sd[fx]<sd[fy]){\r\n\t\t\tswap(x,y);\r\n\t\t\tswap(fx,fy);\r\n\t\t}\r\n\t\tans+=ask1(1,rk[fx],rk[x]);\r\n\t\tx=fa[fx];fx=top[x];\r\n\t}\r\n\tif (x==y)return ans;\r\n\tif (sd[x]<sd[y])swap(x,y);\r\n\tans+=ask1(1,rk[y]+1,rk[x]);\r\n\treturn ans;\r\n}\r\nint find2(int x,int y){\r\n\tint ans=-2e9,fx=top[x],fy=top[y];\r\n\twhile (fx!=fy){\r\n\t\tif (sd[fx]<sd[fy]){\r\n\t\t\tswap(x,y);\r\n\t\t\tswap(fx,fy);\r\n\t\t}\r\n\t\tans=max(ans,ask2(1,rk[fx],rk[x]));\r\n\t\tx=fa[fx];fx=top[x];\r\n\t}\r\n\tif (x==y)return ans;\r\n\tif (sd[x]<sd[y])swap(x,y);\r\n\tans=max(ans,ask2(1,rk[y]+1,rk[x]));\r\n\treturn ans;\r\n}\r\nint find3(int x,int y){\r\n\tint ans=2e9,fx=top[x],fy=top[y];\r\n\twhile (fx!=fy){\r\n\t\tif (sd[fx]<sd[fy]){\r\n\t\t\tswap(x,y);\r\n\t\t\tswap(fx,fy);\r\n\t\t}\r\n\t\tans=min(ans,ask3(1,rk[fx],rk[x]));\r\n\t\tx=fa[fx];fx=top[x];\r\n\t}\r\n\tif (x==y)return ans;\r\n\tif (sd[x]<sd[y])swap(x,y);\r\n\tans=min(ans,ask3(1,rk[y]+1,rk[x]));\r\n\treturn ans;\r\n}\r\nvoid change(int x,int y){\r\n\tint fx=top[x],fy=top[y];\r\n\twhile (fx!=fy){\r\n\t\tif (sd[fx]<sd[fy]){\r\n\t\t\tswap(fx,fy);\r\n\t\t\tswap(x,y);\r\n\t\t}\r\n\t\tinsert2(1,rk[fx],rk[x]);\r\n\t\tx=fa[fx];fx=top[x];\r\n\t}\r\n\tif (x==y)return;\r\n\tif (sd[x]<sd[y])swap(x,y);\r\n\tinsert2(1,rk[y]+1,rk[x]);\r\n}\r\nsigned main(){\r\n\tscanf(\"%d\",&n);\r\n\tfor (int i=1;i<n;i++){\r\n\t\tscanf(\"%d%d%d\",&u[i],&v[i],&z);\r\n\t\tu[i]++;v[i]++;\r\n\t\tjb(u[i],v[i],z);jb(v[i],u[i],z);\r\n\t}\r\n\ttot=0;\r\n\tdfs1(1,0,0);\r\n\tdfs2(1,1);\r\n\tscanf(\"%d\",&m);\r\n\tbuild(1,1,n);\r\n\twhile (m--){\r\n\t\tscanf(\"%s\",opt);\r\n\t\tif (opt[0]=='S'){\r\n\t\t\tscanf(\"%d%d\",&x,&y);\r\n\t\t\tx++;y++;\r\n\t\t\tprintf(\"%d\\n\",find1(x,y));\r\n\t\t}\r\n\t\telse if (opt[0]=='C'){\r\n\t\t\tscanf(\"%d%d\",&x,&y);\r\n\t\t\tif (fa[u[x]]==v[x])insert1(1,rk[u[x]],y);\r\n\t\t\telse insert1(1,rk[v[x]],y);\r\n\t\t}\r\n\t\telse if (opt[0]=='N'){\r\n\t\t\tscanf(\"%d%d\",&x,&y);\r\n\t\t\tx++;y++;\r\n\t\t\tchange(x,y);\r\n\t\t}\r\n\t\telse if (opt[1]=='A'){\r\n\t\t\tscanf(\"%d%d\",&x,&y);\r\n\t\t\tx++;y++;\r\n\t\t\tprintf(\"%d\\n\",find2(x,y));\r\n\t\t}\r\n\t\telse if (opt[1]=='I'){\r\n\t\t\tscanf(\"%d%d\",&x,&y);\r\n\t\t\tx++;y++;\r\n\t\t\tprintf(\"%d\\n\",find3(x,y));\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n```",
        "postTime": 1549955476,
        "uid": 31732,
        "name": "\u5ba3\u6bc5\u9e23",
        "ccfLevel": 10,
        "title": "P1505"
    },
    {
        "content": "## \u9898\u89e3\uff1a\n\n\u5de8\u7ec6\u8282\u7684\u4e00\u9053\u9898\u3002\n\n\u5173\u4e8e\u4e4b\u524d\u7684\u9898\u89e3\uff08\u622a\u6b62\u81f32020.10.21\u4e4b\u524d\uff09\u4e3a\u4ec0\u4e48\u9519\u4e86\uff0c\u8bf7\u89c1\u8fd9\u4e2a\u8ba8\u8bba\uff1a\n\n[\u5173\u4e8e\u9898\u89e3\u9519\u8bef\u7684\u4e00\u4e9b\u770b\u6cd5](https://www.luogu.com.cn/discuss/show/268369)\n\n\u611f\u8c22\u7ba1\u7406\u5458\u7684\u5173\u6ce8\u548c\u5904\u7406\u3002\n\n\u5f88\u660e\u663e\u7684\u6811\u5256\u9898\u3002\n\n\u6811\u5256\u4e0d\u4f1a\u7684\u8d70\u8fd9\u8fb9\uff1a\n\n[\u6d45\u8c08\u6811\u94fe\u5256\u5206](https://www.cnblogs.com/fusiwei/p/11519470.html)\n\n\u9996\u5148\u8981\u8fb9\u8f6c\u70b9\uff0c\u8fb9\u8f6c\u70b9\u7684\u89c4\u5219\u662f\u628a\u8fb9\u6743\u8f6c\u5230\u513f\u5b50\u8282\u70b9\u4e0a\u3002\u8fd9\u6837\u5728\u94fe\u4fee\u6539\u7684\u65f6\u5019\uff0c\u8981\u5228\u9664LCA\u7684\u70b9\u6743\u3002\u5f88\u597d\u7406\u89e3\u3002\n\n\u7136\u540e\u662f\u53d6\u76f8\u53cd\u6570\u7684\u64cd\u4f5c\u3002\u7ef4\u62a4\u4e00\u4e2alazy\u6807\u8bb0\uff0c\u5728\u6253\u6807\u8bb0\u7684\u65f6\u5019\u5bb9\u6613\u53d1\u73b0\u7684\u6027\u8d28\u662f\uff1a\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u4e0a\u7684\u5f53\u524d\u8282\u70b9\uff0c\u65b0\u548c\u5c31\u662f\u548c\u53d6\u53cd\uff0c\u65b0\u6700\u5927\u503c\u662f\u539f\u6700\u5c0f\u503c\u53d6\u53cd\uff0c\u65b0\u6700\u5c0f\u503c\u662f\u539f\u6700\u5927\u503c\u53d6\u53cd\u3002\n\n\u90a3\u4e48\u8fd9\u9053\u9898\u7684\u601d\u7ef4\u90e8\u5206\u5c31\u5b8c\u4e8b\u4e86\uff0c\u65e0\u8111\u5f00\u7801\u5373\u53ef\u3002\n\n\u6ce8\u610f\u51e0\u4e2a\u849f\u84bb\u66fe\u7ecf\u9519\u8fc7\u7684\u7ec6\u8282\uff1a\n\n\u9996\u5148\uff0c\u5228\u9664LCA\u70b9\u6743\u65f6\uff0c\u8981\u5224\u65adx,y\u662f\u5426\u5728\u4e00\u4e2a\u70b9\u4e0a\uff0c\u8fd9\u65f6\u4e0d\u9700\u8981\u5228\uff0c\u76f4\u63a5\u8fd4\u56de\u5c31\u884c\u3002\n\n\u4e4b\u540e\uff0clazy\u6807\u8bb0\u6709\u6ca1\u6709\u91cd\u590d\u6807\u8bb0\u3002\u8fd9\u662f\u6307\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u6253\u4e24\u6b21lazy\u6807\u8bb0\u7b49\u4e8e\u6ca1\u6253\u6807\u8bb0\u3002\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u5f02\u6216\u8fd0\u7b97\u6765\u7ef4\u62a4\u3002\n\n\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528\u7ed3\u6784\u4f53\u5b58\u7ebf\u6bb5\u6811\uff0c\u7801\u91cf\u4f1a\u5c11\u5f88\u591a\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u50cf\u849f\u84bb\uff0c\u5199\u5f88\u591a\u51fd\u6570\u6765\u7ef4\u62a4\u4e09\u4e2a\u4e0d\u540c\u503c\uff0c\u6548\u679c\u662f\u4e00\u6837\u7684\u3002\n\n\u9644\u4e0a5K\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define lson pos<<1\n#define rson pos<<1|1\nusing namespace std;\nconst int maxn=2*1e5+10;\nconst int INF=1e9;\nint n,m;\nint tot,head[maxn],to[maxn<<1],nxt[maxn<<1],val[maxn<<1];\nint cnt,son[maxn],top[maxn],id[maxn],deep[maxn],fa[maxn],size[maxn],a[maxn],w[maxn];\nchar opt[10];\nint sum[maxn<<2],mx[maxn<<2],mn[maxn<<2];\nint lazy[maxn<<2];\nstruct edge\n{\n\tint x,y;\n}idx[maxn];\nint read()\n{\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<48||ch>57)\n\t\tif(ch=='-')\n\t\t\tf=-1,ch=getchar();\n\twhile(ch>=48&&ch<=57)\n\t\tx=x*10+ch-48,ch=getchar();\n\treturn x*f;\n}\nvoid add(int x,int y,int z)\n{\n\tto[++tot]=y;\n\tnxt[tot]=head[x];\n\tval[tot]=z;\n\thead[x]=tot;\n}\nvoid dfs1(int x,int f)\n{\n\tdeep[x]=deep[f]+1;\n\tfa[x]=f;\n\tsize[x]=1;\n\tfor(int i=head[x];i;i=nxt[i])\n\t{\n\t\tint y=to[i];\n\t\tif(y==f)\n\t\t\tcontinue;\n\t\tdfs1(y,x);\n\t\ta[y]=val[i];\n\t\tsize[x]+=size[y];\n\t\tif(!son[x]||size[y]>size[son[x]])\n\t\t\tson[x]=y;\n\t}\n}\nvoid dfs2(int x,int t)\n{\n\ttop[x]=t;\n\tid[x]=++cnt;\n\tw[cnt]=a[x];\n\tif(!son[x])\n\t\treturn;\n\tdfs2(son[x],t);\n\tfor(int i=head[x];i;i=nxt[i])\n\t{\n\t\tint y=to[i];\n\t\tif(y==fa[x]||y==son[x])\n\t\t\tcontinue;\n\t\tdfs2(y,y);\n\t}\n}\nvoid pushup(int pos)\n{\n\tsum[pos]=sum[lson]+sum[rson];\n\tmx[pos]=max(mx[lson],mx[rson]);\n\tmn[pos]=min(mn[lson],mn[rson]);\n}\nvoid build(int pos,int l,int r)\n{\n\tint mid=(l+r)>>1;\n\tif(l==r)\n\t{\n\t\tsum[pos]=mx[pos]=mn[pos]=w[l];\n\t\treturn;\n\t}\n\tbuild(lson,l,mid);\n\tbuild(rson,mid+1,r);\n\tpushup(pos);\n}\nvoid mark(int pos,int l,int r)\n{\n\tlazy[pos]^=1;\n\tint tmp1=-sum[pos],tmp2=-mn[pos],tmp3=-mx[pos];\n\tsum[pos]=tmp1;\n\tmx[pos]=tmp2;\n\tmn[pos]=tmp3;\n}\nvoid pushdown(int pos,int l,int r)\n{\n\tint mid=(l+r)>>1;\n\tif(lazy[pos])\n\t{\n\t\tmark(lson,l,mid);\n\t\tmark(rson,mid+1,r);\n\t\tlazy[pos]=0;\n\t}\n}\nvoid update(int pos,int l,int r,int x,int k)\n{\n\tint mid=(l+r)>>1;\n\tif(l==r)\n\t{\n\t\tsum[pos]=mx[pos]=mn[pos]=k;\n\t\treturn;\n\t}\n\tpushdown(pos,l,r);\n\tif(x<=mid)\n\t\tupdate(lson,l,mid,x,k);\n\telse\n\t\tupdate(rson,mid+1,r,x,k);\n\tpushup(pos);\n}\nvoid change(int pos,int l,int r,int x,int y)\n{\n\tint mid=(l+r)>>1;\n\tif(x<=l && r<=y)\n\t{\n\t\tmark(pos,l,r);\n\t\treturn;\n\t}\n\tpushdown(pos,l,r);\n\tif(x<=mid)\n\t\tchange(lson,l,mid,x,y);\n\tif(y>mid)\n\t\tchange(rson,mid+1,r,x,y);\n\tpushup(pos);\n}\nint query_sum(int pos,int l,int r,int x,int y)\n{\n\tint ret=0;\n\tint mid=(l+r)>>1;\n\tif(x<=l && r<=y)\n\t\treturn sum[pos];\n\tpushdown(pos,l,r);\n\tif(x<=mid)\n\t\tret+=query_sum(lson,l,mid,x,y);\n\tif(y>mid)\n\t\tret+=query_sum(rson,mid+1,r,x,y);\n\treturn ret;\n}\nint query_max(int pos,int l,int r,int x,int y)\n{\n\tint ret=-INF;\n\tint mid=(l+r)>>1;\n\tif(x<=l && r<=y)\n\t\treturn mx[pos];\n\tpushdown(pos,l,r);\n\tif(x<=mid)\n\t\tret=max(ret,query_max(lson,l,mid,x,y));\n\tif(y>mid)\n\t\tret=max(ret,query_max(rson,mid+1,r,x,y));\n\treturn ret;\n}\nint query_min(int pos,int l,int r,int x,int y)\n{\n\tint ret=INF;\n\tint mid=(l+r)>>1;\n\tif(x<=l && r<=y)\n\t\treturn mn[pos];\n\tpushdown(pos,l,r);\n\tif(x<=mid)\n\t\tret=min(ret,query_min(lson,l,mid,x,y));\n\tif(y>mid)\n\t\tret=min(ret,query_min(rson,mid+1,r,x,y));\n\treturn ret;\n}\nvoid chain_upd(int x,int y)\n{\n\twhile(top[x]!=top[y])\n\t{\n\t\tif(deep[top[x]]<deep[top[y]])\n\t\t\tswap(x,y);\n\t\tchange(1,1,n,id[top[x]],id[x]);\n\t\tx=fa[top[x]];\n\t}\n\tif(deep[x]<deep[y])\n\t\tswap(x,y);\n\tif(x!=y)\n\t\tchange(1,1,n,id[y]+1,id[x]);\n}\nint q_sum(int x,int y)\n{\n\tint ret=0;\n\twhile(top[x]!=top[y])\n\t{\n\t\tif(deep[top[x]]<deep[top[y]])\n\t\t\tswap(x,y);\n\t\tret+=query_sum(1,1,n,id[top[x]],id[x]);\n\t\tx=fa[top[x]];\n\t}\n\tif(deep[x]<deep[y])\n\t\tswap(x,y);\n\tif(x!=y)\n\t\tret+=query_sum(1,1,n,id[y]+1,id[x]);\n\treturn ret;\n}\nint q_max(int x,int y)\n{\n\tint ret=-INF;\n\twhile(top[x]!=top[y])\n\t{\n\t\tif(deep[top[x]]<deep[top[y]])\n\t\t\tswap(x,y);\n\t\tret=max(ret,query_max(1,1,n,id[top[x]],id[x]));\n\t\tx=fa[top[x]];\n\t}\n\tif(deep[x]<deep[y])\n\t\tswap(x,y);\n\tif(x!=y)\n\t\tret=max(ret,query_max(1,1,n,id[y]+1,id[x]));\n\treturn ret;\n}\nint q_min(int x,int y)\n{\n\tint ret=INF;\n\twhile(top[x]!=top[y])\n\t{\n\t\tif(deep[top[x]]<deep[top[y]])\n\t\t\tswap(x,y);\n\t\tret=min(ret,query_min(1,1,n,id[top[x]],id[x]));\n\t\tx=fa[top[x]];\n\t}\n\tif(deep[x]<deep[y])\n\t\tswap(x,y);\n\tif(x!=y)\n\t\tret=min(ret,query_min(1,1,n,id[y]+1,id[x]));\n\treturn ret;\n}\nint main()\n{\n\tn=read();\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint x,y,z;\n\t\tx=read();y=read();z=read();\n\t\tx++,y++;\n\t\tidx[i].x=x;\n\t\tidx[i].y=y;\n\t\tadd(x,y,z);\n\t\tadd(y,x,z);\n\t}\n\tdfs1(1,0);\n\tdfs2(1,1);\n\tbuild(1,1,n);\n\tm=read();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint a,b;\n\t\tscanf(\"%s%d%d\",opt+1,&a,&b);\n\t\tif(opt[1]=='C')\n\t\t{\n\t\t\tint goal=deep[idx[a].x]>deep[idx[a].y]?idx[a].x:idx[a].y;\n\t\t\tupdate(1,1,n,id[goal],b);\n\t\t}\n\t\telse if(opt[1]=='N')\n\t\t{\n\t\t\ta++,b++;\n\t\t\tchain_upd(a,b);\n\t\t}\n\t\telse if(opt[1]=='S')\n\t\t{\n\t\t\ta++,b++;\n\t\t\tprintf(\"%d\\n\",q_sum(a,b));\n\t\t}\n\t\telse if(opt[1]=='M'&&opt[2]=='A')\n\t\t{\n\t\t\ta++,b++;\n\t\t\tprintf(\"%d\\n\",q_max(a,b));\n\t\t}\n\t\telse if(opt[1]=='M'&&opt[2]=='I')\n\t\t{\n\t\t\ta++,b++;\n\t\t\tprintf(\"%d\\n\",q_min(a,b));\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1603325493,
        "uid": 175131,
        "name": "\u5085\u601d\u7ef4666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1505 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u65c5\u6e38\u3011"
    },
    {
        "content": "\u6b64\u9898\u7684\u5173\u952e\uff0c\u5728\u4e8e\u7ef4\u62a4\u533a\u95f4\u53d6\u53cd\u7684\u61d2\u6807\u8bb0\uff0c\u4ee5\u53ca\u53d6\u53cd\u540e\u533a\u95f4\u6700\u5927\u503c\uff0c\u6700\u5c0f\u503c\u4e0e\u548c\u7684\u53d8\u5316  \n\u9996\u5148\uff0c\u6211\u4eec\u80af\u5b9a\u5148\u8981\u628a\u8fb9\u6743\u8f6c\u5316\u4e3a\u70b9\u6743\u3002\u8fd9\u4e2a\u76f8\u4fe1\u5927\u5bb6\u90fd\u4f1a\uff0c\u6bcf\u4e2a\u70b9\u6743\u7b49\u4e8e\u4ed6\u8fd4\u7956\u8fb9\u7684\u6743\u503c\n\n\u8bbe $maxv[k],minv[k],sum[k]$ \u5206\u522b\u4e3a\u533a\u95f4 $k$ \u7684\u6700\u5927\u503c\uff0c\u6700\u5c0f\u503c\u4e0e\u548c\uff1b$rev[k]=0/1$ \u8868\u793a\u8be5\u533a\u95f4\u662f\u5426\u53d6\u53cd\u3002  \n\u53d6\u53cd\u540e $maxv[k],minv[k],sum[k]$ \u7684\u53d8\u5316\uff1a\n\n- $sum[k]$ \u6700\u7b80\u5355\u7684\u4e00\u4e2a\uff0c\u76f4\u63a5\u4e58\u4ee5 $-1$ \u5373\u53ef  \n- $minv[k]$ \u7b49\u4e8e\u53d6\u53cd\u524d\u7684 $maxv[k] \\times -1$\uff0c\u53ef\u4ee5\u6839\u636e\u4e0d\u7b49\u5f0f\u7684\u8fd0\u7b97\u6cd5\u5219\u5f97\u5230\n- $maxv[k]$ \u7b49\u4e8e\u53d6\u53cd\u524d\u7684 $minv[k] \\times -1$ \uff0c\u4e0e\u4e0a\u540c\u7406\n\n\u8fd9\u4e2a\u5730\u65b9\u660e\u767d\u540e\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u6811\u5256\u7684\u677f\u5b50\u4e86\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int Maxn=100000+10,Maxm=400000+10,inf=0x3f3f3f3f;\nstruct edge{\n\tint v,len;\n\tedge(int x,int y)\n\t{\n\t\tv=x,len=y;\n\t}\n};\nstruct Edge{\n\tint u,v;\n}g[Maxn];\nint maxv[Maxm],minv[Maxm],sum[Maxm];\nbool rev[Maxn];\nint a[Maxn],w[Maxn];\nint d[Maxn],top[Maxn],id[Maxn];\nint s[Maxn],son[Maxn],f[Maxn];\nvector <edge> e[Maxn];\nint n,m,idcnt;\ninline int read()\n{\n\tint s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0' && ch<='9')s=(s<<3)+(s<<1)+(ch^48),ch=getchar();\n\treturn s*w;\n}\ninline void push_up(int k)\n{\n\tmaxv[k]=max(maxv[k<<1],maxv[k<<1|1]);\n\tminv[k]=min(minv[k<<1],minv[k<<1|1]);\n\tsum[k]=sum[k<<1]+sum[k<<1|1];\n}\nvoid upd(int k)\n{\n\trev[k]^=1;\n\tsum[k]=-sum[k];\n\tint tmp=minv[k];\n\tminv[k]=-maxv[k];\n\tmaxv[k]=-tmp;\n}\nvoid push_down(int k)\n{\n\tif(!rev[k])return;\n\tupd(k<<1),upd(k<<1|1);\n\trev[k]=0;\n}\nvoid modify_pos(int k,int l,int r,int pos,int v)\n{\n\tif(l==r)\n\t{\n\t\trev[k]=0;\n\t\tmaxv[k]=minv[k]=sum[k]=v;\n\t\treturn;\n\t}\n\tpush_down(k);\n\tint mid=(l+r)>>1;\n\tif(pos<=mid)modify_pos(k<<1,l,mid,pos,v);\n\telse modify_pos(k<<1|1,mid+1,r,pos,v);\n\tpush_up(k);\n}\nvoid modify_rev(int k,int l,int r,int x,int y)\n{\n\tif(x<=l && r<=y)return upd(k);\n\tpush_down(k);\n\tint mid=(l+r)>>1;\n\tif(x<=mid)modify_rev(k<<1,l,mid,x,y);\n\tif(mid<y)modify_rev(k<<1|1,mid+1,r,x,y);\n\tpush_up(k);\n}\nint query_sum(int k,int l,int r,int x,int y)\n{\n\tif(x<=l && r<=y)return sum[k];\n\tpush_down(k);\n\tint mid=(l+r)>>1,ret=0;\n\tif(x<=mid)ret=query_sum(k<<1,l,mid,x,y);\n\tif(mid<y)ret+=query_sum(k<<1|1,mid+1,r,x,y);\n\treturn ret;\n}\nint query_min(int k,int l,int r,int x,int y)\n{\n\tif(x<=l && r<=y)return minv[k];\n\tpush_down(k);\n\tint mid=(l+r)>>1,ret=inf;\n\tif(x<=mid)ret=query_min(k<<1,l,mid,x,y);\n\tif(mid<y)ret=min(ret,query_min(k<<1|1,mid+1,r,x,y));\n\treturn ret;\n}\nint query_max(int k,int l,int r,int x,int y)\n{\n\tif(x<=l && r<=y)return maxv[k];\n\tpush_down(k);\n\tint mid=(l+r)>>1,ret=-inf;\n\tif(x<=mid)ret=query_max(k<<1,l,mid,x,y);\n\tif(mid<y)ret=max(ret,query_max(k<<1|1,mid+1,r,x,y));\n\treturn ret;\n}\nvoid build(int k,int l,int r)\n{\n\tif(l==r)\n\t{\n\t\tsum[k]=minv[k]=maxv[k]=w[l];\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(k<<1,l,mid);\n\tbuild(k<<1|1,mid+1,r);\n\tpush_up(k);\n}\nvoid dfs1(int x,int fa,int len)\n{\n\ts[x]=1,f[x]=fa;\n\td[x]=d[fa]+1,a[x]=len;\n\tfor(int i=0;i<e[x].size();++i)\n\t{\n\t\tint y=e[x][i].v;\n\t\tif(y==fa)continue;\n\t\tdfs1(y,x,e[x][i].len);\n\t\ts[x]+=s[y];\n\t\tif(s[y]>s[son[x]])son[x]=y;\n\t}\n}\nvoid dfs2(int x,int topp)\n{\n\ttop[x]=topp,id[x]=++idcnt;\n\tw[id[x]]=a[x];\n\tif(!son[x])return;\n\tdfs2(son[x],topp);\n\tfor(int i=0;i<e[x].size();++i)\n\t{\n\t\tint y=e[x][i].v;\n\t\tif(y==f[x] || y==son[x])continue;\n\t\tdfs2(y,y);\n\t}\n}\nvoid seq_rev(int x,int y)\n{\n\twhile(top[x]!=top[y])\n\t{\n\t\tif(d[top[x]]<d[top[y]])swap(x,y);\n\t\tmodify_rev(1,1,n,id[top[x]],id[x]);\n\t\tx=f[top[x]];\n\t}\n\tif(x==y)return;\n\tif(d[x]>d[y])swap(x,y);\n\tmodify_rev(1,1,n,id[x]+1,id[y]);\n}\nint seq_sum(int x,int y) \n{\n\tint ret=0;\n\twhile(top[x]!=top[y])\n\t{\n\t\tif(d[top[x]]<d[top[y]])swap(x,y);\n\t\tret+=query_sum(1,1,n,id[top[x]],id[x]);\n\t\tx=f[top[x]];\n\t}\n\tif(x==y)return ret;\n\tif(d[x]>d[y])swap(x,y);\n\treturn ret+query_sum(1,1,n,id[x]+1,id[y]);\n}\nint seq_max(int x,int y) \n{\n\tint ret=-inf;\n\twhile(top[x]!=top[y])\n\t{\n\t\tif(d[top[x]]<d[top[y]])swap(x,y);\n\t\tret=max(ret,query_max(1,1,n,id[top[x]],id[x]));\n\t\tx=f[top[x]];\n\t}\n\tif(x==y)return ret;\n\tif(d[x]>d[y])swap(x,y);\n\treturn max(ret,query_max(1,1,n,id[x]+1,id[y]));\n}\nint seq_min(int x,int y) \n{\n\tint ret=inf;\n\twhile(top[x]!=top[y])\n\t{\n\t\tif(d[top[x]]<d[top[y]])swap(x,y);\n\t\tret=min(ret,query_min(1,1,n,id[top[x]],id[x]));\n\t\tx=f[top[x]];\n\t}\n\tif(x==y)return ret;\n\tif(d[x]>d[y])swap(x,y);\n\treturn min(ret,query_min(1,1,n,id[x]+1,id[y]));\n}\nint main()\n{\n//\tfreopen(\"in.txt\",\"r\",stdin);\n//\tfreopen(\"out.txt\",\"w\",stdout);\n\t\n\tn=read();\n\tfor(int i=1;i<n;++i)\n\t{\n\t\tint x=read()+1,y=read()+1,c=read();\n\t\tg[i].u=x,g[i].v=y;\n\t\te[x].push_back(edge(y,c));\n\t\te[y].push_back(edge(x,c));\n\t}\n\tdfs1(1,0,0);\n\tdfs2(1,1);\n\tbuild(1,1,n);\n\tm=read();\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tchar opt[10];\n\t\tscanf(\"%s\",opt);\n\t\tif(opt[0]=='C')\n\t\t{\n\t\t\tint i=read(),v=read();\n\t\t\tif(d[g[i].u]<d[g[i].v])swap(g[i].v,g[i].u);\n\t\t\tmodify_pos(1,1,n,id[g[i].u],v);\n\t\t\tcontinue;\n\t\t}\n\t\tint x=read()+1,y=read()+1;\n\t\tif(opt[0]=='N')seq_rev(x,y);\n\t\telse if(opt[0]=='S')printf(\"%d\\n\",seq_sum(x,y));\n\t\telse if(opt[0]='M' && opt[1]=='A')printf(\"%d\\n\",seq_max(x,y));\n\t\telse if(opt[0]='M' && opt[1]=='I')printf(\"%d\\n\",seq_min(x,y));\n\t}\n\t\n\treturn 0;\n}\n```",
        "postTime": 1585621302,
        "uid": 120362,
        "name": "Priori_Incantatem",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1505 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u65c5\u6e38\u3011"
    },
    {
        "content": "[\u535a\u5ba2\u56ed\u98df\u7528\u66f4\u4f73](https://www.cnblogs.com/C202202chenkelin/p/14492813.html)\n# \u524d\u7f6e\u77e5\u8bc6\n\u7ebf\u6bb5\u6811 $and$ \u6811\u4e0a\u57fa\u672c\u64cd\u4f5c\n# \u5b9a\u4e49\n\u51e0\u4e2a\u5728\u6811\u94fe\u5256\u5206\u5f88\u91cd\u8981\u7684\u6982\u5ff5\u3002\n## \u91cd\u513f\u5b50\n\u5bf9\u4e8e\u4e00\u4e2a\u7236\u8282\u70b9\uff0c\u542b\u6709\u8282\u70b9\u6570\u6700\u591a\u7684\u513f\u5b50\u79f0\u4e3a\u91cd\u513f\u5b50\u3002\u4f46\u91cd\u513f\u5b50\u53ea\u6709\u4e00\u4e2a\uff0c\u82e5\u6ee1\u8db3\u6761\u4ef6\u7684\u513f\u5b50\u6709\u591a\u4e2a\uff0c\u5219\u6307\u5b9a\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\u513f\u5b50\u4e3a\u91cd\u513f\u5b50\u3002\n## \u8f7b\u513f\u5b50\n\u5bf9\u4e8e\u4e00\u4e2a\u7236\u8282\u70b9\uff0c\u9664\u4e86\u91cd\u513f\u5b50\u4ee5\u4e3a\uff0c\u5176\u4f59\u7684\u90fd\u79f0\u4e3a\u8f7b\u513f\u5b50\u3002\n## \u91cd\u8fb9\n\u7531\u7236\u8282\u70b9\u4e0e\u91cd\u513f\u5b50\u6784\u6210\u7684\u8fb9\u3002\n## \u8f7b\u8fb9\n\u7531\u7236\u8282\u70b9\u4e0e\u8f7b\u513f\u5b50\u6784\u6210\u7684\u8fb9\u3002\n## \u91cd\u94fe\n\u7531\u91cd\u8fb9\u6784\u6210\u7684\u94fe\u3002\n# \u8f7b\u94fe\n\u7531\u8f7b\u8fb9\u6784\u6210\u7684\u94fe\u3002\n# \u94fe\u9876\n\u91cd\u94fe\u4e2d\u6df1\u5ea6\u6700\u5c0f\u7684\u8fb9\u4e3a\u8be5\u91cd\u94fe\u7684\u94fe\u9876\u3002\n\n\u4e0a\u8ff0\u51e0\u4e2a\u6982\u5ff5\u5177\u4f53\u5982\u4e0b\u56fe\uff1a\n\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20210306214410204.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZhY2VfdGhlX0JsYXN0,size_16,color_FFFFFF,t_70)\n\u5176\u4e2d\uff0c\u9ec4\u8272\u70b9\u4e3a\u91cd\u513f\u5b50\uff0c\u84dd\u8272\u70b9\u4e3a\u8f7b\u513f\u5b50\uff08 $1$ \u9664\u5916\uff09\u3002\u9ec4\u8272\u8fb9\u4e3a\u91cd\u8fb9\uff0c\u84dd\u8272\u8fb9\u4e3a\u8f7b\u8fb9\u3002\u901a\u5e38\uff0c\u4e00\u4e2a\u5355\u72ec\u7684\u70b9\u4e5f\u770b\u4e3a\u4e00\u6761\u91cd\u94fe\uff0c\u90a3\u4e48\u91cd\u94fe\u6709 $5$ \u6761\uff1a \n* $\\{ 1,2,6,7\\}$ \uff0c\uff08 $1$ \u4e3a\u94fe\u9876\uff09\n* $\\{ 5\\}$ \uff0c\uff08 $5$ \u4e3a\u94fe\u9876\uff09\n* $\\{ 3\\}$ \uff0c\uff08 $3$ \u4e3a\u94fe\u9876\uff09\n* $\\{ 4,8\\}$ \uff0c\uff08 $4$ \u4e3a\u94fe\u9876\uff09\n* $\\{ 9\\}$ \uff0c\uff08 $9$ \u4e3a\u94fe\u9876\uff09\n\n\u5bf9\u4e8e\u4efb\u610f\u4e00\u68f5\u6811\u6709\u5982\u4e0b\u6027\u8d28\uff1a\u4ece\u4efb\u610f\u4e00\u70b9\u5230\u6839\u8282\u70b9\u7684\u7b80\u5355\u8def\u5f84\u4e0a\uff0c\u5171\u6709\u4e0d\u8d85\u8fc7 $log2(n)$  \u6761\u8f7b\u94fe\uff0c\u6709\u4e0d\u8d85\u8fc7 $log2(n)$ \u6761\u8f7b\u94fe\u3002\n# \u9884\u5904\u7406\n\u9884\u5904\u7406\u9700\u8981\u4f7f\u7528\u5230\u4e24\u4e2a $dfs$ \u3002\n\n$dfs1$ \u9700\u8981\u5904\u7406\uff1a\n* $fa[i]$ \uff1a $i$ \u8282\u70b9\u7684\u7236\u4eb2\u3002\n* $son[i]$ \uff1a $i$ \u8282\u70b9\u7684\u91cd\u513f\u5b50\u3002\n* $sz[i]$ \uff1a\u4ee5 $i$ \u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u7684\u5927\u5c0f\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5904\u7406 $son[i]$ \u3002\n* $dep[i]$ \uff1a $i$ \u8282\u70b9\u7684\u6df1\u5ea6\u3002\n\n$dfs2$ \u9700\u8981\u5904\u7406\uff1a\n* $dfn[i]$ \uff1a $i$ \u8282\u70b9\u7684\u65f6\u95f4\u6233\uff0c\u4f46\u4f18\u5148\u904d\u5386\u91cd\u513f\u5b50\u3002\u663e\u7136\uff0c\u5728\u4e00\u6761\u91cd\u94fe\u4e2d\uff0c\u65f6\u95f4\u6233\u4e3a\u4e00\u6bb5\u8fde\u7eed\u7684\u6570\u5b57\u3002\n* $tp[i]$ \uff1a $i$ \u8282\u70b9\u7684\u94fe\u9876\u3002\n## C++\u4ee3\u7801\n```cpp\nvoid dfs1(int now, int father) {\n\tfa[now] = father;//\u521d\u59cb\u5316\u7236\u8282\u70b9\n\tsz[now] = 1;//\u5b50\u6811\u5927\u5c0f\u5305\u62ec\u81ea\u5df1\n\tdep[now] = dep[father] + 1;//\u521d\u59cb\u5316\u6df1\u5ea6\n\tint SIZ = v[now].size();\n\tint maxn = 0;//\u8bb0\u5f55\u6700\u5927\u7684\u5b50\u6811\u5927\u5c0f\n\tfor(int i = 0; i < SIZ; i++) {\n\t\tint next = v[now][i];\n\t\tif(next == father)\n\t\t\tcontinue;\n\t\tdfs1(next, now);//\u904d\u5386\u8fd9\u68f5\u6811\n\t\tsz[now] += sz[next];\n\t\tif(maxn < sz[next]) {//\u66f4\u65b0\u5b50\u8282\u70b9\n\t\t\tmaxn = sz[next];\n\t\t\tson[now] = next;\n\t\t}\n\t}\n}\nvoid dfs2(int now, int Top) {\n\ttp[now] = Top;//\u521d\u59cb\u5316\u94fe\u9876\n\tif(son[now])\n\t\tdfs2(son[now], Top);//\u4f18\u5148\u904d\u5386\u91cd\u513f\u5b50\n\tint SIZ = v[now].size();\n\tfor(int i = 0; i < SIZ; i++) {\n\t\tint next = v[now][i];\n\t\tif(next == fa[now] || next == son[now])\n\t\t\tcontinue;\n\t\tdfs2(next, next);//\u7ee7\u7eed\u904d\u5386\u8fd9\u68f5\u6811\n\t}\n}\n```\n# \u6811\u94fe\u5256\u5206\u6c42LCA\n[\u6d4b\u9a8c\u94fe\u63a5\u3002](https://www.luogu.com.cn/problem/P3379)\n\n\u5728\u7ebf\u67e5\u8be2\u4e00\u68f5\u6811\u4e0a\u4efb\u610f\u4e24\u70b9\u7684 $LCA$ \u3002\n\n\u5206\u4e24\u79cd\u60c5\u51b5\u5411\u4e0a\u722c\u5373\u53ef\uff08\u9700\u8981\u4fdd\u8bc1 $dep[tp[x]] <= dep[tp[y]]$\uff09\uff1a\n1. $tp[x]!=tp[y]$ \uff0c\u5373\u4e0d\u5728\u4e00\u6761\u91cd\u94fe\u4e0a\u3002\u9700\u8981 $x$ \u5411\u4e0a\u722c\u51fa\u8fd9\u6761\u91cd\u94fe\uff0c\u5411\u4e0a\u7ee7\u7eed\u5bfb\u627e\u80fd\u4e0e $y$ \u6c47\u5408\u7684\u91cd\u94fe\u70b9\u3002$x=fa[tp[x]]$\u3002\n2. $tp[x]!=tp[y]$  \uff0c\u5373\u5728\u4e00\u6761\u91cd\u94fe\u4e0a\uff0c\u90a3\u4e48\u6df1\u5ea6\u5c0f\u7684\u5c31\u4f4d\u6700\u8fd1\u516c\u5171\u7956\u5148\u3002\n\n\u6b63\u786e\u6027\u663e\u7136\uff0c\u4ee5\u4e3a\u4e24\u6761\u91cd\u94fe\u4e0d\u4f1a\u4ea4\u4e8e\u540c\u4e00\u4e2a\u70b9\u3002\n## C++\u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <vector>\nusing namespace std;\nconst int MAXN = 5e5 + 5;\nvector<int> v[MAXN];//vector\u5b58\u56fe\nint fa[MAXN], son[MAXN], tp[MAXN], sz[MAXN], dep[MAXN];\nint n, m, s;\nvoid dfs1(int now, int father) {//\u521d\u59cb\u5316\u5982\u4e0a\n\tfa[now] = father;\n\tsz[now] = 1;\n\tdep[now] = dep[father] + 1;\n\tint SIZ = v[now].size();\n\tint maxn = 0;\n\tfor(int i = 0; i < SIZ; i++) {\n\t\tint next = v[now][i];\n\t\tif(next == father)\n\t\t\tcontinue;\n\t\tdfs1(next, now);\n\t\tsz[now] += sz[next];\n\t\tif(maxn < sz[next]) {\n\t\t\tmaxn = sz[next];\n\t\t\tson[now] = next;\n\t\t}\n\t}\n}\nvoid dfs2(int now, int Top) {//\u521d\u59cb\u5316\u5982\u4e0a\n\ttp[now] = Top;\n\tif(son[now])\n\t\tdfs2(son[now], Top);\n\tint SIZ = v[now].size();\n\tfor(int i = 0; i < SIZ; i++) {\n\t\tint next = v[now][i];\n\t\tif(next == fa[now] || next == son[now])\n\t\t\tcontinue;\n\t\tdfs2(next, next);\n\t}\n}\nint Get_LCA(int x, int y) {\n\twhile(tp[x] != tp[y]) {\n\t\tif(dep[tp[x]] < dep[tp[y]])\n\t\t\tswap(x, y);\n\t\tx = fa[tp[x]];\n\t}\n\tif(x == y)\n\t\treturn x;\n\tif(dep[x] < dep[y])\n\t\treturn x;\n\treturn y; \n}\nint main() {\n\tint A, B;\n\tscanf(\"%d %d %d\", &n, &m, &s);\n\tfor(int i = 1; i < n; i++) {\n\t\tscanf(\"%d %d\", &A, &B);\n\t\tv[A].push_back(B);\n\t\tv[B].push_back(A);\n\t}\n\tdfs1(s, 0);\n\tdfs2(s, s);\n\tfor(int i = 1; i <= m; i++) {\n\t\tscanf(\"%d %d\", &A, &B);\n\t\tprintf(\"%d\\n\", Get_LCA(A, B));\n\t}\n\treturn 0;\n}\n```\n# \u4f8b\u9898\n\u6811\u94fe\u5256\u5206\u901a\u5e38\u7ed3\u5408\u7740\u4e00\u4e9b\u6570\u636e\u7ed3\u6784\u6765\u8fdb\u884c\u64cd\u4f5c\uff0c\u4ee5\u4e3a\u91cd\u94fe\u7684 $dfn$ \u4e3a\u8fde\u7eed\u7684\u5e8f\u5217\u3002\n\n[\u9898\u76ee\u94fe\u63a5\u3002](https://www.luogu.com.cn/problem/P1505)\n## \u9898\u76ee\u5927\u610f\n\u5bf9\u4e8e\u4e00\u68f5\u6811\uff0c\u6709 $5$ \u4e2d\u64cd\u4f5c\uff0c\u6839\u636e\u8981\u6c42\u5b8c\u6210\u64cd\u4f5c\u3002\n* C i w \u5c06\u8f93\u5165\u7684\u7b2c $i$ \u6761\u8fb9\u6743\u503c\u6539\u4e3a $w$ \u3002\n* N u v \u5c06 $u,v$ \u8282\u70b9\u4e4b\u95f4\u7684\u8fb9\u6743\u90fd\u53d8\u4e3a\u76f8\u53cd\u6570\u3002\n* SUM u v \u8be2\u95ee $u,v$ \u8282\u70b9\u4e4b\u95f4\u8fb9\u6743\u548c\u3002\n* MAX u v \u8be2\u95ee $u,v$ \u8282\u70b9\u4e4b\u95f4\u8fb9\u6743\u6700\u5927\u503c\u3002\n* MIN u v \u8be2\u95ee $u,v$ \u8282\u70b9\u4e4b\u95f4\u8fb9\u6743\u6700\u5c0f\u503c\u3002\n## \u601d\u8def\n\u5148\u8003\u8651\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u3002\n\n\u8bbe $lca$ \u4e3a $u,v$ \u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\uff0c\u90a3\u4e48\u53ef\u4ee5\u5c06\u64cd\u4f5c\u4e8c\u5206\u89e3\u4e3a\u4ece $u$ \u5230 $lca$ \u7684\u8def\u5f84\u53d6\u53cd\uff0c\u548c\u5c06\u4ece $v$ \u5230 $lca$ \u7684\u8def\u5f84\u53d6\u53cd\u3002\n\n\u90a3\u4e48\u6309\u7167\u4e0a\u8ff0 $LCA$ \u5f80\u4e0a\u722c\u7684\u8fc7\u7a0b\u521a\u597d\u5c31\u53ef\u4ee5\u904d\u5386\u5b8c\u8fd9\u6761\u8def\u5f84\u4e00\u6b21\u3002\n\n\u6309\u7167\u70b9\u7684 $dfn$ \u5efa\u9020\u4e00\u9897\u7ebf\u6bb5\u6811\uff0c\u6765\u7ef4\u62a4\u70b9\u7684\u4fe1\u606f\u3002\n\n\u8fd9\u91cc\u70b9\u7684\u4fe1\u606f\u662f\u6307\uff1a\u8fd9\u4e2a\u70b9\u4e0e\u5b83\u7684\u7236\u8282\u70b9\u7684\u8fde\u8fb9\u7684\u4fe1\u606f\u3002\n\n\u7ebf\u6bb5\u6811\u9700\u8981\u7ef4\u62a4\u7684\u4fe1\u606f\u6709\uff1a\u6700\u5927\u503c\uff0c\u6700\u5c0f\u503c\uff0c\u533a\u95f4\u548c\u3002\n\n\u5177\u4f53\u7684\u64cd\u4f5c\u4e8c\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nvoid Negate(int pos, int l, int r) {\n\tif(l <= L(pos) && R(pos) <= r) {\n\t\tA(pos) = -A(pos);\n\t\tI(pos) = -I(pos);\n\t\tswap(A(pos), I(pos));//\u6700\u5927\u503c\u53d6\u53cd\uff0c\u6700\u5c0f\u503c\u53d6\u53cd\uff0c\u6700\u5927\u503c\u8fb9\u6700\u5c0f\u503c\n\t\tS(pos) = -S(pos);//\u533a\u95f4\u548c\u53d6\u53cd\n\t\tM(pos) ^= 1;//\u53d6\u53cd\u4e24\u6b21\u540e\u5c31\u76f8\u5f53\u4e8e\u4e0d\u53d6\u53cd\u3002\n\t\treturn;\n\t}\n\tPush_Down(pos);//\u4f20\u9012\u61d2\u6807\u8bb0\n\tif(l <= R(LC(pos)))\n\t\tNegate(LC(pos), l, r);\n\tif(r >= L(RC(pos)))\n\t\tNegate(RC(pos), l, r);\n\tPush_Up(pos);//\u4fee\u6539\u540e\u66f4\u65b0\u70b9\u7684\u4fe1\u606f\n}\nvoid Negatepast(int x, int y) {\n\twhile(tp[x] != tp[y]) {//\u4e0d\u540c\u91cd\u94fe\u5411\u4e0a\u722c\n\t\tif(dep[tp[x]] < dep[tp[y]])\n\t\t\tswap(x, y);\n\t\tNegate(1, dfn[tp[x]], dfn[x]);//\u540c\u4e00\u6761\u91cd\u94fedfn\u662f\u8fde\u7eed\u7684\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\n\t\tx = fa[tp[x]];//\u5411\u4e0a\u722c\n\t}\n\tif(x == y)\n\t\treturn;\n\tif(dep[x] < dep[y])\n\t\tswap(x, y);\n\tNegate(1, dfn[son[y]], dfn[x]);//\u6ce8\u610f\u662fson[y]\uff0cy\u4e0e\u5176\u7236\u8282\u70b9\u7684\u8fde\u8fb9\u5e76\u4e0d\u9700\u8981\u4fee\u6539\n}\n```\n\u67e5\u8be2\u64cd\u4f5c\u4e0e\u5176\u7c7b\u4f3c\uff0c\u5c31\u4e0d\u4e00\u4e00\u5217\u4e3e\u4e86\u3002\n\n\u5bf9\u4e8e\u4fee\u6539\u6743\u503c\uff0c\u4f7f\u7528\u6df1\u5ea6\u8f83\u5927\u7684\u5b50\u8282\u70b9\uff0c\u76f4\u63a5\u5728\u7ebf\u6bb5\u6811\u4e0a\u8be5\u5c31\u597d\u4e86\u3002\n## C++\u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <string>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n#define INF 0x3f3f3f3f\nconst int MAXN = 2e5 + 5;\nstruct Segment_Tree {//\u7ebf\u6bb5\u6811\n\tint Left_Section, Right_Section;\n\tint Max_Data, Min_Data, Sum_Data, Lazy_Mark;\n\t#define LC(x) (x << 1)\n\t#define RC(x) (x << 1 | 1)\n\t#define L(x) Tree[x].Left_Section//\u5de6\u533a\u95f4\n\t#define R(x) Tree[x].Right_Section//\u53f3\u533a\u95f4\n\t#define I(x) Tree[x].Min_Data//\u533a\u95f4\u6700\u5c0f\u503c\n\t#define A(x) Tree[x].Max_Data//\u533a\u95f4\u6700\u5927\u503c\n\t#define S(x) Tree[x].Sum_Data//\u533a\u95f4\u548c\n\t#define M(x) Tree[x].Lazy_Mark//\u61d2\u60f0\u6807\u8bb0\uff08\u5ef6\u8fdf\u6807\u8bb0\uff09\n};\nSegment_Tree Tree[MAXN << 2];\nvector<int> v[MAXN];//vector\u5b58\u56fe\nint fa[MAXN], son[MAXN], dep[MAXN], siz[MAXN];\nint tp[MAXN], dfn[MAXN];\nint s[MAXN], t[MAXN], w[MAXN];\nint n, q;\nint tim;\nvoid Push_Up(int pos) {//\u66f4\u65b0\u8282\u70b9\u4fe1\u606f\n\tA(pos) = max(A(LC(pos)), A(RC(pos)));\n\tI(pos) = min(I(LC(pos)), I(RC(pos)));\n\tS(pos) = S(LC(pos)) + S(RC(pos));\n}\nvoid Push_Down(int pos) {//\u4f20\u9012\u61d2\u6807\u8bb0\n\tif(M(pos)) {\n\t\tI(LC(pos)) = -I(LC(pos));\n\t\tA(LC(pos)) = -A(LC(pos));\n\t\tswap(I(LC(pos)), A(LC(pos)));\n\t\tS(LC(pos)) = -S(LC(pos));\n\t\tM(LC(pos)) ^= 1;\n\t\tI(RC(pos)) = -I(RC(pos));\n\t\tA(RC(pos)) = -A(RC(pos));\n\t\tswap(I(RC(pos)), A(RC(pos)));\n\t\tS(RC(pos)) = -S(RC(pos));\n\t\tM(RC(pos)) ^= 1;\n\t\tM(pos) = 0;\n\t}\n}\nvoid Build(int pos, int l, int r) {//\u521d\u59cb\u5316\u5efa\u6811\n\tL(pos) = l;\n\tR(pos) = r;\n\tif(l == r)\n\t\treturn;\n\tint mid = (l + r) >> 1;\n\tBuild(LC(pos), l, mid);\n\tBuild(RC(pos), mid + 1, r); \n}\nvoid Negate(int pos, int l, int r) {//\u53d6\u53cd\u64cd\u4f5c\n\tif(l <= L(pos) && R(pos) <= r) {\n\t\tI(pos) = -I(pos);\n\t\tA(pos) = -A(pos);\n\t\tswap(I(pos), A(pos));\n\t\tS(pos) = -S(pos);\n\t\tM(pos) ^= 1;\n\t\treturn;\n\t}\n\tPush_Down(pos);\n\tif(l <= R(LC(pos)))\n\t\tNegate(LC(pos), l, r);\n\tif(r >= L(RC(pos)))\n\t\tNegate(RC(pos), l, r);\n\tPush_Up(pos);\n}\nvoid Negatepast(int x, int y) {\n\twhile(tp[x] != tp[y]) {\n\t\tif(dep[tp[x]] < dep[tp[y]])\n\t\t\tswap(x, y);\n\t\tNegate(1, dfn[tp[x]], dfn[x]);\n\t\tx = fa[tp[x]];\n\t}\n\tif(x == y)\n\t\treturn;\n\tif(dep[x] < dep[y])\n\t\tswap(x, y);\n\tNegate(1, dfn[son[y]], dfn[x]);\n}\nvoid Change(int pos, int x, int c) {//\u5355\u70b9\u4fee\u6539\n\tif(L(pos) == R(pos)) {\n\t\tI(pos) = c;\n\t\tA(pos) = c;\n\t\tS(pos) = c;\n\t\treturn;\n\t}\n\tPush_Down(pos);\n\tif(x <= R(LC(pos)))\n\t\tChange(LC(pos), x, c);\n\telse\n\t\tChange(RC(pos), x, c);\n\tPush_Up(pos);\n}\nint Query_Sum(int pos, int l, int r) {//\u67e5\u8be2\u6700\u5927\u503c\u64cd\u4f5c\uff0c\u4e0e\u4fee\u6539\u7c7b\u4f3c\uff0c\u90fd\u5df2\u540c\u6837\u65b9\u5411\u722c\n\tif(l <= L(pos) && R(pos) <= r)\n\t\treturn S(pos);\n\tPush_Down(pos);\n\tint res = 0;\n\tif(l <= R(LC(pos)))\n\t\tres += Query_Sum(LC(pos), l, r);\n\tif(r >= L(RC(pos)))\n\t\tres += Query_Sum(RC(pos), l, r);\n\treturn res;\n}\nint Sumpast(int x, int y) {\n\tint res = 0;\n\twhile(tp[x] != tp[y]) {\n\t\tif(dep[tp[x]] < dep[tp[y]])\n\t\t\tswap(x, y);\n\t\tres += Query_Sum(1, dfn[tp[x]], dfn[x]);\n\t\tx = fa[tp[x]];\n\t}\n\tif(x == y)\n\t\treturn res;\n\tif(dep[x] < dep[y])\n\t\tswap(x, y);\n\tres += Query_Sum(1, dfn[son[y]], dfn[x]);\n\treturn res;\n}\nint Query_Min(int pos, int l, int r) {//\u67e5\u8be2\u6700\u5c0f\u503c\n\tif(l <= L(pos) && R(pos) <= r)\n\t\treturn I(pos);\n\tPush_Down(pos);\n\tint res = INF;\n\tif(l <= R(LC(pos)))\n\t\tres = min(res, Query_Min(LC(pos), l, r));\n\tif(r >= L(RC(pos)))\n\t\tres = min(res, Query_Min(RC(pos), l, r));\n\treturn res;\n}\nint Minpast(int x, int y) {\n\tint res = INF;\n\twhile(tp[x] != tp[y]) {\n\t\tif(dep[tp[x]] < dep[tp[y]])\n\t\t\tswap(x, y);\n\t\tres = min(res, Query_Min(1, dfn[tp[x]], dfn[x]));\n\t\tx = fa[tp[x]];\n\t}\n\tif(x == y)\n\t\treturn res;\n\tif(dep[x] < dep[y])\n\t\tswap(x, y);\n\tres = min(res, Query_Min(1, dfn[son[y]], dfn[x]));\n\treturn res;\n}\nint Query_Max(int pos, int l, int r) {//\u67e5\u8be2\u6700\u5927\u503c\n\tif(l <= L(pos) && R(pos) <= r)\n\t\treturn A(pos);\n\tPush_Down(pos);\n\tint res = -INF;\n\tif(l <= R(LC(pos)))\n\t\tres = max(res, Query_Max(LC(pos), l, r));\n\tif(r >= L(RC(pos)))\n\t\tres = max(res, Query_Max(RC(pos), l, r));\n\treturn res;\n}\nint Maxpast(int x, int y) {\n\tint res = -INF;\n\twhile(tp[x] != tp[y]) {\n\t\tif(dep[tp[x]] < dep[tp[y]])\n\t\t\tswap(x, y);\n\t\tres = max(res, Query_Max(1, dfn[tp[x]], dfn[x]));\n\t\tx = fa[tp[x]];\n\t}\n\tif(x == y)\n\t\treturn res;\n\tif(dep[x] < dep[y])\n\t\tswap(x, y);\n\tres = max(res, Query_Max(1, dfn[son[y]], dfn[x]));\n\treturn res;\n}\nvoid dfs1(int now, int father) {//\u521d\u59cb\u5316\n\tdep[now] = dep[father] + 1;\n\tsiz[now] = 1;\n\tfa[now] = father;\n\tint SIZ = v[now].size();\n\tint maxn = 0;\n\tfor(int i = 0; i < SIZ; i++) {\n\t\tint next = v[now][i];\n\t\tif(next == fa[now])\n\t\t\tcontinue;\n\t\tdfs1(next, now);\n\t\tsiz[now] += siz[next];\n\t\tif(maxn < siz[next]) {\n\t\t\tmaxn = siz[next];\n\t\t\tson[now] = next;\n\t\t}\n\t}\n}\nvoid dfs2(int now, int Top) {//\u521d\u59cb\u5316\n\ttp[now] = Top;\n\tdfn[now] = ++tim;\n\tif(son[now])\n\t\tdfs2(son[now], Top);\n\tint SIZ = v[now].size();\n\tfor(int i = 0; i < SIZ; i++) {\n\t\tint next = v[now][i];\n\t\tif(son[now] == next || fa[now] == next)\n\t\t\tcontinue;\n\t\tdfs2(next, next);\n\t}\n}\nint main() {\n\tscanf(\"%d\", &n);\n\tfor(int i = 1; i < n; i++) {\n\t\tscanf(\"%d %d %d\", &s[i], &t[i], &w[i]);\n\t\ts[i]++;\n\t\tt[i]++;\n\t\tv[s[i]].push_back(t[i]);\n\t\tv[t[i]].push_back(s[i]);\n\t}\n\tdfs1(1, 0);\n\tdfs2(1, 1);\n\tBuild(1, 1, n);\n\tfor(int i = 1; i < n; i++) {\n\t\tif(dep[s[i]] < dep[t[i]])//\u6df1\u5ea6\u5c0f\u7684\u4e00\u5b9a\u5c31\u662f\u5b50\u8282\u70b9\n\t\t\tswap(s[i], t[i]);\n\t\tChange(1, dfn[s[i]], w[i]);//\u521d\u59cb\u5316\u7ebf\u6bb5\u6811\n\t}\n\tscanf(\"%d\", &q);\n\tstring opt;\n\tint a, b;\n\twhile(q--) {\n\t\tcin >> opt;\n\t\tscanf(\"%d %d\", &a, &b);\n\t\ta++;\n\t\tb++;\n\t\tif(opt[0] == 'N')\n\t\t\tNegatepast(a, b);\n\t\telse if(opt[0] == 'C')\n\t\t\tChange(1, dfn[s[a - 1]], b - 1);\n\t\telse if(opt[0] == 'S')\n\t\t\tprintf(\"%d\\n\", Sumpast(a, b));\n\t\telse if(opt[1] == 'A')\n\t\t\tprintf(\"%d\\n\", Maxpast(a, b));\n\t\telse\n\t\t\tprintf(\"%d\\n\", Minpast(a, b));\n\t}\n\treturn 0;\n}\n````",
        "postTime": 1615042524,
        "uid": 254733,
        "name": "Night_Bringer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1505 [\u56fd\u5bb6\u96c6\u8bad\u961f]\u65c5\u6e38"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P1505) [\u4e2a\u4eba\u535a\u5ba2\u7248\u672c](https://code.watertomato.com/p1505-%e5%9b%bd%e5%ae%b6%e9%9b%86%e8%ae%ad%e9%98%9f%e6%97%85%e6%b8%b8-%e9%a2%98%e8%a7%a3/)\n\n## \u9898\u610f\n\n\u7ef4\u62a4\u4e00\u68f5\u6811\uff0c\u652f\u6301\u533a\u95f4\u6c42\u548c\uff0c\u533a\u95f4\u6700\u5927\u503c\uff0c\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u533a\u95f4\u53d6\u53cd\uff0c\u5355\u70b9\u4fee\u6539\u3002\n\n## \u89e3\u6790\n\n\u8fd9\u662f\u4e00\u9053\u5f88\u597d\u7684\u6811\u5256\u7ec3\u624b\u9898\uff0c\u601d\u7ef4\u96be\u5ea6\u4e0d\u9ad8\uff0c\u4ee3\u7801\u5b58\u5728\u4e00\u4e9b\u7ec6\u8282\uff0c\u672c\u9898\u89e3\u4e3b\u8981\u6765\u8bf4\u660e\u8fd9\u4e00\u90e8\u5206\uff0c\u4e5f\u7528\u6765\u8b66\u9192\u81ea\u5df1\u505a\u9898\u76ee\u65f6\u9700\u8981\u6ce8\u610f\u7ec6\u8282\uff0c\u5c3d\u53ef\u80fd\u907f\u514d\u8c03\u4ee3\u7801\u8c03\u534a\u5929\u7684\u60c5\u51b5\u3002\n\n### \u8fb9\u6743\u8f6c\u70b9\u6743\n\n\u5728\u6811\u5256\u7684\u4e24\u8fb9 dfs \u8fc7\u7a0b\u4e2d\uff0c\u7b2c\u4e00\u904d\u53ef\u4ee5\u5c06\u8fb9\u6743\u8d4b\u7ed9\u8fb9\u7aef\u70b9\u4e2d\u6df1\u5ea6\u8f83\u5927\u7684\u90a3\u4e00\u4e2a\uff0c\u5373\u513f\u5b50\u8282\u70b9\u3002\u6211\u4eec\u7528\u513f\u5b50\u4e0a\u7684\u70b9\u6743\u6765\u8868\u793a\u4e86\u8fb9\u6743\u3002\n\n\u4e24\u904d dfs \u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\ninline void dfs1(int u,int f){\n\tdep[u]=dep[f]+1;\n\tfa[u]=f;siz[u]=1;\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(v==f) continue;\n\t\tval[v]=e[i].val;//\u5c06\u8fb9\u6743\u8d4b\u7ed9\u513f\u5b50\n\t\tdfs1(v,u);\n\t\tsiz[u]+=siz[v];\n\t\tif(siz[v]>siz[son[u]]) son[u]=v;\n\t}\n}\ninline void dfs2(int u,int Top){\n\tid[u]=++tot;\n\ta[tot]=val[u];//\u83b7\u5f97\u8fb9\u6743\u540e\uff0c\u513f\u5b50\u6709\u4e86\u70b9\u6743\uff0c\u5c06\u5176\u8d4b\u5230\u6570\u5217\u4e2d\n\ttop[u]=Top;\n\tif(!son[u]) return;\n\tdfs2(son[u],Top);\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(v==fa[u]||v==son[u]) continue;\n\t\tdfs2(v,v);\n\t}\n}\n```\n\n### \u5982\u4f55\u533a\u95f4\u53d6\u53cd\n\n\u5728\u533a\u95f4\u53d6\u53cd\u65f6\uff0c\u6211\u4eec\u9762\u5bf9 $tag$ \u9700\u8981 pushdown \u7684\u65f6\u5019\u9700\u8981\u4fdd\u8bc1\u6240\u8bb0\u5f55\u7684\u548c/\u6700\u5927\u503c/\u6700\u5c0f\u503c\u90fd\u6b63\u786e\u53d8\u5316\u3002\n\n\u663e\u7136\u7684\uff0c\u533a\u95f4\u548c\u76f4\u63a5\u53d6\u53cd\u5373\u53ef\uff0c\u800c\u6700\u5927\u503c/\u6700\u5c0f\u503c\uff0c\u5bb9\u6613\u53d1\u73b0\u4ed6\u4eec\u53d6\u53cd\u4e4b\u540e\u5c31\u5206\u522b\u53d8\u6210\u4e86\u65b0\u7684\u6700\u5c0f\u503c/\u6700\u5927\u503c\uff0c\u56e0\u6b64\u53d6\u53cd\u540e\u4ea4\u6362\u5373\u53ef\u3002\n\npushdown \u90e8\u5206\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\ninline void pushdown(int u){\n\tif(!tree[u].tag) return;\n\ttree[ls].tag^=1;tree[rs].tag^=1;\n\ttree[ls].sum=-tree[ls].sum;tree[rs].sum=-tree[rs].sum;\n\ttree[ls].mx=-tree[ls].mx;tree[rs].mx=-tree[rs].mx;\n\ttree[ls].mn=-tree[ls].mn;tree[rs].mn=-tree[rs].mn;\n\tswap(tree[ls].mx,tree[ls].mn);swap(tree[rs].mx,tree[rs].mn);\n\ttree[u].tag=0;\n}\n```\n\n\u5207\u8bb0\u4e0d\u80fd\u76f4\u63a5\u4e92\u76f8\u8d4b\u503c\uff0c\u9664\u975e\u4f60\u4e50\u610f\u7ef4\u62a4\u4e00\u4e2a\u4e2d\u95f4\u91cf\u3002\n\n### \u5982\u4f55\u6811\u4e0a\u4fee\u6539/\u67e5\u8be2\n\n\u8fd9\u91cc\u4ee5\u533a\u95f4\u6c42\u548c\u4e3a\u4f8b\u3002\n\n```cpp\ninline void SumTree(int x,int y){\n\tint ans=0;\n\twhile(top[x]!=top[y]){\n\t\tif(dep[top[x]]<dep[top[y]]) swap(x,y);\n\t\tans+=querysum(1,1,n,id[top[x]],id[x]);//tag 1\n\t\tx=fa[top[x]];\n\t}\n\tif(x!=y){\n\t\tif(dep[x]>dep[y]) swap(x,y);\n\t\tans+=querysum(1,1,n,id[x]+1,id[y]);\t//tag 2\n\t}\n\tprintf(\"%lld\\n\",ans);\n}\n```\n\n\u6ce8\u610f\u7528\u6ce8\u91ca\u6253\u4e0a\u6807\u8bb0\u7684\u8fd9\u4e24\u884c\uff0c$id_{top_x}$ \u6ca1\u6709\u52a0 $1$\uff0c\u800c $id_x$ \u52a0 $1$\uff0c\u539f\u56e0\u662f\uff1a\u5f53\u4f60\u5728\u6811\u4e0a\u5411\u4e0a\u8df3\u65f6\uff0c\u7531\u4e8e\u4f60\u8981\u8df3\u5230\u94fe\u9876\u7684\u4e0a\u4e00\u4e2a\u70b9\uff0c\u56e0\u6b64\u94fe\u9876\u6240\u8868\u793a\u7684\u90a3\u4e2a\u8fb9\u6743\u662f\u9700\u8981\u8ba1\u7b97\u7684\uff0c\u800c\u7b2c\u4e8c\u4e2a $tag$ \u90a3\u4e00\u884c\uff0c\u9700\u8981\u6c42\u7684\u8fb9\u662f\u4ece $x$ \u81f3 $y$ \uff08$y$ \u8f83\u6df1\uff09\uff0c\u56e0\u6b64 $x$ \u4e0a\u65b9\u90a3\u6761\u8fb9\uff0c\u5373 $x$ \u4ee3\u8868\u7684\u8fb9\u6743\u662f\u4e0d\u8ba1\u7b97\u7684\uff0c\u9700\u8981\u52a0 $1$\u3002\n### \u4fee\u6539\u8f93\u5165\u7684\u7b2c $i$ \u6761\u8fb9\n\n\u6211\u4eec\u9700\u8981\u5728\u8f93\u5165\u65f6\u8bb0\u5f55\u6bcf\u4e00\u6761\u8fb9\u7684\u7684 $u,v$ \u4e24\u70b9\uff08\u5982\u679c\u4f60\u5199\u94fe\u5f0f\u524d\u5411\u661f\u4e4b\u7c7b\u7684\u8bdd\uff0c\u5b9e\u9645\u4e0a\u5df2\u7ecf\u8bb0\u5f55\u597d\u4e86\uff09\uff0c\u7136\u540e\u7531\u4e8e\u6211\u4eec\u8fb9\u6743\u8d4b\u7ed9\u4e86\u8fb9\u7684\u513f\u5b50\uff0c\u56e0\u6b64\u6211\u4eec\u4fee\u6539\u65f6\u5e94\u8be5\u662f\u627e\u51fa $u,v$ \u4e2d\u6df1\u5ea6\u8f83\u6df1\u7684\u90a3\u4e00\u70b9\uff0c\u4fee\u6539\u8fb9\u6743\u8f6c\u70b9\u6743\u4e4b\u540e\u8fd9\u4e00\u70b9\u7684\u70b9\u6743\u3002\n\n\u4fee\u6539\u5355\u6761\u8fb9\u7684\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nif(ch[0]=='C'){\n    scanf(\"%lld%lld\",&x,&w);\n    int tmp;\n    u=e[x<<1].from,v=e[x<<1].to;//x<<1 \u662f\u56e0\u4e3a\u4f7f\u7528\u94fe\u5f0f\u524d\u5411\u661f\uff0c\u6b63\u53cd\u90fd\u5efa\u4e86\u8fb9\n    if(dep[u]>dep[v]) tmp=u;//\u4fee\u6539\u6df1\u7684\u70b9\n    else tmp=v;\n    updateTree(tmp,w);\n}\n```\n\n\u5904\u7406\u597d\u8fd9\u51e0\u4e2a\u95ee\u9898\u4e4b\u540e\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u6811\u5256\u7684\u677f\u5b50\u4e86\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define ls u<<1\n#define rs u<<1|1\nusing namespace std;\nconst int N=2e5+5;\nconst int inf=2e9;\nstruct SegmentTree{\n\tint len,tag,sum,mx,mn;\n}tree[N<<4];\nstruct edge{\n\tint from,to,nxt,val;\n}e[N<<1];\nint cnt,head[N],n,m,val[N];\nchar ch[20];\ninline void add(int u,int v,int w){\n\te[++cnt].to=v;\n\te[cnt].from=u;\n\te[cnt].nxt=head[u];\n\te[cnt].val=w;\n\thead[u]=cnt;\n}\nint dep[N],fa[N],son[N],siz[N],top[N],id[N],a[N];\ninline void dfs1(int u,int f){\n\tdep[u]=dep[f]+1;\n\tfa[u]=f;siz[u]=1;\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(v==f) continue;\n\t\tval[v]=e[i].val;\n\t\tdfs1(v,u);\n\t\tsiz[u]+=siz[v];\n\t\tif(siz[v]>siz[son[u]]) son[u]=v;\n\t}\n}\nint tot;\ninline void dfs2(int u,int Top){\n\tid[u]=++tot;\n\ta[tot]=val[u];\n\ttop[u]=Top;\n\tif(!son[u]) return;\n\tdfs2(son[u],Top);\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(v==fa[u]||v==son[u]) continue;\n\t\tdfs2(v,v);\n\t}\n}\n//\u4ee5\u4e0b\u4e3a\u7ebf\u6bb5\u6811\ninline void pushup(int u){\n\ttree[u].sum=tree[ls].sum+tree[rs].sum;\n\ttree[u].mx=max(tree[ls].mx,tree[rs].mx);\n\ttree[u].mn=min(tree[ls].mn,tree[rs].mn);\n}\ninline void pushdown(int u){\n\tif(!tree[u].tag) return;\n\ttree[ls].tag^=1;tree[rs].tag^=1;\n\ttree[ls].sum=-tree[ls].sum;tree[rs].sum=-tree[rs].sum;\n\ttree[ls].mx=-tree[ls].mx;tree[rs].mx=-tree[rs].mx;\n\ttree[ls].mn=-tree[ls].mn;tree[rs].mn=-tree[rs].mn;\n\tswap(tree[ls].mx,tree[ls].mn);swap(tree[rs].mx,tree[rs].mn);\n\ttree[u].tag=0;\n}\ninline void build(int u,int l,int r){\n\tif(l==r){\n\t\ttree[u].sum=tree[u].mx=tree[u].mn=a[l];\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(ls,l,mid);build(rs,mid+1,r);\n\tpushup(u);\n}\ninline void update(int u,int l,int r,int k,int w){\n\tif(k<l||k>r) return;\n\tif(l==r){\n\t\ttree[u].sum=tree[u].mx=tree[u].mn=w;\n\t\treturn;\n\t}\n\tpushdown(u);\n\tint mid=(l+r)>>1;\n\tupdate(ls,l,mid,k,w);update(rs,mid+1,r,k,w);\n\tpushup(u);\n}\ninline void makeop(int u,int l,int r,int L,int R){\n\tif(r<L||l>R) return;\n\tif(l>=L&&r<=R){\n\t\ttree[u].tag^=1;\n\t\ttree[u].sum=-tree[u].sum;\n\t\ttree[u].mx=-tree[u].mx;\n\t\ttree[u].mn=-tree[u].mn;\n\t\tswap(tree[u].mx,tree[u].mn);\n\t\treturn;\n\t}\n\tpushdown(u);\n\tint mid=(l+r)>>1;\n\tmakeop(ls,l,mid,L,R);makeop(rs,mid+1,r,L,R);\n\tpushup(u);\n}\ninline int querysum(int u,int l,int r,int L,int R){\n\tif(r<L||l>R) return 0;\n\tif(l>=L&&r<=R) return tree[u].sum;\n\tpushdown(u);\n\tint mid=(l+r)>>1;\n\treturn querysum(ls,l,mid,L,R)+querysum(rs,mid+1,r,L,R);\n}\ninline int querymx(int u,int l,int r,int L,int R){\n\tif(r<L||l>R) return -inf;\n\tif(l>=L&&r<=R) return tree[u].mx;\n\tpushdown(u);\n\tint mid=(l+r)>>1;\n\treturn max(querymx(ls,l,mid,L,R),querymx(rs,mid+1,r,L,R));\n}\ninline int querymn(int u,int l,int r,int L,int R){\n\tif(r<L||l>R) return inf;\n\tif(l>=L&&r<=R) return tree[u].mn;\n\tpushdown(u);\n\tint mid=(l+r)>>1;\n\treturn min(querymn(ls,l,mid,L,R),querymn(rs,mid+1,r,L,R));\n}\n//\u4ee5\u4e0a\u4e3a\u7ebf\u6bb5\u6811\ninline void updateTree(int x,int w){\n\tupdate(1,1,n,id[x],w);\n}\ninline void NTree(int x,int y){\n\twhile(top[x]!=top[y]){\n\t\tif(dep[top[x]]<dep[top[y]]) swap(x,y);\n\t\tmakeop(1,1,n,id[top[x]],id[x]);\n\t\tx=fa[top[x]];\n\t}\n\tif(x!=y){\n\t\tif(dep[x]>dep[y]) swap(x,y);\n\t\tmakeop(1,1,n,id[x]+1,id[y]);\t\t\n\t}\n\n}\ninline void SumTree(int x,int y){\n\tint ans=0;\n\twhile(top[x]!=top[y]){\n\t\tif(dep[top[x]]<dep[top[y]]) swap(x,y);\n\t\tans+=querysum(1,1,n,id[top[x]],id[x]);\n\t\tx=fa[top[x]];\n\t}\n\tif(x!=y){\n\t\tif(dep[x]>dep[y]) swap(x,y);\n\t\tans+=querysum(1,1,n,id[x]+1,id[y]);\t\n\t}\n\tprintf(\"%lld\\n\",ans);\n}\ninline void MaxTree(int x,int y){\n\tint ans=-inf;\n\twhile(top[x]!=top[y]){\n\t\tif(dep[top[x]]<dep[top[y]]) swap(x,y);\n\t\tans=max(querymx(1,1,n,id[top[x]],id[x]),ans);\n\t\tx=fa[top[x]];\n\t}\n\tif(x!=y){\n\t\tif(dep[x]>dep[y]) swap(x,y);\n\t\tans=max(querymx(1,1,n,id[x]+1,id[y]),ans);\t\n\t}\n\tprintf(\"%lld\\n\",ans);\n}\ninline void MinTree(int x,int y){\n\tint ans=inf;\n\twhile(top[x]!=top[y]){\n\t\tif(dep[top[x]]<dep[top[y]]) swap(x,y);\n\t\tans=min(querymn(1,1,n,id[top[x]],id[x]),ans);\n\t\tx=fa[top[x]];\n\t}\n\tif(x!=y){\n\t\tif(dep[x]>dep[y]) swap(x,y);\n\t\tans=min(querymn(1,1,n,id[x]+1,id[y]),ans);\t\n\t}\n\tprintf(\"%lld\\n\",ans);\n}\nsigned main(){\n\tscanf(\"%lld\",&n);\n\tfor(int i=1,u,v,w;i<n;i++){\n\t\tscanf(\"%lld%lld%lld\",&u,&v,&w);\n\t\tadd(u+1,v+1,w);add(v+1,u+1,w);\n\t}\n\tdfs1(1,0);\n\tdfs2(1,1);\n\tbuild(1,1,n);\n\tscanf(\"%lld\",&m);\n\tfor(int i=1,w,x,u,v;i<=m;i++){\n\t\tscanf(\"%s\",ch);\n\t\tif(ch[0]=='C'){\n\t\t\tscanf(\"%lld%lld\",&x,&w);\n\t\t\tint tmp;\n\t\t\tu=e[x<<1].from,v=e[x<<1].to;\n\t\t\tif(dep[u]>dep[v]) tmp=u;\n\t\t\telse tmp=v;\n\t\t\tupdateTree(tmp,w);\n\t\t}\n\t\telse if(ch[0]=='N'){\n\t\t\tscanf(\"%lld%lld\",&u,&v);\n\t\t\tNTree(u+1,v+1);\n\t\t}\n\t\telse if(ch[0]=='S'){\n\t\t\tscanf(\"%lld%lld\",&u,&v);\n\t\t\tSumTree(u+1,v+1);\n\t\t}\n\t\telse if(ch[1]=='A'){\n\t\t\tscanf(\"%lld%lld\",&u,&v);\n\t\t\tMaxTree(u+1,v+1);\n\t\t}\n\t\telse{\n\t\t\tscanf(\"%lld%lld\",&u,&v);\n\t\t\tMinTree(u+1,v+1);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1614234498,
        "uid": 195229,
        "name": "water_tomato",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1505 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u65c5\u6e38\u3011"
    },
    {
        "content": "\u5440\u6811\u4e0a\u6570\u636e\u7ed3\u6784\u80af\u5b9a\u662f\u76f4\u63a5\u6811\u5256a\uff01\n\n\u8003\u8651\u8fd9\u4e9b\u64cd\u4f5c\u5982\u4f55\u5728\u5e8f\u5217\u4e0a\u505a\u3002\n\n\u91c7\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e09\u4e2a\u503c\uff1a\n\n- \u533a\u95f4 $[l, r]$ \u7684\u6743\u503c\u6700\u5927\u503c\u3002\n- \u533a\u95f4 $[l, r]$ \u7684\u6743\u503c\u6700\u5c0f\u503c\u3002\n- \u533a\u95f4 $[l, r]$ \u7684\u6743\u503c\u548c\u3002\n\n\u4ee5\u53ca\u4e00\u4e2a\u61d2\u6807\u8bb0\uff0c\u8868\u793a\u7ebf\u6bb5\u6811\u4e2d\u5f53\u524d\u7ed3\u70b9\u5b50\u6811\u662f\u5426\u88ab\u53d6\u53cd\u8fc7\u3002\n\n\u4e8e\u662f\u5c31\u662f\u7ebf\u6bb5\u6811\u533a\u95f4\u95ee\u9898\u677f\u5b50\u4e86\u3002\n\n\u6269\u5c55\u61d2\u6807\u8bb0\uff1a\n\n```cpp\nvoid Spread(int p) {\n\tif(tr[p].lazy) {\n\t\ttr[lson].ma = -tr[lson].ma;\n\t\ttr[lson].mi = -tr[lson].mi;\n\t\tSwap(tr[lson].ma, tr[lson].mi);\n\t\ttr[lson].sum = -tr[lson].sum;\n\t\ttr[lson].lazy ^= 1;\t\t\t\n\t\t\n\t\ttr[rson].ma = -tr[rson].ma;\n\t\ttr[rson].mi = -tr[rson].mi;\n\t\tSwap(tr[rson].ma, tr[rson].mi);\n\t\ttr[rson].sum = -tr[rson].sum;\n\t\ttr[rson].lazy ^= 1;\t\n\t\t\n\t\ttr[p].lazy = false;\t\t\t\n\t}\n}\n```\n\n\u8f6c\u79fb\uff1a\n\n```cpp\t\nvoid Push_Up(int p) {\n\ttr[p].ma = Max(tr[lson].ma, tr[rson].ma);\n\ttr[p].mi = Min(tr[lson].mi, tr[rson].mi);\n\ttr[p].sum = tr[lson].sum + tr[rson].sum;\n}\n```\n\n\u6700\u540e\u5957\u4e0a\u91cd\u94fe\u5256\u5206\u5373\u53ef\u3002\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <string>\n#include <iostream>\n#define lson p << 1\n#define rson p << 1 | 1 \nusing namespace std;\n\nint read() {\n    int k = 1, x = 0;\n    char s = getchar();\n    while (s < '0' || s > '9') {\n        if (s == '-')\n            k = -1;\n        s = getchar();\n    }\n    while (s >= '0' && s <= '9') {\n        x = (x << 3) + (x << 1) + s - '0';\n        s = getchar();\n    }\n    return x * k;\n}\n\nvoid write(int x) {\n    if(x < 0) {\n    \tputchar('-');\n\t\tx = -x;\n    }\n    if(x > 9)\n\t\twrite(x / 10);\n    putchar(x % 10 + '0');\n}\n\nvoid print(int x, char s) {\n\twrite(x);\n\tputchar(s);\n}\n\nvoid Swap(int &x, int &y) {int t = x; x = y; y = t;}\nint Max(int x, int y) {return x > y ? x : y;}\nint Min(int x, int y) {return x < y ? x : y;}\n\nconst int MAXN = 1e5 + 5;\n\nstruct edge {\n\tint v, w;\n\tedge() {}\n\tedge(int V, int W) {\n\t\tv = V;\n\t\tw = W; \n\t}\n};\nvector<edge> mp[MAXN];\n\nvoid Add_Edge(int u, int v, int w) {\n\tmp[u].push_back(edge(v, w));\n\tmp[v].push_back(edge(u, w));\n}\n\nint tot = 0;\n\nstruct node {\n\tint size, dep, top, dfn, son, fa;\n\tnode() {}\n\tnode(int Size, int Dep, int Top, int Dfn, int Son, int Fa) {\n\t\tsize = Size;\n\t\tdep = Dep;\n\t\ttop = Top;\n\t\tdfn = Dfn;\n\t\tson = Son;\n\t\tfa = Fa;\n\t}\n} q[MAXN];\n\nstruct data {\n\tint u, v, w;\n\tdata() {}\n\tdata(int U, int V, int W) {\n\t\tu = U;\n\t\tv = V;\n\t\tw = W;\n\t}\n} e[MAXN];\n\nvoid dfs(int u, int fa) {\n\tint ma = 0;\n\tq[u].size++;\n\tfor(int i = 0; i < mp[u].size(); i++) {\n\t\tint v = mp[u][i].v;\n\t\tif(v == fa)\n\t\t\tcontinue;\n\t\tq[v].fa = u;\n\t\tq[v].dep = q[u].dep + 1;\n\t\tdfs(v, u);\n\t\tq[u].size += q[v].size;\n\t\tif(q[v].size > ma) {\n\t\t\tma = q[v].size;\n\t\t\tq[u].son = v;\n\t\t}\n\t}\n}\n\nvoid dfs2(int u, int fa, int t) {\n\tq[u].top = t;\n\tq[u].dfn = ++tot;\n\tif(!q[u].son)\n\t\treturn ;\n\tdfs2(q[u].son, u, t);\n\tfor(int i = 0; i < mp[u].size(); i++) {\n\t\tint v = mp[u][i].v;\n\t\tif(v == fa || v == q[u].son) \n\t\t\tcontinue;\n\t\tdfs2(v, u, v);\n\t}\n}\n\nstruct Segment_Tree {\n\tint l, r, mi, ma, sum;\n\tbool lazy;\n\tSegment_Tree() {}\n\tSegment_Tree(int L, int R, int Mi, int Ma, bool Lazy, int Sum) {\n\t\tl = L;\n\t\tr = R;\n\t\tmi = Mi;\n\t\tma = Ma;\n\t\tlazy = Lazy;\n\t\tsum = Sum;\n\t}\n} tr[MAXN * 4];\n\nvoid Make_Tree(int p, int l, int r) {\n\ttr[p].l = l;\n\ttr[p].r = r;\n\tif(l == r) \n\t\treturn ;\t\t\n\tint mid = (l + r) >> 1;\n\tMake_Tree(lson, l, mid);\n\tMake_Tree(rson, mid + 1, r);\n}\n\nvoid Push_Up(int p) {\n\ttr[p].ma = Max(tr[lson].ma, tr[rson].ma);\n\ttr[p].mi = Min(tr[lson].mi, tr[rson].mi);\n\ttr[p].sum = tr[lson].sum + tr[rson].sum;\n}\n\nvoid Spread(int p) {\n\tif(tr[p].lazy) {\n\t\ttr[lson].ma = -tr[lson].ma;\n\t\ttr[lson].mi = -tr[lson].mi;\n\t\tSwap(tr[lson].ma, tr[lson].mi);\n\t\ttr[lson].sum = -tr[lson].sum;\n\t\ttr[lson].lazy ^= 1;\t\t\t\n\t\t\n\t\ttr[rson].ma = -tr[rson].ma;\n\t\ttr[rson].mi = -tr[rson].mi;\n\t\tSwap(tr[rson].ma, tr[rson].mi);\n\t\ttr[rson].sum = -tr[rson].sum;\n\t\ttr[rson].lazy ^= 1;\t\n\t\t\n\t\ttr[p].lazy = false;\t\t\t\n\t}\n}\n\nvoid Tr_Update(int p, int k, int x) {\n\tif(tr[p].l == tr[p].r) {\n\t\ttr[p].ma = x;\n\t\ttr[p].mi = x;\n\t\ttr[p].sum = x;\n\t\treturn ;\n\t}\n\tSpread(p);\n\tint mid = (tr[p].l + tr[p].r) >> 1;\n\tif(k <= mid)\n\t\tTr_Update(lson, k, x);\n\telse\n\t\tTr_Update(rson, k, x);\n\tPush_Up(p);\n}\n\nvoid Tr_Update2(int p, int l, int r) {\n\tif(l <= tr[p].l && tr[p].r <= r) {\n\t\ttr[p].ma = -tr[p].ma;\n\t\ttr[p].mi = -tr[p].mi;\n\t\tSwap(tr[p].ma, tr[p].mi);\t\t\n\t\ttr[p].sum = -tr[p].sum;\n\t\ttr[p].lazy ^= 1;\t\t\t\n\t\treturn ;\n\t}\n\tSpread(p);\n\tint mid = (tr[p].l + tr[p].r) >> 1;\n\tif(l <= mid)\n\t\tTr_Update2(lson, l, r);\n\tif(r > mid)\n\t\tTr_Update2(rson, l, r);\n\tPush_Up(p);\n}\n\nint Tr_Query1(int p, int l, int r) {\n\tif(l <= tr[p].l && tr[p].r <= r)\n\t\treturn tr[p].ma;\n\tSpread(p);\n\tint mid = (tr[p].l + tr[p].r) >> 1, val = -0x3f3f3f3f;\n\tif(l <= mid)\n\t\tval = Max(val, Tr_Query1(lson, l, r));\n\tif(r > mid)\n\t\tval = Max(val, Tr_Query1(rson, l, r));\n\treturn val;\n}\n\nint Tr_Query2(int p, int l, int r) {\n\tif(l <= tr[p].l && tr[p].r <= r)\n\t\treturn tr[p].mi;\n\tSpread(p);\n\tint mid = (tr[p].l + tr[p].r) >> 1, val = 0x3f3f3f3f;\n\tif(l <= mid)\n\t\tval = Min(val, Tr_Query2(lson, l, r));\n\tif(r > mid)\n\t\tval = Min(val, Tr_Query2(rson, l, r));\n\treturn val;\n}\n\nint Tr_Query3(int p, int l, int r) {\n\tif(l <= tr[p].l && tr[p].r <= r)\n\t\treturn tr[p].sum;\n\tSpread(p);\n\tint mid = (tr[p].l + tr[p].r) >> 1, val = 0;\n\tif(l <= mid)\n\t\tval += Tr_Query3(lson, l, r);\n\tif(r > mid)\n\t\tval += Tr_Query3(rson, l, r);\n\treturn val;\n}\n\nvoid Update(int u, int v) {\n\twhile(q[u].top != q[v].top) {\n\t\tif(q[q[u].top].dep < q[q[v].top].dep) \n\t\t\tSwap(u, v);\n\t\tTr_Update2(1, q[q[u].top].dfn, q[u].dfn);\n\t\tu = q[q[u].top].fa;\n\t}\n\tif(u == v)\n\t\treturn ;\n\tif(q[u].dep < q[v].dep)\n\t\tSwap(u, v);\n\tTr_Update2(1, q[q[v].son].dfn, q[u].dfn);\n}\n\nint Query1(int u, int v) {\n\tint res = -0x3f3f3f3f;\n\twhile(q[u].top != q[v].top) {\n\t\tif(q[q[u].top].dep < q[q[v].top].dep) \n\t\t\tSwap(u, v);\n\t\tres = Max(res, Tr_Query1(1, q[q[u].top].dfn, q[u].dfn));\n\t\tu = q[q[u].top].fa;\n\t}\n\tif(u == v)\n\t\treturn res;\n\tif(q[u].dep < q[v].dep)\n\t\tSwap(u, v);\n\tres = Max(res, Tr_Query1(1, q[q[v].son].dfn, q[u].dfn));\n\treturn res;\n}\n\nint Query2(int u, int v) {\n\tint res = 0x3f3f3f3f;\n\twhile(q[u].top != q[v].top) {\n\t\tif(q[q[u].top].dep < q[q[v].top].dep) \n\t\t\tSwap(u, v);\n\t\tres = Min(res, Tr_Query2(1, q[q[u].top].dfn, q[u].dfn));\n\t\tu = q[q[u].top].fa;\n\t}\n\tif(u == v)\n\t\treturn res;\n\tif(q[u].dep < q[v].dep)\n\t\tSwap(u, v);\n\tres = Min(res, Tr_Query2(1, q[q[v].son].dfn, q[u].dfn));\n\treturn res;\n}\n\nint Query3(int u, int v) {\n\tint res = 0;\n\twhile(q[u].top != q[v].top) {\n\t\tif(q[q[u].top].dep < q[q[v].top].dep) \n\t\t\tSwap(u, v);\n\t\tres += Tr_Query3(1, q[q[u].top].dfn, q[u].dfn);\n\t\tu = q[q[u].top].fa;\n\t}\n\tif(u == v)\n\t\treturn res;\n\tif(q[u].dep < q[v].dep)\n\t\tSwap(u, v);\n\tres += Tr_Query3(1, q[q[v].son].dfn, q[u].dfn);\n\treturn res;\n}\n\nint main() {\n\tint n = read();\n\tfor(int i = 1; i < n; i++) {\n\t\tint u = read(), v = read(), w = read();\n\t\tAdd_Edge(u, v, w);\n\t\te[i] = data(u, v, w);\n\t}\n\tq[0].dep = 1;\n\tdfs(0, -1);\n\ttot = 0;\n\tdfs2(0, -1, 0);\n\tMake_Tree(1, 0, n);\n\tfor(int i = 1; i < n; i++) {\n\t\tif(q[e[i].u].dep < q[e[i].v].dep)\n\t\t\tSwap(e[i].u, e[i].v);\n\t\tTr_Update(1, q[e[i].u].dfn, e[i].w);\n\t}\n\tint m = read();\n\tfor(int i = 1; i <= m; i++) {\n\t\tstring st;\n\t\tcin >> st;\n\t\tif(st == \"C\") {\t\n\t\t\tint k = read(), x = read();\n\t\t\tTr_Update(1, q[e[k].u].dfn, x);\n\t\t}\n\t\telse if(st == \"N\") {\n\t\t\tint l = read(), r = read();\n\t\t\tUpdate(l, r);\n\t\t}\n\t\telse if(st == \"MAX\") {\n\t\t\tint l = read(), r = read();\n\t\t\tprint(Query1(l, r), '\\n');\n\t\t}\t\n\t\telse if(st == \"MIN\") {\n\t\t\tint l = read(), r = read();\n\t\t\tprint(Query2(l, r), '\\n');\n\t\t}\t\t\n\t\telse {\n\t\t\tint l = read(), r = read();\n\t\t\tprint(Query3(l, r), '\\n');\n\t\t}\t\t\t\n\t} \n\treturn 0;\t\n}\n```",
        "postTime": 1614222714,
        "uid": 266779,
        "name": "STrAduts",
        "ccfLevel": 6,
        "title": "\u65c5\u6e38 \u9898\u89e3"
    },
    {
        "content": "## \u9898\u89e3 P1505 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u65c5\u6e38\u3011\n\n### \u9898\u610f\n\n+ \u8f93\u5165\u4e00\u68f5\u6709 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u6709\u8fb9\u6743\uff0c\u65e0\u70b9\u6743\uff1b\n+ $m$ \u4e2a\u64cd\u4f5c\uff0c\u652f\u6301\n1. \u5355\u8fb9\u4fee\u6539\u8fb9\u6743\uff1b\n2. \u8def\u5f84\u8fb9\u6743\u53d8\u76f8\u53cd\u6570\uff1b\n3. \u6c42\u8def\u5f84\u8fb9\u6743\u548c\uff1b\n4. \u6c42\u8def\u5f84\u8fb9\u6743\u6700\u5927\u503c\uff1b\n5. \u6c42\u8def\u5f84\u8fb9\u6743\u6700\u5c0f\u503c\uff1b\n+ $1\\le n,m\\le2\\times10^5$\u3002\n\n### \u505a\u6cd5\n\n\u6811\u5256\u5957\u7ebf\u6bb5\u6811\uff0c\u96be\u70b9\u5728\u4e8e\u533a\u95f4\u6240\u6709\u6570\u53d8\u76f8\u53cd\u6570\u3002\n\n\u533a\u95f4\u548c\u53d8\u4e3a\u539f\u6765\u7684\u76f8\u53cd\u6570\uff08~~\u663e\u7136~~\uff09\u3002\n\n\u533a\u95f4\u6700\u5927\u503c\u53d8\u6210\u76f8\u53cd\u6570\u540e\u80af\u5b9a\u662f\u6700\u5c0f\u503c\u3002\n\n\u53cd\u8bc1\u6cd5\uff1a\u82e5\u8fd8\u6709\u66f4\u5c0f\u7684\u6570\uff0c\u90a3\u4e48\u53d8\u76f8\u53cd\u6570\u524d\u80af\u5b9a\u6bd4\u533a\u95f4\u6700\u5927\u503c\u66f4\u5927\uff0c\u77db\u76fe\u3002\n\n\u533a\u95f4\u6700\u5c0f\u503c\u4ea6\u7136\u3002\n\n\u5269\u4e0b\u7684\u5c31\u662f\u677f\u5b50\u4e86\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nconst int inf = 0x7fffffff;\n\nconst int N = 2e5 + 5;\n\nstruct Edge {\n\tint to, dis, i;\n};\n\nvector<Edge> edge[N];\n\nvoid add(int u, int v, int w, int i) {\n\tedge[u].push_back((Edge){v, w, i});\n}\n\nint dep[N];\nint father[N];\nint size[N];\nint son[N];\nint node[N];\n\nvoid dfs1(int x) {\n\tsize[x] = 1;\n\tfor (int i = 0; i < edge[x].size(); ++i) {\n\t\tint to = edge[x][i].to;\n\t\tif (to == father[x]) {\n\t\t\tcontinue;\n\t\t}\n\t\tnode[edge[x][i].i] = to;\n\t\tfather[to] = x;\n\t\tdep[to] = dep[x] + 1;\n\t\tdfs1(to);\n\t\tsize[x] += size[to];\n\t\tif (size[son[x]] < size[to]) {\n\t\t\tson[x] = to;\n\t\t}\n\t}\n}\n\nint top[N];\nint id[N], idtot;\nint val[N];\n\nvoid dfs2(int x, int t, int w) {\n\ttop[x] = t;\n\tid[x] = ++idtot;\n\tval[idtot] = w;\n\tfor (int i = 0; i < edge[x].size(); ++i) {\n\t\tint to = edge[x][i].to;\n\t\tif (son[x] == to) {\n\t\t\tdfs2(son[x], t, edge[x][i].dis);\n\t\t}\n\t}\n\tfor (int i = 0; i < edge[x].size(); ++i) {\n\t\tint to = edge[x][i].to;\n\t\tif (to == son[x] || to == father[x]) {\n\t\t\tcontinue;\n\t\t}\n\t\tdfs2(to, to, edge[x][i].dis);\n\t}\n}\n\nstruct Tree {\n\tTree *lson, *rson;\n\tint sum, maxx, minn;\n\tbool lazy;\n}segment[N + N], *root = segment;\nint tot;\n\nTree operator + (Tree a, Tree b) {\n\tTree ans;\n\tans.sum = a.sum + b.sum;\n\tans.maxx = max(a.maxx, b.maxx);\n\tans.minn = min(a.minn, b.minn);\n\treturn ans;\n}\n\nvoid update(Tree *tree) {\n\ttree->sum = tree->lson->sum + tree->rson->sum;\n\ttree->maxx = max(tree->lson->maxx, tree->rson->maxx);\n\ttree->minn = min(tree->lson->minn, tree->rson->minn);\n}\n\nvoid build(Tree *tree, int l, int r) {\n\tif (l == r) {\n\t\ttree->sum = tree->maxx = tree->minn = val[l];\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\ttree->lson = &segment[++tot];\n\ttree->rson = &segment[++tot];\n\tbuild(tree->lson, l, mid);\n\tbuild(tree->rson, mid + 1, r);\n\tupdate(tree);\n}\n\nvoid pushdown(Tree *tree) {\n\tif (tree->lazy == 0) {\n\t\treturn;\n\t}\n\ttree->lson->sum = -tree->lson->sum;\n\tswap(tree->lson->maxx, tree->lson->minn);\n\ttree->lson->maxx = -tree->lson->maxx;\n\ttree->lson->minn = -tree->lson->minn;\n\ttree->rson->sum = -tree->rson->sum;\n\tswap(tree->rson->maxx, tree->rson->minn);\n\ttree->rson->maxx = -tree->rson->maxx;\n\ttree->rson->minn = -tree->rson->minn;\n\ttree->lson->lazy ^= 1;\n\ttree->rson->lazy ^= 1;\n\ttree->lazy = 0;\n}\n\nvoid change(Tree *tree, int l, int r, int x, int k) {\n\tif (l == r) {\n\t\ttree->sum = tree->maxx = tree->minn = k;\n\t\treturn;\n\t}\n\tpushdown(tree);\n\tint mid = (l + r) >> 1;\n\tif (x <= mid) {\n\t\tchange(tree->lson, l, mid, x, k);\n\t}\n\telse {\n\t\tchange(tree->rson, mid + 1, r, x, k);\n\t}\n\tupdate(tree);\n}\n\nvoid turn(Tree *tree, int l, int r, int x, int y) {\n\tif (x <= l && r <= y) {\n\t\ttree->sum = -tree->sum;\n\t\tswap(tree->maxx, tree->minn);\n\t\ttree->maxx = -tree->maxx;\n\t\ttree->minn = -tree->minn;\n\t\ttree->lazy ^= 1;\n\t\treturn;\n\t}\n\tpushdown(tree);\n\tint mid = (l + r) >> 1;\n\tif (x <= mid) {\n\t\tturn(tree->lson, l, mid, x, y);\n\t}\n\tif (mid < y) {\n\t\tturn(tree->rson, mid + 1, r, x, y);\n\t}\n\tupdate(tree);\n}\n\nTree query(Tree *tree, int l, int r, int x, int y) {\n//\tprintf(\"%d %d %d %d\\n\", l, r, x, y);\n\tif (x <= l && r <= y) {\n\t\treturn *tree;\n\t}\n\tpushdown(tree);\n\tint mid = (l + r) >> 1;\n\tTree a, b;\n\tif (x <= mid) {\n\t\ta = query(tree->lson, l, mid, x, y);\n\t}\n\tif (mid < y) {\n\t\tb = query(tree->rson, mid + 1, r, x, y);\n\t}\n\tif (x <= mid) {\n\t\tif (mid < y) {\n\t\t\treturn a + b;\n\t\t}\n\t\treturn a;\n\t}\n\treturn b;\n}\n\nint n;\n\nint query_max(int x, int y) {\n\tint ans = -inf;\n\twhile (top[x] != top[y]) {\n\t\tif (dep[top[x]] < dep[top[y]]) {\n\t\t\tswap(x, y);\n\t\t}\n\t\tans = max(ans, query(root, 1, n, id[top[x]], id[x]).maxx);\n\t\tx = father[top[x]];\n\t}\n\tif (dep[x] < dep[y]) {\n\t\tswap(x, y);\n\t}\n\tif (x != y) {\n\t\tans = max(ans, query(root, 1, n, id[y] + 1, id[x]).maxx);\n\t}\n\treturn ans;\n}\n\nint query_min(int x, int y) {\n\tint ans = inf;\n\twhile (top[x] != top[y]) {\n\t\tif (dep[top[x]] < dep[top[y]]) {\n\t\t\tswap(x, y);\n\t\t}\n\t\tans = min(ans, query(root, 1, n, id[top[x]], id[x]).minn);\n\t\tx = father[top[x]];\n\t}\n\tif (dep[x] < dep[y]) {\n\t\tswap(x, y);\n\t}\n\tif (x != y) {\n\t\tans = min(ans, query(root, 1, n, id[y] + 1, id[x]).minn);\n\t}\n\treturn ans;\n}\n\nint query_sum(int x, int y) {\n\tint ans = 0;\n\twhile (top[x] != top[y]) {\n\t\tif (dep[top[x]] < dep[top[y]]) {\n\t\t\tswap(x, y);\n\t\t}\n\t\tans += query(root, 1, n, id[top[x]], id[x]).sum;\n\t\tx = father[top[x]];\n\t}\n\tif (dep[x] < dep[y]) {\n\t\tswap(x, y);\n\t}\n\tif (x != y) {\n\t\tans += query(root, 1, n, id[y] + 1, id[x]).sum;\n\t}\n\treturn ans;\n}\n\nvoid tree_turn(int x, int y) {\n\twhile (top[x] != top[y]) {\n\t\tif (dep[top[x]] < dep[top[y]]) {\n\t\t\tswap(x, y);\n\t\t}\n\t\tturn(root, 1, n, id[top[x]], id[x]);\n\t\tx = father[top[x]];\n\t}\n\tif (dep[x] < dep[y]) {\n\t\tswap(x, y);\n\t}\n\tif (x != y) {\n\t\tturn(root, 1, n, id[y] + 1, id[x]);\n\t}\n}\n\nint main() {\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i < n; ++i) {\n\t\tint u, v, w;\n\t\tscanf(\"%d%d%d\", &u, &v, &w);\n\t\t++u;++v;\n\t\tadd(u, v, w, i);\n\t\tadd(v, u, w, i);\n\t}\n\tdfs1(1);\n\tdfs2(1, 1, 0);\n\tbuild(root, 1, n);\n\tint m;\n\tscanf(\"%d\", &m);\n\tfor (int i = 1; i <= m; ++i) {\n\t\tchar c[10];\n\t\tint x, y;\n\t\tscanf(\"%s%d%d\", c, &x, &y);\n//\t\t++x;++y;\n//\t\tprintf(\"%d %d\\n\", x, y);\n\t\tif (c[0] == 'C') {\n//\t\t\t++x;\n\t\t\tchange(root, 1, n, id[node[x]], y);\n\t\t}\n\t\telse if (c[0] == 'N') {\n\t\t\t++x;++y;\n\t\t\ttree_turn(x, y);\n\t\t}\n\t\telse if (c[0] == 'S') {\n\t\t\t++x;++y;\n//\t\t\tprintf(\"1\");\n\t\t\tprintf(\"%d\\n\", query_sum(x, y));\n\t\t}\n\t\telse if (c[1] == 'A') {\n\t\t\t++x;++y;\n\t\t\tprintf(\"%d\\n\", query_max(x, y));\n\t\t}\n\t\telse {\n\t\t\t++x;++y;\n\t\t\tprintf(\"%d\\n\", query_min(x, y));\n\t\t}\n\t}\n}\n```",
        "postTime": 1610025889,
        "uid": 246014,
        "name": "Cutest_Junior",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1505 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u65c5\u6e38\u3011"
    },
    {
        "content": "### \u7b80\u4ecb\uff1a\n\u5c06\u6811\u5256\u6a21\u677f\u9898\u7ef4\u62a4\u7684\u70b9\u6743\u53d8\u4e3a\u4e86\u8fb9\u6743\uff0c\u53ea\u9700\u5229\u7528\u6811\u7684\u57fa\u672c\u6027\u8d28\uff08\u4e00\u4e2a\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u7236\u4eb2\uff09\uff0c\u4ee5\u70b9\u5e26\u8fb9\uff0c\u6bcf\u4e2a\u70b9\u4e0a\u7684\u6743\u503c\u4e3a\u8fd9\u4e2a\u70b9\u5230\u5176\u7236\u8282\u70b9\u7684\u8fb9\u7684\u6743\u503c\uff0c\u5c31\u53ef\u4ee5\u5c06\u5176\u53d8\u4e3a\u6811\u5256\u6a21\u677f\u9898\u4e86\u3002~~\u7136\u800c\u6211\u4ea4\u4e86\u597d\u51e0\u53d1~~\u3002\n### \u8be5\u9898\u6709\u4ee5\u4e0b\u51e0\u4e2a\u5751\u70b9\uff1a\n1. \u6811\u5256\u9000\u51fa\u5faa\u73af\u65f6\uff0c\u5728\u6811\u4e2d\u6df1\u5ea6\u8f83\u5c0f\u7684\u90a3\u4e2a\u8282\u70b9\u6240\u7ef4\u62a4\u7684\u70b9\u6743\u662f\u5b83\u5230\u5b83\u7236\u8282\u70b9\u7684\u90a3\u6761\u8fb9\u7684\u6743\u503c\uff0c\u4e0e\u64cd\u4f5c\u6240\u8981\u7ef4\u62a4\u7684\u4e1c\u897f\u65e0\u5173\u3002\u4ee5\u6c42\u4e00\u6761\u94fe\u4e0a\u8fb9\u6743\u548c\u7684\u64cd\u4f5c\u4e3a\u4f8b\uff0c\u9700\u8981\u5199\u6210\u8fd9\u6837\n\t```c\n\tmn=min(mn,querymin(1,t[u].id+1,t[v].id));\n\t```\n\t\u666e\u901a\u6811\u5256:\n\t```c\n\tmn=min(mn,querymin(1,t[u].id,t[v].id));\n\t```\n    \n1. \u6811\u5256\u9000\u51fa\u5faa\u73af\u65f6\uff0c\u5982\u679c\u4e24\u70b9\u5df2\u7ecf\u91cd\u5408\uff0c\u5219\u4e0d\u9700\u8981\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\uff0c\u6240\u4ee5\u9700\u8981\u7279\u5224\uff08~~\u4e0d\u7279\u5224\u4e5f\u6ca1\u4e8b\uff0c\u8fd9\u6709\u5728\u7384\u5b66\u60c5\u51b5\u4e0b\u624d\u4f1aWA~~\uff09\u3002\n\n1. \u5728\u4fee\u6539\u4e00\u6761\u8fb9\u7684\u6743\u503c\u65f6\uff0c\u7531\u4e8e\u70b9\u7ef4\u62a4\u7684\u662f\u5b83\u5230\u5b83\u7236\u8282\u70b9\u7684\u8fb9\u7684\u6743\u503c\uff0c\u6240\u4ee5\u8981\u4fee\u6539\u7684\u70b9\u662f\u6df1\u5ea6\u8f83\u5c0f\u7684\u90a3\u4e00\u4e2a\u3002 \n### _code:_ \n```c\n#include<bits/stdc++.h>\n#define N (int)(2e5+1)\n#define M 5001\n#define R register\n#define INFI 0x7fffffff\n#define INFL 0x7fffffffffffffff\n#define F(i,start,end) for(R int (i)=(start);(i)<=(end);i++)\nusing namespace std;\ntemplate<typename T> void read(T &x)\n{\n\tint f=1;\n\tx=0;\n\tchar c=getchar();\n\twhile(!isdigit(c))\n\t{\n\t\tif(c=='-')\n\t\t\tf=-1;\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c))\n\t{\n\t\tx=x*10+c-'0';\n\t\tc=getchar();\n\t}\n\tx=x*f;\n\treturn;\n}\nvoid write(int x)\n{\n\tif(x<0)\n\t\tx=~x+1,putchar('-');\n\tif(x>9)\n\t\twrite(x/10);\n\tputchar(x%10+'0');\n\treturn;\n}\nint n,m,cnt,tot;\nchar opt[5];\nvector<pair<int,int> > ve;\nstruct edge\n{\n\tint v,d,next;\n}e[N<<1];\nstruct node\n{\n\tint f,top,dep,d,nd,size,son,id,head;\n}t[N];\nstruct segment_tree\n{\n\t#define ls rt<<1\n\t#define rs rt<<1|1\n\t#define mid (tree[rt].l+tree[rt].r>>1)\n\tstruct node\n\t{\n\t\tint l,r,mn,mx,sm;\n\t\tbool op;\n\t}tree[N<<2];\n\tvoid update(int rt)//\u5c06\u4e00\u4e2a\u70b9\u6240\u7ef4\u62a4\u7684\u533a\u95f4\u91cc\u6240\u6709\u70b9\u7684\u70b9\u6743\u53d8\u4e3a\u5176\u76f8\u53cd\u6570 \n\t{\n\t\ttree[rt].op^=1;//\u6253\u4e0a\u61d2\u6807\u8bb0 \n\t\ttree[rt].sm*=-1;//\u548c\u53d8\u4e3a\u5176\u76f8\u53cd\u6570\uff08\u539f\u7406\u5c0f\u5b66\u5e94\u8be5\u5c06\u8fc7\u5427\uff09 \n\t\ttree[rt].mx*=-1;\n\t\ttree[rt].mn*=-1;\n\t\tswap(tree[rt].mx,tree[rt].mn);//\u6700\u5927\u503c\u53d8\u6210\u6700\u5c0f\u503c\uff0c\u6700\u5c0f\u503c\u53d8\u6210\u6700\u5927\u503c\uff08\u539f\u7406\u5c0f\u5b66\u5e94\u8be5\u4e5f\u8bb2\u8fc7\u5427\uff09 \n\t\treturn;\n\t}\n\tvoid pushup(int rt)//\u5408\u5e76\u4e00\u4e2a\u533a\u95f4\u7684\u4fe1\u606f \n\t{\n\t\ttree[rt].mn=min(tree[ls].mn,tree[rs].mn);\n\t\ttree[rt].mx=max(tree[ls].mx,tree[rs].mx);\n\t\ttree[rt].sm=tree[ls].sm+tree[rs].sm;\n\t\treturn;\n\t}\n\tvoid pushdown(int rt)//\u91ca\u653e\u61d2\u6807\u8bb0 \n\t{\n\t\tif(tree[rt].op)\n\t\t{\n\t\t\ttree[rt].op=0;\n\t\t\tupdate(ls);\n\t\t\tupdate(rs);\n\t\t}\n\t\treturn;\n\t}\n\tvoid build(int rt,int l,int r)//\u5efa\u6811 \n\t{\n\t\ttree[rt].l=l;\n\t\ttree[rt].r=r;\n\t\tif(l==r)\n\t\t{\n\t\t\tif(l==1)//\u5bf9\u4e8e\u6839\u7279\u522b\u5904\u7406 \n\t\t\t{\n\t\t\t\ttree[rt].mx=-INFI;\n\t\t\t\ttree[rt].mn=INFI;\n\t\t\t\ttree[rt].sm=0;\n\t\t\t\treturn;\t\n\t\t\t}\n\t\t\ttree[rt].mn=t[l].nd;\n\t\t\ttree[rt].mx=t[l].nd;\n\t\t\ttree[rt].sm=t[l].nd;\n\t\t\treturn;\n\t\t}\n\t\tbuild(ls,l,mid);\n\t\tbuild(rs,mid+1,r);\n\t\tpushup(rt);\n\t\treturn;\n\t}\n\tvoid modify(int rt,int k,int v)//\u4fee\u6539\u4e00\u6761\u8fb9\u7684\u6743\u503c \n\t{\n\t\tif(tree[rt].l==tree[rt].r)\n\t\t{\n\t\t\ttree[rt].mn=v;\n\t\t\ttree[rt].mx=v;\n\t\t\ttree[rt].sm=v;\n\t\t\treturn;\n\t\t}\n\t\tpushdown(rt);\n\t\tif(k<=mid)\n\t\t\tmodify(ls,k,v);\n\t\telse\n\t\t\tmodify(rs,k,v);\n\t\tpushup(rt);\n\t\treturn;\n\t}\n\tvoid oppose(int rt,int l,int r)//\u5c06\u4e00\u6761\u8fb9\u7684\u6743\u503c\u53d8\u4e3a\u5176\u76f8\u53cd\u6570 \n\t{\n\t\tif(l<=tree[rt].l&&tree[rt].r<=r)\n\t\t{\n\t\t\tupdate(rt);\n\t\t\treturn;\n\t\t}\n\t\tpushdown(rt);\n\t\tif(l<=mid)\n\t\t\toppose(ls,l,r);\n\t\tif(mid<r)\n\t\t\toppose(rs,l,r);\n\t\tpushup(rt);\n\t\treturn;\n\t}\n\tint querymax(int rt,int l,int r)//\u67e5\u8be2\u533a\u95f4\u6700\u5927\u503c \n\t{\n\t\tif(l>tree[rt].r||r<tree[rt].l)\n\t\t\treturn -INFI;\n\t\tif(l<=tree[rt].l&&tree[rt].r<=r)\n\t\t\treturn tree[rt].mx;\n\t\tpushdown(rt);\n\t\treturn max(querymax(ls,l,r),querymax(rs,l,r));\n\t}\n\tint querymin(int rt,int l,int r)//\u67e5\u8be2\u533a\u95f4\u6700\u5c0f\u503c \n\t{\n\t\tif(l>tree[rt].r||r<tree[rt].l)\n\t\t\treturn INFI;\n\t\tif(l<=tree[rt].l&&tree[rt].r<=r)\n\t\t\treturn tree[rt].mn;\n\t\tpushdown(rt);\n\t\treturn min(querymin(ls,l,r),querymin(rs,l,r));\n\t}\n\tint querysum(int rt,int l,int r)//\u67e5\u8be2\u533a\u95f4\u548c \n\t{\n\t\tif(l>tree[rt].r||r<tree[rt].l)\n\t\t\treturn 0;\n\t\tif(l<=tree[rt].l&&tree[rt].r<=r)\n\t\t\treturn tree[rt].sm;\n\t\tpushdown(rt);\n\t\treturn querysum(ls,l,r)+querysum(rs,l,r);\n\t}\n\tint querymax_range(int u,int v)//\u67e5\u8be2\u4e00\u6761\u94fe\u4e0a\u8fb9\u6743\u7684\u6700\u5927\u503c \n\t{\n\t\tint mx=-INFI;\n\t\twhile(t[u].top!=t[v].top)\n\t\t{\n\t\t\tif(t[t[u].top].dep<t[t[v].top].dep)\n\t\t\t\tswap(u,v);\n\t\t\tmx=max(mx,querymax(1,t[t[u].top].id,t[u].id));\n\t\t\tu=t[t[u].top].f;\n\t\t}\n\t\tif(t[u].dep>t[v].dep)\n\t\t\tswap(u,v);\n\t\tif(u!=v)\n\t\t\tmx=max(mx,querymax(1,t[u].id+1,t[v].id));\n\t\treturn mx;\n\t}\n\tint querymin_range(int u,int v)//\u67e5\u8be2\u4e00\u6761\u94fe\u4e0a\u8fb9\u6743\u7684\u6700\u5c0f\u503c \n\t{\n\t\tint mn=INFI;\n\t\twhile(t[u].top!=t[v].top)\n\t\t{\n\t\t\tif(t[t[u].top].dep<t[t[v].top].dep)\n\t\t\t\tswap(u,v);\n\t\t\tmn=min(mn,querymin(1,t[t[u].top].id,t[u].id));\n\t\t\tu=t[t[u].top].f;\n\t\t}\n\t\tif(t[u].dep>t[v].dep)\n\t\t\tswap(u,v);\n\t\tif(u!=v)\n\t\t\tmn=min(mn,querymin(1,t[u].id+1,t[v].id));\n\t\treturn mn;\n\t}\n\tint querysum_range(int u,int v)//\u67e5\u8be2\u4e00\u6761\u94fe\u4e0a\u8fb9\u6743\u7684\u548c \n\t{\n\t\tint sm=0;\n\t\twhile(t[u].top!=t[v].top)\n\t\t{\n\t\t\tif(t[t[u].top].dep<t[t[v].top].dep)\n\t\t\t\tswap(u,v);\n\t\t\tsm+=querysum(1,t[t[u].top].id,t[u].id);\n\t\t\tu=t[t[u].top].f;\n\t\t}\n\t\tif(t[u].dep>t[v].dep)\n\t\t\tswap(u,v);\n\t\tif(u!=v)\n\t\t\tsm+=querysum(1,t[u].id+1,t[v].id);\n\t\treturn sm;\n\t}\n\tvoid oppose_range(int u,int v)//\u5c06\u4e00\u6761\u94fe\u4e0a\u6240\u6709\u8fb9\u7684\u6743\u503c\u53d8\u4e3a\u5176\u76f8\u53cd\u6570 \n\t{\n\t\twhile(t[u].top!=t[v].top)\n\t\t{\n\t\t\tif(t[t[u].top].dep<t[t[v].top].dep)\n\t\t\t\tswap(u,v);\n\t\t\toppose(1,t[t[u].top].id,t[u].id);\n\t\t\tu=t[t[u].top].f;\n\t\t}\n\t\tif(t[u].dep>t[v].dep)\n\t\t\tswap(u,v);\n\t\tif(u!=v)\n\t\t\toppose(1,t[u].id+1,t[v].id);\n\t\treturn;\n\t}\n\t#undef ls\n\t#undef rs\n\t#undef mid\n}st;\nvoid add_edge(int u,int v,int d)\n{\n\te[++cnt]=(edge){v,d,t[u].head};\n\tt[u].head=cnt;\n\te[++cnt]=(edge){u,d,t[v].head};\n\tt[v].head=cnt;\n\treturn;\n}\nvoid dfs1(int u)//\u6811\u5256\u7b2c\u4e00\u6b65 \n{\n\tt[u].size=1;\n\tfor(int i=t[u].head;i;i=e[i].next)\n\t{\n\t\tint v=e[i].v;\n\t\tif(!t[v].size)\n\t\t{\n\t\t\tt[v].f=u;\n\t\t\tt[v].d=e[i].d;\n\t\t\tt[v].dep=t[u].dep+1;\n\t\t\tdfs1(v);\n\t\t\tt[u].size+=t[v].size;\n\t\t\tt[u].son=t[t[u].son].size>=t[v].size?t[u].son:v;\t\n\t\t}\t\n\t}\t\n\treturn;\n}\nvoid dfs2(int u)//\u6811\u5256\u7b2c\u4e8c\u6b65 \n{\n\tt[u].id=++tot;\n\tt[tot].nd=t[u].d;\n\tif(!t[u].son)\n\t\treturn;\n\tt[t[u].son].top=t[u].top;\n\tdfs2(t[u].son);\n\tfor(int i=t[u].head;i;i=e[i].next)\n\t{\n\t\tint v=e[i].v;\n\t\tif(v!=t[u].f&&v!=t[u].son)\n\t\t{\n\t\t\tt[v].top=v;\n\t\t\tdfs2(v);\n\t\t}\n\t}\n\treturn;\n}\nint main()\n{\n//\tfreopen(\"program.in\",\"r\",stdin);\n//\tfreopen(\"program.out\",\"w\",stdout);\n\tread(n);\n\tve.push_back(make_pair(0,0));\n\tF(i,2,n)\n\t{\n\t\tint u,v,w;\n\t\tread(u),read(v),read(w);\n\t\tu++;\n\t\tv++;\n\t\tadd_edge(u,v,w);\n\t\tve.push_back(make_pair(u,v));\n\t}\n\tt[1].dep=1;\n\tdfs1(1);\n\tt[1].top=1;\n\tdfs2(1);\n\tst.build(1,1,n);\n\tread(m);\n\tF(i,1,m)\n\t{\n\t\tint x,y;\n\t\tmemset(opt,'\\0',sizeof(opt));\n\t\tscanf(\"%s\",&opt);\n\t\tread(x),read(y);\n\t\tif(opt[0]=='C')\n\t\t{\n\t\t\tint u=ve[x].first,v=ve[x].second;\n\t\t\tif(t[u].dep<t[v].dep)\n\t\t\t\tst.modify(1,t[v].id,y);\n\t\t\telse\n\t\t\t\tst.modify(1,t[u].id,y);\n\t\t}\n\t\tif(opt[0]=='N')\n\t\t{\n\t\t\tx++;\n\t\t\ty++;\n\t\t\tst.oppose_range(x,y);\n\t\t}\t\n\t\tif(opt[0]=='S')\n\t\t{\n\t\t\tx++;\n\t\t\ty++;\n\t\t\twrite(st.querysum_range(x,y));\n\t\t\tputs(\"\");\n\t\t}\n\t\tif(opt[2]=='X')\n\t\t{\n\t\t\tx++;\n\t\t\ty++;\n\t\t\twrite(st.querymax_range(x,y));\n\t\t\tputs(\"\");\n\t\t}\n\t\tif(opt[2]=='N')\n\t\t{\n\t\t\tx++;\n\t\t\ty++;\n\t\t\twrite(st.querymin_range(x,y));\n\t\t\tputs(\"\");\n\t\t}\n\t}\n \treturn 0;\n}\n```\n",
        "postTime": 1611489908,
        "uid": 219402,
        "name": "FANTASTlC",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1505 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u65c5\u6e38\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9053\u9898\u5c31\u662f\u4e00\u9053\u666e\u901a\u7684\u6811\u94fe\u5256\u5206\uff0c\u5c31\u662f\u6709\u4e9b\u6b65\u9aa4\u53ef\u80fd\u6709\u4e9b\u4e0d\u540c\uff0c\u5927\u5bb6\u90fd\u77e5\u9053\u666e\u901a\u7684\u6811\u5256\u662f\u5bf9\u70b9\u6743\u8fdb\u884c\u64cd\u4f5c\u7684\uff0c\u800c\u8fd9\u9053\u9898\u5374\u662f\u5bf9\u8fb9\u6743\u8fdb\u884c\u64cd\u4f5c\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u5148\u601d\u8003\u5982\u4f55\u624d\u80fd\u5c06\u8fb9\u6743\u8f6c\u5316\u4e3a\u70b9\u6743\u7136\u540e\u8fdb\u884c\u6811\u5256\u7136\u540e\u8fdb\u884c\u64cd\u4f5c\uff0c\u5176\u5b9e\u8fd9\u4e2a\u95ee\u9898\u5f88\u7b80\u5355\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\uff0c\u5c31\u662f\u5c06\u8fb9\u6743\u8f6c\u5316\u5230\u8fd9\u4e2a\u8fb9\u6240\u8fde\u7684\u513f\u5b50\u8282\u70b9\u4e0a\uff0c\u4e5f\u5c31\u662fdfs\u5e8f\u66f4\u5927\u7684\u70b9\u4e0a\uff0c\u8fd9\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f\u8fd9\u662f\u56e0\u4e3a\u5982\u679c\u4f60\u5c06\u8fb9\u6743\u8f6c\u5316\u5230\u8fd9\u4e2a\u8fb9\u8fde\u7684\u7236\u4eb2\u4e0a\uff0c\u4e5f\u5c31\u662fdfs\u5e8f\u66f4\u5c0f\u7684\u90a3\u4e2a\u70b9\u4e0a\u7684\u8bdd\uff0c\u4f1a\u51fa\u73b0\u591a\u6761\u8fb9\u8fde\u5411\u540c\u4e00\u4e2a\u7236\u4eb2\u7684\u60c5\u51b5\uff0c\u8fd9\u6837\u4f60\u5c31\u4e0d\u77e5\u9053\u8fd9\u4e2a\u70b9\u4e0a\u7684\u70b9\u6743\u7a76\u7adf\u662f\u54ea\u4e2a\u8fb9\u7684\u8fb9\u6743\uff0c\u5982\u679c\u8fde\u5411\u513f\u5b50\u7684\u8bdd\u5c31\u4e0d\u4f1a\u51fa\u73b0\u8fd9\u79cd\u95ee\u9898\uff0c\u56e0\u4e3a\u4e00\u4e2a\u513f\u5b50\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u7236\u4eb2\u8282\u70b9\uff0c\u6240\u4ee5\u5c06\u8fb9\u8f6c\u6210\u70b9\u7684\u64cd\u4f5c\u6211\u4eec\u5c31\u89e3\u51b3\u4e86\u3002\u518d\u770b\u4e0b\u4e00\u4e2a\u64cd\u4f5c\uff0c\u5c06\u8def\u5f84\u4e0a\u7684\u8fb9\u6743\u5168\u90e8\u53d8\u4e3a\u76f8\u53cd\u6570\uff0c\u8fd9\u4e2a\u5f88\u7b80\u5355\uff0c\u4e58\u4ee5\u4e00\u4e2a-1\u5c31\u597d\u4e86\uff0c\u5269\u4e0b\u7684\u4e09\u4e2a\u64cd\u4f5c\u90fd\u662f\u6811\u5256\u5e38\u89c4\u64cd\u4f5c\uff0c\u4e0d\u518d\u8fc7\u591a\u8d58\u8ff0\uff0c\u5982\u679c\u8fd8\u6709\u4e0d\u61c2\u7684\u8bf7\u770b\u4ee3\u7801\u53ca\u4ee3\u7801\u4e2d\u6ce8\u91ca\uff0c\u6216\u8005\u662f\u6539\u4e0d\u51fa\u6765\u9519\u7684\u4e5f\u53ef\u4ee5\u89c2\u770b\u4ee3\u7801\u4e2d\u7684\u6ce8\u91ca\uff0c\u6ce8\u91ca\u4e2d\u6307\u51fa\u4e86\u672c\u849f\u84bb\u8ba4\u4e3a\u53ef\u80fd\u4f1a\u6bd4\u8f83\u5bb9\u6613\u51fa\u9519\u7684\u4e00\u4e9b\u5730\u65b9\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int N = 1e6 + 5;\nstruct node{\n    int lef;\n    int rig;\n    int minn;\n    int maxn;\n    int sum;//\u5904\u7406\u5404\u79cd\u64cd\u4f5c\n    int aim;//pushdown\u61d2\u6807\u8bb0\n} Tree[N];\nint head[N];\nint nxt[N];\nint ver[N];\nint cnt;\nint edge[N];\nint a[N];\nint b[N];\nint etp[N];\nint link[N];\nvoid add(int x,int y,int z)\n{\n    nxt[++cnt] = head[x];\n    head[x] = cnt;\n    ver[cnt] = y;\n    link[cnt] = z;\n}\nint top[N];\nint siz[N];\nint dep[N];\nint father[N];\nint son[N];\nint belong[N];\nint id[N];\nint idx;\nvoid dfs1(int now,int fa,int depth)\n{\n    father[now] = fa;\n    dep[now] = depth;\n    siz[now] = 1;\n    for (int i = head[now]; i;i=nxt[i])\n    {\n        int v0 = ver[i];\n        if(v0==fa)\n            continue;\n        etp[v0] = link[i];//\u6b64\u5904\u5373\u4e3a\u5c06\u8fb9\u6743\u8f6c\u4e3a\u513f\u5b50\u70b9\u6743\u7684\u64cd\u4f5c\n        dfs1(v0, now, depth + 1);\n        siz[now] += siz[v0];\n        if(siz[v0]>siz[son[now]])\n            son[now] = v0;\n    }\n}\nvoid dfs2(int now,int t)\n{\n    id[now] = ++idx;\n    top[now] = t;\n    belong[idx] = etp[now];\n    if(!son[now])\n        return;\n    dfs2(son[now], t);\n    for (int i = head[now]; i;i=nxt[i])\n    {\n        int v0 = ver[i];\n        if(v0==father[now]||v0==son[now])\n            continue;\n        dfs2(v0, v0);\n    }\n}\nvoid pushup(int now)\n{\n    Tree[now].sum = Tree[now << 1].sum + Tree[now << 1 | 1].sum;\n    Tree[now].maxn = max(Tree[now << 1].maxn, Tree[now << 1 | 1].maxn);\n    Tree[now].minn = min(Tree[now << 1].minn, Tree[now << 1 | 1].minn);\n}//pushup\u968f\u65f6\u66f4\u65b0\u4e09\u4e2a\u64cd\u4f5c\u6570\nvoid pushdown(int now)\n{\n    if(Tree[now].aim)\n    {\n        swap(Tree[now << 1].maxn, Tree[now << 1].minn);\n        swap(Tree[now << 1 | 1].maxn, Tree[now << 1 | 1].minn);//\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8fb9\u6743\u53d8\u4e3a\u76f8\u53cd\u6570\uff0c\u76f8\u5bf9\u5e94\u7684\u6700\u5927\u503c\u4e5f\u5c31\u53d8\u6210\u4e86\u6700\u5c0f\u503c\uff0c\u6700\u5c0f\u503c\u53d8\u6210\u4e86\u6700\u5927\u503c\n        Tree[now << 1].maxn *= -1;\n        Tree[now << 1].minn *= -1;\n        Tree[now << 1 | 1].maxn *= -1;\n        Tree[now << 1 | 1].minn *= -1;\n        Tree[now << 1].sum *= -1;\n        Tree[now << 1 | 1].sum *= -1;\n        Tree[now << 1].aim =1;\n\t\tTree[now << 1 | 1].aim =1;\n        Tree[now].aim = 0;\n    }\n}\nvoid build(int now,int l,int r)\n{\n    Tree[now].lef = l;\n    Tree[now].rig = r;\n    if(l==r)\n    {\n        Tree[now].maxn = Tree[now].minn = Tree[now].sum = belong[l];\n        return;\n    }\n    int mid = l + r >> 1;\n    build(now << 1, l, mid);\n    build(now << 1 | 1, mid + 1, r);\n    pushup(now);\n}\nvoid change(int now,int l,int r,int x)\n{\n\tif(l==Tree[now].lef&&Tree[now].rig==r)\n\t{\n\t\tTree[now].sum=Tree[now].maxn=Tree[now].minn=x;//\u5355\u70b9\u4fee\u6539\u540e\u4e09\u4e2a\u64cd\u4f5c\u6570\u90fd\u8981\u8ddf\u7740\u53d8\u5316\n\t\treturn;\n\t}\n\tpushdown(now);\n\tint mid=(Tree[now].lef+Tree[now].rig)>>1;\n\tif(l<=mid)\n\t\tchange(now<<1,l,r,x);\n\tif(r>mid)\n\t\tchange(now<<1|1,l,r,x);\n\tpushup(now);//\u4fee\u6539\u4e2d\u5343\u4e07\u4e0d\u8981\u5fd8\u8bb0\u4e86pushdown\u548cpushup\uff0c\u4e0b\u540c\n}//\u7b2c\u4e00\u4e2a\u4fee\u6539\uff0c\u5355\u70b9\u4fee\u6539\nvoid change2(int now,int l,int r)\n{\n\tif(l<=Tree[now].lef&&Tree[now].rig<=r)\n\t{\n\t\tTree[now].sum*=-1;\n\t\tswap(Tree[now].maxn,Tree[now].minn);\n\t\tTree[now].maxn*=-1;\n\t\tTree[now].minn*=-1;\n\t\tTree[now].aim=1;\n\t\treturn;\n\t}\n\tpushdown(now);\n\tint mid=(Tree[now].lef+Tree[now].rig)>>1;\n\tif(l<=mid)\n\t\tchange2(now<<1,l,r);\n\tif(r>mid)\n\t\tchange2(now<<1|1,l,r);\n\tpushup(now);\n}//\u7b2c\u4e8c\u4e2a\u4fee\u6539\uff0c\u533a\u95f4\u4fee\u6539\nint query1(int now,int l,int r)\n{\n\tif(l<=Tree[now].lef&&Tree[now].rig<=r)\n\t{\n\t\treturn Tree[now].sum;\n\t}\n\tpushdown(now);//\u67e5\u8be2\u4e0d\u7528pushup,\u4f46\u4e5f\u522b\u5fd8\u4e86pushdown\uff0c\u672c\u849f\u84bb\u66fe\u7ecf\u56e0\u4e3a\u5fd8\u8bb0\u67e5\u8be2\u4e2dpushdown\u5bfc\u81f4\u6539\u4e86\u4e00\u4e0b\u5348\u90fd\u6ca1\u6539\u51fa\u6765\n\tint mid=(Tree[now].lef+Tree[now].rig)>>1;\n\tint res=0;\n\tif(l<=mid)\n\t\tres+=query1(now<<1,l,r);\n\tif(r>mid)\n\t\tres+=query1(now<<1|1,l,r);\n\treturn res;\n}//\u7b2c\u4e00\u4e2a\u67e5\u8be2\uff0c\u8def\u5f84\u4e0a\u8fb9\u6743\u548c\u67e5\u8be2\nint query2(int now,int l,int r)\n{\n\tif(l<=Tree[now].lef&&Tree[now].rig<=r)\n\t{\n\t\treturn Tree[now].maxn;\n\t}\n\tpushdown(now);\n\tint mid=(Tree[now].lef+Tree[now].rig)>>1;\n\tint res=-0x7fffffff;\n\tif(l<=mid)\n\t\tres=max(res,query2(now<<1,l,r));\n\tif(r>mid)\n\t\tres=max(res,query2(now<<1|1,l,r));\n\treturn res;\n}//\u7b2c\u4e8c\u4e2a\u67e5\u8be2\uff0c\u8def\u5f84\u4e0a\u8fb9\u6743\u6700\u5927\u503c\u67e5\u8be2\nint query3(int now,int l,int r)\n{\n\tif(l<=Tree[now].lef&&Tree[now].rig<=r)\n\t{\n\t\treturn Tree[now].minn;\n\t}\n\tpushdown(now);\n\tint mid=(Tree[now].lef+Tree[now].rig)>>1;\n\tint res=0x7fffffff;\n\tif(l<=mid)\n\t\tres=min(res,query3(now<<1,l,r));\n\tif(r>mid)\n\t\tres=min(res,query3(now<<1|1,l,r));\n\treturn res;\n}//\u7b2c\u4e09\u4e2a\u67e5\u8be2\uff0c\u8def\u5f84\u4e0a\u8fb9\u6743\u6700\u5c0f\u503c\u67e5\u8be2\nvoid modify_path(int u,int v)\n{\n\twhile(top[u]!=top[v])\n\t{\n\t\tif(dep[top[u]]<dep[top[v]])\n\t\t\tswap(u,v);\n\t\tchange2(1,id[top[u]],id[u]);\n\t\tu=father[top[u]];\n\t}\n\tif(dep[u]>dep[v])\n\t\tswap(u,v);\n\tchange2(1,id[u]+1,id[v]);//\u6ce8\u610f\u8fd9\u4e2a\u5730\u65b9\u5de6\u8fb9\u754c\u662fid[u]+1\uff0c\u8fd9\u4e5f\u662f\u5f88\u91cd\u8981\u4ee5\u53ca\u5f88\u5bb9\u6613\u72af\u9519\u7684\u4e00\u70b9\uff0c\u4e3a\u4ec0\u4e48\u662fid[u]+1\u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u5728\u8fb9\u6743\u8f6c\u5316\u4e3a\u70b9\u6743\u7684\u65f6\u5019\u662f\u5c06\u8fb9\u6743\u8f6c\u79fb\u7ed9\u4e86\u513f\u5b50\uff0c\u6240\u4ee5\u8bf4\u67e5\u627eu\u81f3v\u4e0a\u7684\u8fb9\u6743\u7684\u65f6\u5019\u53ea\u9700\u8981\u67e5\u5230u\u7684\u513f\u5b50\u5373\u53ef\uff0cu\u7684\u513f\u5b50\u7684dfs\u5e8f\u5373\u4e3aid[u]+1\uff0c\u5982\u679c\u8fd8\u662f\u6309\u7167\u5e38\u89c4\u5199\u7684\u8bdd\u5c31\u4f1a\u67e5\u8be2\u5230u\u8282\u70b9\u4ee5\u53ca\u5b83\u7684\u7236\u4eb2\u4e4b\u95f4\u7684\u90a3\u6761\u8fb9\uff0c\u4e0d\u7b26\u5408\u8981\u6c42\u3002\u4e0b\u540c\n}\nint query_path_SUM(int u,int v)\n{\n\tint res=0;\n\twhile(top[u]!=top[v])\n\t{\n\t\tif(dep[top[u]]<dep[top[v]])\n\t\t\tswap(u,v);\n\t\tres+=query1(1,id[top[u]],id[u]);\n\t\tu=father[top[u]];\n\t}\n\tif(dep[u]>dep[v])\n\t\tswap(u,v);\n\tres+=query1(1,id[u]+1,id[v]);\n\treturn res;\n}\nint query_path_MAXN(int u,int v)\n{\n\tint res=-0x7fffffff;\n\twhile(top[u]!=top[v])\n\t{\n\t\tif(dep[top[u]]<dep[top[v]])\n\t\t\tswap(u,v);\n\t\tres=max(res,query2(1,id[top[u]],id[u]));\n\t\tu=father[top[u]];\n\t}\n\tif(dep[u]>dep[v])\n\t\tswap(u,v);\n\tres=max(res,query2(1,id[u]+1,id[v]));\n\treturn res;\n}\nint query_path_MINN(int u,int v)\n{\n\tint res=0x7fffffff;\n\twhile(top[u]!=top[v])\n\t{\n\t\tif(dep[top[u]]<dep[top[v]])\n\t\t\tswap(u,v);\n\t\tres=min(res,query3(1,id[top[u]],id[u]));\n\t\tu=father[top[u]];\n\t}\n\tif(dep[u]>dep[v])\n\t\tswap(u,v);\n\tres=min(res,query3(1,id[u]+1,id[v]));\n\treturn res;\n}\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    for (int i = 1; i < n;i++)\n    {\n        scanf(\"%d%d%d\", &a[i], &b[i], &edge[i]);\n        a[i]++;\n        b[i]++;//\u8bb0\u5f97++\uff0c\u8282\u70b9\u7f16\u53f7\u4ece0\u5f00\u59cb\n        add(a[i], b[i], edge[i]);\n        add(b[i], a[i], edge[i]);\n    }\n    dfs1(1,0,1);\n    dfs2(1,1);\n    build(1,1,n);\n\tint m;\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tstring op;\n\t\tint u,v;\n\t\tcin>>op;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tu++;\n\t\tv++;//\u8fd9\u4e2a\u5730\u65b9\u4e5f\u4e00\u5b9a\u8981\u8bb0\u5f97++\n\t\tif(op==\"C\")\n\t\t{\n\t\t\tu--;\n\t\t\tv--;\n\t\t\tint temp;\n\t\t\tif(dep[a[u]]>dep[b[u]])\n\t\t\t\ttemp=id[a[u]];\n\t\t\telse \n\t\t\t\ttemp=id[b[u]];//\u54ea\u4e2a\u7684\u6df1\u5ea6\u6df1\u5c31\u67e5\u627e\u54ea\u4e2a\u70b9\uff0c\u56e0\u4e3a\u6df1\u5ea6\u6df1\u7684\u70b9\u5373\u4e3a\u513f\u5b50\uff0c\u513f\u5b50\u4e0a\u7684\u70b9\u6743\u5373\u4e3a\u8be5\u6761\u8fb9\u7684\u8fb9\u6743\n\t\t\tchange(1,temp,temp,v);\n\t\t}\n\t\telse if(op==\"N\")\n\t\t{\n\t\t\tmodify_path(u,v);\n\t\t}\n\t\telse if(op==\"SUM\")\n\t\t{\n\t\t\tprintf(\"%d\\n\",query_path_SUM(u,v));\n\t\t}\n\t\telse if(op==\"MAX\")\n\t\t{\n\t\t\tprintf(\"%d\\n\",query_path_MAXN(u,v));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"%d\\n\",query_path_MINN(u,v));\n\t\t}\n\t} \n}\n```\n",
        "postTime": 1605446459,
        "uid": 278481,
        "name": "Link_Space",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1505 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u65c5\u6e38\u3011"
    }
]