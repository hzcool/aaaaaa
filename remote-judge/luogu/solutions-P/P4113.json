[
    {
        "content": "### \u63d0\u4f9b\u4e00\u4e2a\u6309\u7167\u53f3\u7aef\u70b9\u6392\u5e8f\u7684\u601d\u8def\uff08\u7c7b\u6bd4hh\u7684\u9879\u94fe\uff09\n#### \u56de\u987ehh\u7684\u9879\u94fe\uff0c\u6211\u4eec\u4f7f\u7528\u79bb\u7ebf+\u6811\u72b6\u6570\u7ec4\uff0c\u548clast[j]\u8868\u793a\u4e0a\u4e00\u6b21\u51fa\u73b0j\u7684\u4f4d\u7f6e\uff0c\u5bf9\u4e8e\u7b2cp\u4e2a\u7684\u6570j,\u6211\u4eecadd(last[j],-1),add(p,1),\u56e0\u4e3a\u6211\u4eec\u6309\u7167r\u6392\u5e8f\uff0c\u53ea\u7528\u7ba1\u6700\u53f3\u8fb9\u7684\u4e00\u4e2a\uff0c\u6240\u4ee5\u7559\u4e0b\u6700\u53f3\u7aef\u7684\u5c31\u53ef\u4ee5\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee\u76f4\u63a5\u6811\u72b6\u6570\u7ec4\u6c42\u533a\u95f4\u548c\uff1b\n#### \u6bd4\u8f83\u4e00\u4e0b\u8fd9\u4e24\u9053\u9898\u7684\u533a\u522b\uff0c\u540c\u6837\u662f\u8ba1\u7b97\u989c\u8272\u4e0d\u540c\u7684\u6570\u91cf\uff0c\u4f46\u662f\u8fd9\u9053\u9898\u76ee\u8981\u6c42\u53ea\u6709\u5b58\u5728\u4e24\u4e2a\u76f8\u540c\u989c\u8272\u8fd9\u4e2a\u989c\u8272\u624d\u505a\u51fa\u8d21\u732e\uff0c\u600e\u4e48\u529e\u5462\uff1f\n#### \u6211\u4eec\u7ef4\u62a4\u4e24\u4e2a\u4e1c\u897f\uff0clast1[j]\u8868\u793a\u4e0a\u4e0a\u6b21\u51fa\u73b0j\u7684\u4f4d\u7f6e,last2[j]\u8868\u793a\u4e0a\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\n#### \u5bf9\u4e8e\u7b2cp\u4e2a\u7684\u6570j\n#### \u7b2c\u4e00\u6b21\u51fa\u73b0j\u65f6\u6ca1\u6709\u7528\uff0c\u6211\u4eec\u76f4\u63a5\u8bb0\u5f55last1=p;\n#### \u7b2c\u4e8c\u6b21\u51fa\u73b0j\u65f6\uff0c\u4ed6\u5c31\u4f1a\u4ea7\u751f\u4ee3\u4ef7\uff0c\u4f46\u503c\u5f97\u6ce8\u610f\u7684\u662f\u6211\u4eec\u4e0d\u5e94\u8be5\u5728\u7b2c\u4e8c\u6b21\u51fa\u73b0j\u7684\u4e3a\u4f4d\u7f6e\u4e0a+1\uff0c\u800c\u662f\u5728\u4e0a\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6elast1\u4e0a+1\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u6309\u7167r\u4ece\u5c0f\u5230\u5927\u6392\u5e8f,\u6bd4\u59822,2,3\u8fd9\u4e2a\u5e8f\u5217\uff0c\u5982\u679c\u6211\u4eec\u5728\u7b2c\u4e8c\u6b21\u51fa\u73b02\u7684\u4f4d\u7f6e\u4e0a+1\uff0c\u53d8\u6210(0,1,0)\uff0c\u5f53\u8be2\u95ee[2,3]\u5c31\u4e0d\u5bf9\u4e86,\u5e94\u8be5\u5728\u5012\u6570\u7b2c\u4e8c\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e+1\u53d8\u6210(1,0,0);\n#### \u4e24\u6b21\u4ee5\u4e0a\u51fa\u73b0\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u5012\u6570\u7b2c2\u6b21\u7684\u4f4d\u7f6e\u4e0a+1\uff0c\u5176\u4ed6\u4f4d\u7f6e\u4e0a\u51fa\u73b0j\u5168\u90e8\u4e3a\u96f6\uff0c\u5b9e\u73b0\uff1aadd(last1[j],-1);add(last2[j],1),last1=last2,last2=j;\n### \u6269\u5c55\uff1a\u5982\u679c\u5c06\u9898\u76ee\u7684\u9650\u5236\u6539\u4e00\u6539\u53d8\u6210\u6709n\u4e2a\u989c\u8272\u540c\u65f6\u5728\u8be2\u95ee\u533a\u95f4\uff0c\u6211\u4eec\u6211\u4eec\u53ef\u4ee5\u4ecd\u6309\u7167r\u9012\u589e\u6392\u5e8f\uff0c\u7ef4\u62a4last1,last2,~~,lastn;\u8ba9\u5012\u6570\u7b2cn\u6b21\u7684\u4f4d\u7f6e\u4e0a+1,\u5176\u4ed6\u51fa\u73b0j\u7684\u4f4d\u7f6e\u4e0a\u5168\u662f0\n```\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nstruct node\n{\n\tint l,r,pos;\n}t[2000010];\nint last1[2000010],last2[2000010],c[2000010],a[2000010],ans[2000010];\nint n,q,m;\ninline bool cmp(node A,node B){\n   return A.r<B.r;\n}\ninline void add(int x,int val){\n    for(int i=x;i<=n;i+=(i&-i))c[i]+=val;\n}\ninline int query(int x){\n    int ans=0;\n    for(int i=x;i;i-=(i&-i))ans+=c[i];\n    return ans;\n}\nint main(){\n    scanf(\"%d%d%d\",&n,&q,&m);\n    for(int i=1;i<=n;++i)scanf(\"%d\",&a[i]);\n    for(int i=1;i<=m;++i){\n       scanf(\"%d%d\",&t[i].l,&t[i].r);\n       t[i].pos=i;\n    }\n    sort(t+1,t+m+1,cmp);\n    int j=1;\n    for(int i=1;i<=m;++i){\n    \tfor(;j<=t[i].r;++j){\n           if(!last1[a[j]])last1[a[j]]=j;\n           else {\n           \t  if(!last2[a[j]]){\n           \t  \tadd(last1[a[j]],1);\n                last2[a[j]]=j;\n           \t  }else {\n           \t  \t add(last2[a[j]],1);\n           \t  \t add(last1[a[j]],-1);\n           \t  \t last1[a[j]]=last2[a[j]];\n           \t  \t last2[a[j]]=j;\n           \t  } \n           }\n    \t}\n    \tans[t[i].pos]=query(t[i].r)-query(t[i].l-1);\n    }\n    for(int i=1;i<=m;++i)printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```\n",
        "postTime": 1537348362,
        "uid": 56838,
        "name": "wangjyqh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4113 \u3010[HEOI2012]\u91c7\u82b1\u3011"
    },
    {
        "content": "\u9694\u58c1\u6709\u9053\u548c\u8fd9\u9898\u9898\u610f\u548c\u6837\u4f8b\u4e00\u6bdb\u4e00\u6837\u7684\u9898\u3002\u3002\u3002\u5c31\u662f\u6570\u636e\u8303\u56f4\u5c0f\u4e86\u70b9\u3002\u3002\u3002\n\n\u9898\u610f\u5927\u6982\uff1a\u7ed9\u51fan\u4e2a\u6570\uff0c\u6c42\u533a\u95f4\u51fa\u73b0\u6b21\u6570>=2\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u5efa\u8bae\u505a\u8fd9\u9898\u4e4b\u524d\u53ef\u4ee5\u5148\u53bb\u505a[hh\u7684\u9879\u94fe](https://www.luogu.org/problemnew/show/1972 \"hh\u7684\u9879\u94fe\")\u3002\n\n\u6b64\u9898\u548c\u90a3\u9898\u505a\u6cd5\u7c7b\u4f3c\u3002\n\n\u6211\u4eec\u53ea\u5173\u5fc3\u7684\u662f\u6bcf\u4e2a\u533a\u95f4\u51fa\u73b0\u4e24\u6b21\u53ca\u4ee5\u4e0a\u7684\u6570\u7684\u6700\u540e\u90a3\u4e2a\u3002\n\n\u6bd4\u5982(1,2,3,2,3,1,1)\uff0c\u6211\u4eec\u5982\u679c\u67e5\u8be2[1,7]\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u8fd9\u4e2a\u6570\u5217\u770b\u6210\u662f(0,0,0,1,1,0,1)\uff0c\u7136\u540e\u7528\u524d\u7f00\u548c(\u7528BIT\u7ef4\u62a4)\u6c42\u51fa\u8fd9\u4e2a\u533a\u95f4\u7684\u7b54\u6848\u3002\n\n\u5177\u4f53\u600e\u4e48\u5b9e\u73b0\uff1f\n\n\u6211\u7528\u4e86\u4e00\u79cd\u79bb\u7ebf\u7684\u529e\u6cd5\u3002\n\n\u5148\u628a\u6240\u6709\u8be2\u95ee\u7684\u533a\u95f4\u90fd\u8bfb\u8fdb\u6765\uff0c\u7136\u540e\u6309l\u6392\u5e8f\u3002\n\n\u6211\u4eec\u5148\u5bf9\u6bcf\u4e2a\u6570\u7b2c\u4e8c\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u6807\u8bb0\u4e3a1\u3002\n\n\u56e0\u4e3a\u73b0\u5728l\u662f\u6709\u5e8f\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece1\u5f00\u59cb\u5f80\u540e\u641e\uff0c\u6bcf\u6b21\u641e\u5f53\u524d\u8be2\u95ee\u7684l-1\u4e3a\u6b62\u3002\u5982\u679c\u4e0e\u5f53\u524d\u4f4d\u7f6e\u7684\u6570\u76f8\u540c\u7684\u4e0b\u4e00\u4e2a\u6570\u7684\u4e0b\u4e00\u4e2a\u6570\u5b58\u5728\uff0c\u6211\u4eec\u5c31\u628a\u90a3\u4e2a\u6570\u7684\u4f4d\u7f6e\u6807\u8bb0\u4e3a1\uff0c\u5982\u679c\u4e0e\u5f53\u524d\u4f4d\u7f6e\u7684\u6570\u76f8\u540c\u7684\u4e0b\u4e00\u4e2a\u6570\u5b58\u5728\uff0c\u8bf4\u660e\u6211\u4eec\u4e4b\u524d\u628a\u5b83\u6807\u8bb0\u8fc7\u4e86\uff0c\u5e76\u4e14\u73b0\u5728\u5b83\u4e0d\u7b97\u4e86\uff0c\u56e0\u4e3a\u8981\u51fa\u73b0\u6b21\u6570\u4e3a>=2\uff0c\u800c\u6211\u4eec\u5f53\u524d\u8fd9\u4e2a\u6570\u5df2\u7ecf\u4e0d\u5728\u662f\u5305\u542b\u5728\u8be2\u95ee\u7684\u533a\u95f4\u91cc\u7684\u6570\u4e86\uff0c\u6240\u4ee5\u5b83\u7684\u4e0b\u4e00\u4e2a\u6570\u80af\u5b9a\u4e0d\u662f\u6211\u4eec\u8981\u6807\u8bb0\u7684\u51fa\u73b0\u4e24\u6b21\u53ca\u4ee5\u4e0a\u7684\u6570\u7684\u6700\u540e\u90a3\u4e2a\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u628a\u5b83\u6807\u8bb0\u4e3a0\u3002\n\n\u4ee3\u7801\uff1a\n\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<string>\n#include<set>\n#include<vector>\n#include<map>\n#define For(i,x,y) for (int i=(x);i<=(y);i++)\n#define Dow(i,x,y) for (int i=(x);i>=(y);i--)\n#define cross(i,k) for (int i=first[k];i;i=last[i])\n#define il inline\n#define vd void\n#define ll long long\n#define N 2000010\nusing namespace std;\nnamespace fast_IO {\n    inline char read() {\n        return getchar();\n        static const int IN_LEN = 1000000;\n        static char buf[IN_LEN], *s, *t;\n        if (s == t) {\n            t = (s = buf) + fread(buf, 1, IN_LEN, stdin);\n            if (s == t) return -1;\n        }\n        return *s++;\n    }\n    template<class T>\n    inline void read(T &x) {\n        static bool iosig;\n        static char c;\n        for (iosig = false, c = read(); !isdigit(c); c = read()) {\n            if (c == '-') iosig = true;\n            if (c == -1) return;\n        }\n        for (x = 0; isdigit(c); c = read())\n            x = ((x + (x << 2)) << 1) + (c ^ '0');\n        if (iosig) x = -x;\n    }\n    const int OUT_LEN = 10000000;\n    char obuf[OUT_LEN], *ooh = obuf;\n    inline void print(char c) {\n        if (ooh == obuf + OUT_LEN) fwrite(obuf, 1, OUT_LEN, stdout), ooh = obuf;\n        *ooh++ = c;\n    }\n    template<class T>\n    inline void print(T x) {\n        static int buf[30], cnt;\n        if (x == 0) {\n            print('0');\n        }\n        else {\n            if (x < 0) print('-'), x = -x;\n            for (cnt = 0; x; x /= 10) buf[++cnt] = x % 10 + 48;\n            while (cnt) print((char)buf[cnt--]);\n        }\n    }\n    inline void flush() {\n        fwrite(obuf, 1, ooh - obuf, stdout);\n    }\n}\nusing namespace fast_IO;\nstruct node{\n    int l,r,id;\n}q[N];\nint c[N],ans[N],n,m,k,color[N],first[N],next[N],nnext[N],b[N];\nil bool cmp(node x,node y){return x.l<y.l;}\nil int lowbit(int x){return x&(-x);}\nil vd add(int x,int y){\n    for(int i=x;i<=n;i+=lowbit(i)) c[i]+=y;\n}\nil int query(int x){\n    int sum=0;\n    for (int i=x;i>0;i-=lowbit(i)) sum+=c[i];\n    return sum;\n}\nint main(){\n    read(n),read(k),read(m);\n    For(i,1,n) read(color[i]);\n    Dow(i,n,1){\n        next[i]=first[color[i]];\n        first[color[i]]=i;\n    }\n    For(i,1,n)\n        nnext[i]=next[next[i]];\n    For(i,1,n)\n        if (++b[color[i]]==2) add(i,1);\n    For(i,1,m){\n        read(q[i].l),read(q[i].r);\n        q[i].id=i;\n    }\n    sort(q+1,q+1+m,cmp);\n    int now=1;\n    For(i,1,m){\n        for (;now<q[i].l;now++){\n            if (next[now]) add(next[now],-1);\n            if (nnext[now]) add(nnext[now],1);\n        }\n        ans[q[i].id]=query(q[i].r)-query(q[i].l-1);\n    }\n    For(i,1,m) print(ans[i]),print('\\n');\n    flush();\n}\n~~\u6700\u540e\u8bf4\u4e00\u53e5\uff1a\u770b\u5230\u9898\u76ee\u91cc\u7684\"\u8427\u85b0\u513f\"\u4e00\u4e0b\u5b50\u5c31\u60f3\u5230\u4e86\u6597\u7834\u7684\u52a8\u6f2b\u5316\uff0c\u7ae5\u5e74\u6bc1\u4e86\u554a~~\n```",
        "postTime": 1516366436,
        "uid": 25355,
        "name": "\u590f\u8272\u796d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4113 \u3010[HEOI2012]\u91c7\u82b1\u3011"
    },
    {
        "content": "\u7528ne[i]\u8bb0\u5f55\u4e0b\u4e00\u4e2a\u989c\u8272i\u51fa\u73b0\u7684\u4f4d\u7f6e\n\n\u8003\u8651\u79bb\u7ebf\u505a\u6cd5\u6211\u4eec\u4e0d\u65ad\u4ece\u5de6\u5f80\u53f3\u626b\n\n\u56e0\u4e3a\u6709\u4e00\u79cd\u82b1\u6709\u4e24\u4e2a\u624d\u6709\u8d21\u732e\n\n\u6240\u4ee5\u5982\u679c\u6211\u4eec\u5373\u5c06\u626b\u8fc7i\u70b9\u5982\u679cne[ne[i]]\u5b58\u5728\u5219\u5c06ne[ne[i]]\u7684\u8d21\u732e\u52a01\n\n\u8fd9\u6837\u5c31\u53d8\u6210\u4e86\u524d\u7f00\u548c\n\n\u6811\u72b6\u6570\u7ec4\u5c31\u53ef\u4ee5\u8fc7\u4e86\n\n\u4ee5\u4e0b\u9644\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\nusing namespace std;\nint t[100001],n,m,c,mp[100001],ne[100001],p[100001];\nstruct gjh{int l,r,yd,ans;}q[100001];\nint lb(int x){return x&(-x);}\nvoid add(int x,int y){while(x<=n)t[x]+=y,x+=lb(x);}\nint sum(int x){int num=0;while(x>0)num+=t[x],x-=lb(x);return num;}\nbool cmp(gjh a,gjh b){return a.l==b.l?a.r<b.r:a.l<b.l;}\nbool cmp1(gjh a,gjh b){return a.yd<b.yd;}\nint main()\n{\n   int l=1;scanf(\"%d%d%d\",&n,&c,&m);for(int i=1;i<=n;i++)scanf(\"%d\",&mp[i]);\n   for(int i=n;i>0;i--)ne[i]=p[mp[i]],p[mp[i]]=i;\n   for(int i=1;i<=c;i++)if(p[i]&&ne[p[i]])add(ne[p[i]],1);\n   for(int i=1;i<=m;i++)scanf(\"%d%d\",&q[i].l,&q[i].r),q[i].yd=i;\n   sort(q+1,q+m+1,cmp);\n   for(int i=1;i<=m;i++)\n   {\n        for(;l<q[i].l;l++)\n     {\n       if(ne[l])add(ne[l],-1);\n       if(ne[l]&&ne[ne[l]])add(ne[ne[l]],1);\n     }\n        q[i].ans=sum(q[i].r)-sum(q[i].l-1);\n   }\n   sort(q+1,q+m+1,cmp1);\n   for(int i=1;i<=m;i++)printf(\"%d\\n\",q[i].ans);\n   return 0;\n}\n```",
        "postTime": 1478858021,
        "uid": 11413,
        "name": "Sky_star",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4113 \u3010[HEOI2012]\u91c7\u82b1\u3011"
    },
    {
        "content": "\u539f\u9898\u4f20\u9001\u95e8[>Here<](https://www.luogu.org/problemnew/show/P4113)\n\n\uff08\u8fd9\u9898\u867d\u7136\u597d\u50cf\u53ef\u4ee5\u7528\u83ab\u961f\u505a\uff0c\u6807\u7b7e\u91cc\u4e5f\u6709\u4e2a\u83ab\u961f\uff0c\u4f46\u662f\u505a\u6cd5\u548c\u6b63\u5e38\u7684\u83ab\u961f\u6709\u5f88\u5927\u7684\u533a\u522b\uff0c\u5bb3\u5f97\u6211\u83ab\u961f\u641e\u4e86\u534a\u5929\u8fd8\u662f\u53ea\u6709133\u5206\u3002\uff09\n\n\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4[l,r],\u4e00\u79cd\u989c\u8272c\u88ab\u8ba1\u5165\u7b54\u6848\u5f53\u4e14\u4ec5\u5f53\u8be5\u989c\u8272\u5728\u8be5\u533a\u95f4\u4e2d\u51fa\u73b0\u8fc7\u4e24\u6b21\u3002\u5373\uff1a\u5b58\u5728i\u4f7f\u5f97$l\\le i\\le r$\u4e14col[i]==c\u4e14$l\\le last[i]\\le r$\u3002\n\n\u4ed4\u7ec6\u5206\u6790\u8fd9\u4e2a\u5f0f\u5b50\uff0c\u6211\u4eec\u53d1\u73b0\u5728r\u786e\u5b9a\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u8981\u4fdd\u8bc1c\u4ecer\u5f00\u59cb\u4ece\u53f3\u5f80\u5de6\u7b2c\u4e8c\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e$\\ge l$\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n\n1 2 3 4 5 6 7 8 **9** 10\n\n3 2 1 2 **4** 2 **4** 1 2 3\n\n\u5f53\u4e00\u4e2a\u533a\u95f4r==9\u7684\u65f6\u5019\uff0c\u53ea\u8981$l \\le 5$\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u989c\u82724\u4e00\u5b9a\u4f1a\u88ab\u8ba1\u5165\u7b54\u6848\u4e2d\u3002\n\n\u4e8e\u662f\u628a\u8be2\u95ee\u6309\u7167r\u6392\u5e8f\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u5b58\u50a8\u6bcf\u79cd\u989c\u8272\u4ece\u53f3\u5f80\u5de6\u7b2c\u4e8c\u4e2a\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\n\n\u8bbelast[i]\u4e3ai\u4e4b\u524d\u7b2c\u4e00\u4e2a\u4e0ei\u989c\u8272\u76f8\u540c\u7684\u4f4d\u7f6e\u3002\n\n\u7ef4\u62a4\u5f88\u7b80\u5355\uff0c\u6bcf\u6b21\u65b0\u52a0\u5165\u4e00\u4e2a\u4f4d\u7f6ei\u65f6\uff0c\u628alast[i]++,last[last[i]]--\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n\nint count[2000001];\nint pos[2000010],n,m,num[2000010],block,ori[2000001],all[2000001],c[2000001],C,last[2000001],colst[2000001];\nint ans[2000010],nowans;\nstruct point{\n    int l,r,orig;\n}q[2000010];\nbool cmp(point a,point b){return a.r<b.r;}\nvoid update(int x,int ad){if(!x)return;for(;x<=n;x+=x&-x)c[x]+=ad;}\nint query(int x){if(!x)return 0;int tot=0;for(;x;x-=x&-x)tot+=c[x];return tot;}\nint read(){\n    int x=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9')ch=getchar();\n    while(ch>='0'&&ch<='9')x=x*10+ch-'0',ch=getchar();\n    return x;\n}\nint main(){\n    n=read();\n    C=read();\n    m=read();\n    for(register int i=1;i<=n;++i){\n        num[i]=read();\n        last[i]=colst[num[i]];\n        colst[num[i]]=i;\n    }\n    for(register int i=1;i<=m;++i)q[i].l=read(),q[i].r=read(),q[i].orig=i;\n    std::sort(q+1,q+m+1,cmp);\n    for(register int i=1,j=1;i<=n;++i){\n    \tupdate(last[i],1);\n    \tupdate(last[last[i]],-1);\n    \tfor(;q[j].r==i&&j<=m;j++)ans[q[j].orig]=query(i)-query(q[j].l-1);\n    \tif(j>m)break;\n    }\n    for(register int i=1;i<=m;++i)printf(\"%d\\n\",ans[i]);\n}\n```",
        "postTime": 1537699095,
        "uid": 30903,
        "name": "Isonan",
        "ccfLevel": 0,
        "title": "luoguP4113 [HEOI2012]\u91c7\u82b1"
    },
    {
        "content": "## P4113 [HEOI2012]\u91c7\u82b1\n\n\n\u6570\u636e\u6bd2\u7624\uff0c\u53ea\u80fd\u62ff133\u5206\uff0c\u4e2a\u4eba\u89c9\u5f97\u8fd9\u79cd\u6570\u636e\u52a0\u5f3a\u6ca1\u6709\u610f\u4e49\uff0c\u53cd\u800c\u5361\u6389\u4e86\u4e00\u4e9b\u590d\u6742\u5ea6\u6b63\u786e\u7684\u7a0b\u5e8f\u3002\n\n\u9898\u76ee\u7684\u610f\u601d\u662f\u8981\u6c42\u533a\u95f4\u5185\u51fa\u73b0\u8d85\u8fc71\u6b21\u7684\u6570\u7684\u79cd\u7c7b\u3002\u770b\u4e86\u4e00\u773c\u611f\u89c9\u662f\u4e2a\u4e3b\u5e2d\u6811\u6a21\u677f\u9898\u3002\n\n\u9996\u5148\u5c06\u95ee\u9898\u505a\u4e00\u4e2a\u8f6c\u5316\uff0c\u5047\u8bbe$pre[i]$\u8868\u793a$i$\u4e4b\u524d\u4e0a\u4e00\u4e2a\u7b49\u4e8e$a[i]$\u7684\u4f4d\u7f6e\uff0c\u8fd9\u6837\u6211\u4eec\u8981\u6c42\u7684\u5c31\u662f\u5728$[l,r]$\u4e2d\u6ee1\u8db3$pre[i]>l$\u7684\u6240\u6709\u4f4d\u7f6e\uff08\u5f53\u7136\u4e00\u4e2a\u6570\u5b57\u53ef\u80fd\u88ab\u7edf\u8ba1\u591a\u6b21\uff0c\u540e\u9762\u8bb2\uff09\u3002\u76f8\u5f53\u4e8e\u662f\u533a\u95f4\u4e2d\u503c\u5927\u4e8e\u67d0\u4e00\u5b9a\u503c\u7684\u6570\u7684\u4e2a\u6570\u3002\u4f17\u6240\u5468\u77e5\uff0c\u4e3b\u5e2d\u6811\u662f\u4e00\u79cd\u4e8c\u7ef4\u6570\u636e\u7ed3\u6784\uff0c\u6240\u4ee5......\n\n\u6211\u4eec\u5c06$pre[i]$\u63d2\u5165\u7b2c$i$\u68f5\u7ebf\u6bb5\u6811$rt[i]$\u4e2d\uff0c\u63a5\u4e0b\u6765\u505a\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u5c06$rt[r]$\u4e0e$rt[l-1]$\u505a\u5dee\u5206\uff0c\u5728\u5dee\u5206\u7ed3\u679c\u4e0a\u505a$[l,r]$\u7684\u533a\u95f4\u548c\uff08\u6216\u8005\u76f4\u63a5\u505a$[l,n]$\uff0c\u7a0d\u5fae\u5feb\u4e00\u70b9\uff0c\u4f46\u65e0\u6cd5\u52a0\u5206\uff09\u5373\u53ef\u3002\n\n\u6ce8\u610f\u5230\u4e00\u4e2a\u6570\u53ef\u80fd\u88ab\u7edf\u8ba1\u591a\u6b21\uff08\u5982\u679c\u533a\u95f4\u5185\u51fa\u73b0\u4e86\u4e09\u6b21\u5c31\u4f1a\u88ab\u8bb0\u4e24\u6b21\uff09\uff0c\u56e0\u6b64\u51fa\u73b0\u4e00\u4e2a$pre[i]$\u65f6\u8fd8\u53ef\u4ee5\u5c06$pre[pre[i]]$\u5728\u5f53\u524d\u7ebf\u6bb5\u6811\u4e2d\u51cf\u53bb\uff0c\u4e5f\u5c31\u662f\u4e0a\u6b21\u51fa\u73b0\u4e00\u5b9a\u6bd4\u4e0a\u4e0a\u6b21\u51fa\u73b0\u8981\u665a\uff0c\u90a3\u4e48\u4e0a\u4e0a\u6b21\u5c31\u53ef\u4ee5\u6254\u6389\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log n)$\uff0c\u7b2c\u516b\u4e2a\u70b9$756ms$\uff0c\u6700\u540e\u4e24\u70b9$TLE$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN=2000010;\nint n,m,c,x,y,tot,rt[MAXN],ch[MAXN*40][2],val[MAXN*40],ts[MAXN],pre[MAXN];\nint read () {\n\tint res=0;\n\tchar c=getchar();\n\twhile (c<'0'||c>'9') {c=getchar();}\n\twhile (c>='0'&&c<='9') {\n\t\tres=res*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn res;\n}\nvoid write (int x) {\n\tif (x==0) {putchar('0');}\n\tint cnt=0;\n\tchar c[20];\n\twhile (x>0) {\n\t\tc[++cnt]=(x%10)+'0';\n\t\tx/=10;\n\t}\n\twhile (cnt>0) {putchar(c[cnt--]);}\n\tputchar('\\n');\n}\nint buildt (int l,int r) {\n\tint nd=++tot;\n\tif (l==r) {return nd;}\n\tint mid=(l+r)>>1;\n\tch[nd][0]=buildt(l,mid),ch[nd][1]=buildt(mid+1,r);\n\treturn nd;\n}\nint add (int rt,int l,int r,int pos,int v) {\n\tif (pos==0) {return rt;}\n\tint nd=++tot;\n\tval[nd]=val[rt]+v;\n\tif (l==r) {return nd;}\n\tint mid=(l+r)>>1;\n\tif (pos<=mid) {\n\t\tch[nd][0]=add(ch[rt][0],l,mid,pos,v);\n\t\tch[nd][1]=ch[rt][1];\n\t} else {\n\t\tch[nd][1]=add(ch[rt][1],mid+1,r,pos,v);\n\t\tch[nd][0]=ch[rt][0];\n\t}\n\treturn nd;\n}\nint query (int rt1,int rt2,int l,int r,int pl,int pr) {\n\tif (pr<l||r<pl) {return 0;}\n\tif (pl<=l&&r<=pr) {return val[rt1]-val[rt2];}\n\tint mid=(l+r)>>1;\n\treturn query(ch[rt1][0],ch[rt2][0],l,mid,pl,pr)+query(ch[rt1][1],ch[rt2][1],mid+1,r,pl,pr);\n}\nint main () {\n\tn=read(),c=read(),m=read();\n\trt[0]=buildt(1,c);\n\tfor (int i=1;i<=n;i++) {\n\t\tx=read();\n\t\tpre[i]=ts[x];\n\t\tts[x]=i;\n\t\trt[i]=add(rt[i-1],1,c,pre[pre[i]],-1);\n\t\trt[i]=add(rt[i],1,c,pre[i],1);\n\t}\n\tfor (int i=1;i<=m;i++) {\n\t\tx=read(),y=read();\n\t\twrite(query(rt[y],rt[x-1],1,c,x,n));\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1559821396,
        "uid": 113546,
        "name": "ix35",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4113 \u3010[HEOI2012]\u91c7\u82b1\u3011"
    },
    {
        "content": "## \u9898\u89e3\uff1aP4113 [HEOI2012]\u91c7\u82b1\n\n\u8fd9\u5230\u9898\u7684\u8bdd\u67092\u4e2a\u5b50\u4efb\u52a1\uff0c\u60f3\u62ff\u5230100\u5206\u8fd8\u662f\u5f88\u5bb9\u6613\u7684\uff0c\u7528\u83ab\u961f\u5c31\u53ef\u4ee5\u3002\n\n\u4f46\u662f\u6570\u636e\u8303\u56f4\u66f4\u5927\u7684\u8bdd\u5c31\u4f1aTLE\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e9b\u5176\u4ed6\u7684\u66f4\u5feb\u6377\u7684\u65b9\u6cd5\uff1a\u6811\u72b6\u6570\u7ec4 or \u7ebf\u6bb5\u6811\n\n\u8fd9\u91cc\u63a8\u8350\u7684\u8fd8\u662f\u6811\u72b6\u6570\u7ec4\uff0c\u56e0\u4e3a\u5e38\u6570\u66f4\u5c0f\u4e00\u70b9\uff0c\u5199\u8fd9\u9053\u9898\u4e4b\u524d\u53ef\u4ee5\u5148\u770b\u4e00\u4e0b[HH\u7684\u9879\u94fe](https://www.luogu.com.cn/problem/P1972)\uff0c\u505a\u6cd5\u76f8\u4f3c\u3002\n\n---\n\n\u975e\u5f3a\u5236\u5728\u7ebf\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u6bcf\u6b21\u884c\u7a0b**\u53f3\u7aef\u70b9\u4ece\u5c0f\u5230\u5927**\u6392\u5e8f\u3002\n\n\u4ece\u7b2c1\u6735\u82b1\u5f00\u59cb\uff0c\u5206\u522b\u5230\u5f53\u524d\u679a\u4e3e\u884c\u7a0b\u7684\u53f3\u7aef\u70b9\uff0c\u7136\u540e\u518d\u8d70\u5230\u4e0b\u4e00\u4e2a\u884c\u7a0b\u7684\u53f3\u7aef\u70b9\u3002\n\n\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4e24\u4e2a\u6570\u7ec4\uff0c\u5206\u522b\u662f\u5f53\u524d\u679a\u4e3e\u7684 $ j $ \u70b9\u4e0a\u4e00\u4e2a $a[j]$ \u7684\u4f4d\u7f6e $last1[a[j]]$ \u4ee5\u53ca\u4e0a\u4e0a\u4e2a $a[j]$ \u7684\u4f4d\u7f6e  $last2[a[j]]$ \n\n\u53ea\u6709\u6b64\u989c\u8272\u7684\u82b1\u5b58\u5728\u6570\u91cf\u5927\u4e8e1\u4e2a\uff0c\u624d\u4f1a\u4ea7\u751f\u8d21\u732e\uff0c\n\n\u56e0\u6b64\u5728 $last2[a[j]]$ \u5b58\u5728\u7684\u65f6\u5019\uff0c\u5c31\u628a $last2[a[j]]$ \u8d21\u732e $+1$ \uff0c\u5176\u4ed6\u4f4d\u51fa\u73b0 $a[j]$ \u5168\u90e8\u4e3a $0$ \u3002\n\n\u6700\u540e\u7528\u524d\u7f00\u548c\u6765\u6c42 $ans[e[i].pos] = query(e[i].r) - query(e[i].l - 1)$ \u5c31\u597d\u3002\n\n```c++\n#include <bits/stdc++.h>\n\nconst int MAXN = 2e6 + 10;\nstruct Node {int l, r, pos;}e[MAXN];\nint n, c, m, a[MAXN], last1[MAXN], last2[MAXN], val[MAXN], ans[MAXN];\n\ninline int read() {\n    int X = 0, flag = 0;\n    char ch = 0;\n    while (!isdigit(ch))\n        flag |= ch == '-', ch = getchar();\n    while (isdigit(ch))\n        X = (X << 3) + (X << 1) + (ch ^ 48), ch = getchar();\n    return flag ? -X : X;\n}\n\ninline bool cmp(Node x, Node y) {\n    return x.r < y.r;\n}\n\ninline void add(int x, int num) {\n    for (register int i = x; i <= n; i += (i & (-i)))\n        val[i] += num;\n}\n\ninline int query(int x) {\n    int res = 0;\n    for (register int i = x; i; i -= (i & (-i)))\n        res += val[i];\n    return res;\n}\n\nsigned main() {\n#ifndef ONLINE_JUDGE\n#ifdef LOCAL\n    freopen(\"testdata.in\", \"r\", stdin);\n    freopen(\"testdata.out\", \"w\", stdout);\n#endif\n#ifndef LOCAL\n    freopen(\"HEOI2012\u91c7\u82b1.in\", \"r\", stdin);\n    freopen(\"HEOI2012\u91c7\u82b1.out\", \"w\", stdout);\n#endif\n#endif\n    n = read(), c = read(), m = read();\n    for (register int i = 1; i <= n; i++)\n        a[i] = read();\n    for (register int i = 1; i <= m; i++)\n        e[i].l = read(), e[i].r = read(), e[i].pos = i;\n    std::sort(e + 1, e + m + 1, cmp);\n    for (register int i = 1; i <= m; i++) {\n        for (register int j = e[i - 1].r + 1; j <= e[i].r; j++) {\n            if (!last2[a[j]]) {\n                last2[a[j]] = j;\n            } else {\n                if (!last1[a[j]]) {\n                    add(last2[a[j]], 1), last1[a[j]] = j;\n                } else {\n                    add(last2[a[j]], -1), add(last1[a[j]], 1);\n                    last2[a[j]] = last1[a[j]], last1[a[j]] = j;\n                }\n            }\n        }\n        ans[e[i].pos] = query(e[i].r) - query(e[i].l - 1);\n    }\n    for (register int i = 1; i <= m; i++)\n        printf(\"%d\\n\", ans[i]);\n    return 0;\n}\n```\n\n\n\n\n\n",
        "postTime": 1595124685,
        "uid": 84897,
        "name": "Hercules",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4113 \u3010[HEOI2012]\u91c7\u82b1\u3011"
    },
    {
        "content": "\u672c\u9898\u89e3\u53ef\u80fd\u65e0\u6cd5\u901a\u8fc7\u6240\u6709\u6570\u636e\uff0c\u4ec5\u4f9b\u53c2\u8003\u3002\n\n\u66b4\u529b\u4e3b\u5e2d\u6811\u3002\n\n\u5177\u4f53\u601d\u8def\u5c31\u662f\u4e3b\u5e2d\u6811\u66b4\u529b\u7ef4\u62a4\u82b1\u7684\u6570\u91cf\uff0c\u66b4\u529b\u8ba1\u7b97\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#include<cctype>\n#include<algorithm>\n#include<deque>\n#define For(i,a,b) for(i=(a);i<=(b);++i)\n#define Forward(i,a,b) for(i=(a);i>=(b);--i)\nusing namespace std;\ntemplate<typename T>inline void read(T &x)//\u5feb\u8bfb\n{\n    T s=0,f=1;char k=getchar();\n    while(!isdigit(k)&&(k^'-'))k=getchar();\n    if(!isdigit(k)){f=-1;k=getchar();}\n    while(isdigit(k)){s=s*10+(k^48);k=getchar();}\n    x=s*f;\n}\nconst int MAXN=100010;\nint n,m,c,head[MAXN],e;//head\u662f\u4e3b\u5e2d\u6811\u7684\u6839\u6570\u7ec4\nstruct node\n{\n    int l,r,count;\n}p[MAXN<<4];//\u8282\u70b9\nvoid make_tree(int poi,int l,int r)//\u5efa\u7acb\u7a7a\u6811\n{\n    if(l==r)return;\n    int mid=(l+r)>>1;\n    make_tree(p[poi].l=++e,l,mid);\n    make_tree(p[poi].r=++e,mid+1,r);\n}\nvoid build(int now,int last,int l,int r,int x)//\u52a0\u5165\u65b0\u6811\n{\n    if(l==r)\n    {\n        p[now].count=p[last].count+1;\n        return;\n    }\n    int mid=(l+r)>>1;\n    if(x<=mid)\n    {\n        p[now].r=p[last].r;\n        build(p[now].l=++e,p[last].l,l,mid,x);\n    }\n    else\n    {\n        p[now].l=p[last].l;\n        build(p[now].r=++e,p[last].r,mid+1,r,x);\n    }\n    p[now].count=p[p[now].l].count+p[p[now].r].count;\n}\nint query(int now,int last,int l,int r)//\u67e5\u8be2\n{\n    //printf(\"%d %d %d\\n\",l,r,p[now].count-p[last].count);\n    if(p[now].count-p[last].count<2)return 0;\n    if(l==r)return 1;\n    int mid=(l+r)>>1,ans=0;\n    ans=query(p[now].l,p[last].l,l,mid)+query(p[now].r,p[last].r,mid+1,r);\n    return ans;\n}\nint main(void)\n{\n    read(n);\n    read(c);\n    read(m);\n    int i,l,r,k;\n    make_tree(head[0]=++e,1,c);//\u5148\u5efa\u4e00\u9897\u7a7a\u6811\u4f5c\u4e3a\u57fa\u7840\u6811\n    For(i,1,n)read(k),build(head[i]=++e,head[i-1],1,c,k);//\u518d\u5728\u7a7a\u6811\u7684\u57fa\u7840\u4e0alog2n\u5730\u66f4\u65b0\u8282\u70b9\n    while(m--)\n    {\n        read(l),read(r);\n        printf(\"%d\\n\",query(head[r],head[l-1],1,c));//\u67e5\u8be2\n    }\n    return 0;\n}\n```",
        "postTime": 1506941869,
        "uid": 7035,
        "name": "Great_Influence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4113 \u3010[HEOI2012]\u91c7\u82b1\u3011"
    },
    {
        "content": "\u9898\u7684\u5b9e\u8d28\u5c31\u662f\u5bfb\u627e $[l,r]$ \u533a\u95f4\u51fa\u73b0\u6b21\u6570 $>=2$ \u7684\u6570\u5b57\u7684\u4e2a\u6570,\u95ed\u533a\u95f4\u91cc\u9762\u540c\u4e00\u4e2a\u6570\u5b57\u6709\u90a3\u4e48\u591a\uff0c\u5176\u5b9e\u6211\u4eec\u53ea\u5173\u6ce8\u79bb\u6211\u6700\u8fd1\u7684\u90a3 $1$ \u4e2a\u5c31OK\u4e86;\n\n\u67e5\u770b\u90a3\u5c0f\u5b50\u6240\u5728\u4f4d\u7f6e\u662f\u5426 $>=l$,\u5ffd\u7136\u53d1\u73b0\u8fd9\u4e0d\u5c31\u62bd\u8c61\u6210\u7ebf\u6bb5\u4e86\u5417?\u90a3\u5de6\u7aef\u70b9\u7ed91\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u5728 $[l,r]$ \u95ed\u533a\u95f4\u91cc\u9762\u7edf\u8ba1 $1$ \u7684\u6570\u91cf\uff0c\n\u663e\u7136\u524d\u7f00\u548c\u554a\uff0c\u501f\u52a9\u4e8e\u6811\u72b6\u6570\u7ec4\u4e0d\u5c31\u5b8c\u7f8e\u7684\u5e72\u6389\u4e86\u561b\uff0c\u5b9e\u73b0\u65f6\u8bb0\u5f97\u5904\u7406\u4e00\u4e2a\u64e6\u4e00\u4e2a\u5c31OK!\n\nCode:\n```cpp\n#include<bits/stdc++.h>\n#define maxn 2000005\n#define maxm 6000005\nusing namespace std;\nint n,m,C,c[maxn],lst[maxn],pos[maxn],ans[maxm];\nstruct ZS{\n    int l,r,id;\n    bool operator <(const ZS B)const{return r<B.r;}\n}Q[maxm];\nint read(){\n    int ret=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-')f=-f;ch=getchar();}\n    while (isdigit(ch)) ret=(ret<<3)+(ret<<1)+ch-'0',ch=getchar();\n    return ret*f;\n}\nvoid add_data(int x,int date){\n\tif (!x) return;\n\tfor (;x<=n;x+=x&-x) c[x]+=date;\n}\nint Ask(int x){\n\tif (!x) return 0;\n\tint tot=0;\n\tfor (;x;x-=x&-x) tot+=c[x];\n\treturn tot;\n}\nint main(){\n    n=read();C=read();m=read();\n    for (int i=1;i<=n;i++){\n        int x=read();\n        lst[i]=pos[x];pos[x]=i;\n    }\n    for (int i=1;i<=m;i++) Q[i].l=read(),Q[i].r=read(),Q[i].id=i;\n    sort(Q+1,Q+1+m);\n    for (int i=1,j=1;i<=n&&j<=m;i++){\n        add_data(lst[lst[i]],-1),add_data(lst[i],1);\n        for (;Q[j].r==i&&j<=m;j++) ans[Q[j].id]=Ask(i)-Ask(Q[j].l-1);\n    }\n    for (int i=1;i<=m;i++)printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```\n",
        "postTime": 1595943821,
        "uid": 188879,
        "name": "VioletIsMyLove",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4113 \u3010[HEOI2012]\u91c7\u82b1\u3011"
    },
    {
        "content": "\u6b64\u9898\u7684\u672c\u8d28\u5c31\u662f\u5728\u4e00\u4e2a\u533a\u95f4\u5185\u627e\u5230\u51fa\u73b02\u6b21\u7684\u989c\u8272\u7684\u6570\u91cf\uff0c\u53ef\u4ee5\u79bb\u7ebf\u89e3\u51b3\n\n\u5168\u90e8\u8f93\u5165\u8fdb\u6765\u4e4b\u540e\u6309r\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\n\u7136\u540e\u7528la1[t]\u8868\u793a\u989c\u8272t\u4e0a\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0cla2[t]\u8868\u793a\u989c\u8272t\u4e0a\u4e0a\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\n\n\u5219\u5728\u6811\u72b6\u6570\u7ec4\u91cc\u53ea\u6709\u5c06la1[t]\u7684\u4f4d\u7f6e\u586b1\uff0c\u5176\u4ed6\u586b0\u5373\u53ef\n\n\u4e3a\u4ec0\u4e48\u8fd9\u6837\u53ef\u4ee5ac\u5462\uff1f\u56e0\u4e3a\u5f53l\u5728\u4e0a\u6b21\u4e0e\u6700\u53f3\u8fb9\u4e4b\u95f4\uff0c\u6700\u53f3\u8fb9\u989c\u8272\u662f\u6ca1\u6709\u8d21\u732e\u7684\uff0c\u5f53l\u5728\u4e0a\u4e0a\u6b21\u4e0e\u6700\u53f3\u8fb9\u4e4b\u95f4\uff0c\u4e0a\u4e0a\u6b21\u7684\u989c\u8272\u4e5f\u662f\u6ca1\u6709\u8d21\u732e\u7684\uff0c\u6240\u4ee5\u53ea\u6709la1[t]\u4e0a\u6b21\u7684\u989c\u8272\u6709\u8d21\u732e\u3002\n\n\u4e0b\u9762\u8d34\u4e0a\u4ee3\u7801\n# O2\u4f18\u5316\u53ef\u8fc7\uff0c\u76f4\u63a5\u4ea4\u53ef\u5f97133\u5206\n\n```cpp\n#include<bits/stdc++.h>\n#define N 2000001\n#define M 2000001\nusing namespace std;\n\nstruct node{\n    int x, y, z, ans;\n    bool operator < (const node &a) const\n    {\n        return y < a.y;\n    }\n}q[M];\n\nint n, m, cnt;\nint a[N], b[N], la1[N], la2[N], tree[N];\n\nint js(int x)\n{\n    return x & -x;\n}\n\nvoid change(int x, int y)\n{\n    for(; x <= n; x += js(x))\n        tree[x] += y;\n}\n\nint sum(int x)\n{\n    int ret = 0;\n    for(; x; x -= js(x)) ret += tree[x];\n    return ret;\n}\n\nbool cmp(node l, node r)\n{\n    return l.z < r.z;\n}\n\nint main()\n{\n    scanf(\"%d%d%d\", &n, &m, &m);\n    for(int i = 1; i <= n; i++) scanf(\"%d\", &a[i]), b[i] = a[i];\n    for(int i = 1; i <= m; i++) scanf(\"%d%d\", &q[i].x, &q[i].y), q[i].z = i;\n    sort(q + 1, q + m + 1);//\u6392\u5e8f\n    sort(b + 1, b + n + 1);\n    cnt = unique(b + 1, b + n + 1) - b - 1;//\u79bb\u6563\u5316\n    for(int i = 1, j = 1; i <= m; i++)\n    {\n        while(j <= q[i].y)\n        {\n            int t = lower_bound(b + 1, b + cnt + 1, a[j]) - b;\n            if(la2[t]) change(la2[t], -1);//\u4e0a\u4e0a\u6b21\n            if(la1[t]) change(la1[t], 1);//\u4e0a\u6b21\n            la2[t] = la1[t], la1[t] = j, j++;\n        }\n        q[i].ans = sum(q[i].y) - sum(q[i].x - 1);\n    }\n    sort(q + 1, q + m + 1, cmp);\n    for(int i = 1; i <= m; i++) printf(\"%d\\n\", q[i].ans);\n    return 0;\n}\n```\n",
        "postTime": 1558846751,
        "uid": 98468,
        "name": "abs001",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4113 \u3010[HEOI2012]\u91c7\u82b1\u3011"
    },
    {
        "content": "## Description\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217\uff0c\u6709 $m$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u4e00\u6bb5\u533a\u95f4\uff0c\u6c42\u533a\u95f4\u4e2d\u6709\u591a\u5c11\u4e2a\u6570\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7 $1$ \u6b21\n\n## Limitation\n\n$n,~m~\\leq~2~\\times~10^6$\n\n## Solution\n\n\u597d\u50cf\u548c\u5927\u4f17\u505a\u6cd5\u4e0d\u5927\u4e00\u6837\uff1f\n\n\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\uff0c\u6211\u4eec\u8bb0\u4e00\u4e2a ``pre`` \u548c\u4e00\u4e2a ``post``\uff0c\u4ee3\u8868\u4ed6\u524d\u9762\u6700\u540e\u4e00\u4e2a\u51fa\u73b0\u8fd9\u4e2a\u6570\u7684\u4f4d\u7f6e\u548c\u4ed6\u540e\u9762\u7b2c\u4e00\u4e2a\u51fa\u73b0\u8fd9\u4e2a\u6570\u7684\u4f4d\u7f6e\u3002\n\n\u8003\u8651\u4e00\u4e2a\u4f4d\u7f6e $x$ \u5bf9\u4e00\u4e2a $[l,~r]$ \u7684\u67e5\u8be2\u4ea7\u751f\u8d21\u732e\u5f53\u4e14\u4ec5\u5f53 $pre_x~\\geq~l$ \u5e76\u4e14 $post_x~>~r$\u3002\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u662f\u53ef\u4ee5\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u7684\u3002\n\n\u8003\u8651\u7edf\u8ba1\u4e00\u6bb5\u533a\u95f4\u5185 ``pre`` \u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u6570\u7684\u4e2a\u6570\u663e\u7136\u53ef\u4ee5\u5bf9 ``pre`` \u5f00\u6743\u503c\u6811\u72b6\u6570\u7ec4\uff0c\u7136\u540e\u6309\u7167\u5de6\u7aef\u70b9\u4e0d\u5347\u5e8f\u6392\u5e8f\uff0c\u5de6\u7aef\u70b9\u5de6\u79fb\u7684\u65f6\u5019\u5c06\u5bf9\u5e94\u4f4d\u7f6e\u7684 ``pre`` \u52a0\u5165\u6811\u72b6\u6570\u7ec4\uff0c\u4e00\u6b21\u67e5\u8be2\u7684\u7b54\u6848\u5373\u4e3a $BIT_{r}~-~BIT_{l - 1}$\u3002\n\n\u73b0\u5728\u8003\u8651\u52a0\u5165 $post_x ~>~r$ \u7684\u9650\u5236\u3002\n\n\u6211\u4eec\u53d1\u73b0\u5f53\u4e14\u4ec5\u5f53\u6ee1\u8db3\u8be5\u6761\u4ef6\u7684\u4f4d\u7f6e\u624d\u5bf9\u7b54\u6848\u6709\u8d21\u732e\uff0c\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u8bc1\u6811\u72b6\u6570\u7ec4\u91cc\u53ea\u5b58\u6709\u6ee1\u8db3\u8be5\u6761\u4ef6\u7684\u4f4d\u7f6e\u7684 ``pre``\uff0c\u5c31\u53ef\u4ee5\u7edf\u8ba1\u7b54\u6848\u4e86\u3002\u8003\u8651\u6309\u7167\u53f3\u7aef\u70b9\u4e0d\u5347\u5e8f\u6392\u5e8f\uff0c\u4e00\u5f00\u59cb\u5148\u5c06\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u6570\u5b57\u7684 ``pre`` \u52a0\u5165\u5230\u6811\u72b6\u6570\u7ec4\u4e2d\uff0c\u6bcf\u6b21\u79fb\u52a8\u53f3\u7aef\u70b9\u7684\u65f6\u5019\uff0c\u5c06 ``post`` \u4e3a\u53f3\u7aef\u70b9\u6240\u5728\u4f4d\u7f6e\u7684\u4f4d\u7f6e\u7684 ``pre`` \u52a0\u5165\u6811\u72b6\u6570\u7ec4\u5373\u53ef(\u5373\u5c06 $post_x~=~R$ \u7684 $x$ \u7684\u5bf9\u5e94 $per_x$ \u52a0\u5165\u6811\u72b6\u6570\u7ec4)\u3002\u7531\u4e8e\u5927\u4e8e\u53f3\u7aef\u70b9\u7684\u90e8\u5206\u7684 ``pre`` \u5bf9\u7b54\u6848\u540c\u6837\u6ca1\u6709\u8d21\u732e\u4e86\uff0c\u6240\u4ee5\u79fb\u52a8\u53f3\u7aef\u70b9\u7684\u65f6\u5019\u522b\u5fd8\u4e86\u628a\u53f3\u7aef\u70b9\u5bf9\u5e94\u7684 ``pre`` \u5728\u6811\u72b6\u6570\u7ec4\u4e0a\u5220\u9664\u3002\n\n## Code\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#ifdef ONLINE_JUDGE\n#define freopen(a, b, c)\n#endif\n\ntypedef long long int ll;\n\nnamespace IPT {\n    const int L = 1000000;\n    char buf[L], *front=buf, *end=buf;\n    char GetChar() {\n        if (front == end) {\n            end = buf + fread(front = buf, 1, L, stdin);\n            if (front == end) return -1;\n        }\n        return *(front++);\n    }\n}\n\ntemplate <typename T>\ninline void qr(T &x) {\n    char ch = IPT::GetChar(), lst = ' ';\n    while ((ch > '9') || (ch < '0')) lst = ch, ch=IPT::GetChar();\n    while ((ch >= '0') && (ch <= '9')) x = (x << 1) + (x << 3) + (ch ^ 48), ch = IPT::GetChar();\n    if (lst == '-') x = -x;\n}\n\nnamespace OPT {\n    char buf[120];\n}\n\ntemplate <typename T>\ninline void qw(T x, const char aft, const bool pt) {\n    if (x < 0) {x = -x, putchar('-');}\n    int top=0;\n    do {OPT::buf[++top] = static_cast<char>(x % 10 + '0');} while (x /= 10);\n    while (top) putchar(OPT::buf[top--]);\n    if (pt) putchar(aft);\n}\n\nconst int maxn = 2000010;\n\nint n, c, m, dn;\nint MU[maxn], oc[maxn], pos[maxn], pre[maxn], tree[maxn];\nstd::vector<int> vc[maxn];\n\nstruct Ask {\n    int l, r, id, ans;\n    \n    inline bool operator<(const Ask &_others) const {\n        return this->r > _others.r;\n    }\n};\nAsk ask[maxn];\nbool cmp(const Ask&, const Ask&);\n\nint lowbit(int);\nvoid update(int, int);\nint query(int);\n\nint main() {\n    freopen(\"1.in\", \"r\", stdin);\n    qr(n); qr(c); qr(m); dn = n + 1;\n    for (int i = 1; i <= n; ++i) {\n        qr(MU[i]); pre[i] = oc[MU[i]]; oc[MU[i]] = i;\n    }\n    for (int i = 1; i <= c; ++i) oc[i] = dn;\n    for (int i = n; i; --i) {\n        vc[pos[i] = oc[MU[i]]].push_back(i);\n        oc[MU[i]] = i;\n    }\n    for (int i = 1; i <= m; ++i) {\n        qr(ask[i].l); qr(ask[i].r); ask[i].id = i;\n    }\n    std::sort(ask + 1, ask + 1 + m);\n    for (auto i : vc[dn]) update(pre[i], 1);\n    for (int i = 1, R = n; i <= m; ++i) {\n        int l = ask[i].l, r = ask[i].r;\n        while (R > r) {\n            update(pre[R], -1);\n            for (auto j : vc[R]) update(pre[j], 1);\n            --R;\n        }\n        ask[i].ans = query(r) - query(l - 1);\n    }\n    std::sort(ask + 1, ask + 1 + m, cmp);\n    for (int i = 1; i <= m; ++i) {\n        qw(ask[i].ans, '\\n', true);\n    }\n    return 0;\n}\n\ninline bool cmp(const Ask &_a, const Ask &_b) {\n    return _a.id < _b.id;\n}\n\ninline int lowbit(int x) {return x & -x;}\n\nvoid update(int x, int v) {\n    if (x == 0) return;\n    while (x <= dn) {\n        tree[x] += v;\n        x += lowbit(x);\n    }\n}\n\nint query(int x) {\n    int _ret = 0;\n    while (x) {\n        _ret += tree[x];\n        x -= lowbit(x);\n    }\n    return _ret;\n}\n```\n\n",
        "postTime": 1552305768,
        "uid": 65363,
        "name": "\u4e00\u6276\u82cf\u4e00",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4113 \u3010[HEOI2012]\u91c7\u82b1\u3011"
    },
    {
        "content": "\u8003\u8651\u5c06\u8be2\u95ee\u79bb\u7ebf\u3002\u8003\u8651\u6bcf\u79cd\u989c\u8272\u7684\u82b1\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u82b1\uff0c\u82e5\u5de6\u7aef\u70b9\u5728\u4ece1\u5230\u4e0a\u4e00\u4e2a\u4e0e\u8be5\u4f4d\u7f6e\u989c\u8272\u76f8\u540c\u7684\u82b1\u7684\u4f4d\u7f6e\u4e0a\uff0c\u5219\u8be5\u989c\u8272\u5bf9\u7b54\u6848\u6709\u8d21\u732e\u3002\u6240\u4ee5\u5c06\u6240\u6709\u8be2\u95ee\u63091\u53f3\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5b9a\u4e49pre[i]\u4e3a\u4e0e\u8be5\u4f4d\u7f6e\u8ddd\u79bb\u6700\u8fd1\u7684\u4e0e\u5b83\u989c\u8272\u76f8\u540c\u7684\u82b1\u3002\u5bf9\u4e8e\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5c06pre[pre[i]]+1\u2013pre[i]\u8fd9\u6bb5\u533a\u95f4+1\uff0c\u7136\u540e\u6bcf\u6b21\u8be2\u95ee\u7684\u7b54\u6848\u5c31\u662fL\u4e0a\u7684\u503c\u4e86\uff0c\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u533a\u95f4\u52a0\uff0c\u5355\u70b9\u67e5\u8be2\u6765\u505a\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nconst int inf=1000000000;\nint read()\n{\n    int x=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\nstruct segtree\n{\n    int ls;\n    int rs;\n    int mark;\n    long long sum;\n}tree[4000005];\nstruct query\n{\n    int l;\n    int r;\n    int id;\n}q[1000005];\nint tot=1,next[1000005],pre[1000005],last[1000005],n,c,m,ans[1000005],a[1000005];\nint cmp(query x,query y)\n{\n    return x.r<y.r;\n}\nvoid build(int p,int l,int r)\n{\n    int mid=l+r>>1;\n    if(l==r)\n    return;\n    tree[p].ls=++tot;\n    tree[p].rs=++tot;\n    build(tree[p].ls,l,mid);\n    build(tree[p].rs,mid+1,r);\n}\nvoid modify(int p,int l,int r,int x,int y)\n{\n    int mid=l+r>>1;\n    if(l==x&&r==y)\n    {\n        tree[p].mark++;\n        tree[p].sum+=(r-l+1);\n        return;\n    }\n    tree[tree[p].ls].sum+=(mid-l+1)*tree[p].mark;\n    tree[tree[p].rs].sum+=(r-mid)*tree[p].mark;\n    tree[tree[p].ls].mark+=tree[p].mark;\n    tree[tree[p].rs].mark+=tree[p].mark;\n    tree[p].mark=0;\n    if(y<=mid)\n    modify(tree[p].ls,l,mid,x,y);\n    else if(x>mid)\n    modify(tree[p].rs,mid+1,r,x,y);\n    else\n    {\n        modify(tree[p].ls,l,mid,x,mid);\n        modify(tree[p].rs,mid+1,r,mid+1,y);\n    }\n    tree[p].sum=tree[tree[p].ls].sum+tree[tree[p].rs].sum;\n}\nint query(int p,int l,int r,int x)\n{\n    if(l==r)\n    return tree[p].sum;\n    int mid=l+r>>1;\n    tree[tree[p].ls].sum+=(mid-l+1)*tree[p].mark;\n    tree[tree[p].rs].sum+=(r-mid)*tree[p].mark;\n    tree[tree[p].ls].mark+=tree[p].mark;\n    tree[tree[p].rs].mark+=tree[p].mark;\n    tree[p].mark=0;\n    if(x<=mid)\n    return query(tree[p].ls,l,mid,x);\n    return query(tree[p].rs,mid+1,r,x);\n}\nint main()\n{\n    n=read(),c=read(),m=read();int now=1;\n    for(int i=1;i<=n;i++)\n    {\n        a[i]=read();\n        pre[i]=last[a[i]];\n        last[a[i]]=i;\n    }\n    for(int i=1;i<=m;i++)\n    {\n        q[i].l=read(),q[i].r=read();\n        q[i].id=i;\n    }\n    sort(q+1,q+m+1,cmp);\n    build(1,1,n);\n    for(int i=1;i<=n;i++)\n    {\n        if(pre[i])\n        {\n            modify(1,1,n,pre[pre[i]]+1,pre[i]);\n        }\n        while(q[now].r==i)\n        {\n            ans[q[now].id]=query(1,1,n,q[now].l);\n            now++;\n        }\n        if(now>m)\n        break;\n    }\n    for(int i=1;i<=m;i++)\n    {\n        printf(\"%d\\n\",ans[i]);\n    }\n}\n```\n[\u6211\u7684\u535a\u5ba2](http://blog.csdn.net/mengbi\\_er/article/details/77945890)\n",
        "postTime": 1505202127,
        "uid": 35873,
        "name": "mengbierr",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4113 \u3010[HEOI2012]\u91c7\u82b1\u3011"
    },
    {
        "content": "\u672c\u9898\u89e3\u53ef\u80fd\u65e0\u6cd5\u901a\u8fc7\u6240\u6709\u6570\u636e\uff0c\u4ec5\u4f9b\u53c2\u8003\u3002\n\n\u6211\u7528\u7684\u83ab\u961f\uff0c\u548cHH\u7684\u9879\u94fe\u5f88\u50cf\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5728O(n\u221an)\u3002\n\n\u83ab\u961f\u7b97\u6cd5\u662f\u4e00\u79cd\u79bb\u7ebf\u7b97\u6cd5\uff0c\u901a\u5e38\u4e0d\u80fd\u6709\u4fee\u6539 \u64cd\u4f5c\u3002\n\n\u83ab\u961f\u7b97\u6cd5\u7684\u5b9e\u73b0\u6b65\u9aa4\u4e3a\uff1a\n\n1\u3001\u5148\u5bf9\u539f\u5e8f\u5217\u8fdb\u884c\u5206\u5757\u3002\n\n2\u3001\u79bb\u7ebf\u64cd\u4f5c\uff0c\u5bf9\u8be2\u95ee\u8fdb\u884c\u6392\u5e8f\uff0c\u4ee5\u5de6\u7aef\u70b9\u6240\u5728\u5757\u7f16\u53f7 \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u53f3\u7aef\u70b9\u7684\u4f4d\u7f6e\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u8fdb\u884c\u6392\u5e8f\u3002\u7136\u540e\u7ef4\u62a4[l,r]\u7684\u7b54\u6848\uff0c\u5e76\u4e0d\u65ad\u8c03\u6574l\u548cr\u3002\uff08\u5177\u4f53\u8fd8\u8bf7\u767e\u5ea6\uff09\n\n\u5bf9\u4e8e\u8fd9\u9898\uff0c\u5982\u679c\u5728\u8be2\u95ee\u533a\u95f4\u5185\u6709\u4e00\u79cd\u989c\u8272\u51fa\u73b0\u6b21\u6570>1\uff0c\u5c31\u53ef\u4ee5++now\uff1b\u51fa\u73b0\u6b21\u6570\u51cf\u52301\u65f6\uff0c--now\u3002\n\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int N=1000005;\n\nint n,c,m,size,color[N],Times[N],now,ans[N];\nstruct Ques\n{\n    int l,r,id;\n}q[N];\n\nint read()\n{\n    int now=0;char c=getchar();\n    while(c<'0'||c>'9')c=getchar();\n    while(c>='0'&&c<='9')now=(now<<3)+(now<<1)+c-'0',c=getchar();\n    return now;\n}\n\nbool cmp(Ques a,Ques b)\n{//\u5de6\u7aef\u70b9\u6240\u5728\u5757\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u53f3\u7aef\u70b9\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57 \n    //if((a.l-1)/size+1 == (b.l-1)/size+1) return a.r < b.r;\n    if(a.l/size == b.l/size) return a.r < b.r;\n    return a.l/size < b.l/size;\n}\n\ninline void Add(int p)\n{\n    ++Times[p];\n    if(Times[p]==2)\n      ++now;\n}\ninline void Subd(int p)\n{\n    --Times[p];\n    if(Times[p]==1)\n      --now;\n}\n\nint main()\n{\n//    freopen(\"1flower.in\",\"r\",stdin);\n//    freopen(\"1flower.out\",\"w\",stdout);\n    n=read();c=read();m=read();\n    size=sqrt(n);\n    for(int i=1;i<=n;i++)\n      color[i]=read();\n    for(int i=1;i<=m;i++)\n      q[i].l=read(),q[i].r=read(),q[i].id=i;\n    sort(q+1,q+1+m,cmp);\n    for(int i=1,l=1,r=0;i<=m;i++)\n    {\n        int ln=q[i].l,rn=q[i].r;\n        while(l>ln)\n          Add(color[--l]);\n        while(l<ln)\n          Subd(color[l++]);\n        while(r<rn)\n          Add(color[++r]);\n        while(r>rn)\n          Subd(color[r--]);\n        ans[q[i].id]=now;\n    }\n    for(int i=1;i<=m;i++)\n      printf(\"%d\\n\",ans[i]);\n//    fclose(stdin);fclose(stdout);\n    return 0;\n}\n```",
        "postTime": 1495871687,
        "uid": 39887,
        "name": "SovietPower\u2728",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4113 \u3010[HEOI2012]\u91c7\u82b1\u3011"
    },
    {
        "content": "\u597d\u4e45\u6ca1\u5199\u9898\u89e3\u4e86\uff0c\u6709\u70b9\u6000\u5ff5\n\n\u56e0\u4e3a\u6211\u6700\u8fd1\u5728\u7ec3\u83ab\u961f\uff0c\u6240\u4ee5\u8fd9\u9053\u9898\u4e00\u773c\u770b\u8fc7\u5c31\u7801\u4e86\u4e2a\u83ab\u961f\uff0c\u7136\u540e\u6109\u5feb\u5730Tle\u4e86\u3002\u3002\n\n\u770b\u5230\u8fd9\u9053\u9898\u7684\u6570\u636e\u8303\u56f4\uff0c\u53d1\u73b0\u83ab\u961f\u662f\u4e0d\u884c\u7684\uff0c\u770b\u9898\u89e3\u53d1\u73b0\u4e86\u4e00\u79cd\u6811\u72b6\u6570\u7ec4\u7684\u73a9\u6cd5\u3002\n\n\u7136\u540e\u6211\u4e00\u76f4\u7528pascal\u6363\u9f13\uff0c\u7ed3\u679c\u4e00\u76f4wa\u5f97\u53ea\u670910\u5206\uff0c\u5b9e\u5728\u662f\u627e\u4e0d\u51fa\u95ee\u9898\u3002\n\n\u4e0d\u8fc7\u6211\u4eca\u5929\u7a81\u7136\u60f3\u5230\u53ef\u4ee5\u7528c++\u641e\u4e00\u641e\uff0c\u7ed3\u679c\u5c31\u771f\u7684\u8fc7\u4e86\u3002\n\n\u601d\u8def\uff1a\n\n\u7528Next[i]\u8868\u793a\u4e0e\u7b2ci\u6735\u82b1\u989c\u8272\u76f8\u540c\u7684\u4e0b\u4e00\u6735\u82b1\u7684\u4f4d\u7f6e\n\n\u53d1\u73b0\uff1a\u4e00\u6bb5\u533a\u95f4\u5185\uff0c\u4ece\u5de6\u5230\u53f3\u7b2c\u4e8c\u6b21\u51fa\u73b0\u7684\u989c\u8272\u5bf9ans\u4ea7\u751f\u8d21\u732e\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u524d\u7f00\u548c\u3002\n\n\u90a3\u4e48Next\u5c31\u662f\u7528\u4e8e\u5feb\u901f\u5f97\u5230\u67d0\u4e00\u6bb5\u533a\u95f4\u7684\u7b2c\u4e8c\u6b21\u51fa\u73b0\u7684\u989c\u8272\n\n\u5bf9\u4e8e\u67e5\u8be2\u5219\u662f\u7528\u79bb\u7ebf\n\nLuoGu\u52a0\u5f3a\u6570\u636e\u540e\u6700\u540e\u4e00\u4e2a\u70b9\u4e00\u76f4Tle\uff0c\u52a0\u4e86\u6c27\u6c14\u624d\u8fc7\u6389\u4e86\uff0c\u4e0d\u8fc7\u539f\u59cb\u6570\u636e\u6211\u7684\u7a0b\u5e8f\u8fd8\u662f\u8dd1\u7684\u8fc7\u7684\uff0cBZOJ\u91cc\u4e5fac\u4e86\n\n\u4f46\uff01\u4e3a\u9632\u6b62\u6284\u88ad\uff0c\u6211\u5c31\u4e0d\u7c98AC\u4ee3\u7801\u4e86\uff0c\u7c98\u4e00\u4e2aT\u7684\u5427\uff08\u5177\u4f53\u4ee3\u7801\u8fd8\u8981\u81ea\u5df1\u5199\u54e6\uff01\uff01\uff01\uff09\n\n```cpp\n#include <bits/stdc++.h> \nusing namespace std; \n#define res register int \n#define maxn 2000010 \n#define inf 2147483647 \nstruct node { \n\tint l, r, id, ans; \n}; \nnode q[maxn]; \nint Next[maxn], color[maxn], p[maxn], n, m, c, tree[maxn]; \ninline int read() { \n\tint s = 0, w = 1; \n\tchar c = getchar(); \n\twhile (c < '0' || c > '9') { \n\t\tif (c == '-') w = -1; \n\t\tc = getchar(); \n\t} \n\twhile (c >= '0' && c <= '9') \n\t\ts = (s << 3) + (s << 1) + (c ^ 48), c = getchar(); \n\treturn s * w; \n} \ninline bool cmp1(node x, node y) {\n\treturn x.l == y.l ? x.r < y.r : x.l < y.l;\n} \ninline bool cmp2(node x, node y) {\n\treturn x.id < y.id;\n} \ninline void add(int x, int y) {\n\tfor (; x <= n; x += (x & (-x))) \n\t\ttree[x] += y;\n} \ninline int query(int x) {\n\tint sum = 0; \n\tfor (; x > 0; x -= (x & (-x))) \n\t\tsum += tree[x]; \n\treturn sum;\n} \nint main() { \n\tn = read(), c = read(), m = read(); \n\tfor (res i = 1; i <= n; ++i) \n\t\tcolor[i] = read(); \n\tfor (res i = n; i > 0; --i) \n\t\tNext[i] = p[color[i]], p[color[i]] = i; \n\tfor (res i = 1; i <= c; ++i) \n\t\tif (p[i] && Next[p[i]]) \n\t\t\tadd(Next[p[i]], 1); \n\tfor (res i = 1; i <= m; ++i) \n\t\tq[i].l = read(), q[i].r = read(), q[i].id = i; \n\tsort(q + 1, q + 1 + m, cmp1); \n\tint l = 1; \n\tfor (res i = 1; i <= m; ++i) { \n\t\tfor (; l < q[i].l; ++l) { \n\t\t\tif (Next[l]) add(Next[l], -1); \n\t\t\tif (Next[l] && Next[Next[l]]) add(Next[Next[l]], 1); \n\t\t} \n\t\tq[i].ans = query(q[i].r) - query(q[i].l - 1); \n\t} \n\tsort(q + 1, q + 1 + m, cmp2); \n\tfor (res i = 1; i <= m; ++i) printf(\"%d\\n\", q[i].ans); \n\treturn 0; \n}\n```",
        "postTime": 1546063933,
        "uid": 154004,
        "name": "Jiang_zi_chuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4113 \u3010[HEOI2012]\u91c7\u82b1\u3011"
    },
    {
        "content": "### \u9898\u610f\n\n\u6c42\u533a\u95f4\u4e2d\u51fa\u73b0\u4e24\u6b21\u7684\u989c\u8272\u7684\u4e2a\u6570\uff0c\u5361\u83ab\u961f\u3002\n\n### \u505a\u6cd5\n\n\u8fd9\u9898\u662fHH\u7684\u9879\u94fe\u90a3\u9898\u7684\u53d8\u5f62\u5427\uff0c\u4f46\u90a3\u9898\u6211\u7528\u83ab\u961f\u6c34\u8fc7\u53bb\u4e86\uff0c\u4e8e\u662f\u5230\u8fd9\u9898\u5c31\u81ea\u95ed\u4e86\u3002\n\n\u9996\u5148\u505a\u6cd5\u662f\u79bb\u7ebf\uff0c\u5c06\u8be2\u95ee\u4ee5l\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57,r\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u8fd9\u6837\u6211\u4eec\u5f97\u5230\u4e00\u4e2al\u6709\u5e8f\u7684\u8be2\u95ee\u5e8f\u5217\u3002\n\n\u5bf9\u4e8e\u6bcf\u79cd\u989c\u8272\uff0c\u9884\u5904\u7406\u51fa\u5b83\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e$p[i]$\u548c\u6bcf\u4e2a\u4f4d\u7f6e\u540e\u4e00\u4e2a\u4f4d\u7f6e$nx[i]$\u3002\n\n\u7528\u4e00\u4e2al\u6307\u9488\u4ece\u5de6\u5f80\u53f3\u626b\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u524d\u7f00\u548c\uff0c\u4f7fl\u540e\u6bcf\u4e2a\u989c\u8272\u7684**\u7b2c\u4e8c\u4e2a**\u51fa\u73b0\u4f4d\u7f6e\u4e0a\u7684\u503c\u4e3a\u4e00\uff0c\u4e4b\u540e\u5c31\u662f\u6c42$[l,r]$\u7684\u548c\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```c++\nfor (int i=1; i<=m; i++){\n\t\tfor (int j=next; j<q[i].l; j++){\n\t\t\tif (nx[j]) add(nx[j],-1);\n\t\t\tif (nx[j]&&nx[nx[j]]) add(nx[nx[j]],1);\n\t\t}\n\t\tnext=q[i].l;\n\t\tnum[q[i].h]=query(q[i].r)-query(q[i].l-1);\n\t}\n```\n\n\u6211\u89c9\u5f97\u6211\u8bb2\u7684\u5e76\u4e0d\u592a\u6613\u61c2\uff0c\u6240\u4ee5\u5e26\u5927\u5bb6\u6765\u770b\u4e00\u7ec4\u6837\u4f8b\u3002\n\n\n![](https://cdn.luogu.com.cn/upload/pic/48233.png )\n\n\n~~\u611f\u89c9\u6211\u8fd9\u4e2a\u6837\u4f8b\u5341\u5206\u5783\u573e~~\n\n\u7531\u4e8e\u6211\u592a\u83dc\u4e86\u505a\u4e0d\u51fa\u52a8\u6001\u56fe\uff0c\u6240\u4ee5\u5927\u5bb6\u53ef\u4ee5\u65e0\u89c6\u6211\u7684\u7bad\u5934\u548c\u6307\u9488\u5355\u73a9\u6837\u4f8b\u3002\n\n### \u5b8c\u6574\u4ee3\u7801\n\n```c++\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nstruct node{\n\tint l,r,h;\n}q[2000001];\nint a[2000010],nx[2000001],p[2000001];\nint next=1,num[2000001],n,m,k,c[2000001];\ninline bool cmp(node c,node d){return c.l!=d.l?c.l<d.l:c.r<d.r;}\ninline int lowbit(int x){return x&(-x);}\ninline void add(int x,int y){while(x<=n) c[x]+=y,x+=lowbit(x);}\ninline int query(int x){int ans=0;while(x)ans+=c[x],x-=lowbit(x);return ans;}\nint main(){\n\tscanf(\"%d%d%d\",&n,&k,&m);\n\tfor (int i=1; i<=n; i++) scanf(\"%d\",&a[i]);\n\tfor (int i=n; i>=1; i--) nx[i]=p[a[i]],p[a[i]]=i;\n\tfor (int i=1; i<=k; i++) if (p[i]&&nx[p[i]]) add(nx[p[i]],1);\n\tfor (int i=1; i<=m; i++){\n\t\tscanf(\"%d%d\",&q[i].l,&q[i].r);\n\t\tq[i].h=i;\n\t}\n\tsort(q+1,q+m+1,cmp);\n\tfor (int i=1; i<=m; i++){\n\t\tfor (int j=next; j<q[i].l; j++){\n\t\t\tif (nx[j]) add(nx[j],-1);\n\t\t\tif (nx[j]&&nx[nx[j]]) add(nx[nx[j]],1);\n\t\t}\n\t\tnext=q[i].l;\n\t\tnum[q[i].h]=query(q[i].r)-query(q[i].l-1);\n\t}\n\tfor (int i=1; i<=m; i++) printf(\"%d\\n\",num[i]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1546859844,
        "uid": 63661,
        "name": "Taduro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4113 \u3010[HEOI2012]\u91c7\u82b1\u3011"
    },
    {
        "content": "\u6811\u72b6\u6570\u7ec4+\u79bb\u7ebf\n\n\u4ee5\u8be2\u95ee\u7684\u53f3\u8282\u70b9\u6392\u5e8f\uff0c\u8003\u8651\u5de6\u8282\u70b9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\n\n\u679a\u4e3e\u53f3\u7aef\u70b9\uff0c\u5230\u8fbe\u4e00\u4e2a\u989c\u8272k\uff0c\u8bb0$pre[k]$\u4e3a\u5f53\u524d\u989c\u8272k\u524d\u9762\u7684\u7b2c\u4e00\u4e2a\u989c\u8272k\uff0c\u8bb0$pp[k]$\u8868\u793a\u5f53\u524d\u989c\u8272k\u524d\u9762\u7684\u7b2c\u4e8c\u4e2a\u989c\u8272k\uff0c\u90a3\u4e48\u5f53\u53f3\u7aef\u70b9\u5230\u8fbek\u7684\u65f6\u5019\uff0c\u5c06\u533a\u95f4$(pp_k, pre_k]$\u52a0\u4e00\u5373\u53ef\uff0c\uff08\u56e0\u4e3a\u5de6\u8282\u70b9\u5728\u8fd9\u4e00\u6bb5\u7684\u65f6\u5019\u8fd9\u79cd\u989c\u8272\u4f1a\u6709\u8d21\u732e\u3002\n\n\u53ef\u4ee5\u7528\u5e38\u6570\u5c0f\u7684\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5dee\u5206\u6570\u7ec4\uff0c\u76f8\u5f53\u4e8e\u6709\u4e86\u5355\u70b9\u67e5\u8be2\u533a\u95f4\u4fee\u6539\u7684\u529f\u80fd\u3002\n\n\u6b64\u9898\u5361\u5e38\uff0c\u8bf7\u5f00O2\u6216\u8005\u8bfb\u4f18\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h> \n#define Re register\n#define fo(i, a, b) for (Re int i = (a); i <= (b); ++i)\n#define fd(i, a, b) for (Re int i = (a); i >= (b); --i)\n#define edge(i, u) for (Re int i = head[u], v = e[i].v; i; i = e[i].nxt, v = e[i].v)\n#define pb push_back\n#define F first\n#define S second\n#define ll long long\n#define inf 10000000000007\n#define mp std::make_pair\n#define lowbit(x) (x & -x)\n#define eps 1e-4\n#define itset std::set<node>::iterator\n#define lb lower_bound\n#define N 2000005\n#define ls (k << 1)\n#define rs (k << 1 | 1)\n#define M 260\nint n, m, c, a[N], pre[N], ans[N], pp[N];\nstruct node{\n    int l, r, id;\n    friend bool operator < (node x, node y)\n    {\n        return x.r < y.r;\n    }\n}q[N];\nint t[N];\ninline void add (int x, int val) {for (int i = x; i <= n; i += lowbit(i)) t[i] += val;}\ninline int query (int x) {int ret = 0; for (int i = x; i; i -= lowbit(i)) ret += t[i]; return ret;}\nint main ()\n{\n    scanf(\"%d %d %d\", &n, &c, &m);\n    fo (i, 1, n)\n        scanf(\"%d\", &a[i]);\n    fo (i, 1, m)\n    {\n        scanf(\"%d %d\", &q[i].l, &q[i].r);\n        q[i].id = i;\n    }\n    std::sort(q + 1, q + m + 1);\n    int j = 1;\n    fo (i, 1, n)\n    {\n        add(pre[a[i]] + 1, -1);\n        add(pp[a[i]] + 1, 1);\n    //    printf(\"%d %d +1\\n\", pp[a[i]] + 1, pre[a[i]]);\n        pp[a[i]] = pre[a[i]];\n        pre[a[i]] = i;\n        while (q[j].r == i)\n        {\n            ans[q[j].id] = query(q[j].l);\n            ++j;\n        }\n    }\n    fo (i, 1, m)\n        printf(\"%d\\n\", ans[i]);\n    return 0;\n}\n```",
        "postTime": 1543734645,
        "uid": 13137,
        "name": "HomuraCat",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4113 \u3010[HEOI2012]\u91c7\u82b1\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6211\u4eec\u91c7\u53d6\u79bb\u7ebf+\u6811\u72b6\u6570\u7ec4\u7684\u65b9\u6cd5\u3002\n\u9996\u5148\uff0c\u5904\u7406\u51fanxt[i]\uff0c\u8868\u793a\u4e0ea[i]\u76f8\u7b49\u7684\u540e\u4e00\u4e2a\u6570\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2aa[i]\uff0c\u5b83\u5bf9\u4e8enxt[i]\u53ca\u4ee5\u540e\u80af\u5b9a\u6709\u8d21\u732e+1\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u5728nxt[i]\u5904+1,add(nxt[i],1)\u5373\u53ef\u3002\uff08\u6ce8\u610f\u53ea\u6709a[i]\u8fd9\u79cd\u989c\u8272\u5728\u7b2c\u4e00\u6b21\u51fa\u73b0\u65f6\u624d\u6709\u8d21\u732e\uff09\n\n\n------------\n\n\u5047\u8bbe\u6240\u6709\u8be2\u95ee\u7684\u5de6\u7aef\u70b9\u5747\u4e3a1\uff0c\u90a3\u4e48\u4f7f\u7528\u4e0a\u8ff0\u7d2f\u52a0\u4e00\u904d\u5373\u53ef\u6c42\u51fa\u7b54\u6848\uff0c\u4f46\u7531\u4e8e\u73b0\u5728\u5de6\u7aef\u70b9\u5728\u53d8\u5316\uff0c\u600e\u4e48\u529e\u5462\uff1f  \n\u628a\u8be2\u95ee\u6309\u5de6\u7aef\u70b9\u6392\u5e8f\u5c31\u884c\u5566\uff01  \n\u4ece\u4e0a\u4e00\u4e2a l \u8f6c\u79fb\u5230\u73b0\u5728\u7684 l \u65f6\uff0c\u628a\u4e4b\u95f4\u7684\u989c\u8272\u7684\u8d21\u732e\u6e05\u695a\uff0c\u6362\u6210\u4eba\u8bdd\uff0c\u5c31\u662f\u7528\u6811\u72b6\u6570\u7ec4\u5728nxt[i]\u5904-1,add(nxt[i],-1)\uff0c\u7136\u540e\u518d\u5728nxt[nxt[i]]\u5904+1\uff08\u5982\u679c\u5b58\u5728\u7684\u8bdd\uff09\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u6bcf\u6b21\u8be2\u95ee\u7684ans=quiry(r)-quiry(l-1);\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define LL long long\nstruct st{\n    int id,l,r;\n};\nint i,j,k,n,m,c,last,lst[2000005],nxt[2000005],a[2000005],ans[2000005],c1[2000005];\nst q[2000005];\ninline void read(int& x){\n    char s=getchar();x=0; int f=1;\n    while(!isdigit(s)){if(s=='-') f=-1; s=getchar();}\n    while(isdigit(s)){ x=x*10+s-'0'; s=getchar();}\n    x*=f;\n}\nint lowbit(int x){\n    return x&-x;\n}\nint cmp(st x,st y){\n    return x.l<y.l;\n}\nvoid add(int x,int d){\n    for(int i=x;i<=n;i+=lowbit(i))\n      c1[i]+=d;\n}\nint quiry(int x){\n    int c=0;\n    for(int i=x;i;i-=lowbit(i))\n      c+=c1[i];\n      return c;\n}\nint main()\n{\n    read(n);read(c);read(m);\n    for(i=1;i<=n;i++) read(a[i]);\n    for(i=n;i>=1;i--)\n       nxt[i]=lst[a[i]],lst[a[i]]=i;\n    for(i=1;i<=m;i++){\n        read(q[i].l);read(q[i].r);\n        q[i].id=i;\n    }\n    for(i=1;i<=c;i++)\n      if(lst[i]&&nxt[lst[i]])\n        add(nxt[lst[i]],1);\n    sort(q+1,q+m+1,cmp);\n    last=1;            \n    for(i=1;i<=m;i++){\n        for(j=last;j<q[i].l;j++)\n           if(nxt[j])\n          {\n              add(nxt[j],-1);\n              if(nxt[nxt[j]])\n                  add(nxt[nxt[j]],1);              \n          }\n          last=q[i].l;\n          int x=quiry(q[i].r);\n        ans[q[i].id]=quiry(q[i].r)-quiry(q[i].l-1);\n    } \n    for(i=1;i<=m;i++)\n      printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1540987224,
        "uid": 31898,
        "name": "\u738b\u73e9030115",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4113 \u3010[HEOI2012]\u91c7\u82b1\u3011"
    },
    {
        "content": "\u8fd9\u662f\u5f88\u660e\u663e\u7684\u4e00\u4e2a\u83ab\u961f\u7684\u677f\u5b50\u3002\n\n\u6c42\u7684\u4e1c\u897f\u662f\u4ec0\u4e48\u5462\uff1f\n\n- \u533a\u95f4\u6240\u6709\u6570\u7684\u4e2a\u6570\u7684\u603b\u548c,\u8981\u6c42\u6bcf\u4e00\u4e2a\u6570\u5b57\u7684\u4e2a\u6570\u8981\u5927\u4e8e $1$\n\n\u6240\u4ee5\u5c31\u53ef\u4ee5\u7528\u83ab\u961f\u5566,\u5982\u679c\u4e00\u4e2a\u6570\u5b57\u7684\u4e2a\u6570 $=2$ \u4ea7\u751f\u8d21\u732e,\u53d8\u4e3a $1$ \u4e86,\u4ea7\u751f\u8d1f\u8d21\u732e\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6: \u7531\u4e8e $N$ \u548c $M$ \u540c\u9636,\u6240\u4ee5\u662f $O(N\\sqrt{N})$\u3002\u9884\u8ba1\u662f $100$ \u5206\u3002\n\n```pascal\n// luogu-judger-enable-o2\nvar\n    node_num,i,j,n,m,l,r,sum:longint;\n    num:array[-1..2000010] of longint;\n    id,left,right,recf,ans:array[-1..2000010] of longint;\n    bucket:array[-1..2000010] of longint;\n\nprocedure Sort(l,r:longint);\nvar\n    i,j,s1,s2,t:longint;\nbegin\n    i:=l; j:=r; s1:=recf[(l+r) div 2]; s2:=right[(l+r) div 2];\n    repeat\n        while ((recf[i]<s1)or((recf[i]=s1)and(right[i]<s2))) do inc(i);\n        while ((recf[j]>s1)or((recf[j]=s1)and(right[j]>s2))) do dec(j);\n        if i<=j then\n        begin\n            t:=recf[i];  recf[i]:=recf[j];   recf[j]:=t;\n            t:=id[i];    id[i]:=id[j];       id[j]:=t;\n            t:=left[i];  left[i]:=left[j];   left[j]:=t;\n            t:=right[i]; right[i]:=right[j]; right[j]:=t;\n            inc(i); dec(j);\n         end;\n    until i>=j;\n    if i<r then Sort(i,r);\n    if j>l then Sort(l,j);\nend;\n\nfunction Locate(node:longint):longint;\nbegin\n    if node mod node_num=0 then exit(node div node_num);\n    exit(node div node_num+1);\nend;\n\nprocedure Ready;\nbegin\n    read(n,m,m);\n    node_num:=trunc(sqrt(n));\n    for i:=1 to n do read(num[i]);\n    for i:=1 to m do begin id[i]:=i; read(left[i],right[i]); recf[i]:=Locate(left[i]); end;\n\n    Sort(1,m);\nend;\n\nprocedure add(x:longint); begin inc(bucket[x]); if (bucket[x]=2) then inc(sum); end;\n\nprocedure dim(x:longint); begin dec(bucket[x]); if (bucket[x]=1) then dec(sum); end;\n\nbegin\n    Ready; l:=1; r:=0;\n    for i:=1 to m do\n    begin\n        while r<right[i] do begin  inc(r); add(num[r]); end;\n        while r>right[i] do begin dim(num[r]); dec(r); end;\n        while l<left[i] do begin dim(num[l]); inc(l); end;\n        while l>left[i] do begin dec(l); add(num[l]); end;\n        ans[id[i]]:=sum;\n    end;\n\n    for i:=1 to m do writeln(ans[i]);\nend.\n```\n\n\u5982\u679c\u4e0d\u6ee1\u8db3\u4e8e $100$ \u5206,\u6211\u4eec\u53ef\u4ee5\u628a\u95ee\u9898\u76f4\u63a5\u8f6c\u5316\u4e3a:\n\n- \u533a\u95f4\u91cc\u6709\u591a\u5c11\u4e2a\u6570\u662f\u552f\u4e00\u7684 (\u7c7b\u4f3c\u4e8e $HH$ \u7684\u9879\u94fe)\n \n\u7136\u540e\u76f4\u63a5\u4e3b\u5e2d\u6811\u641e\u4e00\u641e\u3002\u5230\u65f6\u5019\u518d\u5199\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6: $O(N\\log N)$,\u9884\u8ba1\u5206\u6570 $200$ \u5206\u3002",
        "postTime": 1538663517,
        "uid": 77760,
        "name": "arfa",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4113 \u3010[HEOI2012]\u91c7\u82b1\u3011"
    }
]