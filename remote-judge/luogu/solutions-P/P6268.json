[
    {
        "content": "\u8fd9\u9898\u662f\u6211\u505a\u7684\u7b2c\u4e09\u9053\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u7684\u9898\u76ee\u3002~~\u524d\u4e24\u9053\u90fd\u662f\u7eaf\u6a21\u677f\u3002~~\n\n\u5728\u505a\u8fd9\u9053\u9898\u7684\u65f6\u5019\u6211\u8fd8\u4e0d\u77e5\u9053\u4e8c\u5206\u56fe\u7684\u6700\u5927\u72ec\u7acb\u96c6\u4e0e\u6700\u5927\u5339\u914d\u7684\u5173\u7cfb\uff0c\u751a\u81f3\u6ca1\u53d1\u73b0\u8fd9\u9898\u662f\u5728\u6c42\u6700\u5927\u72ec\u7acb\u96c6\u3002\u3002\u3002  \n  \n\u6240\u4ee5\u6211\u63a8\u7b54\u6848\u82b1\u4e86\u4e00\u70b9\u65f6\u95f4\uff0c\u4e0b\u9762\u7ed9\u51fa\u6211\u7684\u601d\u8def\uff1a\n\n\u9996\u5148\u5f88\u663e\u7136\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u8df3\u8fc7\u821e\u7684\u5b66\u751f\uff0c\u5176\u4ed6\u5b66\u751f\u4e00\u5b9a\u90fd\u53ef\u4ee5\u53c2\u52a0\u821e\u4f1a\u3002\n\n\u5982\u679c\u5728\u6bcf\u4e00\u5bf9\u8df3\u8fc7\u821e\u7684\u5b66\u751f\u4e4b\u95f4\u8fde\u4e00\u6761**\u65e0\u5411\u8fb9**\uff0c\u90a3\u4e48\u4e00\u5b9a\u4f1a\u6784\u6210\u4e00\u5f20\u4e8c\u5206\u56fe\u3002\n\n\u6ce8\u610f\u8fd9\u91cc\u662f\u65e0\u5411\u8fb9\uff0c\u56e0\u4e3a\u4f60\u6b64\u65f6\u5e76\u4e0d\u77e5\u9053\u8fd9\u4e24\u4e2a\u4eba\u54ea\u4e2a\u662f\u7537\u54ea\u4e2a\u662f\u5973 ~~\u5b89\u80fd\u8fa8\u6211\u662f\u96c4\u96cc~~\u3002\n\n\u90a3\u4e48\u6c42\u51fa\u6709\u591a\u5c11\u4eba**\u4e0d\u80fd**\u53c2\u52a0\u821e\u4f1a\u4f1a\u6bd4\u8f83\u7b80\u5355\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u8fd9\u4e2a\u4eba\u6570\u5176\u5b9e\u5c31\u662f\u8fd9\u5f20\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\uff0c\u56e0\u4e3a\u5982\u679c\u6392\u9664\u4e86\u8fd9\u4e9b\u5728\u6700\u5927\u5339\u914d\u4e2d\u7684\u4eba\uff0c\u5176\u4ed6\u4eba\u5c31\u4e00\u5b9a\u90fd\u80fd\u9009\uff1b\u800c\u5982\u679c\u4e0d\u6392\u9664\uff0c\u5219\u81f3\u5c11\u4f1a\u6709\u4e00\u5bf9\u8df3\u8fc7\u821e\u7684\u4eba\u8fd8\u88ab\u4fdd\u7559\u3002\n\n\u90a3\u4e48\u5728\u6700\u5927\u5339\u914d\u7684\u70b9\u96c6\u4e4b\u5916\u7684\u70b9\u90fd\u662f\u53ef\u4ee5\u9009\u7684\u3002\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u6c42\u7684\u7b54\u6848\u5c31\u662f  $n\\ -$ \u6700\u5927\u5339\u914d\u7684\u8fb9\u6570\u3002\n\n\u5173\u4e8e\u6c42\u6700\u5927\u5339\u914d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5308\u7259\u5229\u7b97\u6cd5\uff0c\u5728\u8fd9\u91cc\u5c31\u4e0d\u518d\u4ecb\u7ecd\u4e86\u3002\n\n\u4e0d\u8fc7\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u5728\u5308\u7259\u5229\u7b97\u6cd5\u4e2d\u76f4\u63a5\u679a\u4e3e\u6240\u6709\u70b9\u7684\u8bdd\u662f\u4e0d\u884c\u7684 ~~\u8fde\u6837\u4f8b\u90fd\u8fc7\u4e0d\u4e86~~\u3002\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5148\u5bf9\u4e8c\u5206\u56fe\u8fdb\u884c\u67d3\u8272\uff0c\u627e\u51fa\u5176\u4e2d\u662f\u540c\u4e00\u6027\u522b\u7684\u4eba~~\u4e0d\u7ba1\u662f\u7537\u662f\u5973~~\uff0c\u7136\u540e\u8dd1\u4e00\u904d\u5308\u7259\u5229\u7b97\u6cd5\u5c31\u53ef\u4ee5\u6109\u5feb\u5730 AC \u4e86\u3002\n\n~~\u8bdd\u8bf4\u662f\u4e0d\u662f\u53ea\u6709\u6211\u559c\u6b22\u5927\u62ec\u53f7\u6362\u884c~~\n\n``` cpp\n#include <cstdio>\n#include <iostream>\n\nusing namespace std;\n\nconst int MAXN = 1010;\n\nint n, m, g[MAXN][MAXN], now[MAXN], col[MAXN];\nbool vis[MAXN];\n\n//\u4e8c\u5206\u56fe\u67d3\u8272\uff0c\u627e\u51fa\u540c\u4e00\u6027\u522b\u7684\u4eba\nvoid color(int u, int pre, int c)\n{\n\tcol[u] = c;\n\tfor(int i=1;i<=n;i++)\n\t\tif(g[u][i] && !col[i])\n\t\t\tcolor(i, u, 3 - c);\n}\n\nbool find(int u)\n{\n\tfor(int i=1;i<=n;i++)\n\t\tif(g[u][i] && !vis[i])\n\t\t{\n\t\t\tvis[i] = 1;\n\t\t\tif(!now[i]|| find(now[i]))\n\t\t\t{\n\t\t\t\tnow[i] = u;\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\treturn 0;\n}\n\ninline int match()\n{\n\tint res = 0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(col[i] != 1) continue;\n        //\u53ea\u9009\u53d6\u67d0\u4e00\u6027\u522b\u7684\u4eba\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tvis[j] = 0;\n\t\tres += find(i);\n\t}\n\treturn res;\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x, y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\t++x; ++y; //\u5904\u4e8e\u4e2a\u4eba\u4e60\u60ef\uff0c\u8fd9\u91cc\u628a\u6240\u6709\u70b9+1\n\t\tg[x][y] = g[y][x] = 1;\n\t}\n\tfor(int i=1;i<=n;i++)//\u7ed9\u6bcf\u4e00\u4e2a\u4eba\u67d3\u8272\n    //\u5bf9\u4e8e\u4e0d\u5728\u4e8c\u5206\u56fe\u4e2d\u7684\u70b9\u662f\u65e0\u6240\u8c13\u7684\n\t\tif(!col[i]) color(i, 0, 1);\n\tprintf(\"%d\\n\",n - match());\n\treturn 0;\n}\n```",
        "postTime": 1586355599,
        "uid": 151601,
        "name": "Aphros",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6268 \u3010[SHOI2002]\u821e\u4f1a\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\uff1a\n\n\u7ed9\u4f60\u597d\u51e0\u5bf9\u5df2\u7ecf\u4e92\u76f8\u8df3\u8fc7\u821e\u7684\u72d7\u7537\u5973\n\n\u8981\u6c42\u88ab\u9080\u8bf7\u7684\u5b66\u751f\u4e2d\u7684\u4efb\u4f55\u4e00\u5bf9\u7537\u751f\u548c\u5973\u751f\u4e92\u76f8\u90fd\u4e0d\u80fd\u8df3\u8fc7\u821e\n\n\u6240\u4ee5\u88ab\u9080\u8bf7\u7684\u90fd\u662f\u4e24\u4e24\u90fd\u6ca1\u6709\u8df3\u8fc7\u821e\u7684\uff0c\n\n## \u89e3\u9898\u601d\u8def\n\n\u5f88\u660e\u663e\u8fd9\u4e2a\u9898\u5c31\u662f\u5728\u6c42\u4e00\u4e2a\u6700\u5927\u70b9\u72ec\u7acb\u96c6\uff0c\u56e0\u4e3a\u6700\u5927\u70b9\u72ec\u7acb\u96c6=\u6700\u5927\u5339\u914d\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u5308\u7259\u5229\u7b97\u6cd5\u8dd1\u6700\u5927\u5339\u914d\uff0c\u627e\u51fa\u6709\u591a\u5c11\u4eba\u4e0d\u80fd\u53c2\u52a0\u821e\u4f1a\n\n\u7136\u540e\u7528\u603b\u4eba\u6570\u51cf\u53bb\u4e0d\u80fd\u53c2\u52a0\u7684\u4eba\u6570\u5c31\u662f\u80fd\u53bb\u591a\u5c11\u4eba\n.\n\u5751\u70b91:\u4f60\u4e0d\u77e5\u9053\u7537\u5973\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u9ed1\u767d\u67d3\u8272\uff0c\u7136\u540e\u6c42\u7537\u5973\n\n\u5751\u70b92:\u4f60\u67d3\u8272\u7684\u65f6\u5019dfs\u4e00\u4e0d\u6ce8\u610f\u5c31\u4f1aMLE\n\n\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u4f1aMLE\n\n>if (fa == to || color[to]) continue;\n\n\n\u53ef\u4ee5\u8fd9\u4e48\u5904\u7406\uff0c\u5982\u679c\u78b0\u5230\u5df2\u7ecf\u67d3\u8fc7\u8272\u7684\u5c31\u76f4\u63a5continue \u5c31\u4e0d\u4f1aMLE\u4e86\n\n\n## code\n\n```cpp\n/*\nAuthor: _Destiny\n*/\n#include <set>\n#include <map>\n#include <queue>\n#include <cmath>\n#include <stack>\n#include <cstdio>\n#include <string>\n#include <vector>\n#include <cstring>\n#include <cstdlib>\n#include <iomanip>\n#include <iostream>\n#include <algorithm>\n\n#define N 1010\n#define M 2010\n\nusing namespace std;\nint n, m;\nint match[N]; bool vis[N];\nint color[N], fx[M], fy[M];\nint head[M << 1], add_edge;\nstruct node {\n\tint next, to;\n}edge[M << 1];\n\nint read() {\n\tint s = 0, f = 0; char ch = getchar();\n\twhile (!isdigit(ch)) f |= (ch == '-'), ch = getchar();\n\twhile (isdigit(ch)) s = s * 10 + (ch ^ 48), ch = getchar();\n\treturn f ? -s : s;\n}\n\nvoid add(int from, int to) {\n\tedge[++add_edge].next = head[from];\n\tedge[add_edge].to = to;\n\thead[from] = add_edge;\n}\n\nvoid tc(int x, int fa) {\n\tif (color[fa] == 1) color[x] = 2;\n\telse color[x] = 1;\n\tfor (int i = head[x]; i; i = edge[i].next) {\n\t\tint to = edge[i].to;\n\t\tif (fa == to || color[to]) continue;\n\t\ttc(to, x);\n\t}\n}\n\nbool dfs(int now) {\n\tfor (int i = head[now]; i; i = edge[i].next) {\n\t\tint to = edge[i].to;\n\t\tif (vis[to]) continue;\n\t\tvis[to] = 1;\n\t\tif (!match[to] || dfs(match[to])) {\n\t\t\tmatch[to] = now;\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}\n\nint main() {\n\tn = read(), m = read();\n\tfor (int i = 1, x, y; i <= m; i++) {\n\t\tfx[i] = read(), fy[i] = read();\n\t\tadd(fx[i] + 1, fy[i] + 1);\n\t\tadd(fy[i] + 1, fx[i] + 1);\n\t}\n\tfor (int i = 1; i <= m; i++) {\n\t\tif (color[fx[i] + 1] == 0)\n\t\t\ttc(fx[i] + 1, 0);\n\t\tif (color[fy[i] + 1] == 0)\n\t\t\ttc(fy[i] + 1, 0);\n\t}\n\tint ans = 0;\n\tfor (int i = 1; i <= n; i++) \n\t\tif (color[i] == 1) {\n\t\t\tmemset(vis, 0, sizeof(vis));\n\t\t\tif (dfs(i)) ans++;\n\t\t}\n\tcout << n - ans;\n}\n```",
        "postTime": 1587027799,
        "uid": 188155,
        "name": "K2sen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6268 \u3010[SHOI2002]\u821e\u4f1a\u3011"
    },
    {
        "content": "### Solution\n\n\u8003\u8651\u5efa\u56fe\uff0c\u5982\u679c $a$ \u548c $b$ \u66fe\u7ecf\u8df3\u8fc7\u821e\uff0c\u5c31\u5c06 $a$ \u548c $b$ \u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u662f\u5728\u8fd9\u5f20\u56fe\u4e0a\u9009\u5c3d\u53ef\u80fd\u591a\u7684\u70b9\uff0c\u6ee1\u8db3\u70b9\u4e4b\u95f4\u6ca1\u6709\u8fb9\u76f8\u8fde\uff0c\u4e5f\u5373\u6700\u5927\u72ec\u7acb\u96c6\u3002\u53c8\u56e0\u4e3a\u9898\u76ee\u4fdd\u8bc1\u4e86\u8fde\u8fb9\u4e00\u5b9a\u662f\u5728\u7537\u5973\u4e4b\u95f4\u7684\uff0c\u6240\u4ee5\u8fd9\u5f20\u56fe\u4e00\u5b9a\u662f\u4e00\u5f20\u4e8c\u5206\u56fe\u3002\u4e8c\u5206\u56fe\u6700\u5927\u72ec\u7acb\u96c6 = \u603b\u70b9\u6570 - \u6700\u5c0f\u70b9\u8986\u76d6 = \u603b\u70b9\u6570 - \u6700\u5927\u5339\u914d\u3002\u5308\u7259\u5229\u7b97\u6cd5\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2 + nm)$\u3002\n\n### Code\n\n```cpp\nconst int maxn = 1005;\n\nint n, m;\nint vistime[maxn], mch[maxn], col[maxn];\nstd::vector<int> e[maxn];\n\nvoid dfs(const int u);\nbool dfs(const int u, const int vt);\n\nint main() {\n  freopen(\"1.in\", \"r\", stdin);\n  qr(n); qr(m);\n  for (int u, v; m; --m) {\n    qr(u); qr(v);\n    e[u].push_back(v);\n    e[v].push_back(u);\n  }\n  int ans = n;\n  memset(col, -1, sizeof col);\n  for (int i = 0; i < n; ++i) if (col[i] == -1) {\n    col[i] = 0;\n    dfs(i);\n  }\n  memset(mch, -1, sizeof mch);\n  memset(vistime, -1, sizeof vistime);\n  for (int i = 0; i < n; ++i) if ((col[i] == 0) && dfs(i, i)) {\n    --ans;\n  }\n  qw(ans, '\\n');\n  return 0;\n}\n\nbool dfs(const int u, const int vt) {\n  if (vistime[u] == vt) return false;\n  vistime[u] = vt;\n  for (auto v : e[u]) if ((mch[v] == -1) || dfs(mch[v], vt)) {\n    mch[v] = u;\n    return true;\n  }\n  return false;\n}\n\nvoid dfs(const int u) {\n  for (auto v : e[u]) if (col[v] == -1) {\n    col[v] = 1 - col[u];\n    dfs(v);\n  }\n}\n```\n\n",
        "postTime": 1585810908,
        "uid": 65363,
        "name": "\u4e00\u6276\u82cf\u4e00",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6268 \u3010[SHOI2002]\u821e\u4f1a\u3011"
    },
    {
        "content": "**\u9996\u5148\u5462\uff0c\u8fd9\u9053\u9898\u662f\u4e00\u9053\u5178\u578b\u7684\u4e8c\u5206\u56fe\u6700\u5927\u72ec\u7acb\u96c6\u95ee\u9898\u3002**\n\n\u6211\u4eec\u628a\u6bcf\u5bf9\u8df3\u8fc7\u821e\u7684\u540c\u5b66\u8fde\u4e00\u6761\u8fb9\uff0c\u90a3\u4e48\u6211\u4eec\u6240\u9009\u51fa\u6765\u7684\u540c\u5b66\u4e2d\u5c31\u4e0d\u80fd\u6709\u8fde\u8fb9\u3002\n\n\u8fd9\u6b63\u597d\u7b26\u5408\u4e8c\u5206\u56fe\u6700\u5927\u72ec\u7acb\u96c6\u7684\u6982\u5ff5\uff0c\u5305\u542b\u70b9\u6570\u6700\u591a\u7684\uff0c\u4e14\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u6ca1\u6709\u8fde\u8fb9\u7684\u6700\u5927\u96c6\u3002\n\n\u6211\u4eec\u5148\u8bc1\u660e\u4e00\u4e0b\uff0c\u4e3a\u4ec0\u4e48\u6211\u4eec\u8fd9\u6837\u5efa\u8fb9\u4f1a\u5f97\u5230\u4e00\u5f20\u4e8c\u5206\u56fe\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u7537\u5973\u5206\u5728\u5de6\u53f3\u4e24\u8fb9\uff0c\u9898\u76ee\u4fdd\u8bc1\u4e86\u8df3\u8fc7\u821e\u7684\u4eba\u90fd\u662f\u7537\u5973\u914d\u5bf9\u7684\uff0c\u6240\u4ee5\u7537\u7537\u4e4b\u95f4\u4e0d\u4f1a\u6709\u8fde\u8fb9\u3002\n\n\u6240\u4ee5\u4fdd\u8bc1\u4e86\u540c\u4e00\u4e2a\u96c6\u5408\u5185\u6ca1\u6709\u8fde\u8fb9\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\u3002\n\n\u518d\u8bf4\u4e86\uff0c\u8981\u662f\u6709\u5947\u73af\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u4f1a\u6709\u4e00\u4e2a\u4eba\u7684\u6027\u522b\u4e0d\u660e\u786e\uff08~~\u4e0d\u7537\u4e0d\u5973\uff1f\uff1f\uff1f~~\uff09 \u5927\u96fe\u3002\n\n\u81ea\u5df1\u753b\u4e00\u4e0b\u56fe\u5c31\u597d\u7406\u89e3\u4e86\u3002\n\n\u90a3\u4e48\u6211\u4eec\u6700\u7ec8\u7684\u7b54\u6848\u5c31\u662f\u4e8c\u5206\u56fe\u7684\u6700\u5927\u72ec\u7acb\u96c6\u3002\n\n\u8fd9\u4e1c\u897f\u600e\u4e48\u6c42\u5462\uff1f \u5148\u6765\u4e00\u4e2a\u5b9a\u7406\uff1a\n\n**\u4e8c\u5206\u56fe\u6700\u5927\u72ec\u7acb\u96c6\u7b49\u4e8e n - \u6700\u5c0f\u70b9\u8986\u76d6 \u7b49\u4e8e n - \u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u6570**\n\n\u7b2c\u4e00\u4e2a\u7b49\u5f0f\u7684\u8bdd\u5f88\u597d\u8bc1\u51fa\u6765\u3002\n\n\u6211\u4eec\u9009\u51fa\u6765\u7684\u70b9\u4e4b\u95f4\u6ca1\u6709\u8fde\u8fb9\u5c31\u7b49\u4ef7\u4e8e\u7528\u6700\u5c0f\u7684\u70b9\u8986\u76d6\u6240\u6709\u7684\u8fb9\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684\u6700\u5c0f\u70b9\u8986\u76d6\u95ee\u9898\u3002\n\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u6700\u5c0f\u70b9\u8986\u76d6\u7b49\u4e8e\u6700\u5927\u5339\u914d\u6570\uff0c\u53ef\u4ee5\u770b\u770b\u674e\u715c\u4e1c\u7684\u90a3\u672c\u84dd\u76ae\u4e66\uff0c\u4ed6\u8bb2\u7684\u633a\u8be6\u7ec6\u7684\u3002\n\n\u5f53\u6211\u4eec\u5efa\u5b8c\u56fe\u540e\uff0c\u4f60\u8fd8\u4f1a\u53d1\u73b0\u4e00\u4e2a\u91cd\u8981\u7684\u95ee\u9898\u5c31\u662f\uff0c\u4f60\u627e\u4e0d\u5230\u4ece\u4ece\u54ea\u4e9b\u70b9\u5f00\u59cb\u5339\u914d\uff0c\u5373\u627e\u4e0d\u5230\u5de6\u8fb9\u96c6\u5408\u4e2d\u7684\u70b9\u3002\n\n\u6211\u4e00\u822c\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u65b9\u6cd5\u5c31\u662f\u5148\u5bf9\u6574\u5f20\u56fe\u8dd1\u4e00\u8fb9\u67d3\u8272\u6cd5\uff0c\u628a\u6240\u6709\u6807\u8bb0\u4e3a $1$ \u7684\u70b9\u6254\u5230\u4e00\u4e2a $vector$ \u4e2d\uff0c\u7136\u540e\u5bf9\u8fd9\u4e9b\u70b9\u8dd1\u4e00\u8fb9\u6700\u5927\u5339\u914d\u5c31\u53ef\u4ee5\u3002\n\n\u5f53\u7136\u4e86\u4f60\u4e5f\u53ef\u4ee5\u50cf\u5176\u4ed6\u9898\u89e3\u91cc\u7684\u65b9\u6cd5\u5bf9\u6240\u6709\u70b9\u6c42\u4e00\u904d\u6700\u5927\u5339\u914d\u5728\u9664\u4ee5\u4e8c\u4e5f\u53ef\u4ee5\u3002\n\n**Code**\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<vector>\nusing namespace std;\nconst int N = 1010;\nint n,m,u,v,ans,tot;\nint head[N],match[N],c[N];\nbool vis[N];\nvector<int> q;\nstruct node\n{\n\tint to,net;\n}e[100010];\ninline int read()\n{\n\tint s = 0,w = 1; char ch = getchar();\n\twhile(ch < '0' || ch > '9'){if(ch == '-') w = -1; ch = getchar();}\n\twhile(ch >= '0' && ch <= '9'){s = s * 10 + ch - '0'; ch = getchar();}\n\treturn s * w;\n}\nvoid add(int x,int y)\n{\n\te[++tot].to = y;\n\te[tot].net = head[x];\n\thead[x] = tot;\n}\nbool dfs(int x)\n{\n\tfor(int i = head[x]; i; i = e[i].net)\n\t{\n\t\tint to = e[i].to;\n\t\tif(!vis[to])\n\t\t{\n\t\t\tvis[to] = 1;\n\t\t\tif(!match[to] || dfs(match[to]))\n\t\t\t{\n\t\t\t\tmatch[to] = x;\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nvoid bfs(int x,int col)\n{\n\tc[x] = col;\n\tif(c[x] == 1) q.push_back(x);\n\tfor(int i = head[x]; i; i = e[i].net)\n\t{\n\t\tint to = e[i].to;\n\t\tif(!c[to]) bfs(to,3-col);\n\t}\n}\nint main()\n{\n\tn = read(); m = read();\n\tfor(int i = 1; i <= m; i++)\n\t{\n\t\tu = read()+1; v = read()+1;//\u8bb0\u5f97\u5b66\u751f\u7f16\u53f7\u662f\u4ece\u96f6\u5f00\u59cb\u7684\uff0c\u8981\u52a0\u4e00\u4e2a1\u8f6c\u5316\u4e3a\u4ece1\u5230n\n\t\tadd(u,v); add(v,u);\n\t}\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tif(!c[i]) bfs(i,1);//\u67d3\u8272\n\t}\n\tfor(int i = 0; i < q.size(); i++)//\u5308\u7259\u5229\u7b97\u6cd5\n\t{\n\t\tmemset(vis,0,sizeof(vis));\n\t\tint x = q[i];\n\t\tif(dfs(x)) ans++;\n\t}\n\tprintf(\"%d\\n\",n-ans);\n\treturn 0;\n}\n```\n\n\n\n\n\n",
        "postTime": 1601071827,
        "uid": 248896,
        "name": "genshy",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P6268 \u3010[SHOI2002]\u821e\u4f1a\u3011"
    },
    {
        "content": "\u9898\u610f\u5c31\u4e0d\u8bf4\u4e86\uff0c\u5176\u4ed6\u9898\u89e3\u5199\u7684\u90fd\u5f88\u597d\u3002\r\n\r\n### \u5206\u6790\r\n\r\n\u660e\u660e\u8fd9\u9898\u7b2c\u4e00\u4e2a tag \u5c31\u662f\u7f51\u7edc~~\u7624~~\u6d41\uff0c\u5374\u6ca1\u6709\u4e00\u7bc7\u7f51\u7edc\u6d41\u7684\u9898\u89e3 qwq\u3002\r\n\r\n\u9996\u5148\u662f\u67d3\u8272\uff0c\u786e\u5b9a\u6bcf\u5bf9\u66fe\u7ecf\u8df3\u8fc7\u821e\u7684\u5b66\u751f\u7684\u6027\u522b\u3002\r\n\r\n\u7b2c\u4e00\u4e2a\u5751\uff0c\u6570\u636e\u4e0d\u4fdd\u8bc1\u65e0\u73af\uff0c\u6240\u4ee5\u8981\u8fd9\u4e48\u5199\uff1a\r\n\r\n```cpp\r\nvoid color(int x, int c) {\r\n    col[x] = c;\r\n    vis[x] = true;\r\n    for (int i = head[x]; i; i = node[i].nxt) {\r\n        int v = node[i].v;\r\n        if (vis[v]) {  // \u5982\u679c\u4f60\u6309\u7167 v == f \u5199\u5c31\u4f1a\u6536\u83b7 MLE \u82e5\u5e72\r\n            continue;\r\n        }\r\n        color(v, c ^ 1);\r\n    }\r\n}\r\n```\r\n\r\n\u6709\u4eba\u6216\u8bb8\u4e0d\u7406\u89e3\u600e\u4e48\u51fa\u73b0\u73af\uff0c\u8fd9\u91cc\u7ed9\u51fa\u4e00\u7ec4\u6570\u636e\uff1a\r\n\r\n```\r\n5 4\r\n0 1\r\n1 2\r\n2 3\r\n3 0\r\n```\r\n\r\n\u7b2c\u4e8c\u4e2a\u5751\uff0c\u6570\u636e\u4e0d\u4fdd\u8bc1\u6bcf\u7ec4\u524d\u9762\u4e00\u5b9a\u662f\u540c\u79cd\u6027\u522b\u3002\u4e8e\u662f\u4f60\u76f4\u63a5\u5efa\u6a21\u4f1a\u6536\u83b7 40 pts \u7684\u597d\u6210\u7ee9\u3002\r\n\r\n\u6211\u7684\u505a\u6cd5\u53ef\u80fd\u6709\u70b9\u590d\u6742\uff0c\u4f9b\u53c2\u8003\u3002\r\n\r\n```cpp\r\nauto* c = new Color();  // \u5b8c\u6574\u4ee3\u7801\u6700\u540e\u4f1a\u653e\u5728\u4e91\u526a\u8d34\u677f\u91cc\r\n\r\nfor (int i = 1; i <= m; i++) {\r\n    int x = read<int>(), y = read<int>();\r\n    x++, y++;\r\n    c->create(x, y);\r\n    c->create(y, x);\r\n    c->fm[i] = x;\r\n    c->to[i] = y;\r\n}\r\n\r\nfor (int i = 1; i <= n; i++) {\r\n    if (!c->vis[i]) {  // \u6570\u636e\u4e0d\u4fdd\u8bc1\u8054\u901a\r\n        c->color(i, 0);\r\n    }\r\n}\r\n\r\nauto* flow = new Flow(n + 20, s, t);\r\nfor (int i = 1; i <= m; i++) {\r\n    int x = c->fm[i], y = c->to[i];\r\n    if (c->col[x]) {\r\n        std::swap(x, y);  // \u524d\u9762\u7684\u540c\u5b66\u989c\u8272\u4e0d\u5bf9\uff0c\u4ea4\u6362\u4e24\u4f4d\u540c\u5b66\r\n    }\r\n\r\n    flow->create(x, y, 1);\r\n    flow->create(y, x, 0);\r\n}\r\n```\r\n\r\n\u6700\u540e\u6ce8\u610f\u6570\u636e\u5e76\u4e0d\u4fdd\u8bc1\u56fe\u7684\u8054\u901a\uff0c\u67d3\u8272\u7684\u65f6\u5019\u4e0d\u80fd\u53ea\u8dd1\u4e00\u904d\u3002\r\n\r\n### \u5efa\u6a21\r\n\r\n~~\u4f17\u6240\u5468\u77e5\uff0c\u7f51\u7edc\u6d41\u4e3b\u8981\u8003\u5efa\u6a21\u3002~~\r\n\r\n\u8fd9\u9053\u9898\u7684\u5efa\u6a21\u4e0d\u7b97\u5f88\u590d\u6742\uff0c\u5177\u4f53\u7684\u5206\u6790\u53ef\u4ee5\u770b\u5176\u4ed6\u9898\u89e3\u3002\r\n\r\n\u6c42\u6700\u5927\u72ec\u7acb\u96c6\u4e0d\u597d\u6c42\uff0c\u6240\u4ee5\u6211\u4eec\u6c42\u6700\u5927\u5339\u914d\uff0c\u8f6c\u6362\u4e3a\u7f51\u7edc\u6d41\u4e0a\u7684\u6700\u5927\u6d41\u3002\u8f93\u51fa\u7b54\u6848\u7684\u65f6\u5019\u518d\u62ff\u603b\u70b9\u6570\u51cf\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\r\n\r\n- \u4e0d\u59a8\u5047\u8bbe $u$ \u7684\u6027\u522b\u4e3a $0$\uff0c $v$ \u7684\u6027\u522b\u4e3a $1$\u3002\r\n- \u5efa\u7acb\u5bb9\u91cf\u4e3a $1$ \u7684\u4e00\u6761\u8fb9 $(u,v)$ \u3002\r\n- \u5efa\u7acb\u8d85\u7ea7\u6e90\u70b9 $S'$ \uff0c\u8d85\u7ea7\u6c47\u70b9 $T'$\u3002\r\n- \u5bf9\u4e8e\u6bcf\u4e00\u4e2a $u$ \u5efa\u7acb\u5bb9\u91cf\u4e3a $1$ \u7684\u4e00\u6761\u8fb9 $(S',u)$\u3002\r\n- \u5bf9\u4e8e\u6bcf\u4e00\u4e2a $v$ \u5efa\u7acb\u5bb9\u91cf\u4e3a $1$ \u7684\u4e00\u6761\u8fb9 $(v,T')$\u3002\r\n\r\n\u5c31\u597d\u4e86\u554a qwq\u3002\u6700\u540e\u6d41\u5411 $t$ \u7684\u6700\u5927\u6d41\u5c31\u662f\u4e8c\u5206\u56fe\u4e0a\u7684\u6700\u5927\u5339\u914d\u3002\r\n\r\n\u8fd8\u662f\u4e0d\u592a\u7406\u89e3\u7684\u8bdd\u53ef\u4ee5\u770b\u4e00\u4e0b\u56fe\uff1a\r\n\r\n![](https://cdn.luogu.com.cn/upload/image_hosting/76sguke1.png)\r\n\r\n\u6700\u540e\u9644\u4e0a[\u5b8c\u6574\u4ee3\u7801](https://www.luogu.com.cn/paste/uh7o8s7l)\r\n\r\n",
        "postTime": 1635942288,
        "uid": 367404,
        "name": "Kris_hukr",
        "ccfLevel": 0,
        "title": "P6268\u9898\u89e3"
    },
    {
        "content": "\u76f8\u5f53\u4e8e\u662f\u4e2a\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u677f\u5b50\u3002\n\n\u7531\u4e8e\u9898\u76ee\u4e2d\u7ed9\u51fa\u4e86\u6761\u4ef6\uff0c\u4e00\u5b9a\u662f\u7537\u5973\u4e4b\u95f4\u4e92\u76f8\u8df3\u8fc7\u821e\uff0c\u6240\u4ee5\u7ed9\u51fa\u7684\u56fe\u4e00\u5b9a\u662f\u4e2a\u4e8c\u5206\u56fe\u3002\n\n\u7136\u540e\u9898\u76ee\u663e\u7136\u8981\u6c42\u6700\u5927\u72ec\u7acb\u96c6\uff0c\u6ce8\u610f\u5230\u6700\u5c0f\u8986\u76d6\u4f7f\u5f97\u6bcf\u6761\u8fb9\u81f3\u5c11\u6709\u4e00\u4e2a\u9876\u70b9\u88ab\u9009\u4e2d\u4e14\u9009\u4e2d\u7684\u9876\u70b9\u6570\u6700\u5c11\uff0c\u6240\u4ee5\u53ea\u8981\u53bb\u6389\u6700\u5c0f\u8986\u76d6\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u6700\u5927\u72ec\u7acb\u96c6\u3002\n\n\u518d\u7531\u4e8e\u6700\u5c0f\u8986\u76d6\u6570\u503c\u4e0a\u7b49\u4e8e\u6700\u5927\u5339\u914d\uff0c\u4e8e\u662f\u8dd1\u5308\u7259\u5229\u5c31\u5b8c\u4e86\u3002\n\n\u9884\u5904\u7406\u65f6\u7528\u4e00\u4e2a dfs \u6765\u628a\u4e8c\u5206\u56fe\u7684\u4e24\u8fb9\u6807\u8bb0\u4e86\u5c31\u884c\u4e86\u3002\n\nCode:\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint N,M;\nbool hh[1007],hw[1007];\nint x,y,tg[1007],hus[1007];\nint head[1007],cnt,dfn[1007];\nstruct edge\n{\n    int nxt,to;\n}e[4007];\ninline void pdfs(int u,int fa)\n{\n\tfor(int i=head[u];i;i=e[i].nxt)\n\t{\n\t\tint v=e[i].to;\n\t\tif(v==fa||~tg[v])continue;\n\t\ttg[v]=tg[u]^1;pdfs(v,u);\n\t}\n}\ninline bool dfs(int u,int tim)\n{\n    for(int i=head[u];i;i=e[i].nxt)\n\t{\n\t    int v=e[i].to;\n\t    if(dfn[v]==tim)continue;\n\t    dfn[v]=tim;\n\t    if(!hh[v])\n\t\t{\n\t\t    hus[v]=u;\n\t\t    hh[v]=true;\n\t\t    return hw[u]=true;\n\t\t}\n\t    if(dfs(hus[v],tim))\n\t\t{\n\t\t    hus[v]=u;\n\t\t    hh[v]=true;\n\t\t    return hw[u]=true;\n\t\t}\n\t}\n    return hw[u]=false;\n}\nint main()\n{\n    scanf(\" %d %d\",&N,&M);\n    memset(tg,-1,sizeof(tg));\n    memset(dfn,-1,sizeof(dfn));\n    while(M--)\n\t{\n\t    scanf(\" %d %d\",&x,&y);\n\t    e[++cnt].nxt=head[x];e[cnt].to=y;head[x]=cnt;\n\t    e[++cnt].nxt=head[y];e[cnt].to=x;head[y]=cnt;\n\t}\n\tfor(int i=0;i<N;++i)\n\t{\n\t\tif(tg[i]==-1)\n\t\t{\n\t\t\ttg[i]=0;pdfs(i,-1);\n\t\t}\n\t}\n    cnt=0;\n    for(int i=0;i<N;++i)\n\t{\n\t    if(!tg[i]&&dfs(i,i))++cnt;\n\t}\n    printf(\"%d\\n\",N-cnt);\n    return 0;\n}\n```",
        "postTime": 1586059830,
        "uid": 59388,
        "name": "VinstaG173",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6268 \u3010[SHOI2002]\u821e\u4f1a\u3011"
    },
    {
        "content": "\u4e00\u9053\u4e8c\u5206\u56fe\u7684\u7ecf\u5178\u9898\u76ee\uff0c\u770b\u5230\u9898\u89e3\u533a\u67d3\u8272\u554a\uff0c\u9884\u5904\u7406\u4e8c\u5206\u56fe\u554a\u7b49\u7b49\u795e\u4ed9\u505a\u6cd5\u90fd\u597d\u590d\u6742\u3002\u6211\u611f\u6168\uff1a\u8fd9\u5176\u5b9e\u5c31\u662f\u4e00\u9053\u7ecf\u5178\u7684**\u4e8c\u5206\u56fe\u6700\u5927\u72ec\u7acb\u96c6**\u561b\uff01\n\n\u505a\u9898\u601d\u8def\n-\n\u6211\u4eec\u5148\u6765\u770b\u9898\uff1a\n```\n\u5df2\u77e5\u5b66\u6821\u6240\u6709 n \u540d\u5b66\u751f\u4e2d\uff0c\u6709\u4e9b\u5b66\u751f\u66fe\u7ecf\u4e92\u76f8\u8df3\u8fc7\u821e\u3002\u5728\u8fd9\u4e2a\u821e\u4f1a\u4e0a\uff0c\u8981\u6c42\u88ab\u9080\u8bf7\u7684\u5b66\u751f\u4e2d\u7684\u4efb\u4f55\u4e00\u5bf9\u7537\u751f\u548c\u5973\u751f\u4e92\u76f8\u90fd\u4e0d\u80fd\u8df3\u8fc7\u821e\u3002\n```\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5c06\u8fd9\u4e9b\u8df3\u8fc7\u821e\u7684\u4eba**\u6784\u5efa\u4e8c\u5206\u56fe**\uff0c\u5e76\u901a\u8fc7[\u5308\u7259\u5229\u7b97\u6cd5](https://baike.baidu.com/item/\u5308\u7259\u5229\u7b97\u6cd5/9089246?fr=aladdin)\u6c42\u51fa\u5339\u914d\u5bf9\u6570\u3002\n\u800c\u5728\u4e8c\u5206\u56fe\u4e2d\u4e00\u5bf9\u5339\u914d\u5bf9\u5e94\u7684\u662f\u4e24\u4e2a\u4eba\uff0c\u6211\u4eec\u7528**\u603b\u4eba\u6570\u51cf\u53bb\u5df2\u53c2\u4e0e\u5339\u914d\u7684\u4eba\u6570**\u5373\u53efA\u6389\u8fd9\u9053\u9898\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\n-\n\u8fd9\u9053\u9898\u7684\u4ee3\u7801\u5b9e\u73b0\u6709\u8bb8\u591a\u7ec6\u8282\u9700\u8981\u6ce8\u610f\uff1a\n\n1.\u9700\u8981\u53cc\u5411\u5efa\u56fe\uff0c\u6839\u636e\u9898\u610f\u8fd9\u91cc\u7684\u914d\u5bf9\u5173\u7cfb\u662f**\u65e0\u5411\u56fe**\u3002\n\n2.\u5b58\u56fe\u65f6\u6ce8\u610f**\u5e8f\u53f7\u662f0~n-1**\uff0c\u8fd9\u91cc\u5efa\u8bae\u5927\u5bb6\u5c06\u5176\u8f6c\u5316\u4e3a1~n\u7684\u56fe\uff0c\u51cf\u5c11\u521d\u59cb\u5316\u8d1f\u6743\u6570\u7ec4\u7684\u9ebb\u70e6\n\n3.\u7531\u4e8e\u914d\u5bf9\u4f1a\u91cd\u590d\uff08\u5373\u4f1a\u51fa\u73b0s[a]=b,s[b]=a\u7684\u60c5\u51b5\uff09\uff0c\u6240\u4ee5\u6ce8\u610f\u6700\u540e\u8f93\u51fa\u7684\u662fn-**(ans/2)**\n\n\u5177\u4f53\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a\n```cpp\nint main()\n{\n\tint n,m;\n\tn=read(),m=read();\n\tint x,y;\n\tfor(fint i=1;i<=m;i++)\n\tx=read(),y=read(),adds(x+1,y+1),adds(y+1,x+1);//\u53cc\u5411\u5efa\u56fe\uff0c\u70b9\u5e8f\u53f7+1\n\tint ans=0;\n\tfor(fint i=1;i<=n;i++)\n\t{\n\t\tmemset(vis,0,sizeof(vis));\n\t\tif(Hungary(i))\n\t\tans++;\n\t}\n\tcout<<n-(ans/2);//\u53bb\u91cd\n\treturn 0;\n}\n\ninline void adds(int u,int v)\n{\n\te[++cnt].to=v;\n\te[cnt].nxt=head[u];\n\thead[u]=cnt;\n\treturn ;\n}\n\ninline int Hungary(int x)//\u6807\u51c6\u5308\u7259\u5229\u7b97\u6cd5\n{\n\tfor(fint i=head[x];i;i=e[i].nxt)\n\tif(!vis[e[i].to])\n\t{\n\t\tvis[e[i].to]=1;\n\t\tif(!s[e[i].to]||Hungary(s[e[i].to]))\n\t\t{\n\t\t\ts[e[i].to]=x;\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\u795d\u5927\u5bb6\u987a\u5229AC\uff01\uff01\uff01",
        "postTime": 1594030113,
        "uid": 244059,
        "name": "king_xbz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3\u2014\u2014\u2014\u2014[SHOI2002]\u821e\u4f1a"
    }
]