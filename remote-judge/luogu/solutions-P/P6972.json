[
    {
        "content": "\u4e0d\u59a8\u79f0\u4e09\u4e2a\u77e9\u9635\u5206\u522b\u4e3a $A,B,C$\uff0c\u95ee\u9898\u7b49\u4ef7\u4e8e\u5c06\u4e09\u4e2a\u77e9\u9635\u5e73\u79fb\u540e\u5f02\u6216\u8d77\u6765\u90fd\u4e3a $0$\u3002\n\n\u5206\u522b\u627e\u5230\u4e09\u4e2a\u77e9\u9635\u4e2d\u6700\u4e0a\u9762\u7684 $1$ \u4e2d\u6700\u5de6\u8fb9\u7684\uff0c\u6211\u4eec\u65ad\u8a00\uff1a\u5408\u6cd5\u89e3\u4e2d\u8fd9\u4e09\u4e2a $1$ \u5fc5\u7136\u6709\u4e24\u4e2a\u662f\u91cd\u5408\u7684\u3002\u8bc1\u660e\u8003\u8651\u53cd\u8bc1\uff0c\u82e5\u90fd\u4e0d\u91cd\u5408\uff0c\u8003\u8651\u8fd9\u4e09\u4e2a\u70b9\u6784\u6210\u7684\u56fe\u5f62\u4e2d\u6700\u4e0a\u9762\u7684 $1$ \u4e2d\u6700\u5de6\u8fb9\u7684\uff0c\u5176\u5fc5\u7136\u4e0d\u53ef\u80fd\u88ab\u5176\u5b83\u53e6\u5916\u7684 $1$ \u6240\u8986\u76d6\uff0c\u6240\u4ee5\u5728\u6700\u7ec8\u7684\u56fe\u5f62\u4e2d\u5fc5\u7136\u4e3a $1$\uff0c\u663e\u7136\u4e0d\u53ef\u80fd\u4e3a\u89e3\u3002\n\n\u4e8e\u662f\u53ea\u6709 $\\mathcal O(1)$ \u79cd\u53ef\u80fd\uff0c\u66b4\u529b Check \u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n^2)$\u3002\n\n```cpp\n#define fi first\n#define se second\n#define mkp std::make_pair\n#define NO mkp(INF, INF)\ntypedef std::pair <int, int> pii;\nconst int N = 4000 + 5, O = 2000, INF = 0x3f3f3f3f;\n\nint h[3], w[3], mat[3][N][N], ans_mat[N][N]; pii top_l[3];\nchar s[N];\n\nvoid GetAnsMat(int t_1, int t_2, int mov_x, int mov_y) {\n\tmemset(ans_mat, 0, sizeof(ans_mat)); \n\tfor(int i = 1; i <= h[t_1]; ++i)\n\t\tfor(int j = 1; j <= w[t_1]; ++j)\n\t\t\tans_mat[O + i][O + j] ^= mat[t_1][i][j];\n\tfor(int i = 1; i <= h[t_2]; ++i)\n\t\tfor(int j = 1; j <= w[t_2]; ++j)\n\t\t\tans_mat[O + i + mov_x][O + j + mov_y] ^= mat[t_2][i][j];\n}\n\nstd::vector <pii> a, b;\npii Check(int t) {\n\ta.clear(); b.clear();\n\tfor(int i = 0; i < N; ++i)\n\t\tfor(int j = 0; j < N; ++j) {\n\t\t\tif(mat[t][i][j]) a.push_back(mkp(i, j));\n\t\t\tif(ans_mat[i][j]) b.push_back(mkp(i - O, j - O));\n\t\t}\n\tif(a.size() != b.size()) return NO;\n\tif(a.size() == 0) return mkp(0, 0);\n\tint mov_x = b[0].fi - a[0].fi, mov_y = b[0].se - a[0].se;\n\tfor(int i = 0; i < a.size(); ++i)\n\t\tif(b[i].fi != mov_x + a[i].fi || b[i].se != mov_y + a[i].se) return NO;\n\treturn mkp(mov_x, mov_y);\n}\n\nint main() {\n\tfor(int t = 0; t < 3; ++t) {\n\t\tscanf(\"%d%d\", &h[t], &w[t]);\n\t\ttop_l[t] = mkp(0, 0);\n\t\tfor(int i = 1; i <= h[t]; ++i) {\n\t\t\tscanf(\"%s\", s + 1);\n\t\t\tfor(int j = 1; j <= w[t]; ++j) {\n\t\t\t\tmat[t][i][j] = (s[j] == '*');\n\t\t\t\tif(top_l[t] == mkp(0, 0) && s[j] == '*')\n\t\t\t\t\ttop_l[t] = mkp(i, j);\n\t\t\t}\n\t\t}\n\t}\n\tint mov_x, mov_y; pii tmp;\n\tmov_x = top_l[0].fi - top_l[1].fi;\n\tmov_y = top_l[0].se - top_l[1].se;\n\tGetAnsMat(0, 1, mov_x, mov_y);\n\ttmp = Check(2);\n\tif(tmp != NO) {\n\t\tprintf(\"YES\\n%d %d\\n\", mov_y, mov_x);\n\t\tcontinue;\n\t}\n\tmov_x = top_l[0].fi - top_l[2].fi;\n\tmov_y = top_l[0].se - top_l[2].se;\n\tGetAnsMat(0, 2, mov_x, mov_y);\n\ttmp = Check(1);\n\tif(tmp != NO) {\n\t\tprintf(\"YES\\n%d %d\\n\", tmp.se, tmp.fi);\n\t\tcontinue;\n\t}\n\tmov_x = top_l[1].fi - top_l[2].fi;\n\tmov_y = top_l[1].se - top_l[2].se;\n\tGetAnsMat(1, 2, mov_x, mov_y);\n\ttmp = Check(0);\n\tif(tmp != NO) {\n\t\tprintf(\"YES\\n%d %d\\n\", -tmp.se, -tmp.fi);\n\t\tcontinue;\n\t}\n\tprintf(\"NO\\n\");\n\treturn 0;\n}\n```",
        "postTime": 1636275372,
        "uid": 34238,
        "name": "zhylj",
        "ccfLevel": 9,
        "title": "P6972"
    }
]