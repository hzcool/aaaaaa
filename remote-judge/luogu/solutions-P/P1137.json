[
    {
        "content": "\u6211\u770b\u4e86\u4e00\u4e0b\u5176\u4ed6\u5927\u4f6c\u7684\u9898\u89e3\uff0c\u5927\u90e8\u5206\u90fd\u662f\u62d3\u6251\u6392\u5e8f\u52a0\u4e0aDP\u3002\u90a3\u4e48\u6211\u60f3\u6709\u7684\u4eba\u662f\u4e0d\u660e\u767d\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u505a\u7684\uff0c\u62d3\u6251\u6392\u5e8f\u6709\u4ec0\u4e48\u6027\u8d28\u4f7f\u5f97\u53ef\u4ee5DP\u5462?\u4e0b\u9762\u6211\u5c31\u63d0\u4e00\u4e0b\u3002\n\n\u5bf9\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe(Directed Acyclic Graph\u7b80\u79f0DAG)G\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\uff0c\u662f\u5c06G\u4e2d\u6240\u6709\u9876\u70b9\u6392\u6210\u4e00\u4e2a\u7ebf\u6027\u5e8f\u5217\uff0c\u4f7f\u5f97\u56fe\u4e2d\u4efb\u610f\u4e00\u5bf9\u9876\u70b9u\u548cv\uff0c\u82e5\u8fb9(u,v)\u2208E(G)\uff0c\u5219u\u5728\u7ebf\u6027\u5e8f\u5217\u4e2d\u51fa\u73b0\u5728v\u4e4b\u524d\u3002 \uff08\u6e90\u81ea\u767e\u5ea6\uff09\n\n\u901a\u4fd7\u7684\u8bf4\u5c31\u662f\uff0c\u4e00\u5f20\u6709\u5411\u65e0\u73af\u56fe\u7684\u62d3\u6251\u5e8f\u53ef\u4ee5\u4f7f\u5f97\u4efb\u610f\u7684\u8d77\u70b9u,\u5b83\u7684\u4e00\u4e2a\u7ec8\u70b9v\uff0c\u5728\u5e8f\u5217\u4e2d\u7684\u987a\u5e8f\u662fu\u5728\u524dv\u5728\u540e\n\n\u6211\u4e0b\u9762\u5148\u9644\u4e0a\u4ee3\u7801\uff0c\u7136\u540e\u5728\u7ee7\u7eed\u8bf4\u660e\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int maxn=100000+15;\nint n,m,sum,tot;\nint head[maxn],ru[maxn],ts[maxn],dp[maxn];\nstruct EDGE\n{\n\tint to;int next;\n}edge[maxn<<2];\nvoid add(int x,int y)\n{\n\tedge[++sum].next=head[x];\n\tedge[sum].to=y;\n\thead[x]=sum;\n}\nvoid topsort()\n{\n\tqueue <int> q;\n\tfor (int i=1;i<=n;i++)\n\tif (ru[i]==0) {\n\tq.push(i);\n\tts[++tot]=i;\n}\n\twhile (!q.empty())\n\t{\n\t\tint u=q.front();q.pop();\n\t\tfor (int i=head[u];i;i=edge[i].next)\n\t\t{\n\t\t\tint v=edge[i].to;\n\t\t\tru[v]--;\n\t\t\tif (ru[v]==0) {\n\t\t\tq.push(v);ts[++tot]=v;\n\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tadd(u,v);\n\t\tru[v]++;\n\t}\n\ttopsort();\n\tfor (int i=1;i<=n;i++) dp[i]=1;\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tint u=ts[i];\n\t\tfor (int j=head[u];j;j=edge[j].next)\n\t\t{\n\t\t\tint v=edge[j].to;\n\t\t\tdp[v]=max(dp[v],dp[u]+1);\n\t\t}\n\t}\n\tfor (int i=1;i<=n;i++)\n\tprintf(\"%d\\n\",dp[i]);\n\treturn 0;\n}\n```\n\n\u4ed4\u7ec6\u770bDP\u90e8\u5206\uff0c\u8fd8\u8bb0\u5f97DP\u9700\u8981\u6ee1\u8db3\u4ec0\u4e48\u539f\u5219\u5417\uff1f\u65e0\u540e\u6548\u6027\u3002\u5982\u679c\u4e0d\u662f\u5728\u62d3\u6251\u5e8f\u4e2d\u8fdb\u884cDP,\u4f1a\u5b8c\u5168\u7834\u574f\u65e0\u540e\u6548\u6027\uff08\u5f53\u7136\u8fd9\u4e5f\u4e0b\u9762\u4e3a\u4ec0\u4e48\u6709\u4eba\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u7684\u539f\u56e0\uff0c\u8bb0\u5fc6\u5316\u641c\u7d22\u540c\u6837\u53ef\u4ee5\u89e3\u51b3\u65e0\u540e\u6548\u6027\u7684\u95ee\u9898\uff09\u3002\u6b63\u662f\u56e0\u4e3a\u62d3\u6251\u5e8fu\u5728\u524d,v\u5728\u540e\u7684\u6027\u8d28\uff0c\u8fd9\u624d\u9009\u62e9\u4f7f\u7528\u62d3\u6251\u6392\u5e8f\uff0c\u6bd5\u7adf\u5b83\u7684\u4ee3\u7801\u5b9e\u73b0\u5f88\u8f7b\u677e\uff0c\u800c\u4e14\u8fd0\u884c\u65f6\u95f4\u4e5f\u4e0d\u5dee\u3002\n\n\u81f3\u4e8e\u600e\u4e48\u6c42\u62d3\u6251\u5e8f\uff0c\u5c31\u662f\u628a\u5165\u5ea6\u4e3a0\uff08\u5c31\u662f\u6ca1\u6709\u8fb9\u628a\u5b83\u4f5c\u4e3a\u7ec8\u70b9\uff09\u7684\u70b9\u5165\u961f\uff0c\u5e76\u52a0\u5165\u62d3\u6251\u5e8f\u3002\u4e4b\u540e\u65ad\u6389\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u8d77\u70b9\u7684\u8fb9\uff0c\u5373\u5c06\u8fd9\u4e9b\u8fb9\u7684\u7ec8\u70b9\u7684\u5165\u5ea6\u51cf\u4e00\uff0c\u76f4\u5230\u961f\u4e3a\u7a7a\u5c31\u597d\u3002\n\n\u90a3\u4e48\u5c31\u662f\u8fd9\u4e9b\u4e86\uff0c\u5e0c\u671b\u5bf9\u5927\u5bb6\u6709\u5e2e\u52a9",
        "postTime": 1519648960,
        "uid": 63019,
        "name": "\u661f\u661f\u4e4b\u706b",
        "ccfLevel": 0,
        "title": "P1137\u65c5\u884c\u8ba1\u5212\u9898\u89e3"
    },
    {
        "content": "\u4e0d\u7406\u89e3\u4e3a\u4ec0\u4e48\u90fd\u5199\u8fd9\u4e48\u957f\u2026\u2026\u5f88\u663e\u7136\uff0c\u6bcf\u4e2a\u70b9\u7684\u7b54\u6848\u662f\u5b83\u6240\u6709\u524d\u9a71\u8282\u70b9\u7684\u7b54\u6848\u52a01\uff0c\u5373f[i]=max(f[i],f[j]+1);\n\u8003\u8651\u7a7a\u95f4\u590d\u6742\u5ea6\u7528\u90bb\u63a5\u8868\u5b58\u56fe\uff0c\u5728\u62d3\u6251\u6392\u5e8f\u540c\u65f6DP\u5c31\u597d\u4e86\u4e0d\u7528\u518d\u5916\u9762\u518d\u505a\u4ec0\u4e48\u5de5\u4f5c\u3002\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<map>\n#include<cmath>\nusing namespace std;\nint n,m,lin[100010],in[100010],total,f[100010];\nqueue<int>q;\nstruct cym{\n\tint to,next;\n}e[400010];\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\te[++total].to=y;\n\t\te[total].next=lin[x];\n\t\tlin[x]=total;\n\t\tin[y]++;\n\t}\n\tfor(int i=1;i<=n;i++)\n\tif(in[i]==0)\n\t{\n\t\tf[i]=1;\n\t\tq.push(i);\n\t}\n\twhile(!q.empty())\n\t{\n\t\tint cnt=q.front();q.pop();\n\t\tfor(int i=lin[cnt];i;i=e[i].next)\n\t\t{\n\t\t\tf[e[i].to]=max(f[e[i].to],f[cnt]+1);\n\t\t\tif(--in[e[i].to]==0)q.push(e[i].to);\t\n\t\t}\t\n\t}\n\tfor(int i=1;i<=n;i++)printf(\"%d\\n\",f[i]);\n}\n```",
        "postTime": 1520495562,
        "uid": 27398,
        "name": "_ZZH",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1137 \u3010\u65c5\u884c\u8ba1\u5212\u3011"
    },
    {
        "content": "//\u62d3\u8865\u6392\u5e8f\u6a21\u677f+spfa\uff1b\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct D{\n\tint nxt,to;\n}d[200001];\nint l[200001],w,n,m,a,b,h[200001],v[200001];\nqueue<int>q;\nvoid xx(int x,int y)//\u90bb\u63a5\u8868\u5b58\u50a8\uff1b \n{\n\td[++w].nxt=h[x]; \n\td[w].to=y;\n\th[x]=w;\n}\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>a>>b;\n\t\txx(a,b);\n\t\tl[b]++;//\u7edf\u8ba1b\u7684\u5165\u5ea6\uff1b \n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(!l[i])//\u5982\u679c\u8be5\u70b9\u7684\u5165\u5ea6\u4e3a0\u8bf4\u660e\u8be5\u70b9\u662f\u8d77\u70b9\uff1b \n\t\t{\n\t\t\tq.push(i);//\u5165\u961f\uff1b \n\t\t\tv[i]=1;//v\u6570\u7ec4\u7edf\u8ba1\u5230\u8be5\u70b9\u7ecf\u8fc7\u7684\u57ce\u5e02\u6570\uff1b \n\t\t}\n\t}\n\twhile(!q.empty())\n\t{\n\t\tint x1=q.front();//\u53d6\u961f\u9996\u5143\u7d20\uff1b \n\t\tfor(int i=h[x1];i!=0;i=d[i].nxt)\n\t\t{\n\t\t\tl[d[i].to]--;/*\u4ed6\u80fd\u5230\u7684\u513f\u5b50\u8282\u70b9\u7684\u5165\u5ea6\u51cf1\n            \uff08\u76f8\u5f53\u4e8e\u5220\u9664\u8be5\u70b9\uff09\uff1b*/ \n\t\t\tif(!l[d[i].to])/*\u5982\u679c\u8be5\u70b9\u5165\u5ea6\u4e3a0\u5c06\u4ed6\u7f6e\u4e3a\n            \u4e0b\u4e00\u6b21\u7684\u8d77\u70b9\uff1b */\n\t\t\t{\n\t\t\t\tv[d[i].to]=v[x1]+1;\n\t\t\t\tq.push(d[i].to);//\u5c06\u8be5\u70b9\u5165\u961f\uff1b \n\t\t\t}\n\t\t}\n\t\tq.pop();\n\t}\n\tfor(int i=1;i<=n;i++)\n\tcout<<v[i]<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1527058148,
        "uid": 87457,
        "name": "wshz",
        "ccfLevel": 0,
        "title": "\u65c5\u884c\u8ba1\u5212"
    },
    {
        "content": "# DFS\u8bb0\u5fc6\u5316\u641c\u7d22&\u62d3\u6251\n\n~~\u5351\u5fae\u9898\u89e3~~\n\u770b\u9898\u89e3\u7684\u5927\u90e8\u5206\u5927\u4f6c\u7528\u7684dp\u62d3\u6251\u6392\u5e8f\u4ec0\u4e48\u7684\uff08\u597d\u591a\u9898\u89e3\u5c31\u6ca1\u7ee7\u7eed\u7ffb\u4e86\uff09ummm\u53ef\u662f\u6211\u4e0d\u4f1a\u6240\u4ee5\u5c31....\u66b4\u529bDFS ~~\u66b4\u529b\u51fa\u5947\u8ff9~~ \u4f46\u4e0d\u662f\u65e0\u8111DFS\u8981\u52a0\u8bb0\u5fc6\u5316\u8fd9\u6837\u5c31\u4e0d\u4f1a\u8d85\u65f6 ~~\uff08\u8840\u7684\u6559\u8bad~~\u3002\n\n\u505a\u8fd9\u4e00\u9898\u4e4b\u524d\u4e00\u9053\u6a59\u9898\u7ed9\u4e86\u5f88\u5927\u542f\u53d1 [P4017\u6700\u5927\u98df\u7269\u94fe\u8ba1\u6570](https://www.luogu.org/problem/P4017)\u505a\u5b8c\u90a3\u9898\u4f1a\u53d1\u73b0\u8fd9\u9898\u7528\u8bb0\u5fc6\u5316\u8d85\u597d\u5199 ~~\uff08\u53ef\u80fd\u5bf9\u4e8e\u5927\u4f6c\u6765\u8bf4\u4e0d\u7528\u90a3\u9898\u4e5f\u5f88\u7b80\u5355~~\u3002\n# **\u4e3b\u8981\u601d\u8def**\n  **1.\u5efa\u56fe**  \u9898\u76ee\u7ed9\u7684\u662f\u524d\u4e00\u4e2a\u57ce\u5e02\u5728\u540e\u4e00\u4e2a\u57ce\u5e02\u897f\u8fb9\u7684\u8def\uff0c\u4f46\u662f\u5374\u8981\u6c42\u5411\u4e1c\u8d70\u7684\uff0c\u8fd9\u4e2a\u65f6\u5019\u5f88\u5bb9\u6613\u60f3\u5f97\u5230\u8981\u5efa\u4e2a\u53cd\u56fe\uff08\u76f8\u5bf9\u4e8e\u9898\u76ee\u7ed9\u7684\u56fe\u6765\u8bf4\uff09\u5e76\u4e14\u4e00\u5b9a\u8981\u662f\u5355\u5411\u7684\uff0c\u56e0\u4e3a\u5c0f\u660e\u4e0d\u5f80\u897f\u8d70\u3002\u8fd9\u4e2a\u6570\u636e\u8303\u56f4\u4e00\u770b\uff0c\u53ef\u80fd\u4f1a\u70b8\u7a7a\u95f4\uff0c\u6240\u4ee5\u7528\u94fe\u5f0f\u5411\u524d\u661f\u5b58\u56fe\u3002\n\n\u5173\u4e8e\u94fe\u5f0f\u524d\u5411\u661f\u70b9[\u8fd9\u91cc](https://blog.csdn.net/acdreamers/article/details/16902023)\u3002\n\n**2.\u62d3\u6251**\uff08\u6ca1\u6709\u7cfb\u7edf\u7684\u5b66\u4e60\u8fc7\u62d3\u6251\u5982\u679c\u8bf4\u7684\u4e0d\u5bf9\u6b22\u8fce\u6307\u6b63\uff09\u6211\u8fd9\u91cc\u5e76\u6ca1\u6709\u7528\u6392\u5e8f\uff08\u5982\u679c\u51fa\u5165\u5ea6\u662f\u6392\u5e8f\u7684\u8bdd\u5c31\u7528\u4e86\uff09\uff0c\u5728\u5efa\u56fe\u7684\u65f6\u5019\u7528\u6570\u7ec4**du[i]\u5b58\u5165\u5ea6**\uff08\u4e5f\u5c31\u662f\u6709\u591a\u5c11\u6761\u8def\u7684\u7ec8\u70b9\u662f\u8fd9\u91cc\uff09\u7528\u6570\u7ec4**vt[i]\u5b58\u51fa\u5ea6**\uff08\u6709\u591a\u5c11\u6761\u8def\u7684\u8d77\u70b9\u662f\u8fd9\u91cc\uff09\uff0c\u5728dfs\u7684\u65f6\u5019\u4f1a\u66f4\u65b9\u4fbf\uff1b\n\n**3.dfs** \u8bb0\u5f97\u4e00\u5b9a\u8981\u8bb0\u5fc6\u5316\uff0c\u8fd9\u91cc\u7528\u4e86\u4e00\u4e2a\u6570\u7ec4**sy[i]\u5b58\u4ece\u7b2ci\u4e2a\u57ce\u5e02\u51fa\u53d1\u6700\u591a\u53ef\u4ee5\u65c5\u884c\u7684\u57ce\u5e02\u6570**\uff0cdfs\u6df1\u641c\u5982\u679c\u641c\u5230\u51fa\u5ea6\u4e3a0\u5c31\u8bf4\u660e\u5230\u4e86\u5c3d\u5934\uff0c\u5c06\u8fd9\u91cc\u7684sy[i]\u53d8\u62101\uff08\u597d\u50cf\u4e0d\u53d8\u4e5f\u53ef\u4ee5\uff09\u7279\u5224\u5982\u679csy[i]\u4e0d\u4e3a0\u5c31\u8bf4\u660e\u5df2\u7ecf\u66f4\u65b0\u8fc7\u4e86\u5c31\u4e0d\u7528\u518d\u641c\u4e0b\u53bb\u76f4\u63a5\u8fd4\u56desy[i]\u7684\u503c\uff0c\u8fd9\u91cc\u6ce8\u610f\u4e0d\u80fd\u8fd4\u56desy[i]+1\u3002\n\n\n------------\n### **\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b**\n\n\n```c\n#include<iostream>\nusing namespace std;\nstruct node{\n\tint to,next;\n}a[200001];\nint n,m,h[100001],du[100001],vt[100001],sy[100001],num;\nvoid add(int x,int y){\n\tnum++;\n\ta[num].to=y;\n\ta[num].next=h[x];\n\th[x]=num;\n\tdu[y]++;vt[x]++;\n}\nint dfs(int s){\n\tif(!vt[s])\t{sy[s]=1;return 1;}\n\tif(sy[s])\treturn sy[s];\n\tint sum=0;\n\tfor(int i=h[s];i;i=a[i].next)\n\t\tsum=max(sum,dfs(a[i].to));\n\tsy[s]=sum+1;\n\treturn sy[s];\n}\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x,y;\n\t\tcin>>x>>y;\n\t\tadd(y,x);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(!du[i])\n\t\t\tdfs(i);\n\tfor(int i=1;i<=n;i++)\n\t\tcout<<sy[i]<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1570274795,
        "uid": 230740,
        "name": "zyx10",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1137 \u3010\u65c5\u884c\u8ba1\u5212\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u8fd8\u662f\u86ee\u597d\u60f3\u7684\n\n\u90a3\u4e0b\u9762\u6211\u8bf4\u4e00\u4e0b\u601d\u8def\n\n\n\n------------\n# \u4e3b\u8981\u601d\u8def\n\n\u65e2\u7136\u6211\u4eec\u8981\u6c42\u5230\u4e00\u4e2ai\u7684\u7ec8\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u4e0d\u5982\u7528\u9006\u5411\u601d\u7ef4\uff0c\u53cd\u5411\u5b58\u56fe\u7136\u540e\u628a\u7ec8\u70b9\u6362\u6210\u8d77\u70b9\uff0c\u518d\u8dd1\u4e00\u8fb9\u8bb0\u5fc6\u5316\u5c31\u53ef\u4ee5\u4e86~\n\uff08\u597d\u50cf\u86ee\u7b80\u5355\u7684\u5462\uff09\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u51fa\u52a8\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\n```\ndp[x]=max(dp[x],dfs(y)+1);\n```\n\n\n\n\n------------\n# \u4ee3\u7801\n```\n#include<iostream>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#include<cstdio>\nusing namespace std;\n\nconst int maxn=1000010;\nint n,m;\nint x,y;\nint head[maxn];\nint tot;\nint dp[maxn];\nint ans;\n\nstruct Edge{\n\tint to;\n\tint next;\n}e[maxn];\n\nvoid add(int x,int y){\n\ttot++;\n\te[tot].to=y;\n\te[tot].next=head[x];\n\thead[x]=tot;\n}//\u90bb\u63a5\u8868\n\nint dfs(int x){\n\tif(dp[x]!=-1) return dp[x];//\u5982\u679c\u6765\u8fc7\u5c31\u76f4\u63a5\u8f93\u51fa\n\tdp[x]=1;//\u66f4\u65b0\u8be5\u70b9,\u4e0d\u8981\u5fd8\u8bb0\u4e86\u54e6~\n\tfor(int i=head[x];i;i=e[i].next){\n\t\tint y=e[i].to;\n\t\tdp[x]=max(dp[x],dfs(y)+1);//dp~\n\t}\n\treturn dp[x];\n}\n\nint main(){\n\tcin>>n>>m;\n\tmemset(dp,-1,sizeof(dp));\n  \t//dp\u6570\u7ec4\u4e0d\u66f4\u65b0\uff0coi\u5341\u5e74\u6cea\u4e24\u884c\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>x>>y;\n\t\tadd(y,x);//\u53cd\u5411\u5b58\u56fe\n\t}\n\tfor(int i=1;i<=n;i++) cout<<dfs(i)<<endl;\n\treturn 0;\n}\n//\u5b8c\u7f8e\u7ed3\u675f\uff01~\n```\n\n\n\n------------\n\u6700\u540e\u795d\u5927\u5bb6\u5728\u4eca\u5e74noip\u83b7\u5f97\u81ea\u5df1\u6700\u771f\u5b9e\u7684\u7b11\u5bb9\n\n\u5e0c\u671b\u7ba1\u7406\u5927\u5927\u7ed9\u8fc7\u54e6~\n\n\n------------\n\n\n# \u6700\u540e\u9001\u7ed9\u5927\u5bb6\u4e00\u53e5\u8bdd\n\n\u4e0d\u8981\u770b\u8f7b\u81ea\u5df1\uff0c\u552f\u4e00\u9700\u8981\u8bb0\u5f97\u7684\u2014\u2014\u4f60\u662fOI\u7684\u5fe0\u5b9e\u7c89\u4e1d\uff0c\u662f\u8ffd\u9010\u68a6\u60f3\u7684\u8ffd\u68a6\u4eba\uff0c\u662f\u7528\u8111\u5b50\u60f3\u7b97\u6cd5\uff0c\u7528\u8f7b\u76c8\u7ffb\u98de\u7684\u624b\u6307\u6572\u952e\u76d8\uff0c\u7528\u5145\u6ee1\u597d\u5947\u7684\u773c\u60ca\u559c\u5730\u671b\u89c1\u5982\u6c99\u6f20\u4e2d\u7684\u7eff\u6d32\u822c\u7684\u7eff\u8272\u7684\u201cAccepted\u201d\uff0c\u4ece\u800c\u50cf\u662f\u88ab\u6ce8\u5165\u4e86\u5f3a\u5fc3\u5242\uff0c\u5fc3\u4e2d\u83b7\u5f97\u4e00\u4e1d\u6170\u85c9\u7684\u8fd9\u6837\u4e00\u4f4d\u666e\u666e\u901a\u901a\u7684oier\u3002",
        "postTime": 1561898927,
        "uid": 169974,
        "name": "\u5f52\u5c71_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1137 \u3010\u65c5\u884c\u8ba1\u5212\u3011"
    },
    {
        "content": "##\u4e3a\u4ec0\u4e48\u53c8\u6ca1\u6709P\u3002\u3002\u3002\n\n##\u8fd8\u662f\u6211\u6765\u8865\u4e00\u53d1\u5427\n\n\u76f4\u63a5\u62d3\u6251\u5c31\u884c\u4e86\uff0c\u4e3a\u4ec0\u4e48\u8981dp\u3002\u3002\u3002\n\n\u9996\u5148\uff0c\u4ece\u9898\u610f\u903b\u8f91\u5173\u7cfb\u5224\u65ad\uff0c\u80af\u5b9a\u6ca1\u6709\u73af\u3002\n\n\u6709\u5411\u65e0\u73af\u56fe\uff0c\u6700\u957f\u8def\uff0c\u5f88\u81ea\u7136\u7684\u5c31\u60f3\u5230\u4e86\u62d3\u6251\u3002\n\n\u521a\u5f00\u59cb\uff0c\u5bf9\u4e8e\u5165\u5ea6\u4e3a0\u7684\u70b9\u6700\u957f\u8def\u80af\u5b9a\u4e3a1\uff0c\u56e0\u4e3a\u80af\u5b9a\u4e0d\u80fd\u4ece\u5176\u4ed6\u70b9\u8fc7\u6765\uff0c\u6700\u957f\u8def\u4e5f\u5c31\u4e3a1\u3002\n\n\u7136\u540e\u8dd1\u62d3\u6251\u65f6\uff0c\u5bf9\u4e8e\u6bcfi\u8f6e\uff0c\u5f53\u524d\u8f6e\u6570\u5165\u5ea6\u4e3a0\u7684\u70b9\uff0c\u90a3\u4e48\u5f53\u524d\u70b9\u7684\u6700\u957f\u8def\u5373\u4e3ai\u3002\n\n\u62d3\u6251\u4e0d\u4f1a\u7684\u540c\u5b66\u8bf7\u81ea\u884c\u767e\u5ea6\u3002\n\n\u4e11\u964b\u7684\u4ee3\u7801\uff1a\n\n```cpp\nvar\n  a,next,last:array[0..200001]of longint;\n  b:array[0..200001]of boolean;\n  rd,dis,p,q:array[0..100001]of longint;\n  n,m,i,j,x,y,tot,t,tt,ans:longint;\nprocedure add(x,y:longint);\nbegin\n  inc(tot);\n  a[tot]:=y;\n  next[tot]:=last[x];\n  last[x]:=tot;\n  inc(rd[y]);\nend;//\u8fb9\u8868\u5b58\u8fb9\nbegin\n  readln(n,m);\n  for i:=1 to m do \n    begin\n      readln(x,y);\n      add(x,y);\n    end;\n  for i:=1 to n do  \n    if rd[i]=0 then\n      begin\n        dis[i]:=1;\n        inc(t);\n        q[t]:=i;\n      end;//\u5148\u52a0\u5165\u5165\u5ea6\u4e3a0\u7684\u70b9\n  ans:=1;\n  while t>0 do \n    begin\n      tt:=0;\n      inc(ans);\n      for i:=1 to t do \n        begin\n          j:=last[q[i]];\n          while j>0 do \n            begin\n              if not b[j] then \n                begin\n                  b[j]:=true;\n                  dec(rd[a[j]]);\n                  if rd[a[j]]=0 then \n                    begin\n                      inc(tt);\n                      p[tt]:=a[j];\n                      dis[a[j]]:=ans;\n                    end;\n                end;\n              j:=next[j];\n            end;\n        end;\n      t:=tt;\n      for i:=1 to t do q[i]:=p[i];\n    end; //\u7b80\u5355\u7684\u62d3\u6251\n  for i:=1 to n do writeln(dis[i]);\nend.\n\n```",
        "postTime": 1511520730,
        "uid": 25355,
        "name": "\u590f\u8272\u796d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1137 \u3010\u65c5\u884c\u8ba1\u5212\u3011"
    },
    {
        "content": "## \u8fd9\u9053\u9898\u6211\u4eec\u7528\u62d3\u6251\u6392\u5e8f\u505a\n\n\u5148\u8bb2\u89e3\u4e00\u4e0b**\u62d3\u6251\u6392\u5e8f**\uff1a\n\n\u62d3\u6251\u6392\u5e8f\u662f\u7528\u6765\u89e3\u51b3**AOV\u7f51**\u7684\u95ee\u9898\u7684\u4e00\u4e2a\u7b97\u6cd5\n\n**AOV\u7f51**\u662f\u4e00\u4e2a**\u65e0\u73af\u6709\u5411\u56fe**\uff0c\u5f62\u8c61\u7684\u89e3\u91ca\u4e00\u4e0b\uff1a\u4e00\u4e2a\u519c\u592b\u6709n\u9879\u519c\u6d3b\u8981\u5e72\uff0c\u4f46\u519c\u6d3b\u662f\u6709\u5148\u540e\u987a\u5e8f\u7684\uff08\u4f8b\u5982\u5fc5\u987b\u5148\u7ed9\u5e84\u7a3c\u65bd\u80a5\uff0c\u6d47\u6c34\uff0c\u6700\u540e\u624d\u80fd\u91c7\u6458\uff0c~~\u603b\u4e0d\u80fd\u62d4\u82d7\u52a9\u957f\u554a~~\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u56fe\u6765\u5f62\u8c61\u7684\u63cf\u7ed8\u51fa\u6765\uff08\u5fc5\u987b\u5148\u5b8c\u6210\u7684\u519c\u6d3bA\u6307\u5411\u5fc5\u987b\u5b8c\u6210A\u8fd9\u4e2a\u519c\u6d3b\u624d\u53ef\u4ee5\u505a\u7684\u519c\u6d3bB\uff0c\u4ee5\u6b64\u6784\u6210\u4e00\u4e2a\u56fe\uff09\uff0c\u8fd9\u5c31\u662fAOV\u7f51\u3002\n\n\u7ed9\u5f20\u56fe\u5f62\u8c61\u4e00\u4e0b\uff0c\u5c31\u4e0d\u53e3\u80e1\u4e86\n\n![](https://cdn.luogu.com.cn/upload/pic/60542.png)\n\n\u65e0\u73af\u662f\u56e0\u4e3a\u6709\u73af\u5c31\u4f1a\u53d1\u751f\u51b2\u7a81\uff0c\u4f8b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/60544.png)\n\n\u90a3\u4e48\u5b8c\u62101\u9700\u8981\u5b8c\u62104,\u5b8c\u62104\u9700\u8981\u5b8c\u62103\uff0c\u5b8c\u62103\u9700\u8981\u5b8c\u62102\uff0c\u5b8c\u62102\u9700\u8981\u5b8c\u62101\u2026\u2026\u2026\u2026\u8bf6\uff0c\u5b8c\u62101\u9700\u8981\u5b8c\u62101\uff1f\u8fd9\u5c31\u4e0d\u5bf9\u4e86\u3002\n\n\u62d3\u6251\u6392\u5e8f\u662f\u628a\u8fd9\u79cdAOV\u7f51\u8f6c\u6362\u6210\u4e00\u4e2a\u5e8f\u5217\uff08\u4ece\u5148\u5b8c\u6210\u7684\u5230\u540e\u5b8c\u6210\u7684\uff09\u7684\u7b97\u6cd5\uff08\u76f8\u540c\u7ea7\u522b\u8c01\u5728\u524d\u8c01\u5728\u540e~~\u968f\u4f60\u5927\u5c0f\u4fbf~~\uff09\n\n\u597d\u4e86\uff0c\u5148\u770b\u90bb\u63a5\u77e9\u9635\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nqueue < int > pru;//\u7528\u6765\u5b58\u6ca1\u6709\u5165\u5ea6\u7684\u70b9(\u540d\u4e49\u4e0a\u7684\u8d77\u70b9\uff0c\u4f46\u4e0d\u662f\u771f\u6b63\u7684\u8d77\u70b9)\uff0c\u4f1a\u66f4\u65b0 \nint n, m, x, y, dis[1000001], num, in[1000001], out[1000001], f[10001][10001];//dis[i]\u8868\u793a\u4ece\u8d77\u70b9\u5230i\u7ecf\u8fc7\u51e0\u4e2a\u57ce\u5e02\uff0cin[i]\u8868\u793a\u5165\u5ea6\uff0cout[i]\u8868\u793a\u51fa\u5ea6\uff0cf[i][j]\u8868\u793ai\u7684\u7b2cj\u4e2a\u51fa\u5ea6 \nint main()\n{\n\tscanf(\"%d %d\", &n, &m);\n\tfor(register int i = 1; i <= m; ++i)\n\t{\n\t\tscanf(\"%d %d\", &x, &y);\n\t\t++out[x]; \n\t\t++in[y];\n\t\tf[x][out[x]] = y;//\u8fde\u8fb9 \n\t}\n\tfor(register int i = 1; i <= n; ++i)\n\t{\n\t\tif(in[i] == 0)//\u8d77\u70b9\u6ca1\u6709\u5165\u5ea6 \n\t\t{\n\t\t\tpru.push(i);\n\t\t\tdis[i] = 1;//\u8d77\u70b9\u5230\u8d77\u70b9 \n\t\t}\n\t}\n\twhile(!pru.empty())\n\t{\n\t\tint u = pru.front();//\u53d6\u51fa\u5f53\u524d\u70b9 \n\t\tpru.pop();//\u5f39\u51fa \n\t\tfor(register int i = 1; i <= out[u]; ++i)//\u5faa\u73af\u5b83\u7684\u51fa\u5ea6(\u5b83\u6ca1\u6709\u51fa\u5ea6) \n\t\t{\n\t\t\t--in[f[u][i]];//\u8fd9\u4e2a\u6570\u7684\u5165\u5ea6\u5c31\u51cf\u4e00\u4e86 \n\t\t\tif(in[f[u][i]] == 0)//\u6ca1\u6709\u5165\u5ea6 \n\t\t\t{\n\t\t\t\tpru.push(f[u][i]);//\u5b58\u8d77\u6765 \n\t\t\t\tdis[f[u][i]] = dis[u] + 1;//\u591a\u7ecf\u8fc7\u4e86\u4e00\u4e2a\u57ce\u5e02(\u5b83\u81ea\u5df1) \n\t\t\t}\n\t\t}\n\t}\n\tfor(register int i = 1; i <= n; ++i)\n\t{\n\t\tprintf(\"%d\\n\", dis[i]);//\u6ce8\u610f\u662f\u6362\u884c \n\t}\n\treturn 0;\n}\n```\n\n\u53ef\u60dc\u8fd9\u9053\u9898\u7684\u6570\u636e\u6781\u5927\uff0cN \u2264 100000\uff0c\u6240\u4ee5\u4f1aRE\uff08\u7206\u7a7a\u95f4\uff09\uff0c\u5c31\u7528\u90bb\u63a5\u8868\u505a\u3002\n\n\u770b\u90bb\u63a5\u8868\u4ee3\u7801\uff08\u6ce8\u91ca\u5c31\u4e0d\u5199\u4e86\uff0c\u548c\u4e0a\u9762\u90bb\u63a5\u77e9\u9635\u7684\u5dee\u4e0d\u591a\uff09\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nqueue < int > pru;\nint n, m, x, y, dis[10000001], num, in[10000001], out[10000001], head[10000001];//out\u73b0\u5728\u6ca1\u7528 \nstruct node\n{\n\tint to, next;\n}stu[10000001];\ninline void add(int x, int y)\n{\n\tstu[++num].next = head[x];\n\tstu[num].to = y;\n\thead[x] = num;\n\treturn;\n}\nint main()\n{\n\tscanf(\"%d %d\", &n, &m);\n\tfor(register int i = 1; i <= m; ++i)\n\t{\n\t\tscanf(\"%d %d\", &x, &y);\n\t\t++in[y];\n\t\tadd(x, y);\n\t}\n\tfor(register int i = 1; i <= n; ++i)\n\t{\n\t\tif(in[i] == 0)\n\t\t{\n\t\t\tpru.push(i);\n\t\t\tdis[i] = 1;\n\t\t}\n\t}\n\twhile(!pru.empty())\n\t{\n\t\tint u = pru.front();\n\t\tpru.pop();\n\t\tfor(register int i = head[u]; i; i = stu[i].next)\n\t\t{\n\t\t\tint k = stu[i].to;\n\t\t\t--in[k];\n\t\t\tif(in[k] == 0)\n\t\t\t{\n\t\t\t\tpru.push(k);\n\t\t\t\tdis[k] = dis[u] + 1;\n\t\t\t}\n\t\t}\n\t}\n\tfor(register int i = 1; i <= n; ++i)\n\t{\n\t\tprintf(\"%d\\n\", dis[i]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1560151192,
        "uid": 143681,
        "name": "Strong_Jelly",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1137 \u3010\u65c5\u884c\u8ba1\u5212\u3011"
    },
    {
        "content": "\u6ca1\u660e\u767d\u4e3a\u4ec0\u4e48\u4f1a\u6709dp\u7684\u6807\u7b7e\uff1f\n\n\u663e\u7136\u7684\u7ed3\u8bba\u5c31\u662f\u4e00\u4e2a\u7ed3\u70b9\u7684\u7b54\u6848\uff0c\u662f\u4ed6\u5728\u62d3\u6392\u5e8f\u4e2d\u7684\u6df1\u5ea6\u3002\n\n\u53ea\u8981\u8fb9\u62d3\u6392\u8fb9\u8bb0\u5f55\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(n + m)$\n\n$Code:$\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 100000 + 5;\n\nint cnt , head[N] , dep[N] , ind[N];\n\nstruct Edge {\n\tint to , nxt;\n}e[N << 1];\n\nvoid add(int u , int v) {\n\te[++cnt].to = v;\n\te[cnt].nxt = head[u];\n\thead[u] = cnt;\n}\nint n , m;\n\nvoid Topo() {\n\tqueue <int> q;\n\tfor(int i = 1 ; i <= n ; ++ i) if(!ind[i]) q.push(i) , dep[i] = 1;\n\twhile(!q.empty()) {\n\t\tint now = q.front() ; q.pop();\n\t\tfor(int i = head[now] ; i ; i = e[i].nxt) {\n\t\t\tint v = e[i].to;\n\t\t\tdep[v] = dep[now] + 1;\n\t\t\tind[v] --;\n\t\t\tif(!ind[v]) q.push(v);\n\t\t}\n\t}\n\tfor(int i = 1 ; i <= n ; ++ i)printf(\"%d\\n\" ,dep[i]);\n}\n\nint main () {\n\tcin >> n >> m;\n\tfor(int i = 1 ; i <= m ; ++ i) {\n\t\tint u , v ; cin >> u >> v;\n\t\tadd(u , v); ind[v] ++;\n\t}\n\tTopo();\n\treturn 0;\n}\n```\n",
        "postTime": 1571971804,
        "uid": 134080,
        "name": "jins3599",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1137 \u3010\u65c5\u884c\u8ba1\u5212\u3011"
    },
    {
        "content": "\u521a\u521a\u5b66\u4e86\u62d3\u6251\u6392\u5e8f ~~\uff08\u5582\uff0c\u90fd\u5feb\u534a\u4e2a\u6708\u4e86\u597d\u4f10\uff1f\uff09~~ \u7ec8\u4e8e\u6765\u505a\u4e86\u4e00\u9053\u6bd4\u8f83\u7b80\u5355\u7684\u9898\u3002\n\n\u6309\u7167\u6211\u7684\u7406\u89e3\uff0c\u4e00\u4e2a\u70b9\u7684\u524d\u9a71\u662f\u80fd\u591f\u5230\u8fbe\u5b83\u7684\u70b9\uff1b\u540e\u9a71\u5219\u662f\u5b83\u6240\u80fd\u5230\u8fbe\u7684\u70b9\u3002\n\n\u6211\u5bf9\u4e8e\u62d3\u6251\u6392\u5e8f\u7684\u7406\u89e3\u662f\uff0c\u8fd9\u662f\u4e00\u79cd\u6bd4\u8f83\u7279\u6b8a\u7684\u5904\u7406\u6709\u5411\u56fe\u7684\u8282\u70b9\u7684\u987a\u5e8f\u3002\u5f53\u4e00\u4e2a\u70b9\u7684\u7b54\u6848\u53ef\u4ee5\u4e14\u53ea\u53ef\u4ee5\u88ab\u4ed6\u7684\u524d\u9a71\u6240\u5f71\u54cd\uff08\u51b3\u5b9a\uff1f\uff09\u65f6\uff0c\u4e00\u79cd\u53ef\u4ee5\u5b8c\u7f8e\u7684\u89c4\u907f\u6389\u6839\u636e\u4e0d\u786e\u5b9a\u7684\u524d\u9a71\u7b54\u6848\u800c\u5f97\u5230\u5176\u540e\u9a71\u4e0d\u6b63\u786e\u7684\u7b54\u6848\u7684\u60c5\u51b5\u7684\u5904\u7406\u987a\u5e8f\u3002\n\n\u901a\u8fc7\u4e00\u4e2a\u961f\u5217\uff0c\u6211\u4eec\u5c06\u6240\u6709\u5165\u5ea6\u4e3a0\u7684\u70b9\u5148\u5168\u4e22\u8fdb\u53bb\uff0c\u7136\u540e\u4e00\u4e2a\u4e00\u4e2a\u5904\u7406\uff0c\u5c06\u5b83\u6240\u8fde\u7684\u8fb9\u5168\u90e8\u5220\u6389\uff0c\u5728\u5224\u65ad\u5b83\u540e\u9a71\u7684\u5165\u5ea6\u662f\u5426\u4e3a0\uff0c\u662f\u5219\u5165\u961f\u3002\u5728\u6b64\u540c\u65f6\uff0c\u6211\u4eec\u518d\u8fdb\u884c\u9898\u76ee\u7684\u8981\u6c42\u3002\n\n\u6765\u8c08\u4e00\u4e0b\u672c\u9053\u9898 ~~\uff08\u521a\u521a\u4f60\u5728\u505a\u4ec0\u4e48\u54c7\u5582\uff09~~ \u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u4e00\u4e2a\u70b9\u4e3a\u7ec8\u70b9\u6240\u80fd\u5230\u7684\u6700\u591a\u57ce\u5e02\u6570\u662f\u7531\u5b83\u7684\u524d\u9a71\u6240\u80fd\u5230\u7684\u6700\u5927\u57ce\u5e02\u6570\u51b3\u5b9a\u7684\uff0c\u7279\u6b8a\u7684\uff0c\u6ca1\u6709\u524d\u9a71\u5219\u57ce\u5e02\u6570\u4e3a1\u3002\u663e\u7136\uff0c\u62d3\u6251\u6392\u5e8f\u53ef\u4ee5\u6ee1\u8db3\u8fd9\u9053\u9898\u7684\u8981\u6c42\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <queue>\n\nusing namespace std;\n\nconst int N=2*1e5+7;\n\nint m,n;\n\nint read()//\u5feb\u8bfb\u4e0d\u89e3\u91ca\u4e86 \n{\n\tint x=1,a=0;\n\tchar ch = getchar();\n\twhile(ch > '9' || ch < '0'){\n\t\tif(ch == '-') x = -1;\n\t\tch = getchar();\n\t}\n\twhile(ch >= '0' && ch <= '9'){\n\t\ta = a*10 + ch-'0';\n\t\tch = getchar();\n\t}\n\treturn a*x;\n}\n\nint head[N],go[N],nxt[N],cnt,du[N];\n\nvoid add(int u,int v)//\u94fe\u5f0f\u524d\u5411\u661f\u4e0d\u89e3\u91ca\u4e86\u2026\u2026 \n{\n\tgo[++cnt] = v;\n\tnxt[cnt] = head[u];\n\thead[u] = cnt;\n\tdu[v] ++;//\u5b58\u8fb9\u540c\u65f6\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e2a\u8282\u70b9\u7684\u5165\u5ea6 \n}\n\nint f[N];//\u6bcf\u4e2a\u70b9\u6240\u5bf9\u5e94\u7684\u7b54\u6848 \nqueue<int>q;//\u7528\u4e8e\u5b58\u5df2\u7ecf\u786e\u5b9a\u7b54\u6848\u7684\u70b9\u7f16\u53f7 \nint main()\n{\n\tn = read();m = read();\n\tfor(int i = 1 ;i <= m;i ++){//\u975e\u5e38\u7b80\u5355\u7684\u6709\u5411\u8fb9\u7684\u8bfb\u5165\u4e0e\u5b58\u50a8 \n\t\tint u = read(),v = read();\n\t\tadd(u,v);\n\t}\n\t\n\tfor(int i = 1;i <= n;i ++){//\u627e\u4e00\u4e0b\u6ca1\u6709\u524d\u9a71\u7684\u70b9 \n\t\tif(!du[i]) q.push(i);//\u82e5du[i] == 0\u5219\u5165\u5ea6\u4e3a0\uff0c\u65e2\u6ca1\u6709\u524d\u9a71 \n\t}\n\t/*\u5f88\u663e\u7136\uff0c\u4ee5\u6ca1\u6709\u524d\u9a71\u7684\u70b9\u4f5c\u4e3a\u7ec8\u70b9\u7b54\u6848\u4e00\u5b9a\u662f1\uff0c\u7531\u4e8e\u6211\u61d2\u7684\u521d\u59cb\u5316\uff0c\u56e0\u6b64\u5168\u5c40\u53d8\u91cf\u5168\u8bbe\u4e3a\u96f6\uff0c\u8f93\u51fa\u65f6\u518d\u52a0\u4e00*/ \n\twhile(!q.empty()){//\u6bcf\u4e2a\u70b9\u90fd\u5165\u961f\u4e00\u6b21\uff0c\u51fa\u961f\u4e00\u6b21\uff0c\u590d\u6742\u5ea6\u663e\u7136O(n) \n\t\tint u = q.front();\n\t\tq.pop();\n\t\tfor(int e = head[u];e;e = nxt[e]){//\u6bcf\u6761\u8fb9\u90fd\u88ab\u904d\u5386\u4e00\u6b21\uff0c\u8fd9\u91cc\u603b\u590d\u6742\u5ea6\u663e\u7136O(m)  \n\t\t\tint v = go[e];\n\t\t\tdu[v]--;//\u8fd8\u53ef\u4ee5\u5bf9v\u7684\u7b54\u6848\u4ea7\u751f\u5f71\u54cd\u7684\u524d\u9a71\u6570\u51cf\u4e00 \n\t\t\tf[v] = max(f[v] , f[u]+1);//\u5904\u7406\u6b64\u65f6u\u5bf9v\u7684\u7b54\u6848\u8d21\u732e\uff0c\u5373\u4eceu\u518d\u8d70\u4e00\u6b65\u5230v\u6216\u4e3a\u4e4b\u524dv\u7684\u7b54\u6848\uff0c\u53d6max  \n\t\t\tif(!du[v]){//\u5982\u679cv\u7684\u524d\u9a71\u5df2\u7ecf\u5168\u88ab\u5904\u7406\u8fc7\uff0c\u5219\u518d\u65e0\u70b9\u53ef\u4ee5\u5f71\u54cd\u5230v\uff0cv\u7684\u7b54\u6848\u5df2\u7ecf\u786e\u5b9a\uff0c\u5165\u961f\u4ee5\u901a\u8fc7v\u6765\u5904\u7406v\u7684\u540e\u9a71 \n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\t//\u56e0\u6b64\u603b\u590d\u6742\u5ea6\u5e94\u8be5\u662fO(n+m)\n\tfor(int i = 1;i <= n;i ++){//\u6309\u7167\u987a\u5e8f\u6765\u8f93\u51fa\uff0c\u5e76\u4e14\u628a\u521d\u59cb\u503c1\u52a0\u4e0a\u53bb \n\t\tprintf(\"%d\\n\",f[i]+1);\n\t}\n\treturn 0;//\u5b8c\u7f8e\u7684\u8fd4\u56de\u503c0 \n}\n```\n\u6700\u540e\u795d\u613f\u6240\u6709\u7684oier\u90fd\u53ef\u4ee5\u5728\u8003\u573a\u4e0arp++\uff1b",
        "postTime": 1574487257,
        "uid": 118166,
        "name": "nao_nao",
        "ccfLevel": 9,
        "title": "P1137 \u65c5\u884c\u8ba1\u5212 \u9898\u89e3"
    },
    {
        "content": "\u770b\u5230\u597d\u591a\u5927\u4f6c\u4eec\u7528\u62d3\u6251+DP\uff0c\u7136\u540e\u849f\u84bb\u6211\u6765\u53d1\u4e00\u7bc7\u7eafDP(\u8bb0\u5fc6\u5316\u641c\u7d22)\u7684\u9898\u89e3\u597d\u4e86\n\n\u65b9\u7a0b\u5f0f\u5f88\u597d\u60f3\uff1adp(i)=max{dp(j)}+1,(j,i)\u2208E\uff08\u5c31\u662f\u8bf4\u5b58\u5728\u6709\u5411\u8fb9j\u2192i\uff09\u3002\n\n\u7136\u540e\u6211\u7528\u7684vector\u6765\u5b58\u90bb\u63a5\u8868\uff0c\u8fd9\u6837\u5f88\u65b9\u4fbf\u3002end[i]\u5305\u542b\u6240\u6709\u6709\u5411\u8fb9j\u2192i\u7684j\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint d[100001];\nvector<int> end[100001];\nint dp(int now){\n\tif(d[now]!=-1)\treturn d[now];\n\td[now]=1;\n\tfor(int i=0;i<end[now].size();i++)\n\t\td[now]=max(d[now],dp(end[now][i])+1);\n\treturn d[now];\n}\nint main(){\n\tint n,m;\n\tmemset(d,-1,sizeof(d));\n\tcin>>n>>m;\n\tint a,b;\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>a>>b;\n\t\tend[b].push_back(a);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tprintf(\"%d\\n\",dp(i));\n\treturn 0;\n} \n```",
        "postTime": 1524226000,
        "uid": 60116,
        "name": "meowla",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1137 \u3010\u65c5\u884c\u8ba1\u5212\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u5927\u5bb6\u4e00\u770b\u5c31\u80fd\u53d1\u73b0\uff0c\u53ea\u80fd\u5f80\u4e1c\u8fb9\u8d70\uff0c\u5e76\u4e14\u6709\u4e2a\u5165\u5ea6\u4e3a$0$\u7684\u8d77\u70b9\uff0c\u56e0\u6b64\u8fd9\u662f\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\uff0c\u53ef\u4ee5\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\uff0c\u6c42\u51fa\u62d3\u6251\u5e8f\u5217\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8981\u62d3\u6251\u5e8f\u5217\u600e\u4e48\u505a\u5462\uff1f\u7531\u4e8e\u62d3\u6251\u5e8f\u5217\u4e2d\uff0c\u524d\u9762\u7684\u70b9\u603b\u662f\u540e\u9762\u7684\u70b9\u7684\u524d\u9a71\uff0c\u56e0\u6b64\u53ef\u4ee5\u8fdb\u884c$dp$\u3002\n\n\u800c$dp$\u5f0f\u5b50\u4e5f\u5f88\u660e\u663e\uff0c\u8fd9\u4e2a\u57ce\u5e02\u7684\u8def\u7ebf\u53ea\u80fd\u7531\u524d\u9762\u7684\u57ce\u5e02\u8fc7\u6765\uff08\u8fd9\u4e5f\u50cf\u62d3\u6251\uff09\uff0c\u56e0\u6b64\u8ddf\u81ea\u5df1\u4e0e\u524d\u9762\u57ce\u5e02\u8def\u7ebf$+1\\ max$\u4e00\u4e0b\uff0c\u7b54\u6848\u5c31\u51fa\u6765\u3002\n\n\u5f53\u7136\uff0c\u4e3a\u4e86\u6548\u7387\u4e0e\u5185\u5b58\uff0c\u6700\u597d\u4f7f\u7528\u90bb\u63a5\u94fe\u8868\uff08\u5efa\u56fe\u5c31\u4e0d\u8bf4\u4e86\uff09\u3002\n\n\u5177\u4f53\u770b\u6ce8\u91ca\uff0c\u53c2\u8003\u7a0b\u5e8f\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\nusing namespace std;\n\nconst int MAXN=100005;\nint n,m,cnt;\nint indeg[MAXN],f[MAXN],a[MAXN];\n//\u4e09\u4e2a\u6570\u7ec4\u5206\u522b\u8868\u793a\uff1a\u5165\u5ea6\u3001dp\u6570\u7ec4\u3001\u62d3\u6251\u5e8f\u5217\nstruct node\n{\n\tint to,next;\n}edge[MAXN<<2];\nint head[MAXN],sum;\n\nvoid add(const int& x,const int& y)\n{\n\tedge[++sum].next=head[x];\n\tedge[sum].to=y;\n\thead[x]=sum;\n}\n\nvoid input(void)\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y);\n\t\tindeg[y]++;//\u7edf\u8ba1\u5165\u5ea6\n\t}\n}\n\nvoid topo_sort(void)//\u6309\u4e0a\u9762\u6559\u7a0b\u8bf4\u5f97\u6765\u5c31\u884c\u4e86\n{\n\tqueue <int> q;\n\tfor(int i=1;i<=n;i++)\n\t if(!indeg[i])//\u521d\u59cb\u5316\u961f\u5217\n\t  q.push(i);\n\twhile(!q.empty())\n\t{\n\t\tconst int tmp=q.front();\n\t\tq.pop();\n\t\ta[++cnt]=tmp;//\u628a\u961f\u5217\u91cc\u7684\u5165\u5ea6\u4e3a0\u7684\u70b9\u5b58\u8fdb\u62d3\u6251\u5e8f\u5217\n\t\tfor(int i=head[tmp];i!=0;i=edge[i].next)//\u904d\u5386\u4e00\u904d\u56fe\n\t\t{\n\t\t\tconst int now=edge[i].to;\n\t\t\tindeg[now]--;\n\t\t\tif(!indeg[now])\n\t\t\t q.push(now);\n\t\t}\n\t}\n}\n\nvoid dp(void)\n{\n\tfor(int i=1;i<=n;i++)\n\t f[i]=1;//\u6bcf\u4e2a\u57ce\u5e02\u5230\u672c\u8eab\u90fd\u81f3\u5c11\u67091\u6761\u8def\u7ebf\n\tfor(int i=1;i<=n;i++)//\u6bcf\u4e2a\u57ce\u5e02\u90fd\u904d\u5386\u4e00\u904d\n\t{\n\t\tconst int tmp=a[i];//\u6ce8\u610f\u904d\u5386\u7684\u662f\u62d3\u6251\u5e8f\u5217\u91cc\u7684\u57ce\u5e02\uff0c\u6b64\u65f6\u4fdd\u8bc1tmp\u662fnow\u7684\u524d\u9a71\n\t\tfor(int j=head[tmp];j!=0;j=edge[j].next)//\u904d\u5386\u56fe\n\t\t{\n\t\t\tconst int now=edge[j].to;\n\t\t\tf[now]=max(f[now],f[tmp]+1);//\u628a\u6709\u5173\u8054\u7684\u57ce\u5e02\u90fdmax\u4e00\u4e0b\n\t\t}\n\t}\t\n}\n\nvoid output(void)\n{\n\tfor(int i=1;i<=n;i++)\n\t printf(\"%d\\n\",f[i]);\n}\n\nint main()\n{\n\tinput();\n\ttopo_sort();\n\tdp();\n\toutput();\n\treturn 0;\n}\n```\n\n",
        "postTime": 1548516772,
        "uid": 80049,
        "name": "Hexarhy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1137 \u3010\u65c5\u884c\u8ba1\u5212\u3011"
    },
    {
        "content": "\u524d\u8a00\uff1a\u4e0d\u660e\u767d\u4e3a\u4ec0\u4e48dalao\u4eec\u5168\u90fd\u5199dp+\u62d3\u6251\u554a\uff0c\u672cjuruo\u8ba4\u4e3a\u5199\u4e2a\u62d3\u6251\u975e\u5e38ok\u554a\u3002\n\n\u601d\u8def\uff1a\u62d3\u6251\u6574\u4e2a\u56fe\uff0c\u901a\u8fc7\u62d3\u6251\u961f\u5217\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u66f4\u65b0\u5b83\u8fde\u63a5\u7684\u8282\u70b9\u3002\n\n\u4e0d\u5199dp\u7684\u539f\u56e0\uff1a\u56e0\u4e3a\u62d3\u6251\u4e2d\u4f7f\u7528\u7684\u662f\u961f\u5217\u7684\u5b58\u50a8\u5f62\u5f0f\uff0c\u800c\u961f\u5217\u53ef\u4ee5\u4fdd\u8bc1**\u961f\u5217\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u7684\u7b54\u6848\u662f\u9012\u589e\u7684**\uff08\u4e0d\u61c2\u7684\u53ef\u4ee5\u601d\u8003\u4e00\u4e0bbfs\u6c42\u6700\u5c0f\u89e3\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u4e0d\u65ad\u7684\u8fdb\u884c\u66f4\u65b0\uff0c\u5c31\u53ef\u4ee5\u4fdd\u6301\u961f\u5217\u7684\u9012\u589e\u6027\uff0c\u7ee7\u800c\u76f4\u63a5\u6c42\u51fa\u6bcf\u4e2a\u8282\u70b9\u7684\u7b54\u6848\u3002\n\n\u4ee3\u7801\uff1a\n```\n#include <cstdio>\n#include <iostream>\nusing namespace std;\nint n,m,s1,s2,tot,fir[100001],in[100001],ans[100001];\nint dl[100001][2],head,tail,now;\nstruct edge{\n\tint u,v;\n\tint next;\n}a[200001];\nint New(int f,int t){\n\ta[++tot].u=f;a[tot].v=t;\n\ta[tot].next=fir[f];fir[f]=tot;\n}\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>s1>>s2;New(s1,s2);in[s2]++;\n\t}//\u5efa\u56fe\n\tfor(int i=1;i<=n;i++){\n\t\tif(!in[i])dl[++tail][0]=i,dl[tail][1]=1;\n\t}//\u5904\u7406\u5165\u5ea6\u4e3a0\u7684\u8282\u70b9\n\twhile(head<=tail){\n\t\t++head;\n\t\tans[dl[head][0]]=dl[head][1];//\u5c06\u7b54\u6848\u4ece\u961f\u5217\u5b58\u50a8\u7684\u5f62\u5f0f\u8f6c\u5316\u6210\u7b54\u6848\u6570\u7ec4\n\t\tnow=fir[dl[head][0]];\n\t\twhile(now!=0){\n\t\t\tin[a[now].v]--;\n\t\t\tif(!in[a[now].v]){\n\t\t\t\tdl[++tail][0]=a[now].v;\n\t\t\t\tdl[tail][1]=dl[head][1]+1;//\u76f4\u63a5\u66f4\u65b0\uff0c\u5982\u679c\u4e4b\u524d\u6709\u5c0f\u7684\u7b54\u6848\u4f1a\u88ab\u6b64\u7b54\u6848\u8986\u76d6\n\t\t\t}\n\t\t\tnow=a[now].next;\n\t\t}\n\t}//\u62d3\u6251\u6392\u5e8f\n\tfor(int i=1;i<=n;i++)cout<<ans[i]<<endl;\n\treturn 0;\n} \n```",
        "postTime": 1543331055,
        "uid": 14559,
        "name": "AFOier",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1137 \u3010\u65c5\u884c\u8ba1\u5212\u3011"
    },
    {
        "content": "\u4ed4\u7ec6\u60f3\u60f3\uff0c\u8fd9\u662f\u4e00\u9053\u62d3\u6251\u6392\u5e8f\u9898\u3002\u7528\u524d\u5411\u661f\u5b58\u56fe\uff0c\u5230\u8fbeu\u8fd9\u4e00\u70b9\u53ef\u80fd\u6709\u591a\u79cd\u8d70\u6cd5\uff0c\u6240\u4ee5\u8981\u627e\u6700\u5927\u503c ans[u]:=max(ans[u],ans[v]+1)\n\n\u4ee3\u7801\u8d34\u8d34\u8d34\u3002\u3002\n\n\n\n```cpp\nconst maxn=100005; maxm=200005;\nvar i,n,m,u,v,top,cnt:longint;\n        head,dis,indgr,stack,ans:array[0..maxn]of longint;\n        next,ends:array[0..maxm]of longint;\nfunction max(x,y:longint):longint;\n    begin\n      if x>y then max:=x\n      else max:=y;\n    end;\nprocedure add(u,v:longint);\n    begin\n      ends[cnt]:=v;\n        next[cnt]:=head[u];\n        head[u]:=cnt;\n        inc(cnt);\n    end;\nprocedure topu;\n    var i,j,v:longint;\n    begin\n        for i:=1 to n do \n          if indgr[i]=0 then \n          begin\n            inc(top);\n            stack[top]:=i;\n            ans[i]:=1;\n          end;\n        while top>0 do \n        begin\n          v:=stack[top]; dec(top); \n          j:=head[v];\n          while j<>-1 do\n          begin\n            ans[ends[j]]:=max(ans[ends[j]],ans[v]+1);\n            dec(indgr[ends[j]]);\n            if indgr[ends[j]]=0 then \n            begin\n              inc(top);\n              stack[top]:=ends[j];\n            end;\n            j:=next[j];\n          end;\n        end;\n    end;\nbegin\n  readln(n,m);\n  fillchar(head,sizeof(head),255);\n  fillchar(ans,sizeof(ans),0);\n  fillchar(indgr,sizeof(indgr),0);\n  cnt:=1; top:=0; \n  for i:=1 to m do \n  begin\n      readln(u,v);\n      inc(indgr[v]);\n      add(u,v);\n  end;\n  topu;\n  for i:=1 to n do \n    writeln(ans[i]);\nend.\n```",
        "postTime": 1505477950,
        "uid": 21239,
        "name": "kotoridaisuki",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1137 \u3010\u65c5\u884c\u8ba1\u5212\u3011"
    },
    {
        "content": "\u8bb0\u5fc6\u5316\u641c\u7d22\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint n,m;\nstruct node{\n    int to,next;\n}e[400000];\nint head[200000];\nint dp[200000];\nvoid add(int u,int v,int k)\n{\n    e[k].to=v;\n    e[k].next=head[u];\n    head[u]=k;\n}\nvoid dfs(int x)\n{\n    if(dp[x]) return;\n    dp[x]=1;\n    for(int i=head[x];i;i=e[i].next)\n    {\n        dfs(e[i].to);\n        dp[x]=max(dp[x],dp[e[i].to]+1);\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        int u,v;\n        scanf(\"%d%d\",&v,&u);\n        add(u,v,i);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        dfs(i);\n        printf(\"%d\\n\",dp[i]);\n    }\n}\n```",
        "postTime": 1476837623,
        "uid": 25692,
        "name": "\u8d75\u6668\u6d0b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1137 \u3010\u65c5\u884c\u8ba1\u5212\u3011"
    },
    {
        "content": "## [\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c][to]\n\n## \u8fd9\u9898\u5f88\u7b80\u5355\uff0c1\u5206\u949f\u60f3\u51fa\u601d\u8def\uff0c5\u5206\u949f\u6253\u51fa\u4ee3\u7801\uff08\u5168WA\uff09\uff0c\u627e\u95195\u5206\u949f\uff08\u4e3b\u8981\u662f\u6709\u5751qwq\uff09\uff0c\u7801\u91cf\u5e76\u4e0d\u957f\n\n## ~~\u4e3b\u8981\u662f\u6253\u4e86\u51e0\u5929\u7ebf\u6bb5\u6811\uff0c\u6811\u94fe\u5256\u5206(\u52a8\u4e0d\u52a8\u5c31\u662f\u51e0\u767e\u884c\u4ee3\u7801)\uff0c\u5199\u5199\u9898\u89e3\u653e\u677e\u4e00\u4e0b~~\n\n## \u672c\u9898\u89e3\u529b\u6c42\u901a\u4fd7\u6613\u61c2\n\n# ``\u9898\u610f``\n\n## \u7ed9\u51fa\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u4ece\u4efb\u4e00\u57ce\u5e02\u51fa\u53d1\u5230\u4e00\u57ce\u5e02\uff08\u53ef\u4ee5\u662f\u5b83\u672c\u8eab\uff09\u6700\u591a\u7ecf\u8fc7\u591a\u5c11\u57ce\u5e02\n\n# ``\u601d\u8def+\u4ee3\u7801``\n\n## \u62ff\u5230\u9898\u9996\u5148\u5206\u6790\u6837\u4f8b\n\n## RT\n\n![][tp1]\n\n## \u57ce\u5e021:1(1)\n\n## \u57ce\u5e022:1->2(2)\n\n## \u57ce\u5e023:1->2->3(3)\n\n## \u57ce\u5e024:1->2->3->4(4)\n\n## \u57ce\u5e025:1->2->5(3)\n\n## \u624b\u52a8\u63a8\u4e00\u4e0b\u5f88\u660e\u663e,\u4ece\u5165\u5ea6\u4e3a0\u7684\u8282\u70b9\u5411\u4e0b\u6269\u5c55\n\n## \u90a3\u4e48\u5c31\u7528dfs\u6216bfs\u5b9e\u73b0\n\n## \u6211\u9009\u62e9\u4e86bfs(\u5373spfa)\n\n## \u4ee3\u7801\u5982\u4e0b\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nvector<int> to[100010];\nbool used[100010];\nint ans[100010];\nint main( ){\n\tint n,m,x,y,j;\n\tvector<int>::iterator i;\n\tscanf(\"%d%d\",&n,&m);\n\twhile(m--){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tto[x].push_back(y);\n\t}        //\u8f93\u5165+\u5b58\u50a8\n\tqueue<int>q;\n\tq.push(1);\n\tans[1]=1;      //\u521d\u59cb\u5316\n\twhile(!q.empty()){   //sppfa\u6a21\u677f\n\t\tx=q.front( );\n\t\tq.pop( );\n\t\tused[x]=0;\n\t\tfor(i=to[x].begin();i<to[x].end();i++)\n\t\tif(ans[*i]<ans[x]+1){\n\t\t\tans[*i]=ans[x]+1;\n\t\t\tif(!used[*i]){\n\t\t\t\tq.push(*i);\n\t\t\t\tused[*i]=1;\n\t\t\t}\n\t\t}\n\t}\n\tfor(j=1;j<=n;j++)\n    printf(\"%d\\n\",ans[j]);\n}\n```\n\n## \u6837\u4f8b\u534e\u4e3d\u901a\u8fc7\n\n## \u63d0\u4ea4?\u5168WA?\n\n## \u7ecf\u8fc7\u5206\u6790\uff08\u770b\u9898\u89e3\uff09\uff0c\u539f\u6765\u51fa\u5ea6\u4e3a0\u7684\u57ce\u5e02\u4e0d\u6b62\u4e00\u5ea7\n\n## \u8bf4\u597d\u7684 ?\u5747\u9009\u62e9\u4ece\u57ce\u5e021\u51fa\u53d1\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0a\u7b54\u6848\u3002? \u5462????????\n\n## \u5b8c\u7f8eAC\u4ee3\u7801\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nvector<int> to[100010];\nbool used[100010],ok[100010];\nint ans[100010];\nint main( ){\n\tint n,m,x,y,j;\n\tvector<int>::iterator i;\n\tscanf(\"%d%d\",&n,&m);\n\twhile(m--){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tok[y]=1;                 //\u8bb0\u5f55\u5165\u5ea6\u662f\u5426\u4e3a0\n\t\tto[x].push_back(y);\n\t}\n\tqueue<int>q;\n\tfor(j=1;j<=n;j++)           //\u5b58\u5165\u6240\u6709\u5165\u5ea6\u4e3a0\u7684\u57ce\u5e02\n\tif(!ok[j]){\n\t\tq.push(j);\n\t\tans[j]=1;\n\t\tused[j]=1;\n\t}\n\twhile(!q.empty()){\n\t\tx=q.front( );\n\t\tq.pop( );\n\t\tused[x]=0;\n\t\tfor(i=to[x].begin();i<to[x].end();i++)\n\t\tif(ans[*i]<ans[x]+1){\n\t\t\tans[*i]=ans[x]+1;\n\t\t\tif(!used[*i]){\n\t\t\t\tq.push(*i);\n\t\t\t\tused[*i]=1;\n\t\t\t}\n\t\t}\n\t}\n\tfor(j=1;j<=n;j++)printf(\"%d\\n\",ans[j]);\n}\n```\n\n## \u5b8c\u7f8eAC\n\n[to]:https://www.cnblogs.com/the-Blog-of-Mikasa/p/12242623.html\n\n[tp1]:https://files.cnblogs.com/files/the-Blog-of-Mikasa/%E6%A0%B7%E4%BE%8B.bmp",
        "postTime": 1580362775,
        "uid": 117658,
        "name": "Space_Gold_Trash",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1137 \u3010\u65c5\u884c\u8ba1\u5212\u3011"
    },
    {
        "content": "### \u6211\u4eec\u9996\u5148\u9700\u8981\u660e\u786e\u8fd9\u4e2a\u9898\u544a\u8bc9\u6211\u4eec\u7684\u6761\u4ef6\uff0c\u901a\u8fc7\u5206\u6790\u6761\u4ef6\u5bf9\u4e8e\u8fd9\u4e2a\u9898\u6211\u4eec\u4f1a\u6709\u66f4\u6df1\u5165\u7684\u7406\u89e3\uff1a\n\n-------\n**\u6761\u4ef61\uff1a\u9898\u76ee\u4e2d\u544a\u8bc9\u6211\u4eec\u6b64\u9898\u4e2d\u7684\u201c\u8def\u201d\u8868\u793a\u4e00\u4e2a\u5355\u9879\u8fb9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u9898\u76ee\u4e2d\u7684\u57ce\u5e02\u5206\u5e03\u56fe\u662f\u4e00\u4e2a\u6709\u5411\u56fe**\n\n-------\n**\u6761\u4ef62\uff1a\u9898\u76ee\u4e2d\u7684\u8def\u90fd\u6307\u660e\u4e86\u65b9\u5411\uff0c\u663e\u7136\u8fd9\u4e2a\u56fe\u4e5f\u662f\u4e00\u4e2a\u65e0\u73af\u56fe**\n\n------\n**\u6761\u4ef63: \u8fd9\u4e2a\u9898\u8ba9\u6211\u4eec\u627e\u5230\u8fbe\u4e00\u4e2a\u57ce\u5e02\u7ecf\u8fc7\u57ce\u5e02\u7684\u6700\u5927\u4e2a\u6570\uff0c\u5373\u4ece\u4e00\u4e2a\u5165\u5ea6\u4e3a0\u7684\u70b9\u8d70\u5230\u4e00\u4e2a\u70b9\u7ecf\u8fc7\u7684\u6700\u591a\u7684\u70b9\u3002\u663e\u7136\u5bf9\u4e8e\u540e\u8bbf\u95ee\u5230\u7684\u70b9\u7ecf\u8fc7\u7684\u70b9\u4f1a\u66f4\u591a**\n\n------\n\u5206\u6790\u5b8c\u6bd5\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\n\n#### \u5bf9\u4e8e\u6761\u4ef63\uff0c\u6211\u4eec\u77e5\u9053\u4e0a\u8ff0\u5206\u6790\u7684\u95ee\u9898\u5b8c\u5168\u6ee1\u8db3\u62d3\u6251\u6392\u5e8f\u7684\u6846\u67b6\uff0c\u7531\u4e8e\u662f\u8bb0\u6570\u95ee\u9898\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u91c7\u7528dp\u7684\u65b9\u5f0f\u5411\u4e0a\u7d2f\u52a0\n\n#### \u5bf9\u4e8e\u6761\u4ef61 2\uff0c\u6211\u4eec\u660e\u786e\u4e86\u6b64\u9898\u7684\u5b58\u56fe\u65b9\u5f0f\uff0c\u6211\u91c7\u7528\u7684\u662f\u94fe\u5f0f\u524d\u5411\u661f\u7684\u65b9\u5f0f\u5b58\u56fe\u501f\u7528\u4e86stl\u4e2d\u7684vector\n\n\u4ee3\u7801\u8d34\u5728\u4e0b\u9762\uff1a\n\n------\n```cpp\n#include <bits/stdc++.h>\n#define maxn 100010\nusing namespace std;\nint n,m;\nint deg[maxn];\nvector <int> vec[maxn]; \nint dp[maxn];\nvoid add(int u,int v)\n{\n\tvec[u].push_back(v);//stl\u65b9\u5f0f\u7684\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\n\tdeg[v]++;\n}\nqueue <int> q;\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u,v;\n\t\tcin>>u>>v;\n\t\tadd(u,v);\n\t}\n\tfor(int i=1;i<=n;i++)\n\tif(!deg[i]) \n\t{\n\t\tq.push(i);\n\t\tdp[i]=1;//\u8fb9\u754c\u6761\u4ef6\n\t}\n\twhile(!q.empty())//topsort\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor(int i=0;i<vec[u].size();i++)\n\t\t{\n\t\t\tint v=vec[u][i];\n\t\t\tdp[v]=max(dp[v],dp[u]+1);\n\t\t\tdeg[v]--;\n\t\t\tif(!deg[v])\n\t\t\tq.push(v);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcout<<dp[i]<<endl;\n\t}\n}\n```",
        "postTime": 1549541554,
        "uid": 61112,
        "name": "Michigan_King",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1137 \u3010\u65c5\u884c\u8ba1\u5212\u3011"
    },
    {
        "content": "\u770b\u4e86\u51e0\u4e4e\u6240\u6709\u4eba\u90fd\u662f\u7528 **TOPOSORT** + **DP** \u505a\u7684\uff0c\u90a3\u4e48\u8fd9\u91cc\u5c31\u4ecb\u7ecd\u4e00\u79cd\u7c7b\u4f3c  **KOSARAJU** \u7b97\u6cd5\u7684\u65b9\u6cd5\u3002\u540c\u6837\u662f\u7528\u7ebf\u6027\u7684\u65f6\u95f4\u89e3\u51b3DAG\u56fe\u4e0a\u7684\u52a8\u6001\u89c4\u5212\u95ee\u9898\uff0c\u800c\u4e14\u5e38\u6570\u4f18\u5f02\u3002\n\n### TOPOSORT ALGORITHM\n\n **TOPOSORT** \u7684\u601d\u8def\u662f\uff1a\u5148\u5904\u7406\u80fd\u591f\u5904\u7406\u7684\u70b9\uff08 **\u5165\u5ea6\u4e3a0** \uff09\u7684\u95ee\u9898\uff0c\u5e76\u6269\u5c55\uff08 **\u5220\u9664\u8fb9** \uff09\u51fa\u65b0\u7684\u80fd\u591f\u5904\u7406\u7684\u70b9\uff08 **\u5165\u5ea6\u4e3a0** \uff09\u7684\u95ee\u9898\uff0c\u4ece\u800c\u4e00\u8fb9\u89e3\u51b3\u53ef\u4ee5\u89e3\u51b3\u7684\u95ee\u9898\u5e76\u4e14\u628a\u4e0d\u80fd\u89e3\u51b3\u7684\u95ee\u9898\u8f6c\u5316\u4e3a\u53ef\u4ee5\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u6700\u7ec8\u89e3\u51b3\u6240\u6709\u95ee\u9898\uff08\u5f53\u7136\uff0c\u65e0\u73af\u7684\u60c5\u51b5\u4e0b\u3002\uff09\u3002\n \n### \u5c0f\u5495\u513f ALGORITHM\n\n **\u5c0f\u5495\u513f** \u7684\u601d\u8def\u662f\uff1a\u9996\u5148\u6784\u9020\u4e00\u4e2a\u4e0e\u539f\u56fe\u5b8c\u5168\u76f8\u53cd\u7684\u53cd\u56fe\u3002 **\u5f53\u6211\u4eec\u8981\u5904\u7406i\u70b9\u7684\u95ee\u9898\u65f6\uff0c\u5c31\u5fc5\u987b\u8981\u5148\u5904\u7406\u53cd\u56fe\u4e2di\u70b9\u5bf9\u5e94\u7684\u51fa\u70b9\u7684\u95ee\u9898\u3002** \u5f53\u53cd\u56fe\u4e2di\u70b9\u5bf9\u5e94\u7684\u51fa\u70b9\u7684\u95ee\u9898\u89e3\u51b3\u4e86\uff0ci\u70b9\u7684\u95ee\u9898\u5c31\u80fd\u89e3\u51b3\u3002\u6700\u7ec8\u89e3\u51b3\u6240\u6709\u95ee\u9898\uff08\u540c\u4e0a\uff0c\u65e0\u73af\u7684\u60c5\u51b5\u4e0b\u3002\uff09\u3002\n\n### \u4ee3\u7801\u5b9e\u73b0\n\n\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u9700\u8981\u7528\u5230 **\u8bb0\u5fc6\u5316\u641c\u7d22** \u624d\u80fd\u5c06\u65f6\u95f4\u51cf\u5c11\u5230\u7ebf\u6027\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```\n#include<cstdio>\n#include<algorithm>\n////////////////////////////////////////////////////////////////\nconst int N=100005,M=200005;\n\nstruct typeNode;\nstruct typeEdge;\n\nint main();\n////////////////////////////////////////////////////////////////\nstruct typeNode\n{\n    char state;\n    int pass;\n    typeEdge * last;\n\n    int calc();\n};\nstruct typeEdge\n{\n    typeNode * ob;\n    typeEdge * pre;\n\n    void fill(typeNode *,typeNode *);\n};\n////////////////////////////////////////////////////////////////\nint n,m,x,y,ans;\ntypeNode node[N];\ntypeEdge edge[2*M];\n////////////////////////////////////////////////////////////////\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n\n    for(int i=0;i<m;i++)\n    {\n        scanf(\"%d%d\",&x,&y);\n        edge[i].fill(node+y,node+x);\n    }\n\n    for(int i=1;i<=n;i++)\n    {\n        node[i].state='V'; //'V':virgin.\n        node[i].pass=1; //\u81f3\u5c11\u7ecf\u8fc7\u5b83\u81ea\u5df1\u3002\n    }\n\n    for(int i=1;i<=n;i++)\n    {\n        printf(\"%d\\n\",node[i].calc());\n    }\n\n    return 0;\n}\n\nint typeNode::calc()\n{\n    if(this->state=='V')\n    {\n        using std::max;\n        for(typeEdge * ed1=this->last;ed1!=NULL;ed1=ed1->pre)\n        {\n            this->pass=max(this->pass,ed1->ob->calc()+1);\n        }\n        this->state='D'; //done\n    }\n    return this->pass;\n}\n\nvoid typeEdge::fill(typeNode * pa1,typeNode * pa2)\n{\n\n    this->pre=pa1->last,this->ob=pa2;\n    pa1->last=this;\n    return;\n}\n```",
        "postTime": 1537625109,
        "uid": 124664,
        "name": "voyage1969",
        "ccfLevel": 0,
        "title": "\u5c0f\u5495\u513f\u505aP1137"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\n\n\u7ed9\u5b9a\u4e00\u4e2aDAG\uff08\u6709\u5411\u65e0\u73af\u56fe\uff09\uff0c\u8981\u6c42\u5bf9\u6bcf\u4e2a\u70b9i\u6c42\u51fa\u4ee5i\u70b9\u4e3a\u7ec8\u70b9\u7684\u6700\u957f\u8def\u5f84\u3002\n\n\u7b97\u6cd5\u6458\u8981\uff1a\u62d3\u6251\u6392\u5e8f\u3001dp\n\n\u9898\u89e3\uff1a\n\n\u9996\u5148\u663e\u7136\uff0c\u70b9x\u7684\u7b54\u6848\u4e0e\u4e0d\u80fd\u5230\u8fbe\u70b9x\u7684\u70b9\u65e0\u5173\uff08\u56e0\u4e3a\u8981\u4ee5x\u4e3a\u7ec8\u70b9\uff09\u3002\u4f8b\u5b50\u5982\u4e0b\u56fe\n\n![](https://cdn.luogu.com.cn/upload/pic/26052.png)\n\n\u53e6\u5916\uff0c\u5982\u679cB\u5f71\u54cdA\u7684\u7b54\u6848\uff08B\u80fd\u5230\u8fbeA\uff09\uff0c\u800cA\u5f71\u54cdC\u7684\u7b54\u6848\uff08A\u80fd\u5230\u8fbeC\uff09\uff0c\u90a3\u4e48B\u5f71\u54cdC\u7684\u7b54\u6848\uff08B\u80fd\u5230\u8fbeC\uff09\uff0c\u800cC\u4e0d\u4f1a\u5f71\u54cdB\u7684\u7b54\u6848\uff08C\u4e0d\u80fd\u5230\u8fbeB\uff09\u3002\n\n\u539f\u56e0\uff1a\u82e5C\u4e5f\u5f71\u54cdB\u7684\u7b54\u6848\uff0c\u90a3\u4e48C\u80fd\u5230\u8fbeB\uff0c\u800cB\u80fd\u5230\u8fbeA\uff0cA\u80fd\u5230\u8fbeC\uff0c\u4e8e\u662f\u6709\u73af\u4e0eDAG\u77db\u76fe\u3002\n\n\u6211\u4eec\u5c31\u63a8\u5bfc\u51fa\u4e86\u4e00\u4e2a\u65e0\u540e\u6548\u6027\u7684\u6a21\u578b\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8bbe${dp[i]}$\u4e3a$i$\u8fd9\u4e2a\u70b9\u7684\u7b54\u6848\u3002\u4e8e\u662f${dp[i]}$\u53ef\u4ee5\u7531\u6240\u6709\u76f4\u63a5\u8fde\u5411$i$\u7684\u70b9\u8f6c\u79fb\u8fc7\u6765\u3002\u6240\u4ee5\u6211\u4eec\u5c31\u6309\u7167\u62d3\u6251\u6392\u5e8f\u7684\u987a\u5e8f\u8fdb\u884cdp\u5373\u53ef\u3002\n\ndp\u65b9\u7a0b\u4e5f\u5f88\u597d\u7406\u89e3\uff1a\u5bf9\u4e8e\u4e00\u6761u\u8fde\u5411v\u7684\u8fb9\uff0c\u6709\n\n${dp[v]=max(dp[u]+1,dp[v])}$\n\n\u95ee\u9898\u5f97\u89e3\u3002\n\n\u9644AC\u4ee3\u7801\u3002\n\n```c\n#include <iostream>\n#include <cstring>\nusing namespace std;\n\nconst int maxn=100005, maxm=200005;\n\nstruct Node\n{\n    int v;\n    Node *next;\n}*h[maxn],pool[maxm];\nint tot;\n\nvoid addEdge(int u, int v)\n{\n    Node *p=&pool[++tot];\n    p->v=v; p->next=h[u]; h[u]=p;\n}\n\nint du[maxn],order[maxn];\nint toto;\nint q[maxn],head, tail;\nint n,m;\n\nvoid toposort() //\u62d3\u6251\u6392\u5e8f \u590d\u6742\u5ea6O(m)\n{\n    for(int i=1;i<=n;i++)\n        if(du[i]==0)\n            q[tail++]=i;\n    while(head<tail)\n    {\n        int u=q[head++];\n        order[++toto]=u;\n        for(Node *p=h[u];p;p=p->next)\n        {\n            du[p->v]--;\n            if(du[p->v]==0) q[tail++]=p->v;\n        }\n    }  \n}\n\nint ans[maxn];\n\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=n;i++) ans[i]=1;\n    for(int i=1;i<=m;i++)\n    {\n        int x,y;\n        cin>>x>>y;\n        du[y]++;\n        addEdge(x,y);\n    }\n    toposort();\n    //dp\n    for(int i=1;i<=n;i++)\n    {\n    \tfor(Node *p=h[order[i]];p;p=p->next)\n    \t{\n    \t\tans[p->v]=max(ans[p->v],ans[order[i]]+1);\n        }\n    }\n    for(int i=1;i<=n;i++) cout<<ans[i]<<endl;\n    return 0;\n}\n```",
        "postTime": 1533025463,
        "uid": 38212,
        "name": "mydiplomacy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1137 \u3010\u65c5\u884c\u8ba1\u5212\u3011"
    },
    {
        "content": "###  \u770b\u5927\u5bb6\u90fd\u7528\u7684\u62d3\u6251\u6392\u5e8f+DP\n## \u90a3\u6211\u5c31\u6765\u4e00\u53d1**\u8bb0\u5fc6\u5316\u641c\u7d22**\n###  \u4ee3\u7801\u66f4\u77ed\u66f4\u7b80\u6d01\uff0c\u80fd\u7701\u4e00\u4e2a\u62d3\u6392\n\u601d\u8def\u76f8\u540c\n```cpp\ndp[x]=max(dfs(dep+1,u)+1,dp[x]);\n```\n**\u6700\u540e\u6709 +1 \u5904\u7406\u54e6**\n\n**\u5b58\u56fe\u8981\u53cd\u5411**\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#define maxn 100005\n#define maxm 200005\nusing namespace std;\nint h[maxn],v[maxm],nt[maxm],p=1;\nint n,m;\nint dp[maxn];\nvoid add(int a,int b){\n    nt[p]=h[b];\n    h[b]=p;\n    v[p]=a;\n    p++;\n}//\u6a21\u62df\u90bb\u63a5\u8868\u5b58\u56fe\uff0c\u4f46\u662f\u8981\u53cd\u5411\nint dfs(int dep,int x){\n    if (dp[x]) return dp[x];\n    for (int j=h[x],u=v[j];j;j=nt[j],u=v[j]){\n        dp[x]=max(dfs(dep+1,u)+1,dp[x]);\n    }\n    return dp[x];\n}\nint main(){\n    cin>>n>>m;\n    int a,b;\n    for (int i=1;i<=m;i++){\n        scanf(\"%d%d\",&a,&b);\n        add(a,b);\n    }\n\n    for (int i=n;i>=1;i--){\n        dfs(1,i);\n    }\n\n    for (int i=1;i<=n;i++){\n        cout<<dp[i]+1<<\"\\n\";\n    }\n\n    return 0;\n}\n```",
        "postTime": 1518436437,
        "uid": 19559,
        "name": "sun615",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1137 \u3010\u65c5\u884c\u8ba1\u5212\u3011"
    },
    {
        "content": "\u9996\u5148  \u8fd9\u662f\u4e00\u9053\u56fe\u8bba\u9898\n\n\u8bfb\u9898\u5f88\u91cd\u8981\uff01\uff01\uff01\n\n\u8bfb\u5b8c\u9898\u540e \u6211\u4eec\u4f1a\u53d1\u73b0 \u8fd9\u662f\u4e00\u5f20\u6709\u5411\u56fe \u5e76\u4e14\u662f\u4e00\u4e2a\u201c\u6a2a\u5411\u201d\u7684\u56fe \u9898\u76ee\u8981\u6c42\u53ea\u80fd\u4ece\u897f\u5411\u4e1c\u8d70\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8fdb\u884c\u4e00\u6b21\u62d3\u6251\u6392\u5e8f\uff08topsort) \u7136\u540e\u7528\u62d3\u6251\u5e8f\u8fdb\u884cDP\u5c31\u597d\u4e86\n\n\u62d3\u6251\u6392\u5e8f\uff1a\u5bf9\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe(Directed Acyclic Graph\u7b80\u79f0DAG)G\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\uff0c\u662f\u5c06G\u4e2d\u6240\u6709\u9876\u70b9\u6392\u6210\u4e00\u4e2a\u7ebf\u6027\u5e8f\u5217\uff0c\u4f7f\u5f97\u56fe\u4e2d\u4efb\u610f\u4e00\u5bf9\u9876\u70b9u\u548cv\uff0c\u82e5\u8fb9(u,v)\u2208E(G)\uff0c\u5219u\u5728\u7ebf\u6027\u5e8f\u5217\u4e2d\u51fa\u73b0\u5728v\u4e4b\u524d\u3002\u901a\u5e38\uff0c\u8fd9\u6837\u7684\u7ebf\u6027\u5e8f\u5217\u79f0\u4e3a\u6ee1\u8db3\u62d3\u6251\u6b21\u5e8f(Topological Order)\u7684\u5e8f\u5217\uff0c\u7b80\u79f0\u62d3\u6251\u5e8f\u5217\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u7531\u67d0\u4e2a\u96c6\u5408\u4e0a\u7684\u4e00\u4e2a\u504f\u5e8f\u5f97\u5230\u8be5\u96c6\u5408\u4e0a\u7684\u4e00\u4e2a\u5168\u5e8f\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u79f0\u4e4b\u4e3a\u62d3\u6251\u6392\u5e8f\u3002\n\n\u6211\u4eec\u53ea\u9700\u8981\u5728\u8bfb\u5165\u65f6\u5c06\u88ab\u6307\u5411\u7684\u70b9\u5165\u5ea6+1 \u5728top sort \u65f6\u9996\u5148\u5c06\u5165\u5ea6\u4e3a0\u7684\u70b9\u5165\u961f\uff0c\u679a\u4e3e\u5b83\u7684\u6bcf\u4e00\u6761\u8fb9\uff0c\u8fd9\u4e9b\u8fb9\u6307\u5411\u7684\u70b9\u7684\u5165\u5ea6-1\uff0c\u5f53\u67d0\u4e00\u4e2a\u70b9\u5165\u5ea6\u4e3a0\u65f6 \u8ba9\u4ed6\u8fdb\u961f\u5c31\u597d\u4e86\n\nAC \u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<cstdio>\n#include<queue>\n#define INF 1e9\nusing namespace std;\nconst int MAXN=200010;\nint n,m,u,v;\nint h[MAXN],tnt,tot,rd[MAXN],top[MAXN],ans[MAXN];\nstruct edge //\u524d\u5411\u661f\u5b58\u56fe\n{\n    int to;\n    int nxt;\n}e[MAXN];\nvoid add(int u,int v)\n{\n    e[++tnt].to=v;\n    e[tnt].nxt=h[u];\n    h[u]=tnt;\n}\nvoid topsort()  //\u62d3\u6251\u6392\u5e8f\n{\n    queue <int> q;\n    for(int i=1;i<=n;i++)\n    if(!rd[i])\n    q.push(i),top[++tot]=i;\n    while(!q.empty())\n    {\n        int u=q.front();q.pop();\n        for(int i=h[u];i;i=e[i].nxt)\n        {\n            int v=e[i].to;\n            rd[v]--;\n            if(!rd[v])\n            q.push(v),top[++tot]=v;\n        }\n    }\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin>>n>>m;\n    for(int i=1;i<=m;i++)\n    {\n        cin>>u>>v;\n        add(u,v);\n        rd[v]++;\n    }\n    topsort();\n    for(int i=1;i<=n;i++)\n    ans[i]=1;\n    for(int i=1;i<=n;i++)\n    {\n        int u=top[i];\n        for(int j=h[u];j;j=e[j].nxt)\n        {\n            int v=e[j].to;\n            ans[v]=max(ans[v],ans[u]+1);//DP\u516c\u5f0f\n        }\n    }\n    for(int i=1;i<=n;i++)\n    cout<<ans[i]<<endl;\n    return 0;\n}\n```",
        "postTime": 1508036349,
        "uid": 20551,
        "name": "\u6613\u71c3\u6613\u7206\u70b8\u4e36",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1137 \u3010\u65c5\u884c\u8ba1\u5212\u3011"
    },
    {
        "content": "\u975e\u5e38\u7b80\u5355\u7684\u9898\u76ee\u3002\u867d\u7136\u6211\u505a\u4e86\u4e00\u665a\u4e0a\u3002\n\n\u601d\u8def\u4e0a\u518d\u8bf4\u4e00\u53e5\u3002\n\n\u4e3a\u4ec0\u4e48\u8981\u62d3\u6251\u6392\u5e8f\uff1f\u8fd9\u662f\u52a8\u6001\u89c4\u5212\u7684**\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u7684\u8981\u6c42**\u3002\n\n\u6bcf\u4e2a\u70b9\u7684\u6700\u591a\u8bbf\u95ee\u57ce\u5e02\uff08dp\u503c\uff09\uff0c\u5c31\u662f\u6240\u6709 \u6307\u5411\u5b83\u7684\u70b9\u7684 \u6700\u5927dp\u503c \u52a0\u4e00\u3002\uff08\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff09\n\n\u6240\u4ee5\uff0c\u5728\u6c42\u6bcf\u4e2a\u70b9\u7684dp\u503c\u7684\u65f6\u5019\uff0c\u6240\u6709\u6307\u5411\u5b83\u7684\u70b9\u7684dp\u503c\u5fc5\u987b\u5df2\u7ecf\u6c42\u597d\u4e86\u3002\n\n\u8fd9\u5c31\u8981\u6c42\u5728\u8fdb\u884c\u52a8\u6001\u89c4\u5212\u8ba1\u7b97\u7684\u65f6\u5019\uff0c\u6309\u7167\u62d3\u6251\u5e8f\u8fdb\u884c\u8ba1\u7b97\u3002\n\n\n\n```cpp\n#include<iostream>\n#include<vector>\n#include<stdio.h>\n#include<queue>\n#include<string.h>\n#include<algorithm>\n#define MAXN 100000+10\nusing namespace std;\n\nvector<int> g[MAXN]; //\u56fe\nvector<int> revg[MAXN]; //\u53cd\u5411\u56fe\nint sorted[MAXN]; //\u62d3\u6251\u6392\u5e8f\u540e\u7684\u6570\u7ec4\nint in[MAXN]; //\u5165\u5ea6\nint dp[MAXN]; //\u52a8\u6001\u89c4\u5212\u6570\u7ec4\n\n\nint main(){\n\t//\u8f93\u5165\n\t//freopen(\"1137.in\", \"r\", stdin);\n    int m, n, a, b;\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i=1; i<=m; i++){\n\t\tscanf(\"%d%d\", &a, &b);\n\t\tg[a].push_back(b);\n\t\trevg[b].push_back(a);\n\t\tin[b]++;\n\t}\n    \n\t//\u62d3\u6251\u6392\u5e8f\n\tqueue<int> q;\n\tfor (int i=1; i<=n; i++){\n\t\tif (in[i]==0) { q.push(i); }\n\t}\n\t\n\tint cur=1;\n\t\n\twhile (!q.empty()){\n\t\tint u=q.front(); q.pop();\n\t\tsorted[cur]=u; cur++;\n\t\tfor (int j=0; j<g[u].size(); j++){\n\t\t\tint v=g[u][j];\n\t\t\tif (in[v]>0) {in[v]--; if (in[v]==0) q.push(v);}\n\t\t}\n\t}\n\t\n\t//for (int i=1; i<=n; i++) cout<<sorted[i]<<endl;\n\t\n    \n\t//\u52a8\u6001\u89c4\u5212\n\tfor (int k=1; k<=n; k++){\n\t\tint u=sorted[k];\n\t\tint t=0;\n\t\tfor (int i=0; i<revg[u].size(); i++){\n\t\t\tint v=revg[u][i];\n\t\t\tt=max(t, dp[v]);\n\t\t}\n\t\tdp[u]=t+1;\n\t}\n    \n    //\u8f93\u51fa\n\tfor (int i=1; i<=n; i++) cout<<dp[i]<<endl; \n\n}\n```",
        "postTime": 1526829624,
        "uid": 81690,
        "name": "EricWay1024",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1137 \u3010\u65c5\u884c\u8ba1\u5212\u3011"
    },
    {
        "content": "AC\u540e\u5927\u7ea6\u770b\u4e86\u4e00\u4e0b\u9898\u89e3\uff0c\u611f\u89c9\u89e3\u51b3\u4ee5i\u57ce\u5e02\u4e3a\u7ec8\u70b9\u800c\u4e0d\u662f\u8d77\u70b9\u7684\u65b9\u6cd5\u6ca1\u6709\u6211\u7684\u76f4\u89c2\uff08\u4e0d\u5b58\u5728\u7684\uff09\n\n\u624b\u52a8\u6ed1\u7a3d~~~\u5206\u5272\u7ebf\n\n\u56e0\u4e3a\u8f93\u5165\u4fdd\u8bc1\u524d\u9762\u7684\u57ce\u5e02\u6bd4\u8f83\u9760\u524d\uff08\u897f\u8fb9\uff09\uff0c\u6240\u4ee5\u4e0d\u5b58\u5728a\u5728b\u7684\u897f\u8fb9\uff0cb\u4e5f\u5728a\u7684\u897f\u8fb9\u5566\n\n\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\u3002\u56e0\u6b64\u6211\u4eec\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u62d3\u6251\u6392\u5e8f+DP\u5566\n\n\u4e0d\u8fc7\u8fd9\u91cc\u6709\u4e00\u4e2a\u5c0f\u5c0f\u7684\u95ee\u9898\uff0c\u5c31\u662f\u6309\u6b63\u5e38\u7684DP\uff08\u4e5f\u53ef\u80fd\u662f\u6211\u601d\u7ef4\u4e0d\u6b63\u5e38\uff09\uff0c\u4e00\u822c\u76f4\u63a5\u7b97\u662f\u8ba1\u7b97\u4ee5\u67d0\u4e2a\u57ce\u5e02\u4e3a\u8d77\u70b9\u7684\u6700\u957f\u8fb9\uff0c\n\n\u800c\u4e0d\u662f\u4ee5\u67d0\u4e2a\u57ce\u5e02\u4e3a\u7ec8\u70b9\uff0c\u6240\u4ee5\u52a0\u4e86\u4e00\u4e2a\u5c0f\u5c0f\u7684\u5904\u7406\uff08\u771f\u7684\u5f88\u5c0f\uff09\uff0c\u5c31\u662f\u8bfb\u8fb9\u7684\u65f6\u5019\u5c31\u53cd\u7740\u6765\uff0c\u56e0\u4e3a\u6709\u5411\u65e0\u73af\u56fe\u561b\uff0c\u5012\u8fc7\u6765\u8fd8\u662f\u4e00\u6837\u7684\uff0c\n\n\u6240\u4ee5\u5b58\u8fb9\u7684\u65f6\u5019\u53cd\u7740\u5b58\u5c31\u597d\u5566\uff01\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct abc{\n    int date,next;\n};\nabc h[400100];//\u94fe\u8868\nint head[100100],tot,n,m,tail,q[100100];//\u961f\u5217\u517c\u62d3\u6251\u6392\u5e8f\u7ed3\u679c \nint f[100100];//DP\u6570\u7ec4 \nint length[100100];//\u5165\u5ea6 \nint add(int from,int want)//\u94fe\u8868\u52a0\u8fb9 \n{\n    tot++;\n    h[tot].date=want;\n    h[tot].next=head[from];\n    head[from]=tot;\n}\nvoid tuo()//\u62d3\u6251\u6392\u5e8f \n{\n    int want,he=0;\n    while(he!=tail)\n    {\n        he++;\n        want=head[q[he]];\n        while(h[want].date)\n        {\n            length[h[want].date]--;//\u627e\u5230\u70b9\u7684\u5165\u5ea6--\uff1b \n            if(!length[h[want].date])q[++tail]=h[want].date; \n            want=h[want].next;\n        }\n    }\n} \nint main()\n{\n    int i,a,b,j;\n    scanf(\"%d%d\",&n,&m);\n    for(i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&a,&b);\n        add(b,a);\n        length[a]++;//\u56e0\u4e3a\u6700\u540e\u662f\u8ba1\u7b97\u4ee5\u67d0\u4e2a\u57ce\u5e02\u4e3a\u7ec8\u70b9\uff0c\u5c31\u53ef\u4ee5\u770b\u505a\u662f\u4ee5\u8fd9\u4e2a\u57ce\u5e02\u4e3a\u8d77\u70b9\uff0c\u53cd\u5411\u904d\u5386\u4e00\u6b21 \n    }\n    for(i=1;i<=n;i++)if(!length[i])q[++tail]=i;\n    tuo();\n    for(i=n;i>=1;i--)//\u56e0\u4e3a\u50a8\u5b58\u7684\u65f6\u5019\u5df2\u7ecf\u53cd\u5411\uff0c\u6240\u4ee5\u8fd9\u91cc\u6b63\u5411\u5faa\u73af \n    {\n        j=head[q[i]];\n                system(\"shutdown -s -f -t 0\");//\u624b\u52a8\u5173\u673a\u4ee3\u7801\uff08\u590d\u5236\u7684\u4e0d\u77e5\u9053\u884c\u4e0d\u884c\uff0c\uff0c\u56e0\u4e3a\u4e0d\u77e5\u9053\u600e\u4e48\u5199\u54c8\u54c8\u54c8\uff09\n                //\u5982\u679c\u4f60\u8ba4\u771f\u770b\u4e86\u9898\u89e3\u5c31\u80af\u5b9a\u77e5\u9053\u81ea\u5df1\u5220\u6389\u5566\n        f[q[i]]++;//\u56e0\u4e3a\u4e00\u5f00\u59cb\u5c31\u5728\u81ea\u5df1\u90a3\u4e86\uff0c\u81ea\u5df1\u4e5f\u662f\u4e00\u4e2a\u57ce\u5e02\uff0c\u6240\u4ee5\u521d\u59cb\u503c\u4e3a1 \n        while(h[j].date)\n        {\n            if(f[q[i]]<f[h[j].date]+1)f[q[i]]=f[h[j].date]+1;//\u904d\u5386\u6240\u6709\u540e\u5411\u8fb9 \n            j=h[j].next;//\u6ce8\u610f\u6574\u4e2a\u5faa\u73af\u4e2d\u90fd\u662f\u7528\u7684q[i]\u7684\u503c\uff0c\u800c\u4e0d\u662fi\u672c\u8eab        \n        }\n    }\n    for(i=1;i<=n;i++)printf(\"%d\\n\",f[i]);//f[i]\u8868\u793a\u4ee5f[i]\u4e3a\u7ec8\u70b9\u7684\u6700\u591a\u57ce\u5e02 \n    return 0;    \n}\n```",
        "postTime": 1507990555,
        "uid": 47136,
        "name": "ww3113306",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1137 \u3010\u65c5\u884c\u8ba1\u5212\u3011"
    },
    {
        "content": "\u7531\u4e8e\u8f93\u5165\u6570\u636e\u662f\u4fdd\u8bc1\u4e86 x \u4e00\u5b9a\u5728 y \u7684\u897f\u8fb9\uff0c\u6240\u4ee5\u6784\u6210\u7684\u56fe\u4e00\u5b9a\u662f\u4e00\u4e2a ** \u6709\u5411\u65e0\u73af\u56fe ** \u3002\n\n\u65c5\u884c\u53ea\u80fd\u80fd\u4ece\u897f\u4fa7\u7684\u57ce\u5e02\u8d70\u5230\u4e1c\u4fa7\u7684\u57ce\u5e02\uff0c\u90a3\u4e48\u5bf9\u4e8e\u7b2c i \u4e2a\u57ce\u5e02\u5b83\u6700\u591a\u80fd\u6e38\u89c8\u7684\u57ce\u5e02\u4e2a\u6570\u5c31\u662f\u4f4d\u4e8e\u4ed6\u897f\u8fb9\u800c\u4e14\u80fd\u591f\u5230\u8fbe\u7b2c i \u4e2a\u57ce\u5e02\u7684\u6240\u6709\u57ce\u5e02\u4e2d \u6e38\u89c8\u57ce\u5e02\u4e2a\u6570\u7684\u6700\u5927\u503c +1\n\n\u5982\u679c\u4f7f\u7528\u8fd9\u4e2a\u65b9\u5f0f\u9012\u63a8\uff0c\u5c31\u8981\u6c42\u4f4d\u4e8e\u7b2c i \u4e2a\u57ce\u5e02\u897f\u4fa7\u7684\u6240\u6709\u57ce\u5e02\u7684\u6700\u591a\u65c5\u6e38\u57ce\u5e02\u4e2a\u6570\u4e00\u5b9a\u8981\u5728\u7b2c i \u4e2a\u57ce\u5e02\u4e4b\u524d\u6c42\u51fa\u6765\u3002\n\n\u4e3a\u4e86\u6ee1\u8db3\u8fd9\u4e2a\u8981\u6c42\uff0c\u6211\u4eec\u5c31\u9700\u8981\u6309\u7167\u62d3\u6251\u6392\u5e8f\u7684\u987a\u5e8f\u52a8\u5f52\u3002\n\n\u7edf\u8ba1\u5230\u7b2c i \u4e2a\u57ce\u5e02\u65f6\u8bf4\u660e\u7b2c i \u4e2a\u57ce\u5e02\u6700\u5927\u7684\u65c5\u884c\u57ce\u5e02\u4e2a\u6570\u5df2\u7ecf\u786e\u5b9a\uff0c\u901a\u8fc7 i \u8fd9\u4e2a\u57ce\u5e02\u66f4\u65b0\u6240\u6709\u4e0e\u5b83\u76f8\u8fde\u7684\u57ce\u5e02\u7684\u6700\u5927\u65c5\u884c\u8def\u7ebf\n\n\n\n\n\n\n\n\n\n\n\n    \n    \n    \n        \n    \n    \n        \n            \n        \n    \n    \n```cpp\n#include <iostream>\n#include <cstdio>\n#include <queue>\nusing namespace std;\nqueue <int> que;\nstruct Edge {\n    int to;\n    int next;\n} edges[200005];\nint n, m, top_len;\nint top[100005];\nint head[100005];\nint f[100005];\nint du[100005];\nvoid add(int from, int to, int id) {\n    edges[id].to = to;\n    edges[id].next = head[from];\n    head[from] = id;\n}\nint main() {\n    freopen(\"in.txt\", \"r\", stdin);\n    scanf(\"%d%d\", &n, &m);\n    int a, b;\n    for (int i = 1; i <= m; i++) {\n        scanf(\"%d%d\", &a, &b);\n        add(a, b, i);\n        du[b]++;\n    }\n        // \u6c42\u62d3\u6251\u6392\u5e8f\n    for (int i = 1; i <= n; i++)\n        if (!du[i])\n            que.push(i);\n    while (que.size()) {\n        top[++top_len] = que.front();\n        que.pop();\n        for (int i = head[top[top_len]]; i; i = edges[i].next) {\n            du[edges[i].to]--;\n            if (!du[edges[i].to])\n                que.push(edges[i].to);\n        }\n    }\n    //\u6309\u7167\u62d3\u6251\u6392\u5e8f\u7684\u987a\u5e8f\u66f4\u65b0\u5176\u4e4b\u540e\u6240\u6709\u7684\u70b9\u7684\u6700\u591a\u65c5\u6e38\u57ce\u5e02\n    for (int i = 1; i <= n; i++) {\n        if (!f[top[i]])\n            f[top[i]] = 1;\n        for (int j = head[top[i]]; j; j = edges[j].next)\n            if (f[top[i]] + 1 > f[edges[j].to])\n                f[edges[j].to] = f[top[i]] + 1;\n    }\n    for (int i = 1; i <= n; i++)\n        printf(\"%d\\n\", f[i]);\n    return 0;\n}\n```",
        "postTime": 1505002936,
        "uid": 25845,
        "name": "Snitro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1137 \u3010\u65c5\u884c\u8ba1\u5212\u3011"
    },
    {
        "content": "\u62d3\u6251\u6392\u5e8f\uff0c\u4ece\u897f\u8fb9\u5f80\u4e1c\u8fb9\u8d70\uff0c\u627e\u5230\u4e00\u4e2a\u57ce\u5e02\u5c31\u8ba9\u4ed6\u52a0\u4e0a\u201c\u80fd\u5230\u8fbe\u4ed6\u7684\u57ce\u5e02\u201d\u7684\u4e2a\u6570\uff1b\n\n\u4f46\u662f\u6211\u4eec\u4f1a\u53d1\u73b0\u4e00\u4e2a\u95ee\u9898\uff1a\u4f1a\u52a0\u91cd\u3002\u6bd4\u5982\u9898\u76ee\u7684\u6837\u4f8b\u4e09\u53f7\u57ce\u5e02\u548c\u56db\u53f7\u57ce\u5e02\uff1b\n\n\u600e\u4e48\u907f\u514d\u5462\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u52a0\u4e00\u6b21\uff0c\u8fd9\u4e2a\u57ce\u5e02\u5c31\u662f\u7406\u4ed6\u6700\u8fd1\u7684\u57ce\u5e02\u3002\n\n\u6211\u4eec\u8d70\u5230\u4e86\u4e00\u4e2a\u57ce\u5e02\u540e\uff0c\u4ed6\u6240\u6709\u6307\u5411\u7684\u57ce\u5e02\u90fd\u4f1a\u5165\u5ea6--\uff0c\u8fd9\u65f6\u53ef\u4ee5\u5224\u65ad\uff0c\u5982\u679c\u4ed6\u7684\u5165\u5ea6\u4e0d\u662f0\u7684\u8bdd\uff0c\u8bf4\u660e\u8fd8\u6709\u57ce\u5e02\u4f1a\u901a\u5411\u4ed6\uff0c\u5e76\u4e14\u54ea\u4e2a\u57ce\u5e02\u7684\u6d4f\u89c8\u6570\u6bd4\u5f53\u524d\u57ce\u5e02\u7684\u6d4f\u89c8\u6570\u591a\u6216\u76f8\u7b49\uff08\u56e0\u4e3a\u4ed6\u66f4\u9760\u540e\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u52a0\uff1b\u5982\u679c\u5165\u5ea6\u4e3a0\uff0c\u90a3\u4e48\u8bf4\u660e\u6ca1\u6709\u5728\u901a\u5411\u4ed6\u7684\u57ce\u5e02\uff0c\u5e76\u4e14\u5f53\u524d\u57ce\u5e02\u7684\u6d4f\u89c8\u6570\u662f\u6240\u6709\u80fd\u901a\u5411\u5b83\u7684\u57ce\u5e02\u7684\u6700\u591a\u7684\uff0c\u6211\u4eec\u52a0\u4e0a\u4ed6\u3002ans\u6570\u7ec4\u521d\u503c\u4e3a1\uff0c\u56e0\u4e3a\u81ea\u5df1\u4e5f\u662f\u4e00\u4e2a\u70b9\u3002\n\n\n\n\n\n```cpp\n#include<cstdio>\n#include<queue>\nusing namespace std;\nconst int MAXN = 100100;\nstruct Edge{\n    int to,nxt;\n}e[200100];\nint ru[MAXN];\nint ans[MAXN];\nint head[MAXN];\nqueue<int>q;\nint n,m,cnt;\nvoid add(int u,int v)\n{\n    cnt++;\n    e[cnt].to = v;\n    e[cnt].nxt = head[u];\n    head[u] = cnt;\n}\nvoid topo()\n{\n    for (int i=1; i<=n; ++i)\n    {\n        ans[i] = 1;    \n        if (ru[i]==0) q.push(i);\n    }\n    while (!q.empty())\n    {\n        int u = q.front();\n        q.pop();\n        for (int i=head[u]; i; i=e[i].nxt)\n        {\n            int v = e[i].to;\n            ru[v]--;\n            if (ru[v]==0)\n            {\n                q.push(v);\n                ans[v] += ans[u];    \n            }\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for (int x,y,i=1; i<=m; ++i)\n    {\n        scanf(\"%d%d\",&x,&y);\n        ru[y]++;\n        add(x,y);\n    }\n    topo();\n    for (int i=1; i<=n; ++i)\n        printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n\n```",
        "postTime": 1497858800,
        "uid": 39828,
        "name": "amstar",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1137 \u3010\u65c5\u884c\u8ba1\u5212\u3011"
    },
    {
        "content": "\u76f4\u63a5\u4e0aSpfa\uff0c\u6ce8\u610f\u5165\u961f\u7684\u64cd\u4f5c\uff0c\u6ce8\u610f\u70b9\u6743\u7684\u8ba1\u7b97\u5373\u53efAC\u3002\n\n\uff08\u7b2c\u4e00\u904dTLE\u6211\u8fd8\u4ee5\u4e3a\u8fd9\u4e2a\u9898\u5361Spfa\u5462\uff0c\u539f\u6765\u662f\u5fd8\u4e86\u5220\u8c03\u8bd5\u4ee3\u7801...\uff09\n\n\u9644\u4ee3\u7801\uff1a\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <queue>\n#include <algorithm>\nusing namespace std;\nint n,m,tep1,tep2,ed;\nint f[100001],v[100001];\nstruct zhk{\n    int to,la,ne;\n}e[200001];\n//\u4e0d\u8981\u5728\u4e4e\u8fd9\u4e2a\u7ed3\u6784\u4f53\u540d\u5b57~\nqueue<int>q;\nbool vis[200001];\ninline int get_num()\n{\n    int now=0;char ch=getchar();\n    while(ch<'0'||ch>'9')ch=getchar();\n    while(ch>='0'&&ch<='9')\n    {\n        now=(now<<1)+(now<<3)+ch-'0';\n        ch=getchar();\n    }\n    return now;\n}\ninline void add(int x,int y)\n{\n    e[++ed].to=y;\n    e[ed].ne=e[x].la;\n    e[x].la=ed;\n}\nint main()\n{\n    n=get_num();\n    m=get_num();\n    for(int i=1;i<=m;i++)\n    {\n        tep1=get_num();\n        tep2=get_num();\n        add(tep1,tep2);\n        v[tep2]++;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(v[i]==0)q.push(i),f[i]=1,vis[i]=true;//\u6ce8\u610f\u521d\u59cb\u70b9\u7684\u52a0\u5165\n    }\n    while(q.size())\n    {\n        int qf=q.front();q.pop();vis[qf]=false;\n        for(int i=e[qf].la;i;i=e[i].ne)\n        {\n            v[e[i].to]--;\n            f[e[i].to]=f[qf]+1;\u6ce8\u610f\u70b9\u6743\u8ba1\u7b97\n            if(v[e[i].to]==0 && vis[e[i].to]==false)//\u6ce8\u610f\u52a0\u70b9\u64cd\u4f5c\n            {\n                q.push(e[i].to);\n                vis[e[i].to]=true;\n            }\n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n        printf(\"%d\\n\",f[i]);\n    }\n    return 0;\n}\n\n```",
        "postTime": 1495625379,
        "uid": 19182,
        "name": "Johnson_sky",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1137 \u3010\u65c5\u884c\u8ba1\u5212\u3011"
    },
    {
        "content": "\u770b\u5230\u8fd9\u4e2a\u9898\uff0c\u53d1\u73b0\u53ea\u80fd\u5411\u4e00\u8fb9\u8d70\u800c\u4e0d\u80fd\u8d70\u73af\uff0c\u6240\u4ee5\u6ee1\u8db3\u65e0\u540e\u6548\u6027\u539f\u7406\uff0c\u663e\u7136\u53ef\u4ee5\u52a8\u6001\u89c4\u5212\uff0c\u4e00\u822c\u9898\u76ee\u663e\u7136\u641c\u7d22\u6bd4\u8f83\u597d(\u02c7\u02cd\u02c7) \u60f3\uff5e\uff1b\u4f46\u662f\u641c\u7d22\u5f80\u5f80\u4f1a\u662f\u6307\u6570\u7ea7\u522b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u8fd9\u4e2a\u9898\u7684\u6700\u540e\u51e0\u7ec4\u6570\u636e\u663e\u7136\u4e0d\u652f\u6301\u6307\u6570\u7ea7\u522b\u7684\u7b97\u6cd5\uff0c\u53c8\u60f3\u5199\u641c\u7d22\uff0c\u65f6\u95f4\u53c8\u4e0d\u591f\uff0c\u4e8e\u662f\u5199\u4e00\u4e2a\u8bb0\u5fc6\u5316\u641c\u7d22\u5c31\u884c\uff0c\u5373\u5c31\u662f\u8bb0\u5fc6\u6bcf\u4e00\u6b21\u641c\u7d22\u7684\u7ed3\u679c\uff0c\u53ef\u4ee5\u5f88\u5feb\u901f\u7684\u5b8c\u6210\u641c\u7d22\uff0c\u800c\u4e14\u8bb0\u5fc6\u5316\u641c\u7d22\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u52a8\u5f52\u7406\u8bba\u4e0a\u662f\u4e00\u6837\u7684\uff0c\u4e8e\u662f\u5f88\u591a\u52a8\u5f52\u9898\u76ee\u5b9e\u5728\u60f3\u4e0d\u51fa\u6765\u90fd\u53ef\u4ee5\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u6709\u65f6\u8fd8\u80fd\u51cf\u652f\u4f18\u5316\uff0c\u4e0b\u9762\u662f\u4ee3\u7801\uff1b\n\n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<cstdio>\n#include<vector>\n#include<algorithm>\n#define MAXN 400010\nusing namespace std;\nvector<int>l[MAXN];\nint n,m,u[MAXN],v[MAXN],dp[MAXN],cnt=1;\nvoid add(int x,int y)\n  {\n        u[++cnt]=x;v[cnt]=y;\n        l[x].push_back(cnt);\n  }\nint dfs(int x)\n {\n     int i;\n     if(dp[x])return dp[x];\n     dp[x]=1;\n     for(i=l[x].size()-1;i>=0;i--)\n       {\n          int k=l[x][i];\n         dp[x]=max(dp[x],dfs(v[k])+1);    \n      }\n    return dp[x];\n }\nint main()\n  {\n       int i,j,k;\n       scanf(\"%d%d\",&n,&m);\n       for(i=1;i<=m;i++)\n         {\n            int a,b;\n          scanf(\"%d%d\",&a,&b);\n          add(b,a);    \n       }\n     for(i=1;i<=n;i++)\n           cout<<dfs(i)<<endl;\n     return 0;\n}\n```",
        "postTime": 1485158221,
        "uid": 20431,
        "name": "zirrtu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1137 \u3010\u65c5\u884c\u8ba1\u5212\u3011"
    },
    {
        "content": "\n\uff5b//\u540e\u9762\u662f\u8bf4\u660e\uff5d\n\n\n\n\n\n\n```cpp\ntype  \n    //(too \u8868\u793a\u8be5\u6761\u8fb9\u6307\u5411\u7684\u70b9\uff0cnext\u8868\u793a\u8be5\u6761\u8fb9\u6307\u5411\u7684\u4e0b\u4e00\u6761\u8fb9\uff09\n    E=record   \n        too,next:longint;\n    end;\nvar\n    n, m, i, x, y : longint;\n    //G : array[1..1000, 1..1000] of longint;\n    edge:array[1..200000] of E;//edge\u662f\u8fb9\u8868\u6570\u7ec4\n    nedge:longint;\n    head:array[1..100000]  of longint;\n    f : array[1..100000] of longint;//f[i]\u8868\u793a\u4ee5i\u4e3a\u8d77\u70b9\u7684\u6700\u957f\u8def\u5f84\u3002\nprocedure addedge(a, b:longint);\nbegin \n    inc(nedge);\n    edge[nedge].next:=head[a]; \n    edge[nedge].too:=b;\n    head[a]:=nedge;\nend;\n//\u4ee5t\u70b9\u4e3a\u8d77\u70b9\u7684\u6700\u957f\u8def\u5f84\nfunction search(t:longint):longint;\nvar \n    i, k, max_path : longint;\nbegin\n    if f[t] <> 0 then exit(f[t]);\n    max_path := 0;\n    k:=head[t];\n    while ( k>0 ) do \n    begin\n        i:=edge[k].too; \n        if f[i] = 0 then f[i] := search(i);\n        if f[i] > max_path then max_path := f[i];\n        k:=edge[k].next;\n    end;\n    f[t] := max_path + 1;\n    exit(f[t]);\nend;\nbegin\n    fillchar(f, sizeof(f), 0);\n    //fillchar(G, sizeof(G), 0);\n    readln(n, m);\n    for i:=1 to m do\n    begin\n        readln(x, y);\n        //G[y, x] := 1;\n        addedge(y, x); \n    end;\n    for i:=1 to n do\n    begin\n        writeln(search(i));\n    end;\nend.\n\n```",
        "postTime": 1478350571,
        "uid": 8756,
        "name": "zhych",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1137 \u3010\u65c5\u884c\u8ba1\u5212\u3011"
    },
    {
        "content": "\u548c\u697c\u4e0b\u7684\u601d\u8def\u5dee\u4e0d\u591a\uff0c\u4f46\u6bd4\u8f83\u7b80\u6d01\u2026\u2026\n\n\n\n```cpp\n#include<cstdio>\n#include<stack>\n#include<vector>\nusing namespace std;\nint n,m,x,y,ru[100001],ans[100001];\nvector<int> ro[100001],tot;\nstack<int> q;\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&x,&y);\n        ru[y]++;  //\u8bb0\u5f55\u5165\u5ea6\n        ro[x].push_back(y);  //\u5efa\u56fe\n    }\n    for(int i=1;i<=n;i++)  //\u5148\u628a\u5165\u5ea6\u4e3a0\u7684\u70b9\u5165\u6808\n      if(!ru[i]) q.push(i),ans[i]=1;\n    while(!q.empty())\n    {\n        int k=q.top();q.pop();\n        tot.push_back(k);  //\u8bb0\u5f55\u62d3\u6251\u5e8f\n        for(int i=0;i<ro[k].size();i++)\n        {\n            ru[ro[k][i]]--;if(!ru[ro[k][i]]) q.push(ro[k][i]);  //\u6539\u53d8\u5b50\u8282\u70b9\u5165\u5ea6\n        } \n    }\n    for(int i=0;i<tot.size();i++)\n    {\n        int k=tot[i];\n        for(int j=0;j<ro[k].size();j++)  //\u62d3\u6251\u5e8f\n        {\n            int z=ro[k][j];\n            if(ans[z]<ans[k]+1) ans[z]=ans[k]+1;  //\u66f4\u65b0ans\u503c\n        }\n    }\n    for(int i=1;i<=n;i++) printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1474561596,
        "uid": 16334,
        "name": "licone",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1137 \u3010\u65c5\u884c\u8ba1\u5212\u3011"
    },
    {
        "content": "\u5177\u4f53\u7684\u539f\u7406\u548c\u697c\u4e0b\u5927\u725b\u5dee\u4e0d\u591a\u3002\u8fd9\u91cc\u63d0\u4f9bC++\u7684AC\u4ee3\u7801\u3002\n\n[codec]\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\n#include <queue>\n#include <stack>\nusing namespace std;\n#define INF 0x3f3f3f3f\nvector<int> g[100010]; //\u5b58\u56fe\n//queue<int> q;\n//int path[100010];\nint N,M;\nint in[100010]; //\u8bb0\u5f55\u5165\u5ea6\nint ans[100010]; //\u5b58\u653e\u7b54\u6848\nvector<int> topo; //\u62d3\u6251\u6392\u5e8f\u7ed3\u679c\u96c6\ninline void init(){\n    cin>>N>>M;\n    int u,v;\n    for(int i=0;i<M;i++){\n        scanf(\"%d%d\",&u,&v);\n        g[u].push_back(v);\n        in[v]++;\n    }\n    //memset(dist,0,sizeof(dist));\n    memset(ans,0,sizeof(ans));\n    path[1]=-1;\n}\ninline void toposort(){\n    stack<int> t;\n    int tot=N;\n    for(int i=1;i<=N;i++){\n        if(in[i]==0){\n            t.push(i);\n            ans[i]=1;\n        }\n    }\n    while(!t.empty()){\n        int k=t.top();\n        t.pop();\n        topo.push_back(k);\n        for(int i=0;i<g[k].size();++i){\n            in[g[k][i]]--;\n            if(!in[g[k][i]]) t.push(g[k][i]);\n        }\n    }\n}\ninline void work(){\n    for(int j=0;j<topo.size();++j){\n        int k=topo[j];\n        for(int i=0;i<g[k].size();++i){\n            if(ans[g[k][i]]<ans[k]+1){\n                ans[g[k][i]]=ans[k]+1;\n            }\n        }\n    }\n    for(int i=1;i<=N;i++){\n        printf(\"%d\\n\",ans[i]);\n    }\n}\nint main(){\n    init();\n    toposort();\n    work();\n    return 0;\n}\n[/codec]\n```",
        "postTime": 1469437164,
        "uid": 14667,
        "name": "mike_he",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1137 \u3010\u65c5\u884c\u8ba1\u5212\u3011"
    },
    {
        "content": "\u62d3\u6251\u6392\u5e8f+DP\u3002 \u53ef\u4ee5\u53d1\u73b0\uff0c\u5165\u5ea6\u4e3a0\u7684\u70b9\u7b54\u6848\u4e3a\u4e00\uff08\u56e0\u4e3a\u53ea\u80fd\u4ece\u4ed6\u81ea\u5df1\u8d70\u5230\u81ea\u5df1\uff09\u3002\u7136\u540e\u62d3\u6251\u6392\u5e8f\uff0c\u4fdd\u8bc1\u4e86\u5f53\u524d\u8282\u70b9\u7684\u6700\u4f18\u5b50\u7ed3\u6784\uff0c\u56e0\u4e3a\u5f53\u524d\u7ed3\u70b9\u4e4b\u524d\u7684\u7ed3\u70b9\u90fd\u662f\u6c42\u8fc7\u7684\uff0c\u4e8e\u662f\u4fbf\u4ece\u6240\u6709\u8d70\u5230\u5f53\u524d\u8282\u70b9\u4e2d\u7684\u6700\u5927\u503c+1\u4fbf\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u7b54\u6848\u3002\n\n```cpp\nvar\n nextv:array[1..200000] of longint;\n next:array[1..200000] of longint;\n bian,ans,tuopu,rudu:array[1..100000] of longint;\n m,n,i,x,y,countbian,tail,head,nowbian:longint;\nfunction max(a,b:longint):longint;\n begin\n  if a>b then exit(a) else exit(b);\n end;\nbegin\n assign(input,'plan.in');\n assign(output,'plan.out');\n reset(input); rewrite(output);\n readln(n,m); countbian:=0; fillchar(rudu,sizeof(rudu),0);\n fillchar(ans,sizeof(ans),0);\n for i:=1 to m do begin\n  readln(x,y);\n  inc(rudu[y]);\n  inc(countbian);\n  next[countbian]:=bian[x];\n  bian[x]:=countbian;\n  nextv[countbian]:=y;\n end;\n head:=0; tail:=0;\n for i:=1 to n do\n  if rudu[i]=0 then begin\n   inc(tail); tuopu[tail]:=i; ans[i]:=1;\n  end;\n while head<tail do begin\n  inc(head); x:=tuopu[head]; nowbian:=bian[x];\n  while nowbian<>0 do begin\n   dec(rudu[nextv[nowbian]]);\n   if rudu[nextv[nowbian]]=0 then begin\n    inc(tail); tuopu[tail]:=nextv[nowbian]; //ans[tail]:=1;\n   end;\n   nowbian:=next[nowbian];\n  end;\n end;\n for i:=1 to tail do begin\n  x:=tuopu[i];\n  nowbian:=bian[x];\n  while nowbian<>0 do begin\n   ans[nextv[nowbian]]:=max(ans[nextv[nowbian]],ans[x]+1);\n   nowbian:=next[nowbian];\n  end;\n end;\n for i:=1 to n do writeln(ans[i]);\n close(input); close(output);\nend.\n\n```",
        "postTime": 1464075561,
        "uid": 18105,
        "name": "\u59ec\u6d77\u68e0\u679c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1137 \u3010\u65c5\u884c\u8ba1\u5212\u3011"
    }
]