[
    {
        "content": "\u626b\u63cf\u7ebf233\u2026\u2026\n\n\u5927\u5bb6\u8fd8\u8bb0\u7684\u5982\u4f55\u6c42\u5706\u7684\u5e76\u5417\uff1f\n\n\u5f53\u7136\u662f\u66b4\u529b\u81ea\u9002\u5e94Simpson\u79ef\u5206\u5566\u2026\u2026\n\n\u4f46\u662f\u8fd9\u9053\u9898\u8ba9\u4f60\u9664\u03c0\u8f93\u51fa\u54e6\uff0c\u800c\u4e14\u662f\u9b3c\u755c\u7684\u5f02\u6216\u5e76\u54e6\uff01\n\n\u6240\u4ee5\u6211\u4eec\u7684\u76f4\u89c9\u5f00\u59cb\u544a\u8bc9\u6211\u4eec\u8fd9\u9053\u9898\u53ef\u80fd\u548c\u5bc4\u849c\u51e0\u76d2\u5e76\u4e0d\u6cbe\u591a\u5c11\u8fb9\n\n\u53cd\u800c\u50cf\u662f\u4e00\u4e9b\u5947\u602a\u7684\u4e1c\u897f\u2026\u2026\n\n## \u5f53\u89c9\u5f97\u9898\u76ee\u5f00\u59cb\u8fa3\u624b\u7684\u65f6\u5019\uff0c\u8bf7\u6ce8\u610f\u90a3\u4e9b\u5947\u602a\u7684\u6761\u4ef6\n\n\u6bd4\u5982\u8bf4\u8fd9\u9053\u9898\u6765\u8bb2\uff0c\u6211\u4eec\u53d1\u73b0\u5f88\u5947\u602a\u7684\u662f\u6ca1\u6709\u76f8\u4ea4\u7684\u5706\uff0c\u751a\u81f3\u8fde\u5185\u5207\u5916\u5207\u90fd\u6ca1\u6709\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u6ce8\u610f\u4e86\u2026\u2026\n\n\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53d1\u73b0\u8fd9\u4e9b\u5706\u7684\u5173\u7cfb\u53ef\u4ee5\u8fd9\u6837\u6765\u63cf\u8ff0\n\n\u5982\u679c**a\u5728b\u4e2d\uff0cb\u5728c\u4e2d\uff0c\u5219a\u5728c\u4e2d**\n\n\u7c7b\u6bd4\u8fd9\u4e00\u53e5\u8bdd\uff1a\n\n**\u5982\u679ca<b,b<c,\u5219a<c**\n\n\u8fd9\u610f\u5473\u5d4c\u5957\u662f\u6709**\u4f20\u9012\u6027**\u7684\n\n\u518d\u8003\u8651\u8fd9\u4e2a\u6027\u8d28\uff0c**\u5982\u679ca\u5728b\u4e2d\uff0c\u5219a\u88abb\u5305\u542b**\n\n\u7c7b\u6bd4\u8fd9\u6837\u4e00\u53e5\u8bdd\n\n**\u5982\u679c a\u5c0f\u4e8eb,\u5219b\u5927\u4e8ea**\n\n\u8fd9\u610f\u5473\u7740\u5d4c\u5957\u662f\u6709**\u81ea\u53cd\u6027**\u7684\n\n\u8981\u77e5\u9053\uff0c\u4f20\u9012\u6027\u548c\u81ea\u53cd\u6027\u662f\u5c0f\u4e8e\u53f7\u7684\u4e24\u4e2a\u57fa\u672c\u6027\u8d28\uff0c\u4e5f\u662f\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u8fd4\u56de\u503c\u4e3abool\u8fd0\u7b97\u7b26\u7684\u672c\u8d28\u2026\u2026\uff0c\u6362\u53e5\u8bdd\u6765\u8bb2\uff0c\u5047\u8bbe\u6211\u4eec\u5f00\u53d1\u51fa\u4e86\u4e00\u4e2a\u5947\u602a\u7684\u8fd0\u7b97\uff0c\u4f7f\u5f97\u8fd9\u4e2abool\u8fd4\u56de\u503c\u7684\u4e1c\u897f\u4e5f\u5177\u6709**\u4f20\u9012\u6027\u548c\u81ea\u53cd\u6027**\uff0c\u8fd9\u4e2a\u8fd0\u7b97\u7b26\u5c31\u548c\u5c0f\u4e8e\u53f7\u903b\u8f91\u4e0a**\u7b49\u4ef7**\n\n\u903b\u8f91\u4e0a\u7b49\u4ef7\u610f\u5473\u7740\u6211\u4eec\u57fa\u4e8e**\u5c0f\u4e8e\u53f7\u6027\u8d28**\u5f00\u53d1\u7684\u6240\u6709\u9ad8\u901f\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\u90fd\u53ef\u4ee5\u7528\u4e86\uff0c\u6bd4\u5982sort\uff0c\u6bd4\u5982set\uff0c\u6bd4\u5982priority_queue\n\n\u56e0\u6b64\u6211\u4eec\u53d1\u73b0\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u4e00\u4e2a\u4f18\u7f8e\u7684\u626b\u63cf\u7ebf\u505a\u6cd5\u641e\u8fc7\u53bb\n\n### \u626b\u63cf\u7ebf\n\n\u5176\u5b9e\u626b\u63cf\u7ebf\u5e76\u4e0d\u662f\u4e00\u4e2a\u7384\u5b66\u7684\u7b97\u6cd5\uff0c\u800c\u662f\u4e00\u79cd\u601d\u60f3\uff0c\u601d\u60f3\u6027\u7684\u4e1c\u897f\u6ce8\u5b9a\u4e86\u53ef\u4ee5\u5b83\u5f88\u96be\u4e5f\u53ef\u4ee5\u5f88\u7b80\u5355\u2026\u2026\uff0c\u771f\u6b63\u5199\u7a0b\u5e8f\u7684\u65f6\u5019\u626b\u63cf\u7ebf\u5e76\u4e0d\u5b58\u5728\n\n\u626b\u63cf\u7ebf\u901a\u5e38\u7528\u6765\u5904\u7406\u4e8c\u4f4d\u5e73\u9762\u4e0a\u7684\u4e00\u4e9b\u95ee\u9898\uff0c\u56e0\u4e3a\u540c\u65f6\u5904\u7406\u4e24\u7ef4\u4fe1\u606f\u4f1a\u6781\u7aef\u8fa3\u624b\uff0c\u6240\u4ee5\u6211\u4eec\u5047\u8c61\u6709\u4e00\u6761\u4e0ey\u8f74\u5e73\u884c\uff0c\u65e0\u9650\u957f\u7684\u76f4\u7ebf\uff0c\u4ece\u5de6\u5230\u53f3\u7f13\u6162\u79fb\u52a8\uff0c\u8fd9\u6837\u8fd9\u4e00\u6761\u7ebf\u4e0a\u7684\u70b9\u7684**x\u503c\u5168\u90e8\u76f8\u540c\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4e13\u5fc3\u8003\u8651y\u7684\u4fe1\u606f**\u4e86\n\n\u5176\u5b9e\u8bf4\u8fd9\u4e2a\u4e3b\u8981\u662f\u8ba9\u5927\u5bb6\u4ece\u611f\u60c5\u4e0a\u63a5\u7eb3\u626b\u63cf\u7ebf\uff0c\u6bd5\u7adf\u638c\u63e1\u8fd9\u73a9\u610f\u8fd8\u662f\u5f97\u9760\u505a\u9898\u2026\u2026\n\n-------\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\u628a\u4e00\u4e2a\u6574\u5706\u63d2\u8fdb\u53bb\u662f\u4e0d\u884c\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u5173\u6ce8\u7684\u662f\u8fd9\u4e2a\u5706\u5c42\u6570\u7684\n\u5947\u5076\u6027\uff0c\u4f46\u662fset\u53c8\u662f\u4e0d\u53ef\u91cd\u7684\uff0c\u6240\u4ee5\u5728\u540c\u4e00\u5c42\u7684\u5706\u4f1a\u5341\u5206\u8fa3\u624b\u2026\u2026\n\n\u4f46\u662f\u4e00\u65e6\u6211\u4eec\u6362\u4e2a\u601d\u8def\uff0c\u6bd5\u7adf\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u626b\u63cf\u7ebf\u8fd9\u4e2a\u6709\u529b\u7684\u5de5\u5177\uff0c\u6211\u4eec\u81ea\u7136\u4f1a\u53d1\u73b0\uff0c\u8fd9\u4e2a\u56fe\u5f62\u548c\u626b\u63cf\u7ebf\u7684\u70b9\u4ea4\u70b9\u662f**\u9ad8\u5ea6\u62ec\u53f7\u5316**\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5bf9\u4e8e\u4e00\u4e2a\u5706\u6765\u8bb2\uff0c\u53d1\u73b0\u5b83\u4e0a\u9762\u7684\u6700\u8fd1\u4ea4\u70b9\u548c\u4e0b\u9762\u6700\u8fd1\u4ea4\u70b9\u4e00\u5b9a\u662f\u5c5e\u4e8e\u4e00\u4e2a\u5706\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e0d\u5b58\u4e00\u4e2a\u6b63\u5706\uff0c\u56e0\u4e3a\u626b\u63cf\u7ebf\u8981\u8ba1\u7b97\u4ea4\u70b9\u2026\u2026\u6b63\u5706\u6ca1\u6cd5\u8ba1\u7b97\n\n\u6240\u4ee5\u62c6\u6210\u4e24\u4e2a\u534a\u5706\u51fd\u6570\uff0c\u8fd9\u4e2a\u6211\u4eec\u5c31\u53ef\u4ee5\u7ef4\u62a4\u4e86\n\n\u90a3\u4e48\u6211\u4eec\u5177\u4f53\u6765\u8bb2\u600e\u4e48\u505a\u5462\uff1f\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\u6309x\u6392\u5e8f\u540e\uff0c\u6bcf\u4e2a\u5706\u4f1a\u5728x\u4e0a\u4f1a\u6709\u4e00\u4e2a\u51fa\u73b0\u533a\u95f4\uff0c\u800c\u4e14\u66f4\u68d2\u7684\u662f\u5982\u679ca\u5d4c\u5957\u4e86b\n\u90a3\u4e48**a\u4e00\u5b9a\u6bd4b\u65e9\u51fa\u73b0\u665a\u6d88\u5931**\n\n\u6240\u4ee5\u6211\u4eec\u5c06\u4e00\u4e2a\u5706\u62c6\u6210\u4e24\u4e2a\u64cd\u4f5c\u70b9\uff0c\u4e00\u4e2a\u52a0\u5165\u70b9\uff0c\u5750\u6807\u4e3ax-r,\u4e00\u4e2a\u4e3a\u5220\u9664\u70b9\uff0c\u5750\u6807\u4e3ax+r\n\n\u4e4b\u540e\u6392\u5e8f\uff0c\u4ece\u5c0f\u5230\u5927\u5904\u7406\u64cd\u4f5c\u5e8f\u5217\n\n\u5982\u679c\u8fd9\u4e2a\u70b9\u662f\u52a0\u5165\u70b9\uff0c\u90a3\u4e48\u50cfset\u91cc\u63d2\u5165\u4e00\u4e2a\u4e0a\u5706\u5f27\u548c\u4e0b\u5706\u5f27\uff0c\u5e76\u4e14\u67e5\u627e\u4e0a\u5706\u5f27\u7684\u524d\u9a71\uff08\u4f60\u8981\u67e5\u4e0b\u5706\u5f27\u540e\u7ee7\u4e5f\u884c\uff0c\u4f46\u662f\u6211\u5acc\u5224end\u9ebb\u70e6~\uff09\n\n\u5982\u679c\u8fd9\u4e2a\u524d\u9a71\u662f\u4e0b\u5706\u5f27\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5706\u7684\u5c42\u6570\u5947\u5076\u6027\u5e94\u8be5\u548c\u524d\u9a71\u7684**\u5947\u5076\u6027\u76f8\u53cd**\n\n\u5982\u679c\u662f\u4e0a\u5706\u5f27\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5706\u7684\u5c42\u6570\u5947\u5076\u6027\u5e94\u8be5\u548c\u524d\u9a71\u7684**\u5947\u5076\u6027\u76f8\u540c**\n\n _(\u8fd8\u662f\u4e0d\u61c2\u7684\u8bdd\u81ea\u5df1\u753b\u56fe\u7406\u89e3\u5566~\uff0c\u6211\u61d2\u5f97\u63d2\u56fe\u4e86\u2026\u2026)_ \n \n \u6b64\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u5904\u7406\u6bcf\u4e2a\u5706\u7684\u5947\u5076\u6027\u4e86\uff0c\u66b4\u529b\u7684\u5947\u52a0\u5076\u51cf\u5373\u53ef\n \n \u90a3\u4e48\u5982\u679c\u662f\u5220\u9664\u7684\u8bdd\u8be5\u600e\u4e48\u529e\u5462\uff1fset\u91cc\u5927\u529berase\u5373\u53ef\u2026\u2026\n \n \u6700\u540e\u4e00\u4e2a\u95ee\u9898(\u53ef\u80fd\u662f\u4e24\u4e2a\uff1f)\n \n \u6211\u4eec\u8be5\u5982\u4f55\u5b9a\u4e49\u5c0f\u4e8e\u53f7\uff1f\n \n \u7531\u4e8e\u662f\u5728\u626b\u63cf\u7ebf\uff0c\u56e0\u6b64\u6211\u4eec\u65f6\u523b\u8bb0\u5f55\u4e0b\u6765\u626b\u63cf\u7ebf\u7684x\u5750\u6807\uff0c\u66b4\u529b\u8ba1\u7b97\u6bcf\u4e2a\u51fd\u6570\u7684\u51fd\u6570\u503c\u6bd4\u8f83\uff0c\u7531\u4e8e\u4e0d\u4f1a\u76f8\u4ea4\uff0c\u6240\u4ee5\u76f8\u5bf9\u5927\u5c0f\u5173\u7cfb\u4e0d\u53d8\u2026\u2026\n \n \u53e6\u5916\uff0c\u63d2\u5165\u4e0a\u5706\u5f27\u7684\u65f6\u5019\u51fd\u6570\u503c\u548c\u4e0b\u5706\u5f27\u76f8\u7b49\uff0c\u8be5\u5982\u4f55\u89e3\u51b3\uff1f\n \n \u6211\u4eec\u8ba9\u8fd9\u4e24\u4e2a\u7684\u503c\u9519\u5f00\u4e00\u4e2aeps\u5373\u53ef\u2026\u2026\n \n \u5177\u4f53\u7ec6\u8282\u770b\u4ee3\u7801\u5427\uff0c\u4e0d\u4f5c\u6b7b\u8fd8\u662f\u5f88\u597d\u5199\u7684\n \n \u5bf9\u4e86\uff0c\u4e00\u822c\u8fd9\u79cd\u4e1c\u897f\u5b58\u4e0b\u6807\u4f1a\u975e\u5e38\u597d\u5199\uff0c\u8981\u662f\u5b58\u503c\u7684\u8bdd\u2026\u2026\u795d\u60a8\u597d\u8fd0\n \n \u4e0a\u4ee3\u7801~\n \n ```C\n#include<cstdio>\n#include<algorithm>\n#include<set>\n#include<cmath>\nusing namespace std;\ntypedef double db;typedef long long ll;\nconst int N=2*1e5+10;const db eps=1e-9;\ndb a[N];db b[N];db r[N];int o[N];int n;db nx;\nstruct cir//\u6211\u4eec\u8fd9\u91cc\u53ea\u5b58\u4e86\u4e0b\u6807 tp=1/-1 \n{\n\tint tp;int u;cir(int T=0,int N=0){tp=T,u=N;}//\u8fd9\u91cc\u7684\u8ba1\u7b97\u51fd\u6570+\u4e86\u4e00\u4e2aeps\uff0c\u9632\u6b62\u51b2\u7a81 \n\tinline db cy(){return b[u]+(db)tp*(sqrt(r[u]*r[u]-(nx-a[u])*(nx-a[u]))+eps);}\n\tfriend bool operator <(cir a,cir b){db jud=a.cy()-b.cy();return jud<-eps;}\n};set <cir> s;ll res;\nstruct pot\n{\n\tint tp;int v;int u;//\u64cd\u4f5c\u5e8f\u5217\u70b9\uff0c\u5199\u4e86\u4e2a\u8d4b\u503c\u51fd\u6570\u65b9\u4fbf\u538b\u884c \n\tinline void rv(int T=0,int V=0,int U=0){tp=T;v=V;u=U;}\n\tfriend bool operator <(pot a,pot b){return a.v<b.v;}\n}op[2*N];int cnt;\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)//\u8bfb\u8fdb\u6765 \n\t{\n\t\tscanf(\"%lf%lf%lf\",&a[i],&b[i],&r[i]);\n\t\top[++cnt].rv(1,a[i]-r[i],i);op[++cnt].rv(0,a[i]+r[i],i);\n\t}sort(op+1,op+cnt+1);//sort\u4e00\u904d \n\tfor(int i=1;i<=cnt;i++)\n\t{\n\t\tnx=op[i].v;\n\t\tif(op[i].tp)\n\t\t{\n\t\t\tint nw=op[i].u;set <cir> ::iterator it;\n\t\t\tit=s.insert(cir(1,nw)).first;//set\u7684insert\u8fd4\u56de\u4e00\u4e2apair\u7c7b\u578b \n\t\t\tif(it==s.begin()){o[nw]=1;}//\u7279\u5224\u65e0\u524d\u9a71 \n\t\t\telse //\u627e\u5230\u524d\u9a71 \n\t\t\t{\n\t\t\t\t--it;if((*it).tp==-1){o[nw]=o[(*it).u]^1;}\n\t\t\t\telse {o[nw]=o[(*it).u];}\n\t\t\t}\n\t\t\tif(o[nw]){res+=r[nw]*r[nw];}else {res-=r[nw]*r[nw];}//\u5947\u52a0\u5076\u51cf \n\t\t\ts.insert(cir(-1,nw));//\u63d2\u5165\u4e0b\u5706\u5f27 \n\t\t}else{s.erase(cir(1,op[i].u));s.erase(cir(-1,op[i].u));}//\u5927\u529berase\u6389\u5373\u53ef \n\t}printf(\"%lld\",res);return 0;//\u62dc\u62dc\u7a0b\u5e8f~ \n}\n\n```",
        "postTime": 1520927421,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3268 \u3010[JLOI2016]\u5706\u7684\u5f02\u6216\u5e76\u3011"
    },
    {
        "content": "# \u6d1b\u8c37 P3268 [JLOI2016]\u5706\u7684\u5f02\u6216\u5e76\n\n## \u8bf4\u5728\u524d\u9762\n\n\u611f\u8c22\u7ba1\u7406\u5458\u7684\u7ec6\u5fc3\u6307\u5bfc\u3002\u82e5\u4ecd\u6709\u4e0d\u8db3\u6073\u8bf7\u591a\u591a\u65a7\u6b63\u3002\n\n## \u9898\u76ee\u63cf\u8ff0\n\n\u5728\u5e73\u9762\u4e0a\u6709\u4e24\u4e24\u4e0d\u76f8\u4ea4\u7684$n$\u4e2a\u5706\uff0c\u5373\u5176\u5173\u7cfb\u53ea\u6709\u76f8\u79bb\u548c\u5305\u542b\u3002\u6c42\u8fd9\u4e9b\u5706\u7684\u5f02\u6216\u9762\u79ef\u5e76\u3002\n\n\u5f02\u6216\u9762\u79ef\u5e76\u4e3a\uff1a\u5f53\u4e00\u7247\u533a\u57df\u88ab\u5947\u6570\u4e2a\u5706\u5305\u542b\u5219\u8ba1\u7b97\u5176\u9762\u79ef\uff0c\u5426\u5219\u4e0d\u8ba1\u7b97\u3002\n\n\u8f93\u51fa\u6240\u6709\u5706\u7684\u5f02\u6216\u9762\u79ef\u5e76\u9664\u4ee5$\\pi$\u7684\u7ed3\u679c\u3002\n\n$n\\le 200000$\u3002\n\n## Solution\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u626b\u63cf\u7ebf\uff0cset\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u7531\u4e8e\u5706\u662f\u4e0d\u76f8\u4ea4\u7684\uff0c\u90a3\u4e48\u8fd9\u79cd\u5305\u542b\u5173\u7cfb\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u68f5\u68ee\u6797\uff08\u8bb8\u591a\u6709\u6839\u6811\u6784\u6210\u7684\u56fe\uff09\u3002\n\n\u6bd4\u5982\u50cf\u8fd9\u4e2a\u51e0\u4e2a\u5706\n![](https://cdn.luogu.com.cn/upload/image_hosting/nyw3lqan.png)\n\u53ef\u4ee5\u53d8\u6210\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/011d37pn.png)\n\n\u8bbe\u6bcf\u4e2a\u6839\u7684\u6df1\u5ea6\u4e3a1\uff0c\u90a3\u4e48\u6df1\u5ea6\u4e3a\u5947\u6570\u7684\u8282\u70b9\u7684\u9762\u79ef\u662f\u9700\u8981\u52a0\u4e0a\u7684\uff0c\u6df1\u5ea6\u4e3a\u5076\u6570\u7684\u8282\u70b9\u7684\u9762\u79ef\u662f\u9700\u8981\u51cf\u53bb\u7684\u3002\n\n\u5373\n$$\nans=\\sum_{i=1}^nr_i^2\\times(-1)^{dep_i+1}\n$$\n\u540c\u626b\u63cf\u7ebf\u7684\u601d\u60f3\uff0c\u6211\u4eec\u6a21\u62df\u51fa\u6709\u4e00\u6761\u5782\u76f4\u4e8e$x$\u8f74\u7684\u76f4\u7ebf\u4ece\u5de6\u5411\u53f3\u79fb\u52a8\u3002\n\n- \u5f53\u5176\u4e0e\u67d0\u4e2a\u5706\u5f00\u59cb\u89e6\u78b0\u5230\u7684\u65f6\u5019\uff0c\u5c31\u5c06\u8fd9\u4e2a\u5706\u62c6\u5206\u4e3a\u4e0a\u534a\u5706\u548c\u4e0b\u534a\u5706\u63d2\u5165set\u4e2d\u3002\u8fd9\u4e2aset\u662f\u6309\u7167\u5706\u7684\u9ad8\u5ea6\u6392\u5e8f\u7684\u3002\u7531\u4e8e\u4fdd\u8bc1\u4e86\u5706\u548c\u5706\u4e4b\u95f4\u4e0d\u76f8\u4ea4\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u626b\u63cf\u7ebf\u4e0e\u534a\u5706\u7684\u4ea4\u70b9\u4f5c\u4e3a\u5173\u952e\u5b57\u6392\u5e8f\u3002\u5706\u548c\u5706\u4e4b\u95f4\u4e0d\u76f8\u4ea4\u4fdd\u8bc1\u4e86\u8fd9\u4e2a\u5173\u952e\u5b57\u7684\u76f8\u5bf9\u5927\u5c0f\u4e00\u5b9a\u4e0d\u4f1a\u53d8\u3002\n\n\u67e5\u8be2\u521a\u521a\u63d2\u5165\u7684\u5706\u7684\u4e0a\u534a\u5706\u7684\u524d\u9a71\uff08\u5728set\u4e2d\u7684\u6240\u6709\u534a\u5706\u4e2d\uff0c\u5728\u5f53\u524d\u5706\u4e0b\u65b9\u6700\u8fd1\u7684\u534a\u5706\uff09\u3002\u5982\u679c\u5b83\u7684\u524d\u9a71\u662f\u4e00\u4e2a\u4e0a\u534a\u5706\uff0c\u90a3\u4e48\u5f53\u524d\u5706\u7684\u6df1\u5ea6\u7b49\u4e8e\u5176\u524d\u9a71\u7684\u6df1\u5ea6\uff1b\u82e5\u524d\u9a71\u662f\u4e00\u4e2a\u4e0b\u534a\u5706\uff0c\u90a3\u4e48\u8bf4\u660e\u5f53\u524d\u5706\u88ab\u5176\u524d\u9a71\u6240\u5305\u542b\uff0c\u6df1\u5ea6\u4e3a\u524d\u9a71\u7684\u6df1\u5ea6+1\u3002\n\n- \u9047\u5230\u5706\u7684\u53f3\u8fb9\u754c\u5c31\u76f4\u63a5\u5c06\u5176\u4e24\u4e2a\u534a\u5706\u4eceset\u4e2d\u5220\u9664\u5373\u53ef\u3002\n\n\u56e0\u4e3aset\u4e2d\u8981\u63d2\u5165\u540c\u4e00id\u7684\u4e24\u4e2a\u534a\u5706\uff0c\u90a3\u4e48\u53ea\u8981\u7528up\u8868\u793a\u5f53\u524d\u5706\u662f\u4e0a\u534a\u5706\u8fd8\u662f\u4e0b\u534a\u5706\u5373\u53ef\u3002\u91cd\u8f7d\u8fd0\u7b97\u7b26\u65f6\uff0c\u53ef\u4ee5\u6bd4\u8f83**\u5f53\u524d\u626b\u63cf\u7ebf\u4e0e\u534a\u5706\u7684\u4ea4\u70b9**\uff0c\u4e5f\u53ef\u4ee5**\u4ee5\u5706\u5fc3\u7684\u7eb5\u5750\u6807\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u4ee5\u4e0a/\u4e0b\u534a\u5706\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57**\u8fdb\u884c\u6bd4\u8f83\u3002\n\n\u6ce8\u610f\uff0c\u5982\u679c\u662f\u4ee5**\u626b\u63cf\u7ebf\u4e0e\u534a\u5706\u7684\u4ea4\u70b9**\u8fdb\u884c\u6bd4\u8f83\u7684\u8bdd\uff0c\u5728\u626b\u63cf\u7ebf\u8fdb\u5165/\u79bb\u5f00\u4e00\u4e2a\u5706\u7684\u65f6\u5019\uff0c\u626b\u63cf\u7ebf\u4e0e\u4e24\u4e2a\u534a\u5706\u7684\u4ea4\u70b9\u4f1a\u91cd\u5408\u3002\u9700\u8981\u5728\u6bd4\u8f83\u51fd\u6570\u4e2d\u5c06\u4e0a\u534a\u5706\u7684\u4ea4\u70b9\u7eb5\u5750\u6807\u52a0\u4e0a\u4e00\u4e2a$eps$\u5373\u53ef\u3002\n\n## Code\n\n\u6211\u7684\u6392\u5e8f\u65b9\u6cd5\u662f\u6bd4\u8f83**\u5f53\u524d\u534a\u5706\u548c\u626b\u63cf\u7ebf\u7684\u4ea4\u70b9**\u3002\n\n```c++\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<map>\n#include<set>\n#include<queue>\n#include<vector>\n#include<limits.h>\n#define IL inline\n#define re register\n#define LL long long\n#define ULL unsigned long long\n#ifdef TH\n#define debug printf(\"Now is %d\\n\",__LINE__);\n#else\n#define debug\n#endif\nusing namespace std;\n\ntemplate<class T>inline void read(T&x)\n{\n\tchar ch=getchar();\n\tint fu;\n\twhile(!isdigit(ch)&&ch!='-') ch=getchar();\n\tif(ch=='-') fu=-1,ch=getchar();\n\tx=ch-'0';ch=getchar();\n\twhile(isdigit(ch)){x=x*10+ch-'0';ch=getchar();}\n\tx*=fu;\n}\ninline LL read()\n{\n\tLL x=0,fu=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)&&ch!='-') ch=getchar();\n\tif(ch=='-') fu=-1,ch=getchar();\n\tx=ch-'0';ch=getchar();\n\twhile(isdigit(ch)){x=x*10+ch-'0';ch=getchar();}\n\treturn x*fu;\n}\nint G[55];\ntemplate<class T>inline void write(T x)\n{\n\tint g=0;\n\tif(x<0) x=-x,putchar('-');\n\tdo{G[++g]=x%10;x/=10;}while(x);\n\tfor(int i=g;i>=1;--i)putchar('0'+G[i]);putchar('\\n');\n}\n#define N 200010\nint n,nowx;\nLL X[N],Y[N],R[N];\nstruct Opt\n{\n\tLL pos;\n\tint x;\n\tbool insert;\n\tOpt(LL a=0,int b=0,bool c=0)\n\t{\n\t\tpos=a,x=b,insert=c;\n\t}\n\tIL bool operator<(const Opt& z)const\n\t{\n\t\treturn pos<z.pos;\n\t}\n};\nvector<Opt>opt;\nbool dep[N];\n#define eps 1e-6\nstruct O\n{\n\tint x;\n\tbool up;\n\tO(int xx=0,bool u=1)\n\t{\n\t\tx=xx,up=u;\n\t}\n\tdouble calc()const\n\t{\n\t\tif(up) return Y[x]+sqrt(R[x]*R[x]-(X[x]-nowx)*(X[x]-nowx))+eps;\n\t\treturn Y[x]-sqrt(R[x]*R[x]-(X[x]-nowx)*(X[x]-nowx));\n\t}\n\tIL bool operator<(const O& z)const\n\t{\n\t\treturn calc()<z.calc();\n\t}\n};\nset<O>s;\nset<O>::iterator it;\nint main()\n{\n\tn=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tX[i]=read();\n\t\tY[i]=read();\n\t\tR[i]=read();\n\t\topt.push_back(Opt(X[i]-R[i],i,1));\n\t\topt.push_back(Opt(X[i]+R[i],i,0));\n\t}\n\tsort(opt.begin(),opt.end());\n\tLL ans=0;\n\tfor(int i=0;i<opt.size();i++)\n\t{\n\t\tnowx=opt[i].pos;\n\t\tif(opt[i].insert)\n\t\t{\n\t\t\tit=s.insert(O(opt[i].x,1)).first;\n\t\t\tif(it==s.begin())\n\t\t\t{\n\t\t\t\tdep[opt[i].x]=1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tit--;\n\t\t\t\tif(it->up)\n\t\t\t\t{\n\t\t\t\t\tdep[opt[i].x]=dep[it->x];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdep[opt[i].x]=dep[it->x]^1;\n\t\t\t\t}\n\t\t\t}\n\t\t\ts.insert(O(opt[i].x,0));\n\t\t\tif(dep[opt[i].x]) ans+=R[opt[i].x]*R[opt[i].x];\n\t\t\telse ans-=R[opt[i].x]*R[opt[i].x];\n\t\t}\n\t\telse\n\t\t{\n\t\t\ts.erase(O(opt[i].x,1));\n\t\t\ts.erase(O(opt[i].x,0));\n\t\t}\n\t}\n\twrite(ans);\n\treturn 0;\n}\n```\n\n## \u603b\u7ed3\n\n\u626b\u63cf\u7ebf\u662f\u4e00\u79cd\u91cd\u8981\u7684\u601d\u60f3\u3002\u5728\u5176\u5e94\u7528\u7684\u8fc7\u7a0b\u4e2d\u5e38\u5e38\u9700\u8981\u7528\u5230set\uff0c\u7ebf\u6bb5\u6811\u7b49\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u7ef4\u62a4\u3002",
        "postTime": 1614568699,
        "uid": 188769,
        "name": "Vanilla_chan",
        "ccfLevel": 6,
        "title": "\u6d1b\u8c37 P3268 [JLOI2016]\u5706\u7684\u5f02\u6216\u5e76"
    },
    {
        "content": "\u5904\u7406\u4e0d\u76f8\u4ea4\u5706\u7684\u626b\u63cf\u7ebf\uff0c\u8001\u65e9\u5c31\u60f3\u5b66\u4e86\u3002\u4eca\u5929\u521a\u5b66\u61c2\u8fc7\u4e86\u677f\u5b50\u9898\uff0c\u5199\u7bc7\u9898\u89e3\u3002\n\n## \u9898\u89e3\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/noef3mle.png)\n\n\u6ce8\u610f\u5230\u8fd9\u4e9b\u5706\u4e4b\u95f4\u4e0d\u4f1a\u6709\u4ea4\u70b9\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a\u5706 $A,B$\uff0c\u8981\u4e48 $A\\subseteq B$\uff0c\u8981\u4e48 $B\\subseteq A$\uff0c\u8981\u4e48\u5b83\u4fe9\u6ca1\u6709\u5305\u542b\u5173\u7cfb\u3002\n\n\u5305\u542b\u5173\u7cfb\u662f\u5177\u6709\u4f20\u9012\u6027\u7684\u3002\u5373\u5982\u679c $A\\subseteq B$\uff0c$B\\subseteq C$\uff0c\u5c31\u6709 $A\\subseteq C$\u3002\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u5706\u627e\u5230\u4e00\u4e2a\u5927\u5c0f\u6700\u5c0f\u7684\u5305\u542b\u4e86\u5b83\u7684\u5706\uff0c\u770b\u4f5c\u300c\u7236\u4eb2\u300d\uff0c\u90a3\u4e48\u8fd9 $n$ \u4e2a\u5706\u5c31\u7ec4\u6210\u4e86\u4e00\u4e2a\u68ee\u6797\u3002\n\n\u8bb0\u6839\u8282\u70b9\u7684\u6df1\u5ea6\u4e3a $1$\uff0c\u4e00\u4e2a\u513f\u5b50\u8282\u70b9\u7684\u6df1\u5ea6\u662f\u5b83\u7684\u7236\u4eb2\u8282\u70b9\u7684\u6df1\u5ea6 $+1$\u3002\u90a3\u4e48\u5bb9\u6613\u53d1\u73b0\uff0c\u8fd9\u4e2a\u5706\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5e94\u8be5\u4e3a\uff1a\n\n$$r^2\\times (-1)^{d_i+1}$$\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/oqm7kx3y.png)\n\n\u4e0a\u8ff0\u5185\u5bb9\u975e\u5e38\u81ea\u7136\uff0c\u7406\u89e3\u8d77\u6765\u5e94\u8be5\u6ca1\u6709\u592a\u5927\u56f0\u96be\u3002\u6211\u4eec\u8981\u7814\u7a76\u7684\u91cd\u70b9\u662f\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5706\uff0c\u600e\u4e48\u624d\u80fd\u627e\u5230\u5b83\u7684\u7236\u4eb2\u3002\n\n---\n\n\u6709\u4e00\u4e2a\u5f88\u5de7\u5999\u7684\u4f7f\u7528\u626b\u63cf\u7ebf\u7684\u65b9\u6cd5\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5706\u5fc3\u4e3a $(x, y)$\uff0c\u534a\u5f84\u4e3a $r$ \u7684\u5706\uff0c\u4f7f\u7528\u4e00\u6761\u5e73\u884c\u4e8e $x$ \u8f74\u4e14\u8fc7\u5706\u5fc3\u7684\u76f4\u7ebf\u5c06\u5176\u5206\u5272\u6210\u4e3a\u4e0a\u534a\u5706\u5f27\u548c\u4e0b\u534a\u5706\u5f27\uff08\u539f\u8c05\u6211\u4e0d\u4f1a\u7ed9\u56fe\u7247\u914d\u8272\u2026\u2026\uff09\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/1cwfznmd.png)\n\n\u5982\u679c\u6211\u4eec\u505a\u4e00\u6761\u5782\u76f4\u4e8e $x$ \u8f74\u7684\u5782\u7ebf\uff0c\u7a7f\u8fc7\u4e86\u82e5\u5e72\u4e2a\u5706\uff0c\u5982\u56fe\u6240\u793a\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/o5g58k4d.png)\n\n\u73b0\u5728\u7814\u7a76 $A,B,C$ \u8fd9\u4e09\u4e2a\u5706\u3002\n\n- \u8fd9\u6761\u7ad6\u76f4\u7ebf\u7a7f\u8fc7\u4e86 $B$ \u7684\u4e0a\u534a\u5706\u5f27\u540e\uff0c\u4e0e $A$ \u7684\u4e0a\u534a\u5706\u5f27\u76f8\u4ea4\u3002\u8fd9\u8bf4\u660e\uff0c$B$ \u7684\u7236\u4eb2\u5c31\u662f $A$\uff1b\n- \u8fd9\u6761\u7ad6\u76f4\u7ebf\u7a7f\u8fc7\u4e86 $C$ \u7684\u4e0a\u534a\u5706\u5f27\u540e\uff0c\u4e0e $B$ \u7684\u4e0b\u534a\u5706\u5f27\u76f8\u4ea4\u3002\u8fd9\u8bf4\u660e\uff0c$B$ \u548c $C$ \u5e94\u8be5\u6709\u76f8\u540c\u7684\u7236\u4eb2\u3002\n\n\u8fd9\u4e24\u6761\u7ed3\u8bba\u662f\u53ef\u4ee5\u63a8\u5e7f\u5230\u4e00\u822c\u60c5\u5f62\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u505a\u4e00\u6761\u7ad6\u76f4\u7ebf\u7a7f\u8fc7\u5706 $i$ \u7684\u4e0a\u534a\u5706\u5f27\uff0c\u4e0e\u4e0a\u9762 $j$ \u7684\u5706\u5f27\u76f8\u4ea4\u540e\uff0c\u5982\u679c\u662f\u4e0e $j$ \u7684\u4e0b\u534a\u5706\u5f27\u76f8\u4ea4\uff0c\u5c31\u8bf4\u660e $i,j$ \u7684\u7236\u4eb2\u76f8\u540c\uff1b\u5982\u679c\u662f\u4e0e $j$ \u7684\u4e0a\u534a\u5706\u5f27\u76f8\u4ea4\uff0c\u5c31\u8bf4\u660e $j$ \u662f $i$ \u7684\u7236\u4eb2\u3002\n\n\u8fd9\u4e24\u6761\u770b\u4e0a\u53bb\u5c31\u5f88\u6b63\u786e\u7684\u7ed3\u8bba\u7684\u6b63\u786e\u6027\u53ef\u4ee5\u611f\u6027\u7406\u89e3\u3002\n\n\u73b0\u5728\u6709\u4e86\u8fd9\u6837\u4e24\u6761\u7ed3\u8bba\u540e\uff0c\u5c31\u53ef\u4ee5\u5e94\u7528\u626b\u63cf\u7ebf\u8f85\u52a9\u6211\u4eec\u6c42\u51fa\u4e00\u4e2a\u5706\u7684\u7236\u4eb2\u4e86\u3002\u5047\u8bbe\u6709\u4e00\u6761 $x=x_0$ \u7684\u76f4\u7ebf\u4ece\u5de6\u5f80\u53f3\u626b\u63cf\uff0c\n\n- \u5f53\u5b83\u521a\u89e6\u78b0\u5230\u5706 $i$\uff08\u4e5f\u5c31\u662f\u89e6\u78b0\u5230\u4e86 $i$ \u6700\u5de6\u4fa7\u7684\u4f4d\u7f6e\uff09\uff0c\u5c31\u53bb\u67e5\u8be2\u4ea4\u70b9 $(x_i-r_i,y_i)$ \u4e0a\u65b9\u6700\u8fd1\u7684\u4e00\u4e2a\u4ea4\u70b9\u6240\u5bf9\u5e94\u7684\u5706\u5f27\uff0c\u5982\u6b64\u53ef\u77e5 $i$ \u7684\u7236\u4eb2/\u4e00\u4e2a\u5144\u5f1f $j$\uff0c\u800c $j$ \u7684\u7236\u4eb2\u662f\u8c01\u80af\u5b9a\u662f\u5148\u4e8e $i$ \u88ab\u5904\u7406\u597d\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u6c42\u51fa $i$ \u7684\u7236\u4eb2\u3002\u63a5\u7740\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06 $i$ \u7684\u4e0a\u4e0b\u4e24\u4e2a\u534a\u5706\u5f27\u52a0\u5165\u67d0\u4e2a\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\uff1b\n- \u5f53\u5b83\u626b\u63cf\u5b8c\u4e86\u5706 $i$\uff08\u4e5f\u5c31\u662f\u89e6\u78b0\u5230\u4e86 $i$ \u6700\u53f3\u4fa7\u7684\u4f4d\u7f6e\uff09\uff0c\u5c31\u5e94\u8be5\u5c06 $i$ \u7684\u4e0a\u4e0b\u4e24\u4e2a\u534a\u5706\u5f27\u79fb\u51fa\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u3002\n\n\u73b0\u5728\u6211\u4eec\u9700\u8981\u8fd9\u6837\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u7ef4\u62a4 $x=x_0$ \u4e0e\u5706\u5f27\u7684\u4ea4\u70b9\uff0c\u5e76\u652f\u6301\u67e5\u8be2\u524d\u9a71\u540e\u7ee7\u3002\u53d1\u73b0\u53ef\u4ee5\u4f7f\u7528 $\\verb!set!$\u3002\u5728\u8fd9\u91cc\u5e94\u7528\u5230\u4e86\u4e00\u4e2a\u6027\u8d28\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u534a\u5706\u5f27 $a,b$\uff0c\u5206\u522b\u4e0e $x=x_0$ \u4ea7\u751f\u4e24\u4e2a\u4ea4\u70b9 $p,q$\uff0c$p$ \u548c $q$ \u5728 $y$ \u5750\u6807\u4e0a\u7684\u5927\u5c0f\u5173\u7cfb\u662f\u4e0d\u4f1a\u968f\u7740 $x_0$ \u53d1\u751f\u53d8\u5316\u7684\u3002\u8fd9\u662f\u56e0\u4e3a\u5706\u5f27\u4e0d\u4ea4\uff0c\u5982\u679c\u5927\u5c0f\u5173\u7cfb\u53d1\u751f\u53d8\u5316\u5c31\u4e00\u5b9a\u8981\u51fa\u73b0\u4ea4\u70b9\uff0c\u4ea7\u751f\u77db\u76fe\u3002\n\n\u5982\u6b64\u53d9\u8ff0\u4ecd\u7136\u6709\u4e9b\u6a21\u7cca\u3002\u8fd9\u91cc\u5c06\u7ed3\u5408\u4e00\u4e9b\u5177\u4f53\u4ee3\u7801\u3002\n\n\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53 $\\text{Semi}$\uff0c\u7528\u6765\u5b58\u50a8\u4e24\u4e2a\u5706\u5f27\u7684\u4fe1\u606f\uff1a\n\n```cpp\nstruct Semi{\n\tint i, x, y, r; bool t;\n};\n```\n\n\u5176\u4e2d\uff0c$i$ \u8868\u793a\u8fd9\u4e2a\u5706\u5f27\u5c5e\u4e8e\u7684\u5706\u7684\u7f16\u53f7\uff1b$x,y,r$ \u662f\u8fd9\u4e2a\u5706\u7684\u4fe1\u606f\uff1b$t$ \u7528\u6765\u5b58\u50a8\u8be5\u5706\u5f27\u662f\u4e0a\u534a\u5706\u5f27\u8fd8\u662f\u4e0b\u534a\u5706\u5f27\uff0c\u5982\u679c\u4e3a\u771f\u5219\u662f\u4e0a\u534a\uff0c\u5426\u5219\u4e3a\u4e0b\u534a\u3002\n\n\u63a5\u7740\u9700\u8981\u5199\u4e00\u4e2a\u6bd4\u8f83\u51fd\u6570\uff0c\u7528\u6765\u5c06\u5706\u5f27\u6309\u7167\u4ea4\u70b9\u7684 $y$ \u5750\u6807\u6392\u5e8f\uff1a\n\n```cpp\nstruct Cmp{\n    bool operator ()(const Semi a, const Semi b) const {\n        double u, v;\n        if(abs(l - a.x) == a.r) u = a.y; else \n            u = a.y + (a.t ? 1 : -1) * sqrt(pow(a.r, 2) - pow(l - a.x, 2));\n        if(abs(l - b.x) == b.r) v = b.y; else \n            v = b.y + (b.t ? 1 : -1) * sqrt(pow(b.r, 2) - pow(l - b.x, 2));\n        if(a.t == true) u += 1e-9;\n        if(b.t == true) v += 1e-9;\n        return u < v;\n    }\n};\n```\n\n\u8fd9\u91cc\u9762 $l$ \u662f\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u7528\u6765\u63cf\u8ff0\u626b\u63cf\u7ebf $x=l$\u3002\u5bb9\u6613\u7b97\u51fa\u8fd9\u4e24\u4e2a\u5706\u5f27\u4e0e $x=l$ \u7684\u4ea4\u70b9\uff1a\n\n$$\\begin{aligned}\nh_{\\text{\u4e0a\u534a}}&=y+\\sqrt{r^2-(l-x)^2}\\cr\nh_{\\text{\u4e0b\u534a}}&=y-\\sqrt{r^2-(l-x)^2}\\cr\n\\end{aligned}$$\n\n\u5706\u5f27\u4f1a\u5728\u626b\u63cf\u7ebf\u626b\u8fc7\u4e00\u4e2a\u5706\u7684\u65f6\u5019\u88ab\u79fb\u51fa $\\text{set}$\uff0c\u6240\u4ee5\u4e0d\u7528\u62c5\u5fc3\u6ca1\u6709\u4ea4\u70b9\u7684\u60c5\u51b5\u3002\u63a5\u7740\u6bd4\u8f83 $u,v$ \u7684\u76f8\u5bf9\u5927\u5c0f\uff0c\u5c31\u80fd\u5bf9\u4e24\u4e2a\u5706\u5f27\u5b9a\u5e8f\u3002\u4e3a\u4ec0\u4e48\u975e\u5f97\u8981\u8fd9\u4e2a $l$\uff1f\u4e8b\u5b9e\u4e0a\uff0c\u5706\u5f27\u7684\u300c\u9ad8\u4f4e\u300d\u662f\u4e0e $l$ \u65e0\u5173\u7684\u786e\u5b9a\u5173\u7cfb\uff0c\u5e76\u4e0d\u4f1a\u56e0\u4e3a\u4e71\u52a8 $l$ \u5bfc\u81f4 $\\text{set}$ \u91cc\u9762\u5927\u5c0f\u5173\u7cfb\u9519\u4e71\u4ea7\u751f\u672a\u5b9a\u4e49\u884c\u4e3a\u3002\u4f46\u662f\u5982\u679c\u4e0d\u53d6\u51fa\u4e00\u4e2a\u5728\u5b9a\u4e49\u57df\u5185\u5408\u6cd5\u7684 $l$\uff0c\u5c31\u96be\u4ee5\u6bd4\u8f83\u9ad8\u4f4e\u5173\u7cfb\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c$\\verb!set!$ \u91cc\u5224\u5b9a\u4e24\u4e2a\u6570\u636e $u, v$ \u76f8\u540c\uff0c\u662f\u901a\u8fc7 $\\verb!cmp(u, v) == false!$ \u4e14 $\\verb!cmp(v, u) == false!$ \u6765\u5b9e\u73b0\u7684\u3002\u800c\u7531\u4e8e\u4e0a\u534a\u5706\u5f27\u548c\u4e0b\u534a\u5706\u5f27\u5728 $l=x-r$ \u548c $l=x+r$ \u4f4d\u7f6e\u76f8\u540c\uff0c\u6240\u4ee5\u4f1a\u88ab $\\verb!set!$ \u9519\u8bef\u5224\u65ad\u4e3a\u540c\u4e00\u5143\u7d20\u800c\u53ea\u4fdd\u7559\u5176\u4e2d\u4e00\u4e2a\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u7ed3\u679c\u52a0\u4e0a\u4e00\u4e2a\u504f\u79fb\u91cf $\\epsilon$ \u6765\u907f\u514d\u8be5\u95ee\u9898\u3002\n\n\u53e6\u5916\uff0c\u8c03\u7528 $\\text{pow}$ \u548c $\\text{sqrt}$ \u51fd\u6570\u662f\u6bd4\u8f83\u6162\u7684\uff0c\u6240\u4ee5\u5bf9\u4e8e $l=x-r$ \u548c $l=x+r$ \u60c5\u51b5\u7279\u5224\u53ef\u4ee5\u663e\u8457\u51cf\u5c0f\u5e38\u6570\u3002\u4e0d\u8fc7\u5982\u679c\u5f00 $\\text{O2}$ \u7684\u8bdd\u8dd1\u5f97\u98de\u5feb\uff0c\u5b8c\u5168\u7528\u4e0d\u7740\u5361\u5e38\u3002\n\n\u5269\u4e0b\u6765\u7684\u4e3b\u7a0b\u5e8f\u90e8\u5206\u5c31\u76f8\u5bf9\u7b80\u5355\u3002\u5c06\u6bcf\u4e2a\u5706\u4e24\u4fa7\u7684\u4f4d\u7f6e $(x-r,y)$ \u548c $(x+r,y)$ \u6309\u7167 $x$ \u5750\u6807\u6392\u5e8f\uff0c\u6309\u7167\u524d\u6587\u6240\u8ff0\u5904\u7406\u529e\u6cd5\u5373\u53ef\u3002\n\n## \u53c2\u8003\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define up(l, r, i) for(int i = l, END##i = r;i <= END##i;++ i)\n#define dn(r, l, i) for(int i = r, END##i = l;i >= END##i;-- i)\nusing namespace std;\ntypedef long long i64;\nconst int INF = 2147483647;\nstruct Semi{ int i, x, y, r; bool t; };\nint l;\nstruct Cmp{\n    bool operator ()(const Semi a, const Semi b) const {\n        double u, v;\n        if(abs(l - a.x) == a.r) u = a.y; else \n            u = a.y + (a.t ? 1 : -1) * sqrt(pow(a.r, 2) - pow(l - a.x, 2));\n        if(abs(l - b.x) == b.r) v = b.y; else \n            v = b.y + (b.t ? 1 : -1) * sqrt(pow(b.r, 2) - pow(l - b.x, 2));\n        if(a.t == true) u += 1e-9;\n        if(b.t == true) v += 1e-9;\n        return u < v;\n    }\n};\nset <Semi, Cmp> S;\nconst int MAXN = 2e5 + 3;\nconst int MAXM = 4e5 + 3;\nint F[MAXN], D[MAXN];\nint X[MAXN], Y[MAXN], R[MAXN], I[MAXM], n, m;\nint qread(){\n    int w = 1, c, ret;\n    while((c = getchar()) >  '9' || c <  '0') w = (c == '-' ? -1 : 1); ret = c - '0';\n    while((c = getchar()) >= '0' && c <= '9') ret = ret * 10 + c - '0';\n    return ret * w;\n}\nbool cmp(int a, int b){\n    int u = a > 0 ? X[a] - R[a] : X[-a] + R[-a];\n    int v = b > 0 ? X[b] - R[b] : X[-b] + R[-b];\n    return u < v;\n}\nint main(){\n    n = qread();\n    up(1, n, i){\n        X[i] = qread(), Y[i] = qread(), R[i] = qread();\n        I[++ m] =  i;\n        I[++ m] = -i;\n    }\n    sort(I + 1, I + 1 + m, cmp);\n    i64 ans = 0;\n    up(1, m, i){\n        int o = I[i];\n        int p = abs(o), x = X[p], y = Y[p], r = R[p];\n        l = o > 0 ? x - r : x + r;\n        Semi a = {p, x, y, r, 1};\n        Semi b = {p, x, y, r, 0};\n        if(o > 0){\n            auto q = S.lower_bound(a);\n            if(q == S.end()) F[p] = 0; else\n                F[p] = q -> t ? q -> i : F[q -> i];\n            S.insert(a);\n            S.insert(b);\n            D[p] = D[F[p]] + 1;\n            ans += 1ll * R[p] * R[p] * (D[p] % 2 == 1 ? 1 : -1);\n        } else {\n            S.erase(a), S.erase(b);\n        }\n    }\n    printf(\"%lld\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1682860884,
        "uid": 68344,
        "name": "\u79bb\u6563\u5c0f\u6ce2\u53d8\u6362\u00b0",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3268 \u3010[JLOI2016]\u5706\u7684\u5f02\u6216\u5e76\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e2a\u4e0d\u540c\u4e8e\u626b\u63cf\u7ebf\u7684\u505a\u6cd5\u3002\u9996\u5148\u5c06\u5706\u6309\u534a\u5f84\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u4e3a $(c_1, \\cdots, c_n)$\u3002\u4e8e\u662f\u5bf9\u6bcf\u4e2a\u5706 $c_i$\uff0c\u5b83\u53ea\u4f1a\u88ab\u7f16\u53f7\u6bd4 $i$ \u5c0f\u7684\u90a3\u4e9b\u5706\u5305\u542b\uff0c\u8bbe\u5176\u88ab $k_i$ \u4e2a\u5706\u5305\u542b\uff0c\u5219\u5b83\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a $(-1)^{k_i} \\times S(c_i)$\uff0c\u5176\u4e2d $S(c_i)$ \u8868\u793a\u5706 $c_i$ \u7684\u9762\u79ef\u3002\n\n\u5bf9\u6bcf\u4e2a $i$\uff0c\u6211\u4eec\u5e0c\u671b\u5feb\u901f\u5730\u6c42\u51fa $k_i$\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u82e5\u5706 $c_i$ \u88ab\u82e5\u5e72\u4e2a\u5706\u5305\u542b\uff0c\u5176\u4e2d\u7f16\u53f7\u6700\u5927\uff08\u5373\u534a\u5f84\u6700\u5c0f\uff09\u7684\u5706\u4e3a $c_j$\uff0c\u90a3\u4e48 $k_i = k_j + 1$\uff1b\u82e5 $c_i$ \u4e0d\u88ab\u4efb\u4f55\u5706\u5305\u542b\uff0c\u5219 $k_i = 0$\u3002\u4e8e\u662f\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u5305\u542b $c_i$ \u7684\u6700\u5c0f\u5706\uff0c\u6216\u5224\u65ad\u5176\u662f\u5426\u4e0d\u88ab\u4efb\u4f55\u5706\u5305\u542b\u3002\n\n\u6211\u4eec\u5c06\u6240\u6709\u5706\u5212\u5206\u6210 $\\left\\lceil\\log_2 \\max_{1 \\le i \\le n} r_i\\right\\rceil$ \u7c7b\uff0c\u5bf9\u6240\u6709\u7b2c $i$ \u7c7b\u5706 $c_j$\uff0c\u6ee1\u8db3 $2^{i - 1} \\le 2 \\times r_j \\lt 2^i$\uff0c\u5176\u4e2d $r_j$ \u8868\u793a\u5706 $c_j$ \u7684\u534a\u5f84\u3002\u63a5\u7740\u5bf9\u6240\u6709 $i$\uff0c\u5c06\u7b2c $i$ \u7c7b\u5706\u653e\u5165\u4e00\u4e2a\u5750\u6807\u7cfb\uff0c\u5e76\u5c06\u6b64\u5750\u6807\u7cfb\u5212\u5206\u6210\u82e5\u5e72\u4e2a\u8fb9\u957f\u4e3a $2^i$ \u7684\u6b63\u65b9\u5f62\u3002\u5bf9\u6bcf\u4e2a\u6b63\u65b9\u5f62\uff0c\u5b58\u4e0b\u6240\u6709\u201c\u5706\u9762\u4e0e\u8be5\u6b63\u65b9\u5f62\u9762\u6709\u4ea4\u201d$\\,^*$\u7684\u5706\u3002\u6ce8\u610f\u5230\u4e00\u4e2a\u6b63\u65b9\u5f62\u5185\u7684\u5706\u5173\u4e8e\u5305\u542b\u5173\u7cfb\u6784\u6210\u4e00\u5ea7\u68ee\u6797\uff0c\u4f46\u6bcf\u4e2a\u8fde\u901a\u5757\u90fd\u662f\u4e00\u6761\u94fe\uff08\u8fd9\u6b63\u662f\u5206\u7c7b\u65b9\u6cd5\u7684\u7cbe\u9ad3\uff09\uff0c\u540c\u65f6\u8fd9\u5ea7\u68ee\u6797\u7684\u8fde\u901a\u5757\u4e2a\u6570\u662f $O(1)$ \u7684\u3002\n\n\u4e8e\u662f\u89e3\u6cd5\u547c\u4e4b\u6b32\u51fa\uff1a\u6211\u4eec\u679a\u4e3e $i$\uff0c\u518d\u679a\u4e3e\u6bcf\u4e2a\u7c7b\uff0c\u7b97\u51fa $c_i$ \u7684\u5706\u5fc3\u5728\u8be5\u7c7b\u4e2d\u6240\u5728\u7684\u6b63\u65b9\u5f62\uff0c\u5e76\u68c0\u67e5\u8be5\u6b63\u65b9\u5f62\u5bf9\u5e94\u68ee\u6797\u7684\u6bcf\u4e00\u6761\u94fe\uff0c\u82e5\u94fe\u9876\uff08\u5373\u6700\u5927\u7684\u5706\uff09\u5305\u542b\u4e86 $c_i$\uff0c\u6211\u4eec\u5c31\u5728\u8be5\u94fe\u4e0a\u4e8c\u5206\u51fa $c_i$ \u7684\u4f4d\u7f6e\uff0c\u5426\u5219\u76f4\u63a5\u8df3\u8fc7\u8fd9\u6761\u94fe\u3002\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n \\times (\\log n + \\log \\max r))$\u3002\n\n\u7c7b\u4f3c\u7684\u4e00\u9053\u9898\uff1a[P4631 [APIO2018] Circle selection \u9009\u5706\u5708](https://www.luogu.com.cn/problem/P4631)\n\n$*$\uff1a\u5b9e\u9645\u4e0a\u5e76\u4e0d\u9700\u8981\u5224\u65ad\u662f\u5426\u6709\u4ea4\uff1a\u6bcf\u4e2a\u6b63\u65b9\u5f62\u76f4\u63a5\u5b58\u5706\u5fc3\u5728\u5468\u56f4\u7684 9 \u4e2a\u6b63\u65b9\u5f62\u5185\u7684\u90a3\u4e9b\u5706\uff0c\u662f\u4e2a\u66f4\u65b9\u4fbf\u7684\u9009\u62e9\u3002",
        "postTime": 1650290303,
        "uid": 211549,
        "name": "Andycraft",
        "ccfLevel": 0,
        "title": "[JLOI2016] \u5706\u7684\u5f02\u6216\u5e76"
    },
    {
        "content": "## \u626b\u63cf\u7ebf\n\n[\u535a\u5ba2\u9605\u8bfb](https://www.cnblogs.com/wljss/p/12658663.html)\n\n\u4e4b\u524d\u505a\u8fc7\u4e00\u5230\u7c7b\u4f3c\u7684\uff0c\u5f53\u65f6\u6ca1\u5199\u9898\u89e3\uff0c\u4eca\u5929\u6765\u8865\u4e0a\u3002\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\u5706\u6ca1\u6709\u4ea4\uff0c\u6240\u4ee5\u4e24\u4e2a\u5706\u53ea\u6709\u5305\u542b\u548c\u76f8\u79bb\u4e24\u79cd\u5173\u7cfb\u3002\n\n\u6211\u4eec\u8003\u8651\u7528\u626b\u63cf\u7ebf\u6765\u5904\u7406\uff0c\u968f\u7740\u626b\u63cf\u7ebf\u7684\u63a8\u79fb\uff0c\u548c\u4e0a\u9762\u7684\u5706\u7684\u4ea4\u70b9 \u4e00\u76f4\u90fd\u5728 \u548c\u4e0b\u9762\u7684\u5706\u7684\u4ea4\u70b9\u7684\u4e0a\u9762\uff0c\u53ef\u4ee5\u7528 $set$ \u6765\u7ef4\u62a4\u76f8\u5bf9\u4f4d\u7f6e\n\n\u600e\u4e48\u786e\u5b9a\u4e00\u4e2a\u5706\u5e94\u8be5\u662f\u52a0\u8fd8\u662f\u51cf\uff1f\u6211\u4eec\u5c06\u5706\u62c6\u5206\u6210\u4e0a\u534a\u5706\u548c\u4e0b\u534a\u5706\uff0c\u5c06\u4e0a\u534a\u5706\u63d2\u5165 $set$ \u540e\uff0c\u627e\u5728\u8fd9\u626b\u63cf\u7ebf\u4e0a\u5176\u4e0b\u9762\u7684\u90a3\u4e2a\u534a\u5706\u3002\n\n$1$ .\u82e5\u627e\u4e0d\u5230\uff0c\u54ea\u8fd9\u4e2a\u5706\u4e0d\u4f1a\u88ab\u5305\u542b\uff0c\u5e94\u8be5\u52a0\u4e0a\n\n$2$ .\u82e5\u662f\u4e0b\u534a\u5706\uff0c\u5219\u548c\u90a3\u4e2a\u5706\u7684\u52a0\u51cf\u72b6\u6001\u76f8\u53cd\u3002\n\n$3$ .\u82e5\u662f\u4e0a\u534a\u5706\uff0c\u5219\u548c\u90a3\u4e2a\u5706\u7684\u52a0\u51cf\u72b6\u6001\u76f8\u540c\u3002\n\n\u4e0a\u9762\u7684\u8fc7\u7a0b\u5efa\u8bae\u753b\u4e00\u4e0b\u56fe\u65b9\u4fbf\u7406\u89e3\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<set>\n#define DB double\nusing namespace std;\nint n, tot, now;\nlong long ans;\nDB nowx;\nconst int N = 200010;\nconst DB eps = 1e-9;\nint val[N];\nDB x[N], y[N], r[N];\nstruct cir\n{\n\tint opt, id;\n\tDB nowy()//\u6c42\u5706\u548c\u5f53\u524d\u626b\u63cf\u7ebf\u4ea4\u70b9\u7684y\u5750\u6807\n\t{\n\t\treturn y[id] + (DB)opt * sqrt(r[id] * r[id] - (x[id] - nowx) * (x[id] - nowx) + eps);\n\t}\n\tfriend bool operator <(cir x, cir y) {return x.nowy() < y.nowy();}\n};\nset<cir>s;\nset<cir>::iterator it;\nstruct xian\n{\n\tint opt, x, id;\n\tfriend bool operator <(const xian &x, const xian &y) {return x.x < y.x;}\n} li[N << 1];\nint main()\n{\n\tcin >> n;\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tscanf(\"%lf%lf%lf\", &x[i], &y[i], &r[i]);\n\t\tli[++tot] = (xian) {1, (int)(x[i] - r[i]), i};\n\t\tli[++tot] = (xian) {0, (int)(x[i] + r[i]), i};\n\t}\n\tsort(li + 1, li + 1 + tot);\n\tfor (int i = 1; i <= tot; ++i)\n\t{\n\t\tnowx = li[i].x;\n\t\tif (li[i].opt)\n\t\t{\n\t\t\tnow = li[i].id; it = s.insert((cir) {1, now}).first;\n\t\t\tif (it == s.begin())val[now] = 1;\n\t\t\telse\n\t\t\t{\n\t\t\t\t--it;\n\t\t\t\tif ((*it).opt == -1)val[now] = val[(*it).id] ^ 1;\n\t\t\t\telse val[now] = val[(*it).id];\n\t\t\t}\n\t\t\ts.insert((cir) { -1, now});\n\t\t\tif (val[now])ans += r[now] * r[now];\n\t\t\telse ans -= r[now] * r[now];\n\t\t}\n\t\telse s.erase((cir) {1, li[i].id}), s.erase((cir) { -1, li[i].id});\n\t}\n\tcout << ans;\n\treturn 0;\n}\n```",
        "postTime": 1587334902,
        "uid": 153843,
        "name": "wljss",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3268 \u3010[JLOI2016]\u5706\u7684\u5f02\u6216\u5e76\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a\u2026\u2026\u4e0d\u540c\u4e8e\u626b\u63cf\u7ebf\u7684\u505a\u6cd5\u3002\n\n## \u9898\u76ee\u5927\u610f\n\n- \u5e73\u9762\u4e0a\u6709 $n$ \u4e2a\u4e92\u76f8\u5305\u542b\u6216\u5206\u79bb\u7684\u5706\u3002\n\n- \u8ba1\u7b97\u88ab\u5947\u6570\u4e2a\u5706\u8986\u76d6\u7684\u533a\u57df\u7684\u9762\u79ef\u9664\u4ee5 $\\pi$\u3002\n\n- $n\\in[1,2\\times 10^5]$\uff0c\u5750\u6807\u534a\u5f84\u6570\u91cf\u7ea7\u5728 $10^8$\u3002\n\n# \u4e00. \u5206\u6790\n\n\u7531\u4e8e\u5706\u4e4b\u95f4\u8981\u4e48\u5206\u79bb\u8981\u4e48\u5305\u542b\uff0c\u90a3\u4e48\u5982\u679c\u4e00\u4e2a\u5706\u88ab\u5947\u6570\u4e2a\u5706\u5305\u542b\uff0c\u5c31\u51cf\u53bb\u4ed6\u7684\u9762\u79ef\uff0c\u53cd\u4e4b\u52a0\u4e0a\u4ed6\u7684\u9762\u79ef\u3002\n\n\u8fd8\u6709\uff0c\u5982\u679c\u4e00\u4e2a\u5706\u5305\u542b\u53e6\u5916\u4e00\u4e2a\u5706\uff0c\u90a3\u4ed6\u7684\u534a\u5f84\u5c31\u6bd4\u4ed6\u5927\u3002\u8fd9\u542f\u53d1\u6211\u4eec\u8bbe\u8ba1\u4e00\u79cd\u65b9\u6cd5\uff0c\u4ece\u5927\u5230\u5c0f\u628a\u5706\u52a0\u5165\u5e73\u9762\u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u5706\u88ab\u52a0\u5165\u524d\u5706\u5fc3\u88ab\u8986\u76d6\u4e86\u5947\u6570\u6b21\uff0c\u9762\u79ef\u662f\u8d1f\u7684\uff0c\u5426\u5219\u662f\u6b63\u7684\u3002\n\n\u8003\u8651\u7528\u67d0\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u4e8c\u7ef4\u5706\u5f62\u533a\u57df\u52a0\uff0c\u5355\u70b9\u67e5\u3002\u8fd9\u53ef\u4ee5\u7528 K-D Tree \u505a\uff0c\u5224\u65ad\u5706\u4e0e\u77e9\u5f62\u662f\u5426\u6709\u4ea4\u96c6\uff0c\u5b8c\u5168\u8986\u76d6\u533a\u95f4\u5c31\u6253\u52a0\u6807\u8bb0\u3002\n\n\u4e0d\u8fc7\u666e\u901a\u7684\u4e8c\u53c9 K-D Tree \u5206\u5272\u533a\u57df\u65f6\u4f1a\u5bfc\u81f4\u5de6\u53f3\u513f\u5b50\u4ee3\u8868\u7684\u5e73\u9762\u6709\u4ea4\u96c6\uff0c\u6807\u8bb0\u4f1a\u91cd\u590d\u7b97\u8d21\u732e\u3002\u89e3\u51b3\u65b9\u6cd5\u662f\uff0c\u628a\u9009\u51fa\u7684\u7ef4\u5ea6\u4e0e\u4e2d\u4f4d\u6570\u76f8\u540c\u7684\u70b9\u62ff\u51fa\u6765\u518d\u5f00\u4e00\u4e2a\u513f\u5b50\uff0c\u8fd9\u6837\u53d8\u6210\u4e86\u4e09\u53c9 K-D Tree\uff0c\u5efa\u6811\u8fd8\u662f $O(n \\log n)$\uff08\u5f53\u7136\u5982\u679c\u6392\u5e8f\u7684\u8bdd\u5c31\u662f $O(n \\log^2 n)$\uff09\u3002\u6ce8\u610f\u7ed3\u70b9\u6570\u5f00\u6210 $2n$\u3002\n\n\u5224\u65ad\u5706\u4e0e\u77e9\u5f62\u662f\u5426\u65e0\u4ea4\u96c6\u6216\u5305\u542b\uff0c\u8ba1\u7b97\u51fa\u5706\u5fc3\u5230\u77e9\u5f62\u67d0\u70b9\u7684\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6\u2026\u2026\u4e0d\u77e5\u9053\uff0c\u53ef\u80fd\u5c31\u662f\u5047\u7684\uff0c\u4f46\u662f\u9898\u76ee\u7684\u6570\u636e\u7ecf\u7279\u6b8a\u6784\u9020\uff0c\u5e38\u6570\u5341\u5206\u5c0f\u3002\n\n# \u4e8c. \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define Lson(x) node[x].Son[0]\n#define Mson(x) node[x].Son[1]\n#define Rson(x) node[x].Son[2]\nusing namespace std;\n\ntypedef long long ll;\n\nconst int MAXN=2e5;\nconst ll MAXV=1e8;\n\nstruct Circle\n{\n\tll x,y,r;\n\tvoid Scan() {scanf(\"%lld %lld %lld\",&x,&y,&r);}\n}ver[MAXN+5];\n\nstruct Point\n{\n\tll x,y;\n\tbool operator == (const Point &a) const\n\t{return x==a.x && y==a.y;}\n\tvoid Print() {printf(\"%d %d\\n\",x,y);}\n}p[MAXN+5];int m;\n\nint n;\nll ans;\n\nbool cmp(Point a,Point b) {return (a.x==b.x ? a.y<b.y : a.x<b.x);}\nbool cmpx(Point a,Point b) {return a.x<b.x;}\nbool cmpy(Point a,Point b) {return a.y<b.y;}\nbool cmpr(Circle a,Circle b) {return a.r>b.r;}\n\nstruct KDTree\n{\n\tint Son[3];\n\tll L,R,D,U;\n\tint LT;\n\tbool IN(ll X,ll Y) {return L<=X && X<=R && D<=Y && Y<=U;}\n}node[2*MAXN+5];int tot;\n\nvoid PushUp(int now)\n{\n\tnode[now].L=node[now].D=MAXV;\n\tnode[now].R=node[now].U=-MAXV;\n\tif(Lson(now))\n\t{\n\t\tnode[now].L=min(node[now].L,node[Lson(now)].L);\n\t\tnode[now].R=max(node[now].R,node[Lson(now)].R);\n\t\tnode[now].D=min(node[now].D,node[Lson(now)].D);\n\t\tnode[now].U=max(node[now].U,node[Lson(now)].U);\n\t}\n\tif(Mson(now))\n\t{\n\t\tnode[now].L=min(node[now].L,node[Mson(now)].L);\n\t\tnode[now].R=max(node[now].R,node[Mson(now)].R);\n\t\tnode[now].D=min(node[now].D,node[Mson(now)].D);\n\t\tnode[now].U=max(node[now].U,node[Mson(now)].U);\n\t}\n\tif(Rson(now))\n\t{\n\t\tnode[now].L=min(node[now].L,node[Rson(now)].L);\n\t\tnode[now].R=max(node[now].R,node[Rson(now)].R);\n\t\tnode[now].D=min(node[now].D,node[Rson(now)].D);\n\t\tnode[now].U=max(node[now].U,node[Rson(now)].U);\n\t}\n}\n\ndouble squ(double x) {return x*x;}\n\nint Build(int L,int R)\n{\n\tif(L>R) return 0;\n\tint mid=(L+R)>>1,now=++tot;\n\tif(L==R)\n\t{\n\t\tnode[now].L=node[now].R=p[L].x;\n\t\tnode[now].D=node[now].U=p[L].y;\n\t\treturn now;\n\t}\n\tdouble avex=0,avey=0,evax=0,evay=0;\n\tfor(int i=L;i<=R;i++) avex+=p[i].x,avey+=p[i].y;\n\tavex/=(R-L+1),avey/=(R-L+1);\n\tfor(int i=L;i<=R;i++) evax+=squ(p[i].x-avex),evay+=squ(p[i].y-avey);\n\tint Lmid=mid,Rmid=mid;\n\tif(evax>evay)\n\t{\n\t\tsort(p+L,p+R+1,cmpx);\n\t\twhile(Lmid>L)\n\t\t\tif(p[Lmid-1].x==p[mid].x) --Lmid;\n\t\t\telse break;\n\t\twhile(Rmid<R)\n\t\t\tif(p[Rmid+1].x==p[mid].x) ++Rmid;\n\t\t\telse break;\n\t}\n\telse\n\t{\n\t\tsort(p+L,p+R+1,cmpy);\n\t\twhile(Lmid>L)\n\t\t\tif(p[Lmid-1].y==p[mid].y) --Lmid;\n\t\t\telse break;\n\t\twhile(Rmid<R)\n\t\t\tif(p[Rmid+1].y==p[mid].y) ++Rmid;\n\t\t\telse break;\n\t}\n\t\n\tLson(now)=Build(L,Lmid-1);\n\tMson(now)=Build(Lmid,Rmid);\n\tRson(now)=Build(Rmid+1,R);\n\tPushUp(now);\n\treturn now;\n}\n\nll Dis(ll x,ll y) {return x*x+y*y;}\nll SQU(ll x) {return x*x;}\n\nll minDis(ll x,ll y,ll L,ll R,ll D,ll U)\n{\n\tif(L<=x && x<=R && D<=y && y<=U) return 0;\n\tll d=min(min(Dis(x-L,y-D),Dis(x-L,y-U)),min(Dis(x-R,y-D),Dis(x-R,y-U)));\n\tif(L<=x && x<=R) d=min(d,min(SQU(y-D),SQU(y-U)));\n\tif(D<=y && y<=U) d=min(d,min(SQU(x-L),SQU(x-R)));\n\treturn d;\n}\n\nll maxDis(ll x,ll y,ll L,ll R,ll D,ll U)\n{return max(max(Dis(x-L,y-D),Dis(x-L,y-U)),max(Dis(x-R,y-D),Dis(x-R,y-U)));}\n\nvoid Plus(int now,ll x,ll y,ll r,int v)\n{\n\tif(!now) return;\n\tif(minDis(x,y,node[now].L,node[now].R,node[now].D,node[now].U)>r*r) return;\n\tif(maxDis(x,y,node[now].L,node[now].R,node[now].D,node[now].U)<=r*r)\n\t\t{node[now].LT+=v;return;}\n\tPlus(Lson(now),x,y,r,v);\n\tPlus(Mson(now),x,y,r,v);\n\tPlus(Rson(now),x,y,r,v);\n}\n\nint Ask(int now,ll x,ll y)\n{\n\tif(!now) return 0;\n\tif(!node[now].IN(x,y)) return 0;\n\treturn Ask(Lson(now),x,y)+Ask(Mson(now),x,y)+Ask(Rson(now),x,y)+node[now].LT;\n}\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tver[i].Scan();\n\t\tp[i].x=ver[i].x,p[i].y=ver[i].y;\n\t}\n\tsort(p+1,p+n+1,cmp);\n\tm=unique(p+1,p+n+1)-p-1;\n\tBuild(1,m);\n\tsort(ver+1,ver+n+1,cmpr);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tPlus(1,ver[i].x,ver[i].y,ver[i].r,1);\n\t\tif(Ask(1,ver[i].x,ver[i].y)&1) ans+=SQU(ver[i].r);\n\t\telse ans-=SQU(ver[i].r);\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1645258249,
        "uid": 54591,
        "name": "Seauy",
        "ccfLevel": 9,
        "title": "[JLOI2016]\u5706\u7684\u5f02\u6216\u5e76 \u7684\u9898\u89e3"
    }
]