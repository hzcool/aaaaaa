[
    {
        "content": "#### \u9898\u76ee\u5927\u610f\n\n> \u6c42\u6ee1\u8db3\u201c\u65e5\u201d\u7ec4\u6210\u7684\u4e24\u4f4d\u6570\uff0c\u201c\u6708+\u65e5\u201d\u7ec4\u6210\u7684\u56db\u4f4d\u6570\uff0c\u201c\u5e74+\u6708+\u65e5\u201d\u7ec4\u6210\u7684\u516b\u4f4d\u6570\u5747\u4e3a\u8d28\u6570\u7684\u65e5\u671f\u7684\u4e2a\u6570\u3002\n\n#### \u524d\u7f6e\u77e5\u8bc6\n\n- ~~\u4e71\u641e~~\u641c\u7d22\n- \u8d28\u6570\n\n#### \u9898\u89e3\n\n\u7565...\n\n\u53ea\u8981\u4fdd\u8bc1\u6b63\u786e\u6027\u4e14\u4e0d\u4f1a\u8d85\u65f6\u5f97\u592a\u8fc7\u5206\u90fd\u80fd AC\n\n~~\u522b\u95ee\u6211\u90e8\u5206\u5206\u6709\u5565\u7528\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053~~\n\n\u4e24\u4e2a\u6613\u9519\u70b9\uff1a\n\n1. $29$ \u4e3a\u8d28\u6570\uff0c$229$ \u4e5f\u4e3a\u8d28\u6570\uff0c\u56e0\u6b64\u8981\u6b63\u786e\u5224\u65ad\u95f0\u5e74\u3002\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c$3200,6400,9600$ \u5e74\u662f\u5426\u4e3a\u95f0\u5e74\u5b58\u5728\u4e89\u8bae\uff0c\u4f46\u5e76\u4e0d\u5f71\u54cd\u672c\u9898\uff0c\u56e0\u4e3a $32000229,64000229,96000229$ \u5747\u4e0d\u662f\u8d28\u6570\u3002\n2. $1$ \u4e0d\u662f\u8d28\u6570\uff0c\u56e0\u6b64\u201c\u65e5\u201d\u4e0d\u80fd\u4e3a $1$\u3002\n\n#### \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int p[] = {0,3,5,7,11,13,17,19,23,29,31,37};\nconst int d[] = {0,31,28,31,30,31,30,31,31,30,31,30,31};\nint T, a[66], t, ans[66666], tot;\nchar s[10];\n\ninline bool is_prime(int x) {\n    for (int i = 2; i * i <= x; i++)\n        if (x % i == 0) return 0;\n    return 1;\n}\n\nint main() {\n    ios::sync_with_stdio(0);\n    for (int i = 1; i <= 12; i++)\n        for (int j = 1; p[j] <= d[i]; j++)\n            if (is_prime(i * 100 + p[j]))\n                a[++t] = i * 100 + p[j];\n    for (int i = 4; i <= 9999; i += 4)\n    \tif ((i % 100 || !(i % 400)) && is_prime(i * 10000 + 229))\n    \t\tans[++tot] = i * 10000 + 229;\n    for (int i = 1; i <= 9999; i++)\n        for (int j = 1; j <= t; j++)\n            if (is_prime(i * 10000 + a[j]))\n                ans[++tot] = i * 10000 + a[j];\n    cin >> T;\n    while (T--) {\n        cin >> (s + 1);\n        int cnt = 0;\n        for (int i = 1; i <= tot; i++) {\n            int now = ans[i], flag = 1;\n            for (int j = 8; flag && j; j--, now /= 10)\n                if (s[j] != '-' && s[j] - '0' != now % 10)\n                    flag = 0;\n            cnt += flag;\n        }\n        cout << cnt << endl;\n    } \n    return 0;\n}\n```",
        "postTime": 1561812990,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5440 \u3010\u3010XR-2\u3011\u5947\u8ff9\u3011"
    },
    {
        "content": "\u770b\u4e86\u4e00\u4e0b\u9898\u89e3\u533a\uff0c\u597d\u50cf\u6ca1\u6709\u4eba\u548c\u6211\u5199\u7684\u4e00\u6837\u3002\u6211\u7684\u4e3b\u8981\u601d\u8def\u662f\u786e\u5b9a\u679a\u4e3e\u4e0a\u4e0b\u754c\uff0c\u63d0\u9ad8\u679a\u4e3e\u6548\u7387\u3002\u53e6\u5916\uff0c\u6539\u53d8\u679a\u4e3e\u987a\u5e8f\u4e5f\u662f\u63d0\u9ad8\u6548\u7387\u7684\u597d\u65b9\u6cd5\u3002\n\n# \u8bb2\u8bb2\u6211\u7684\u505a\u6cd5\n\u9898\u76ee\u4e2d\u8bf4\u8f93\u5165\u4e00\u4e2a\u957f\u5ea6\u4e3a$8$\u7684\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u4e32\u4e2d\u6709\u5b57\u7b26\u4e3a$-$\uff0c\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe\u8fd9\u4e00\u4f4d\u4e0a\u4e0b\u754c\u4e3a$0$~$9$\uff0c~~\u7136\u540e\u6211\u4eec\u6253\u4e00\u4e2a\u516b\u91cd\u5faa\u73af\u5c31\u597d\u4e86\u3002~~\uff0c\u9884\u5904\u7406\u6ee1\u8db3\u6761\u4ef6\u7684\u65e5\u548c\u6708\u7ec4\u6210\u7684\u56db\u4f4d\u6570\u3002\u8fd9\u4e2a\u9884\u5904\u7406\u6211\u4eec\u53ea\u9700\u6253\u4e00\u4e2a\u7ebf\u6027\u7b5b\uff0c\u7b5b\u9009$0$~$9999$\u7684\u7d20\u6570\uff0c\u5c31\u597d\u4e86\u3002$\\tiny\\texttt{\u4e0d\u4f1a\u7ebf\u6027\u7b5b\uff0c\u666e\u901a\u7b5b\u4e5f\u662f\u53ef\u4ee5\u7684\u3002}$\u7136\u540e\u679a\u4e3e\u9884\u5904\u7406\u7684\u65e5\u6708\u7ec4\u6210\u7684\u56db\u4f4d\u6570\uff0c\u5e76\u5224\u65ad\u662f\u5426\u7b26\u5408\u5f53\u524d\u5b57\u7b26\u4e32\u3002\u7136\u540e\uff0c\u679a\u4e3e\u5e74\u4efd\uff0c\u901a\u8fc7\u7b5b\u9009\u51fa\u7684\u7d20\u6570\u5224\u65ad\u65e5\u6708\u5e74\u7ec4\u6210\u7684\u516b\u4f4d\u6570\u662f\u5426\u662f\u7d20\u6570\u3002  \n\n\u53e6\u5916\uff0c\u5f53\u51fa\u73b0$--------$\u65f6\uff0c\u53ef\u4ee5\u7279\u5224\uff0c\u901f\u5ea6\u4f1a\u63d0\u9ad8\u5f88\u591a\u3002  \n\u6211\u7684\u8bb0\u5f55\uff1a\n- [$\\small\\color{#ff4081}\\texttt{\u52a0\u7279\u5224}$](https://www.luogu.org/recordnew/show/20146339)$637ms$\n- [$\\small\\color{#ff4081}\\texttt{\u672a\u52a0\u7279\u5224}$](https://www.luogu.org/recordnew/show/20146213)$3405ms$\n\n## $code:$\n```cpp\n#include <cstdio>\n#include <bitset>\n#include <iostream>\n#define year (a*1000+b*100+c*10+d)\nusing namespace std;\n\nint read()\n{\n    int x=0,f=1;char c=getchar();\n    while (c<'0' || c>'9'){if (c=='-')f=-1;c=getchar();}\n    while (c>='0'&&c<='9'){x=(x<<1)+(x<<3)+c-48;c=getchar();}\n    return x*f;\n}\n\nconst int MAXN=10005;\nconst int sum[]={0,229,103,107,113,131,211,223,307,311,313,317,331,419,503,523,607,613,617,619,719,811,823,829,907,911,919,929,1013,1019,1031,1103,1117,1123,1129,1213,1217,1223,1229,1231};\n\t\t\t\t\t\t\t\t\t\t\t\t\t//\u6211\u628a\u6ee1\u8db3\u6761\u4ef6\u7684\u65e5\u6708\u6253\u4e86\u8868\uff0c\u8fd9\u6253\u8868\u4ee3\u7801\u7279\u7b80\u5355\u5c31\u4e0d\u7ed9\u51fa\u4e86\nstring s;\nint len,ans;\nint prim[MAXN],tot;\nint l[10],r[10];\nbitset<MAXN> v;\n\ninline void prime()\t\t\t\t\t\t\t\t\t//\u7ebf\u6027\u7b5b\n{\n    v[1]=true;\n    for (int i=2;i<=MAXN;i++)\n    {\n        if (!v[i]) prim[++tot]=i;\n        for (int j=1;j<=tot;j++)\n        {\n            if (i*prim[j]>=MAXN) break;\n            v[i*prim[j]]=true;\n            if (i%prim[j]==0) break;\n        }\n    }\n}\n\ninline bool ok(int x)\t\t\t\t\t\t\t\t//\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u5f53\u524d\u5b57\u7b26\u4e32\n{\n    int w=8;\n    while (x>0)\n    {\n        if (l[w]>(x%10)||r[w]<(x%10)) return false;\n        w--;x/=10;\n    }\n    if (w>=5)\n        for (int i=5;i<=w;i++) if (l[i]!=0) return false;\n    return true;\n}\n\ninline bool is_(int n)\n{\n    for (int i=1;i<=tot;i++)\n        if (n%prim[i]==0) return false;\n    return true;\n}\n\nint main()\n{\n    prime();\n    int cas,i,a,b,c,d;cas=read();\n    while (cas--)\n    {\n        cin>>s;ans=0;bool flag=true;\n        for (i=0;i<8;i++)\n        {\n            if (s[i]!='-') l[i+1]=r[i+1]=s[i]-48,flag=false;\n            else l[i+1]=0,r[i+1]=9;\n        }\n        if (flag) printf(\"%d\\n\",55157);\n        else \n        {\n            for (i=1;i<=39;i++)\n                if (ok(sum[i]))\n                    for (a=l[1];a<=r[1];a++)\n                        for (b=l[2];b<=r[2];b++)\n                            for (c=l[3];c<=r[3];c++)\n                                for (d=l[4];d<=r[4];d++)\n                                {\n                                    if (i==1)\n                                    {\n                                        if ((year%4==0)&&((year%100!=0)||(year%400==0)));//\u95f0\u5e74\u7279\u5224\n                                        else continue;\t\n                                    }\n                                    if (year!=0&&is_(year*10000+sum[i])) ans++;\n                                }\n            printf(\"%d\\n\",ans);\n        }\n    }\n    return 0;\n}\n```\n\n$Please~give~a~like.$",
        "postTime": 1561900444,
        "uid": 141348,
        "name": "\u26a1LZSY01_XZY\u26a1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5440 \u3010\u3010XR-2\u3011\u5947\u8ff9\u3011"
    },
    {
        "content": "#### \u8fd9\u53c8\u662f\u4e00\u9053\u65b0\u51fa\u7684\u641c\u7d22\u597d\u9898\u3002\n\n\u6253\u4e00\u6ce2\u5e7f\u544a\uff1a[\u6211\u7684\u535a\u5ba2](https://xciyang.github.io/)\n\n### \u5206\u6790\n\n\u6b63\u89e3\u641c\u7d22\u6216\u66b4\u529b\u679a\u4e3e\uff0c\u4ee3\u7801\u533a\u5df2\u7ecf\u51e0\u4e4e\u662f\u76f8\u540c\u7684\u601d\u8def\uff0c\u53ea\u662f\u6709\u4e9b\u5927\u4f6c\u6709\u5f88\u591a\u4f18\u5316\uff0c\u6548\u7387\u5feb\uff0c\u4f46\u662f\u7279\u6279\u6709\u5f88\u591a\u5e76\u4e14\u6781\u5176\u590d\u6742\u3002\u7ecf\u5bf9\u6bd4\u6211\u89c9\u5f97\u6211\u7684\u4ee3\u7801\u53ef\u89c6\u6027\u8fd8\u662f\u4e0d\u9519\u7684\uff0c\u5e76\u4e14\u6ca1\u6709\u4e71\u4e03\u516b\u7cdf\u7684\u7279\u5224\uff0c\u53ef\u4ee5\u8bf4\u662f\u5e38\u89c4DFS\u4ee3\u7801+\u7b5b\u8d28\u6570\u4f18\u5316\u7684\u4ee3\u7801\u3002\n\n\u4e0b\u9762\u8bf4\u4e00\u4e0b\u601d\u8def\u3002\u9996\u5148\u9898\u76ee\u5f88\u597d\u7406\u89e3\uff0c\u4e00\u4e2a\u6709\u6548\u65e5\u671f\uff0c\u65e5\u3001\u6708+\u65e5\u3001\u5e74+\u6708+\u65e5\u7ec4\u6210\u7684\u6570\u5b57\u5747\u4e3a\u8d28\u6570\uff0c\u90a3\u5c31\u5148\u4e0d\u8003\u8651\u4f18\u5316\uff0c\u76f4\u63a5\u4e0a\u6a21\u62df\u3002\n\n\u6309DFS\u7684\u5e38\u89c4\u6a21\u677f\uff08\u81ea\u5df1\u603b\u7ed3\u51fa\u6765\u7684\uff09\uff0c\u5148\u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u4ee3\u8868\u641c\u7d22\u5230\u54ea\u4e00\u4f4d\u3002\u5728\u672c\u9898\u4e2d\u5c31\u662f\u65e5\u671f\u7684\u7b2c\u51e0\u4f4d\u6570\u5b57\uff0c\u6211\u9009\u62e9\u7684\u987a\u5e8f\u4e3a\uff1a\u65e5->\u6708->\u5e74\uff0c\u8fd9\u6837\u53ef\u4ee5\u9010\u5c42\u5224\u65ad\uff0c\u800c\u4e14\u6548\u7387\u8f83\u9ad8\u4ee3\u7801\u4f18\u96c5\u3002\n\n\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff0c\u662f\u4e3a\u4e86\u65b9\u4fbf\u548c\u5c0f\u5e45\u63d0\u5347\u6548\u7387\uff0c\u6211\u4eec\u628a\u5df2\u7ecf\u679a\u4e3e\u5b8c\u7684\u4f4d\u7f16\u6210\u4e00\u4e2a\u6574\u6570$ x $\uff0c\u7136\u540e\u65e5\u5c31\u662f x % 100 \uff0c\u6708\u5c31\u662f x % 10000 /  100 \uff0c\u5e74\u5c31\u662fx / 10000\n\u3002\n\n\u8fd9\u9053\u9898\u4e2d\u8fd8\u9700\u8981\u8003\u8651\u5230\u7279\u6b8a\u60c5\u51b5\uff0c\u662f\u5426\u5fc5\u987b\u4e3a\u95f0\u5e74\u6216\u5927\u6708\u3002\u6211\u4e3a\u4e86\u65b9\u4fbf\uff0c\u5f53\u6210\u4e24\u4e2a\u53c2\u6570\u6765\u4f20\u9012\uff0c\u73b0\u5728\u60f3\u60f3\u597d\u50cf\u53ef\u4ee5\u6539\u4e00\u4e2a\u3002\u56e0\u4e3a\u4e00\u4e2a\u53ea\u8003\u8651\u5e74\u4efd\uff0c\u4e00\u4e2a\u53ea\u8003\u8651\u6708\u4efd\u3002DFS\u5e26\u8be6\u7ec6\u6ce8\u91ca\u4ee3\u7801\u5982\u4e0b\uff0c\u81ea\u5df1\u89c9\u5f97\u7b97\u5f97\u4e0a\u4f18\u96c5\u3002\n```cpp\n// \u8c03\u7528\u65b9\u6cd5: dfs(8, 0, 0, 0)\nint dfs(int nown, int num, int rn, int jy) {\n\tif(nown == 0) {\n    // \u65e5\u671f\u5168\u90e8\u679a\u4e3e\u5b8c\n\t\tif(num / 10000 == 0) return 0;\n    // \u975e\u5e38\u5173\u952e\uff0c0\u4e0d\u80fd\u5f53\u5e74\u4efd\uff08\u6211\u4e00\u5f00\u59cb\u6ca1\u52a0\u5c31\u5f9710\u5206\uff09\n\t\tif(rn && pdrn(num / 10000) == 0) return 0;\n    // \u5982\u679c\u5fc5\u987b\u4e3a\u95f0\u5e74\u5c31\u5224\u65ad\u5e74\u4efd\n\t\treturn pdzs(num);\n    // \u603b\u65e5\u671f\u8fd8\u5f97\u4e3a\u8d28\u6570\n\t}\n\tif(nown == 6) {\n    // \u679a\u4e3e\u5b8c\u65e5\n\t\tif(num == 0 || num > 31 || !pdzs(num)) return 0;\n    // \u5982\u679c\u662f\u7b49\u4e8e0\u65e5\u300131\u65e5\u4ee5\u4e0a\u6216\u4e0d\u662f\u8d28\u6570\u5c31return\n\t\tif(num == 31) jy= 1;\n    // \u5982\u679c\u662f31\u65e5\u5c31\u5fc5\u987b\u4e3a\u5927\u6708\n\t}\n\tif(nown == 4) {\n    // \u5224\u65ad\u5b8c\u65e5\u3001\u6708\n\t\tif(num < 32 || num > 1231 || !pdzs(num)) return 0;\n    // \u5982\u679c\u662f\u7b49\u4e8e0\u6708\u300113\u6708\u4ee5\u4e0a\u6216\u4e0d\u662f\u8d28\u6570\u5c31return\n\t\tif(jy && !yue[num / 100]) return 0;\n    // \u5982\u679c\u5fc5\u987b\u4e3a\u5927\u6708\u5c31\u5224\u65ad\u6708\u4efdnum / 100\uff0cyue\u6570\u7ec4\u4ee3\u8868\u662f\u5426\u4e3a\u5927\u6708\n\t\tif(num / 100 == 2) {\n\t\t\tif(num % 100 > 29) return 0;\n        // 2\u6708\u6700\u591a29\u5929\n\t\t\tif(num % 100 == 29) rn= 1;\n        // \u5982\u679c\u662f2\u670829\u65e5\u5c31\u5fc5\u987b\u4e3a\u95f0\u5e74\n\t\t}\n\t}\n\tif(a[nown] != -1) return dfs(nown - 1, a[nown] * p10[8 - nown] + num, rn, jy);\n    // \u5982\u679c\u8f93\u5165\u7ed9\u51fa\u5c31\u76f4\u63a5\u8fdb\u5165\u4e0b\u4e00\u5c42\uff0cp10\u6570\u7ec4\u76f8\u5f53\u4e8epow10\n\tint res= 0;\n\tfor(int i= 0; i <= 9; i++) res+= dfs(nown - 1, i * p10[8 - nown] + num, rn, jy);\n    // \u679a\u4e3e0~9\u4e3a\u6b64\u4f4d\n\treturn res;\n}\n```\n\n\u5982\u679c\u662f\u7528\u590d\u6742\u5ea6\u4e3a$ O(\\sqrt{n}) $ \u7684\u5224\u65ad\u8d28\u6570\u5c31\u53ea\u670990\u5206\uff0c\u6240\u4ee5\u8fd8\u5f97\u7528\u7ebf\u6027\u7b5b\u9884\u5904\u7406\u51fa$  \\sqrt{100000000} = 10000 $ \u4ee5\u5185\u7684\u8d28\u6570\uff0c\u7136\u540e\u6211\u4eec\u5224\u65ad\u8d28\u6570\u5c31\u5bf9\u8fd9\u4e9b\u6570\u53d6\u6a21\u5c31\u884c\u4e86\uff0c\u5177\u4f53\u539f\u7406\u4e0d\u518d\u89e3\u91ca\u3002\n\n```cpp\n// \u7b5b10005\u4ee5\u5185\u7684\u8d28\u6570\ninline void init() {\n\tflag[1]= 1;\n\tfor(int i= 2; i < 10005; i++) {\n\t\tif(!flag[i]) prim[++tot]= i;\n\t\tfor(int j= 1; j <= tot; j++) {\n\t\t\tif(i * prim[j] >= 10005) break;\n\t\t\tflag[i * prim[j]]= 1;\n\t\t\tif(i % prim[j] == 0) break;\n\t\t}\n\t}\n\treturn;\n}\n// \u5224\u65ad\u8d28\u6570\ninline int pdzs(int x) {\n\tif(x < 2) return 0;\n\tfor(int i= 1; i <= tot; i++)\n\t\tif(x % prim[i] == 0) return x == prim[i];\n\treturn 1;\n}\n```\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u6109\u5feb\u7684AC\u4e86\uff0c\u603b\u4ee3\u7801\u53ea\u670970\u884c\u4e14\u7b80\u5355\u4f18\u96c5\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <stdio.h>\n#include <math.h>\nusing namespace std;\nint n, a[9], prim[10005], flag[10005], tot;\nchar tmpc;\nint p10[]= {1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000};\nint yue[]= {0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1};\ninline void init() {\n\tflag[1]= 1;\n\tfor(int i= 2; i < 10005; i++) {\n\t\tif(!flag[i]) prim[++tot]= i;\n\t\tfor(int j= 1; j <= tot; j++) {\n\t\t\tif(i * prim[j] >= 10005) break;\n\t\t\tflag[i * prim[j]]= 1;\n\t\t\tif(i % prim[j] == 0) break;\n\t\t}\n\t}\n\treturn;\n}\ninline int pdrn(int x) {\n\treturn (x % 4 == 0 && x % 100 != 0) || (x % 400 == 0 && x % 3200 != 0);\n}\ninline int pdzs(int x) {\n\tif(x < 2) return 0;\n\tfor(int i= 1; i <= tot; i++)\n\t\tif(x % prim[i] == 0) return x == prim[i];\n\treturn 1;\n}\nint dfs(int nown, int num, int rn, int jy) {\n\tif(nown == 0) {\n\t\tif(num / 10000 == 0) return 0;\n\t\tif(rn && pdrn(num / 10000) == 0) return 0;\n\t\treturn pdzs(num);\n\t}\n\tif(nown == 6) {\n\t\tif(num == 0 || num > 31 || !pdzs(num)) return 0;\n\t\tif(num == 31) jy= 1;\n\t}\n\tif(nown == 4) {\n\t\tif(num < 32 || num > 1231 || !pdzs(num)) return 0;\n\t\tif(jy && !yue[num / 100]) return 0;\n\t\tif(num / 100 == 2) {\n\t\t\tif(num % 100 > 29) return 0;\n\t\t\tif(num % 100 == 29) rn= 1;\n\t\t}\n\t}\n\tif(a[nown] != -1) return dfs(nown - 1, a[nown] * p10[8 - nown] + num, rn, jy);\n\tint res= 0;\n\tfor(int i= 0; i <= 9; i++) res+= dfs(nown - 1, i * p10[8 - nown] + num, rn, jy);\n\treturn res;\n}\nchar get() {\n\tchar ch= getchar();\n\twhile((ch < '0' || ch > '9') && ch != '-') ch= getchar();\n\treturn ch;\n}\nvoid put(int x) {\n\tif(x > 9) put(x / 10);\n\tputchar('0' + x % 10);\n\treturn;\n}\nint main() {\n\tinit(), cin >> n;\n\twhile(n--) {\n\t\tfor(int i= 1; i <= 8; i++) tmpc= get(), a[i]= (tmpc == '-' ? -1 : tmpc - '0');\n\t\tput(dfs(8, 0, 0, 0)), putchar('\\n');\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1563193475,
        "uid": 109815,
        "name": "Ciyang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5440 \u3010\u3010XR-2\u3011\u5947\u8ff9\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898if\u5199\u7684\u592a\u591a\uff0c\u8003\u5bdf\u4e5f\u6bd4\u8f83\u591a\n\n\u9996\u5148\u8fd9\u9053\u9898\u5e38\u6570\u6bd4\u8f83\u5927\uff0c\u5176\u6b21\u6709\u4e89\u8bae\u7684\u5e74\u4efd(3200\uff0c6400,9600\uff09\u4e5f\u6ca1\u6bd2\u7624\n\n\n\u8fd9\u4e2a\u9898\u6bd4\u8d5b\u4ea4\u7684\u6709TLE\uff0c\u7136\u540e\u4f18\u5316\u4e86\u51e0\u4e2a\u5730\u65b9\uff0cTLE\u2192AC\n\n\u56e0\u4e3a\u672c\u4eba\u4ea4\u7684\u662f\u7206\u641c\uff0c\u5176\u5b9e\u8fd9\u9053\u9898\u5b8c\u5168\u53ef\u4ee5\u6253\u8868\u6253\u51fa\u5b58\u5728\u7684\u6708\u4efd\uff0c\u7136\u540e\u76f4\u63a5\u8fd9\u6837\uff0c\u5c31\u597d\u4e86\uff0c\u672c\u4eba\u6bd4\u8d5b\u6bd4\u8f83\u61d2\uff0c\u6253\u4e86\u4e2a\u7d20\u6570\u8868\n\n\u56e0\u4e3a\u8fd9\u4e2a\u7d20\u6570\u8868\uff0c\u5e38\u6570\u4f18\u5316\uff081\u4e07\u21921229\uff09\u56e0\u6b64\u8fc7\u4e86\u7b2c\u4e5d\u4e2a\u70b9\n\n\u53ef\u80fd\u4f60\u4eec\u8ba4\u4e3a\u6253\u8868\u4e0d\u597d\uff0c\u5176\u5b9e\u6253\u4e00\u90e8\u5206\u4e0e\u9898\u76ee\u6709\u5173\u7684\u8868\u540e\uff0c\u5bf9\u95ee\u9898\u89e3\u51b3\u5c31\u7b80\u5355\u591a\u4e86\n\n\u53e6\u5916\u8fd8\u6709\u4e2a\u4f18\u5316\uff0c\u5148\u5224\u65ad\u8fd9\u65e5\u662f\u4e0d\u662f\u8d28\u6570\uff0c\u7136\u540e\u6708+\u65e5\u2026\u2026\u770b\u4f3c\u5fae\u4e0d\u8db3\u9053\u7136\u540e\u672c\u4eba\u8fc7\u4e86\u4f4e8\u548c10\u4e2a\u70b9\n\n\u53e6\u5916\u672c\u4eba\u7528\u7684\u662fdfs\uff0c\u8fd9\u6837\u6309\u4f4d\u6765\u8ba1\u7b97\u6bd4\u8f83\u65b9\u4fbf\n\n\u8fd8\u6709\u5c31\u662f\u6709\u5173\u65e5\u671f\u5b58\u5728\u7684\u6781\u4e3a\u590d\u6742\u7684\u5224\u65ad\uff0c\u6211\u5728dfs\u91cc\u9762\u8bf4\u4e00\u4e0b\u5427\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<cstdio>\n#include<vector>\n#include<string>\n#include<queue>\n\nusing namespace std;\n\nint n,m,ans;\nint d,y,wei[20];\nint looker[]={0,9,9,9,9,1,9,3,9};\nint chose[20]; \nint zd[20];\nint my[]={0,1,0,1,0,1,0,1,1,0,1,0,1};\nint ssb[12300]={0,2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083,2087,2089,2099,2111,2113,2129,2131,2137,2141,2143,2153,2161,2179,2203,2207,2213,2221,2237,2239,2243,2251,2267,2269,2273,2281,2287,2293,2297,2309,2311,2333,2339,2341,2347,2351,2357,2371,2377,2381,2383,2389,2393,2399,2411,2417,2423,2437,2441,2447,2459,2467,2473,2477,2503,2521,2531,2539,2543,2549,2551,2557,2579,2591,2593,2609,2617,2621,2633,2647,2657,2659,2663,2671,2677,2683,2687,2689,2693,2699,2707,2711,2713,2719,2729,2731,2741,2749,2753,2767,2777,2789,2791,2797,2801,2803,2819,2833,2837,2843,2851,2857,2861,2879,2887,2897,2903,2909,2917,2927,2939,2953,2957,2963,2969,2971,2999,3001,3011,3019,3023,3037,3041,3049,3061,3067,3079,3083,3089,3109,3119,3121,3137,3163,3167,3169,3181,3187,3191,3203,3209,3217,3221,3229,3251,3253,3257,3259,3271,3299,3301,3307,3313,3319,3323,3329,3331,3343,3347,3359,3361,3371,3373,3389,3391,3407,3413,3433,3449,3457,3461,3463,3467,3469,3491,3499,3511,3517,3527,3529,3533,3539,3541,3547,3557,3559,3571,3581,3583,3593,3607,3613,3617,3623,3631,3637,3643,3659,3671,3673,3677,3691,3697,3701,3709,3719,3727,3733,3739,3761,3767,3769,3779,3793,3797,3803,3821,3823,3833,3847,3851,3853,3863,3877,3881,3889,3907,3911,3917,3919,3923,3929,3931,3943,3947,3967,3989,4001,4003,4007,4013,4019,4021,4027,4049,4051,4057,4073,4079,4091,4093,4099,4111,4127,4129,4133,4139,4153,4157,4159,4177,4201,4211,4217,4219,4229,4231,4241,4243,4253,4259,4261,4271,4273,4283,4289,4297,4327,4337,4339,4349,4357,4363,4373,4391,4397,4409,4421,4423,4441,4447,4451,4457,4463,4481,4483,4493,4507,4513,4517,4519,4523,4547,4549,4561,4567,4583,4591,4597,4603,4621,4637,4639,4643,4649,4651,4657,4663,4673,4679,4691,4703,4721,4723,4729,4733,4751,4759,4783,4787,4789,4793,4799,4801,4813,4817,4831,4861,4871,4877,4889,4903,4909,4919,4931,4933,4937,4943,4951,4957,4967,4969,4973,4987,4993,4999,5003,5009,5011,5021,5023,5039,5051,5059,5077,5081,5087,5099,5101,5107,5113,5119,5147,5153,5167,5171,5179,5189,5197,5209,5227,5231,5233,5237,5261,5273,5279,5281,5297,5303,5309,5323,5333,5347,5351,5381,5387,5393,5399,5407,5413,5417,5419,5431,5437,5441,5443,5449,5471,5477,5479,5483,5501,5503,5507,5519,5521,5527,5531,5557,5563,5569,5573,5581,5591,5623,5639,5641,5647,5651,5653,5657,5659,5669,5683,5689,5693,5701,5711,5717,5737,5741,5743,5749,5779,5783,5791,5801,5807,5813,5821,5827,5839,5843,5849,5851,5857,5861,5867,5869,5879,5881,5897,5903,5923,5927,5939,5953,5981,5987,6007,6011,6029,6037,6043,6047,6053,6067,6073,6079,6089,6091,6101,6113,6121,6131,6133,6143,6151,6163,6173,6197,6199,6203,6211,6217,6221,6229,6247,6257,6263,6269,6271,6277,6287,6299,6301,6311,6317,6323,6329,6337,6343,6353,6359,6361,6367,6373,6379,6389,6397,6421,6427,6449,6451,6469,6473,6481,6491,6521,6529,6547,6551,6553,6563,6569,6571,6577,6581,6599,6607,6619,6637,6653,6659,6661,6673,6679,6689,6691,6701,6703,6709,6719,6733,6737,6761,6763,6779,6781,6791,6793,6803,6823,6827,6829,6833,6841,6857,6863,6869,6871,6883,6899,6907,6911,6917,6947,6949,6959,6961,6967,6971,6977,6983,6991,6997,7001,7013,7019,7027,7039,7043,7057,7069,7079,7103,7109,7121,7127,7129,7151,7159,7177,7187,7193,7207,7211,7213,7219,7229,7237,7243,7247,7253,7283,7297,7307,7309,7321,7331,7333,7349,7351,7369,7393,7411,7417,7433,7451,7457,7459,7477,7481,7487,7489,7499,7507,7517,7523,7529,7537,7541,7547,7549,7559,7561,7573,7577,7583,7589,7591,7603,7607,7621,7639,7643,7649,7669,7673,7681,7687,7691,7699,7703,7717,7723,7727,7741,7753,7757,7759,7789,7793,7817,7823,7829,7841,7853,7867,7873,7877,7879,7883,7901,7907,7919,7927,7933,7937,7949,7951,7963,7993,8009,8011,8017,8039,8053,8059,8069,8081,8087,8089,8093,8101,8111,8117,8123,8147,8161,8167,8171,8179,8191,8209,8219,8221,8231,8233,8237,8243,8263,8269,8273,8287,8291,8293,8297,8311,8317,8329,8353,8363,8369,8377,8387,8389,8419,8423,8429,8431,8443,8447,8461,8467,8501,8513,8521,8527,8537,8539,8543,8563,8573,8581,8597,8599,8609,8623,8627,8629,8641,8647,8663,8669,8677,8681,8689,8693,8699,8707,8713,8719,8731,8737,8741,8747,8753,8761,8779,8783,8803,8807,8819,8821,8831,8837,8839,8849,8861,8863,8867,8887,8893,8923,8929,8933,8941,8951,8963,8969,8971,8999,9001,9007,9011,9013,9029,9041,9043,9049,9059,9067,9091,9103,9109,9127,9133,9137,9151,9157,9161,9173,9181,9187,9199,9203,9209,9221,9227,9239,9241,9257,9277,9281,9283,9293,9311,9319,9323,9337,9341,9343,9349,9371,9377,9391,9397,9403,9413,9419,9421,9431,9433,9437,9439,9461,9463,9467,9473,9479,9491,9497,9511,9521,9533,9539,9547,9551,9587,9601,9613,9619,9623,9629,9631,9643,9649,9661,9677,9679,9689,9697,9719,9721,9733,9739,9743,9749,9767,9769,9781,9787,9791,9803,9811,9817,9829,9833,9839,9851,9857,9859,9871,9883,9887,9901,9907,9923,9929,9931,9941,9949,9967,9973,10007};  //\u6253\u8868\u90e8\u5206\nstring s;\n\n\ninline int is_prime(int x)\n{\n    int i;\n    if(x==2) return 1;\n    if(x==1) return 0;\n    for(i=1;ssb[i]*ssb[i]<=x;i++)\n    {\n        if(x%ssb[i]==0) return 0;\n    }\n    return 1;\n}\n\ninline int rn(int ye)  //\u5224\u65ad\u662f\u4e0d\u662f\u95f0\u5e74\n{\n    if(ye%3200==0) return 0;\n    if(ye%400==0) return 1;\n    if(ye%100==0) return 0;\n    if(ye%4==0) return 1;\n    return 0;\n}\nvoid dfs(int dep,int nowmath)\n{\n    if(dep==9) \n    {\n        if(is_prime(chose[7]*10+chose[8]))//\u5148\u5224\u65ad\u65e5\n        {\n            if(is_prime(chose[5]*1000+chose[6]*100+chose[7]*10+chose[8]))//\u6708\n            if(is_prime(nowmath))\n            {\n            ans++;\t\n            //printf(\"%d\\n\",nowmath);\n            //\u5e74\uff0cprintf\u7684\u76ee\u7684\u662f\u67e5\u9519\n            return ;\t\t\n            }\n        }\n        return ;\n    }\n    int i;\n    for(i=wei[dep];i<=zd[dep];i++)\n    {\n        if(dep>4) if(chose[1]*1000+chose[2]*100+chose[3]*10+chose[4]==0) return ; //\u5982\u679c\u6ca1\u6709\u5e74\u7684\u5b58\u5728\uff080\u5e74\uff09\n        if(dep==6&&chose[5]==1) if(i>2) return ;  //13\u6708\uff1f \n        if(dep==8)  //\u5982\u679c\u6708\u6216\u8005\u65e5\u4e0d\u5b58\u5728\n        {\n        if(chose[5]==0&&chose[6]==0) return ;\n        if(chose[7]==0&&i==0) continue;\n        if(dep==8&&chose[7]==3) if(i>2) return ;\n        if(dep==8&&chose[7]>=2) \n        {\n        if(rn(chose[1]*1000+chose[2]*100+chose[3]*10+chose[4])) //\u95f0\u5e74 2\u6708\u4e0d\u5b58\u572830+\u65e5\n        if(chose[5]==0&&chose[6]==2)\n        if(chose[7]==3) continue;\t\n        } \n        if(!rn(chose[1]*1000+chose[2]*100+chose[3]*10+chose[4]))//\u5e73\u5e74 2\u6708\u4e0d\u5b58\u5728 29\u65e5\n        if(chose[5]==0&&chose[6]==2)\n        if((chose[7]==2&&i>8) )return ;\n        if(chose[7]==3&&my[chose[5]*10+chose[6]]<i&&dep==8&&chose[5]*10+chose[6]!=2) continue;\n        }\n        if(i>looker[dep]) return ;\n        chose[dep]=i;\n        dfs(dep+1,nowmath*10+i);  //\u6bcf\u4e00\u4f4d\u80fd\u5230\u8fbe\u7684\u6700\u5927\u6570\u5b57\n        chose[dep]=0;\n    }\n    \n    return ;\n}\n\nint main()\n{\n    int i,j;\n    scanf(\"%d\",&n);\n    //53-7-3-7\n    for(j=1;j<=n;j++)\n    {\n    ans=0;\n    scanf(\"\\n\");\n    for(i=1;i<=8;i++)\n    {\n        char t;\n        scanf(\"%c\",&t); //\u6309\u5b57\u7b26\u8bfb\uff0c\u4e00\u5b9a\u8981\u5148\u8bfb\u4e86\u4e0a\u4e00\u884c\u7684\u56de\u8f66\u7b26\uff0c\u4e0d\u7136\u4f1a\u51fa\u73b0\u9519\u4f4d\n        if(t=='-') wei[i]=0,zd[i]=9;  //\u5982\u679c\u8fd9\u4e00\u4f4d\u662f\u2018-\u2019\u90a3\u4e48\u6211\u4eec\u679a\u4e3e\u6240\u6709\u7684\u53ef\u80fd\u5b58\u5728\u7684\u65e5\u671f\n        else wei[i]=zd[i]=int(t-'0');\n    }\n    m=8;\n    dfs(1,0);\t\n    printf(\"%d\\n\",ans);\n    }\n    \n}\n```\n",
        "postTime": 1561874688,
        "uid": 38636,
        "name": "\u5bd2\u51b0\u5927\u5927",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5440 \u3010\u3010XR-2\u3011\u5947\u8ff9\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5440)\n\n\u9898\u610f\u8fd8\u662f\u5f88\u6e05\u695a\u7684\uff0c\u56e0\u4e3a\u53ea\u67098\u4f4d\u6570\uff0c\u6240\u4ee5\u8003\u8651\u76f4\u63a5~~\u7206~~\u641c\u7d22\n\n\u800c\u5bf9\u4e8e\u641c\u7d22\u8fc7\u7a0b\u4e2d\u90a3\u4e9b\u4e0d\u5408\u6cd5\u7684\u65e5\u671f\uff0c\u76f4\u63a5\u820d\u5f03\u5c31\u884c\u4e86\uff0c\u5bf9\u4e8e\u8d28\u6570\u7684\u5224\u65ad\uff0c\u7528\u4e86Miller-Rabin\u7b97\u6cd5\n\n\u5bf9\u4e8eMiller-Rabin\uff0c\u56e0\u4e3a\u6709[\u8d39\u9a6c\u5c0f\u5b9a\u7406](https://baike.baidu.com/item/%E8%B4%B9%E9%A9%AC%E5%B0%8F%E5%AE%9A%E7%90%86/4776158?fr=aladdin)\uff1a\n$$a^{p - 1}\\equiv1 \\mod p$$\n\u5176\u4e2d $p$ \u662f\u8d28\u6570,\u53ef\u4ee5\u8003\u8651\u968f\u673a\u4e00\u4e2a $a$\uff0c\u770b\u4e0a\u5f0f\u662f\u5426\u6210\u7acb\n\n\u4f46\u5b58\u5728\u4e00\u4e9b\u6570\u4e0d\u662f\u8d28\u6570\uff0c\u4f46\u4e5f\u80fd\u4f7f\u4e0a\u9762\u7684\u5f0f\u5b50\u6210\u7acb\uff0c\u90a3\u6837\u7684\u6570\u88ab\u79f0\u4e3a\u5f3a\u4f2a\u7d20\u6570\uff0c\u4f46\u90a3\u79cd\u6570\u5f88\u5c11\uff0c\u6211\u4eec\u53ef\u4ee5\u591a\u968f\u673a\u51e0\u4e2a $a$ \u6765\u63d0\u9ad8\u6b63\u786e\u7387\n\n\u4f46\u8fd9\u5176\u5b9e\u662f\u7b80\u964b\u7248\u7684Miller-Rabin\uff0c\u4e0d\u8fc7\u5bf9\u4e8e\u8fd9\u9053\u9898\u5176\u5b9e\u591f\u4e86\uff0c\u771f\u6b63\u7684Miller-Rabin\u6bd4\u8fd9\u91cc\u63d0\u5230\u7684\u591a\u4e9b\u6b65\u9aa4\uff0c\u6b63\u786e\u7387\u4f1a\u9ad8\u4e9b\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u5199\u7206\u641c\u4e86\uff0c\u4e0d\u8fc7\u7531\u4e8e\u672c\u4eba\u5f31\u5c0f\u7684\u4ee3\u7801\u4e0d\u80fd\u8fc7\"--------\"\u8fd9\u79cd\u6570\u636e\uff0c\u6240\u4ee5\u6211\u53ea\u597d\u542b\u6cea\u7279\u5224~~\u6ca1\u529e\u6cd5\u6211\u592a\u5f31\u4e86~~\n\n\u8be6\u89c1\u4ee3\u7801\uff1a\uff08\u5224\u65ad\u8d28\u6570\u53ef\u4ee5\u591a\u8bd5\u51e0\u6b21\uff0c\u6211\u8fd9\u91cc\u5199\u768415\u6b21\u8db3\u591f\u4e86~~\u5982\u679c\u8fd9\u90fd\u8fc7\u4e0d\u4e86\u90a3\u60a8\u4e5f\u592a\u975e\u4e86~~\uff09\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstdlib>\n#include<ctime>\nusing namespace std;\nint T,num,ans;\nbool isp[100000000];\nchar s[9];\nint mon[13] = {0,31,30,31,30,31,30,31,31,30,31,30,31};\n\nint r(int a,int b) {//\u751f\u6210[a,b]\u968f\u673a\u6570\n\treturn 1ll * rand() * rand() % (b - a + 1) + a;\n}\n\nint qmi(int a,int b,int mod) {\n\tint ans = 1;\n\twhile(b) {\n\t\tif(b & 1) ans = 1ll * a * ans % mod;\n\t\ta = 1ll * a * a % mod;\n\t\tb /= 2;\n\t}\n\treturn ans;\n}\n\nbool Prime(int x) {\n\tif(isp[x]) return true;//Miller-Rabin \u7528\u4e86\u4e2a\u8bb0\u5fc6\u5316\uff0c\u867d\u7136\u4f1a\u5feb\u4e9b\uff0c\u4f46\u9519\u4e86\u7684\u8bdd\u5c31\u6551\u4e0d\u56de\u6765\u4e86\n\tif(x <= 1) return false;\n\tfor(int i = 1;i <= 15;i += 1) {\n\t\tint a = r(1,x - 1);\n\t\tif(qmi(a,x - 1,x) != 1) return false;\n\t}\n\tisp[x] = true;\n\treturn true;\n}\n\nbool isry(int x) {\t\t\t//\u5224\u65ad\u662f\u4e0d\u662f\u95f0\u5e74\n\tif(x % 100) {\n\t\treturn x % 4 == 0;\n\t}\n\treturn x % 400 == 0;\n}\n\nbool can(int x,int pos) {\t\t\t//\u5224\u65ad\u65e5\u671f\u662f\u5426\u5408\u6cd5\n\tint year = x / qmi(10,pos - 4,10001),month,day;\n\tif(pos >= 4) {\n\t\tif(year == 0) return false;\n\t}\n\tif(pos >= 6) {\n\t\tmonth = x / qmi(10,pos - 6,101) % 100;\n\t\tif(month == 0 or month > 12) return false;\n\t}\n\tif(pos == 7) {\n\t\tif(month == 2) {\n\t\t\tif(x % 10 > 2) return false;\n\t\t}\n\t\telse {\n\t\t\tif(x % 10 > 3) return false;\n\t\t}\n\t}\n\tif(pos == 8) {\n\t\tday = x % 100;\n\t\tif(day == 0) return false;\n\t\tif(month == 2) {\n\t\t\tif(day > 28 + isry(year)) return false;\n\t\t}\n\t\telse {\n\t\t\tif(day > mon[month]) return false;\n\t\t}\n\t\tif(!Prime(day) or !Prime(month * 100 + day) or !Prime(x)) return false;\n\t}\n\treturn true;\n}\n\nvoid dfs(int pos,int x) {\t\t\t\t//\u7206\u641c\u672c\u4f53\n\tif(!can(x,pos)) return;\n\tif(pos == 8) {\n\t\tans += 1;\n\t\treturn;\n\t}\n\tif(s[pos] == '-') {\n\t\tfor(int i = 0;i < 10;i += 1) {\n\t\t\tdfs(pos + 1,x * 10 + i);\n\t\t}\n\t}\n\telse {\n\t\tdfs(pos + 1,x * 10 + (s[pos] xor 48));\n\t}\n}\n\nint main() {\n\tsrand(time(0));\n\tscanf(\"%d\",&T);\n\twhile(T--) {\n\t\tbool j = 1;\n\t\tscanf(\"%s\",s);\n\t\tfor(int i = 0;i < 8;i += 1) {\n\t\t\tif(s[i] != '-') {\n\t\t\t\tj = 0;break;\n\t\t\t}\n\t\t}\n\t\tif(j) {\t\t\t\t//\u7279\u5224\n\t\t\tprintf(\"55157\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tans = 0;\n\t\tdfs(0,0);\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n\u6ce8\uff1a\u6b64\u505a\u6cd5\u975e\u6b63\u89e3\uff0c\u4ec5\u4f9b\u53c2\u8003~~\u8dd1\u5f97\u8fd8\u633a\u5feb~~",
        "postTime": 1602424386,
        "uid": 245821,
        "name": "whale142857",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P5440 \u3010\u3010XR-2\u3011\u5947\u8ff9\u3011"
    },
    {
        "content": "\n# \u8d28\u6570\u5224\u65ad+\u679a\u4e3e\n\u8fd9\u9053\u9898\u5361\u4e86\u6211\u5f88\u957f\u65f6\u95f4\u3002\u3002\n#### \u5927\u4f53\u601d\u8def\uff1a1.\u6839\u636e\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u786e\u5b9a\u679a\u4e3e\u7684\u5de6\u53f3\u7aef\u70b9\n#### \t 2.\u6708\u6570\u4e0d\u8d85\u8fc712\uff0c\u65e5\u6570\u4e0d\u8d85\u8fc731\uff08\u5177\u4f53\u6708\u4efd\u5177\u4f53\u5224\u65ad\uff09\n####          3.\u5728\u53ef\u80fd\u8303\u56f4\u5185\u679a\u4e3e\u5224\u65ad\uff08\u5177\u4f53\u89e3\u91ca\u5728\u4ee3\u7801\uff09\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#define ll long long\nusing namespace std;\nstring a;\nll m,n,p[10010],v[100010],s[10010];//p\u5b58\u50a810000\u4ee5\u5185\u7684\u8d28\u6570\uff0cs[i]\u8868\u793ai\u662f\u5426\u4e3a\u8d28\u6570\uff0cv[i]\u662f\u7ebf\u6027\u7b5b\u4e2d\u5b58\u50a8i\u7684\u6700\u5c0f\u8d28\u56e0\u5b50\nconst ll b[13]={0,31,29,31,30,31,30,31,31,30,31,30,31};//b[i]\u5b58\u50a8\u7b2ci\u4e2a\u6708\u7684\u5929\u6570\nbool check(ll x){\n    if(x/10000<1)\n        return false;//\u8981\u6709\u5e74\n    ll z=x/10000;\n    x%=10000;\n    ll y=x%100;\n    x/=100;\n    if(x==0||x>12)\n        return false;//\u6708\u4efd\n    if(y==0||y>b[x])\n        return false;//\u65e5\n    if(z%4!=0||(z%100==0&&z%400!=0))\n        if(x==2&&y>28)\n            return false;//\u7279\u5224\u5e73\u5e742\u6708\u53ea\u670928\u5929\n    return true;\n}//\u5224\u65ad\u65e5\u671f\u683c\u5f0f\u662f\u5426\u6b63\u786e\nbool check1(ll x){\n    ll q=x,i=7;//i\u4e3a\u5b57\u7b26\u4e32\u4e0b\u6807\n    while(q>0){\n        if(a[i]-'0'!=q%10&&a[i]!='-')\n            return false;\n        q/=10;\n        i--;\n    }//\u6309\u4f4d\u5339\u914d'-'\n    for(int j=i;j>=0;j--)\n        if(a[i]!='-'&&a[i]-'0'!=0)\n            return false;\n    return true;\n}//\u5224\u65ad\u65e5\u671f\u662f\u5426\u7b26\u5408\u8f93\u5165\u7684\u683c\u5f0f\nbool check2(int x){\n    if(x==1)\n        return false;//\u7279\u52241\n    for(int i=1;i<=m&&p[i]<=sqrt(x);i++)\n    \tif(x%p[i]==0)\n        \treturn false;//\u7528\u7b5b\u51fa\u7684\u8d28\u56e0\u5b50\u679a\u4e3e\u5224\u65ad\u4f1a\u66f4\u5feb\uff0c\u53ea\u9700\u679a\u4e3e\u5230sqrt(x)\u5373\u53ef\n    return true;\n}//\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u5426\u4e3a\u8d28\u6570\nvoid primes(){\n    for(int i=2;i<10000;i++){\n        if(v[i]==0){\n            p[++m]=i;\n            v[i]=i;\n        }\n        for(int j=1;j<=m;j++){\n            if(p[j]>v[i]||p[j]*i>10000)\n                break;\n            v[i*p[j]]=p[j];\n        }\n    }\n    for(int i=1;i<=m;i++)\n    \ts[p[i]]=1;//\u7ed910000\u4ee5\u5185\u7684\u8d28\u6570\u6253\u4e2a\u8868\uff0c\u4fbf\u4e8e\u5224\u65ad\u540e\u56db\u4f4d\uff0c\u540e\u4e24\u4f4d\n}//\u7ebf\u6027\u7b5b\u7d20\u6570\nint main(){\n    primes();\n    cin>>n;\n    ll l,r,ans=0;\n    for(int i=1;i<=n;i++){\n        cin>>a;\n        if(a==\"--------\"&&i>1){\n        \tcout<<ans<<endl;\n        \tcontinue;\n\t\t}//\u7279\u5224\uff1a\u7531\u4e8e\u7b2c9\u4e2a\u70b9\u90fd\u662f'-'\uff0c\u7b54\u6848\u76f8\u540c\uff0c\u6240\u4ee5\u53ea\u8fd0\u884c\u4e00\u6b21\uff0c\u540e\u9762\u76f4\u63a5\u8f93\u51fa\u7b54\u6848\n        l=r=0;\n        for(int j=0;j<8;j++){\n            if(a[j]=='-'){\n                l=l*10;\n                r=r*10+9;\n            }\n            else{\n                l=l*10+a[j]-'0';\n                r=r*10+a[j]-'0';\n            }\n        }//\u786e\u5b9a\u5de6\u53f3\u7aef\u70b9\n        ans=0;//\u8d4b\u521d\u503c\n        int j=l-1;\n        while(j<=r){\n\t\t\tj++;\n\t\t\tif(j-j/10000*10000>1231)\n\t\t\t\tj=j+8770;//\u7528'j-j/10000*10000'\u4ee3\u66ff'j%10000'\u4f1a\u5feb\u4e00\u4e9b\n        \tif(j-j/100*100>31)\n        \t\tj=j+70;//\u907f\u514d\u4e0d\u53ef\u80fd\u7684\u60c5\u51b5\n\t\t\tif(s[j-j/10000*10000]==0)\n            \tcontinue;\n            if(s[j-j/100*100]==0)\n            \tcontinue;//\u5224\u65ad\u540e4\u4f4d\u548c\u540e2\u4f4d\n            if(!check(j))\n                continue;\n            if(!check1(j))\n            \tcontinue;//\u683c\u5f0f\n            if(check2(j))\n            \tans++;//\u5982\u679c8\u4f4d\u6570\u4e5f\u662f\u8d28\u6570\uff0cans++\n\t\t}\n        cout<<ans<<endl;\n    }\n    return 0;\n}\n```\n#### \u4e3b\u8981\u662f\u7b2c9\u4e2a\u70b9\u7684\u7279\u5224\u4f18\u5316\u4f5c\u7528\u5927\uff0c\u5176\u4ed6\u65f6\u9650\u8f83\u957f\u3002\u795d\u5927\u5bb6\u65e9\u65e5\u901a\u8fc7\uff01\n\n```\n",
        "postTime": 1562284719,
        "uid": 118433,
        "name": "LB_tq",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5440 \u3010\u3010XR-2\u3011\u5947\u8ff9\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5c31\u662f\u4e2a\u5927\u6a21\u62df\u3002\u3002\u3002\n\n\u601d\u8def\u662f\u8fd9\u6837\u7684\uff0c\u6ee1\u8db3\u201c\u65e5\u201d\u662f\u8d28\u6570\u4e14\u201c\u6708+\u65e5\u201d\u662f\u8d28\u6570\u7684\u540e\u56db\u4f4d\u6570\u5f88\u5c11\uff0c\u53ea\u670939\u4e2a\uff08\u4e0d\u5e78\u7684\u662f\uff0c229\u4e5f\u662f\uff09\n\n\u7136\u540e\u5c31\u6109\u5feb\u7684\u6253\u4e86\u4e2a\u8868\u51fa\u6765\n\n\u5269\u4e0b\u7684\u5c31\u662f\u679a\u4e3e\u5e74\u5e76\u5224\u65ad\u662f\u4e0d\u662f\u7d20\u6570\u54af\n\n\u8fd9\u91cc\u5224\u65ad\u7d20\u6570\u7684\u65b9\u6cd5\u662f\u5148\u9884\u5904\u7406\u51fa1w\u4ee5\u5185\u7684\u7d20\u6570\uff0c\u7136\u540e\u7528\u7c7b\u4f3c\u57c3\u5f0f\u7b5b\u7684\u65b9\u6cd5\u66b4\u529b\u5224\u65ad\n\n\u5224\u65ad\u5bf9\u7b54\u6848\u8d21\u732e\u7684\u8bdd\uff0c\u5728apart\u51fd\u6570\u91cc\uff0c\u6211\u89c9\u5f97\u5199\u7684\u5f88\u6e05\u695a\n\n\n\n\u653e\u4e0a\u4ee3\u7801\n\n```cpp\n// luogu-judger-enable-o2\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <cctype>\nusing namespace std;\nint mindiv[10001],t;\nint tot,prime[10000];\nbool isprime[10000];\nint day[50]={0,103,503,1103,107,307,607,907,211,311,811,911,113,313,613,1013,1213,317,617,1117,1217,419,619,719,919,1019,223,523,823,1123,1223,829,929,1129,1229,131,331,1031,1231};\nint cnt;\nint ans[101];\nchar s[10];\nint todo[101][10],fz[10];\nvoid euler(){\n    mindiv[0]=0;mindiv[1]=1;\n    int k;\n    for(int i=2;i<10000;i++){\n        if(!mindiv[i])mindiv[i]=i,prime[++tot]=i,isprime[i]=1;\n        for(int j=0;j<=tot&&prime[j]<=mindiv[i]&&(k=prime[j]*i)<10000;j++)mindiv[k]=prime[j];\n    }\n}\nbool jd(int x){\n  int fw=sqrt(x)+1;\n  for(int i=1;i<=tot&&prime[i]<=fw;i++){\n    if(x%prime[i]==0)return 0;\n  }\n  return 1;\n}\ninline void apart(int x){\n  int ws=8;\n  bool ok;\n  memset(fz,0,sizeof(fz));\n  while(x){\n    fz[ws--]=x%10;\n    x/=10;\n  }\n  for(int i=1;i<=t;i++){\n    ok=1;\n    for(int j=1;j<=8;j++){\n      if(todo[i][j]^fz[j]&&todo[i][j]!=233){\n        ok=0;\n        break;\n      }\n    }\n    if(ok)ans[i]++;\n  }\n}\nint main(){\n  euler();\n  scanf(\"%d\",&t);\n  for(int i=1;i<=t;i++){\n    scanf(\"%s\",s+1);\n    for(int j=1;j<=8;j++){\n      if(isdigit(s[j])){\n        todo[i][j]=s[j]-'0';\n      }\n      else todo[i][j]=233;\n    }\n  }\n  for(int i=1;i<=9999;i++){\n    for(int j=1;j<=39;j++){\n      int x=i*10000+day[j];\n      if(jd(x)){\n        apart(x);\n      }\n    }\n  }\n  for(int i=1;i<=9999;i++){\n    if(i%100&&i%4==0){\n      int x=i*10000+229;\n       if(jd(x))apart(x);\n    }\n    else if(i%400==0){\n      int x=i*10000+229;\n       if(jd(x))apart(x);\n    }\n  }\n  for(int i=1;i<=t;i++)printf(\"%d\\n\",ans[i]);\n  return 0;\n}\n\n```\n",
        "postTime": 1561816537,
        "uid": 119195,
        "name": "zi\u5c0f\u773c\u805a\u5149",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5440 \u3010\u3010XR-2\u3011\u5947\u8ff9\u3011"
    },
    {
        "content": "\u5148\u9884\u5904\u7406\u51fa\u6240\u6709\u5408\u6cd5\u7684\u65e5\u671f\u3002  \n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u65e5\u671f\u90fd\u66b4\u529b\u5339\u914d\u5373\u53ef\u3002\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nnamespace IOstream_chhokmah {\n\tll read() {\n\t\tll x = 0, w = 0; char ch = 0;\n\t\twhile (ch < '0' || ch > '9') { if (ch == '-') w = 1; ch = getchar(); }\n\t\twhile (ch >= '0' && ch <= '9') x = (x << 1) + (x << 3) + (ch ^ 48), ch = getchar();\n\t\treturn w ? -x : x;\n\t}\n\ttemplate <typename T>\n\tvoid write(T x) {\n\t\tif (x < 0) putchar('-'), x = -x;\n\t\tif (x > 9) write(x / 10);\n\t\tputchar(x % 10 + '0');\n\t}\n\ttemplate <typename T>\n\tvoid write(T x, char ch) {\n\t\twrite(x); putchar(ch);\n\t}\n\ttemplate <typename T>\n\tvoid writeln(T x) {\n\t\twrite(x); puts(\"\");\n\t}\n} using namespace IOstream_chhokmah;\nconst int Pre[13] = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};\nnamespace chhokmah {\nchar s[15];\nint acc[10005][15][35];\nbool check(int x) {\n\tif (x == 1 || x == 0) return 0; \n\tfor (int i = 2; i * i <= x; i ++) {\n\t\tif (x % i == 0) return 0;\n\t}\n\treturn 1;\n}\nvoid pre() {\n\tmemset(acc, 0, sizeof(acc));\n\tfor (int Year = 1; Year <= 9999; Year ++) {\n\t\tfor (int Month = 1; Month <= 12; Month ++) {\n\t\t\tint day = Pre[Month];\n\t\t\tif (Month == 2) {\n\t\t\t\tif ((Year % 4 == 0 && Year % 100 != 0) || (Year % 400 == 0)) day ++;\n\t\t\t}\n\t\t\tfor (int Day = 1; Day <= day; Day ++) {\n\t\t\t\tint x1 = Day, x2 = Day + Month * 100, x3 = Day + Month * 100 + Year * 10000;\n\t\t\t\tif (check(x1) && check(x2) && check(x3)) acc[Year][Month][Day] = 1;\n\t\t\t}\n\t\t}\n\t}\n}\nvoid solve() {\n\tscanf(\"%s\", s + 1);\n\tint ans = 0;\n\tfor (int month = 1; month <= 12; month ++) {\n\t\tif ((s[5] != '-' && s[5] - '0' != month / 10)) continue; \n\t\tif ((s[6] != '-' && s[6] - '0' != month % 10)) continue;\n\t\tfor (int day = 1; day <= 31; day ++) {\n\t\t\tif ((s[7] != '-' && s[7] - '0' != day / 10)) continue; \n\t\t\tif ((s[8] != '-' && s[8] - '0' != day % 10)) continue;\n\t\t\tfor (int year = 1; year <= 9999; year ++) {\n\t\t\t\tif (s[1] != '-' && s[1] - '0' != year / 1000) continue;\n\t\t\t\tif (s[2] != '-' && s[2] - '0' != year % 1000 / 100) continue; \n\t\t\t\tif (s[3] != '-' && s[3] - '0' != year % 100 / 10) continue;\n\t\t\t\tif (s[4] != '-' && s[4] - '0' != year % 10) continue;\n\t\t\t\tif (acc[year][month][day]) ans ++;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\", ans);\n}\nvoid main() {\n\tint cas = read();\n\tpre(); \n\twhile (cas --) solve();\n}\t\n} int main() {\n\tchhokmah::main();\n\treturn 0;\n}\n```",
        "postTime": 1561813123,
        "uid": 35567,
        "name": "Ayers",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5440 \u3010\u3010XR-2\u3011\u5947\u8ff9\u3011"
    },
    {
        "content": "## **\u8fd9\u9053\u9898\u8ba9\u6211\u660e\u767d\u4e86\u4e00\u4e2a\u9053\u7406**\n### **~~\u6253\u8868\u662f\u65e0\u6240\u4e0d\u80fd\u7684~~\u9762\u5411\u6570\u636e\u7f16\u7a0b**\n\u56e0\u4e3a\u7a7a\u4f4d\u4e2a\u6570\u4e0d\u5b9a\uff0c\u6240\u4ee5\u8981\u4e00\u6b21\u679a\u4e3e\u6240\u6709\u7a7a\u4f4d\uff0c\u6211\u7684\u65b9\u6cd5\u662f\u679a\u4e3e\u4e00\u4e2ac\u4f4d\u6570\uff08c\u4e3a\u7a7a\u4f4d\u7684\u4e2a\u6570\uff09\u7136\u540e\u628a\u6bcf\u4e00\u4f4d\u586b\u8fdb\u65e5\u671f  \n\u524d\u9762\u51e0\u4e2a\u6570\u636e\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c9\u53f7\u6570\u636e\u7279\u5224\u4e00\u4e0b\u4e5f\u8fc7\u4e86~~10\u53f7\u4e5f\u88ab\u6211\u6c34\u8fc7\u4e86~~......  \n\u8fd9\u4e2a8\u53f7......  \n\u6211\u7aed\u5c3d\u5c40\u90e8\u4f18\u5316\u4e4b\u80fd\u4e8b\uff0c\u4e5f\u6ca1\u6709\u8ba9\u90a3\u4e2a\u84dd\u8272\u7684\u65b9\u5757\u56de\u5fc3\u8f6c\u610f......  \n\u968f\u624b\u6253\u5f00\u9898\u89e3\u770b\u770b\u5927\u4f6c\u4eec\u7684\u505a\u6cd5......  \n\u5927\u4f6c\u4eec\u4e5f\u5728\u6253\u8868\u554a......  \n\u4e0d\u5c31\u662f\u4e00\u4e2a\u6570\u636e\u5417\uff0c\u8868\u4e5f\u4e0d\u662f\u5f88\u5927......\n\n\n------------\n\u5206\u5272\u5e9f\u8bdd\u4e0e\u4ee3\u7801\u7684\u9b54\u6cd5\u4e4b\u7ebf\n\n------------\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nbool p[10005];\nint e7[8][10]={6486,5852,5592,5507,5384,5403,5236,5273,5207,5217,\n\t\t\t   5660,5568,5415,5635,5424,5516,5483,5459,5517,5480,\n\t\t\t   5541,5430,5559,5514,5465,5531,5500,5570,5592,5455,\n\t\t\t   5569,5606,5519,5429,5547,5390,5593,5472,5536,5496,\n\t\t\t   37834,17323,0,0,0,0,0,0,0,0,\n\t\t\t   4344,11565,10449,7245,1435,2859,5727,1444,4315,5774,\n\t\t\t   10092,26062,13217,5786,0,0,0,0,0,0,\n\t\t\t   0,11622,0,18733,0,0,0,11544,0,13258};//\u4e0d\u4fdd\u8bc1\u6b64\u8868\u6570\u636e\u5b8c\u5168\u6b63\u786e \nbool zchu(int a,int b)\n{\n\tif(a%b==0)\n\t\treturn true;\n\treturn false;\n}\nint change(char d[10])\n{\n\tint ans=0;\n\tfor(int i=0;i<8;i++)\n\t{\n\t\tans*=10;\n\t\tans+=(d[i]-'0');\n\t}\n\treturn ans;\n}\nbool su(int x)\n{\n\tif(x==1)\n\t\treturn false;\n\tif(x==2)\n\t\treturn true;\n\tfor(int i=2;i<=sqrt(x);i++)\n\t\tif(zchu(x,i))\n\t\t\treturn false;\n\treturn (p[x%10000]&&p[x%100]);\n}\nvoid prime()\n{\n\tmemset(p,true,sizeof(p));\n\tp[0]=p[1]=false;\n\tfor(int i=2;i<=1231;i++)\n\t\tif(p[i]&&su(i))\n\t\t\tfor(int j=2*i;j<=1231;j+=i)\n\t\t\t\tp[j]=false;\n\treturn;\n}\nbool leagle(int date)\n{\n\tint m[13]={0,31,28,31,30,31,30,31,31,30,31,30,31};\n\tint year=date/10000,month=date%10000/100,day=date%100;\n\tif(zchu(year,400)||(zchu(year,4)&&!zchu(year,100)))\n\t\tm[2]++;\n\tif(month==0||month>12)\n\t\treturn false;\n\tif(day==0||day>m[month])\n\t\treturn false;\n\tif(year==0||year>9999)\n\t\treturn false;\n\treturn true;\n}\nint main()\n{\n\tint t;\n\tcin>>t;\n\tprime();\n\tfor(int lll=0;lll<t;lll++)\n\t{\n\t\tchar d[10];\n\t\tcin>>d;\n\t\tint e=0,ans=0,n=0,num=0;\n\t\tbool place[10];\n\t\tmemset(place,false,10);\n\t\tfor(int i=0;i<8;i++)\n\t\t\tif(d[i]=='-')\n\t\t\t{\n\t\t\t\tplace[i]=true;\n\t\t\t\te++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tn=i;\n\t\t\t\tnum=d[i]-'0';\n\t\t\t}\n\t\tif(e==8)\n\t\t{\n\t\t\tcout<<55157<<endl;\n\t\t\tcontinue;\n\t\t}\n\t\tif(e==0)\n\t\t{\n\t\t\tint date=change(d);\n\t\t\tif(leagle(date)&&su(date))\n\t\t\t\tcout<<1<<endl;\n\t\t\telse\n\t\t\t\tcout<<0<<endl;\n\t\t\tcontinue;\n\t\t}\n\t\tif(e==7)\n\t\t{\n\t\t\tcout<<e7[n][num]<<endl;\n\t\t\tcontinue;\n\t\t}\n\t\tif(!place[7])\n\t\t\tif(zchu(d[7]-'0',2)||d[7]-'0'==5)\n\t\t\t{\n\t\t\t\tcout<<0<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\tfor(int l=0;l<pow(10,e);l++)\n\t\t{\n\t\t\tint tmp=l;\n\t\t\tfor(int i=7;i>=0;i--)\n\t\t\t\tif(place[i])\n\t\t\t\t{\n\t\t\t\t\td[i]=tmp%10+'0';\n\t\t\t\t\ttmp/=10;\n\t\t\t\t}\n\t\t\tint date=change(d);\n\t\t\tif(leagle(date)&&su(date))\n\t\t\t\tans++;\n\t\t}\n\t\tcout<<ans<<endl;\n\t}\n\treturn 0;\n}\n```\n### \u7b2c\u4e00\u6b21\u6253\u8868\u611f\u89c9\u4e0d\u9519",
        "postTime": 1562491972,
        "uid": 182525,
        "name": "yangyujia18",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5440 \u3010\u3010XR-2\u3011\u5947\u8ff9\u3011"
    },
    {
        "content": "\u641c\u7d22\u9898\u597d\u6bd2\u7624\u554aQAQ\n\n\u6211\u4eec\u4ece\u65e5\u671f\u7b2c\u4e00\u4f4d\u5f00\u59cb\u626b\u63cf\uff0c\u6ca1\u6709\u6570\u5b57\u7684\u4f4d\u7f6e\u679a\u4e3e\u8be5\u586b\u7684\u6570\u5b57\u586b\u4e0a\u3002\n\n\u586b\u5b8c\u6240\u6709\u6570\u5b57\u540e\uff0c\u5148\u5224\u65ad\u65e5\u671f\u662f\u5426\u5408\u6cd5\uff0c\u518d\u5224\u65ad\u8be5\u65e5\u671f\u662f\u5426\u6ee1\u8db3\u9898\u610f\u8981\u6c42\u5373\u53ef\u3002\n\n\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\uff0c\u5148\u4f7f\u7528\u7ebf\u6027\u7b5b\u5728 $ O(n) $ \u7684\u65f6\u95f4\u5185\u7b5b\u51fa\u4e86\u6240\u6709\u7684\u8d28\u6570\u3002\u4ece\u800c\u53ef\u4ee5\u5728 $ O(1) $ \u7684\u65f6\u95f4\u5185\u5224\u65ad\u4efb\u610f\u4e00\u4e2a\u6570\u5b57\u662f\u5426\u662f\u8d28\u6570\u3002\n\n\u5f53\u7136\uff0c\u5728\u641c\u7d22\u4e2d\u9014\u5c31\u6392\u9664\u65e0\u6548\u65e5\u671f\u53ef\u4ee5\u52a0\u5feb\u641c\u7d22\u6548\u7387\u3002\n\n~~\u6bd4\u8d5b\u65f6\u5019\u4ee3\u7801\u6709\u4e9b\u4e11\uff0c\u4e0d\u8981\u4ecb\u610f~~\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nconst int daynum[]={0,31,28,31,30,31,30,31,31,30,31,30,31};\nint f[100000005],res[6000005],cnt,date[15],num,ans;\nchar s[15];\ninline bool is_run(int y)\n{\n if(y%4==0)\n {\n  if(y%100==0)\n  {\n   if(y%400==0)return true;\n   return false;\n  }\n  return true;\n }\n return false;\n}\ninline bool legal(int y,int m,int d)\n{\n if(m>12||m==0||d==0||y==0)return false;\n if(m==2)\n {\n  if(is_run(y))\n  {\n   if(d>29)return false;\n   return true;\n  }\n  else\n  {\n   if(d>28)return false;\n   return true;\n  }\n }\n else\n {\n  if(d>daynum[m])return false;\n  return true;\n }\n}\nvoid dfs(int d)\n{\n if(d==8)\n {\n  int y=num/10000,m=(num%10000)/100,d=num%100;\n  if(legal(y,m,d))\n   if((!f[d])&&(!f[m*100+d])&&(!f[y*10000+m*100+d]))ans++;\n  return;\n }\n if(date[d]!=-1)\n {\n  num=num*10+date[d];\n  dfs(d+1);\n  num/=10;\n  return;\n }\n for(int i=0;i<=9;i++)\n {\n  if(d==4&&i==2)break;\n  if(d==5&&i==0&&date[d-1]==0)continue;\n  if(d==5&&date[4]*10+i>12)break;\n  if(d==6&&i==4)break;\n  date[d]=i;\n  num=num*10+i;\n  dfs(d+1);\n  date[d]=-1;\n  num/=10;\n }\n}\nint main()\n{\n int t;\n scanf(\"%d\",&t);\n f[0]=f[1]=1;\n for(long long i=2;i<=99991231;i++)\n {\n  if(!f[i])res[++cnt]=i;\n  for(long long j=1;j<=cnt&&i*res[j]<=99991231;j++)\n  {\n   f[i*res[j]]=1;\n   if(i%res[j]==0)break;\n  }\n }\n while(t--)\n {\n  ans=0;\n  scanf(\"%s\",s);\n  for(int i=0;i<8;i++)\n  {\n   if(s[i]=='-')date[i]=-1;\n   else date[i]=s[i]-'0';\n  }\n  dfs(0);\n  printf(\"%d\\n\",ans);\n }\n return 0;\n}\n```\n",
        "postTime": 1561813101,
        "uid": 22030,
        "name": "StudyingFather",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5440 \u3010\u3010XR-2\u3011\u5947\u8ff9\u3011"
    },
    {
        "content": "## ~~\u8017\u4e86\u672c\u849f\u84bb\u4e00\u4e2a\u665a\u4e0a\u7684\u9898~~\n\n\u5728\u6bd4\u8d5b\u671f\u95f4\uff0c\u6211\u6b63\u5728\u601d\u7d22\u8fd9\u9053\u9898\uff0c\u53ef\u662f~~\u4e0a\u8bfe\u94c3\u54cd\u4e86~~\u65f6\u95f4\u4e0d\u591f\uff0c\u53ea\u597d\u5728\u8d5b\u540e\u7684\u67d0\u4e00\u5929A\u6389\u4e86\u8fd9\u9053\u9898\u3002\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u601d\u8def\u5f88\u7b80\u5355\uff0c\u5c31\u662f\n\n### \u66b4\u529bdfs\u52a0\u56de\u6eaf\uff01~~\u8ddf\u66b4\u529b\u679a\u4e3e\u5dee\u4e0d\u591aemmm\u2026~~\n\n\u64cd\u4f5c\u5f88\u7b80\u5355\uff0c\u5c31dfs\uff0c\u7136\u540e\u5224\u65ad\u5373\u53ef\u3002\n\n\u4f46\u8fd9\u9053\u9898\u5751\u70b9\u5f88\u591a\uff0c\u8001\u662f\u201c\u542c\u53d6WA\u58f0\u4e00\u7247\u201d\uff0c\u6211~~\u4e00\u6c14\u4e4b\u4e0b~~\u5185\u5fc3\u5374\u6beb\u65e0\u6ce2\u6f9c\uff0c~~\u6124\u6012~~\u5e73\u9759\u5730\u6253\u51fa\u4e86\u6240\u6709\u7684\u65ad\u70b9\uff08\u4f60\u7b49\u4f1a\u5c31\u77e5\u9053\u6211\u7684\u65ad\u70b9\u6709\u591a\u6050\u6016\uff09\u3002\n\n\u8fd8\u6709\"--------\"\u8fd9\u6837\u4f1a\u8d85\u65f6\uff0c\u4e8e\u662f\u6211\u5728\u672c\u5730\u8bc4\u6d4b\u673a\u7b49\u4e864-5\u79d2\uff0c\u7136\u540e\u76f4\u63a5\u7279\u5224\u4e86~~\u4e0d\u4f1a\u906d\u5230\u516c\u6124\u5427~~\u3002\n\n\u672c\u849f\u84bb\u8fd8\u679a\u4e3e\u4e86\u672c\u9898\u6240\u6709\u7684\u5751\u70b9\u3002\n\n-------------------------~~\u4ee3\u7801\u51c6\u5907\u4e2d~~-------------------------\n\n## Code:\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint day[13] = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};\nint t, ans;\nstring s;\ninline bool is_prime(int n){\n    if(n < 2) return 0;\n    if(n == 2) return 1;\n    if(!(n & 1)) return 0;\n    for(int i = 3; i * i <= n; ++i){\n        if(n % i == 0) return 0;\n    }\n    return 1;\n}//\u5224\u65ad\u8d28\u6570 \ninline bool is_run(int a){\n    return a % 4 == 0 && a % 100 != 0 || a % 400 == 0;\n}//\u5224\u65ad\u95f0\u5e74 \nvoid dfs(int step){\n    if(step == 5){ \n        int x = 0;\n        for(int i = 6; i <= 7; ++i){\n            x = (x << 3) + (x << 1) + (s[i] ^ 48);\n        }\n        if(!is_prime(x)){\n        \t//cout << \"the day isn't prime\\n\";\n        \treturn;\n        }\n        //else cout << \"the day is prime\\n\";\n    }//\u5224\u65ad\u65e5\u662f\u5426\u8d28\u6570 \n    else if(step == 3){\n        int x = 0;\n        for(int i = 4; i <= 7; ++i){\n            x = (x << 3) + (x << 1) + (s[i] ^ 48);\n        }\n        if(!is_prime(x)){\n        \t//cout << \"the month and day isn't prime\\n\";\n            return;\n        }\n        //else cout << \"the month and day is prime\\n\";\n    }//\u5224\u65ad\u6708+\u65e5\u662f\u5426\u8d28\u6570 \n    else if(step == -1){\n        int x = 0;\n        for(int i = 0; i <= 3; ++i){\n            x = (x << 3) + (x << 1) + (s[i] ^ 48);\n        }\n        if(!x){//\u5751\u70b91\uff1a\u5e74\u6708\u65e5\u4e0d\u80fd\u4e3a0 \uff01 \n        \t//cout << \"the year isn't existing\\n\";\n            return;\n        }\n        if(is_run(x)) day[2] = 29;\n        x = 0;//\u5751\u70b92\uff1a\u8bb0\u5f97\u5f52\u96f6 \uff01 \n        for(int i = 4; i <= 5; ++i){\n            x = (x << 3) + (x << 1) + (s[i] ^ 48);\n        }\n        if(!x || x > 12){\n        \t//cout << \"the month isn't existing\\n\";\n            return;\n        }\n        int y = x;\n        x = 0;\n        for(int i = 6; i <= 7; ++i){\n            x = (x << 3) + (x << 1) + (s[i] ^ 48);\n        }\n        if(!x || x > day[y]){\n        \t//cout << \"the day isn't existing\\n\";\n        \treturn;\n        }\n        x = 0;\n        day[2] = 28;\n        for(int i = 0; i <= 7; ++i){\n            x = (x << 3) + (x << 1) + (s[i] ^ 48);\n        }\n        if(is_prime(x)) /*cout << \"YES\\n\",*/ ans++;\n        //else cout << \"the year, month and day isn't prime\\n\";\n        return;\n    }//\u5224\u65ad\u65e5\u671f\u662f\u5426\u5b58\u5728\u4e14\u5e74\u6708\u65e5\u662f\u5426\u8d28\u6570 \n    //else if(step != 7) cout << \"it's a useless search\\n\";\n    if(s[step] == '-'){\n        if(step == 0 || step == 1 || step == 2 || step == 3 || step == 5 || step == 7){\n            for(int i = 0; i <= 9; ++i){\n                s[step] = i + '0';\n                //cout << s << \" \" << step << \"\\n\";\n                dfs(step - 1);\n                s[step] = '-';//\u5751\u70b93\uff1a\u8bb0\u5f97\u56de\u6eaf\uff01 \n            }\n        }\n        else if(step == 4){\n            for(int i = 0; i <= 1; ++i){\n                s[step] = i + '0';\n                //cout << s << \" \" << step << \"\\n\";\n                dfs(step - 1);\n                s[step] = '-';\n            }\n        }\n        else for(int i = 0; i <= 3; ++i){\n            s[step] = i + '0';\n            //cout << s << \" \" << step << \"\\n\";\n            dfs(step - 1);\n            s[step] = '-';\n        }\n    }\n    else{\n    \t//cout << s << \" \" << step << \"\\n\";\n        dfs(step - 1);\n    }\n}\nint main(){\n    //freopen(\".out.txt\", \"w\", stdout);\n    ios::sync_with_stdio(false);\n    cin >> t;\n    for(int i = 1; i <= t; ++i){\n        cin >> s;\n        if(s == \"--------\"){\n        \tcout << \"55157\\n\";//\u8282\u7ea6\u65f6\u95f4qwq \n        \tcontinue;\n        }\n        dfs(7);\n        cout << ans << '\\n';\n        ans = 0;//\u5751\u70b94\uff1a\u7b54\u6848\u5f52\u96f6\uff01 \n    }\n    return 0;\n}\n```\n\u4ee5\u4e0a\u5c31\u662f\u672c\u849f\u84bb\u7684\u601d\u8def\u3002\u5982\u6709\u4e0d\u61c2\u8005\uff0c\u6b22\u8fce\u7559\u8a00\u3002\n\n\u6700\u540e\u5b89\u5229\u4e00\u4e0b\u81ea\u5df1\u7684[Blog](https://www.luogu.org/blog/134342xcy252625/)~~\u672c\u849f\u84bb\u7684Blog\u9700\u8981\u5404\u4f4d\u795e\u7287\u4eec\u7684\u8d44\u74f7~~\u3002\n\n## End\n",
        "postTime": 1562414577,
        "uid": 147999,
        "name": "Warriors_Cat",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5440 \u3010\u3010XR-2\u3011\u5947\u8ff9\u3011"
    },
    {
        "content": "### \u9898\u610f\uff1a\n\n>\u7531\u201c\u65e5\u201d\u7ec4\u6210\u7684\u4e24\u4f4d\u6570\uff0c\u7531\u201c\u6708+\u65e5\u201d\u7ec4\u6210\u7684\u56db\u4f4d\u6570\uff0c\u7531\u201c\u5e74+\u6708+\u65e5\u201d\u7ec4\u6210\u7684\u516b\u4f4d\u6570\u5747\u4e3a\u8d28\u6570\u3002\n\n>\u7136\u800c\u4e0d\u5e78\u7684\u662f\u8fd9\u4e2a\u65e5\u671f\u5374\u662f\u6b8b\u7f3a\u7684\uff0c\u516b\u4f4d\u4e2d\u53ef\u80fd\u6709\u82e5\u5e72\u4f4d\u65e0\u6cd5\u786e\u5b9a\u3002\u4f60\u9700\u8981\u77e5\u9053\u8fd9\u4e2a\u65e5\u671f\u6709\u591a\u5c11\u79cd\u53ef\u80fd\uff0c\n\n### \u7b97\u6cd5\uff1a\n\u554a\uff1f**DFS** \u4e0d\u662f**\u66b4\u529b**\u5417\uff1f \uff08\u5feb\u9003\n\n### \u65f6\u95f4\u590d\u6742\u5ea6 O($10^n$)\n### \u89e3\u6cd5\uff1a\n#### \u2460\u5bf9\u4e8e\u8d28\u6570\u7684\u8ba1\u7b97\n```\nbool iprime(unsigned long long n)\n{\n\tlong long stop =sqrt(n)+1;\n\tif (n==2)\n\t\treturn true;\n\tif (n%2==0)\n\t\treturn false;\n\tfor (int i=3;i<=stop;i+=2)\n\t\tif (n%i==0) \n\t\t\treturn false;\n\treturn true;\n}\n```\n\u6216\u8005\u66f4\u5feb\u7684\n```\nbool iprime(int n)\n{\n    int stop=n/6+1,Tstop=sqrt(n)+5;\n    if (n==2||n==3||n==5||n==7||n==11)\n        return true;\n    if (n%2==0||n%3==0||n%5==0||n==1)\n        return false;\n    for (int i=1;i<=stop;i++)\n    {\n        if (i*6>=Tstop) \n            break;\n        if ((n%(i*6+1)==0)||(n%(i*6+5)==0))\n            return false;\n    }\n    return true;\n}\n```\n\u6216\u8005**\u7ebf\u6027\u7b5b**\u4e5f\u53ef\u4ee5\u4f46\u662f\u6211\u6ca1\u6709\u8bd5\u8fc7\n**\uff08\u9003 **\n***\n#### \u2461\u5bf9\u4e8e\u65e5\u671f\u7684\u5224\u65ad\n```\nint isdate(int num)\n{\n    int year=num/10000,month=(num/100)%100,day=num%100;\n    if(year==0)//\u6ca1\u6709\u8fd9\u4e2a\u4f1a\u72060\n        return 0; \n    int a[13]={0,31,28,31,30,31,30,31,31,30,31,30,31};\n    if((year%4==0&&year%100!=0)||year%400==0)//\u6ce8\u610f\u5224\u65ad\u95f0\u5e74\uff0c\u6ca1\u6709\u53613200\u8fd9\u4e9b\u6709\u4e89\u8bae\u7684\u5e74\u4efd\n        a[2]+=1;\n    if(month<=12&&month>=1&&day<=a[month])\n        return 1;\n    else \n        return 0;\n}\n```\n***\n#### \u2462\u600e\u4e48\u5c06\u5b57\u7b26\u4e32\u8f6c\u5316\u4e3a\u6570\u5b57\uff08\u5f53\u7136\u76f4\u63a5\u505a\u6570\u5b57\u7684\u5b58\u50a8\u4e5f\u6ca1\u4e8b\uff09\n```\nint getnum(int type1)\n{\n    int start=0;\n    int ans1=0;\n    if(type1==1)//\u83b7\u5f97\u65e5\n        start=6;\n    if(type1==2)//\u83b7\u5f97\u6708+\u65e5\n        start=4;\n    if(type1==3)//\u83b7\u5f97\u5e74+\u6708+\u65e5\n        start=0;\n    for(int i=start;i<=7;i++)\n    {\n        ans1*=10;\n        ans1+=m[i]-'0';\n    }\n    return ans1;\n}\n```\n***\n#### \u2463\u600e\u4e48\u66b4\u529b \u5f53\u7136\u662f~~\u9012\u5f52~~**DFS\uff08\u9003**\n```\nint getans(int num)//num\u8868\u793a\u8fd8\u9700\u8981\u7684\u5faa\u73af\u7684\u5c42\u6570\n{\n    if(num==0)//\u6240\u6709\u7684'-'\u90fd\u5df2\u7ecf\u88ab\u8d4b\u503c\n    {\n        if(isdate(getnum(3))==1)\n        {\n            if(iprime(getnum(1))==1&&iprime(getnum(2))==1&&iprime(getnum(3))==1) //\u7b26\u5408\u9898\u610f\uff0c\u90fd\u662f\u8d28\u6570\n                ans++;\n            return 0;\n        }\n        else\n            return 0;\n    }\n    else\n        for(int i=0;i<=9;i++)//\u679a\u4e3e\u6bcf\u4e2a'-'\uff0c\u4ece0\u52309\n        {\n            m[wt[num]]='0'+i;//wt\u7528\u6765\u8bb0\u5f55'-'\u7684\u4f4d\u7f6e\n            getans(num-1);//\u5c11\u4e00\u5c42\u5faa\u73af\n        }\n    return 0;\n}\n```\n***\n#### \u2464**TLE**\u6389\u600e\u4e48\u529e \u5f53\u7136\u662f~~\u6253\u8868~~ **\u4f18\u5316**\n\u6309\u7167\u4e0a\u9762\u7684\u529e\u6cd5\uff0c\u4f60\u5e94\u8be5\u53ea\u670990\u5206\n\n\u6240\u4ee5T9 ( 8\u4e2a'-' ) \u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa\u7b54\u6848\n```\nif(count1==8)\n                cout<<55157<<endl;\n```\n***\n#### \u2465\u5982\u4f55\u63a5\u8fd1\u6700\u4f18\u89e3 \u5f53\u7136\u8fd8\u662f~~\u6253\u8868~~ **\u4f18\u5316**\n```\nint t[8][10]={6486,5852,5592,5507,5384,5403,5236,5273,5207,5217,5660,5568,5415,5635,5424,5516,5483,5459,5517,5480,5541,5430,5559,5514,5465,5531,5500,5570,5592,5455,5569,5606,5519,5429,5547,5390,5593,5472,5536,5496,37834,17323,0,0,0,0,0,0,0,0,4344,11565,10449,7245,1435,2859,5727,1444,4315,5774,10092,26062,13217,5786,0,0,0,0,0,0,0,11622,0,18733,0,0,0,11544,0,13258};\n```\n\u5bf9\u4e8eT8\uff0c\u53ef\u4ee5\u5f00\u4e00\u4e2a\u6570\u7ec4\uff0c$t[i][j]$\u8868\u793a$j$(\u552f\u4e00\u7684\u4e00\u4e2a\u6570\u5b57)\u5728\u7b2c$i$\u4f4d\u4e0a\n***\n#### \u2466\u5982\u4f55\u505a\u4e00\u4e9b\u5fae\u4e0d\u8db3\u9053\u7684\u4f18\u5316\n```\n if(m[7]=='2'||m[7]=='4'||m[7]=='6'||m[7]=='8'||m[7]=='0'||m[7]=='5')\n            cout<<0<<endl;\n```\n\u65e5\u671f\u7684\u672b\u5c3e\u7279\u5224\n***\n### AC code:\n```\n#include<bits/stdc++.h>\nusing namespace std;\nchar m[100];\nint wt[15],count1;\nint ans;\nint t[8][10]={6486,5852,5592,5507,5384,5403,5236,5273,5207,5217,5660,5568,5415,5635,5424,5516,5483,5459,5517,5480,5541,5430,5559,5514,5465,5531,5500,5570,5592,5455,5569,5606,5519,5429,5547,5390,5593,5472,5536,5496,37834,17323,0,0,0,0,0,0,0,0,4344,11565,10449,7245,1435,2859,5727,1444,4315,5774,10092,26062,13217,5786,0,0,0,0,0,0,0,11622,0,18733,0,0,0,11544,0,13258};\nbool iprime(int n)\n{\n    int stop=n/6+1,Tstop=sqrt(n)+5;\n    if (n==2||n==3||n==5||n==7||n==11)\n        return true;\n    if (n%2==0||n%3==0||n%5==0||n==1)\n        return false;\n    for (int i=1;i<=stop;i++)\n    {\n        if (i*6>=Tstop) \n            break;\n        if ((n%(i*6+1)==0)||(n%(i*6+5)==0))\n            return false;\n    }\n    return true;\n}\nint isdate(int num)\n{\n    int year=num/10000,month=(num/100)%100,day=num%100;\n    if(year==0)\n        return 0; \n    int a[13]={0,31,28,31,30,31,30,31,31,30,31,30,31};\n    if((year%4==0&&year%100!=0)||year%400==0)\n        a[2]+=1;\n    if(month<=12&&month>=1&&day<=a[month])\n        return 1;\n    else \n        return 0;\n}\nint getnum(int type1)\n{\n    int start=0;\n    int ans1=0;\n    if(type1==1)\n        start=6;\n    if(type1==2)\n        start=4;\n    if(type1==3)\n        start=0;\n    for(int i=start;i<=7;i++)\n    {\n        ans1*=10;\n        ans1+=m[i]-'0';\n    }\n    return ans1;\n}\nint getans(int num)\n{\n    if(num==0)\n    {\n        if(isdate(getnum(3))==1)\n        {\n            if(iprime(getnum(1))==1&&iprime(getnum(2))==1&&iprime(getnum(3))==1)\n                ans++;\n            return 0;\n        }\n        else\n            return 0;\n    }\n    else\n    {\n        for(int i=0;i<=9;i++)\n        {\n            m[wt[num]]='0'+i;\n            getans(num-1);\n        }\n    }\n    return 0;\n}\nint mian()\n{\n    int n;\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>m;\n        memset(wt,0,sizeof(wt));\n        count1=0;\n        if(m[7]=='2'||m[7]=='4'||m[7]=='6'||m[7]=='8'||m[7]=='0'||m[7]=='5')\n            cout<<0<<endl;\n        else\n        {\n            ans=0; \n            for(int i=0;i<strlen(m);i++)\n                if(m[i]=='-')\n                    count1++;\n            if(count1==8)\n                cout<<55157<<endl;\n            else if(count1==7)\n            {\n                int pos=0,x=0;\n                for(int i=0;i<=7;i++)\n                    if(m[i]!='-')\n                    {\n                        pos=i;\n                        x=m[i]-'0';\n                    }\n                cout<<t[pos][x]<<endl;\n            }\n            else \n            {\n                count1=0; \n                for(int i=0;i<strlen(m);i++)\n                if(m[i]=='-')\n                {\n                    m[i]='0';\n                    count1++;\n                    wt[count1]=i;\n                }\n                getans(count1);\n                cout<<ans<<endl;\n            }\n        }\n    }\n    return 0;\n}\n```\n**\u4f60\u8bf4\u6284\u9898\u89e3\u7684\u4eba\u4f1a\u4e0d\u4f1aWA\u6389\u5462\uff08\u6ed1\u7a3d\uff09**",
        "postTime": 1562043082,
        "uid": 91013,
        "name": "hgoicjl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5440 \u3010\u3010XR-2\u3011\u5947\u8ff9\u3011"
    },
    {
        "content": "\u66b4\u529b\u641c\u7d22\u5373\u53ef\u3002\n\n\u6ce8\uff1a\u6b64\u975e\u6b63\u89e3\uff0c\u4ec5\u4f9b\u53c2\u8003\uff08\u4e14\u6709\u673a\u7387TLE\uff09\u3002\n\n## \u601d\u8def\n\n\u9996\u5148\uff0c\u4ece\u5b57\u7b26\u4e32\u7684\u7b2c7\u4f4d\u5f00\u59cb\u641c\u7d22\u3002\u641c\u5230\u7b2c8\u4f4d\u65f6\uff0c**\u5224\u65ad\u662f\u5426\u4e3a\u8d28\u6570\uff0c\u5224\u65ad\u662f\u5426\u7ec4\u6210\u5408\u6cd5\u5929\u6570**\u3002\u82e5\u7b26\u5408\uff0c\u8df3\u5230\u7b2c5\u4f4d\u7ee7\u7eed\u641c\u7d22\u3002\u4ece\u7b2c5\u4f4d\u5f00\u59cb\u641c\u5230\u7b2c6\u4f4d\uff0c**\u5224\u65ad5\u81f38\u4f4d\u662f\u5426\u7ec4\u6210\u8d28\u6570\uff0c\u4ee5\u53ca5\u81f36\u4f4d\u662f\u5426\u7ec4\u6210\u4e86\u5408\u6cd5\u6708\u4efd\u3002**\u82e5\u7b26\u5408\uff0c\u8df3\u81f3\u7b2c1\u4f4d\u3002\u4ece\u7b2c1\u4f4d\u5f00\u59cb\u641c\u5230\u7b2c4\u4f4d\uff0c**\u5224\u65ad1~8\u4f4d\u662f\u5426\u7ec4\u6210\u8d28\u6570\uff0c\u518d\u5224\u65ad\u6574\u4e2a\u65e5\u671f\u662f\u5426\u5408\u6cd5\u3002**\n\n\u603b\u7ed3\uff1a7->8->check(7~8)->5->6->check(5~8)->1->2->3->4->check(1~8)\u3002\n\n\u7b97\u6cd5\u590d\u6742\u5ea6\uff1a$O(\\text{\u7384\u5b66})$\u3002\n\n\u8fd9\u6837\u5c31A\u4e86\uff1f~~\u56fe\u6837\u56fe\u68ee\u7834~~ \u5f53\u65e5\u671f\u4e2d\u51fa\u73b0$8$\u4e2a'-'\u7684\u65f6\u5019\uff0c**\u53ef\u80fd**\u4f1a\u8d85\u65f6\u3002**\u6240\u4ee5\u6211\u4eec\u9700\u8981\u9762\u5411\u6570\u636e\u7f16\u7a0b\u2014\u2014\u5373\u8ba9\u7a0b\u5e8f\u5728\u672c\u5730\u8dd1\u51fa\u7ed3\u679c\u4e4b\u540e\u6253\u8868\u4ea4\u4e0a\u53bb\u3002**\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n\u6211\u7684\u505a\u6cd5\u601d\u8def\u7b80\u5355\uff0c\u4f46\u662f**\u5341\u5206\u96be\u5199**\u3002\u8bf7\u7741\u5927\u773c\u775b\u770b\u597d\u4e86\u3002\uff08\u6ce8\uff1a\u5df2\u7ecf\u8fc7\u683c\u5f0f\u5316\uff09\n\n```\n# include <bits/stdc++.h>\n# define rr register\n//# define DEBUG \tprintf(\"%d %d M %d D %d\\n\",i,sum,Monthsum,Daysum);\n//# define DEBUG2 printf(\"!%d %d\\n\",i,sum);\nint T;\nint ans;\nint qwq[20]= {0,9,9,9,9,1,9,3,9};//\u8bb0\u5f55\u6bcf\u4e00\u4f4d\u6570\u5b57\u7684\u6700\u5927\u53d6\u503c\nint D[20]= {0,31,28,31,30,31,30,31,31,30,31,30,31};//\u8bb0\u5f55\u6bcf\u4e2a\u6708\u7684\u5929\u6570\nchar a[20];\nint Daysum,Monthsum,Yearsum;//\u4e8b\u5b9e\u8bc1\u660eYearsum\u6ca1\u6709\u5fc5\u8981\u3002Daysum\uff1a\u5f53\u524d7~8\u4f4d\u6570\u5b57\u7ec4\u6210\u7684\u6570 Monthsum\uff1a\u5f53\u524d5~6\u4f4d\u6570\u5b57\u7ec4\u6210\u7684\u6570\ninline int read(void) {//\u6ca1\u5565\u5375\u7528\u7684\u5feb\u8bfb\n\tint res,f=1;\n\tchar c;\n\twhile((c=getchar())<'0'||c>'9')\n\t\tif(c=='-')f=-1;\n\tres=c-48;\n\twhile((c=getchar())>='0'&&c<='9')\n\t\tres=res*10+c-48;\n\treturn res*f;\n}\ninline bool is_prime(int x) {//\u66b4\u529b\u5224\u65ad\u8d28\u6570\n\tif(x<2)\n\t\treturn false;\n\tfor(rr int j=2; j<=sqrt(x); ++j)\n\t\tif(!(x%j))\n\t\t\treturn false;\n\treturn true;\n}\ninline bool pd(int x) {//\u5224\u65ad\u6570\u5b57\u662f\u5426\u5408\u6cd5\n\tint year=x/10000;//\u63d0\u53d6\u5e74\u4efd\n\tif(year==0) {//\u7279\u52240\n\t\treturn false;\n\t}\n\tint month=(x%10000)/100;//\u63d0\u53d6\u6708\u4efd\n\tif(month>12||month<1) {//\u5224\u65ad\n\t\treturn false;\n\t}\n\tint day=x%100;//\u63d0\u53d6\u5929\u6570\n\tif(!day)//\u5224\u65ad0\n\t\treturn false;\n    //\u8fd9\u91cc\u6211\u662f\u628a2\u6708\u62ce\u51fa\u6765\u5355\u72ec\u5199\u7684    \n\tif(month!=2&&day>D[month])//\u5982\u679c\u8d85\u51fa\u4e86\u5f53\u6708\u7684\u5929\u6570 \u8fd4\u56de\u4e0d\u5408\u6cd5\n\t\treturn false;\n\telse if(month!=2&&day<=D[month])//\u5426\u5219\u5408\u6cd5\n\t\treturn true;\n\n\tif(month==2) {//\u6076\u5fc3\u76842\u6708\n\t\tif(day>29)//\u6ca1\u6709\u4e00\u4e2a\u4e8c\u6708\u6709\u5927\u4e8e29\u7684\u5929\u6570\n\t\t\treturn false;\n\t\tif(day<=28)//\u6240\u6709\u4e8c\u6708\u90fd\u6709\u81f3\u5c1128\u5929\n\t\t\treturn true;\n\t\tif(day==29&&((year%400==0)||(year%100!=0&&year%4==0)))//\u95f0\u5e74\n\t\t\treturn true;\n\t\telse\n\t\t\treturn false;\n\t}\n\treturn false;\n}\nvoid dfs(int i,int sum) {//\u641c\u7d22 sum\u4e3a\u5f53\u524d\u9636\u6bb5\u6570\u5b57\u4e4b\u548c\n\tif(a[i]!='-') {\n\t\tsum=sum*10+a[i]-48;//\u5982\u679c\u4e0d\u80fd\u81ea\u7531\u641c\u7d22 \u52a0\u4e0a\u5f53\u524d\u4f4d\u7684\u6570\u5b57\n\t\t//DEBUG\n\t\tif(i==8) {//\u5224\u65ad\u65e5\n\t\t\tif(is_prime(sum)&&sum<=31) {\n\t\t\t\tDaysum=sum;\n\t\t\t\tdfs(5,0);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif(i==6) {//\u5224\u65ad\u6708\n\t\t\tif(is_prime(sum*100+Daysum)&&sum<=12) {\n\t\t\t\tMonthsum=sum;\n\t\t\t\tdfs(1,0);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif(i==4) {//\u5224\u65ad\u6574\u4e2a\u65e5\u671f\n\t\t\tif(is_prime(sum*10000+Monthsum*100+Daysum)&&pd(sum*10000+Monthsum*100+Daysum)) {\n\t\t\t\t//printf(\"%d\\n\",sum*10000+Monthsum*100+Daysum);\n\t\t\t\t++ans;//\u7b54\u6848+1\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tdfs(i+1,sum);//\u5426\u5219\u5728\u5f53\u524d\u9636\u6bb5\u7ee7\u7eed\u641c\u7d22\n\t} else {\n\t\tint tmp;\n\t\tfor(rr int j=0; j<=qwq[i]; ++j) {//\u5982\u679c\u53ef\u4ee5\u81ea\u7531\u9009\u62e9 \u90a3\u4e48\u5c31\u5728\u5f53\u524d\u4f4d\u6240\u6709\u53ef\u80fd\u7684\u53d6\u503c\u4e2d\u5faa\u73af\n\t\t\ttmp=sum*10+j;\n\t\t\tif(i==8) {\n\t\t\t\tif(is_prime(tmp)&&tmp<=31) {\n\t\t\t\t\tDaysum=tmp;\n\t\t\t\t\tdfs(5,0);\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(i==6) {\n\t\t\t\tif(is_prime(tmp*100+Daysum)&&tmp<=12) {\n\t\t\t\t\tMonthsum=tmp;\n\t\t\t\t\tdfs(1,0);\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(i==4) {\n\t\t\t\tif(is_prime(tmp*10000+Monthsum*100+Daysum)&&pd(tmp*10000+Monthsum*100+Daysum)) {\n\t\t\t\t\t//printf(\"%d\\n\",tmp*10000+Monthsum*100+Daysum);\n\t\t\t\t\t++ans;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdfs(i+1,tmp);//\n\t\t}\n\t}\n}\nint main(void) {\n\tT=read();\n\twhile(T--) {\n\t\tans=0;\n\t\tscanf(\"%s\",a+1);//\u8fd9\u91cc\u4e3a\u4e86\u4f7f\u4e0b\u6807\u4ece1\u5f00\u59cb\n\t\tif(a[1]=='-'&&a[2]=='-'&&a[3]=='-'&&a[4]=='-'&&a[5]=='-'&&a[6]=='-'&&a[7]=='-'&&a[8]=='-') {//\u7279\u5224\n\t\t\tputs(\"55157\");\n\t\t\tcontinue;\n\t\t}\n\t\tdfs(7,0);\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1561861118,
        "uid": 108949,
        "name": "Meatherm",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5440 \u3010\u3010XR-2\u3011\u5947\u8ff9\u3011"
    },
    {
        "content": "## \u4e00\u773c\u5927\u6a21\u62df\u597d\u9898\u554a\uff01\n### $1.1$\u9898\u76ee\u610f\u601d\n\u7ed9\u4f60\u4e00\u4e2a\u6570\u5b57\uff0c\u4e2d\u95f4\u6709\u5f88\u591a\u4e2a\u7b49\u5f85\u586b\u6570\u5b57\u7684\u7a7a\u683c\uff0c\u95ee\u4f60\u6709\u51e0\u79cd\u5408\u6cd5\u7684\u586b\u6570\u65b9\u6848\u3002\n### $2.1$\u601d\u8def\n\u6211\u4eec\u53ef\u4ee5\u5148\u5927\u529b\u7b5b\u9009\u51fa$1..1e9$\u7684\u7d20\u6570 **\uff08\u7ebf\u6027\u7b5b\u65e2\u53ef\u4ee5\u5566\uff09**\u3002\u7136\u540e\u5c31\u5f00\u59cb\u66b4\u641c\uff0c\u7136\u540e\u8ba1\u7b97\u5408\u6cd5\u7684\u586b\u6570\u65b9\u6848\u6709\u591a\uff1f\u5173\u952e\u662f\u5728\u7ec6\u8282\u7684\u5904\u7406\uff1a\n\n$A.$\u95f0\u5e74\u4e0e\u5e73\u5e74\u7684\u4e8c\u6708\u7684\u5929\u6570\u662f\u4e0d\u540c\u7684\uff0c\u8fd9\u4e2a\u8981\u8fdb\u884c\u7279\u5224\u3002\n\n$B.$\u5982\u679c\u6708\u7684\u6570\u91cf\u4e0d\u5408\u6cd5 **\uff08>12\uff09**\uff0c\u8fd9\u4e2a\u6708\u7684\u65e5\u5b50\u6570\u4e0d\u5408\u6cd5\uff0c\u5bf9\u4e8e\u4e0d\u540c\u6708\u4efd\u4e0d\u540c\u5224\u65ad\u3002\n\n$C.$**\u65e5**\u4ee5\u53ca**\u6708+\u65e5**\u4ee5\u53ca**\u5e74+\u6708+\u65e5**\u8981\u662f\u7d20\u6570\n\n### $3.1$\u4ee3\u7801\u5b9e\u73b0\n```cpp\n#include <bits/stdc++.h>\n#define re register\nusing namespace std;\nint num[13],tmp[14],n,m,res,cnt,ans,prime[100000010];\nbool is[100000010];\nchar c[101];\ninline void solve() {\n\tint ri,yue,nian;\n\tnum[2]=28;\n\tnian=tmp[1]*1000+tmp[2]*100+tmp[3]*10+tmp[4];\n\tyue=tmp[5]*10+tmp[6];\n\tri=tmp[7]*10+tmp[8];//\u8ba1\u7b97\u5e74\u6708\u65e5\u5bf9\u5e94\u7684\u6570\u5b57\n\tif(nian%4==0&&nian%100!=0||nian%400==0) num[2]=29;\n   //\u5224\u65ad\u8fd9\u5e74\u662f\u5426\u4e3a\u95f0\u5e74\uff0c\u95f0\u5e742\u6708\u670929\u5929\n\tif(!nian) return;\n\tif(!yue||yue>12) return;\n\tif(!ri||ri>num[yue]) return;//\u5224\u65ad\u5e74\u6708\u65e5\u662f\u5426\u5408\u6cd5\n\tint sum1=ri;\n\tint sum2=yue*100+ri;\n\tint sum3=nian*10000+yue*100+ri;\n\tif(is[sum1]||is[sum2]||is[sum3]) return;//C\u6761\u4ef6\n\tans++;\n}\ninline void dfs(int x) {\n\tif(x==9) {\n\t\tsolve();\n\t\treturn;\n\t}\n\tif(c[x]!='-') {\n\t\ttmp[x]=c[x]-'0';\n\t\tdfs(x+1);\n\t}\n\telse {\n\t\tfor ( re int i=0;i<=9;i++ ) {\n\t\t\ttmp[x]=i;\n\t\t\tdfs(x+1);\n\t\t\ttmp[x]=0;//\u56de\u6eaf\n\t\t}\n\t}\n}//\u66b4\u641c\n//inline void special_judge() {\n//\tif(c[1]=='-'&&c[2]=='-'&&c[3]=='-'&&c[4]=='-'&&c[5]=='-'&&c[6]=='-'&&c[7]=='-'&&c[8]=='-') \n//\t\tputs(\"55157\");\n//} \nint main() {\n\tnum[1]=31;\n\tnum[2]=28;\n\tnum[3]=31;\n\tnum[4]=30;\n\tnum[5]=31;\n\tnum[6]=30;\n\tnum[7]=31;\n\tnum[8]=31;\n\tnum[9]=30;\n\tnum[10]=31;\n\tnum[11]=30;\n\tnum[12]=31;//\u6bcf\u4e2a\u6708\u7684\u65e5\u5b50\u7684\u6570\u91cf\n\tis[1]=1;\n\tfor ( re int i=2;i<=100000005;i++ ) {\n\t\tif(!is[i]) prime[++cnt]=i;\n\t\tfor ( re int j=1;j<=cnt;j++ ) {\n\t\t\tif(prime[j]*i>100000005) break;\n\t\t\tis[prime[j]*i]=1;\n\t\t\tif(i%prime[j]==0) break;\n\t\t}\n\t}//\u7ebf\u6027\u7b5b\u7d20\u6570\n\tint q;\n\tscanf(\"%d\",&q);\n\twhile(q--) {\n\t\tscanf(\"%s\",c+1);\n\t\tmemset(tmp,0,sizeof(tmp));\n\t\tans=0;\n\t\tdfs(1);\n\t\tif(c[1]=='-'&&c[2]=='-'&&c[3]=='-'&&c[4]=='-'&&c[5]=='-'&&c[6]=='-'&&c[7]=='-'&&c[8]=='-') {\n\t\t\tputs(\"55157\");\n\t\t\tcontinue;\n\t\t}\n      //\u7279\u5224\uff0c\u5426\u5219\u4f1aT\u4e00\u4e2a\u70b9\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n\n```\n### $4.1$\u603b\u7ed3\n\u8fd9\u9053\u9898\u76ee\u5f88\u7b80\u5355\uff0c\u4e3b\u8981\u662f\u7ec6\u8282\u591a\uff0c\u4ea4\u4e86\u597d\u591a\u6b21\u624d\u8c03\u51fa\u6765\uff01\u8ba4\u771f\u505a\u80af\u5b9a\u80fd\u591fA\u6389\u7684\u5440\u3002\u7b97\u662f**XR-2**\u7b2c\u4e8c\u7b80\u5355\u7684\u9898\u76ee\u5566\u5427\uff01",
        "postTime": 1561812841,
        "uid": 172612,
        "name": "\u7c73\u5947\u5947\u7c73",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5440 \u3010\u3010XR-2\u3011\u5947\u8ff9\u3011"
    },
    {
        "content": "\u9996\u5148,\u6709\u591a\u7ec4\u6d4b\u8bd5\u6570\u636e,\u8981\u5224\u65ad\u662f\u5426\u662f\u7d20\u6570\u5f88\u591a\u6b21,\u6240\u4ee5\u5148\u7528\u7b5b\u6cd5\u6c42\u662f\u4e0d\u662f\u8d28\u6570\u3002\n\n\u7b5b\u6cd5\u5c31\u4e0d\u591a\u8bb2\u4e86,\u4e0d\u4f1a\u7684\u81ea\u5df1\u67e5\u3002\n```cpp\n    for(i=2;i<=size;i++){\n        if(!mark[i]){\n            prime[sum++]=i;\n        }\n        for(j=0;j<sum&&i*prime[j]<=size;j++){\n            mark[i*prime[j]]=1;\n            if(i%prime[j]==0){\n                break;\n            }\n        }\n    }\n```\n\u63a5\u4e0b\u6765\u8981\u5f00\u59cb\u679a\u4e3e\u4e86,\u6211\u4eec\u8981\u4f18\u5316\u679a\u4e3e\u987a\u5e8f,\u8fd9\u6837\u5c31\u53ef\u4ee5\u526a\u679d\u3002\u56e0\u4e3a\u5929\u8981\u5355\u72ec\u6ee1\u8db3\u8d28\u6570,\u4e3a\u4e86\u526a\u679d,\u5148\u679a\u4e3e\u5929\u3002\n\n\u526a\u679d:\n```cpp\n    if(mark[day]){\n        continue; //continue\u662f\u8df3\u8fc7\u4e00\u6b21\u5faa\u73af\u7684\u610f\u601d\u3002\n    }\n    if((s[6]!='-')&&(day/10!=s[6]-'0')||(s[7]!='-')&&(day%10!=s[7]-'0')){\n        continue;\n    } //day/10=\u5341\u4f4d,day%10=\u4e2a\u4f4d\n```\n\n\u56e0\u4e3a\u5929\u5df2\u7ecf\u77e5\u9053\u4e86,\u800c\u6708+\u5929\u8981\u662f\u8d28\u6570,\u6240\u4ee5\u518d\u679a\u4e3e\u6708\u3002\n\n\u6708\u7684\u526a\u679d\u6709\u70b9\u590d\u6742,\u5982\u679c\u5929\u662f31\u800c\u6708\u53c8\u662f2,4,6,9,11,\u5c31\u4e0d\u7528\u679a\u4e3e\u4e86\u3002\n\n\u6708\u7684\u526a\u679d(day30\u8868\u793a\u662f\u4e0d\u662f\u53ea\u670930\u6216\u4ee5\u4e0b\u7684\u5929):\n```cpp\n\nif(mark[month*100+day]){\n    continue;\n}\nif(day30[month]&&day==31){\n    continue;\n}\nif((s[4]!='-')&&(month/10!=s[4]-'0')||(s[5]!='-')&&(month%10!=s[5]-'0')){\n    continue;\n}\n```\n\u63a5\u4e0b\u6765\u53ea\u6709\u5e74\u53ef\u4ee5\u9009\u62e9\u4e86,\u5982\u679c\u4e0d\u662f\u95f0\u5e74(\u4e0d\u77e5\u9053\u95f0\u5e74\u7684\u7ffb\u5c0f\u5b66\u6570\u5b66\u8bfe\u672c\u53bb),\u5c31\u8981\u5224\u65ad\u5929\u662f\u4e0d\u662f29(\u5982\u679c\u6708\u662f2)\n\n\u5e74\u7684\u5224\u65ad:\n```cpp\n\n    if(mark[year*10000+month*100+day]){\n        continue;\n    }\n    if((!xyq(year))&&month==2&&day==29){\n        continue;\n    }\n    if((s[0]!='-')&&(year/1000!=s[0]-'0')||(s[1]!='-')&&(year/100%10!=s[1]-'0')||(s[2]!='-')&&(year/10%10!=s[2]-'0')||(s[3]!='-')&&(year%10!=s[3]-'0')){\n        continue;\n    }\n```\n\u5982\u679c\u6ee1\u8db3\u6761\u4ef6,sum++,\u6700\u540e\u8f93\u51fasum\n\n\u5b8c\u6574\u4ee3\u7801(\u6ce8\u91ca\u5c31\u4e0d\u4f1a\u90a3\u4e48\u591a\u4e86):\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define size 100000005 //#define\u65b9\u4fbf\u4fee\u6539\u3002\u82e5\u591a\u51fa\u51fa\u73b0,\u5c31\u4e0d\u7528\u4e00\u4e2a\u4e2a\u6539\u4e86\u3002\nint prime[size]={0};\nbool mark[size]={0};\nbool day30[]={0,0,1,0,1,0,1,0,0,1,0,1};\nbool xyq(int a){ //\u5224\u65ad\u662f\u4e0d\u662f\u95f0\u5e74\u3002\n    if(a%400==0||a%100!=0&&a%4==0){\n        return true;\n    }\n    return false;\n}\nint main(){\n    int t,sum=0,i,j,day,month,year;\n    string s;\n    scanf(\"%d\",&t);\n    for(i=2;i<=size;i++){\n        if(!mark[i]){\n            prime[sum++]=i;\n        }\n        for(j=0;j<sum&&i*prime[j]<=size;j++){\n            mark[i*prime[j]]=1;\n            if(i%prime[j]==0){\n                break;\n            }\n        }\n    }\n    sum=0;\n    for(i=1;i<=t;i++){\n        cin>>s;\n        sum=0;\n        for(day=2;day<=31;day++){\n            if(mark[day]){\n                continue;\n            }\n            if((s[6]!='-')&&(day/10!=s[6]-'0')||(s[7]!='-')&&(day%10!=s[7]-'0')){\n                continue;\n            }\n        //\tcout<<\"day=\"<<day<<endl;\n            for(month=1;month<=12;month++){\n                if(mark[month*100+day]){\n                    continue;\n                }\n                if(day30[month]&&day==31){\n                    continue;\n                }\n                //cout<<\"month=\"<<month<<endl;\n                if((s[4]!='-')&&(month/10!=s[4]-'0')||(s[5]!='-')&&(month%10!=s[5]-'0')){\n                    continue;\n                }\n                //cout<<\"month=\"<<month<<endl;\n                for(year=1;year<=9999;year++){\n                    if(mark[year*10000+month*100+day]){\n                        continue;\n                    }\n                    if((!xyq(year))&&month==2&&day==29){\n                        continue;\n                    }\n                    if((s[0]!='-')&&(year/1000!=s[0]-'0')||(s[1]!='-')&&(year/100%10!=s[1]-'0')||(s[2]!='-')&&(year/10%10!=s[2]-'0')||(s[3]!='-')&&(year%10!=s[3]-'0')){\n                        continue;\n                    }\n                    sum++;\n                }\n            }\n        }\n        cout<<sum<<endl;\n    }\n    return 0;\n}\n```\n[ac](https://www.luogu.org/recordnew/show/20155672)\u8bb0\u5f55(\u771f\u4e0d\u77e5\u90534s\u6709\u4ec0\u4e48\u7528,\u6211\u6700\u6162\u7684\u4e5f\u53ea\u6709965ms)\u3002\n\n\u5410\u69fd:\u84dd\u8272\u6807\u7b7e\u662f\u4ec0\u4e48\u9b3c\u3002\u3002\u3002",
        "postTime": 1561955046,
        "uid": 87799,
        "name": "xh39",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5440 \u3010\u3010XR-2\u3011\u5947\u8ff9\u3011"
    },
    {
        "content": "## $Soltuion$\n\n\u4e00\u9053\u6709\u7ec6\u8282\u7684\u6a21\u62df\u9898\u3002\n\n\u5148\u7ebf\u6027\u7b5b\u7b5b\u51fa $1e8$ \u4ee5\u5185\u7684\u6240\u6709\u8d28\u6570\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5b57\u7b26\u4e32\u66b4\u529b\u679a\u4e3e\u6240\u6709\u8d28\u6570\u5224\u65ad\u662f\u5426\u5339\u914d\u5373\u53ef\u3002\n\n\u6ce8\u610f\u8981\u9884\u5904\u7406\u51fa\u8be5\u8d28\u6570\u7684\u5e74\u6708\u65e5\u662f\u5426\u5408\u6cd5\u3002\n\n\u5751\u70b9\u5728\u4e8e\u6bcf\u4e2a\u5e74\u6708\u65e5\u3001\u6bcf\u4e2a\u6708\u65e5\u3001\u6bcf\u4e2a\u65e5\u671f\u90fd\u8981\u662f\u8d28\u6570\uff0c\u8fd9\u4e2a\u8981\u7279\u5224\u3002\n\n\u590d\u6742\u5ea6\u57fa\u672c\u662f\u6ee1\u7684\uff0c\u800c\u4e14\u5e38\u6570\u5de8\u5927\u3002\n\n## $Code:$\n\n```cpp\n#include <bits/stdc++.h>\n//#include <tr1/unordered_map>\n//#include\"Bignum/bignum.h\"\n//#define lll bignum\n#define lowbit(x) (x & -x)\n#define debug(x) (cout << \"#x = \" << (x) << endl)\n#define Set(x, i) memset (x, i, sizeof(x))\n#define R register\n#define int long long \n#define For(i, j, k) for(R int i = (j), ED = (k); i <= ED; ++i)\n#define foR(i, j, k) for(R int i = (j), ED = (k); i >= ED; --i)\n#define Cross(i, j, k) for(R int i = (j); i; i = (k))\nusing namespace std;\ntypedef long long ll;\nconst ll M = 1e7 + 10;\nconst ll N = 100000011;\nconst ll INF = 5e16;\n\nnamespace IO {\n\n    inline char gc() {\n        static char buf[100000], *p1 = buf, *p2 = buf;\n        return (p1 == p2) && (p2 = (p1 = buf) +\n            fread (buf, 1, 100000, stdin), p1 == p2)? EOF: *p1++;\n    }\n\n    #define dd ch = getchar()\n    inline ll read() {\n        ll x = 0; int f = 0; char dd;\n        for (; !isdigit (ch); dd) f ^= (ch == '-');\n        for (; isdigit (ch); dd)  x = x * 10 + (ch ^ 48);\n        return f? -x: x;\n    }\n    #undef dd\n\n    inline void write( ll x ) {\n        if (x < 0) putchar ('-'), x = -x;\n        if (x > 9) write (x / 10); putchar (x % 10 | 48);\n    }\n\n    inline void wrn ( ll x ) { write (x); putchar (' '); }\n\n    inline void wln ( ll x ) { write (x); putchar ('\\n'); }\n\n    inline void wlnn ( ll x, ll y ) { wrn (x), wln (y); }\n\n}\n\nusing IO::wln;\nusing IO::read;\n\nbool Vis[N];\nll cnt = 0, CCC = 0, p[M], Way[M];\n\ninline void Init() {\n    Vis[0] = Vis[1] = 1;\n    For ( i, 2, 1e8 ) {\n        if (!Vis[i]) p[++cnt] = i;\n        for (R int j = 1; j <= cnt && i * p[j] <= 1e8; ++j) {\n            Vis[i * p[j]] = 1;\n            if (i % p[j] == 0) break;\n        }\n    }\n}\n\nconst ll PY[] = { 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };\nconst ll RY[] = { 0, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };\n\nchar s[11];\n\ninline int Check ( ll *a ) {\n//\tFor ( i, 1, 8 ) cout << a[i]; puts (\"\");\n    For ( i, 1, 8 ) if (s[i] != '-' && s[i] - '0' != a[i]) return 0; return 1;\n}\n\nsigned main()\n{\n//\tfreopen(\".in\", \"r\", stdin);\n//\tfreopen(\".out\", \"w\", stdout);\n    Init();\n    For ( i, 1, cnt ) {\n        ll Nian = p[i] / 10000, yue = p[i] % 10000 / 100, ri = p[i] % 100;\n        if (Nian <= 0 || yue <= 0 || yue > 12 || ri <= 0 || ri > RY[yue]) \n            { p[i] = -1; continue; }\n        if (!((Nian % 4 == 0 && Nian % 100 != 0) || Nian % 400 == 0)) {\n            if (ri > PY[yue]) { p[i] = -1; continue; }\n        }\n        if (Vis[yue * 100 + ri] || Vis[ri]) { p[i] = -1; continue; }\n    }\n    ll T = read(); while (T--) {\n        scanf (\"%s\", s + 1);\n        ll Ans = 0;\n        For ( i, 1, cnt ) {\n            if (p[i] == -1) continue;\n            ll T = p[i];\n            ll cc = 0, a[11], b[11];\n            Set (a, 0); Set (b, 0);\n            for (R int j = 8; j; --j) a[j] = T % 10, T /= 10;\n//\t\t\tFor ( j, 1, cc ) a[j] = b[cc - j + 1];\n            Ans += Check (a);\n        }\n        wln (Ans);\n    } return 0;\n}\n\n/*\n1\n--------\n53470327\n*/\n\n```",
        "postTime": 1561897438,
        "uid": 104379,
        "name": "Cesare",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5440 \u3010\u3010XR-2\u3011\u5947\u8ff9\u3011"
    },
    {
        "content": "### \u601d\u8def\uff08\u975e\u6b63\u89e3\uff09\uff1a\n\n- \u641c\u7d22\u7a77\u679a+\u5224\u65ad\n\n\u91c7\u7528$\\text{dfs(now)}$\uff0c$\\text{now}$\u4ee3\u8868\u8fd9\u662f\u5b57\u7b26\u4e32\u7b2c\u51e0\u4f4d\u3002\u5f53\u5230\u8fbe\u7b2c$8$\u4f4d\uff0c\u8fdb\u884c\u5224\u65ad\u3002\uff080\u8d77\u70b9\uff09\n\n------------\n\n\n\u8fd9\u5f53\u7136\u4f1a\u8d85\u65f6\u5566~~4s\u90fd\u8dd1\u4e0d\u8fc7~~\u3002\u4e8e\u662f\u6211\u4eec\u8981\u526a\u679d\u3002\n\n### \u65f6\u95f4\u4f18\u5316\uff1a\n\n- \u6708\u4efd\u5341\u4f4d\u6570\u53ea\u80fd\u662f$0$\u6216$1$\uff0c\u5269\u4e0b\u7684\u4e0d\u7528\u679a\u4e3e\u3002\n\n- \u65e5\u671f\u5341\u4f4d\u6570\u53ea\u80fd\u662f$0-3$\uff0c\u5269\u4e0b\u7684\u4e0d\u7528\u679a\u4e3e\u3002\n\n- \u65e5\u671f\u4e2a\u4f4d\u6570\u5fc5\u7136\u53ea\u80fd\u662f\u5947\u6570\uff0c\u5426\u5219\u5fc5\u5b9a\u4e0d\u662f\u7d20\u6570\u3002\n\n- \u6ca1\u6709$0$\u6708\u6216$0$\u65e5\u3002\n\n- **\u4f46\u662f**\u8fd8\u662f\u4f1a\u8d85\u65f6\uff0c`--------`\u8fd9\u4e2a\u70b9\u8fc7\u4e0d\u53bb\u3002\u4e8e\u662f\u6211\u4eec\u5c31\u8ba9\u7a0b\u5e8f\u8dd1\u51fa\u7b54\u6848\uff0c\u5e76\u6253\u8868\u5904\u7406\u3002\n\n- \u672c\u6765\u60f3\u7528`unordered_map`\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u4f46\u662f\u8c8c\u4f3cSTL\u4f1a\u4f7f\u5f97\u7a0b\u5e8f\u66f4\u6162\uff08\u6d4b\u51fa\u6765\u662f\u8fd9\u6837\uff09\u3002\n\n- \u7b5b\u7d20\u6570\u91c7\u7528\u6b27\u62c9\u7b5b\u3002\u4f46\u662f\u672c\u4eba\u592a\u83dc\u4e0d\u4f1a\u6b27\u62c9\u7b5b\u3002\u57c3\u6c0f\u7b5b\u6570\u7ec4\u4f1aMLE\u3002\u4f18\u5316\u6b64\u5904\u53ef\u4ee5\u5361\u8fc7\u672c\u9898\u3002\n\n- \u5176\u5b83\u81ea\u884c\u8865\u5145\u2026\u2026\n\n\n------------\n\n### \u4e00\u4e9b\u7ec6\u8282\uff1a \n\n- \u6ce8\u610f\u95f0\u5e74\u5224\u5b9a\u65b9\u6cd5\u3002\n\n- $1$\u548c$0$\u4e0d\u662f\u7d20\u6570\uff0c\u8bb0\u5f97\u5224\u65ad\u3002\n\n- \u5c06\u5b57\u7b26\u4e32\u8f6c\u4e3a\u6570\u5b57\u4f7f\u7528`stoi()`\u51fd\u6570\u3002\n\n- $\\text{dfs}$\u65f6\u8bb0\u5f97\u56de\u6eaf\u3002\n\n- \u5b57\u7b26\u4e32\u4ee5$0$\u5f00\u59cb\uff0c\u6240\u4ee5$\\text{dfs}$\u4ece$0$\u5f00\u59cb\uff0c\u4ee5$8$\u7ed3\u675f\n\n\n------------\n\n\u732e\u4e0a\u4e11\u964b\u7684\u4ee3\u7801qaqaq\uff1a\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <sstream>\n#include <string>\nusing namespace std;\n\nint ans;\nstring st;\nint day[20]={0,31,28,31,30,31,30,31,31,30,31,30,31};\n\ninline bool leap_year(const int& a)\n{\n\treturn (a%4==0 && a%100!=0) || a%400==0;//\u6ce8\u610f\u95f0\u5e74\u5224\u65ad\u65b9\u6cd5\n}\n\nbool prime(const int& a)//\u5efa\u8bae\u4f7f\u7528\u6b27\u62c9\u7b5b\uff0c\u8fd9\u91cc\u662f\u672c\u4eba\u4e0d\u4f1a\n{\n\tif(a==1 || a==0)\n\t return false;\n\tif(a==2 || a==3)\n\t return true;\n\tif(a%6!=1 && a%6!=5)\n\t return false;\n\tfor(register int i=5;i*i<=a;i+=6)\n\t if(a%i==0 || a%(i+2)==0)\n\t  return false;\n\treturn true;\n}\n\ninline bool valid(const string s)\n{\n\tregister const int year=stoi(s.substr(0,4));//stoi()\u5c06\u5b57\u7b26\u4e32\u8f6c\u4e3aint\n\tregister const int month=stoi(s.substr(4,2));\n\tregister const int date=stoi(s.substr(6,2));\n    //\u4e00\u7cfb\u5217\u5224\u65ad\n\tday[2]=(leap_year(year)?29:28);\n\tif(year<1 || year>9999)\n\t return false;\n\tif(month<1 || month>12)\n\t return false;\n\tif(date<1 || date>day[month])\n\t return false;\n\treturn (prime(date) && prime(month*100+date) && prime(year*10000+month*100+date));\n}\n\nvoid dfs(register int now)\n{\n\tif(now==8)\n\t{\n\t\tif(valid(st))\n\t\t ++ans;\n\t\treturn;\n\t}\n\tif(st[now]=='-')\n\t for(register char i='0';i<='9';i++)\n\t {\n     \t //\u4e00\u7cfb\u5217\u526a\u679d\n\t\t if(now==4 && i>'1')\n\t\t  continue;\n\t\t if(now==5 && st[4]=='1' && i>'2')\n\t\t  continue;\n\t\t if(now==5 && st[4]=='0' && i=='0')\n\t\t  continue;\n\t\t if(now==6 && i>'3')\n\t\t  continue;\n\t\t if(now==7 && !(i-'0')&1)\n\t\t  continue;\n\t\t st[now]=i;\n\t\t dfs(now+1);\n\t\t st[now]='-';//\u8bb0\u5f97\u56de\u6eaf\n\t }\n\telse//\u522b\u5fd8\u4e86\u8fd9\u4e2aelse\u3002\u4e0d\u662f\u7a7a\u4f4d\u5c31\u7ee7\u7eed\u5f80\u4e0b\u641c\u3002\n\t dfs(now+1);\n}\n\nint main()\n{\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T--)\n\t{\n\t\tcin>>st;\n\t\tif(st==\"--------\")//\u6253\u8868\u5927\u6cd5\u597d\uff01\n\t\t{\n\t\t\tputs(\"55157\");\n\t\t\tcontinue;\n\t\t}\n\t\tdfs(0);\n\t\tprintf(\"%d\\n\",ans);\n\t\tans=0;//\u8bb0\u5f97\u6e05\u96f6\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1561874725,
        "uid": 80049,
        "name": "Hexarhy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5440 \u3010[XR-2]\u5947\u8ff9\u3011"
    },
    {
        "content": "\u672c\u9898\u4e3b\u8981\u5c31\u662f\u66b4\u641c+\u4f18\u5316\n___\n\u4f18\u5316\u4f1a\u4e00\u4e00\u89e3\u91ca\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,ans;\nshort year,day,month,days[13]={0,31,28,31,30,31,30,31,31,30,31,30,31};\nstring k;\nbool a[10];\nshort visit[30000];//\u8be5\u6570\u662f\u5426\u662f\u8d28\u6570\uff08\u4e0d\u77e5\u90530 \u662f1 \u4e0d\u662f2\uff09\nbool ch(int x)//\u662f\u5426\u8d28\u6570int\u5185\u7684\n{\n\tif(x<=1)return 0;\n\tif(x==2||x==3)return 1;\n\tif(x%2==0||x%3==0)return 0;\n\tfor(short s=5;s<=sqrt(x);s+=6)\n\t{\n\t\tif(x%s==0||x%(s+2)==0)return 0;\n\t}\n\treturn 1;\n}\nbool ch2(short x)//\u662f\u5426\u8d28\u6570short\u5185\u7684\n{\n\tif(visit[x]==1)return 1;//\u8bb0\u5f55\u8fc7\n\tif(visit[x]==2)return 0;//\u8bb0\u5f55\u8fc7\n\tif(x<=1)return 0;\n\tif(x==2||x==3)return 1;\n\tif(x%2==0||x%3==0)return 0;\n\tfor(short s=5;s<=sqrt(x);s+=6)//\u9ad8\u6548\u7b5b\u6cd5\n\t{\n\t\tif(x%s==0||x%(s+2)==0)\n\t\t{\n\t\t\tvisit[x]=2;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tvisit[x]=1;\n\treturn 1;\n}\nvoid check()\n{\n\tint u=0;\n\tfor(short s=0;s<8;s++)\n\t{\n\t\tu=u*10+k[s]-'0'; \n\t}\n    //\u5b57\u7b26\u4e32\u6539\u6570\u5b57\n\tyear=u/10000,day=u%100,month=u%10000/100;//\u8ba1\u7b97\u5e74\u6708\u65e5\n\tif(month<1||month>12||day>31||year==0)return;//\u5982\u679c\u4e0d\u7b26\u5408\u6761\u4ef6\n\tif(year%4==0&&year%100||year%400==0)days[2]=29;//\u662f\u5426\u662f\u95f0\u5e74\n\telse days[2]=28;\n\tif(days[month]<day)return;\n\tif(ch(u)&&ch2(u%10000)&&ch2(u%100))//\u662f\u5426\u662f\u8d28\u6570\n\t{\n\t\tans++;\n\t}\n\t\n}\nvoid dfs(short x)//\u6807\u51c6dfs, short\u662f\u7528\u6765\u4f18\u5316\u7684\n{\n\tif(x==8)//8\u4f4d\u4e86\n\t{\n\t\tcheck();\n\t\treturn;\n\t}\n\tif(a[x]==0)//\u4e0d\u662f\u51cf\u53f7\n\t{\n\t\tdfs(x+1);\n\t}\n\telse//\u662f\u51cf\u53f7\n\t{\n\t\tfor(short s=0;s<10;s++)\n\t\t{\n\t\t\tif(x==6&&s>=4||x==4&&s>=2)break;//\u526a\u679d\n\t\t\tif(x==7&&k[6]!='0'&&(s==2||s==4||s==6||s==5||s==8||s==0))continue;//\u526a\u679d\n\t\t\tk[x]=(s+'0');\n\t\t\tdfs(x+1);\n\t\t}\n\t}\n}\nint main()\n{\n\tcin>>n;\n\twhile(n--)\n\t{\n\t\tmemset(a,0,sizeof(a));//\u521d\u59cb\u5316\n\t\tans=0;//\u7b54\u6848\n\t\tcin>>k;\n\t\tif(k==\"--------\")//\u7279\u5224\n\t\t{\n\t\t\tcout<<55157<<endl;\n\t\t\tcontinue;\n\t\t}\n\t\tfor(int s=0;s<8;s++)//\u8bb0\u5f55\u54ea\u4e9b\u5730\u65b9\u662f\u51cf\u53f7\n\t\t{\n\t\t\tif(k[s]=='-')a[s]=1;\n\t\t}\n\t\tdfs(0);\n\t\tcout<<ans<<endl;\n\t}\n}\n```\n___\n\u4e3b\u8981\u4f18\u5316\uff1a\n___\n\u2460\u5224\u65ad\u8d28\u6570\u7684\u65b9\u6cd5\u4ece$O(\\sqrt n)->O(\\frac{\\sqrt n}{3})$\n\n\u539f\u56e0\uff1a\u4efb\u4f55\u4e00\u4e2a\u8d28\u6570\uff08\u9664\u4e86$2,3$\uff09\u5fc5\u5b9a\u662f$6n+1$\u6216$6n-1$\n___\n\u2461\u795e\u5947\u7684\u7279\u522490\u5206\u53d8100\u5206\n```\nif(k==\"--------\")\n{\n\tcout<<55157<<endl;\n\tcontinue;\n}\n```\n___\n\u2462dfs\u526a\u679d\uff1a\u54ea\u4e9b\u4f4d\u4e0d\u53ef\u80fd\u54ea\u4e9b\u6570\uff0c\u6bd4\u5982\u6700\u540e\u4e00\u4f4d\u53ea\u80fd\u662f$1,3,7,9$\uff0c\u5012\u6570\u7b2c\u4e8c\u4f4d\u53ea\u80fd\u662f$0,1,2,3$,\u5012\u6570\u7b2c\u56db\u4f4d\u53ea\u80fd\u662f$0,1$\n___\n\u603b\u4f53\u6765\u8bf4\uff0c\u901f\u5ea6\u6bd4\u7eaf\u679a\u4e3e\uff0c\u65e0\u526a\u679d\u7684\u5feb\u4e0a\u4e0d\u5c11",
        "postTime": 1561864914,
        "uid": 58543,
        "name": "RioBlu",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5440 \u3010\u3010XR-2\u3011\u5947\u8ff9\u3011"
    },
    {
        "content": "\u6ce8\uff1a\u6211\u7684\u8fd9\u7bc7\u9898\u89e3\uff0c\u4ee3\u7801\u590d\u6742\u5ea6\u5e94\u8be5\u662f\u5168\u8c37\u6700\u9ad8\u7684\u4e86\u3002\n\n\u601d\u8def\uff1a\n\nstep 1:\u5982\u679c\u5bf9\u4e8e$--------$\u66b4\u529b\u679a\u4e3e\u7684\u8bdd\uff0cdfs\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u9ad8\u8fbe$10^{8}$\uff0c\u663e\u7136\u662f\u4e0d\u53ef\u53d6\u7684\u3002\n\nstep 2:\u666e\u901a\u7b5b\u6cd5\u9884\u5904\u7406\u51fa\u6240\u6709\u7684\u516b\u4f4d\u7684\u8d28\u6570\u7a7a\u95f4\u590d\u6742\u5ea6\u4f1a\u7206\u70b8\u3002\n\nstep 3:\u56e0\u6b64\uff0c\u66b4\u529b\u679a\u4e3e\u524d\u56db\u4f4d\uff0c\u540e\u56db\u4f4d\u7528\u7b5b\u6cd5\u5f97\u51fa\u8d28\u6570\u5e76\u5224\u65ad\u662f\u5426\u4e3a\u5408\u6cd5\u7684\u6708\u548c\u65e5\u3002\n\nstep 4:\u907f\u514dTLE\uff0c\u5728\u5224\u65ad\u8d28\u6570\u7684\u65f6\u5019\u7528Miller_Rabin\n\n\u51e0\u4e2a\u5c0f\u63d0\u9192\uff1a\n\n1.\u6ce8\u610f\u5224\u65ad\u5e74\u4efd\u4e0d\u4e3a0\n\n2.\u5728\u7edf\u8ba1\u7b54\u6848\u7684\u65f6\u5019\uff0c\u6ce8\u610f\u5224\u65ad\u95f0\u5e74\u548c229\u3002\n\n3.\u6ce8\u610f\u5224\u65ad\u65e5\u671f\u4e3a\u8d28\u6570\n\n4.\u5224\u65ad\u6708\u4efd\u4e0d\u4e3a0\n\n\u4ee3\u7801\uff1a\n\n```\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\n\n#define rd(x) x=read()\n\n#define int long long\n\n#define N 10005\n\nusing namespace std;\n\nint T;\nint p[N]={0},vis[N]={1,1},prime[N];\nint cnt,tot,res;\nint ans[5];\nstring s;\n\ninline int read()\n{\n    int x=0,f=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\n\ninline void write(int x)\n{\n    if(x<0){putchar('-');x=-x;}\n    if(x>=10)write(x/10);\n    putchar(x%10+'0');\n}\n\nint pow_mod(int a,int b,int r)\n{\n    int ans=1,buff=a;\n    while(b)\n    {\n        if(b&1)ans=(ans*buff)%r;\n        buff=(buff*buff)%r;\n        b>>=1;\n    }\n    return ans;\n}\n\nbool test(int n,int a,int d)\n{\n    if(n==2)return true;\n    if(n==a)return false;\n    if(!(n&1))return false;\n    while(!(d&1))d>>=1;\n    int t=pow_mod(a,d,n);\n    while(d!=n-1&&t!=n-1&&t!=1)\n\t{\n        t=t*t%n;\n        d<<=1;\n    }\n    return t==n-1||(d&1)==1;\n}\n\nbool isprime(int n)\n{\n    int a[]={2,3,5,7};\n    for(int i=0;i<=3;i++)\n\t{\n        if(n==a[i])return true;\n        if(!test(n,a[i],n-1))return false;\n    }\n    return true;\n}\n//Miller_Rabin\u5224\u8d28\u6570 \n\n/*bool check(int x)\n{\n\tif(x<2)return false;\n\tfor(int i=2;i<=sqrt(x);i++)\n\t{\n\t\tif(x%i==0)return false;\n\t}\n\treturn true;\n}*/ \n\nbool leap(int x)\n{\n\tif(x%4)return false;\n\tif(!(x%100)&&(x%400))return false;\n\treturn true;\n}//\u5224\u65ad\u95f0\u5e74 \n\nvoid dfs(int step)\n{\n\tif(step==4)\n\t{\n\t\tint sum=ans[0]*1000+ans[1]*100+ans[2]*10+ans[3];//\u7edf\u8ba1\u5e74 \n\t\tif(sum)//\u6ce8\u610f\u5224\u65ad\u5e74\u4efd\u4e0d\u4e3a0 \n\t\tfor(int i=0;i<tot;i++)\n\t\t{\n\t\t\tint Sum=sum*10000+prime[i];//\u5f97\u51fa\u516b\u4f4d\u6570 \n\t\t\tif(isprime(Sum))//\u5982\u679c\u7b26\u5408\u8d28\u6570 \n\t\t\t{\n//\t\t\t\tcout<<Sums<<endl;\n\t\t\t\tif(!leap(sum)&&prime[i]==229);//\u5982\u679c\u662f\u4e0d\u662f\u95f0\u5e74\u4f46\u51fa\u73b0\u4e862\u670829\u65e5 \n\t\t\t\telse \n\t\t\t\t{\n//\t\t\t\t\tcout<<Sum<<endl;\n\t\t\t\t\tres++;\t\n\t\t\t\t}//\u7b54\u6848++ \n\t\t\t} \n\t\t}\n\t\treturn ;\n\t}\n\tif(s[step]=='-')\n\t{\n\t\tfor(int i=0;i<=9;i++)\n\t\t{\n\t\t\tans[step]=i;\n\t\t\tdfs(step+1); \n\t\t} \n\t} //\u5982\u679c\u53ef\u586b \n\telse{ans[step]=s[step]-'0';dfs(step+1);}//\u5982\u679c\u4e0d\u53ef\u586b \n}//\u66b4\u529b\u641c\u7d22\u524d\u56db\u4f4d \n\nmain()\n{\n//\tvis[0]=1,vis[1]=1;\n//\tp[0]=0;\n//\tcout<<run(1904)<<endl;//\u6d4b\u8bd5 \n\trd(T);\n\tfor(int i=2;i<N;i++)         \n    {              \n        if(!vis[i])p[cnt++]=i;           \n        for(int j=0;j<cnt&&i*p[j]<N;j++)  \n        {                 \n            vis[i*p[j]]=1;\n        \tif(!(i%p[j]))break;       \n\t\t}\n\t}//\u7b5b\u6cd5\u7edf\u8ba1\u540e\u56db\u4f4d\u7684\u8d28\u6570 \n\twhile(T--)\n\t{\n\t\tmemset(prime,0,sizeof(prime));\n\t\ttot=0,res=0;\n\t\tcin>>s;\n\t\tfor(int i=0;i<cnt;i++)\n\t    {\n\t    \tint x=p[i]%10,y=p[i]%100/10,z=p[i]%1000/100,w=p[i]/1000;\n\t\t\tint f=1;\n\t\t\tint month=w*10+z,date=y*10+x;\n//\t\t\tcout<<month<<' '<<date<<endl;\n\t\t\t\n\t\t\tif(date!=2&&date!=3&&date!=5&&date!=7&&date!=11&&date!=13&&date!=17&&date!=19&&date!=23&&date!=29&&date!=31)f=0;//\u6ce8\u610f\u5224\u65ad\u65e5\u662f\u5426\u4e3a\u8d28\u6570 \n\t\t\tif(month==2&&date>29)f=0;\n            if((month==1||month==3||month==5||month==7||month==8||month==10||month==12)&&date>31)f=0; \n            if((month==2||month==4||month==6||month==9||month==11)&&date>30)f=0; //\u5224\u65ad\u6708\u4efd\u548c\u65e5\u671f \n            if(month>12||month==0)f=0;//\u5224\u65ad\u6708\u4efd\u662f\u5426\u8d85\u9650 \n\t\t\tif(s[4]!='-')if(s[4]-'0'!=w)f=0;\n\t\t\tif(s[5]!='-')if(s[5]-'0'!=z)f=0;\n\t\t\tif(s[6]!='-')if(s[6]-'0'!=y)f=0;\n\t\t\tif(s[7]!='-')if(s[7]-'0'!=x)f=0;\n\t\t\tif(f)prime[tot++]=p[i];//\u5224\u65ad\u8d28\u6570\u662f\u5426\u7b26\u5408\u5e74\u6708\u65e5 \n\t\t}\n//\t\tcout<<tot<<endl;\n//\t\tfor(int i=0;i<tot;i++)cout<<prime[i]<<endl; \n\t\tdfs(0);\n\t\tprintf(\"%d\\n\",res); \n\t}\n    \n\t\n\n    return 0;\n}\n\n\n\n```",
        "postTime": 1561863953,
        "uid": 53807,
        "name": "Erusel",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5440 \u3010\u3010XR-2\u3011\u5947\u8ff9\u3011"
    },
    {
        "content": "### \u6b64\u9898\u89e3\u975e\u6b63\u89e3\n\n\u800c\u4e14\u5f88\u6162\n\n\u7b2c\u4e00\u773c\u770b\u4e0a\u53bb\u60f3\u5230\u4e86\u866b\u98df\u7b97\uff0c\u4e8e\u662f\u5c31\u60f3``dfs``\u3002\u4f46\u662f\u56e0\u4e3a\u592a\u5f31\uff0c\u6ca1\u80fd\u5177\u8c61\u5316\u3002\n\n\u7b2c\u4e00\u4e2a\u601d\u8def\uff1a\n\n- \u4e0a\u7b5b\u8868\n\n- \u5224\u65ad\u51fa\u6ee1\u8db3\u60c5\u51b5\u7684\u6700\u5927\u6570\u3002\u8fd9\u90e8\u5206\u7b80\u5355\uff0c\u5c31\u662f\u628a``'-'``\u76f4\u63a5\u6362\u62109\n\n- \u4ece0001\u5e7401\u670801\u65e5\u5f00\u59cb\uff0c\u679a\u4e3e\u3002\u679a\u4e3e\u90e8\u5206\u601d\u8def\u5982\u4e0b\uff1a\n\n  - \u5148\u63d0\u53d6\u51fa\u5e74\u3001\u6708\u3001\u65e5\n  - \u5206\u7c7b\u8ba8\u8bba\uff1a\n  - 1.\u95f0\u5e74\u3001\u5e73\u5e74\u4e8c\u6708\u5206\u522b30\u300129\u65e5\u5411\u6708\u8fdb\u4f4d\uff0c\u65e5\u671f\u6539\u62101\n  - 2.\u5927\u3001\u5c0f\u6708\u5206\u522b32\u300131\u65e5\u5411\u6708\u8fdb\u4f4d\uff0c\u65e5\u671f\u6539\u62101\n  - \u901a\u7528\u60c5\u51b5\uff1a\u5230\u4e8613\u6708\u5411\u5e74\u8fdb\u4f4d\n\n  \u4ee3\u7801\uff1a\n\n  ```cpp\n  bool isrn(int year) //\u5224\u65ad\u5e73\uff080\uff09\u95f0\uff081\uff09\u5e74\n  {\n      if(year % 100 == 0) {\n          return year % 400 == 0;\n      }\n      else return year % 4 == 0;\n  }\n  \n  bool isbm(int mon) //\u5224\u65ad\u5927\uff081\uff09\u5c0f\uff080\uff09\u6708\n  {\n      return mon == 1 || mon == 3 || mon == 5 || mon == 7 || mon == 8 || mon == 10 || mon == 12;\n  }\n  \n  int jw(int a)\n  {\n      int year = a / 10000; \n      int mon = a / 100 % 100;\n      int day = a % 100; //\u63d0\u53d6\u5e74\u6708\u65e5\n      day++; //\u6a21\u62df\u52a0\u6cd5\n      if(isrn(year) && mon == 2 && day == 29 + 1) mon++, day = 1; //\u8fd9\u91cc\u4e0a\u9762\u5df2\u7ecf\u89e3\u91ca\u4e86\n      else if(!isrn(year) && mon == 2 && day == 28 + 1) mon++, day = 1;\n      else if(isbm(mon) && day == 31 + 1) mon++, day = 1;\n      else if(!isbm(mon) && day == 30 + 1) mon++, day = 1;\n      if(mon > 12) mon = 1, year++;\n      return year * 10000 + mon * 100 + day;\n  }\n  ```\n\n- \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u679a\u4e3e\u51fa\u6765\u7684\u65e5\u671f\uff0c\u5224\u65ad\u662f\u5426\u4e0e\u539f\u65e5\u671f\u76f8\u7b26\uff0c\u65b9\u6cd5\uff1a \n\n  - \u6bcf\u4e00\u4f4d\u6bd4\u8f83\uff0c\u5982\u679c\u76f8\u7b49\u6216\u8be5\u4f4d\u662f``'-'``\u8bf4\u660e\u5408\u6cd5\uff0c\u5426\u5219``return 0``\uff1b\n\n  \u4ee3\u7801\uff1a\n\n  ```cpp\n  bool judge(int a)\n  {\n      if(a / 1 % 10 != c[7] - '0' && c[7] != '-') return 0;\n      if(a / 10 % 10 != c[6] - '0' && c[6] != '-') return 0;\n      if(a / 100 % 10 != c[5] - '0' && c[5] != '-') return 0;\n      if(a / 1000 % 10 != c[4] - '0' && c[4] != '-') return 0;\n      if(a / 10000 % 10 != c[3] - '0' && c[3] != '-') return 0;\n      if(a / 100000 % 10 != c[2] - '0' && c[2] != '-') return 0;\n      if(a / 1000000 % 10 != c[1] - '0' && c[1] != '-') return 0;\n      if(a / 10000000 % 10 != c[0] - '0' && c[0] != '-') return 0;\n      return 1;\n  }\n  ```\n\n- \u7136\u540e\u5224\u65ad\u662f\u5426\u4e3a\u5947\u8ff9\u65e5\u671f\uff0c\u5982\u679c\u662f\uff0c``ans++``\n\n  - \u8fd9\u90e8\u5206\u7b80\u5355\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\n\n  ```cpp\n  bool lucky(int a) //\u5f53\u65f6\u4ee5\u4e3a\u662f\u5e78\u8fd0\u65e5\u671f\u3002\u3002\u3002\u51fd\u6570\u540d\u6e05\u5947\n  {\n      int year = a / 10000;\n      int mon = a / 100 % 100;\n      int day = a % 100;\n      if(!v[day] && !v[mon * 100 + day] && !v[year * 10000 + mon * 100 + day]) return 1; //v\u662f\u7b5b\u8868\u6807\u8bb0\u6570\u7ec4\n      else return 0;\n  }\n  ```\n\n\u4f46\u662f``TLE``\u4e86\u4e00\u4e2a\u70b9\u3002\u53ef\u80fd\u56e0\u4e3a\u6211\u8fc7\u4e8e\u8f7b\u654c\uff0c\u7528\u7684\u662f\u57c3\u6c0f\u7b5b\uff0c\u4e5f\u53ef\u80fd\u662f\u8fd9\u4e2a\u65b9\u6cd5\u672c\u8eab\u7684\u8d28\u91cf\u95ee\u9898\n\n\u4e8e\u662f\u6211\u628a\u57c3\u6c0f\u7b5b\u6539\u6210\u4e86\u6b27\u62c9\u7b5b\u3002\n\n\u6210\u529f``AC``\u3002\u4f46\u662f\u7528\u65f6``15439ms``\u3002\n\n\u4ee3\u7801\u5c31\u7b97\u4e86\uff0c\u8bf7\u770b\u540e\u9762\u7684\u4f18\u5316\u3002\n\n\u5982\u4f55\u4f18\u5316\u5462\uff1f\uff08\u8fd9\u4e48\u5783\u573e\u7684\u65b9\u6cd5\u5c31\u522b\u4f18\u5316\u4e86\u5427\uff09\n\n\u65e2\u7136\u90fd\u4e0a\u4e86\u6b27\u62c9\u7b5b\u4e86\uff0c\u90a3\u4e48\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u628a\u7d20\u6570\u8868\u6253\u51fa\u6765\uff0c\u800c\u4e0d\u53ea\u662f\u4e00\u4e2a\u6807\u8bb0\u6570\u7ec4\u3002\n\n\u73b0\u5728\u6211\u4eec\u91cd\u65b0\u8003\u8651\u6b65\u9aa4\u3002\n\n- \u4f18\u5316\u4e00\uff1a\u7d20\u6570\u6bd4\u65e5\u671f\u5c11\u5f97\u591a\uff0c\u8ba9\u6211\u4eec\u4ece\u6bcf\u4e2a\u7d20\u6570\u5f00\u59cb\uff0c\u5224\u65ad\u662f\u5426\u662f\u5947\u8ff9\u65e5\u671f\u5c31\u884c\u4e86\u3002\n- \u4f18\u5316\u4e8c\uff1a\u5982\u679c\u6211\u4eec\u6309\u7167\u4e4b\u524d\u7684\u65b9\u6cd5\uff0c\u6bcf\u6b21\u90fd\u4f1a\u4ece\u5934\u5230\u5c3e\u679a\u4e3e\u4e00\u6b21\u3002\u6211\u4eec\u6765\u5361\u4e00\u4e0b\u5e38\uff1a\u518d\u4e0a\u4e00\u4e2a\u7b5b\u8868\uff0c\u7b5b\u51fa\u6240\u6709\u5947\u8ff9\u65e5\u671f\u5373\u53ef\u3002\n\n\u8fd9\u6837\u4e00\u6765\uff0c\u65f6\u95f4\u51cf\u5c11\u4e86``5000ms``\uff0c\u5fc3\u6ee1\u610f\u8db3\u3002\uff08\u867d\u7136\u8fd8\u662f\u6bd4\u6df1\u641c\u6162\u5f97\u591a\uff09\n\n\u4e8e\u662f\u5c31\u6709\u4e86\u8fd9\u4e48\u4e00\u4efd\u5b8c\u6574\u7684\u4ee3\u7801\u3002\u9a6c\u8702\u6e05\u5947\uff0c\u8f7b\u55b7\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint get()\n{\n    int x = 0, f = 1; char c = getchar();\n    while(!isdigit(c)) { if(c == '-') f = -1; c = getchar(); }\n    while(isdigit(c)) { x = x * 10 + c - '0'; c = getchar(); }\n    return x * f;\n}\n\nint prime[100000005];\nint f[100000005];\nbool v[100000005] = {1, 1};\nbool date[100000005];\nint m=0;\n\nvoid sprime() //\u7d20\u6570\u7b5b\u8868\n{\n    for(int i = 2; i <= 100000000; i++){\n        if(!v[i]) { \n            prime[++m] = i, f[m] = i;\n        } \n        for(int j = 1; j <=m && prime[j] * i <= 100000000; j++){\n            int k = prime[j] * i;\n            v[k] = 1;\n            if(!(i % prime[j])){\n                if(i == f[j]){\n                    f[j] = f[j] * prime[j];\n                }\n                break;\n            }\n        }\n    }\n}\n\n\nchar c[15];\nint lmt = 0;\nint ans = 0;\n\nvoid init()\n{\n    memset(c, 0, sizeof(c));\n    lmt = 0;\n    ans = 0;\n    scanf(\"%s\", c);\n    for(int i = 0; i < 8; i++)\n    {\n        if(c[i] == '-') lmt = lmt * 10 + 9; \n        else lmt = lmt * 10 + c[i] - '0'; //\u6c42\u51fa\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u5927\u65e5\u671f\uff08\u8303\u56f4\u4e0a\u754c\uff09\n    }\n}\n\nbool isrn(int year) //\u5224\u65ad\u95f0\u5e74\n{\n    if(year % 100 == 0) {\n        return year % 400 == 0;\n    }\n    else return year % 4 == 0;\n}\n\nbool isbm(int mon) //\u5224\u65ad\u5927\u6708\n{\n    return mon == 1 || mon == 3 || mon == 5 || mon == 7 || mon == 8 || mon == 10 || mon == 12;\n}\n\nbool lucky(int a) //\u5224\u65ad\u5947\u8ff9\u65e5\u671f\n{\n    int year = a / 10000;\n    int mon = a / 100 % 100;\n    int day = a % 100;\n    if(!v[day] && !v[mon * 100 + day] && !v[year * 10000 + mon * 100 + day]) return 1;\n    else return 0;\n}\n\nint jw(int a) //\u679a\u4e3e\uff0c\u8fdb\u4f4d\n{\n    int year = a / 10000;\n    int mon = a / 100 % 100;\n    int day = a % 100;\n    day++;\n    if(isrn(year) && mon == 2 && day == 29 + 1) mon++, day = 1;\n    else if(!isrn(year) && mon == 2 && day == 28 + 1) mon++, day = 1;\n    else if(isbm(mon) && day == 31 + 1) mon++, day = 1;\n    else if(!isbm(mon) && day == 30 + 1) mon++, day = 1;\n    if(mon > 12) mon = 1, year++;\n    return year * 10000 + mon * 100 + day;\n}\n\nvoid s_date() //\u5947\u8ff9\u65e5\u671f\u7b5b\u8868\n{\n    int a = 10101;\n    while(a <= 99991231)\n    {\n        if(lucky(a)) date[a] = 1;\n        a = jw(a);\n    }\n}\n\nbool judge(int a) //\u5224\u65ad\u662f\u5426\u4e0e\u539f\u6570\u76f8\u7b26\n{\n    if(a / 1 % 10 != c[7] - '0' && c[7] != '-') return 0;\n    if(a / 10 % 10 != c[6] - '0' && c[6] != '-') return 0;\n    if(a / 100 % 10 != c[5] - '0' && c[5] != '-') return 0;\n    if(a / 1000 % 10 != c[4] - '0' && c[4] != '-') return 0;\n    if(a / 10000 % 10 != c[3] - '0' && c[3] != '-') return 0;\n    if(a / 100000 % 10 != c[2] - '0' && c[2] != '-') return 0;\n    if(a / 1000000 % 10 != c[1] - '0' && c[1] != '-') return 0;\n    if(a / 10000000 % 10 != c[0] - '0' && c[0] != '-') return 0;\n    return 1;\n}\n\nvoid work() //\u6c42\u89e3\uff1a\n{\n    for(int i = 1; i <= m; i++) //\u679a\u4e3e\u7d20\u6570\n    {\n        int a = prime[i]; \n        if(a > lmt) break; //\u5982\u679c\u5927\u4e8e\u4e0a\u754c\uff0c\u9000\u51fa\n        if(date[a] && judge(a)) ans++; //\u6ee1\u8db3\u6761\u4ef6\uff0c\u7b54\u6848\u7d2f\u52a0\n    }\n    printf(\"%d\\n\", ans);\n}\n\nint main()\n{\n    sprime(); //\u7b5b\u7d20\u6570\n    s_date(); //\u7b5b\u65e5\u671f\n    int T = get();\n    while(T--)\n    {\n        init(); //\u521d\u59cb\u5316\n    \twork(); //\u89e3\n    }\n}\n```\n\n\u8fd9\u4e48\u4e2a\u9898\u7adf\u7136\u5199\u4e86``100 lines``\uff0c\u6211\u597d\u83dc\u554a\u3002\nEdit By [MaHua](http://mahua.jser.me)",
        "postTime": 1561814676,
        "uid": 92254,
        "name": "Social_Zhao",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5440 \u3010\u3010XR-2\u3011\u5947\u8ff9\u3011"
    }
]