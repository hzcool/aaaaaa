[
    {
        "content": "\u597d\u50cf\u6ca1\u4eba\u5199 $O(n\\log n)$ \u7684\u89e3\u6cd5\u3002\u3002\u3002\u5176\u5b9e\u4e5f\u4e0d\u96be\u8c03\u3002\u3002\u3002\n\n\u9996\u5148\u4ee5 $1$ \u4e3a\u6839\u65f6\u7684 dfs \u5e8f\u5148\u6c42\u51fa\u6765\uff0c\u90a3\u4e48\u5047\u5b9a\u4ee5 $p$ \u4e3a\u6839\u65f6\u7684 dfs \u5e8f\u4e3a $[id_x,n]\u222a[1,id_x)$\u3002\n\n\u8fd9\u6837\u7684\u8bdd\u5c31\u53ea\u7528\u6c42\u51fa\u6700\u5c0f\u548c\u6700\u5927\u7684\u70b9\u5c31\u884c\u4e86\u3002\n\n\u6211\u4eec\u5efa\u51fa\u4e3b\u5e2d\u6811\uff0c\u5728\u4e3b\u5e2d\u6811\u4e0a\u4e8c\u5206\uff0c\u627e\u5230\u8fd9\u4e24\u4e2a\u70b9\uff0c\u6709\u8fd9\u4e48\u51e0\u79cd\u60c5\u51b5\uff1a\n\n1. \u8fd9\u4e24\u4e2a\u70b9\u5728\u5b50\u6811\u5185\uff0c$ans=dis_{lca(x,y)}-dis_p$\n\n2. \u8fd9\u4e24\u4e2a\u70b9\u4e00\u4e2a\u5728\u5b50\u6811\u5185\uff0c\u4e00\u4e2a\u5728\u5b50\u6811\u5916\uff0c$ans=0$\n\n3. \u8fd9\u4e24\u4e2a\u70b9\u90fd\u5728\u5b50\u6811\u5916\uff1a\n\n(1) $lca(x,p)==lca(y,p),ans=dis_{lca(x,y)}+dis_p-2\\times dis_{lca(x,p)}$\n\n(2) $dep_{lca(x,p)}>dep_{lca(y,p)},ans=dis_p-dis_{lca(x,p)}$\n\n\u5b9e\u6d4b\u6ca1\u6709 $O(n\\log^2 n)$ \u5feb\uff08\u4e22\u8138\uff09\uff0c\u4e0d\u8fc7\u6211\u7528\u7684\u662f\u500d\u589e lca\uff0c\u4e3b\u5e2d\u6811\u4e5f\u6ca1\u6709\u5c01\u88c5\u3002\u7528\u5176\u4ed6\u7684\u5199\u6cd5\u53ef\u80fd\u4f1a\u5feb\u4e00\u4e9b\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> pii;\n#define fi first\n#define se second\nconst int maxn=200005;\nint n,m,dep[maxn],dis[maxn],f[maxn][19],st[maxn],ed[maxn],mp[maxn],tim;\nint rt[maxn],ls[maxn*20],rs[maxn*20],sum[maxn*20],sz;\nvector<pii> g[maxn];\nvoid dfs(int x,int ff)\n{\n\tf[x][0]=ff,dep[x]=dep[ff]+1,st[x]=++tim,mp[tim]=x;\n\tfor(int i=1;i<=17;i++) f[x][i]=f[f[x][i-1]][i-1];\n\tfor(auto y:g[x])\n\t\tif(y.fi!=ff)\n\t\t\tdis[y.fi]=dis[x]+y.se,dfs(y.fi,x);\n\ted[x]=tim;\n}\ninline int LCA(int x,int y)\n{\n\tif(dep[x]<dep[y]) swap(x,y);\n\tfor(int i=18;i>=0;i--)\n\t\tif(dep[f[x][i]]>=dep[y]) x=f[x][i];\n\tif(x==y) return x;\n\tfor(int i=18;i>=0;i--)\n\t\tif(f[x][i]!=f[y][i]) x=f[x][i],y=f[y][i];\n\treturn f[x][0];\n}\nvoid update(int &u,int v,int l,int r,int t)\n{\n\tu=++sz,ls[u]=ls[v],rs[u]=rs[v],sum[u]=sum[v]+1;\n\tif(l==r) return;\n\tint mid=(l+r)>>1;\n\tif(t<=mid) update(ls[u],ls[v],l,mid,t);\n\telse update(rs[u],rs[v],mid+1,r,t);\n}\nint query_min(int u,int v,int l,int r,int x,int y)\n{\n\tif(x>y) return -1;\n\tif(l==r) return (sum[u]==sum[v])?-1:mp[l];\n\tif(x<=l && r<=y)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tif(sum[ls[v]]-sum[ls[u]]>0)\n\t\t\treturn query_min(ls[u],ls[v],l,mid,x,y);\n\t\tif(sum[rs[v]]-sum[rs[u]]>0)\n\t\t\treturn query_min(rs[u],rs[v],mid+1,r,x,y);\n\t\treturn -1;\n\t}\n\tint mid=(l+r)>>1;\n\tif(x<=mid)\n\t{\n\t\tint res=query_min(ls[u],ls[v],l,mid,x,y);\n\t\tif(res!=-1) return res;\n\t}\n\tif(y>mid)\n\t{\n\t\tint res=query_min(rs[u],rs[v],mid+1,r,x,y);\n\t\tif(res!=-1) return res;\n\t}\n\treturn -1;\n}\nint query_max(int u,int v,int l,int r,int x,int y)\n{\n\tif(x>y) return -1;\n\tif(l==r) return (sum[u]==sum[v])?-1:mp[l];\n\tif(x<=l && r<=y)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tif(sum[rs[v]]-sum[rs[u]]>0)\n\t\t\treturn query_max(rs[u],rs[v],mid+1,r,x,y);\n\t\tif(sum[ls[v]]-sum[ls[u]]>0)\n\t\t\treturn query_max(ls[u],ls[v],l,mid,x,y);\n\t\treturn -1;\n\t}\n\tint mid=(l+r)>>1;\n\tif(y>mid)\n\t{\n\t\tint res=query_max(rs[u],rs[v],mid+1,r,x,y);\n\t\tif(res!=-1) return res;\n\t}\n\tif(x<=mid)\n\t{\n\t\tint res=query_max(ls[u],ls[v],l,mid,x,y);\n\t\tif(res!=-1) return res;\n\t}\n\treturn -1;\n}\nint query_sum(int u,int v,int l,int r,int x,int y)\n{\n\tif(x<=l && r<=y) return sum[v]-sum[u];\n\tint mid=(l+r)>>1,ans=0;\n\tif(x<=mid) ans+=query_sum(ls[u],ls[v],l,mid,x,y);\n\tif(y>mid) ans+=query_sum(rs[u],rs[v],mid+1,r,x,y);\n\treturn ans;\n}\ninline int solve1(int x,int l,int r)\n{\n\tint res=query_min(rt[l-1],rt[r],1,n,st[x],n);\n\tif(res!=-1) return res;\n\treturn query_min(rt[l-1],rt[r],1,n,1,st[x]-1);\n}\ninline int solve2(int x,int l,int r)\n{\n\tint res=query_max(rt[l-1],rt[r],1,n,1,st[x]-1);\n\tif(res!=-1) return res;\n\treturn query_max(rt[l-1],rt[r],1,n,st[x],n);\n}\ninline int solve(int x,int l,int r)\n{\n\tint sum=query_sum(rt[l-1],rt[r],1,n,st[x],ed[x]);\n\tif(sum>0 && sum<r-l+1) return 0;\n\tint a=solve1(x,l,r),b=solve2(x,l,r);\n\tif(sum==r-l+1) return dis[LCA(a,b)]-dis[x];\n\tint c=LCA(a,x),d=LCA(b,x);\n\tif(c==d) return dis[LCA(a,b)]+dis[x]-2*dis[c];\n\treturn dis[x]-((dep[c]>dep[d])?dis[c]:dis[d]);\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tint x,y,w,l,r,lastans=0;\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&x,&y,&w);\n\t\tg[x].push_back(pii(y,w));\n\t\tg[y].push_back(pii(x,w));\n\t}\n\tdfs(1,0);\n\tfor(int i=1;i<=n;i++) rt[i]=rt[i-1],update(rt[i],rt[i],1,n,st[i]);\n\twhile(m--)\n\t{\n\t\tscanf(\"%d%d%d\",&x,&l,&r);\n\t\tx^=lastans,l^=lastans,r^=lastans;\n\t\tprintf(\"%d\\n\",lastans=solve(x,l,r));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1581297864,
        "uid": 35069,
        "name": "Owen_codeisking",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6071 \u3010[MdOI2020] Treequery\u3011"
    },
    {
        "content": "\u633a\u6709\u610f\u601d\u7684\u4e00\u4e2a\u9898,\u53ef\u4ee5\u5f53\u505a\u6811\u8bba\u590d\u4e60\u9898,\u7279\u522b\u9002\u5408\u6211\u8fd9\u79cd\u65e0\u8111\u9009\u624b\u7ec3\u53cd\u5e94\u3002\n\n**\u9898\u610f** : \u7ed9\u51fa\u4e00\u68f5\u65e0\u6839\u6811,\u8fb9\u6709\u8fb9\u6743,\u70b9\u4ece$1$\u5f00\u59cb\u6807\u53f7\u3002\n\n\u591a\u6b21\u67e5\u8be2\u6807\u53f7\u5728$[l,r]$\u7684\u70b9\u5230$p$\u70b9\u8def\u5f84\u7684\u4ea4\u96c6\u7684\u957f\u5ea6\u3002\u5f3a\u5236\u5728\u7ebf\u3002\n\n$n,q\\leq 2\\times10^5$ ,\u65f6\u9650$\\texttt{3s}$.\n\n------------\n\n\u9996\u5148\u5c1d\u8bd5\u89c2\u5bdf\u6027\u8d28\u3002\u6ce8\u610f\u5230\u8fd9\u6761\u8def\u5f84\u7b49\u4ef7$p$\u5230\u865a\u6811\u7684\u6700\u77ed\u8def\u5f84,\u53ef\u4ee5\u5e2e\u52a9\u601d\u8003\u3002\n\n\u8fd9\u79cd\u6811\u4e0a\u8def\u5f84\u95ee\u9898,\u4e00\u822c\u8981\u5206\u5b50\u6811\u548c\u7956\u5148\u8ba8\u8bba :\n\n- (1) $l...r$\u5168\u90e8\u5728$p$\u7684\u5b50\u6811\u5185\n\n\t\u663e\u7136,\u53d6\u4ed6\u4eec\u7684`LCA`\u5230$p$\u7684\u8ddd\u79bb\u5c31\u597d\u4e86\u3002\u5176\u5b9e\u5c31\u662f\u4ece\u865a\u6811\u7684\u6839\u51fa\u53d1\u3002\n\n- (2) $l...r$\u5168\u90e8\u4e0d\u5728$p$\u7684\u5b50\u6811\u5185\n\n\t\u53d6\u865a\u6811\u4e0a\u6700\u8fd1\u7684\u4e00\u4e2a\u70b9\u8fde\u8fc7\u6765,\u5177\u4f53\u548b\u641e\u540e\u9762\u518d\u8bf4\u3002\n\n- (3) $l...r$\u5168\u90e8\u6709\u4e00\u90e8\u5206\u5728$p$\u7684\u5b50\u6811\u5185,\u53e6\u4e00\u90e8\u5206\u4e0d\u5728\n\n\t\u663e\u7136,\u5f97\u5230\u7684\u865a\u6811\u5305\u542b$p$\u672c\u8eab,\u7b54\u6848\u4e3a`0`.\n\n\u6211\u4eec\u53ef\u4ee5\u6807\u53f7\u4e3a\u7248\u672c\u8f74,\u6839\u636e`dfs`\u5e8f\u5efa\u7acb\u4e3b\u5e2d\u6811\u3002\n\n\u6211\u4eec\u5c31\u53ef\u4ee5\u5dee\u5206\u5f97\u5230\u4efb\u610f$l...r$\u70b9\u96c6\u7684`dfs`\u5e8f\u7ebf\u6bb5\u6811\u3002\n\n$p$\u7684\u5b50\u6811\u53ef\u4ee5\u8868\u793a\u6210\u4e00\u4e2a\u533a\u95f4\u3002\n\n\u628a`dfs`\u5e8f\u5206\u6210\u4e09\u90e8\u5206 : $L=[1,l),M=[l,r],R=(r,n]$.\n\n\u9996\u5148\u67e5\u770b\u662f\u54ea\u79cd\u60c5\u51b5,\u5982\u679c$M$\u4e2d\u6709\u5143\u7d20,\u800c\u4e14$L,R$\u4e2d\u6709\u5143\u7d20,\u5219\u4e3a$(3)$.\n\n\u5982\u679c\u4ec5\u6709$M$\u4e2d\u6709\u5219\u4e3a$(1)$,\u5426\u5219\u4e3a$(2)$.\n\n\u5bf9\u4e8e$(3)$\u53ef\u4ee5\u76f4\u63a5\u5f97\u51fa\u7b54\u6848\u3002\n\n\u5bf9\u4e8e$(1)$,\u4e00\u4e2a\u4f17\u6240\u5468\u77e5\u7684\u7ed3\u8bba\u662f : \u70b9\u96c6\u7684`LCA`=`dfs`\u5e8f\u6700\u5927\u6700\u5c0f\u7684\u4e24\u4e2a\u70b9\u7684`LCA`.\n\n\u5bf9\u4e8e$(2)$,\u9700\u8981\u7ee7\u7eed\u5206\u7c7b\u8ba8\u8bba\u3002\n\n\u2460\u8def\u5f84\u5148\u4e0a\u540e\u4e0b\n\n\u8fd9\u6837\u5b50,\u8def\u5f84\u7684\u51fa\u53d1\u70b9\u4e00\u5b9a\u662f\u865a\u6811\u7684\u6839,\u5426\u5219\u53ef\u4ee5\u66f4\u77ed,\u6211\u4eec\u5224\u4e00\u4e0b$p$\u662f\u5426\u5728\u865a\u6811\u7684\u6839\u7684\u5b50\u6811\u5185\u5373\u53ef\u3002\n\n\u2461\u8def\u5f84\u76f4\u63a5\u5411\u4e0b\n\n\u53ef\u4ee5\u76f8\u5f53\u4e8e\u628a$p$\u52a0\u5165\u865a\u6811,\u7136\u540e\u67e5\u770b\u5230\u7236\u4eb2\u7684\u8fb9\u7684\u957f\u5ea6\u3002\n\n\u6839\u636e\u865a\u6811\u7684\u7ecf\u5178\u7ed3\u8bba,\u5206\u522b\u67e5\u8be2`dfs`\u5e8f\u524d\u9a71\u540e\u7ee7\u53d6\u4e2a`min`\u5373\u53ef\u3002\n\n\u603b\u7684\u6765\u8bf4,\u5199\u4e00\u4e2a`LCA`,\u518d\u5199\u4e00\u4e2a`dfs`\u5e8f\u4e3b\u5e2d\u6811\u5373\u53ef,\u8fd9\u91cc\u53ea\u9700\u8981\u6c42\u524d\u9a71\u540e\u7ee7\u3002\n\n\u590d\u6742\u5ea6$O(n\\log n+m\\log n)$.\n\n\u81ea\u5df1`YY`\u4e86\u4e00\u79cd\u6bd4\u8f83\u597d\u5199(?)\u7684\u65b9\u6cd5\u3002\n\nwarning : \u8fd9\u4efd\u4ee3\u7801\u5305\u542b\u4e86\u5f88\u591a\u5168\u5c40\u8c03\u7528,\u53ef\u80fd\u5bfc\u81f4\u89c2\u770b\u8005\u4e0d\u9002\u3002\n\n```cpp\n#include<algorithm>\n#include<cstdio>\n#include<vector>\n#define pf printf\n#define pb push_back\n#define MaxN 200500\nusing namespace std;\ninline int read(){\n  register int X=0;\n  register char ch=0;\n  while(ch<48||ch>57)ch=getchar();\n  while(ch>=48&&ch<=57)X=X*10+(ch^48),ch=getchar();\n  return X;\n}\nint dep[MaxN],dis[MaxN],f[17][MaxN];\nvector<int> g[MaxN],l[MaxN];\nint in[MaxN],out[MaxN],tp[MaxN],tim;\nvoid pfs(int u)\n{\n  tp[in[u]=++tim]=u;\n  for (int i=0,v;i<g[u].size();i++)\n    if (!dep[v=g[u][i]]){\n      dep[v]=dep[f[0][v]=u]+1;\n      dis[v]=dis[u]+l[u][i];\n      pfs(v);\n    }\n  out[u]=tim;\n}\nint lca(int x,int y){\n  int k=16;\n  if (dep[y]<dep[x])swap(y,x);\n  while(k--)\n    while(dep[f[k][y]]>=dep[x])\n      y=f[k][y];\n  k=16;\n  while(k--)\n    while(f[k][x]!=f[k][y])\n      {x=f[k][x];y=f[k][y];}\n  return x==y ? x : f[0][y];\n}\nstruct Node\n{int l,r,c;}a[MaxN*20];\nint n,tn,rt[MaxN],to,wfl,wfr,rt1,rt2;\n#define pr(l,r) wfl=l;wfr=r\nvoid add(int l,int r,int u,int &u2)\n{\n  a[u2=++tn]=a[u];\n  a[u2].c++;\n  if (l==r)return ;\n  int mid=(l+r)>>1;\n  if (to<=mid)add(l,mid,a[u].l,a[u2].l);\n  else add(mid+1,r,a[u].r,a[u2].r);\n}\nbool chk(int l=1,int r=n,int u1=rt1,int u2=rt2)\n{\n  if (wfl<=l&&r<=wfr)\n    return a[u2].c-a[u1].c;\n  int mid=(l+r)>>1;\n  return (wfl<=mid&&chk(l,mid,a[u1].l,a[u2].l))||\n         (mid<wfr&&chk(mid+1,r,a[u1].r,a[u2].r));\n}\nint qrynxt(int l=1,int r=n,int u1=rt1,int u2=rt2)\n{\n  if (a[u2].c==a[u1].c)return 0;\n  if (l==r)return tp[l];\n  int mid=(l+r)>>1;\n  if (to<=mid&&a[a[u2].l].c-a[a[u1].l].c){\n    int sav=qrynxt(l,mid,a[u1].l,a[u2].l);\n    if (sav)return sav;\n  }return qrynxt(mid+1,r,a[u1].r,a[u2].r);\n}\nint qrypre(int l=1,int r=n,int u1=rt1,int u2=rt2)\n{\n  if (a[u2].c==a[u1].c)return 0;\n  if (l==r)return tp[l];\n  int mid=(l+r)>>1;\n  if (mid<to&&a[a[u2].r].c-a[a[u1].r].c){\n    int sav=qrypre(mid+1,r,a[u1].r,a[u2].r);\n    if (sav)return sav;\n  }return qrypre(l,mid,a[u1].l,a[u2].l);\n}\nint main()\n{\n  n=read();int m=read();\n  for (int i=1,f,t,len;i<n;i++){\n  \tf=read();t=read();len=read();\n  \tg[f].pb(t);l[f].pb(len);\n  \tg[t].pb(f);l[t].pb(len);\n  }pfs(dep[1]=1);\n  for (int j=1;j<16;j++)\n    for (int i=1;i<=n;i++)\n      f[j][i]=f[j-1][f[j-1][i]];\n  for (int i=1;i<=n;i++){\n    to=in[i];\n    add(1,n,rt[i-1],rt[i]);\n  }\n  for (int i=1,u,l,r,las=0;i<=m;i++){\n    u=read()^las;rt1=rt[(read()^las)-1];rt2=rt[read()^las];\n    bool fl=0,fm=0,fr=0;\n    if (in[u]>1){pr(1,in[u]-1);fl=chk();}\n    pr(in[u],out[u]);fm=chk();\n    if (out[u]<n){pr(out[u]+1,n);fr=chk();}\n    if (fm&&(fl||fr))pf(\"%d\\n\",las=0);\n    else if (!(fl||fr)){\n      to=out[u];int v1=qrypre();\n      to=in[u];int v2=qrynxt();\n      pf(\"%d\\n\",las=(dis[lca(v1,v2)]-dis[u]));\n    }else {\n      to=1;int v1=qrynxt();\n      to=n;int v2=qrypre();\n      int v=lca(v1,v2);\n      if (in[v]<=in[u]&&in[u]<=out[v]){\n        int ans=2100000000;\n        if (fl){\n          to=in[u]-1;v=qrypre();\n          ans=min(ans,dis[u]-dis[lca(u,v)]);\n        }if (fr){\n          to=out[u]+1;v=qrynxt();\n          ans=min(ans,dis[u]-dis[lca(u,v)]);\n        }pf(\"%d\\n\",las=ans);\n      }else pf(\"%d\\n\",las=(dis[u]+dis[v]-dis[lca(u,v)]*2));\n    }\n  }return 0;\n}\n```",
        "postTime": 1585706040,
        "uid": 58705,
        "name": "command_block",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P6071 \u3010[MdOI2020] Treequery\u3011"
    },
    {
        "content": "\uff08\u5728\u63a5\u4e0b\u6765\u7684\u63cf\u8ff0\u548c\u56fe\u7247\u4e2d\uff0c\u7528$dis_u$\u8868\u793a\u6839\uff081\u53f7\u70b9\uff09\u5230$u$\u7684\u8def\u5f84\u7684\u8fb9\u6743\u548c\uff1b$[l,r]$\u8303\u56f4\u5185\u7684\u70b9\u7528\u84dd\u8272\u8868\u793a\uff0c$p$\u7528\u7ea2\u8272\u8868\u793a\uff09\n\n\u6211\u4eec\u8003\u8651$lca_{l,l+1,\\cdots,r}$\uff08\u4ee5\u4e0b\u8bb0\u4e3a$lca$\uff0c\u7528\u6a59\u8272\u8868\u793a\uff09\uff0c\u6709\u4ee5\u4e0b\u60c5\u51b5\uff1a\n\n**1.$lca$\u4e3a$p$\u7684\u5b69\u5b50\uff08\u6216$p$\uff09**\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/8r0je99a.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u8fd9\u8868\u660e$[l,r]$\u5747\u4e3a$p$\u7684\u5b69\u5b50\uff08\u6216$p$\uff09\uff0c\u90a3\u4e48\u7b54\u6848\u4e3a$dis_{lca}-dis_p$\n\n**2.$[l,r]$\u4e2d\u65e2\u6709$p$\u7684\u5b69\u5b50\uff08\u6216$p$\uff09\uff0c\u53c8\u6709\u70b9\u4e0d\u662f$p$\u7684\u5b69\u5b50\uff08\u6216$p$\uff09**\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/xnt6oizl.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u90a3\u4e48\u8fd9\u4e24\u79cd\u70b9\u5230$p$\u7684\u8def\u5f84\u65e0\u516c\u5171\u8fb9\uff0c\u7b54\u6848\u4e3a0\n\n**3.$[l,r]$\u4e2d\u6ca1\u6709$p$\u7684\u5b69\u5b50**\n\n\u8fd9\u79cd\u60c5\u51b5\u8f83\u4e3a\u590d\u6742\uff0c\u6211\u4eec\u8fd8\u8981\u627e\u51fa$p$\u7684\u7956\u5148\u4e2d\u6700\u6df1\u7684\u4e00\u4e2a\u70b9\uff0c\u4f7f\u5b83\u4e5f\u4e3a$[l,r]$\u4e2d\u81f3\u5c11\u4e00\u70b9\u7684\u7956\u5148\uff08\u5373$lca_{p,l},lca_{p,l+1},\\cdots,lca_{p,r}$\u4e2d\u6700\u6df1\u7684\u4e00\u4e2a\uff0c\u4ee5\u4e0b\u8bb0\u4e3a$fa$\uff0c\u7528\u9ec4\u8272\u8868\u793a\uff09\n\n\u5b83\u548c$lca$\u7684\u4f4d\u7f6e\u5173\u7cfb\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n**3.1.\u5b83\u662f$lca$\u7684\u7956\u5148**\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/5rga0jze.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u7b54\u6848\u4e3a$dis_p+dis_{lca}-2dis_{fa}$\n\n**3.2.\u5b83\u662f$lca$\u7684\u5b69\u5b50**\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/dnp84h93.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u7b54\u6848\u4e3a$dis_p-dis_{fa}$\n\n\u5206\u6790\u5b8c\u6bd5\u3002\u63a5\u4e0b\u6765\u7814\u7a76\u5982\u4f55\u5b9e\u73b0\uff1a\n\n\u6c42$lca$\uff1a\u6811\u94fe\u5256\u5206+\u7ebf\u6bb5\u6811\u3002\n\n\u5224\u65ad\u4e00\u4e2a\u70b9\u7684\u5b69\u5b50\u4e2d\u662f\u5426\u6709$[l,r]$\u4e2d\u7684\u70b9\uff1a\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u914d\u5408\u53ef\u6301\u4e45\u5316\u5c31\u53ef\u4ee5\u5728\u7ebf\u5904\u7406\u3002\n\n\u6c42$fa$\uff1a\u4ece$p$\u5f00\u59cb\uff0c\u6cbf\u7740\u91cd\u94fe\u5411\u4e0a\u8df3\uff0c\u53d1\u73b0\u8fd9\u6761\u94fe\u4e0a\u6709\u7b54\u6848\u65f6\u518d\u5728\u94fe\u4e0a\u4e8c\u5206\u4e00\u4e0b\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(nlogn+qlog^2n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6$O(nlogn)$\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u4e0a\u4ee3\u7801\u4e86\uff1a\n\n```cpp\n#include<cstdio>\n#define For(i,A,B) for(i=(A);i<=(B);++i)\n#define Go(u) for(i=G[u];i;i=nxt[i])if((v=to[i])!=f[u])\nconst int N=200050;\nchar rB[1<<21],*rS,*rT,wB[(1<<21)+50];\nint wp=-1;\ninline char gc(){return rS==rT&&(rT=(rS=rB)+fread(rB,1,1<<21,stdin),rS==rT)?EOF:*rS++;}\ninline void flush(){fwrite(wB,1,wp+1,stdout);wp=-1;}\ninline int rd(){\n    char c=gc();\n    while(c<48||c>57)c=gc();\n    int x=c&15;\n    for(c=gc();c>=48&&c<=57;c=gc())x=(x<<3)+(x<<1)+(c&15);\n    return x;\n}\nshort buf[15];\ninline void wt(int x){\n\tif(wp>(1<<21))flush();\n    short l=-1;\n    while(x>9){\n        buf[++l]=x%10;\n        x/=10;\n    }\n    wB[++wp]=x|48;\n    while(l>=0)wB[++wp]=buf[l--]|48;\n    wB[++wp]='\\n';\n}\nint G[N],to[N<<1],w[N<<1],nxt[N<<1],sz,sum[N],f[N],dep[N],dfn[N],siz[N],son[N],top[N],ps[N],dfsc,sl[N<<2],rt[N],lc[N*40],rc[N*40],tot,x,y,n;\ninline void Swap(int &a,int &b){int t=a;a=b;b=t;}\ninline void adde(int u,int v,int c){\n\tto[++sz]=v;w[sz]=c;nxt[sz]=G[u];G[u]=sz;\n\tto[++sz]=u;w[sz]=c;nxt[sz]=G[v];G[v]=sz;\n}\n//\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u5408\u5e76\u90e8\u5206\nint add(int pre,int L,int R,int x){\n\tint o=++tot;\n\tif(L<R){\n\t\tint M=L+R>>1;\n\t\tif(x<=M){lc[o]=add(lc[pre],L,M,x);rc[o]=rc[pre];}\n\t\telse{rc[o]=add(rc[pre],M+1,R,x);lc[o]=lc[pre];}\n\t}\n\treturn o;\n}\nint merg(int u,int v,int L,int R){\n\tif(!u||!v)return u|v;\n\tint o=++tot;\n\tif(L<R){\n\t\tint M=L+R>>1;\n\t\tlc[o]=merg(lc[u],lc[v],L,M);\n\t\trc[o]=merg(rc[u],rc[v],M+1,R);\n\t}\n\treturn o;\n}\nint ask(int o,int L,int R){\n\tif(!o)return 0;\n\tif(x<=L&&y>=R)return 1;\n\tint M=L+R>>1;\n\tif(x<=M&&ask(lc[o],L,M))return 1;\n\treturn y>M&&ask(rc[o],M+1,R);\n}\n//\u6811\u94fe\u5256\u5206\u90e8\u5206\nvoid dfs1(int u,int fa){\n\tint i,v,maxn=0;\n\tsiz[u]=1;\n\tdep[u]=dep[f[u]=fa]+1;\n\trt[u]=add(0,1,n,u);\n\tGo(u){\n\t\tsum[v]=sum[u]+w[i];\n\t\tdfs1(v,u);\n\t\tsiz[u]+=siz[v];\n\t\tif(siz[v]>maxn){son[u]=v;maxn=siz[v];}\n\t\trt[u]=merg(rt[u],rt[v],1,n);\n\t}\n}\nvoid dfs2(int u,int topf){\n\ttop[ps[dfn[u]=++dfsc]=u]=topf;\n\tif(son[u]){\n\t\tint i,v;\n\t\tdfs2(son[u],topf);\n\t\tGo(u)if(v!=son[u])dfs2(v,v);\n\t}\n}\ninline int lca(int u,int v){\n\twhile(top[u]!=top[v]){\n\t\tif(dep[top[u]]<dep[top[v]])Swap(u,v);\n\t\tu=f[top[u]];\n\t}\n\treturn dep[u]<dep[v]?u:v;\n}\n//lca\u7ebf\u6bb5\u6811\u90e8\u5206\nvoid build(int o,int L,int R){\n\tif(L==R)sl[o]=L;\n\telse{\n\t\tint lc=o<<1,rc=lc|1,M=L+R>>1;\n\t\tbuild(lc,L,M);build(rc,M+1,R);\n\t\tsl[o]=lca(sl[lc],sl[rc]);\n\t}\n}\nint query(int o,int L,int R){\n\tif(x<=L&&y>=R)return sl[o];\n\tint lc=o<<1,rc=lc|1,M=L+R>>1;\n\tif(x<=M)if(y>M)return lca(query(lc,L,M),query(rc,M+1,R));\n\telse return query(lc,L,M);\n\telse return query(rc,M+1,R);\n}\ninline int getfa(int u){\n\twhile(u){\n\t\tif(ask(rt[top[u]],1,n)){\n\t\t\tint l=dfn[top[u]],r=dfn[u],mid;\n\t\t\twhile(l<r){\n\t\t\t\tmid=l+r+1>>1;\n\t\t\t\tif(ask(rt[ps[mid]],1,n))l=mid;\n\t\t\t\telse r=mid-1;\n\t\t\t}\n\t\t\treturn ps[l];\n\t\t}\n\t\tu=f[top[u]];\n\t}\n}\nint main(){\n\tint q,i,j,u,v,c,lans=0,p;\n\tn=rd();q=rd();\n\tFor(i,2,n){\n\t\tu=rd();v=rd();c=rd();\n\t\tadde(u,v,c);\n\t}\n\tdfs1(1,0);\n\tdfs2(1,1);\n\tbuild(1,1,n);\n\twhile(q--){\n\t\tp=rd()^lans;x=rd()^lans;y=rd()^lans;\n\t\tif(dfn[u=query(1,1,n)]>=dfn[p]&&dfn[u]<=dfn[p]+siz[p]-1)lans=sum[u]-sum[p];  //1.\n\t\telse if(ask(rt[p],1,n))lans=0;  //2.\n\t\telse if(dfn[v=getfa(p)]>=dfn[u]&&dfn[v]<=dfn[u]+siz[u]-1)lans=sum[p]-sum[v];  //3.2.\n\t\telse lans=sum[p]+sum[u]-(sum[v]<<1);  //3.1.\n\t\twt(lans);\n\t}\n\tflush();\n\treturn 0;\n}\n```\n",
        "postTime": 1581317024,
        "uid": 57926,
        "name": "Thinking",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6071 \u3010[MdOI2020] Treequery\u3011"
    },
    {
        "content": "\u6570\u636e\u7ed3\u6784\u5927\u6742\u70e9\u3002\u3002\n\n\u6211\u4e34\u7ed3\u675f\u4e00\u4e2a\u534a\u5c0f\u65f6\u5f00\u59cb\u5199\u7684\uff0c\u6ca1\u8c03\u51fa\u6765\uff0c\u7ed3\u675f\u540e\u5341\u5206\u949f\u624d\u8c03\u51fa\u6765\u3002\u3002\n\n### \u524d\u7f6e\u77e5\u8bc6\n\n\u6811\u7684\u57fa\u672c\u77e5\u8bc6\uff08dfs \u5e8f\uff0c\u6b27\u62c9\u5e8f\uff09\n\nST \u8868\uff0c\u7ebf\u6bb5\u6811\uff0c\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\uff08\u4e3b\u5e2d\u6811\uff09\n\n\u51fa\u9898\u4eba\u592a\u5f3a\u4e86\u3002\u3002\u65e0\u9650 Orz \u51fa\u9898\u4eba\n\n### \u9898\u89e3\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u6811\u7684\u57fa\u672c\u77e5\u8bc6\uff08dfs \u5e8f\uff0c\u6b27\u62c9\u5e8f\uff09\uff0cST \u8868\uff0c\u7ebf\u6bb5\u6811\uff0c\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\uff08\u4e3b\u5e2d\u6811\uff09\n\n\u6211\u662f\u4e24\u4e2a log\uff0c\u6211\u4e0d\u77e5\u9053\u6b63\u89e3\u590d\u6742\u5ea6\u591a\u5c11\u3002\u3002\n\n\u8003\u8651\u5c06 $[l,r]$ \u7684\u70b9\u5206\u6210\u4e09\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u5728 $p$ \u7684\u5b50\u6811\u91cc\uff0c\u4e00\u90e8\u5206\u4e0d\u5728\uff0c\u5374\u4e0e $p$ \u540c\u5728 $1$ \u7684\u4e00\u4e2a\u5b50\u6811\u91cc\uff0c\u4e00\u90e8\u5206\u4e0e $p$ \u4e0d\u5728 $1$ \u7684\u4e00\u4e2a\u5b50\u6811\u91cc\u3002\n\n\n![](https://img-blog.csdnimg.cn/20200209191442866.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d5eTYwMw==,size_16,color_FFFFFF,t_70)\n\n\u5982\u679c $A$\uff0c$B\\cup C$ \u4e24\u8005\u4e4b\u5185\u90fd\u6709\u70b9\uff0c\u7b54\u6848\u5c31\u662f $0$\u3002\n\n\u5982\u679c\u70b9\u90fd\u5728 $A$ \u5185\uff0c\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053 $\\text{lca}(l\\sim r)$ \u5373\u53ef\u3002\n\n\u5982\u679c\u70b9\u90fd\u5728 $B\\cup C$ \u5185\uff0c\u4e14\u53ea\u5728 $C$ \u5185\uff0c\u6211\u4eec\u4e5f\u53ea\u9700\u8981\u77e5\u9053 $\\text{lca}(l\\sim r)$ \u5373\u53ef\u3002\n\n\u63a5\u4e0b\u6765\u53ea\u9700\u8003\u8651\u6700\u540e\u4e00\u79cd\u60c5\u51b5\uff1a\u6ca1\u6709\u70b9\u5728 $A$ \u4e2d\uff0c\u6709\u4e00\u4e9b\u70b9\u5728 $B$ \u4e2d\u3002\n\n\u7136\u540e\u6211\u4eec\u8fd8\u662f\u8981\u5206\u4e24\u79cd\u60c5\u51b5\uff1a\n\n\u4e00\u79cd\u662f\u8fd9\u6837\u7684\uff1a\n\n![](https://img-blog.csdnimg.cn/20200209192334690.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d5eTYwMw==,size_16,color_FFFFFF,t_70)\n\n\u5c31\u662f 1 \u5230 p \u7684\u8def\u5f84\u4e0a\u4f38\u51fa\u591a\u6761\u5b50\u6811\u91cc\u9762\u90fd\u6709\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u90a3\u4e2a\u7ea2\u8272\u4f4d\u7f6e\uff08\u6700\u4f4e\u7684\u90a3\u68f5\u5b50\u6811\uff09\u5373\u53ef\u3002\n\n\u4e00\u79cd\u662f\u8fd9\u6837\u7684\uff1a\n\n![](https://img-blog.csdnimg.cn/2020020919260372.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d5eTYwMw==,size_16,color_FFFFFF,t_70)\n\n\u6b64\u65f6\u6211\u4eec\u4e0d\u4ec5\u8981\u77e5\u9053\u7ea2\u8272\u4f4d\u7f6e\uff0c\u8fd8\u9700\u8981\u77e5\u9053 $\\text{lca}(l\\sim r)$\u3002\n\n\u603b\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\u600e\u4e48\u6c42\u6700\u4f4e\u7684\u90a3\u68f5\u5b50\u6811\uff0c\u4ee5\u53ca $\\text{lca}(l\\sim r)$\u3002\n\n\u9996\u5148\u8003\u8651\u6c42 $\\text{lca}(l\\sim r)$\uff0c\u8fd9\u4e2a\u5c31\u6bd4\u8f83\u7b80\u5355\uff0c\u6211\u4eec\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u5728 pushup \u7684\u65f6\u5019\u9700\u8981 $O(1)$ \u7684\u6c42\u4e24\u4e2a\u70b9\u7684 lca\uff0c\u6211\u4eec\u4f7f\u7528 ST \u8868\u7ef4\u62a4\u6b27\u62c9\u5e8f\u4e0a\u7684\u6700\u5c0f\u503c\u5373\u53ef\u3002\u8fd9\u4e00\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n\\log n)$\u3002\n\n\u7136\u540e\u8003\u8651\u6c42\u6700\u4f4e\u7684\u90a3\u68f5\u5b50\u6811\uff0c\u6211\u4eec\u500d\u589e\uff08\u4e8c\u5206\uff09\u5f80\u4e0a\u8df3\uff0c\u7136\u540e\u53ea\u9700\u8981\u77e5\u9053\u67d0\u4e2a\u70b9\u7684\u5b50\u6811\u5185\u662f\u5426\u6709 $l\\sim r$ \u7684\u5b50\u6811\uff0c\u6211\u4eec\u505a\u51fa dfs \u5e8f\uff0c\u5efa\u7acb\u4ee5 dfs \u5e8f\u4e3a\u4e0b\u6807\u7684\u53ef\u6301\u4e45\u5316\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u5bf9 $1\\sim i$ \u7684\u5b50\u6811\u6211\u4eec\u53ea\u9700\u8981\u5c06 $\\text{dfn}_{1\\sim i}$ \u90fd\u6807\u4e3a 1 \u5373\u53ef\u3002\n\n\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u4e5f\u987a\u5e26\u83b7\u5f97\u4e86\u5224\u65ad 4 \u79cd\u60c5\u51b5\u7684\u65b9\u6cd5\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2 n)$\u3002\n\n### \u4ee3\u7801\n\n~~\u5168\u573a\u6700\u6162~~ \u6211\u90fd\u6ca1 rush \u51fa\u6765\uff0c\u6211\u4eba\u6ca1\u4e86\n\n\u5e38\u6570\u5de8\u5927\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\nll read() {\n    ll ret = 0; char c = getchar();\n    while (c < '0' || c > '9') c = getchar();\n    while (c >= '0' && c <= '9') ret = ret * 10 + c - '0', c = getchar();\n    return ret;\n}\n\nint N, Q;\n\nconst int MAXN = 200005;\nll dep[MAXN]; int fa[MAXN][21], dfn[MAXN], siz[MAXN], in[MAXN], rein[MAXN << 1], euler[MAXN << 1], dfncnt, eulercnt;\n\nstruct node { int v, next; ll k; } E[MAXN << 1]; int head[MAXN], Elen;\nvoid add(int u, int v, ll k) { ++Elen, E[Elen].v = v, E[Elen].next = head[u], head[u] = Elen, E[Elen].k = k; }\n\nvoid dfs(int u, int ff) {\n    fa[u][0] = ff, dfn[u] = ++dfncnt, in[u] = ++eulercnt, rein[eulercnt] = u, euler[eulercnt] = u, siz[u] = 1;\n    for (int i = 1; i <= 20; ++i) fa[u][i] = fa[fa[u][i - 1]][i - 1];\n    for (int i = head[u]; i; i = E[i].next) {\n        if (E[i].v != ff) {\n            dep[E[i].v] = dep[u] + E[i].k, dfs(E[i].v, u);\n            euler[++eulercnt] = u, siz[u] += siz[E[i].v];\n        }\n    }\n}\nint st[MAXN << 1][21];\nvoid buildST() {\n    for (int i = eulercnt; i >= 1; --i) {\n        st[i][0] = in[euler[i]];\n        for (int j = 1; i + (1 << j) - 1 <= eulercnt; ++j) {\n            st[i][j] = min(st[i][j - 1], st[i + (1 << (j - 1))][j - 1]);\n        }\n    }\n}\ninline int lca(int u, int v) {\n    if (u == v) return u;\n    u = in[u], v = in[v];\n    if (u > v) swap(u, v);\n    int lg = log2(v - u + 1);\n    return rein[min(st[u][lg], st[v - (1 << lg) + 1][lg])];\n}\n\nnamespace T1 {\n    int ans[MAXN << 2];\n    #define mid ((l + r) >> 1)\n    void build(int o, int l, int r) {\n        if (l == r) ans[o] = l;\n        else build(o << 1, l, mid), build(o << 1 | 1, mid + 1, r), ans[o] = lca(ans[o << 1], ans[o << 1 | 1]);\n    }\n    ll query(int o, int l, int r, int L, int R) {\n        if (l == L && r == R) return ans[o];\n        else {\n            if (R <= mid) return query(o << 1, l, mid, L, R);\n            else if (L > mid) return query(o << 1 | 1, mid + 1, r, L, R);\n            else return lca(query(o << 1, l, mid, L, mid), query(o << 1 | 1, mid + 1, r, mid + 1, R));\n        }\n    }\n};\n\nint sum[MAXN << 5], rt[MAXN], lson[MAXN << 5], rson[MAXN << 5], Tlen;\n#define mid ((l + r) >> 1)\nvoid insert(int& o, int l, int r, int rt, int p) {\n    o = ++Tlen;\n    if (l == r) sum[o] = sum[rt] + 1;\n    else {\n        lson[o] = lson[rt], rson[o] = rson[rt];\n        if (p <= mid) insert(lson[o], l, mid, lson[rt], p);\n        else insert(rson[o], mid + 1, r, rson[rt], p);\n        sum[o] = sum[lson[o]] + sum[rson[o]];\n    }\n}\nint query(int o, int l, int r, int L, int R) {\n    if (l == L && r == R) return sum[o];\n    else {\n        if (R <= mid) return query(lson[o], l, mid, L, R);\n        else if (L > mid) return query(rson[o], mid + 1, r, L, R);\n        else return query(lson[o], l, mid, L, mid) + query(rson[o], mid + 1, r, mid + 1, R);\n    }\n}\n#undef mid\n\ninline int Query(int p, int l, int r) { return query(rt[r], 1, N, dfn[p], dfn[p] + siz[p] - 1) - query(rt[l - 1], 1, N, dfn[p], dfn[p] + siz[p] - 1); }\n\nll lastans;\nint main() {\n    scanf(\"%d%d\", &N, &Q); int i, u, v, p, l, r; ll k;\n    for (i = 1; i < N; ++i) scanf(\"%d%d%lld\", &u, &v, &k), add(u, v, k), add(v, u, k);\n    dfs(1, 0);\n    buildST();\n    T1::build(1, 1, N);\n    for (i = 1; i <= N; ++i) {\n        insert(rt[i], 1, N, rt[i - 1], dfn[i]);\n    }\n    while (Q--) {\n        scanf(\"%d%d%d\", &p, &l, &r), p ^= lastans, l ^= lastans, r ^= lastans;\n        k = Query(p, l, r);\n        if (k == r - l + 1) lastans = dep[T1::query(1, 1, N, l, r)] - dep[p];\n        else if (k != 0) lastans = 0;\n        else {\n            u = p;\n            for (i = 20; i >= 0; --i) if (dep[fa[u][i]] > 0) u = fa[u][i];\n            k = Query(u, l, r);\n            if (k == 0) lastans = dep[p] + dep[T1::query(1, 1, N, l, r)];\n            else {\n                u = p;\n                for (i = 20; i >= 0; --i) {\n                    if (fa[u][i] && Query(fa[u][i], l, r) == 0) u = fa[u][i];\n                }\n                u = fa[u][0]; int lc = T1::query(1, 1, N, l, r);\n                if (dep[lc] < dep[u]) lastans = dep[p] - dep[u];\n                else lastans = dep[p] + dep[lc] - (dep[u] << 1);\n            }\n        }\n        printf(\"%lld\\n\", lastans);\n    }\n    return 0;\n}\n```",
        "postTime": 1581248039,
        "uid": 62308,
        "name": "Mr_Wu",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P6071 \u3010[MdOI2020] Treequery\u3011"
    },
    {
        "content": "&emsp;&emsp;**\u53bb\u5f80[\u539f\u535a\u5ba2](https://www.cnblogs.com/crashed/p/13455561.html)\u98df\u7528\u66f4\u4f73\u3002**\n# \u9898\u76ee\n\n&emsp;&emsp;[\u70b9\u8fd9\u91cc](https://www.luogu.com.cn/problem/P6071)\u770b\u9898\u76ee\u3002   \n\n# \u5206\u6790\n\n&emsp;&emsp;~~\u5982\u679c\u8fd9\u9053\u9898\u53ef\u4ee5\u6362\u6839\uff0c\u90a3\u5b83\u5c31\u662f\u4e00\u9053\u6c34\u9898\uff0c\u53ef\u662f\u6362\u4e0d\u5f97\u3002~~    \n\n&emsp;&emsp;\u6211\u4eec\u9996\u5148\u8003\u8651 $p$ \u662f\u6839\u7684\u65f6\u5019\u5e94\u8be5\u600e\u4e48\u505a\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6240\u6709\u60c5\u51b5\u603b\u5b58\u5728\uff1a   \n$$\n\\bigcap_{i=l}^rE(p,i)=E(p,\\text{LCA}[l,r])\n$$\n&emsp;&emsp;\u8fd9\u91cc\u6211\u4eec\u8ba4\u4e3a $\\text{LCA}[l,r]$ \u4e3a\u96c6\u5408 $[l, r]$ \u7684\u70b9\u7684 $\\text{LCA}$ \uff0c\u62ec\u53f7\u51b3\u5b9a\u533a\u95f4\u7684\u5f00\u6216\u95ed\u3002   \n\n&emsp;&emsp;\u7b80\u5355\u8bf4\u660e\u4e00\u4e0b\u3002\u8bb0\u5de6\u8fb9\u96c6\u5408\u4e3a $A$ \uff0c\u53f3\u8fb9\u4e3a $B$ \u3002\u7531\u4e8e $\\text{LCA}[l,r]$ \u662f $l\\sim r$ \u7684\u70b9\u7684 $\\text{LCA}$ \uff0c\u5e76\u4e14 $p$ \u5c31\u662f\u6839\uff0c\u6240\u4ee5 $\\text{LCA}[l,r]$ \u5fc5\u7136\u5728 $p$ \u5230 $l\\sim r$ \u7684\u516c\u5171\u8def\u5f84\u7684\u4efb\u610f\u4e00\u4e2a\u70b9\u4e0a\uff0c\u5c31\u5e94\u8be5\u6709 $B\\subset A$ \u3002\u53c8\u7531\u4e8e $\\text{LCA}[l,r]$ \u662f $l\\sim r$ \u7684**\u6700\u6df1**\u7684**\u516c\u5171**\u7956\u5148\uff0c\u5c31\u6709 $A\\subset B$ \uff0c\u4e5f\u5c31\u662f $A=B$ \u3002    \n\n&emsp;&emsp;\u7136\u540e\u8003\u8651 $p$ \u4e0d\u662f\u6839\u7684\u65f6\u5019\u4f1a\u600e\u4e48\u6837\u3002\u9996\u5148\u6211\u4eec\u8fd8\u662f\u9700\u8981\u5f97\u5230 $u=\\text{LCA}[l,r]$ \u3002\u7136\u540e\u8003\u8651 $u$ \u548c $p$ \u7684\u4f4d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a \" \u6362\u6839 \" \uff1a       \n\n&emsp;&emsp; $\\mathcal{Case 1:}$  $p$ \u662f $u$ \u7684\u7956\u5148\u3002\u6b64\u65f6\u53ef\u4ee5\u50cf\u4e0a\u9762\u4e00\u6837\u76f4\u63a5\u5224\u65ad\u3002      \n\n![](https://cdn.luogu.com.cn/upload/image_hosting/59gnku3v.png)\n\n&emsp;&emsp; $\\mathcal{Case 2:}$  $p$ \u4e0d\u662f $u$ \u7684\u7956\u5148\uff0c\u4e14 $p$ \u662f $l\\sim r$ \u7684\u67d0\u4e9b\u8282\u70b9\u7684\u7956\u5148\u3002\u6b64\u65f6\u5982\u679c\u5c06 $p$ \u63d0\u505a\u6839\uff0c\u90a3\u4e48 $l\\sim r$ \u5fc5\u7136\u4f1a\u5206\u6563\u5230 $p$ \u7684\u591a\u4e2a\u5b50\u6811\u4e2d\uff0c\u7b54\u6848\u4e3a $0$ \u3002       \n\n![](https://cdn.luogu.com.cn/upload/image_hosting/2mf3n07z.png)\n\n&emsp;&emsp; $\\mathcal{Case 3:}$  $p$ \u4e0d\u662f $l\\sim r$ \u4e2d\u4efb\u4f55\u70b9\u7684\u7956\u5148\u3002\u5982\u679c\u5c06 $p$ \u63d0\u505a\u6839\uff0c\u6b64\u65f6 $l\\sim r$ \u7684 $\\text{LCA}$ \u5c31\u4e0d\u4e00\u5b9a\u662f $u$ \u4e86\u3002\u8fd9\u91cc\u9700\u8981\u518d\u5206\u4e00\u4e9b $\\mathcal{Case}$ \u3002  \n\n&emsp;&emsp; $\\mathcal{Case3.1:}$  $u$ \u4e0d\u662f $p$ \u4f5c\u4e3a\u6839\u7684\u60c5\u51b5\u4e0b\u7684 $\\text{LCA}$ \u3002\u90a3\u4e48\u6211\u4eec\u5e94\u8be5\u591a\u8003\u8651\u54ea\u4e00\u4e2a\u8282\u70b9\u5462\uff1f\u663e\u7136\u8fd9\u4e2a\u8282\u70b9\uff08\u4e0d\u59a8\u79f0\u4e4b\u4e3a $v$ \uff09\u5e94\u8be5\u662f $p$ \u7684\u7956\u5148\u3002\u66f4\u8fd1\u4e00\u6b65\u7684\uff0c\u5e94\u8be5\u662f $v=\\max_{i=l}^r\\text{LCA}\\{i,p\\}$ \uff08\u6309\u7167\u6df1\u5ea6\u6bd4\u8f83\u53d6\u5927\u5c0f\uff09\u3002\u5bf9\u4e8e $w$ \u662f $v$ \u7684\u7956\u5148\uff0c\u5f53 $p$ \u6362\u505a\u6839\u4e4b\u540e\uff0c$w$ \u7684\u5b50\u6811\u5185\u5fc5\u7136\u4e0d\u4f1a\u5305\u542b $[l,r]$ \u7684\u6240\u6709\u70b9\u3002     \n\n&emsp;&emsp;\u5982\u679c $u$ \u4e0d\u662f $p$ \u4f5c\u4e3a\u6839\u7684\u65f6\u5019\u7684 $\\text{LCA}$ \uff0c\u5c31\u8bf4\u660e $p$ \u5728 $u$ \u7684\u5b50\u6811\u5185\u4e14 $v$ \u5e94\u8be5\u6bd4 $u$ \u66f4\u6df1\uff0c\u6b63\u5982\u4e0b\u9762\u8fd9\u5e45\u56fe\uff1a       \n\n![](https://cdn.luogu.com.cn/upload/image_hosting/4rvs4ey6.png)\n\n&emsp;&emsp; $\\mathcal{Case3.2:}$  $u$ \u662f $p$ \u4f5c\u4e3a\u6839\u7684\u60c5\u51b5\u4e0b\u7684 $\\text{LCA}$ \u3002\u6b64\u65f6 $p$ \u5c31\u4e0d\u5e94\u8be5\u5728 $u$ \u7684\u5b50\u6811\u5185\uff0c\u4e14 $v$ \u6bd4 $u$ \u6d45\u3002\u5982\u56fe\uff1a   \n\n![](https://cdn.luogu.com.cn/upload/image_hosting/uihuloxr.png)\n\n&emsp;&emsp;\u8fd9\u4e48\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\u4e4b\u540e\uff0c\u95ee\u9898\u5c31\u6bd4\u8f83\u597d\u89e3\u51b3\u4e86\u3002\u6211\u4eec\u53ea\u9700\u8981\u89e3\u51b3\u51e0\u4e2a\u95ee\u9898\uff1a    \n\n&emsp;&emsp; $\\mathcal{1.}$ \u67e5\u8be2\u8fde\u7eed\u51e0\u4e2a\u70b9\u7684 $\\text{LCA}$ \u3002\u6211\u4eec\u53ef\u4ee5\u5bf9\u70b9\u8fdb\u884c\u500d\u589e\uff0c $lca[i,j]$ \u5b58\u50a8 $\\text{LCA}[i,i+2^j)$ \u3002\u7531\u4e8e $\\text{LCA}$ \u8fd9\u4e2a\u8fd0\u7b97\u5177\u6709\u4ea4\u6362\u5f8b\u3001\u7ed3\u5408\u5f8b\u548c\u7b49\u5e42\u6027 \uff08 \u5373 $\\text{LCA}\\{a,a\\}=a$ \uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u82b1\u8d39\u5355\u6b21 $\\text{LCA}$ \u7684\u65f6\u95f4\u67e5\u8be2\u51fa\u8fde\u7eed\u51e0\u4e2a\u70b9\u7684 $\\text{LCA}$ \u3002\u5982\u679c\u4f7f\u7528 $\\text{RMQ}$ \u67e5\u8be2 $\\text{LCA}$ \u53ef\u4ee5\u505a\u5230 $O(n\\log_2n)-O(1)$ \u89e3\u51b3\u3002\n\n&emsp;&emsp; $\\mathcal{2.}$ \u67e5\u8be2\u4e00\u4e2a\u70b9\u662f\u5426\u662f\u67d0\u4e9b\u70b9\u7684\u7956\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u67e5\u8be2\u8fd9\u4e2a\u70b9\u5185\u5305\u542b\u7684\u6807\u8bb0\u70b9\u7684\u6570\u91cf\u3002\u7531\u4e8e\u95ee\u9898\u4e2d\u6807\u8bb0\u70b9\u5728\u4e00\u4e2a\u533a\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6811\u5c55\u5f00\u5230 $\\text{DFS}$ \u5e8f\u4e0a\uff0c\u5e76\u5229\u7528**\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811**\u7ef4\u62a4\u70b9\u7684\u524d\u7f00\u4e0a DFS \u5e8f\u7684\u60c5\u51b5\uff0c\u5e76\u76f4\u63a5\u67e5\u8be2\u3002    \n\n&emsp;&emsp; $\\mathcal{3.}$ \u67e5\u8be2\u4e00\u4e2a\u70b9\u5230\u67d0\u4e9b\u70b9\u7684  $\\text{LCA}$ \u4e2d\u6700\u6df1\u7684\u90a3\u4e00\u4e2a\u3002\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u4ece\u8d77\u59cb\u70b9\u8fdb\u884c**\u500d\u589e**\uff0c\u6bcf\u6b21\u68c0\u67e5\u662f\u5426\u6709\u6807\u8bb0\u70b9\u5728\u4e0b\u4e00\u6b65\u7684\u70b9\u7684\u5b50\u6811\u4e2d\uff0c\u5982\u679c\u6ca1\u6709\u6211\u4eec\u5c31\u53ef\u4ee5\u8df3\u4e00\u4e0b\u3002\u6700\u7ec8\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u6700\u6d45\u7684\u4e00\u4e2a**\u5b50\u6811\u5185\u4e0d\u5305\u542b\u4efb\u4f55\u6807\u8bb0\u70b9**\u7684\u70b9\uff0c\u5b83\u7684\u7236\u4eb2\u5c31\u662f\u6211\u4eec\u7684\u76ee\u6807\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u914d\u5408\u500d\u589e  $\\text{LCA}$ \u7406\u89e3\u3002   \n\n&emsp;&emsp;\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n\\log_2^2n)$ \uff0c\u74f6\u9888\u662f\u95ee\u9898 $\\mathcal{3}$ \uff0c\u5360\u7528\u4e86\u4e24\u4e2a $\\log$ \u3002   \n\n&emsp;&emsp;\u672c\u9898\u7684\u53ef\u501f\u9274\u4e4b\u5904\u5c31\u5728\u4e8e\u5b83\u7684**\u5206\u7c7b\u8ba8\u8bba**\u6b65\u9aa4\u548c\u591a\u6b21\u51fa\u73b0\u7684**\u500d\u589e\u601d\u60f3**\u3002\u6811\u4e0a\u6362\u6839\u95ee\u9898\uff0c\u65e2\u53ef\u4ee5 $\\text{LCT}$ \u7ef4\u62a4\uff0c\u4e5f\u53ef\u4ee5\u50cf\u8fd9\u6837**\u5206\u7c7b\u8ba8\u8bba**\u3002   \n\n# \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n\nconst int MAXN = 2e5 + 5, MAXLOG = 20, MAXS = MAXN * MAXLOG;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0;char s = getchar();int f = 1;\n\twhile( s > '9' || s < '0' ){if( s == '-' ) f = -1; s = getchar();}\n\twhile( s >= '0' && s <= '9' ){x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar();}\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ){ putchar( '-' ); x = ( ~ x ) + 1; }\n\tif( 9 < x ){ write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\nstruct edge\n{\n\tint to, nxt, w;\n}Graph[MAXN << 1];\n\nint s[MAXS], lch[MAXS], rch[MAXS];\nint rt[MAXN], nsiz;\n\nint f[MAXN][MAXLOG], lca[MAXN][MAXLOG];\nint lg[MAXN];\n\nint head[MAXN], dist[MAXN], dep[MAXN], DFN[MAXN], siz[MAXN];\nint N, Q, cnt, ID, lg2;\n\nvoid addEdge( const int from, const int to, const int W )\n{\n\tGraph[++ cnt].to = to, Graph[cnt].nxt = head[from], Graph[cnt].w = W;\n\thead[from] = cnt;\n}\n\nvoid addE( const int from, const int to, const int W )\n{\n\taddEdge( from, to, W ), addEdge( to, from, W );\n}\n\nvoid DFS( const int u, const int fa )\n{\n\tf[u][0] = fa;\n\tdep[u] = dep[fa] + 1, DFN[u] = ++ ID, siz[u] = 1;\n\tfor( int i = head[u], v ; i ; i = Graph[i].nxt )\n\t\tif( ( v = Graph[i].to ) ^ fa )\n\t\t\tdist[v] = dist[u] + Graph[i].w, \n\t\t\tDFS( v, u ), siz[u] += siz[v];\n}\n\nvoid balance( int &u, const int stp )\n{\n\tfor( int i = 0 ; ( 1 << i ) <= stp ; i ++ )\n\t\tif( stp & ( 1 << i ) )\n\t\t\tu = f[u][i];\n}\n\nint LCA( int u, int v )\n{\n\tif( dep[u] > dep[v] ) balance( u, dep[u] - dep[v] );\n\tif( dep[v] > dep[u] ) balance( v, dep[v] - dep[u] );\n\tif( u == v ) return u;\n\tfor( int i = lg2 ; ~ i ; i -- ) if( f[u][i] ^ f[v][i] ) u = f[u][i], v = f[v][i];\n\treturn f[u][0];\n}\n\nint rangeLCA( int l, int r )\n{\n\tint k = lg[r - l + 1];\n\treturn LCA( lca[l][k], lca[r - ( 1 << k ) + 1][k] );\n}\n\nvoid upt( const int x ) { s[x] = s[lch[x]] + s[rch[x]]; }\nvoid copy( int a, int b ) { s[a] = s[b], lch[a] = lch[b], rch[a] = rch[b]; }\n\nint update( const int x, const int l, const int r, const int p )\n{\n\tint cur = ++ nsiz; copy( cur, x );\n\tif( l == r ) { s[cur] ++; return cur; }\n\tint mid = l + r >> 1;\n\tif( p <= mid ) lch[cur] = update( lch[x], l, mid, p );\n\telse rch[cur] = update( rch[x], mid + 1, r, p );\n\tupt( cur ); return cur;\n}\n\nint query( const int x, const int l, const int r, const int segL, const int segR )\n{\n\tif( ! x ) return 0;\n\tif( segL <= l && r <= segR ) return s[x];\n\tint mid = l + r >> 1, ret = 0;\n\tif( segL <= mid ) ret += query( lch[x], l, mid, segL, segR );\n\tif( mid < segR ) ret += query( rch[x], mid + 1, r, segL, segR );\n\treturn ret;\n}\n\nint query( const int u, const int L, const int R )\n{\n\treturn query( rt[R], 1, N, DFN[u], DFN[u] + siz[u] - 1 )\n\t     - query( rt[L - 1], 1, N, DFN[u], DFN[u] + siz[u] - 1 );\n}\n\nvoid init()\n{\n\tDFS( 1, 0 ); \n\t\n\tlg[1] = 0;\n\tfor( int i = 2 ; i <= N ; i ++ )\n\t\tlg[i] = lg[i - 1] + ( i == ( 1 << lg[i - 1] + 1 ) );\n\tlg2 = lg[N];\n\t\n\tfor( int j = 1 ; j <= lg2 ; j ++ )\n\t\tfor( int i = 1 ; i <= N ; i ++ )\n\t\t\tf[i][j] = f[f[i][j - 1]][j - 1];\n\tfor( int i = 1 ; i <= N ; i ++ ) lca[i][0] = i;\n\tfor( int j = 1 ; j <= lg2 ; j ++ )\n\t\tfor( int i = 1 ; i + ( 1 << j - 1 ) <= N ; i ++ )\n\t\t\tlca[i][j] = LCA( lca[i][j - 1], lca[i + ( 1 << j - 1 )][j - 1] );\n\t\t\t\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t\trt[i] = update( rt[i - 1], 1, N, DFN[i] );\n}\n\nint DCA( int u, const int L, const int R ) // Deepest Common Ancestor\n{\n\tint tmp;\n\tfor( int i = lg2 ; ~ i ; i -- )\n\t\tif( tmp = f[u][i] )\n\t\t\tif( ! query( tmp, L, R ) )\n\t\t\t\tu = tmp;\n\treturn f[u][0];\n}\n\nint getDist( const int u, const int v )\n{\n\treturn dist[u] + dist[v] - 2 * dist[LCA( u, v )];\n}\n\nint main()\n{\n\tread( N ), read( Q );\n\tfor( int i = 1, a, b, c ; i < N ; i ++ )\n\t\tread( a ), read( b ), read( c ), addE( a, b, c );\n\tinit();\n\t\n\tint P, L, R, lst = 0;\n\twhile( Q -- )\n\t{\n\t\tread( P ), read( L ), read( R );\n\t\tP ^= lst, L ^= lst, R ^= lst;\n\t\t\n\t\tint RLCA = rangeLCA( L, R ), \n\t\t\tnum = query( P, L, R );\n\t\tif( num == R - L + 1 ) lst = getDist( P, RLCA );\n\t\telse if( num ) lst = 0;\n\t\telse\n\t\t{\n\t\t\tint t = DCA( P, L, R );\n\t\t\tif( dep[t] > dep[RLCA] ) lst = getDist( P, t );\n\t\t\telse lst = getDist( P, RLCA );\n\t\t}\n\t\twrite( lst ), putchar( '\\n' );\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1596810221,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "\u300eMdOI R1\u300fTreequery"
    },
    {
        "content": "\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u70b9\u5e26\u8fb9\u6743\u7684\u6811\uff0c$q$ \u6b21**\u5728\u7ebf**\u8be2\u95ee $p$ \u5230 $[l,r]$ \u5185\u7684\u70b9\u8def\u5f84\u7684\u4ea4\u7684\u957f\u5ea6\u3002\n\n$1\\leq n,q\\leq 2\\times 10^5$\u3002\n\n\u8003\u8651\u7528 ST \u8868\u6c42\u51fa $[l,r]$ \u5185\u70b9\u7684 LCA \u4e3a\u70b9 $u$\u3002\n\n- $u,p$ \u65e0\u7956\u5148\u540e\u4ee3\u5173\u7cfb\uff0c\u7b54\u6848\u4e3a $dis(u,p)$\u3002\n- $u$ \u5728 $p$ \u5b50\u6811\u5185\uff0c\u7b54\u6848\u5373\u4e3a $dis(u,p)$\uff0c\u56e0\u4e3a\u6240\u6709\u70b9\u90fd\u5728 $p$ \u5b50\u6811\u5185\uff0c\u5728 $u$ \u5904\u6c47\u5408\u3002\n- $p$ \u5728 $u$ \u5b50\u6811\u5185\u3002\n\n  - \u82e5 $p$ \u5b50\u6811\u5185\u6709 $[l,r]$ \u5185\u7684\u70b9\uff0c\u5219\u7b54\u6848\u662f $0$\uff0c\u56e0\u4e3a $p$ \u5b50\u6811\u5185\u5916\u90fd\u6709\u70b9\uff0c\u8def\u5f84\u4f1a\u6ca1\u6709\u4ea4\u3002\n  - \u5426\u5219\u4e8c\u5206\u627e\u5230\u6700\u9ad8\u7684\u70b9 $p'$ \u6ee1\u8db3 $p'$ \u5b50\u6811\u5185\u65e0 $[l,r]$ \u5185\u7684\u70b9\uff0c\u7b54\u6848\u4e3a $dis(fa_{p'},p)$\uff0c\u56e0\u4e3a\u6b64\u65f6\u6240\u6709\u70b9\u90fd\u4f1a\u8d70\u5230 $fa_{p'}$ \u4e4b\u540e\u518d\u8d70\u5411 $p$\uff0c\u8fd9\u4e00\u6b65\u53ef\u4ee5\u7528\u4e3b\u5e2d\u6811\u6765\u7ef4\u62a4\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\log^2 n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\log n)$\u3002\n\n[code](https://www.luogu.com.cn/paste/doe9ws84)\u3002",
        "postTime": 1637041460,
        "uid": 173685,
        "name": "\u6478\u9c7c\u9171",
        "ccfLevel": 8,
        "title": "P6071"
    },
    {
        "content": "\u9898\u89e3\u91cc\u9762\u7684\u5927\u591a\u65b9\u6cd5\u90fd\u662f\u5206\u7c7b\u8ba8\u8bba\uff0c\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd\u4e0d\u7528\u5206\u7c7b\u8ba8\u8bba\u7684 $O(n \\log ^ 2 n)$ \u57fa\u672c\u4e0a rush \u5feb\u7684\u8bdd 10min \u5c31\u53ef\u4ee5\u5199\u597d\u3002 \n\n\u5f53\u7136\u7531\u4e8e\u5b58\u5728 $O(n \\log n)$ \u505a\u6cd5\uff0c\u6240\u4ee5\u80af\u5b9a\u4e0d\u662f\u6700\u4f18\u89e3\u6cd5\u3002\n\n~~\u5f53\u7136\u5982\u679c\u4f60\u50cf\u6211\u4e00\u6837\u5199\u6302\u4e86\u5c31\u53e6\u8bf4\u3002~~                \n\n\u6211\u4eec\u8003\u8651\u6c42\u4ea4\uff0c\u8fd9\u4e2a\u4e1c\u897f\u8c8c\u4f3c\u4e0d\u662f\u5f88\u597d\u5f62\u5f0f\u5316\u7684\u6837\u5b50\u3002              \n\n\u6211\u4eec\u5927\u4e0d\u4e86\u5148\u76f4\u63a5\u786e\u5b9a\u4e00\u6761\u8def\u5f84\u3002\u6bd4\u5982\u8bf4\u6211\u4eec\u62ff $(p,l)$ \u8fd9\u6761\u8def\u5f84\u5f00\u6dae\uff0c\u6211\u4eec\u5c06\u8fd9\u6761\u8def\u5f84\u62c6\u5206\u4e3a\u4e24\u6761\u94fe\uff0c$(p,LCA)$ \u6bb5\u548c $(LCA , l)$\u3002           \n\n\u5bf9\u4e8e $(p,LCA)$ \u6bb5\uff0c\u663e\u7136\u7684\u662f\uff0c\u4ece $p$ \u8d70\u5230 LCA \u7684\u8def\u4e0a\uff0c\u6df1\u5ea6\u8d8a\u6d45\u7684\u8fb9\u8d8a\u6709\u53ef\u80fd\u8d70\u4e0d\u5230\u3002\u56e0\u4e3a\u8fd9\u65f6\u5019\u5bf9\u5e94\u7684\u5b50\u6811\u8d8a\u6765\u8d8a\u5927\uff0c\u5018\u82e5\u4e0b\u65b9\u51fa\u73b0\u4e86\u4e00\u4e2a $[l + 1 , r]$ \u7684\u8282\u70b9\u90a3\u4e48\u8fd9\u6761\u8fb9\u5c31\u80af\u5b9a\u4e0d\u80fd\u88ab\u8ba1\u5165\u8d21\u732e\uff0c\u66f4\u4e0a\u65b9\u7684\u8fb9\u66f4\u65e0\u6cd5\u8ba1\u5165\u8d21\u732e\u3002             \n\n\u5bf9\u4e8e $(LCA,l)$ \u6bb5\uff0c\u4ece LCA \u8d70\u5230 $l$ \u7684\u8def\u4e0a\uff0c\u6df1\u5ea6\u8d8a\u6df1\u7684\u8fb9\u8d8a\u6709\u53ef\u80fd\u8d70\u4e0d\u5230\u3002\u56e0\u4e3a\u8fd9\u65f6\u5019\u5bf9\u5e94\u7684\u5b50\u6811\u8d8a\u6765\u8d8a\u5c0f\uff0c\u800c\u4e14\u53ea\u6709\u70b9 $[l,r]$ \u90fd\u5728\u4e0b\u65b9\u7684\u5b50\u6811\u5185\u8fd9\u6761\u8fb9\u624d\u80fd\u88ab\u8ba1\u5165\u8d21\u732e\u3002                \n\n\u90a3\u4e48\u4e24\u7aef\u7b54\u6848\u5177\u6709\u5355\u8c03\u6027\uff0c\u6211\u4eec\u76f4\u63a5\u4e8c\u5206\u7b54\u6848\u7136\u540e\u4e3b\u5e2d\u6811\u67e5\u4e00\u4e2a\u5b50\u6811\u5185\u503c\u57df\u5728 $[l + 1 , r]$ \u6216\u662f $[l,r]$ \u7684\u70b9\u4e2a\u6570\uff0c\u7136\u540e\u6eda\u4e00\u4e2a\u6811\u4e0a\u524d\u7f00\u548c\u5c31\u53ef\u4ee5\u6811\u4e0a\u5dee\u5206\u7b97\u8def\u5f84\u548c\u4e86\u3002           \n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log ^ 2 n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\u3002      \n\n```cpp\n/*\nlog^2\u5c31\u76f4\u63a5\u5728\u6811\u4e0a\u778e\u8df3\u51e0\u4e0b\u5c31\u597d\u4e86\n\u4f46\u662fnlog\u8c8c\u4f3c\u4e0d\u4f1a\uff0c\u4e3b\u5e2d\u6811\u4e0a\u4e8c\u5206\u5565\u7684\u662f\u771f\u7684\u4e0d\u4f1a\n\u865a\u6811\u54ea\u91cc\u8981\u7528\u554a/yun \n\u600e\u4e48\u9898\u89e3\u91cc\u9762\u66f4\u9ebb\u70e6\u554a\uff0c\u53ef\u80fd\u662f\u53f3\u94fe\u4e0d\u600e\u4e48\u597d\u7ef4\u62a4\uff0c\u4f46\u662f\u603b\u6bd4\u4f60\u5206\u7c7b\u8ba8\u8bba\u5f3a\u5427\uff08 \n*/\n#include \"bits/stdc++.h\"\nusing namespace std;\nconst int Len = 1e6 + 5;\ninline int read() {\n    char ch = getchar();\n    int x = 0, f = 1;\n    while (ch < '0' || ch > '9') {\n        if (ch == '-')\n            f = -1;\n        ch = getchar();\n    }\n    while ('0' <= ch && ch <= '9') {\n        x = x * 10 + ch - '0';\n        ch = getchar();\n    }\n    return x * f;\n}\ninline void write(int x) {\n    if (x < 0)\n        putchar('-'), x = -x;\n    if (x > 9)\n        write(x / 10);\n    putchar(x % 10 + '0');\n}\nint n,q,head[Len],cnt,top,tot,dfn[Len],id[Len],ID[Len],rt[Len],dp[28][Len],siz[Len],dep[Len];\nint Dis[Len];\nstruct Node\n{\n\tint l,r,sum;\n}tree[Len * 55];\nint clones(int p)\n{\n\ttop ++;\n\ttree[top] = tree[p];\n\ttree[top].sum ++;\n\treturn top;\n}\nint build(int p,int l,int r)\n{\n\tp = ++ top;\n\tif(l == r) return p;\n\tint mid = (l + r) >> 1;\n\ttree[p].l = build(tree[p].l , l , mid);\n\ttree[p].r = build(tree[p].r , mid + 1 , r);\n\treturn p;\n}\nint update(int p,int l,int r,int idx)\n{\n\tp = clones(p);\n\tif(l == r) return p;\n\tint mid = (l + r) >> 1;\n\tif(idx <= mid) tree[p].l = update(tree[p].l , l , mid , idx);\n\telse tree[p].r = update(tree[p].r , mid + 1 , r , idx);\n\treturn p;\n}\nint query(int L,int R,int l,int r,int nl,int nr)\n{\n\tif(nl > nr) return 0;\n\tif(nl <= L && R <= nr) return tree[r].sum - tree[l].sum;\n\tint mid = (L + R) >> 1 , res = 0;\n\tif(nl <= mid) res += query(L , mid , tree[l].l , tree[r].l , nl , nr);\n\tif(nr > mid) res += query(mid + 1 , R , tree[l].r , tree[r].r , nl , nr);\n\treturn res; \n}\nstruct node\n{\n\tint next,to,w;\n}edge[Len << 1];\nvoid add(int from,int to,int w)\n{\n\tedge[++ cnt].to = to;\n\tedge[cnt].w = w;\n\tedge[cnt].next = head[from];\n\thead[from] = cnt;\n}\nvoid dfs(int x,int f)\n{\n\tsiz[x] = 1;\n\tdep[x] = dep[f] + 1;\n\tdp[0][x] = f;\n\tdfn[x] = ++ tot;\n\tID[tot] = x;\n\tfor(int i = 1 ; (1 << i) <= dep[x] ; i ++) dp[i][x] = dp[i - 1][dp[i - 1][x]];\n\tfor(int e = head[x] ; e ; e = edge[e].next)\n\t{\n\t\tint to = edge[e].to;\n\t\tif(to == f) continue;\n\t\tDis[to] = Dis[x] + edge[e].w;\n\t\tdfs(to , x);\n\t\tsiz[x] += siz[to];\n\t}\n}\nint FLCA(int x,int y)\n{\n\tif(dep[x] < dep[y]) swap(x , y);\n\tfor(int i = 27 ; i >= 0 ; i --) if(dep[dp[i][x]] >= dep[y]) x = dp[i][x];\n\tif(x == y) return x;\n\tfor(int i = 27 ; i >= 0 ; i --) if(dp[i][x] != dp[i][y]) x = dp[i][x] , y = dp[i][y];\n\treturn dp[0][x];\n}\nint Kthau(int x,int k)\n{\n\tfor(int i = 27 ; i >= 0 ; i --) if(k >= (1 << i)){x = dp[i][x];k -= (1 << i);}\n\treturn x;\n}\nint p,L,R;\nbool check_l(int mid)\n{\n\tint now = Kthau(p , mid);//dfn_now , dfn_now + siz_now - 1\n\tint res = query(1 , n , rt[dfn[now] - 1] , rt[dfn[now] + siz[now] - 1] , L + 1 , R);\n\tif(res) return 0;\n\treturn 1;\n}\nbool check_r(int mid)\n{\n\tint now = Kthau(L , mid);\n\t//printf(\"%d %d %d %d:\\n\",now,siz[now],dfn[now] - 1,dfn[now] + siz[now] - 1);\n\tint res = query(1 , n , rt[dfn[now] - 1] , rt[dfn[now] + siz[now] - 1] , L , R);\n\tif(res != R - L + 1) return 0;\n\treturn 1;\n}\nsigned main()\n{\n\t//freopen(\"P6071_1.in\",\"r\",stdin);\n\t//freopen(\"P6071.out\",\"w\",stdout);\n\tn = read() , q = read(); \n\tfor(int i = 1 ; i < n ; i ++)\n\t{\n\t\tint x,y,w;x = read() , y = read() , w = read();\n\t\tadd(x , y , w) , add(y , x , w);\n\t}\n\tdfs(1 , 0);\n\trt[0] = build(1 , 1 , n);\n\tfor(int i = 1 ; i <= n ; i ++) rt[i] = update(rt[i - 1] , 1 , n , ID[i]);\n\tint lstans = 0;\n\tfor(int i = 1 ; i <= q ; i ++) \n\t{\n\t\tp = read() , L = read() , R = read();\n\t\tp ^= lstans , L ^= lstans , R ^= lstans;\n\t\tint LCA = FLCA(p , L);int res = 0;\n\t\tint l = 0 , r = dep[p] - dep[LCA] - 1 , anss = -1;\n\t\twhile(l <= r)\n\t\t{\n\t\t\tint mid = (l + r) >> 1;\n\t\t\tif(check_l(mid)){anss = mid , l = mid + 1;}\n\t\t\telse r = mid - 1;\n\t\t}\n\t\t//if(anss != dep[p] - dep[LCA] - 1) puts(\"ouicnoaskjpx\");\n\t\tif(anss != -1) res += Dis[p] - Dis[dp[0][Kthau(p , anss)]];\n\t\tl = 0 , r = dep[L] - dep[LCA] , anss = -1;\n\t\twhile(l <= r)\n\t\t{\n\t\t\tint mid = (l + r) >> 1;\n\t\t\tif(check_r(mid)){anss = mid , r = mid - 1;}\n\t\t\telse l = mid + 1;\n\t\t}\n\t\tif(anss != -1) res += Dis[Kthau(L , anss)] - Dis[LCA];\n\t\twrite(lstans = res) , putchar('\\n'); \n\t}\n\treturn 0;\n}\n```",
        "postTime": 1636889224,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6071 \u300eMdOI R1\u300fTreequery"
    },
    {
        "content": "\u4ece\u8fd9\u9898\u5b66\u5230\u8bb8\u591a\uff0c\u6545\u5199\u9898\u89e3\u4ee5\u8bb0\u4e4b\u3002\uff08orz ix35\uff09\n\n---\n\n\u5206\u4e2a\u7c7b\uff1a\n\n- \u82e5 $l\\sim r$ \u5168\u662f $p$ \u7684\u540e\u4ee3\uff0c\u5219\u7b54\u6848\u5c31\u662f $p$ \u5230\u5b83\u4eec\u7684 LCA \u7684\u8ddd\u79bb\uff1b\n- \u82e5\u65e2\u6709\u540e\u4ee3\u53c8\u6709\u7956\u5148\uff0c\u7b54\u6848\u663e\u7136\u662f $0$\uff1b\n- \u53ea\u6709\u7956\u5148\u7684\u8bdd\uff0c\u8fd8\u8981\u5206\u4e24\u79cd\u60c5\u51b5\uff1a\u5982\u679c\u5b83\u4eec\u5230 $p$ \u7684\u8def\u5f84\u7684\u4ea4\u662f\u4e0d\u662f\u4e00\u6761\u76f4\u94fe\u7684\u8bdd\uff08\u5373 LCA \u4e0d\u662f $p$ \u7684\u7956\u5148\uff09\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f LCA \u5230 $p$ \u7684\u8ddd\u79bb\uff1b\u5426\u5219\u5c31\u662f $l\\sim r$ \u5206\u522b\u4e0e $p$ \u7684 LCA \u4e2d\u6700\u6df1\u7684\uff0c\u4e0b\u9762\u91cd\u70b9\u8ba8\u8bba\u3002\n\n\u5bf9\u4e0a\u9762\u60c5\u51b5\u7684\u5224\u65ad\uff0c\u5c31\u662f\u6570 $p$ \u5b50\u6811\u5185\u6709\u591a\u5c11 $[l,r]$ \u5185\u7684\u8282\u70b9\u3002\u628a\u5b50\u6811\u95ee\u9898\u8f6c\u5316\u6210 dfn \u5c31\u662f\u4e2a\u4e8c\u7ef4\u6570\u70b9\uff0c\u7531\u4e8e\u662f\u9759\u6001\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u4e3b\u5e2d\u6811\u505a\u5230 1log\u3002\n\n\u5148\u629b\u4e2a\u4e00\u5f00\u59cb\u5047\u60f3\u7684\u65f6\u5019\u7684\u7ed3\u8bba\uff1a\u4e00\u5806\u70b9\uff08\u4e00\u4e2a\u533a\u95f4\uff09\u7684 LCA \u663e\u7136\u53ef\u4ee5\u76f4\u63a5\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u800c\u53ef\u4ee5\u8bc1\u660e\uff0c\u82e5\u6309\u7167 dfn \u6392\u5e8f\uff0c\u5219\u7b54\u6848\u662f\u4e24\u7aef\u7684 LCA\u3002\u5f88\u53ef\u4ee5\u611f\u6027\u7406\u89e3\uff0c\u4f46\u4e5f\u5bb9\u6613\u8bc1\u660e\uff0c\u7ed3\u5408\u865a\u6811\u7406\u8bba\u60f3\u4e00\u4e0b\u5c31\u51fa\u6765\u4e86\u3002\u4f46\u8fd9\u5bf9\u505a\u8fd9\u9898\u5e76\u6ca1\u6709\u7528\uff0c\u76f4\u63a5\u7ef4\u62a4\u533a\u95f4\u53cd\u800c\u597d\u5199\u3002\u6ce8\u610f\u5230 LCA \u4e5f\u662f\u53ef\u53e0\u52a0\u7684\uff0c\u4e8e\u662f\u4e5f\u53ef\u4ee5\u7528 ST \u8868\u505a\u5230 $\\mathrm O(1)$ \u67e5\u8be2\uff0c\u9884\u5904\u7406\u7531\u4e8e\u6b21\u6570\u662f\u7ebf\u5bf9\uff0c\u6240\u4ee5\u9700\u8981\u7528 $\\mathrm O(n\\log n)-\\mathrm O(1)$ \u7684\u6b27\u62c9\u5e8f + ST \u8868\u6c42 LCA\u3002\n\n\u5c06 $l\\sim r$ \u6309 dfn / \u6b27\u62c9\u5e8f\u6392\u5e8f\u540e\uff0c\u5c06 $p$ \u4e5f\u63d2\u8fdb\u53bb\uff0c\u90a3\u4e48\u6839\u636e\u6b27\u62c9\u5e8f + ST \u8868\u6c42 LCA \u6cd5\u53ef\u77e5\uff0c$p$ \u4e0e\u540e\u7ee7\u7684 LCA \u662f\u4e0e\u66f4\u540e\u9762\u8282\u70b9\u7684 LCA \u7684\u540e\u4ee3\uff08\u8d8a\u5f80\u540e\u9762\u53d6\uff0cLCA \u6df1\u5ea6\u8d8a\u5c0f\uff09\uff1b\u5de6\u8fb9\u7c7b\u4f3c\u3002\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u6c42 $p$ \u7684\u524d\u9a71\u4e0e\u540e\u7ee7\u3002\n\n\u81ea\u7136\u60f3\u5230 2log \u7684\u6811\u5957\u6811\u3002\u8003\u8651\u5176\u672c\u8d28\uff0c\u524d\u9a71\u540e\u7ee7\u5176\u5b9e\u662f\u4e2a\u53d8\u4e86\u4e2a\u5f62\u7684\u4e8c\u7ef4\u6570\u70b9\uff0c\u8303\u56f4\u662f\u7b2c\u4e00\u7ef4\u662f\u5bf9\u5e94\u533a\u95f4\uff0c\u7b2c\u4e8c\u7ef4\u662f\u503c\u57df\u4e0a\u7684\u524d\u7f00 / \u540e\u7f00\uff0c\u8fd0\u7b97\u4ece\u52a0\u6cd5\u53d8\u6210\u4e86\u6c42 max / min\u3002\u4f46\u662f\u8fd9\u73a9\u610f\u6ca1\u6709\u53ef\u51cf\u6027\uff0c\u6240\u4ee5\u6811\u5957\u6811\u4e5f\u662f\u53ea\u80fd\u533a\u95f4\u67e5\u8be2\uff0c\u800c\u975e\u524d\u7f00\u67e5\u8be2\u7136\u540e\u76f8\u51cf\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u7b2c\u4e8c\u7ef4\uff08\u503c\u57df\u7ef4\uff09\u662f\u524d\u7f00 / \u540e\u7f00\uff0c\u53ef\u4ee5\u6b63\u53cd\u4e24\u904d\u5bf9\u8be5\u7ef4\u4e3b\u5e2d\u6811\uff0c\u7136\u540e\u5bf9\u7b2c\u4e00\u7ef4\u533a\u95f4\u67e5\u8be2\u3002\n\n\u4f46\u662f\u8fd9\u6837\u592a\u9ebb\u70e6\u4e86\uff08\u5927\u96fe\uff09\u3002\u524d\u9a71\u540e\u7ee7\u8fd9\u73a9\u610f\u6709\u66f4\u4f18\u79c0\u7684\u6027\u8d28\uff1a\u6bcf\u4e2a\u70b9\u7684\u70b9\u6743\u5c31\u662f\u7b2c\u4e8c\u7ef4\u5750\u6807\u3002\u6240\u4ee5\u5982\u679c\u6211\u4eec\u628a\u7b2c\u4e00\u7ef4\u538b\u6241\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u4e0d\u662f\u4e00\u4e2a\u590d\u6742\u7684 RMQ\uff0c\u800c\u662f\u76f4\u63a5\u627e\u6709\u503c\u7684\u5730\u65b9\uff0c\u53ef\u4ee5\u7528\u7c7b\u4f3c\u6811\u4e0a\u4e8c\u5206\u7684\u66f4\u7b80\u5355\u7684\u5199\u6cd5\uff08\u4f46\u662f\u533a\u95f4\u67e5\u8be2\u7684\u5199\u6cd5\u66f4\u4e3a\u76f4\u89c2\uff1f\uff09\u3002\u800c\u300c\u6709\u503c\u300d\u8fd9\u73a9\u610f\uff08\u5373 cnt\uff09\u662f\u53ef\u51cf\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u5de6\u53f3\u4e24\u7aef\u4e24\u68f5\u6811\u76f8\u51cf\uff0c\u7136\u540e\u5728\u4e0a\u9762\u4e8c\u5206\u3002\n\n**_[code](https://www.luogu.com.cn/paste/9d072snf)_**\uff08\u5199\u8001\u957f\u4e86\uff09",
        "postTime": 1614873889,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "P6071"
    },
    {
        "content": "[\u539f\u9898](https://www.luogu.com.cn/problem/P6071)\n\n\u8003\u573a\u4e0a\u53ea\u60f3\u51fa\u4e86 48 \u5206\u66b4\u529b\uff0c\u8fd9\u91cc\u7b80\u5355\u8bf4\u4e0b\u5427\uff1a\n\n## $subtask1:l==r$\n\u975e\u5e38\u57fa\u672c\u7684\u6811\u4e0a\u4e24\u70b9\u8def\u5f84\u67e5\u8be2\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002\n\n## $subtask2:p==1$\n\u8fd9\u4e2a\u4e5f\u975e\u5e38\u7b80\u5355\uff0c\u4ee5 $1$ \u4e3a\u6839\u6c42\u533a\u95f4 lca\uff0c$dis(1,lca[l,r])$ \u5c31\u662f\u7b54\u6848\u3002\n\n\u4e3a\u5565\u5462\uff1f\u56e0\u4e3a\u524d\u5f80\u7684\u70b9\u4e00\u5b9a\u662f $1$ \uff0c\u6240\u4ee5\u8ba9\u6bcf\u4e2a\u70b9\u4e00\u76f4\u5f80\u4e0a\u8df3\u5c31\u53ef\u4ee5\u5230\u8fbe\uff0c\u90a3\u4e48\u533a\u95f4 $[l,r]$ \u5185\u7684\u70b9\u5f80\u4e0a\u8df3\u7684\u65f6\u5019\u4e00\u5b9a\u4f1a\u7ecf\u8fc7 lca \uff0c\u6240\u4ee5\u8fd9\u5c31\u662f\u7b54\u6848\u5566\u3002\n\n### \u600e\u4e48\u6c42\u533a\u95f4 $lca$:\n\u5f88\u663e\u7136\u8fd9\u4e2a\u6ee1\u8db3\u533a\u95f4\u53ef\u52a0\u6027\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811~~\uff08\u4e5f\u663e\u7136\u4e0d\u6ee1\u8db3\u533a\u95f4\u53ef\u51cf\u6027\u4e0d\u80fd\u7528\u6811\u72b6\u6570\u7ec4\uff09~~\uff0c\u4f46\u8fd9\u4e2a\u7ebf\u6bb5\u6811\u4e0d\u80fd\u4e00\u4e2a\u70b9\u4e00\u4e2a\u70b9\u52a0\uff0c\u6211\u4eec\u8981\u5728\u6700\u5f00\u59cb\u76f4\u63a5\u4e00\u6b21 $bulid$ \u5efa\u6811\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u5047\u8bbe\u5df2\u7ecf\u7ef4\u62a4\u51fa\u533a\u95f4 $[l,mid]$ \u548c $[mid,r]$ \u7684 lca\uff0c\u90a3\u4e48\u5bf9\u8fd9\u4e24\u4e2a lca \u518d\u6c42\u4e00\u904d lca \u5c31\u6c42\u51fa\u4e86\u533a\u95f4 $[l,r]$ \u7684 lca\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(QlogN)$\u3002\n\n## $subtask3:n<=10^3$\n\n\u6211\u4f1a\u6811\u4e0a\u5dee\u5206\uff01\n\n\u6211\u4eec\u628a\u67d0\u4e00\u6761\u8fb9\u770b\u505a\u8fd9\u4e2a\u8282\u70b9\u5230\u5b83\u7236\u4eb2\u7684\u8fb9\u8fdb\u884c\u7ef4\u62a4\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8def\u5f84 $(p,i)$ \uff0c\u6211\u4eec\u5728\u8282\u70b9 p \u548c i \u5904\u90fd\u6253\u4e0a $+1$ \uff0c\u5728 $lca(p,i)$ \u6253\u4e0a $-2$ \uff08\u663e\u7136 lca \u5f80\u7236\u4eb2\u8d70\u7684\u8fb9\u4e0d\u4f1a\u88ab\u7ecf\u8fc7\uff09\uff0c\u4e00\u904d dfs \u81ea\u5e95\u5411\u4e0a\u5408\u5e76\uff0c\u770b\u770b\u54ea\u4e9b\u70b9\u5411\u7236\u4eb2\u8d70\u7684\u8fb9\u88ab\u7ecf\u8fc7 $r-l+1$ \u6b21\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(QNlogN)$\n\n## 48$pts$\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nconst int N=2e5+10,M=19;\nint dad[N*4],fa[N][M],num[N],dis[N],dep[N],h[N],d[N],s[N];\n//\u89e3\u91ca\u4e0b\u6570\u7ec4\u610f\u4e49\n//dad\u662f\u7ebf\u6bb5\u6811lca\uff0cnum\u8868\u793a\u5411\u4e0a\u8d70\u7684\u8fb9\u7f16\u53f7\u662f\u591a\u5c11,dis\u8868\u793a\u67d0\u4e2a\u70b9\u5230\u6839\u7684\u8ddd\u79bb\n//d\u662f\u5dee\u5206\u6570\u7ec4\uff0cs\u662f\u6700\u7ec8\u88ab\u7ecf\u8fc7\u7684\u6b21\u6570\n//\u5565\uff0c\u4f60\u95ee\u6211\u4e3a\u4ec0\u4e48\u5199\u500d\u589elca\uff0c\u56e0\u4e3a\u597d\u5199\u554a\nint xi,yi,wi,n,q,ans,cnt;\nstruct edge{int to,nex,len,id;}e[N*2];\nvoid add(int u,int v,int w,int id){\n\te[++cnt].to=v;\n\te[cnt].nex=h[u];\n\te[cnt].len=w;\n\te[cnt].id=id;\n\th[u]=cnt;\n}\nvoid dfs1(int u){\n\tdep[u]=dep[fa[u][0]]+1;\n\tfor(int i=h[u];i;i=e[i].nex){\n\t\tint v=e[i].to;\n\t\tif(v==fa[u][0]) continue;\n\t\tdis[v]=dis[u]+e[i].len;\n\t\tnum[v]=e[i].id;\n\t\tfa[v][0]=u;\n\t\tdfs1(v);\n\t}\n}\nint lca(int u,int v){\n\tif(dep[u]<dep[v]) swap(u,v);\n\tfor(int i=M-1;i>=0;i--)\n\t\tif(dep[fa[u][i]]>=dep[v]) u=fa[u][i];\n\tif(u==v) return u;\n\tfor(int i=M-1;i>=0;i--)\n\t\tif(fa[u][i]!=fa[v][i]) u=fa[u][i],v=fa[v][i];\n\treturn fa[u][0];\n}\nvoid build(int u,int l,int r){\n\tif(l==r){\n\t\tdad[u]=l;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(u<<1,l,mid);\n\tbuild(u<<1|1,mid+1,r);\n\tdad[u]=lca(dad[u<<1],dad[u<<1|1]);\n}\nint query(int u,int l,int r,int x,int y){\n\tif(l>=x&&r<=y) return dad[u];\n\tint mid=(l+r)>>1,res;\n\tif(mid>=x){\n\t\tres=query(u<<1,l,mid,x,y);\n\t\tif(mid<y) res=lca(res,query(u<<1|1,mid+1,r,x,y));\n\t}else res=query(u<<1|1,mid+1,r,x,y);\n\treturn res;\n}\n//\u8fd9\u5757\u7ebf\u6bb5\u6811\u57fa\u672c\u64cd\u4f5c\uff0c\u6539\u6539\u677f\u5b50\u5c31\u884c\uff0c\u4e0d\u52a0\u8d58\u8ff0\nint rd(){\n\tint x=0,w=1;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9'){\n\t\tif(c=='-') w=-1;\n\t\tc=getchar();\n\t}\n\twhile(c<='9'&&c>='0') x=x*10+c-'0',c=getchar();\n\treturn x*w;\n}\nvoid dfs2(int u){\n\ts[num[u]]=d[num[u]];\n\td[num[u]]=0;\n\tfor(int i=h[u];i;i=e[i].nex){\n\t\tint v=e[i].to;\n\t\tif(v==fa[u][0]) continue;\n\t\tdfs2(v);\n\t\ts[num[u]]+=s[num[v]];\n\t}\n}\n//\u81ea\u5e95\u800c\u4e0a\u5408\u5e76\u6807\u8bb0\nint main(){\n\tn=rd(),q=rd();\n\tfor(int i=1;i<n;i++){\n\t\txi=rd(),yi=rd(),wi=rd();\n\t\tadd(xi,yi,wi,i),add(yi,xi,wi,i);\n\t}\n\tdfs1(1);\n\tfor(int j=1;j<M;j++)\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfa[i][j]=fa[fa[i][j-1]][j-1];\n\tif(n<=1000){\n\t\tfor(int i=1;i<=q;i++){\n\t\t\tscanf(\"%d%d%d\",&wi,&xi,&yi);\n\t\t\twi^=ans,xi^=ans,yi^=ans;\n\t\t\tans=0;\n\t\t\tfor(int j=xi;j<=yi;j++){\n\t\t\t\tint top=lca(wi,j);\n\t\t\t\td[num[wi]]++;\n\t\t\t\td[num[j]]++;\n\t\t\t\td[num[top]]-=2;\n\t\t\t}\n\t\t\tdfs2(1);\n\t\t\tfor(int i=1;i<n;i++)\n\t\t\t\tif(s[i]==yi-xi+1) ans+=e[i*2].len;\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t}\n\t}else{\n\t\tbuild(1,1,n);\n\t\tfor(int i=1;i<=q;i++){\n\t\t\tscanf(\"%d%d%d\",&wi,&xi,&yi);\n\t\t\twi^=ans,xi^=ans,yi^=ans;\n\t\t\tans=0;\n\t\t\tif(xi==yi){\n\t\t\t\tint top=lca(xi,wi);\n\t\t\t\tans=dis[xi]+dis[wi]-2*dis[top];\n\t\t\t}else{\n\t\t\t\tint top=query(1,1,n,xi,yi);\n\t\t\t\tans=dis[top];\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n## $subtask4,5$~~\uff08\u6216\u8005\u5e94\u8be5\u79f0\u4e4b\u4e3a\u6b63\u89e3\uff09~~\n\n\u8fd9\u4e2a\u5c31\u4e00\u70b9\u4e5f\u4e0d\u7b80\u5355\u4e86~~QwQ~~\u3002\n\n\u6211\u4eec\u6765\u5206\u7c7b\u8ba8\u8bba\u4e0b\uff0c\u5047\u8bbe\u6709\u8fd9\u4e48\u68f5\u6811\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/krvrmpyo.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\n\n\u9996\u5148\uff0c\u6709\u7684\u70b9\u5728 $p$ \u5b50\u6811\u5185\uff0c\u6709\u7684\u70b9\u4e0d\u5728\uff0c\u663e\u7136\u7b54\u6848\u662f $0$ \u3002\n\n### $p=2,l=6,r=7$\n\n\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c$[6,7]$ \u4e4b\u5185\u7684\u70b9\u90fd\u5728$2$\u7684\u5b50\u6811\u5185\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u548c $subtask2$ \u5b9e\u9645\u4e0a\u662f\u4e00\u6837\u7684\uff0c$ans=dis(p,lca(l,r))$\u3002\n\n### $p=3,l=6,r=7$\n### $p=5,l=6,r=7$\n\n\u8fd9\u4e24\u79cd\u60c5\u51b5\u7684\u76f8\u540c\u70b9\uff1a $p$ \u7684\u5b50\u6811\u5185\u90fd\u6ca1\u6709 $[l,r]$ \u5185\u7684\u4efb\u4f55\u70b9\u3002\n\n\u5bf9\u4e8e $p=3$\uff0c$3$ \u4e0d\u5728 $lca[l,r]=4$ \u7684\u5b50\u6811\u5185\uff0c\u6b64\u65f6\u7b54\u6848\u5c31\u662f $dis(p,lca[l,r])$\u3002\n\n\u5bf9\u4e8e $p=5$\uff0c$5$ \u5728 $lca[l,r]=4$ \u7684\u5b50\u6811\u5185\uff0c\u6b64\u65f6\u7b54\u6848\u5c31\u4e0d\u80fd\u7b80\u7b80\u5355\u5355\u5730\u6c42\u4e86\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u6b64\u65f6\u7684\u7b54\u6848\u5b9e\u9645\u4e0a\u662f $dis(\\min_{i=l}^{r}lca(p,i),p)$\uff0c\u518d\u6765\u4e00\u5f20\u56fe\u770b\u770b\u5c31\u660e\u767d\u4e86\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/luf2szx8.png)\n\n\u7ea2\u8272\u7684\u70b9\u8868\u793a\u533a\u95f4 $[l,r]$ \u5185\u7684\u70b9\uff0c\u8fd9\u65f6 $lca$ \u663e\u7136\u662f\u6700\u4e0a\u9762\u7684\u70b9\uff0c\u4f46\u662f\u7b54\u6848\u5374\u662f $p$ \u5230 $fa[p]$ \u7684\u8ddd\u79bb\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/9lnartn6.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u8fd9\u65f6\u5019\u5462\uff1f\u7b54\u6848\u5e94\u8be5\u662f $p$ \u5230 $fa[fa[p]]$ \u7684\u8ddd\u79bb\u5427\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8981\u627e\u7684\u5c31\u662f\u70b9 $p$ \u7684\u6240\u6709\u7956\u5148\u4e2d\uff0c\u54ea\u4e00\u4e2a\u4e0d\u5305\u542b $[l,r]$ \u5185\u7684\u70b9 \uff0c\u800c\u4e14\u8ddd $p$ \u7684\u8ddd\u79bb\u6700\u8fdc\u3002\n\n### \u95ee\u9898\u6765\u4e86\uff0c\u600e\u4e48\u7ef4\u62a4\u51fa\u73b0\u6b21\u6570\u5462\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u7ef4\u62a4\u7684\u662f\u4e00\u4e2a\u5b50\u6811\u5185\u7684\u4fe1\u606f\uff0c\u5bf9\u4e8e\u5b50\u6811\u5185\u7684\u4fe1\u606f\uff0c\u4e00\u822c\u6765\u8bf4\u6c42\u51fa dfs \u5e8f\u548c\u5b50\u6811\u5927\u5c0f\u518d\u8fdb\u884c\u533a\u95f4\u7ef4\u62a4\u7b54\u6848\u662f\u975e\u5e38\u6709\u6548\u7684\u3002\n\n\u6c42\u51fa dfs \u5e8f\u4ee5\u540e\uff0c\u6211\u4eec\u4ece $1$ \u5f00\u59cb\u904d\u5386\uff0c\u7ef4\u62a4\u4e00\u68f5\u4e3b\u5e2d\u6811\uff08\u5b9e\u9645\u4e0a\u662f\u6743\u503c\u7ebf\u6bb5\u6811\uff09\uff0c\u6bcf\u4e2a\u70b9\u5728\u539f\u533a\u95f4\u5bf9\u5e94\u7684\u5b9e\u9645\u4e0b\u6807\u5904 $+1$\uff0c\u6c42\u67d0\u5b50\u6811\u4e2d\u4f4d\u4e8e $[l,r]$ \u5185\u7684\u70b9\u7684\u51fa\u73b0\u6b21\u6570\u662f\u57fa\u672c\u64cd\u4f5c\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u4e00\u4e2a\u5bb9\u6613\u60f3\u5230\u7684\u601d\u8def\u662f\u4e00\u7ea7\u7ea7\u8df3\u7236\u4eb2\uff0c\u5982\u679c\u51fa\u73b0\u4e86 $[l,r]$ \u5185\u7684\u70b9\u5c31\u8fd4\u56de\uff0c\u4f46\u8fd9\u6837\u8df3\u592a\u6162\u4e86\uff0c\u6211\u4eec\u500d\u589e\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(Qlog^2N)$\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nconst int N=2e5+10,M=19;\nint sum[N*M],s[N*M][2],rt[N],fa[N][M],id[N],rk[N],sz[N],dep[N],dis[N],dad[N*4],h[N];\nint n,m,ui,vi,wi,cnt;\nstruct edge{int to,nex,len;}e[N*2];\nvoid add(int u,int v,int w){\n\te[++cnt].to=v;\n\te[cnt].nex=h[u];\n\te[cnt].len=w;\n\th[u]=cnt;\n}\nvoid dfs(int u){\n\tid[u]=++cnt;\n\trk[cnt]=u;\n\tsz[u]=1;\n\tdep[u]=dep[fa[u][0]]+1;\n\tfor(int i=h[u];i;i=e[i].nex){\n\t\tint v=e[i].to;\n\t\tif(v==fa[u][0]) continue;\n\t\tfa[v][0]=u;\n\t\tdis[v]=dis[u]+e[i].len;\n\t\tdfs(v);\n\t\tsz[u]+=sz[v];\n\t}\n}\nint lca(int u,int v){\n\tif(dep[u]<dep[v]) swap(u,v);\n\tfor(int i=M-1;i>=0;i--)\n\t\tif(dep[fa[u][i]]>=dep[v])\n\t\t\tu=fa[u][i];\n\tif(u==v) return u;\n\tfor(int i=M-1;i>=0;i--)\n\t\tif(fa[u][i]!=fa[v][i])\n\t\t\tu=fa[u][i],v=fa[v][i];\n\treturn fa[u][0];\n}\nvoid build(int u,int l,int r){\n\tif(l==r){\n\t\tdad[u]=l;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(u<<1,l,mid);\n\tbuild(u<<1|1,mid+1,r);\n\tdad[u]=lca(dad[u<<1],dad[u<<1|1]);\n}\nint qlca(int u,int l,int r,int x,int y){\n\tif(l>=x&&r<=y) return dad[u];\n\tint mid=(l+r)>>1,res;\n\tif(mid>=x){\n\t\tres=qlca(u<<1,l,mid,x,y);\n\t\tif(mid<y) res=lca(res,qlca(u<<1|1,mid+1,r,x,y));\n\t}else if(mid<y) res=qlca(u<<1|1,mid+1,r,x,y);\n\treturn res;\n}\nvoid add(int u,int l,int r,int x,int pre){\n\tsum[u]=sum[pre];\n\tif(l==x&&r==x){\n\t\tsum[u]++;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(mid>=x){\n\t\ts[u][0]=++cnt;\n\t\ts[u][1]=s[pre][1];\n\t\tadd(s[u][0],l,mid,x,s[pre][0]);\n\t}else{\n\t\ts[u][0]=s[pre][0];\n\t\ts[u][1]=++cnt;\n\t\tadd(s[u][1],mid+1,r,x,s[pre][1]);\n\t}\n\tsum[u]=sum[s[u][0]]+sum[s[u][1]];\n}\nint query(int u,int l,int r,int x,int y){\n\tif(l>=x&r<=y) return sum[u];\n\tint mid=(l+r)>>1,res=0;\n\tif(mid>=x) res=query(s[u][0],l,mid,x,y);\n\tif(mid<y) res+=query(s[u][1],mid+1,r,x,y);\n\treturn res;\n}\nvoid init(){\n\tcnt=0;\n\tdfs(1);\n\tfor(int j=1;j<M;j++)\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfa[i][j]=fa[fa[i][j-1]][j-1];\n\tbuild(1,1,n);\n\tcnt=0;\n\tfor(int i=1;i<=n;i++){\n\t\trt[i]=++cnt;\n\t\tadd(rt[i],1,n,rk[i],rt[i-1]);\n\t}\n}\nint rd(){\n\tint x=0,w=1;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9'){\n\t\tif(c=='-') w=-1;\n\t\tc=getchar();\n\t}\n\twhile(c<='9'&&c>='0') x=x*10+c-'0',c=getchar();\n\treturn x*w;\n}\nint leap(){\n\tint u=wi;\n\tfor(int i=M-1;i>=0;i--){\n\t\tint v=fa[u][i];\n\t\tif(!v) continue;\n\t\tint num=query(rt[id[v]+sz[v]-1],1,n,ui,vi);\n\t\tnum-=query(rt[id[v]-1],1,n,ui,vi);\n\t\tif(!num) u=v;\n\t}\n\treturn fa[u][0];\n}\nint main(){\n\tn=rd(),m=rd();\n\tfor(int i=1;i<n;i++){\n\t\tui=rd(),vi=rd(),wi=rd();\n\t\tadd(ui,vi,wi),add(vi,ui,wi);\n\t}\n\tinit();\n\tint ans=0;\n\tfor(int i=1;i<=m;i++){\n\t\twi=rd(),ui=rd(),vi=rd();\n\t\twi^=ans,ui^=ans,vi^=ans;\n\t\tint num=query(rt[id[wi]+sz[wi]-1],1,n,ui,vi),u,v;\n\t\tnum-=query(rt[id[wi]-1],1,n,ui,vi);\n\t\tif(num==vi-ui+1){\n\t\t\tu=qlca(1,1,n,ui,vi);\n\t\t\tans=dis[u]-dis[wi];\n\t\t}else if(!num){\n\t\t\tu=qlca(1,1,n,ui,vi),v=lca(wi,u);\n\t\t\tif(v==u){\n\t\t\t\tu=leap();\n\t\t\t\tans=dis[wi]-dis[u];\n\t\t\t}else ans=dis[u]+dis[wi]-2*dis[v];\n\t\t}else ans=0;\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1581652807,
        "uid": 55405,
        "name": "\u9752\u7fbd\u540c",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6071 \u3010[MdOI2020] Treequery\u3011"
    },
    {
        "content": "\u597d\u9898\uff01\n\n\u63d0\u4f9b\u4e00\u79cd\u5f88\u96be\u5199\uff0c\u8dd1\u5f88\u6162\uff0c\u4f46\u611f\u89c9\u6bd4\u9898\u89e3\u597d\u60f3\u7684\u89e3\u6cd5\u3002\n\n## \u9898\u610f\n\n\u7ed9\u68f5\u6811\uff0c\u6709\u8fb9\u6743\uff0c\u6bcf\u6b21\u7ed9 ``p l r``\uff0c\u8be2\u95ee $p$ \u5230 $[l, r]$ \u5185\u6bcf\u4e2a\u70b9\u7684\u516c\u5171\u90e8\u5206\u957f\u5ea6\u3002\u5f3a\u5236\u5728\u7ebf\u3002\n\n## \u9898\u89e3\n\n\u9898\u89e3\u4e2d\u9ed8\u8ba4 $1$ \u4e3a\u6839\u3002\n\n### Subtask 1: $l = r$\n\n\u5373\u8be2\u95ee\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u957f\u5ea6\u3002\u53ef\u4ee5\u968f\u4fbf LCA \u518d\u500d\u589e\u3002\n\n### Subtask 2: $p = 1$\n\n\u8003\u8651\u5982\u679c\u6700\u540e\u7b54\u6848\u4e0d\u4e3a $0$\uff0c\u90a3\u4e00\u5b9a\u662f\u8fd9\u6837\u7684\u60c5\u51b5\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/i8ywflui.png)\n\n\u7ea2\u8272\u7684\u8fb9\u6743\u548c\u5373\u4e3a\u7b54\u6848\u3002\u4e5f\u5c31\u662f\u6c42 $[l, r]$ \u8fd9\u4e9b\u70b9\u7684 LCA\uff0c\u7136\u540e\u8fd9\u4e2a LCA \u5230\u6839\u7684\u8def\u5f84\u5373\u4e3a\u7b54\u6848\u3002\n\n\u53ef\u4ee5\u4f7f\u7528\u4e86 ST \u8868\u7ef4\u62a4\u533a\u95f4 LCA\u3002\n\n### \u6b63\u89e3\n\n\u6211\u4eec\u628a $[l, r]$ \u4e2d\u7684\u70b9\u5206\u4e3a\u4e09\u79cd\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/cs3o2xex.png)\n\n\u5373\uff1a\u5728 $p$ \u5b50\u6811\u4e2d\u7684\u70b9\uff0c$p$ \u7684\u7956\u5148\u548c\u5176\u4ed6\u70b9\uff0c\u5206\u522b\u5bf9\u5e94\u4e0a\u56fe\u7684\u7b2c 1\uff0c2 \u7c7b\u70b9\u3002\uff08\u7ea2\u8272\u7684\u70b9\u662f\u6b64\u65f6\u5728 $[l, r]$ \u4e2d\u7684\u70b9\uff09\n\n\u5982\u679c\u7b2c 1 \u7c7b\u70b9\u548c\u7b2c 2 \u7c7b\u70b9\u540c\u65f6\u5b58\u5728\uff0c\u663e\u7136\u6b64\u65f6\u7b54\u6848\u4e3a 0\uff1b\u5982\u679c\u4ec5\u5b58\u5728\u7b2c 1 \u7c7b\u70b9\uff0c\u90a3\u4e48\u7b49\u540c\u4e8e Subtask 2 \u4e2d\u7684\u60c5\u51b5\u3002\n\n\u4e0b\u9762\u8ba8\u8bba\u5b58\u5728\u7b2c 2 \u7c7b\u70b9\u65f6\u7684\u60c5\u51b5\u3002\n\n---\n\n\u663e\u7136\uff0c\u6bcf\u4e2a\u70b9 $x$ \u7684\u8def\u5f84\u4e3a $x \\rightarrow \\text{LCA}(x, p) \\rightarrow p$\uff0c\u800c\u4e14\u8fd9\u4e9b LCA \u4e00\u5b9a\u5728 $p$ \u5230\u6839\u7684\u8def\u5f84\u4e0a\u3002\n\n\u4e0d\u96be\u63a8\u51fa\uff0c\u8bbe\u70b9 $T = \\text{LCA}(x_0, p)$ \u4e3a $\\text{LCA}(l, p), \\text{LCA}(l + 1, p), \\cdots, \\text{LCA}(r, p)$ \u4e2d\u6700\u6df1\u7684\u70b9\uff0c\u5219\u6b64\u65f6\u7684\u7b54\u6848\u4e3a $\\text{LCA}(T, p) \\rightarrow p$ \u8fd9\u6761\u8def\u5f84\u7684\u957f\u5ea6\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/n9jdcv5u.png)\n\n\u6bd4\u5982\u5728\u4e0a\u56fe\u4e2d\uff0c$p = 9, l = 5, r = 7$\uff0c\u5219 $T = 4$\uff0c\u7b54\u6848\u5373\u4e3a $4 \\rightarrow 9$ \u7684\u8fd9\u6761\u8def\u5f84\u3002\n\n\u4f46\u5176\u5b9e\u8fd9\u6837\u662f\u4e0d\u5bf9\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u5b9e\u9645\u4e0a\u628a $x \\rightarrow p$ \u7684\u8def\u5f84\u62c6\u6210\u4e86 $x \\rightarrow \\text{LCA}(x, p)$ \u548c $\\text{LCA}(x, p) \\rightarrow p$\uff0c\u800c\u4e14\u53ea\u7b97\u4e86 $\\text{LCA}(x, p) \\rightarrow p$ \u7684\u90e8\u5206\u3002\u4e07\u4e00 $x \\rightarrow \\text{LCA}(x, p)$ \u7684\u90e8\u5206\u4e5f\u5bf9\u7b54\u6848\u4ea7\u751f\u4e86\u8d21\u732e\uff0c\u90a3\u6211\u4eec\u5c31~~\u6b7b\u4e86~~\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/x5r96w87.png)\n\n\u5982\u4e0a\u56fe\uff0c\u5f53\u524d\u6709\u4e14\u4ec5\u6709\u7ea2\u8272\u70b9\u5728 $[l, r]$ \u5185\uff0c\u6b64\u65f6\u6309\u7167\u4e0a\u9762\u7684\u65b9\u6cd5\u53ea\u4f1a\u7edf\u8ba1 $T \\rightarrow p$ \u7684\u7b54\u6848\uff0c\u800c\u4e0d\u4f1a\u7edf\u8ba1\u7eff\u8272\u7684\u8fb9\u3002\n\n\u6709**\u7ed3\u8bba**\uff1a\u5982\u679c $\\text{LCA}(l, l + 1, \\cdots, r)$ \u6bd4\u70b9 T **\u4e25\u683c\u6df1**\uff0c\u5219 $\\text{LCA}(l, l + 1, \\cdots, r)$ \u4e00\u5b9a\u5728 $T$ \u7684\u5b50\u6811\u4e2d\uff0c\u5373\u7b54\u6848\u9700\u8981\u52a0\u4e0a $\\text{LCA} \\rightarrow T$ \u8fd9\u6bb5\u7684\u8def\u5f84\u957f\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/2swr3zkk.png)\n\n\u5982\u56fe\uff0c\u5f53 $\\text{LCA}(l, l + 1, \\cdots, r)$ \u6bd4 $T$ \u4e25\u683c\u6df1\u65f6\uff0c\u53ea\u53ef\u80fd $l, l + 1, \\cdots, r$ \u662f\u7ea2\u8272\u7684\u8fd9\u79cd\u70b9\uff08\u5728 $T$ \u5b50\u6811\u5185\uff09\uff1b\u5982\u679c\u662f\u84dd\u8272\u7684\u8fd9\u79cd\u70b9\uff08\u5728 $T$ \u5b50\u6811\u5916\uff09\uff0c\u5219 $T$ \u4e0d\u7b26\u5408\u5176\u5b9a\u4e49\u3002\n\n\u6240\u4ee5\u8fd9\u4e2a\u7ed3\u8bba\u662f\u6b63\u786e\u7684\u3002~~\uff08\u611f\u6027\u7406\u89e3\uff09~~\n\n\u800c\u4e14\u5bb9\u6613\u53d1\u73b0\uff0c\u5373\u4f7f\u7b2c 1 \u7c7b\u70b9\u5b58\u5728\uff0c\u8fd9\u4e2a\u7ed3\u8bba\u4ecd\u7136\u6b63\u786e\u3002\n\n---\n\n\u6574\u7406\u4e00\u4e0b\u3002\n\n\u6211\u4eec\u9700\u8981\u6c42\u51fa $\\text{LCA}(l, l + 1, \\cdots, r)$ \u548c $T$\uff1b\u5982\u679c $\\text{LCA}(l, l + 1, \\cdots, r)$ \u6bd4 $T$ \u4e25\u683c\u6df1\uff0c\u5219\u7b54\u6848\u4e3a $\\text{LCA} \\rightarrow p$ \u7684\u8def\u5f84\u957f\uff1b\u5426\u5219\uff0c\u7b54\u6848\u4e3a $T \\rightarrow p$ \u7684\u8def\u5f84\u957f\u3002\n\n\u6c42 $\\text{LCA}(l, l + 1, \\cdots, r)$ \u53ef\u4ee5\u7528 Subtask 2 \u4e2d\u7684\u65b9\u6cd5\uff1b\n\n\u800c $T$ \u5373\u4e3a\u6700\u6df1\u7684\u3001\u5305\u542b\u81f3\u5c11\u4e00\u4e2a $[l, r]$ \u5185\u8282\u70b9\u7684 $p$ \u7684\u7956\u5148\uff0c\u53ef\u4ee5\u500d\u589e\u5f80\u4e0a\u8df3\uff0c\u518d\u5728 dfs \u5e8f\u4e0a\u4f7f\u7528\u6743\u503c\u4e3b\u5e2d\u6811\u8fdb\u884c\u5224\u65ad\u3002\n\n---\n\n### \u4ee3\u7801\n\n\u5199\u7684\u975e\u5e38\u4e11\u964b\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <cmath>\n\nusing namespace std;\n\ninline int read () {\n    int ret = 0, t = 1;\n    char c = getchar();\n    while ((c < '0' || c > '9') && c != '-') c = getchar();\n    if (c == '-') t = -1, c = getchar();\n    while (c >= '0' && c <= '9') ret = ret * 10 + c - '0', c = getchar();\n    return ret * t;\n}\n\nconst int MAXN = 200200;\n\nint n, q;\n\nstruct Edge {\n    int nex;\n    int to;\n    int w;\n} edge[MAXN << 1];\nint head[MAXN], cnt = 0;\nint F[MAXN][22] = {}; // F[i][j] \u8868\u793a\u70b9 i \u5f80\u4e0a\u8df3 1 << j \u7ea7\u7236\u4eb2\u8fd9\u4e00\u8def\u7684\u957f\u5ea6\u3002\nint dfn[MAXN] = {}, rdfn[MAXN] = {};\n// dfn[i] \u8868\u793a\u7b2c i \u4e2a\u88ab\u8bbf\u95ee\u7684\u8282\u70b9\u3002rdfn \u5c31\u662f\u53cd\u8fc7\u6765\u3002\nvoid add (int u, int v, int w) {\n    edge[++cnt].to = v;\n    edge[cnt].nex = head[u];\n    edge[cnt].w = w;\n    head[u] = cnt;\n}\n\nint fa[MAXN][22] = {};\nint dep[MAXN] = {};\nint siz[MAXN] = {};\n\nstruct node {\n    int lson;\n    int rson;\n    int val;\n} tree[MAXN * 36];\n\nvoid pushup (int root) { tree[root].val = tree[tree[root].lson].val + tree[tree[root].rson].val; }\n\nvoid build (int l, int r, int root) {\n    if (l == r) {\n        tree[root].val = 0;\n        return;\n    }\n    int mid = (l + r) >> 1;\n    cnt++;\n    tree[root].lson = cnt;\n    build(l, mid, cnt);\n    cnt++;\n    tree[root].rson = cnt;\n    build(mid + 1, r, cnt);\n}\n\nint hed[MAXN] = {};\n// \u2191\u4e3b\u5e2d\u6811\u7684head\nvoid update (int l, int r, int oldroot, int newroot, int kth) {\n    if (l == r) {\n        tree[newroot].val = tree[oldroot].val + 1;\n        return;\n    }\n    int mid = (l + r) >> 1;\n    if (kth <= mid) {\n        tree[newroot].rson = tree[oldroot].rson;\n        tree[newroot].lson = ++cnt;\n        update(l, mid, tree[oldroot].lson, cnt, kth);\n        pushup(newroot);\n    }\n    else {\n        tree[newroot].lson = tree[oldroot].lson;\n        tree[newroot].rson = ++cnt;\n        update(mid + 1, r, tree[oldroot].rson, cnt, kth);\n        pushup(newroot);\n    }\n}\n\nvoid dfs (int x, int f) {\n    dep[x] = dep[f] + 1;\n    fa[x][0] = f;\n    dfn[++cnt] = x, rdfn[x] = cnt;\n    siz[x] = 1;\n    int i, j;\n    for (i = head[x]; i; i = edge[i].nex) {\n        j = edge[i].to;\n        if (j != f) F[j][0] = edge[i].w, dfs(j, x), siz[x] += siz[j];\n    }\n}\n\nint lca (int u, int v) {\n    int i, j;\n    if (dep[u] < dep[v]) swap(u, v);\n    for (i = 20; i >= 0; i--) if (dep[fa[u][i]] >= dep[v]) u = fa[u][i];\n    if (u == v) return u;\n    for (i = 20; i >= 0; i--) if (fa[u][i] != fa[v][i]) u = fa[u][i], v = fa[v][i];\n    return fa[u][0];\n}\n\nint st[MAXN][22] = {};\n// \u2191 st[i][j] \u8868\u793a lca(i, i + 1, ..., i + (1 << j))\u3002\nint query (int l, int r, int oldroot, int newroot, int L, int R) {\n    if (l <= L && R <= r) return tree[newroot].val - tree[oldroot].val;\n    int mid = (L + R) >> 1, ret = 0;\n    if (l <= mid) ret += query(l, r, tree[oldroot].lson, tree[newroot].lson, L, mid);\n    if (mid < r) ret += query(l, r, tree[oldroot].rson, tree[newroot].rson, mid + 1, R);\n    return ret;\n}\n\nint main () {\n    n = read(), q = read();\n    int i, j;\n    for (i = 1; i < n; i++) {\n        int u = read(), v = read(), w = read();\n        add(u, v, w), add(v, u, w);\n    }\n    cnt = 0;\n    dfs(1, 0);\n    cnt = 1;\n    build(1, n, 1);\n    hed[1] = 1;\n    for (i = 1; i <= n; i++) {\n        hed[i + 1] = ++cnt;\n        update(1, n, hed[i], cnt, dfn[i]);\n    }\n    for (i = 1; i <= 20; i++) for (j = 1; j <= n; j++) fa[j][i] = fa[fa[j][i - 1]][i - 1];\n    for (i = 1; i <= n; i++) st[i][0] = i;\n    for (i = 1; i <= 20; i++) for (j = 1; j <= n; j++) if (j + (1 << (i)) - 1 <= n) st[j][i] = lca(st[j][i - 1], st[j + (1 << (i - 1))][i - 1]);\n    for (i = 1; i <= 20; i++) for (j = 1; j <= n; j++) F[j][i] = F[j][i - 1] + F[fa[j][i - 1]][i - 1];\n    int lastans = 0; // \u4e0a\u9762\u4e09\u4e2a ST \u8868\u90fd\u66f4\u65b0\u4e86\u4e00\u4e0b\u3002\n    while (q--) {\n        int p = read() ^ lastans, l = read() ^ lastans, r = read() ^ lastans;\n        int len = log2(r - l + 1);\n        int rua = lca(st[l][len], st[r - (1 << len) + 1][len]); // \u5373\u4e3a lca(l, l + 1, ..., r)\u3002\n        int tmp = p; // \u5373\u4e3a\u6587\u4e2d\u7684 T\u3002\n        for (i = 20; i >= 0; i--) if (fa[tmp][i] && query(l, r, hed[rdfn[fa[tmp][i]]], hed[rdfn[fa[tmp][i]] + siz[fa[tmp][i]]], 1, n) == 0) tmp = fa[tmp][i];\n        if (query(l, r, hed[rdfn[p]], hed[rdfn[p] + siz[p]], 1, n) != 0) tmp = p; else tmp = fa[tmp][0];\n        int ans = 0; // \u4e0a\u9762\u4e24\u884c\u5373\u4e3a\u500d\u589e\u7684\u5f80\u4e0a\u8df3\u5230\u6700\u540e\u4e00\u4e2a\u4e0d\u5305\u542b [l, r] \u4e2d\u8282\u70b9\u7684 p \u7684\u7956\u5148\uff1b\u56e0\u4e3a p \u53ef\u80fd\u5c31\u5df2\u7ecf\u5305\u542b [l, r] \u4e2d\u7684\u8282\u70b9\uff0c\u6240\u4ee5\u8981\u7279\u5224\u3002\n        if (dep[rua] > dep[tmp])\n            for (i = 20; i >= 0; i--)\n                if (dep[fa[rua][i]] >= dep[tmp]) ans += F[rua][i], rua = fa[rua][i];\n        for (i = 20; i >= 0; i--) // \u2191\u2193\u6b63\u5e38\u7684\u7edf\u8ba1\u7b54\u6848\u3002\n            if (dep[fa[p][i]] >= dep[tmp]) ans += F[p][i], p = fa[p][i];\n        printf(\"%d\\n\", ans);\n        lastans = ans; // \u522b\u5fd8\u4e86\u3002\n    }\n    return 0;\n}\n```",
        "postTime": 1581262015,
        "uid": 31488,
        "name": "wenhao801",
        "ccfLevel": 9,
        "title": "P6071 [MdOI2020] Treequery \u9898\u89e3"
    },
    {
        "content": "### P6071 \u300eMdOI R1\u300fTreequery\n\n\u5206\u7c7b\u8ba8\u8bba\uff0c\u8bbe $[l,r]$ \u7684\u70b9\u7684 `LCA` \u4e3a $u$\uff1a\n\n* $p$ \u4e0d\u5728 $u$ \u7684\u5b50\u6811\u5185\uff0c\u7b54\u6848\u4e3a $\\operatorname{dis}(u,p)$\u3002\n* \u5426\u5219\u3002\n  * \u82e5 $p$ \u5b50\u6811\u5185\u6709 $[l,r]$ \u7684\u70b9\uff0c\u5219\u7b54\u6848\u4e3a $0$\uff0c\u56e0\u4e3a\u8def\u5f84\u8fb9\u96c6\u65e0\u4ea4\u3002\n  * \u5426\u5219\u4ece $p$ \u5f00\u59cb\u4e8c\u5206\u6700\u6d45\u7684\u70b9 $x$ \u6ee1\u8db3 $x$ \u5b50\u6811\u5185\u65e0 $[l,r]$ \u7684\u70b9\uff0c\u7b54\u6848\u5373\u4e3a $\\operatorname{dis}(\\operatorname{fa}(x),p)$\u3002\n\n\u81ea\u5df1\u753b\u56fe\u601d\u8003\u5c31\u884c\u4e86\u3002\n\n\u4e3b\u5e2d\u6811\u7ef4\u62a4\u8df3\u70b9\uff0c\u6309 `dfs` \u5e8f\u52a0\u70b9\uff0c\u5224\u533a\u95f4\u662f\u5426\u65e0\u70b9\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5355 $\\log$\u3002\n\n\u7ef4\u62a4 $\\mathcal O(n\\log n)-\\mathcal O(1)$ `LCA`\u3002\n\n\u518d `ST` \u8868\u7ef4\u62a4\u533a\u95f4 `LCA`\u3002\n\n\u6545\u65f6\u7a7a\u590d\u6742\u5ea6 $\\mathcal O(n\\log n)$\uff0c\u6ce8\u610f\u7ec6\u8282\u95ee\u9898\u3002\n\n\u4ee3\u7801\u4e0d\u7ed9\u4e86\uff0c\u9700\u8981\u53ef\u4ee5\u627e\u6211\u3002",
        "postTime": 1658495667,
        "uid": 257146,
        "name": "orz_z",
        "ccfLevel": 0,
        "title": "P6071 \u300eMdOI R1\u300fTreequery"
    }
]