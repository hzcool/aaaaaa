[
    {
        "content": "\u5148\u819c\u697c\u4e0bdalao\u4e3a\u656c\uff0c\u7136\u800c\u7531\u4e8e\u672c\u849f\u84bb\u592a\u83dc\u4e86\uff0c\u53ea\u4f1a\u6811\u5256\u7684nlog^2n\u5361\u5e38\u505a\u6cd5\n#### 30\u5206\u505a\u6cd5\uff1a\n\u66b4\u529b\u7eedaaa\uff0c\u4e56\u4e56\u2642\u7ad9\u597d\u5373\u53ef\n#### 50\u5206\u505a\u6cd5\uff1a\n\u8003\u8651\u6bcf\u4e2aaaa\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u6bcf\u4e2a\u70b9\u4ee5\u8fd8\u672a\u7eed\u6389\u7684\u70b9\u6570\u4e3a\u6743\u503c\uff0c    \n\n\u6ce8\u610f\u5230\u6bcf\u4e2a\u70b9\u7eed\u6389\u6bcf\u4e2aaaa\u65f6\u6743\u503c\u90fd\u4f1a-1 ~~(-1s)~~, \u56e0\u6b64\u5148\u7eed\u7801\u529b\u5927\u7684aaa\u603b\u662f\u5bf9\u7684\uff0c\u6392\u5b8c\u5e8f\u6bcf\u6b21\u8df3\u5230\u6839\uff0c\u8def\u5f84\u7cfb\u6570-1\u5373\u53ef\u3002    \n\n\u800c\u4e14\u672c\u9898\u8981\u6c42\u6700\u5927\u503c\uff0c\u5374\u8fd8\u8981\u5728mod\u7684\u610f\u4e49\u4e0b\u8ba1\u7b97\uff0c\u8fd9\u6837\u8d2a\u5fc3\u6c42\u89e3\u4e4b\u540e\u624d\u53ef\u4ee5\u653e\u5fc3\u819c\u3002\n#### 70~100\u5206\u505a\u6cd5\n\u6ce8\u610f\u5230\u7eedaaa\u7684\u8fc7\u7a0b\u6bcf\u6b21\u9700\u8981\u8d70\u6811\u4e0a\u5230\u6839\u7684\u8def\u5f84\uff0c\u9700\u8981\u641e\u4e24\u4e2a\u64cd\u4f5c\uff1a  \n##### 1.\u6c42\u5230\u6839\u8def\u5f84\u7684\u6743\u503c\u548c\n##### 2.\u5c06\u5230\u6839\u8def\u5f84\u6743\u503c-1\n\u81ea\u7136\u60f3\u5230\u6811\u5256  \n  \n\u4e8e\u662f\u6253\u4e86\u4e00\u53d1\uff0c\u53d1\u73b0\u6700\u540e\u4e00\u4e2a\u70b9TLE\u4e86\uff0c~~\u663e\u7136nlog^2n\u4e0d\u662f\u6b63\u89e3~~\uff0c\u4f46\u662f\u4e0e\u65f6\u9650\u76f8\u5dee\u4e5f\u4e0d\u5927\u3002  \n\n\u4e8e\u662f\u5f00\u59cb\u5361\u5e38\u3002\u3002\u3002\u3002\u3002\u3002  \u6211\u4eec\u7528\u6811\u72b6\u6570\u7ec4\u4ee3\u66ff\u7ebf\u6bb5\u6811\u5bf9\u94fe\u5256\u8fdb\u884c\u7ef4\u62a4\uff0c\u56e0\u4e3a\u6811\u72b6\u6570\u7ec4\u5bf9\u4e0a\u9762\u7684\u64cd\u4f5c\u5b8c\u5168\u53ef\u4ee5\u80dc\u4efb\uff0c\u800c\u4e14\u5e38\u6570\u5c0f\uff01\n\n\u8fd9\u6837\u5c31\u80fdAC\u6b64\u9898\uff0c\u5f97\u5230\u5168\u90e8\u7684100\u5206\u3002\n\n\u6700\u540e\u6309\u4f8b\u4ee3\u7801\uff1a\n```cpp\n// luogu-judger-enable-o2\n#include <bits/stdc++.h>\nusing namespace std;\n#define LL long long\n#define maxn 500666\n#define mod 1000000007LL\n#define mid ((l+r)>>1)\nLL n,hhh=0;\nstruct aaa{\n\tLL va;\n\tLL po;\n};\nbool operator < (aaa a1,aaa a2){\n\treturn a1.va<a2.va;\n}\npriority_queue <aaa> pq;\nLL fa[maxn]={0},w[maxn]={0};\nvector <LL> ed[maxn];\nLL hs[maxn]={0},tp[maxn]={0},dfn[maxn]={0},tt=1;\nLL cf[maxn]={0};\nvoid dfs1(LL a){\n\tif(a==0) return;\n\tw[a]=1;hs[a]=0;\n\tfor(LL b=0;b<ed[a].size();b++)\n\tif(fa[a]!=ed[a][b])\n\t{\n\t\tfa[ed[a][b]]=a;\n\t\tdfs1(ed[a][b]);\n\t\tw[a]+=w[ed[a][b]];\n\t\tif(w[ed[a][b]]>w[hs[a]]) hs[a]=ed[a][b];\n\t}\n}\nvoid dfs2(LL a){\n\tif(a==0) return;\n\ttp[a]= a==hs[fa[a]]? tp[fa[a]]:a;\n\tdfn[a]=tt++;\n\tdfs2(hs[a]);\n\tfor(LL b=0;b<ed[a].size();b++)\n\tif(ed[a][b]!=fa[a]&&ed[a][b]!=hs[a]) dfs2(ed[a][b]);\n}\n//BIT\nLL lowbit(LL x) {return (-x)&x;} \nLL bit[3][maxn]={0};\nvoid add(LL a,LL x,LL c){\n\twhile(x<=n)\n\t{\n\t\tbit[a][x]+=c;\n\t\tx+=lowbit(x);\n\t}\n}\nLL qu(LL a,LL x){\n\tLL ret=0;\n\twhile(x)\n\t{\n\t\tret+=bit[a][x];\n\t\tret%=mod;\n\t\tx-=lowbit(x);\n\t}\n\treturn ret;\n}\nLL qz(LL x){\n\treturn ((qu(1,x)*(x+1)-qu(2,x))%mod+mod)%mod;\n}\n//.......\nvoid xu(LL a,LL v){\n\tLL b,c,d;\n\twhile(a)\n\t{\n\t\tc=tp[a];\n\t\thhh+=(qz(dfn[a])-qz(dfn[c]-1))*v;\n\t\thhh%=mod;\n\t\tadd(1,dfn[c],-1);\n\t\tadd(1,dfn[a]+1,1);\n\t\tadd(2,dfn[c],-dfn[c]);\n\t\tadd(2,dfn[a]+1,dfn[a]+1);\n\t\ta=fa[c];\n\t}\n}\nint main(){\n\tscanf(\"%lld\",&n);\n\tLL a,b,c,i,j,k;\n\taaa tmp;\n\tfor(a=1;a<n;a++)\n\t{\n\t\tscanf(\"%lld%lld\",&i,&j);\n\t\ted[i].push_back(j);\n\t\ted[j].push_back(i);\n\t}\n\tfor(a=1;a<=n;a++)\n\t{\n\t\tscanf(\"%lld\",&b);\n\t\ttmp.va=b;tmp.po=a;\n\t\tpq.push(tmp);\n\t}\n\tdfs1(1);dfs2(1);\n\tfor(a=1;a<=n;a++) cf[dfn[a]]=w[a];\n\tfor(a=n;a>=1;a--) cf[a]-=cf[a-1];\n\tfor(a=1;a<=n;a++) add(1,a,cf[a]);\n\tfor(a=1;a<=n;a++) add(2,a,cf[a]*a);\n\twhile(pq.size())\n\t{\n\t\ttmp=pq.top();pq.pop();\n\t\txu(tmp.po,tmp.va);\n\t}\n\tprintf(\"%lld\\n\",hhh);\n\treturn 0;\n} \n```",
        "postTime": 1519558130,
        "uid": 24608,
        "name": "winxp_qwq",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3925 \u3010aaa\u88ab\u7eed\u3011"
    },
    {
        "content": "\u6709\u4e00\u79cd\u505a\u6cd5\u662f\u8003\u8651\u70b9x\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u5373\u6240\u6709\u6ee1\u8db3$v_i<v_x$\u7684$dep_lca(i,x)$\u4e4b\u548c\u3002\u5c06\u6240\u6709\u70b9\u6309\u7801\u529b\u503c\u6392\u5e8f\u540e\uff0c\u4f9d\u6b21\u5c06\u6bcf\u4e2a\u70b9\u5230\u6839\u7684\u94fe\u52a0\u4e00\uff0c\u5e76\u628a\u7b54\u6848\u52a0\u4e0a[\uff08\u8fd9\u4e2a\u70b9\u5230\u6839\u7684\u94fe\u4e0a\u7684\u70b9\u6743\u548c\uff09\u4e58\uff08\u8be5\u70b9\u70b9\u6743\uff09]\u3002\u7528\u6811\u94fe\u5256\u5206\u5b9e\u73b0\uff0c\u590d\u6742\u5ea6$O(nlog^2n)$\u3002\n\n\u6211\u7684\u505a\u6cd5\u662f\u8003\u8651\u7eed\u6389\u6bcf\u4e2a\u70b9x\u7684\u6536\u76ca\uff0c$\\sum_y v_y*rank_y$\uff0c\u5176\u4e2dy\u5904\u4e8ex\u7684\u5b50\u6811\u4e2d,$rank_y$\u662f$y$\u7684\u6392\u540d\u3002\n\n\u52a0\u5165\u4e00\u4e2a\u70b9\u7684\u8d21\u732e\u5373$v_x*rank_x+(n-rank_x)$\uff0c\u5982\u679c\u7528\u5e73\u8861\u6811\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u8fd8\u662f$O(nlog^2n)$\n\n\u5982\u679c\u6539\u6210\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u53ef\u4ee5\u5feb\u901f\u8ba1\u7b97\u5de6\u534a\u533a\u95f4\u5bf9\u53f3\u534a\u533a\u95f4\u7684\u5f71\u54cd\uff0c\u4ece\u800c\u7701\u6389\u4e00\u4e2alog\u3002\u5b9e\u9645\u4e0a\u53ef\u80fd\u662f\u628a\u65f6\u95f4\u7684log\u8f6c\u5230\u4e86\u7a7a\u95f4\u4e0a\uff0c\u56e0\u4e3a\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u7a7a\u95f4\u662f$O(nlogn)$\u7684\u3002\n\n\u8d5b\u540e\u770b\u4e86\u770b\u6807\u7a0b\uff0c\u611f\u89c9\u662f$O(nlogn)$\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c$O(n)$\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\uff0c\u5f88\u7384\u5999\u554a\uff0c\u5750\u7b49\u5b98\u65b9\u9898\u89e3\u3002\n\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<algorithm>\nusing namespace std;\ninline char read() {\n    static const int IN_LEN = 1000000;\n    static char buf[IN_LEN], *s, *t;\n    if (s == t) {\n        t = (s = buf) + fread(buf, 1, IN_LEN, stdin);\n        if (s == t) return -1;\n    }\n    return *s++;\n}\ntemplate<class T>\ninline void read(T &x) {\n    static bool iosig;\n    static char c;\n    for (iosig = false, c = read(); !isdigit(c); c = read()) {\n        if (c == '-') iosig = true;\n        if (c == -1) return;\n    }\n    for (x = 0; isdigit(c); c = read())\n        x = (x + (x << 2) << 1) + (c ^ '0');\n    if (iosig) x = -x;\n}\nconst int mo=1000000007,N=500005,M=N*19;\nstruct node{\n    int l,r,sum,cnt;\n}t[M];\nnamespace mem{\n    int xb,a[M];\n    inline void init(){\n        for(xb=0;xb<M;++xb)a[xb]=xb;\n        --xb;\n    }\n    inline int New(){\n        return a[xb--];\n    }\n    inline void Del(int x){\n        a[++xb]=x;t[x].l=t[x].r=t[x].sum=t[x].cnt=0;\n    }\n}\nint n,i,u,v,a[N],b[N],m,Ans;\npair<int,int> c[N];\nint ins(int&i,int l,int r,int x){\n    if(!i)i=mem::New();\n    ++t[i].cnt,t[i].sum=(t[i].sum+a[x])%mo;\n    if(l==r)return 1ll*t[i].cnt*a[x]%mo;\n    int m=(l+r)>>1;\n    if(x>m)return (ins(t[i].r,m+1,r,x)+1ll*a[x]*t[t[i].l].cnt)%mo;\n        else return (ins(t[i].l,l,m,x)+t[t[i].r].sum)%mo;\n}\nint merge(int x,int y,int l,int r,int&s){\n    if(!x || !y){s=0;return x|y;}\n    int sl,sr,m=(l+r)>>1;\n    if(l<r){\n        s=(1ll*t[t[x].l].cnt*t[t[y].r].sum+1ll*t[t[y].l].cnt*t[t[x].r].sum)%mo;\n        t[x].l=merge(t[x].l,t[y].l,l,m,sl),t[x].r=merge(t[x].r,t[y].r,m+1,r,sr);\n        s=((s+sl)%mo+sr)%mo;\n    }else s=1ll*t[x].cnt*t[y].cnt%mo*a[l]%mo;\n    t[x].sum=(t[x].sum+t[y].sum)%mo,t[x].cnt+=t[y].cnt;\n    mem::Del(y);\n    return x;\n}\nstruct tree{\n    int h[N],xb,rt[N];\n    struct edge{\n        int to,next;\n    }e[N<<1];\n    inline void addedge(){\n        e[++xb]=(edge){v,h[u]},h[u]=xb;e[++xb]=(edge){u,h[v]},h[v]=xb;\n    }\n    int dfs(int x,int fa){\n        int ans=0,i,s;\n        for(i=h[x];i;i=e[i].next)\n            if(e[i].to!=fa)ans=(ans+dfs(e[i].to,x))%mo,rt[x]=merge(rt[x],rt[e[i].to],1,m,s),ans=(ans+s)%mo;\n        ans=(ans+ins(rt[x],1,m,b[x]))%mo;\n        Ans=(ans+Ans)%mo;\n        return ans;\n    }\n}T;\nint main(){\n    //freopen(\"1.txt\",\"r\",stdin);\n    //freopen(\"2.txt\",\"w\",stdout);\n    read(n);\n    mem::init();\n    for(i=1;i<n;++i){\n        read(u),read(v);\n        T.addedge();\n    }\n    for(i=1;i<=n;++i)read(a[i]),c[i]=make_pair(a[i],i);\n    sort(c+1,c+n+1);\n    for(i=1;i<=n;++i)\n        a[b[c[i].second]=m+=i==1 || c[i-1].first<c[i].first]=c[i].first;\n    T.dfs(1,0);\n    printf(\"%d\\n\",Ans);\n    return 0;\n}\n```\n\u8fd9\u662f\u6b64\u9898\u76ee\u524d\u6d1b\u8c37\u6700\u5feb\u7684\u4ee3\u7801\n",
        "postTime": 1505748726,
        "uid": 19567,
        "name": "zx2003",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3925 \u3010aaa\u88ab\u7eed\u3011"
    },
    {
        "content": "## Description\n\n\u81ea\u884c\u770b\u9898\u9762\uff0c\u8fd9\u4e2a\u4eba\u8bed\u6587\u4e0d\u597d\uff0c\u65e0\u6cd5\u63cf\u8ff0\u3002\n\n\u611f\u89c9\u770b\u4e0b\u9762\u6837\u4f8b\u89e3\u91ca\u90a3\u5f20\u56fe\u66f4\u597d\u7406\u89e3\u3002\n\n\u5176\u5b9e\u6211\u9898\u9762\u6ca1\u770b\u61c2\u3002\u3002\u3002\n\n## Solution\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e0b\u6811\u5256 + \u7ebf\u6bb5\u6811\u7684 $O(n \\log ^ 2 n)$ \u7684\u505a\u6cd5\u3002\n\n\u8dd1\u7684\u633a\u5feb\u7684\uff0c\u4e0d\u50cf\u522b\u7684\u5927\u4f6c\u8bf4\u7684\u90a3\u6837\u4f1a\u88ab\u5361\uff0c\u6700\u5927\u7684\u4e00\u4e2a\u70b9\u4e0d\u5438\u6c27\u8dd1\u4e86 $\\text{988ms}$ ~~(\u90a3\u4f60\u8fd8\u8bf4\u5f88\u5feb)~~\u3002\n\n\u9996\u5148\u80af\u5b9a\u4f1a\u6709\u4e00\u4e2a\u8d2a\u5fc3\u7684\u601d\u8def\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u68f5\u5b50\u6811\uff0c\u80af\u5b9a\u662f\u8981\u5148\u52a0\u6700\u5927\u7684\u5b50\u8282\u70b9\u7684\u6743\u503c\uff0c\u56e0\u4e3a\u6bcf\u6b21\u52a0\u4e0a\u4e00\u4e2a\uff0c\u8282\u70b9\u4e2a\u6570\u5c31\u5c11 $1$\uff0c\u5148\u4e58\u4e0a\u5927\u7684\u6570\u80af\u5b9a\u6bd4\u5148\u4e58\u4e0a\u5c0f\u7684\u6570\u8981\u4f18\u3002\n\n\u6240\u4ee5\uff0c\u80af\u5b9a\u4f1a\u6709\u4e00\u4e2a\u66b4\u529b\u7684\u601d\u8def\uff0c\u679a\u4e3e $1 \\sim n$\uff0c\u4e4b\u540e\u679a\u4e3e\u5b50\u6811\u5185\u7684\u8282\u70b9\uff0c\u56e0\u4e3a\u6811\u5256\u540e\u7684 dfs \u5e8f\u662f\u8fde\u7eed\u7684\uff0c\u7528 $siz$ \u8868\u793a\u4e00\u4e2a\u5b50\u6811\u5305\u542b\u7684\u8282\u70b9\u4e2a\u6570\uff0c\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u6982\u662f $O( \\sum siz(n) \\log siz(n))$\uff0c\u6700\u574f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5e94\u8be5\u662f $O(n ^ 2 \\log n)$\uff0c\u6ca6\u4e3a\u548c\u66b4\u529b\u540c\u5206\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u8f6c\u6362\u4e00\u4e0b\u601d\u60f3\uff0c\u4ece\u5148\u7edf\u8ba1\u5b50\u6811\u5185\u7684\u6743\u503c\uff0c\u518d\u76f8\u52a0\uff0c\u53d8\u4e3a\u7edf\u8ba1\u4e00\u4e2a\u70b9\u88ab\u4f7f\u7528\u7684\u6b21\u6570\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/7980.png)\n\n\u6bd4\u5982\u8fd9\u5f20\u56fe\uff0c\u6211\u4eec\u4e00\u5f00\u59cb\u7684\u601d\u60f3\u662f\u679a\u4e3e\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u5185\u7684\u70b9\uff0c\u4e4b\u540e\u518d\u76f8\u52a0\u3002\n\n\u73b0\u5728\uff0c\u6211\u4eec\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u6bcf\u4e2a\u70b9\u7684\u6743\u503c\u3002\n\n\u9996\u5148\u662f $3$ \u53f7\u8282\u70b9\uff0c\u53d1\u73b0\u8fd9\u4e2a\u70b9\u5728 $\\text{1 5 3}$ \u7684\u5b50\u6811\u4e2d\uff0c\u80fd\u53d6\u5f97\u7684\u503c\u662f $(5 + 3 + 1) \\times 10 = 90$\u3002\n\n\u4e4b\u540e\u662f $2$ \u53f7\u8282\u70b9\uff0c\u5728 $\\text{1 2}$ \u5b50\u6811\u4e2d\uff0c$(4 + 1) \\times 9 = 45$\u3002\n\n$5$ \u53f7\u8282\u70b9\uff0c\u5728 $\\text{1 5}$ \u5b50\u6811\u4e2d\uff0c$(3 + 2) \\times 7 = 35$\u3002\n\n$4$ \u53f7\u8282\u70b9\uff0c\u5728 $\\text{1 5 4}$ \u5b50\u6811\u4e2d\uff0c$(2 + 1 + 1) \\times 4 = 16$\u3002\n\n$1$ \u53f7\u8282\u70b9\uff0c\u5728 $\\text{1}$ \u5b50\u6811\u4e2d\uff0c$1 \\times 3 = 3$\u3002\n\n\u603b\u548c\u4e3a $90 + 45 + 35 + 16 + 3 = 189$\u3002\n\n\u56e0\u4e3a\u80fd\u5305\u542b\u4e00\u4e2a\u70b9\u7684\u5b50\u6811\u80af\u5b9a\u662f\u4ece\u8fd9\u4e2a\u70b9\u672c\u8eab\u5230 $1$ \u53f7\u8282\u70b9\uff08\u6839\u8282\u70b9\uff09\u7684\u5b50\u6811\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6bcf\u6b21\u67e5\u8be2\u4e00\u6761\u4ece\u5f53\u524d\u8282\u70b9\u5230 $1$ \u53f7\u8282\u70b9\u7684\u94fe\u4e0a\u7684\u6570\u7684\u603b\u548c\u4e58\u4e0a\u5f53\u524d\u8282\u70b9\u7684\u6743\u503c\u3002\n\n\u90a3\u6211\u4eec\u5982\u4f55\u628a\u8fd9\u4e2a\u70b9\u5220\u53bb\u5462\uff0c\u5f88\u7b80\u5355\uff0c\u4ece\u628a\u5f53\u524d\u8282\u70b9\u5230 $1$ \u8282\u70b9\u7684\u94fe\u4e0a\u7684\u6570\u90fd\u51cf $1$ \u5373\u53ef\u3002\n\n\u603b\u4f53\u6765\u8bf4\u5c31\u662f \uff1a\n\n+ \u6811\u5256\u5256\u94fe\u3002\n+ \u5efa\u6811\uff0c\u8282\u70b9\u521d\u503c\u4e3a\u5b50\u6811\u5185\u7684\u8282\u70b9\u4e2a\u6570\u3002\n+ \u7528\u4e00\u4e2a\u5806\uff0c\u5b58\u50a8\u8282\u70b9\u4fe1\u606f\u548c\u6743\u503c\uff0c\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\uff0c\u67e5\u8be2\u5f53\u524d\u8282\u70b9\u5230 $1$ \u8282\u70b9\u7684\u94fe\u4e0a\u7684\u603b\u548c\u4e58\u4e0a\u5f53\u524d\u70b9\u7684\u6743\u503c\uff0c\u4e4b\u540e\u628a\u8fd9\u6761\u94fe\u4e0a\u7684\u70b9\u7684\u503c\u90fd\u51cf $1$\u3002\n+ \u8f93\u51fa\u7b54\u6848\u3002\n\n\u7531\u4e8e\u8fd9\u4e2a\u4eba\u6811\u72b6\u6570\u7ec4\u5b66\u7684\u4e0d\u662f\u5f88\u597d\uff0c\u6240\u4ee5\u7528\u7684\u7ebf\u6bb5\u6811\u5b9e\u73b0\u3002\n\n\u6e29\u99a8\u63d0\u793a \uff1a \u67e5\u8be2\u94fe\u4e0a\u7684\u603b\u548c\u65f6\u8981\u5148\u53d6\u6a21\u518d\u4e0e\u6743\u503c\u76f8\u4e58\uff0c\u5426\u5219\u4f1a\u7206 $\\text{long long}$\u3002\n\n## Code\n\n```\n#include <cstdio>\n#include <cmath>\n#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n#include <queue>\n#define int long long\nusing namespace std;\nconst int mod = 1e9 + 7;\nconst int Maxk = 5e5 + 10; \nint n,cnt;\nint dfn[Maxk],tot[Maxk],son[Maxk];\nint fa[Maxk],top[Maxk],deep[Maxk];\nvector <int> E[Maxk << 1];\nstruct aaa {\n  int val,id;\n  inline bool operator < (const aaa &z) const {\n    return val < z.val;\n  }\n};\nint Ans = 0;\npriority_queue <aaa> qp;\nint a[Maxk],b[Maxk];\nstruct SegTree {\n  int l,r,val,tag,Len;\n}t[Maxk << 2];\ninline int read()\n{\n\tint s = 0, f = 0;char ch = getchar();\n\twhile (!isdigit(ch)) f |= ch == '-', ch = getchar();\n\twhile (isdigit(ch)) s = s * 10 + (ch ^ 48), ch = getchar();\n\treturn f ? -s : s;\n}\nvoid dfs1(int x,int f)\n{\n  deep[x] = deep[f] + 1;\n  fa[x] = f;\n  tot[x] = 1;\n  for(int i = 0;i < E[x].size();i ++) {\n    int y = E[x][i];\n    if(y == f) continue;\n    dfs1(y,x);\n    tot[x] += tot[y];\n    if(tot[y] > tot[son[x]]) son[x] = y;\n  }\n}\nvoid dfs2(int x,int tf)\n{\n  top[x] = tf;\n  dfn[x] = ++ cnt;\n  b[cnt] = tot[x];\n  if(!son[x]) return;\n  dfs2(son[x],tf);\n  for(int i = 0;i < E[x].size();i ++) {\n    int y = E[x][i];\n    if(!dfn[y]) dfs2(y,y); \n  } \n}\nvoid Build(int i,int l,int r)\n{\n  t[i].l = l,t[i].r = r;\n  t[i].Len = r - l + 1;\n  if(l == r) {\n    t[i].val = b[l];\n    return;\n  }\n  int mid = (l + r) >> 1;\n  Build(i << 1,l,mid);\n  Build(i << 1 | 1,mid + 1,r);\n  t[i].val = t[i << 1].val + t[i << 1 | 1].val;\n}\nvoid push_down(int i)\n{\n  if(t[i].tag != 0) {\n    t[i << 1].val += t[i].tag * t[i << 1].Len;\n    t[i << 1 | 1].val += t[i].tag * t[i << 1 | 1].Len;\n    t[i << 1].tag += t[i].tag;\n    t[i << 1 | 1].tag += t[i].tag;\n    t[i].tag = 0;\n  }\n}\nvoid Change(int i,int l,int r,int k)\n{\n  if(t[i].l >= l && t[i].r <= r) {\n    t[i].val += (t[i].r - t[i].l + 1) * k;\n    t[i].tag += k;\n    return;\n  }\n  push_down(i);\n  int mid = (t[i].l + t[i].r) >> 1;\n  if(l <= mid) Change(i << 1,l,r,k);\n  if(r > mid) Change(i << 1 | 1,l,r,k);\n  t[i].val = t[i << 1].val + t[i << 1 | 1].val;\n}\nint Ask(int i,int l,int r)\n{\n  if(t[i].l >= l && t[i].r <= r) return t[i].val;\n  int Sum = 0;\n  push_down(i);\n  int mid = (t[i].l + t[i].r) >> 1;\n  if(l <= mid) Sum += Ask(i << 1,l,r);\n  if(r > mid) Sum += Ask(i << 1 | 1,l,r);\n  return Sum;\n} \nvoid Work(int x,int y,int dis) \n{\n  int xx = x,yy = y;\n  while(top[x] ^ top[y]) {\n    if(deep[top[x]] < deep[top[y]]) swap(x,y);\n    Ans = (Ans + (Ask(1,dfn[top[x]],dfn[x]) % mod) * dis) % mod;\n    x = fa[top[x]];\n  }\n  if(deep[x] > deep[y]) swap(x,y);\n  Ans = (Ans + (Ask(1,dfn[x],dfn[y]) % mod) * dis) % mod;//\u6c42\u503c \n  x = xx,y = yy;\n  while(top[x] ^ top[y]) {\n    if(deep[top[x]] < deep[top[y]]) swap(x,y);\n    Change(1,dfn[top[x]],dfn[x],-1);\n    x = fa[top[x]];\n  }\n  if(deep[x] > deep[y]) swap(x,y);//\u51cf 1 \n  Change(1,dfn[x],dfn[y],-1);\n} \nsigned main()\n{\n  n = read();\n  for(int i = 1;i <= n - 1;i ++) {\n    int x = read(),y = read();\n    E[x].push_back(y);\n    E[y].push_back(x);\n  }\n  aaa res;\n  for(int i = 1;i <= n;i ++) a[i] = read(),res.val = a[i],res.id = i,qp.push(res);\n  dfs1(1,0);\n  dfs2(1,1);\n  Build(1,1,n);\n  while(!qp.empty()) {\n    aaa T = qp.top();\n    qp.pop();\n    Work(1,T.id,T.val);  \n  }\n  cout << (Ans % mod)<< endl;\n  return 0;\n}\n```\n\n",
        "postTime": 1626947615,
        "uid": 381904,
        "name": "\u659c\u63fd\u6b8b\u7bab",
        "ccfLevel": 6,
        "title": "\u3010P3925 aaa\u88ab\u7eed\u3011\u9898\u89e3"
    },
    {
        "content": "\u5f88\u660e\u663e\u8fd9\u9053\u9898\u662f\u4e00\u4e2a\u6811\u4e0a\u7edf\u8ba1\u95ee\u9898\u3002  \n\u7ffb\u8bd1\u9898\u610f\uff1a\u4ee5\u6bcf\u4e2a\u70b9\u4e3a\u6839\u5904\u7406 $n$ \u68f5\u6811\uff0c  \n\u8bb0\u4e00\u68f5\u6811\u7684\u8d21\u732e\u6570\u4e3a\u6811\u5185\u5143\u7d20\u6392\u5e8f\u597d\u540e\u5c06\u5b83\u4eec\u7684\u503c\u4e58\u4e0a\u5bf9\u5e94\u7684\u6392\u540d\u4e4b\u548c\uff0c  \n\u73b0\u5728\u6c42\u6240\u6709\u6811\u7684\u8d21\u732e\u4e4b\u548c\u3002  \n\u4e00\u8bf4\u5230\u6811\u4e0a\u7edf\u8ba1\u95ee\u9898\uff0c\u6211\u4eec\u5c31\u60f3\u5230\u8bb8\u591a\u4e1c\u897f\uff1a\u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u70b9\u5206\u6cbb\uff0c\u6811\u5256\u2026\u2026  \n\u5728\u8fd9\u91cc\u770b\u5230\u9898\u76ee\u7684\u6240\u6c42\u4e0e\u5b50\u6811\u6709\u5173\uff0c\u6211\u4eec\u679c\u65ad $DSU$ \u3002  \n(\u8fd9\u91cc\u65f6\u95f4\u590d\u6742\u5ea6\u6709\u70b9\u5c0f\u7d27\u5f20\u4e0d\u8fc7\u5b9e\u6d4b\u80fd\u8fc7)  \n\u5f88\u660e\u663e\u6211\u4eec\u60f3\u8981\u7ef4\u62a4\u4e00\u4e2a\u6bcf\u4e00\u961f $aaa$ \u6211\u4eec\u80af\u5b9a\u8fd8\u9700\u8981\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\uff0c  \n\u5728\u8fd9\u91cc\u6211\u60f3\u5230\u4e86\u5e73\u8861\u6811\uff0c  \n\u5e76\u4e14\u5728\u51a5\u601d\u82e6\u60f3 $30min$ \u540e\u4e5f\u8fd8\u662f\u53ea\u60f3\u5230\u4e86\u600e\u4e48\u6253\u5e73\u8861\u6811\u2026\u2026  \n\u9996\u5148\u6211\u4eec\u8003\u8651\u5c06\u4e00\u9897\u5b50\u6811\u5185\u7684\u6bcf\u4e2a $aaa$ \u5f80\u5e73\u8861\u6811\u91cc\u9762\u585e\uff0c  \n\u628a\u5b83\u65cb\u8f6c\u5230\u6839\u8282\u70b9\u540e\u6839\u636e $BST$ \u6027\u8d28\u6211\u4eec\u77e5\u9053\u5de6\u5b50\u6811\u7684\u503c\u6b64\u65f6\u5c0f\u4e8e\u6839\u8282\u70b9\u7684\u503c\uff0c\u53f3\u5b50\u6811\u7684\u503c\u5927\u4e8e\u6839\u8282\u70b9\u7684\u503c\uff0c  \n\u6240\u4ee5\u8bf4\u6211\u4eec\u5f53\u524d\u8fd9\u4e2a $aaa$ \u7684\u8d21\u732e\u5c31\u662f\u6839\u8282\u70b9\u5de6\u5b50\u6811\u5927\u5c0f\u4e0e $root$ \u8fd9\u4e2a\u503c\u51fa\u73b0\u591a\u5c11\u6b21\u4e4b\u548c\u4e58\u4e0a\u8fd9\u4e2a\u503c\uff1a  \n```cpp\n(t[t[root].ch[0]].size + t[root].cnt) * t[root].val\n```\n\u7531\u4e8e\u53f3\u5b50\u6811\u7684\u6240\u6709\u6392\u540d\u90fd\u9700\u8981\u52a0 $1$ \u3002  \n\u6240\u4ee5\u8bf4\u8fd8\u8981\u52a0\u4e0a\u53f3\u5b50\u6811\u7684\u6240\u6709\u503c\u4e4b\u548c\u3002  \n```cpp\nt[t[root].ch[1]].sum\n```\n\u4e8e\u662f\u8fd9\u9053\u9898\u7684\u601d\u8def\u5c31\u5b8c\u4e86\u3002  \n\u96be\u70b9\u5728\u4e8e\u5b9e\u73b0\uff0c\u8fd9\u91cc\u5c31\u8bf4\u4e00\u4e0b\u6211\u6240\u78b0\u5230\u7684\u95ee\u9898\u5427\u3002  \n```\n1.\u6bcf\u6b21\u7edf\u8ba1\u65f6\u76f4\u63a5 vector \u5b58\u4e00\u904d\u7136\u540e\u7edf\u8ba1\uff0c\u8bb0\u5f97\u5728\u7edf\u8ba1\u5b8c\u91cd\u513f\u5b50\u540e\u8981\u6e05\u7a7a vector .   \n2.\u6ce8\u610f\u7edf\u8ba1 sum \u65f6\u8981\u52a0\u4e0a\u5f53\u524d\u8282\u70b9\u503c\u4e58\u4e0a\u5f53\u524d\u8282\u70b9\u7684\u4e2a\u6570.  \n3.\u6e05\u7a7a\u5e73\u8861\u6811\u76f4\u63a5 tot = root = 0 \u5373\u53ef\uff0c\u4e0d\u7136\u4e00\u4e2a\u4e2a\u5220\u53ef\u80fdT\u98de\u8b66\u544a.  \n```\n$\u5e73\u8861\u6811 + DSU$ \u7684\u9898\u786e\u5b9e\u5f88\u70e6\uff0c\u5f88\u96be\u8c03\uff0c\u6240\u4ee5\u62ff\u51fa\u8010\u5fc3\u5427\u2026\u2026  \n\u5e94\u8be5\u662f\u7b2c\u4e00\u7bc7 $DSU + \u5e73\u8861\u6811$ \u7684\u9898\u89e3\u3002  \n```cpp\n#include<iostream>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nconst int Len = 5e5 + 5,Inf = 1e9,mod = 1e9 + 7;\nvector<long long> v;\nint head[Len],cnt;\nint m,tot,root;\nstruct Node\n{\n\tint next,to;\n}edge[Len << 1];\nvoid add(int from,int to)\n{\n\tedge[++ cnt].to = to;\n\tedge[cnt].next = head[from];\n\thead[from] = cnt;\n}\nstruct node\n{\n\tint ch[2],size,cnt,ff;\n\tlong long sum,val;\n}t[Len];\nvoid update(int x){\n\tt[x].size = t[t[x].ch[0]].size + t[t[x].ch[1]].size + t[x].cnt;\n\tt[x].sum = (t[x].val * t[x].cnt + t[t[x].ch[0]].sum + t[t[x].ch[1]].sum) % mod;\n}\nvoid rotate(int x)\n{\n\tint y = t[x].ff , z = t[y].ff , k = t[y].ch[1] == x;\n\tt[z].ch[t[z].ch[1] == y] = x;\n\tt[x].ff = z;\n\t//\n\tt[y].ch[k] = t[x].ch[k ^ 1];\n\tt[t[x].ch[k ^ 1]].ff = y;\n\t//\n\tt[x].ch[k ^ 1] = y;\n\tt[y].ff = x;\n\tupdate(y) , update(x);  \n}\nvoid Splay(int x,int goal)\n{\n\twhile(t[x].ff != goal)\n\t{\n\t\tint y = t[x].ff , z = t[y].ff;\n\t\tif(z != goal) (t[y].ch[1] == x) ^ (t[z].ch[1] == y) ? rotate(x) : rotate(y);\n\t\trotate(x);\n\t}\n\tif(goal == 0) root = x;\n}\nvoid insert(int x)\n{\n\tint u = root , ff = 0;\n\twhile(u && t[u].val != x) ff = u , u = t[u].ch[x > t[u].val];\n\tif(u) t[u].cnt ++;\n\telse\n\t{\n\t\tu = ++ tot;\n\t\tif(ff) t[ff].ch[x > t[ff].val] = u;\n\t\tt[u].ch[1] = t[u].ch[0] = 0;\n\t\tt[u].size = t[u].cnt = 1;\n\t\tt[u].sum = t[u].val = x , t[u].ff = ff;\n\t}\n\tSplay(u , 0);\n}\nlong long ans[Len],Ans,a[Len];\nint n,son[Len],siz[Len];\nint Son,cnts;\nvoid dfs1(int x,int f)\n{\n\tsiz[x] = 1;\n\tint maxson = -1;\n\tfor(int e = head[x] ; e ; e = edge[e].next)\n\t{\n\t\tint to = edge[e].to;\n\t\tif(to == f) continue;\n\t\tdfs1(to , x);\n\t\tsiz[x] += siz[to];\n\t\tif(siz[to] > maxson) maxson = siz[to] , son[x] = to;\n\t}\n}\nvoid Add(int x,int f)\n{\n\tv.push_back(a[x]);\n\tfor(int e = head[x] ; e ; e = edge[e].next)\n\t{\n\t\tint to = edge[e].to;\n\t\tif(to == f || to == Son) continue;\n\t\tAdd(to , x);\n\t}\n}\nvoid dfs2(int x,int f,int opt)\n{\n\tfor(int e = head[x] ; e ; e = edge[e].next)\n\t{\n\t\tint to = edge[e].to;\n\t\tif(to == f || to == son[x]) continue;\n\t\tdfs2(to , x , 0);\n\t}\n\tif(son[x]) dfs2(son[x] , x , 1) , Son = son[x];\n\tv.clear();\n\tans[x] = (ans[x] + ans[son[x]]) % mod;\n\tAdd(x , f);\n//\tprintf(\"%d %lld\\n\",x,ans[x]);\n\tfor(int i = 0 ; i < v.size() ; i ++)\n\t{\n\t\tinsert(v[i]);\n//\t\tprintf(\"%lld %d %d %lld %lld\\n\",v[i],t[root].size,t[t[root].ch[0]].size + t[root].cnt,t[root].val,t[t[root].ch[1]].sum);\n\t\tans[x] += (((long long)(t[t[root].ch[0]].size + t[root].cnt) * t[root].val % mod) + t[t[root].ch[1]].sum) % mod;\n\t\tans[x] %= mod;\n\t}\n//\tprintf(\"%d %lld\\n\",x,ans[x]);\n\tif(!opt) \n\t{\n\t\tv.clear() , root = tot = 0;\n\t\tt[0].ch[1] = t[0].ch[0] = 0;\n\t\tt[0].size = t[0].cnt = 0;\n\t\tt[0].sum = t[0].val = 0 , t[0].ff = 0;\n\t}\n}\nsigned main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i = 1 ; i < n ; i ++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tadd(x , y) , add(y , x);\n\t}\n\tfor(int i = 1 ; i <= n ; i ++) scanf(\"%lld\",&a[i]);\n\tdfs1(1 , 0);\n\tdfs2(1 , 0 , 1);\n\tfor(int i = 1 ; i <= n ; i ++) Ans = (Ans + ans[i]) % mod;\n\tprintf(\"%lld\\n\",Ans);\n\treturn 0;\n}\n```",
        "postTime": 1600100081,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3925 \u3010aaa\u88ab\u7eed\u3011"
    },
    {
        "content": "## \u9898\u610f\n\u7ed9\u4f60\u4e00\u68f5\u6811\uff0c\u6c42\u5b83\u7684\u7eed\u6389\u5168\u90e8\u7684aaa\u4e4b\u540e\u6700\u591a\u80fd\u83b7\u5f97\u7684\u7801\u529b\u503c\u3002\u5148\u819c\u697c\u4e0b $dalao$ \u4e3a\u656c\uff0c\u7136\u800c\u7531\u4e8e\u672c\u849f\u84bb\u592a\u83dc\u4e86\uff0c\u53ea\u4f1a\u6570\u636e\u7ed3\u6784\u66b4\u529b\u7ef4\u62a4\u3002\n## \u5206\u6790\n\u6211\u4eec\u53d1\u73b0\u6bcf\u4e2a\u7684\u8282\u70b9\u7684\u503c\u4f1a\u5728\u5b83\u548c\u6839\u7684\u8def\u5f84\u4e4b\u95f4\u88ab\u7eed\u6389\u3002\u800c\u4e00\u4e2a\u503c\u8f83\u5927\u7684\uff0c\u80af\u5b9a\u8981\u5c3d\u91cf\u591a\u88ab\u8ba1\u7b97\u624d\u6700\u4f18\u3002\n### $1$\n\u76f4\u63a5\u7ed9\u6bcf\u4e2a\u8282\u70b9\u5f00\u4e2a\u5806\uff0c\u7136\u540e\u5408\u5e76\u5806\u3002\u66b4\u529b\u7b97\u8d21\u732e\u3002\u590d\u6742\u5ea6\u4e3a $O(n^3)$ \u3002\n$$\nans = \\sum_{i\\in U}(\\sum_{j\\in son} val[j]\\times rank(j))\n$$\n\u5176\u4e2d $rank$ \u662f $val[j]$ \u5728\u5404\u4e2a\u7236\u4eb2\u7684\u6392\u540d\u3002\n### $2$\n\u8003\u8651\u54ea\u4e9b\u8282\u70b9\u52a0\u5165\u4e86\u5f53\u524d\u8282\u70b9\u7684\u8d21\u732e\u3002\n$$\nans = \\sum_{i\\in U} val[i] \\times sum[i]\n$$\n\u8003\u8651\u5982\u4f55\u5feb\u901f\u6c42\u51fa $sum[i]$ \u3002\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u6709\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u90a3\u4e48\u5728\u5b83\u4e0e\u6839\u7684\u8def\u5f84\u4e0a\u5df2\u7ecf\u6709\u8fc7\u7684\u70b9\u7684\u4e2a\u6570 $+$ \u8def\u5f84\u957f\u5ea6\u3002\u5c31\u662f\u5b83\u7684 $sum[i]$\n$$\nsum[i] = \\sum_{i\\in (1\\ to\\ u)} (size[i]+1)\n$$\n\u90a3\u4e48\u590d\u6742\u5ea6\u4e3a $O(n^2)$ \u3002\n### $3$\n\u74f6\u9888\u5728\u4e8e\u5feb\u901f\u6c42\u51fa $sum[i]$ \u548c\u66f4\u65b0 $size[i]$ \u3002\n\n- \u67e5\u8be2\u94fe\n- \u66f4\u6539\u94fe\u4e0a\u7684\u503c\n\n\u8fd9\u53ef\u4ee5\u7528 \u6811\u94fe\u5256\u5206 \u548c $LCT$ \u7ef4\u62a4\u3002\u4f46\u662f\u524d\u8005\u7528\u7ebf\u6bb5\u6811\u7684\u8bdd\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log^2 n)$ ,\u800c\u4e14\u5e38\u6570\u633a\u5927\u7684\u3002\u8fd9\u91cc\u4f7f\u7528 $LCT$ \u7684 $O(n\\log n)$ \u505a\u6cd5\u3002\u8fd9\u9053\u9898\u5c0f\u7ec6\u8282\u8fd8\u633a\u591a\u7684\u3002\n\n- \u5982\u679c\u5168\u5f00 $long\\ long$ \u662f\u8981 $TLE$ \u7684\u3002\n- \u5728\u6c42 $sum[i]$ \u6570\u7ec4\u65f6\u53ef\u80fd\u8981\u70b8\uff0c\u8bb0\u5f97\u53d6\u6a21\u3002\n\n\u90a3\u4e48\u73b0\u5728\u6bcf\u6b21\u53ea\u9700\u8981\uff0c\u67e5\u8be2\u94fe\u4e0a\u7684\u503c\uff0c\u548c\u94fe\u4e0a\u503c $+1$ \u5c31\u53ef\u4ee5\u4e86\u3002\n\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $O(n)$ \u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$ \u3002\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint read(){\n    int sum=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){sum=sum*10+ch-'0';ch=getchar();}\n    return sum*f;\n}\nconst int N = 501000;\nconst int mod = 1000000007;\nint n,Q;\nint c[N][2],f[N],val[N],si[N],add[N],ans,sum[N];\nbool r[N];\nbool nroot(int x)\n{\n\treturn c[f[x]][1] == x || c[f[x]][0] == x;\t\n} \nvoid pushr(int x)\n{\n\tswap(c[x][1],c[x][0]);\n\tr[x]^=1;\n}\nvoid pushup(int x)\n{\n\tsum[x] = val[x]+sum[c[x][1]]+sum[c[x][0]];\n\tsum[x] = (sum[x]*1LL+mod)%mod;\n\tsi[x] = si[c[x][1]] + si[c[x][0]] + 1;\n}\nvoid pusha(int x,int d)\n{\n\tval[x] += d;add[x] += d;\n\tsum[x] += d*si[x];\n}\nvoid pushdown(int x)\n{\n\tif(add[x])\n\t{\n\t\tif(c[x][1]) pusha(c[x][1],add[x]);\n\t\tif(c[x][0]) pusha(c[x][0],add[x]);\n\t\tadd[x] = 0;\n\t}\n\tif(r[x])\n\t{\n\t\tif(c[x][1]) pushr(c[x][1]);\n\t\tif(c[x][0]) pushr(c[x][0]);\n\t\tr[x] = 0;\n\t}\n\t\n}\nvoid push(int x)\n{\n\tif(nroot(x)) push(f[x]);\n\tpushdown(x);\n}\n\nvoid rotate(int x)\n{\n\tint y = f[x],z = f[y],k = c[y][1] == x,w = c[x][!k];\n\tif(nroot(y)){c[z][c[z][1] == y] = x;}\n\tc[y][k] = w;c[x][!k] = y;\n\tf[x] = z;f[y] = x;\n\tif(w) f[w] = y;\n\tpushup(y);\n}\n\nvoid splay(int x)\n{\n\tpush(x);\n\twhile(nroot(x))\n\t{\n\t\tint y = f[x],z = f[y];\n\t\tif(nroot(y))\n\t\t{\n\t\t\trotate((c[y][1] == x)^(c[z][1] == y)?x:y);\n\t\t}\n\t\trotate(x);\n\t\tpushup(x);\n\t}\n}\nvoid access(int x)\n{\n\tfor(int y = 0;x;x=f[y=x])\n\t{splay(x);c[x][1] = y;pushup(x);}\n}\nvoid makeroot(int x)\n{\n\taccess(x);splay(x);pushr(x);\n}\nvoid split(int x,int y)\n{\n\tmakeroot(x);access(y);splay(y);\n}\nvoid link(int x,int y)\n{\n\tmakeroot(x);f[x] = y;\n}\nstruct node{\n\tint id,val;\n}A[N];\nbool cmp(node x,node y)\n{\n\treturn x.val < y.val;\n}\nsigned main()\n{\n\tn = read();\n\tfor(int i = 1;i < n;i++)\n\t{\n\t\tint x = read(),y = read();\n\t\tlink(x,y);\n\t}\n\tfor(int i = 1;i <= n;i++)\n\tA[i].val = read(),A[i].id = i;\n\tsort(A+1,A+1+n,cmp);\n\tfor(int i = 1;i <= n;i++)\n\t{\n\t\tint u = A[i].id;\n\t\tsplit(1,u);pusha(u,1);\n\t\tsplit(1,u);\n\t\tlong long size = sum[u];\n\t\tans = (ans+(1LL*size*A[i].val)%mod+mod)%mod;\n\t}\n\tcout<<ans<<endl;\n}\n```\n\n[\u5730\u5740QWQ](https://www.luogu.com.cn/blog/xzc/solution-p3925)\n",
        "postTime": 1592699406,
        "uid": 227824,
        "name": "JK_LOVER",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3925 \u3010aaa\u88ab\u7eed\u3011"
    }
]