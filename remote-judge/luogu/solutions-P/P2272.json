[
    {
        "content": "\u9898\u89e3 \u3010ZJOI2007 \u6700\u5927\u534a\u8fde\u901a\u5b50\u56fe\u3011\r\n\r\n\u601d\u8def\uff1a\r\n\r\n\u56e0\u4e3a\u5b58\u5728\u73af\uff0c\u6240\u4ee5\u5148\u7f29\u70b9\uff0c\u7f29\u5b8c\u70b9\u4ee5\u540e\uff0c\u6b64\u65f6\u56fe\u5c31\u53d8\u6210DAG\uff0c\u7136\u540e\u8fdb\u884c\u4e00\u904ddfs\u626b\u63cf\uff0cdfs\u65f6\u6ce8\u610f\u7528\u8bb0\u5fc6\u5316\uff0c\u7136\u540e\u8fb9\u626b\u8fb9\u8bb0\u5f55\u5f97\u5230\u6c42\u6700\u5927\u503c\u6570\u7ec4\u548c\u6c42\u4e2a\u6570\u6570\u7ec4\uff0c\u6700\u540e\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\r\n\r\n\u6ce8\u610f\u70b9\uff1a\r\n\r\n1. \u5728\u6c42\u4e2a\u6570\u7684\u65f6\u5019\u8981\u65f6\u523b\u53d6\u6a21\uff0c\u53d6\u6a21\u4e0d\u80fd\u505c\uff01\r\n2. \u56e0\u4e3a\u8981\u6c42\u79cd\u7c7b\u4e2a\u6570\uff0c\u6240\u4ee5\u8981\u4fdd\u8bc1\u4e0d\u91cd\u8fb9\uff08\u6700\u5927\u503c\u4e0e\u91cd\u8fb9\u65e0\u5173\uff0c\u4f46\u79cd\u7c7b\u4e0e\u91cd\u8fb9\u6709\u5173\uff09\r\n\r\n\u8865\u5145\uff1a\r\n\r\n\u5bf9\u4e8e\u6b64\u4ee3\u7801\u7684\u7ec4\u6210\uff0c\u4e3b\u8981\u6709\u4e09\u4e2a\u90e8\u5206\uff1a1.\u7f29\u70b9\uff1b2.DAG\u8bb0\u5fc6\u5316\uff1b3.\u79bb\u6563\u5316\u53bb\u91cd\uff1b4.\u94fe\u5f0f\u524d\u5411\u661f\u3002\r\n\r\n\r\n\r\n```cpp\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst int N=1e5+5,M=1e6+5;\r\n\r\nint n,m,MOD,cnt,ans,MAX,k,now1,now2;\r\nint head[N],u[M],v[M];\r\nint col,now,top,dfn[N],low[N],color[N],sta[N],si[N];\r\nint rd[N],cd[N],dep[N],sum[N];\r\nbool f[N];\r\nstruct edge{int next,from,to;}e[M];\r\nstruct node{int u,v;}C[M],b[M];\r\n\r\ninline bool cmp(node a,node b){return (a.u<b.u || a.u==b.u && a.v<b.v|| a.u==b.u && a.v==b.v);}\r\ninline void add(int u,int v){cnt++;e[cnt].next=head[u];e[cnt].to=v;head[u]=cnt;}\r\n\r\ninline void tarjan(int u)\r\n{\r\n    dfn[u]=low[u]=++now;\r\n    sta[++top]=u;\t\r\n    for (register int i=head[u]; i; i=e[i].next)\r\n    {\r\n        if (!dfn[e[i].to])\r\n        {\r\n            tarjan(e[i].to);\r\n            low[u]=min(low[u],low[e[i].to]);\r\n        }\r\n        else if (!color[e[i].to])\r\n        low[u]=min(low[u],dfn[e[i].to]);\r\n    }\r\n    if (low[u]==dfn[u])\r\n    {\r\n        color[u]=++col;\r\n        si[col]++;\r\n        while (sta[top]!=u) color[sta[top]]=col,si[col]++,top--;\r\n        top--;\r\n    }\r\n}\r\n\r\ninline void dfs(int u,int fa)\r\n{\r\n\tf[u]=true;\r\n\tif (!cd[u]) {dep[u]=si[u]; sum[u]=1; return;}\r\n\tfor (register int i=head[u]; i; i=e[i].next)\r\n\tif (e[i].to!=fa)\r\n\t{\r\n\t\tif (!f[e[i].to]) dfs(e[i].to,u);\r\n\t\tif (dep[e[i].to]+si[u]>dep[u]) dep[u]=dep[e[i].to]+si[u],sum[u]=sum[e[i].to]%MOD;\r\n\t\telse if (dep[e[i].to]+si[u]==dep[u]) sum[u]=(sum[u]+sum[e[i].to])%MOD;\r\n\t}\r\n}\r\n\r\nint main(){\r\nmemset(head,0,sizeof(head));\r\nmemset(dfn,0,sizeof(dfn));\r\n\tscanf(\"%d%d%d\",&n,&m,&MOD);\r\n\tfor (register int i=1; i<=m; ++i) scanf(\"%d%d\",&u[i],&v[i]),add(u[i],v[i]);\r\n\t\r\n//\u7f29\u70b9    \r\n    for (register int i=1; i<=n; ++i) if (!dfn[i]) tarjan(i);\r\n\r\n\r\n//\u79bb\u6563\u5316\u53bb\u91cd\r\nfor (register int i=1; i<=m; ++i) \r\nif (color[u[i]]!=color[v[i]]) k++,C[k].u=color[u[i]],C[k].v=color[v[i]];\r\nsort(C+1,C+k+1,cmp);\r\ncnt=0; \r\ncnt++; b[cnt].u=C[1].u,b[cnt].v=C[1].v; now1=b[cnt].u,now2=b[cnt].v;\r\nfor (register int i=2; i<=k; ++i) if (C[i].u!=now1|| C[i].v!=now2) \r\ncnt++,b[cnt].u=C[i].u,b[cnt].v=C[i].v,now1=b[cnt].u,now2=b[cnt].v;\r\n\r\n\r\n//\u91cd\u65b0\u5efa\u56fe\r\n\tmemset(head,0,sizeof(head));\r\n\tmemset(e,0,sizeof(e));\r\n\tfor (register int i=1; i<=cnt; ++i) \r\n\t{\r\n\tcd[b[i].u]++,rd[b[i].v]++;\r\n\te[i].next=head[b[i].u];\r\n\te[i].from=b[i].u;\r\n\te[i].to=b[i].v;\r\n\thead[b[i].u]=i;\r\n\t}\r\n\r\n\r\n//\u8bb0\u5fc6\u5316\u641c\u7d22\r\n\tfor (register int i=1; i<=col; ++i) if (!rd[i] && !f[i]) dfs(i,0); \r\n\r\n\r\n\r\n//\u7edf\u8ba1\u7b54\u6848\r\nMAX=0,ans=0;\t\r\n\tfor (register int i=1; i<=col; ++i)\r\n\t{\r\n\t\tif (dep[i]>MAX) \r\n\t\t{\t\r\n\t\tMAX=dep[i];\r\n\t\tans=sum[i];\r\n\t\t}\r\n\t\telse\r\n\t\tif (MAX==dep[i])\r\n\t\tans=(ans+sum[i])%MOD;\r\n\t}   \r\n    \r\n    \r\n\tprintf(\"%d\\n\",MAX);\r\n\tprintf(\"%d\\n\",ans);\r\nreturn 0;\r\n}\r\n```\r\n\r\n## \u5728\u6b64\uff0c\u6211\u8fd8\u60f3\u6c42\u6559\u4e00\u4e0b\u5404\u4f4d\u5927\u4f6c\uff0c\u5728\u6700\u540e\u6c42\u548c\u7684\u65f6\u5019\uff0c\u5982\u679c\u7528\u6211\u6b64\u4ee3\u7801\u4e2d\u7684\u8bed\u53e5\uff1a\r\n```cpp\r\nMAX=0,ans=0;\t\r\n\tfor (register int i=1; i<=col; ++i)\r\n\t{\r\n\t\tif (dep[i]>MAX) \r\n\t\t{\t\r\n\t\tMAX=dep[i];\r\n\t\tans=sum[i];\r\n\t\t}\r\n\t\telse\r\n\t\tif (MAX==dep[i])\r\n\t\tans=(ans+sum[i])%MOD;\r\n\t}   \r\n```\r\n## \u5c31\u80fdAC\uff0c\u4f46\u662f\u5982\u679c\u4e0d\u8fd9\u6837\u5199\uff0c\u82e5\u5728\u641c\u7d22\u662f\u8bb0\u5f55\u6700\u5927\u503cMAX\uff0c\u7136\u540e\u76f4\u63a5\u5199\uff1a\r\n```cpp\r\nfor (register int i=1; i<=col; ++i) if (dep[i]==MAX) ans=(ans+f[i])%MOD;\r\n```\r\n## \u5c31\u4f1aWA\u7b2c\u4e00\u4e2a\u70b9\u3002\u4e00\u76f4\u6ca1\u5f04\u660e\u767d\u3002\r\n## \u8fd9\u91cc\u6709\u6211WA\u7b2c\u4e00\u4e2a\u70b9\u7684\u94fe\u63a5[88\u5206](https://www.luogu.org/recordnew/show/17710939)\r\n## \u603b\u7ed3\uff1a\r\n### \u5bf9\u4e8e\u6211\u6765\u8bf4\uff0c\u6b64\u9898\u601d\u8def\u8f83\u597d\u60f3\u5230\uff0c\u4f46\u662f\u5904\u7406\u8d77\u6765\u6bd4\u8f83\u9ebb\u70e6\uff08\u5bf9\u4e8e\u5927\u4f6c\uff0c\u4e0d\u7ba1......\uff09\u6240\u4ee5\u5efa\u6a2115min\uff0c\u5199\u4ee3\u780160min\uff0c\u67e5\u951950min\u3002\r\n\r\n",
        "postTime": 1553869094,
        "uid": 73436,
        "name": "\u8bf4\u597d\u4e0d\u54ed",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2272 \u3010[ZJOI2007]\u6700\u5927\u534a\u8fde\u901a\u5b50\u56fe\u3011"
    },
    {
        "content": "### \u6211\u5199\u8fd9\u7bc7\u9898\u89e3\u4e3b\u8981\u662f\u4e3a\u4e86\u4e24\u4e2atrick\uff1a\n\n**1. Tarjan\u7f29\u70b9\u540e\u7684\u70b9\u7684\u6392\u5217\u987a\u5e8f\u662f\u9006\u62d3\u6251\u5e8f\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u5bf9\u65b0\u56fe\u8fdb\u884c\u62d3\u6251\u6392\u5e8f**\n\n\t\u53ef\u4ee5\u968f\u673a\u62cd\u51e0\u7ec4\u6570\u636e\u770b\u4e00\u4e0b \n   ~~\u8bc1\u660e\u8fc7\u7a0b\u7565~~\n   \n   ~~\u4e3b\u8981\u662f\u6211\u4e5f\u4e0d\u4f1a~~\n\n**2. \u62d3\u6251\u5e8fDP\u4e0b\u7684\u5224\u91cd\u8fb9\uff1a**\n\n\t\u53ea\u9700\u8981\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e00\u4e2a\u70b9\u4e0a\u4e00\u6b21\u662f\u7531\u8c01\u8f6c\u79fb\u800c\u6765\u7684\u5c31\u597d\n\n\t\u5982\u4e0a\uff0c\u7f29\u70b9\u540e\u7684\u4ee3\u7801\u5c31\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a\n    \uff08HEAD\u3001VER\u3001NEXT\uff1a\u65b0\u56fe\u7684\u524d\u5411\u661f\uff1bsize\uff1a\u6bcf\u4e2a\u5f3a\n    \u8fde\u901a\u5206\u91cf\u5305\u542b\u7684\u70b9\u6570\uff1bf\uff1a\u6700\u5927\u534a\u8fde\u901a\u5b50\u56fe\u7684\u5927\n    \u5c0f\uff1bg\uff1a\u65b9\u6848\u6570\uff09\n    \n ```cpp\n\tfor(int x=scc;x>=1;x--) {\t\t\t\t\t//\u7f29\u70b9\u540e\u7684\u987a\u5e8f\u4e3a\u9006\u62d3\u6251\u5e8f \n\t\tfor(int i=HEAD[x];i;i=NEXT[i]) {\n\t\t\tint y=VER[i];\n\t\t\tif(used[y]==x) continue;\t\t\t//\u91cd\u8fb9 \n\t\t\tused[y]=x;\t\t\t\t\t//\u8bb0\u5f55\u8f6c\u79fb \n\t\t\tif(f[y]<f[x]+size[y]) {\n\t\t\t\tf[y]=f[x]+size[y];\n\t\t\t\tg[y]=g[x];\n\t\t\t}else if(f[y]==f[x]+size[y]) {\n\t\t\t\tg[y]+=g[x];\n\t\t\t\tg[y]%=MOD;\n\t\t\t}\n\t\t}\n\t}\n```\n\u9644\u6700\u7ec8\u7ed3\u679c\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/ut3x9mau.png)\n\u603b\u7528\u65f6\uff1a280ms\n\n\u5176\u4ed6\u7684\u5c31\u662f\u5e38\u89c4\u7684\u7f29\u70b9\u548c\u7b54\u6848\u7edf\u8ba1\u4e86\n\n\u6700\u540e\u9644\u4e0a\u5168\u90e8\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nconst int N=1e5+2,M=2e6+2;\nint n,m,tot,MOD,top,num,scc,TOT,Head[N],ver[M],Next[M],dfn[N],low[N],Stack[N],belong[N];\nint size[N],HEAD[N],VER[M],NEXT[M],f[N],g[N],used[N];\nbool instack[N];\n \ninline int read() {\n\tint x=0;char y='*',z=getchar();\n\twhile(z<'0'||z>'9') y=z,z=getchar();\n\twhile(z>='0'&&z<='9') x=(x<<3)+(x<<1)+(z^48),z=getchar();\n\treturn y=='-'?-x:x;\n}\ninline void add(int x,int y) {\n\tver[++tot]=y;\n\tNext[tot]=Head[x];\n\tHead[x]=tot;\n}\ninline void ADD(int x,int y) {\n\tVER[++TOT]=y;\n\tNEXT[TOT]=HEAD[x];\n\tHEAD[x]=TOT;\n}\ninline void Tarjan(int x) {\n\tdfn[x]=low[x]=++num;\n\tStack[++top]=x;\n\tinstack[x]=true;\n\tfor(int i=Head[x];i;i=Next[i]) {\n\t\tint y=ver[i];\n\t\tif(!dfn[y]) {\n\t\t\tTarjan(y);\n\t\t\tlow[x]=min(low[x],low[y]);\n\t\t}else if(instack[y]) {\n\t\t\tlow[x]=min(low[x],low[y]);\n\t\t}\n\t}\n\tif(dfn[x]==low[x]) {\n\t\tscc++;\n\t\tint k=-1;\n\t\twhile(k!=x) {\n\t\t\tk=Stack[top--];\n\t\t\tbelong[k]=scc;\n\t\t\tsize[scc]++;\n\t\t\tinstack[k]=false;\n\t\t}\n\t}\n}\nint main() {\n//\tfreopen(\"test.txt\",\"r\",stdin);\n\tn=read();m=read();MOD=read();\n\tfor(int i=1,x,y;i<=m;i++) {\n\t\tx=read(); y=read();\n\t\tadd(x,y);\n\t}\n\tfor(int i=1;i<=n;i++) {\n\t\tif(!dfn[i]) {\n\t\t\tTarjan(i);\n\t\t}\n\t}\n\tfor(int x=1;x<=n;x++) {\n\t\tf[x]=size[x];\n\t\tg[x]=1;\n\t\tfor(int i=Head[x];i;i=Next[i]) {\n\t\t\tint y=ver[i];\n\t\t\tif(belong[x]==belong[y]) continue;\n\t\t\tADD(belong[x],belong[y]);\n\t\t}\n\t}\n\tfor(int x=scc;x>=1;x--) {\t\t\t\t\t//\u7f29\u70b9\u540e\u7684\u987a\u5e8f\u4e3a\u9006\u62d3\u6251\u5e8f \n\t\tfor(int i=HEAD[x];i;i=NEXT[i]) {\n\t\t\tint y=VER[i];\n\t\t\tif(used[y]==x) continue;\t\t\t//\u91cd\u8fb9 \n\t\t\tused[y]=x;\t\t\t\t\t\t\t//\u8bb0\u5f55\u8f6c\u79fb \n\t\t\tif(f[y]<f[x]+size[y]) {\n\t\t\t\tf[y]=f[x]+size[y];\n\t\t\t\tg[y]=g[x];\n\t\t\t}else if(f[y]==f[x]+size[y]) {\n\t\t\t\tg[y]+=g[x];\n\t\t\t\tg[y]%=MOD;\n\t\t\t}\n\t\t}\n\t}\n\tint ans=0,tmp=0;\n\tfor(int i=1;i<=scc;i++) {\n\t\tif(f[i]>ans) {\n\t\t\tans=f[i];\n\t\t\ttmp=g[i];\n\t\t}else if(f[i]==ans) {\n\t\t\ttmp+=g[i];\n\t\t\ttmp%=MOD;\n\t\t}\n\t}\n\tprintf(\"%d\\n%d\",ans,tmp);\n}\n```\n",
        "postTime": 1567673974,
        "uid": 123572,
        "name": "xiaofulll",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2272 \u3010[ZJOI2007]\u6700\u5927\u534a\u8fde\u901a\u5b50\u56fe\u3011"
    },
    {
        "content": "\u9996\u5148\u89c2\u5bdf\u5230\u8fd9\u4e2a\u56fe\u4e2d\u5982\u679c\u6709\u67d0\u4e2a\u90e8\u5206\u662f\u5f3a\u8fde\u901a\u7684\uff0c\u90a3\u5176\u5b9e\u53ef\u4ee5\u628a\u8fd9\u6574\u4e2a\u90e8\u5206\u90fd\u770b\u505a\u4e00\u4e2a\u70b9\uff0c\u8fd9\u6837\u5e76\u4e0d\u4f1a\u5bf9\u7ed3\u679c\u4ea7\u751f\u5f71\u54cd\u3002\n\n\u6240\u4ee5\u9996\u5148\u5bf9\u8fd9\u4e2a\u56fe\u8fdb\u884ctarjan\u7f29\u70b9\uff0c\u5e76\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u8fde\u901a\u5757\u7684\u5927\u5c0f\uff0c\u548c\u6bcf\u4e2a\u70b9\u6240\u5728\u7684\u8fde\u901a\u5757\u3002\n\n\u7f29\u70b9\u4e4b\u540e\uff0c\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u56fe\u53d8\u6210\u4e86\u4e00\u4e2adag\uff08\u6709\u5411\u65e0\u73af\u56fe\uff09\uff0c\u6211\u4eec\u8981\u5bf9\u8fd9\u4e2adag\u6c42\u51fa\u6700\u957f\u94fe\u7684\u5927\u5c0f\u548c\u4e2a\u6570\u3002\n\n\u56e0\u4e3a\u8fd9\u4e2a\u56fe\u662f\u65e0\u73af\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u62d3\u6251\u5e8f\u8fdb\u884cDP:f[i]\u8868\u793a\u5230\u7b2ci\u4e2a\u8fde\u901a\u5757\u7684\u6700\u957f\u94fe\u5927\u5c0f\uff0cg[i]\u8868\u793a\u4e2a\u6570\u3002\n\n\u5f88\u5bb9\u6613\u5c31\u60f3\u5230\u4e86\u8f6c\u79fb\u7684\u65b9\u6cd5\uff1a\n\n1.{g[i]=g[i]+g[j]}(\u6761\u4ef6\uff1af[j]+number[i]==f[i])\n\n2.{g[i]=g[j],f[i]=f[j]+number[i]}(\u6761\u4ef6\uff1af[j]+number[i]>f[i])\u3002\n\n\u6309\u7167\u8fd9\u4e2a\u8f6c\u79fb\u72b6\u6001\u5c31\u53ef\u4ee5\u5566\u3002\n\n\u4f46\u662f\u8981\u6ce8\u610f\u7f29\u70b9\u4e4b\u540e\u4f1a\u51fa\u73b0\u5927\u91cf\u91cd\u8fb9\u62d3\u6251\u6392\u5e8f\u4e4b\u524d\u8981\u53bb\u91cd\u3002\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<vector>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nstruct shittt\n{\n    int aa;\n    int bb;\n}x1[1000001];\nvector<int>a[100001],s[100001];//vector\u5b58\u8fb9\u6570\u7ec4\nqueue<int>rt;//\u62d3\u6251\u6392\u5e8f\u961f\u5217\nbool v[100001],f[100001];//tanjan\u7528\u7684\u6807\u8bb0\u6570\u7ec4\nint stack[100001],h,u,cnt,low[100001],dfn[100001],number[100001],b[100001];\n//number\u8868\u793a\u8fde\u901a\u5757\u5927\u5c0f\uff0cb\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u6240\u5728\u7684\u8fde\u901a\u5757\uff0clow\u548cdfn\u662ftanjan\u7528\u7684\u6570\u7ec4\uff0cstack\u662ftarjan\u7528\u7684\u6808\u3002\nint sum[100001],dp[100001],r[100001];//sum\u8868\u793a\u6700\u957f\u94fe\u5927\u5c0f\uff0cdp\u8868\u793a\u4e2a\u6570\uff0cr\u5b58\u50a8\u8fde\u901a\u5757\u7684\u5165\u5ea6\nvoid dfs(int o)//tanjan\u7f29\u70b9\u3002\n{\n    u++;\n    low[o]=dfn[o]=u;\n    h++;\n    stack[h]=o;\n    f[o]=true;\n    if(!a[o].empty())\n        for(int i=0;i<a[o].size();i++)\n            if(!v[a[o][i]])\n            {\n                v[a[o][i]]=true;\n                dfs(a[o][i]);\n                low[o]=min(low[o],low[a[o][i]]);\n            }else if(f[a[o][i]]) low[o]=min(low[o],dfn[a[o][i]]);\n    if(low[o]==dfn[o])//\u627e\u5230\u4e00\u4e2a\u8fde\u901a\u5757\n    {\n        cnt++;//\u65b0\u7684\u6807\u53f7\n        while(stack[h]!=o)\n        {\n            b[stack[h]]=cnt;\n            number[cnt]++;//\u8fde\u901a\u5757\u5927\u5c0f++\n            f[stack[h]]=false;\n            h--;//\u51fa\u6808\n        }\n        b[stack[h]]=cnt;\n        number[cnt]++;\n        f[stack[h]]=false;\n        h--;\n    }\n}\nbool cmp(shittt a1,shittt b1)//\u6392\u5e8f\u6761\u4ef6\u51fd\u6570\n{\n    return((a1.aa<b1.aa)||((a1.aa==b1.aa)&&(a1.bb<b1.bb)));\n}\nint main()\n{\n    int n,m,x;\n    cin>>n>>m>>x;\n    for(int i=1;i<=m;i++)\n    {\n        int xx,yy;\n        cin>>xx>>yy;\n        a[xx].push_back(yy);//\u7528vector\u5b58\u8fb9\n    }\n    memset(v,0,sizeof(v));\n    memset(f,0,sizeof(f));\n    u=cnt=0;\n    for(int i=1;i<=n;i++)\n        if(!v[i])//\u53ef\u80fd\u539f\u56fe\u4e0d\u662f\u8fde\u901a\u7684\uff0c\u4f1a\u6709\u591a\u4e2a\u5757\u7ec4\u6210\u3002\n        {\n            v[i]=true;\n            dfs(i);\n        }\n    int re=0;\n    for(int i=1;i<=n;i++)\n        if(!a[i].empty())\n            for(int j=0;j<a[i].size();j++)\n                if(b[i]!=b[a[i][j]])\n                {\n                    x1[++re].aa=b[i];\n                    x1[re].bb=b[a[i][j]];\n```\n}//\u8bb0\u5f55\u65b0\u7684\u8fb9\uff08\u7f29\u70b9\u4e4b\u540e\u8fde\u901a\u5757\u4e4b\u95f4\u7684\u8fb9\uff09\n```cpp\n    sort(x1+1,x1+re,cmp);//\u6392\u5e8f\u53bb\u9664\u91cd\u8fb9\u3002\n    memset(r,0,sizeof(r));\n    for(int i=1;i<=re;i++)\n    {\n        if((x1[i].aa==x1[i-1].aa)&&(x1[i].bb==x1[i-1].bb)) continue;\n        s[x1[i].aa].push_back(x1[i].bb);\n        r[x1[i].bb]++;\n    }\n    for(int i=1;i<=cnt;i++)//DP\u521d\u59cb\u5316\n        if(r[i]==0) \n        {\n            rt.push(i);\n            sum[i]=number[i];\n            dp[i]=1;\n        }\n    while(!rt.empty())//\u62d3\u6251\u6392\u5e8f\uff08\u7528\u961f\u5217\u5b58\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9\uff09+DP\n    {\n        int yu=rt.front();\n        rt.pop();\n        for(int i=0;i<s[yu].size();i++)\n        {\n            r[s[yu][i]]--;\n            if(r[s[yu][i]]==0)\n                rt.push(s[yu][i]);\n            if(sum[yu]+number[s[yu][i]]==sum[s[yu][i]]) //\u8f6c\u79fb\u72b6\u6001\n            {\n                dp[s[yu][i]]+=dp[yu];\n                dp[s[yu][i]]%=x;\n            }else\n            if(sum[yu]+number[s[yu][i]]>sum[s[yu][i]])\n            {\n                dp[s[yu][i]]=dp[yu];\n                sum[s[yu][i]]=sum[yu]+number[s[yu][i]];\n            }\n        }\n    }\n    int yu=0,k=0;\n    for(int i=1;i<=cnt;i++)\n        if(sum[i]>sum[yu]){yu=i;k=dp[i];}\n            else if(sum[i]==sum[yu]){k+=dp[i];k%=x;}//\u6c42\u51fa\u6700\u7ec8\u503c\n    cout<<sum[yu]<<endl<<k<<endl;\n    return 0;\n}\n```",
        "postTime": 1514517202,
        "uid": 79044,
        "name": "\u7834\u58c1\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2272 \u3010[ZJOI2007]\u6700\u5927\u534a\u8fde\u901a\u5b50\u56fe\u3011"
    },
    {
        "content": "## [P2272 [ZJOI2007]\u6700\u5927\u534a\u8fde\u901a\u5b50\u56fe](https://www.luogu.org/problemnew/show/P2272)\n\n\u840c\u65b0\u521d\u5b66Tarjan\uff0c\u5728\u300a\u4fe1\u606f\u5b66\u5965\u8d5b\u4e00\u672c\u901a-\u63d0\u9ad8\u7bc7\u300b\u4e2d\u770b\u5230\u8fd9\u9898\uff0c\u770b\u5230\u9898\u89e3\u4e0d\u591a\uff0c\u4fbf\u60f3\u53d1\u5e03\u4e00\u7bc7\u8f83\u4e3a\u6e05\u65b0\u7b80\u6d01\u7684\u9898\u89e3\u3002\n\n### \u9898\u76ee\u5927\u610f\uff1a\n\n\u5b9a\u4e49\u6700\u5927\u534a\u8fde\u901a\u56fe\uff1a\u5bf9\u4e8e\u56fe\u4e2d\u4efb\u610f\u4e24\u70b9u\uff0cv,\u5b58\u5728\u4e00\u6761u\u5230v\u7684\u6709\u5411\u8def\u5f84 **\u6216\u8005** \u4ecev\u5230u\u7684\u6709\u5411\u8def\u5f84\u3002\u6c42\u4e00\u4e2a\u56fe\u4e2d\u4e0d\u540c\u7684\u6700\u5927\u534a\u8fde\u901a\u5b50\u56fe\u7684\u6570\u76ee\u3002\n\n\u770b\u5230\u9898\u9762\u65f6\u5927\u5bb6\u5f88\u5bb9\u6613\u60f3\u5230\uff0c\u5982\u679c\u4e24\u70b9\u4e92\u76f8\u53ef\u4ee5\u5230\u8fbe\uff0c\u90a3\u4e48\u5b83\u4eec\u5fc5\u662f\u534a\u8fde\u901a\u56fe\uff0c\u6240\u4ee5\u8003\u8651\u5148Tarjan\u7f29\u70b9\uff08[P3387 \u3010\u6a21\u677f\u3011\u7f29\u70b9\uff08Tarjan\u7f29\u70b9+DAGdp\uff09](https://www.luogu.org/problemnew/show/P3387)\uff09\n\n \u63a5\u7740\u53bb\u9664\u91cd\u8fb9\u91cd\u65b0\u5efa\u56fe\uff0c\u4f60\u4f1a\u53d1\u73b0\uff0c**\u5728\u8fd9\u4e2a\u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09\u4e2d\uff0c\u534a\u8fde\u901a\u5b50\u56fe\u90fd\u662f\u4e00\u6761\u94fe\uff08\u53ef\u4ee5\u4e3e\u53cd\u4f8b\u8bd5\u8bd5\uff0c\u8fd9\u6761\u94fe\u4e0d\u53ef\u80fd\u6709\u5206\u652f\uff0c\u5426\u5219\u5c06\u6709\u4e24\u70b9\u65e0\u6cd5\u62b5\u8fbe\u53e6\u4e00\u65b9\uff09**\n \n \u4e8e\u662f\uff0cG\u7684\u6700\u5927\u534a\u8fde\u901a\u5b50\u56fe\u62e5\u6709\u7684\u8282\u70b9\u6570K\u5c31\u662f\u6700\u957f\u94fe\u957f\u5ea6\uff0c\u4e0d\u540c\u7684\u6700\u5927\u534a\u8fde\u901a\u5b50\u56fe\u7684\u6570\u76ee\u5c31\u662f\u6700\u957f\u94fe\u4e2a\u6570\u3002\n \n(\u6458\u81ea\u4fe1\u606f\u5b66\u5965\u8d5b\u4e00\u672c\u901a\uff09\u6700\u957f\u94fe\u53ef\u4ee5\u76f4\u63a5\u7528\u62d3\u6251\u6392\u5e8f\uff08topo\uff09\uff0c\u6700\u957f\u94fe\u4e2a\u6570\u7528\u4e00\u4e2a\u7c7b\u4f3cDP\u7684\u65b9\u6cd5\uff0c\u7528f\u3010i\u3011\u8868\u793a\u4ee5 i \u4e3a\u7ec8\u70b9\u7684\u65b9\u6848\u6570\uff0c\u90a3\u4e48f\u3010i\u3011\u5c31\u7b49\u4e8e\u6ee1\u8db3\u8ddd\u79bb\u4e3a\u8d77\u70b9\u5230 i \u7684\u4e34\u65f6\u6700\u77ed\u8ddd\u79bb\u7684\u70b9\u7684 f \u7684\u548c\u3002\u7136\u540e\u67e5\u627e\u8ddd\u79bb\u7b49\u4e8e\u6700\u957f\u94fe\u7684\u70b9\uff0c\u7b54\u6848\u4e3a\u5b83\u4eec\u7684\u65b9\u6848\u6570\u4e4b\u548c\n \n \u5176\u4ed6\u9898\u89e3\u4e2d\u5df2\u7ecf\u7ed9\u51fa\u4e86\u62d3\u6251\u7684\u7b97\u6cd5\uff0c\u6211\u501f\u9274\u5927\u4f6c\u7684\u7a0b\u5e8f\u7528\u7684\u662f\u641c\u7d22\uff0c\u5148\u4e00\u76f4\u641c\u5230\u7ec8\u70b9\u518d\u56de\u6765\u66f4\u65b0\u7b54\u6848\u3002\u7531\u4e8e\u6570\u636e\u8303\u56f4#7\u4e00\u76f4RE\uff0c\u540e\u6765\u6539\u4e3aconst int N=1e5+5,M=2e6+5;\u7ec8\u4e8eAC\u3002\u3002qwq\u9ad8\u6027\u80fd\u3002\u3002\n \n ```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\nconst int N=1e5+5,M=2e6+5;\n\nbool f[N];\n//f \u5728\u641c\u7d22\u4e2d\u5224\u65ad\u662f\u5426\u8d70\u8fc7\n\nint n,m,mod,now,d[N],a[N],ans,maxans,ch[N];\n//d\u6307\u4eceu\u5230\u7ec8\u70b9\u7684\u6700\u957f\u94fe\u8ddd\u79bb\uff0ca\u6307\u6700\u957f\u94fe\u70b9\u6570\uff0cch\u6307\u51fa\u5ea6\n\nint h[N],u[M],v[M],r[N],nu[M],cnt;\n//h\u662f\u94fe\u5f0f\u524d\u5411\u661f\u7684\u5efa\u8fb9head\uff0cu\uff0cv\u4fdd\u5b58\u521d\u59cb\u8bfb\u5165\u7684\u8fb9\u5de6\u53f3\u4e24\u70b9\uff0cnu\u5b58\u521d\u59cb\u65f6\u8fb9\u7684\u7f16\u53f7\uff0cr\u662f\u5165\u5ea6\n\nint top,co,dfn[N],low[N],c[N],s[N],st[N];\n//dfn\uff0clow\uff0cst\u7528\u4e8eTarjan\uff0cc\u8868\u6240\u5728\u5f3a\u8fde\u901a\u5206\u91cf\u7f16\u53f7\uff0cs\u6307\u6240\u5728\u5f3a\u8fde\u901a\u5206\u91cf\u70b9\u6570\n\nstruct edge {\n    int h,to;\n} e[M];\n\n#define rint register int\n#define min(a,b) (a<b? a:b)\n#define max(a,b) (a>b? a:b)\n\ninline bool cmp(int a,int b) {\n    return u[a]<u[b] || (u[a]==u[b] && v[a]<v[b]);\n}//\u5c06\u8fb9\u6392\u5e8f\uff0c\u65b9\u4fbf\u91cd\u65b0\u5efa\u56fe\n\ninline void add(int u,int v) {\n    e[++cnt].h=h[u],h[u]=cnt,e[cnt].to=v;\n}\n\ninline int read() {\n    int w=1,ans=0;\n    char ch=getchar();\n    while(ch>'9'||ch<'0') if (ch=='-') w=-1,ch=getchar();\n    while(ch<='9'&& ch>='0') ans=(ans<<3)+(ans<<1)+(ch^48),ch=getchar();\n    return ans*w;\n}\n\ninline void Tarjan(int u) {\n    dfn[u]=low[u]=++now;\n    st[++top]=u;\n    for (rint i=h[u]; i; i=e[i].h) {\n    \tint v=e[i].to;\n        if (!dfn[v])\n            Tarjan(v),low[u]=min(low[u],low[v]);\n        else if (!c[v])\n            low[u]=min(low[u],dfn[v]);\n    }\n    if (low[u]==dfn[u]) {\n        c[u]=++co,s[co]++;\n        while(st[top]!=u)\n            s[co]++,c[st[top]]=co,top--;\n        top--;\n    }\n}//\u6807\u51c6\u7f29\u70b9\n\ninline void dfs(int u) {\n    f[u]=1;\n    if (!ch[u]) {//\u5982\u679c\u6ca1\u6709\u51fa\u5ea6\uff0c\u5373\u5230\u5934\u4e86\n        d[u]=s[u],a[u]=1;//\u8ddd\u79bb\u4e3a\u70b9\u6570\uff0c\u4ee5u\u4e3a\u8d77\u70b9\u65b9\u6848\u4e3a1\n        maxans=max(maxans,d[u]);//\u66f4\u65b0\u6700\u957f\u94fe\u8ddd\u79bb\n        return;\n    }\n    for (rint i=h[u]; i; i=e[i].h) {\n    \tint v=e[i].to;\n        if (!f[v]) dfs(v);//\u7ee7\u7eed\u641c\u7d22\u94fe\u7684\u540e\u9762\n        if (d[v]+s[u]>d[u])//\u82e5\u4ee5u\u4e3a\u8d77\u70b9\u7684\u94fe\u8ddd\u79bb\u53ef\u4ee5\u66f4\u957f\n            d[u]=d[v]+s[u],a[u]=a[v]%mod;//\u66f4\u65b0\n        else if (d[u]==d[v]+s[u])//\u82e5\u6700\u957f\u94fe\u8ddd\u79bb\u76f8\u540c\n            a[u]=(a[u]+a[v])%mod;//\u52a0\u4e0a\u65b9\u6848\u6570\n        maxans=max(maxans,d[u]);\n    }\n}\n\nint main() {\n    n=read(),m=read(),mod=read();\n    for (rint i=1; i<=m; i++) u[i]=read(),v[i]=read(),add(u[i],v[i]);\n    for (rint i=1; i<=n; i++) if (!dfn[i]) Tarjan(i);\n\n    cnt=0;\n    memset(h,0,sizeof h);\n    memset(e,0,sizeof e);\n    for (rint i=1; i<=m; i++)\n        nu[i]=i,u[i]=c[u[i]],v[i]=c[v[i]];\n\n    sort(nu+1,nu+m+1,cmp);//\u6309u\uff0cv\u6392\u5e8f\u8fb9\n    for (rint i=1; i<=m; i++)\n    {\n    \tint num=nu[i];\n        if (u[num]!=v[num] && (u[num]!=u[nu[i-1]] || v[num]!=v[nu[i-1]]))//\u82e5\u6b64\u8fb9\u4e0d\u662f\u81ea\u73af\uff0c\u4e14\u4e0e\u4e0a\u4e00\u6761\u8fb9\u4e0d\u540c\uff08\u53bb\u9664\u91cd\u8fb9\uff09\n           ++ch[u[num]],++r[v[num]],add(u[num],v[num]);}\n//\u51fa\u5ea6\u5165\u5ea6\u52a01\uff0c\u52a0\u8fb9\n    for (rint i=1; i<=co; i++) if (!r[i] && !f[i]) dfs(i);//\u5165\u5ea6\u4e3a0\u4e14\u672a\u641c\u7d22\u8fc7\n    for (rint i=1; i<=co; i++) if (d[i]==maxans) ans=(ans+a[i])%mod;//\u7edf\u8ba1\u7b54\u6848\n    printf(\"%d\\n%d\\n\",maxans,ans);\n}\n```\n",
        "postTime": 1559393161,
        "uid": 68706,
        "name": "Randolph\u3001",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2272 \u3010[ZJOI2007]\u6700\u5927\u534a\u8fde\u901a\u5b50\u56fe\u3011"
    },
    {
        "content": "\u5c31\u8981\u6c2e\u6c27\u7898\u78f78102\u4e86~~\u6709\u70b9\u614c~~\n\n\u6700\u8fd1\u5728\u7528\u67d0\u672c\u84dd\u8272\u7684\u4e00\u672c\u901a\u7ec3\u4e60tarjan\u65f6,\u770b\u5230\u4e86\u8fd9\u9053\u9898,\u4e8e\u662f\u73b0\u5728loj\u4e0a\u6253\u5f00\u4e86\u8fd9\u9053\u9898,\u9898\u76ee\u4e0a\u7ed9\u4e86\u534a\u8fde\u901a\u7684\u5b9a\u4e49,\u548c\u5f3a\u8054\u901a\u7684\u5b9a\u4e49\u597d\u50cf\u554a,\u7136\u540e\u770b\u8fd9\u53c8\u662ftarjan\u7684\u7ec3\u4e60,\u4e8e\u662f\u51b7\u9759\u5206\u6790,\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u80af\u5b9a\u662f\u4e00\u4e2a\u534a\u8fde\u901a\u5b50\u56fe\u5440.\n\n\u4e8e\u662f\u60f3\u5148\u7f29\u70b9\u518d\u8bf4\n```cpp\nvoid tarjan(int t)\n{\n\t//\u4e2a\u4eba\u559c\u597d\u7528order\u6570\u7ec4,\u4e00\u822c\u662fdfn\n\torder[t]=low[t]=++timetag;\n\tzh[++top]=t;b[t]=1;\n\tint temp;\n\tfor(register int i=headf[t];i;i=edgef[i].next)\n\t{\n\t\tif(!order[edgef[i].to])\n\t\t{\n\t\t\ttarjan(edgef[i].to);\n\t\t\tlow[t]=min(low[edgef[i].to],low[t]);\n\t\t}\n\t\telse if(b[edgef[i].to])\n\t\tlow[t]=min(low[t],order[edgef[i].to]);\n\t}\n\tif(low[t]==order[t])\n\t{\n\t\twhile((temp=zh[top--]))\n\t\t{\n\t\t\tb[temp]=0;\n\t\t\troot[temp]=t;\n\t\t\t++size[t];//\u7edf\u8ba1\u8fd9\u4e2a\u5f3a\u8054\u901a\u5206\u91cf(\u534a\u8fde\u901a\u5b50\u56fe)\u5185\u7684\u70b9\u6570\n\t\t\tif(t==temp)\n\t\t\tbreak;\n\t\t}\n\t}\n}\n```\n\u4ee5\u4e0a\u662ftarjan\u5e38\u89c4\u64cd\u4f5c,\u4e0d\u61c2\u7684\u6ca1\u5173\u7cfb\u5148\u53bb[\u7f29\u70b9](https://www.luogu.org/problemnew/show/P3387)\n\n\u597d,\u7f29\u5b8c\u70b9\u4e86.\u4f46\u5e76\u4e0d\u662f\u4ec5\u4ec5\u53ea\u6709\u5f3a\u8054\u901a\u5b50\u56fe\u662f\u534a\u8fde\u901a\u5b50\u56fe\n\n\u90a3\u6211\u4eec\u8003\u8651\u5728DAG(\u6709\u5411\u65e0\u73af\u56fe)~~\u5df2\u7ecf\u662f\u4e86~~\u4e0a,\u600e\u4e48\u6c42\u534a\u8fde\u901a\u56fe\u5462?\n\n\u7531\u534a\u8fde\u901a\u56fe\u7684\u5b9a\u4e49\u7a0d\u7a0d\u60f3\u4e00\u60f3\u53ef\u77e5,\u53ea\u8981\u4e24\u4e2a\u70b9\u6709\u8fb9\u76f8\u8fde,\u90a3\u4ed6\u4eec\u5c31\u53ef\u4ee5\u653e\u5230\u4e00\u4e2a\u534a\u8fde\u901a\u5b50\u56fe\u91cc,\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u5728\u7f29\u5b8c\u70b9\u7684\u65b0\u56fe\u4e0a\u4e00\u76f4\u8fdb\u884c\u8fd9\u79cd\u64cd\u4f5c\u5c31\u53ef\u4ee5\u4e86.\n\n\u56e0\u4e3a\u65b0\u56fe\u5df2\u7ecf\u662f\u4e00\u4e2aDAG\u4e86,\u90a3\u4e48\u4e00\u76f4\u8fdb\u884c\u8fd9\u79cd\u64cd\u4f5c\u662f\u4e0d\u4f1a\u5f62\u6210\u73af\u7684.\u90a3\u4e48\u6c42\u6700\u5927\u534a\u8fde\u901a\u5b50\u56fe\u4e0d\u5c31\u662f\u6c42\u6700\u957f\u94fe\u5417~~\u7f8e\u6ecb\u6ecb~~\u7136\u540e\u9898\u76ee\u53c8\u8981\u6c42\u6700\u5927\u534a\u8fde\u901a\u5b50\u56fe\u7684\u65b9\u6848\u6570,\u6211\u4eec\u5f88\u5bb9\u6613\u7531\u505a\u7f29\u70b9\u8fd9\u9053\u9898\u7684\u7ecf\u9a8c\u60f3\u5230\u62d3\u6251\u6392\u5e8f.\n```cpp\nvoid topsort()\n{\n\t//r\u662f\u7528\u6765\u7edf\u8ba1\u5165\u5ea6,c\u662f\u7528\u6765\u7edf\u8ba1\u51fa\u5ea6\u7684\n    //\u559c\u6b22\u7528\u9996\u5199\u5b57\u6bcd,\u5927\u4f6c\u52ff\u55b7\n\tqueue<int> q;\n\tcnt=0;\n\tfor(register int i=1;i<=n;i++)\n\tif(root[i]==i&&!r[i])//\u662f\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6839\n\tq.push(i),dis[i]=size[i],ans[i]=1;\n\twhile(q.size())\n\t{\n\t\tint t=q.front();\n\t\tq.pop();\n\t\tfor(register int i=heads[t];i;i=edges[i].next)\n\t\t{\n\t\t\tif(dis[edges[i].to]<dis[t]+size[edges[i].to])\n            //\u66f4\u957f\u7684\u94fe,\u957f\u5ea6\u548c\u65b9\u6848\u6570\u90fd\u76f4\u63a5\u66f4\u65b0\n\t\t\tdis[edges[i].to]=dis[t]+size[edges[i].to],ans[edges[i].to]=ans[t];\n\t\t\telse if(dis[edges[i].to]==dis[t]+size[edges[i].to])\n\t\t\tans[edges[i].to]=(ans[edges[i].to]%mo+ans[t]%mo)%mo;\n\t\t\t//\u76f8\u540c\u7684\u957f\u5ea6,\u76f4\u63a5\u65b9\u6848\u6570\u7d2f\u52a0\n            --r[edges[i].to];\n\t\t\tif(!r[edges[i].to])//\u5165\u5ea6\u4e3a0\u4e86\u5c31\u5165\u961f\n\t\t\tq.push(edges[i].to);\n\t\t}\n\t}\n\tfor(register int i=1;i<=n;i++)\n\tif(root[i]==i&&!c[i])\n\t{\n\t\tif(dis[i]==ans1)\n\t\tans2=(ans2%mo+ans[i]%mo)%mo;\n\t\tif(dis[i]>ans1)\n\t\tans1=dis[i],ans2=ans[i];\n\t}\n}\n```\n\u62d3\u6251\u6392\u5e8f\u4e0a\u7a0d\u52a0\u53d8\u52a8,\u548c\u7f29\u70b9\u6a21\u677f\u9898\u7684\u62d3\u6251\u6392\u5e8f\u5dee\u4e0d\u591a\u5427(\u9664\u4e86\u7edf\u8ba1\u65b9\u6848\u6570)\n\n\u4f46\u662f\u8fd9\u9053\u9898\u5c31\u8fd9\u6837\u7ed3\u675f\u4e86\u5417?~~\u4e0d\u5b58\u5728\u7684~~\n\n\u5982\u679c\u8fd9\u4e2a\u7f29\u5b8c\u70b9\u4e4b\u540e\u7684\u56fe\u4e2d\u51fa\u73b0\u4e86\u91cd\u8fb9\u600e\u4e48\u529e,\u90a3\u5c31\u4f1a\u4f7f\u65b9\u6848\u6570\u83ab\u540d\u589e\u591a.\u6240\u4ee5\u5bf9\u4e8e\u7f29\u5b8c\u70b9\u540e\u7684\u56fe\u8fd8\u8981\u5224\u91cd\u8fb9\n```cpp\ninline bool cmp(zhzs x,zhzs y)\n{return x.x==y.x?(x.y<y.y):(x.x<y.x);}\n```\n```cpp\nfor(register int i=1;i<=m;i++)\n{\n\tint x1=root[edgef[i].from];\n\tint y1=root[edgef[i].to];\n\tif(x1!=y1)\n\t{\n\t\te[++num].x=x1;\n\t\te[num].y=y1;\n\t}\n}\nsort(e+1,e+num+1,cmp);\n```\n```cpp\nfor(register int i=1;i<=num;i++)\nif(e[i].x!=e[i-1].x||e[i].y!=e[i-1].y)\n{\n\tadds(e[i].x,e[i].y);\n}\n```\n\u76f4\u63a5\u8ba9\u8d77\u70b9\u76f8\u540c\u7684\u8fb9\u4ee5\u7ec8\u70b9\u5927\u5c0f\u987a\u5e8f\u6392\u5e8f,\u7136\u540e\u53ea\u8981\u8fd9\u6761\u8fb9\u7684\u8d77\u70b9\u6216\u8005\u7ec8\u70b9\u4e0e\u4e0a\u4e00\u6761\u4e0d\u540c\u5c31\u4e0d\u662f\u91cd\u8fb9\n\n\u6240\u4ee5\u8fd9\u9053\u9898\u5c31\u5f04\u5b8c\u4e86\n\n\u9644\u4e0a\u6211\u4e11\u964b\u7684\u4ee3\u7801:\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nstruct ppp\n{int x,y;}e[2000301];\nstruct node\n{int to,from,next;}edgef[2000301],edges[2000301];\nint n,m,x,y,top,cnt,num,timetag,mo,ans1,ans2;\nint dis[1000001],ans[1000001],headf[1000001],heads[1000001];\nint zh[1000001],size[1000001],b[1000001];\nint order[1000001],low[1000001],root[1000001],r[1000001],c[1000001];\n//\u522b\u614c,\u6ca1\u6709\u70b8\u7a7a\u95f4\ninline bool cmp(zhzs x,zhzs y)\n{return x.x==y.x?(x.y<y.y):(x.x<y.x);}//\u53bb\u91cd\u8fb9,\u6392\u5e8f\ninline void addf(int u,int v)//\u539f\u56fe\u52a0\u8fb9\n{edgef[++cnt].to=v;edgef[cnt].from=u;edgef[cnt].next=headf[u];headf[u]=cnt;}\ninline void adds(int u,int v)//\u65b0\u56fe\u52a0\u8fb9\n{edges[++cnt].to=v;edges[cnt].next=heads[u];heads[u]=cnt;}\ninline int min(int x,int y)\n{return x<y?x:y;}\n//\u6ca1\u4ec0\u4e48\u7528\u7684\u91cd\u8f7d\nvoid tarjan(int t)\n{\n\torder[t]=low[t]=++timetag;//\u65f6\u95f4\u6233\n\tzh[++top]=t;b[t]=1;\n\tint temp;\n\tfor(register int i=headf[t];i;i=edgef[i].next)\n\t{\n\t\tif(!order[edgef[i].to])\n\t\t{\n\t\t\ttarjan(edgef[i].to);\n\t\t\tlow[t]=min(low[edgef[i].to],low[t]);\n\t\t}\n\t\telse if(b[edgef[i].to])\n\t\tlow[t]=min(low[t],order[edgef[i].to]);\n\t}\n\tif(low[t]==order[t])\n\t{\n\t\twhile((temp=zh[top--]))//\u5f39\u6808\n\t\t{\n\t\t\tb[temp]=0;\n\t\t\troot[temp]=t;\n\t\t\t++size[t];//\u7edf\u8ba1\u8fd9\u4e2a\u5f3a\u8054\u901a\u5206\u91cf(\u534a\u8fde\u901a\u5b50\u56fe)\u5185\u7684\u70b9\u6570\n\t\t\tif(t==temp)\n\t\t\tbreak;\n\t\t}\n\t}\n}\nvoid topsort()\n{\n\tqueue<int> q;\n\tcnt=0;\n\tfor(register int i=1;i<=num;i++)\n\tif(e[i].x!=e[i-1].x||e[i].y!=e[i-1].y)\n\t{\n\t\tadds(e[i].x,e[i].y);\n\t\t++r[e[i].y];++c[e[i].x];//\u7edf\u8ba1\u5165\u5ea6,\u51fa\u5ea6\n\t}\n\tfor(register int i=1;i<=n;i++)\n\tif(root[i]==i&&!r[i])\n\tq.push(i),dis[i]=size[i],ans[i]=1;\n\twhile(q.size())\n\t{\n\t\tint t=q.front();\n\t\tq.pop();\n\t\tfor(register int i=heads[t];i;i=edges[i].next)\n\t\t{\n\t\t\tif(dis[edges[i].to]<dis[t]+size[edges[i].to])\n\t\t\tdis[edges[i].to]=dis[t]+size[edges[i].to],ans[edges[i].to]=ans[t];\n\t\t\telse if(dis[edges[i].to]==dis[t]+size[edges[i].to])\n\t\t\tans[edges[i].to]=(ans[edges[i].to]%mo+ans[t]%mo)%mo;\n\t\t\t--r[edges[i].to];\n\t\t\tif(!r[edges[i].to])\n\t\t\tq.push(edges[i].to);\n\t\t}\n\t}\n\tfor(register int i=1;i<=n;i++)\n\tif(root[i]==i&&!c[i])\n\t{\n\t\tif(dis[i]==ans1)\n\t\tans2=(ans2%mo+ans[i]%mo)%mo;\n\t\tif(dis[i]>ans1)\n\t\tans1=dis[i],ans2=ans[i];\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&mo);\n\tfor(register int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\taddf(x,y);\n\t}\n\tfor(register int i=1;i<=n;i++)\n\tif(!order[i])//\u8fd8\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\n\ttarjan(i);\n\tfor(register int i=1;i<=m;i++)\n\t{\n\t\tint x1=root[edgef[i].from];\n\t\tint y1=root[edgef[i].to];\n\t\tif(x1!=y1)//\u5224\u65ad\u662f\u5426\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5185\n        {\n\t\t\te[++num].x=x1;\n\t\t\te[num].y=y1;\n\t\t}\n\t}\n\tsort(e+1,e+num+1,cmp);\n\ttopsort();\n\tprintf(\"%d\\n%d\",ans1,ans2);\n\treturn 0;\n}\n```\n\n\u4e00\u5f00\u59cb\u5148\u5728loj\u4e0aA\u4e86,\u5c31\u60f3\u6d1b\u8c37\u4e0a\u5e94\u8be5\u6709\u540d\u5b57\u8fd9\u4e48\u9ad8\u7ea7\u7684\u9898\u5427,\u4e8e\u662f\u5230\u6d1b\u8c37\u4e0a\u4e00\u627e.\n\n\u6211\u7684\u5929! ZJOI \u6211\u7684\u5929! \u7d2b\u9898,\u6211\u53c8\u8981A\u7d2b\u9898\u4e86.\n\n\u7ed3\u679c\u4e00\u4ea4\u4e0a\u53bbRE,\u6709\u70b9\u96be\u53d7,\u7136\u540e\u770b\u4e86\u4e00\u4e0b\u6570\u7ec4~~\u6ca1\u6bdb\u75c5\u554a~~,\u5c31\u4e00\u76f4\u778ejb\u4e71\u8c03,~~\u7136\u5e76\u5375\u554a~~,\u6700\u540e\u8fd8\u662f\u60f3\u628a\u6570\u7ec4\u5f00\u5927\u5341\u500d,\u78b0\u4e2a\u8fd0\u6c14\u5427,\u7ed3\u679cA\u4e86,\u6709\u70b9\u8212\u670d\n\n\u7b2c\u4e00\u7bc7\u7d2b\u9898\u9898\u89e3,\u5927\u4f6c\u52ff\u55b7,\u5173\u7231\u849f\u84bb",
        "postTime": 1541066378,
        "uid": 58417,
        "name": "\u55ef\u3002",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2272 \u3010[ZJOI2007]\u6700\u5927\u534a\u8fde\u901a\u5b50\u56fe\u3011"
    },
    {
        "content": "## \u5f3a\u8fde\u901a\u5206\u91cf+\u62d3\u6251\u6392\u5e8f+DP ##\n~~~~\n\u9996\u5148\u7528Tarjan\u6392\u5e8f\uff0c\u53bb\u91cd\u8fb9\uff0c\u5f97\u5230\u65b0\u56fe\uff0c\u9898\u76ee\u5c31\u53d8\u6210\u6c42\u56fe\u4e2d\u6700\u957f\u94fe\u53ca\u6700\u957f\u94fe\u4e2a\u6570\n~~~~\n\u6700\u957f\u94fe\u53ef\u4ee5\u76f4\u63a5\u7528\u62d3\u6251\u6392\u5e8f\n~~~~\n\u6700\u957f\u94fe\u4e2a\u6570\u7528\u4e00\u4e2a\u7c7b\u4f3c\u4e8eDP\u7684\u65b9\u6cd5\n~~~~\n\u7528f[i]\u8868\u793a\u65b0\u56fe\u4e2d\u4ee5i\u4e3a\u7ec8\u70b9\u7684\u65b9\u6848\u6570\n~~~~\n\u90a3\u4e48f[i]\u5c31\u7b49\u4e8e\u8fde\u5230i\u4e14\u6ee1\u8db3\u8ddd\u79bb\u7b49\u4e8e\u8d77\u70b9\u5230i\u7684\u4e34\u65f6\u6700\u957f\u8ddd\u79bb\u7684\u70b9\u7684f\u4e4b\u548c\n~~~~\n\u6700\u540e\u67e5\u627e\u8ddd\u79bb\u7b49\u4e8e\u6700\u957f\u94fe\u7684\u70b9\uff0c\u7b54\u6848\u662f\u5b83\u4eec\u7684\u65b9\u6848\u6570\u4e4b\u548c\n\n\n------------\n\n```cpp\n#include<bits/stdc++.h>\n#define N 100000+5\n#define M 1000000+5\nusing namespace std;\nstruct node{\n\tint v,next;\n}edge[M];\nint n,m,mo,num,col,top,cnt,ans,anss,t,w;\nint dfn[N],low[N],sz[N],cu[N],sn[N];\nint de[N],to[N],head[N],x[N],y[N],ue[N],dis[N],nu[M],e[N];\ninline void add_edge(int u,int v)//\u8fde\u8fb9\n{\n\tedge[++cnt].v=v;\n\tedge[cnt].next=head[u];\n\thead[u]=cnt;\n}\ninline void Tarjan(int u)//Tarjan\u7f29\u70b9\n{\n\tdfn[u]=low[u]=++num;\n\tsz[++top]=u;\n\tfor(int i=head[u];i;i=edge[i].next)\n\t{\n\t\tint v=edge[i].v;\n\t\tif(!dfn[v])\n\t\t{\n\t\t\tTarjan(v);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(!cu[v])\n\t\t\tlow[u]=min(low[u],dfn[v]);\n\t\t}\n\t}\n\tif(low[u]==dfn[u])\n\t{\n\t\tcu[u]=++col;\n\t\t++sn[col];\n\t\twhile(sz[top]!=u)\n\t\t{\n\t\t\t++sn[col];\n\t\t\tcu[sz[top]]=col;\n\t\t\ttop--;\n\t\t}\n\t\ttop--;\n\t}\n}\ninline bool cmp(int a,int b)\n{\n\tif(x[a]!=x[b])\n\t{\n\t\treturn x[a]<x[b];\n\t}\n\treturn y[a]<y[b];\n}\ninline void Remove()//\u53bb\u91cd\u8fb9\uff0c\u5426\u5219\u4f1a\u5bf9\u65b9\u6848\u7684\u7edf\u8ba1\u6709\u5f71\u54cd\n{\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tnu[i]=i;\n\t\tx[i]=cu[x[i]];\n\t\ty[i]=cu[y[i]];\n\t}\n\tsort(nu+1,nu+1+m,cmp);\n}\ninline void Build()//\u7f29\u70b9\u5e76\u91cd\u65b0\u5efa\u56fe\uff0c\u5e76\u5904\u7406\u5165\u5ea6\u4e3aTopo\u6392\u5e8f\u51c6\u5907\n{\n\t cnt=0;\n\tmemset(head,0,sizeof(head));\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint z=nu[i];\n\t\tif((x[z]!=y[z])&&(x[z]!=x[nu[i-1]]||y[z]!=y[nu[i-1]]))\n\t\t{\n\t\t\t++de[y[z]];\n\t\t\tadd_edge(x[z],y[z]);\n\t\t}\n\t}\n}\ninline void Reset()//Topo\u521d\u59cb\u5165\u961f\n{\n\tfor(int i=1;i<=col;i++)\n\t{\n\t\tif(!de[i])\n\t\t{\n\t\t\tue[++w]=i;\n\t\t\tdis[i]=sn[i];\n\t\t\te[i]=1;\n\t\t\tif(dis[ans]<dis[i]) ans=i;\n\t\t}\n\t}\n}\ninline void Topo()//Topo\u6392\u5e8f\u53ca\u9012\u63a8\n{\n\twhile(t<w)\n\t{\n\t\tint u=ue[++t];\n\t\tfor(int i=head[u];i;i=edge[i].next)\n\t\t{\n\t\t\tint v=edge[i].v;\n\t\t\t--de[v];\n\t\t\tif(dis[v]<dis[u]+sn[v])//\u4e34\u65f6\u8ddd\u79bb\u66f4\u65b0\uff0c\u91cd\u65b0\u7edf\u8ba1\u65b9\u6848\u6570\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+sn[v];\n\t\t\t\te[v]=0;\n\t\t\t\tif(dis[ans]<dis[i]) ans=v;\n\t\t\t}\n\t\t\tif(dis[v]==dis[u]+sn[v])//\u6ee1\u8db3\u8ddd\u79bb\u6761\u4ef6\uff0c\u7d2f\u52a0\u65b9\u6848\u6570\n\t\t\t{\n\t\t\t\te[v]=(e[v]+e[u])%mo;\n\t\t\t}\n\t\t\tif(!de[v]) ue[++w]=v;\n\t\t}\n\t}\n}\ninline void Ask()//\u7edf\u8ba1\u7b54\u6848\n{\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(dis[i]==dis[ans])\n\t\t{\n\t\t\tanss=(anss+e[i])%mo;\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d %d %d\",&n,&m,&mo);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d %d\",&x[i],&y[i]);\n\t\tadd_edge(x[i],y[i]);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(!dfn[i])\n\t\tTarjan(i);\n\t}\n\tRemove();\n\tBuild();\n\tReset();\n\tTopo();\n\tAsk();\n\tprintf(\"%d\\n%d\",dis[ans],anss);\n\treturn 0;\n}\n```\n",
        "postTime": 1571552364,
        "uid": 228395,
        "name": "\u5b64\u53f6\u6b8b\u5f71",
        "ccfLevel": 4,
        "title": "\u6700\u5927\u534a\u8fde\u901a\u5b50\u56fe"
    },
    {
        "content": "# \u5f3a\u8fde\u901a\u5206\u91cf+\u52a8\u6001\u89c4\u5212\n[P2272](https://www.luogu.org/problem/P2272)\n\u5728\u6709\u5411\u56fe$G$\u4e2d\uff0c\u5982\u679c\u4e24\u4e2a\u9876\u70b9$u_{i}$\uff0c$u_{j}$\u95f4\u6709\u4e00\u6761\u4ece$u_{i}$\u5230$u_{j}$\u7684\u6709\u5411\u8def\u5f84\uff0c\u540c\u65f6\u8fd8\u6709\u4e00\u6761\u4ece$u_{j}$\u5230$u_{i}$\u7684\u6709\u5411\u8def\u5f84\uff0c\u5219\u79f0\u4e24\u4e2a\u9876\u70b9\u5f3a\u8fde\u901a\uff08strongly connected\uff09\u3002\u5982\u679c\u6709\u5411\u56fe$G$\u7684\u6bcf\u4e24\u4e2a\u9876\u70b9\u90fd\u5f3a\u8fde\u901a\uff0c\u79f0$G$\u662f\u4e00\u4e2a\u5f3a\u8fde\u901a\u56fe\u3002\u6709\u5411\u56fe\u7684\u6781\u5927\u5f3a\u8fde\u901a\u5b50\u56fe\uff0c\u79f0\u4e3a\u5f3a\u8fde\u901a\u5206\u91cf\uff08strongly connected components\uff09\u3002\n\u663e\u7136\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf$S\\in G$\uff0c\u5b83\u90fd\u662f\u4e00\u4e2a\u534a\u8fde\u901a\u5b50\u56fe\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5148\u7f29\u70b9\u3002\u7f29\u70b9\u4e4b\u540e\uff0c\u539f\u56fe\u53d8\u6210\u4e86\u4e00\u4e2aDAG\uff08\u6709\u5411\u65e0\u73af\u56fe\uff09\uff0c\u663e\u7136\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u6761DAG\u4e2d\u7684\u94fe\uff0c\u5b83\u90fd\u662f\u4e00\u4e2a\u534a\u8fde\u901a\u5b50\u56fe\uff0c\u6240\u4ee5\u9898\u76ee\u4e2d\u7684$K$\u5c31\u662fDAG\u4e2d\u6700\u5927\u94fe\u7684\u9876\u70b9\u4e2a\u6570\uff0c$C$\u5c31\u662fDAG\u4e2d\u4e0d\u540c\u7684\u6700\u5927\u94fe\u6709\u591a\u5c11\u4e2a\u3002\n\u8bbe$size(u)$\u8868\u793a\u9876\u70b9$u$\u4ee3\u8868\u7684\u5f3a\u8fde\u901a\u5206\u91cf$S$\u4e2d\u7684\u9876\u70b9\u4e2a\u6570\uff0c$f(u)$\u8868\u793a\u4ece\u9876\u70b9$u$\u5f00\u59cb\u5ef6\u4f38\u7684\u6700\u5927\u94fe\u7684\u9876\u70b9\u4e2a\u6570\uff0c$d(u)$\u8868\u793a\u4ece\u9876\u70b9$u$\u5f00\u59cb\u5ef6\u4f38\u7684\u4e0d\u540c\u7684\u6700\u5927\u94fe\u6709\u591a\u5c11\u4e2a\uff0c\u5219\u6709\uff1a\n$f(u)=size(u)+max(f(v))\\quad(u\\to v)$\n$d(u)=\\sum d(v)\\quad(u\\to v,size(u)+f(v)=f(u))$\n\u6bcf\u6b21\u4ece\u4e00\u4e2a\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\u7684\u9876\u70b9\u5f00\u59cb\u505a\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u56de\u6eaf\u65f6\u8ba1\u7b97\u6bcf\u4e2a\u9876\u70b9\u7684$f$\uff0c$d$\u503c\u3002$K$\uff0c$C$\u4e5f\u53ef\u4ee5\u6309\u7167\u76f8\u540c\u7684\u65b9\u5f0f\u8fdb\u884c\u66f4\u65b0\u3002\n```cpp\n#include<map>\n#include<stack>\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nconst int MAXN=(int)1e5+5,MAXM=(int)1e6+5;\nmap<int,bool>M[MAXN];\nstack<int>S;\nint lw[MAXN],siz[MAXN],scc[MAXN],f[MAXN],d[MAXN];\nint hed1[MAXN],nxt1[MAXM],to1[MAXM],hed2[MAXN],nxt2[MAXM],to2[MAXM];\nbool vis[MAXN];\nint x,cnt,tim,scclen,mx,ans;\ninline void add1(int a,int b){\n\tnxt1[++cnt]=hed1[a];\n\tto1[cnt]=b;\n\thed1[a]=cnt;\n}\nvoid dfs1(int u){\n\tint dfn=lw[u]=++tim;\n\tS.push(u);\n\tfor(register int i=hed1[u];i;i=nxt1[i]){\n\t\tif(!lw[to1[i]])\n\t\t\tdfs1(to1[i]);\n\t\tif(!scc[to1[i]])\n\t\t\tlw[u]=min(lw[u],lw[to1[i]]);\n\t}\n\tif(!(lw[u]^dfn)){\n\t\tscclen++;\n\t\twhile(1){\n\t\t\tint pnt=S.top();\n\t\t\tS.pop();\n\t\t\tsiz[scclen]++;\n\t\t\tscc[pnt]=scclen;\n\t\t\tif(!(pnt^u))\n\t\t\t\tbreak;\n\t\t}\n\t\tf[scclen]=siz[scclen];\n\t\td[scclen]=1;\n\t}\n}\ninline void add2(int a,int b){\n\tnxt2[++cnt]=hed2[a];\n\tto2[cnt]=b;\n\thed2[a]=cnt;\n}\nvoid dfs2(int u){\n\tvis[u]=1;\n\tfor(register int i=hed2[u];i;i=nxt2[i]){\n\t\tif(!vis[to2[i]])\n\t\t\tdfs2(to2[i]);\n\t\tif(f[to2[i]]+siz[u]>f[u]){\n\t\t\tf[u]=f[to2[i]]+siz[u];\n\t\t\td[u]=d[to2[i]];\n\t\t}\n\t\telse if(!(f[to2[i]]+siz[u]^f[u]))\n\t\t\t(d[u]+=d[to2[i]])%=x;\n\t}\n\tif(f[u]>mx){\n\t\tmx=f[u];\n\t\tans=d[u];\n\t}\n\telse if(!(f[u]^mx))\n\t\t(ans+=d[u])%=x;\n}\nint main(){\n\tint n,m;\n\tscanf(\"%d%d%d\",&n,&m,&x);\n\tfor(register int i=1;i<=m;i++){\n\t\tint a,b;\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tadd1(a,b);\n\t}\n\tfor(register int i=1;i<=n;i++)\n\t\tif(!lw[i])\n\t\t\tdfs1(i);\n\tcnt=0;\n\tfor(register int i=1;i<=n;i++)\n\t\tfor(register int j=hed1[i];j;j=nxt1[j])\n\t\t\tif(scc[i]^scc[to1[j]]&&!M[scc[i]][scc[to1[j]]]){\n\t\t\t\tadd2(scc[i],scc[to1[j]]);\n\t\t\t\tM[scc[i]][scc[to1[j]]]=1;\n\t\t\t}\n\tfor(register int i=1;i<=scclen;i++)\n\t\tif(!vis[i])\n\t\t\tdfs2(i);\n\tprintf(\"%d\\n%d\\n\",mx,ans);\n\treturn 0;\n}\n\n```",
        "postTime": 1570026015,
        "uid": 37151,
        "name": "jrzs",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2272 \u3010[ZJOI2007]\u6700\u5927\u534a\u8fde\u901a\u5b50\u56fe\u3011"
    },
    {
        "content": "**\u4e00\u822c\u7528\u5230tarjan\u7b97\u6cd5\u7684\u9898\u76ee\u6b65\u9aa4\u90fd\u975e\u5e38\u76f8\u4f3c\uff1a**\n1. **tarjan\u7b97\u6cd5**\n2. **\u7f29\u70b9\uff0c\u5efa\u56fe\uff08\u8fd9\u91cc\u8981\u5224\u91cd\uff09**\n3. **\u6309\u7167\u62d3\u6251\u5e8f\u9012\u63a8\uff08\u8fd9\u91cc\u7f29\u70b9\u4ee5\u540e\u9006\u5411\u5c31\u5df2\u7ecf\u662f\u62d3\u6251\u5e8f\u4e86\uff09/ \u5faa\u73af\u904d\u5386\u65b0\u56fe\u6c42\u89e3\u7b54\u6848\u3002**\n\n\u5bfc\u51fa\u5b50\u56fe\uff1a\u70b9\u662f\u539f\u56fe\u7684\u5b50\u96c6\uff0c\u8fb9\u4e00\u5b9a\u5305\u542b\u4e0e\u5b50\u56fe\u4e2d\u6240\u6709\u70b9\u6709\u5173\u7684\u8fb9\u3002\n\u534a\u8054\u901a\u5b50\u56fe\uff1a\u6240\u6709\u7684\u4e24\u4e2a\u70b9\uff0c\u6211\u8981\u4e48\u53ef\u4ee5\u76f4\u63a5\u4e00\u6761\u8def\u8fc7\u53bb\uff0c\u8981\u4e48\u4f60\u53ef\u4ee5\u76f4\u63a5\u8fc7\u6765\u3002\n \u663e\u7136\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf$S\\in G$\uff0c\u5b83\u4e00\u5b9a\u4e00\u4e2a\u534a\u8fde\u901a\u5b50\u56fe\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5148\u7f29\u70b9\u3002\u7f29\u70b9\u4e4b\u540e\uff0c\u539f\u56fe\u53d8\u6210\u4e86\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\uff0c\u663e\u7136\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u6761DAG\u4e2d\u7684\u4e00\u6761\u5355\u5411\u5230\u8fbe\u7684\u94fe\uff0c\u5b83\u90fd\u662f\u4e00\u4e2a\u534a\u8fde\u901a\u5b50\u56fe\u3002\n\n\u6240\u4ee5\u7b54\u6848K\u5c31\u662fDAG\u4e2d\u6700\u5927\u94fe\u7684\u9876\u70b9\u4e2a\u6570\uff0c\u7b54\u6848C\u5c31\u662fDAG\u4e2d\u4e0d\u540c\u7684\u6700\u5927\u94fe\u6709\u591a\u5c11\u79cd\u3002\n\u7531\u4e8e\u6574\u4e2aDAG\u6309\u987a\u5e8f\u5df2\u7ecf\u662f\u4e00\u4e2a\u62d3\u6251\u5e8f\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u9012\u63a8DP\u7ebf\u6027$O(n)$\u6c42\u7b54\u6848\u3002 \n\n\n\u672c\u9898\u9700\u8981\u5224\u91cd\u53bb\u91cd\uff0c\u56e0\u4e3a\u7b2c\u4e8c\u95ee\u662f\u603b\u7684\u65b9\u6848\u6570\uff0c\u5982\u679c\u8fb9\u662f\u4e00\u6478\u4e00\u6837\u7684\u90a3\u4e48\u65b9\u6848\u5e94\u8be5\u662f\u540c\u4e00\u79cd\uff0c\u6240\u4ee5\u5982\u679c\u4e0d\u5224\u91cd\u5c31\u4f1a\u5f71\u54cd\u6700\u540e\u7684\u7b54\u6848\u3002\u6211\u4eec\u76f4\u63a5\u7528\u4e00\u4e2aset\u5224\u91cd\uff0c\u987a\u4fbf\u7528\u5230\u4e00\u4e2a\u5de7\u5999\u7684hash\uff0c\u56e0\u4e3a\u6211\u4eec\u4e00\u5171\u5c31\u53ea\u6709100000\u4e2a\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u628a\u6240\u6709\u7684\u70b9\u90fd\u6620\u5c04\u5230100000+v\u5373\u53ef\uff0c\u4e0d\u4f1a\u4ea7\u751f\u51b2\u7a81\u3002\n\u9700\u8981\u6ce8\u610f\u7684\u662f\u5efa\u5b8c\u7684\u56fe\u662f\u9006\u62d3\u6251\u5e8f,\u6309\u7167\u62d3\u6251\u5e8f\u9012\u63a8DP,\u6240\u4ee5\u5fc5\u987b\u5012\u7740\u6765\u5faa\u73afDP\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<unordered_set>\n\nusing namespace std;\n\nconst int N = 100007, M = 2000007, INF = 0x3f3f3f3f;\n\ntypedef long long ll;\nint mod;\nint n, m;\nint dfn[N], low[N], num;\nint ver[M], edge[M], head[N], nex[M], tot;\nint h[N];\n\nint Size[N], scc_cnt, scc_id[N];\nint stk[N], top, ins[N];\n\nint f[N], g[N];//\u9876\u70b9\u4e2a\u6570\u548c\u65b9\u6848\u6570\n\nvoid add(int h[],int x,int y){\n    ver[tot] = y;\n    nex[tot] = h[x];\n    h[x] = tot ++ ;\n}\n\nvoid tarjan(int x){\n    dfn[x] = low[x] = ++ num;\n    stk[ ++ top] = x;\n    ins[x] = true;\n\n    for(int i = head[x];~i;i = nex[i]){\n        int y = ver[i];\n        if(!dfn[y]){\n            tarjan(y);\n            low[x] = min(low[x],low[y]);\n        }\n        else if(ins[y]){\n            low[x] = min(low[x], dfn[y]);\n        }\n    }\n\n    if(dfn[x] == low[x]){\n        int y;\n        ++ scc_cnt;\n        do{\n            y = stk[top -- ];\n            ins[y] = false;\n            scc_id[y] = scc_cnt;\n            Size[scc_cnt] ++ ;\n        }while(x != y);\n    }\n}\n\nint main()\n{\n    memset(head,-1,sizeof head);\n    memset(h,-1,sizeof h);\n    scanf(\"%d%d%d\",&n,&m,&mod);\n    while(m -- ){\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        add(head,x,y);\n    }\n\n    for(int i = 1;i <= n;++i)\n        if(!dfn[i])\n        tarjan(i);\n\n    unordered_set<ll>st;\n    //(u,v) -> u * 1000000 + v;\n    //\u56e0\u4e3a\u4e00\u5171\u53ea\u6709100000\u4e2a\u70b9\n    for(int i = 1;i <= n;++i){\n        for(int j = head[i];~j;j = nex[j]){\n            int k = ver[j];\n            int a = scc_id[i], b = scc_id[k];\n            ll hash = a * 100000ll + b;\n            //\u5efa\u65b0\u56fe\u5e76\u5224\u91cd\n            if(a != b && !st.count(hash)){\n                add(h,a,b);\n                st.insert(hash);\n            }\n        }\n    }\n\n    for(int i = scc_cnt;i >= 1;-- i){//\u5efa\u5b8c\u7684\u56fe\u662f\u9006\u62d3\u6251\u5e8f,\u6309\u7167\u62d3\u6251\u5e8f\u9012\u63a8,\u6240\u4ee5\u5fc5\u987b\u5012\u7740\u6765\n        if(!f[i]){\n            f[i] = Size[i];\n            g[i] = 1;\n        }\n        for(int j = h[i];~j;j = nex[j]){\n            int k = ver[j];\n            if(f[k] < f[i] + Size[k]){\n                f[k] = f[i] + Size[k];\n                g[k] = g[i];\n            }\n            else if(f[k] == f[i] + Size[k]){\n                g[k] = (g[k] + g[i]) % mod;\n            }\n        }\n    }\n\n    ll maxx = 0,sum = 0;\n    for(int i = 1;i <= n;++i){\n        if(f[i] > maxx){\n            maxx = f[i];\n            sum = g[i];\n        }\n        else if(f[i] == maxx){\n            sum = (sum + g[i] ) % mod;\n        }\n    }\n    printf(\"%lld\\n%lld\\n\",maxx, sum);\n    return 0;\n}\n\n```\n",
        "postTime": 1595859323,
        "uid": 262605,
        "name": "fanfansann",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2272 \u3010[ZJOI2007]\u6700\u5927\u534a\u8fde\u901a\u5b50\u56fe\u3011"
    },
    {
        "content": "\u6b64blog\u53c2\u8003@ So_what \u5de8\u4f6c\u7684\u9898\u89e3 orz\n\n### \u7ed952\u5206\u7684\u524d\u6392\u63d0\u9192\uff1a\n\n@ xiaofulll \u5de8\u4f6c\u63d0\u9192\u60a8\uff1a\u8bb0\u5f97\u5728Tarjan\u540e\u53bb\u91cd\u8fb9\uff0c\u5426\u5219\u65b9\u6848\u6570\u4f1a\u6700\u957f\u94fe\u7684\u6570\u91cf\u4f1a\u53d7\u5230\u5f71\u54cd\n\n### \u9898\u610f\u7b80\u5316\uff08~~\u8fd9\u9898\u7684\u9898\u9762\u592a\u6bd2\u7624\u4e86~~\uff09\uff1a\n\n\u7ed9\u5b9a\u4e00\u4e2a\u56fe\uff0c\u6c42\u8fd9\u4e2a\u56fe\u7684\u6700\u957f\u94fe\u6240\u5305\u542b\u7684\u8282\u70b9\u4e2a\u6570\u4ee5\u53ca\u6700\u957f\u94fe\u7684\u4e2a\u6570\n\n### \u601d\u8def\uff1a\n\n\u6211\u4eec\u5148\u7528Tarjan\u628a\u56fe\u8fdb\u884c\u7f29\u70b9\uff08\u53ca\u628a\u80fd\u591f\u4e92\u76f8\u5230\u8fbe\u7684\u4e00\u4e2a\u5b50\u56fe\u7f29\u6210\u4e00\u4e2a\u70b9\uff0c\u5e76\u8bb0\u5f55\u5f53\u524d\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u8282\u70b9\u6570\uff0c\u8fd9\u6837\u4e0d\u4f1a\u5bf9\u7ed3\u679c\u8fdb\u884c\u5f71\u54cd\uff0c\u5f53\u641c\u5230\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u5f53\u524d\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u8282\u70b9\u6570\u52a0\u4e0a\u5c31\u597d\u4e86\uff09\uff0c\u7136\u540e\u6211\u4eec\u5bf9\u8fd9\u4e2a\u7f29\u8fc7\u70b9\u7684\u56fe\u91cd\u65b0\u8fdb\u884c\u5efa\u8fb9\uff08\u6ce8\u610f\uff1a\u91cd\u65b0\u5efa\u5b8c\u56fe\u540e\uff0c\u53ef\u80fd\u4f1a\u6709\u91cd\u8fb9\uff0c\u9700\u8981\u5224\u91cd\uff0c\u5426\u5219\u6700\u540e\u6700\u957f\u94fe\u7684\u6570\u91cf\u4f1a\u53d7\u5230\u5f71\u54cd\uff09\uff0c\u6700\u540e\u6211\u4eec\u62d3\u6251\u52a0dp\u628a\u6700\u957f\u94fe\u7684\u8282\u70b9\u7684\u6570\u91cf\u548c\u6700\u957f\u94fe\u7684\u6570\u91cf\u6c42\u51fa\uff0c\u5b9a\u4e49dis[i]\u8868\u793a\u4ece\u7b2ci\u4e2a\u70b9\u5f00\u59cb\u5230\u8fbe\u4efb\u610f\u70b9\u7684\u6700\u957f\u94fe\u7684\u8282\u70b9\u7684\u4e2a\u6570\uff0ccnt[i]\u8868\u793a\u4ecei\u5f00\u59cb\u53ef\u4ee5\u5230\u8fbe\u7684\u6700\u957f\u94fe\u7684\u6570\u91cf\uff0c\u5e76\u4e14\u8bb0\u5f55\u6700\u957f\u94fe\u7684\u8282\u70b9\u4e2a\u6570\u3002\u6700\u540e\u679a\u4e3e1 ~ n\uff0c\u5982\u679cdis[i] == \u6700\u957f\u94fe\u7684\u8282\u70b9\u7684\u4e2a\u6570\uff0c\u90a3\u4e48ans\u5c31\u52a0\u4e0a\u5f53\u524d\u70b9\u53ef\u4ee5\u5230\u8fbe\u7684\u6700\u957f\u94fe\u7684\u6570\u91cf\uff0c\u5e76\u4e14%MOD\uff0c\u6700\u540e\u5148\u8f93\u51fa\u6700\u957f\u94fe\u7684\u8282\u70b9\u7684\u4e2a\u6570\uff0c\u518d\u8f93\u51faans\u3002\uff08\u5982\u4f55\u62d3\u6251 + dp\u5728\u4ee3\u7801\u4e2d\u8bb2\uff09\n\n### \u5168\u6587 + \u4ee3\u7801\uff1a \n\nhttps://www.cnblogs.com/qqq1112/p/11625728.html",
        "postTime": 1570317436,
        "uid": 143681,
        "name": "Strong_Jelly",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2272 \u3010[ZJOI2007]\u6700\u5927\u534a\u8fde\u901a\u5b50\u56fe\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u6211\u6570\u7ec4\u5f00\u9519\u4e86\u8c03\u4e86\u5f88\u4e45\u3002\u3002\n\n\n\u6309\u7167\u9898\u610f\u6765\u8bf4\u5f88\u660e\u663e\u7684\u662f\u5982\u679c\u662f\u4e00\u4e2a\u73af\u7684\u8bdd\u5b83\u80af\u5b9a\u7b26\u5408\u6761\u4ef6\uff0c\u800c\u4e14\u4e3a\u4e86\u6ee1\u8db3\u6700\u5927\u7684\u6761\u4ef6\uff0c\u73af\u91cc\u7684\u70b9\u4e00\u5b9a\u662f\u4e00\u8d77\u53d6\u7684\uff0c\u6240\u4ee5\u5148\u7528tarjan\u7f29\u70b9\u3002\n\n\n\u7f29\u70b9\u540e\u5b9e\u8d28\u4e0a\u5c31\u662f\u53d6\u4e00\u6761\u6700\u957f\u94fe\u3002\n\n\n\u7136\u540e\u5f88\u660e\u663e\u5c31\u53ef\u4ee5\u6309\u7167\u62d3\u6251\u5e8f\u6765dp\u4e86,side[i]\u8868\u793a\u5230\u5f53\u524d\u8fd9\u4e2a\u70b9\u4e3a\u6b62\uff0c\u94fe\u7684\u6700\u957f\u7684\u957f\u5ea6\u662f\u591a\u5c11\uff1fdp[i]\u8868\u793a\u5982\u679c\u53d6\u6700\u957f\u94fe\u7684\u8bdd\u6709\u51e0\u79cd\u53ef\u80fd\u6027\u3002\n\n\n\u7136\u540e\u8f6c\u79fb\u5c31\u662f\uff0c\n\n\n\n\nif (side[i]==side[j]+size[i]) dp[i]+=dp[j];\n\nelse if (side[i]<side[j]+size[i]) dp[i]=dp[j];\n\nsize[i]\u8868\u793ai\u8fd9\u4e2a\u70b9\u5728\u672a\u7f29\u70b9\u4e4b\u524d\u6709\u591a\u5c11\u4e2a\u70b9\uff0cj\u5230i\u6709\u4e00\u6761\u8fb9\u3002\n\n\n\u8fd8\u6709\u4e00\u4e2a\u70b9\u5c31\u662f\uff0c\u6211\u4eec\u53d6\u7684\u534a\u8054\u901a\u5b50\u56fe\u662f\u70b9\u96c6\uff0c\u6240\u4ee5\u8981\u53bb\u6389\u91cd\u8fb9\uff0c\u624d\u80fd\u8ba9\u4e0a\u8ff0dp\u6709\u6548\u3002\n\n\n```cpp\n#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<cstdio>\n#include<queue>\n#include<stack>\n#include<cstdlib>\n#define maxn 200009\n#define maxm 2000009\nusing namespace std;\ntypedef long long ll;\nstruct ding2{\n  int lef,righ;\n}bia[maxm];\nstruct ding{\n  int to,next;\n}edge[maxm];\nqueue<int>q;\nint num,n,m,ans;\nint head[maxn],ru[maxn],side[maxn],size[maxn];\nll mo,dp[maxn],ans2;\nint cnt;\nvoid add(int u,int v)\n{\n  edge[++cnt].to=v;edge[cnt].next=head[u];head[u]=cnt;\n}\nvoid tuopu()\n{\n  while (!q.empty())\n  {\n      int now=q.front();q.pop();\n      ans=max(ans,side[now]);\n      for (int i=head[now];i;i=edge[i].next)\n      {\n        int y=edge[i].to; ru[y]--;\n        if (side[y]<size[y]+side[now])\n        {\n        side[y]=size[y]+side[now];\n        dp[y]=dp[now]; \n      }\n      else if (side[y]==size[y]+side[now])\n      {\n       dp[y]=(dp[y]+dp[now])%mo;\n      }\n        if (ru[y]==0) q.push(y);\n    }\n  }\n}\nstack<int>s;\nint low[maxn],nod[maxn],dfn[maxn],p=0;\nvector<int>g[maxn];\nbool in[maxn];\nvoid tarjan(int x)\n{\n  dfn[x]=low[x]=++p;\n  s.push(x);in[x]=true;\n  for (int i=0;i<g[x].size();i++)\n  {\n      int y=g[x][i];\n      if (!dfn[y]) tarjan(y),low[x]=min(low[x],low[y]);\n      else if (in[y]) low[x]=min(low[x],dfn[y]);\n  }\n  if (low[x]==dfn[x])\n  {\n       ++num; \n       while (s.top()!=x)\n       {\n         nod[s.top()]=num; size[num]++;\n       in[s.top()]=false;s.pop();     \n     }\n     nod[s.top()]=num;size[num]++;in[s.top()]=false;s.pop();\n  }\n}\nbool cmp(ding2 t1,ding2 t2)\n{\n  return (t1.lef==t2.lef?t1.righ<t2.righ:t1.lef<t2.lef);\n}\nint main()\n{\n  //freopen(\"semi5.in\",\"r\",stdin);\n  //freopen(\"haha.out\",\"w\",stdout);\n  scanf(\"%d%d%lld\",&n,&m,&mo);\n  int x,y;\n  for (int i=1;i<=m;i++)\n  {\n      scanf(\"%d%d\",&x,&y);\n      bia[i].lef=x;bia[i].righ=y;\n      g[x].push_back(y);\n  }\n  num=0;\n//\u7f29\u70b9\n  for (int i=1;i<=n;i++) if (dfn[i]==0) tarjan(i);\n  for (int i=1;i<=m;i++) \n  {\n   bia[i].lef=nod[bia[i].lef];\n   bia[i].righ=nod[bia[i].righ];\n  }\n  sort(bia+1,bia+1+m,cmp);\n//\u53bb\u91cd\u8fb9\n  int lastx=0,lasty=0;\n  for (int i=1;i<=m;i++)\n  {\n   int p1=bia[i].lef,p2=bia[i].righ;\n   if ((p1!=p2)&&\n   (!((p1==lastx)&&(p2==lasty))))\n   {add(p1,p2); ru[p2]++;}\n   lastx=p1;lasty=p2;\n  }\n  for (int i=1;i<=num;i++)\n  if (ru[i]==0) q.push(i),side[i]=size[i],dp[i]=1;\n//dp\n  tuopu();\n  for (int i=1;i<=num;i++)\n  if (side[i]==ans) ans2=(ans2+dp[i])%mo;\n//\u679a\u4e3e\u54ea\u4e9b\u70b9\u662f\u94fe\u7684\u7ec8\u70b9\u6765\u7edf\u8ba1\u7b54\u6848\n  printf(\"%d\\n%lld\\n\",ans,ans2);\n  return 0;\n}\n\n```",
        "postTime": 1513239924,
        "uid": 21621,
        "name": "nihanchu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2272 \u3010[ZJOI2007]\u6700\u5927\u534a\u8fde\u901a\u5b50\u56fe\u3011"
    },
    {
        "content": "# [\u3010ZJOI2007\u3011\u6700\u5927\u534a\u8054\u901a\u5b50\u56fe](https://www.luogu.org/problemnew/show/P2272)\n\n**~~\u9898\u610f\u4e0d\u4f5c\u8fc7\u591a\u89e3\u91ca~~**\n\n## $Solution$\n\n\u9996\u5148\uff0c\u4e00\u4e2a\u663e\u7136\u7684\u4e8b\u5b9e\u662f\uff0c\u65e0\u5411\u56fe$G$\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e3a\u4e00\u4e2a\u534a\u8054\u901a\u5b50\u56fe\u3002\n\n\u5176\u6b21\uff0c\u65e0\u5411\u56fe$G$\u4e2d\u7684\u6bcf\u4e00\u6761\u94fe\u4e3a\u4e00\u4e2a\u534a\u8054\u901a\u5b50\u56fe\u3002\n\n\u8003\u8651\u5c06$G$\u7f29\u70b9\uff0c \u5728\u7f29\u70b9\u540e\u7684$DAG$\u4e2d\u8dd1$DP$\uff0c\u672c\u9898\u5c31\u5207\u5b8c\u4e86\u3002\n\n**\u4e00\u4e9b\u6ce8\u610f\u70b9\uff1a**\n\n$1.$\u8dd1$DP$\u65f6\u8981\u5148\u62d3\u6251\u6392\u5e8f\uff0c~~\u8fd9\u70b9\u5e94\u8be5\u4e0d\u7528\u8bf4\u5427\u3002~~\n\n$2.$\u5728\u7f29\u70b9\u540e\u4e00\u5b9a\u8981\u8bb0\u5f97**\u53bb\u91cd!!!** \u5426\u5219\u4f1a\u7b54\u6848\u53ef\u80fd\u4f1a\u7edf\u8ba1\u591a\u6b21\u3002\n\n## $Code$\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <queue>\n\ninline int read() {\n    int x = 0; char c = getchar();\n    for (; c < 48 || c > 57; c = getchar());\n    for (; c >= 48 && c <= 57; c = getchar()) x = (x + (x << 2) << 1) + (c ^ 48);\n    return x;\n}\n\nconst int N = 1e5 + 5, M = 1e6 + 5;\nint n, m, Mod, num, head[N], top, st[N], tim, dfn[N], low[N], bel[N];\nint cnt, Num, Head[N], size[N], du[N], f[N], g[N], ans1, ans2;\nbool ins[N], vis[N];\nstd::queue <int> q;\nstruct edge {\n    int nxt, to;\n} e[M], ed[M];\n\nstruct Edge {\n    int u, v;\n    inline bool operator < (const Edge tmp) const {\n        return u == tmp.u ? v < tmp.v : u < tmp.u;\n    }\n} Ed[M];\n\ninline void add(int u, int v) {\n    e[++num].nxt = head[u], e[num].to = v, head[u] = num;\n}\n\ninline void Add(int u, int v) {\n    ed[++num].nxt = Head[u], ed[num].to = v, Head[u] = num;\n}\n\nvoid tarjan(int u) {\n    low[u] = dfn[u] = ++tim, st[++top] = u, ins[u] = 1;\n    for (int i = head[u], v; i; i = e[i].nxt)\n        if (!dfn[v = e[i].to]) tarjan(v), low[u] = std::min(low[u], low[v]);\n        else if (ins[v]) low[u] = std::min(low[u], dfn[v]);\n    if (dfn[u] == low[u]) {\n        int v; ++cnt;\n        do {\n            v = st[top--];\n            bel[v] = cnt, ins[v] = 0;\n            ++size[cnt];\n        } while (u != v);\n    }\n}\n\nint main() {\n    n = read(), m = read(), Mod = read();\n    for (int i = 1; i <= m; ++i) {\n        int u = read(), v = read();\n        add(u, v);\n    }\n    for (int i = 1; i <= n; ++i) if (!dfn[i]) tarjan(i);\n    for (int u = 1; u <= n; ++u)\n        for (int i = head[u], v; i; i = e[i].nxt)\n            if (bel[u] != bel[v = e[i].to]) Ed[++Num] = (Edge) {bel[u], bel[v]};\n    std::sort(Ed + 1, Ed + 1 + Num), num = 0;\n    for (int i = 1; i <= Num; ++i) {\n        while (Ed[i].u == Ed[i + 1].u && Ed[i].v == Ed[i + 1].v) ++i;\n        Add(Ed[i].u, Ed[i].v), ++du[Ed[i].v];\n    }\n    for (int i = 1; i <= cnt; ++i) {\n        f[i] = size[i], g[i] = 1;\n        if (!du[i]) q.push(i);\n    }\n    while (!q.empty()) {\n        int u = q.front(); q.pop();\n        // printf(\"%d \", u);\n        for (int i = Head[u], v; i; i = ed[i].nxt)\n            if (du[v = ed[i].to]) {\n                if (f[v] < f[u] + size[v]) {\n                    f[v] = f[u] + size[v];\n                    g[v] = g[u];\n                } else if (f[v] == f[u] + size[v]) (g[v] += g[u]) %= Mod;\n                if (!--du[v]) q.push(v);\n            }\n    }\n    for (int i = 1; i <= cnt; ++i)\n        if (f[i] > ans1) ans1 = f[i], ans2 = g[i];\n        else if (f[i] == ans1) (ans2 += g[i]) %= Mod;\n    printf(\"%d\\n%d\\n\", ans1, ans2);\n    return 0;\n}\n```",
        "postTime": 1558880748,
        "uid": 60504,
        "name": "Karnage",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2272 \u3010[ZJOI2007]\u6700\u5927\u534a\u8fde\u901a\u5b50\u56fe\u3011"
    },
    {
        "content": "\u9996\u5148\u5047\u5982\u8fd9\u662f\u4e2aDAG\uff0c\u90a3\u4e48\u5c31\u53ea\u8981\u6c42\u51fa\u56fe\u4e2d\u6700\u957f\u94fe\u548c\u6700\u957f\u94fe\u4e2a\u6570\u5c31\u884c\u4e86\u3002\n\u6240\u4ee5\u5148\u7528tarjan\u7f29\u70b9\uff0c\u7136\u540e\u628a\u91cd\u8fb9\u53bb\u6389\uff0c\u6c42\u6700\u957f\u94fe\u7528\u62d3\u6251\u6392\u5e8f\u5373\u53ef\u3002\n\n\u6700\u957f\u94fe\u4e2a\u6570\u9700\u8981DP\uff0c\u8bbe f [ i ]\u8868\u793a\u56fe\u4e2d\u4ee5 i \u4e3a\u7ec8\u70b9\u7684\u6700\u957f\u94fe\u4e2a\u6570\uff0c\u5219 f [ i ] \u7b49\u4e8e\u4e0e i \u8fde\u901a\u5e76\u4e14\u8ddd\u79bb\u662f\u8d77\u70b9\u5230 i \u7684\u6700\u957f\u8ddd\u79bb\u7684\u70b9\u7684 f \u503c\u4e4b\u548c\u3002\n\u9644\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint n,m,mx,x[1000001],y[1000001],fir[100001],nex[1000001],ft[100001],inx[100001];\nint to[1000001],kt,las[100001],ru[1000001],ins[100001],h,t,ans,f[100001],res;\nint DFN[100001],low[100001],st[100001],cn[100001],top,ex,cnt,rst[100001],u;\ninline int read(){\n\tint x=0;char c;\n\tfor(c=getchar();c<'0'||c>'9';c=getchar());\n\twhile(c>='0'&&c<='9')x=x*10+c-'0',c=getchar();\n\treturn x;\n}//\u8bfb\u5165\u4f18\u5316\nvoid add(int x,int y){\n\tkt++;nex[kt]=fir[x];\n\tfir[x]=kt;to[kt]=y;\n}\nvoid tarjan(int x){int v;\n\tDFN[x]=low[x]=++ex;st[++top]=x;\n\tfor(int p=fir[x];p;p=nex[p]){\n\t\tif(!DFN[to[p]]){\n\t\t\ttarjan(to[p]);\n\t\t\tlow[x]=min(low[x],low[to[p]]);\n\t\t}\n\t\telse if(!cn[to[p]])low[x]=min(low[x],DFN[to[p]]);\n\t}\n\tif(low[x]==DFN[x]){\n\t\tcn[x]=++cnt;ins[cnt]++;\n\t\twhile(st[top]!=x)cn[st[top]]=cnt,top--,ins[cnt]++;\n\t\ttop--;\n\t}\n}//ins\u662f\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u5927\u5c0f\nbool cmp(int a,int b){if(x[a]!=x[b])return x[a]<x[b];return y[a]<y[b];}\nint main(){\n\tn=read();m=read();mx=read();\n\tfor(int i=1;i<=m;i++)x[i]=read(),y[i]=read(),add(x[i],y[i]);\n\tfor(int i=1;i<=n;i++)if(!DFN[i])tarjan(i);\n\tfor(int i=1;i<=m;i++)ru[i]=i,x[i]=cn[x[i]],y[i]=cn[y[i]];\n\tsort(ru+1,ru+1+m,cmp);kt=0;memset(fir,0,sizeof(fir));\n\tfor(int i=1;i<=m;i++){\n\t\tif((x[ru[i]]!=y[ru[i]])&&(x[ru[i]]!=x[ru[i-1]]||y[ru[i]]!=y[ru[i-1]])){\n\t\t\tft[y[ru[i]]]++;\n\t\t\tadd(x[ru[i]],y[ru[i]]);\n\t\t}\n\t}//\u4ee5\u4e0a\u662f\u53bb\u91cd\u8fb9\uff0c\u6784\u65b0\u56fe\n\tfor(int i=1;i<=cnt;i++)\n\tif(!ft[i]){\n\t\trst[++t]=i;f[i]=ins[i];\n\t\tinx[i]=1;if(f[ans]<f[i])ans=i;\n\t}\n\twhile(h<t){\n\t\th++;u=rst[h];\n\t\tfor(int p=fir[u];p;p=nex[p]){\n\t\t\tft[to[p]]--;\n\t\t\tif(f[to[p]]<f[u]+ins[to[p]]){\n\t\t\t\tf[to[p]]=f[u]+ins[to[p]];\n\t\t\t\tinx[to[p]]=0;if(f[ans]<f[to[p]])ans=to[p];\n\t\t\t}\n\t\t\tif(f[to[p]]==f[u]+ins[to[p]])\n\t\t\tinx[to[p]]=(inx[to[p]]+inx[u])%mx;\n\t\t\tif(!ft[to[p]])rst[++t]=to[p];\n\t\t}\n\t}//\u62d3\u6251\uff0c\u6211\u7528\u7684\u662f\u961f\u5217\n\tfor(int i=1;i<=n;i++)\n\tif(f[i]==f[ans])res=(res+inx[i])%mx;\n\tprintf(\"%d\\n%d\",f[ans],res);return 0;\n}\n```",
        "postTime": 1531300706,
        "uid": 31149,
        "name": "\u975e\u51e1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2272 \u3010[ZJOI2007]\u6700\u5927\u534a\u8fde\u901a\u5b50\u56fe\u3011"
    },
    {
        "content": "### \u524d\u666f\u63d0\u793a\u7a7a\u95f4\u8981\u5f00\u5927\u5f00\u5927\u5f00\u5927\n\n**\u6b63\u6587\uff1a**\n\n1. \u601d\u8def\uff1a\u5f53\u4f60\u8bfb\u5b8c\u9898\u540e\uff0c\u8bed\u6587\u4e0d\u9519\u7684\u8bdd\uff0c\u5c31\u80fd\u60f3\u5230\uff0c\u9898\u610f\u5c31\u662f\u6c42\u4e2a\u6700\u957f\u94fe\uff0c\u4e14\u76f8\u540c\u7684\u6709\u51e0\u6761\u3002\uff08\u8bed\u6587\u4e0d\u597d\uff0c\u591a\u8bfb\u51e0\u904d\uff09\n\n2. \u7b97\u6cd5\uff1atarjan\u7f29\u70b9+\u62d3\u6251\u6392\u5e8f+bfs\n\n3. \u6ce8\u610f\uff1a\u6b64\u9898\u6709\u91cd\u8fb9\uff0c\u867d\u7136\u4e0d\u5f71\u54cd\u7f29\u70b9\uff0c\u627e\u51fa\u7684\u6700\u957f\u94fe\uff0c\u4f46\u4f1a\u5f71\u54cd\u8def\u5f84\u7edf\u8ba1\n\t\n\t\u5904\u7406\u65b9\u5f0f\uff1a1.map\u76f4\u63a5\u5224\u65ad\uff0c\u662f\u5426\u8fde\u8fb9\uff0c\u6765\u53bb\u91cd 2. \u6392\u5e8f\u53bb\u91cd 3.\u79bb\u6563\u5316\u53bb\u91cd\n    \n    \u8fd9\u4e09\u79cd\u90fd\u884c\uff0c\u672c\u4eba\u6bd4\u8f83\u61d2\uff0c\u6240\u4ee5\u7528map\uff08\u4e0d\u8fc7\u8981\u5f00O2\uff09\n    \n4. \u91cd\u70b9\uff1abfs\u7684\u5904\u7406\uff0c\u5199\u5728\u4ee3\u7801\u4e2d\n\n**Code:**\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define il inline\nconst int maxn=1e6+5;\nconst int maxm=5e6+5;\nmap<pair<int,int>,bool>mapp;//\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u5904\u7406\u4e3apair\uff0c\u65b9\u4fbf\u53bb\u91cd\nqueue<int>q;\nint dfn[maxn],low[maxn],dfs_clock,size,tot,head[maxn],n,m,col[maxn],dp[maxn],mod,sz[maxn],x[maxn],y[maxn],rd[maxn],dis[maxn],cnt[maxn],ans_id,ans;\nstruct node{\n\tint v,nxt;\n}e[maxm];\n\nil int read(){\n\tint x=0;char a=getchar();\n\twhile(!isdigit(a)) a=getchar();\n\twhile(isdigit(a)) {x=x*10+a-'0';a=getchar();}\n\treturn x;\n}\n\nil void add(int u,int v){\n\te[++size].v=v;\n\te[size].nxt=head[u];\n\thead[u]=size;\n}\n\nstack<int>s;\nvoid tarjan(int u){//\u5e38\u89c4\u7f29\u70b9\n\ts.push(u);\n\tdfn[u]=low[u]=++dfs_clock;\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].v;\n\t\tif(!dfn[v]){\n\t\t\ttarjan(v);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}\n\t\telse if(!col[v]) low[u]=min(low[u],dfn[v]);\n\t}\n\tif(dfn[u]==low[u]){\n\t\tint k;++tot;\n\t\tdo{\n\t\t\tk=s.top();s.pop();\n\t\t\tcol[k]=tot;\n\t\t\tsz[tot]++;\n\t\t}while(k!=u);\n\t}\n}\n\nil void clear(){\n\tsize=0;\n\tmemset(e,0,sizeof(e));\n\tmemset(head,0,sizeof(head));\n}\n\nil void build(){\n\tfor(int i=1;i<=m;++i){\n\t\tint nx=col[x[i]],ny=col[y[i]];\n\t\tif(nx!=ny&&!mapp[make_pair(nx,ny)]){//map\u53bb\u91cd\uff0c\u672a\u8fde\u8fb9\u5c31\u8fde\u8d77\u6765\n\t\t\trd[ny]++;//\u7edf\u8ba1\u5165\u5ea6\uff0c\u4e3a\u62d3\u6251\u6392\u5e8f\u51c6\u5907\n\t\t\tmapp[make_pair(nx,ny)]=1;\n\t\t\tadd(nx,ny);\n\t\t}\n\t}\n}\n\nvoid bfs(){\n\twhile(!q.empty()){\n\t\tint u=q.front();q.pop();//\u53d6\u51fa\u961f\u5217\u524d\u7aef\n\t\tfor(int i=head[u];i;i=e[i].nxt){\n\t\t\tint v=e[i].v;\n\t\t\t--rd[v];//\u4f7f\u7528\uff0c\u5c31--,\u4ee5\u514d\u591a\u6b21\u7edf\u8ba1\n\t\t\tif(dis[v]<dis[u]+sz[v]){//\u82e5\u88ab\u66f4\u65b0\u6700\u957f\n\t\t\t\tdis[v]=dis[u]+sz[v];\n\t\t\t\tcnt[v]=0;//\u8def\u5f84\u6570\u91cd\u65b0\u8ba1\u7b97,\u6e050\u7684\u8bdd\uff0c\u662f\u56e0\u4e3a\u4e0b\u65b9\u7d2f\u52a0\n\t\t\t\tif(dis[ans_id]<dis[v]) ans_id=v;//\u4e0b\u6807\u66f4\u65b0\n\t\t\t}\n\t\t\tif(dis[v]==dis[u]+sz[v]) cnt[v]=(cnt[v]+cnt[u])%mod;//\u7d2f\u52a0\n\t\t\tif(!rd[v]) q.push(v);//\u7ee7\u627f\u7740\u8dd1\n\t\t}\n\t}\n}\n\nint main(){\n\tfreopen(\"semi5.in\",\"r\",stdin);\n\tn=read();m=read();mod=read();\n\tfor(int i=1;i<=m;++i){\n\t\tx[i]=read();y[i]=read();\n\t\tadd(x[i],y[i]);//\u5b58\u4e0b\u6765\uff0c\u4e8c\u6b21\u5229\u7528\n\t}\n\tfor(int i=1;i<=n;++i) if(!dfn[i]) tarjan(i);\n\tclear();\n\tbuild();\n\tfor(int i=1;i<=tot;++i){\n\t\tif(!rd[i]){//\u4ece\u5165\u5ea6\u4e3a0\u70b9\uff0c\u6240\u8dd1\u51fa\u7684\u6700\u957f\u94fe\uff0c\u4e00\u5b9a\u6bd4\u4e0d\u4ece\u5176\u8dd1\u7684\u957f\uff0c\u597d\u597d\u60f3\u60f3\n\t\t\tq.push(i);//\u653e\u5165\u961f\u5217\n\t\t\tdis[i]=sz[i];//\u66f4\u65b0\n\t\t\tcnt[i]=1;\n\t\t\tif(dis[ans_id]<dis[i]) ans_id=i;\n\t\t}\n\t}\n\tbfs();\n\tfor(int i=1;i<=n;++i)\n\t\tif(dis[i]==dis[ans_id]) ans=(ans+cnt[i])%mod;\n\tprintf(\"%d\\n%d\",dis[ans_id],ans);\n}\n```\n\nrp++",
        "postTime": 1567499191,
        "uid": 109381,
        "name": "Mosher",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2272 \u3010[ZJOI2007]\u6700\u5927\u534a\u8fde\u901a\u5b50\u56fe\u3011"
    },
    {
        "content": "**\u5927\u6982\u9898\u610f\uff1a** \u4e00\u4e2a\u56fe(\u53ef\u80fd\u6709\u73af)\uff0c\u6c42\u5176\u6700\u5927\u534a\u8054\u901a\u5b50\u56fe\u7684\u7684\u4e2a\u6570\u4ee5\u53ca\u6b21\u70b9\u6570\u7684\u534a\u8054\u901a\u5b50\u56fe\u7684\u4e2a\u6570\n\n**\u524d\u63d0\uff1a** \u6211\u4eec\u9700\u8981\u5148\u77e5\u9053\u4ec0\u4e48\u662f\u534a\u8054\u901a\uff0c\u534a\u8054\u901a\u4e0e\u5f3a\u8054\u901a\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u5f3a\u8054\u901a\u9700\u8981\u4e24\u70b9\u76f8\u4e92\u5230\u8fbe\uff0c\u800c\u534a\u8054\u901a\u53ea\u9700\u8981\u5176\u4e2d\u4e00\u4e2a\u70b9\u80fd\u5230\u53e6\u4e00\u4e2a\u70b9\u5c31\u884c\u4e86\n\n**\u601d\u8def\uff1a** \u5176\u5b9e\u534a\u8054\u901a\u56fe\u5c31\u662f\u4e00\u6761\u94fe(\u53ef\u4ee5\u6027\u611f\u7684\u7406\u89e3\u4e00\u4e0b)\uff0c\u5f53\u7136\u4e00\u4e2a\u5f3a\u8054\u901a\u4e5f\u80af\u5b9a\u662f\u534a\u8054\u901a(\u6bd4\u5982 \u73af)\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5148\u7f29\u4e00\u4e0b\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2aDAG(\u6709\u5411\u65e0\u73af\u56fe)\uff0c\u7136\u540e\u5c31\u662f\u6211\u4eec\u90fd\u5f88\u64c5\u957f\u7684\u62d3\u6251dp\u4e86\uff0c\u6ce8\u610f\u7f29\u5b8c\u70b9\u540e\uff0c\u4f1a\u6709\u5927\u91cf\u91cd\u8fb9(\u6bd4\u5982 \u8fd9\u4e2a\uff1a)\n\n![](https://cdn.luogu.com.cn/upload/pic/67206.png)\n\n**\u81f3\u4e8edp\u7684\u5408\u7406\u6027\uff1a** \u56e0\u4e3a\u6211\u4eec\u8981\u5728DAG\u91cc\u627e\u94fe\u561b\uff0c\u90a3\u4e48\u6211\u4eecdp\u7684\u8def\u5f84\u5176\u5b9e\u4e5f\u662f\u4e00\u6761\u94fe\uff0c\u6240\u4ee5\u5c31dp\u5566\n\n**\u4e3b\u8981\u6b65\u9aa4\uff1a** 1.\u7f29\u70b9 2.\u53bb\u91cd\u8fb9 3.\u62d3\u6251dp\n\n**\u4e0a\u4ee3\u7801\uff1a**\n```cpp\n# include <iostream>\n# include <cstdio>\n# include <cstring>\n# include <queue>\n# include <stack>\n# include <algorithm>\n# define FOR(i,st,ed) for(int i=st;i<=ed;++i)\n# define _FOR(u) for(int v,i=hd[u];i;i=e[i].nt)\n# define _V v=e[i].to\nusing namespace std;\nint re(){\n\tint s=0,f=1;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n\twhile(isdigit(ch)){s=(s<<1)+(s<<3)+ch-'0';ch=getchar();}\n\treturn s*f;\n}\nconst int N=1e5+7;\nconst int M=1e6+7;\nint n,m,mod;\nstruct edge{\n\tint to,nt;\n}e[M];int hd[N],cnt;\nvoid add_e(int x,int y){\n\te[++cnt]=(edge){y,hd[x]};hd[x]=cnt;\n}\n\nstruct mkt{\n\tint x,y;\n\tbool operator < (const mkt&mk) const{return x<mk.x || x==mk.x&&y<mk.y;}\n}a[M],b[M];\n\n\n------------\n//\u4e0b\u9762\u662f\u7f29\u70b9\u6a21\u677f\nint dfn[N],dji,low[N];\nstack <int> s;int c[N],cji,cn[N];\nvoid tarjan(int u){\n\tdfn[u]=low[u]=++dji;s.push(u);\n\t_FOR(u){\n\t\t_V;\n\t\tif(!dfn[v]){\n\t\t\ttarjan(v);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}\n\t\telse if(!c[v]) low[u]=min(low[u],dfn[v]);\n\t} \n\tif(dfn[u]==low[u]){\n\t\tint p;cji++;\n\t\tdo{\n\t\t\tp=s.top();s.pop();\n\t\t\tc[p]=cji;cn[cji]++;\n\t\t}while(p!=u);\n\t}\n}\n\n\n------------\n//\u62d3\u6251dp\nint ru[N];\nint dp[N],sum[N];\nqueue <int> q;\nvoid tpdp(){\n\t//FOR(i,1,cji) ;\n\tFOR(i,1,cji) if(!ru[i]) q.push(i),dp[i]=cn[i],sum[i]=1;\n\twhile(q.size()){\n\t\tint u=q.front();q.pop();\n\t\t_FOR(u){\n\t\t\t_V;\n\t\t\tif(dp[v]<dp[u]+cn[v]) dp[v]=dp[u]+cn[v],sum[v]=sum[u];\n\t\t\telse if(dp[v]==dp[u]+cn[v]) sum[v]+=sum[u],sum[v]%=mod;\n\t\t\tif(!(--ru[v])) q.push(v); \n\t\t}\n\t}\n\tint mk=0,k=0;\n\tFOR(i,1,cji){\n\t\tif(dp[i]>dp[mk]) mk=i,k=sum[i];\n\t\telse if(dp[i]==dp[mk]) k+=sum[i],k%=mod;\n\t}\n\tcout<<dp[mk]<<endl<<k;\n\t//FOR(i,1,n) cout<<dp[i]<<' '<<sum[i]<<endl;\n\t//cout<<endl<<dp[c[1]]<<' '<<sum[c[1]];\n}\nint main(){\n\tn=re();m=re();mod=re();\n\tFOR(i,1,m){\n\t\tadd_e(a[i].x=re(),a[i].y=re());\n\t}\n\tFOR(i,1,n) if(!dfn[i]) tarjan(i);\n\t//\u4e0b\u9762\u662f\u79bb\u6563\u5316 \u53bb\u91cd\n\tmemset(e,0,sizeof(e));cnt=0;memset(hd,0,sizeof(hd));\n\tint k=0;\n\tFOR(i,1,m){\n\t\tint x=a[i].x,y=a[i].y;\n\t\tif(c[x]!=c[y]){\n\t\t\tb[++k].x=c[x];b[k].y=c[y];\n\t\t}\n\t}\n\tsort(b+1,b+k+1);\n\tFOR(i,1,k){\n\t\tint x=b[i].x,y=b[i].y;\n\t\tif(x==b[i-1].x&&y==b[i-1].y) continue;\n\t\tadd_e(x,y);ru[y]++;\n\t}\n\ttpdp();\n\treturn 0;\n}\n```\n",
        "postTime": 1564708705,
        "uid": 118118,
        "name": "\u51cc\u4e71",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2272 \u3010[ZJOI2007]\u6700\u5927\u534a\u8fde\u901a\u5b50\u56fe\u3011"
    },
    {
        "content": "__\u6392\u7248\u54ea\u91cc\u6709\u95ee\u9898\u554aQAQ__\n\n\u6839\u636e\u9898\u610f\uff0c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e00\u5b9a\u662f\u534a\u8054\u901a\u5b50\u56fe\uff0c\u6240\u4ee5\u591a\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u4e5f\u4e00\u5b9a\u662f\u534a\u8054\u901a\u5b50\u56fe\uff0c\u6240\u4ee5\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u4e86\u5728\u4e00\u4e2a\u7f29\u70b9\u540e\u7684\u56fe\u4e0a\u627e\u6700\u957f\u94fe\uff0c\u6b65\u9aa4\u5982\u4e0b\uff1a\n\n### 1.\u7f29\u70b9\n\n\u5148\u7528tarjan\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u7684\u5927\u5c0f\u548c\u6bcf\u4e2a\u70b9\u5728\u54ea\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\n```cpp\nvoid tarjan(int now){\n\tif(vis[now])return;\n\tdfn[now]=low[now]=++Time;\n\ttmp.push(now);\n\tvis[now]=1;\n\tfor(int i=head[now];i;i=nxt[i]){\n\t\tif(!dfn[to[i]]){\n\t\t\ttarjan(to[i]);\n\t\t\tlow[now]=min(low[now],low[to[i]]);\n\t\t}else if(vis[to[i]]){\n\t\t\tlow[now]=min(low[now],dfn[to[i]]);\n\t\t}\n\t}\n\tif(low[now]==dfn[now]){\n\t\t_cnt++;\n\t\twhile(tmp.top()!=now){\n\t\t\tvis[tmp.top()]=0;\n\t\t\tin[tmp.top()]=_cnt;\n\t\t\tsiz[_cnt]++;\n\t\t\ttmp.pop();\n\t\t}\n\t\ttmp.pop();\n\t\tvis[now]=0;\n\t\tin[now]=_cnt;\n\t\tsiz[_cnt]++;\n\t}\n}\n```\n\n\u5982\u679c\u6709\u4e24\u4e2a\u6709\u8fb9\u8fde\u63a5\u7684\u70b9\u4e0d\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e4b\u95f4\u5c31\u6709\u8fb9\uff0c\u6211\u8fd9\u91cc\u76f4\u63a5\u628a\u7f29\u70b9\u540e\u7684\u56fe\u65b0\u5efa\u5728\u53e6\u4e00\u4e2a\u524d\u5411\u661f\u91cc\u4e86\uff0c\u6ce8\u610f\u8981\u53bb\u91cd\uff0c\u5373\u4e0d\u80fd\u5728\u4e24\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u95f4\u5efa\u591a\u6761\u8fb9\u3002\n```cpp\nfor(int i=1;i<=n;i++){\n\tfor(int j=head[i];j;j=nxt[j]){\n\t\t\tif(in[i]!=in[to[j]]){\n\t\t\tbool flag=0;\n\t\t\tfor(int ii=_head[in[i]];ii;ii=_nxt[ii]){\n\t\t\tif(_to[ii]==in[to[j]])flag=1;\n\t\t\t}\n\t\t\tif(flag)continue;\n\t\t\t_nxt[++__cnt]=_head[in[i]];\n\t\t\t_head[in[i]]=__cnt;\n\t\t\t_to[__cnt]=in[to[j]];\n\t\t\tdu[in[to[j]]]++;\n\t\t}\n\t}\n}\n```\n\n### 2.\u6c42\u6700\u957f\u94fe\n\n\u6700\u540e\u7528\u62d3\u6251\u6392\u5e8f\u6765DP\u6c42\u6700\u957f\u94fe\uff1a\u5148\u628a\u5165\u5ea6\u4e3a0\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u653e\u5165\u961f\u5217\uff0c\u6bcf\u6b21\u53d6\u51fa\u7b2c\u4e00\u4e2a\u5f00\u59cb\u66f4\u65b0\uff0c```num[i]```\u8868\u793a\u4ee5i\u4e3a\u7ed3\u5c3e\u7684\u6700\u957f\u94fe\u6709\u51e0\u4e2a```ans[i]```\u8868\u793a\u6700\u957f\u94fe\u7684\u957f\u5ea6\uff0c\u66f4\u65b0\u65f6\u5982\u679c\u53ef\u4ee5\u8ba9\u4ee5\u8fd9\u4e2a\u70b9\u7ed3\u5c3e\u7684\u94fe\u53d8\u5f97\u66f4\u957f,\u5c31\u628a```num[i]```\u8bbe\u4e3a1\uff0c\u66f4\u65b0```ans[i]```,\u5982\u679c\u53c8\u53d1\u73b0\u4e00\u6761\u548c\u4ee5\u8fd9\u4e2a\u70b9\u7ed3\u5c3e\u6700\u957f\u94fe\u4e00\u6837\u957f\u7684\u94fe\uff0c\u5c31\u628a```num[i]+=1```\uff0c\u6700\u540e\u627e\u6700\u5927\u503c\u5373\u53ef\n\n```cpp\nqueue<int>q;\n\tfor(int i=1;i<=_cnt;i++){\n\t\tif(du[i]==0)q.push(i);\n\t\tans[i]=siz[i];\n\t\tnum[i]=1;\n\t}\n\twhile(!q.empty()){\n\t\tint now=q.front();\n\t\tq.pop();\n\t\tfor(int i=_head[now];i;i=_nxt[i]){\n\t\t\tif(ans[_to[i]]<ans[now]+siz[_to[i]]){\n\t\t\t\tans[_to[i]]=ans[now]+siz[_to[i]];\n\t\t\t\tnum[_to[i]]=num[now];\n\t\t\t}\n\t\t\telse if(ans[_to[i]]==ans[now]+siz[_to[i]]){\n\t\t\t\tnum[_to[i]]=(num[now]%x+num[_to[i]]%x)%x;\n\t\t\t}\n\t\t\tdu[_to[i]]--;\n\t\t\tif(du[_to[i]]==0){\n\t\t\t\tq.push(_to[i]);\n\t\t\t}\n\t\t}\n\t}\n```\n\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint du[3000001],head[3000001],nxt[3000001],to[3000001],dfn[3000001],low[3000001],vis[3000001],in[3000001],siz[3000001];\nint n,m,x,cnt,Time,_cnt,__cnt;\nstack<int>tmp;\nvoid tarjan(int now){\n\tif(vis[now])return;\n\tdfn[now]=low[now]=++Time;\n\ttmp.push(now);\n\tvis[now]=1;\n\tfor(int i=head[now];i;i=nxt[i]){\n\t\tif(!dfn[to[i]]){\n\t\t\ttarjan(to[i]);\n\t\t\tlow[now]=min(low[now],low[to[i]]);\n\t\t}else if(vis[to[i]]){\n\t\t\tlow[now]=min(low[now],dfn[to[i]]);\n\t\t}\n\t}\n\tif(low[now]==dfn[now]){\n\t\t_cnt++;\n\t\twhile(tmp.top()!=now){\n\t\t\tvis[tmp.top()]=0;\n\t\t\tin[tmp.top()]=_cnt;\n\t\t\tsiz[_cnt]++;\n\t\t\ttmp.pop();\n\t\t}\n\t\ttmp.pop();\n\t\tvis[now]=0;\n\t\tin[now]=_cnt;\n\t\tsiz[_cnt]++;\n\t}\n}\nint _head[3000001],_nxt[3000001],_to[3000001],ans[3000001],num[3000001];\nint maxn=-1,id;\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&x);\n\tfor(int i=1;i<=m;i++){\n\t\tint a,b;\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tnxt[++cnt]=head[a];\n\t\thead[a]=cnt;\n\t\tto[cnt]=b;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(!dfn[i])tarjan(i);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=head[i];j;j=nxt[j]){\n\t\t\tif(in[i]!=in[to[j]]){\n\t\t\t\tbool flag=0;\n\t\t\t\tfor(int ii=_head[in[i]];ii;ii=_nxt[ii]){\n\t\t\t\t\tif(_to[ii]==in[to[j]])flag=1;\n\t\t\t\t}\n\t\t\t\tif(flag)continue;\n\t\t\t\t_nxt[++__cnt]=_head[in[i]];\n\t\t\t\t_head[in[i]]=__cnt;\n\t\t\t\t_to[__cnt]=in[to[j]];\n\t\t\t\tdu[in[to[j]]]++;\n\t\t\t}\n\t\t}\n\t}\n\tqueue<int>q;\n\tfor(int i=1;i<=_cnt;i++){\n\t\tif(du[i]==0)q.push(i);\n\t\tans[i]=siz[i];\n\t\tnum[i]=1;\n\t}\n\twhile(!q.empty()){\n\t\tint now=q.front();\n\t\tq.pop();\n\t\tfor(int i=_head[now];i;i=_nxt[i]){\n\t\t\tif(ans[_to[i]]<ans[now]+siz[_to[i]]){\n\t\t\t\tans[_to[i]]=ans[now]+siz[_to[i]];\n\t\t\t\tnum[_to[i]]=num[now];\n\t\t\t}\n\t\t\telse if(ans[_to[i]]==ans[now]+siz[_to[i]]){\n\t\t\t\tnum[_to[i]]=(num[now]%x+num[_to[i]]%x)%x;\n\t\t\t}\n\t\t\tdu[_to[i]]--;\n\t\t\tif(du[_to[i]]==0){\n\t\t\t\tq.push(_to[i]);\n\t\t\t}\n\t\t}\n\t}\n\tint maxn1=-1,maxn2=-1;\n\tfor(int i=1;i<=_cnt;i++){\n\t\tif(ans[i]>maxn1){\n\t\t\tmaxn1=ans[i];\n\t\t\tmaxn2=num[i];\n\t\t}\n\t\telse if(ans[i]==maxn1){\n\t\t\tmaxn2=(maxn2%x+num[i]%x)%x;\n\t\t}\n\t}\n\tprintf(\"%d\\n%d\\n\",maxn1,maxn2);\n\treturn 0;\n}\n```\n",
        "postTime": 1564373132,
        "uid": 183154,
        "name": "swiftc",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2272 \u3010[ZJOI2007]\u6700\u5927\u534a\u8fde\u901a\u5b50\u56fe\u3011"
    },
    {
        "content": "## \u5148\u653e\u4e00\u4e2a\u9898\u76ee\u94fe\u63a5 [P2272](https://www.luogu.org/problemnew/show/P2272)\n\n\n\u6837\u4f8b\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/59899.png)\n\n\u6700\u5f00\u59cb\u7684\u65f6\u5019\u6ca1\u6709\u8003\u8651\u5230\u6709\u73af\u7684\u65f6\u5019\uff0c\u4ed6\u53ef\u4ee5\u8fde\u7eed\u8dd1\uff0c\u5c31\u6ca1\u6709\u8fdb\u884c\u7f29\u70b9\uff0c\u7ed3\u679c\u5c31\u53ea\u80fd$ A $\u7b2c\u4e8c\u4e2a\u70b9\n\n\u540e\u6765$ wa $\u6389\u4ee5\u540e\u53d1\u73b0\u5982\u679c\u6709\u73af\u7684\u65f6\u5019\u4e0d\u8fdb\u884c\u7f29\u70b9\u7684\u8bdd\uff0c\u7531\u4e8e\u4e24\u4e2a\u4e0d\u76f8\u540c\u7684\u534a\u8054\u901a\u5b50\u56fe\u6ee1\u8db3\u4ed6\u4eec\u81f3\u5c11\u6709\u4e00\u4e2a\u70b9\u4e0d\u76f8\u540c\u3002\n\n\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5c31\u5fc5\u987b\u7f29\u70b9\u4e86\uff0c\u6211\u4eec\u5148$ tarjan $\u6c42\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u7136\u540e\u5728\u8fdb\u884c\u7f29\u70b9\uff0c\u5bf9\u8dd1\u51fa\u6765\u7684\u65b0\u56fe\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\uff0c\u7136\u540e\u5728\u62d3\u6251\u6392\u5e8f\u91cc\u9762\u52a0$ dp $\u3002\n\n```cpp\nvoid tarjan(int u) {\n    low[u] = dfn[u] = ++tim;\n    st[++top] = u;\n    ins[u] = 1;\n    for (int i = fte[u], v; i; i = edge[i].next) {\n        if (!dfn[v = edge[i].to]) {\n            tarjan(v);\n            low[u] = min(low[u], low[v]);\n        }\n        else if (ins[v]) {\n            low[u] = min(low[u], dfn[v]);\n        }\n    }\n    if (dfn[u] == low[u]) {\n        int v; \n        ++cnt;\n        while (u != v) {\n            v = st[top--];\n            bel[v] = cnt;\n            ins[v] = 0;\n            ++size[cnt];\n        }\n    }\n}\n```\n\n\n\u6211\u4eec\u5148\u8003\u8651\u4e00\u4e2a\u95ee\u9898\uff1a\u5728$ tarjan $\u7f29\u5b8c\u70b9\u4ee5\u540e\u6211\u4eec\u5728\u5efa\u65b0\u56fe\u7684\u65f6\u5019\u4e00\u5b9a\u4f1a\u5efa\u51fa\u91cd\u8fb9\u6765\uff0c\u4f46\u662f\u6211\u4eec\u8981\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\u7684\u8bdd\u5c31\u4e0d\u53ef\u4ee5\u6709\u91cd\u8fb9\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5728\u8fdb\u884c\u7f29\u70b9\u540e\u5efa\u56fe\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u5224\u65ad\u8fd9\u6761\u8fb9\u662f\u5426\u662f\u91cd\u8fb9\uff0c\u6211\u4eec\u7528\u4e00\u4e2a$ map $\u6570\u7ec4\u6765\u5224\u65ad\u3002\n\n\u7136\u540e\u6211\u4eec\u5728\u62d3\u6251\u6392\u5e8f\u91cc\u9762\u8dd1$ dp $\uff0c\u4e3a\u4ec0\u4e48\u8981\u7528\u62d3\u6251\u6392\u5e8f$ ?? $\u56e0\u4e3a\u901a\u62d3\u6251\u6392\u5e8f\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u627e\u51fa\u6700\u957f\u94fe\u3002\n\n\u600e\u4e48$ dp ?? $ \u6211\u4eec\u5728\u7b2c\u4e00\u90e8\u627e\u51fa\u5b83\u7684\u6700\u5927\u534a\u8054\u901a\u5b50\u56fe\u7684\u65f6\u5019\uff0c\u5176\u5b9e\u627e\u7684\u5c31\u662f\u6700\u957f\u94fe\uff0c\u6211\u4eec\u628a\u5b83\u6700\u957f\u94fe\u91cc\u9762\u7684\u6743\u503c\u8fdb\u884c\u5408\u5e76\u5c31\u884c\u3002\n\n\u6211\u4eec\u7528\u4e00\u4e2a$ ans $\u8bb0\u5f55\u5230\u8fbe\u5f53\u524d\u70b9\u7684\u6700\u5927\u6743\u503c\uff0c\u7528v\u8868\u793a\u5f53\u524d\u8282\u70b9\uff0c\u7528x\u8868\u793a\u4e0ev\u8fde\u901a\u90a3\u4e2a\u70b9\u3002\n\n\u7531\u4e8e\u6211\u4eec\u6709\u597d\u51e0\u6761\u8def\u5f84\u53ef\u4ee5\u5230\u8fbe$ v $\u70b9\uff0c\u800c\u6211\u4eec\u8981\u7edf\u8ba1\u7684\u662f\u6700\u5927\u7684\u534a\u8fde\u901a\u5b50\u56fe\u7684\u5927\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u5bf9\u5f53\u524d\u70b9\u66f4\u65b0\u7684\u65f6\u5019\u5219\u4e3a$ ans[v] = max(ans[v], ans[x]) $\u4e3a\u4ec0\u4e48\u662f\u8fd9\u6837$ ?? $\n\n\u56e0\u4e3a\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u6761\u94fe\u7684$ ans[x] $\u662f\u4e00\u76f4\u5728\u66f4\u65b0\u7684\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u6700\u5927\u7684\u534a\u8054\u901a\u5b50\u56fe\u7edf\u8ba1\u51fa\u6765\u3002 $ ans1 = max\uff08ans1, ans[i]\uff09$ \u3002\n\n\u5176\u6b21\u6211\u4eec\u8fd8\u8981\u7edf\u8ba1\u65b9\u6848\u6570\u3002\n\n\u6211\u4eec\u7528\u6570\u7ec4$ dp $\u8bb0\u5f55\u5230\u5f53\u524d\u70b9\u7684\u65b9\u6848\u6570\uff0c\u7528\u6570\u7ec4$ du $\u8bb0\u5f55\u5230\u5f53\u524d\u70b9\u7684\u5b50\u56fe\u7684\u5927\u5c0f\uff0c \u7136\u540e\u6211\u4eec\u5224\u65ad\u8fd9\u4e2a\u70b9\u7684deep\u503c\u662f\u5426\u7b49\u4e8e\u4ed6\u7236\u8282\u70b9\u7684$ du $\u503c\uff0c\u5982\u679c\u76f8\u7b49\u7684\u8bdd\u5c31\u8bf4\u660e\u51fa\u73b0\u4e86\u53e6\u4e00\u79cd\u65b9\u6848\u6570\uff0c\u90a3\u4e48$ dp[t] = dp[t] + dp[x] $\n\n\u5982\u679c\u5f53\u524d\u70b9\u7684$ du $\u5c0f\u4e0e\u5176\u7236\u8282\u70b9\u7684$ du $\u90a3\u4e48\u6211\u4eec\u5bf9\u5176$ dp $\u8fdb\u884c\u4fee\u6539\uff0c$ dp[t] = dp[x], du[t] = du[x] $\n\n```cpp\n#include <bits/stdc++.h>\n#define FOR(i, a, b) for(int i = a; i <= b; i++)\n#define _FOR(i, a, b) for(int i = a; i >= b; i--)\nusing namespace std;\nconst int NR = 2e5, MR = 2e6;\nint n, m, Mod, gsz, fte[NR];\nint top, st[NR], tim, dfn[NR], low[NR], bel[NR];\nint cnt, Num, FTE[NR], size[NR], du[NR], f[NR], g[NR], ans1, ans2;\nbool ins[NR], vis[NR];\nqueue <int> q;\nstruct EDGE {\n    int to, next;\n} edge[MR], Edge[MR];\n\nstruct node {\n    int u, v;\n    inline bool operator < (const node tmp) const {\n        return u == tmp.u ? v < tmp.v : u < tmp.u;\n    }\n} NODE[MR];\n\nvoid addedge(int u, int v) {\n    edge[++gsz].next = fte[u], edge[gsz].to = v, fte[u] = gsz;\n}\n\nvoid Addedge(int u, int v) {\n    Edge[++gsz].next = FTE[u], Edge[gsz].to = v, FTE[u] = gsz;\n}\n\nvoid tarjan(int u) {\n    low[u] = dfn[u] = ++tim;\n    st[++top] = u;\n    ins[u] = 1;\n    for (int i = fte[u], v; i; i = edge[i].next) {\n        if (!dfn[v = edge[i].to]) {\n            tarjan(v);\n            low[u] = min(low[u], low[v]);\n        }\n        else if (ins[v]) {\n            low[u] = min(low[u], dfn[v]);\n        }\n    }\n    if (dfn[u] == low[u]) {\n        int v; \n        ++cnt;\n        while (u != v) {\n            v = st[top--];\n            bel[v] = cnt;\n            ins[v] = 0;\n            ++size[cnt];\n        }\n    }\n}\n\nvoid tpsort() {\n    while (!q.empty()) {\n        int u = q.front();\n        q.pop();\n        for (int i = FTE[u], v; i; i = Edge[i].next) {\n            if (du[v = Edge[i].to]) {\n                if (f[v] < f[u] + size[v]) {\n                    f[v] = f[u] + size[v];\n                    g[v] = g[u];\n                } \n                else if (f[v] == f[u] + size[v]) {\n                    (g[v] += g[u]) %= Mod;\n                }\n                if (!--du[v]) {\n                    q.push(v);\n                }\n            }\n        }\n    }\n    FOR(i, 1, cnt) {\n        if (f[i] > ans1) {\n            ans1 = f[i];\n             ans2 = g[i];\n        }\n        else if (f[i] == ans1) {\n            (ans2 += g[i]) %= Mod;\n        }\n    }\n}\n\nint main() {\n    cin >> n >> m >> Mod;\n    FOR(i, 1, m) {\n        int x, y;\n        cin >> x >> y;\n        addedge(x, y);\n    }\n    FOR(i, 1, n) {\n        if (!dfn[i]) {\n            tarjan(i);\n        }\n    }\n    FOR(u, 1, n) {\n        for (int i = fte[u], v; i; i = edge[i].next) {\n            if (bel[u] != bel[v = edge[i].to]) {\n                NODE[++Num] = (node) {bel[u], bel[v]};\n            }\n        }\n    }\n    sort(NODE + 1, NODE + 1 + Num);\n    gsz = 0;\n    FOR(i, 1, Num) {\n        while (NODE[i].u == NODE[i + 1].u && NODE[i].v == NODE[i + 1].v) {\n            ++i;\n        }\n        Addedge(NODE[i].u, NODE[i].v);\n        ++du[NODE[i].v];\n    }\n    FOR(i, 1, cnt) {\n        f[i] = size[i];\n        g[i] = 1;\n        if (!du[i]) {\n            q.push(i);\n        }\n    }\n    tpsort();\n    cout << ans1 << endl << ans2;\n}\n```\n\n\u9644\u4e0a[\u7f29\u70b9\u677f\u5b50\u9898](https://www.luogu.org/problemnew/show/P3387)\n\n",
        "postTime": 1559350792,
        "uid": 89371,
        "name": "Frostnova",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2272\u3010[ZJOI2007]\u6700\u5927\u534a\u8fde\u901a\u5b50\u56fe\u3011"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u6ca1\u6709\u4eba\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u5462\u3002\u3002\u3002\n\n\u4e00\u5f00\u59cbTarjan\u7f29\u70b9\u80af\u5b9a\u662f\u8981\u7684\u3002\u6ce8\u610f\u5230\u534a\u8fde\u901a\u7684\u610f\u601d\u662f\u53ea\u8981\u8fd9\u4e2a\u5b50\u56fe\u91cc\u7684\u4efb\u610f\u70b9\u5bf9(i, j)\u6ee1\u8db3i\u53ef\u4ee5\u5230\u8fbej\u6216\u8005j\u53ef\u4ee5\u5230\u8fbei\u5373\u53ef\uff0c\u56e0\u6b64\u4e00\u4e2a\u5c3d\u53ef\u80fd\u5927\u7684\u534a\u8fde\u901a\u5b50\u56fe\u91cc\u4e00\u5b9a\u4f1a\u5305\u542b\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u6ca1\u6709\u4ec0\u4e48\u95ee\u9898\u3002\u7136\u540e\u6211\u4eec\u8003\u8651\u5728\u5f3a\u8fde\u901a\u5206\u91cfS\u7684\u57fa\u7840\u4e0a\u6269\u5927\u8fd9\u4e2a\u534a\u8fde\u901a\u5b50\u56fe\uff0c\u5982\u56fe\n\n![luogu](https://cdn.luogu.com.cn/upload/pic/30810.png)\n\n\u5f88\u660e\u663e\uff0c\u9009\u62e9XYS\u662f\u4e0d\u884c\u7684\uff0c\u56e0\u4e3aX\u4e2d\u7684\u70b9\u548cY\u4e2d\u7684\u70b9\u4e0d\u53ef\u8fbe\uff0c\u4e0d\u6784\u6210\u534a\u8fde\u901a\u5b50\u56fe\u3002\u540c\u7406GKS\u4e5f\u4e0d\u884c\u3002\u4f46\u662f\u50cfXSK\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u5176\u4e2d\u7684\u70b9\u53ef\u8fbe\u4e86\uff0c\u4ece\u800c\u6784\u6210\u534a\u8fde\u901a\u5b50\u56fe\u3002\n\n\u4e8e\u662f\u6211\u4eec\u7684\u7b97\u6cd5\u57fa\u672c\u4e0a\u53ef\u4ee5\u786e\u5b9a\uff1a\u5148Tarjan\u7f29\u70b9\uff0c\u5f97\u5230\u65b0\u56fe\uff08\u4e00\u5b9a\u662fDAG\uff09\uff0c\u65b0\u56fe\u7684\u70b9\u6709\u70b9\u6743\uff0c\u5c31\u7b49\u4e8e\u5b83\u4ee3\u8868\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u70b9\u7684\u4e2a\u6570\u3002\u7136\u540e\u8bbef[x]\u8868\u793a\u4ee5x\u4e3a\u8d77\u70b9\u7684\u70b9\u6743\u4e4b\u548c\u6700\u5927\u7684\u8def\u5f84\uff0cg[x]\u8868\u793a\u8fd9\u6837\u7684\u8def\u5f84\u7684\u6761\u6570\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u5b9e\u73b0\u3002\n\n~~\uff08\u5176\u5b9e\u662f\u56e0\u4e3a\u6211\u6bd4\u8f83\u61d2\u4e0d\u60f3\u62d3\u6251\u6392\u5e8f\uff09~~\n\n```cpp\n// C++11\n#include <cctype>\n#include <cstdio>\n#include <climits>\n#include <algorithm>\n#include <stack>\n\ntemplate <typename T> inline void read(T& t) {\n    int f = 0, c = getchar(); t = 0;\n    while (!isdigit(c)) f |= c == '-', c = getchar();\n    while (isdigit(c)) t = t * 10 + c - 48, c = getchar();\n    if (f) t = -t;\n}\ntemplate <typename T, typename... Args>\ninline void read(T& t, Args&... args) {\n    read(t); read(args...);\n}\n\n#define rep(I, A, B) for (int I = (A); I <= (B); ++I)\n#define rrep(I, A, B) for (int I = (A); I >= (B); --I)\n\nconst int maxn = 1e5 + 100;\nconst int maxm = 1e6 + 100;\nint head[maxn], sccno[maxn], low[maxn], pre[maxn];\nint v[maxm], next[maxm];\nint n, m, mod, tot = -1;\nint scccnt, dfsClock;\nstd::stack<int> s;\n\ninline void ae(int x, int y) {\n    v[++tot] = y;\n    next[tot] = head[x];\n    head[x] = tot;\n}\nvoid dfs1(int x) {\n    pre[x] = low[x] = ++dfsClock;\n    s.push(x);\n    for (int i = head[x]; ~i; i = next[i]) {\n        if (!pre[v[i]]) {\n            dfs1(v[i]);\n            low[x] = std::min(low[x], low[v[i]]);\n        } else if(!sccno[v[i]])\n            low[x] = std::min(low[x], pre[v[i]]);\n    }\n    if (low[x] == pre[x]) {\n        ++scccnt;\n        while (0207) {\n            int t = s.top();\n            s.pop();\n            sccno[t] = scccnt;\n            if (t == x)\n                return;\n        }\n    }\n}\ninline void findScc() {\n    rep(i, 1, n) if (!pre[i]) dfs1(i);\n}\n\nint head2[maxn], f[maxn], g[maxn], value[maxn];\nint v2[maxm], next2[maxm];\nbool vis[maxn];\n\ninline void ae2(int x, int y) {\n    v2[++tot] = y;\n    next2[tot] = head2[x];\n    head2[x] = tot;\n}\ninline void rebuild() {\n    tot = -1;\n    rep(i, 1, scccnt) head2[i] = -1;\n    rep(i, 1, n)++ value[sccno[i]];\n    rep(i, 1, n) for (int j = head[i]; ~j; j = next[j]) if (sccno[i] != sccno[v[j]])\n        ae2(sccno[i], sccno[v[j]]);\n}\nvoid dfs2(int x) {\n    if (vis[x]) return;\n    vis[x] = 1;\n    f[x] = value[x];\n    g[x] = 1;\n    bool meet[maxn] = {0};\n    for (int i = head2[x]; ~i; i = next2[i]) \n        if (!meet[v2[i]]) {\n            meet[v2[i]] = 1;\n            dfs2(v2[i]);\n            if (f[v2[i]] + value[x] > f[x]) {\n                f[x] = f[v2[i]] + value[x];\n                g[x] = g[v2[i]];\n            } else if (f[v2[i]] + value[x] == f[x]) {\n                (g[x] += g[v2[i]]) %= mod;\n            }\n        }\n}\n\nint main() {\n    read(n, m, mod);\n    rep(i, 1, n) head[i] = -1;\n    rep(i, 1, m) {\n        int x, y;\n        read(x, y);\n        ae(x, y);\n    }\n    findScc();\n    rebuild();\n    rep(i, 1, scccnt) if (!vis[i]) dfs2(i);\n    int ans = 0, maxval = INT_MIN;\n    rep(i, 1, scccnt) if (f[i] > maxval) maxval = f[i];\n    rep(i, 1, scccnt) if (f[i] == maxval) ans = (ans + g[i]) % mod;\n    printf(\"%d\\n%d\\n\", maxval, ans);\n    return 0;\n}\n```",
        "postTime": 1531918401,
        "uid": 72071,
        "name": "GKxx",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2272 \u3010[ZJOI2007]\u6700\u5927\u534a\u8fde\u901a\u5b50\u56fe\u3011"
    }
]