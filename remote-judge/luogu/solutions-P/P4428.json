[
    {
        "content": "~~\u662f\u65f6\u5019\u6765\u4e00\u7bc7\u7801\u98ce\u6b63\u5e38\u7684\u9898\u89e3\u4e86~~\n\n[\u9898\u76ee\u5730\u5740](https://www.luogu.com.cn/problem/P4428)\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u7ebf\u6bb5\u6811\n\n# Description\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684 $01$ \u4e32\uff0c$m$ \u6b21\u64cd\u4f5c\uff1a\n\n* \u5c06\u7b2c $i$ \u4e2a\u4f4d\u7f6e $0/1$ \u53cd\u8f6c\uff08$0$ \u53d8\u6210 $1$\uff0c$1$ \u53d8\u6210 $0$\uff09\n* \u6c42\u533a\u95f4 $[l, r]$ \u4e4b\u95f4\u6709\u591a\u5c11\u4e2a\u8fde\u7eed\u5b50\u5e8f\u5217\uff0c\u6ee1\u8db3\u91cd\u6392\u4ee5\u540e\u662f $3$ \u7684\u500d\u6570\u3002\n\n# Solution\n\n## \u5b50\u95ee\u9898\n\n\u5148\u6765\u89e3\u51b3\u4e00\u4e2a\u5b50\u95ee\u9898\uff0c\u4ec0\u4e48\u6837\u7684\u5e8f\u5217\u91cd\u6392\u662f $3$ \u7684\u500d\u6570\uff1f\n\n\u8bbe $s$ \u4e3a\u5e8f\u5217\u4e0a $1$ \u7684\u4e2a\u6570\uff0c\u5e8f\u5217\u957f\u5ea6\u4e3a $len$\u3002\u5c06\u4e8c\u8fdb\u5236\u4e0b\u6bcf\u4f4d\u4e0b\u7684\u6743\u5217\u5217\u4e3e\u51fa\u6765\uff0c\u5206\u522b\u662f $1, 2, 4, 8, 16, 32....$\n\n\u6362\u6210 $\\bmod 3$ \u610f\u4e49\u4e0b\u7684\u6743\uff1a$1, 2, 1, 2, 1, 2, 1...$\n\n\u53ef\u4ee5\u89c2\u5bdf\u51fa\uff08\u6216\u8005\u968f\u4fbf\u8bc1\u660e\u4e00\u4e0b \uff09\u8fd9\u662f\u4e00\u4e2a $1, 2$ \u5faa\u73af\u7684\u6743\u503c\u3002\u8bbe $1$ \u7684\u6743\u6570\u91cf\u4e3a $a$\uff0c$2$ \u7684\u6743\u6570\u91cf\u4e3a $b$\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5f53 $len$ \u4e3a\u5076\u6570\u65f6\uff0c$a = b = \\dfrac{len}{2}$\uff1b\u5f53 $len$ \u4e3a\u5947\u6570\u65f6\uff0c$a = \\dfrac{len + 1}{2}, b = \\dfrac{len - 1}{2}$ \n\n\u5047\u8bbe\u6211\u4eec\u6743\u503c\u4e3a $1$ \u7684\u4f4d\u7f6e\u4e0a\u6709 $x$ \u4e2a\u662f $1$\uff0c\u6743\u503c\u4e3a $2$ \u7684\u4f4d\u7f6e\u4e0a\u6709 $y$ \u4e2a\u662f $1$\uff0c\u8981\u6ee1\u8db3 $x + y = s$\n\n\u5145\u8981\u6761\u4ef6\u5c31\u662f\uff1a\n\n$$3 | x + 2y \\Leftrightarrow x+2y \\equiv 0 \\pmod 3\\Leftrightarrow 3y+x-y \\equiv 0 \\pmod 3\\Leftrightarrow x-y \\equiv 0 \\pmod 3 \\Leftrightarrow x \\equiv y \\pmod 3$$\n\n\u7ecf\u8fc7\u5b8c\u8fd9\u6b65\u8f6c\u5316\uff0c\u6211\u4eec\u9700\u8981\u505a\u7684\u5c31\u662f\u6784\u9020\u51fa\u4e00\u7ec4\u5408\u7406\u7684 $x, y$\u3002\u4f7f\u5f97 $x, y$ \u80fd\u586b\u5230\u4f4d\u7f6e\u4e0a\uff08\u663e\u7136\u987a\u5e8f\u5df2\u7ecf\u65e0\u5173\uff09\u3002\n\n\u7531\u4e8e $x \\ge y, a \\ge b$\uff0c\u4e0d\u59a8\u8ba9 $x$ \u53d6\u586b\u5230 $a$ \u4e2a\u4f4d\u7f6e\u4e0a\uff0c$y$ \u586b\u5230 $b$ \u4e2a\u4f4d\u7f6e\u4e0a\uff0c\u5373\u8981\u6ee1\u8db3 $0 \\le x \\le a, 0 \\le y \\le b$\n\n\u56e0\u4e3a $s, a, b$ \u662f\u6709\u9650\u7684\uff0c\u4e0d\u96be\u60f3\u5230\u8d2a\u5fc3\u60c5\u51b5\u4e0b\uff0c$x, y$ \u8981\u5c3d\u91cf\u63a5\u8fd1\uff0c\u8fd9\u6837\u5bb9\u9519\u7387\u66f4\u5927\uff08\u6bd4\u5982 $x = y$ \u7684\u60c5\u51b5\u53ef\u4ee5\u652f\u6301 $s = 0$\uff0c$x = y + 3$ \u7684\u60c5\u51b5\u52bf\u5fc5 $s, x \\ge 3$\uff0c$x = y + 6$ \u7684\u60c5\u51b5\u52bf\u5fc5 $s, x \\ge 6$\u3002\u6216\u8005\u53e6\u5916\u4e00\u79cd\u89e3\u91ca\uff0c\u4efb\u610f $x \\equiv y \\pmod 3$ \u7684\u60c5\u51b5\u90fd\u53ef\u4ee5\u901a\u8fc7\u5927\u7684\u90a3\u4e00\u9879 $-3$\uff0c\u5c0f\u7684\u90a3\u4e00\u9879 $+3$\uff0c\u6700\u7ec8\u53d8\u4e3a $x = y + 3$ \u6216\u8005\u662f $x = y$ \u7684\u5f62\u5f0f\uff0c\u4e0d\u59a8\u624b\u73a9\u4e00\u4e0b\uff09\n\n### \u5206\u7c7b\u8ba8\u8bba\n\n1. \u6211\u4eec\u8003\u8651 $s$ \u662f\u5076\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u663e\u7136\u53d6 $x = y$\uff0c\u5373\u4fdd\u6301\u4e24\u4e2a\u6743\u8d21\u732e\u4e00\u6837\u7684\u62ff\uff0c\u90a3\u4e48\u80af\u5b9a\u662f\u53ef\u4ee5\u6ee1\u8db3\u7684\u3002\n\n2. \u6211\u4eec\u8003\u8651 $s$ \u662f\u5947\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u56e0\u4e3a\u82e5 $x = y$\uff0c\u90a3\u4e48 $x + y = s$ \u4e00\u5b9a\u662f\u5947\u6570\u6240\u4ee5\u4e0d\u80fd\u8fd9\u4e48\u53d6\u3002\u6240\u4ee5\u4e00\u5b9a\u5f97\u662f $x = y + 3$ \u7684\u5f62\u5f0f\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b $x = \\dfrac{s + 3}{2}, y = \\dfrac{s - 3}{2}$\uff0c\u5728\u8fd9\u79cd\u5f62\u5f0f\u4e0b\uff0c \u53d6\u5e26\u5165\u521a\u624d\u7684 $x, y$ \u9700\u8981\u6ee1\u8db3\u7684\u533a\u95f4\u5f0f\uff0c\u8ba8\u8bba $s$ \u5728\u4f55\u65f6\u5408\u6cd5\uff1a\n\n   * \u9996\u5148\u9700\u8981 $s > 1$\uff0c\u56e0\u4e3a\u82e5 $s = 1$\uff0c\u90a3\u4e48 $y$ \u663e\u7136\u5c31\u662f\u8d1f\u6570\u4e86\u641e\u4e0d\u51fa\u6765\u3002\n\n   * $len$ \u4e3a\u5076\u6570\u65f6\uff1a$s \\le len - 3$\u3002\u6b64\u65f6\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\u53ea\u6709 $s = len - 1$\u3002\uff08\u56e0\u4e3a $s, len$ \u7684\u5947\u5076\u6027\u5df2\u7ecf\u786e\u5b9a\u4e86\uff09\n   * $len$ \u4e3a\u5947\u6570\u65f6\uff1a$s \\le len - 2$\u3002\u6b64\u65f6\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\u53ea\u6709 $s = len - 0$\u3002\uff08\u56e0\u4e3a $s, len$ \u7684\u5947\u5076\u6027\u5df2\u7ecf\u786e\u5b9a\u4e86\uff09\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u5e8f\u5217\u662f\u5426\u5408\u6cd5\u53d6\u51b3\u4e8e\u5b83\u7684\u957f\u5ea6 $len$ \u5947\u5076\u6027\u4ee5\u53ca $1$ \u7684\u6570\u91cf $s$\u3002\n\n### \u8865\u96c6\u601d\u60f3\n\n\u663e\u7136\uff0c\u7b26\u5408\u8981\u6c42\u7684 $s$ \u975e\u5e38\u591a\uff0c\u4e0d\u597d\u7edf\u8ba1\uff0c\u4e5f\u4e0d\u597d\u4f18\u5316\uff0c\u53cd\u8fc7\u6765\uff0c\u8003\u8651\u4e0d\u5408\u6cd5\u6570\u91cf\uff1a\n\n* $s = 1$ \u65f6\n* $len$ \u4e3a\u5076\u6570\u65f6\uff0c$s = len - 1$\uff0c\u5373 $0$ \u7684\u4e2a\u6570\u662f $1$\u3002 \n* $len$ \u4e3a\u5947\u6570\u65f6\uff1a $s = len - 0$\u3002\u5373 $0$ \u7684\u4e2a\u6570\u4e3a $0$\u3002\n\n\u7136\u540e\u53d1\u73b0\u540e\u9762\u4e24\u4e2a\u6761\u4ef6\u53ef\u4ee5\u5408\u5e76\uff0c\u8ba9\u5408\u6cd5\u6027\u4e0e $len$ \u65e0\u5173\uff0c\u5e76\u4e14 $s = 1$ \u548c\u540e\u9762\u4e24\u4e2a\u6761\u4ef6\u6709\u4e00\u90e8\u5206\u91cd\u53e0\uff0c\u5373 $s = 1$ \u4e14 $0$ \u7684\u4e2a\u6570 $\\le 1$ \u65f6\uff0c\u6240\u4ee5\u518d\u4f18\u5316\u4e00\u4e0b\uff1a\n\n* $s = 1$ \u4e14 $0$ \u7684\u4e2a\u6570 $\\ge 2$ \u65f6\u3002\n* $s$ \u4e3a\u5947\u6570\u4e14 $0$ \u7684\u4e2a\u6570 $ < 2$ \u65f6\u3002\n\n\u7136\u540e\u7528\u603b\u7684\u65b9\u6848\u51cf\u53bb\u4e0d\u5408\u6cd5\u65b9\u6848\u5c31\u53ef\u4ee5\u6c42\u51fa\u5408\u6cd5\u65b9\u6848\u4e86~\n\n## \u4f18\u5316\u7b97\u6cd5\u590d\u6742\u5ea6\uff01\n\n### \u65b9\u5411\uff1a\u7ebf\u6bb5\u6811\uff01\n\n\u73b0\u5728\uff0c\u95ee\u9898\u53d8\u6210\u4e86\u652f\u6301\u5355\u70b9\u4fee\u6539\uff0c\u7136\u540e $O(1)$ \u6216\u8005 $O(\\log)$ \u7684\u65f6\u95f4\u5728 $[l, r]$ \u67e5\u8be2\u6ee1\u8db3\u6761\u4ef6\uff08\u4e0a\u4e00\u6b65\u603b\u7ed3\u7684\uff09\u7684\u8fde\u7eed\u5b50\u5e8f\u5217\u4e2a\u6570\u3002\n\n~~\u548b\u505a\u548b\u505a\uff1f\u6211\u4e5f\u4e0d\u4f1a~~\n\n\u6ee1\u8db3\u6761\u4ef6\u7684\u8fde\u7eed\u5b50\u5e8f\u5217\uff0c\u53ef\u4ee5\u770b\u505a\u662f\u679a\u4e3e\u5de6\u53f3\u7aef\u70b9\uff0c\u6216\u8005\u662f\u4e8c\u5143\u8ba1\u6570\u3002\u60f3\u60f3\u6211\u4eec\u4e4b\u524d\u5b66\u8fc7\u7684\u7b97\u6cd5\u5565\u80fd\u8ba1\u7b97\u4e8c\u5143\u8ba1\u6570\uff1f\u76f8\u4fe1\u4f60\u60f3\u5230\u4e86\uff0c\u5c31\u662f\u5f52\u5e76\u6392\u5e8f\uff0c\u4ed6\u6c42\u89e3\u9006\u5e8f\u5bf9\u7684\u539f\u7406\u5c31\u662f\u8bf4\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\uff0c\u7136\u540e\u628a\u4e24\u4e2a\u533a\u95f4\u5185\u5404\u81ea\u9009\u4e00\u4e2a\u6570\uff0c\u7136\u540e\u628a\u8d21\u732e\u8bb0\u5f55\u5230\u7b54\u6848\u4e0a\u3002\n\n\u7136\u540e\u8fd9\u9898\u8fd8\u8981\u652f\u6301\u4fee\u6539\uff0c~~\u901a\u8fc7\u770b\u9898\u89e3~~\u6211\u4eec\u5c31\u975e\u5e38\u76f4\u63a5\u7684\u60f3\u5230\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u6bcf\u6b21\u5408\u5e76\u4e24\u4e2a\u7ebf\u6bb5\u7684\u65f6\u5019\uff0c\u7b54\u6848 $=$ \u5de6\u8fb9\u7ebf\u6bb5\u7684\u7b54\u6848 $+$ \u53f3\u8fb9\u7ebf\u6bb5\u7684\u7b54\u6848 $+$ \u5de6\u7aef\u70b9\u5728\u5de6\u8fb9\u8fd9\u6761\u7ebf\u6bb5\u3001\u53f3\u7aef\u70b9\u5728\u53f3\u8fb9\u8fd9\u6761\u7ebf\u6bb5\u7684\u4ea7\u751f\u7684\u5408\u6cd5\u8fde\u7eed\u5b50\u5e8f\u5217\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u652f\u6301\u7528\u5e38\u6570\u65f6\u95f4\u590d\u6742\u5ea6\u8ba1\u7b97\u5408\u5e76\u4e24\u4e2a\u7ebf\u6bb5\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u884c\u4e86\uff01\n\n### \u600e\u4e48\u5408\u5e76\uff1f\n\n\u60f3\u8c61\u4e00\u4e0b\uff0c\u4f60\u73b0\u5728\u6709\u4e86\u4e24\u4e2a\u7ebf\u6bb5 $A:[l, mid]$ \u548c $B:[mid + 1, r]$\uff0c\u5408\u5e76\u540e\u65b0\u7684\u7ebf\u6bb5\u4e3a $C$\uff0c\u4f60\u5982\u4f55\u7b97\u51fa\u8de8\u8d8a\u4e24\u6761\u7ebf\u6bb5\u4ea7\u751f\u7684\u7b54\u6848\u8d21\u732e\uff1f\u6362\u53e5\u8bdd\u8bf4\u4f60\u9700\u8981\u7ef4\u62a4\u54ea\u4e9b\u4fe1\u606f\uff1f\u6bd4\u8f83\u663e\u7136\u7684\u662f\uff0c\u8de8\u8d8a\u663e\u7136\u8fc7 $mid$ \u548c $mid + 1$\u3002\u5373\u8fd9\u6837\u7684\u7ebf\u6bb5\u4e00\u5b9a\u662f $A$ \u7684\u4e00\u4e2a\u540e\u7f00\u548c $B$ \u7684\u4e00\u4e2a\u524d\u7f00\u6784\u6210\u7684\uff0c\u6240\u4ee5\u4fe1\u606f\u4e00\u5b9a\u8981\u8bbe\u7acb\u524d\u7f00\u540e\u7f00\u7684\u4fe1\u606f\u3002\n\n#### \u5bf9\u4e8e\u7b2c\u4e00\u79cd\u6761\u4ef6\u548b\u641e\uff1f\n\n\u4e0d\u59a8\u628a\u90a3\u4e2a $0$ \u7684\u4e2a\u6570 $\\ge 2$ \u8fd9\u4e2a\u5751\u7239\u7684\u6761\u4ef6\u53bb\u6389\uff0c\u4ec5\u8003\u8651\u8ba1\u7b97 $s = 1$ \u7684\u8d21\u732e\uff0c\u540e\u9762\u51cf\u6389\u5c31\u884c\u3002\n\n\u9996\u5148\u4f60\u9700\u8981\u5206\u7c7b\u8ba8\u8bba\u90a3\u4e2a $1$ \u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u4e0d\u59a8\u8bbe\u4ed6\u5728\u53f3\u8fb9\u8fd9\u6761\u7ebf\u6bb5\u4e0a\uff0c\u90a3\u4e48\u4f60\u9700\u8981\u8bb0\u5f55 $[l, mid]$ \u7684\u540e\u7f00 $0$ \u4e2a\u6570\uff0c\u4ee5\u53ca $B$ \u7ebf\u6bb5\u7684\u524d\u7f00\u6ee1\u8db3\u53ea\u6709\u4e00\u4e2a $1$ \u7684\u4e2a\u6570\uff0c\u7136\u540e\u4e24\u8005\u7684\u4e58\u79ef\u5c31\u662f\u7b54\u6848\u3002\n\n\u7136\u540e\u518d\u5de6\u8fb9\u7684\u8bdd\u662f\u5bf9\u79f0\u7684\uff0c\u5c31\u4e0d\u8d58\u8ff0\u4e86\u3002\n\n\u7efc\u4e0a\u4f60\u9700\u8981\u7ef4\u62a4\uff1a\n\n1. \u6bcf\u6761\u7ebf\u6bb5\u7684\u524d\u7f00 $0$ \u4e2a\u6570 $L_0$ \u4ee5\u53ca \u540e\u7f00 $0$ \u4e2a\u6570 $R_0$\n2. \u524d\u7f00\u6ee1\u8db3\u53ea\u6709\u4e00\u4e2a $1$ \u7684\u4e2a\u6570 $L_1$\uff0c\u540e\u7f00\u6ee1\u8db3\u53ea\u6709\u4e00\u4e2a $1$ \u7684\u4e2a\u6570 $R_1$\n\n$L_1, R_1$\u5177\u4f53\u7ef4\u62a4\u6709\u5f88\u591a\u7ec6\u8282\uff0c\u8981\u8ba8\u8bba\u5168\uff08\u5373\u540e\u7f00\u662f\u539f\u6765\u7684\u540e\u7f00\uff0c\u6216\u8005\u6210\u4e3a\u8de8\u57df\u4e24\u4e2a\u7684\u65b0\u540e\u7f00\uff09\uff0c\u8fd8\u8981\u8bb0\u5f55\u4e00\u6bb5\u7684 $0, 1$ \u603b\u6570 $C_0, C_1$\u3002 $R_1$ \u4e3a\u4f8b\uff1a\n\n* $C.R_1 \\gets B.R_1$ \u5373\u539f\u6765 $B$ \u7684\u540e\u7f00\u4e5f\u662f $C$ \u7684\u540e\u7f00\n* \u8ba8\u8bba\u90a3\u4e2a\u552f\u4e00\u7684 $1$ \u5728 $A$\uff0c\u5982\u679c$B.C_0 = 0$\uff0c  $C.R_1 \\gets A.R_1$\n* \u5982\u679c $B$ \u7684\u5168\u4e32\u53ea\u6709 $1$ \u4e2a $1$\uff0c\u5373 $B.C_1 = 1$\uff0c\u90a3\u4e48\u8de8\u8d8a\u8fc7\u6765\u8fd8\u53ef\u4ee5\u641e\u51e0\u4e2a $0$\uff1a$C.R_1 \\gets A.R_0$\n\n#### \u7b2c\u4e8c\u4e2a\u6761\u4ef6\n\n\u6bd4\u8f83\u663e\u7136\u7684\u662f\u6211\u4eec\u53ea\u5173\u6ce8 $1$ \u7684\u6570\u91cf\u7684\u5947\u5076\u6027\uff0c\u4ee5\u53ca $0$ \u7684\u6570\u91cf\uff08\u800c\u4e14\u53ea\u80fd\u4e3a $0/1$\uff09\u3002\n\n\u8bbe $R_{i, j}$ \u4e3a\u7ebf\u6bb5\u540e\u7f00\u4e2d\u6ee1\u8db3 $0$ \u7684\u6570\u91cf\u4e3a $i$\uff0c$1$ \u7684\u6570\u91cf $\\bmod 2 = j$ \u7684\u6570\u91cf\u3002$L$ \u7edf\u8ba1\u524d\u7f00\uff0c\u5bf9\u79f0\u5730\u662f\u7c7b\u4f3c\u7684\u3002\n\n\u90a3\u4e48\u4f60\u679a\u4e3e $A.R_{a, b}, B.L_{c, d}$ \u8003\u8651\u80fd\u5426\u4ea7\u751f\u8d21\u732e\uff1a\n\n* \u82e5 $a+c \\le 1$ \u4e14 $b + d$ \u4e3a\u5947\u6570\uff0c\u90a3\u4e48\u5219\u53ef\u4ee5\u4ea7\u751f\u5bf9\u7b54\u6848\u6709\u4ed6\u4eec\u4fe9\u4e58\u79ef\u7684\u8d21\u732e\u3002\n\n\u7ef4\u62a4\u8fd9\u4fe9\u7834\u73a9\u610f\u633a\u6076\u5fc3\u7684\uff0c\u4ee5 $R$ \u4e3a\u4f8b\uff0c\u8981\u8003\u8651\u8de8\u57df\u6574\u4e2a $B$\uff0c\u5de6\u7aef\u70b9\u5230 $A$ \u7684\u65b0\u540e\u7f00\u3002\uff1a\n\n* $C.R_{i, j} \\gets B.R_{i, j}$\n* $C.R_{i, j} \\gets A.R_{i - B.C_0, j - B.C_1}$\n\n#### \u91cd\u590d\u8ba1\u7b97\u4e86\u548b\u529e\uff1f\n\n\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\uff1a\n\n1. \u91cd\u590d\u8ba1\u7b97\u7684 $s = 1$\uff0c$0$ \u7684\u4e2a\u6570\u4e3a $0$ \u7684\u60c5\u51b5\uff0c\u5373\u53ea\u6709\u4e00\u4e2a $'1'$ \u7684\u5f62\u5f0f\u3002\u8fd9\u4e2a\u597d\u529e\uff0c\u4e0d\u4f1a\u518d\u5408\u5e76\u7684\u65f6\u5019\u7edf\u8ba1\uff08\u56e0\u4e3a\u5408\u5e76\u957f\u5ea6\u81f3\u5c11 $\\ge 2$\uff0c\u76f4\u63a5\u4e00\u5f00\u59cb\u7684\u65f6\u5019\u7edf\u8ba1\u5373\u53ef\uff09\u3002\n2. \u91cd\u590d\u8ba1\u7b97\u7684 $s = 1$\uff0c$0$ \u7684\u4e2a\u6570\u4e3a $1$ \u7684\u60c5\u51b5\u3002\u8fd9\u79cd\u60c5\u51b5\u5e94\u8be5\u5c31\u662f $mid, mid + 1$ \u4e24\u4e2a\u4f4d\u7f6e\u6210\u4e3a $01$ \u6216\u8005 $10$ \u7684\u60c5\u51b5\uff0c\u7279\u5224\u4e00\u4e0b\u51cf\u6389\u5c31\u884c\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u89e3\u51b3\u4e86\u91cd\u590d\u8ba1\u7b97\u7684\u9ebb\u70e6\u3002\n\n## \u65f6\u95f4\u590d\u6742\u5ea6 \n\n$O(N\\log_2N)$\n\n## Tips\n\n\u5bf9\u4e8e\u8fd9\u79cd\u53ca\u5176\u6bd2\u7624\u7684\u4e1c\u897f\u53ef\u4ee5\u81ea\u5df1\u5199\u4e2a\u7ed3\u6784\u4f53\u5565\u7684\uff0c\u8fd9\u6837\u628a\u4ee3\u7801\u5206\u6cbb\uff0c\u8fd9\u6837\u4e0d\u4f1a\u5199\u7684\u5f88\u4e71\u3002\n\n## Code\n\n\u6211\u76f8\u4fe1\u8fd9\u4e2a\u7801\u98ce\u4e00\u70b9\u90fd\u4e0d\u6bd2\u7624\u3002\u3002\u3002\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n\ntypedef long long LL;\n\nconst int N = 100005;\n\nint n, m, w[N];\n\n// \u7ebf\u6bb5\u7ed3\u6784\u4f53\nstruct Seg{\n\tint L0, R0, L1, R1, C0, C1, R[2][2], L[2][2];\n\tLL res;\n\t// \u6570\u7ec4\u6e05\u96f6\u5565\u7684\n\tvoid init() {\n\t\tL0 = R0 = L1 = R1 = C0 = C1 = res = 0;\n\t\tmemset(R, 0, sizeof R), memset(L, 0, sizeof L);\n\t}\n\tSeg(){}\n\t// \u7ebf\u6bb5\u957f\u5ea6\u4e3a 1\uff0c\u8fd9\u4e2a\u5143\u7d20\u662f x \u7684\u65f6\u5019\u7684\u521d\u59cb\u5316\n\tSeg(int x){\n\t\tinit();\n\t\tif (x) L1 = R1 = C1 = L[0][1] = R[0][1] = res = 1;\n\t\telse L0 = R0 = C0 = L[1][0] = R[1][0] = 1; \n\t}\n\t// \u5408\u5e76\u4e24\u4e2a\u533a\u95f4\uff0c\u540c\u65f6\u5bf9 ans \u4ea7\u751f\u8d21\u732e, mid \u662f\u7ebf\u6bb5 A \u7684\u53f3\u7aef\u70b9\n\tSeg(Seg A, Seg B, int mid) {\n\t\tinit();\n\t\tC0 = A.C0 + B.C0, C1 = A.C1 + B.C1;\n\t\tL0 = A.L0 + (!A.C1 ? B.L0 : 0), R0 = B.R0 + (!B.C1 ? A.R0 : 0);\n\t\tL1 = A.L1 + (!A.C1 ? B.L1 : 0) + (A.C1 == 1 ? B.L0 : 0);\n\t\tR1 = B.R1 + (!B.C1 ? A.R1 : 0) + (B.C1 == 1 ? A.R0 : 0);\n\t\tfor (int i = 0; i < 2; i++) {\n\t\t\tfor (int j = 0; j < 2; j++) {\n\t\t\t\tL[i][j] = A.L[i][j] + (i >= A.C0 ? B.L[i - A.C0][j ^ (A.C1 & 1)] : 0);\n\t\t\t\tR[i][j] = B.R[i][j] + (i >= B.C0 ? A.R[i - B.C0][j ^ (B.C1 & 1)] : 0);\n\t\t\t}\n\t\t}\n\t\tres = A.res + B.res;\n\t\t// \u6761\u4ef6 1\n\t\tres += (LL)A.R0 * B.L1 + (LL)A.R1 * B.L0;\n\t\t// \u6761\u4ef6 2\n\t\tres += (LL)A.R[0][0] * (B.L[0][1] + B.L[1][1]) + (LL)A.R[0][1] * (B.L[0][0] + B.L[1][0]); \n\t\tres += (LL)A.R[1][0] * B.L[0][1] + (LL)A.R[1][1] * B.L[0][0]; \n\t\t// \u51cf\u6389\u91cd\u590d\u7edf\u8ba1\n\t\tif (w[mid] + w[mid + 1] == 1) res--;\n\t}\t\n} v[N << 2];\n\nvoid build(int p, int l, int r) {\n\tif (l == r) { v[p] = Seg(w[l]); return; }\n\tint mid = (l + r) >> 1;\n\tbuild(p << 1, l, mid);\n\tbuild(p << 1 | 1, mid + 1, r);\n\tv[p] = Seg(v[p << 1], v[p << 1 | 1], mid);\n}\n\nvoid change(int p, int l, int r, int x) {\n\tif (l == r) { v[p] = Seg(w[l]); return; }\n\tint mid = (l + r) >> 1;\n\tif (x <= mid) change(p << 1, l, mid, x);\n\telse change(p << 1 | 1, mid + 1, r, x);\n\tv[p] = Seg(v[p << 1], v[p << 1 | 1], mid);\n}\n\nSeg query(int p, int l, int r, int x, int y) {\n\tif (x <= l && r <= y) return v[p];\n\tint mid = (l + r) >> 1;\n\tif (y <= mid) return query(p << 1, l, mid, x, y);\n\tif (mid < x) return query(p << 1 | 1, mid + 1, r, x, y);\n\treturn Seg(query(p << 1, l, mid, x, y), query(p << 1 | 1, mid + 1, r, x, y), mid);\n}\n\nint main() {\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; i++) scanf(\"%d\", w + i);\n\tbuild(1, 1, n);\n\tscanf(\"%d\", &m);\n\twhile (m--) {\n\t\tint opt; scanf(\"%d\", &opt);\n\t\tif (opt == 1) {\n\t\t\tint x; scanf(\"%d\", &x);\n\t\t\tw[x] ^= 1, change(1, 1, n, x);\n\t\t} else {\n\t\t\tint l, r; scanf(\"%d%d\", &l, &r);\n\t\t\tLL sum = (LL)(r - l + 1) * (r - l + 2) / 2; \n\t\t\tprintf(\"%lld\\n\", sum - query(1, 1, n, l, r).res);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1585836899,
        "uid": 161687,
        "name": "Remake",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4428 \u3010[BJOI2018]\u4e8c\u8fdb\u5236\u3011"
    },
    {
        "content": "\u4f20\u8bf4\u4e2d\u7684\u52a8\u6001dp\uff1f\u53cd\u6b63\u6781\u5176\u6bd2\u7624\u5c31\u662f\u4e86\n\n\u5982\u679c\u8db3\u591f\u719f\u7ec3\u7684\u8bdd\u5e94\u8be5\u53ef\u4ee5\u8f7b\u677e\u7684\u901a\u8fc7\u672c\u9898\uff0c\u4f46\u662f\u4e0d\u719f\u7ec3\u7684\u8bdd\u5c31\u9700\u8981\u809d\u4e00\u6bb5\u65f6\u95f4\u4e86\u2026\u2026\n\n# \u672c\u9898\u9898\u89e3\n\n\u9996\u5148\u8ba9\u6211\u4eec\u5148\u6765\u63a8\u4e00\u53d1\u7ed3\u8bba\u2026\u2026\n\n\u9898\u76ee\u4e2d\u7684\u610f\u601d\u662f\u5b58\u5728\u4e00\u79cd\u91cd\u6392\u65b9\u6848\u4f7f\u5f97\u8fd9\u4e2a\u5e8f\u5217\u662f3\u7684\u500d\u6570\u5c31\u8ba1\u5165\u7b54\u6848\u5f53\u4e2d\n\n\u901a\u8fc7\u6253\u8868\u53d1\u73b0\uff0c2\u7684\u5947\u6570\u6b21\u65b9%3=2,2\u7684\u5076\u6570\u6b21\u65b9%3=1(\u6839\u636e\u8d39\u9a6c\u5c0f\u5b9a\u7406$2^2\\%3=1$\u6240\u4ee5\u6b21\u5e42\u4e00\u5b9a\u5faa\u73af)\n\n\u5bf9\u4e8e\u91cd\u6392\u7684\u4e8c\u8fdb\u5236\u6570\u819c3\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u662f\u6bcf\u4e00\u4e8c\u8fdb\u5236\u4f4d\u819c\u4e09\u4e4b\u540e\u52a0\u8d77\u6765\u518d\u819c3\u7684\u7ed3\u679c\n\n\u6240\u4ee5\u6211\u4eec\u5982\u679c\u5c06\u8fd9\u4e2a\u4e8c\u8fdb\u5236\u6570\u7684\u6bcf\u4e00\u4f4d%3\uff0c\u5c31\u4f1a\u5f97\u5230\u4e00\u5806\u4f59\u6570\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u6784\u9020\u4e00\u79cd\u65b9\u6848\u4f7f\u5f97\u8fd9\u4e2a\u533a\u95f4\u91cd\u6392\u4e4b\u540e\u8fd9\u4e9b\u4f59\u6570\u7684\u548c%3\u4e3a0\n\n\u56e0\u6b64\u6211\u4eec\u5927\u6982\u9700\u8981\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u5224\u5b9a\u5b9a\u7406\u4e4b\u7c7b\u7684\u4e1c\u897f\u6765\u8ba9\u6211\u4eec\u5feb\u901f\u7684\u5224\u5b9a\u8fd9\u4e2a\u533a\u95f4\u91cd\u65b0\u6392\u5217\u4e4b\u540e\u662f\u5426\u53ef\u4ee5\u6210\u4e3a3\u7684\u500d\u6570\n\n\u53d1\u73b0\u5982\u679c\u8fd9\u4e2a\u533a\u95f4\u6709\u5076\u6570\u4e2a1\u90a3\u4e48\u4e00\u5b9a\u53ef\u4ee5\u91cd\u65b0\u6392\u5217\u62103\u7684\u500d\u6570\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u4e2a\u533a\u95f4\u7684\u6240\u6709\u5947\u6570\u4f4d\u4e0a\u653e\u7f6e\u4e00\u534a\u76841\uff0c\u6240\u6709\u5076\u6570\u4f4d\u7f6e\u4e0a\u653e\u7f6e\u53e6\u4e00\u534a\u76841\uff0c\u7136\u540e1\u548c2\u4e24\u4e24\u914d\u5bf9\u5c31\u53ef\u4ee5\u51d1\u51fa\u6574\u6570\u4e2a3\uff0c\u56e0\u6b64%3=0\n\n\u6240\u4ee5\u73b0\u5728\u8ba9\u6211\u4eec\u628a\u7cbe\u529b\u96c6\u4e2d\u5728\u8fd9\u4e2a\u533a\u95f4\u5b58\u5728\u7740\u5947\u6570\u4e2a1\u7684\u60c5\u51b5\uff0c\u53d1\u73b0\u6211\u4eec\u5982\u679c\u8fd9\u4e2a\u533a\u95f4\u67093\u4e2a\u53ca\u4ee5\u4e0a\u76841\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba9\u5947\u6570\u4f4d\u7f6e\u6bd4\u5076\u6570\u4f4d\u7f6e\u591a3\u4e2a3\uff0c\u6b64\u65f6\u5927\u90e8\u5206\u76841\u662f1+2=3\u4e24\u4e24\u914d\u5bf9\u62103\u4e86\uff0c\u6700\u540e\u76843\u4e2a2\u521a\u597d\u51d1\u6210\u4e00\u4e2a6\uff0c\u4e5f\u53ef\u4ee5\u88ab3\u6574\u9664\uff0c\u53ef\u4ee5\u8bc1\u660e\u5c31\u7b97\u5b58\u5728\u5176\u4ed6\u5f62\u5f0f\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u8fd9\u79cd\u6784\u9020\u65b9\u5f0f\u4e5f\u4e00\u5b9a\u53ef\u4ee5\u6784\u9020\u51fa\u4e00\u4e2a\u89e3\uff0c\u4f46\u662f\u5982\u679c\u8fde\u8fd9\u79cd\u6784\u9020\u65b9\u5f0f\u90fd\u65e0\u89e3\u7684\u8bdd\uff0c\u5176\u4ed6\u7684\u6784\u9020\u5f62\u5f0f\u4e00\u5b9a\u6784\u9020\u4e0d\u51fa\u89e3\u6765\n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u8fd9\u6837\u4f1a\u6709\u4e00\u4e2a\u975e\u5e38\u81f4\u547d\u7684\u95ee\u9898\uff0c\u6211\u4eec\u7684\u5947\u6570\u4f4d\u7f6e\u81f3\u5c11\u8981\u6bd4\u5076\u6570\u4f4d\u7f6e\u591a3\u4e2a\u624d\u80fd\u5b8c\u6210\u6784\u9020\n\n\u4e8e\u662f\u6211\u4eec\u53d1\u73b0\u5947\u6570\u4e2a1+3\u4e2a0\u7684\u60c5\u51b5\u662f\u53ef\u4ee5\u6784\u9020\u6210\u529f\u7684\uff0c\u5947\u6570\u4e2a1+2\u4e2a0\u7684\u60c5\u51b5\u4f9d\u7136\u53ef\u4ee5\u6784\u9020\u6210\u529f(\u6b64\u65f6\u5e8f\u5217\u6709\u5947\u6570\u4e2a\u5143\u7d20\uff0c\u5947\u6570\u4f4d\u7f6e\u672c\u8eab\u5c31\u6bd4\u5076\u6570\u4f4d\u7f6e\u591a\u4e00\u4e2a\uff0c\u52a0\u4e0a2\u4e2a0\u521a\u597d\u5dee\u51fa3\u4e2a\u4f4d\u7f6e)\n\n\u4f46\u662f\u5947\u6570\u4e2a1+1\u4e2a0\u7684\u60c5\u51b5\u4e00\u5b9a\u4e0d\u884c\uff0c\u56e0\u4e3a\u6b64\u65f6\u5e8f\u5217\u4e4b\u548c\u5df2\u7ecf%3=0\uff0c\u65e0\u8bba\u6700\u540e\u76840\u653e\u5728\u4ec0\u4e48\u4f4d\u7f6e\u4e0a\u90fd\u4f1a\u4f7f%3\u7684\u7ed3\u679c\u53d8\u6210\u975e0\n\n\u5f53\u7136\u5947\u6570\u4e2a1+0\u4e2a0\u7684\u60c5\u51b5\u56e0\u4e3a\u91cd\u6392\u90fd\u662f\u4e00\u4e2a\u6837\u6240\u4ee5\u6ca1\u6cd5\u6784\u9020\u4e86\n\n\u7b80\u5355\u5206\u6790\u4e0b\u521a\u624d\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u533a\u95f4\u53ef\u4ee5\u88ab\u91cd\u6392\u62103\u7684\u500d\u6570\u7684\u6761\u4ef6\u76f8\u5f53\u7e41\u7410\uff0c\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u5224\u65ad\u4e00\u4e2a\u533a\u95f4\u4e0d\u53ef\u4ee5\u88ab\u91cd\u6392\u62103\u7684\u500d\u6570\u7684\u5224\u65ad\u6761\u4ef6\u76f8\u5bf9\u7b80\u5355\uff0c\u53ea\u9700\u8981\u6ee1\u8db3\u4e0b\u5217\u4e09\u4e2a\u6761\u4ef6\u4e2d\u81f3\u5c11\u4e00\u4e2a\n\n1.\u6709\u4e14\u4ec5\u67091\u4e2a1\n\n2.\u6709\u5947\u6570\u4e2a1\u4e14\u67091\u4e2a0\n\n3.\u6709\u5947\u6570\u4e2a1\u4e14\u67090\u4e2a0\n\n\u6211\u4eec\u53d1\u73b0\u5982\u679c\u53ea\u662f\u8be2\u95ee\u4e00\u6b21\u7684\u8bdd\u4f3c\u4e4e\u53ef\u4ee5dp\u6c42\u51fa\u6765\u8fd9\u4e2a\u533a\u95f4\u6709\u591a\u5c11\u4e2a\u70b9\u5bf9\u4e0d\u7b26\u5408\u6761\u4ef6,\u5927\u6982\u5f00\u4e0a3\u7ef4\u8868\u793a\u8fd9\u4e2a\u533a\u95f4\u6709\u6ca1\u67091,1\u7684\u5947\u5076\u6027\uff0c0\u7684\u6570\u91cf\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5927\u529b\u8f6c\u79fb\u4e86\n\n\u6b64\u65f6\u6211\u4eec\u53d1\u73b0\u6709$10^5$\u7ec4\u8be2\u95ee\u548c\u4fee\u6539\u6211\u4eec\u662f\u94c1\u5b9a\u51c9\u51c9\u7684\uff0c\u6b64\u65f6\u6709\u5fc5\u8981\u4ecb\u7ecd\u4e00\u79cd\u88ab\u79f0\u4e4b\u4e3a\u52a8\u6001dp\u7684\u9ed1\u79d1\u6280\u4e86\u2026\u2026\n\n## \u52a8\u6001dp\n\n\u6240\u8c13\u52a8\u6001dp\u5c31\u662f\u5e26\u4fee\u6539\u7684dp\n\n\u6211\u4eec\u53d1\u73b0\u6709\u4e9bdp\u662f\u4e00\u4e2a\u70b9\u4e00\u4e2a\u70b9\u66f4\u65b0\u7684\uff0c\u8fd9\u6837\u505a\u592a\u6162\u4e86\uff0c\u6211\u4eec\u6709\u5fc5\u8981\u7ed9\u5b83\u63d0\u4e2a\u901f\n\n\u4e8e\u662f\u6211\u4eec\u51b3\u5b9a\u628a\u8fd9\u4e2adp\u642c\u5230\u7ebf\u6bb5\u6811\u4e0a\uff0c\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u652f\u6301\u5355\u70b9\u8be2\u95ee\u548c\u533a\u95f4\u4fee\u6539\u4e86\n\n\u5982\u679c\u4f60\u771f\u7684\u8db3\u591f\u6bd2\u7624\u7684\u8bdd\u53ef\u4ee5\u94fe\u5256\u4e4b\u540e\u5728\u6811\u4e0a\u4ee5\u94fe\u5206\u6cbb\u7684\u5f62\u5f0f\u505adp\uff0c\u628adp\u642c\u5230\u94fe\u5256\u4e4b\u540e\u7684\u7ebf\u6bb5\u6811\u4e0a\u2026\u2026\u8fd9\u5c31\u5df2\u7ecf\u4e0d\u662f\u6bd2\u7624\u53ef\u4ee5\u505a\u51fa\u6765\u7684\u4e8b\u60c5\u4e86\u5f53\u7136\u8fd9\u9053\u9898\u8fd8\u662f\u975e\u5e38\u4eb2\u6c11\u7684\u5e8f\u5217\u4e0a\u7684\u52a8\u6001dp\n\n\u90a3\u4e48\u6211\u4eec\u5177\u4f53\u6765\u8bb2\u5982\u4f55\u628adp\u642c\u5230\u7ebf\u6bb5\u6811\u4e0a\u5427\uff0c\u6211\u4eec\u90fd\u77e5\u9053\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u4ee3\u8868\u7740\u4e00\u4e2a\u533a\u95f4\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u4e2a\u533a\u95f4\u91cc\u505adp\uff0c\u5b9e\u73b0\u65b9\u6cd5\u5982\u4e0b\n\n\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2adp\u6570\u7ec4\n\n## $Dp_{i,j,k,p}$\n\n\u5176\u4e2di\u7684\u610f\u4e49\u5982\u4e0b\u6240\u793a\n\n$i=0$\u8fd9\u4e2a\u533a\u95f4\u4e0d\u5305\u542b\u8be5\u8282\u70b9\u7684\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\n\n$i=1$\u8fd9\u4e2a\u533a\u95f4\u5305\u542b\u8be5\u8282\u70b9\u7684\u5de6\u7aef\u70b9\uff0c\u4e0d\u5305\u542b\u53f3\u7aef\u70b9\n\n$i=2$\u8fd9\u4e2a\u533a\u95f4\u4e0d\u5305\u542b\u8be5\u8282\u70b9\u7684\u5de6\u7aef\u70b9\uff0c\u5305\u542b\u53f3\u7aef\u70b9\n\n$i=3$\u8fd9\u4e2a\u533a\u95f4\u662f\u8be5\u8282\u70b9\u5bf9\u5e94\u7684\u533a\u95f4(\u6216\u8005\u8bf4\u65e2\u5305\u542b\u5de6\u7aef\u70b9\u53c8\u5305\u542b\u53f3\u7aef\u70b9)\n\nj\u7684\u610f\u4e49\u8868\u793a\u8fd9\u4e2a\u533a\u95f4\u6709\u5947\u6570\u4e2a1\u6216\u5076\u6570\u4e2a1\uff0c1\u8868\u793a\u5947\u6570\uff0c0\u8868\u793a\u5076\u6570\n\nk\u7684\u610f\u4e49\u8868\u662f\u8fd9\u4e2a\u533a\u95f4\u67090\u4e2a1\u6216\u80051\u4e2a1\n\np\u7684\u610f\u4e49\u8868\u793a\u8fd9\u4e2a\u533a\u95f4\u67090\u4e2a0\u6216\u80051\u4e2a0\n\n$Dp_{i,j,k,p}$\u7684\u503c\u8868\u793a\u6ee1\u8db3$i,j,k,p$\u7ea6\u675f\u7684\u533a\u95f4\u6709\u591a\u5c11\u4e2a\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u8f6c\u79fb\u65b9\u7a0b\u5199\u8d77\u6765\u5c06\u4f1a\u5341\u5206\u86cb\u75bc\u2026\u2026\u57fa\u672c\u4e0d\u53ef\u5199\u2026\u2026\n\n\u4e0d\u53ef\u5199\u5c31\u7b97\u4e86(\u53c2\u89c1\\[\u516d\u7701\u8054\u80032017\u6467\u6bc1\u6811\u72b6\u56fe]),\u95ee\u9898\u662f\u6211\u4eec\u51b7\u9759\u5206\u6790\u4e0b\u8fd9\u4e2a\u6570\u7ec4\u7684\u957f\u5ea6$4*2*2*2=32$\u5e38\u6570\u5927\u5230\u5929\u4e0a\u53bb\u4e86\u57fa\u672c\u8fc7\u4e0d\u6389\uff0c\u66f4\u522b\u8bf4\u4f60\u7ebf\u6bb5\u6811\u8fd8\u67092\u7684\u57fa\u7840\u5e38\u6570\u2026\u2026\n\n\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5c3d\u91cf\u51cf\u5c11\u8fd9\u4e2a\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u53ea\u8981\u7565\u5fae\u5c11\u70b9\u5c31\u884c\u4e86\n\n\u53d1\u73b0\u53ea\u6709\u4e00\u4e2a1\u7684\u533a\u95f4\u4f3c\u4e4e\u548c\u5176\u4ed6\u4e24\u4e2a\u9650\u5236\u6761\u4ef6\u6ca1\u5565\u5173\u7cfb\uff0c\u56e0\u6b64\u53ef\u4ee5\u5355\u72ecdp\n\n\u6240\u4ee5\u6211\u4eec\u53d1\u73b0\u53ef\u4ee5\u628a\u4e00\u68f5\u7ebf\u6bb5\u6811\u62c6\u6210\u4e24\u4e2a\u7ebf\u6bb5\u6811\uff0c\u5206\u522bdp\n\n\u7b2c\u4e00\u4e2a\u7ebf\u6bb5\u6811\u4e0a\u5b58\u8fd9\u6837\u7684dp\u6570\u7ec4\n\n## $Dp_{i,j,k}$\n\n\u5176\u4e2di\u7684\u5b9a\u4e49\u548c\u4e00\u5f00\u59cb\u7684\u5b9a\u4e49\u4e00\u6837\n\nj\u8868\u793a\u8fd9\u4e2a\u533a\u95f4\u6709\u5947\u6570\u4e2a1\u6216\u8005\u5076\u6570\u4e2a1\n\nk\u8868\u793a\u8fd9\u4e2a\u533a\u95f4\u67090\u4e2a0\u62161\u4e2a0\n\n\u53e6\u4e00\u4e2a\u7ebf\u6bb5\u6811\u5b58\u8fd9\u6837\u7684dp\u6570\u7ec4\n\n## $Dp_{i,j}$\n\ni\u7684\u5b9a\u4e49\u8fd8\u662f\u548c\u5f00\u59cb\u7684\u5b9a\u4e49\u4e00\u6837\uff0c\n\nj\u8868\u793a\u8fd9\u4e2a\u533a\u95f4\u67090\u4e2a1\u6216\u80051\u4e2a1\n\n\u7136\u540e\u6211\u4eec\u518d\u7b97\u4e00\u4e0bdp\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u4f1a\u53d1\u73b0\u957f\u5ea6\u53d8\u6210\u4e86\n\n$4*2*2+4*2=26$\u5e38\u6570\u51cf\u5c11\u4e868\u4e0d\u8bf4\uff0c\u800c\u4e14\u8f6c\u79fb\u65b9\u7a0b\u53d8\u597d\u5199\u4e86\uff0c\u57fa\u672c\u5728\u4eba\u5199\u7684\u4ee3\u7801\u548c$Data Structure Master$\u5199\u7684\u4ee3\u7801\u96be\u5ea6\u4e4b\u95f4\u4e86\n\n\u7136\u540e\u8ba9\u6211\u4eec\u6765\u63a8\u8fd9\u4e2a\u7ebf\u6bb5\u6811\u4e0adp\u7684\u8f6c\u79fb\u65b9\u7a0b\u597d\u4e86\n\n\u666e\u901adp\u7684\u5f0f\u5b50\u662f\u52a0\u4e00\u4e2a\u70b9\u7136\u540e\u9012\u63a8\uff0c\u800c\u7ebf\u6bb5\u6811\u4e0a\u7684\u5f0f\u5b50\u5c31\u662fmerge\u5de6\u53f3\u4e24\u4e2a\u513f\u5b50\uff0c\u7136\u540edp\n\n\u90a3\u4e48\u6211\u4eec\u56e0\u4e3a\u8f6c\u79fb\u65b9\u7a0b\u592a\u8fc7\u9b3c\u755c\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u7ef4\u8003\u8651\uff0c\u8003\u8651\u6bcf\u4e00\u4e2adp\u7ef4\u5ea6\u8f6c\u79fb\u65f6\u53d1\u751f\u7684\u53d8\u5316\n\n\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u8bbe\u7236\u4eb2\u8282\u70b9\u4e3a$p$\uff0c\u5de6\u513f\u5b50\u8282\u70b9\u4e3a$p1$\uff0c\u53f3\u513f\u5b50\u8282\u70b9\u4e3a$p2$\n\n\u5148\u8003\u8651\u51e0\u4e2a\u6bd4\u8f83\u7b80\u5355\u7684\u8f6c\u79fb\n\n\u5947\u6570\u4e2a1+\u5947\u6570\u4e2a1=\u5076\u6570\u4e2a1\n\n\u5947\u6570\u4e2a1+\u5076\u6570\u4e2a1=\u5947\u6570\u4e2a1\n\n0\u4e2a0+1\u4e2a0=1\u4e2a0\n\n0\u4e2a0+0\u4e2a0=0\u4e2a0\n\n0\u4e2a1+0\u4e2a1=0\u4e2a1\n\n1\u4e2a1+0\u4e2a1=1\u4e2a1\n\n\u7136\u540e\u8003\u8651\u975e\u5e38\u590d\u6742\u7684i\u8fd9\u4e00\u7ef4\u7684\u8f6c\u79fb\uff0c\u770b\u4e0d\u61c2\u7684\u8bdd\u81ea\u5df1\u753b\u56fe\u5427\n\n\u5148\u89e3\u91ca\u4e00\u4e0b\uff0c\u4e0b\u9762\u8bf4\u7684\u52a0\u6cd5\u8f6c\u79fb\u5c31\u662f\u7ee7\u627f\u513f\u5b50\u91cc\u5df2\u6709\u7684\u533a\u95f4\uff0c\u4e58\u6cd5\u8f6c\u79fb\u5c31\u662f\u4e24\u4e2a\u513f\u5b50\u4e2d\u7684\u533a\u95f4\u62fc\u63a5\u6210\u7684\u533a\u95f4\n\np\u76840\u578b\u533a\u95f4\uff1a\n\n\u52a0\u6cd5\u8f6c\u79fb:\u513f\u5b50\u76840\u578b\u533a\u95f4\u4ee5\u53cap1\u76842\u578b\u533a\u95f4\uff0cp2\u76841\u578b\u533a\u95f4\n\n\u4e58\u6cd5\u8f6c\u79fb:p1\u76842\u578b\u533a\u95f4\u62fc\u4e0a\u4e00\u4e2ap2\u76841\u578b\u533a\u95f4\n\np\u76841\u578b\u533a\u95f4\uff1a\n\n\u52a0\u6cd5\u8f6c\u79fb:p1\u76843\u578b\u533a\u95f4\u4ee5\u53cap1\u76841\u578b\u533a\u95f4\n\n\u4e58\u6cd5\u8f6c\u79fb:p1\u76843\u578b\u533a\u95f4\u62fc\u4e0ap2\u76841\u578b\u533a\u95f4\n\np\u76842\u578b\u533a\u95f4\n\n\u52a0\u6cd5\u8f6c\u79fb:p1\u76843\u578b\u533a\u95f4\u4ee5\u53cap2\u76842\u578b\u533a\u95f4\n\n\u4e58\u6cd5\u8f6c\u79fb:p1\u76842\u578b\u533a\u95f4\u62fc\u4e0ap2\u76843\u578b\u533a\u95f4\n\np\u76843\u578b\u533a\u95f4\n\n\u52a0\u6cd5\u8f6c\u79fb:?\u4e0d\u5b58\u5728\u7684\uff01\n\n\u4e58\u6cd5\u8f6c\u79fb\uff1ap1\u76843\u578b\u533a\u95f4\u4ee5\u53cap2\u76843\u578b\u533a\u95f4\n\n\u6709\u4e86\u8fd9\u4e9b\u6bd2\u7624\u7684\u8f6c\u79fb\u89c4\u5219\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7684merge\u51fd\u6570(\u6709\u7684\u4eba\u53ebpushup\u6216\u8005update)\uff0c\u7136\u540e\u6211\u4eec\u6b64\u65f6\u5c31\u53ef\u4ee5\u5b8c\u6210\u5355\u70b9\u4fee\u6539\u548c\u5efa\u6811\u5de5\u4f5c\u4e86\u2026\u2026\u5c31\u662f\u7b80\u5355\u7684\u4e00\u8defmerge\u4e0a\u53bb\u5e94\u8be5\u5c31\u662f\u666e\u901a\u7ebf\u6bb5\u6811\u64cd\u4f5c\uff0c\u5e94\u8be5\u8fd8\u662f\u975e\u5e38\u597d\u5199\u7684\n\n\u95ee\u9898\u662f\u5982\u4f55\u5b8c\u6210\u533a\u95f4\u67e5\u8be2\u64cd\u4f5c?\n\n\u6211\u4eec\u53ef\u4ee5\u628a0\u53f7\u70b9\u5f53\u6210\u4e00\u4e2a\u7a7a\u533a\u95f4\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u8dd1\u533a\u95f4\u62c6\u5206\u51fd\u6570\uff0c\u5982\u679c\u5f53\u524d\u533a\u95f4\u548c\u8282\u70b9\u5bf9\u5e94\u7684\u533a\u95f4\u662f\u5426\u91cd\u5408\uff0c\u5982\u679c\u91cd\u5408\u7684\u8bdd\u6211\u4eec\u5224\u65ad\u4e00\u4e0b0\u53f7\u8282\u70b9\u662f\u5426\u4e3a\u7a7a\uff0c\u5982\u679c\u4e3a\u7a7a\u7684\u8bdd\u5c31\u5c06\u8fd9\u4e2a\u8282\u70b9\u7684dp\u6570\u7ec4\u590d\u5236\u7ed90\u53f7\u8282\u70b9\uff0c\u5426\u5219\u5c060\u53f7\u8282\u70b9\u7684dp\u6570\u7ec4\u590d\u5236\u4e00\u4efd\u7ed94n+1\u53f7\u8282\u70b9\uff0c\u7136\u540emerge(0,4n+1,p)\u5373\u53ef\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u4e00\u4e2a\u4e00\u4e2a\u7684\u628a\u8fd9\u4e9b\u533a\u95f4merge\u6210\u4e86\u4e00\u4e2a\u533a\u95f4\uff0c\u5e76\u5b58\u5728\u4e860\u53f7\u8282\u70b9\u91cc\n\n\u6700\u540e\u6211\u4eec\u53ea\u9700\u8981\u63d0\u53d60\u53f7\u8282\u70b9\u7684dp\u6570\u7ec4\u5c31\u662f\u8fd9\u4e2a\u533a\u95f4\u5bf9\u5e94\u7684dp\u6570\u7ec4\u4e86\n\n\u505a\u5b8c\u4e86\uff1f\n\n# \u4e0d\uff0c\u4f60\u91cd\u590d\u8ba1\u6570\u4e86\uff01\n\n\u6211\u4eec\u89c2\u5bdf\u4ec5\u67091\u4e2a1\u7684\u533a\u95f4\u65e2\u662f\u201c\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a1\u7684\u533a\u95f4\u201d\uff0c\u4e5f\u662f\"\u6709\u5947\u6570\u4e2a1\u4e14\u67090\u4e2a0\u7684\u533a\u95f4\"\uff0c\u5f62\u5982\"10,01\"\u7684\u533a\u95f4\u65e2\u662f\u201c\u6709\u4e14\u4ec5\u67091\u4e2a1\u7684\u533a\u95f4\u201d\uff0c\u4e5f\u662f\u201c\u6709\u5947\u6570\u4e2a1\u4e14\u67091\u4e2a0\u7684\u533a\u95f4\u201d\uff0c\u56e0\u6b64\u8fd9\u4e24\u4e2a\u533a\u95f4\u90fd\u88ab\u7b97\u4e86\u4e24\u8fb9\u2026\u2026\u95ee\u9898\u5f00\u59cb\u53d8\u5f97\u8fa3\u624b\u2026\u2026\n\n\u83ab\u975e\u6211\u4eec\u8981\u4fee\u6539\u6211\u4eec\u7684\u7b97\u6cd5\uff0c\u4f7f\u4ed6\u53d8\u5f97\u66f4\u52a0\u7b80\u5355\uff0c\u66f4\u52a0\u4f18\u96c5\uff0c\u66f4\u52a0\u5177\u6709\u4e00\u822c\u6027\uff1f\n\n# \u4e0d\uff0c\u76f4\u63a5\u52a0\u4e0a\u91cd\u590d\u51cf\u7684\u60c5\u51b5\u5c31\u884c\u4e86\n\n\u4ec5\u6709\u4e00\u4e2a1\u7684\u533a\u95f4\u5c31\u662f\u533a\u95f4\u4e2d1\u7684\u4e2a\u6570\uff0c\u76f4\u63a5\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u5c31\u53ef\u4ee5\u7ef4\u62a4\uff0c\u5f62\u5982\u201c01,10\u201d\u7684\u533a\u95f4\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u6bcf\u4e2a\u70b9\u8bb0\u4e00\u4e2a0/1\u7684\u503c\uff0c\u8868\u793a\u4ed6\u548c\u540e\u4e00\u4e2a\u70b9\u662f\u5426\u6784\u6210\u4e86\u5f62\u5982\"01,10\"\u7684\u533a\u95f4\uff0c\u7136\u540e\u8fd8\u662f\u6811\u72b6\u6570\u7ec4\u67e5\u4e00\u53d1\u533a\u95f4\u548c\u5373\u53ef\u7ef4\u62a4\n\n\u4fee\u6539\u7684\u65f6\u5019\u540c\u65f6\u5728\u4e24\u4e2a\u7ebf\u6bb5\u6811\u548c\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\u4e0a\u5404\u6539\u4e00\u904d\n\n\u542c\u8d77\u6765\u8fd9\u4e2a\u7b97\u6cd5\u7684\u5e38\u6570\u8be5\u5927\u5230\u5929\u4e0a\u53bb\u4e86\uff0c\u4f46\u662f\u4e8b\u5b9e\u4e0a\u8dd1\u7684\u98de\u8d77\uff0c\u5438\u6c27\u4e4b\u540e\u6700\u6162\u7684\u7684\u70b9\u5c31\u8dd1\u4e86238ms\u2026\u2026\n\n\u7136\u540e\u770b\u4e00\u770b\u6076\u5fc3\u81f3\u6781\u7684\u5b9e\u73b0\u5427\u2026\u2026\uff0c\u6211\u5199\u4e86150\u884c\uff0c\u6781\u5176\u6076\u5fc3\u5c31\u662f\u4e86\n\n\u4e0a\u4ee3\u7801~\n\n```C\n#include<cstdio>\n#include<algorithm>\nusing namespace std;const int N=1e5+10;typedef long long ll;\nint n;int a[N];int mk;int m;\nstruct linetree1//\u8fd9\u4e2a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6761\u4ef62,3\n{\n\tll v[4*N][4][2][2];\n\tinline void merge(int p,int p1,int p2)//\u975e\u5e38\u6076\u5fc3\u7684merge\u51fd\u6570\n\t{\n\t\tfor(int i=0;i<=1;i++)for(int k=0;k<=1;k++)//\u52a0\u6cd5\u8f6c\u79fb\u4eec\n\t\tv[p][0][i][k]=v[p1][0][i][k]+v[p2][0][i][k]+v[p1][2][i][k]+v[p2][1][i][k];\n\t\tfor(int i=0;i<=1;i++)for(int k=0;k<=1;k++)v[p][1][i][k]=v[p1][3][i][k]+v[p1][1][i][k];\n\t\tfor(int i=0;i<=1;i++)for(int k=0;k<=1;k++)v[p][2][i][k]=v[p2][3][i][k]+v[p2][2][i][k];\n\t\tfor(int i=0;i<=1;i++)for(int k=0;k<=1;k++)v[p][3][i][k]=0;\n\t\tfor(int i=0;i<=1;i++)//\u4e58\u6cd5\u8f6c\u79fb,\u8fd9\u91ccfor\u679a\u4e3ep1,p2\u5404\u9009\u591a\u5c11\u4e2a0\n\t\t\tfor(int j=0;i+j<=1;j++)//\u624b\u52a8\u679a\u4e3e\u4e86\u5947\u5076\u6027\u7684\u8f6c\u79fb\n\t\t\t\tv[p][0][0][i+j]+=v[p1][2][0][i]*v[p2][1][0][j]+v[p1][2][1][i]*v[p2][1][1][j],\n\t\t\t\tv[p][0][1][i+j]+=v[p1][2][0][i]*v[p2][1][1][j]+v[p1][2][1][i]*v[p2][1][0][j],\n\t\t\t\tv[p][1][0][i+j]+=v[p1][3][0][i]*v[p2][1][0][j]+v[p1][3][1][i]*v[p2][1][1][j],\n\t\t\t\tv[p][1][1][i+j]+=v[p1][3][0][i]*v[p2][1][1][j]+v[p1][3][1][i]*v[p2][1][0][j],\n\t\t\t\tv[p][2][0][i+j]+=v[p1][2][0][i]*v[p2][3][0][j]+v[p1][2][1][i]*v[p2][3][1][j],\n\t\t\t\tv[p][2][1][i+j]+=v[p1][2][0][i]*v[p2][3][1][j]+v[p1][2][1][i]*v[p2][3][0][j],\n\t\t\t\tv[p][3][0][i+j]+=v[p1][3][0][i]*v[p2][3][0][j]+v[p1][3][1][i]*v[p2][3][1][j],\n\t\t\t\tv[p][3][1][i+j]+=v[p1][3][0][i]*v[p2][3][1][j]+v[p1][3][1][i]*v[p2][3][0][j];\n\t}\n\tinline void modify(int p,int l,int r,int pos)//\u548c\u4e00\u822c\u7684\u7ebf\u6bb5\u6811\u4fee\u6539\u5e76\u6ca1\u4ec0\u4e48\u533a\u522b\n\t{\n\t\tif(r-l==1)//\u6ce8\u610f\u4e00\u5f00\u59cb\u53ea\u67093\u578b\u533a\u95f4\u6709\u503c\n\t\t{\n\t\t\tif(a[r]){v[p][3][1][0]=1;v[p][3][0][1]=0;}\n\t\t\telse {v[p][3][0][1]=1;v[p][3][1][0]=0;}return;\n\t\t}int mid=(l+r)/2;//\u5224\u65ad\u5411\u5de6\u5411\u53f3\u8d70\n\t\tif(pos<=mid){modify(p<<1,l,mid,pos);}else {modify(p<<1|1,mid,r,pos);}\n\t\tmerge(p,p<<1,p<<1|1);//merge\u4e00\u4e0b\n\t}\n\tinline void query(int p,int l,int r,int dl,int dr)//\u62c6\u5206\u6210log\u4e2a\u533a\u95f4\u7136\u540e\u4ece\u5de6\u81f3\u53f3\u987a\u6b21\u5408\u5e76\n\t{\n\t\tif(dl==l&&dr==r)\n\t\t{\n\t\t\tif(mk==0)//\u7a7a\u533a\u95f4\u76f4\u63a5\u590d\u5236\n\t\t\t{\n\t\t\t\tfor(int i=0;i<=3;i++)\n\t\t\t\t\tfor(int j=0;j<=1;j++)\n\t\t\t\t\t\tfor(int k=0;k<=1;k++)v[0][i][j][k]=v[p][i][j][k];mk=1;\n\t\t\t}else//\u5426\u5219\u590d\u5236\u4e00\u4efd\u7ed94n+1\u7136\u540e\u76f8\u5f53\u4e8emerge\u81ea\u5df1\u548cp\n\t\t\t{\n\t\t\t\tfor(int i=0;i<=3;i++)\n\t\t\t\t\tfor(int j=0;j<=1;j++)\n\t\t\t\t\t\tfor(int k=0;k<=1;k++)v[4*n+1][i][j][k]=v[0][i][j][k];\n\t\t\t\tmerge(0,4*n+1,p);\n\t\t\t}return;\n\t\t}int mid=(l+r)/2;//\u533a\u95f4\u62c6\u5206\n\t\tif(dl<mid){query(p<<1,l,mid,dl,min(dr,mid));}\n\t\tif(mid<dr){query(p<<1|1,mid,r,max(dl,mid),dr);}\n\t}\n\tinline ll cquery(int l,int r)\n\t{\n\t\tfor(int i=0;i<=3;i++)//\u8bb0\u5f97\u6e05\u7a7a0\u53f7\u8282\u70b9\n\t\t\tfor(int j=0;j<=1;j++)\n\t\t\t\tfor(int k=0;k<=1;k++)v[0][i][j][k]=0;mk=0;\n\t\tquery(1,0,n,l,r);ll ret=0;//\u7edf\u8ba1\u5947\u6570\u4e2a1\u67090\u62161\u4e2a0\u7684\u533a\u95f4\u6570\n\t\tfor(int i=0;i<=3;i++)ret+=v[0][i][1][0]+v[0][i][1][1];\n\t\treturn ret;\n\t}\n\tinline void build(int p,int l,int r)//\u5efa\u6811\u65e0\u8111merge\u5c31\u884c\u4e86\n\t{\n\t\tif(r-l==1){if(a[r]){v[p][3][1][0]=1;}else {v[p][3][0][1]=1;}return;}\n\t\tint mid=(l+r)/2;build(p<<1,l,mid);build(p<<1|1,mid,r);merge(p,p<<1,p<<1|1);\n\t}\n}lt1;\nstruct linetree2//\u7b2c\u4e8c\u68f5\u7ebf\u6bb5\u6811\u5355\u72ec\u7ef4\u62a4\u6761\u4ef62,\u548c\u7b2c\u4e00\u4e2a\u6811\u5199\u6cd5\u5dee\u4e0d\u591a\n{\n\tll v[4*N][4][2];\n\tinline void merge(int p,int p1,int p2)//merge\u4f1a\u6bd4\u7b2c\u4e00\u4e2a\u6811\u597d\u5199\u70b9\n\t{\n\t\tfor(int i=0;i<=1;i++)v[p][0][i]=v[p1][0][i]+v[p2][0][i]+v[p1][2][i]+v[p2][1][i];\n\t\tfor(int i=0;i<=1;i++)v[p][1][i]=v[p1][3][i]+v[p1][1][i];\n\t\tfor(int i=0;i<=1;i++)v[p][2][i]=v[p2][3][i]+v[p2][2][i];\n\t\tfor(int i=0;i<=1;i++)v[p][3][i]=0;\n\t\tfor(int i=0;i<=1;i++)\n\t\t\tfor(int j=0;i+j<=1;j++)\n\t\t\t\tv[p][0][i+j]+=v[p1][2][i]*v[p2][1][j],\n\t\t\t\tv[p][1][i+j]+=v[p1][3][i]*v[p2][1][j],\n\t\t\t\tv[p][2][i+j]+=v[p1][2][i]*v[p2][3][j],\n\t\t\t\tv[p][3][i+j]+=v[p1][3][i]*v[p2][3][j];\n\t}\n\tinline void modify(int p,int l,int r,int pos)//\u5176\u4ed6\u7684\u51fd\u6570\u57fa\u672c\u4e00\u6837\u4e86\n\t{\n\t\tif(r-l==1)\n\t\t{\n\t\t\tif(a[r]){v[p][3][1]=1;v[p][3][0]=0;}\n\t\t\telse {v[p][3][0]=1;v[p][3][1]=0;}return;\n\t\t}int mid=(l+r)/2;\n\t\tif(pos<=mid){modify(p<<1,l,mid,pos);}else {modify(p<<1|1,mid,r,pos);}\n\t\tmerge(p,p<<1,p<<1|1);return;\n\t}\n\tinline void query(int p,int l,int r,int dl,int dr)\n\t{\n\t\tif(dl==l&&dr==r)\n\t\t{\n\t\t\tif(mk==0){for(int i=0;i<=3;i++)for(int j=0;j<=1;j++)v[0][i][j]=v[p][i][j];mk=1;}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor(int i=0;i<=3;i++)for(int j=0;j<=1;j++)v[4*n+1][i][j]=v[0][i][j];\n\t\t\t\tmerge(0,4*n+1,p);\n\t\t\t}return;\n\t\t}int mid=(l+r)/2;\n\t\tif(dl<mid){query(p<<1,l,mid,dl,min(dr,mid));}\n\t\tif(mid<dr){query(p<<1|1,mid,r,max(dl,mid),dr);}\n\t}\n\tinline ll cquery(int l,int r)\n\t{\n\t\tfor(int i=0;i<=3;i++)for(int j=0;j<=1;j++)v[0][i][j]=0;mk=0;\n\t\tquery(1,0,n,l,r);ll ret=0;\n\t\tfor(int i=0;i<=3;i++)ret+=v[0][i][1];\n\t\treturn ret;\n\t}\n\tinline void build(int p,int l,int r)\n\t{\n\t\tif(r-l==1){if(a[r]){v[p][3][1]=1;}else {v[p][3][0]=1;}return;}\n\t\tint mid=(l+r)/2;build(p<<1,l,mid);build(p<<1|1,mid,r);merge(p,p<<1,p<<1|1);\n\t}\n}lt2;\nstruct treearray//\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u9700\u8981\u7279\u5224\u7684\u533a\u95f4,\u8fd9\u91cc\u5c01\u88c5\u4e86\u4e0b\n{\n\tint ta[N];\n\tinline void c(int x,int t){for(;x<=n;x+=x&(-x)){ta[x]+=t;}}\n\tinline int d(int x){int r=0;for(;x>0;x-=x&(-x)){r+=ta[x];}return r;}\n\tinline ll q(int l,int r){return d(r)-d(l);}\n}tr1,tr2;\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){scanf(\"%d\",&a[i]);}lt1.build(1,0,n);lt2.build(1,0,n);//\u5efa\u6811,\u5efa\u6811\u72b6\u6570\u7ec4\n\tfor(int i=1;i<=n;i++){if(a[i]){tr1.c(i,1);}if(a[i]^a[i+1]&&i!=n){tr2.c(i,1);}}\n\tscanf(\"%d\",&m);\n\tfor(int i=1,t,l,r;i<=m;i++)\n\t{\n\t\tscanf(\"%d\",&t);\n\t\tif(t==1)//\u7136\u540e\u5728\u6bcf\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u4e0a\u4fee\u6539\u5c31\u884c\u4e86\n\t\t{\n\t\t\tscanf(\"%d\",&l);a[l]^=1;\n\t\t\tlt1.modify(1,0,n,l);lt2.modify(1,0,n,l);tr1.c(l,(a[l])?1:-1);\n\t\t\tif(l!=n){tr2.c(l,(a[l]^a[l+1])?1:-1);}\n\t\t\tif(l!=1){tr2.c(l-1,(a[l-1]^a[l])?1:-1);}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tscanf(\"%d%d\",&l,&r);ll len=r-l+1;//\u6700\u540e\u52a0\u4e0a\u8981\u7279\u5224\u7684\u533a\u95f4\u5c31\u884c,\u6ce8\u610f\u8fb9\u754c\u6761\u4ef6,10,01\u7684\u5de6\u7aef\u70b9\u53ea\u80fd\u5230r-1\n\t\t\tprintf(\"%lld\\n\",len*(len+1)/2-lt1.cquery(l-1,r)-lt2.cquery(l-1,r)+tr1.q(l-1,r)+tr2.q(l-1,r-1));\n\t\t}\n\t}return 0;//\u62dc\u62dc\u7a0b\u5e8f~\n}\n\n```\n\n\n\n",
        "postTime": 1525096523,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4428 \u3010[BJOI2018]\u4e8c\u8fdb\u5236\u3011"
    },
    {
        "content": "\u4e8c\u8fdb\u5236\u4e32\u5728\u6a21$3$\u610f\u4e49\u4e0b\uff0c\u6bcf\u4e00\u4f4d\u4ee3\u8868\u7684\u4f59\u6570\u663e\u7136\u662f$121212$\u8fd9\u6837\u5b50\u4ea4\u66ff\u51fa\u73b0\u7684\u3002  \n\u5176\u5b9e\u6362\u79cd\u65b9\u6cd5\u770b\uff0c\u5c31\u662f$1,-1,1,-1,...$  \n\u5982\u679c\u8be2\u95ee\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4e32\u80fd\u5426\u88ab$3$\u6574\u9664\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u8003\u8651\u5947\u6570\u4f4d\u4e0a\u7684$1$\u7684\u4e2a\u6570\u548c\u5076\u6570\u4f4d\u4e0a\u7684$1$\u7684\u4e2a\u6570\u5c31\u884c\u4e86\u3002  \n\u5982\u679c\u53ef\u4ee5\u91cd\u6392\uff0c\u6211\u4eec\u6765\u8003\u8651\u5982\u4f55\u5206\u914d\u3002  \n\u9996\u5148\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6\u4e3a$len$\u7684\u533a\u95f4\uff0c\u6a21$3$\u4f59$1$\u7684\u4f4d\u6709$[\\frac{len+1}{2}]$\u4e2a\uff0c\u4f59$-1$\u7684\u6709$[\\frac{len}{2}]$\u4e2a\u3002\u5047\u8bbe\u8981\u5206\u914d$k$\u4e2a$1$\u3002\n\u51d1\u6210$3$\u7684\u500d\u6570\u7684\u60c5\u51b5\u4e00\u5b9a\u662f$1,-1$\u4e24\u4e24\u914d\u5bf9\uff0c\u5269\u4e0b\u8f83\u591a\u7684\u90a3\u4e2a\u7684\u6570\u91cf\u662f$3$\u7684\u500d\u6570\u3002  \n\u5982\u679c$k$\u662f\u5076\u6570\u90a3\u4e48\u4e00\u5b9a\u53ef\u4ee5\u4e24\u4e24\u914d\u5bf9\u3002  \n\u5982\u679c$k$\u662f\u5947\u6570\u7684\u8bdd\uff0c\u5c31\u53ea\u80fd$k-3$\u4e2a$1$\u5747\u5300\u5206\u914d\u7ed9$-1,1$\uff0c\u5269\u4e0b$3$\u4e2a\u5206\u914d\u7ed9$1$\u3002   \n\u90a3\u4e48\u9700\u8981\u6ee1\u8db3$\\frac{k+3}{2}\\le [\\frac{len+1}{2}]$\uff0c\u62c6\u5f00\u540e\u5982\u679c$len$\u662f\u5947\u6570\u5219\u8981\u6ee1\u8db3$k\\le len-2$\uff0c\u5982\u679c$len$\u662f\u5076\u6570\u5219\u6ee1\u8db3$k\\le len-3$\u3002  \n\n\u90a3\u4e48\u8fd9\u4e2a\u6761\u4ef6\u518d\u8fdb\u4e00\u6b65\u5c31\u662f\uff0c\u5982\u679c$0$\u7684\u4e2a\u6570$\\ge 3$\uff0c\u90a3\u4e48\u4e00\u5b9a\u6ee1\u8db3\u3002  \n\u5982\u679c$0$\u7684\u4e2a\u6570\u4e3a$2$\uff0c\u6b64\u65f6$len=k+2$ \u4e3a\u5947\u6570\uff0c\u4e5f\u6ee1\u8db3\u3002\n\n\u6240\u4ee5\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\u5c31\u662f\n\n- \u53ea\u6709\u4e00\u4e2a$1$\u7684\u533a\u95f4($k\\lt 3$,\u4e14$k$\u4e3a\u5947\u6570\u5c31\u53ea\u6709$1$)\n- \u51fa\u73b0\u4e86\u5947\u6570\u4e2a$1$\uff0c\u4e14$0$\u7684\u4e2a\u6570\u4e3a$0/1$\u3002\n\n\u56e0\u4e3a\u8981\u505a\u5230\u4e0d\u91cd\uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u6761\u4ef6\u53ef\u4ee5\u8865\u5145\u6210\u201c\u533a\u95f4\u5185\u53ea\u6709$1$\u4e2a$1$\uff0c  \u4e14$0$\u7684\u4e2a\u6570\u4e0d\u5c11\u4e8e$2$\u4e2a\u201d\u3002  \n\u7b54\u6848\u5c31\u53ef\u4ee5\u7528\u603b\u7684\u8fde\u7eed\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\u51cf\u53bb\u4e0d\u5408\u6cd5\u7684\u6570\u91cf\u3002  \n\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e0d\u5408\u6cd5\u7684\u8fde\u7eed\u5b50\u5e8f\u5217\u7684\u6570\u91cf\u3002\n\n\u8003\u8651\u5408\u5e76\u4e24\u4e2a\u8282\u70b9\u4e4b\u540e\u5982\u4f55\u4ea7\u751f\u8d21\u732e\uff0c \n\u8bbe$dl[0/1][0/1]$\u8868\u793a\u5f3a\u5236\u9009\u62e9\u5de6\u7aef\u70b9\u7684\u4e00\u6bb5\u8fde\u7eed\u533a\u95f4\u4e2d\uff0c$0$\u7684\u51fa\u73b0\u6b21\u6570\u4e3a$0/1$\uff0c$1$\u7684\u51fa\u73b0\u6b21\u6570\u7684\u5947\u5076\u6027\u4e3a$0/1$\u7684\u5e8f\u5217\u4e2a\u6570\uff0c$dr$\u540c\u7406\u3002  \n$fl[0/1/2]$\u8868\u793a\u5f3a\u5236\u7ecf\u8fc7\u5de6\u7aef\u70b9\uff0c$1$\u6070\u597d\u51fa\u73b0\u4e86$1$\u6b21\uff0c\u4e14$0$\u7684\u51fa\u73b0\u6b21\u6570\u4e3a$0,1,\\ge 2$\u7684\u5e8f\u5217\u4e2a\u6570\u3002$fr$\u540c\u7406\u3002  \n\u518d\u7edf\u8ba1\u4e00\u4e0b\u5de6\u53f3\u8fde\u7eed\u7684$0$\u7684\u4e2a\u6570\uff0c\u4ee5\u53ca\u533a\u95f4\u5185$0/1$\u7684\u4e2a\u6570\u3002  \n\n\u6bcf\u6b21\u8003\u8651\u8de8\u8fc7\u4e24\u6bb5\u7684\u4e0d\u5408\u6cd5\u533a\u95f4\uff0c\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\n#define ll long long\n#define MAX 100100\n#define lson (now<<1)\n#define rson (now<<1|1)\ninline int read()\n{\n\tint x=0;bool t=false;char ch=getchar();\n\twhile((ch<'0'||ch>'9')&&ch!='-')ch=getchar();\n\tif(ch=='-')t=true,ch=getchar();\n\twhile(ch<='9'&&ch>='0')x=x*10+ch-48,ch=getchar();\n\treturn t?-x:x;\n}\nint n,Q,a[MAX];\nstruct data\n{\n\tll dl[2][2],dr[2][2],fl[3],fr[3],l0,r0,s;\n\tint s0,s1;\n\tvoid init()\n\t{\n\t\tdl[0][0]=dr[0][0]=dl[0][1]=dr[0][1]=dl[1][0]=dr[1][0]=dl[1][1]=dr[1][1]=0;\n\t\tfl[0]=fr[0]=fl[1]=fr[1]=fl[2]=fr[2]=0;\n\t\tl0=r0=s0=s1=s=0;\n\t}\n\tdata(){init();}\n\tvoid pre(int x)\n\t{\n\t\tinit();\n\t\tif(x)dl[0][1]=dr[0][1]=s1=s=fl[0]=fr[0]=1;\n\t\telse dl[1][0]=dr[1][0]=s0=l0=r0=1;\n\t}\n}t[MAX<<2];\ndata Merge(data A,data B)\n{\n\tdata c;c.init();\n\tfor(int i=0;i<2;++i)\n\t\tfor(int j=0;j<2;++j)\n\t\t{\n\t\t\tc.dl[i][j]+=A.dl[i][j];\n\t\t\tc.dr[i][j]+=B.dr[i][j];\n\t\t\tif(i>=A.s0)c.dl[i][j]+=B.dl[i-A.s0][j^(A.s1&1)];\n\t\t\tif(i>=B.s0)c.dr[i][j]+=A.dr[i-B.s0][j^(B.s1&1)];\n\t\t}\n\tfor(int i=0;i<3;++i)\n\t{\n\t\tc.fl[i]+=A.fl[i];c.fr[i]+=B.fr[i];\n\t\tif(!A.s1)c.fl[min(2,i+A.s0)]+=B.fl[i];\n\t\tif(!B.s1)c.fr[min(2,i+B.s0)]+=A.fr[i];\n\t}\n\tif(A.s1==1&&B.l0)c.fl[min(2ll,A.s0+B.l0)]+=1,c.fl[2]+=B.l0-1;\n\tif(B.s1==1&&A.r0)c.fr[min(2ll,B.s0+A.r0)]+=1,c.fr[2]+=A.r0-1;\n\tc.l0=(A.s1==0)?A.l0+B.l0:A.l0;\n\tc.r0=(B.s1==0)?B.r0+A.r0:B.r0;\n\tc.s0=A.s0+B.s0;c.s1=A.s1+B.s1;\n\n\tc.s=A.s+B.s;\n\tc.s+=A.dr[0][0]*(B.dl[0][1]+B.dl[1][1]);\n\tc.s+=A.dr[0][1]*(B.dl[0][0]+B.dl[1][0]);\n\tc.s+=A.dr[1][0]*B.dl[0][1];\n\tc.s+=A.dr[1][1]*B.dl[0][0];\n\tif(B.l0)c.s+=B.l0*(A.fr[0]+A.fr[1]+A.fr[2])-A.fr[0];\n\tif(A.r0)c.s+=A.r0*(B.fl[0]+B.fl[1]+B.fl[2])-B.fl[0];\n\treturn c;\n}\nvoid Build(int now,int l,int r)\n{\n\tif(l==r){t[now].pre(a[l]);return;}\n\tint mid=(l+r)>>1;\n\tBuild(lson,l,mid);Build(rson,mid+1,r);\n\tt[now]=Merge(t[lson],t[rson]);\n}\nvoid Modify(int now,int l,int r,int p)\n{\n\tif(l==r){t[now].pre(a[l]);return;}\n\tint mid=(l+r)>>1;\n\tif(p<=mid)Modify(lson,l,mid,p);\n\telse Modify(rson,mid+1,r,p);\n\tt[now]=Merge(t[lson],t[rson]);\n}\ndata Query(int now,int l,int r,int L,int R)\n{\n\tif(L==l&&R==r)return t[now];\n\tint mid=(l+r)>>1;\n\tif(R<=mid)return Query(lson,l,mid,L,R);\n\tif(L>mid)return Query(rson,mid+1,r,L,R);\n\treturn Merge(Query(lson,l,mid,L,mid),Query(rson,mid+1,r,mid+1,R));\n}\nint main()\n{\n\tn=read();\n\tfor(int i=1;i<=n;++i)a[i]=read();\n\tBuild(1,1,n);\n\tQ=read();\n\twhile(Q--)\n\t{\n\t\tint opt=read(),l=read(),r;\n\t\tif(opt==1)a[l]^=1,Modify(1,1,n,l);\n\t\telse r=read(),printf(\"%lld\\n\",1ll*(r-l+1)*(r-l+2)/2-Query(1,1,n,l,r).s);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1550048841,
        "uid": 21283,
        "name": "yybyyb",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4428 \u3010[BJOI2018]\u4e8c\u8fdb\u5236\u3011"
    },
    {
        "content": "\u8003\u8bd5\u65f6\u5019\u573a\u5207\u4e86\uff0c\u673a\u623f\u795e\u4ed9\u7ed9\u4e86\u4e2a\u539f\u9898\u94fe\u63a5\uff0c\u4e00\u770b\u9898\u89e3\u5413\u50bb\u4e86\uff0c\u548b\u5168\u662f\u9634\u95f4\u7ebf\u6bb5\u6811\u3002\n\n\u7ed9\u4e2a\u9633\u95f4 `set` \u52a0\u6811\u72b6\u6570\u7ec4\u505a\u6cd5\u3002\n\n\u9996\u5148\u5076\u6570\u4f4d\u76f8\u5f53\u4e8e\u4e00\u5947\u6570\u4f4d\u76f8\u5f53\u4e8e\u4e8c\uff0c\u5076\u6570\u548c\u5947\u6570\u7684\u6570\u91cf\u6700\u591a\u5dee\u4e09\uff0c\u5408\u6cd5\u7684\u533a\u95f4\u5c31\u7b49\u4ef7\u4e8e\u4e00\u7684\u6570\u91cf\u4e3a\u5076\u6570\u6216\u8005\u4e3a\u5927\u4e8e\u4e00\u7684\u5947\u6570\u5e76\u4e14\u6700\u5c11\u6709\u4e24\u4e2a\u96f6\u3002\u5176\u4ed6\u9898\u89e3\u90fd\u5df2\u7ecf\u8bf4\u5f97\u5f88\u6e05\u695a\u4e86\u3002\n\n\u7136\u540e\u8003\u8651\u6c42\u4e0d\u5408\u6cd5\u7684\u533a\u95f4\uff0c\u5c31\u662f\u533a\u95f4\u91cc\u6709\u5947\u6570\u4e2a\u4e00\u5e76\u4e14\u96f6\u4e0d\u8d85\u8fc7\u4e24\u4e2a\uff0c\u6216\u8005\u53ea\u6709\u4e00\u4e2a\u4e00\u7684\u3002\n\n\u5148\u8003\u8651\u7b2c\u4e00\u79cd\u7684\u8d21\u732e\u3002\u6ca1\u6709\u96f6\u7684\u8bdd\u5c31\u662f\u6bcf\u4e2a\u8fde\u7eed\u7684\u5168\u4e00\u6bb5\u4e00\u7b97\u8d21\u732e\uff0c\u6709\u4e00\u4e2a\u96f6\u7684\u8bdd\u5c31\u53ef\u4ee5\u5728\u8fd9\u4e2a\u96f6\u7684\u5730\u65b9\u8ba1\u7b97\u8d21\u732e\uff0c\u8d21\u732e\u53ea\u548c\u5b83\u524d\u9762\u540e\u9762\u7b2c\u4e00\u4e2a\u96f6\u6709\u5173\u3002\u7528\u4e00\u4e2a `set` \u7ef4\u62a4\u6240\u6709\u96f6\u7684\u4f4d\u7f6e\uff0c\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u8d21\u732e\uff0c\u4e3a\u4e86\u65b9\u4fbf\u628a\u7b2c\u4e00\u79cd\u5168\u4e00\u6bb5\u7684\u8d21\u732e\u5728\u540e\u9762\u7b2c\u4e00\u4e2a\u96f6\u7684\u5730\u65b9\u8ba1\u7b97\u3002\u67e5\u8be2\u7684\u65f6\u5019\u5c31\u662f\u4e8c\u5206\u51fa\u533a\u95f4\u91cc\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u96f6\uff0c\u65c1\u8fb9\u5355\u72ec\u7b97\u4e00\u4e0b\uff0c\u4e2d\u95f4\u53ef\u4ee5\u76f4\u63a5\u7528\u6811\u72b6\u6570\u7ec4\u67e5\u8be2\u3002\n\n\u7b2c\u4e8c\u79cd\u8d21\u732e\u4e5f\u5dee\u4e0d\u591a\uff0c\u53ef\u4ee5\u5728\u552f\u4e00\u7684\u8fd9\u4e2a\u4e00\u7684\u5730\u65b9\u8ba1\u7b97\u3002\u4f46\u662f\u6211\u4eec\u8981\u51cf\u6389\u540c\u65f6\u6ee1\u8db3\u4e24\u4e2a\u9650\u5236\u7684\u3002\n\n\u7136\u540e\u5584\u7528\u51fd\u6570\u51cf\u5c11\u7ec6\u8282\u3002\u8003\u573a\u4ee3\u7801\u53ef\u80fd\u6bd4\u8f83\u4e11\uff0c\u4f46\u662f\u5927\u6982\u6bd4\u5176\u4ed6\u9898\u89e3\u8981\u9633\u95f4\u4e00\u70b9\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int readint(){\n\tint x=0;\n\tbool f=0;\n\tchar c=getchar();\n\twhile(!isdigit(c)&&c!='-') c=getchar();\n\tif(c=='-'){\n\t\tf=1;\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c)){\n\t\tx=x*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn f?-x:x;\n}\nconst int maxn=1e5+5;\nint n,m;\nbool a[maxn];\nset<int> s0,s1;\ninline int lowbit(int x){\n\treturn x&-x;\n}\ntypedef long long ll;\nstruct bit{\n\tll c[maxn];\n\tvoid modify(int x,ll k){\n\t\twhile(x<=n){\n\t\t\tc[x]+=k;\n\t\t\tx+=lowbit(x);\n\t\t}\n\t}\n\tll query(int x){\n\t\tll s=0;\n\t\twhile(x){\n\t\t\ts+=c[x];\n\t\t\tx-=lowbit(x);\n\t\t}\n\t\treturn s;\n\t}\n}t0,t1;\nll f1(int l,int r){\n\treturn 1ll*(l+1)/2*((r+2)/2)+1ll*(l+2)/2*((r+1)/2);\n}\nll f2(int l){\n\treturn 1ll*(l+1)/2*((l+2)/2);\n}\nvoid update0(int x,bool flag){\n\tint pre=*--s0.find(x),suc=*++s0.find(x);\n\tt0.modify(x,(f1(x-pre-1,suc-x-1)+f2(x-pre-1))*(flag?1:-1));\n}\nll f3(int l,int r){\n\treturn 1ll*(l+1)*(r+1)-1-(bool)l-(bool)r;\n}\nvoid update1(int x,bool flag){\n\tint pre=*--s1.find(x),suc=*++s1.find(x);\n\tt1.modify(x,f3(x-pre-1,suc-x-1)*(flag?1:-1));\n}\nint main(){\n\tfreopen(\"bin.in\",\"r\",stdin);\n\tfreopen(\"bin.out\",\"w\",stdout);\n\tn=readint();\n\tfor(int i=1;i<=n;i++) a[i]=readint();\n\ts0.insert(0);\n\ts1.insert(0);\n\tfor(int i=1;i<=n;i++)\n\t\tif(a[i]) s1.insert(i);\n\t\telse s0.insert(i);\n\ts0.insert(n+1);\n\ts1.insert(n+1);\n\tfor(int i=1;i<=n;i++)\n\t\tif(a[i]) update1(i,1);\n\t\telse update0(i,1);\n\tm=readint();\n\twhile(m--){\n\t\tint opt=readint();\n\t\tif(opt==1){\n\t\t\tint x=readint(),pre=*--s0.lower_bound(x),suc=*s0.upper_bound(x);\n\t\t\tif(pre) update0(pre,0);\n\t\t\tif(suc<=n) update0(suc,0);\n\t\t\tif(a[x]){\n\t\t\t\ts0.insert(x);\n\t\t\t\tupdate0(x,1);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tupdate0(x,0);\n\t\t\t\ts0.erase(x);\n\t\t\t}\n\t\t\tif(pre) update0(pre,1);\n\t\t\tif(suc<=n) update0(suc,1);\n\t\t\tpre=*--s1.lower_bound(x);\n\t\t\tsuc=*s1.upper_bound(x);\n\t\t\tif(pre) update1(pre,0);\n\t\t\tif(suc<=n) update1(suc,0);\n\t\t\tif(a[x]){\n\t\t\t\tupdate1(x,0);\n\t\t\t\ts1.erase(x);\n\t\t\t}\n\t\t\telse{\n\t\t\t\ts1.insert(x);\n\t\t\t\tupdate1(x,1);\n\t\t\t}\n\t\t\tif(pre) update1(pre,1);\n\t\t\tif(suc<=n) update1(suc,1);\n\t\t\ta[x]=!a[x];\n\t\t}\n\t\telse{\n\t\t\tint l,r;\n\t\t\tl=readint();\n\t\t\tr=readint();\n\t\t\tint fst=*s0.lower_bound(l),lst=*--s0.upper_bound(r);\n\t\t\tll res=0;\n\t\t\tif(fst>r) res=f2(r-l+1);\n\t\t\telse if(fst==lst) res=f1(fst-l,r-fst)+f2(fst-l)+f2(r-fst);\n\t\t\telse{\n\t\t\t\tint suc=*++s0.find(fst),pre=*--s0.find(lst);\n\t\t\t\tres=t0.query(lst-1)-t0.query(fst)+f1(fst-l,suc-fst-1)+f1(lst-pre-1,r-lst)+f2(fst-l)+f2(lst-pre-1)+f2(r-lst);\n\t\t\t}\n\t\t\tfst=*s1.lower_bound(l);\n\t\t\tlst=*--s1.upper_bound(r);\n\t\t\tif(fst<=r){\n\t\t\t\tif(fst==lst) res+=f3(fst-l,r-fst);\n\t\t\t\telse{\n\t\t\t\t\tint suc=*++s1.find(fst),pre=*--s1.find(lst);\n\t\t\t\t\tres+=t1.query(lst-1)-t1.query(fst)+f3(fst-l,suc-fst-1)+f3(lst-pre-1,r-lst);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"%lld\\n\",1ll*(r-l+1)*(r-l+2)/2-res);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1626077319,
        "uid": 174045,
        "name": "FZzzz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4428 \u3010[BJOI2018]\u4e8c\u8fdb\u5236\u3011"
    },
    {
        "content": "```\n\u672c\u9898\u89e3\u8bb2\u89e3DDP\u7684\u77e9\u9635\u5199\u6cd5\uff0c\u5e76\u4ecb\u7ecd\u4e86\u7b14\u8005\u4ece\u672c\u9898\u4e2d\u5b66\u5230\u7684\u5361\u5e38\u6280\u5de7\u3002\n```\n\n\u9996\u5148\u5206\u6790\u9898\u610f\uff1a\u600e\u4e48\u5904\u7406\u8fd9\u4e2a\u201c\u4efb\u610f\u6392\u5e8f\u540e\u80fd\u5426\u53d8\u6210$3$\u7684\u500d\u6570\u201d\u7684\u95ee\u9898\uff1f\n\n\u6839\u636e\u5c0f\u5b66\u5965\u6570\u5185\u5bb9\uff0c\u6211\u4eec\u77e5\u9053\uff0c$x$\u8fdb\u5236\u4e0b\u7684\u6570$a$\u6a21$x+1$\u7684\u4f59\u6570\uff0c\u7b49\u4e8e$a$\u5947\u6570\u4f4d\u4e0a\u7684\u6570\u5b57\u548c\u4e0e\u5076\u6570\u4f4d\u4e0a\u7684\u6570\u5b57\u548c\u7684\u5dee\u6a21$x+1$\u7684\u503c\uff08\u8fd9\u91cc\u8ba4\u4e3a\u4e2a\u4f4d\u662f\u7b2c\u4e00\u4f4d\uff0c\u4ece\u53f3\u5f80\u5de6\u4f4d\u6570\u9012\u589e\uff09\u3002\u4e8b\u5b9e\u4e0a\u975e\u5e38\u5bb9\u6613\u8bc1\u660e\u8fd9\u4e00\u70b9\uff1a\u4ee4$a=\\sum_{i=0}b_ix^i$\uff0c\u5219\uff1a\n\n$a\\equiv \\sum_{i=0}b_ix^i$\n\n$\\text{ }\\text{ }\\equiv\\sum_{i=0}b_i(-1)^i$\n\n$\\text{ }\\text{ }\\equiv \\sum_{i=0}b_{2i}-\\sum_{i=0}b_{2i+1}(\\text{mod}\\text{ }x+1)$\n\n\u8bc1\u6bd5\u3002\u90a3\u4e48\u63a5\u4e0b\u6765\u8003\u8651\uff1a\u4ec0\u4e48\u6837\u7684\u6570\u91cd\u6392\u540e\u80fd\u53d8\u6210$3$\u7684\u500d\u6570\uff1f\n\n\u9996\u5148\uff0c\u5982\u679c$1$\u7684\u4e2a\u6570\u662f\u5076\u6570\uff0c\u90a3\u4e48\u663e\u7136\u53ef\u4ee5\uff1a\u5947\u6570\u4f4d\u548c\u5076\u6570\u4f4d\u653e\u76f8\u540c\u6570\u91cf\u7684$1$\u5373\u53ef\u3002\n\n\u5982\u679c$1$\u6709\u5947\u6570\u4e2a\uff0c\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u8981\u5c3d\u91cf\u8ba9\u5947\u5076\u4f4d\u7684\u5dee\u4e3a$3$\u3002\u9996\u5148\u6211\u4eec\u53d1\u73b0\uff1a\u5fc5\u987b\u6709\u81f3\u5c11$3$\u4e2a$1$\uff08\u56e0\u4e3a\u5f88\u660e\u663e\u53ea\u6709$1$\u4e2a$1$\u662f\u4e0d\u884c\u7684\uff09\u3002\u540c\u65f6\uff0c\u4e3a\u4e86\u8ba9\u8fd9$3$\u4e2a$1$\u90fd\u653e\u5728\u5947\u4f4d\u4e0a\uff0c\u81f3\u5c11\u8981\u6709$2$\u4e2a$0$\u3002\u53ef\u4ee5\u9a8c\u8bc1\uff0c\u80fd\u6392\u6210$3$\u7684\u500d\u6570\u7684\u5145\u8981\u6761\u4ef6\u662f\u6ee1\u8db3\u4e0b\u5217\u6761\u4ef6\u4e2d\u7684\u81f3\u5c11\u4e00\u4e2a\uff1a\n\n\uff081\uff09\u6709\u5076\u6570\u4e2a$1$\uff1b\n\n\uff082\uff09\u6709\u81f3\u5c11$3$\u4e2a$1$\u548c\u81f3\u5c11$2$\u4e2a$0$\u3002\n\n\u53d1\u73b0\u8fd9\u6837\u4e0d\u592a\u597d\u7edf\u8ba1\uff0c\u53cd\u9762\u8003\u8651\uff1a\u4e0d\u80fd\u6ee1\u8db3\u6761\u4ef6\u7684\u5fc5\u987b\u662f\u4e0b\u5217\u60c5\u51b5\u4e2d\u7684\u4e00\u4e2a\uff1a\n\n\uff081\uff09\u53ea\u6709\u4e00\u4e2a$1$\uff1b\n\n\uff082\uff09\u6709\u5947\u6570\u4e2a$1$\uff0c\u4e14$0$\u7684\u4e2a\u6570\u4e0d\u8d85\u8fc7$1$\u4e2a\u3002\n\n\u8fd9\u4e24\u7c7b\u4e4b\u95f4\u6709\u91cd\u53e0\uff0c\u4e0d\u59a8\u8fd0\u7528\u5bb9\u65a5\u539f\u7406\uff1a\u53cd\u9762\u7684\u4e2a\u6570\u5176\u5b9e\u7b49\u4e8e\u201c\u53ea\u6709\u4e00\u4e2a$1$\u201d\u7684\u4e2a\u6570\u52a0\u4e0a\u201c\u6709\u5947\u6570\u4e2a$1$\uff0c\u4e14$0$\u7684\u4e2a\u6570\u4e0d\u8d85\u8fc7$1$\u4e2a\u201d\u7684\u4e2a\u6570\u51cf\u53bb\u201c\u53ea\u6709\u4e00\u4e2a$1$\uff0c$0$\u7684\u4e2a\u6570\u4e0d\u8d85\u8fc7$1$\u4e2a\u201d\u7684\u4e2a\u6570\uff0c\u628a\u8fd9\u4e2a\u6570\u4ece\u5168\u90e8\u4e2d\u6392\u6389\u5373\u53ef\u3002\n\n\u4e0b\u9762\u5206\u4e09\u90e8\u5206\u89e3\u51b3\uff1a\n\n- \u201c\u53ea\u6709\u4e00\u4e2a$1$\uff0c$0$\u7684\u4e2a\u6570\u4e0d\u8d85\u8fc7$1$\u4e2a\u201d\u7684\u4e2a\u6570\uff1a\n\n\u8fd9\u90e8\u5206\u53c8\u7ec6\u5206\u4e3a\u4e24\u7c7b\uff0c\u6bd4\u8f83\u5bb9\u6613\u7ef4\u62a4\uff1a\n\n\uff081\uff09\u6709$1$\u4e2a$1$\uff0c\u6ca1\u6709$0$\uff1a\u5c31\u662f\u533a\u95f4\u91cc$1$\u7684\u4e2a\u6570\uff1b\n\n\uff082\uff09\u6709$1$\u4e2a$1$\uff0c$1$\u4e2a$0$\uff1a\u8fd9\u91cc\u5176\u5b9e\u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a$2$\u7684\u533a\u95f4\uff0c\u7ef4\u62a4\u76f8\u90bb\u4e24\u4e2a\u5143\u7d20\u7684\u5173\u7cfb\u5373\u53ef\u3002\n\n- \u201c\u53ea\u6709\u4e00\u4e2a$1$\u201d\u7684\u4e2a\u6570\uff1a\n\n\u8003\u8651$\\text{DP}$\u3002\n\n\u4ee4$g_{i,j}$\u8868\u793a\u4ee5$i$\u7ed3\u5c3e\u7684\u4e32\u4e2d\u6070\u6709$j$\u4e2a$1$\u7684\u975e\u7a7a\u4e32\u6570\u3002\u5f88\u660e\u663e\u6211\u4eec\u53ea\u9700\u5904\u7406$j=0$\u6216$j=1$\u7684\u60c5\u51b5\u3002\n\n\u7528$a_i$\u8868\u793a\u539f\u5e8f\u5217\u3002\n\n\uff081\uff09$a_i=0$\uff1a\n\n\u6b64\u65f6\u6613\u5f97$g_{i,0}=1+g_{i-1,0}$\uff0c$g_{i,1}=g_{i-1,1}$\uff1b\n\n\uff082\uff09$a_i=1$\n\n\u6b64\u65f6\u6613\u5f97$g_{i,0}=0$\uff0c$g_{i,1}=1+g_{i-1,0}$\u3002\n\n\u5982\u679c\u53ea\u662f\u4e00\u6b21\u8be2\u95ee\uff0c\u90a3\u4e48\u6211\u4eec\u987a\u5e8f\u626b\u4e00\u904d\u8db3\u77e3\u3002\u4f46\u95ee\u9898\u662f\uff1a\u73b0\u5728\u6211\u4eec\u5982\u4f55\u5904\u7406\u5bf9\u4e8e\u4efb\u610f\u533a\u95f4\u7684\u8be2\u95ee\uff1f\u53c8\u5982\u4f55\u5904\u7406\u4fee\u6539\uff1f\n\n\u60f3\u5230\uff1a\u7528\u77e9\u9635\u8fdb\u884c\u7ef4\u62a4\uff01\u6211\u4eec\u53ef\u4ee5\u628a$g_i$\u770b\u4f5c\u4e00\u4e2a\u5411\u91cf\uff0c\u5728$i-1$\u548c$i$\u4e4b\u95f4\u4f5c\u7ebf\u6027\u53d8\u6362\uff0c\u8fd9\u4e2a\u53d8\u6362\u53c8\u53ef\u4ee5\u7528\u77e9\u9635\u63cf\u8ff0\uff0c\u77e9\u9635\u8fd0\u7b97\u6709\u7ed3\u5408\u5f8b\uff0c\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u77e9\u9635\u4e58\u79ef\uff01\n\n\u606d\u559c\u4f60\uff0c\u4f60\u638c\u63e1\u4e86\u52a8\u6001$\\text{DP}$\uff08\u5373$\\text{DDP}$\uff09\u7684\u7cbe\u9ad3\u3002[\u8fd9\u662f\u6a21\u677f\u9898\u3002](https://www.luogu.com.cn/problem/P4719)\n\n\u53d1\u73b0\u5176\u5b9e\u6211\u4eec\u6700\u7ec8\u7684\u7b54\u6848\u5e76\u975e$g_{i,1}$\uff0c\u800c\u662f$\\sum_{i=l}^rg_{i,1}$\uff0c\u6211\u4eec\u4e0d\u59a8\u518d\u7ef4\u62a4\u4e00\u4e2a\u91cf$sg_i$\u8868\u793a\u5b83\u3002\u90a3\u4e48\u5f88\u660e\u663e$sg_i=sg_{i-1}+g_{i,1}$\uff0c\u7136\u540e\u5206\u522b\u4ee3\u5165\u4e0a\u9762\u7684\u8868\u8fbe\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u4e0b\u9762\u7684\u77e9\u9635\u5173\u7cfb\u5f0f\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/zgx3xnp9.png)\n\n\uff08\u56e0\u4e3a\u4e0d\u592a\u4f1a\u6253$\\text{LaTeX}$\u7684\u77e9\u9635\uff0c\u7528\u4e86\u56fe\u7247\uff0c\u8bf7\u89c1\u8c05\uff09\n\n\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\uff01\n\n- \u201c\u6709\u5947\u6570\u4e2a$1$\u201d\u7684\u4e2a\u6570\uff1a\n\n\u8fd9\u90e8\u5206\u5176\u5b9e\u548c\u7b2c\u4e8c\u90e8\u5206\u5dee\u4e0d\u591a\uff0c\u4e0d\u8fc7\u8981\u66f4\u590d\u6742\u4e00\u4e9b\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/tsmq0bot.png)\n\n\u597d\u4e86\uff0c\u5927\u529f\u544a\u6210\uff01\n\n\u6211\u4eec\u5f97\u51fa\u5982\u4e0b\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n\nusing namespace std;\n\nint n=0,m=0;\nint a[200000];\n\nstruct matrix\n{\n\tint r,c;\n\tlong long num[6][6];\n\tmatrix(int rr=0,int cc=0):r(rr),c(cc){memset(num,0,sizeof(num));}\n\tmatrix operator=(const matrix& a){this->r=a.r,this->c=a.c;memcpy(this->num,a.num,sizeof(a.num));return *this;}\n};\n\nmatrix operator*(const matrix &a,const matrix& b)\n{\n\tif(a.c!=b.r){return matrix();}\n\tmatrix ans(a.r,b.c);\n\tfor(int i=0;i<a.r;i++)\n\t{\n\t\tfor(int j=0;j<b.c;j++)\n\t\t{\n\t\t\tfor(int k=0;k<a.c;k++)\n\t\t\t{\n\t\t\t\tans.num[i][j]+=a.num[i][k]*b.num[k][j];\n\t\t\t}\n\t\t}\n\t}\n\treturn ans;\n}\n\nmatrix f0(6,6),f1(6,6),g0(4,4),g1(4,4),fs(1,6),gs(1,4);\nvoid init()\n{\n\tf0.num[0][2]=f0.num[1][3]=f0.num[1][4]=f0.num[4][4]=f0.num[5][2]=f0.num[5][5]=1;\n\tf1.num[0][1]=f1.num[0][4]=f1.num[1][0]=f1.num[2][3]=f1.num[2][4]=f1.num[3][2]=f1.num[4][4]=f1.num[5][1]=f1.num[5][4]=f1.num[5][5]=1;\n\tg0.num[0][0]=g0.num[1][1]=g0.num[1][2]=g0.num[2][2]=g0.num[3][0]=g0.num[3][3]=1;\n\tg1.num[0][1]=g1.num[0][2]=g1.num[2][2]=g1.num[3][1]=g1.num[3][2]=g1.num[3][3]=1;\n\tfs.num[0][5]=1,gs.num[0][3]=1;\n}\n\nstruct nd\n{\n\tint l,r;matrix f,g;int sum1,sum2;\n}t[400000];\nvoid build(int l,int r,int k=1)\n{\n\tt[k].l=l,t[k].r=r;\n\tif(l==r)\n\t{\n\t\tif(a[l]==0)t[k].f=f0,t[k].g=g0;else t[k].f=f1,t[k].g=g1;\n\t\tt[k].sum1=a[l];if(l<n&&(a[l]^a[l+1]))t[k].sum2=1;return;\n\t}\n\tint mid=(l+r)>>1;build(l,mid,k<<1),build(mid+1,r,k<<1|1);\n\tt[k].f=t[k<<1].f*t[k<<1|1].f,t[k].g=t[k<<1].g*t[k<<1|1].g;\n\tt[k].sum1=t[k<<1].sum1+t[k<<1|1].sum1,t[k].sum2=t[k<<1].sum2+t[k<<1|1].sum2;\n}\nvoid change(int pos,int k=1)\n{\n\tif(t[k].l==t[k].r)\n\t{\n\t\tif(a[pos]==0)t[k].f=f0,t[k].g=g0;else t[k].f=f1,t[k].g=g1;\n\t\tt[k].sum1=a[pos];if(pos<n&&(a[pos]^a[pos+1]))t[k].sum2=1;else t[k].sum2=0;return;\n\t}\n\tint mid=(t[k].l+t[k].r)>>1;\n\tif(pos<=mid)change(pos,k<<1);else change(pos,k<<1|1);\n\tt[k].f=t[k<<1].f*t[k<<1|1].f,t[k].g=t[k<<1].g*t[k<<1|1].g;\n\tt[k].sum1=t[k<<1].sum1+t[k<<1|1].sum1,t[k].sum2=t[k<<1].sum2+t[k<<1|1].sum2;\n}\nmatrix query_f(int l,int r,int k=1)\n{\n\tif(l<=t[k].l&&t[k].r<=r)return t[k].f;\n\tint pos=(t[k].l+t[k].r)>>1;\n\tif(l>pos)return query_f(l,r,k<<1|1);\n\tif(r<=pos)return query_f(l,r,k<<1);\n\treturn query_f(l,r,k<<1)*query_f(l,r,k<<1|1);\n}\nmatrix query_g(int l,int r,int k=1)\n{\n\tif(l<=t[k].l&&t[k].r<=r)return t[k].g;\n\tint pos=(t[k].l+t[k].r)>>1;\n\tif(l>pos)return query_g(l,r,k<<1|1);\n\tif(r<=pos)return query_g(l,r,k<<1);\n\treturn query_g(l,r,k<<1)*query_g(l,r,k<<1|1);\n}\nint query_s1(int l,int r,int k=1)\n{\n\tif(l>r)return 0;\n\tif(l<=t[k].l&&t[k].r<=r)return t[k].sum1;\n\tint pos=(t[k].l+t[k].r)>>1;\n\tif(l>pos)return query_s1(l,r,k<<1|1);\n\tif(r<=pos)return query_s1(l,r,k<<1);\n\treturn query_s1(l,r,k<<1)+query_s1(l,r,k<<1|1);\n}\nint query_s2(int l,int r,int k=1)\n{\n\tif(l>r)return 0;\n\tif(l<=t[k].l&&t[k].r<=r)return t[k].sum2;\n\tint pos=(t[k].l+t[k].r)>>1;\n\tif(l>pos)return query_s2(l,r,k<<1|1);\n\tif(r<=pos)return query_s2(l,r,k<<1);\n\treturn query_s2(l,r,k<<1)+query_s2(l,r,k<<1|1);\n}\n\nvoid print_matrix(const matrix& a)\n{\n\tfor(int i=0;i<a.r;i++)\n\t{\n\t\tfor(int j=0;j<a.c;j++)printf(\"%lld \",a.num[i][j]);\n\t\tputs(\"\");\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d\",&n);for(int i=1;i<=n;i++)scanf(\"%d\",&a[i]);\n\tinit();\n\tbuild(1,n);\n\t/*matrix t=fs;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(a[i])t=t*f1;else t=t*f0;\n\t\tprint_matrix(t);puts(\"\");\n\t}*/\n\tscanf(\"%d\",&m);int op=0,pos=0,l=0,r=0;\n\twhile(m--)\n\t{\n\t\tscanf(\"%d\",&op);\n\t\tif(op==1)\n\t\t{\n\t\t\tscanf(\"%d\",&pos);\n\t\t\ta[pos]^=1;change(pos);if(pos>1)change(pos-1);\n\t\t\t//for(int i=1;i<=n;i++)printf(\"%d \",query_s2(i,i));puts(\"\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tscanf(\"%d%d\",&l,&r);\n\t\t\tlong long len=r-l+1;\n\t\t\tlong long ans0=len*(len+1)/2;\n\t\t\tlong long ans1=(fs*query_f(l,r)).num[0][4];\n\t\t\tlong long ans2=(gs*query_g(l,r)).num[0][2];\n\t\t\tlong long ans3=query_s1(l,r)+query_s2(l,r-1);\n\t\t\t//printf(\"%lld %lld %lld %lld\\n\",ans0,ans1,ans2,ans3);\n\t\t\tprintf(\"%lld\\n\",ans0-ans1-ans2+ans3);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\u5728\u6d1b\u8c37\u4e0a\u4ea4\u4e00\u53d1\uff0c[AC](https://www.luogu.com.cn/record/30018039)\uff01\n\n\u597d\u4e86\u672c\u9898\u89e3\u5230\u6b64\u2026\u2026\n\n\u8fdb\u5165\u6700\u7cbe\u5f69\u7684\u5730\u65b9\uff01\uff08\u4ec0\u4e48\u4f60\u4ee5\u4e3a\u5b83\u8981\u7ed3\u675f\u4e86\uff1f\uff09\n\n\u5982\u679c\u4f60\u628a\u4e0a\u9762\u8fd9\u4efd\u4ee3\u7801\u5f80[LOJ](https://loj.ac/problem/2492)\u4e0a\u4ea4\u4f1a\u53d1\u73b0\u5b83[TLE](https://loj.ac/submission/735635)\u5f97\u4e0d\u8981\u4e0d\u8981\u7684\u2026\u2026\n\n\u600e\u4e48\u529e\uff1f\u6211\u4eec\u53d1\u73b0\uff0c\u53ef\u4ee5\u4f18\u5316\u5e38\u6570\uff01\n\n**\u4f18\u5316\u4e00**\n\n\u6b38\u4f60\u770b\u770b\u90a3\u4e2a`change(pos-1)`\uff0c\u5b83\u53c8\u4e0d\u7528\u4fee\u6539\u77e9\u9635$f,g$\u7684\u503c\uff0c\u53ea\u662f\u7ef4\u62a4\u4e00\u4e0b$sum2$\uff0c\u80fd\u4e0d\u80fd\u7701\u4e0b\u8fd9\u90e8\u5206\u7684\u4e8b\u4ef6\uff1f\n\n\u80fd\uff01\u52a0\u4e2a\u6807\u8bb0\uff01\n\n```cpp\n#include<cstdio>\n#include<cstring>\n\nusing namespace std;\n\nint n=0,m=0;\nint a[200000];\n\nstruct matrix\n{\n\tint r,c;\n\tlong long num[6][6];\n\tmatrix(int rr=0,int cc=0):r(rr),c(cc){memset(num,0,sizeof(num));}\n\tmatrix operator=(const matrix& a){this->r=a.r,this->c=a.c;memcpy(this->num,a.num,sizeof(a.num));return *this;}\n};\n\nmatrix operator*(const matrix &a,const matrix& b)\n{\n\tif(a.c!=b.r){return matrix();}\n\tmatrix ans(a.r,b.c);\n\tfor(int i=0;i<a.r;i++)\n\t{\n\t\tfor(int j=0;j<b.c;j++)\n\t\t{\n\t\t\tfor(int k=0;k<a.c;k++)\n\t\t\t{\n\t\t\t\tans.num[i][j]+=a.num[i][k]*b.num[k][j];\n\t\t\t}\n\t\t}\n\t}\n\treturn ans;\n}\n\nmatrix f0(6,6),f1(6,6),g0(4,4),g1(4,4),fs(1,6),gs(1,4);\nvoid init()\n{\n\tf0.num[0][2]=f0.num[1][3]=f0.num[1][4]=f0.num[4][4]=f0.num[5][2]=f0.num[5][5]=1;\n\tf1.num[0][1]=f1.num[0][4]=f1.num[1][0]=f1.num[2][3]=f1.num[2][4]=f1.num[3][2]=f1.num[4][4]=f1.num[5][1]=f1.num[5][4]=f1.num[5][5]=1;\n\tg0.num[0][0]=g0.num[1][1]=g0.num[1][2]=g0.num[2][2]=g0.num[3][0]=g0.num[3][3]=1;\n\tg1.num[0][1]=g1.num[0][2]=g1.num[2][2]=g1.num[3][1]=g1.num[3][2]=g1.num[3][3]=1;\n\tfs.num[0][5]=1,gs.num[0][3]=1;\n}\n\nstruct nd\n{\n\tint l,r;matrix f,g;int sum1,sum2;\n}t[400000];\nvoid build(int l,int r,int k=1)\n{\n\tt[k].l=l,t[k].r=r;\n\tif(l==r)\n\t{\n\t\tif(a[l]==0)t[k].f=f0,t[k].g=g0;else t[k].f=f1,t[k].g=g1;\n\t\tt[k].sum1=a[l];if(l<n&&(a[l]^a[l+1]))t[k].sum2=1;return;\n\t}\n\tint mid=(l+r)>>1;build(l,mid,k<<1),build(mid+1,r,k<<1|1);\n\tt[k].f=t[k<<1].f*t[k<<1|1].f,t[k].g=t[k<<1].g*t[k<<1|1].g;\n\tt[k].sum1=t[k<<1].sum1+t[k<<1|1].sum1,t[k].sum2=t[k<<1].sum2+t[k<<1|1].sum2;\n}\nvoid change(int pos,bool fl,int k=1)\n{\n\tif(t[k].l==t[k].r)\n\t{\n\t\tif(fl)\n\t\t{\n\t\t\tif(a[pos]==0)t[k].f=f0,t[k].g=g0;else t[k].f=f1,t[k].g=g1;\n\t\t\tt[k].sum1=a[pos];\n\t\t}\n\t\tif(pos<n&&(a[pos]^a[pos+1]))t[k].sum2=1;else t[k].sum2=0;return;\n\t}\n\tint mid=(t[k].l+t[k].r)>>1;\n\tif(pos<=mid)change(pos,fl,k<<1);else change(pos,fl,k<<1|1);\n\tif(fl)\n\t{\n\t\tt[k].f=t[k<<1].f*t[k<<1|1].f,t[k].g=t[k<<1].g*t[k<<1|1].g;\n\t\tt[k].sum1=t[k<<1].sum1+t[k<<1|1].sum1;\n\t}\n\tt[k].sum2=t[k<<1].sum2+t[k<<1|1].sum2;\n}\nmatrix query_f(int l,int r,int k=1)\n{\n\tif(l<=t[k].l&&t[k].r<=r)return t[k].f;\n\tint pos=(t[k].l+t[k].r)>>1;\n\tif(l>pos)return query_f(l,r,k<<1|1);\n\tif(r<=pos)return query_f(l,r,k<<1);\n\treturn query_f(l,r,k<<1)*query_f(l,r,k<<1|1);\n}\nmatrix query_g(int l,int r,int k=1)\n{\n\tif(l<=t[k].l&&t[k].r<=r)return t[k].g;\n\tint pos=(t[k].l+t[k].r)>>1;\n\tif(l>pos)return query_g(l,r,k<<1|1);\n\tif(r<=pos)return query_g(l,r,k<<1);\n\treturn query_g(l,r,k<<1)*query_g(l,r,k<<1|1);\n}\nint query_s1(int l,int r,int k=1)\n{\n\tif(l>r)return 0;\n\tif(l<=t[k].l&&t[k].r<=r)return t[k].sum1;\n\tint pos=(t[k].l+t[k].r)>>1;\n\tif(l>pos)return query_s1(l,r,k<<1|1);\n\tif(r<=pos)return query_s1(l,r,k<<1);\n\treturn query_s1(l,r,k<<1)+query_s1(l,r,k<<1|1);\n}\nint query_s2(int l,int r,int k=1)\n{\n\tif(l>r)return 0;\n\tif(l<=t[k].l&&t[k].r<=r)return t[k].sum2;\n\tint pos=(t[k].l+t[k].r)>>1;\n\tif(l>pos)return query_s2(l,r,k<<1|1);\n\tif(r<=pos)return query_s2(l,r,k<<1);\n\treturn query_s2(l,r,k<<1)+query_s2(l,r,k<<1|1);\n}\n\nvoid print_matrix(const matrix& a)\n{\n\tfor(int i=0;i<a.r;i++)\n\t{\n\t\tfor(int j=0;j<a.c;j++)printf(\"%lld \",a.num[i][j]);\n\t\tputs(\"\");\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d\",&n);for(int i=1;i<=n;i++)scanf(\"%d\",&a[i]);\n\tinit();\n\tbuild(1,n);\n\tscanf(\"%d\",&m);int op=0,pos=0,l=0,r=0;\n\twhile(m--)\n\t{\n\t\tscanf(\"%d\",&op);\n\t\tif(op==1)\n\t\t{\n\t\t\tscanf(\"%d\",&pos);\n\t\t\ta[pos]^=1;change(pos,true);if(pos>1)change(pos-1,false);\n\t\t\t//for(int i=1;i<=n;i++)printf(\"%d \",query_s2(i,i));puts(\"\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tscanf(\"%d%d\",&l,&r);\n\t\t\tlong long len=r-l+1;\n\t\t\tlong long ans0=len*(len+1)/2;\n\t\t\tlong long ans1=(fs*query_f(l,r)).num[0][4];\n\t\t\tlong long ans2=(gs*query_g(l,r)).num[0][2];\n\t\t\tlong long ans3=query_s1(l,r)+query_s2(l,r-1);\n\t\t\t//printf(\"%lld %lld %lld %lld\\n\",ans0,ans1,ans2,ans3);\n\t\t\tprintf(\"%lld\\n\",ans0-ans1-ans2+ans3);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\u6b38\u8fc7\u4e86LOJ\u4e0a\u7684\u9898\u5566\uff01\n\n\u7136\u540e\u4fe1\u8a93\u65e6\u65e6\u5f80\u53f2\u4e0a\u6700\u5361\u5e38OJ [BZOJ](https://www.lydsy.com/JudgeOnline/problem.php?id=5294)\u4e0a\u4e00\u4ea4\u2026\u2026\n\n$\\text{TLE}$\uff01\n\n\u600e\u4e48\u529e\uff1f\u7ee7\u7eed\u4f18\u5316\uff01\n\n**\u4f18\u5316\u4e8c**\n\n\u6b38\u90a3\u4e2a\u77e9\u9635\u8fd8\u662f\u4e0d\u8981\u4f5c\u4e3a\u8fd4\u56de\u503c\u4e86\u5427\uff0c\u5728\u8fc7\u7a0b\u91cc\u4e58\u4e0d\u884c\u5417\uff1f\n\n\u53ef\u4ee5\uff01\u800c\u4e14\u4f18\u5316\u5f88\u5927\uff01\n\n\uff08\u8003\u8651\u5230\u7bc7\u5e45\uff0c\u4e0d\u8d34\u51fa\u4ee3\u7801\u4e86\uff0c\u94fe\u63a5\uff1a[\u4f18\u5316\u4e8c](https://loj.ac/submission/735644) \u53ef\u4ee5\u770b\u5230\u6700\u5927\u70b9\u4ece$800\\text{ms}$\u53d8\u5230\u4e86$\\text{700ms}$\uff09\n\n\u4f46\u8fd8\u662f\u8fc7\u4e0d\u4e86BZOJ\u2026\u2026\n\n**\u4f18\u5316\u4e09**\n\n\u6b38\u90a3\u4e2a\u77e9\u9635\u4e00\u5927\u5806\u96f6\uff0c\u4e58\u7684\u65f6\u5019\u662f\u4e0d\u662f\u53ef\u4ee5\u518d\u4f18\u5316\u4e00\u4e0b\u554a\uff1f\n\n\u53ef\u4ee5\uff01\n\n\u7ec8\u4e8e\u8fc7\u9898\u5566\uff01\u4e0b\u9762\u662f\u6700\u7ec8\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n\nusing namespace std;\n\nint n=0,m=0;\nint a[200000];\n\nstruct matrix\n{\n\tint r,c;\n\tlong long num[6][6];\n\tmatrix(int rr=0,int cc=0):r(rr),c(cc){memset(num,0,sizeof(num));}\n\tmatrix operator=(const matrix& a){this->r=a.r,this->c=a.c;memcpy(this->num,a.num,sizeof(a.num));return *this;}\n};\n\nmatrix operator*(const matrix &a,const matrix& b)\n{\n\tif(a.c!=b.r){return matrix();}\n\tmatrix ans(a.r,b.c);\n\tfor(int j=0;j<b.c;j++)\n\t{\n\t\tfor(int k=0;k<a.c;k++)\n\t\t{\n\t\t\tif(b.num[k][j]==0)continue;\n\t\t\tfor(int i=0;i<a.r;i++)\n\t\t\t{\n\t\t\t\tans.num[i][j]+=a.num[i][k]*b.num[k][j];\n\t\t\t}\n\t\t}\n\t}\n\treturn ans;\n}\n\nmatrix f0(6,6),f1(6,6),g0(4,4),g1(4,4),fs(1,6),gs(1,4);\nvoid init()\n{\n\tf0.num[0][2]=f0.num[1][3]=f0.num[1][4]=f0.num[4][4]=f0.num[5][2]=f0.num[5][5]=1;\n\tf1.num[0][1]=f1.num[0][4]=f1.num[1][0]=f1.num[2][3]=f1.num[2][4]=f1.num[3][2]=f1.num[4][4]=f1.num[5][1]=f1.num[5][4]=f1.num[5][5]=1;\n\tg0.num[0][0]=g0.num[1][1]=g0.num[1][2]=g0.num[2][2]=g0.num[3][0]=g0.num[3][3]=1;\n\tg1.num[0][1]=g1.num[0][2]=g1.num[2][2]=g1.num[3][1]=g1.num[3][2]=g1.num[3][3]=1;\n\tfs.num[0][5]=1,gs.num[0][3]=1;\n}\n\nstruct nd\n{\n\tint l,r;matrix f,g;int sum1,sum2;\n}t[400000];\nvoid build(int l,int r,int k=1)\n{\n\tt[k].l=l,t[k].r=r;\n\tif(l==r)\n\t{\n\t\tif(a[l]==0)t[k].f=f0,t[k].g=g0;else t[k].f=f1,t[k].g=g1;\n\t\tt[k].sum1=a[l];if(l<n&&(a[l]^a[l+1]))t[k].sum2=1;return;\n\t}\n\tint mid=(l+r)>>1;build(l,mid,k<<1),build(mid+1,r,k<<1|1);\n\tt[k].f=t[k<<1].f*t[k<<1|1].f,t[k].g=t[k<<1].g*t[k<<1|1].g;\n\tt[k].sum1=t[k<<1].sum1+t[k<<1|1].sum1,t[k].sum2=t[k<<1].sum2+t[k<<1|1].sum2;\n}\nvoid change(int pos,bool fl,int k=1)\n{\n\tif(t[k].l==t[k].r)\n\t{\n\t\tif(fl)\n\t\t{\n\t\t\tif(a[pos]==0)t[k].f=f0,t[k].g=g0;else t[k].f=f1,t[k].g=g1;\n\t\t\tt[k].sum1=a[pos];\n\t\t}\n\t\tif(pos<n&&(a[pos]^a[pos+1]))t[k].sum2=1;else t[k].sum2=0;return;\n\t}\n\tint mid=(t[k].l+t[k].r)>>1;\n\tif(pos<=mid)change(pos,fl,k<<1);else change(pos,fl,k<<1|1);\n\tif(fl)\n\t{\n\t\tt[k].f=t[k<<1].f*t[k<<1|1].f,t[k].g=t[k<<1].g*t[k<<1|1].g;\n\t\tt[k].sum1=t[k<<1].sum1+t[k<<1|1].sum1;\n\t}\n\tt[k].sum2=t[k<<1].sum2+t[k<<1|1].sum2;\n}\nmatrix fans,gans;\nint query_s1(int l,int r,int k=1)\n{\n\tif(l>r)return 0;\n\tif(l<=t[k].l&&t[k].r<=r)\n\t{\n\t\tfans=fans*t[k].f,gans=gans*t[k].g;\n\t\treturn t[k].sum1;\n\t}\n\tint pos=(t[k].l+t[k].r)>>1;\n\tif(l>pos)return query_s1(l,r,k<<1|1);\n\tif(r<=pos)return query_s1(l,r,k<<1);\n\treturn query_s1(l,r,k<<1)+query_s1(l,r,k<<1|1);\n}\nint query_s2(int l,int r,int k=1)\n{\n\tif(l>r)return 0;\n\tif(l<=t[k].l&&t[k].r<=r)return t[k].sum2;\n\tint pos=(t[k].l+t[k].r)>>1;\n\tif(l>pos)return query_s2(l,r,k<<1|1);\n\tif(r<=pos)return query_s2(l,r,k<<1);\n\treturn query_s2(l,r,k<<1)+query_s2(l,r,k<<1|1);\n}\n\nvoid print_matrix(const matrix& a)\n{\n\tfor(int i=0;i<a.r;i++)\n\t{\n\t\tfor(int j=0;j<a.c;j++)printf(\"%lld \",a.num[i][j]);\n\t\tputs(\"\");\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d\",&n);for(int i=1;i<=n;i++)scanf(\"%d\",&a[i]);\n\tinit();\n\tbuild(1,n);\n\tscanf(\"%d\",&m);int op=0,pos=0,l=0,r=0;\n\twhile(m--)\n\t{\n\t\tscanf(\"%d\",&op);\n\t\tif(op==1)\n\t\t{\n\t\t\tscanf(\"%d\",&pos);\n\t\t\ta[pos]^=1;change(pos,true);if(pos>1)change(pos-1,false);\n\t\t\t//for(int i=1;i<=n;i++)printf(\"%d \",query_s2(i,i));puts(\"\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tscanf(\"%d%d\",&l,&r);\n\t\t\tlong long len=r-l+1;\n\t\t\tlong long ans0=len*(len+1)/2;\n\t\t\tfans=fs,gans=gs;\n\t\t\tlong long ans3=query_s1(l,r)+query_s2(l,r-1);\n\t\t\tlong long ans1=fans.num[0][4],ans2=gans.num[0][2];\n\t\t\t//printf(\"%lld %lld %lld %lld\\n\",ans0,ans1,ans2,ans3);\n\t\t\tprintf(\"%lld\\n\",ans0-ans1-ans2+ans3);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n**\u603b\u7ed3**\n\n\u5e0c\u671b\u5927\u5bb6\u4ece\u8fd9\u7bc7\u9898\u89e3\u91cc\u5b66\u5230\u4e24\u79cd\u7cbe\u795e\uff1a\n\n- \u628a\u95ee\u9898\u5f80\u719f\u77e5\u7684\u65b9\u5411\u8f6c\u5316\uff0c\u5316\u96be\u4e3a\u6613\uff1b\n\n- \u4e0d\u8981\u653e\u5f03\uff0c\u52c7\u4e8e\u5c1d\u8bd5\u5404\u79cd\u53ef\u80fd\u3002\n\n\u52a0\u6cb9\uff0c\u5965\u91cc\u7ed9\uff01",
        "postTime": 1580653525,
        "uid": 112794,
        "name": "\u5468\u5b50\u8861",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4428 \u3010[BJOI2018]\u4e8c\u8fdb\u5236\u3011"
    },
    {
        "content": "# \u300cBJOI2018\u300d\u4e8c\u8fdb\u5236-\u6811\u72b6\u6811\u72b6+set+\u4e8c\u8fdb\u5236\n\n\u53ef\u4ee5\u53d1\u73b0\u80fd\u88ab\u91cd\u7ec4\u6210$3$\u7684\u6570\u6ee1\u8db3\u6709\u5076\u6570\u4e2a$1$\u6216\u8005\u6709\u5947\u6570\u4e2a$1$\u4e14$0,1$\u7684\u4e2a\u6570$\\geq 2$\u3002\n\n\u8003\u8651\u7528\u603b\u6570\u51cf\u53bb\u4e0d\u5408\u6cd5\u7684\u6570\u91cf\uff0c\u5373\u6709\u5947\u6570\u4e2a$1$\u4e14$0$\u7684\u4e2a\u6570$<2$\u6216\u7740\u53ea\u6709\u4e00\u4e2a$1$\u3002\n\n\u4e0d\u5408\u6cd5\u7684\u5b50\u4e32\u8981\u4e48\u53ea\u6709\u4e00\u4e2a$0$\u8981\u4e48\u53ea\u6709\u4e00\u4e2a$1$\uff0c\u6240\u4ee5\u7528`std::set`\u7ef4\u62a4\u6bcf\u4e2a$0,1$\u7684\u524d\u9a71\u540e\u7ee7\u3002\u4e00\u4e2a\u5355\u72ec\u7684$0$\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a\u8de8\u8fc7\u5b83\u7684\u5b50\u4e32\u4e14\u53ea\u6709\u4e00\u4e2a$0$\u7684\u65b9\u6848\u6570\u52a0\u4e0a\u5b83\u53f3\u8fb9\u4e00\u6bb5$1$\u7684\u65b9\u6848\u6570\uff0c\u4e00\u4e2a$1$\u7684\u8d21\u732e\u7c7b\u4f3c\u3002\n\n\u6bcf\u6b21\u8be2\u95ee\u65f6\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e2d\u95f4\u7684\u7b54\u6848\uff0c\u5bf9\u4e8e\u7b2c\u4e00\u4e2a/\u5012\u6570\u7b2c\u4e00\u4e2a$0/1$\u7279\u6b8a\u5904\u7406\uff0c\u6700\u540e\u51cf\u53bb\u91cd\u590d\u7684\u90e8\u5206(\u5355\u72ec\u7684$1$\u4ee5\u53ca$01/10$)\n\n```cpp\n// luogu-judger-enable-o2\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long lint;\nconst int maxn = 100005;\n\nint n, m, a[maxn];\nset<int> s[2];\nlint Sum[4][maxn], sr0[maxn], slr0[maxn], slr1[maxn];\n\ninline int gi()\n{\n    char c = getchar();\n    while (c < '0' || c > '9') c = getchar();\n    int sum = 0;\n    while ('0' <= c && c <= '9') sum = sum * 10 + c - 48, c = getchar();\n    return sum;\n}\n\ninline lint calc_r0(int len)\n{\n    if (len & 1) return (lint)(len / 2 + 1) * (len / 2 + 1);\n    else return (lint)(len / 2) * (len / 2 + 1);\n}\ninline lint calc_lr0(int len1, int len2) {return (lint)(len1 + 1) * (len2 + 1) / 2;}\ninline lint calc_lr1(int len1, int len2) {return (lint)(len1 + 1) * (len2 + 1);}\n\ninline void add(int Id, int x, int v) {for ( ; x <= n; x += (x & (-x))) Sum[Id][x] += v;}\ninline int sum(int Id, int x) {int res = 0; for ( ; x; x -= (x & (-x))) res += Sum[Id][x]; return res;}\n\nvoid calc0(int p)\n{\n    static int p1, p2;\n    static set<int>::iterator it;\n    \n    add(0, p, -sr0[p] - slr0[p]);\n    it = s[0].upper_bound(p); p2 = *it;\n    --it; --it; p1 = *it;\n\n    sr0[p] = calc_r0(p2 - p - 1);\n    slr0[p] = calc_lr0(p - p1 - 1, p2 - p - 1);\n    add(0, p, sr0[p] + slr0[p]);\n}\n\nvoid calc1(int p)\n{\n    static int p1, p2;\n    static set<int>::iterator it;\n\n    add(1, p, -slr1[p]);\n    it = s[1].upper_bound(p); p2 = *it;\n    --it; --it; p1 = *it;\n\n    slr1[p] = calc_lr1(p - p1 - 1, p2 - p - 1);\n    add(1, p, slr1[p]);\n}\n\nlint calc0(int l, int r)\n{\n    static int p1, p2, p3, p4;\n    static lint ans;\n    static set<int>::iterator it;\n\n    it = s[0].lower_bound(l); p1 = *it;\n    if (p1 > r) return calc_r0(r - l + 1);\n    ++it; p2 = *it;\n    if (p2 > r) return calc_lr0(p1 - l, r - p1) + calc_r0(p1 - l) + calc_r0(r - p1);\n    \n    it = s[0].upper_bound(r);\n    --it; p4 = *it;\n    --it; p3 = *it;\n    \n    ans = sum(0, p4 - 1) - sum(0, p1);\n    ans += sr0[p1] + calc_r0(p1 - l) + calc_r0(r - p4) + calc_lr0(p1 - l, p2 - p1 - 1) + calc_lr0(p4 - p3 - 1, r - p4);\n    return ans;\n}\n\nlint calc1(int l, int r)\n{\n    static int p1, p2, p3, p4;\n    static lint ans;\n    static set<int>::iterator it;\n\n    it = s[1].lower_bound(l); p1 = *it;\n    if (p1 > r) return 0;\n    ++it; p2 = *it;\n    if (p2 > r) return calc_lr1(p1 - l, r - p1);\n\n    it = s[1].upper_bound(r);\n    --it; p4 = *it;\n    --it; p3 = *it;\n\n    ans = sum(1, p4 - 1) - sum(1, p1);\n    ans += calc_lr1(p1 - l, p2 - p1 - 1) + calc_lr1(p4 - p3 - 1, r - p4);\n    return ans;\n}\n\nlint calc2(int l, int r) {return sum(2, r) - sum(2, l - 1);}\nlint calc3(int l, int r) {return sum(3, r - 1) - sum(3, l - 1);}\n\nint main()\n{\n    n = gi();\n    \n    s[0].insert(0); s[0].insert(n + 1);\n    s[1].insert(0); s[1].insert(n + 1);\n    \n    for (int i = 1; i <= n; ++i) {\n        a[i] = gi();\n        s[a[i]].insert(i);\n    }\n\n    for (int i = 1; i <= n; ++i) {\n        if (!a[i]) calc0(i);\n        else calc1(i), add(2, i, 1);\n        if (i != n && (a[i] ^ a[i + 1]))\n            add(3, i, 1);\n    }\n    \n    m = gi();\n    int opt, x, y, p1, p2;\n    set<int>::iterator it;\n    while (m--) {\n        opt = gi();\n        if (opt == 1) {\n            x = gi();\n\n            if (a[x]) add(2, x, -1);\n            else add(2, x, 1);\n            if (x != 1) {\n                if (a[x - 1] ^ a[x]) add(3, x - 1, -1);\n                else add(3, x - 1, 1);\n            }\n            if (x != n) {\n                if (a[x] ^ a[x + 1]) add(3, x, -1);\n                else add(3, x, 1);\n            }\n            \n            if (a[x] == 0) {\n                add(0, x, -sr0[x] - slr0[x]);\n                sr0[x] = slr0[x] = 0;\n                \n                s[0].erase(x);\n                it = s[0].upper_bound(x); p2 = *it;\n                --it; p1 = *it;\n                if (p1 != 0) calc0(p1); if (p2 != n + 1) calc0(p2);\n                \n                s[1].insert(x);\n                it = s[1].upper_bound(x); p2 = *it;\n                --it; --it; p1 = *it;\n                if (p1 != 0) calc1(p1); if (p2 != n + 1) calc1(p2);\n                calc1(x);\n            } else {\n                add(1, x, -slr1[x]);\n                slr1[x] = 0;\n\n                s[1].erase(x);\n                it = s[1].upper_bound(x); p2 = *it;\n                --it; p1 = *it;\n                if (p1 != 0) calc1(p1); if (p2 != n + 1) calc1(p2);\n\n                s[0].insert(x);\n                it = s[0].upper_bound(x); p2 = *it;\n                --it; --it; p1 = *it;\n                if (p1 != 0) calc0(p1); if (p2 != n + 1) calc0(p2);\n                calc0(x);\n            }\n\n            a[x] ^= 1;\n        } else {\n            x = gi(); y = gi();\n            printf(\"%lld\\n\", (lint)(y - x + 1) * (y - x + 2) / 2 - (calc0(x, y) + calc1(x, y) - calc2(x, y) - calc3(x, y)));\n        }\n    }\n\n    return 0;\n}\n```",
        "postTime": 1548638893,
        "uid": 119899,
        "name": "dsidsi",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4428 \u3010[BJOI2018]\u4e8c\u8fdb\u5236\u3011"
    },
    {
        "content": "##  \u9898\u610f\n\n- \u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u4e8c\u8fdb\u5236\u4e32\uff0c\u4ee5\u53ca $m$ \u6b21\u64cd\u4f5c\u3002\u64cd\u4f5c\u5206\u4e24\u79cd\uff1a\n   - \u5c06\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u53d6\u53cd\u3002\n   - \u6c42\u533a\u95f4 $[l,r]$ \u5185\u6709\u591a\u5c11\u4e2a\u8fde\u7eed\u5b50\u5e8f\u5217\uff0c\u6ee1\u8db3\u53ef\u4ee5\u5c06\u5176\u91cd\u6392\u4e3a $3$ \u7684\u500d\u6570\u3002\n- $1\\le{n,m}\\le10^5$\u3002\n\n## \u505a\u6cd5\n\n### $3$ \u7684\u500d\u6570\uff1f\n\n\u4ec0\u4e48\u6837\u7684\u5e8f\u5217\u91cd\u6392\u540e\u53ef\u4ee5\u662f $3$ \u7684\u500d\u6570\uff1f\n\n\u6ce8\u610f\u5230 $2\\equiv-1,2^2\\equiv1\\pmod{3}$\uff0c\u6240\u4ee5\u4e8c\u8fdb\u5236\u4e0b\u6bcf\u4e00\u4f4d $\\bmod{3}$ \u7684\u7ed3\u679c\u662f\uff1a$1,-1;1,-1;1,-1;\\cdots$\u3002\u6211\u4eec\u9700\u8981\u8ba9\u4e24\u79cd\u4f4d\u7f6e\u4e0a\u7684 $1$ \u7684\u4e2a\u6570 $\\bmod{3}$ \u76f8\u540c\u3002\n\u4e0d\u59a8\u8bbe\u533a\u95f4\u957f $l$\uff0c\u7ed3\u679c\u4e3a $1$ \u7684\u4f4d\u7f6e\u4e0a $1$ \u7684\u4e2a\u6570\u4e3a $x$\uff0c\u7ed3\u679c\u4e3a $-1$ \u7684\u4f4d\u7f6e\u4e0a\u7684 $1$ \u7684\u4e2a\u6570\u4e3a $y$\uff0c\u603b\u5171\u6709 $k$ \u4e2a $1$\u3002\u5219\u7ed3\u679c\u4e3a $1$ \u7684\u4f4d\u7f6e\u6709 $\\left\\lfloor\\dfrac{l+1}2\\right\\rfloor$ \u4e2a\uff0c\u7ed3\u679c\u4e3a $-1$ \u7684\u4f4d\u7f6e\u6709 $\\left\\lfloor\\dfrac{l}2\\right\\rfloor$ \u4e2a\u3002\n\n\u6240\u4ee5\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u5c06 $x+y=k,x\\equiv{y}\\pmod{3}$ \u7684 $x$ \u586b\u5230 $\\left\\lfloor\\dfrac{l+1}2\\right\\rfloor$ \u4e2a\u7a7a\u683c\u4e2d\uff0c$y$ \u586b\u5230 $\\left\\lfloor\\dfrac{l}2\\right\\rfloor$ \u4e2a\u7a7a\u683c\u4e2d\u3002\u7531\u4e8e $x\\equiv{y}\\pmod3$\uff0c\u987a\u5e8f\u4e0d\u5f71\u54cd\uff0c\u4e14 $\\left\\lfloor\\dfrac{l+1}2\\right\\rfloor\\ge{\\left\\lfloor\\dfrac{l}2\\right\\rfloor}$\uff0c\u6240\u4ee5\u4e0d\u59a8 $x\\ge{y}$\u3002\n\n\u6211\u4eec\u73b0\u5728\u5e0c\u671b $x,y$ \u8d8a\u8fd1\u8d8a\u597d\uff0c\u56e0\u4e3a\u8fd9\u6837\u5bf9 $k$ \u7684\u8981\u6c42\u4f1a\u6bd4\u8f83\u677e\u3002\u4e0d\u59a8\u8bbe\u4e00\u4e2a\u6ee1\u8db3\u7684 $x=y+3k,k\\in\\mathbb{Z}_{\\ge0}$\uff0c\u6bcf\u6b21\u4fee\u6539 $x,y$ \u7684\u8ddd\u79bb\u6539\u53d8 $6$\u3002\u82e5 $2\\nmid{k}$\uff0c\u5219\u53ef\u4ee5\u5316\u6210 $x=y+3$\uff1b\u5426\u5219\u53ef\u5316\u6210 $x=y$\u3002\n\n### \u600e\u4e48\u5224\u65ad\uff1f\n\n\u5982\u679c $2\\mid{k}$\uff0c$x=y=\\dfrac{k}2$ \u5373\u53ef\u3002\n\n\u5982\u679c $2\\nmid{k}$\uff0c\u90a3\u4e48\u9700\u8981\u53d6 $x=y+3$\uff0c\u6240\u4ee5\u9996\u5148 $k\\ge3$\u3002\u5176\u6b21\uff0c\u6b64\u65f6 $x=\\dfrac{k+3}2\\le\\left\\lfloor\\dfrac{l+1}2\\right\\rfloor$\u3002$2\\mid{l}$ \u65f6\uff0c\u9700\u8981 $l\\ge{k+3}$\uff1b\u5426\u5219\uff0c$l\\ge{k+2}$\u3002\n\n\u8fd9\u597d\u50cf\u60c5\u51b5\u633a\u591a\uff0c\u6709\u70b9\u96be\u5e72\u554a\uff0c\u600e\u4e48\u529e\uff1f\u6b63\u96be\u5219\u53cd\uff0c\u6211\u4eec\u770b\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\uff1a\n\n- $k=1$\u3002\n- $2\\mid{l}$ \u65f6\uff0c$k=l-1$\uff0c\u6362\u8a00\u4e4b\uff0c\u6709 $1$ \u4e2a $0$\u3002\n- $2\\nmid{l}$ \u65f6\uff0c$k=l$\uff0c\u6362\u8a00\u4e4b\uff0c\u6ca1\u6709 $0$\u3002\n\n\u5408\u5e76\u53bb\u91cd\u4e4b\u540e\uff0c\u5c31\u6709\uff1a\n\n- $k=1$ \u4e14 $0$ \u7684\u4e2a\u6570 $\\ge2$\u3002\n- $2\\nmid{k}$ \u4e14 $0$ \u7684\u4e2a\u6570 $<2$\u3002\n\n### \u600e\u4e48\u8ba1\u6570\uff1f\n\n\u6211\u4eec\u9700\u8981\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u3002\u53ef\u4ee5\u8003\u8651\u7ebf\u6bb5\u6811\u3002\n\n\u8003\u8651\u600e\u4e48\u7ef4\u62a4\u5408\u5e76\u8282\u70b9\u7684\u8d21\u732e\uff1f\u8de8\u8d8a\u533a\u95f4\uff0c\u9700\u8981\u8bb0\u5f55\u524d\u7f00\u540e\u7f00\u3002\n\n\u5177\u4f53\u5730\uff0c\u9700\u8981\u7ef4\u62a4\uff1a\u524d\u7f00 $0$ \u7684\u4e2a\u6570 $l_0$\uff0c\u540e\u7f00 $0$ \u7684\u4e2a\u6570 $r_0$\uff0c\u53ea\u6709\u4e00\u4e2a $1$ \u7684\u524d\u7f00\u7684\u4e2a\u6570 $l_1$\uff0c\u53ea\u6709\u4e00\u4e2a $1$ \u7684\u540e\u7f00\u7684\u4e2a\u6570 $r_1$\u3002\n\n## \u4ee3\u7801\n\n\u5177\u4f53\u8fc7\u7a0b\u770b\u4e00\u4e0b\u5408\u5e76\u5c31\u597d\u4e86\uff0c\u5176\u4ed6\u5c31\u4e0d\u653e\u4e86\uff0c\u56e0\u4e3a\u662f\u7167\u7740 $\\text{\\color{black}R\\color{red}{emake}}$ \u795e\u4ed9\u7684\u5199\u7684\u3002\n\n\u53e6\u5916\uff0c\u5199\u6210\u7ed3\u6784\u4f53\u771f\u7684\u5f88\u6709\u7528\uff01\n\n```cpp\nSMT(SMT L,SMT R,int mid)\n{\n\tinit();\n\tC0=L.C0+R.C0,C1=L.C1+R.C1;\n\tl0=L.l0+(!L.C1?R.l0:0),r0=R.r0+(!R.C1?L.r0:0);\n\tl1=L.l1+(!L.C1?R.l1:0)+(L.C1==1?R.l0:0),r1=R.r1+(!R.C1?L.r1:0)+(R.C1==1?L.r0:0);\n\tfor(int i=0;i<2;i++)\n\t\tfor(int j=0;j<2;j++)\n\t\t\tl[i][j]=L.l[i][j]+(i>=L.C0?R.l[i-L.C0][j^(L.C1&1)]:0),r[i][j]=R.r[i][j]+(i>=R.C0?L.r[i-R.C0][j^(R.C1&1)]:0);\n\tres=L.res+R.res;res+=1ll*L.r0*R.l1+1ll*L.r1*R.l0;\n\tres+=1ll*L.r[0][0]*(R.l[0][1]+R.l[1][1])+1ll*L.r[0][1]*(R.l[0][0]+R.l[1][0]); \n\tres+=1ll*L.r[1][0]*R.l[0][1]+1ll*L.r[1][1]*R.l[0][0]; \n\tif(a[mid]+a[mid+1]==1)\tres--;\n}\n```",
        "postTime": 1647093595,
        "uid": 181775,
        "name": "_Fontainebleau_",
        "ccfLevel": 0,
        "title": "\u300c\u4e8c\u8fdb\u5236\u300d"
    },
    {
        "content": "\u9996\u5148\uff0c\u770b\u5230\u533a\u95f4\u7684\u5b50\u4e32\uff0c\u60f3\u5230\u7ebf\u6bb5\u6811\u533a\u95f4\u5408\u5e76\u3002\n\n\u8003\u8651\u4e00\u4e2a\u5b50\u95ee\u9898\uff1a\u5224\u65ad\u4e00\u4e2a\u5b50\u4e32\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u9996\u5148\uff0c\u4e8c\u8fdb\u5236\u5316\u4e3a\u5341\u8fdb\u5236\u7684\u65b9\u6cd5\u662f\u5bf9\u5e94\u4f4d\u00d7\u4f4d\u6743\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u4f4d\u6743$mod3$\u7684\u503c\u662f$1,2,1,2$\u4ea4\u66ff\u3002\n\n\u8bbe\u8fd9\u4e2a\u5b50\u4e32\u6709x\u4e2a1\u653e\u57282\u4e0a\uff0cy\u4e2a\u653e\u57281\u4e0a\uff0c\u5219\u5e94\u6ee1\u8db3$(2x+y)mod3=0$\uff0c\n\u5373$x=y(mod3)$\u3002\n\n\u8bbe\u8be5\u5b50\u4e32\u957f\u5ea6\u4e3alen\uff0c\u6709s\u4e2a1\u3002\n\n\u90a3\u4e48\uff0c\u8d2a\u5fc3\u7684\u60f3\uff0cx\u548cy\u76f8\u5dee0\u62163\u3002\n\n\u5206\u60c5\u51b5\u8ba8\u8bba\uff1a\n1. $len\\%2=0$\uff0c$s\\%2=0$\u3002\u9700\u8981\u6ee1\u8db3$s/2<=len/2$\uff0c\u663e\u7136\u53ef\u4ee5\u3002\n2. $len\\%2=0$\uff0c$s\\%2=1$\u3002\u5373$x+y=s,x-y=3$\uff0c\u89e3\u5f97$x=(s+3)/2$\u3002\u9700\u8981\u6ee1\u8db3$(s+3)/2<=len/2$\uff0c\u5373$s<=len-3$\u3002\n3. $len\\%2=1$\uff0c$s\\%2=0$\u3002\u9700\u8981\u6ee1\u8db3$s/2<=(len-1)/2$\uff0c\u663e\u7136\u53ef\u4ee5\u3002\n4. $len\\%2=1$\uff0c$s\\%2=1$\u3002\u540c\u7406\uff0c$x=(s+3)/2$\u3002\u9700\u8981\u6ee1\u8db3$(s+3)/2<=(len+1)/2$\uff0c\u5373$s<=len-2$\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0cs\u4e3a\u5076\u6570\u65f6\u4e00\u5b9a\u53ef\u4ee5\u3002s\u4e3a\u5947\u6570\u65f6\u6bd4\u8f83\u590d\u6742\uff0c\u96be\u4ee5\u7edf\u8ba1\uff08\u56e0\u4e3a\u5373\u4f7flen\u786e\u5b9a\uff0c\u6ee1\u8db3\u8981\u6c42\u7684s\u6709\u5f88\u591a\uff0c\u65e0\u6cd5\u8fdb\u884c\u533a\u95f4\u5408\u5e76\uff09\u3002\n\n\u8003\u8651\u5bb9\u65a5\uff0c\u6c42\u4e0d\u5408\u6cd5\u7684\u3002\n\n\u82e5\u4e0d\u5408\u6cd5\uff0c\u5219$s\\%2=1$\u3002\n\n\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a\n1. $len\\%2=0$\uff0c\u5373$s>=len-2$\u3002\u56e0\u4e3a$s\\%2=1,s<=len$\uff0c\u6240\u4ee5$s=len-1$\u3002\n2. $len\\%2=1$\uff0c\u5373$s>=len-1$\u3002\u56e0\u4e3a$s\\%2=1,s<=len$\uff0c\u6240\u4ee5$s=len$\u3002\n\n\u6b64\u5916\uff0c\u82e5$s=1$\uff0c\u4e5f\u4e0d\u5408\u6cd5\u3002\u628a\u8fd9\u90e8\u5206\u51cf\u53bb\uff0c\u518d\u52a0\u4e0a$s=1$\u4e14$len<=2$\u7684\u60c5\u51b5\uff08\u88ab\u7b97\u4e86\u4e24\u6b21\uff09\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(mlogn)$\uff0c\u5e38\u6570\u5f88\u5927\u3002\n\n\u6ce8\u610f\u533a\u95f4\u5408\u5e76\u7684\u7ec6\u8282\u3002\n\n### \u4ee3\u7801\uff1a\n```cpp\n#include <stdio.h> \n#define ll long long \nstruct SJd {\n\tll s[2][2];\n\tSJd() {\n\t\ts[0][0] = s[0][1] = s[1][0] = s[1][1] = 0;\n\t}\n};\nSJd operator * (SJd a, SJd b) {\n\tSJd rt;\n\tfor (int x = 0; x < 2; x++) {\n\t\tfor (int y = 0; y < 2; y++) {\n\t\t\tint z = (x + y) % 2;\n\t\t\trt.s[z][0] += a.s[x][0] * b.s[y][0];\n\t\t\trt.s[z][1] += a.s[x][0] * b.s[y][1] + a.s[x][1] * b.s[y][0];\n\t\t}\n\t}\n\treturn rt;\n}\nSJd operator + (SJd a, SJd b) {\n\tSJd rt;\n\trt.s[0][0] = a.s[0][0] + b.s[0][0];\n\trt.s[0][1] = a.s[0][1] + b.s[0][1];\n\trt.s[1][0] = a.s[1][0] + b.s[1][0];\n\trt.s[1][1] = a.s[1][1] + b.s[1][1];\n\treturn rt;\n}\nSJd he[400010],zg[400010],zl[400010],zr[400010];\nll s0[400010],s1[400010],s2[400010];\nbool h0[400010],h1[400010];\nint sz[100010],l0[400010],l1[400010],r0[400010],r1[400010],su[400010],ma = 0,sl;\nvoid fuz(int i, int j) {\n\the[i]=he[j];zg[i]=zg[j];\n\tzl[i]=zl[j];zr[i]=zr[j];\n\ts0[i]=s0[j];s1[i]=s1[j];s2[i]=s2[j];\n\th0[i]=h0[j];h1[i]=h1[j];\n\tl0[i]=l0[j];l1[i]=l1[j];\n\tr0[i]=r0[j];r1[i]=r1[j];\n\tsu[i]=su[j];\n}\nvoid merge(int i, int cl, int cr, int m) {\n\th0[i] = h0[cl] && h0[cr];\n\th1[i] = (h1[cl] && h0[cr]) || (h0[cl] && h1[cr]);\n\tl0[i] = l0[cl];\n\tif (h0[cl]) l0[i] += l0[cr];\n\tr0[i] = r0[cr];\n\tif (h0[cr]) r0[i] += r0[cl];\n\tl1[i] = l1[cl];\n\tif (h0[cl]) l1[i] += l1[cr];\n\tif (h1[cl]) l1[i] += l0[cr];\n\tr1[i] = r1[cr];\n\tif (h0[cr]) r1[i] += r1[cl];\n\tif (h1[cr]) r1[i] += r0[cl];\n\ts0[i] = s0[cl] + s0[cr] + 1ll * r0[cl] * l0[cr];\n\ts1[i] = s1[cl] + s1[cr] + 1ll * r0[cl] * l1[cr] + 1ll * r1[cl] * l0[cr];\n\ts2[i] = s2[cl] + s2[cr] + (sz[m - 1] + sz[m] == 1);\n\tzg[i] = zg[cl] * zg[cr];\n\tzl[i] = zl[cl] + zg[cl] * zl[cr];\n\tzr[i] = zr[cr] + zg[cr] * zr[cl];\n\the[i] = he[cl] + he[cr] + zr[cl] * zl[cr];\n\tsu[i] = su[cl] + su[cr];\n}\nvoid pushup(int i, int l, int r) {\n\tint m = (l + r) >> 1;\n\tmerge(i, i << 1, (i << 1) | 1, m);\n}\nvoid getddz(int i, int x) {\n\tl0[i] = r0[i] = s0[i] = h0[i] = (x == 0);\n\tl1[i] = r1[i] = s1[i] = h1[i] = (x == 1);\n\the[i] = zg[i] = zl[i] = zr[i] = SJd();\n\the[i].s[1][x ^ 1] += 1;\n\tzg[i].s[1][x ^ 1] += 1;\n\tzl[i].s[1][x ^ 1] += 1;\n\tzr[i].s[1][x ^ 1] += 1;\n\tsu[i] = x;\n\ts2[i] = 0;\n}\nvoid jianshu(int i, int l, int r) {\n\tif (i > ma) ma = i;\n\tif (l + 1 == r) {\n\t\tgetddz(i, sz[l]);\n\t\treturn;\n\t}\n\tint m = (l + r) >> 1;\n\tjianshu(i << 1, l, m);\n\tjianshu((i << 1) | 1, m, r);\n\tpushup(i, l, r);\n}\nvoid xiugai(int i, int l, int r, int j) {\n\tif (l + 1 == r) {\n\t\tsz[l] ^= 1;\n\t\tgetddz(i, sz[l]);\n\t\treturn;\n\t}\n\tint m = (l + r) >> 1;\n\tif (j < m) xiugai(i << 1, l, m, j);\n\telse xiugai((i << 1) | 1, m, r, j);\n\tpushup(i, l, r);\n}\nvoid getans(int i, int l, int r, int L, int R) {\n\tif (R <= l || r <= L) return;\n\tif (L <= l && r <= R) {\n\t\tif (sl == ma) fuz(sl + 1, i);\n\t\telse merge(sl + 1, sl, i, l);\n\t\tsl += 1;\n\t\treturn;\n\t}\n\tint m = (l + r) >> 1;\n\tgetans(i << 1, l, m, L, R);\n\tgetans((i << 1) | 1, m, r, L, R);\n}\nll getans(int n, int l, int r) {\n\tint s = r - l + 1;\n\tll zs = 1ll * s * (s + 1) / 2;\n\tsl = ma;\n\tgetans(1, 1, n + 1, l, r + 1);\n\tzs -= (he[sl].s[0][1] + he[sl].s[1][0] + s1[sl]);\n\tzs += (su[sl] + s2[sl]);\n\treturn zs;\n}\nint main() {\n\tint n,m;\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; i++) scanf(\"%d\", &sz[i]);\n\tscanf(\"%d\", &m);\n\tjianshu(1, 1, n + 1);\n\tfor (int i = 0; i < m; i++) {\n\t\tint lx;\n\t\tscanf(\"%d\", &lx);\n\t\tif (lx == 1) {\n\t\t\tint a;\n\t\t\tscanf(\"%d\", &a);\n\t\t\txiugai(1, 1, n + 1, a);\n\t\t} else {\n\t\t\tint a,b;\n\t\t\tscanf(\"%d%d\", &a, &b);\n\t\t\tprintf(\"%lld\\n\", getans(n, a, b));\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1566695125,
        "uid": 58367,
        "name": "0____",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4428 \u3010[BJOI2018]\u4e8c\u8fdb\u5236\u3011"
    },
    {
        "content": "# \u9898\u89e3\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4428)\n## \u9898\u76ee\u63cf\u8ff0\n\u4f20\u9001\u95e8\u90fd\u7ed9\u4f60\u6253\u597d\u4e86\uff0c\u4e0d\u4f1a\u81ea\u5df1\u770b\uff1f\n## \u505a\u6cd5\n\u9996\u5148\uff0c\u6211\u4eec\u6765\u731c\u4e00\u4e0b\u672c\u9898\u7684\u7b97\u6cd5\u3002\n\n $n\\le10^5$\uff0c\u90a3\u4e48\u7b97\u6cd5\u590d\u6742\u5ea6\u4e00\u5b9a\u662f $O(n\\log n)$ \u4e86\n\n\u6211\u4eec\u770b\u5230\u4e86\u533a\u95f4\u7684\u67e5\u8be2\uff0c\u5355\u70b9\u7684\u4fee\u6539\u3002\n\n\u518d\u52a0\u4e0a $O(n\\log n)$ \u7684\u590d\u6742\u5ea6\u3002\n\n\u4e00\u5b9a\u662f\u7ebf\u6bb5\u6811\u6ca1\u8dd1\u4e86\uff01\n\n\u90a3\u4e48\u6211\u4eec\u77e5\u9053\u4e86\u7ebf\u6bb5\u6811\uff0c\u5982\u4f55\u7ebf\u6bb5\u6811\u5462\uff1f\n\n\u8ba9\u6211\u4eec\u56de\u5230\u9898\u76ee\u3002\n\n## \u6570\u5b66\u7684\u5206\u6790\n$3$ \u5728\u4e8c\u8fdb\u5236\u91cc\u7684\u6574\u9664\u7279\u5f81\u662f\u4ec0\u4e48\uff1f\n\n\u6211\u4eec\u77e5\u9053 $3 = (11)_2$\u3002\n\n\u6240\u4ee5 $3$ \u4e8c\u8fdb\u5236\u7684\u6574\u9664\u7279\u5f81\u5e94\u8be5\u4e0e\u5341\u8fdb\u5236\u91cc\u7684 $11$ \u76f8\u4f3c\u3002\n\n\u6211\u4eec\u90fd\u77e5\u9053 $11$ \u7684\u6574\u9664\u7279\u5f81\u6709\u4e24\u4e2a\u3002\n\n\u7b2c\u4e00\u4e2a\u662f\u628a\u5341\u8fdb\u5236\u6570\u4e24\u4f4d\u4e00\u65ad\uff0c\u5f97\u5230\u5f88\u591a\u4e2a\u4e24\u4f4d\u6570\u3002\n\n\u518d\u628a\u6240\u6709\u4e24\u4f4d\u6570\u52a0\u8d77\u6765\uff0c\u5f97\u5230\u7684\u6570\u5982\u679c\u80fd\u88ab $11$ \u6574\u9664\uff0c\u90a3\u4e48\u539f\u6570\u4e5f\u80fd\u88ab $11$ \u6574\u9664\u3002\n\n\u7b2c\u4e8c\u4e2a\u5219\u662f\u628a\u5341\u8fdb\u5236\u6570\u4e00\u4f4d\u4e00\u65ad\uff0c\u5947\u6570\u4f4d\u51cf\u5076\u6570\u4f4d\u7684\u5dee\u5982\u679c\u80fd\u88ab $11$ \u6574\u9664\uff0c\u5219\u539f\u6570\u4e5f\u80fd\u88ab $11$ \u6574\u9664\u3002\n\n\u7528\u548c\u5341\u8fdb\u5236\u4e0b\u76f8\u4f3c\u7684\u8bc1\u6cd5\uff0c\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e24\u4e2a\u6574\u51fa\u7279\u5f81\u90fd\u9002\u7528\u4e8e\u4e8c\u8fdb\u5236\u91cc\u7684 $(11)_2$\u3002\n\n\u4f46\u6211\u4eec\u77e5\u9053\u524d\u8005\u5728\u8ba1\u7b97\u65f6\u662f\u4ee5\u4e24\u4f4d\u4e00\u65ad\u7684\uff0c\u5f88\u663e\u7136\u4e0d\u597d\u5229\u7528\u3002\n\n\u6240\u4ee5\u6211\u4eec\u7528\u540e\u8005\u3002\n\n\u90a3\u6211\u4eec\u60f3\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u91cd\u65b0\u6392\u5217\u540e\u53ef\u4ee5\u88ab $3$ \u6574\u9664\u3002\n\n+ \u5982\u679c\u5b83\u6709\u5076\u6570\u4e2a $1$ \u90a3\u4e48\u5f88\u663e\u7136\u5b83\u53ef\u4ee5\u4f7f\u5947\u6570\u4f4d\u548c\u5076\u6570\u4f4d\u4e0a\u7684 $1$ \u6570\u91cf\u76f8\u7b49\u3002\n\n+ \u5f53\u5b83\u6709\u5947\u6570\u4e2a $1$ \u65f6\uff0c\u6211\u4eec\u53c8\u8981\u5206\u7c7b\uff1a\n\n\t+ \u5982\u679c\u53ea\u6709\u4e00\u4e2a $1$\uff0c\u90a3\u5b83\u662f\u4e0d\u53ef\u80fd\u88ab $3$ \u6574\u9664\u7684\u3002\n\n\t+ \u5982\u679c\u6709\u4e09\u4e2a\u53ca\u4ee5\u4e0a\u7684 $1$ \u65f6\u518d\u5206\u7c7b:\n    \n    \t+ \u5982\u679c\u6709\u4e00\u6216\u96f6\u4e2a $0$\uff0c\u6211\u4eec\u4ed4\u7ec6\u679a\u4e3e\u4e00\u4e0b $0$ \u5728\u5947\u6570\u4f4d\u6216\u5076\u6570\u4f4d\uff0c\u53d1\u73b0\u662f\u4e0d\u53ef\u80fd\u7684\u3002\n\n      + \u5982\u679c\u6709\u4e09\u4e2a\u53ca\u4ee5\u4e0a\u7684 $0$\uff0c\u4e5f\u6613\u8bc1\u4ed6\u662f\u53ef\u4ee5\u88ab\u6574\u9664\u7684\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u603b\u7ed3\u8bba\u4e86\u3002\n\n\u4f46\u4ece\u6b63\u9762\u627e\u201c\u53ef\u4ee5\u88ab\u6574\u9664\u7684\u201d\u8fd8\u662f\u6709\u70b9\u96be\uff0c\u6240\u4ee5\u6211\u4eec\u201c\u6b63\u96be\u5219\u53cd\u201d\uff0c\u53bb\u627e\u201c\u4e0d\u80fd\u88ab\u6574\u9664\u7684\u201d\u3002\n\n\u201c\u4e0d\u80fd\u88ab\u6574\u9664\u201d\u7684\u5b57\u4e32\u5e94\u6ee1\u8db3\u4e0b\u9762\u4e24\u4e2a\u6761\u4ef6\u4e4b\u4e00\uff1a\n\n+ \u6709\u4e14\u53ea\u6709\u4e00\u4e2a $1$\n\n+ \u6709\u5947\u6570\u4e2a $1$ \u4e14 $0$ \u7684\u4e2a\u6570\u5c0f\u4e8e\u7b49\u4e8e $1$\n\n\u4e3a\u9632\u6b62\u7b97\u91cd\uff0c\u5c06\u7b2c\u4e00\u4e2a\u6761\u4ef6\u6539\u4e3a\uff1a\n\n+ \u6709\u4e14\u53ea\u6709\u4e00\u4e2a $1$\uff0c\u4e14 $0$ \u7684\u4e2a\u6570\u5927\u4e8e\u7b49\u4e8e $2$\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7684\u8282\u70b9\u5b58\u50a8\u5b83\u4ee3\u8868\u7684\u8fd9\u4e00\u4e2a\u5b50\u4e32\u4e2d\u7684\u4e00\u7cfb\u5217\u503c\uff0c\u5e76\u8fdb\u884c\u5b50\u4e32\u7684\u5408\u5e76\u4e86\u3002\n\n\u8fd9\u4e2a\u5b58\u6cd5\u5f88\u591a\uff0c\u5728\u8fd9\u91cc\u7ed9\u51fa\u6211\u7684\u4e00\u4e2a\u4e0d\u592a\u9ad8\u660e\u7684\u5b58\u6cd5\u3002\n\n\u5b9a\u4e49\u5982\u4e0b\uff1a\n\n``` cpp\n\nstruct Node{\n\tint l[2][3],r[2][3];\n\t//l(r)[x][y]\u4ee3\u8868\u4ece\u5de6(\u53f3)\u8fb9\u5f00\u59cb\u6709x\u4e2a1\u548cy\u4e2a0\u7684\u6bb5\u6570(y\u4e3a2\u5219\u4ee3\u88680\u7684\u4e2a\u6570>=2) \n\tint dl[2][2],dr[2][2];\n\t//dl(dr)[x][y]\u4ee3\u8868\u4ece\u5de6(\u53f3)\u5f00\u59cb\u67092k+x(k\u4e3a\u81ea\u7136\u6570)\u4e2a1\u4e0ey\u4e2a0\u7684\u6bb5\u6570 \n\tint cnt[2];\n\t//cnt[x]\u4ee3\u8868x\u7684\u4e2a\u6570 \n\tll ans;\n\t//ans\u4ee3\u8868\u6bb5\u5185\u7684\u7b54\u6848\u6570 \n\t//\u8fd9\u4e9b\u5168\u5f00ll\u4f1aMLE,\u6240\u4ee5\u9664ans\u5168\u7528int \n\tNode()\n\t{\n\t\tmemset(this,0,sizeof(Node));\n\t}\n}tr[MaxN*4];\n```\n\u5408\u5e76\u5982\u4e0b\uff1a\n``` cpp\nNode operator + (Node x,Node y)//\u597d\u957f\uff0c\u8bf7\u81ea\u884c\u5ffd\u7565 \n{\n\tNode res;\n\t//upd ans\n\tres.ans = x.ans + y.ans;\n\tres.ans += 1ll*y.l[1][2]*(x.r[0][0]+x.r[0][1]+x.r[0][2]) + 1ll*y.l[1][1]*(x.r[0][1]+x.r[0][2]) + 1ll*y.l[1][0]*x.r[0][2];\n\tres.ans += 1ll*y.l[0][2]*(x.r[1][0]+x.r[1][1]+x.r[1][2]) + 1ll*y.l[0][1]*(x.r[1][1]+x.r[1][2]) + 1ll*y.l[0][0]*x.r[1][2];\n\tres.ans += 1ll*x.dr[1][1]*y.dl[0][0] + 1ll*x.dr[1][0]*(y.dl[0][1] + y.dl[0][0]) + 1ll*x.dr[0][1]*y.dl[1][0] + 1ll*x.dr[0][0]*(y.dl[1][1]+y.dl[1][0]);\n\t//\u8fd9\u4e00\u6bb5\u4ee3\u7801\u662f\u6709\u70b9\u957f\uff0c\u4f46\u8bd5\u56fe\u4f18\u5316\u7684\u6211\u88ab\u5927\u5e38\u6570\u5361\u7206\u4e86\uff01 \n\t//upd cnt\n\tres.cnt[1] = x.cnt[1] + y.cnt[1];\n\tres.cnt[0] = x.cnt[0] + y.cnt[0];\n\t//upd l r\n\tfor(int i = 0;i <= 1;i++)\n\t{\n\t\tfor(int j = 0;j <= 2;j++)\n\t\t{\n\t\t\tres.l[i][j] += x.l[i][j];\n\t\t\tres.r[i][j] += y.r[i][j];\n\t\t\tif(x.cnt[1] + i <= 1) res.l[x.cnt[1] + i][min(2,j+x.cnt[0])] += y.l[i][j];\n\t\t\tif(y.cnt[1] + i <= 1) res.r[y.cnt[1] + i][min(2,j+y.cnt[0])] += x.r[i][j];\n\t\t}\n\t}\n\t//upd dl dr\n\tfor(int i=0;i<=1;i++)\n\t{\n\t\tfor(int j=0;j<=1;j++)\n\t\t{\n\t\t\tres.dl[i][j] += x.dl[i][j];\n\t\t\tres.dr[i][j] += y.dr[i][j];\n\t\t\tif(x.cnt[0]+j <= 1)\tres.dl[(x.cnt[1]+i)%2][x.cnt[0]+j] += y.dl[i][j];\n\t\t\tif(y.cnt[0]+j <= 1)\tres.dr[(y.cnt[1]+i)%2][y.cnt[0]+j] += x.dr[i][j];\n\t\t}\n\t}\n\treturn res;\n}\n```\n\u5168\u90e8\u4ee3\u7801\u5982\u4e0b\uff1a\n``` cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define MaxN 1000005\ntypedef long long ll;\nstruct Node{\n\tint l[2][3],r[2][3];\n\t//l(r)[x][y]\u4ee3\u8868\u4ece\u5de6(\u53f3)\u8fb9\u5f00\u59cb\u6709x\u4e2a1\u548cy\u4e2a0\u7684\u6bb5\u6570(y\u4e3a2\u5219\u4ee3\u88680\u7684\u4e2a\u6570>=2) \n\tint dl[2][2],dr[2][2];\n\t//dl(dr)[x][y]\u4ee3\u8868\u4ece\u5de6(\u53f3)\u5f00\u59cb\u67092k+x(k\u4e3a\u81ea\u7136\u6570)\u4e2a1\u4e0ey\u4e2a0\u7684\u6bb5\u6570 \n\tint cnt[2];\n\t//cnt[x]\u4ee3\u8868x\u7684\u4e2a\u6570 \n\tll ans;\n\t//ans\u4ee3\u8868\u6bb5\u5185\u7684\u7b54\u6848\u6570 \n\t//\u8fd9\u4e9b\u5168\u5f00ll\u4f1aMLE,\u6240\u4ee5\u9664ans\u5168\u7528int \n\tNode()\n\t{\n\t\tmemset(this,0,sizeof(Node));\n\t}\n}tr[MaxN*4];\nint n,m;\nNode operator + (Node x,Node y)//\u597d\u957f\uff0c\u8bf7\u81ea\u884c\u5ffd\u7565 \n{\n\tNode res;\n\t//upd ans\n\tres.ans = x.ans + y.ans;\n\tres.ans += 1ll*y.l[1][2]*(x.r[0][0]+x.r[0][1]+x.r[0][2]) + 1ll*y.l[1][1]*(x.r[0][1]+x.r[0][2]) + 1ll*y.l[1][0]*x.r[0][2];\n\tres.ans += 1ll*y.l[0][2]*(x.r[1][0]+x.r[1][1]+x.r[1][2]) + 1ll*y.l[0][1]*(x.r[1][1]+x.r[1][2]) + 1ll*y.l[0][0]*x.r[1][2];\n\tres.ans += 1ll*x.dr[1][1]*y.dl[0][0] + 1ll*x.dr[1][0]*(y.dl[0][1] + y.dl[0][0]) + 1ll*x.dr[0][1]*y.dl[1][0] + 1ll*x.dr[0][0]*(y.dl[1][1]+y.dl[1][0]);\n\t//\u8fd9\u4e00\u6bb5\u4ee3\u7801\u662f\u6709\u70b9\u957f\uff0c\u4f46\u8bd5\u56fe\u4f18\u5316\u7684\u6211\u88ab\u5927\u5e38\u6570\u5361\u7206\u4e86\uff01 \n\t//upd cnt\n\tres.cnt[1] = x.cnt[1] + y.cnt[1];\n\tres.cnt[0] = x.cnt[0] + y.cnt[0];\n\t//upd l r\n\tfor(int i = 0;i <= 1;i++)\n\t{\n\t\tfor(int j = 0;j <= 2;j++)\n\t\t{\n\t\t\tres.l[i][j] += x.l[i][j];\n\t\t\tres.r[i][j] += y.r[i][j];\n\t\t\tif(x.cnt[1] + i <= 1) res.l[x.cnt[1] + i][min(2,j+x.cnt[0])] += y.l[i][j];\n\t\t\tif(y.cnt[1] + i <= 1) res.r[y.cnt[1] + i][min(2,j+y.cnt[0])] += x.r[i][j];\n\t\t}\n\t}\n\t//upd dl dr\n\tfor(int i=0;i<=1;i++)\n\t{\n\t\tfor(int j=0;j<=1;j++)\n\t\t{\n\t\t\tres.dl[i][j] += x.dl[i][j];\n\t\t\tres.dr[i][j] += y.dr[i][j];\n\t\t\tif(x.cnt[0]+j <= 1)\tres.dl[(x.cnt[1]+i)%2][x.cnt[0]+j] += y.dl[i][j];\n\t\t\tif(y.cnt[0]+j <= 1)\tres.dr[(y.cnt[1]+i)%2][y.cnt[0]+j] += x.dr[i][j];\n\t\t}\n\t}\n\treturn res;\n}\n\nNode work(int x)\n{\n\tNode res;\n\tres.l[x][x^1] = 1;\n\tres.r[x][x^1] = 1;\n\tres.dl[x][x^1] = 1;\n\tres.dr[x][x^1] = 1;\n\tres.cnt[x]++;\n\tif(x == 1) res.ans = 1;\n\treturn res;\n}\n\nvoid build(int c,int l,int r)\n{\n\tif(l==r)\n\t{\n\t\tint x;\n\t\tcin>>x;\n\t\ttr[c] = work(x);\n\t\treturn ;\n\t}\n\tint mid = (l+r)/2;\n\tbuild(c*2,l,mid);\n\tbuild(c*2+1,mid+1,r);\n\ttr[c] = tr[c*2] + tr[c*2+1];\n\treturn ;\n}\n\nvoid upd(int c,int l,int r,int ind)\n{\n\tif(l==r)\n\t{\n\t\tif(tr[c].cnt[1] == 1) tr[c] = work(0);\n\t\telse tr[c] = work(1);\n\t\treturn ;\n\t}\n\tint mid = (l+r)/2;\n\tif(mid < ind) upd(c*2+1,mid+1,r,ind);\n\telse upd(c*2,l,mid,ind);\n\ttr[c] = tr[c*2] + tr[c*2+1];\n\treturn ;\n}\n\nNode query(int c,int l,int r,int x,int y)\n{\n\tif(l == x && r == y) return tr[c];\n\tint mid = (l+r)/2;\n\tif(x > mid) return query(c*2+1,mid+1,r,x,y);\n\telse if(y <= mid) return query(c*2,l,mid,x,y);\n\telse return query(c*2,l,mid,x,mid) + query(c*2+1,mid+1,r,mid+1,y);\n}\n\nint main()\n{\n\tcin>>n;\n\tbuild(1,1,n);\n\tcin>>m;\n\twhile(m--)\n\t{\n\t\tint op,x,y;\n\t\tcin>>op;\n\t\tif(op == 1)\n\t\t{\n\t\t\tcin>>x;\n\t\t\tupd(1,1,n,x);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcin>>x>>y;\n\t\t\tint num = y-x+1;\n\t\t\tll t = 1ll*num*(num+1)/2;\n\t\t\tcout<<t - query(1,1,n,x,y).ans<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1638949330,
        "uid": 310317,
        "name": "lzytag",
        "ccfLevel": 7,
        "title": "\u3010P4428\u3011\u3010BJOI2018\u3011\u4e8c\u8fdb\u5236 \u9898\u89e3"
    },
    {
        "content": "# P4428 [BJOI2018]\u4e8c\u8fdb\u5236\u9898\u89e3\n\n\u4e8c\u8fdb\u5236\u4f4d\u8f6c\u5341\u8fdb\u5236 $\\bmod 3$ \u540e\u53d8\u6210\uff1a$1\\,2\\,1\\,2\\,1\\cdots$\uff08\u4ece\u4f4e\u5230\u9ad8\uff09\u3002\n\n### \u8003\u8651\u4ec0\u4e48\u6837\u7684\u5b50\u4e32\u6ee1\u8db3\u6761\u4ef6\uff1a\n\n$1$ \u7684\u4e2a\u6570\u4e3a\u5076\u6570\uff0c\u6ee1\u8db3\u3002\n\n$1$ \u7684\u4e2a\u6570\u4e3a\u5947\u6570\uff1a\n- \u4e00\u4e2a $1$ \u7684\u65f6\u5019\u80af\u5b9a\u4e0d\u884c\u3002\n- \u6709\u591a\u4e8e $1$ \u4e2a $1$ \u7684\u60c5\u51b5\uff1a\n  \t- \u6ca1\u6709 $0$ \u65f6\u4e0d\u53ef\u4ee5\uff08\u663e\u7136\uff09\u3002\n   - \u6709\u4e00\u4e2a $0$ \u7684\u65f6\u5019\u4e5f\u4e0d\u884c\uff0c\u8bc1\u660e\u8003\u8651\u8c03\u6574\uff0c\u6ca1\u6709 $0$ \u65f6\u662f $121\u00b7\u00b7\u00b7121$\uff0c\u8bbe\u5176\u548c\u4e3a $3n+1$\uff0c\u6dfb\u52a0\u4e00\u4e2a $0$ \u540e\uff0c\u4f1a\u628a\u524d\u9762\u7684\u5e8f\u5217\u5411\u524d\u632a\u52a8\u4e00\u4f4d\uff0c\u4f1a\u4f7f\u6574\u4e2a\u5e8f\u5217\u7684\u548c\u52a0\u4e00\u6216\u8005\u4e0d\u53d8\uff0c\u5373 $3n+1$ \u6216 $3n+2$ \u4e0d\u6ee1\u8db3\u6761\u4ef6\u3002\n  - \u6709\u4e24\u4e2a $0$ \u7684\u65f6\u5019\u53ef\u4ee5\uff0c\u8003\u8651\u4e09\u4e2a $1$ \u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u6784\u9020\u5982 $10101$ \uff0c\u6709\u66f4\u591a $1$ \u7684\u65f6\u5019\u8865\u5728\u524d\u9762\u5373\u53ef\u3002\n  - \u6709\u66f4\u591a $0$ \u65f6\u8865\u5728\u524d\u9762\u5373\u53ef\u3002\n\n### \u53d1\u73b0\u6ee1\u8db3\u6761\u4ef6\u7684\u5b50\u4e32\u6bd4\u8f83\u590d\u6742\uff08\u5e94\u8be5\u4e5f\u80fd\u7ef4\u62a4\uff09\uff0c\u4e8e\u662f\u770b\u4ec0\u4e48\u6837\u7684\u5b50\u4e32\u4e0d\u7b26\u5408\u8981\u6c42\uff1a\n- \u6709\u4e00\u4e2a $1$\u3002\n- \u6709\u5947\u6570\u4e2a $1$ \u4e14\u6ca1\u6709 $0$\u3002\n- \u6709\u5947\u6570\u4e2a $1$ \u4e14\u6709\u4e00\u4e2a $0$\u3002\n\n### \u7136\u540e\u5c31\u53ef\u4ee5\u5728\u7ebf\u6bb5\u6811\u4e0a\u7ef4\u62a4\u4e00\u4e9b\u4fe1\u606f\u6765\u8ba1\u7b97\n\n\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217\u5171\u6709 $n\\times(n+1)\\div2$ \u4e2a\u5b50\u5e8f\u5217\u3002\n\n\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u7684\u4e00\u4e2a\u533a\u95f4\uff0c\u533a\u95f4\u4e2d\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\u4e2a\u6570 $=$ \u5de6\u5b50 $+$ \u53f3\u5b50 $+$ \u6a2a\u7a7f\u5de6\u53f3\u533a\u95f4\u7684\u90e8\u5206\u3002\n\n\u601d\u8003\u5982\u4f55\u8ba1\u7b97\u6a2a\u7a7f\u7684\u7b54\u6848\u3002\uff08\u8fd9\u90e8\u5206\u6211\u4eec\u53ea\u8003\u8651\u4e00\u4fa7\uff0c\u53e6\u4e00\u4fa7\u540c\u7406\uff09\n\n\u6709\u4e00\u4e2a $1$\uff1a\n- \u5de6\u5b50\u540e\u7f00\u53ea\u6709 $1$ \u4e2a $1\\times$ \u53f3\u5b50\u524d\u7f00\u53ea\u6709 $0$ \u7684\u4e2a\u6570\u3002\n\n\u6709\u5947\u6570\u4e2a $1$ \u4e14\u6ca1\u6709 $0$\uff1a\n- \u5de6\u5b50\u540e\u7f00\u53ea\u6709\u5947\u6570\u4e2a $1$ \u7684\u4e2a\u6570 $\\times$ \u53f3\u5b50\u524d\u7f00\u53ea\u6709\u5076\u6570\u4e2a $1$ \u7684\u4e2a\u6570\u3002\n\n\u6709\u5947\u6570\u4e2a $1$ \u4e14\u6709\u4e00\u4e2a $0$\uff1a\n- \u5de6\u5b50\u540e\u7f00\u6709\u5947\u6570\u4e2a $1$ \u52a0\u4e00\u4e2a $0$ \u7684\u4e2a\u6570 $\\times$ \u53f3\u5b50\u524d\u7f00\u53ea\u6709\u5076\u6570\u4e2a $1$ \u7684\u4e2a\u6570\u3002\n- \u5de6\u5b50\u540e\u7f00\u53ea\u6709\u5947\u6570\u4e2a $1$ \u7684\u4e2a\u6570 $\\times$ \u53f3\u5b50\u524d\u7f00\u6709\u5076\u6570\u4e2a $1$ \u52a0\u4e00\u4e2a $0$ \u7684\u4e2a\u6570\u3002\n\n\u4e8e\u662f\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u7684\u5185\u5bb9\u5c31\u662f:\n\n- \u524d\u540e\u7f00\u53ea\u6709 $1$ \u4e2a $1$ \u7684\u4e2a\u6570\u3002\n- \u524d\u540e\u7f00\u53ea\u6709 $0$ \u7684\u4e2a\u6570\u3002\n- \u524d\u540e\u7f00\u53ea\u6709\u5947\u6570\u4e2a $1$ \u7684\u4e2a\u6570\u3002\n- \u524d\u540e\u7f00\u53ea\u6709\u5076\u6570\u4e2a $1$ \u7684\u4e2a\u6570\u3002\n- \u524d\u540e\u7f00\u6709\u5947\u6570\u4e2a $1$ \u52a0 $1$ \u4e2a $0$ \u7684\u4e2a\u6570\u3002\n- \u524d\u540e\u7f00\u6709\u5076\u6570\u4e2a $1$ \u52a0 $1$ \u4e2a $0$ \u7684\u4e2a\u6570\u3002\n\n\u6574\u7406\u7b80\u5316\u4e00\u4e0b\u53d8\u6210\uff1a\n\n- \u524d\u540e\u7f00\u5f62\u5982 $0\\cdots010\\cdots0$ \u7684\u957f\u5ea6\u548c\u540e\u9762 $0$ \u7684\u957f\u5ea6\uff08\u4e24\u5904\u7684 $0$ \u5747\u53ef\u6ca1\u6709\uff09\u3002\n- \u524d\u540e\u7f00\u8fde\u7eed\u7684 $0$ \u7684\u957f\u5ea6\u3002\n- \u524d\u540e\u7f00\u8fde\u7eed\u7684 $1$ \u7684\u4e2a\u957f\u5ea6\u3002\n- \u524d\u540e\u7f00\u5f62\u5982 $1\\cdots101\\cdots1$ \u7684\u957f\u5ea6\u548c\u540e\u9762 $1$ \u7684\u957f\u5ea6\uff08\u4e24\u5904\u7684 $1$ \u5747\u53ef\u6ca1\u6709\uff09\u3002\n\n\u540c\u65f6\uff0c\u4e3a\u4e86\u65b9\u4fbf\u8f6c\u79fb\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u8bb0\u5f55\u6574\u6bb5\u4e2d $0$ \u7684\u4e2a\u6570\u548c $1$ \u7684\u4e2a\u6570\u3002\n\n\u7ebf\u6bb5\u6811\u7684\u8f6c\u79fb\uff1a\uff08\u4ee5\u524d\u7f00\u4e3a\u4f8b\uff09\n- \u524d\u7f00\u5f62\u5982 $0\\cdots010\\cdots0$ \u7684\u957f\u5ea6\u548c\u540e\u9762 $0$ \u7684\u957f\u5ea6\uff1a\n\t- \u82e5\u5de6\u5b50\u6ca1\u6709 $1$\uff0c\u7ee7\u627f\u53f3\u5b50\u3002\n   - \u82e5\u5de6\u5b50\u7684\u8fd9\u4e2a\u957f\u5ea6=\u5de6\u5b50\u533a\u95f4\u957f\u5ea6\uff0c\u5219\u957f\u5ea6 $+=$ \u53f3\u5b50\u524d\u7f00 $0$ \u7684\u957f\u5ea6\u3002\n   - \u5426\u5219\u7ee7\u627f\u5de6\u5b50\u3002\n- \u524d\u7f00\u8fde\u7eed\u7684 $0$ \u7684\u957f\u5ea6\uff1a\n\t- \u82e5\u5de6\u5b50\u7684\u8fd9\u4e2a\u957f\u5ea6 $=$ \u5de6\u5b50\u533a\u95f4\u957f\u5ea6\uff0c\u5219\u957f\u5ea6 $+=$ \u53f3\u5b50\u524d\u7f00 $0$ \u7684\u957f\u5ea6\u3002\n   - \u5426\u5219\u7ee7\u627f\u5de6\u5b50\u3002\n- \u524d\u7f00\u8fde\u7eed\u7684 $1$ \u7684\u4e2a\u957f\u5ea6\uff1a\n\t- \u82e5\u5de6\u5b50\u7684\u8fd9\u4e2a\u957f\u5ea6 $=$ \u5de6\u5b50\u533a\u95f4\u957f\u5ea6\uff0c\u5219\u957f\u5ea6 $+=$ \u53f3\u5b50\u524d\u7f00 $1$ \u7684\u957f\u5ea6\u3002\n   - \u5426\u5219\u7ee7\u627f\u5de6\u5b50\u3002\n- \u524d\u7f00\u5f62\u5982 $1\\cdots101\\cdots1$ \u7684\u957f\u5ea6\u548c\u540e\u9762 $1$ \u7684\u957f\u5ea6\uff1a\n\t- \u82e5\u5de6\u5b50\u6ca1\u6709 $0$\uff0c\u7ee7\u627f\u53f3\u5b50\u3002\n\t- \u82e5\u5de6\u5b50\u7684\u8fd9\u4e2a\u957f\u5ea6 $=$ \u5de6\u5b50\u533a\u95f4\u957f\u5ea6\uff0c\u5219\u957f\u5ea6 $+=$ \u53f3\u5b50\u524d\u7f00 $1$ \u7684\u957f\u5ea6\u3002\n   - \u5426\u5219\u7ee7\u627f\u5de6\u5b50\u3002\n   \n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N = 1e5+5;\ninline ll read()\n{\n\tll x=0,f=1;char ch=getchar();\n\twhile (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n\twhile (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n\treturn x*f;\n}\nint n,a[N];\nstruct mat{\n\tint len;\n\tint cnt[2];\n\tint len010[2],len0100[2],len0[2],len1[2],len101[2],len1011[2];//0front 1back\n\tll ans;\n};\nmat operator+(mat x,mat y)\n{\n\tmat z;\n\tz.len = x.len + y.len;\n\tz.cnt[0] = x.cnt[0] + y.cnt[0];z.cnt[1] = x.cnt[1] + y.cnt[1];\n\tz.len0[0] = (x.len0[0]==x.len) ? (y.len0[0]+x.len) : (x.len0[0]);\n\tz.len1[0] = (x.len1[0]==x.len) ? (y.len1[0]+x.len) : (x.len1[0]);\n\tif(x.cnt[1] == 0) z.len010[0] = (y.len010[0]==0)?0:(x.len+y.len010[0]),z.len0100[0] = y.len0100[0];\n\telse if(x.len010[0] == x.len) z.len010[0] = x.len010[0]+y.len0[0],z.len0100[0] = x.len0100[0]+y.len0[0];\n\telse z.len010[0] = x.len010[0],z.len0100[0] = x.len0100[0];\n\tif(x.cnt[0] == 0) z.len101[0] = (y.len101[0]==0)?0:(x.len+y.len101[0]),z.len1011[0] = y.len1011[0];\n\telse if(x.len101[0] == x.len) z.len101[0] = x.len101[0]+y.len1[0],z.len1011[0] = x.len1011[0]+y.len1[0];\n\telse z.len101[0] = x.len101[0],z.len1011[0] = x.len1011[0];\n\tz.len0[1] = (y.len0[1]==y.len) ? (x.len0[1]+y.len) : (y.len0[1]);\n\tz.len1[1] = (y.len1[1]==y.len) ? (x.len1[1]+y.len) : (y.len1[1]);\n\tif(y.cnt[1] == 0) z.len010[1] = (x.len010[1]==0)?0:(y.len+x.len010[1]),z.len0100[1] = x.len0100[1];\n\telse if(y.len010[1] == y.len) z.len010[1] = y.len010[1]+x.len0[1],z.len0100[1] = y.len0100[1]+x.len0[1];\n\telse z.len010[1] = y.len010[1],z.len0100[1] = y.len0100[1];\n\tif(y.cnt[0] == 0) z.len101[1] = (x.len101[1]==0)?0:(y.len+x.len101[1]),z.len1011[1] = x.len1011[1];\n\telse if(y.len101[1] == y.len) z.len101[1] = y.len101[1]+x.len1[1],z.len1011[1] = y.len1011[1]+x.len1[1];\n\telse z.len101[1] = y.len101[1],z.len1011[1] = y.len1011[1];\n\tz.ans = x.ans + y.ans;\n\tif(z.len == 2)\n\t{\n\t\tif(z.cnt[1] == 1) z.ans++;\n\t\treturn z;\n\t}\n\tz.ans += x.len0100[1]*y.len0[0];\n\tz.ans += y.len0100[0]*x.len0[1];\n\tint txx = (x.len101[1]-x.len1011[1])%2==0?x.len1011[1]/2:(x.len1011[1]-1)/2+(x.len101[1]==x.len1011[1]?0:1);\n\tint tyy = (y.len101[0]-y.len1011[0])%2==0?(y.len1011[0]-1)/2+(y.len101[0]==y.len1011[0]?0:1):y.len1011[0]/2;\n\tz.ans += ((x.len1[1]+1)/2+txx)*(y.len1[0]/2+tyy) - txx*tyy;\n\tif((x.len1[1]+1)/2 > 1) z.ans += ((x.len1[1]+1)/2-1)*(y.len0[0]>0);\n\ttyy = (y.len101[0]-y.len1011[0])%2==0?y.len1011[0]/2:(y.len1011[0]-1)/2+(y.len101[0]==y.len1011[0]?0:1);\n\ttxx = (x.len101[1]-x.len1011[1])%2==0?(x.len1011[1]-1)/2+(x.len101[1]==x.len1011[1]?0:1):x.len1011[1]/2;\n\tz.ans += ((y.len1[0]+1)/2+tyy)*(x.len1[1]/2+txx) - txx*tyy;\n\tif((y.len1[0]+1)/2 > 1) z.ans += ((y.len1[0]+1)/2-1)*(x.len0[1]>0);\n\treturn z;\n}\nmat getmat(int x)\n{\n\tmat z;\n\tz.len = 1;z.cnt[x] = 1;z.cnt[x^1] = 0;\n\tif(x == 1) z.ans = 1;\n\telse z.ans = 0;\n\tif(x == 0)\n\t{\n\t\tz.len010[0] = z.len010[1] = z.len0100[0] = z.len0100[1] = 0;\n\t\tz.len0[0] = z.len0[1] = 1;z.len1[0] = z.len1[1] = 0;\n\t\tz.len101[0] = z.len101[1] = z.len1011[0] = z.len1011[1] = 1;\n\t}\n\telse\n\t{\n\t\tz.len010[0] = z.len010[1] = z.len0100[0] = z.len0100[1] = 1;\n\t\tz.len0[0] = z.len0[1] = 0;z.len1[0] = z.len1[1] = 1;\n\t\tz.len101[0] = z.len101[1] = z.len1011[0] = z.len1011[1] = 0;\n\t}\n\treturn z;\n}\nstruct node{\n\tint l,r,ls,rs;\n\tmat d;\n\tinline void pushup();\n}nd[N*4];\nint rt,ndcnt;\ninline void node::pushup(){d=nd[ls].d+nd[rs].d;}\nint build(int l,int r)\n{\n\tint p = ++ndcnt;\n\tnd[p].l = l,nd[p].r = r;\n\tif(l == r)\n\t{\n\t\tnd[p].d = getmat(a[l]);\n\t\treturn p;\n\t}\n\tint mid = l + r >> 1;\n\tnd[p].ls = build(l,mid),nd[p].rs = build(mid+1,r);\n\tnd[p].pushup();\n\treturn p;\n}\nvoid update(int p,int plc)\n{\n\tif(nd[p].l == nd[p].r)\n\t{\n\t\ta[plc] ^= 1;\n\t\tnd[p].d = getmat(a[plc]);\n\t\treturn;\n\t}\n\tint mid = nd[p].l + nd[p].r >> 1;\n\tif(plc <= mid) update(nd[p].ls,plc);\n\telse update(nd[p].rs,plc);\n\tnd[p].pushup();\n\treturn;\n}\nmat query(int p,int l,int r)\n{\n\tif(nd[p].l == l && nd[p].r == r) return nd[p].d;\n\tint mid = nd[p].l + nd[p].r >> 1;\n\tif(r <= mid) return query(nd[p].ls,l,r);\n\telse if(l > mid) return query(nd[p].rs,l,r);\n\telse return query(nd[p].ls,l,mid)+query(nd[p].rs,mid+1,r);\n}\nint main()\n{\n\tn = read();\n\tfor(int i = 1;i <= n;i++) a[i] = read();\n\trt = build(1,n);\n\tint m,op,l,r;\n\tm = read();\n\twhile(m--)\n\t{\n\t\top = read();l = read();\n\t\tif(op == 1) update(rt,l);\n\t\telse\n\t\t{\n\t\t\tr = read();\n\t\t\tll len = r-l+1;\n\t\t\tprintf(\"%lld\\n\",len*(len+1)/2-query(rt,l,r).ans);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1678952884,
        "uid": 247193,
        "name": "brimosta",
        "ccfLevel": 7,
        "title": "[BJOI2018]\u4e8c\u8fdb\u5236"
    },
    {
        "content": "\u8865\u4e00\u4e2a BJOI\u3002\n\n\u9996\u5148\u89c2\u5bdf\u4e00\u4e0b\u4ec0\u4e48\u6837\u7684\u533a\u95f4\u53ef\u4ee5\u88ab\u6392\u6210 $3$ \u7684\u500d\u6570\u3002\n\n\u8003\u8651\u5230\u7b2c $k$ \u4f4d\u7684\u6743\u503c\u662f $2^k\\equiv (-1)^k\\pmod 3$\uff0c\u6240\u4ee5\u5982\u679c\u4e00\u6bb5\u533a\u95f4\u91cc\u9762\u6709\u5076\u6570\u4e2a $1$ \u5c31\u76f4\u63a5\u4ece\u6700\u4f4e\u4f4d\u5f80\u4e0a\u6392 $1$ \u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5982\u679c\u6709\u5947\u6570\u4e2a $1$ \u5c31\u4e0d\u80fd\u76f4\u63a5\u5bf9\u534a\u5f00\u3002\n\n\u90a3\u5c31\u5c3d\u91cf\u5bf9\u534a\u5f00\uff0c\u6bd4\u5982\u6709 $7$ \u4e2a $1$ \u548c $2$ \u4e2a $0$\uff0c\u628a $7$ \u62c6\u6210 $2+5$\uff0c\u6784\u9020\u4e3a $(101011111)_2=(351)_{10}$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u533a\u95f4\u53ef\u4ee5\u88ab\u91cd\u6392\u4e3a $3$ \u7684\u500d\u6570\u7684\u6761\u4ef6\u662f\uff1a**\u6709\u5076\u6570\u4e2a $1$\uff0c\u6216\u8005\u6709\u5947\u6570\u4e2a $1$ \u7684\u540c\u65f6\u6709\u591a\u4e8e $\\geq 3$ \u4e2a $1$ \u548c $\\geq 2$ \u4e2a $0$\u3002**\n\n\u90a3\u4e48\u4e3a\u4e86\u6ee1\u8db3\u6761\u4ef6\uff0c\u6211\u4eec\u9700\u8981\u8bb0\u4e0b\u4ec0\u4e48\u5462\uff1f\n\n1. \u9700\u8981\u8bb0\u4e0b $1$ \u7684\u4e2a\u6570\u7684\u5947\u5076\u6027\u3002\n2. \u9700\u8981\u8bb0\u4e0b $0$ \u7684\u4e2a\u6570\uff1a$=0$\uff0c$=1$\uff0c\u6216\u8005 $\\geq 2$\u3002\n3. \u9700\u8981\u8bb0\u4e0b $1$ \u7684\u4e2a\u6570\uff1a$=0$\uff0c$=1$\uff0c\u6216\u8005 $\\geq 2$\u3002\n\n\u4e8e\u662f\u5f97\u5230\u72b6\u6001 $f_{0/1,0/1/2,0/1/2}$\uff0c\u6bcf\u4e00\u7ef4\u5206\u522b\u5bf9\u5e94\u4e0a\u9762\u4e09\u6761\u9700\u8981\u8bb0\u4e0b\u7684\u4fe1\u606f\u3002\n\n\u4e3a\u4e86\u652f\u6301\u52a8\u6001\u7ef4\u62a4\uff0c\u9700\u8981\u8bb0\u6240\u6709\u524d\u7f00\u7684 DP \u72b6\u6001\u548c\u6240\u6709\u540e\u7f00\u7684 DP \u72b6\u6001\uff0c\u518d\u8bb0\u4e0b $0$ \u7684\u6570\u91cf\u548c $1$ \u7684\u6570\u91cf\uff08\u4e24\u4e2a\u90fd\u8bb0\u4e3a\u4e86\u65b9\u4fbf\u5c01\u88c5\uff09\uff0c\u4ee5\u53ca\u6574\u4e2a\u533a\u95f4\u7684\u5408\u6cd5\u5b50\u533a\u95f4\u6570\u91cf\u3002\n\n\u7ef4\u62a4\u8fc7\u7a0b\u5927\u6982\u662f\u8fd9\u6837\u7684\uff1a\n\nStep 1\uff0c\u7ef4\u62a4\u51fa $0$ \u548c $1$ \u7684\u6570\u91cf\u3002\n\n```cpp\nNode res;\nfor (int i = 0;i < 2;i++) res.sum[i] = sum[i] + b.sum[i];\n```\n\nStep 2\uff0c\u5de6\u4fa7\u8282\u70b9\u7684\u524d\u7f00\u548c\u53f3\u4fa7\u8282\u70b9\u7684\u540e\u7f00\u5408\u5e76\u4e0a\u6765\u4e0d\u53d8\uff0c\u76f4\u63a5\u590d\u5236\u8fc7\u6765\u3002\n\n```cpp\nfor (int i = 0;i < 2;i++) {\n\tfor (int j = 0;j < 3;j++) {\n\t\tfor (int k = 0;k < 3;k++) {\n\t\t\tres.pre[i][j][k] = pre[i][j][k];\n\t\t\tres.suf[i][j][k] = b.suf[i][j][k];\n\t\t}\n\t}\n}\n```\n\nStep 3\uff0c\u53f3\u4fa7\u8282\u70b9\u7684\u524d\u7f00\u548c\u5de6\u4fa7\u8282\u70b9\u7684\u540e\u7f00\u5408\u5e76\u4e0a\u6765\u5206\u522b\u8981\u52a0\u4e0a\u5de6\u4fa7\u8282\u70b9\u548c\u53f3\u4fa7\u8282\u70b9\u7684\u6574\u4f53\u4fe1\u606f\u3002\n\n```cpp\nfor (int i = 0;i < 2;i++) {\n    for (int j = 0;j < 3;j++) {\n        for (int k = 0;k < 3;k++) res.pre[(i + sum[1]) & 1][Min(2, j + sum[0])][Min(2, k + sum[1])] += b.pre[i][j][k];\n    }\n}\nfor (int i = 0;i < 2;i++) {\n    for (int j = 0;j < 3;j++) {\n        for (int k = 0;k < 3;k++) res.suf[(i + b.sum[1]) & 1][Min(2, j + b.sum[0])][Min(2, k + b.sum[1])] += suf[i][j][k];\n    }\n}\n```\n\nStep 4\uff0c\u5de6\u4fa7\u8282\u70b9\u7684\u6574\u4f53\u7b54\u6848\u548c\u53f3\u4fa7\u8282\u70b9\u7684\u6574\u4f53\u7b54\u6848\u8d21\u732e\u4e0d\u53d8\uff0c\u76f4\u63a5\u5408\u5e76\u4e0a\u6765\u3002\n\n```cpp\nres.ans = ans + b.ans;\n```\n\nStep 5\uff0c\u8003\u8651\u8de8\u8fc7\u4e2d\u95f4\u70b9\u7684\u533a\u95f4\u7684\u8d21\u732e\uff0c\u76f4\u63a5\u5927\u529b\u516d\u91cd\u5faa\u73af\u679a\u4e3e\u53ef\u80fd\u7684\u72b6\u6001\u5bf9 $(p,q,r)$ \u548c $(x,y,z)$\uff0c\u5f53 $p+x\\equiv 0\\pmod 2$\uff0c\u6216\u8005 $p+x\\equiv 1\\pmod 2$\uff0c $q+y\\geq 2$ \u4e14 $r+z\\geq 2$ \u65f6\u53ef\u4ee5\u4ea7\u751f\u8d21\u732e\uff0c\u8d21\u732e\u91cf\u5c31\u662f\u4e24\u4e2a\u72b6\u6001\u7684\u503c\u76f8\u4e58\u3002\n\n```cpp\nfor (int il = 0;il < 2;il++) {\n    for (int jl = 0;jl < 3;jl++) {\n        for (int kl = 0;kl < 3;kl++) {\n            for (int ir = 0;ir < 2;ir++) {\n                for (int jr = 0;jr < 3;jr++) {\n                    for (int kr = 0;kr < 3;kr++) {\n                        if ((il + ir & 1) == 0 || (jl + jr >= 2 && kl + kr >= 2)) res.ans += suf[il][jl][kl] * b.pre[ir][jr][kr];\n                    }\n                }\n            }\n        }\n    }\n}\n```\n\n\u8fd9\u6837\u628a\u8282\u70b9\u4e22\u8fdb\u7ebf\u6bb5\u6811\u91cc\u9762\u7ef4\u62a4\u5c31\u53ef\u4ee5\u4e86\uff0c\u590d\u6742\u5ea6 $O(n\\log n)$ \u5e26 $216$ \u500d\u5e38\u6570\u3002\n\n\u7531\u4e8e\u662f\u9ed1\u9898\u6240\u4ee5\u53ea\u7ed9\u6838\u5fc3\u4ee3\u7801\u9632\u6284\u3002\n\n```cpp\nstruct Node {\n\tlong long sum[2], ans, pre[2][3][3], suf[2][3][3];\n\tNode() {}\n\tNode(bool x) {\n\t\tmemset(sum, 0, sizeof(sum));\n\t\tsum[x]++;\n\t\tans = !x;\n\t\tmemset(pre, 0, sizeof(pre)); memset(suf, 0, sizeof(suf));\n\t\tif (x) pre[1][0][1] = suf[1][0][1] = 1;\n\t\telse pre[0][1][0] = suf[0][1][0] = 1;\n\t}\n\tNode operator + (const Node& b) const {\n\t\tNode res;\n\t\tfor (int i = 0;i < 2;i++) res.sum[i] = sum[i] + b.sum[i];\n\t\tfor (int i = 0;i < 2;i++) {\n\t\t\tfor (int j = 0;j < 3;j++) {\n\t\t\t\tfor (int k = 0;k < 3;k++) {\n\t\t\t\t\tres.pre[i][j][k] = pre[i][j][k];\n\t\t\t\t\tres.suf[i][j][k] = b.suf[i][j][k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0;i < 2;i++) {\n\t\t\tfor (int j = 0;j < 3;j++) {\n\t\t\t\tfor (int k = 0;k < 3;k++) res.pre[(i + sum[1]) & 1][Min(2, j + sum[0])][Min(2, k + sum[1])] += b.pre[i][j][k];\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0;i < 2;i++) {\n\t\t\tfor (int j = 0;j < 3;j++) {\n\t\t\t\tfor (int k = 0;k < 3;k++) res.suf[(i + b.sum[1]) & 1][Min(2, j + b.sum[0])][Min(2, k + b.sum[1])] += suf[i][j][k];\n\t\t\t}\n\t\t}\n\t\tres.ans = ans + b.ans;\n\t\tfor (int il = 0;il < 2;il++) {\n\t\t\tfor (int jl = 0;jl < 3;jl++) {\n\t\t\t\tfor (int kl = 0;kl < 3;kl++) {\n\t\t\t\t\tfor (int ir = 0;ir < 2;ir++) {\n\t\t\t\t\t\tfor (int jr = 0;jr < 3;jr++) {\n\t\t\t\t\t\t\tfor (int kr = 0;kr < 3;kr++) {\n\t\t\t\t\t\t\t\tif ((il + ir & 1) == 0 || (jl + jr >= 2 && kl + kr >= 2)) res.ans += suf[il][jl][kl] * b.pre[ir][jr][kr];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n};\nstruct Segtree {\n\tNode val[400005];\n\tinline void Build(int p, int pl, int pr, int *a) {\n\t\tif (pl == pr) {\n\t\t\tval[p] = Node(a[pl]);\n\t\t\treturn;\n\t\t}\n\t\tint mid = pl + pr >> 1;\n\t\tBuild(p << 1, pl, mid, a); Build(p << 1 | 1, mid + 1, pr, a);\n\t\tval[p] = val[p << 1] + val[p << 1 | 1];\n\t}\n\tinline void Modify(int p, int pl, int pr, int id, int v) {\n\t\tif (pl == pr) {\n\t\t\tval[p] = Node(v);\n\t\t\treturn;\n\t\t}\n\t\tint mid = pl + pr >> 1;\n\t\tif (id <= mid) Modify(p << 1, pl, mid, id, v);\n\t\telse Modify(p << 1 | 1, mid + 1, pr, id, v);\n\t\tval[p] = val[p << 1] + val[p << 1 | 1];\n\t}\n\tinline Node Query(int p, int pl, int pr, int l, int r) {\n\t\tif (pl == l && pr == r) return val[p];\n\t\tint mid = pl + pr >> 1;\n\t\tif (mid >= r) return Query(p << 1, pl, mid, l, r);\n\t\telse if (mid + 1 <= l) return Query(p << 1 | 1, mid + 1, pr, l, r);\n\t\telse return Query(p << 1, pl, mid, l, mid) + Query(p << 1 | 1, mid + 1, pr, mid + 1, r);\n\t}\n};\nSegtree sgt;\n\nint a[100005], n;\n\ninline void Read() {\n\tn = qread();\n\tfor (int i = 1;i <= n;i++) a[i] = qread();\n}\n\ninline void Solve() {\n\tsgt.Build(1, 1, n, a);\n\tint q = qread();\n\twhile (q--) {\n\t\tint opt = qread();\n\t\tif (opt == 1) {\n\t\t\tint i = qread();\n\t\t\ta[i] ^= 1;\n\t\t\tsgt.Modify(1, 1, n, i, a[i]);\n\t\t} else {\n\t\t\tint l = qread(), r = qread();\n\t\t\tprintf(\"%lld\\n\", sgt.Query(1, 1, n, l, r).ans);\n\t\t}\n\t}\n}\n```",
        "postTime": 1617366320,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4428 \u3010[BJOI2018]\u4e8c\u8fdb\u5236\u3011"
    },
    {
        "content": "\u9996\u5148\u5148\u770b\u9898\u76ee\u6c42\u7684\u662f\u4ec0\u4e48\u3002\n\n\u8003\u8651\u6bcf\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\uff0c$0$ \u80af\u5b9a\u5bf9\u548c\u6ca1\u6709\u4ec0\u4e48\u8d21\u732e\uff0c\u90a3\u4e48\u8003\u8651 $1$ \u653e\u5728\u4e0d\u540c\u7684\u4f4d\u7f6e\u5bf9\u4e8e\u548c\u7684\u8d21\u732e\u3002\n\n\u6211\u4eec\u6253\u4e00\u4e2a\u8868\u5c31\u4e0d\u96be\u5eb7\u51fa\u6765\u819c $3$ \u610f\u4e49\u4e0b\uff0c $1 <<0 = 1$\uff0c$1 <<1 = 2$\uff0c$1 <<3 = 1$\uff0c$1 <<4 = 2$\u3002emmm\u679c\u65ad\u53d1\u73b0\u4e24\u4e2a $1$ \u819c $3$ \u5c31\u662f $0$\u3002\n\n\u4f46\u53ea\u5224\u5947\u5076\u6027\u5e76\u5e03\u661f QAQ\u3002\u8fd8\u5b58\u5728\u53e6\u4e00\u79cd\u60c5\u51b5\uff0c\u5373 $3$ \u4e2a\u819c $3$ \u4e3a $1$ \u7684\u6570\u7ec4\u8d77\u6765\u819c $3$ \u5c31\u662f $0$\u3002\u628a\u8fd9\u4e2a\u7ea6\u6570\u518d\u8f6c\u5316\u4e00\u4e0b\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u53d1\u73b0\u7b2c\u4e8c\u4e2a\u7ea6\u675f\uff0c\u5982\u679c\u5b58\u5728\u4e00\u6bb5\u533a\u95f4\u548c\u4e3a\u5947\u6570\uff0c\u90a3\u4e48\u5982\u679c\u8fd9\u4e00\u6bb5\u91cc\u6709\u8d85\u8fc7 $2$ \u4e2a $0$ \u548c $1$\uff0c\u90a3\u4e48\u5bf9\u4e8e\u7b54\u6848\u5c31\u6709\u8d21\u732e\u3002\n\n\u6211\u4eec\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u8fd9\u4e2a\u533a\u95f4\uff0c\u6bcf\u6b21\u67e5\u8be2\u5411\u4e0a\u4f20\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u6bcf\u6b21\u5206\u6cbb\u5230\u4e24\u4e2a\u4e0d\u540c\u7684\u533a\u95f4\u91cd\u8f7d\u8fd0\u7b97\u7b26\u5408\u5e76\u4e24\u4e2a\u7ed3\u6784\u4f53\u3002\u90a3\u4e48\u6211\u4eec\u518d\u601d\u8003\u9700\u8981\u7ef4\u62a4\u54ea\u4e9b\u4fe1\u606f\u3002\u9996\u5f53\u5176\u51b2\u7684\uff0c\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u533a\u95f4\u7684\u7b54\u6848\u3002\u5176\u6b21\uff0c\u533a\u95f4\u6709\u591a\u5c11\u5947\u6570\uff0c\u5076\u6570\u533a\u95f4\u6bb5\uff0c\u4e3a\u4e86\u5408\u5e76\uff0c\u540c\u65f6\u4e5f\u9700\u8981\u7ef4\u62a4\u4ee5\u5de6\u7aef\u70b9\u3001\u53f3\u7aef\u70b9\u4e3a\u65ad\u7535\u7684\u5947\u6570\u3001\u5076\u6570\u6bb5\u7684\u6570\u91cf\u3002\u7b2c\u4e00\u4e2a\u7ea6\u675f\u81f3\u6b64\u5df2\u7ecf\u53ef\u4ee5\u5b8c\u5168\u63cf\u8ff0\u4e86\u3002\u81f3\u4e8e\u7b2c\u4e8c\u4e2a\u7ea6\u675f\uff0c\u6211\u4eec\u7ef4\u62a4\u516d\u4e2a $3 \\times 3$\u7684\u6570\u7ec4\u3002\u6bcf\u4e00\u4e2a\u6570\u7ec4\u4ee3\u8868\u533a\u95f4\u6709 $0, 1, 2+$ \u4e2a $0 / 1$ \u7684\u5b50\u6bb5\u6570\u91cf\u3002\u90a3\u4e48\u540c\u4e0a\u4e00\u4e2a\u7ea6\u675f\u4e00\u6837\uff0c\u8fd9\u516d\u4e2a\u6570\u7ec4\u5206\u522b\u662f\u6240\u6709\u3001\u5de6\u7aef\u3001\u53f3\u7aef\u603b\u548c\u4e3a\u5947\u5076\u7684\u6bb5\u6570\u3002\n\n~~\u8bf4\u8d77\u6765\u5f88\u7b80\u5355\uff0c\u8fd9\u4ee3\u7801\u5199\u6b7b\u6211\u4e86\uff08\u8fd8\u662f\u592a\u83dc\u4e86\u54c7QwQ\uff09~~\n\n\u90a3\u4e48\u4e0a\u4ee3\u7801\u54c7\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\n#define MAXN 100005\n#define INF 0x3f3f3f3f\n#define ri register int\n#define chkmin(a, b) (a < b ? a : a = b)\n#define chkmax(a, b) (a > b ? a : a = b)\n#define debug(i) (cout << \"BREAKPOINT No.\" << i << endl)\n#define lchild cur -> lson\n#define rchild cur -> rson\n\ntypedef long long ll;\n\nusing namespace std;\n\nstruct node\n{\n\tll a[3][3];  //0 1\n\tnode operator + (const node &tmp) const\n\t{\n\t\tnode res;\n\t\tmemset(res.a, 0, sizeof(res.a));\n\t\tfor(ri i = 0; i < 3; i++)\n\t\t\tfor(ri j = 0; j < 3; j++)\n\t\t\t\tres.a[i][j] = a[i][j] + tmp.a[i][j];\n\t\treturn res;\n\t}\n};\n\nstruct sgt\n{\n\tint l, r;\n\tll val;           //Value of [l, r]\n\tll lj, rj;        //Number of jishu\n\tll lo, ro;        //Number of oushu\n\tbool fl;           //0 -> [l, r] has even 1s, 1 -> [l, r] has odd 1s\n\tint zero, one;\n\tnode Lj, Rj;\n\tnode Lo, Ro;\n\tsgt *lson, *rson;\n}pool[MAXN << 1];\n\ninline node add(node x, int z, int o)\n{\n\tnode res;\n\tmemset(res.a, 0, sizeof(res.a));\n\tfor(ri i = 0; i < 3; i++)\n\t\tfor(ri j = 0; j < 3; j++)\n\t\t\tres.a[min(i + z, 2)][min(j + o, 2)] += x.a[i][j];\n\treturn res;\n}\n\ninline ll cont(node J, node O)\n{\n\tll res = 0;\n\tfor(ri i = 0; i < 3; i++)\n\t\tfor(ri j = 0; j < 3; j++)\n\t\t\tfor(ri k = 0; k < 3; k++)\n\t\t\t\tfor(ri l = 0; l < 3; l++)\n\t\t\t\t\tif(i + k >= 2 && j + l >= 2)\n\t\t\t\t\t\tres += 1ll * J.a[i][j] * O.a[k][l];\n//\tcout << \"res = \" << res << endl;\n\treturn res;\n}\n\nsgt operator + (const sgt &L, const sgt &R)\n{\n\tsgt tmp;\n\ttmp.fl = L.fl ^ R.fl;\n\ttmp.lj = L.lj + (L.fl ? R.lo : R.lj);\n\ttmp.lo = L.lo + (L.fl ? R.lj : R.lo);\n\ttmp.rj = R.rj + (R.fl ? L.ro : L.rj);\n\ttmp.ro = R.ro + (R.fl ? L.rj : L.ro);\n\ttmp.val = L.val + R.val + L.ro * R.lo + L.rj * R.lj;\n\ttmp.Lj = L.Lj + (L.fl ? add(R.Lo, L.zero, L.one) : add(R.Lj, L.zero, L.one));\n\ttmp.Lo = L.Lo + (L.fl ? add(R.Lj, L.zero, L.one) : add(R.Lo, L.zero, L.one));\n\ttmp.Rj = R.Rj + (R.fl ? add(L.Ro, R.zero, R.one) : add(L.Rj, R.zero, R.one));\n\ttmp.Ro = R.Ro + (R.fl ? add(L.Rj, R.zero, R.one) : add(L.Ro, R.zero, R.one));\n\ttmp.zero = L.zero + R.zero, tmp.one = L.one + R.one;\n\ttmp.val += cont(L.Rj, R.Lo) + cont(R.Lj, L.Ro);\n\treturn tmp;\n}\n\nint N, Q;\nint tot = 0;\nsgt *rt;\nint a[MAXN];\n\nnamespace fast_IO\n{\n\t#define gets getchar\n/*\tinline char gets()\n\t{\n\t\tstatic char buf[100000], *p1, *p2;\n\t\treturn p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 100000, stdin), p1 == p2) ? EOF : *p1++;\n\t}*/\n\n\tinline int read_int()\n\t{\n\t\tregister int ret = 0, f = 1; register char c = gets();\n\t\twhile(c < '0' || c > '9') {if(c == '-') f = -1; c = gets();}\n\t\twhile(c >= '0' && c <= '9') {ret = (ret << 1) + (ret << 3) + int(c - 48); c = gets();}\n\t\treturn ret * f;\n\t}\n\t#undef gets\n}using namespace fast_IO;\n\ninline void push_up(sgt *cur)\n{\n\tcur -> fl = lchild -> fl ^ rchild -> fl;\n\tcur -> lj = lchild -> lj + (lchild -> fl ? rchild -> lo : rchild -> lj);\n\tcur -> lo = lchild -> lo + (lchild -> fl ? rchild -> lj : rchild -> lo);\n\tcur -> rj = rchild -> rj + (rchild -> fl ? lchild -> ro : lchild -> rj);\n\tcur -> ro = rchild -> ro + (rchild -> fl ? lchild -> rj : lchild -> ro);\n\tcur -> val = lchild -> val + rchild -> val + lchild -> ro * rchild -> lo + lchild -> rj * rchild -> lj;\n\tcur -> Lj = lchild -> Lj + (lchild -> fl ? add(rchild -> Lo, lchild -> zero, lchild -> one) : add(rchild -> Lj, lchild -> zero, lchild -> one));\n\tcur -> Lo = lchild -> Lo + (lchild -> fl ? add(rchild -> Lj, lchild -> zero, lchild -> one) : add(rchild -> Lo, lchild -> zero, lchild -> one));\n\tcur -> Rj = rchild -> Rj + (rchild -> fl ? add(lchild -> Ro, rchild -> zero, rchild -> one) : add(lchild -> Rj, rchild -> zero, rchild -> one));\n\tcur -> Ro = rchild -> Ro + (rchild -> fl ? add(lchild -> Rj, rchild -> zero, rchild -> one) : add(lchild -> Ro, rchild -> zero, rchild -> one));\n\tcur -> zero = lchild -> zero + rchild -> zero, cur -> one = lchild -> one + rchild -> one;\n\tcur -> val += cont(lchild -> Rj, rchild -> Lo) + cont(rchild -> Lj, lchild -> Ro);\n}\n\nvoid build(sgt *cur, int left, int right)\n{\n\tcur -> l = left, cur -> r = right;\n\tif(left == right)\n\t{\n\t\tcur -> one = cur -> fl = cur -> lj = cur -> rj = a[left];\n\t\tcur -> zero = cur -> val = cur -> lo = cur -> ro = a[left] ^ 1;\n\t\tif(a[left])\n\t\t\tcur -> Lj.a[0][1] = cur -> Rj.a[0][1] = 1;\n\t\telse\n\t\t\tcur -> Lo.a[1][0] = cur -> Ro.a[1][0] = 1;\n\t\treturn;\n\t}\n\tint mid = (left + right) >> 1;\n\tlchild = &pool[tot++], rchild = &pool[tot++];\n\tbuild(lchild, left, mid), build(rchild, mid + 1, right);\n\tpush_up(cur);\n}\n\nsgt query(sgt *cur, int left, int right)\n{\n\tsgt res;\n\tif(cur -> l == left && cur -> r == right)\n\t{\n\t\tres.fl = cur -> fl, res.val = cur -> val;\n\t\tres.lj = cur -> lj, res.lo = cur -> lo;\n\t\tres.rj = cur -> rj, res.ro = cur -> ro;\n\t\tres.Lj = cur -> Lj, res.Lo = cur -> Lo;\n\t\tres.Rj = cur -> Rj, res.Ro = cur -> Ro;\n\t\tres.zero = cur -> zero, res.one = cur -> one;\n\t\treturn res;\n\t}\n\tint mid = (cur -> l + cur -> r) >> 1;\n\tif(right <= mid)\n\t\treturn query(lchild, left, right);\n\tif(left >= mid + 1)\n\t\treturn query(rchild, left, right);\n\treturn query(lchild, left, mid) + query(rchild, mid + 1, right);\n}\n\nvoid modify(sgt *cur, int pos)\n{\n\tif(cur -> l == pos && cur -> r == pos)\n\t{\n\t\tmemset(cur -> Lj.a, 0, sizeof(cur -> Lj.a));\n\t\tmemset(cur -> Lo.a, 0, sizeof(cur -> Lo.a));\n\t\tmemset(cur -> Rj.a, 0, sizeof(cur -> Rj.a));\n\t\tmemset(cur -> Ro.a, 0, sizeof(cur -> Ro.a));\n\t\tif(cur -> val)\n\t\t\tcur -> Lj.a[0][1] = cur -> Rj.a[0][1] = 1;\n\t\telse\n\t\t\tcur -> Lo.a[1][0] = cur -> Ro.a[1][0] = 1;\n\t\tcur -> val ^= 1, cur -> fl ^= 1;\n\t\tcur -> lj ^= 1, cur -> lo ^= 1;\n\t\tcur -> rj ^= 1, cur -> ro ^= 1;\n\t\tcur -> zero ^= 1, cur -> one ^= 1;\n\t\treturn;\n\t}\n\tint mid = (cur -> l + cur -> r) >> 1;\n\tif(pos <= mid)\n\t\tmodify(lchild, pos);\n\telse\n\t\tmodify(rchild, pos);\n\tpush_up(cur);\n}\n\ninline void init()\n{\n\tN = read_int();\n\tfor(ri i = 1; i <= N; i++)\n\t\ta[i] = read_int();\n\trt = &pool[tot++];\n\tbuild(rt, 1, N);\n}\n\nvoid print(sgt *cur)\n{\n\tif(cur == NULL)\n\t\treturn;\n\tcout << \"l = \" << cur -> l << \" r = \" << cur -> r;\n\tcout << \" val = \" << cur -> val << \" fl = \" << cur -> fl;\n\tcout << \" lj = \" << cur -> lj << \" lo = \" << cur -> lo;\n\tcout << \" rj = \" << cur -> rj << \" ro = \" << cur -> ro;\n\tcout << \" 0s \" << cur -> zero << \" 1s \" << cur -> one;\n\tcout << endl;\n\tprint(lchild); print(rchild);\n}\n\ninline void ans()\n{\n\tQ = read_int();\n\tri opt, l, r, pos;\n\twhile(Q--)\n\t{\n//\t\tprint(rt);\n\t\topt = read_int();\n\t\tif(opt == 1)\n\t\t{\n\t\t\tpos = read_int();\n\t\t\tmodify(rt, pos);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tl = read_int(), r = read_int();\n\t\t\tprintf(\"%lld\\n\", query(rt, l, r).val);\n\t\t}\n\t}\n}\n\nint main()\n{\n\tinit();\n\tans();\n\treturn 0;\n}\n```",
        "postTime": 1550237288,
        "uid": 55374,
        "name": "shuidi",
        "ccfLevel": 0,
        "title": "BJOI 2018 \u4e8c\u8fdb\u5236"
    },
    {
        "content": "\u672c\u9898\u89e3\u6709\u81ea\u4fe1\u8bf4\u6b64\u505a\u6cd5\u7a7a\u95f4\u5e38\u6570\u975e\u5e38\u5c0f\u3002\n\n### Analysis\n\n\u6211\u4eec\u5148\u7814\u7a76\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u662f\u5426\u80fd\u91cd\u65b0\u6392\u5217\u540e\u662f\u4e2a $3$ \u7684\u500d\u6570\u3002\n\n\u901a\u8fc7\u7b80\u5355\u7684\u6570\u4f4d\u62c6\u5206\uff0c\u5f97\u5230\u8be5\u4e8c\u8fdb\u5236\u6570\u7684\u6761\u4ef6\uff0c\u4f46\u662f\u975e\u5e38\u9ebb\u70e6\uff08\u4fbf\u4e0d\u5c55\u793a\uff09\uff0c\u6240\u4ee5\u5c31\u6709\u4e86**\u6b63\u96be\u5219\u53cd**\u7684\u601d\u60f3\u3002\n\n\u8003\u8651\u54ea\u4e9b\u4e8c\u8fdb\u5236\u6570\u4e0d\u80fd\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\uff0c\u53d1\u73b0\u6ee1\u8db3\u4ee5\u4e0b\u4e09\u79cd\u4e4b\u4e00\u5373\u53ef\uff08$cnt_{0/1}$ \u8868\u793a\u4e8c\u8fdb\u5236\u4e2d $0/1$ \u7684\u4e2a\u6570\uff09\uff1a\n\n1. $cnt_0\\geqslant 2$ \u4e14 $cnt_1=1$\n\n2. $cnt_0=0$ \u4e14 $cnt_1\\equiv 1\\pmod{2}$\n\n3. $cnt_0=1$ \u4e14 $cnt_1\\equiv 1\\pmod{2}$\n\n\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a**\u7ebf\u6bb5\u6811**\uff08\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u8be2\u95ee\uff09\u9898\uff01\n\n\u7531\u4e8e\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\u4e8c\u8fdb\u5236\u6570 $\\min(cnt_0,cnt_1)\\leqslant 1$\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8f7b\u677e\u5730\u7ebf\u6bb5\u6811\u8282\u70b9\u5408\u5e76\u4e86\u3002\n\n\u6bcf\u4e00\u4e2a\u8282\u70b9\u5b58\uff1a\n\n* \u533a\u95f4 \u6700/\u6b21 \u5de6/\u53f3 \u7684 $0/1$ \u7684\u4f4d\u7f6e\u3002\n\n* \u533a\u95f4\u5185\u7684\u7b54\u6848\uff08\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\u4e8c\u8fdb\u5236\u6570\uff09\u3002\n\n\u5176\u5b9e\u672c\u9898\u6700\u6838\u5fc3\u7684\u90e8\u5206\u5728\u4e8e `merge`\uff0c\u8be6\u60c5\u8bf7\u89c1\u4ee3\u7801\uff0c\u6709\u8be6\u7ec6\u6ce8\u91ca\u3002\n\n### Detail\n\n\u6700\u540e\u7528\u5168\u96c6\u51cf\u53bb\u4e0d\u6ee1\u8db3\u7684\u5373\u53ef\u3002\n\n### Code\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(km\\log n)\\quad k\\approx 40$\u3002\n\n\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $O(kn\\log n)\\quad k\\approx 4\\times 10$(\u4ee5 `int` \u4e3a\u5355\u4f4d\uff0c\u5e38\u6570 $4$ \u4e3a\u7ebf\u6bb5\u6811\u5fc5\u987b)\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define IOS ios::sync_with_stdio(0);cin.tie(0);cout.tie(0)\n#define For(i,j,k) for(register int i=j;i<=k;i++)\n#define Rof(i,j,k) for(register int i=j;i>=k;i--)\n\t#define fir first\n\t#define sec second\n\t#define mkp make_pair\n\t#define pii pair<int,int>\n#define N 100100\n\t#define mid ((l+r)>>1)\n\t#define ls (rt<<1)\n\t#define rs (rt<<1|1)\nstruct node{\n\tpii l[2];\n\tpii r[2];\n\tll ans;\n}t[4*N];\nint n,q;\nnode upd(node x,node y,int l,int m,int r){//merge two nodes x:[l,m] and y:[m+1,r] \n\tnode res;\n\tres.ans=x.ans+y.ans;\n\tres.l[0]=x.l[0],res.l[1]=x.l[1];\n\tres.r[0]=y.r[0],res.r[1]=y.r[1];\n\tFor(i,0,1){\n\t\tif(res.l[i].sec==m+1){\n\t\t\tif(res.l[i].fir==m+1) res.l[i]=y.l[i];\n\t\t\telse res.l[i].sec=y.l[i].fir;\n\t\t}\n\t\tif(res.r[i].sec==m){\n\t\t\tif(res.r[i].fir==m) res.r[i]=x.r[i];\n\t\t\telse res.r[i].sec=x.r[i].fir;\n\t\t}\n\t}\n\tll tmp;//\u589e\u52a0\u503c \n\tll L=m-x.r[0].fir;\n\tll R=y.l[0].fir-m-1;\n\tll LL=max(0,x.r[0].fir-x.r[0].sec-1);\n\tll RR=max(0,y.l[0].sec-y.l[0].fir-1);\n\ttmp=(L>>1)*((R+1)>>1)+((L+1)>>1)*(R>>1);//\u7b2c 2 \u7c7b\uff0c\u5206 \u5947|\u5076 \u548c \u5076|\u5947 \u8ba8\u8bba \n\tres.ans+=tmp;\n\tFor(i,0,1){//\u7b2c 3 \u7c7b\uff0c\u5206 \u5947|\u50760\u5076 \u548c  \u5076|\u50760\u5947 \u548c \u5076|\u59470\u5076 \u548c  \u5947|\u59470\u5947 \u8ba8\u8bba \n\t\tif((i==0 && y.l[0].fir!=r+1) || (i==1 && x.r[0].fir!=l-1)){\n\t\t\tif(R&1) tmp=(L>>1)*((RR+2)>>1)+((L+1)>>1)*((RR+1)>>1);\n\t\t\telse\ttmp=((L+1)>>1)*((RR+2)>>1)+(L>>1)*((RR+1)>>1);\n\t\t}else tmp=0;\n\t\tres.ans+=tmp;\n\t\tswap(L,R);//\u5de6\u53f3 swap\uff0c\u5404\u8ba1\u7b97\u4e00\u6b21 \n\t\tswap(LL,RR);\n\t}\n\tL=m-x.r[1].fir;\n\tR=y.l[1].fir-m-1;\n\tLL=max(0,x.r[1].fir-x.r[1].sec-1);\n\tRR=max(0,y.l[1].sec-y.l[1].fir-1);\n\tFor(i,0,1){//\u7b2c 1 \u7c7b\n\t\tif((i==0 && x.r[1].fir!=l-1) || (i==1 && y.l[1].fir!=r+1)){\n\t\t\ttmp=(LL+1)*R;\n\t\t\tif(L==0 && R>0) tmp--;//\u6392\u9664\u4e0e\u7b2c 3 \u7c7b\u91cd\u53e0\u7684\u60c5\u51b5 \n\t\t}else tmp=0;\n\t\tres.ans+=tmp;\n\t\tswap(L,R);//\u5de6\u53f3 swap\uff0c\u5404\u8ba1\u7b97\u4e00\u6b21 \n\t\tswap(LL,RR);\n\t}\n\treturn res;\n} \nvoid build(int rt,int l,int r){\n\tif(l==r){\n\t\tint x;\n\t\tcin>>x;//read and assign\n\t\tt[rt]={{mkp(l+1,l+1),mkp(l+1,l+1)},{mkp(l-1,l-1),mkp(l-1,l-1)},x};\n\t\tif(x==0)\tt[rt].l[0].fir=t[rt].r[0].fir=l;\n\t\telse\t\tt[rt].l[1].fir=t[rt].r[1].fir=l;\n\t\treturn ;\n\t}\n\tbuild(ls,l,mid);\n\tbuild(rs,mid+1,r);\n\tt[rt]=upd(t[ls],t[rs],l,mid,r);\n}\nvoid rev(int rt,int l,int r,int id){//reverse a leaf\n\tif(l==r){\n\t\tt[rt].ans^=1;\n\t\tswap(t[rt].l[0],t[rt].l[1]);\n\t\tswap(t[rt].r[0],t[rt].r[1]);\n\t\treturn ;\n\t}\n\tif(id<=mid) rev(ls,l,mid,id);\n\telse rev(rs,mid+1,r,id);\n\tt[rt]=upd(t[ls],t[rs],l,mid,r);\n}\nnode que(int rt,int l,int r,int x,int y){//query\n\tif(l==x && r==y)\n\t\treturn t[rt];\n\tif(y<=mid)\n\t\treturn que(ls,l,mid,x,y);\n\telse if(x>mid)\n\t\treturn que(rs,mid+1,r,x,y);\n\telse\n\t\treturn upd(que(ls,l,mid,x,mid),que(rs,mid+1,r,mid+1,y),x,mid,y);\n}\nll calc(int l,int r){//all \n\treturn (ll)(r-l+1)*(r-l+2)/2;\n}\nsigned main(){\n\tIOS;\n\tcin>>n;\n\tbuild(1,1,n);\n\tcin>>q;\n\tint opt,x,y;\n\twhile(q--){\n\t\tcin>>opt;\n\t\tif(opt==1){\n\t\t\tcin>>x;\n\t\t\trev(1,1,n,x);\n\t\t}else{\n\t\t\tcin>>x>>y;\n\t\t\tcout<<calc(x,y)-que(1,1,n,x,y).ans<<endl;\n\t\t}\n\t}\n    return 0;\n}\n```",
        "postTime": 1639060842,
        "uid": 101868,
        "name": "I_am_Accepted",
        "ccfLevel": 0,
        "title": "P4428 [BJOI2018]\u4e8c\u8fdb\u5236 \u9898\u89e3"
    }
]