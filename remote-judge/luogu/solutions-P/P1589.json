[
    {
        "content": "**\u8d2a\u5fc3**\u5927\u6cd5\u597d\u554a\u597d\uff0c\u4e0d\u5361\u5e38\uff0c\u4e0d\u8d85\u65f6\uff0c\u7b80\u5355\u4ee3\u7801\u5c31AC\u3002\n\n------------\n\u8a00\u5f52\u6b63\u4f20\uff0c\u9996\u5148\u5c06\u6bcf\u6761\u7ebf\u6bb5\u6309\u7167\u8d77\u59cb\u7aef\u70b9\u8fdb\u884c\u4ece\u5c0f\u5230\u5927\u7684\u6392\u5e8f\u3002\u7136\u540e\u5728\u4e00\u4e2afor\u5faa\u73af\u641c\u4e00\u904d\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6O\uff08nlogn\uff09\n\n\u5e9f\u8bdd\u5c11\u8bf4\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct note{\n\tint l,r;\n}a[10005];//\u5b9a\u4e49\u7ed3\u6784\u4f53\nint n,m,ans;\nbool cmp(const note&aa,const note&bb){\n\treturn aa.l<bb.l;\n}//\u6309\u7167\u59cb\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)scanf(\"%d%d\",&a[i].l,&a[i].r);\n\tsort(a+1,a+n+1,cmp);\n\tint x=0;//x\u8868\u793a\u5f53\u524d\u7684\u6728\u677f\u94fa\u5230\u4e86\u54ea\u91cc\n\tfor(int i=1;i<=n;i++){\n\t\tx=max(x,a[i].l);//\u5982\u679cx\u5c0f\u4e8e\u5f53\u524d\u6ce5\u6cde\u8def\u7684\u59cb\u7aef\u70b9\n\t\twhile(x<a[i].r){\n\t\t\tx+=m;//\u52a0\u4e0a\u6728\u677f\u957f\u5ea6\n\t\t\tans++;//\u7b54\u6848\u603b\u6570\u52a01\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\n\u7ed3\u675f\u8bed\uff1a**OI\u8def\u4e0a\u56f0\u96be\u91cd\u91cd\uff0c\u552f\u6709\u9759\u4e0b\u6765\uff0c\u624d\u80fd\u6210\u4e3a\u9876\u5c16\u9ad8\u624b**",
        "postTime": 1560153995,
        "uid": 88137,
        "name": "greenheadstrange",
        "ccfLevel": 7,
        "title": "\u6c34P1589 \u3010\u6ce5\u6cde\u8def\u3011"
    },
    {
        "content": "```cpp\n//\u6b64\u4ee3\u7801\u7b80\u5355\u6613\u61c2\uff0c\u9002\u5408\u65b0\u624b\uff01\n#include<iostream>\n#include<algorithm>\n#include<math.h>//max\u7684\u5934\u4ee3\u7801\uff1b\nusing namespace std;\nint n,l,s[10005],e[10005],i,h,d;\nint main()\n{\n    cin>>n>>l;\n    for(i=1;i<=n;i++)\n        cin>>s[i]>>e[i];\n    sort(s+1,s+1+n); sort(e+1,e+1+n);//\u8fd9\u91cc\u628a\u8d77\u70b9\u548c\u7ec8\u70b9\u6392\u5e8f\uff08\u56e0\u4e3a\u6bcf\u6b21\u8f93\u5165\u8d77\u70b9\u5c0f\u4e8e\u7ec8\u70b9\uff0c\u6240\u4ee5\u6392\u5b8c\u5e8f\u540e\u4e0d\u4f1a\u51fa\u73b0\u8d77\u70b9\u6bd4\u7ec8\u70b9\u5c0f\u7684\u60c5\u51b5\uff09\uff1b\n    d=s[1];//d\u5b58\u653e\u8d77\u70b9\uff1b\n    for(i=1;i<=n;i++)\n    {\n        while(d<e[i])//\u5f53\u8d77\u70b9\u5927\u4e8e\u7ec8\u70b9\uff0c\u4e0d\u518d\u6267\u884c\uff08\u4e5f\u53ef\u4ee5\u907f\u514d\u4e86\u8d77\u70b9\u6bd4\u7ec8\u70b9\u5927\u7684\u5c34\u5c2c\uff09\uff1b\n        {\n            d+=l;\n            h++;//\u7edf\u8ba1\u6728\u677f\u6570\n        }\n        d=max(d,s[i+1]);//\u6bd4\u8f83\u5f53\u524d\u7ec8\u70b9\u548c\u4e0b\u4e00\u4e2a\u8d77\u70b9\uff0c\u9009\u5927\u7684\uff0c\u907f\u514d\u91cd\u590d\uff1b\n    }\n    cout<<h;//\u8f93\u51fa\u6728\u677f\u6570\uff1b\n    return 0;\n}\n```",
        "postTime": 1511442641,
        "uid": 69288,
        "name": "zuytong",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1589 \u3010\u6ce5\u6cde\u8def\u3011"
    },
    {
        "content": "\u672c\u9898\u601d\u8def\uff1a\u7ed3\u6784\u4f53\u5feb\u6392+\u8d2a\u5fc3\uff0c\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u4e24\u4e2a\u6210\u5458a\uff0cb\uff0c\u5206\u522b\u5b58\u5165\u6ce5\u6cde\u8def\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\uff08\u5176\u5b9e\u662f\u5bf9\u5e94\u7684\uff0c\u4ee5\u8d77\u70b9\u6216\u7ec8\u70b9\u4e3a\u57fa\u51c6\u5feb\u6392\u90fd\u884c\uff09\u6ca1\u591a\u5c11\u8981\u6ce8\u610f\u7684\uff0c\u5c31\u662f\u8981\u4ed4\u7ec6\u3002\n\n\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0a\u4ee3\u7801\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>//sort\u5fc5\u5907\u4e07\u80fd\u5934\u6587\u4ef6\nusing namespace std;\nint ans;//\u6700\u7ec8\u8f93\u51fa\u7ed3\u679c\nstruct AC{//\u7ed3\u6784\u4f53\u5b9a\u4e49\n    int a,b;\n}f[10005];//\u7ed3\u6784\u4f53\u6570\u7ec4\nint maxn(int a,int b){//\u624b\u5199max\u51fd\u6570\uff0c\u8fd9\u91cc\u63d2\u4e00\u53e5\uff0c\u5c3d\u91cf\u7b80\u5355\u7684\u51fd\u6570\u81ea\u5df1\u5199\uff0c\u4e0d\u8981\u4e3a\u4e86\u4e00\u4e2a\u5c0f\u51fd\u6570\u53c8\u52a0\u4e00\u4e2a\u5934\u6587\u4ef6\uff0c\u5728\u7ade\u8d5b\u4e2d\uff0c\u5982\u679c\u6570\u636e\u8303\u56f4\u5f88\u5927\uff0c\u624b\u5199\u51fd\u6570\u4e0d\u5bb9\u6613\u7206\u7a7a\u95f4\uff08\u6bd4\u5982\u7edd\u5bf9\u503c\uff0c\u5224\u65ad\u5927\u5c0fmax\uff0cmin\uff09\n    return a>b ?a:b;\n}\nbool cmp(const AC&x,const AC&y){//sort\u7684cmp\n    return x.a<y.a;\n}\nint main(){//\u8fc7\u7a0b\u534e\u4e3d\u5f00\u59cb\n    int n,l;\n    scanf(\"%d%d\",&n,&l);//\u8bfb\u5165\n    for(int i=0;i<n;i++)\n        scanf(\"%d%d\",&f[i].a,&f[i].b);//\u8bfb\u5165\n    sort(f,f+n,cmp);//\u5feb\u6392\n    int j=f[0].a;\u5b9a\u4e49\u4e00\u4e2a\u5c0f\u6307\u9488\uff08\u8bf4\u767d\u4e86\u5c31\u662f\u53d8\u91cf\uff09\n    for(int i=0;i<n;i++){\n        while(j<f[i].b){//\u6307\u9488\u4e0d\u8d85\u5c31\u80fd\u505a\n            j+=l;\u6307\u9488\u52a0\u4e0a\u6728\u6761    \n                       ans++;//\u6728\u6761++\n        }\n        j=maxn(j,f[i+1].a);//\u6700\u5927\u503c\u4e3a\u4e0b\u4e00\u8f6e\u7684j\n    }\n    printf(\"%d\\n\",ans);//\u5b8c\u7f8e\u8f93\u51fa\n    return 0;//\u8fc7\u7a0b\u534e\u4e3d\u7ed3\u675f\n}\n```",
        "postTime": 1511876962,
        "uid": 56561,
        "name": "\u82b1\u5343\u6811",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1589 \u3010\u6ce5\u6cde\u8def\u3011"
    },
    {
        "content": "## \u6211\u4e00\u76f4\u76f8\u4fe1\u6e23\u6e23\u5199\u7684\u9898\u89e3\uff0c\u5bf9\u8c01\u90fd\u53cb\u597d\u3002\n\n## 0.\u524d\u8a00\n\u5178\u578b\u7684\u8d2a\u5fc3\u7b97\u6cd5\u89e3\u9898\uff0c\uff08~~\u5f53\u7136\u6211\u8fd9\u4e9b\u5929\u662f\u4ece\u7edc\u8c37\u4e2d\u4e13\u6311\u8d2a\u5fc3\u7ec3\u4e60~~\uff09\uff0c\u53ef\u80fd\u76f4\u63a5\u7ed9\u6211\u8fd9\u9898\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053\u4f1a\u7528\u4ec0\u4e48\u7b97\u6cd5\u3002\n\n## 1.\u601d\u8def\n \n\n- step 1\uff1a\u5c06\u6ce5\u6cde\u5c0f\u8def\u9488\u5bf9\u8d77\u70b9\u6392\u5e8f\u3002\u4f7f\u7528\u4e00\u4e2a **\u7ed3\u6784\u4f53+\u81ea\u5e26`sort`** \u5c31\u53ef\u4ee5\u5b9e\u73b0\u3002\n- step 2\uff1a\u5f97\u5230\u8d77\u70b9\u6709\u5e8f\u7684\u5c0f\u8def\u4e4b\u5916\uff0c\u5c31\u9700\u8981\u8003\u8651\u600e\u4e48\u94fa\u8def\u4e86\u3002\u8be5\u600e\u4e48\u94fa\u5462\uff1f\u4e3b\u8981\u5c31\u662f\u4e24\u79cd\u60c5\u51b5\uff1a\n  -  \u60c5\u51b51:\u6bcf\u6b21\u6070\u597d\u53ea\u94fa\u4e86\u81ea\u5df1\u7684\u8def\u3002\u800c\u4e14\u4e5f\u521a\u521a\u597d\u94fa\u5b8c\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u5bfc\u81f4\u4e0e\u540e\u9762\u7684\u94fa\u8def\u91cd\u590d\u3002\u6bd4\u5982\u201c**1 3**\u201d\u8d77\u70b9\u662f1\uff0c\u7ec8\u70b9\u662f3\uff0c\u8fd9\u6837\u7528\u4e00\u4e2a\u957f\u5ea6\u4e3a3\u7684\u6728\u677f\uff0c\u4e00\u6b21\u5c31\u53ef\u4ee5\u94fa\u597d\u3002\u540c\u7406\uff0c\u201c1 6\u201d\u5c31\u53ea\u9700\u8981\u5b8c\u6574\u76842\u5757\u6728\u677f\u3002\n  - \u60c5\u51b52\uff1a\u4e16\u754c\u4e0d\u53ef\u80fd\u5982\u6b64\u5b8c\u7f8e\uff0c\u90a3\u4e48\u9047\u5230\u4e0d\u80fd\u6574\u94fa\u7684\u60c5\u51b5\u600e\u4e48\u529e\uff1f\u4f8b\u5982\uff1a\u201c1 4\u201d\u7528\u957f\u5ea6\u4e3a3\u7684\u6a21\u677f\u5c31\u9700\u8981\u4e24\u5757\u3002\uff081-3\u7528\u4e00\u5757\uff0c3-4\u518d\u7528\u4e00\u5757\u3002\u4f46\u662f\u5f88\u663e\u7136\uff0c3-4\u8fd9\u5757\u6728\u677f\u662f\u591a\u4f59\u4e862\u7c73\u3002\uff09\u6211\u4eec\u5c31\u9700\u8981\u8003\u8651\u5982\u4f55\u6700\u4f18\u5316\u8fd9\u79cd\u94fa\u6cd5\u591a\u4f59\u7684\u6728\u677f\u3002\u5f88\u7b80\u5355\uff0c\u8d2a\u5c31\u662f\u4e86\uff01**\u5982\u679c\u5f53\u524d\u94fa\u7684\u7ec8\u70b9\u7684\u6bd4\u4e0b\u6b21\u8981\u94fa\u7684\u8d77\u70b9\u8981\u8fdc\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u7528\u8fd9\u6b21\u7684\u7ec8\u70b9\u63a5\u7740\u94fa\uff0c\u800c\u4e0d\u662f\u4ece\u4e0b\u6b21\u7684\u8d77\u70b9\u5f00\u59cb\u94fa**\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u8fd9\u6837\u90fd\u80fd\u4fdd\u8bc1\u94fa\u8def\u6728\u677f\u6700\u5c11\u5316\uff08\u56e0\u4e3a\u66f4\u77ed\u7684\u8def\u9700\u8981\u66f4\u5c11\u7684\u6728\u677f\u3002\uff09\u4f8b\u5982\uff0c\u6709\u4e24\u6bb5\u8def\u90fd\u9700\u8981\u94fa\uff0c\u5206\u522b\u662f\u201c3-7\uff0c8-12\u201d\uff08\u4f7f\u7528\u957f\u5ea6\u4e3a3\u7684\u6728\u677f\uff09\uff0c\u53ef\u4ee5\u770b\u5230\uff083-6-9-12\uff09\u53ea\u9700\u89813\u5757\u6728\u677f\uff0c\u5982\u679c\u662f\u5206\u5f00\u94fa\uff083-6-7\uff0c8-11-12\uff09\uff0c\u5219\u9700\u89814\u5757\u6728\u677f\u3002\n\n## 3.\u5b9e\u73b0\n```c\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int maxN = 10005;\ntypedef struct{\n\tint s,e;\n}Road;\nRoad road[maxN];\n\nbool cmp(Road r1,Road r2){\n\treturn r1.s < r2.s;\n}\n\nint main(){\n\tint n,l;\n\tcin >> n>> l;\n\tfor(int i = 0;i< n;i++){\n\t\tcin >> road[i].s >> road[i].e;\t\t\n\t}\n\tint res = 0;\n\tsort(road,road+n,cmp);\n\t\n\t//\u4eceroad[0]\u5f00\u59cb\u94fa \n\tint prioE = 0; //\u4e0a\u4e00\u6b21\u7684\u7ed3\u675f \n\tfor(int i = 0;i<n;i++){\n\t\tint m = 0;//\u94fa\u5f53\u524d\u8def \u9700\u8981\u7684\u6a21\u677f\u6570 \n\t\tint len ;\n\t\tif(road[i].e <= prioE){//\u4e0a\u4e00\u6b21\u5c31\u94fa\u5b8c\u4e86 \n\t\t\tcontinue;\n\t\t}\n\t\tif(road[i].s < prioE) {//\u5982\u679c\u672c\u6b21\u5f00\u59cb\u5c0f\u4e8e\u4e0a\u6b21\u7ed3\u675f\uff0c\u5219\u4e00\u8d77\u94fa\uff0c\n\t\t\tlen = road[i].e - prioE;\n\t\t\tm +=(len/l);\n\t\t\tif(len%l!=0)//\u6709\u4f59\u6570\u52a0\u4e00 \n\t\t\t\tm++; \n\t\t\tprioE += m*l;//\u5b9e\u9645\u94fa\u5230\u4e86\u54ea\u91cc \n\t\t}\n\t\telse{\n\t\t\tlen = road[i].e - road[i].s;\n\t\t\tm +=(len/l);\n\t\t\tif(len%l!=0)//\u6709\u4f59\u6570\u52a0\u4e00 \n\t\t\t\tm++; \n\t\t\tprioE = road[i].s + m*l;//\u5b9e\u9645\u94fa\u5230\u4e86\u54ea\u91cc \n\t\t}\t\t\t\t\t\n\t\tres+=m; \t\t\n\t}\n\tcout << res<<\"\\n\";\n}\n```\n\n## 4.\u6d4b\u8bd5\u7528\u4f8b\n```java\n3 3\n3 7\n8 12\n13 19\n5\n\n1 1\n1 1000000\n999999\n\n3 1\n1 6\n13 17\n8 12\n13\n\n3 3\n1 6\n13 17\n8 12\n5\n\n3 10000\n1 6\n13 17\n8 12\n1\n```\n",
        "postTime": 1582600793,
        "uid": 85066,
        "name": "lawsonabs",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1589 \u3010\u6ce5\u6cde\u8def\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u5427\uff0c\u53ef\u80fd\u597d\u591a\u4eba\u90fd\u6ca1\u770b\u61c2\u6837\u4f8b\uff0c\u6211\u7ed9\u5927\u5bb6\u89e3\u91ca\u4e00\u4e0b\n\n\u5bf9\u4e8e\u6837\u4f8b\u7b2c\u4e8c\u884c1 6\uff1a\u6240\u63cf\u8ff0\u7684\u6ce5\u6cde\u8def\u6bb5\u662f1\u52302,2\u52303,3\u52304,4\u52305,5\u52306\n\n\u8fd9\u6837\u4e00\u4e2a\u957f\u5ea6\u4e3a5\u7684\u8def\u6bb5\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u89c1\u5230\u7684\u770b\u4f5c\u53d6\u8d77\u70b9\u4e0d\u53d6\u7ec8\u70b9\n\n\u6216\u8005\u662f\u53d6\u7ec8\u70b9\u4e0d\u53d6\u8d77\u70b9\u3002\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6309\u8d77\u70b9\u6392\u4e00\u8fb9\u5e8f\uff0c\u7136\u540e\u4ece\u5934\u5230\u5c3e\u7b97\u4e00\u904d\u5566\n\n\u5177\u4f53\u89e3\u91ca\u5728\u4ee3\u7801\u4e2d2333\n\n\n\n------------\n\n2022/7/31 \u52a0\u70b9\u5185\u5bb9\uff08\u5176\u4ed6\u5185\u5bb9\u662f 2017-04-30 \u7684\uff09\n\n\u6709\u4eba\u8bc4\u8bba\u95ee\u4e86\u6211\uff1a\n\n\n5 3\n0 10\n2 9\n3 8\n4 7\n5 6\n-> 4\n\n\u4e3a\u5565\u662f 1 1 1 1 1 1 1 1 1 1 0\n\n\u6211\u53d1\u73b0\u662f\u6211\u4ee5\u524d\u7684\u5185\u5bb9\u5199\u7684\u592a\u62c9\u4e86\uff0c\u81ea\u5df1\u90fd\u770b\u4e0d\u61c2\u4e86\uff0c\u6240\u4ee5\u8865\u5145\u4e00\u4e0b\u3002\n\n\u9996\u5148\u8fd9\u4e2a\u9898\u5982\u679c\u6ce5\u6cde\u8def\u4e24\u7aef\u662f1\u548c3\uff0c\u5219\u8bf4\u660e\u662f\u4e00\u4e2a1\u52302\uff0c2\u52303\u7684\u957f\u5ea6\u4e3a2\u7684\u6ce5\u6cde\u8def\uff0c\u6545\u800c\u4e00\u4e2a\u957f\u5ea6\u4e3a2\u7684\u6728\u677f\u53ef\u4ee5\u8986\u76d61\u52303\u3002\u8fd9\u4e2a\u660e\u767d\u4e4b\u540e\u5c31\u8981\u7b80\u5355\u5f88\u591a\u4e86\u3002\n\n\u5728\u8fd9\u91cc\u6211\u8fd9\u4e2a1\u8868\u793a\u7684\u662f\u533a\u95f4\uff0c\u53ef\u4ee5\u89c1\u4e0b\u56fe\uff1a\n\n![\u793a\u610f\u56fe](https://cdn.luogu.com.cn/upload/image_hosting/clezwyk5.png)\n\n\u5bf9\u5e94\u8fd9\u4e2a\u6570\u636e\n\n3 3\n1 3\n4 6\n7 9\n-> 3\n\n0 1 1 0 1 1 0 1 1 0 0\n\n\u8fd9\u6837\u5e94\u8be5\u5c31\u770b\u660e\u767d\u4e86\uff0c1\u8868\u793a\u8fd9\u4e2a\u533a\u95f4\u662f\u6ce5\u6cde\u8def\uff0c\u6bd4\u59821-2\u662f\u6ce5\u6cde\u8def\uff0c\u800c\u4e0d\u662f1\u8fd9\u4e2a\u70b9\u662f\u6ce5\u6cde\u8def\u3002\n\n\u90a3\u4e48\n5 3\n0 10\n2 9\n3 8\n4 7\n5 6\n-> 4\n\n1 1 1 1 1 1 1 1 1 1 0\n\n\u81ea\u7136\u5bf9\u5e94\u4e0b\u56fe\uff1a\n\n![\u793a\u610f\u56fe](https://cdn.luogu.com.cn/upload/image_hosting/b4rxyvni.png)\n\n\u601d\u8def\u4e5f\u518d\u89e3\u91ca\u4e00\u4e0b\u5427\n\n1. \u6309\u8d77\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\n2. \u9010\u4e2a\u679a\u4e3e\u6ce5\u6cde\u8def\n\t\n\ta. \u5982\u679c\u8fd9\u4e2a\u6ce5\u6cde\u8def\u5728\u94fa\u4e0a\u4e2a\u6ce5\u6cde\u8def\u7684\u65f6\u5019\u5c31\u7ed9\u94fa\u4e86\uff0c\u5c31\u6ca1\u5fc5\u8981\u7ba1\u4e86\n    \n    \ti.\u7528\u4e2a\u53d8\u91cf\u8bb0\u5f55\u4e00\u4e0b\u4e0a\u4e2a\u6ce5\u6cde\u8def\u94fa\u5b8c\u540e\u591a\u51fa\u6765\u4e86\u591a\u5c11\u5c31\u53ef\u4ee5\n        \n   b. \u7b97\u4e00\u4e0b\u94fa\u8fd9\u4e2a\u8def\u8981\u82b1\u591a\u5c11\n\n3. \u7ed3\u675f\n\n------------\n\n\n------------\n\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nint n,m,tp,ans=0;\nstruct edge //\u7ed3\u6784\u4f53\u8bb0\u5f55\u6bcf\u4e00\u6bb5\u7684\u8d77\u70b9\u3001\u7ec8\u70b9\n{\n    int l;\n    int r;\n};\nstruct edge E[100011];\nint cmp(edge a,edge b)//\u6392\u5e8f\uff08\u6309\u8d77\u70b9\u4ece\u5c0f\u5230\u5927\uff09 \n{\n    return a.l<b.l;\n}\nvoid work()\n{\n    E[0].r=-0x3f3f3f3f;//\u8fd9\u4e2a\u8d4b\u503c\u8981\u6bd4\u6700\u5c0f\u7684\u8d77\u70b9\u5c0f\u5c31\u884c \n    int la=0;//\u8bb0\u5f55\u4e0a\u4e00\u6b21\u6240\u94fa\u7684\u662f\u54ea\u4e00\u6bb5 \n    for(int i=1;i<=n;i++)\n    {\n        if(E[i].r<=E[la].r+tp) //tp\u8bb0\u5f55\u5728\u94fa\u4e0a\u4e00\u6bb5\u65f6\u989d\u5916\u94fa\u7684\u957f\u5ea6 \n            continue;//\u5982\u679c\u73b0\u5728\u8981\u94fa\u7684\u90a3\u4e00\u6bb5\u88ab\u4e0a\u4e00\u6bb5\u5305\u542b\uff0c\u5c31\u53ef\u4ee5\u8df3\u8fc7\u4e86\uff0c\u56e0\u4e3a\u5df2\u7ecf\u94fa\u597d\u4e86 \n        while(E[i].l<=E[la].r+tp)//\u5982\u679c\u8fd9\u6b21\u94fa\u7684\u80cc\u4e0a\u4e00\u6b21\u90e8\u5206\u5305\u542b \n        {\n            E[i].l++;//\u5c31\u53ea\u94fa\u5269\u4e0b\u7684\uff0c\u8fd9\u91cc\u53ef\u4ee5O\uff081\uff09\u89e3\u51b3\u7684\uff0c\u53ea\u4e0d\u8fc7\u6211\u667a\u969c\u5c31\u5199\u4e86\u4e2awhile \n        }\n        la=i;//\u8bb0\u5f55\u4e00\u4e0b\u8fd9\u6b21\u94fa\u7684\u662f\u7b2c\u51e0\u6bb5 \n        //\u4e0b\u9762\u5c31\u662f\u8ba1\u7b97\u4f1a\u8d85\u51fa\u591a\u5c11\u548c\u8be5\u6bb5\u9700\u591a\u5c11\u6728\u677f\u4e86 \n        if(((E[i].r-E[i].l+1)%m)==0) tp=0;\n        else tp=m-((E[i].r-E[i].l+1)%m);\n        if(tp==0) ans+=(E[i].r-E[i].l+1)/m;\n        else ans+=(E[i].r-E[i].l+1)/m+1;\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&E[i].l,&E[i].r);\n        E[i].r--;\n    }\n    sort(E+1,E+1+n,cmp);\n    work();\n    printf(\"%d\",ans);\n    return 0;\n}\n``` \n\n\n------------\n\n\u9001\u7ed9\u5927\u5bb6\u4e00\u4e9b\u6211\u81ea\u5df1\u9020\u7684\u4f8b\u5b50\uff0c\u5e0c\u671b\u80fd\u5e2e\u5230\u5927\u5bb6\uff0c\u4e0d\u7528\u8c22\u6211 \n\n3 3\n1 6\n13 17\n8 12\n-> 5\n\n0 1 1 1 1 1 0 0 1 1 1 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0\n\n3 3\n1 4\n2 6\n9 18\n-> 5\n\n0 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0\n\n3 3\n1 3\n4 6\n7 9\n-> 3\n\n0 1 1 0 1 1 0 1 1 0 0\n\n3 3\n1 10\n2 9\n3 8\n-> 3\n\n0 1 1 1 1 1 1 1 1 1 0\n\n4 4\n1 4\n2 5\n3 6\n4 7\n-> 2\n\n0 1 1 1 1 1 1 1 1 0\n\n5 3\n0 10\n2 9\n3 8\n4 7\n5 6\n-> 4\n\n1 1 1 1 1 1 1 1 1 1 0\n\n4 4\n0 10\n2 9\n3 6\n4 7\n-> 3\n\n1 1 1 1 1 1 1 1 1 1 0\n\n6 165\n56 1651\n\n156 158\n\n165  18478\n\n145614 156156\n\n158618 158888\n\n165418 168156\n\n-> 195\n\n\n",
        "postTime": 1493554339,
        "uid": 21596,
        "name": "Forever\u4e36CIL",
        "ccfLevel": 6,
        "title": "P1589 \u6ce5\u6cde\u8def"
    },
    {
        "content": "\u4f3c\u4e4e\u6211\u7684\u9898\u89e3\u662f\u6700~~\u7279\u6b8a~~\u5947\u8469\u7684\n```c++\n#include<iostream>\n#include<cmath>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<string>\n#include<fstream>//\u6587\u4ef6\u5934\nusing namespace std;\nint n,l,maxz,gs;//\u5b9a\u4e49\nstruct xx{int s,e;}a[10005];//\u5b9a\u4e49\u7ed3\u6784\u4f53\nbool cmp(xx a,xx b){return a.s<b.s;}//\u6309\u7b2c\u4e00\u4e2a\u6570\u4ece\u5c0f\u5230\u5927\u6bd4\u8f83\nint main()\n{\n  cin>>n>>l;//\u8f93\u5165\u6ce5\u6cde\u8def\u6570n\u548c\u6728\u677f\u957f\u5ea6l\n  for(int i=1;i<=n;i++)//\u4ece1~n\u5faa\u73af\n  \tscanf(\"%d%d\",&a[i].s,&a[i].e);//\u8f93\u5165\u6ce5\u6cde\u8def\u5f00\u59cb\u70b9\u548c\u7ed3\u675f\u70b9\n  sort(a+1,a+1+n,cmp);//\u6392\u5e8f\n  maxz=a[1].s;//\u628a\u7b2c\u4e00\u4e2a\u6ce5\u6cde\u8def\u7684\u5f00\u59cb\u70b9\u5b58\u8d77\u6765\n  for(int i=1;i<=n;i++)\n  {\n  \tif(a[i].e>=maxz)//\u5982\u679c\u6ce5\u6cde\u8def\u7684\u7ed3\u675f\u70b9\u5927\u4e8e\u7b49\u4e8e\u65b0\u6728\u677f\u7684\u5f00\u59cb\u4f4d\u7f6e\n  \t{\n  \t  gs+=(a[i].e-maxz)/l;//\u7b97\u51fa\u8fd9\u6bb5\u8ddd\u79bb\u9700\u8981\u7684\u6728\u677f\u6570\n  \t  if((a[i].e-maxz)%l!=0)//\u5982\u679c\u8fd9\u6bb5\u6ce5\u6cde\u8def\u79bb\u65b0\u6728\u677f\u7684\u5f00\u59cb\u4f4d\u7f6e\u7684\u5dee\u4e0d\u80fd\u6574\u9664\u6728\u677f\u957f\u5ea6l\n      \tmaxz=a[i].e+(l-(a[i].e-maxz)%l),gs++;//\u5219\u65b0\u6728\u677f\u7684\u5f00\u59cb\u4f4d\u7f6e\u7b49\u4e8e\u6ce5\u6cde\u8def\u7684\u7ed3\u675f\u70b9\u4f4d\u7f6e\u52a0\u4e0a\u6728\u677f\u591a\u51fa\u7684\u957f\u5ea6\uff0c\u6728\u677f\u6570+1\n  \t  else maxz=a[i].e;//\u5426\u5219\u65b0\u6728\u677f\u7684\u5f00\u59cb\u4f4d\u7f6e\u5c31\u662f\u6ce5\u6cde\u8def\u7ed3\u675f\u70b9\u7684\u4f4d\u7f6e\n    }\n    maxz=max(maxz,a[i+1].s);//\u8ba9\u5f53\u524d\u6728\u677f\u7684\u4f4d\u7f6e\u548c\u4e0b\u4e00\u4e2a\u5f00\u5934\u6bd4\u8f83\uff0c\u6c42\u51fa\u65b0\u6728\u677f\u7684\u5f00\u59cb\u4f4d\u7f6e\n  }\n  cout<<gs;//\u8f93\u51fa\u603b\u6728\u677f\u6570\n  return 0;\n}\n```\n### \u675c\u7edd\u6284\u88ad\uff0c\u4eba\u4eba\u6709\u8d23",
        "postTime": 1540284512,
        "uid": 43317,
        "name": "666yuchen",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1589 \u3010\u6ce5\u6cde\u8def\u3011"
    },
    {
        "content": "**\u6700\u8fd1\u533a\u95f4\u5408\u5e76\u7684\u9898\u505a\u591a\u4e86\uff0c\u4e00\u770b\u5230\u8fd9\u79cd\u8f93\u5165\u65b9\u5f0f\u5c31\u60f3\u5230\u4e86\u533a\u95f4\u5408\u5e76\uff0c\u8fd9\u9898\u4e5f\u786e\u5b9e\u53ef\u4ee5\u5148\u533a\u95f4\u5408\u5e76\uff0c\u7136\u540e\u518d\u53bb\u94fa\u6728\u677f\u3002\u53ef\u4ee5\u662f\u53ef\u4ee5\uff0c\u4f46\u662f\u6ca1\u5fc5\u8981\uff0c\u56e0\u4e3a\u6211\u540e\u6765\u53d1\u73b0\u5408\u5e76\u4e86\u518d\u94fa\u548c\u76f4\u63a5\u94fa\u5e76\u6ca1\u6709\u4ec0\u4e48\u533a\u522b= =\uff0c\u6709\u70b9\u591a\u6b64\u4e00\u4e3e\u7684\u611f\u89c9\u3002\u6240\u4ee5\u6b63\u89e3\u5c31\u662f\u5148\u7ed3\u6784\u4f53\u6392\u5e8f\u7136\u540e\u904d\u5386\u4e00\u904d\u5c31\u53ef\u4ee5\u4e86\u3002\uff08\u521a\u521a\u6709\u70b9\u95ee\u9898\uff0c\u73b0\u5728\u5df2\u7ecf\u4fee\u6b63\uff0c\u6c42\u901a\u8fc7\uff09**\n- \u6392\u5e8f\u90e8\u5206\u6bd4\u8f83\u4ea4\u5355\uff0c\u5927\u5bb6\u90fd\u4f1a\uff0c\u6309\u7167\u7ebf\u6bb5\u5de6\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n```cpp\n  struct node{\n      int l,r;\n  };\n  node arr[10005];\n  bool cmp(node a,node b){\n      return a.l<b.l;\n  }\n```\n- \u7136\u540efor\u5faa\u73af\u628a\u6240\u6709\u6728\u677f\u904d\u5386\u4e00\u904d\uff0c\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u53d8\u91cf\u6765\u8bb0\u5f55\u4e00\u4e0b\u6728\u677f\u94fa\u5230\u7684\u7ec8\u70b9\uff08\u8fd9\u91cc\u6211\u7528\u4e00\u4e2a\u540d\u4e3a\u201cmbed\u201d\uff08\u610f\u601d\u662f\u6728\u677f\u7ed3\u675f\uff0c\u82f1\u8bed\u6bd4\u8f83\u5f31QAQ\uff09\u7684\u53d8\u91cf\u6765\u8bb0\u5f55\uff09\u3002\u7136\u540e\u6838\u5fc3\u90e8\u5206\u5c31\u662f\u4e24\u4e2aif\uff1a\n\t1. \u5982\u679c\u5f53\u524d\u8fd9\u5757\u6728\u677f\u7684\u5de6\u7aef\u70b9\u6bd4mbed(\u6728\u677f\u94fa\u5230\u7684\u7ec8\u70b9)\u5927\uff0c\u8bf4\u660e\u8fd9\u4e00\u5757\u662f\u5b8c\u5168\u6ca1\u6709\u94fa\u5230\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u4ece\u5de6\u7aef\u70b9\u8fd9\u91cc\u5f00\u59cb\u94fa\uff0c\u94fa\u5230\u54ea\u91cc\u4e3a\u6b62\u5462\uff1f\u8fd9\u4e00\u6bb5\u7684\u957f\u5ea6\u662f\u591a\u5c11\u5462\uff1f\u53f3\u7aef\u70b9\u51cf\u53bb\u5de6\u7aef\u70b9\u5c31\u662f\u957f\u5ea6\uff08len=arr[i].r-arr[i].l\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u51e0\u5757\u6728\u677f\u5462\uff1f\u8fd9\u91cc\u4e00\u4e2a\u5c0f\u6280\u5de7\u53ef\u80fd\u6709\u4eba\u77e5\u9053\u6709\u4eba\u4e0d\u77e5\u9053\uff0c(len-1)/L+1\uff0c\u8fd9\u4e2a\u503c\u5c31\u662f\u6211\u4eec\u9700\u8981\u7684\u6728\u677f\u6570\u91cf\uff08\u53ef\u4ee5\u81ea\u884c\u9a8c\u8bc1\uff09\u3002\u628a\u8fd9\u4e2a\u503c\u52a0\u5230\u6700\u7ec8\u7b54\u6848ans\u91cc\u9762\u53bb\uff0c\u6728\u677f\u7684\u7ec8\u70b9\u66f4\u65b0:mbed=arr[i].l+L$\\times$((len-1)/L+1)\u3002\n    1. \u5982\u679c\u5f53\u524d\u8fd9\u5757\u6728\u677f\u7684\u5de6\u7aef\u70b9\u6bd4mbed\u5c0f\uff0c\u4f46\u662f\u53f3\u7aef\u70b9\u6bd4mbed\u5c0f\uff0c\u8bf4\u660e\u8fd9\u4e00\u5757\u76d6\u4e86\u4e00\u90e8\u5206\uff0c\u6ca1\u6709\u76d6\u5b8c\uff0c\u90a3\u4e48\u6211\u4eec\u4ece\u4e4b\u524d\u7684mbed\u5904\u7ee7\u7eed\u76d6\uff0c\u8fd9\u4e00\u6bb5\u7684\u957f\u5ea6len=arr[i].r-mbed\uff0c\u4e00\u6837\u7684\uff0c\u8fd9\u4e2a\u503c\u52a0\u5230\u6700\u7ec8\u7b54\u6848ans\u91cc\u9762\u53bb\uff0c\u6728\u677f\u7684\u7ec8\u70b9\u66f4\u65b0:mbed+=L$\\times$((len-1)/L+1)\u3002\n- \u6700\u540e\u6211\u4eec\u628a\u8fd9\u4e2aans\u8f93\u51fa\u6765\u5c31\u53ef\u4ee5\u4e86\u3002\u4ee5\u4e0b\u662f\u849f\u84bb\u7684\u4ee3\u7801\uff1a\n```cpp\n  #include<iostream>\n  #include<cstdio>\n  #include<cmath>\n  #include<algorithm>\n  #include<cstring>\n  #include<cstdlib>\n  #include<queue>\n  #include<map>\n  #define fore(i,a,b) for(int i=a;i<=b;i++)\n  #define foru(i,a,b) for(int i=a;i<b;i++)\n  #define ford(i,a,b) for(int i=a;i>=b;i--)\n  #define IGNB std::ios::sync_with_stdio(false);\n  #define ll long long\n  #define INF 0x3fffffff\n  using namespace std;\n  struct node{\n      int l,r;\n  };\n  node arr[10005];\n  bool cmp(node a,node b){\n      return a.l<b.l;\n  }\n  int main(){\n      IGNB;\n      int n,L,st,mbed=0,ans=0;\n      cin>>n>>L;\n      fore(i,1,n){\n          cin>>arr[i].l>>arr[i].r;\n      }\n      sort(arr+1,arr+1+n,cmp);\n      fore(i,1,n){\n          if(arr[i].l>mbed){//\u5b8c\u5168\u6ca1\u76d6\u5230\uff0c\u91cd\u65b0\u653e\u4e00\u5757 \n              int tmp=(arr[i].r-arr[i].l-1)/L+1;\n              ans+=tmp;\n              mbed=arr[i].l+tmp*L; \n          }\n          else if(arr[i].r>mbed){//\u76d6\u4e86\u4e00\u90e8\u5206 \n              int tmp=(arr[i].r-mbed-1)/L+1;\n              ans+=tmp;\n              mbed+=tmp*L;\n          }\n      } \n      cout<<ans;\n      return 0;\n  }\n\n```",
        "postTime": 1583387398,
        "uid": 234972,
        "name": "TESJackeyLove",
        "ccfLevel": 0,
        "title": "\u849f\u84bb\u6bd4\u8f83\u76f4\u89c2\u7684\u89e3\u6cd5"
    },
    {
        "content": "\u5b66\u6821\u6a21\u62df\u8d5b\u505a\u5230\u4e86\uff0c\u770b\u4e86\u4e00\u773c\u5199\u4e86\u4e00\u4e2a\u4e8c\u5206\uff0c\u987a\u624b\u4e00\u89c9\u597d\u50cf\u8fc7\u6389\u4e86....\u770b\u4e86\u4e00\u773c\u9898\u89e3\u5927\u5bb6\u597d\u50cf\u90fd\u5199\u7684\u8d2a\u5fc3\uff0c\u5c31\u8bb2\u4e00\u8bb2\u6211\u7684\u4e8c\u5206\u5427\uff0c\u597d\u50cf\u4e5f\u662f\u5229\u7528\u8d2a\u5fc3...\n\u6211\u4eec\u73b0\u5728\u5c06\u6240\u6709\u533a\u95f4\u6392\u5e8f\uff0c\u6392\u5e8f\u89c4\u5219\u5982\u4e0b\uff1a\n\n1.\u5982\u679c\u4e24\u4e2a\u533a\u95f4\u5de6\u7aef\u70b9\u76f8\u7b49\uff0c\u6309\u53f3\u7aef\u70b9\u964d\u5e8f\u6392\u5e8f\n2.\u5982\u679c\u4e24\u4e2a\u533a\u95f4\u5de6\u7aef\u70b9\u4e0d\u76f8\u7b49\uff0c\u6309\u5de6\u7aef\u70b9\u5347\u5e8f\u6392\u5e8f\n\n\u8fd9\u6837\u6709\u4e00\u4e2a\u4ec0\u4e48\u597d\u5904\u5462\uff0c\u5c31\u662f\u65b9\u4fbf\u6211\u4eec\u5199check\u51fd\u6570\n\n\u6211\u4eec\u5148\u8ba1\u7b97\u51fa\u5c06\u6392\u5e8f\u540e\u7684\u7b2c\u4e00\u4e2a\u533a\u95f4\uff0c\u4e5f\u5c31\u662f\u5de6\u7aef\u70b9\u6700\u9760\u5de6\u7684\u533a\u95f4\u8986\u76d6\u597d\u540e\u8981\u7528\u591a\u5c11\u5757\u6728\u677f\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u5f53\u524d\u80fd\u8986\u76d6\u5230\u7684\u6700\u53f3\u70b9\uff0c\u7136\u540e\u4ece\u7b2c2\u53f7\u5230\u7b2cn\u53f7\u6ce5\u6cde\u7684\u9053\u8def\u626b\u4e00\u904d\uff0c\u6ce8\u610f\u5230\u6709\u4e00\u884c\u662fif(num*len<sub) num++\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u8981\u6ce8\u610f\u5230\u4e00\u79cd\u60c5\u51b5\uff0c\u6bd4\u5982\u8bf4\u6211\u4eec\u5f53\u524d\u6709\u4e00\u6bb5\u957f\u5ea6\u4e3a7\u7684\u533a\u95f4\uff0c\u6211\u4eec\u8981\u62ff\u957f\u5ea6\u4e3a3\u7684\u6728\u677f\u5c06\u5b83\u8986\u76d6\u6389\uff0c\u663e\u7136\u9700\u8981\u4e09\u5757\uff0c\u4f46\u662f\u5982\u679c\u53ea\u662f\u7b80\u5355\u76847/3\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u662f2\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u7279\u5224\u4e00\u4e0b\u8fd9\u79cd\u60c5\u51b5\uff0c\u4e0b\u9762\u8d34\u4e00\u4e0b\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint n,m,l,r,len;\nstruct inv\n{\n\tint l,r;\n\tbool operator <(const inv &x)const\n\t{\n\t\tif(l==x.l) return r>x.r;\n\t\treturn l<x.l;\n\t}\n}a[10001];\nint check(int tot)\n{\n\tint tmp=a[1].r-a[1].l;\n\tint tmpp=tmp/len;\n\tif(tmpp*len<tmp) tmpp++;\n\ttot-=tmpp;\n\tint mx=a[1].l+tmpp*len;\n\tfor(int i=2;i<=n;++i)\n\t{\n\t\tif(a[i].r<=mx) continue;\n\t\tif(a[i].l<=mx)\n\t\t{\n\t\t\tint sub=a[i].r-mx;\n\t\t\tint num=sub/len;\n\t\t\tif(num*len<sub) num++;\n\t\t\ttot-=num;\n\t\t\tmx+=num*len;\n\t\t}\n\t\telse if(a[i].l>mx)\n\t\t{\n\t\t\tint sub=a[i].r-a[i].l;\n\t\t\tint num=sub/len;\n\t\t\tif(num*len<sub) num++;\n\t\t\ttot-=num;\n\t\t\tmx=a[i].l+num*len;\n\t\t}\n\t}\n\tif(tot<0) return 0;\n\treturn 1;\n}\nint main()\n{\n\tfreopen(\"cover.in\",\"r\",stdin);\n\tfreopen(\"cover.out\",\"w\",stdout);\n\tscanf(\"%d%d\",&n,&len);\n\tfor(int i=1;i<=n;++i) scanf(\"%d%d\",&a[i].l,&a[i].r);\n\tsort(a+1,a+1+n);\n//\tfor(int i=1;i<=n;++i) printf(\"%d %d\\n\",a[i].l,a[i].r);\n\tl=1,r=10000000;\n\twhile(l<r)\n\t{\n\t\tint mid=(l+r)>>1;\n//\t\tcout<<mid<<\" \"<<check(mid)<<endl;\n\t\tif(check(mid)) r=mid;\n\t\telse l=mid+1;\n\t}\n\tprintf(\"%d\",l);\n\treturn 0;\n}\n```\n",
        "postTime": 1572690383,
        "uid": 114187,
        "name": "ubec",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1589 \u3010\u6ce5\u6cde\u8def\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P1589)\n\n\u9996\u5148\u6765\u5206\u6790\u6837\u4f8b\uff1a\n\n\u7b2c1\u5757\u6728\u677f\uff1a1\u52304\n\n\u7b2c2\u5757\u6728\u677f\uff1a4\u52307\n\n\u7b2c3\u5757\u6728\u677f\uff1a8\u523011\n\n\u7b2c4\u5757\u6728\u677f\uff1a11\u523014\n\n\u7b2c5\u5757\u6728\u677f\uff1a14\u523017\n\n\u6240\u4ee5\u6837\u4f8b\u4e00\u5171\u9700\u89815\u5757\u6728\u677f\n\n\u601d\u8def\uff1a\u9996\u5148\uff0c\u6211\u4eec\u628a\u6ce5\u6cde\u8def\u4ee5**\u8d77\u70b9** _\u4ece\u5c0f\u5230\u5927_ \u6392\u5e8f\uff0c\u8bbej\u8868\u793a\u5f53\u524d\u6728\u677f\u80fd\u8986\u76d6\u5230\u7684\u4f4d\u7f6e\uff08**\u7ec8\u70b9**\uff09\uff0cans\u8868\u793a\u9700\u8981\u51e0\u4e2a\u6728\u677f\n\n\u8ba1\u7b97ans\uff1a\n```cpp\nfor(i=1;i<=n;i++){\n    while (j<a[i].end){\n        j+=l;ans++;\n    }\n    j=max(j,a[i+1].begin);\n    //\u5982\u679cj\u6bd4\u4e0b\u4e00\u6bb5\u6ce5\u6cde\u8def\u7684\u8d77\u70b9\u8fd8\u5927\u7684\u8bdd\n    //j\u4fdd\u7559\u539f\u6765\u7684\u503c\uff08\u5373\u4e0d\u53d8\uff09\n    //\u5373a[i+1].begin\u5230j\u8fd9\u4e00\u6bb5\u4e0d\u9700\u91cd\u65b0\u8986\u76d6\n}\n```\n\n[\u8bc4\u6d4b\u8bb0\u5f55\uff1a](https://www.luogu.org/recordnew/show/16135312)\n\n\u8017\u65f6/\u5185\u5b58\uff1a56ms\uff0c820KB\n\n\u8bed\u8a00/\u957f\u5ea6\uff1aC++\uff0c0.5KB\n\n\u72b6\u6001/\u5206\u6570\uff1aAccepted\uff0c100\u5206\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nstruct node{\n    int begin,end;\n    bool operator < (node a) const{\n        return begin<a.begin;\n    }\n    //\u91cd\u5b9a\u4e49\u5c0f\u4e8e\u8fd0\u7b97\u7b26\uff0c\u7ed9sort\u4f7f\u7528\n    void read(){\n        scanf(\"%d%d\",&begin,&end);\n    }\n}a[10010];\nint n,ans,j,i,l;\nint main(){\n    scanf(\"%d%d\",&n,&l);\n    for(i=1;i<=n;i++)\n    a[i].read();\n    sort(a+1,a+n+1);//\u6392\u5e8f\n    j=a[1].begin;//\u6ce8\u610f\uff0c\u6ca1\u6709\u8fd9\u53e5\u624d40\u5206\n    for(i=1;i<=n;i++){\n        while (j<a[i].end){\n            j+=l;ans++;\n        }\n        j=max(j,a[i+1].begin);\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n\n\u6700\u540e\uff0c\u8bf4\u4e00\u4e0b\u4e07\u80fd\u5934bits/stdc++.h\n\nnoi\u6bd4\u8d5b\u6587\u4ef6\u4e2d\u8bf4\uff1a**\u7406\u8bba**\u4e0a\u53ef\u4ee5\u7528\u4e07\u80fd\u5934\uff0c\u4f46\u5b9e\u9645\u4e2d**\u53ef\u80fd\u4e0d\u652f\u6301**\u4f7f\u7528\u4e07\u80fd\u5934\uff0c\u82e5\u56e0\u4e3a\u4f7f\u7528\u4e07\u80fd\u5934\u800c\u5bfc\u81f4CE\uff08\u7f16\u8bd1\u9519\u8bef\uff09\uff0c\u6bd4\u8d5b**\u6982\u4e0d\u8d1f\u8d23**\uff0c\u5373**\u9009\u624b\u8d1f\u5168\u8d23**\uff01\uff01\uff01\n\n\u6240\u4ee5\uff0c\u6bd4\u8d5b\u65f6**\u5efa\u8bae\u4e0d\u8981**\u4f7f\u7528\u4e07\u80fd\u5934\uff0c\u5e73\u65f6\u53ef\u4ee5**\u7a0d\u5fae\u4f7f\u7528**\u4e00\u4e0b",
        "postTime": 1549692272,
        "uid": 95624,
        "name": "HPXXZYY",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1589 \u3010\u6ce5\u6cde\u8def\u3011"
    },
    {
        "content": "\u770b\u4e86\u534a\u5929\u6837\u4f8b\u624d\u53d1\u73b0\uff0c\u8981\u628a\u7ec8\u70b9\u51cf\u4e00\u624d\u80fdAC\uff0c\u601d\u8def\u662f\u5728\u6309\u8d77\u70b9\u6392\u5e8f\u540e\uff0c\u7528\u4e86\u4e00\u4e2alast\u53bb\u66f4\u65b0\u5f53\u524d\u6728\u677f\u6240\u6251\u5230\u7684\u6700\u7ec8\u4f4d\u7f6e\uff0c\u4ee3\u7801\u8fd8\u662f\u633a\u597d\u61c2\u7684\u5427\u3002\u3002\u3002\n\n\n\n\n\n```cpp\n#include <stdio.h>\n#include <algorithm>\nusing namespace std;\nint n,l,ans=0,last=0;\nstruct node\n{\n    int start,end;\n}road[10009];\ninline int read( )\n{\n    int f=1,p=0;char c=getchar( );\n    while(c<'0'||c>'9'){if(c=='-') f=-1;c=getchar( );}\n    while(c>='0'&&c<='9'){p=p*10+c-'0';c=getchar( );}\n    return f*p;\n}\nbool cmp(node a,node b)\n{\n    return a.start<b.start;\n}\nint main( )\n{\n    n=read( );l=read( );\n    for(int i=1;i<=n;i++)\n    {\n        road[i].start=read( );\n        road[i].end=read( )-1;\n    }\n    sort(road+1,road+1+n,cmp);\n    for(int i=1;i<=n;i++)\n    {\n        if(last>=road[i].start)\n        {\n            while(last<road[i].end)\n            {\n                ans++;\n                last+=l;\n            }\n        }\n        else \n        {\n            last=road[i].start-1;\n            while(last<road[i].end)\n            {\n                ans++;\n                last+=l;\n            }\n        }\n    }\n    printf(\"%d\\n\" ,ans);\n    return 0;\n}\n\n```",
        "postTime": 1509206382,
        "uid": 35845,
        "name": "MrMagnificent",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1589 \u3010\u6ce5\u6cde\u8def\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u770b\u4f3c\u5f88\u7b80\u5355\uff0c\u4f46\u6211\u7b2c\u4e00\u904d\u63d0\u4ea4\u5374\u72060\uff08dalao\u8bf7\u65e0\u89c6\u8fd9\u4e00\u884c\uff09\n\n\u8fd9\u9053\u9898\u53ea\u6709\u4e00\u4e2a\u5751\u70b9\uff0c\u5c31\u662f \u94fa\u7684\u6728\u677f\u53ef\u4ee5\u8fde\u63a5\u4e24\u5757 \u201c\u4e0d\u8fde\u901a\u7684 \u6ce5\u8def\u201c\u3002\n\n\u4e00\u5f00\u59cb\u6211\u5f00\u4e86\u4e00\u4e2a\u5f88\u5927\u7684bool\u6570\u7ec4\uff0c\u5374\u53d1\u73b0\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u53ef\u884c\u3002\n\n\u540e\u6765\u6211\u60f3\u5230\u4e86\u6b63\u89e3\uff1a\n\n1.\u5c06 \u6ce5\u8def\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u5b58\u5165\u7ed3\u6784\u4f53\uff0c\u7136\u540e\u6309\u8d77\u70b9\u7531\u5c0f\u5230\u5927sort\u4e00\u904d\n\n2.\u4ece\u7b2c\u4e00\u5757\u6ce5\u8def\u5f00\u59cb\u94fa\u8d77\uff0c\u6bcf\u6b21\u94fa\u7684\u8d77\u70b9\u662fmax(Begin,road.q)\n\n   Begin\u6307\u7684\u662f\u4f60\u94fa\u5b8c\u4e0a\u4e00\u5757\u6ce5\u8def\u65f6\u7684 \u672b\u5c3e\u3002\n\nroad.q\u6307\u7684\u662f\u4f60\u5f53\u524d\u8981\u94fa\u6ce5\u8def\u7684\u8d77\u70b9\u3002\n\n\u8fd9\u6837\u7684\u8bdd\u5c31\u89e3\u51b3\u4e86\u8fd9\u70b9\u552f\u4e00\u7684\u5751\u70b9\u4e86\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff1a\n\n\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nint n,l,tot;\nint Begin,End;\nstruct Node\n{\n    int q;\n    int p;\n}road[10010];\nbool cmp(Node a,Node b)\n{\n    return a.q<b.q;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&l);\n    for(long long int i=1; i<=n; i++)\n        scanf(\"%d%d\",&road[i].q,&road[i].p);\n    sort(road+1,road+1+n,cmp);\n    for(int i=1; i<=n; i++)\n    {\n        Begin=max(Begin,road[i].q);\n        End=road[i].p;\n        for(int j=0;;j++)\n            if(Begin+l*j>=End)\n            {\n                tot+=j;\n                Begin=Begin+l*j;\n                break;\n            }\n    }\n    cout<<tot;\n    return 0;\n}\n```",
        "postTime": 1493543434,
        "uid": 19215,
        "name": "OIer991215",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1589 \u3010\u6ce5\u6cde\u8def\u3011"
    }
]