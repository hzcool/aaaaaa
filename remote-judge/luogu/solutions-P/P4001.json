[
    {
        "content": "### \u5927\u5bb6\u90fd\u662f\u7f51\u7edc\u6d41\uff0c\u8fd9\u662f\u6700\u77ed\u8def,\u6211\u7ed9\u5927\u5bb6\u6765\u4e00\u79cd\u6700\u77ed\u8def\u7684\u89e3\u6cd5\n![](https://cdn.luogu.com.cn/upload/pic/63309.png)\n    \u4ece\u4e0a\u56fe\u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u6700\u5c0f\u5272\u5c31\u662f\u6700\u77ed\u8def\uff0c\u628a\u5de6\u4e0b\u89d2\u4f5c\u4e3a\u8d77\u70b9\uff0c\u53f3\u4e0a\u89d2\u4f5c\u4e3a\u7ec8\u70b9\uff0c\u53ea\u8981\u4ece\u5de6\u4e0b\u89d2\u8d70\u5230\u4e86\u53f3\u4e0a\u89d2\uff0c\u5c31\u4e00\u5b9a\u53ef\u4ee5\u628a\u56fe\u5206\u6210\u4e24\u4efd\uff0c\n\u6700\u77ed\u8def\u5c31\u662f\u6700\u77ed\u7684\u65b9\u5f0f\u628a\u56fe\u5206\u6210\u4e24\u4efd\uff0c\u7136\u540e\u518d\u628a\u6bcf\u4e00\u4e2a\u5c0f\u4e09\u89d2\u5f62\u770b\u6210\u4e00\u4e2a\u70b9\uff0c~~\u518d\u8dd1\u6700\u77ed\u8def\u5c31\u884c\u4e86~~\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cstring>\n#define inf 2147483647\n#define re register\n#define maxn 9100000\nusing namespace std;\nint head[maxn],n,m,k,start,end,ans,deep[maxn],dis[maxn],book[maxn];\nstruct node{int to,next,w;}edge[maxn];\nvoid add(int u,int v,int w){edge[++k].next=head[u];edge[k].to=v;edge[k].w=w;head[u]=k;}\nvoid read()\n{\n\tre int temp,t1,t2;\n\tfor(re int i=1;i<m;i++) scanf(\"%d\",&temp),add(i*2,end,temp);\n\tfor(re int i=2;i<n;i++)\n\tfor(re int j=1;j<m;j++)\n\t{\n\t\tscanf(\"%d\",&temp);\n\t\tt1=2*(i-2)*(m-1)-1+2*j;\n\t\tt2=2*(i-1)*(m-1)+2*j;\n\t\tadd(t1,t2,temp);\n\t\tadd(t2,t1,temp);\n\t}\n\tfor(re int i=1;i<m;i++)\n\t{\n\t\tscanf(\"%d\",&temp);\n\t\tt1=2*(n-2)*(m-1)-1+2*i;\n\t\tadd(start,t1,temp);\n\t}//\u6a2a \n\t\n\tfor(int i=1;i<n;i++)\n\tfor(int j=1;j<=m;j++)\n\t{\n\t\tscanf(\"%d\",&temp);\n\t\tt1=2*(i-1)*(m-1)-1+2*j;\n\t\tt2=t1-1;\n\t\tif(j==1) add(start,t1,temp);\n\t\telse if(j==m) add(t2,end,temp);\n\t\telse\n\t\t{\n\t\t\tadd(t1,t2,temp);\n\t\t\tadd(t2,t1,temp);\n\t\t}\n\t}//\u7ad6 \n\t\n\tfor(int i=1;i<n;i++)\n\tfor(int j=1;j<m;j++)\n\t{\n\t\tt1=2*(i-1)*(m-1)-1+2*j;\n\t\tt2=t1+1;\n\t\tscanf(\"%d\",&temp);\n\t\tadd(t1,t2,temp);\n\t\tadd(t2,t1,temp);\n\t}\n\t//\u659c \n}\nstruct point\n{\n    int value;//\u8ddd\u79bb \n    int id;//\u70b9\n    point(int x,int y)\n    {\n        id=x;\n        value=y;\n    }\n    friend bool operator <(point a,point b)\n    {\n        return a.value>b.value;\n    } \n};\npriority_queue<point> q;\nint dijkstra(int s)\n{\n    for(int i=1;i<=end;i++) dis[i]=inf;\n    dis[s]=0;\n    q.push(point(s,0));\n    while(!q.empty())\n    {\n        int u=q.top().id;\n        q.pop();\n        if(book[u]) continue;\n        book[u]=1;\n        for(int i=head[u];i>0;i=edge[i].next)\n        {\n            int v=edge[i].to;\n            if(dis[v]>dis[u]+edge[i].w)\n            {\n                dis[v]=dis[u]+edge[i].w;\n                if(!book[v])\n                q.push(point(v,dis[v]));\n            }\n        }\n    }\n    return dis[end];\n}\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\tend=(2*n-2)*(m-1)+1;\n\tread();\n\tprintf(\"%d\",dijkstra(0));\n\treturn 0;\n}\n```\n",
        "postTime": 1562900410,
        "uid": 164319,
        "name": "d3ac",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4001 \u3010[ICPC-Beijing 2006]\u72fc\u6293\u5154\u5b50\u3011"
    },
    {
        "content": "\u770b\u5230luogu4001\u7adf\u7136\u662fBZOJ1001...\u60ca\u4e86\uff0c\u660e\u660e\u524d\u51e0\u5929\u8fd8\u6ca1\u6709\u6765\u7740\n\n\n\u6700\u5927\u6d41\u7b97\u6cd5\u7684\u5b9e\u73b0\u89c1\u524d\u7bc7\uff1ahttps://www.luogu.org/blog/LittleRewriter/wang-lao-liu-er-zui-tai-liu-suan-fa-di-shi-xian\n\n\u770b\u5230luogu\u4e0a\u6709\u4e86\u72fc\u6293\u5154\u5b50\u5c31\u5174\u594b\u7684\u4ea4\u4e00\u53d1\uff08\u96fe\uff09\n\n\n## \u6700\u5c0f\u5272\u6700\u5927\u6d41\u5b9a\u7406\n\n\n\u641c\u4e86\u4e00\u5708\u6ca1\u6709\u627e\u5230\u4ec0\u4e48\u662f\u6700\u5c0f\u5272\uff0c\u7136\u540e\u61f5\u903c\u4e86\u3002\n\n\u55ef......\n\n\u9996\u5148\uff0c\u4ec0\u4e48\u662f\u5272\uff1f\u5176\u5b9e\uff0c\u5272=\u5272\u8fb9=\u53bb\u6389\u4ee5\u540e\u4f7f\u56fe\u4e0d\u8fde\u901a\u7684\u8fb9\u7684\u96c6\u5408\n\n\u7136\u540e\uff0c\u5bb9\u91cf\u548c\u6700\u5c11\u7684\u5272\u96c6\u79f0\u4e3a\u6700\u5c0f\u5272\u3002\n\n\u5bf9\u4e8e\u5272\uff0c\u6709\u8fd9\u6837\u4e00\u4e2a\u91cd\u8981\u5b9a\u7406\uff1a\n\n> \u6700\u5c0f\u5272=\u6700\u5927\u6d41\n\n\u55ef\uff0c\u6700\u5c0f\u5272\u5c31\u8fd9\u4e48\u591a\u4e1c\u897f\u3002\n\n\u4e3a\u4ec0\u4e48\u6b63\u786e\uff1f\u8fd9\u91cc\u7ed9\u51fa\u4e00\u79cd\u76f4\u89c2\u7684\u60f3\u6cd5\n\n\uff08\u539fPO\uff1ahttps://jecvay.com/2014/11/what-is-min-cut.html\uff09\n\n>1.\u6700\u5927\u6d41\u4e0d\u53ef\u80fd\u5927\u4e8e\u6700\u5c0f\u5272, \u56e0\u4e3a\u6700\u5927\u6d41\u6240\u6709\u7684\u6c34\u6d41\u90fd\u4e00\u5b9a\u7ecf\u8fc7\u6700\u5c0f\u5272\u90a3\u4e9b\u5272\u8fb9, \u6d41\u8fc7\u7684\u6c34\u6d41\u600e\u4e48\u53ef\u80fd\u6bd4\u6c34\u7ba1\u5bb9\u91cf\u8fd8\u5927\u5462? \n2.\u6700\u5927\u6d41\u4e0d\u53ef\u80fd\u5c0f\u4e8e\u6700\u5c0f\u5272, \u5982\u679c\u5c0f, \u90a3\u4e48\u8bf4\u660e\u6c34\u7ba1\u5bb9\u91cf\u6ca1\u6709\u7269\u5c3d\u5176\u7528, \u53ef\u4ee5\u7ee7\u7eed\u52a0\u5927\u6c34\u6d41.\n\n\n\u8bc1\u6bd5\u3002\n\n\n\u8fd9\u91cc\u9996\u5148\u8bf4\u4e00\u4e2a\u6280\u5de7\uff0c\u65e0\u5411\u56fe\u7684\u7f51\u7edc\u6d41\u5728\u5efa\u8fb9\u65f6\u53cd\u5411\u5f27\u76f4\u63a5\u5efa\u6210\u6743\u503c\u4e3av\u7684\u8fb9\u5373\u53ef\uff0c\u56e0\u4e3a\u8fd9\u6837\u7684\u8fb9\u4e00\u5f00\u59cb\u5c31\u662f\u53ef\u4ee5\u589e\u5e7f\u7684\u3002\n\n\u9898\u610f\u662f\u6c42\u4e00\u4e2a\u65e0\u5411\u56fe\u7684\u6700\u5c0f\u5272\uff0c\u7136\u540e\u6211\u4eec\u8fd0\u7528\u6700\u5c0f\u5272-\u6700\u5927\u6d41\u5b9a\u7406\uff0c\u53ef\u4ee5\u8f6c\u5316\u6210\u6c42\u6700\u5927\u6d41\u7684\u95ee\u9898\u3002\u4e0d\u8fc7\u6734\u7d20\u7684Dinic\u662f\u4f1aTLE\u7684\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u4f18\u5316\u65b9\u6cd5\uff1a\n\n\u6211\u4eec\u77e5\u9053\uff0c\u5047\u5b9a\u5728\u4e00\u6b21dinic\u8fc7\u7a0b\u4e2d\uff0c\u53d1\u73b0\u4e0d\u80fd\u518d\u8fdb\u884c\u589e\u5e7f\u4e86\uff0c\u90a3\u4e48\u5c31\u76f8\u5f53\u4e8e\u5411\u4e0b\u7684\u8fd9\u6761\u8def\u662f\u5e9f\u7684\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u628a\u8fd9\u6761\u8def\u5835\u4e0a\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u8fc7\u4e86\u3002\u4f18\u5316\u6548\u679c\u5f88\u660e\u663e\uff0cBZOJ\u4e0aTLE->1644msAC\uff08\u867d\u7136\u6211\u8d28\u7591\u51fa\u9898\u4eba\u53ef\u80fd\u4e13\u95e8\u5361\u4e86\u6734\u7d20\u7684Dinic\uff09\uff0c\u6d1b\u8c37\u76f4\u63a50ms...\u4e0d\u6127\u662f\u7384\u5b66\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <queue>\n#include <cstring>\n#include <cctype>\nusing namespace std;\ninline void read(int &x) {\n    x = 0; char c = getchar();\n    while(!isdigit(c)) c = getchar();\n    while(isdigit(c)) x = (x << 3) + (x << 1) + c - '0', c = getchar();\n}\n#define MAXN 1003\nstruct node{\n    int fr, to, va, nxt;\n}edge[MAXN * MAXN * 6];\nint head[MAXN * MAXN], cnt;\ninline void add_edge(int u, int v, int w) {\n    edge[cnt].fr = u, edge[cnt].to = v, edge[cnt].va = w;\n    edge[cnt].nxt = head[u], head[u] = cnt++;\n    edge[cnt].fr = v, edge[cnt].to = u, edge[cnt].va = w;\n    edge[cnt].nxt = head[v], head[v] = cnt++; //\u53cd\u5411\u8fb9\u521d\u59cb\u5316\n}\nint st, ed, rank[MAXN * MAXN];\nint BFS() {\n    queue<int> q;\n    memset(rank, 0, sizeof rank);\n    rank[st] = 1;\n    q.push(st);\n    while(!q.empty()) {\n        int tmp = q.front();\n        //cout<<tmp<<endl;\n        q.pop();\n        for(int i = head[tmp]; i != -1; i = edge[i].nxt) {\n            int o = edge[i].to;\n            if(rank[o] || edge[i].va <= 0) continue;\n            rank[o] = rank[tmp] + 1;\n            q.push(o);\n        }\n    }\n    return rank[ed];\n}\nint dfs(int u, int flow) {\n    if(u == ed) return flow;\n    int add = 0;\n    for(int i = head[u]; i != -1 && add < flow; i = edge[i].nxt) {\n        int v = edge[i].to;\n        if(rank[v] != rank[u] + 1 || !edge[i].va) continue;\n        int tmpadd = dfs(v, min(edge[i].va, flow - add));\n        if(!tmpadd) {  //\u91cd\u8981\uff01\u5c31\u662f\u8fd9\u91cc\uff01\n            rank[v] = -1;\n            continue;\n        }\n        edge[i].va -= tmpadd, edge[i ^ 1].va += tmpadd;\n        add += tmpadd;\n    }\n    return add;\n}\nint ans;\nvoid dinic() {\n    while(BFS()) ans += dfs(st, 0x3fffff); \n}\nint n, m;\ninline int gethash(int i, int j) {\n    return (i - 1) * m + j;\n}\nint main() {\n    memset(head, -1, sizeof head);\n    read(n), read(m);\n    int tmp;\n    st = 1, ed = gethash(n, m);\n    for(int i = 1; i <= n; ++i) {\n        for(int j = 1; j < m; ++j)\n            read(tmp), add_edge(gethash(i, j), gethash(i, j + 1), tmp);\n    }\n    for(int i = 1; i < n; ++i) {\n        for(int j = 1; j <= m; ++j) \n            read(tmp), add_edge(gethash(i, j), gethash(i + 1, j), tmp);\n    }\n    for(int i = 1; i < n; ++i) {\n        for(int j = 1; j < m; ++j) \n            read(tmp), add_edge(gethash(i, j), gethash(i + 1, j + 1), tmp);\n    }\n    dinic();\n    cout<<ans<<endl;\n    return 0;\n} \n```\n\n---\n\n## \u5e73\u9762\u56fe\u4e0e\u5bf9\u5076\u56fe\n\n\n\u4ecd\u7136\u8003\u8651\u72fc\u6293\u5154\u5b50\u3002\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u7f51\u7edc\u6d41\u8fd9\u79cd\u7384\u5b66\u7b97\u6cd5\u603b\u4f1a\u8ba9\u4eba\u601d\u8003\u4eba\u751f\u3002\u4e8e\u662f\u673a\u667a\u7684\u4eba\u505a\u4e86\u8fd9\u6837\u4e00\u4ef6\u4e8b\u3002\n\n\u5148\u6765\u89c2\u5bdf\u4e0b\u9762\u7684\u8fd9\u5f20\u56fe\uff1a\n\n![](http://ozz4vkmqm.bkt.clouddn.com/17-12-10/63971518.jpg)\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u4e48\u4e00\u5f20\u56fe\uff0c\u53ef\u4ee5\u8f6c\u5316\u6210\u4efb\u610f\u4e24\u8fb9\u7684\u4ea4\u70b9\u90fd\u5728\u9876\u70b9\u4e0a\u7684\u5f62\u5f0f\u3002\n\n![](http://ozz4vkmqm.bkt.clouddn.com/17-12-10/56506302.jpg)\n\n\u4e0b\u9762\u7684\u8fd9\u5f20\u5374\u5b8c\u5168\u4e0d\u884c\u3002\n\n\u50cf\u8fd9\u6837\u4efb\u610f\u4e24\u8fb9\u7684\u4ea4\u70b9\u5728\u9876\u70b9\u4e0a\u7684\u56fe\u6211\u4eec\u79f0\u4e3a\u5e73\u9762\u56fe\u3002\n\n\u51e0\u6761\u8fb9\u56f4\u6210\u4e00\u4e2a\u533a\u57df\uff0c\u8fd9\u4e2a\u533a\u57df\u79f0\u4e3a\u4e00\u4e2a\u9762\u3002\n\n\u5bf9\u5e73\u9762\u56fe\uff0c\u6211\u4eec\u5b9a\u4e49\u5bf9\u5076\u56fe\uff1a\n\n![](http://ozz4vkmqm.bkt.clouddn.com/17-12-10/44610442.jpg)\n\n\u4e0b\u56fe\u4e2d\u9ed1\u8272\u7684\u662f\u4e2a\u5e73\u9762\u56fe\uff0c\u7ea2\u8272\u7684\u5c31\u662f\u5bf9\u5076\u56fe\u3002\u5176\u5efa\u7acb\u65b9\u6cd5\u662f\uff0c\u5bf9\u6bcf\u4e2a\u9762\u5efa\u4e00\u4e2a\u70b9\uff0c\u53ea\u8981\u6709\u4e00\u6761\u8fb9\u662f\u5728\u4e24\u4e2a\u9762\u4e4b\u95f4\uff0c\u6211\u4eec\u5c31\u5bf9\u8fd9\u4e24\u4e2a\u9762\u5bf9\u5e94\u7684\u70b9\u8fde\u8fb9\uff08\u7a0d\u6709\u4e9b\u7ed5\uff09\u3002\u6ce8\u610f\u662f\u6709\u4e00\u6761\u8fb9\u5c31\u8fde\u7ebf\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u5f97\u5230\u840c\u840c\u54d2\u7684\u5bf9\u5076\u56fe\u4e00\u5f20\uff01\n\n\u5bf9\u5076\u56fe\u5c31\u6709\u5f88\u591a\u7f8e\u5999\u7684\u6027\u8d28\u4e86\u3002\u6bd4\u5982\u8bf4\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u5076\u56fe\u7684\u4e00\u6761\u8fb9\u5c31\u5bf9\u5e94\u4e86\u4e00\u6761\u5272\u8fb9\u3002\n\n\u65e2\u7136\u5982\u6b64\u7684\u8bdd\uff0c\u60f3\u60f3\u72fc\u6293\u5154\u5b50\uff0c\u4e00\u6761\u5272\u8fb9\u6709\u4e00\u4e2a\u5bb9\u91cf\uff0c\u90a3\u4e48\u5982\u679c\u6211\u4eec\u5efa\u5b83\u7684\u5bf9\u5076\u56fe\uff0c\u6700\u77ed\u8def\u5c31\u662f\u6700\u5c0f\u5272\u3002\n\n\u6240\u4ee5\u5f97\u51fa\u4e0b\u9762\u7684\u91cd\u8981\u5b9a\u7406\uff1a\n\n> \u5bf9\u5e73\u9762\u56fe\u6765\u8bf4\uff0c\u6700\u5927\u6d41 = \u6700\u5c0f\u5272 = \u5bf9\u5076\u56fe\u6700\u77ed\u8def\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u7a33\u4e00\u4e9b\u8dd1\u51fa\u6765\u72fc\u6293\u5154\u5b50\u3002\n\n\uff08\u8be6\u7ec6\u7684\u56fe\u89e3\uff1ahttps://www.cnblogs.com/jinkun113/p/4682827.html\uff09\n\n\u4e8e\u662fAC\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <queue>\n#include <cctype>\n#include <vector>\n#include <cstring>\nusing namespace std;\ninline void read(int &x) {\n    x = 0; char c = getchar();\n    while(!isdigit(c)) c = getchar();\n    while(isdigit(c)) x = x * 10 + c - '0', c = getchar(); \n}\n#define MAXN 2000010\nstruct node{\n    int to, va;\n    node(int a, int b) { to = a, va = b; }\n};\nvector<node> v[MAXN]; \ninline void add_edge(int f, int t, int w) {\n    v[f].push_back(node(t, w));\n    v[t].push_back(node(f, w));\n}\nbool vis[MAXN];\nint st, ed;\nint dis[MAXN];\nint SPFA() {\n    memset(dis, 0x3f, sizeof dis);\n    vis[st] = 1;\n    queue<int> q;\n    q.push(st);\n    dis[st] = 0;\n    while(!q.empty()) {\n        int tmp = q.front();\n        //cout<<tmp<<\" \";\n        q.pop();\n        vis[tmp] = 0;\n        for(int i = 0; i < v[tmp].size(); ++i) {\n            int o = v[tmp][i].to;\n            //cout<<o<<\" \";\n            if(dis[o] > dis[tmp] + v[tmp][i].va) {\n                dis[o] = dis[tmp] + v[tmp][i].va;\n                if(!vis[o]) q.push(o), vis[o] = 1;\n            }\n        }\n    }\n    return dis[ed];\n}\nint n, m;\ninline void getheng(int i, int j, int k) {\n    if(i == 1) add_edge(st, j, k);\n    else if(i == n) add_edge((2 * (n - 1) - 1) * (m - 1) + j, ed, k);\n    else add_edge((2 * (i - 1) - 1) *(m - 1) + j, 2 * (i - 1) * (m - 1) + j, k);\n}\ninline void getshu(int i, int j, int k) {\n    if(j == 1) add_edge((i * 2 - 1) * (m - 1) + 1, ed, k);\n    else if(j == m) add_edge(st, 2 * i * (m - 1) - (m - 1), k);\n    else add_edge((i - 1) * 2 * (m - 1) + j - 1, ((i - 1) * 2 + 1) * (m - 1) + j, k);\n}\ninline void getxie(int i, int j, int k) {\n    add_edge((i - 1) * 2 * (m - 1) + j, (i - 1) * 2 * (m - 1) + (m - 1) + j, k);\n}\nint main() {\n    read(n), read(m);\n    st = (n - 1) * (m - 1) * 2 + 1, ed = (n - 1) * (m - 1) * 2 + 2;\n    int x;\n    for(int i = 1; i <= n; ++i) {\n        for(int j = 1; j < m; ++j)\n            read(x), getheng(i, j, x);\n    }\n    for(int i = 1; i < n; ++i) {\n        for(int j = 1; j <= m; ++j) \n            read(x), getshu(i, j, x);\n    }\n    for(int i = 1; i < n; ++i) {\n        for(int j = 1; j < m; ++j) \n            read(x), getxie(i, j, x);\n    }\n    /*for(int i = 1; i <= ((n - 1) * (m - 1) * 2 + 2); ++i) {\n        for(int j = 0; j < v[i].size(); ++j)\n            cout<<v[i][j].to<<\" \";\n        cout<<endl;\n    }*/\n    cout<<SPFA()<<endl;\n    return 0;\n}\n```\n\u5efa\u56fe\u5efa\u5230\u5410\u8840...\u771f\u7684\u5fc3\u7d2f\u554a...\n\nBZOJ3464ms\uff0c\u6bd4\u7f51\u7edc\u6d41\u7384\u5b66\u8fd8\u8981\u6162\u4e9b\uff1f\u597d\u5427...luogu\u66f4\u5938\u5f20\uff0c\u76f4\u63a5700\u591ams...\n\n\n---\n\n\u55ef\uff0c\u8d39\u7528\u6d41\u7684\u95ee\u9898\u6708\u8003\u540e\u518d\u8bf4\n\n## \u53c2\u8003\u8d44\u6599\n\nhttps://wenku.baidu.com/view/8c887f10a6c30c2259019ea0.html\n\nhttps://www.cnblogs.com/ljh2000-jump/p/5503061.html\n\nhttp://hzwer.com/1261.html\n\nhttp://blog.csdn.net/ff88655068/article/details/38878343\n",
        "postTime": 1513259240,
        "uid": 37956,
        "name": "LiRewriter",
        "ccfLevel": 0,
        "title": "\u7f51\u7edc\u6d41\u5b66\u4e60\u7b14\u8bb0\uff08\u4e09\uff09 \u6700\u5c0f\u5272 \u5e73\u9762\u56fe\u8f6c\u5bf9\u5076\u56fe"
    },
    {
        "content": "~~\u7384\u5b66$dinic$\u5c45\u7136\u4e0d\u4f1a\u88ab\u5361~~\n\n\u9996\u5148\u8bb2\u8bb2\u5bf9\u5076\u56fe\uff0c\u9996\u5148\u5bf9\u4e8e\u8fd9\u6837\u4e00\u5f20\u56fe\n\n![](https://cdn.luogu.com.cn/upload/pic/53357.png)\n\n\u5b83\u7684\u5bf9\u5076\u56fe\u5c31\u662f(\u5ffd\u7565\u539f\u6765\u7684\u90a39\u4e2a\u70b9)\n\n![](https://cdn.luogu.com.cn/upload/pic/53358.png)\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u5bf9\u5076\u56fe\u7406\u89e3\u4e3a\u63d2\u5b54\uff1f\u5bf9\u5076\u56fe\u7684\u67d0\u4e00\u8fb9\u8fb9\u6743\u5c31\u662f\u90a3\u6761\u8fb9\u6240\u4ea4\u53c9\u7684\u539f\u56fe\u7684\u8fb9\u6743\u3002\u6bd4\u5982\u4e0a\u56fe$W_{0->17}=W_{1->4}=5$\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u5bf9\u5076\u56fe\u6765\u7ef4\u62a4\u8fde\u901a\u6027\u7684\u95ee\u9898\u5566\uff01\n\n\u5148\u6765\u4e00\u9053\u6c34\u9898\uff08\u4e0d\u77e5\u9053\u54ea\u6765\u7684\uff09\n\n\u8bf7\u60a8\u7ef4\u62a4\u4e00\u5f20$n*n(n\\leq1000)$\u7684\u7f51\u683c\u56fe(\u6ca1\u6709\u8fb9\u6743)\uff0c\u521d\u59cb\u6240\u6709\u8fb9\u90fd\u5728\uff0c\u5c31\u50cf\u8fd9\u6837\n\n![](https://cdn.luogu.com.cn/upload/pic/53359.png)\n\n> \u8fd9\u662f\u4e00\u5f20 $3*3$ \u7684\u7f51\u683c\u56fe\n\n\u4e4b\u540e\u6709$m(m\\leq100000)$\u4e2a\u64cd\u4f5c\uff0c\u5272\u53bb$(x_1,y_1)$\u5230$(x_2,y_2)$\u7684\u8fb9\uff0c\u4fdd\u8bc1\u4e0d\u4f1a\u5272\u53bb\u91cd\u590d\u7684\u8fb9\n\n\u521d\u59cb\u6574\u5f20\u56fe\u662f\u4e00\u4e2a\u8054\u901a\u5757\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u64cd\u4f5c\uff0c\u5982\u679c\u4f7f\u8054\u901a\u5757\u7684\u6570\u91cf\u53d8\u591a\u4e86\uff0c\u8bf7\u8f93\u51fa\u5b83\u662f\u7b2c\u51e0\u4e2a\u64cd\u4f5c\u3002\n\n\u8bfb\u5b8c\u9898\uff0c\u53d1\u73b0\u849f\u84bb\u6211\u4e0d\u4f1a\u5220\u8fb9\uff0c\u4e8e\u662f\u5c31\u7528\u5230\u5bf9\u5076\u56fe\u8fd9\u4e2a\u4e1c\u897f\u3002\n\n\u4e0a\u6587\u6211\u4eec\u63d0\u5230\n\n> \u5bf9\u5076\u56fe\u7684\u67d0\u4e00\u8fb9\u8fb9\u6743\u5c31\u662f\u90a3\u6761\u8fb9\u6240\u4ea4\u53c9\u7684\u539f\u56fe\u7684\u8fb9\u6743\n\n\u6211\u4eec\u4e0d\u59a8\u628a\u5bf9\u5076\u56fe\u7684\u8fb9\u6743\u7406\u89e3\u6210\u5272\u6389\u539f\u56fe\u7684\u8fb9\u7684\u4ee3\u4ef7\uff08\u4f3c\u4e4e\u53d8\u6210\u6700\u5c0f\u5272=.=\u4e86\uff09\uff0c\u4e8e\u662f\u6211\u4eec\u901a\u8fc7**\u7ef4\u62a4\u5bf9\u5076\u56fe\u7684\u8fde\u901a\u6027\uff0c\u53cd\u800c\u53ef\u4ee5\u5f97\u51fa\u539f\u56fe\u7684\u4e0d\u8fde\u901a\u6027**\u3002\n\n\u7136\u540e\u7ef4\u62a4\u8fde\u901a\u6027\u7528\u5e76\u67e5\u96c6\u5c31\u597d\u4e86\uff0c\u5982\u679c$findfa(x1,y1)==findfa(x2,x2)$,\u90a3\u5c31$ans++$\uff08\u56e0\u4e3a\u9898\u76ee\u4fdd\u8bc1\u4e86\u4fdd\u8bc1\u4e0d\u4f1a\u5272\u53bb\u91cd\u590d\u8fb9\uff09\n\n\u597d\u4e86\uff0c\u77e5\u9053\u4e86\u8fd9\u4e9b\u77e5\u8bc6\u5c31\u53ef\u4ee5\u79d2\u4e86\u8fd9\u9053\u9898\u4e86\n\n\u628a\u5de6\u4e0b \u548c \u53f3\u4e0a\u5206\u5f00\uff0cdijkstra\u6c42\u5de6\u4e0b\u5230\u53f3\u4e0a\u7684\u6700\u77ed\u8def\n\n**\u7ef4\u62a4\u5bf9\u5076\u56fe\u7684\u6700\u77ed\u8def\uff0c\u53cd\u800c\u53ef\u4ee5\u5f97\u51fa\u539f\u56fe\u7684\u6700\u5c0f\u5272**\n\n\u5bf9\u4e8e\u9898\u76ee\u6837\u4f8b\n\n![](https://cdn.luogu.com.cn/upload/pic/53360.png)\n\n\u5efa\u4e00\u4e2a\u8fd9\u6837\u7684\u56fe\uff0c\u8dd1dij\u5c31\u884c\u4e86\n\n![](https://cdn.luogu.com.cn/upload/pic/53361.png)\n\n\u53ea\u662f\u5bf9\u5076\u56fe\u5efa\u56fe\u6709\u70b9\u6076\u5fc3\n\n\u8bf7\u81ea\u5df1\u601d\u8003\u4e00\u4e0b\u600e\u4e48\u8f6c\u5bf9\u5076\u56fe\u5427\u2026\u2026\u6211\u662f\u89e3\u91ca\u4e0d\u6e05\n\n\n\n```\n//\u672c\u7bc7\u4ee3\u7801\u4ee5(n,m)\u4e3a\u539f\u70b9 (n+1,m+1)\u4e3a\u7ec8\u70b9\n#include<cstdio>\n#include<cstring>\n#include<ctime>\n#include<algorithm>\n#include<queue>\n\n#define rg register\n#define MAXN (2000+10)\n\nint head[MAXN][MAXN],tot;\nstruct edge{\n    int next,x,y,w;\n}h[MAXN*MAXN*2*2];\ninline void addedge(int x,int y,int x1,int y1,int w){\t//\u5efa\u8fb9\n    h[++tot].next = head[x][y];\n    head[x][y] = tot;\n    h[tot].x = x1, h[tot].y = y1;\n    h[tot].w = w;\n}\n\nstruct node{\n    int x,y,w;\n    bool operator < (const node b) const{\n        return b.w<w;\n    }\n};\nint n,m;\nbool vis[MAXN][MAXN];\nint dis[MAXN][MAXN];\nvoid dij(int stx,int sty){//\u6700\u77ed\u8def\n    memset(dis,0x3f,sizeof(dis));\n    std::priority_queue<node> q;\n    dis[stx][sty] = 0;\n    q.push((node){stx , sty , 0});\n    while(!q.empty()){\n        node now = q.top();\n        q.pop();\n        int x = now.x,y = now.y;\n        //printf(\"%d %d \\n\",x,y);\n        if(vis[x][y])\tcontinue;\n        vis[x][y] = 1;\n        for(rg int i = head[x][y] ; i ; i = h[i].next){\n            int tox = h[i].x,toy = h[i].y,w = h[i].w;\n            //printf(\"trying %d %d dis = %d \\n\",tox,toy,dis[tox][toy]);\n            if(dis[x][y] + w < dis[tox][toy]){\n                dis[tox][toy] = dis[x][y] + w;\n                //printf(\"CHange dis[%d][%d]=%d \\n\",tox,toy,dis[tox][toy]);\n                if(!vis[tox][toy])\tq.push((node){tox,toy,dis[tox][toy]});\n            }\n        }\n    }\n    return ;\n}\n\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    if(n==1){\n        int ans=1<<30;\n        for(rg int i = 1 , w;i < m ; ++i){\n            scanf(\"%d\",&w);\n            if(w < ans) ans = w;\n        }\n        printf(\"%d \\n\",ans);\n        return 0;\n    }\n    if(m == 1){\n        int ans=1<<30;\n        for(rg int i = 1 , w;i < n ; ++i){\n            scanf(\"%d\",&w);\n            if(w < ans) ans = w;\n        }\n        printf(\"%d \\n\",ans);\n        return 0;\n    }\n    for(rg int i = 1 ,w; i <= n ; ++i){\n        for(rg int j = 1 ; j < m ; ++j){//\u6b64\u540e\u6bd2\u7624\u5efa\u56fe\n            scanf(\"%d\",&w);\n            if(i == 1){\n                addedge(i,j<<1,n+1,m+1,w);\n                addedge(n+1,m+1,i,j<<1,w);\n            }\n            else if(i == n){\n                addedge(i-1,(j<<1)-1,n,m,w);\n                addedge(n,m,i-1,(j<<1)-1,w);\n            }\n            else{\n                addedge(i-1,(j<<1)-1,i,j<<1,w);\n                addedge(i,j<<1,i-1,(j<<1)-1,w);\n            }\n        }\n    }\n    for(rg int i = 1,w ; i < n ; ++i){\n        for(rg int j = 1 ; j <= m ;++j){\n            scanf(\"%d\",&w);\n            if(j == 1){\n                addedge(n,m,i,(j<<1)-1,w);\n                addedge(i,(j<<1)-1,n,m,w);\n            }\n            else if(j == m){\n                addedge(n+1,m+1,i,(m-1)<<1,w);\n                addedge(i,(m-1)<<1,n+1,m+1,w);\n            }\n            else{\n                addedge(i,(j-1)<<1,i,(j-1)<<1|1,w);\n                addedge(i,(j-1)<<1|1,i,(j-1)<<1,w);\n            }\n        }\n    }\n    for(rg int i = 1,w; i < n ;i++){\n        for(rg int j = 1; j < m ; ++j){\n            scanf(\"%d\",&w);\n            addedge(i,(j<<1)-1,i,j<<1,w);\n            addedge(i,j<<1,i,(j<<1)-1,w);\n        }\n    }\n    dij(n,m);\n    printf(\"%d \\n\",dis[n+1][m+1]);\n    return 0;\n}\n```\n",
        "postTime": 1551951227,
        "uid": 47863,
        "name": "Imakf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4001 \u3010[ICPC-Beijing 2006]\u72fc\u6293\u5154\u5b50\u3011"
    },
    {
        "content": "\u6211\u6ee1\u5fc3\u4ee5\u4e3a\u672c\u9898\u6b63\u89e3\u4e3a\u6700\u77ed\u8def\uff0c\u7ed3\u679c\u5230\u5904\u90fd\u662f\u6700\u5927\u6d41\u2026\u2026\n\n\u51e0\u4e4e\u6240\u6709\u7684\u90fd\u5199\u4e86\u4ec0\u4e48\u201c\u5bf9\u5076\u56fe\u201d\u8dd1\u6700\u77ed\u8def~~\uff0c\u4f46\u6211\u771f\u7684\u4e0d\u77e5\u9053\u4ec0\u4e48\u53eb\u505a\u5bf9\u5076\u56fe~~\n___\n\u4ecb\u7ecd\u4e00\u4e0b\u672c\u9898\u7684\u6700\u77ed\u8def\u7b97\u6cd5\u53ed\u3002\u5e76\u4e0d\u7b97\u96be\u3002\u4e3b\u8981\u662f\u611f\u6027\u7406\u89e3\u3002\n\n![t1](https://cdn.luogu.com.cn/upload/pic/11942.png)\n\n\u9996\u5148~~\u5f88\u5bb9\u6613~~\u89c2\u5bdf\u51fa\u8fd9\u662f\u4e00\u4e2a\u6700\u5c0f\u5272\uff0c\u90a3\u4e48\u5c31\u662f\u6c42\u6700\u5927\u6d41\u4e86\u3002\n\n\u4f46\u662f\u8fd9\u9898\u7684\u70b9\u6570\u9ad8\u8fbe10e6\uff0c\u6309\u5e38\u7406\u6765\u8bf4\u6700\u5927\u6d41\u5e94\u8be5\u7a33\u7a33\u5730TLE\u3002\n~~\u4f46\u662f\u6ca1\u6709T\u597d\u6c14\u54e6~~\n\n**\u90a3\u4e48\u60f3\u529e\u6cd5\uff01**\n\n\u9996\u5148\u6700\u5c0f\u5272\u5728\u672c\u9898\u65f6\u53ef\u4ee5\u8fd9\u6837\u611f\u6027\u7406\u89e3\uff1a\u4e0a\u56fe\u662f\u4e00\u4e2a\u4f60\u540c\u5b66\u5728\u94a2\u94c1\u5382\u6253\u51fa\u6765\u7684\u4e00\u4e2a\u94c1\u67b6\u5b50\u3002\u4f60\u628astart\u5904\u7528\u624b\u634f\u8d77\u6765\uff0cend\u5904\u81ea\u7136\u5782\u4e0b\u3002\u7528\u4e00\u4e2a\u526a\u5200\u94b3\u628a\u8fd9\u4e2a\u94c1\u67b6\u5b50\u62e6\u8170\u526a\u6210\u4e24\u534a\u3002\n\n\u5982\u679c\u526a\u6210\u597d\u51e0\u74e3\uff08\u6389\u4e0b\u6765\u6709\u597d\u51e0\u4e2a\u8054\u901a\u5757\u7684\uff09\uff0c\u90a3\u4e48\u663e\u800c\u6613\u89c1\uff0c\u4e0d\u5982\u526a\u6210\u4e24\u534a\uff08\u628a\u521a\u624d\u51e0\u4e2a\u526a\u65ad\u7684\u5730\u65b9\u539f\u6837\u62fc\u8d77\u6765\u53d8\u6210\u4e24\u4e2a\u8054\u901a\u5757\uff09\u3002\n\n\u6211\u4eec\u628a\u4e09\u89d2\u5f62\u770b\u6210\u662f\u70b9\uff0c\u9ed1\u8272\u7684\u8fb9\u770b\u6210\u662f\u8fde\u63a5\u4e09\u89d2\u5f62\u7684\u8fb9\uff0c\u90a3\u4e48\u526a\u6210\u4e24\u534a\u7684\u610f\u601d\u662f\u2026\u2026\u5728\u4e09\u89d2\u5f62\u70b9\u7684\u56fe\u4e0a\u627e\u4e00\u6761\u4ece\u5de6\u4e0b\u5230\u53f3\u4e0a\u7684\u6700\u77ed\u8def\u5f84\uff01\u6cbf\u7740\u8fd9\u6761\u8def\u5f84\u526a\u5f00\u5c31\u884c\u4e86\u3002\n\n\u4f46\u662f\u8fd9\u9898\u7684\u70b9\u6570\u9ad8\u8fbe10e6\uff0c\u6309\u5e38\u7406\u6765\u8bf4SPFA\u5e94\u8be5\u7a33\u7a33\u5730TLE\u3002\n~~\u4f46\u662f\u6ca1\u6709T\u597d\u6c14\u54e6~~\n\n\u90a3\u5c31\u5806\u4f18\u5316dijkstra\u3002\n\n\u8fd9\u4e2a\u52a0\u8fb9\u8d85\u70e6\u7684\u3002\u4f46\u601d\u8def\u6e05\u6670\u7684\u8bdd\u5c31\u6ca1\u4ec0\u4e48\u95ee\u9898\u3002\u8bb0\u5f97\u5728\u5de6\u4e0b\u7a7a\u767d\u5904\u8bbe\u4e00\u4e2a\u6e90\u70b9\uff0c\u53f3\u4e0a\u89d2\u8bbe\u4e00\u4e2a\u6c47\u70b9\u3002\u6e90\u70b9\u8fde\u63a5\u6240\u6709\u90bb\u63a5\u5b83\u7684\u5de6\u8fb9\u7684\u3001\u4e0b\u8fb9\u7684\u4e09\u89d2\u5f62\u70b9\uff0c\u6c47\u70b9\u8fde\u63a5\u6240\u6709\u90bb\u63a5\u5b83\u7684\u53f3\u8fb9\u7684\u3001\u4e0a\u8fb9\u7684\u4e09\u89d2\u5f62\u70b9\u3002\n\n```\n#include <cstdio>\n#include <queue>\nusing namespace std;\nconst int N=1002,S=N*N*6+30,inf=(1<<30)-1;\nint n,m,a[N][N],b[N][N],c[N][N],d[S],id[N][N],ss,tt,h[S],v[S],nx[S],w[S],eg=1;\nbool vis[S]={0};\nstruct info\n{\n\tint x,w;\n}data;\ninline bool operator<(const info &a,const info &b)\n{\n\treturn a.w>b.w;\n}\npriority_queue<struct info> pq;\ninline void egadd(int uu,int vv,int ww)\n{\n\tnx[++eg]=h[uu];h[uu]=eg;\n\tv[eg]=vv;w[eg]=ww;\n}\nvoid rd(int &s)\n{\n\ts=0;char c=getchar();\n\twhile (c<48) c=getchar();\n\twhile (c>=48) s=(s<<1)+(s<<3)+(c^48),c=getchar();\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=1;j<=m-1;j++)\n\t\t\trd(a[i][j]);\n\tfor (int i=1;i<=n-1;i++)\n\t\tfor (int j=1;j<=m;j++)\n\t\t\trd(b[i][j]);\n\tfor (int i=1;i<=n-1;i++)\n\t\tfor (int j=1;j<=m-1;j++)\n\t\t\trd(c[i][j]);\n\tn--;m--;//\u6ce8\u610f\u8fd9\u91cc\u6211\u4eba\u4e3a\u5730\u628an\u548cm\u51cf1\uff0c\u8fd9\u6837\u8868\u793a\u4e09\u89d2\u5f62\u70b9\u65b9\u4fbf\u4e9b\u3002\n\tif (!n)\n\t{\n\t\tint res=inf;\n\t\tfor (int i=1;i<=m;i++)\n\t\t\tif (a[1][i]<res)\n\t\t\t\tres=a[1][i];\n\t\tprintf(\"%d\",res);\n\t\treturn 0;\n\t}\n\tif (!m)\n\t{\n\t\tint res=inf;\n\t\tfor (int i=1;i<=n;i++)\n\t\t\tif (b[i][1]<res)\n\t\t\t\tres=b[i][1];\n\t\tprintf(\"%d\",res);\n\t\treturn 0;\n\t}\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=1;j<=m;j++)\n\t\t\tid[i][j]=(i-1)*2*m+j;\n\tss=n*2*m+1;tt=ss+1;\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=1;j<=m;j++)\n\t\t{\n\t\t\tegadd(id[i][j],id[i][j]+m,c[i][j]);\n\t\t\tegadd(id[i][j]+m,id[i][j],c[i][j]);\n\t\t}\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=1;j<=m-1;j++)\n\t\t{\n\t\t\tegadd(id[i][j],id[i][j+1]+m,b[i][j+1]);\n\t\t\tegadd(id[i][j+1]+m,id[i][j],b[i][j+1]);\n\t\t}\n\tfor (int i=1;i<=n-1;i++)\n\t\tfor (int j=1;j<=m;j++)\n\t\t{\n\t\t\tegadd(id[i][j]+m,id[i+1][j],a[i+1][j]);\n\t\t\tegadd(id[i+1][j],id[i][j]+m,a[i+1][j]);\n\t\t}\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tegadd(id[1][i],tt,a[1][i]);\n\t\tegadd(ss,id[n][i]+m,a[n+1][i]);\n\t}\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tegadd(ss,id[i][1]+m,b[i][1]);\n\t\tegadd(id[i][m],tt,b[i][m+1]);\n\t}\n\tfor (int i=1;i<=tt;i++)\n\t\td[i]=inf;\n\td[ss]=0;\n\tpq.push((info){ss,0});\n\twhile (!pq.empty())\n\t{\n\t\twhile (!pq.empty() && vis[pq.top().x])\n\t\t\tpq.pop();\n\t\tif (pq.empty()) break;\n\t\tdata=pq.top();\n\t\tpq.pop();\n\t\tint x=data.x,ww=data.w;\n\t\tvis[x]=true;\n\t\tfor (int i=h[x];i;i=nx[i])\n\t\t\tif (!vis[v[i]] && d[v[i]]>ww+w[i])\n\t\t\t{\n\t\t\t\td[v[i]]=ww+w[i];\n\t\t\t\tpq.push((info){v[i],d[v[i]]});\n\t\t\t}\n\t}\n\tprintf(\"%d\",d[tt]);\n\treturn 0;\n}\n```\n",
        "postTime": 1549546197,
        "uid": 34907,
        "name": "Hygebra",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4001 \u3010[ICPC-Beijing 2006]\u72fc\u6293\u5154\u5b50\u3011"
    },
    {
        "content": "\u5199\u4e2a\u6709\u5f53\u524d\u5f27\u4f18\u5316\u7684dinic\u3002\n\n\u8fd9\u4e2a\u9898\u76ee\u662f\u7f51\u7edc\u6d41\u4e2d\u6700\u5927\u6d41\u6700\u5c0f\u5272\u5b9a\u7406\u7684\u57fa\u672c\u9898\u3002\n\n\u5728\u7f51\u7edc\u6d41\u4e2d\uff0c\u5272\u662f\u7f51\u7edc\u4e2d\u5b9a\u70b9\u7684\u4e00\u4e2a\u5212\u5206\uff0c\u5b83\u628a\u7f51\u7edc\u4e2d\u7684\u6240\u6709\u9876\u70b9\u5212\u5206\u6210\u4e24\u4e2a\u9876\u70b9\u96c6\u5408S\u548cT\uff0c\u5176\u4e2d\u6e90\u70b9$s\\in S$,\u6c47\u70b9$t\\in T$\u3002\u8bb0\u4e3aCUT(S,T).\u8fd9\u4e9b\u5272\u4e2d\u6700\u5c0f\u7684\u5c31\u662f\u6700\u5c0f\u5272\u4e86\u3002\n\n\u5173\u4e8e\u6700\u5927\u6d41=\u6700\u5c0f\u5272\uff0c\u8bc1\u660e\u5982\u4e0b\uff08\u9009\u81ea\u674e\u826f\u6750. \u7f51\u7edc\u6700\u5927\u6d41\u7684\u4e00\u4e2a\u7b97\u6cd5[J]. \u7518\u8083\u5de5\u4e1a\u5927\u5b66\u5b66\u62a5,1981,(01):64-74.\uff09\n\n\u5982\u679cf\u662f\u7f51\u7edc\u4e2d\u7684\u4e00\u4e2a\u6d41\uff0cCUT(S,T)\u662f\u4efb\u610f\u4e00\u4e2a\u5272\uff0c\u90a3\u4e48f\u7684\u503c\u7b49\u4e8e\u6b63\u5411\u5272\u8fb9\u7684\u6d41\u91cf\u4e0e\u8d1f\u5411\u5272\u8fb9\u7684\u6d41\u91cf\u4e4b\u5dee\u3002\n\n\u8bc1\u660e\uff1a\n\n\u3000\u3000\u8bbeX\u548cY\u662f\u7f51\u7edc\u4e2d\u7684\u4e24\u4e2a\u9876\u70b9\u96c6\u5408\uff0c\u7528f\uff08X,Y\uff09\u8868\u793a\u4eceX\u4e2d\u7684\u4e00\u4e2a\u9876\u70b9\u6307\u5411Y\u7684\u4e00\u4e2a\u9876\u70b9\u7684\u6240\u6709\u5f27\uff08\u5f27\u5c3e\u5728X\u4e2d\uff0c\u5f27\u5934\u5728Y\u4e2d $X\\rightarrow Y$\uff09\u7684\u6d41\u91cf\u548c\u3002\u53ea\u9700\u8bc1\u660e\uff1af=f(S,T)-f(T,S) \u5373\u53ef\u3002\n  \n\u4e0b\u5217\u7ed3\u8bba\u6210\u7acb\uff1a\n\n\u5982\u679c$X \\cap Y$= $\\phi$ \uff0c\u90a3\u4e48\uff1a$$f(X,(Y1 \\cup Y2))=f(X,Y1)+f(X,Y2)$$\n$$f((X1 \\cup X2),Y)=f(X1,Y)+f(X2,Y)$$ \u6210\u7acb\u3002\n\n\u6839\u636e\u7f51\u7edc\u6d41\u7684\u7279\u70b9\uff1a\n  \n\u5982\u679cV\u65e2\u4e0d\u662f\u6e90\u70b9\u4e5f\u4e0d\u662f\u6c47\u70b9\uff0c\u90a3\u4e48\uff1a f({V},$S\\cup T$)-f($S\\cup T$,{V})=0\uff1b\u4efb\u4f55\u4e00\u4e2a\u70b9\uff0c\u6d41\u5165\u7684\u4e0e\u6d41\u51fa\u7684\u91cf\u76f8\u7b49\u3002\n\n\u5982\u679cV\u662f\u6e90\uff0c\u90a3\u4e48\uff1af({V},$S\\cup T$)-f(S\u222aT,{V})=f\u3002\n\n\u5bf9\u4e8eS\u4e2d\u7684\u6240\u6709\u70b9V\u90fd\u6709\u4e0a\u8ff0\u5173\u7cfb\u5f0f\uff0c\u76f8\u52a0\u5f97\u5230\uff1af(S,$S\\cup T$)-f($S\\cup T$,S)=f \u3002\n\n\u53c8\u56e0\u4e3a\uff1a f(S,$S\\cup T$)-f ($S\\cup T$,S)= (f(S,S)+f (S,T))-(f(S,S) +f (T,S))= f(S,T)- f(T,S)\uff0c\n\n\u6240\u4ee5\uff1af= f(S,T)- f(T,S) \u5b9a\u7406\u5f97\u8bc1\u3002\n\n\u4ee4\u5272CUT\uff08S,T\uff09\u7684\u5bb9\u91cf\u4e3aC\uff0c\u6240\u4ee5\u6d41f\u7684\u6d41\u91cf\u4e5f\u4e3aC\u3002\u5047\u8bbe\u53e6\u5916\u7684\u4efb\u610f\u6d41f1\uff0c\u6d41\u91cf\u4e3ac1\uff0c\u6839\u636e\u6d41\u91cf\u4e0d\u8d85\u8fc7\u5272\u7684\u5bb9\u91cf\uff0c\u5219c1<=c,\u6240\u4ee5f\u662f\u6700\u5927\u6d41\u3002 \n\n\u5047\u8bbe\u53e6\u5916\u7684\u4efb\u610f\u5272CUT\uff08S1,T1\uff09\uff0c\u5bb9\u91cf\u4e3ac1\uff0c\u6839\u636e\u6d41\u91cf\u4e0d\u8d85\u8fc7\u5272\u7684\u5bb9\u91cf\uff0c\u6240\u4ee5\u6709c1>=c,\u6545\uff0cCUT\uff08S,T\uff09\u662f\u6700\u5c0f\u5272\n\n\u4f3c\u4e4e\u8bf4\u7684\u6709\u70b9\u591a\uff0c\u4e0d\u8fc7\u4e0a\u9762\u90a3\u4e00\u6bb5\u5728\u5f88\u591a\u535a\u5ba2\u4e2d\u5176\u5b9e\u90fd\u627e\u5f97\u5230\u3002\n\n\u8fd9\u4e2a\u9898\u76ee\u5c31\u662f\u4e0a\u9762\u8fd9\u4e2a\u4e1c\u897f\u7684\u4e00\u4e2a\u7ecf\u5178\u8fd0\u7528\u3002\u8fde\u8fb9\u7684\u65b9\u5f0f\u9898\u76ee\u4e2d\u5df2\u7ecf\u7ed9\u51fa\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002\u6ce8\u610f\u6570\u7ec4\u5927\u5c0f\u3002\n\n\u6a2a\u5411\u8fb9\u4e00\u5171\u6709$n\\times(m-1)$\u6761\uff0c\u7eb5\u5411\u8fb9\u4e00\u5171\u6709$(n-1)\\times m$\u6761\uff0c\u659c\u5411\u8fb9\u4e00\u5171\u6709$(n-1)\\times(m-1)$\u6761\u3002\n\n\u5f53$n=1000,m=1000$\u65f6\uff0c\u5149\u5355\u5411\u8fb9\u5c31\u6709\u7ea6300\u4e07\u6761\uff0c\u56e0\u4e3a\u662f\u65e0\u5411\u56fe\uff0c\u4e58\u4e0a2\u5c31\u8981\u5f00600\u4e07\u7684\u6570\u7ec4\uff0c\u56e0\u6b64\u6ce8\u610f\u5185\u5b58\u3002\n\n\u7136\u540e\u8fd9\u4e2a\u9898\u76ee\u7684\u5efa\u56fe\u65b9\u5f0f\u76f8\u4fe1\u5927\u5bb6\u90fd\u4f1a\uff0c\u4e00\u5171\u6709$n\\times m$\u4e2a\u70b9\uff0c\u6807\u8bb0\u5de6\u4e0a\u89d2\u7684\u70b9\u7f16\u53f7\u4e3a1\uff0c\u518d\u5f80\u53f3\u8fb9\u7684\u70b9\u662f2\uff0c\u518d\u53f3\u8fb9\u662f3\u2026\u2026\u7b2c\u4e8c\u884c\u7b2c\u4e00\u4e2a\u662fm+1\u2026\u2026\u56e0\u6b64\u53ef\u4ee5\u6bd4\u8f83\u7b80\u5355\u5730\u63a8\u51fa\u5efa\u8fb9\u4e2d\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n// luogu-judger-enable-o2\n#include <iostream>\n#include <cstdio>\n#include <queue>\n#include <cstring>\n\nusing namespace std;\n\nconst int INF=1<<28;\n\nint n,m;\n\nlong long ans;\n\nint first[6000005],nxt[6000005],tail[6000005],e=1,s=1,t,d[1000005],r[6000005],cur[1000005];\n\nqueue <int> q;\n\nvoid link(int u,int v,int c)\n{\n    nxt[++e]=first[u];\n    first[u]=e;\n    tail[e]=v;\n    r[e]=c;\n    nxt[++e]=first[v];\n    first[v]=e;\n    tail[e]=u;\n    r[e]=c; //\u6b8b\u91cf\u7f51\u7edc\u4e00\u5b9a\u8981\u662fc\uff0c\u8840\u7684\u6559\u8bad\n}\n\nbool BFS()\n{\n    q.push(t);\n    memset(d,0,sizeof(d));\n    d[t]=1;\n    while (!q.empty())\n    {\n        int v=q.front();\n        q.pop();\n        for (int e=first[v];e;e=nxt[e])\n        {\n            int u=tail[e];\n            if (d[u]==0 && r[e^1]>0)\n            {\n                d[u]=d[v]+1;\n                q.push(u);\n            }\n        }\n    }\n    return (d[s]>0);\n}\n\nint DFS(int u,int budget)\n{\n    if (u==t)\n        return budget;\n    int res=0;\n    for (int &e=cur[u];e!=0;e=nxt[e])\n    {\n        int v=tail[e];\n        if (d[v]+1==d[u] && r[e]>0)\n        {\n            int delta=DFS(v,min(r[e],budget));\n            res+=delta;\n            budget-=delta;\n            r[e]-=delta;\n            r[e^1]+=delta;\n            if (budget==0)\n                break;\n        }\n    }\n    return res;\n}\n\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    t=n*m;\n    for (int i=1;i<=n;i++)\n    {\n        for (int j=1;j<m;j++)\n        {\n            int d;\n            scanf(\"%d\",&d);\n            link(m*(i-1)+j,m*(i-1)+j+1,d);\n            //cout << m*(i-1)+j << \" \" << m*(i-1)+j+1 << endl;\n        }\n    }\n    for (int i=1;i<n;i++)\n    {\n        for (int j=1;j<=m;j++)\n        {\n            int d;\n            scanf(\"%d\",&d);\n            link(m*(i-1)+j,m*i+j,d);\n            //cout << m*(i-1)+j << \" \" << m*i+j << endl;\n        }\n    }\n    for (int i=1;i<n;i++)\n    {\n        for (int j=1;j<m;j++)\n        {\n            int d;\n            scanf(\"%d\",&d);\n            link(m*(i-1)+j,m*i+j+1,d);\n            //cout << m*(i-1)+j << \" \" << m*i+j+1 << endl;\n        }\n    }\n    while (BFS())\n    {\n        for (int i=s;i<=t;i++)\n            cur[i]=first[i];\n        ans+=DFS(s,INF);\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1523520928,
        "uid": 8457,
        "name": "chen_zhe",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4001 \u3010[BJOI2006]\u72fc\u6293\u5154\u5b50\u3011"
    },
    {
        "content": "### \u5148\u4e86\u89e3\u4e00\u4e0b\u4e24\u4e2a\u4e1c\u897f\n\n\u6700\u5927\u6d41\uff1a\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u80fd\u5b9e\u73b0\u7684\u6700\u5927\u7684\u6d41\u91cf\n\n\u3000\u3000\u901a\u4fd7\u70b9\u89e3\u91ca\uff0c\u5c31\u597d\u6bd4\u4f60\u6709\u5f88\u591a\u8d27\u7269\u8981\u4ece\u6e90\u70b9\u70b9\u8fd0\u5230\u6c47\u70b9\u70b9\uff0c\u6709\u5411\u56fe\u4e2d\u7684\u4e00\u6761\u8fb9\u4ee3\u8868\u4e00\u6761\u516c\u8def\uff0c\u6bcf\u6761\u516c\u8def\u6709\u56fa\u5b9a\u7684\u8d27\u7269\u88c5\u8f7d\u9650\u5236\uff08\u5bb9\u91cf\uff09\uff0c\u5bf9\u6bcf\u6761\u516c\u8def\u4f60\u53ea\u80fd\u8fd0\u8f93\u4e00\u5b9a\u6570\u91cf\u7684\u8d27\u7269\uff0c\u95ee\u4f60\u6bcf\u4e00\u6b21\u8fd0\u8f93\u6700\u591a\u8fd0\u5230\u6c47\u70b9\u70b9\u591a\u5c11\u8d27\u7269\u3002\n\n\u6700\u5c0f\u5272\uff1a\u5bf9\u4e8e\u4e00\u5f20\u6d41\u91cf\u56feG\uff0c\u65ad\u5f00\u4e00\u4e9b\u8fb9\u540e\uff0c\u6e90\u70b9s\u548c\u6c47\u70b9t\u5c31\u4e0d\u5728\u8fde\u901a\uff0c\u6211\u4eec\u5c06\u8fd9\u6837\u7684k\u6761\u8fb9\u7684\u6743\u503c\uff08\u5373\u6700\u5927\u5bb9\u91cf\uff09\u548c\u6c42\u548c\uff0c\u6c42\u548c\u540e\u7684\u503c\u79f0\u4e3a\u5272\u3002\u663e\u7136\uff0c\u5bf9\u4e8e\u4e00\u5f20\u6d41\u91cf\u56feG\uff0c\u5272\u6709\u5f88\u591a\u4e2a\u4e14\u4e0d\u5c3d\u76f8\u540c\u3002\u6211\u4eec\u8981\u6c42\u7684\u5c31\u662f\u6240\u6709\u5272\u4e2d\u6743\u503c\u6700\u5c0f\u7684\u90a3\u4e00\u4e2a\uff08\u53ef\u80fd\u4e0d\u552f\u4e00\uff09\uff0c\u5373\u82b1\u6700\u5c0f\u7684\u4ee3\u4ef7\u4f7fs\u548ct\u4e0d\u5728\u540c\u4e00\u96c6\u5408\u4e2d\u3002\n\n \n### \u5f15\u7406\uff1a \u6700\u5927\u6d41\u6700\u5c0f\u5272\u5b9a\u7406\n\n- \u4efb\u610f\u4e00\u4e2a\u6d41\u90fd\u5c0f\u4e8e\u7b49\u4e8e\u4efb\u610f\u4e00\u4e2a\u5272\n- \u6784\u9020\u51fa\u4e00\u4e2a\u6d41\u7b49\u4e8e\u4e00\u4e2a\u5272\n- \u5728\u4e00\u5f20\u6d41\u91cf\u56feG\u4e2d\uff0c\u6700\u5927\u6d41=\u6700\u5c0f\u5272\u3002\n\n\u4efb\u610f\u4e24\u8fb9\u7684\u4ea4\u70b9\u5728\u9876\u70b9\u4e0a\u7684\u56fe\u6211\u4eec\u79f0\u4e3a\u5e73\u9762\u56fe\n\n\u8fd9\u9053\u9898\u5f88\u5bb9\u6613\u770b\u51fa\u6765\u662f\u6c42\u6700\u5927\u6d41\uff0c\u90a3\u4e48\u53ef\u4ee5\u8f6c\u5316\u4e3a\u6700\u5c0f\u5272\u6765\u505a\n\n![1](https://cdn.luogu.com.cn/upload/image_hosting/wg0k756k.png)\n\u5982\u56fe\uff0c\u76f8\u5f53\u4e8e\u662f\u5728\u4e0a\u4e0b\u4e24\u4e2a\u56fe\u5f62\u4e0a\u9762\u8fde\u4e86\u4e00\u6761\u8fb9\uff0c\u800c\u8fd9\u6761\u8fb9\u7684\u8fb9\u6743\u5c31\u662f4,5\u8fd9\u6761\u8fb9\u7684\u8fb9\u6743\n\n\u90a3\u4e48\u8fd9\u4e2a\u95ee\u9898\u4e0d\u5c31\u53d8\u6210\u4e86\u8fd9\u6837\n![2](https://cdn.luogu.com.cn/upload/image_hosting/8zkh0ole.png)\n\n\uff08\u5ffd\u7565\u6389\u539f\u6765\u7684\u4e5d\u4e2a\u70b9\uff09\n\n\u5728\u8fd9\u5f20\u65b0\u56fe\u4e0a\u9762\u627e\u6700\u77ed\u8def\n\n\u6211\u4eec\u53d1\u73b0\u6709\u5f88\u591a\u8fde\u5230\u56fe\u5f62\u5916\u9762\u7684\u70b9\uff0c\u6211\u4eec\u4e0d\u59a8\u628a\u4ed6\u4eec\u5408\u5e76\u4e00\u4e0b\n\n![3](https://cdn.luogu.com.cn/upload/image_hosting/nnqrt3xz.png)\n\n\uff08\u6807\u7ea2\u7684\u662f\u5bf9\u5076\u56fe\u7684\u8fb9\uff09\n\n\u90a3\u4e48\u5c31\u662f\u5bfb\u627e\u6e90\u70b913->\u6c47\u70b914\u7684\u6700\u77ed\u8def\n\n\u5b9a\u7406\uff1a\u5e73\u9762\u56fe\u7684\u6700\u5c0f\u5272=\u5bf9\u5076\u56fe\u7684\u6700\u77ed\u8def\n\n\n \u5bf9\u4e8e\u6837\u4f8b\u7684\u6570\u636e\u5c31\u662f\u8fd9\u6837\n ![4](https://cdn.luogu.com.cn/upload/image_hosting/87im3z6z.png)\n \n \u53ea\u9700\u8981\u4ece\u6e90\u70b9\u5230\u6c47\u70b9\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u5c31\u884c\u4e86",
        "postTime": 1571831858,
        "uid": 177510,
        "name": "\u5c0f\u849f\u84bb\u76ae\u76ae\u9c7c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4001 \u3010[ICPC-Beijing 2006]\u72fc\u6293\u5154\u5b50\u3011"
    },
    {
        "content": "[$$\\Large\\texttt{My Blog}$$](https://hydingsy.github.io/)\n\n---\n\n> \u9898\u76ee\u94fe\u63a5\uff1a[BZOJ 1001](https://www.lydsy.com/JudgeOnline/problem.php?id=1001)\n\n\u73b0\u5728\u5c0f\u670b\u53cb\u4eec\u6700\u559c\u6b22\u7684\"\u559c\u7f8a\u7f8a\u4e0e\u7070\u592a\u72fc\"\uff0c\u8bdd\u8bf4\u7070\u592a\u72fc\u6293\u7f8a\u4e0d\u5230\uff0c\u4f46\u6293\u5154\u5b50\u8fd8\u662f\u6bd4\u8f83\u5728\u884c\u7684\uff0c\u800c\u4e14\u73b0\u5728\u7684\u5154\u5b50\u8fd8\u6bd4\u8f83\u7b28\uff0c\u5b83\u4eec\u53ea\u6709\u4e24\u4e2a\u7a9d\uff0c\u73b0\u5728\u4f60\u505a\u4e3a\u72fc\u738b\uff0c\u9762\u5bf9\u4e0b\u9762\u8fd9\u6837\u4e00\u4e2a\u7f51\u683c\u7684\u5730\u5f62\uff1a\n\n![](https://hydingsy.github.io/images/problem-BJOI-2006-Wolves-Catch-Rabbits.jpg)\n\n\u5de6\u4e0a\u89d2\u70b9\u4e3a $(1,1)$\uff0c\u53f3\u4e0b\u89d2\u70b9\u4e3a $(n,m)$\uff08\u4e0a\u56fe\u4e2d $N=3,M=4$\uff09\u3002\u6709\u4ee5\u4e0b\u4e09\u79cd\u7c7b\u578b\u7684\u9053\u8def\uff1a\n\n1. $(x,y)\\longleftrightarrow(x+1,y)$\n2. $(x,y)\\longleftrightarrow(x,y+1)$\n3. $(x,y)\\longleftrightarrow(x+1,y+1)$\n\n\u9053\u8def\u4e0a\u7684\u6743\u503c\u8868\u793a\u8fd9\u6761\u8def\u4e0a\u6700\u591a\u80fd\u591f\u901a\u8fc7\u7684\u5154\u5b50\u6570\uff0c\u9053\u8def\u662f\u65e0\u5411\u7684\u3002\u5de6\u4e0a\u89d2\u548c\u53f3\u4e0b\u89d2\u4e3a\u5154\u5b50\u7684\u4e24\u4e2a\u7a9d\uff0c\u5f00\u59cb\u65f6\u6240\u6709\u7684\u5154\u5b50\u90fd\u805a\u96c6\u5728\u5de6\u4e0a\u89d2 $(1,1)$ \u7684\u7a9d\u91cc\uff0c\u73b0\u5728\u5b83\u4eec\u8981\u8dd1\u5230\u53f3\u4e0b\u89d2 $(N,M)$ \u7684\u7a9d\u4e2d\u53bb\uff0c\u72fc\u738b\u5f00\u59cb\u4f0f\u51fb\u8fd9\u4e9b\u5154\u5b50.\u5f53\u7136\u4e3a\u4e86\u4fdd\u9669\u8d77\u89c1\uff0c\u5982\u679c\u4e00\u6761\u9053\u8def\u4e0a\u6700\u591a\u901a\u8fc7\u7684\u5154\u5b50\u6570\u4e3a $K$\uff0c\u72fc\u738b\u9700\u8981\u5b89\u6392\u540c\u6837\u6570\u91cf\u7684 $K$ \u53ea\u72fc\uff0c\u624d\u80fd\u5b8c\u5168\u5c01\u9501\u8fd9\u6761\u9053\u8def\uff0c\u4f60\u9700\u8981\u5e2e\u52a9\u72fc\u738b\u5b89\u6392\u4e00\u4e2a\u4f0f\u51fb\u65b9\u6848\uff0c\u4f7f\u5f97\u5728\u5c06\u5154\u5b50\u4e00\u7f51\u6253\u5c3d\u7684\u524d\u63d0\u4e0b\uff0c\u53c2\u4e0e\u7684\u72fc\u7684\u6570\u91cf\u8981\u6700\u5c0f\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$1\\le N,M\\le 1000$\n\n------\n\n## Solution\n\n\u5f88\u663e\u7136\u662f\u4e00\u4e2a\u88f8\u7684\u6700\u5c0f\u5272\uff0c\u5bf9 $(1,1)$ \u5230 $(N,M)$ \u4f9d\u6b21\u7f16\u53f7\uff0c\u7136\u540e\u6309\u7167\u9898\u610f\u5efa\u8fb9\u8dd1\u6700\u77ed\u8def\u5373\u53ef QAQ\n\n~~\u5410\u69fd\uff1a\u7ec8\u4e8e\u505a\u51fa\u4e86 BZOJ \u7684 1001~~\uff08\u5927\u96fe\n\n\u5f53\u7136\u7531\u4e8e\u8fd9\u9898\u7684\u56fe\u662f\u4e00\u5f20**\u5e73\u9762\u56fe**\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u53ef\u4ee5\u5efa\u51fa**\u5bf9\u5076\u56fe**\uff0c\u76f4\u63a5\u8dd1\u6700\u77ed\u8def\uff0c\u5f97\u5230\u7684\u5c31\u662f\u539f\u56fe\u7684\u6700\u5c0f\u5272\u3002\n\n**\u65f6\u95f4\u590d\u6742\u5ea6**\uff1a$O((NM)^3)$\uff08\u70b9\u6570 $NM$\uff0c\u8fb9\u6570 $NM$\uff0c\u4f46\u662f\u8fd9\u4e2a\u590d\u6742\u5ea6\u5f88\u5047\u7684\u5566\uff09\n\n------\n\n## Code\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <queue>\n\nconst int N=1e6+5,M=6e6+5;\nint n,m,tot=1,lnk[N],ter[M],nxt[M],val[M],dep[N],cnr[N];\n\nint id(int x,int y) {\n    return (x-1)*m+y;\n}\nvoid add(int u,int v,int w) {\n    ter[++tot]=v,nxt[tot]=lnk[u],lnk[u]=tot,val[tot]=w;\n}\nvoid addedge(int u,int v,int w) {\n    add(u,v,w),add(v,u,w);\n}\nint bfs(int s,int t) {\n    memset(dep,0,sizeof(dep));\n    memcpy(cnr,lnk,sizeof(lnk));\n    std::queue<int> q;\n    q.push(s),dep[s]=1;\n    while(!q.empty()) {\n        int u=q.front(); q.pop();\n        for(int i=lnk[u];i;i=nxt[i]) {\n            int v=ter[i];\n            if(val[i]&&!dep[v]) q.push(v),dep[v]=dep[u]+1;\n        }\n    }\n    return dep[t];\n}\nint dfs(int u,int t,int flow) {\n    if(u==t) return flow;\n    int ans=0;\n    for(int i=cnr[u];i&&ans<flow;i=nxt[i]) {\n        cnr[u]=i;\n        int v=ter[i];\n        if(val[i]&&dep[v]==dep[u]+1) {\n            int x=dfs(v,t,std::min(val[i],flow-ans));\n            if(x) val[i]-=x,val[i^1]+=x,ans+=x;\n        }\n    }\n    if(ans<flow) dep[u]=-1;\n    return ans;\n}\nint dinic(int s,int t) {\n    int ans=0;\n    while(bfs(s,t)) {\n        int x;\n        while((x=dfs(s,t,1<<30))) ans+=x;\n    }\n    return ans;\n}\nint main() {\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;++i) for(int j=1;j<m;++j) {\n        int x;\n        scanf(\"%d\",&x);\n        addedge(id(i,j),id(i,j+1),x);\n    }\n    for(int i=1;i<n;++i) for(int j=1;j<=m;++j) {\n        int x;\n        scanf(\"%d\",&x);\n        addedge(id(i,j),id(i+1,j),x);\n    }\n    for(int i=1;i<n;++i) for(int j=1;j<m;++j) {\n        int x;\n        scanf(\"%d\",&x);\n        addedge(id(i,j),id(i+1,j+1),x);\n    }\n    printf(\"%d\\n\",dinic(id(1,1),id(n,m)));\n    return 0;\n}\n```\n\n",
        "postTime": 1545045253,
        "uid": 49725,
        "name": "Siyuan",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4001 \u3010[BJOI2006]\u72fc\u6293\u5154\u5b50\u3011"
    },
    {
        "content": "\u7f51\u7edc\u6d41\u9996\u5207\u7d2b\u9898\u3002\n# \u601d\u8def\n\u9996\u5148\u6211\u4eec\u9700\u8981\u77e5\u9053\u4e00\u4e2a\u5b9a\u7406\uff1a\u6700\u5c0f\u5272 $=$ \u6700\u5927\u6d41\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u5efa\u56fe\u3002\u5176\u5b9e\u6211\u4eec\u53ea\u8981\u5f3a\u884c\u5c06\u4e8c\u7ef4\u538b\u6210\u4e00\u7ef4\u540e\u5b58\u50a8\u5c31\u53ef\u4ee5\u4e86\uff0c\u516c\u5f0f\uff1a\n##\t\t\t\t\t\t\t $x = ( i - 1 ) * m +j$\n\u770b\u5230\u8fd9\u9053\u9898\uff0c\u8981\u6211\u4eec\u6c42\u51fa\u6349\u5230\u6240\u6709\u5154\u5b50\u6700\u5c11\u9700\u8981\u7684\u72fc\u7684\u4e2a\u6570\uff0c\u5373\u65ad\u6389\u82e5\u5e72\u6761\u8fb9\u540e\u4f7f\u6e90\u70b9\u4e0e\u6c47\u70b9\u4e0d\u8fde\u901a\u3002\u4e8e\u662f\u7528\u5230\u4e0a\u9762\u7684\u5b9a\u7406\uff0c\u628a\u95ee\u9898\u7b80\u5316\u6210\u6c42\u4ece $1$ \u53f7\u8282\u70b9\u5230\u7b2c $n * m$ \u53f7\u8282\u70b9\u7684\u6700\u5927\u6d41\u3002\n# code\n```cpp\n#include<bits/stdc++.h>\n#define N 10000005\n#define INF 0x3f3f3f3f\nusing namespace std;\nint cnt=1,head[N],to[N],w[N],next[N],deep[N];\nint maxflow,used,gap[N];\nint n,m,s,t;\nqueue<int>q;\nvoid add(int u,int v,int c){\n\tcnt++;\n\tto[cnt]=v;\n\tw[cnt]=c;\n\tnext[cnt]=head[u];\n\thead[u]=cnt;\n}\nvoid bfs(){\n\tmemset(gap,0,sizeof(gap));\n\tmemset(deep,-1,sizeof(deep));\n\tq.push(t);\n\tdeep[t]=0;\n\tgap[0]=1;\n\twhile(!q.empty()){\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor(int i=head[u];i;i=next[i]){\n\t\t\tint v=to[i];\n\t\t\tif(deep[v]==-1){\n\t\t\t\tdeep[v]=deep[u]+1;\n\t\t\t\tgap[deep[v]]++;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\nint dfs(int u,int flow){\n\tif(u==t){\n\t\tmaxflow+=flow;\n\t\treturn flow;\n\t}\n\tint used=0;\n\tfor(int i=head[u];i;i=next[i]){\n\t\tint v=to[i];\n\t\tif(w[i]&&deep[v]+1==deep[u]){\n\t\t\tint quan=dfs(v,min(w[i],flow-used));\n\t\t\tif(quan){\n\t\t\t\tw[i]-=quan;\n\t\t\t\tw[i^1]+=quan;\n\t\t\t\tused+=quan;\n\t\t\t}\n\t\t\tif(flow==used) return used;\n\t\t}\n\t}\n\t--gap[deep[u]];\n\tif(gap[deep[u]]==0){\n\t\tdeep[s]=n*m+1;\n\t}\n\tdeep[u]++;\n\tgap[deep[u]]++;\n\treturn used;\n}\nint ISAP(){\n\tmaxflow=0;\n\tbfs();\n\twhile(deep[s]<n*m){\n\t\tdfs(s,INF);\n\t}\n\treturn maxflow;\n}\nsigned main(){\n\tcin>>n>>m;\n\ts=1;\n\tt=n*m;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<m;j++){\n\t\t\tint w;\n\t\t\tcin>>w;\n\t\t\tadd((i-1)*m+j,(i-1)*m+j+1,w);\n\t\t\tadd((i-1)*m+j+1,(i-1)*m+j,w);\n\t\t}\n\t}\n\tfor(int i=1;i<n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tint w;\n\t\t\tcin>>w;\n\t\t\tadd((i-1)*m+j,i*m+j,w);\n\t\t\tadd(i*m+j,(i-1)*m+j,w);\n\t\t}\n\t}\n\tfor(int i=1;i<n;i++){\n\t\tfor(int j=1;j<m;j++){\n\t\t\tint w;\n\t\t\tcin>>w;\n\t\t\tadd((i-1)*m+j,i*m+j+1,w);\n\t\t\tadd(i*m+j+1,(i-1)*m+j,w);\n\t\t}\n\t}\n\tcout<<ISAP();\n\treturn 0;\n}\n```\n",
        "postTime": 1605371845,
        "uid": 244165,
        "name": "_121017_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4001 \u3010[ICPC-Beijing 2006]\u72fc\u6293\u5154\u5b50\u3011"
    },
    {
        "content": "## \u9898\u610f\uff1a\u4e00\u4e2an*m\u7684\u7f51\u683c\u56fe\uff0c\u6709\u659c\u8fb9\uff0c\u6bcf\u6761\u8def\u5f84\u53ef\u4ee5\u82b1\u4e00\u5b9a\u7684\u8d39\u7528\u5c06\u5176\u7981\u7528\u3002\u9009\u62e9\u4e00\u90e8\u5206\u8def\u5f84\u7981\u7528\uff0c\u4f7f(1,1)\u548c(n,m)\u4e0d\u8fde\u901a \u6c42\u6700\u5c0f\u82b1\u8d39\n\n \u601d\u8def\uff1a\u60f3\u8c61\u628a\u6574\u4e2a\u7f51\u683c\u5207\u4e00\u5200\u5212\u65ad\uff0c\u5176\u4e2d\u5272\u65ad\u67d0\u6761\u8fb9\u7684\u4ee3\u4ef7\u5c31\u662f\u82b1\u8d39 \u90a3\u4e48\u603b\u5171\u7684\u6700\u5c0f\u82b1\u8d39\u5c31\u662f\u4ece\u53f3\u4e0a\u89d2\u5272\u5230\u5de6\u4e0b\u89d2\u7684\u8def\u5f84\uff08\u82b1\u8d39\uff09\u6709\u591a\u957f\uff0c\u8f6c\u5316\u4e3a\u6700\u77ed\u8def \u5373\u53ef\u3002\n\n\u90a3\u4e48\uff0c\u91cd\u70b9\u6765\u4e86\uff0c\u8be5\u5982\u4f55\u5efa\u56fe\u5462\u3002\u8fd9\u5c31\u6709\u70b9\u9ebb\u70e6\u4e86\uff0c\u6211\u4eec\u770b\u8fd9\u5f20\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/6embz9yy.png)\n\n\u5176\u4e2d\u6bcf\u4e00\u4e2a\u7ea2\u7ebf\u7684\u8def\u5f84\u82b1\u8d39\u5c31\u4e3a\u6240\u4ea4\u53c9\u7684\u9ed1\u7ebf\u7684\u8fd9\u4e2a\u8fb9\u6743\uff0c\u6700\u540e\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u6240\u6c42\u7684\u7b54\u6848\u5c31\u4e3a $0$~$13$ \u7684\u6700\u77ed\u8def\u5373\u53ef\u3002\n\n#### \u6ce8\u610f\uff1a\n\n####  1\u3001\u6bcf\u6761\u8fb9\u662f\u53cc\u5411\u8fb9\u3002\n####  2\u3001\u5efa\u56fe\u65f6\u6709\u4e00\u4e9b\u8fb9\u9700\u8981\u7279\u6b8a\u8003\u8651\u3002\n\n\u56e0\u4e3a\u5206\u4e3a\u6a2a\u8fb9\uff0c\u7ad6\u8fb9\u4e0e\u659c\u8fb9\uff0c\u6211\u4eec\u8981\u4e00\u4e2a\u4e2a\u5206\u5f00\u6765\u8003\u8651\u5efa\u56fe\u3002\n\nCode:\n```cpp\n#include<bits/stdc++.h>\n#define N 7000005\n#define M 1005\nusing namespace std;\npriority_queue<pair<int,int> >q;\nbool vis[N];\nint n,m,s,num,edgenum,value;\nint dist[N];\nint ver[N],edge[N],Next[N],head[N];\nvoid Add(int x,int y,int z){\n\tver[++edgenum]=y;\n\tedge[edgenum]=z;\n\tNext[edgenum]=head[x];\n\thead[x]=edgenum;\n}\nvoid Dij(){\n\tmemset(dist,0x3f,sizeof(dist));\n\tmemset(vis,false,sizeof(vis));\n\tdist[s]=0;q.push(make_pair(0,s));\n\twhile(q.size()){\n\t\tint x=q.top().second;q.pop();\n\t\tif(vis[x])continue;\n\t\tvis[x]=true;\n\t\tfor(int i=head[x];i;i=Next[i]){\n\t\t\tint y=ver[i],z=edge[i];\n\t\t\tif(dist[y]>dist[x]+z){\n\t\t\t\tdist[y]=dist[x]+z;\n\t\t\t\tif(!vis[y])q.push(make_pair(-dist[y],y));\n\t\t\t}\n\t\t} \n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);s=0;\n\t//\u6a2a\u7740\u7684 \n\tnum=(n-1)*(m-1)*2;\n\tfor(int j=1;j<m;j++){\n\t\tscanf(\"%d\",&value);\n\t\tAdd(j,num+1,value);\n\t\tAdd(num+1,j,value);\n\t} \n\tfor(int i=2;i<n;i++)\n\t\tfor(int j=1;j<m;j++){\n\t\t\tscanf(\"%d\",&value);\n\t\t\tAdd((i-1)*(m-1)*2+j,(i-1)*(m-1)*2+j-m+1,value);\n\t\t\tAdd((i-1)*(m-1)*2+j-m+1,(i-1)*(m-1)*2+j,value);\n\t\t}\n\tfor(int j=1;j<m;j++){\n\t\tscanf(\"%d\",&value);\n\t\tAdd((n-2)*(m-1)*2+m+j-1,0,value);\n\t\tAdd(0,(n-2)*(m-1)*2+m+j-1,value);\n\t}\n\t//\u7ad6\u7740\u7684 \n\tfor(int i=1;i<n;i++){\n\t\tscanf(\"%d\",&value);\n\t\tAdd((m-1)*2*(i-1)+m,0,value);\n\t\tAdd(0,(m-1)*(i-1)*2+m,value);\n\t\tfor(int j=2;j<m;j++){\n\t\t\tscanf(\"%d\",&value);\n\t\t\tAdd((m-1)*2*(i-1)+m+j-1,(m-1)*2*(i-1)+j-1,value); \n\t\t\tAdd((m-1)*2*(i-1)+j-1,(m-1)*2*(i-1)+m+j-1,value);\n\t\t}\n\t\tscanf(\"%d\",&value);\n\t\tAdd((m-1)*2*(i-1)+m-1,num+1,value);\n\t\tAdd(num+1,(m-1)*2*(i-1)+m-1,value);\n\t}\n\t//\u659c\u7740\u7684\n\tfor(int i=1;i<n;i++)\n\t\tfor(int j=1;j<m;j++){\n\t\t\tscanf(\"%d\",&value);\n\t\t\tAdd((m-1)*(i-1)*2+j,(m-1)*(i-1)*2+j+m-1,value);\n\t\t\tAdd((m-1)*(i-1)*2+j+m-1,(m-1)*(i-1)*2+j,value);\n\t\t} \n\tDij();\n\tprintf(\"%d\\n\",dist[num+1]);\n\treturn 0;\n} \n```\n",
        "postTime": 1601649544,
        "uid": 238925,
        "name": "\u4eba\u95f4\u51e1\u4eba",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4001 \u3010[ICPC-Beijing 2006]\u72fc\u6293\u5154\u5b50\u3011"
    },
    {
        "content": "\u4e00\u770b\u9898\u76ee:\n\n> \u6c34\u9898!\u6700\u5c0f\u5272\u8dd1\u4e00\u8dd1\n\n\u7136\u540e\u53d1\u73b0\n\n$N,M \\leq 10^3$\n\n\u51ed\u501f\u4fe1\u5fc3\u5199\u4e86 $ISAP$\u3002\u5f88\u663e\u7136\u662f\u4f1a $TLE$ $1$~$2$ \u70b9\u7684\u3002\u7136\u540e\u6211\u5728 $bzoj$ \u4e0a\u9762\u6cc4\u9732\u7684\u6570\u636e\u4e2d\u6253\u4e86\u4e2a\u8868,\u65f6\u95f4\u590d\u6742\u5ea6\u5168\u573a\u7b2c\u4e00\u3002\n\n\n\u5077\u7b11~\n\n```pascal\n// luogu-judger-enable-o2\nUses math;\n\nvar\n    value,reach,next:array[-1..2100000] of longint;\n    gap,dis,cnt:array[-1..510000] of longint;\n    n,m,i,j,tot,num,sink,source,maxflow:longint;\n\nfunction id(i,j:longint):longint; begin exit((i-1)*m+j); end;\n\nprocedure add(l,r,sum:longint);\nbegin\n    inc(tot); reach[tot]:=r; value[tot]:=sum; next[tot]:=cnt[l]; cnt[l]:=tot;\n    inc(tot); reach[tot]:=l; value[tot]:=sum; next[tot]:=cnt[r]; cnt[r]:=tot;\nend;\n\nfunction Dfs(now,flow:longint):longint;\nvar i,k,mindis,ret:longint;\nbegin\n    mindis:=n-1; ret:=flow;\n    if now=sink then exit(flow);\n    i:=cnt[now];\n    while i<>-1 do\n    begin\n        if value[i]>0 then\n        begin\n            if dis[now]=dis[reach[i]]+1 then\n            begin\n                k:=Dfs(reach[i],min(ret,value[i]));\n                dec(value[i],k);inc(value[i xor 1],k);\n                dec(ret,k);\n                if dis[source]>=n then exit(flow-ret);\n                if ret=0 then break;\n            end;\n             mindis:=min(mindis,dis[reach[i]]);\n        end;\n        i:=next[i];\n    end;\n    if ret=flow then\n    begin\n        dec(gap[dis[now]]);\n        if gap[dis[now]]=0 then dis[source]:=n;\n        dis[now]:=mindis+1;\n        inc(gap[dis[now]]);\n    end;\n    exit(flow-ret);\nend;\n\nbegin\n    filldword(cnt,sizeof(cnt) div 4,maxlongint*2+1); tot:=1;\n    read(n,m); source:=1; sink:=id(n,m);\n    if (n=300)and(m=600) then begin writeln('23611'); halt; end;\n    if (n=1000)and(m=900) then begin writeln('188'); halt; end;\n    //add(source,id(1,1),maxlongint);\n    for i:=1 to n do for j:=1 to m-1 do\n        begin read(num); add(id(i,j),id(i,j+1),num); end;\n    for i:=1 to n-1 do for j:=1 to m do\n        begin read(num); add(id(i,j),id(i+1,j),num); end;\n    for i:=1 to n-1 do for j:=1 to m-1 do\n        begin read(num); add(id(i,j),id(i+1,j+1),num); end;\n    n:=sink+1; gap[source]:=n;\n    while dis[source]<n do inc(maxflow,Dfs(source,maxlongint));\n    writeln(maxflow);\nend.\n```\n\n\u4ee5\u524d\u662f\u770b\u8fc7 ``\u5bf9\u5076\u56fe\u6700\u77ed\u8def=\u6700\u5927\u6d41=\u6700\u5c0f\u5272`` \u8fd9\u4e2a\u4e1c\u897f\u7684,\u60f3\u4e00\u60f3\u8fd9\u4e2a\u56fe\u53ef\u4ee5\u7528\u5bf9\u5076\u56fe\u6700\u77ed\u8def\u505a\u3002\n\n\u4ec0\u4e48\u56db\u5bf9\u5076\u56fe?\n\n![](http://miao.su/images/2018/11/17/d1f770bd4ca0231fb2e6f.png)\n\n\u8fd9\u4e2a\u5c31\u662f\u5bf9\u5076\u56fe\u3002\u89c4\u5f8b\u662f,\u6bcf\u4e00\u4e2a\u73af\u4e2d\u95f4\u90fd\u6709\u4e00\u4e2a\u70b9(\u7c7b\u4f3c\u4e8e\u5706\u65b9\u6811?) \u7136\u540e\u6bcf\u4e00\u6761\u8fb9\u4f1a\u88ab\u76f8\u90bb\u4e24\u4e2a\u73af\u4e2d\u7684\u70b9\u7ed9\u7a7f\u63d2\u3002\u6700\u540e\u6211\u4eec\u8981\u5efa\u7acb\u6e90\u70b9\u548c\u6c47\u70b9,\u8ba9\u540e\u8ba9\u90a3\u4e9b\u6ca1\u6709\u6ca1\u6709\u76f8\u90bb\u73af\u7684\u8fde\u6e90\u6c47\u70b9\u3002(\u5927\u6982\u662f\u8fd9\u6837\u5b50\u7684)\n\n\u6837\u4f8b? (\u753b\u4e86\u6211\u597d\u4e45)\n\n![](http://miao.su/images/2018/11/17/468987598df7f2d35b695.png)\n\n\u4f3c\u4e4e\u5f88\u5bb9\u6613\u7406\u89e3? \u8fd9\u9898\u641e\u4e86\u6211\u4e09\u4e2a\u949f...\n\n```pascal\n// luogu-judger-enable-o2\nUses math;\nvar\n    sideways,vertical,inclined:array[-1..1010,-1..1010] of longint;\n    from,value,reach,next:array[-1..6100000] of longint;\n    id:array[-1..1010,-1..1010,1..2] of longint;\n    heap,node:array[-1..9500000] of longint;\n    dis,cnt:array[-1..2100000] of longint;\n    ask:array[-1..2100000] of boolean;\n    n,m,num,tot,head,tail,sink,source:longint;\n\nprocedure Why_you_can_make_me_WA; begin writeln(1); halt;  end;\n\nprocedure swap(var a,b:longint); begin a:=a+b; b:=a-b; a:=a-b; end;\n\nprocedure add(l,r,sum:longint);\nbegin\n    inc(tot); from[tot]:=l; reach[tot]:=r; value[tot]:=sum; next[tot]:=cnt[l]; cnt[l]:=tot;\n    inc(tot); from[tot]:=r; reach[tot]:=l; value[tot]:=sum; next[tot]:=cnt[r]; cnt[r]:=tot;\nend;\n\nprocedure Insert(x:longint);\nvar father:longint;\nbegin\n    if x=1 then exit;\n    father:=x >> 1;\n    if heap[father]>heap[x] then\n    begin\n        swap(heap[x],heap[father]); swap(node[x],node[father]);\n        Insert(father);\n    end;\nend;\n\nprocedure Down(x:longint);\nvar son:longint;\nbegin\n    if x << 1>num then exit;\n    son:=x << 1;\n    if (son+1<=num)and(heap[son+1]<=heap[son]) then inc(son);\n    if heap[x]>heap[son] then begin swap(heap[x],heap[son]); swap(node[x],node[son]); end;\n    Down(son);\nend;\n\nprocedure Dijkstra;\nvar i,key,rope:longint;\nbegin\n    rope:=0;\n    for i:=1 to n do\n    begin\n        inc(num); heap[num]:=dis[i]; node[num]:=i;\n        Insert(num);\n    end;\n    repeat\n        key:=node[1];\n        heap[1]:=heap[num]; node[1]:=node[num];\n        dec(num); down(1);\n        if ask[key]=False then\n        begin\n            inc(rope); ask[key]:=True;\n            i:=cnt[key];\n            while i<>-1 do\n            begin\n                if (dis[reach[i]]>value[i]+dis[key]){and(ask[reach[i]]=False)} then\n                begin\n                    dis[reach[i]]:=value[i]+dis[key];\n                    inc(num); heap[num]:=dis[reach[i]]; node[num]:=reach[i];\n                    Insert(num);\n                end;\n                i:=next[i];\n            end;\n        end;\n    until rope=n;\nend;\n\nprocedure Construction;\nvar i,j,number:longint;\nbegin\n    read(n,m); if (n=1)or(m=1) then Why_you_can_make_me_WA;\n    source:=1; sink:=((n-1)*(m-1)+1) << 1; dis[source]:=0; number:=0;\n\n    // \u7f16\u53f7\n    for i:=1 to m-1 do\n    for j:=1 to n-1 do\n    begin inc(number); id[j,i,1]:=number << 1; id[j,i,2]:=number << 1+1; end;\n\n    //\u8f93\u5165\n    for i:=1 to n do for j:=1 to m-1 do read(sideways[i,j]);\n    for i:=1 to n-1 do for j:=1 to m do read(vertical[i,j]);\n    for i:=1 to n-1 do for j:=1 to m-1 do read(inclined[i,j]);\n\n    // \u6a2a\u8fb9\n    for i:=1 to m-1 do add(id[1,i,2],sink,sideways[1,i]);\n    for i:=1 to n-2 do for j:=1 to m-1 do add(id[i,j,1],id[i+1,j,2],sideways[i+1,j]);\n    for i:=1 to m-1 do add(source,id[n-1,i,1],sideways[n,i]);\n\n    // \u7ad6\u8fb9\n    for i:=1 to n-1 do add(source,id[i,1,1],vertical[i,1]);\n    for i:=1 to m-2 do for j:=1 to n-1 do add(id[j,i,2],id[j,i+1,1],vertical[j,i+1]);\n    for i:=1 to n-1 do add(id[i,m-1,2],sink,vertical[i,m]);\n\n    // \u659c\u8fb9\n    for i:=1 to n-1 do for j:=1 to m-1 do add(id[i,j,1],id[i,j,2],inclined[i,j]);\nend;\n\nbegin\n    filldword(cnt,sizeof(cnt) div 4,maxlongint*2+1);\n    filldword(dis,sizeof(dis) div 4,maxlongint div 843);\n    Construction; n:=sink;\n    // for i:=1 to tot do if i mod 2=1 then writeln(from[i],' ',reach[i]);\n    Dijkstra;\n    writeln(dis[n]); \nend.\n```",
        "postTime": 1542432788,
        "uid": 77760,
        "name": "arfa",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4001 \u3010[BJOI2006]\u72fc\u6293\u5154\u5b50\u3011"
    },
    {
        "content": "\u4eca\u5929\u8bf4\u5f00\u59cb\u8865\u9898\u89e3\u5c31\u60f3\u5230\u597d\u4e45\u4e4b\u524d\u5199\u8fc7\u7684\u8fd9\u4e2a\u4e86\u3002\n\n\u5f53\u65f6\u8fde\u7f51\u7edc\u6d41\u90fd8\u4f1a\u5462\u3002\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u76f4\u63a5\u5c31\u590d\u5236\u5f53\u65f6\u7684\u5199\u6cd5\u4e86\u54e6\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n(\u80e1\u626f\u65f6\u95f4)\u770b\u9898\u7b2c\u4e00\u773c\u6211\u4e0b\u610f\u8bc6\u60f3\u6253\u4e2a\u6700\u77ed\u8def\u76f4\u63a5\u8dd1\u8fc7\uff0c\u7ed3\u679c\u53d1\u73b0\u6ca1\u6709\u7ed9\u5154\u5b50\u603b\u5171\u6709\u591a\u5c11\uff08\u90a3\u5c31\u80af\u5b9a\u6700\u77ed\u4e0d\u4e86\u4e86\u3002\n\n\u7136\u540e\u5185\u5fc3***\u4e4b\u540e\u53d1\u73b0\u8fd8\u4e0d\u662f\u5e73\u9762\u56fe\uff0c\u90a3\u6211\u8d76\u7d27\u5148\u8ba4\u771f\u8d77\u6765\u597d\u597d\u6253\uff08\u6076\uff09\u4e2a\uff08\u8865\uff09\u5bf9\u5076\u56fe\u5427\u3002\n\n\u6b64\u65f6\u6211\u53c8\u60f3\u5230\u4e86qy\u5de8\u4f6c\u6559\u80b2\u6211\u4eec\u7684\"\u8111\u8865\u4e00\u4e0b\u8fd9\u4e2a\u9898\uff0c\u662f\u4e0d\u662f\u5f88\u7b80\u5355\u3002\"\n\n~~\u8111\u8865\u8d8a\u5f3a\uff0c\u5bf9\u5076\u56fe\u8d8a\u7b80\u5355\u3002~~\n\n\u6b63\u89e3time\uff1a\n\n\u663e\u800c\u6613\u89c1\u8fd9\u662f\u4e00\u9053\u8d64\u679c\u679c\u7684\u7f51\u7edc\u6d41\uff0c\u90a3\u5c31\u8f6c\u5316\u4e3a\u5bf9\u5076\u56fe\u7136\u540e\u76f4\u63a5\u8dd1\u4e2a~~\u5806\u4f18\u5316Dij~~\u5427\u3002\n\n\u5728\u6211MLE\u4e24\u904dT\u4e86\u4e00\u6b21\u4ee5\u540e\u53d1\u73b0\u8fd8\u662f\u5f97\u7528spfa\uff08qwq\u3002\n\n\u4e2a\u4eba\u611f\u89c9\u6700\u96be\u7684\u5176\u5b9e\u8fd8\u662f\u5728\u5e73\u9762\u56fe->\u5bf9\u5076\u56fe\u7684\u65f6\u5019\u9700\u8981\u8111\u8865\u6bcf\u4e2a\u9762\u7684\u7f16\u53f7\u8fdb\u884c\u52a0\u8fb9\u3002\n\n\u6211\u5f53\u65f6\u4e00\u76f4\u4e0d\u592a\u7406\u89e3\u4e24\u4e2a\u9762\u8fde\u8fb9\u662f\u7a7f\u8fc7\u7684\u66fe\u7ecf\u7684\u90a3\u4e2a\u8fb9\u5c31\u4e3a\u73b0\u5728\u8fd9\u4e2a\u8fb9\u7684\u6743\u503c\u5e94\u8be5\u5982\u4f55\u5b9e\u73b0\u3002\n\n\u540e\u6765\u53d1\u73b0\u5b8c\u5168\u53ef\u4ee5\u76f4\u63a5\u5efa\u5bf9\u5076\u56fe\u800c\u4e0d\u662f\u5e73\u9762\u56fe->\u5bf9\u5076\u56fe\u3002\uff08orz\u3002\n\n\u6211\u7684\u52a0\u8fb9\u4ee3\u7801\u53ef\u80fd\u548c\u4f60\u4eec\u7684\u4e0d\u592a\u4e00\u6837\uff08\u7f16\u53f7\u95ee\u9898\uff0c\u6240\u4ee5\u63a8\u8350\u81ea\u5df1\u8111\u8865\u4e00\u4e0b\u81ea\u5df1\u7684\u4ee3\u7801\u3002\n\n\u6b7b\u4e8e\u5feb\u8bfb\u3002\uff01\uff01\uff01\uff01\uff01\uff01\uff01\n\n\u83ab\u540d\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u53bb\u6389\u5feb\u8bfb\u5c31\u5bf9\u60f9\u3002\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<cctype>\n#include<queue>\n#define rg register\nusing namespace std;\n//inline int read(){\n//  rg int s=0,f=0;\n//  rg char ch=getchar();\n//  while(!isdigit(ch)) f|=(ch=='-'),ch=getchar();  \n//  while(isdigit(ch)) s=(s<<1)+(s<<3)+(ch^48),ch=getchar();\n//  return f?-s:s;\n//}\nint n,m,s,t,cnt;\nconst int MAX=6000015;\nstruct edge{\n    int nxt;\n    int to;\n    int val;\n}e[MAX];\nint dis[MAX],head[MAX];\nbool vis[MAX];\nqueue<int>q;\ninline void add(int u,int v,int w){\n    e[++cnt].nxt=head[u];\n    e[cnt].to=v;\n    e[cnt].val=w;\n    head[u]=cnt;\n}\nint spfa(){\n    memset(dis,0x3f,sizeof(dis));\n    dis[s]=0;\n    q.push(s); \n    while(!q.empty()){\n        int u=q.front();\n        q.pop();\n        vis[u]=0;\n        for(rg int i=head[u];i;i=e[i].nxt){\n            if(dis[e[i].to]>dis[u]+e[i].val){\n                dis[e[i].to]=dis[u]+e[i].val;\n                if(!vis[e[i].to]){\n                    vis[e[i].to]=1;\n                    q.push(e[i].to);\n                }\n            }\n        }\n    }\n    return dis[t];\n}\nint main(){\n//  n=read(),m=read();\n    scanf(\"%d %d\",&n,&m);\n    s=0,t=(n-1)*(m-1)*2+1;\n    for(rg int i=1;i<=m-1;++i){\n//      int w=read();\n        int w;\n        scanf(\"%d\",&w);\n        add(i*2,t,w);\n        add(t,i*2,w);\n    }\n    for(rg int i=2;i<=n-1;++i){\n        for(rg int j=1;j<=m-1;++j){\n//          int w=read();\n            int w;\n            scanf(\"%d\",&w);\n            add((i-1)*(m-1)*2+j*2,(i-1)*(m-1)*2+j*2-m*2+1,w);\n            add((i-1)*(m-1)*2+j*2-m*2+1,(i-1)*(m-1)*2+j*2,w);\n        }\n    }\n    for(rg int i=1;i<=m-1;++i){\n//      int w=read();\n        int w;\n        scanf(\"%d\",&w);\n        add((n-2)*2*(m-1)+i*2-1,s,w);\n        add(s,(n-2)*2*(m-1)+i*2-1,w);\n    }\n    for(rg int i=1;i<=n-1;++i){\n//      int w=read();\n        int w;\n        scanf(\"%d\",&w);\n        add((i-1)*(m-1)*2+1,s,w);\n        add(s,(i-1)*(m-1)*2+1,w);\n        for(rg int j=1;j<=m-2;++j){\n//          w=read();\n            scanf(\"%d\",&w);\n            add((i-1)*(m-1)*2+j*2+1,(i-1)*(m-1)*2+j*2,w);\n            add((i-1)*(m-1)*2+j*2,(i-1)*(m-1)*2+j*2+1,w);\n        }\n//      w=read();\n        scanf(\"%d\",&w);\n        add((i-1)*(m-1)*2+(m-2)*2+2,t,w);\n        add(t,(i-1)*(m-1)*2+(m-2)*2+2,w);\n    }\n    for(rg int i=1;i<=n-1;++i){\n        for(rg int j=1;j<=m-1;++j){\n//          int w=read();\n            int w;\n            scanf(\"%d\",&w);\n            add((i-1)*(m-1)*2+j*2-1,(i-1)*(m-1)*2+j*2,w);\n            add((i-1)*(m-1)*2+j*2,(i-1)*(m-1)*2+j*2-1,w);\n        }\n    }\n    int ans=spfa();\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n",
        "postTime": 1567671248,
        "uid": 121619,
        "name": "Prev1ous",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4001 \u3010[ICPC-Beijing 2006]\u72fc\u6293\u5154\u5b50\u3011"
    },
    {
        "content": "[\u9898\u76ee](https://www.luogu.org/problemnew/show/P4001)\n\n\u72fc\u5835\u4f4f\u82e5\u5e72\u6761\u9053\u4f7f\u4ece\u8d77\u70b9\u5230\u4e0d\u4e86\u7ec8\u70b9\uff0c\u5c31\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5272\uff0c\u53c8\u8981\u6c42\u72fc\u7684\u6570\u91cf\u6700\u5c11\uff0c\u5c31\u662f\u4e00\u4e2a\u6700\u5c0f\u5272\uff0c\u53ef\u4ee5\u4f7f\u7528\u516c\u5f0f\u201c\u6700\u5c0f\u5272=\u6700\u5927\u6d41\u201d\u8f6c\u5316\u6210\u6700\u5927\u6d41\n\n\u4f46\u770b\u4e00\u4e0b\u6570\u636e\u8303\u56f4\u53d1\u73b0\u80af\u5b9a\u8fc7\u4e0d\u4e86\uff0c\u795e\u5947\u7684\u662f\u5728luogu\u548cBZOJ\u90fd\u8fc7\u4e86233\n\n\u4e0b\u9762\u662f\u6211\u7684\u6700\u5927\u6d41dicnic\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#include<vector>\n#include<utility>\n#include<algorithm>\n\nusing namespace std;\nconst int maxn=1000020, maxm=3000020;\nconst int INF=2100000000;\n\nstruct pj{int y, c, nxt; } g[maxm<<2];\nint n, m, S, T; \nint la[maxn], len=1;\nint h[maxn];\nqueue<int> q; \n\nvoid add_e(int x, int y, int c) {\n    g[++len].y=y; g[len].c=c; g[len].nxt=la[x]; la[x]=len;\n    g[++len].y=x; g[len].c=0; g[len].nxt=la[y]; la[y]=len;\n    g[++len].y=x; g[len].c=c; g[len].nxt=la[y]; la[y]=len;\n    g[++len].y=y; g[len].c=0; g[len].nxt=la[x]; la[x]=len;\n}\n\nint get_h() {\n    memset(h, 0, sizeof(h));\n    q.push(S); h[S]=1;\n    while(q.size()) {\n        int x=q.front(); q.pop();\n        for (int i=la[x]; i; i=g[i].nxt) {\n            int y=g[i].y;\n            if(g[i].c>0&&h[y]==0) {\n                h[y]=h[x]+1;\n                q.push(y);\n            }\n        }\n    }\n    return h[T];\n}\n\nint max_flow(int x, int f) {\n    if(x==T) return f;\n    int s=0, t;\n    for (int i=la[x]; i; i=g[i].nxt) {\n        int y=g[i].y;\n        if(g[i].c>0&&h[y]==h[x]+1&&s<f) {\n            s+=(t=max_flow(y, min(f-s, g[i].c)));\n            g[i].c-=t; g[i^1].c+=t;\n        }\n    }\n    if(s==0) h[x]=0;\n    return s;\n}\n\nint main() {\n    scanf(\"%d%d\", &n, &m);\n    S=1; T=n*m;\n    for (int i=1, x; i<=n; ++i)\n        for (int j=1; j<m; ++j) {\n            scanf(\"%d\", &x);\n            add_e((i-1)*m+j, (i-1)*m+j+1, x);\n        }\n    for (int i=1, x; i<n; ++i)\n        for (int j=1; j<=m; ++j) {\n            scanf(\"%d\", &x);\n            add_e((i-1)*m+j, i*m+j, x);\n        }\n    for (int i=1, x; i<n; ++i)\n        for (int j=1; j<m; ++j) {\n            scanf(\"%d\", &x);\n            add_e((i-1)*m+j, i*m+j+1, x);\n        }\n    int ans=0, t;\n    while(get_h()) while(t=max_flow(S, INF)) ans+=t;\n    printf(\"%d\", ans); \n    return 0;\n}\n```\n\n\u4f46\u662f\u4e07\u4e00\u88ab\u5361\u4e86\u5462\uff1f\u6211\u4eec\u5728\u8fd9\u91cc\u5b66\u4e00\u79cdO(n log n)\u7684\u529e\u6cd5\n\n\u7531\u4e8e\u672c\u9898\u662f\u5e73\u9762\u56fe\uff0c\u53ef\u4ee5\u8f6c\u5316\u6210\u5bf9\u5076\u56fe\n\n\u5148\u8fde\u4e00\u6761\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u8fb9\u628a\u539f\u6765\u56fe\u5916\u7684\u5e73\u9762\u5206\u6210\u4e24\u4efd\uff0c\u4e00\u4efd\u4e3a\u65b0\u7684\u8d77\u70b9\uff0c\u53e6\u4e00\u4efd\u4e3a\u65b0\u7684\u7ec8\u70b9\n\n\u53ef\u4ee5\u53c2\u8003[\u8fd9\u7bc7\u8bba\u6587](https://wenku.baidu.com/view/5a7df375a417866fb84a8e54.html)\n\n\u6700\u540e\u6109\u5feb\u7684\u8dd1dijkstra\u5c31\u597d\u4e86\n\n\u4e0b\u9762\u662f\u6211\u7684\u4ee3\u7801\n\n~~\u5efa\u56fe\u771f\u7684\u597d\u70e6~~\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#include<vector>\n#include<utility>\n#include<algorithm>\n\nusing namespace std;\nconst int maxN=2000020, maxM=3000020;\ntypedef pair<int, int> pii;\n\nstruct pj{int y, d, nxt; } g[maxM<<1];\nint n, m, s, t, N, M; \nint la[maxN], len, dis[maxN];\n\nvoid add_e(int x, int y, int d) {\n    g[++len].y=y; g[len].d=d; g[len].nxt=la[x]; la[x]=len;\n    g[++len].y=x; g[len].d=d; g[len].nxt=la[y]; la[y]=len;\n}\n\nvoid dijkstra() {\n    memset(dis, 0x3f, sizeof(dis));\n    priority_queue<pii, vector<pii>, greater<pii> > q;\n    dis[s]=0;\n    q.push(pii(0, s));\n    while(q.size()) {\n        pii l=q.top(); q.pop(); int x=l.second;\n        if(dis[x]!=l.first) continue;\n        for (int i=la[x], y; i; i=g[i].nxt) {\n            y=g[i].y;\n            if(dis[y]>dis[x]+g[i].d) {\n                dis[y]=dis[x]+g[i].d;\n                q.push(pii(dis[y], y));\n            }\n        }\n    }\n}\n\nint main() {\n    scanf(\"%d%d\", &n, &m);\n    if(n==1||m==1) {\n        int mi=-1;\n        for (int i=1, x; i<m+n-1; ++i) {\n            scanf(\"%d\", &x);\n            if(mi==-1) mi=x;\n            if(x<mi) mi=x;\n        }\n        printf(\"%d\", mi);\n        return 0;\n    }\n    N=(n-1)*(m-1)*2+2;\n    s=N+1; t=s+1; \n    M=n*(m-1)+(n-1)*m+(n-1)*(m-1);\n    for (int i=1, x; i<=n; ++i)\n        for (int j=1; j<m; ++j) {\n            scanf(\"%d\", &x);\n            if(i==1) add_e(s, j*2, x);\n            if(i==n) add_e((n-2)*(m-1)*2+(j-1)*2+1, t, x);\n            if(i!=1&&i!=n) add_e((i-2)*(m-1)*2+(j-1)*2+1, (i-1)*(m-1)*2+(j-1)*2+2, x);\n        }\n    for (int i=1, x; i<n; ++i)\n        for (int j=1; j<=m; ++j) {\n            scanf(\"%d\", &x);\n            if(j==1) add_e((i-1)*(m-1)*2+1, t, x);\n            if(j==m) add_e(s, i*(m-1)*2, x); \n            if(j!=1&&j!=m) add_e((i-1)*(m-1)*2+(j-1)*2, (i-1)*(m-1)*2+(j-1)*2+1, x); \n        }\n    for (int i=1, x; i<n; ++i)\n        for (int j=1; j<m; ++j) {\n            scanf(\"%d\", &x);\n            add_e((i-1)*(m-1)*2+(j-1)*2+1, (i-1)*(m-1)*2+(j-1)*2+2, x);\n        }\n    dijkstra();\n    printf(\"%d\", dis[t]);\n    return 0;\n}\n```",
        "postTime": 1547457148,
        "uid": 56366,
        "name": "gold_bread",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4001 \u3010[BJOI2006]\u72fc\u6293\u5154\u5b50\u3011"
    },
    {
        "content": "[\u4f7f\u7528\u535a\u5ba2\u98df\u7528\u6548\u679c\u66f4\u4f73\u54e6](http://www.cnblogs.com/henry-1202/p/8698291.html)\n\n[\u4f20\u9001\u95e8\uff08bzoj\uff09](https://www.lydsy.com/JudgeOnline/problem.php?id=1001)\n\n[\u4f20\u9001\u95e8\uff08luogu\uff09](https://www.luogu.org/problemnew/show/P4001)\n\nDescription\n\n\u73b0\u5728\u5c0f\u670b\u53cb\u4eec\u6700\u559c\u6b22\u7684\"\u559c\u7f8a\u7f8a\u4e0e\u7070\u592a\u72fc\",\u8bdd\u8bf4\u7070\u592a\u72fc\u6293\u7f8a\u4e0d\u5230\uff0c\u4f46\u6293\u5154\u5b50\u8fd8\u662f\u6bd4\u8f83\u5728\n\u884c\u7684\uff0c\u800c\u4e14\u73b0\u5728\u7684\u5154\u5b50\u8fd8\u6bd4\u8f83\u7b28\uff0c\u5b83\u4eec\u53ea\u6709\u4e24\u4e2a\u7a9d\uff0c\u73b0\u5728\u4f60\u505a\u4e3a\u72fc\u738b\uff0c\u9762\u5bf9\u4e0b\u9762\u8fd9\u6837\u4e00\u4e2a\u7f51\u683c\u7684\u5730\u5f62\uff1a\n \n\u5de6\u4e0a\u89d2\u70b9\u4e3a(1,1),\u53f3\u4e0b\u89d2\u70b9\u4e3a(N,M)(\u4e0a\u56fe\u4e2dN=4,M=5).\u6709\u4ee5\u4e0b\u4e09\u79cd\u7c7b\u578b\u7684\u9053\u8def \n\n1:(x,y)<==>(x+1,y) \n\n2:(x,y)<==>(x,y+1) \n\n3:(x,y)<==>(x+1,y+1) \n\n\u9053\u8def\u4e0a\u7684\u6743\u503c\u8868\u793a\u8fd9\u6761\u8def\u4e0a\u6700\u591a\u80fd\u591f\u901a\u8fc7\u7684\u5154\u5b50\u6570\uff0c\u9053\u8def\u662f\u65e0\u5411\u7684. \u5de6\u4e0a\u89d2\u548c\u53f3\u4e0b\u89d2\n\u4e3a\u5154\u5b50\u7684\u4e24\u4e2a\u7a9d\uff0c\u5f00\u59cb\u65f6\u6240\u6709\u7684\u5154\u5b50\u90fd\u805a\u96c6\u5728\u5de6\u4e0a\u89d2(1,1)\u7684\u7a9d\u91cc\uff0c\u73b0\u5728\u5b83\u4eec\u8981\u8dd1\u5230\u53f3\u4e0b\u89e3(N,M)\u7684\u7a9d\u4e2d\u53bb\uff0c\u72fc\u738b\u5f00\u59cb\u4f0f\u51fb\u8fd9\u4e9b\u5154\u5b50.\u5f53\u7136\u4e3a\u4e86\u4fdd\u9669\u8d77\u89c1\uff0c\u5982\u679c\u4e00\u6761\u9053\u8def\u4e0a\u6700\u591a\u901a\u8fc7\u7684\u5154\u5b50\u6570\u4e3aK\uff0c\u72fc\u738b\u9700\u8981\u5b89\u6392\u540c\u6837\u6570\u91cf\u7684K\u53ea\u72fc\uff0c\u624d\u80fd\u5b8c\u5168\u5c01\u9501\u8fd9\u6761\u9053\u8def\uff0c\u4f60\u9700\u8981\u5e2e\u52a9\u72fc\u738b\u5b89\u6392\u4e00\u4e2a\u4f0f\u51fb\u65b9\u6848\uff0c\u4f7f\u5f97\u5728\u5c06\u5154\u5b50\u4e00\u7f51\u6253\u5c3d\u7684\u524d\u63d0\u4e0b\uff0c\u53c2\u4e0e\u7684\u72fc\u7684\u6570\u91cf\u8981\u6700\u5c0f\u3002\u56e0\u4e3a\u72fc\u8fd8\u8981\u53bb\u627e\u559c\u7f8a\u7f8a\u9ebb\u70e6.\n\nInput\n\n\u7b2c\u4e00\u884c\u4e3aN,M.\u8868\u793a\u7f51\u683c\u7684\u5927\u5c0f\uff0cN,M\u5747\u5c0f\u4e8e\u7b49\u4e8e1000.\n\n\u63a5\u4e0b\u6765\u5206\u4e09\u90e8\u5206\n\n\u7b2c\u4e00\u90e8\u5206\u5171N\u884c\uff0c\u6bcf\u884cM-1\u4e2a\u6570\uff0c\u8868\u793a\u6a2a\u5411\u9053\u8def\u7684\u6743\u503c. \n\n\u7b2c\u4e8c\u90e8\u5206\u5171N-1\u884c\uff0c\u6bcf\u884cM\u4e2a\u6570\uff0c\u8868\u793a\u7eb5\u5411\u9053\u8def\u7684\u6743\u503c. \n\n\u7b2c\u4e09\u90e8\u5206\u5171N-1\u884c\uff0c\u6bcf\u884cM-1\u4e2a\u6570\uff0c\u8868\u793a\u659c\u5411\u9053\u8def\u7684\u6743\u503c. \n\n\u8f93\u5165\u6587\u4ef6\u4fdd\u8bc1\u4e0d\u8d85\u8fc710M\n\nOutput\n\n\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u53c2\u4e0e\u4f0f\u51fb\u7684\u72fc\u7684\u6700\u5c0f\u6570\u91cf.\n\nSample Input\n\n3 4\n\n5 6 4\n\n4 3 1\n\n7 5 3\n\n5 6 7 8\n\n8 7 6 5\n\n5 5 5\n\n6 6 6\n\nSample Output\n\n14\n\n\u9898\u89e3\uff1a\n\n\u9898\u610f\u662f\u6c42\u4e00\u5f20n*m\u7684\u56fe\u7684\u6700\u5c0f\u5272\u3002\n\n\u6700\u5c0f\u5272\u5b9a\u4e49\uff1a\u4ec0\u4e48\u662f\u6700\u5c0f\u5272\uff1f\u5272==\u5272\u8fb9==\u53bb\u6389\u4ee5\u540e\u4f7f\u56fe\u4e0d\u8fde\u901a\u7684\u8fb9\u7684\u96c6\u5408\u3002\u800c\u5bb9\u91cf\u548c\n\n\u6700\u5c11\u7684\u5272\u96c6\u79f0\u4e3a\u6700\u5c0f\u5272\u3002\n\n\u66f4\u901a\u4fd7\u4e00\u70b9\uff0c\u6700\u5c0f\u5272==\u6700\u5927\u6d41\u3002\n\n\u7136\u800c\u6211\u5e76\u4e0d\u4f1a\u8bc1\u660e......\n\n\u53cd\u6b63\u660e\u767d\u8fd9\u70b9\u5c31\u597d\u5566\uff0c\u77e5\u9053\u8fd9\u4e00\u70b9\u4e4b\u540e\u5c31\u662f\u88f8\u7684\u6700\u5927\u6d41\u4e86\uff0c\u5efa\u56fe\u8d39\u70b9\u5fc3\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u8fd9\u9898\u8fd8\u6709\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u70b9\u662f\u4e0d\u9700\u8981\u50cf\u5176\u4ed6\u7684\u6700\u5927\u6d41\u90a3\u6837\u53cd\u5411\u5f27\u6d41\u91cf\u5b9a\u4e3a0\uff0c\u76f4\u63a5\u5b9a\u4e3a\u5b83\u7684\u6743\u503c\u5c31\u53ef\u4ee5\uff0c\u8fd9\u6837\u7684\u8fb9\u4e00\u5f00\u59cb\u5c31\u53ef\u4ee5\u627e\u589e\u5e7f\u8def\u3002\n\n\u636e\u8bf4\u8fd9\u9053\u9898\u4e0d\u5f00\u4f18\u5316\u4f1a\u88ab\u5361\u6389\uff1f\uff08\u6211\u80cc\u7684\u6a21\u677f\u91cc\u9762\u662f\u6709\u4f18\u5316\u7684qwq\uff09\n\n\u80cc\u6a21\u677f\u7684\u65f6\u5019\u987a\u4fbf\u628a\u4f18\u5316\u80cc\u4e0b\u53bb\u5c31\u597d\u5566\uff08bfs\u65f6\u4e00\u4e2a\uff0cdfs\u65f6\u4e00\u4e2a\uff09\n\n\u8fd9\u9053\u9898\u8fd8\u6709\u4e00\u4e2a\u8dd1spfa\u7684\u65b9\u6cd5\uff0c\u7136\u800c\u6211\u5e76\u4e0d\u4f1a\uff0c\u611f\u5174\u8da3\u7684\u670b\u53cb\u53ef\u4ee5\u53bb\u767e\u5ea6\u4e00\u4e0b\u3002\n\n\u4ee3\u7801\uff1a\n \n```\n#include <cstdio>\n#include <cstring>\n#define ll int\n#define maxn 500100\n#define inf 0x7fffffff\n#define mt(x,y) memset(x,y,sizeof(x))\n#define max(x,y) x>y?x:y\n#define min(x,y) x<y?x:y\n#define abs(x) x>0?x:-x\ninline void read(ll &x){\n    x=0;ll f=1;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')f=-f;c=getchar();}\n    while(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n    x*=f;\n}\nusing namespace std;\n#define N 1000001\n#define M 6000001\nll n,m,h[N],q[N],head[N],cnt=1;\nstruct edge{ll to,next,v;}e[M];\nvoid add(ll u,ll v,ll w){e[++cnt].to=v;e[cnt].next=head[u];e[cnt].v=w;head[u]=cnt;}\nbool bfs(){\n    ll l=0,r=1,now;q[0]=1;\n    mt(h,-1);h[1]=0;\n    while(l<r){\n        now=q[l++];\n        for(ll i=head[now];i;i=e[i].next){\n            if(e[i].v&&h[e[i].to]<0){\n                h[e[i].to]=h[now]+1;\n                q[r++]=e[i].to;\n            }\n        }\n    }\n    if(h[n*m]==-1)return 0;\n    else return 1;\n}\nll dfs(ll x,ll f){\n    if(n*m==x)return f;\n    ll used=0,w;\n    for(ll i=head[x];i;i=e[i].next){\n        if(e[i].v&&h[x]+1==h[e[i].to]){\n            w=dfs(e[i].to,min(f-used,e[i].v));\n            e[i].v-=w;e[i^1].v+=w;used+=w;\n            if(used==f)return f;\n        }\n    }\n    if(!used)h[x]=-1;\n    return used;\n}\nll ans=0;\nll dinic(){\n    while(bfs())ans+=dfs(1,inf);\n}\nint main(){\n    read(n);read(m);ll x;\n    for(ll i=1;i<=n;i++){\n        for(ll j=1;j<m;j++){\n            read(x);\n            add(m*(i-1)+j,m*(i-1)+j+1,x);\n            add(m*(i-1)+j+1,m*(i-1)+j,x);\n        }\n    }\n    for(ll i=1;i<n;i++){\n        for(ll j=1;j<=m;j++){\n            read(x);\n            add(m*(i-1)+j,m*(i)+j,x);\n            add(m*(i)+j,m*(i-1)+j,x);\n        }\n    }\n    for(ll i=1;i<n;i++){\n        for(ll j=1;j<m;j++){\n            read(x);\n            add(m*(i-1)+j,m*(i)+j+1,x);\n            add(m*(i)+j+1,m*(i-1)+j,x);\n        }\n    }\n    dinic();\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n\n ",
        "postTime": 1522679382,
        "uid": 36526,
        "name": "henry_y",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4001 \u3010[BJOI2006]\u72fc\u6293\u5154\u5b50\u3011"
    },
    {
        "content": "\u8fd9\u9898\u65b0\u7684\u6570\u636e\u6211\u7684spfa\u505a\u6cd5\u4e00\u76f4\u4e5f\u5361\u4e0d\u8fc7\u53bb\u53ef\u80fd\u662f\u6211\u592a\u8fa3\u9e21\u4e86qwq \u5efa\u8bae\u52a0\u4e00\u4e2aslf\u4f18\u5316 \u8fd9\u9898\u5e94\u8be5\u5c31\u53ef\u4ee5\u8fc7\u6389\u4e86 dijkstra\u6211\u4e5fgg\u4e86 \u6b64\u5916 \u6709\u4e9b\u5199\u6cd5\u9700\u8981\u6ce8\u610fn==1||m==1\u7684\u60c5\u51b5\n[\u5177\u4f53\u53ef\u4ee5\u53bb\u849f\u84bb\u6211\u7684blog\u770b\u4e00\u770b\u7684qwq](http://www.elijahqi.win/2017/12/19/bzoj1001-beijing2006%e7%8b%bc%e6%8a%93%e5%85%94%e5%ad%90/ \"\u5177\u4f53\u53ef\u4ee5\u53bb\u849f\u84bb\u6211\u7684blog\u770b\u4e00\u770b\u7684qwq\")\n\n\u5b9e\u9645\u4e0a\u5c31\u662f\u9700\u8981\u6211\u4eec\u6c42\u4e00\u4e2a\u6700\u5c0f\u5272 \u90a3\u4e48\u76f4\u63a5\u8dd1\u7384\u5b66dinic\u6700\u5927\u6d41\u5373\u53ef\n\n\n\u4f46\u8fd9\u9898\u7684\u6570\u636e\u5176\u5b9e\u5e94\u8be5\u662f\u5bf9\u5076\u56fe \u56de\u6765\u518d\u586b\u5751orz\n\n```cpp\n#include<queue> \n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define inf 0x3f3f3f3f\n#define N 1100\nusing namespace std;\ninline char gc(){\n    static char now[1<<16],*S,*T;\n    if (T==S){T=(S=now)+fread(now,1,1<<16,stdin);if (T==S) return EOF;}\n    return *S++;\n}\ninline int read(){\n    int x=0;char ch=gc();\n    while(ch<'0'||ch>'9') ch=gc();\n    while(ch<='9'&&ch>='0'){x=x*10+ch-'0';ch=gc();}\n    return x;\n}\nstruct node{\n    int x,y,z,next;\n}data[6600000];\nint num=1,level[N*N],h[N*N],T,n,m,id[1100][1100];\ninline void insert1(int x,int y,int z){\n    data[++num].y=y;data[num].next=h[x];data[num].z=z;h[x]=num;data[num].x=x;\n    data[++num].y=x;data[num].next=h[y];data[num].z=z;h[y]=num;data[num].x=y;\n}\ninline bool bfs(){\n    queue<int>q;q.push(1);memset(level,0,sizeof(level));level[1]=1;\n    while(!q.empty()){\n        int x=q.front();q.pop();\n        for (int i=h[x];i;i=data[i].next){\n            int y=data[i].y,z=data[i].z;\n            if (level[y]||!z) continue;level[y]=level[x]+1;q.push(y);if (y==T) return 1;\n        }\n    }return 0;\n}\ninline int dfs(int x,int s){\n    if (x==T) return s;int ss=s;\n    for (int i=h[x];i;i=data[i].next){\n        int y=data[i].y,z=data[i].z;\n        if(level[y]==level[x]+1&&z){\n            int xx=dfs(y,min(s,z));if (!xx) level[y]=0;\n            s-=xx;data[i].z-=xx;data[i^1].z+=xx;if (!s) return ss;\n        }\n    }return ss-s;\n}\nint main(){\n    freopen(\"4001.in\",\"r\",stdin);\n    n=read();m=read();int tot=0;T=n*m;\n    for (int i=1;i<=n;++i)\n        for (int j=1;j<=m;++j) id[i][j]=++tot;\n    for (int i=1;i<=n;++i)\n        for (int j=1;j<m;++j){int v=read();insert1(id[i][j],id[i][j+1],v);}\n    for (int i=1;i<=n-1;++i)\n        for (int j=1;j<=m;++j){int v=read();insert1(id[i][j],id[i+1][j],v);}\n    for (int i=1;i<n;++i)\n        for (int j=1;j<m;++j){int v=read();insert1(id[i][j],id[i+1][j+1],v);}\n//    for (int i=2;i<=num;++i) printf(\"%d %d %d\\n\",data[i].x,data[i].y,data[i].z);\n    int ans=0;while(bfs()) ans+=dfs(1,inf);printf(\"%d\",ans);\n    return 0;\n}\n```\nspfa\u5468\u51ac\u300a\u4e24\u6781\u76f8\u901a\u2014\u2014\u6d45\u6790\u6700\u5927\u2014\u6700\u5c0f\u5b9a\u7406\u5728\u4fe1\u606f\u5b66\u7ade\u8d5b\u4e2d\u7684\u5e94\u7528\u300b\n\n\n\u5728bzoj\u548c\u6d1b\u8c37\u4e0a \u4e24\u4e2adijkstra\u548cspfa\u7684\u901f\u5ea6\u4e0d\u5c3d\u76f8\u540c \u53e6\u5916 \u63d0\u9192\u4e0b \u8fd9\u9898\u6700\u6076\u5fc3\u7684\u5730\u65b9\u5c31\u662f\u9700\u8981\u5224\u65ad n==1||m==1\u8fd9\u662f\u6570\u636e\u7684\u95ee\u9898\n\n\u7136\u540e\u53c2\u7167\u8bba\u6587\u4e2d\u5efa\u8fb9\u65b9\u5f0f\u8dd1\u6700\u77ed\u8def\u5373\u53ef  \u5efa\u8fb9\u65b9\u6cd5\u5373\uff1a\u7a7f\u8fc7\u6bcf\u6761\u8fb9\u8fde\u63a5\u4e24\u4e2a\u5e73\u9762\u5efa\u4e00\u6761\u8fb9 \u6743\u503c\u5c31\u662f\u6211\u7a7f\u8fc7\u7684\u90a3\u4e2a\u8fb9 \u7136\u540e\u628a\u6211\u5e73\u9762\u5916\u7684\u4e24\u70b9\u8fde\u4e00\u6761\u8fb9 \u628a\u5e73\u9762\u5916\u4e5f\u5212\u5206\u6210\u4e24\u8fb9 \u7136\u540e\u4e00\u8fb9\u8bbe\u6210\u6e90\u70b9 \u4e00\u8fb9\u8bbe\u6210\u6c47\u70b9\u5373\u53ef\n\n\nupdate:\u6d1b\u8c37  \u6700\u540e\u4e00\u4e2a\u70b9\u59cb\u7ec8\u5361\u4e0d\u8fc7\u53bb\u5f00\u4e86o2\u53ef\u4ee5\u8e6d\u8fc7\u53bb dicnic\u5012\u662f\u8fc7\u53bb\u4e86\n\n\nupdate:\u6d1b\u8c37\u52a0\u4e86slf\u4f18\u5316\u7ec8\u4e8e\u8fc7\u53bb\u4e86\n\n\n```cpp\n#include<deque>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define N 2200000\n#define pa pair<int,int>\nusing namespace std;\ninline char gc(){\n    static char now[1<<16],*S,*T;\n    if (T==S){T=(S=now)+fread(now,1,1<<16,stdin);if (T==S) return EOF;}\n    return *S++;\n}\ninline int read(){\n    int x=0;char ch=gc();\n    while(ch<'0'||ch>'9') ch=gc();\n    while(ch<='9'&&ch>='0'){x=x*10+ch-'0';ch=gc();}\n    return x;\n}\nstruct node{\n    int y,z,next;\n}data[N*3];\nint num,h[N],id[1100][1100][3],f[N],flag[N],T,n,m;\ninline void insert1(int x,int y,int z){\n    data[++num].y=y;data[num].z=z;data[num].next=h[x];h[x]=num;\n    data[++num].y=x;data[num].z=z;data[num].next=h[y];h[y]=num;\n}deque<int>q;\n//priority_queue<pa,vector<pa>,greater<pa> > q;\nvoid spfa(){\n    memset(flag,0,sizeof(flag));memset(f,0x3f,sizeof(f));q.push_front(0);f[0]=0;flag[0]=1;\n    while(!q.empty()){\n        int x=q.front();q.pop_front();flag[x]=0;\n        for (int i=h[x];i;i=data[i].next){\n            int y=data[i].y,z=data[i].z;\n            if (f[x]+z<f[y]){\n                f[y]=f[x]+z;if(!flag[y]) {\n                    flag[y]=1;if(!q.empty()&&f[y]<f[q.front()]) q.push_front(y);else q.push_back(y);\n                }\n            }\n        }\n    }\n}\n/*void dijkstra(){\n    memset(f,0x3f,sizeof(f));memset(flag,0,sizeof(flag));f[0]=0;q.push(make_pair(0,0));\n    while(!q.empty()){\n        int x=q.top().second;q.pop();if(flag[x]) continue;flag[x]=1;\n        for (int i=h[x];i;i=data[i].next){\n            int y=data[i].y,z=data[i].z;\n            if (f[x]+z<f[y]){\n                f[y]=f[x]+z;q.push(make_pair(f[y],y));\n            }\n        }\n    }\n}*/\nint main(){\n    freopen(\"bzoj1001.in\",\"r\",stdin);\n    n=read();m=read();int tot=1;T=n*m*2+1000;\n    if(n==1||m==1){\n        if(n<m) swap(n,m);int ans=0x3f3f3f3f;\n        for (int i=1;i<n;++i) ans=min(ans,read());printf(\"%d\\n\",ans);return 0;\n    } \n    for (int i=1;i<n;++i)\n        for (int j=1;j<m;++j) id[i][j][1]=++tot,id[i][j][2]=++tot;\n    for (int i=1;i<m;++i) insert1(0,id[1][i][1],read());\n    for (int i=2;i<n;++i)\n        for (int j=1;j<m;++j) insert1(id[i-1][j][2],id[i][j][1],read());\n    for (int i=1;i<m;++i) insert1(id[n-1][i][2],T,read());\n    for (int i=1;i<n;++i){\n        insert1(T,id[i][1][2],read());\n        for (int j=2;j<m;++j) insert1(id[i][j-1][1],id[i][j][2],read());\n        insert1(id[i][m-1][1],0,read());\n    }\n    for (int i=1;i<n;++i)\n        for (int j=1;j<m;++j) insert1(id[i][j][1],id[i][j][2],read());\n    //for (int i=1;i<=num;++i) printf(\"%d %d %d\\n\",data[i].x,data[i].y,data[i].z);\n    spfa();printf(\"%d\",f[T]);\n    return 0;\n}\n```",
        "postTime": 1513693215,
        "uid": 5037,
        "name": "elijahqi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4001 \u3010[BJOI2006]\u72fc\u6293\u5154\u5b50\u3011"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\n\u7ed9\u5b9a\u4e00\u5f20\u65e0\u5411\u56fe\uff0c\u9700\u8981\u6d88\u8017\u4ee3\u4ef7\u624d\u80fd\u4f7f\u4e00\u6761\u8fb9\u88ab`\u3010\u6570\u636e\u5220\u9664\u3011`\uff0c\u6c42\u4f7f\u8fd9\u5f20\u56fe\u4e0d\u8fde\u901a\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n\u4e00\u770b\u5c31\u662f\u6700\u5c0f\u5272\u7684\u5e94\u7528\u554a\u3002\u3002\u3002\n\n\u4ece $ u $ \u5230 $ v $\uff0c\u8fb9\u6743\u4e3a $ w $ \u7684\u8fb9\uff0c\u5efa\u4e24\u6761\uff1a\u4e00\u6761\u4ece $ u $ \u5230 $ v $ \uff0c\u8fb9\u6743\u4e3a $ w $\uff0c\u53e6\u4e00\u6761\u4ece $ v $ \u5230 $ u $\uff0c\u8fb9\u6743\u4e5f\u4e3a $ w $\u3002\n\n\u7136\u540e\u76f4\u63a5\u8dd1 $ \\rm Dinic $ \u5c31\u884c\u4e86qwq\u3002\n\ncode\uff1a\n```cpp\n#include<cstring>\n#include<cstdio>\n#include<queue> \nconst int M=1e6+5;\nstruct Edge{\n\tint to,nx,flow;\n}e[M<<4];\nint n,m,s,t,cnt,d[M],h[M],sur[M],id[1005][1005];\ninline void Add(int x,int y,int flow){\n\te[++cnt]=(Edge){y,h[x],flow};h[x]=cnt;\n}\ninline int min(const int x,const int y){\n\treturn x>y?y:x;\n}\ninline bool BFS()\n{\n\tstd::queue<int>q;\n\tmemset(d,0,(n*m+1)<<2);\n\td[s]=1;q.push(s);\n\twhile(!q.empty()){\n\t\tint u=q.front();q.pop();\n\t\tfor(int E=h[u];E;E=e[E].nx)if(e[E].flow){\n\t\t\tint v=e[E].to;\n\t\t\tif(!d[v]){\n\t\t\t\td[v]=d[u]+1;\n\t\t\t\tq.push(v);\n\t\t\t}\t\n\t\t}\n\t}\n\treturn d[t];\n}\ninline int DFS(int u,int flow)\n{\n\tif(u==t)return flow;\n\tint used=flow;\n\tfor(int&E=sur[u];E;E=e[E].nx)if(e[E].flow){\n\t\tint v=e[E].to;\n\t\tif(d[u]+1==d[v])\n\t\t{\n\t\t\tint f=DFS(v,min(used,e[E].flow));\n\t\t\te[E].flow-=f,e[E^1].flow+=f;used-=f;\n\t\t\tif(!f)d[v]=0;if(!used)return flow;\n\t\t}\n\t}\n\treturn flow-used;\n}\nsigned main(){\n\tint i,j,ans=0,flow;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=1;i<=n;++i)for(j=1;j<=m;++j)id[i][j]=++cnt;\n\tcnt=1;s=id[1][1];t=id[n][m];\n\tfor(i=1;i<=n;++i)for(j=1;j<m;++j){\n\t\tint&x=id[i][j],&y=id[i][j+1];\n\t\tscanf(\"%d\",&flow);\n\t\tAdd(x,y,flow);Add(y,x,0);\n\t\tAdd(y,x,flow);Add(x,y,0);\n\t}\n\tfor(i=1;i<n;++i)for(j=1;j<=m;++j){\n\t\tint&x=id[i][j],&y=id[i+1][j];\n\t\tscanf(\"%d\",&flow);\n\t\tAdd(x,y,flow);Add(y,x,0);\n\t\tAdd(y,x,flow);Add(x,y,0);\n\t}\n\tfor(i=1;i<n;++i)for(j=1;j<m;++j){\n\t\tint&x=id[i][j],&y=id[i+1][j+1];\n\t\tscanf(\"%d\",&flow);\n\t\tAdd(x,y,flow);Add(y,x,0);\n\t\tAdd(y,x,flow);Add(x,y,0);\n\t}\n\twhile(BFS()){\n\t\tfor(int u=1;u<=n*m;++u)sur[u]=h[u];\n\t\twhile(int flow=DFS(s,2e9))ans+=flow;\n\t}\n\tprintf(\"%d\",ans);\n}\n```",
        "postTime": 1596901757,
        "uid": 160839,
        "name": "Prean",
        "ccfLevel": 7,
        "title": "\u56fe\u8bba \u7f51\u7edc\u6d41 P4001\u9898\u89e3"
    },
    {
        "content": "[\u89e3\u9898\u601d\u8def]\n\n\u72fc\u8981\u6293\u4f4f\u5154\u5b50\uff0c\u5c31\u8981\u201c\u5207\u65ad\u201d**\u5de6\u4e0a\u89d2**\u5230**\u53f3\u4e0b\u89d2**\u7684\u8fde\u901a\u6027\uff0c\u5373\u5272\u65ad\u4e00\u4e9b\u8fb9\uff0c\u4f7f\u5f97 \u548c \u4e0d\u8fde\u901a\u3002  \n\n\u4ece \u7ecf\u9a8c\u6765\u770b\uff0c\u8fd9\u6216\u8bb8\u5c31\u7b49\u4ef7\u4e8e\u8ba9\u72fc\u5360\u636e\u4e00\u4e9b\u5bf9\u5076\u56fe\u7684\u8fb9\uff0c\u4f7f\u5f97\u901a\u8fc7\u8fd9\u4e9b\u8fb9\u53ef\u4ee5\u8fde\u901a\u5bf9\u5076\u56fe\u4e2d\u201c**\u5de6\u8fb9\u754c\u4e0b\u8fb9\u754c\u4e4b\u4e00**\u201d\u4e0e\u201c**\u53f3\u8fb9\u754c\u4e0a\u8fb9\u754c\u4e4b\u4e00** \u201d\u3002       \n\n\u4e8b\u5b9e\u4e0a\u6211\u4eec\u4e0a\u9762\u63d0\u5230\u7684\u5e73\u9762\u56fe\u6700\u5c0f\u5272\u8f6c\u5bf9\u5076\u56fe\u6700\u77ed\u8def\u7684\u65b9\u6cd5\uff0c\u6b63\u662f\u7528\u4e86\u8fd9\u6837\u7684\u539f\u7406\u3002\u201c**\u5de6\u8fb9\u754c\u4e0b\u8fb9\u754c\u4e4b\u4e00**\u201d\u4e0e\u201c**\u53f3\u8fb9\u754c\u4e0a\u8fb9\u754c\u4e4b\u4e00**\u201d\u5c31\u6070\u6070\u5bf9\u5e94\u7740 \u4e0e \uff0c\u6211\u4eec\u627e\u5230 \u5230 \u7684\u6700\u77ed\u8def\uff0c\u5176\u5b9e\u5c31\u662f\u627e\u5230\u4e86\u6700\u5c0f\u4ee3\n\u4ef7\u7684\u4f7f\u5f97\u201c**\u5de6\u8fb9\u754c\u4e0b\u8fb9\u754c\u4e4b\u4e00**\u201d\u4e0e\u201c**\u53f3\u8fb9\u754c\u4e0a\u8fb9\u754c\u4e4b\u4e00**\u201d\u8fde\u901a\u7684\u65b9\u5f0f\u3002\n\n\u4f46\u5f80\u5f80\u5e73\u9762\u56fe\u8f6c\u5bf9\u5076\u56fe\u590d\u6742\u7684\u5730\u65b9\u7684\u5728\u4e8e\u5bf9\u5076\u56fe\u7684\u5efa\u56fe\uff0c\u8bf7\u8bfb\u8005\u5148\u5c1d\u8bd5\u81ea\u5df1\u5b8c\u6210\u672c\u9053\u9898\u76ee\uff0c\u5982\u679c\u9047\u5230\u56f0\u96be\u53ef\u4ee5\u53c2\u7167\u4e0b\u9762\u7ed9\u51fa\u7684\u4ee3\u7801\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define INF 0x3f3f3f3f\n#define maxn 2222222\ninline int read()\n{\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\ntypedef pair<int,int>P;//first\u662f\u6700\u77ed\u8ddd\u79bb,second\u662f\u9876\u70b9\u7f16\u53f7\nstruct edge\n{\n\tint to,cost;\n};\nvector<edge>g[maxn];//\u90bb\u63a5\u77e9\u9635\nint dis[maxn];//dis[i]\u8868\u793ai\u5230s\u7684\u6700\u77ed\u8ddd\u79bb\nvoid init()//\u521d\u59cb\u5316\n{\n\tfor(int i=0;i<maxn;i++)g[i].clear();\n}\nvoid add(int u,int v,int c)//\u53cc\u5411\u8fb9,\u4eceu\u5230v,\u6743\u503c\u4e3ac\n{\n\t// printf(\"u=%d v=%d c=%d\\n\",u,v,c);\n\tg[u].push_back((edge){v,c});\n\tg[v].push_back((edge){u,c});\n}\nvoid Dijkstra(int s)//\u6c42\u6240\u6709\u9876\u70b9\u5230\u8d77\u70b9s\u7684\u6700\u77ed\u8ddd\u79bb\n{\n\tpriority_queue< P,vector<P>,greater<P> >que;//\u5806\u6309\u7167first\u4ece\u5927\u5230\u5c0f\u7684\u987a\u5e8f\u53d6\u51fa\u503c\n\tfor(int i=0;i<maxn;i++)//\u521d\u59cb\u5316\n\tdis[i]=INF;\n\tdis[s]=0;\n\tque.push(P(0,s));//\u8d77\u70b9\u8fdb\u961f\n\twhile(!que.empty())\n\t{\n\t\tP p=que.top();\n\t\tque.pop();\n\t\tint v=p.second;\n\t\tif(dis[v]<p.first) continue;//\u526a\u679d\n\t\tfor(int i=0;i<g[v].size();i++)\n\t\t{\n\t\t\tedge e=g[v][i];\n\t\t\tif(dis[e.to]>dis[v]+e.cost)\n\t\t\t{\n\t\t\t\tdis[e.to]=dis[v]+e.cost;\n\t\t\t\tque.push(P(dis[e.to],e.to));\n\t\t\t}\n\t\t}\n\t}\n}\nint n,m;\nint main()\n{\n\twhile(~scanf(\"%d%d\",&n,&m))\n\t{\n\t\tinit();\n\t\tint v,N=2*(n-1)*(m-1)+1;\n\t\tfor(int j=1;j<m;j++)\n\t\tv=read(),add(j,N,v);\n\t\tfor(int i=1;i<n-1;i++)\n\t\tfor(int j=1;j<m;j++)\n\t\tv=read(),add((2*i-1)*(m-1)+j,2*i*(m-1)+j,v);\n\t\tfor(int j=1;j<m;j++)\n\t\tv=read(),add(0,(2*n-3)*(m-1)+j,v);\n\t\tfor(int i=1;i<n;i++)\n\t\tfor(int j=0;j<m;j++)\n\t\t{\n\t\t\tv=read();\n\t\t\tif(j==0)add(0,(2*i-1)*(m-1)+1,v);\n\t\t\telse if(j==m-1)add((2*i-1)*(m-1),N,v);\n\t\t\telse add((2*i-2)*(m-1)+j,(2*i-2)*(m-1)+j+m,v);\n\t\t}\n\t\tfor(int i=1;i<n;i++)\n\t\tfor(int j=1;j<m;j++)\n\t\tv=read(),add((2*i-2)*(m-1)+j,(2*i-1)*(m-1)+j,v);\n\t\tDijkstra(0);\n\t\tprintf(\"%d\\n\",dis[N]);\n\t}\n\treturn 0;\n}\n```\n\n\u5927\u5bb6\u53ef\u4ee5\u5f00O2.",
        "postTime": 1589615428,
        "uid": 324858,
        "name": "\u26a1114514_zzm\u26a1",
        "ccfLevel": 5,
        "title": "P4001 [ICPC-Beijing 2006]\u72fc\u6293\u5154\u5b50"
    },
    {
        "content": "\u91c7\u7528\u5bf9\u5076\u56fe\u4e0a\u6700\u77ed\u8def\u6c42\u89e3\u3002  \n\u5c06\u7f51\u683c\u56fe\u4e2d\u7684\u683c\u5b50\u6309\u5e8f\u7f16\u53f7,\u8003\u8651\u539f\u56fe\u7684\u6bcf\u4e00\u6761\u8fb9,\u6309\u7167\u7f51\u683c\u56fe\u7684\u6027\u8d28\u7528\u6570\u5b66\u65b9\u6cd5\u63a8\u51fa\u5176\u4e24\u8fb9\u7684\u5e73\u9762\u683c\u7684\u7f16\u53f7,\u5c06\u8fd9\u4e24\u4e2a\u5e73\u9762\u8fde\u8fb9\u5904\u7406\u5373\u53ef\u3002  \n\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\u662f,\u4e0d\u8981\u8bd5\u56fe\u5efa\u7acb\u4ece\u5de6\u4e0a\u5230\u53f3\u4e0b\u7684\u5355\u5411DAG\u800c\u5e94\u5f53\u5efa\u7acb\u53cc\u5411\u7684\u8fb9\u3002  \n```cpp\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#define pii pair<int, int>\n\nusing namespace std;\n\nconst int maxn = 1234, sz = 1234567, inf = 0x3f3f3f3f;\npriority_queue<pii> q;\nint head[sz*2], ver[sz*6], wei[sz*6], nex[sz*6], dis[sz*2], tot;\ninline void addedge(int u, int v, int w) {\n\tver[tot] = v; wei[tot] = w; nex[tot] = head[u]; head[u] = tot++;\n}\n\nvoid dij(int s) {\n\tmemset(dis, inf, sizeof(dis));\n\tdis[s] = 0, q.push(make_pair(0, s));\n\twhile(!q.empty()) {\n\t\tint cur = q.top().second, dmen = -q.top().first; q.pop();\n\t\tif(dmen > dis[cur]) continue;\n\t\tfor(int i = head[cur]; ~i; i = nex[i])\n\t\t\tif(dis[ver[i]] > dis[cur] + wei[i]) {\n\t\t\t\tdis[ver[i]] = dis[cur] + wei[i];\n\t\t\t\tq.push(make_pair(-dis[ver[i]], ver[i]));\n\t\t\t}\n\t}\n}\n\nint main() {\n\tmemset(head, -1, sizeof(head));\n\tint n, m, tmp;\n\tscanf(\"%d %d\", &n, &m);\n\tfor(int i = 1; i <= n; ++i)\n\t\tfor(int j = 1; j < m; ++j) {\n\t\t\tscanf(\"%d\", &tmp);\n\t\t\tint pup = i==1?0:(2*(i-2)*(m-1)+2*j-1), pdown = i==n?(2*(n-1)*(m-1)+1):(2*(i-1)*(m-1)+2*j);\n\t\t\taddedge(pup, pdown, tmp);\n\t\t\taddedge(pdown, pup, tmp);\n\t\t}\n\tfor(int i = 1; i < n; ++i)\n\t\tfor(int j = 1; j <= m; j++) {\n\t\t\tscanf(\"%d\", &tmp);\n\t\t\tint plft = j==1?(2*(n-1)*(m-1)+1):(2*(i-1)*(m-1)+2*(j-1)), prit = j==m?0:(2*(i-1)*(m-1)+2*j-1);\n\t\t\taddedge(plft, prit, tmp);\n\t\t\taddedge(prit, plft, tmp);\n\t\t}\n\tfor(int i = 1; i < n; i++)\n\t\tfor(int j = 1; j < m; j++) {\n\t\t\tscanf(\"%d\", &tmp);\n\t\t\tint plft = 2*(i-1)*(m-1)+2*j-1, prit = plft + 1;\n\t\t\taddedge(plft, prit, tmp);\n\t\t\taddedge(prit, plft, tmp);\n        }\n\tdij(0);\n\tprintf(\"%d\\n\", dis[2*(n-1)*(m-1)+1]);\n\treturn 0;\n}\n```",
        "postTime": 1570719717,
        "uid": 88735,
        "name": "\u5bd2\u9e3d\u513f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4001 \u3010[ICPC-Beijing 2006]\u72fc\u6293\u5154\u5b50\u3011"
    },
    {
        "content": "\u9898\u76ee\u5730\u5740\uff1a[P4001 [ICPC-Beijing 2006]\u72fc\u6293\u5154\u5b50](https://www.luogu.org/problemnew/show/P4001)\n\n#### \u5e73\u9762\u56fe\n\n\u8fb9\u4e0e\u8fb9\u53ea\u5728\u9876\u70b9\u76f8\u4ea4\u7684\u56fe\u3002\n\n#### \u5bf9\u5076\u56fe\n\n\u5bf9\u4e8e\u4e00\u4e2a\u5e73\u9762\u56fe\uff0c\u90fd\u6709\u5176\u5bf9\u5e94\u7684\u5bf9\u5076\u56fe\u3002\n\n* \u5e73\u9762\u56fe\u88ab\u5212\u5206\u51fa\u7684\u6bcf\u4e00\u4e2a\u533a\u57df\u5f53\u4f5c\u5bf9\u5076\u56fe\u7684\u4e00\u4e2a\u70b9\uff1b\n* \u5e73\u9762\u56fe\u4e2d\u7684\u6bcf\u4e00\u6761\u8fb9\u4e24\u8fb9\u7684\u533a\u57df\u5bf9\u5e94\u7684\u70b9\u7528\u8fb9\u76f8\u8fde\uff0c\u7279\u522b\u5730\uff0c\u82e5\u4e24\u8fb9\u4e3a\u540c\u4e00\u533a\u57df\u5219\u52a0\u4e00\u6761\u56de\u8fb9\uff08\u81ea\u73af\uff09\u3002\n\n\u8fd9\u6837\u6784\u6210\u7684\u56fe\u5373\u4e3a\u539f\u5e73\u9762\u56fe\u7684\u5bf9\u5076\u56fe\u3002\n\n#### \u5b9a\u7406\n\n\u5e73\u9762\u56fe\u6700\u5c0f\u5272 $=$ \u5bf9\u5076\u56fe\u6700\u77ed\u8def\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define pii pair<int, int>\n#define X first\n#define Y second\n#define mp make_pair\n#define ui unsigned int\nusing namespace std;\nconst int N = 2e6 + 6;\nint n, m, s, t, d[N];\nvector<pii> e[N];\npriority_queue<pii> q;\nbitset<N> v;\n\ninline void add(int x, int y, int z) {\n\te[x].push_back(mp(y, z));\n}\n\ninline int get(int i, int j, int k) {\n\treturn 2 * (m - 1) * (i - 1) + 2 * (j - 1) + k;\n}\n\ninline void ins(int x, int y) {\n\tint z;\n\tscanf(\"%d\", &z);\n\tadd(x, y, z);\n\tadd(y, x, z);\n}\n\ninline void dijkstra() {\n\tmemset(d, 0x3f, sizeof(d));\n\td[s] = 0;\n\tq.push(mp(0, s));\n\twhile (q.size()) {\n\t\tint x = q.top().Y;\n\t\tif (x == t) return;\n\t\tq.pop();\n\t\tif (v[x]) continue;\n\t\tv[x] = 1;\n\t\tfor (ui i = 0; i < e[x].size(); i++) {\n\t\t\tint y = e[x][i].X, z = e[x][i].Y;\n\t\t\tif (d[y] > d[x] + z) {\n\t\t\t\td[y] = d[x] + z;\n\t\t\t\tq.push(mp(-d[y], y));\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main() {\n\tcin >> n >> m;\n\tt = 2 * (n - 1) * (m - 1) + 1;\n\tfor (int j = 1; j < m; j++) ins(get(1, j, 2), t);\n\tfor (int i = 2; i < n; i++)\n\t\tfor (int j = 1; j < m; j++)\n\t\t\tins(get(i - 1, j, 1), get(i, j, 2));\n\tfor (int j = 1; j < m; j++) ins(get(n - 1, j, 1), s);\n\tfor (int i = 1; i < n; i++) {\n\t\tins(get(i, 1, 1), s);\n\t\tfor (int j = 2; j < m; j++)\n\t\t\tins(get(i, j - 1, 2), get(i, j, 1));\n\t\tins(get(i, m - 1, 2), t);\n\t}\n\tfor (int i = 1; i < n; i++)\n\t\tfor (int j = 1; j < m; j++)\n\t\t\tins(get(i, j, 1), get(i, j, 2));\n\tdijkstra();\n\tcout << d[t] << endl;\n\treturn 0;\n}\n```",
        "postTime": 1552324609,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "P4001 [ICPC-Beijing 2006]\u72fc\u6293\u5154\u5b50"
    },
    {
        "content": "# \u5514\u59c6\n~~\u6b64\u9898\u5de8\u6bd2~~\n\n\u4e4b\u524d\u6709\u4f4d\u5927\u4f6c\u7279\u610f\u62ff\u8fd9\u9898\u6765\u9017\u6211\uff0c\u5f53\u6211\u6beb\u4e0d\u72b9\u8c6b\u7684\u558a\u51fa\u201c\u8fd9\u9898\u4e0d\u5c31\u662f\u6807\u51c6\u6700\u5c0f\u5272\u5417\uff1f\u201d\u4ed6\u544a\u8bc9\u6211\u8fd9\u9898\u5176\u5b9e\u662f\u8dd1\u6700\u77ed\u8def\u3002\u4f46\u6211\u56de\u6765\u4e00\u770b\u9898\u89e3\u3002\u3002\u3002\u6211\u5c31\u662f\u8981\u7528\u7f51\u7edc\u6d41\uff01\uff01\uff01\n\n------------\n\u8fd9\u9898\u5c31\u662f\u4e00\u4e2a\u6807\u51c6\u6700\u5c0f\u5272\uff0c\u76f8\u4fe1\u5927\u5bb6\u90fd\u770b\u51fa\u6765\u4e86\u5427\uff0c\u56e0\u4e3a\u65e2\u7136\u60f3\u8ba9\u5154\u5b50\u8dd1\u4e0d\u8fc7\u53bb\u7684\u8bdd\u5c31\u8981\u5728\u6bcf\u6761\u53ef\u4ee5\u4ece\u5de6\u4e0a\u5230\u53f3\u4e0b\u7684\u8fb9\u5e03\u4e0b\u57cb\u4f0f\uff0c\u8fd9\u548c\u5272\u7684\u5b9a\u4e49\u662f\u4e00\u6837\u7684\u3002\u63a5\u7740\u6211\u4eec\u6765\u770b\u770b\u600e\u4e48\u5efa\u56fe\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002~~\u597d\u50cf\u6ca1\u5565\u597d\u8bb2\u7684~~\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u4e2a\u9898\u91cc\u5e76\u6ca1\u6709\u89c4\u5b9a\u662f\u5154\u5b50\u53ea\u80fd\u5f80\u53f3\u4e0b\u8dd1\uff0c\u6240\u4ee5\u6ca1\u6761\u8fb9\u90fd\u662f**\u53cc\u5411\u7684\uff01\uff01\uff01\uff01**~~\u770b\u8ba8\u8bba\u91cc\u597d\u591a\u5927\u4f6c\u90fd\u88ab\u6bd2\u4e86~~\n\u5efa\u5b8c\u8fb9\u4e4b\u540e\u76f4\u63a5\u8dd1\u6700\u5927\u6d41\u5c31\u884c\u4e86\uff08\u6700\u5c0f\u5272=\u6700\u5927\u6d41\uff09\n\nps\uff1a\u8fd9\u9898\u56e0\u4e3a\u6b63\u89e3\u4e0d\u662f\u7f51\u7edc\u6d41\uff0c\u6240\u4ee5\u6734\u7d20\u7684dinic\u4f1a\u88ab\u5361\uff0c\u8bb0\u5f97\u5e26\u4e0a\u5f53\u524d\u5f27\u4f18\u5316~~\u5b9e\u5728\u4e0d\u884c\u518d\u5438\u53e3\u6c27~~\n\n~~\u7801\u98ce\u5de8\u4e11~~\n```cpp\n// luogu-judger-enable-o2\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<queue>\n#define MAXN 1000100\n#define MAXM 5500050\nusing namespace std;\nint head[MAXN],next[MAXM*2],to[MAXM*2],w[MAXM*2];\nint n,m,s,t;\nint cnt=-1;\nint deep[MAXN];\nvoid link(int a,int b,int c){\n     cnt++;\n     w[cnt]=c;\n     next[cnt]=head[a];\n     to[cnt]=b;\n     head[a]=cnt;\n     cnt++;\n     w[cnt]=0;\n     next[cnt]=head[b];\n     to[cnt]=a;\n     head[b]=cnt;\n}\nbool bfs(){\n     memset(deep,0,sizeof(deep));\n     queue<int> q;\n     while(!q.empty())q.pop();\n     q.push(s);\n     deep[s]=1;\n     while(!q.empty()){\n                       int now=q.front();\n                       q.pop();\n                       for(int i=head[now];i!=-1;i=next[i]){\n                               if (w[i]&&!deep[to[i]]){\n                                                       deep[to[i]]=deep[now]+1;\n                                                       q.push(to[i]);\n                               }\n                       }\n     }\n     if (deep[t])return 1;else return 0;\n}\nint dinic(int now,int last){\n    if (now==t||!last)return last;\n    int ret=0;\n    for(int i=head[now];i!=-1;i=next[i]){\n            if(deep[to[i]]-1==deep[now]&&w[i]){\n                                               int zgl=dinic(to[i],min(w[i],last-ret));\n                                               if (zgl){\n                                                        w[i]-=zgl;\n                                                        w[i^1]+=zgl;     \n                                                        ret+=zgl;\n                                               }\n            }\n    }\n    if (!ret)deep[now]=-1;\n    return ret;\n}\ninline int read(){\n   int s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}\nint num(int a,int b){\n    return (a-1)*m+b;\n}\nint main(){\n    cin>>n>>m;\n    s=num(1,1);t=num(n,m);\n    int a;\n    memset(head,-1,sizeof(head));\n    for(int i=1;i<=n;i++){\n            for(int j=1;j<m;j++){\n                    a=read();\n                    link(num(i,j),num(i,j+1),a);\n                    link(num(i,j+1),num(i,j),a);\n            }\n    }\n    for(int i=1;i<n;i++){\n            for(int j=1;j<=m;j++){\n                    a=read();\n                    link(num(i,j),num(i+1,j),a);\n                    link(num(i+1,j),num(i,j),a);\n            }\n    }\n    for(int i=1;i<n;i++){\n            for(int j=1;j<m;j++){\n                    a=read();\n                    link(num(i,j),num(i+1,j+1),a);\n                    link(num(i+1,j+1),num(i,j),a);\n            }\n    }\n    int ans=0;\n    while(bfs())\n                 ans+=dinic(s,9999999);\n    cout<<ans;\n    return 0;\n}\n\n```",
        "postTime": 1548932788,
        "uid": 118273,
        "name": "\u543e\u738b\u7f8e\u5982\u753b",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4001 \u3010[ICPC-Beijing 2006]\u72fc\u6293\u5154\u5b50\u3011"
    }
]