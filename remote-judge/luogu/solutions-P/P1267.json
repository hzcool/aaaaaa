[
    {
        "content": "\u9996\u5148\uff0c\u6211\u4eec\u5728\u76f8\u90bb\u7684\u5c0f\u4e09\u89d2\u5f62\u4e4b\u95f4\u5efa\u8fb9\uff0c\u8fd9\u6837\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u4e86\u5728\u56fe\u5185\u9009\u70b9\uff0c\u4f7f\u5176\u4e3a\u4e00\u9897\u6392\u5e8f\u4e8c\u53c9\u6811\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6839\u8282\u70b9\uff0c\u5b83\u7684\u53d6\u503c\u8303\u56f4\u6beb\u65e0\u7591\u95ee\u662f[1,4n^2];\u8bbe\u5b83\u7684\u503c\u4e3ax\uff0c\u90a3\u4e48\u5b83\u7684\u5de6\u513f\u5b50\u7684\u53d6\u503c\u8303\u56f4\u5c31\u662f[1,x-1],\u53f3\u513f\u5b50\u7684\u53d6\u503c\u8303\u56f4\u5219\u662f[x+1,4n^2]\u3002\u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u63a8\u77e5\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u70b9\uff0c\u82e5\u5b83\u7684\u53d6\u503c\u8303\u56f4\u4e3a[a,b]\uff0c\u5b83\u7684\u503c\u4e3ax\uff0c\u5219\u5b83\u7684\u5de6\u513f\u5b50\u53d6\u503c\u8303\u56f4\u4e3a[a,x-1]\uff0c\u53f3\u513f\u5b50\u53d6\u503c\u8303\u56f4\u4e3a[x+1,b]\uff0c\u63a5\u4e0b\u6765\u5c31\u53ea\u8981\u53bb\u679a\u4e3e\u4e0e\u5b83\u76f8\u90bb\u7684\u70b9\u6709\u6ca1\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u5c31\u597d\u3002\n\n\u90a3\u4e48f[i][j][k]\u6570\u7ec4\u5c31\u8868\u793a\u4ee5\u503c\u4e3ai\u7684\u8282\u70b9\u4e3a\u6839\uff0c\u53d6\u503c\u8303\u56f4\u4e3a[j,k]\u65f6\u7684\u6700\u5927\u6392\u5e8f\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u6570\u3002\u7136\u800c\u8fd9\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3aO[(4n^2)^3]\uff0c\u7edd\u5bf9\u4f1a\u7206\u3002\u600e\u4e48\u529e\u5462\uff1f\n\n\u4ece\u4e0a\u4e00\u63a8\u8bba\u6211\u4eec\u80fd\u770b\u51fa\uff0c\u8282\u70b9i\uff08\u9664\u6839\u4e4b\u5916\uff09\u7684\u8303\u56f4\u8fb9\u754c\u4e4b\u4e00\u4e00\u5b9a\u4e0e\u5b83\u7684\u7236\u4eb2\u6709\u5173\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u4e2d\u4e00\u7ef4\u6570\u7ec4\u8f6c\u5316\u4e3a\u7b2c\u51e0\u4e2a\u76f8\u90bb\u7684\u70b9\uff0c\u5373f[i][j][k]\uff0cj\u8868\u793a\u7b2c\u51e0\u4e2a\u76f8\u90bb\u7684\u70b9\u662f\u5b83\u7684\u7236\u4eb2\uff0ck\u5219\u8868\u793a\u5b83\u7684\u53e6\u4e00\u8fb9\u754c\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u8be6\u89c1\u4ee3\u7801\u3002\n```cpp\n#include<bits/stdc++.h>\n using namespace std;\n int n,i,j,k,l,r,ans;\n int ne[1300][3],cnt[1300],f[1300][3][1300],s[5][20][50];\n int read()\n{\n    int x=0,w=0;char ch=0;\n    while (!isdigit(ch)) w|=ch=='-',ch=getchar();\n    while (isdigit(ch)) x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n    return w?-x:x;\n}\n void build(int a,int b){ne[a][cnt[a]++]=b; ne[b][cnt[b]++]=a;}\n int dp(int now,int a,int b)//now\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u503c\uff0cb\u4e3a\u7236\u4eb2\u7684\u503c\uff0ca\u4e3a\u53e6\u4e00\u8fb9\u754c\n{\n    int fa=0; while(ne[now][fa]!=b)fa++;//\u5bfb\u627e\u7236\u4eb2\u662f\u76f8\u90bb\u7684\u7b2c\u51e0\u4e2a\u70b9\n    if(f[now][fa][a])return f[now][fa][a];\n    int x,y,l=0,r=0;\n    if(a>b)x=b+1,y=a; else x=a,y=b-1;\n    for(int i=0;i<3;i++) if(i!=fa&&x<=ne[now][i]&&ne[now][i]<=y)\n    {\n        if (ne[now][i]<now)l=max(l,dp(ne[now][i],x,now));\n        else r=max(r,dp(ne[now][i],y,now));\n    }\n    f[now][fa][a]=l+r+1;\n    return f[now][fa][a];\n}//\u8bb0\u5fc6\u8bdd\u641c\u7d22\n int main()\n{\n    n=read();\n    for(i=1;i<=4;i++)\n     for(j=1;j<=n;j++)\n      for(k=1;k<j+j;k++) s[i][j][k]=read();\n    for(i=1;i<=4;i++)\n        for(j=2;j<=n;j++)\n        {\n            for(k=2;k<j<<1;k+=2)\n            {\n                build(s[i][j][k],s[i][j-1][k-1]); build(s[i][j][k],s[i][j][k-1]);\n                build(s[i][j][k],s[i][j][k+1]);\n            }\n        }\n    for(i=1;i<=n;i++)\n    {\n        build(s[1][i][1],s[3][i][(i<<1)-1]); \n        build(s[2][i][1],s[1][i][(i<<1)-1]);\n        build(s[3][i][1],s[2][i][(i<<1)-1]); \n        build(s[4][i][1],s[1][n][2*n-(i<<1)+1]);\n        build(s[4][i][(i<<1)-1],s[2][n][(i<<1)-1]); \n        build(s[4][n][(i<<1)-1],s[3][n][2*n-(i<<1)+1]);\n    }//\u5efa\u8fb9\n    for(i=1;i<=4*n*n;i++)//\u679a\u4e3e\u6839\n    {\n        l=0; r=0;//\u8bb0\u5f55\u6700\u5927\u5de6\u53f3\u5b50\u6811\n        for(j=0;j<3;j++)\n         if(ne[i][j]<i)l=max(l,dp(ne[i][j],1,i));\n         else r=max(r,dp(ne[i][j],4*n*n,i));\n        ans=max(ans,l+r+1);\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1539213813,
        "uid": 60610,
        "name": "Gavin\u00b7Olivia",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1267 \u3010\u6392\u5e8f\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "~~\u6211\u4f1a\u8bf4\u6211\u5728\u6c34\u5495\u503c\u5417~~\n\n\u7531\u4e8e\u672c\u4eba\u662f**\u849f\u84bb**\uff0c\u6709\u9519\u8bef\u8bf7\u6307\u6b63\uff01qwq\n\n\u9898\u610f\u8fd8\u662f\u5f88\u6e05\u6670\u7684\uff0c\u5176\u4e2d\u6392\u5e8f\u4e8c\u53c9\u6811\u662f\u6307\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6709\u513f\u5b50\u7684\u8282\u70b9\uff0c\u5176\u5de6\u513f\u5b50\u4e00\u5b9a\u5c0f\u4e8e\u8fd9\u4e2a\u8282\u70b9\uff0c\u5176\u53f3\u513f\u5b50\u4e00\u5b9a\u5927\u4e8e\u8fd9\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u6309\u7167\u9898\u76ee\u8981\u6c42\u5efa\u56fe\u5373\u53ef\uff08\u4ee3\u7801\u4e2d\u6709\u76f8\u5e94\u6ce8\u91ca\uff09\u3002\n\n\u4f46\u662f\uff01\uff01\uff01\n\u5bf9\u4e8e\u6837\u4f8b\uff0c\u6709\u4e24\u79cd\u9009\u62e9\uff1a\n\n- \u76f4\u63a5\u590d\u5236\u7c98\u8d34\uff0c\u6b63\u786e\u4ee3\u7801\u8f93\u51fa\u5e94\u8be5\u4e3a $9$\uff1b\n- \u8fd9\u91cc\u63d0\u4f9b\u6b63\u786e\u8f93\u5165\u683c\u5f0f\u7684\u6837\u4f8b\uff0c\u5176\u6b63\u786e\u7b54\u6848\u786e\u5b9e\u4e3a $17$\uff1b\n```\n3 \n19\n33 32 31\n29 3 5 4 30\n22\n25 20 21\n12 24 23 34 35\n14\n13 15 26\n18 17 8 16 27\n11\n10 9 1\n28 7 2 6 36\n```\n\n\u8bfb\u5b8c\u9898\u6765\u7ee7\u7eed\u5904\u7406\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u968f\u673a\u4e8c\u53c9\u6811\uff0c\u6709\u4ec0\u4e48\u529e\u6cd5\u53bb\u679a\u4e3e\u8282\u70b9\u5462\uff1f\u6ce8\u610f\u5230\u6392\u5e8f\u4e8c\u53c9\u6811\u7684\u6027\u8d28\uff1a\n\n1. \u5bf9\u4e8e\u4e00\u8282\u70b9\uff0c\u5176\u513f\u5b50\u7684\u5b50\u6811\u4e5f\u662f\u6392\u5e8f\u4e8c\u53c9\u6811\u3002\n\n2. \u5bf9\u4e8e\u4e00\u8282\u70b9\uff0c\u5176\u5de6\u53f3\u5b50\u6811\u4e0d\u4ea4\u53c9\uff0c\u6ee1\u8db3\u679a\u4e3e\u65f6\u65e0\u540e\u6548\u6027\uff08\u5373\u5de6\u5b50\u6811\u5bf9\u53f3\u5b50\u6811\u65e0\u5f71\u54cd\uff09\u3002\n\n\u540c\u65f6\uff0c\u82e5\u8981\u4f7f\u6811\u6700\u5927\uff0c\u90a3\u4e48\u5de6\u53f3\u5b50\u6811\u90fd\u8981\u662f\u6700\u5927\u7684\uff0c\u5c40\u90e8\u6700\u4f18\u6ee1\u8db3\u5168\u5c40\u6700\u4f18\uff0c\u8fd9\u5c31\u662f\u59a5\u59a5\u7684 DP \u4e86\uff08\u5728\u56fe\u4e2d\u8fd8\u662f\u8bb0\u5fc6\u5316\u66f4\u7b80\u5355\u4e00\u4e9b\uff09\u3002\n\n\u77e5\u9053\u662f DP \u540e\u6211\u4eec\u6765\u627e\u72b6\u6001\uff0c\u8003\u8651\u5230 $n$ \u7684\u8303\u56f4\u5728 $[1,18]$\uff0c$4n^2$ \u4e5f\u4e0d\u4f1a\u8d85\u7a7a\u95f4\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u6876\u7684\u601d\u60f3\uff0c\u7ed3\u5408\u6392\u5e8f\u4e8c\u53c9\u6811\u6027\u8d28\uff1a\n\n\u82e5\u4e00\u4e2a\u70b9\u8303\u56f4\u662f $l$ \u5230 $r$\uff0c\u6b64\u65f6\u679a\u4e3e\u5230 $num$ \u8282\u70b9\uff1a\n\n\u90a3\u4e48\u5176\u5de6\u513f\u5b50\u8303\u56f4\u662f $l$ \u5230 $num-1$\uff0c\u53f3\u513f\u5b50\u8303\u56f4\u662f $num+1$ \u5230 $r$\u3002\u5df2\u7ecf\u786e\u5b9a\u7236\u4eb2\u8282\u70b9\u7684\u65f6\u5019\uff0c\u53ea\u8981\u679a\u4e3e\u5468\u56f4 $3$ \u4e2a\u76f8\u90bb\u5355\u4f4d\u4e09\u89d2\u5f62\u5c31\u53ef\u4ee5\u786e\u5b9a\u4e86\uff0c\u6240\u4ee5\u7a7a\u95f4\u590d\u6742\u5ea6\u662f  $n^2$ \u7ea7\u522b\u7684\u3002\n\n\u5728\u641c\u7d22\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8981\u4f20\u4e0b\u53bb\uff1a\n\n$lson$\uff1a\u5f53\u524d\u8282\u70b9\uff08\u9760\u4e0e\u7236\u4eb2\u8fde\u8d77\u6765\u7684\u8fb9\u5b9e\u73b0\uff09\u3001\u7531\u7236\u4eb2\u786e\u5b9a\u7684\u4e0b\u754c\u3001\u7531\u672c\u8282\u70b9\uff08\u53ef\u7406\u89e3\u6210\u533a\u95f4 DP \u4e2d\u7684\u65ad\u70b9\uff09\u786e\u5b9a\u7684\u4e0a\u754c\uff1b\n\n$rson$\uff1a\u5f53\u524d\u8282\u70b9\uff08\u9760\u4e0e\u7236\u4eb2\u8fde\u8d77\u6765\u7684\u8fb9\u5b9e\u73b0\uff09\u3001\u7531\u7236\u4eb2\u786e\u5b9a\u7684\u4e0a\u754c\u3001\u7531\u672c\u8282\u70b9\uff08\u53ef\u7406\u89e3\u6210\u533a\u95f4 DP \u4e2d\u7684\u65ad\u70b9\uff09\u786e\u5b9a\u7684\u4e0b\u754c\u3002\n\n\u5176\u4f59\u8be6\u89c1\u4ee3\u7801~\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nint n,mp[5][20][40],f[2022][4];\nint vis[2022][4][2022],ans,tot[2022];\nbool e[2022][2022];\nint read()\n{\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nvoid add_edge(int u,int v)\n{\n\tif(!e[u][v])\n\t{\n\t\te[u][v]=1;\n\t\tf[u][++tot[u]]=v;\n\t}\n\tif(!e[v][u])\n\t{\n\t\te[v][u]=1;\n\t\tf[v][++tot[v]]=u;\n\t}\n}\nint dp(int u,int ll,int rr)\n{\n\tint fa=1;//father \n\twhile(f[u][fa]!=rr) fa++;\n\tif(vis[u][fa][ll]>0) return vis[u][fa][ll];\n\tint l,r;\n\t//\u5de6\u5b50\u6811\u8fb9\u754c  \u53f3\u5b50\u6811\u8fb9\u754c \n\tif(ll<=rr) l=ll,r=rr-1;\n\telse l=rr+1,r=ll;\n\tint lson=0,rson=0;\n\tfor(int k=1;k<=3;k++)\n\t{\n\t\t//\u627e\u4e24\u4e2a\u7b26\u5408\u6392\u5e8f\u4e8c\u53c9\u6811\u6761\u4ef6\u7684\u513f\u5b50 \n\t\tif(k!=fa&&l<=f[u][k]&&f[u][k]<=r)\n\t\t{\n\t\t\tif(f[u][k]<u) lson=max(lson,dp(f[u][k],l,u));\n\t\t\telse rson=max(rson,dp(f[u][k],r,u));\n\t\t}\n\t}\n\tvis[u][fa][ll]=lson+rson+1;\n\treturn vis[u][fa][ll];\n}\nvoid dfs()\n{\n\tfor(int i=1;i<=4*n*n;i++)\n\t{\n\t\tint lson=0,rson=0;\n\t\tfor(int j=1;j<=3;j++)\n\t\t{\n//\t\t\t\u5206\u5de6\u53f3\u5b50\u6811\u9012\u5f52\n\t\t\tif(f[i][j]<i) lson=max(lson,dp(f[i][j],1,i));\n\t\t\telse rson=max(rson,dp(f[i][j],4*n*n,i));\n\t\t}\n\t\tans=max(ans,lson+rson+1);//\u52a0\u4e0a\u6839\u8282\u70b9\n\t}\n}\nsigned main()\n{\n\tn=read();\n\tfor(int k=1;k<=4;k++)\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=i*2-1;j++)\n\t\tmp[k][i][j]=read();//\u7b2ci\u884c\u7b2cj\u4e2a\u5355\u4f4d\u4e09\u89d2\u5f62 \n\t\n\tfor(int k=1;k<=4;k++)\n\tfor(int i=2;i<n;i++)\n\tfor(int j=2;j<i*2-1;j++)\n\t{\n\t\tadd_edge(mp[k][i][j],mp[k][i][j-1]);\n\t\tadd_edge(mp[k][i][j],mp[k][i][j+1]);\n\t\tif(j&1) add_edge(mp[k][i][j],mp[k][i+1][j+1]);\n\t\telse add_edge(mp[k][i][j],mp[k][i-1][j-1]);\n\t}\n\t//\u6700\u540e\u4e00\u884c\n\tfor(int k=1;k<=4;k++) \n\tfor(int i=2;i<=n*2-1;i+=2)\n\t{\n\t\tadd_edge(mp[k][n][i],mp[k][n][i-1]);\n\t\tadd_edge(mp[k][n][i],mp[k][n][i+1]);\n\t\tadd_edge(mp[k][n][i],mp[k][n-1][i-1]);\n\t}\n\t//\u4e09\u4e2a\u4fa7\u9762\u7684\u6700\u540e\u4e00\u884c\u4e0e\u5e95\u9762 \n\tfor(int i=1;i<=n*2-1;i++)\n\t{\n\t\tadd_edge(mp[1][n][i],mp[4][n-i/2][1]);\n\t\tadd_edge(mp[2][n][i],mp[4][i/2+1][(i/2+1)*2-1]);\n\t\tadd_edge(mp[3][n][i],mp[4][n][n*2-i]);\n\t}\n\t//\u4fa7\u695e\u5904\u76f8\u4ea4\u7684\u5355\u4f4d\u4e09\u89d2\u5f62 \n\tfor(int i=1,j=1;i<=n;i++,j++)\n\t{\n\t\tadd_edge(mp[1][i][1],mp[3][i][i*2-1]);\n\t\tadd_edge(mp[2][i][1],mp[1][i][i*2-1]);\n\t\tadd_edge(mp[3][i][1],mp[2][i][i*2-1]);\n\t}\n\tdfs();\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n\n\u611f\u8c22\u7ba1\u7406\u5458\u8010\u5fc3\u6307\u6b63\uff08\u97a0\u8eacorz\uff09\n\n~~\uff08\u6253\u4e2a\u5e7f\u544a\uff09~~[\u6b22\u8fce\u5404\u4f4d\u5927\u4f6c\u8e29\u7206\u6211\u7684\u535a\u5ba2](https://blog.csdn.net/m0_60137414?spm=1000.2115.3001.5343)",
        "postTime": 1663846910,
        "uid": 240429,
        "name": "fervency",
        "ccfLevel": 4,
        "title": "P1267 \u6392\u5e8f\u4e8c\u53c9\u6811 \u9898\u89e3"
    },
    {
        "content": "\u4fdd\u7559\u539f\u6765\u7684\u4e09\u4e2a4\u4e2a\u4e09\u89d2\u5f62 \u7136\u540e\u5efa\u56fe \u800c\u4e0d\u662f\u641e\u5230\u4e00\u4e2a\u5927\u7684\u4e09\u89d2\u5f62\u91cc\u518d\u5efa\u56fe\n\n\u5177\u4f53\u770b\u4ee3\u7801\u5427\n\n\u6211\u4eec\u5f97\u5230\u4e86\u6bcf\u4e2a\u70b9\u76f8\u90bb\u7684\u4e09\u4e2a\u70b9\u7684\u6743\u503c\u4ee5\u540e \u9700\u8981\u679a\u4e3e\u6839 \u7136\u540e\u6269\u5c55\u7ed3\u70b9 \u7edf\u8ba1\u6700\u5927\u503c\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9 \u6211\u4eec\u5e76\u4e0d\u9700\u8981\u5206\u5f00\u8003\u8651\u5de6\u53f3\u90fd\u9009\u8fd8\u662f\u76f4\u9009\u5de6\u6216\u8005\u76f4\u9009\u53f3\n\n\u6211\u4eec\u5de6\u53f3\u90fd\u6269\u5c55\u4e00\u904d\u7136\u540e\u53d6\u5927\u5e76\u505a\u548c\u5c31ok\n\n\u4f46\u662f\u4ecb\u4e8e\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u8981\u6c42 \u5982\u679c\u6211\u4eec\u6269\u5c55\u8282\u70b9\u65f6\u53ea\u8981\u6c42\u4ed6\u548c\u76f8\u90bb\u7236\u4eb2\u6bd4\u8f83\u5927\u5c0f\u7684\u8bdd\n\n\u4e0d\u80fd\u6ee1\u8db3\u5de6\u5b50\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u5c0f\u4e8e\u6839 \u6240\u4ee5\u6211\u4eec\u6269\u5c55\u7684\u65f6\u5019\u518d\u7ef4\u62a4\u4e00\u4e0b\u8fb9\u754c \u8fd9\u6837\u7684\u8bdd\u5c31\u4f7f\u5f97\u6811\u6ee1\u8db3\u6027\u8d28\u4e86\n\n\u7136\u800c\u65f6\u95f4\u590d\u6742\u5ea6\u4f1a\u5f88\u5927 \u9700\u8981\u8bb0\u5fc6\u5316\n\n\u518d\u7136\u800c\u6211\u4eec\u8fd9\u4e2a\u72b6\u6001\u4e0d\u597d\u8868\u793a \u53ea\u80fd\u75283\u7ef4 f[i][j][k] \u8868\u793a\u4ecej\u5230i \u8fb9\u754c\u662fk(\u4e0d\u7ba1\u662f\u5de6\u8fd8\u662f\u53f3)\u4ee5i\u4e3a\u6839\u7684\u6700\u4f18\u89e3\n\n\u518d\u518d\u7136\u800c\u6211\u4eec\u53c8\u53d1\u73b0\u8fd9\u4e2a\u72b6\u6001\u7206\u7a7a\u95f4\u4e86-- \u964d\u7ef4\u7684\u8bdd \u5982\u679c\u628a\u7b2c\u4e09\u7ef4\u964d\u6389\u663e\u7136\u4f1a\u6709\u91cd\u590d\n\n\u5176\u5b9e\u6211\u4eec\u7684j\u5230i\u662f\u5f88\u6d6a\u8d39\u7684 \u6211\u4eec\u53ef\u4ee5\u538b\u7f29\u7b2c\u4e8c\u7ef4 \u628a\u5230\u4ecej\u6539\u4e3a\u4ecei\u7684\u7b2c\u51e0\u4e2a\u76f8\u90bb\u7684\u70b9\u5230\u7684\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u5b58\u4e0b\u4e86 \u7136\u540e\u5c31\u662f\u7ec6\u8282\u95ee\u9898\u4e86\n\n\u5f00\u59cb\u5b58\u5c0f\u4e09\u89d2\u5f62\u7528\u76845\\*20\\*20 n<=18 RE\u5230\u6b7b....\u5fd8\u8bb0\u5b58\u7684\u4e09\u89d2\u5f62\u4e0d\u662f\u77e9\u5f62\u4e86.....WTF\n\n\n\n\n```cpp\nconst\n  maxnodes = 1296;\ntype\n  relation = array [0..2, 1..maxnodes] of longint;\n  status = array [1..maxnodes] of ^relation;\nvar\n  r:relation;\n  a:status;\n  n,p,max:integer;\n  procedure initialize;\n  var\n    i,j,k,id,q:longint;\n    tri:array [1..4, 1..18, 1..35] of longint;\n    c:array [1..maxnodes] of longint;\n  procedure link(x, y :longint);\n  begin\n    r[c[x], x] := y;\n    inc(c[x]);\n    r[c[y], y] := x;\n    inc(c[y])\n  end;\n  begin\n    readln(n);\n    p := 4 * n * n;\n    fillchar(c, sizeof(c), 0);\n    for i := 1 to p do\n    begin\n      new(a[i]);\n      fillchar(a[i]^, sizeof(a[i]^), 0)\n    end;\n    for i := 1 to 4 do\n      for j := 1 to n do\n      for k := 1 to j shl 1 - 1 do\n      readln(tri[i, j, k]);\n    for i := 1 to 4 do\n      for j := 1 to n do\n      for k := 2 to j shl 1 - 2 do\n    if k and 1 = 0      then\n    begin\n      link(tri[i, j, k], tri[i, j, k - 1]);\n      link(tri[i, j, k], tri[i, j, k + 1]);\n      link(tri[i, j, k], tri[i, j - 1, k - 1])\n    end;\n      j := -1;\n      k := n shl 1 + 1;\n    for i := 1 to n do\n    begin\n      inc(j, 2);\n      dec(k, 2);\n        link(tri[1, i, 1], tri[3, i, j]);\n        link(tri[1, i, j], tri[2, i, 1]);\n        link(tri[1, n, k], tri[4, i, 1]);\n        link(tri[2, i, j], tri[3, i, 1]);\n        link(tri[2, n, j], tri[4, i, j]);\n        link(tri[3, n, j], tri[4, n, k])\n    end\n  end;\n  function getsub(id, range, fid :integer) :integer;\n  var\n    from, low, high, i, j, temp, lmax, rmax :integer;\n  begin\n    from := 0;\n    while r[from, id] <> fid do inc(from);\n    if a[id]^[from, range] > 0 then\n    begin\n      getsub := a[id]^[from, range];\n```\nexit\n\n\n```cpp\n    end;\n    if range > fid then\n      begin\n        low := fid + 1;\n        high := range\n      end\n    else\n    begin\n      low := range;\n      high := fid - 1\n    end;\n    lmax := 0;\n    rmax := 0;\n    for i := 0 to 2 do\n   if (i <> from) and (r[i, id] >= low) and (r[i, id] <= high) then\n   if r[i, id] < id then\n   begin\n     temp := getsub(r[i, id], low, id);\n     if temp > lmax then lmax := temp\n   end\n   else\n   begin\n     temp := getsub(r[i, id], high, id);\n     if temp > rmax then\n     rmax := temp\n   end;\n     i:=lmax + rmax + 1;\n     a[id]^[from, range] := i;\n     getsub := i\n  end;\n  procedure solve;\n  var\n    i, j, k, temp, lmax, rmax :integer;\n  begin\n    max := 0;\n    for i := 1 to p do\n    begin\n      lmax := 0;\n      rmax := 0;\n      for j := 0 to 2 do\n      if r[j, i] < i then\n      begin\n        temp := getsub(r[j, i], 1, i);\n        if temp > lmax then\n        lmax := temp;\n      end\n      else\n      begin\n        temp := getsub(r[j, i], p, i);\n        if temp > rmax then\n        rmax := temp\n      end;\n      if lmax + rmax > max then\n        max := lmax + rmax\n    end;\n    inc(max)\n  end;\nbegin\n  initialize;\n  solve;\n  writeln(max);\nend.\n```",
        "postTime": 1475930743,
        "uid": 9538,
        "name": "\u5434\u56fd\u94e8",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1267 \u3010\u6392\u5e8f\u4e8c\u53c9\u6811\u3011"
    }
]