[
    {
        "content": "\u7ebf\u6bb5\u6811\u9898\u4e00\u904d\u5c31A\u4e86\uff0c\u5199\u504f\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\n\n\u9996\u5148\uff0c\u5047\u8bbe$ans,mul$\u5206\u522b\u662f\u533a\u95f4\u7684\u7b54\u6848\uff0c\u4ee5\u53ca\u6240\u6709$X$\u503c\u7684\u4e58\u79ef\n\n\u90a3\u4e48\u5bb9\u6613\u5f97\u51fa\u8f6c\u79fb\u65b9\u7a0b\n\u9996\u5148\uff0c\n$\\max\\limits_{l \\le i \\le r}{(\\prod_{i=l}^r Y_i})\\times X_i =\\max(\\max\\limits_{l \\le i \\le mid}{(\\prod_{i=l}^r Y_i})\\times X_i,\\max\\limits_{mid +1\\le i \\le r}{(\\prod_{i=l}^r Y_i})\\times X_i)$\n\n\u800c$\\max\\limits_{mid \\le i \\le r}{(\\prod_{i=l}^r Y_i})\\times X_i) =\\max\\limits_{mid +1\\le i \\le r}{(\\prod_{i=mid+1}^r Y_i})\\times X_i\n\\times \\prod_{i=l}^{mid} X_i$\n\n\u90a3\u4e48\u8f6c\u79fb\u5c31\u5f88\u597d\u8f6c\u79fb\u4e86\n\n\u7531\u4e8e\u7ed3\u679c\u8fc7\u5927\uff0c\u800c\u4e14\u53d6\u4e86\u6a21\u4f1a\u5f71\u54cd\u6bd4\u5927\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u53d6\u5bf9\u6570\uff0c\u4e58\u6cd5\u53d8\u4e3a\u52a0\u6cd5\u3002\n\n\u8be2\u95ee\u4fbf\u76f4\u63a5\u8fd4\u56de\u6839\u8282\u70b9\u7684\u503c\n\n\u8fd9\u6837\u5199\u6cd5\u6bd4\u8bb8\u591a\u4eba\u5199\u7684\u7ef4\u62a4\u4e00\u5806\u503c\u65b9\u4fbf\u7684\u591a\uff0c\u800c\u4e14\u4ee3\u7801\u7b80\u6d01\u6613\u61c2\uff0c\u76ee\u524d\u6700\u4f18\u89e3\u3002\n\n\u603b\u4e4b\uff0c\u8fd9\u9053\u9898\u8bf4\u767d\u4e86\u5c31\u662f\u9053\u7ebf\u6bb5\u6811\u6a21\u677f\u9898\uff0c\u4e00\u5b9a\u8981\u597d\u597d\u638c\u63e1\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\nconst int N = 5e5 + 5; \nint n, m;\nll X[N], Y[N];\n\nconst ll P = 1e9 + 7;\nstruct {\n\tint l, r;\n\tdb sum, mx;\n\tll mul, ans;\n} t[N << 2];\ninline void push_up(int p) {\n\tt[p].sum = t[p << 1].sum + t[p << 1 | 1].sum;\n\tt[p].mx = max(t[p << 1].mx, t[p << 1].sum + t[p << 1 | 1].mx);\n\tt[p].mul = t[p << 1].mul * t[p << 1 | 1].mul % P;\n\tif (t[p << 1].mx >= t[p << 1].sum + t[p << 1 | 1].mx) \n\t\tt[p].ans = t[p << 1].ans;\n\telse t[p].ans = t[p << 1 | 1].ans * t[p << 1].mul % P; \n}\nvoid build(int p, int l, int r) {\n\tt[p].l = l, t[p].r = r;\n\tif (l == r) {\n\t\tt[p].mx = log(1.0 * X[l] * Y[l]);\n\t\tt[p].sum = log(1.0 * X[l]);\n\t\tt[p].ans = X[l] % P * Y[l] % P;\n\t\tt[p].mul = X[l] % P;\n\t\treturn; \n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(p << 1, l, mid);\n\tbuild(p << 1 | 1, mid + 1, r);\n\tpush_up(p); \n}\nvoid change(int p, int x) {\n\tif (t[p].l == t[p].r) {\n\t\tt[p].mx = log(1.0 * X[x] * Y[x]);\n\t\tt[p].sum = log(1.0 * X[x]);\n\t\tt[p].ans = X[x] % P * Y[x] % P;\n\t\tt[p].mul = X[x] % P; \n\t\treturn;\n\t}\n\tint mid = (t[p].l + t[p].r) >> 1;\n\tif (x <= mid) change(p << 1, x);\n\telse change(p << 1 | 1, x);\n\tpush_up(p);\n}\nmain() {\n\tcin >> n;\n\tfor (register int i = 1; i <= n; ++i) scanf(\"%lld\", X + i);\n\tfor (register int i = 1; i <= n; ++i) scanf(\"%lld\", Y + i);\n\tbuild(1, 1, n);\n\tprintf(\"%lld\\n\", t[1].ans);\n\tcin >> m;\n\twhile (m--) {\n\t\tint type, pos;\n\t\tll val;\n\t\tscanf(\"%d%d%lld\", &type, &pos, &val);\n\t\tif (type == 1) X[pos + 1] = val;\n\t\telse Y[pos + 1] = val;\n\t\tchange(1, pos + 1);\n\t\tprintf(\"%lld\\n\", t[1].ans); \n\t}\n}\n```",
        "postTime": 1613811017,
        "uid": 162196,
        "name": "\u4f1f\u5927\u7684\u738b\u592b\u5b50",
        "ccfLevel": 6,
        "title": "P5874 [IOI2015]horses \u9a6c \u9898\u89e3"
    },
    {
        "content": "[\u539f\u9898\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5874)  \n\n\u52a8\u6001\u533a\u95f4\u6700\u503c\u95ee\u9898\u518d\u52a0\u4e0a $N = 5 \\times 10 ^ 5$\uff0c\u5bb9\u6613\u60f3\u5230\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002  \n\u5b9a\u4e49 ${maxn}$ \u4e3a\u5bf9\u4e8e\u533a\u95f4 $[l,r]$ \u7684  \n$$\\max\\limits_{i=l}^{r}\\{(\\prod\\limits_{k=l}^{i}x_{k}) \\times y_{i}\\}\\ \\ \\ \\ (*)$$  \n\u5206\u6790\u9898\u76ee\uff0c\u53d1\u73b0\u6211\u4eec\u9700\u8981\u6c42\u7684\u7b54\u6848\u5c31\u662f\u533a\u95f4 $[1,n]$ \u7684\u7b54\u6848\u3002  \n\n\u90a3\u4e48\u6211\u4eec\u6765\u8003\u8651 ${maxn}$ \u7684\u66f4\u65b0\u3002  \n\u4e8b\u5b9e\u4e0a\uff0c\u5bf9\u4e8e\u533a\u95f4 $[l,r]$ \u53ca\u5176\u4e2d\u70b9 $mid$\uff0c$(*)$ \u5f0f\u4e2d\u63d0\u5230\u7684 $i$ \u6709 $i \\leq mid$ \u53ca $i > mid$ \u4e24\u79cd\u60c5\u51b5\u3002  \n\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u533a\u95f4 $[l,r]$ \u7684 $maxn$ \u503c\u7b49\u4e8e\u5de6\u5b50\u533a\u95f4 $[l,mid]$ \u7684 $maxn$ \u503c\u3002  \n\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u6ce8\u610f\u5230  \n$$\\prod\\limits_{k=l}^{i}x_{k} = \\prod\\limits_{k=l}^{mid}x_{k} \\times \\prod\\limits_{k=mid+1}^{i}x_{k}$$\n\u6545\u533a\u95f4 $[l,r]$ \u7684 $maxn$ \u503c\uff0c\u7b49\u4e8e\u5de6\u5b50\u533a\u95f4 $[l,mid]$ \u6240\u6709 $x_{k}$ \u4e4b\u79ef\u4e58\u4e0a\u53f3\u5b50\u533a\u95f4 $[mid+1,r]$ \u7684$maxn$ \u503c\u3002  \n\u8fd9\u6837\u6211\u4eec\u5728\u7ebf\u6bb5\u6811\u4e2d\u518d\u5f15\u5165 $timesn$ \u8fd9\u4e2a\u53d8\u91cf\u8868\u793a\u533a\u95f4 $[l,r]$ \u7684\u6240\u6709 $x$ \u4e4b\u79ef\uff0c\u5b83\u7684\u66f4\u65b0\u662f\u663e\u7136\u7684\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002  \n\u4e8e\u662f\u6211\u4eec\u6709\u8fd9\u6837\u7684\u4f2a\u4ee3\u7801\uff1a\u5bf9\u4e8e\u533a\u95f4 $q$\uff0c  \n```\n\tq.maxn=max(q.lson.maxn,q.lson.timesn*q.rson.maxn)\n```  \n\n\u8fd9\u6837\u53bb\u505a\u7ebf\u6bb5\u6811\u5c31\u5bf9\u4e86\u5417\uff1f\u6211\u4eec\u53d1\u73b0\u8fd9\u6837\u505a\u4e0b\u53bb $maxn$ \u548c $timesn$ \u90fd\u4f1a\u7206 $long\\ long$ \uff0c\u800c\u6211\u4eec\u672c\u5c31\u8981\u8bb0\u5f55\u7684\u7b54\u6848\u662f\u53d6\u8fc7\u6a21\u7684\uff0c\u4e0d\u80fd\u7528\u6765\u6bd4\u8f83\u5927\u5c0f\u3002  \n\u8fd9\u65f6\u5019\u6211\u4eec\u60f3\u5230\n$$\\log_{a}(x \\times y) = \\log_{a}(x) + \\log_{a}(y)$$  \n\u4e8e\u662f\u6211\u4eec\u5728\u7ebf\u6bb5\u6811\u4e2d\uff0c\u4e0d\u518d\u5b58\u50a8 $maxn$ \u548c $timesn$ \u7684\u503c\uff0c\u8f6c\u800c\u53bb\u5b58\u50a8 $\\ln(maxn)$ \u548c $\\ln(timesn)$ \u7684\u503c\uff0c\u5904\u7406\u7684\u65f6\u5019\u4e58\u90fd\u6539\u4e3a\u52a0\u5373\u53ef\u3002  \n\u4ee3\u7801\uff1a  \n```cpp\n#include <cmath>\n#include <cstdio>\nusing namespace std;\n#define ll long long\n#define p (ll)(1e9+7)\n#define debug puts(\"qaq\")\nll val;\nint n,m; \nint type,pos;\nll x[500005];\nll y[500005];\nstruct node{\n\tdouble rmax=0.0,rtimes=0.0;//\u4e24\u4e2a\u6570\u4ee5e\u4e3a\u5e95\u7684\u5bf9\u6570\n\tll maxn,timesn;//\u53d6\u6a21\u540e\u7684\u503c\uff0c\u8f93\u51fa\u7b54\u6848\u7528\u7684\n}TREE[2000005];\ninline double max(double _1,double _2){\n\treturn _1>_2?_1:_2;\n}\ninline void pushup(int res){//\u4e0a\u4f20\u51fd\u6570\n\tTREE[res].rmax=max(TREE[res<<1].rmax,TREE[res<<1].rtimes+TREE[res<<1|1].rmax);//\u66f4\u65b0\uff0c\u53ef\u4ee5\u53d1\u73b0\u4f7f\u7528\u7684\u662f\u52a0\u6cd5\n\tTREE[res].rtimes=TREE[res<<1].rtimes+TREE[res<<1|1].rtimes;//\u540c\u6837\u662f\u52a0\u6cd5\n\tif (TREE[res<<1].rmax>=TREE[res<<1].rtimes+TREE[res<<1|1].rmax){\n\t\tTREE[res].maxn=TREE[res<<1].maxn;\n\t}\n\telse{\n\t\tTREE[res].maxn=TREE[res<<1].timesn*TREE[res<<1|1].maxn%p;\n\t}\n\tTREE[res].timesn=TREE[res<<1].timesn*TREE[res<<1|1].timesn%p;\n}\ninline void build(int l,int r,int res){//\u5efa\u6811\u51fd\u6570\n//\tprintf(\"%d %d %d\\n\",l,r,res);\n\tif (l==r){\n//\t\tprintf(\"%lf\\n\",TREE[res].rmax);\n\t\tTREE[res].rmax=log(1.0*x[l]*y[l]);\n\t\tTREE[res].rtimes=log(1.0*x[l]);\n\t\tTREE[res].maxn=(x[l]%p)*(y[l]%p)%p;\n\t\tTREE[res].timesn=x[l]%p;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(l,mid,res<<1);\n\tbuild(mid+1,r,res<<1|1);\n\tpushup(res);\n}\ninline void update(int l,int r,int res,int qwq){//\u66f4\u65b0\u51fd\u6570\n\tif (l==r){\n\t\tTREE[res].rmax=log(1.0*x[l]*y[l]);\n\t\tTREE[res].rtimes=log(1.0*x[l]);\n\t\tTREE[res].maxn=(x[l]%p)*(y[l]%p)%p;\n\t\tTREE[res].timesn=x[l]%p;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif (qwq<=mid){\n\t\tupdate(l,mid,res<<1,qwq);\n\t}\n\telse{\n\t\tupdate(mid+1,r,res<<1|1,qwq);\n\t}\n\tpushup(res);\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor (int i=1;i<=n;i++){\n\t\tscanf(\"%lld\",&x[i]);\n\t}\n\tfor (int i=1;i<=n;i++){\n\t\tscanf(\"%lld\",&y[i]);\n\t}\n\tbuild(1,n,1);\n\tprintf(\"%lld\\n\",TREE[1].maxn);\n\tscanf(\"%d\",&m);\n\twhile(m--){\n\t\tscanf(\"%d%d\",&type,&pos);\n\t\tscanf(\"%lld\",&val);\n\t\tif(type==1){\n\t\t\tx[pos+1]=val;\n            //\u4e00\u70b9\u5c0f\u7ec6\u8282\uff1a\u4e3a\u65b9\u4fbf\u5904\u7406\uff0c\u6211\u4eec\u7684\u6570\u7ec4\u4e0b\u6807\u4ece1\u5f00\u59cb\uff0c\u6240\u4ee5\u8fd9\u91ccpos\u8981\u52a01\n\t\t}\n\t\telse{\n\t\t\ty[pos+1]=val;\n\t\t}\n\t\tupdate(1,n,1,pos+1);\n\t\tprintf(\"%lld\\n\",TREE[1].maxn);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1628239175,
        "uid": 113521,
        "name": "muyang_233",
        "ccfLevel": 6,
        "title": "P5874 [IOI2015]Horses\u306eSolution"
    },
    {
        "content": "## \u9898\u76ee\u63cf\u8ff0  \n\u5f00\u59cb\u6709\u4e00\u5339\u9a6c\uff0c\u6bcf\u5e74\u9a6c\u7684\u6570\u91cf\u4f1a\u4e58 $x_i$\uff0c\u6bcf\u5e74\u672b\u5356\u51fa\u4e00\u5339\u9a6c\u5355\u4ef7\u4e3a $y_i$\u3002$x_i$ \u6216 $y_i$ \u4f1a\u6709 $m$ \u6b21\u66f4\u6539\uff0c\u6c42\u6240\u6709\u66f4\u6539\u524d\u548c\u6bcf\u6b21\u66f4\u6539\u540e\u7684\u6700\u5927\u5229\u6da6\u3002  \n\n## \u9898\u76ee\u5206\u6790  \n\u4e00\u4e2a\u6bd4\u8f83\u5de7\u5999\u7684\u60f3\u6cd5\u3002\u6bcf\u5e74\u9a6c\u7684\u6570\u91cf\u4e58 $x_i$\uff0c\u5176\u5b9e\u76f8\u5f53\u4e8e\u5c06\u4e4b\u540e**\u6240\u6709\u5e74\u4efd\u9a6c\u7684\u5355\u4ef7\u4e58\u4e0a** $x_i$\u3002\u8fd9\u6837\u4e00\u6765\u4ece\u5934\u5230\u5c3e**\u53ea\u4f1a\u5b58\u5728\u4e00\u5339\u9a6c**\uff0c\u6240\u4ee5\u6700\u4f18\u7b54\u6848\u4e00\u5b9a\u662f\u9009\u62e9\u4e00\u4e2a\u5355\u4ef7\u6700\u9ad8\u7684\u5e74\u4efd\u5c06\u9a6c**\u5168\u90e8\u5356\u51fa**\u3002  \n\u6240\u4ee5\u5bf9 $x_i$ \u7684\u5904\u7406\u5176\u5b9e\u662f\u5c06\u5f53\u5e74\u53ca\u4ee5\u540e\u5e74\u4efd\u90fd\u4e58\u4e0a\u4e00\u4e2a\u6570\uff0c\u5373**\u533a\u95f4\u4e58\u6cd5**\uff0c\u53ef\u4ee5\u5229\u7528**\u7ebf\u6bb5\u6811**\u6765\u7ef4\u62a4\u3002  \n\n\u672c\u9898\u8fd8\u6709\u4e00\u70b9\u9700\u8981\u5904\u7406\uff0c$x_i$ \u4e0e $y_i$ \u503c\u5747\u5f88\u5927\u65e0\u6cd5\u76f4\u63a5\u5b58\u50a8\uff0c\u53d6\u6a21\u540e\u53c8\u65e0\u6cd5\u6bd4\u8f83\u5927\u5c0f\u3002\u5f88\u5de7\u5999\u7684\u4e00\u70b9\u662f**\u5c06\u7b54\u6848\u53d6\u5bf9\u6570**\uff0c\u65e2\u5c06\u7b54\u6848\u964d\u5230\u53ef\u4ee5\u5b58\u50a8\u7684\u5927\u5c0f\uff0c\u4e5f\u4e0d\u4f1a\u7834\u574f\u5927\u5c0f\u5173\u7cfb\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u8f7b\u677e\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e86\u3002\n\n\u6ce8\u610f\u53d6\u5bf9\u6570\u540e\u4f1a**\u5c06\u4e58\u6cd5\u8f6c\u5316\u4e3a\u52a0\u6cd5**\uff01\n\n## \u5b8c\u6574\u4ee3\u7801\n```c++\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\ninline int read(){\n    char ch=getchar();\n    int w=0;\n    while(ch<'0'||ch>'9') ch=getchar();\n    while(ch>='0'&&ch<='9'){\n        w=(w<<1)+(w<<3)+(ch^48);\n        ch=getchar();\n    }\n    return w;\n}\nconst int p=1e9+7;\nint n,m;\nll a[500005],b[500005];\nstruct qwq{\n    int l,r;\n    double maxx,sumlog;\n    ll ans,sum;\n}tr[2000005];\ninline void pushup(int x){\n    tr[x].sumlog=tr[x<<1].sumlog+tr[x<<1|1].sumlog;\n    tr[x].sum=tr[x<<1].sum*tr[x<<1|1].sum%p;\n    if(tr[x<<1].maxx<tr[x<<1].sumlog+tr[x<<1|1].maxx){\n        tr[x].maxx=tr[x<<1].sumlog+tr[x<<1|1].maxx;\n        tr[x].ans=tr[x<<1].sum*tr[x<<1|1].ans%p;\n    }\n    else{\n        tr[x].maxx=tr[x<<1].maxx;\n        tr[x].ans=tr[x<<1].ans;\n    }\n}\ninline void cr(int x,int l,int r){\n    tr[x].l=l;\n    tr[x].r=r;\n    if(l==r){\n        tr[x].ans=a[l]*b[l]%p;\n        tr[x].sumlog=log(a[l]);\n        tr[x].maxx=log(a[l]*b[l]);\n        tr[x].sum=a[l]%p;\n        return;\n    }\n    int mid=(l+r)>>1;\n    cr(x<<1,l,mid);\n    cr(x<<1|1,mid+1,r);\n    pushup(x);\n    return;\n}\ninline void chang(int x,int l){\n    if(tr[x].l==tr[x].r){\n        tr[x].ans=a[l]*b[l]%p;\n        tr[x].sumlog=log(a[l]);\n        tr[x].maxx=log(a[l]*b[l]);\n        tr[x].sum=a[l]%p;\n        return;\n    }\n    int mid=(tr[x].l+tr[x].r)>>1;\n    if(l<=mid) chang(x<<1,l);\n    if(l>mid) chang(x<<1|1,l);\n    pushup(x);\n    return;\n}\nint main(){\n    n=read();\n    for(int i=1;i<=n;++i) a[i]=read();\n    for(int i=1;i<=n;++i) b[i]=read();\n    cr(1,1,n);\n    printf(\"%lld\\n\",tr[1].ans);\n    m=read();\n    int opt,whe;\n    ll val;\n    for(int i=1;i<=m;++i){\n        opt=read();\n        whe=read()+1;\n        val=read();\n        if(opt==1){\n            a[whe]=val;\n        }\n        else b[whe]=val;\n        chang(1,whe);\n        printf(\"%lld\\n\",tr[1].ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1658059016,
        "uid": 221165,
        "name": "\u7ea2\u706b\u604d\u60dacxy",
        "ccfLevel": 0,
        "title": "P5874 [IOI2015]horses \u9a6c \u9898\u89e3"
    },
    {
        "content": "\u5206\u6790\u8fd9\u4e2a\u9898\u76ee\uff0c\u9996\u5148\u6bcf\u5339\u9a6c\u53ef\u4ee5\u5355\u72ec\u8003\u8651\uff0c\u5982\u679c\u4e00\u5339\u9a6c\u5728\u7b2c $y$ \u5929\u5356\u51fa\u5229\u6da6\u6700\u9ad8\uff0c\u90a3\u4e48\u663e\u7136\u53e6\u5916\u7684\u9a6c\u5728\u8fd9\u4e00\u5929\u5356\u5229\u6da6\u4e00\u6837\uff0c\u5e76\u4e14\u6ca1\u6709\u66f4\u9ad8\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u4e00\u5b9a\u53ef\u4ee5\u5728\u4e00\u5929\u5356\u51fa\u6240\u6709\u9a6c\n\n\u4f46\u662f\u8fd9\u4e2a\u6570\u5b57\u592a\u5927\u4e86\uff0c\u56e0\u6b64\u6211\u4eec\u8003\u8651\u53d6\u5bf9\u6570\u6765\u7ef4\u62a4\uff0c\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u5356\u51fa\u7684\u5229\u6da6\u5c31\u662f $\\sum{\\log (x)}+\\log(y)$ \uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u4fee\u6539\uff0c\u4fee\u6539 $x$ \u5bf9\u5e94\u524d\u7f00\u548c\u7684\u533a\u95f4\u4fee\u6539\uff0c\u4fee\u6539 $y$ \u5c31\u662f\u5355\u70b9\u4fee\u6539\u3002\n\n\u6b64\u65f6\u7ef4\u62a4\u6700\u5927\u503c\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u7528\u7ebf\u6bb5\u6811\u518d\u7b97\u4e00\u904d\uff0c\u4fee\u6539 $x$ \u5c31\u662f\u533a\u95f4\u4e58\u539f\u6765\u7684\u6570\u7684\u9006\u5143\u518d\u4e58\u73b0\u5728\u8fd9\u4e2a\u6570\uff0c\u4fee\u6539 $y$ \u4e0d\u7528\u7ba1\uff0c\u7136\u540e\u6c42\u5230 $1$ \u5230\u6700\u5927\u503c\u7684\u4f4d\u7f6e\u5e76\u4e14\u4e58 $y$ \u5c31\u662f\u7b54\u6848\u4e86\u3002\n\n\u53e6\u5916\u8fd8\u5f97\u6ce8\u610f\uff0c`log` \u51fd\u6570\u4f1a\u70b8\u7cbe\u5ea6\uff0c\u4f60\u9700\u8981\u4f7f\u7528 `log2` \u8fd9\u4e2a\u51fd\u6570\n\n\u8c03\u8bd5\u592a\u4e45\u4e86\u4ee3\u7801\u592a\u4e11\u4e86\uff0c\u9009\u62e9\u6027\u5730\u770b\u5427\uff08\n\n\n\n```cpp\n#include<touwenjian.h>\n\n#define ll long long\n#define lson i<<1,l,mid\n#define rson i<<1|1,mid+1,r\n#define ls i<<1\n#define rs i<<1|1 \n#define log log2\n\nusing namespace std;\n\nconst int maxn=500500;\nconst int modp=1e9+7;\nconst double eps=1e-14;\n\nint n,m,_x[maxn],_y[maxn],looker[maxn];\ndouble tmpx[maxn];\n\nstruct segment_tree{\n\t\n\t\n\tstruct tree{\n\t\tint maxpos;\n\t\tll sum,mul;\n\t\tdouble add,mmx;\n\t}t[maxn<<2];\n\t\n\tinline void pushup(int i)\n\t{\n\t\tif((t[ls].mmx-t[rs].mmx)>eps) t[i].maxpos=t[ls].maxpos,t[i].mmx=t[ls].mmx;\n\t\telse t[i].maxpos=t[rs].maxpos,t[i].mmx=t[rs].mmx;\n\t\tt[i].sum=(1ll*t[ls].sum*t[rs].sum)%modp;\n\t}\n\t\n\tinline void pushdown(int i)\n\t{\n\t\tif(fabs(t[i].add)>eps) \n\t\t{\n\t\t\tt[ls].add+=t[i].add;\n\t\t\tt[rs].add+=t[i].add;\n\t\t\tt[ls].mmx+=t[i].add;\n\t\t\tt[rs].mmx+=t[i].add;\n\t\t\tt[i].add=0;\t\n\t\t}\n\t\tif(t[i].mul!=1)\n\t\t{\n\t\t\tt[ls].mul=(t[ls].mul*t[i].mul)%modp;\n\t\t\tt[rs].mul=(t[ls].mul*t[rs].mul)%modp;\n\t\t\tt[ls].sum=(t[ls].sum*t[i].mul)%modp;\n\t\t\tt[rs].sum=(t[rs].sum*t[i].mul)%modp;\n\t\t\tt[i].mul=1;\n\t\t}\n\t\treturn ;\n\t}\n\t\n\tvoid build_tree(int i,int l,int r)\n\t{\n\t\tt[i].mul=1;\n\t\tif(l==r)\n\t\t{\n\t\t\tt[i].mmx=tmpx[l]+log(_y[l]);\n\t\t\tt[i].maxpos=l;\n\t\t\tt[i].sum=_x[l];\n\t\t\treturn ;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tbuild_tree(lson);\n\t\tbuild_tree(rson);\n\t\tpushup(i);\n\t\treturn ;\n\t}\n\t\n\tvoid change_x_tree(int i,int l,int r,int x,int y,double target,int _target)\n\t{\n\t\tif(l>=x&&r<=y)\n\t\t{\n\t\t\tt[i].add+=target;\n\t\t\tt[i].mmx+=target;\n\t\t\treturn ;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tpushdown(i);\n\t\tif(x<=mid) change_x_tree(lson,x,y,target,_target);\n\t\tif(y>mid) change_x_tree(rson,x,y,target,_target);\n\t\tpushup(i);\n\t\treturn ;\n\t}\n\t\n\tvoid ano_change_tree(int i,int l,int r,int x,int _target)\n\t{\n\t\tif(l==r)\n\t\t{\n\t\t\tt[i].sum=(1ll*t[i].sum*_target)%modp; \n\t\t\treturn ;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tpushdown(i);\n\t\tif(x<=mid) ano_change_tree(lson,x,_target);\n\t\telse ano_change_tree(rson,x,_target);\n\t\tpushup(i);\n\t\treturn ;\t\t\n\t}\n\t\n\tvoid change_y_tree(int i,int l,int r,int x,int target)\n\t{\n\t\tif(l==r)\n\t\t{\n\t\t\tt[i].mmx=t[i].mmx-log(_y[l])+log(target);\n\t\t\treturn ;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tpushdown(i);\n\t\tif(x<=mid) change_y_tree(lson,x,target);\n\t\telse change_y_tree(rson,x,target);\n\t\tpushup(i);\n\t\treturn ;\n\t}\n\t\n\tint getsum(int i,int l,int r,int x,int y)\n\t{\n\t\tif(l>=x&&r<=y) return t[i].sum;\n\t\tint mid=(l+r)>>1;\n\t\tint ans=1;\n\t\tpushdown(i); \n\t\tif(x<=mid) ans=(1ll*ans*getsum(lson,x,y))%modp;\n\t\tif(y>mid) ans=(1ll*ans*getsum(rson,x,y))%modp;\n\t\treturn ans;\n\t}\n\t\n\tint ask_tree(int i,int l,int r,int x)\n\t{\n\t\treturn (1ll*getsum(1,1,n,1,x)*_y[x])%modp;\n\t}\n\t\n}st;\n\nint ksm(int x,int y)\n{\n\tint ans=1;\n\twhile(y)\n\t{\n\t\tif(y&1) ans=(1ll*x*ans)%modp;\n\t\tx=(1ll*x*x)%modp;\n\t\ty>>=1;\n\t}\n\treturn ans;\n}\n\nint main()\n{\n\tregister int i,j;\n\tios::sync_with_stdio(false);\n\tcin>>n;\n\tfor(i=1;i<=n;i++) cin>>_x[i];\n\tfor(i=1;i<=n;i++) cin>>_y[i];\n\tfor(i=1;i<=n;i++) tmpx[i]=log(_x[i]);\n\tfor(i=1;i<=n;i++) tmpx[i]+=tmpx[i-1];\n\tcin>>m;\n\tst.build_tree(1,1,n);\n\tcout<<st.ask_tree(1,1,n,st.t[1].maxpos)<<endl;\n\tint opt,l,r;\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tcin>>opt>>l>>r;\n\t\tl++;\t\n\t\tif(opt==1)\n\t\t{\n\t\t\tst.change_x_tree(1,1,n,l,n,-log(_x[l]),ksm(_x[l],modp-2));\n\t\t\tst.ano_change_tree(1,1,n,l,ksm(_x[l],modp-2));\n\t\t\t_x[l]=r;\n\t\t\tst.change_x_tree(1,1,n,l,n,log(_x[l]),_x[l]);\n\t\t\tst.ano_change_tree(1,1,n,l,_x[l]);\n\t\t}\n\t\tif(opt==2)\n\t\t{\n\t\t\tst.change_y_tree(1,1,n,l,r);\n\t\t\t_y[l]=r;\n\t\t}\n\t\tcout<<st.ask_tree(1,1,n,st.t[1].maxpos)<<endl;\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1603107943,
        "uid": 38636,
        "name": "\u5bd2\u51b0\u5927\u5927",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5874 \u3010[IOI2015]horses \u9a6c\u3011"
    },
    {
        "content": "\u5173\u4e8e\u6628\u5929\u521a\u8003\u7684\u6a21\u62df\u8d5b\u9898\u51fa\u73b0\u5728\u667a\u80fd\u63a8\u8350\u8fd9\u4ef6\u4e8b\u3002\u3002\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u662f\u627e\u4e00\u4e2a $i$ \u4f7f\u5f97 $Y_{i}\\prod\\limits_{j=1}^{i}X_{j}$ \u6700\u5927\u3002\n\n\u7531\u4e8e\u6709\u53d6\u6a21\u8fd9\u4ef6\u4e8b\uff0c\u800c\u8fd9\u4e2a\u9ad8\u7cbe\u5ea6\u6570\u9700\u8981\u6bd4\u5927\u5c0f\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u4e00\u4e2a pair\uff0c\u8868\u793a \u4e0a\u9762\u90a3\u4e2a\u5f0f\u5b50\u53d6 log\uff0c\u548c \u4e0a\u9762\u90a3\u4e2a\u5f0f\u5b50\u53d6\u6a21\u7684\u7b54\u6848\u3002\n\n\u90a3\u4e48\u53ef\u4ee5\u7528\u53d6\u5b8c log \u6bd4\u5927\u5c0f\u53d8\u6210\u4e00\u4e2a\u548c\u7684\u5f62\u5f0f\u3002\n\n\u81f3\u4e8e\u4fee\u6539\u4e0a\u4e00\u4e2a\u7ebf\u6bb5\u6811\u652f\u6301\u533a\u95f4\u4fee\u6539\u5373\u53ef\u3002\n\n",
        "postTime": 1658115959,
        "uid": 119062,
        "name": "Lates",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5874 [IOI2015]horses \u9a6c"
    }
]