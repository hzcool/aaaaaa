[
    {
        "content": "(\u54ea\u91cc\u6392\u7248\u4e0d\u6574\u9f50\u4e86QAQ\u2026\u2026)\n\u8865\u5145\u4e00\u7bc7\u65b0\u9898\u89e3\uff0c\u5229\u7528KD-Tree\u7b97\u6cd5\uff0c\u6c42\u4e8c\u7ef4\u5e73\u9762\u5185\u5230\u4e00\u5b9a\u70b9\u7684\u7b2ck\u8fdc\u70b9\uff0c\u8ddd\u79bb\u8ba1\u7b97\u65b9\u5f0f\u4e3a\u6b27\u51e0\u91cc\u5fb7\u8ddd\u79bb\uff1a  \n$(sqrt((x2-x1)^2+(y2-y1)^2))$\u3002  \n\u6b63\u5e38\u5efa\u6811\uff0c\u7531\u4e8e\u9898\u76ee\u8981\u6c42\u8f93\u51fa\u7b2ck\u8fdc\u70b9\u7684\u7f16\u53f7\uff0c\u6211\u4eec\u9700\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e2a\u8282\u70b9\u7684id\uff0c\u5229\u7528\u7ed3\u6784\u4f53\u5b58\u50a8\u4fe1\u606f\uff0c\u7528\u4f18\u5148\u961f\u5217\uff08\u4e5f\u53ef\u624b\u5199\u5806\uff09\u52a8\u6001\u7ef4\u62a4\u5c0f\u6839\u5806\uff0c\u4fdd\u6301k\u4e2a\u6700\u4f18\u70b9\uff0c\u6700\u540e\u8f93\u51fa\u5806\u9876\u5143\u7d20\u7684\u7f16\u53f7\u5373\u53ef\u3002\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define re register\n#define inf 0x7fffffff\nconst int L=1<<20|1;\nchar buffer[L],*S,*T;\n#define getchar() ((S==T&&(T=(S=buffer)+fread(buffer,1,L,stdin),S==T))?EOF:*S++)\nusing namespace std;\nint n,m,tot,cmpid,root,X,Y;\ninline int read(){\n\tre int a=0,b=1; re char ch=getchar();\n\twhile(ch<'0'||ch>'9')\n\t\tb=(ch=='-')?-1:1,ch=getchar();\n\twhile(ch>='0'&&ch<='9')\n\t\ta=(a<<3)+(a<<1)+(ch^48),ch=getchar();\n\treturn a*b;\n}\nstruct node{int dis,id;};\ninline bool operator < (node a,node b){\n\treturn a.dis>b.dis||(a.dis==b.dis&&a.id<b.id);\n}\npriority_queue<node> q;\nstruct point{\n\tint x[2],id;\n\tfriend bool operator < (const point &a,const point &b)\n\t\t{return a.x[cmpid]<b.x[cmpid];}\n}p[100010];\nstruct tree{\n\tpoint p;int mx[2],mn[2],ls,rs,id;\n}t[100010];\ninline int dis(tree x){\n\tre int P=(x.p.x[0]-X)*(x.p.x[0]-X);\n\tre int Q=(x.p.x[1]-Y)*(x.p.x[1]-Y);\n\treturn P+Q;\n}\ninline int mxdis(tree x){\n\tre int P=(x.mn[0]-X)*(x.mn[0]-X);\n\tre int M=(x.mx[0]-X)*(x.mx[0]-X);\n\tre int Q=(x.mn[1]-Y)*(x.mn[1]-Y);\n\tre int N=(x.mx[1]-Y)*(x.mx[1]-Y);\n\treturn max(P,M)+max(Q,N);\n}\ninline void update(re int x){\n\tif(!x)  return ; re int l=t[x].ls,r=t[x].rs;\n\tif(l) t[x].mn[0]=min(t[x].mn[0],t[l].mn[0]),\n\t\t  t[x].mn[1]=min(t[x].mn[1],t[l].mn[1]),\n\t\t  t[x].mx[0]=max(t[x].mx[0],t[l].mx[0]),\n\t\t  t[x].mx[1]=max(t[x].mx[1],t[l].mx[1]);\n\tif(r) t[x].mn[0]=min(t[x].mn[0],t[r].mn[0]),\n\t\t  t[x].mn[1]=min(t[x].mn[1],t[r].mn[1]),\n\t\t  t[x].mx[0]=max(t[x].mx[0],t[r].mx[0]),\n\t\t  t[x].mx[1]=max(t[x].mx[1],t[r].mx[1]);\n}\ninline void query(re int x){\n\tif(!x) return ;\n\tre int res=dis(t[x]);\n\tif(res>q.top().dis||(res==q.top().dis&&t[x].id<q.top().id)) \n\t\tq.pop(),q.push((node){res,t[x].id});\n\tre int l=t[x].ls,r=t[x].rs,ld,rd;\n\tif(l) ld=mxdis(t[l]);\n\tif(r) rd=mxdis(t[r]);\n\tif(ld>rd){\n\t\tif(ld>=q.top().dis) query(l);\n\t\tif(rd>=q.top().dis) query(r);\n\t}\n\telse{\n\t\tif(rd>=q.top().dis) query(r);\n\t\tif(ld>=q.top().dis) query(l);\n\t}\n}\ninline void build(re int &x,re int l,re int r,re int k){\n\tif(l>r) return ;\n\tx=++tot;cmpid=k;\n\tre int mid=(l+r)>>1;\n\tnth_element(p+l,p+mid,p+r+1);\n\tt[x].p=p[mid];t[x].id=t[x].p.id;\n\tt[x].mn[0]=t[x].mx[0]=t[x].p.x[0];\n\tt[x].mn[1]=t[x].mx[1]=t[x].p.x[1];\n\tbuild(t[x].ls,l,mid-1,k^1);\n\tbuild(t[x].rs,mid+1,r,k^1);\n\tupdate(x);\n}\nsigned main(){\n\tn=read();\n\tfor(re int i=1;i<=n;i++)\n\t\tp[i].x[0]=read(),p[i].x[1]=read(),p[i].id=i;\n\tbuild(root,1,n,0);\n\tm=read();\n\tfor(re int i=1,k;i<=m;i++){\n\t\tX=read(),Y=read(),k=read();\n\t\twhile(q.size()) q.pop();\n\t\tfor(re int j=1;j<=k;j++) q.push((node){-1,0});\n\t\tquery(root);\n\t\tprintf(\"%lld\\n\",q.top().id);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1564917800,
        "uid": 190379,
        "name": "\u661f\u7a7a_\u5bfb\u89c5",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2093 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]JZPFAR\u3011"
    },
    {
        "content": "### \u9898\u610f:\u6c42\u5e73\u9762\u5185\u8ddd\u79bb\u7ed9\u5b9a\u70b9\u7b2ck\u8fdc\u7684\u70b9\u3002\n\n~~\u4e0d\u96be~~\u53d1\u73b0\u8fd9\u9898\u5b9e\u9645\u4e0a\u662f KD-Tree \u7684\u6a21\u677f\u9898\u3002\n\n\u5bf9\u4e8e\u666e\u901a\u7684\u6c42\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u8fd9\u9053\u9898\u6539\u6210\u4e86\u6c42 $k$ \u8fdc\u7684\uff0c\u4f46\u662f\u53d1\u73b0 $k$ \u6700\u5927\u53ea\u6709 $20$\uff0c\u6240\u4ee5\u8bd5\u7740\u628a\u79bb\u4ed6\u6700\u8fdc\u7684 $k$ \u4e2a\u5143\u7d20\u90fd\u6c42\u51fa\u6765\u7136\u540e\u6254\u5230\u4e00\u4e2a\u5c0f\u6839\u5806\u91cc\u8fb9\u6700\u540e\u8f93\u51fa\u5806\u9876\u5373\u53ef\u3002\n\n\u6700\u540e\u9700\u8981\u6ce8\u610f\u7684\u662f\u8ddd\u79bb\u662f\u6b27\u51e0\u91cc\u5fb7\u8ddd\u79bb\u4e0d\u8981\u7528\u4e86\u522b\u7684\u8ddd\u79bb\u4e0d\u7136\u4f1a\u53c8WA\u53c8TLE\u3002\n```\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\nconst int N=1e5+10;\nint rt,typ,cnt;\nstruct Node{\n\tint x[2],id;\n\tbool operator < (const Node&A)const{\n\t\treturn x[typ]<A.x[typ];\n\t}\n}a[N];\nstruct Tree{\n\tint ls,rs,Max[2],Min[2],id;\n\tNode v;\n}T[N];\nstruct Q{\n\tint id;ll val;\n\tQ(){}\n\tQ(int a,ll b){\n\t\tid=a;val=b;\n\t}\n\tbool operator < (const Q&A)const{\n\t\tif(val==A.val)return id<A.id;\n\t\treturn val>A.val;\n\t}\n\tbool operator > (const Q&A)const{\n\t\tif(val==A.val)return id<A.id;\n\t\treturn val>A.val;\n\t}\n};\npriority_queue<Q> q;\n#define ls T[rt].ls\n#define rs T[rt].rs\nvoid up(int rt){\n\tfor(int i=0;i<2;i++){\n\t\tT[rt].Max[i]=T[rt].Min[i]=T[rt].v.x[i];\n\t\tif(ls){\n\t\t\tT[rt].Max[i]=max(T[rt].Max[i],T[ls].Max[i]);\n\t\t\tT[rt].Min[i]=min(T[rt].Min[i],T[ls].Min[i]);\n\t\t}\n\t\tif(rs){\n\t\t\tT[rt].Max[i]=max(T[rt].Max[i],T[rs].Max[i]);\n\t\t\tT[rt].Min[i]=min(T[rt].Min[i],T[rs].Min[i]);\n\t\t}\n\t}\n}\nvoid Build(int &rt,int l,int r,int d){\n\tif(l>r)return;\n\trt=++cnt;\n\tint mid=l+r>>1;\n\ttyp=d;\n\tnth_element(a+l,a+mid,a+r+1);\n\tT[rt].v=a[mid];T[rt].id=a[mid].id;\n\tBuild(ls,l,mid-1,d^1);\n\tBuild(rs,mid+1,r,d^1);\n\tup(rt);\n}\nll sqr(ll x){return x*x;}\nll getdis(int rt,Node v){\n\tll tmp=0;\n\tfor(int i=0;i<2;i++)\n\t\ttmp+=sqr(max(abs(v.x[i]-T[rt].Max[i]),abs(v.x[i]-T[rt].Min[i])));\n\treturn tmp;\n}\n#define dis(x,y,xx,yy) (1ll*(x-xx)*(x-xx)+1ll*(y-yy)*(y-yy))\nvoid query(int rt,Node v){\n\tQ tmp=Q(T[rt].id,dis(v.x[0],v.x[1],T[rt].v.x[0],T[rt].v.x[1]));\n\tif(tmp>q.top())q.pop(),q.push(tmp);\n\tll ld=-0x7f7f7f7f7f7f,rd=-0x7f7f7f7f7f7f;\n\tif(ls)ld=getdis(ls,v);\n\tif(rs)rd=getdis(rs,v);\n\tif(ld<rd){\n\t\tif(rd>=q.top().val)query(rs,v);\n\t\tif(ld>=q.top().val)query(ls,v);\n\t}else{\n\t\tif(ld>=q.top().val)query(ls,v);\n\t\tif(rd>=q.top().val)query(rs,v);\n\t}\n}\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=0;j<2;j++)\n\t\t\tscanf(\"%d\",&a[i].x[j]);\n\t\ta[i].id=i;\n\t}\n\tBuild(rt,1,n,0);\n\tint m;\n\tscanf(\"%d\",&m);\n\twhile(m--){\n\t\tint k;Node w;\n\t\tscanf(\"%d%d%d\",&w.x[0],&w.x[1],&k);\n\t\twhile(!q.empty())q.pop();\n\t\twhile(k--)q.push(Q(0,-1));\n\t\tquery(rt,w);\n\t\tprintf(\"%d\\n\",q.top().id);\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1605705904,
        "uid": 305262,
        "name": "Su_Zipei",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2093 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]JZPFAR\u3011"
    },
    {
        "content": "http://www.elijahqi.win/2018/01/25/bzoj2626-jzpfar/ \n\nhttp://blog.csdn.net/elijahqi/article/details/79157064 \n\n\u4ed4\u7ec6\u7b97\u4e86\u53d1\uff08\u5657\u5e0c\u671b\u5fc5\u8981\u88ab\u5de8\u4f6c\u4eec\u6253\u8138qwq \u4f3c\u4e4e\u6700\u574f\u60c5\u51b5\u4f1a\u70b8long long \u4f46\u6211\u89c9\u5f97sqrt\u5f71\u54cd\u6548\u7387\u548c\u7cbe\u5ea6 \u5c31\u6ca1\u5199 \u4f3c\u4e4e\u4e5fA\u4e86\n\n\u5927\u6982\u662f\u88f8\u7684kd-tree \u4f30\u4ef7\u51fd\u6570\u4e5f\u6bd4\u8f83\u597d\u5199 \u4f46\u662f\u6837\u4f8b\u63d0\u793a\u6211\u4eec\u9700\u8981\u6ce8\u610f\u4e00\u4e0b\u51e0\u70b9\u95ee\u9898 1\u3001 \u6709\u53ef\u80fd\u5b58\u5728\u8ddd\u79bb\u76f8\u540c\u4f46\u662f\u7f16\u53f7\u6bd4\u8f83\u5c0f\u7684\u60c5\u51b5\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u8df3\u8fc7 \u800c\u662f\u4e5f\u5e94\u8be5\u8fdb\u53bb\u66b4\u529b\u7b97\u4e00\u7b972\u3001\u5728\u5b9a\u4e49\u5c0f\u6839\u5806\u7684\u65f6\u5019\u7531\u4e8epriority\\_queue\u5185\u90e8\u662f\u4ecd\u7136\u662f\u6309\u7167\u5927\u6839\u5806\u6765\u641e \u90a3\u4e48\u7531\u4e8e\u6211\u5e94\u8be5\u53ea\u53ef\u4ee5\u91cd\u8f7d\u5c0f\u4e8e\u53f7 \u6240\u4ee5\u6211\u9700\u8981\u5728\u91cd\u8f7d\u5c0f\u4e8e\u53f7\u7684\u65f6\u5019\u53cd\u5411\u5373\u53ef \u5176\u4ed6\u5c31\u662f\u4e00\u4e9b\u5e38\u6570\u7684\u4f18\u5316\u4e86 \u5177\u4f53\u53ef\u4ee5\u770b\u4e0b\u4ee3\u7801 \u6bd4\u5982\u6211\u7b97\u4e0b\u5de6\u53f3\u5b50\u6811\u6700\u8fdc\u7684\u8ddd\u79bb \u54ea\u4e2a\u66f4\u8fdc\u53bb\u641e\u90a3\u4e2a\u56e0\u4e3a\u53ef\u80fd\u641e\u5b8c\u8fd9\u4e2a \u53e6\u4e00\u68f5\u90fd\u4e0d\u7528\u641e\u4e86 \u8fd9\u9898\u8981\u6c42\u7ef4\u62a4\u6700\u8fdc\u7684k\u70b9\u90a3\u4e48\u6211\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u5c0f\u6839\u5806 \u6bcf\u6b21\u6bd4\u8f83\u4e0b \u5982\u679c\u6211\u6bd4\u6700\u5c0f\u7684\u8fd8\u5c0f\u5c31\u4e0d\u641e\u4e86  \u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9 \u5982\u679c\u6211\u6bd4\u6700\u5c0f\u7684\u5927\u5c31\u53bb\u641e\u4e00\u641e \u540c\u65f6\u4e3a\u4e86\u907f\u514dqueue empty\u4e00\u5f00\u59cb\u6211\u9884\u5904\u7406\u7684\u653e\u5165k\u4e2a\u975e\u5e38\u5c0f\u7684\u5373\u53ef\n\n```cpp\n#include<cmath>\n#include<queue>\n#include<vector>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define N 110000\n#define inf 1LL<<60\n#define ll long long\nusing namespace std;\ninline char gc(){\n    static char now[1<<16],*S,*T;\n    if (T==S){T=(S=now)+fread(now,1,1<<16,stdin);if (T==S) return EOF;}\n    return *S++; \n}\ninline int read(){\n    int x=0,f=1;char ch=gc();\n    while(ch<'0'||ch>'9') {if (ch=='-') f=-1;ch=gc();}\n    while(ch<='9'&&ch>='0') x=x*10+ch-'0',ch=gc();\n    return x*f;\n}\nint D,n,m,root,k;\nstruct node1{\n    int d[2],id;\n    int& operator[](int x){return d[x];}\n    friend bool operator<(node1 a,node1 b){return a[D]<b[D];}\n}point[N],P;\nstruct node{\n    node1 x;int min[2],max[2],left,right,idmin;node(){idmin=0x3f3f3f3f;} \n}tree[N];\nstruct node2{\n    int id;ll dis;\n    node2(int idd,ll diss){id=idd;dis=diss;}\n    inline friend bool operator<(const node2 &a,const node2 &b){\n        return a.dis==b.dis?a.id<b.id:a.dis>b.dis;\n    }\n};\ninline void update(int x){\n    int l=tree[x].left,r=tree[x].right;\n    tree[x].idmin=min(tree[x].x.id,min(tree[l].idmin,tree[r].idmin));\n    for (int i=0;i<2;++i) tree[x].max[i]=max(tree[x].max[i],max(tree[l].max[i],tree[r].max[i]));\n    for (int i=0;i<2;++i) tree[x].min[i]=min(tree[x].min[i],min(tree[l].min[i],tree[r].min[i]));\n}\ninline void build(int &x,int l,int r,int dim){\n    int mid=l+r>>1;x=mid;D=dim;nth_element(point+l,point+mid,point+r+1);\n    tree[x].x=point[mid];for (int i=0;i<2;++i) tree[x].min[i]=tree[x].max[i]=point[mid][i];\n    if (l<mid) build(tree[x].left,l,mid-1,dim^1);\n    if (r>mid) build(tree[x].right,mid+1,r,dim^1);update(x);\n}\ninline ll calc(node1 a){\n    return (ll)(a[0]-P[0])*(a[0]-P[0])+(ll)(a[1]-P[1])*(a[1]-P[1]);\n}\npriority_queue<node2>q;\ninline ll calc1(int x){\n    ll tmp=0;\n    for (int i=0;i<2;++i){\n        ll tmp1=max(abs(P[i]-tree[x].min[i]),abs(P[i]-tree[x].max[i]));\n        tmp+=tmp1*tmp1;\n    }return tmp; \n}\ninline void query(int x){\n    ll dis=calc(tree[x].x),ldis=-inf,rdis=-inf;int id=tree[x].x.id;\n    if (dis>q.top().dis||(dis==q.top().dis&&id<q.top().id)) q.pop(),q.push(node2(tree[x].x.id,dis));\n    if (tree[x].left) ldis=calc1(tree[x].left);if(tree[x].right) rdis=calc1(tree[x].right);\n    if(ldis>rdis){\n        if (ldis>q.top().dis||(ldis==q.top().dis&&tree[tree[x].left].idmin<q.top().id)) query(tree[x].left);\n        if (rdis>q.top().dis||(rdis==q.top().dis&&tree[tree[x].right].idmin<q.top().id)) query(tree[x].right);    \n    }else{\n        if (rdis>q.top().dis||(rdis==q.top().dis&&tree[tree[x].right].idmin<q.top().id)) query(tree[x].right);\n        if (ldis>q.top().dis||(ldis==q.top().dis&&tree[tree[x].left].idmin<q.top().id)) query(tree[x].left);\n    }\n}\nint main(){\n    //freopen(\"bzoj2626.in\",\"r\",stdin);\n    n=read();for (int i=0;i<2;++i) tree[0].min[i]=0x3f3f3f3f,tree[0].max[i]=-0x3f3f3f3f;\n    for (int i=1;i<=n;++i) {point[i].id=i;for (int j=0;j<2;++j) point[i][j]=read();}\n    build(root,1,n,0);m=read();\n    for (int i=1;i<=m;++i) {\n        while(!q.empty()) q.pop();\n        P[0]=read();P[1]=read();k=read();\n        for (int i=1;i<=k;++i) q.push(node2(0,-inf));\n        query(root);printf(\"%d\\n\",q.top().id);\n    }\n    return 0;\n}\n\n```",
        "postTime": 1516811376,
        "uid": 5037,
        "name": "elijahqi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2093 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]JZPFAR\u3011"
    },
    {
        "content": "### \u9898\u610f\n\n\u7ed9\u5b9a\u5e73\u9762\u4e0a $n$ \u4e2a\u70b9\uff0c$m$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u5b9a\u4e00\u4e2a\u70b9 $(x,y)$ \u548c\u4e00\u4e2a\u6574\u6570 $k$\uff0c\u6c42\u51fa\u5e73\u9762\u4e0a $n$ \u4e2a\u70b9\u8ddd\u79bb $(x,y)$ \u7b2c $k$ \u8fdc\u7684\u70b9\u662f\u54ea\u4e2a\u3002\u5176\u4e2d\u5982\u679c\u8ddd\u79bb\u76f8\u540c\u5219\u7f16\u53f7\u5c0f\u7684\u8ddd\u79bb\u66f4\u8fdc\u3002\n\n$\\texttt{Data Range:}1\\leq n\\leq 10^5,1\\leq m\\leq 10^4,k\\leq 20$\n\n### \u9898\u89e3\n\nK-D Tree \u597d\u9898\u3002\n\n\u9996\u5148\u8003\u8651\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u95ee\u9898\uff0c\u7ed9\u4e00\u4e2a\u5e8f\u5217\u5982\u4f55\u6c42\u7b2c $k$ \u5927\u3002\n\n\u4e00\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u5f88\u4f18\u7684\u505a\u6cd5\u662f\u7c7b\u4f3c\u4e0e nth-element \u4e00\u6837\u7684\u5b9e\u73b0\u65b9\u6cd5\uff0c\u4f46\u662f\u8fd9\u4e2a\u505a\u6cd5\u62d3\u5c55\u6027\u4e0d\u5f3a\u3002\n\n\u800c\u4e00\u4e2a\u62d3\u5c55\u6027\u6bd4\u8f83\u5f3a\u7684\u65b9\u6cd5\u662f\uff0c\u7c7b\u4f3c\u4e0e\u5bf9\u9876\u5806\u4e00\u6837\u5f00\u4e00\u4e2a\u5c0f\u6839\u5806\uff08\u6ce8\u610f\u4e0d\u662f\u5927\u6839\u5806\uff09\u3002\u5148\u5f80\u8fd9\u4e2a\u5806\u91cc\u9762\u586b $k$ \u4e2a $-\\infty$\uff0c\u7136\u540e\u626b\u6bcf\u4e2a\u5143\u7d20\u7684\u65f6\u5019\u5224\u65ad\u8fd9\u4e2a\u5143\u7d20\u4e0e\u5806\u9876\u7684\u5927\u5c0f\uff0c\u5982\u679c\u5927\u4e8e\u5806\u9876\u7684\u8bdd\u5c31\u628a\u5806\u9876\u5f39\u51fa\uff0c\u5e76\u628a\u8fd9\u4e2a\u6570\u52a0\u5165\u5806\uff0c\u628a\u6240\u6709\u6570\u626b\u5b8c\u4e4b\u540e\u5806\u9876\u5c31\u662f\u7b54\u6848\u3002\n\n\u5bf9\u4e8e\u8fd9\u4e2a\u9898\u6765\u8bf4\uff0c\u56e0\u4e3a\u6ca1\u6709\u63d2\u5165\u64cd\u4f5c\u6240\u4ee5\u53ef\u4ee5\u9884\u5148\u628a\u6811\u5efa\u51fa\u6765\uff0c\u7136\u540e\u6bcf\u4e00\u6b21\u8be2\u95ee\u627e\u4e00\u4e0b\u5c31\u597d\u4e86\uff0c\u8bb0\u5f97\u526a\u679d\u3002\n\n\u4e00\u4e2a\u5c0f\u7684\u4f18\u5316\u662f\u8fd9\u9898\u53ea\u8ba9\u4f60\u8f93\u51fa\u70b9\u7684\u7f16\u53f7\u6240\u4ee5\u7b97\u8ddd\u79bb\u7684\u65f6\u5019\u53ef\u4ee5\u4e0d\u7528\u5f00\u5e73\u65b9\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef int ll;\ntypedef long long int li;\ntypedef pair<li,ll> pii;\nconst ll MAXN=6e5+51;\nconst li inf=0x3f3f3f3f3f3f3f3f;\nconst double alpha=0.6;\nstruct Node{\n\tll d[2];\n};\nNode s[MAXN];\npriority_queue<pii,vector<pii>,greater<pii> >q;\nll n,qcnt,x,y,kk,rt,dim,totn,ptr;\nll ls[MAXN],rs[MAXN],L[MAXN],R[MAXN],D[MAXN],U[MAXN];\nll sz[MAXN],g[MAXN];\ninline ll read()\n{\n    register ll num=0,neg=1;\n    register char ch=getchar();\n    while(!isdigit(ch)&&ch!='-')\n    {\n        ch=getchar();\n    }\n    if(ch=='-')\n    {\n        neg=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        num=(num<<3)+(num<<1)+(ch-'0');\n        ch=getchar();\n    }\n    return num*neg;\n}\ninline bool cmp(ll x,ll y)\n{\n\treturn s[x].d[dim]<s[y].d[dim];\n}\ninline void update(ll node,ll x)\n{\n\tL[node]=min(L[node],L[x]),R[node]=max(R[node],R[x]);\n\tD[node]=min(D[node],D[x]),U[node]=max(U[node],U[x]);\n}\ninline void update(ll node)\n{\n\tsz[node]=sz[ls[node]]+sz[rs[node]]+1;\n\tL[node]=R[node]=s[node].d[0],U[node]=D[node]=s[node].d[1];\n\tls[node]?update(node,ls[node]):(void)1;\n\trs[node]?update(node,rs[node]):(void)1;\n}\ninline ll create(ll l,ll r,ll d)\n{\n\tif(l>r)\n\t{\n\t\treturn 0;\n\t}\n\tll mid=(l+r)>>1;\n\tdim=d,nth_element(g+l,g+mid,g+r+1,cmp);\n\tls[g[mid]]=create(l,mid-1,d^1),rs[g[mid]]=create(mid+1,r,d^1);\n\treturn update(g[mid]),g[mid];\n}\ninline li dist(ll x,ll y,ll kk)\n{\n\tli dx=max(abs(x-R[kk]),abs(x-L[kk])),dy=max(abs(y-U[kk]),abs(y-D[kk]));\n\treturn dx*dx+dy*dy;\n}\ninline li dist(ll x1,ll y1,ll x2,ll y2)\n{\n\tli dx=(x1-x2),dy=(y1-y2);\n\treturn dx*dx+dy*dy;\n}\ninline void query(ll x,ll y,ll node)\n{\n\tif(!node)\n\t{\n\t\treturn;\n\t}\n\tpii d=(pii){dist(x,y,s[node].d[0],s[node].d[1]),-node};\n\td>q.top()?q.pop(),q.push(d):(void)1;\n\tli dl=-inf,dr=-inf,dirl=ls[node],dirr=rs[node];\n\tls[node]?dl=dist(x,y,ls[node]):1,rs[node]?dr=dist(x,y,rs[node]):1;\n\tdl<dr?swap(dl,dr),swap(dirl,dirr):(void)1;\n\tdl>=q.top().first?query(x,y,dirl):(void)1;\n\tdr>=q.top().first?query(x,y,dirr):(void)1;\n}\nint main()\n{\n\ttotn=n=read();\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\ts[i].d[0]=read(),s[i].d[1]=read(),g[i]=i;\n\t}\n\trt=create(1,n,0),qcnt=read();\n\tfor(register int i=1;i<=qcnt;i++)\n\t{\n\t\tx=read(),y=read(),kk=read();\n\t\twhile(!q.empty())\n\t\t{\n\t\t\tq.pop();\n\t\t}\n\t\tfor(register int i=0;i<kk;i++)\n\t\t{\n\t\t\tq.push((pii){-1,1});\n\t\t}\n\t\tquery(x,y,rt),printf(\"%d\\n\",-q.top().second);\n\t}\n}\n```",
        "postTime": 1610154939,
        "uid": 60990,
        "name": "Karry5307",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2093 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]JZPFAR\u3011"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P2093)\n\n\u9898\u610f\uff1a\u7ed9\u5b9a\u82e5\u5e72\u4e2a\u70b9\uff0c\u6c42\u8ddd\u79bb\u67d0\u4e2a\u70b9\u7b2c$k$\u8fdc\u7684\u70b9\n\n\n\n------------\n\n\n\u7c7b\u6bd4\u4e00\u4e0b$A^*$\u7b97\u6cd5\uff0c$A^*$\u7b97\u6cd5\u53ef\u4ee5\u7528\u6765\u6c42$k$\u77ed\u8def\uff0c\u5e76\u4e14\u5f80\u5f80\u4f7f\u7528\u4f30\u4ef7\u51fd\u6570\u4e0e\u4f18\u5148\u961f\u5217\u6765\u964d\u4f4e\u590d\u6742\u5ea6\u3002\n\n\u5728$A^*$\u7b97\u6cd5\u4e2d\uff0c\u4e00\u4e2a\u70b9\u7b2c$k$\u6b21\u88ab\u53d6\u51fa\uff0c\u5bf9\u5e94\u7684\u7ed3\u679c\u5c31\u662f$k$\u77ed\u8def\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f00\u4e00\u4e2a\u4f18\u5148\u961f\u5217\uff0c\u5b58$k$\u5927\u7684\u7ed3\u679c\u52a8\u6001\u7ef4\u62a4\u3002\n\n\u540c\u65f6\u4f7f\u7528\u4f30\u4ef7\u51fd\u6570\u526a\u679d\u6392\u9664\u65e0\u6548\u72b6\u6001\u3002\n\n\u540c\u6837\u7c7b\u6bd4$A^*$\uff0c\u4f30\u4ef7\u51fd\u6570\u8981\u628a\u51b3\u7b56\u96c6\u5408\u653e\u5927\uff0c\u624d\u80fd\u5f97\u5230\u6b63\u786e\u7b54\u6848\uff0c\u4e5f\u5c31\u662f\u8bf4\uff1a\n\n~~\u5b81\u53ef\u9519\u6740100\uff0c\u4e0d\u53ef\u653e\u8fc71\u4e2a~~\n\n\u867d\u7136\u8fd9\u4e48\u8bf4\uff0c\u4f46\u662f\u65e0\u6548\u72b6\u6001\u8fd8\u662f\u5c45\u591a\uff0c~~\u6240\u4ee5\u8fd8\u662f\u6709\u6548\u679c\u7684~~\n\n\u800c\u8fd9\u91cc\u8fd8\u6709\u4e00\u79cd\u526a\u679d\uff0c\u5c31\u662f\u4f30\u4ef7\u7ed3\u679c\u66f4\u4f18\u7684\u4f18\u5148\u5904\u7406\uff0c\u8fd9\u6837\u4f30\u4ef7\u4e0d\u4f18\u7684\u53ef\u80fd\u5c31\u4e0d\u7528\u5904\u7406\u4e86\u3002\n\n------------\n\n\u5efa\u6811\u7684\u8bdd\uff0c\u5c31\u662f\u666e\u901a\u7684\u5e73\u8861\u6811\u5efa\u6811\uff0c\u8fd9\u91cc\u91c7\u7528~~\u5bb9\u6613\u88ab\u5361\u7684~~\u65b9\u6cd5\uff0c\u5c31\u662f\u6bcf\u4e00\u5c42\u6bd4\u8f83\u4e0d\u540c\u7684\u7ef4\u5ea6\uff0c\u6bcf\u5c42\u505a\u51fa\u6539\u53d8\u3002\n\n\u5728\u6bcf\u4e00\u7ef4\u5ea6\u5185\u8fdb\u884c\u666e\u901a\u7684$BST$\u5efa\u6811\u5373\u53ef\uff0c\u5e76\u7ef4\u62a4\u6700\u503c\u65b9\u4fbf\u4f30\u4ef7\u3002\n\n\u5212\u5206\u5de6\u53f3\u5b50\u6811\u76f4\u63a5\u4f7f\u7528\u5e93\u51fd\u6570\u51fd\u6570\uff0c\u683c\u5f0f\uff1a\n\n```\nnth_element(a+1,a+k,a+n+1)\n```\n\n\n\n\u4f5c\u7528\u662f\uff1a\u8fd4\u56de$[1,n]$\u6392\u5e8f\u540e\u7684$a[k]$\uff0c\u5e76\u4e14\u5c0f\u4e8e\u7684\u653e\u524d\u9762\uff0c\u5927\u4e8e\u7684\u653e\u540e\u9762\u3002\n\n\u6211\u6700\u5f00\u59cb\u63a5\u89e6\u5230\u8fd9\u4e2a\u51fd\u6570\uff0c\u4ee5\u4e3a\u5b83\u4f1a\u6539\u53d8\u987a\u5e8f\uff0c\u6240\u4ee5\u4e00\u65e0\u662f\u5904\uff0c~~\u6ca1\u60f3\u5230\u73b0\u5728\u5374\u9700\u8981\u5e38\u5e38\u4f7f\u7528\u5b83.....~~\n\n~~\u5b83\u7684\u539f\u7406\u7c7b\u4f3c\u5feb\u6392~~\uff0c\u590d\u6742\u5ea6\u7ebf\u6027\u3002\n\n------------\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define reg register\n#define int long long\n#define chk_digit(c) (c>='0'&&c<='9')\ninline int read() {\n\treg int x=0,f=1;reg char c=getchar();\n\twhile(!chk_digit(c)) { if(c=='-') f=-1;c=getchar(); }\n\twhile(chk_digit(c)) x=x*10+c-'0',c=getchar(); \n\treturn x*f;\n}\n#define maxn 301000\n#define inf (1ll<<58)\n#define mymin(x,y) (x>=y?y:x)\n#define mymax(x,y) (x>=y?x:y)\n#define mid (l+r>>1)\nint n,m,root,ymh;\nstruct kd{ int d[3],mx[3],mn[3],l,r,num; }tr[maxn],now;\ninline bool operator < (kd a,kd b) { return a.d[ymh]<b.d[ymh]; }\ninline void update(int root) {\n\tfor(reg int i=0;i<=1;++i) {\n\t\ttr[root].mn[i]=mymin(tr[root].mn[i],mymin(tr[tr[root].l].mn[i],tr[tr[root].r].mn[i]));\n\t\ttr[root].mx[i]=mymax(tr[root].mx[i],mymax(tr[tr[root].l].mx[i],tr[tr[root].r].mx[i]));\n\t}\n}\ninline void build(int &x,int l,int r,int dimension) {\n\tymh=dimension,x=mid;\n\tnth_element(tr+l,tr+x,tr+r+1);\n\tfor(reg int i=0;i<=1;++i) tr[x].mx[i]=tr[x].mn[i]=tr[x].d[i];\n\tif(l<x) build(tr[x].l,l,mid-1,dimension^1);\n\tif(r>x) build(tr[x].r,mid+1,r,dimension^1);\n\tupdate(x);\n}\nstruct node{ int dis,num; };\ninline bool operator < (node a,node b) { return a.dis>b.dis||((a.dis==b.dis)&&(a.num<b.num)); }\npriority_queue<node> q;\n#define power(x) ((x)*(x))\n//\u5c0f\u5fc3\u8fd9\u4e2adefine\uff0c\u6216\u8005\u66f4\u7a33\u59a5\u7684\u505a\u6cd5\u662f\u5199\u6210\u51fd\u6570 \ninline int get_dis(kd a,kd b) { return power(a.d[0]-b.d[0])+power(a.d[1]-b.d[1]); }\ninline int caculate(int x) {//\u4f30\u4ef7\u51fd\u6570 \n\tif(!x) return -100;\n\tint ans=0;\n\tfor(reg int i=0;i<=1;++i) ans+=mymax(power(tr[x].mx[i]-now.d[i]),power(tr[x].mn[i]-now.d[i]));\n\treturn ans;\n}\ninline void query(int x) {\n\tif(!x) return;\n\tint dl=caculate(tr[x].l),dr=caculate(tr[x].r),d=get_dis(tr[x],now);\n\tif(d>q.top().dis||((d==q.top().dis)&&tr[x].num<q.top().num)) q.pop(),q.push((node){d,tr[x].num});\n\t//\u53ea\u6709\u5728\u67d0\u4e2a\u8282\u70b9\u4e14\u5408\u6cd5\u624d\u66f4\u65b0\u8be5\u8282\u70b9\u7684\u7b54\u6848 \n\tif(dl>dr) {\n\t\tif(dl>=q.top().dis) query(tr[x].l);//\u6309\u987a\u5e8f\u66f4\u65b0\u7b54\u6848 \n\t\tif(dr>=q.top().dis) query(tr[x].r);\n\t}\n\telse {\n\t\tif(dr>=q.top().dis) query(tr[x].r);\n\t\tif(dl>=q.top().dis) query(tr[x].l);\n\t}\n}\nsigned main() {\n\ttr[0].mn[0]=tr[0].mn[1]=inf,tr[0].mx[0]=tr[0].mx[1]=-inf;\n\tn=read();\n\tfor(reg int i=1;i<=n;++i) tr[i].d[0]=read(),tr[i].d[1]=read(),tr[i].num=i;\n\tbuild(root,1,n,1),m=read();\n\tfor(reg int i=1;i<=m;++i) {\n\t\twhile(q.size()) q.pop();\n\t\tnow.d[0]=read(),now.d[1]=read();\n\t\tint k=read();\n\t\tfor(reg int i=1;i<=k;++i) q.push((node){-1,-1});\n\t\tquery(root);\n\t\tprintf(\"%lld\\n\",q.top().num);\n\t}\n}\n```\n\n",
        "postTime": 1584278455,
        "uid": 134640,
        "name": "zsaskk",
        "ccfLevel": 0,
        "title": "\u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]JZPFAR\u3011"
    },
    {
        "content": "k-D Tree \u90bb\u57df\u67e5\u8be2\u677f\u9898\u3002\n\u4e0d\u4f1a\u7684\u770b[\u8fd9\u91cc](https://oi-wiki.org/ds/kdt/)\u3002\n\nk-D Tree \u7684\u672c\u8d28\u5c31\u662f\u5c06\u6570\u636e\u70b9\u8fdb\u884c\u7279\u6b8a\u7684\u7a7a\u95f4\u7ec4\u7ec7\uff0c\u6765\u6ee1\u8db3\uff08\u52a0\u901f\uff09\u5927\u90e8\u5206\u7684\u67e5\u8be2\u64cd\u4f5c\u3002\n\n\u7136\u540e\u63d0\u4e00\u5634\u590d\u6742\u5ea6\u3002\uff08\u53c2\u8003[\u8fd9\u7bc7](https://blog.csdn.net/qq_50332374/article/details/123242226)\uff09\n\n\u7ed3\u8bba\uff1a2-d Tree \u77e9\u9635\u67e5\u8be2 **\u5e73\u5747** $\\Theta (\\log n)$\uff0c**\u6700\u574f** $\\Theta (n ^{1 \\over 2})$\u3002\n\nCode\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate <class T> inline void read(T &x) {\n\tx = 0;\n\tint f = 0;\n\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9') {\n\t\tf |= ch == '-';\n\t\tch = getchar();\n\t}\n\twhile(ch >= '0' && ch <= '9') {\n\t\tx = x * 10 + (ch - 48);\n\t\tch = getchar();\n\t}\n\tx = f ? -x : x;\n\treturn;\n}\n#define ll long long\n#define fir first\n#define sec second\n#define N 100005\nstruct node {int x, y, id;}; node a[N];\nbool cmpx(node aa, node bb) {return aa.x < bb.x;}\nbool cmpy(node aa, node bb) {return aa.y < bb.y;}\nll sq(ll x) {return x * x;}\nint lc[N], rc[N], L[N], R[N], D[N], U[N];\nvoid pushup(int x) {\n\tL[x] = R[x] = a[x].x;\n\tD[x] = U[x] = a[x].y;\n\tif(lc[x]) {\n\t\tL[x] = min(L[x], L[lc[x]]), R[x] = max(R[x], R[lc[x]]);\n\t\tD[x] = min(D[x], D[lc[x]]), U[x] = max(U[x], U[lc[x]]);\n\t}\n\tif(rc[x]) {\n\t\tL[x] = min(L[x], L[rc[x]]), R[x] = max(R[x], R[rc[x]]);\n\t\tD[x] = min(D[x], D[rc[x]]), U[x] = max(U[x], U[rc[x]]);\n\t}\n\treturn;\n}\nint build(int l, int r) {\n\tif(l > r) return 0;\n\tdouble avx = 0, avy = 0, vax = 0, vay = 0;\n\tfor(int i = l; i <= r; i++)\n\t\tavx += a[i].x, avy += a[i].y;\n\tavx /= (r - l + 1), avy /= (r - l + 1);\n\tfor(int i = l; i <= r; i++)\n\t\tvax += sq(avx - a[i].x), vay += sq(avy - a[i].y);\n\tint mid = (l + r) >> 1;\n\tif(vax > vay) nth_element(a + l, a + mid, a + r + 1, cmpx);\n\telse nth_element(a + l, a + mid, a + r + 1, cmpy);\n\tlc[mid] = build(l, mid - 1), rc[mid] = build(mid + 1, r);\n\tpushup(mid); return mid;\n}\nstruct answer {int id;}; int tar;\nll dis(int x, int y) {\n\tif(!x || !y) return -1;\n\treturn sq(a[x].x - a[y].x) + sq(a[x].y - a[y].y);\n}\nbool operator < (answer aa, answer bb) {\n\tll tmpa = dis(aa.id, tar), tmpb = dis(bb.id, tar);\n\tif(tmpa != tmpb) return tmpa > tmpb;\n\treturn a[aa.id].id < a[bb.id].id;\n}\npriority_queue<answer> q;\nll calc(int x) {\n\treturn max(sq(L[x] - a[tar].x), sq(R[x] - a[tar].x))\n\t + max(sq(D[x] - a[tar].y), sq(U[x] - a[tar].y));\n}\nvoid query(int l, int r) {\n\tif(l > r) return;\n\tint mid = (l + r) >> 1;\n\tif((answer){mid} < q.top()) q.pop(), q.push({mid});\n\tll dl = calc(lc[mid]), dr = calc(rc[mid]), dnow = dis(q.top().id, tar);\n\tif(dl >= dnow && dr >= dnow) {\n\t\tif(dl > dr) {\n\t\t\tquery(l, mid - 1); dnow = dis(q.top().id, tar);\n\t\t\tif(dr >= dnow) query(mid + 1, r);\n\t\t}\n\t\telse {\n\t\t\tquery(mid + 1, r); dnow = dis(q.top().id, tar);\n\t\t\tif(dl >= dnow) query(l, mid - 1);\n\t\t}\n\t}\t\n\telse if(dl >= dnow) query(l, mid - 1);\n\telse if(dr >= dnow) query(mid + 1, r);\n\treturn;\n}\nint n, m, k;\nsigned main() {\n\tread(n); for(int i = 1; i <= n; i++) read(a[i].x), read(a[i].y), a[i].id = i;\n\tbuild(1, n); tar = n + 1; read(m); while(m--) {\n\t\tread(a[tar].x), read(a[tar].y), read(k);\n\t\twhile(!q.empty()) q.pop();\n\t\tfor(int i = 1; i <= k; i++) q.push({0});\n\t\tquery(1, n); printf(\"%d\\n\", a[q.top().id].id);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1657501732,
        "uid": 90027,
        "name": "GG_jok_er",
        "ccfLevel": 0,
        "title": "P2093 [\u56fd\u5bb6\u96c6\u8bad\u961f]JZPFAR \u9898\u89e3"
    }
]