[
    {
        "content": "**\u535a\u5ba2\u4e2d\u770b\uff1a[\u9898\u89e3-\\[SDOI2014\\]\u6570\u6570](https://blog.csdn.net/KonnyWen/article/details/104269176)**\n\n### [\\[SDOI2014\\]\u6570\u6570](https://www.luogu.com.cn/problem/P3311)\n\n\u8fd9\u9898\u7684\u524d\u7f6e\u77e5\u8bc6\u662fAC\u81ea\u52a8\u673a\u548cdp\uff0c\u524d\u7f6e\u9898\u76ee\u662f **[\\[JSOI2007\\]\u6587\u672c\u751f\u6210\u5668](https://www.luogu.com.cn/problem/P4052)**\uff0c\u524d\u7f6e\u9898\u76ee\u6211\u5199\u7684\u9898\u89e3 **[\u9898\u89e3-\\[JSOI2007\\]\u6587\u672c\u751f\u6210\u5668](https://blog.csdn.net/KonnyWen/article/details/104238511)**\u3002\u6211\u7684\u8bb2\u89e3\u5047\u8bbe\u4f60\u505a\u8fc7\u4e0a\u9762\u90a3\u9053\u9898\u3002\n\n\u8fd9\u9898\u6bd4\u4e0a\u9762\u90a3\u9898\u591a\u4e2a\u6761\u4ef6\uff0c\u6211\u56e0\u6b64\u591a\u8c03\u4e86 $3$ \u4e2a\u5c0f\u65f6\u3002\u591a\u7684\u6761\u4ef6\uff1a\u7b54\u6848\u8981\u4e0d\u5927\u4e8e\u6574\u6570 $n$\u3002\u6240\u4ee5AC\u81ea\u52a8\u673a\u90e8\u5206\u540c\u4e0a\uff0c\u6539\u53d8dp\u90e8\u5206\u3002\n\n**\u89e3\uff1a**$dp[i][j][k]$ \u8868\u793a\u6587\u672c\u4e32\uff08\u5e78\u8fd0\u6570\uff09\u957f\u5ea6\u4e3a $i$\uff0c\u7ed3\u5c3e\u662fAC\u81ea\u52a8\u673a\u4e0a\u7684\u8282\u70b9 $j$\uff0c$k$ \u8868\u793a\u8fd9\u4e2a\u6587\u672c\u4e32\u4e0b\u4e00\u4e2a\u5b57\u7b26\u662f\u5426\u53d7 $n$ \u67d0\u4e2a\u6570\u4f4d\u5927\u5c0f\u7684\u9650\u5236\uff08\u5982\u679c\u53d7\u9650\u5236\uff0c$k=1$\uff1b\u5426\u5219\uff0c$k=0$\uff09\u3002$mk[i]$ \u8868\u793a $i$ \u8fd9\u4e2aAC\u81ea\u52a8\u673a\u4e0a\u8282\u70b9\u662f\u5426\u4e3a\u67d0\u4e2a\u4e0d\u5e78\u8fd0\u7684\u6570\u7ed3\u5c3e\u3002\n\n\u4ed4\u7ec6\u8bfb\u9898\u4f1a\u53d1\u73b0\uff1a**\u6a21\u5f0f\u4e32\u4e2d\u542b\u6709 $0$ \u524d\u7f6e\uff0c\u800c\u6587\u672c\u4e32\u4e0d\u80fd\u4ee5 $0$ \u5f00\u5934**\u3002\u6240\u4ee5\u6709\uff08\u6240\u6709\u6570\u7ec4\u4e0b\u6807\u4ece $1$ \u5f00\u59cb\uff0c$1\\le n[1]\\le 9$\uff0c\u56e0\u4e3a $ch[1][i]$ \u4f1a\u6709\u91cd\u590d\u6240\u4ee5\u7528 $++$ \u800c\u975e $=1$\uff09\uff1a\n\n$$dp[1][ch[1][i]][0]++(1\\le i<n[1],mk[ch[1][i]]!=1)$$\n\n\u7136\u540e\u5982\u679c\u4e0a\u5f0f $i$ \u53d6 $n[1]$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7684\u4e0b\u4e00\u4f4d\u5c31\u4f1a\u53d7\u5230 $n[2]$ \u5927\u5c0f\u7684\u9650\u5236\uff0c\u6240\u4ee5\u6709\uff1a\n\n$$dp[1][ch[1][n[1]]][1]++(mk[ch[1][n[1]]]!=1)$$\n\n\u7efc\u4e0a\uff0c\u6709\u4ee3\u7801\uff1a\n\n```cpp\nfor(int i=1;i<=w[1]-'0';i++)\n\tif(!mk[ch[1][i]])//\u4e0d\u80fd\u9009\u5230\u4e0d\u5e78\u8fd0\u7684\u5b50\u4e32\n\t\t(f[1][ch[1][i]][i==w[1]-'0']+=1)%=mod; //Orz\n```\n\n \u4e3a\u4e86\u907f\u514d\u7b97\u4e0a\u9996\u4f4d\u4e3a $0$ \u7684\u6587\u672c\u4e32\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u6ca1\u6709 $dp[1][ch[1][0]][0]++$\u3002\u4e3a\u4e86\u8ba1\u7b97\u90a3\u4e9b\u4f4d\u6570\u5c0f\u4e8e $n$ \u7684\u6587\u672c\u4e32\uff0c\u5219\u6709\uff1a\n\n$$dp[i][ch[1][j]][0]++(2\\le i\\le \\texttt{length of }n,1\\le j\\le 9,mk[ch[1][j]]!=1)$$\n\n\u4e3a\u4e86\u9632\u6b62 $\\color{#333399}\\texttt{MLE}$\uff0cdp\u7528\u6eda\u52a8\u6570\u7ec4\uff0c\u6240\u4ee5\u6709\u4ee3\u7801\uff1a\n\n```cpp\nfor(int i=2;i<=m;i++){\n\tmemset(f[i&1],0,sizeof f[i&1]);//\u6eda\u52a8\u6570\u7ec4\u5fc5\u987b\u6e05\u7a7a\n\tfor(int j=1;j<=9;j++)\n\t\tif(!mk[ch[1][j]])\n\t\t\t(f[i&1][ch[1][j]][0]+=1)%=mod;//Orz\n```\n\u521d\u59cb\u5316\u5b8c\u4e86\uff0c\u91cd\u70b9\u5c31\u6765\u4e86\u2014\u2014\u9012\u63a8\u516c\u5f0f\u3002\u5982\u679c\u67d0\u4e2a\u6587\u672c\u4e32\u5408\u6cd5\uff0c\u90a3\u4e48\u5728\u5b83\u540e\u9762\u52a0\u4e00\u4e2a\u5b57\u7b26\uff0c\u5982\u679c\u8fd9\u4e2a\u6587\u672c\u4e32\u8fd8\u662f $\\le n$ \uff0c\u5e76\u4e14\u4e0d\u5305\u542b\u4e0d\u5e78\u8fd0\u7684\u5b50\u4e32\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u5408\u6cd5\u7684\u3002\n\n\u8f6c\u5316\u4e3adp\u9012\u63a8\u5f0f\uff08$cnt$ \u8868\u793aAC\u81ea\u52a8\u673a\u8282\u70b9\u4e2a\u6570\uff09\uff1a\n\n$$dp[i][ch[j][k]][0]+=dp[i-1][j][0]$$\n$$(1\\le i\\le\\texttt{length of }n,1\\le j\\le  cnt,mk[ch[j][k]]!=1,\\color{red}0\\color{black}\\le k\\le 9)$$\n>\u8fd9\u91cc\u662f\u9012\u63a8\uff0c\u6240\u4ee5\u8fd9\u5c31\u76f8\u5f53\u4e8e\u5728\u6c42\u4e00\u4e2a\u6570\u4e2d\u95f4\u7684\u4e00\u4e2a\u6570\u4f4d\uff0c\u6240\u4ee5\u53ef\u4ee5\u53d6 $0$\n\n$$dp[i][ch[j][k]][0]+=dp[i-1][j][1]$$\n$$(1\\le i\\le\\texttt{length of }n,1\\le j\\le  cnt,mk[ch[j][k]]!=1,\\color{red}0\\le k<n[i]\\color{black})$$\n>\u9664\u975e\u53d6\u7684\u6587\u672c\u4e32\u5bf9 $n$ \u4f4d\u4f4d\u7d27\u903c\uff0c\u8981\u4e0d\u7136\u4e0b\u4e00\u4f4d\u5c31\u4e0d\u53d7 $n$ \u6570\u4f4d\u5927\u5c0f\u7684\u9650\u5236\u3002\n\n$$dp[i][ch[j][n[i]]][1]+=dp[i-1][j][1]$$\n$$(1\\le i\\le\\texttt{length of }n,1\\le j\\le  cnt,mk[ch[j][n[i]]]!=1)$$\n\n>\u53d6\u7684\u6587\u672c\u4e32\u5bf9 $n$ \u4f4d\u4f4d\u7d27\u903c\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\nfor(int j=1;j<=cnt;j++){\n\tif(mk[j]) continue;\n\tif(f[(i-1)&1][j][0])\n\t\tfor(int c=0;c<=9;c++)\n\t\t\tif(!mk[ch[j][c]])\n\t\t\t\t(f[i&1][ch[j][c]][0]+=f[(i-1)&1][j][0])%=mod;\n\tif(f[(i-1)&1][j][1])\n\t\tfor(int c=0;c<=w[i]-'0';c++)\n\t\t\tif(!mk[ch[j][c]])\n\t\t\t\t(f[i&1][ch[j][c]][c==w[i]-'0']+=f[(i-1)&1][j][1])%=mod;\n}\n```\n\u6700\u540e\u7b54\u6848\u4e3a $ans$\uff0c\u5c31\u6709\uff1a\n\n$$ans=\\sum\\limits ^{cnt}_{i=1}dp[\\texttt{length of }n][i][0]+dp[\\texttt{length of }n][i][1]$$\n\n\u5982\u679c\u4f60\u61c2\u4e86\uff0c\u849f\u84bb\u5c31\u653edp\u4ee3\u7801\u4e86\uff1a\n\n```cpp\nvoid dp(){\n\tfor(int i=1;i<=w[1]-'0';i++)\n\t\tif(!mk[ch[1][i]])\n\t\t\t(f[1][ch[1][i]][i==w[1]-'0']+=1)%=mod; //Orz\n\tfor(int i=2;i<=m;i++){\n\t\tmemset(f[i&1],0,sizeof f[i&1]);\n\t\tfor(int j=1;j<=9;j++)\n\t\t\tif(!mk[ch[1][j]])\n\t\t\t\t(f[i&1][ch[1][j]][0]+=1)%=mod;//Orz\n\t\tfor(int j=1;j<=cnt;j++){\n\t\t\tif(mk[j]) continue;\n\t\t\tif(f[(i-1)&1][j][0])\n\t\t\t\tfor(int c=0;c<=9;c++)\n\t\t\t\t\tif(!mk[ch[j][c]])\n\t\t\t\t\t\t(f[i&1][ch[j][c]][0]+=f[(i-1)&1][j][0])%=mod;\n\t\t\tif(f[(i-1)&1][j][1])\n\t\t\t\tfor(int c=0;c<=w[i]-'0';c++)\n\t\t\t\t\tif(!mk[ch[j][c]])\n\t\t\t\t\t\t(f[i&1][ch[j][c]][c==w[i]-'0']+=f[(i-1)&1][j][1])%=mod;\n\t\t}\n\t}\n\tfor(int i=1;i<=cnt;i++)\n\t\tif(!mk[i]) (((ans+=f[m&1][i][0])%=mod)+=f[m&1][i][1])%=mod;\n}\n```\n\u6574\u4f53\u4ee3\u7801\uff08dp+AC\u81ea\u52a8\u673a\uff09\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int M=1210;\nconst int L=1510;\nconst int mod=1e9+7;\nclass Trie{\npublic:\n\tint ch[L][10],cnt;\n\tbool mk[L];\n\tTrie(){cnt=1;}\n\tvoid insert(char*s){\n\t\tint n_junior=strlen(s+1),p=1;\n\t\tfor(int i=1;i<=n_junior;i++){\n\t\t\tint c=s[i]-'0';\n\t\t\tif(!ch[p][c]) ch[p][c]=++cnt;\n\t\t\tp=ch[p][c];\n\t\t}\n\t\tmk[p]=1;\n\t}\n};\nint n,m,f[2][L][2],ans;\nchar w[M],s[L];\nclass Acam:public Trie{\npublic:\n\tint fa[L];\n\tvoid build(){\n\t\tfor(int i=0;i<=9;i++) ch[0][i]=1;\n\t\tqueue<int> q;\n\t\twhile(q.size()) q.pop(); //\u6211\u56e0\u4e3a\u6ca1\u6e05\u96f6WA\u4e865\u6b21\n\t\tq.push(1);\n\t\twhile(q.size()){\n\t\t\tint x=q.front();q.pop();\n\t\t\tmk[x]|=mk[fa[x]];\n\t\t\tfor(int c=0;c<=9;c++)\n\t\t\t\tif(ch[x][c]){\n\t\t\t\t\tfa[ch[x][c]]=ch[fa[x]][c];\n\t\t\t\t\tq.push(ch[x][c]);\n\t\t\t\t} else ch[x][c]=ch[fa[x]][c];\n\t\t}\n\t}\n\tvoid dp(){\n\t\tfor(int i=1;i<=w[1]-'0';i++)\n\t\t\tif(!mk[ch[1][i]])\n\t\t\t\t(f[1][ch[1][i]][i==w[1]-'0']+=1)%=mod;\n\t\tfor(int i=2;i<=m;i++){\n\t\t\tmemset(f[i&1],0,sizeof f[i&1]);\n\t\t\tfor(int j=1;j<=9;j++)\n\t\t\t\tif(!mk[ch[1][j]])\n\t\t\t\t\t(f[i&1][ch[1][j]][0]+=1)%=mod;\n\t\t\tfor(int j=1;j<=cnt;j++){\n\t\t\t\tif(mk[j]) continue;\n\t\t\t\tif(f[(i-1)&1][j][0])\n\t\t\t\t\tfor(int c=0;c<=9;c++)\n\t\t\t\t\t\tif(!mk[ch[j][c]])\n\t\t\t\t\t\t\t(f[i&1][ch[j][c]][0]+=f[(i-1)&1][j][0])%=mod;\n\t\t\t\tif(f[(i-1)&1][j][1])\n\t\t\t\t\tfor(int c=0;c<=w[i]-'0';c++)\n\t\t\t\t\t\tif(!mk[ch[j][c]])\n\t\t\t\t\t\t\t(f[i&1][ch[j][c]][c==w[i]-'0']+=f[(i-1)&1][j][1])%=mod;\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=cnt;i++)\n\t\t\tif(!mk[i]) (((ans+=f[m&1][i][0])%=mod)+=f[m&1][i][1])%=mod;\n\t}\n}t;\nint main(){\n\tscanf(\"%s\\n%d\",w+1,&n),m=strlen(w+1);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%s\",s+1),t.insert(s);\n\tt.build(); t.dp();\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n**\u795d\u5927\u5bb6\u5b66\u4e60\u6109\u5feb\uff01**\n\n",
        "postTime": 1581427284,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3311 \u3010[SDOI2014]\u6570\u6570\u3011"
    },
    {
        "content": "\u5199\u5728\u524d\u9762\u7684\uff0c\u57fa\u672c\u6240\u6709\u4eba\u90fd\u662f\u4e00\u4e2a\u5199\u6cd5\u3002\u800c\u4e14\u6709\u4e9b\u8fd8\u8fc7\u4e0d\u4e86$Hack$ \u6570\u636e\u3002\u5176\u5b9e\u5bf9\u4e8e\u6570\u4f4d $dp$ \u4e00\u79cd\u666e\u904d\u7684\u5e94\u8be5\u662f\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u5df2\u7ecf\u8fc7 $Hack$ \u3002 [\u66f4\u5dee\u7684\u9605\u8bfb\u4f53\u9a8c\u3002](https://www.luogu.com.cn/blog/xzc/solution-p3311)\n# \u5206\u6790\n\u6211\u4eec\u628a\u6570\u5b57\u8003\u8651\u4e3a\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u5c31\u662f\u8981\u6c42\u51fa\u6709\u591a\u5c11\u65b9\u6848\u6ee1\u8db3 $\\forall S_i$ \u6ca1\u6709\u51fa\u73b0\u5728 $T$ \u4e32\u4e2d\u3002\u8fd9\u4e2a\u975e\u5e38\u7c7b\u4f3c [\u8fd9\u9053\u9898](https://www.luogu.com.cn/problem/P4052) \u53ea\u662f\u5c06\u5fc5\u987b\u51fa\u73b0\u6539\u4e3a\u90fd\u6ca1\u6709\u51fa\u73b0\u3002\n\n- \u5173\u4e8e\u8fd9\u9053\u9898\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u5bf9\u5b50\u4e32\u8003\u8651\uff0c\u6bd4\u8f83\u81ea\u7136\u8003\u8651\u5230 $Trie$ \u6811\u548c $ACAM$ \u3002\u7531\u4e8e $Trie$ \u5e76\u4e0d\u80fd\u5f88\u597d\u5904\u7406\u5931\u914d\u7684\u95ee\u9898\uff0c\u90a3\u4e48\u8003\u8651 $AC$ \u81ea\u52a8\u673a\u3002\u6211\u4eec\u5b9a\u4e49 $end_i = 0/1$ \u5176\u4e2d $end_i=1$ \u8868\u793a\uff0c\u8be5\u8282\u70b9\u4e3a\u4e00\u4e2a $S_i$ \u7684\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5f53\u6211\u4eec\u8f6c\u79fb\u5230\u8fd9\u4e2a\u70b9\u7684\u65f6\u5019\u662f\u975e\u6cd5\u7684\u3002\u4f46\u662f\u5728 $AC$ \u81ea\u52a8\u673a\u4e0a\u4e0d\u77e5\u6bcf\u4e2a\u4e32\u7684\u63d2\u5165\u7684\u5730\u65b9\u662f\u975e\u6cd5\u7684\uff0c\u5982\u679c\u4e32 $A$ \u662f $B$ \u7684\u5b50\u4e32\uff0c\u800c\u4e14 $end_A = 1$ \uff0c\u90a3\u4e48 $end_B = 1$ \u3002\u800c $fail$ \u6307\u9488\u6307\u5411\u7684\u5c31\u662f\u4e00\u4e2a\u4e32\u7684\u6700\u957f\u540e\u7f00\uff0c\u6240\u4ee5\u6211\u4eec\u624d\u8003\u8651\u5230 $end_A  = end_{fail_A} | end_A $ \u3002\n\n- \u90a3\u4e48\u73b0\u5728\u6211\u4eec\u5904\u7406\u4e86\u5b50\u4e32\u7684\u5408\u6cd5\u6027\uff0c\u5b9a\u4e49 $f(i,j)$ \u4e3a\u5df2\u7ecf\u8003\u8651\u957f\u5ea6\u4e3a $i$ \uff0c\u5f53\u524d\u8282\u70b9\u4e3a $j$ \u7684\u5408\u6cd5\u7b54\u6848\uff0c\u90a3\u4e48 $ans =\\sum_{i\\in ACAM} f(|m|,i)$ \uff0c\u73b0\u5728\u8003\u8651\u6211\u4eec\u6784\u6210\u7684\u4e32 $T$ \u5728\u6570\u503c\u4e0a\u8981\u5c0f\u4e8e\u7b49\u4e8e $m$ \u3002\u90a3\u4e48\u8fd9\u4e2a\u53ef\u4ee5\u5f88\u597d\u7684\u6570\u4f4d $dp$ \u3002\u4ece\u800c\u9650\u5236\u6211\u4eec\u8f6c\u79fb\u3002\u7ec6\u8282\u8fd8\u662f\u89c1\u4ee3\u7801\uff0c\u8981\u6ce8\u610f\u6ca1\u6709\u524d\u5bfc\u96f6\u7684\u65f6\u5019\u4e0d\u80fd\u8f6c\u79fb\u5230 $Trie$ \u4e0a\u7684\u5176\u4ed6\u8282\u70b9\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u7684\u4e32\u8fd8\u6ca1\u5f00\u59cb\u3002\n\n# \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 1600,mod = 1e9 + 7;\nint f[1300][N][2][2],fail[N],ch[N][10],val[N],size;\nint n;\nchar m[1300];\nvoid insert(char *S) {\n\tint len = strlen(S + 1),u = 0;\n\tfor(int i = 1;i <= len;i++) {\n\t\tint c = (S[i] - '0');\n\t\tif(!ch[u][c]) ch[u][c] = ++size;\n\t\tu = ch[u][c];\n\t}val[u] |= 1;\n}\nvoid build() {\n\tqueue<int> Q;\n\tfor(int i = 0;i < 10;i++) if(ch[0][i]) Q.push(ch[0][i]);\n\twhile(!Q.empty()) {\n\t\tint x = Q.front();Q.pop();\n\t\tfor(int i = 0;i < 10;i++) {\n\t\t\tint y = ch[x][i];\n\t\t\tif(y) {fail[ch[x][i]] = ch[fail[x]][i];val[y] |= val[fail[y]];Q.push(y);}\n\t\t\telse ch[x][i] = ch[fail[x]][i];\n\t\t}\n\t}\n}\nvoid inc(int &x,int y) {x = (x + y) % mod;}\nint dfs(int now,int pos,int limit,int st) {\n\tif(now <= 0) return !val[pos];\n\tif(val[pos]) return 0;\n\tif(f[now][pos][limit][st] != -1) return f[now][pos][limit][st]; \n\tint x = limit ? (m[now] - '0') : 9,res = 0;\n\tfor(int i = 0;i <= x;i++) {\n\t\tinc(res, dfs(now - 1,(st && (i == 0)) ? 0 : ch[pos][i],(limit && (i + '0' == m[now])),(st && (i == 0))) );\n\t}\n\treturn f[now][pos][limit][st] = res;\n}\nint main() {\n\tscanf(\"%s%d\",m + 1,&n);\n\tint len = strlen(m + 1);\n\tfor(int i = 1;i <= n;i++) {\n\t\tstatic char S[N];scanf(\"%s\",S + 1);insert(S);\n\t}\n\tbuild();reverse(m + 1,m + 1 + len);\n\tmemset(f,-1,sizeof(f));\n\tint ans = dfs(len,0,1,1);inc(ans,mod - 1);\n\tcout << ans << endl;return 0;\n}\n```\n",
        "postTime": 1603356437,
        "uid": 227824,
        "name": "JK_LOVER",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3311 \u3010[SDOI2014] \u6570\u6570\u3011"
    },
    {
        "content": "\u770b\u5927\u5bb6\u597d\u50cf\u90fd\u5199\u7684\u633a\u9ebb\u70e6\u7684\uff1f\n\n\u5173\u4e8e\u591a\u5b50\u4e32\u7684\u4e1c\u897f\u53ef\u4ee5\u60f3\u5230AC\u81ea\u52a8\u673a\uff0c\u53ef\u4ee5\u5728\u4e0a\u9762dp\u3002\n\n$dp_{i,j,0/1}$\u4ee3\u8868$i\\sim n$\u4f4d\u6570\u5b57\u76ee\u524d\u5728AC\u81ea\u52a8\u673a\u4e0a\u5339\u914d\u5230\u8282\u70b9$j$\u662f\u5426\u6709\u6700\u9ad8\u4f4d\u9650\u5236\u3002\n\n\u6700\u540e\u4e00\u4f4d\u53ef\u4ee5\u50cf\u6570\u4f4ddp\u90a3\u6837\u975e\u5e38\u7b80\u5355\u7684\u8f6c\u79fb\u3002\n\n\u7136\u540e\u6709\u4e2a\u5751\u70b9\u662f$S$\u4e2d\u6709\u524d\u5bfc$0$\uff0c\u4f46\u662f$N$\u4e2d\u6ca1\u6709\u3002\n\n\u6709\u4e00\u79cd\u7b80\u5355\u7684\u5904\u7406\u65b9\u6cd5\u662f\u5728\u5efa\u5b8cAC\u81ea\u52a8\u673a\u540e\u628a\u8fb9$ch[root][0]$\u5220\u6389\n\n------\n**Code:**\n```cpp\n#include <cstdio>\n#include <cstring>\nconst int mod=1e9+7;\nconst int N=1520;\ninline void add(int &x,int y){x=x+y>=mod?x+y-mod:x+y;}\nchar s[N],t[N];\nint ch[N][10],endro[N],fail[N],tot,q[N],l=1,r,bit[N],dp[N][N][2];\nvoid ins()\n{\n\tscanf(\"%s\",s+1);\n\tint n=strlen(s+1),now=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(!ch[now][s[i]-'0']) ch[now][s[i]-'0']=++tot;\n\t\tnow=ch[now][s[i]-'0'];\n\t}\n\tendro[now]=1;\n}\nvoid build()\n{\n\tfor(int i=0;i<10;i++)\n\t\tif(ch[0][i])\n\t\t\tq[++r]=ch[0][i];\n\twhile(l<=r)\n\t{\n\t\tint now=q[l++];\n\t\tfor(int i=0;i<10;i++)\n\t\t{\n\t\t\tif(ch[now][i]) fail[q[++r]=ch[now][i]]=ch[fail[now]][i];\n\t\t\telse ch[now][i]=ch[fail[now]][i];\n\t\t}\n\t}\n\tch[0][0]=0;\n}\nint main()\n{\n\tscanf(\"%s\",t+1);\n\tint n=strlen(t+1),m;\n\tfor(int i=1;i<=n;i++) bit[i]=t[n+1-i]-'0';\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++) ins();\n\tbuild();\n\tdp[n+1][0][1]=1;\n\tfor(int i=n+1;i>1;i--)\n\t\tfor(int j=0;j<=tot;j++)\n\t\t\tfor(int l=0;l<=1;l++)\n\t\t\t\tfor(int k=0,u=l?bit[i-1]:9;k<=u;k++)\n\t\t\t\t{\n\t\t\t\t\tint to=ch[j][k];\n\t\t\t\t\tif(!endro[to]) add(dp[i-1][to][l&k==bit[i-1]],dp[i][j][l]);\n\t\t\t\t}\n\tint ans=mod-1;\n\tfor(int i=0;i<=tot;i++) add(ans,dp[1][i][0]),add(ans,dp[1][i][1]);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1550718290,
        "uid": 63727,
        "name": "ButterflyDew",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3311 \u3010[SDOI2014]\u6570\u6570\u3011"
    },
    {
        "content": "\n\u5bf9\u7ed9\u5b9a\u7684\u82e5\u5e72\u4e2a\u4e32\u5efa\u7acbAC\u81ea\u52a8\u673a\u3002\u5bf9\u81ea\u52a8\u673a\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\uff0c\u7ef4\u62a4\u4e00\u4e2a\u6807\u8bb0\uff0c\u8868\u793a\u5728fail\u6811\u4e0a\uff0c\u5b83\u5230\u6839\u7684\u8def\u5f84\u4e2d\u662f\u5426\u5b58\u5728\u8bcd\u5c3e\u8282\u70b9\u3002\uff08\u8bcd\u5c3e\u8282\u70b9\u5373\u6bcf\u6b21\u63d2\u5165\u4e00\u4e2a\u4e32\u65f6\u6700\u540e\u5230\u8fbe\u7684\u90a3\u4e2a\u8282\u70b9\uff09\n\n\u8bbe$f_{i,j,0/1}$\u8868\u793a\u8003\u8651\u5230n\u7684\u7b2ci\u4f4d\uff08\u4ece\u9ad8\u5230\u4f4e\uff09\uff0c\u5f53\u524d\u5728\u81ea\u52a8\u673a\u7684j\u53f7\u8282\u70b9\uff0c\u76ee\u524d\u4e3a\u6b62 \u6ca1\u6709\u6328\u7740 / \u6b63\u5728\u6328\u7740 \u4e0a\u754c\u65f6\uff0c\u7b54\u6848\u662f\u591a\u5c11\u3002\u8bbech(x,c)\u8868\u793ax\u53f7\u8282\u70b9\u7684c\u53f7\u5b50\u8282\u70b9\uff0c\u4e8e\u662f\u53ef\u4ee5\u5199\u51fa\u8f6c\u79fb\uff1a\n\n1. \u82e5\u5f53\u524d\u6ca1\u6709\u6328\u7740\u4e0a\u754c\uff0c\u524d\u4e00\u4f4d\u4e0d\u6328\u7740\u4e0a\u754c\uff0c\u5219\uff1a$f_{i-1,p,0}\\longrightarrow f_{i,ch(p,1\\sim 9),0}$\n2. \u82e5\u5f53\u524d\u6ca1\u6709\u6328\u7740\u4e0a\u754c\uff0c\u524d\u4e00\u4f4d\u6328\u7740\u4e0a\u754c\uff0c\u5219\uff1a$f_{i-1,p,1}\\longrightarrow f_{i,ch(p,1\\sim upper_i-1),0}$\n3. \u82e5\u5f53\u524d\u8981\u6328\u7740\u4e0a\u754c\uff0c\u90a3\u524d\u4e00\u4f4d\u5fc5\u7136\u8981\u6328\u7740\u4e0a\u754c\uff0c\u5219 \uff1a$f_{i-1,p,1}\\longrightarrow f_{i,ch(p,upper_i),1}$\n\n\u6700\u540e\u7684\u7b54\u6848\u663e\u7136\u5c31\u662f\uff1a$\\sum\\limits_{i=0}^{tot}f_{n,i,0}+f_{n,i,1}$\n\n\u7ecf\u8fc7\u5c1d\u8bd5\uff0c\u4f7f\u7528\u6eda\u52a8\u6570\u7ec4\u4f1a\u5927\u5927\u63d0\u5347\u8fd0\u884c\u901f\u5ea6\uff0c\u53ef\u4ee5\u5feb20ms\u5de6\u53f3\uff01\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N=1510;\nconst int ha=1000000007;\nint ch[N][10],fail[N],tot=0;\nint f[2][N][2],m,nlen;\nbool fuck[N];\nchar n[N];\n\nvoid insert(char* _begin,char* _end)\n{\n    int o=0;\n    for(;_begin!=_end;_begin++)\n    {\n        int t=*_begin-'0';\n        if(!ch[o][t]) ch[o][t]=++tot;\n        o=ch[o][t];\n    }\n    fuck[o]=1;\n}\n\nvoid getfail()\n{\n    queue<int> q;q.push(0);\n    while(!q.empty())\n    {\n        int u=q.front();q.pop();\n        fuck[u]|=fuck[fail[u]];\n        for(int i=0;i<10;i++)\n            if(ch[u][i])\n            {\n                if(u) fail[ch[u][i]]=ch[fail[u]][i];\n                q.push(ch[u][i]);\n            }\n            else ch[u][i]=ch[fail[u]][i];\n    }\n}\n\ninline void add(int &x,const int &y){x=(x+y>=ha)?x+y-ha:x+y;}\n\nint xixihaha()\n{\n    int ans=0,k=0;\n    for(int i=1;i<n[0]-'0';i++)\n        add(f[k][ch[0][i]][0],1);\n    add(f[k][ch[0][n[0]-'0']][1],1);\n    for(int i=1;i<nlen;i++,k^=1)\n    {\n        memset(f[k^1],0,sizeof(f[k^1]));\n        for(int j=1;j<10;j++)\n            add(f[k^1][ch[0][j]][0],1);\n        for(int p=0;p<=tot;p++)\n        {\n            if(fuck[p]) continue;\n            if(f[k][p][0])for(int j=0;j<10;j++)\n            {\n                if(fuck[ch[p][j]]) continue;\n                add(f[k^1][ch[p][j]][0],f[k][p][0]);\n            }\n            if(f[k][p][1])for(int j=0;j<n[i]-'0';j++)\n            {\n                if(fuck[ch[p][j]]) continue;\n                add(f[k^1][ch[p][j]][0],f[k][p][1]);\n            }\n            if(fuck[ch[p][n[i]-'0']]) continue;\n            add(f[k^1][ch[p][n[i]-'0']][1],f[k][p][1]);\n        }\n    }\n    for(int i=0;i<=tot;i++)\n    {\n        if(fuck[i]) continue;\n        add(ans,f[k][i][0]);\n        add(ans,f[k][i][1]);\n    }\n    return ans;\n}\n\nint main()\n{\n    char s[N];\n    scanf(\"%s%d\",n,&m);\n    nlen=strlen(n);\n    for(int i=0;i<m;i++)\n    {\n        scanf(\"%s\",s);\n        int len=strlen(s);\n        insert(s,s+len);\n    }\n    getfail();\n    int ans=xixihaha();\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1540286017,
        "uid": 20158,
        "name": "Ebola",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3311 \u3010[SDOI2014]\u6570\u6570\u3011"
    },
    {
        "content": "\u770b\u5230\u9898\u89e3\u91cc\u9762\u90fd\u662f\u9012\u63a8\u5f0fdp\uff0c\u6211\u6765\u8865\u4e00\u53d1\u8bb0\u5fc6\u5316\u641c\u7d22\u5f0f\u7684\n\n----\n\n### \u4e3b\u8981\u601d\u8def\n\n\u697c\u4e0a\u5df2\u7ecf\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86\u3002\u4f46~~\u4e3a\u4e86\u8fc7\u5ba1~~\u4e3a\u4e86\u52a0\u6df1\u7406\u89e3\uff0c\u6211\u8fd8\u662f\u6765~~\u626f~~\u7565\u8bb2\u4e00\u4e0b\u3002\n\n\u770b\u5230\u9898\u76ee\u91cc\u7684\u591a\u6a21\u5f0f\u4e32\u5339\u914d\uff0c\u663e\u7136\u53ef\u4ee5\u60f3\u5230AC\u81ea\u52a8\u673a\u3002\u518d\u770b\u5230\u201c\u8ba1\u7b97\u4e0d\u5927\u4e8eN\u7684\u5e78\u8fd0\u6570\u4e2a\u6570\u201d\uff0c\u6211\u4eec\u53c8\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e0e\u6570\u4f4ddp\u6709\u5173\u3002\u6240\u4ee5\u8fd9\u9898\u7684\u7b97\u6cd5\u6b63\u662f\uff1aAC\u81ea\u52a8\u673a+\u6570\u4f4ddp\u3002\n\n\u9996\u5148\u662fAC\u81ea\u52a8\u673a\u7684\u57fa\u672c\u64cd\u4f5c\uff0c\u628a\u96c6\u5408S\u8bfb\u8fdb\u6765\uff0c\u5efa\u7acbtrie\u6811\uff0c\u6c42\u51fa\u524d\u7f00\u6307\u9488\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u7684\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\uff1a\u5728\u52a0\u4e0a\u524d\u7f00\u6307\u9488\u7684trie\u6811\u4e0a\uff0c\u627e\u4e00\u6761\u8def\u5f84\uff0c\u4e0d\u7ecf\u8fc7\u4efb\u4f55\u7ed3\u5c3e\u8282\u70b9\uff0c\u5e76\u4e14\u4e00\u8def\u4e0a\u7ecf\u8fc7\u7684\u8fb9\u6240\u7ec4\u6210\u7684\u6570\u5b57\u4e0d\u5927\u4e8e$n$\uff0c\u6709\u591a\u5c11\u79cd\u65b9\u6848\u3002\n\n\u6570\u4f4ddp\u5b9e\u73b0\u3002\n\n\u6ce8\u610f\uff0c\u4e00\u4e2a\u8282\u70b9\u662f\u7ed3\u5c3e\u8282\u70b9\uff0c\u5f53\u4e14\u4ec5\u5f53\u8fd9\u4e2a\u70b9\u672c\u8eab\u662f\u7ed3\u5c3e\u8282\u70b9\uff0c\u6216\u8005\u5176\u5931\u914d\u8282\u70b9\u662f\u7ed3\u5c3e\u8282\u70b9\uff0c\u6216\u8005\u5176\u5931\u914d\u8282\u70b9\u7684\u5931\u914d\u8282\u70b9\u662f\u7ed3\u5c3e\u8282\u70b9\uff0c\u6216\u8005\u5176\u5931\u914d\u8282\u70b9\u7684\u5931\u914d\u8282\u70b9\u7684\u3002\u3002\u3002\u662f\u7ed3\u5c3e\u8282\u70b9\u3002\u6211\u4e48\u53ef\u4ee5\u7528AC\u81ea\u52a8\u673a\u6c42\u5b8c\u524d\u7f00\u6307\u9488\u4e4b\u540e\u961f\u5217\u91cc\u9762\u7684\u6b8b\u7559\u6570\u636e\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\uff08\u5177\u4f53\u89c1\u4ee3\u7801\uff09\n\n----\n### \u4ee3\u7801\u5b9e\u73b0\n\nAC\u81ea\u52a8\u673a\u57fa\u672c\u64cd\u4f5c\u4e0d\u518d\u591a\u8bb2\uff0c\u4e0d\u4f1a\u8bf7\u81ea\u884c\u8865\u4e60\u3002\n\n\u8fd9\u91cc\u91cd\u70b9\u8bb2\u4e00\u4e0b\u6570\u4f4ddp\u3002\n\n\u6211\u4eec\u8bbe$f[i][j]$\u8868\u793a\u5f53\u524d\u5728\u5904\u7406\u7b2ci\u4f4d\uff0c\u5f53\u524d\u5728trie\u6811\u7684j\u8fd9\u4e2a\u8282\u70b9\uff0c\u5e76\u4e14\u4fdd\u8bc1\u5f53\u524d\u6784\u6210\u7684\u6570\u4e25\u683c\u5c0f\u4e8en\uff0c\u63a5\u4e0b\u53bb\u6709\u591a\u5c11\u4e2a\u7b26\u5408\u8981\u6c42\u7684\u6570\u5b57\u3002\n\n\u663e\u7136\uff0c\u5728\u8f6c\u79fb\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u66b4\u529b\u679a\u4e3e\u63a5\u4e0b\u6765\u9009\u54ea\u4e00\u4e2a\u6570\u3002\u5047\u8bbe\u63a5\u4e0b\u53bb\u9009\u7684\u6570\u662fk\uff1a\n\n$f[i][j]=\\sum f[i+1][ch[j][k]](ch[j][k]$ \u4e0d\u662f\u7ed3\u5c3e\u8282\u70b9$)$\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u5b9e\u73b0\u8fd9\u4e00\u8f6c\u79fb\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\uff08\u6211\u7684\u6570\u4f4ddp\u4e2d\u5927\u5c0f\u9650\u5236\u53d8\u91cf\u4e0e\u522b\u4eba\u662f\u53cd\u8fc7\u6765\u7684\uff0c\u9605\u8bfb\u53ef\u80fd\u5f15\u8d77\u4e0d\u9002\uff0c\u8bf7\u8c05\u89e3\uff09:\n```cpp\nint dfs(int pos,int ch_pos,bool down,bool qiandaoling){\n\tif(pos>lenn) return !qiandaoling;//\u6ce8\u610f\uff0c\u8bf7\u5904\u7406\u524d\u5bfc\u96f6\u95ee\u9898\n\tif(down && ~f[pos][ch_pos]) return f[pos][ch_pos];//~f[pos][ch_pos]\u662ff[pos][ch_pos]!=-1\u7684\u88c5\u903c\u5199\u6cd5\n\tint end=down?9:sn[pos]-'0',res=0;//\u9605\u8bfb\u53ef\u80fd\u5f15\u8d77\u4e0d\u9002\uff0c\u8bf7\u8c05\u89e3\u3002\n\tfor(int i=0;i<=end;i++){\n\t\tif(qiandaoling){//\u5904\u7406\u524d\u5bfc\u96f6\u95ee\u9898\n\t\t\tif(!bo[ch[1][i]])\n\t\t\t  res=(res+dfs(pos+1,ch[1][i],down || i!=end,qiandaoling && i==0))%p;//\u8f6c\u79fb\n\t\t}\n\t\telse{\n\t\t\tif(!bo[ch[ch_pos][i]])\n\t\t\t  res=(res+dfs(pos+1,ch[ch_pos][i],down || i!=end,false))%p;//\u8f6c\u79fb\n\t\t}\n\t}\n\tif(down && !qiandaoling) f[pos][ch_pos]=res;//\u8bb0\u5fc6\u5316\n    return res;\n}\n```\n\n\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u521a\u521a\u5904\u7406\u4e86\u524d\u5bfc\u96f6\u95ee\u9898\u3002\u90a3\u4e48\u4e3a\u4ec0\u4e48\u8981\u5904\u7406\u524d\u5bfc\u96f6\u5462\uff1f\u56e0\u4e3a\u6b64\u9898\u6570\u636e\u592a\u5751\u7239\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u770b\u770b\u8fd9\u4e2a\u6570\u636e\uff1a\n> 10\n\n> 1\n\n> 01\n\n\u5982\u679c\u4f60\u4e0d\u5904\u7406\u524d\u5bfc\u96f6\uff0c\u90a3\u4e48\u4f60\u7684\u8f93\u51fa\u5c06\u662f9\uff0c\u800c\u6b63\u786e\u8f93\u51fa\u5219\u662f10.\n\n\u56e0\u4e3a\u5728\u6570\u4f4ddp\u7684\u65f6\uff0c\u6211\u4eec\u5728\u6784\u6210\u6570\u5b571\u7684\u8fc7\u7a0b\u4e2d\u4e00\u4e0d\u5c0f\u5fc3\u5305\u542b\u4e86\u201c01\u201d\u8fd9\u4e2a\u5b50\u4e32\uff08\u56e0\u4e3a\u6211\u4eec\u7684n\u6709\u4e24\u4f4d\uff0c\u6240\u4ee5\u662f\u4ece\u5341\u4f4d\u5f00\u59cb\u6570\u4f4ddp\u7684\uff09\u3002\u800c\u4e8b\u5b9e\u4e0a\uff0c\u6570\u5b571\u662f\u4e0d\u5305\u542b\"01\"\u8fd9\u4e2a\u5b50\u4e32\u7684\uff0c\u56e0\u4e3a\u90a3\u4e2a0\u662f\u524d\u5bfc\u96f6\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8981\u7279\u5224\u4e00\u4e0b\uff0c\u5ffd\u7565\u524d\u5bfc\u96f6\u3002\n\n----\n\n### \u771f \u00b7 \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define next fuck\nusing namespace std;\nint const max_ch=1505;\nint const p=1e9+7;\nint m,lenn,tot=1,ch[max_ch][10],next[max_ch],que[max_ch],f[1205][max_ch];\nbool bo[max_ch];\nchar sn[1205],s[1505];\ninline void insert(char *s){\n\tint u=1,len=strlen(s);\n\tfor(int i=0;i<len;i++){\n\t\tint c=s[i]-'0';\n\t\tif(!ch[u][c]) ch[u][c]=++tot;\n\t\tu=ch[u][c];\n\t}\n\tbo[u]=true;\n}\ninline void get_next(){\n\tfor(int i=0;i<10;i++)\n\t  ch[0][i]=1;\n\tnext[1]=0,que[1]=1;\n\tfor(int l=1,r=1;l<=r;l++){\n\t\tint u=que[l];\n\t\tfor(int i=0;i<10;i++){\n\t\t\tif(!ch[u][i]) ch[u][i]=ch[next[u]][i];\n\t\t\telse{\n\t\t\t\tque[++r]=ch[u][i];\n\t\t\t\tnext[ch[u][i]]=ch[next[u]][i];\n\t\t\t}\n\t\t}\n\t}\n}\nint dfs(int pos,int ch_pos,bool down,bool qiandaoling){\n\tif(pos>lenn) return !qiandaoling;\n\tif(down && ~f[pos][ch_pos]) return f[pos][ch_pos];\n\tint end=down?9:sn[pos]-'0',res=0;\n\tfor(int i=0;i<=end;i++){\n\t\tif(qiandaoling){\n\t\t\tif(!bo[ch[1][i]])\n\t\t\t  res=(res+dfs(pos+1,ch[1][i],down || i!=end,qiandaoling && i==0))%p;\n\t\t}\n\t\telse{\n\t\t\tif(!bo[ch[ch_pos][i]])\n\t\t\t  res=(res+dfs(pos+1,ch[ch_pos][i],down || i!=end,false))%p;\n\t\t}\n\t}\n\tif(down && !qiandaoling) f[pos][ch_pos]=res;\n    return res;\n}\nsigned main(){\n\tscanf(\"%s\",sn+1);\n\tlenn=strlen(sn+1);\n\tscanf(\"%lld\",&m);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%s\",s);\n\t\tinsert(s);\n\t}\n\tget_next();\n\tfor(int i=1;i<=tot;i++)\n\t  bo[que[i]]=bo[que[i]] || bo[next[que[i]]];\n    //\u5229\u7528\u961f\u5217\u91cc\u7684\u6b8b\u7559\u6570\u636e\n\tmemset(f,-1,sizeof(f));\n\tprintf(\"%lld\\n\",dfs(1,1,false,true));\n\treturn 0;\n}\n```",
        "postTime": 1556929794,
        "uid": 115351,
        "name": "\u03c9\u03b1\u03b7g",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3311 \u3010[SDOI2014]\u6570\u6570\u3011"
    },
    {
        "content": "AC\u81ea\u52a8\u673a\u4e0a\u7684dp\n\nf[i][j]\u8868\u793a\u5f53\u524d\u8ba1\u7b97\u5230\u7b2ci\u4f4d\uff0c\u5728trie\u6811\u4e0a\u8dd1\u5230\u4e86\u7b2cj\u4f4d\u7684\u5e78\u8fd0\u6570\u5b57\u7684\u4e2a\u6570\n\n\u7531\u4e8e\u8fd9\u9053\u9898\u591a\u4e86\u4e00\u4e2a\u4e0d\u80fd\u5927\u4e8eN\u7684\u9650\u5236 \u6211\u4eec\u53ef\u4ee5\u628aDP\u6570\u7ec4\u5f00\u6210\u8fd9\u6837\n\nf[0][i][j]\u8868\u793a\u5f53\u524d\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u6570\u9700\u8981\u53d7\u5230\u9650\u5236\uff08\u4e5f\u5c31\u662f\u4e0d\u80fd\u8d85\u8fc7\u6240\u7ed9\u6574\u6570\u7684\u8fd9\u4e00\u4f4d\uff09\n\nf[1][i][j]\u8868\u793a\u5f53\u524d\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u6570\u4e0d\u9700\u8981\u53d7\u5230\u9650\u5236\uff08\u4e4b\u524d\u5df2\u7ecf\u6709\u4e00\u4f4d\u5c0f\u4e8e\u6240\u7ed9\u6574\u6570\u7684\u5bf9\u5e94\u4f4d\u7f6e\uff09\n\n\u5728\u679a\u4e3ef[0][i][j]\u7684\u65f6\u5019\u5982\u679c\u8fd9\u4e00\u4f4d\u7684\u6570\u5b57\u6bd4\u6240\u7ed9\u6570\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u7684\u6570\u5b57\u5c0f\u5c31\u53ef\u4ee5\u8f6c\u79fb\u5230f[1][i][j]\n\n\u7136\u540e\u5728\u81ea\u52a8\u673a\u4e0a\u8dd1\u4e00\u904d\u5c31\u884c\u4e86(\u4e0d\u4f1aAC\u81ea\u52a8\u673a\u7684\u8bf7\u5148\u638c\u63e1AC\u81ea\u52a8\u673a\n\n\u4ee3\u7801\u5982\u4e0b\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\nlong long f[2][1210][1600];\nlong long ans;\nconst int mo=1000000007;\nvoid add(long long &a,long long b)\n{\n    a+=b;\n    if(a>=mo)\n    a%=mo;\n}\nstruct si{\n    char s[1600];\n    struct st{\n        int next[10];\n        int fail,cnt;\n    }ac[1600];\n    int size;\n    queue<int>q;\n    void init()\n    {\n        memset(ac,0,sizeof(ac));\n    }\n    void insert(char *s)\n    {\n        int now=0,len=strlen(s);\n        for(int i=0;i<len;i++)\n        {\n            int v=s[i]-'0';\n            if(!ac[now].next[v]) ac[now].next[v]=++size;\n            now=ac[now].next[v];\n        }\n        ac[now].cnt++;\n    }\n    void build_fail()\n    {\n        for(int i=0;i<10;i++)\n        if(ac[0].next[i])\n        q.push(ac[0].next[i]);\n        while(!q.empty())\n        {\n            int u=q.front();\n            q.pop();\n            for(int i=0;i<10;i++)\n            {\n                if(!ac[u].next[i])    \n                {\n                    ac[u].next[i]=ac[ac[u].fail].next[i];\n                    continue; \n                }\n                int v=ac[u].fail;\n                ac[ac[u].next[i]].fail=ac[v].next[i];\n                ac[ac[u].next[i]].cnt|=ac[ac[v].next[i]].cnt;\n                q.push(ac[u].next[i]);\n            }\n        }\n    }\n    void build()\n    {\n        init();\n        int m;\n        scanf(\"%d\",&m);\n        for(int i=1;i<=m;i++)\n        scanf(\"%s\",s),\n        insert(s);\n        build_fail();\n    }\n}aho;\nchar c[1400];\nvoid dp()\n{\n    int len=strlen(c+1);\n    for(int i=0;i<len;i++)\n    for(int j=0;j<=aho.size;j++)\n    {\n        if(f[0][i][j])\n        {\n            int u=c[i+1]-'0';\n            for(int k=0;k<u;k++)\n            {\n                int aim=aho.ac[j].next[k];\n                if(!aho.ac[aim].cnt) add(f[1][i+1][aim],f[0][i][j]);\n            }\n            int aim=aho.ac[j].next[u];\n            if(!aho.ac[aim].cnt) add(f[0][i+1][aim],f[0][i][j]);\n        }\n        if(f[1][i][j])\n        {\n            for(int k=0;k<10;k++)\n            {\n                int aim=aho.ac[j].next[k];\n                if(!aho.ac[aim].cnt) add(f[1][i+1][aim],f[1][i][j]);\n            }\n        }\n        if(!j)\n        {\n            if(!i)\n            {\n                int u=c[i+1]-'0';\n                for(int k=1;k<u;k++)\n                {\n                    int aim=aho.ac[j].next[k];\n                    if(!aho.ac[aim].cnt) add(f[1][i+1][aim],1);\n                }\n                int aim=aho.ac[j].next[u];\n                if(!aho.ac[aim].cnt) add(f[0][i+1][aim],1);\n            }\n            else\n            {\n                for(int k=1;k<10;k++)\n                {\n                    int aim=aho.ac[j].next[k];\n                    if(!aho.ac[aim].cnt) add(f[1][i+1][aim],1);\n                }\n            }\n        }\n    }\n    for(int i=0;i<=aho.size;i++)\n    {\n        add(ans,f[0][len][i]);\n        add(ans,f[1][len][i]);\n    }\n    ans=(ans+mo)%mo;\n    printf(\"%I64d\",ans);\n}\nvoid init()\n{\n    scanf(\"%s\",c+1);\n    aho.build();\n    dp();\n}\nint main()\n{\n    init();\n } \n\n```",
        "postTime": 1487673923,
        "uid": 17828,
        "name": "revenger",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3311 \u3010[SDOI2014]\u6570\u6570\u3011"
    },
    {
        "content": "\u770b\u5230\u8fd9\u9053\u9898\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u4ee5\u4e0bAC\u81ea\u52a8\u673a\u4e0a\u7684dp\u65b9\u7a0b\uff1a\n```cpp\n/**\n\tf[0][i][j]\u8868\u793a\u8be5\u4f4d\u4e0d\u53d7\u9650\u5236\uff0cAC\u81ea\u52a8\u673a\u8282\u70b9\u4e3ai\uff0c\u5339\u914d\u5230\u4e86\u7b2cj\u4f4d\u7684\u65b9\u6848\u6570\n\tf[1][i][j]\u8868\u793a\u8be5\u4f4d\u53d7\u9650\u5236\uff0cAC\u81ea\u52a8\u673a\u8282\u70b9\u4e3ai\uff0c\u5339\u914d\u5230\u4e86\u7b2cj\u4f4d\u7684\u65b9\u6848\u6570\n\tf[2][i][j]\u8868\u793a\u8be5\u4f4d\u4ee5\u53ca\u4e4b\u524d\u90fd\u662f\u524d\u5bfc\u96f6, \n    \n    \u56e0\u800c\u6709\uff1a\n\tfor(int nx=0;nx<10;++nx)\n\t\tf[0][i][j]->f[0][c[i][nx]][j+1]\n\t\t\n\tfor(int nx=0;nx<N[j];++nx)\n\t\tf[1][i][j]->f[0][c[i][nx]][j+1]\n\tf[1][i][j]->f[1][c[i][nx nx==N[j] ][j+1]\n\t\n*/\n```\n\u4f46\u8fd9\u6837\u53ea\u80fd\u5f97\u523080\u5206\uff0c\u4f1aWa\u4e24\u4e2a\u70b9\n\u8fd9\u662f\u4e3a\u4ec0\u4e48\uff1f\u6211\u4eec\u53ef\u4ee5\u770b\u4e00\u770b\u6570\u636e\uff1a\n```cpp\n0821463255\n0383320100380\n001153611528\n066512243919\n0321614037728\n0835268196243\n\n\n\uff084.in\uff09\n```\n\u8fd9\u65f6835268196243XXXXX\u5728AC\u81ea\u52a8\u673a\u4e0a\u7684\u8def\u5f84\u4e3a0-8-3-5...\n\u8fd9\u672c\u6765\u662f\u4e00\u7ec4\u53ef\u884c\u89e3\uff0c\u4f46\u56e0\u4e3a\u9519\u8bef\u5730\u8003\u8651\u4e86\u524d\u5bfc\u96f6\u800c\u6392\u9664\u4e86\n\u56e0\u800c\u6211\u4eec\u9700\u8981\u91cd\u65b0\u8bbe\u8ba1\u65b9\u7a0b\uff1a\n```cpp\n/**\n\tf[0][i][j]\u8868\u793a\u8be5\u4f4d\u4e0d\u53d7\u9650\u5236\uff0cAC\u81ea\u52a8\u673a\u8282\u70b9\u4e3ai\uff0c\u5339\u914d\u5230\u4e86\u7b2cj\u4f4d\u7684\u65b9\u6848\u6570\n\tf[1][i][j]\u8868\u793a\u8be5\u4f4d\u53d7\u9650\u5236\uff0cAC\u81ea\u52a8\u673a\u8282\u70b9\u4e3ai\uff0c\u5339\u914d\u5230\u4e86\u7b2cj\u4f4d\u7684\u65b9\u6848\u6570\n\tf[2][i][j]\u8868\u793a\u8be5\u4f4d\u4ee5\u53ca\u4e4b\u524d\u90fd\u662f\u524d\u5bfc\u96f6, AC\u81ea\u52a8\u673a\u8282\u70b9\u4e3ai\uff0c\u5339\u914d\u5230\u4e86\u7b2cj\u4f4d\u7684\u65b9\u6848\u6570\n    \u5219\u6709\u8f6c\u79fb\uff1a\n\tfor(int nx=0;nx<10;++nx)\n\t\tf[0][i][j]->f[0][c[i][nx]][j+1]\n\t\t\n\tfor(int nx=0;nx<N[j];++nx)\n\t\tf[1][i][j]->f[0][c[i][nx]][j+1]\n\tf[1][i][j]->f[1][c[i][nx nx==N[j] ][j+1]\n\t\n\tf[1][0][0]->f[2][0][1] nx==0\n\tf[1][0][0]->f[0][c[0][nx]][1] nx!=0\n\t\n\tf[2][0][j]->f[2][0][j+1] nx==0\n\tf[2][0][j]->f[0][c[0][i][j+1]\n*/\n```\n\u8fd9\u6837\u5c31\u80fdAC\u4e86\n\n80pts Ver:\n```cpp\n#include <bits/stdc++.h>\n/*80*/\nusing namespace std;\n//defs==============================\nconst int mod=1e9+7,MAXP=1700,MAXN=1300;\nint M;\nchar N[MAXN],p[MAXN];int Nlen;\nlong long ans;\nbool tot0;\n//AC==========================================\nint c[MAXP][10],val[MAXP],fail[MAXP],cnt,_rt=0;\nbool is_tot0(char *s) {\n\tint len=strlen(s);\n\tfor(int i=0;i<len;++i) if(s[i]!='0')\treturn false;\n\treturn true;\n}\nvoid ins(char *s) {\n\tint len=strlen(s),now=_rt;\n\tfor(int i=0;i<len;++i) {\n\t\tint v=s[i]-'0';\n\t\tif(!c[now][v])\tc[now][v]=++cnt;\n\t\tnow=c[now][v];\n\t}\n\t++val[now];\n}\nvoid build_fail() {\n\tqueue<int> q;\n\tfor(int i=0;i<10;++i)\tif(c[0][i])\tq.push(c[0][i]);\n\twhile(!q.empty()) {\n\t\tint u=q.front();q.pop();\n\t\tfor(int i=0;i<10;++i)\n\t\t\tif(c[u][i])\tfail[c[u][i]]=c[fail[u]][i],val[c[u][i]]+=val[fail[c[u][i]]],q.push(c[u][i]);\n\t\t\telse\tc[u][i]=c[fail[u]][i];\n\t}\n}\n//dp======================\nint f[2][MAXP][MAXN];\n/*\n\tf[0][i][j]\u8868\u793a\u8be5\u4f4d\u4e0d\u53d7\u9650\u5236\uff0cAC\u81ea\u52a8\u673a\u8282\u70b9\u4e3ai\uff0c\u5339\u914d\u5230\u4e86\u7b2cj\u4f4d\u7684\u65b9\u6848\u6570\n\tf[1][i][j]\u8868\u793a\u8be5\u4f4d\u53d7\u9650\u5236\uff0cAC\u81ea\u52a8\u673a\u8282\u70b9\u4e3ai\uff0c\u5339\u914d\u5230\u4e86\u7b2cj\u4f4d\u7684\u65b9\u6848\u6570\n\tf[2][i][j]\u8868\u793a\u8be5\u4f4d\u4ee5\u53ca\u4e4b\u524d\u90fd\u662f\u524d\u5bfc\u96f6, \n\tfor(int nx=0;nx<10;++nx)\n\t\tf[0][i][j]->f[0][c[i][nx]][j+1]\n\t\t\n\tfor(int nx=0;nx<N[j];++nx)\n\t\tf[1][i][j]->f[0][c[i][nx]][j+1]\n\tf[1][i][j]->f[1][c[i][nx nx==N[j] ][j+1]\n\t\n\tf[1][0][0]->f[2][0][1] nx==0\n\tf[1][0][0]->f[0][c[0][nx]][1] nx!=0\n\t\n\tf[2][0][j]->f[2][0][j+1] nx==0\n\tf[2][0][j]->f[0][c[0][i][j+1]\n\t\n*/\nint vis[2][MAXP][MAXN];\nvoid pp(int i,int j,int k) {\n//\tprintf(\"f[%d][%d][%d]=%d\\n\",i,j,k,f[i][j][k]);\n}\n//main================================= \nint main() {\n\tscanf(\"%s\",N+1);Nlen=strlen(N+1);\n\tscanf(\"%d\",&M);\n\tfor(int i=1;i<=M;++i) scanf(\"%s\",p),ins(p),tot0|=is_tot0(p);\n\tbuild_fail();\n\t//for(int i=0;i<=cnt;++i)\n\t//\tprintf(\"id=%d 0=%d 1=%d 2=%d 3=%d 4=%d val=%d fail=%d\\n\",i,c[i][0],c[i][1],c[i][2],c[i][3],c[i][4],val[i],fail[i]);\n\tvis[1][0][0]=f[1][0][0]=1;\n\tfor(int j=0;j<Nlen;++j){\n\t\tfor(int i=0;i<=cnt;++i) {\n\t\t\tfor(int limit=0;limit<=1;++limit) {\n\t\t\t\tif(!vis[limit][i][j])\tcontinue;\n\t\t\t//\tprintf(\"from (%d,%d,%d)\\n\",limit,i,j);\n\t\t\t\tif(limit==0) {\n\t\t\t\t\t//puts(\"limit=0\");\n\t\t\t\t\tfor(int nx=0;nx<10;++nx)\n\t\t\t\t\t\tif(!val[c[i][nx]])\n\t\t\t\t\t\t\t(f[0][c[i][nx]][j+1]+=f[0][i][j])%=mod,vis[0][c[i][nx]][j+1]=true,pp(0,c[i][nx],j+1);\n\t\t\t\t} else {\n\t\t\t\t\t//puts(\"limit=1\");\n\t\t\t\t\tfor(int nx=0;nx<N[j+1]-'0';++nx)\n\t\t\t\t\t\tif( /*!(j==0&&nx==0) &&*/ !val[c[i][nx]])\n\t\t\t\t\t\t\t(f[0][c[i][nx]][j+1]+=f[1][i][j])%=mod,vis[0][c[i][nx]][j+1]=true,pp(0,c[i][nx],j+1);\n\t\t\t\t\tif(!val[c[i][ N[j+1]-'0' ]]) {\n\t\t\t\t\t\t(f[1][c[i][ N[j+1]-'0' ]][j+1]+=f[1][i][j])%=mod;\n\t\t\t\t\t\tvis[1][ c[i][ N[j+1]-'0' ] ][j+1]=true;\n\t\t\t\t\t\t//puts(\"special\");\n\t\t\t\t\t\tpp(1,c[i][N[j+1]-'0'],j+1);\t\t\t\t\t\t\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=0;i<=cnt;++i) {\n\t\t(ans+=f[0][i][Nlen])%=mod;\n\t\t(ans+=f[1][i][Nlen])%=mod;\n\t}\n\tif(tot0)\n\t\tprintf(\"%lld\\n\",ans);\n\telse\n\t\tprintf(\"%lld\\n\",ans-1);\n\treturn 0;\n}\n```\n\n\n100pts Ver\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n//defs==============================\nconst int mod=1e9+7,MAXP=1700,MAXN=1300;\nint M;\nchar N[MAXN],p[MAXN];int Nlen;\nlong long ans;\nbool tot0;\n//AC==========================================\nint c[MAXP][10],val[MAXP],fail[MAXP],cnt,_rt=0;\nbool is_tot0(char *s) {\n\tint len=strlen(s);\n\tfor(int i=0;i<len;++i) if(s[i]!='0')\treturn false;\n\treturn true;\n}\nvoid ins(char *s) {\n\tint len=strlen(s),now=_rt;\n\tfor(int i=0;i<len;++i) {\n\t\tint v=s[i]-'0';\n\t\tif(!c[now][v])\tc[now][v]=++cnt;\n\t\tnow=c[now][v];\n\t}\n\t++val[now];\n}\nvoid build_fail() {\n\tqueue<int> q;\n\tfor(int i=0;i<10;++i)\tif(c[0][i])\tq.push(c[0][i]);\n\twhile(!q.empty()) {\n\t\tint u=q.front();q.pop();\n\t\tfor(int i=0;i<10;++i)\n\t\t\tif(c[u][i])\tfail[c[u][i]]=c[fail[u]][i],val[c[u][i]]+=val[fail[c[u][i]]],q.push(c[u][i]);\n\t\t\telse\tc[u][i]=c[fail[u]][i];\n\t}\n}\n//dp======================\nint f[3][MAXP][MAXN];\n/*\n\tf[0][i][j]\u8868\u793a\u8be5\u4f4d\u4e0d\u53d7\u9650\u5236\uff0cAC\u81ea\u52a8\u673a\u8282\u70b9\u4e3ai\uff0c\u5339\u914d\u5230\u4e86\u7b2cj\u4f4d\u7684\u65b9\u6848\u6570\n\tf[1][i][j]\u8868\u793a\u8be5\u4f4d\u53d7\u9650\u5236\uff0cAC\u81ea\u52a8\u673a\u8282\u70b9\u4e3ai\uff0c\u5339\u914d\u5230\u4e86\u7b2cj\u4f4d\u7684\u65b9\u6848\u6570\n\tf[2][i][j]\u8868\u793a\u8be5\u4f4d\u4ee5\u53ca\u4e4b\u524d\u90fd\u662f\u524d\u5bfc\u96f6, \n\tfor(int nx=0;nx<10;++nx)\n\t\tf[0][i][j]->f[0][c[i][nx]][j+1]\n\t\t\n\tfor(int nx=0;nx<N[j];++nx)\n\t\tf[1][i][j]->f[0][c[i][nx]][j+1]\n\tf[1][i][j]->f[1][c[i][nx nx==N[j] ][j+1]\n\t\n\tf[1][0][0]->f[2][0][1] nx==0\n\tf[1][0][0]->f[0][c[0][nx]][1] nx!=0\n\t\n\tf[2][0][j]->f[2][0][j+1] nx==0\n\tf[2][0][j]->f[0][c[0][i]][j+1] nx!=0\n\t\n*/\nint vis[3][MAXP][MAXN];\nvoid pp(int i,int j,int k) {\n\t//printf(\"f[%d][%d][%d]=%d\\n\",i,j,k,f[i][j][k]);\n}\ninline void add(int &a,int b) {\n\t(a+=b)%=mod;\n}\n//main================================= \nint main() {\n\tscanf(\"%s\",N+1);Nlen=strlen(N+1);\n\tscanf(\"%d\",&M);\n\tfor(int i=1;i<=M;++i) scanf(\"%s\",p),ins(p),tot0|=is_tot0(p);\n\tbuild_fail();\n\t//for(int i=0;i<=cnt;++i)\n\t//\tprintf(\"id=%d 0=%d 1=%d 2=%d 3=%d 4=%d val=%d fail=%d\\n\",i,c[i][0],c[i][1],c[i][2],c[i][3],c[i][4],val[i],fail[i]);\n\tvis[1][0][0]=f[1][0][0]=1;\n\tfor(int j=0;j<Nlen;++j){\n\t\tfor(int i=0;i<=cnt;++i) {\n\t\t\tfor(int limit=0;limit<=2;++limit) {\n\t\t\t\tif(!vis[limit][i][j])\tcontinue;\n\t\t\t\tif(limit==0) {\n\t\t\t\t\tfor(int nx=0;nx<10;++nx)\n\t\t\t\t\t\tif(!val[c[i][nx]])\n\t\t\t\t\t\t\tadd(f[0][c[i][nx]][j+1],f[0][i][j]),vis[0][c[i][nx]][j+1]=true,pp(0,c[i][nx],j+1);\n\t\t\t\t} else if(limit==1){\n\t\t\t\t\tfor(int nx=(j==0);nx<N[j+1]-'0';++nx)\n\t\t\t\t\t\tif(!val[c[i][nx]]) {\n\t\t\t\t\t\t\tadd(f[0][c[i][nx]][j+1],f[1][i][j]);\n\t\t\t\t\t\t\tvis[0][c[i][nx]][j+1]=true;\n\t\t\t\t\t\t\tpp(0,c[i][nx],j+1);\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\tif(j==0){\n\t\t\t\t\t\tadd(f[2][0][1],f[1][0][0]);\t\n\t\t\t\t\t\tvis[2][0][1]=true;\n\t\t\t\t\t\tpp(2,0,1);\n\t\t\t\t\t}\n\t\t\t\t\tif(!val[c[i][ N[j+1]-'0' ]]) {\n\t\t\t\t\t\tadd(f[1][  c[i][ N[j+1]-'0'  ]][j+1],f[1][i][j]);\n\t\t\t\t\t\tvis[1][ c[i][ N[j+1]-'0' ] ][j+1]=true;\n\t\t\t\t\t\tpp(1,c[i][N[j+1]-'0'],j+1);\t\t\t\t\t\t\n\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t} else if(limit==2) {\n\t\t\t\t\tadd(f[2][0][j+1],f[2][0][j]);\n\t\t\t\t\tvis[2][0][j+1]=1;\n\t\t\t\t\tpp(2,0,j+1);\n\t\t\t\t\tfor(int nx=1;nx<10;++nx)\n\t\t\t\t\t\tif(!val[c[i][nx]]) {\n\t\t\t\t\t\t\tadd(f[0][c[i][nx]][j+1],f[2][0][j]);\n\t\t\t\t\t\t\tvis[0][c[i][nx]][j+1]=true;\n\t\t\t\t\t\t\tpp(0,c[i][nx],j+1);\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=0;i<=cnt;++i) {\n\t\t(ans+=f[0][i][Nlen])%=mod;\n\t\t(ans+=f[1][i][Nlen])%=mod;\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1531812624,
        "uid": 20565,
        "name": "wzj423",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3311 \u3010[SDOI2014]\u6570\u6570\u3011AC\u81ea\u52a8\u673a-dp"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3311)\n\n[\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://chenyu-w.github.io/2022/07/07/P3311%E6%95%B0%E6%95%B0/)\n\n## \u524d\u8a00\n\nACAM + \u6570\u4f4d DP \u597d\u9898\u3002\n\n### \u524d\u7f6e\u829d\u58eb\n\nACAM\uff0c\u6570\u4f4d DP\n\n## \u5206\u6790\n\n\u770b\u5230\u8fd9\u4e2a\u9898\u76ee\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u5148\u628a ACAM \u7ed9\u5efa\u51fa\u6765\uff0c\u7136\u540e\u6211\u4eec\u5728 Trie \u56fe\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u591a\u7ef4\u62a4\u4e00\u4e2a $ed$ \u503c\uff0c\u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u662f\u5426\u4e3a\u4e00\u4e2a\u6a21\u5f0f\u4e32\u7684\u7ed3\u5c3e\u3002\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\uff0c\u5728\u5efa\u7acb ACAM \u7684\u65f6\u5019\uff0c\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u7684 $fail$ \u6307\u9488\u6307\u5411\u7684\u8282\u70b9\u7684 $ed$ \u503c\u4e3a\u771f\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8282\u70b9\u7684 $ed$ \u503c\u4e5f\u4e3a\u771f\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u5efa\u7acb ACAM \u7684\u6b65\u9aa4\u3002\n\n\u4e0b\u4e00\u6b65\u4e3a\u6570\u4f4d DP\uff0c\u6211\u91c7\u7528\u7684\u662f\u8bb0\u5fc6\u5316\u641c\u7d22\u7684\u5199\u6cd5\uff0c\u8bbe $f[pos][p]$ \u8868\u793a\u8fd8\u5269 $pos$ \u4f4d\uff0c\u5728 ACAM \u4e0a\u5f53\u524d\u8d70\u5230\u7684\u8282\u70b9\u4e3a $p$ \u7684\u65f6\u5019\u7684\u5408\u6cd5\u65b9\u6848\uff0c\u76f4\u63a5\u5957\u4e0a\u6570\u4f4d DP \u677f\u5b50\u5373\u53ef\uff0c\u4e0d\u8fc7\u8fd9\u91cc\u8981\u6ce8\u610f\uff0c\u5339\u914d\u8fc7\u7a0b\u4e00\u65e6\u51fa\u73b0\u5f53\u524d\u8282\u70b9\u7684 $ed$ \u503c\u4e3a\u771f\uff0c\u90a3\u4e48\u76f4\u63a5\u8fd4\u56de\uff0c\u6700\u540e\u6ce8\u610f\u4e00\u4e0b\u524d\u5bfc\u96f6\u7684\u5224\u65ad\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n```c++\n#include <bits/stdc++.h>\n\nusing namespace std;\nconst int N = 1510, mod = 1e9 + 7;\nint t[N][10], fail[N], ed[N], idx;\nchar s[N], S[N];\nint f[N][N];\nint a[N];\n\ninline void insert()\n{\n    int p = 0;\n    for (int i = 1; s[i]; i++)\n    {\n        int c = s[i] - '0';\n        if (!t[p][c]) t[p][c] = ++idx;\n        p = t[p][c];\n    }\n    ed[p] = true;\n}\n\ninline void build()\n{\n    queue<int> q;\n    for (int i = 0; i < 10; i++)\n        if (t[0][i])\n            q.push(t[0][i]);\n    while (q.size())\n    {\n        int p = q.front();\n        q.pop();\n        for (int i = 0; i < 10; i++)\n        {\n            int c = t[p][i];\n            if (!c) t[p][i] = t[fail[p]][i];\n            else\n            {\n                fail[c] = t[fail[p]][i];\n                ed[c] |= ed[fail[c]];\n                q.push(c);\n            }\n        }\n    }\n}\n\ninline int dfs(int pos, int p, bool lead, bool lim)\n{\n    if (ed[p]) return 0;\n    if (!pos) return !lead;\n    if (!lim && !lead && ~f[pos][p]) return f[pos][p];\n    int up = lim ? a[pos] : 9;\n    int res = 0;\n    for (int i = 0; i <= up; i++)\n        res = (res + dfs(pos - 1, (lead && !i) ? 0 : t[p][i], lead && !i, lim && i == up)) % mod;\n    if (!lim && !lead) f[pos][p] = res;\n    return res;\n}\n\ninline int solve()\n{\n    memset(f, -1, sizeof f);\n    int len = strlen(S + 1);\n    for (int i = 1; i <= len; i++)  \n        a[len - i + 1] = S[i] - '0';\n    return dfs(len, 0, 1, 1);\n}\n\nint main()\n{\n    scanf(\"%s\", S + 1);\n    int n;\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++)\n    {\n        scanf(\"%s\", s + 1);\n        insert();\n    }\n    build();\n    printf(\"%d\\n\", solve());\n    return 0;\n}\n```\n\n",
        "postTime": 1657180660,
        "uid": 587248,
        "name": "wcywcywcywcy",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011P3311"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u6ca1\u6709\u4eba\u7528\u6211\u8fd9\u79cd\u795e\u79d8\u505a\u6cd5\uff08\n\n\u5bf9\u4e8e\u8fd9\u79cd\u95ee\u9898\uff0c\u6211\u4eec\u628a\u6574\u4e2a\u5b57\u7b26\u4e32\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff1a\u524d\u7f00\u9876\u7740\u6700\u9ad8\u4f4d\u548c\u540e\u7f00\u6ca1\u6709\u9876\u7740\u6700\u9ad8\u4f4d\u3002\n\n\u6211\u4eec\u679a\u4e3e\u8fd9\u4e2a\u524d\u7f00\uff0c\u7136\u540e\u540e\u7f00\u901a\u8fc7 DP \u6765\u641e\u5b9a\u3002\n\n\u4e0d\u5305\u542b\u4efb\u4f55\u4e00\u4e2a\u5b50\u4e32\uff0c\u4f3c\u4e4e\u6700\u6709\u529b\u7684\u5904\u7406\u5de5\u5177\u5c31\u662f ACAM\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u8fd9\u4e2a DP \u7684\u72b6\u6001\uff1a$dp[k][u]$ \u8868\u793a\u4ece\u81ea\u52a8\u673a\u7684\u8282\u70b9 $u$ \u4e0a\u8d70 $k$ \u6761\u8fb9\u90fd\u9047\u4e0d\u4e0a\u88ab\u6807\u8bb0\u70b9\u7684\u65b9\u6848\u6570\u3002\n\n\u8f6c\u79fb\uff1a$dp[k][u]$ \u4ece $dp[k-1][trans[u][c]]$ \u8f6c\u79fb\u8fc7\u6765\u5c31\u597d\u4e86\u3002\n\n\u4f46\u662f\u8fd9\u6837\u4f1a\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u679a\u4e3e\u51fa\u6765\u7684\u6b63\u6574\u6570\u542b\u6709\u524d\u5bfc $0$\u3002\n\n\u8003\u8651\u52a0\u4e0a\u88ab\u5224\u65ad\u6210\u4e0d\u5408\u6cd5\u7684\u65b9\u6848\u3002\u6211\u4eec\u679a\u4e3e\u524d\u5bfc $0$ \u7684\u6570\u91cf\uff0c\u7136\u540e\u5c06\u6b63\u6574\u6570\u5206\u4e3a\u56db\u7c7b\uff1a\n```cpp\n//\u52a0\u524d\u5bfc0\u5408\u6cd5 / \u4e0d\u52a0\u524d\u5bfc0\u5408\u6cd5     - a\n//\u52a0\u524d\u5bfc0\u5408\u6cd5 / \u4e0d\u52a0\u524d\u5bfc0\u4e0d\u5408\u6cd5   - b=0\n//\u52a0\u524d\u5bfc0\u4e0d\u5408\u6cd5 / \u4e0d\u52a0\u524d\u5bfc0\u5408\u6cd5   - c\n//\u52a0\u524d\u5bfc0\u4e0d\u5408\u6cd5 / \u4e0d\u52a0\u524d\u5bfc0\u4e0d\u5408\u6cd5 - d\n```\n\u53ef\u4ee5\u53d1\u73b0\u6211\u4eec\u539f\u672c\u8ba1\u7b97\u7684\u662f $a+b$\uff0c\u4f46\u662f\u6211\u4eec\u9700\u8981\u8ba1\u7b97 $a+c$\u3002\n\n\u679a\u4e3e\u4e86\u524d\u5bfc $0$ \u540e\uff0c\u76f4\u63a5\u51cf\u53bb $a+b$ \u7136\u540e\u52a0\u4e0a $a+c$ \u5c31\u53ef\u4ee5\u4e86\uff08\n\n\u5177\u4f53\u7684\u8bdd\u7ef4\u62a4\u4e00\u4e2a\u8282\u70b9\uff0c\u6bcf\u6b21\u90fd\u5f80 $0$ \u65b9\u5411\u8d70\u5c31\u884c\u4e86\u3002\n```cpp\n#include<cstring>\n#include<cstdio>\n#include<cctype>\ntypedef unsigned ui;\nconst ui M=1505,mod=1e9+7;\nui n,m,tot(1),dp[M][M],fail[M],trans[M][10];bool vis[M];char s[M],S[M];\ninline void Insert(char*s){\n\tui u(1);\n\twhile(isdigit(*s)){\n\t\tconst ui&c=*s-48;*s++=0;\n\t\tif(!trans[u][c])trans[u][c]=++tot;\n\t\tu=trans[u][c];\n\t}\n\tvis[u]=true;\n}\ninline void Build(){\n\tstatic ui L,R,q[M];L=1;\n\tfor(ui c=0;c<10;++c){\n\t\tif(trans[1][c])q[++R]=trans[1][c],fail[trans[1][c]]=1;\n\t\telse trans[1][c]=1;\n\t}\n\twhile(L<=R){\n\t\tconst ui&u=q[L++];\n\t\tfor(ui c=0;c<10;++c){\n\t\t\tif(trans[u][c])q[++R]=trans[u][c],fail[trans[u][c]]=trans[fail[u]][c];\n\t\t\telse trans[u][c]=trans[fail[u]][c];\n\t\t}\n\t}\n\tfor(ui i=1;i<=R;++i)vis[q[i]]|=vis[fail[q[i]]];\n}\nsigned main(){\n\tui ans(0);\n\tscanf(\"%s%u\",s+1,&n);m=strlen(s+1);\n\tfor(ui i=1;i<=n;++i){\n\t\tscanf(\"%s\",S);Insert(S);\n\t}\n\tBuild();\n\tfor(ui u=1;u<=tot;++u)if(!vis[u])dp[0][u]=1;\n\tfor(ui i=1;i<=m;++i){\n\t\tfor(ui u=1;u<=tot;++u)if(!vis[u]){\n\t\t\tfor(ui c=0;c<10;++c)dp[i][u]=(dp[i][u]+dp[i-1][trans[u][c]])%mod;\n\t\t}\n\t}\n\tui u(1),now(1);\n\tfor(ui i=1;i<=m;++i){\n\t\tif(vis[u])break;now=trans[now][0];\n\t\tfor(ui c=0;c<s[i]-48;++c)if(!vis[trans[u][c]])ans=(ans+dp[m-i][trans[u][c]])%mod;\n\t\tif(i!=m)for(ui c=1;c<10;++c)ans=(ans+mod+dp[m-i-1][trans[1][c]]-dp[m-i-1][trans[now][c]])%mod;\n\t\tu=trans[u][s[i]-48];\n\t}\n\tif(!vis[u])++ans,ans==mod&&(ans=0);\n\tprintf(\"%u\",(ans+mod-1)%mod);\n}\n```",
        "postTime": 1647393190,
        "uid": 160839,
        "name": "Prean",
        "ccfLevel": 7,
        "title": "ACAM+DP \u6570\u6570 P3311\u9898\u89e3"
    },
    {
        "content": "### \u8fd9\u662f\u4e00\u7bc7\u8bb0\u5fc6\u5316\u641c\u7d22\u9898\u89e3\n\u4e3b\u8981\u8c08\u8c08\u8fd9\u4e2a\u9898\u7684\u7279\u5224\uff0c\u5f53\u65f6\u5361\u4e86\u6211\u597d\u4e00\u4f1a\n\n\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u9053\u9898\u5e94\u8be5\u662f\u6570\u4f4d DP + AC \u81ea\u52a8\u673a\n\n\u6709\u5173 AC \u81ea\u52a8\u673a\u7684\u5185\u5bb9\u8fd9\u91cc\u4e0d\u518d\u8865\u5145\n\n#### \u975e\u5e38\u5f62\u5f0f\u5316\u5730\uff0c\u6570\u4f4dDP\u7684\u72b6\u6001\u8bbe\u8ba1\uff1a\n$$\nf_{pos,st,flg,zero}\n$$\npos :\u5f53\u524d\u8981\u5904\u7406\u7b2c\u51e0\u4f4d\n\nst :\u7528\u4e8e\u50a8\u5b58\u524d\u9762\u7684\u72b6\u6001\uff0c\u53ef\u80fd\u662f\u4e0a\u4e00\u4e2a\u6570\uff0c\u4e5f\u53ef\u80fd\u662f\u524d\u7f00\u548c\uff0cgcd \u7b49\u7b49\uff0c\u8fd9\u4e2a\u9898\u5e94\u8be5\u662f\u524d\u9762\u5728AC\u81ea\u52a8\u673a\u4e0a\u7684\u4f4d\u7f6e\n\nflg :\u5f53\u524d\u4f4d\u662f\u5426\u88ab\u6240\u6c42\u6570\u9650\u5236\uff0c\u6bd4\u5982\u8981\u6c42\u7684\u662f 114514\uff0c\u800c\u6b64\u65f6\u4f60\u6c42\u4e86\u524d\u4e09\u4f4d\uff0c\u73b0\u5728\u8981\u5904\u7406 114---\uff0c\u8fd9\u6837\u4f60\u7b2c\u56db\u4f4d\u5c31\u53ea\u80fd\u5230 5 \uff0c\u4f46\u5982\u679c\u4f60\u7b2c\u4e09\u4f4d\u662f 3 \u6216\u8005\u66f4\u5c0f\u7684\uff0c\u4f60\u7b2c\u56db\u4f4d\u662f\u591a\u5c11\u5c31\u65e0\u6240\u8c13\u4e86\n\nzero \uff1a\u524d\u9762\u662f\u5426\u6709\u524d\u5bfc\u96f6\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u5f00\u59cb\u8bb0\u5fc6\u5316\u641c\u7d22\u4e86\uff0c\u5177\u4f53\u601d\u8def\u4e5f\u4e0d\u96be\uff0c\u641c\u5230\u4e86\u67d0\u4e00\u4f4d\uff0c\u63a5\u7740\u5411\u4e0b\u641c\uff0c\u5c31\u628a\u65b0\u7684\u4e00\u4f4d\u5728\u81ea\u52a8\u673a\u4e0a\u9762\u8df3\u4e00\u4e0b\uff0c\u5982\u679c\u4e0d\u662f\u67d0\u4e2a\u6a21\u5f0f\u4e32\u7684\u7ed3\u5c3e\u5c31\u53ef\u4ee5\u7ee7\u7eed DFS\n\n\u8df3\u5b8c\u540e\u5230\u4e86\u6700\u540e\u4e00\u4f4d\u53ea\u8981\u4e0d\u662f\u5168\u662f 0 \u90fd\u662f 1 \uff0c\u56e0\u4e3a\u524d\u9762\u5404\u4f4d\u90fd\u5df2\u7ecf\u786e\u5b9a\u4e86\n\n\u6216\u8005\u8bf4\u89e3\u91ca\u4e00\u4e0b DFS \u7684\u542b\u4e49\uff0c\u8fd4\u56de\u5c0f\u4e8e\u7b49\u4e8e\u6240\u6c42\u7684\u6570\uff0c\u6240\u6709\u5c1a\u672a\u786e\u5b9a\u7684\u53ef\u80fd\u60c5\u51b5\u7684\u5e78\u8fd0\u6570\u4e2a\u6570\uff0c\u56e0\u4e3a\u521a\u5f00\u59cb\u5168\u90fd\u4e0d\u786e\u5b9a\u5c31\u4f1a\u662f\u6700\u540e\u7684\u7b54\u6848\uff0c\u5230\u4e86\u6700\u540e\u5168\u90fd\u786e\u5b9a\u4e86\u5c31\u4f1a\u662f 1\n\n#### \u7279\u5224\n\n\u6ce8\u610f\u8fd9\u91cc\u6a21\u5f0f\u4e32\u662f\u53ef\u80fd\u6709\u524d\u5bfc\u96f6\u7684\uff0c\u800c\u5e78\u8fd0\u6570\u4e0d\u5141\u8bb8\u6709\u524d\u5bfc\u96f6\uff0c\u8fd9\u53ef\u80fd\u4f1a\u53d1\u751f\u4ec0\u4e48\u60c5\u51b5\uff0c\u6bd4\u5982\u4f60\u8981\u6c42 114514\uff0c\u4f60\u5904\u7406\u5230\u4e86\u7b2c\u4e09\u4f4d\uff0c\u662f\u4e2a 0023-- \uff0c\u8fd9\u65f6\u4f60\u7684\u6a21\u5f0f\u4e32\u6709\u4e00\u4e2a 0023\uff0c\u90a3\u4e48\u8fd9\u79cd\u60c5\u51b5\u5c31\u4f1a\u88ab\u5224\u65ad\u4e3a\u4e0d\u5408\u6cd5\uff0c\u4f46\u5b9e\u9645\u4e0a\u91cc\u5e94\u8be5\u88ab\u5224\u65ad\u4e3a 23-- \uff0c\u4e0d\u80fd\u770b\u524d\u5bfc\u96f6\uff0c\u5e94\u8be5\u662f\u4e00\u79cd\u5408\u6cd5\u7684\u60c5\u51b5\u3002\u6240\u4ee5\u603b\u7ed3\u4e00\u4e0b\uff0c\u8981\u7279\u5224\u7684\u5c31\u662f\u6a21\u5f0f\u4e32\u6709\u524d\u5bfc\u96f6\u4e14\u5f53\u524d\u6570\u4e5f\u6709\u524d\u5bfc\u96f6\u7684\u60c5\u51b5\n\n\u8fd9\u91cc\u52a0\u4e00\u53e5\u7279\u5224\u5c31\u53ef\u4ee5\n```cpp\nif(zero)st=0;\n```\n\u7136\u540e\u5c31\u53ef\u4ee5\u8d34\u4ee3\u7801\u4e86\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#define rint register int\n#define lint long long\n#define ldouble long double\nusing namespace std;\ninline int read(){\n\tchar c;int res=0,f=1;\n\twhile(c=getchar(),!isdigit(c))if(c=='-')f*=-1;\n\twhile(isdigit(c))res=res*10+c-'0',c=getchar();\n\treturn f*res;\n}\nconst int M=1e2+5,S=15e2+5;\nconst lint mod=1e9+7;\nstring n,s[M];\nint m,len;\nint nxt[S][10],fil[S],cnt=0;\nbool tail[S];\ninline void inst(string str){//\u6784\u5efa\u5b57\u5178\u6811 \n\tint i,j,siz=str.size(); \n\tfor(i=0,j=0;i<siz;++i){\n\t\tint tmp=str[i]-'0';\n\t\tif(!nxt[j][tmp])\n\t\t\tnxt[j][tmp]=++cnt;\n\t\tj=nxt[j][tmp];\n\t}\n\ttail[j]=true;\n}\ninline void gfil(){//\u83b7\u5f97fail\u6307\u9488 \n\tqueue<int> que;\n\tfor(rint i=0;i<10;++i)\n\t\tif(nxt[0][i]){\n\t\t\tfil[nxt[0][i]]=0;\n\t\t\tque.push(nxt[0][i]);\n\t\t}\n\twhile(!que.empty()){\n\t\tint u=que.front();\n\t\tque.pop();\n\t\ttail[u]|=tail[fil[u]];\n\t\tfor(rint i=0;i<10;++i){\n\t\t\tif(nxt[u][i]){\n\t\t\t\tfil[nxt[u][i]]=nxt[fil[u]][i];\n\t\t\t\tque.push(nxt[u][i]);\n\t\t\t}\n\t\t\telse nxt[u][i]=nxt[fil[u]][i];\n\t\t}\n\t}\n}\nlint f[S][S][2][2]={0};\nlint DFS(int x,int st,bool flg,bool zero){//\u5f62\u5f0f\u5316\u7684\u8bb0\u5fc6\u5316\u641c\u7d22 \n\tif(x==len)return !zero;//\u5982\u679c\u4e0d\u662f\u5168\u662f0\u90a3\u4e48\u53ea\u6709\u4e00\u79cd\u786e\u5b9a\u7684\u60c5\u51b5 \n\tif(f[x][st][flg][zero])return f[x][st][flg][zero];\n\tint e=(flg?n[x]-'0':9);//\u770b\u770b\u4e4b\u524d\u7684\u4f4d\u662f\u5426\u8fbe\u5230\u4e0a\u9650 \n\tlint res=0;\n\tif(zero)st=0;\n\tfor(rint i=0;i<=e;++i){\n\t\tif(!tail[nxt[st][i]]){\n\t\t\tres+=DFS(x+1,nxt[st][i],flg&&i==e,zero&&i==0);\n\t\t\t/*\n\t\t\t\u524d\u9762\u9876\u4e86\u4e0a\u9650\u8fd9\u4f4d\u8fd8\u9876\u4e0a\u9650\u90a3\u4e48\u4e0b\u4e00\u4f4d\u5c31\u4f1a\u88ab\u9650\u5236\n\t\t\t\u524d\u9762\u6709\u524d\u5bfc\u96f6\u8fd9\u4e00\u4f4d\u8fd8\u662f0\u610f\u5473\u7740\u8fd8\u6709\u524d\u5bfc\u96f6 \n\t\t\t*/ \n\t\t\tres%=mod;\n\t\t}\n\t}\n\treturn f[x][st][flg][zero]=res;\n}\nint main(){\n\tcin>>n;\n\tlen=n.size();\n\tm=read();\n\tfor(rint i=1;i<=m;++i){\n\t\tcin>>s[i];\n\t\tinst(s[i]);\n\t}\n\tgfil();\n\tprintf(\"%lld\\n\",DFS(0,0,true,true));\n\treturn 0;\n}\n```\n\n",
        "postTime": 1628136538,
        "uid": 206258,
        "name": "SDNetFriend",
        "ccfLevel": 7,
        "title": "P3311\u9898\u89e3"
    },
    {
        "content": "# [SDOI2014]\u6570\u6570\uff08AC\u81ea\u52a8\u673a\uff0c\u52a8\u6001\u89c4\u5212\uff09\n\n\u5199\u9898\u89e3\u524d\u5148\u6cc4\u6124...\u672c\u6765\u89c9\u5f97\u5e94\u8be5\u50cf\u6570\u4f4d`dp`\u4e00\u6837\u641e\u4e00\u4e2a\u5f53\u524d\u662f\u5426\u8fd8\u662f\u524d\u5bfc\u96f6\u7684\u4e00\u7ef4\uff0c\u7531\u4e8e\u5f53\u65f6\u7279\u522b\u56f0\u5bfc\u81f4\u8c03\u4e0d\u4e0b\u53bb\u5c31\u76ef\u7740\u4ee3\u7801\u53d1\u5446\uff0c\u6d6a\u8d39\u65f6\u95f4\u6d6a\u8d39\u751f\u547d[\u5feb\u54ed\u4e86]\n\n\u60f3\u5728\u8fd9\u91cc\u8bf7\u8bf8\u4f4d\u67e5\u4e00\u4e0b\u6211\u7684\u4ee5\u524d\u90a3\u4efd\u9519\u8bef\u7684\u4ee3\u7801qwq\uff0c\u4e5f\u7b97\u662f\u4e3a\u81ea\u5df1\u7559\u5b58\u4e00\u4e0b\u7591\u60d1\uff0c\u4ee5\u540e\u60f3\u5f97\u8d77\u6765\u7ee7\u7eed\u67e5\u3002[code](https://www.luogu.com.cn/paste/wrb8f66w)\n\n## \u9898\u76ee\u53d9\u8ff0\n\n\u7ed9\u4f60\u4e00\u4e2a\u7531\u6570\u5b57\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u8981\u6c42\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7684\u5b50\u4e32\u4e2d\u4e0d\u80fd\u51fa\u73b0\u67d0\u4e9b\u5b57\u7b26\u4e32\uff0c\u5e76\u4e14\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7ec4\u6210\u7684\u6570\u4e0d\u80fd\u6bd4\u67d0\u4e2a\u7ed9\u5b9a\u7684\u6570\u5927\u3002\n\n## \u9898\u89e3\n\n\u8bbe$dp_{i,j,0/1}$\u8868\u793a\u524d$i$\u4f4d\uff0c\u73b0\u5728\u5339\u914d\u5230AC\u81ea\u52a8\u673a\u4e0a\u7684\u7b2c$j$\u4e2a\u70b9\uff0c\u73b0\u5728\u5206\u51fa\u6765/\u6ca1\u5206\u51fa\u5927\u5c0f\u4e00\u5171\u6709\u591a\u5c11\u79cd\u3002\n\n\u8f6c\u79fb\uff1a\n\n+ \u4ece$dp_{i,j,0}$\u5230$dp_{i+1,j,0}$\uff0c\u52a0\u4e86\u4e00\u4f4d\u8fd8\u662f\u538b\u7ebf\uff0c\u8bf4\u660e\u65b0\u52a0\u7684\u4f4d\u8981\u538b\u7ebf\u3002\n+ \u4ece$dp_{i,j,0}$\u5230$dp_{i+1,j,1}$\uff0c\u52a0\u4e86\u4e00\u4f4d\u6ca1\u6709\u538b\u7ebf\uff0c\u8bf4\u660e\u65b0\u52a0\u7684\u4f4d\u4e0d\u80fd\u538b\u7ebf\u3002\n+ \u4ece$dp_{i,j,1}$\u5230$dp_{i+1,j,1}$\uff0c\u8fd9\u4e2a\u8f6c\u79fb\u6ca1\u6709\u9650\u5236\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <queue>\nusing namespace std;\nconst int maxLen = 1205, maxNode = 1505, mod = 1e9 + 7;\nint ch[maxNode][10], dp[maxLen][maxNode][2], fail[maxNode], tot = 1, nbLim;\nbool tag[maxNode];\nchar big[maxLen], lim[maxLen];\nqueue<int> Q;\n//dp[i][0/1][0/1]\u8868\u793a\u524d i\u4f4d\uff0c\u6709\u6ca1\u6709\u5206\u51fa\u5927\u5c0f\uff0c\u5f53\u524d\u8fd8\u662f\u4e0d\u662f\u524d\u5bfc\u96f6 \nvoid Insert(char *str) {\n\tint len = strlen(str + 1), now = 1;\n\tfor (int pos = 1; pos <= len; ++pos) {\n\t\tif (!ch[now][str[pos] - '0'])\n\t\t\tch[now][str[pos] - '0'] = ++tot;\n\t\tnow = ch[now][str[pos] - '0'];\n\t}\n\ttag[now] = 1;\n}\nvoid GetFail() {\n\tfail[1] = 1;\n\tfor (int son = 0; son < 10; ++son) {\n\t\tif (ch[1][son]) {\n\t\t\tfail[ch[1][son]] = 1;\n\t\t\tQ.push(ch[1][son]);\n\t\t} else\n\t\t\tch[1][son] = 1;\n\t}\n\twhile (!Q.empty()) {\n\t\tint now = Q.front();\n\t\tQ.pop();\n\t\tfor (int son = 0; son < 10; ++son) {\n\t\t\tif (ch[now][son]) {\n\t\t\t\tQ.push(ch[now][son]);\n\t\t\t\tfail[ch[now][son]] = ch[fail[now]][son];\n\t\t\t} else\n\t\t\t\tch[now][son] = ch[fail[now]][son];\n\t\t}\n\t}\n}\nvoid Add(int &x, int y) {\n\tx += y, (x > mod) ? x -= mod : x = x;\n}\nvoid Minus(int &x, int y) {\n\tx -= y, (x < 0) ? x += mod : x = x; \n}\nvoid Check() {\n\tfor (int i = 1; i <= tot; ++i) {\n\t\tprintf(\"node : %d fail : %d\\n\", i, fail[i]);\n\t\tfor (int son = 0; son < 10; ++son)\n\t\t\tif (ch[i][son])\n\t\t\t\tprintf(\"\tch : %d son : %d\\n\", son, ch[i][son]);\n\t}\n}\nint main() {\n\tscanf(\"%s%d\", big + 1, &nbLim);\n\tfor (int i = 1; i <= nbLim; ++i) {\n\t\tscanf(\"%s\", lim + 1);\n\t\tInsert(lim);\n\t}\n\tGetFail();\n\tint bigLen = strlen(big + 1);\n\tdp[0][1][0] = 1;\n\tch[1][0] = 1;\n\tfor (int len = 0; len < bigLen; ++len) {\n\t\tfor (int node = 1; node <= tot; ++node) {\n\t\t\tif (tag[node])\n\t\t\t\tcontinue ;\n\t\t\tfor (int son = 0; son < 10; ++son) {\n\t\t\t\tif (tag[ch[node][son]])\n\t\t\t\t\tcontinue ;\n\t\t\t\tAdd(dp[len + 1][ch[node][son]][0], dp[len][node][0] * (son == (big[len + 1] - '0')));\n\t\t\t\tAdd(dp[len + 1][ch[node][son]][1], dp[len][node][1]);\n\t\t\t\tAdd(dp[len + 1][ch[node][son]][1], dp[len][node][0] * (son < (big[len + 1] - '0')));\n\t\t\t}\n\t\t}\n\t}\n\tint ans = 0;\n\tfor (int node = 1; node <= tot; ++node)\n\t\tAdd(ans, dp[bigLen][node][0]), Add(ans, dp[bigLen][node][1]);\n\tMinus(ans, 1);\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```\n\n## \u77e5\u8bc6\u70b9\n\n+ \u56f0\u5f97\u65f6\u5019\u5c31\u8981\u7acb\u523b\u7761\u89c9\uff01\uff01\uff01\uff08\u5c24\u5176\u75ab\u60c5\u671f\u95f4\uff0c\u6709\u6761\u4ef6\u8fd9\u6837\u505a\u3002\u3002\u3002",
        "postTime": 1582986916,
        "uid": 75715,
        "name": "KokiNiwa",
        "ccfLevel": 0,
        "title": "[SDOI2014]\u6570\u6570\uff08AC\u81ea\u52a8\u673a\uff0c\u52a8\u6001\u89c4\u5212\uff09"
    },
    {
        "content": "##AC\u81ea\u52a8\u673a + DP\n\n**\u3010\u89e3\u9898\u601d\u8def\u3011**\n\n\u53c2\u8003[http://blog.csdn.net/Regina8023/article/details/44974979](http://blog.csdn.net/Regina8023/article/details/44974979)\n\n\u5148\u7528 $AC$ \u81ea\u52a8\u673a\u5bf9 $S$ \u96c6\u5408\u7684\u5b57\u7b26\u4e32\u5efa\u7acb $Trie$ \u6811\uff0c\u8bb0\u6570\u7ec4 $nxt$ \u8868\u793a $AC$ \u81ea\u52a8\u673a\u7684\u5931\u8d25\u6307\u9488\uff0c\u6570\u7ec4 $lst[x]$ \u5728\u70b9 $x$ \u8868\u793a\u6cbf\u7740\u5931\u8d25\u6307\u9488\u80fd\u5426\u8d70\u5230\u4e00\u4e2a $S$ \u96c6\u5408\u4e2d\u7684\u4e32\u672b\u5c3e\uff0c\u5982\u6709\u5219\u8bb0\u4e3a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7684\u7f16\u53f7\u3002\n\n\u7136\u540e\u6211\u4eec\u8bb0 $f[i][j][k]$ \u8868\u793a\u5f53\u524d\u5df2\u7ecf\u786e\u5b9a\u5230\u7b2c $i$ \u4f4d\u6570\uff0c\u8d70\u5230 $AC$ \u81ea\u52a8\u673a\u4e0a\u7684\u8282\u70b9 $j$\uff0c\u4e14\u72b6\u6001\u4e3a $k$ \u7684\u603b\u65b9\u6848\u6570\uff08\u56e0\u4e3a\u8981\u5904\u7406\u524d\u5bfc0\u7684\u95ee\u9898\uff0c\u8fd9\u91cc\u7684\u7b2c $i$ \u4f4d\u4ece\u9ad8\u4f4d\u5411\u4f4e\u4f4d\u8ba1\u7b97\uff0c\u5f53\u53d6\u6700\u9ad8\u4f4d\uff0c\u5373 $i = 1$ \u65f6\uff0c\u5e94\u4e0d\u5305\u542b\u53d60\u7684\u65b9\u6848\u6570\uff09\u3002\n\n\u5bf9\u4e8e\u72b6\u6001 $k$\uff0c\u6211\u4eec\u6709\u5982\u4e0b\u5b9a\u4e49\uff1a\n\n[1]. $k = 0$ \u5df2\u7ecf\u786e\u5b9a\u7684 $i$ \u4f4d\u6570\u5c0f\u4e8e $N$ \u7684\u524d $i$\u4f4d\uff1b\n\n[2]. $k = 1$ \u5df2\u7ecf\u786e\u5b9a\u7684 $i$ \u4f4d\u6570\u7b49\u4e8e $N$ \u7684\u524d $i$ \u4f4d\uff1b\n\n[3]. $k = 2$ \u5df2\u7ecf\u786e\u5b9a\u7684 $i$ \u4f4d\u6570\u5927\u4e8e $N$ \u7684\u524d $i$ \u4f4d\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\u5982\u4f55\u8f6c\u79fb\uff1a\u679a\u4e3e\u7b2c $i + 1$ \u4f4d\u9009\u53d6\u7684\u6570\u5b57 $num$\uff0c\u53ef\u4ee5\u5229\u7528\u6211\u4eec\u521a\u624d\u7684 $AC$ \u81ea\u52a8\u673a\u5224\u65ad\uff1a\u8fd9\u6837\u786e\u5b9a\u7684 $i + 1$ \u4f4d\u6570\u5b57\u662f\u5426\u5b58\u5728\u67d0\u4e2a $S$ \u96c6\u5408\u4e2d\u7684\u4e32\u662f\u5b83\u7684\u540e\u7f00\u3002\u5982\u4e0d\u5b58\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u786e\u5b9a $AC$ \u81ea\u52a8\u673a\u4e0a\u7684\u8282\u70b9 $x$\uff0c\u5219 $f[i + 1][x][k\u2019]$ \u5c31\u53ef\u4ee5\u7531 $f[i][j][k]$ \u8f6c\u79fb\u8fc7\u6765\uff0c\u6700\u7ec8\u7684\u8f6c\u79fb\u5982\u4e0b\uff08\u53ef\u7ed3\u5408\u6b64\u65f6\u5df2\u7ecf\u786e\u5b9a\u7684 $i$ \u4f4d\u6570\u4e0e $N$ \u7684\u524d $i$ \u4f4d\u7684\u5927\u5c0f\u5173\u7cfb\u6765\u7406\u89e3\uff09\uff1a\n\n[1]. \u82e5 $num$ \u5c0f\u4e8e $N$ \u7684\u7b2c $i + 1$ \u4f4d\uff1a\n\n$f[i + 1][x][0] += f[i][j][0] + f[i][j][1]$\n\n$f[i + 1][x][2] += f[i][j][2]$\n\n[2]. \u82e5 $num$ \u7b49\u4e8e $N$ \u7684\u7b2c $i + 1$ \u4f4d\uff1a\n\n$f[i + 1][x][0] += f[i][j][0] $\n\n$f[i + 1][x][1] += f[i][j][1]$\n\n$f[i + 1][x][2] += f[i][j][2]$\n\n[3]. \u82e5 $num$ \u5927\u4e8e $N$ \u7684\u7b2c $i + 1$\u4f4d\uff1a\n\n$f[i + 1][x][0] += f[i][j][0]$\n\n$f[i + 1][x][2] += f[i][j][2] + f[i][j][1]$\n\n\u6bcf\u786e\u5b9a\u4e00\u4f4d\u6570\u90fd\u8981\u5c06 $\\sum \\limits^2_{k\u2019 = 0} f[i + 1][j][k\u2019]$ \u7d2f\u52a0\u8fdb\u7b54\u6848 $Ans$\uff0c\u540c\u65f6\u56e0\u4e3a\u5e78\u8fd0\u6570\u4e0d\u80fd\u5927\u4e8e $N$\uff0c\u6240\u4ee5\u6700\u7ec8\u7684\u7b54\u6848\u8fd8\u8981\u51cf\u53bb $\\sum f[n][j][2]$\uff08$n$ \u4e3a\u6570 $N$ \u7684\u4f4d\u6570\uff09\u3002\n\n**\u3010\u4ee3\u7801\u3011**\n\n\n\n\n\n\n \n    \n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\ntypedef long long ll;\nconst int Maxn = 0x3f3f3f3f;\nconst int N = 1505, M = 1205;\nconst ll Mod = 1e9 + 7;\nll f[M][N][3], Ans; \nbool pos[N]; char s[M], a[N]; \nint n, m, T, G[N][10], Q[N], nxt[N], lst[N];\ninline int get()\n{\n    char ch; bool f = false; int res = 0;\n    while (((ch = getchar()) < '0' || ch > '9') && ch != '-');\n    if (ch == '-') f = true;\n     else res = ch - '0';\n    while ((ch = getchar()) >='0' && ch <= '9')\n        res = (res << 3) + (res << 1) + ch - '0';\n    return f? ~res + 1 : res;\n}\ninline void put(int x)\n{\n    if (x < 0)\n      x = ~x + 1, putchar('-');\n    if (x > 9) put(x / 10);\n    putchar(x % 10 + 48);\n}\ninline void Insert()\n{\n    scanf(\"%s\", a + 1); \n    int x = 0, l = strlen(a + 1);\n    for (int i = 1; i <= l; ++i)\n    {\n        int y = a[i] - '0';\n        if (!G[x][y]) G[x][y] = ++T;\n        x = G[x][y]; \n    }\n    pos[x] = true;\n}\ninline void Bfs()\n{\n    int t, w, x, y; t = w = 0; \n    for (int i = 0; i < 10; ++i)\n     if (G[0][i]) Q[++w] = G[0][i];\n    while (t < w)\n    {\n        x = Q[++t];\n        for (int i = 0; i < 10; ++i)\n         if (!G[x][i]) G[x][i] = G[nxt[x]][i];\n         else \n         {\n             Q[++w] = y = G[x][i]; int v = nxt[x];\n            while (!G[v][i] && v) v = nxt[v];\n            nxt[y] = G[v][i];\n            lst[y] = pos[nxt[y]] ? nxt[y] : lst[nxt[y]]; \n         }\n    }\n}\ninline int cmp(const int &x, const int &y)\n{\n    if (x > y) return 2;\n    if (x < y) return 0;\n    return 1; \n}\nint main()\n{\n    scanf(\"%s\", s + 1); \n    n = strlen(s + 1); m = get();\n    while (m--) Insert(); Bfs();\n    for (int i = 1; i < 10; ++i) //\u4e0d\u542b\u524d\u5bfc0 \n    {\n        int x = G[0][i];\n        if (!pos[x] && !lst[x]) f[1][x][cmp(i, s[1] - '0')]++;\n    }\n    for (int i = 0; i <= T; ++i)\n     (Ans += f[1][i][0] + f[1][i][1] + f[1][i][2]) %= Mod;\n    for (int i = 1; i < n; ++i)\n    {\n        for (int j = 0; j <= T; ++j)\n        if (f[i][j][0] || f[i][j][1] || f[i][j][2])\n        for (int k = 0; k < 10; ++k)\n        {\n            int x = j;\n            while (!G[x][k] && x) x = nxt[x];\n            x = G[x][k]; \n            if (pos[x] || lst[x]) continue;\n            int v = cmp(k, s[i + 1] - '0');\n            switch (v)\n            {\n                case 0:\n                  (f[i + 1][x][0] += f[i][j][0] + f[i][j][1]) %= Mod;\n                  (f[i + 1][x][2] += f[i][j][2]) %= Mod; break;\n                case 1:\n                  (f[i + 1][x][0] += f[i][j][0]) %= Mod;\n                  (f[i + 1][x][1] += f[i][j][1]) %= Mod;\n                  (f[i + 1][x][2] += f[i][j][2]) %= Mod; break;\n                case 2:    \n                  (f[i + 1][x][2] += f[i][j][2] + f[i][j][1]) %= Mod;\n                  (f[i + 1][x][0] += f[i][j][0]) %= Mod; break;\n            }\n         }\n         for (int j = 0; j <= T; ++j)\n         {\n             (Ans += f[i + 1][j][0] + f[i + 1][j][1]) %= Mod;\n             if (i + 1 < n) (Ans += f[i + 1][j][2]) %= Mod;\n        }\n    }\n    return put(Ans), 0;\n}\n\n```",
        "postTime": 1500013961,
        "uid": 17952,
        "name": "Log_x",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3311 \u3010[SDOI2014]\u6570\u6570\u3011"
    },
    {
        "content": "\u9898\u76ee\u94fe\u63a5\uff1a[P3311 [SDOI2014] \u6570\u6570](https://www.luogu.com.cn/problem/P3311)\n\n### \u9898\u610f\u6982\u62ec\n\n\u82e5 $x$ \u4e3a\u6b63\u6574\u6570\uff0c\u4e14\u5176\u5728\u5341\u8fdb\u5236\u8868\u793a\u4e0b\u4e0d\u5305\u542b\u7ed9\u5b9a\u6570\u5b57\u4e32\u96c6\u5408 $s$ \u4e2d\u7684\u4efb\u610f\u5143\u7d20\u4f5c\u4e3a\u5b57\u4e32\uff0c\u5219\u79f0 $x$ \u4e3a**\u5e78\u8fd0\u6570**\u3002\u7ed9\u51fa\u96c6\u5408 $s$\uff0c\u4f60\u9700\u8981\u6c42\u51fa\u4e0d\u5927\u4e8e $x$ \u7684\u5e78\u8fd0\u6570\u7684\u4e2a\u6570\u3002\n\n### \u9898\u76ee\u5206\u6790\n\n\u9996\u5148\u770b\u5230 $n\\le 10^{1201}$\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u8003\u8651\u6570\u4f4d DP \u4e86\n\uff08\u5bf9\u4e8e\u8fd9\u6837\u6570\u4f4d DP \u7684\u9898\uff0c\u53ef\u4ee5\u5148\u5199\u4e00\u4e2a DFS \u7684\u66b4\u641c\uff0c\u8c03\u51fa\u6765\u4e4b\u540e\u518d\u52a0\u8bb0\u5fc6\u5316\uff09\u3002\n\n\u5176\u6b21\u770b\u5230\u6709\u591a\u4e2a\u4e0d\u80fd\u5305\u542b\u7684\u6570\u5b57\u4e32\uff0c\u6240\u4ee5\u53ef\u4ee5\u5efa\u4e00\u9897 AC \u81ea\u52a8\u673a\u51fa\u6765\u3002\n\n\u5728\u6b63\u5e38\u5efa\u5b8c AC \u81ea\u52a8\u673a\u4e4b\u540e\uff0c\u6267\u884c\u666e\u901a\u6570\u4f4d DP \u7684\u8fc7\u7a0b\uff0c\u4f46\u662f\u6bcf\u6b21\u9009\u5b9a\u5f53\u524d\u4f4d\u7f6e\u586b\u4ec0\u4e48\u4e4b\u540e\uff0c\u5c31\u8981\u5728 Trie \u6811\u4e0a\u5411\u4e0b\u8d70\u4e00\u6761\u8fb9\uff0c\u5982\u679c\u8d70\u5230\u7684\u8282\u70b9\u662f\u67d0\u4e00\u6570\u5b57\u4e32\u7684\u7ed3\u675f\u4f4d\u7f6e\u6216\u8005\u80fd\u901a\u8fc7 fail \u8fb9\u5230\u8fbe\u7ed3\u675f\u4f4d\u7f6e\uff0c\u5219\u4e0d\u80fd\u5411\u4e0b\u9012\u5f52\u641c\u7d22\u3002\n\n\n### \u9700\u8981\u6ce8\u610f\u7684\u7ec6\u8282\n\n- **AC \u81ea\u52a8\u673a\u4e0d\u8981\u5fd8\u8bb0\u5efa\u6811\uff01\uff01\uff01**\n- \u5982\u679c\u5f53\u524d\u524d\u5bfc\u96f6\u6807\u8bb0\u8fd8\u672a\u53bb\u6389\uff0c\u5219\u4e0d\u80fd\u76f4\u63a5\u5411\u4e0b\u8d70\uff0c\u9700\u8981\u7559\u5728\u539f\u5730\uff08\u56e0\u4e3a\u53ef\u80fd\u6709\u6570\u5b57\u4e32\u5305\u542b\u524d\u5bfc\u96f6\uff09\u3002\n\n### \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include <bits/stdc++.h>\n#define FL(a, b, c) memset(a, b, c)\n#define RE() cout << \"\u00bfWhat Happened?\" << endl\n#define DG(x) cout << \"Debug : \" << #x << \" = \" << x << endl\n#define TE() cerr << \"Time : \" << clock() << \"(ms)\" << endl\n#define ER(a, b) for(int a(head[b]); a; a = next[a])\n#define IR(a, b, c, ...) for(int a(b), ##__VA_ARGS__; a <= c; ++a)\n#define OR(a, b, c, ...) for(int a(b), ##__VA_ARGS__; a >= c; --a)\nusing namespace std;\nstruct FastIN {\n\ttemplate < class T > inline FastIN& operator >> (T& x) {\n\t\tx = 0; bool sd(false);\n\t\tchar ch(getchar());\n\t\twhile (!isdigit(ch) and (ch != '-')) ch = getchar();\n\t\tif (ch == '-') sd = true, ch = getchar();\n\t\twhile (ch >= '0' and ch <= '9') x = (x << 3) + (x << 1) + ch - '0', ch = getchar();\n\t\tif (sd == true) x = -x;\n\t\treturn *this;\n\t}\n} IN;\nconst int INF = ~0u >> 1;\ntemplate < class T > inline void Gmin(T& a, const T& b) { a = min(a, b); }\ntemplate < class T > inline void Gmax(T& a, const T& b) { a = max(a, b); }\n\nconst int kN = 1510, Mod = 1e9 + 7;\n\nint m;\n\nint A[kN], Cnt;\n\nint F[kN][kN][2][2];\n\nstruct AC {\n\tint tot, ch[kN][10], fail[kN];\n\tbool end[kN];\n\tinline void Ins(string s) {\n\t\tint p(0), lim(s.length() - 1);\n\t\tIR(i, 0, lim) {\n\t\t\tint t = s[i] - '0';\n\t\t\tif (!ch[p][t]) ch[p][t] = ++tot;\n\t\t\tp = ch[p][t];\n\t\t}\n\t\tend[p] = true;\n\t}\n\n\tinline void Build() {\n\t\tqueue < int > Q;\n\t\tIR(i, 0, 9) if (ch[0][i]) Q.push(ch[0][i]);\n\t\twhile (Q.size()) {\n\t\t\tint x = Q.front(); Q.pop();\n\t\t\tIR(i, 0, 9) {\n\t\t\t\tint& y = ch[x][i];\n\t\t\t\tif (y) fail[y] = ch[fail[x]][i], Q.push(y), end[y] |= end[fail[y]];\n\t\t\t\telse y = ch[fail[x]][i];\n\t\t\t}\n\t\t}\n\t}\n\n\tinline int DFS(int x, int p, bool limit, bool lead0) {\n\t\tint& sum = F[x][p][limit][lead0];\n\t\tif (sum >= 0) return sum;\n\t\tif (x > Cnt) return !lead0;\n\t\tsum = 0;\n\t\tIR(i, 0, (limit ? A[x] : 9)) {\n\t\t\tint nt = ch[p][i];\n\t\t\tif (lead0 and i == 0) sum = (sum + DFS(x + 1, 0, limit & (i == A[x]), true)) % Mod; // \u7559\u5728\u6839\u8282\u70b9\uff08\u96f6\u53f7\u8282\u70b9\uff09\n\t\t\telse if (!end[nt]) sum = (sum + DFS(x + 1, nt, limit & (i == A[x]), false)) % Mod;\n\t\t}\n\t\treturn sum;\n\t}\n\n} Ac;\n\ninline int Solve() {\n\tFL(F, 0xff, sizeof F);\n\treturn Ac.DFS(1, 0, true, true);\n}\n\n\nsigned main() {\n#ifdef FIO\n    freopen(\"I:/Code/Data/In.in\", \"r\", stdin);\n    freopen(\"I:/Code/Data/Out.out\", \"w\", stdout);\n#endif\n\tstring s; cin >> s;\n\tint lim(s.length() - 1);\n\tIR(i, 0, lim) A[++Cnt] = s[i] - '0';\n\tIN >> m;\n\tIR(i, 1, m) cin >> s, Ac.Ins(s);\n\n\tAc.Build(); // \u4e0d\u8981\u5fd8\u8bb0\u5efa\u6811\uff01\uff01\uff01\n\n\tcout << Solve() << \"\\n\";\n\t\n\n}\n\n\n```\n\n",
        "postTime": 1644721094,
        "uid": 308107,
        "name": "Xu__",
        "ccfLevel": 6,
        "title": "P3311 [SDOI2014] \u6570\u6570 \u9898\u89e3"
    },
    {
        "content": "[\u539f\u9898](https://www.luogu.com.cn/problem/P3311)\n\n\u524d\u7f6e\u77e5\u8bc6\uff1aAC \u81ea\u52a8\u673a\uff0c\u6570\u4f4d DP\u3002\n\n\u964d\u7ea7\u7248\u76f8\u4f3c\u9898\uff1a[[JSOI2007]\u6587\u672c\u751f\u6210\u5668](https://www.luogu.com.cn/problem/P4052)\n\n[JSOI2007]\u6587\u672c\u751f\u6210\u5668 \u9898\u89e3\uff1a\n\n\u8fd9\u662f\u4e00\u9053 AC \u81ea\u52a8\u673a\u4e0a DP \u7684\u9898\u76ee\u3002**AC \u81ea\u52a8\u673a\u4e0a DP \u7684\u57fa\u672c\u601d\u8def\u662f\u8bbe $f[i][j]$ \u8868\u793a\u5f53\u524d\u4e32\u957f $i$\u3001\u5728 $j$ \u53f7\u8282\u70b9**\u3002\u90a3\u4e48\u672c\u9898\u5c31\u53ef\u4ee5\u91c7\u7528\u8fd9\u4e00\u601d\u8def\u3002\u8bbe $f[i][j]$ \u8868\u793a\u5f53\u524d\u4e32\u957f $i$\u3001\u5728 trie \u4e0a $j$ \u53f7\u8282\u70b9\uff0c\u4e14\u5f53\u524d\u4e32\u4e0d\u5305\u542b\u4efb\u4f55\u4e00\u4e2a\u5355\u8bcd\u7684\u65b9\u6848\u6570\u3002**\u7531\u4e8e\u5728 trie \u7ed3\u6784\u4e2d\u4ece\u67d0\u53f7\u8282\u70b9\u8f6c\u79fb\u5230\u5b83\u7684\u5b50\u8282\u70b9\u6bd4\u5b50\u8282\u70b9\u4ece\u7236\u8282\u70b9\u8f6c\u79fb\u66f4\u52a0\u4fbf\u6377**\uff0c\u56e0\u6b64\u8003\u8651\u7528 $f[i][j]$ \u66f4\u65b0 $f[i+1][trie[j][k]],k\\in[0,26)$\u3002\n\n```cpp\nfor(int b=0;b<26;b++)\n    if(!trie[j][b])(f[i+1][0]+=f[i][j])%=mod;\n\telse if(!cnt[trie[j][b]])(f[i+1][trie[j][b]]+=f[i][j])%=mod;\n```\n\n\u4e0a\u9762\u7684\u8f6c\u79fb\uff1a\u5f53\u8be5\u5b50\u8282\u70b9\u4e3a\u7a7a\u65f6\uff0c\u8bf4\u660e\u8fd9\u4e2a\u5b50\u8282\u70b9\u5bf9\u5e94\u7684\u5b57\u6bcd\u8ddf\u5f53\u524d\u4e32\u4e0d\u53ef\u80fd\u6784\u6210\u5355\u8bcd\uff0c\u56e0\u6b64\u4e00\u5b9a\u53ef\u4ee5\u63a5\u5728\u540e\u9762\uff0c\u800c\u540e\u5f00\u542f\u201c\u65b0\u7eaa\u5143\u201d\uff08\u56de\u5230 trie \u6839\uff09\u3002\u5f53\u8be5\u5b50\u8282\u70b9\u4e0d\u4e3a\u7a7a\u65f6\uff0c\u5982\u679c\u5728 AC \u81ea\u52a8\u673a\u4e0a\u8df3\u7740\u7edf\u8ba1\u5b8c\u53d1\u73b0\u4e0d\u4f1a\u7edf\u8ba1\u5230\u5355\u8bcd\uff0c\u5219\u53ef\u4ee5\u653e\uff0c\u5426\u5219\u653e\u4e0a\u8fd9\u4e2a\u5b57\u6bcd\u5c31\u4f1a\u51fa\u73b0\u5355\u8bcd\u800c\u4e0d\u5408\u6cd5\u3002\u4ee3\u7801\u4e2d\u7684 $cnt$ \u4e3a\u6839\u636e $fail$ \u6811\u9884\u5904\u7406\u51fa\u7684\u6bcf\u4e2a\u70b9\u4f1a\u7edf\u8ba1\u5230\u7684\u7b54\u6848\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int mod=1e4+7;\nint n,m,tot,trie[6005][26],fail[6005],f[105][6005],cnt[6005];\nstring s;\nvector<int>G[6005];\nqueue<int>Q;\nvoid insert(){\n\tint rt=0;\n\tfor(int i=0;i<s.length();i++){\n\t\tint b=s[i]-'A';\n\t\tif(!trie[rt][b])trie[rt][b]=++tot;\n\t\trt=trie[rt][b];\n\t}\n\tcnt[rt]++;\n}\nvoid get_fail(){\n\tfor(int i=0;i<26;i++)if(trie[0][i])Q.push(trie[0][i]),G[0].push_back(trie[0][i]);\n\twhile(!Q.empty()){\n\t\tint x=Q.front();Q.pop();\n\t\tfor(int i=0;i<26;i++){\n\t\t\tif(trie[x][i]){\n\t\t\t\tfail[trie[x][i]]=trie[fail[x]][i];\n\t\t\t\tG[fail[trie[x][i]]].push_back(trie[x][i]);\n\t\t\t\tQ.push(trie[x][i]);\n\t\t\t}\n\t\t\telse trie[x][i]=trie[fail[x]][i];\n\t\t}\n\t}\n}\nvoid sumup(int x){\n\tfor(int i=0;i<G[x].size();i++)cnt[G[x][i]]+=cnt[x],sumup(G[x][i]);\n}\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)cin>>s,insert();\n\tget_fail(),sumup(0);\n\tf[0][0]=1;\n\tfor(int i=0;i<m;i++){\n\t\tfor(int j=0;j<=tot;j++){\n\t\t\tint k=0;\n\t\t\tfor(int b=0;b<26;b++)\n\t\t\t\tif(!trie[j][b])k++;\n\t\t\t\telse if(!cnt[trie[j][b]])(f[i+1][trie[j][b]]+=f[i][j])%=mod;\n\t\t\t(f[i+1][0]+=k*f[i][j]%mod)%=mod;\n\t\t}\n\t}\n\tint ans=0,pro=1;\n\tfor(int i=1;i<=m;i++)pro=pro*26%mod;\n\tfor(int i=0;i<=tot;i++)ans=(ans+f[m][i])%mod;\n\tcout<<((pro-ans)%mod+mod)%mod;\n}\n```\n\n[SDOI2014]\u6570\u6570 \u9898\u89e3\uff1a\n\n\u8fd9\u9053\u9898\u53ef\u4ee5\u6cbf\u7528\u4e0a\u9762 AC \u81ea\u52a8\u673a\u4e0a DP \u7684\u601d\u60f3\uff0c\u4e14\u5927\u540c\u5c0f\u5f02\u3002\u5c0f\u5f02\u5728\u8fd9\u9898\u6709\u4e86\u6570\u4f4d DP\u201c\u5361\u4e0a\u754c\u201d\u7684\u9650\u5236\uff0c\u4f46\u5176\u5b9e\u672c\u8d28\u8fd8\u662f\u4e0a\u9762\u7c97\u4f53\u5b57\u7684\u57fa\u672c\u601d\u8def\u3002\n\n\u8bbe $f_{u,o,i,j}(u,o\\in\\{0,1\\})$ \u4e3a\u72b6\u6001\uff0c$u,o,i,j$ \u7684\u542b\u4e49\u89c1\u4e0b\u8868\uff1a\n\n| $u$                                         | $o$                  | $i$      | $j$                   |\n| ------------------------------------------- | -------------------- | -------- | --------------------- |\n| \u662f($1$)\u5426($0$)\u4e32\u7684 $1\\sim i$ \u4f4d\u7f6e\u90fd\u662f\u524d\u5bfc 0 | \u662f($1$)\u5426($0$)\u5361\u4e0a\u754c | \u5f53\u524d\u4e32\u957f | \u5728 trie \u4e0a $j$ \u53f7\u8282\u70b9 |\n\n\u4e8e\u662f\uff1a\n\n```cpp\n//t\u4e3a\u7ed9\u5b9a\u7684\u5927\u6570\u5b57\uff08\u5b57\u7b26\u4e32\uff09\uff0c\u4e0b\u6807\u4ece0\u5230m\uff08\u6ce8\u610fm\u4e0e\u539f\u9898\u4e2d\u4e0d\u662f\u540c\u4e00\u4e2a\uff09\nfor(int i=0;i<m;i++){\n    for(int u=0;u<=1;u++){\n        for(int o=0;o<=1;o++){\n            for(int j=0;j<=tot;j++){\n                for(int b=0;b<=(o?t[i]-'0':9);b++){\n                    if(u&&!b)f[1][0][i+1][0]=1;//\u5982\u679c\u8fd8\u662f\u90fd\u662f\u524d\u5bfc0\uff0c\u5219\u4e00\u5b9a\u4e0d\u5361\u4e0a\u754c\uff0c\u800c\u4e14\u4e0d\u8f6c\u79fb\n                    else if(!trie[j][b])(f[0][o&(b==(o?t[i]-'0':9))][i+1][0]+=f[u][o][i][j])%=mod;\n                    else if(!cnt[trie[j][b]])(f[0][o&(b==(o?t[i]-'0':9))][i+1][trie[j][b]]+=f[u][o][i][j])%=mod;\n                }\n            }\n        }\n    }\n}\n```\n\n\u7b54\u6848\u5373\u4e3a $\\sum_{u,o\\in\\{0,1\\},0\\le j\\le tot}f[u][o][m][j]$\uff08$tot$ \u8868\u793a trie \u4e2d\u8282\u70b9\u6700\u5927\u7f16\u53f7\uff09\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int mod=1e9+7;\nint n,m,tot,trie[1505][10],fail[1505],f[2][2][1205][1505],cnt[1505],f[1205],p[1205];\nstring t,s;\nvector<int>f[1505];\nqueue<int>Q;\nvoid insert(){\n\tint rt=0,l=s.length();\n\tfor(int i=0;i<l;i++){\n\t\tint b=s[i]-'0';\n\t\tif(!trie[rt][b])trie[rt][b]=++tot;\n\t\trt=trie[rt][b];\n\t}\n\tcnt[rt]++;\n}\nvoid get_fail(){\n\tfor(int i=0;i<10;i++)if(trie[0][i])Q.push(trie[0][i]),f[0].push_back(trie[0][i]);\n\twhile(!Q.empty()){\n\t\tint x=Q.front();Q.pop();\n\t\tfor(int i=0;i<10;i++){\n\t\t\tif(trie[x][i]){\n\t\t\t\tfail[trie[x][i]]=trie[fail[x]][i];\n\t\t\t\tf[fail[trie[x][i]]].push_back(trie[x][i]);\n\t\t\t\tQ.push(trie[x][i]);\n\t\t\t}\n\t\t\telse trie[x][i]=trie[fail[x]][i];\n\t\t}\n\t}\n}\nvoid sumdn(int x){\n\tfor(int i=0;i<f[x].size();i++)cnt[f[x][i]]+=cnt[x],sumdn(f[x][i]);\n}\nint main(){\n\tcin>>t>>n;m=t.length();\n\tfor(int i=1;i<=n;i++)cin>>s,insert();\n\tget_fail(),sumdn(0);\n\tf[1][1][0][0]=1;\n\tfor(int i=0;i<m;i++){\n\t\tfor(int u=0;u<=1;u++){\n\t\t\tfor(int o=0;o<=1;o++){\n\t\t\t\tfor(int j=0;j<=tot;j++){\n\t\t\t\t\tfor(int b=0;b<=(o?t[i]-'0':9);b++){\n\t\t\t\t\t\tif(u&&!b)f[1][0][i+1][0]=1;\n\t\t\t\t\t\telse if(!trie[j][b])(f[0][o&(b==(o?t[i]-'0':9))][i+1][0]+=f[u][o][i][j])%=mod;\n\t\t\t\t\t\telse if(!cnt[trie[j][b]])(f[0][o&(b==(o?t[i]-'0':9))][i+1][trie[j][b]]+=f[u][o][i][j])%=mod;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint ans=0;\n\tfor(int i=0;i<=tot;i++)ans=(((((((ans+=f[0][0][m][i])%=mod)+=f[1][0][m][i])%=mod)+=f[0][1][m][i])%=mod)+=f[1][1][m][i])%=mod;\n\tcout<<ans-1;\n}\n```\n\n",
        "postTime": 1639987808,
        "uid": 300078,
        "name": "pengyule",
        "ccfLevel": 7,
        "title": "\u9898\u89e3\u3010P3311 [SDOI2014] \u6570\u6570\u3011"
    },
    {
        "content": "\u8fd9\u7bc7\u9898\u89e3\u7684\u8bbe\u8ba1\u72b6\u6001\u6709\u4e00\u4e9b\u4e0d\u4e00\u6837\uff0c\u4e5f\u4e0d\u662f\u8bb0\u641c......\u4e3b\u8981\u662f\u4e2a\u4eba\u5199\u6570\u4f4d DP \u7684\u4e60\u60ef\u3002\n\n## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e9b\u5341\u8fdb\u5236\u6570\u5b57\u4e32 $s_i(1\\le i\\le m)$\u200b\u200b\uff0c\u6c42\u4e0d\u8d85\u8fc7 $n$\u200b\u200b \u7684\u6570\u6709\u591a\u5c11\u4e2a\u5728\u5341\u8fdb\u5236\u4e0b\u6ca1\u6709\u4e00\u4e2a $s_i$\u200b \u662f\u5176\u5b50\u4e32\u3002\n\n$n < 10^{1201},m\\le 100,1\\le\\sum_{i=1}^m|s_i|\\le 1500$\n\n\u6c42\u7684\u6570\u4e0d\u542b\u524d\u5bfc $0$\uff0c\u4f46\u7ed9\u5b9a\u7684\u4e32\u4e2d\u53ef\u80fd\u6709\u3002\n\n## \u9898\u89e3\n\n\u5efa $fail$ \u6811\u65f6\u6807\u8bb0\u90a3\u4e9b\u7956\u5148\u4e2d\u6709\u8868\u793a\u7ed9\u5b9a\u4e32\u672b\u5c3e\u7684\u7ed3\u70b9\u3002\u4e0b\u6587\u4e2d\u5c06\u4e0d\u8003\u8651\u8fd9\u4e9b\u70b9\u3002\n\n\u5047\u5982\u95ee\u7684\u662f\u4e0d\u8d85\u8fc7 $n$ \u4f4d\u7684\u6570\u5b57\u4e2a\u6570\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7b80\u5355\u5730\u5bf9 $s_i(1\\le i\\le n)$ \u5efa AC \u81ea\u52a8\u673a\u540e DP\uff1a\n\n\u8bbe $f_{i,u}$ \u4e3a\u4ece\u6839\u5f00\u59cb\uff0c\u957f\u4e3a $i$ \uff0c\u6700\u540e\u5230\u8282\u70b9 $u$ \u7684\u8def\u5f84\u6761\u6570\u3002\n\n$$f_{1,0} = 1,f_{i,0}=0(i\\not=1),f_{i,u}=\\large\\sum\\limits_{(v,u)\\in E}f_{i-1,v}$$\n\n\u7b54\u6848\u5c31\u662f\n\n$$\\large\\sum\\limits_{i=1}^n\\large\\sum\\limits_{u\\in V}f_{i,u}$$\n\n\u4f46\u662f\u8fd9\u91cc\u6211\u4eec\u91c7\u7528\u53e6\u4e00\u79cd\u65b9\u5f0f\u3002\n\n\u8bbe $f_{u,i}$ \u4e3a\u4ece\u8282\u70b9 $u$ \u5f00\u59cb\uff0c\u4efb\u610f\u8d70 $i$ \u6b65\u7684\u8def\u5f84\u6761\u6570\u3002\n\n$$f_{u,0}=1,f_{u,i}=\\large\\sum\\limits_{(u,v)\\in E}f_{v,i-1}$$\n\n\u7b54\u6848\u4e3a $\\large\\sum\\limits_{i=1}^nf_{1,i}$\u3002\u53d1\u73b0\u8fd9\u6837\u4f3c\u4e4e\u6bd4\u4e0a\u4e00\u79cd\u66f4\u52a0\u7b80\u6d01\u3002\n\n\u81f3\u4e8e\u4e3a\u4f55\u91c7\u7528\u8fd9\u79cd\u5f62\u5f0f\uff0c\u548c\u672c\u9898 DP \u7684\u65b9\u6cd5\u6709\u5173\u3002\n\n---\n\n\u90a3\u4e48\u5bf9\u4e8e\u672c\u9898\u4e2d\u7684\u9650\u5236\uff0c\u6211\u4eec\u628a\u4e0d\u5927\u4e8e $n$\u200b\u200b \u7684\u6570\u5206\u4e3a $3$\u200b \u7c7b\u8ba8\u8bba\uff1a\uff08\u4ee4 $t$ \u4e3a $n$ \u7684\u4f4d\u6570\uff09\n\n1. \u4f4d\u6570\u4e0d\u8db3 $t$\u200b \u7684\u6570\uff1b\n2. \u4f4d\u6570\u4e3a $t$\u200b\uff0c\u5728\u7b2c $i(1\\le i\\le t)$\u200b \u4f4d\u4e4b\u524d\u5404\u4f4d\u4e0e $n$\u200b \u76f8\u540c\uff0c\u8be5\u4f4d\u4e0a\u6bd4 $n$\u200b\u200b \u5c0f\uff08$i$\u200b \u4ece\u5c0f\u5230\u5927\u8868\u793a $n$\u200b \u4ece\u9ad8\u5230\u4f4e\u7684\u4f4d\uff09\uff1b\n3. $n$\u200b \u672c\u8eab\u3002\n\n\u5982\u679c\u4e0d\u8003\u8651\u524d\u5bfc $0$\uff1a\n\n\u5bf9\u4e8e\u7b2c\u4e00\u7c7b\uff0c\u6211\u4eec\u76f4\u63a5\u7edf\u8ba1 $\\large\\sum\\limits_{i=1}^{n-1}f_{1,i}$ \u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u7c7b\uff0c\u6211\u4eec\u4ece\u5c0f\u5230\u5927\u8003\u8651 $i$\u200b\uff0c\u5e76\u7ef4\u62a4\u4ee3\u8868 $n$ \u524d $i-1$\u200b \u4f4d\u6570\u5b57\u4e32\u7684\u8282\u70b9 $v$\u200b\u3002\n\n\u679a\u4e3e $v$\u200b \u7684\u5c0f\u4e8e $n$\u200b \u8be5\u4f4d\u7684\u51fa\u8fb9\uff0c\u8bbe\u5176\u6307\u5411 $u$\u200b\uff0c\u5176\u8d21\u732e\u4e3a $f_{u,t-i}$\u3002\n\n\u82e5\u67d0\u6b21 $v$\u200b \u6ca1\u6709 $n$ \u8be5\u4f4d\u7684\u51fa\u8fb9\uff08\u5230\u8fbe\u4e86\u67d0\u4e2a $s_i$ \u7684\u672b\u5c3e\uff09\uff0c\u5219\u4ee3\u8868\u63a5\u4e0b\u6765\u7684\u4f4d\u90fd\u4e0d\u53ef\u80fd\u76f8\u540c\uff0c\u9000\u51fa\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e09\u7c7b\uff0c\u89c2\u5bdf\u7b2c\u4e8c\u4f4d\u7edf\u8ba1\u8fc7\u7a0b\u662f\u5426\u63d0\u524d\u9000\u51fa\uff0c\u82e5\u6ca1\u6709\uff0c\u8d21\u732e\u4e3a $1$\u3002\n\n---\n\n\u9664\u53bb\u5e26\u524d\u5bfc $0$ \u7684\u6570\u7684\u5f71\u54cd\uff1a\n\n\u5bf9\u4e8e\u7b2c\u4e00\u7c7b\uff0c\u82e5\u6839\u8282\u70b9\u51fa\u8fb9 $0$ \u6307\u5411 $x$\uff0c\u51cf\u53bb $\\large\\sum\\limits_{i=0}^{n-2}f_{x,i}$\u3002\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u53ea\u8981\u907f\u514d\u8def\u5f84\u7684\u7b2c\u4e00\u6761\u8fb9\u662f $0$ \u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u7c7b\uff0c$i=1$ \u65f6\uff0c\u7279\u5224\u4e0d\u8d70 $0$ \u51fa\u8fb9\u5373\u53ef\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u91c7\u7528\u5efa\u56fe\u4e4b\u540e\u53bb\u9664 $(0,x)$ \u8fb9\u7684\u65b9\u6cd5\u3002\u4f46\u662f\u8fd9\u6837\u662f\u9519\u8bef\u7684\u3002\n\n\u4f8b\u5982\uff0c\u6839\u8282\u70b9\u7684\u4e00\u6761\u672a\u51fa\u73b0\u5728 $s_i(1\\le i\\le n)$\u200b \u7684\u6570\u5b57\u51fa\u8fb9\u4f1a\u6307\u5411\u81ea\u5df1\uff0c\u8d70\u8be5\u6761\u8fb9\u540e\u518d\u8d70 $0$\u200b \u51fa\u8fb9\u662f\u5408\u6cd5\u7684\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff08$a$ \u4e3a\u5b57\u7b26\u96c6\u5927\u5c0f\uff0c\u4e3a $10$\uff09$\\mathcal O(ta\\sum_{i=1}^n|s_i|)$\u200b\u200b\u200b\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <queue>\n#include <vector>\n\nconst int N = 1600;\nconst int p = 1000000007;\n\ninline int read() {\n    int x = 0, f = 1; char ch = getchar();\n    while(ch > '9' || ch < '0') { if(ch == '-') f = -1; ch = getchar(); }\n    while(ch >= '0' && ch <= '9') x = x * 10 + ch - 48, ch = getchar();\n    return x * f;\n}\n\nint n,m,f[N][N],vis[N],fail[N],tr[N][10];\nchar s[N],t[N];\nstd::queue <int> q;\n\nint main() {\n    std::scanf(\"%s\",s + 1), n = strlen(s + 1);\n    m = 1;\n    for(int i = 0;i < 10;i++) tr[0][i] = 1;\n    int c = read();\n    for(int i = 1;i <= c;i++) {\n        std::scanf(\"%s\",t + 1);\n        int k = 1;\n        for(int j = 1;t[j];j++) {\n            int &v = tr[k][t[j] - '0'];\n            if(!v) v = ++m;\n            k = v;\n        }\n        vis[k] = true;\n    }\n    q.push(1);\n    while(!q.empty()) {\n        int v = q.front(); q.pop();\n        for(int i = 0;i < 10;i++) {\n            int &u = tr[v][i];\n            if(!u) u = tr[fail[v]][i];\n            else {\n                 fail[u] = tr[fail[v]][i], q.push(u);\n                 vis[u] |= vis[fail[u]];\n            }\n        }\n    }\n    for(int i = 1;i <= m;i++) if(!vis[i]) f[i][0] = 1;\n    int ans = 0;\n    for(int i = 1;i <= n;i++) {\n        for(int v = 1;v <= m;v++) if(!vis[v]) {\n            for(int j = 0;j < 10;j++) {\n                int u = tr[v][j]; if(!u || vis[u]) continue;\n                f[v][i] = (f[v][i] + f[u][i - 1]) % p;\n            }\n        }\n        if(i < n) ans = (ans + f[1][i] - f[tr[1][0]][i - 1]) % p;\n    }\n    int k = 1;\n    for(int i = 1;i <= n;i++) {\n        for(int j = 0;j < s[i] - '0';j++) {\n            if(i == 1 && !j) continue;\n            int u = tr[k][j]; if(!u || vis[u]) continue;\n            ans = (ans + f[u][n - i]) % p;\n        }\n        k = tr[k][s[i] - '0'];\n        if(!k || vis[k]) break;\n    }\n    if(k && !vis[k]) ans = (ans + 1) % p;\n    std::printf(\"%d\\n\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1630137728,
        "uid": 219595,
        "name": "Vocalise",
        "ccfLevel": 9,
        "title": "ACAM \u4e0a DP--P3311 \u3010[SDOI2014]\u6570\u6570\u3011"
    },
    {
        "content": "\u672c\u7bc7\u9898\u89e3\u53d7[\u8fd9\u4f4d\u5927\u4f6c](https://www.cnblogs.com/candy99/p/6666613.html)\u7684\u542f\u53d1\uff0c\u5728\u6b64\u611f\u8c22\u3002\n\n\u6570\u636e\u592a\u6c34\uff0c\u4f46\u662f\u6b64\u65b9\u6cd5\u80fd\u901a\u8fc7$hack$\u6570\u636e\uff0c\u8bf7\u653e\u5fc3\u98df\u7528\u3002\n## \u4e00\u3001\u9898\u76ee\n[\u70b9\u6b64\u770b\u9898](https://www.luogu.com.cn/problem/P3311)\n## \u4e8c\u3001\u89e3\u6cd5\n\u5e94\u8be5\u5f88\u5bb9\u6613\u770b\u51fa\u8fd9\u662f\u4e00\u9053\u5728$\\text{AC}$\u81ea\u52a8\u673a\u4e0a\u6570\u4f4d$dp$\u7684\u9898\u76ee\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5206\u6210\u4e24\u90e8\u5206$dp$\uff0c\u4e00\u90e8\u5206\u662f\u4f4d\u6570\u6bd4$n$\u5c0f\u7684\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u662f\u4f4d\u6570\u7b49\u4e8e$n$\u7684\u90e8\u5206\u3002\n\n\u7b2c\u4e00\u90e8\u5206\uff0c\u5b9a\u4e49$g[i][j]$\u4e3a\u957f\u5ea6\u4e3a$i$\uff0c\u5728\u81ea\u52a8\u673a\u4e0a\u5339\u914d\u5230\u4e86\u8282\u70b9$j$\uff08\u4e0d\u5141\u8bb8\u51fa\u73b0\u524d\u5bfc\u96f6\uff09\u7684\u65b9\u6848\u6570\uff0c\u8f6c\u79fb\u76f4\u63a5\u5728\u81ea\u52a8\u673a\u4e0a\u8df3\u5373\u53ef\uff0c\u6ce8\u610f\u8ba1\u7b97\u5e78\u8fd0\u6570\u4e2a\u6570\uff0c\u5982\u679c\u6211\u4eec\u8df3\u5230\u4e86\u4e0d\u662f\u5e78\u8fd0\u6570\u7684\u8282\u70b9\uff08\u6807\u8bb0\u9700\u8981\u5728$fail$\u6811\u4e0a\u4e0b\u653e\uff09\uff0c\u90a3\u5c31\u4e0d\u7ed9\u5b83\u8f6c\u79fb\uff0c\u6240\u4ee5\u4e0d\u662f\u5e78\u8fd0\u6570\u7684\u8282\u70b9\u5b58\u50a8\u7684$dp$\u503c\u4e00\u5b9a\u662f$0$\u3002\n\n\u7b2c\u4e8c\u90e8\u5206\uff0c\u4eff\u7167\u7b2c\u4e00\u90e8\u5206\uff0c\u5b9a\u4e49$f[i][j][0/1]$\u4e3a\u957f\u5ea6\u4e3a$i$\uff0c\u5728\u81ea\u52a8\u673a\u4e0a\u5339\u914d\u8282\u70b9$j$\uff0c\u6700\u540e\u4e00\u4e2a$bool$\u8868\u793a\u662f\u5426\u8d34\u8fd1\u4e0a\u754c\uff08$n$\u7684\u9650\u5236\uff09\uff0c\u8f6c\u79fb\u9700\u8981\u8ba8\u8bba\u4e00\u4e0b\u8fd9\u4e2a$bool$\u3002\n\n\u7136\u540e\u5c31\u5b8c\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(10\\times lL)$\uff0c\u5177\u4f53\u64cd\u4f5c\u770b\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <queue>\nusing namespace std;\nconst int M = 1505;\nconst int MOD = 1e9+7;\nint read()\n{\n    int x=0,flag=1;\n    char c;\n    while((c=getchar())<'0' || c>'9') if(c=='-') flag=-1;\n    while(c>='0' && c<='9') x=(x<<3)+(x<<1)+(c^48),c=getchar();\n    return x*flag;\n}\nint n,m;\nchar s[M],t[M];\nstruct automaton\n{\n    int cnt,fail[M],val[M],c[M][10],g[M][M],f[M][M][2],ans;\n    void ins(char *s)\n    {\n        int len=strlen(s),now=0;\n        for(int i=0; i<len; i++)\n        {\n            int v=s[i]-'0';\n            if(!c[now][v]) c[now][v]=++cnt;\n            now=c[now][v];\n        }\n        val[now]=1;\n    }\n    void build()\n    {\n        queue<int> q;\n        for(int i=0; i<10; i++) if(c[0][i]) q.push(c[0][i]);\n        while(!q.empty())\n        {\n            int t=q.front();\n            q.pop();\n            val[t]|=val[fail[t]];\n            for(int i=0; i<10; i++)\n                if(c[t][i]) fail[c[t][i]]=c[fail[t]][i],q.push(c[t][i]);\n                else c[t][i]=c[fail[t]][i];\n        }\n    }\n    void mod(int &x)\n    {\n        x=x%MOD;\n    }\n    void dp()\n    {\n        g[0][0]=1;\n        for(int i=0; i<n; i++)\n            for(int j=0; j<=cnt; j++)\n                for(int k=0; k<10; k++)\n                    if(!val[c[j][k]])\n                    {\n                        if(i==0 && k==0) continue;\n                        mod(g[i+1][c[j][k]]+=g[i][j]);\n                    }\n        f[0][0][1]=1;\n        for(int i=0; i<n; i++)\n            for(int j=0; j<=cnt; j++)\n                for(int k=0; k<10; k++)\n                    if(!val[c[j][k]])\n                    {\n                        if(i==0 && k==0) continue;\n                        int v=c[j][k];\n                        mod(f[i+1][v][0]+=f[i][j][0]);\n                        if(k<s[i+1]-'0') mod(f[i+1][v][0]+=f[i][j][1]);\n                        if(k==s[i+1]-'0') mod(f[i+1][v][1]+=f[i][j][1]);\n                    }\n        for(int i=1; i<n; i++)\n            for(int j=0; j<=cnt; j++)\n                mod(ans+=g[i][j]);\n        for(int i=0; i<=cnt; i++)\n        {\n            mod(ans+=f[n][i][0]);\n            mod(ans+=f[n][i][1]);\n        }\n        printf(\"%d\\n\",ans);\n    }\n} AC;\nint main()\n{\n    scanf(\"%s\",s+1);\n    n=strlen(s+1);\n    m=read();\n    for(int i=1; i<=m; i++)\n    {\n        scanf(\"%s\",t);\n        AC.ins(t);\n    }\n    AC.build();\n    AC.dp();\n}\n```\n",
        "postTime": 1580444697,
        "uid": 128239,
        "name": "C20203030",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3311 \u3010[SDOI2014]\u6570\u6570\u3011"
    },
    {
        "content": "# \u9898\u89e3--P3311 \u6570\u6570\n### Part 0\n\u5efa\u8bae\u5148\u505a\u5b8c\u8bd5\u70bc\u573a\u7684AC\u81ea\u52a8\u673a\uff0c\u5bf9\u5176\u6709\u4e00\u5b9a\u4e86\u89e3\u518d\u6765\u5b8c\u6210\u8fd9\u9053\u9898\n### Part 1\n\u5982\u4f55\u60f3\u5230\u7684AC\u81ea\u52a8\u673a+\u6570\u4f4ddp\u7684\u7b97\u6cd5\uff1f\n\n\u9996\u5148\u591a\u4e2a\u5b50\u4e32\uff0c\u5e76\u4e14\u8981\u6c42\u5168\u90fd\u4e0d\u51fa\u73b0\uff0c\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5339\u914d\u95ee\u9898\n\n\u591a\u6a21\u5f0f\u4e32\u5339\u914d\uff0c\u5f88\u660e\u663e\u662fAC\u81ea\u52a8\u673a\n\n\u81f3\u4e8e\u6570\u4f4ddp\uff0c\u6c42\u6ee1\u8db3\u67d0\u79cd\u6570\u5b57\u7ed3\u6784\u7684\u6570\u7684\u6570\u91cf\uff0c\u53ef\u4ee5\u60f3\u5230\u6570\u4f4ddp\n\n### Part 2\n\u5982\u4f55\u5229\u7528AC\u81ea\u52a8\u673a\u8fdb\u884cdp\uff1f\n\n\u9996\u5148\u8981\u5bf9ac\u81ea\u52a8\u673a\u6709\u4e00\u4e9b\u4e86\u89e3\n\n\u6211\u4eec\u628a\u8fb9\u5206\u4e3a3\u7c7b\uff1a\n\n1. \u539f\u6765\u7684trie\u6811\u7684\u8fb9\n\n2. fail\u6307\u5411\u7684\u8fb9\n\n3. trie\u56fe\u7684\u8fb9\n\n\u5176\u4e2d\u524d\u4e24\u7c7b\u8fb9\u7684\u610f\u4e49\u4e0d\u8a00\u81ea\u660e\uff0c\u8fd9\u91cc\u91cd\u70b9\u8bf4\u4e00\u4e0b\u7b2c\u4e09\u7c7b\n\ntrie\u56fe\u8fb9go[i][j]\u7684\u610f\u4e49\u662f\uff1a\u5728AC\u81ea\u52a8\u673a\u7684i\u53f7\u8282\u70b9\u4e0a\uff0c\u4e0b\u4e00\u4e2a\u9047\u5230\u4e86\u5b57\u7b26j\uff0c\u4f1a\u8f6c\u79fb\u5230\u7684\u8282\u70b9\u7f16\u53f7\n\n\u6211\u4eec\u7528\u66f4\u719f\u6089\u7684kmp\u7406\u89e3\u4e00\u4e0b\uff0c\u5982\u679cj\u6b63\u597d\u662f\u539f\u4e32\u7684\u4e0b\u4e00\u4f4d\uff0c\u90a3\u4e48go[i][j]=i+1\uff0c\u5426\u5219go[i][j]=next[i]\n\n\u5728kmp\u4e2d\u6ca1\u6709\u7279\u522b\u63d0\u52302,3\u7c7b\u8fb9\u7684\u5dee\u5f02\uff0c\u56e0\u4e3a\u51e0\u4e4e\u662f\u91cd\u5408\u7684\n\n\u4e0a\u9762\u8fd9\u53e5\u8bdd\u4e0d\u7406\u89e3\u53f6\u65e0\u6240\u8c13\uff0c\u660e\u767dgo\u7684\u610f\u4e49\u5373\u53ef\n\n\u987a\u5e26\u8bf4\u4e00\u53e5\uff0c\u6211\u7684\u6570\u4f4ddp\u65b9\u6cd5\u53ef\u80fd\u548c\u4e3b\u6d41\u4e0d\u540c\uff0c\u662f\u4e0d\u8003\u8651\u524d\u5bfc0\u7684\uff0c\u4ec5\u4f5c\u53c2\u8003\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u72b6\u6001d[i][j]\u4e3a\u8fd8\u8981\u586bi\u4f4d\uff0c\u4e0a\u4e00\u4f4d\u5728AC\u81ea\u52a8\u673a\u7684j\u53f7\u8282\u70b9\n\n\u8f6c\u79fb\u4e0d\u5fc5\u591a\u8bf4\uff0c\u4e0b\u9762\u4ee3\u7801\u4e5f\u6709\n\n\u6c42\u7b97\u65f6\uff0c\u6211\u4eec\u5148\u628an\u52a01(\u5bf9\u4e8en\u5927\u7684\u60c5\u51b5\u7528\u7279\u5224\u5904\u7406)\uff0c\u7136\u540e\u8003\u8651\u533a\u95f4[1, n)\u6709\u591a\u5c11\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\n\n\u5206\u4e3a2\u7c7b\uff1a\n\n1. \u4f4d\u6570\u4e0d\u8db3n\u7684\u4f4d\u6570\uff1a\u679a\u4e3e\u4f4d\u6570\uff0c\u679a\u4e3e\u6700\u9ad8\u4f4d\uff0c\u76f4\u63a5\u505a\u5373\u53ef\n\n2. \u4f4d\u6570\u8fbe\u5230\u4e86n\u7684\u4f4d\u6570\uff1a\u679a\u4e3e\u4ece\u9ad8\u5230\u4f4e\u7b2c\u51e0\u4f4d\u5f00\u59cb\u4e0en\u4e0d\u540c\uff0c\u679a\u4e3e\u4e0b\u4e00\u4f4d\u5373\u53ef\uff0c\u6b64\u65f6\u8981\u5224\u65adn\u7684\u524d\u9762\u90a3\u4e9b\u4f4d\u662f\u5426\u5df2\u7ecf\u8fdd\u80cc\u4e86\u6761\u4ef6\n\n### Part 3\n\u4e00\u4e9b\u7ec6\u8282\n\n\u9996\u5148\uff0c\u7ed9\u4f60\u7684\u4e32\u53ef\u80fd\u6709\u4e00\u4e9b\u6570\u7801\u4e0d\u5305\u542b\uff0c\u4f46[1, n]\u8303\u56f4\u7684\u6570\u5305\u542b\u8fd9\u4e9b\u6570\u7801\u3002\u6240\u4ee5\u6211\u4eec\u9884\u5148\u628a[0, 9]\u7684\u6bcf\u4e2a\u6570\u7801\u90fd\u52a0\u8fdb\u81ea\u52a8\u673a\u91cc\n\n(\u5982\u679c\u4e0d\u7406\u89e3\uff0c\u770b\u4e00\u4e9b\u8fd9\u7ec4\u6837\u4f8b\uff1a 10 1 2)\n\n\u5176\u6b21\uff0c\u5728\u6211\u7684\u4ee3\u7801\u4e2d\uff0c\u6570\u4f4d\u662f\u4ece\u4f4e\u5230\u9ad8\u5b58\u7684\uff0c\u548c\u9ad8\u7cbe\u5ea6\u52a0\u6cd5\u7c7b\u4f3c\n\n\u5176\u4e2dTr\u8868\u793atrie\u6811\u8fb9\uff0ctr\u8868\u793atrie\u56fe\u8fb9\uff0cfail\u8868\u793afail\u6307\u5411\u8fb9\n\n\u7528\u6b64\u79cd\u65b9\u6cd5\u6ce8\u610f\u81ea\u52a8\u673a\u522b\u53ea\u5f001505\uff0c1515\u6bd4\u8f83\u597d(\u867d\u7136\u597d\u50cf\u4e5f\u6ca1\u5173\u7cfb)\n\n### Part 4\n\u4ee3\u7801\n```\n#include <cstdio>\n#include <iostream>\n#include <queue>\n#include <cstring>\nusing namespace std;\nconst int mod = 1000000007;\nint tr[15005][10], Tr[15005][10], fail[15005], e[15005], n, cnt;\nint dig[1505], P[15005], ok[1505];\nlong long d[1505][3505];\nchar s[15005];\nqueue <int> q;\nvoid insert(bool is)//is\u662f\u4e3a\u4e86\u65b9\u4fbf\u4ee3\u7801\uff0c0\u8868\u793a\u662f\u989d\u5916\u6dfb\u52a0\u7684\u6570\u7801\uff0c1\u8868\u793a\u662f\u7981\u6b62\u7684\u4e32 \n{\n\tint i, p = 0, N = strlen(s);\n\tfor(i = 0; i < N; i++)\n\t{\n\t\tint k = s[i] - '0';\n\t\tif(!tr[p][k]) tr[p][k] = ++cnt;\n\t\tp = tr[p][k];\n\t}\n\tif(is) e[p] = 1;\n}\nvoid build_fail()\n{\n\tint i;\n\tmemcpy(Tr, tr, sizeof(tr));\n\tfor(i = 0; i < 10; i++)\n\t\tif(tr[0][i]) q.push(tr[0][i]);\n\twhile(q.size())\n\t{\n\t\tint t = q.front();\n\t\tq.pop();\n\t\tfor(i = 0; i < 10; i++)\n\t\t\tif(tr[t][i])\n\t\t\t\tfail[tr[t][i]] = tr[fail[t]][i], q.push(tr[t][i]);\n\t\t\telse\n\t\t\t\ttr[t][i] = tr[fail[t]][i];\n\t}\n}\nvoid expand(int nd)//\u67d0\u70b9\u6307\u5411\u7684\u662f\u7981\u6b62\u4e32\uff0c\u90a3\u5b83\u4e5f\u662f\u7981\u6b62\u4e32 \n{\n\tif(e[fail[nd]]) e[nd] = 1;\n\tfor(int i = 0; i < 10; i++) if(Tr[nd][i]) expand(Tr[nd][i]);\n}\nvoid Read()//\u8bfb\u5165 \n{\n\tscanf(\"%s\", s);\n\tn = strlen(s);\n\tfor(int i = 0; i < n; i++) dig[n - i - 1] = s[i] - '0';\n}\nvoid Act()//\u5904\u7406\uff0cok\u8868\u793a\u524d\u9762\u90a3\u4e9b\u4f4d\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\uff0cP\u8868\u793a\u524d\u9762\u90a3\u4e9b\u4f4d\u4f1a\u5728AC\u81ea\u52a8\u673a\u4e0a\u5230\u54ea\u91cc \n{\n\tint p = 0;\n\tok[n] = 1;\n\tfor(int i = n - 1; i >= 0; i--) p = tr[p][dig[i]], P[i] = p, ok[i] = (ok[i + 1] && !e[P[i]]);\n}\nlong long calc(int x, int u)//\u8ba1\u7b97d\u7684\u503c\uff0c\u6ce8\u610f\u8bb0\u5fc6\u5316 \n{\n\tif(x == 0) return !e[u];\n\tif(d[x][u] != -1) return d[x][u];\n\tlong long Ans = 0;\n\tfor(int i = 0; i <= 9; i++)\n\t\tif(tr[u][i] && !e[tr[u][i]])\n\t\t\tAns = (Ans + calc(x - 1, tr[u][i])) % mod;\n\treturn d[x][u] = Ans;\n}\nlong long solve()//\u4e3b\u4f53\u51fd\u6570 \n{\n\tint i, j;\n\tlong long Ans = 0;\n\tmemset(d, -1, sizeof(d));\n\tfor(i = 1; i < n; i++)//\u4e0d\u8db3n\u4f4d \n\t\tfor(j = 1; j <= 9; j++)\n\t\t\tAns = (Ans + calc(i - 1, tr[0][j])) % mod; \n\tfor(i = n - 1; i >= 0; i--)//\u8fbe\u5230n\u4f4d \n\t\tfor(j = (i == n - 1) ? 1 : 0; j < dig[i]; j++)\n\t\t\tif(ok[i + 1] && tr[P[i + 1]][j] && !e[tr[P[i + 1]][j]])\n\t\t\t\tAns = (Ans + calc(i, tr[P[i + 1]][j])) % mod;\n\treturn Ans;\n}\nint main(int argc, char **argv)\n{\n\tint N; \n\tRead();\n\tfor(int i = 0; i <= 9; i++)//\u6dfb\u52a0\u989d\u5916\u7684\u6570\u7801 \n\t\ts[0] = i + '0', s[1] = '\\0', insert(0);\n\tscanf(\"%d\", &N);\n\twhile(N--)\n\t{\n\t\tscanf(\"%s\", s);\n\t\tinsert(1);\n\t}\n\tbuild_fail();\n\texpand(0);\n\tAct();\n\tprintf(\"%lld\\n\", solve() + ok[0]);//ok[0]\u4e3a\u7279\u5224n\u672c\u8eab \n\treturn 0;\n}\n```",
        "postTime": 1554123378,
        "uid": 47140,
        "name": "\u65af\u8302",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3311 \u3010[SDOI2014]\u6570\u6570\u3011"
    }
]