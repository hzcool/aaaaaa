[
    {
        "content": "emmmm\u5148%\u4e00\u4e0b\u697c\u4e0b\u3002\n\n\u7136\u540e\u8fd9\u4e2a\u9898\u76ee\u8fd8\u662f\u633a\u5de7\u5999\u7684\uff0c\u8003\u5bdf\u8f6c\u5316\u601d\u60f3\u3002\n\n\u7531\u4e8e\u4e0d\u80fd\u66b4\u529b\u679a\u4e3e\u4e24\u6761\u76f4\u7ebf\uff0c\u6211\u4eec\u8003\u8651\u600e\u6837\u7684\u60c5\u51b5\u4f1a\u4f7f\u5f97\u4e24\u6761\u76f4\u7ebf\u76f8\u4ea4\u4e8e\u5706\u5185\u3002\n\n\u53d1\u73b0\u53ea\u6709\u8fd9\u79cd\u60c5\u51b5\uff1a\u4e24\u6761\u7ebf\u4e0e\u5706\u76844\u4e2a\u4ea4\u70b9\u76f8\u95f4\u6392\u5217\u3002\n\n\u5982\u56fe\uff1a\n\n ![](https://cdn.luogu.com.cn/upload/pic/11494.png) \n\n\u4e8e\u662f\u628a\u5706\u62c9\u6210\u7ebf\u6bb5\u540e\u5c31\u53ef\u4ee5\u8f6c\u5316\u4e3a\u7ebf\u6bb5\u4e0a\u7684\u95ee\u9898\u3002\n\n\u81f3\u4e8e\u63a5\u4e0b\u6765\u600e\u4e48\u505a\uff0c\u6211\u4eec\u5c06\u5706\u62c9\u6210\u4e00\u6761\u76f4\u7ebf\u4ee5\u540e\uff0c\u628a\u76f4\u7ebf\u4e0e\u5706\u7684\u4ea4\u70b9\u6807\u8bb0\u51fa\u6765\uff0c\u53d1\u73b0\u4e0a\u9762\u6709\u5f88\u591a\u5bf9\u70b9\uff08\u5c31\u662f\u67d0\u6761\u76f4\u7ebf\u4e0e\u5706\u7684\u4e24\u4e2a\u4ea4\u70b9\uff09\u3002\u7136\u540e\u5047\u5982\u628a\u6bcf\u4e00\u5bf9\u70b9\u90fd\u8fde\u8d77\u6765\uff0c\u4f1a\u53d1\u73b0\u76f8\u5f53\u4e8e\u6c42\u6709\u4ea4\u96c6\u7684\u533a\u95f4\u5bf9\u6570\u3002\u5177\u4f53\u53ef\u4ee5\u624b\u52a8\u6a21\u62df\u4e00\u4e0b\u3002\n\n\u7136\u540e\u6211\u4eec\u9700\u8981\u5feb\u901f\u6c42\u51fa\u8fd9\u4e2a\u6709\u4ea4\u96c6\u7684\u533a\u95f4\u5bf9\u6570\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002\n\n\u4ee3\u7801\u4ec0\u4e48\u7684\u89c1\u6211\u7684blog\uff1a[\u94fe\u63a5](http://blog.csdn.net/bestfy/article/details/78700881)\n",
        "postTime": 1512400504,
        "uid": 19722,
        "name": "fy0123",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2950 \u3010[USACO09OPEN]\u725b\u7ee3Bovine Embroidery\u3011"
    },
    {
        "content": "[\u601d\u8def\u6765\u81ea\u5df2\u53d1\u5e03\u7684\u5927\u4f6c%% \u8fdb\u884c\u4e86\u5177\u4f53\u7684\u89e3\u91ca]\n\u9898\u76ee\u8981\u6c42\u4ea4\u70b9\u7684\u4e2a\u6570\u6211\u4eec\u753b\u4e2a\u56fe\u6765\u770b\u4e00\u4e0b\n![\u56fe\u7247\u8bf4\u660e](https://uploadfiles.nowcoder.com/images/20190806/978569483_1565100923976_F7F0BBDB094D0B83D7561FC5EC2130D7 \"\u56fe\u7247\u6807\u9898\") \n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5f53\u6211\u4eec\u56fa\u5b9a\u67d0\u4e00\u70b9\u4e3a\u8d77\u70b9\u5728\u5706\u5468\u4e0a\u8fdb\u884c\u679a\u4e3e\n\n\u4e24\u6761\u7ebf\u6709\u4ea4\u70b9\u7684\u6761\u4ef6\u662f \u4e24\u6761\u7ebf\u7684\u7aef\u70b9\u662f\u63d2\u7740\u7684 \n\n\u5c31\u7528\u4e0a\u9762\u90a3\u4e2a\u56fe\u4ee5\u5706\u5728X\u8d1f\u534a\u8f74\u7684\u4ea4\u70b9\u4e3a\u8d77\u70b9 \u9ec4\u8272\u548c\u7eff\u8272\u7ebf\u7684\u7aef\u70b9\u662f\u63d2\u7740\u7684 \u800c\u9ec4\u8272\u4e0e\u7ea2\u8272\u7684\u6ca1\u6709 \u6240\u4ee5\u4f60\u5c31\u53ef\u4ee5\u53d1\u73b0\u6211\u521a\u521a\u8bf4\u7684\u662f\u6709\u9053\u7406\u7684 \n\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\uff08\u5176\u4ed6\u4f60\u559c\u6b22\u7684\u4e5f\u53ef\u4ee5\uff09\u8fdb\u884c\u7ef4\u62a4\n\n\u4e4b\u524d\u5728\u901a\u8fc7\u63a8\u9053\u516c\u5f0f\u6c42\u51fa\u4e24\u4e2a\u7aef\u70b9\u7684\u5750\u6807\u5c31\u53ef\u4ee5\u4e86 \uff08\u4ee3\u7801\u4e2d\u6709\u8be6\u7ec6\u8fc7\u7a0b\uff09\n\n\u7136\u540e\u5c31\u662f\u5316\u66f2\u4e3a\u76f4 \u6211\u662f\u5148\u5c06X\u4e0a\u4e0b\u534a\u8f74\u5206\u5f00 \u518d\u5206\u522b\u6309\u4ece\u5c0f\u5230\u5927\u548c\u4ece\u5927\u5230\u5c0f\u6392\n\n```\n#include<iostream>\n#include<stdio.h>\n#include<algorithm>\n#include<string.h>\n#include<queue>\n#include<stack>\n#include<cmath>\n#define LL long long\nusing namespace std;\ninline void read(LL &x){\n\tx=0;LL f=1;char c=getchar();\n\twhile(c>'9'||c<'0'){if(c=='-') f=-1;c=getchar();\t}\n\twhile(c>='0'&&c<='9') x=(x<<1)+(x<<3)+(c^48),c=getchar();\n\tx*=f;\n}\nstruct node{\n\tdouble x,y;\n\tLL num;\n}e[100050];\nLL n;\ndouble a,b,c,d;\ninline double Y(double X)\n{\n\treturn (double)(-a*X-c)*1.0/b;\n}\ninline LL cmpy(node a,node b)\n{\n\treturn a.y < b.y;\n}\ninline LL cmpu(node a,node b)\n{\n\treturn a.x>b.x;\n}\ninline LL cmpd(node a,node b)\n{\n\treturn a.x<b.x;\n}\ninline LL lowbite(LL k)\n{\n\treturn k&(-k);\n}\nLL N;\nLL tr[100500];\ninline void add(LL pos,LL v)\n{\n\tfor(LL i=pos;i<=N;i+=lowbite(i))\n\t{\n\t\ttr[i]+=v;\n\t}\n}\ninline LL query(LL pos)\n{\n\tLL res=0;\n\tfor(LL i=pos;i>0;i-=lowbite(i))\n\t{\n\t\tres+=tr[i];\n\t}\n\treturn res;\n}\nLL v[50010];\nint main()\n{\n\tread(n);\n\tscanf(\"%lf\",&d);\n\tN=n*2;\n\tLL k=0;\n\tfor(LL TT=1;TT<=n;TT++)\n\t{\n\t\tscanf(\"%lf\",&a);\n\t\tscanf(\"%lf\",&b);\n\t\tscanf(\"%lf\",&c);\n\t\t//ax+by+c=0;\n\t\t//x*x+y*y=d*d\n\t\t//y=(-ax-c)/b\n\t\t//x*x+(ax*ax+2*a*c*x+c*c)/b*b = d*d\n\t\t//x*x*b*b + a*a*x*x + 2*a*c*x = d*d*b*b - c*c\n\t\t//(a*a+b*b)*x*x + 2*a*c*x = d*d*b*b - c*c\n\t\t//(a*a+b*b)*x*x + 2*a*c*x +(c*c - d*d*b*b) = 0\n\t\tif(a==0)\n\t\t{\n\t\t\t//by+c=0\n\t\t\te[TT*2-1].y = (-c)*1.0/b;\n\t\t\te[TT*2-1].x = sqrt(d*d-e[TT*2-1].y);\n\t\t\te[TT*2-1].num = TT;\n\t\t\te[TT*2].y = (-c)*1.0/b;\n\t\t\te[TT*2].num = TT;\n\t\t\te[TT*2].x = -sqrt(d*d-e[TT*2].y);\n\t\t\tif(e[TT*2-1].y < 0) k++;\n\t\t\tif(e[TT*2].y < 0) k++;\n\t\t\tcontinue;\n\t\t}\n\t\tif(b==0)\n\t\t{\n\t\t\t//ax+c=0 \n\t\t\te[TT*2-1].x = (-c)*1.0/a;\n\t\t\te[TT*2-1].y = sqrt(d*d-e[TT*2-1].x);\n\t\t\te[TT*2-1].num = TT;\n\t\t\t\n\t\t\te[TT*2].x = (-c)*1.0/a;\n\t\t\te[TT*2].y = -sqrt(d*d-e[TT*2].x);\n\t\t\te[TT*2].num = TT;\n\t\t\tif(e[TT*2-1].y < 0) k++;\n\t\t\tif(e[TT*2].y < 0) k++;\n\t\t\tcontinue;\n\t\t}\n\t\tLL A=a*a+b*b;\n\t\tLL B=2*a*c;\n\t\tLL C=c*c-d*d*b*b;\n\t\tLL delta=B*B-4*A*C;\n\t\tif(delta<=0) continue;\n\t\t\n\t\te[TT*2-1].x = (-B+sqrt(delta))*1.0/(2*A);\n\t\te[TT*2-1].y = Y(e[TT*2-1].x);\n\t\te[TT*2-1].num = TT; \n\t\t\n\t\tif(e[TT*2-1].y < 0) k++;\n\t\t\n\t\te[TT*2].x = (-B-sqrt(delta))*1.0/(2*A);\n\t\te[TT*2].y = Y(e[TT*2].x);\n\t\te[TT*2].num = TT; \n\n\t\tif(e[TT*2].y < 0) k++;\n\t}\n\tstable_sort(e+1,e+1+n*2,cmpy);\n\t\n//\tfor(LL i=1;i<=N;i++)\n//\tcout<<e[i].x<<\"  \"<<e[i].y <<\" \" <<e[i].num<<\" Y1Y\"<<endl;\n//    cout<<endl;\n    \n\tstable_sort(e+1,e+1+k,cmpd);\n\t\n//\tfor(LL i=1;i<=N;i++)\n//\tcout<<e[i].x<<\"  \"<<e[i].y <<\" \" <<e[i].num<<\" Y2Y\"<<endl;\n//    cout<<endl;\n    \n\tstable_sort(e+1+k,e+1+n*2,cmpu);\n\tLL ans=0;\n\tfor(LL i=1;i<=N;i++)\n\t{\n//\t\tcout<<e[i].x<<\"  \"<<e[i].y <<\" \" <<e[i].num<<\" YYY\"<<endl;\n        if(e[i].num == 0) continue;\n//\t\tcout<<v[e[i].num]<<endl;\n\t\tif(v[e[i].num]==0)\n\t\t{\n\t\t\tv[e[i].num]=i;\n\t\t\tadd(i,1);\n\t\t}\n\t\telse\n\t\t{\n//\t\t\tcout<<query(i)<<\" \"<<query(v[e[i].num])<<endl;\n\t\t\tLL tmp=(query(i)-query(v[e[i].num]));\n\t\t\tadd(v[e[i].num],-1);\n//\t\t\tif(tmp<=0) continue;\n\t\t\tans+=tmp;\n\t\t}\n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1565101415,
        "uid": 114556,
        "name": "SimonSu",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2950 \u3010[USACO09OPEN]\u725b\u7ee3Bovine Embroidery\u3011"
    },
    {
        "content": "[http://www.cnblogs.com/thmyl/p/7352721.html](http://www.cnblogs.com/thmyl/p/7352721.html)\n\n\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n#define N 100010\nint n,num,c[N],vis[N];\nlong long ans,d;\nconst double eps=1e-9;\nstruct node{\n    double ct;\n    int id;\n}p[N];\nbool cmp(node x,node y){\n    return x.ct-y.ct>eps;\n}\nint lowbit(int x){return x&(-x);}\nvoid update(int p,int x){\n    while(p<=2*n){\n        c[p]+=x;\n        p+=lowbit(p);\n    }\n}\nlong long query(int p){\n    long long sum=0;\n    while(p){\n        sum+=c[p];\n        p-=lowbit(p);\n    }\n    return sum;\n}\nint main(){\n    //freopen(\"Cola.txt\",\"r\",stdin);\n    scanf(\"%d%lld\",&n,&d);\n    long long a,b,c;\n    for(int i=1;i<=n;i++){\n        scanf(\"%lld%lld%lld\",&a,&b,&c);\n        //cin>>a>>b>>c;\n        if(c*c<d*d*(a*a+b*b)){\n            double tmp=a*a+b*b,tmp2=sqrt(d*d*tmp-c*c);\n            double x1=(a*c+b*tmp2)/tmp;\n            double x2=(a*c-b*tmp2)/tmp;\n            double y1=(b*c-a*tmp2)/tmp;\n            double y2=(b*c+a*tmp2)/tmp;\n            p[++num].ct=atan2(y1,x1);p[num].id=i;\n            p[++num].ct=atan2(y2,x2);p[num].id=i;\n        }\n    }\n    sort(p+1,p+1+num,cmp);\n    for(int i=1;i<=num;i++){\n        if(vis[p[i].id]){\n            ans+=query(i)-query(vis[p[i].id]);\n            update(vis[p[i].id],-1);\n        }\n        else {\n            vis[p[i].id]=i;\n            update(i,1);\n        }\n    }\n    printf(\"%lld\",ans);\n    return 0;\n}\n100\u5206\n```",
        "postTime": 1504360099,
        "uid": 21293,
        "name": "thmyl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2950 \u3010[USACO09OPEN]\u725b\u7ee3Bovine Embroidery\u3011"
    }
]