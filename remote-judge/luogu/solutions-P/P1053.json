[
    {
        "content": "p.s.\u975e\u5e38\u62b1\u6b49\u4e4b\u524d\u7684\u9898\u89e3\u51fa\u73b0\u4e86\u9519\u8bef\uff0c\u5c11\u5224\u65ad\u4e86\u6700\u540e\u4e00\u4f4d\u662f\u4e0d\u662f\u6ee1\u8db3\u8981\u6c42\uff0c\u73b0\u5df2\u66f4\u6b63\uff0c\u611f\u8c22 @G_keng \u540c\u5b66\u70ed\u5fc3\u6307\u51fa\u5e76\u63d0\u4f9bhack\u6570\u636e\u3002 \n\n\n------------\n\n\n\n[\u9898\u76ee](https://www.luogu.org/problemnew/show/P1053)https://www.luogu.org/problemnew/show/P1053\n\n\u8fd9\u4e2a\u9898\u6700\u5927\u7684\u5751\u70b9\u5728\u4e8e\uff1a**m\u4e2a\u4eba\u53ef\u4ee5\u4e0d\u8fde\u7eed\uff01\uff01\uff01\uff01**\n\n~~\u8fd9\u4e2a\u9505\u9898\u76ee\u63cf\u8ff0\u5f97\u80cc\uff0c~~\u63cf\u8ff0\u91ccb1,b2,...bm\u5b9e\u5728\u662f\u592a\u89c4\u5219\u4e86\uff0c\u4f7f\u6211\u4ee5\u4e3a\u64cd\u4f5c\u5fc5\u987b\u5f97\u4ece1\u5f00\u59cb\uff0c\u5e76\u4e14\u8981\u8fde\u7eed...\n\n\u7136\u540e\u5c31\u6ca1\u90a3\u4e48\u96be\u4e86\uff0c\u6211\u4eec\u8003\u8651\uff0c\u628a\u73af\u7834\u6210\u94fe\uff0c\u5047\u8bbe\u6709k\u4e2a\u6570\u5728\u5f53\u524d\u94fe\u548c\u76ee\u6807\u94fe\u4e2d\u7684\u4f4d\u7f6e\u76f8\u540c\uff0c\u90a3\u4e48\u5c31\u6709n-k\u4e2a\u4e0d\u76f8\u540c\u7684\uff0c\u6211\u4eec\u6bcf\u6b21\u64cd\u4f5c\u53ea\u5bf9\u8fd9n-k\u4e2a\u6570\u8fdb\u884c\uff0c\u6211\u4eec\u6700\u4f18\u53ef\u4ee5\u505a\u5230\u6bcf\u64cd\u4f5cx\u4e2a\u6570\uff0c\u5c31\u4e00\u6b21\u6027\u628a\u8fd9x\u4e2a\u6570\u5168\u653e\u5230\u6b63\u786e\u4f4d\u7f6e\u4e0a\uff0c\u6bd4\u5982\u8bf4\uff1a\n\n1 2 3 4 5 6 7 8 9 10 -> 1 8 2 7 5 3 6 4 10 9\n\n\u5148\u901a\u8fc7\uff0810,8,1\uff09-> 8 2 3 4 5 6 7 10 9 1\n\n\u518d\u901a\u8fc7\uff083,5,4,7\uff09 \u5c31\u53ef\u4ee5\u4e86\u3002\n\n\uff08\u6ce8\u610f\u662f\u73af\uff1a8 2 7 5 3 6 4 10 9 1\u548c1 8 2 7 5 3 6 4 10 9\u662f\u4e00\u6837\u7684\uff09\n\n\u8fd9\u6837\u5c31\u505a\u5230\u4e86\u6bcf\u6b21\u53ea\u64cd\u4f5c\u4f4d\u7f6e\u4e0d\u5bf9\u7684\uff0c\u5b9e\u73b0\u4e86\u6700\u5c0f\u5316\u4ee3\u4ef7\u3002\n\n\u6240\u4ee5\uff0c\u7ed3\u8bba\u5c31\u662f\uff1a\u628a\u521d\u59cb\u94fe\u53d8\u6210\u76ee\u6807\u94fe\u7684\u6700\u5c0f\u4ee3\u4ef7\u4e3an-k\u3002\uff08k\u7684\u610f\u4e49\u540c\u4e0a\uff09\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981O(n)\u641e\u51fa\u76ee\u6807\u94fe\u7684\u4e24\u79cd\u60c5\u51b5\uff0c\u7136\u540e\u6bcf\u6b21\u53f3\u79fb\uff08\u5de6\u79fb\uff09\u4e4b\u540e\u4e0e1,2,3,...,n\u4f5c\u5bf9\u6bd4\uff0c\u6c42\u5f97\u6700\u5c0f\u7684n-k\u3002\n\n\u4f46\u8fd9\u6837\u662fO(n^2)\u7684......\n\n\u6211\u4eec\u53ef\u4ee5\u4f18\u5316\uff1a \n\n| **\u521d\u59cb\u94fe** |  **1 2 3 4 5 6**|\n| :----------: | :----------: |\n| **\u76ee\u6807\u94fe** | **4 2 3 1 5 6** |\n| **\u5dee\u503c** | **3 0 0 3 0 0**\n\n\u5dee\u503c\u6307\u7684\u662f\u9700\u8981\u53f3\u79fb\u7684\u6b21\u6570\n\n\u8fd9\u4e2a\u4f8b\u5b50\u4e0b\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e0d\u7ba1\u600e\u4e48\u53f3\u79fb\uff0c\u5dee\u503c\u867d\u53d8\u5316\uff0c\u4f46\u76f8\u540c\u7684\u4e00\u76f4\u76f8\u540c\uff0c\u4e0d\u540c\u7684\u4e00\u76f4\u4e0d\u540c\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u53ea\u641e\u51fa\u4e00\u4e2a\u76ee\u6807\u94fe\uff0cO(n)\u6c42\u4e00\u4e0b\u6b64\u65f6\u7684\u5dee\u503c\uff0c\u7136\u540e\u627e\u51fa\u5176\u4e2d\u76f8\u540c\u4e2a\u6570\u6700\u591a\u7684\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5177\u4f53\u505a\u6cd5\u5c31\u662f\uff1a\u5bf9\u4e8e\u6240\u7ed9\u7684\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7O(n)\u5efa\u4e00\u6761\u94fe\uff0c\u5982\u679c\u5efa\u4e0d\u51fa\u6765\uff0c\u8f93\u51fa-1\u3002\u5efa\u51fa\u6765\u4e4b\u540e\uff0c\u4e0e1,2,3...,n\u548cn,n-1,...2,1\u5206\u522b\u6c42\u4e00\u904d\u5dee\u503c\uff0c\u7136\u540e\u7edf\u8ba1\u6700\u5927\u7684\uff0c\u7136\u540e\uff0c\u5b8c\u4e86\u3002\n\n\n\n------------\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\nusing namespace std;\nconst int Maxn=50010;\nint Dv1[Maxn],Dv2[Maxn];\n//\u5206\u522b\u8868\u793a\u4e0e1,2,...,n\u548cn,n-1,...,2,1\u7684\u5dee\u503c\nint vis[Maxn];\nint c[Maxn];//\u76ee\u6807\u94fe\nint l1[Maxn],l2[Maxn];\nint si=1,n,ans=0;\ninline int read()//\u8bfb\u5165\u4f18\u5316\n{\n    int fl=1,rt=0; char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-') fl=-1; ch=getchar();}\n    while(ch>='0'&&ch<='9'){rt=rt*10+ch-'0'; ch=getchar();}\n    return fl*rt;\n}\nvoid Build()//\u5efa\u76ee\u6807\u94fe\n{\n\tc[1]=1; c[2]=l1[1]; vis[c[1]]=vis[c[2]]=1;\n\tfor(int i=2;i<=n-1;i++)\n\t{\n\t\tif(c[i-1]==l1[c[i]]) c[i+1]=l2[c[i]],vis[c[i+1]]=1;  \n\t\telse if(c[i-1]==l2[c[i]]) c[i+1]=l1[c[i]],vis[c[i+1]]=1;\n\t\telse \n\t\t{\n\t\t\tsi=0;\n\t\t\tprintf(\"-1\\n\"); return ;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++) if(!vis[i]) si=0,printf(\"-1\\n\");\n    //\u524d\u9762\u6ca1\u5224\u65adc[n]\u540c\u5b66\u7684\u9700\u6c42\u662f\u5426\u6ee1\u8db3\uff0c\u8fd9\u91cc\u5224\u65ad\u4e00\u4e0b\u3002\n    if((c[1]==l1[c[n]]&&c[n-1]!=l2[c[n]])||(c[1]!=l1[c[n]]&&c[n-1]==l2[c[n]])) si=0,printf(\"-1\\n\");\n\telse if((c[1]==l2[c[n]]&&c[n-1]!=l1[c[n]])||(c[1]!=l2[c[n]]&&c[n-1]==l1[c[n]])) si=0,printf(\"-1\\n\");\n}\nvoid Simulation()//\u6c42\u7b54\u6848\n{\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tDv1[(c[i]-i+n)%n]++;\n\t\tDv2[(c[n-i+1]-i+n)%n]++;\n\t}\n\tfor(int i=0;i<=n-1;i++) ans=max(ans,max(Dv1[i],Dv2[i]));\n\tprintf(\"%d\\n\",n-ans);\n}\nvoid read_ini()\n{\n\tn=read();\n\tfor(int i=1;i<=n;i++) l1[i]=read(),l2[i]=read();\n\tBuild();\n\tif(si) Simulation();\n}\nint main()\n{\n\tread_ini();\n\treturn 0;\n}\n```\n\n\n------------\n\n\u6700\u540e\u63a8\u8350\u4e00\u4e2appt\uff0c\u5305\u62ecnoip2005\u6240\u6709\u9898\u76ee\u7684\u9898\u89e3 Rp++\nhttps://wenku.baidu.com/view/878beb64783e0912a2162aa7.html?qq-pf-to=pcqq.c2c",
        "postTime": 1528979295,
        "uid": 21596,
        "name": "Forever\u4e36CIL",
        "ccfLevel": 6,
        "title": "P1053 \u7bdd\u706b\u665a\u4f1a"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6211\u4e00\u5f00\u59cb\u770b\u9898\u89e3\u5176\u5b9e\u662f\u4e00\u8138\u61f5\u903c\u7684\uff08\u849f\u84bb\u8868\u793a\u771f\u7684\u770b\u4e0d\u61c2\uff0c\u5927\u4f6c\u60f3\u7b11\u5c31\u7b11\uff09\u3002\n\n\u90a3\u4e48\u5728\u5bf9\u5404\u4f4d\u5927\u4f6c\u6b7b\u7f20\u70c2\u6253\u4e4b\u540e\u7ec8\u4e8e\u641e\u61c2\u4e86\u3002\n\n\u8fd9\u9053\u9898\u5176\u5b9e\u662f\u8fd9\u4e2a\u6837\u5b50\u7684\n\n\u4e00\u5f00\u59cb\u7684\u8bfb\u5165\u4e4b\u540e\u5224\u5b9a\u80fd\u5426\u56f4\u6210\u73af\uff0c\u4e0d\u80fd\u76f4\u63a5\u9000\u3002\n\n\u7136\u540e\u5148\u6c42\u51fa\u6b63\u786e\u7684\u73af\u7684\u6837\u5b50\uff0c\u56e0\u4e3a\u4e0d\u53ef\u80fd\u5b58\u4e0b\u73af\uff0c\u6240\u4ee5\u9ed8\u8ba4\u4ece1\u5f00\u59cb\u65ad\uff0c\u5148\u6b63\u7740\u5b58\u4e00\u904d\u3002\n\n\u90a3\u4e48\u5c31\u662f\u6700\u5173\u952e\u7684\u6bd4\u8f83\u4e86\u8fd9\u4e2a\u5730\u65b9\u6211\u7ed9\u5927\u5bb6\u624b\u52a8\u6a21\u62df\u4e0b\u5e76\u8bf4\u660e\u4e3a\u4ec0\u4e48\u662f\u6240\u6709\u4e0d\u5339\u914d\u7684\u3002\n\n\u6211\u5148\u8bbe\u7f6e\u4e00\u4e2a\u76ee\u6807\u7684\u6570\u5217 1 2 3 4 5\n\n\u90a3\u4e48\u4e00\u5f00\u59cb\u7684\u521d\u59cb\u6570\u5217\u4e3a 1 4 3 5 2\n\n\u9996\u5148\u6211\u4eec\u5c064\u66ff\u6362\u5230\u672c\u8be5\u5728\u7684\u4f4d\u7f6e\n\n1 2 3 4 5\n\n1    3 4 2 5 5\u88ab\u8e22\u51fa\u6765\u4e86\u518d\u627e5\u7684\u4f4d\u7f6e\n\n1    3 4 5 2 2\u53c8\u88ab\u8e22\u51fa\u6765\n\n1 2 3 4 5 \u6700\u540e\u5c31\u6392\u5b8c\u4e86\uff0c\u4e00\u5171\u662f\u4ee3\u4ef73\uff0c\u4e5f\u5c31\u662f\u6240\u6709\u4e0d\u5339\u914d\u7684\u6570\u76ee\n\n\u4f60\u5f88\u5bb9\u6613\u53ef\u4ee5\u8bc1\u660e\uff0c\u6bcf\u6b21\u66ff\u6362\u5c06\u4e00\u4e2a\u4e0d\u5339\u914d\u7684\u66ff\u6362\u5230\u5339\u914d\u7684\u4ee3\u4ef7\u6700\u5c0f\u4e3a1\uff0c\u5e76\u4e14\u65e0\u8bba\u600e\u6837\u7684\u6570\u636e\u90fd\u4f1a\u5f62\u6210\u4e0a\u9762\u7684\u5faa\u73af\u6392\uff0c\u56e0\u4e3a\u5176\u4ed6\u7684\u5df2\u7ecf\u5bf9\u4e0a\u4e86\u6839\u672c\u5c31\u4e0d\u7528\u6362\u3002\n\n\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u662f\u4e0d\u5339\u914d\u7684\u6570\u76ee\u3002\n\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u8fd9\u6837\u4f60\u8fd8\u4f1awa\u5c31\u662f\u56e0\u4e3a\u4f60\u8fd8\u8981\u53cd\u8dd1\u4e00\u904d\n\n\u5339\u914d 1 2 3 4\n\n\u4f60\u7684 4 3 2 1\n\n\u6700\u540e\u7ed3\u679c\u4f1a\u662f4\uff0c\u4f46\u662f\u5176\u5b9e\u4f60\u53d1\u73b0\u8fd9\u4e24\u4e2a\u5728\u73af\u72b6\u6001\u5176\u5b9e\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u5176\u5b9e\u6b63\u89e3\u662f0\uff0c\u8fd9\u5c31\u662f\u4e3a\u5565\u8981\u53cd\u8dd1\u4e00\u8fb9\uff0c\u7b49\u4f1a\u6211\u4f1a\u5728\u89e3\u6cd5\u8bf4\u660e\u4e3a\u4ec0\u4e48\n\n\u90a3\u4e48\u5c31\u5230\u4e86\u5173\u952e\u7684\u89e3\u6cd5\uff0cn^2\u4e0d\u7528\u8bb2\u4e86\u5427\uff0cTLE\u59a5\u59a5\u7684\u3002\u90a3\u4e48\u600e\u4e48\u4f18\u5316\uff1f\n\n\u4f60\u5148\u5bf9\u6bcf\u4e00\u4e2a\u70b9\u5148\u5faa\u73af\uff0c\u7528\u7b97\u51fa\u5b83\u7684\u4f4d\u7f6e\u5230\u6b63\u89e3\u4f4d\u7f6e\u6240\u9700\u79fb\u52a8\u7684\u8ddd\u79bb%n(\u6ce8\u610f\u8d1f\u6570)\uff0c\u5c06\u8bb0\u5f55\u7684spin[]++\u3002\u8fd9\u5c31\u662f\u6c42\u51fa\u6700\u591a\u7684\u76f8\u540c\u7684\u3002\u4e3a\u4ec0\u4e48\uff1f\u7ed9\u4f60\u5341\u5206\u949f\u60f3\u60f3\u60f3\u4e0d\u5230\u518d\u770b\u5427\u3002\n\n\u90a3\u4e48\u63a5\u4e0b\u6765\u8bb2\u4e3a\u5565\uff0c\u56e0\u4e3a\u4f60\u53ef\u4ee5\u624b\u52a8\u505a\u4e24\u4e2a\u73af\uff0c\u4e00\u4e2a\u5927\u70b9\u4e00\u4e2a\u5c0f\u70b9\uff0c\u5916\u5708\u653e\u6b63\u89e3\uff0c\u91cc\u9762\u7684\u5708\u653e\u4e00\u5f00\u59cb\u7684\u5e8f\u5217\u4e5f\u5c31\u662f1-n\u3002\u5148\u628a1\u548c1\u5bf9\u4f4d\uff0c\u90a3\u4e48\u6240\u6709\u672c\u6765\u7684\u6570\u5230\u6b63\u89e3\u8ddd\u79bb\u4e3a0\u7684\u90fd\u4f1a\u5bf9\u4f4d\uff0c\u5bf9\u4f4d\u7684\u6570\u7684\u4e2a\u6570\u4e5f\u5c31\u662fspin\u30100\u3011\u4e2d\u5b58\u7684\u6570\u5b57\uff0c\u7136\u540e\u628a\u91cc\u9762\u7684\u5708\u5411\u53f3\u79fb\u4e00\u4f4d\u3002\u8fd9\u4e0b\u6240\u6709\u4e0e\u6b63\u89e3\u8ddd\u79bb\u552f\u4e00\u7684\u5c31\u5bf9\u4f4d\u5566\uff01\u90a3\u4e48\u5c31\u662fspin[1]\u54af\u3002\u540c\u7406\uff0c\u6c42\u51fa\u6700\u5927spin\u5c31\u662f\u6700\u5c0f\u4e0d\u540c\u7684\u3002\n\n\u4e3a\u5565\u54b1\u8981\u53cd\u8dd1\u4e00\u8fb9\uff0c\u56e0\u4e3a\u4f60\u8fd9\u6837\u53ea\u662f\u53f3\u79fb\uff0c\u4f46\u4f60\u5f88\u660e\u663e\u53ef\u4ee5\u628a\u5708\u5f80\u5de6\u79fb\uff0c\u4e5f\u8bb8\u80fd\u66f4\u5feb\u5339\u914d\uff0c\u4e3e\u4e2a\u6817\u5b50\u5427\u3002\n\n\u8fd9\u662f\u4ee54\u4e3a\u65ad\u70b9\uff08\u6211\u4e0d\u597d\u6784\u9020\u6570\u636e\u8c05\u89e3\u4e0b\uff09\n\n\u76ee\u6807 4 3 2 1\n\n\u5f53\u524d2 3 4 1\n\n\u4f60\u53d1\u73b0 2 \u4e0e\u6b63\u786e\u4f4d\u7f6e\u5dee2 \uff0c4\u4e5f\u662f\uff0c\u4f46\u662f3\u548c1\u5374\u5bf9\u4f4d\u4e86\uff01\u90a3\u4e48\u5c31\u4f1a\u7684\u51fa\u7b54\u6848\u4e3a2\u3002\u5f88\u660e\u663e\u662f\u9519\u7684\uff0c\u56e0\u4e3a\u4f60\u628a\u8fd9\u4e24\u73a9\u610f\u5316\u6210\u73af\u662f\u4e00\u6837\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u53cd\u7740\u6765\n\n\u76ee\u6807  4 1 2 3\n\n\u5f53\u524d  2 3 4 1\n\n\u4f60\u53d1\u73b0\u6240\u6709\u4e0e\u6b63\u786e\u7684\u4f4d\u7f6e\u5dee\u90fd\u4e3a2\uff01\n\n\u4e8e\u662f\u4e0d\u7528\u79fb\u52a8\uff01\uff01\uff01\n\n\u5927\u6982\u5c31\u662f\u8fd9\u4e2a\u610f\u601d\uff0c\u8fd9\u5c31\u662f\u4e3a\u5565\u8981\u53cd\u8dd1\uff0c\u8fd8\u4e0d\u61c2\u79c1\u804a\u6211\u3002\n\n\u4e0a\u4ee3\u7801\u5427\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define MAXN 50000+10\nint a[MAXN],b[MAXN],circle[MAXN],spin[MAXN];\n//\u6211\u81ea\u5df1\u5199\u7684\u9898\u89e3\uff0c\u5982\u679c\u6d1b\u8c37\u56e0\u4e3a\u6709\u6587\u5b57\u6ce8\u91ca\u90fd\u7ed9\u6211\u5224\u6284\u88ad\u5c31\u7edd\u5bf9\u6709\u95ee\u9898\u554a= = \u6211\u53cd\u6b63\u5c31\u62ff\u8fd9\u4e2a\u4ea4\u4e86 \ninline int read()//\u8bfb\u5165\u4f18\u5316 \u4e0d\u7528\u5199 \n{\n    char ch='*';\n    while(!isdigit(ch=getchar()));\n    int num=ch-'0';\n    while(isdigit(ch=getchar()))num=num*10+ch-'0';\n    return num;\n}\nint main()\n{\n    int n;\n    n=read();\n    for(int i=1;i<=n;i++)\n    {    \n        a[i]=read();b[i]=read();\n    }\n    circle[1]=1;\n    circle[2]=a[1];//\u7b2c\u4e00\u4e2a\u70b9\u9ed8\u8ba4\u5207\u73af\u70b9\n    for(int i=1;i<=n;i++)\n    {\n        if(b[a[i]]!=i&&a[a[i]]!=i||a[b[i]]!=i&&b[b[i]]!=i)//\u5224\u65ad\u662f\u5426\u53ef\u884c,\u7531\u4e8e\u662f\u4e2a\u5708\uff0c\u53ef\u9006\uff0c\u6240\u4ee5\u4e24\u6b21\u5224\u5b9a \n        {\n            printf(\"-1\");\n            return 0;\n        }\n        //if(i>1)\n            if(a[circle[i]]==circle[i-1])circle[i+1]=b[circle[i]];    //\u7531\u4e8e\u4f60\u5e76\u4e0d\u77e5\u9053\u8fd9\u4e24\u4e2a\u540c\u5b66\u7684\u5de6\u53f3\uff0c\u6240\u4ee5\u5224\u65ad\u4e00\u4e0b\uff0c\u514d\u5f97\u5efa\u73af\u91cd\u590d\u4e00\u4e2a\u70b9\n            else circle[i+1]=a[circle[i]]; \n    }\n    int ans=n+10;//\u6700\u591an-1,n+10\u6ca1\u95ee\u9898\u4e86 \n    for(int i=1;i<=n;i++)//\u8fd9\u91cc\u5f00\u59cb\u662f\u91cd\u70b9\uff0c\u5c31\u662f\u627e\u65cb\u8f6c\u6b21\u6570\uff0c\u672c\u849f\u84bb\u4e00\u5f00\u59cb\u4e00\u76f4\u6ca1\u7406\u89e3\uff0c\u627e\u5927\u4f6c\u8bb2\u4e86\u597d\u4e45\u624d\u61c2\uff0c\u5982\u679c\u65cb\u8f6c\u6b21\u76f8\u540c\uff0c\u5c31\u53ef\u4ee5\u770b\u4f5c\u4e0e\u5e8f\u5217\u5339\u914d\uff0c\u5373\u4e3a\u4e0d\u7528\u6362\u4f4d\u7f6e\u7684\u4e2a\u6570 \n    {\n        spin[((i-circle[i]+n))%n]++;//\u76f4\u63a5\u819c\u5c31\u53ef\u4ee5\uff0c+n\u628a\u8d1f\u6570\u6539\u8fc7\u6765\uff0c\u6700\u540e\u79fb\u52a8\u6b65\u6570\u4e3a0~n-1\uff1b\n        ans=min(ans,n-spin[((i-circle[i]+n))%n]);//\u7b54\u6848\u662f\u5426\u9700\u8981\u66f4\u65b0 \n    }\n    memset(spin,0,sizeof(spin));//\u91cd\u65b0\u521d\u59cb\u5316\uff0c\u51c6\u5907\u53cd\u8dd1 \n    memset(circle,0,sizeof(circle));\n    circle[0]=1;\n    circle[1]=b[1];\n    for(int i=1;i<=n;i++)\n    {\n        if(b[circle[i]]==circle[i-1])circle[i+1]=a[circle[i]];\n        else circle[i+1]=b[circle[i]];//\u53cd\u8dd1\u76f4\u63a5\u53cd\u8fc7\u6765\uff0cctrl+c&&ctrl+v \n    }\n    for(int i=1;i<=n;i++) \n    {\n        spin[((i-circle[i]+n))%n]++;\n        ans=min(ans,n-spin[((i-circle[i]+n))%n]);//\u53cd\u8dd1\u53cd\u6b63\u6570\u7ec4\u4e0d\u4f1a\u53d8\uff0c\u4e00\u6837\u7684ctrl+c&&ctrl+v\n    }\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1503754419,
        "uid": 52576,
        "name": "moye\u5230\u7897\u91cc\u6765",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1053 \u3010\u7bdd\u706b\u665a\u4f1a\u3011"
    },
    {
        "content": "**\u9996\u5148\u8981\u5410\u7cdf\uff0c\u4e00\u5f00\u59cb\u4ee5\u4e3a\u6bcf\u6b21\u6362\u7684\u4eba\u5fc5\u987b\u662f\u8fde\u7eed\u7684\u3002\u3002\u3002\u3002**\n\n\u672c\u6765\u770b\u4e86\u9898\u5b8c\u5168\u6ca1\u601d\u8def\uff0c\u56e0\u4e3a\u6570\u636e\u592a\u6c34\u5c31\u81ea\u5df1\u624b\u9020\u4e86\u4e2a\u6570\u636e\uff0c\u7136\u540e\u9020\u7740\u9020\u7740\u53d1\u73b0\u662f\u4e2a\u5efa\u4e00\u4e2a\u73af\u518d\u5224\u65ad\u7684\u95ee\u9898\u3002\n\n\u7528\u81ea\u5df1\u624b\u9020\u7684\u4f8b\u5b50\u6765\u8bf4\u660e\u5427\uff1a\n\n```\n6\n3 4\n5 6\n1 5\n1 6\n2 3\n2 4\n```\n\u753b\u51fa\u6765\u5e94\u8be5\u662f\u4e2a\u8fd9\u6837\u7684\u56fe\u3010\u6709\u70b9\u4e11\u6211\u5c3d\u529b\u4e86\u3002\u3002\u3011\uff1a \n![233](https://cdn.luogu.com.cn/upload/pic/41510.png)\n\n\u7136\u540e\u539f\u672c\u7684\u90a3\u4e2a\u5708\u5e94\u8be5\u662f\u8fd9\u6837\u7684\uff1a\n![1](https://cdn.luogu.com.cn/upload/pic/41511.png)\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u8981\u6362\u7684\u4eba\u5c31\u662f\u4e0d\u5728\u5e94\u8be5\u5728\u7684\u4f4d\u7f6e\u7684\u4eba\u3002\n\n\u5176\u5b9e\u6240\u6709\u4e0d\u5728\u5e94\u8be5\u5728\u7684\u4f4d\u7f6e\u7684\u4eba\u90fd\u75281\u7684\u4ee3\u4ef7\u5c31\u53ef\u4ee5\u8fc7\u53bb\uff0c\u56e0\u4e3a\u6240\u6709\u4e0d\u5728\u5e94\u8be5\u5728\u7684\u4f4d\u7f6e\u7684\u4eba\u8fde\u8d77\u6765\u80af\u5b9a\u662f\u4e00\u4e2a\u5708\uff0c\u4e00\u8d77\u6362\u5c31\u53ef\u4ee5\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u6c42\u7684\u7b54\u6848\u5c31\u662f\u6709\u51e0\u4e2a\u4eba\u4e0d\u5728\u5e94\u8be5\u5728\u7684\u4f4d\u7f6e\u3002\n\n\u6211\u7528\u7684\u6df1\u641c\u6765\u628a\u671f\u671b\u5708\u5b58\u5230\u6570\u7ec4\u91cc\uff0c\u628a1\u5b9a\u4e3a\u521d\u59cb\u4f4d\u7f6e\uff0c\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u5728\u4e0b\u9762\u770b\u4ee3\u7801\u3002\n\n------------\n\u7136\u540e\u6211\u672c\u6765\u4ee5\u4e3a\u5c31\u662f\u5b58\u4e24\u4e2a\u6570\u7ec4\uff0c\u5206\u522b\u662f\u521d\u59cb\u5708\u548c\u671f\u671b\u5708\uff0c\u4f9d\u6b21\u6bd4\u8f83\u662f\u5426\u76f8\u540c\u5c31\u53ef\u4ee5\uff0c\u7136\u540e\u5c31\u534e\u4e3d\u4e3d\u7684WA\u4e86\uff0c\u7136\u540e\u6211\u53d1\u73b0\uff0c\u4e0d\u53ea\u662f\u8981\u6bd4\u8f83\u8fd9\u4e24\u4e2a\u6570\u7ec4\uff0c\u56e0\u4e3a\u8fd8\u6709\u9006\u65f6\u9488\u548c\u987a\u65f6\u9488\u7684\u95ee\u9898\u3002\n\n\u8fd8\u662f\u6211\u8fd9\u4e2a\u4f8b\u5b50\uff1a\n                  \n                  \u521d\u59cb\u5708\u5b58\u4e3a\uff1a1 2 3 4 5 6\uff1b\n                  \u671f\u671b\u5708\u5b58\u4e3a\uff1a1 3 5 2 6 4\uff1b\n \n\u8fd9\u6837\u7684\u8bdd\u7b54\u6848\u5c31\u662f5\uff0c\u4f46\u5176\u5b9e\u662f4\uff0c\u56e0\u4e3a\u5982\u679c\u9006\u65f6\u9488\u6765\u5b58\uff1a\n        \n                  \u521d\u59cb\u5708\u53ef\u4ee5\u5b58\u4e3a\uff1a1 6 5 4 3 2\uff1b\n                  \u671f\u671b\u5708\u4f9d\u7136\u5b58\u4e3a\uff1a1 3 5 2 6 4\uff1b\n\u8fd9\u6837\u7684\u8bdd\u7b54\u6848\u5c31\u662f4\u4e86\u3002\n\n\u6240\u4ee5\u5b58\u4e24\u4e2a\u6570\u7ec4\u5b58\u9006\u5e8f\u548c\u987a\u5e8f\u6765\u6bd4\u8f83\uff0c\u53d6\u6700\u5c0f\u503c\u3002\n\n\u6539\u8fc7\u4e4b\u540e\u8fd8\u662f\u534e\u4e3d\u4e3d\u7684WA\u4e86\u3002\u3002\u3002\u3002\u3002\n\n------------\n\u7136\u540e\u6211\u4eec\u8fdb\u4e00\u6b65\u53d1\u73b0\uff0c\u8fd9\u4e2a\u4e0d\u4ec5\u4ec5\u6709\u987a\u65f6\u9488\u8fd8\u662f\u9006\u65f6\u9488\u7684\u95ee\u9898\uff0c\u8fd9\u4e2a\u8fd8\u6709\u4e0d\u5bf9\u9f50\u7684\u95ee\u9898\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\u6211\u7684\u4f8b\u5b50\u5c31\u4e0d\u884c\u4e86\uff0c\u968f\u4fbf\u4e3e\u4e2a\u4f8b\u5b50\u3002\n\n                  \u521d\u59cb\u5708\u4e3a\uff1a1 2 3 4 5 6\uff1b\n                  \u671f\u671b\u5708\u4e3a\uff1a2 3 4 5 6 1\uff1b\n\n\u5982\u679c\u662f\u4e00\u4e00\u533a\u914d\u7684\u8bdd\uff0c\u7b54\u6848\u5e94\u8be5\u662f6\uff0c\u4f46\u5176\u5b9e\u6211\u4eec\u77e5\u9053\uff0c\u53ea\u8981\u5411\u65c1\u8fb9\u8f6c\u4e00\u4e0b\u5c31\u5bf9\u9f50\u4e86\u3002\n\n\u56fe\u793a\u8bf4\u660e\u3010\u8fd9\u56fe\u597d\u50cf\u66f4\u4e11\u4e86\u3002\u3002\u3002\u3011\uff1a\n\n![2](https://cdn.luogu.com.cn/upload/pic/41522.png)\n\n\u89e3\u51b3\u7684\u529e\u6cd5\u5c31\u662f\uff0c\u7528\u4e00\u4e2adis\u6570\u7ec4\uff0c\u6765\u5b58\u6bcf\u4e2a\u70b9\u5230\u5b83\u5e94\u8be5\u5728\u7684\u4f4d\u7f6e\u7684\u8ddd\u79bb\uff0c\u5f53\u51e0\u4e2a\u70b9\u8ddd\u79bb\u76f8\u540c\u65f6\uff0c\u4e5f\u5c31\u662f\u8f6c\u4e00\u4e0b\uff0c\u8fd9\u51e0\u4e2a\u70b9\u5c31\u53ef\u4ee5\u90fd\u5bf9\u9f50\u3002\u6240\u4ee5\u6211\u4eec\u6c42\u51fa\u6700\u591a\u6709\u51e0\u4e2a\u70b9\u76f8\u540c\u8ddd\u79bb\uff0c\u6700\u7ec8\u7b54\u6848\u5c31\u662f\u603b\u6570-\u76f8\u540c\u4eba\u6570\u3002\n\n\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5224\u65ad\u8ddd\u79bb\u65f6\u4f9d\u7136\u8981\u5206\u4e24\u7ec4\uff0c\u987a\u65f6\u9488\u548c\u9006\u65f6\u9488\u90fd\u8981\u5224\u65ad\u4e00\u4e0b\u3002\n\n\u65b9\u6cd5\uff1a\u987a\u65f6\u9488\u65f6\uff0c\u671f\u671b\u5708\u6570\u7ec4\u4e2d\u7b2ci\u4e2a\u4eba\uff0c\u521d\u59cb\u65f6\u5e94\u8be5\u5728b[i],\u6240\u4ee5\u8ddd\u79bb\u4e3a\uff08i-b[i]\uff09,\u4e3a\u4e86\u4f7f\u8ddd\u79bb\u90fd\u57280~n-1\u4e4b\u95f4\uff0c\u5199\u4e3a\uff08i-b[i]+n\uff09%n;\n\n\u9006\u65f6\u9488\u65f6\uff0c\u671f\u671b\u5708\u6570\u7ec4\u4e2d\u7b2ci\u4e2a\u4eba\uff0c\u521d\u59cb\u65f6\u5e94\u8be5\u5728\uff08n-b[i]+1\uff09\u7684\u4f4d\u7f6e\u3010\u8fd9\u91cc\u5176\u5b9e\u662f\u8ba9n\u4f5c\u4e3a\u521d\u59cb\u5708\u7b2c1\u4e2a\u4f4d\u7f6e\u3011\u540c\u7406\uff0c\u5199\u4e3a\uff08n-b[i]+1+n\uff09%n;\n\n\u53e6\u5916\u5224\u65ad\u662f\u5426\u65e0\u89e3\uff1a\u67d0\u4e2a\u4eba\u671f\u671b\u4e00\u5757\u5750\u7684\u4eba\uff0c\u671f\u671b\u4e00\u5757\u5750\u7684\u4eba\u4e0d\u662f\u4ed6\u3002emmm\u6709\u70b9\u7ed5\uff0c\u5c31\u662f\u67d0\u4e2a\u4eba\u671f\u671b\u4e00\u5757\u5750\u7684\u4eba\u4e0d\u60f3\u548c\u4ed6\u5750\u5728\u4e00\u8d77\u3010\u53cd\u6b63\u662f\u4e2a\u60b2\u4f24\u7684\u6545\u4e8b\u3011\n\n\u653e\u4ee3\u7801\uff0c\u7ec6\u8282\u90fd\u6ce8\u91ca\u5728\u4ee3\u7801\u91cc\u3010\u4ee3\u7801\u5f88\u4e11\u5e0c\u671b\u4e0d\u8981\u5acc\u5f03\u3002\u3002\u3011\uff1a\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<string>\n#include<algorithm>\nusing namespace std;\nint n,a[50005],b[50005],c[50005],t,ans;//b\u6570\u7ec4\u6765\u5b58\u671f\u671b\u5708\uff0ca\u548cc\u6765\u5b58\u5e0c\u671b\u5750\u5728\u4e00\u8d77\u7684\u4e24\u4e2a\u4eba \nint deg[50005],dis[50005],sum[50005]; \nvoid dfs(int u,int fa)\n{\n    b[++t]=u;  \n    if((a[u]==1&&c[u]==fa)||(c[u]==1&&a[u]==fa))return;//\u5982\u679c\u4e0b\u4e00\u4e2a\u662f1\u5c31\u8bf4\u660e\u8fd9\u4e2a\u5708\u627e\u5b8c\u4e86\u3010\u627e\u4e86\u4e00\u5708\u56de\u53bb\u4e86\u3011 \n    if(a[u]!=fa)dfs(a[u],u); \n    else dfs(c[u],u);\n}\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++)cin>>a[i]>>c[i];\n    for(int i=1;i<=n;i++)\n        if((c[a[i]]!=i&&a[a[i]]!=i)||(a[c[i]]!=i&&c[c[i]]!=i))//\u5982\u679c\u6211\u5e0c\u671b\u4e00\u5757\u5750\u7684\u4eba\u4e0d\u60f3\u548c\u6211\u4e00\u5757\u5750\uff0c\u5c31\u65e0\u89e3 \n        {cout<<-1<<endl;return 0;}\n    b[1]=1;\n    t=1;\n    dfs(a[1],1); //\u628a1\u8bbe\u4e3a\u7b2c\u4e00\u4e2a\u6570\uff0c\u4ece1\u7684\u4e0b\u4e00\u4e2a\u4eba\u5f00\u59cb\u6df1\u641c \n    for(int i=1;i<=n;i++)\n    {\n        dis[b[i]]=(i-b[i]+n)%n;//\u987a\u65f6\u9488\u5224\u65ad\u8ddd\u79bb \n        sum[dis[b[i]]]++;\t\n    }\n    for(int i=1;i<=n;i++)ans=max(ans,sum[i]); //\u7528sum\u6570\u7ec4\u5b58\u8fd9\u4e2a\u8ddd\u79bb\u7684\u4eba\u6570\uff0c\u53d6\u6700\u5927\u503c \n    memset(sum,0,sizeof(sum));\n    memset(dis,0,sizeof(dis));\n    for(int i=1;i<=n;i++)\n    {\n        dis[b[i]]=(i-(n-b[i]+1)+n)%n;//\u9006\u65f6\u9488\u5224\u65ad\u8ddd\u79bb \n        sum[dis[b[i]]]++;\n    }\n    for(int i=1;i<=n;i++)ans=max(ans,sum[i]); \n    cout<<n-ans<<endl;\n    return 0;\n}\n```\n\n\u8fd8\u6709\u4ec0\u4e48\u4e0d\u6e05\u695a\u6216\u8005\u9519\u8bef\u7684\u5730\u65b9\u6b22\u8fce\u79c1\u4fe1~~\n",
        "postTime": 1541161785,
        "uid": 27059,
        "name": "\u5317\u65b9\u6709\u5c0f\u4ed9\u513f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1053 \u3010\u7bdd\u706b\u665a\u4f1a\u3011"
    },
    {
        "content": "\u8fd9\u9898\u662f\u4e2a\u6a21\u62df\uff0c\u6c42\u671f\u671b\u73af\u4e0e\u73b0\u5728\u73af\uff08\u53731,2\uff0c\u3002\u3002\u3002\uff0cn\u6392\u5217\uff09\u4e0d\u540c\u7684\u4eba\u6570\uff0c\u7b54\u6848\u5c31\u662f\u603b\u4eba\u6570\uff08n\uff09-\u4e0d\u540c\u7684\u4eba\u6570\u5373\u53ef\n\n\u671f\u671b\u73af\u7684\u6784\u5efa \u5c06h[1]=1.h[2]=b[1],h[n]=a[1] ,h[2]\u548ch[n]\u4ea4\u6362\u662f\u65e0\u6240\u8c13\u7684\n\n\u81f3\u4e8e\u5224\u65ad\u4e0d\u540c\u7684\u4eba\u6570 \u5bf9\u4e8e\u7f6e\u6362\u5f97\u5230\u7684\u6570\u5217\uff0c\u627e\u6bcf\u4e2a\u6570\u8ddd\u79bb\u521d\u59cb\u72b6\u6001\u7684\u957f\uff0c\u7edf\u8ba1\u76f8\u540c\u957f\u7684\u4e2a\u6570\u5373\u53ef\u3002\n\n\u4e0d\u8fc7\u4e00\u5f00\u59cb\u8981\u7279\u5224\u4e0b\u662f\u5426\u53ef\u4ee5 \u5982\u679ca\u60f3\u8981b\u5728\u4ed6\u9644\u8fd1\uff0c\u800cb\u4e0d\u60f3\u8981a\u5728\u4ed6\u9644\u8fd1\u90a3\u4e48\u5c31\u4e0d\u80fd\u7684\u76f4\u63a5\u8f93\u51fa-1\n\n\u6570\u636e\u8f83\u591a\u53ef\u4ee5\u5c1d\u8bd5\u4e0b\u8bfb\u5165\u4f18\u5316\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nconst int maxn= 50005;\ninline int read()//\u8bfb\u5165\u4f18\u5316\n{\n    int x=0,w=1;\n    char ch=0;\n    while (ch<'0'||ch>'9')\n    {\n        if (ch=='-') w=-1;\n        ch=getchar();\n    }\n    while (ch>='0'&&ch<='9')\n    {\n        x=(x<<3)+(x<<1)+ch-'0';\n        ch=getchar();\n    }\n    return x*w;\n}\ninline void write(int x)\n{\n    if (x<0)\n    {\n        putchar('-');\n        x=-x;\n    }\n    if (x>9) write(x/10);\nputchar(x%10+'0');\n}\nint ans=0,ans1[maxn],ans2[maxn],h[2*maxn],a[maxn],b[maxn],i,j,k,n,m;\nint main()\n{\n    n=read();\n    for (i=1;i<=n;++i)\n    {\n        a[i]=read();\n        b[i]=read();\n    }\n    for (i=1;i<=n;++i)\n    if ((a[a[i]]!=i && b[a[i]]!=i)||(a[b[i]]!=i&&b[b[i]]!=i))//\u7279\u5224\u662f\u5426\u53ef\u4ee5\u6784\u5efa\u671f\u671b\u73af\n    {\n        printf(\"-1\");\n        return 0;\n    }\n    h[1]=1;//\u521d\u59cb\u5316\n    h[n]=a[1];\n    h[2]=b[1];\n  for (i=3; i<n; i++)\n        if (a[h[i-1]]==h[i-2]) h[i]=b[h[i-1]];//\u6784\u5efa\u671f\u671b\u73af\n        else h[i]=a[h[i-1]];\n    for (i=1;i<=n;++i)\n    {\n        ans1[(h[i]-i+n)%n]++;\n        ans2[(h[i]+i-1)%n]++;//\u7edf\u8ba1\u4e0e\u6bcf\u4e2a\u6570\u8ddd\u79bb\u521d\u59cb\u72b6\u6001\u7684\u957f\n    }\nfor (i=0;i<n;++i)\n{\n    if (ans<ans1[i]) ans=ans1[i];//\n    if (ans<ans2[i]) ans=ans2[i];\n}\n    write(n-ans);//\u8bb0\u5f97\u8981\u628a\u603b\u4eba\u6570-\u4e0d\u540c\u7684\u4eba\u6570\n    return 0;\n}\n```",
        "postTime": 1509677100,
        "uid": 9181,
        "name": "\u5305\u5b50\u5165\u4fb5",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1053 \u3010\u7bdd\u706b\u665a\u4f1a\u3011"
    },
    {
        "content": "## NOIP2005 \u63d0\u9ad8\u7ec4\u2014\u2014\u7bdd\u706b\u665a\u4f1a\n\n\u200b\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$by - Actinoi $\t\n\n$2019/6/22$\n\n\u4e3a\u83b7\u53d6\u6700\u4f73\u9605\u8bfb\u6548\u679c\uff0c\u5efa\u8bae\u8bbf\u95eehttps://www.actinoi.com/2019/06/22/NOIP2005\u63d0\u9ad8\u7ec4\u2014\u2014\u7bdd\u706b\u665a\u4f1a/\t\t\t   \t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\n\u200b\t\u672c\u9898\u6709\u4e00\u4e2a\u5751\uff0c\u90a3\u5c31\u662f\u79fb\u52a8\u7684\u4eba\u4e0d\u9700\u8981\u8fde\u7eed\u3002\u7136\u540e\u3002\u3002\u3002\u77e5\u9053\u8fd9\u4e2a\u5751\u70b9\u4e4b\u540e\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u6700\u4f18\u89e3\uff0c\u90a3\u5c31\u662f\u5316\u73af\u4e3a\u94fe\uff0c\u6784\u5efa\u76ee\u6807\u94fe\u4e0e\u521d\u59cb\u94fe\uff0c\u7136\u540e\u627e\u5230\u76ee\u6807\u94fe\u4e0e\u521d\u59cb\u94fe\u4e2d\u4e0d\u4e00\u6837\u7684\u4eba\u7684\u603b\u6570\uff0c\u7528\u603b\u4eba\u6570 $-$ \u76f8\u540c\u7684\u4eba\u6570\u5c31\u662f\u9700\u8981\u8c03\u6362\u7684\u4eba\u6570\u3002\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u80fd\u591f\u5728 $O(N)$ \u5185\u5b8c\u6210\u64cd\u4f5c\uff0c\u4e0b\u56fe\u53ef\u4ee5\u505a\u4e00\u4e2a\u66f4\u52a0\u76f4\u89c2\u7684\u8bf4\u660e\u3002\n\n![1.jpg](https://i.loli.net/2019/06/22/5d0e0754e17fb49023.png)\n\n> \u4f8b\u5982\uff0c\u521d\u59cb\u73af\u662f\u5de6\u8fb9\u7684\u8fd9\u4e2a\u73af\uff0c\u76ee\u6807\u73af\u662f\u53f3\u8fb9\u7684\u73af\uff0c\u5982\u7bad\u5934\u6240\u793a\u7684\u8def\u5f84\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 $\uff082,5,6\uff09$ \u7684\u6307\u4ee4 $O(N)$ \u5b8c\u6210\u53d8\u6362\u3002\n\n&nbsp;&nbsp;&nbsp;&nbsp;\u4f46\u662f\uff0c\u73af\u662f\u53ef\u4ee5\u65cb\u8f6c\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u5e76\u4e0d\u77e5\u9053\u600e\u6837\u8f6c\u52a8\u662f\u6700\u4f18\u7684\u3002\u6211\u4eec\u4fbf\u53ef\u4ee5\u8003\u8651\u4ee5\u6bcf\u4e2a\u70b9\u4e3a\u8d77\u70b9\u8fdb\u884c\u641c\u7d22\uff0c\u56e0\u6b64\uff0c\u4e00\u4e2a~~\u7edd\u4f73\u7684~~ $O(N^2)$ \u7684\u7b97\u6cd5\u4fbf\u51fa\u7089\u5566\uff01\n\n&nbsp;&nbsp;&nbsp;&nbsp;\u65e0\u7591\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u4f1a\u8ba9\u6211\u4eec\u770b\u5230\u4e00\u7247 $TLE$ \u3002\u6240\u4ee5\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u8003\u8651\u4f18\u5316\u8fd9\u4e2a\u7b97\u6cd5\u3002\n\n \t\n&nbsp;&nbsp;&nbsp;&nbsp;\u5982\u4e0a\u56fe\uff0c\u6211\u4eec\u4ece $1$ \u5f00\u59cb\u6784\u5efa\u4e00\u6761\u521d\u59cb\u94fe\uff0c\u518d\u6784\u5efa\u4e00\u6761\u76ee\u6807\u94fe\u3002\n\n#### \u521d\u59cb\u94fe\uff1a $1,  2,  3,  4,  5,  6$\n\n#### \u76ee\u6807\u94fe\uff1a $1, 6, 3, 4, 2, 5$\n\n\u6211\u4eec\u5c06\u4e24\u6761\u94fe\u5bf9\u5e94\u7684\u6570\u76f8\u51cf\uff0c\u53d6\u7edd\u5bf9\u503c\uff0c\u4fbf\u53ef\u4ee5\u5f97\u5230\uff1a\n\n#### \u5dee\u503c\uff1a$0, 4, 0, 0, 3, 1 $\n\n\u200b&nbsp;&nbsp;&nbsp;&nbsp;\u5728\u8fd9\u6761\u5dee\u503c\u4e2d\uff0c $0$ \u51fa\u73b0\u7684\u6b21\u6570\u7684\u662f\u6700\u591a\u7684\u3002\u90a3\u4e48\uff0c\u82e5\u679c\u6709\u4e00\u6761\u5dee\u503c $1$ \u51fa\u73b0\u7684\u6b21\u6570\u662f\u6700\u591a\u7684\uff0c\u90a3\u4e48\uff0c\u8fd9\u610f\u5473\u7740\u4ec0\u4e48\uff1f\u65e0\u7591\uff0c\u5c06\u90a3\u6761\u94fe\u8f6c\u52a8 $1$ \u4e2a\u5355\u4f4d\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u5f97\u5230\u6700\u4f18\u89e3\u4e86\uff01\u800c\u5728\u7a0b\u5e8f\u4e2d\uff0c\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u771f\u6b63\u8f6c\u52a8\uff0c\u53ea\u9700\u8981\u7edf\u8ba1\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u5dee\u503c $c$\uff0c\u8fd9\u5c31\u4ee3\u8868\u521d\u59cb\u73af\u5728\u8f6c\u52a8 $c$ \u4e2a\u5355\u4f4d\u4e4b\u540e\uff0c\u5728\u540c\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u4eba\u6570\u4e0e\u76ee\u6807\u73af\u91cd\u5408\u7684\u6700\u591a\uff0c\u7136\u540e\u7528\u603b\u4eba\u6570 $n$ \u51cf\u53bb\u5dee\u503c $c$ \u51fa\u73b0\u603b\u6b21\u6570\uff0c\u4fbf\u662f\u6211\u4eec\u9700\u8981\u8c03\u6362\u7684\u4eba\u7684\u6570w\u91cf\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u60f3\u8981\u7684\u7b54\u6848 $m$ \u5566\uff01\n\n### \u7b49\u7b49\uff01\n\n\u200b&nbsp;&nbsp;&nbsp;&nbsp;\u8fd9\u65e2\u7136\u662f\u4e00\u4e2a\u73af\uff0c\u90a3\u4e48\uff0c\u4f1a\u4e0d\u4f1a\u6784\u5efa\u76ee\u6807\u94fe\u5f97\u5230\u7684\u7ed3\u679c\u4e0d\u4e00\u6837\u5462\uff1f\u7684\u786e\u662f\u8fd9\u6837\u6ef4\u3002\u8fd8\u662f\u4ee5\u4e0a\u56fe\u4e3a\u4f8b\uff0c\u4ece $1$ \u5f00\u59cb\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 $1, 6, 3, 4, 2, 5$ \u4e0e $1, 5, 2, 4, 3, 6$ \u4e24\u6761\u94fe\u3002\u90a3\u8fd9\u600e\u4e48\u529e\u5462\uff1f\u65e2\u7136\u6211\u4eec\u4e0d\u786e\u5b9a\u6211\u4eec\u62e5\u6709\u7684\u76ee\u6807\u94fe\u662f\u987a\u65f6\u9488\u6784\u5efa\u7684\u8fd8\u662f\u9006\u65f6\u9488\u6784\u5efa\u7684\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u5728\u8ba1\u7b97\u5dee\u503c\u65f6\u987a\u65f6\u9488\u4e0e\u9006\u65f6\u9488\u5404\u8dd1\u4e00\u8fb9\uff0c\u7136\u540e\u53d6\u6700\u5927\u503c\u3002\u6211\u4eec\u7528 $target$ \u6570\u7ec4\u5b58\u50a8\u76ee\u6807\u94fe\uff0c\u7528 $ initial $ \u6570\u7ec4\u5b58\u50a8\u521d\u59cb\u94fe\uff0c\u4fbf\u53ef\u4ee5\u7528 $(target[i] - initial[i] + n) % n$ \u987a\u65f6\u9488\u4ece $1 \uff5e n$ \u8dd1\u4e00\u904d\uff0c\u518d\u7528 $(target[i]- initial[n - initial[i] + 1] + n) % n$ \u9006\u65f6\u9488\u4ece $n \uff5e 1$ \u8dd1\u4e00\u904d\u5dee\u503c\uff0c\u7136\u540e\u627e\u51fa\u6700\u5927\u7684\u5dee\u503c\u3002\n\n\u200b&nbsp;&nbsp;&nbsp;&nbsp;\u90a3\u4e48\uff0c\u4ec0\u4e48\u65f6\u5019\u4e0d\u80fd\u7b26\u5408\u6bcf\u4e2a\u540c\u5b66\u7684\u613f\u671b\u5462\uff1f\u5176\u5b9e\uff0c\u53ea\u8981\u6784\u51fa\u76ee\u6807\u73af\uff0c\u4fbf\u4e00\u5b9a\u53ef\u4ee5~~\u7528\u7384\u5b66\u7684\u65b9\u6cd5~~\u4f7f\u6bcf\u4e2a\u540c\u5b66\u6ee1\u610f\u3002\u90a3\u4e48\uff0c\u53ea\u6709\u5728\u6784\u4e0d\u6210\u76ee\u6807\u73af\u7684\u65f6\u5019\u624d\u8f93\u51fa $-1$ \u3002\u90a3\u4ec0\u4e48\u65f6\u5019\u6784\u4e0d\u6210\u76ee\u6807\u73af\u5462\uff1f\u65e0\u7591\uff0c\u7b2c $i$ \u4e2a\u540c\u5b66\u60f3\u6328\u7740\u7684\u90a3\u4e2a\u4eba\u4e0d\u60f3\u6328\u7740\u4ed6~~\uff08\u597d\u4e00\u4e2a\u60b2\u4f24\u7684\u6545\u4e8b\uff09~~\u7684\u65f6\u5019\u624d\u6784\u4e0d\u6210\u73af\uff0c\u6b64\u65f6\u8f93\u51fa $-1$\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u76f4\u63a5\u5224\u65ad\u7b2c $i$ \u4e2a\u540c\u5b66\u5de6\u53f3\u4e24\u8fb9\u662f\u5426\u8fd8\u6709\u7a7a\u5ea7\u5c31\u53ef\u4ee5\uff0c\u5982\u679c\u6ca1\u6709\u7684\u8bdd\uff0c\u90a3\u5c31\u3002\u3002\u3002\u8f93\u51fa $-1$ \u4e86\u3002\n\n\u6700\u540e\u9644\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\nusing namespace std;\nint target[50001], initial[50001], people[50001][3], pluss[50001], minuss[50001]; //\u5b58\u50a8\u76ee\u6807\u94fe\uff0c\u521d\u59cb\u94fe\uff0c\u6bcf\u4e2a\u4eba\u6700\u5e0c\u671b\u76f8\u90bb\u7684\u4e24\u4e2a\u540c\u5b66\u7684\u7f16\u53f7\uff0c\u6b63\u5e8f\u76f8\u540c\u4eba\u6570\u4ee5\u53ca\u9006\u5e8f\u76f8\u540c\u4eba\u6570\ninline int read() {\n    int s = 0, w = 1;\n    char ch = getchar();\n    while(ch < '0' || ch > '9'){\n        if(ch=='-')\n            w=-1;\n    ch=getchar();\n    }\n    while(ch >= '0' && ch <= '9')\n        s = s * 10 + ch - '0', ch = getchar();\n    return s * w;\n}\nint main() {\n    int n;\n    n = read();\n    for (int i = 1; i <= n; i++) //\u8bfb\u5165\u7f16\u53f7\u662f i \u7684\u540c\u5b66\u6700\u5e0c\u671b\u76f8\u90bb\u7684\u4e24\u4e2a\u540c\u5b66\u7684\u7f16\u53f7\n        people[i][1] =read(), people[i][2] = read();\n    target[1] = 1;\n    target[2] = people[1][2]; //\u6784\u5efa\u76ee\u6807\u94fe\n    initial[1] = 1;\n    initial[n] = n; //\u6784\u5efa\u521d\u59cb\u94fe\n    for (int i = 2; i <= n - 1; i++) {\n        initial[i] = i; //\u6784\u5efa\u521d\u59cb\u94fe\n        if (target[i - 1] == people[target[i]][1])\n            target[i + 1] = people[target[i]][2];\n        else if (target[i - 1] == people[target[i]][2])\n            target[i + 1] = people[target[i]][1]; //\u6784\u5efa\u76ee\u6807\u94fe\n        else{\n            cout << -1 << endl; //\u7b2c i \u4e2a\u4eba\u5e0c\u671b\u76f8\u90bb\u7684\u4eba\u65c1\u8fb9\u6ca1\u6709\u7a7a\u4f4d\u4e86\uff0c\u65e0\u6cd5\u6784\u5efa\u76ee\u6807\u94fe\uff08\u4e00\u4e2a\u60b2\u4f24\u7684\u6545\u4e8b\uff09\n            return 0;\n        }\n    }\n    int ans = 0;\n    for(int i = 1; i <= n; i++){\n        pluss[(target[i] - initial[i] + n) % n]++; //\u987a\u65f6\u9488\u4ece 1 ~ n \u8dd1\u4e00\u904d\n        minuss[(target[i]- initial[n - initial[i] + 1] + n) % n]++; //\u9006\u65f6\u9488\u4ece n ~ 1 \u8dd1\u4e00\u904d\u5dee\n    }\n    for (int i = 0; i <= n - 1; i++)\n        ans = max(ans, max(pluss[i], minuss[i])); //\u627e\u5dee\u503c\u4eba\u6570\u6700\u591a\u7684\n    cout << n - ans; //\u603b\u4eba\u6570 - \u4e0d\u7528\u79fb\u52a8\u7684\u4eba\u6570 = \u9700\u8981\u79fb\u52a8\u7684\u4eba\u6570\uff0c\u4e5f\u5c31\u662f\u7b54\u6848\n    return 0;\n}\n```\n\n",
        "postTime": 1561251968,
        "uid": 84217,
        "name": "Actinoi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1053 \u3010\u7bdd\u706b\u665a\u4f1a\u3011"
    },
    {
        "content": "```cpp\n#include<iostream>\nusing namespace std;\nint ans,x[500001],y[500001],n,s[500001],a[500001],b[500001],l1,l2;\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++)\n        cin>>x[i]>>y[i];\n// \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u4e00\u6761\u534e\u4e3d\u7684\u624b\u52a8\u5206\u5272\u7ebf\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014 \n    s[1]=1; s[n]=x[1]; s[2]=y[1];\n    for(int i=3;i<=n-1;i++)\n        if(x[s[i-1]]==s[i-2]) s[i]=y[s[i-1]];\n        else s[i]=x[s[i-1]];\n// \u5efa\u73af\uff0c\u4f30\u8ba1\u4e5f\u53ea\u6709\u6211zz\u7684\u9519\u4e86\u8fd9\u4e2a\u3002\u3002\u3002\u7136\u540e\u60f3\u4e86\u534a\u5929\n// ps(\u4e00\u53e5\u5e9f\u8bdd):\u95ee\u5927\u4f6c\u88ab\u5927\u4f6c\u9119\u89c6\u4e86\u534a\u5929\u3002\u3002\u3002 \n// \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014 \n    for(int i=1;i<=n;i++)\n    {\n        l1=i-1;l2=i+1;\n        if(l1<1) l1=n;\n        if(l2>n) l2=1;\n        if((s[l1]!=x[s[i]] || s[l2]!=y[s[i]]) && (s[l2]!=x[s[i]] || s[l1]!=y[s[i]]))\n        {\n            cout<<\"-1\";\n            return 0;\n        }\n    }\n// \u5224\u65ad\u662f\u4e0d\u662f\u6210\u73af\u4e86\u3002\u3002\u3002\n//\u53ef\u4ee5\u5728\u8fd9\u6b65\u540c\u65f6\u6c42\u51fa\u6709\u591a\u5c11\u4e2a\u4e0d\u7b26\u5408\u4f4d\u7f6e\u7684\u4eba\uff0c\u76f4\u63a5\u51fa\u7ed3\u679c\n// dalao\u53ef\u4ee5try\u4e00try\u3002\u3002\u3002 \n// \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n    for(int i=1;i<=n;i++)\n    {\n        a[(s[i]-i+n)%n]++;\n        b[(s[i]+i-1)%n]++;\n    }\n// o(n)\u505a\u6cd5\u3002\u3002\u3002\u70e7\u8111\u3002\u3002\u3002 \n    for(int i=0;i<=n-1;i++)\n    {\n        if(ans<a[i]) ans=a[i];\n        if(ans<b[i]) ans=b[i];\n    }\n    cout<<n-ans;\n}\n```",
        "postTime": 1508899686,
        "uid": 52892,
        "name": "zzzyc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1053 \u3010\u7bdd\u706b\u665a\u4f1a\u3011"
    },
    {
        "content": "# \u6f47\u6d12\u306e\u5f00\u59cb\n\n\uff08\u53c8\u4e00\u6b21\u5199\u7eaf\u7406\u8bba\u63d0\u4ea4QWQ\uff09\n\n[\u95ee\u9898\u8bc4\u4f30]\n\n \n\n\u6b64\u9898\u6216\u8bb8\u5927\u591a\u6570\u4eba\u4f1a\u89c9\u5f97\u5f88\u9ebb\u70e6\u3002\u6216\u8bb8\u6709\u4eba\u4f1a\u9009\u62e9\u641c\u7d22\u6765\u505a\uff0c\u663e\u7136\uff0c50000\u7684\u6570\u636e\u91cf\u4e0d\u53ef\u80fd\u5141\u8bb8\u641c\u7d22\u4e0d\u8d85\u65f6\u3002\u6216\u8bb8\u6709\u4eba\u4f1a\u7528\u8d2a\u5fc3\uff0c\u4f46\u662f\u5374\u65e0\u4ece\u4e0b\u624b\u3002\n\n\u52a8\u6001\u89c4\u5212\uff1f\u600e\u4e48\u5212\u9636\u6bb5\u66f4\u662f\u4e00\u4e2a\u96be\u9898\u3002\u7136\u800c\uff0c\u6b64\u9898\u5374\u4e0d\u662f\u8003\u5bdf\u9009\u624b\u7684\u7b97\u6cd5\u7684\uff0c\u800c\u662f\u8003\u5bdf\u4f60\u4ece\u9898\u76ee\u4e2d\u627e\u51fa\u57fa\u672c\u6838\u5fc3\u7684\u80fd\u529b\u3002\n\n \n\n  [\u9898\u76ee\u5b9e\u73b0]\n\n\u9898\u76ee\u7ed9\u4f60\u7684\u521d\u59cb\u72b6\u6001\u662f\u4e00\u4e2a\u56de\u8def\uff0c\u4ece\u7b2c\u4e00\u4e2a\u540c\u5b66\u524d\u65ad\u5f00\uff0c\u4e0d\u96be\u770b\u51fa\u8fd9\u662f\u4e00\u4e2a\u4e25\u683c\u7684\u4e0a\u5347\u5e8f\u5217\u3002\u800c\u8f93\u5165\u7684\u6570\u636e\u4e5f\u53ef\u4ee5\u5c06\u4e4b\u6784\u6210\u4e00\u4e2a\u5305\u542b\u6240\u6709\u540c\u5b66\u7684\u56de\u8def\uff0c\u5426\u5219\u5c31\u8fbe\u4e0d\u5230\u6ca1\u4e2a\u4eba\u7684\u613f\u671b\u3002\n\n \n\n\u6211\u4eec\u53ef\u4ee5\u7528\u4e24\u7684\u6570\u7ec4\u6765\u50a8\u5b58\u4e24\u4e2a\u6570\u7ec4\u7684\u72b6\u6001\uff0c\u521d\u59cb\u72b6\u6001\u4e3ast\uff0c\u76ee\u6807\u72b6\u6001\u4e3aen\u3002st[i]=i,\n\ni<=n\u3002\u800c\u8f93\u5165\u6570\u636e\u6211\u95e8\u53ef\u4ee5\u5148\u7528\u4e00\u4e2a\u4e8c\u7ef4E\u6570\u7ec4\u50a8\u5b58\uff0cE[I\uff0c1]\u5373\u8868\u793a\u7b2cI \u4e2a\u4eba\u7684\u7b2c\u4e00\u4e2a\u613f\u671b\u3002\u6211\u4eec\u5c06\u76ee\u6807\u72b6\u6001\u6570\u7ec4en\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u8d4b\u503c\u4e3a1\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u628as[1]\u7684\u7b2c\u4e00\u4e2a\u613f\u671b\u52a0\u5165\u6570\u7ec4\u4e3as[2]\uff0c\u4f9d\u6b21\u6211\u4eec\u53ef\u4ee5\u9010\u4e2a\u52a0\u5165\uff0c\u52a0\u5165\u6ca1\u4e2a\u5143\u7d20\u7684\u65f6\u5019\uff0c\u8fd8\u8981\u5224\u65ad\u4e00\u4e0b\u6bcf\u4e2a\u5143\u7d20\u662f\u5426\u5728\u6570\u7ec4\u5f53\u4e2d\uff0c\u5982\u679c\u5728\uff0c\u90a3\u5c31\u53d6\u7b2c2\u4e2a\u613f\u671b\u3002\u5982\u679c\u7b2c\u4e8c\u4e2a\u613f\u671b\u4e5f\u5728\u6570\u7ec4\u5f53\u4e2d\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u76ee\u6807\u72b6\u6001\u7684\u6570\u7ec4\u4e5f\u5c31\u6784\u9020\u5b8c\u6210\u4e86\u3002\n\n \n\n\u5982\u679c\u6bcf\u4e2a\u4eba\u7684\u613f\u671b\u90fd\u80fd\u5b9e\u73b0\uff0c\u663e\u7136\uff0c\u76ee\u6807\u72b6\u6001\u7684\u6570\u7ec4\u7684\u5143\u7d20\u5fc5\u5b9a\u662fN\uff0c\u800c\u5047\u5982\u4e0d\u662f\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u8f93\u51fa-1\u4e86\u3002\n\n\u6b64\u65f6\uff0c\u95ee\u9898\u5c31\u663e\u7684\u7b80\u5355\u4e9b\u4e86\uff0c\u5982\u4f55\u8ba9\u4e00\u4e2a\u6570\u7ec4\u4ece\u4e00\u4e2d\u72b6\u6001\u53d8\u6210\u53e6\u4e00\u79cd\u72b6\u6001\uff0c\u76f8\u4fe1\u6709\u5f88\u591a\u65b9\u6cd5\uff0c\u53ef\u8fd8\u662f\u4e2a\u9ebb\u70e6\u4e8b\u3002\n\n\u4ece\u76ee\u6807\u72b6\u6001\u8f6c\u6362\u6210\u521d\u59cb\u72b6\u6001\u7684\u6b65\u6570\u662f\u7b49\u540c\u4e8e\u521d\u59cb\u72b6\u6001\u8f6c\u6362\u6210\u76ee\u6807\u72b6\u6001\uff0c\u800c\u6b64\u65f6\u518d\u770b\u770b\u521d\u59cb\u72b6\u6001\u7684\u6570\u7ec4\uff0c\u76f8\u4fe1\u4f60\u5df2\u7ecf\u770b\u51fa\u4e9b\u7591\u7aef\u4e86\u5427\uff01\n\n \n\n\u6392\u5e8f\uff01\uff01\uff01\n\n \n\n\u5bf9\uff0c\u5176\u5b9e\u4ece\u76ee\u6807\u72b6\u6001\u8f6c\u6362\u6210\u521d\u59cb\u72b6\u6001\u7684\u8fc7\u7a0b\u5c31\u662f\u4e00\u4e2a\u6392\u5e8f\u7684\u8fc7\u7a0b\uff0c\u800c\u4e14\u8fd8\u662f\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u5192\u6ce1\u6392\u5e8f\u7684\u8fc7\u7a0b\uff01\n\n\u5230\u4e86\u8fd9\u4e86\uff0c\u95ee\u9898\u5df2\u7ecf\u660e\u4e86\u4e86\uff0c\u9898\u76ee\u6240\u6c42\u5c31\u662f\u6bcf\u6b21\u8fdb\u884c\u8fde\u7eed\u4ea4\u6362\u7684\u4eba\u6570\u603b\u548c\uff0c\u8fd9\u6837\uff0c\u4e00\u4e2a\u770b\u4f3c\u590d\u6742\u7684\u9898\u76ee\u5c31\u53d8\u7684\u5f02\u5e38\u7684\u7b80\u5355\u4e86\uff01\u800c\u9898\u76ee2\u79d2\u7684\u65f6\u95f4\u9650\u5236\u66f4\u662f\u4fdd\u8bc1\u4e86\u5192\u6ce1\u6392\u5e8f\u7ecf\u8fc7\u4e00\u4e9b\u4f18\u5316\u4ee5\u53ca\u526a\u679d\u540e\u4e0d\u4f1a\u8d85\u65f6\u3002\n\n\u4f46\u662f\uff0c\u5343\u4e07\u4e0d\u80fd\u7528\u5176\u4ed6\u7684\u6392\u5e8f\u6cd5\u6765\u89e3\u51b3\u3002\u867d\u7136\u80fd\u8ba9\u4f60\u7684\u7a0b\u5e8f\u53d8\u7684\u66f4\u5feb\uff0c\u5374\u540c\u65f6\u4f60\u4e5f\u5f97\u4e0d\u6b63\u786e\u7684\u89e3\uff01\n\n\n# \u5b8c\u7f8e\u306e\u7ed3\u675f",
        "postTime": 1555485786,
        "uid": 186489,
        "name": "EarthGiao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1053 \u3010\u7bdd\u706b\u665a\u4f1a\u3011"
    },
    {
        "content": "- ### NOIP2005\u63d0\u9ad8\u7ec4\u7b2c 3 \u9898\n\n**\u9898\u9762**\n\nhttps://www.luogu.org/problemnew/show/P1053 \u3002\n\n**\u9898\u76ee\u63cf\u8ff0**\n\n\u4f73\u4f73\u521a\u8fdb\u9ad8\u4e2d\uff0c\u5728\u519b\u8bad\u7684\u65f6\u5019\uff0c\u7531\u4e8e\u4f73\u4f73\u5403\u82e6\u8010\u52b3\uff0c\u5f88\u5feb\u5f97\u5230\u4e86\u6559\u5b98\u7684\u8d4f\u8bc6\uff0c\u6210\u4e3a\u4e86\u201c\u5c0f\u6559\u5b98\u201d\u3002\u5728\u519b\u8bad\u7ed3\u675f\u7684\u90a3\u5929\u665a\u4e0a\uff0c\u4f73\u4f73\u88ab\u547d\u4ee4\u7ec4\u7ec7\u540c\u5b66\u4eec\u8fdb\u884c\u7bdd\u706b\u665a\u4f1a\u3002\u4e00\u5171\u6709 $n$ \u4e2a\u540c\u5b66\uff0c\u7f16\u53f7\u4ece $1$ \u5230 $n$ \u3002\u4e00\u5f00\u59cb\uff0c\u540c\u5b66\u4eec\u6309\u7167 $1,2,\u2026,n$ \u7684\u987a\u5e8f\u5750\u6210\u4e00\u5708\uff0c\u800c\u5b9e\u9645\u4e0a\u6bcf\u4e2a\u4eba\u90fd\u6709\u4e24\u4e2a\u6700\u5e0c\u671b\u76f8\u90bb\u7684\u540c\u5b66\u3002\u5982\u4f55\u4e0b\u547d\u4ee4\u8c03\u6574\u540c\u5b66\u7684\u6b21\u5e8f\uff0c\u5f62\u6210\u65b0\u7684\u4e00\u4e2a\u5708\uff0c\u4f7f\u4e4b\u7b26\u5408\u540c\u5b66\u4eec\u7684\u610f\u613f\uff0c\u6210\u4e3a\u6446\u5728\u4f73\u4f73\u9762\u524d\u7684\u4e00\u5927\u96be\u9898\u3002\n\n\u4f73\u4f73\u53ef\u5411\u540c\u5b66\u4eec\u4e0b\u8fbe\u547d\u4ee4\uff0c\u6bcf\u4e00\u4e2a\u547d\u4ee4\u7684\u5f62\u5f0f\u5982\u4e0b\uff1a\n\n$$(b_1, b_2,... b_{m-1}, b_m)$$\n\n\u8fd9\u91cc $m$ \u7684\u503c\u662f\u7531\u4f73\u4f73\u51b3\u5b9a\u7684\uff0c\u6bcf\u6b21\u547d\u4ee4 $m$ \u7684\u503c\u90fd\u53ef\u4ee5\u4e0d\u540c\u3002\u8fd9\u4e2a\u547d\u4ee4\u7684\u4f5c\u7528\u662f\u79fb\u52a8\u7f16\u53f7\u662f $b_1,b_2,\u2026, b_m$ \u7684\u8fd9 $m$ \u4e2a\u540c\u5b66\u7684\u4f4d\u7f6e\u3002\u8981\u6c42 $b_1$ \u6362\u5230 $b_2$ \u7684\u4f4d\u7f6e\u4e0a\uff0c $b_2$ \u6362\u5230 $b_3$ \u7684\u4f4d\u7f6e\u4e0a\uff0c\u2026\u2026\uff0c\u8981\u6c42 $b_m$ \u6362\u5230 $b_1$\u7684\u4f4d\u7f6e\u4e0a\u3002\u6267\u884c\u6bcf\u4e2a\u547d\u4ee4\u90fd\u9700\u8981\u4e00\u4e9b\u4ee3\u4ef7\u3002\u6211\u4eec\u5047\u5b9a\u5982\u679c\u4e00\u4e2a\u547d\u4ee4\u8981\u79fb\u52a8 $m$ \u4e2a\u4eba\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u8fd9\u4e2a\u547d\u4ee4\u7684\u4ee3\u4ef7\u5c31\u662f $m$ \u3002\u6211\u4eec\u9700\u8981\u4f73\u4f73\u7528\u6700\u5c11\u7684\u603b\u4ee3\u4ef7\u5b9e\u73b0\u540c\u5b66\u4eec\u7684\u610f\u613f\uff0c\u4f60\u80fd\u5e2e\u52a9\u4f73\u4f73\u5417\uff1f\n\n**\u8f93\u5165\u8f93\u51fa\u683c\u5f0f**\n\n- \u8f93\u5165\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u6574\u6570 $n\\;(3 \\leq n \\leq 50000)$ \uff0c\u8868\u793a\u4e00\u5171\u6709 $n$ \u4e2a\u540c\u5b66\u3002\n\n\u5176\u540e $n$ \u884c\u6bcf\u884c\u5305\u62ec $2$ \u4e2a\u4e0d\u540c\u7684\u6b63\u6574\u6570\uff0c\u4ee5\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\uff0c\u5206\u522b\u8868\u793a\u7f16\u53f7\u662f $1$ \u7684\u540c\u5b66\u6700\u5e0c\u671b\u76f8\u90bb\u7684\u4e24\u4e2a\u540c\u5b66\u7684\u7f16\u53f7\uff0c\u7f16\u53f7\u662f $2$ \u7684\u540c\u5b66\u6700\u5e0c\u671b\u76f8\u90bb\u7684\u4e24\u4e2a\u540c\u5b66\u7684\u7f16\u53f7\uff0c\u2026\u2026\uff0c\u7f16\u53f7\u662f $n$ \u7684\u540c\u5b66\u6700\u5e0c\u671b\u76f8\u90bb\u7684\u4e24\u4e2a\u540c\u5b66\u7684\u7f16\u53f7\u3002\n\n- \u8f93\u51fa\u683c\u5f0f\n\u4e00\u4e2a\u6574\u6570\uff0c\u4e3a\u6700\u5c0f\u7684\u603b\u4ee3\u4ef7\u3002\u5982\u679c\u65e0\u8bba\u600e\u4e48\u8c03\u6574\u90fd\u4e0d\u80fd\u7b26\u5408\u6bcf\u4e2a\u540c\u5b66\u7684\u613f\u671b\uff0c\u5219\u8f93\u51fa ``-1``\u3002\n\n**\u8f93\u5165\u8f93\u51fa\u6837\u4f8b**\n\n- \u8f93\u5165\u6837\u4f8b#1\n```\n4\n3 4\n4 3\n1 2\n1 2\n```\n- \u8f93\u51fa\u6837\u4f8b#1\n```\n2\n```\n\n**\u6570\u636e\u8303\u56f4**\n\n\u5bf9\u4e8e $30\\%$ \u7684\u6570\u636e\uff0c$n \\leq 1000$ \uff1b\n\n\u5bf9\u4e8e\u5168\u90e8\u7684\u6570\u636e\uff0c$n \\leq 50000$ \u3002\n\n## \u9898\u89e3\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7ed9\u51fa\u6765\u7684\u76f8\u90bb\u5173\u7cfb\u628a\u8fd9\u4e2a\u73af\u7ed9\u5efa\u51fa\u6765\u3002\n\n\u600e\u4e48\u5efa\u5462\uff1f\u9996\u5148\u5148\u8bbe $a_i$ \u8868\u793a\u8fd9\u4e2a\u73af\u4e2d\u7684\u7b2c $i$ \u4e2a\u4eba\u7684\u539f\u6765\u7684\u7f16\u53f7\uff08$1$~$n$\uff09\uff0c $l_i$ \u548c $r_i$ \u5206\u522b\u662f\u8fd9\u4e2a\u4eba\u60f3\u8981\u7684\u4e0e\u4e4b\u76f8\u90bb\u7684\u4e24\u4e2a\u4eba\u7684\u7f16\u53f7\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5148\u8ba9 $a_n=l_1,a_1=1,a_2=r_1$\u3002\u56e0\u4e3a\u8fd9\u4e2a\u73af\u662f\u53ef\u65cb\u8f6c\u7684qwq\u3002\n\n\u7136\u540e\u5982\u679c $a_{i-2}$ \u662f $a_{i-1}$ \u671f\u671b\u7684\u5de6\u8fb9\uff0c\u90a3\u4e48 $a_i$ \u5c31\u5e94\u662f $a_{i-1}$ \u6240\u671f\u671b\u7684\u53f3\u8fb9\uff0c\u6240\u4ee5 $a_i=r_{a_{i-1}}$\u3002\n\n\u53cd\u4e4b\uff0c\u5982\u679c $a_{i-2}$ \u662f $a_{i-1}$ \u671f\u671b\u7684\u53f3\u8fb9\uff0c\u90a3\u4e48 $a_i$ \u5c31\u5e94\u662f $a_{i-1}$ \u6240\u671f\u671b\u7684\u5de6\u8fb9\uff0c\u6240\u4ee5 $a_i=l_{a_{i-1}}$\u3002\n\n\u5982\u679c\u90fd\u4e0d\u6ee1\u8db3\u7684\u8bdd\u8bf4\u660e\u8fd9\u6837\u7684\u73af\u4e0d\u5b58\u5728\uff0c\u8f93\u51fa $-1$ \u3002\n\n\u8fd9\u4e00\u90e8\u5206\u7684\u4ee3\u7801\u662f\u8fd9\u6837\u7684\uff1a\n```\na[n]=l[1],a[1]=1,a[2]=r[1];\nfor(int i=3;i<=n-1;i++)\n{\n\tif(a[i-2]==l[a[i-1]])\n\t{\n\t\ta[i]=r[a[i-1]];\n\t}\n\telse if(a[i-2]==r[a[i-1]])\n\t{\n\t\ta[i]=l[a[i-1]];\n\t}\n\telse\n\t{\n\t\tprintf(\"-1\");\n\t\treturn 0;\n\t}\n}\n```\n\n\u7136\u540e\u5c31\u662f\u6c42\u7b54\u6848\u8fa3\uff01\n\n\u6211\u4eec\u7528 $dis1_i$ \u8868\u793a\u4ece\u539f\u4f4d\u7f6e\u8d70\u5230\u76ee\u6807\u4f4d\u7f6e\u987a\u65f6\u9488\u8981\u8d70 $i$ \u6b65\u7684\u4eba\u6709\u591a\u5c11\u4e2a\u3002\n\n\u5e76\u4e14\u7528 $dis2_i$ \u8868\u793a\u4ece\u539f\u4f4d\u7f6e\u8d70\u5230\u76ee\u6807\u4f4d\u7f6e\u9006\u65f6\u9488\u8981\u8d70 $i$ \u6b65\u7684\u4eba\u6709\u591a\u5c11\u4e2a\u3002\n\n\u6613\u5f97\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4eba $i$\uff0c\u4ed6\u4f1a\u5bf9 $dis1_{(i-a_i+n)\\;mod\\;n}$ \u4ee5\u53ca $dis2_{(i+a_i+n)\\;mod\\;n}$ \u5747\u4ea7\u751f $1$ \u7684\u8d21\u732e\u3002\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u5b83\u4eec\u7edf\u8ba1\u51fa\u6765\u4e86\u3002\n\n\u4e0b\u9762\u662f\u8fd9\u4e00\u90e8\u5206\u7684\u4ee3\u7801\u3002\n\n```\nfor(int i=1;i<=n;i++)\n{\n\tdis1[(i-a[i]+n)%n]++;\n\tdis2[(i+a[i]+n)%n]++;\n}\n```\n\n\u56e0\u4e3a\u82e5\u6709 $k$ \u4e2a\u4eba\u4e0d\u5728\u76ee\u6807\u4f4d\u7f6e\u4e0a\uff0c\u5219\u9700\u8981 $k$ \u7684\u4ee3\u4ef7\u3002\u6240\u4ee5\u6709\n\n$$ans=n-\\max_{i=0}^{2n} max(dis1_i,dis2_i)$$\n\n\u6c42\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n```\n#include <cstdio>\nint l[1000001],r[1000001];\nint a[1000001],cx[1000001];\nint dis1[1000001],dis2[1000001];\nint max(int x,int y)\n{\n\treturn x>y?x:y;\n}\nint main()\n{\n\tint n=0;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d %d\",&l[i],&r[i]);\n\t}\n\ta[n]=l[1],a[1]=1,a[2]=r[1];\n\tfor(int i=3;i<=n-1;i++)\n\t{\n\t\tif(a[i-2]==l[a[i-1]])\n\t\t{\n\t\t\ta[i]=r[a[i-1]];\n\t\t}\n\t\telse if(a[i-2]==r[a[i-1]])\n\t\t{\n\t\t\ta[i]=l[a[i-1]];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"-1\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tdis1[(i-a[i]+n)%n]++;\n\t\tdis2[(a[i]+i+n)%n]++;\n\t}\n\tint ans=0;\n\tfor(int i=0;i<=n*2;i++)\n\t{\n\t\tans=max(ans,max(dis1[i],dis2[i]));\n\t}\n\tprintf(\"%d\",n-ans);\n\treturn 0;\n}\n```",
        "postTime": 1544932773,
        "uid": 48269,
        "name": "Drinkkk",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1053 \u3010\u7bdd\u706b\u665a\u4f1a\u3011"
    },
    {
        "content": "~~\u5927\u6982\u662f\u6211\u592a\u5f31\u4e86\u5427\uff0c\u6bcf\u7bc7\u9898\u89e3\u90fd\u4e00\u5934\u61f5\u54d4emmm~~\n\n\u9996\u5148\u8fd9\u9053\u9898\u9898\u9762\u53ef\u4ee5\u8bf4\u5f88\u96be\u61c2\u4e86\n\n```\n\u6709n\u4e2a\u540c\u5b66\uff0c\u521d\u59cb\u65f6\u4ece1\uff5en\u5750\u6210\u4e00\u5708\u3002\u6bcf\u4e2a\u540c\u5b66\u6709\u4e24\u4e2a\u6700\u60f3\u5750\u5728\u8fb9\u4e0a\u7684\u540c\u5b66\u3002\n\n\u95ee\u80fd\u5426\u901a\u8fc7\u4ea4\u6362\u90e8\u5206\u4eba\u7684\u5ea7\u4f4d\u6ee1\u8db3\u6240\u6709\u4eba\u7684\u9700\u6c42\u3002\u82e5\u80fd\u6ee1\u8db3\uff0c\u6c42\u4ea4\u6362\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n\u5176\u4e2d\u4ea4\u6362\u7684\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u67d0\u4e00\u6b21\u4ea4\u6362\uff0c\u8ba9\u540c\u5b66a\u5750\u5230\u4e0a\u6b21\u4ea4\u6362\u7ed3\u675f\u540eb\u5750\u7684\u4f4d\u7f6e\u4e0a\uff0cb\u5750\u5230\u4e0a\u6b21\u4ea4\u6362\u7ed3\u675f\u540ec\u7684\u4f4d\u7f6e\u4e0a......\u8ba9\u88ab\u6d89\u53ca\u5230\u7684\u6700\u540e\u4e00\u4f4d\u540c\u5b66\u5750\u5230\u4e0a\u6b21\u7ed3\u675f\u540ea\u5750\u7684\u4f4d\u7f6e\u4e0a\u3002\n\n\u4ee3\u4ef7\u7684\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u6bcf\u6b21\u4ea4\u6362\uff0c\u8fd9\u6b21\u7684\u4ee3\u4ef7\u4e3a\u88ab\u6d89\u53ca\u5230\u7684\u540c\u5b66\u6570\uff0c\u603b\u4ee3\u4ef7\u4e3a\u6bcf\u6b21\u4ea4\u6362\u7684\u4ee3\u4ef7\u4e4b\u548c\u3002\n```\n\u9996\u5148\u6211\u4eec\u62c6\u73af\u6210\u94fe\u3002\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u53cd\u8fc7\u6765\u60f3\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u6c42\u4ea4\u6362\u62101\uff5en\u7684\u5e8f\u5217\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n\u53ef\u4ee5\u60f3\u5230\uff0c\u5176\u5b9e\u53ea\u9700\u8981\u4e00\u6b21\u4ea4\u6362\u5c31\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\uff1a\n\n```\n\u8bbe\u540c\u5b66a\u7684\u7f16\u53f7\u4e3aca\uff0c\u5219\u628aa\u540c\u5b66\u653e\u5230ca\u5ea7\u4f4d;\n\n\u7136\u540e\u628a\u4e4b\u524d\u5750\u5728ca\u53f7\u5ea7\u4f4d\u4e0a\u7684\u540c\u5b66\uff08\u8bbe\u4e3ab\uff09\u8d76\u5230cb\u5ea7\u4f4d......\n\n\u8fd9\u6837\u6bcf\u4e2a\u5750\u9519\u4f4d\u7f6e\u7684\u4eba\uff0c\u90fd\u53ea\u4f1a\u632a\u4e00\u6b21\u4f4d\u7f6e\u3002\n\n\u6240\u4ee5\u8fd9\u79cd\u62c6\u94fe\u65b9\u6848\u7684\u4ee3\u4ef7=\u5750\u9519\u4f4d\u7f6e\u7684\u540c\u5b66\u6570\n```\n~~\u8fd9\u6837\u5c31\u53ef\u4ee5\u7528n\u65b9\u7684\u65f6\u95f4\u89e3\u51b3\u95ee\u9898\u5566\uff01\uff08\u6492\u82b1~~\n\n\u5728n\u65b9\u7684\u89e3\u6cd5\u4e2d\uff0c\u6211\u4eec\u679a\u4e3e\u4e86\u65ad\u70b9\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u65ad\u70b9\uff0c\u7528O(n)\u7684\u65f6\u95f4\u518d\u626b\u4e00\u904d\u3002\n\n\u4f1a\u70b8\u3002\n\n```\n\u60f3\u50cf\u4e24\u4e2a\u624b\u94fe\uff0c\u4e00\u4e2a\u624b\u94fe\u4ece1\u5199\u5230n\uff0c\u53e6\u4e00\u4e2a\u624b\u94fe\u4e71\u5e8f\u3002\n\n\u679a\u4e3e\u65ad\u70b9\uff0c\u5b9e\u9645\u4e0a\u53ea\u662f\u628a\u4e71\u5e8f\u624b\u94fe\u7684\u67d0\u4e2a\u73e0\u5b50\u5bf9\u51c61\u53f7\u73e0\u62ff\u597d\uff0c\u7136\u540e\u628a\u6bcf\u4e2a\u73e0\u5b50\u770b\u4e00\u904d\uff0c\u6570\u4e0d\u540c\u7684\u73e0\u5b50\u6570;\u518d\u628a\u4e71\u5e8f\u624b\u94fe\u7684\u4e0b\u4e00\u4e2a\u73e0\u5b50\u5bf9\u51c61\u53f7\u73e0......\n\n\u5982\u679c\u6709\u4e00\u4e9b\u73e0\u5b50\uff0c\u5b83\u4eec\u5728\u7b2c\u4e00\u6b21\u6570\u73e0\u5b50\u7684\u65f6\u5019\u79bb\u76ee\u6807\u4f4d\u8fd8\u6709x\u4e2a\u73e0\u5b50\uff0c\u90a3\u4e48\u4e0b\u4e00\u6b21\u79bb\u76ee\u6807\u5c31\u4f1a\u8fd8\u6709x-1\u683c......\n\n\u90a3\u4e48\u5b83\u4eec\u8981\u4e48\u540c\u65f6\u5bf9\u4e0a\uff0c\u8981\u4e48\u540c\u65f6\u5bf9\u4e0d\u4e0a\u3002\n\n\u4e8e\u662f\u95ee\u9898\u8f6c\u5316\u6210\u4e86\uff1a\n\n\u968f\u4fbf\u62c6\u4e00\u4e0b\uff0c\u6c42\u6b64\u65f6\u7684 max(dis[])\uff0c\u4e5f\u5c31\u662f\u4e00\u6b21\u6700\u591a\u5bf9\u4e0a\u7684\u73e0\u5b50\u6570\u3002\n\n\u7b54\u6848\u5c31\u662fn=max(dis[])\u7684\u503c\uff0c\u4e5f\u5c31\u662f\u6700\u5c11\u6709\u591a\u5c11\u5bf9\u4e0d\u4e0a\u3002\n```\n~~\uff08\u6492\u82b1\uff5e~~\n```\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\nusing namespace std;\nint f[50007][2]\uff0ca[50007]\uff0cdis[100007]\uff0cb[50007];\nbool used[50007];\nint maxd=0;\nvoid make(int pos,int x){\n    maxd=max(pos,maxd);//\u8bb0\u5f55\u4e00\u4e0b\u6392\u5ea7\u4f4d\u5230\u54ea\u4e86\n    a[pos]=x;used[x]=1;\n    if(!used[f[x][0]]){make(pos+1,f[x][0]);}\n    else if(!used[f[x][1]]){make(pos+1,f[x][1]);}\n    return;\n}\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    //\u9020\u4e71\u5e8f\u94fe\n    //\u9020\u94fe\u7684\u65b9\u6cd5\u5f88\u591a\u5566\uff0c\u968f\u4fbf\u54ea\u79cd\u90fd\u53ef\u4ee5\n    for(int i=1;i<=n;++i){\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        if(f[x][0]){//\u5982\u679cx\u76840\u53f7\u670b\u53cb\u4f4d\u6ee1\u4e86\n            if(f[x][1]){cout<<-1;return 0;}//\u5982\u679cx\u5df2\u7ecf\u6709\u4e86\u4e24\u4e2a\u670b\u53cb\n            f[x][1]=i;\n        }\n        else f[x][0]=i;\n        if(f[y][0]){\n            if(f[y][1]){cout<<-1;return 0;}\n            f[y][1]=i;\n        }\n        else f[y][0]=i;\n    }\n    make(1,1);//\u57281\u53f7\u4f4d\u653e1\u53f7\u540c\u5b66\uff0c\u7136\u540e\u5f80\u4e0b\u9012\u5f52\n    if(maxd!=n){cout<<-1;return 0;}//\u5982\u679c\u9020\u4e0d\u51fa\u957f\u4e3an\u7684\u94fe\uff0c\u90a3\u4e0d\u53ef\u80fd\u53ea\u5750\u4e00\u4e2a\u5708\n    //\n    for(int i=1;i<=n;++i)\n    dis[(a[i]-i+n)%n]++;\n    int ans=0;\n    for(int i=0;i<n;++i)\n    ans=max(ans,dis[i]);\n    //\u7136\u540e\u8fd8\u8981\u50cf\u786c\u5e01\u7ffb\u9762\u4e00\u6837\u7ffb\u4e00\u4e0b\u4e71\u5e8f\u624b\u94fe\n    b[1]=a[1];\n    for(int i=2;i<=n;++i)\n    b[i]=a[n+2-i];\n    //\u7ffb\u4e86\u4e4b\u540e\u518d\u8dd1\u4e00\u6b21\n    memset(dis,0,sizeof(dis));\n    for(int i=1;i<=n;++i)\n    dis[(b[i]-i+n)%n]++;\n    for(int i=0;i<n;++i)\n    ans=max(ans,dis[i]);\n    //\n    cout<<n-ans;\n    return 0;\n}\n```\n\u5173\u4e8e\u7ffb\u9762\uff1a\n\n\u5982\u679c\u4e71\u5e8f\u94fe\u4e3a 1 4 3 2 \uff0c\u5bf9\u6bd4 1 2 3 4\u9700\u8981\u4ee3\u4ef72\n\n\u4f46\u662f\u5982\u679c\u7ffb\u4e00\u4e0b\u5c31\u4e0d\u9700\u8981\u4ee3\u4ef7\u4e86\uff0c\u56e0\u4e3a\u8bfb\u5165\u4e2d\u53ea\u8981\u5750\u5728\u4e00\u8d77\uff0c\u4f46\u6211\u4eec\u5f3a\u884c\u52a0\u4e86\u4ed6\u4eec\u5750\u5de6\u8fb9\u8fd8\u662f\u53f3\u8fb9\u7684\u8981\u6c42\uff0c\u6240\u4ee5\u8981\u53cd\u8fc7\u6765\u518d\u8dd1\u4e00\u904d\u3002",
        "postTime": 1534845094,
        "uid": 48681,
        "name": "qwerta",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1053 \u3010\u7bdd\u706b\u665a\u4f1a\u3011"
    },
    {
        "content": "\u4ed4\u7ec6\u89c2\u5bdf\u53d1\u73b0\uff0c\u6240\u6709\u53ef\u80fd\u7684\u60c5\u51b5\u90fd\u662f\u7531\u5176\u4e2d\u4e00\u79cd\u60c5\u51b5\u8fdb\u884c\u73af\u79fb\u6216\u7ffb\u8f6c\u5f97\u5230\u7684\uff0c\n\n\u6bd4\u5982\u6837\u4f8b\u6709\u4e00\u79cd\u60c5\u51b5\u4e3a:1 4 2 3\n\n\u5176\u4f59\u60c5\u51b5\u4e3a:\n\n3 1 4 2\n\n2 3 1 4\n\n4 2 3 1\n\n3 2 4 1\n\n1 3 2 4\n\n4 1 3 2\n\n2 4 1 3\n\n(\u89c2\u5bdf\u4e00\u4e0b)\n\n\u4ee3\u4ef7\u4e5f\u5c31\u662f\u4e0e\u5f00\u59cb\u4e0d\u76f8\u7b49\u7684\u6570\u7684\u4e2a\u6570\n\n\u6bd4\u5982\u8981\u6392\u62101 4 2 3\n\n\u539f\u5e8f\u52171 2 3 4\n\n\u53ea\u67091\u4e0d\u7528\u79fb\uff0c4 2 3\u90fd\u4e0d\u5728\u76ee\u6807\u5e8f\u5217\u4e0a\uff0c\u56e0\u6b64\u4ee3\u4ef7\u4e3a3\n\n\u56e0\u4e3a\n\u6bd4\u5982\u9047\u5230\u4e00\u4e2a\u4e0d\u5e94\u8be5\u653e\u5728\u539f\u6765\u7684\u4f4d\u7f6e\u4e0a\uff0c\n\n\u5219\u628a\u5b83\u653e\u5230\u76ee\u6807\u4f4d\u7f6e\u4e0a\uff0c\n\n\u4f46\u53c8\u628a\u53e6\u4e00\u4e2a\u5143\u7d20\u6324\u4e86\u51fa\u6765\uff0c\n\n\u5c06\u6324\u51fa\u6765\u7684\u5143\u7d20\u653e\u5230\u76ee\u6807\u4f4d\u7f6e\u4e0a\uff0c\n\n\u53c8\u4f1a\u6709\u5143\u7d20\u88ab\u6324\u51fa\u6765\uff0c\n\n\u7ee7\u7eed\u8fdb\u884c\u76f8\u540c\u7684\u64cd\u4f5c.\u2026\u2026\n\n\u76f4\u5230\u6240\u6709\u5143\u7d20(\u4eba)\u90fd\u5b89\u6392\u597d(\u5fc3\u6ee1\u610f\u8db3)\u4e86\u3002\n\n\u518d\u8ba1\u7b97\u4ee3\u4ef7\uff0c\u5c31\u662f\u4e0a\u8ff0\u7ed3\u8bba\u3002\n\n\n\u4f46\u662f\uff0c\u73af\u79fb\u64cd\u4f5c\u5f88\u8d39\u65f6\uff0cn^2\uff0c\u600e\u4e48\u529e\uff1f\n\n\u5f53\u7136\u4e0d\u80fd\u76f4\u63a5\u79fb\uff0c\u53ef\u4ee5\u8bb0f[i]\u4e3a\u6709f[i]\u4e2a\u5143\u7d20\u8981\u8fdb\u884ci\u6b21\u73af\u79fb\u64cd\u4f5c\u624d\u80fd\u79fb\u5230\u81ea\u5df1\u7684\u4f4d\u7f6e\u4e0a\n\n\u6c42f[i]\u7684\u6700\u5927\u503c\u5c31\u884c\u4e86\n\n\u518d\u7ffb\u8f6c\u505a\u4e00\u6b21\u5c31\u884c\u4e86\n\n\u5224\u65ad\u4e5f\u5f88\u597d\u5224\u65ad\n\nCode:\n```cpp\n#include <iostream>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <queue>\n#include <algorithm>\nusing namespace std;\nint n,i,j,a[50005],b[50005],p[50005],k,f[50005],s,ans,l,vis[50005];\nint main(){\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n        scanf(\"%d %d\",&a[i],&b[i]);\n    k=0;\n    for(i=b[1],l=1;i!=1&&vis[i]==0;)//\u6784\u9020\u67d0\u4e00\u76ee\u6807\u5e8f\u5217\n    {\n        p[++k]=l;\n        vis[i]=1;\n        if(a[i]==l)\n        {\n            l=i;\n            i=b[i];\n        }\n        else\n        {\n            l=i;\n            i=a[i];\n        }\n    }\n    p[++k]=l;\n    if(k!=n)\n    {\n        printf(\"-1\");\n        return 0;\n    }\n    memset(f,0,sizeof(f));\n    for(i=1;i<=n;i++)//\u8ba1\u7b97f[i]\n    {\n        if(p[i]>=i)\n            f[p[i]-i]++;\n        else\n            f[p[i]+n-i]++;\n    }\n    for(i=0;i<n;i++)\n        ans=max(ans,f[i]);\n    k=0;\n    for(i=a[1],l=1;i!=1;)//\u540c\u4e0a\uff0c\u53ea\u4e0d\u8fc7\u8fdb\u884c\u4e86\u7ffb\u8f6c\n    {\n        p[++k]=l;\n        if(a[i]==l)\n        {\n            l=i;\n            i=b[i];\n        }\n        else\n        {\n            l=i;\n            i=a[i];\n        }\n    }\n    p[++k]=l;\n    memset(f,0,sizeof(f));\n    for(i=1;i<=n;i++)\n    {\n        if(p[i]>=i)\n            f[p[i]-i]++;\n        else\n            f[p[i]+n-i]++;\n    }\n    for(i=0;i<n;i++)\n        ans=max(ans,f[i]);\n    printf(\"%d\",n-ans);\n}\n\n```",
        "postTime": 1506007049,
        "uid": 13185,
        "name": "\u53cc\u7ba1\u8367\u5149\u706f",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1053 \u3010\u7bdd\u706b\u665a\u4f1a\u3011"
    },
    {
        "content": "\u53ef\u4ee5\u7528\u8d2a\u5fc3\u6765\u505a\uff0c\u5982\u679c\u77e5\u9053\u539f\u5e8f\u5217\u548c\u76ee\u6807\u5e8f\u5217\uff0c\u7b97\u7b97\u76ee\u6807\u5e8f\u5217\u4e2d\u6709\u51e0\u4e2a\u5143\u7d20\u548c\u539f\u5e8f\u5217\u4e0d\u540c\uff0c\u5c31\u662f\u7b54\u6848\u4e86\u3002\n\n\u6240\u4ee5\u8981\u60f3\u529e\u6cd5\u6784\u9020\u76ee\u6807\u5e8f\u5217\u3002\n\n\u53ef\u4ee5\u968f\u4fbf\u653e\u4e00\u4e2a\u6570\uff0c\u7136\u540e\u5728\u5b83\u7684\u53f3\u8fb9\u653e\u4e0a\u4e00\u4e2a\u4ed6\u5e0c\u671b\u76f8\u90bb\u7684\u6570\uff08\u6709\u4e24\u4e2a\uff0c\u6240\u4ee5\u8981\u5206\u4e24\u79cd\u60c5\u51b5\uff09\u7136\u540e\u5c31\u53ef\u4ee5\u6309\u7167\u8fd9\u6837\u7684\u65b9\u6cd5\u9010\u4e2a\u6784\u9020\u3002\n\n\u73b0\u5728\u6784\u9020\u51fa\u4e86\u76ee\u6807\u5e8f\u5217\uff0c\u4f46\u5b83\u662f\u4e2a\u5708\uff0c\u6240\u4ee5\u8981\u7834\u73af\u6210\u94fe\u6bd4\u8f83\uff0c\u4f46\u8fd9\u6837\u6548\u7387O(n^2)\uff0c\u4f1a\u8d85\u65f6\u3002\n\n\u5176\u5b9e\uff0c\u53ea\u9700\u8981\u77e5\u9053\u6709\u591a\u5c11\u4e2a\u5143\u7d20\u548c\u539f\u5e8f\u5217\u76f8\u540c\uff0c\u5c31\u80fd\u77e5\u9053\u6709\u51e0\u4e2a\u5143\u7d20\u4e0d\u540c\u4e86\u3002\n\n\u90a3\u4e48\uff0c\u5bf9\u4e8e\u67d0\u4e2a\u76ee\u6807\u5e8f\u5217\u91cc\u7684\u5143\u7d20a[i]\uff0c\u5982\u679c\u6211\u4eec\u6bd4\u8f83\u7684\u65f6\u5019\u4ece\u76ee\u6807\u5e8f\u5217i-a[i]+1\u7684\u4f4d\u7f6e\u5f00\u59cb\uff0c\u5c31\u4f1a\u548c\u539f\u5e8f\u5217\u76f8\u540c\uff0c\u53ef\u4ee5f[i-a[i]+1]++;\uff08\u4f46\u8981\u6ce8\u610f\u8fb9\u754c\uff09\uff0c\u7136\u540e\u53d6\u6240\u6709\u7684n-f[i]\u7684\u6700\u5c0f\u503c\u3002\n\n\u9644\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cstdlib>\nusing namespace std;\nint n,a[50002],b[50002],t[50002],f[50002],ans=1e9;\nint main()\n{\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++)\n    scanf(\"%d%d\",&a[i],&b[i]);\n    for (int i=1;i<=n;i++)\n    if (a[a[i]]!=i && b[a[i]]!=i || a[b[i]]!=i && b[b[i]]!=i)\n    {printf(\"-1\");return 0;}//\u5224\u65ad\u662f\u5426\u5408\u6cd5\n    t[1]=1;t[2]=a[1];//\u65b9\u68481\n    for (int i=2;i<n;i++)\n    if (a[t[i]]==t[i-1])t[i+1]=b[t[i]];\n    else t[i+1]=a[t[i]];\n    for (int i=1;i<=n;i++)\n    f[(i-t[i]+1)>0?(i-t[i]+1):(n-(t[i]-i)+1)]++;\n    for (int i=1;i<=n;i++)\n    ans=min(ans,n-f[i]);\n    memset(t,0,sizeof(t));memset(f,0,sizeof(f));\n    t[1]=1;t[2]=b[1];//\u65b9\u68482\n    for (int i=2;i<n;i++)\n    if (a[t[i]]==t[i-1])t[i+1]=b[t[i]];\n    else t[i+1]=a[t[i]];\n    for (int i=1;i<=n;i++)\n    f[(i-t[i]+1)>0?(i-t[i]+1):(n-(t[i]-i)+1)]++;\n    for (int i=1;i<=n;i++)\n    ans=min(ans,n-f[i]);\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1485158008,
        "uid": 14738,
        "name": "1124828077ccj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1053 \u3010\u7bdd\u706b\u665a\u4f1a\u3011"
    },
    {
        "content": "/\\*\n\\* P:1053\n\n\\* Au:Small\\_Ash\n\n\\* \u4e00\u9898\u5947\u602a\u7684\u8d2a\u5fc3\uff08\u4e2a\u4eba\u7406\u89e3\u662f\u8d2a\u5fc3\uff09\n\n\\* \u9996\u5148\u80af\u5b9a\u662f\u8981\u9020\u73af\u7684\uff0c\u7136\u540e\u628a\u73af\u62c6\u6210\u94fe\u3002\n\n\\* \u8fc7\u7a0b\u7b80\u5355\uff0c\u4e0d\u662f\u672c\u9898\u91cd\u70b9\u3002\n\n\\* \u95ee\u9898\u5728\u4e8e\uff0c\u9020\u94fe\u53ea\u6709-1\u7684\u70b9\u53ef\u4ee5\u8fc7\uff0c\u6709\u4e86\u94fe\u8981\u600e\u4e48\u7b97\u7ed3\u679c\n\n\\* \u9996\u5148\uff0c\u6211\u4eec\u8981\u660e\u786e\uff0c\u7531\u4e8e\u9898\u76ee\u7684\u4ea4\u6362\u987a\u5e8f\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u5728\u4e00\u6b65\u4e4b\u5185\u628a\u6240\u6709\u4eba\u8c03\u6362\u597d\n\n\\* \u56e0\u6b64\uff0c\u8c03\u6362\u7684\u4ee3\u4ef7\u5c31\u662f\u6ca1\u6709\u5750\u5728\u81ea\u5df1\u4f4d\u7f6e\u4e0a\u7684\u4eba\u7684\u6570\u91cf\u3002\n\n\\* \u8fd9\u5f53\u7136\u4e5f\u662f\u597d\u60f3\u7684\uff0c\u4f46\u662f\u6709\u4ec0\u4e48\u7528\uff1f\n\n\\* \u6211\u7528\u7684\u662f\u53cc\u5411\u94fe\u8868\uff0c\u76f4\u63a5O(n^2)\u66b4\u529b\u628a\u6240\u6709\u70b9\u4e3a\u5f00\u5934\u7684\u94fe\u641c\u4e86\u4e00\u904d\uff0c\u7136\u540e\u8bb0\u5f55\u4f4d\u7f6e\u4e0d\u5bf9\u7684\u4eba\u3002\u3002\u3002\n\n\\* T\u4e8670\u5206\u3002\u3002\u3002\n\n\\* \u8fd9\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u56e0\u4e3aN\u7684\u8303\u56f4\u662f50000\u3002\u3002\u3002\n\n\\* \u7136\u540e\u5462\uff0c\u697c\u4e0b\u7684\u9898\u89e3\u5c31\u7ed9\u4e86\u6211\u7075\u611f\uff08\u867d\u7136\u8bf4\u5b8c\u5168\u770b\u4e0d\u61c2\u4ed6\u540e\u534a\u90e8\u5206\u5728\u8bb2\u4ec0\u4e48\u3002\u3002\u3002\uff09\n\n\\* \u6211\u4eec\u53ef\u4ee5\u6c42\u4e0d\u52a8\u7684\uff0c\u4e3a\u4ec0\u4e48\u4e00\u5b9a\u8981\u6c42\u79fb\u52a8\u7684\u5462\uff1f\n\n\\* \u4e8e\u662f\uff0c\u5c31\u6709\u4e86\u73b0\u5728\u7684\u505a\u6cd5\u2014\u2014\u968f\u4fbf\u4ee5\u4e00\u4e2a\u6570\u4e3a\u5f00\u59cb\u8282\u70b9\uff0c\u6b63\u5411\u9006\u5411\u641c\u4e24\u6b21\u94fe\n\n\\* \u6bcf\u641c\u5230\u4e00\u4e2a\u70b9\uff0c\u5c31\u628a\u8fd9\u4e2a\u70b9\u5de6\u79fb\u5230\u8fbe\u539f\u672c\u6240\u5e94\u8be5\u5728\u7684\u4f4d\u7f6e\u3002\u7136\u540e\u8ba1\u7b97\u51fa\u5de6\u79fb\u7684\u6b65\u6570\u3002\u7136\u540e\u628a\u5de6\u79fb\u7684\u6b65\u6570\u6240\u5bf9\u5e94\u7684\u6570\u7ec4+1\uff1b\n\n\\* \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u6240\u6709\u5de6\u79fbi\u6b65\u5230\u8fbe\u539f\u4f4d\u7684\u70b9\u5728\u6574\u4e2a\u94fe\u5de6\u79fbi\u4f4d\u540e\u80af\u5b9a\u662f\u4e0d\u9700\u8981\u79fb\u52a8\u7684\u70b9\u3002\n\n\\* \u7136\u540e\u5c31\u53ef\u4ee5\u628a\u6240\u6709\u7684\u5de6\u79fb\u6570\u7ec4\u7684\u7ed3\u679c\u53d6MAX\u5566\uff0c\u53f3\u79fb\u8ba1\u7b97\u4e5f\u4ee5\u6b64\u7c7b\u63a8\n\n\\* \u8bb0\u5f97\u53cc\u5411\u94fe\u53cc\u5411\u90fd\u8981\u641c\u3002\n\n\\* \u7136\u540e\u662f\u4ee3\u7801\u3002\u3002\u3002\n\n\\* \uff08\u4ee3\u7801\u6211\u52a8\u624b\u811a\u4e86\uff0c\u60f3\u76f4\u63a5\u6284\u9898\u89e3\u7684\u540c\u5b66\u8fd8\u662f\u597d\u597d\u7406\u89e3\u4e00\u4e0b\u505a\u6cd5\u5427\uff0c\u54e6\uff0c\u4e0d\u8fc7\u5173\u952e\u4ee3\u7801\u6211\u6ca1\u505a\u624b\u811a\u6240\u4ee5\u8bf7\u653e\u5fc3\u770b\uff09\n\n\\*/\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\nint n,ans;\nint head[50005],next[50005],r[50005],l[50005];\nbool v[50005];\nstruct asd{\n    int a,b;\n}want[50005];\nint read(){\n    int out=0;\n    char cc=getchar();\n    while (cc>'9'&&cc<'0') cc=getchar();\n    while (cc>='0'||cc<='9') {out=out*10+cc-'0';cc=getchar();}\n    return out;\n}\nvoid debug1(){\n    for (int i=1;i<=n;i++)\n        printf(\"%d<-| %d |->%d\\n\",head[i],i,next[i]);\n    printf(\"| 1 |->\");\n    for (int i=next[1];i!=1;i=next[i])\n        printf(\"| %d |->\",i);\n    printf(\"\\n\");\n    return;\n}\nint main(){\n    n=read();\n    memset(head,-1,sizeof(head));\n    memset(next,-1,sizeof(next));\n    for (int i=1;i<=n;i++){\n        want[i].a=read();\n        want[i].b=read();\n    }\n    int last=1;\n    int now=want[1].a;\n    next[1]=want[1].a;\n    head[want[1].a]=1;\n    while (now!=1){\n        if (want[now].b!=last&&want[now].a!=last){\n            printf(\"-1\");\n            return 0;\n        }\n        if (want[now].b!=last){\n            next[now]=want[now].b;\n            head[want[now].b]=now;\n            last=now;now=want[now].b;\n        }else if (want[now].a!=last){\n            next[now]=want[now].a;\n            head[want[now].a]=now;\n            last=now;now=want[now].a;\n        }else{\n            printf(\"-1\");\n            return 0;\n        } \n    }\n    if (head[1]!=want[1].b){\n        printf(\"-1\");\n        return 0;\n    } \n    debug1();\n    r[0]++;\n    l[0]++;\n    now=2;\n    for (int k=next[1];k!=1;k=next[k]){\n        if (k>=now) {r[k-now]++;l[n+now-k]++;}else {l[now-k]++;r[n+k-now]++;}\n        now++;\n    }\n    for (int i=0;i<n;i++){\n        ans=max(ans,l[i]);\n        ans=max(ans,r[i]);\n    }\n    memset(r,0,sizeof(r));\n    memset(l,0,sizeof(l));\n    r[0]++;l[0]++;now=2;\n    for (int k=head[1];k!=1;k=head[k]){\n        if (k>=now) {r[k-now]++;l[n+now-k]++;}else {l[now-k]++;r[n+k-now]++;}\n        now++;\n    }\n    for (int i=0;i<n;i++){\n        ans=max(ans,l[i]);\n        ans=max(ans,r[i]);\n    }\n    printf(\"%d\",n-ans);\n    return 0;\n}\n```",
        "postTime": 1477271111,
        "uid": 745,
        "name": "dph754132771",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1053 \u3010\u7bdd\u706b\u665a\u4f1a\u3011"
    },
    {
        "content": "\u6211\u611f\u89c9\u8fd9\u4e9b\u9898\u89e3\u90fd\u597d\u590d\u6742\u800c\u4e14\u770b\u4e0d\u61c2\u770b\u4e0d\u61c2/dk/dk\u4e8e\u662f\u6765\u6c34\u4e00\u7bc7.\n\n\u9898\u610f\u86ee\u96be\u61c2\u7684\u611f\u89c9.\u9020\u8981\u8fbe\u5230\u7684\u73af\u8fd9\u4e2a\u8fc7\u7a0b\u6bd4\u8f83\u7b80\u5355,\u4e0d\u591a\u8bf4.\n\n\u4ece\u521d\u59cb\u73af\u5230\u76ee\u6807\u73af\n\n\u663e\u7136,\u628a\u73af\u7684\u4f4d\u7f6e\u56fa\u5b9a(\u4e25\u7981\u65cb\u8f6c)\u65f6,\u4e0d\u76f8\u540c\u7684\u4e2a\u6570\u5c31\u662f\u7b54\u6848.\n\n\u66b4\u529b\u7684\u8bdd. $O(n)$ \u65cb\u8f6c\u5230\u4e0d\u540c\u89d2\u5ea6\u7684\u73af,\u518d $O(n)$ \u8ba1\u7b97\u7b54\u6848.\u662f $O(n^2)$ \n\n\u8981\u4f18\u5316\n\n\u56fa\u5b9a\u76ee\u6807\u73af,\u5c31\u6309\u7167\u539f\u6765\u521a\u6c42\u51fa\u7684\u76ee\u6807\u73af\u5c31\u53ef\u4ee5\u4e86\n\n\u589e\u52a0\u6570\u7ec4 $dis$ , $dis_i$ \u662f\u76ee\u6807\u73af\u4e0a\u7b2ci\u4e2a\u79bb\u521d\u59cb\u73af\u4e0a\u5b83\u7684\u4f4d\u7f6e\u7684\u8ddd\u79bb,\n\n\u4e5f\u5c31\u662f\u8bf4,\u53ea\u8981\u8f6c $dis_i$ \u5c31\u53ef\u4ee5\u4f7f\u5b83\u76f8\u540c,\u4e0d\u9700\u8981\u7528\u547d\u4ee4\u6539\u53d8\u4f4d\u7f6e.\n\n\u4f7f\u7528 $vis_i$ \u8ba1\u7b97 $vis_{dis_i}$ ,\u4e5f\u5c31\u662f $dis_i$ \u51fa\u73b0\u6b21\u6570\n\n\u7b54\u6848\u662f $n-max(vis_i)$\n\n\u53e6\u5916,\u6709\u53ef\u80fd\u73af\u662f\u5012\u5e8f\u7684,\u56e0\u6b64\u4e5f\u8981\u8ba1\u7b97\u4e00\u904d.\n\n\u4ee3\u7801\u597d\u5199\u7684\u5f88,\u4e0d\u4e0a\u4e86.\n\nThanks",
        "postTime": 1597986403,
        "uid": 106738,
        "name": "_Felix",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1053 \u3010\u7bdd\u706b\u665a\u4f1a\u3011"
    },
    {
        "content": "# \u6a21\u62df\n[P1053](https://www.luogu.org/problemnew/show/P1053)\n\u5148\u89e3\u51b3$-1$\u7684\u60c5\u51b5\uff0c\u5982\u679c\u53ef\u4ee5\u5b8c\u5168\u5b9e\u73b0\u540c\u5b66\u4eec\u7684\u613f\u671b\uff0c\u90a3\u4e48\u6bcf\u4e24\u4e2a\u76f8\u90bb\u540c\u5b66\u4e00\u5b9a\u4e92\u76f8\u559c\u6b22\uff0c\u4e0d\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u80af\u5b9a\u4e0d\u80fd\u5b8c\u5168\u5b9e\u73b0\u540c\u5b66\u4eec\u7684\u613f\u671b\u3002\n\n\n------------\n\u7136\u540e\u5c31\u662f\u53ef\u884c\u7684\u60c5\u51b5\uff0c\u5148\u628a\u6240\u671f\u671b\u7684\u73af\u7684\u5173\u7cfb\u5b58\u50a8\u8d77\u6765\uff0c\u7528\u6570\u7ec4\u5b9e\u73b0\u3002\u5f53\u7136\u671f\u671b\u73af\u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u82e5\u89c6\u7b2c\u4e00\u79cd\u60c5\u51b5\u4e3a\u987a\u65f6\u9488\uff0c\u90a3\u4e48\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e3a\u9006\u65f6\u9488\uff1a\n```\n\u8f93\u5165\uff1a    \u7b2c\u4e00\u79cd\u60c5\u51b5\uff1a    \u7b2c\u4e8c\u79cd\u60c5\u51b5\uff1a\n4          1              1\n3 4       4 3            3 4\n4 3        2              2\n1 2\n1 2\n```\n\u8bbe\u671f\u671b\u73af\u4e2d\u7f16\u53f7\u4e3a$1$\u7684\u540c\u5b66\u6240\u5728\u7684\u4f4d\u7f6e\u4e3a$1$\uff0c\u5f80\u53f3\u4f9d\u6b21\u4e3a$2,3,\\cdots,n$\uff08$n$\u5728$1$\u7684\u5de6\u8fb9\uff09\uff0c\u5219\u53ea\u9700\u5b58\u50a8\u4e00\u79cd\u60c5\u51b5\uff0c\u53e6\u4e00\u79cd\u60c5\u51b5\u53ef\u4ee5\u63a8\u51fa\uff1a\u4f4d\u7f6e$i(2\\leq i\\leq n)$\u4e0a\u7684\u540c\u5b66\u5728\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e2d\u4f4d\u7f6e\u4e3a$n-i+2$\u3002\u7531\u4e8e\u662f\u73af\u5f62\u6570\u636e\uff0c\u56e0\u6b64\u65e0\u8bba\u600e\u4e48\u65cb\u8f6c\u539f\u6570\u636e\uff0c\u5f97\u5230\u7684\u65b0\u73af\u4e0e\u539f\u73af\u90fd\u662f\u7b49\u4ef7\u7684\uff1a\n```\n 1     3\n4 3   1 2\n 2     4\n \n\u73af\u4e00  \u73af\u4e8c\n```\n\u663e\u7136\u73af\u4e00\u4e0e\u73af\u4e8c\u662f\u76f8\u540c\u7684\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u521d\u59cb\u73af\uff08$1$\u5230$n$\u987a\u5e8f\u6392\u5217\u7684\u73af\uff09\u4e2d\u7f16\u53f7\u4e3a$i$\u7684\u540c\u5b66\u7684\u4f4d\u7f6e\u8bb0\u4e3a$i$\uff0c\u7edf\u8ba1\u7f16\u53f7\u4e3a$i$\u7684\u540c\u5b66\u987a\u65f6\u9488\u79fb\u52a8\u5230\u671f\u671b\u73af\u4e2d\u5176\u6240\u5728\u4f4d\u7f6e\u8981\u7ecf\u8fc7\u7684\u5355\u4f4d\u957f\u5ea6\uff0c\u4f8b\u5982\u7f16\u53f7\u4e3a$3$\u7684\u540c\u5b66\uff1a\n```\n\u521d\u59cb\u73af\uff1a\n\t1\n   4 2\n    3\n    \n\u671f\u671b\u73af\u7b2c\u4e00\u79cd\u60c5\u51b5\uff1a\u7ecf\u8fc73\u4e2a\u5355\u4f4d\u957f\u5ea6\n\u671f\u671b\u73af\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff1a\u7ecf\u8fc71\u4e2a\u5355\u4f4d\u957f\u5ea6\n```\n\u5728\u540c\u4e00\u79cd\u60c5\u51b5\u4e2d\u7ecf\u8fc7\u76f8\u540c\u5355\u4f4d\u957f\u5ea6\u7684\u540c\u5b66\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u4ed6\u4eec\u770b\u505a\u4e00\u4e2a\u6574\u4f53\uff0c\u8fd9\u4e2a\u6574\u4f53\u662f\u9759\u6b62\u7684\uff08\u6574\u4f53\u5185\u90e8\u540c\u5b66\u4e0d\u4f1a\u76f8\u5bf9\u79fb\u52a8\uff09\u3002\u4f8b\u5982\u5728\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e2d\u53ef\u4ee5\u628a\u7f16\u53f7\u4e3a$2$\u548c$3$\u7684\u540c\u5b66\u5f53\u4f5c\u4e00\u4e2a\u6574\u4f53\uff08\u5b83\u4eec\u90fd\u8981\u7ecf\u8fc7$1$\u4e2a\u5355\u4f4d\u957f\u5ea6\uff09\uff0c\u5219\u7f16\u53f7\u4e3a$2$\u548c$3$\u7684\u540c\u5b66\u53ef\u4ee5\u4e0d\u79fb\u52a8\uff0c\u8ba9\u7f16\u53f7\u4e3a$1$\u548c$4$\u7684\u540c\u5b66\u6765\u79fb\u52a8\uff0c\u8c03\u6574\u4e3a\u671f\u671b\u73af\u3002\u9898\u76ee\u8981\u6c42\u8f93\u51fa\u79fb\u52a8\u7684\u6700\u5c11\u6b21\u6570\uff0c\u4e5f\u5c31\u662f\u6700\u5c11\u7684\u5fc5\u987b\u79fb\u52a8\u7684\u540c\u5b66\u6570\u3002\u8981\u6ee1\u8db3\u79fb\u52a8\u7684\u540c\u5b66\u6700\u5c11\uff0c\u5c31\u8981\u4fdd\u8bc1\u9759\u6b62\u7684\u540c\u5b66\u6700\u591a\uff0c\u4e5f\u5c31\u662f\u6700\u5927\u6574\u4f53\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u8981\u8ba1\u7b97\u7ecf\u8fc7\u5355\u4f4d\u957f\u5ea6\u76f8\u540c\u7684\u6700\u591a\u540c\u5b66\u6570\uff0c\u5269\u4f59\u7684\u540c\u5b66\uff08\u9700\u8981\u79fb\u52a8\u7684\u540c\u5b66\uff09\u6570\u5c31\u662f\u7b54\u6848\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e4*5+5;\ntypedef int INT_N[N];\nINT_N want_1,list_1,want_2,list_2,expect;\nint n;\ninline void read(int&number){\n\tint un=1;\n\tchar letter=getchar();\n\tnumber=0;\n\twhile(letter<'0'||'9'<letter){\n\t\tun=letter^'-'?1:-1;\n\t\tletter=getchar();\n\t}\n\twhile('0'<=letter&&letter<='9'){\n\t\tnumber=(number<<1)+(number<<3)+letter-'0';\n\t\tletter=getchar();\n\t}\n\tnumber*=un;\n}//\u5feb\u901f\u8bfb\u5165\nvoid init(){\n\tread(n);\n\tfor(register int i=1;i<=n;i++)\n\t\tread(want_1[i]),read(want_2[i]);\n\tfor(register int i=1;i<=n;i++)\n\t\tif(want_1[want_1[i]]^i&&want_2[want_1[i]]^i||want_1[want_2[i]]^i&&want_2[want_2[i]]^i){\n\t\t\tprintf(\"-1\\n\");\n\t\t\texit(0);\n\t\t}//\u5f53\u524d\u540c\u5b66\u5e0c\u671b\u7684\u4e24\u4e2a\u540c\u5b66\u4e2d\u5982\u679c\u6709\u4e0d\u5e0c\u671b\u5f53\u524d\u540c\u5b66\u7684\uff0c\u4e0d\u6ee1\u8db3\u53cc\u5411\u5e0c\u671b\u6027\uff0c\u5373\u4e0d\u80fd\u6ee1\u8db3\u6bcf\u4e2a\u540c\u5b66\u7684\u5e0c\u671b\n\texpect[2]=want_1[expect[1]=1],expect[n]=want_2[1];//\u521d\u59cb\u5316\u671f\u671b\u73af\n\tfor(register int i=2;i<n-1;i++)\n\t\texpect[i+1]=want_1[expect[i]]^expect[i-1]?want_1[expect[i]]:want_2[expect[i]];//\u6784\u9020\u671f\u671b\u73af\n}\nvoid work(){\n\tint Max=0;\n\tfor(register int i=1;i<=n;i++)\n\t\tlist_1[(i+n-expect[i])%n]++,list_2[((n<<1)-i+2-expect[i])%n]++;//(i+n-expect[i])%n\u8868\u793a\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u671f\u671b\u73af\u4e2d\u7f16\u53f7\u4e3ai\u7684\u540c\u5b66\u7ecf\u8fc7\u7684\u5355\u4f4d\u957f\u5ea6\uff0c((n-i+2)+n-expect[i])%n\u8868\u793a\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u671f\u671b\u73af\u4e2d\u7f16\u53f7\u4e3an-i+2\u7684\u540c\u5b66\u7ecf\u8fc7\u7684\u5355\u4f4d\u957f\u5ea6\n\tfor(register int i=0;i<n;i++)\n\t\tMax=max(Max,max(list_1[i],list_2[i]));//\u8868\u793a\u66f4\u65b0\u7ecf\u8fc7\u5355\u4f4d\u957f\u5ea6\u4e3ai\u7684\u540c\u5b66\u6570\uff08\u4e24\u79cd\u60c5\u51b5\uff09\n\tprintf(\"%d\\n\",n-Max);\n}\nint main(){\n\tinit();\n\twork();\n\treturn 0;\n}\n\n```",
        "postTime": 1538829558,
        "uid": 37151,
        "name": "jrzs",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1053 \u3010\u7bdd\u706b\u665a\u4f1a\u3011"
    },
    {
        "content": "\u770b\u5230\u6ca1\u6709pascal\u7684\u4ee3\u7801\u6211\u5c31\u6765\u51d1\u4e00\u6ce2\u4e86\u3002\u8fd9\u4e2a\u65b9\u6cd5\u662f\u6211\u5728\u4e00\u4e2a\u535a\u5ba2\u4e0a\u9762\u770b\u5230\u7684\u3002\u8981\u627e\u51fa\u79fb\u52a8\u51e0\u6b21\uff0c\u663e\u7136\u76ee\u6807\u72b6\u6001\u6211\u4eec\u662f\u9700\u8981\u6c42\u51fa\u6765\u7684\u3002\u81f3\u4e8e\u5224\u65ad\u662f\u5426\u8f93\u51fa-1\u4e5f\u5f88\u7b80\u5355\uff1a\u5982\u679c\u8bf4x\u5e0c\u671by\u5728\u4ed6\u8eab\u8fb9\uff0c\u800cy\u5e0c\u671b\u7684\u4eba\u91cc\u9762\u6ca1\u6709x\uff0c\u90a3\u4e48\u663e\u7136\u5f3a\u626d\u7684\u74dc\u4e0d\u751c\uff08\u611f\u89c9\u6ca1\u6709\u54ea\u4e0d\u5bf9\uff09\uff0c\u8fd9\u65f6\u5019\u600e\u4e48\u79fb\u52a8\u90fd\u6ca1\u7528\u3002\u6c42\u51fa\u7406\u60f3\u6392\u5217\u540e\uff0c\u6211\u4eec\u4e0e\u539f\u6392\u5217\u6bd4\u8f83\u5bf9\u9f50\uff0c\u4f7f\u539f\u6392\u5217\u6709\u5c3d\u91cf\u591a\u7684\u4eba\u4e0d\u9700\u8981\u79fb\u52a8\uff08\u5373\u6240\u5904\u4f4d\u7f6e\u4e0e\u76ee\u6807\u4f4d\u7f6e\u4e00\u81f4\uff09\uff0c\u82e5\u6709k\u4e2a\u53ef\u4ee5\u505a\u5230\uff0c\u90a3\u4e48\u663e\u7136\u79fb\u52a8\u4ee3\u4ef7\u5c31\u662fn-k\uff0c\u8981\u8ba9n-k\u6700\u5c0f\uff0c\u663e\u7136\u8981\u8ba9k\u6700\u5927\u3002\u6c42k\u7684\u65b9\u6cd5\u6bd4\u8f83\u591a\uff08\u52a8\u89c4\u4e4b\u7c7b\u7684\uff09\uff0c\u4e0d\u8fc7\u535a\u5ba2\u4e2d\u7684\u4e00\u79cd\u65b9\u6cd5\u6211\u4e5f\u662f\u63a8\u8350\u7684\uff1a\u5982\u679ca\u548cb\u7684\u76f8\u5bf9\u4f4d\u7f6e\u4e0e\u5e8f\u53f7\u7684\u76f8\u5bf9\u4f4d\u7f6e\u548cc\u548cd\u7684\u76f8\u5bf9\u4f4d\u7f6e\u4e0e\u5e8f\u53f7\u7684\u76f8\u5bf9\u4f4d\u7f6e\u76f8\u540c\uff0c\u5e76\u65e0\u6cd5\u786e\u5b9aa\u3001b\u3001c\u3001d\u76f8\u5bf9\u4f4d\u7f6e\u662f\u5426\u90fd\u4e0e\u5e8f\u53f7\u7684\u76f8\u5bf9\u4f4d\u7f6e\u76f8\u540c\u3002\u4f46\u662f\u6211\u5982\u679c\u77e5\u9053a\u4e0e\u5176\u5e8f\u53f7\u4f4d\u7f6e\u3001b\u4e0e\u5176\u5e8f\u53f7\u4f4d\u7f6e\u3001c\u4e0e\u5176\u5e8f\u53f7\u4f4d\u7f6e\u3001d\u4e0e\u5176\u5e8f\u53f7\u4f4d\u7f6e\u7684\u5dee\u503c\u90fd\u76f8\u7b49\uff0c\u5c31\u4e00\u5b9a\u6709a\u3001b\u3001c\u3001d\u4e0e\u5e8f\u53f7\u7684\u76f8\u5bf9\u4f4d\u7f6e\u76f8\u7b49\u3002\u56e0\u6b64\u7528a[i]\u5b58\u50a8\u76ee\u6807\u73af\u4e2d\u6743\u503c\u4e0e\u5e8f\u53f7\u5dee\u503c\u4e3ai\u7684\u6570\u7684\u4e2a\u6570\uff0c\u6700\u540e\u627e\u51fa\u6700\u5927\u503ck\uff0cN-k\u5373\u4e3a\u89e3\u3002\u540c\u6837\u8981\u53cd\u5411\u505a\u4e00\u6b21\u3002\u65f6\u7a7a\u590d\u6742\u5ea6\u7686\u4e3aO(N)\u3002\n\n\u65b9\u6cd5\u6765\u81ea\uff1ahttp://blog.csdn.net/FSAHFGSADHSAKNDAS/article/details/49529773\n\n```cpp\nuses math;\nvar l,r:array[0..50000] of longint;//\u8bb0\u5f55\u7406\u60f3\u7684\u4e24\u65c1\n    per:Array[0..60000] of longint;//\u8bb0\u5f55\u7406\u60f3\u4f4d\u7f6e\n    z,f:Array[0..1000000] of longint;//\u6b63\u53cd\u5404\u4e00\u6b21\n    i,j,k,m,n,p,t,ans:longint;\nprocedure ed;\nbegin\n    writeln(-1);\n    halt;\nend;\nbegin\n    assign(input,'P1053.in');reset(input);\n    readln(n);\n    for i:=1 to n do\n      readln(l[i],r[i]);\n    for i:=1 to n do\n    begin\n        if (l[l[i]]<>i)and(r[l[i]]<>i) then ed;\n        if (l[r[i]]<>i)and(r[r[i]]<>i) then ed;\n    end;\n    per[1]:=1;\n    per[2]:=l[1];\n    for i:=2 to n-1 do\n      if per[i-1]=l[per[i]] then per[i+1]:=r[per[i]]\n      else per[i+1]:=l[per[i]];//\u6c42\u7406\u60f3\u6392\u5217\n    for i:=1 to n do\n    begin\n        inc(z[(i-per[i]+n)mod n]);\n        inc(f[(n-i-per[i]+n)mod n]);\n    end;\n    for i:=1 to n do\n    begin\n        ans:=max(ans,z[i]);\n        ans:=max(ans,f[i]);\n    end;\n    writeln(n-ans);\nend.\n```",
        "postTime": 1477468825,
        "uid": 14130,
        "name": "The_Dark_Knight",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1053 \u3010\u7bdd\u706b\u665a\u4f1a\u3011"
    },
    {
        "content": "\u6839\u636e\u4e00\u5b9a\u7684\u79fb\u52a8\u89c4\u5219\uff0c\u5c06\u521d\u59cb\u5706\u73af\u8f6c\u5316\u4e3a\u6ee1\u8db3\u4e00\u5b9a\u6761\u4ef6\u7684\u76ee\u6807\u5706\u73af\u3002\u00a0\n\n\u7b97\u6cd5\u5206\u6790\uff1a\u00a0\n\n\u4ece\u7b2c\u4e00\u4e2a\u4eba\u5904\u65ad\u5f00\uff0c\u5c06\u5706\u73af\u7684\u95ee\u9898\u8f6c\u5316\u4e3a\u5e8f\u5217\u7684\u95ee\u9898\u3002\u5982\u679c\u53ef\u4ee5\uff0c\u6c42\u51fa\u76ee\u6807\u5e8f\u5217\u3002\u6c42\u51fa\u76ee\u6807\u5e8f\u5217\u590d\u6742\u5ea6O(n).\u00a0\u6c42\u51fa\u76ee\u6807\u5e8f\u5217\u53f3\u79fb0\u81f3n-1\u4f4d\u7f6e\u65f6\uff0c\u4e0d\u9700\u8981\u79fb\u52a8\u7684\u4eba\u6570\u3002\u5c06\u76ee\u6807\u5e8f\u5217\u53cd\u8f6c\uff0c\u518d\u6c42\u51fa\u76ee\u6807\u5e8f\u5217\u53f3\u79fb0\u81f3n-1\u4f4d\u7f6e\u65f6\uff0c\u4e0d\u9700\u8981\u79fb\u52a8\u7684\u4eba\u6570\u3002\u4e0d\u9700\u8981\u79fb\u52a8\u7684\u4eba\u6570\u6700\u5927\u7b49\u4ef7\u4e8e\u9700\u8981\u79fb\u52a8\u7684\u4eba\u6570\u6700\u5c0f\u3002\u590d\u6742\u5ea6O(n)\u3002\n",
        "postTime": 1380707583,
        "uid": 1187,
        "name": "AKB48",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1053 \u3010\u7bdd\u706b\u665a\u4f1a\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9898...... \u7b2c\u4e00\u773c\u770b\u8fc7\u53bb...... \u4e0d\u4f1a\u505a\u554a\u4ec0\u4e48\u795e\u4ed9\u9898\u76ee......\n\n\u90a3\u4e48\u8bd5\u7740\u5957\u4e00\u5957\u5e38\u89c1\u601d\u8def......\n\n\u7b49\u7b49\u8fd9\u4e00\u9898\u73af\u8fd9\u4e2a\u6761\u4ef6\u597d\u50cf\u6ca1\u6709\u4ec0\u4e48\u7528\u8bf6QWQ\n\n\u7b49\u7b49\u4e00\u4e2a\u4eba\u6700\u591a\u53ea\u4f1a\u4ea7\u751f\u4e00\u70b9\u8d21\u732e\u8bf6QWQ\n\n\u7b49\u7b49\u8fd9\u4e00\u9898\u597d\u50cf\u53ef\u4ee5\u53cd\u5411\u601d\u8003\u8bf6QWQ\n\n\u6491\u6b7b\u662f\u4e2a\u84dd\u9898\u8bf6(\u96fe)\n\n\u7b49\u7b49\u6211\u4e00\u5f00\u59cb\u8bf4\u4e86\u4ec0\u4e48......\n\n\u597d\u5427\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u8fdb\u5165\u6b63\u9898.\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u73af\u597d\u50cf\u6ca1\u6709\u4ec0\u4e48\u7528\u76f4\u63a5\u62c6\u4e86\u5f97\u4e86.\n\n\u7136\u540e\u6211\u4eec\u6700\u540e\u7b54\u6848\u6700\u591a\u53ea\u6709\u4e24\u79cd, \u4e00\u79cd\u6b63\u7740, \u4e00\u79cd\u53cd\u7740...... \u6211\u4eec\u53ef\u4ee5\u5bb9\u6613\u5730\u6c42\u51fa\u8fd9\u4e24\u79cd\u987a\u5e8f, \u6211\u4eec\u5c06\u8fd9\u4e24\u79cd\u6392\u5217\u79f0\u4f5c\"\u7406\u60f3\u7684\"......\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u5176\u5b9e\u4e00\u6b21\u64cd\u4f5c\u8db3\u4ee5\u89e3\u51b3\u6240\u6709\u95ee\u9898: \u6240\u6709\u9700\u8981\u79fb\u52a8\u7684\u90fd\u53ef\u4ee5\u53ea\u79fb\u52a8\u4e00\u6b21.\n\n\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u5c31\u662f\u8981\u6700\u5c0f\u5316\u9700\u8981\u79fb\u52a8\u7684\u4eba\u7684\u4e2a\u6570QWQ\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u8f6c\u6362\u4e3a\u6700\u5927\u5316\u4e0d\u9700\u8981\u79fb\u52a8\u7684\u4eba\u7684\u4e2a\u6570.\n\n\u6211\u4eec\u53d1\u73b0\u5176\u5b9e\u4efb\u610f\u4e24\u4e2a\u4e0d\u9700\u8981\u79fb\u52a8\u7684\u4eba\u53ea\u89c1\u7684\u8ddd\u79bb\u90fd\u662f\u5b9a\u503c, \u4e5f\u5c31\u662f\u8bf4, \u4ed6\u4eec\u4e4b\u95f4\u7684\u8ddd\u79bb\u548c\u6700\u7ec8\u7ed3\u679c\u4e2d\u4ed6\u4eec\u4e24\u4e2a\u7684\u8ddd\u79bb\u662f\u4e00\u6837\u7684, \u90a3\u4e48\u6bcf\u4e2a\u4eba\u5230\u7406\u60f3\u6392\u5217\u4e2d\u4ed6\u4eec\u7684\u4f4d\u7f6e\u7684\u8ddd\u79bb\u90fd\u76f8\u7b49, \u56e0\u4e3a\u5176\u5b9e\u662f\u4e2a\u73af, \u6240\u4ee5\u5176\u5b9e\u4e0d\u4e00\u5b9a\u5b8c\u5168\u662f\u7406\u60f3\u6392\u5217, \u8fd8\u53ef\u4ee5\u662f\u7406\u60f3\u6392\u5217\u65cb\u8f6c\u4e4b\u540e\u7684\u7ed3\u679c.\n\n\u7136\u540e\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa\u6bcf\u4e00\u4e2a\u4eba\u76ee\u524d\u7684\u4f4d\u7f6e\u5230\u4ed6\u7406\u60f3\u6392\u5217\u4e2d\u4f4d\u7f6e\u7684\u8ddd\u79bb\u5c31\u597d\u4e86, \u7136\u540e\u627e\u51fa\u6570\u91cf\u6700\u591a\u7684\u90a3\u4e00\u6ce2\u4eba, \u8ba9\u4ed6\u4eec\u4e0d\u52a8, \u5269\u4e0b\u7684\u4eba\u53bb\u8dd1\u817f.\n\n\u4f46\u662f\u6ce8\u610f\u5230\u7406\u60f3\u6392\u5217\u6709\u4e24\u79cd...... \u6240\u4ee5~~\u53cc\u500d\u5feb\u4e50~~\u8981\u591a\u6572\u4e00\u70b9\u4ec0\u4e48\u7684......\n\n\u8981\u662f\u4f60\u6ca1\u770b\u61c2, \u53ef\u4ee5......\n\n1. \u518d\u770b\u4e00\u6b21\n\n2. \u770b\u4e00\u4e0b\u4ee3\u7801\n\n\u653e\u4e00\u4e0b\u4ee3\u7801......\n\n```cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nnamespace fio {\n\tstreambuf* in = cin.rdbuf();\n\tchar bb[1000000], * s = bb, * t = bb;\n#define gc() (s==t&&(t=(s=bb)+in->sgetn(bb,1000000),s==t)?EOF:*s++)\n\tinline int read() {\n\t\tint x = 0;\n\t\tchar ch = gc();\n\t\twhile (ch < 48)ch = gc();\n\t\twhile (ch >= 48)x = x * 10 + ch - 48, ch = gc();\n\t\treturn x;\n\t}\n}using fio::read;\nint n;\nint arr[100005], brr[100005], crr[100005];\n// arr, brr\u90fd\u662f\u5de6\u53f3\u7684\u4eba, crr\u662f\u7b2ci\u4e2a\u4f4d\u7f6e\u7684\u4eba.\n// \u8fd9\u662f\u6211\u5199\u8fc7\u6700\u4e11\u964b\u7684\u4ee3\u7801\u4e4b\u4e00......\nint cnt[100005], cntx[100005];// \u7edf\u8ba1\u5230\u7406\u60f3\u6392\u5217\u7684\u8ddd\u79bb\u4e3ax\u7684\u4eba\u6570, \u9009\u51fa\u6700\u591a\u7684\u8ba9\u4ed6\u4eec\u4e0d\u52a8\nint fm[100005];\nint main() {\n\tn = read();\n\tfor (int i = 1; i <= n; i++)arr[i] = read(), brr[i] = read();\n\tcrr[2] = arr[1], crr[n] = brr[1], crr[1] = 1;\n\tfor (int i = 2; i <= n; i++) {\n\t\tif ((crr[i - 1] != arr[crr[i]] && crr[i - 1] != brr[crr[i]]))cout << -1, exit(0);\n\t\tif (crr[i - 1] == arr[crr[i]])crr[i % n + 1] = brr[crr[i]];\n\t\telse crr[i % n + 1] = arr[crr[i]];\n\t}// \u8ba1\u7b97\u7406\u60f3\u6392\u5217\n\tfor (int i = 1; i <= n; i++) {\n\t\tint l = crr[(i - n - 1) % n + n], r = crr[i % n + 1];\n\t\tif (min(l, r) != min(arr[crr[i]], brr[crr[i]]) || max(l, r) != max(arr[crr[i]], brr[crr[i]]))cout << -1, exit(0);\n\t}// \u68c0\u9a8c\u7406\u60f3\u6392\u5217\u7684\u5408\u6cd5\u6027\n\tfor (int i = 1; i <= n; i++)cnt[(i - crr[i] + n) % n]++, cntx[abs(n - i - crr[i] + 1 + n) % n]++;// \u7edf\u8ba1\u4e00\u6ce2\n\tint ans = 0;\n\tfor (int i = 0; i < n; i++)ans = max(ans, max(cnt[i], cntx[i]));\n\tcout << n - ans;// \u8bb0\u4f4f\u6211\u4eec\u628a\u7b54\u6848\u53cd\u4e86\u8fc7\u6765\n}\n```\n",
        "postTime": 1571230791,
        "uid": 38485,
        "name": "Erina",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1053 \u3010\u7bdd\u706b\u665a\u4f1a\u3011"
    },
    {
        "content": "```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\nconst int N = 50000 + 10;\n\n#if 0\n//\u6b64\u9898\u5c06\u5173\u7cfb\u6362\u8f6c\u5316\u4e3a\u76ee\u6807\u94fe\n//\u5e76\u4e14\u5224\u65ad\u76ee\u6807\u94fe\u662f\u5426\u6210\u7acb\uff0c\u662f\u7ee7\u7eed\uff0c\u5426\u8f93\u51fa-1\n//\u8f6c\u79fb\u65b9\u6cd5\u7406\u89e3\n//\u521d\u59cb 1 2 3 4 5\n//\u76ee\u6807 1 3 4 2 5\n//     1 _ 4 2 5, 3 \u53d6\u51fa\n//     1 _ 3 2 5, 4 \u53d6\u51fa\n//     1 _ 3 4 5, 2 \u53d6\u51fa\n//     1 2 3 4 5 \u653e\u51652, \u6210\u529f\n//\u6240\u4ee5\u8f6c\u6362\u547d\u4ee4\u5373\u4e3a(3, 4, 2)\n//\u6709\u51e0\u4e2a\u4e0e\u521d\u59cb\u4f4d\u7f6e\u4e0d\u540c\u4f4d\u7f6e\u7684\u70b9\u5c31\u8981\u6d88\u8017\u4e00\u70b9\u4ee3\u4ef7\n\n//\u521d\u59cb 1 2 3 4\n//\u76ee\u6807 4 3 2 1\n//\u6d88\u8017\u4ee3\u4ef7\u4e3a4\n//\u8fd9\u79cd\u60c5\u51b5\u5c31\u662f\u8981\u53cd\u7740\u8dd1\n//\u521d\u59cb 4 3 2 1\n//\u6d88\u8017\u4ee3\u4ef7\u4e3a0\n//(\u56e0\u4e3a\u4f60\u53ea\u8ba1\u7b97\u4e86\u4e00\u79cd\u65b9\u5411\u7684\u73af\uff0c\u4f46\u73af\u53ef\u4ee5\u6709\u4e24\u79cd\u65b9\u5411\uff0c\u53ef\u7406\u89e3\u4e3a\u987a\u65f6\u9488\u3001\u9006\u65f6\u9488\u4e24\u79cd)\n//\u5230\u8fd9\u91cc\u53ef\u4ee5\u679a\u4e3e\u4ee5n\u4e2a\u4e0d\u540c\u8282\u70b9\u4e3a\u5f00\u5934\uff0c\u66b4\u529b\u8ba1\u7b97\uff0c\u590d\u6742\u5ea6O(n^2)\n\n//O(n)\u505a\u6cd5\n//\u521d\u59cb\u94fe\t1 2 3 4 5 6\n//\u76ee\u6807\u94fe\t4 2 3 1 5 6\n//\u5dee\u503c      3 0 0 3 0 0\n//\u5dee\u503c\u662f\u770b\u8fd9\u4e2a\u503c\u5411\u53f3(\u6216\u5411\u5de6)(\u5355\u4e2a\u65b9\u5411)\u4ee5\u591a\u5c11\u4f4d\uff0c\u624d\u5230\u8fbe\u521d\u59cb\u94fe\n//\u8fd9\u4e2a\u5dee\u503c\uff0c\u65e0\u8bba\u73af\u5982\u4f55\u65cb\u8f6c\uff0c\u5dee\u503c\u76f8\u7b49\u7684\u8fd8\u662f\u76f8\u7b49\uff0c\u4e0d\u7b49\u7684\u8fd8\u662f\u4e0d\u7b49\n//\u6240\u4ee5\u8981\u6c42\u7684\u6700\u503c\u5c31\u662f\u8ba9\u5dee\u503c\u76f8\u540c\u6700\u591a\u7684\u901a\u8fc7\u65cb\u8f6c\uff0c\u4f7f\u5b83\u4eec\u7684\u5dee\u503c\u90fd\u53d8\u4e3a0\n//\u6700\u7ec8\u8981\u6362\u7684\u90fd\u662f\u9664\u8fd9\u4e9b\u5dee\u503c\u76f8\u540c\u70b9\u4ee5\u5916\u7684\u6240\u6709\u70b9\n#endif\n\nint n, B[N], ct, spin1[N], spin2[N];\n//spain1\u8bb0\u5f55\u521d\u59cb\u94fe\u4e3a1 2 3...\u7684\u94fe\uff0c\u5dee\u503c\u7684\u4e2a\u6570\n//spain2\u8bb0\u5f55\u521d\u59cb\u94fe\u4e3an n-1 n-2...\u7684\u94fe\uff0c\u5dee\u503c\u7684\u4e2a\u6570\nbool vis[N];\nstruct node {int a, b;}A[N];\n\nbool check(int x){\n    B[++ct] = x;\n    vis[x] = true;\n    if (ct == n) return true;\n    if (vis[A[x].a] == false){\n        return check(A[x].a);\n    }\n    if (vis[A[x].b] == false){\n        return check(A[x].b);\n    }\n    return false;\n}\n\nint main(){\n    //freopen(\"fire.in\", \"r\", stdin);\n    //freopen(\"fire.out\", \"w\", stdout);\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++){\n        scanf(\"%d %d\", &A[i].a, &A[i].b);\n    }\n    if (check(1) == false){\n        printf(\"-1\");\n        return 0;\n    }\n    int ans = 0x7FFFFFFF;\n    int mx1 = 0, mx2 = 0;;\n    for (int i = 1; i <= ct; i++){\n        int pos = B[i], len = (i + n - pos) % n;\n        spin1[len]++;\n        mx1 = max(mx1, spin1[len]);\n        pos = (n - B[i]) % n + 1;\n        len = (i + n - pos) % n;\n        spin2[len]++;\n        mx2 = max(mx2, spin2[len]);\n    }\n    ans = min(ans, min(n - mx1, n - mx2));\n    printf(\"%d\", ans);\n    return 0;\n}\n\n```",
        "postTime": 1538023304,
        "uid": 76226,
        "name": "yy1695651",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1053 \u3010\u7bdd\u706b\u665a\u4f1a\u3011"
    },
    {
        "content": "[\u535a\u5ba2](https://blog.csdn.net/xumingyang0/article/details/80573739)\n\u611f\u89c9\u8fd8\u662f\u535a\u5ba2\u91cc\u7684\u683c\u5f0f\u597d\u770b\u4e00\u70b9\uff0c\u8fd9\u91cc\u7684\u6362\u884c\u597d\u50cf\u88ab\u541e\u4e86\n\n[\u9898\u76ee](https://www.luogu.org/problemnew/show/P1053)\n#\u9898\u89e3\uff1a\n\u6a21\u62df\uff0c\u6784\u9020\u51fa\u6574\u4e2a\u6570\u5217\uff0c\u8981\u6c42\u7684\u5c31\u662f\u8fd9\u4e2a\u6570\u5217\u9700\u8981\u7ecf\u8fc7\u591a\u5c11\u6b21\u64cd\u4f5c\u5f97\u5230\n\u4f46\u662f\uff0c\u8fd9\u5176\u5b9e\u662f\u4e00\u4e2a\u73af\uff0c\u7f16\u53f7\u4e3a1\u7684\u53ef\u4ee5\u653e\u4efb\u610f\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u6bcf\u4e00\u4f4d\u90fd\u53ef\u4ee5\u53f3\u79fb\u4e00\u4f4d\uff0c\u6700\u53f3\u8fb9\u7684\u4e00\u4f4d\u79fb\u5230\u7b2c\u4e00\u4f4d\uff08\u540e\u6587\u76f4\u63a5\u53eb\u53f3\u79fb\uff09\u3002\n\u800c\u4e14\uff0c\u7b2c\u4e00\u4e2a\u4eba\u53ef\u4ee5\u9009\u62e9\u5de6\u8fb9a[1]\uff0c\u53f3\u8fb9b[1]\uff0c\u4e5f\u53ef\u4ee5\u5de6\u8fb9b[1]\uff0c\u53f3\u8fb9a[1]\uff0c\u6240\u4ee5\u73af\u8fd8\u53ef\u4ee5\u5012\u8fc7\u6765\u3002\n\u6bd4\u5982\u9898\u4e2d\u6240\u7ed9\u6570\u636e\uff1a\n4\n3 4\n4 3\n1 2\n1 2\n\u5047\u8bbe\u7b2c\u4e00\u4f4d\u662f1\uff0c\u90a3\u6574\u4e2a\u6570\u5217\u53ef\u4ee5\u662f1 3 2 4\uff0c\u4e5f\u53ef\u4ee5\u662f1 4 2 3\u3002\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u53f3\u8fb9\u7684\u5012\u8fc7\u6765\uff0c\u5c31\u53d8\u62103 2 4 1\uff0c\u548c\u5de6\u8fb9\u662f\u4e00\u6837\u7684\u3002\n\u8003\u8651\u6b63\u7740\u7684\u60c5\u51b5\uff08\u53cd\u7740\u4e5f\u4e00\u6837\uff09\n\u5047\u8bbe\u53f3\u79fbk\u6b21\u662f\u6700\u4f18\u89e3\uff0c\u53f3\u79fb\u8fc7\u4ee5\u540e\u4e0e\u539f\u6570\u5217\u6709t\u4e2a\u4e0d\u540c\uff0c\u90a3\u4ea4\u6362\u7684\u4ee3\u4ef7\u5c31\u662ft\uff0c\u90a3\u5c31\u53ef\u4ee5\u8bbeans[i]\u8868\u793a\u53f3\u79fbi\u4f4d\u540e\u4e0e\u539f\u6570\u5217\u6709ans[i]\u4e2a\u76f8\u540c\uff0c\n\u90a3\u4e48\u7b54\u6848=max{n-ans[i]}=n-max{ans[i]}\n#\u6807\u7a0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=50002;\nint n,i,ans,a[N],b[N],h[N],ans1[N],ans2[N];\ninline char gc(){\n    static char buf[100000],*p1=buf,*p2=buf;\n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++;\n}\n#define gc getchar\ninline int read(){\n    int x=0,fl=1;char ch=gc();\n    for (;ch<48||ch>57;ch=gc())if(ch=='-')fl=-1;\n    for (;48<=ch&&ch<=57;ch=gc())x=(x<<3)+(x<<1)+(ch^48);\n    return x*fl;\n}\ninline void write(int a){if(a>=10)write(a/10);putchar(a%10|48);}\ninline void writeln(int a){if(a<0)a=-a,putchar('-');write(a);puts(\"\");}\nint main(){\n    n=read();\n    for (i=1;i<=n;i++) a[i]=read(),b[i]=read();\n    h[1]=1;h[2]=b[1];h[n]=a[1];\n    for (i=3;i<n;i++)\n        if (a[h[i-1]]==h[i-2]) h[i]=b[h[i-1]];\n        else if (b[h[i-1]]==h[i-2]) h[i]=a[h[i-1]];\n        else{\n            printf(\"-1\");\n            return 0;\n        }\n    for (i=1;i<=n;i++) ans1[(h[i]-i+n)%n]++,ans2[(h[i]+i)%n]++;\n    //\u8ba1\u7b97ans\uff0c\u5176\u4e2dans1\u662f\u6b63\u7740\u6765\u7684\uff0cans2\u662f\u5012\u7740\n    for (i=0;i<n;i++) ans=max(ans,max(ans1[i],ans2[i]));\n    printf(\"%d\",n-ans);\n}\n```",
        "postTime": 1528120503,
        "uid": 22469,
        "name": "Mingoal",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1053 \u3010\u7bdd\u706b\u665a\u4f1a\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6709\u96be\u5ea6\uff0c\u6700\u96be\u60f3\u5230\u662f\u7684\u8d2a\u5fc3\u3002\n\n\u5047\u8bbe\u521d\u59cb\u6570\u5217\u4e3a 1,2,3..n\n\n\u76ee\u6807\u5e8f\u5217 a1,a2,a3..an\n\n\u8d2a\u5fc3\uff1a\u5047\u8bbe\u80fd\u591f\u6784\u6210\u73af\uff0c\u90a3\u4e48\u7f6e\u6362\u7684\u4ee3\u4ef7\u4e00\u5b9a\u53ef\u4ee5\u7b49\u4e8e\u6240\u6709\u4e0d\u5728\u4f4d\u7f6e\u4e0a\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5e8f\u5217\u4e2d\u6ca1\u5728\u539f\u5148\u4f4d\u7f6e\u7684\u6570\uff0c\u4e00\u5b9a\u53ef\u4ee5\u6362\u5230\u5b83\u5e94\u5728\u7684\u4f4d\u7f6e\uff0c\u4ee3\u4ef7\u4e3a1\uff0c\u800c\u90a3\u4e2a\u88ab\u53d6\u800c\u4ee3\u4e4b\u7684\u6570\uff0c\n\n\u4e5f\u4e00\u5b9a\u53ef\u4ee5\u6362\u5230\u5b83\u5e94\u6709\u7684\u4f4d\u7f6e\n\n(\u5b83\u539f\u5148\u4e00\u5b9a\u4e0d\u5728\u81ea\u5df1\u7684\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u4e00\u4e2a\u4f4d\u7f6e\u7684\u70b9\u53ea\u80fd\u67091\u4e2a\uff0c\u800c\u5b83\u5df2\u88ab\u67d0\u4e2a\u70b9\u53d6\u5230\u4e86)\u3002\n\n\u4e8e\u662fO(n^2)\u7684\u7b97\u6cd5\u8bde\u751f\u4e86\uff0c\u5c06\u521d\u59cb\u5e8f\u5217\u7684\u72b6\u6001\u56fa\u5b9a\uff0c\u679a\u4e3e\u7f6e\u6362\u5f97\u5230\u7684\u5e8f\u5217\uff0c\u6bcf\u6b21\u627e\u4e00\u904d\u5373\u53ef\u3002\n\nO(n)\u7684\u4f18\u5316\uff0c\u53d1\u73b0\u8bb8\u591a\u6570\u90fd\u4e0d\u4f1a\u5728\u4f4d\u7f6e\u4e0a\uff0c\u8fd9\u4e9b\u72b6\u6001\u90fd\u6d6a\u8d39\u4e86\u3002\n\n\u5bf9\u4e8e\u7f6e\u6362\u5f97\u5230\u7684\u6570\u5217\uff0c\u627e\u6bcf\u4e2a\u6570\u8ddd\u79bb\u521d\u59cb\u72b6\u6001\u7684\u957f\uff0c\u7edf\u8ba1\u76f8\u540c\u957f\u7684\u4e2a\u6570\u5373\u53ef\u3002\n\n```cpp\n#include<cstdio>\n#define MAXN 50001\nint a[MAXN], b[MAXN];\nint s[MAXN], cnt1[MAXN], cnt2[MAXN],ans;\nint i,j,n;\nint main()\n{\n    scanf(\"%d\",&n);\n    for (i=1; i<=n; i++)\n      scanf(\"%d%d\",&a[i],&b[i]);\n    s[1]=1; s[n]=a[1]; s[2]=b[1];\n    for (i=3; i<n; i++)\n        if (a[s[i-1]]==s[i-2]) s[i]=b[s[i-1]];\n        else s[i]=a[s[i-1]];\n    for (i=1; i<=n; i++)\n    {\n        int t1=i+1, t2=i-1;\n        if (t1>n) t1=1;\n        if (t2<1) t2=n;\n        if ((s[t1]!=a[s[i]] || s[t2]!=b[s[i]]) && (s[t2]!=a[s[i]] || s[t1]!=b[s[i]]))\n        {\n            printf(\"-1\");\n            return 0;\n        }\n    }\n    for (i=1; i<=n; i++)\n    {\n        cnt1[(s[i]-i+n)%n]++;\n        cnt2[(s[i]+i-1)%n]++;\n    }\n    for (i=0; i<n; i++) //\u6ce8\u610f\u6ce8\u610f\uff0c%n\u540e\u5b58\u653e\u7684\u5730\u5740\u4e3a0..n-1\u3002\u5426\u5219\u4f1a\u7206\u7b2c10\u4e2a\u70b9 \n    {\n        if (ans<cnt1[i]) ans=cnt1[i];\n        if (ans<cnt2[i]) ans=cnt2[i];\n    }\n    printf(\"%d\",n-ans);\n    return 0;\n}\n```",
        "postTime": 1477990891,
        "uid": 19884,
        "name": "\u7fe0\u7af9\u53f6\u98de",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1053 \u3010\u7bdd\u706b\u665a\u4f1a\u3011"
    }
]