[
    {
        "content": "\u5927\u7237\u7684\u5b57\u7b26\u4e32\u9898\uff1a\n\n\u5927\u7237\u4eec\u592a\u5389\u5bb3\u4e86\uff0c\u7518\u62dc\u4e0b\u98ce\n\n\u8fd9\u4e2a\u9898\u5145\u5206\u8003\u5bdf\u4e86\u5927\u5bb6\u7684\u8bed\u6587\u6c34\u5e73\n\n\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u4e71\u4e03\u516b\u7cdf\u7684\u9898\u9762\uff0c\u672c\u8d28\u662f\u6bcf\u6b21\u4ece\u533a\u95f4\u4e2d\u53d6\u51fa\u4e00\u4e2a\u4e25\u683c\u4e0a\u5347\u7684\u5e8f\u5217\uff0c\u7136\u540e\u95ee\u6700\u5c11\u53d6\u51e0\u6b21\n\n\u7531\u4e8e\u662f\u4e25\u683c\u4e0a\u5347\uff0c\u6240\u4ee5\u53ea\u548c\u76f8\u540c\u7684\u6570\u4e2a\u6570\u6709\u5173\uff0c\u5373\u8981\u7528\u533a\u95f4\u51fa\u73b0\u6b21\u6570\u6700\u5927\u7684\u90a3\u4e2a\u6570\u51fa\u73b0\u6b21\u6570\u90a3\u4e48\u591a\u6b21\n\n\u4ece\u4e0a\u53e5\u8bdd\u53ef\u4ee5\u770b\u51fa\u8fd9\u51fa\u9898\u4eba\u8bed\u6587\u6ca1\u6551\n\n\u5373\u8981\u6c42\u533a\u95f4\u4f17\u6570\n\n\u7528\u819c\u961f+\u503c\u57df\u5206\u5757\u7684\u65b9\u6cd5\u53ef\u4ee5O( msqrt( n ) )\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\n\n\u4ec0\u4e48\uff1f\u4f60\u4e0d\u4f1a\u503c\u57df\u5206\u5757\uff1f\n\n\u6ca1\u4e8b\uff0c\u4f60\u53ef\u4ee5\u7528\u4e2a\u5806\uff0cO( msqrt( n )logn )\uff0c\u56e0\u4e3a\u6709\u4eba\u8fd9\u6837\u5199\u8fc7\u6389\u4e86\u3002\u3002\u3002\u5177\u4f53\u600e\u4e48\u56de\u4e8b\u6211\u4e5f\u4e0d\u77e5\u9053\n\n\u53ef\u4ee5\u53c2\u8003\u67d0\u7701\u7701\u9009\u6709\u9053\u6570\u636e\u7ed3\u6784\u9898\u4e5f\u51fa\u4e86\u540c\u6837\u7684\u4e8b\u60c5\n\n-----------------------------\n\nUPDATE:\u4f3c\u4e4e\u4e0d\u7528\u503c\u57df\u5206\u5757\u3002\u3002\u3002\n\n\u6211\u53ef\u80fd\u767d\u5b66\u4e86\u6570\u636e\u7ed3\u6784\n",
        "postTime": 1492357061,
        "uid": 3296,
        "name": "noip",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3709 \u3010\u5927\u7237\u7684\u5b57\u7b26\u4e32\u9898\u3011"
    },
    {
        "content": "\u83ab\u961f\u3002\n\n\u5f88\u660e\u663e\uff0c\u6b64\u9898\u7684\u8be2\u95ee\u5c31\u662f\u67d0\u533a\u95f4\u5185\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u6570\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\u3002\u7531\u4e8e\u53ef\u4ee5\u79bb\u7ebf\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u7528\u83ab\u961f\u7684\u3002\u7ef4\u62a4\u4e00\u4e2a\u8ba1\u6570\u7684\u6570\u7ec4num[i]\uff0c\u8868\u793a\u6570\u5b57i\u51fa\u73b0\u4e86\u51e0\u6b21\uff0c\u518d\u641e\u4e2a\u6570\u7ec4cnt[i]\uff0c\u8868\u793a\u51fa\u73b0i\u6b21\u7684\u6709\u51e0\u4e2a\u6570\u3002\u3002\u3002\u3002\u5c31\u53ef\u4ee5\u4e86\u3002\u3002\u3002\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\n#include<algorithm>\n#define N 400005\n#define F 10\nusing namespace std;\n//ifstream cin(\"a.txt\");\n//ofstream cout(\"b1.txt\");\nstruct tzy{long a,p;};\nstruct Q{long l,r,p;};\nstruct seg{long l,r,m;};\n\nlong n,m,i,j,k,x,y,nowm,rk[N],cnt[N],ans[N],num[N]; //cnt[i+F]:\u5171\u51fa\u73b0i\u6b21\u7684\u6709\u51e0\u4e2a\u6570\uff1bnum[i]:\u7b2ci\u4e2a\u6570\u4e00\u5171\u51fa\u73b0\u4e86\u51e0\u6b21 \nlong sqt,pos[N];\nbool cmp(tzy a,tzy b){return a.a<b.a||(a.a==b.a&&a.p<b.p);}\nbool cmp2(Q a,Q b){return pos[a.l]<pos[b.l]||(pos[a.l]==pos[b.l]&&a.r<b.r);}\n\ntzy a[N];\nQ q[N];\nvoid ch(long x,long t)//\u4fee\u6539\n{\n    long d=num[x];\n    if (t==1)\n    {\n        if (nowm==d) nowm++;\n        cnt[d+F]--; cnt[d+F+1]++;\n        num[x]++;\n    }\n    else{\n        if (nowm==d&&cnt[d+F]==1) nowm--;\n        cnt[d+F]--; cnt[d+F-1]++;\n        num[x]--;\n    }\n}\nint main()\n{\n    cin>>n>>m;\n    for (i=1; i<=n; i++) {cin>>a[i].a; a[i].p=i;}\n    sort(a+1,a+n+1,cmp);\n    for (i=1,j=0; i<=n; i++)\n    {\n        if (i==1||a[i].a!=a[i-1].a) j++;\n        rk[a[i].p]=j;\n    }//\u79bb\u6563\u5316\n    \n    for (sqt=1; sqt\\*sqt<=n; sqt++);\n    for (i=1; i<=n; i++) pos[i]=i/sqt;\n    for (i=1; i<=m; i++) {cin>>q[i].l>>q[i].r; q[i].p=i;}\n    sort(q+1,q+m+1,cmp2);//\u83ab\u961f\n    \n    x=1,y=0; cnt[0]=j; nowm=0;\n    for (i=1; i<=m; i++)\n        while (y<q[i].r) {y++; ch(rk[y],1);}\n        while (y>q[i].r) {ch(rk[y],-1); y--;}\n        while (x<q[i].l) {ch(rk[x],-1); x++;}\n        while (x>q[i].l) {x--; ch(rk[x],1);}\n        ans[q[i].p]=-nowm;\n    }\n    \n    for (i=1; i<=m; i++) cout<<ans[i]<<endl;\n}",
        "postTime": 1492842740,
        "uid": 24634,
        "name": "lxd150039",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3709 \u3010\u5927\u7237\u7684\u5b57\u7b26\u4e32\u9898\u3011"
    },
    {
        "content": "\u9898\u610f:@#%^%@#%#$^\n\n\u8fd9\u4e2a\u9898\u76ee\u6211\u4eec\u4e0d\u770b\u5b83\n\n\u770b\u4e0b\u9762\u8fd9\u4e2a:\n\n>\u7ed9\u4f60$n$\u4e2a\u6570,$m$\u6b21\u8be2\u95ee\u533a\u95f4$[l,r]$\u4e2d\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570\n\n\n\u5b83\u840c\u4e3a\u4ec0\u4e48\u662f\u4e00\u6837\u7684\u5462?\n\n\u5c31\u6bd4\u5982\u8bf4\u8fd9\u4e2a\u6570\u5217$1,1,1,2,2,4,5,6,6,7$\n\n\u6211\u4eec\u628a\u5b83\u6392\u6210\u4e00\u6bb5\u4e00\u6bb5\u7684\u9012\u589e\u5e8f\u5217\u53ef\u4ee5\u4f7f$rp$\u6389\u7684\u6700\u5c11\n\n\u5c31\u53d8\u6210\u4e86$1,2,4,5,6,7,1,2,6,1$\u5171\u63893\u70b9$rp$\n\n\u7136\u540e\u53d1\u73b0\u9012\u589e\u5e8f\u5217\u7684\u4e2a\u6570\u5c31\u7b49\u4e8e\u533a\u95f4\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570\n\n\u4e8e\u662f\u83ab\u961f\u89e3\u51b3\u5b83\n\n$cnt[i]$\u8868\u793a\u6570$i$\u51fa\u73b0\u7684\u6b21\u6570,$t[i]$\u8868\u793a\u51fa\u73b0$i$\u6b21\u7684\u6570\u6709\u591a\u5c11\u4e2a\n\n\u52a0\u5165\u4e00\u4e2a\u6570\u65f6,\u628a$Ans$\u548c$cnt$\u53d6\u4e2a$Max$\n\n\u5220\u9664\u4e00\u4e2a\u6570\u65f6,\u5982\u679c\u6709$t[cnt]==1$&&$cnt==Ans$\u90a3\u4e48$Ans--$\n```\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nconst int N=2e5+5;\nint re(){\n    int x=0,w=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9')x=x*10+ch-'0',ch=getchar();\n    return x*w;\n}\nint n,m,B,len,Ans,a[N],d[N],b[N],t[N],cnt[N],ans[N];\nstruct Q{int l,r,id;}q[N];\nbool cmp(Q x,Q y){\n\tif(b[x.l]==b[y.l])\n\t\tif(b[x.l]&1)return x.r<y.r;\n\t\telse return x.r>y.r;\n\treturn b[x.l]<b[y.l];\n}\nvoid add(int i){\n\tt[cnt[a[i]]]--;\n\tt[++cnt[a[i]]]++;\n\tAns=max(Ans,cnt[a[i]]);\n}\nvoid del(int i){\n\tt[cnt[a[i]]]--;\n\tif(cnt[a[i]]==Ans&&!t[cnt[a[i]]])Ans--;\n\tt[--cnt[a[i]]]++;\n}\nint main(){\n\tn=re(),m=re();B=sqrt(n);\n\tfor(int i=1;i<=n;i++){\n\t\td[i]=a[i]=re();\n\t\tb[i]=(i-1)/B+1;\n\t}\n\tsort(d+1,d+n+1);len=unique(d+1,d+n+1)-d-1;\n\tfor(int i=1;i<=n;i++)\n\t\ta[i]=lower_bound(d+1,d+len+1,a[i])-d;\n\tfor(int i=1;i<=m;i++)\n\t\tq[i]=(Q){re(),re(),i};\n\tsort(q+1,q+m+1,cmp);\n\tfor(int i=1,l=1,r=0;i<=m;i++){\n\t\twhile(r<q[i].r)add(++r);\n\t\twhile(r>q[i].r)del(r--);\n\t\twhile(l<q[i].l)del(l++);\n\t\twhile(l>q[i].l)add(--l);\n\t\tans[q[i].id]=Ans;\n\t}\n\tfor(int i=1;i<=m;i++)printf(\"%d\\n\",-ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1534511507,
        "uid": 59646,
        "name": "\u4e2d\u56fd\u98de\u9c7c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3709 \u3010\u5927\u7237\u7684\u5b57\u7b26\u4e32\u9898\u3011"
    },
    {
        "content": "[P3709 \u5927\u7237\u7684\u5b57\u7b26\u4e32\u9898](https://www.luogu.com.cn/problem/P3709)\n\n### \u9898\u610f\u5206\u6790\n\n\u6211\u4eec\u5e0c\u671b\u653e\u8fdb\u53bb\u7684\u987a\u5e8f\u662f\u591a\u4e2a\u5c3d\u91cf\u957f\u7684\u4e25\u683c\u4e0a\u5347\u5e8f\u5217\u3002\n\n\u663e\u7136\u6709\u591a\u5c11\u4e2a\u4e25\u683c\u4e0a\u5347\u5e8f\u5217\u7b54\u6848\u5c31\u662f\u591a\u5c11\uff0c\u6700\u540e\u5c06\u5b83\u53d8\u6210\u5b83\u7684\u76f8\u53cd\u6570\u5373\u53ef\u3002\n\n\u8bbe\u6700\u540e\u5269\u4e0b\u6765\u4e00\u4e9b\u540c\u6837\u7684\u6570\uff0c\u90a3\u4e48**\u7b54\u6848\u5c31\u662f\u8fd9\u4e2a\u5269\u4e0b\u6765\u7684\u6570\u7684\u603b\u4e2a\u6570**\u3002\u56e0\u4e3a**\u8fd9\u4e9b\u5269\u4e0b\u7684\u6bcf\u4e00\u4e2a\u653e\u8fdb\u53bb\u4eba\u54c1\u90fd\u4f1a\u51cf\u5c11\uff0c\u800c\u4e4b\u524d\u7684\u5e8f\u5217\u4e2d\u6bcf\u4e00\u4e2a\u90fd\u5305\u542b\u8fd9\u4e2a\u6570**\u3002\n\n\u8fd9\u4e2a\u6570\u5c31\u662f\u4f17\u6570\u3002\u4e8e\u662f\u95ee\u9898\u8f6c\u5316\u6210\u6c42\u533a\u95f4\u4f17\u6570\u51fa\u73b0\u7684\u4e2a\u6570\u3002\n\n---\n### \u505a\u6cd5\n\u8003\u8651\u83ab\u961f\u3002\n\n\u52a0\u5165\u64cd\u4f5c\u975e\u5e38\u597d\u5199\uff0c\u5982\u679c $\\text{x}$ \u7684\u51fa\u73b0\u4e2a\u6570\u5927\u4e8e\u5f53\u524d\u7b54\u6848\uff0c\u76f4\u63a5\u66f4\u65b0\u5373\u53ef\u3002\n\n\u5220\u9664\u64cd\u4f5c\u8981\u8003\u8651\u5220\u6389\u7684 $\\text{x}$ \u51fa\u73b0\u6b21\u6570\u662f\u4e0d\u662f\u4f1a\u5f71\u54cd\u7b54\u6848\u3002\n\n\u5206\u7c7b\u8ba8\u8bba\n1. \u5f53\u51fa\u73b0\u6b21\u6570\u5c0f\u4e8e\u5f53\u524d $\\text{ans}$ \uff0c\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\uff1b\n2. \u5f53\u51fa\u73b0\u6b21\u6570\u7b49\u4e8e\u5f53\u524d $\\text{ans}$ \uff0c\u4e14\u53ea\u6709\u8fd9\u4e2a\u6570\u51fa\u73b0\u4e86 $\\text{ans}$ \u6b21\uff0c $\\text{ans}$ \u51cf\u4e00\uff1b\n3. \u5f53\u51fa\u73b0\u6b21\u6570\u7b49\u4e8e\u5f53\u524d $\\text{ans}$ \uff0c\u4e14\u4e0d\u6b62\u4e00\u4e2a\u6570\u51fa\u73b0\u4e86 $\\text{ans}$ \u6b21\uff0c\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\u3002\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u9700\u8981\u5f00\u4e00\u4e2a**\u8f85\u52a9\u6570\u7ec4\u8bb0\u5f55\u51fa\u73b0\u4e86 $i$ \u6b21\u7684\u6570\u7684\u4e2a\u6570\u3002**\uff08\u53ef\u80fd\u6709\u70b9\u62d7\u53e3\uff0c\u6ca1\u660e\u767d\u5efa\u8bae\u591a\u8bfb\u51e0\u904d\uff09\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u6570 $\\text{ans}$ \u5c31\u9700\u8981\u51cf\u4e00\u3002\n\n\u9700\u8981\u79bb\u6563\u5316 \u3002\n\n\u4e00\u4e2a\u5c0f\u4f18\u5316\uff1a\u6ca1\u6709\u5fc5\u8981\u5728\u4e00\u4e2a\u6570\u5b57\u51fa\u73b0\u6b21\u6570\u589e\u52a0\u65f6\u6539\u53d8\u4e4b\u524d\u7684\u8f85\u52a9\u6570\u7ec4\u8bb0\u5f55\u7684\u6570\u503c\uff0c\u56e0\u4e3a\u6c42\u7684\u662f $\\max$ \uff0c\u4e4b\u524d\u7684\u4e0d\u4f1a\u5bf9\u7b54\u6848\u9020\u6210\u5f71\u54cd\uff0c\u5728\u5220\u9664\u7684\u65f6\u5019\u4e5f\u4f1a\u88ab\u5220\u6389\u3002\n\n\u8fd8\u6ca1\u660e\u767d\u5c31\u770b\u770b\u4ee3\u7801\u5427\u3002\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cmath>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N=2e5+10;\n\nint n,m,a[N],cnt[N],len,bl[N],ans[N],maxn,sum[N];//cnt[i]:\u6570\u5b57i\u51fa\u73b0\u7684\u4e2a\u6570\uff1bsum[i]:\u51fa\u73b0\u6b21\u6570\u4e3ai\u7684\u6570\u5b57\u4e2a\u6570\nvector <int> v; \nstruct query\n{\n\tint l,r,id;\n\tbool operator <(const query x) const {return bl[l]^bl[x.l]? l<x.l:bl[l]&1? r<x.r:r>x.r;}\n} q[N];\n\ninline void add(int x)\n{\n\tsum[++cnt[a[x]]]++;\n\tif(cnt[a[x]]>maxn) maxn=cnt[a[x]];\n\treturn ;\n}\ninline void del(int x)\n{\n\tif(sum[cnt[a[x]]] == 1 && maxn == cnt[a[x]]) maxn--;\n\tsum[cnt[a[x]]--]--;\n\treturn ;\n}\n\nint main()\n{\n// \tfreopen(\"work.in\",\"r\",stdin); freopen(\"work.out\",\"w\",stdout);\n\tscanf(\"%d%d\",&n,&m);\n\tlen=sqrt(n);\n\tfor(int i=1;i<=n;i++) {scanf(\"%d\",&a[i]); v.push_back(a[i]); bl[i]=(i-1)/len+1;}\n\tsort(v.begin(),v.end());\n\tv.erase(unique(v.begin(),v.end()),v.end());//\u79bb\u6563\u5316\n\tfor(int i=1;i<=n;i++) a[i]=lower_bound(v.begin(),v.end(),a[i])-v.begin()+1;\n\tfor(int i=1;i<=m;i++) {scanf(\"%d%d\",&q[i].l,&q[i].r); q[i].id=i;}\n\tsort(q+1,q+1+m);\n\tint l=1,r=0;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\twhile(l > q[i].l) add(--l);\n\t\twhile(r < q[i].r) add(++r);\n\t\twhile(r > q[i].r) del(r--);\n\t\twhile(l < q[i].l) del(l++);\n\t\tans[q[i].id]=-maxn;\n\t}\n\tfor(int i=1;i<=m;i++) printf(\"%d\\n\",ans[i]);\n// \tfclose(stdin); fclose(stdout);\n\treturn 0;\n}\n```\n\u5f31\u5316\u7248[P1997 faebdc \u7684\u70e6\u607c](https://www.luogu.com.cn/problem/P1997)\uff0c\u4e0d\u9700\u8981\u79bb\u6563\u5316\uff0c\u5728\u6b64\u5b89\u5229\u4e00\u4e0b\u672c\u4eba\u5173\u4e8e\u8fd9\u9898\u7684[\u9898\u89e3](https://www.luogu.com.cn/blog/nizhuan/solution-p1997)\u3002\n\n## Thank you for your reading!\n\u60a8\u7684\u70b9\u8d5e\u548c\u8bc4\u8bba\u662f\u5bf9\u4f5c\u8005\u6700\u597d\u7684\u652f\u6301\uff01",
        "postTime": 1615107616,
        "uid": 240191,
        "name": "MY\uff08\u4e00\u540d\u849f\u84bb\uff09",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3709 \u3010\u5927\u7237\u7684\u5b57\u7b26\u4e32\u9898\u3011"
    },
    {
        "content": "\n[P3709 \u5927\u7237\u7684\u5b57\u7b26\u4e32\u9898](https://www.luogu.com.cn/problem/P3709)\n\n------------\n\n\n\u5e2e\u540c\u5b66\u5b66\u4e60\u83ab\u961f\u65f6\u770b\u5230\u7684\uff0c\u4e00\u770b\uff08~~\u8fc7\u4e86\u4e00\u5e74\u7ec8\u4e8e\u8bfb\u61c2\u9898\u76ee\u540e~~\uff09\u5c31\u89c9\u5f97\uff0c\u8fd9\u4e0d\u5c31\u62ff\u56de\u6eda\u83ab\u961f\u4e71\u8dd1\u5417\uff0c\u624b\u6b8b\u767d\u7ed9\u51e0\u904d\u5207\u6389\u540e\uff0c\u7a81\u7136\u53d1\u73b0\u9898\u89e3\u7adf\u7136\u6ca1\u6709\u4eba\u5199\u56de\u6eda\u83ab\u961f\uff0c\u4e8e\u662f\u4e3a\u4e86\u63a8\u5e7f\u8fd9\u4e2a\u5feb\u4e50\u7684\u7b97\u6cd5\uff0c\u5c31\u6709\u4e86\u8fd9\u7bc7\u9898\u89e3\u3002\n\n------------\n\n\n### \u9898\u610f\u5206\u6790\n\n\u8fd9\u4e5f\u662f\u8fd9\u9053\u9898\u6700\u96be\u7684\u5730\u65b9\uff08~~\u5f53\u7136\u4e0d\u662f\u56e0\u4e3a\u51fa\u9898\u4eba\u8bed\u6587\u7684\u95ee\u9898~~\uff09\u6211\u4eec\u5148\u53cd\u590d\u9605\u8bfb\u4e00\u4e0b:\n\n**\u8d21\u732e\u5b9a\u4e49\uff1a**\n\n**\u6bcf\u6b21\u4ece\u8fd9\u4e2a\u533a\u95f4\u4e2d\u62ff\u51fa\u4e00\u4e2a\u5b57\u7b26 x \uff0c\u7136\u540e\u628a x \u4ece\u8fd9\u4e2a\u533a\u95f4\u4e2d\u5220\u9664\uff0c\u76f4\u5230\u533a\u95f4\u4e3a\u7a7a\u3002\u4f60\u8981\u7ef4\u62a4\u4e00\u4e2a\u96c6\u5408 S\u3002**\n\n- **\u5982\u679c S \u4e3a\u7a7a\uff0c\u4f60 rp \u51cf 1\u3002**\n- **\u5982\u679c S \u4e2d\u6709\u4e00\u4e2a\u5143\u7d20\u4e0d\u5c0f\u4e8e x\uff0c\u5219\u4f60 rp \u51cf 1\uff0c\u6e05\u7a7a S\u3002**\n- **\u4e4b\u540e\u5c06 x \u63d2\u5165 S\u3002**\n\n**\u6bcf\u6b21\u8be2\u95ee\u4f60\u641e\u5b8c\u8fd9\u6bb5\u533a\u95f4\u7684\u5b57\u7b26\u4e4b\u540e\u6700\u591a\u8fd8\u6709\u591a\u5c11 rp\uff1f**\n\n\u6211\u4eec\u9010\u5b57\u9010\u53e5\u5730\u591a\u8bfb\u51e0\u904d\u5c31\u4f1a\u7406\u89e3\uff0c\u9898\u610f\u5176\u5b9e\u662f\u5728\u9009\u4e2d\u7684\u4e00\u6bb5\u533a\u95f4\u5185\uff0c\u6309\u4e00\u5b9a\u987a\u5e8f\u5c06\u6bcf\u4e2a\u5143\u7d20\u63d2\u5165\u4e00\u904d\uff0c\u4f7f\u6e05\u7a7a\u5e8f\u5217\u7684\u6b21\u6570\u6700\u5c11\n\n\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u53ea\u4f1a\u5728\u7b2c\u4e00\u6b21\u63d2\u5165\u8fdb\u884c\uff0c\u56e0\u4e3a\u6211\u4eec\u4ee5\u540e\u7684\u63d2\u5165\u81f3\u5c11\u4f1a\u6709\u524d\u4e00\u6b21\u63d2\u5165\u7684\u6570\u5728\u5e8f\u5217\u4e2d\n\n\u8fd9\u91cc\u6211\u4eec\u8d2a\u5fc3\u7684\u60f3\u4e00\u60f3\uff0c\u4ece\u5c0f\u5230\u5927\u63d2\u5165\u4e00\u4e2a\u5e8f\u5217\u662f\u4e0d\u6d88\u8017rp\u7684\uff0c\u800c\u6211\u4eec\u5bf9\u4e8e\u540c\u6837\u7684\u6570\uff0c\u81f3\u5c11\u662f\u9700\u8981\u591a\u6d88\u8017\u4e00\u70b9rp\u53bb\u63d2\u5165\u7684\uff0c\u518d\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff0c\u5c31\u4f1a\u53d1\u73b0\u8fd9\u9053\u9898\u5b9e\u9645\u4e0a\u8981\u6c42\u7684\u662f\u8be2\u95ee\u7684\u5e8f\u5217\u4e2d\u51fa\u73b0\u6700\u591a\u7684\u6570\uff08\u5373\u4f17\u6570\uff09\u51fa\u73b0\u7684\u6b21\u6570\u662f\u591a\u5c11\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5df2\u7ecf\u628a\u8fd9\u9053\u9898\u89e3\u51b3\u6389\u4e00\u534a\u4e86\uff08\u8fd9\u91cc\u771f\u7684\u6ca1\u6709\u5938\u5f20\uff09\n\n------------\n\n\n### \u89e3\u6cd5\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651\u4e00\u4e0b\u8fd9\u9053\u9898\u7528\u4ec0\u4e48\u529e\u6cd5\u7ef4\u62a4\u4e86\u3002\n\n\u6211\u4eec\u8981\u7ef4\u62a4\u7684\u662f\u4e00\u4e2a\u5e8f\u5217\u4e0a\u7684\u67e5\u8be2\uff0c\u800c\u4e14\u6ca1\u529e\u6cd5\u901a\u8fc7\u7b80\u5355\u7684\u65b9\u6cd5\u5408\u5e76\u7b54\u6848\uff08\u5373\u5f97\u77e5\\[l,mid\\]\u548c\\[mid+1,r\\]\u7684\u7b54\u6848\u4e0d\u80fd\u901a\u8fc7\u7b80\u5355\u7684\u65b9\u5f0f\u6c42\u51fa\\[l,r\\] \u7684\u7b54\u6848\uff0c\u4f9d\u7167\u60ef\u4f8b\uff08~~\u5077\u61d2~~\uff09\uff0c\u6211\u4eec\u91c7\u7528\u6734\u7d20\u7684\u83ab\u961f\u7b97\u6cd5\u6765\u7ef4\u62a4\u3002\uff08\u8fd9\u91cc\u6211\u4eec\u5047\u8bbe\u4f60\u5df2\u7ecf\u5b66\u4f1a\u4e86\u57fa\u7840\u7684\u83ab\u961f\u7b97\u6cd5\uff0c\u4e0d\u4f1a\u7684\u8bf7\u5de6\u8f6c\u627e\u7bc7\u535a\u5ba2\uff09\n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u5148\u5bf9\u5b57\u7b26\u8fdb\u884c\u4e00\u4e2a\u79bb\u6563\u5316\uff0c\u8fd9\u68371e9\u7684\u503c\u57df\u5c31\u53ef\u4ee5\u8f6c\u5316\u4e3a1e6\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u5efa\u4e2a\u6570\u7ec4\u7edf\u8ba1\u4e2a\u6570\u4e86\u3002\n\n\u4f17\u6240\u5468\u77e5\u3002\u83ab\u961f\u6700\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662fl\uff0cr\u6307\u9488\u7684\u79fb\u52a8\u3002\n\n\u5bf9\u4e8e\u5728\u533a\u95f4\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u8fd9\u4e2a\u6570\u7684\u6570\u91cf\u52a01\uff0c\u7136\u540e\u548c\u5f53\u524d\u7684ans\u6bd4\u8f83\uff0c\u5982\u679c\u6570\u91cf\u6bd4ans\u591a\uff0c\u5c31\u628aans\u52a01\u3002\n\n\u5bf9\u4e8e\u5728\u533a\u95f4\u5220\u9664\u4e00\u4e2a\u6570\u5462\u2026\u2026\u8c8c\u4f3c\u4e0d\u662f\u5f88\u597d\u7ef4\u62a4\uff0c\u6211\u4eec\u5220\u9664\u4e00\u4e2a\u6570ans\u53ef\u80fd\u4f1a\u51cf1\uff0c\u4e5f\u53ef\u80fd\u4f1a\u4e0d\u53d8\u2026\u2026\u6211\u4eec\u4e5f\u4e0d\u80fd\u901a\u8fc7\u76f4\u63a5\u7684\u6bd4\u8f83\u786e\u5b9a\u662f\u5426\u9700\u8981\u51cf1\u2026\u2026\n\n\uff08\u8fd9\u91cc\u5176\u5b9e\u53ef\u4ee5\u518d\u5efa\u4e00\u4e2a\u6570\u7ec4\u7ef4\u62a4\u4e2a\u6570\u4e3aa\u7684\u6570\u7684\u4e2a\u6570\uff0c\u4f46\u662f\u6211\u4e0d\u60f3\u5efa\uff0c\u4e8e\u662f\u6211\u4eec\u6362\u4e00\u79cd\u601d\u60f3\uff09\n\n\u6211\u4eec\u53ef\u80fd\u4f1a\u60f3\uff0c\u8981\u4e0d\u5e72\u8106\u6211\u4eec\u53ea\u5f80\u533a\u95f4\u5185\u52a0\u6570\uff0c\u4e0d\u5728\u533a\u95f4\u5220\u6570\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7528\u4e00\u4e2a\u6700\u6734\u7d20\u7684\u83ab\u961f\u5b9e\u73b0\u8fd9\u4e2a\u64cd\u4f5c\u4e86\uff0c\u4e8e\u662f\u56de\u6eda\u83ab\u961f\u5c31\u51fa\u73b0\u4e86\u3002\n\n------------\n### \u56de\u6eda\u83ab\u961f\n\n\u5bf9\u4e8e\u4e00\u4e9b\u666e\u901a\u83ab\u961f\u4e0d\u597d\u7ef4\u62a4\u7684\u95ee\u9898\uff0c\u6216\u8005\u5728\u533a\u95f4\u4e2d\u5220\u6389\u4e00\u4e2a\u6570\u4e0d\u597d\u7ef4\u62a4\uff0c\u6216\u8005\u5728\u533a\u95f4\u4e2d\u52a0\u4e0a\u4e00\u4e2a\u6570\u4e0d\u597d\u7ef4\u62a4\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u56de\u6eda\u83ab\u961f\u7ef4\u62a4\n\n\u56de\u6eda\u83ab\u961f\u4e3b\u8981\u7684\u601d\u60f3\u67093\u4e2a\uff08\u8fd9\u91cc\u4ee5\u4e0d\u80fd\u5220\u6570\u7684\u83ab\u961f\u4e3a\u4f8b\uff09\n\n1. \u4ee5\u5de6\u7aef\u70b9\u6240\u5728\u7684\u5757\u9012\u589e\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u53f3\u7aef\u70b9\u7684\u4f4d\u7f6e\u9012\u589e\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57,\u5bf9\u8be2\u95ee\u8fdb\u884c\u6392\u5e8f\u3002\n\n2. \u4ece\u5de6\u5230\u53f3\u9010\u5757\u904d\u5386\u5de6\u7aef\u70b9\u5728\u6b64\u5757\u5185\u7684\u8be2\u95ee\uff0c\u5f00\u59cb\u65f6\u6e05\u7a7a\u4e0a\u4e00\u4e2a\u5757\u7684\u8bb0\u5f55\uff0c\u7136\u540e\u5c06\u53f3\u6307\u9488\u8bbe\u5728\u524d\u4e00\u5757\u7684\u672b\u5c3e\u3002\n\n3. \u7531\u4e8e\u4e4b\u524d\u6392\u5e8f\u7684\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u73b0\u5728\u53f3\u7aef\u70b9\u7684\u5927\u5c0f\u90fd\u662f\u5355\u8c03\u9012\u589e\u7684\uff0c\u6211\u4eec\u5bf9\u4e8e\u8fd9\u4e2a\u5757\u5185\u7684\u8be2\u95eeO(n)\u53ef\u4ee5\u5904\u7406\u51fa\u53f3\u7aef\u70b9\u79fb\u52a8\u7684\u8d21\u732e\uff0c\u5bf9\u4e8e\u5de6\u7aef\u70b9\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u6211\u4eecO($\\sqrt n$)\u5904\u7406\u51fa\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u540c\u65f6\u628a\u7b54\u6848\u8bb0\u5f55\u5728\u53e6\u5916\u4e00\u4e2a\u53d8\u91cf\u4e2d\uff0c\u7136\u540e\u518d\u5012\u7740\u8dd1\u4e00\u904d\u53bb\u9664\u5de6\u7aef\u70b9\u7684\u7684\u8d21\u732e\u3002\u5904\u7406\u51fa\u7684\u7b2c\u4e8c\u4e2a\u7b54\u6848\u5c31\u662f\u672c\u6b21\u8be2\u95ee\u7684\u7b54\u6848\u3002\n\n\u901a\u8fc7\u8fd9\u6837\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u5b9e\u73b0\u53ea\u6709\u6dfb\u6570\u6ca1\u6709\u5220\u6570\u7684\u83ab\u961f\u7b97\u6cd5\u3002\n\n------------\n### \u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<map>\n#include<cstring>\n#include<vector>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nint n,m,nn,nq,in,in2,cn,col[200001],loc[200001],num[200001],num1[200001];\nmap<int,int>mp;\nvector<int>dd[200001];\nstruct query\n{\n    int l,r,id,ans;\n}que[200001];\n//\u7b2c\u4e00\u6b21\u6392\u5e8f\uff0c\u4ee5\u5de6\u7aef\u70b9\u6240\u5728\u7684\u5757\u9012\u589e\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u53f3\u7aef\u70b9\u7684\u4f4d\u7f6e\u9012\u589e\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57;\nbool comp(query x,query y)\n{\n    if(loc[x.l]!=loc[y.l])return loc[x.l]<loc[y.l];\n    return x.r<y.r;\n}\nbool comp2(query x,query y)\n{\n    return x.id<y.id;\n}\nint maxx(int x,int y)\n{\n    return x>=y?x:y;\n}\nint minn(int x,int y)\n{\n    return x<=y?x:y;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    nn=sqrt((double)n);\n    nq=(n+nn-1)/nn;\n    for(int i=0;i<nq;i++)\n    {\n        for(int j=1;j<=nn&&i*nn+j<=n;j++)\n        {\n            loc[i*nn+j]=i;\n        }\n    }\n//\u79bb\u6563\u5316\uff0c\u56e0\u4e3a\u592a\u61d2\u76f4\u63a5\u62ffmap\u5957vector\u8dd1\u7684;\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&in);\n        map<int,int>::iterator ite=mp.find(in);\n        if(ite==mp.end())\n        {\n            mp.insert(pair<int,int>(in,++cn));\n            dd[cn].push_back(i);\n        }\n        else\n        {\n            dd[ite->second].push_back(i);\n        }\n    }\n    cn=0;\n    for(map<int,int>::iterator ite=mp.begin();ite!=mp.end();ite++)\n    {\n        cn++;\n        for(vector<int>::iterator it=dd[ite->second].begin();it!=dd[ite->second].end();it++)\n        {\n            col[*it]=cn;\n        }\n        dd[ite->second].clear();\n    }\n    mp.clear();\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&in,&in2);\n        que[i].l=in,que[i].r=in2,que[i].id=i;\n    }\n    sort(que+1,que+1+m,comp);\n    int j=1;\n//\u6309\u5757\u904d\u5386\u8be2\u95ee;\n    for(int i=0;i<nq;i++)\n    {\n        if(loc[que[j].l]!=i)continue;\n        memset(num,0,sizeof(num));\n        int nnn=minn((i+1)*nn,n),ans=0,nr=nnn;\n        for(;j<=m;j++)\n        {\n            if(loc[que[j].l]!=i)break;\n            int ll=que[j].l,rr=que[j].r,ans1=0;\n            if(loc[ll]==loc[rr])\n            {\n                memset(num1,0,sizeof(num1));\n                for(int k=ll;k<=rr;k++)\n                {\n                    num1[col[k]]++;\n                    ans1=maxx(ans1,num1[col[k]]);\n                }\n                que[j].ans=ans1;\n                continue;\n            }\n            while(nr<rr)\n            {\n                num[col[++nr]]++;\n                ans=maxx(ans,num[col[nr]]);\n            }\n            ans1=ans;\n            int nnn=minn((i+1)*nn,n);\n            for(int k=ll;k<=nnn;k++)\n            {\n                num[col[k]]++;\n                ans1=maxx(ans1,num[col[k]]);\n            }\n            for(int k=ll;k<=nnn;k++)\n            {\n                num[col[k]]--;\n            }\n            que[j].ans=ans1;\n        }\n    }\n    sort(que+1,que+1+m,comp2);\n    for(int i=1;i<=m;i++)\n    {\n        printf(\"%d\\n\",-que[i].ans);\n    }\n    return 0;\n}\n```\n\n\uff08\u7801\u98ce\u504f\u81ed\uff0c~~\u81ea\u8ba4\u4e3a\u8fd8\u53ef\u4ee5\u63a5\u53d7~~\uff09\n\n### **end**",
        "postTime": 1618744133,
        "uid": 261290,
        "name": "ISYRHH",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3709 \u5927\u7237\u7684\u5b57\u7b26\u4e32\u9898"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\n\u7b80\u5316\u540e\u4e3a\u533a\u95f4\u4f17\u6570\u51fa\u73b0\u6b21\u6570\uff0c\u7b80\u5316\u524d\u4e3a\u3010\u6570\u636e\u5220\u9664\u3011\n### \u5410\u69fd\n\u4e3a\u4ec0\u4e48\u9898\u89e3\u53ea\u6709\u4e00\u7bc7\u5206\u5757\uff0c\u5269\u4e0b\u7684\u5168\u662f\u83ab\u961f\uff1f\n\n\u8fd9\u9898\u4e0d\u662f\u84b2\u516c\u82f1\uff1f\u8fd9\u548c\u7b97\u5bfc\u4f8b\u9898\u6709\u4f55\u533a\u522b\uff1f\uff1f\uff1f\n\n\u4e3a\u4ec0\u4e48\u73b0\u5728\u7684\u4eba\u90fd\u559c\u6b22\u53bb\u770b\u9898\u89e3\u800c\u4e0d\u6ce8\u91cd\u601d\u7ef4\uff1f\uff1f\uff1f\n\n\u83ab\u961f\u4e4b\u524d\u4e5f\u80e1\u8fc7\u533a\u95f4\u4f17\u6570\u83ab\u961f\uff0c\u7531\u4e8e\u592a\u83dc\u80e1\u51fa\u6765\u4e86\u4e00\u4e2a\u56de\u6eda\u83ab\u961f\u3002\uff08\u6bd5\u7adf\u66b4\u529b\u601d\u8def\u8fd9\u9898\u5f88\u96be\u5220\uff09\n# \u9898\u89e3\n\u56e0\u4e3a\u67d0\u4e9b\u539f\u56e0\u4ee3\u7801\u662f\u4ece P5048 \u642c\u8fc7\u6765\u7136\u540e\u628a\u5f3a\u5236\u5728\u7ebf\u53bb\u6389\u540e\u52a0\u4e86\u4e2a\u8d1f\u53f7\uff08\n\n\u9996\u5148\u6211\u4eec\u5bf9\u5e8f\u5217\u5206\u5757\uff0c\u7136\u540e\u6c42\u51fa\u5de6\u53f3\u7aef\u70b9\u540c\u65f6\u4e5f\u662f\u67d0\u4e2a\u5757\u7684\u5de6\u53f3\u7aef\u70b9\u7684\u533a\u95f4\u7684\u4f17\u6570\u51fa\u73b0\u6b21\u6570\u3002\uff08\u8bed\u6587\u5dee\u8f7b\u55b7\uff09\n\n\u7136\u540e\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee\uff0c\u628a\u8be2\u95ee\u533a\u95f4\u5206\u4e3a\u6574\u5757\u548c\u8fb9\u89d2\u5757\u540e\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u80fd\u591f\u77e5\u9053\u7b54\u6848\u4e00\u5b9a\u5728 O(\u6574\u5757\u7b54\u6848) \u7ea7\u522b\u3002\u6240\u4ee5\u6211\u4eec\u679a\u4e3e\u8fb9\u89d2\u5757\u7684 $ O(\\sqrt n) $ \u4e2a\u6570\uff0c\u770b\u5b83\u5728\u533a\u95f4\u4e2d\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\u5c31\u884c\u4e86\u3002\n\n\u4f46\u662f\u6570\u51fa\u73b0\u6b21\u6570\u7684\u65b9\u6cd5\u6709\u70b9\u513f\u5999\u3002\n\n\u6211\u4eec\u5f00 $ n $ \u4e2a vector \u8bb0\u5f55\u6bcf\u4e00\u79cd\u6570\u51fa\u73b0\u7684\u4e0b\u6807\u3002\n\n\u5047\u5982\u4e00\u4e2a\u8fb9\u89d2\u5757\u7684\u6570\u53ef\u80fd\u6210\u4e3a\u7b54\u6848\uff08\u8bbe\u5176\u4e3a $ k $\uff09\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u540e\u9762\u7684\u7b2c\u6574\u5757\u7b54\u6848\u4e2a $ k $ \u4e00\u5b9a\u4e5f\u5728\u533a\u95f4\u5185\u3002\n\n\u800c\u5f88\u5bb9\u6613\u77e5\u9053\u66f4\u65b0\u7b54\u6848\u7684\u590d\u6742\u5ea6\u662f $ O(\\sqrt n) $ \u7684\u3002\n\ncode:\n```cpp\n#include<algorithm>\n#include<cstdio>\n#include<vector>\n#include<cmath>\nconst int N=805,M=5e5+5;\nint n,m,p,ans,siz,len,a[M],t[M],pre[M],cnt[M],lsh[M],ANS[N][N];\nint L[N],R[N],pos[M];\nbool vis[M];\nstd::vector<int>id[M];\ninline int min(const int&a,const int&b){\n\treturn a>b?b:a;\n}\ninline int Query(int l,int r){\n\tint i,j,q=pos[l],p=pos[r];\n\tif(q+1>=p||q==p){\n\t\tfor(i=l;i<=r;++i){\n\t\t\tif(++cnt[a[i]]>ans)ans=cnt[a[i]];\n\t\t}\n\t\tfor(i=l;i<=r;++i)--cnt[a[i]];\n\t\treturn ans;\n\t}\n\tans=ANS[q+1][p-1];\n\tfor(i=l;i<=R[q];++i){\n\t\tfor(j=pre[i]+ans;j<id[a[i]].size()&&id[a[i]][j]<=r;++j)++ans;\n\t}\n\tfor(i=L[p];i<=r;++i){\n\t\tfor(j=pre[i]-ans;j>=0&&id[a[i]][j]>=l;--j)++ans;\n\t}\n\treturn ans;\n}\nsigned main(){\n\tregister int i,j,k,x=0,ql,qr;\n\tscanf(\"%d%d\",&n,&m);p=ceil(n/sqrt(m));\n\tfor(i=1;i<=n;++i){\n\t\tscanf(\"%d\",a+i);lsh[i]=a[i];\n\t\tpos[i]=(i-1)/p+1;\n\t}\n\tsiz=pos[n];\n\tfor(i=1;i<=siz;++i)L[i]=R[i-1]+1,R[i]=i*p;\n\tR[siz]=n;\n\tstd::sort(lsh+1,lsh+n+1);len=std::unique(lsh+1,lsh+n+1)-lsh-1;\n\tfor(i=1;i<=n;++i){\n\t\ta[i]=std::lower_bound(lsh+1,lsh+len+1,a[i])-lsh;\n\t\tid[a[i]].push_back(i);pre[i]=id[a[i]].size()-1;\n\t}\n\tfor(i=1;i<=siz;++i){\n\t\tfor(j=i;j<=siz;++j){\n\t\t\tfor(k=L[j];k<=R[j];++k){\n\t\t\t\tif(++cnt[a[k]]>ans)ans=cnt[a[k]];\n\t\t\t}\n\t\t\tANS[i][j]=ans;\n\t\t}\n\t\tfor(j=L[i];j<=n;++j)--cnt[a[j]];ans=0;\n\t}\n\tfor(i=1;i<=m;++i){\n\t\tscanf(\"%d%d\",&ql,&qr);ans=len=0;\n\t\tprintf(\"%d\\n\",-Query(ql,qr));\n\t}\n}\n```",
        "postTime": 1618986577,
        "uid": 160839,
        "name": "Prean",
        "ccfLevel": 7,
        "title": "\u6570\u636e\u7ed3\u6784 \u5206\u5757 P3709\u9898\u89e3"
    },
    {
        "content": "[\u53cc\u500d\u7ecf\u9a8c](https://www.luogu.com.cn/problem/P1997)[\u9898\u89e3](https://www.luogu.com.cn/blog/SX66666/solution-p1997)\u3002  \n\u8fd9\u9053\u9898\u5176\u5b9e\u5c31\u662f\u4e0a\u9762\u8fd9\u9053\u9898\u79bb\u6563\u5316\u4e00\u4e0b\u518d\u52a0\u4e2a\u8bed\u6587\u9605\u8bfb\u7406\u89e3\u5341\u7ea7\u5c31\u597d\u4e86\u3002  \n\u95f2\u8bdd\u5c11\u8bf4\uff0c\u5207\u5165\u6b63\u9898\u2014\u2014  \n\n---\n\u7b2c\u4e00\u773c\u770b\u5230\u9898\u9762\uff1aF\\*\\*\\* \u8fd9\u4ec0\u4e48\u9b3c\u554a\u3002  \n\u6211\u4eec\u6765\u7406\u4e00\u4e0b\u795e\u5947\u7684\u9898\u9762\uff1a  \n\u63d2\u5165 $x$ \u81f3\u96c6\u5408 $S$\uff0c\u663e\u7136 **\u5982\u679c $S$ \u91cc\u6709\u5143\u7d20\u5927\u4e8e\u7b49\u4e8e $x$ \u7684\u8bdd $rp-1$ \u5e76\u4e14 $S$ \u6e05\u7a7a**  \n\u6211\u4eec\u6765\u5206\u6790\u8fd9\u6bb5\u8bdd\uff1a  \n\u5f88\u663e\u7136\u7684\uff0c\u6211\u4eec\u5c06 $[l,r]$ \u5185\u7684\u5143\u7d20\u6392\u5217\u6210\u4e00\u4e2a\u4e2a\u9012\u589e\u5e8f\u5217\u4f9d\u6b21\u63d2\u5165\u80fd\u4f7f $S$ \u6e05\u7a7a\u7684\u6b21\u6570\u6700\u5c0f\u3002\u56e0\u4e3a\u53ea\u6709\u5230\u4e86\u9012\u589e\u5e8f\u5217\u672b\u5c3e\u624d\u4f1a\u6e05\u7a7a\u3002  \n\n\u90a3\u4e48\u95ee\u9898\u8f6c\u5316\u6210\uff1a$[l,r]$ \u7684\u5143\u7d20\u53ef\u4ee5\u6700\u5c11\u53ef\u4ee5\u8868\u793a\u4e3a\u591a\u5c11\u4e2a\u9012\u589e\u5e8f\u5217\u3002  \n\u6bd5\u7adf\u662f\u9012\u589e\u5e8f\u5217\uff0c\u6bcf\u4e00\u6bb5\u5e8f\u5217\u4e2d\u4e0d\u53ef\u80fd\u51fa\u73b0\u76f8\u540c\u7684\u6570\u5b57\u3002  \n\u6211\u4eec\u5c31\u4f1a\u53d1\u73b0\uff0c**\u533a\u95f4\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570\u5c31\u662f\u9012\u589e\u5e8f\u5217\u7684\u4e2a\u6570**\uff01  \n\n\u4e3a\u5565\u5462\uff1f\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a\u5e8f\u5217\u4e2d\u6bcf\u4e2a\u6570\u5b57\u90fd\u80af\u5b9a\u8981\u5305\u542b\u5728\u4e00\u4e2a\u9012\u589e\u5e8f\u5217\u91cc\uff0c\u9012\u589e\u5e8f\u5217**\u6ca1\u6709\u91cd\u590d\u5143\u7d20**\uff0c\u6240\u4ee5\u533a\u95f4\u5185\u6bcf\u4e2a\u662f\u4f17\u6570\u7684\u5143\u7d20\u90fd\u8981\u5355\u72ec\u5728\u4e00\u4e2a\u5e8f\u5217\u91cc\u3002  \n\n\u6700\u7ec8\uff0c\u9898\u610f\u7b80\u5316\u4e3a\uff1a**\u533a\u95f4\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570**\u3002  \n\n---\n\u7136\u540e\u5c31\u548c P1997 \u4e00\u6bdb\u4e00\u6837\u4e86\u3002  \n\u56e0\u4e3a\u53ef\u79bb\u7ebf\uff0c$n$ \u662f $\\le 2 \\times 10 ^ 5$\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u83ab\u961f\u3002  \n\u7136\u540e\u5c31\u8bbe $awa_i$ \u662f\u6709\u591a\u5c11\u4e2a\u51fa\u73b0\u4e86 $i$ \u6b21\u7684\u6570\uff0c$qwq_{a_i}$ \u8868\u793a $a_i$\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\u3002  \n\u83ab\u961f\u561b\uff0c\u8003\u8651\u52a0\u5165\u4f4d\u7f6e\u4e3a $x$ \u7684\u8d21\u732e\u548c\u5220\u9664\u4f4d\u7f6e\u4e3a $x$ \u7684\u8d21\u732e\u3002  \n\u5f53\u52a0\u5165 $x$ \u7684\u8d21\u732e\u7684\u65f6\u5019\uff0c\u9996\u5148\u6211\u4eec\u7684 $qwq_{a_{x}}$ \u8981\u52a0\u4e00\uff0c\u7136\u540e $awa_{qwq_{a_{x}}}$ \u4e5f\u8981\u52a0\u4e00\u3002\u5728\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u987a\u4fbf\u53ef\u4ee5\u66f4\u65b0\u6211\u4eec\u7684\u7b54\u6848 $ans$\uff0c\u4e5f\u5c31\u662f $ans = \\max(ans, qwq_{a_{x}})$\u3002  \n\u5220\u9664\u7684\u65f6\u5019\uff0c\u9996\u5148 $awa_{qwq_{a_{x}}}$ \u8981\u51cf\u4e00\uff0c\u7136\u540e $qwq_{a_{x}}$ \u4e5f\u8981\u51cf\u4e00\u3002\u5982\u679c $ans$ \u662f\u4ece\u8fd9\u4e2a\u72b6\u6001\u8f6c\u79fb\u800c\u6765\uff0c$ans$ \u4e5f\u8981\u51cf\u4e00\u3002  \n\n\u7531\u4e8e $a_i \\le 10 ^ 9$\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u79bb\u6563\u5316\u3002  \n\u79bb\u6563\u5316\u4f1a\u628a~~\u90fd\u6765\u505a\u8fd9\u9898\u4e86\u600e\u4e48\u4f1a\u4e0d\u4f1a\u79bb\u6563\u5316\u5462~~\uff0c\u5c31\u662f\u6392\u5e8f\u53bb\u91cd\u4e8c\u5206\u3002\n\n---\n\u4ee3\u7801\uff1a  \n```cpp\n#include <cstdio> \n#include <algorithm>\n#include <cmath>\n#define MAXN 200000\n#define QWQ printf(\"qwq\\n\");\nusing namespace std;\nint a[MAXN + 10], b[MAXN + 10], Len, ans = 0, Ans[MAXN + 10], awa[MAXN + 10], qwq[MAXN + 10];\nstruct node {\n\tint l, r, ind, cl;\n}in[MAXN + 10];\nbool cmp(node &x, node &y) {//\u83ab\u961f\u7684\u5947\u5076\u5757\u6392\u5e8f\n\treturn ((x.cl != y.cl) ? (x.l < y.l) : ((x.cl & 1) ? (x.r < y.r) : (x.r > y.r)));\n}\nint G(int x) {return lower_bound(b + 1, b + Len + 1, x) - b - 1; }//\u79bb\u6563\u5316\u4f4d\u7f6e\nint max(int x, int y) {return ((x > y) ? (x) : (y));}\nvoid add(int x) {//\u6dfb\u52a0\u8d21\u732e\n    awa[++qwq[a[x]]]++;\n    ans = max(ans, qwq[a[x]]);\n}\nvoid del(int x) {//\u5220\u9664\u8d21\u732e\n    if(awa[qwq[a[x]]] == 1 && qwq[a[x]] == ans)\n        ans--;\n    awa[qwq[a[x]]--]--;\n}\nint main() {\n\tint n, m, len;\n\tscanf(\"%d%d\", &n, &m), len = sqrt(n);\n\tfor(int p = 1; p <= n; p++) {\n\t\tscanf(\"%d\", &a[p]);\n\t\tb[p] = a[p];\n\t}\n\tsort(b + 1, b + n + 1); Len = unique(b + 1, b + n + 1) - b - 1;\n\tfor(int p = 1; p <= n; p++) a[p] = G(a[p]);//\u79bb\u6563\u5316\n\tfor(int p = 1; p <= m; p++) {\n\t\tin[p].ind = p;\n\t\tscanf(\"%d%d\", &in[p].l, &in[p].r);\n\t\tin[p].cl = (in[p].l - 1) / len;\n\t}\n\tsort(in + 1, in + m + 1, cmp);\n\tint l = 1, r = 0;\n\tfor(int p = 1; p <= m; p++) {//\u83ab\u961f\u677f\u5b50\n        while(l < in[p].l) del(l++);\n        while(l > in[p].l) add(--l);\n        while(r < in[p].r) add(++r);\n        while(r > in[p].r) del(r--);\n        Ans[in[p].ind] = ans;\n    } \n\tfor(int p = 1; p <= m; p++)\n\t\tprintf(\"-%d\\n\", Ans[p]);\n}\n```\n\n---\n\u603b\u7684\u6765\u8bf4\u8fd9\u662f\u4e00\u9053\u8bed\u6587 + \u83ab\u961f\u9898\u3002  \n\u611f\u89c9\u8fd9\u9053\u9898\u83ab\u961f\u7684\u6210\u5206\u8fd8\u662f\u6bd4\u8f83\u5c11\u7684\uff0c\u8003\u7684\u4e3b\u8981\u662f\u8bed\u6587\uff08  \n\u5982\u679c\u9898\u610f\u61c2\u4e86\u8fd9\u9053\u9898\u5c31\u662f\u4e2a\u83ab\u961f\u88f8\u9898\u3002  \n\u8fd9\u662f\u6211\u7b2c\u4e00\u9053\u9012\u4ea4\u4e00\u6b21\u5c31 A \u7684\u7d2b\u9898\u5462 qwq\uff0c\u7559\u4e2a\u7eaa\u5ff5\u3002  \n\u5b8c\u7ed3\u6492\u82b1~qwq~\uff01",
        "postTime": 1617110181,
        "uid": 298549,
        "name": "SIXIANG32",
        "ccfLevel": 5,
        "title": "\u3010P3709 \u5927\u7237\u7684\u5b57\u7b26\u4e32\u9898\u3011\u9898\u89e3"
    },
    {
        "content": "\u770b\u5230\u6ca1\u6709\u4eba\u5206\u6790\u9898\u76ee\u4e3a\u4ec0\u4e48\u662f\u201c\u533a\u95f4\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570\u201d\uff0c\u672c\u849f\u84bb\u5c31\u8fc7\u6765\u8bf4\u4e00\u8bf42333\n\n\u53ef\u4ee5\u77e5\u9053\u4e00\u4e9b\u4fe1\u606f\uff1a\n\n1. rp\u4e00\u5b9a\u4e3a\u8d1f\u503c\u3002\n\n2. \u2018\u5982\u679cS\u4e3a\u7a7a\uff0c\u4f60rp\u51cf1\u2019\u8fd9\u4e00\u6761\u4e00\u5b9a\u4e0d\u53ef\u80fd\u6210\u7acb\uff0c\u56e0\u4e3a\u6bcf\u6b21\u64cd\u4f5c\u8fc7\u540e\u90fd\u4f1a\u2018\u4e4b\u540e\u5c06x\u63d2\u5165S\u2019\uff0c\u6240\u4ee5\u5b8c\u5168\u53ef\u4ee5\u5ffd\u7565...\n\n3. \u8981\u6c42rp\u6700\u5927\uff0c\u5373\u2018rp\u51cf1\uff0c\u6e05\u7a7aS\u2019\u7684\u6b21\u6570min\u3002\u8bfb\u9898\u53ef\u77e5\uff1a\u6309\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u653e\u5165\u5373\u53ef\u3002\n\n\n------------\n\n\n\u4f46\u7b2c\u4e09\u6761\u4e2d\u7684\u2018\u6309\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u653e\u5165\u2019\u5e76\u4e0d\u80fd\u5b8c\u5168\u5b9e\u73b0\u6e05\u7a7a\u6b21\u6570min\u3002\n\n\u56e0\u4e3a\u53ef\u4ee5\u5728\u533a\u95f4\u4f17\u6570\u51fa\u73b0\u65f6\uff0c\u7528\u6bd4\u5b83\u5c0f\u7684\u2018\u6700\u5c0f\u91cd\u590d\u6570\u2019\u6e05\u7a7a\uff0c\n\n\u4e4b\u540e\u518d\u52a0\u5165\u2018\u6309\u5927\u5c0f\u987a\u5e8f\u6392\u5217\u7684\u91cd\u590d\u6570\u2019\u548c\u2018\u7ee7\u7eed\u653e\u7f6e\u4ece\u5c0f\u5230\u5927\u7684\u6570\u2019\u3002\n\n------------\n\n\u4e3e\u4f8b\uff0c\u5982\u679c\u533a\u95f4\u7684\u5e8f\u5217\u662f\uff1a\n      \n      1 2 2 3 4 4 4 5 ;\n\n\n\u90a3\u4e48\u987a\u5e8f\u53ef\u4ee5\u662f\uff1a\n\n      1 2 3 4(\u5230\u8fbe\u533a\u95f4\u4f17\u6570) 2(\u6e05\u7a7a\u540e\u653e\u51652) 4 4(\u6e05\u7a7a\u540e\u653e\u51654) 5 .\n\n\n\u6240\u4ee5\u9898\u610f\u5c31\u53d8\u6210\u4e86dalao\u4eec\u8bf4\u7684\uff1a\n\n      \u6c42\u67d0\u533a\u95f4\u5185\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u6570\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\uff08\u533a\u95f4\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570\uff09\u3002\n\n\n------------\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<string>\n#include<queue>\n#include<vector>\n#include<cmath>\n#include<map>\nusing namespace std;\ntypedef long long ll;\n\n// \u3010p3709\u3011\u5927\u7237\u7684\u5b57\u7b26\u4e32\u9898\n// \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32a\uff0c\u6bcf\u6b21\u8be2\u95ee\u4e00\u6bb5\u533a\u95f4\u7684\u8d21\u732e\u3002\u8d21\u732e\u5b9a\u4e49\u4e3a\uff1a\n// \u6bcf\u6b21\u4ece\u8fd9\u4e2a\u533a\u95f4\u4e2d\u968f\u673a\u62ff\u51fa\u4e00\u4e2a\u5b57\u7b26x\uff0c\u7136\u540e\u628ax\u4ece\u8fd9\u4e2a\u533a\u95f4\u4e2d\u5220\u9664\uff0c\u4f60\u8981\u7ef4\u62a4\u4e00\u4e2a\u96c6\u5408S\n// \u5982\u679cS\u4e3a\u7a7a\uff0c\u4f60rp\u51cf1 \uff1b \u5982\u679cS\u4e2d\u6709\u4e00\u4e2a\u5143\u7d20\u4e0d\u5c0f\u4e8ex\uff0c\u5219\u4f60rp\u51cf1\uff0c\u6e05\u7a7aS \uff1b \u4e4b\u540e\u5c06x\u63d2\u5165S\n// \u6bcf\u6b21\u8be2\u95ee\u4f60\u641e\u5b8c\u8fd9\u6bb5\u533a\u95f4\u7684\u5b57\u7b26\u4e4b\u540e\u6700\u591a\u8fd8\u6709\u591a\u5c11rp\uff1frp\u521d\u59cb\u4e3a0\u3002\n\nvoid reads(int &x){ //\u8bfb\u5165\u4f18\u5316\uff08\u6b63\u8d1f\u6574\u6570\uff09\n    int fx=1;x=0;char s=getchar();\n    while(s<'0'||s>'9'){if(s=='-')fx=-1;s=getchar();}\n    while(s>='0'&&s<='9'){x=(x<<3)+(x<<1)+s-'0';s=getchar();}\n    x*=fx; //\u6b63\u8d1f\u53f7\n}\n\nconst int N=500019;\n\nint n,m,pos[N],a[N],b[N],cnt[N],tim[N],max_cnt=0;\n\nstruct node{int l,r,id,ans;}q[N];\n\nbool cmp(node a,node b) //\u540c\u5757\u4e2d\u6309r\u6392\u5e8f\uff0c\u4e0d\u540c\u5757\u65f6\u6309l\u6392\u5e8f\n { if(pos[a.l]==pos[b.l]) return a.r<b.r; return a.l<b.l; }\n\nbool cmp_id(node a,node b){return a.id<b.id;}\n\nvoid add(int i) //tim[i]:\u51fa\u73b0\u6b21\u6570\u4e3ai\u7684\u6570\u7684\u4e2a\u6570\n { tim[cnt[a[i]]]--; tim[++cnt[a[i]]]++; max_cnt=max(max_cnt,cnt[a[i]]); }\n\nvoid del(int i)\n { tim[cnt[a[i]]]--; if(cnt[a[i]]==max_cnt&&!tim[cnt[a[i]]]) max_cnt--; \n   tim[--cnt[a[i]]]++; /* \u6bcf\u6b21\u5220\u9664\u53ea\u51cf\u5c0f1\u4e2a\uff0c\u5728\u8fd9\u91cc\u53ef\u4ee5\u76f4\u63a5\u5c06max_cnt-1 \u2191\u2191  */ }\n\nvoid solve(){\n    for(int i=1,l=1,r=0;i<=m;i++){\n        while(r<q[i].r) add(++r);\n        while(r>q[i].r) del(r--);\n        while(l<q[i].l) del(l++);\n        while(l>q[i].l) add(--l); q[i].ans=max_cnt;  \n    }\n}\n\nint main(){\n    reads(n),reads(m); for(int i=1;i<=n;i++) reads(a[i]),b[i]=a[i];\n    int block=(int)sqrt(n); for(int i=1;i<=n;i++) pos[i]=(i-1)/block+1;\n    sort(b+1,b+n+1); int bn_=unique(b+1,b+n+1)-b-1;\n    for(int i=1;i<=n;i++) a[i]=lower_bound(b+1,b+bn_+1,a[i])-b;\n    for(int i=1;i<=m;i++) reads(q[i].l),reads(q[i].r),q[i].id=i;\n    sort(q+1,q+m+1,cmp); solve(); //\u79bb\u7ebf\u6392\u5e8f\u8be2\u95ee\uff0c\u8fdb\u884c\u83ab\u961f\u7b97\u6cd5\n    sort(q+1,q+m+1,cmp_id); for(int i=1;i<=m;i++) printf(\"%d\\n\",-q[i].ans);\n}\n```\n",
        "postTime": 1551774042,
        "uid": 69404,
        "name": "flora715",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3709 \u3010\u5927\u7237\u7684\u5b57\u7b26\u4e32\u9898\u3011"
    },
    {
        "content": "\u7b97\u6cd5\u662f\u83ab\u961f \u6700\u91cd\u8981\u7684\u662f\u600e\u4e48\u7b97\u79fb\u52a8\u4ea7\u751f\u7684\u8d21\u732e\n\n```\n//\u8003\u8651\u600e\u4e48\u7b97\u8d21\u732e\n//cnt \u51fa\u73b0\u6b21\u6570\u4e3ax\u7684\u6570\u6709\u591a\u5c11\u4e2a\n//bit \u6570x\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\n//res \u5f53\u524d\u7684\u7b54\u6848\n//v \u5df2\u7ecf\u79bb\u6563\u5316\u597d\u4e86\u7684\u503c\nvoid del(rg int v){\n\tif(res==bit[v]&&cnt[bit[v]]==1)res--;\n\t//\u5982\u679c\u5f53\u524d\u7b54\u6848\u6b63\u597d\u662f\u6211\u4eec\u8981\u4fee\u6539\u7684\u503c \u5e76\u4e14\u6211\u4eec\u4fee\u6539\u540e\u4ed6\u5c31\u5e76\u4e0d\u662f\u6211\u4eec\u5f53\u524d\u7b54\u6848\u4e86\n\t//\u90a3\u4e48\u5f53\u524d\u7684\u7b54\u6848\u662f\u4e0d\u662f\u5c31\u4f1a-1\uff1f\n\t//\u5047\u8bbe\u51fa\u73b0\u6b21\u6570\u6700\u591a\u4e3a5 \u53ea\u6709\u4e00\u4e2a\u6570 \u5982\u679c\u6211\u4eec\u51cf\u53bb\u5355\u4e2a\u4ed6\u7684\u8d21\u732e\n\t//\u90a3\u4e48\u4ed6\u51fa\u73b0\u6b21\u6570\u5c31\u662f4\u4e86 \u5c31\u4e0d\u662f\u7b54\u6848\u4e86\n\t//\u4f46\u662f\u51fa\u73b0\u6b21\u6570\u4e3a4\u7684\u6570\u5c31\u4e00\u5b9a\u4f1a\u5b58\u5728\n\t//\u56e0\u4e3a\u4ed6\u5c31\u662f\u51fa\u73b0\u6b21\u6570\u4e3a4\u7684\u6570\u561b\n\t//\u6240\u4ee5res--\u5c31\u53ef\u4ee5\u4e86\n\tcnt[bit[v]]--;//\u51fa\u73b0\u6b21\u6570\u4e3abit[v]\u7684\u6570--\n\tbit[v]--;//v\u51fa\u73b0\u6b21\u6570--\n\tcnt[bit[v]]++;//\u51fa\u73b0\u6b21\u6570\u4e3abit[v]++\n}\nvoid add(rg int v){\n\tif(res==bit[v])res++;\n\t//\u5982\u679c\u5f53\u524d\u7b54\u6848\u662f\u6211\u4eec\u8981\u4fee\u6539\u7684\u503c\u5462\uff1f\n\t//v\u7684\u51fa\u73b0\u6b21\u6570\u5df2\u7ecf\u662f\u5f53\u524d\u6700\u5927\u7684\u6b21\u6570\u4e86\n\t//\u5982\u679c\u4ed6\u518d\u589e\u5927\u4e00\u4e2a \u662f\u4e0d\u662f\u4e00\u5b9a\u4f1a\u66f4\u65b0\u7b54\u6848\n\t//\u540c\u6837\u7684 res++\u5c31\u53ef\u4ee5\u4e86\n\tcnt[bit[v]]--;\n\tbit[v]++;\n\tcnt[bit[v]]++;\n\t\n}\n\n```",
        "postTime": 1523017400,
        "uid": 66915,
        "name": "Tyher",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3709 \u3010\u5927\u7237\u7684\u5b57\u7b26\u4e32\u9898\u3011"
    },
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\n\n~~\u51fa\u9898\u4eba\u8bed\u6587\u2026\u2026\u5509\u2026\u2026~~\n\n\u5927\u610f\uff1a\u7ed9\u5b9a\u51e0\u4e2a\u8be2\u95ee\uff0c\u95ee\u4e00\u4e2a\u533a\u95f4\u6700\u5c11\u88ab\u51e0\u4e2a\u4e25\u683c\u4e0a\u5347\u7684\u5e8f\u5217\u8986\u76d6\u3002\n\n\u53ef\u4ee5\u8f6c\u5316\u4e3a\u533a\u95f4\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n## \u9898\u89e3\n\n\u9898\u9762\u5c31\u4e0d\u5410\u69fd\u4e86\u3002\n\n\u4e0d\u5e26\u4fee\uff0c\u53ef\u79bb\u7ebf\uff0c\u8003\u8651\u83ab\u961f\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e24\u4e2a\u4e1c\u897f\u3002\n\n\u4e00\u4e2a\u662f $CNT_{x}$ \u8868\u793a $x$ \u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u5c31\u662f $APPEAR_{x}$ \u8868\u793a\u51fa\u73b0\u6b21\u6570\u4e3a $x$ \u7684\u6570\u7684\u6570\u91cf\u3002\n\n$APPEAR_{x}$ \u7684\u5b9a\u4e49\u6709\u70b9\u7ed5\uff0c\u597d\u597d\u8bfb\u4e00\u4e0b\u3002\n\n\u83ab\u961f\u52a0\u8d21\u732e\u7684\u65f6\u5019\u5c31 `appear[cnt[a[x]]]--,appear[++cnt[a[x]]]++` \u5373\u53ef\u3002\n\n\u610f\u601d\u5c31\u662f\u51fa\u73b0\u6b21\u6570\u4e3a `cnt[a[x]]` \u7684\u6ca1\u4e86\uff0c\u51cf\u4e00\u4e2a\uff0c\u540e\u9762\u7684\u540c\u7406\u3002\n\n\u51cf\u8d21\u732e\u5927\u4f53\u6ca1\u4ec0\u4e48\u533a\u522b\uff0c\u7528\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf `flags` \u8bb0\u5f55\u7b54\u6848\u7684\u76f8\u53cd\u6570\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\u5982\u679c\u6ee1\u8db3 `cnt[a[x]]==flags && appear[cnt[a[x]]]==1` \u90a3\u4e48\u6211\u4eec\u9700\u8981\u5c06 `flags-1`\u3002\u540e\u9762\u7684\u5c31\u548c\u52a0\u8d21\u732e\u53cd\u7740\u6765\u5373\u53ef\u3002\n\n\u5c40\u90e8\u4ee3\u7801\uff1a\n\n```cpp\nconst int N = 2e5 + 5;\nint n, m, flags, Size, a[N], cnt[N], appear[N], ans[N];\nvector < int > disc;\nstruct Query_Node {\n\tint l, r, id, pos;\n\tbool operator < (const Query_Node& rhs) const {\n\t\tif (pos == rhs.pos)\n\t\t\treturn r < rhs.r;\n\t\telse return pos < rhs.pos;\n\t}\n} e[N];\n\nint Get_ID(int x) {\n\treturn lower_bound(disc.begin(), disc.end(), x) - disc.begin() + 1;\n}\n\nvoid Add(int x) {\n\tappear[cnt[x]]--;\n\tappear[++cnt[x]]++;\n\tflags = max(flags, cnt[x]);\n}\n\nvoid Del(int x) {\n\tif (cnt[x] == flags && appear[cnt[x]] == 1) --flags;\n\tappear[cnt[x]]--;\n\tappear[--cnt[x]]++;\n}\n\nvoid Contribute() {\n\tint l = 1, r = 0;\n\tfor (int i = 1; i <= m; ++i) {\n\t\twhile (l < e[i].l) Del(a[l++]);\n\t\twhile (l > e[i].l) Add(a[--l]);\n\t\twhile (r > e[i].r) Del(a[r--]);\n\t\twhile (r < e[i].r) Add(a[++r]);\n\t\tans[e[i].id] = -flags;\n\t}\n}\n\nsigned main() {\n\tread(n, m), Size = sqrt(m);\n\tfor (int i = 1; i <= n; ++i) {\n\t\tread(a[i]);\n\t\tdisc.push_back(a[i]);\n\t}\n\tsort(disc.begin(), disc.end());\n\tdisc.erase(unique(disc.begin(), disc.end()), disc.end());\n\tfor (int i = 1; i <= n; ++i)\ta[i] = Get_ID(a[i]);\n\tfor (int i = 1; i <= m; ++i) {\n\t\tread(e[i].l, e[i].r);\n\t\te[i].id = i;\n\t\te[i].pos = (e[i].l - 1) / Size;\n\t}\n\tsort(e + 1, e + 1 + m);\n\tContribute();\n\tfor (int i = 1; i <= m; ++i)\tprintf(\"%d\\n\", ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1592025106,
        "uid": 161849,
        "name": "cirnovsky",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3709 \u3010\u5927\u7237\u7684\u5b57\u7b26\u4e32\u9898\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5e94\u8be5\u52a0\u4e00\u4e2a\u201c\u8bed\u6587\u201d\u6807\u7b7e\uff0c\u7b2c\u4e00\u904d\u8bfb\u9898\uff0c\u4ee5\u4e3a\u662f\u66b4\u529b\u52a0\u4f18\u5316\uff0c\u540e\u6765\u60f3\u5230\u4e86\u4e25\u683c\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\uff0c\u81ea\u5df1\u641e\u4e86\u51e0\u7ec4\u6570\u636e\uff0c\u53d1\u73b0\u662f\u4ed6\u4eec\u7684\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u81f3\u4e8e\u4e3a\u4ec0\u4e48\uff0c\u4e0b\u9762\u518d\u8bf4\u3002\u8fd9\u9898\u7684\u9898\u9762\u771f\u72e0...\n# \u5206\u6790\n\u8fd9\u9898\u7684\u7cbe\u9ad3\u662f\u9898\u9762\uff0c\u8ba4\u771f\u8bfb\u5b8c\u9898\uff0c\u4e00\u756a\u8ba4\u771f\u601d\u8003\uff0c\u53d1\u73b0\u662f\u6c42\u4f17\u6570\u7684\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u8fd9\u91cc\u89e3\u91ca\u4e00\u4e0b\uff0c\u5728\u4e0a\u9762\u5df2\u7ecf\u8bf4\u4e86\uff0c\u8fd9\u662f\u6c42\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\uff08\u8fd9\u5e94\u8be5\u5f88\u597d\u7406\u89e3\uff09\uff0c\u4e3a\u4ec0\u4e48\u662f\u4f17\u6570\u5462\uff1f \u56e0\u4e3a\u6211\u4eec\u5047\u8bbe\u6709 $n$ \u4e2a\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u7f16\u53f7\u4e3a $1-n$\uff0c\u6211\u4eec\u8ba9\u7f16\u53f7\u5927\u7684\u5b50\u5e8f\u5217\u5c3d\u53ef\u80fd\u957f\uff0c\u8fd9\u6837\u82e5\u6709\u4e24\u4e2a\u5b50\u5e8f\u5217 $a$ \u548c $b(a>b)$,$b$ \u4e2d\u6709\u4e00\u4e2a\u5143\u7d20\u662f $a$ \u6ca1\u6709\u7684\uff0c\u90a3\u4e48\u5c06\u8fd9\u4e2a\u4e0e\u5143\u7d20\u63d2\u5165 $a$ \u4e2d\uff0c\u5219\u6b64\u65f6\u7684 $a$ \u5e8f\u5217\u7684\u957f\u5ea6\u5c31\u4e0d\u7b26\u5408\u5047\u8bbe\uff0c\u5219\u53ef\u5f97\u7ed3\u8bba $Sub_1\\subseteq Sub2\\subseteq Sub_3...\\subseteq Sub_n$\uff0c\u5373 $n=$ \u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u4f17\u6570\u4e3a $Sub_1$ \u4e2d\u7684\u6240\u6709\u5143\u7d20\u3002\n\n\u5982\u679c\u770b\u4e0d\u61c2\uff0c\u53ef\u4ee5\u81ea\u5df1\u624b\u6253\u51e0\u7ec4\u6570\u636e\u770b\u770b\u3002\n\n\u65e2\u7136\u77e5\u9053\u662f\u6c42\u4f17\u6570\u4e86\uff0c\u53c8\u662f\u533a\u95f4\uff0c\u53c8\u53ef\u4ee5\u79bb\u7ebf\uff0c\u4f17\u6570\u8fd8\u662f\u5173\u4e8e\u7edf\u8ba1\u7684\uff0c\u90a3\u4e48\u8fd9\u9898\u57fa\u672c\u5c31\u53ef\u4ee5\u65ad\u5b9a\u4e3a\u83ab\u961f\u4e86\uff0c\u800c\u4e14\u8fd8\u662f\u666e\u901a\u83ab\u961f......\n\n\u8fd9\u9053\u6c34\u9898\u5c31\u8fd9\u6837\u88ab\u5207\u6389\u4e86...\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nstruct node{\n\tint l,r,id;\n}p[200005];\nint n,m,s,l=1,r,L,R,tot,a[200005],flag[200005],cnt[200005],ccnt[200005],ans[200005],idx[200005];\nbool cmp(node x,node y){\n\treturn idx[x.l]==idx[y.l]?(idx[x.l]&1?x.r<y.r:x.r>y.r):x.l<y.l;//\u517b\u6210\u4e60\u60ef\uff0c\u5947\u5076\u6392\u5e8f \n}\nvoid add(int i){\n\t--ccnt[cnt[a[i]]];  //\u7edf\u8ba1\u6570\u51fa\u73b0\u7684\u6b21\u6570\u51fa\u73b0\u7684\u6b21\u6570\n\t++ccnt[++cnt[a[i]]];//\u770b\u4e0d\u61c2\u4e2d\u6587\u53ef\u4ee5\u53c2\u8003\u4ee3\u7801\u7406\u89e3\n\ttot=max(tot,cnt[a[i]]);\n}\nvoid del(int i){\n\t--ccnt[cnt[a[i]]];\n\tif(tot==cnt[a[i]]&&ccnt[cnt[a[i]]]==0) --tot;//\u8fd9\u91cc\u5982\u679c\u5220\u6389\u7684\u662f\u4f17\u6570\u800c\u4e14\u662f\u552f\u4e00\u7684\uff0c\u90a3\u4e48\u5c06\u7b54\u6848\u51cf\u4e00 \n\t++ccnt[--cnt[a[i]]]; \n}\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\ts=sqrt(n);\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%d\",&a[i]);\n\t\tidx[i]=(i+s-1)/s;//\u5206\u5757 \n\t\tflag[i]=a[i];//\u79bb\u6563\u53161\uff1a\u8bb0\u5f55 \n\t}\n\tsort(flag+1,flag+n+1);//\u79bb\u6563\u53162\uff1a\u6392\u5e8f \n\tint lenlen=unique(flag+1,flag+n+1)-flag-1;//\u79bb\u6563\u53163\uff1a\u53bb\u91cd \n\tfor(int i=1;i<=n;++i) a[i]=lower_bound(flag+1,flag+lenlen+1,a[i])-flag;//\u79bb\u6563\u53164\uff1a\u8d4b\u503c\n\tfor(int i=1;i<=m;++i){\n\t\tscanf(\"%d%d\",&p[i].l,&p[i].r);\n\t\tp[i].id=i;\n\t}\n\tsort(p+1,p+m+1,cmp);\n\tfor(int i=1;i<=m;++i){\n\t\tL=p[i].l,R=p[i].r;\n\t\twhile(l>L) add(--l);\n\t\twhile(r<R) add(++r);\n\t\twhile(l<L) del(l++);\n\t\twhile(r>R) del(r--);\n\t\tans[p[i].id]=-tot;//\u8bb0\u5f97\u8fd9\u91cc\u662f\u8d1f\u7684\uff01\uff01\uff01 \n\t}\n\tfor(int i=1;i<=m;++i) printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1627357700,
        "uid": 383791,
        "name": "Others",
        "ccfLevel": 7,
        "title": "P3709\u9898\u89e3"
    },
    {
        "content": "## Solution\n\n\u9996\u5148\uff0c\u8fd9\u9053\u9898\u8ba9\u6211\u4eec\u6c42\u7684\u5176\u5b9e\u662f\u533a\u95f4\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n\u7136\u800c\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u8fd9\u9898\u7684\u52a0\u5165\u5143\u7d20\u5f88\u7b80\u5355\uff0c\u4f46\u5220\u9664\u5143\u7d20\u5f88\u56f0\u96be\uff08\u542c\u8bf4\u597d\u50cf\u6709\u4e00\u79cd\u7528\u6808\u5220\u9664\u7684\uff09\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u53ea\u52a0\u4e0d\u51cf\u7684\u56de\u6eda\u83ab\u961f\u3002\n\n\u63a5\u7740\u90fd\u662f\u5e38\u89c4\u5957\u8def\u3002\n\n\u56de\u6eda\u83ab\u961f\u4e0d\u4f1a\u7684\u6233\u8fd9\u513f -> [\u4f20\u9001\u95e8](https://www.cnblogs.com/Parsnip/p/10969989.html)\n\n## Code\n\n```cpp\n%:include\"bits/stdc++.h\"\nusing namespace std;\n%:define N (int)(2e5+10)\nint n,m;\nint a[N],d[N],M,belong[N],cnt[N],l,r,ans[N],siz;\nint Cnt[N];\nstruct query {\n\tint l,r,id;\n}q[N];\ninline bool cmp(query a,query b) {\n\tif (belong[a.l]!=belong[b.l]) return belong[a.l]<belong[b.l];\n\telse return a.r<b.r;\n}\ninline int query(int x,int y) {\n\tint Ans=0;\n\tfor(int i=x;i<=y;i++) {\n\t\tCnt[a[i]]++;\n\t\tAns=max(Ans,Cnt[a[i]]);\n\t}\n\tfor(int i=x;i<=y;i++) Cnt[a[i]]--;\n\treturn Ans;\n}\ninline int doit(int qnum,int x) {\n\tfor(int i=1;i<=M;i++) cnt[i]=0;\n\tint L=min(x*siz,n);\n\tint i=qnum,l=L+1,r=L;\n\tint anss=0;\n\tfor(;belong[q[i].l]==x;i++) { // \u5343\u4e07\u4e0d\u8981\u5199\u6210 for(;belong[i]==x;i++)\n\t\tif (belong[q[i].l]==belong[q[i].r]) {\n\t\t\tans[q[i].id]=query(q[i].l,q[i].r);\n\t\t\tcontinue;\n\t\t}\n\t\twhile (r<q[i].r) {\n\t\t\tr++; cnt[a[r]]++;\n\t\t\tanss=max(anss,cnt[a[r]]);\n\t\t}\n\t\tint qwq=anss;\n\t\twhile (l>q[i].l) {\n\t\t\tl--; cnt[a[l]]++;\n\t\t\tanss=max(anss,cnt[a[l]]);\n\t\t}\n\t\tans[q[i].id]=anss;\n\t\tfor(int j=l;j<=L;j++) cnt[a[j]]--;\n\t\tanss=qwq;\n\t\tl=L+1;\n\t}\n\treturn i;\n}\nsigned main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(0); cout.tie(0);\n\tcin>>n>>m; siz=sqrt(n);\n\tfor(int i=1;i<=n;i++) cin>>a[i],d[i]=a[i];\n\tsort(d+1,d+n+1);\n\tM=unique(d+1,d+n+1)-d-1;\n\tfor(int i=1;i<=n;i++) a[i]=lower_bound(d+1,d+M+1,a[i])-d; // \u79bb\u6563\u5316\n\tfor(int i=1;i<=m;i++) cin>>q[i].l>>q[i].r,q[i].id=i;\n\tfor(int i=1;i<=n;i++) belong[i]=(i-1)/siz+1;\n\tsort(q+1,q+m+1,cmp);\n\tint qnum=1;\n\tfor(int i=1;i<=belong[n];i++) {\n\t\tqnum=doit(qnum,i);\n\t}\n\tfor(int i=1;i<=m;i++) cout<<-ans[i]<<endl; // \u6700\u540e\u8f93\u51fa\u662f -ans[i]\n\treturn 0;\n}\n```\n\u5b8c\u7ed3\u6492\u82b1\uff01 ^.^",
        "postTime": 1622468860,
        "uid": 355448,
        "name": "Fido_Puppy",
        "ccfLevel": 0,
        "title": "P3709 \u5927\u7237\u7684\u5b57\u7b26\u4e32\u9898"
    },
    {
        "content": "\u770b\u8d77\u6765\u77e5\u8bc6\u70b9 + \u601d\u7ef4\u96be\u5ea6\u5927\u6982\u84dd\u9898\uff0c\u8bfb\u9898\u96be\u5ea6\u5927\u6982\u7d2b\u9898\uff1f\n\n\u56e0\u4e3a\u8bf4\u5b9e\u8bdd\u6211\u73b0\u5728\u8fd8\u662f\u5f88\u96be\u72ec\u7acb\u63cf\u8ff0\u6e05\u695a\u9898\u9762\u7684\u610f\u601d\n\n## Description\n\n\u8981\u6c42\u4ece\u533a\u95f4\u6bcf\u6b21\u53d6\u4e00\u4e2a\u6570\u4e0e\u7ed9\u5b9a\u7684 $x$ \u4f5c\u6bd4\u8f83\uff0c\u82e5\u53d6\u51fa\u7684\u6570\u5c0f\u4e8e $x$ \u5219\u5206\u6570\u51cf\u4e00\uff0c\u6c42\u6700\u5927\u5206\u6570\n\n\u56e0\u4e3a\u6ca1\u6709\u52a0\u5206\u64cd\u4f5c\u53ea\u6709\u6263\u5206\u64cd\u4f5c\uff0c\u6240\u4ee5\u4e5f\u53ef\u4ee5\u770b\u6210\u8981\u6c42\u6263\u5206\u6700\u5c0f\u5316\n\n\u56e0\u6b64\u672c\u8d28\u662f\u6bcf\u6b21\u4ece\u533a\u95f4\u4e2d\u53d6\u51fa\u4e00\u4e2a\u4e25\u683c\u4e0a\u5347\u7684\u5e8f\u5217\uff0c\u7136\u540e\u95ee\u6700\u5c11\u53d6\u51e0\u6b21\uff08\u8fd8\u662f\u5f15\u7528\u4e86\u697c\u53c9\u697c\u7684\u8bdd\uff0c\u56e0\u4e3a\u4e2a\u4eba\u80fd\u529b\u65e0\u6cd5\u505a\u6210\u66f4\u8a00\u7b80\u610f\u8d45\u7684\u63cf\u8ff0\u4e86\uff09\n\n## Solution\n\n\u90a3\u5c31\u662f\u627e\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u6570\u7684\u51fa\u73b0\u6b21\u6570\u54af\n\n\u8fd9\u4e48\u4e00\u8bf4\u5c31\u7b80\u5355\u591a\u4e86\uff0c\u83ab\u961f\u641e\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\n\n\u5148\u7ed9\u6570\u636e\u79bb\u6563\u5316\uff0c\u7136\u540e\u901a\u8fc7\u7ef4\u62a4\u6bcf\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\u548c\u51fa\u73b0\u8fd9\u4e48\u591a\u6b21\u7684\u6570\u7684\u4e2a\u6570\u6765\u8f6c\u79fb\u533a\u95f4\u66f4\u65b0\u7b54\u6848\u5373\u53ef\n\n\u6ce8\u610f\u6536\u7f29\u533a\u95f4\u65f6\u8981\u786e\u5b9a\u5220\u53bb\u7684\u8fd9\u4e2a\u6570\u662f\u5426\u6709\u552f\u4e00\u6027\uff0c\u6216\u8005\u8bf4\u662f\u5426\u5bf9\u7b54\u6848\u6709\u5f71\u54cd\uff0c\u5177\u4f53\u5185\u5bb9\u770b\u4ee3\u7801\n\n\u770b\u8d77\u6765\u8fd9\u4e48\u505a\u4e0d\u52a0\u4efb\u4f55\u4f18\u5316\u4f9d\u7136\u8dd1\u5f97\u98de\u5feb\uff08\uff1f\uff09\n\n\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f\u51fa\u73b0\u6700\u591a\u7684\u6570\u7684\u51fa\u73b0\u6b21\u6570\u7684\u76f8\u53cd\u6570\n\n## Code\n\n```cpp\n#include<queue>\n#include<cmath>\n#include<vector>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<climits>\n#include<iostream>\n#include<algorithm>\n#define maxn 1000010\n#define INF 0x3f3f3f3f\n//#define int long long\n\nusing namespace std;\n\nint n,m,Ans,len,L=1,R=0,tot;\nint sum[maxn],num[maxn],cnt[maxn];\nint ans[maxn],b[maxn],a[maxn],siz[maxn];\nstruct question{int now,l,r;}q[maxn];\n \nint read(){\n    int s=0,w=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-') w=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9') s=(s<<1)+(s<<3)+ch-'0',ch=getchar();\n    return s*w;\n}\n\nbool cmp(question x,question y){\n    return (x.l/len)^(y.l/len)?x.l<y.l:x.r<y.r;\n}\n\nvoid build(){\n    n=read();m=read();len=sqrt(n+0.5);\n    for(int i=1;i<=n;i++)a[i]=read(),b[i]=a[i];\n    sort(b+1,b+n+1);tot=unique(b+1,b+n+1)-b-1;\n    for(int i=1;i<=n;i++)a[i]=lower_bound(b+1,b+tot+1,a[i])-b;\n    for(int i=1;i<=m;i++)q[i].l=read(),q[i].r=read(),q[i].now=i;    \n    sort(q+1,q+m+1,cmp);\n}\n\nvoid Add(int x){\n    num[cnt[a[x]]]--;num[++cnt[a[x]]]++;\n    Ans=max(Ans,cnt[a[x]]);\n}\n\nvoid Del(int x){    \n    num[cnt[a[x]]]--;num[--cnt[a[x]]]++;\n    if(Ans==cnt[a[x]]+1&&!num[cnt[a[x]]+1]) Ans--;\n    //\u82e5\u5220\u9664\u7684\u90a3\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\u5c31\u662f\u7b54\u6848\u5e76\u4e14\u51fa\u73b0\u8fd9\u4e48\u591a\u6b21\u7684\u6570\u53ea\u6709\u90a3\u4e00\u4e2a\u65f6\uff0c\u5220\u53bb\u5b83\u4f1a\u4f7f\u5f97\u7b54\u6848\u53d8\u52a3\n}\n\nint main(){\n    build();\n    for(int i=1;i<=m;i++){\n        while(L>q[i].l) Add(--L);\n        while(R<q[i].r) Add(++R);\n        while(L<q[i].l) Del(L++);\n        while(R>q[i].r) Del(R--);\n        ans[q[i].now]=Ans;\n    }\n    for(int i=1;i<=m;i++) printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```\n```",
        "postTime": 1613912921,
        "uid": 281497,
        "name": "KEBrantily",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3709 \u3010\u5927\u7237\u7684\u5b57\u7b26\u4e32\u9898\u3011"
    },
    {
        "content": "~~\u6b64\u849f\u84bb\u592a\u5f31\u4e86\uff0c\u68c0\u67e5\u4e86\u4e00\u5929\u540e\u53d1\u73b0\u539f\u6765\u5206\u5757\u5199\u9519\u4e86\u3002~~\n\n------------\n\n[\u4e0d\u4f1a \u83ab\u961f \u7684\u70b9\u8fd9\u91cc\u3002](https://www.cnblogs.com/WAMonster/p/10118934.html)\n\n\u6211\u4eec\u5148\u770b\u9898\uff1a\n\n\u4f60\u8981\u7ef4\u62a4\u4e00\u4e2a\u96c6\u5408 $S$\u3002\n\n* \u7ed9\u4f60\u4e00\u6bb5\u6570\u5b57\u6784\u6210\u7684\u533a\u95f4\u3002\n* \u6bcf\u6b21\u4ece\u8fd9\u4e2a\u533a\u95f4\u4e2d\u62ff\u51fa\u4e00\u4e2a\u6570\u5b57 $x$\u3002\n* \u5982\u679c $S$ \u4e3a\u7a7a\uff0c\u4f60 $rp$ \u51cf $1$\u3002\n* \u5982\u679c $S$ \u4e2d\u6709\u4e00\u4e2a\u5143\u7d20\u4e0d\u5c0f\u4e8e $x$\uff0c\u5219\u4f60 $rp$ \u51cf $1$\uff0c\u6e05\u7a7a $S$\u3002\n* \u4e4b\u540e\u5c06 $x$ \u63d2\u5165 $S$\u3002\n\n\n\u7ecf\u6574\u7406\uff0c\u6211\u4eec\u53d1\u73b0\uff1a\n\n* \u82e5\u60f3\u8981 $rp$ \u5c3d\u91cf\u5927\uff0c\u6211\u4eec\u6bcf\u6b21\u53d6\u6700\u5c0f\u7684\u80fd\u4e0d\u51cf $rp$ \u7684\u6570\u5b57\u3002\n* \u5f53\u7136\uff0c\u82e5\u65e0\u6570\u5b57\u53ef\u4e0d\u51cf $rp$ \u90a3\u4e48\u8981\u53d6\u6700\u5c0f\u7684\u6570\u5b57\u3002\n\n\u6240\u4ee5\uff0c\u8fd9\u9053\u9898\u7684\u7b54\u6848\u4e0d\u5c31\u662f\u533a\u95f4\u4e2d\u6570\u51fa\u73b0\u7684\u6b21\u6570\u7684\u6700\u5927\u503c $\u00d7-1$ \u5417\uff1f\n\n\u518d\u770b\u8303\u56f4 \u5bf9\u4e8e $100%$ \u7684\u6570\u636e\uff0c$1\u2264n,m\u22642\u00d710^5$ \uff0c$1\u2264ai\u226410^9$\uff0c$1\u2264l,r\u2264n$\u3002\n\n\u5443... \u8fd9\u4e2a $a$ \u503c\u6709\u70b9\u5927\uff0c\u80fd\u4e0d\u80fd\u4f18\u5316\uff1f\n\n\u53ef\u4ee5\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u8981 $a$ \u7684\u79cd\u7c7b\u3002\u6545\u53ea\u5c06 $a$ \u5206\u7c7b $1$ \u5230 $K$ \u5c31\u884c\u4e86\u3002\uff08 $K$ \u4e3a $a$ \u7684\u79cd\u7c7b\uff09\n\n\u5982\u4ee3\u7801\uff1a\n\n\n\n```cpp\nint n,m;\nint a[5000005][2];//\u539f a \u2014\u2014\u2014  a[][0] \u8868\u793a\u6570\u503c   a[][1] \u8868\u793a\u4f4d\u7f6e \nint sum=0;\nint aa[5000005];\n......\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++){\n\tscanf(\"%d\",&a[i][0]);a[i][1]=i;\n\t}\n//\tfor(int i=1;i<=m;i++){\n//\t\tscanf(\"%d%d\",&px[i].l,&px[i].r);\n//\t\tpx[i].wz=i;\n//\t}\u4e0d\u7528\u7ba1\uff0c\u533a\u95f4\u67e5\u8be2\u50a8\u5b58\u90e8\u5206 \n......\n\tkp(1,n);//\u6392\u5e8f\uff0c\u4f7f\u539f\u6570\u7ec4\u6709\u5e8f \u65b9\u4fbf\u8d4b\u503c  \n    //\uff08\u5176\u5b9e\u5c31\u662f\u6211\u592a\u61d2  \u76f4\u63a5\u8d4b\u503c+\u7528\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55 \u4e5f\u884c \n\tfor(int i=1;i<=n;i++){\n\t\tif(a[i][0]!=a[i-1][0])\n\t\tsum++;//\u56e0\u4e3a\u76f8\u540c\u7684\u90fd\u5728\u4e00\u8d77\uff0c\u6545\u82e5  a[i][0]!=a[i-1][0]  \u5c31\u627e\u5230\u4e00\u4e2a\u65b0\u7684\u6570\u503c \n\t\taa[a[i][1]]=sum;//\u5c06\u6570\u503c\u8d4b\u503c\u7ed9 aa[]  \n\t}\n......\n```\n\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u8981\u89e3\u51b3\u6700\u5927\u503c\u95ee\u9898\u3002\n\n\u901a\u8fc7\u83ab\u961f\u662f\u4e00\u4e2a\u4e00\u4e2a\u79fb\u52a8 $l , r$ \u6307\u9488\u5b9e\u73b0\u7684\uff0c\n\n\u6211\u4eec\u6709\u4ee5\u4e0b\u7ed3\u8bba\uff1a\n\n* \u6bcf\u6b21\u5c06\u6709\u4e00\u4e2a\u6570\u4e2a\u6570 \u52a0\u51cf $1$ \u3002\n\n\u6240\u4ee5\uff1a\n\n* \u589e\u52a0\u65f6\uff0c\u6700\u5927\u503c\u7531\u539f\u6765\u6700\u5927\u503c $+1$ \u5f97\u5230\u3002\n* \u51cf\u5c11\u65f6\uff0c\u6700\u5927\u503c\u662f\u539f\u6765\u6700\u5927\u503c $-1$ \u6216 $-0$ (\u6709\u591a\u4e2a\u6700\u5927\u503c) \u5f97\u5230\u3002\n\n\u6240\u4ee5\u589e\u52a0\u65f6,\u6211\u4eec\u770b\u770b\u589e\u52a0\u540e\u8fd9\u4e2a\u6570\u7684\u6570\u91cf\u662f\u5426\u8d85\u8fc7 $ans$ \u5c31\u884c\u4e86\u3002\n\n\u51cf\u5c11\u65f6\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u6570\u7ec4\u7ef4\u62a4\u5176\u4ed6\u503c\u5c31\u884c\u4e86\u3002\n\n\u770b\u4e00\u4e0b\u4ee3\u7801\u5427\uff1a\n\n```cpp\nstruct PX{\n\tint l;\n\tint r;\n\tint wz;\n}px[5000005];\nint n,m;\nint sum=0;\nint aa[5000005];\nint ans[5000005];\nint jl[5000005];\nint cnt[5000005];\nint fk[5000005];\nint tot=0;\nint l=0,r=0;\n\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++){\n\tscanf(\"%d\",&a[i][0]);a[i][1]=i;\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&px[i].l,&px[i].r);\n\t\tpx[i].wz=i;\n\t}\n\tfor(register int i=1;i<=m;i++){\n\t\t//\u8fdb\u5165\u533a\u95f4\u65f6\u5148\u52a8\u6307\u9488  \u51fa\u533a\u95f4\u65f6\u5219\u53cd\u4e4b \n\t\t// jl[]  \u8bb0\u5f55  \u7f16\u53f7\u4e3a aa[\u6307\u9488] \u7684\u6570 \u51fa\u73b0\u7684\u4e2a\u6570 \n\t\t// cnt[]  \u8bb0\u5f55  \u7f16\u53f7\u4e3a jl[aa[\u6307\u9488]] \u7684\u6570 \u51fa\u73b0\u7684\u4e2a\u6570\n\t\t//\u4f8b\u5b50\uff1a\n\t\t/*\n\t\t\tjl[](\u4e0b\u6807)  1    2    3    4    5    6    7    8    9    10 \n\t\t\t\n\t\t\t  \u6570\u503c      1    5    2    1    2    0    0    0    3    5\n\t\t\t  \n\t\t\t  \n\t\t\t  \n\t\t\tcnt[](\u4e0b\u6807) 0    1    2    3    4    5    6    7    9    10\n\t\t\t\n\t\t\t  \u6570\u503c      3    2    2    1    0    2    0    0    0    0\n\t\t\t  \n\t\t\t  \u6765\u6e90     789  14   35    9        2 10 \n\t\t*/ \n\t\twhile(r<px[i].r){r++;cnt[jl[aa[r]]]--;jl[aa[r]]++;cnt[jl[aa[r]]]++;tot=jl[aa[r]]>tot?jl[aa[r]]:tot;}\n\t\t\t\t\t\t//\u52a0\u4e00\u4e2a\u6570 cnt\u4e2d\u539f\u6570\u4e2a\u6570 \u4e2a\u6570--   \u539f\u6570\u4e2a\u6570++    cnt\u4e2d\u539f\u6570\u4e2a\u6570+1 \u4e2a\u6570++   \n\t\twhile(l>px[i].l){l--;cnt[jl[aa[l]]]--;jl[aa[l]]++;cnt[jl[aa[l]]]++;tot=jl[aa[l]]>tot?jl[aa[l]]:tot;}\n\t\t\n\t\twhile(l<px[i].l){cnt[jl[aa[l]]]--;jl[aa[l]]--;cnt[jl[aa[l]]]++;l++;tot=cnt[tot]? tot:tot-1;}\n\t\t\t\t\t  //\u51cf\u4e00\u4e2a\u6570 cnt\u4e2d\u539f\u6570\u4e2a\u6570 \u4e2a\u6570--   \u539f\u6570\u4e2a\u6570--    cnt\u4e2d\u539f\u6570\u4e2a\u6570-1 \u4e2a\u6570++ \n\t\twhile(r>px[i].r){cnt[jl[aa[r]]]--;jl[aa[r]]--;cnt[jl[aa[r]]]++;r--;tot=cnt[tot]? tot:tot-1;}\n\t\t\n\t\tans[px[i].wz]=-tot;\n\t}\n\n\n\n\n```\n\n\u4e8e\u662f\u76f4\u63a5\u628a\u83ab\u961f\u5957\u4e0a\u5c31\u5b8c\u4e8b\u5566\uff1a\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct PX{\n\tint l;\n\tint r;\n\tint wz;\n}px[5000005];\nint n,m;\nint a[5000005][2];\nint sum=0;\nint aa[5000005];\nint ans[5000005];\nint jl[5000005];\nint cnt[5000005];\nint fk[5000005];\nint gs,sq;\nint tot=0;\nint l=0,r=0;\nint cmp(PX a,PX b){\n\treturn (fk[a.l]^fk[b.l])? fk[a.l]>fk[b.l]:((fk[a.l]&1)? a.r<b.r:a.r>b.r);\n//----------------------------//\u5947\u5076\u6392\u5e8f  \u53ef\u5feb\u4e00\u500d  \u8bc1\u660e\u89c1\u4e0a\u9762 \u94fe\u63a5 \n}\nvoid kp(int l,int r){\n\tint i=l,j=r;\n\tint mid=a[(l+r)/2][0];\n\twhile(i<=j){\n\t\twhile(a[i][0]<mid)i++;\n\t\twhile(a[j][0]>mid)j--;\n\t\tif(i<=j){\n\t\t\tswap(a[i][0],a[j][0]);\n\t\t\tswap(a[i][1],a[j][1]);\n\t\t\ti++;j--;\n\t\t}\n\t}\n\tif(l<j)kp(l,j);\n\tif(i<r)kp(i,r);\n}\n//---------------------------//\u4e00\u4e2a\u666e\u901a\u7684\u5feb\u6392  :) \nsigned main(){\n\n\tscanf(\"%d%d\",&n,&m);\n\tsq=sqrt(n);//--------------------------// \n\tgs=ceil((double)n/sq);\t\t\t\t  // \n//---------------------------------------// \u5206\u5757 \n\tfor(int i=1;i<=gs;i++)              // \u6211\u5c31\u662f\u5728\u8fd9\u91cc\u6302\u4e86 \n\tfor(int j=(i-1)*gs+1;j<=i*gs;j++)  // \n\tfk[j]=i;\t\t\t\t\t\t  // \n\tfor(int i=1;i<=n;i++){\t\t\t // \n\tscanf(\"%d\",&a[i][0]);\t\t\t// \n\ta[i][1]=i;\t\t\t\t\t   // \n\t} \t\t\t\t\t\t\t  // \n//-------------------------------// \n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&px[i].l,&px[i].r);\n\t\tpx[i].wz=i;\n\t}\n//-----------------------------// \n\tsort(px+1,px+m+1,cmp);    // \u6211\u8fd8\u4e0d\u592a\u4f1a\u7528 sort \n\tkp(1,n);\t\t\t\t // \u4e0d\u8fc7\u76f8\u5bf9\u4e8e \u5feb\u6392 kp  sort\u597d\u9999 \n//--------------------------// \n\tfor(int i=1;i<=n;i++){\n\t\tif(a[i][0]!=a[i-1][0])sum++;\n\t\taa[a[i][1]]=sum;\n\t}\n\tcnt[0]=500055;\n//-----------------------------------------//\u83ab\u961f \n\tfor(register int i=1;i<=m;i++){\n\t\twhile(r<px[i].r){r++;cnt[jl[aa[r]]]--;jl[aa[r]]++;cnt[jl[aa[r]]]++;tot=jl[aa[r]]>tot?jl[aa[r]]:tot;}\n\t\twhile(l>px[i].l){l--;cnt[jl[aa[l]]]--;jl[aa[l]]++;cnt[jl[aa[l]]]++;tot=jl[aa[l]]>tot?jl[aa[l]]:tot;}\n\t\twhile(l<px[i].l){cnt[jl[aa[l]]]--;jl[aa[l]]--;cnt[jl[aa[l]]]++;l++;tot=cnt[tot]? tot:tot-1;}\n\t\twhile(r>px[i].r){cnt[jl[aa[r]]]--;jl[aa[r]]--;cnt[jl[aa[r]]]++;r--;tot=cnt[tot]? tot:tot-1;}\n\t\tans[px[i].wz]=tot;\n\t}\n//-------------------------------------// \u8f93\u51fa \n\tfor(int i=1;i<=m;i++){\n\t\tprintf(\"%d\\n\",-ans[i]);\n\t}\n}\n\n```\n\n\u4f46\u8fd9\u4e2a\u4ee3\u7801\u53ef\u4ee5\u66f4\u5feb\uff1a\n\n* $while$ \u79fb\u52a8\u6307\u9488\u65f6 \u53ef\u4ee5\u7f29\u77ed\u4ee3\u7801\u3002\n\n* \u56e0\u4e3a $jl[aa[\u6307\u9488]]$ \u5728 $jl[aa[\u6307\u9488+1]]$ \u4e0d\u4e3a $0$ \u65f6 \u7528\u4e0d\u5230\n\uff0c \u6240\u4ee5 $cnt$ \u53ea\u7528\u6267\u884c\u4e00\u4e2a\u64cd\u4f5c\u5c31\u884c\u4e86\u3002\n\n* $sort$ \u6392\u5e8f\u4e2d $cmp$ \u7684\u7b56\u7565\u52a0\u4e0a \u82e5 a.r==b.r  a.l<b.l \u3002\n\n\n\u4f18\u5316\u4ee3\u7801\uff1a\n\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct PX{\n\tint l;\n\tint r;\n\tint wz;\n}px[5000005];\nint n,m;\nint a[5000005][2];\nint sum=0;\nint aa[5000005];\nint ans[5000005];\nint jl[5000005];\nint cnt[5000005];\nint fk[5000005];\nint gs,sq;\nlong long aass=0;\nint tot=0;\nint l=0,r=0;\n//-----------------------------------------------------//\u7b56\u7565\u66f4\u65b0 \nint cmp(PX a,PX b){\n\treturn (fk[a.l]^fk[b.l])? fk[a.l]>fk[b.l]:((a.r^b.r)?(((fk[a.l]&1)? a.r<b.r:a.r>b.r)):a.l<b.l);\n}\nvoid kp(int l,int r){\n\tint i=l,j=r;\n\tint mid=a[(l+r)/2][0];\n\twhile(i<=j){\n\t\twhile(a[i][0]<mid)i++;\n\t\twhile(a[j][0]>mid)j--;\n\t\tif(i<=j){\n\t\t\tswap(a[i][0],a[j][0]);\n\t\t\tswap(a[i][1],a[j][1]);\n\t\t\ti++;j--;\n\t\t}\n\t}\n\tif(l<j)kp(l,j);\n\tif(i<r)kp(i,r);\n}\nsigned main(){\n\tscanf(\"%d%d\",&n,&m);\n\tsq=sqrt(n);\n\tgs=ceil((double)n/sq);\n\tfor(int i=1;i<=gs;i++)\n\tfor(int j=(i-1)*gs+1;j<=i*gs;j++)\n\tfk[j]=i;\n\tfor(int i=1;i<=n;i++){\n\tscanf(\"%d\",&a[i][0]);a[i][1]=i;\n\t}\n\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&px[i].l,&px[i].r);\n\t\tpx[i].wz=i;\n\t}\n\tsort(px+1,px+m+1,cmp);\n\tkp(1,n);\n\tfor(int i=1;i<=n;i++){\n\t\tif(a[i][0]!=a[i-1][0])sum++;\n\t\taa[a[i][1]]=sum;\n\t}\n\tcnt[0]=500055;\n\tfor(register int i=1;i<=m;i++){\n\t\t//\u6781\u9650\u7f29\u77ed \uff1a) \n\t\twhile(r<px[i].r){cnt[++jl[aa[++r]]]++;tot+=cnt[tot+1]? 1:0;}\n\t\twhile(r>px[i].r){cnt[jl[aa[r--]]--]--;tot+=cnt[tot]? 0:-1;}\n\t\twhile(l>px[i].l){cnt[++jl[aa[--l]]]++;tot+=cnt[tot+1]? 1:0;}\n\t\twhile(l<px[i].l){cnt[jl[aa[l++]]--]--;tot+=cnt[tot]? 0:-1;}\n\t\tans[px[i].wz]=tot;\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tprintf(\"%d\\n\",-ans[i]);\n\t}\n}\n```\n\n\n\n\n\u8fd9\u7bc7\u9898\u89e3\u5c31\u5230\u8fd9\u91cc\u4e86\uff0c\n\n\u5982\u6709\u4e0d\u5230\u4e4b\u5904\u8bf7\u591a\u591a\u6307\u6559\u3002\n\n\n\n",
        "postTime": 1605429710,
        "uid": 399239,
        "name": "\u5929\u5357\u661f\u9b54\u828b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3709 \u3010\u5927\u7237\u7684\u5b57\u7b26\u4e32\u9898\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u6c42\u533a\u95f4\u4f17\u6570\u51fa\u73b0\u6b21\u6570\u3002\n\n%%%\u83ab\u961f\u7684\u795e\u4ed9\n\n\u5199\u4e00\u53d1\u5206\u5757\u778e\u641e\u7684\u9898\u89e3\n\n\u5148\u968f\u4fbf\u79bb\u6563\u5316\u4e00\u4e0b\uff0c\u7136\u540e\u968f\u4fbf\u5206\u4e2a\u5757\u3002\u5206\u5757\u540e\uff0c\u9884\u5904\u7406\u51fa\u7b2c$i$~$j$\u5757\u4e4b\u95f4\u7684\u4f17\u6570\u51fa\u73b0\u6b21\u6570\uff0c\u8bb0\u4e3a$MAX[i][j]$\n\n\u641e\u4e00\u4e2a$vector$\u6309\u987a\u5e8f\u8bb0\u5f55\u5b58\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u4f4d\u7f6e\uff0c\u7136\u540e\u518d\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e2a\u5143\u7d20\u5728$vector$\u4e2d\u7684\u4f4d\u7f6e\uff0c\u8bb0\u4e3a$pos[i]$\u3002\n\n\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u6574\u5757\u7684\u6574\u4e2a\u7edf\u8ba1\u3002\u5bf9\u4e8e\u6563\u5757\u4e2d\u7684\u6570\uff0c\u8003\u8651\u4e00\u4e0b\u5b83\u7684\u51fa\u73b0\u6b21\u6570\u6709\u6ca1\u6709\u53ef\u80fd\u8d85\u8fc7\u4f17\u6570\u3002\n\n\u5bf9\u4e8e\u5de6\u8fb9\u89d2\u7684\u6570\uff0c\u8bbe\u5f53\u524d\u6570\u4e3a$x$\uff0c\u6211\u4eec\u5728$vector$\u91cc\u9762\u627e\u5230\u4e0b\u6807\u4e3a$pos[x]+ans$\u7684\u5143\u7d20$y$\uff0c\u82e5$y\u2264r$\uff0c\u90a3\u4e48\u5143\u7d20$y$\u7684\u51fa\u73b0\u6b21\u6570\u4e00\u5b9a\u8d85\u8fc7\u4e86$ans$\uff0c\u6211\u4eec\u628a$ans+1$\u3002\u5bf9\u4e8e\u53f3\u8fb9\u89d2\u7684\u6570\uff0c\u540c\u7406\u778e\u641e\u4e00\u4e0b\u3002\n\n\u603b\u590d\u6742\u5ea6$O((n+m)\\sqrt n)$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n// luogu-judger-enable-o2\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 500050, BLNM = 5050;\nvoid read(int &x) {\n\tchar ch; while(ch = getchar(), ch < '!'); x = ch - 48;\n\twhile(ch = getchar(), ch > '!') x = (x << 3) + (x << 1) + ch - 48;\n}\nint belong[MAXN], L[MAXN], R[MAXN], a[MAXN], MAX[BLNM][BLNM], blsz, n, q, w[MAXN], siz[MAXN], blnm, cnt[MAXN], lastans;\nvector <int> lis[MAXN];\nint main() {\n\tread(n); read(q); blsz = sqrt(n);\n\tfor(int i = 1; i <= n; ++i) read(a[i]), w[i] = a[i], belong[i] = (i-1) / blsz + 1;\n\tsort(a+1, a+n+1); int _n = unique(a+1, a+n+1) - a - 1;\n\tfor(int i = 1; i <= n; ++i) {\n\t\tw[i] = lower_bound(a+1, a+_n+1, w[i]) - a;\n\t\tsiz[i] = lis[w[i]].size();\n\t\tlis[w[i]].push_back(i);\n\t} blnm = belong[n];\n\tfor(int i = 1; i <= blnm; ++i) L[i] = (i-1) * blsz, R[i] = L[i] + blsz - 1;\n\tL[1] = 1; R[blnm] = n;\n\tfor(int i = 1; i <= blnm; ++i) {\n\t\tmemset(cnt, 0, sizeof cnt);\n\t\tint mx = 0, ima = i;\n\t\tfor(int j = L[i]; j <= n; ++j) {\n\t\t\t++cnt[w[j]];\n\t\t\tmx = max(cnt[w[j]], mx);\n\t\t\tif(j == R[ima]) {MAX[i][ima] = mx; ++ima;}\n\t\t}\n\t}\n\twhile(q--) {\n\t\tint l, r; read(l); read(r);\n\t\tint lblock = belong[l], rblock = belong[r]; lastans = 0;\n\t\tif(lblock == rblock) {\n\t\t\tfor(int i = l; i <= r; ++i) while(siz[i] + lastans < lis[w[i]].size() && lis[w[i]][siz[i] + lastans] <= r) ++lastans;\n\t\t} else {\n\t\t\tif(lblock + 1 < rblock) lastans = MAX[lblock+1][rblock-1];\n\t\t\tfor(int i = l; i <= R[lblock]; ++i) while(siz[i] + lastans < lis[w[i]].size() && lis[w[i]][siz[i] + lastans] <= r) ++lastans;\n\t\t\tfor(int i = L[rblock]; i <= r; ++i) while(siz[i] >= lastans && lis[w[i]][siz[i] - lastans] >= l) ++lastans;\n\t\t}\n\t\tprintf(\"%d\\n\", -lastans);\n\t}\n}\n\n```",
        "postTime": 1553077743,
        "uid": 2491,
        "name": "\u8bd7\u4e43",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3709 \u3010\u5927\u7237\u7684\u5b57\u7b26\u4e32\u9898\u3011"
    },
    {
        "content": "- \u9898\u76ee\u94fe\u63a5\uff1a\n\n   https://www.luogu.org/problemnew/show/P3709\n   \n- \u601d\u8def\uff1a\n\n   \u9996\u5148\u6211\u662f\u6ca1\u8bfb\u61c2\u9898\u76ee\u7684\uff0c\u6d4f\u89c8\u4e86\u8ba8\u8bba\u533a\u7684dalao\u53d1\u73b0\u624d\u77e5\u9053\u5c31\u662f\u6c42\u533a\u95f4\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570\u3002\n   \n   \u7136\u540e\u80af\u5b9a\u662f\u7528\u83ab\u961f\uff0c\u5177\u4f53\u600e\u4e48\u5199\u83ab\u961f\u5176\u4ed6\u9898\u89e3\u90fd\u5199\u5f97\u5f88\u8be6\u7ec6\uff0c\u8fd9\u91cc\u4e0d\u8d58\u8ff0.\u7136\u540e\u89c2\u5bdf\u6570\u636e\u8303\u56f41e9\u80af\u5b9a\u8981\u79bb\u6563\u5316\u3002\n   \n   \u4f46\u662f\u9898\u89e3\u91cc\u8bb2\u79bb\u6563\u5316\u7684\u4e0d\u591a\uff0c\u6211\u5c31\u8bb2\u4e00\u8bb2\u6211\u81ea\u5df1\u778e\u641e\u7684\u4e00\u4e2a\u79bb\u6563\u5316\u65b9\u6cd5\n   \n   \u770b\u5230\u9898\u89e3\u91cc\u5176\u4ed6dalao\u90fd\u662f\u4ec0\u4e48lower_bound\u6216\u6211\u770b\u4e0d\u61c2\u7684\u795e\u4ed9\u64cd\u4f5c\u3002\u800c\u849f\u84bb\u6211\u5c31\u778e\u641e\u51fa\u4e86\u4e00\u4e2a\u6bd4\u8f83\u66b4\u529b\u7684,\u4e5f\u901a\u4fd7\u6613\u61c2\u65b9\u6cd5---\u5f00\u4e86\u4e24\u4e2amap.\n   \n   \u7b2c\u4e00\u4e2amap al\u7528\u6765\u79bb\u6563\u5316\uff0c\u8bb0\u5f55\u5143\u7d20\u662f\u5426\u51fa\u73b0\u8fc7.\n   \n   \u7b2c\u4e8c\u4e2amap getrk\u987e\u540d\u601d\u4e49\uff0c\u7528\u6765\u79bb\u6563\u5316\u83b7\u53d6\u6bcf\u4e2a\u6570\u7684\u6392\u540d.\n   \n   dat[]\u7528\u6765\u8bb0\u5f55**\u539f\u5b57\u7b26\u4e32**,num[]\u7528\u6765\u8bb0\u5f55**\u53bb\u91cd**\u540e\u7684\u6570\uff0c\u5373**\u6240\u6709\u51fa\u73b0\u7684\u5143\u7d20**\n   \n   \u8bfb\u5165\u5b57\u7b26\u4e32\u540e\u5c06num[]\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u51fa\u73b0\u5143\u7d20\u7684\u6392\u540d\uff0c\u5f53\u7136\u5c31\u662f\u7528getrk\n   \n   \u63a5\u7740\u5c31\u4e0d\u7ba1num[]\uff0c\u6211\u4eec\u904d\u5386\u4e00\u904d\u83b7\u53d6**\u539f\u5b57\u7b26\u4e32\u4e2d\u6bcf\u4e2a\u6570\u7684\u6392\u540d**\u5b8c\u6210\u79bb\u6563\u5316.\n   \n   \u7531\u4e8e\u5f00\u4e86map,\u5e38\u6570\u6bd4\u8f83\u5927\uff0c\u5f00\u4e86O2\u8dd1\u4e862000\u591ams\uff0c\u4f46\u662f\u80fd\u8fc7\u5c31\u884c\u4e86\n   \n- \u4ee3\u7801\uff1a\n\n```\n// luogu-judger-enable-o2\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\n#include <cctype>\n#include <map>\n#include <cmath>\nusing namespace std;\nconst int maxn=200005;\nmap <int,bool>al;\nmap <int,int>getrk;\nstruct Ask{\n\tint l,r,id,x;\n}ask[maxn];\nint num[maxn],dat[maxn],rk[maxn];\nint belong[maxn],block;\nint N,n=0,m;\nint a[maxn],cnt[maxn];\nint ans[maxn],anss=0;\ntemplate<class T>inline void read(T &x){\n\tx=0;int ne=0;char c;\n\twhile(!isdigit(c=getchar()))ne=c=='-';\n\tx=c-48;\n\twhile(isdigit(c=getchar()))x=(x<<3)+(x<<1)+c-48;\n\tx=ne?-x:x;\n\treturn ;\n}\ninline bool cmp0(const int&x,const int&y){\n\treturn x>y;\n}\ninline bool cmp2(const Ask &x,const Ask &y){\n\treturn belong[x.l]^belong[y.l]?belong[x.l]<belong[y.l]:belong[x.l]&1?x.r<y.r:x.r>y.r;\n}\ninline void init()\n{\n\tint x;\n\tread(N),read(m);\n\tblock=N/sqrt(m*2/3);\n    n=0;\n\tfor(register int i=1;i<=N;i++){//N\u662f\u539f\u5b57\u7b26\u4e32\u957f\u5ea6\n\t\tread(x);\n\t\tdat[i]=x;\n\t\tif(al[x]==0){//\u53bb\u91cd\n\t      num[++n]=x;//n\u662f\u53bb\u91cd\u540enum[]\u6570\u7ec4\u957f\u5ea6\n\t\t  al[x]=1;\n\t\t } \n\t    belong[i]=(i-1)/block+1;\n\t}\n\tsort(num+1,num+1+n,cmp0);\n\tfor(register int i=1;i<=n;i++){\n\t\tgetrk[num[i]]=i;\n  //      belong[i]=(i-1)/block+1;\n\t}\n\tfor(register int i=1;i<=N;i++){\n\t\trk[i]=getrk[dat[i]];\n\t}\n\t//sort(num+1,num+1+n,cmp1);\n\tfor(register int i=1;i<=m;i++){\n\t\tread(ask[i].l),read(ask[i].r);\n\t\task[i].id=i;\n\t}\n\tsort(ask+1,ask+1+m,cmp2);\n\treturn;\n}\ninline void add(int x){\n\tint now=rk[x];\n\tif(anss==a[now])anss++;\n\tcnt[a[now]]--;\n\ta[now]++;\n\tcnt[a[now]]++;\n\treturn;\n} \ninline void sub(int x){\n\tint now=rk[x];\n\tif(anss==a[now]&&cnt[a[now]]==1)anss--;\n\tcnt[a[now]]--;\n\ta[now]--;\n\tcnt[a[now]]++;\n\treturn;\n}\ninline void solve()\n{\n\tint l=1,r=0,ll,rr;\n\tcnt[0]=n;\n\tfor(register int i=1;i<=m;i++){\n\t\tll=ask[i].l,rr=ask[i].r;\n\t\twhile(r<rr)add(++r);\n\t\twhile(r>rr)sub(r),r--;\n\t\twhile(l<ll)sub(l),l++;\n\t\twhile(l>ll)add(--l); \n\t\tans[ask[i].id]=anss;\n\t}\n\tfor(register int i=1;i<=m;i++){\n\t\tprintf(\"-%d\\n\",ans[i]);\n\t}\n\treturn ;\n}\nint main()\n{\n    init();\n    solve();\n\treturn 0;\n } \n```",
        "postTime": 1524755839,
        "uid": 61382,
        "name": "Rye_Catcher",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3709 \u3010\u5927\u7237\u7684\u5b57\u7b26\u4e32\u9898\u3011"
    },
    {
        "content": "```cpp\n// \u601d\u8def\uff1a\n// \u7531\u4e8e\u6570\u636e\u6709\u4e9b\u5927\uff0c\u6240\u4ee5\u5148\u5bf9\u8be5\u201c\u5b57\u7b26\u4e32\u201d\u8fdb\u884c\u79bb\u6563\u5316\n// \u7136\u540e\u5957\u7528\u83ab\u961f\uff0c\u6c42\u51fa\u533a\u95f4\u4f17\u6570\u5373\u53ef\n#include <iostream>\n#include <array>\n#include <cmath>\n#include <algorithm>\n\nconstexpr int MaxN = 400000 + 5;\nstd::array<int, MaxN> s{ 0 }, q{ 0 }, d{ 0 }, Ans{ 0 }, Sum{ 0 }, cnt{ 0 };\n// Sum[t]\u8868\u793at\u8fd9\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\n// cnt[i]\u8868\u793a\u51fa\u73b0\u4e86i\u6b21\u7684\u6570\u6709\u51e0\u4e2a\n// Ans[i]\u8868\u793a\u7b2ci\u6b21\u7684\u8be2\u95ee\u7684\u7b54\u6848\n\nint Read()\n{\n    int n = 0, k = 1;\n    char ch = std::getchar();\n    while ((ch > '9' || ch < '0') && ch != '-')\n    {\n        ch = std::getchar();\n    }\n\n    if (ch == '-')\n    {\n        k = -1;\n        ch = std::getchar();\n    }\n\n    while (ch <= '9' && ch >= '0')\n    {\n        n = n * 10 + ch - '0';\n        ch = std::getchar();\n    }\n\n    return n * k;\n}\n\nclass Query\n{\npublic:\n    int x, y, id;\n\n    Query() = default;\n    Query(int x, int y, int id) :\n        x(x), y(y), id(id)\n    {\n    }\n\n    bool operator<(const Query &rhs) const noexcept\n    {\n        if (s[x] != s[rhs.x])   // \u5982\u679c\u5904\u4e8e\u4e0d\u540c\u7684\u5206\u5757\uff0c\u90a3\u5c31\u6309\u5206\u5757\u7684\u6b21\u5e8f\u6765\u6392\u5217\n        {\n            return s[x] < s[rhs.x];\n        }\n        else // \u5982\u679c\u5904\u4e8e\u76f8\u540c\u7684\u5206\u5757\uff0c\u90a3\u5c31\u6309\u7167\u53f3\u7aef\u70b9\u7684\u6b21\u5e8f\u6765\u6392\u5217\n        {\n            return y < rhs.y;\n        }\n    }\n};\n\nstd::array<Query, MaxN> Que;\n\nint main()\n{\n    int n, m;\n    n = Read();\n    m = Read();\n\n    int sqt = static_cast<int>(std::sqrt(n));\n    for (int i = 1; i <= n; ++i)\n    {\n        int t;\n        t = Read();\n        q[i] = t;   // \u5c06\u8981\u88ab\u6392\u5e8f\u53bb\u91cd\u7684\u6570\u7ec4\n        d[i] = t;   // \u539f\u6570\u7ec4\uff0c\u8bb0\u5f55\u4e0b\u539f\u5c01\u4e0d\u52a8\u7684\u6570\u5b57\u5e8f\u5217\uff0c\u5c31\u662f\u9898\u76ee\u4e2d\u7684\u201c\u5b57\u7b26\u4e32\u201d\n        s[i] = i / sqt;   // \u5206\u5757\n    }\n\n    // \u5148\u7ed9q\u6570\u7ec4\u6392\u5e8f\uff0c\u7136\u540e\u6c42\u51fa\u4e0d\u76f8\u540c\u7684\u5143\u7d20\u7684\u4e2a\u6570\uff08Size\uff09\uff0c\u4e3a\u540e\u9762\u79bb\u6563\u5316\u505a\u51c6\u5907\n    std::sort(q.begin() + 1, q.begin() + n + 1);\n    auto Size = std::unique(q.begin() + 1, q.begin() + n + 1) - (q.begin() + 1);\n    for (int i = 1; i <= n; ++i)\n    {\n        // \u8bb0\u5f55\u4e0b\u539f\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u6570\u662f\u7b2c\u51e0\u5927\u7684\uff0c\u4e5f\u5c31\u662f\u79bb\u6563\u5316\u4e86\n        d[i] = std::lower_bound(q.begin() + 1, q.begin() + Size + 1, d[i]) - q.begin();\n    }\n    for (int i = 1; i <= m; ++i)\n    {\n        int l, r;\n        l = Read();\n        r = Read();\n        Que[i] = std::move(Query(l, r, i));\n    }\n    std::sort(Que.begin() + 1, Que.begin() + m + 1);    // \u7528\u83ab\u961f\u524d\u8981\u5148\u6392\u5e8f\n\n    // \u6ce8\u610fl\u4e00\u5b9a\u8981\u4ece1\u5f00\u59cb\uff0c\u6211\u5728\u8fd9\u91ccWA\u4e86\u56db\u6b21!\n    int l = 1, r = 0, Now = 1;\n    cnt[0] = 1;\n    for (int i = 1; i <= m; ++i)\n    {\n        auto x = Que[i].x, y = Que[i].y;\n\n        while (l > x)   // \u5f53\u524dl\u5728\u8be2\u95ee\u7684\u5de6\u7aef\u70b9\u7684\u53f3\u4fa7\n        {\n            --l;    // l\u9000\u4e00\u6b65\n            auto &t = Sum[d[l]];    // t\uff1a\u6570\u5b57d[l]\u51fa\u73b0\u7684\u4e2a\u6570\n            --cnt[t];   // \u6570\u5b57d[l]\u7684\u4e2a\u6570\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u8fd9\u4e00\u53e5\u6709\u70b9\u7ed5\n            if (Now == t)   // \u5982\u679c\u9047\u5230\u4e86\u539f\u6765\u7684\u4f17\u6570\uff0c\u5c31\u628a\u8ba1\u6570\u5668\u52a0\u4e00\n            {\n                ++Now;\n            }\n\n            ++t;    // \u8fd9\u65f6\u5019\u624d\u53ef\u4ee5\u66f4\u65b0\u6570\u5b57d[l]\u7684\u4e2a\u6570\n            ++cnt[t];\n        }\n\n        // \u540e\u9762\u7684\u4e5f\u8fd8\u662f\u83ab\u961f\u7684\u5957\u8def\uff0c\u540c\u7406\u4e86\n        while (r < y)\n        {\n            ++r;\n            auto &t = Sum[d[r]];\n            if (Now == t)\n            {\n                ++Now;\n            }\n\n            --cnt[t];\n            ++t;\n            ++cnt[t];\n        }\n\n        while (l < x)\n        {\n            auto &t = Sum[d[l]];\n            --cnt[t];\n            if (Now == t && cnt[t] == 0)    // \u5982\u679c\u6ca1\u6709\u522b\u7684\u6570\u4e5f\u80fd\u6709\u90a3\u4e48\u591a\u4e2a\uff0c\u90a3\u8ba1\u6570\u5668\u5c31\u5f97\u51cf\u4e00\u4e86\n            {\n                --Now;\n            }\n\n            --t;\n            ++cnt[t];\n            ++l;\n        }\n\n        while (r > y)\n        {\n            auto &t = Sum[d[r]];\n            --cnt[t];\n            if (Now == t && cnt[t] == 0)\n            {\n                --Now;\n            }\n\n            --t;\n            ++cnt[t];\n            --r;\n        }\n\n        Ans[Que[i].id] = Now;\n    }\n\n    for (int i = 1; i <= m; ++i)\n    {\n        std::cout << -Ans[i] << std::endl;  // \u9898\u76ee\u8981\u6c42\u8f93\u51fa\u7684\u662f\u76f8\u53cd\u6570\uff0c\u522b\u88ab\u5751\u5230\u4e86\n    }\n\n    return 0;\n}\n```",
        "postTime": 1521629881,
        "uid": 59062,
        "name": "\u5c0f\u95f8\u87f9",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3709 \u3010\u5927\u7237\u7684\u5b57\u7b26\u4e32\u9898\u3011"
    },
    {
        "content": "# $\\texttt{Description}$\n\n> \u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217\uff0c\u591a\u6b21\u8be2\u95ee\u533a\u95f4\u4f17\u6570\u51fa\u73b0\u6b21\u6570\uff0c\u53ef\u4ee5\u79bb\u7ebf\u3002\n\n# $\\texttt{Solution}$\n\n~~\u4f60\u6ca1\u770b\u9519\uff0c\u6b63\u89e3\u5199\u5728\u4e86description\u91cc\u3002~~\n\n\u6839\u636e\u8d2a\u5fc3\u539f\u5219\uff0c\u9898\u76ee\u5176\u5b9e\u5c31\u662f\u95ee\u4f60\u6709\u591a\u5c11\u4e2a\u4e25\u683c\u9012\u589e\u7684\u5b50\u5e8f\u5217\uff0c\u800c\u8fd9\u4e2a\u5c31\u662f\u533a\u95f4\u4f17\u6570\u51fa\u73b0\u6b21\u6570\u3002\u56e0\u4e3a\u4f17\u6570\u6bcf\u51fa\u73b0\u4e00\u6b21\uff0c\u90fd\u9700\u8981\u5355\u72ec\u5360\u7528\u4e00\u4e2a\u5b50\u5e8f\u5217\u3002\n\n\u4e3a\u5565\u9898\u9762\u5199\u5f97\u8fd9\u4e48\u975e\u4eba\u7c7b\u554a/dk/dk/dk\n\n\u6c42\u533a\u95f4\u4f17\u6570\u51fa\u73b0\u6b21\u6570\u53ef\u4ee5\u7528\u819c\u961f\u89e3\u51b3\u3002~~\u554a\u8fd9\u662f\u6211\u521a\u521a\u5b66\u5b8c\u819c\u961f\u677f\u5b50\u627e\u5230\u7684\u9898\u3002~~\n\n$cnt_x$ \u8868\u793a\u503c\u4e3a $x$ \u7684\u6570\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\uff0c$a_x$ \u8868\u793a\u6709\u591a\u5c11\u4e2a\u6570\u51fa\u73b0\u4e86 $x$ \u6b21\u3002\u8f6c\u79fb\u4ee3\u7801\u5199\u5f97\u5f88\u6e05\u695a\uff08\uff08\uff08\n\n\u522b\u5fd8\u4e86\u79bb\u6563\u5316/kk\n\n# $\\texttt{Code}$\n\n```cpp\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\n\ninline int max(const int x, const int y) {return x > y ? x : y;}\n\nint a[200005], c[200005], cnt[200005], ans[200005], b[200005], S, n, m, k;\n\nstruct Question {\n\tint l, r, id;\n\tinline bool operator < (const Question x) const {\n\t\tbool t((l - 1) / S + 1 == (x.l - 1) / S + 1);\n\t\treturn t ? (r - 1) / S + 1 < (x.r - 1) / S + 1 : (l - 1) / S + 1 < (x.l - 1) / S + 1;\n\t}\n} q[200005];\ninline void add(const int x) {\n\t-- a[cnt[x]], ++ a[++ cnt[x]];\n\tk = max(k, cnt[x]);\n}\ninline void del(const int x) {\n\t-- a[cnt[x]], ++ a[-- cnt[x]];\n\tif (!a[k]) -- k;\n}\n\nint main() {\n\tint l(1), r(0);\n\tscanf(\"%d%d\", &n, &m);\n\tS = max(1, n / sqrt(m));\n\tfor (int i(1); i <= n; ++ i) scanf(\"%d\", c + i), b[i] = c[i];\n\tstd::sort(b + 1, b + n + 1);\n\tfor (int i(1); i <= n; ++ i) c[i] = std::lower_bound(b + 1, b + n + 1, c[i]) - b;\n\tfor (int i(1); i <= m; ++ i) scanf(\"%d%d\", &q[i].l, &q[i].r), q[i].id = i;\n\tstd::sort(q + 1, q + m + 1);\n\tfor (int i(1); i <= m; ++ i) {\n\t\twhile (l < q[i].l) del(c[l ++]);\n\t\twhile (l > q[i].l) add(c[-- l]);\n\t\twhile (r > q[i].r) del(c[r --]);\n\t\twhile (r < q[i].r) add(c[++ r]);\n\t\tans[q[i].id] = k;\n\t}\n\tfor (int i(1); i <= m; ++ i) printf(\"%d\\n\", -ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1617197375,
        "uid": 361308,
        "name": "Stinger",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 \u3010P3709 \u5927\u7237\u7684\u5b57\u7b26\u4e32\u9898\u3011"
    },
    {
        "content": "[luogu's link](https://www.luogu.com.cn/problem/P3709)\n\n#### \u9898\u610f\uff1a\n\n\u8fd9\u9898...\u9898\u610f\u662f\u91cd\u70b9\uff01\uff01\uff01\u4f5c\u4e3a\u4e00\u9053**\u8bed\u6587\u9898**\uff0c\u8fd9\u9053\u9898\u7684\u9898\u610f\u4f7f\u96be\u5ea6\u4e0a\u5347\u4e86\u5f88\u591a\uff08\u5176\u5b9e\u91cd\u70b9\u662f\u56e0\u4e3a\u6211\u8bed\u6587\u5dee/kk  \n\n\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 $a$ \uff08\u5176\u5b9e\u4e0d\u662f\u5b57\u7b26\u4e32\uff0c\u5c31\u662f\u4e00\u4e2a\u6570\u7ec4\uff09\uff0c\u6bcf\u6b21\u8be2\u95ee\u4e00\u6bb5\u533a\u95f4\u7684\u8d21\u732e\u3002\n\n\u533a\u95f4\u7684\u8d21\u732e\u5b9a\u4e49\uff1a\n\n\u521d\u59cb $rp=0$\u3002\n\n\u6bcf\u6b21\u4ece\u8fd9\u4e2a\u533a\u95f4\u4e2d\u62ff\u51fa\u4e00\u4e2a\u5b57\u7b26 $x$ \uff08\u6570\uff09\uff0c\u7136\u540e\u628a $x$ \u4ece\u8fd9\u4e2a\u533a\u95f4\u4e2d\u5220\u9664\uff0c\u76f4\u5230\u533a\u95f4\u4e3a\u7a7a\u3002\u4f60\u8981\u7ef4\u62a4\u4e00\u4e2a\u96c6\u5408 $S$\u3002\n\n- \u5982\u679c $S$ \u4e3a\u7a7a\uff0c\u4f60 $rp-1$\u3002\n\n- \u5982\u679c $S$ \u4e2d\u6709\u4e00\u4e2a\u5143\u7d20\u5927\u4e8e\u7b49\u4e8e $x$\uff0c\u5219\u4f60 $rp-1$\uff0c\u6e05\u7a7a $S$\u3002\n\n- \u4e4b\u540e\u5c06 $x$ \u63d2\u5165 $S$\u3002\n\n\u8981\u6c42\u4f7f\u5f97 $rp$ \u6700\u5927\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$1 \\leq n,m \\le 2 \\times10^5$\u3002\n\n#### Solution\uff1a\n\n\u7531\u8fd9\u4e2a\u6570\u636e\u8303\u56f4\u53ca\u53ea\u9700\u67e5\u8be2\u5f88\u5bb9\u6613\u60f3\u5230 \u83ab\u961f\u3002\n\n\u9898\u610f\u770b\u8d77\u6765\u6bd4\u8f83\u9ebb\u70e6\uff0c~~\u6211\u4e00\u5f00\u59cb\u4e5f\u88ab\u641e\u8499\u4e86~~\uff0c\u540e\u7ecf\u8fc7\u5927\u4f6c@[\u5feb\u4e50\u7684\u75af\u70c1](https://www.luogu.com.cn/user/281497)\u53ca\u795e\u4ed9\u540c\u684c@[\u5b50\u843d\u6978\u67b0](https://www.luogu.com.cn/user/91381)\u6307\u70b9\uff0c\u624d\u61c2\u3002\n\n\u4e3e\u4e2a\u6817\u5b50\uff1a\n\n\u6bd4\u5982\u9898\u76ee\u7f16\u53f7 1 2 3 4 5 6 7\n\n\u96be\u5ea6\u5206\u522b\u4e3a 1 2 2 3 3 3 3\n\n\u8981\u67e5\u8be2 1-4\uff0c2-5\uff0c3-6\n\n\u624b\u6478\u5f97\u77e5\uff0c\u7b54\u6848\u4e3a -2\uff0c-2\uff0c-3\n\n\u63d2\u5165\u987a\u5e8f\uff1a\n\n\u67e5\u8be2\u70b91\uff1a\u4ee5\u7f16\u53f7\u4e3a 1,2,4,3 \u987a\u5e8f\u63d2\u5165\u6700\u4f18\u3002\n\n\u67e5\u8be2\u70b92\uff1a\u4ee5\u7f16\u53f7\u4e3a 2,4,3,5 \u987a\u5e8f\u63d2\u5165\u6700\u4f18\u3002\n\n\u67e5\u8be2\u70b93\uff1a\u4ee5\u7f16\u53f7\u4e3a 3,4,5,6 \u987a\u5e8f\u63d2\u5165\u6700\u4f18\u3002\n\n\u7531\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e24\u4e2a\u7ed3\u8bba\uff1a\n\n1. \u7b54\u6848\u6b63\u662f\u67e5\u8be2\u533a\u95f4\u4f17\u6570\uff08\u4e0e[P1997 faebdc \u7684\u70e6\u607c](https://www.luogu.com.cn/problem/P1997)\u4e00\u6837\uff0c\u662f\u53cc\u500d\u7ecf\u9a8c\uff09\n\n2. \u63d2\u5165\u65f6\u6211\u4eec\u5e76\u4e0d\u662f\u4ece\u5de6\u5230\u53f3\u63d2\u7684\uff0c\u800c\u662f\u5148\u5168\u90e8\u662f\u4e0d\u540c\u5927\u5c0f\u7684\u63d2\u5165\uff0c\u6240\u4ee5\u540e\u9762\u67e5\u8be2\u7684\u65f6\u5019\u662f\u8981\u5148\u6539 $r$\uff0c\u518d\u6539 $l$ \u7684\uff01\uff01\uff01\uff08\u4e0d\u7136\u4f60\u4f1a\u5f97\u5230 $80$ \u7684\u9ad8\u5206\uff0c\u6211\u5c31\u662f\u56e0\u4e3a\u8fd9\u4e2a\u8c03\u4e86\u4e24\u4e2a\u665a\u81ea\u4fee /fad\uff09\u3002\n\n#### Code\uff1a\n\n\u4ee3\u7801\u5c31\u5f88\u7b80\u5355\u4e86\u3002\n\n\n```cpp\n\n/*\n * @Author: FuTianyu \n * @Date: 2020-11-05 18:07:14 \n * @Last Modified by: FuTianyu\n * @Last Modified time: 2020-11-05 20:06:21\n */\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define debug() puts(\"fty\")\n#define FOR(i,a,b) for(int i=a;i<=b;i++)\n#define REP(i,a,b) for(int i=a;i>=b;i--)\n/*\n\u5feb\u8bfb\u5feb\u8f93\n*/\nconst int N=2e5+5;\nint n,m,a[N],b[N],kc,kuai[N],tong[N],sum[N],ans,Ans[N];\n/*\na_i\u8868\u793a\u539f\u59cb\u6570\u7ec4,\u7531\u4e8e\u5f88\u5927,\u9700\u8981\u79bb\u6563\u5316,b_i\u5373\u4e3a\u79bb\u6563\u5316\u540e\u7684\u6570\u7ec4.\ntong_i\u8868\u793a\u7b2ci\u4e2a\u6570\u5728\u533a\u95f4\u5185\u51fa\u73b0\u7684\u4e2a\u6570,sum_i\u8868\u793a\u533a\u95f4\u5185\u51fa\u73b0\u4e2a\u6570\u4e3ai\u7684\u4e2a\u6570.\n*/\nstruct node{\n    int l,r,id;\n}cun[N];\nbool cmp(node x,node y){\n    return kuai[x.l]==kuai[y.l]?x.r<y.r:kuai[x.l]<kuai[y.l];\n}\nvoid del(int x){\n    sum[tong[b[x]]]--;\n    if(ans==tong[b[x]]&&sum[tong[b[x]]]==0) ans--;\n    sum[--tong[b[x]]]++;\n}\nvoid add(int x){\n    sum[tong[b[x]]]--;\n    if(ans==tong[b[x]]) ans++;\n    sum[++tong[b[x]]]++;\n}\nsigned main(){\n    n=read();\n    m=read();\n    kc=sqrt(n);\n    FOR(i,1,n){\n        a[i]=read();\n        b[i]=a[i];\n        kuai[i]=(i-1)/kc+1;\n    }\n    sort(a+1,a+1+n);\n    int len=unique(a+1,a+1+n)-a-1;\n    FOR(i,1,n) b[i]=lower_bound(a+1,a+1+len,b[i])-a;\n    FOR(i,1,m){\n        cun[i].l=read();\n        cun[i].r=read();\n        cun[i].id=i;\n    }\n    sort(cun+1,cun+1+m,cmp);\n    int l=1,r=0;\n    FOR(i,1,m){\n        int L=cun[i].l;\n        int R=cun[i].r;\n        while(r>R) del(r--);\n        while(r<R) add(++r);\n        while(l<L) del(l++);          \n        while(l>L) add(--l);              \n        Ans[cun[i].id]=-ans;\n    }\n    FOR(i,1,m){\n        write(Ans[i]);\n        puts(\"\");\n    }\n    return 0;\n}\n```",
        "postTime": 1604580486,
        "uid": 306443,
        "name": "\u5085\u5929\u5b87",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3709 \u3010\u5927\u7237\u7684\u5b57\u7b26\u4e32\u9898\u3011"
    },
    {
        "content": "# 1.\u9898\u610f\n\n~~\u56e0\u4e3a\u51fa\u9898\u4eba\u8bed\u6b7b\u65e9~~\uff0c\u539f\u9898\u610f\u6bd4\u8f83\u6bd2\u7624\uff0c\u6240\u4ee5\u8fd9\u91cc\u6574\u4e2a\u8212\u670d\u70b9\u7684\u9898\u610f\uff1a\n\n```cpp\n\u9759\u6001\u8be2\u95ee\u533a\u95f4\u4f17\u6570\u5bf9\u5e94\u7684\u8be5\u4f17\u6570\u4e2a\u6570\n```\n\uff08\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u5df2\u7ecf\u6709daolao\u7ed9\u51fa\u8bc1\u660e\u4e86\uff09\n\n\uff08\u6ce8\u610f\u7b54\u6848\u8981\u53d6\u8d1f\uff09\n\n# 2.\u601d\u8def\n\n\u7531\u4e8e\u662f\u9759\u6001\u95ee\u9898\uff0c\u4e14\u8be2\u95ee\u7684\u662f\u533a\u95f4\u4f17\u6570\uff0c\u6240\u4ee5\u5f88\u5bb9\u6613\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u7528\u83ab\u961f\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\n\n[\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f\u83ab\u961f\u5eb7\u8fd9\u4e2a](https://oi-wiki.org/misc/mo-algo/)\n\n\u5728\u672c\u9898\u4e2d\uff0c\u83ab\u961f\u5bf9\u5e94\u7684\u57fa\u7840\u64cd\u4f5c\u5f88\u5bb9\u6613\u53ef\u4ee5\u60f3\u5230\uff1a\n\n1.\u7ef4\u62a4\u5f53\u524d\u5e8f\u5217\u4e2d\u6bcf\u4e2a\u6570a[i]\u7684\u51fa\u73b0\u6b21\u6570cnt[a[i]]\n\n2.\u7ef4\u62a4\u5f53\u524d\u7684\u4f17\u6570\u6709\u591a\u5c11\u4e2a\n\n\u6240\u4ee5\u79fb\u52a8\u533a\u95f4\u7684\u65f6\u5019\u5224\u65ad\u8ba8\u8bba\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\n\n(\u6ce8\u610f\u8981\u79bb\u6563\u5316 \uff08\u56e0\u4e3aa[i]\u4e3a1e9\uff09 )\n\n# 3.\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=10000005,M=10000005;\ninline int read(){\n    int x=0,f=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){if(ch=='-'){f=-1;}ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+ch-'0';ch=getchar();}\n    return x*f;\n}\nint a[N],pos[N],n,m,ANS[N],ans=1,cnt[N],num[N],A[N];\nstruct node{\n    int l,r,id;\n}q[N];\ninline bool cmp(node x,node y){\n    if(pos[x.l]==pos[y.l]) return x.r<y.r;\n    return pos[x.l]<pos[y.l];\n}\ninline void update(int id,int f){\n    if(f==1){\n        num[cnt[a[id]]]--;\n        num[cnt[a[id]]+1]++;\n        cnt[a[id]]++;\n        if(cnt[a[id]]>ans) ans=cnt[a[id]];\n    }\n    else{\n        num[cnt[a[id]]]--;\n        if(num[ans]==0) ans--;\n        num[cnt[a[id]]-1]++;\n        cnt[a[id]]--;\n    }\n    return ;\n}\nint main(){\n    n=read(),m=read();\n    int op=sqrt(n);\n    for(int i=1;i<=n;i++){\n        A[i]=read();\n        a[i]=A[i];\n        pos[i]=i/op;\n    }\n    sort(A+1,A+n+1);\n    int nn=unique(A+1,A+n+1)-A-1;\n    for(int i=1;i<=n;i++) a[i]=lower_bound(A+1,A+nn+1,a[i])-A;\n    for(int i=1;i<=m;i++){\n        q[i].l=read(),q[i].r=read(),q[i].id=i;\n    }\n    sort(q+1,q+m+1,cmp);\n    for(int i=1,l=1,r=0;i<=m;i++){\n        while(l<q[i].l) update(l++,-1);\n        while(l>q[i].l) update(--l,1);\n        while(r<q[i].r) update(++r,1);\n        while(r>q[i].r) update(r--,-1);\n\n        ANS[q[i].id]=ans;\n    }\n    for(int i=1;i<=m;i++) printf(\"%d\\n\",(-1)*ANS[i]);\n    return 0;\n}\n```\n\n\n\n\n\n\n\n",
        "postTime": 1601563194,
        "uid": 130387,
        "name": "_Anchor",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3709 \u3010\u5927\u7237\u7684\u5b57\u7b26\u4e32\u9898\u3011"
    },
    {
        "content": "\u53c8\u590d\u4e60\u4e86\u4e00\u53d1\u56de\u6eda\u83ab\u961f...~~\u8fd9\u9898\u597d\u65e0\u804a~~\n\n\u9898\u76ee\u7684\u4e2d\u4e00\u53e5\u6700\u591a\u7684rp\u610f\u5473\u7740\u8fd9\u4e2a\u968f\u673a\u5177\u6709\u8d2a\u5fc3\u6027\u800c\u4e0d\u662f\u671f\u671b\u3002\n\n\u53ef\u4ee5\u53d1\u73b0 \u91cd\u590d\u6570\u5b57\u6700\u591a\u7684\u6b21\u6570\u4e3a\u7b54\u6848\u7684\u4e0b\u754c.\u6b64\u65f6\u5176\u4ed6\u6570\u5b57\u4e5f\u91cd\u590d\u7684\u8bdd\u53ef\u4ee5\u4e00\u8d77\u5e26\u51fa\u6765...\u90a3\u4e48\u95ee\u9898\u7684\u672c\u8d28\u5c31\u662f\u8be2\u95ee\u533a\u95f4\u4e4b\u4e2d\u6570\u5b57\u51fa\u73b0\u6700\u591a\u7684\u6b21\u6570.\n\n\u663e\u7136\u662f\u83ab\u961f\uff0c\u5f53\u7136\u5206\u5757\u4e5f\u662f\u53ef\u4ee5\u7684\u50cf\u84b2\u516c\u82f1\u90a3\u9053\u9898\u76ee\u3002\n\n\u7edf\u8ba1\u7b54\u6848\u7684\u65b9\u5f0f:\n\n1.\u5916\u9762\u5957\u4e24\u4e2a\u6570\u7ec4$c[i],s[i]$\u5206\u522b\u8868\u793a\u7b2ci\u4e2a\u6570\u5b57\u51fa\u73b0\u591a\u5c11\u6b21 \u51fa\u73b0\u6b21\u6570\u4e3ai\u7684\u6570\u5b57\u4e2a\u6570\u6709\u591a\u5c11\u4e2a \u8fd9\u6837\u6765\u66f4\u65b0\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u6b21\u6307\u9488\u79fb\u52a8\u7684\u590d\u6742\u5ea6\u4e3a$O(1)$\u4e86\u3002\n\n2.\u663e\u7136\u6211\u4eec\u83ab\u961f\u4e4b\u5916\u518d\u5bf9\u503c\u57df\u8fdb\u884c\u5206\u5757\uff0c\u5373\u5bf9\u51fa\u73b0\u6b21\u6570\u8fdb\u884c\u5206\u5757\uff0c\u7ef4\u62a4$sum[i]$\u8868\u793a\u7b2ci\u5757\u4e2d\u7684\u6570\u5b57\u51fa\u73b0\u4e86\u591a\u5c11\u6b21 \u4e5f\u662f$O(1)$\u8fdb\u884c\u4fee\u6539\uff0c\u5f53\u4e00\u4e2a\u8be2\u95ee\u7ed3\u675f\u540e\u66b4\u529b\u626b\u6bcf\u4e00\u4e2a\u5757\u7136\u540e\u5f53\u4e00\u4e2a\u5757\u4e2d\u6709\u503c\u518d\u66b4\u529b\u626b\u67d0\u4e2a\u5757\u3002\n\n3.\u56de\u6eda\u83ab\u961f\u6211\u4eec\u53d1\u73b0\u5728\u5de6\u6307\u9488\u79fb\u52a8\u7684\u65f6\u5019\u7b54\u6848\u53ef\u80fd\u4f1a\u6d88\u5931\uff0c\u6b64\u65f6\u6211\u4eec\u53ea\u8ba9\u5de6\u6307\u9488\u5411\u5de6\u79fb\u52a8\u5373\u53ef\u4e0d\u4f7f\u7b54\u6848\u4e22\u5931\u3002\n\n\u4e0b\u9762\u7ed9\u51fa\u56de\u6eda\u83ab\u961f\u7684\u4ee3\u7801\uff1a\n\n```\nconst int MAXN=200010;\nint n,m,cnt,S,B,L,R,las;\nint a[MAXN],s[MAXN],b[MAXN];\nint ans[MAXN],c[MAXN],l[MAXN],r[MAXN];\nstruct wy\n{\n\tint l,r;\n\tint id;\n}t[MAXN];\ninline int cmp(wy a,wy c){return (b[a.l]^b[c.l])?a.l<c.l:a.r<c.r;}\ninline void discrete()\n{\n\tsort(a+1,a+1+n);\n\tfor(int i=1;i<=n;++i)if(i==1||a[i]!=a[i-1])a[++cnt]=a[i];\n\tfor(int i=1;i<=n;++i)s[i]=lower_bound(a+1,a+1+cnt,s[i])-a;\n}\ninline void calc(wy a)\n{\n\tint maxx=0;\n\tif(b[a.l]==b[a.r])\n\t{\n\t\tfor(int i=a.l;i<=a.r;++i)maxx=max(maxx,++c[s[i]]);\n\t\tfor(int i=a.l;i<=a.r;++i)--c[s[i]];\n\t\tans[a.id]=maxx;\n\t\treturn;\n\t}\n\telse\n\t{\n\t\tfor(int i=R+1;i<=a.r;++i)las=max(las,++c[s[i]]);\n\t\tfor(int i=L-1;i>=a.l;--i)maxx=max(maxx,++c[s[i]]);\n\t\tfor(int i=L-1;i>=a.l;--i)--c[s[i]];\n\t\tans[a.id]=max(las,maxx);R=a.r;\n\t}\n}\nint main()\n{\n\tfreopen(\"1.in\",\"r\",stdin);\n\tn=read();m=read();\n\tS=(int)sqrt(n*1.0);B=n%S==0?n/S:n/S+1;\n\tfor(int i=1;i<=B;++i)\n\t{\n\t\tl[i]=S*(i-1)+1;r[i]=min(n,i*S);\n\t\tfor(int j=l[i];j<=r[i];++j)b[j]=i,s[j]=a[j]=read();\n\t}\n\tdiscrete();\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint l,r;\n\t\tl=read();r=read();\n\t\tt[i]=(wy){l,r,i};\n\t}\n\tsort(t+1,t+1+m,cmp);\n\tint st=0;\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint w=b[t[i].l];\n\t\tif(b[t[i].l]!=b[t[i-1].l])\n\t\t{\n\t\t\tL=r[w]+1;\n\t\t\tfor(int j=st+1;j<=R;++j)--c[s[j]];//\u6ce8\u610f\u8fd9\u4e2a\u5730\u65b9st\u4e0d\u80fd\u6362\u6210r[w-1]\uff01\n\t\t\tst=R=r[w];las=0;\n\t\t}\n\t\tcalc(t[i]);\n\t}\n\tfor(int i=1;i<=m;++i)printf(\"%d\\n\",-ans[i]);\n\treturn 0;\n}\n\n```",
        "postTime": 1578814663,
        "uid": 59688,
        "name": "chdy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3709 \u3010\u5927\u7237\u7684\u5b57\u7b26\u4e32\u9898\u3011"
    },
    {
        "content": "\uff08\u9996\u5148\u5410\u69fd\u4e00\u4e0b\uff0c\u9898\u9762\u7ed5\u4e86\u534a\u5929\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a\u533a\u95f4\u4f17\u6570\uff0c\u7ed5\u4e00\u4e0b\u4e5f\u5c31\u7b97\u4e86\u9898\u76ee\u63cf\u8ff0\u8fd8\u5199\u5f97\u8fd9\u4e48\u6f66\u8349\u2026\u2026\uff09\n\n\u5e73\u65b9\u5206\u5272\u7c7b\u95ee\u9898\u7684\u4e00\u4e2a\u57fa\u672c\u5957\u8def\uff1a\u5bfb\u627e\u4e00\u4e2a\u201c**\u6ee1\u8db3XX\u6761\u4ef6\u7684\u503c\u53ea\u6709$\\text{O}(\\sqrt{N})$\u4e2a**\u201d\u7684\u6027\u8d28\u3002\n\n\u5bf9\u4e8e\u672c\u9898\uff0c\u8fd9\u4e2a\u6027\u8d28\u5219\u662f\u201c\u51fa\u73b0\u6b21\u6570\u4e3a$\\Omega(\\sqrt{N})$\u7684\u6570\u53ea\u4f1a\u6709$\\text{O}(\\sqrt{N})$\u4e2a\u201d\u3002\n\n\u7a0b\u5e8f\u4e3b\u4f53\u8fd8\u662f\u79bb\u6563\u5316+\u83ab\u961f\u79bb\u7ebf\u5904\u7406\u8be2\u95ee\u3002\u6211\u4eec\u53ef\u4ee5\u8bbe\u7acb\u4e00\u4e2a\u9608\u503c$T \\approx \\sqrt{N}$\uff0c\u6bcf\u6b21\u79fb\u52a8\u5f53\u524d\u533a\u95f4\u4e24\u7aef\u7684\u65f6\u5019\u66f4\u65b0\u5982\u4e0b\u5185\u5bb9\uff1a\n\n- `count[v]`\u8868\u793a\uff08\u79bb\u6563\u5316\u540e\u7684\uff09\u6570\u503cv\u51fa\u73b0\u7684\u6b21\u6570\uff1b\n- `count_count[c]`\u8868\u793a\u6709\u591a\u5c11\u4e2a\u6570v\u6ee1\u8db3`count[v] == c`\uff0c\u4e5f\u5c31\u662f\u5bf9\u4e0a\u8ff0\u7684`count`\u6570\u7ec4\u518d\u505a\u4e00\u904d\u6309\u503c\u8ba1\u6570\uff1b\n- `large_count_set`\u5b58\u50a8\u6240\u6709\u6ee1\u8db3`count[v] >= T`\u7684\u6570\u503cv\u3002\u6839\u636e\u4e0a\u6587\u63d0\u5230\u7684\u6027\u8d28\uff0c\u8fd9\u4e2a\u96c6\u5408\u7684\u5143\u7d20\u4e2a\u6570\u53ea\u6709$\\text{O}(\\sqrt{N})$\u4e2a\u3002\n\n\u83b7\u53d6\u5f53\u524d\u8be2\u95ee\u7684\u7b54\u6848\uff0c\u82e5`large_count_set`\u4e0d\u4e3a\u7a7a\uff0c\u5219\u76f4\u63a5\u904d\u5386\u6574\u4e2a\u96c6\u5408\uff0c\u53d6`count`\u7684\u6700\u5927\u503c\uff1b\u5426\u5219\uff0c\u5728`count_count`\u6570\u7ec4\u4e2d\u627e\u6700\u5927\u7684`v`\u4f7f\u5f97`count_count[v] > 0`\uff08\u6b64\u65f6\u5fc5\u6709`0 < v < T`\uff09\u3002\n\n\u5206\u6790\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\n\n- \u83ab\u961f\u7b97\u6cd5\u5171\u6267\u884c$\\text{O}(N \\sqrt{N})$\u6b21\u79fb\u52a8\u533a\u95f4\u7aef\u70b9\u7684\u64cd\u4f5c\u3002\u5047\u5b9a`large_count_set`\u57fa\u4e8e`std::set`\u5b9e\u73b0\uff0c\u5219\u5355\u6b21\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u4e3a$\\text{O}(\\log N)$\u3002\u5f53\u7136\u5927\u591a\u6570\u65f6\u5019\u90fd\u4e0d\u4f1a\u5bf9`large_count_set`\u9020\u6210\u4fee\u6539\uff0c\u6b64\u65f6\u7684\u5355\u6b21\u590d\u6742\u5ea6\u53ea\u6709$\\text{O}(1)$\u3002\u800c\u4e14\u8fd9\u4e2alog\u4e8b\u5b9e\u4e0a\u4e5f\u662f\u53ef\u4ee5\u6539\u8fdb\u6570\u636e\u7ed3\u6784\u4ece\u800c\u780d\u6389\u7684\uff0c\u4f46\u662f\u6211\u61d2\u0e51\u4e5b\u25e1\u4e5b\u0e51\n\n- \u5355\u6b21\u83b7\u53d6\u7b54\u6848\u7684\u590d\u6742\u5ea6\u4e3a$\\text{O}(\\sqrt{N})$\uff0c\u5171\u8ba1\u6267\u884c$\\text{O}(N)$\u6b21\n\n\u7efc\u4e0a\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$\\text{O}(N \\sqrt{N} \\log N)$\uff0c\u5176\u4e2d\u7684log\u5f71\u54cd\u6781\u5176\u6709\u9650\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7\u6539\u8fdb\u7b97\u6cd5\u4f18\u5316\u6389\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <cstdio> \n#include <cstring> \n#include <algorithm> \n#include <set> \n\nconstexpr int maxN = (int)2e5 + 10; \nconstexpr int block_size = 450;\n\nint N, Q, A[maxN]; \n\nvoid discretize(int n, int* a)\n{\n    static int a_copy[maxN];\n    std::copy(a, a + n, a_copy); \n    std::sort(a_copy, a_copy + n); \n    for (int i = 0; i < n; i++)\n        a[i] = std::lower_bound(a_copy, a_copy + n, a[i]) - a_copy; \n}\n\nstruct Query \n{\n    int id;\n    int block_id; \n    int left, right; \n};\nQuery query[maxN]; \nint ans[maxN]; \nint count[maxN]; \nint count_count[maxN]; \nstd::set<int> large_count_set; \n\nvoid add_count(int v)\n{\n    count_count[count[v]] -= 1; \n    count[v] += 1; \n    if (count[v] == block_size) //Transfer to large_count_set\n        large_count_set.insert(v); \n    \n    count_count[count[v]] += 1; \n}\nvoid sub_count(int v)\n{\n    if (count[v] == block_size) //Remove from large_count_set\n        large_count_set.erase(v); \n    \n    count_count[count[v]] -= 1;\n    count[v] -= 1;\n    count_count[count[v]] += 1; \n}\n\nint get_ans() \n{\n    if (large_count_set.empty()) \n    {\n        for (int i = block_size - 1; i > 0; i--)\n            if (count_count[i] > 0)\n                return i;\n        return -1; \n    }\n    else \n    {\n        int res = 0;\n        for (int v: large_count_set)\n            res = std::max(res, count[v]); \n        return res; \n    }\n}\n\nint main()\n{\n    scanf(\"%d%d\", &N, &Q);\n    for (int i = 0; i < N; i++)\n        scanf(\"%d\", A + i); \n    discretize(N, A); \n    for (int l, r, i = 0; i < Q; i++)\n    {\n        scanf(\"%d%d\", &l, &r);\n        l -= 1; //[l, r), 0-based\n        query[i] = {.id = i, .block_id = l / block_size, .left = l, .right = r}; \n    }\n    std::sort(query, query + Q, [] (const Query& A, const Query& B) {\n        if (A.block_id != B.block_id)\n            return A.block_id < B.block_id;\n        return A.right < B.right;\n    });\n\n    int cur_l = 0, cur_r = 0;\n\n    for (int i = 0; i < Q; i++)\n    {\n        const auto& q = query[i]; \n        while (cur_r < q.right)\n            add_count(A[cur_r++]); \n        while (cur_r > q.right)\n            sub_count(A[--cur_r]); \n        while (cur_l > q.left)\n            add_count(A[--cur_l]);\n        while (cur_l < q.left)\n            sub_count(A[cur_l++]); \n        ans[q.id] = get_ans(); \n    }\n    for (int i = 0; i < Q; i++)\n        printf(\"%d\\n\", -ans[i]);\n    return 0; \n}\n```\n",
        "postTime": 1558188122,
        "uid": 49526,
        "name": "Orina_zju",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3709 \u3010\u5927\u7237\u7684\u5b57\u7b26\u4e32\u9898\u3011"
    },
    {
        "content": "### Description\n\n~~\u4e2a\u4eba\u89c9\u5f97\u8fd9\u662f\u8fd9\u9053\u9898\u6700\u96be\u7684\u4e00\u6b65...\u51fa\u9898\u4eba\u7684\u8bed\u6587...~~\n\n\u6bcf\u6b21\u7ed9\u51fa\u4e00\u4e2a\u533a\u95f4\uff0c\u6c42\u8fd9\u4e2a\u533a\u95f4\u6700\u5c11\u80fd\u88ab\u591a\u5c11\u4e2a\u5355\u8c03\u4e0a\u5347\u7684\u5e8f\u5217\u8986\u76d6\u3002\n\n### Solution \n\n\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u8f6c\u5316\u4e3a\u8fd9\u4e2a\u533a\u95f4\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u6570\u7684\u51fa\u73b0\u6b21\u6570\uff08\u5f88\u597d\u7406\u89e3\u5427\uff09\n\u7136\u540e\u7528\u83ab\u961f\u7ef4\u62a4\u4e24\u4e2a\u4e1c\u897f\n1. $cnt_x$  \u8868\u793a $x$ \u7684\u51fa\u73b0\u6b21\u6570\n2. $num_x$  \u8868\u793a\u6709\u591a\u5c11\u4e2a\u6570\u51fa\u73b0\u6b21\u6570\u662f $x$\n\n\u7528\u8fd9\u4e24\u4e2a\u4e1c\u897f\u53ef\u4ee5\u65b9\u4fbf\u5730\u7ef4\u62a4\u7b54\u6848 ans\u3002\n\n\u52a0\u5165 $x$ \u5c31\u662f `num[cnt[x]]--; cnt[x]++; num[cnt[x]]++`\n\n\u5220\u9664 $x$ \u9ebb\u70e6\u4e00\u4e9b\u3002\n\n\u82e5 $cnt_x = ans$ \u5e76\u4e14 $num_{cnt_x}=1$ \uff0c\u90a3\u4e48 ans \u8981\u51cf $1$ (\u4e3a\u4ec0\u4e48 ans - 1 \u5408\u6cd5\u5462\uff1f\u56e0\u4e3a\u5220\u9664\u4e4b\u540e\u8fd9\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\u5c31\u662f ans - 1)\n\u5982\u679c\u4e0d\u6ee1\u8db3\u4e0a\u9762\u7684\u8fd9\u4e2a\u6761\u4ef6\uff0c\u90a3\u4e48 ans \u5c31\u4e0d\u4f1a\u6709\u53d8\u5316\u3002\u6700\u540e\u8bb0\u5f97 `num[cnt[x]]--; cnt[x]--; num[cnt[x]]++`\n\n\n### Code\n\n[\u770b\u4ee3\u7801\u6233\u8fd9\u91cc](https://www.cnblogs.com/acfunction/p/10161607.html)",
        "postTime": 1545468566,
        "uid": 54745,
        "name": "Gypsophila",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3709 \u3010\u5927\u7237\u7684\u5b57\u7b26\u4e32\u9898\u3011"
    }
]