[
    {
        "content": "\u9898\u610f\u7b80\u8ff0\uff1a\u7565\u3002\r\n\r\n\u788e\u788e\u5ff5\uff1a\r\n\r\n> kkk\uff1a\u4f20\u667a\u676f\u8981\u6709\u4e2a\u6a21\u62df\u9898\u3002    \r\n> \u6211\uff1a\u597d\r\n\r\n\u7136\u540e\u5c31\u51fa\u73b0\u4e86\u8fd9\u4e48\u4e00\u4e2a\u9898\u3002\r\n\r\n----\r\n\r\n\u672c\u9898\u662f\u8981\u6a21\u62df\u4e00\u4e2a\u5927\u5bcc\u7fc1\u7684\u8fc7\u7a0b\uff0c\u4f5c\u4e3a\u6a21\u62df\u9898\uff0c\u5176\u5b9e\u6ca1\u6709\u4ec0\u4e48\u7b97\u6cd5\u4e0a\u7684\u96be\u5ea6\uff0c\u8fd9\u4e2a\u9898\u89e3\u4e5f\u5c31\u4e3b\u8981\u8bb2\u89e3\u4e00\u4e0b\u7ec6\u8282\u3002\r\n\r\n1. \u5efa\u8bae\u5c06\u90e8\u5206\u64cd\u4f5c\u62c6\u5165\u51fd\u6570\u4e2d\uff0c\u65b9\u4fbf\u8c03\u8bd5\uff1b\r\n2. \u66f4\u63a8\u8350\u4f7f\u7528 $0$ \u548c $1$ \u4f5c\u4e3a\u4e0b\u6807\u5b58\u653e\u4e8c\u4eba\u6570\u636e\uff0c\u8fd9\u6837\u53ef\u4ee5\u76f4\u63a5\u7528 `id^1` \u7684\u65b9\u5f0f\u83b7\u5f97\u53e6\u5916\u4e00\u4e2a\u884c\u52a8\u8005\u7684\u5404\u9879\u6570\u636e\u60c5\u51b5\uff0c\u5f53\u7136\u4f60\u7528 $1$ \u548c $2$ \u7684\u8bdd\u7528 `id^3` \u4e5f\u884c\uff0c\u4e0d\u8fc7\u611f\u89c9\u4e0d\u591f\u76f4\u89c2\u3002\r\n3. \u8bfb\u9898\u4e0a\u7684\u4e00\u4e9b\u7ec6\u8282\uff1a\r\n\t1. \u5728\u79fb\u52a8\u7684\u8fc7\u7a0b\u4e2d\uff0c\u884c\u52a8\u8005\u6240\u7ecf\u8fc7\u7684**\u6bcf\u4e00\u4e2a\u683c\u5b50**\u5e94\u5f53\u90fd\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\u3002\u9a8c\u9898\u4eba\u4e00\u5f00\u59cb\u8bfb\u6210\u4e86\u884c\u52a8\u7ed3\u675f\u540e\u7684\u683c\u5b50\uff0c\u800c\u4e14\u6211\u731c\u4e5f\u6709\u4e0d\u5c11\u4eba\u8bfb\u9519\u4e86\u3002\r\n   2. \u4e24\u4eba\u90fd\u64cd\u4f5c\u5b8c\u4e00\u8f6e\u56de\u5408\u540e\uff0c\u5706\u73af\u4e0a\u7684\u6bcf\u4e2a\u5efa\u7b51\u7269\u90fd\u4f1a\u63d0\u4f9b\u7ed9\u62e5\u6709\u8005\u8d44\u91d1\u3002\u6709\u7684\u4eba\u53ef\u80fd\u5fd8\u8bb0\u4e86\u5728\u6e38\u620f\u7ed3\u675f\u540e\u4e5f\u8981\u8fdb\u884c\u8fd9\u4e00\u8f6e\u64cd\u4f5c\u3002\r\n4. \u6570\u636e\u89c4\u6a21\u95ee\u9898\u3002\u53ef\u4ee5\u6784\u9020\u8fd9\u6837\u7684\u4e00\u7ec4\u6570\u636e\uff1a$n=2$\uff0c$d_1=d_2=10^6$\uff0c$q=10000$\uff0c\u83b2\u5b50\u548c\u6885\u8389\u5728\u7b2c\u4e00\u56de\u5408\u5efa\u597d\u4e86\u5efa\u7b51\u7269\uff0c\u63a5\u4e0b\u6765\u6bcf\u4e2a\u56de\u5408\u90fd\u53ef\u4ee5\u83b7\u5f97 $d_i$ \u5143\uff0c\u8fd9\u6837\u5979\u4eec\u5c31\u80fd\u6709 $10^6 \\times 10^4=10^{10}$ \u5143\uff0c\u8d85\u8fc7\u4e86 int \u8303\u56f4\u3002\r\n5. \u5176\u4ed6\u7684\u60f3\u5230\u518d\u8865\u3002\r\n\r\n\u8fd9\u4e2a\u9898\u4f5c\u4e3a\u4e00\u4e2a\u96be\u5ea6\u5728 pjT3 \u5de6\u53f3\u7684\u6a21\u62df\u8fd8\u662f\u6bd4\u8f83\u9002\u5408\u7684\uff0c\u6709\u8bfb\u9898\u7ec6\u8282\uff0c\u6709\u4e00\u70b9\u7801\u91cf\uff0c\u4e5f\u5e26\u70b9\u5751\u3002\u5e0c\u671b\u5927\u5bb6\u505a\u7684\u6109\u5feb\u3002\r\n\r\n\u53c2\u8003\u4ee3\u7801\uff1a\r\n\r\n```cpp\r\n#include <iostream>\r\n#include <cstdio>\r\n#include <cstring>\r\n#include <algorithm>\r\n#include <cmath>\r\n#include <cctype>\r\n#include <queue>\r\n\r\nusing namespace std;\r\n\r\ninline int read()\r\n{\r\n\tint x=0,f=1;char ch=getchar();\r\n\twhile (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\r\n\twhile (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\r\n\treturn x*f;\r\n}\r\n\r\nint n,m,q,L,C[105][105],d[105],a[105],lv[105],pos[2],belong[105];\r\n\r\nlong long money[2];\r\n\r\nconst string name[2]={\"Renko\",\"Merry\"};\r\n\r\ninline void putfail(int id)\r\n{\r\n\tcout << name[id] << endl;\r\n\texit(0);\r\n}\r\n\r\ninline void forward(int id,int k)\r\n{\r\n\tfor (int i=1;i<=k;i++)\r\n\t{\r\n\t\tint &p=pos[id];\r\n\t\tp++;\r\n\t\tif (p>n)\r\n\t\t\tp-=n;\r\n\t\tif (belong[p]==id)\r\n\t\t\tmoney[id]+=a[p];\r\n\t\telse if (belong[p]==(id^1))\r\n\t\t{\r\n\t\t\tmoney[id]-=a[p];\r\n\t\t\tmoney[id^1]+=a[p];\r\n\t\t}\r\n\t\tif (money[id]<0)\r\n\t\t\tputfail(id);\r\n\t}\r\n}\r\n\r\ninline void build(int id,int k)\r\n{\r\n\tint p=pos[id],cost=C[p][lv[p]];\r\n\tfor (int i=1;(money[id]>=cost && lv[p]<L && (belong[p]==-1 || belong[p]==id) && i<=k);i++)\r\n\t{\r\n\t\tbelong[p]=id;\r\n\t\tmoney[id]-=cost;\r\n\t\ta[p]+=cost;\r\n\t\tcost=C[p][++lv[p]];\r\n\t}\r\n}\r\n\r\nint main()\r\n{\r\n\tn=read(),m=read(),q=read(),L=read();\r\n\tfor (int i=1;i<=n;i++)\r\n\t{\r\n\t\tfor (int j=0;j<L;j++)\r\n\t\t\tC[i][j]=read();\r\n\t}\r\n\tfor (int i=1;i<=n;i++)\r\n\t\td[i]=read();\r\n\tpos[0]=pos[1]=1;\r\n\tfill(belong+1,belong+n+1,-1);\r\n\tmoney[0]=money[1]=m;\r\n\tfor (int i=0;i<2*q;i++)\r\n\t{\r\n\t\tint op=read();\r\n\t\tbegin:\r\n\t\t\tfor (int j=1;j<=n && !(i&1);j++)\r\n\t\t\t{\r\n\t\t\t\tif (belong[j]==0)\r\n\t\t\t\t\tmoney[0]+=d[j];\r\n\t\t\t\telse if (belong[j]==1)\r\n\t\t\t\t\tmoney[1]+=d[j];\r\n\t\t\t}\r\n\t\t\tint k=read();\r\n\t\t\tforward(i&1,k);\r\n\t\t\tif (i==2*q-1) {\r\n\t\t\t\tint op=0;\r\n\t\t\t\tcin >> op;\r\n\t\t\t\tif (op==2) {\r\n\t\t\t\t\tk=read();\r\n\t\t\t\t\tbuild(i&1,k);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\top=read();\r\n\t\t\tif (op==1)\r\n\t\t\t{\r\n\t\t\t\ti++;\r\n\t\t\t\tgoto begin;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tk=read();\r\n\t\t\t\tbuild(i&1,k);\r\n\t\t\t}\r\n\t}\r\n\tfor (int j=1;j<=n;j++)\r\n\t{\r\n\t\tif (belong[j]==0)\r\n\t\t\tmoney[0]+=d[j];\r\n\t\telse if (belong[j]==1)\r\n\t\t\tmoney[1]+=d[j];\r\n\t}\r\n\t\r\n\tcout << money[0] << \" \" << money[1] << endl;\r\n\treturn 0;\r\n}\r\n```",
        "postTime": 1669524204,
        "uid": 8457,
        "name": "chen_zhe",
        "ccfLevel": 6,
        "title": "\u4f20\u667a\u676f 2022 \u521d\u8d5b F \u9898\u89e3"
    },
    {
        "content": "## 1.\u7f16\u7a0b\u601d\u8def\u3002\n\u672c\u9898\u662f\u4e00\u9053\u6a21\u62df\u9898\uff0c\u76f4\u63a5\u6a21\u62df $q$ \u4e2a\u56de\u5408\u4e24\u540d\u6e38\u620f\u8005\u7684\u64cd\u4f5c\u5373\u53ef\u3002\n\n\u5728\u5bf9 $q$ \u4e2a\u56de\u5408\u7684\u64cd\u4f5c\u6570\u636e\u7684\u8f93\u5165\u5904\u7406\u65f6\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u64cd\u4f5c\u6570\u636e\u7684\u8f93\u5165\u884c\u4e0d\u4e00\u5b9a\u662f $4\\times q$ \u884c\uff0c\u5176\u5177\u4f53\u884c\u6570\u6700\u5c11\u4e3a $2\\times q$ \u884c\uff0c\u6700\u591a\u4e3a $4\\times q$ \u884c\uff0c\u56e0\u6b64\u8bfb\u53d6\u64cd\u4f5c\u6570\u636e\u8f93\u5165\u7684\u5faa\u73af\u63a7\u5236\u6761\u4ef6\u91c7\u7528\u8bfb\u6570\u636e\u5230\u6587\u4ef6\u5c3e\u3002\n\n\u5177\u4f53\u7684\u7ec6\u8282\u53ef\u4ee5\u53c2\u770b\u4ee3\u7801\u6ce8\u91ca\u3002\n\n## 2.\u6e90\u7a0b\u5e8f\u3002\n```c\n#include <stdio.h>\n#include <string.h>\nint main()\n{\n    int n,m,q,L;\n    scanf(\"%d%d%d%d\",&n,&m,&q,&L);\n    int C[105][105],d[105],a[105];\n    int level[105];    // level[i]\u7684\u503c\u8868\u793a\u7b2ci\u4e2a\u683c\u5b50\u4e0a\u5efa\u7b51\u7269\u7684\u7b49\u7ea7\n    int belong[105];   // belong[i]=0\uff08\u62161\uff09\u8868\u793a\u7b2ci\u4e2a\u683c\u5b50\u4e0a\u5efa\u7b51\u7269\u662f\u83b2\u5b50\uff08\u6216\u6885\u8389\uff09\u5efa\u9020\u7684\n    int i,j;\n    for (i=1;i<=n;i++)\n        for (int j=0;j<L;j++)\n            scanf(\"%d\",&C[i][j]);\n    for (i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&d[i]);\n        level[i]=0;\n        belong[i]=-1;     // \u521d\u59cb\u65f6\u6bcf\u4e2a\u683c\u5b50\u4e0a\u6ca1\u6709\u5efa\u9020\u5efa\u7b51\u7269\n    }\n    int pos[2];          // pos[0]\u548cpos[1]\u5206\u522b\u4fdd\u5b58\u83b2\u5b50\u548c\u6885\u8389\u5f53\u524d\u7684\u4f4d\u7f6e\n    long long money[2]; // money[0]\u548cmoney[1]\u5206\u522b\u4fdd\u5b58\u83b2\u5b50\u548c\u6885\u8389\u5f53\u524d\u7684\u8d44\u91d1\n    pos[0]=pos[1]=1;\n    money[0]=money[1]=m;\n    int op,k,p;\n    int cur=1;   // cur\u4fdd\u5b58\u5f53\u524d\u6e38\u620f\u8005\u7684\u8eab\u4efd\uff0c0\u4e3a\u83b2\u5b50\uff0c1\u4e3a\u6885\u8389\uff0c\u521d\u59cb\u65f6\u8bbe\u4e3a1\uff0c\n                 // \u6bcf\u6b211\u64cd\u4f5c\u5207\u6362\uff0c\u8fd9\u6837\u7b2c1\u4e2a1\u64cd\u4f5c\u5c31\u5207\u6362\u5230\u83b2\u5b50\n    int flag=0;  // \u662f\u5426\u786e\u5b9a\u4e86\u80dc\u8d1f\uff0c\u82e5\u4e2d\u95f4\u786e\u5b9a\u4e86\u80dc\u8d1f\uff0c\u5c06\u540e\u9762\u7684\u8f93\u5165\u6570\u636e\u8fd8\u662f\u8bfb\u5b8c\n    while (scanf(\"%d%d\", &op, &k)!=EOF)   // // \u8fdb\u884cq\u56de\u5408\u7684\u6e38\u620f\u6a21\u62df\n    {\n        if (flag) continue;   // \u4e2d\u95f4\u786e\u5b9a\u4e86\u80dc\u8d1f\uff0c\u540e\u9762\u76f4\u63a5\u5c06\u8f93\u5165\u6570\u636e\u8bfb\u5b8c\n        if (op == 1)\n        {\n            if (cur == 1)     // \u5f53\u524d\u6e38\u620f\u8005\u7531\u6885\u8389\u5207\u6362\u5230\u83b2\u5b50\uff0c1\u56de\u5408\u6e38\u620f\u7ed3\u675f\uff0c\u8fdb\u884c\u7ed3\u7b97\n            {\n                for (i=1;i<=n;i++)\n                    if (belong[i] != -1) money[belong[i]] += d[i];\n            }\n            cur ^= 1;        // \u5f53\u524d\u6e38\u620f\u8005\u8eab\u4efd\u5207\u6362\n            for (i=1;i<=k;i++)\n            {\n                pos[cur] = (pos[cur]) % n + 1;\n                p = pos[cur];\n                if (belong[p] == cur)       // \u8d70\u5230\u4e86\u81ea\u5df1\u5efa\u7b51\u7269\u6240\u5728\u7684\u683c\u5b50\uff0c\u83b7\u5f97\u8d44\u91d1\n                    money[cur] += a[p];\n                else\n                {\n                    if (belong[p] == 1-cur) // \u8d70\u5230\u4e86\u5bf9\u65b9\u5efa\u7b51\u7269\u6240\u5728\u7684\u683c\u5b50\uff0c\u8f6c\u79fb\u8d44\u91d1\n                    {\n                        money[1-cur] += a[p];\n                        money[cur] -= a[p];\n                        if (money[cur] < 0)\n                        {\n                            flag=cur+1;   // \u5df2\u786e\u5b9a\u80dc\u8d1f\uff0c\u540c\u65f6\u7528flag\u4fdd\u5b58\u80dc\u8d1f\u8005\u8eab\u4efd\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else                             // \u64cd\u4f5c2\uff0c\u8fdb\u884c\u5f53\u524d\u4f4d\u7f6e\u7684\u5efa\u7b51\u7269\u5347\u7ea7\u5904\u7406\n        {\n            p = pos[cur];\n            while (k && level[p] < L && money[cur] >= C[p][level[p]] && belong[p] != 1-cur)\n            {\n                money[cur] -= C[p][level[p]];  // \u5347\u7ea7\u82b1\u8d39\n                a[p] += C[p][level[p]];        // \u5347\u7ea7\u540e\u7684\u529f\u6548\n                level[p]++;                    // \u5efa\u7b51\u7269\u7b49\u7ea7\u63d0\u53471\u7ea7\n                belong[p] = cur;               // \u5efa\u7b51\u7269\u7684\u5f52\u5c5e\u786e\u5b9a\n                k--;                           // \u53ef\u5347\u7ea7\u6b21\u6570\u51cf1\n            }\n        }\n    }\n    if (flag!=0)\n        printf(\"%s\\n\",flag-1 ? \"Merry\" : \"Renko\");\n    else\n    {\n        for (i=1;i<=n;i++)    // \u6700\u540e\u4e00\u4e2a\u56de\u5408\u7ed3\u675f\u540e\u7684\u7ed3\u7b97\n           if (belong[i] != -1) money[belong[i]] += d[i];\n        printf(\"%lld %lld\\n\", money[0], money[1]);\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1679356406,
        "uid": 228457,
        "name": "wuhan1234",
        "ccfLevel": 0,
        "title": "P8874 [\u4f20\u667a\u676f #5 \u521d\u8d5b] F-\u4e8c\u4eba\u7684\u5927\u5bcc\u7fc1\u6e38\u620f \u9898\u89e3"
    },
    {
        "content": "### \u6a21\u62df\u9898\uff0c\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u8fd9\u91cc\u5c31\u8bb2\u51e0\u4e2a\u7ec6\u8282\u3002\n\n- \u56e0\u4e3a\u4e0d\u786e\u5b9a\u8f93\u5165\u6570\u636e\u6709\u591a\u5c11\u884c\uff0c\u6240\u4ee5\u8981\u4e00\u76f4\u8bfb\u5165\u5230\u6ca1\u6cd5\u8bfb\u5165\u4e3a\u6b62\u3002\n- \u5728\u83b2\u5b50\u8fdb\u884c $1$ \u64cd\u4f5c\u524d\uff0c\u80af\u5b9a\u4e0a\u4e00\u4e2a\u56de\u5408\u7ed3\u675f\u4e86\u3002\u56e0\u6b64\u5728\u64cd\u4f5c\u524d\u7ed3\u7b97\u4e00\u4e0b\u6bcf\u4e2a\u5efa\u7b51\u7269\u7ed9\u6240\u6709\u8005\u7684 $d_{i}$ \u8d44\u91d1\u3002\u6b64\u5916\uff0c\u5728\u6240\u6709\u64cd\u4f5c\u7ed3\u675f\u540e\u4e5f\u8981\u7ed3\u7b97\u4e00\u4e0b\u3002\u8fd9\u6837\u5c31\u80fd\u4e0d\u91cd\u4e0d\u6f0f\u5730\u8fdb\u884c $q$ \u6b21\u7ed3\u7b97\u3002\n- \u6bcf\u6b21\u8fdb\u884c $1$ \u64cd\u4f5c\u65f6\uff0c\u8981\u4f9d\u6b21\u5bf9\u7ecf\u8fc7\u7684\u6bcf\u4e2a\u5efa\u7b51\u7269\u8fdb\u884c\u8ba1\u7b97\u3002\u7ed3\u7b97\u5b8c\u540e\u68c0\u67e5\u4e00\u4e0b\u884c\u52a8\u8005\u6709\u6ca1\u6709\u7834\u4ea7\u3002\u53ef\u80fd\u4e0d\u540c\u4e8e\u5e38\u89c1\u7684\u5927\u5bcc\u7fc1\u73a9\u6cd5\u3002\n- \u6bcf\u6b21\u8fdb\u884c $2$ \u64cd\u4f5c\u65f6\uff0c\u6bcf\u6b21\u90fd\u8981\u5224\u65ad\u94b1\u591f\u4e0d\u591f\u3001\u6709\u6ca1\u6709\u5230\u6700\u9ad8\u7b49\u7ea7\u3001\u662f\u4e0d\u662f\u5bf9\u65b9\u7684\u5730\u76d8\uff08\u663e\u7136\u53ea\u8981\u4e0d\u662f\u5bf9\u65b9\u7684\u5730\u76d8\uff0c\u90a3\u5c31\u53ef\u4ee5\u4e70\u4e0b\uff0f\u5347\u7ea7\uff09\uff0c\u8fd8\u8981\u5224\u65ad\u5efa\u9020\uff0f\u5347\u7ea7\u6b21\u6570\u6709\u6ca1\u6709\u8fbe\u5230 $k$\u3002\n- \u8bb0\u5f97\u5f00 `long long`\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(nq+nL+kq)$\u3002\n\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define up(l, r, i) for(int i = l, END##i = r;i <= END##i;++ i)\n#define dn(r, l, i) for(int i = r, END##i = l;i >= END##i;-- i)\nusing namespace std;\ntypedef long long i64;\nconst int INF = 2147483647;\nint qread(){\n    int w=1,c,ret;\n    while((c = getchar()) >  '9' || c <  '0') w = (c == '-' ? -1 : 1); ret = c - '0';\n    while((c = getchar()) >= '0' && c <= '9') ret = ret * 10 + c - '0';\n    return ret * w;\n}\nint n, m, q, maxl; bool o = 1;\nconst int MAXN = 100 + 3;\nint C[MAXN][MAXN], A[MAXN], D[MAXN], L[MAXN], O[3], T[MAXN];\ni64 M[2];\nint main(){\n    n = qread(), m = qread(), q = qread(), maxl = qread();\n    M[0] = M[1] = m, O[0] = O[1] = 1;\n    up(1, n, i) L[i] = 0, T[i] = -1;\n    up(1, n, i)\n        up(0, maxl - 1, j) C[i][j] = qread();\n    up(1, n, i) D[i] = qread();\n    for(int op, k;~scanf(\"%d%d\", &op, &k);){\n        if(op == 1){\n            if(o == 1){\n                up(1, n, i) if(T[i] != -1) M[T[i]] += D[i];\n            }\n            o ^= 1;\n            up(1, k, i){\n                O[o] = (O[o]) % n + 1;\n                int p = O[o];\n                if(T[p] ==  o) M[o] += A[p]; else \n                if(T[p] == !o){\n                    M[!o] += A[p], M[o] -= A[p];\n                    if(M[o] < 0)\n                        puts(o ? \"Merry\" : \"Renko\"), exit(0);\n                }\n            }\n        } else {\n            int p = O[o];\n            while(k && L[p] < maxl && M[o] >= C[p][L[p]] && T[p] != !o){\n                A[p] += C[p][L[p]], M[o] -= C[p][L[p]];\n                ++ L[p], T[p] = o, -- k;\n            }\n        }\n    }\n    up(1, n, i) if(T[i] != -1) M[T[i]] += D[i];\n    printf(\"%lld %lld\\n\", M[0], M[1]);\n    return 0;\n}\n\n```\n",
        "postTime": 1681973400,
        "uid": 754311,
        "name": "Hatake_Kakashi",
        "ccfLevel": 0,
        "title": "[\u4f20\u667a\u676f #5 \u521d\u8d5b] F-\u4e8c\u4eba\u7684\u5927\u5bcc\u7fc1\u6e38\u620f"
    }
]