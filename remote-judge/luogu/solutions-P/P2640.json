[
    {
        "content": "\u6b63\u5e38\u7684\u9898\u89e3\u5df2\u7ecf\u591f\u591a\u4e86\uff0c\u73b0\u5728\u6211\u6765\u8bb2\u4e00\u4e0b\u6253\u8868\u65b9\u6cd5\u3002\r\n\r\n\u6253\u8868\uff0c\u662f\u4e00\u79cd\u6781\u5176\u5b9e\u7528\u7684\u65b9\u6cd5\u3002\u5c24\u5176\u662f\u6253\u8d28\u6570\u8868\u3002\u5728\u4e0d\u60f3\u6253 $O(n)$ \u7d20\u6570\u7b5b\u6cd5\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u7528\u6253\u8868\u4ee3\u66ff\u3002\r\n\r\n\u5bf9\u4e8e\u8fd9\u9053\u9898\u76ee\uff0c\u867d\u7136\u76f4\u63a5\u66b4\u529b\u4e5f\u80fd\u8fc7\uff0c\u4f46\u8981\u662f\u628a $n$  \u6539\u4e3a $1000000$ \u66b4\u529b\u5c31\u5168\u7ebf\u5d29\u6e83\u4e86\u3002\u53ea\u8981\u5728 $O(1)$  \u65f6\u95f4\u5185\u5224\u65ad\u51fa\u67d0\u4e2a\u6570\u662f\u5426\u4e3a\u8d28\u6570\uff0c\u5c31\u53ef\u4ee5\u8f7b\u677e\u8fc7\u6389\u5982\u4e0a\u6570\u636e\u3002\r\n\r\n~~\u5176\u5b9e\u4e0a\u9762\u7684\u90fd\u662f\u5e9f\u8bdd~~\r\n\r\n\u90a3\u7a76\u7adf\u5982\u4f55\u6253\u8868\u5462\uff1f\r\n\r\n\u9996\u5148\uff0c\u6211\u4eec\u8981\u521b\u5efa\u4e00\u4e2a\u6253\u8868\u7a0b\u5e8f\uff0c\u50cf\u8fd9\u6837\uff1a\r\n\r\n```\r\n#include<bits/stdc++.h>\r\n#define mst(a,b) memset(a,b,sizeof(a))\r\n#define For(i, j, k) for(int i=(j);i<=(k);i++)\r\n#define INF (2147483647>>1)\r\nusing namespace std;\r\ninline int read()\r\n{\r\n    int num=0;\r\n    char c=' ';\r\n    bool flag=1;\r\n    for(;c>'9'||c<'0';c=getchar()) if(c=='-') flag=0;\r\n    for(;c>='0'&&c<='9';num=(num<<1)+(num<<3)+c-48,c=getchar());\r\n    return flag?num:-num;\r\n}\r\n//\u8fd9\u662f\u66b4\u529b\u5224\u65ad\r\nbool pd(int x) {\r\n\tif(x == 1 || x == 0) return 0;\r\n\tif(x == 2) return 1;\r\n\tint g = sqrt(x) + 1;\r\n\tFor(i, 2, g) {\r\n\t\tif(!(x % i)) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\treturn 1;\r\n} \r\nint main()\r\n{\r\n\t//\u6253\u51fa\u6765\u7684\u5b57\u7b26\u592a\u591a\uff0c\u5c4f\u5e55\u4e0a\u5b58\u4e0d\u4e0bQAQ\uff0c\u6240\u4ee5\u53ea\u80fd\u8f93\u51fa\u5230\u6587\u4ef6\u5185\r\n\tfreopen(\"stone.txt\", \"w\", stdout);\r\n\tFor(i, 1, 10000) {//\u8f93\u51fa\u6bcf\u4e2a\u6570\r\n\t\tif(pd(i)) printf(\"1,\");                    \r\n\t\telse printf(\"0,\");\r\n\t}\r\n\t\r\n\treturn 0;\r\n}\r\n```\r\n\u63a5\u4e0b\u6765\u6253\u5f00stone.txt\u3002\u6ce8\u610f\uff1a\u8bf7\u4f7f\u7528\u5199\u5b57\u677f\uff01\u628a\u8fd9\u4e9b\u4e1c\u897f\u590d\u5236\u4e0b\u6765\uff0c\u5b58\u8fdb\u8981\u63d0\u4ea4\u7684\u4ee3\u7801\u3002\r\n\r\n\u4e8e\u662f\u6700\u7ec8\u4ee3\u7801\u957f\u8fd9\u6837\uff1a\r\n```\r\n#include<bits/stdc++.h>\r\n#define mst(a,b) memset(a,b,sizeof(a))\r\n#define For(i, j, k) for(int i=(j);i<=(k);i++)\r\n#define INF (2147483647>>1)\r\nusing namespace std;\r\ninline int read()\r\n{\r\n    int num=0;\r\n    char c=' ';\r\n    bool flag=1;\r\n    for(;c>'9'||c<'0';c=getchar()) if(c=='-') flag=0;\r\n    for(;c>='0'&&c<='9';num=(num<<1)+(num<<3)+c-48,c=getchar());\r\n    return flag?num:-num;\r\n}\r\n#define N 10005\r\nint p[N] = {0,0,1,1,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0...};//\u7701\u7565\r\nint main()\r\n{\r\n\tint n = read(), k = read();\r\n\tbool flag = 0;\r\n\tFor(i, 1, n-k) {\r\n\t\tif(p[i] && p[i+k]) {\r\n\t\t\tprintf(\"%d %d\\n\", i, i+k);\r\n\t\t\tflag = 1;\r\n\t\t}\r\n\t}\r\n\tif(!flag) {\r\n\t\tprintf(\"empty\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n```\r\nOK!",
        "postTime": 1535016005,
        "uid": 55078,
        "name": "YLWang",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2640 \u3010\u795e\u79d8\u78c1\u77f3\u3011"
    },
    {
        "content": "## \u8fd9\u4e2a\u9898\u5176\u5b9e\u6253\u8868\u5c31\u53ef\u4ee5\u5566~\n\nn<=10000(\u8fd9\u4e2a\u53ef\u4ee5\u6253\u8868)\n\n\u5f53\u7136\uff0c\u6211\u4eec\u9700\u8981\u83b7\u53d610000\u4ee5\u5185\u7684\u7d20\u6570\u3002\n\n\u4e8c\u8bdd\u4e0d\u8bf4\u4e0a\u4e00\u4e2a\u4ee3\u7801\uff08\u8d85\u4e0d\u8d85\u65f6\u4e0d\u8981\u7d27\u53cd\u6b63**\u4e0d\u4ea4**\uff09\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\nint f;\nint prime(int a)//\u6b63\u5e38\u5224\u65ad\u7d20\u6570\n{\n\tfor(int i=2;i<=sqrt(a);i++)\n\t  if(a%i==0&&a!=i)\n\t\treturn 0;\n\treturn 1;\n}\nint main()\n{\n\tfreopen(\"a.out\",\"w\",stdout);//\u56e0\u4e3a\u8f93\u51fa\u592a\u957f\u6240\u4ee5\u6211\u4eec\u7528\u6587\u4ef6\u8f93\u51fa\n\tfor(int i=2;i<=10000;i++)//\u679a\u4e3e\n\t{\n\t\tif(prime(i))\n\t\t  cout<<i<<\",\";//\u8fd9\u513f\u6709\u4e2a\u9017\u53f7\uff08\u65b9\u4fbf\u7c98\u8d34\uff09\n\t}\n\tfclose(stdout);\n\treturn 0;\n}\n```\n\n\u7136\u540e\u6211\u4eec\u5f97\u5230\u4e86\uff1a\n\n```cpp\n2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083,2087,2089,2099,2111,2113,2129,2131,2137,2141,2143,2153,2161,2179,2203,2207,2213,2221,2237,2239,2243,2251,2267,2269,2273,2281,2287,2293,2297,2309,2311,2333,2339,2341,2347,2351,2357,2371,2377,2381,2383,2389,2393,2399,2411,2417,2423,2437,2441,2447,2459,2467,2473,2477,2503,2521,2531,2539,2543,2549,2551,2557,2579,2591,2593,2609,2617,2621,2633,2647,2657,2659,2663,2671,2677,2683,2687,2689,2693,2699,2707,2711,2713,2719,2729,2731,2741,2749,2753,2767,2777,2789,2791,2797,2801,2803,2819,2833,2837,2843,2851,2857,2861,2879,2887,2897,2903,2909,2917,2927,2939,2953,2957,2963,2969,2971,2999,3001,3011,3019,3023,3037,3041,3049,3061,3067,3079,3083,3089,3109,3119,3121,3137,3163,3167,3169,3181,3187,3191,3203,3209,3217,3221,3229,3251,3253,3257,3259,3271,3299,3301,3307,3313,3319,3323,3329,3331,3343,3347,3359,3361,3371,3373,3389,3391,3407,3413,3433,3449,3457,3461,3463,3467,3469,3491,3499,3511,3517,3527,3529,3533,3539,3541,3547,3557,3559,3571,3581,3583,3593,3607,3613,3617,3623,3631,3637,3643,3659,3671,3673,3677,3691,3697,3701,3709,3719,3727,3733,3739,3761,3767,3769,3779,3793,3797,3803,3821,3823,3833,3847,3851,3853,3863,3877,3881,3889,3907,3911,3917,3919,3923,3929,3931,3943,3947,3967,3989,4001,4003,4007,4013,4019,4021,4027,4049,4051,4057,4073,4079,4091,4093,4099,4111,4127,4129,4133,4139,4153,4157,4159,4177,4201,4211,4217,4219,4229,4231,4241,4243,4253,4259,4261,4271,4273,4283,4289,4297,4327,4337,4339,4349,4357,4363,4373,4391,4397,4409,4421,4423,4441,4447,4451,4457,4463,4481,4483,4493,4507,4513,4517,4519,4523,4547,4549,4561,4567,4583,4591,4597,4603,4621,4637,4639,4643,4649,4651,4657,4663,4673,4679,4691,4703,4721,4723,4729,4733,4751,4759,4783,4787,4789,4793,4799,4801,4813,4817,4831,4861,4871,4877,4889,4903,4909,4919,4931,4933,4937,4943,4951,4957,4967,4969,4973,4987,4993,4999,5003,5009,5011,5021,5023,5039,5051,5059,5077,5081,5087,5099,5101,5107,5113,5119,5147,5153,5167,5171,5179,5189,5197,5209,5227,5231,5233,5237,5261,5273,5279,5281,5297,5303,5309,5323,5333,5347,5351,5381,5387,5393,5399,5407,5413,5417,5419,5431,5437,5441,5443,5449,5471,5477,5479,5483,5501,5503,5507,5519,5521,5527,5531,5557,5563,5569,5573,5581,5591,5623,5639,5641,5647,5651,5653,5657,5659,5669,5683,5689,5693,5701,5711,5717,5737,5741,5743,5749,5779,5783,5791,5801,5807,5813,5821,5827,5839,5843,5849,5851,5857,5861,5867,5869,5879,5881,5897,5903,5923,5927,5939,5953,5981,5987,6007,6011,6029,6037,6043,6047,6053,6067,6073,6079,6089,6091,6101,6113,6121,6131,6133,6143,6151,6163,6173,6197,6199,6203,6211,6217,6221,6229,6247,6257,6263,6269,6271,6277,6287,6299,6301,6311,6317,6323,6329,6337,6343,6353,6359,6361,6367,6373,6379,6389,6397,6421,6427,6449,6451,6469,6473,6481,6491,6521,6529,6547,6551,6553,6563,6569,6571,6577,6581,6599,6607,6619,6637,6653,6659,6661,6673,6679,6689,6691,6701,6703,6709,6719,6733,6737,6761,6763,6779,6781,6791,6793,6803,6823,6827,6829,6833,6841,6857,6863,6869,6871,6883,6899,6907,6911,6917,6947,6949,6959,6961,6967,6971,6977,6983,6991,6997,7001,7013,7019,7027,7039,7043,7057,7069,7079,7103,7109,7121,7127,7129,7151,7159,7177,7187,7193,7207,7211,7213,7219,7229,7237,7243,7247,7253,7283,7297,7307,7309,7321,7331,7333,7349,7351,7369,7393,7411,7417,7433,7451,7457,7459,7477,7481,7487,7489,7499,7507,7517,7523,7529,7537,7541,7547,7549,7559,7561,7573,7577,7583,7589,7591,7603,7607,7621,7639,7643,7649,7669,7673,7681,7687,7691,7699,7703,7717,7723,7727,7741,7753,7757,7759,7789,7793,7817,7823,7829,7841,7853,7867,7873,7877,7879,7883,7901,7907,7919,7927,7933,7937,7949,7951,7963,7993,8009,8011,8017,8039,8053,8059,8069,8081,8087,8089,8093,8101,8111,8117,8123,8147,8161,8167,8171,8179,8191,8209,8219,8221,8231,8233,8237,8243,8263,8269,8273,8287,8291,8293,8297,8311,8317,8329,8353,8363,8369,8377,8387,8389,8419,8423,8429,8431,8443,8447,8461,8467,8501,8513,8521,8527,8537,8539,8543,8563,8573,8581,8597,8599,8609,8623,8627,8629,8641,8647,8663,8669,8677,8681,8689,8693,8699,8707,8713,8719,8731,8737,8741,8747,8753,8761,8779,8783,8803,8807,8819,8821,8831,8837,8839,8849,8861,8863,8867,8887,8893,8923,8929,8933,8941,8951,8963,8969,8971,8999,9001,9007,9011,9013,9029,9041,9043,9049,9059,9067,9091,9103,9109,9127,9133,9137,9151,9157,9161,9173,9181,9187,9199,9203,9209,9221,9227,9239,9241,9257,9277,9281,9283,9293,9311,9319,9323,9337,9341,9343,9349,9371,9377,9391,9397,9403,9413,9419,9421,9431,9433,9437,9439,9461,9463,9467,9473,9479,9491,9497,9511,9521,9533,9539,9547,9551,9587,9601,9613,9619,9623,9629,9631,9643,9649,9661,9677,9679,9689,9697,9719,9721,9733,9739,9743,9749,9767,9769,9781,9787,9791,9803,9811,9817,9829,9833,9839,9851,9857,9859,9871,9883,9887,9901,9907,9923,9929,9931,9941,9949,9967,9973\n```\n\n\uff08\u6709\u9017\u53f7\u771f\u597d\uff01**\u6700\u540e\u4e00\u4e2a\u9017\u53f7\u88ab\u6211\u5220\u4e86**\uff0c\u6ca1\u6709\u56de\u8f66\u53ef\u76f4\u63a5\u7c98\u8d34\uff01\uff09\n\n## \u968f\u540e\u2014\u2014\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint pri[10001]={0,/*2\u2026\u20269973*/};//\u592a\u957f\u4e86\u6240\u4ee5\u7701\u7565\uff08\u5176\u5b9e\u4e0a\u9762\u6709\uff09\uff0c\u524d\u9762\u76840\u6709\u5fc5\u8981~\nint n,k,f;\nint main()\n{\n\tcin>>n>>k;\n\tfor(int i=1;i<=n;i++)\n\t  for(int j=1;j<i;j++)\n\t  \tif(pri[i]-pri[j]==k&&pri[i]<=n&&pri[j]<=n)//\u5224\u65ad\u5f88\u91cd\u8981\uff01\u5426\u521940\u5206\uff01\n\t  \t{\n\t  \t\tcout<<pri[j]<<\" \"<<pri[i]<<endl;\n\t  \t\tf=1;\n\t  \t} \n\tif(!f)  cout<<\"empty\";//\u522b\u5fd8\u4e86\n\treturn 0;\n}\n```",
        "postTime": 1544697015,
        "uid": 70166,
        "name": "\u9752\u86d9\u738b\u5b50",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2640 \u3010\u795e\u79d8\u78c1\u77f3\u3011"
    },
    {
        "content": "## P2640 \u795e\u79d8\u78c1\u77f3\n\n\u8d85\u8d85\u8d85\u8d85\u7ea7\u5927\u6c34\u9898\u3002 ~~\u867d\u7136\u6211\u4ea4\u4e865,6\u6b21\u3002~~\n\n\u7167\u4f8b\u5148\u770b\u9898\u3002\n\u4e00\u5171\u5c31\u4e24\u4e2a\u6761\u4ef6\uff1a\n>    \u82e5\u7ed9\u4ed6\u4e00\u4e2a\u4e00\u7ef4\u5750\u6807\u7cfb\uff0c\u90a3\u4e48\u4ed6\u7684\u78c1\u529b\u4e00\u5b9a\u8981\u5728\u7d20\u6570\u5750\u6807\u7684\u4f4d\u7f6e\u4e0a\u624d\u80fd\u53d1\u6325\u7684\u6700\u5927\uff08\u4e0d\u7ba1\u4f4d\u7f6e\u5750\u6807\u7684\u5927\u5c0f\uff0c\u53ea\u8981\u662f\u7d20\u6570\u90a3\u4e48\u78c1\u529b\u5c31\u4e00\u6837\u5927\uff09\u3002\n\n>\u82e5\u4e24\u4e2a\u78c1\u77f3\u76f8\u8ddd\u4e3a k \uff0c\u90a3\u4e48\u78c1\u77f3\u95f4\u7684\u7834\u574f\u529b\u5c06\u4f1a\u8fbe\u5230\u5f53\u524d\u78c1\u529b\u7684\u5cf0\u503c\u3002\n\n\u7565\u8bfb\u4e00\u904d\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5316\u4e3a\u4ee5\u4e0b\u4e24\u70b9:\n- \u4e24\u4e2a\u78c1\u77f3\u7684\u5750\u6807\u4e00\u5b9a\u90fd\u662f\u5728 __\u7d20\u6570__ \u5750\u6807\u4e0a\u3002\n- \u4e24\u4e2a\u78c1\u77f3\u76f8\u9694\u8ddd\u79bb\u4e3a k \u3002\n\n\u7ee7\u7eed\u5f80\u4e0b\u8bfb\uff1a\n>\u90a3\u4e48\u8bf7\u95ee\u7ed9\u51fa\u957f\u5ea6\u4e0d\u8d85\u8fc7 n \u7684\u4e00\u7ef4\u5750\u6807\u7cfb\uff0c\u6709\u54ea\u51e0\u5bf9\u5750\u6807\u95f4\u78c1\u77f3\u7834\u574f\u529b\u6700\u5927\u3002\n\n\u7834\u574f\u529b\u6700\u5927\uff1f\u8fd9\u4e0d\u5c31\u662f ~~\u6709\u624b\u5c31\u884c~~ \u6ee1\u8db3\u6211\u4eec\u5206\u6790\u5f97\u51fa\u7684\u4e24\u4e2a\u6761\u4ef6\u4e0d\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6700\u540e\u6765\u770b\u770b\u8f93\u51fa\u6709\u4ec0\u4e48\u6761\u4ef6\uff1a\n>\u6240\u6709\u5c0f\u4e8e\u7b49\u4e8e n \u7684\u7d20\u6570\u5bf9\u3002\u6bcf\u5bf9\u7d20\u6570\u5bf9\u8f93\u51fa\u4e00\u884c\uff0c\u4e2d\u95f4\u7528\u5355\u4e2a\u7a7a\u683c\u9694\u5f00\u3002\u82e5\u6ca1\u6709\u627e\u5230\u4efb\u4f55\u7d20\u6570\u5bf9\uff0c\u8f93\u51fa empty\u3002\n\n\u6ce8\u610f\uff1a\u82e5\u6ca1\u6709\u627e\u5230\u4efb\u4f55\u7d20\u6570\u5bf9\uff0c__\u8f93\u51fa empty__ \u3002\n\n\u90a3\u6211\u4eec\u6765\u770b\u770b\u6ee1\u8db3\u6211\u4eec\u7684\u6761\u4ef6\u90fd\u9700\u8981\u4ec0\u4e48\uff1a\n1. \u7d20\u6570\u7b5b\u3002\n1. \u5224\u65ad\u662f\u5426\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u7d20\u6570\u5bf9\uff0c\u6ca1\u6709\u8f93\u51fa empty \u3002\n1. ~~\u6ca1\u4e86~~\n\n\u7d20\u6570\u7b5b\u7b80\u5355\u7684 hen \u554a\u3002\u4e00\u770b\u6570\u636e\u8303\u56f4\uff1a\n>$1\u2264k\u2264n\u226410^4$\n\n\u76f4\u63a5\u6734\u7d20 ~~\u66b4\u529b~~ \u7b97\u6cd5\u4e0d\u5c31\u597d\u4e86\u5417\u3002\n\n\u6211\u4eec\u76f4\u63a5\u4ece2\u5f00\u59cb\u4e00\u76f4\u5faa\u73af\u5230 n - m \u3002\n\n\u56e0\u4e3a\u5927\u4e8e\u4e86 n - m \u90a3\u4e48\u5c31\u76f4\u63a5\u8d85\u51fa\u8303\u56f4\u4e86\u3002\n\n\u4e8e\u662f\uff1a\n```cpp\nfor( int i = 2 ; i <= n - m ; i++ ){\n    if( prime( i ) )\n        if( prime( i + m ) ){\n            cout << i << \" \" << m + i << endl ;\n            flag = true ;\n        }\n}\n```\nflag \u5c31\u662f\u6211\u4eec\u5224\u65ad\u662f\u5426\u6709\u7d20\u6570\u5bf9\u7684\u6807\u8bc6\u3002\n\nprime \u51fd\u6570\u76f4\u63a5\u5199\u6734\u7d20\u7684\u5c31\u53ef\u4ee5\u4e86\u54e6\u3002\n```cpp\nbool prime( int x ){\n    int stop = sqrt(x) + 1 ;\n    if( x == 2 )\n    \treturn 1 ;\n    if( x % 2 == 0 )\n    \treturn 0 ;\n    for ( int i = 3 ; i <= stop ; i += 2 )\n    \tif( x % i == 0 )\n    \t\treturn 0 ;\n    return 1 ;\n}\n```\n\n\u5b8c\u6574\u4ee3\u7801\u5c31\u4e0d\u653e\u5566\u3002pj-\u601d\u7ef4\u96be\u5ea6\u4e5f\u4e0d\u662f\u5f88\u9ad8\u9002\u5408\u521d\u5b66\u7d20\u6570\u7b5b\u7684\u4eba\u5237\u3002\n\n~~\u6211\u624d\u4e0d\u662f\u4e3a\u4e86\u5495\u503c\u5462\u3002~~\n\n\u6c42\u901a\u8fc7(\u5c0f\u58f0bb\u3002",
        "postTime": 1603538663,
        "uid": 238735,
        "name": "Qing_s",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2640 \u3010\u795e\u79d8\u78c1\u77f3\u3011"
    },
    {
        "content": "\u9996\u5148\u6211\u8981\u5410\u69fd\u4e00\u53e5\uff1a~~\u8fd9\u9898\u592a\u6c34\u4e86\uff01\uff01\uff01~~\n\n\u55ef\uff0c\u8fdb\u5165\u6b63\u9898\u3002\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u8d28\u6570\u7684\u7ebf\u6027\u7b5b\u89e3\u51b3\u3002\n\n\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0a\u4ee3\u7801\u3002\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=10005;\nint f[maxn]={0,0};//\u4e0d\u662f\u4e3a0,\u662f\u4e3a1\nvoid ko(int i){//\u7528\u6765\u6807\u8bb0\u662f\u5426\u4e3a\u8d28\u6570\n\tint j=i;\n\tfor(i*=2;i<=10000;i+=j){//\u91cd\u70b9\uff01\u4ee5i\u7684\u500d\u6570\u589e\u52a0\uff0c\u6bcf\u4e00\u4e2ai\u7684\u500d\u6570\uff08\u9664i\u672c\u8eab\uff09\u90fd\u8d4b\u503c\u4e3a0\uff0c\u4e0d\u662f\u8d28\u6570\n\t\tf[i]=0; \n\t}\n}\nvoid s(){\n\tint i,j;\n\tfor(i=0;i<=10000;i++){\n\t\tfor(j=2;j<=10000;j++){\n\t\t\tif(f[j]==1){\n\t\t\t\tko(j);\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tint n,k,i;\n\tbool flag=true;//\u8868\u793a\u6709\u6ca1\u6709\u627e\u5230\u8d28\u6570\n\tfor(i=2;i<=10000;i++){\n\t\tf[i]=1;//\u5148\u5168\u90e8\u6253\u62101\uff08\u662f\u8d28\u6570\uff09\n\t}\n\ts();//\u8c03\u7528\u51fd\u6570\n\tscanf(\"%d%d\",&n,&k);//\u8f93\u5165\n\tn-=k;\n\tfor(i=2;i<=n;i++){\n\t\tif(f[i]==1&&f[i+k]==1){\n\t\t\tprintf(\"%d %d\\n\",i,i+k);//\u8f93\u51fa\u8bb0\u5f97\u6362\u884c\n\t\t\tflag=false;//\u6807\u8bb0\u4e3a\u5047\n\t\t}\n\t}\n\tif(flag){\n\t\tprintf(\"empty\");//\u5982\u679c\u6ca1\u6709\u8f93\u51faempty\n\t}\n    return 0;\n}\n```",
        "postTime": 1563892136,
        "uid": 115360,
        "name": "\u9648LC",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2640 \u3010\u795e\u79d8\u78c1\u77f3\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c(\u5b89\u5229\u81ea\u5df1\u7684\u535a\u5ba2)](https://lllinea.github.io/%E9%A2%98%E8%A7%A3-%E7%A5%9E%E7%A7%98%E7%A3%81%E7%9F%B3/)\r\n\r\n~~\u9898\u89e3\r\n\r\n\u5f88\u5c11\u505a\u6570\u8bba\u7684\u9898\u56e0\u4e3a\u7a9d\u6c70\u849f\u84bb\u9e2d~\r\n\r\n\u7a9d\u4eec\u53ea\u9700\u8981\u4ece2\u548c2+k\u5f00\u59cb\u679a\u4e3e\u5224\u65ad\u5c31\u53ef\u4ee5\u4e86\r\n\r\n\u8bb0\u5f97\u62c9\u4e00\u4e2aflag \u505a\u6807\u8bb0\u7279\u5224\u9e2d\r\n\r\n\u8bdd\u8bf4\u7ed9\u5404\u4f4d\u5b89\u5229\u4e00\u4e2a\u539f\u7406 ~~(\u5e94\u8be5\u53eb\u539f\u7406\uff0c\u7a9d\u4e0d\u77e5\u9053)~~\r\n\r\n6\u500d\u539f\u7406 \uff1a\u7d20\u6570\u53ea\u53ef\u80fd\u51fa\u73b0\u57286\u7684\u500d\u6570\u9644\u8fd1\r\n\r\n\u5224\u65ad\u7d20\u6570\u7684\u6548\u7387\u771f\u7684\u5f88\u9ad8\u554aQAQ\r\n\r\n\u4ee3\u7801\u7279\u610f\u52a0\u4e86\u53cd\u4f5c\u5f0aQAQ\r\n\r\n```\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\nint n,k;\r\nbool su(int a){\r\n    if(a == 1) return 0;\r\n    if(a == 2|| a == 3) return 1;\r\n    if(a%6!=1&&a%6!=5) return 0;\r\n    register int temp = sqrt(a);\r\n    for (int i = 5;i <= temp;i += 6)\r\n        if(a % i == 0 or a%(i+2)==0) return 0;\r\n    return 1;\r\n}\r\nbool flag;\r\nint main(){\r\n\tfreopen(\"node.in\",\"r\",stdin);\r\n\tfreopen(\"node.out\",\"w\",stdout);\r\n\tios :: sync_with_stdio(false);\r\n\tcin >> n >> k;\r\n\tfor (int i = 2;i <= n;++i){\r\n\t\tif(su(i) && (i + k <= n) && (su(i+k))){\r\n\t\t\tflag = true;\r\n\t\t\tcout << i << \" \"<< i + k << endl;\r\n\t\t}\r\n\t}\r\n\tif(!flag)cout << \"empty\" << endl;\r\n\treturn 0;\r\n}\r\n```",
        "postTime": 1566290339,
        "uid": 99716,
        "name": "_Grey",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2640 \u3010\u795e\u79d8\u78c1\u77f3\u3011"
    },
    {
        "content": "\u9898\u76ee\u4e0d\u662f\u592a\u96be\n\n~~\u8c8c\u4f3c\u521a\u8fdb\u6d1b\u8c37\u65f6\u5728\u6bd4\u8d5b\u91cc\u770b\u5230\u8fc7\u7c7b\u4f3c\u7684\n\u4e00\u4e0b\u5b50\u5c31\u8df3\u8fc7\u4e86~~\n\n\u5176\u5b9e\u6709\u6876\u6392\u601d\u60f3\u5728\u91cc\u9762\uff0c\u7c7b\u4f3c\u6821\u95e8\u5916\u7684\u6811\u3002\u94fe\u63a5\uff1a[\u6821\u95e8\u5916\u7684\u6811](https://www.luogu.org/problemnew/show/P1047)\n\n\u628a\u5750\u6807\u7cfb\u60f3\u6210\u4e00\u4e2a\u6570\u7ec4\uff0c\u9ed8\u8ba4\u4e3a\u4e00\u4e2a\u503c\uff0c\u4e00\u4e2a\u5faa\u73af\u5224\u65ad\u5176\u4e2d\u7684\u7d20\u6570\uff0c\u628a\u4e0b\u8868\u4e3a\u7d20\u6570\u7684\u6210\u5458\u6539\u503c\uff0c\u7136\u540e\u8fdb\u884c\u5224\u65ad\n```cpp\n#include<iostream>\nusing namespace std; \nint a[10001],n,k,t;//t\u4e3a\u5224\u65ad\u53d8\u91cf\nint main()\n{\n   cin>>n>>k;\n   a[1]=1;//\u8981\u8bb0\u4f4f1\u4e0d\u662f\u7d20\u6570\n   //\u4e0d\u7136\u53ef\u80fd\u4f1a\u6709\u591a\u4e00\u4e2a\u89e3\n   for(int i=2;i<=n;i++)\n   for(int j=2;j*j<=i;j++)\n   if(i%j==0)a[i]=1;//\u5224\u65ad\u7d20\u6570\n   for(int i=1;i<=n-k;i++)\n   if(a[i]==0&&a[i+k]==0)\n   //\u627e\u95f4\u9694\u4e3ak\u7684\u4e24\u4e2a\u7d20\u6570\n   {t=1;cout<<i<<' '<<i+k<<endl;}\n   if(t==0)cout<<\"empty\";\n   //\u8981\u8bb0\u4f4f\u6ca1\u6709\u6570\u5bf9\u8981\u8f93\u51faempty\n   //\u4e0d\u7136\u4f1a\u6709\u4e24\u4e2a\u70b9\u5361\u4f4f\n   //\u4e00\u5f00\u59cb\u6ca1\u770b\u89c1\u8fd8WA\u4e86\n   return 0;\n}\n```",
        "postTime": 1548756320,
        "uid": 164840,
        "name": "zhaowangji",
        "ccfLevel": 0,
        "title": "P2640 \u9898\u89e3\uff08\u795e\u79d8\u78c1\u77f3\uff09"
    },
    {
        "content": "\u8fd9\u9053\u9898\uff0c\u91c7\u7528\u4e86\u65b0\u65b9\u6cd5:Miller\\_Rabin \u7b97\u6cd5\n\n\u56e0\u4e3a\u8fd9\u9053\u9898\u6570\u636e\u592a\u5c0f\uff0c\u6240\u4ee5\u4e5f\u53ef\u4ee5\u7528\u5176\u4ed6\u65b9\u6cd5\n\n\u4f46\u662f\u7528\u8fd9\u79cd\u7b97\u6cd5\u7684\u8bdd\u4f1a\u6781\u5927\u63d0\u5347\u6548\u7387\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO\uff08n\uff09\uff0c\u7279\u522b\u662f\u9047\u5230\u7279\u522b\u5927\u7684\u6570\u7684\u65f6\u5019\uff0c\u66f4\u52a0\u660e\u663e\uff0c\u4e0d\u8fc7\u8fd9\u79cd\u7b97\u6cd5\u4e0d\u7a33\u5b9a\uff0c\u4f46\u662f\u8fd9\u79cd\u4e0d\u7a33\u5b9a\u7684\u6982\u7387\u6781\u5c0f\uff0c\u5c0f\u5230\u51e0\u4e4e\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\n\n#\u7b97\u6cd5\u7684\u7406\u8bba\u57fa\u7840\uff1a\n\n###1. Fermat\u5b9a\u7406\uff1a\u82e5n\u662f\u5947\u7d20\u6570\uff0ca\u662f\u4efb\u610f\u6b63\u6574\u6570(1\u2264 a\u2264 n\u22121)\uff0c\u5219 a^(n-1) \u2261 1 mod n\u3002\n\n###2. \u63a8\u6f14\u81eaFermat\u5b9a\u7406\uff08\u5177\u4f53\u8fc7\u7a0b\u6211\u6ca1\u770b\u61c2\uff0cOrz\uff09, \u5982\u679cn\u662f\u4e00\u4e2a\u5947\u7d20\u6570\uff0c\u5c06n\u22121\u8868\u793a\u62102^s\\*r\u7684\u5f62\u5f0f\uff0cr\u662f\u5947\u6570\uff0ca\u4e0en\u662f\u4e92\u7d20\u7684\u4efb\u4f55\u968f\u673a\u6574\u6570\uff0c\u90a3\u4e48a^r \u2261 1 mod n\u6216\u8005\u5bf9\u67d0\u4e2aj (0 \u2264 j\u2264 s\u22121, j\u2208Z) \u7b49\u5f0fa^(2jr) \u2261 \u22121 mod n \u6210\u7acb\u3002\n\n##\u90a3\u4e48\u6211\u4eec\u6309\u7167\u4e0a\u8ff0\u7684\u5b9a\u74062\uff0c\u9996\u5148\u91cd\u590dn\u6b21\u5b9e\u9a8c\u3002\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u5b9e\u9a8c\uff0c\u968f\u673a\u53d6\u68c0\u9a8c\u7b97\u5b50a\uff0c\u5e26\u5165\u5b9a\u74062\u8fdb\u884c\u68c0\u9a8c\uff0c\u770b\u770b\u5728\u7b97\u5b50a\u4e0b\uff0cn\u80fd\u5426\u6ee1\u8db3\n\n##a^r \u2261 1 mod n\u6216\u8005\u5bf9\u67d0\u4e2aj (0 \u2264 j\u2264 s\u22121, j\u2208Z) \u7b49\u5f0fa^(2jr) \u2261 \u22121 mod n\n\n\u5982\u679c\u4efb\u610f\u4e00\u6b21\u5b9e\u9a8c\u4e0d\u6ee1\u8db3\uff0c\u5219\u5224\u5b9a\u4e0d\u662f\u7d20\u6570\uff0c\u5982\u679c\u90fd\u6ee1\u8db3\uff0c\u53ef\u8fd1\u4f3c\u53ef\u4ee5\u8ba4\u4e3a\u662f\u7d20\u6570\uff08\u9519\u8bef\u7387\u6781\u5c0f\uff09\n\n\n    \n    \n    \n    \n    \n    \n```cpp\n    #include <iostream>\n    #include <cstdio>\n    #include <algorithm>\n    #include <cmath>\n    #include <cstring>\n    #include <map>\n    using namespace std;\n    const int times = 20;\n    int number = 0;\n    map<long long, int>m;\n    long long Random( long long n )            //\u751f\u6210[ 0 , n ]\u7684\u968f\u673a\u6570\n    {\n        return ((double)rand( ) / RAND_MAX*n + 0.5);\n    }\n    long long q_mul( long long a, long long b, long long mod ) //\u5feb\u901f\u8ba1\u7b97 (a*b) % mod\n    {\n        long long ans = 0;\n        while(b)\n        {\n            if(b & 1)\n            {\n                b--;\n                ans =(ans+ a)%mod;\n            }\n            b /= 2;\n            a = (a + a) % mod;\n        }\n        return ans;\n    }\n    long long q_pow( long long a, long long b, long long mod ) //\u5feb\u901f\u8ba1\u7b97 (a^b) % mod\n    {\n        long long ans = 1;\n        while(b)\n        {\n            if(b & 1)\n            {\n                ans = q_mul( ans, a, mod );\n            }\n            b /= 2;\n            a = q_mul( a, a, mod );\n        }\n        return ans;\n    }\n    bool witness( long long a, long long n )//miller_rabin\u7b97\u6cd5\u7684\u7cbe\u534e\n    {\n        //\u7528\u68c0\u9a8c\u7b97\u5b50a\u6765\u68c0\u9a8cn\u662f\u4e0d\u662f\u7d20\u6570\n        long long tem = n - 1;\n        int j = 0;\n        while(tem % 2 == 0)\n        {\n            tem /= 2;\n            j++;\n        }\n        //\u5c06n-1\u62c6\u5206\u4e3aa^r * s\n        long long x = q_pow( a, tem, n ); //\u5f97\u5230a^r mod n\n        if(x == 1 || x == n - 1) return true;    //\u4f59\u6570\u4e3a1\u5219\u4e3a\u7d20\u6570\n        while(j--) //\u5426\u5219\u8bd5\u9a8c\u6761\u4ef62\u770b\u662f\u5426\u6709\u6ee1\u8db3\u7684 j\n        {\n            x = q_mul( x, x, n );\n            if(x == n - 1) return true;\n        }\n        return false;\n    }\n    bool miller_rabin( long long n )  //\u68c0\u9a8cn\u662f\u5426\u662f\u7d20\u6570\n    {\n        if(n == 2)\n            return true;\n        if(n < 2 || n % 2 == 0)\n            return false;                //\u5982\u679c\u662f2\u5219\u662f\u7d20\u6570\uff0c\u5982\u679c<2\u6216\u8005\u662f>2\u7684\u5076\u6570\u5219\u4e0d\u662f\u7d20\u6570\n        for(int i = 1; i <= times; i++)  //\u505atimes\u6b21\u968f\u673a\u68c0\u9a8c\n        {\n            long long a = Random( n - 2 ) + 1; //\u5f97\u5230\u968f\u673a\u68c0\u9a8c\u7b97\u5b50 a\n            if(!witness( a, n ))                        //\u7528a\u68c0\u9a8cn\u662f\u5426\u662f\u7d20\u6570\n                return false;\n        }\n        return true;\n    }\n    int main( )\n    {\n        std::ios::sync_with_stdio(false);\n        bool ok=0;\n        long long n,k;\n        cin>>n>>k;\n        for(long long i=1;i<=n;++i)\n        {\n            if(miller_rabin(i)&&miller_rabin(i+k)&&i<=n&&i+k<=n)\n            {\n                cout<<i<<' '<<i+k<<endl;\n                ok=1;\n            }\n        }\n        if(ok==0)cout<<\"empty\"<<endl;\n        return 0;\n}\n```",
        "postTime": 1516007484,
        "uid": 73351,
        "name": "likztime",
        "ccfLevel": 0,
        "title": "P2640 \u3010\u795e\u79d8\u78c1\u77f3\u3011\u3010\u5224\u65ad\u8d28\u6570\u3011"
    },
    {
        "content": "\u6765\u53d1\u4e00\u4e2a\u6bd4\u697c\u4e0b\u4eec\u5feb\u7684\u65b9\u6cd5\u3002\n\n\u672c\u9898\u6211\u7528\u7684\u662f\u7b5b\u6cd5\uff0c\u4f46\u662f\u3002\n\n#\u6211\u4f18\u5316\u4e86\uff01\n\n\u5177\u4f53\u4f18\u5316\u7684\u65b9\u6cd5\u5462\uff0c\u5c31\u662f\u697c\u4e0b\u4eec\u592a\u66b4\u529b\u4e86\uff0c\u7adf\u7136\u76f4\u63a5\u66b4\u529b\uff01\uff08\u4ece1\u5230n\uff09\n\n\u7136\u800c\u3002\u3002\u3002\n\n\u6211\u6709\u66f4\u5feb\u7684\u65b9\u6cd5\uff01\n\n\u5728\u7b5b\u6cd5\u6253\u8d28\u6570\u8868\u7684\u65f6\u5019\uff0c\u6211\u4e0d\u4ec5\u4fdd\u7559\u4e86bool\u6570\u7ec4\uff08\u7528\u6765\u5224\u65ad\uff09\uff0c\u6211\u8fd8\u5f00\u4e86\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\uff0c\u5b58\u4e86\u8d28\u6570\uff0c\u8fd9\u6837\uff0c\u6211\u5c31\u76f4\u63a5\u7528\u8d28\u6570\u8868\u66b4\u529b\uff0c\u6548\u7387\u63d0\u9ad8\u5230\u4e86O(\u4e0d\u8d85\u8fc7n-k\u7684\u8d28\u6570\u4e2a\u6570)\n\n\u8fd9\u6837\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u5faa\u73af\u8d28\u6570\uff0c\u6548\u7387\u63d0\u9ad8\u4e86\u5f88\u591a\u3002\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <string>\n#include <cmath>\n#include <iostream>\n#include <iomanip>\nusing namespace std;\nint n,k,a[3000],ps;//n\uff0ck\u4e3a\u9898\u76ee\u4e2d\u7684\u53d8\u91cf\uff0ca\u6570\u7ec4\u4e3a\u8d28\u6570\u6570\u7ec4\uff0cps\u4e3a\u8d28\u6570\u4e0b\u6807\nbool s[10005]={1,1},ok=1;//s\u6570\u7ec4\u4e3a\u6876\uff0cok\u4e3a\u5224\u65ad\u6709\u6ca1\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u8d28\u6570\u5bf9\u7684\u53d8\u91cf\nvoid $(){//\u8d22\u8ff7\u5fc3\u7a8d\u7684\u6211\u8d77\u4e86\u4e00\u4e2a\u51fd\u6570\u540d\u2026\u2026\n    for (int i=2;i<10001;i++)//\u7b5b\u6cd5\u6807\u51c6\u505a\u6cd5\n    if (!s[i]){//s[i]=1\u8868\u793a\u4e0d\u4e3a\u8d28\u6570\uff0c=0\u5219\u662f\n        a[ps++]=i;//\u628ai\u8fd9\u4e2a\u8d28\u6570\u5b58\u4e0b\u6765\n        for (int j=i*2;j<10001;j+=i)s[j]=1;//\u5faa\u73af\u6807\u8bb0\n    }\n}\nint main(){\n    $();//\u9884\u5904\u7406\n    scanf (\"%d%d\",&n,&k);\n    for (int i=0;a[i]<=n&&a[i]+k<=n;i++)if (!s[a[i]+k])//\u66b4\u529b\uff0c\u7b26\u5408\u6761\u4ef6\u5c31\u8f93\u51fa\n    ok=!printf (\"%d %d\\n\",a[i],a[i]+k);\n    if (ok)printf (\"empty\");//\u6ca1\u6709\u5c31\u8f93\u51faempty\n        //\u4e0d\u8981\u88ab\u9898\u76ee\u4e2d\u201c\u76f8\u5dee\u4e3ak\u7684\u8d28\u6570\u5bf9\u201d\u6240\u8ff7\u60d1\uff0c\u5b9e\u9645\u4e0a\uff0c\u5982\u679c\u4f60\u591a\u5224\u4e00\u6b21a[i]-k\uff0c\u7b54\u6848\u4f1a\u8f93\u51fa\u4e24\u904d\u3002\u5177\u4f53\u4e3a\u4ec0\u4e48\uff0c\u81ea\u5df1\u60f3\u3002\n    return 0;\n}\n```",
        "postTime": 1504167927,
        "uid": 39863,
        "name": "\u5f15\u9886\u5929\u4e0b",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2640 \u3010\u795e\u79d8\u78c1\u77f3\u3011"
    },
    {
        "content": "\u6709\u4eba\u548c\u6211\u601d\u8def\u4e00\u6837\u5417\uff1f\n\n\u6211\u7528\u7684\u662f~~\u7eaf\u66b4\u529b~~\n\n\u5478\uff0c\u6734\u7d20\u7b97\u6cd5\n\nbool \u51fd\u6570\u5224\u65adi\u548ci+k\u662f\u5426\u662f\u7d20\u6570\n\n\u5982\u679c\u662f\uff0c\u6807\u8bb0\uff0c\u8f93\u51fa\n\n\u5982\u679c\u6ca1\u6709\u6807\u8bb0\uff0c\u5219\u6ca1\u6709\uff0c\u8f93\u51faempty.\n\n~~\u8bdd\u8bf4\u7adf\u7136\u6ca1\u8d85\u65f6~~\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint n,k;\nbool su_;\n\nbool is_su(int x) {\n\tfor(int i=2;i*i<=x;i++) {\n\t\tif(!(x%i)) return false;\n\t}\n\treturn true;\n}//bool\u51fd\u6570\u5224\u65ad\u662f\u5426\u662f\u7d20\u6570\n\nint main() {\n\tcin>>n>>k;\n\tfor(int i=2;i+k<=n;i++) {//\u7c7b\u4f3c\u4e8e\u201c\u526a\u679d\u201d\uff0c\u6ca1\u5fc5\u8981\u4ece2\u679a\u4e3e\u5230n\n\t\tif(is_su(i)&&is_su(i+k)) {//\u6ee1\u8db3\u6761\u4ef6\n\t\t\tsu_=1;//\u6807\u8bb0\uff0c\u4ee5\u4fbf\u5224\u65ad\u65e0\u89e3\u7684\u60c5\u51b5\n\t\t\tcout<<i<<\" \"<<i+k<<endl;\n\t\t}\n\t}\n\tif(!su_) {//\u65e0\u89e3\n\t\tcout<<\"empty\"<<endl;\n\t}\n\treturn 0;\n}\n```\n\u66b4\u529bAC\uff01\uff01\uff01",
        "postTime": 1566259561,
        "uid": 99430,
        "name": "Leaved_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2640 \u3010\u795e\u79d8\u78c1\u77f3\u3011"
    },
    {
        "content": "##### \u849f\u84bb\u7b2c\u4e00\u6b21~~\u9600\u4f53\u8857~~\n\n### \u6b63\u5e38\u7684\u9898\u89e3\u5df2\u7ecf\u591f\u591a\u4e86\uff0c\u6211\u5c31\u518d\u6765\u4e00\u7bc7\u5427~~~/\u624b\u52a8\u6ed1\u7a3d\n\n\u5176\u5b9e\u5427 ~~\u8fd9\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5224\u65ad\u7d20\u6570~~\n\n#### \u5982\u679c i\u662f\u7d20\u6570\u4e14 i+k\u4e5f\u662f \u5c31\u8f93\u51fa\n\n\u5e76\u4e14\u6807\u8bb0\u4e00\u4e2abool\u6570\u7ec4\n\n\u5e9f\u8bdd\u4e0d\u591a\u8bf4 \u4e0a\u4ee3\u7801\n\n```\n#include<bits/stdc++.h>//\u6700\u725b\u903c\u7684\uff08\u51e0\u4e4e\uff09\u4e07\u80fd\u5934\u6587\u4ef6\nusing namespace std;\nbool su(int n){//\u7d20\u6570\u5224\u65ad\n  if(n==1) return 0;\n\tfor(int i=2;i<=sqrt(n);i++){\n\t\tif(n%i==0) return 0;\n\t}\n\treturn 1;\n}\nint a,b,n,k;\nbool t;\nint main(){\n\tcin>>a>>b;//n\u548ck\n\tfor(int i=2;i<=a-b;i++){//\u4e0d\u53ef\u4ee5i<=a \u53ef\u80fd\u4f1a\u8d85\u51fa\u9650\u5236\n\t\t n=i,k=i+b;\n\t\tif(su(n)==1&&su(k)==1){\n\t\t\tcout<<n<<\" \"<<k<<endl;\n\t\t\tt=1;//\u6807\u8bb0\n\t\t}\n\t}\n\tif(t==0){//\u6807\u8bb0\u4e3a\u96f6\u5219\u662f\u6ca1\u6709\n\t\tcout<<\"empty\"<<endl;\n\t}\n\treturn 0;\n}\n```\n\u5b89\u5229\u4e00\u4e0bdalao\u535a\u5ba2\n\n[\u524d\u7f00\u81ea\u52a8\u673a\u00b7\u5b8b](https://www.luogu.org/blog/floyd-qianzhuihe/)",
        "postTime": 1566182829,
        "uid": 99235,
        "name": "lzhdbfs",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2640 \u3010\u795e\u79d8\u78c1\u77f3\u3011"
    },
    {
        "content": "\u770b\u5230\u5404\u4f4ddalao\u7684\u6253\u8868\uff0c\u4e0d\u89c9\u5fc3\u4e2d\u4e00\u98a4\u3002\n### \u3010\u601d\u8def\u3011\uff1a\n\u5176\u5b9e\u8fd9\u4e2a\u9898\u7684\u8bdd\u6570\u636e\u5f88\u5f31\uff0c\u5b8c\u5168\u53ef\u4ee5\u7528\u7ebf\u6027\u7b5b\u7d20\u6570\u6765A\u6389\u3002\u7136\u540e\u7684\u8bdd\u5c31\u662f\u6709\u4e00\u4e2a\u5751\u70b9\uff0c\u5c31\u662f\u5224\u91cd\uff0c\u5148\u7c98\u4e00\u4e0b\u6211\u768480\u5206\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\n#include <cstring>\n#include <iomanip>\n\nusing namespace std;\n\nint n,k,ans=0;\nbool prime[10001]={0};\nint main()\n{\n    scanf(\"%d%d\",&n,&k);\n    prime[1]=1;\n    \n    for(int i=2;i<=n;++i)\n        if(prime[i]==0)\t//\u7ebf\u6027\u7b5b\u7d20\u6570 \n            for(int j=2;j*i<=n;++j)\n                prime[j*i]=1;\t//\u539f\u7406\uff1a\u7d20\u6570\u7684\u500d\u6570\u4e00\u5b9a\u662f\u5408\u6570 \n    \n    for(int i=2;i<=n-k;++i)\t//\u5faa\u73af\u5230n-k\u5c31\u53ef\u4ee5\uff0c\u5927\u4e8e\u4e86n-k\u5c31\u4e0d\u53ef\u80fd\u5728n\u8303\u56f4\u5185\u4e86 \n        if(prime[i]==0 && prime[k+i]==0) {\t//\u4e24\u8005\u90fd\u662f\u7d20\u6570 \n            prime[i]=1;\t//\u7f6e1\uff0c\u5c31\u4e0d\u4f1a\u91cd\u590d\u626b\u4e86 \n            prime[k+i]=1;\n            ans++;\t//\u5224\u65ad\u662f\u5426\u4e3a\u7a7a \n            printf(\"%d %d\\n\",i,k+i);\n        }\n    if(ans==0)\t//\u4e3a\u7a7a \n        printf(\"empty\");\n    return 0;\n}\n```\n\u5f88\u660e\u663e\uff0c\u5224\u91cd\u4f1a\u5931\u8d25\uff0c\u56e0\u4e3a\u5f53k\u5c0f\u7684\u65f6\u5019\uff0cprime[i+k]\u8fd8\u662f\u6709\u53ef\u80fd\u5f88\u88ab\u626b\u5230\u7684\uff0c\u6240\u4ee5\u4f1a\u9700\u8981\u628aprime[i]\u7f6e\u4e3a1\u5c31\u53ef\u4ee5\uff0c\u56e0\u4e3a\u4ed6\u626b\u5b8c\u4e00\u8fb9\u4e0d\u53ef\u80fd\u88ab\u626b\u5230\u7b2c\u4e8c\u904d\u3002AC\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\n#include <cstring>\n#include <iomanip>\n\nusing namespace std;\n\nint n,k,ans=0;\nbool prime[10001]={0};\nint main()\n{\n\tscanf(\"%d%d\",&n,&k);\n\tprime[1]=1;\n\t\n\tfor(int i=2;i<=n;++i)\n\t\tif(prime[i]==0)\t//\u7ebf\u6027\u7b5b\u7d20\u6570 \n\t\t\tfor(int j=2;j*i<=n;++j)\n\t\t\t\tprime[j*i]=1;\t//\u539f\u7406\uff1a\u7d20\u6570\u7684\u500d\u6570\u4e00\u5b9a\u662f\u5408\u6570 \n\t\n\tfor(int i=2;i<=n-k;++i)\t//\u5faa\u73af\u5230n-k\u5c31\u53ef\u4ee5\uff0c\u5927\u4e8e\u4e86n-k\u5c31\u4e0d\u53ef\u80fd\u5728n\u8303\u56f4\u5185\u4e86 \n\t\tif(prime[i]==0 && prime[k+i]==0) {\t//\u4e24\u8005\u90fd\u662f\u7d20\u6570 \n\t\t\tprime[i]=1;\t//\u7f6e1\uff0c\u5c31\u4e0d\u4f1a\u91cd\u590d\u626b\u4e86 \n\t\t\tans++;\t//\u5224\u65ad\u662f\u5426\u4e3a\u7a7a \n\t\t\tprintf(\"%d %d\\n\",i,k+i);\n\t\t}\n\tif(ans==0)\t//\u4e3a\u7a7a \n\t\tprintf(\"empty\");\n\treturn 0;\n}\n```",
        "postTime": 1557795924,
        "uid": 186534,
        "name": "Atmizz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2640 \u3010\u795e\u79d8\u78c1\u77f3\u3011"
    },
    {
        "content": "\u9898\u76ee\u4f20\u9001\u95e8\uff1a[P2640 \u795e\u79d8\u78c1\u77f3](www.luogu.org/problemnew/show/P2640)\n\n## \u601d\u8def\uff1a**\u7ebf\u6027\u7b5b\u7d20\u6570**\n\n\u672c\u9898\u8981\u6c42\u6c42\u51fa\u4e24\u4e2a\u5deek\u7684\u8d28\u6570\uff0c\u5f88\u591a\u7684\u9898\u89e3\u90fd\u662f\u66b4\u529b\u679a\u4e3e\uff0c\u8fd9\u91cc\u6211\u4e0d\u591a\u8bf4\u3002\u4e0b\u9762\u6211\u8981\u8bb2\u4e00\u79cd\u7ebf\u6027\u7b5b\u5224\u65ad\u7d20\u6570\u7684\u65b9\u6cd5\u3002\n\n\u6240\u8c13\u7ebf\u6027\u7b5b\uff0c\u901f\u5ea6\u4e5f\u8fbe\u5230\u4e86\u7ebf\u6027\uff0c\u4e0d\u59a8\u7ed9\u5927\u5bb6\u900f\u9732\u4e00\u4e0b\uff0c\u672c\u9898\u6211\u7684\u7ebf\u6027\u7b5b\u505a\u6cd528ms\uff0c\u6bcf\u4e2a\u70b9\u6700\u9ad83ms\u3002\u90a3\u4e48\u8fd9\u4e2a\u7ebf\u6027\u7b5b\u5230\u5e95\u662f\u4ec0\u4e48\u5462\uff1f\n\n\u6d1b\u8c37\u4e0a\u6709\u4e00\u9053\u7ebf\u6027\u7b5b\u7684\u6a21\u677f\u9898\uff1a[P3383 \u3010\u6a21\u677f\u3011\u7ebf\u6027\u7b5b\u7d20\u6570](https://www.luogu.org/problemnew/show/P3383)\n\uff0c\u8fd9\u9053\u9898\u66b4\u529b\u8fc7\u4e0d\u53bb\u3002\n\n\u7ebf\u6027\u7b5b\u6a21\u677f\uff1a\n```cpp\nint t=0,prime[N];\nbool f[N];//N\u662f\u591a\u5c11\u770b\u9898\u76ee\u8981\u6c42\nint main(){\n\tmemset(f,true,sizeof(f));\n    f[0]=f[1]=false;\n    for(int i=2;i<=n;i++){\n        if(f[i]){\n\t\t\tprime[++t]=i;\n\t\t} \n        for(int j=1;j<=t&&i*prime[j]<=n;j++){\n            f[i*prime[j]]=false;//\u505a\u7ebf\u6027\u7b5b\n            if(i%prime[j]==0){\n\t\t\t\tbreak; \n\t\t\t} \n        }\n    }\n}\n```\n\u4f18\u5316\u90e8\u5206\uff1a\n```cpp\nif(i%prime[j]==0){\n\tbreak; \n} \n```\n\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u505a\uff0c\u770b\u4e0d\u61c2\u522b\u6025\uff0c\u4e0b\u9762\u89e3\u91ca\u3002\n\n\u4ee5n\u4e3a10\u4e3a\u4f8b\u5b50\uff0c\u8d70\u5faa\u73af\uff1a\n```\nf\u6570\u7ec4\u50a8\u5b58\u662f\u4e0d\u662f\u7d20\u6570\n\ni=2:\nf[2]=true\uff0cprime[1]=2,t=1;\n\u4ece1~1\u5faa\u73af\nf[2*prime[1]]=false;\n\u5c31\u662f\u8bf4f[2*2],f[4]=false;\n\ni=3:\nf[3]=true,prime[2]=3\uff0ct=2;\n\u4ece1~2\u5faa\u73af\nj=1:\nf[3*prime[1]]=false\u2192f[3*2]=false\u2192f[6]=false;\n3%2!=0,3*(2+1)<=10,j=2;\nf[3*prime[2]]=false\u2192f[3*3]=false\u2192f[9]=false;\n\ni=4:\nf[4]=false,\u7b2c\u4e00\u4e2aif\u8bed\u53e5\u4e0d\u8fdb\n\u4ece1~2\u5faa\u73af\uff08t\u6ca1\u53d8\uff09\nf[4*prime[1]]=false\u2192f[4*2]=false\u2192f[8]=false;\n4%2==0,\u8df3\u51fa\u5faa\u73af\uff1b\n\ni=5:\nf[5]=true,t=3,prime[3]=5;\n\u4ece1~3\u5faa\u73af \nf[5*prime[1]]=false\u2192f[5*2]=false\u2192f[10]=false;\n5%2!=0&&5*(1+1)<=10,j=2\nf[5*prime[2]]=false\u2192f[5*3]=false\u2192f[15]=false;\n5%3!=0,\u4f465*\uff082+1\uff09>10,\u8df3\u51fa\u5faa\u73af\n\ni=6:\nf[6]=false,if\u4e0d\u8fdb\n\u4ece1~3\u5faa\u73af\n\u5224\u65ad:6*prime[1]\u21926*2=12,12>10,\u8fdb\u4e0d\u53bb\u5faa\u73af\n\ni=7:\nf[7]=true,t=4,prime[4]=7;\n7*prime[1]\u21927*2=14,14>10,\u65e0\u6cd5\u8fdb\u5165\u5faa\u73af\n\ni=8:\nf[8]=false,if\u4e0d\u8fdb\n8*prime[1]\u21928*2=16,16>10,\u65e0\u6cd5\u8fdb\u5165\u5faa\u73af\n\ni=9:\nf[9]=false,if\u4e0d\u8fdb\n9*prime[1]\u21929*2=18\uff0c18>10,\u4e0d\u8fdb\u5165\u5faa\u73af\n\ni=10:\nf[10]=false,if\u4e0d\u8fdb\n10*prime[1]\u219210*2=20,20>10,\u4e0d\u8fdb\u5165\u5faa\u73af\n```\n\u63a8\u5b8c\u4e86\uff0c\u4f60\u53d1\u73b0\uff0c\u6bcf\u4e2a\u975e\u7d20\u6570\u7684\u6570\u88ab\u7b5b\u4e86\u5e76\u4e14\u53ea\u7b5b\u4e86\u4e00\u904d\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u7ebf\u6027\u7b5b\u5feb\u3002\n\n\u8981\u662f\u4e0d\u7406\u89e3\u7684\uff0c\u53ef\u4ee5\u53c2\u8003P3383\u7684\u4ee3\u7801\uff0c\u4f4d\u7f6e\uff1a[P3383\u9898\u89e3](https://www.luogu.org/blog/your-luogu-boke/solution-P3383)\n\n\u90a3\u4e48\uff0c\u73b0\u5728\u4e0a\u8fd9\u9053\u9898\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define N 10005//\u58f0\u660eN\uff0c\u548c const int N=10005 \u4e00\u6837 \nusing namespace std;\nint n,q,t,prime[N],x;\nbool f[N];\nint main(){\n    scanf(\"%d%d\",&n,&q);//\u8f93\u5165\uff0cn\u4e3a\u8303\u56f4\uff0cq\u4e3a\u5dee\u8ddd \n    memset(f,true,sizeof(f));//\u5168\u90e8\u8d4b\u503c \n    f[0]=f[1]=false;//\u7b5b\u63890,1 \n    for(int i=2;i<=n;i++){//\u8fdb\u884c\u7ebf\u6027\u7b5b \n        if(f[i]){//\u8d28\u6570 \n\t\t\tprime[++t]=i;//\u50a8\u5b58 \n\t\t} \n        for(int j=1;j<=t&&i*prime[j]<=n;j++){//\u4e0d\u65ad\u5730\u7b5b\u6570 \n            f[i*prime[j]]=false;//\u500d\u6570\uff0c\u7b5b\u6389 \n            if(i%prime[j]==0){//\u4f18\u5316 \n\t\t\t\tbreak; \n\t\t\t} \n        }\n    }\n    bool output=false;//\u5224\u65ad\u662f\u5426\u8f93\u51fa \n    for(int i=2;i<=n-q;i++){//\u5faa\u73af\n\t\t//\u5230n-q\u5c31\u884c\u4e86\uff0c\u56e0\u4e3a\u518d\u5f80\u4e0a\u5faa\u73af\uff0ci+q\u7684\u90a3\u4e2a\u78c1\u77f3\u4e5f\u4f1a\u8d85\u8303\u56f4 \n        if(f[i]&&f[i+q]){//\u4e24\u4e2a\u90fd\u662f\u7d20\u6570 \n        \tprintf(\"%d %d\\n\",i,i+q);//\u8f93\u51fai\u548ci+q\u5e76\u6362\u884c \n        \toutput=true;//\u5df2\u7ecf\u8f93\u51fa\u4e86 \n\t\t}\n    }\n    if(output==false){//\u6ca1\u6709\u8f93\u51fa \n    \tprintf(\"empty\");//\u6309\u7167\u9898\u610f\uff0c\u8f93\u51faempty \n\t}\n    return 0;//\u5b8c\u7f8e\u7ed3\u675f \n}\n```\n\u5927\u5bb6\u6709\u4e0d\u7406\u89e3\u7684\uff0c\u6b22\u8fce\u8bc4\u8bba\u3002\n\n\u63a8\u4e00\u4e0b\u849f\u84bb\u7684\u535a\u5ba2\uff0c\u867d\u7136\u53ea\u6709\u5b64\u96f6\u96f6\u7684\u51e0\u7bc7\u6587\u7ae0\uff1a[\u6211\u7684\u535a\u5ba2](https://www.luogu.org/blog/your-luogu-boke/)\n\n\u7ba1\u7406\u5458\u6c42\u901a\u8fc7QwQ",
        "postTime": 1547958670,
        "uid": 145553,
        "name": "\u6211\u662f\u849f\u5f31",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2640 \u3010\u795e\u79d8\u78c1\u77f3\u3011"
    },
    {
        "content": "\u55ef\u55ef\uff0c\u770b\u5230\u8fd9\u9053\u6570\u5b66\u9898\u9898\u89e3\u8fd9\u4e48\u5c11\uff0c\u6211\u5c31\u6765\u4e00\u53d1~~\n\n\u662f\u7684\uff0c\u8fd9\u9898\u5229\u7528\u4e86\u4e00\u79cd**\u7d20\u6570\u7b5b\u6cd5**\uff01\n\n\u6211\u4eec\u4e3e\u4e2a\u6817\u5b50\uff1a\n\n\u8fd9\u670930\u4e2a\u6570\n\n1 2 3 4 5 6 7 8 9 10\n\n11 12 13 14 15 16 17 18 19 20\n\n21 22 23 24 25 26 27 28 29 30\n\n1\u4e0d\u662f\u7d20\u6570\uff0c\u53bb\u6389\u3002\u5269\u4e0b\u7684\u6570\u4e2d2\u6700\u5c0f\uff0c\u662f\u7d20\u6570\uff0c\u53bb\u63892\u7684\u500d\u6570\uff0c\u4f59\u4e0b\u7684\u6570\u662f:\n\n3 5 7 9 11 13 15 17 19 21 23 25 27 29\n\n\u5269\u4e0b\u7684\u6570\u4e2d3\u6700\u5c0f\uff0c\u662f\u7d20\u6570\uff0c\u53bb\u63893\u7684\u500d\u6570\uff0c\u5982\u6b64\u4e0b\u53bb\u76f4\u5230\u6240\u6709\u7684\u6570\u90fd\u88ab\u7b5b\u5b8c\uff0c\u6c42\u51fa\u7684\u7d20\u6570\u4e3a:\n\n2 3 5 7 11 13 17 19 23 29\n\n\u662f\u4e0d\u662f\u6bd4\u90a3\u79cd\u4e00\u4e2a\u4e2a\u8bd5\u7684\u65b9\u6cd5\u597d\u5f88\u591a\u5462\uff1f\uff1f\n\n\u4e0a\u4ee3\u7801\uff1a\n```\n#include<bits/stdc++.h>//\u5934\u6587\u4ef6\nusing namespace std;\nlong long  n,k,i,j,a[100001];\n//\u8fd9\u91cc\u6211\u4eec\u5047\u8bbe\u6570\u7ec4\u9879\u4e3a0\uff08\u9ed8\u8ba4\uff09\uff0c\u5c31\u662f\u7d20\u6570\uff0c\u4e0d\u7136\u4e0d\u662f\nint main()\n{\n\tcin>>n>>k;\n\ta[1]=1;//1\u4e0d\u662f\u7d20\u6570\uff01\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(a[i]==0)//\u5224\u65ad\u8fd9\u4e2a\u6570\u80fd\u4e0d\u80fd\u7528\uff0c\u5373\u4e0a\u9762\u89e3\u91ca\u4e2d\u201c\u6700\u5c0f\u201d\u7684\u6570\n\t\t{\n\t\t\tj=i+i;//\u53ef\u4e0d\u8981\u628a\u9009\u597d\u7684\u6570\u5426\u5b9a\u4e86\n\t\t\twhile(j<=n)\n\t\t\t{\n\t\t\t\ta[j]=1;//\u5426\u5b9a\n\t\t\t\tj+=i;//i\u7684\u4e0b\u4e00\u4e2a\u500d\u6570\n\t\t\t}\n\t\t\t\n        }\n\t}\n\tlong long ans=0;//\u4e3a\u8f93\u51fa\u201cempty\u201d\u505a\u51c6\u5907\n\tfor(i=1;i<=n-k;i++)//\u56e0\u4e3ai+k\u4f1a\u5224\u65ad\u7684\uff0c\u6240\u4ee5\u6c42\u5230n-k\u5c31\u597d\u4e86\n\t{\n\t\tif(a[i]==0&&a[i+k]==0)//\u80fd\u4e0d\u80fd\u7528\n\t\tcout<<i<<\" \"<<i+k<<endl,ans++;\n\t}\n\tif(ans==0)\n\tcout<<\"empty\";\n\treturn 0;\n}\n```\n\n\u8fd9\u4e2a\u65b9\u6cd5\u5728\u8bb8\u591a\u9898\u76ee\u4e2d\u90fd\u4f1a\u7528\u5230\uff0c\u5e0c\u671b\u5927\u5bb6\u8bb0\u7262:)\n\n\u849f\u84bb\u9898\u89e3\uff0c\u5927\u795e\u52ff\u55b7",
        "postTime": 1526045427,
        "uid": 54465,
        "name": "JackcreaM",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2640 \u3010\u795e\u79d8\u78c1\u77f3\u3011"
    },
    {
        "content": "# P2640 \u795e\u79d8\u78c1\u77f3\n### \u4e00\u3001\u5206\u6790\u6570\u636e\n6924\u662f\u7d20\u6570\u8303\u56f4\uff0c 809\u662f\u7d20\u6570\u4e4b\u5dee\uff0c \u53ea\u9700\u4ece2 811\u8bd5\u52306115 6924\u65e2\u53ef\u4ee5\uff08\u65b9\u6cd5\u867d\u7b28\u4f46\u4e0d\u8d85\u65f6\uff09\n### \u4e8c\u3001\u7f16\u5199\u6846\u67b6\n1. \u7b5b\u51fa\u7d20\u6570\u8868\n1. \u5faa\u73af\u68c0\u9a8c\n1. \u76f4\u81f3\u8f93\u51fa\u5b8c\u6bd5\u6216\u8f93\u51faempty\n### \u4e09\u3001\u586b\u5165\u5185\u5bb9\n```\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6\nusing namespace std;\nbool prime[10005];//\u5e03\u5c14\u7d20\u6570\u8868\uff0c\u5b58\u5728\u8868\u793a\u7d20\u6570\uff0c\u4e0d\u5b58\u5728\u8868\u793a\u975e\u7d20\u6570\nint main(){\n\tint n, k, f=1;//f\u662f\u4e00\u4e2aflag\u53d8\u91cf\n\tscanf(\"%d%d\", &n, &k);\n\tmemset(prime, true, sizeof(prime));//\u5f3a\u5236\u628a\u7d20\u6570\u8868\u90fd\u8f6c\u4e3a\u7d20\u6570\n\tprime[1]=false;//\u4e00\u4e0d\u662f\u7d20\u6570\n\tfor(int i=2;i<=10005;i++)\n\t\tif(prime[i])\n\t\t\tfor(int j=2;i*j<=10005;j++)\n\t\t\t\tprime[i*j]=false;//\u7b5b\u7d20\u6570\u6a21\u5757\uff01\uff01\uff01\n\tfor(int i=1;i+k<=n;i++){//\u662f\u8f83\u5927\u6570\u4e0d\u6284\u8303\u56f4\uff01\uff01\uff01\n\t\tif(prime[i]&&prime[i+k]){\n\t\t\tprintf(\"%d %d\\n\", i, i+k);\n\t\t\tf*=0;//\u6539\u53d8flag\n\t\t}\n\t\telse f*=1;\n\t}\n\tif(f) printf(\"empty\");//\u5982\u679c\u4e00\u76f4\u6ca1\u627e\u7740\uff0c\u8f93\u51fa\u201cempty\u201d\n\treturn 0;\n}\n```\n\n### \u56db\u3001\u9519\u8bef\u539f\u56e0\n\u6211\u7b2c\u4e00\u6b21\u8bc4\u6d4b\u53ea\u62ff\u4e86\u4e09\u5341\u5206\uff0c\u539f\u56e0\u5728\u4e8e\u5fd8\u4e86\u8003\u8651\u8f83\u5927\u6570\u4e0d\u6284\u8303\u56f4\u4e86\uff0c\u751a\u81f3\u6709\u4e00\u4e2aRE\u2026\u2026\n### \u4e94\u3001\u56de\u987e\u603b\u7ed3\n1. \u8bb0\u4f4f\u7b5b\u6cd5\u6a21\u5757\uff01\n1. \u8bb0\u4f4f\u6570\u636e\u8303\u56f4\uff01\n",
        "postTime": 1569249914,
        "uid": 192527,
        "name": "flynn0512",
        "ccfLevel": 0,
        "title": "\u9636\u68af\u65e5\u5fd7DAY1"
    },
    {
        "content": "## \u666e\u53ca\u7ec4\u7684\u6a21\u62df\u9898\u90fd\u662f\u633a\u7b80\u5355\u7684\uff0c\u800c\u4e14\u8fd9\u662f\u4e00\u9053\u9ec4\u9898\uff0c\u5e76\u4e0d\u96be\u3002\n### \u4e0b\u9762\u8d34\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n#define maxn 10039//\u6570\u7ec4\u5b9a\u4e49\uff0c\u6211\u61d2\uff0c\u8fd9\u4e2a\u6bd4\u8f83\u65b9\u4fbf\nusing namespace std;\nint n,k,cnt;//\u5b9a\u4e49\nint b[maxn];\nbool a[maxn];\nvoid FLY(int x) {//\u51fd\u6570FLY1\n\tmemset(a,1,sizeof a);\n\ta[0]=a[1]=false;\n\tfor(register int i=2; i<=x; i++) {\n\t\tif(a[i]) b[++cnt]=i;\n\t\tfor(register int j=1; j<=cnt; j++) {\n\t\t\tregister int k=i*b[j];\n\t\t\tif(k>x) break;\n\t\t\ta[k]=false;\n\t\t\tif(i%b[j]==0) break;\n\t\t}\n\t}\n}\nbool FLY2() {//\u51fd\u6570FLY2\n\tint num=0;\n\tfor(register int i=1; i<=cnt; i++) {\n\t\tregister int f=b[i]+k;\n\t\tif(f>n) \n\t\tbreak;\n\t\tif(a[f]) \n\t\tprintf(\"%d %d\\n\",b[i],f),num++;\n\t}\n\tif(!num) \n\tprintf(\"empty\");//\u5224\u65adnum\u662f\u5426\u4e3a\u96f6\uff0c\u662f\u5c31\u8f93\u51faempty\n}\nint main() {\n\tscanf(\"%d%d\",&n,&k);//\u8f93\u5165\n\tFLY(n);\n\tFLY2();\n\treturn 0;\n}\n```\n",
        "postTime": 1566354346,
        "uid": 94591,
        "name": "chenjiarui",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2640 \u3010\u795e\u79d8\u78c1\u77f3\u3011"
    },
    {
        "content": "# \u6253\u5f00\u9898\u89e3\u4e00\u770b\uff0c\u5c31\u770b\u5230\u7ea2\u540ddalao\u5728\u53d1\u6253\u8868\u9898\u89e3\uff0c\u6211\u5728\u8fd9\u91cc\u5148\u819c\u62dc\u4e00\u4e0b\n\n\u673a\u623f\u91cc\u65b0\u6765\u4e86\u4e00\u4f4d\u5b66\u957f\uff0c\u4e3a\u4e86\u4e86\u89e3\u4e00\u4e0b\u6211\u4eec\u7684\u6c34\u5e73\uff0c\u5c31\u7ed9\u6211\u4eec\u51e0\u9053\u9898\u5237\u5237\uff0c\u7ed3\u679c\u4ed6\u627e\u9519\u4e86\u9898\uff0c\u4e8e\u662f\u5c31\u8ba9\u6211\u4eec\u5237\u4e86\u51e0\u9053\u666e\u53ca\u7684\u9898\uff0c\u51fa\u4e8e\u65e0\u804a\uff0c\u53d1\u4e00\u7bc7\u9898\u89e3\u73a9\u73a9\u3002\n\n\u9898\u76ee\u5927\u610f\u5c31\u662f\u8ba9\u4f60\u627e\u51fa\u57281~n\u4e2d\u6240\u6709\u76f8\u9694k\u7684\u7d20\u6570\u5bf9\u3002\n\n\u5224\u65ad\u7d20\u6570\u5f88\u7b80\u5355\uff08\u5f53\u7136\uff0c\u6211\u61d2\u5f97\u6253\u592a\u591a\u4ee3\u7801\uff0c\u6240\u4ee5\u6253\u4e86\u4e00\u4e2a\u6bd4\u8f83\u6162\u7684\uff09\uff1a\n```\ninline bool ss(int x) {\n\tfor(int i = 2; i <= sqrt(x); ++i)\n\tif(x % i == 0) return false;\n\treturn true;\n}\n```\n\u5f53\u7136\uff0c\u8d8a\u7b80\u5355\u7684\u9898\uff0c\u5c31\u8d8a\u5bb9\u6613\u7ffb\u8f66\u3002\n\n\u9898\u76ee\u4e2d\u8bf4\uff1a\u201c\u82e5\u6ca1\u6709\u627e\u5230\u4efb\u4f55\u7d20\u6570\u5bf9\uff0c\u8f93\u51faempty\u3002\u201d\n\n\u5982\u679c\u4f60\u6ca1\u770b\u5230\uff0c\u90a3\u5c31\u597d\u73a9\u4e86\uff08\u624b\u52a8\u6ed1\u7a3d\uff09\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n```\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint n, k, num;\n\ninline bool ss(int x) {\n\tfor(int i = 2; i <= sqrt(x); ++i)\n\tif(x % i == 0) return false;\n\treturn true;\n}\n\nint main() {\n\tcin >> n >> k;\n\tfor(int i = 2; i <= n - k; ++i) {\n\t\tif(ss(i) && ss(i + k)) {\n\t\t\tcout << i << \" \" << i + k << endl;\n\t\t\tnum++;\n\t\t}\n\t}\n\tif(num == 0) cout << \"empty\";\n\treturn 0;\n}\n```\n",
        "postTime": 1566205959,
        "uid": 99982,
        "name": "\u5fa1\u574210027\u53f7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2640 \u3010\u795e\u79d8\u78c1\u77f3\u3011"
    },
    {
        "content": "------------\n\n# \u601d\u8def\n\n1. \u5217\u4e3e\u4e00\u5bf9\u6570\u4e2d\u8f83\u5c0f\u7684\u4e00\u4e2a\u6570small\uff08small \u2208 [2, len - distance]\uff0c\u4e14small \u2208 N+\uff09\uff0c\u6ce8\u610f\u8fd9\u91cc**small\u6700\u5927\u4e3alen - distance**\uff0c\u82e5small > len - distance\uff0cbig = small + distance > len\uff0c\u8d85\u51fa\u8303\u56f4\uff1b\n\n2. \u5224\u65adsmall\u662f\u5426\u4e3a\u7d20\u6570\uff08[\u666e\u901a\u5224\u65ad\u7d20\u6570](https://www.luogu.org/blog/Singularwind/prime-number-or-not)\uff09\uff1b\n- \u82e5small\u4e3a\u5408\u6570\uff08is_prime_small == false\uff09\uff0c\u8df3\u8fc7\u672c\u6b21\u5faa\u73af\uff0c\u6267\u884c\u4e0b\u6b21\u5faa\u73af\uff1b\n- \u82e5small\u4e3a\u7d20\u6570\uff08is_prime_small == true\uff09\uff0c\u7ee7\u7eed\u5224\u65adbig\u662f\u5426\u4e3a\u7d20\u6570\uff1b\n\t- \u82e5big\u662f\u5408\u6570\uff08is_prime_big == false\uff09\uff0c\u8df3\u8fc7\u672c\u6b21\u5faa\u73af\uff1b\n    - \u82e5big\u4e5f\u662f\u7d20\u6570\uff08is_prime_big == true\uff09\uff0c\u5b58\u5728\u7d20\u6570\u5bf9\uff08yon = true\uff09\uff0c\u8f93\u51fasmall\u548cbig\u7684\u503c\u3002\n\n3. \u82e5\u4e0d\u5b58\u5728\u7d20\u6570\u5bf9\uff08yon == false\uff09\uff0c\u8f93\u51fa\"empty\"\u3002\n\n------------\n\n# \u4ee3\u7801\n\n```cpp\n#include <iostream>\n\nusing namespace std;\n\nint main(void)\n{\n\tint len;    \t\t//\u4e00\u7ef4\u5750\u6807\u7cfb\u7684\u957f\u5ea6\n\tint distance;   \t//\u4e24\u4e2a\u6570\u7684\u8ddd\u79bb\n\tbool yon = false;       //\u662f\u5426\u5b58\u5728\u7d20\u6570\u5bf9\n\t\n\tcin >> len >> distance;\n\t\n\tfor(int small = 2; small <= len - distance; small++)\n\t{\n\t\t//\u662f\u5426\u4e3a\u7d20\u6570\n\t\tbool is_prime_small = true, \t//small\u662f\u5426\u4e3a\u7d20\u6570\n\t\t\t is_prime_big = true;   //big\u662f\u5426\u4e3a\u7d20\u6570\n\t\t\n\t\t//\u5148\u5224\u65adsmall\u662f\u5426\u4e3a\u7d20\u6570\n\t\tfor(int i = 2; i * i <= small; i++)\n\t\t{\n\t\t\tif(small % i == 0)\n\t\t\t{\n\t\t\t\tis_prime_small = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t//small\u4e3a\u7d20\u6570\n\t\tif(is_prime_small)\n\t\t{\n\t\t\tint big = small + distance;\n\n            //\u518d\u5224\u65adbig\u662f\u5426\u4e3a\u7d20\u6570\n\t\t\tfor(int i = 2; i * i <= big; i++)\n\t\t\t{\n\t\t\t\tif(big % i == 0)\n\t\t\t\t{\n\t\t\t\t\tis_prime_big = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//big\u4e3a\u7d20\u6570\n\t\t\tif(is_prime_big)\n\t\t\t{\n\t\t\t\tyon = true;\n\t\t\t\tcout << small << \" \" << big << endl;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t//\u4e0d\u5b58\u5728\u7d20\u6570\u5bf9\n\tif(yon == false)\n\t{\n\t\tcout << \"empty\" <<endl;\n\t}\n\t\n\treturn 0;\n}\n```\n",
        "postTime": 1563783036,
        "uid": 214264,
        "name": "SingularWind",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2640 \u3010\u795e\u79d8\u78c1\u77f3\u3011"
    },
    {
        "content": "\u6253\u8868\u6cd5~~~~\n\n\u9996\u5148\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u989d\u5916\u7a0b\u5e8f\u6765\u7b97\u51fa10000\u4ee5\u5185\u7684\u6240\u6709\u7d20\u6570\uff0c\u7136\u540e\u653e\u5165\u6570\u7ec4,\u514d\u53bb\u5224\u65ad\u7d20\u6570\u7684\u8fc7\u7a0b\uff0c\u8282\u7701\u65f6\u95f4\uff08\u5185\u5b58\u5e94\u8be5\u8db3\u591f\uff09\n```cpp\nint num[10000]={\n2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,2\\\n23,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,4\\\n57,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,7\\\n19,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,9\\\n97,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,12\\\n23,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,14\\\n59,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,16\\\n93,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,19\\\n49,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083,2087,2089,2099,2111,2113,2129,2131,2137,2141,2143,2153,2161,2179,22\\\n03,2207,2213,2221,2237,2239,2243,2251,2267,2269,2273,2281,2287,2293,2297,2309,2311,2333,2339,2341,2347,2351,2357,2371,2377,2381,2383,2389,2393,2399,2411,2417,24\\\n23,2437,2441,2447,2459,2467,2473,2477,2503,2521,2531,2539,2543,2549,2551,2557,2579,2591,2593,2609,2617,2621,2633,2647,2657,2659,2663,2671,2677,2683,2687,2689,26\\\n93,2699,2707,2711,2713,2719,2729,2731,2741,2749,2753,2767,2777,2789,2791,2797,2801,2803,2819,2833,2837,2843,2851,2857,2861,2879,2887,2897,2903,2909,2917,2927,29\\\n39,2953,2957,2963,2969,2971,2999,3001,3011,3019,3023,3037,3041,3049,3061,3067,3079,3083,3089,3109,3119,3121,3137,3163,3167,3169,3181,3187,3191,3203,3209,3217,32\\\n21,3229,3251,3253,3257,3259,3271,3299,3301,3307,3313,3319,3323,3329,3331,3343,3347,3359,3361,3371,3373,3389,3391,3407,3413,3433,3449,3457,3461,3463,3467,3469,34\\\n91,3499,3511,3517,3527,3529,3533,3539,3541,3547,3557,3559,3571,3581,3583,3593,3607,3613,3617,3623,3631,3637,3643,3659,3671,3673,3677,3691,3697,3701,3709,3719,37\\\n27,3733,3739,3761,3767,3769,3779,3793,3797,3803,3821,3823,3833,3847,3851,3853,3863,3877,3881,3889,3907,3911,3917,3919,3923,3929,3931,3943,3947,3967,3989,4001,40\\\n03,4007,4013,4019,4021,4027,4049,4051,4057,4073,4079,4091,4093,4099,4111,4127,4129,4133,4139,4153,4157,4159,4177,4201,4211,4217,4219,4229,4231,4241,4243,4253,42\\\n59,4261,4271,4273,4283,4289,4297,4327,4337,4339,4349,4357,4363,4373,4391,4397,4409,4421,4423,4441,4447,4451,4457,4463,4481,4483,4493,4507,4513,4517,4519,4523,45\\\n47,4549,4561,4567,4583,4591,4597,4603,4621,4637,4639,4643,4649,4651,4657,4663,4673,4679,4691,4703,4721,4723,4729,4733,4751,4759,4783,4787,4789,4793,4799,4801,48\\\n13,4817,4831,4861,4871,4877,4889,4903,4909,4919,4931,4933,4937,4943,4951,4957,4967,4969,4973,4987,4993,4999,5003,5009,5011,5021,5023,5039,5051,5059,5077,5081,50\\\n87,5099,5101,5107,5113,5119,5147,5153,5167,5171,5179,5189,5197,5209,5227,5231,5233,5237,5261,5273,5279,5281,5297,5303,5309,5323,5333,5347,5351,5381,5387,5393,53\\\n99,5407,5413,5417,5419,5431,5437,5441,5443,5449,5471,5477,5479,5483,5501,5503,5507,5519,5521,5527,5531,5557,5563,5569,5573,5581,5591,5623,5639,5641,5647,5651,56\\\n53,5657,5659,5669,5683,5689,5693,5701,5711,5717,5737,5741,5743,5749,5779,5783,5791,5801,5807,5813,5821,5827,5839,5843,5849,5851,5857,5861,5867,5869,5879,5881,58\\\n97,5903,5923,5927,5939,5953,5981,5987,6007,6011,6029,6037,6043,6047,6053,6067,6073,6079,6089,6091,6101,6113,6121,6131,6133,6143,6151,6163,6173,6197,6199,6203,62\\\n11,6217,6221,6229,6247,6257,6263,6269,6271,6277,6287,6299,6301,6311,6317,6323,6329,6337,6343,6353,6359,6361,6367,6373,6379,6389,6397,6421,6427,6449,6451,6469,64\\\n73,6481,6491,6521,6529,6547,6551,6553,6563,6569,6571,6577,6581,6599,6607,6619,6637,6653,6659,6661,6673,6679,6689,6691,6701,6703,6709,6719,6733,6737,6761,6763,67\\\n79,6781,6791,6793,6803,6823,6827,6829,6833,6841,6857,6863,6869,6871,6883,6899,6907,6911,6917,6947,6949,6959,6961,6967,6971,6977,6983,6991,6997,7001,7013,7019,70\\\n27,7039,7043,7057,7069,7079,7103,7109,7121,7127,7129,7151,7159,7177,7187,7193,7207,7211,7213,7219,7229,7237,7243,7247,7253,7283,7297,7307,7309,7321,7331,7333,73\\\n49,7351,7369,7393,7411,7417,7433,7451,7457,7459,7477,7481,7487,7489,7499,7507,7517,7523,7529,7537,7541,7547,7549,7559,7561,7573,7577,7583,7589,7591,7603,7607,76\\\n21,7639,7643,7649,7669,7673,7681,7687,7691,7699,7703,7717,7723,7727,7741,7753,7757,7759,7789,7793,7817,7823,7829,7841,7853,7867,7873,7877,7879,7883,7901,7907,79\\\n19,7927,7933,7937,7949,7951,7963,7993,8009,8011,8017,8039,8053,8059,8069,8081,8087,8089,8093,8101,8111,8117,8123,8147,8161,8167,8171,8179,8191,8209,8219,8221,82\\\n31,8233,8237,8243,8263,8269,8273,8287,8291,8293,8297,8311,8317,8329,8353,8363,8369,8377,8387,8389,8419,8423,8429,8431,8443,8447,8461,8467,8501,8513,8521,8527,85\\\n37,8539,8543,8563,8573,8581,8597,8599,8609,8623,8627,8629,8641,8647,8663,8669,8677,8681,8689,8693,8699,8707,8713,8719,8731,8737,8741,8747,8753,8761,8779,8783,88\\\n03,8807,8819,8821,8831,8837,8839,8849,8861,8863,8867,8887,8893,8923,8929,8933,8941,8951,8963,8969,8971,8999,9001,9007,9011,9013,9029,9041,9043,9049,9059,9067,90\\\n91,9103,9109,9127,9133,9137,9151,9157,9161,9173,9181,9187,9199,9203,9209,9221,9227,9239,9241,9257,9277,9281,9283,9293,9311,9319,9323,9337,9341,9343,9349,9371,93\\\n77,9391,9397,9403,9413,9419,9421,9431,9433,9437,9439,9461,9463,9467,9473,9479,9491,9497,9511,9521,9533,9539,9547,9551,9587,9601,9613,9619,9623,9629,9631,9643,96\\\n49,9661,9677,9679,9689,9697,9719,9721,9733,9739,9743,9749,9767,9769,9781,9787,9791,9803,9811,9817,9829,9833,9839,9851,9857,9859,9871,9883,9887,9901,9907,9923,99\\\n29,9931,9941,9949,9967,9973,10007,10009,10037,10039,10061,10067,10069,10079,10091,10093,10099,10103,10111,10133,10139,10141,10151,10159,10163,10169,10177,10181,\\\n10193,10211,10223,10243,10247,10253,10259,10267,10271,10273,10289,10301,10303,10313,10321,10331,10333,10337,10343,10357,10369,10391,10399,10427,10429,10433,1045\\\n3,10457,10459,10463,10477,10487,10499,10501,10513,10529,10531,10559,10567,10589,10597,10601,10607,10613,10627,10631,10639,10651,10657,10663,10667,10687,10691,10\\\n709,10711,10723,10729,10733,10739,10753,10771,10781,10789,10799,10831,10837,10847,10853,10859,10861,10867,10883,10889,10891,10903,10909,10937,10939,10949,10957,\\\n10973,10979,10987,10993,11003,11027,11047,11057,11059,11069,11071,11083,11087,11093,11113,11117,11119,11131,11149,11159,11161,11171,11173,11177,11197,11213,1123\\\n9,11243,11251,11257,11261,11273,11279,11287,11299,11311,11317,11321,11329,11351,11353,11369,11383,11393,11399,11411,11423,11437,11443,11447,11467,11471,11483,11\\\n489,11491,11497,11503,11519,11527,11549,11551,11579,11587,11593,11597,11617,11621,11633,11657,11677,11681,11689,11699,11701,11717,11719,11731,11743,11777,11779,\\\n11783,11789,11801,11807,11813,11821,11827,11831,11833,11839,11863,11867,11887,11897,11903,11909,11923,11927,11933,11939,11941,11953,11959,11969,11971,11981,1198\\\n7,12007,12011,12037,12041,12043,12049,12071,12073,12097,12101,12107,12109,12113,12119,12143,12149,12157,12161,12163,12197,12203,12211,12227,12239,12241,12251,12\\\n253,12263,12269,12277,12281,12289,12301,12323,12329,12343,12347,12373,12377,12379,12391,12401,12409,12413,12421,12433,12437,12451,12457,12473,12479,12487,12491,\\\n12497,12503,12511,12517,12527,12539,12541,12547,12553,12569,12577,12583,12589,12601,12611,12613,12619,12637,12641,12647,12653,12659,12671,12689,12697,12703,1271\\\n3,12721,12739,12743,12757,12763,12781,12791,12799,12809,12821,12823,12829,12841,12853,12889,12893,12899,12907,12911,12917,12919,12923,12941,12953,12959,12967,12\\\n973,12979,12983,13001,13003,13007,13009,13033,13037,13043,13049,13063,13093,13099,13103,13109,13121,13127,13147,13151,13159,13163,13171,13177,13183,13187,13217,\\\n13219,13229,13241,13249,13259,13267,13291,13297,13309,13313,13327,13331,13337,13339,13367,13381,13397,13399,13411,13417,13421,13441,13451,13457,13463,13469,1347\\\n7,13487,13499,13513,13523,13537,13553,13567,13577,13591,13597,13613,13619,13627,13633,13649,13669,13679,13681,13687,13691,13693,13697,13709,13711,13721,13723,13\\\n729,13751,13757,13759,13763,13781,13789,13799,13807,13829,13831,13841,13859,13873,13877,13879,13883,13901,13903,13907,13913,13921,13931,13933,13963,13967,13997,\\\n13999,14009,14011,14029,14033,14051,14057,14071,14081,14083,14087,14107,14143,14149,14153,14159,14173,14177,14197,14207,14221,14243,14249,14251,14281,14293,1430\\\n3,14321,14323,14327,14341,14347,14369,14387,14389,14401,14407,14411,14419,14423,14431,14437,14447,14449,14461,14479,14489,14503,14519,14533,14537,14543,14549,14\\\n551,14557,14561,14563,14591,14593,14621,14627,14629,14633,14639,14653,14657,14669,14683,14699,14713,14717,14723,14731,14737,14741,14747,14753,14759,14767,14771,\\\n14779,14783,14797,14813,14821,14827,14831,14843,14851,14867,14869,14879,14887,14891,14897,14923,14929,14939,14947,14951,14957,14969,14983,15013,15017,15031,1505\\\n3,15061,15073,15077,15083,15091,15101,15107,15121,15131,15137,15139,15149,15161,15173,15187,15193,15199,15217,15227,15233,15241,15259,15263,15269,15271,15277,15\\\n287,15289,15299,15307,15313,15319,15329,15331,15349,15359,15361,15373,15377,15383,15391,15401,15413,15427,15439,15443,15451,15461,15467,15473,15493,15497,15511,\\\n15527,15541,15551,15559,15569,15581,15583,15601,15607,15619,15629,15641,15643,15647,15649,15661,15667,15671,15679,15683,15727,15731,15733,15737,15739,15749,1576\\\n1,15767,15773,15787,15791,15797,15803,15809,15817,15823,15859,15877,15881,15887,15889,15901,15907,15913,15919,15923,15937,15959,15971,15973,15991,16001,16007,16\\\n033,16057,16061,16063,16067,16069,16073,16087,16091,16097,16103,16111,16127,16139,16141,16183,16187,16189,16193,16217,16223,16229,16231,16249,16253,16267,16273,\\\n16301,16319,16333,16339,16349,16361,16363,16369,16381,16411,16417,16421,16427,16433,16447,16451,16453,16477,16481,16487,16493,16519,16529,16547,16553,16561,1656\\\n7,16573,16603,16607,16619,16631,16633,16649,16651,16657,16661,16673,16691,16693,16699,16703,16729,16741,16747,16759,16763,16787,16811,16823,16829,16831,16843,16\\\n871,16879,16883,16889,16901,16903,16921,16927,16931,16937,16943,16963,16979,16981,16987,16993,17011,17021,17027,17029,17033,17041,17047,17053,17077,17093,17099,\\\n17107,17117,17123,17137,17159,17167,17183,17189,17191,17203,17207,17209,17231,17239,17257,17291,17293,17299,17317,17321,17327,17333,17341,17351,17359,17377,1738\\\n3,17387,17389,17393,17401,17417,17419,17431,17443,17449,17467,17471,17477,17483,17489,17491,17497,17509,17519,17539,17551,17569,17573,17579,17581,17597,17599,17\\\n609,17623,17627,17657,17659,17669,17681,17683,17707,17713,17729,17737,17747,17749,17761,17783,17789,17791,17807,17827,17837,17839,17851,17863,17881,17891,17903,\\\n17909,17911,17921,17923,17929,17939,17957,17959,17971,17977,17981,17987,17989,18013,18041,18043,18047,18049,18059,18061,18077,18089,18097,18119,18121,18127,1813\\\n1,18133,18143,18149,18169,18181,18191,18199,18211,18217,18223,18229,18233,18251,18253,18257,18269,18287,18289,18301,18307,18311,18313,18329,18341,18353,18367,18\\\n371,18379,18397,18401,18413,18427,18433,18439,18443,18451,18457,18461,18481,18493,18503,18517,18521,18523,18539,18541,18553,18583,18587,18593,18617,18637,18661,\\\n18671,18679,18691,18701,18713,18719,18731,18743,18749,18757,18773,18787,18793,18797,18803,18839,18859,18869,18899,18911,18913,18917,18919,18947,18959,18973,1897\\\n9,19001,19009,19013,19031,19037,19051,19069,19073,19079,19081,19087,19121,19139,19141,19157,19163,19181,19183,19207,19211,19213,19219,19231,19237,19249,19259,19\\\n267,19273,19289,19301,19309,19319,19333,19373,19379,19381,19387,19391,19403,19417,19421,19423,19427,19429,19433,19441,19447,19457,19463,19469,19471,19477,19483,\\\n19489,19501,19507,19531,19541,19543,19553,19559,19571,19577,19583,19597,19603,19609,19661,19681,19687,19697,19699,19709,19717,19727,19739,19751,19753,19759,1976\\\n3,19777,19793,19801,19813,19819,19841,19843,19853,19861,19867,19889,19891,19913,19919,19927,19937,19949,19961,19963,19973,19979,19991,19993,19997\n} ; \n```\n\u63a5\u4e0b\u6765\u53ea\u8981\u8ddf\u7740\u9898\u610f\u8d70\u5c31\u884c\u4e86\uff0cAC\u4ee3\u7801\u9644\u4e0a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std; \nint num[10000]={....} ;//\u6b64\u5904\u592a\u957f\uff0c\u7701\u7565\uff0c\u81ea\u5df1\u77e5\u9053\u5c31\u884c\nint main()\n{\n\tint n,k; \n\tcin>>n>>k; \n\tbool flag=false;//\u6807\u8bb0\n\tfor(int i=0;num[i]+k<=n;++i)//\u67e5\u627e\u5c0f\u4e8en\u7684\u7d20\u6570\n\t{\n\t\tfor(int j=0;num[j]<=num[i]+k;++j)\n\t     if(num[i]+k==num[j])//\u5224\u65ad\u7b26\u5408\u8981\u6c42\u7684\u7d20\u6570\u961f\n\t     {\n\t\t cout<<num[i]<<' '<<num[j]<<endl;\n\t\t flag=true;  \t//\u5982\u679c\u5b58\u5728\u7b26\u5408\u8981\u6c42\u7684\u7d20\u6570\u961f\uff0c\u52a0\u4e0a\u6807\u8bb0,\u8868\u793a\u5b58\u5728\u7b54\u6848\n\t\t }\n\t}\n\tif(!flag)\n\tcout<<\"empty\"; //\u5982\u679c\u6ca1\u6709\u7b26\u5408\u8981\u6c42\u7684\u7d20\u6570\u961f\uff0c\u8f93\u51faempty \n    while(1){}//\u53ea\u53ef\u610f\u4f1a,\u4e0d\u53ef\u8a00\u4f20\n\treturn 0; \n}\n \n```",
        "postTime": 1549171592,
        "uid": 93374,
        "name": "TheAurora",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2640 \u3010\u795e\u79d8\u78c1\u77f3\u3011"
    },
    {
        "content": "```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nbool ac(int n)//\u5b9a\u4e49\u51fd\u6570\uff0c\u5224\u65ad\u8d28\u6570\n{\n\tif(n<2) return false;//\u5c0f\u4e8e2\u7684\u4e0d\u662f\u8d28\u6570\n\tfor(int i=2;i*i<=n;i++)//\u68c0\u9a8c\u5230\u4e00\u4e2a\u6570\u7684\u5e73\u65b9\u6839\u5c31\u591f\u4e86\uff0c\u65f6\u95f4\u4f1a\u5feb\u5f88\u591a\uff0c\u8981\u4e0d\u7136\u4f1aTLE\n\t if(n%i==0) return false;\n\treturn true; \n}\nint main(){\n    int n,k;\n    bool t=1;\n    cin>>n>>k;//\u8f93\u5165\n    for(int i=2;i<=n-k;i++) \n        if(ac(i)&&ac(i+k))//\u8c03\u7528\u51fd\u6570\u5224\u65ad\u8d28\u6570\n        {\n            cout<<i<<\" \"<<i+k<<endl;\n            t=0;//\u7279\u6b8a\u6807\u8bb0t\uff08\u7528true\uff0cfalse\u4e5f\u53ef\u4ee5\u7684\uff09\n        }\n    if(t)cout<<\"empty\";//\u4f9d\u7167\u9898\u610f\u8f93\u51fa\u5373\u53ef\n    return 0;\n}\n\n\u8fd9\u9053\u9898\u5c31\u662f\u7528\u4e86\u4e00\u4e2a\u5224\u65ad\u8d28\u6570\u51fd\u6570\uff0c\u53ea\u8981\u4ed4\u7ec6\u4e00\u70b9\u5c31\u80fd\u591fAC\u7684\uff01\n```",
        "postTime": 1547207614,
        "uid": 172612,
        "name": "\u7c73\u5947\u5947\u7c73",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2640 \u3010\u795e\u79d8\u78c1\u77f3\u3011"
    },
    {
        "content": "\u6bd4\u8f83\u7b80\u5355\uff0c\u96be\u70b9\uff1a\u5224\u65ad\u7d20\u6570\n\n\u5224\u65ad\u7d20\u6570\u4e5f\u6bd4\u8f83\u7b80\u5355\n\n\u4e00\u4e2a\u597d\u4e60\u60ef\uff1a\u628asqrt\u7528\u4e00\u4e2a\u6570\u4fdd\u5b58\n\n\u597d\u5904\uff1a1\u3001\u63d0\u9ad8\u901f\u5ea6  2\u3001\u964d\u4f4e\u51fa\u9519\u7387\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nbool jub(int m){\n    int k=sqrt(m),i;\n    for(i=2;i<=k;i++)\n    if (m%i==0) return 0;\n    return true;\n}\nint n,m,i,f=1;\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(i=2;i<=n;i++){\n        if (i+m>n) break;\n        if (jub(i)&&jub(i+m)){\n            printf(\"%d %d\\n\",i,i+m);\n            f=0;\n        }\n    }\n    if (f) puts(\"empty\");\n    return 0;\n}\n```\n\u675c\u7edd\u590d\u5236copy",
        "postTime": 1545209880,
        "uid": 95624,
        "name": "HPXXZYY",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2640 \u3010\u795e\u79d8\u78c1\u77f3\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\uff0c\u6211\u7adf\u7136\u7528\u4e86\u4e00\u4e2a\u53eb\u505apython3\u7684\u4e1c\u897f\u6765A\u8fd9\u9053\u9898\uff0c\u7adf\u7136\u6210\u529f\u4e86\uff0c\u4e5f\u5e2e\u52a9\u6211\u52a0\u6df1\u4e86\u5bf9python\u7684\u7406\u89e3\uff0c\u8fd9\u9053\u9898\u9996\u5148\u7528\u7ebf\u6027\u7b5b\uff08\u867d\u7136\u6211\u662f\u6b27\u62c9\u7b5b\u4f46\u6ca1\u4ec0\u4e48\u533a\u522b\uff09\uff0c\u7136\u540e\u76f4\u63a5\u679a\u4e3e\u590d\u6742\u5ea6O\uff08N\uff09\uff1b\n\n\u4e0b\u9762\uff0cQAQ\uff0c\u6652\u4ee3\u7801\u4e86;\n\n```python\na,b = map(int, input().split())\nn=int(a);\nk=int(b);\nc=[1];\nbb=[1];\nfor i in range(2,n+5):\n    c+=bb;\nfor i in range(2,n+1):\n    if c[i]==1:\n        for j in range(2,n+1):\n            if i*j>n:\n                break;\n            c[i*j]=0;\nsum=int(0);\nfor i in range(2,n):\n    if i+k>n:\n        break;\n    if c[i]==1 and c[i+k]==1:\n        print(i,i+k);\n        sum=sum+1;\nif sum==0:\n    print(\"empty\");\n```\n\n\u4e0d\u77e5\u9053\u80fd\u4e0d\u80fd\u8fc7\uff0cQAQ",
        "postTime": 1544540740,
        "uid": 38427,
        "name": "Mr_\u6d53\u6c28",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2640 \u3010\u795e\u79d8\u78c1\u77f3\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7528\u4e00\u4e2a\u51fd\u6570\u5224\u65ad\u8d28\u6570\uff0c\u5728\u4e00\u4e2a\u4e00\u4e2a\u7684\u679a\u4e3e\u3002\u5148\u4e0d\u591a\u8bf4\uff0c\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#include <bits/stdc++.h>\nusing namespace std;\n\nbool prime(int x){//\u5224\u522b\u8d28\u6570\u51fd\u6570\n    if(x<5)if(x==2||x==3)return 1;//\u7701\u65f6\n    else return 0;\n    if(!(x%6==5||x%6==1)) return 0;\n    else\n    {for(int i=2;i*i<=x;i++)\n        if(x%i==0)return 0;\n        return 1;}\n}\n\nint main(){\n    int n,k;\n    bool t=1;//\u7279\u5f81\u53d8\u91cft\n    cin>>n>>k;\n    for(int i=2;i<=n-k;i++)//\u4ece2\u2014n-k\u679a\u4e3e\n        if(prime(i)&&prime(i+k)){//\u53ea\u8981i\u548ci+k\u90fd\u662f\u8d28\u6570\uff0c\n            cout<<i<<\" \"<<i+k<<endl;//\u5c31\u6253\u5370\n            t=0;//\u7279\u5f81\u53d8\u91cf\u6e05\u96f6\n        }\n    if(t)cout<<\"empty\";//\u5224\u522bt,\u6253\u5370empty\n    return 0;//\u534e\u4e3d\u6536\u5c3e\n}\n```",
        "postTime": 1540558289,
        "uid": 109640,
        "name": "\u5fae\u9999\u7389\u70db\u6697",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2640 \u3010\u795e\u79d8\u78c1\u77f3\u3011"
    },
    {
        "content": "### \u6211\u770b\u4e86\u770b\u697c\u4e0b\u7684\u5927\u4f6c\u4eec\u7684\u4ee3\u7801\u6839\u672c\u5c31\u770b\u4e0d\u61c2\uff0c\u89c9\u5f97\u8fd8\u662f\u6211\u7684\u597d\u7406\u89e3\n#### \u6211\u7528\u66b4\u529b\u89e3\u51b3\u8fd9\u9053\u9898\u4f46\u662f\u53c8\u5728\u6709\u4e9b\u5730\u65b9\u6295\u673a\u53d6\u5de7\u4e86\u4e00\u4e0b\n##### \u4e0b\u9762\u662f\u6211\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>//cin,cout\u5fc5\u5907\nusing namespace std;\nint n,k;\nbool a;//\u5224\u65ad\u6709\u6ca1\u6709\nbool p(int num)//\u5224\u65ad\u662f\u4e0d\u662f\u8d28\u6570\n{\n\tfor(int i=2;i*i<=num;i++)\n\t\tif(num%i==0) return false;//\u8fd4\u56defalse,\u610f\u601d\u662f:\u4e0d\u662f\u8d28\u6570\n\treturn 1;//\u5426\u5219,\u8fd4\u56detrue,\u610f\u601d\u662f:\u662f\u8d28\u6570\n}\nint main()//\u4e3b\u51fd\u6570\n{\n\tcin>>n>>k;//\u8f93\u5165\n\tif(p(2+k))//2\u662f\u552f\u4e00\u7684\u5076\u8d28\u6570\u6240\u4ee5\u5148\u5224\u65ad2+k\u662f\u4e0d\u662f\u8d28\u6570\n\t\tcout<<2<<\" \"<<2+k<<endl;a=1;//\u8f93\u51fa\u52a0\u8bbe\u7f6e\u72b6\u6001\u4e3a\u771f\uff0c\u610f\u601d\u4e3a\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u7d20\u6570\u5bf9\n\tfor(int i=3;i+k<=n;i+=2)//\u5224\u65ad\u5947\u6570\n\t{\n\t\tif(p(i))//\u5224\u65ad\u6bd4\u8f83\u5c0f\u7684\u6570\n//\u5982\u679c\u4e24\u4e2a\u6570\u4e00\u8d77\u5224\u65ad\u5c31\u4f1a\u5224\u65ad\u592a\u591a\u6b21\u6709\u53ef\u80fd\u8d85\u65f6\u4f46\u6211\u6ca1\u8bd5\u8fc7QWQ\n\t\t\tif(p(i+k))//\u5224\u65ad\u6bd4\u8f83\u5927\u7684\u6570\n\t\t\t\tcout<<i<<\" \"<<i+k<<endl;a=1;//\u8f93\u51fa\u52a0\u8bbe\u7f6e\u72b6\u6001\u4e3a\u771f\uff0c\u610f\u601d\u4e3a\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u7d20\u6570\u5bf9\n\t}\n\tif(!a) cout<<\"empty\";//\u6ca1\u6709\u5219\u8f93\u51fa\"empty\"\n    while(1);//\u53cd\u6284\u88ad\n\treturn 0;\n}\n```",
        "postTime": 1535011654,
        "uid": 78206,
        "name": "ricky_lin",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2640 \u3010\u795e\u79d8\u78c1\u77f3\u3011"
    },
    {
        "content": "\u697c\u4e0b\u7684\u5404\u4f4d\u90fd\u628a\u9898\u60f3\u96be\u4e86\u3002\u6b64\u9898\u53ea\u9700\u4ece1\u2014\u2014n\u66b4\u529b\u679a\u4e3e\u5373\u53ef\uff0c\u4ee3\u7801\u5982\u4e0b\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint zs(int a)//\u5224\u65ad\u8d28\u6570\n{\n\tint i;\n\tfor(i=2;i*i<=a;i++)//\u8fd9\u91cc\u7528\u7684\u662f\u5224\u8d28\u6570\u7684\u4f18\u5316\uff0c\u4e0d\u9700\u8981\u5faa\u73af\u5230a\n\t{\n\t\tif(a%i==0)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 1;//\u8fd4\u56de0\u62161\u5224\u65ad\u6b63\u8bef\n}\nint main()\n{\n\tint i,n,k,bj=0;\n\tscanf(\"%d%d\",&n,&k);\n\tfor(i=2;i<=n-k;i++)//\u8fd9\u91cc\u53ea\u8981\u5faa\u73af\u5230n-k\uff0c\u56e0\u4e3an-k+k\u5373\u4e3an\uff0c\u5c31\u662f\u6700\u5927\u9650\u5ea6\n\t{\n\t\tif(zs(i)==1&&zs(i+k)==1)//\u5982\u679ci\u548ci+k\u90fd\u662f\u8d28\u6570\u5c31\u8f93\u51fa\n\t\t{\n\t\t\tprintf(\"%d %d\\n\",i,i+k);\n\t\t\tbj=1;\n\t\t}\n\t}\n\tif(bj==0)//\u5982\u679c\u4e00\u6b21\u4e5f\u6ca1\u6709\u6ee1\u8db3\u5219\u8f93\u51faempty\n\t{\n\t\tprintf(\"empty\\n\");\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1530353901,
        "uid": 89766,
        "name": "Mr_\u5b8f\u4f1f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2640 \u3010\u795e\u79d8\u78c1\u77f3\u3011"
    },
    {
        "content": "#\u9898\u610f\n\n-  \u8ba9\u4f60\u627e\u5230n\u4ee5\u5185\u5dee\u4e3ak\u7684\u6570\u5bf9\uff0c\n\n#\u9898\u89e3\n\n- \u90a3\u4e48\u5904\u7406n\u4ee5\u5185\u7684\u7d20\u6570\uff0c\u83b7\u5f97\u4e00\u4e2aisprime\u7684bool\u6570\u7ec4\u548c\u4e00\u4e2a\u7d20\u6570\u6570\u7ec4\uff0c\u904d\u5386\u4e00\u904d\u7d20\u6570\u6570\u7ec4\u6bcf\u6b21\uff0c\u67e5\u8be2\u6b64\u7d20\u6570+k\u662f\u5426\u4e3a\u7d20\u6570\uff08\u5229\u7528isprime\u6570\u7ec4\u53ef\u505a\u5230O\uff081\uff09\u7684\u67e5\u8be2\uff09\n\n#\u590d\u6742\u5ea6O\uff08n\uff09\n\n##\u9898\u5916\u8bdd\n\n-\u8fd9\u91cc\u63d0\u4f9b\u4e86\u4e00\u79cd\u7ebf\u6027\u7d20\u6570\u7b5b\u2014\u2014\u6b27\u62c9\u7b5b\uff0c\u89c1\u4ee3\u7801\u4e2d\u7684euler\uff08\uff09\u51fd\u6570\n\n**-------**\n\n-\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int maxn=10005;\nint n,k,cnt;\nint pri[maxn];//\u6ca1\u6709maxn\u4e2a \u4f46\u662f.......\u61d2\uff01\uff01 \nbool isp[maxn];\nvoid euler(int x){//\u6b27\u62c9\u7b5b\n    memset(isp,1,sizeof isp);\n    isp[0]=isp[1]=false;\n    for(int i=2;i<=x;i++){\n        if(isp[i]) pri[++cnt]=i;\n        for(int j=1;j<=cnt;j++){\n            int k=i*pri[j];\n            if(k>x) break;\n            isp[k]=false;\n            if(i%pri[j]==0) break;\n        }\n    }\n} \nbool print(){\n    int num=0;\n    for(int i=1;i<=cnt;i++){\n        int sec=pri[i]+k;\n        if(sec>n) break;\n        if(isp[sec]) printf(\"%d %d\\n\",pri[i],sec),num++;\n    }\n    if(!num) printf(\"empty\");\n}\nint main(){\n    scanf(\"%d%d\",&n,&k);\n    euler(n);\n    print();\n} \n```",
        "postTime": 1511862173,
        "uid": 50966,
        "name": "YWY_wys",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2640 \u3010\u795e\u79d8\u78c1\u77f3\u3011"
    },
    {
        "content": "#\u6a21\u62df\n\n###\u9898\u76ee\u7684\u610f\u601d\u5c31\u662f\u5728N\u8303\u56f4\u5185\u627e\u7d20\u6570\u5bf9\uff0c\u8ba9\u4e24\u6570\u7684\u5dee=k\u5982\u679c\u6709\u591a\u5bf9\u4e00\u8d77\u8f93\u51fa\u554a\uff01\u5148\u5728\u8303\u56f4\u5185\u627e\u7d20\u6570\uff0c\u5982\u679c\u662f\u7d20\u6570\u5728\u7ed9\u5b83\u52a0\u4e0ak\u5982\u679c\u8fd8\u662f\u7d20\u6570\u5c31\u8f93\u51fa\u7136\u540e\u63a5\u7740\u627e\uff0c\u8fb9\u627e\u8fb9\u505a\u8bb0\u53f7\uff0c\u627e\u5230\u8bb0\u53f7\u4e3a1\uff0c\u6ca1\u627e\u5230\u4e3a0\uff0c\u6700\u540e\u518d\u5224\u65ad\u8bb0\u53f7\u7684\u503c\uff0c\u5982\u679c\u4e3a0\u8f93\u51faempty\uff0c\u6570\u636e\u8f83\u5c0f\u4e0d\u4f1a\u7206\uff01~~\u56e0\u4e3a\u8f93\u51fa\u6ca1\u6709\u6362\u884c\u800c\u63d0\u4ea4N\u6b21\u7684\u4eba\u5199~~\n\n```cpp\nvar n,s,i,j,x:longint;\n    f:array[1..100000] of boolean;\nbegin\n  read(n,s);\n  for i:=1 to n do f[i]:=true;\n  f[1]:=false;\n  for i:=2 to n do \n    if f[i] then for j:=2 to n div i do f[i*j]:=false;\n  for i:=1 to n-s do if (f[i])and(f[i+s]) then begin\n    x:=1;\n    writeln(i,' ',i+s);\n  end;\n  if x<>1 then writeln('empty');\nend.\n\n```",
        "postTime": 1503842211,
        "uid": 49643,
        "name": "wangweiba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2640 \u3010\u795e\u79d8\u78c1\u77f3\u3011"
    },
    {
        "content": "\u5982\u679c\u5b9a\u4e49i\u4e3a\u7b2c\u4e00\u4e2a\u6570\uff0ci+k\u4e3a\u7b2c\u4e8c\u4e2a\u6570\uff0c\u90a3\u4e48\u8fd9\u4e2a\u9898\u7684\u5b9e\u8d28\u662f\u4ee4i\u548ci+k\u540c\u65f6\u662f\u7d20\u6570\n\n\u540c\u65f6\u6ee1\u8db3i>=2\uff0c\uff080\u548c1\u90fd\u4e0d\u662f\u7d20\u6570\uff0c\u4ece2\u5f00\u59cb\u627e\uff09\uff0ci+k<=n\n\n\u6570\u636e\u89c4\u6a21\u8f83\u5c0f\uff0c\u5982\u679c\u52a0\u4e00\u4e9b\u4f18\u5316\u7528\u666e\u901a\u7684\u7d20\u6570\u5224\u65ad\u4e5f\u80fd\u8fc7\uff0c\u4f46\u8fd9\u91cc\u5c06\u8981\u7528\u7b5b\u6cd5\u7b5b\u7d20\u6570\n\n\n\u666e\u901a\u7b5b\u6cd5\uff1a\u5728\u8303\u56f4n\u5185\u7684\u6bcf\u4e2a\u975e\u8d1f\u6574\u6570p(\u663e\u7136p\u8981\u5927\u4e8e\u7b49\u4e8e2\u624d\u884c)\uff0c\u5220\u96642p,3p,4p....\uff08\u8fd9\u4e9b\u6570\u4e00\u5b9a\u662f\u5408\u6570\uff09\n\n\u7528\u8fd9\u4e2a\u601d\u60f3\uff0c\u52a0\u4e0a\u4e00\u4e2a\u6807\u8bb0\u6570\u7ec4\uff0c\u5c31\u80fd\u5199\u51fa\u4e0b\u9762\u7684\u7b5b\u6cd5\u7a0b\u5e8f\n\n\n\n```cpp\nmemset(vis,0,sizeof(vis));//\u521d\u59cb\u5316\u6807\u8bb0\u6570\u7ec4\nvis[0]=vis[1]=1//\u5148\u6807\u8bb0\u8003\u8651\u4e0d\u5230\u7684\u60c5\u51b5\nfor(int i=2;i<=n;i++)\n    for(int j=i*2;j<=n;j+=i)vis[j]=1//\u6807\u8bb0\u5408\u6570\u4e3a1\n```\n\u8fd9\u6837\u6570\u7ec4\u4e2d\u503c\u4e3a1\u7684\u6570\u636e\u7684\u7f16\u53f7\u5c31\u662f\u5408\u6570\uff0c\u7d20\u6570\u5c31\u662f\u503c\u4e3a0\u7684\u7f16\u53f7\uff0c\u8fd9\u6837\u5c31\u80fd\u5224\u65ad\u7d20\u6570\n\u8fd9\u4e2a\u7b5b\u6cd5\u7a0b\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c0f\u4e8enlogn\uff0c\u662f\u4e66\u4e0a\u7684\u7ed3\u8bba\uff0c\u7406\u8bba\u4e0a\u572810^6\u8303\u56f4\u5185\u7684\u6240\u6709\u7d20\u6570\u90fd\u53ef\u4ee5\u5f88\u5feb\u7684\u7528\u8fd9\u4e2a\u4ee3\u7801\u751f\u6210\uff0c\u5bf9\u4e8e\u672c\u9898\u5df2\u7ecf\u8db3\u591f\n\n\u4f46\u8ffd\u6c42\u4e00\u4e0b\u6781\u9650\uff0c\u56e0\u4e3a\u4e00\u4e9b\u5408\u6570\u88ab\u7b5b\u4e86\u5f88\u591a\u6b21\uff0c\u6240\u4ee5\u7ee7\u7eed\u4f18\u5316\n\n\u5047\u5b9a\u62bd\u51fa\u6765\u7684\u6570p\u5c31\u662f\u4e00\u4e2a\u7d20\u6570\uff0c\u51cf\u5c11\u91cd\u590d\u7b5b\u7684\u6b21\u6570\uff0c\u5b9e\u73b0\u8fd9\u4e2a\u5047\u8bbe\u7684\u65b9\u6cd5\u5c31\u662f\u7b2c\u4e00\u5c42\u5faa\u73af\u65f6\u5224\u65adi\u662f\u4e0d\u662f\u7d20\u6570\uff0c\u56e0\u4e3a\u7b5b\u6cd5\u662f\u4ece\u524d\u5f80\u540e\u7b5b\uff0c\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\n\n\u5185\u5c42\u5faa\u73af\u4e5f\u53ef\u4ee5\u4e0d\u4ecei\\*2\u5f00\u59cb\uff0c\u4ecei\\*i\u5f00\u59cb\uff0c\u4e4b\u524d\u7684\u5408\u6570\u5df2\u7ecf\u5728\u66f4\u4e4b\u524d\u5c31\u7b5b\u6389\u4e86\uff0c\u6240\u4ee5\u6709\u4e86\u4e00\u4efd\u66f4\u52a0\u9ad8\u6548\u7684\u4ee3\u7801\n\n\n```cpp\nmemset(vis,0,sizeof(vis));//\u521d\u59cb\u5316\u6807\u8bb0\u6570\u7ec4\nvis[0]=vis[1]=1;\nint m=sqrt(n);\nfor(int i=2;i<=m;i++)//i*i\uff1cn\uff0c\u6240\u4ee5\u4e0a\u754c\u5230sqrt(n)\u5373\u53ef\n    for(int j=i*i;j<=n;j+=i)vis[j]=1//\u6807\u8bb0\u5408\u6570\u4e3a1\n```\n\u8fd9\u4e2a\u7b5b\u6cd5\u66f4\u52a0\u7684\u9ad8\u6548.\u4e0b\u9762\u5c31\u662f\u7528\u8fd9\u4e2a\u7b5b\u6cd5\u5b8c\u6210\u7684\u7a0b\u5e8f\n\n\n```cpp\n#include \"cstdlib\"\n#include \"iostream\"\n#include \"cstdio\"\n#include \"math.h\"\n#include<cmath>\n#include <algorithm>\n#include \"math.h\"\nusing namespace std;\nint p[10005];\nint main()\n{ //\u7b5b\u6cd5\u90e8\u5206\n    memset(p, 1, sizeof(p));\n    p[0] = p[1] = 0;\n    int m = 100;//\u76f4\u63a5\u624b\u52a8\u7b97\u4e86sqrt(n)\n    for (int i = 2; i <= m; i++)if (p[i])\n        for (int j = i*i; j <= 10000; j += i)p[j] = 0;//\u548c\u521a\u624d\u4e0d\u592a\u4e00\u6837\uff0c\u6807\u8bb00\u4e3a\u5408\u6570\uff0c\u672c\u8d28\u662f\u4e00\u6837\u7684\n    int n, k;\n    cin >> n >> k;\n    int ma = n - k;//i+k<=n\uff0c\u6240\u4ee5i\u7684\u4e0a\u754c\u662fn-k\n    int flag = 0;//\u5224\u65ad\u662f\u5426\u6709\u8f93\u51fa\uff0c\u6ca1\u6709\u5c31\u8f93\u51faempty\n    for (int i = 2; i <= ma; i++)\n    {\n        if (p[i] && p[i + k]){ cout << i << \" \" << i + k << endl; flag = 1; }//\u5982\u679ci\u548ci+k\u90fd\u662f\u8d28\u6570\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u8f93\u51fa\n    }\n    if (!flag)cout << \"empty\";\n    return 0;\n}\n```",
        "postTime": 1503838950,
        "uid": 41765,
        "name": "Demons",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2640 \u3010\u795e\u79d8\u78c1\u77f3\u3011"
    },
    {
        "content": "for pascal\u521d\u5b66\u8005\uff08\u5927\u4f6c\u52ff\u770b\uff09\n\n1.\u7b5b\u6cd5\u6c42\u7d20\u6570\n\n\u7531\u4e8en<=10000,\u65f6\u95f4\u4e0d\u4f1a\u7206\n\n2.\u679a\u4e3e\n\nesay!\n\n```cpp\nvar\n  f:array[2..10001]of 0..1;\n  i,j,n,k,t:longint;\nbegin\n  readln(n,k);\n  for i:=2 to n do//\u7b5b\u6cd5\u597d\n      if f[i]=0 then \n          for j:=2 to n div i do\n            f[i*j]:=1;\n  for i:=2 to n-k do\n   //\u2026\u2026\n   //\u81ea\u5df1\u60f3\n  if t=0 then writeln('empty');\nend.\n```",
        "postTime": 1503720742,
        "uid": 6247,
        "name": "lizehan888",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2640 \u3010\u795e\u79d8\u78c1\u77f3\u3011"
    },
    {
        "content": "\u770b\u53ea\u6709\u4e00\u4e2a\u9898\u89e3\uff0c\u6211\u5c31\u6765\u9020\u798f\u4e00\u4e0b\u5927\u5bb6\n\n\u601d\u8def\uff1a\u9996\u5148\u6211\u4eec\u8981\u5224\u65ad\u4e00\u4e0bk\u548cn\u7684\u5173\u7cfb\n\n\u82e5\u5b83\u4eec\u5f62\u4e0d\u6210\u4efb\u4f55\u7d20\u6570\u5bf9\uff0c\u5219\u63d0\u524d\u7ed3\u675f\n\n\u7136\u540e\u7d20\u6570\u6253\u8868\n\n\u63a5\u4e0b\u6765\u5224\u65ad\u6709\u6ca1\u6709\u7d20\u6570\u5bf9\uff0c\u7528flag\u6765\u8bb0\u5f55\u6709\u6ca1\u6709\n\n\u6ce8\u610f\uff1a2\u8981\u7279\u5224\uff0c\u8fd9\u6837\u53ef\u4ee5\u7701\u65f6\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nbool p[10001]={1,1};\nint main()\n{\n    int n,k;\n    cin>>n>>k;\n    if(n<k+2)\n    {\n        cout<<\"empty\\n\";\n        return 0;\n    }\n    bool flag=0;\n    int t=sqrt(n);\n    for(int i=2;i<=t;i++)\n    {\n        if(p[i]) continue;\n        for(int j=i+i;j<=n;j+=i) p[j]=1;\n    }\n    if(!p[2]&&!p[2+k]) \n    {\n        cout<<2<<' '<<2+k<<endl;\n        flag=1;\n    }\n    for(int i=3;i+k<=n;i+=2)\n    {\n        if(p[i]||p[i+k]) continue;\n        cout<<i<<' '<<i+k<<endl;\n        flag=1;\n    }\n    if(!flag) cout<<\"empty\\n\";\n    return 0;\n}",
        "postTime": 1502019770,
        "uid": 51704,
        "name": "\u900d\u9065__\u5929\u8d50",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2640 \u3010\u795e\u79d8\u78c1\u77f3\u3011"
    },
    {
        "content": "    \n    \n    \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\nint main()\n{\n    int n,k,e=0;                     //e\u6807\u8bb0\u6709\u6ca1\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u8d28\u6570\u5bf9\n    int i,j,h=0;\n    int o=0;\n    int a[10000];\n    cin>>n>>k;\n    for(i=2;i<10000;i++)                                   //\u5224\u65ad10000\u5185\u8d28\u6570\n    {\n        o=0;\n        for(j=2;j<=sqrt(i);j++)\n            if(i%j==0)  o++;\n        if(n<i)\n            break;\n        if(o==0)\n        {\n            h++;\n            a[h]=i;\n        }\n    }\n    for(i=1;i<=h;i++)                           //\u6ee1\u8db3\u6761\u4ef6\u5c31\u8f93\u51fa\n        for(j=1;j<i;j++)\n            if(a[i]-a[j]==k)\n            {\n                cout<<a[j]<<\" \"<<a[i]<<endl;\n                e++;\n            }\n            if(e==0)                                        //\u6ca1\u6709\u5c31\u8f93\u51faempty\n                cout<<\"empty\";\n    return 0;    \n}\n```",
        "postTime": 1484310325,
        "uid": 32908,
        "name": "Tom_com",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2640 \u3010\u795e\u79d8\u78c1\u77f3\u3011"
    }
]