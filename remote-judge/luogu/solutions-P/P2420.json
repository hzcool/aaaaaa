[
    {
        "content": "\u8fd9\u9053\u9898\u5c31\u662f\u4e2a\u7b80\u5355\u7684**DFS**\uff0c\u6211\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u5404dalao\u8981\u6253lca\uff0c\u8fd9\u9053\u9898\u5c31\u662f\u5728DFS\u4e2d\u5904\u7406u\uff0cv\u5230\u6839\u8282\u70b9\u7684\u5f02\u6216\u503c\uff0c\u7136\u540e\u8f93\u51fadis[u]^dis[v]\u5c31\u53ef\u4ee5\u4e86\uff08\u56e0\u4e3adis[tmp]^dis[tmp]^dis[u]^dis[v]=dis[u]^dis[v])\uff1b\n\n\u6211\u5c31\u4e0a\u4ee3\u7801\u4e86\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include<cstring> \nusing namespace std;\nconst int N=100005;\nint n,m,k=0,head[N],dis[N];\nbool visit[N];\nstruct node\n{int to,next,w;}edge[N*2];\nvoid add(int u,int v,int w)\n{\n    edge[++k].to=v;edge[k].next=head[u];edge[k].w=w;head[u]=k;\n}\nvoid dfs(int id,int val)\n{\n    dis[id]=val;visit[id]=true;\n    for(int i=head[id];i;i=edge[i].next)\n        if(!visit[edge[i].to])\n            dfs(edge[i].to,val^edge[i].w);//\u5904\u7406\u5f02\u6216\u503c \n}\nint main()\n{\n    scanf(\"%d\",&n);\n    int u,v,w;\n    for(int i=1;i<n;i++)\n    {\n        scanf(\"%d%d%d\",&u,&v,&w);\n        add(u,v,w);add(v,u,w);//\u5efa\u8fb9 \n    }\n    dfs(1,0);scanf(\"%d\",&m);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&u,&v);\n        printf(\"%d\\n\",dis[u]^dis[v]);\n    }\n}\n```",
        "postTime": 1504009353,
        "uid": 25709,
        "name": "SNiFe",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2420 \u3010\u8ba9\u6211\u4eec\u5f02\u6216\u5427\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5176\u5b9e\u5f88\u7b80\u5355\n\n\u6bd4\u5982\u8bf4\u8981\u67e5\u8be2u\u548cv\u7684xor\n\n\u8bbetmp\u4e3au\u548cv\u7684lca(\u6700\u8fd1\u516c\u5171\u7956\u5148)\n\ndis[x]\u8868\u793ax\u5230\u6839\u7684xor\n\nxor\u6709\u4e00\u4e2a\u6027\u8d28:x ^ y ^ y = x\n\n\u5c31\u662f\u8bf4\u5c06\u4e00\u4e2a\u6570xor\u4e24\u904d\u53e6\u4e00\u4e2a\u6570\u8fd8\u662f\u90a3\u4e2a\u6570\n\n\u56e0\u4e3adis[u]\u5176\u4e2d\u6709\u4e00\u90e8\u5206\u662fdis[tmp],\u628adis[tmp]\u5f02\u6216\u6389\u5c31\u5f97\u5230u\u5230tmp\u7684xor\n\n\u90a3\u5c31\u5c06dis[u] ^ dis[tmp]\u518d\u5f02\u6216 dis[v] ^ dis[tmp]\u5c31\u5f97\u5230\u7b54\u6848\u4e86\n\n\n\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <vector>\nusing namespace std;\nconst int maxn = 100000 + 10;\nint n,m,r,p,dis[maxn],dep[maxn],father[maxn][18];\nvector<pair<int,int> > edges[maxn];\ninline void dfs(int now,int f,int Xor) {  //dfs\u9884\u5904\u7406\n    dis[now] = Xor;\n    for (size_t i = 0;i < edges[now].size();i++)\n        if (edges[now][i].first != f) {\n            dep[edges[now][i].first] = dep[now]+1;\n            father[edges[now][i].first][0] = now;\n            dfs(edges[now][i].first,now,Xor^edges[now][i].second);\n        }\n}\ninline void init() {  //\u500d\u589e\n    for (int j = 1;j < 18;j++)\n        for (int i = 1;i <= n;i++) father[i][j] = father[father[i][j-1]][j-1];\n}\ninline int lca(int a,int b) {  //\u6c42lca\n    if (dep[a] < dep[b]) swap(a,b);\n    for (int i = 0;i < 18;i++)\n        if ((1<<i)&dep[a]-dep[b]) a = father[a][i];  //\u8ba9\u6df1\u7684\u70b9\u5f80\u4e0a\u8d70\n    if (a == b) return a;  //\u8d70\u5230\u540c\u4e00\u70b9\n    for (int i = 18;i >= 0;i--)\n        if (father[a][i] != father[b][i]) {  //\u4e24\u4e2a\u4e00\u8d77\u5f80\u4e0a\u8d70\n            a = father[a][i];\n            b = father[b][i];\n        }\n    return father[a][0];\n}\nint main() {\n    scanf(\"%d\",&n);\n    for (int i = 1,u,v,w;i < n;i++) {\n        scanf(\"%d%d%d\",&u,&v,&w);\n        edges[u].push_back(make_pair(v,w));\n        edges[v].push_back(make_pair(u,w));\n    }\n    dfs(1,1,1);\n    init();\n    scanf(\"%d\",&m);\n    for (int i = 1,u,v;i <= m;i++) {\n        scanf(\"%d%d\",&u,&v);\n        int tmp = lca(u,v);\n        printf(\"%d\\n\",(dis[u]^dis[tmp])^(dis[v]^dis[tmp]));\n    }\n    return 0;\n}\n```\nxor\u8fd8\u6ee1\u8db3\u7ed3\u5408\u5f8b\u548c\u4ea4\u6362\u5f8b\n\u6211\u4eec\u5c06(dis[u]^dis[tmp])^(dis[v]^dis[tmp])\u6253\u5f00\n\n\u5f97\u5230dis[u]^dis[v]^dis[tmp]^dis[tmp]\n\n\u90a3\u4e48\u5f02\u6216\u4e86\u4e24\u6b21dis[tmp]\u76f8\u5f53\u4e8e\u6ca1\u6709\u5f02\u6216\n\n\u76f4\u63a5\u7b97dis[u]^dis[v]\u5c31\u53ef\u4ee5\u4e86\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u53bb\u6389\u6c42lca\u7684\u90e8\u5206\n\n\u90a3\u4e48\u5c31\u53ea\u9700\u8981\u9884\u5904\u7406\u51fadis\u5c31\u53ef\u4ee5\u4e86\uff0c\u4e00\u4e2adfs\u5c31\u884c\u4e86\n\n\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <vector>\nusing namespace std;\nconst int maxn = 100000 + 10;\nvector<pair<int,int> > edges[maxn];\nint n,m,dis[maxn];\ninline void dfs(int now,int f,int Xor) {\n    dis[now] = Xor;\n    for (size_t i = 0;i < edges[now].size();i++)\n        if (edges[now][i].first != f) dfs(edges[now][i].first,now,Xor^edges[now][i].second);\n}\nint main() {\n    scanf(\"%d\",&n);\n    for (int i = 1,u,v,w;i < n;i++) {\n        scanf(\"%d%d%d\",&u,&v,&w);\n        edges[u].push_back(make_pair(v,w));\n        edges[v].push_back(make_pair(u,w));\n    }\n    dfs(1,1,1);\n    scanf(\"%d\",&m);\n    for (int i = 1,u,v;i <= m;i++) {\n        scanf(\"%d%d\",&u,&v);\n        printf(\"%d\\n\",dis[u]^dis[v]);\n    }\n    return 0;\n}\n```",
        "postTime": 1503328516,
        "uid": 17521,
        "name": "lrj124",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2420 \u3010\u8ba9\u6211\u4eec\u5f02\u6216\u5427\u3011"
    },
    {
        "content": "**\u5207\u5b8c\u8fd9\u9053\u9898\u4e4b\u540e\u770b\u4e86\u770b\u9898\u89e3\uff0c\u542f\u53d1\u826f\u591a\uff0c\u770b\u4e86\u770b\u4f3c\u4e4e\u6ca1\u6709\u4eba\u4f1a\u5199\u6211\u8fd9\u79cd\u53c8\u8822\u53c8\u7b28\u5e38\u6570\u53c8\u5927\u7684\u4ee3\u7801\uff0c\u90a3\u5c31\u4ecb\u7ecd\u4e00\u4e0b\u5427\u3002\u672c\u6765\u6765\u5207\u8fd9\u9053\u9898\u4e3a\u4e86\u5b66\u4e60\u4e00\u4e0b\u6811\u94fe\u5256\u5206\uff0c\u7ed3\u679c\u51e0\u4e4e\u8981\u5199\u5b8c\u4e86\u6211\u624d\u53d1\u73b0\u67e5\u8be2\u7684\u662f\u8fb9\u6743\u800c\u975e\u70b9\u6743\uff0c\u5f53\u65f6\u4e00\u4e0b\u5c31\u8499\u4e86\uff0c\u56e0\u4e3a\u5e76\u4e0d\u77e5\u9053\u6811\u5256\u600e\u4e48\u5199\u8fb9\u6743\u7684\uff0c\u60f3\u4e86\u4e00\u4e0b\u53d1\u73b0\u4f3c\u4e4e\u5e76\u4e0d\u662f\u5f88\u96be\uff0c\u56e0\u4e3a\u70b9\u88ab\u641c\u5230\u7684\u987a\u5e8f\u4e5f\u5c31\u662f\u8fb9\u88ab\u641c\u5230\u7684\u987a\u5e8f\uff0c\u6240\u4ee5\u4e00\u6761\u8def\u5f84\u4e0a\u7684\u8fb9\u4e5f\u662f\u76f8\u90bb\u7684\u3002\u56e0\u6b64\u53ea\u9700\u8981\u5411\u4e0b\u4f20\u9012\u7684\u65f6\u5019\u591a\u4f20\u4e00\u4e2a\u8fb9\u6743\u5c31\u53ef\u4ee5\u4e86\u3002\u5e94\u8be5\u8fd8\u662f\u633a\u597d\u5199\u7684**\n\n**n\u4e2a\u8282\u70b9\u7684\u6811\u6709n-1\u6761\u8fb9\uff0c\u6240\u4ee5\u6709\u4e00\u4e9b\u539f\u6765\u5199\u70b9\u533a\u95f4\u67e5\u627e\u7684\u4ee3\u7801\u90e8\u5206\u8fb9\u754c\u8981\u6539\u4e00\u4e0b\uff0c\u4ee3\u7801\u91cc\u6211\u57fa\u672c\u5df2\u7ecf\u6ce8\u91ca\u51fa\u6765\u4e86\u3002\u5f53\u7136\uff0c\u4e3a\u4ec0\u4e48\u80fd\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u8fd9\u548cxor\u7684\u6027\u8d28\u6709\u5173\uff0c\u4e0a\u9762\u5927\u4f6c\u8bb2\u4e86\u4e0d\u5c11\u4e86\uff0c\u5728\u6b64\u4e0d\u518d\u8d58\u8ff0,\u4ee3\u7801\u5982\u4e0b**\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define lson root<<1\n#define rson root<<1|1\nusing namespace std;\n\nstruct node\n{\n    int l,r,lazy,sum;\n}tr[400040];\nint w[100010],son[100010],fa[100010],id[100010],deep[100010],size[100010],top[100010],vv[100010],cnt=0;\nvector<int> g[100010],v[100010];\n\nvoid push_up(int root)\n{\n    tr[root].sum=tr[lson].sum^tr[rson].sum;\n}\n\nvoid build(int root,int l,int r)\n{\n    if(l==r)\n    {\n        tr[root].l=l;\n        tr[root].r=r;\n        tr[root].sum=w[l];\n        return ;\n    }\n    tr[root].l=l;\n    tr[root].r=r;\n    int mid=(l+r)>>1;\n    build(lson,l,mid);\n    build(rson,mid+1,r);\n    push_up(root);\n}\n\nint query(int root,int l,int r)\n{\n\tif(l>r)\n\t{\n\t\treturn 0;\n\t}\n    if(l==tr[root].l&&r==tr[root].r)\n    {\n        return tr[root].sum;\n    }\n    int mid=(tr[root].l+tr[root].r)>>1;\n    if(l>mid)\n    {\n        return query(rson,l,r);\n    }\n    else\n    {\n        if(r<=mid)\n        {\n            return query(lson,l,r);\n        }\n    }\n    return query(lson,l,mid)^query(rson,mid+1,r);\n}\n\nvoid dfs1(int now,int f,int dep)\n{\n    deep[now]=dep;\n    fa[now]=f;\n    size[now]=1;\n    int maxson=-1;\n    for(int i=0;i<g[now].size();i++)\n    {\n        if(g[now][i]==f)\n        {\n            continue;\n        }\n        dfs1(g[now][i],now,dep+1);\n        size[now]+=size[g[now][i]];\n        if(size[g[now][i]]>maxson)\n        {\n            maxson=size[g[now][i]];\n            son[now]=g[now][i];\n            vv[now]=v[now][i];               //\u5b58\u50a8\u5411\u91cd\u513f\u5b50\u7684\u8fb9\u7684\u6743\u503c\n        }\n    }\n}\n\nvoid dfs2(int now,int topf,int val)\n{\n    id[now]=++cnt;\n    w[cnt]=val;                             //\u8d4b\u5f97\u662f\u5230\u7236\u8282\u70b9\u7684\u8fb9\u6743\n    top[now]=topf;\n    if(!son[now])\n    {\n        return ;\n    }\n    dfs2(son[now],topf,vv[now]);\n    for(int i=0;i<g[now].size();i++)\n    {\n        if(g[now][i]==fa[now]||g[now][i]==son[now])\n        {\n            continue;\n        }\n        dfs2(g[now][i],g[now][i],v[now][i]);\n    }\n}\n\nvoid path_sum(int x,int y)\n{\n    int ans=0;\n    while(top[x]!=top[y])\n    {\n        if(deep[top[x]]<deep[top[y]])\n        {\n            swap(x,y);\n        }\n        ans^=query(1,id[top[x]]+1,id[x]);          //\u67e5\u8be2\u7684\u65f6\u5019\u8fb9\u53ea\u6709\u70b9\u6570\u51cf\u4e00\u6761\uff0c\u6240\u4ee5\u8981\u52a0\u4e00\n\t\tans^=w[id[top[x]]];                        //\u53ea\u6709\u4ece\u4e00\u6761\u94fe\u8df3\u5230\u53e6\u4e00\u6761\u4e0a\uff0c\u8fde\u63a5\u7684\u8fb9\u624d\u6709\u8d21\u732e\u3002 \n        x=fa[top[x]];\n    }\n    if(deep[x]>deep[y])\n    {\n        swap(x,y);\n    }\n    ans^=query(1,id[x]+1,id[y]);                   //\u67e5\u8be2\u540c\u4e0a \n    printf(\"%d\\n\",ans);\n}\n\nint main()\n{\n    int n,m;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n-1;i++)\n    {\n    \tint from,to,ww;\n    \tscanf(\"%d%d%d\",&from,&to,&ww);\n    \tg[from].push_back(to);\n    \tv[from].push_back(ww);\n    \tg[to].push_back(from);\n    \tv[to].push_back(ww);\n\t}\n\tdfs1(1,0,1);\n\tdfs2(1,1,0);                                   \n\tbuild(1,1,n);\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint from,to;\n\t\tscanf(\"%d%d\",&from,&to);\n\t\tpath_sum(from,to);\n\t}\n}\n```",
        "postTime": 1521977307,
        "uid": 48740,
        "name": "Styx",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2420 \u3010\u8ba9\u6211\u4eec\u5f02\u6216\u5427\u3011"
    },
    {
        "content": "## \u5f02\u6216\n\u8ba1\u7b97\u673a\u4e2d\u7684\u7b26\u53f7\uff1a^\n## \u505a\u9898\u65f6\u5f02\u6216\u7684\u91cd\u8981\u6027\u8d28\uff1a\n### a^a=0\n## \u8fd9\u8ba9\u6211\u4eec\u60f3\u5230\u4e86\u4ec0\u4e48\uff1a\n### \u5076\u6d88\u5947\u4e0d\u6d88\n### \u5373\uff1a\n### \u8d70\u8fc7\u5076\u6570\u6b21\u7684\u8def\u5f84\u76f8\u5f53\u4e8e\u6ca1\u6709\u8d70\u3002\n## \u5e94\u7528\u5230\u8fd9\u9898\u91cc\u9762\u6765\uff1a\n### \u8fd9\u4e24\u4e2a\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u503c\u5f02\u6216\uff1a\n### \u4ece\u8282\u70b9a\u5230\u8282\u70b9b\u7684\u8def\u5f84\u4e0a\u7684\u503c\u5f02\u6216==a->lca(a,b)->b\u8fd9\u4e00\u8def\u5f84\u4e0a\u7684\u5f02\u6216\u503c\u3002\n## \u753b\u4e2a\u56fe\u8868\u793a\u4e00\u4e0b\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/59879.png)\n### \u8fd9\u6761\u8def\u5f84\u4e0a\u7684\u5f02\u6216\u5176\u5b9e\u4e0e\u4e0b\u9762\u8fd9\u6761\u8def\u5f84\u7684\u5f02\u6216\u76f8\u7b49\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/59880.png)\n### \u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u4ee5\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u4e3a\u6839\uff0c\u6c42\u51fa\u4ed6\u5230\u5176\u4ed6\u8282\u70b9\u7684\u5f02\u6216\uff0c\u8981\u6c42\u65f6\u76f4\u63a5\u8bb2\u4e24\u70b9\u7684\u5f02\u6216\u503c\u518d\u5f02\u6216\u4e00\u904d\uff0c\u5c31\u53ef\u5f97\u51fa\u7ed3\u679c\u3002\n## \u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct data\n{\n\tint x,y;\n};\nint b[100001],n,m,x,y,z;\nbool vis[100001];\nvector<data> a[100001];\nvoid dfs(int x,int sum)\n{\n\tb[x]=sum;\n\tvis[x]=1;\n\tfor(int i=0;i<a[x].size();i++)\n\t{\n\t\tint v=a[x][i].x,u=a[x][i].y;\n\t\tif(!vis[v])\n\t\t{\n\t\t\tdfs(v,sum^u);\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\ta[x].push_back((data){\n\t\t\ty,z\n\t\t});\n\t\ta[y].push_back((data)\n\t\t{\n\t\t\tx,z\n\t\t});\n\t}\n\tdfs(1,0);\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tprintf(\"%d\\n\",b[x]^b[y]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1559309943,
        "uid": 103334,
        "name": "Honor\u8a89",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2420 \u3010\u8ba9\u6211\u4eec\u5f02\u6216\u5427\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5c31\u6ca1\u4eba\u7528\u5e76\u67e5\u96c6\u5417\uff0c\u6211\u5f31\u5f31\u5730\u95ee\u4e00\u53e5\n\n\u7136\u800c\u662f\u5148\u5e76\uff0c\u540e\u67e5\u7684\n\n\u5efa\u7acb\u4e00\u4e2a\u5e26\u6743\u5e76\u67e5\u96c6\n\n`g[x]`\u8868\u793a\u8282\u70b9x\u5230\u4ed6\u76f4\u63a5\u7236\u4eb2\u7684\u5f02\u6216\u503c\n\n\u6839\u636e\u5f02\u6216\u7684\u53ef\u4e71\u641e\u7684\u6027\u8d28\n\n\u6ce8\u610f\u5e76\u67e5\u96c6\u4e00\u5b9a\u8981\u5148getf\u4e00\u4e0b\n\n\u7136\u540e\u5408\u5e76\u540c\u6839\u636e\u5f02\u6216\u53ef\u4e71\u641e\u7684\u6027\u8d28(rt\u6240\u793a)\n\n![](https://cdn.luogu.com.cn/upload/pic/28517.png )\n\nmspaint\u771f\u5fc3\u6bd2\u7624\n\n\u67e5\u8be2\u7684\u65f6\u5019\u5148getf\u4e00\u4e0b\n\n\u7136\u540e\u76f4\u63a5`g[u]^g[v]`\u5373\u53ef\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint f[100010],g[100010],n,m;\n\nint getf(int x)\n{\n\tif(f[x]==x)\n\t\treturn x;\n\tint fa=getf(f[x]);\n\tg[x]^=g[f[x]];\n\treturn f[x]=fa;\n}\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tf[i]=i;\n\t\tg[i]=0;\n\t}\n\tfor(int u,v,w,i=1;i<n;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\tgetf(u);\n\t\tgetf(v);\n\t\tint fa=f[u];\n\t\tf[fa]=f[v];\n\t\tg[fa]=g[u]^g[v]^w;\n\t}\n\tscanf(\"%d\",&m);\n\tfor(int x,y,i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tgetf(x);\n\t\tgetf(y);\n\t\tprintf(\"%d\\n\",g[x]^g[y]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1534222993,
        "uid": 13091,
        "name": "ghj1222",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2420 \u3010\u8ba9\u6211\u4eec\u5f02\u6216\u5427\u3011"
    },
    {
        "content": "\u5982\u4e0b\u56fe\uff0c\u6211\u4eec\u5047\u5b9a$1$\u4e3a\u6839\uff0c\u628a\u65e0\u6839\u6811\u8f6c\u6362\u4e3a\u6709\u6839\u6811\u3002\u7c7b\u4f3c\u4e8e\u524d\u7f00\u548c\uff0c\u6211\u4eec\u53ef\u4ee5\u5904\u7406\u4e24\u6761\u7ea2\u7ebf\u5bf9\u5e94\u7684\u8def\u5f84\u7684\u5f02\u6216\u548c$sum[x]=sum[fa] \\bigoplus w[i]$\uff0c\u5728LCA\u4e0a\u9762\u90a3\u90e8\u5206\u6b63\u597d\u88ab\u62b5\u6d88\u4e86\u3002\n![](https://cdn.luogu.com.cn/upload/pic/19115.png)\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\n#define gc getchar\n#define ll long long\n#define bel(x) ((x - 1) / block + 1)\ninline ll read(){ll x = 0; char ch = gc(); bool positive = 1;for (; !isdigit(ch); \nch = gc()) if (ch == '-')  positive = 0;for (; isdigit(ch); ch = gc())  x = x * 10 \n+ ch - '0';return positive ? x : -x;}inline void write(ll a){if(a>=10)write(a/10);\nputchar('0'+a%10);}inline void writeln(ll a){if(a<0){a=-a; putchar('-');}write(a);\nputs(\"\");}\nusing namespace std;\nconst int N = 110000, M = 210000;\nint ver[M], nxt[M], head[N], w[M], en, sum[N];\nint n, m;\ninline void add(int x, int y, int z) {\n\tver[++en] = y, nxt[en] = head[x], head[x] = en, w[en] = z;\n}\nvoid dfs(int x, int fa) {\n\tfor(int i = head[x]; i;i = nxt[i]) {\n\t\tint y = ver[i];\n\t\tif(y == fa) continue;\n\t\tsum[y] = sum[x] ^ w[i];\n\t\tdfs(y, x);\n\t}\n}\nint main() {\n\tint x, y, z;\n\tn = read();\n\tfor(int i = 1; i < n; ++i) {\n\t\tx = read(), y = read(), z = read();\n\t\tadd(x, y, z);\n\t\tadd(y, x, z);\n\t}\n\tdfs(1, 0);\n\tm = read();\n\tfor(int i = 1; i <= m; ++i) {\n\t\tx = read(), y = read();\n\t\twriteln(sum[x] ^ sum[y]);\n\t}\n    return 0;\n} \n```",
        "postTime": 1526124953,
        "uid": 22150,
        "name": "\u548c\u5176\u6b63",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2420 \u3010\u8ba9\u6211\u4eec\u5f02\u6216\u5427\u3011"
    },
    {
        "content": "\u4e00\u9053\u7eff\u9898\uff0c\u4e8c\u8bdd\u4e0d\u8bf4\u76f4\u63a5\u6811\u5256\u3002\u770b\u6e05\u695a\u9898\u91cc\u9762\u7684\u6811\u5256\u662f\u8fb9\u6743\uff0c\u8fd9\u662f\u4e2a\u5751\u70b9\uff0c\u76f4\u63a5\u5c31\u662f\u5f02\u6216\u5373\u53ef\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5f02\u6216\u548c\u3002\n\n\u67e5\u8be2\u7684\u65f6\u5019\u6ce8\u610f\u6700\u540e\u8981\u907f\u5f00$LCA$\uff0c\u56e0\u4e3a$LCA$\u6839\u672c\u5c31\u6ca1\u6709\u518d\u8def\u5f84\u4e0a\uff0c\u6700\u540e\u8df3\u94fe\u7684\u65f6\u5019\u4e0d\u514d\u4f1a\u6709$LCA$\uff0c\u6240\u4ee5$DFS$\u5e8f\u8981+1\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1e6+7; \nstruct node{\n\tint nxt,to,value;\n}edge[maxn*3];\nstruct node1{\n\tint l,r,sum;\n}tree[maxn*4];\nint n,m;\nint x,y,v; \nint k,p;\nint head[maxn],cnt;\nvoid add(int x,int y,int v){\n\tedge[++cnt].nxt=head[x];\n\tedge[cnt].to=y;\n\tedge[cnt].value=v;\n\thead[x]=cnt;\n}\nint dep[maxn],son[maxn],size[maxn],fa[maxn],w[maxn];\nvoid dfs1(int x,int f){\n\tdep[x]=dep[f]+1;\n\tsize[x]=1;\n\tfa[x]=f;\n\tint maxson=-1;\n\tfor(int i=head[x];i;i=edge[i].nxt){\n\t\tint v=edge[i].to;\n\t\tif(v==fa[x]) continue;\n\t\tw[v]=edge[i].value;\n\t\tdfs1(v,x);\n\t\tsize[x]+=size[v];\n\t\tif(size[v]>maxson){\n\t\t\tmaxson=size[v];\n\t\t\tson[x]=v;\n\t\t}\n\t} \n}\nint top[maxn],id[maxn],rev[maxn],Time;\nvoid dfs2(int x,int topf){\n\tid[x]=++Time;\n\ttop[x]=topf;\n\trev[id[x]]=w[x];\n\tif(!son[x]) return;\n\tdfs2(son[x],topf);\n\tfor(int i=head[x];i;i=edge[i].nxt){\n\t\tint v=edge[i].to;\n\t\tif(v==son[x]||v==fa[x]) continue;\n\t\tdfs2(v,v);\n\t}\n}\nvoid build(int now,int l,int r){\n\ttree[now].l=l,tree[now].r=r;\n\tif(l==r){\n\t\ttree[now].sum=rev[l];\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(now<<1,l,mid);\n\tbuild(now<<1|1,mid+1,r);\n\ttree[now].sum=tree[now<<1].sum^tree[now<<1|1].sum; \n}\nint query(int now,int l,int r){\n\tif(tree[now].l>=l&&tree[now].r<=r) return tree[now].sum;\n\tint mid=(tree[now].l+tree[now].r)>>1;\n\tint val=0;\n\tif(l<=mid) val^=query(now<<1,l,r);\n\tif(r>mid) val^=query(now<<1|1,l,r);\n\treturn val;\n}\nint link(int x,int y){\n\tif(x==y) return 0;\n\tint ans=0;\n\twhile(top[x]!=top[y]){\n\t\tif(dep[top[x]]<dep[top[y]]) swap(x,y);\n\t\tans^=query(1,id[top[x]],id[x]);\n\t\tx=fa[top[x]];\n\t}\n\tif(dep[x]<dep[y]) swap(x,y);\n\tans^=query(1,id[y]+1,id[x]);//\u907f\u5f00LCA\n\treturn ans;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<n;i++){\n\t\tscanf(\"%d%d%d\",&x,&y,&v);\n\t\tadd(x,y,v);add(y,x,v);\n\t} \n\tscanf(\"%d\",&m);\n\tdfs1(1,0);dfs2(1,1);build(1,1,n);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&k,&p);\n\t\tprintf(\"%d\\n\",link(k,p));\n\t}\n\treturn 0;\n} \n```\n",
        "postTime": 1565438680,
        "uid": 108746,
        "name": "JBLee",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2420 \u3010\u8ba9\u6211\u4eec\u5f02\u6216\u5427\u3011"
    },
    {
        "content": "\u6709\u4eba\u7528dfs\u6c42LCA\u5417\uff1f\n\n\n\u7ef4\u62a4\u8282\u70b9$u$\u7684\u7236\u4eb2\u7684\u540c\u65f6\uff0c\u4e5f\u7ef4\u62a4\u6291\u6216\u503c\n\n\n\u5949\u4e0a\u4ee3\u7801\uff1a\n```\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n\n#define N 1010100\nusing namespace std;\n\nint n,m,head[N],tot;\nstruct nodE {\n\tint to,next,w;\n} e[N];\n\nvoid add(int u,int v,int w) {\n\te[++tot].to=v,e[tot].next=head[u],head[u]=tot,e[tot].w=w;\n}\n\nint p[N][26],f[N][26],dep[N];\nvoid dfs(int u,int fa,int w) {\n\tdep[u]=dep[fa]+1,f[u][0]=fa,p[u][0]=w;\n\tfor(int i=1; (1<<i)<=dep[u]; i++)\n\t\tf[u][i]=f[f[u][i-1]][i-1],p[u][i]=p[u][i-1]^p[f[u][i-1]][i-1];//\u7ef4\u62a4\u7236\u4eb2\uff0c\u4e5f\u7ef4\u62a4\u6291\u6216\u503c\n\tfor(int i=head[u]; i; i=e[i].next) {\n\t\tint v=e[i].to;\n\t\tif(v==fa) continue;\n\t\tdfs(v,u,e[i].w);\n\t}\n}\n\nint lca(int u,int v) {\n\tint an=0;\n\tif(dep[u]>=dep[v]) swap(u,v);\n\tfor(int i=20; i>=0; i--) {\n\t\tif(dep[u]<=dep[v]-(1<<i)) {\n\t\t\tif(!an) an=p[v][i];\n\t\t\telse an^=p[v][i];\n\t\t\tv=f[v][i];\n\t\t}\n\t}\n\tif(u==v) return an;\n\tfor(int i=20; i>=0; i--) {\n\t\tif(f[u][i]!=f[v][i]) {\n\t\t\tif(!an) an=p[v][i]^p[u][i];\n\t\t\telse an^=p[v][i],an^=p[u][i];\n\t\t\tu=f[u][i],v=f[v][i];\n\t\t}\n\t}\n\tif(v==1) return an^p[u][0];\n\telse if(u==1) return an^p[v][0];\n\treturn an^p[u][0]^p[v][0];//\u6c42LCA\u6a21\u677f\n}\n\nint main() {\n\tscanf(\"%d\",&n);\n\tfor(int u,v,w,i=1; i<n; i++) {\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\tadd(u,v,w),add(v,u,w);\n\t}\n\tdfs(1,0,0);\n\tscanf(\"%d\",&m);\n\tfor(int u,v,i=1; i<=m; i++) {\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tprintf(\"%d\\n\",lca(u,v));\n\t}\n\n\treturn 0;\n}\n\n\u522b\u770b\u8fd9\u7bc7\u9898\u89e3\u5566\u5427\uff0c\u522b\u4eba\u7684\u4ee3\u7801\u90fd\u6bd4\u6211\u77ed\u3002\u3002\u3002\n```",
        "postTime": 1537842849,
        "uid": 60939,
        "name": "\u6e05\u98ce\u6211\u5df2\u901d",
        "ccfLevel": 0,
        "title": "\u89e3\u9898\u62a5\u544a P2420 \u3010\u8ba9\u6211\u4eec\u5f02\u6216\u5427\u3011"
    },
    {
        "content": "\u7c7b\u4f3cSPOJ\u7684QTREE \u6811\u94fe\u5256\u5206\u5373\u53ef \u500d\u589e\u6cd5\u4e5f\u662f\u53ef\u505a\u7684\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<set>\n#include<algorithm>\n#include<map>\n#include<vector>\n#include<queue>\n#include<iostream>\n#include<string>\n#include<cmath>\n#define N 400010\n#define lc(x) (x<<1)\n#define rc(x) ((x<<1)+1)\n#define FOR(i,a,b) for(i=(a);i<=(b);i++)\n#define ROF(i,a,b) for(i=(a);i>=(b);i--)\ntypedef long long LL;\nusing namespace std;\nstruct node{int l,r,val;};\nint last[N],pre[N],e[N],W[N],idx[N];\nint w[N],pos[N],siz[N],son[N],fa[N],dep[N],top[N],b[N];\nint a[N];char OP[101];\nint t1,t2,t3,n,q,len=0,size=0;\nvoid add(int x,int y,int z,int ID)\n{pre[++len]=last[x];last[x]=len;e[len]=y;W[len]=z;idx[len]=ID;}\nint swap(int &x,int &y){int t=x;x=y;y=t;}\nstruct segtree\n{\n  node tree[4*N];\n  void init(){memset(tree,0,sizeof(tree));}\n  void update(int x){tree[x].val=tree[lc(x)].val^tree[rc(x)].val;} \n  void build(int x,int L,int R)\n  {\n    tree[x].l=L;tree[x].r=R;int mid=(L+R)>>1;\n    if (L==R) {tree[x].val=a[L];return;}\n    build(lc(x),L,mid);build(rc(x),mid+1,R);\n    update(x);\n  }\n  int query(int x,int L,int R)\n  {\n    if (tree[x].l==L&&tree[x].r==R) return tree[x].val;\n    int mid=(tree[x].l+tree[x].r)>>1;\n    if (R<=mid) return query(lc(x),L,R);\n    if (L>mid) return query(rc(x),L,R);\n    return query(lc(x),L,mid)^query(rc(x),mid+1,R);\n  }\n  void modify(int x,int p,int ti)\n  {\n    if (tree[x].l==tree[x].r) {tree[x].val=ti;return;}\n    int mid=(tree[x].l+tree[x].r)>>1;\n    if (p<=mid) modify(lc(x),p,ti);\n    else modify(rc(x),p,ti);\n    update(x);\n  }\n}Tree;\nvoid DFS1(int x,int par,int Dep)\n{\n  dep[x]=Dep;siz[x]=1;son[x]=0;\n  for(int p=last[x];p;p=pre[p])\n  {\n    int v=e[p],ID=idx[p];\n    if (par==v) continue;\n    fa[v]=x;b[v]=W[p];pos[ID]=v;\n    DFS1(v,x,Dep+1);\n    if (son[x]==0||siz[v]>siz[son[x]]) son[x]=v;\n    siz[x]+=siz[v];\n  }\n}\nvoid DFS2(int x,int Top)\n{\n  w[x]=++size;top[x]=Top;    \n  a[size]=b[x];\n  if (son[x]!=0) DFS2(son[x],Top);\n  for(int p=last[x];p;p=pre[p])\n  {\n    int v=e[p];\n    if (v==fa[x]||v==son[x]) continue;\n    DFS2(v,v);\n  }\n}\nint getans(int va,int vb)\n{\n  int f1=top[va],f2=top[vb],tmp=0;\n  while (f1!=f2)\n  {\n    if (dep[f1]<dep[f2]){swap(f1,f2);swap(va,vb);}\n    tmp=tmp^Tree.query(1,w[f1],w[va]);\n    va=fa[f1];f1=top[va];\n  }\n  if (va==vb) return tmp;\n  if (dep[va]>dep[vb]) swap(va,vb);\n  return tmp^Tree.query(1,w[son[va]],w[vb]);\n}\nint Main()\n{\n  memset(pre,0,sizeof(pre));\n  memset(last,0,sizeof(last)); \n  memset(idx,0,sizeof(idx));\n  len=size=0;Tree.init();\n  scanf(\"%d\",&n);int i,qq;\n  FOR(i,1,n-1) \n  {\n    scanf(\"%d%d%d\",&t1,&t2,&t3);\n    add(t1,t2,t3,i);add(t2,t1,t3,i);\n  }\n  DFS1(1,-1,1);\n  DFS2(1,1);\n  Tree.build(1,1,n);\n  scanf(\"%d\",&qq);\n  FOR(i,1,qq)\n  {\n    scanf(\"%d%d\",&t1,&t2);\n    int ans=getans(t1,t2);\n    printf(\"%d\\n\",ans);\n  }\n}\nint main()\n{\n  Main();\n}\n```",
        "postTime": 1442671235,
        "uid": 1285,
        "name": "dhy0077",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2420 \u3010\u8ba9\u6211\u4eec\u5f02\u6216\u5427\u3011"
    },
    {
        "content": "### \u5173\u4e8e\u6211\n\n\u5927\u5bb6\u597d\uff0c\u6211\u662f\u4e00\u540d\u4e0d\u77e5\u540d\u7684\u849f\u84bb\uff0c\u4eca\u5929\u6765\u7ed9\u5927\u5bb6\u5199\u4e00\u53d1\u9898\u89e3\u3002\n\n\u535a\u5ba2\u4f20\u9001\u95e8[\u9178\u9178\u7684\u7b14\u8bb0](https://www.luogu.org/blog/99NL/)\n\n# \u5173\u4e8e\u672c\u9053\u9898\n\n\u4e00\u5f00\u59cb\u770b\u89c1\u6807\u7b7e\u6709LCA\uff0c\u7136\u540e\u5c31\u679c\u65ad\u6253\u4e86\u4e00\u4e2a\u500d\u589e\u3002~~\u9b3c\u77e5\u9053\u7528\u7684\u53ea\u662f\u5c0f\u5c0f\u7684dfs\u548c\u4e00\u70b9\u70b9\u7684\u6570\u5b66\u77e5\u8bc6~~\u3002\u7136\u540e\u6211\u4eec\u4e0b\u9762\u5f00\u59cb\u8bb2\u8fd9\u9053\u9898\u76ee\u7684\u601d\u8def\u3002\n\n\u8fd8\u6709\u4e2a\u4eba\u611f\u89c9\u8fd9\u9053\u9898\u6bd4\u6a21\u677f\u66f4\u597d\u5199\n\n## \u4ec0\u4e48\u662f\u5f02\u6216\n\n\u5f02\u6216\uff0c\u82f1\u6587\u4e3aexclusive OR\uff0c\u7f29\u5199\u6210xor\n\n\u5f02\u6216(xor)\u662f\u4e00\u4e2a\u6570\u5b66\u8fd0\u7b97\u7b26\u3002\u5b83\u5e94\u7528\u4e8e\u903b\u8f91\u8fd0\u7b97\u3002\u5f02\u6216\u7684\u6570\u5b66\u7b26\u53f7\u4e3a\"\u2295\"\uff0c\u8ba1\u7b97\u673a\u7b26\u53f7\u4e3a\"xor\"\u3002\u5176\u8fd0\u7b97\u6cd5\u5219\u4e3a:\n\na\u2295b = (\u00aca \u2227 b) \u2228 (a \u2227\u00acb)\n\n\u5982\u679ca\u3001b\u4e24\u4e2a\u503c\u4e0d\u76f8\u540c\uff0c\u5219\u5f02\u6216\u7ed3\u679c\u4e3a1\u3002\u5982\u679ca\u3001b\u4e24\u4e2a\u503c\u76f8\u540c\uff0c\u5f02\u6216\u7ed3\u679c\u4e3a0\u3002\n\n\u5f02\u6216\u4e5f\u53eb\u534a\u52a0\u8fd0\u7b97\uff0c\u5176\u8fd0\u7b97\u6cd5\u5219\u76f8\u5f53\u4e8e\u4e0d\u5e26\u8fdb\u4f4d\u7684\u4e8c\u8fdb\u5236\u52a0\u6cd5:\u4e8c\u8fdb\u5236\u4e0b\u75281\u8868\u793a\u771f\uff0c0\u8868\u793a\u5047\uff0c\u5219\u5f02\u6216\u7684\u8fd0\u7b97\u6cd5\u5219\u4e3a:0\u22950=0\uff0c1\u22950=1\uff0c0\u22951=1\uff0c1\u22951=0(\u540c\u4e3a0\uff0c\u5f02\u4e3a1)\uff0c\u8fd9\u4e9b\u6cd5\u5219\u4e0e\u52a0\u6cd5\u662f\u76f8\u540c\u7684\uff0c\u53ea\u662f\u4e0d\u5e26\u8fdb\u4f4d\uff0c\u6240\u4ee5\u5f02\u6216\u5e38\u88ab\u8ba4\u4f5c\u4e0d\u8fdb\u4f4d\u52a0\u6cd5\u3002\n\n```\n       ------------------\u6458\u81ea\u767e\u5ea6\u767e\u79d1\n```\n### \u5f02\u6216\u7684\u4e00\u70b9\u70b9\u6027\u8d28\n\n\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u6570a\uff0c\u5bf9b\u5f02\u6216\u4e24\u6b21\u6240\u5f97\u7684\u7ed3\u679c\u662f\u4e00\u6837\u7684\u3002\u5373a=a^b^b\n\n\u4e0b\u9762\u6b63\u5f0f\u5f00\u59cb\u8bb2\u8fd9\u9053\u9898\u76ee\n\n## \u601d\u8003\n\n1.\u8fd9\u662f\u4e00\u4e2a\u6811\u7684\u7ed3\u6784\uff0c\u6211\u4eec\u9700\u8981\u7528dfs\u6c42\u51fa\u5728\u67d0\u4e2a\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u5f02\u6216\u548c\u3002\n\n2.\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u6211\u4eec\u5c06\u4e24\u4e2a\u70b9\u7684\u5f02\u6216\u503c\u518d\u5f02\u6216\u8d77\u6765\u5c31\u884c\u4e86\u3002\n\n### \u6ce8\u610f\uff01\uff01\uff01\uff01\n\n\u5f02\u6216\u548c\u4e0d\u662f\u6307\u4e24\u4e2a\u8282\u70b9\u7684\u5f02\u6216\u4e4b\u548c\uff0c\u800c\u662f\u6307\u8fd9\u4e24\u4e2a\u8282\u70b9\u8def\u5f84\u4e0a\u7684\u503c\u5168\u90e8\u5f02\u6216\u8d77\u6765\u3002\u3002\u3002\u3002\n\n## \u4ee3\u7801+\u6ce8\u91ca\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint n;\nint d[100005];\nint worth[100005];\n\nint step1;\n\nstruct node{\nint to;\nint next1;\nint last1;\nint w;\n}map1[200005];//\u4e34\u63a5\u8868\u5b58\u56fe \n\nvoid add(int x,int y,int z)\n{\n   map1[++step1].to=y;\n   map1[step1].next1=map1[x].last1;\n   map1[x].last1=step1;\n   map1[step1].w=z;\n}\nvoid dfs(int u,int f,int cnt)//\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u500d\u589e \n{\n   d[u]=d[f]+1;\n   worth[u]=cnt;//\u7edf\u8ba1\u5f53\u524d\u5f02\u6216\u503c \n   for (int j=map1[u].last1;j;j=map1[j].next1)\n   {\n      int v=map1[j].to;\n      if (v!=f)\n         dfs(v,u,cnt^map1[j].w);//\u5411\u5176\u5b50\u8282\u70b9\u7ee7\u7eed\u5f02\u6216\u4e0b\u53bb \n   }\n}\nint ans(int x,int y)\n{\n   return worth[x]^worth[y];\n}\nint main() {\ncin>>n;\nint a1,a2,a3;\nfor (int a=1;a<n;a++)\n{\n   scanf(\"%d%d%d\",&a1,&a2,&a3);\n   add(a1,a2,a3);\n   add(a2,a1,a3);//\u6dfb\u52a0\u4e24\u6b21\u7684\u65e0\u5411\u8fb9 \n}\ndfs(1,0,0);//\u5229\u7528\u500d\u589e\u7684\u601d\u60f3\uff0c\u7b2c\u4e09\u4e2a\u53c2\u6570\u4e3a\u5230\u5f53\u524d\u8282\u70b9\u7684\u5f02\u6216\u503c \nint m;\ncin>>m;\nfor (int a=1;a<=m;a++)\n{\n   scanf(\"%d%d\",&a1,&a2);\n   cout<<ans(a1,a2)<<endl;//\u7528\u4e00\u4e2a\u51fd\u6570\u8f93\u51fa\u7b54\u6848 \n}\n\treturn 0;\n}\n```\n\u6700\u6162\u7684\u70b9\u4e5f\u5c31\u4e00\u767e\u591ams\u3002\u3002\u3002",
        "postTime": 1550994643,
        "uid": 76806,
        "name": "99NL",
        "ccfLevel": 4,
        "title": "\u9898\u89e3\u3010\u8ba9\u6211\u4eec\u5f02\u6216\u5427\u3011"
    },
    {
        "content": "\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u5230\u6839\u7684\u5f02\u6216\u503c\uff0c\u8be2\u95ee\u4e24\u4e2a\u70b9\u5373\u4e3a\u8fd9\u4e24\u4e2a\u70b9\u5230\u6839\u7684\u5f02\u6216\u503c\u5f02\u6216\u4e00\u4e0b\u5373\u53ef\n\n```cpp\n#include<cstdio>  \n#define ll long long  \n#define M 300100  \nusing namespace std;  \nint n;  \nll m[100100];  \nint to1[M],w1[M],first1[M],s1,next1[M];  \nint to[M],w[M],first[M],s,next[M];  \nvoid add1(int x,int y,int c){  \n    to1[++s1]=y; next1[s1]=first1[x]; first1[x]=s1; w1[s1]=c;  \n}  \nvoid build(int x,int y,int c){  \n    to[++s]=y;  \n     next[s]=first[x];   \n     first[x]=s;   \n     w[s]=c;  \n}  \nvoid dfs(int fa,int p){  \n    for(int i=first1[p];i>0;i=next1[i]){  \n        int y=to1[i];  \n        if(y==fa){  \n            continue;  \n        }  \n        build(p,y,w1[i]);  \n        dfs(p,y);  \n    }  \n}  \nvoid find(int x,ll op){  \n    m[x]=op;  \n    for(int i=first[x];i>0;i=next[i]){  \n        int y=to[i];  \n        find(y,w[i]^op);  \n    }  \n}  \nint main(){  \n    scanf(\"%d\",&n);  \n    int a,b,c;  \n    for(int i=1;i<=n-1;i++){  \n        scanf(\"%d%d%d\",&a,&b,&c);  \n        add1(a,b,c);  \n        add1(b,a,c);  \n    }  \n    dfs(0,1);  \n    find(1,0);  \n    int num;  \n    scanf(\"%d\",&num);  \n    for(int i=1;i<=num;i++){  \n        scanf(\"%d%d\",&a,&b);  \n        printf(\"%lld\\n\",m[a]^m[b]);  \n    }  \n}\n```",
        "postTime": 1442721213,
        "uid": 8066,
        "name": "wzmszjw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2420 \u3010\u8ba9\u6211\u4eec\u5f02\u6216\u5427\u3011"
    },
    {
        "content": "\u6811\u94fe\u5256\u5206\u88f8\u9898\n\n[\u81f3\u4e8e\u6811\u94fe\u5256\u5206\uff0c\u53ef\u4ee5\u770b\u8fd9\u4f4d\u5927\u4f6c\u7684\u535a\u5ba2](https://www.cnblogs.com/George1994/p/7821357.html)\n\n\u4e0d\u8fc7\u6709\u4e00\u4e9b\u95ee\u9898\uff0c\u6bd4\u5982\u5982\u4f55\u89e3\u51b3\u8fb9\u6743\uff1f\n\n\u4e3e\u4e2a\u4f8b\u5b50:\n\n![](https://gss2.bdstatic.com/9fo3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike80%2C5%2C5%2C80%2C26/sign=ea34c817003b5bb5aada28ac57babe5c/c83d70cf3bc79f3d3adc2d8cb9a1cd11728b2949.jpg)\n\n\u6211\u4eec\u5c06\u8fb9\u6743\u8d4b\u503c\u4e3a\u4e00\u6761\u8fb9\u4e2d\u6df1\u5ea6\u8f83\u5927\u7684\u70b9\u7684\u70b9\u6743\u5373\u53ef\n\n\u67e5\u8be2\u65f6\u6ce8\u610f\uff0c\u5982\u67e5\u8be2\u8def\u5f84$a-b$\uff0c\u67e5\u8be2\u5b8c\u6240\u6709\u94fe\u4e4b\u540e\u4f1a\u53d1\u73b0\u591a\u67e5\u8be2\u4e86\u4e00\u4e2a$lca(a,b)$\uff0c\u6211\u4eec\u5c31\u9700\u8981\u5bf9\u5176\u505a\u4e00\u6b21\u5f02\u6216\u7684\u9006\u8fd0\u7b97\n\n\u56e0\u4e3a\u5f02\u6216\u5177\u6709\u4ea4\u6362\u5f8b\uff0c\u5373\n\n$a$^$(b$^$c)$ $=$ $(a$^$b)$^$c$\n\n\u6545$a$^$(a$^$b)$ $=$ $(a$^$a)$^$b$\n\n\u6240\u4ee5\u5f02\u6216\u5c31\u662f\u5f02\u6216\u7684\u9006\u8fd0\u7b97\uff0c\u5bf9\u7b54\u6848\u518d\u5f02\u6216\u4e00\u6b21\u5176$lca$\u503c\u5373\u53ef\n\n\u7136\u540e\u8fdb\u884c\u6811\u94fe\u5256\u5206\u5e38\u89c4\u64cd\u4f5c\n\n\u5173\u4e8e$lca$\uff0c\u4e5f\u53ef\u4ee5\u7528\u6811\u94fe\u5256\u5206\u6c42\u51fa\n\n\u5982\u4e0a\u65b9\u90a3\u5f20\u56fe\n\n\u5982\u679c\u6211\u4eec\u8981\u6c42$(a,b)$\u7684$lca$\uff0c\u4f2a\u4ee3\u7801\u662f\u8fd9\u6837\u7684\uff1a\n```cpp\nwhile top[a]!=top[b]//\u91cd\u94fe\u9876\u4e0d\u540c\n\tif a\u7684\u6df1\u5ea6<b\u7684\u6df1\u5ea6\n    \tswap(a,b)\n    a=top[a]\u7684\u7236\u4eb2//\u722c\u5230\u4e0b\u4e00\u6761\u91cd\u94fe\u4e0a\n   \nif a\u7684\u6df1\u5ea6>b\u7684\u6df1\u5ea6\n\tswap(a,b)\n    \nreturn a//\u5f53\u5728\u540c\u4e00\u6761\u91cd\u94fe\u4e0a\u65f6\uff0c\u8f83\u6d45\u7684\u5373\u4e3a\u5176lca\n```\n\n\u8fd9\u6837\u5c31\u8fd0\u7528\u4e86\u6811\u94fe\u5256\u5206\u7684\u7279\u6027\u6765\u6c42$lca$\uff0c\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(log^2n)$\n\n\u4e8e\u662f\u5c31\u57fa\u672c\u5b8c\u6210\u5566\uff01\n\n\u6700\u540e\u662f\u672c\u9898\u4ee3\u7801\uff1a\ncode\uff1a\n```cpp\n#include <stdio.h>\n#include <algorithm>\n#include <iostream>\nusing namespace std;\n#define maxn 200001\nint seg[maxn],in[maxn],out[maxn],dep[maxn],fa[maxn],top[maxn],son[maxn],siz[maxn];\nint head[maxn],sum[maxn<<2],addv[maxn<<2],a[maxn];\nint begins[maxn],endsss[maxn],suma[maxn];\nstruct edge\n{\n    int next,to;\n}e[maxn<<1];\nint tot=0;\nvoid add(int u,int v)\n{\n    tot++;\n    e[tot].to=v;\n    e[tot].next=head[u];\n    head[u]=tot;\n}\nvoid dfs1(int u)\n{\n    siz[u]=1;\n    for(int i=head[u];i;i=e[i].next)\n    {\n        int v=e[i].to;\n        if(v==fa[u])\n        {\n            continue;\n        }\n        fa[v]=u;\n        dep[v]=dep[u]+1;\n        dfs1(v);\n        siz[u]+=siz[v];\n        if(siz[v]>siz[son[u]])\n        {\n            son[u]=v;\n        }\n    }\n}\nvoid dfs2(int u,int tp)\n{\n    tot++;\n    in[u]=tot;\n    seg[tot]=u;\n    top[u]=tp;\n    if(son[u])\n    {\n        dfs2(son[u],tp);\n    }\n    for(int i=head[u];i;i=e[i].next)\n    {\n        int v=e[i].to;\n        if(v==fa[u]||v==son[u])\n        {\n            continue;\n        }\n        dfs2(v,v);\n    }\n    out[u]=tot;\n}\nint n,m,r;\n#define pushup(o) sum[o]=sum[o<<1]^sum[o<<1|1]\nvoid build(int o,int lf,int rg)\n{\n    if(lf==rg)\n    {\n        sum[o]=a[seg[lf]];\n        return ;\n    }\n    int mid=(lf+rg)>>1;\n    build(o<<1,lf,mid);\n    build(o<<1|1,mid+1,rg);\n    pushup(o);\n}\nint query(int o,int lf,int rg,int l,int r)\n{\n    if(l<=lf&&rg<=r)\n    {\n        return sum[o];\n    }\n    int ans=0;\n    int mid=(lf+rg)>>1;\n    if(l<=mid)\n    {\n        ans=ans^query(o<<1,lf,mid,l,r);\n    }\n    if(mid<r)\n    {\n        ans=ans^query(o<<1|1,mid+1,rg,l,r);\n    }\n    return ans;\n}\nint qpath(int x,int y)\n{\n    int ans=0;\n    while(top[x]!=top[y])\n    {\n        if(dep[top[x]]<dep[top[y]])\n        {\n            swap(x,y);\n        }\n        ans=ans^query(1,1,n,in[top[x]],in[x]);\n        x=fa[top[x]];\n    }\n    if(dep[x]<dep[y])\n    {\n        swap(x,y);\n    }\n    ans=ans^query(1,1,n,in[y],in[x]);\n    return ans;\n}\nint lca(int u,int v)\n{\n    while(top[u]!=top[v])\n    {\n        if(dep[top[u]]<dep[top[v]])\n        {\n            swap(u,v);\n        }\n        u=fa[top[u]];\n    } \n    if(dep[u]>dep[v])\n    {\n        swap(u,v);\n    }\n    return u;\n}\nint main()\n{\n    cin>>n;\n    for(int i=1;i<n;i++)\n    {\n        scanf(\"%d%d%d\",&begins[i],&endsss[i],&suma[i]);\n        add(begins[i],endsss[i]);\n        add(endsss[i],begins[i]);\n    }\n    tot=0;\n    dep[1]=1;\n    dfs1(1);\n    tot=0;\n    dfs2(1,1);\n    for(int i=1;i<n;i++)\n    {\n    \tif(dep[begins[i]]>=dep[endsss[i]])\n    \t{\n    \t\tswap(begins[i],endsss[i]);\n    \t}\n    \ta[endsss[i]]=suma[i];//\u7ed9\u6df1\u5ea6\u8f83\u5927\u7684\u70b9\u8d4b\u8fb9\u6743\n    }\n    build(1,1,n);\n    cin>>m;\n    for(int i=1;i<=m;i++)\n    {\n    \tint x,y;\n    \tscanf(\"%d%d\",&x,&y);\n    \tprintf(\"%d\\n\",qpath(x,y)^a[lca(x,y)]);\n    }\n}\n```\n",
        "postTime": 1531232301,
        "uid": 48265,
        "name": "decoqwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2420 \u3010\u8ba9\u6211\u4eec\u5f02\u6216\u5427\u3011"
    },
    {
        "content": "\u8fd9\u4e48\u591a\u9898\u89e3\u7adf\u7136\u6ca1\u6709\u500d\u589e\u7684\u3002\u3002\n\n\u6765\u4e00\u53d1\u500d\u589e\u5427!\n\n\n```cpp\n#include <cstdio>\nint n, m, s, cnt1;\nstruct node{\n    int a, b, c, n;\n} d[1000001];\nint h[500001], p[500001], dep[500001], ru[500001];\nint st[500001][20], yi[500001][20];\nint read(){\n    int x, f = 1;\n    char ch;\n    while(ch = getchar(), ch<'0'||ch>'9'){\n        if(ch == '-') f = -1;\n    }\n    x = ch - 48;\n    while(ch = getchar(), ch>='0'&&ch<='9') x = x * 10 + ch - 48;\n    return x*f;\n}\nvoid cr1(int a, int b, int c){\n    d[++cnt1].a = a; d[cnt1].b = b; d[cnt1].c = c; d[cnt1].n = h[a]; h[a] = cnt1;\n}\nvoid dfs(int a){\n    int i, b;\n    for(i = h[a]; i; i = d[i].n){\n        b = d[i].b;\n        if(!dep[b]){\n            dep[b] = dep[a] + 1;\n            st[b][0] = a;\n            yi[b][0] = d[i].c;\n            dfs(b);\n        }\n    }\n}\nvoid make_st(){\n    int i, j;\n    for(j = 1; j <= 19; j++){\n        for(i = 1; i <= n; i++){\n            st[i][j] = st[st[i][j-1]][j-1];\n            yi[i][j] = yi[i][j-1] ^ yi[st[i][j-1]][j-1];\n        }\n    }\n}\nint query(int x, int y){\n    int i, t, a = 0, b;\n    if(dep[x] > dep[y]) t = x, x = y, y = t;\n    t = dep[y] - dep[x];\n    for(i = 19; i >= 0; i--){\n        if(1 << i & t) a ^= yi[y][i], y = st[y][i];\n    }\n    if(x == y) return a;\n    for(i = 19; i >= 0; i--){\n        if(st[x][i] != st[y][i]){\n            a ^= yi[x][i];\n            a ^= yi[y][i];\n            x = st[x][i];\n            y = st[y][i];\n        }\n    }\n    a ^= yi[x][0]; a ^= yi[y][0];\n    return a;\n}\nint main(){\n    int i, j, a, b, c;\n    n = read();\n    for(i = 1; i <= n - 1; i++){\n        a = read(); b = read(); c = read();\n        cr1(a, b, c);\n        cr1(b, a, c);\n    }\n    dep[1] = 1;\n    dfs(1);\n    make_st();\n    m = read();\n    for(i = 1; i <= m; i++){\n        a = read(); b = read();\n        printf(\"%d\\n\", a==b?0:query(a, b));\n    }\n    return 0;\n}\n```",
        "postTime": 1499943567,
        "uid": 31619,
        "name": "Hzxleo4",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2420 \u3010\u8ba9\u6211\u4eec\u5f02\u6216\u5427\u3011"
    },
    {
        "content": "\u201c\u51e1\u662f\u7528\u6811\u94fe\u5256\u5206\u53ef\u4ee5\u505a\u7684\u9898\uff0cLCT\u90fd\u662f\u53ef\u4ee5\u505a\u7684\uff01\u201d\n\n\u6240\u4ee5\u4e5f\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2aLCT\u7136\u540e\u4e71\u641e\u5c31\u884c\u4e86\n\n\u5177\u4f53\u600e\u4e48\u4e71\u641e\u561b\uff0c\u8fb9\u6743\u653e\u5728\u65b0\u7684\u4e00\u4e2a\u8282\u70b9\u4e0a\uff0c\u7136\u540e\u5404\u628a\u8fb9\u7684\u4e24\u7aeflink\u4e00\u4e0b\u5c31\u597d\u4e86\n\n\u5f53\u7136\u5566\uff0c\u8fb9\u7684\u4e24\u7aef\u7684\u503c\u90fd\u8bbe0\u597d\u4e86\n\n\u7136\u540esplay\u7684\u65f6\u5019pushup\u4e00\u4e0b\uff08xor\uff09\u5c31\u597d\u4e86\n\n\u8fd9\u9898\u65e0\u9700cut\uff08\u563f\u563f\uff09\uff0c\u6240\u4ee5\u8fd8\u6709\u66f4\u597d\u7684\u65b9\u6cd5\n\n\u67e5\u627e\u7684\u65f6\u5019\u5148\u628a\u4e00\u7aef\u53d8\u4e3a\u6839\uff0c\u53e6\u4e00\u7aefaccess\u4e0a\u53bb\uff0c\u6700\u540e\u628ay\u76f4\u63a5splay\u4e00\u4e0b\u6c42\u51fa\u8fd9\u68f5splay\u7684\u503c\u5373\u53ef\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<iostream>\n#include<cstdlib>\n#include<string>\n#include<ctime>\n#include<queue>\n#include<climits>\nusing namespace std;\nint t[200001][2],fa[200001],la[200001];\nint n,m,zh[200001],v[200001],s[200001];\ninline void pushup(int x){s[x]=v[x]^s[t[x][0]]^s[t[x][1]];}\ninline void pushdown(int x){\n    if(la[x]){\n        swap(t[x][1],t[x][0]);\n        la[t[x][1]]^=1;la[t[x][0]]^=1;\n    }\n    la[x]=0;\n}\ninline bool rt(int x){\n    return t[fa[x]][0]!=x&&t[fa[x]][1]!=x;\n}\ninline void turn(int x){\n    int y=fa[x],z=fa[y],l=(x!=t[fa[x]][0]),r=(y!=t[fa[y]][0]);\n    int p=t[x][l^1];\n    if(!rt(y))t[z][r]=x;\n    fa[p]=y;fa[x]=z;t[x][l^1]=y;fa[y]=x;t[y][l]=p;\n    pushup(y);pushup(x);\n}\ninline void splay(int x){\n    int i=x,y,z;for(;!rt(i);i=fa[i])zh[++zh[0]]=i;\n    zh[++zh[0]]=i;while(zh[0])pushdown(zh[zh[0]--]);\n    while(!rt(x)){\n        y=fa[x];z=fa[y];\n        if(!rt(y)){\n            if((t[y][0]==x)^(t[z][0]==y))turn(x);\n            else turn(y);\n        }\n        turn(x);\n    }\n}\ninline void access(int x){\n    int p=0;\n    while(x){\n        splay(x);t[x][1]=p;\n        p=x;pushup(x);x=fa[x];\n    }\n}\ninline void chrt(int x){\n    access(x);splay(x);la[x]^=1;\n}\ninline void link(int x,int y){\n    chrt(x);fa[x]=y;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<n;i++){\n        int x,y,z;scanf(\"%d%d%d\",&x,&y,&z);\n        v[n+i]=z;link(x,n+i);link(y,n+i);\n    }\n    scanf(\"%d\",&m);\n    for(int i=1;i<=m;i++){\n        int x,y;scanf(\"%d%d\",&x,&y);\n        chrt(x);access(y);splay(y);\n        printf(\"%d\\n\",s[y]);\n    }\n    return 0;\n}\n```",
        "postTime": 1495411715,
        "uid": 5716,
        "name": "jzqjzq",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2420 \u3010\u8ba9\u6211\u4eec\u5f02\u6216\u5427\u3011"
    },
    {
        "content": "dfs\u5efa\u6811\u3002  \n\u4eff\u7167lca\u7684\u601d\u8def,\u8bb0\u5f55\u7ed3\u70b9\u5230\u6839\u7684\u5f02\u6216\u548c\u3002  \n\u4e24\u7ed3\u70b9\u7684\u8def\u5f84\u5f02\u6216\u548c\u5373\u4e3a\u4e24\u7ed3\u70b9\u5230\u6839\u7684\u5f02\u6216\u548c\u9664\u53bblca\u5230\u6839\u7684\u5f02\u6216\u548c\u7684\u90e8\u5206\u3002  \n\u6839\u636e\u5f02\u6216\u7684\u81ea\u53cd\u6027,lca\u5230\u6839\u7684\u5f02\u6216\u548c\u88ab\u5f02\u6216\u4e24\u6b21\u7b49\u4e8e\u6ca1\u52a0,\u4e0d\u9700\u8981\u505a\u7279\u6b8a\u5904\u7406\u3002  \n```cpp\n#include <cstdio>\n#include <cstring>\n\nusing namespace std;\n\nconst int maxn = 123456;\nint head[maxn], ver[maxn<<1], wei[maxn<<1], nex[maxn<<1], tot;\ninline void addedge(int u, int v, int w) {\n    ver[tot] = v; wei[tot] = w; nex[tot] = head[u]; head[u] = tot++;\n}\n\nint xorSum[maxn];\nvoid dfs(int cur, int fa, int w) {\n    xorSum[cur] = xorSum[fa] ^ w;\n    for(int i = head[cur]; ~i; i = nex[i])\n        if(ver[i] != fa)\n            dfs(ver[i], cur, wei[i]);\n}\n\nint main() {\n    memset(head, -1, sizeof(head));\n    int n, m, u, v, w;\n    scanf(\"%d\", &n);\n    for(int i = 1; i < n; ++i) {\n        scanf(\"%d %d %d\", &u, &v, &w);\n        addedge(u, v, w);\n        addedge(v, u, w);\n    }\n    dfs(1, 0, 0);\n    scanf(\"%d\", &m);\n    while(m--) {\n        scanf(\"%d %d\", &u, &v);\n        printf(\"%d\\n\", xorSum[u] ^ xorSum[v]);\n    }\n    return 0;\n}\n```",
        "postTime": 1571543288,
        "uid": 88735,
        "name": "\u5bd2\u9e3d\u513f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2420 \u3010\u8ba9\u6211\u4eec\u5f02\u6216\u5427\u3011"
    },
    {
        "content": "### \u4e0d\u5f97\u4e0d\u8bf4\uff0c\u5728\u6211\u770b\u5230\u8fd9\uff08\u6c34\uff09\u9898\u7684\u7b97\u6cd5\u6807\u7b7e\u540e\uff0c\u6211\u611f\u5230\u4e86\u5341\u8db3\u7684\u6ed1\u7a3d\uff1aLCA......\n\u5728\u8d34\u4ee3\u7801\u524d\uff0cSE\u7ed9\u5927\u5bb6\u666e\u53ca\u4e00\u4e0b\u5f02\u6216\u7684\u4e00\u4e2a\u795e\uff08gui\uff09\u5947\uff08chu\uff09\u7684\u7528\u6cd5\u3002\u5927\u5bb6\u90fd\u77e5\u9053,\u8bbea^b=c,\u90a3\u4e48\uff0c(a^d)^(b^d)=c\u3002\u4e8e\u662f\u4e4e\uff0cSE\u7528\u4e86\u4e00\u4e2a\u5929(ruo)\u79c0(ji)\u7684\"\u524d\u7f00\u5f02\u6216\"......\u601d\u8def\u5f88\u7b80\u5355\uff0c\u7528\u4e00\u4e2a\u6570\u7ec4\u5b58\u4e0b\u8be5\u70b9\u5230\u6839\u8282\u70b9\u7684\u5168\u7a0b\u5f02\u6216\uff0c\u7136\u540e\u5c31\u7b80\u5355\u4e86\u3002\n#### Now\uff0cit's time to show code.\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct Edge\n{\n\tint next,oth;//next\u8bb0\u5f55\u7684\u662f\u8be5\u70b9\u7684\u4e0a\u4e00\u6761\u76f8\u5173\u8fb9,oth\u8bb0\u5f55\u8be5\u8fb9\u7684\u53e6\u4e00\u4e2a\u70b9\n\tint leng;//\u8fb9\u6743\n}e[200005];//\u7ed3\u6784\u4f53,\u7528\u4e8e\u5b58\u8fb9\nint n,m;\nint poi[100005];//poi\u6570\u7ec4\u7528\u4e8e\u5b58\u5bf9\u5e94\u70b9\u7684\u6700\u540e\u4e00\u6761\u76f8\u5173\u8fb9\nint yh[100005];//yh\u7528\u4e8e\u5b58\u5bf9\u5e94\u70b9\u7684\"\u524d\u7f00\u5f02\u6216\"(\u5230\u6839\u7684\u603b\u5f02\u6216)\nint w=1;//\u8fb9\u7684\u5e8f\u53f7\nbool mark[100005];//(\u6b64\u5904\u9ad8\u80fd)\u5efa\u6811\u65f6\u7528\u4e8e\u8bb0\u5f55\u8be5\u70b9\u662f\u5426\u5df2\u4f7f\u7528\u8fc7,\u5426\u5219\u4f1a\u65e0\u60c5REEEEEE......\nvoid tree(int x,int y,int z)//\u5efa\u56fe\u6cd5\u5efa\u6811(\u5408\u5e76\u7248)\n{\n\te[w].oth=y;//\u7b2cw\u6761\u8fb9\u7684\u53e6\u4e00\u4e2a\u8282\u70b9\u4e3ay(\u524d\u4e00\u4e2a\u8282\u70b9\u4e3ax)\n\te[w].next=poi[x];//\u7b2cw\u6761\u8fb9\u4e4b\u524d\u4e00\u6761\u4e0ex\u76f8\u5173\u7684\u8fb9\u4e3apoi[x]\n\te[w].leng=z;//\u8fb9\u6743\u4e3az\n\tpoi[x]=w;//\u6700\u540e\u4e00\u6761\u4e0e\u70b9x\u76f8\u5173\u7684\u8fb9\u4e3aw\n\tw++;\n\te[w].oth=x;//\u7b2cw\u6761\u8fb9\u7684\u53e6\u4e00\u4e2a\u8282\u70b9\u4e3ax(\u524d\u4e00\u4e2a\u8282\u70b9\u4e3ay)\n\te[w].next=poi[y];//\u7b2cw\u6761\u8fb9\u4e4b\u524d\u4e00\u6761\u4e0ey\u76f8\u5173\u7684\u8fb9\u4e3apoi[y]\n\te[w].leng=z;\n\tpoi[y]=w;//\u6700\u540e\u4e00\u6761\u4e0e\u70b9y\u76f8\u5173\u7684\u8fb9\u4e3aw\n\tw++;\n}\nvoid dfs(int x)//\u627e\"\u524d\u7f00\u5f02\u6216\"\n{\n\tmark[x]=1;//\u8be5\u70b9\u6807\u8bb0\u4e3a\u5df2\u627e\u8fc7\n\tfor(int i=poi[x];i!=0;i=e[i].next)//\u4ece\u5bf9\u5e94\u70b9\u7684\u6700\u540e\u4e00\u6761\u76f8\u5173\u8fb9\u5f00\u59cb\u627e\n\t{\n\t\tint mid=e[i].oth;\n\t\tif(mark[mid])continue;//\u5982\u679c\u8fd9\u70b9\u5df2\u7ecf\u627e\u8fc7,\u5c31\u8df3\u8fc7\n\t\tyh[mid]=yh[x]^e[i].leng;//\u4f20\u8bf4\u4e2d\u7684\"\u524d\u7f00\u5f02\u6216\"(\u8fb9\u6743^\u7236\u8282\u70b9\u7684\"\u524d\u7f00\u5f02\u6216\")\n\t\tdfs(mid);//\u4ece\u8be5\u70b9\u5f00\u59cb\u6df1\u641c\u5176\u513f\u5b50\n\t}\n}\nint main()\n{\n\tint x,y,z;\n\tcin>>n;\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tcin>>x>>y>>z;\n\t\ttree(x,y,z);//\u5b58\u8fb9\u5efa\u6811\n\t}\n\tcin>>m;\n\tdfs(1);//\u5efa\u6811\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>x>>y;\n\t\tz=yh[x]^yh[y];//\u76f4\u63a5\u6c42\u5c31\u53ef\u4ee5\u4e86\n\t\tcout<<z<<endl;\n\t}\n\treturn 0;\n}\n```\n\u55ef\uff0c\u5c31\u662f\u8fd9\u4e48\u7b80\u5355\u3002\u3002\u3002stO\"\u7528LCA\u7684\u5927\u4f6c\"Orz#\u6ed1\u7a3d#",
        "postTime": 1566398993,
        "uid": 180473,
        "name": "Sherlock_Ezreal",
        "ccfLevel": 0,
        "title": "P2420#\u6ed1\u7a3d#"
    },
    {
        "content": "\u672c\u4eba\u7684\u90bb\u63a5\u77e9\u9635\u57fa\u672c\u4e0a\u5fd8\u5e72\u51c0\u4e86\n\n\u6240\u4ee5\u4e0a\u7684vector\n\n\u6838\u5fc3\u601d\u60f3\u5c31\u662flca\n\n\u628alca\u5f04\u51fa\u6765\u4ee5\u540e\u4e0d\u505c~~xjb~~     xor\n\n\u5b8c\u4e86\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cmath>\n#include<vector>\nusing namespace std;\nstruct edge{\n\tint n,c;\n\tedge(int lis1,int lis2)\n\t{\n\t\tn=lis1;\n\t\tc=lis2;\n\t}\n};\nvector <edge> mira[100001];\nint nss,m,deep[100001],root=1,f[100001][18],deepdark[100001];\nvoid make_a_fucking_tree(int fa)\n{\n\tint just;\n\tfor(int i=0;i<mira[fa].size();i++)\n\t{\n\t\tjust=mira[fa][i].n;\n\t\tif(deep[just])\n\t\tcontinue;\n\t\tdeep[just]=deep[fa]+1;\n\t\tdeepdark[just]=deepdark[fa]^mira[fa][i].c;\n\t\tf[just][0]=fa;\n\t\tfor(int i=1;i<=17;i++)\n\t\t{\n\t\t\tf[just][i]=f[f[just][i-1]][i-1];\n\t\t}\n\t\tmake_a_fucking_tree(just);\n\t}\n}\nint lca(int a,int b)\n{\n\tif(deep[b]>deep[a])\n\tswap(a,b);\n\tfor(int i=17;i>=0;i--)\n\t{\n\t\tif(deep[f[a][i]]>deep[b])\n\t\ta=f[a][i];\n\t\tif(a==b)\n\t\treturn a;\n\t}\n\tfor(int i=17;i>=0;i--)\n\t{\n\t\tif(f[a][i]!=f[b][i])\n\t\t{\n\t\t\ta=f[a][i];\n\t\t\tb=f[b][i];\n\t\t}\n\t}\n\treturn f[a][0];\n}\nint do_it_fucking_xor(int liss1,int liss2)\n{\n\treturn deepdark[liss1]^deepdark[liss2];\n}\nint main()\n{\n\tstd::ios::sync_with_stdio(false);\n\tcin>>nss;\n\tdeep[root]=1;\n\tfor(int i=1;i<=nss-1;i++)\n\t{\n\t\tint u,v,w;\n\t\tcin>>u>>v>>w;\n\t\tedge lis3(v,w);\n\t\tedge lis4(u,w);\n\t\tmira[u].push_back(lis3);\n\t\tmira[v].push_back(lis4);\n\t}\n\tmake_a_fucking_tree(root);\n\tcin>>m;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u,v;\n\t\tcin>>u>>v;\n\t\tint aipc=lca(i,v);\n\t\tint chen_zhe_1=do_it_fucking_xor(u,aipc);\n\t\tint chen_zhe_2=do_it_fucking_xor(v,aipc);\n\t\tcout<< (chen_zhe_1^chen_zhe_2) <<endl;\n\t}\n}\n```",
        "postTime": 1533601085,
        "uid": 68193,
        "name": "SCRV_8620",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P2420 \u3010\u8ba9\u6211\u4eec\u5f02\u6216\u5427\u3011"
    },
    {
        "content": "\u5f88\u7b80\u5355\uff0c\u9898\u76ee\u610f\u601d\u5f88\u660e\u786e\u8ba9\u6211\u4eec\u8dd1 lca \uff0c\u4e8e\u662f\u6211\u5c31\u8001\u8001\u5b9e\u5b9e\u5199\u4e86\u4e00\u904d\u6a21\u677f\u3002\u6ce8\u610f\uff1a\u8fb9\u8dd1\u8fb9\u5f02\u6216\uff0c\u7528\u500d\u589e\u8dd1\u3002\n\n\u5bf9 lca \u4e0d\u592a\u719f\u7684\u6211\u7adf\u7136\u4e00\u904d\u6c34\u8fc7~~\n```pascal\nvar\n        n,m,i,j,k,s,x,y,z:longint;\n        first,next,en,len,deep:array[0..1000001] of longint;\n        rmq,g:array[0..200001,0..20] of longint;\nprocedure add(x,y,z:longint); //\u90bb\u63a5\u8868\u5b58\u50a8\nbegin\n        inc(s);\n        next[s]:=first[x];\n        first[x]:=s;\n        en[s]:=y;\n        len[s]:=z;\nend;\nprocedure dfs(x:longint); //\u641c\u7d22\uff0c\u6c42\u51fa\u6df1\u5ea6\u53ca\u6bcf\u4e2a\u70b9\u7684\u7236\u8282\u70b9\uff0c\u5e76\u5b58\u8fdb\u521d\u503c\u3002\nvar\n        t:longint;\nbegin\n        t:=first[x];\n        while t>0 do\n        begin\n        \t\t// x \u4e3a\u7236\u8282\u70b9\uff0cen[t] \u4e3a\u5b50\u8282\u70b9\u3002\n                if en[t]<>rmq[x,0] then\n                begin\n                        rmq[en[t],0]:=x;\n                        deep[en[t]]:=deep[x]+1; \n                        //\u5b50\u8282\u70b9\u6bd4\u7236\u8282\u70b9\u6df1\u5ea6\u591a1\u3002\n                        g[en[t],0]:=len[t];\n                        dfs(en[t]);\n                end;\n                t:=next[t];\n        end;\nend;\nfunction lca(x,y:longint):longint; //\u8dd1 lca\nvar\n        ans,i:longint;\nbegin\n        ans:=0;\n        if deep[x]>deep[y] then //\u628a\u5927\u7684\u653e\u540e\u9762\uff0c\u540e\u6587\u597d\u5904\u7406\u3002\n        begin\n                i:=x;\n                x:=y;\n                y:=i;\n        end;\n        for i:=19 downto 0 do\n                if deep[y]-deep[x]>=1<<i then\n                //\u5148\u8ba9\u6df1\u5ea6\u5927\u7684\u5f80\u4e0a\u8dd1\uff08\u500d\u589e\uff09\uff0c\u76f4\u5230\u8dd1\u5230\u548c\u53e6\u4e00\u4e2a\u70b9\u6df1\u5ea6\u4e00\u6837\u3002\n                begin\n                        ans:=ans xor g[y,i];\n                        //\u8fb9\u8dd1\u8fb9\u5f02\u6216\n                        y:=rmq[y,i];\n                end;\n        if x=y then exit(ans); //\u5982\u679c\u5230\u4e86\u540c\u4e00\u4e2a\u70b9\uff0c\u9000\u51fa\u3002\n        for i:=19 downto 0 do\n                if rmq[x,i]<>rmq[y,i] then\n                //\u4e24\u4e2a\u70b9\u540c\u65f6\u5411\u4e0a\u8dd1\u3002\n                begin\n                        ans:=ans xor g[x,i] xor g[y,i];\n                        x:=rmq[x,i];\n                        y:=rmq[y,i];\n                end;\n        //\u8dd1\u5b8c\u540e\u4e24\u4e2a\u70b9\u7684\u7236\u8282\u70b9\u5c31\u662f lca \n        ans:=ans xor g[x,0] xor g[y,0];\n        //\u628a\u5230 lca \u7684\u8fb9\u4e5f\u5f02\u6216\u4e00\u904d\u3002\n        exit(ans);\nend;\nbegin\n        readln(n);\n        for i:=1 to n-1 do //\u8bfb\u5165\uff0c\u7528\u90bb\u63a5\u8868\u5b58\n        begin\n                readln(x,y,z);\n                add(x,y,z);\n                add(y,x,z);\n        end;\n        dfs(1); //\u641c\u7d22\n        //rmq[i,j] \u8868\u793a i \u5411\u4e0a\u8dd1 2^j \u7684\u6df1\u5ea6\u6240\u5230\u7684\u70b9\n        //g[i,j] \u8868\u793a i \u5411\u4e0a\u8dd1 2^j \u7684\u6df1\u5ea6\u65f6\u6240\u7ecf\u8fc7\u6240\u6709\u8fb9\u7684\u5f02\u6216\u503c\n        for j:=1 to 19 do //\u505a rmq\uff08\u500d\u589e\u8dd1\uff09\n                for i:=1 to n do\n                begin\n                        rmq[i,j]:=rmq[rmq[i,j-1],j-1];\n                        g[i,j]:=g[i,j-1] xor g[rmq[i,j-1],j-1];\n                end;\n        readln(m);\n        for i:=1 to m do //\u8bfb\u5165\u8be2\u95ee\n        begin\n                readln(x,y);\n                writeln(lca(x,y)); //\u79bb\u7ebf lca \u641e\u5b9a\uff01\n        end;\nend.\n```",
        "postTime": 1524366550,
        "uid": 54365,
        "name": "Out_Land",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2420 \u3010\u8ba9\u6211\u4eec\u5f02\u6216\u5427\u3011"
    },
    {
        "content": "# \u7528LCA\u53ef\u505a~\n\n\u57fa\u672c\u4e0a\u53ef\u4ee5\u7b97\u662fLCA\u6a21\u677f\u9898\u4e86\uff0c\u5957\u4e00\u987fLCA\u6a21\u677f\u5373\u53ef\u5b9e\u73b0~\n\n\u6ce8\uff1a\u4ee5\u4e0bfloor[i]\u4e3a\u7b2ci\u4e2a\u70b9\u7684\u5c42\u6570\uff0cfa[i,j]\u4e3ai\u8282\u70b9\u5411\u4e0a\u7684\u7b2c2^j\u4e2a\u8282\u70b9\u7684\u7f16\u53f7\uff0cf[i,j]\u4e3ai\u8282\u70b9\u5411\u4e0a\u8dd12^j\u6761\u8fb9\u7684\u7b54\u6848\uff08\u4e5f\u5c31\u662f\u5f02\u6216\u503c\uff09\u3002\n\nP.S.\uff1a\u8bdd\u8bf4\u4e3a\u4ec0\u4e48\u6700\u8fd1Pascal\u7684\u9898\u89e3\u8d8a\u6765\u8d8a\u5c11\u4e86qwq\u2026\u2026\n\n---\n\npascal\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\nvar n,m,i,j,k,x,y,z,ans:longint;\nen,dis,find,next,last,floor:array[0..200000]of longint;\nf,fa:array[0..100000,0..17]of longint;\nb:array[1..100000]of boolean;\nprocedure build(x,y:longint);\nbegin\n  inc(k);\n  next[k]:=last[x];\n  last[x]:=k;\n  en[k]:=y;\n  dis[k]:=z;\nend;\nbegin\n  readln(n);\n  for m:=1 to n-1 do//\u90bb\u63a5\u8868\u5b58\u8fb9\uff08\u56e0\u4e3a\u65e0\u5411\uff0c\u6240\u4ee5\u5b58\u4e24\u904d\uff0c\u6ce8\u610f\u6570\u7ec4\u4e5f\u8981\u5f00\u5927\u4e00\u500d\uff09\n  begin\n    readln(x,y,z);\n    build(x,y);\n    build(y,x);\n  end;\n  find[1]:=1;\n  x:=1;\n  y:=1;\n  b[1]:=true;\n  floor[1]:=1;\n  while x<=y do//BFS\u5efa\u6811\n  begin\n    i:=last[find[x]];\n    while i>0 do\n    begin\n      if not b[en[i]] then\n      begin\n        inc(y);\n        find[y]:=en[i];\n        fa[en[i],0]:=find[x];\n        f[en[i],0]:=dis[i];\n        b[en[i]]:=true;\n        floor[en[i]]:=floor[find[x]]+1;\n      end;\n      i:=next[i];\n    end;\n    inc(x);\n  end;\n  for j:=1 to 17 do//\u5904\u7406ST\u8868\n  for i:=1 to n do\n  begin\n    fa[i,j]:=fa[fa[i,j-1],j-1];\n    f[i,j]:=f[i,j-1] xor f[fa[i,j-1],j-1];\n  end;\n  readln(m);\n  for i:=1 to m do//LCA\u6a21\u677f\uff08\u500d\u589e\uff09\uff08\u6ce8\u610f\u7b54\u6848\u662f\u5728\u6c42\u5f02\u6216\u503c\u5c31\u884c\u4e86qwq\uff09\n  begin\n    readln(x,y);\n    if floor[x]<floor[y] then\n    begin\n      z:=x;\n      x:=y;\n      y:=z;\n    end;\n    ans:=0;\n    if floor[x]>floor[y] then\n    for j:=17 downto 0 do\n    if floor[fa[x,j]]>=floor[y] then\n    begin\n      ans:=ans xor f[x,j];\n      x:=fa[x,j];\n    end;\n    if x=y then\n    begin\n      writeln(ans);\n      continue;\n    end;\n    for j:=17 downto 0 do\n    if fa[x,j]<>fa[y,j] then\n    begin\n      ans:=ans xor f[x,j] xor f[y,j];\n      x:=fa[x,j];\n      y:=fa[y,j];\n    end;\n    writeln(ans xor f[x,0] xor f[y,0]);\n  end;\nend.\n```",
        "postTime": 1517833545,
        "uid": 7535,
        "name": "beng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2420 \u3010\u8ba9\u6211\u4eec\u5f02\u6216\u5427\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u6811\u4e0a\u500d\u589e\u6765\u505a\u3002\n\n\u5177\u4f53\u7684\u601d\u8def\u53ef\u4ee5\u67e5\u770bLCA\u6a21\u7248\u9898\u7684\u9898\u89e3\uff0c\u5728\u6b64\u53ea\u4ecb\u7ecd\u4e00\u4e0b\u5f02\u6216\u548c\u7684\u6c42\u6cd5\u3002\n\n\u5f02\u6216\u548c\u7684\u5b9a\u4e49\u5177\u4f53\u5982\u4e0b\uff1aa,b\u7684\u5f02\u6216\u548c\uff0c\u5373\u5c06a,b\u5316\u4e3a2\u8fdb\u5236\u6570\uff0c\u7136\u540e\u6bcf\u4e00\u4f4d\u8fdb\u884c\u5f02\u6216\uff0c\u5c06\u6bcf\u4e00\u4f4d\u7684\u5f02\u6216\u7ed3\u679c\u4f5c\u4e3a\u5f02\u6216\u548c\u57282\u8fdb\u5236\u4e0b\u90a3\u4e00\u4f4d\u7684\u503c\u3002\u6700\u540e\u53ea\u9700\u5c06\u5f97\u5230\u7684\u5f02\u6216\u548c\u8fd4\u56de\u5373\u53ef\uff08\u8bb0\u5f97\u8981\u662f10\u8fdb\u5236\u7684\uff09\n\n\u5355\u4f4d\u7684\u5f02\u6216\u503c(f(a,b))\uff0c\u603b\u7ed3\u53ef\u5206\u53d1\u73b0\uff0cf(a,b)=(a|b)&(!a|!b)\u3002\n\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e0b\u7528inline\u51fd\u6570\u548c\u8bfb\u4f18\u4f18\u5316\u65f6\u95f4\u590d\u6742\u5ea6\n\n\u4e0b\u4e3a\u7a0b\u5e8f\uff1a\n\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#include<string>\nusing namespace std;\nint n;\nint head[200000];\nint depth[200000];\nint f[200000][18][2];//f[i][j][0]\u8868\u793a\u4ecei\u5f00\u59cb\u5f80\u4e0a\u8d702^j\u4e2a\u8282\u70b9\uff0c\uff08*\u91cd\u8981\uff09f[i][j][1]\u8868\u793a\u4ecei\u5f00\u59cb\u5f80\u4e0a\u8d702^j\u4e2a\u8282\u70b9\u5305\u542b\u76842^j\u6761\u8fb9\u7684\u5f02\u6216\u548c\nint cnt=0;\nstruct Edge//\u94fe\u5f0f\u524d\u5411\u661f\n{\n    int z;\n    int nexty;\n    int qz;\n}edge[400000];//\u8bb0\u5f97\u5f00\u5927\u4e00\u70b9\uff0c\u56e0\u4e3a\u662f\u5b58\u6709\u5411\u8fb9\ninline int dy()//\u8bfb\u5165\u4f18\u5316\n{\n    int num=0;\n    char c=getchar();\n    while(c<'0'||c>'9')c=getchar();\n    while(c>='0'&&c<='9')num=num*10+c-'0',c=getchar();\n    return num;\n}\ninline void _add(int f,int z,int qz)//\u5efa\u8fb9\u51fd\u6570\n{\n    cnt++;\n    edge[cnt].z=z;\n    edge[cnt].qz=qz;\n    edge[cnt].nexty=head[f];\n    head[f]=cnt;\n}\ninline void _build(int root)//\u5efa\u6811\u51fd\u6570\n{\n    int will,wqz;\n    for(int now=head[root];now!=-1;now=edge[now].nexty)\n    {\n        will=edge[now].z;\n        wqz=edge[now].qz;\n        if(!depth[will])\n        {\n            depth[will]=depth[root]+1;\n            f[will][0][0]=root;\n            f[will][0][1]=wqz;\n            _build(will);\n        }\n    }\n}\ninline int yh(int a,int b)//\u6c42\u5f02\u6216\u548c\uff0c\u7528\u4f4d\u8fd0\u7b97\uff0c\u65b9\u6cd5\u5982\u524d\u89e3\u6790\u6240\u8ff0\n{\n    int yhh=0;\n    int sf=0;\n    int aw,bw;\n    while(a|b)\n    {\n        aw=a&1;\n        bw=b&1;\n        yhh+=((aw|bw)&((!aw)|(!bw)))<<(sf++);\n        a>>=1,b>>=1;\n    }\n    return yhh;\n}\ninline void _set()//\u8bbe\u7f6ef[i][j][k]\u7684\u503c\uff0c\u7528\u5230\u4e00\u70b9DP\u601d\u60f3\n{\n    for(int i=1;i<=17;i++)\n    {\n        for(int j=1;j<=n;j++)//\u6ce8\u610f\u8fd9\u4e24\u4e2a\u5faa\u73af\u7684\u987a\u5e8f\uff0c\u82e5\u53cd\u8fc7\u6765\uff0c\u5219\u4f1a\u5148\u8bbf\u95ee\u672a\u88ab\u8ba1\u7b97\u8fc7\u7684f[i][j][k]\u503c\n        {\n            f[j][i][0]=f[f[j][i-1][0]][i-1][0];\n            f[j][i][1]=yh(f[j][i-1][1],f[f[j][i-1][0]][i-1][1]);//\u6c42\u5f02\u6216\u548c\n        }\n    }\n}\ninline int _lca(int a,int b)//\u6c42\u5f02\u6216\u548c\n{\n    if(depth[a]<depth[b])swap(a,b);\n    int yhh=0;//\u5b58\u50a8\u5f02\u6216\u548c\uff0c\u56e0\u4e3aa\u4e0e0\u7684\u5f02\u6216\u548c\u5fc5\u4e3aa\uff0c\u6240\u4ee5\u53ef\u5c06\u521d\u59cb\u503c\u8bbe\u4e3a0\n    for(int i=17;i>=0;i--)\n    {\n        if(depth[f[a][i][0]]>=depth[b])\n        {\n            yhh=yh(yhh,f[a][i][1]);\n            a=f[a][i][0];\n        }\n    }\n    if(a==b)return yhh;\n    for(int i=17;i>=0;i--)\n    {\n        if(f[a][i][0]!=f[b][i][0])\n        {\n            yhh=yh(yh(f[a][i][1],f[b][i][1]),yhh);\n            a=f[a][i][0],b=f[b][i][0];\n        }\n    }\n    return yh(yh(f[a][0][1],f[b][0][1]),yhh);\n}\nint main()\n{\n    depth[1]=1;\n    memset(head,-1,sizeof(head));\n    n=dy();\n    int a,b,qz;\n    for(int i=0;i<n-1;i++)\n    {\n        a=dy();b=dy();qz=dy();\n        _add(a,b,qz);\n        _add(b,a,qz);//\u52a0\u8fb9\uff08\u53cc\u5411\uff09\n    }\n    _build(1);//\u5efa\u6811\n    _set();//\u5efaf\n    int m;\n    m=dy();\n    for(int i=0;i<m;i++)\n    {\n        a=dy();b=dy();\n        printf(\"%d\\n\",_lca(a,b));\n    }\n    return 0;\n}\n```",
        "postTime": 1502546103,
        "uid": 32275,
        "name": "KesdiaelKen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2420 \u3010\u8ba9\u6211\u4eec\u5f02\u6216\u5427\u3011"
    },
    {
        "content": "- \u770b\u4e86\u5404\u4f4d\u5927\u725b\u7684\u4ee3\u7801\uff0c\u679c\u771f\u89c9\u5f97\u81ea\u5df1\u975e\u5e38\u7684low\uff0c\u7136\u800c\u6211\u8fd8\u662f\u5f88\u4e0d\u8981\u8138\u5730\u6765\u4e86\u00b7\u00b7\u00b7\n\n- \u8bb2\u8bb2\u6211\u7684\u601d\u8def\u628a\u3002\u9898\u76ee\u610f\u601d\u8981\u6c42\u6c42\u6811\u4e0a\u4efb\u610f\u4e24\u70b9\u7684xor\u503c\uff0c\u5f53\u7136\u6211\u4eec\u4e0d\u80fd\u4e00\u4e2a\u4e2a\u641c...\n\n- \u6ce8\u610f\u5230xor\u7684\u6027\u8d28\uff1a\n\n                              if a^b=c; then b=c^a,a=c^b...\n\n\u6240\u4ee5\u5982\u679c\u53ef\u4ee5\u8bb0\u5f55\u6811\u4e0a\u4efb\u610f\u70b9\u5230\u6839\u8282\u70b9\u7684xor\u503c\uff0c\u518d\u7528lca\uff0c\u8fd0\u7528\u4e0a\u8ff0\u6027\u8d28\u5e94\u8be5\u80fd\u6c42\u51fa\uff0c\n\n\u7136\u800c\u849f\u84bb\u6211\u5e76\u6ca1\u6709\u8fd9\u6837\u5199...\uff08\u53ef\u80fd\u662f\u56e0\u4e3a\u6211\u5f31\u628a...\uff09\n\n\u6211\u7528\u7684\u662f\u6811\u5256\uff1a\n\n\u7136\u800c\u610f\u601d\u662f\u5dee\u4e0d\u591a\u7684\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u5230\u5176\u6240\u5728\u94fe\u7684top\u7684xor\u503c\uff0c\u6c42\u89e3xor\uff08x\uff0cy\uff09\u65f6\uff0c\u7528\n\n\u6811\u5256\u6c42lca\uff0c\u8fb9\u8dd1\u4e00\u8fb9\u628axor\u4e0d\u65ad\u8bb0\u4e0b\u6765\u5c31\u53ef\u4ee5\u4e86...\n\n\u9644\u4e0alowbee\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\n#define maxn 100010\ninline int read();\nstruct edge{\n    int next;\n    int to;\n    int w;\n}e[maxn*3];\nint pre[maxn],dep[maxn],son[maxn],fa[maxn],siz[maxn],top[maxn],XOR[maxn],_XOR[maxn];\nint cnt=1;\nnamespace lys{\n    int n,m;\n    void add(int x,int y,int w){\n        e[cnt].to=y;e[cnt].next=pre[x];e[cnt].w=w;pre[x]=cnt++;\n        e[cnt].to=x;e[cnt].next=pre[y];e[cnt].w=w;pre[y]=cnt++;\n    }\n    void dfs1(int node,int deep){\n        dep[node]=deep;\n        siz[node]=1;\n        int i,v;\n        for(i=pre[node];~i;i=e[i].next){\n            v=e[i].to;\n            if(v==fa[node]) continue ;\n            fa[v]=node;\n            dfs1(v,deep+1);\n            if(siz[son[node]]<siz[v])\n                son[node]=v;\n        }\n    }\n    void dfs2(int node,int tp){\n        top[node]=tp;\n        if(!son[node]) return ;\n        int i,v;\n        for(i=pre[node];~i;i=e[i].next){\n            v=e[i].to;\n            if(v==fa[node]) continue ;\n            if(v==son[node]){\n                XOR[son[node]]=XOR[node]^e[i].w;\n                dfs2(son[node],tp);\n            }\n            else{\n                _XOR[v]=e[i].w;\n                dfs2(v,v);\n            }\n        }\n    }\n    int work(int x,int y){\n        int res=0;\n        while(true){\n            if(top[x]==top[y]){\n                res^=XOR[x]^XOR[y];\n                return res;\n            }\n            if(top[x]>=top[y]){\n                res^=XOR[x]^_XOR[top[x]];\n                x=fa[top[x]];\n            }\n            else{\n                res^=XOR[y]^_XOR[top[y]];\n                y=fa[top[y]];\n            }\n        }\n    }\n    int main(){\n        n=read();\n        int i,x,y,w;\n        memset(pre,-1,sizeof pre);\n        for(i=1;i<n;i++){\n            x=read(); y=read(); w=read();\n            add(x,y,w);\n        }\n        dfs1(1,0);\n        dfs2(1,1);\n        //for(i=1;i<=n;i++) cout<<XOR[i]<<endl;\n        //for(i=1;i<cnt;i++) cout<<e[i].w<<endl;\n        m=read();\n        for(i=1;i<=m;i++){\n            x=read(); y=read();\n            printf(\"%d\\n\",work(x,y));\n        }\n        return 0;\n    }\n}\nint main(){\n    lys::main();\n    return 0;\n}\ninline int read(){\n    int k=0,f=1;\n    char c=getchar();\n    while(c<'0'||c>'9'){\n        if(c=='-')\n            f=-1;\n        c=getchar();\n    }\n    while(c>='0'&&c<='9'){\n        k=k*10+c-'0';\n        c=getchar();\n    }\n    return k*f;\n}\n```",
        "postTime": 1499918400,
        "uid": 34280,
        "name": "FJ_iNx",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2420 \u3010\u8ba9\u6211\u4eec\u5f02\u6216\u5427\u3011"
    },
    {
        "content": "     \n     \n     \n     \n     \n```cpp\nprogram xortree;\n    var n,m,root:longint;\n        g:array[-100000..100000] of boolean;\n        v,e,w,t:array[-100000..100000] of longint;\n    k:array[1..100000] of longint;\n    procedure inpu;\n    var i,a,b,c:longint;\n    begin\n        readln(n);\n        fillchar(v,sizeof(v),0);\n        for i:=1 to n-1 do    {\u8bfb\u5165\uff0c\u7528\u7f16\u8868\u5b58\u50a8}\n        begin\n            readln(a,b,c);\n            e[i]:=v[a];\n            v[a]:=i;\n            w[i]:=c;\n            t[i]:=b;\n            e[-i]:=v[b];\n            v[b]:=-i;\n            w[-i]:=c;\n            t[-i]:=a;\n            end;\n    end;\n    procedure dfs(p:longint);\n    var now:longint;\n    begin\n        now:=v[p];\n        while now<>0 do\n        begin\n            if g[now] then          {g\u4ee3\u8868\u5f53\u524d\u8fb9\u662f\u5426\u4f7f\u7528\u8fc7}\n            begin\n                g[now]:=false;\n                g[-now]:=false;\n                k[t[now]]:=k[p] xor w[now];     {\u8ba1\u7b97\u5f53\u524d\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e2d\uff0c\u6240\u6709\u8fb9\u6743\u7684\u5f02\u6216\u503c}\n.                dfs(t[now]);\n            end;\n            now:=e[now];\n        end;\n.    end;\n    procedure main;\n    begin\n        fillchar(g,sizeof(g),true);\n        k[1]:=0;\n        dfs(1);\n    end;\n    procedure outp;\n    var i,a,b:longint;\n    begin\n    readln(m);\n        for i:=1 to m do\n        begin\n            readln(a,b);\n            writeln(k[a] xor k[b]);\n        end;\n    end;\n    begin\n        assign(input,'xortree.in');\n        assign(output,'xortree.out');\n        reset(input);\n        rewrite(output);\n        inpu;\n        main;\n        outp;\n    end.\n\n```",
        "postTime": 1443848434,
        "uid": 5913,
        "name": "ming1222",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2420 \u3010\u8ba9\u6211\u4eec\u5f02\u6216\u5427\u3011"
    }
]