[
    {
        "content": "### ~~\u52a0\u4e86\u4fee\u9970\u7684~~\u5de6\u504f\u6811\u6a21\u677f\u9898\n\n[\u6a21\u677f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/P3377)\uff0c~~\u53cc\u500d\u7ecf\u9a8c~~\u3002\n\n~~\u7b80\u7b80\u5355\u5355~~\u628a\u5de6\u504f\u6811\u6a21\u677f\u6253\u4e0a\u5c31\u884c\u4e86\uff0c\u6ce8\u610f\u6570\u636e\u8303\u56f4\uff08n<=1e6,m<=1e5\uff09\u3002\n\n\n\n------------\n~~\u4ee5\u4e0a\u4e3a\u626f\u6de1\u5185\u5bb9~~\uff0c\u6b63\u6587\u5f00\u59cb\u3002\n\n\n\n------------\n\n\u9898\u610f\uff08\u7ffb\u8bd1\u6210~~\u672f\u8bed~~\uff09\uff1a\n\n\u5bf9n\u4e2a\u5c0f\u6839\u5806\u505am\u4e2a\u64cd\u4f5c\uff1a\n\nM \uff08x\uff0cy\uff09\u5408\u5e76x\u6240\u5728\u5806\u548cy\u6240\u5728\u5806\uff08\u5982\u679cx\u6216y\u88ab\u5220\u9664\u5219\u5ffd\u7565\u6b21\u64cd\u4f5c\uff09\uff1b\n\nK\uff08x\uff09\u8f93\u51fax\u6240\u5728\u5806\u7684\u5806\u9876\u5143\u7d20\u5e76\u5c06\u5176\u5220\u9664\uff0c\u5982\u679cx\u5df2\u7ecf\u88ab\u5220\u9664\u8fd9\u8f93\u51fa0 \uff1b\n\n\n\n------------\n\n\n[\u767e\u5ea6\u767e\u79d1\uff1a\u5de6\u504f\u6811](https://baike.baidu.com/item/\u5de6\u504f\u6811/2181887?fr=aladdin)\u3002\n\n\u5916\u8282\u70b9\uff1a\u6ca1\u6709\u5de6\u5b50\u6811\u6216\u6ca1\u6709\u53f3\u5b50\u6811\u7684\u8282\u70b9\uff1b\n\n\u70b9\u7684\u8ddd\u79bb\uff1a\u70b9\u5230\u5b83\u540e\u4ee3\u4e2d\u79bb\u5b83\u6700\u8fd1\u7684\u5916\u8282\u70b9\u7ecf\u8fc7\u7684\u8fb9\u6570\uff1b\n\n\u5408\u5e76\u65b9\u6cd5\uff08\u5c0f\u6839\u5806\uff09\uff1a\n\n\u8bbe\u8981\u5c06\u5806\u9876\u5143\u7d20\u4e3a Y \u7684\u5806\u5e76\u5165\u5806\u9876\u5143\u7d20\u4e3a X \u7684\u5806\uff08\u8c01\u5e76\u5165\u8c01\u65e0\u6240\u8c13\uff0c\u8fd9\u91cc\u662f\u4e3a\u4e86\u4fbf\u4e8e\u89e3\u91ca\uff09\uff0c\u5219\u5c06X\u4e0eY\u6bd4\u8f83\uff0c\u5982\u679cX>Y\u5c31\u4ea4\u6362X\u4e0eY\uff0c\u5c06Y\u7ee7\u7eed\u4e0eX\u7684\u53f3\u5b50\u8282\u70b9\u6bd4\u8f83\uff08\u9012\u63a8\uff09\u3002\n\n\u540c\u65f6\u5de6\u504f\u6811~~\u8981\u4fdd\u8bc1\u5f80\u5de6\u504f~~\uff0c\u5373\u4fdd\u8bc1\u5de6\u5b50\u8282\u70b9\u7684\u8ddd\u79bb\u8981\u6bd4\u53f3\u5b50\u8282\u70b9\u7684\u8ddd\u79bb\u8981\u5927\u3002\n\n\u5220\u9664\u6700\u5c0f\u7684\u70b9\uff08\u5806\u9876\u5143\u7d20\uff09\u7684\u65b9\u6cd5\uff1a\n\n\u6807\u8bb0\u5806\u9876\u5143\u7d20\u5df2\u5220\u9664\uff0c\u5408\u5e76\u5176\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\uff1b\n\n\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint n,m,a[1000010],d[1000010],ls[1000010],rs[1000010],f[1000010],x,y;//a\u662f\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\uff0cd\u662f\u8282\u70b9\u7684\u8ddd\u79bb\uff0cls\u5de6\u5b50\u8282\u70b9\uff0crs\u53f3\u5b50\u8282\u70b9\uff0cf\u7236\u8282\u70b9\uff08\u5e76\u67e5\u96c6\uff09\nbool b[1000010];//\u662f\u5426\u5df2\u7ecf\u5220\u9664\nchar z;\nint find(int x)\n{\n\tif(f[x]==x)\n\treturn x;\n\treturn f[x]=find(f[x]);\n}//\u5e76\u67e5\u96c6\nint merge(int x,int y)//\u5408\u5e76\uff08\u8fd4\u56de\u5f53\u524d\u8282\u70b9\u7684\u503c\uff09\n{\n\tif(!x||!y)//\u6709\u4e00\u68f5\u6811\u5df2\u7ecf\u7a7a\u4e86\n\treturn x+y;//\u8fd4\u56de\n\tif(a[x]>a[y]||(a[x]==a[y]&&x>y))//\u4ea4\u6362\u6761\u4ef6\n\tswap(x,y);\n\trs[x]=merge(rs[x],y);//\u53f3\u5b50\u8282\u70b9\n\tif(d[ls[x]]<d[rs[x]])//\u5982\u679c\u5de6\u5b50\u8282\u70b9\u8ddd\u79bb\u5c0f\u4e8e\u53f3\u5b50\u8282\u70b9\n\tswap(ls[x],rs[x]);//\u4ea4\u6362\u5de6\u53f3\u5b50\u6811\n\td[x]=d[rs[x]]+1;//\u7b97\u51fa\u5f53\u524d\u70b9\u7684\u8ddd\u79bb\n\treturn x;\n}\nint main()\n{\n\tcin>>n;\n\td[0]=-1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tf[i]=i;\n\t\tcin>>a[i];\n\t}\n\tcin>>m; \n\twhile(m--)\n\t{\n\t\tcin>>z;\n\t\tif(z=='M')\n\t\t{\n\t\t\tcin>>x>>y;\n\t\t\tif(b[x]||b[y])\n\t\t\tcontinue;//\u6709\u4e00\u4e2a\u70b9\u5df2\u7ecf\u88ab\u5220\u9664\u4e86\n\t\t\tx=find(x);\n\t\t\ty=find(y);\n\t\t\tif(x==y)//\u5df2\u7ecf\u5728\u540c\u4e00\u4e2a\u5806\u4e2d\u4e86\n\t\t\tcontinue;\n\t\t\tf[x]=f[y]=merge(x,y);\n\t\t}\n\t\telse if(z=='K')\n\t\t{\n\t\t\tcin>>x;\n\t\t\tif(b[x])//\u5df2\u7ecf\u5220\u9664\n\t\t\t{\n\t\t\t\tcout<<0<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tx=find(x);\n\t\t\tcout<<a[x]<<endl;\n\t\t\tb[x]=1;//\u6807\u8bb0\u5220\u9664\n\t\t\tf[x]=f[ls[x]]=f[rs[x]]=merge(ls[x],rs[x]);//\u5408\u5e76\u5de6\u53f3\u5b50\u6811\n\t\t\tls[x]=rs[x]=d[x]=0;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1583330295,
        "uid": 169422,
        "name": "v\u0435ctorwyx",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2713 \u3010\u7f57\u9a6c\u6e38\u620f\u3011"
    },
    {
        "content": "\u8bbe $c_i$ \u4e3a\u7b2c $i$ \u6b21\u64cd\u4f5c\u7684\u5b9e\u9645\u4ee3\u4ef7\uff0c$t_i$ \u4e3a\u7b2c $i$ \u6b21\u64cd\u4f5c\u540e\u6570\u636e\u7ed3\u6784\u7684\u52bf\uff0c\u6211\u4eec\u6709\n\n$$c_i+(t_i-t_{i-1})=k_i$$\n\n$(t_i-t_{i-1})$ \u4e3a\u8be5\u6b21\u64cd\u4f5c\u540e\u52bf\u53d8\u5316\u7684\u91cf\uff0c$k_i$ \u5e94\u4e3a\u4e00\u4e2a\u6052\u5b9a\u7684\u5bb9\u6613\u8ba1\u7b97\u7684\u503c\u3002\n\n\u6240\u4ee5\n\n$$\\sum_{i=1}^n (c_i+(t_i-t_{i-1}))=\\sum_{i=1}^nk_i$$\n\n\u5f97\n\n$$\\sum_{i=1}^n c_i=\\sum_{i=1}^nk_i-t_n+t_0$$\n\n---\n\n\u659c\u5806\uff08skew heap\uff09\u662f\u4e00\u79cd\u7b80\u6613\u7684\u53ef\u5e76\u5806\u3002\n\n\u5bf9\u4e8e\u5c0f\u6839\u5806\uff0c\u5408\u5e76\u65f6\uff0c\u6bd4\u8f83\u4e24\u5806\u7684\u6839\uff0c\u5c06\u6743\u503c\u5c0f\u7684\u6839\u4f5c\u4e3a\u65b0\u5806\u7684\u6839\uff0c\u5c06\u53e6\u4e00\u4e2a\u5806\u4e0e\u65b0\u5806\u7684\u53f3\u5b50\u6811\u5408\u5e76\uff0c\u7136\u540e\u4ea4\u6362\u65b0\u5806\u7684\u5de6\u53f3\u5b50\u6811\u3002\n\n\u5b9a\u4e49\uff1a\n\n\u82e5\u4e00\u4e2a\u8282\u70b9\u7684\u53f3\u5b50\u6811\u5927\u5c0f\u4e0d\u5c0f\u4e8e\u4ee5\u8be5\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\u7684\u4e00\u534a\uff0c\u5219\u79f0\u8fd9\u4e2a\u8282\u70b9\u4e3a\u91cd\u8282\u70b9\uff0c\u5426\u5219\u4e3a\u8f7b\u8282\u70b9\u3002\u5b9a\u4e49\u659c\u5806\u7684\u52bf\u4e3a\u8be5\u659c\u5806\u4e2d\u91cd\u8282\u70b9\u7684\u4e2a\u6570\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5408\u5e76\u4e24\u4e2a\u659c\u5806\u76f8\u5f53\u4e8e\u628a\u4e24\u4e2a\u5806\u4ece\u6839\u5230\u6700\u53f3\u8282\u70b9\u7684\u8def\u5f84\u5408\u5e76\u540e\u4f5c\u4e3a\u65b0\u5806\u7684\u4ece\u6839\u5230\u6700\u5de6\u8282\u70b9\u7684\u8def\u5f84\u3002\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u4e24\u4e2a\u5806\u6781\u53f3\u8def\u5f84\u7684\u548c\u3002\n\n\u8bbe $h_1,l_1,h_2,l_2$ \u5206\u522b\u4e3a\u7b2c\u4e00\u4e2a\u5806\u7684\u6781\u53f3\u8def\u5f84\u4e0a\u91cd\u8282\u70b9\u7684\u4e2a\u6570\uff0c\u7b2c\u4e00\u4e2a\u5806\u7684\u6781\u53f3\u8def\u5f84\u4e0a\u8f7b\u8282\u70b9\u7684\u4e2a\u6570\uff0c\u7b2c\u4e8c\u4e2a\u5806\u7684\u6781\u53f3\u8def\u5f84\u4e0a\u91cd\u8282\u70b9\u7684\u4e2a\u6570\uff0c\u7b2c\u4e8c\u4e2a\u5806\u7684\u6781\u53f3\u8def\u5f84\u4e0a\u8f7b\u8282\u70b9\u7684\u4e2a\u6570\u3002$c=h_1+l_1+h_2+l_2$\u3002\n\n\u53d1\u73b0\uff0c\u4e00\u4e2a\u91cd\u8282\u70b9\u5408\u5e76\u540e\u5fc5\u7136\u53d8\u6210\u8f7b\u8282\u70b9\u3002\u56e0\u4e3a\u6211\u4eec\u8981\u5206\u6790\u6700\u574f\u60c5\u51b5\u4e0b\u7684\u644a\u8fd8\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u6240\u4ee5\u6211\u4eec\u4ee4\u52bf\u7684\u53d8\u5316\u6700\u5927\uff0c\u5373\u6240\u6709\u8f7b\u8282\u70b9\u53d8\u4e3a\u91cd\u8282\u70b9\uff0c\u4e5f\u5373 $t_i-t_{i-1}=-h_1+l_1-h_2+l_2$\uff0c\u90a3\u4e48 $k_i=c+(t_i-t_{i-1})=2(l_1+l_2)$\u3002\n\n\u6211\u4eec\u5c06\u8bc1\u660e $l_1+l_2=O(\\log n)$\u3002\u663e\u7136\u6709\u6bcf\u4e2a\u8f7b\u8282\u70b9\u7684\u53f3\u5b50\u6811\u5c0f\u4e8e\u4ee5\u8be5\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\u7684\u4e00\u534a\uff0c\u6240\u4ee5\u6bcf\u6b21\u5b50\u6811\u89c4\u6a21\u81f3\u5c11\u7f29\u51cf\u4e00\u534a\uff0c\u6545\u800c\u4e3a $O(\\log n)$\u3002\n\n\u4ee3\u5165\u52bf\u80fd\u5206\u6790\u7684\u5f0f\u5b50\u53ef\u5f97\n\n$$\\sum_{i=1}^n c_i=n\\log n-t_n+t_0$$\n\n\u6839\u636e\u5b9a\u4e49\uff0c\u6211\u4eec\u77e5\u9053 $t_n=O(n)$\uff0c$t_0=0$\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u644a\u8fd8\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$\u3002\n\n[\u5c01\u88c5\u6a21\u677f](https://www.luogu.com.cn/paste/ve4sq3mb)\uff08\u53ef\u4ee5\u901a\u8fc7 P2713\uff09\n\n\u4ee5\u4e0a\u3002",
        "postTime": 1614747810,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u52bf\u80fd\u5206\u6790\u548c\u659c\u5806\u53ca\u5176\u644a\u8fd8\u590d\u6742\u5ea6\u8bc1\u660e"
    },
    {
        "content": "## ~~**\u8fd9\u9898\u4e00\u770b\u5c31\u662f\u5de6\u504f\u6811**~~ \u4e3a\u4ec0\u4e48\u8fd9\u9898\u662f\u5de6\u504f\u6811\u5462\n\n~~\u90fd\u8bf4\u4e86\u4e00\u773c\u770b\u51fa\u6765\u4e86\uff01\u56e0\u4e3a\u6211\u6700\u8fd1\u505a\u7684\u5de6\u504f\u6811LUOGU\u7ed9\u6211\u63a8\u8350\u7684~~\n\n\u8fd9\u91cc\u51fa\u73b0\u4e86\u4e24\u961f\u4eba\u7684**\u5408\u5e76**\uff0c\u5927\u591a\u6570\u4eba\u80af\u5b9a\u7acb\u523b\u60f3\u5230**\u5e76\u67e5\u96c6**\u3002\n\n\u4f46\u662f\u8fd9\u91cc\u53c8\u51fa\u73b0\u4e86**\u53bb\u6389\u96c6\u5408\u5185\u6700\u5c0f\u503c**\uff08\u780d\u5934\uff09\uff0c\u8fd9\u5c31\u8d85\u51fa\u4e86\u5e76\u67e5\u96c6\u7684\u80fd\u529b\u8303\u56f4\u4e86\n\n\u90a3\u4e48\u6211\u4eec\u60f3\u4e00\u4e0b\u780d\u5934\u662f\u8c01\u80fd\u5e72\u7684\u5462\uff1f\n\n\u6211\u4eec\u5f88\u5bb9\u6613\u80fd\u60f3\u5230**\u5806**\n\n\u73b0\u5728\u601d\u8def\u6e05\u6670\u4e86\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u540c\u65f6\u5177\u6709\u5e76\u67e5\u96c6\u548c\u5806\u7684\u529f\u80fd\u7684\u6570\u636e\u7ed3\u6784\u3002\n\n\u56e0\u6b64\u672c\u9898\u4e3b\u89d2**\u5de6\u504f\u6811**\u6a2a\u7a7a\u51fa\u4e16\n\n## \u89e3\u91ca\u4e00\u4e0b\u5de6\u504f\u6811\u662f\u5565\n\n\u5de6\u504f\u6811\u4e4d\u4e00\u542c\u89c9\u5f97\u80af\u5b9a\u662f\u70b9\u90fd\u96c6\u4e2d\u5728\u5de6\u8fb9\u7684\u6811\n\n\u8fd9\u79cd\u60f3\u6cd5\u5927\u81f4\u662f\u5bf9\u7684\uff0c\u4f46\u4e5f\u4e0d\u5b8c\u5168\u5bf9\u3002\n\n\u6bd4\u5982\u4e0b\u56fe\uff0c\u5de6\u8fb9\u53ea\u6709\u4e00\u4e2a\u70b9\uff0c\u53f3\u9762\u6709\u4e00\u6761\u94fe\n\n![\u8fd9\u9897\u6811\u4ecd\u7136\u662f\u5de6\u504f\u6811\uff0c\u4f46\u662f\u5b83\u5de6\u8fb9\u53ea\u6709\u4e00\u4e2a\u70b9\uff0c\u53f3\u9762\u6709\u4e00\u6761\u94fe](https://cdn.luogu.com.cn/upload/image_hosting/lpokt00k.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u6240\u4ee5\u5de6\u504f\u6811\u7684\u6b63\u7ecf\u5b9a\u4e49\u662f\uff1a\n\n1.\u662f\u4e8c\u53c9\u5806\n\n2.\u5b9a\u4e49\u4e00\u4e2a\u8ddd\u79bbd\uff0c\u4e00\u4e2a\u8282\u70b9\u7684d\u5c31\u662f\u8be5\u8282\u70b9\u5230\u6700\u8fd1\u7684\u4e00\u4e2a\u4e0d\u6ee1\u7684\u8282\u70b9\u7684\u8ddd\u79bb\uff08\u4e0d\u6ee1\u5c31\u662f\u513f\u5b50\u6570\u91cf\u5c0f\u4e8e2\uff09\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\uff0c\u4ed6\u7684\u5de6\u513f\u5b50d >= \u53f3\u513f\u5b50d\n\n\u7279\u522b\u7684\uff0c\u7a7a\u8282\u70b9\u7684d\u5b9a\u4e49\u4e3a-1\n\n\u4f18\u79c0\u7684\u662f\uff0c\u5de6\u504f\u6811\u7684\u4e24\u4e2a\u57fa\u672c\u64cd\u4f5c\u5c31\u662f\u5408\u5e76\u548c\u780d\u5934\n\n## \u98df\u7528\u65b9\u6cd5\n\n\u7531\u4e8e\u6709\u8fd9\u4e24\u79cd\u795e\u5947\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u5341\u5206\u6109\u5feb\u5730\u7528\u8fd9\u4e1c\u897f\u5207\u6389\u8fd9\u9053\u9898\n\n\u6240\u4ee5\u5de6\u504f\u6811\u5982\u4f55\u98df\u7528\u5462\uff1f\n\nPS\uff1a\u63a5\u4e0b\u6765\u662f\u4ee3\u7801\uff0c\u7531\u4e8e\u6211\u5f88\u83dc\uff0c\u5982\u679c\u51fa\u9505\u53ef\u4ee5\u8bc4\u8bba\u533a\u63d0\u793a\u6216\u8005\u79c1\u4fe1\u6211\u90fd\u53ef\u4ee5\n\nPPS\uff1a\u4e0d\u559c\u52ff\u55b7\u54e6\uff0c\u6211\u53ea\u662f\u4e2a\u65e0\u8f9c\u7684\u5c0f\u83dc\u9e21\u3002\u3002\u3002\n\n\u5de6\u504f\u6811\u7ed3\u6784\u4f53\uff08\u5f53\u7136\u4e5f\u53ef\u4ee5\u5f00\u6570\u7ec4\uff09\n```cpp\nstruct LT{\n\t\n\tint fa,ls,rs;\n\tint val,dis;\n\t//fa \u76f8\u5f53\u4e8e\u5e76\u67e5\u96c6\u7684fa\n   //ls,rs Left_Son,Right_Son\n   //val \u8fd9\u4e2a\u8282\u70b9\u7684\u503c\n   //dis \u4e0a\u9762\u5b9a\u4e49\u7684d\n    \n}lt[MaxN*2];\n```\n\u5e76\u67e5\u96c6\uff0c\u8fd9\u5c31\u4e0d\u591a\u8bf4\u4e86\n```cpp\nint find(int x)\n{\n\tif(x == lt[x].fa) {return x;}\n\telse {return lt[x].fa=find(lt[x].fa);}\n}\n```\n\u5173\u952e\u7684\u5408\u5e76\u64cd\u4f5c\n\nPS\uff1a\u5de6\u504f\u6811\u7684push\u64cd\u4f5c\u5c31\u662f\u5de6\u504f\u6811\u548c\u4e00\u4e2a\u5355\u70b9\u8fdb\u884c\u5408\u5e76\n```cpp\nint merge(int x,int y) //\u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u7684\u662f\u8be5\u8282\u70b9\u7684\u53f3\u513f\u5b50\uff0c\u4e5f\u662f\u63a5\u4e0b\u6765\u7684\u7236\u4eb2\u8282\u70b9 \n{\n\tif(x == 0 || y == 0) {return x+y;} //\u5982\u679c\u4e00\u8fb9\u662f\u7a7a\u7684\uff0c\u7236\u4eb2\u5c31\u662f\u975e\u7a7a\u7684\uff0c\u5f53\u7136\u90fd\u7a7a\u5c31\u662f\u7a7a\u4e86 \n\tif(lt[x].val > lt[y].val) {swap(x,y);} //\u4fdd\u8bc1\u5806\u6027\u8d28 \n\t\n\tlt[x].rs=merge(lt[x].rs,y); //\u9012\u5f52\uff0c\u8fd9\u91cc\u53ef\u4ee5\u5f97\u5230\u5f53\u524d\u8282\u70b9\u7684\u53f3\u513f\u5b50 \n\tlt[lt[x].rs].fa=x; //\u8fde\u63a5\u53f3\u513f\u5b50\u5230\u5f53\u524d\u8282\u70b9 \n\tif(lt[lt[x].rs].dis > lt[lt[x].ls].dis) {swap(lt[x].ls,lt[x].rs);} //\u7ef4\u62a4\u5de6\u504f\u6027\u8d28\uff0c\u4e0d\u7b26\u5408\u5c31\u4ea4\u6362\u5de6\u53f3\u513f\u5b50 \n\tlt[x].dis=lt[lt[x].rs].dis+1; //\u7531\u4e8e\u5de6\u504f\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u6bcf\u4e2a\u8282\u70b9\u7684dis\u90fd\u662f\u53f3\u513f\u5b50dis+1 \n\t\n\treturn x;\n}\n```\n\u780d\u5934\n\n```cpp\nvoid pop(int x)\n{\n\tlt[lt[x].ls].fa=lt[x].ls;\n\tlt[lt[x].rs].fa=lt[x].rs; //\u628a\u5de6\u53f3\u513f\u5b50fa\u53d8\u6210\u81ea\u5df1\uff08\u56e0\u4e3a\u4ed6\u4eec\u63a5\u4e0b\u6765\u53ef\u80fd\u80fd\u6210\u4e3afa\uff09 \n\tlt[x].fa=merge(lt[x].ls,lt[x].rs); //\u5408\u5e76\u5de6\u53f3\u513f\u5b50\u5b64\u7acb\u88ab\u780d\u7684\u5934 \n\tlt[x].ls=lt[x].rs=0;\t//\u5b64\u7acb \n\tlt[x].val=-1; //\u6807\u8bb0\u8be5\u70b9\u5df2\u6b7b \n}\n```\n**\u8fd9\u91cc\u8bf4\u4e00\u53e5\uff0c\u4e00\u5b9a\u8981\u628a\u6b7b\u6389\u7684\u70b9fa\u53d8\u4e3a\u65b0\u7684\u5934**\n\n\u56e0\u4e3a\u8fd9\u4e2a\u6b7b\u70b9\u7684\u53f3\u513f\u5b50\u80fd\u6839\u636e\u5408\u5e76\u64cd\u4f5c\u81ea\u52a8\u66f4\u65b0fa\uff0c\u4f46\u662f\u5b83\u7684\u5de6\u513f\u5b50\u8fd8\u8fde\u7740\u5b83\uff0c\u6240\u4ee5\u5982\u679c\u4e0d\u8fd9\u4e48\u505a\u5e76\u67e5\u96c6\u5c31\u4f1a\u6b7b\u6389\n\n\u603b\u4f53\u4ee3\u7801\u5982\u4e0b\n\nPS\uff1a\u6b64\u4ee3\u7801\u662fAC\u4ee3\u7801\u8bf7\u653e\u5fc3\uff0c\u4f46\u662f\u6211\u8fdb\u884c\u4e86\u9632\u590d\u5236\u7c98\u8d34\u5904\u7406\uff0c\u4e0d\u4f1a\u5f71\u54cd\u770b\u4ee3\u7801\u601d\u8def\uff0c\u4f46\u662f\u4e0d\u80fdAC\uff0c\u6240\u4ee5\u8bf7\u4e0d\u8981\u8fdb\u884c\u590d\u5236\u7c98\u8d34\uff0c\u87f9\u87f9^_^\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n\nusing namespace std;\n\n#define MaxN 100006\n\nint n,m;\n\nstruct LT{\n\t\n\tint fa,ls,rs;\n\tint val,dis;\n\t\n}lt[MaxN*2];\n\nint find(int x)\t//\u627e\u7238\u7238 \n{\n\tif(x == lt[x].fa) {return x;}\n\telse {return lt[x].fa=find(lt[x].fa);}\n}\n\nint merge(int x,int y)\t//\u5408\u5e76 \n{\n\tif(x == 0 || y == 0) {return x+y;}\n\tif(lt[x].val > lt[y].val) {swap(x,y);}\n\t\n\tlt[x].rs=merge(lt[x].rs,y);\n\tlt[lt[x].rs].fa=x;\n\tif(lt[lt[x].rs].dis > lt[lt[x].ls].dis) {swap(lt[x].ls,lt[x].rs);}\n\tlt[x].dis=lt[lt[x].rs].dis+1;\n\t\n\treturn x;\n}\n\nvoid pop(int x)\t//\u780d\u5934 \n{\n\tlt[lt[x].ls].fa=lt[x].ls;\n\tlt[lt[x].rs].fa=lt[x].rs;\n\tlt[x].fa=merge(lt[x].ls,lt[x].rs);\n\tlt[x].ls=lt[x].rs=0;\n\tlt[x].val=-1;\n}\n\nint mian()\n{\n\tlt[0].dis=-1;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tscanf(\"%d\",&lt[i].val);\n\t\tlt[i].fa=i;\n\t\tlt[i].ls=lt[i].rs=0;\n\t}\n\t\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tchar op;\n\t\tcin>>op;\n\t\tif(op == 'M')\t//\u5408\u5e76 \n\t\t{\n\t\t\tint x,y;\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tif(lt[x].val == -1 || lt[y].val == -1) {continue;}\n\t\t\tint fax=find(x),fay=find(y);\t\n\t\t\tif(fax == fay) {continue;}\t//\u8fd9\u91cc\u6ce8\u610f\u4e86\uff0c\u8981\u5408\u5e76\u7684\u4e24\u4e2a\u56e2\u53ef\u80fd\u672c\u6765\u5c31\u662f\u4e00\u4e2a\u56e2\n\t\t\tmerge(fax,fay);\n\t\t}\n\t\telse\t//\u780d\u5934 \n\t\t{\n\t\t\tint x;\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(lt[x].val == -1) {printf(\"0\\n\");continue;}\n\t\t\t\n\t\t\tint fax=find(x);\n\t\t\tprintf(\"%d\\n\",lt[fax].val);\n\t\t\tpop(fax);\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n```\n",
        "postTime": 1579525863,
        "uid": 119792,
        "name": "yuzengshen",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2713 \u3010\u7f57\u9a6c\u6e38\u620f\u3011"
    },
    {
        "content": "## \u88f8\u88f8\u7684\u53ef\u5e76\u5806(\u5de6\u504f\u6811)\n\n\u53ef\u4ee5\u770b\u4e00\u4e0b\u8fd9\u4e2a\u6a21\u677f[\u70b9\u6211,\u70b9\u6211](https://www.luogu.org/problemnew/show/P3377)\n\n\u53ea\u8981\u7a0d\u505a\u6539\u52a8\u5c31\u53ef\u4ee5$AC$\u5566\n\n\u5bf9\u4e8e\u53ef\u5e76\u5806\u6211\u5c31\u4e0d\u4ecb\u7ecd\u4e86\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0b[\u8fd9\u4e2a\u535a\u5ba2](https://www.luogu.org/blog/2e8JR/solution-p3377)\uff0c\u8bb2\u7684\u7279\u522b\u6e05\u695a(~~\u6bd5\u7adf\u6211\u90fd\u662f\u7167\u7740\u8fd9\u4e2a\u6a21\u677f\u5199\u7684~~)\n\n### \u597d\u4e86\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\u5427\n\n\u4ee3\u7801\u5199\u7684\u6709\u70b9\u4e11\uff0c\u5927\u5bb6\u89c1\u8c05 $STO$\n\n~~~cpp\n\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#define N 1000010\nusing namespace std;\nint ch[N][2],val[N],dis[N],f[N],root[N],n,m;\nbool bz[N];\ninline int getf(int x)\n{\n\treturn f[x]?f[x]=getf(f[x]):x;\n}\ninline int merge(int x,int y)\n{\n\tif(x==0||y==0)\n\t\treturn x+y;\n\tif(val[x]>val[y])\n\t\tswap(x,y);\n\tch[x][1]=merge(ch[x][1],y);\n\tif(dis[ch[x][0]]<dis[ch[x][1]])\n\t\tswap(ch[x][0],ch[x][1]);\n\tdis[x]=dis[ch[x][1]]+1;\n\treturn x;\n}\ninline int deletemin(int x)\n{\n\treturn merge(ch[x][0],ch[x][1]);\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&val[i]),\n\t\troot[i]=i;\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tchar comm;\n\t\tgetchar();\n\t\tscanf(\"%c\",&comm);\n\t\tif(comm=='M')\n\t\t{\n\t\t\tint x,y;\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tif(bz[x]||bz[y])\n\t\t\t\tcontinue;\n\t\t\tint fx=getf(x),fy=getf(y);\n\t\t\tif(fx==fy)\n\t\t\t\tcontinue;\n\t\t\tf[fx]=fy;\n\t\t\troot[fy]=merge(root[fx],root[fy]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint x;\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(bz[x])\n\t\t\t\tprintf(\"0\\n\");\n\t\t\telse\n\t\t\t{\n\t\t\t\tint t=getf(x);\n\t\t\t\tprintf(\"%d\\n\",val[root[t]]);\n\t\t\t\tbz[root[t]]=1;\n\t\t\t\troot[t]=deletemin(root[t]);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\n~~~",
        "postTime": 1522190294,
        "uid": 66635,
        "name": "Ervin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2713 \u3010\u7f57\u9a6c\u6e38\u620f\u3011"
    },
    {
        "content": "\u4f60\u4eec\u90fd\u4e0d\u7528pbds\u7684\u5417\uff0c\u53d1\u4e00\u4e2apbds\u7248\u3002\n\n\u5de6\u504f\u6811\u5199\u8d77\u6765\u8fd9\u4e48\u70e6\uff0c\u5f53\u7136\u9009\u62e9pbds\u3002\uff08~~\u6211\u4e0d\u4f1a\u624b\u5199~~\uff09\n\n\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u5408\u5e76\u540e\u4e00\u4e2a\u70b9\u7684\u96c6\u5408\u7f16\u53f7\u3002\u6e05\u6e05\u723d\u723d\u3002\n\u590d\u6742\u5ea6O(nlogn)\u6211\u4eec\u5ffd\u7565\u90a3\u4e2a\u53cd\u963f\u514b\u66fc\u51fd\u6570\u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <ext/pb_ds/priority_queue.hpp>\nusing namespace std;\nconst int maxn = 1e6 + 10;\nint n, m, x, y;\nint dad[maxn], died[maxn], num[maxn], ranks[maxn];\nchar opt;\nstruct cmp1{\n    bool operator() (pair<int, int> a, pair<int, int> b){\n        if(a.second == b.second)\n            return a.first > b.first;\n        return a.second > b.second;\n    }\n};\n__gnu_pbds::priority_queue <pair<int,int> , cmp1> heap[maxn];\nint find(int x){\n    return x == dad[x] ? x : dad[x] = find(dad[x]);\n}\nvoid unionn(int u, int v){\n    int fu = find(u);\n    int fv = find(v);\n    if(fu == fv)\n        return ;\n    if(ranks[fu] > ranks[fv]){\n        dad[fv] = fu;\n        heap[fu].join(heap[fv]);\n    }\n    else{\n        dad[fu] = fv;\n        heap[fv].join(heap[fu]);\n        ranks[fv] += (ranks[fu] == ranks[fv]);\n    }\n\n}\nint main(){\n    cin >> n ;\n    for(int i = 1; i <= n; i++){\n        cin >> x;\n        num[i] = x;\n        dad[i] = i;\n        heap[i].push(make_pair(i, x));\n    }\n    cin >> m;\n    for(int i = 1; i <= m; i++){\n        cin >> opt >> x;\n        if(opt == 'M'){\n            cin >> y;\n            if(died[x] || died[y] || find(x) == find(y))\n                continue;\n            else\n                unionn(x, y);\n        }else{\n            if(died[x]){\n                cout << 0 << endl;\n                continue;\n            }\n            cout << heap[find(x)].top().second << endl;\n            died[heap[find(x)].top().first] = 1;\n            heap[find(x)].pop();\n        }\n    }\n\n    return 0;\n}\n\n\n```",
        "postTime": 1550053525,
        "uid": 100514,
        "name": "\u5c0f\u9ed1AWM",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2713 \u3010\u7f57\u9a6c\u6e38\u620f\u3011"
    },
    {
        "content": "\u968f\u673a\u5408\u5e76\u7684\u968f\u673a\u5806\u4e86\u89e3\u4e00\u4e0b\u3002\n\n\u5408\u5e76\u7684\u65f6\u5019```rand()&1```\u4e00\u4e0b\uff0c\u51b3\u5b9a\u5f80\u5de6\u513f\u5b50\u8fd8\u662f\u53f3\u513f\u5b50\u5408\u5e76\u3002\u7531\u4e8e\u5408\u5e76\u5b8c\u5168\u968f\u673a\uff0c\u4e0d\u53ef\u80fd\u88ab\u5361\u6389\uff0c\u56e0\u800c\u8868\u73b0\u5341\u5206\u4f18\u5f02\u3002\n\n```\n#include<cstdio>\n#include<cctype>\n#include<cstdlib>\n#include<algorithm>\n\nint Read()\n{\n\tint x=0;\n\tchar c=getchar();\n\twhile(!isdigit(c))\n\t\tc=getchar();\n\twhile(isdigit(c))\n\t{\n\t\tx=x*10+(c^48);\n\t\tc=getchar();\n\t}\n\treturn x;\n}\n//\u548c\u666e\u901a\u7684\u659c\u5806\u3001\u5de6\u504f\u6811\u76f8\u540c\nint ch[1000005][2],val[1000005],fa[1000005];\nbool out[1000005];\n\nint merge(int x,int y)\n{\n\tif (!x||!y)\n\t\treturn x+y;\n\tif (val[x]>val[y]||(val[x]==val[y] && x>y))\n\t\tstd::swap(x,y);\n\tint opt=rand()&1;\n    //\u5408\u5e76\u7684\u65f6\u5019\u968f\u673a\u4e00\u4e0b\uff0c\u51b3\u5b9a\u5f80\u54ea\u8fb9\u8d70\u8def\n\tch[x][opt]=merge(ch[x][opt],y);\n\tfa[ch[x][opt]]=x;\n\treturn x;\n}\n\nint find(int x)\n{\n\twhile(fa[x])\n\t\tx=fa[x];\n\treturn x;\n}\n\nvoid pop(int x)\n{\n\tval[x]=-1;\n\tfa[ch[x][0]]=fa[ch[x][1]]=0;\n\tmerge(ch[x][0],ch[x][1]);\n}\n\nint main()\n{\n\tsrand(19260817);\n\tint n=Read(),x,y;\n\tfor(int i=1; i<=n; i++)\n\t\tval[i]=Read();\n\tint m=Read();\n\tchar opt[3];\n\twhile(m--)\n\t{\n\t\tscanf(\"%s\",opt);\n\t\tif(opt[0]=='M')\n\t\t{\n\t\t\tx=Read(),y=Read();\n\t\t\tif(val[x]==-1||val[y]==-1||(x=find(x))==(y=find(y)))\n\t\t\t\tcontinue;\n\t\t\tmerge(x,y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tx=Read();\n\t\t\tif(val[x]==-1)\n\t\t\t\tputs(\"0\");\n\t\t\telse\n\t\t\t{\n\t\t\t\tx=find(x);\n\t\t\t\tprintf(\"%d\\n\",val[x]);\n\t\t\t\tpop(x);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1540029578,
        "uid": 53374,
        "name": "SuperJvRuo",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2713 \u3010\u7f57\u9a6c\u6e38\u620f\u3011"
    },
    {
        "content": "\u8003\u8651priority_queue+\u5e76\u67e5\u96c6\u505a\u6cd5\u3002\n\n- M\u64cd\u4f5c\uff0c\u5408\u5e76\u4e24\u4e2apq\n- K\u64cd\u4f5c\uff0c\u5220\u9664pq\u7684\u6700\u5c0f\u503c\n\n\u590d\u6742\u5ea6$O(\\mathrm{nlogn})$\uff0c\u5f00$O_2$\u53ef\u8fc7\n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<iostream>\nusing namespace std;\nconst int N=1e6+50;\ntypedef pair<int,int> pr;\npriority_queue<pr>s[N];\ninline void rad(int &_){\n    static char ch;\n    while(ch=getchar(),ch<'0'||ch>'9');_=ch-48;\n    while(ch=getchar(),ch<='9'&&ch>='0')_=_*10+ch-48;\n}\nint n,m,x,y,opt;\nint fa[N],vis[N];char S[5];\nint gf(int u){return u==fa[u]?u:fa[u]=gf(fa[u]);}\nint main(){\n\trad(n);\n\tfor(int i=1;i<=n;i++){\n\t\trad(x);\n\t\ts[i].push(pr(-x,i));\n\t}\n\tfor(int i=1;i<=n;i++)fa[i]=i;\n\trad(m);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%s\",S);\n\t\tif(S[0]=='M'){\n\t\t\trad(x);rad(y);\n\t\t\tif(vis[x]|vis[y])continue;\n\t\t\tx=gf(x);y=gf(y);\n\t\t\tif(x==y)continue;\n\t\t\tfa[x]=y;\n\t\t\twhile(!s[x].empty())s[y].push(s[x].top()),s[x].pop();//\u5408\u5e76\u4e24\u4e2apq\n\t\t}else{\n\t\t\trad(x);\n\t\t\tif(vis[x])puts(\"0\");\n\t\t\telse{\n\t\t\t\tx=gf(x);\n\t\t\t\tif(s[x].empty())puts(\"0\");\n\t\t\t\telse{\n\t\t\t\t\ty=-s[x].top().first;\n\t\t\t\t\twhile(!s[x].empty()){\n\t\t\t\t\t\tif(y==-s[x].top().first)\n\t\t\t\t\t\tvis[s[x].top().second]=1,s[x].pop();//\u5220\u9664\u6700\u5c0f\u503c\n\t\t\t\t\t\telse break;\n\t\t\t\t\t}\n\t\t\t\t\tprintf(\"%d\\n\",y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n```",
        "postTime": 1554278548,
        "uid": 50092,
        "name": "da32s1da",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2713 \u3010\u7f57\u9a6c\u6e38\u620f\u3011"
    },
    {
        "content": "\u5c31\u662f\u4e00\u6a21\u677f\u9898\u3002\n\n\u5408\u5e76\u5c31\u76f4\u63a5merge\u3002\n\npop\u5c31\u662f\u5c06\u81ea\u5df1\u7684\u503c\u8bbe\u4e3a\u4e00\uff0c\u518d\u5c06\u81ea\u5df1\u7684\u5de6\u53f3\u513f\u5b50\u5408\u5e76\u5373\u53ef\u3002\n\n\u67e5\u8be2\u76f4\u63a5\u627e\u5230\u5806\u9876\uff0c\u8f93\u51fa\u3002\n\n[\u6a21\u677f\u5de6\u504f\u6811](https://www.cnblogs.com/2017gdgzoi44/p/11377317.html)\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint dis[1000001],ch[1000001][2],fa[1000001],n,m,x,y,xx,yy,val[1000001];\nchar op[2];\nint merge(int x,int y)\n{\n\tif(!x||!y)\n\t{\n\t\treturn x+y;\n\t}\n\tif(val[x]>val[y]||(val[x]==val[y]&&x>y))\n\t{\n\t\tswap(x,y);\n\t}\n\tch[x][1]=merge(ch[x][1],y);\n\tif(dis[ch[x][0]]<dis[ch[x][1]])\n\t{\n\t\tswap(ch[x][0],ch[x][1]);\n\t}\n\tfa[x]=fa[ch[x][0]]=fa[ch[x][1]]=x;\n\tdis[x]=dis[ch[x][1]]+1;\n\treturn x;\n}\nint getfa(int x)\n{\n\tif(x!=fa[x])\n\t{\n\t\treturn fa[x]=getfa(fa[x]);\n\t}\n\treturn x;\n}\nvoid pop(int x)\n{\n\tval[x]=-1;\n\tfa[ch[x][0]]=ch[x][0];\n\tfa[ch[x][1]]=ch[x][1];\n\tfa[x]=merge(ch[x][0],ch[x][1]);\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tdis[0]=-1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfa[i]=i;\n\t\tscanf(\"%d\",&val[i]);\n\t}\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%s%d\",op,&x);\n\t\tif(op[0]=='M')\n\t\t{\n\t\t\tscanf(\"%d\",&y);\n\t\t\tif(x==y||val[x]==-1||val[y]==-1)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\txx=getfa(x);\n\t\t\tyy=getfa(y);\n\t\t\tif(xx!=yy)\n\t\t\t{\n\t\t\t\tfa[xx]=fa[yy]=merge(xx,yy);\n\t\t\t}\n\t\t}else{\n\t\t\tif(val[x]==-1)\n\t\t\t{\n\t\t\t\tputs(\"0\");\n\t\t\t}else{\n\t\t\t\txx=getfa(x);\n\t\t\t\tprintf(\"%d\\n\",val[xx]);\n\t\t\t\tpop(xx);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1566204490,
        "uid": 103334,
        "name": "Honor\u8a89",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2713 \u3010\u7f57\u9a6c\u6e38\u620f\u3011"
    },
    {
        "content": "### \u786e\u5b9e\u662f\u9053\u5de6\u504f\u6811\u88f8\u9898\n[\u6a21\u677f P3377](https://www.luogu.org/problemnew/show/P3377)\n#### \u601d\u8def\uff1a\n```cpp\n\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4,\n\u800c\u6211\u4eec\u5728\u8def\u5f84\u538b\u7f29\u4e4b\u540e,\u5fc5\u987b\u8981\u5728Pop\u540e\uff0c\n\u7ed9Pop\u6389\u7684\u70b9\u4e00\u4e2a\u6307\u9488\u6307\u5411\u65b0\u7684\u6839(\u5426\u5219\u5c31\u4f1a\u76f4\u63a5\u65ad\u6389)\n\n```\n\uff08\u6e90\u81ea\uff1a[@_\u768e\u6708\u534a\u6d12\u82b1\u5de8\u4f6c](https://www.luogu.org/space/show?uid=28313)\uff09 Orz\n\n\u7279\u522b\u63d0\u793a\uff1a\n\n\u6ce8\u610f\u5728\u9898\u4e2d\u5b57\u6bcd\u201cM\u201d\uff0c\u201cK\u201d\u7684\u5904\u7406\u7528cin>>(\u65e0\u89c6\u6362\u884c\u7b26\u7b49\u7b49la ji wan yi)\n\n\u4e0d\u7136getchar\uff0cscanf\u5751\u54ed\u4f60QAQ\uff08\u67d0Mo\u7684\u4eb2\u8eab\u7ecf\u5386\uff09\n\nCode\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1e6+5;\n#define ls tree[x].son[0]\n#define rs tree[x].son[1]\nint n,m,b,c;char a;\n\nstruct node{\n    int rt,dis,son[2],val;\n}tree[maxn];\n\ninline void s_wap(int &x,int &y){x^=y^=x^=y;}//get\u5230\u82b1\u59d0\u7684\u59ff\u52bf\n\ninline int merge(int x,int y){\n    if(!x||!y) return x+y;\n    if(tree[x].val>tree[y].val||(tree[x].val==tree[y].val&&x>y)) s_wap(x,y);\n    rs=merge(rs,y);\n    if(tree[rs].dis>tree[ls].dis) swap(ls,rs);\n    tree[rs].rt=tree[ls].rt=tree[x].rt=x; \n    tree[x].dis=tree[rs].dis+1;\n    return x;\n}\n\ninline int find(int x){\n    return x==tree[x].rt ? x:tree[x].rt=find(tree[x].rt);\n}\n\ninline void Pop(int x){\n    tree[x].val=-1;tree[ls].rt=ls;tree[rs].rt=rs;tree[x].rt=merge(ls,rs);\n}\n\nint main(){\n    scanf(\"%d\",&n);\n    tree[0].dis=-1;\n    for(int i=1;i<=n;++i){\n        tree[i].rt=i;\n        scanf(\"%d\",&tree[i].val); \n    }\n    scanf(\"%d\",&m);\n    while(m--){\n    \tcin>>a;\n        scanf(\"%d\",&b);\n        if(a=='M'){\n            scanf(\"%d\",&c);\n            if(tree[c].val==-1||tree[b].val==-1) continue;\n            int fb=find(b),fc=find(c);\n            if(fb!=fc) tree[fb].rt=tree[fc].rt=merge(fb,fc);\n        }else{\n            if(tree[b].val==-1) puts(\"0\");\n            else printf(\"%d\\n\",tree[find(b)].val),Pop(find(b));\n        }\n    }\n    return 0;\n}\n```\n```cpp\n\u5bf9\u4e8e\u4e4b\u524d\u6240\u8bf4\u7684cin>>a\n\u5176\u5b9e\u53ef\u4ee5\u8fd9\u4e48\u5199\uff1a\n  getchar();getchar();\n  scanf(\"%c\",&a);\n\u4f46\u8fd9\u53ea\u9488\u5bf9\u8fd9\u9898\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u9898\u90fd\u884c\uff0c\u614e\u7528\u3002\n\u7528\u7684\u76ee\u7684\uff1a\u7701\u65f6\uff08\u9488\u5bf9\u4e8eLinux\uff0c\u975eWindows\uff09\n\uff08\u6216\u8005\u4f60\u53ef\u4ee5\u5728cin>>a\u4e4b\u524d\u7684scanf(\"%d\\n\",&m);\uff09\n```\nrp++,\u7ba1\u7406\u5927\u5927\u6c42\u8fc7QAQ",
        "postTime": 1562664280,
        "uid": 109381,
        "name": "Mosher",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2713 \u3010\u7f57\u9a6c\u6e38\u620f\u3011"
    },
    {
        "content": "### \u4f7f\u7528\u5de6\u504f\u6811\u5373\u53ef\n\u5148\u5229\u7528\u5e76\u67e5\u96c6\u7684\u601d\u60f3\u5c06\u6bcf\u4e00\u4e2a\u4eba\u8bbe\u6210\u4e00\u4e2a\u72ec\u7acb\u7684\u56e2\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2amerge\u64cd\u4f5c\uff0c\u5408\u5e76i,j\u6240\u5728\u7684\u4e24\u4e2a\u5806\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2akill\u64cd\u4f5c\uff0c\u4ecei\u6240\u5728\u7684\u5806\u4e2d\u5220\u9664i\u3002\n\n\u6ce8\u610f\u8bb0\u5f97\u6bcf\u4e2a\u4eba\u7684\u6b7b\u6d3b\uff0c\u5bf9\u4e8e\u5df2\u6b7b\u7684\u4eba\u7684\u64cd\u4f5c\u81ea\u52a8\u5ffd\u7565\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```c\n#include<iostream>\n#include<cstdio>\n#define N 5000002\nusing namespace std;\nint a[N],b,n,c,m,k,l,ls[N],rs[N],fa[N],dis[N],u,v,t,r[N];\nbool d[N];\nchar p;\ninline int read(){\n    char v=getchar();\n    int s=0;\n    while(v<'0'||v>'9')v=getchar();\n    while(v>='0'&&v<='9'){\n        s=(s<<3)+(s<<1)+v-'0';\n        v=getchar();\n    }\n    return s;\n}\nint merge(int x,int y){\n\tif(!x||!y)return x+y;\n\tif(a[x]>a[y])swap(x,y);\n\trs[x]=merge(rs[x],y);\n\tif(dis[ls[x]]<dis[rs[x]])swap(ls[x],rs[x]);\n\tif(!rs[x])dis[x]=0;\n\telse dis[x]=dis[rs[x]]+1;\n\treturn x;\n}\nint root(int s){\n\tif(fa[s]==s)return s;\n\tfa[s]=root(fa[s]);\n\treturn fa[s];\n}\nint main(){\nn=read();for(int i=1;i<=n;++i)fa[i]=i;\nfor(int i=1;i<=n;++i)a[i]=read(),r[i]=i;\nm=read();\n\nfor(int i=1;i<=m;++i){\n\tp=getchar();\n\twhile(p!='M'&&p!='K')p=getchar();\n\tif(p=='M'){\n    u=read();\n\tv=read();\n\tif(!d[u]&&!d[v]){u=root(u);v=root(v);if(u==v)continue;\n\tfa[u]=v;\n\tr[v]=merge(r[u],r[v]);}\n\t}\t\n\telse{\n\t\tu=read();\n\t\tif(d[u])printf(\"0\\n\");\n\t\telse{\n\t\t\tu=root(u);\n\t\t\tprintf(\"%d\\n\",a[r[u]]);\n\t\t\td[r[u]]=1;\n\t\t\tr[u]=merge(ls[r[u]],rs[r[u]]);\n\t\t}\n\t}\n\t\n}\n// for(int i=1;i<=n;i++)cout<<root(i)<<\" \";\n \n}\n```\n",
        "postTime": 1559458337,
        "uid": 41476,
        "name": "gyh20",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2713 \u3010\u7f57\u9a6c\u6e38\u620f\u3011"
    },
    {
        "content": "\u5e76\u67e5\u96c6+\u7ebf\u6bb5\u6811\u64cd\u4f5c\u601d\u8def\uff0c\u5e76\u67e5\u96c6\u5c31\u662f\u627e\u7238\u7238\uff0c\u627e\u7956\u5b97\uff0c\u7ebf\u6bb5\u6811\u5c31\u662f\u627e\u513f\u5b50\u5e76\u4e14\u4fee\u6539\u6700\u5c0f\u503c\u3002\n\n\u4ec0\u4e48\u610f\u601d\u5462\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u64cd\u4f5c\u753b\u56fe\uff0c\u4e24\u4e2a\u8282\u70b9\u5e76\u5165\u4e00\u4e2a\u8282\u70b9\uff08\u5408\u5e76\uff09\u53ef\u4ee5\u770b\u4f5c\u4e24\u4e2a\u70b9\u7684\u6839\u8282\u70b9\u4e3a\u5e76\u5165\u7684\u90a3\u4e2a\u8282\u70b9\uff0c\u4e8e\u662f\u64cd\u4f5c\u5b8c\u540e\u6211\u4eec\u53d1\u73b0\u4ed6\u5efa\u7acb\u4e86\u4e00\u9897\u4e8c\u53c9\u6811\u3002\n\n\u6bcf\u6b21\u5408\u5e76\u5c31\u662f\u5e76\u67e5\u96c6\uff0c\u987a\u4fbf\u5224\u65ad\u4e00\u4e0b\u4e0b\u3002\n\n\u90a3\u4e48kill\u5462\uff1fkill\u5176\u5b9e\u5c31\u662f\u7c7b\u4f3c\u7ebf\u6bb5\u6811\u64cd\u4f5c\uff0c\u6211\u4eec\u5148\u627e\u5230i\u53f7\u70b9\u7684\u6839\u8282\u70b9\uff0c\u7136\u540e\u4f9d\u6b21\u4e0b\u8bbf\uff0c\u627e\u5230\u540e\u66f4\u6539\u5176\u8282\u70b9\u503c\u4e3a\u65e0\u7a77\u5927\uff08\u968f\u4fbf\u5566\uff09\uff0c\u7136\u540e\u4e0a\u4f20\u7684\u65f6\u5019\u66f4\u65b0\u5373\u53ef\uff0c\u7b54\u6848\u5c31\u662f\u4e00\u5f00\u59cb\u7684\u6839\u8282\u70b9\u7684\u503c\u3002\n\n\u8d34\u4e0b\u4ee3\u7801\uff08\u665a\u4e0a\u809d\u9898\u592a\u7d2f\u4e86\uff01\uff09\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\n\nint n,m,p;\n\nint l[6000000];\nint r[6000000];\nint minn[6000000];\nint pr[6000010];\nbool ok[1000010];\nchar c[5];\n\nint findfa(int x)\n{\n    if(pr[x]==x||pr[x]==0)\n    {\n        pr[x]=x;\n        return x;\n    }\n    return pr[x]=findfa(pr[x]);\n}\n\nvoid mix(int x,int y)\n{\n    if(ok[x]||ok[y]||findfa(x)==findfa(y))\n        return ;\n    else\n    {\n        int ll,rr;\n        ll=findfa(x);\n        rr=findfa(y);\n        p++;\n        minn[p]=min(minn[ll],minn[rr]);\n        l[p]=ll;\n        r[p]=rr;\n        pr[rr]=p;\n        pr[ll]=p;\n    }\n}\n\nvoid change(int x)\n{\n    //cout<<x<<endl;\n    if(minn[l[x]]>1e7&&minn[r[x]]>1e7)\n    {\n        ok[x]=1;\n        minn[x]=1e9;\n        return ;\n    }\n    if(l[x]==0&&r[x]==0)\n    {\n        ok[x]=1;\n        minn[x]=1e9;\n        return ;\n    }\n    if(minn[l[x]]==minn[x])\n        change(l[x]);\n    if(minn[r[x]]==minn[x])\n        change(r[x]);\n    minn[x]=min(minn[l[x]],minn[r[x]]);\n}\n\nvoid kill(int x)\n{\n    if(ok[x])\n    {\n        printf(\"0\\n\");\n        return ;\n    }\n    x=findfa(x);\n    if(minn[x]>1e7){\n        printf(\"0\\n\");\n        return ;\n    }\n    printf(\"%d\\n\",minn[x]);\n    change(x);\n}\n\nint main()\n{\n    scanf(\"%d\",&n);\n    p=n;\n    memset(minn,0x3f,sizeof(minn));\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&minn[i]);\n        pr[i]=i;\n    }\n    scanf(\"%d\",&m);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%s\",c+1);\n        if(c[1]=='M')\n        {\n            int x,y;\n            scanf(\"%d%d\",&x,&y);\n            mix(x,y);\n        }\n        else\n        {\n            int x;\n            scanf(\"%d\",&x);\n            kill(x);\n        }\n    }\n    //asystem(\"pause\");\n    return 0;\n}\n\n```",
        "postTime": 1535559128,
        "uid": 34663,
        "name": "redegg",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2713 \u3010\u7f57\u9a6c\u6e38\u620f\u3011"
    },
    {
        "content": "# \u4e00\u9053\u5f88\u6734\u7d20\u4e14\u51e0\u4e4e\u65e0\u9700\u4fee\u6539\u7684\u5de6\u504f\u6811\u6a21\u677f\u9898\n#### \u6ca1\u505a\u8fc7\u6a21\u677f\u9898\u7684\u5efa\u8bae\u5148\u53bb\u505a\u4e00\u4e0b\uff08[\u3010\u6a21\u677f\u3011\u5de6\u504f\u6811\uff08\u53ef\u5e76\u5806\uff09] (https://www.luogu.org/problemnew/show/P3377)\uff09 \u5f53\u7136\u8fd9\u9053\u9898\u4e5f\u4e0d\u80fd\u5b8c\u5168\u7167\u642c\uff0c\u6211\u5c31\u56e0\u4e3a\u4e00\u4e2a\u5c0f\u5931\u8befWA\u4e86\uff1b\u8fd9\u9053\u9898\u8ba9\u5224\u65ad\u201cM\u201d\u4e0e\u201cK\u201d\uff0c\u8bfb\u5165\u8fd9\u4e24\u4e2a\u5b57\u7b26\u7684\u65f6\u5019\u4e0d\u80fd\u5355\u72ec\u8bfb\u5165\u5b57\u7b26\uff0c\u8981\u8bfb\u5b57\u7b26\u4e32\uff0c\u6bd4\u5982ch[10],scanf(\"%s\",ch),if(ch[0]=='M')\u8fd9\u6837\u6765\u5224\u65ad\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u51fa\u95ee\u9898\uff1b\u8fd8\u6709\u5c31\u662f\u6839\u636e\u9898\u610f\uff0c\u5e94\u8be5\u4e0d\u4f1a\u51fa\u73b0\u4e24\u4e2a\u58eb\u5175\u5206\u6570\u4e00\u6837\uff0c\u6240\u4ee5\u4e5f\u4e0d\u5fc5\u7279\u5224\u3002\u53ea\u9700\u6ce8\u610f\u8fd9\u4e24\u70b9\uff0c\u6539\u6539\u6570\u7ec4\u5927\u5c0f\uff0c\u8fd9\u9898\u5c31\u8f7b\u677e\u8fc7\u4e86~\n\n\u6211\u7528\u7684\u7ed3\u6784\u4f53\uff0c\u5176\u4ed6\u597d\u591a\u9898\u89e3\u7528\u7684\u6570\u7ec4\uff0c\u5f62\u5f0f\u4e0d\u5927\u4e00\u6837\uff0c\u672c\u8d28\u4e00\u6837\u3002\n```c\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#define maxn 1000001\nstruct node\n{\n    int dist,lson,rson,val,fa;\n}s[maxn];\nint n,m,p,t;\nint inline read()\n{\n    int x=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-') f=-1; ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\nvoid swap(int &x,int &y){t=x;x=y;y=t;}\nint getf(int x)\n{\n    return s[x].fa?getf(s[x].fa):x;\n}\nint merge(int x,int y)\n{\n    if(!x||!y)\n    {\n        return x+y;\n    }\n    if(s[x].val>s[y].val||(s[x].val==s[y].val&&x>y))\n    {\n        swap(x,y);\n    }\n    int &ul=s[x].lson,&ur=s[x].rson;\n    ur=merge(ur,y);\n    s[ur].fa=x;\n    if(s[ul].dist<s[ur].dist)\n    {\n        swap(ul,ur);\n    }\n    s[x].dist=s[ur].dist+1;\n    return x;\n}\nvoid pop(int x)\n{\n    int ul=s[x].lson,ur=s[x].rson;\n    s[x].val=-1;\n    s[ul].fa=0,s[ur].fa=0;\n    merge(ul,ur);\n}\nint main()\n{\n    n=read();\n    s[0].dist=-1;\n    for(int i=1;i<=n;i++)\n    {\n        s[i].val=read();\n    }\n    m=read();\n    for(int i=1;i<=m;i++)\n    {\n        char ch[10];\n        scanf(\"%s\",&ch);\n        if(ch[0]=='M')\n        {\n            int x,y;\n            x=read();y=read();\n            if(s[x].val==-1||s[y].val==-1)\n            {\n                continue;\n            }\n            if(x==y)\n            {\n                continue;\n            }\n            int fx=getf(x),fy=getf(y);\n            if(fx!=fy) merge(fx,fy);\n        }\n        else\n        {\n            int x=read();\n            if(s[x].val==-1)\n            {\n                printf(\"0\\n\");\n            }\n            else\n            {\n                int y=getf(x);\n                printf(\"%d\\n\",s[y].val);\n                pop(y);\n            }\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1531891597,
        "uid": 55580,
        "name": "LingFengGold",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2713 \u3010\u7f57\u9a6c\u6e38\u620f\u3011"
    },
    {
        "content": "# \u5dee\u5206+lca\uff0c\u4f46\u662f\u6709\u4e00\u4e2a\u5751\n\n\u9996\u5148\u9700\u8981\u7528\u6c42lca\u7684\u7b97\u6cd5\n\n\u65e0\u8bba\u7528\u500d\u589e\uff0cst , tarjan(\u8fd9\u9898\u53ef\u4ee5\u79bb\u7ebf)\uff0c\u8fd8\u662f\u6811\u5256\u90fd\u884c\uff1b\n\n**\u7136\u540e\u663e\u7136\u6211\u4eec\u8981\u627e\u51fa\uff08\u7ecf\u8fc7\u6b21\u6570\\*\u8fb9\u7684\u6743\u503c\uff09\u6700\u5927\u7684\u4e00\u6761\u8fb9**\n\n\u8fb9\u7684\u6743\u503c\u5728\u8f93\u5165\u6570\u636e\u4e2d\uff0c\u4f46\u7ecf\u8fc7\u6b21\u6570\u600e\u4e48\u6c42\uff1f\n\n\u9996\u5148\u8fd9\u4e2a\u56fe\u662f\u68f5\u6811\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4f1a\u81ea\u7136\u800c\u7136\u7684\u60f3\u5230\u5dee\u5206\u4e86\n\n\u7528cnt[]\u6570\u7ec4\u5b58\u7ecf\u8fc7\u8be5\u8282\u70b9\u4e0e\u5176\u7236\u8282\u70b9\u6240\u8fde\u8fb9\u7684\u7f16\u53f7\n\n\u6bcf\u6b21\u8f93\u5165\u8bf7\u6c42\u65f6\uff0c\u5728\u6240\u8f93\u5165\u7684\u4e24\u4e2a\u8282\u70b9\u7684cnt[]\u6253+1\u6807\u8bb0\uff0c\u5728\u5176lca\u6253-2\u6807\u8bb0\u3002\n\n\u7136\u540e\u4e00\u904d\u6df1\u641c\uff0c\u5728\u56de\u6eaf\u7684\u8fc7\u7a0b\u4e2d\u627e\u5230\u6700\u5927\u7684\uff08\u7ecf\u8fc7\u6b21\u6570\\*\u8fb9\u7684\u6743\u503c\uff09\u548c\u82b1\u8d39\u7684\u603b\u65f6\u95f4\u3002\n\n\u76f8\u51cf\u5373\u53ef\n\n\u4f46\u662f\uff0c\u5982\u679c\u4f60\u8003\u8651\u7684\u5f88\u591a\uff0c\u628a\u82b1\u8d39\u7684\u65f6\u95f4\u5b58\u5230long long\u4e2d\uff0c\u90a3\u4f60\u5c31\u4f1a\u88ab\u5751\uff08\u6211\u5c31\u88ab\u5751\u4e86\uff09\uff0c\u8fd9\u4f30\u8ba1\u662f\u9898\u76ee\u7684\u95ee\u9898\uff0c\u60f3AC\u8981\u7528int\u5b58sum\n\n\u4e0b\u9644\u4ee3\u7801\n\n\n```cpp\n    #include <bits/stdc++.h>\n    #define maxn 100100\n    using namespace std ;\n    struct node{\n        int to , nex , val ;\n    } edge[ maxn << 1 ];\n    int n , m , num , mi , head[ maxn ] , fa[ maxn ] , ff[ maxn ] , dep[ maxn ] , son[ maxn ] , tp[ maxn ] , siz[ maxn ] , cnt [ maxn ] ;\n    int sum ;\n    int read ()\n    {\n        int f = 1 , x = 0 ;\n        char ch = getchar () ;\n        while ( ! isdigit ( ch ) )\n        {\n            if ( ch == '-' )\n                f = -1 ;\n            ch = getchar () ;\n        }\n        while ( isdigit ( ch ) ) \n        {\n            x = ( x << 3 ) + ( x << 1 ) + ( ch ^ '0' ) ;\n            ch = getchar () ;\n        }\n        return f * x ;\n    } \n    void add ( int x , int y , int v )\n    {\n        edge[ ++ num ] = ( node ){ y , head[ x ] , v } ;\n        head[ x ] = num ;\n    }\n    //\u4ee5\u4e0b\u4e3a\u6811\u5256\n    void dfs1 ( int u ) \n    {\n        siz[ u ] = 1 ;\n        for ( int i = head[ u ] ; i ; i = edge[ i ].nex )\n        {\n            int v = edge[ i ].to ;\n            if ( dep[ v ] ) continue ;\n            dep[ v ] = dep[ u ] + 1 ;\n            fa[ v ] = u ; ff[ v ] = i ;\n            dfs1 ( v ) ;\n            siz[ u ] += siz[ v ] ;\n            if ( siz[ son[ u ] ] < siz[ v ] ) son[ u ] = v ;\n        }\n    }\n    void dfs2 ( int u , int tpz )\n    {\n        tp[ u ] = tpz ;\n        if ( ! son[ u ] ) return ;\n        dfs2 ( son[ u ] , tpz ) ;\n        for ( int i = head[ u ] ; i ; i = edge[ i ].nex )\n        {\n            int v = edge[ i ].to ;\n            if ( v == fa[ u ] || v == son [ u ] ) continue ;\n            dfs2 ( v , v ) ;\n        }\n    }\n    //\u4ee5\u4e0a\u4e3a\u6811\u5256\n    int lca ( int x , int y ) \n    {\n        while ( tp[ x ] != tp[ y ] )\n        {\n            if ( dep[ tp[ x ] ] < dep[ tp[ y ] ] ) y = fa[ tp [ y ] ] ;\n            else x = fa[ tp[ x ] ] ;\n        }\n        return dep[ x ] < dep [ y ] ? x : y ;\n    }\n    void dfs ( int u )//\u5dee\u5206\u7684\u6df1\u641c\n    {\n        for ( int i = head[ u ] ; i ; i = edge[ i ].nex )\n        {\n            int v = edge[ i ].to ;\n            if ( v == fa[ u ] ) continue ;\n            dfs ( v ) ;\n            cnt[ u ] += cnt[ v ] ; \n        }\n        sum += cnt[ u ] * edge[ ff[ u ] ].val ;\n        mi = max ( mi , cnt[ u ] * edge[ ff[ u ] ].val ) ;\n    }\n    int main ()\n    {\n        memset ( edge , 0 , sizeof edge ) ;\n        int x , y , z ;\n        n = read () ; m = read () ;\n        for ( int i = 1 ; i < n ; i ++ ) \n        {\n            x = read () ; y = read () ; z = read () ;\n            add ( x , y , z ) ;\n            add ( y , x , z ) ;\n        }\n        dep[ 1 ] = 1 ; dfs1 ( 1 ) ;\n        dfs2 ( 1 , 1 ) ; \n        for ( int i = 1 ; i <= m ; i ++ )\n        {\n            x = read () ; y = read () ; \n            z = lca ( x , y ) ; \n            cnt[ x ] ++ ; cnt[ y ] ++ ; cnt[ z ] -= 2 ;\n        }\n        dfs ( 1 ) ;\n        cout << sum - mi ;\n    }\n\n```",
        "postTime": 1514958364,
        "uid": 34259,
        "name": "GadTD",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2713 \u3010\u94f2\u96ea\u3011"
    }
]