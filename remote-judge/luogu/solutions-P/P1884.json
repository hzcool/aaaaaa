[
    {
        "content": "\u626b\u63cf\u7ebf\u677f\u5b50\u9898\uff0c\u53ef\u4ee5\u53bb\u641c\u535a\u5ba2\u770b\u4e00\u4e0b\u3002\u8fd9\u91cc\u642c\u8fd0\u4e00\u4e0b\u4ee5\u524d\u53e3\u80e1\u7684\u3002\n\n\u9996\u5148\u5c06`y`\u5750\u6807\u79bb\u6563\u5316\uff0c\u4f46\u662f\u8981\u4fdd\u7559\u539f\u5750\u6807\u3002\n\n\u6211\u4eec\u7528\u4e00\u6839\u7ad6\u76f4\u7684\u7ebf\u4ece\u5de6\u5411\u53f3\u4f9d\u6b21\u626b\u63cf\uff0c\u6bcf\u5f53\u4e0e\u77e9\u5f62\u7684\u7ad6\u76f4\u8fb9\u91cd\u5408\u65f6\u5c31\u7d2f\u52a0\u4e00\u6b21\u9762\u79ef\uff0c\u76f8\u5f53\u4e8e\u628a\u5e76\u96c6\u56fe\u5f62\u5206\u5272\u4e3a\u4e00\u4e2a\u4e00\u4e2a\u5c0f\u7684\u77e9\u5f62\u3002\n![](https://s2.ax1x.com/2019/10/26/KBlI4P.png)\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u5efa\u7acb\u6570\u7ec4$d[i]$\u4fdd\u5b58\u8fd9\u4e2ay\u5750\u6807\u88ab\u8986\u76d6\u4e86\u591a\u5c11\u6b21\uff0c\u5e76\u628a\u77e9\u5f62\u7684\u7ad6\u8fb9\u6309$(x,y1,y2,d)$\u8868\u793a\uff0cd\u8868\u793a\u8fd9\u662f\u77e9\u5f62\u7684\u5de6\u8fb9\u754c(1)\u8fd8\u662f\u53f3\u8fb9\u754c(-1)\uff0c\u6bd4\u5982\u56fe\u4e2d\u7b2c\u4e00\u6761\u8fb9\u5c31\u662f$(2,3,7,1)$\uff0c\u5e76\u6309x\u6392\u5e8f\u4f9d\u6b21\u8003\u8651\u3002\n\n\u5bf9\u6240\u6709\u7ad6\u7ebf\u5148\u6309`x`\u6392\u5e8f\uff0c\u6709\u4e9b\u5199\u6cd5\u91cc\u5bf9\u7ad6\u7ebf\u6392\u5e8f\u65f6\u5982\u679c`x`\u76f8\u7b49\u4f1a\u6309`c`\u6392\u5e8f\uff0c\u4f46\u662f\u5bb9\u6613\u53d1\u73b0\u8fd9\u662f\u6beb\u65e0\u5f71\u54cd\u7684\u3002\n\n\u5bf9\u4e8e\u6bcf\u6761\u8fb9\uff0c\u6211\u4eec\u628a$[y1,y2)$\u7684\u503c\u90fd\u52a0\u4e0ad\uff0c\u8868\u793a\u8fd9\u6761\u5de6\u6570\u8fb9\u628ay\u8f74\u8fd9\u4e9b\u5730\u65b9\u53c8\u8986\u76d6\u4e86\u4e00\u6b21\uff0c\u6216\u8005\u53f3\u6570\u8fb9\u8868\u793a\u8be5\u77e9\u5f62\u5bf9y\u8f74\u5f71\u54cd\u5df2\u7ecf\u7ed3\u675f\u3002\n\n\uff08\u4e3a\u4ec0\u4e48\u662f\u5de6\u95ed\u53f3\u5f00\uff1a\u6211\u4eec\u628a\u70b9\u8f6c\u5316\u4e3a\u7ebf\u6bb5\u6765\u6c42\u8986\u76d6\u6b21\u6570\uff0c\u70b9\u7684\u6570\u91cf\u662f\u6bd4\u7ebf\u6bb5\u7684\u6570\u91cf\u591a1\u4e2a\u7684\uff0c\u6bd4\u5982\u7b2c\u4e00\u6761\u7ebf\u6bb5\u91cc$[3,7]$\u662f\u67095\u4e2a\u70b9\u7684\uff0c\u4f46\u662f\u653e\u5728d\u6570\u7ec4\u91cc\u53ea\u67094\u4e2a\u503c\u9700\u8981\u4fee\u6539\u3002\uff09\n\n\u63a5\u7740\u7edf\u8ba1\u7b54\u6848\uff0c\u4e0b\u4e00\u4e2a\u77e9\u5f62\u7684\u5bbd\u5c31\u662f\u76f8\u90bb\u4e24\u6839\u7ad6\u8fb9\u7684x\u5750\u6807\u5dee\uff0c\u800c\u957f\u5ea6\u5c31\u662fd\u6570\u7ec4\u91cc\u81f3\u5c11\u88ab\u8986\u76d6\u4e00\u6b21\u7684\u5750\u6807\u6570\u3002\n\n\uff08\u56fe\u4e2d\uff1a$2*4+2*6+1*8+2*7+1*7+1*4+3*4+0*0\\ =\\ 60$\uff09\n\nd\u6570\u7ec4\u6d89\u53ca\u4e86\u533a\u95f4\u4fee\u6539\u548c\u533a\u95f4\u67e5\u8be2\uff0c\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u3002\n\n\u7531\u4e8e\u53ea\u9700\u8981\u67e5\u8be2$(1,N)$\u91cc\u7684\u8986\u76d6\u6b21\u6570\uff0c\u6211\u4eec\u7684\u61d2\u6807\u8bb0\u53ef\u4ee5\u4e0d\u7528\u4e0b\u63a8\u3002\u66f4\u65b0\u65f6\uff0c\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u6709\u61d2\u6807\u8bb0\uff08\u8868\u793a\u81ea\u5df1\u88ab\u5b8c\u5168\u8986\u76d6\u7684\u6b21\u6570\uff09\uff0c\u90a3\u4e48\u4ed6\u7684\u8d21\u732e\u5c31\u662f\u533a\u95f4\u603b\u957f\u5ea6\uff08\u56e0\u4e3a\u88ab\u8986\u76d6\uff09\uff0c\u5426\u5219\u9012\u5f52\u8ba1\u7b97\u5de6\u53f3\u513f\u5b50\u5e76\u76f8\u52a0\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define MAX (2000 + 7)\nusing namespace std;\n\nstruct Node { int x, y0, y1, c; } a[MAX];\nint cmp(Node a, Node b) { return a.x < b.x; }\n\nunordered_map <int, int> H;\n\nint N, M, qy[MAX];\nlong long ans;\n\nstruct Segtree\n{\n\t#define i0 (i << 1)\n\t#define i1 (i << 1 | 1)\n\tint L[MAX << 2], R[MAX << 2], v[MAX << 2], len[MAX << 2];\n\tvoid init(int i, int l, int r)\n\t{\n\t\tL[i] = l, R[i] = r, v[i] = len[i] = 0;\n\t\tif (l != r) {\n\t\t\tint mid = l + r >> 1;\n\t\t\tinit(i0, l, mid), init(i1, mid+1, r);\n\t\t}\n\t}\n\tvoid add(int i, int l, int r, int c)\n\t{\n\t\tif (r < L[i] || R[i] < l) return;\n\t\tif (l <= L[i] && R[i] <= r)\n\t\t\tv[i] += c;\n\t\telse add(i0, l, r, c), add(i1, l, r, c);\n\t\tif (v[i]) len[i] = qy[R[i]+1] - qy[L[i]];//\u5b8c\u5168\u8986\u76d6\u65f6\u7684\u957f\u5ea6\u5e94\u8be5\u662f\u79bb\u6563\u5316\u524d\u7684y\u5750\u6807\uff08\u5b9e\u9645\u957f\u5ea6\uff09\u3002\n\t\telse len[i] = len[i0] + len[i1];\n\t}\n} Seg;\n\nint main()\n{\n\tscanf(\"%d\", &N), H.clear();\n\tfor (int i = 1, x0, y0, x1, y1; i <= N; i++)\n\t{\n\t\tscanf(\"%d%d%d%d\", &x0, &y1, &x1, &y0);//\u6ce8\u610f\u662f\u5de6\u4e0a\u548c\u53f3\u4e0b\n\t\ta[i] = Node{x0, y0, y1, 1};\n\t\ta[i+N] = Node{x1, y0, y1, -1};\n\t\tqy[++M] = y0, qy[++M] = y1;\n\t}\n\tsort(qy+1, qy + M+1), M = unique(qy+1, qy + M+1) - qy - 1;\n\tfor (int i = 1; i <= M; i++)\n\t\tH[qy[i]] = i;//\u79bb\u6563\u5316\n\t\n\tSeg.init(1, 1, (N <<= 1));\n\tsort(a + 1, a + N + 1, cmp);\n\tfor (int i = 1; i <= N; i++)\n\t{\n\t\tSeg.add(1, H[a[i].y0], H[a[i].y1] - 1, a[i].c);\n\t\tans += (long long)Seg.len[1] * (a[i+1].x - a[i].x);\n\t} printf(\"%lld\\n\", ans);\n}\n```\n\n\u53e6\u5916\uff0c\u672c\u9898`N`\u89c4\u6a21\u4e3a1000\uff0c\u6700\u591a2000\u4e2a\u4e0d\u540c\u7684\u5750\u6807\uff0c\u7ebf\u6bb5\u6811\u5f008000\u662f\u8db3\u591f\u7684\uff0c\u4f46\u662f\u4e0a\u9762\u7684\u4ee3\u7801\u5982\u679c\u5f00\u4e86`O2`\u5c31\u4f1a`WA`\u3002\u5fc5\u987b\u8981\u5f00\u66f4\u5927\u7684\u7a7a\u95f4\u624d\u80fd\u8fc7\uff0c\u5982\u679c\u6709\u77e5\u9053\u539f\u56e0\u7684dalao\u6b22\u8fce\u6765\u8e29\u3002",
        "postTime": 1572075748,
        "uid": 73489,
        "name": "NyaRu_Official",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1884 \u3010[USACO12FEB]\u8fc7\u5ea6\u79cd\u690d\uff08\u94f6\uff09Overplanting \u2026\u3011"
    },
    {
        "content": "\u6b64\u9898\u5927\u4f6c\u90fd\u7528\u79bb\u6563\u5316+\u7ebf\u6bb5\u6811\uff0c\u90a3\u4e48\u67d0\u849f\u84bb\u5c31\u53ea\u80fd\u8bb2\u8bb2\u77e9\u5f62\u5207\u5272\u7684\u505a\u6cd5\u4e86\u3002\n\n\u90a3\u4e48\uff0c\u5148\u6765\u4ecb\u7ecd\u4e00\u4e0b\u77e9\u5f62\u5207\u5272\n\n\u77e9\u5f62\u5207\u5272\u662f\u8ba1\u7b97\u5e73\u9762\u77e9\u5f62\u7684\u4e00\u79cd\u6709\u6548\u65b9\u6cd5\u3002\u540c\u65f6\u8bb8\u591a\u7edf\u8ba1\u7c7b\u7684\u95ee\u9898\u901a\u8fc7\u6570\u5b66\u5efa\u6a21\u540e\u4e5f\u80fd\u4f7f\u7528\n\u77e9\u5f62\u5207\u5272\u7684\u601d\u60f3\u6765\u89e3\u51b3\u3002\n\n\u5b83\u7684\u57fa\u672c\u601d\u60f3\u662f\uff0c\u7528\u5f53\u524d\u77e9\u5f62\u53bb\u5207\u5272\u4e4b\u524d\u6240\u6709\u52a0\u5165\u81f3\u77e9\u5f62\u96c6\u5408 _S_ \u4e2d\u7684\u77e9\u5f62\uff0c\u5c06\u5b83\u4eec\u5206\u6210\u66f4\u591a\u7684\u5c0f\u77e9\u5f62\uff0c\u5e76\u518d\u52a0\u5165\u96c6\u5408 _S_ \u4e2d\uff0c\u5e76\u5220\u9664\u539f\u6765\u5728\u96c6\u5408 _S_ \u4e2d\u7684\u77e9\u5f62\uff0c\u6700\u540e\u52a0\u5165\u5f53\u524d\u77e9\u5f62\u3002\n\n\u6211\u4eec\u5148\u5efa\u7acb\u77e9\u5f62\u7684\u7ed3\u6784\u4f53\uff1a\n```cpp\nstruct node{ll x1,y1,x2,y2;}a[maxn];\n```\n\u7136\u540e\uff0c\u6211\u4eec\u5199\u51fa\u6dfb\u52a0\u64cd\u4f5cAdd\uff1a\n```cpp\nvoid Add(ll x1,ll y1,ll x2,ll y2)\n{a[++tot]=(node){x1,y1,x2,y2};}\n```\n\u90a3\u4e48\u95ee\u9898\u662f\uff0c\u5982\u4f55\u5207\u5272\u5462\uff1f\n\n\u5047\u8bbe\u76ee\u524d\u63d2\u5165\u7684\u77e9\u5f62\u4e3a\uff08x3,y3,x4,y4\uff09\uff0c\u5219\u6211\u4eec\u73b0\u5728\u8981\u7528\u4ed6\u6765\u5207\u5272\u96c6\u5408\u5185\u7684\u77e9\u5f62(x1,y1,x2,y2)\u3002\n\n\u6211\u4eec\u5148\u5728x\u8f74\u65b9\u5411\u4e0a\u8fdb\u884c\u7ebf\u6bb5\u5207\u5272\n\nk1=max(x1,x3)  \nk2=min(x2,x4)\n\n\u5219k1,k2\u5373\u4e3a\u4e24\u4e2a\u77e9\u5f62x\u8f74\u4e0a\u7684\u4ea4\u70b9\u3002\n\n\u5018\u82e5x1<k1\uff0c\u8bf4\u660e\u4ea7\u751f\u4e86\u65b0\u77e9\u5f62(x1,y1,k1,y2)\n\n\u5018\u82e5x2>k2\uff0c\u8bf4\u660e\u4ea7\u751f\u4e86\u65b0\u77e9\u5f62(k2,y1,x2,y2)\n\n\u7136\u540e\u6211\u4eec\u518d\u5728y\u8f74\u4e0a\u5207\u5272\uff0c\u8fc7\u7a0b\u7c7b\u4f3c\u3002\u8bf7\u5404\u4f4d\u753b\u56fe\u7406\u89e3\uff08qwq\uff09\n\n\u5207\u5272\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nvoid Cut(int p,ll x1,ll y1,ll x2,ll y2,int cmd){\n\tll k1,k2;\n\tif(!cmd){//x\u8f74\u5207\u5272\n\t\tk1=max(x1,a[p].x1);\n\t\tk2=min(x2,a[p].x2);\n\t\tif(a[p].x1<k1)Add(a[p].x1,a[p].y1,k1,a[p].y2);\n\t\tif(k2<a[p].x2)Add(k2,a[p].y1,a[p].x2,a[p].y2);\n\t\tCut(p,k1,y1,k2,y2,1);\n\t}\n\telse{//y\u8f74\u5207\u5272\n\t\tk1=max(y1,a[p].y1);\n\t\tk2=min(y2,a[p].y2);\n\t\tif(a[p].y1<k1)Add(x1,a[p].y1,x2,k1);\n\t\tif(k2<a[p].y2)Add(x1,k2,x2,a[p].y2);\n\t}\n}\n```\n\u8fd9\u6837\uff0c\u96c6\u5408\u5f53\u4e2d\u4fbf\u53ea\u4f1a\u4fdd\u5b58\u6bcf\u4e2a\u533a\u57df\u4e00\u6b21\uff0c\u76f8\u5f53\u4e8e\u5904\u7406\u5b8c\u540e\uff0c\u96c6\u5408\u5185\u6240\u6709\u77e9\u5f62\u7684\u9762\u79ef\u548c\u5373\u4e3a\u6240\u6709\u539f\u77e9\u5f62\u7684\u9762\u79ef\u5e76\u3002\n\n\u8fd9\u5c31\u662f\u77e9\u5f62\u5207\u5272\u7684\u601d\u60f3\u3002\n\n\u5bf9\u4e8e\u6b64\u9898\uff0c\u8981\u6ce8\u610f\u7684\u662f\u4e3a\u6570\u636e\u7ed9\u51fa\u7684\u662f\u5de6\u4e0a\u89d2\u81f3\u53f3\u4e0b\u89d2\uff0c\u9700\u8981\u7a0d\u5fae\u8c03\u6574\u4e00\u4e0b\u3002\u90a3\u4e48\u7ed9\u51faCode\uff1a\n```cpp\n#include<iostream>\n#include<iomanip>\n#include<cstring>\n#include<cmath>\n#include<cstdio>\n#include<algorithm>\n#define ll long long\nusing namespace std;\nconst int maxn=1005;\nstruct node{ll x1,y1,x2,y2;}a[maxn];\nint n,tot=0;\nvoid Add(ll x1,ll y1,ll x2,ll y2){a[++tot]=(node){x1,y1,x2,y2};}\nvoid Cut(int p,ll x1,ll y1,ll x2,ll y2,int cmd){\n\tll k1,k2;\n\tif(!cmd){\n\t\tk1=max(x1,a[p].x1);\n\t\tk2=min(x2,a[p].x2);\n\t\tif(a[p].x1<k1)Add(a[p].x1,a[p].y1,k1,a[p].y2);\n\t\tif(k2<a[p].x2)Add(k2,a[p].y1,a[p].x2,a[p].y2);\n\t\tCut(p,k1,y1,k2,y2,1);\n\t}\n\telse{\n\t\tk1=min(y1,a[p].y1);\n\t\tk2=max(y2,a[p].y2);\n\t\tif(a[p].y1>k1)Add(x1,a[p].y1,x2,k1);\n\t\tif(k2>a[p].y2)Add(x1,k2,x2,a[p].y2);\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tll x1,y1,x2,y2;\n\tscanf(\"%lld%lld%lld%lld\",&x1,&y1,&x2,&y2);\n\tAdd(x1,y1,x2,y2);//\u5148\u52a0\u5165\u4e00\u4e2a\u77e9\u5f62\n\tfor(int i=2;i<=n;i++){\n\t\tscanf(\"%lld%lld%lld%lld\",&x1,&y1,&x2,&y2);\n\t\tfor(int j=1;j<=tot;j++){\n\t\t\tif(a[j].x1>=x2||a[j].x2<=x1||a[j].y1<=y2||a[j].y2>=y1)continue;//\u5224\u65ad\u662f\u5426\u76f8\u4ea4\n\t\t\tCut(j,x1,y1,x2,y2,0);//\u82e5\u76f8\u4ea4\uff0c\u5219\u7528\u5f53\u524d\u77e9\u5f62\u53bb\u5207\u5272\n\t\t\ta[j]=a[tot];//\u5220\u9664\u539f\u77e9\u5f62\uff0c\u7528\u6700\u540e\u4e00\u4e2a\u77e9\u5f62\u6765\u8986\u76d6\u5b83\n\t\t\ttot--;j--;\n\t\t}\n\t\tAdd(x1,y1,x2,y2);//\u52a0\u5165\u65b0\u77e9\u5f62\n\t}\n\tll ans=0;\n\tfor(int i=1;i<=tot;i++)ans+=(a[i].x2-a[i].x1)*(a[i].y1-a[i].y2);//\u8ba1\u7b97\u9762\u79ef\u5e76\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1566726193,
        "uid": 41099,
        "name": "B_Shik",
        "ccfLevel": 7,
        "title": "P1884 [USACO12FEB]\u8fc7\u5ea6\u79cd\u690d\uff08\u94f6\uff09Overplanting \u9898\u89e3"
    },
    {
        "content": "\u601d\u8def\u5c31\u4e0d\u591a\u8bf4\u4e86\uff0c\u5c31\u662f\u5c06\u6574\u4e2a\u56fe\u7528\u7ad6\u7ebf\u5207\u5f00\uff0c\u7136\u540e\u8fdb\u884c\u626b\u63cf\u3002\n\n\u91cd\u70b9\u5728\u4e8e\uff0c\u5982\u4f55\u7528\u8f83\u4e3a\u6e05\u6670\u7684\u4ee3\u7801\u5c06\u6b64\u9898\u5199\u51fa\u6765\u3002\n\n\u601d\u8def\u662f\u8fd9\u6837\u7684\uff1a\n\n1\u3001\u5c06\u6240\u6709\u7ad6\u7ebf\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff1b\n\n2\u3001\u904d\u5386\u7ad6\u7ebf\uff0c\u5c06\u4e24\u6761\u7ad6\u7ebf\u90fd\u7a7f\u8fc7\u7684\u957f\u65b9\u5f62\u52a0\u5165\u6570\u7ec4\uff1b\n\n3\u3001\u5c06\u6570\u7ec4\u5185\u7684\u957f\u65b9\u5f62\u6309\u7167\u9876\u8fb9\u7531\u5927\u5230\u5c0f\u6392\u5217\uff1b\n\n4\u3001\u7ef4\u62a4\u5f53\u524d\u6700\u4f4e\u7684\u9876\u8fb9h\u548c\u6700\u4f4e\u7684\u5e95\u8fb9d\uff0c\u5728\u6bcf\u6b21\u7ef4\u62a4\u7684\u65f6\u5019\u66f4\u65b0\u7b54\u6848\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#define maxn 1010\nusing namespace std;\n\nlong long n,x[maxn],y[maxn],x2[maxn],y2[maxn],side[2*maxn];\nint arr[maxn];\nlong long ans;\n\nbool cmp(int a,int b)\n{\n\treturn y[a]>y[b];\n}\n\nint main()\n{\n\tcin >> n;\n\tfor (int i=0;i<n;i++) \n\t{\n\t\tcin >> x[i] >> y[i] >> x2[i] >> y2[i];\n\t\tside[2*i]=x[i];\n\t\tside[2*i+1]=x2[i];\n\t}\n\tsort(side,side+2*n);\n\tans=0;\n\tfor (int i=1;i<2*n;i++)\n\t{\n\t\tif (side[i-1]==side[i]) continue;\n\t\tint m=0;\n\t\tfor (int j=0;j<n;j++)\n\t\t{\n\t\t\tif (x[j]<=side[i-1] && side[i]<=x2[j]) arr[m++]=j;\n\t\t}\n\t\tsort(arr,arr+m,cmp);\n\t\tlong long h=y[arr[0]],d=y2[arr[0]],w=side[i]-side[i-1];\n\t\tfor (int j=1;j<m;j++)\n\t\t{\n\t\t\tint temp=arr[j];\n\t\t\tif (y[temp]>d)\n\t\t\t{\n\t\t\t\tans+=(h-y[temp])*w;\n\t\t\t\th=y[temp];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tans+=(h-d)*w;\n\t\t\t\th=y[temp];\n\t\t\t}\n\t\t\tif (y2[temp]<d) d=y2[temp];\n\t\t}\n\t\tans+=(h-d)*w;\n\t}\n\tcout << ans << endl;\n}\n```\n",
        "postTime": 1585052887,
        "uid": 320329,
        "name": "\u5c71\u86d9or\u5c71\u5154",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1884 \u3010[USACO12FEB]Overplanting S\u3011"
    },
    {
        "content": "\u697c\u4e0b\u90fd\u5df2\u7ecf\u7ed9\u51fa\u5f88\u8be6\u7ec6\u7684\u5173\u4e8e[B]\u79bb\u6563\u5316[/B]\u7684\u505a\u6cd5\u4e86\uff0c\u90a3\u6211\u5728\u8fd9\u91cc\u5c31\u4ecb\u7ecd\u53e6\u4e00\u79cd\u601d\u8def\u3002\n\n\u90a3\u5c31\u662f\u76f4\u63a5\u8fdb\u884c[B]\u77e9\u5f62\u5207\u5272[/B]\u3002\u76f4\u63a5\u5c06\u4e0d\u89c4\u5219\u7684\u56fe\u5f62\u5207\u5272\u6210\u4e00\u4e2a\u4e2a\u5c0f\u7684\u77e9\u5f62\u8ba1\u7b97\u9762\u79ef\u3002\n\n\n[MOVE]\u4e0b\u9762\u770b[COLOR]\u4ee3\u7801+\u6ce8\u91ca[/COLOR][/MOVE]\n\n\n[code]\n\n\n\n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<algorithm>\n#include<iostream>\nusing namespace std;\nconst int maxn=19;\nint x1[maxn],x2[maxn],y1[maxn],y2[maxn],n,ans=0;\nvoid Work(int left,int right,int high,int low,int t){\n    if(left>right||high<low)return;//\u5c06\u4e0d\u7b26\u5408\u8981\u6c42\u7684\u77e9\u5f62\u8fc7\u6ee4\u6389\n    while(t>0&&(left>=x2[t]||right<=x1[t]||high<=y2[t]||low>=y1[t]))//\u5982\u679c\u5f53\u524d\u77e9\u5f62\u4e0e\u4e4b\u524d\u7684\u77e9\u5f62\u65e0\u51b2\u7a81\u5c31\u4e0d\u7ba1\u4e86\n    t--;\n    if(!t){\n        ans+=(right-left)*(high-low);//\u6ca1\u6709\u51b2\u7a81\u5c31\u7d2f\u52a0\u8fdb\u7b54\u6848\n        return;\n    }\n    //\u4e0b\u9762\u5c31\u662f\u5207\u5272\u4e86\uff0c\u53d8\u91cf\u540d\u5df2\u7ecf\u5f88\u660e\u663e\u4e86\uff0c\u5c31\u4e0d\u518d\u91cd\u590d\u5730\u89e3\u91ca\u4e86\n    if(left<x1[t]){\n        Work(left,x1[t],high,low,t-1);\n        left=x1[t];\n    }\n    if(right>x2[t]){\n        Work(x2[t],right,high,low,t-1);\n        right=x2[t];\n    }\n    if(high>y1[t]){\n        Work(left,right,high,y1[t],t-1);\n        high=y1[t];\n    }\n    if(low<y2[t]){\n        Work(left,right,y2[t],low,t-1);\n        low=y2[t];\n    }\n    return;\n}\nint main()\n{\n    //freopen(\"c.in\",\"r\",stdin);\n    //freopen(\"c.out\",\"w\",stdout);\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    scanf(\"%d%d%d%d\",&x1[i],&y1[i],&x2[i],&y2[i]);\n    for(int i=1;i<=n;i++)\n    Work(x1[i],x2[i],y1[i],y2[i],i-1);\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n[/code]\n```",
        "postTime": 1470058447,
        "uid": 5680,
        "name": "\u4e0a\u8fdb\u7684z\u541b",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1884 \u3010[USACO12FEB]\u8fc7\u5ea6\u79cd\u690d\uff08\u94f6\uff09Overplanting \u2026\u3011"
    },
    {
        "content": "\u4ec0\u4e48,\u626b\u63cf\u7ebf\u9700\u8981\u7ebf\u6bb5\u6811?\n\n\u90a3\u6211\u7b2c\u4e00\u4e2a\u4e0d\u5e72\u554a(~~\u5176\u5b9e\u662f\u4e0d\u4f1a\u5199~~)\n\n\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd\u88f8\u7684\u626b\u63cf\u7ebf:\n\n\u6211\u4eec\u6839\u636ex\u6392\u5e8f,\u5bf9\u4e8e\u76f8\u7b49\u7684 $x$ ,\u5c06 $y$ \u8fdb\u5165\u548c\u9000\u51fa\u5206\u7c7b\u8ba8\u8bba,\u7136\u540e\u5168\u90e8\u653e\u8fdbset\u91cc\u9762.\u6bcf\u6b21 $x$ \u4e0d\u76f8\u7b49\u7684\u65f6\u5019,\u7b54\u6848\u5c31\u662f **(\u73b0\u5728y\u8986\u76d6\u7684\u4e58\u4ee5(\u73b0\u5728\u7684x-\u4ee5\u524d\u7684x))**\n\n\u5177\u4f53\u7684\u5224\u65ad\u65b9\u6cd5:\n\n1.y\u7684\u5224\u65ad:\n\n\u5c06\u6bcf\u4e2a\u957f\u65b9\u5f62\u7684\u4e0a\u65b9\u70b9\u8bb0\u505a\u51fa\u53e3,\u4e0b\u65b9\u70b9\u8bb0\u505a\u5165\u53e3.\u7528\u4e00\u4e2aset\u8bb0\u5f55\u5728\u67d0\u533a\u95f4\u5185\u6240\u6709\u7684 $y$ \u503c.\u6bcf\u6b21\u4ece\u4e0b\u5f80\u4e0a\u626b,\u5982\u679c\u67d0\u4e2ay\u662f\u5165\u53e3\u5c31\u5c06 $sz$ +1,\u5426\u5219\u5c31\u5c06 $sz$ -1.\u5982\u679c $sz$==0 \u7684\u65f6\u5019\u5c31\u5c06\u4f60\u6574\u4e2a\u533a\u95f4\u7684\u503c\u52a0\u5230re\u91cc\u9762\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/njydtqar.png)\n\u5982\u56fe,\u6bcf\u6b21x\u53d8\u7684\u65f6\u5019\u53ea\u9700\u8981\u4fdd\u5b58\u4e2d\u95f4y\u7684\u503c,\u7136\u540e\u7528\u79fb\u52a8\u7684x\u4e58y\u5c31\u597d\u4e86\n\n**\u6ce8:\u6211\u4fdd\u5b58y\u8fdb\u5165\u548c\u9000\u51fa\u72b6\u6001\u7684\u539f\u56e0\u5c31\u662f\u4e3a\u4e86\u8bb0\u5f55\u4e2d\u95f4\u662f\u5426\u6709\u7a7a\u4f4d.\u53ef\u4ee5\u53d1\u73b0,\u5982\u679c\u4e2d\u95f4\u6709\u7a7a\u4f4d,\u90a3\u4e48\u8bc1\u660e\u6240\u6709\u8fdb\u5165\u7684\u70b9\u5df2\u7ecf\u9000\u51fa\u4e86,\u6240\u4ee5\u90a3\u4e00\u6bb5\u4e0d\u9700\u8981\u52a0\u4e0a\u53bb(\u4e0d\u61c2\u53ef\u4ee5\u753b\u4e00\u4e0b\u56fe)**\n\n```cpp\nlong long query_up(){\n  long long re = 0,prev = -1,sz = 0;\n  for (multiset<pair<long long,bool> >::iterator i=se.begin();i!=se.end();++i){\n    pair<long long,bool> now = *i;\n    if (sz==0) {prev = now.f;sz++;}\n    else if (now.s) sz++;\n    else sz--;\n    if (sz==0) re+=(now.f-prev);//\u5982\u679c\u73b0\u5728\u6240\u4ee5\u7684y\u90fd\u5df2\u7ecf\u51fa\u53bb\u4e86,\u90a3\u4e48\u7b54\u6848\u5c31\u662f\u6700\u540e\u4e00\u4e2ay\u7684\u51fa\u53e3-\u7b2c\u4e00\u4e2ay\u7684\u5165\u53e3\n  }\n  return re;\n}\n```\n\n\u60f3\u5230\u4e86\u8fd9\u70b9\u4ee5\u540e\u8fd9\u9898\u7684\u96be\u70b9\u57fa\u672c\u4e0a\u5c31\u89e3\u51b3\u4e86.\n\n\u56e0\u4e3a\u6709\u8d1f\u6570,\u6211\u5c06\u6bcf\u4e2a\u6570\u90fd\u52a0\u4e0a\u4e861e8,\u8fd9\u6837\u5c31\u53ef\u4ee5\u5b8c\u5168\u4e0d\u7ba1\u8d1f\u6570\u4e86\n\n**\u4e0d\u5f00long long\u89c1\u7956\u5b97**\n\n\u5b8c\u6574\u4ee3\u7801:\n\n```cpp\n#include <iostream>\n#include <set>\n#include <algorithm>\n#include <iterator>\n#include <utility>\nusing namespace std;\nconst long long MAXN = 1e5+5;\n#define pp pair<long long,long long>\n#define f first\n#define s second\nlong long n,ans = 0;\nmultiset<pair<long long,bool> > se;\nstruct Edge{\n  long long x,y; bool in,in2;\n}edge[MAXN*4];\nEdge add_edge(long long a, long long b, bool bo,bool bo2){\n  Edge tmp;\n  tmp.x = a;\n  tmp.y = b;\n  tmp.in = bo;\n  tmp.in2 = bo2;\n  return tmp;\n}\nbool sorted(Edge a, Edge b){\n  return a.x<b.x;\n}\nlong long query_up(){\n  long long re = 0,prev = -1,sz = 0;\n  for (multiset<pair<long long,bool> >::iterator i=se.begin();i!=se.end();++i){\n    pair<long long,bool> now = *i;\n    if (sz==0) {prev = now.f;sz++;}\n    else if (now.s) sz++;\n    else sz--;\n    if (sz==0) re+=(now.f-prev);\n  }\n  return re;\n}\nint main(){\n  cin >> n;\n  for (long long i=0;i<n;i++){\n    long long a,b,c,d; cin >> a >>b >> c >> d;\n    a+=1e8;b+=1e8;c+=1e8;d+=1e8;\n    edge[4*i] = add_edge(a,b,1,0);\n    edge[4*i+1] = add_edge(a,d,1,1);\n    edge[4*i+2] = add_edge(c,b,0,0);\n    edge[4*i+3] = add_edge(c,d,0,1);\n    //\u4e24\u79cd\u72b6\u6001,\u7b2c\u4e00\u79cd\u8868\u793ax\u53d8\u4e0d\u53d8,\u7b2c\u4e8c\u79cd\u8868\u793ay\u53d8\u4e0d\u53d8\n  }\n  sort(edge,edge+4*n,sorted);\n  long long prev = 0;\n  for (long long i=0;i<4*n;i++){\n    if (edge[i].x!=prev){//\u5982\u679cx\u53d8\u4e86\n      if (se.size()) ans += (edge[i].x-prev)*query_up();\n      prev = edge[i].x;\n    }\n    if (edge[i].in==1) se.insert(make_pair(edge[i].y,edge[i].in2));//\u5982\u679c\u8fd9\u70b9\u662f\u8fdb\u5165\u7684\u70b9,\u5c31\u5c06y\u52a0\u5165set\n    else se.erase(se.find(make_pair(edge[i].y,edge[i].in2)));\n//\u5426\u5219\u5c06y\u6254\u51faset\n  }\n  cout << ans;\n}\n\n```\n\n\u7559\u4e00\u7ec4\u6d4b\u8bd5\u6570\u636e\u9020\u798f\u540e\u4eba\n```cpp\n3\n3 7 7 3\n1 5 5 1\n2 2 7 -2\n\n```\n\u7b54\u684845",
        "postTime": 1582237373,
        "uid": 219099,
        "name": "pocafup",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1884 \u3010[USACO12FEB]\u8fc7\u5ea6\u79cd\u690d\uff08\u94f6\uff09Overplanting \u2026\u3011"
    },
    {
        "content": "# \u9898\u76ee\u94fe\u63a5\n[\u3010\u6d1b\u8c37\u4f20\u9001\u95e8\u3011](https://www.luogu.org/problemnew/show/P1884)\n\n# \u9898\u89e3\n\u77e9\u9635\u9762\u79ef\u7684\u5e76\u6a21\u677f\u3002\uff08\u8bf7\u6c42\u6d1b\u8c37\u52a0\u4e3a\u6a21\u677f\u9898\uff09\n\u5f88\u660e\u663e\u662f\u8981\u79bb\u6563\u5316\u7684\u3002\n> \u6211\u4eec\u5c06\u77e9\u9635\u4e0e$x$\u8f74\u5e73\u884c\u7684\u4e24\u4e2a\u7ebf\u6bb5\u53d6\u51fa\u6765\u3002\u5e76\u4e14\u5c06\u8fd9\u4e24\u4e2a\u7aef\u70b9\u7684$x1$\u548c$x2$\u8fdb\u884c\u79bb\u6563\u5316\u3002  \n> \u56e0\u4e3a\u6bcf\u4e00\u6b21\u6211\u4eec\u90fd\u4f1a\u5bf9\u5f53\u524d\u7684\u8fd9\u4e00\u5c42\u7684\u67d0\u4e00\u6bb5\u7ebf\u6bb5\u8fdb\u884c\u64cd\u4f5c\uff0c\u90a3\u4e48\u5c31\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u662f\u5426\u5b58\u5728\u3002\n\n\u8fd9\u4e2a\u53ea\u662f\u77e9\u9635\u9762\u79ef\u7684\u5e76\u3002\n\u8fd8\u6709\u52a0\u5f3a\u7248\uff1a[\u3010HDU 1542\u3011](https://vjudge.net/problem/HDU-1542)\n\u8fd8\u6709\u77e9\u9635\u9762\u79ef\u7684\u4ea4\u3002\n\n# \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\n#define gc getchar\n#define lc (nod << 1)\n#define rc (nod << 1 | 1)\nusing namespace std;\ntypedef long long ll;\nconst int N = 2003;\ntemplate <typename T> void read(T &x) {\n\tx = 0; T fl = 1; char c = 0;\n\tfor (; c < '0' || c > '9'; c = gc()) \n\t\tif (c == '-') fl = -1;\n\tfor (; c >= '0' && c <= '9'; c = gc()) \n\t\tx = (x << 1) + (x << 3) + (c ^ 48);\n\tx *= fl;\n}\nstruct E{ int l, r, h, d; } ed[N * 2];\nbool cmp_sl(E x, E y) { return x.h < y.h; }\nll ans = 0ll; \nint n, dcnt;\nint disc[N];\nstruct seg { ll s, tag; } tr[N << 2];\nvoid pushup(int nod, int l, int r) {\n\tif (tr[nod].tag) tr[nod].s = disc[r + 1] - disc[l];\n\telse if (l == r) tr[nod].s = 0;\n\telse tr[nod].s = tr[lc].s + tr[rc].s; \n}\nvoid upd(int nod, int l, int r, int ql, int qr, int val) {\n\tif (ql <= l && r <= qr) {\n\t\ttr[nod].tag += val;\n\t\tpushup(nod, l, r); \n\t\treturn; \n\t}\n\tint mid = (l + r) >> 1;\n\tif (ql <= mid) upd(lc, l, mid, ql, qr, val);\n\tif (qr > mid) upd(rc, mid + 1, r, ql, qr, val); \n\tpushup(nod, l, r); \n}\nint main() {\n\tread(n);  \n\tfor (int i = 1, x1, y1, x2, y2; i <= n; i ++) {\n\t\tread(x1); read(y1); read(x2); read(y2); \n\t\tdisc[++ dcnt] = x1; ed[dcnt] = (E){x1, x2, y1, 1}; \n\t\tdisc[++ dcnt] = x2; ed[dcnt] = (E){x1, x2, y2, -1};\n\t}\n\tsort(disc + 1, disc + 1 + dcnt); \n\tsort(ed + 1, ed + 1 + dcnt, cmp_sl);\n\tint m = unique(disc + 1, disc + 1 + dcnt) - disc - 1;\n\tfor (int i = 1; i < dcnt; i ++) {\n\t\tint l = lower_bound(disc + 1, disc + 1 + m, ed[i].l) - disc;\n\t\tint r = lower_bound(disc + 1, disc + 1 + m, ed[i].r) - disc;\n\t\tif (l < r) upd(1, 1, m, l, r - 1, ed[i].d); \n\t\tans += tr[1].s * (ed[i + 1].h - ed[i].h); \n\t}\n\tcout << ans << endl; \n\treturn 0; \n}\n```",
        "postTime": 1555834043,
        "uid": 35567,
        "name": "Ayers",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1884 \u3010[USACO12FEB]\u8fc7\u5ea6\u79cd\u690d\uff08\u94f6\uff09Overplanting \u2026\u3011"
    },
    {
        "content": "\u4ecb\u7ecd\u4e00\u4e2a\u597d\u5199\u4e00\u70b9\u7684\u7b97\u6cd5\uff1a\n\n\u770b\u8d77\u6765\u662f\u4e8c\u7ef4\uff0c\u5b9e\u9645\u4e0a\u53ef\u4ee5\u628a\u5b83\u8f6c\u5316\u6210\u4e00\u7ef4\u3002\n\n\u8bfb\u5165\u65f6\u628a\u6570\u636e\u4e2d\u6a2a\u8f74\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u8bb0\u5f55\u4e0b\u6765\u3002\uff08\u8bb0\u5f97\u628a\u6a2a\u7eb5\u90fd-1\uff0c\u56e0\u4e3a\u5b83\u662f\u4ee5\u70b9\u4e3a\u5355\u4f4d\u7684\uff09\n\n\u7528i\u4ece\u6700\u5c0f\u503c\u626b\u63cf\u5230\u6700\u5927\u503c\uff0c\n\n\u7136\u540e\u627e\u4e00\u904dn\uff0c\u627e\u5230\u7ecf\u7531i\u8fd9\u6761\u6a2a\u8f74\u7684\u6240\u6709\u77e9\u9635\uff0c\u5b58\u8d77\u6765\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u7ebf\u6bb5\u8986\u76d6\uff08\u4e0d\u4f1a\u7684\u5148\u53bb\u628a\u201c\u706b\u70e7\u8d64\u58c1\u201d\u8fc7\u4e86\uff09\u3002\n\n\u8fd9\u91cc\u987a\u4fbf\u4e5f\u8bb2\u4e86\u5427\uff1a\n\n1.\u628a\u6240\u6709\u91cd\u53e0\u7684\u538b\u6210\u540c\u4e00\u4e2a\uff08\u8fd9\u5c31\u662f\u79bb\u6563\u5316\uff09\n\n2.\u5168\u52a0\n\n\u6240\u6709\u503c\u52a0\u8d77\u6765\uff0c\u8f93\u51fa\u2014\u2014OVER\n",
        "postTime": 1383136669,
        "uid": 885,
        "name": "wanglichao1121",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1884 \u3010[USACO12FEB]\u8fc7\u5ea6\u79cd\u690d\uff08\u94f6\uff09Overplanting \u2026\u3011"
    },
    {
        "content": "\u79bb\u6563\u5316\n\n\u5c31\u662f\u4e2a\u4e8c\u7ef4\u7684P1496\u706b\u70e7\u8d64\u58c1\n\n\u5177\u4f53\u4e0d\u8be6\u7ec6\u89e3\u91ca\u89c1P1496\n\n\u628a\u7eb5\u5750\u6807\u7684\u6700\u5927\u503c\u5230\u6700\u5c0f\u503c+1(\u56e0\u4e3a\u9762\u79ef\u662f\u6309\u8fb9\u957f\u4e0d\u662f\u6309\u70b9)\u90fd\u505a\u4e00\u904d\u706b\u70e7\u8d64\u58c1\n\n\u7136\u540e\u628a\u6bcf\u4e00\u884c\u7684\u7b54\u6848\u7d2f\u8ba1\u8d77\u6765\n\n\u5bf9\u4e8e\u5b58\u6bcf\u4e00\u884c\u7684\u7ebf\u6bb5\n\n\u6211\u9009\u62e9set\uff0c\u5199\u4e2a\u8fd0\u7b97\u7b26\u91cd\u8f7d\u5c31\u53ef\u4ee5\u81ea\u52a8\u6392\u5e8f\u4e86\n\n\u7528\u4e8c\u7ef4\u6570\u7ec4\u4e5f\u53ef\u4ee5\uff0c\u4e0d\u8fc7\u5c31\u662f\u9700\u8981\u90fd\u624b\u52a8\u6392\u5e8f\u4e00\u904d\n\n```cpp\n#include<set>\n#include<cstdio>\n#include<algorithm>\n#define reg register\nusing namespace std;\nconst int INF=2147483647;\ninline void read(reg int &in)\n{\n    reg int out=0,fh=1;\n    reg char ch=getchar();\n    if (ch=='-')fh=-1;\n    while (ch<48||ch>57)ch=getchar();\n    while (ch>47&&ch<58)\n        out=out*10+ch-48,ch=getchar();\n    in=out*fh;\n}\nstruct line\n{\n    int l,r;\n    bool operator<(const line &ll)const\n    {\n        if (l!=ll.l)return l<ll.l;  //\u5148\u6309\u5de6\u7aef\u70b9\u4ece\u5c0f\u5230\u5927 \n        return r<ll.r; //\u5de6\u7aef\u70b9\u76f8\u540c\u5c31\u6309\u53f3\u7aef\u70b9 \n    }\n};\nset<line>s[20001];  //s[i]\u8868\u793a\u7eb5\u5750\u6807\u4e3ai\u7684\u884c\u4e0a\u6709\u7684\u7ebf\u6bb5 \nint ans,n,maxy=-INF,miny=INF;\nint main()\n{\n    read(n);\n    while (n--)\n    {\n        reg int x1,y1,x2,y2;\n        read(x1);read(y1);read(x2);read(y2);\n        y1+=10000;y2+=10000;  //\u628a\u7eb5\u5750\u6807+10^4\u4e0d\u7136\u6570\u7ec4\u4f1a\u70b8 \n        miny=min(y2,miny);maxy=max(y1,maxy); //\u6c42\u6700\u5c0f\u6700\u5927\u7684\u7eb5\u5750\u6807 \n        for (reg int i=y1;i>y2;i--) //\u5c06y1\u5230y2+1\u6bcf\u4e00\u884c\u90fd\u6dfb\u52a0\u4e00\u6bb5x1x2\u7684\u7ebf\u6bb5 \n            s[i].insert((line){x1,x2});\n    }\n    for (reg int i=maxy;i>miny;i--)  //\u53ef\u53c2\u8003P1496\u706b\u70e7\u8d64\u58c1\u7684\u505a\u6cd5\uff0c\u4e0d\u8be6\u7ec6\u89e3\u91ca \n    {\n        if (s[i].empty())continue; //\u6ca1\u52a0\u8fd9\u53e5\u8bdd80\u5206 \n        reg int end=(*s[i].begin()).r,\n                start=(*s[i].begin()).l,sum=0;\n        for (set<line>::iterator j=s[i].begin();j!=s[i].end();j++)\n        {\n            if (j==s[i].begin())continue;\n            if (end<=(*j).r&&end>=(*j).l)\n                end=max((*j).r,end);\n            else\n                if ((*j).l>end)\n                    sum+=end-start,\n                    start=(*j).l,end=(*j).r;\n        }\n        ans+=sum+end-start;   //\u7d2f\u79ef\u7b54\u6848\n    }\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1507715636,
        "uid": 14374,
        "name": "zhengrunzhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1884 \u3010[USACO12FEB]\u8fc7\u5ea6\u79cd\u690d\uff08\u94f6\uff09Overplanting \u2026\u3011"
    },
    {
        "content": "\n# [\u987e](https://www.luogu.org/blog/RPdreamer/#)[z](https://www.cnblogs.com/-guz/)\n\n~~\u4f60\u6ca1\u6709\u53d1\u73b0\u4e24\u4e2a\u5b57\u91cc\u7684blog\u90fd\u4e0d\u4e00\u6837\u561b~~ qwq\n\n\u96be\u5f97\u9047\u5230\u4e00\u4e2a\u88f8\u7684\u626b\u63cf\u7ebf\u7684\u9898,\u7adf\u7136\u6ca1\u5207\u6389 emmm.\n\n\u770b\u5230$x,y$\u7684\u5750\u6807\u8303\u56f4,\u79bb\u6563\u5316\u5c31\u597d\u4e86\uff01\n\n\u6ca1\u6709\u4e00\u904d\u5207,\u7adf\u7136\u662f\u6ca1\u5f00$long \\ \\ long$!!!\n\n\u592a\u96be\u53d7\u4e86,\u5173\u4e8e\u8fd9\u4e2a\u7684\u8bdd\u5c31\u4e0d\u591aBB,\u7f51\u4e0a\u8bb2\u89e3\u5f88\u591a.\n\n\u5927\u5bb6\u53ef\u4ee5\u53bb\u641c\u4e00\u4e0b\u3002(\u8c8c\u4f3cNOIP\u4e0d\u4f1a\u8003,\u6682\u4e14\u5b66\u4e86)\n\n\u5c06\u6765\u6709\u65f6\u95f4\u5199\u8bb2\u89e3\u597d\u4e86 qwq.\n\n``\u4ee3\u7801``\n\n```c++\n#include<cstdio>\n#include<algorithm>\n#include<iostream>\n#define int long long \n#define R register\n\nusing namespace std;\n\nconst int gz=10086;\n\ninline void in(int &x)\n{\n\tint f=1;x=0;char s=getchar();\n\twhile(!isdigit(s)){if(s=='-')f=-1;s=getchar();}\n\twhile(isdigit(s)){x=x*10+s-'0';s=getchar();}\n\tx*=f;\n}\n\nstruct cod\n{\n\tint l,r,h;\n\tint f;\n\tbool operator <(const cod&a)const\n\t{\n\t\treturn h<a.h;\n\t}\n}edge[gz];\n\nstruct tre\n{\n\tint l,r,s;\n\tint len;\n}tr[gz];\n\n#define ls o<<1\n#define rs o<<1|1\n\nint x[gz],n,tot;\n\nvoid build(R int o,R int l,R int r)\n{\n\ttr[o].l=l;tr[o].r=r;\n\tif(l==r)return;\n\tR int mid=(l+r)>>1;\n\tbuild(ls,l,mid);\n\tbuild(rs,mid+1,r);\n}\n\ninline void up(R int o)\n{\n\tif(tr[o].s)\n\t\ttr[o].len=x[tr[o].r+1]-x[tr[o].l];\n\telse if(tr[o].l==tr[o].r)\n\t\ttr[o].len=0;\n\telse tr[o].len=tr[ls].len+tr[rs].len;\n}\n\nvoid change(R int o,R int l,R int r,R int del)\n{\n\tif(tr[o].l==l and tr[o].r==r)\n\t{\n\t\ttr[o].s+=del;\n\t\tup(o);\n\t\treturn;\n\t}\n\tR int mid=(tr[o].l+tr[o].r)>>1;\n\tif(r<=mid) change(ls,l,r,del);\n\telse if(l>mid) change(rs,l,r,del);\n\telse change(ls,l,mid,del),change(rs,mid+1,r,del);\n\tup(o);\n}\n\nsigned main()\n{\n\tin(n);\n\tfor(R int i=1;i<=n;i++)\n\t{\n\t\tR int x1,x2,y1,y2;\n\t\tin(x1),in(y1),in(x2),in(y2);\n\t\tedge[++tot].l=x1;edge[tot].r=x2;edge[tot].f=-1;\n\t\tedge[tot].h=y1;x[tot]=x1;\n\t\tedge[++tot].l=x1;edge[tot].r=x2;edge[tot].f=1;\n\t\tedge[tot].h=y2;x[tot]=x2;\n\t}\n\tsort(edge+1,edge+tot+1);\n\tsort(x+1,x+tot+1);\n\tint new_n=1;\n\tfor(R int i=2;i<=tot;i++)\n\t\tif(x[new_n]!=x[i])x[++new_n]=x[i];\n\tbuild(1,1,new_n);\n\tint ans=0;\n\tfor(R int i=1;i<=tot;i++)\n\t{\n\t\tR int l=lower_bound(x+1,x+new_n+1,edge[i].l)-x;\n\t\tR int r=lower_bound(x+1,x+new_n+1,edge[i].r)-x-1;\n\t\tchange(1,l,r,edge[i].f);\n\t\tans+=(edge[i+1].h-edge[i].h)*tr[1].len;\n\t}\n\tprintf(\"%lld\",ans);\n}\n```\n\n\n\n",
        "postTime": 1540957101,
        "uid": 87960,
        "name": "\u987ez",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1884 \u3010[USACO12FEB]\u8fc7\u5ea6\u79cd\u690d\uff08\u94f6\uff09Overplanting \u2026\u3011"
    },
    {
        "content": "\u672c\u9898\u53ef\u4ee5\u7528\u79bb\u6563\u5316\u4f18\u5316\u5230O(N^3)\uff0c\u4e5f\u53ef\u4ee5\u7528wanglichao1121\u7684\u65b9\u6cd5\u4f18\u5316\u5230O(N(Y[I]-X[I])\uff0c\u4f46\u662f\uff0c\u5982\u679c\u628a\u4e24\u8005\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u53ef\u4ee5\u5199\u51faO(N^2)\u7684\u7a0b\u5e8f\uff0c\u867d\u7136\u5bf9\u4e8e\u672c\u9898\u7684\u6570\u636e\uff0c\u7b80\u76f4\u5c31\u662f\u6740\u9e21\u7528\u725b\u5200\uff0c\u4f46\u662f\u666e\u53ca\u4e00\u4e0b\u8fd8\u662f\u5f88\u4e0d\u9519\u7684\u3002\n\n\n\u9996\u5148\u7ed9\u51faO(N(Y[I]-X[I])\u7684\u7a0b\u5e8f\uff0c\u601d\u8def\u8be6\u89c1wanglichao1121\u7684\u9898\u89e3\uff08\u867d\u7136\u8bf4\u601d\u8def\u662f\u6211\u60f3\u51fa\u6765\u7684\uff09\uff1a\n\n```delphi\nvar\n  x1,x2,x,y1,y2,y:array[0..100] of longint;\n  min,max,n,i,j,k,tail,ans:longint;\nprocedure swap(var a,b:longint);\nvar t:longint;\nbegin\n  t:=a; a:=b; b:=t;\nend;\nprocedure qsort(r,l:longint);\nvar\n  i,j,mid:longint;\nbegin\n  i:=r; j:=l;\n  mid:=y1[(i+j) shr 1];\n  repeat\n    while y1[i]<mid do inc(i);\n    while y1[j]>mid do dec(j);\n    if i<=j then\n      begin\n        swap(x1[i],x1[j]);\n        swap(x2[i],x2[j]);\n        swap(y1[i],y1[j]);\n        swap(y2[i],y2[j]);\n        inc(i); dec(j);\n      end;\n  until i>j;\n  if i<l then qsort(i,l);\n  if r<j then qsort(r,j);\nend;//\u6839\u636ey\u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u65b9\u4fbf\u540e\u9762\u7684O(N)\u6c42\u7ebf\u6bb5\u8986\u76d6\nbegin\n  readln(n);\n  for i:=1 to n do\n    begin\n      readln(y1[i],x1[i],y2[i],x2[i]);\n      x1[i]:=-x1[i];//\u56e0\u4e3a\u662f\u6570\u5b57\u8d8a\u5927\uff0c\u5c31\u8d8a\u4e0a\u9762\uff0c\u6240\u4ee5\u6a2a\u5750\u6807\u9700\u8981\u53d6\u53cd\uff0c\u9002\u5408\u4eba\u7684\u601d\u8def\n      x2[i]:=-x2[i]-1;//\u6ce8\u610f\u662f\u70b9\u8fb9\uff0c\u6240\u4ee5\u8981\u51cf\u53bb1\n      //y2[i]:=y2[i];\n    end;//\u8bfb\u5165\n  qsort(1,n);//\u6392\u5e8f\n  min:=maxlongint; max:=-min;\n  //min:=x1[1]; max:=x2[n];\n  for i:=1 to n do\n    begin\n      if x1[i]<min then min:=x1[i];\n      if x2[i]>max then max:=x2[i];\n    end;//\u5bfb\u627e\u6700\u4e0a\u9762\u7684\u8fb9\u548c\u6700\u4e0b\u9762\u7684\u8fb9\n  //writeln(min); writeln(max);\n  for i:=min to max do//\u4ece\u4e0a\u5230\u4e0b\u679a\u4e3e\u6bcf\u6761\u8fb9\n    begin\n      k:=0;\n      for j:=1 to n do\n        if (x1[j]<=i) and (x2[j]>=i) then\n          begin\n            inc(k);\n            x[k]:=y1[j];\n            y[k]:=y2[j];\n          end;//\u7edf\u8ba1\u77e9\u5f62\u5185\u542b\u6709\u8fd9\u6761\u8fb9\u7684\u77e9\u5f62\n      if k=0 then continue;\n      //head:=x[1];\n      tail:=y[1];\n      ans:=ans+tail-x[1];\n      for j:=2 to k do\n        if y[j]>tail then\n          if x[j]<tail then\n            begin ans:=ans+y[j]-tail; tail:=y[j]; end else\n            begin ans:=ans+y[j]-x[j]; tail:=y[j]; end;//O(N)\u7ebf\u6bb5\u8986\u76d6\uff0c\u8be6\u89c1\u6d1b\u8c37online judge\u7684\u706b\u70e7\u8d64\u58c1\u9898\u89e3\n    end;\n  writeln(ans);\nend.\n```\n\n\u6211\u4eec\u753b\u51fa\u56fe\u5f62\u4e4b\u540e\uff0c\u53ef\u4ee5\u53d1\u73b0\u6709\u8bb8\u591a\u7ebf\u6bb5\u662f\u5c5e\u4e8e\u540c\u4e00\u7ec4\u77e9\u5f62\u7684\uff0c\u8fd9\u5c31\u7ed9\u4e86\u6211\u4eec\u4f18\u5316\u7684\u601d\u8def\u3002\u56e0\u4e3a\u4e0a\u8ff0\u7b97\u6cd5\u679a\u4e3e\u7ebf\u6bb5\u660e\u663e\u5b58\u5728\u53ef\u4ee5\u5408\u5e76\u7684\u5730\u65b9\u3002\u56e0\u6b64\u6211\u4eec\u5148\u628a\u6240\u6709\u7684\u6a2a\u5750\u6807\u8bb0\u5f55\u4e0b\u6765\uff0c\u7528\u4e00\u7ef4\u666e\u901a\u79bb\u6563\u5316\u7684\u601d\u8def\u5c06\u6a2a\u5750\u6807\u6392\u5e8f\uff0c\u7136\u540e\u5224\u65ad\u4efb\u610f\u4e24\u4e2a\u5750\u6807\u4e4b\u95f4\u7684\u77e9\u5f62\uff0c\u7528O(N)\u626b\u63cf\u5b8c\u6210\u7edf\u8ba1\uff0c\u6700\u540e\u00d7\u5750\u6807\u5dee\u5e76\u7d2f\u52a0\uff0c\u5c31\u53ef\u4ee5\u5b8c\u6210\u4e86\u3002\n\n```delphi\nvar\n  a,x1,x2,x,y1,y2,y:array[0..100] of longint;\n  min,max,n,i,j,k,tail,ans,sum,m:longint;\nprocedure swap(var a,b:longint);\nvar t:longint;\nbegin\n  t:=a; a:=b; b:=t;\nend;\nprocedure qsort(r,l:longint);\nvar\n  i,j,mid:longint;\nbegin\n  i:=r; j:=l;\n  mid:=y1[(i+j) shr 1];\n  repeat\n    while y1[i]<mid do inc(i);\n    while y1[j]>mid do dec(j);\n    if i<=j then\n      begin\n        swap(x1[i],x1[j]);\n        swap(x2[i],x2[j]);\n        swap(y1[i],y1[j]);\n        swap(y2[i],y2[j]);\n        inc(i); dec(j);\n      end;\n  until i>j;\n  if i<l then qsort(i,l);\n  if r<j then qsort(r,j);\nend;\nprocedure sort(r,l:longint);\nvar\n  i,j,mid,t:longint;\nbegin\n  i:=r; j:=l;\n  mid:=a[(i+j) shr 1];\n  repeat\n    while a[i]<mid do inc(i);\n    while a[j]>mid do dec(j);\n    if i<=j then\n      begin\n        t:=a[i]; a[i]:=a[j]; a[j]:=t;\n        inc(i); dec(j);\n      end;\n  until i>j;\n  if i<l then sort(i,l);\n  if r<j then sort(r,j);\nend;\nbegin\n  readln(n);\n  for i:=1 to n do\n    begin\n      readln(y1[i],x1[i],y2[i],x2[i]);\n      x1[i]:=-x1[i];\n      x2[i]:=-x2[i];//\u4e0d\u9700\u8981\u51cf\u4e00\uff0c\u5207\u8bb0\u5207\u8bb0\uff01\uff01\uff01\n      a[i shl 1-1]:=x1[i];\n      a[i shl 1]:=x2[i];\n    end;\n  m:=n shl 1;\n  qsort(1,n);  sort(1,m);\n  for i:=1 to m-1 do//\u679a\u4e3e\u6bcf\u4e2a\u6a2a\u5750\u6807\u4e4b\u95f4\u7684\u7a7a\u95f4\uff0cM\u4e2a\u6a2a\u5750\u6807\uff0cM-1\u4e2a\u533a\u95f4\n    begin\n      k:=0;\n      for j:=1 to n do\n        if (x1[j]<=a[i]) and (x2[j]>=a[i+1]) then\n          begin\n            inc(k);\n            x[k]:=y1[j];\n            y[k]:=y2[j];\n          end;//\u5305\u542b\u6b64\u533a\u95f4\u7684\u77e9\u5f62\n      if k=0 then continue;\n      tail:=y[1];\n      sum:=tail-x[1];\n      for j:=2 to k do\n        if y[j]>tail then\n          if x[j]<tail then\n            begin sum:=sum+y[j]-tail; tail:=y[j]; end else\n            begin sum:=sum+y[j]-x[j]; tail:=y[j]; end;//O(N)\u626b\u63cf\n      sum:=sum*(a[i+1]-a[i]);//\u4e58\u4ee5\u533a\u95f4\u7684\u5bbd\n      ans:=ans+sum;//\u7d2f\u52a0\n    end;\n  writeln(ans);\nend.\n```",
        "postTime": 1383265408,
        "uid": 734,
        "name": "lych",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1884 \u3010[USACO12FEB]\u8fc7\u5ea6\u79cd\u690d\uff08\u94f6\uff09Overplanting \u2026\u3011"
    }
]