[
    {
        "content": "\u4e3a\u5565\u6211\u662f\u4e00\u8840\uff08233\uff09\n\ndp\u6c34\u9898\u3002\n\n\u5feb\u6392\u9884\u5904\u7406\u3002\n\nf[i][j][k]\u8868\u793a\u5339\u914d\u4e0a\u4e86i\u5934\u725b\uff0cFJ\u9009\u62e9\u7684\u662f\u4ed6\u7684\u524dj\u5934\u725b\uff0cFP\u9009\u62e9\u7684\u662f\u524dK\u5934\u725b\u7684\u65b9\u6848\u6570\u3002\n\n\u72b6\u6001\u8f6c\u79fb\u89c1\u4ee3\u7801\u3002\n\n\u65f6\u95f4\u6548\u7387O\uff08nmk\uff09\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#define mo 1000000009\nusing namespace std;\nint a[1005],b[1005],f[12][1005][1005],n,m,p;\nint main(){\n    scanf(\"%d%d%d\",&n,&m,&p);\n    for (int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n    for (int i=1;i<=m;i++) scanf(\"%d\",&b[i]);\n    sort(a+1,a+n+1);\n    sort(b+1,b+m+1);\n    for (int i=0;i<=n;i++)\n        for (int j=0;j<=m;j++) f[0][i][j]=1;\n    for (int i=1;i<=p;i++){\n        for (int j=1;j<=n;j++)\n            for (int k=1;k<=m;k++)\n                if (a[j]>b[k]) f[i][j][k]=f[i-1][j-1][k-1];\n        for (int j=1;j<=n;j++)\n            for (int k=1;k<=m;k++) f[i][j][k]=(f[i][j][k]+f[i][j][k-1])%mo;\n        for (int j=1;j<=n;j++)\n            for (int k=1;k<=m;k++) f[i][j][k]=(f[i][j][k]+f[i][j-1][k])%mo;\n        }\n    printf(\"%d\",f[p][n][m]);\n}\n```",
        "postTime": 1487075022,
        "uid": 33736,
        "name": "\u5927\u5934",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2098 \u3010[USACO16DEC]Team Building\u56e2\u961f\u5efa\u8bbe\u3011"
    },
    {
        "content": "\u5b9a\u4e49$dp[i][j][k]$\u4e3a\u8003\u8651\u524d$i$\u5934FJ\u7684\u725b\uff0c\u524d$j$\u5934FP\u7684\u725b\uff0c\u5171\u9009\u4e86$k$\u5bf9\u7684\u60c5\u51b5\u6570\u3002\n\u90a3\u4e48\u5c31\u4e0d\u96be\u60f3\u5230\u8f6c\u79fb\uff1a\n\n$if(a[i] > b[j])\\space dp[i][j][k] += dp[i-1][j-1][k-1]$ \uff0c\u8fd9\u4e2a\u8f6c\u79fb\u662f\u8003\u8651\u6dfb\u52a0\u4e00\u5bf9\u725b\u7684\u60c5\u51b5\u3002\n\n\u7136\u540e\u8fd8\u6709\uff0c\u8003\u8651\u5230\u6211\u4eec\u5b9a\u4e49\u7684\u72b6\u6001\u662f\u524d$i$\u5934\u548c\u524d$j$\u5934\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u8981sum\u4e00\u904d\uff0c\u6bd4\u5982\u8bf4\uff1a\n```cpp\nfor (int t1 = 1; t1 < i;t1++) { \n  for (int t2 = 1; t2 < j;t2++) {\n\t\tdp[i][j][k] += dp[t1][t2][k];\t\n\t}\n}      \n```\n\u90a3\u4e48\u8fd9\u4e2a\u8f6c\u79fb\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e8c\u7ef4\u524d\u7f00\u548c\u4f18\u5316\u6389\u3002\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nint n, m, K, a[maxn], b[maxn];\nll f[maxn][maxn][11], ans;\n\ninline void add(ll& x, ll y) {\n  x += y;\n  if (x >= mod) x -= mod;\n  if (x < 0) x += mod;\n}\n\ninline void solve() {\n  cin >> n >> m >> K;\n  for (int i = 1; i <= n; i++) cin >> a[i];\n  for (int i = 1; i <= m; i++) cin >> b[i];\n  sort(a + 1, a + 1 + n), sort(b + 1, b + 1 + m);\n  for (int i = 0; i <= n; i++)\n    for (int j = 0; j <= m; j++) f[i][j][0] = 1;\n  for (int k = 1; k <= K; k++) {\n    for (int i = 1; i <= n; i++) {\n      for (int j = 1; j <= m; j++) {\n        add(f[i][j][k], f[i - 1][j][k]);\n        add(f[i][j][k], f[i][j - 1][k]);\n        add(f[i][j][k], -f[i - 1][j - 1][k]);\n        if (a[i] > b[j]) add(f[i][j][k], f[i - 1][j - 1][k - 1]);\n      }\n    }\n  }\n  cout << f[n][m][K] % mod << endl;\n}\n```\n\n",
        "postTime": 1639926404,
        "uid": 385781,
        "name": "guanjinquan",
        "ccfLevel": 0,
        "title": "\u524d\u7f00\u548c\u4f18\u5316\u52a8\u6001\u89c4\u5212"
    },
    {
        "content": "\u8fd9\u91cc\u63d0\u4f9b\u53e6\u4e00\u79cdDP\u7684\u601d\u8def\uff0c\u590d\u6742\u5ea6\u4e3aO((N+M)K^2)\u3002\n\n\u5c06\u6240\u6709\u725b\u6309\u7167\u5206\u6570\u4ece\u5927\u5230\u5c0f\u6392\uff0c\u5206\u6570\u76f8\u540c\u7684FP\u7684\u6392\u524d\u9762\uff0c\u7136\u540e\u6211\u4eec\u6309\u8be5\u987a\u5e8f\u4f9d\u6b21\u770b\u8fd9\u4e2a\u725b\u9009\u4e0d\u9009\u3002\n\nF[i, j, k]\u8868\u793a\u524d i \u5934\u725b\uff0c\u9009\u4e86 FJ \u7684 j \u5934\u725b\uff0c\u9009\u4e86 FP \u7684 k \u5934\u725b\u3002\u90a3\u4e48\u6211\u4eec\u5728\u8f6c\u79fb\u7684\u8fc7\u7a0b\u4e2d\uff0c\u59cb\u7ec8\u8981\u4fdd\u8bc1 j >= k\u3002\u56e0\u4e3a\u4e00\u65e6\u6709\u51fa\u73b0 j < k \u7684\u60c5\u51b5\uff0c\u6839\u636e\u6211\u4eec\u6392\u5e8f\u7684\u987a\u5e8f\uff0c\u540e\u9762\u6ca1\u6709\u80fd\u51fb\u8d25 FP \u591a\u51fa\u6765\u7684\u8fd9 k - j \u5934\u725b\u4e86\u3002\u4f46\u662f\u5982\u679c\u6574\u4e2a\u8fc7\u7a0b\uff0c\u90fd\u6709 j >= k\uff0c\u90a3\u4e48 FJ \u7684\u725b\u59cb\u7ec8\u90fd\u80fd\u51fb\u8d25\u5bf9\u5e94\u7684\u725b\u3002\n\n\u6839\u636e\u5f53\u524d\u725b\u662fFJ\u7684\u8fd8\u662fFP\u7684\uff0c\u8fd8\u6709\u9009\u8fd8\u662f\u4e0d\u9009\u6765\u8fdb\u884c\u8f6c\u79fb\u3002\n\n0. \u4e0d\u9009\u8be5\u5976\u725b\uff1aF[i+1, j, k] += F[i, j, k]\n\n0. \u9009\u8be5\u5976\u725b\uff1a\u5982\u679c\u8be5\u5976\u725b\u662fFJ\u7684\uff0c\u90a3\u4e48F[i+1,j+1,k] += F[i, j, k]\uff1b\u5982\u679c\u8be5\u5976\u725b\u662fFP\u7684\uff0c\u90a3\u4e48F[i+1,j,k+1]+=F[i, j, k]\uff0c\u4f46\u9700\u8981\u6ee1\u8db3 j > k\u624d\u80fd\u8f6c\u79fb\u3002\n",
        "postTime": 1509162292,
        "uid": 54522,
        "name": "\u51b7\u6708\u51b0\u77b3",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2098 \u3010[USACO16DEC]Team Building\u56e2\u961f\u5efa\u8bbe\u3011"
    },
    {
        "content": "\u4e0b\u9762\u4e24\u4e2a$O((n+m)k^2)$\u7684 \u9898\u89e3\u8981\u4e48\u5947\u5947\u602a\u602a\u8981\u4e48\u4e0d\u4e22\u4ee3\u7801\u3002\u8fd9\u91cc\u4e22\u4e00\u4e2a\u5b8c\u6574\u7684\u3002  \n\n\u628a\u6240\u6709\u725b\u653e\u5728\u4e00\u8d77\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u76f8\u540c\u5219$A$\u7684\u725b\u653e\u5728\u524d\u9762\uff0c\u95ee\u9898\u53d8\u4e3a\u4ece\u5e8f\u5217\u4e2d\u9009\u62e9\u4e00\u4e9b\u5143\u7d20\uff0c\u4f7f\u5f97\u4efb\u610f\u524d\u7f00$A$\u5165\u9009\u7684\u4e2a\u6570\u5927\u4e8e$B$\u5165\u9009\u7684\u4e2a\u6570\u3002  \n\n$f[i][j][k]$\u8868\u793a\u8003\u8651\u4e86\u524d$i$\u5934\u725b\uff0c$A$\u5165\u9009\u4e86$j$\u5934\uff0c$B$\u6bd4$A$\u5c11$k$\u5934\uff0c\u8f6c\u79fb\u5c31\u5224\u65ad\u4e0b\u4e00\u5934\u725b\u662f$A$\u7684\u8fd8\u662f$B$\u7684\uff0c\u5982\u679c\u662f$B$\u8fd8\u8981\u5224\u65ad\u5f53\u524d\u72b6\u6001$k$\u662f\u4e0d\u662f\u7b49\u4e8e$0$\u3002  \n  \n\u5177\u4f53\u770b\u4ee3\u7801\u5427\u3002  \n  \n```cpp\n#include <bits/stdc++.h>\n#define Mid ((l + r) >> 1)\n#define lson (rt << 1)\n#define rson (rt << 1 | 1)\nusing namespace std;\nconst int mod = 1e9 + 9;\nint read(){\n\tchar c; int num, f = 1;\n\twhile(c = getchar(),!isdigit(c)) if(c == '-') f = -1; num = c - '0';\n\twhile(c = getchar(), isdigit(c)) num = num * 10 + c - '0';\n\treturn f * num;\n}\nstruct node {\n\tint x, t;\n} a[2009];\nint n, m, p, f[2009][2009][20];\nint cmp(node a, node b) {\n\treturn (a.x == b.x && a.t > b.t) || a.x > b.x;\n}\nvoid up(int &a, int b) {a = (a + b) % mod;}\nsigned main()\n{\n\tn = read(); m = read(); p = read();\n\tfor(int i = 1; i <= n; i++) a[i] = (node){read(), 1};\n\tfor(int i = 1; i <= m; i++) a[i + n] = (node){read(), 2};\n\tsort(a + 1, a + 1 + n + m, cmp); f[0][0][0] = 1;\n\tfor(int i = 0; i <= n + m; i++) {\n\t\tfor(int j = 0; j <= min(i, p); j++) {\n\t\t\tfor(int k = 0; k <= j; k++) {\n\t\t\t\tup(f[i + 1][j][k], f[i][j][k]);\n\t\t\t\tif(a[i + 1].t == 1) up(f[i + 1][j + 1][k + 1], f[i][j][k]);\n\t\t\t\tif(a[i + 1].t == 2 && k) up(f[i + 1][j][k - 1], f[i][j][k]);\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%lld\\n\", f[n + m][p][0]);\n\treturn 0;\n}\n```",
        "postTime": 1612198082,
        "uid": 66548,
        "name": "onglu",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2098 \u3010[USACO16DEC]Team Building P\u3011"
    },
    {
        "content": "\u6211\u4eec\u5217\u51fa\u4e86\u4e24\u4e2a\u52a8\u6001\u89c4\u5212\u7684\u65b9\u6cd5\uff0c\u5728\u8fd9\u91cc\uff0c\u4e00\u4e2a\u662fo\uff08NMK\uff09\u8fd9\u662f\u4e00\u4e2a\u548c o\uff08\uff08N M\uff09K\u4e8c\uff09\u3002\n\n\n\u6211\u4eec\u9996\u5148\u6ce8\u610f\u5230\u6709\u4e00\u4e2ao\uff08N\u4e8cM\u4e8cK\uff09\u52a8\u6001\u89c4\u5212\u7b97\u6cd5\u3002\u8ba9F\uff08N\uff0cM\uff0cK\uff09\u5728\u4e00\u4e9b\u94f6\u884c\u7684\u65b9\u5f0f\u5230\u706b\u67f4K\u5bf9\u7b2c\u4e00N\u519c\u6c11\u7ea6\u7ff0\u7684 \u5976\u725b\u548c\u7b2c\u4e00M\u519c\u6c11\u4fdd\u7f57\u7684\u725b\uff0c\u519c\u592b\u7ea6\u7ff0\u80dc\u3002\u6211\u4eec\u53ef\u4ee5 \u51cf\u5c11K\u5982\u679c\u6211\u4eec\u628a\u4e00\u4e2a\u5f97\u5206\u6700\u9ad8\u7684\u725b\uff0c\u519c\u592b\u7ea6\u7ff0\u548c \u519c\u6c11\u4fdd\u7f57\u4f7f\u7528\u3002\u4e0eo\uff08NM\uff09\u8f6c\u6362\u548co\uff08NMK\uff09\u7f8e\u56fd\uff0c\u6211\u4eec\u5f97\u5230\u4e00\u4e2ao\uff08N\u4e8cM\u4e8cK\uff09\u7b97\u6cd5.\n\n\n\u800c\u4e0d\u662f\u904d\u5386\u6240\u6709o\uff08NM\uff09\u8fc7\u6e21\uff0c\u5982\u679c\u6211\u4eec\u4fdd\u6301\u4e00\u4e2a\u524d\u7f00\u6c42\u548c\uff0c \u6211\u4eec\u53ef\u4ee5F\uff08N\uff0cM\uff0cK\uff09\u8fdb\u5165o\uff081\uff09\u65f6\u95f4\n\n\u53e6\u4e00\u79cd\u65b9\u6cd5\u6765\u51cf\u5c11\u72b6\u6001\u7a7a\u95f4\u662f\u5229\u7528\u7684\u4e8b\u5b9eK\u5c0f\u3002\n\n\n\u800c\u4e0d\u662f\u660e\u786e\u7684\u914d\u5bf9\u5f97\u5206\u6700\u9ad8\u7684\u5976\u725b\uff0c\u519c\u6c11\u7ea6\u7ff0\u548c \u519c\u6c11\u4fdd\u7f57\u4f7f\u7528\uff0c\u6211\u4eec\u5c06\u904d\u5386\u4ece\u725b \u5f97\u5206\u6700\u4f4e\u5f97\u5206\u6700\u9ad8\u3002\u6211\u4eec\u8ddf\u8e2a\u6709\u591a\u5c11\u5976\u725b\u519c\u6c11\u7ea6\u7ff0\u6211\u4eec\u5df2\u5206\u914d \u591a\u5c11\u5976\u725b\u519c\u6c11\u7ea6\u7ff0\u6211\u4eec\u5df2\u5206\u914d\u3002\u6211\u4eec\u8981\u6c42\u6211\u4eec \u4ece\u672a\u5206\u914d\u66f4\u591a\u7684\u5976\u725b\u519c\u6c11\u7ea6\u7ff0\u6bd4Farmer Paul\uff08\u5426\u5219 \u519c\u6c11\u7ea6\u7ff0\u4f1a\u9009\u62e9\u4e00\u5934\u725b\u4f1a\u4e0d\u4f1a\u8d62\uff09\u3002\n\n\n\u8fd9DPo\uff08\uff08N M\uff09K2\uff09\u548co\uff081\uff09\u8f6c\u6362\u3002\n\n\n\u4ee3\u7801\uff1a\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <algorithm>\nusing namespace std;\nstruct Node {\n    int value;\n    bool isFj;\n    bool operator<(Node const& other) const {\n        if (value == other.value) {\n            return isFj && !other.isFj;\n        }\n        return value < other.value;\n    }\n};\n#define NMAX 1000\n#define KMAX 10\n#define MOD 1000000009\nunsigned int dp[2 * NMAX + 1][KMAX + 1][KMAX + 1];\nint main() {\n    int n, m, k;\n    scanf(\"%d\", &n);\n    scanf(\"%d\", &m);\n    scanf(\"%d\", &k);\n    vector<Node> nodes;\n    for (int i = 0; i < n; i++) {\n        Node n;\n        scanf(\"%d\", &n.value);\n        n.isFj = true;\n        nodes.push_back(n);\n    }\n    for (int i = 0; i < m; i++) {\n        Node n;\n        scanf(\"%d\", &n.value);\n        n.isFj = false;\n        nodes.push_back(n);\n    }\n    sort(nodes.begin(), nodes.end());\n    for (int i = 0; i <= k; i++) {\n        for (int j = 0; j <= k; j++) {\n            dp[nodes.size()][i][j] = (i == 0 && j == 0 ? 1 : 0);\n        }\n    }\n    for (int pos = nodes.size() - 1; pos >= 0; pos--) {\n        for (int i = 0; i <= k; i++) {\n            for (int j = 0; j <= k; j++) {\n                if (j > i) {\n                    dp[pos][i][j] = 0;\n                } else {\n                    if (nodes[pos].isFj) {\n                        dp[pos][i][j] = (dp[pos+1][i][j] + (i > 0 ? dp[pos+1][i-1][j] : 0)) % MOD;\n                    } else {\n                        dp[pos][i][j] = (dp[pos+1][i][j] + (j > 0 ? dp[pos+1][i][j-1] : 0)) % MOD;\n                    }\n                }\n            }\n        }\n    }\n    printf(\"%d\\n\", dp[0][k][k]);\n}\n```",
        "postTime": 1509981710,
        "uid": 41717,
        "name": "\u4e00\u9897\u8d5b\u8247",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2098 \u3010[USACO16DEC]Team Building\u56e2\u961f\u5efa\u8bbe\u3011"
    }
]