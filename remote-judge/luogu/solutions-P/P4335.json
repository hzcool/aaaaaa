[
    {
        "content": "## \u642c\u8fd0+\u7ffb\u8bd1Croatian Olympiad in Informatics 2007\u5b98\u65b9\u9898\u89e3\n\nUpon closer inspection, the task asks to count, among all cells at most K steps from the origin, thenumber of cells with even distance and the number of cells with odd distance. \n \n\u8fd9\u9053\u9898\u8981\u6c42\u6211\u4eec\u8ba1\u6570\uff0c\u5230\u539f\u70b9\u7684\u8ddd\u79bb\u4e0d\u8d85\u8fc7$K$\u6b65\u7684\u683c\u5b50\u4e2d\uff0c\u5177\u6709\u5076\u6570\u8ddd\u79bb\u548c\u5947\u6570\u8ddd\u79bb\u7684\u683c\u5b50\u6570\u3002\n \nOne might say that we'recolouring the cells with two colours.Thecolour of a cell is uniquely determined by its coordinates, since each step changes the parity of theexpression x+y. Because of this, two adjacent cells are necessarily coloured differently. Additionally, thedistances of two adjacent cells differ by exactly 1.\n \n\u6709\u4eba\u8bf4\u53ef\u4ee5\u7528\u4e8c\u5206\u56fe\u67d3\u8272\u4e71\u641e\u4e00\u4e0b\u3002\u5355\u5143\u683c\u7684\u989c\u8272\u662f\u7531\u5b83\u7684\u5750\u6807\u51b3\u5b9a\u7684\uff0c\u56e0\u4e3a\u6bcf\u8d70\u4e00\u6b65\u90fd\u4f1a\u6539\u53d8$x+y$\u7684\u5947\u5076\u6027\u3002\u56e0\u6b64\u76f8\u90bb\u7684\u4e24\u4e2a\u683c\u5b50\u989c\u8272\u4e00\u5b9a\u4e0d\u540c\u3002\u6b64\u5916\uff0c\u4e24\u4e2a\u76f8\u90bb\u683c\u5b50\u7684\u8ddd\u79bb\u662f1\u3002\n \nThe image shows the second sample test, with a slightly larger number of steps S. Observe the smallestrectangle surrounding all obstacles and the origin, and expand it one cell in all four directions:\n \n\u56fe\u7247\u663e\u793a\u4e86\u7b2c\u4e8c\u7ec4\u6837\u4f8b\uff0c\u8fd9\u7ec4\u6837\u4f8b\u7684S\u6bd4\u8f83\u5927\u3002\u89c2\u5bdf\u5305\u542b\u6240\u6709\u969c\u788d\u7269\u548c\u539f\u70b9\u7684\u6700\u5c0f\u77e9\u5f62\uff0c\u5728\u5176\u57fa\u7840\u4e0a\u6269\u5c55\u4e00\u5708\u3002\n \n![](https://cdn.luogu.com.cn/upload/pic/15991.png )\n\nThe absolute values of the obstacles' coordinates are at most 1000 so the distances of all cells inside therectangle can be found with breadth-first search.\n \n~~\u9762\u5411\u6570\u636e\u7f16\u7a0b\uff0c~~\u969c\u788d\u7269\u5750\u6807\u7684\u7edd\u5bf9\u503c\u6700\u591a\u4e3a1000\uff0c\u6240\u4ee5\u8fd9\u4e2a\u77e9\u5f62\u5185\u6240\u6709\u7684\u683c\u5b50\u90fd\u53ef\u4ee5BFS\u5230\u3002\n \nFor example, consider a cell is on the left edge of the rectangle (but inside it), distance some D stepsfrom the origin. Then exactly K\u2013D cells to its left (outside the rectangle) will be coloured, and simpleformulas will give the number of cells of one and the other colour in O(1). We proceed identically forcells on the other three edges of the rectangle.\n \n\u4f8b\u5982\uff0c\u8003\u8651\u4e00\u4e2a\u5728\u8fd9\u4e2a\u77e9\u5f62\u5de6\u8fb9\u7f18\u4e0a\uff08\u4f46\u662f\u5728\u5176\u5185\u90e8\uff09\u7684\u4e00\u4e2a\u683c\u5b50\uff0c\u8ddd\u79bb\u539f\u70b9D\u6b65\u3002\u90a3\u4e48\u5728\u5b83\u5de6\u8fb9\u6240\u6709\u79bb\u539f\u70b9K~D\u6b65\u7684\u683c\u5b50\u90fd\u53ef\u4ee5\u5728$O(1)$\u65f6\u95f4\u5185\u67d3\u4e0a\u8272\u3002\u6211\u4eec\u5bf9\u5176\u4ed6\u4e09\u8fb9\u4e5f\u8fd9\u4e48\u641e\u3002\n \nWe still need to count the cells off the corners; for example, the cells above and to the left of the yellowcell in the upper-left corner of the rectangle. A triangular pattern is obvious and there are formulas (seesample code) for this case too. But since S is on the order of millions, doing it in O(S) for each cornerinstead of O(1) will do, too.\n \n\u6211\u4eec\u8fd8\u8981\u8ba1\u7b97\u89d2\u843d\u91cc\u7684\u683c\u5b50\uff0c\u6bd4\u5982\u5de6\u4e0a\u8fb9\u7684\u51e0\u4e2a\u683c\u3002\u4e00\u4e2a\u4e09\u89d2\u5f62\u662f\u5f88\u5bb9\u6613\u7528\u516c\u5f0f\uff08\u4f60\u53ef\u4ee5\u770b\u6807\u7a0b\u91cc\u7684\u516c\u5f0f\uff09\u7b97\u7684\u3002\u4f46\u56e0\u4e3aS\u662f$1e6$\u7684\uff0c\u6240\u4ee5\u6bcf\u4e2a\u89d2$O(S)$\u800c\u4e0d\u662f$O(1)$\u4e5f\u53ef\u8fc7\u3002\n\n```\n/*\n  Croatian Olympiad in Informatics 2007\n  Task SABOR\n*/\n\n#include <cstdio>\n#include <queue>\n#include <iostream>\nusing namespace std;\n\n#define MAX 1000\n\nvoid edge(int x, int y, int d, int K, long long res[2])\n{\n   res[(x+y)%2]   += (K-d)/2;\n   res[(x+y+1)%2] += (K-d+1)/2;\n}\n\nvoid corner(int x, int y, int d, int K, long long res[2])\n{\n   long long n;\n   n = (K-d)/2;   res[(x+y)%2]   += n*n;\n   n = (K-d-1)/2; res[(x+y+1)%2] += n*(n+1);\n}\n\nint main()\n{\n   int P, K;\n   scanf( \"%d%d\", &P, &K );\n   ++K;\n\n   static int d[2*MAX+3][2*MAX+3];\n   int x0=MAX+1, y0=MAX+1;\n   int\n      minx = x0, maxx = x0,\n      miny = y0, maxy = y0;\n   \n   for ( int i=0; i<P; ++i ) {\n      int x, y;\n      scanf( \"%d%d\", &x, &y );\n      x += x0; y += y0;\n      minx = min( minx, x ); maxx = max( maxx, x );\n      miny = min( miny, y ); maxy = max( maxy, y );\n      d[x][y] = -1;\n   }\n   --minx; --miny;\n   ++maxx; ++maxy;\n\n   long long res[2] = { 0, 0 };\n\n   queue<int> qx, qy;\n   d[x0][y0] = 1;\n   qx.push(x0); qy.push(y0); \n   while ( !qx.empty() ) {\n      int x = qx.front(); qx.pop();\n      int y = qy.front(); qy.pop();\n\n      ++res[(x+y)%2];\n      if ( d[x][y] == K ) {\n         continue;\n      }\n      if ( x == minx || x == maxx ) edge(x, y, d[x][y], K, res);\n      if ( y == miny || y == maxy ) edge(x, y, d[x][y], K, res);\n      \n      static const int dx[] = { -1, 0, 1, 0 };\n      static const int dy[] = { 0, 1, 0, -1 };\n      for ( int dir=0; dir<4; ++dir ) {\n         int nx = x + dx[dir], ny = y + dy[dir];\n         if ( nx < minx || nx > maxx || ny < miny || ny > maxy || d[nx][ny] != 0 ) continue;\n\n         d[nx][ny] = d[x][y] + 1;\n         qx.push( nx ); qy.push( ny );\n      }\n   }\n\n   if ( d[minx][miny] > 0 ) corner( minx, miny, d[minx][miny], K, res );\n   if ( d[minx][maxy] > 0 ) corner( minx, maxy, d[minx][maxy], K, res );\n   if ( d[maxx][miny] > 0 ) corner( maxx, miny, d[maxx][miny], K, res );\n   if ( d[maxx][maxy] > 0 ) corner( maxx, maxy, d[maxx][maxy], K, res );\n\n   cout << res[0] << ' ' << res[1] << endl;\n\n   return 0;\n}\n```",
        "postTime": 1521780873,
        "uid": 53374,
        "name": "SuperJvRuo",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4335 \u3010[COCI2007] Sabor\u3011"
    }
]