[
    {
        "content": "\u5927\u591a\u6570\u4eba\u7528\u7684\u7ebf\u6bb5\u6811\uff0c\u597d\u5199\u597d\u8c03\u7684\u6700\u77ed\u8def\u5c45\u7136\u6ca1\u4ec0\u4e48\u4eba\u5199\uff1f\n\n\u6700\u77ed\u8def\u7684\u552f\u4e00\u4e00\u7bc7\u9898\u89e3\u6ca1\u5224\u65e0\u89e3\uff0c\u7801\u98ce\u6bd2\u7624\uff1f\n\n\u662f\u65f6\u5019\u6765\u4e00\u7bc7\u8ba4\u771f\u7684\u6700\u77ed\u8def\u9898\u89e3\u4e86\uff01\n\n\u8003\u8651\u8f6c\u5316\u9898\u610f\u3002\n\n\u8981\u8ba9\u8d77\u70b9\u5230\u7ec8\u70b9\u4e4b\u95f4\u7684\u5168\u90e8\u70b9\u88ab\u8986\u76d6\uff0c\n\n\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u6bcf\u4e00\u5934\u5976\u725b\u89c6\u4e3a\u4ece\u8d77\u59cb\u65f6\u95f4\u5230\u7ec8\u6b62\u65f6\u95f4\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a\u5de5\u8d44\u7684\u8fb9\u3002\n\n\u540c\u65f6\uff0c\u6bcf\u4e00\u4e2a\u65f6\u95f4\u70b9\u5411\u524d\u4e00\u6761\u65f6\u95f4\u70b9\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a\u96f6\u7684\u8fb9\u3002\n\n~~\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff0c~~ \u6211\u4eec\u53d1\u73b0\u7528\u8fd9\u79cd\u65b9\u5f0f\u5efa\u56fe\uff0c\u5f53\u67d0\u4e2a\u70b9\u80fd\u591f\u88ab\u5230\u8fbe\u65f6\uff0c\u4ece\u8d77\u70b9\u5230\u5b83\u4e4b\u95f4\u7684\u6bcf\u4e00\u4e2a\u70b9\u90fd\u5fc5\u5b9a\u5df2\u88ab\u8986\u76d6\u3002\n\n\u56e0\u4e3a\u5bf9\u4efb\u4f55\u4e00\u4e2a\u70b9\u800c\u8a00\uff0c\u53ea\u6709\u5f53\u4e00\u6761\u8d77\u70b9\u88ab\u8986\u76d6\u7684\u8fb9\u4ee5\u5b83\u4e3a\u7ec8\u70b9\u6216\u8d8a\u8fc7\u5b83\uff0c\u5b83\u624d\u662f\u88ab\u8986\u76d6\u7684\uff1b\u800c\u4e00\u6761\u8fb9\u7684\u8d77\u70b9\u8981\u88ab\u8986\u76d6\uff0c\u540c\u6837\u8981\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u3002\u4ee5\u6b64\u7c7b\u63a8\uff0c\u4ece\u8d77\u70b9\u5230\u5b83\u4e4b\u95f4\u7684\u6240\u6709\u70b9\u90fd\u5e94\u8be5\u88ab\u8986\u76d6\u4e86\u3002\n\n\u4e8e\u662f\u5f53\u7ec8\u70b9\u80fd\u88ab\u5230\u8fbe\u65f6\uff0c\u5c31\u6ee1\u8db3\u4e86\u6240\u6709\u65f6\u95f4\u70b9\u90fd\u88ab\u8986\u76d6\u7684\u8981\u6c42\u3002\n\n\u7531\u4e8e\u5411\u540e\u7684\u8fb9\u6743\u5c31\u662f\u5de5\u8d44\uff0c\u5411\u524d\u7684\u8fb9\u6743\u4e3a\u96f6\u4e0d\u5f71\u54cd\u7b54\u6848\uff0c\n\n\u6240\u4ee5\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8def\u5c31\u662f\u7b54\u6848\u3002\u3002\u3002\n\n\u7ec8\u70b9\u65e0\u6cd5\u5230\u8fbe\u5c31\u662f\u65e0\u89e3\u3002\u3002\u3002\n\n\u8fd8\u6709\u4e00\u70b9\u5f88\u91cd\u8981\uff0c\u9898\u4e2d\u7ed9\u7684\u662f\u65f6\u95f4\u70b9\uff0c\u800c\u8fd9\u4e2a\u7b97\u6cd5\u9700\u8981\u65f6\u95f4\u6bb5\u3002\n\n\u90a3\u4e48\u6211\u4eec\u628a\u6bcf\u6761\u8fb9\u7684\u7ec8\u70b9\u52a0\u4e00\uff0c\u5c31\u628a\u4e00\u4e2a\u65f6\u95f4\u70b9\u62c6\u51fa\u4e86\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u53d8\u6210\u4e86\u65f6\u95f4\u6bb5\u3002\n\n\u4e8e\u662f\u4ee3\u7801\u5c31\u51fa\u6765\u4e86\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n\nchar gc()\n{\n    static char buf[1<<16],*p1=buf,*p2=buf;\n    if(p1==p2)\n    {\n        p2=(p1=buf)+fread(buf,1,1<<16,stdin);\n        if(p1==p2)return EOF;\n    }\n    return *p1++;\n}\n\n//#define gc getchar\n\ntemplate<typename _Tp>\nvoid read(_Tp& x)\n{\n    x=0;\n    char c=gc();\n    while(c<'0'||c>'9')c=gc();\n    while(c>='0'&&c<='9')\n    {\n        x=(x<<1)+(x<<3)+(c^48);\n        c=gc();\n    }\n}\n\nconst int N=100005,M=300005;\n\nint head[N];\nlong long dis[N];\nbool vis[N];\n\nstruct Edge\n{\n    int next,to;\n    long long w;\n};\nEdge E[M];\nvoid add(int u,int v,int w)\n{\n    static int tot=0;\n    E[++tot].next=head[u];\n    E[tot].to=v;\n    E[tot].w=w;\n    head[u]=tot;\n}\n\ntypedef std::pair<long long,int> Node;\n\nvoid dijkstra(int s)\n{\n    memset(dis,0x3f,sizeof(dis));\n    std::priority_queue<Node,std::vector<Node>,std::greater<Node> > q;\n    dis[s]=0;\n    q.push(Node(0,s));\n    while(!q.empty())\n    {\n        int u=q.top().second;\n        if(vis[u])\n        {\n            q.pop();\n            continue;\n        }\n        q.pop();\n        vis[u]=1;\n        for(int i=head[u];i;i=E[i].next)\n        {\n            int v=E[i].to;\n            if(dis[v]>dis[u]+E[i].w)\n            {\n                dis[v]=dis[u]+E[i].w;\n                q.push(Node(dis[v],v));\n            }\n        }\n    }\n}\n\nint main()\n{\n    int n,S,E;\n    read(n),read(S),read(E);\n    for(int i=S;i<E;++i)\n    {\n        add(i+1,i,0);\n    }\n    for(int i=0;i<n;++i)\n    {\n        int u,v,w;\n        read(u),read(v),read(w);\n        if(u<S)u=S;\n        if(v>E)v=E;\n        add(u,v+1,w);\n    }\n    dijkstra(S);\n    printf(\"%lld\",dis[E+1]==0x3f3f3f3f3f3f3f3f?-1:dis[E+1]);\n}\n\n```\n\n",
        "postTime": 1561179223,
        "uid": 60489,
        "name": "\u5c0f\u83dc\u9e1f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4644 \u3010[Usaco2005 Dec]Cleaning Shifts \u6e05\u7406\u725b\u68da\u3011"
    },
    {
        "content": "### \u6570\u636e\u7ed3\u6784\u4f18\u5316DP\n\n~~\u7ebf\u6bb5\u6811\u662f\u4ec0\u4e48,\u6211\u4e0d\u77e5\u9053~~\n\n\u6240\u4ee5\u641e\u4e86\u4e2a$fhq \\ Treap$\n\n\u4ec0\u4e48?\u4e0d\u77e5\u9053?\u4e0d\u4f1a?\u5de6\u8f6c\u67d0\u8c37\u65e5\u62a5,\u53f3\u8f6c\u5e73\u8861\u6811\u6a21\u677f\u9898\n\n$dp_{i}$\u8868\u793a\u8986\u76d6$[L,i]$\u7684\u6700\u5c0f\u82b1\u8d39,\u521d\u59cb\u5316$\\ \\ \\ dp_{L-1}=0$\n\n\u628a\u725b\u6309$T2$\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\n\u8bbe\u76ee\u524d\u662f\u7b2c$i$\u5934\u725b,\u5b58\u725b\u7684\u6570\u636e\u7684\u6570\u7ec4\u4e3a$a$\n\n$dp_{a[i].T2}= \\min\\limits_{a[i].T1-1 \\le j \\le a[i].T2-1} \\{dp_{j}\\}+a[i].s$\n\n\u8fd9\u662f$O(n^2)$\n\n\u53d6\u533a\u95f4\u6700\u5c0f\u503c\u663e\u7136\u53ef\u4ee5\u7528\u6570\u636e\u7ed3\u6784\u4f18\u5316\n\n\u7ebf\u6bb5\u6811,emm...\n\nNO\n\n\u7528$fhq \\ Treap$\n\n\u56e0\u4e3a\u53ea\u7528\u5b58\u6709\u7528\u7684\u4f4d\u7f6e,\u4e0d\u7528\u628a\u6bcf\u4e2a\u4f4d\u7f6e\u90fd\u5f00\u4e86,\u7f29\u5c0f\u4e86\u5e38\u6570\u548c\u7a7a\u95f4\n\n\u5982\u679c$n$\u5f88\u5927,$fhq \\ Treap$\u5c31\u6709\u5b83\u7684\u597d\u5904\u4e86:**\u4e0d\u7528\u79bb\u6563\u5316**\n\n\u6bcf\u4e2a\u8282\u70b9\u53ea\u7528\u8bb0\u5f55\u6240\u62e5\u6709\u5b50\u6811\u7684\u6700\u5c0f\u503c\u5373\u53ef\n\n$O(n \\log n)$\n\n\u5199\u4e2a\u63d2\u5165\u548c\u53d6\u533a\u95f4\u6700\u5c0f\u503c\u5373\u53ef:\n\n\u63d2\u5165:\n\n```cpp\nvoid Insert(int pos,int val){\n\tint l,r;\n\tSplit(root,pos-1,l,r);\n\troot=Merge(Merge(l,NewNode(pos,val)),r);\n}\n```\n\n\u53d6\u533a\u95f4\u6700\u5c0f\u503c:\n\n```cpp\nint Ask(int x,int y){\n\tint l,p,r;\n\tSplit(root,y,l,r);\n\tSplit(l,x-1,l,p);\n\tint ans;\n\tif(!p)ans=-1;\n\telse ans=t[p].mn;\n\troot=Merge(Merge(l,p),r);\n\treturn ans;\n}\n```\n\n*Code:* ~~\u957f\u957f\u957f...~~\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<ctime>\n#include<algorithm>\n#include<cstdlib>\nusing namespace std;\n#define N 200010\ninline int read(){\n    int x=0,f=1;\n    char c=getchar();\n    while(c<'0'||c>'9'){\n        if(c=='-')f=-1;\n        c=getchar();\n    }\n    while(c>='0'&&c<='9'){\n        x=(x<<3)+(x<<1)+c-'0';\n        c=getchar();\n    }\n    return x*f;\n}\nint n,L,R,dp[N],root,cnt;\nstruct Cow{\n\tint l,r,s;\n}a[N];\nbool cmp(Cow x,Cow y){\n\treturn x.r<y.r;\n}\nstruct fhq_node{\n\tint key,ch[2],mn,val,pos,siz;\n}t[N];\nvoid update(int k){\n\tt[k].mn=t[k].val;\n\tt[k].siz=t[t[k].ch[0]].siz+t[t[k].ch[1]].siz+1;\n\tif(t[k].ch[0])t[k].mn=min(t[t[k].ch[0]].mn,t[k].mn);\n\tif(t[k].ch[1])t[k].mn=min(t[t[k].ch[1]].mn,t[k].mn);\n} \nint NewNode(int pos,int val){\n\tint k=++cnt;\n\tt[k].siz=1;\n\tt[k].val=t[k].mn=val;\n\tt[k].pos=pos;\n\tt[k].ch[1]=t[k].ch[0]=0;\n\tt[k].key=rand();\n\treturn k;\n}\nint Merge(int l,int r){\n\tif(!l||!r)return l+r;\n\tif(t[l].key<t[r].key){\n\t\tt[l].ch[1]=Merge(t[l].ch[1],r);\n\t\tupdate(l);\n\t\treturn l;\n\t}\n\telse{\n\t\tt[r].ch[0]=Merge(l,t[r].ch[0]);\n\t\tupdate(r);\n\t\treturn r;\n\t}\n}\nvoid Split(int k,int data,int &l,int &r){\n\tif(!k){\n\t\tl=r=0;\n\t\treturn ;\n\t}\n\tif(t[k].pos<=data){\n\t\tl=k;\n\t\tSplit(t[k].ch[1],data,t[k].ch[1],r);\n\t}\n\telse{\n\t\tr=k;\n\t\tSplit(t[k].ch[0],data,l,t[k].ch[0]);\n\t}\n\tupdate(k);\n}\nvoid Insert(int pos,int val){\n\tint l,r;\n\tSplit(root,pos-1,l,r);\n\troot=Merge(Merge(l,NewNode(pos,val)),r);\n}\nint Ask(int x,int y){\n\tint l,p,r;\n\tSplit(root,y,l,r);\n\tSplit(l,x-1,l,p);\n\tint ans;\n\tif(!p)ans=-1;\n\telse ans=t[p].mn;\n\troot=Merge(Merge(l,p),r);\n\treturn ans;\n}\nint main(){\n\tmemset(dp,0x3f,sizeof(dp));\n\tsrand(time(0));\n\tn=read();L=read()+1,R=read()+1;\n\troot=NewNode(L-1,0);\n\tfor(int i=1;i<=n;i++){\n\t\ta[i].l=read()+1,a[i].r=read()+1,a[i].s=read();\n\t}\n\t\n\tsort(a+1,a+n+1,cmp);\n\tfor(int i=1;i<=n;i++){\n\t\tint tmp=Ask(a[i].l-1,a[i].r-1);\n\t\tif(tmp==-1){\n\t\t\tcontinue;\n\t\t}\n\t\tdp[a[i].r]=tmp+a[i].s;\n\t\tInsert(a[i].r,dp[a[i].r]);\n\t}\n\tint ans=999999999;\n\tfor(int i=R;i<=a[n].r;i++){\n\t\tans=min(ans,dp[i]);\n\t} \n\tif(ans==999999999){\n\t\tcout<<-1<<endl;\n\t} \n\telse cout<<ans<<endl;\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1572765651,
        "uid": 100285,
        "name": "Froggy",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4644 \u3010[USACO05DEC]Cleaning Shifts\u3011"
    },
    {
        "content": "\u66f4\u597d\u4f53\u9a8c\u89c1\u535a\u5ba2 [https://www.cnblogs.com/zhylj/p/10387852.html](https://www.cnblogs.com/zhylj/p/10387852.html)\n\n### \u9898\u76ee\n\n\u7ed9\u5b9a $n$ \u4e2a\u533a\u95f4 $[a_i, b_i]$, \u82b1\u8d39\u4e3a $c_i$, \u6c42\u8986\u76d6 $[L, R]$ \u533a\u95f4\u7684\u6240\u6709\u6574\u6570\u7684\u6700\u5c0f\u82b1\u8d39. $0\\le n \\le 10^4, 0\\le L,R\\le 86399$\n\n### \u5206\u6790\n\n\u4e00\u9053\u5f88\u6c34\u7684\u9898\u76ee.\n\n\u8bbe $f(i)$ \u4ee3\u8868\u76ee\u524d\u9009\u62e9\u4e86\u7b2c $i$ \u4e2a\u533a\u95f4, \u4e14\u7b2c $i$ \u4e2a\u533a\u95f4\u4ee5\u524d\u7684\u7684\u6240\u6709\u6570\u90fd\u9009\u62e9\u5230\u4e86.\n\n\u6613\u5f97:\n$$\nf(i) = \\min_{b_j > a_i, b_i < b_j} f(j) + c_i\n$$\n\u4e00\u770b, \u8fd9\u4e0d\u5c31\u662f\u88f8\u7684\u4e8c\u7ef4\u504f\u5e8f (\u5176\u5b9e\u6211\u5e76\u4e0d\u77e5\u9053\u4e8c\u7ef4\u504f\u5e8f\u7684\u5b9a\u4e49\u662f\u5565).\n\n\u5148\u628a\u533a\u95f4\u6309 $b_i$ \u6392\u5e8f, \u5f97\u5230:\n$$\nf(i) = \\min_{b_j > a_i} f(j) + c_i\n$$\n\u663e\u7136\u6709:\n$$\nb_j > a_i \\Rightarrow X-b_j < X-a_i\n$$\n\u5176\u4e2d $X$ \u968f\u4fbf\u53d6\u4e00\u4e2a\u8f83\u5927\u7684\u503c.\n\n\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u53ea\u505a\u4e86\u5355\u70b9\u51cf\u5c11\u548c\u524d\u7f00\u6700\u5c0f\u503c.\n\n\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4, \u65f6\u95f4\u590d\u6742\u5ea6 $O(R\\log n)$.\n\n$92\\ ms$ \u5c31\u8fc7\u4e86.\n\n### \u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\nconst int kMaxSize = 1e6 + 5, inf = 0x3f3f3f3f;\n\nint s[kMaxSize + 233], n;\n\nvoid Modify(int x, int y) {\n\tx = kMaxSize - x;\n\twhile(x <= kMaxSize) {\n\t\ts[x] = std::min(s[x], y);\n\t\tx += x & -x;\n\t}\n}\n\nint Query(int x) {\n\tx = kMaxSize - x;\n\tint ret = inf;\n\twhile(x > 0) {\n\t\tret = std::min(s[x], ret);\n\t\tx -= x & -x;\n\t}\n\treturn ret;\n}\n\nstruct Struct {\n\tint a, b, c;\n} p[kMaxSize];\n\nbool cmp(Struct x, Struct y) {\n\treturn x.b < y.b;\n}\n\nint f[kMaxSize], ans = inf;\nint main() {\n\tmemset(s, 0x3f, sizeof(s));\n\tmemset(f, 0x3f, sizeof(f));\n\tint l, r;\n\tscanf(\"%d%d%d\", &n, &l, &r);\n\tfor(int i = 1; i <= n; i++)\n\t\tscanf(\"%d%d%d\", &p[i].a, &p[i].b, &p[i].c);\n\tstd::sort(p + 1, p + n + 1, cmp);\n\tfor(int i = 1; i <= n; i++) {\n\t\tif(p[i].a > l) f[i] = Query(p[i].a - 1) + p[i].c;\n\t\telse f[i] = p[i].c;\n\t\tModify(p[i].b, f[i]);\n\t\tif(p[i].b >= r) ans = std::min(ans, f[i]);\n\t}\n\tif(ans >= inf) printf(\"-1\");\n\telse printf(\"%d\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1550301181,
        "uid": 34238,
        "name": "zhylj",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4644 \u3010[Usaco2005 Dec]Cleaning Shifts \u6e05\u7406\u725b\u68da\u3011"
    },
    {
        "content": "# \u8fd9\u91cc\u63a8\u8350\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u4f18\u5316DP\u7684\u5199\u6cd5,\n\u6211\u4eec\u5148\u628a\u8be5\u9898\u76ee\u8f6c\u6362\u6210\u4e00\u4e2a**\u5e26\u6743\u503c\u7684\u7ebf\u6bb5\u8986\u76d6**\u95ee\u9898\uff1a\n\n\n\u7ed9\u5b9a\u4e00\u4e2a\u533a\u95f4[l,r]\uff0c\u63a5\u7740\u518d\u7ed9n\u6761\u5e26\u6743\u503c\u7684\u8fb9\uff0c\u8fb9\u7684\u5de6\u7aef\u70b9\u4e3a$a_i$, \u53f3\u7aef\u70b9\u4e3a$b_i$,\u4f7f\u7528\u8be5\u8fb9\u7684\u4ee3\u4ef7\u4e3a$c_i$\n\n\n\n------------\n\n\n### \u6211\u4eec\u7528f[x]\u8868\u793a\u8986\u76d6[l,x]\u7684\u6700\u5c0f\u4ee3\u4ef7\n\u6392\u5e8f\uff0c\u6309 $b_i$ \u7684\u503c\u5347\u5e8f\u6392\u5e8f\uff0c\u4ece $b_1$ \u5230 $b_n$ \u904d\u5386\u4e00\u904d\uff0c\n\u6211\u4eec\u80fd\u63a8\u51fa\u4e00\u4e2a\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b:$$f[b_i]=min ({f[x]},f[b_i])+c_i$$\n\n$f[x]$\u7684\u542b\u4e49\u662f\uff1a\u6570\u7ec4f\u5728\u533a\u95f4$[a_i-1,b_i]$\u7684\u6700\u5c0f\u503c\n\n# \u8bc1\u660e\n\n\u6211\u4eec\u8bbe\u4e0a\u4e00\u6bb5\u7684\u5de6\u7aef\u70b9\u4e3ap,\u53f3\u7aef\u70b9\u4e3aq\uff0c\u5982\u679c\u533a\u95f4\u80fd\u591f\u88ab\u5b8c\u5168\u8986\u76d6\u90a3\u4e48$a_{i-1}$\u4e00\u5b9a\u5c0f\u4e8e\u7b49\u4e8eq\uff0c\u800c\u4e0a\u4e00\u6bb5\u7684 f[q] \u5df2\u7ecf\u6c42\u51fa\u6765\u4e86\uff0c\u6839\u636e\u65e0\u540e\u6548\u6027\uff0c\u6570\u7ec4f\u5728\u533a\u95f4$[a_i-1,b_i]$\u7684\u6700\u5c0f\u503c\u5c31\u80fd\u7531f[q]\u8f6c\u79fb\u8fc7\u6765\u4e86\uff1b\u5982\u679c\u4e0d\u80fd\u8986\u76d6\uff0c\u8be5\u533a\u95f4\u7684\u6700\u5c0f\u503c\u4f1a\u662f\u4e00\u4e2a\u65e0\u7a77\u5927\u7684\u503c\uff0c\u8f93\u51fa-1\uff0c\u7a0b\u5e8f\u7ed3\u675f\u3002\n\n\n# \u6280\u5de7\n```cpp\n\u5982\u679c\u6211\u4eec\u76f4\u63a5\u6734\u7d20\uff08\u66b4\u529b\uff09\u7684\u6765\u627e\u6570\u7ec4f\u5728\u533a\u95f4a[i]-1\u5230b[i]\u7684\u6700\u5c0f\u503c\u7684\u8bdd\uff0c\u80af\u5b9a\u8d85\u65f6\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6765\u5b9e\u73b0\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u7684\u529f\u80fd~\n```\n\n# \u653e\u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <string>\n#include <cmath>\n#include <cstdlib>\nusing namespace std;\nconst int maxn=251000;\nint n,l,r;\nint f[maxn];\nstruct node{\n    int a,b,c;\n}cow[maxn];\nstruct tree{\n    int l,r,dat;\n}t[maxn*4]; \nbool cmp(node a,node b){\n    return a.b<b.b;\n}//\u6309b\u7684\u503c\u5347\u5e8f\u6392\u5e8f \nvoid build(int p,int l,int r){\n    t[p].l=l,t[p].r=r;\n    if(l==r){\n        t[p].dat=f[l];\n        return;\n    }\n    int mid=(l+r)/2;\n    build(p*2,l,mid);\n    build(p*2+1,mid+1,r);\n    t[p].dat=min(t[p*2].dat,t[p*2+1].dat); \n}//\u5efa\u6811 \n\nvoid change(int p,int x,int v){\n    if(t[p].l==t[p].r){\n        t[p].dat=v;\n        return;\n    }\n    int mid=(t[p].l+t[p].r)/2;\n    if(x<=mid)  change(p*2,x,v);\n    else change(p*2+1,x,v);\n    t[p].dat=min(t[p*2].dat,t[p*2+1].dat);\n}//\u5355\u70b9\u4fee\u6539 \n\nint ask(int p,int l,int r){\n    if(l<=t[p].l&&r>=t[p].r){\n        return t[p].dat; \n    }\n    int mid=(t[p].l+t[p].r)/2;\n    int val=1<<30;\n    if(l<=mid)  val=min(val,ask(p*2,l,r));\n    if(r>mid)   val=min(val,ask(p*2+1,l,r));\n    return val;\n}//\u533a\u95f4\u67e5\u8be2 \n\nint main(){\n    scanf(\"%d %d %d\",&n,&l,&r);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d %d %d\",&cow[i].a,&cow[i].b,&cow[i].c);\n    }\n    sort(cow+1,cow+n+1,cmp);//\u6309b\u7684\u503c\u5347\u5e8f\u6392\u5e8f \n    memset(f,0x3f,sizeof(f));\n    f[l]=0;//\u4ece\u8d77\u70b9\u5230\u8d77\u70b9\uff0c\u82b1\u8d39\u5f53\u7136\u662f0\u4e86 \n    build(1,l,r);\n    for(int i=1;i<=n;i++){\n        f[cow[i].b]=min(f[cow[i].b],ask(1,cow[i].a-1,cow[i].b)+cow[i].c);\n        //\u627e\u533a\u95f4[ a[i]-1,b[i] ] \u7684\u6700\u5c0f\u503c \n        change(1,cow[i].b,f[cow[i].b]);\n        if(cow[i].b>=r){\n            if(f[cow[i].b]==0x3f3f3f3f){\n                printf(\"-1\");  //\u4e0d\u80fd\u5b8c\u5168\u8986\u76d6 \n            }else{\n                printf(\"%d\",f[cow[i].b]);\n            }  //\u8986\u76d6\u5230\u4e86r\u76f4\u63a5\u8f93\u51fa\u6700\u5c0f\u503c\uff0c\u7a0b\u5e8f\u7ed3\u675f \n            return 0;\n        }\n    }\n    return 0;\n}\n\n```",
        "postTime": 1535550901,
        "uid": 91559,
        "name": "\u8ffd\u68a6_Chen",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4644 \u3010[Usaco2005 Dec]Cleaning Shifts \u6e05\u7406\u725b\u68da\u3011"
    },
    {
        "content": "[\u63a8\u8350\u8bbf\u95ee\u535a\u5ba2\u54e6](http://ljf-cnyali.cn/2019/08/15/USACO05DEC-Cleaning-Shifts-DP-%E7%BA%BF%E6%AE%B5%E6%A0%91/)\n\n\u5148\u5c06\u6bcf\u4e2a$T_1,T_2$\u51cf\u53bb$M-1$\uff0c\u8fd9\u6837\u9898\u76ee\u8f6c\u5316\u4e3a\u6700\u5c11\u7684\u70b9\u8986\u76d6$1\\rightarrow E-M+1$\n\n\u4ee4$dp[i]$\u8868\u793a\u8986\u76d6\u4ece$1\\rightarrow i$\u7684\u6700\u5c0f\u4ee3\u4ef7\uff0c\u5219\u53ef\u4ee5\u5f97\u5230:$dp[T_2]=min_{T_1\\leq i\\leq T_2}dp[i-1]+S$\n\n\u9996\u5148\u6309$T_2$\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4f9d\u6b21\u8003\u8651\n\n\u518d\u4ee5\u6bcf\u4e2a$dp$\u503c\u5efa\u4e00\u68f5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6700\u5c0f\u503c\uff0c\u76f4\u63a5\u8f6c\u79fb\u5373\u53ef\n\n```cpp\n/***************************************************************\n\tFile name: P4644.cpp\n\tAuthor: ljfcnyali\n\tCreate time: 2019\u5e7408\u670815\u65e5 \u661f\u671f\u56db 13\u65f603\u520648\u79d2\n***************************************************************/\n#include<bits/stdc++.h>\n\nusing namespace std;\n\n#define REP(i, a, b) for ( int i = (a), _end_ = (b); i <= _end_; ++ i ) \n#define mem(a) memset ( (a), 0, sizeof ( a ) ) \n#define str(a) strlen ( a ) \n#define lson root << 1\n#define rson root << 1 | 1\ntypedef long long LL;\n\nconst int maxn = 1000010;\n\nint n, m, e, Min[maxn], num = 86400;\nstruct node\n{\n    int s, t, w;\n    bool operator < (const node &a) const { return t < a.t; }\n} a[maxn];\n\ninline void PushUp(int root)\n{\n    Min[root] = min(Min[lson], Min[rson]);\n}\n\ninline void Modify(int root, int l, int r, int pos, int val)\n{\n    if ( l == r ) { Min[root] = min(Min[root], val); return ; }\n    int Mid = l + r >> 1;\n    if ( pos <= Mid ) Modify(lson, l, Mid, pos, val);\n    else Modify(rson, Mid + 1, r, pos, val);\n    PushUp(root);\n}\n\ninline int Query(int root, int l, int r, int L, int R)\n{\n    if ( L <= l && r <= R ) return Min[root];\n    int Mid = l + r >> 1, sum = 0x3f3f3f3f;\n    if ( L <= Mid ) sum = min(sum, Query(lson, l, Mid, L, R));\n    if ( Mid < R ) sum = min(sum, Query(rson, Mid + 1, r, L, R));\n    return sum;\n}\n\nint main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n#endif\n    scanf(\"%d%d%d\", &n, &m, &e);\n    e = e - m + 1;\n    REP(i, 1, n) { scanf(\"%d%d%d\", &a[i].s, &a[i].t, &a[i].w); a[i].s -= m - 1; a[i].t -= m - 1; }\n    sort(a + 1, a + n + 1);\n    memset(Min, 0x3f, sizeof(Min));\n    Modify(1, 0, num, 0, 0);\n    REP(i, 1, n)\n    {\n        int x = Query(1, 0, num, a[i].s - 1, a[i].t - 1);\n        if ( x == 0x3f3f3f3f ) continue ;\n        Modify(1, 0, num, a[i].t, x + a[i].w);\n    }\n    int x = Query(1, 0, num, e, e);\n    printf(\"%d\\n\", x == 0x3f3f3f3f ? -1 : x);\n    return 0;\n}\n```\n\n",
        "postTime": 1565846677,
        "uid": 8618,
        "name": "\u6c34\u5e93\u4e2d\u7684\u6c34\u5e93",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4644 \u3010[USACO05DEC]Cleaning Shifts\u3011"
    },
    {
        "content": "\u9898\u89e3\u5168\u662f\u7ebf\u6bb5\u6811\u554a\uff1f\u5176\u5b9e\u7f51\u7edc\u6d41\u4e5f\u80fd\u8fc7\uff01\uff01\uff01\uff01$($\u53ef\u80fd\u6700\u8fd1\u7f51\u7edc\u6d41\u9898\u505a\u592a\u591a\u4e86$)$\n\n\u590d\u6742\u5ea6\u663e\u7136\u662f\u4e0d\u5bf9\u7684(\u9003\n\n\u6211\u4eec\u4ee5\u5929\u6570\u4e3a\u70b9,\u7136\u540e\u7b2c$i$\u5929\u5411\u7b2c$i+1$\u5929\u8fde$INF-1$ $($\u7b2c$i$\u5929\u9700\u8981\u4eba\u6570$)$\u5bb9\u91cf\uff0c$0$\u4ef7\u503c\u7684\u8fb9\n\n\u6e90\u70b9\u5411\u7b2c\u4e00\u5929\uff0c\u6700\u540e\u4e00\u5929$+1$\u5929\u5411\u6c47\u70b9\u8fde$INF$\u5bb9\u91cf\uff0c$0$\u4ef7\u503c\u7684\u8fb9\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u5de5\u4f5c\u5929\u6570\u4ece$s-t$\u7684\u5976\u725b\uff0c\u6211\u4eec\u4ece\u7b2c$s$\u5929\u5411\u7b2c$t+1$\u5929\u8fde$INF$\u5bb9\u91cf\uff0c$c$\u4ef7\u503c\u7684\u8fb9\n\n\u8fd9\u5f20\u56fe\u600e\u4e48\u7406\u89e3\u5462\uff1f\n\n\u9996\u5148\u8fd9\u5f20\u56fe\u7684\u6700\u5927\u6d41\u80af\u5b9a\u662f$INF$\n\n\u4e2d\u95f4\u7b2c$i$\u5929\u5411\u7b2c$i+1$\u5929\u8fde$INF-1$\u5bb9\u91cf\u7684\u8fb9\uff0c\u6d41\u91cf\u5c11\u4e86$1$\uff0c\u5c31\u9700\u8981\u9760\u5976\u725b\u6765\u8865\u9f50\n\n\u4e00\u5934\u5976\u725b\u53ef\u4ee5\u7ed9$s-t$\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8fb9\u8865\u4e0a$1$\u7684\u6d41\u91cf\n\n\u6211\u4eec\u8981\u8ba1\u7b97\u7684\u5c31\u662f\u83b7\u5f97\u6700\u5927\u6d41$INF$\u6240\u9700\u8981\u7684\u6700\u5c0f\u8d39\u7528\n\n\u5373\u8dd1\u4e00\u904d\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\n\n\u4f46\u5199\u5b8c\u53d1\u73b0\u6211\u4eec$T$\u98de\u4e86$($\u53ef\u80fd\u62ff\u5230$40$\u5230$60$\u5206\u4e0d\u7b49$)$\u3002\n\n\u600e\u4e48\u529e\uff1f\u4f17\u6240\u5468\u77e5$USACO$\u5f88\u80fd\u5361$SPFA$\uff0c\u90a3\u6211\u4eec\u8003\u8651\u4f18\u5316$SPFA$\u3002\u5148\u52a0\u4e2a$SLF$\u4f18\u5316\uff0c\u53d1\u73b0$90$\u5206\u4e86\u3002\u518d\u52a0$LLL$\u4f18\u5316\uff0c\u5f00$O2$\uff0c\u5361\u8fc7\uff01\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u548c[[NOI2008]\u5fd7\u613f\u8005\u62db\u52df](https://www.luogu.org/problemnew/show/P3980)\u505a\u6cd5\u662f\u4e00\u6837\u7684\u3002\n\n\u53ea\u4e0d\u8fc7\u8fd9\u9898\u6570\u636e\u5927\u4e00\u70b9\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define ts cout<<\"ok\"<<endl\n#define ll long long\n#define hh puts(\"\")\n#define time TTTT\nusing namespace std;\nint n,m,st,ed,head[500005],vis[500005],time,dis[500005];\nint cnt=1,ans,stt,edt;\nint cost;\nstruct Edge{\n    int v,nx,val,s;\n}e[2000005];\ninline int read(){\n    int ret=0,ff=1;char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-') ff=-ff;ch=getchar();}\n    while(isdigit(ch)){ret=ret*10+(ch^48);ch=getchar();}\n    return ret*ff;\n}\ninline void add(int x,int y,int val,int s){\n    e[++cnt].v=y;\n    e[cnt].val=val;\n    e[cnt].s=s;\n    e[cnt].nx=head[x];\n    head[x]=cnt;\n}\ninline bool spfa(){\n    for(int i=0;i<=ed;i++) vis[i]=0,dis[i]=1e9;\n    dis[st]=0;\n    deque<int> q;\n    int tot=1,sum=0;\n    q.push_back(st);\n    while(!q.empty()){\n        int now=q.front();\n        while(tot*dis[now]>sum){\n            q.pop_front();\n            q.push_back(now);\n            now=q.front();\n        }\n        q.pop_front();\n        tot--;\n        sum-=dis[now];\n        vis[now]=0;\n        for(int i=head[now];i;i=e[i].nx){\n            int v=e[i].v;\n            if(dis[v]>dis[now]+e[i].val&&e[i].s){\n                dis[v]=dis[now]+e[i].val;\n                if(!vis[v]){\n                    vis[v]=1;\n                    if(dis[v]>q.front()) q.push_back(v);\n                    else q.push_front(v);\n                    sum+=dis[v];\n                    tot++;\n                }\n            }\n        }\n    }\n    return dis[ed]!=1e9;\n}\nint dfs(int now,int ma){\n    if(now==ed) return ans+=ma,ma;\n    vis[now]=time;\n    int used=0,t;\n    for(int i=head[now];i;i=e[i].nx){\n        int v=e[i].v;\n        if((v==ed||vis[v]!=time)&&e[i].s&&dis[v]==dis[now]+e[i].val){\n            if(t=dfs(v,min(ma-used,e[i].s))){\n                e[i].s-=t;\n                e[i^1].s+=t;\n                cost+=e[i].val*t;\n                used+=t;\n                if(used==ma) break;\n            }\n        }\n    }\n    return used;\n}\nsigned main(){\n    n=read(),stt=read(),edt=read();\n    st=stt-1,ed=edt+2;\n    for(int i=stt;i<=edt;i++){\n        add(i,i+1,0,1e9-1);\n        add(i+1,i,0,0);\n    }\n    add(st,stt,0,1e9);\n    add(stt,st,0,0);\n    add(edt+1,ed,0,1e9);\n    add(ed,edt+1,0,0);\n    for(int i=1;i<=n;i++){\n        int s=read(),t=read(),c=read();\n        add(s,t+1,c,1e9);\n        add(t+1,s,-c,0);\n    }\n    while(spfa()){\n        do{\n            time++;\n            dfs(st,1e9);\n        }while(vis[ed]==time);\n    }\n    if(ans!=1e9) printf(\"-1\");\n    else printf(\"%d\",cost);\n    return 0;\n}\n```\n",
        "postTime": 1559285963,
        "uid": 27858,
        "name": "ycyaw",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4644 \u3010[Usaco2005 Dec]Cleaning Shifts \u6e05\u7406\u725b\u68da\u3011"
    },
    {
        "content": "#### \u524d\u5907\u77e5\u8bc6\uff1a\u7ebf\u6bb5\u6811\uff08\u5355\u70b9\u4fee\u6539\u533a\u95f4\u67e5\u8be2\uff09\n\u4e0d\u4f1a\u7684\u7ae5\u978b\u53ef\u4ee5\u53bb\u7ec3\u4e60\u4e00\u4e0b:\n\n[P3372 \u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811 1](https://www.luogu.org/problemnew/show/P3372)\n\n\u8bbef[x]\u4e3a\u6e05\u7406[L,x]\u9700\u8981\u82b1\u8d39\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\u628a\u6240\u6709\u7684\u5976\u725b\u7684r\u8fdb\u884c\u4ece\u5c0f\u5230\u5927\u7684\u6392\u5e8f\uff0c\u6309\u987a\u5e8f\u626b\u63cf\u8fd9\u4e9b\u5976\u725b\n\n\u5219f[ri]=min(f[ri],min(f[x])+ci)\u5176\u4e2dai-1<=x<bi\n                                           \n\u521d\u59cb\u503cf[L-1]=0,\u5176\u4f59\u4e3ainf\n                                           \n\u8003\u8651\u4f18\u5316\uff1amin(f[x])\u662f\u4e00\u4e2a\u533a\u95f4\u7684\u6700\u5c0f\u503c\uff0cf\u6570\u7ec4\u8fd8\u9700\u8981\u4fee\u6539\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u7ebf\u6bb5\u6811\uff0c\u7531\u4e8e\u672c\u9898\u7684\u7ebf\u6bb5\u5750\u6807\u6bd4\u8f83\u5c0f\uff0c\u76f4\u63a5\u5728[L-1,R]\u4e0a\u5efa\u6811\u3002\n###### \u5c0f\u63d0\u793a\uff1a\n1. \u5f53\u5de6\u53f3\u7aef\u70b9\u8d85\u51fa[L,R]\u8fb9\u754c\u65f6\u53ef\u4ee5\u653e\u7f29\u5230\u8fb9\u754c\uff0c\n```cpp\na[i].l=max(a[i].l,L);\na[i].r=min(a[i].r,R);\n```\n2. \u5f53L=0\u65f6\uff0c\u4e0a\u8ff0\u8bb2\u7684f[L-1]\u4f1a\u70b8\u6570\u7ec4\u3002\u53ea\u9700\u5728\u8bfb\u5165\u65f6\u5c06l,r\u90fd\u52a0\u4e00\u5373\u53ef\n```cpp\nL++;R++;\na[i].l++;a[i].r++;\n```\n\u5c11\u5e9f\u8bdd,\u76f4\u63a5\u4e0a\u4ee3\u7801\n                                           \n```cpp\n#include<bits/stdc++.h>\n#define INF 0x7fffffff/2\nusing namespace std;\nconst int A=100005;\nstruct note{\n\tint l,r,s;\n}tree[A*4],a[A];//\u4e3a\u4e86\u65b9\u4fbf\uff0c\u4e24\u4e2a\u6570\u7ec4\u4e00\u8d77\u5b9a\u4e49\nint n,L,R,f[A];\nbool cmp(note aa,note bb){//\u6309\u7167\u53f3\u7aef\u70b9\u6392\u5e8f\n\treturn aa.r<bb.r;\n}\nvoid updata(int x){//\u66f4\u65b0\u64cd\u4f5c\n\ttree[x].s=min(tree[2*x].s,tree[2*x+1].s);\n}\nvoid build(int x,int l,int r){//\u5efa\u7acb\u7ebf\u6bb5\u6811\n//\tcout<<x<<\" \"<<l<<\" \"<<r<<\"\\n\";\n\ttree[x].l=l;\n\ttree[x].r=r;\n\ttree[x].s=INF;\n\tif(l==r)return;\n\tint mid=(l+r)/2;\n\tbuild(2*x,l,mid);\n\tbuild(2*x+1,mid+1,r);\n}\nvoid revise(int x,int k,int p){//\u5355\u70b9\u4fee\u6539\n//\tcout<<tree[x].l<<\" \"<<k<<\" \"<<tree[x].r<<\"\\n\";\n\tif(k<tree[x].l||k>tree[x].r)return;\n\tif(tree[x].l==k&&tree[x].r==k){tree[x].s=p;return;}\n\tint mid=(tree[x].l+tree[x].r)/2;\n\tif(k<=mid)revise(2*x,k,p);\n\telse revise(2*x+1,k,p);\n\tupdata(x);\n}\nint ask(int x,int l,int r){//\u533a\u95f4\u67e5\u8be2\n\tif(r<tree[x].l||tree[x].r<l)return INF;\n\tif(l<=tree[x].l&&tree[x].r<=r)return tree[x].s;\n\treturn min(ask(2*x,l,r),ask(2*x+1,l,r));\n}\nint main(){\n\tscanf(\"%d%d%d\",&n,&L,&R);L++;R++;\n\tfor(int i=L;i<=R;i++)f[i]=INF;//\u521d\u59cb\u5316\u4e3a\u6781\u503c\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d%d%d\",&a[i].l,&a[i].r,&a[i].s);\n\t\ta[i].l++;a[i].r++;\n\t\ta[i].l=max(a[i].l,L);\n\t\ta[i].r=min(a[i].r,R);\n\t}\n\tbuild(1,L-1,R);\n\trevise(1,L-1,0);\n\tsort(a+1,a+n+1,cmp);\n\tfor(int i=1;i<=n;i++){\n//\t\tcout<<a[i].l<<\" \"<<a[i].r<<\" \"<<(1,a[i].l-1,a[i].r)<<\" \";\n\t\tf[a[i].r]=min(f[a[i].r],ask(1,a[i].l-1,a[i].r)+a[i].s);\n//\t\tcout<<f[a[i].r]<<\"\\n\";\n\t\trevise(1,a[i].r,f[a[i].r]);\n\t}\n\tif(f[R]==INF)puts(\"-1\");\n\telse printf(\"%d\",f[R]);\n\treturn 0;\n}\n```\n\n\n\u7ed3\u675f\u8bed\uff08\u4e0e\u672c\u9898\u65e0\u5173\uff09\uff1a\u5982\u679c\u5750\u6807\u5f88\u5927\u65f6\u53ef\u4ee5\u8003\u8651\u79bb\u6563\u5316\u54e6\uff01",
        "postTime": 1560152125,
        "uid": 88137,
        "name": "greenheadstrange",
        "ccfLevel": 7,
        "title": "DP+\u7ebf\u6bb5\u6811P4644\u3010\u6e05\u7406\u725b\u68da\u3011"
    },
    {
        "content": "# \u6570\u636e\u7ed3\u6784DP\u505a\u6cd5\n> ##### P.S: \u4e0b\u9762\u6709\u4e00\u7bc7\u9898\u89e3\u4e5f\u662f\u6570\u636e\u7ed3\u6784DP\uff0c\u4f46\u662f\u4ee3\u7801\u6709\u4e00\u5b9a\u9519\u8bef\n> - ### \u9898\u76ee\u8f6c\u6362\uff1a\u9700\u8981\u4ee4\u4e00\u4e2a\u533a\u95f4\u88ab\u5b8c\u5168\u8986\u76d6\uff0c\u5e76\u4e14\u4ee4\u6240\u9700\u4ee3\u4ef7\u6700\u5c0f\uff0c\u5176\u4e2d\u53ef\u82b1\u8d39\u4e00\u5b9a\u4ee3\u4ef7\u8ba9\u4e00\u5934\u725b\u8986\u76d6\u4e00\u4e2a\u533a\u95f4\u3002\n> - f[i] \u8868\u793a\u8986\u76d6\u4ece0 ~ i\u6240\u9700\u8981\u7684\u6700\u5c0f\u4ee3\u4ef7\n> - c[i].l\u3001c[i].r \u8868\u793a\u5f53\u524d\u725b\u53ef\u8986\u76d6\u7684\u533a\u95f4\n> - c[i].salary \u8868\u793a\u5f53\u524d\u725b\u6240\u9700\u4ee3\u4ef7\n> - L, R \u8868\u793a\u6240\u9700\u8981\u8986\u76d6\u7684\u533a\u95f4\n\n## \u8f6c\u79fb\u65b9\u7a0b\n$$f[min(c[i].r, r)] = \\min_{\\max(L - 1, c[i].l - 1)<= j <= \\min(R, c[i].r - 1)}{f[j]} + c[i].salary$$\n\n\u521d\u503cf[L - 1] = 0, \u5176\u4f59\u4e3a\u6700\u5927\u503c\u3002\n\n## \u610f\u4e49\n\u8868\u793a\u4ece\u5f53\u524d\u725b\u7684**\u5de6\u7aef\u70b9\u5f80\u524d\u4e00\u4e2a\u70b9**\u548c**\u53f3\u7aef\u70b9\u5f80\u524d\u4e00\u4e2a\u70b9**\u4e2d\u627e\u4e00\u4e2a\u6700\u5c0f\u4ee3\u4ef7\u70b9\uff0c\u8f6c\u79fb\u5230\u5f53\u524d\u70b9\u3002\n\n\u4f46\u6211\u4eec\u53d1\u73b0\uff0c\u5728\u5bfb\u627e\u7684\u8fc7\u7a0b\u4e2d\u660e\u663e\u4f1a\u8d85\u65f6\uff0c\u6240\u4ee5\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\u3002\n\n\n## \u4ee3\u7801\n```c\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define max(a, b) (a) > (b) ? (a) : (b)\n#define min(a, b) (a) < (b) ? (a) : (b)\nusing namespace std;\n\nstruct TreeNode {\n\tint l;\n\tint r;\n\tint m;\n} t[2100000];\n\nstruct Cow {\n\tint l;\n\tint r;\n\tint salary;\n\tbool operator <(const Cow &c) const {\n\t\treturn (this -> r) < c.r;\n\t}\n} c[500010];\n\nint n, l, r;\nint f[1000010];\n\nvoid build(int current, int l, int r) {\n\tt[current].l = l, t[current].r = r;\n\tif (l == r) {\n\t\tt[current].m = f[l];\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(current * 2, l, mid);\n\tbuild(current * 2 + 1, mid + 1, r);\n\tt[current].m = min(t[current * 2].m, t[current * 2 + 1].m);\n}\n\nint ask(int current, int l, int r) {\n\tif (t[current].l == l && t[current].r == r) return t[current].m;\n\tint mid = (t[current].l + t[current].r) >> 1;\n\tif (l > mid) return ask(current * 2 + 1, l, r);\n\tif (r <= mid) return ask(current * 2, l, r);\n\treturn min(ask(current * 2, l, mid), ask(current * 2 + 1, mid + 1, r));\n}\n\nvoid change(int current, int p, const int &value) {\n\tif (t[current].l == t[current].r) {\n\t\tt[current].m = value;\n\t\treturn;\n\t}\n\tint mid = (t[current].l + t[current].r) >> 1;\n\tif (p > mid) change(current * 2 + 1, p, value);\n\t  else if (p <= mid) change(current * 2, p, value);\n\tt[current].m = min(t[current * 2 + 1].m, t[current * 2].m);\n}\n\nint main() {\n\tn = read(); l = read(), r = read();\n\t++l, ++r;\n\tfor (int i = 0; i < n; ++i) {\n\t\tc[i].l = read(), c[i].r = read(), c[i].salary = read();\n\t\t++c[i].l, ++c[i].r;\n\t}\n\tmemset(f, 0x7f7f7f7f, sizeof(f));\n\tsort(c, c + n);\n\tf[l - 1] = 0;\n\tbuild(1, l - 1, r);\n\tint temp, rawR;\n\tfor (int i = 0; i < n; ++i) {\n\t\trawR = min(r, c[i].r);\n\t\ttemp = f[rawR];\n\t\tf[rawR] = min(f[rawR], ask(1, max(c[i].l - 1, l - 1), min(r, c[i].r - 1)) + c[i].salary);\n\t\tif (f[rawR] != temp) change(1, rawR, f[rawR]);\n\t}\n\tif (f[r] == f[r + 1]) puts(\"-1\");\n\t  else printf(\"%d\\n\", f[r]);\n\treturn 0;\n}\n```\nP.S: \u5220\u53bb\u4e86\u5feb\u8bfb, \u6570\u7ec4\u8bbe\u5927\u4e86\u3002",
        "postTime": 1556106834,
        "uid": 111391,
        "name": "\u5c0f\u4e50",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4644 \u3010[Usaco2005 Dec]Cleaning Shifts \u6e05\u7406\u725b\u68da\u3011"
    },
    {
        "content": "# \u8fd9\u9053\u9898\u672c\u8eab\u53ea\u662f\u4e00\u9053\u6bd4\u8f83\u6c34\u7684dp\uff0c\u4f46\u662f\u2026\u2026\u5b83\u4f1a\u5361O(n^2)\u7684\u7b97\u6cd5!!!  \n## \u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u6570\u636e\u7ed3\u6784\u4f18\u5316\uff01\u6211\u7528\u7684\u7ebf\u6bb5\u6811\uff08\u5355\u4fee\u533a\u67e5\u591a\u597d\u5199\u5440\uff09  \n\u8981\u6ce8\u610f\u51e0\u70b9\uff1a  \n1.dp\u6570\u7ec4\u5728\u8d77\u70b9\u8981\u6e05\u96f6  \n2.\u5faa\u73af\u53d6\u6700\u5c0f\u503c\u65f6\u662f\u4ece**t[i].l-1**\u5230t[i].r  \n3.\u7ebf\u6bb5\u6811minn\u8981\u53d6\u6700\u5927  \n4.\u533a\u95f4\u6392\u5e8f\u6309\u53f3\u7aef\u70b9\u6392  \n\n------------\n\n\u5148\u4e0a70\u5206\u4ee3\u7801\uff08\u6211\u5148\u5f97\u4e86100\u5206\u4e3a\u4e86\u9898\u89e3\u518d\u4eb2\u6d4b\u4e86\u4e00\u904d70\u2026\u2026\uff09\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<iomanip>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<queue>\n#define ll long long\nusing namespace std;\nconst int INF=0x3f3f3f3f,MAXX=100000;\nint n,l,r;\nint cnt;\nint dp[MAXX+5];\nstruct node{int l,r,v;}t[MAXX+5];\nbool cmp(node x,node y){return x.r<y.r;}//\u6309\u53f3\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f \nint main()\n{\n\tscanf(\"%d %d %d\",&n,&l,&r);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x,y,z;\n\t\tscanf(\"%d %d %d\",&x,&y,&z);\n\t\tif(x<l)x=l;if(y>r)y=r;//\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\uff0c\u4f46\u662f\u4e3a\u4e86\u4ee5\u9632\u4e07\u4e00\u8fd8\u662f\u5199\u4e0a\u4e86 \n\t\tif(x>y)continue;//\u540c\u4e0a \n\t\tt[++cnt].l=x;t[cnt].r=y;t[cnt].v=z;\n\t}\n\tsort(t+1,t+cnt+1,cmp);\n\tmemset(dp,0x3f,sizeof(dp));//dp\u6570\u7ec4\u6e05\u6700\u5927\u503c \n\tdp[l]=0;//\u5de6\u7aef\u70b9\u521d\u503c \n\tfor(int i=1;i<=cnt;i++)\n\t{\n\t\tint k=INF;\n\t\tfor(int j=t[i].l-1;j<=t[i].r;j++)k=min(k,dp[j]);//\u4ecet[i].l-1\u2014\u2014t[i].r \n\t\tdp[t[i].r]=min(dp[t[i].r],k+t[i].v);//\u66f4\u65b0 \n\t}\n\tif(dp[r]==INF)printf(\"-1\");//\u5982\u679c\u6700\u540e\u503c\u4e3aINF\u8bf4\u660e\u4e2d\u95f4\u5fc5\u5b9a\u6709\u65f6\u95f4\u6253\u626b\u4e0d\u5230\uff0c\u8f93\u51fa-1 \n\telse printf(\"%d\",dp[r]);\n\treturn 0;\n}\n\n```\n\n------------\n\n\u6ee1\u5206\u4ee3\u7801\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<iomanip>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<queue>\n#define ll long long\nusing namespace std;\nconst int INF=0x3f3f3f3f,MAXX=100000;\nint delta=10;\nint n,l,r;\nint cnt;\nint dp[MAXX+5];\nstruct tree{int l,r,minn;}tree[MAXX*8+5];\nstruct node{int l,r,v;}t[MAXX+5];\nbool cmp(node x,node y){return x.r<y.r;}//\u6309\u53f3\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f \nvoid Build(int k,int l,int r)\n{\n\ttree[k].l=l;tree[k].r=r;tree[k].minn=INF;//\u7ebf\u6bb5\u6811\u6700\u5c0f\u503c\u6e05\u6700\u5927 \n\tif(l==r){return;}\n\tint mid=(l+r)>>1;\n\tBuild(k<<1,l,mid);\n\tBuild(k<<1|1,mid+1,r);\n}\nvoid add(int k,int x,int v)\n{\n\tif(x<tree[k].l||x>tree[k].r)return;\n    tree[k].minn=min(tree[k].minn,v);\n    int mid=(tree[k].l+tree[k].r)>>1;\n    add(k<<1,x,v);add(k<<1|1,x,v);\n}\nint ask(int k,int l,int r)\n{\n    int ans=INF;\n    if(l<=tree[k].l&&r>=tree[k].r)return tree[k].minn;\n    int mid=(tree[k].l+tree[k].r)>>1;\n    if(l<=mid)ans=min(ans,ask(k<<1,l,r));\n    if(r>mid)ans=min(ans,ask(k<<1|1,l,r));\n    return ans;\n}//\u6a21\u7248\u7ebf\u6bb5\u6811\u5355\u4fee\u533a\u67e5 \nint main()\n{\n\tBuild(1,1,100000);//\u6309\u6570\u636e\u8303\u56f4\u5efa\u6811 \n\tscanf(\"%d %d %d\",&n,&l,&r);\n\tl+=10;r+=10;//\u5168\u90e8\u52a0\u4e00\u4e2a\u5c0f\u6570\uff0c\u4e0d\u7136\u4f1a\u7384\u5b66RE\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x,y,z;\n\t\tscanf(\"%d %d %d\",&x,&y,&z);\n\t\tx+=10;y+=10;\n\t\tif(x<l)x=l;if(y>r)y=r;//\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\uff0c\u4f46\u662f\u4e3a\u4e86\u4ee5\u9632\u4e07\u4e00\u8fd8\u662f\u5199\u4e0a\u4e86 \n\t\tif(x>y)continue;//\u540c\u4e0a \n\t\tt[++cnt].l=x;t[cnt].r=y;t[cnt].v=z;\n\t}\n\tsort(t+1,t+cnt+1,cmp);\n\tmemset(dp,0x3f,sizeof(dp));//dp\u6570\u7ec4\u6e05\u6700\u5927\u503c \n\tdp[l]=0;//\u5de6\u7aef\u70b9\u521d\u503c \n\tadd(1,l,0);//\u66f4\u65b0\u5230\u7ebf\u6bb5\u6811\u91cc \n\tfor(int i=1;i<=cnt;i++)\n\t{\n\t\tint k=INF;\n\t\tk=min(k,ask(1,t[i].l-1,t[i].r));//\u4ecet[i].l-1\u2014\u2014t[i].r \n//\t\tcout<<1;\n\t\tdp[t[i].r]=min(dp[t[i].r],k+t[i].v);//\u66f4\u65b0\u7684\u540c\u65f6\u66f4\u65b0\u5230\u7ebf\u6bb5\u6811\u91cc \n\t\tadd(1,t[i].r,dp[t[i].r]);\n//\t\tcout<<2;\n\t}\n\tif(dp[r]==INF)printf(\"-1\");//\u5982\u679c\u6700\u540e\u503c\u4e3aINF\u8bf4\u660e\u4e2d\u95f4\u5fc5\u5b9a\u6709\u65f6\u95f4\u6253\u626b\u4e0d\u5230\uff0c\u8f93\u51fa-1 \n\telse printf(\"%d\",dp[r]);\n\treturn 0;\n}\n\n\n\n```\n\n",
        "postTime": 1560153183,
        "uid": 42019,
        "name": "wubaiting2020",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4644 \u3010[Usaco2005 Dec]Cleaning Shifts \u6e05\u7406\u725b\u68da\u3011"
    },
    {
        "content": "## \u7ebf\u6bb5\u6811\u7ef4\u62a4\u4f18\u5316$DP$\u88f8\u9898\u3002\n\n#### \u9996\u5148\uff0c\u9898\u76ee\u53d8\u91cf\u540d\u53d6\u5f97\u5341\u5206\u5947\u7279\uff0c\u6240\u4ee5\u6211\u4eec\u7ea6\u5b9a\uff1a\u5f00\u59cb\u65f6\u95f4\u7531M\u53d8\u4e3aB\uff0c\u6bcf\u4e2a\u5976\u725b\u7684\u82b1\u8d39\u7531S\u53d8\u4e3acost\uff0c\u65f6\u95f4\u6bb5\u603b\u957f\u4e3aL\n\n#### \u53e6\u5916,\u6587\u4e2d\u7684|\u662f\u96c6\u5408\u7684\u7b26\u53f7\u4e0d\u662f $or$ \u8fd0\u7b97\u54c8\n\n\u6309\u7167\u666e\u901a\u7684$DP$\u601d\u8def\uff0c\u8bbe$f[i]$\u4e3a\u4eceM\u5230$i$\u7684\u6700\u5c0f\u82b1\u8d39\uff0c\u6bcf\u4e2a\u65f6\u95f4\u6bb5\u66f4\u65b0\u90fd\u626b\u4e00\u6b21\uff0c\u590d\u6742\u5ea6$O(N*L)$\uff0c\u80af\u5b9a\u662f\u8fc7\u4e0d\u4e86\u7684\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\uff0c\u6bcf\u4e2a\u65f6\u95f4\u6bb5\u90fd\u626b\u4e00\u904d\u6027\u4ef7\u6bd4\u662f\u5f88\u4f4e\u7684\uff0c\u56e0\u4e3a\u5982\u679c\u6211\u4eec\u4e0d\u66f4\u65b0$(f[j]>f[i]|j<i)$\uff0c\u90a3\u4e48\u6bcf\u4e2a\u5976\u725b\u53ea\u4f1a\u505a\u4e00\u6b21\u8d21\u732e\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u6309$t2$\u6392\u5e8f\uff0c\u5219$DP$\u65f6\uff0c$f[t2[i]]=min(f[t2[i]],min(f[x]|t1[i]-1<x<t2[i])+cost[i])$\n\n\u663e\u7136\uff0c\u8fd9\u4e2a$min$\u91cc\u9762\u7684\u4e1c\u897f\u662f\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u3002\n\n\u7136\u540e\u5c31$O(n{log_2}n)$\u4e86\uff0c\u5e38\u6570\u633a\u5c0f\uff0c\u601d\u8def\u7b80\u5355\uff0c\u611f\u89c9\u4e0d\u7528\u8fc7\u591a\u89e3\u91ca\u4e86\n\n#### \u4ee3\u7801\u7ec6\u8282&\u89e3\u91ca\n\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\nusing namespace std;\n#define LL long long\n#define MN 25005\n#define INF 2147483647777\n#define Ls (nod<<1)\n#define Rs (nod<<1|1)\n#define mid ((l+r)>>1)\nstruct data{\n    int t1,t2,cost;\n}w[MN];\nint n,b,e;\nLL f[MN<<4],ans[MN<<2];\n//f\uff1a\u7ebf\u6bb5\u6811\u4e2d\u7684\u7b54\u6848 ans:\u4eceL\u5230i\u7684\u7b54\u6848\ninline LL min(int a,int b){\n    return a<b?a:b;\n}\ninline bool cmp(data a,data b){\n    return a.t2<b.t2;\n}\ninline int read(){\n    int a=0;\n    char c=getchar();\n    while(c>57||c<48) c=getchar();\n    while(47<c&&c<58){\n        a=a*10+c-48;\n        c=getchar();\n    }\n    return a;\n}//\u5feb\u8bfb\nvoid build(int nod,int l,int r){\n    f[nod]=INF;\n    if(l==r)return;\n    build(Ls,l,mid);\n    build(Rs,mid+1,r);\n}//\u5efa\u6811\nLL ask(int nod,int l,int r,int b,int e){\n    if(l>e||r<b)return INF;\n    if((b<=l&&r<=e)||l==r) return f[nod];\n    return min(ask(Ls,l,mid,b,e),ask(Rs,mid+1,r,b,e));\n}//\u6700\u5c0f\u503c\nvoid pushup(int nod,int l,int r,int loc){\n    if(l>loc||r<loc) return;\n    if(l==r) {f[nod]=ans[loc];return;}\n    pushup(Ls,l,mid,loc);\n    pushup(Rs,mid+1,r,loc);\n    f[nod]=min(f[Ls],f[Rs]);\n}//\u4fee\u6539\nint main(){\n    n=read();b=read();e=read();\n    for(int i=1;i<=n;++i){\n        w[i].t1=read();\n        w[i].t2=read();\n        w[i].cost=read();\n    }\n    build(1,b,e);\n    sort(w+1,w+1+n,cmp);//\u6309t2\u6392\u5e8f\uff0c\u66f4\u65b0\u5b8c\u524d\u9762\u518d\u66f4\u65b0\u540e\u9762\n    for(int i=b;i<=e;++i)ans[i]=INF;\n    for(int i=1;i<=n;++i){\n        int temp=ans[w[i].t2];\n        ans[w[i].t2]=min(ans[w[i].t2],((w[i].t1>b)?ask(1,b,e,w[i].t1-1,w[i].t2):0)+(LL)w[i].cost);//\u8fd9\u91cc\u8981\u6ce8\u610f\uff0c\u5f53t1\u4e3ab\u65f6\u8981\u7279\u5224\n        if(temp!=ans[w[i].t2])pushup(1,b,e,w[i].t2);\n    }\n    ans[e]!=INF?printf(\"%lld\",ans[e]):puts(\"-1\");\n    return 0;\n}\n\n\n```",
        "postTime": 1556352683,
        "uid": 7480,
        "name": "skydogli",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4644 \u3010[Usaco2005 Dec]Cleaning Shifts \u6e05\u7406\u725b\u68da\u3011"
    },
    {
        "content": "\u5982\u679c\u6ca1\u6709\u6743\u503c \u6b64\u9898\u4e3a\u4e00\u4e2a\u7b80\u5355\u7684\u7ebf\u6bb5\u8986\u76d6\u95ee\u9898 \n\u4f46\u662f\u73b0\u5728\u6211\u4eec\u6709\u4e86\u6743\u503c \u95ee\u9898\u5c31\u53d8\u4e86 \u63a5\u4e0b\u6765\u662f\u6211\u7684\u601d\u8def\n\n------------\n\u90a3\u4e48\u6211\u4eec\u4e00\u5b9a\u662f\u901a\u8fc7\u7ebf\u6bb5\u8fdb\u884c\u8df3\u8dc3 \u4e5f\u5c31\u662f\u6211\u4eec\u5229\u7528\u4e86\u7ebf\u6bb5\u79bb\u6211\u4eec\u7684\u76ee\u6807\u66f4\u8fd1\u4e86\u4e00\u6b65 \u6bd4\u5982__\u2014\u2014\uff08\u4e0d\u6b62\u8fd9\u4e24\u6761\u7ebf\u6bb5\uff09\u5bf9\u4e8e\u8fd9\u79cd\u7ebf\u6bb5\u65e0\u91cd\u53e0\u60c5\u51b5 \u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u89e3\u6cd5 \u4e5f\u5c31\u662f\u5bf9\u7ebf\u6bb5\u4e4b\u95f4\u8fde\u8fb9 \u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u8d77\u70b9\u5230\u7ec8\u70b9\u6700\u5927\u503c \n```\nfor(int i=1;i<=n;i++){\nscanf(\"%d%d%d\",&node[i].a,&node[i].b,&node[i].c);add(node[i].a,node[i].b+1,node[i].c);}```\n\u8fd9\u6837\u5efa\u8fb9 \u5bf9\u6bcf\u4e00\u4e2a\u7ebf\u6bb5\u70b9\u4f5c\u4e3a\u56fe\u4e2d\u70b9 \u5c31\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\n\n\n------------\n\u5bf9\u4e8e\u91cd\u53e0\u60c5\u51b5 \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u9700\u8981\u5f80\u540e\u8d70\u51e0\u6b65\u624d\u4f1a\u5230\u8fbe\u4e0b\u4e00\u4e2a\u7ebf\u6bb5\u9996\u7aef\u800c\u4e14\u8fd9\u6837\u662f\u6ca1\u6709\u4ee3\u4ef7\u7684 \u6240\u4ee5\u53ef\u4ee5\u6709\n```\nfor(int i=m;i<=s;i++)\n{\nadd(i,i-1,0);\t\n\t}```\n    \u5230\u6b64 \u95ee\u9898\u5b8c\u7f8e\u89e3\u51b3 \u4e0b\u9762\u662f\u4ee3\u7801(spfa)\n```\n#include <bits/stdc++.h>\nusing namespace std;\nstruct p{\n\tint a,b,c;\n}node[20010];\nint cmp(p a,p b){\nreturn a.a<b.a;\t\n}\nint n,m,s,k;\nstruct z{\nint v,next,w;\t\n}st[200010];\nint head[200010],dis[200010],vis[200010];\nint add(int a,int b,int c){\nst[++k].v=b\t;\nst[k].w=c;\nst[k].next=head[a];\nhead[a]=k;\n}\nint spfa()\n{\n\tfor(int i=m;i<=s+1;i++)\n\tdis[i]=1000000000;\nqueue<int> q;\nq.push(m);\nvis[m]=1;\ndis[m]=0;\nwhile(!q.empty()){\nint v=q.front();\nq.pop();\nvis[v]=0;\nfor(int i=head[v];i;i=st[i].next){\nint w=st[i].w,u=st[i].v;\nif(dis[u]>dis[v]+w){\ndis[u]=dis[v]+w;\nif(!vis[u]){\nvis[u]=1;\nq.push(u);\t\n}\t\n}\t\n}\t\n}\n\t\n}\nint main()\n{\nscanf(\"%d%d%d\",&n,&m,&s);\nfor(int i=1;i<=n;i++){\nscanf(\"%d%d%d\",&node[i].a,&node[i].b,&node[i].c);add(node[i].a,node[i].b+1,node[i].c);}\nfor(int i=m;i<=s;i++)\n{\nadd(i,i-1,0);\t\n\t}\t\n\tspfa();\n\tprintf(\"%d\",dis[s+1]);\n} ```",
        "postTime": 1531971433,
        "uid": 56803,
        "name": "VPYEKINDAR",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4644 \u3010[Usaco2005 Dec]Cleaning Shifts \u6e05\u7406\u725b\u68da\u3011"
    }
]