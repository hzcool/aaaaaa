[
    {
        "content": "### \u5206\u6790\uff1a\n\n\u524d\u6392\u5148 **stO** \u4e00\u4e0b\u9898\u9762\u91cc\u7684 $\\color{black}{K}\\color{red}{arry5307}$\n\n\u5bf9\u4e8e\u8fd9\u4e2a\u9898\u6765\u8bf4\uff0c\u6211\u4eec\u53d1\u73b0\u6ca1\u6709\u529e\u6cd5\u76f4\u63a5\u627e\u5230\u6bcf\u6761\u8def\u5f84\u7b2c $k$ \u5927\u7684\u8fb9\u662f\u8c01\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u76f4\u63a5\u94a6\u5b9a\u6bcf\u4e00\u6761\u8fb9\u662f\u7b2c $k$ \u5927\u7684\u60c5\u51b5\n\n\u5047\u8bbe\u6211\u4eec\u94a6\u5b9a\u4e00\u6761\u8fb9\u6743\u4e3a $w$ \u7684\u8fb9\u4e3a\u7b2c $k$ \u5927\u7684\u8fb9\uff0c\u90a3\u4e48\u6240\u6709\u5c0f\u4e8e $w$ \u7684\u8fb9\u8fb9\u6743\u53d8\u4e3a $0$ ,\u5927\u4e8e\u7b49\u4e8e $w$ \u7684\u8fb9\u6743\u53d8\u4e3a $x-w$ \uff0c\u8fd9\u6837\u8dd1\u5b8c\u6700\u77ed\u8def\u540e\u7684\u4ee3\u4ef7\u5c31\u662f $ans=dis_n+k*w$ \n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u6837\u505a\u7684\u8bdd\u53ef\u80fd\u5b58\u5728\u4e09\u79cd\u60c5\u51b5\n\n1. $w$ \u6070\u597d\u4e3a\u6b64\u65f6\u6700\u77ed\u8def\u4e0a\u7b2c $k$ \u5927\u7684\u8fb9\uff0c\u4e0d\u5f71\u54cd\n\n2. $w$ \u4e3a\u6b64\u65f6\u6700\u77ed\u8def\u4e0a\u5c0f\u4e8e\u7b2c $k'\\ (k'<k)$ \u5927\u7684\u8fb9\uff0c\u90a3\u4e48\u6211\u4eec\u6c42\u5f97\u7684\u7b54\u6848\u4e00\u5b9a\u5927\u4e8e\u5b9e\u9645\u60c5\u51b5\n\n    \u8bc1\u660e\uff1a\u56e0\u4e3a\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5f97\u5230\u7684\u7b54\u6848\u7b49\u4ef7\u4e8e\u5c06\u7b2c $1$ \u5927\u5230\u7b2c $k'$ \u5927\u8fb9\u7684\u8fb9\u6743\u4e0d\u53d8\uff0c\u4f46\u7b2c $k'+1$ \u5230\u7b2c $k$ \u5927\u7684\u8fb9\u7684\u8fb9\u6743\u53d8\u5927\u4e3a $w$ ,\u6240\u4ee5\u7b54\u6848\u504f\u5927\n\n3. $w$ \u4e3a\u6b64\u65f6\u6700\u77ed\u8def\u4e0a\u5927\u4e8e\u7b2c $k'\\ (k'>k)$ \u5927\u7684\u8fb9\uff0c\u90a3\u4e48\u6211\u4eec\u6c42\u5f97\u7684\u7b54\u6848\u8fd8\u662f\u5927\u4e8e\u5b9e\u9645\u60c5\u51b5\u7684\uff0c\u56e0\u4e3a\u6709\u4e00\u4e9b\u539f\u672c\u8be5\u53d8\u6210 $0$ \u7684\u8fb9\u6ca1\u6709\u53d8\u6210 $0$ \n\n\u7531\u6b64\u770b\u6765\u6211\u4eec\u679a\u4e3e\u8fb9\u5f97\u5230\u7684\u7b54\u6848\u662f**\u4e0d\u5c0f\u4e8e\u5b9e\u9645\u7b54\u6848**\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u94a6\u5b9a\u6bcf\u4e00\u6761\u8fb9\uff0c\u7136\u540e\u5bf9\u6240\u6709\u7684\u7b54\u6848\u53d6\u6700\u5c0f\u503c\u90a3\u4e48\u4e00\u5b9a\u4f1a\u5f97\u5230\u6070\u597d\u7b2c $k$ \u5927\u7684\u60c5\u51b5\uff0c\u590d\u6742\u5ea6 $O(m^2\\log )$\n\n**tip\uff1a** \n\n\u53ef\u80fd\u5b58\u5728\u4e00\u79cd\u60c5\u51b5\u5c31\u662f\u4e0d\u94a6\u5b9a\u4efb\u4f55\u8fb9\u7684\u60c5\u51b5\u4e0b\uff0c\u539f\u56fe\u7684\u6700\u77ed\u8def\u5c0f\u4e8e $k$ \u6761\u8fb9\uff0c\u90a3\u4e48\u8fd9\u79cd\u60c5\u51b5\u76f4\u63a5\u662f\u6700\u4f18\u89e3\uff0c\u56e0\u4e3a\u81f3\u5c11\u9700\u8981\u4ed8\u524d $k$ \u6761\u8fb9\u7684\u8d39\u7528\uff0c\u6240\u4ee5\u6700\u540e\u7684\u7b54\u6848\u8fd8\u8981\u548c\u8fd9\u79cd\u60c5\u51b5\u4e5f\u53d6\u4e00\u4e0b $\\min$\n\n### \u4ee3\u7801\uff1a\n\n~~~cpp\n#include<bits/stdc++.h>\n#define inl inline\n#define reg register\n#define pll pair<long long,long long>\n#define mk(x,y) make_pair(x,y)\n#define fir first\n#define sec second\n\nusing namespace std;\n\nnamespace zzc\n{\n    typedef long long ll;\n    inl ll read()\n    {\n        ll x=0,f=1;char ch=getchar();\n        while(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n        while(isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n        return x*f;\n    }\n\n    const ll maxn = 3005;\n    const ll inf = 0x3f3f3f3f3f3f3f3f;\n    ll n,m,k,cnt,ans;\n    ll head[maxn],dis[maxn];\n    bool vis[maxn];\n    priority_queue<pll> q;\n\n    struct edge\n    {\n        ll to,nxt,w;\n    }e[maxn<<1];\n\n    inl void add(ll u,ll v,ll w)\n    {\n        e[++cnt].to=v;\n        e[cnt].w=w;\n        e[cnt].nxt=head[u];\n        head[u]=cnt;\n    }\n    \n    inl void dijkstra(ll x)//x \u8868\u793a\u6211\u4eec\u94a6\u5b9a\u7684\u7b2c k \u5927\u7684\u8fb9\u7684\u8fb9\u6743\n    {\n        memset(dis,0x3f,sizeof(dis));\n        memset(vis,false,sizeof(vis));\n        dis[1]=0;q.push(mk(0,1));\n        while(!q.empty())\n        {\n            ll u=q.top().sec;q.pop();\n            if(vis[u]) continue;\n            vis[u]=true;\n            for(reg ll i=head[u];i;i=e[i].nxt)\n            {\n                ll v=e[i].to;\n                ll w=max(0ll,e[i].w-x);//\u8bb0\u5f97\u8981\u548c 0 \u53d6 max\n                if(dis[v]>dis[u]+w)\n                {\n                    dis[v]=dis[u]+w;\n                    q.push(mk(-dis[v],v));\n                }\n            }\n        }\n         \n    }\n\n    void work()\n    {\n        ll a,b,c;\n        n=read();m=read();k=read();\n        for(reg ll i=1;i<=m;i++)\n        {\n            a=read();b=read();c=read();\n            add(a,b,c);add(b,a,c);\n        }\n        dijkstra(0);ans=dis[n];//tip \u91cc\u63d0\u5230\u7684\u60c5\u51b5\n        for(ll i=1;i<=(m<<1);i+=2)\n        {\n            dijkstra(e[i].w);\n            ans=min(ans,dis[n]+k*e[i].w);\n        }\n        printf(\"%lld\\n\",ans);\n    }\n\n\n}\n\nint main()\n{\n    zzc::work();\n    return 0;\n}\n~~~\n\n",
        "postTime": 1612365269,
        "uid": 201158,
        "name": "Youth518",
        "ccfLevel": 7,
        "title": "P6961 [NEERC2017]Journey from Petersburg to Moscow"
    },
    {
        "content": "### Preface  \n\u6700\u77ed\u8def\u601d\u7ef4\u9898\u3002  \n### Problem  \n\u7ed9\u4f60\u4e00\u5f20\u5e26\u6743\u65e0\u5411\u56fe\uff0c\u5b9a\u4e49\u4e00\u6761\u8def\u5f84\u7684\u82b1\u8d39\u4e3a\u8fd9\u6761\u8def\u5f84\u4e0a\u524d $k$ \u5927\u7684\u8fb9\u6743\u7684\u548c\uff0c\u95ee\u4f60\u5728\u8fd9\u4e2a\u5b9a\u4e49\u4e0b\u8fd9\u5f20\u56fe\u7684\u6700\u77ed\u8def\u3002  \n### Solution  \n\u53d1\u73b0\u9898\u76ee\u7684\u6570\u636e\u8303\u56f4\u5e76\u4e0d\u5927\uff0c\u6240\u4ee5\u8003\u8651\u94a6\u5b9a\u8def\u5f84\u524d $k$ \u5927\u4e2d\u6700\u5c0f\u7684\u90a3\u4e2a\u8fb9\u6743\uff0c\u8bbe\u4e3a $x$\u3002  \n\u663e\u7136\uff0c\u94a6\u5b9a\u4e4b\u540e\u6743\u503c\u5c0f\u4e8e $x$ \u7684\u8fb9\u6ca1\u6709\u610f\u4e49\uff0c\u5373\u8fb9\u6743\u4e3a 0\uff0c\u7136\u540e\u4f60\u8003\u8651\u8dd1\u6700\u77ed\u8def\u3002  \n\u4f60\u53d1\u73b0\u8fd9\u6837\u505a\u53ef\u80fd\u4e0d\u662f\u5f88\u5bf9\uff0c\u56e0\u4e3a\u4f60\u5e76\u6ca1\u6709\u94a6\u5b9a\u5927\u4e8e\u7b49\u4e8e $x$ \u7684\u8fb9\u81f3\u5c11\u8d70 $k$ \u6b21\u3002  \n\n\u663e\u7136\u4e0d\u80fd\u76f4\u63a5\u94a6\u5b9a\uff0c\u4f46\u662f\u4f60\u53ef\u4ee5\u94a6\u5b9a\u5728\u4e00\u6761\u8def\u5f84\u4e2d\u82e5\u5e72\u4e2a\u5c0f\u4e8e $x$ \u7684\u8fb9\u7684\u6743\u503c\u4e3a $x$\uff0c\u4f7f\u5f97\u5927\u4e8e\u7b49\u4e8e $x$ \u7684\u8fb9\u8d70 $k$ \u6b21\uff0c\u8fd9\u6837\u8dd1\u51fa\u6765\u7684\u7b54\u6848\u4e0d\u5c0f\u4e8e\u771f\u5b9e\u7b54\u6848\uff0c\u4e14\u4e00\u5b9a\u5728\u67d0\u6b21\u94a6\u5b9a\u540e\u8fd0\u7b97\u4e2d\u53d6\u5f97\u771f\u5b9e\u7b54\u6848\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u7684\u672c\u8d28\u662f\u5c06\u4e00\u4e2a\u4e0d\u5408\u6cd5\u65b9\u6848\u8f6c\u4e3a\u66f4\u52a3\u65b9\u6848\uff0c\u662f\u4e00\u4e2a\u56fe\u8bba\u4e2d\u7684\u7ecf\u5178\u5957\u8def\u3002  \n\n\u4f60\u5982\u679c\u4e0d\u80fd\u628a\u4e00\u4e2a\u4e1c\u897f\u52a0\u4e0a\u4e00\u4e2a\u4e0d\u786e\u5b9a\u7684\u503c\uff0c\u90a3\u5c31\u628a\u53e6\u4e00\u4e2a\u4e1c\u897f\u51cf\u53bb\u4e00\u4e2a\u786e\u5b9a\u7684\u503c\uff0c\u4f60\u8003\u8651\u8fd9\u4e2a\u64cd\u4f5c\u7b49\u4ef7\u4e8e\u5c06\u6240\u6709\u8fb9\u6743\u5c0f\u4e8e $x$ \u7684\u8fb9\u7684\u8fb9\u6743\u8bbe\u4e3a 0\uff0c\u6240\u6709\u5927\u4e8e\u7b49\u4e8e\u7684\u8fb9\u6743 $w$ \u8bbe\u4e3a $w-x$\uff0c\u6700\u540e\u6700\u77ed\u8def\u8dd1\u51fa\u6765\u7edf\u4e00\u52a0 $k\\times x$\u3002  \n\n\u90a3\u4e48\u8fd9\u4e2a\u9898\u5c31\u505a\u5b8c\u4e86\uff0c\u590d\u6742\u5ea6 $O(m^2 \\log m)$\uff1a  \n```cpp\n#include <bits/stdc++.h>\n#define mp make_pair\n#define int long long\nusing namespace std;\nconst int N=3010;\nint n,m,k,u,v,w,b[N],res=1e18,dis[N],vis[N];\nstruct EDGE{int v,w;};\nvector <EDGE> edge[N];\nstruct node{\n\tint u,dis;\n\tbool operator <(const node &a)const{\n\t\treturn a.dis<dis;\n\t}\n};\npriority_queue <node> Q;\nint solve(int x){\n\tfor(int i=1;i<=n;i++)vis[i]=0,dis[i]=1e18;\n\tdis[1]=0;Q.push((node){1,0});\n\twhile(Q.size()){\n\t\tint u=Q.top().u;Q.pop();\n\t\tif(vis[u])continue;vis[u]=1;\n\t\tfor(auto to:edge[u]){\n\t\t\tint v=to.v;int w=max(to.w,x)-x;\n\t\t\tif(vis[v])continue;\n\t\t\tif(dis[v]>dis[u]+w){\n\t\t\t\tdis[v]=dis[u]+w;\n\t\t\t\tQ.push((node){v,dis[v]});\n\t\t\t}\n\t\t}\n\t}return dis[n]+x*k;\n}\nsigned main(){\n\tios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n\tcin>>n>>m>>k;\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>u>>v>>w;b[i]=w;\n\t\tedge[u].push_back((EDGE){v,w});\n\t\tedge[v].push_back((EDGE){u,w});\n\t}sort(b+1,b+1+m);\n\tfor(int i=0;i<=m;i++)res=min(res,solve(b[i]));\n\tcout<<res;\n\treturn 0;\n}\n```\n",
        "postTime": 1681217987,
        "uid": 213173,
        "name": "\u5c0f\u6728\u866b",
        "ccfLevel": 4,
        "title": "[NEERC2017]Journey from Petersburg to Moscow \u9898\u89e3"
    },
    {
        "content": "\u8bd5\u7740\u5c06\u73b0\u5b58\u8fd9\u7bc7\u9898\u89e3\u7684\u505a\u6cd5\u8bb2\u5f97\u66f4\u6e05\u695a\u4e9b\u3002\n\n&nbsp;\n\n\u5c1d\u8bd5\u679a\u4e3e\u6bcf\u4e00\u6761\u8fb9\uff0c\u94a6\u5b9a\u5176\u4e3a\u7b54\u6848\u8def\u5f84\u4e0a\u7684\u7b2c $k$ \u957f\u7684\u8fb9\uff0c\u8bb0\u5176\u8fb9\u6743\u4e3a $w_0$\u3002\u5c06\u6743\u503c $w < w_0$ \u7684\u8fb9\u7684\u6743\u503c\u90fd\u770b\u6210 $0$\uff0c\u5c06\u6743\u503c $w \\ge w_0$ \u7684\u8fb9\u7684\u6743\u503c\u770b\u6210 $w - w_0$\uff0c\u7136\u540e\u8dd1\u6700\u77ed\u8def\uff0c\u53d6 $\\mathrm{dis}_n + kw_0$ \u4e3a\u8fd9\u6b21\u94a6\u5b9a\u7684\u7b54\u6848\u3002\n\n\u8003\u5bdf\u8fd9\u4e2a\u7b54\u6848\u548c\u5b9e\u9645\u7b54\u6848\u7684\u5173\u7cfb\u3002\n\n- \u82e5 $w_0$ \u6b63\u597d\u7b49\u4e8e\u5f53\u524d\u67d0\u6761\u6700\u77ed\u8def\u4e0a\u7684\u7b2c $k$ \u5927\u8fb9\u6743\uff0c\u5219\u5f53\u524d\u7b54\u6848\u5927\u4e8e\u7b49\u4e8e\u5b9e\u9645\u7b54\u6848\uff1b\n\n- \u82e5 $w_0$ \u5927\u4e8e\u5f53\u524d\u67d0\u6761\u6700\u77ed\u8def\u4e0a\u7684\u7b2c $k$ \u5927\u8fb9\u6743\uff0c\u5219\u5f53\u524d\u7b54\u6848\u8fd8\u662f\u5927\u4e8e\u7b49\u4e8e\u5b9e\u9645\u7b54\u6848\u3002\u8fd9\u662f\u56e0\u4e3a\uff1a\u5728\u5f53\u524d\u6700\u77ed\u8def\u4e0a\uff0c\u5b58\u5728\u82e5\u5e72\u6761\u8fb9\uff08\u53ef\u4ee5\u662f $0$ \u6761\uff09\u672c\u5e94\u8d21\u732e\u7684\u5c0f\u4e8e $w_0$ \u7684\u8fb9\u6743\u88ab\u653e\u5927\u6210\u4e86 $w_0$\uff1b\n\n- \u82e5 $w_0$ \u5c0f\u4e8e\u5f53\u524d\u67d0\u6761\u6700\u77ed\u8def\u4e0a\u7684\u7b2c $k$ \u5927\u8fb9\u6743\uff0c\u5219\u5f53\u524d\u7b54\u6848\u540c\u6837\u5927\u4e8e\u7b49\u4e8e\u5b9e\u9645\u7b54\u6848\u3002\u8fd9\u662f\u56e0\u4e3a\uff1a\u5728\u5f53\u524d\u6700\u77ed\u8def\u4e0a\uff0c\u5b58\u5728\u82e5\u5e72\u6761\u8fb9\uff08\u53ef\u4ee5\u662f $0$ \u6761\uff09\u672c\u4e0d\u5e94\u5bf9\u6700\u77ed\u8def\u957f\u5ea6\u8d21\u732e\u5374\u5b9e\u9645\u4e0a\u4ea7\u751f\u4e86\u8d21\u732e\u3002\n\n\u7531\u6b64\u53ef\u89c1\uff0c\u6bcf\u6b21\u94a6\u5b9a\u51fa\u6765\u7684\u7b54\u6848\u90fd\u662f\u5927\u4e8e\u7b49\u4e8e\u5b9e\u9645\u7b54\u6848\u7684\u3002\n\n\u8fd8\u53ef\u4ee5\u770b\u5230\uff0c\u53ea\u8981\u5b58\u5728\u4e00\u6761\u7b54\u6848\u8def\u5f84\u8fb9\u6570\u4e0d\u5c0f\u4e8e $k$\uff0c\u7b54\u6848\u8def\u5f84\u4e0a\u7684\u7b2c $k$ \u957f\u8fb9\u5c31\u662f\u5ba2\u89c2\u5b58\u5728\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4e00\u5b9a\u4f1a\u81f3\u5c11\u4e00\u6b21\u679a\u4e3e\u5230\uff0c\u5e76\u4e14\u5728\u8fd9\u65f6\u5c31\u4e00\u5b9a\u5f97\u5230\u4e86\u6b63\u786e\u7b54\u6848\u3002\n\n\u4e0d\u8fc7\u8fd8\u8981\u6ce8\u610f\u4e00\u4e2a\u4e8b\u5b9e\uff1a\u6709\u53ef\u80fd\u6240\u6709\u7684\u7b54\u6848\u8def\u5f84\u8fb9\u6570\u90fd\u4e0d\u8db3 $k$\u3002\u53ef\u4ee5\u53d1\u73b0\u8fd9\u65f6\u6309\u7167\u4e0a\u9762\u7684\u65b9\u5f0f\u4e0d\u80fd\u5f97\u5230\u6b63\u786e\u7b54\u6848\u3002\n\n\u5f53\u6240\u6709\u7684\u7b54\u6848\u8def\u5f84\u8fb9\u6570\u90fd\u4e0d\u8db3 $k$ \u65f6\uff0c\u6309\u9898\u610f\u663e\u7136\u6709\u7b54\u6848\u8def\u5f84\u4e0a\u6bcf\u4e00\u6761\u8fb9\u5bf9\u6700\u77ed\u8def\u7b54\u6848\u7684\u8d21\u732e\u90fd\u662f\u5176\u539f\u59cb\u8fb9\u6743\u3002\u6240\u4ee5\u6211\u4eec\u4e0d\u94a6\u5b9a\u4efb\u4f55\u8fb9\uff0c\u76f4\u63a5\u5728\u539f\u56fe\u4e0a\u8dd1\u6700\u77ed\u8def\uff0c\u5c31\u5f97\u5230\u4e86\u8fd9\u79cd\u60c5\u51b5\u7684\u6b63\u786e\u7b54\u6848\u3002\n\n\u6613\u89c1\uff0c\u5728\u4e0d\u662f\u8fd9\u79cd\u60c5\u51b5\u65f6\uff0c\u539f\u56fe\u6700\u77ed\u8def\u4e00\u5b9a\u4e0d\u77ed\u4e8e\u5b9e\u9645\u7b54\u6848\u3002\n\n\u5b9e\u73b0\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u6240\u6709\u94a6\u5b9a\u7b54\u6848\u548c\u76f4\u63a5\u5728\u539f\u56fe\u4e0a\u8dd1\u51fa\u6765\u7684\u6700\u77ed\u8def\u53d6\u6700\u5c0f\u503c\uff0c\u5373\u53ef\u4e00\u5b9a\u5f97\u5230\u6b63\u786e\u7b54\u6848\u3002\n\n&nbsp;\n\n\u8fd9\u9053\u9898\u7684\u96be\u70b9\u5728\u4e8e\u60f3\u5230\u679a\u4e3e\u4e00\u6761\u8fb9\u94a6\u5b9a\u5176\u8fb9\u6743\u4e3a\u8def\u5f84\u4e0a\u7b2c $k$ \u5927\u8fb9\u6743\u8fd9\u6837\u7684\u64cd\u4f5c\uff0c\u4ee5\u53ca\u8fd9\u6837\u64cd\u4f5c\u540e\u7684\u5904\u7406\u65b9\u5f0f\u53ca\u5176\u6b63\u786e\u6027\u3002",
        "postTime": 1661070986,
        "uid": 118109,
        "name": "whhsteven",
        "ccfLevel": 7,
        "title": "P6961 [NEERC2017]Journey from Petersburg to Moscow"
    }
]