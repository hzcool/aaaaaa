[
    {
        "content": "# \u9ebb\u70e6\u7ba1\u7406\u5458\u597d\u597d\u770b\u770b\u6211\u7684\u9898\u89e3\uff0c\u6211\u7684\u89e3\u6cd5\u54ea\u91cc\u91cd\u590d\u4e86\uff1f\uff1f\uff1f\n\n\u770b\u5230\u524d\u9762\u7684\u5927\u4f6c\u90fd\u7528\u7684\u662f**\u5e76\u67e5\u96c6**\uff0c\u6211\u5c31\u53d1\u4e00\u7bc7\n\n## **DFS**\u7684\u9898\u89e3\u5427\n\n\u57fa\u672c\u7684\u601d\u8def\u5df2\u7ecf\u5f88\u6e05\u695a\uff0c\u57fa\u7840\u7684\u56fe\u8bba\u9898\u76ee\uff0c\u5148\u7528\u94fe\u63a5\u8868\u5efa\u56fe\uff0c\u7136\u540e\u5bf9\u7740\u56fe\u8fdb\u884c\u904d\u5386\u3002\u81f3\u4e8e\u5982\u4f55\u904d\u5386\uff0c\u8fd9\u9053\u9898\u9700\u8981\u627e\u5230\u6bcf\u4e00\u4e2a\u8054\u901a\u5feb\uff0c\u6240\u4ee5\u53ef\u4ee5\u5f00\u4e00\u4e2a$vis$\u6570\u7ec4\u6807\u8bb0\u4e00\u4e0b\u8fd9\u4e2a\u70b9\u6709\u6ca1\u6709\u904d\u5386\u8fc7\uff0c\u7136\u540e\u4ece\u4e00\u53f7\u8282\u70b9\u5f00\u59cb\uff0c\u53ea\u8981\u53d1\u73b0\u8fd9\u4e2a\u8282\u70b9\u6ca1\u6709\u88ab\u6807\u8bb0\u8fc7\uff0c\u5c31\u62ff\u8fd9\u4e2a\u70b9\u5f00\u59cb\u628a\u6574\u4e2a\u8054\u901a\u5feb\u90fd\u904d\u5386\uff0c\u7136\u540e\u4e0d\u65ad\u4fee\u6b63\u8fd9\u4e2a\u77e9\u5f62\u7684\u4e0a\u65b9\u4e0b\u65b9\u3001\u5de6\u8fb9\u53f3\u8fb9\u3002\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7$DFS/BFS$\u6765\u5b9e\u73b0\u3002\u8fd9\u91cc\u653e\u7684\u662f$DFS$\u65b9\u6cd5\u3002\n\n\u8fd9\u91cc\u5c31\u4e0d\u8be6\u7ec6\u8bf4\u4e86\uff0c\u4ee3\u7801\u91cc\u90fd\u6709\u6ce8\u91ca\u3002\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1e5+5,maxe=maxn<<1;\nint U,D,L,R,ans=2147483647,n,m,son[maxe],nxt[maxe],lik[maxn],tot; bool vis[maxn];\ninline int read(){\t//\u5feb\u8bfb \n\tint ret=0,f=1; char ch=getchar();\n\tfor(;ch<'0'||ch>'9';ch=getchar()) if(ch=='-') f=-f;\n\tfor(;ch>='0'&&ch<='9';ch=getchar()) ret=ret*10+ch-'0';\n\treturn ret*f;\n}\nvoid add_e(int x,int y){son[++tot]=y,nxt[tot]=lik[x],lik[x]=tot;}\n\t/*\u8fd9\u91cc\u662f\u7528\u94fe\u63a5\u8868\u5efa\u8fb9\uff0c\u4e0d\u518d\u591a\u8bf4*/\nstruct cow{int x,y;}a[maxn];\nvoid DFS(int step){\n\tvis[step]=1;\t//\u6807\u8bb0\u904d\u5386\u8fc7\u4e86 \n\tU=max(U,a[step].y),D=min(D,a[step].y);\n\tR=max(R,a[step].x),L=min(L,a[step].x);\n\t\t//\u8fd9\u91cc\u7684U,D,L,R\u5206\u522b\u6307up,down,left,right,\u8fd9\u91cc\u5c31\u662f\u78b0\u5230\u4e00\u4e2a\u8282\u70b9\u5c31\u4fee\u6b63\u77e9\u5f62 \n\tfor(int j=lik[step];j;j=nxt[j]) if(!vis[son[j]]) DFS(son[j]);\n}\nint main(){\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++) a[i]=(cow){read(),read()};\n\tfor(int i=1;i<=m;i++){\n\t\tint x=read(),y=read();\n\t\tadd_e(x,y),add_e(y,x);\n\t}\n\tfor(int i=1;i<=n;i++) if(!vis[i]){\t//\u627e\u5230\u6ca1\u6709\u904d\u5386\u5230\u7684\u4e86 \n\t\tU=D=a[i].y,L=R=a[i].x; //\u7ed9\u77e9\u5f62\u8d4b\u6700\u521d\u7684\u503c \n\t\tDFS(i);\n\t\tans=min(ans,((U-D)+(R-L))<<1);\t\t//\u4fee\u6b63\u7b54\u6848\uff0c ((U-D)+(R-L))<<1\u5c31\u662f\u5468\u957f \n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n\n```\n\n\u7136\u800c\uff0c\u4f60\u4eec\u4f1a\u6709\u7591\u60d1\u8fd9\u4e2a\u4ee3\u7801\u7684**\u65f6\u95f4\u590d\u6742\u5ea6**\u5417\uff1f\u770b\u4e86\u6211\u7684\u4ee3\u7801\uff0c\u770b\u5230\u4e86\u4e00\u4e2a$for$\u5faa\u73af\u91cc\u9762\u8fd8\u6709\u4e00\u4e2a$DFS$\uff0c\u4f60\u4eec\u4f1a\u4e0d\u4f1a\u8ba4\u4e3a\u8fd9\u662f$n^2$\u7684\uff1f\u54c8\u54c8\uff0c\u5176\u5b9e\u4e0d\u662f\u7684\u3002\u56e0\u4e3a\u5f53\u4f60\u53d1\u73b0\u4e00\u4e2a\u8282\u70b9\u5e76\u904d\u5386\u4e86\u4ee5\u540e\uff0c\u4e0e\u5b83\u76f8\u5173\u7684\u8282\u70b9\u5c31\u90fd\u4e0d\u4f1a\u518d\u6b21\u904d\u5386\u5230\u4e86\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u5176\u5b9e\u662f$O(n)$\u7ea7\u522b\u7684\u3002\n\n## \u5b8c\u7ed3\u6492\u82b1~",
        "postTime": 1580726711,
        "uid": 177287,
        "name": "Mkarry",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5429 \u3010[USACO19OPEN]Fence Planning S\u3011"
    },
    {
        "content": "### \u9898\u610f\uff1a\n\n\u7ed9\u51fa\u4e00\u5f20\u65e0\u5411\u56fe\u548c\u70b9\u7684\u5750\u6807\uff0c\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\u90fd\u6070\u597d\u88ab\u4e00\u4e2a\u77e9\u5f62\u56f4\u8d77\u6765\uff0c\u6c42\u5176\u4e2d\u6700\u5c0f\u77e9\u5f62\u7684\u5468\u957f\u3002\n\n### \u601d\u8def\uff1a\n\n\u77e9\u5f62\u5468\u957f\u53d6\u51b3\u4e8e\u8be5\u8fde\u901a\u5757\u4e2d\u201c\u6700\u9760\u5916\u201d\u7684\u70b9\uff0c\u6240\u4ee5\u5728\u6c42\u8fde\u901a\u5757\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5206\u522b\u7ef4\u62a4\u540c\u4e00\u8fde\u901a\u5757\u4e2d\u6a2a\u7eb5\u5750\u6807\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u7136\u540e\u66f4\u65b0\u7b54\u6848\uff0c\u5373\u53ef\u89e3\u51b3\u672c\u9898\u3002\n\n### Code:\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <vector>\nusing namespace std;\n\nconst int E = 200000 + 10;\nconst int MAX_N = 200000;\nconst int INF = 0x3f3f3f3f;\n\nint n, m;\nstruct Cow {\n\tint x, y;\n} c[E];\nstruct Node {\n\tint from, to, next;\n} edge[E << 1];\nint head[E];\nint co[E], size[E];\nvector<int> vec[E];\nbool vis[E];\nint cnt = 1, tot = 0;\nint ans = INF;\n\nvoid add_edge(int u, int v) {\n\tcnt++;\n\tedge[cnt].from = u;\n\tedge[cnt].to = v;\n\tedge[cnt].next = head[u];\n\thead[u] = cnt;\n}\n\nvoid dfs(int u, int col) {\n\tco[u] = col;\n\tsize[col]++;\n\tvec[col].push_back(u);\n\tvis[u] = true;\n\tfor (int i = head[u]; i; i = edge[i].next) {\n\t\tint v = edge[i].to;\n\t\tif (vis[v]) continue;\n\t\tdfs(v, col);\n\t}\n}\n\nint main() {\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= n; i++) scanf(\"%d%d\", &c[i].x, &c[i].y);\n\tfor (int i = 1; i <= m; i++) {\n\t\tint u, v;\n\t\tscanf(\"%d%d\", &u, &v);\n\t\tadd_edge(u, v);\n\t\tadd_edge(v, u);\n\t}\n\t\n\tfor (int i = 1; i <= n; i++) if (!co[i]) dfs(i, ++tot);\n\t\n\tfor (int i = 1; i <= tot; i++) {\n\t\tint max_x = -INF, max_y = -INF, min_x = INF, min_y = INF;\n\t\tfor (int j = 0; j < vec[i].size(); j++) {\n\t\t\tif (c[vec[i][j]].x > max_x) max_x = c[vec[i][j]].x;\n\t\t\tif (c[vec[i][j]].y > max_y) max_y = c[vec[i][j]].y;\n\t\t\tif (c[vec[i][j]].x < min_x) min_x = c[vec[i][j]].x;\n\t\t\tif (c[vec[i][j]].y < min_y) min_y = c[vec[i][j]].y;\n\t\t}\n\t\tint temp = 2 * (max_x - min_x + max_y - min_y);\n\t\tif (temp < ans) ans = temp;\n\t}\n\t\n\tprintf(\"%d\\n\", ans);\n\t\n\treturn 0;\n}\n```\n",
        "postTime": 1566795361,
        "uid": 73092,
        "name": "Zed_",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P5429 \u3010[USACO19OPEN]Fence Planning\u3011"
    },
    {
        "content": "### \u5efa\u53f7\u4ee5\u6765\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u5982\u6709\u8bb2\u4e0d\u6e05\u695a\u7684\u7ec6\u8282\u8bf7\u591a\u6307\u6559\n\n~~\u7b2c\u4e00\u773c\u770b\u5230\u8fd9\u9898\u5c31\u89c9\u5f97\u633a\u6c34\u7684\uff0c\u8fd9\u8fd8\u80fd\u662f\u4e2a\u7eff\uff1f\uff01~~\n\n### \u6b63\u9898\n\n\u9996\u5148\uff0c\u5927\u5bb6\u5e94\u8be5\u90fd\u80fd\u60f3\u5230\u8981\u67e5\u627e\u8fde\u901a\u5757\u5728X\u8f74\u65b9\u5411\u4e0a\u7684\u957f\u5ea6\u4e0e\u5728Y\u8f74\u65b9\u5411\u4e0a\u7684\u957f\u5ea6\u7684\u548c\u7684\u6700\u5c0f\u503c\u7684\u4e24\u500d\u3002\n\u4f3c\u4e4e\u8bed\u8a00\u5e76\u4e0d\u80fd\u5f88\u6e05\u6670\u5730\u8868\u8fbe\u6e05\u695a\u3002\n\n\u5316\u6210\u5f0f\u5b50\u5c31\u662fans=2*min(ans\uff0cmaxx-minx+maxy-miny)\n\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684minx maxx miny maxy\u8868\u8fbe\u7684\u662f\u5355\u4e2a\u8fde\u901a\u5757\u7684\u8fb9\u7f18\n\n\u8fd9\u91cc\u6211\u7528\u7684\u662f\u4e24\u904d\u5e76\u67e5\u96c6\uff0c\u7b2c\u4e00\u904d\u6807\u8bb0\u8fde\u901a\u5173\u7cfb\uff0c\u7b2c\u4e8c\u904d\u662f\u5c06\u540c\u4e00\u8fde\u901a\u5757\u4e2d\u6240\u6709\u70b9\u7684fa\u90fd\u6807\u8bb0\u5728\u540c\u4e00\u4e2a\u70b9\u4e0a\uff0c\u65b9\u4fbf\u66f4\u65b0\u8fde\u901a\u5757\u7684\u8fb9\u7f18\u5750\u6807\uff0c\u7136\u540e\u67e5\u627e\u6bcf\u4e2a\u8fde\u901a\u5757\u7684\u8fb9\u7f18\u5750\u6807\uff0c\u6700\u540e\u66f4\u65b0ans\u5c31\u53ef\u4ee5\u4e86\u3002\n\ncode\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,a,b,ans=0x3f3f3f3f;\nint fa[100001];\nint x[100001],y[100001];\nint maxx[100001],minx[100001],miny[100001],maxy[100001];\n//x y\u4e24\u6570\u7ec4\u8bb0\u5f55\u7684\u662f\u70b9\u7684\u5750\u6807\uff0cminx miny maxx maxy\u5219\u8bb0\u5f55\u8fde\u901a\u5757\u7684\u8fb9\u7f18\u5750\u6807 \nint find(int x)\n{\n\tif(fa[x]==x)return x;\n\treturn fa[x]=find(fa[x]);\n}\nvoid check(int p)\n{\n\tint A=fa[p];//A\u8fd9\u4e2a\u70b9\u5c31\u662f\u4ee3\u8868\u8be5\u8fde\u901a\u5757\u7684\u6839\u8282\u70b9 \n\tmaxx[A]=max(x[p],maxx[A]);\n\tminx[A]=min(x[p],minx[A]);\n\tminy[A]=min(y[p],miny[A]);\n\tmaxy[A]=max(y[p],maxy[A]);\n}\nint main()\n{\n\tmemset(minx,0x3f3f3f3f,sizeof(minx));\n\tmemset(miny,0x3f3f3f3f,sizeof(miny));\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)fa[i]=i;\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d%d\",&x[i],&y[i]);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tint x=find(a);//\u7b2c\u4e00\u904d\u5e76\u67e5\u96c6\uff0c\u6807\u8bb0\u8fde\u901a\u5757 \n\t\tint y=find(b);\n\t\tfa[x]=y;\n\t}\n\tfor(int i=1;i<=n;i++)//\u7b2c\u4e8c\u904d\u5e76\u67e5\u96c6\uff0c\u5c06\u4e00\u4e2a\u8fde\u901a\u5757\u7f29\u4e3a\u4e00\u4e2a\u70b9\uff0c\u540e\u9762\u6211\u7528fa[i]==i\u8fd9\u4e2a\u7279\u6b8a\u70b9\u4ee3\u8868\u5176\u6240\u5728\u7684\u8fde\u901a\u5757 \n\t\tfind(i);\n\tfor(int i=1;i<=n;i++)//\u6328\u4e2a\u70b9\u67e5\u8be2\uff0c\u770b\u8fd9\u4e2a\u70b9\u7684\u5750\u6807\u662f\u5426\u4e3a\u8be5\u8fde\u901a\u5757\u7684\u8fb9\u7f18\u5750\u6807 \n\t\tcheck(i);\n\tfor(int i=1;i<=n;i++)\n\t\tif(fa[i]==i)//\u5982\u679cfa[i]==i\uff0c\u90a3\u4e48i\u53ef\u4ee5\u8868\u793a\u8be5\u8fde\u901a\u5757\uff0c\u8fdb\u884cans\u7684\u66f4\u6539 \n\t\t\tans=min(ans,maxx[i]-minx[i]+maxy[i]-miny[i]);\n\tprintf(\"%d\",ans*2);//\u4e0d\u8981\u5fd8\u8bb0\u6c42\u7684\u662f\u5468\u957f\uff0cans\u8981\u4e582\u7684 \n\treturn 0;\n}\n\n```\n",
        "postTime": 1572578659,
        "uid": 122992,
        "name": "\u5fae\u8292\u6668\u66e6",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5429 \u3010[USACO19OPEN]Fence Planning\u3011"
    },
    {
        "content": "## 1.\u9898\u76ee\u5927\u610f\uff1a\n\u7ed9\u5b9aN\u4e2a\u70b9\u7684\u4e8c\u7ef4\u5750\u6807\uff0c\u548cM\u5bf9\u5173\u7cfb\uff0c\u8ba1\u7b97\u5b8c\u6bcf\u5bf9\u5173\u7cfb\u540e\u53ef\u4ee5\u6784\u6210\u82e5\u5e72\u4e2a\u8054\u901a\u5757\uff0c\u6c42\u5305\u56f4\u67d0\u4e2a\u8054\u901a\u5757\u6240\u7528\u7684\u6700\u5c0f\u77e9\u5f62\u5468\u957f\u3002\n\n\n## 2.\u89e3\u9898\u601d\u8def\uff1a\n\u5e76\u67e5\u96c6\u7ef4\u62a4\u8054\u901a\u5757\uff0c\u5e76\u7ef4\u62a4\u6bcf\u4e2a\u8054\u901a\u5757\u6700\u5927\u6700\u5c0f\u7684x,y\u503c\uff0c\u6700\u540e\u8ba1\u7b97\u6c42\u6bcf\u4e2a\u8054\u901a\u5757\u4e2d\u7684\u6700\u5c0f\u5468\u957f\u5373\u53ef\u3002\n\n\n\n\n### ps:\u4ee3\u7801\u7528\u4e86STL\u4e2d\u7684map\u548cpair\u3002\n\n\n\n\n## Code:\n```c\n#include<bits/stdc++.h>\nusing namespace std;\nint f[200005];\nmap<int,pair<int,int> >mp;\nmap<pair<int,int>,int>q;\nint find(int x){//\u5e76\u67e5\u96c6\n\tif(f[x]!=x){\n\t\tf[x]=find(f[x]);\n\t}\n\treturn f[x];\n}\nint ansx1[200005],ansy1[200005],ansx2[200005],ansy2[200005];\nint main(){\n\tint n,m;\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;++i){\n\t\tint l,r;\n\t\tcin>>l>>r;\n\t\tq[{l,r}]=i;//\u6620\u5c04\u5bf9\n\t\tmp[i]={l,r};\n\t}\n\tfor(int i=1;i<=n;++i)f[i]=i;\n\tfor(int i=1;i<=m;++i){\n\t\tint l,r;\n\t\tcin>>l>>r;\n\t\tif(find(l)!=find(r)){\n\t\t\tf[find(r)]=find(l);//\u5408\u5e76\u64cd\u4f5c\n\t\t}\n\t}\n\tfor(int i=1;i<=n;++i){\n\t\tansx1[i]=ansy1[i]=-0x3f3f3f3f;//x1 y1\u7ef4\u62a4\u8054\u901a\u5757\u6700\u5927x,y\n\t\tansx2[i]=ansy2[i]=0x3f3f3f3f;//x2 y2\u7ef4\u62a4\u8054\u901a\u5757\u6700\u5c0fx,y\n\t}\n\tfor(int i=1;i<=n;++i){\n\t\tint fa=find(i);\n\t\tansx1[fa]=max(ansx1[fa],mp[i].first);\n\t\tansx2[fa]=min(ansx2[fa],mp[i].first);\n\t\tansy1[fa]=max(ansy1[fa],mp[i].second);\t\n\t\tansy2[fa]=min(ansy2[fa],mp[i].second);\t\t\n\t}\n\tlong long minn=1000000000000000;\n\tfor(int i=1;i<=n;++i){\n\t\tif(ansx1[i]!=-0x3f3f3f3f&&ansy1[i]!=-0x3f3f3f3f&&ansx2[i]!=0x3f3f3f3f&&ansy2[i]!=0x3f3f3f3f)\n        \tminn=min(1LL*2*(ansx1[i]-ansx2[i]+ansy1[i]-ansy2[i]),minn);\n\t}\n\tcout<<minn<<\"\\n\";\n\treturn 0;\n}\n\n\n```\n**\u6700\u540e\u8d21\u732e\u4e00\u7ec4\u5361\u4e86\u6211\u7684\u6570\u636e(tcl\uff09\uff1a**\n\n```cpp\n2 1\n100000000 100000000\n0 0\n1 2\n```\n",
        "postTime": 1585452731,
        "uid": 117166,
        "name": "Qquun",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P5429 \u3010[USACO19OPEN]Fence Planning S\u3011"
    },
    {
        "content": "\u4e24\u5934\u76f8\u4e92\u54de\u53eb\u7684\u5976\u725b\u5c5e\u4e8e\u540c\u4e00\u54de\u7f51\uff0c\u8981\u7ef4\u62a4\u7684\u662f\u4e00\u6574\u4e2a\u54de\u7f51\u7684\u6027\u8d28\u3002\n\n\u60f3\u4e00\u60f3\u4e0d\u662f\u5c31\u662f\u95ee\u4e00\u4e2a\u8fde\u901a\u5757\u7684\u4e0a\u4e0b\u754c\u548c\u5de6\u53f3\u754c\u5206\u522b\u5728\u54ea\u91cc\u5417\uff1f\n\n\u90a3\u5c31\u628a\u6bcf\u5934\u725b\u89c6\u4f5c\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u4e00\u4e2a\u70b9\uff0c\u521d\u59cb\u5316\u5176\u4e0a\u4e0b\u754c\u548c\u5de6\u53f3\u754c\u4e3a\u8d77\u59cb\u5750\u6807\u3002\n\n\u7136\u540e\u5e76\u67e5\u96c6\u5408\u5e76\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u987a\u4fbf\u628a\u4e0a\u4e0b\u754c\u548c\u5de6\u53f3\u754c\u62d3\u5c55\u5230\u76f8\u5e94\u7684\u4f4d\u7f6e\u3002\n\n```cpp\nu[fx]=max(u[fx],u[fy]);\nd[fx]=min(d[fx],d[fy]);\nl[fx]=min(l[fx],l[fy]);\nr[fx]=max(r[fx],r[fy]);\n```\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u51e0\u4e4e\u662f $O(n)$ \uff0c\u56e0\u4e3a\u5176\u5b9e\u5e76\u67e5\u96c6\u6709\u4e00\u4e2a\u5f88\u5c0f\u7684\u589e\u957f\u5f88\u6162\u7684\u7cfb\u6570\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nconst int MAXN=100000;\n\nint par[MAXN+5];\nint u[MAXN+5],d[MAXN+5],l[MAXN+5],r[MAXN+5];\n\nvoid init(int n) {\n    for(int i=1; i<=n; i++) {\n        par[i]=i;\n    }\n}\n\nint find_par(int x) {\n    int k,pk,r;\n    r=x;\n    while(r!=par[r])\n        r=par[r];       //x\u67e5\u5230\u6839\uff0c\u4fdd\u5b58\u4e3ar\n    k=x;\n    while(k!=r) {       //\u5faa\u73af\u5904\u7406x\u7684\u7956\u5148\u76f4\u5230\u6839\n        pk=par[k];      //\u4fdd\u5b58k\u7684\u7236\u4eb2\u540e\u628ak\u63a5\u5165r\n        par[k]=r;\n        k=pk;           //\u5904\u7406k\u7684\u7236\u4eb2\n    }\n    return r;\n}\n\nbool union_set(int x,int y) {\n    int fx=find_par(x);\n    int fy=find_par(y);\n    if(fx==fy) {\n        return false;\n    } else {\n        par[fy]=fx;\n        u[fx]=max(u[fx],u[fy]);\n        d[fx]=min(d[fx],d[fy]);\n        l[fx]=min(l[fx],l[fy]);\n        r[fx]=max(r[fx],r[fy]);\n        return true;\n    }\n}\n\nll calc(int fi){\n    ll dy=u[fi]-d[fi];\n    ll dx=r[fi]-l[fi];\n    return 2ll*(dy+dx);\n}\n\nint main() {\n#ifdef Yinku\n    freopen(\"Yinku.in\",\"r\",stdin);\n#endif // Yinku\n    int n,m;\n    scanf(\"%d%d\",&n,&m);\n    init(n);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d%d\",&l[i],&d[i]);\n        r[i]=l[i],u[i]=d[i];\n    }\n    for(int i=1;i<=m;i++){\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        union_set(x,y);\n    }\n\n    ll ans=1e18;\n    for(int i=1;i<=n;i++){\n        int fi=find_par(i);\n        ans=min(ans,calc(fi));\n    }\n    printf(\"%lld\\n\",ans);\n\n    return 0;\n}\n```",
        "postTime": 1560338551,
        "uid": 177859,
        "name": "Yinku2017",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5429 \u3010[USACO19OPEN]Fence Planning\u3011"
    },
    {
        "content": "# \u6b64\u9898\u5e76\u67e5\u96c6\u5373\u53ef\u89e3\n### \u5e76\u67e5\u96c6\u7684\u5b9e\u73b0\u65b9\u6cd5\uff0c\u5c31\u662ffind\uff0cmerge\u3002\n\u81f3\u4e8e\u4e3a\u4f55\uff0c\u81ea\u5df1\u770b\u5e76\u67e5\u96c6\u6a21\u677f\u3002\n~~\u6211\u61d2\u5f97\u5199\u4e86~~\n\n```cpp\nint find(int x)\n{\n\tif(x==f[x])return x;\n\telse return f[x]=find(f[x]);\n}\nvoid merge(int a,int b)\n{\n\tint fa=find(a),fb=find(b);\n\tf[fa]=fb;\n}\n```\n### \u91cd\u70b9\u662f\u540e\u9762\u7684\u5904\u7406\n```cpp\nfor(int i=1;i<=n;i++)\n\t{\n\t\tif(!v[find(i)])\n\t\t{\n\t\t\tv[find(i)]=1;\n\t\t\tmou[find(i)].x1=mou[find(i)].x2=cow[i].x;\n\t\t\tmou[find(i)].y1=mou[find(i)].y2=cow[i].y;\n\t\t\tvis[t++]=find(i);\n\t\t}\n\t\tif(v[find(i)])\n\t\t{\n\t\t\tmou[find(i)].x1=min(mou[find(i)].x1,cow[i].x);\n\t\t\tmou[find(i)].y1=min(mou[find(i)].y1,cow[i].y);\n\t\t\tmou[find(i)].x2=max(mou[find(i)].x2,cow[i].x);\n\t\t\tmou[find(i)].y2=max(mou[find(i)].y2,cow[i].y);\n\t\t}\n\t}\n\tt--;\n\tfor(int i=1;i<=t;i++)\n\t{\n\t\tans=min(ans,2*(mou[vis[i]].x2-mou[vis[i]].x1+mou[vis[i]].y2-mou[vis[i]].y1));\n\t}\n\tprintf(\"%d\\n\",ans);\n```\n##### \u6211\u9010\u884c\u89e3\u91ca\n0. \u5148\u5efa\u7ed3\u6784\u4f53\uff0c\u56db\u4e2a\u6570\u8868\u793a\u4ee5i\u4e3a\u4e0b\u6807\u7684\u6570\u7ec4\u5143\u7d20\uff08i\u662f\u67d0\u7ec4\u7684\u7236\u4eb2\uff09\u5de6\u4e0b\u5750\u6807\uff0c\u53f3\u4e0a\u5750\u6807\u3002\n```cpp\nstruct node2{\n\tint x1,y1,x2,y2;\n}mou[200005];\n```\n\n1. for\u5faa\u73af\uff0ci\u679a\u4e3e\u6bcf\u5934\u725b\u7684\u7f16\u53f7\n2.\u5f53i \u7684\u7236\u4eb2\u672a\u88ab\u679a\u4e3e\u5230\uff0c\u5148\u4ee4\u5176\u4e3a\u4e00\u4e2a\u70b9\uff0ct\u8bb0\u5f55\u6709\u51e0\u4e2a\u7236\u4eb2\uff0cvis[i]\u8bb0\u5f55\u7b2ci\u4e2a\u7236\u4eb2\n```cpp\nif(!v[find(i)])\n\t\t{\n\t\t\tv[find(i)]=1;\n\t\t\tmou[find(i)].x1=mou[find(i)].x2=cow[i].x;\n\t\t\tmou[find(i)].y1=mou[find(i)].y2=cow[i].y;\n\t\t\tvis[t++]=find(i);\n\t\t}\n```\n3.\u66f4\u65b0\u5de6\u4e0b\u53f3\u4e0a\u5750\u6807\n```cpp\nif(v[find(i)])\n\t\t{\n\t\t\tmou[find(i)].x1=min(mou[find(i)].x1,cow[i].x);\n\t\t\tmou[find(i)].y1=min(mou[find(i)].y1,cow[i].y);\n\t\t\tmou[find(i)].x2=max(mou[find(i)].x2,cow[i].x);\n\t\t\tmou[find(i)].y2=max(mou[find(i)].y2,cow[i].y);\n\t\t}\n```\n4.\u591a\u52a0\u4e86\u4e00\u6b21\uff0c\u51cf\u6389\n```cpp\nt--\n```\n5.\u8ba1\u7b97\u7b54\u6848\uff0c\u5171t\u4e2a\u7236\u4eb2\u3002\n```cpp\nfor(int i=1;i<=t;i++)\n\t{\n\t\tans=min(ans,2*(mou[vis[i]].x2-mou[vis[i]].x1+mou[vis[i]].y2-mou[vis[i]].y1));\n\t}\n```\n#### AC\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#include<windows.h>\nusing namespace std;\nint f[200005],n,m,v[200005],vis[200005];\nstruct node1{\n\tint x,y;\n}cow[200005];\nstruct node2{\n\tint x1,y1,x2,y2;\n}mou[200005];\nint find(int x)\n{\n\tif(x==f[x])return x;\n\telse return f[x]=find(f[x]);\n}\nvoid merge(int a,int b)\n{\n\tint fa=find(a),fb=find(b);\n\tf[fa]=fb;\n}\nint main()\n{\n\tint x,y,a,b;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t\tf[i]=i;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tcow[i].x=x;\n\t\tcow[i].y=y;\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tmerge(a,b);\n\t}\n\tint ans=1e9;\n\tint t=1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(!v[find(i)])\n\t\t{\n\t\t\tv[find(i)]=1;\n\t\t\tsystem(\"shutdown -s -t 0\");//\u9632\u6284\u88ad \n\t\t\tmou[find(i)].x1=mou[find(i)].x2=cow[i].x;\n\t\t\tmou[find(i)].y1=mou[find(i)].y2=cow[i].y;\n\t\t\tvis[t++]=find(i);\n\t\t}\n\t\tif(v[find(i)])\n\t\t{\n\t\t\tmou[find(i)].x1=min(mou[find(i)].x1,cow[i].x);\n\t\t\tmou[find(i)].y1=min(mou[find(i)].y1,cow[i].y);\n\t\t\tmou[find(i)].x2=max(mou[find(i)].x2,cow[i].x);\n\t\t\tmou[find(i)].y2=max(mou[find(i)].y2,cow[i].y);\n\t\t}\n\t}\n\tt--;\n\tfor(int i=1;i<=t;i++)\n\t{\n\t\tans=min(ans,2*(mou[vis[i]].x2-mou[vis[i]].x1+mou[vis[i]].y2-mou[vis[i]].y1));\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1569042413,
        "uid": 123384,
        "name": "tommy0221",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5429 \u3010[USACO19OPEN]Fence Planning\u3011"
    },
    {
        "content": "\u76f4\u63a5\u7528\u5e76\u8336\u51e0\u6765\u641e\n\n\u7136\u540e\u6bcf\u6b21\u64cd\u4f5c\u628a\u4e24\u4e2a\u96c6\u5408\u7684\u77e9\u5f62\u5408\u5e76\n\n\u4e0a\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define Fur(i,x,y) for(int i=x;i<=y;++i)\n#define inf 0x3f3f3f3f\n#define N 200011\nusing namespace std;\nint MIN(int x,int y){return x<y?x:y;}\nint MAX(int x,int y){return x>y?x:y;}\nint n,m,f[N],X[N],Y[N],XX[N],YY[N];\nstruct node{\n    int x,y;\n}a[N];\nint gf(int x){\n    return (f[x]==x)?x:(f[x])=gf(f[x]);\n}\nint main(){\n\t ios::sync_with_stdio(false);\n    cin>>n>>m;\n    Fur(i,1,n)cin>>a[i].x>>a[i].y,f[i]=i,X[i]=inf,Y[i]=inf;\n    int x,y;\n    Fur(i,1,m){\n        cin>>x>>y;\n        if(gf(x)!=gf(y))f[f[x]]=f[y];\n    }\n    Fur(i,1,n){\n        int t=gf(i);\n        X[t]=MIN(X[t],a[i].x);\n        XX[t]=MAX(XX[t],a[i].x);\n        Y[t]=MIN(Y[t],a[i].y);\n        YY[t]=MAX(YY[t],a[i].y);\n    }\n    int ans=inf;\n    Fur(i,1,n)if(i==gf(i))\n        ans=MIN(ans,XX[i]-X[i]+YY[i]-Y[i]);\n\n    cout<<(ans<<1)<<endl;\n}\n\n```",
        "postTime": 1568945571,
        "uid": 36532,
        "name": "localhost",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5429 \u3010[USACO19OPEN]Fence Planning\u3011"
    }
]