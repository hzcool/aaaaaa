[
    {
        "content": "\u611f\u89c9 AC \u81ea\u52a8\u673a\u53ef\u4ee5\u51fa\u5f88\u6bd2\u7624\u7684\u6570\u636e\u7ed3\u6784\u9898\u554a\uff0c\u53ef\u662f\u4e3a\u4ec0\u4e48\u6ca1\u4eba\u51fa\u554a\u3002/kk  \n\u96be\u5ea6\u548c\u7801\u91cf\u5927\u81f4\u76f8\u5f53\u4e8e\u4e00\u4e2a\u6bd4\u8f83\u7b80\u5355\u7684 Ynoi \u5427\u3002  \n### 20pts  \n\u76f4\u63a5\u66b4\u529b\u7ef4\u62a4 $a_i$\uff0c\u66b4\u529b KMP \u5373\u53ef\u3002  \n### 40pts  \n\u7ebf\u6bb5\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\u5f00\u4e00\u4e2a AC \u81ea\u52a8\u673a\uff0c\u7136\u540e\u7edf\u8ba1\u51fa\u73b0\u6b21\u6570\u5c31\u53ef\u4ee5\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(nlogn)\\sim O(nlog^2n)$\u3002  \n### 60pts  \n\u4f3c\u4e4e\u53ef\u4ee5\u7528 ODT \u7ef4\u62a4\u6743\u503c\uff0c\u7136\u540e\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\u533a\u95f4\u5185\u5b57\u7b26\u4e32\u5728\u5927\u4e32\u51fa\u73b0\u6b21\u6570\uff0c\u7ebf\u6bb5\u6811\u5373\u53ef\u3002\u6ce8\u610f\u4e0a\u4e00\u4e2a\u90e8\u5206\u5206\u4e0d\u80fd\u7528\u8fd9\u79cd\u65b9\u6cd5\u3002  \n## 100pts  \n\u524d\u7f6e\u77e5\u8bc6\uff1a[e-Government](https://www.luogu.com.cn/problem/CF163E)  \n\u9996\u5148\u80af\u5b9a\u662f\u8981\u5efa AC \u81ea\u52a8\u673a\u7684\u3002\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u63a8\u5e73\uff0c\u7ebf\u6bb5\u6811\uff1f\u53ef\u662f\u8fd9\u4e2a\u600e\u4e48 pushup \u554a\u3002\u6211\u4eec\u60f3\u5230\u53e6\u4e00\u79cd\u652f\u6301\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u63a8\u5e73\u7684\u6570\u636e\u7ed3\u6784\u2014\u2014\u5206\u5757\u3002\u8ba9\u6211\u4eec\u770b\u5206\u5757\u600e\u4e48\u652f\u6301\u4ee5\u4e0a\u7684\u64cd\u4f5c\u3002  \n\u9996\u5148\uff0c\u6211\u4eec\u6bcf $\\sqrt{n}$ \u4e2a\u4e32\u5efa\u4e00\u4e2a AC \u81ea\u52a8\u673a\uff0c\u540c\u65f6\u5efa\u51fa\u5b83\u7684 fail \u6811\u3002\u5bf9\u4e8e\u521d\u59cb\u7684 $a_i$ \u6211\u4eec\u50cf e-Government \u90a3\u6837\u7528\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u8fdb\u884c\u5b50\u6811\u52a0\uff0c\u5355\u70b9\u67e5\u8be2\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5728\u8fb9\u89d2\u4fee\u6539\u7684\u65f6\u5019\u4e5f\u53ef\u4ee5\u5bf9\u6811\u72b6\u6570\u7ec4\u8fdb\u884c\u64cd\u4f5c\u3002  \n\u5bf9\u4e8e\u6574\u5757\u7684\u4fee\u6539\uff0c\u6211\u4eec\u9700\u8981\u591a\u8bb0\u5f55\u4e00\u4e2a $tag$ \u6570\u7ec4\u548c\u4e00\u4e2a $dlt$ \u6570\u7ec4\u3002\u533a\u95f4\u6574\u5757\u63a8\u5e73\u65f6\uff0c\u6211\u4eec\u5c06 $dlt$ \u6570\u7ec4\u4fee\u6539\u4e3a\u90a3\u4e2a\u503c\uff0c\u540c\u65f6\u5c06 $tag$ \u7f6e\u4e3a $1$\uff0c\u4ee3\u8868\u8fd9\u4e2a\u533a\u95f4\u5df2\u7ecf\u88ab\u63a8\u5e73\u3002\u533a\u95f4\u52a0\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5bf9 $dlt$ \u8fdb\u884c\u64cd\u4f5c\u5373\u53ef\u3002  \n\u5728\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5bf9\u4e8e\u8fb9\u89d2\uff0c\u76f4\u63a5\u66b4\u529b KMP \u5373\u53ef\u3002\u5bf9\u4e8e\u6574\u5757\uff0c\u6211\u4eec\u5206\u6210\u4e24\u79cd\u60c5\u51b5\u4ea7\u751f\u8d21\u732e\u3002  \n\u5982\u679c\u8fd9\u4e2a\u533a\u95f4 $tag$ \u4e3a $1$\uff0c\u6211\u4eec\u53ea\u9700\u8981\u67e5\u8be2\u8fd9\u4e2a\u5757\u7684\u6240\u6709\u4e32\u7684\u51fa\u73b0\u6b21\u6570\u548c\u4e58\u4e0a $dlt$ \u5373\u53ef\u3002\u5982\u679c $tag$ \u4e3a $0$\uff0c\u5219\u4e0d\u4ec5\u9700\u8981\u67e5\u8be2\u8fd9\u4e2a\u5757\u7684\u6240\u6709\u4e32\u7684\u51fa\u73b0\u6b21\u6570\u548c\u4e58\u4e0a $dlt$\uff0c\u8fd8\u9700\u8981\u5728\u6811\u72b6\u6570\u7ec4\u4e2d\u8fdb\u884c\u67e5\u8be2\u3002  \n\u8bbe\u5b57\u7b26\u4e32\u603b\u957f\u5ea6\u4e3a $L$\uff0c\u5219\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(L\\sqrt{n}\\log L)$\uff0c\u4ee3\u7801\u7ec6\u8282\u6bd4\u8f83\u591a\uff0c\u6709\u70b9\u957f\uff0c\u5199\u7684\u65f6\u5019\u6ce8\u610f\u3002  \n```cpp\n#include<bits/stdc++.h>\n#define addtag(i,k) a[i]+=k,add(l[bj[i]],k),add(r[bj[i]]+1,-k)//\u7ed9 i \u7684\u8d21\u732e\u52a0\u4e0a k\n#define chtag(i,k) add(l[bj[i]],k-a[i]),add(r[bj[i]]+1,a[i]-k),a[i]=k//\u5c06 i \u7684\u8d21\u732e\u6539\u4e3a k\nusing namespace std;\ntypedef long long ll;\ninline int read() {\n\tint __x=0,__f=1;\n\tchar __c=getchar();\n\twhile(__c<'0'||__c>'9') {\n\t\tif(__c=='-')__f=-1;\n\t\t__c=getchar();\n\t}\n\twhile(__c>='0'&&__c<='9') {\n\t\t__x=__x*10+__c-'0';\n\t\t__c=getchar();\n\t}\n\treturn __x*__f;\n}\ninline void write(ll __x) {\n\tif(__x<0) {\n\t\tputchar('-');\n\t\t__x=-__x;\n\t}\n\tif(__x>=10)write(__x/10);\n\tputchar(__x%10+'0');\n}\ninline string readstr() {\n\tchar __ch=getchar();\n\tstring __st1=\"\";\n\twhile (__ch<'0'||__ch>'z')\n\t\t__ch=getchar();\n\twhile (__ch>='0'&&__ch<='z')\n\t\t__st1+=__ch,__ch=getchar();\n\treturn __st1;\n}\nconst int maxn=2e5+5,mod=1e9+7;\nstruct edge {\n\tint next,to;\n} e[maxn*2];\nint t[maxn][3],fail[maxn],h[maxn],v[maxn],dlt[maxn],bj[maxn],l[maxn],r[maxn],bel[maxn],n,m,cnt,tot,pos,rt[maxn],lb[maxn],rb[maxn],nxt[maxn],sqrtn,sn;\nll c[maxn],a[maxn],tag[maxn];\nstring s[maxn];\nqueue<int> q;\nvoid addedge(int x,int y) {\n\te[++cnt].next=h[x];\n\te[cnt].to=y;\n\th[x]=cnt;\n}\nvoid insert(const string &s,int rot,int u) {\n\tint root=rot,len=s.length(),y;//\u63d2\u5165\u4ee5 rot \u4e3a\u6839\u7684 Trie \u4e2d\n\tfor(register int i=0; i<len; i++) {\n\t\ty=s[i]-'a';\n\t\tif(!t[root][y]) {\n\t\t\tt[root][y]=++tot;\n\t\t}\n\t\troot=t[root][y];\n\t}\n\tv[root]++;\n\tbj[u]=root;\n}\nvoid getfail(int rot) {\n\tfor(register int i=0; i<3; i++) {\n\t\tt[0][i]=rot;\n\t}\n\tq.push(rot);\n\twhile(!q.empty()) {\n\t\tint u=q.front(),f=fail[u];\n\t\tq.pop();\n\t\tv[u]+=v[f];\n\t\tfor(register int i=0; i<3; i++) {\n\t\t\tint j=t[u][i];\n\t\t\tif(!j) {\n\t\t\t\tt[u][i]=t[f][i];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfail[j]=t[f][i];\n\t\t\tq.push(j);\n\t\t}\n\t}\n}//\u6784\u5efa Trie \u56fe\nvoid dfs(int u) {\n\tl[u]=++pos;\n\tfor(register int i=h[u]; i; i=e[i].next) {\n\t\tint j=e[i].to;\n\t\tdfs(j);\n\t}\n\tr[u]=pos;\n}\nvoid add(int x,int v) {\n\twhile(x<=pos)c[x]+=v,x+=x&(-x);\n}\nll ask(int x) {\n\tll sum=0;\n\twhile(x)sum+=c[x],x-=x&(-x);\n\treturn sum;//\u7b54\u6848\u9700\u8981\u5f00 long long\n}\nvoid clrtag(int w) {\n\tint v;\n\tfor(register int i=lb[w]; i<=rb[w]; i++)v=0,tag[w]?v=dlt[w]:v=a[i]+dlt[w],chtag(i,v);//\u5c06\u8fd9\u4e2a\u533a\u95f4\u7684 dlt \u6e05\u7a7a\uff0c\u4ee5\u4fbf\u7ef4\u62a4\u51fa a_i \u7684\u771f\u5b9e\u503c\n\tdlt[w]=tag[w]=0;\n}\nvoid add(int lx,int ry,int k) {\n\tint x=bel[lx],y=bel[ry],v;\n\tif(x==y) {\n\t\tif(tag[x])clrtag(x);\n\t\tfor(register int i=lx; i<=ry; i++)addtag(i,k);\n\t\treturn;\n\t}\n\tif(tag[x])clrtag(x);\n\tfor(register int i=lx; i<=rb[x]; i++)addtag(i,k);\n\tif(tag[y])clrtag(y);\n\tfor(register int i=lb[y]; i<=ry; i++)addtag(i,k);\n\tfor(register int i=x+1; i<=y-1; i++)dlt[i]+=k;\n}\nvoid change(int lx,int ry,int k) {\n\tint x=bel[lx],y=bel[ry],v;\n\tif(x==y) {\n\t\tif(dlt[x])clrtag(x);\n\t\tfor(register int i=lx; i<=ry; i++)chtag(i,k);\n\t\treturn;\n\t}\n\tif(dlt[x])clrtag(x);\n\tfor(register int i=lx; i<=rb[x]; i++)chtag(i,k);\n\tif(dlt[y])clrtag(y);\n\tfor(register int i=lb[y]; i<=ry; i++)chtag(i,k);\n\tfor(register int i=x+1; i<=y-1; i++)dlt[i]=k,tag[i]=1;\n}\nll getkmp(string s,string t) {\n\ts=' '+s,t=' '+t;\n\tll sum=0;\n\tnxt[1]=0;\n\tint n=s.length()-1,m=t.length()-1;\n\tfor(register int i=2,j=0; i<=n; i++) {\n\t\twhile(j>0&&s[i]!=s[j+1]) {\n\t\t\tj=nxt[j];\n\t\t}\n\t\tif(s[i]==s[j+1])j++;\n\t\tnxt[i]=j;\n\t}\n\tfor(register int i=1,j=0; i<=m; i++) {\n\t\twhile(j>0&&(j==n||t[i]!=s[j+1]))j=nxt[j];\n\t\tif(t[i]==s[j+1])j++;\n\t\tsum+=j==n;\n\t}\n\treturn sum;\n}\nll query(int lx,int ry,const string &st) {\n\tint x=bel[lx],y=bel[ry];\n\tll ans=0;\n\tif(x==y) {\n\t\tfor(register int i=lx; i<=ry; i++)if(s[i].length()<=st.length())ans+=getkmp(s[i],st)*(tag[x]?dlt[x]:a[i]+dlt[x]);\n\t\treturn ans;\n\t}\n\tfor(register int i=lx; i<=rb[x]; i++)if(s[i].length()<=st.length())ans+=getkmp(s[i],st)*(tag[x]?dlt[x]:a[i]+dlt[x]);\n\tfor(register int i=lb[y]; i<=ry; i++)if(s[i].length()<=st.length())ans+=getkmp(s[i],st)*(tag[y]?dlt[y]:a[i]+dlt[y]);//\u6ce8\u610f\u6b64\u5904\u5fc5\u987b\u5148\u5224\u8c01\u7684\u957f\u5ea6\u66f4\u957f\uff0c\u5426\u5219\u590d\u6742\u5ea6\u4f1a\u9000\u5316\n\tfor(register int i=x+1; i<=y-1; i++) {\n\t\tint u=rt[i],len=st.length();\n\t\tfor(register int j=0; j<len; j++) {\n\t\t\tu=t[u][st[j]-'a'];\n\t\t\tans+=dlt[i]*v[u]+(!tag[i])*ask(l[u]);//\u5728\u6ca1\u6709 tag \u7684\u60c5\u51b5\u4e0b\u624d\u5728\u6811\u72b6\u6570\u7ec4\u67e5\u8be2\n\t\t}\n\t}\n\treturn ans;\n}\nint main() {\n\tint op,x,y,z;\n\tstring st;\n\tn=read(),m=read();\n\tsqrtn=int(sqrt(n));\n\tsn=n/sqrtn+(n%sqrtn!=0);\n\tfor(register int i=1; i<=sn; i++)lb[i]=(i-1)*sqrtn+1,rb[i]=min(i*sqrtn,n),rt[i]=++tot;\n\tfor(register int i=1; i<=n; i++)bel[i]=(i-1)/sqrtn+1;\n\tfor(register int i=1; i<=n; i++)s[i]=readstr(),a[i]=read(),insert(s[i],rt[bel[i]],i);\n\tfor(register int i=1; i<=sn; i++)getfail(rt[i]);\n\tfor(register int i=1; i<=tot; i++)addedge(fail[i],i);\n\tfor(register int i=1; i<=sn; i++)dfs(rt[i]);\n\tfor(register int i=1; i<=n; i++)add(l[bj[i]],a[i]),add(r[bj[i]]+1,-a[i]);//\u521d\u59cb\u9700\u8981\u63d2\u5165a_i\n\twhile(m--) {\n\t\top=read(),x=read(),y=read();\n\t\tswitch(op) {\n\t\t\tcase 1: {\n\t\t\t\tz=read(),add(x,y,z);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 2: {\n\t\t\t\tz=read(),change(x,y,z);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 3: {\n\t\t\t\tst=readstr(),write(query(x,y,st)),putchar('\\n');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1617669766,
        "uid": 104324,
        "name": "abruce",
        "ccfLevel": 7,
        "title": "\u9898\u89e3--\u98ce\u96e8"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u5b9a $n$ \u4e2a\u5b57\u7b26\u4e32 $s_i$\uff0c\u6bcf\u4e2a\u5b57\u7b26\u4e32\u6709\u4e00\u4e2a\u6743\u503c $w_i$\u3002\n\n\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570 $f(s,t)$ \u8868\u793a $t$ \u5728 $s$ \u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n$q$ \u6b21\u64cd\u4f5c\uff0c\u652f\u6301\u5c06 $w_i$ \u533a\u95f4\u52a0/\u533a\u95f4\u8986\u76d6\uff0c\u8be2\u95ee\u4e00\u4e2a\u5b57\u7b26\u4e32 $T$ \u548c $l,r$\uff0c\u6c42 $\\sum_{i=l}^{r}f(T,s_i)w_i$\u3002\n\n## \u9898\u89e3\n\n\u4f5c\u8005\u5e76\u6ca1\u6709\u771f\u6b63\u5b9e\u73b0\u8fc7\u8fd9\u4e2a\u7b97\u6cd5\uff0c\u53ef\u80fd\u7b97\u6cd5\u5b58\u5728\u4e00\u5b9a\u95ee\u9898\uff0c\u5982\u6709\u95ee\u9898\u8bf7\u6307\u51fa\uff08\u8f7b\u55b7\uff09\u3002\n\n\u9996\u5148\u89c2\u5bdf\u5230\u533a\u95f4\u63a8\u5e73\u5e76\u4e0d\u662f\u5f88\u597d\u7ef4\u62a4\uff0c\u8003\u8651\u7528\u4e00\u4e2a\u73c2\u6735\u8389\u6811\u6765\u5904\u7406\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6bcf\u6b21\u5c06\u4e00\u6bb5\u533a\u95f4 $(l,r,v)$ \u63a8\u5e73\u6210\u4e3a $v'$ \u53ef\u4ee5\u8f6c\u5316\u6210\u5c06 $[l,r]$ \u52a0\u4e0a $v'-v$\u3002\u53ef\u4ee5\u8bc1\u660e\u8fd9\u6837\u8f6c\u5316\u540e\u64cd\u4f5c\u603b\u6570\u4ecd\u7136\u662f $O(n)$ \u7684\uff0c\u56e0\u4e3a\u4efb\u610f\u4e00\u6b21\u64cd\u4f5c\u6700\u591a\u4f7f\u603b\u8f6c\u5316\u64cd\u4f5c\u589e\u52a0\u4e09\u3002\n\n\u7531\u4e8e\u8fd9\u91cc\u6709\u533a\u95f4\u52a0\u64cd\u4f5c\u4e14\u6ca1\u6709\u4fdd\u8bc1\u6570\u636e\u968f\u673a\uff0c\u4e0d\u80fd\u76f4\u63a5\u7528 set\uff0c\u53ef\u80fd\u8981\u624b\u5199\u4e00\u68f5\u5e73\u8861\u6811\u6765\u652f\u6301\u533a\u95f4\u52a0\u7684\u64cd\u4f5c\u3002~~\u4e0d\u8fc7\u636e\u8bf4\u6570\u636e\u662f\u968f\u7684~~\u3002\n\n\u8fd9\u90e8\u5206\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5efa\u51fa AC \u81ea\u52a8\u673a\uff0c\u8bb0\u5f55\u6bcf\u6b21\u8be2\u95ee\u6bcf\u6b21\u5339\u914d\u5230\u7684\u6240\u6709\u70b9\uff08\u5339\u914d\u70b9\u4e2a\u6570\u662f $|L_i|$ \u7684\uff09\u3002\u663e\u7136\u67e5\u8be2 $[l,r]$ \u53ef\u4ee5\u5dee\u5206\u4e3a\u67e5\u8be2 $[1,r]$ \u7684\u503c\u51cf\u53bb $[1,l-1]$\u3002\n\n\u5982\u679c\u6211\u4eec\u7ed9\u6bcf\u4e2a\u4e32\u7684\u7ec8\u6b62\u8282\u70b9\u7f16\u4e00\u4e2a\u53f7\uff0c\u90a3\u4e48\u4e00\u6b21\u8be2\u95ee\u7b49\u4e8e\u8be2\u95ee\u4e00\u4e2a\u70b9\u5230\u6839\u8def\u5f84\u4e0a\u7f16\u53f7 $\\leq k_i$ \u7684\u70b9\u7684\u6743\u503c\u548c\u3002\u5f53\u7136\u4e32\u6709\u53ef\u80fd\u76f8\u7b49\uff0c\u8fd9\u4e2a\u7279\u6b8a\u5904\u7406\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u8fd9\u6837\u9898\u610f\u8f6c\u5316\u4e3a\uff1a\u7ed9\u4f60\u4e00\u68f5\u6811\uff0c\u70b9\u6709\u7f16\u53f7\uff0c\u652f\u6301\u5c06 $[l_i,r_i]$ \u4e2d\u7684\u70b9 $+v_i$\uff0c\u67e5\u8be2\u4e00\u4e2a\u70b9\u5230\u6839\u8def\u5f84\u4e0a\u6240\u6709\u7f16\u53f7 $\\leq k_i$ \u7684\u6743\u503c\u548c\u3002\n\n\u611f\u89c9\u4e0d\u662f\u5f88\u80fd $n\\text{ polylog } n$ \u7684\u6837\u5b50\uff0c\u8003\u8651 [APIO \u6865\u6881](https://www.luogu.com.cn/problem/P5443) \u7684\u5957\u8def\uff1a\u5c06\u8be2\u95ee\u4fee\u6539\u79bb\u7ebf\uff0c\u6bcf $B$ \u4e2a\u5206\u4e3a\u4e00\u5757\u3002\n\n\u8003\u8651\u5bf9\u4e8e\u5757\u5185\uff0c\u66b4\u529b\u5904\u7406\u6bcf\u4e2a\u4fee\u6539\u5bf9\u8be2\u95ee\u7684\u5f71\u54cd\u3002\u53ef\u4ee5\u7528\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u7edf\u8ba1\u51fa\u4e00\u4e2a\u70b9\u5230\u6839\u8def\u5f84\u4e0a\u5c0f\u4e8e\u67d0\u4e2a\u7f16\u53f7\u7684\u70b9\u7684\u4e2a\u6570\uff0c\u90a3\u4e48\u4e00\u6b21\u4fee\u6539\u5bf9\u4e00\u4e2a\u8be2\u95ee\u7684\u5f71\u54cd\u53ef\u4ee5\u5728 $O(\\log n)$ \u65f6\u95f4\u5904\u7406\uff0c\u590d\u6742\u5ea6 $O(nB\\log n)$\u3002\n\n\u5176\u5b9e\u53ef\u4ee5\u5927\u529b\u5c06\u6240\u6709\u64cd\u4f5c\u79bb\u7ebf\uff0c\u6309 dfs \u5e8f\u5904\u7406\u6240\u6709\u67e5\u8be2\uff0c\u90a3\u4e48\u5b9e\u9645\u4e0a\u6709 $O(nB)$ \u6b21\u67e5\u8be2\u64cd\u4f5c\u4f46\u662f\u53ea\u6709 $O(n)$ \u6b21\u4fee\u6539\u64cd\u4f5c\uff0c\u76f4\u63a5\u503c\u57df\u5206\u5757\u5373\u53ef\u505a\u5230 $O(nB+n\\sqrt n)$\u3002\n\n\u5bf9\u4e8e\u5757\u95f4\uff0c\u6211\u4eec\u8bb0\u5f55\u4e00\u4e2a\u5dee\u5206\u6570\u7ec4\uff0c\u6bcf\u8fc7\u4e00\u4e2a\u5757\u5c31\u66b4\u529b\u4ece\u4e0a\u5f80\u4e0b\u66f4\u65b0\u4e00\u904d\u6240\u6709\u70b9\u7684\u503c\uff0c\u8fd9\u90e8\u5206\u590d\u6742\u5ea6 $O(\\frac{n^2}{B})$\u3002\n\n\u53d6 $B=n$\uff0c\u53ef\u5f97\u590d\u6742\u5ea6\u4e3a $O(n\\sqrt n)$\u3002\n\n\u540e\u9762\u74f6\u9888\u90e8\u5206\u7406\u8bba\u5e38\u6570\u6781\u5c0f\uff0c\u4e14\u4ee3\u7801\u91cf\u4e0d\u5927\u3002\u4ee3\u7801\u91cf\u4e3b\u8981\u5728\u4e8e\u7b2c\u4e00\u90e8\u5206\u3002",
        "postTime": 1619955280,
        "uid": 52902,
        "name": "Flying2018",
        "ccfLevel": 0,
        "title": "\u300cRdOI R2\u300d\u98ce\u96e8(rain) \u7684\u53e6\u4e00\u4e2a\u89e3\u6cd5"
    },
    {
        "content": "\u6ca1\u5565\u542b\u91d1\u91cf\u7684\u9898\uff0c\u4f46\u662f\u4e3a\u5565\u9898\u89e3\u533a\u6ca1\u6709\u6b63\u5e38\u505a\u6cd5\u3002\n\n\u4ee5\u4e0b\u5047\u5b9a $n$ \u4e0e $m$ \u540c\u9636\uff0c$L=\\sum|s|$ \u4e0e $\\sum|S|$ \u540c\u9636\u3002\n\n\u5efa\u51fa AC \u81ea\u52a8\u673a\uff0c\u5feb\u8fdb\u5230\u8f6c\u5316\u4e3a\u4ee5\u4e0b\u95ee\u9898\uff1a\n> \u7ed9\u5b9a\u4e00\u4e2a\u957f\u4e3a $n$ \u7684\u5e8f\u5217 $a$\uff0c\u4e00\u68f5 $O(L)$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u4e00\u4e2a\u957f\u4e3a $n$ \u7684\u8282\u70b9\u5e8f\u5217 $c$\uff0c\u652f\u6301 $O(n+L)$ \u6b21\u4ee5\u4e0b\u4e09\u79cd\u64cd\u4f5c\uff1a\n> - \u5bf9 $a$ \u533a\u95f4\u52a0\u3002\n> - \u5bf9 $a$ \u533a\u95f4\u8d4b\u503c\u3002\n> - \u7ed9\u5b9a\u533a\u95f4 $[l,r]$ \u548c\u8282\u70b9 $u$\uff0c\u8bb0 $P(u,v)$ \u4e3a $u$ \u662f $v$ \u7684\u7956\u5148\uff0c\u6c42 $\\sum\\limits_{l\\le i\\le r,P(c_i,u)}a_i$\u3002\n\n\u8003\u8651\u5bf9\u5e8f\u5217\u5206\u5757\uff0c\u8bb0\u5757\u957f\u4e3a $B$\u3002\u4ee5\u4e0b\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u5757\uff0c\u6211\u4eec\u60f3\u8981\u4ee5 $O(1)$ \u7684\u65f6\u95f4\u5904\u7406\u6bcf\u4e2a\u8986\u76d6\u8fd9\u4e2a\u5757\u7684\u64cd\u4f5c\uff0c\u4ee5 $O(B)$ \u7684\u65f6\u95f4\u5904\u7406\u6bcf\u4e2a\u4e0e\u8fd9\u4e2a\u5757\u76f8\u4ea4\u4f46\u4e0d\u8986\u76d6\u8fd9\u4e2a\u5757\u7684\u64cd\u4f5c\u3002\n\n\u79f0\u4f7f\u5f97\u5757\u5185\u5b58\u5728\u67d0\u4e2a $c_i=u$ \u7684\u8282\u70b9 $u$ \u4e3a\u5173\u952e\u70b9\uff0c\u90a3\u4e48\u53ea\u6709 $O(B)$ \u4e2a\u5173\u952e\u70b9\u3002\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee\u7684\u8282\u70b9\uff0c\u6211\u4eec\u53ea\u5173\u5fc3\u5b83\u7684\u7956\u5148\u4e2d\u79bb\u5b83\u6700\u8fd1\u7684\u5173\u952e\u70b9\u3002\n\n\u5bf9\u4e8e\u8986\u76d6\u8fd9\u4e2a\u5757\u7684\u4fee\u6539\uff0c\u6211\u4eec\u60f3\u8981\u76f4\u63a5\u6253\u4e0a\u6574\u4f53\u8d4b\u503c\u548c\u6574\u4f53\u52a0\u7684\u6807\u8bb0\u3002\u8003\u8651\u8fd9\u4e2a\u6807\u8bb0\u5bf9\u67d0\u6b21\u5bf9\u8282\u70b9 $u$ \u7684\u8be2\u95ee\u7684\u5f71\u54cd\uff0c\u8fd9\u53ea\u53d6\u51b3\u4e8e\u6709\u591a\u5c11\u4e2a $i$ \u4f7f\u5f97 $c_i$ \u662f $u$ \u7684\u7956\u5148\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u5728\u6700\u5f00\u59cb\u4ee5 $O(L)$ \u65f6\u95f4\u5bf9\u6bcf\u4e2a\u8282\u70b9\u9884\u5904\u7406\u51fa\u5b83\u7684\u7956\u5148\u4e2d\u79bb\u5b83\u6700\u8fd1\u7684\u5173\u952e\u70b9\u3002\u518d\u4ee5 $O(B)$ \u7684\u65f6\u95f4\u5bf9\u6bcf\u4e2a\u5173\u952e\u70b9 $u$ \u9884\u5904\u7406\u51fa\uff0c\u6709\u591a\u5c11\u4e2a $i$ \u4f7f\u5f97 $c_i$ \u662f $u$ \u7684\u7956\u5148\uff0c\u4ee5\u53ca\u4e00\u6b21\u5bf9\u6574\u4e2a\u5757\u4ee5\u53ca $u$ \u7684\u8be2\u95ee\u7684\u7b54\u6848\u3002\n\n\u5bf9\u4e8e\u8986\u76d6\u6574\u4e2a\u5757\u7684\u4fee\u6539\uff0c\u76f4\u63a5\u6253\u6807\u8bb0\uff0c\u5426\u5219\u4ee5 $O(B)$ \u7684\u65f6\u95f4\u91cd\u65b0\u8ba1\u7b97\u6bcf\u4e2a $a_i$ \u548c\u4e0a\u8ff0\u4fe1\u606f\u3002\u5bf9\u4e8e\u8986\u76d6\u6574\u4e2a\u5757\u7684\u8be2\u95ee\uff0c\u53ef\u4ee5\u76f4\u63a5 $O(1)$ \u8ba1\u7b97\u8fd9\u4e2a\u5757\u7684\u8d21\u732e\uff0c\u5426\u5219\u4e5f\u53ef\u4ee5\u4ee5 $O(B)$ \u7684\u65f6\u95f4\u8ba1\u7b97\u8d21\u732e\u3002\u5177\u4f53\u5b9e\u73b0\u7ec6\u8282\u4e0d\u8d58\u8ff0\n\n\u53d6 $B=O(\\sqrt n)$\uff0c\u53ef\u4ee5\u5f97\u5230 $O(L|\\Sigma|+(n+L)\\sqrt n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u4f46\u662f\u7531\u4e8e\u6211\u4eec\u8981\u5bf9\u6bcf\u4e2a\u5757\u5b58\u50a8\u6bcf\u4e2a\u70b9\u4e0a\u9762\u6700\u8fd1\u7684\u5173\u952e\u70b9\uff0c\u7a7a\u95f4\u662f\u6839\u53f7\u7684\uff0c\u800c\u8fd9\u9898\u53ea\u5f00\u4e86 64M\u3002\u6211\u6ca1\u6709\u60f3\u5230\u4ec0\u4e48\u597d\u529e\u6cd5\uff0c\u4f46\u662f\u81f3\u5c11\u53ef\u4ee5\u79bb\u7ebf\u9010\u5757\u5904\u7406\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n+L|\\Sigma|)$\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nusing ll=long long;\ninline ll read(){\n\tll x=0;\n\tbool f=0;\n\tchar c=getchar();\n\twhile(!isdigit(c)){\n\t\tif(c=='-') f=1;\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c)){\n\t\tx=x*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn f?-x:x;\n}\nconst int maxn=3e4+5,maxl=2e5+5;\nint n,m,c[maxn],a[maxn];\nchar s[maxl];\nint opt[maxn],l[maxn],r[maxn];\nvector<int> k[maxn];\nint sz=1,nxt[maxl][3],fa[maxl];\nvector<int> g[maxl];\nint insert(char* s){\n\tint l=strlen(s+1),u=1;\n\tfor(int i=1;i<=l;i++){\n\t\tint c=s[i]-'a';\n\t\tif(!nxt[u][c]) nxt[u][c]=++sz;\n\t\tu=nxt[u][c];\n\t}\n\treturn u;\n}\nvoid build(){\n\tqueue<int> q;\n\tfor(int i=0;i<3;i++) if(nxt[1][i]){\n\t\tfa[nxt[1][i]]=1;\n\t\tq.push(nxt[1][i]);\n\t}\n\twhile(q.size()){\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor(int i=0;i<3;i++)\n\t\t\tif(nxt[u][i]){\n\t\t\t\tfa[nxt[u][i]]=nxt[fa[u]][i];\n\t\t\t\tq.push(nxt[u][i]);\n\t\t\t}\n\t\t\telse nxt[u][i]=nxt[fa[u]][i];\n\t}\n\tfor(int i=2;i<=sz;i++) g[fa[i]].push_back(i);\n}\nint S,B,L,R,ass,add,pre[maxl];\nvector<int> vec;\nll sum[maxl];\nint d[maxl];\nvoid dfs(int u){\n\tif(pre[u]){\n\t\tsum[u]+=sum[pre[fa[u]]];\n\t\td[u]+=d[pre[fa[u]]];\n\t\tvec.push_back(u);\n\t}\n\telse pre[u]=pre[fa[u]];\n\tfor(int v:g[u]) dfs(v);\n}\nvoid modify(int l,int r,bool tp,int k){\n\tif(ass>=0) for(int i=L;i<=R;i++) a[i]=ass;\n\tfor(int i=L;i<=R;i++) a[i]+=add;\n\tass=-1;\n\tadd=0;\n\tfor(int i=l;i<=r;i++) a[i]=tp?k:a[i]+k;\n\tfor(int u:vec) sum[u]=0;\n\tfor(int i=L;i<=R;i++) sum[c[i]]+=a[i];\n\tfor(int u:vec) sum[u]+=sum[pre[fa[u]]];\n}\nll s2[maxl];\nll query(int l,int r,int u){\n\tfor(int u:vec) s2[u]=0;\n\tfor(int i=l;i<=r;i++)\n\t\ts2[c[i]]+=(ass>=0?ass:a[i])+add;\n\tll s=0;\n\twhile(u){\n\t\ts+=s2[u];\n\t\tu=pre[fa[u]];\n\t}\n\treturn s;\n}\nll ans[maxn];\nint main(){\n#ifdef LOCAL\n\tfreopen(\"in.txt\",\"r\",stdin);\n\tfreopen(\"out.txt\",\"w\",stdout);\n#endif\n\tn=read();\n\tm=read();\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%s\",s+1);\n\t\tc[i]=insert(s);\n\t\ta[i]=read();\n\t}\n\tbuild();\n\tfor(int i=1;i<=m;i++){\n\t\topt[i]=read();\n\t\tl[i]=read();\n\t\tr[i]=read();\n\t\tif(opt[i]!=3) k[i].push_back(read());\n\t\telse{\n\t\t\tscanf(\"%s\",s+1);\n\t\t\tint l=strlen(s+1),u=1;\n\t\t\tfor(int j=1;j<=l;j++)\n\t\t\t\tk[i].push_back(u=nxt[u][s[j]-'a']);\n\t\t}\n\t}\n\tS=sqrt(n);\n\tB=(n-1)/S+1;\n\tfor(int T=1;T<=B;T++){\n\t\tL=S*(T-1)+1;\n\t\tR=min(S*T,n);\n\t\tass=-1;\n\t\tadd=0;\n\t\tmemset(pre,0,sizeof(pre));\n\t\tvec.clear();\n\t\tmemset(sum,0,sizeof(sum));\n\t\tmemset(d,0,sizeof(d));\n\t\tfor(int i=L;i<=R;i++){\n\t\t\tpre[c[i]]=c[i];\n\t\t\tsum[c[i]]+=a[i];\n\t\t\td[c[i]]++;\n\t\t}\n\t\tdfs(1);\n\t\tfor(int i=1;i<=m;i++)\n\t\t\tif(opt[i]!=3){\n\t\t\t\tif(l[i]>R||r[i]<L) continue;\n\t\t\t\tif(l[i]<=L&&r[i]>=R){\n\t\t\t\t\tif(opt[i]==1) add+=k[i][0];\n\t\t\t\t\telse{\n\t\t\t\t\t\tass=k[i][0];\n\t\t\t\t\t\tadd=0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse modify(max(l[i],L),min(r[i],R),opt[i]==2,k[i][0]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(l[i]>R||r[i]<L) continue;\n\t\t\t\tif(l[i]<=L&&r[i]>=R) for(int u:k[i]){\n\t\t\t\t\tint x=pre[u];\n\t\t\t\t\tans[i]+=(ass>=0?1ll*ass*d[x]:sum[x])+1ll*add*d[x];\n\t\t\t\t}\n\t\t\t\telse for(int u:k[i])\n\t\t\t\t\tans[i]+=query(max(l[i],L),min(r[i],R),pre[u]);\n\t\t\t}\n\t}\n\tfor(int i=1;i<=m;i++) if(opt[i]==3) printf(\"%lld\\n\",ans[i]);\n#ifdef LOCAL\n\tfprintf(stderr,\"%f\\n\",1.0*clock()/CLOCKS_PER_SEC);\n#endif\n\treturn 0;\n}\n```\n\u7ffb\u4e86\u4e00\u4e0b\u63d0\u4ea4\u8bb0\u5f55\uff0c\u597d\u50cf\u8fd8\u662f\u6709\u8001\u54e5\u5199\u6bd4\u8f83\u9633\u95f4\u7684\u4e0d\u5e26 log \u505a\u6cd5\u7684\u3002",
        "postTime": 1663585052,
        "uid": 174045,
        "name": "FZzzz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7582 \u300cRdOI R2\u300d\u98ce\u96e8(rain)"
    },
    {
        "content": "\u540a \u6253 \u6807 \u7b97\n\n\u5343\u4e07\u4e0d\u8981\u50cf\u6211\u8fd9\u6837\u7b2c\u4e00\u6b21\u5206\u5757\u4fee\u6539\u5b8c\u4e4b\u540e\u5fd8\u8bb0\u505a\u524d\u7f00\u548c\u8c03\u4e86\u4e00\u4e2a\u665a\u81ea\u4e60~~\u4ed6\u8bf4\u98ce\u96e8\u4e2d\u8fd9\u70b9\u75db\u7b97\u4ec0\u4e48\uff0c\u64e6\u5e72\u6cea\u4e0d\u8981\u6015\uff0c\u81f3\u5c11\u6211\u4eec\u8fd8\u6709\u68a6~~\uff08\n\n\u9996\u5148\u5f04\u660e\u767d\u4e00\u4ef6\u4e8b\uff1a\u533a\u95f4 ACAM \u53ef\u4ee5\u770b\u505a\u662f\u6240\u6709\u4e32\u7684 ACAM \u53ea\u4fdd\u7559\u533a\u95f4\u4e32\u5bf9\u8282\u70b9\u8d21\u732e\u7684\u4fe1\u606f\uff0c\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u6240\u6709\u4e32\u7684 ACAM \u7684\u8f6c\u79fb\u8fb9\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ACAM \u5957\u7ebf\u6bb5\u6811\uff0c\u6bcf\u9897\u7ebf\u6bb5\u6811\u7ef4\u62a4\u8fd9\u4e2a\u8282\u70b9\u4f1a\u53d7\u5230\u533a\u95f4\u54ea\u4e9b\u4f4d\u7f6e\u7684\u4e32\u7684\u8d21\u732e\u3002\n\n\u4f46\u662f\u8fd9\u8fd9\u6837\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u4fee\u6539\u64cd\u4f5c\u4e0d\u592a\u5bb9\u6613\u5b9e\u73b0\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8fd8\u9700\u8981\u518d\u5957\u4e00\u5c42\u6570\u636e\u7ed3\u6784\u6765\u89e3\u51b3\u8fd9\u4e2a\u4fee\u6539\u3002\u533a\u95f4\u8be2\u95ee\u4e00\u822c\u8003\u8651\u7ebf\u6bb5\u6811\u548c\u5206\u5757\u3002\u7ebf\u6bb5\u6811\u7684\u8bdd\u4fee\u6539\u64cd\u4f5c\u4f1a\u6d89\u53ca\u8fc7\u591a\u7684\u8282\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u9009\u62e9\u5206\u5757\u3002\n\n\u8bbe\u5757\u957f\u4e3a $B$\u3002\u5bf9\u6bcf\u4e2a\u5757\u7684 ACAM \u7ef4\u62a4\u4e24\u79cd\u7c7b\u578b\u7684\u503c\uff1a$V[u]$ \u8868\u793a\u4e0d\u8ba1\u7b97\u6574\u4f53\u52a0 $tag$ \u7684\u6743\u503c\u4e4b\u548c\uff0c$c[u]$ \u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u5305\u542b\u7684\u4e32\u7684\u4e2a\u6570\u3002\n\n\u5bf9\u4e8e\u6574\u5757\uff0c\u533a\u95f4\u52a0\u64cd\u4f5c\u5c31\u76f4\u63a5\u52a0\uff0c\u5982\u679c\u662f\u8d4b\u503c\u90a3\u5c31\u6e05\u7a7a $V$ \u7136\u540e\u4ee4 $tag$ \u7b49\u4e8e\u8d4b\u7684\u503c\u3002\n\n\u6211\u4eec\u662f\u5f88\u5bb9\u6613\u901a\u8fc7\u8fd9\u4e24\u4e2a\u6570\u7ec4\u6765\u8ba1\u7b97\u4e00\u4e2a\u8282\u70b9\u7684\u6743\u503c\u7684\u3002\u5bf9\u4e8e\u6574\u5757\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u505a\u5230 $O(\\sum|S|\\frac{n}{B})$ \u4e2a\u8be2\u95ee\u64cd\u4f5c\u3002\n\n\u6563\u5757\u7684\u4fee\u6539\u64cd\u4f5c\u9700\u8981\u66b4\u529b\u8fdb\u884c\uff0c\u6d89\u53ca\u5230\u7684 ACAM \u8282\u70b9\u4e2a\u6570\u662f $O(\\sum|s|)$ \u7ea7\u522b\u7684\u3002\u4e0d\u8fc7\u53ef\u4ee5\u77e5\u9053\u9700\u8981\u4fee\u6539\u7684 ACAM \u8282\u70b9\u662f $O(B)$ \u4e2a\u3002\u6240\u4ee5\u4fee\u6539\u64cd\u4f5c\u662f $O(mB)$ \u4e2a\u3002\n\n\u4f46\u662f\u8be2\u95ee\u5c31\u6bd4\u8f83\u9ebb\u70e6\u4e86\u3002\u524d\u9762\u63d0\u5230\u53ef\u4ee5\u5c06\u533a\u95f4 ACAM \u770b\u505a\u662f\u6240\u6709\u4e32\u7684 ACAM \u53ea\u4fdd\u7559\u533a\u95f4\u4e32\u5bf9\u8282\u70b9\u8d21\u732e\u7684\u4fe1\u606f\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u5757\u7684 ACAM \u90fd\u5957\u4e0a\u4e00\u9897\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4\u54ea\u4e9b\u4e32\u8d21\u732e\u8fd9\u4e2a\u8282\u70b9\u3002\n\n\u4f46\u662f\u67e5\u8be2\u7684\u65f6\u5019\u53ea\u80fd\u66b4\u529b\u628a\u8fd9\u4e2a\u96c6\u5408\u5f04\u51fa\u6765\u4e00\u4e2a\u4e00\u4e2a\u52a0\u3002\u4e0d\u8fc7\u7531\u4e8e\u52a0\u7684\u662f\u5b57\u7b26\u4e32\u7684\u4fe1\u606f\u6240\u4ee5\u662f $O(1)$ \u7ef4\u62a4\u7684\u3002\n\n\u67e5\u8be2\u6563\u5757\u7684\u590d\u6742\u5ea6\u4e3a $O(\\sum|S|B)$\u3002\n\n\u6ce8\u610f\u5230\u524d\u9762\u7684\u8be2\u95ee\u6b21\u6570\u8fc7\u591a\uff0c\u7ebf\u6bb5\u6811\u8fd9\u79cd\u4e1c\u897f\u662f\u4e0d\u80fd\u80dc\u4efb\u7684\uff0c\u8003\u8651\u5bf9 dfn \u5e8f\u5206\u5757\u3002\n\n\u6bcf\u6b21\u4fee\u6539\u76f8\u5f53\u4e8e\u5b50\u6811\u52a0\uff0c\u4e5f\u5c31\u662f\u533a\u95f4\u52a0\u3002\u6211\u4eec\u5c06 fail \u6811\u7684 dfn \u5e8f\u5206\u6210\u5757\u957f\u4e3a $T$ \u7684\u5757\u3002\u6bcf\u6b21\u4fee\u6539\u66b4\u529b\u52a0\u540e\u7f00\uff0c\u7136\u540e $O(B)$ \u6b21\u64cd\u4f5c\u7ed3\u675f\u540e\u8fdb\u884c\u4e00\u4e2a\u5757\u7684\u524d\u7f00\u548c\u3002\n\n\u90a3\u4e48\u5c31\u662f $O(\\sum|S|\\frac{n}{B}+mBT+\\frac{\\sum|S|m}{T})$\uff0c$T$ \u53d6 $\\sqrt{\\frac{\\sum|S|}{B}}$ \u53ef\u4ee5\u5f97\u5230 $O(\\sum|S|\\frac{n}{B}+m\\sqrt{\\frac{\\sum|S|}{B}})$ \u7684\u590d\u6742\u5ea6\u3002\n\n$B$ \u53d6 $\\sqrt{n}$ \u5373\u53ef\u5f97\u5230 $O(\\sum|S|\\sqrt{n}+\\frac{m}{\\sqrt[4]{n}}\\sqrt{\\sum|S|})$ \u7684\u590d\u6742\u5ea6\u3002\n\n\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u8bdd\uff0c\u5e8f\u5217\u957f\u5ea6\u5176\u5b9e\u53ea\u6709 $\\lfloor\\sqrt{30000}\\rfloor=173$\uff0c\u8fd9\u73a9\u610f\u513f\u8fd8\u4e0d\u5982\u53bb\u7528 bitset\u3002\u7a7a\u95f4\u51e0\u4e4e\u662f\u7ebf\u6027\u7684\uff0c\u4e0d\u4f1a\u88ab\u5361\u3002\n\n\u8865\u5145\uff1abitset \u90e8\u5206\u7684\u65f6\u95f4\u548c\u7a7a\u95f4\u90fd\u662f $O(\\sum|S|\\frac{\\sqrt{n}}{w})$\u3002\n```cpp\n#include<cstring>\n#include<cstdio>\n#include<bitset>\n#include<cmath>\ntypedef long long ll;\nconst int M=2e5+5;\nint n,m,B,P,tot,a[M];char S[M],T[M],*s[M],*t[M];int lens[M],lent[M];\nint sums,sumt;int L[M],R[M],pos[M];int opt[M],l[M],r[M],k[M];\nnamespace Solve{\n\tint dfc,V[M],c[M],l[M],r[M],pos[M],fail[M],trans[M][3];std::bitset<180>bit[M];\n\tint _s[M<<1],_tim[M<<1],_S[M<<1];int _pos[M<<1],_L[M<<1],_R[M<<1];\n\tint*ns=_s,*ntim=_tim,*nS=_S,*npos=_pos,*nL=_L,*nR=_R;\n\tint cnt,h[M];\n\tstruct Edge{\n\t\tint v,nx;\n\t}e[M];\n\tinline void Add(const int&u,const int&v){\n\t\te[++cnt]=(Edge){v,h[u]};h[u]=cnt;\n\t}\n\tinline int Insert(int u,char*s,const int&v,const int&n){\n\t\tfor(int i=0;i<n;++i){\n\t\t\tconst int&c=s[i]-97;\n\t\t\tif(!trans[u][c])trans[u][c]=++tot;u=trans[u][c];\n\t\t}\n\t\tV[u]+=v;++c[u];return u;\n\t}\n\tstruct Block{\n\t\tint m,rt,tag,T,a[190],tim[190],end[190];\n\t\tstruct BLOCK{\n\t\t\tint n,B,T,*s,*tim,*S;int*pos,*L,*R;bool typ;\n\t\t\tinline void init(const int&N){\n\t\t\t\ts=ns;tim=ntim;S=nS;pos=npos;L=nL;R=nR;n=N;\n\t\t\t\tns+=n+5;ntim+=n+5;nS+=n+5;npos+=n+5;nL+=n+5;nR+=n+5;\n\t\t\t\tfor(int i=1;i<=n;++i){\n\t\t\t\t\tpos[i]=(i-1)/B+1;\n\t\t\t\t\tL[i]=(pos[i]-1)*B+1;R[i]=pos[i]*B;if(R[i]>n)R[i]=n;\n\t\t\t\t}\n\t\t\t}\n\t\t\tinline void Add(int x,const int&V){\n\t\t\t\tfor(int i=x;i<=R[x];++i){\n\t\t\t\t\tif(tim[i]^T)tim[i]=T,s[i]=0;s[i]+=V;\n\t\t\t\t}\n\t\t\t}\n\t\t\tinline void update(){\n\t\t\t\tfor(int i=1;i<=pos[n];++i){\n\t\t\t\t\tif(tim[R[(i-1)*B+1]]^T)tim[R[(i-1)*B+1]]=T,s[R[(i-1)*B+1]]=0;S[i]=S[i-1]+s[R[(i-1)*B+1]];\n\t\t\t\t}\n\t\t\t\ttyp=false;\n\t\t\t}\n\t\t\tinline int Qry(const int&x){\n\t\t\t\tif(tim[x]^T)tim[x]=T,s[x]=0;return typ?0:S[pos[x]-1]+s[x];\n\t\t\t}\n\t\t\tinline void Clear(){\n\t\t\t\t++T;\n\t\t\t}\n\t\t}block;\n\t\tinline void Build(const int&L,const int&R){\n\t\t\tfor(int i=L;i<=R;++i)a[i-L+1]=::a[i],bit[end[i-L+1]=Insert(rt,::s[i],a[i-L+1],lens[i])][i-L+1]=1;\n\t\t}\n\t\tinline void init(const int&n){\n\t\t\tblock.B=ceil(sqrt(sumt/B));block.init(m);\n\t\t\tfor(int i=1;i<=n;++i)block.Add(l[end[i]],a[i]),block.Add(r[end[i]]+1,-a[i]);block.update();\n\t\t}\n\t\tinline void Add(const int&V){\n\t\t\ttag+=V;\n\t\t}\n\t\tinline void Cover(const int&V){\n\t\t\tblock.Clear();++T;tag=V;block.typ=true;\n\t\t}\n\t\tinline void Add(const int&V,const int&L,const int&R){\n\t\t\tfor(int i=L;i<=R;++i){\n\t\t\t\tif(tim[i]^T)tim[i]=T,a[i]=0;\n\t\t\t\tblock.Add(l[end[i]],V);block.Add(r[end[i]]+1,-V);a[i]+=V;\n\t\t\t}\n\t\t\tblock.update();\n\t\t}\n\t\tinline void Cover(const int&V,const int&L,const int&R){\n\t\t\tfor(int i=L;i<=R;++i){\n\t\t\t\tif(tim[i]^T)tim[i]=T,a[i]=0;\n\t\t\t\tblock.Add(l[end[i]],V-a[i]-tag);block.Add(r[end[i]]+1,-(V-a[i]-tag));a[i]=V-tag;\n\t\t\t}\n\t\t\tblock.update();\n\t\t}\n\t\tinline ll Qry(char*s,const int&n){\n\t\t\tint u(rt);ll ans(0);\n\t\t\tfor(int i=0;i<n;++i){\n\t\t\t\tu=trans[u][s[i]-97];\n\t\t\t\tans+=block.Qry(l[u])+1ll*tag*c[u];\n\t\t\t}\n\t\t\treturn ans;\n\t\t}\n\t\tinline ll Qry(char*s,const int&n,const int&L,const int&R){\n\t\t\tint u(rt);ll ans(0);\n\t\t\tfor(int i=0;i<n;++i){\n\t\t\t\tu=trans[u][s[i]-97];\n\t\t\t\tfor(int i=bit[u]._Find_next(L-1);i<=R;i=bit[u]._Find_next(i)){\n\t\t\t\t\tif(tim[i]^T)tim[i]=T,a[i]=0;ans+=a[i]+tag;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ans;\n\t\t}\n\t}block[190];\n\tinline void DFS(const int&u){\n\t\tif(fail[u]){\n\t\t\tV[u]+=V[fail[u]];c[u]+=c[fail[u]];bit[u]|=bit[fail[u]];\n\t\t\tpos[u]=pos[fail[u]];\n\t\t}\n\t\tl[u]=++dfc;++block[pos[u]].m;for(int E=h[u];E;E=e[E].nx)DFS(e[E].v);r[u]=dfc;\n\t}\n\tinline void Build(){\n\t\tstatic int L,R,q[M];L=1;\n\t\tfor(int u=1;u<=P;++u){\n\t\t\tfor(int c=0;c<3;++c){\n\t\t\t\tif(trans[u][c])q[++R]=trans[u][c],fail[trans[u][c]]=u;\n\t\t\t\telse trans[u][c]=u;\n\t\t\t}\n\t\t}\n\t\twhile(L<=R){\n\t\t\tconst int&u=q[L++];\n\t\t\tfor(int c=0;c<3;++c){\n\t\t\t\tif(trans[u][c])q[++R]=trans[u][c],fail[trans[u][c]]=trans[fail[u]][c];\n\t\t\t\telse trans[u][c]=trans[fail[u]][c];\n\t\t\t}\n\t\t}\n\t\tfor(int u=1;u<=tot;++u)Add(fail[u],u);\n\t\tfor(int u=1;u<=P;++u)DFS(u),dfc=0;\n\t}\n}\nsigned main(){\n\tscanf(\"%d%d\",&n,&m);s[0]=S;t[0]=T;B=sqrt(n);P=(n+B-1)/B;\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%s%d\",s[i]=s[i-1]+lens[i-1],a+i);lens[i]=strlen(s[i]);sums+=lens[i];\n\t}\n\tfor(int i=1;i<=m;++i){\n\t\tscanf(\"%d%d%d\",opt+i,l+i,r+i);t[i]=t[i-1]+lent[i-1];\n\t\tif(opt[i]==3)scanf(\"%s\",t[i]),lent[i]=strlen(t[i]);else scanf(\"%d\",k+i);sumt+=lent[i];\n\t}\n\tfor(int i=1;i<=n;++i){\n\t\tpos[i]=(i-1)/B+1;L[i]=(pos[i]-1)*B+1;R[i]=pos[i]*B;if(R[i]>n)R[i]=n;\n\t}\n\tfor(int i=1;i<=P;++i)Solve::block[i].rt=++tot,Solve::pos[i]=i;\n\tfor(int i=1;i<=P;++i)Solve::block[i].Build(L[(i-1)*B+1],R[(i-1)*B+1]);Solve::Build();\n\tfor(int i=1;i<=P;++i)Solve::block[i].init(R[(i-1)*B+1]-L[(i-1)*B+1]+1);\n\tfor(int i=1;i<=m;++i){\n\t\tconst int&l=::l[i],&r=::r[i],&k=::k[i];\n\t\tif(opt[i]==1){\n\t\t\tconst int&q=pos[l],&p=pos[r];\n\t\t\tif(q==p)Solve::block[q].Add(k,l-L[l]+1,r-L[r]+1);\n\t\t\telse{\n\t\t\t\tSolve::block[q].Add(k,l-L[l]+1,R[l]-L[l]+1);Solve::block[p].Add(k,1,r-L[r]+1);\n\t\t\t\tfor(int i=q+1;i<=p-1;++i)Solve::block[i].Add(k);\n\t\t\t}\n\t\t}\n\t\tif(opt[i]==2){\n\t\t\tconst int&q=pos[l],&p=pos[r];\n\t\t\tif(q==p)Solve::block[q].Cover(k,l-L[l]+1,r-L[r]+1);\n\t\t\telse{\n\t\t\t\tSolve::block[q].Cover(k,l-L[l]+1,R[l]-L[l]+1);Solve::block[p].Cover(k,1,r-L[r]+1);\n\t\t\t\tfor(int i=q+1;i<=p-1;++i)Solve::block[i].Cover(k);\n\t\t\t}\n\t\t}\n\t\tif(opt[i]==3){\n\t\t\tconst int&q=pos[l],&p=pos[r];\n\t\t\tconst int&len=lent[i];char*t=::t[i];\n\t\t\tif(q==p)printf(\"%lld\\n\",Solve::block[q].Qry(t,len,l-L[l]+1,r-L[l]+1));\n\t\t\telse{\n\t\t\t\tll ans=Solve::block[q].Qry(t,len,l-L[l]+1,R[l]-L[l]+1)+Solve::block[p].Qry(t,len,1,r-L[r]+1);\n\t\t\t\tfor(int i=q+1;i<=p-1;++i)ans+=Solve::block[i].Qry(t,len);\n\t\t\t\tprintf(\"%lld\\n\",ans);\n\t\t\t}\n\t\t}\n\t}\n}\n```",
        "postTime": 1648469078,
        "uid": 160839,
        "name": "Prean",
        "ccfLevel": 7,
        "title": "\u6570\u636e\u7ed3\u6784+\u5b57\u7b26\u4e32 ACAM+bitset+\u5206\u5757 P7582\u9898\u89e3"
    },
    {
        "content": "\u7406\u8bba\u4e0a\u590d\u6742\u5ea6\u66f4\u4f18\u7684\u505a\u6cd5\uff0c\u4f46\u662f\u6211\u4eba\u50bb\u5e38\u6570\u5927\uff0c\u6b7b\u6d3b\u5361\u8fc7\u4e0d\u53bb\u3002\u3002\u3002\n\n\u8fd9\u79cd\u95ee\u9898\u663e\u7136\u60f3 ACAM\u3002\n\n\u4e8e\u662f\u5bf9\u4e8e\u6240\u6709 $s_i$ \u5efa\u7acb AC \u81ea\u52a8\u673a\uff0c\u67e5\u8be2\u5c31\u662f\u62ff $S$ \u5728\u81ea\u52a8\u673a\u4e0a\u8dd1\uff0c\u6bcf\u6b21\u6c42\u4e00\u4e2a fail \u6811\u4e0a\u7684\u94fe\u6c42\u548c\uff0c\u8bbe $\\sum |s_i|=L$\u3002\n\n\u94fe\u6c42\u548c\u53ef\u4ee5\u8003\u8651\u8f6c\u6b27\u62c9\u5e8f\uff0c\u6ce8\u610f\u5230\u5b9e\u9645\u4e0a\u6709\u7528\u7684\u70b9\u53ea\u6709 $O(n)$ \u4e2a\u800c\u4e0d\u662f $O(L)$ \u4e2a\u3002\n\n\u53d1\u73b0\u4fee\u6539\u4e0d\u592a\u597d\u7ef4\u62a4\uff0c\u6240\u4ee5\u8003\u8651\u5206\u5757\uff0c\u8bbe\u5757\u957f\u4e3a $B$\u3002\n\n\u8003\u8651\u6563\u5757\u8d21\u732e\u7684\u5904\u7406\uff1a\n\n\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4 $a_i$\uff0c\u8be2\u95ee\u76f4\u63a5\u66b4\u529b\u3002\n\n\u4fee\u6539\u590d\u6742\u5ea6\u4e3a $O(m\\log n)$\uff0c\u8be2\u95ee\u590d\u6742\u5ea6\u4e3a $O(LB\\log n)$\u3002\n\n\u8003\u8651\u6574\u5757\u8d21\u732e\u7684\u5904\u7406\uff1a\n\n\u5bf9\u4e8e\u4e00\u4e2a\u5757\uff0c\u6211\u4eec\u5f00\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7ef4\u62a4 $i\\in[l,r]$ \u7684\u533a\u95f4\u5185\u7684 $cnt_i\\times a_i$\n\n\u56e0\u4e3a $cnt$ \u662f\u4e0d\u53d8\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u7ef4\u62a4\uff0c\u590d\u6742\u5ea6\u4e3a $O(\\dfrac{nm}{B}\\log n)$\n\n\u67e5\u8be2\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4e32\uff0c\u4ed6\u5728\u4e00\u4e2a\u5757\u91cc\u67e5\u8be2\u7684\u533a\u95f4\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u53ea\u67e5\u4e00\u6b21\uff0c\u590d\u6742\u5ea6\u4e3a $O(\\dfrac{nm}{B}\\log n+\\dfrac{nL}{B})$\u3002\n\n\u5e73\u8861\u4e00\u4e0b\u590d\u6742\u5ea6\uff0c$B=\\sqrt\\dfrac{nm}{L}$ \u7684\u65f6\u5019\u5e94\u8be5\u662f\u6700\u4f18\u7684\uff0c\u590d\u6742\u5ea6\u4e3a $O(\\sqrt{nmL}\\log n+L\\sqrt L)$\uff0c\u7406\u8bba\u4e0a\u53ef\u4ee5\u901a\u8fc7\u5e76\u4e14\u590d\u6742\u5ea6\u66f4\u4f18\n\n\u4f46\u662f\u8dd1\u7684\u7279\u522b\u6162\uff0c\u53ea\u80fd\u62ff 35 \u5206\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n# define Rep(i,a,b) for(int i=a;i<=b;i++)\n# define _Rep(i,a,b) for(int i=a;i>=b;i--)\n# define RepG(i,u) for(int i=head[u];~i;i=e[i].next)\n\ntypedef long long ll;\ntypedef double db;\n\n# define chkmax(a,b) a=max(a,b)\n# define chkmin(a,b) a=min(a,b)\n# define PII pair<int,int>\n# define mkp make_pair\n\nconst int N=6e4+5;\nconst int M=2e5+5;\n\ntemplate<typename T> void read(T &x){\n    x=0;int f=1;\n    char c=getchar();\n    for(;!isdigit(c);c=getchar())if(c=='-')f=-1;\n    for(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+c-'0';\n    x*=f;\n}\n\nint n,m,B,bl;\nstring s[M];\nint a[N],b[N];\nint L[N],R[N],pos[N];\nint euler[N],in[M],ou[M];\nint ac[M][3],fail[M],tot;\nint head[M],cnt;\nll out[N];\n\nstruct Edge{\n    int to,next;\n}e[M<<1];\n\nvoid add(int x,int y){\n    e[++cnt]=(Edge){y,head[x]},head[x]=cnt;\n}\n\nstruct misaka{\n    int opt,l,r,k;\n    string s;\n}Q[N];\n\nvector<int> T[M];\n\nstruct node{\n    int cnt,abc,sum,tag,cov;\n}seg[N<<2];\n\nvoid insert(string s,int i){\n    int len=s.size(),u=0;\n    for(int i=0;i<len;i++){\n        int j=s[i]-'a';\n        if(!ac[u][j])ac[u][j]=++tot;\n        u=ac[u][j];\n    }\n    T[u].push_back(i);\n}\n\nvoid construct(){\n    queue<int> q;\n    Rep(i,0,2)if(ac[0][i])q.push(ac[0][i]);\n    while(!q.empty()){\n        int u=q.front();q.pop();\n        Rep(i,0,2)\n            if(ac[u][i])fail[ac[u][i]]=ac[fail[u]][i],q.push(ac[u][i]);\n            else ac[u][i]=ac[fail[u]][i];\n    }\n}\n\nvoid dfs(int u,int fa){\n    in[u]=tot+1;\n    for(auto v:T[u])euler[++tot]=v;\n    ou[u]=tot;\n    RepG(i,u){\n        int v=e[i].to;\n        if(v==fa)continue;\n        dfs(v,u);\n    }\n    for(auto v:T[u])euler[++tot]=-v;\n}\n\n# define lc (u<<1)\n# define rc (u<<1|1)\n\nvoid pusht(int u,int k){\n    seg[u].sum+=k*seg[u].cnt;\n    seg[u].tag+=k;\n}\n\nvoid pushc(int u,int k){\n    seg[u].sum=seg[u].cnt*k;\n    seg[u].tag=0;\n    seg[u].cov=k;\n}\n\nvoid pushdown(int u){\n    if(seg[u].cov){\n        if(seg[lc].abc)pushc(lc,seg[u].cov);\n        if(seg[rc].abc)pushc(rc,seg[u].cov);\n        seg[u].cov=0;\n    }\n    if(seg[u].tag){\n        if(seg[lc].abc)pusht(lc,seg[u].tag);\n        if(seg[rc].abc)pusht(rc,seg[u].tag);\n        seg[u].tag=0;\n    }\n}\n\nvoid build(int u,int l,int r){\n    seg[u].tag=seg[u].cov=0;\n    if(l==r){\n        seg[u].abc=abs(b[l]);\n        seg[u].cnt=b[l];\n        seg[u].sum=a[l]*b[l];\n        return;\n    }\n    int mid=l+r>>1;\n    build(lc,l,mid);\n    build(rc,mid+1,r);\n    seg[u].abc=seg[lc].abc+seg[rc].abc;\n    seg[u].cnt=seg[lc].cnt+seg[rc].cnt;\n    seg[u].sum=seg[lc].sum+seg[rc].sum;\n}\n\nvoid update(int u,int l,int r,int ql,int qr,int k){\n    if(!seg[u].abc)return;\n    if(l>=ql&&r<=qr){\n        pusht(u,k);\n        return;\n    }\n    pushdown(u);\n    int mid=l+r>>1;\n    if(ql<=mid)update(lc,l,mid,ql,qr,k);\n    if(qr>mid)update(rc,mid+1,r,ql,qr,k);\n    seg[u].sum=seg[lc].sum+seg[rc].sum;\n}\n\nvoid modify(int u,int l,int r,int ql,int qr,int k){\n    if(!seg[u].abc)return;\n    if(l>=ql&&r<=qr){\n        pushc(u,k);\n        return;\n    }\n    pushdown(u);\n    int mid=l+r>>1;\n    if(ql<=mid)modify(lc,l,mid,ql,qr,k);\n    if(qr>mid)modify(rc,mid+1,r,ql,qr,k);\n    seg[u].sum=seg[lc].sum+seg[rc].sum;\n}\n\nint query(int u,int l,int r,int ql,int qr){\n    if(!seg[u].abc)return 0;\n    if(l>=ql&&r<=qr)return seg[u].sum;\n    pushdown(u);\n    int mid=l+r>>1;ll res=0;\n    if(ql<=mid)res+=query(lc,l,mid,ql,qr);\n    if(qr>mid)res+=query(rc,mid+1,r,ql,qr);\n    return res;\n}\n\nint ask(int l,int r,int ql,int qr){\n    int res=0;\n    if(pos[l]==pos[r]){\n        Rep(i,l,r)\n            if(abs(euler[i])>=ql&&abs(euler[i])<=qr)\n            if(euler[i]>0)res+=query(1,1,n,euler[i],euler[i]);\n            else res-=query(1,1,n,-euler[i],-euler[i]);\n        return res;\n    }\n    Rep(i,L[pos[r]],r)\n        if(abs(euler[i])>=ql&&abs(euler[i])<=qr)\n        if(euler[i]>0)res+=query(1,1,n,euler[i],euler[i]);\n        else res-=query(1,1,n,-euler[i],-euler[i]);\n    return res;\n}\n\nint main()\n{\n    # ifdef YuukiYumesaki\n    freopen(\"testdata.in\",\"r\",stdin);\n    freopen(\"test1.out\",\"w\",stdout);\n    # endif\n    memset(head,-1,sizeof(head));\n    read(n),read(m);\n    Rep(i,1,n){\n        cin>>s[i];\n        read(a[i]);\n    }\n    Rep(i,1,n)insert(s[i],i);\n    construct();\n    Rep(i,1,tot)add(fail[i],i);\n    assert(!(tot>2e5));\n    int tmp=tot;\n    tot=0;\n    dfs(0,0);\n    B=sqrt(n*m/2e5);\n    Rep(i,1,tot)pos[i]=(i-1)/B+1;\n    bl=pos[tot];\n    Rep(i,1,bl)L[i]=(i-1)*B+1,R[i]=i*B;\n    R[bl]=tot;\n    Rep(i,1,m){\n        read(Q[i].opt),read(Q[i].l),read(Q[i].r);\n        if(Q[i].opt==3)cin>>Q[i].s;\n        else read(Q[i].k);\n    }\n    Rep(i,1,n)b[i]=1;\n    build(1,1,n);\n    Rep(x,1,m){\n        int l=Q[x].l,r=Q[x].r,k=Q[x].k;\n        if(Q[x].opt==1)update(1,1,n,l,r,k);\n        else if(Q[x].opt==2)modify(1,1,n,l,r,k);\n        else{\n            int u=0,len=Q[x].s.size();\n            for(int i=0;i<len;i++){\n                u=ac[u][Q[x].s[i]-'a'];\n                out[x]+=ask(1,ou[u],l,r);\n            }\n        }\n    }\n    Rep(i,1,n)b[i]=0;\n    Rep(x,1,bl){\n        Rep(i,L[x],R[x])\n            if(euler[i]>0)b[euler[i]]++;\n            else b[-euler[i]]--;\n        build(1,1,n);\n        Rep(y,1,m){\n            int l=Q[y].l,r=Q[y].r,k=Q[y].k;\n            if(Q[y].opt==1)update(1,1,n,l,r,k);\n            else if(Q[y].opt==2)modify(1,1,n,l,r,k);\n            else{\n                int u=0,len=Q[y].s.size();\n                int val=query(1,1,n,l,r);\n                for(int i=0;i<len;i++){\n                    u=ac[u][Q[y].s[i]-'a'];\n                    if(pos[ou[u]]>x)out[y]+=val;\n                }\n            }\n        }\n        Rep(i,L[x],R[x])\n            if(euler[i]>0)b[euler[i]]--;\n            else b[-euler[i]]++;\n    }\n    Rep(i,1,m)if(Q[i].opt==3)printf(\"%lld\\n\",out[i]);\n    return 0;\n}\n/*\n3 1\nab 1\nba 2\na 1\n3 1 3 aba\n\n*/\n```",
        "postTime": 1647402050,
        "uid": 97344,
        "name": "devout",
        "ccfLevel": 9,
        "title": "P7582 \u300cRdOI R2\u300d\u98ce\u96e8(rain)"
    }
]