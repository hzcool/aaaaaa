[
    {
        "content": "[\u9898\u76ee](https://www.luogu.com.cn/problem/P3233)\n\n\u9996\u5148\u8003\u8651\u66b4\u529b\uff1a\n\n\u6211\u4eec\u8981\u8ba1\u7b97\u6bcf\u4e00\u4e2a\u70b9\u79bb\u5b83\u6700\u8fd1\u7684\u8bae\u4e8b\u70b9\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u4e24\u904d$dfs$\u5b8c\u6210\n\n1\u3001\u8ba1\u7b97\u5f53\u524d\u70b9$p$\u5230\u5b83\u5b50\u6811\u4e2d\u6700\u8fd1\u7684\u8bae\u4e8b\u70b9\uff0c\u5148\u9012\u5f52$p$\u7684\u513f\u5b50\u518d\u8ba1\u7b97\n\n2\u3001\u6b64\u65f6\u6839\u8282\u70b9\u5c31\u4fdd\u5b58\u4e86\u5b83\u9700\u8981\u7684\u7b54\u6848\uff0c\u6211\u4eec\u7528\u7236\u4eb2\u8282\u70b9\u53bb\u66f4\u65b0\u513f\u5b50\uff0c\u66f4\u65b0\u5b8c\u540e\u518d\u9012\u5f52\n\n```cpp\ninline void dfs1(int p,int fa)\n{\n\tdp[p]=INF;//dp\u8868\u793a\u6700\u77ed\u8ddd\u79bb,g\u8868\u793a\u7f16\u53f7\n\tfor(register int i=fir[p];i;i=e[i].nxt)\n\t{\n\t\tint q=e[i].to;\n\t\tif(q==fa) continue;\n\t\tdfs1(q,p);//\u7528\u513f\u5b50\u66f4\u65b0\u81ea\u5df1\n\t\tif(dp[q]+1<dp[p]) dp[p]=dp[q]+1,g[p]=g[q];\n\t\telse if(dp[q]+1==dp[p]) g[p]=min(g[p],g[q]);\n\t}\n\tif(vis[p]) dp[p]=0,g[p]=p;\n\tvis[p]=0;\n}\ninline void dfs2(int p,int fa)\n{\n\tfor(register int i=fir[p];i;i=e[i].nxt)\n\t{\n\t\tint q=e[i].to;\n\t\tif(q==fa) continue;//\u7528\u81ea\u5df1\u66f4\u65b0\u513f\u5b50\n\t\tif(dp[p]+1<dp[q]) dp[q]=dp[p]+1,g[q]=g[p];\n\t\telse if(dp[p]+1==dp[q]) g[q]=min(g[q],g[p]);\n\t\tdfs2(q,p);\n\t}\n}\n```\n\u770b\u5230\u6709$\\sum m_i$\uff0c\u5957\u8def\u5730\u5efa\u4e00\u68f5\u865a\u6811\n\n\u5bf9\u4e8e\u865a\u6811\u4e0a\u7684\u70b9\uff08\u8bae\u4e8b\u70b9\u548c\u5b83\u4eec\u7684$lca$\uff09\uff0c\u8bae\u4e8b\u70b9\u7b54\u6848\u5f53\u7136\u662f\u81ea\u5df1\u672c\u8eab\uff0c\u5bf9\u4e8e$lca$\u70b9\uff0c\u5c31\u50cf\u4e0a\u9762\u66b4\u529b\u4e00\u6837\u904d\u5386\u6574\u68f5\u865a\u6811\u5c31\u884c\u4e86\u3002\u6ce8\u610f\u6b64\u65f6\uff0c\u865a\u6811\u4e0a\u7684\u8282\u70b9\u5e76\u4e0d\u662f\u8fde\u7eed\u7684\uff0c\u6240\u4ee5\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u5e76\u4e0d\u662f$1$\uff0c\u8981\u9884\u5904\u7406\u6bcf\u4e2a\u70b9\u5728\u539f\u6811\u4e0a\u7684\u6df1\u5ea6\n\n\u90a3\u600e\u4e48\u8ba1\u7b97\u975e\u865a\u6811\u4e0a\u7684\u8282\u70b9\u5462\uff1f\n\n\u7b2c\u4e00\u79cd\u60c5\u51b5\uff1a\n\n\u539f\u6811\u4e0a\u4e00\u4e2a\u70b9$p$\uff0c\u5bf9\u4e8e\u5b83\u7684\u67d0\u4e2a\u513f\u5b50$q$\uff0c\u5982\u679c$q$\u8fd9\u4e2a\u5b50\u6811\u4e2d\u6ca1\u6709\u8bae\u4e8b\u70b9\uff0c\u90a3\u4e48$q$\u6574\u68f5\u5b50\u6811\u80af\u5b9a\u90fd\u662f\u4ece\u79bb$p$\u6700\u8fd1\u7684\u8bae\u4e8b\u70b9\u8d70\u8fc7\u6765\u7684\n\n\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff1a\n\n\u539f\u6811\u4e0a\u4e00\u6761\u94fe\uff0c\u4e24\u7aef\u90fd\u662f\u8bae\u4e8b\u70b9\uff0c\u8fd9\u4e00\u6761\u94fe\u5404\u4e00\u534a\u5c5e\u4e8e\u4e24\u4e2a\u8bae\u4e8b\u70b9\n\n\u5bf9\u5e94\u5230\u865a\u6811\u4e0a\u5c31\u662f\uff1a\n\n1\u3001\u4e00\u4e2a\u865a\u6811\u70b9$p$\uff0c\u5982\u679c\u5b83\u5728\u5728\u539f\u6811\u4e0a\u7684\u67d0\u4e2a\u513f\u5b50$q$\uff0c$q$\u6574\u68f5\u5b50\u6811\u90fd\u6ca1\u6709\u8bae\u4e8b\u70b9\uff0c\u90a3\u4e48$q$\u8fd9\u9897\u5b50\u6811\u7684\u5927\u5c0f\u5c31\u80fd\u8d21\u732e\u5230$g[p]$\n\n2\u3001\u5bf9\u4e8e\u865a\u6811\u4e0a\u7684\u4e00\u6761\u8fb9\uff0c\u5b83\u4e24\u7aef$p$\u548c$q$\uff08\u5373\u4f7f\u662f$lca$\u70b9\u4e5f\u884c\uff0c\u56e0\u4e3a$lca$\u70b9\u6211\u4eec\u5df2\u7ecf\u5904\u7406\u597d\u4e86\uff09\u3002\u865a\u6811\u4e0a\u7684\u8fd9\u4e00\u6761\u8fb9\u5bf9\u5e94\u7684\u662f\u539f\u6811\u7684\u4e00\u6761\u94fe\uff0c\u6211\u4eec\u8981\u627e\u5230\u8fd9\u6761\u94fe\u4e0a\u7684\u5206\u754c\u70b9\u3002\u8fd9\u4e2a\u76f4\u63a5\u7531\u500d\u589e\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5177\u4f53\u5b9e\u73b0\uff1a\n\n1\u3001\u5bf9\u4e8e\u865a\u6811\u4e0a\u7684\u4e00\u4e2a\u70b9$p$\uff0c\u5b83\u7684\u4e00\u4e2a\u513f\u5b50$q$\uff0c\u6211\u4eec\u8981\u8ba1\u7b97$p$\u5728\u539f\u6811\u4e2d\u7684\u513f\u5b50$q_{real}$\uff08\u6ce8\u610f\u533a\u5206\uff09\uff0c$q_{real}$\u5b50\u6811\u4e2d\u6ca1\u6709\u8bae\u4e8b\u70b9\u3002\u56e0\u4e3a\u6211\u4eec\u4e0d\u80fd\u904d\u5386\u539f\u6811\uff0c\u53ea\u80fd\u904d\u5386\u865a\u6811\uff0c\u4f46\u56e0\u4e3a\u865a\u6811\u4e0a\u7684\u513f\u5b50\u8282\u70b9$q$\u5bf9\u5e94\u4e0a\u6765\u7684\u80af\u5b9a\u662f\u4e0d\u7528\u8d21\u732e\u7684\uff0c\u90a3\u6211\u4eec\u5c31\u7528$size[p]-1$\u51cf\u53bb$q$\u5bf9\u5e94\u4e0a\u6765\u7684\u513f\u5b50\u7684$size$\u5c31\u662f\u6211\u4eec\u8981\u7684\u4e86\u3002\u5177\u4f53\u5199\u7684\u65f6\u5019\u53ef\u4ee5\u5148\u5168\u90e8\u51cf\u6389\u518d\u52a0\u56de\u6765\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/5heqjjms.png)\n\n2\u3001\u539f\u6811\u4e0a\u7684\u94fe\u3002\u865a\u6811\u4e0a\u7684\u4e24\u4e2a\u70b9$p$\u548c$q$\uff08$q$\u662f\u865a\u6811\u4e0a$p$\u7684\u513f\u5b50\uff09\u5bf9\u5e94\u5230\u539f\u6811\u4e0a\u7684\u94fe\uff0c\u5728\u8fd9\u4e0a\u9762\u500d\u589e\u627e\u5230\u5206\u5272\u70b9\uff0c\u7136\u540e\u8ba1\u7b97\u8d21\u732e\u3002\u6ce8\u610f\u865a\u6811\u4e0a\u7684\u8fd9\u4e00\u6761\u8fb9\uff0c\u5bf9\u5e94\u5230\u539f\u6811\u4e0a\u662f\u4e00\u6761\u94fe\u5e76\u4e14\u6302\u7740\u8bb8\u591a\u7684\u5b50\u6811\u3002\u5b50\u6811\u7684\u8d21\u732e\u4e5f\u662f\u8981\u7b97\u4e0a\u7684\u3002\u6ce8\u610f\u8fd9\u4e00\u6b65\u662f\u53ea\u8ba1\u7b97\u94fe\u4e0a\u4e14\u4e0d\u5305\u62ec\u4e24\u7aef\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u540c\u6837\u8981\u627e\u5230$p$\u5728\u539f\u6811\u4e0a\u7684\u513f\u5b50\u3002\n\n\u4e3e\u4e2a\u6817\u5b50\uff08\u6837\u4f8b\u7b2c\u4e09\u4e2a\u518d\u52a0\u4e00\u4e2a\u70b9\uff09\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/u55nut0g.png)\n\n\u6211\u4eec\u500d\u589e\u627e\u5230$q$\u5bf9\u5e94\u4e0a\u6765\u7684$p$\u7684\u513f\u5b50\uff082\uff09\uff0c\u4ee5\u53ca\u5206\u5272\u70b9\uff083\uff09\uff0c\u90a3\u4e48$3,4,5,7,9$\u6b64\u65f6\u90fd\u7b97\u5230$g[8]=8$\u7684\u7b54\u6848\u4e2d\uff0c\u4e5f\u5c31\u662f$ans[g[8]]+=size[3]-size[8]$\uff1b$2$\u6b64\u65f6\u7b97\u5230$g[1]=6$\u4e2d\uff0c\u4e5f\u5c31\u662f$ans[g[1]]+=size[2]-size[3]$\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <string>\n#include <algorithm>\nusing namespace std;\nconst int N=3e5+10,INF=1e9+10;\nint n,m,top,cnt;\nint dep[N],f[N][20],dfn[N],size[N],lg2[N],sta[N],pnt[N],vis[N],g[N],dp[N],ans[N],tmp[N];\nstruct graph\n{\n\tint tot;\n\tint fir[N],to[2*N],nxt[2*N];\n\tgraph(){ tot=0; memset(fir,0,sizeof(fir)); }\n\tinline void add(int x,int y)\n\t{\n\t\tto[++tot]=y; nxt[tot]=fir[x]; fir[x]=tot;\n\t\tto[++tot]=x; nxt[tot]=fir[y]; fir[y]=tot;\n\t}\n}e1,e2;\ninline void dfs(int p)//\u9884\u5904\u7406dfn,dep,size \n{\n\tdfn[p]=++cnt,size[p]=1;\n\tfor(register int i=e1.fir[p];i;i=e1.nxt[i])\n\t{\n\t\tint q=e1.to[i];\n\t\tif(q==f[p][0]) continue;\n\t\tdep[q]=dep[p]+1,f[q][0]=p;\n\t\tfor(register int j=1;j<=lg2[dep[q]]+1;j++)\n\t\t\tf[q][j]=f[f[q][j-1]][j-1];\n\t\tdfs(q);\n\t\tsize[p]+=size[q];\n\t}\n}\ninline int get_lca(int x,int y)//\u627elca \n{\n\tif(dep[x]<dep[y]) swap(x,y);\n\tfor(register int i=lg2[dep[x]];i>=0;i--)\n\t\tif(dep[f[x][i]]>=dep[y]) x=f[x][i];\n\tif(x==y) return x;\n\tfor(register int i=lg2[dep[x]];i>=0;i--)\n\t\tif(f[x][i]!=f[y][i]) x=f[x][i],y=f[y][i];\n\treturn f[x][0];\n}\ninline bool cmp(int a,int b)\n{\n\treturn dfn[a]<dfn[b];\n}\ninline void build(int p)//\u5efa\u7acb\u865a\u6811 \n{\n\tif(top==0){ sta[top=1]=p; return; }\n\tint lca=get_lca(sta[top],p);\n\twhile(top>1&&dep[lca]<dep[sta[top-1]]) e2.add(sta[top-1],sta[top]),top--;\n\tif(dep[lca]<dep[sta[top]]) e2.add(lca,sta[top--]);\n\tif(top==0||sta[top]!=lca) sta[++top]=lca;\n\tsta[++top]=p;\n}\ninline void cal(int x,int y)\n{\n\tint p=y,q=y;\n\tfor(register int i=lg2[dep[p]];i>=0;i--)\n\t\tif(dep[f[p][i]]>dep[x]) p=f[p][i];\n\tans[g[x]]-=size[p];//\u8df3\u5230y\u5728\u539f\u6811\u4e0a\u5bf9\u5e94\u7684x\u7684\u513f\u5b50 \n\tfor(register int i=lg2[dep[q]];i>=0;i--)\n\t{\n\t\tint llen=dep[y]-dep[f[q][i]]+dp[y],rlen=dep[f[q][i]]-dep[x]+dp[x];\n\t\tif(dep[f[q][i]]>dep[x]&&(llen<rlen||(llen==rlen&&g[y]<g[x]))) q=f[q][i];//\u500d\u589e\u627e\u5230\u5206\u5272\u70b9 \n\t}\n\tans[g[y]]+=size[q]-size[y],ans[g[x]]+=size[p]-size[q];//\u6ce8\u610f\u8fd9\u91cc\u8981\u52a0\u7684\u662fsize\uff0c\u56e0\u4e3a\u865a\u6811\u8def\u5f84\u4e0a\u4f1a\u6709\u5b50\u6811 \n}\ninline void dfs1(int p,int fa)\n{\n\tdp[p]=INF;\n\tfor(register int i=e2.fir[p];i;i=e2.nxt[i])\n\t{\n\t\tint q=e2.to[i];\n\t\tif(q==fa) continue;\n\t\tdfs1(q,p);\n\t\tint dis=dep[q]-dep[p];//\u6ce8\u610f\u8fd9\u91cc\uff0c\u865a\u6811\u4e0a\u7684\u8282\u70b9\u5e76\u4e0d\u662f\u8fde\u7eed\u7684 \n\t\tif(dp[q]+dis<dp[p]) dp[p]=dp[q]+dis,g[p]=g[q];\n\t\telse if(dp[q]+dis==dp[p]) g[p]=min(g[p],g[q]);\n\t}\n\tif(vis[p]) dp[p]=0,g[p]=p;\n}\ninline void dfs2(int p,int fa)\n{\n\tfor(register int i=e2.fir[p];i;i=e2.nxt[i])\n\t{\n\t\tint q=e2.to[i];\n\t\tif(q==fa) continue;\n\t\tint dis=dep[q]-dep[p];\n\t\tif(dp[p]+dis<dp[q]) dp[q]=dp[p]+dis,g[q]=g[p];\n\t\telse if(dp[p]+dis==dp[q]) g[q]=min(g[q],g[p]);\n\t\tcal(p,q);\n\t\tdfs2(q,p);\n\t}\n\tans[g[p]]+=size[p];//\u6ce8\u610f\u8fd9\u91cc\uff0c\u8fd8\u8981\u52a0\u4e0a\u81ea\u5df1 \n\tvis[p]=e2.fir[p]=0;\n}\nint main()\n{\n\tlg2[1]=0;\n\tfor(register int i=1;i<=3e5;i++)\n\t\tlg2[i]=lg2[i>>1]+1;\n\tint a,b,T;\n\tscanf(\"%d\",&n);\n\tfor(register int i=1;i<n;i++)\n\t{\n\t\tscanf(\"%d%d\",&a,&b);\n\t\te1.add(a,b);\t\n\t}\n\tdep[1]=1,dfs(1);\n\tscanf(\"%d\",&T);\n\twhile(T--)\n\t{\n\t\tint flag=1;\n\t\ttop=e2.tot=0;\n\t\tscanf(\"%d\",&m);\n\t\tfor(register int i=1;i<=m;i++)\n\t\t\tscanf(\"%d\",&pnt[i]),vis[pnt[i]]=1,ans[pnt[i]]=0;\n\t\tif(!vis[1]) pnt[++m]=1,flag=0;\n\t\tfor(register int i=1;i<=m;i++)\n\t\t\ttmp[i]=pnt[i];\n\t\tsort(pnt+1,pnt+m+1,cmp);\n\t\tfor(register int i=1;i<=m;i++)\n\t\t\tbuild(pnt[i]);\n\t\tif(top) while(--top) e2.add(sta[top],sta[top+1]);\n\t\tdfs1(1,0),dfs2(1,0);\n\t\tfor(register int i=1;i<=m;i++)\n\t\t\tif(tmp[i]!=1||flag) printf(\"%d \",ans[tmp[i]]);//\u6ce8\u610f\u5224\u65ad1 \n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\t\t\n}\n```\n",
        "postTime": 1588328585,
        "uid": 81238,
        "name": "MCAdam",
        "ccfLevel": 7,
        "title": "P3233 [HNOI2014]\u4e16\u754c\u6811"
    },
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u662f\u663e\u800c\u6613\u89c1\u7684\u865a\u6811\uff0c\u4f46\u96be\u70b9\u5374\u5728DP\uff0c\u697c\u4e0a\u865a\u6811\u8bb2\u7684\u5df2\u7ecf\u5f88\u660e\u767d\u4e86\uff0c\u6211\u8fd9\u91cc\u91cd\u70b9\u8bb2\u4e00\u4e0bDP\u7684\u8fc7\u7a0b\u3002\n\n\u6211\u8fd9\u8fb9\u7528\u4e866\u904ddfs\uff0c\u529f\u80fd\u90fd\u4e0d\u4e00\u6837\u3002\n\n1. \u5728\u539f\u56fe\u4e0aDP\u6c42\u51fa\u7236\u4eb2\uff0c\u6df1\u5ea6\u7b49\u57fa\u672c\u4fe1\u606f\u3002\n\n2. \u5728\u865a\u6811\u4e0aDP,\u5148\u8003\u8651\u6c42\u51fa\u6bcf\u4e2a\u865a\u6811\u8282\u70b9\u9760\u5f97\u6700\u8fd1\u7684\u201c\u5173\u952e\u8282\u70b9\u201d\u3002\u5177\u4f53\u6765\u8bf4\u5206\u4e3a\u4e24\u6b65\u3002\n   - \u9996\u5148\u6c42\u51fa\u4e8c\u5143\u7ec4g[u]\uff0c\u4ee5\u8ddd\u79bb\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u8282\u70b9\u7f16\u53f7\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u3002\u5b83\u8868\u793a\u5728\u4ee5u\u4e3a\u6839\u7684\u5b50\u6811\u5185\uff0c\u79bbu\u6700\u8fd1\u7684\u8282\u70b9\u5230u\u7684\u8ddd\u79bb\uff0c\u4ee5\u53ca\u5b83\u7684\u7f16\u53f7\u3002\u81ea\u4e0b\u800c\u4e0a\u5730\u63a8\u5373\u53ef\u3002\u7528pair\u53ef\u4ee5\u5b9e\u73b0\u5f88\u76f4\u89c2\u7684\u6bd4\u8f83\u3002\n   - \u7136\u540e\u518d\u6b64\u57fa\u7840\u4e0a\u81ea\u4e0a\u800c\u4e0bDP,\u5728\u6bcf\u4e00\u4e2a\u70b9\u5904\u90fd\u5b9e\u65f6\u7ef4\u62a4\u201c\u7ecf\u8fc7u\u7684\u7236\u4eb2\u5230\u8fbeu\u7684\u6700\u8fd1\u8282\u70b9\u7684\u7f16\u53f7\u53ca\u5176\u8ddd\u79bb\u201d\uff0c\u7528\u8fd9\u4e2a\u503c\u53bb\u66f4\u65b0g\u3002\u6700\u540e\u7528\u6570\u7ec4tn[u]\u5b58\u50a8\u79bbu\u6700\u8fd1\u7684\u8282\u70b9\u7f16\u53f7\n   \n3. \u505a\u540e\u4e00\u9636\u6bb5\u8ba1\u7b97\u7684\u51c6\u5907\u5de5\u4f5c\uff0c\u663e\u7136\u82e5u\u662f\u865a\u6811\u70b9\uff0c\u82e5v\u662fu\u5728\u539f\u6811\u7684\u513f\u5b50\u800c\u4e14\u4ee5v\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u4e0d\u5b58\u5728\u8bae\u4e8b\u5904\uff0c\u6574\u68f5\u5b50\u6811\u90fd\u5f52\u79bbu\u6700\u8fd1\u7684\u8bae\u4e8b\u5904\u7ba1\u8f96\uff0c\u53ea\u9700\u7528u\u7684\u5b50\u6811\u5927\u5c0f\u51cf\u53bb\u6240\u6709\u542b\u8bae\u4e8b\u5904\u7684\u5b50\u6811\u5927\u5c0f\u5373\u53ef\u3002\u5177\u4f53\u6765\u8bf4\u53ea\u8981\u5728\u865a\u6811\u4e0a\u500d\u589e\u5230\u81ea\u5df1\u865a\u6811\u7236\u4eb2\u7684\u4e0b\u884c\u7b2c\u4e00\u4e2a\u8282\u70b9\uff0c\u7136\u540e\u51cf\u6389\u5b83\u7684size\u3002\n\n4. \u5728\u505a\u5b8c3\u4e2d\u7684\u5de5\u4f5c\u540e\uff0c\u53ea\u5269\u4e0b\u865a\u6811\u8fb9\u4e0a\u7684\u88ab\u6211\u4eec\u5ffd\u7565\u7684\u8282\u70b9\u6ca1\u6709\u786e\u5b9a\u5f52\u5c5e\u3002\n - \u82e5\u5bf9\u4e8e\u865a\u6811\u8fb9(u,v),\u6ee1\u8db3tn[u]=tn[v]\uff0c\u5219\u53ef\u4ee5\u76f4\u63a5\u7ed9tn[u]\u52a0\u4e0a\u8fd9\u6761\u8fb9\u4e0a\u6240\u6709\u70b9\u3002\n - \u5426\u5219\uff0ctn[u]\u4e0etn[v]\u5fc5\u7136\u662f\u4e00\u4e0a\u4e00\u4e0b\uff0c\u53ef\u4ee5\u8003\u8651\u8ba1\u7b97\u4e2d\u95f4\u70b9\u7684\u6df1\u5ea6\uff0c\u7136\u540e\u500d\u589e\u627e\u5230\u5b83\u3002\u4e24\u7aef\u52a0\u5165\u76f8\u5e94\u7684\u503c\u5373\u53ef\u3002\n \n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<utility>\n#define fr first\n#define sc second\n#define REP(u) for(int i=hd[u],v=e[i].v;i;i=e[i].n,v=e[i].v)\n#define REQ(u) for(int i=Hd[u],v=E[i].v;i;i=E[i].n,v=E[i].v)\n#define FOR(i,a,b) for(int i=a;i<=b;i++)\n#define ROF(i,a,b) for(int i=a;i>=b;i--)\nusing namespace std;\ntypedef pair<int,int> p;\nconst int N=300300,LG=18,M=600600,INF=1000010000;\nstruct edge{int n,v;}e[M],E[M];\nint n,m,T,u,v,ti,fl,Fl,tp,rt;\nint a[N],bo[N],df[N],sz[N],d[N],tn[N],up[N];\nint f[N][LG+2],s[N],Hd[N],hd[N],ans[N],A[N];\np g[N];\nvoid add(int u,int v){e[++fl]=(edge){hd[u],v};hd[u]=fl;}\nvoid Add(int u,int v){E[++Fl]=(edge){Hd[u],v};Hd[u]=Fl;}\nvoid dfs0(int u){\n    df[u]=++ti;sz[u]=1;\n    REP(u)if(v!=f[u][0])\n        f[v][0]=u,d[v]=d[u]+1,dfs0(v),sz[u]+=sz[v];\n}//\u539f\u6811\u4e0aDP\nvoid dfs1(int u){\n    if(bo[u]==1) g[u]=p(0,u);else g[u]=p(INF,0);\n    REQ(u) dfs1(v),g[u]=min(g[u],p(g[v].fr+d[v]-d[u],g[v].sc));\n}\nvoid dfs2(int u,int D,int x){\n    if(p(D,x)<g[u]) g[u]=p(D,x);else D=g[u].fr,x=g[u].sc;\n    REQ(u) dfs2(v,D+d[v]-d[u],x);\n}//\u4ee5\u4e0a\u662f\u7b2c\u4e00\u9636\u6bb5DP,\u6c42\u51fa\u6700\u8fd1\u70b9\nvoid dfs3(int u){\n    tn[u]=g[u].sc;\n    ans[tn[u]]+=sz[u];\n    REQ(u){\n        int x=v;\n        ROF(j,LG,0) if(f[x][j] && d[f[x][j]]>d[u]) x=f[x][j];\n        ans[tn[u]]-=sz[up[v]=x];dfs3(v);\n    }\n}\nvoid dfs4(int u){\n    REQ(u){\n        int x=up[v],y=v,H;\n        if(tn[u]==tn[v]) ans[tn[u]]+=sz[x]-sz[v];\n        else{\n            H=d[tn[v]]+d[u]-g[u].fr;\n            H=H&1?H+1>>1:(tn[v]<tn[u]?H>>1:(H>>1)+1);\n            ROF(j,LG,0) if(f[y][j] && d[f[y][j]]>=H) y=f[y][j];\n            ans[tn[v]]+=sz[y]-sz[v];\n            ans[tn[u]]+=sz[x]-sz[y];\n        }dfs4(v);\n    }\n}//\u7b2c\u4e8c\u9636\u6bb5\u7684\u8ba1\u7b97\nvoid dfs5(int u){up[u]=tn[u]=0;REQ(u) dfs5(v);Hd[u]=0;}\nint lca(int u,int v){\n    if(d[u]<d[v]) swap(u,v);\n    ROF(j,LG,0) if(d[f[u][j]]>=d[v] && f[u][j]) u=f[u][j];\n    if(u==v) return u;\n    ROF(j,LG,0) if(f[u][j]!=f[v][j] && f[u][j]) u=f[u][j],v=f[v][j]; \n    return f[u][0];\n}\nbool cmp(int x,int y){return df[x]<df[y];}\nint main(){\n\t//freopen(\"wdt.out\",\"w\",stdout);\n    scanf(\"%d\",&n);\n    FOR(i,1,n-1) scanf(\"%d%d\",&u,&v),add(u,v),add(v,u);\n    dfs0(1);\n    FOR(j,1,LG)FOR(i,1,n)\n        f[i][j]=f[f[i][j-1]][j-1];\n    scanf(\"%d\",&T);\n    while(T--){\n        scanf(\"%d\",&m);\n        FOR(i,1,m) scanf(\"%d\",&a[i]),A[i]=a[i],bo[a[i]]=1;\n        sort(a+1,a+m+1,cmp);\n        s[tp=1]=a[1];\n        FOR(i,2,m){\n            int x=a[i],y=lca(x,s[tp]);\n            while(tp>1 && d[y]<=d[s[tp-1]])\n                Add(s[tp-1],s[tp]),tp--;\n            if(s[tp]!=y) Add(y,s[tp]),s[tp]=y;\n            s[++tp]=x;\n        }//\u4e94\u884c\u5efa\u865a\u6811\n        while(tp>1) Add(s[tp-1],s[tp]),tp--;\n        rt=s[1];dfs1(rt);\n        dfs2(rt,g[rt].fr,g[rt].sc);\n        dfs3(rt);dfs4(rt);\n        ans[tn[rt]]+=sz[1]-sz[rt]; \n        FOR(i,1,m) printf(\"%d \",ans[A[i]]);printf(\"\\n\");\n        dfs5(rt);\n        FOR(i,1,m) bo[a[i]]=ans[a[i]]=0;Fl=0;  \n    }\n}/*\n13\n1 7\n1 9\n9 13\n9 4\n7 3\n7 2\n2 8\n2 12\n12 6\n12 11\n3 10\n3 5\n1\n8\n1 8 6 11 10 5 13 4\n*/\n```",
        "postTime": 1539502326,
        "uid": 62267,
        "name": "BJpers2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3233 \u3010[HNOI2014]\u4e16\u754c\u6811\u3011"
    },
    {
        "content": "~~\u865a\u6811\u7684\u5173\u952e\u4e0d\u5728\u4e8e\u4f60\u770b\u51fa\u5b83\u662f\u865a\u6811\uff0c\u800c\u662f\u5efa\u5b8c\u865a\u6811\u4e4b\u540e\u600e\u4e48\u641e~~\n\n\u770b\u5230 $\\sum m_i\\leq 10^5$\uff0c\u679c\u65ad\u5efa\u51fa\u865a\u6811\u3002\n\n\u7136\u540e\u5c31\u4e0d\u662f\u592a\u4f1a\u505a\u4e86/kk\n\n\u9996\u5148\u672c\u9898\u8981\u8ba1\u7b97\u6574\u68f5\u6811\u4e2d\u7684\u7b54\u6848\uff0c\u6240\u4ee5\u6211\u4eec\u5c1d\u8bd5\u628a\u7b54\u6848\u62c6\u6210 2 \u90e8\u5206\uff1a\n\n1. \u865a\u6811\u4e0a\u7684\u70b9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\n\n   \u8bb0 $by_x$ \u79bb $x$ \u6700\u8fd1\u7684\u70b9\u7684\u7f16\u53f7\u3002$by_x$ \u663e\u7136\u53ef\u4ee5\u901a\u8fc7\u4e24\u904d dfs \u6c42\u51fa\uff08\u7b2c\u4e00\u904d dfs \u6c42\u51fa $x$ \u5b50\u6811\u5185\u7684\u8d21\u732e\uff0c\u7528\u513f\u5b50\u66f4\u65b0\u7236\u4eb2\uff0c\u7b2c\u4e8c\u904d dfs \u6c42\u51fa $x$ \u5b50\u6811\u5916\u7684\u8d21\u732e\uff0c\u7528\u7236\u4eb2\u66f4\u65b0\u513f\u5b50\uff0c\u7c7b\u4f3c\u4e8e\u6362\u6839 dp\uff09\uff0c\u7136\u540e\u4ee4\u6240\u6709 $by_x$ \u52a0 $1$ \u5373\u53ef\u3002\n\n2. \u4e0d\u5728\u865a\u6811\u4e0a\u7684\u70b9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\n\n   \u8fd9\u4e00\u90e8\u5206\u6bd4\u8f83\u590d\u6742\uff0c\u6211\u4eec\u4e0d\u59a8\u753b\u4e2a\u56fe\u6765\u5e2e\u52a9\u6211\u4eec\u7406\u89e3\u3002\n\n   ![](https://cdn.luogu.com.cn/upload/image_hosting/h6eswqwc.png)\n\n   \u5982\u56fe\uff0c\u84dd\u8272\u8282\u70b9\u4e3a\u5173\u952e\u70b9\uff0c\u7eff\u8272\u7684\u8fb9\u4e3a\u865a\u6811\u7ec4\u6210\u7684\u8fb9\u3002\u663e\u7136\uff0c\u9664\u4e86\u8282\u70b9 $1,2,6,7,8,17,20$ \u4e4b\u5916\u5176\u5b83\u8282\u70b9\u90fd\u4e0d\u5728\u865a\u6811\u4e0a\u3002\n\n   \u6211\u4eec\u53c8\u53ef\u628a\u8fd9\u4e9b\u8282\u70b9\u5206\u4e3a\u4e24\u7c7b\uff1a\n\n   \u2160. \u865a\u6811\u4e0a\u67d0\u4e2a\u8282\u70b9\u7684\u513f\u5b50\u7684\u5b50\u6811\uff08\u5373\u56fe\u4e2d\u7684\u9ec4\u8272\u8282\u70b9\uff09\u3002\u5047\u8bbe\u6211\u4eec\u8003\u8651\u5173\u952e\u8282\u70b9 $u$ \u8fd9\u90e8\u5206\u7684\u8d21\u732e\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8d21\u732e\u663e\u7136\u53ef\u4ee5\u8868\u793a\u4e3a $sz_u-1-\\sum\\limits_{v\\in son_u}sz_v$\uff0c\u4e5f\u5c31\u662f\u6574\u4e2a $u$ \u5b50\u6811\u7684\u5927\u5c0f\u6263\u6389\u5728\u865a\u6811\u4e0a\u7684\u513f\u5b50\u7684\u5b50\u6811\u5927\u5c0f\u3002\u4f46\u662f\u8fd9\u91cc\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u679a\u4e3e\u865a\u6811\u4e0a\u7684\u513f\u5b50\u3002\u6bd4\u65b9\u8bf4\u6211\u4eec\u8981\u8ba1\u7b97\u8282\u70b9 $2$ \u90a3\u90e8\u5206\u9ec4\u8272\u5b50\u6811\u7684\u8d21\u732e\u3002\u8282\u70b9 $2$ \u5728\u865a\u6811\u4e0a\u7684\u552f\u4e00\u513f\u5b50\u4e3a\u8282\u70b9 $6$\u3002\u800c\u76f4\u63a5\u62ff $sz_2-1-sz_6$ \u663e\u7136\u662f\u4e0d\u884c\u7684\uff0c\u6b63\u786e\u7684\u7ed3\u679c\u5e94\u8be5\u662f $sz_2-1-sz_3$\u3002\u6545\u8fd9\u91cc\u6211\u4eec\u8981\u51cf\u53bb $u$ \u5728 $v$ \u65b9\u5411\u7684**\u76f4\u63a5\u513f\u5b50**\u3002\u90a3\u4e48\u8fd9\u4e2a\u76f4\u63a5\u513f\u5b50\u600e\u4e48\u6c42\u5462\uff1f\u501f\u9274 CF916E \u7684\u5957\u8def\uff0c\u6c42\u51fa $v$ \u7684 $dep_v-dep_u-1$ \u7ea7\u7956\u5148\u5c31\u884c\u4e86\u3002\n\n   \u2161. \u865a\u6811\u4e0a\u67d0\u4e24\u4e2a\u8282\u70b9 $u,v$ \u4e4b\u95f4\u7684\u70b9\u53ca\u5176\u5b50\u6811\u5185\u7684\u8282\u70b9\uff0c\uff08\u5373\u56fe\u4e2d\u7684\u7c89\u8272\u8282\u70b9\uff09\n\n   \u7ee7\u7eed\u5206\u60c5\u51b5\uff1a\n\n   \u2460. $by_u=by_v$\uff0c\u90a3\u4e48\u663e\u7136 $u,v$ \u6240\u6709\u8282\u70b9\u90fd\u5c5e\u4e8e $by_v$\u3002\u627e\u51fa $u$ \u5728 $v$ \u65b9\u5411\u7684\u76f4\u63a5\u513f\u5b50 $s$\uff0c\u5e76\u4ee4 $sz_{by_u}$ \u52a0\u4e0a $sz_s-sz_v$\n\n   \u2461. $by_u\\neq by_v$\uff0c\u663e\u7136 $by_u$ \u4e0e $by_v$ \u5206\u522b\u4f4d\u4e8e\u8fb9 $(u,v)$ \u7684\u4e24\u4fa7\u3002\u753b\u5f20\u6bd4\u8f83\u6e05\u6670\u7684\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/meo1ks1p.png)\n\n\u200b\t\t\t\u4e8c\u5206\u679a\u4e3e\u65ad\u70b9 $p,q$\uff0c$p$ \u53ca\u4e0a\u9762\u90e8\u5206\u90fd\u5c5e\u4e8e $by_u$\uff0c$q$ \u53ca\u4e0b\u9762\u90e8\u5206\u90fd\u5c5e\u4e8e $by_v$\u3002\u90a3\u4e48\u8fd9\u6761\u8def\u5f84\u4e0a\u7684\u70b9\u5bf9 $by_u$ \u8d21\u732e\t\t\t\u5c31\u662f $sz_s-sz_q$\uff0c\u5bf9 $by_v$ \u7684\u8d21\u732e\u5c31\u662f $sz_q-sz_v$\u3002\n\n\u771f\u662f\u9053\u6076\u5fc3\u7684\u9898\u554a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi first\n#define se second\n#define fz(i,a,b) for(int i=a;i<=b;i++)\n#define fd(i,a,b) for(int i=a;i>=b;i--)\n#define ffe(it,v) for(__typeof(v.begin()) it=v.begin();it!=v.end();it++)\n#define fill0(a) memset(a,0,sizeof(a))\n#define fill1(a) memset(a,-1,sizeof(a))\n#define fillbig(a) memset(a,63,sizeof(a))\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\ntemplate<typename T1,typename T2> void chkmin(T1 &x,T2 y){if(x>y) x=y;}\ntemplate<typename T1,typename T2> void chkmax(T1 &x,T2 y){if(x<y) x=y;}\ntypedef pair<int,int> pii;\ntypedef long long ll;\ntemplate<typename T> void read(T &x){\n\tx=0;char c=getchar();T neg=1;\n\twhile(!isdigit(c)){if(c=='-') neg=-1;c=getchar();}\n\twhile(isdigit(c)) x=x*10+c-'0',c=getchar();\n\tx*=neg;\n}\nconst int MAXN=3e5;\nconst int LOG_N=19;\nint n,qu;\nnamespace graph{\n\tint nxt[MAXN*2+5],to[MAXN*2+5],hd[MAXN+5],ec=0;\n\tvoid adde(int u,int v){to[++ec]=v;nxt[ec]=hd[u];hd[u]=ec;}\n\tint fa[MAXN+5][LOG_N+2],dep[MAXN+5],dfn[MAXN+5],tim=0,sz[MAXN+5];\n\tvoid dfs(int x,int f){\n\t\tdfn[x]=++tim;fa[x][0]=f;sz[x]=1;\n\t\tfor(int e=hd[x];e;e=nxt[e]){\n\t\t\tint y=to[e];if(y==f) continue;\n\t\t\tdep[y]=dep[x]+1;dfs(y,x);sz[x]+=sz[y];\n\t\t}\n\t}\n\tint getlca(int x,int y){\n\t\tif(dep[x]<dep[y]) swap(x,y);\n\t\tfor(int i=LOG_N;~i;i--) if(dep[x]-(1<<i)>=dep[y]) x=fa[x][i];\n\t\tif(x==y) return x;\n\t\tfor(int i=LOG_N;~i;i--) if(fa[x][i]!=fa[y][i]) x=fa[x][i],y=fa[y][i];\n\t\treturn fa[x][0];\n\t}\n\tint getfa(int x,int k){for(int i=LOG_N;~i;i--) if(k>>i&1) x=fa[x][i];return x;}\n\tint getdis(int x,int y){return dep[x]+dep[y]-(dep[getlca(x,y)]<<1);}\n\tvoid prework(){\n\t\tdfs(1,0);\n\t\tfor(int i=1;i<=LOG_N;i++) for(int j=1;j<=n;j++)\n\t\t\tfa[j][i]=fa[fa[j][i-1]][i-1];\n\t}\n}\nusing graph::dep;\nusing graph::sz;\nusing graph::getlca;\nusing graph::getfa;\nusing graph::getdis;\nnamespace virt{\n\tbool cmp(int x,int y){return graph::dfn[x]<graph::dfn[y];}\n\tint hd[MAXN+5],to[MAXN+5],nxt[MAXN+5],cst[MAXN+5],ec=0;\n\tvoid adde(int u,int v){to[++ec]=v;cst[ec]=dep[v]-dep[u];nxt[ec]=hd[u];hd[u]=ec;}\n\tint pt[MAXN+5],pn,ori[MAXN+5];bool mark[MAXN+5];\n\tint stk[MAXN],tp=0;\n\tvoid insert(int x){\n\t\tif(!tp){stk[++tp]=x;return;}\n\t\tint lc=getlca(x,stk[tp]);\n\t\twhile(tp>=2&&dep[stk[tp-1]]>dep[lc]) adde(stk[tp-1],stk[tp]),tp--;\n\t\tif(tp&&dep[stk[tp]]>dep[lc]) adde(lc,stk[tp--]);\n\t\tif(!tp||lc!=stk[tp]) stk[++tp]=lc;stk[++tp]=x;\n\t}\n\tvoid fin(){while(tp>=2) adde(stk[tp-1],stk[tp]),tp--;stk[tp--]=0;}\n\tvoid build(){\n\t\tsort(pt+1,pt+pn+1,cmp);if(!mark[1]) insert(1);\n\t\tfor(int i=1;i<=pn;i++) insert(pt[i]);fin();\n\t}\n\tint by[MAXN+5],ans[MAXN+5];\n\tvoid dfs1(int x){\n//\t\tprintf(\"%d\\n\",x);\n\t\tif(!mark[x]) by[x]=-1;\n\t\telse by[x]=x;\n\t\tfor(int e=hd[x];e;e=nxt[e]){\n\t\t\tint y=to[e];dfs1(y);\n\t\t\tif(by[y]!=-1){\n\t\t\t\tif(by[x]==-1) by[x]=by[y];\n\t\t\t\telse{\n\t\t\t\t\tint d1=getdis(x,by[y]),d2=getdis(x,by[x]);\n\t\t\t\t\tif(d1<d2||(d1==d2&&by[x]>by[y])) by[x]=by[y];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tvoid dfs2(int x){\n\t\tfor(int e=hd[x];e;e=nxt[e]){\n\t\t\tint y=to[e]; \n\t\t\tif(by[y]==-1) by[y]=by[x];\n\t\t\telse{\n\t\t\t\tint d1=getdis(y,by[x]),d2=getdis(y,by[y]);\n\t\t\t\tif(d1<d2||(d1==d2&&by[y]>by[x])) by[y]=by[x];\n\t\t\t} dfs2(y);\n\t\t}\n//\t\tprintf(\"%d %d\\n\",x,by[x]);\n\t}\n\tvoid dfs3(int x){\n\t\tans[by[x]]+=sz[x];\n\t\tfor(int e=hd[x];e;e=nxt[e]){\n\t\t\tint y=to[e];ans[by[x]]-=sz[getfa(y,dep[y]-dep[x]-1)];\n\t\t\tdfs3(y);\n\t\t}\n\t}\n\tvoid dfs4(int x){\n\t\tfor(int e=hd[x];e;e=nxt[e]){\n\t\t\tint y=to[e];\n\t\t\tif(by[x]==by[y]){\n\t\t\t\tans[by[x]]+=sz[getfa(y,dep[y]-dep[x]-1)]-sz[y];\n\t\t\t} else {\n\t\t\t\tint d1=getdis(x,by[x]),d2=getdis(y,by[y]),len=dep[y]-dep[x]-1;\n\t\t\t\tint l=0,r=len,p=len+1;\n\t\t\t\twhile(l<=r){\n\t\t\t\t\tint mid=(l+r)>>1;\n\t\t\t\t\tif((d1+mid<d2+len+1-mid)||(d1+mid==d2+len+1-mid&&by[x]<by[y])) p=mid,l=mid+1;\n\t\t\t\t\telse r=mid-1;\n\t\t\t\t}\n//\t\t\t\tprintf(\"%d %d %d\\n\",x,y,p);\n\t\t\t\tif(p==0) ans[by[y]]+=sz[getfa(y,len)]-sz[y];\n\t\t\t\telse if(p==len+1) ans[by[x]]+=sz[getfa(y,len)]-sz[y];\n\t\t\t\telse{\n\t\t\t\t\tans[by[x]]+=sz[getfa(y,len)]-sz[getfa(y,len-p)];\n\t\t\t\t\tans[by[y]]+=sz[getfa(y,len-p)]-sz[y];\n\t\t\t\t}\n\t\t\t} dfs4(y);\n\t\t}\n\t}\n\tvoid clear(int x){\n\t\tby[x]=ans[x]=0;\n\t\tfor(int e=hd[x];e;e=nxt[e]) clear(to[e]),ec--;\n\t\thd[x]=0;\n\t}\n\tvoid work(){\n\t\tscanf(\"%d\",&pn);for(int i=1;i<=pn;i++) scanf(\"%d\",&pt[i]),ori[i]=pt[i],mark[pt[i]]=1;\n\t\tbuild();dfs1(1);dfs2(1);dfs3(1);dfs4(1);\n\t\tfor(int i=1;i<=pn;i++) printf(\"%d \",ans[ori[i]]);printf(\"\\n\");clear(1);\n\t\tfor(int i=1;i<=pn;i++) mark[pt[i]]=0;\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<n;i++){\n\t\tint u,v;scanf(\"%d%d\",&u,&v);\n\t\tgraph::adde(u,v);graph::adde(v,u);\n\t} graph::prework();scanf(\"%d\",&qu);\n\twhile(qu--) virt::work();\n\treturn 0;\n}\n/*\n7\n1 2\n2 3\n2 4\n1 5\n4 6\n5 7\n1\n3 2 5 6\n*/\n```",
        "postTime": 1609333923,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3233 \u3010[HNOI2014]\u4e16\u754c\u6811\u3011"
    },
    {
        "content": "### UPDATE:\u4fee\u590d\u4e86\u9898\u89e3\u4ee3\u7801\u590d\u5236\u9519\u7684\u9519\u8bef\n\n\u6211\u6765\u8bf4\u4e00\u4e2a\u5f88\u5999\u7684\u65b9\u6cd5\uff0c\u4e71\u4e03\u516b\u7cdf\u7684\u7ec6\u8282\u6bd4\u8f83\u5c11\uff0cDP\u65b9\u7a0b\u4e5f\u5f88\u7b80\u5355\u3002\n\n\u5148\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u6df1\u5ea6\uff0c\u5b50\u6811\u5927\u5c0f\uff0c\u8ddd\u79bb\u6700\u8fd1\u7684\u8bae\u4e8b\u5904\u7f16\u53f7\u53ca\u8ddd\u79bb\uff0c\u8fd9\u4e9b\u4e1c\u897f\u5176\u4ed6dalao\u4eec\u5df2\u7ecf\u8bf4\u8fc7\u4e86\u3002\n\n\u628a\u6bcf\u4e2a\u8bae\u4e8b\u5904\u770b\u505a\u4e00\u79cd\u989c\u8272\uff0c\u4ece\u865a\u6811\u6839\u5f00\u59cbDFS\uff0c\u7ed9\u539f\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\u67d3\u8272\u3002\n\n\u4e00\u5f00\u59cb\u5148\u628a\u6240\u6709\u8282\u70b9\u90fd\u67d3\u6210\u865a\u6811\u6839\u8282\u70b9\u6240\u5c5e\u8bae\u4e8b\u5904\u7684\u989c\u8272\u3002\n\nDFS\u65f6\uff0c\u82e5\u4e00\u6761\u865a\u6811\u8fb9\u4e0a\u7236\u4eb2\u548c\u513f\u5b50\u6240\u5c5e\u8bae\u4e8b\u5904\u4e0d\u540c\uff0c\u5219\u500d\u589e\u51fa\u539f\u6811\u4e0a\u4e24\u8bae\u4e8b\u5904\u7ba1\u7406\u533a\u57df\u7684\u5206\u754c\u5904\uff08\u5373\u4e2d\u70b9\uff0c\u6ce8\u610f\u201c\u5982\u679c\u6709\u591a\u4e2a\u4e34\u65f6\u8bae\u4e8b\u5904\u5230\u8be5\u805a\u5c45\u5730\u7684\u8ddd\u79bb\u4e00\u6837\uff0c\u53d6\u5176\u4e2d\u7f16\u53f7\u6700\u5c0f\u7684\u4e34\u65f6\u8bae\u4e8b\u5904\u201d\u8fd9\u4e2a\u7ec6\u8282\uff09\uff0c\u7136\u540e\u628a\u5206\u754c\u5904\u53ca\u5176\u5b50\u6811\u518d\u67d3\u6210\u865a\u6811\u4e0a\u5f53\u524d\u513f\u5b50\u6240\u5c5e\u8bae\u4e8b\u5904\u7684\u989c\u8272\uff0c\u6700\u540e\u9012\u5f52\uff0c\u7ee7\u7eedDFS\u3002\n\n\u8fd9\u6837\u8bf4\u5927\u5bb6\u53ef\u80fd\u8fd8\u4e0d\u660e\u767d\uff0c\u6211\u7528\u6837\u4f8b\u7b2c4\u4e2a\u70b9\u4e3e\u4e2a\u6817\u5b50\u3002\n## \u8fd9\u662f\u539f\u6811\uff0c\u52a0\u7c97\u7684\u70b9\u4e3a\u8bae\u4e8b\u5904\n![](https://cdn.luogu.com.cn/upload/pic/61379.png)\n## \u4e00\u5f00\u59cb\u7528\u865a\u6811\u6839\u6240\u5c5e\u8bae\u4e8b\u5904\u7ed9\u6240\u6709\u70b9\u67d3\u8272\u540e\n![](https://cdn.luogu.com.cn/upload/pic/61380.png)\n## \u5728\u865a\u6811\u8fb91--3\u4e0a\uff0c2\u53f7\u8282\u70b9\u75313\u53f7\u7ba1\u7406\uff0c2\u53f7\u8282\u70b9\u53ca\u5176\u5b50\u6811\u75283\u53f7\u8282\u70b9\u67d3\u8272\u540e\n![](https://cdn.luogu.com.cn/upload/pic/61381.png)\n## 7\u53f7\u8282\u70b9\u67d3\u8272\u540e\n![](https://cdn.luogu.com.cn/upload/pic/61382.png)\n## 8\u53f7\u8282\u70b9\u67d3\u8272\u540e\n![](https://cdn.luogu.com.cn/upload/pic/61383.png)\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8bae\u4e8b\u5904\uff0c\u8bb0\u5f55\u67d3\u6210\u5b83\u7684\u989c\u8272\u7684\u8282\u70b9\u7684\u4e2a\u6570\uff0c\u7531\u4e8e\u6bcf\u6b21\u67d3\u8272\u53ea\u4f1a\u8986\u76d6\u4e00\u79cd\u989c\u8272\uff08\u5373\u7236\u4eb2\u4e0e\u513f\u5b50\u6240\u5c5e\u8bae\u4e8b\u5904\u4e0d\u540c\u65f6\u7236\u4eb2\u6240\u5c5e\u8bae\u4e8b\u5904\u7684\u989c\u8272\uff09\uff0c\u56e0\u6b64\u6bcf\u6b21\u67d3\u8272\u65f6\u53ea\u8981\u88ab\u8986\u76d6\u7684\u989c\u8272\u7684\u8282\u70b9\u4e2a\u6570\u51cf\u6389\u672c\u6b21\u67d3\u8272\u8282\u70b9\u6570\uff0c\u672c\u6b21\u67d3\u8272\u7684\u989c\u8272\u7684\u8282\u70b9\u4e2a\u6570\u52a0\u4e0a\u672c\u6b21\u67d3\u8272\u8282\u70b9\u6570\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4e0a\u4e2a\u4ee3\u7801\uff0c\u8f85\u52a9\u7406\u89e3\u3002\n```cpp\nvoid dfs3(int x)\n{\n/*\ng[x].first\u8868\u793a\u79bb\u6700\u8fd1\u8bae\u4e8b\u5904\u7684\u8ddd\u79bb\uff0csecond\u8868\u793a\u6700\u8fd1\u8bae\u4e8b\u5904\u7684\u7f16\u53f7\uff0c\nf[i][j]\u7528\u4e8e\u500d\u589e\uff0cans[x]\u8868\u793a\u5f53\u524d\u67d3\u6210x\u53f7\u8bae\u4e8b\u5904\u989c\u8272\u7684\u70b9\u7684\u4e2a\u6570\n*/\n    int u=g[x].second,v;\n    for(ri i=head2[x];i;i=nxt2[i])\n    {\n        y=to2[i];\n        v=g[y].second;\n        if(u!=v)\n        {\n            d=dep[v]-(getdis(u,v)-(u<v))/2;\n            for(ri j=LO;j>=0;j--)\n                if(dep[f[j][y]]>=d)y=f[j][y];\n            ans[u]-=siz[y];\n            ans[v]+=siz[y];\n        }\n        dfs3(to2[i]);\n    }\n}\n```\n\n\u8fd8\u662f\u6ca1\u641e\u61c2\u5c31\u770b\u770b\u5b8c\u6574\u4ee3\u7801\u5427\u3002\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<math.h>\nusing namespace std;\n#define ri register int\n#define pii pair<int,int>\nconst int INF=987654321;\nint dfin[300005],dfout[300005],dep[300005],siz[300005],f[19][300005],now,len,ans[300005];\nint n,x,y,q,m,h[300005],LO,a[300005],b[600005],cnt,sta[300005],top,f1[300005],d,minus[300005];\nbool bo[300005];\npii g[300005];\nint head[300005],to[600005],nxt[600005],ecnt,head2[300005],to2[600005],nxt2[600005],ecnt2;\nvoid add(int x,int y)\n{\n    ecnt++;\n    to[ecnt]=y;\n    nxt[ecnt]=head[x];\n    head[x]=ecnt;\n}\nvoid add2(int x,int y)\n{\n    ecnt2++;\n    to2[ecnt2]=y;\n    nxt2[ecnt2]=head2[x];\n    head2[x]=ecnt2;\n}\nint lca(int x,int y)\n{\n    if(dep[x]<dep[y])swap(x,y);\n    for(ri i=LO;i>=0;i--)\n        if(dep[f[i][x]]>=dep[y])x=f[i][x];\n    if(x==y)return x;\n    for(ri i=LO;i>=0;i--)\n        if(f[i][x]!=f[i][y])x=f[i][x],y=f[i][y];\n    return f[0][x];\n}\nint getdis(int x,int y)\n{\n    return dep[x]+dep[y]-2*dep[lca(x,y)];\n}\nvoid dfs0(int x)\n{\n    siz[x]=1;\n    dfin[x]=++now;\n    for(ri i=head[x];i;i=nxt[i])\n        if(!dfin[to[i]])\n        {\n            dep[to[i]]=dep[x]+1;\n            f[0][to[i]]=x;\n            dfs0(to[i]);\n            siz[x]+=siz[to[i]];\n        }\n    dfout[x]=++now;\n}\nvoid dfs1(int x)\n{\n    if(bo[x])g[x]=pii(0,x);\n    else g[x]=pii(INF,0);\n    for(ri i=head2[x];i;i=nxt2[i])\n    {\n        dfs1(to2[i]);\n        if(g[x]>pii(g[to2[i]].first+dep[to2[i]]-dep[x],g[to2[i]].second))\n            g[x]=pii(g[to2[i]].first+dep[to2[i]]-dep[x],g[to2[i]].second);\n    }\n}\nvoid dfs2(int x)\n{\n    for(ri i=head2[x];i;i=nxt2[i])\n    {\n        if(g[to2[i]]>pii(g[x].first+dep[to2[i]]-dep[x],g[x].second))\n            g[to2[i]]=pii(g[x].first+dep[to2[i]]-dep[x],g[x].second);\n        dfs2(to2[i]);\n    }\n}/*\nvoid dfs3(int x)\n{\n    if(x==b[1])minus[x]-=siz[1]-siz[b[1]];\n    for(ri i=head2[x];i;i=nxt2[i])\n    {\n        dfs3(to2[i]);\n        if(g[to2[i]].second!=g[x].second)minus[x]+=siz[to2[i]];\n        else minus[x]+=minus[to2[i]];\n    }\n    ans[g[x].second]=siz[x]-minus[x];\n}*/\nvoid dfs4(int x)\n{\n    int u=g[x].second,v;\n    for(ri i=head2[x];i;i=nxt2[i])\n    {\n        y=to2[i];\n        v=g[y].second;\n        if(u!=v)\n        {\n            d=dep[v]-(getdis(u,v)-(u<v))/2;\n            for(ri j=LO;j>=0;j--)\n                if(dep[f[j][y]]>=d)y=f[j][y];\n            ans[u]-=siz[y];\n            ans[v]+=siz[y];\n        }\n        dfs4(to2[i]);\n    }\n}\nvoid dfs5(int x)\n{\n    for(ri i=head2[x];i;i=nxt2[i])dfs5(to2[i]);\n    minus[x]=ans[x]=head2[x]=bo[x]=0;\n}\nbool cmp1(int x,int y)\n{\n    return dfin[x]<dfin[y];\n}\nbool cmp2(int x,int y)\n{\n    return (x>0?dfin[x]:dfout[-x])<(y>0?dfin[y]:dfout[-y]);\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    LO=floor(log2(n-1));\n    for(ri i=1;i<n;i++)\n    {\n        scanf(\"%d%d\",&x,&y);\n        add(x,y);\n        add(y,x);\n    }\n    dep[1]=1;\n    dfs0(1);\n    for(ri i=1;i<=LO;i++)\n        for(ri j=1;j<=n;j++)\n            f[i][j]=f[i-1][f[i-1][j]];\n    scanf(\"%d\",&q);\n    for(ri i=1;i<=q;i++)\n    {\n        scanf(\"%d\",&m);\n        for(ri j=1;j<=m;j++)\n        {\n            scanf(\"%d\",h+j);\n            bo[h[j]]=1;\n            a[j]=h[j];\n        }\n        sort(a+1,a+m+1,cmp1);\n        cnt=0;\n        b[++cnt]=a[1];\n        b[++cnt]=-a[1];\n        for(ri j=2;j<=m;j++)\n        {\n            x=lca(a[j-1],a[j]);\n            b[++cnt]=x;\n            b[++cnt]=-x;\n            b[++cnt]=a[j];\n            b[++cnt]=-a[j];\n        }\n        sort(b+1,b+cnt+1,cmp2);\n        len=0;\n        for(ri j=1;j<=cnt;j++)\n            if(b[j]!=b[j-1])b[++len]=b[j];\n        for(ri j=1;j<=len;j++)\n        {\n            if(b[j]>0)sta[++top]=b[j];\n            else add2(sta[top-1],sta[top]),top--;\n        }\n        dfs1(b[1]);\n        dfs2(b[1]);\n        //dfs3(b[1]);\n        ans[g[b[1]].second]=siz[1];\n        //for(ri j=1;j<=n;j++)printf(\"%d \",ans[j]); putchar('\\n');\n        dfs4(b[1]);\n        for(ri j=1;j<=m;j++)printf(\"%d \",ans[h[j]]); putchar('\\n');\n        dfs5(b[1]);\n    }\n}\n```",
        "postTime": 1561437524,
        "uid": 31381,
        "name": "C3H5ClO",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3233 \u3010[HNOI2014]\u4e16\u754c\u6811\u3011"
    },
    {
        "content": "\u9898\u610f:\u6807\u8bb0\u4e00\u4e9b\u6811\u4e0a\u7684\u70b9,\u6bcf\u4e2a\u70b9\u4f1a\u88ab\u6700\u8fd1(\u7f16\u53f7\u6700\u5c0f)\u7684\u6807\u8bb0\u70b9\u63a7\u5236,\u95ee\u6bcf\u4e2a\u6807\u8bb0\u70b9\u4f1a\u63a7\u5236\u591a\u5c11\u70b9\n\n\u6839\u636e\u5957\u8def\u5148\u641e\u51fa\u865a\u6811,\u7136\u540e\u8003\u8651\u600e\u4e48$DP$\n\n\u9996\u5148\u4e24\u904d$dfs$\u6c42\u51fa\u865a\u6811\u4e0a\u6bcf\u4e2a\u70b9\u88ab\u90a3\u4e2a\u70b9\u63a7\u5236\n\n\u7b2c\u4e00\u904d\u662f$dfs$\u6c42\u6700\u8fd1\u7684\u513f\u5b50,\u7b2c\u4e8c\u904d\u662f\u8003\u8651\u6bcf\u4e2a\u70b9\u7236\u4eb2\u5bf9\u5176\u4ed6\u513f\u5b50\u7684\u8d21\u732e\n\n\u6240\u4ee5\u7b2c\u4e00\u904d\u8981\u5148$dfs$\u513f\u5b50,\u7b2c\u4e8c\u904d\u8981\u540e$dfs$\u513f\u5b50\n\n\u7136\u540e\u5bf9\u4e8e\u865a\u6811\u4e0a\u6bcf\u4e00\u6761\u8fb9\n\n\u2460:\u4e24\u7aef\u70b9\u88ab\u540c\u4e00\u4e2a\u70b9\u63a7\u5236,\u76f4\u63a5\u628a\u8fd9\u4e24\u4e2a\u7aef\u70b9\u6240\u5c5e\u7684\u70b9\u7684\u8d21\u732e\u52a0\u4e0a\u8fd9\u4e24\u4e2a\u70b9\u4e0d\u5728\u865a\u6811\u4e2d\u7684\u513f\u5b50\u7684$sz$\n\n\u2461:\u4e24\u7aef\u70b9\u88ab\u4e0d\u540c\u70b9\u63a7\u5236,\u90a3\u4e48\u4e2d\u95f4\u4e00\u5b9a\u6709\u4e00\u4e2a\u5206\u754c\u70b9,\u4f7f\u5f97\u5206\u754c\u70b9\u4e0a\u9762\u7684\u70b9\u7684$sz$\u5c5e\u4e8e\u4e0a\u7aef\u70b9,\u4e0b\u9762\u5c5e\u4e8e\u4e0b\u7aef\u70b9\n\n\u8fd9\u4e2a\u5206\u754c\u70b9\u53ef\u4ee5\u901a\u8fc7\u500d\u589e\u6c42\u5f97,\u6ce8\u610f\u8ba1\u7b97\u7b54\u6848\u8981\u628a\u4e24\u7aef\u70b9\u7684\u8d21\u732e\u53bb\u6389(\u5f00\u533a\u95f4)\n\n\u8003\u8651\u600e\u4e48\u8ba1\u7b97\u6bcf\u4e2a\u70b9$u$\u4e0d\u5728\u865a\u6811\u4e2d\u7684\u513f\u5b50\u7684$sz$,\u8bb0\u4ed6\u662f$sur[u](Surplus)$,\u4e00\u5f00\u59cb\u7b49\u4e8e$sz[u]$\n\n\u5bf9\u4e8e\u865a\u6811\u4e0a$(u,v)$\u8fd9\u6761\u8fb9,\u500d\u589e\u6c42\u51fa$(u,v)$\u4e0a\u539f\u6811\u4e2d\u79bb$u$\u6700\u8fd1\u7684\u70b9$s$\n\n$sur[u]$\u51cf\u53bb\u6240\u6709\u7684\u8fd9\u6837\u7684$sz[s]$\u5c31\u662f\u70b9$u$\u4e0d\u5728\u865a\u6811\u4e2d\u7684\u513f\u5b50\u7684$sz$\n\n$dp$\u5b8c\u540e\u6bcf\u4e2a\u70b9\u6240\u5c5e\u7684\u70b9\u52a0\u4e0a\u518d\u8fd9\u4e2a\u70b9\u7684\u5269\u4f59\u91cf\u5c31\u662f\u7b54\u6848\u4e86\n```\n#include<bits/stdc++.h>\n#define fp(i,a,b) for(register int i=a,I=b+1;i<I;++i)\n#define fd(i,a,b) for(register int i=a,I=b-1;i>I;--i)\n#define go(u) for(register int i=fi[u],v=e[i].to;i;v=e[i=e[i].nx].to)\n#define file(s) freopen(s\".in\",\"r\",stdin),freopen(s\".out\",\"w\",stdout)\nusing namespace std;\nchar ss[1<<17],*A=ss,*B=ss;\ninline char gc(){return A==B&&(B=(A=ss)+fread(ss,1,1<<17,stdin),A==B)?-1:*A++;}\ntemplate<class T>inline void sd(T&x){\n    char c;T y=1;while(c=gc(),(c<48||57<c)&&c!=-1)if(c==45)y=-1;x=c-48;\n    while(c=gc(),47<c&&c<58)x=x*10+c-48;x*=y;\n}\nchar sr[1<<21],z[20];int C=-1,Z;\ninline void Ot(){fwrite(sr,1,C+1,stdout),C=-1;}\ntemplate<class T>inline void we(T x){\n    if(C>1<<20)Ot();if(x<0)sr[++C]=45,x=-x;\n    while(z[++Z]=x%10+48,x/=10);\n    while(sr[++C]=z[Z],--Z);sr[++C]=' ';\n}\nconst int N=3e5+5,M=19,inf=1e9;\ntypedef int arr[N];\nstruct eg{int nx,to;}e[N<<1];\nint n,m,k,ce,dft,fa[N][M];arr a,b,bl,fi,fg,sz,son,top,dep,Log,dfn,sur,ans,S;\nvoid dfs(int u){\n    dep[u]=dep[fa[u][0]]+(sz[u]=1);dfn[u]=++dft;\n    for(int i=0;fa[u][i];++i)fa[u][i+1]=fa[fa[u][i]][i];\n    go(u)if(v^fa[u][0]){\n        fa[v][0]=u,dfs(v),sz[u]+=sz[v];\n        if(sz[v]>sz[son[u]])son[u]=v;\n    }\n}\nvoid dfs(int u,int t){\n    top[u]=t;if(son[u])dfs(son[u],t);\n    go(u)if(v^fa[u][0]&&v^son[u])dfs(v,v);\n}\ninline int lca(int u,int v){\n    for(;top[u]^top[v];dep[top[u]]>dep[top[v]]?u=fa[top[u]][0]:v=fa[top[v]][0]);\n    return dep[u]<dep[v]?u:v;\n}\ninline int dis(int u,int v){return dep[u]+dep[v]-2*dep[lca(u,v)];}\ninline void add(int u,int v){e[++ce]={fi[u],v},fi[u]=ce;}\nvoid dfs1(int u){int d1,d2;\n    bl[u]=fg[u]?u:0;sur[u]=sz[u];\n    go(u){\n        dfs1(v);\n        d1=dep[bl[v]]-dep[u],d2=bl[u]?dep[bl[u]]-dep[u]:inf;\n        if(d1<d2||(d1==d2&&bl[v]<bl[u]))bl[u]=bl[v];\n    }\n}\nvoid dfs2(int u){int d1,d2;\n    go(u){\n        d1=dis(bl[u],v),d2=dis(bl[v],v);\n        if(d1<d2||(d1==d2&&bl[u]<bl[v]))bl[v]=bl[u];\n        dfs2(v);\n    }\n}\nvoid dp(int u){int s,mid,nt,d1,d2;\n    go(u){\n        dp(v);s=mid=v;\n        fd(i,Log[dep[v]],0)if(dep[fa[s][i]]>dep[u])s=fa[s][i];\n        sur[u]-=sz[s];\n        if(bl[u]==bl[v]){ans[bl[u]]+=sz[s]-sz[v];continue;};\n        fd(i,Log[dep[v]],0){\n            nt=fa[mid][i];if(dep[nt]<=dep[u])continue;\n            d1=dis(nt,bl[v]),d2=dis(nt,bl[u]);\n            if(d1<d2||(d1==d2&&bl[v]<bl[u]))mid=nt;\n        }\n        ans[bl[u]]+=sz[s]-sz[mid];\n        ans[bl[v]]+=sz[mid]-sz[v];\n    }ans[bl[u]]+=sur[u];fi[u]=0;\n}\ninline bool cmp(const int&a,const int&b){return dfn[a]<dfn[b];}\ninline void sol(){\n    sd(k);fp(i,1,k)sd(a[i]),b[i]=a[i],fg[a[i]]=1;\n    sort(a+1,a+k+1,cmp);static int top=1;S[1]=1;ce=0;\n    fp(i,1,k){\n        int x=a[i],p=lca(S[top],x);\n        while(dep[p]<dep[S[top]]){\n            if(dep[p]>=dep[S[top-1]]){\n                add(p,S[top--]);\n                if(S[top]^p)S[++top]=p;\n                break;\n            }add(S[top-1],S[top]),--top;\n        }if(S[top]^x)S[++top]=x;\n    }while(top>1)add(S[top-1],S[top]),--top;\n    dfs1(1),dfs2(1);dp(1);\n    fp(i,1,k)we(ans[b[i]]),fg[b[i]]=ans[b[i]]=0;sr[++C]='\\n';\n}\nint main(){\n    #ifndef ONLINE_JUDGE\n        file(\"s\");\n    #endif\n    sd(n);int u,v;fp(i,2,n)Log[i]=Log[i>>1]+1;\n    fp(i,2,n)sd(u),sd(v),add(u,v),add(v,u);\n    dfs(1),dfs(1,1);sd(m);\n    memset(fi,0,sizeof fi);while(m--)sol();\nreturn Ot(),0;\n}\n```",
        "postTime": 1520420135,
        "uid": 20156,
        "name": "Kelin",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3233 \u3010[HNOI2014]\u4e16\u754c\u6811\u3011"
    },
    {
        "content": "###  \u8c03\u4e86\u4e00\u4e2a\u4e0b\u5348\uff0c\u7ec8\u4e8e\u8fc7\u4e86\uff0c\u4e8e\u662f\u6765\u53d1\u672c\u4eba\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3==  \n\n\n------------\n\n\u4e00\u9053\u4e0d\u9519\u7684\u865a\u6811\u7ec3\u624b\u9898\uff0c\u5c31\u662f\u7ec6\u8282\u592a\u591a\u4e86;\n\n\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff1a\n\n\u9996\u5148\u5bf9\u4e8e\u5173\u952e\u70b9\u6784\u5efa\u51fa\u865a\u6811\uff0c\u8fb9\u6743\u4e3a\u4e24\u7aef\u7684\u6df1\u5ea6\u5dee\u3002\u4e3a\u4e86\u7edf\u8ba1\u7b54\u6848\uff0c\u6211\u4eec\u9700\u8981\u6c42\u51fa\u4ee5\u4e0b\u6570\u7ec4\uff1a\n\n\n\n _bel[x]_ \u4e3ax\u70b9\u53d7\u54ea\u4e2a\u8282\u70b9\u7684\u63a7\u5236\n\n _dis[x]_ \u8868\u793ax\u548c _bel[x]_ \u7684\u8ddd\u79bb\n \n \n\n\u5bf9\u4e8e\u8be2\u95ee\u70b9\uff08\u5173\u952e\u70b9\uff09\uff0c _bel[]_ \u663e\u7136\u662f\u672c\u8eab\uff0c\u7136\u540e\u5bf9\u4e8e\u4e0d\u5728\u8be2\u95ee\u91cc\u7684\u70b9\uff08\u975e\u5173\u952e\u70b9\uff09\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c**\u4e24\u904d**dfs\u6765\u6c42\uff0c**\u5148\u6c42\u51fa\u513f\u5b50\u5bf9\u7236\u4eb2\u7684\u5f71\u54cd\uff0c\u518d\u6c42\u7236\u4eb2\u5bf9\u513f\u5b50\u7684\u5f71\u54cd**\u3002\u56e0\u4e3a\u5b58\u5728\u5173\u952e\u70b9\u63a7\u5236\u5176\u5144\u5f1f\u8282\u70b9\u7684\u60c5\u51b5\uff01\n\n\u7136\u540e\u8003\u8651\u5982\u4f55\u7edf\u8ba1\u7b54\u6848\u3002\u6211\u4eec\u5206\u5f00\u8003\u8651\u6bcf\u4e2a\u70b9\u5bf9\u4e8e\u6240\u5728\u96c6\u5408\u7684\u8d21\u732e\uff0c\u8bb0 _si[x]_ \u4e3ax\u63a7\u5236\u7684\u6570\u91cf\uff0c\u521d\u503c\u8d4b\u6210\u539f\u6811\u4e0a\u7684\u5b50\u6811 _size_ \u5c31\u884c,\u7528 _si[x]_ \u51cf\u53bb\u865a\u6811\u513f\u5b50\u7684 _si[]_ (\u5305\u62ec\u513f\u5b50\u7684\u513f\u5b50\uff09\uff0c\u52a0\u4e0a\u5411\u4e0a\u80fd\u63a7\u5236\u7684\u8282\u70b9\u6570\u5c31\u662f\u5bf9 _bel[x]_ \u7684\u8d21\u732e\u3002\n\n\u5bf9\u4e8e\u6811\u4e0a\u7684\u94fe\uff1a\n\n1. \u4e24\u7aef\u5728\u540c\u4e00\u96c6\u5408\uff1a\u6211\u4eec\u8ba9\u7236\u4eb2\u63a7\u5236\u94fe\u4e0a\u7684\u6240\u6709\u70b9\uff0c\u6240\u4ee5 _si[fa]-=siz[son]_ ;\n1. \u4e24\u7aef\u4e0d\u5728\u540c\u4e00\u96c6\u5408\uff1a\u90a3\u4e48\u8138\u4e0a\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u5206\u754c\u70b9\uff0c\u4ee5\u4e0a\u5c5e\u4e8e\u7236\u4eb2\uff0c\u4ee5\u4e0b\u5c5e\u4e8e\u513f\u5b50\u3002\u6ce8\u610f\u8fd9\u91cc\u7684\u94fe\u5728\u539f\u6811\u4e2d\u53ef\u80fd\u63a5\u7740\u8bb8\u591a\u5176\u4ed6\u5b50\u6811\uff0c\u56e0\u6b64\u6211\u4eec\u8981\u500d\u589e\u6c42\uff08\u6211\u4e00\u5f00\u59cb\u8fd8\u5929\u771f\u5730\u76f4\u63a5\u6c42--\u7ed3\u679c\u88ab\u8650\u60e8\u4e86\uff09**\u6ce8\u610f\u8fd9\u91cc\u7684\u5404\u79cd\u7ec6\u8282\uff0c\u4e00\u5b9a\u634b\u6e05\u4e86\uff0c\u5728\u8fd9wa\u4e86\u597d\u591a\u904d**\u3002\u5c06\u65b0\u8d21\u732e\u52a0\u5230\u513f\u5b50\u7684_si[]_\uff0c\u7136\u540e\u628a\u513f\u5b50\u7684\u603b\u8d21\u732e\u5728\u7236\u4eb2\u91cc\u51cf\u53bb\u5c31\u884c\u4e86\u3002\n\n\u6700\u540e\u6ce8\u610f\u4e0b\u6570\u7ec4\u6e05\u96f6\uff0c\u8fd9\u9898\u5c31\u8fc7\u4e86\n\n```cpp\n// luogu-judger-enable-o2\n#include<cstdio>\n#include<iostream>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n#include<map>\n#include<string>\n#include<cstdlib>\n#define N 300002\n#define ll long long\nusing namespace std;\nint read()\n{\n    int x=0,f=1;\n    char c=getchar(); \n    while(c>'9'||c<'0')\n    {\n        if(c=='-') f=-1;\n        c=getchar();\n    }\n    while(c<='9'&&c>='0')\n    {\n        x=x*10+c-'0';\n        c=getchar();\n    }\n    return x*f;\n}\nbool cl[N];\nint n,Size,size,Head[N],head[N],f[N][22],q,fa[N],k,cnt,dfn[N],dis[N],tt[N],num,siz[N],bel[N],dep[N],st[N],top,as[N],si[N],sum;\nstruct Node{\n    int next,to,vlu;\n}Mem[N*2];\nstruct node{\n    int next,to,vlu;\n}mem[N*2];\ninline void add(int u,int v,int w)\n{\n    mem[++size].to=v;mem[size].next=head[u];head[u]=size;mem[size].vlu=w;\n}\ninline void Add(int u,int v,int w)\n{\n    Mem[++Size].to=v;Mem[Size].next=Head[u];Head[u]=Size;Mem[Size].vlu=w;\n}\nvoid dfs(int x)\n{\n    dep[x]=dep[fa[x]]+1;\n    siz[x]=1;\n    dfn[x]=++cnt;\n    for(int i=Head[x];i;i=Mem[i].next)\n    {\n        int v=Mem[i].to;\n        if(v==fa[x]) continue;\n        f[v][0]=x;\n        fa[v]=x;\n        dfs(v);siz[x]+=siz[v];\n    }\n}\nint get_lca(int a,int b)\n{\n    if(dep[a]<dep[b]) swap(a,b);\n    for(int i=20;i>=0;--i) if(dep[f[a][i]]>=dep[b]) a=f[a][i];\n    if(a==b) return a;\n    for(int i=20;i>=0;--i) if(f[a][i]!=f[b][i]) a=f[a][i],b=f[b][i];\n    return fa[b];\n}\nstruct snode{\n    int x,id;\n}a[N];\nbool cmp(snode a,snode b){return dfn[a.x]<dfn[b.x];};\nbool cmp2(snode a,snode b){return a.id<b.id;}\nvoid build()//\u5efa\u865a\u6811 \n{\n    sort(a+1,a+1+k,cmp);\n    st[top=1]=1;\n    for(int i=1;i<=k;++i) \n    {\n        int x=a[i].x;\n        if(x==1) continue;\n        int lca=get_lca(st[top],x);\n        while(top>1&&dep[st[top-1]]>dep[lca])\n        {\n            int dis=dep[st[top]]-dep[st[top-1]];\n            add(st[top],st[top-1],dis);add(st[top-1],st[top],dis);\n            --top;\n        }\n        if(dep[lca]<dep[st[top]])\n        {\n            int dis=dep[st[top]]-dep[lca];\n            add(st[top],lca,dis);add(lca,st[top],dis);\n            --top;\n        }\n        if(dep[lca]>dep[st[top]]) st[++top]=lca;\n        st[++top]=x;\n    }\n    while(top>1)\n    {\n        int dis=dep[st[top]]-dep[st[top-1]];\n        add(st[top],st[top-1],dis);add(st[top-1],st[top],dis);\n        --top;\n    }\n}\nvoid calc1(int x,int fa)\n{\n    tt[++num]=x;\n    si[x]=siz[x];\n    if(cl[x])\n    {\n        dis[x]=0;bel[x]=x;\n    }\n    else dis[x]=1e9;\n    for(int i=head[x];i;i=mem[i].next)\n    {\n        int v=mem[i].to;\n        if(v==fa) continue;\n        calc1(v,x);\n        if(dis[x]>dis[v]+mem[i].vlu||dis[x]==dis[v]+mem[i].vlu&&bel[x]>bel[v])\n        {\n            dis[x]=dis[v]+mem[i].vlu;\n            bel[x]=bel[v];\n        }\n    }\n}\nint jup(int x,int k)\n{\n    if(dep[x]<k) return x;\n\tfor(int i=20;i>=0;--i)   if(dep[f[x][i]]>=k) x=f[x][i];\n    return x;\n}\nvoid calc2(int x,int faa)\n{\n    for(int i=head[x];i;i=mem[i].next)\n    {\n        int v=mem[i].to;\n        if(v==faa) continue;\n        if(dis[x]+mem[i].vlu<dis[v]||dis[x]+mem[i].vlu==dis[v]&&bel[x]<bel[v]) dis[v]=dis[x]+mem[i].vlu,bel[v]=bel[x];\n        calc2(v,x);\n        if(bel[v]==bel[x]) si[x]-=siz[v];\n        else\n        {\n            int d=dis[v]+dis[x]+dep[v]-dep[x]-1,k;\n            k=d/2-dis[v];//\u6ce8\u610fk\u662f\u8d1f\u6570\u7684\u60c5\u51b5\uff01\uff01\uff01\uff01 \n            int tmp=jup(v,dep[v]-k);\n            if((d&1)&&bel[x]>bel[v]&&k>=0) tmp=fa[tmp];\n            si[v]+=siz[tmp]-siz[v];\n            si[x]-=siz[tmp];\n        }\n        as[bel[v]]+=si[v];\n    }\n    if(x==1) as[bel[x]]+=si[x];\n}\nint main()\n{\n    n=read();\n    for(int i=1;i<n;++i)\n    {\n        int x=read(),y=read();\n        Add(x,y,1);Add(y,x,1);\n    }\n    dfs(1);\n    for(int i=1;i<=20;++i)\n        for(int j=1;j<=n;++j)\n            f[j][i]=f[f[j][i-1]][i-1];\n    q=read();\n    while(q--)\n    {\n\t\tk=read();\n        for(int i=1;i<=k;++i) \n        {\n            a[i].x=read();a[i].id=i;\n            cl[a[i].x]=1;\n        }\n        build();\n        calc1(1,0);calc2(1,0);\n        sort(a+1,a+1+k,cmp2);\n        for(int i=1;i<=k;++i) printf(\"%d \",as[a[i].x]);\n        printf(\"\\n\");\n        size=0;\n        for(int i=1;i<=num;++i)  head[tt[i]]=as[tt[i]]=si[tt[i]]=bel[tt[i]]=dis[tt[i]]=cl[tt[i]]=0;//\u6ce8\u610f\u6e05\u7a7a \n        num=0;\n    }\n    return 0;\n}\n```\n\n\n\n",
        "postTime": 1530629555,
        "uid": 45819,
        "name": "mts_246",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3233 \u3010[HNOI2014]\u4e16\u754c\u6811\u3011"
    },
    {
        "content": "[\u6233\u6211\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8cqwq](https://www.goldenpotato.cn/\u52a8\u6001\u89c4\u5212/luogu-p3233-hnoi2014\u4e16\u754c\u6811/)\n\n---\n# Solution\n\u8fd9\u662f\u4e00\u9053\u865a\u6811\u5999\u9898\u3002\n\n.\n\n\u6211\u4eec\u4e0d\u59a8\u5148\u8003\u8651\u4e00\u4e0b\u6bcf\u4e00\u6b21$O(n)$\u8ba1\u7b97\u7684\u66b4\u529b\u600e\u4e48\u505a\u3002\n\n$O(n\\cdot m)$\u7684\u66b4\u529b\u80a5\u80a0\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u505a\u4e24\u904ddfs\u3002**\u8003\u8651\u8bbe$f[i]$\u8868\u793a\u79bb$i$\u6700\u8fd1\u7684\u805a\u5c45\u5730\u662f\u4ec0\u4e48\uff0c$MIN[i]$\u8868\u793a$i$\u5230\u6700\u8fd1\u7684\u805a\u5c45\u5730\u7684\u8ddd\u79bb\u3002\u6211\u4eec\u7b2c\u4e00\u904ddfs\u5148\u627e\u51fa$i$\u5230\u5b83\u5b50\u6811\u5185\u7684\u805a\u5c45\u5730\u7684\u6700\u5c0f\u8ddd\u79bb\uff0c\u4e4b\u540e\u518d\u505a\u4e00\u904ddfs\u6765\u627e$i$\u5f80\u7956\u5148\u65b9\u5411\u540e\u5934\u8d70\u80fd\u8d70\u5230\u7684\u6700\u8fd1\u805a\u5c45\u5730\u7684\u8ddd\u79bb\u5373\u53ef\u3002**\n\n.\n\n\u89c2\u5bdf\u6570\u636e\u8303\u56f4\u540e\u53d1\u73b0\uff0c$\\sum m<=300000$\uff0c\u56e0\u6b64\u8003\u8651\u4f7f\u7528**\u865a\u6811**\u3002\n\n\u5efa\u51fa\u6765\u865a\u6811\u4e4b\u540e\uff0c\u663e\u7136\u5bf9\u4e8e\u5728\u865a\u6811\u4e0a\u7684\u70b9\uff0c\u6211\u4eec\u8fd8\u662f\u80fd\u76f4\u63a5\u66b4\u529b\u505a\uff0c\u95ee\u9898\u662f\u600e\u4e48\u5904\u7406\u975e\u865a\u6811\u4e0a\u7684\u70b9\u3002\n\n\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c**\u6211\u4eec\u865a\u6811\u4e0a\u7684\u4e00\u6761\u8fb9\u5728\u539f\u6811\u79cd\u5bf9\u5e94\u4e00\u6761\u94fe(\u5305\u62ec\u94fe\u4e0a\u7684\u5b50\u6811)\u3002**\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c**\u8fd9\u6761\u94fe\u4e0a\u7684\u70b9\u4e0a\u4e00\u5b9a\u662f\u4e0a\u534a\u90e8\u5206\u7684\u6700\u8fd1\u8ddd\u79bb\u5728\u4e0a\u9762\u90a3\u4e2a\u70b9\uff0c\u4e0b\u534a\u90e8\u5206\u7684\u6700\u8fd1\u8ddd\u79bb\u5728\u4e0b\u9762\u90a3\u4e2a\u70b9\u3002**\u56e0\u6b64\uff0c\u6211\u4eec\u8003\u8651\u7528\u500d\u589e\u7684\u601d\u60f3\u6765\u627e\u51fa\u8fd9\u4e2a\u201c\u5206\u754c\u70b9\u201d\uff0c\u627e\u5230\u540e\u8ba1\u7b97\u4e00\u4e0b\u4e0a\u4e0b\u5206\u522b\u8d21\u732e\u5373\u53ef\u3002\n\n\u8fd9\u91cc\u6709\u4e2a\u5c0f\u7ec6\u8282\uff0c\u6211\u4eec\u662f\u5728\u539f\u6811\u4e0a\u505a\u500d\u589e\u7684\uff0c\u56e0\u6b64**\u6211\u4eec\u500d\u589e\u8fc7\u7a0b\u4e2d\u4e0d\u5e94\u8be5\u4f7f\u7528\u8ddfDP\u6709\u5173\u7684\u91cf**\uff0c\u8fd9\u91cc\u7406\u8bba\u4e0a\u6211\u4eec\u53ea\u9700\u8981\u4f7f\u7528\u4e0a\u7aef\u70b9\u4e0e\u4e0b\u7aef\u70b9\u7684$f,MIN$\uff0c\u4ee5\u53ca\u6bcf\u4e2a\u70b9\u7684\u6df1\u5ea6\uff0c$fa$\u5373\u53ef\u5b9e\u73b0\u8fd9\u4e2a\u500d\u589e\u3002\n\n.\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(mlogn)$\n\n\u5c31\u9171\uff0c\u6211\u4eec\u5c31\u628a\u8fd9\u9898\u5207\u6389\u5566(*\u2267\u25bd\u2266)\n\n---\n# Code\n**\u672c\u9898\u7ec6\u8282\u8f83\u591a\uff0c\u8bf7\u5404\u4f4ddalao\u5c0f\u5fc3\u6162\u884c**\n\n~~\u76f4\u63a5\u4e24\u884c\u6cea\u5c31\u5b8c\u4e8b\u4e86~~\n\n**\u6570\u636e\u751f\u6210\u5668**\n\n[\u5728\u8fd9\u91cc](https://www.goldenpotato.cn/\u52a8\u6001\u89c4\u5212/luogu-p3233-hnoi2014\u4e16\u754c\u6811/)\n\n**\u6b63\u89e3**\n```cpp\n//Luogu P3233 [HNOI2014]\u4e16\u754c\u6811\n//Apr,1st,2019\n//\u865a\u6811+DP+\u500d\u589e\u795e\u9898\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nlong long read()\n{\n\tlong long x=0,f=1; char c=getchar();\n\twhile(!isdigit(c)){if(c=='-') f=-1;c=getchar();}\n\twhile(isdigit(c)){x=x*10+c-'0';c=getchar();}\n\treturn x*f;\n}\nconst int N=300000+1000;\nvector <int> e[N],e2[N];\nint n,q,a[N],b[N];\nint dfn[N],dfn_to,depth[N],fa[N][21],size[N];\nvoid dfs(int now)\n{\n\tdfn[now]=++dfn_to;\n\tsize[now]=1;\n\tfor(int i=1;i<=20;i++)\n\t\tfa[now][i]=fa[fa[now][i-1]][i-1];\n\tfor(int i=0;i<int(e[now].size());i++)\n\t\tif(dfn[e[now][i]]==0)\n\t\t{\n\t\t\tdepth[e[now][i]]=depth[now]+1;\n\t\t\tfa[e[now][i]][0]=now;\n\t\t\tdfs(e[now][i]);\n\t\t\tsize[now]+=size[e[now][i]];\n\t\t}\n}\nint LCA(int x,int y)\n{\n\tif(depth[x]<depth[y]) swap(x,y);\n\tfor(int i=20;i>=0;i--)\n\t\tif(depth[x]-(1<<i)>=depth[y])\n\t\t\tx=fa[x][i];\n\tif(x==y) return x;\n\tfor(int i=20;i>=0;i--)\n\t\tif(fa[x][i]!=fa[y][i])\n\t\t\tx=fa[x][i],y=fa[y][i];\n\treturn fa[x][0];\n}\nint cmp(int x,int y)\n{\n\treturn dfn[x]<dfn[y];\n}\nbool sp[N];\nint MIN[N],f[N],ans[N];\ninline int GetDis(int x,int y)\n{\n\tif(depth[x]<depth[y]) swap(x,y);\n\treturn depth[x]-depth[y];\n}\nvoid dfs2(int now)\n{\n\tif(sp[now]==true) \n\t\tf[now]=now,MIN[now]=0;\n\tfor(int i=0;i<int(e2[now].size());i++)\n\t{\n\t\tdfs2(e2[now][i]);\n\t\tif(MIN[e2[now][i]]+GetDis(e2[now][i],now) < MIN[now] \n\t\tor (MIN[e2[now][i]]+GetDis(e2[now][i],now)==MIN[now] and f[now]>f[e2[now][i]]))\n\t\t\tf[now]=f[e2[now][i]],MIN[now]=MIN[e2[now][i]]+GetDis(e2[now][i],now);\n\t}\n}\nvoid dfs3(int now,int fa) \n{\n\tif(fa!=0)\n\t{\n\t\tif(MIN[fa]+GetDis(fa,now) < MIN[now] \n\t\tor (MIN[fa]+GetDis(fa,now)==MIN[now] and f[now]>f[fa]))\n\t\t\tf[now]=f[fa],MIN[now]=MIN[fa]+GetDis(fa,now);\n\t}\n\tans[f[now]]++;\n\tfor(int i=0;i<int(e2[now].size());i++)\n\t\tdfs3(e2[now][i],now);\n}\nvoid GetSum(int x,int y,int &sum_x,int &sum_y)\n{\n\tbool IsSwap=false;\n\tif(depth[x]<depth[y]) IsSwap=true,swap(x,y);\n\tint sx=x,dis_x=MIN[x];\n\tfor(int i=20;i>=0;i--)\n\t\tif(dis_x+(1<<i) < MIN[y]+depth[x]-depth[y]-(1<<i))\n\t\t\tf[fa[x][i]]=f[x],\n\t\t\tx=fa[x][i],dis_x+=(1<<i);\n\tif(dis_x+1==MIN[y]+depth[x]-depth[y]-1 and f[x]<f[y])\n\t\tx=fa[x][0];\n\tsum_x=size[x]-size[sx];\n\tfor(int i=20;i>=0;i--)\n\t\tif(depth[sx]-(1<<i)>depth[y])\n\t\t\tsx=fa[sx][i];\n\tsum_y=size[sx]-size[x];\n\tif(IsSwap==true)\n\t\tswap(sum_x,sum_y);\n}\nvoid dfs4(int now)\n{\n\tint tmp=size[now]-1;\n\tfor(int i=0;i<int(e2[now].size());i++)\n\t{\n\t\tint sum1,sum2;\n\t\tGetSum(now,e2[now][i],sum1,sum2);\n\t\tans[f[now]]+=sum1,ans[f[e2[now][i]]]+=sum2;\n\t\ttmp-=(size[e2[now][i]]+sum1+sum2);\n\t\tdfs4(e2[now][i]);\n\t}\n\tans[f[now]]+=tmp;\n}\nint main()\n{\n\tfreopen(\"3233.in\",\"r\",stdin);\n\tfreopen(\"3233.out\",\"w\",stdout);\n\t\n\tn=read();\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint s=read(),t=read();\n\t\te[s].push_back(t);\n\t\te[t].push_back(s);\n\t}\n\t\n\tfa[1][0]=1;\n\tdfs(1);\n\t\n\tq=read();\n\tfor(int i=1;i<=q;i++)\n\t{\n\t\tint m=read();\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tb[j]=a[j]=read();\n\t\t\n\t\tsort(a+1,a+1+m,cmp);\n\t\tstatic int mstack[N],top,rec[N],cnt;\n\t\tcnt=0;\n\t\tmstack[top=1]=1;\n\t\tfor(int j=(a[1]==1?2:1);j<=m;j++)\n\t\t{\n\t\t\twhile(LCA(mstack[top],a[j])!=mstack[top])\n\t\t\t{\n\t\t\t\tint lca=LCA(mstack[top],a[j]);\n\t\t\t\tif(depth[lca]>depth[mstack[top-1]])\n\t\t\t\t{\n\t\t\t\t\te2[lca].push_back(mstack[top]);\n\t\t\t\t\trec[++cnt]=mstack[top],mstack[top]=lca;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\te2[mstack[top-1]].push_back(mstack[top]);\n\t\t\t\t\trec[++cnt]=mstack[top--];\n\t\t\t\t}\n\t\t\t}\n\t\t\tmstack[++top]=a[j];\n\t\t}\n\t\twhile(top>1)\n\t\t{\n\t\t\te2[mstack[top-1]].push_back(mstack[top]);\n\t\t\trec[++cnt]=mstack[top--];\n\t\t}\n\t\trec[++cnt]=1;\n\t\t\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tsp[a[j]]=true;\n\t\tfor(int j=1;j<=cnt;j++)\n\t\t\tMIN[rec[j]]=0x3f3f3f3f,ans[rec[j]]=0;\n\t\tdfs2(1); \n\t\tdfs3(1,0);\n\t\tdfs4(1);\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tprintf(\"%d \",ans[b[j]]);\n\t\tprintf(\"\\n\");\n\t\t\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tsp[a[j]]=false;\n\t\tfor(int j=1;j<=cnt;j++)\n\t\t\te2[rec[j]].clear(),ans[rec[j]]=0;\n\t}\n\treturn 0;\n}\n\n```\n\n\n\n\n",
        "postTime": 1554081186,
        "uid": 52563,
        "name": "GoldenPotato137",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3233 \u3010[HNOI2014]\u4e16\u754c\u6811\u3011"
    },
    {
        "content": "\u865a\u6811+\u6bd4\u8f83\u9ebb\u70e6\u7684dp\n\n\n\u4e00\u4e2a\u70b9x\u62e5\u6709\u7684\u70b9:sz[x]-sz[\u513f\u5b50]\n\n\nx,f[x] \u5206\u754c\u70b9p(p\u4e0a\u9762\u7684\u5c5e\u4e8ef[x])\n\n\u5219f[x]\u62e5\u6709\u7684\u70b9:sz[p\u65b9\u5411\u4e0a\u7684\u513f\u5b50]-sz[p]\n\nx\u62e5\u6709\u7684\u70b9:sz[p]-sz[x]\n\n\np\u4e0ex\u7684dis\n\n\ndis+dis[x]=(dis(f[x],x)-dis)+dis[y]\n\ndis=(dis(f[x],x)-dis[x]+dis[y])/2\n\ndp\u65f6,\u6bcf\u4e2a\u70b9\u8bb0\u5f55near[i] \u6700\u8fd1\u70b9,dis[i] \u4e0e\u5176\u8ddd\u79bb\n\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n\n#define N 300100\nint t[N];\nstruct edge\n{\n    int to,next;\n}l[2000000];int e;\nvoid add_e(int x,int y)\n{\n    l[++e]=(edge){y,t[x]};t[x]=e;\n}\n\nstruct tree\n{\n    int f[20],dep,sz,dfn;\n}T[N];int tot;\n\nvoid dfs(int x,int f,int dep)\n{\n    T[x].sz=1;T[x].dep=dep;\n    T[x].f[0]=f;\n    T[x].dfn=++tot;\n    int i,y;\n    for (i=0,y=f;y=T[y].f[i];T[x].f[++i]=y);\n    \n    ++dep;\n    for (i=t[x];i;i=l[i].next)\n    if ((y=l[i].to)!=f)\n    {\n      dfs(y,x,dep);\n      T[x].sz+=T[y].sz; \n    }\n}\n\nint jump(int x,int l)\n{\n    for (int i=0;l;++i,l>>=1)\n    if (l&1) x=T[x].f[i];\n    return x;\n}\n\nint get_lca(int x,int y)\n{\n    if (T[x].dep<T[y].dep) swap(x,y);\n    x=jump(x,T[x].dep-T[y].dep);\n    if (x==y) return x;\n    for (int i=19;i>=0;--i)\n    if (T[x].f[i]!=T[y].f[i])\n    {\n        x=T[x].f[i];y=T[y].f[i];\n    }\n    return T[x].f[0];\n} \n\nbool dfn_xiao(int x,int y)\n{\n    return T[x].dfn<T[y].dfn;\n}\nint i,x,y;\nint q0[N],q[N],num0,num;\nint st[N],top;\nstruct xutree\n{\n    int f;\n    bool d;\n}_T[N];\nint near[N],dis[N],sz[N];\nvoid build()\n{\n    sort(q+1,q+num+1,dfn_xiao);\n    st[top=1]=q[1];\n    _T[q[1]]=(xutree){0,1};\n    for (i=2;i<=num0;++i)\n    {\n        x=q[i];\n        int lca=get_lca(y=st[top],x);\n        if (lca!=y)\n        {\n          while (T[lca].dep<T[st[top]].dep) y=st[top--];\n          if (st[top]!=lca)\n          {\n            _T[y].f=lca;\n            _T[lca]=(xutree){st[top],0};\n            st[++top]=lca;q[++num]=lca;\n          }\n        }\n        _T[x]=(xutree){st[top],1};st[++top]=x;\n    }\n    sort(q+1,q+num+1,dfn_xiao);\n}\n\nvoid upd(int _dis,int _near,int y)\n{\n    if (_dis<dis[y]||_dis==dis[y]&&_near<near[y])\n    {\n        dis[y]=_dis;near[y]=_near; \n    }\n}\n\nint n;\nint ans[N];\nvoid dp()\n{\n    int _dis;\n    for (i=1;i<=num;++i) \n    {\n        x=q[i];\n        sz[x]=T[x].sz;\n        if (_T[x].d) {near[x]=x;dis[x]=0;}\n        else dis[x]=1<<30;  \n    }\n    for (i=num;i>1;--i)\n    {\n        x=q[i];y=_T[x].f;\n        _dis=dis[x]+T[x].dep-T[y].dep;\n        upd(_dis,near[x],y);\n    }\n    for (i=2;i<=num;++i)\n    {\n        x=q[i];y=_T[x].f;\n        _dis=dis[y]+T[x].dep-T[y].dep;\n        upd(_dis,near[y],x);\n    }\n    \n    int k;\n    for (i=num;i>1;--i)\n    {\n        x=q[i];y=_T[x].f;\n        k=jump(x,T[x].dep-T[y].dep-1);\n        sz[y]-=T[k].sz;\n    }\n    \n    x=q[1];\n    ans[near[x]]=sz[x]+n-T[x].sz;\n    for (i=2;i<=num;++i)\n    {\n        x=q[i];\n        ans[near[x]]+=sz[x];\n        y=_T[x].f;k=jump(x,T[x].dep-T[y].dep-1);\n        if (near[y]==near[x]) ans[near[x]]+=T[k].sz-T[x].sz;\n        else\n        {\n            _dis=T[x].dep-T[y].dep-dis[x]+dis[y];\n            if (_dis&1) _dis>>=1; else\n            if (near[x]<near[y]) _dis>>=1;\n            else (_dis>>=1)-=1;\n            \n            int p=jump(x,_dis);\n            ans[near[x]]+=T[p].sz-T[x].sz;\n            ans[near[y]]+=T[k].sz-T[p].sz; \n        }\n    }\n}\n\nint main()\n{\n    freopen(\"1.in\",\"r\",stdin);\n    \n    scanf(\"%d\",&n);\n    for (i=1;i<n;++i) \n    {scanf(\"%d%d\",&x,&y);\n     add_e(x,y);add_e(y,x);\n    }\n    \n    dfs(1,0,1);\n    \n    int m;\n    scanf(\"%d\",&m); \n    while (m--)\n    {\n        scanf(\"%d\",&num);num0=num;\n        for (i=1;i<=num;++i) {scanf(\"%d\",q+i);q0[i]=q[i];}\n        build();\n        dp();\n        for (i=1;i<=num0;++i) {printf(\"%d \",ans[q0[i]]);ans[q0[i]]=0;}\n        printf(\"\\n\");\n    }\n}\n```",
        "postTime": 1484810383,
        "uid": 9168,
        "name": "kczno1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3233 \u3010[HNOI2014]\u4e16\u754c\u6811\u3011"
    },
    {
        "content": "\u672c\u9898\u8981\u5efa\u865a\u6811\u662f\u663e\u7136\u7684\uff0c\u5efa\u865a\u6811\u590d\u6742\u5ea6\u662f $O(n)$ (\u56e0\u4e3a $n$ \u548c $\\sum m$ \u540c\u7ea7\uff0c\u6240\u4ee5\u4ee5\u4e0b\u5168\u90e8\u7528 $n$ \u4ee3\u66ff)\u3002\u8003\u8651\u6211\u4eec\u5efa\u5b8c\u865a\u6811\u4e4b\u540e\u5982\u4f55 $dp$ \u3002\u81f3\u4e8e\u4e0d\u4f1a\u5982\u4f55\u5efa\u865a\u6811\u7684\uff0c\u5efa\u8bae\u505a\u4e00\u4e0b\u8fd9\u9898 [[SDOI2011]\u6d88\u8017\u6218](https://www.luogu.com.cn/problem/P2495)\n\n\u9996\u5148\u6c42\u51fa\u6bcf\u4e2a\u865a\u6811\u4e0a\u7684\u70b9\u88ab\u54ea\u4e9b\u70b9\u63a7\u5236\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u4e24\u6b21 $dfs$ \uff0c\u4e00\u6b21\u6c42\u5b50\u6811(\u865a\u6811\u5b50\u6811)\u5185\u7684\u8d21\u732e\uff0c\u6b64\u6b21\u4e3a\u81ea\u4e0b\u800c\u4e0a\u66f4\u65b0\uff0c\u7b2c\u4e8c\u6b21\u6c42\u5b50\u6811\u5916\u5bf9\u81ea\u5df1\u7684\u8d21\u732e\uff0c\u6b64\u6b21\u4e3a\u81ea\u4e0a\u800c\u4e0b\u66f4\u65b0\u3002\u8fd9\u4e24\u6b65\u64cd\u4f5c\u662f $o(n)$\u7684\u3002\n\n\u5904\u7406\u5b8c\u4e86\u865a\u6811\u4e0a\u7684\u70b9\uff0c\u63a5\u4e0b\u6765\u8003\u8651\u865a\u6811\u8fb9\u4e0a\u7684\u70b9(\u5305\u62ec\u865a\u8fb9\u5728\u5b9e\u6811\u91cc\u5bf9\u4e8e\u4e00\u6bb5\u8def\u5f84\u53ca\u5176\u5206\u652f\u6784\u6210\u7684\u6811)\u7684\u8d21\u732e\uff1a\u5f53\u865a\u8fb9\u4e24\u7aef\u70b9\u88ab\u76f8\u540c\u7684\u5173\u952e\u70b9\u63a7\u5236\uff0c\u5373\u865a\u8fb9\u5168\u90e8\u5f52\u540c\u4e00\u4e2a\u5173\u952e\u70b9\u63a7\u5236\uff0c\u500d\u589e\u5230\u4e0a\u7aef\u70b9\u4e0b\u7aef\u7684\u7b2c\u4e00\u4e2a\u5b9e\u70b9\u6c42\u8fd9\u4e00\u6bb5\u6784\u6210\u7684\u6811\u4e0a\u7684\u8282\u70b9\u6570\uff1b\u5f53\u865a\u8fb9\u4e24\u7aef\u70b9\u88ab\u4e0d\u540c\u7684\u5173\u952e\u70b9\u63a7\u5236\uff0c\u90a3\u5fc5\u7136\u5b58\u5728\u4e00\u4e2a\u5206\u754c\u70b9\uff0c\u5206\u754c\u70b9\u4e0a\u7aef\u5f52\u4e0a\u7aef\u70b9\u7684\u63a7\u5236\u70b9\u63a7\u5236\uff0c\u4e0b\u7aef\u5f52\u4e0b\u7aef\u70b9\u7684\u63a7\u5236\u70b9\u63a7\u5236\uff0c\u8fd9\u91cc\u901a\u8fc7\u500d\u589e\u627e\u5206\u754c\u70b9\u3002\u8fd9\u4e00\u6b65\u590d\u6742\u5ea6\u662f $O(nlogn)$ \u3002\n\n\u6700\u540e\uff0c\u5c31\u662f\u90a3\u4e9b\u5373\u4e0d\u5728\u8fb9\u4e0a\u4e5f\u4e0d\u5728\u865a\u6811\u4e0a\u7684\u70b9\u3002\u6211\u4eec\u8003\u8651\u8fd9\u4e9b\u70b9\u5728\u54ea\u4e9b\u865a\u6811\u4e0a\u70b9\u7684\u5b50\u6811\u4e2d(\u5efa\u865a\u6811\u7684\u65f6\u5019\u52a0\u5165 $1$ \u53f7\u8282\u70b9\uff0c\u4fdd\u8bc1\u6240\u6709\u8282\u70b9\u90fd\u88ab\u5b58\u5728\u4e8e\u865a\u6811\u4e0a\u4e00\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u4e2d)\uff0c\u5bf9\u4e8e\u865a\u6811\u4e0a\u4e00\u4e2a\u70b9\uff0c\u6211\u4eec\u628a\u5b83\u5b50\u6811\u4e2d\u5b58\u5728\u4e8e\u865a\u6811\u4e2d\u7684\u8282\u70b9(\u6216\u865a\u8fb9\u4e0a\u7684\u70b9)\u5168\u90e8\u51cf\u53bb\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u90a3\u4e9b\u6700\u7ec8\u9700\u8981\u7edf\u8ba1\u7684\u8d21\u732e\u3002\u8fd9\u4e00\u6b65\u7684\u65f6\u95f4\u590d\u6742\u5ea6 $O(nlogn)$ \u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(nlogn)$ \u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define re register\n#define ll long long\n#define LL inline ll\n#define I inline int\n#define V inline void\n#define B inline bool\n#define FOR(i,a,b) for(re int i=(a),i##i=(b);i<=i##i;++i)\n#define ROF(i,a,b) for(re int i=(a),i##i=(b);i>=i##i;--i)\n#define REP(i,u) for(re int i=hd[u],v=ed[i].to;i;i=ed[i].nx,v=ed[i].to)\n//#define gc getchar()\n#define gc (fs==ft&&(ft=(fs=buf)+fread(buf,1,1<<18,stdin),ft==fs))?0:*fs++\n#define fs first\n#define sc second\nusing namespace std;\nchar *fs,*ft,buf[1<<18];\nconst int N=3e5+10,inf=1e9+7;\nLL read(){\n\tll p=0; bool w=0; char ch=gc;\n\twhile(!isdigit(ch)) w=ch=='-'?1:0,ch=gc;\n\twhile(isdigit(ch)) p=p*10+ch-'0',ch=gc;\n\treturn w?-p:p;\n}\nstruct ao{\n\tint nx,to;\n}ed[N];\nstruct in{\n\tint w,id;\n}a[N];\nvector<int>tr[N];\nint n,q,m,fl,id;\nint ans[N],as[N];\nint dfn[N],vis[N],siz[N],hd[N],fa[N][21],dep[N],s[N],tp;\nV add(int u,int v){ ed[++fl]=(ao){hd[u],v},hd[u]=fl;}\nV dfs1(int u){\n\tdfn[u]=++id,siz[u]=1;\n\tint z=tr[u].size(),v=0;\n\tFOR(i,0,z-1){\n\t\tv=tr[u][i];\n\t\tif(v==fa[u][0]) continue;\n\t\tfa[v][0]=u,dep[v]=dep[u]+1;\n\t\tdfs1(v),siz[u]+=siz[v];\n\t}\n\treturn ;\n}\nI lca(int x,int y){\n\tif(dep[x]<dep[y]) swap(x,y);\n\tROF(k,18,0) if(dep[fa[x][k]]>=dep[y]&&fa[x][k]) x=fa[x][k];\n\tif(x==y) return x;\n  \tROF(k,18,0) if(fa[x][k]!=fa[y][k]&&fa[x][k]) x=fa[x][k],y=fa[y][k];\n    return fa[x][0];\n}\ntypedef pair<int,int> PI;\nPI f[N];\nint ff[N],sz[N];\nV dfs2(int u){\n\tif(vis[u]) f[u]=make_pair(0,u);\n\tPI tmp;\n\tREP(i,u) dfs2(v),tmp=f[v],tmp.fs+=dep[v]-dep[u],f[u]=min(f[u],tmp);\n\treturn ;\n} \nV dfs3(int u,int dis,int p){\n\tif(make_pair(dis,p)<f[u]) f[u]=make_pair(dis,p);\n\telse dis=f[u].fs,p=f[u].sc;\n\tREP(i,u) dfs3(v,dis+dep[v]-dep[u],p);\n}\nI get(int u){\n\tint x=u;\n\tROF(k,18,0) if(dep[fa[x][k]]>dep[ff[u]]&&fa[x][k]) x=fa[x][k];\n\treturn x;\n}\nV dfs4(int u){\n\tint x=u;\n\tREP(i,u) dfs4(v);\n\tif(fl&&ff[u]) x=get(u),sz[ff[u]]+=siz[x];\n\treturn ;\n}\nV dfs5(int u){\n\tans[f[u].sc]+=siz[u]-sz[u];\n\tREP(i,u) dfs5(v);\n}\nV dfs6(int u){\n\tint x,y;\n\tPI tmp1,tmp2;\n\tREP(i,u){\n\t\tif(f[u]==f[v]) x=get(v),ans[f[u].sc]+=siz[x]-siz[v];\n\t\telse{\n\t\t\tx=v;\n\t\t\tROF(k,18,0){\n\t\t\t\tif(dep[fa[x][k]]<dep[u]||!fa[x][k]) continue;\n\t\t\t\ttmp1=f[v],tmp1.fs+=dep[v]-dep[fa[x][k]];\n\t\t\t\ttmp2=f[u],tmp2.fs+=dep[fa[x][k]]-dep[u];\n\t\t\t\tif(tmp1<tmp2) x=fa[x][k];\n\t\t\t}\n\t\t\ty=get(v);\n\t\t\tans[f[u].sc]+=siz[y]-siz[x];\n\t\t\tans[f[v].sc]+=siz[x]-siz[v];\n\t\t}\n\t\tdfs6(v);\n\t}\n\treturn ;\n}\nB cmp(in x,in y){ return dfn[x.w]<dfn[y.w];}\nint sck[N],cnt;\nint main(){\n\tint x,y;\n\tn=read();\n\tFOR(i,2,n)\tx=read(),y=read(),\\\n\t\t\t\ttr[x].push_back(y),\\\n\t\t\t\ttr[y].push_back(x);\n\tdfs1(1);\n\tFOR(k,1,18) FOR(i,1,n) fa[i][k]=fa[fa[i][k-1]][k-1];\n\tq=read();\n\tFOR(i,1,n) f[i]=make_pair(inf,inf);\n\tFOR(i,1,q){\n\t\tm=read();\n\t\tFOR(j,1,m) a[j].w=read(),vis[a[j].w]=1,a[j].id=j;\n\t\tsort(a+1,a+1+m,cmp);\n\t\ts[tp=1]=1,sck[cnt=1]=1,fl=0;\n\t\tFOR(j,1,m){\n\t\t\tint x=a[j].w,y=lca(x,s[tp]);\n\t\t\tif(x==1) continue;\n\t\t\tsck[++cnt]=x,sck[++cnt]=y;\n\t\t\twhile(tp>1&&dep[s[tp-1]]>=dep[y]) \n\t\t\tadd(s[tp-1],s[tp]),ff[s[tp]]=s[tp-1],--tp;\n\t\t\tif(s[tp]!=y) add(y,s[tp]),ff[s[tp]]=y,s[tp]=y;\n\t\t\ts[++tp]=x;\n\t\t}\n\t\twhile(tp>1) add(s[tp-1],s[tp]),ff[s[tp]]=s[tp-1],--tp;\n\t\tdfs2(1);\n\t\tdfs3(1,f[1].fs,f[1].sc);\n\t\tdfs4(1);\n\t\tdfs5(1);\n\t\tdfs6(1);\n\t\tFOR(j,1,m) as[a[j].id]=ans[a[j].w];\n\t\tFOR(j,1,m) printf(\"%d \",as[j]);\n\t\tprintf(\"\\n\");\n\t\tFOR(j,1,cnt)\tvis[sck[j]]=hd[sck[j]]=0,\\\n\t\t\t\t\t\tsz[sck[j]]=ans[sck[j]]=ff[sck[j]]=0,\\\n\t\t\t\t\t\tf[sck[j]]=make_pair(inf,inf);\n\t\tsz[0]=0;\n\t}\n\treturn 0;\n}\n}\n```\n",
        "postTime": 1605855086,
        "uid": 242478,
        "name": "xin_chen",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3233 \u3010[HNOI2014]\u4e16\u754c\u6811\u3011"
    },
    {
        "content": "~~\u8fd9\u9053\u9898\u7ec6\u8282\u662f\u771f\u7684\u591a~~\n\n\u770b\u6570\u636e\u8303\u56f4\uff0c\u8fd9\u5e94\u8be5\u662f\u4e00\u9053\u865a\u6811DP\uff0c\u6211\u4eec\u5148\u6765\u60f3\u4e00\u4e0b\u4e0d\u7528\u865a\u6811\u600e\u4e48\u505a\n\n\u6211\u4eec\u5b9a\u4e49$id[i]$\u4e3a\u7b2ci\u4e2a\u70b9\u5e94\u8be5\u5f52\u54ea\u4e00\u4e2a\u8bae\u4e8b\u5904\u7ba1\u7406\uff0c\u4e14i\u5230$id[i]$\u7684\u8ddd\u79bb\u4e3a$dis[i]$\n\n\u6211\u4eec\u505a\u4e24\u904ddfs\uff0c\u9996\u5148\u4ece\u4e0b\u5230\u4e0a\uff0c\u7528\u513f\u5b50\u66f4\u65b0\u7236\u4eb2\uff0c\u518d\u4ece\u4e0a\u5230\u4e0b\uff0c\u7528\u7236\u4eb2\u66f4\u65b0\u513f\u5b50\n\n\u66f4\u65b0\u8fc7\u7a0b\u5341\u5206\u7b80\u5355\uff0c\u5c31\u7c7b\u4f3c\u4e8e\u91cd\u94fe\u5256\u5206\u7684\u601d\u8def\u53bb\u66f4\u65b0\u5c31\u597d\u4e86\n\n\u7136\u540e\u8fd9\u91cc\u8981\u6ce8\u610f\u7b2c\u4e00\u4e2a\u7ec6\u8282\uff0c\u5c31\u662f\u5fc5\u987b\u5148\u7528\u513f\u5b50\u66f4\u65b0\u7236\u4eb2\uff0c\u518d\u7528\u7236\u4eb2\u66f4\u65b0\u513f\u5b50\uff0c\u56e0\u4e3a\u5982\u679c\u4e0d\u8fd9\u4e48\u505a\u7684\u8bdd\u4e00\u4e2a\u7236\u4eb2\u53ef\u80fd\u6709\u591a\u4e2a\u513f\u5b50\uff0c\u6240\u4ee5\u5148\u66f4\u65b0\u513f\u5b50\u7684\u8bdd\u8be5\u513f\u5b50\u7684'\u5144\u5f1f'\u4e0d\u4f1a\u66f4\u65b0\u5230\uff08\u753b\u753b\u56fe\u5c31\u7406\u89e3\u4e86\uff09\n\n\u66b4\u529bDP\u5c31\u662f\u8fd9\u4e48\u505a\uff0c\u90a3\u5982\u679c\u653e\u5728\u865a\u6811\u4e0a\u5462\uff1f\n\n\u5bf9\u4e8e\u865a\u6811\u4e0a\u7684\u70b9\uff0c\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u6309\u7167\u4e0a\u8ff0\u66b4\u529bDP\u65b9\u5f0f\u6765\u505a\n\n\u90a3\u4e48\u975e\u865a\u6811\u4e0a\u7684\u70b9\u5462\uff1f\n\n\u9996\u5148\u865a\u6811\u662f\u4fdd\u8bc1\u4e86\u4e24\u4e2a\u76f8\u90bb\u7684\u6811\u70b9\u5728\u539f\u6811\u4e2d\u5b9e\u5728\u4e00\u6761\u94fe\u4e0a\u7684\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u91cc\u7528\u500d\u589e\u7684\u601d\u60f3\uff0c\u6c42\u51fa\u4e24\u4e2a\u76f8\u90bb\u865a\u6811\u70b9\u7684\u5206\u754c\u70b9\uff0c\u5206\u754c\u70b9\u4ee5\u4e0a\u5f52\u4e0a\u9762\u7684\u70b9\u7ba1\u7406\uff0c\u5206\u754c\u70b9\u4e00\u4e0b\u540c\u7406\n\n\u7531\u4e8e\u6211\u4eec\u8fd8\u8981\u4fdd\u8bc1\u7f16\u53f7\u6700\u5c0f\uff0c\u6240\u4ee5\u8fd9\u5c31\u662f\u672c\u9898\u7b2c\u4e8c\u4e2a\u5751\u70b9\uff1a\u6211\u4eec\u9700\u8981\u5224\u65ad\u4e24\u4e2a\u865a\u6811\u70b9id\u503c\u7684\u5927\u5c0f\n\n\u5177\u4f53\u5b9e\u73b0\u4e2d\u6211\u4eec\u53ef\u4ee5\u628a\u5206\u754c\u5904\u4ee5\u4e0b\u7684\u70b9\u67d3\u6210\u4e00\u79cd\u65b0\u7684\u989c\u8272\uff0c\u7136\u540e\u9012\u5f52\u5904\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u4fdd\u8bc1\u5148\u5904\u7406\u6df1\u5ea6\u5c0f\u7684\u70b9\u518d\u5904\u7406\u6df1\u5ea6\u5927\u7684\u70b9\n\n\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u505a\u5462\uff1f\n\n\u56e0\u4e3a\u5206\u754c\u70b9\u4ee5\u4e0b\u7684\u70b9\u5df2\u7ecf\u4e0d\u5f52\u4e0a\u65b9\u5173\u952e\u70b9\u7ba1\u8f96\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u79cd\u65b0\u7684\u989c\u8272\u8986\u76d6\u70b9\u539f\u6765\u7684\u989c\u8272\uff0c\u8868\u793a\u88ab\u4e00\u4e2a\u65b0\u70b9\u5360\u9886\u4e86\n\n[\u697c\u4e0a$chenkehan$\u5927\u4f6c](https://www.luogu.org/blog/ILikeDuck/solution-p3233)\u7ed9\u4e86\u5341\u5206\u5f62\u8c61\u7684\u56fe\u7247\n\n\u4e8e\u662f\u5c31\u53ef\u4ee5~~\u6109\u5feb~~\u7684\u7801\u7801\u7801\u4e86\n\n## \u732e\u4e0a\u5341\u5206\u4e11\u964b\u7684\u4ee3\u7801\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define il inline\n#define re register\nil int read() {\n    re int x = 0, f = 1; re char c = getchar();\n    while(c < '0' || c > '9') { if(c == '-') f = -1; c = getchar();}\n    while(c >= '0' && c <= '9') x = x * 10 + c - 48, c = getchar();\n    return x * f;\n}\n#define rep(i, s, t) for(re int i = s; i <= t; ++ i)\n#define drep(i, s, t) for(re int i = t; i >= s; -- i)\n#define Next(i, u) for(re int i = head[u]; i; i = e[i].next)\n#define _ 300005\nint n, m, Q, top[_], Top, st[_], son[_], size[_], dep[_], dfn[_], tot, cnt, head[_];\nint id[_], ans[_], f[25][_], dis[_], vis[_], Size[_];\nstruct node {int a, id;}q[_];\nstruct edge {int v, next, w;}e[_ << 1];\nil bool cmp(node a, node b) {return dfn[a.a] < dfn[b.a];}\nil bool cmp1(node a, node b) {return a.id < b.id;}\nil void add(int u, int v, int w) {\n\te[++ cnt] = (edge){v, head[u], w}, head[u] = cnt;\n\te[++ cnt] = (edge){u, head[v], w}, head[v] = cnt;\n}\nil void dfs1(int u, int fr) {\n\tf[0][u] = fr, dep[u] = dep[fr] + 1, size[u] = 1, dfn[u] = ++ tot;\n\tNext(i, u) if(e[i].v != fr) dfs1(e[i].v, u), size[u] += size[e[i].v];\n}\nil int LCA(int a, int b) {\n\tif(dep[a] < dep[b]) swap(a, b);\n\tdrep(i, 0, 20) if(dep[a] - (1 << i) >= dep[b]) a = f[i][a];\n\tdrep(i, 0, 20) if(f[i][a] != f[i][b]) a = f[i][a], b = f[i][b];\n\treturn (a == b) ? a : f[0][a];\n}\nil int Dis(int a, int b) {return dep[a] + dep[b] - dep[LCA(a, b)] * 2;}\nil void insert(int x) {\n\tif(Top == 1 && x != 1) return (void)(st[++ Top] = x);\n\tint lca = LCA(st[Top], x);\tif(lca == x) return;\n\twhile(Top > 1 && dep[st[Top - 1]] > dep[lca]) \n\t\tadd(st[Top - 1], st[Top], Dis(st[Top - 1], st[Top])), -- Top;\n\tif(dep[st[Top]] > dep[lca]) add(st[Top], lca, Dis(st[Top], lca)), -- Top;\n\tif(dep[st[Top]] < dep[lca]) st[++ Top] = lca;\n\tst[++ Top] = x;\n}\nil void dfs_mem(int u, int fr) {\n\tNext(i, u) if(e[i].v != fr) dfs_mem(e[i].v, u);\n\thead[u] = vis[u] = id[u] = dis[u] = Size[u] = ans[u] = 0;\n}\nil int get_fa(int u, int dis) {\n\tint now = 0;\n\tdrep(i, 0, 20) if(now + (1 << i) <= dis) now += (1 << i), u = f[i][u];\n\treturn u;\n}\nil void dfs_get(int u, int fr) {\n\tif(vis[u]) dis[u] = 0, id[u] = u, Size[u] = size[u];\n\telse dis[u] = 123456789, Size[u] = size[u];\n\tNext(i, u) {\n\t\tint v = e[i].v, w = e[i].w;  if(v == fr) continue;\n\t\tdfs_get(v, u), w += dis[v];\n\t\tif(dis[u] > w || (dis[u] == w && id[u] > id[v])) dis[u] = w, id[u] = id[v];\n\t}\n}\nil void dfs1_get(int u, int fr) {\n\tNext(i, u) {\n\t\tint v = e[i].v, w = dis[u] + e[i].w;  if(v == fr) continue;\n\t\tif(w < dis[v] || (w == dis[v] && id[v] > id[u])) dis[v] = w, id[v] = id[u];\n\t\tdfs1_get(v, u);\n\t\tif(id[u] == id[v]) Size[u] -= size[v];\n\t\telse {\n\t\t\tint x = get_fa(v, (dis[v] + dis[u] + e[i].w + (id[u] > id[v]) - 1) / 2 - dis[v]);//Attention: (dep[x] - dep[y])\u5373e[i].w\u7684\u610f\u4e49\u662f\u7ecf\u8fc7\u7684\u8fb9\u7684\u6570\u91cf\uff01\u6211\u5c31\u662f\u56e0\u4e3a\u8fd9\u91cc\u8c03\u4e86**\u7684\n\t\t\tSize[v] += size[x] - size[v], Size[u] -= size[x];\n\t\t}\n        ans[id[v]] += Size[v];\n\t}\n\tif(u == 1) ans[id[1]] += Size[1];\n}\nint main() {\n\tn = read();\n\trep(i, 1, n - 1) add(read(), read(), 0);\n\tQ = read(), dfs1(1, 1), memset(head, 0, sizeof(head));\n\trep(i, 1, 20) rep(j, 1, n) f[i][j] = f[i - 1][f[i - 1][j]];\n\twhile(Q --) {\n\t\tm = read(), st[Top = 1] = 1, cnt = 0;\n\t\trep(i, 1, m) q[i].a = read(), vis[q[i].a] = 1, q[i].id = i;\n\t\tsort(q + 1, q + m + 1, cmp);\n\t\trep(i, 1, m) insert(q[i].a);\n\t\twhile(Top > 1) add(st[Top - 1], st[Top], Dis(st[Top - 1], st[Top])), -- Top;\n\t\tdfs_get(1, 0), dfs1_get(1, 0), sort(q + 1, q + m + 1, cmp1);\n\t\trep(i, 1, m) printf(\"%d \", ans[q[i].a]);\n\t\tputs(\"\"), dfs_mem(1, 0);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1569854428,
        "uid": 57014,
        "name": "Nemlit",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3233 \u3010[HNOI2014]\u4e16\u754c\u6811\u3011"
    },
    {
        "content": "> [**\u9898\u76ee\u4f20\u9001\u95e8**](https://www.luogu.com.cn/problem/P3233)\n\n> [\u63a8\u9500](https://www.cnblogs.com/Varuxn/p/14902295.html)\n\n## \u89e3\u9898\u601d\u8def\n\u6b63\u89e3\u5f53\u7136\u662f**\u865a\u6811**\u4e86\u3002\n\n\u9996\u5148\u5bf9\u4e8e\u539f\u6811\u4ee5\u53ca\u865a\u6811\u5404\u5f00\u4e00\u4e2a\u7ed3\u6784\u4f53\u5b58\u8fb9\uff0c\u8fd9\u4e2a\u4e0d\u7528\u591a\u8bf4\u3002\n\n\u7136\u540e\u6211\u4eec\u5148 **DFS** \u4e00\u904d\uff0c\u6c42\u51fa\u5404\u4e2a\u8282\u70b9\u7684\u65f6\u95f4\u6233\uff0c\u5b50\u6811\u5927\u5c0f\uff0c\u6df1\u5ea6\u4ee5\u53ca\u7236\u4eb2\u8282\u70b9\uff0c\u5e76\u521d\u59cb\u5316\u500d\u589e LCA \u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u90fd\u5efa\u4e00\u68f5\u865a\u6811\uff08\u6ce8\u610f\u6570\u7ec4\u7684\u6e05\u7a7a\uff09\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u6b64\u540e\u64cd\u4f5c\u7684 DFS \u90fd\u4ece 1 \u8282\u70b9\u5f00\u59cb\uff0c\u5982\u679c 1 \u8282\u70b9\u4e0d\u662f\u4e34\u65f6\u8bae\u4e8b\u5904\uff0c\u6211\u4eec\u4e5f\u628a\u5b83\u7ed9\u52a0\u5165\u5230\u865a\u6811\u4e2d\u5e76\u505a\u4e00\u4e0b\u6807\u8bb0\u3002\n\n\u663e\u7136\uff0c\u5728\u5efa\u865a\u6811\u4e4b\u524d\uff0c\u8981\u5148\u628a\u6240\u6709\u7684\u4e34\u65f6\u8bae\u4e8b\u5904\u6309\u7167\u65f6\u95f4\u6233**\u6392\u5e8f**\uff0c\u7136\u540e\u5efa\u865a\u6811\u3002\n\n\u6b64\u540e\u6ca1\uff0c\u6211\u4eec\u8fdb\u884c\u4e24\u904d DFS :\n\n* \u7b2c\u4e00\u904d\uff1a\u7528\u4e8e\u66f4\u65b0\u865a\u6811\u4e2d\u6240\u6709\u8282\u70b9\u7684 dp \u4ee5\u53ca\u5176\u6240\u5c5e\u7684\u4e34\u65f6\u8bae\u4e8b\u5904\u3002\n\t\n    \u56e0\u4e3a\u865a\u6811\u7684\u6df1\u5ea6\u8f83\u5c0f\u7684\u70b9\u4e0d\u4e00\u5b9a\u662f\u4e34\u65f6\u8bae\u4e8b\u5904\uff0c\u800c\u6240\u6709\u7684\u53f6\u5b50\u8282\u70b9\u4e00\u5b9a\u662f\u4e34\u65f6\u8bae\u4e8b\u5904\u3002\n    \n    \u6240\u4ee5\uff0c\u5148\u904d\u5386\u5230\u53f6\u5b50\u8282\u70b9\uff0c\u518d\u7528\u53f6\u5b50\u8282\u70b9\u6765\u66f4\u65b0\u7236\u4eb2\u8282\u70b9\u3002\n    \n* \u7b2c\u4e8c\u904d\uff1a\u5229\u7528\u6240\u6709\u7684\u865a\u6811\u4e2d\u7684\u503c\u8fdb\u800c\u6c42\u51fa\u539f\u6811\u4e2d\u7684\u503c\u3002\n\t\n\t1. \u5982\u679c\u5b50\u6811\u4e2d\u6ca1\u6709\u4e34\u65f6\u8bae\u4e8b\u5904\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8282\u70b9\u7ba1\u8f96\u7684\u70b9\u6570\u5c31\u8981\u52a0\u4e0a\u5b50\u6811\u7684siz\u3002\n    \n    2. \u5728\u539f\u6811\u4e0a\u662f\u4e00\u6761\u94fe\uff0c\u5e76\u4e14\u4e24\u7aef\u90fd\u662f\u4e34\u65f6\u8bae\u4e8b\u5904\uff0c\u90a3\u4e48\u76f4\u63a5\u4e00\u534a\u4e00\u534a\u5206\u5c31\u597d\u4e86\u3002\n    \n    * \u6ce8\u610f\uff1a\u6b64\u8fc7\u7a0b\u4e5f\u9700\u8981\u66f4\u65b0\u865a\u6811\u4e0a\u70b9\u7684 dp \u503c\u4ee5\u53ca\u6240\u5c5e\u4e34\u65f6\u8bae\u4e8b\u5904\uff0c\u4f46\u662f\u4e0d\u540c\u4e0e\u7b2c\u4e00\u6b21 DFS \u7684\u662f\u7531\u7236\u4eb2\u8282\u70b9\u66f4\u65b0\u53f6\u5b50\u8282\u70b9\u3002\n\n\u6700\u540e\u8f93\u51fa\u65f6\u6ce8\u610f\u5224\u65ad 1 \u8282\u70b9\u662f\u5426\u662f\u4e34\u65f6\u8bae\u4e8b\u5904\u5c31\u597d\u4e86\u3002\n\n## code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=3e5+10,M=N<<1,INF=1e9;\nint n,m,Q,tim,s[N],dp[N],g[N],dfn[N],q[N],ans[N],f[N][25],siz[N],dep[N];\nint top,sta[N];\nbool flag,vis[N];\nstruct Edge\n{\n\tint tot,head[N],nxt[M],ver[M];\n\tvoid add(int x,int y)\n\t{\n\t\tver[++tot]=y;\n\t\tnxt[tot]=head[x];\n\t\thead[x]=tot;\n\t}\n}e1,e2;\nvoid dfs(int x,int fat)\n{\n\tf[x][0]=fat;\n\tsiz[x]=1;\n\tdfn[x]=++tim;\n\tfor(int i=e1.head[x];i;i=e1.nxt[i])\n\t{\n\t\tint to=e1.ver[i];\n\t\tif(to==fat)\n\t\t\tcontinue;\n\t\tdep[to]=dep[x]+1;\n\t\tdfs(to,x);\n\t\tsiz[x]+=siz[to];\n\t}\n}\nvoid LCA_init()\n{\n\tdep[1]=1;\n\tdfs(1,0);\n\tfor(int i=1;i<=20;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tf[j][i]=f[f[j][i-1]][i-1];\n}\nint LCA_ask(int x,int y)\n{\n\tif(x==y)\n\t\treturn x;\n\tif(dep[x]>dep[y])\n\t\tswap(x,y);\n\tfor(int i=20;i>=0;i--)\n\t\tif(dep[f[y][i]]>=dep[x])\n\t\t\ty=f[y][i];\n\tif(x==y)\n\t\treturn x;\n\tfor(int i=20;i>=0;i--)\n\t\tif(f[x][i]!=f[y][i])\n\t\t{\n\t\t\tx=f[x][i];\n\t\t\ty=f[y][i];\n\t\t}\n\treturn f[x][0];\n}\nbool comp(int x,int y)\n{\n\treturn dfn[x]<dfn[y];\n}\nvoid build(int x)\n{\n\tif(!top)\n\t{\n\t\tsta[++top]=x;\n\t\treturn ;\n\t}\n\tint lca=LCA_ask(x,sta[top]);\n\twhile(top>1&&dep[lca]<dep[sta[top-1]])\n\t{\n\t\te2.add(sta[top-1],sta[top]);\n\t\te2.add(sta[top],sta[top-1]);\n\t\ttop--;\n\t}\n\tif(dep[lca]<dep[sta[top]])\n\t{\n\t\te2.add(lca,sta[top]);\n\t\te2.add(sta[top],lca);\n\t\ttop--;\n\t}\n\tif(!top||sta[top]!=lca)\n\t\tsta[++top]=lca;\n\tsta[++top]=x;\n}\nvoid dfs1(int x,int fa)\n{\n\tdp[x]=INF;\n\tfor(int i=e2.head[x];i;i=e2.nxt[i])\n\t{\n\t\tint to=e2.ver[i];\n\t\tif(to==fa)\n\t\t\tcontinue;\n\t\tdfs1(to,x);\n\t\tint dis=dep[to]-dep[x];\n\t\tif(dp[x]>dp[to]+dis)\n\t\t{\n\t\t\tg[x]=g[to];\n\t\t\tdp[x]=dp[to]+dis;\n\t\t}\n\t\telse if(dp[x]==dp[to]+dis)\n\t\t\tg[x]=min(g[x],g[to]);\n\t}\n\tif(vis[x])\n\t{\n\t\tdp[x]=0;\n\t\tg[x]=x;\n\t}\n}\nvoid work(int x,int y)\n{\n\tint b=y;\n\tfor(int i=20;i>=0;i--)\n\t{\n\t\tint l=dep[y]-dep[f[b][i]]+dp[y],r=dep[f[b][i]]-dep[x]+dp[x];\n\t\tif(dep[f[b][i]]>dep[x]&&(l<r||(l==r&&g[y]<g[x])))\n\t\t\tb=f[b][i];\n\t}\n\tans[g[y]]+=siz[b]-siz[y];\n\tans[g[x]]-=siz[b];\n}\nvoid dfs2(int x,int fa)\n{\n\tfor(int i=e2.head[x];i;i=e2.nxt[i])\n\t{\n\t\tint to=e2.ver[i];\n\t\tif(to==fa)\n\t\t\tcontinue;\n\t \tint dis=dep[to]-dep[x];\n\t\tif(dp[to]>dp[x]+dis)\n\t\t{\n\t\t\tg[to]=g[x];\n\t\t\tdp[to]=dp[x]+dis;\n\t\t}\n\t\telse if(dp[to]==dp[x]+dis)\n\t\t\tg[to]=min(g[to],g[x]);\n\t\twork(x,to);\n\t\tdfs2(to,x);\n\t}\n\tans[g[x]]+=siz[x];\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1,x,y;i<n;i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\te1.add(x,y);\n\t\te1.add(y,x);\n\t}\n\tLCA_init();\n\tscanf(\"%d\",&Q);\n\twhile(Q--)\n\t{\n\t\tflag=top=e2.tot=0;\n\t\tmemset(vis,false,sizeof(vis));\n\t\tmemset(e2.head,0,sizeof(e2.head));\n\t\tscanf(\"%d\",&m);\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&q[i]);\n\t\t\tvis[q[i]]=true;\n\t\t\tans[q[i]]=0;\n\t\t}\n\t\tif(!vis[1])\n\t\t{\n\t\t\tflag=true;\n\t\t\tq[++m]=1;\n\t\t}\n\t\tfor(int i=1;i<=m;i++)\n\t\t\ts[i]=q[i];\n\t\tsort(s+1,s+m+1,comp);\n\t\tfor(int i=1;i<=m;i++)\n\t\t\tbuild(s[i]);\n\t\tif(top)\n\t\t\twhile(--top)\n\t\t\t{\n\t\t\t\te2.add(sta[top],sta[top+1]);\n\t\t\t\te2.add(sta[top+1],sta[top]);\n\t\t\t}\n\t\tdfs1(1,0);\n\t\tdfs2(1,0);\n\t\tfor(int i=1;i<=m;i++)\n\t\t\tif(q[i]!=1||!flag)\n\t\t\t\tprintf(\"%d \",ans[q[i]]);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1624071625,
        "uid": 190322,
        "name": "Varuxn",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3233 [HNOI2014]\u4e16\u754c\u6811"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u865a\u6811\u88f8\u9898\uff0c\u7136\u800c\u7ec6\u8282\u6709\u70b9\u795e\u3002\u3002\u3002\n\n\u5148\u8003\u8651\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u8be2\u95ee\u600e\u4e48\u505a\uff1f\n\n\u5c31\u662f\u6309\u7167\u666e\u901a\u7684\u6811\u5f62dp\uff0c\u5411\u4e0b\u505a\u4e00\u904d\u8ba1\u7b97\u51fa\u5982\u679c\u53ea\u770b\u5b50\u6811\u5185\uff0c\u6bcf\u4e2a\u70b9\u88ab\u54ea\u4e2a\u70b9\u6240\u63a7\u5236\uff1b\u518d\u5411\u4e0a\u505a\u4e00\u904d\u8ba1\u7b97\u51fa\u5982\u679c\u53ea\u770b\u5b50\u6811\u5916\uff0c\u6bcf\u4e2a\u70b9\u88ab\u54ea\u4e2a\u70b9\u6240\u63a7\u5236\uff0c\u8fd9\u6837\u4ee5\u540e\u53d6\u4e2amin\u5c31\u77e5\u9053\u6bcf\u4e2a\u70b9\u5728\u6574\u68f5\u6811\u91cc\u662f\u88ab\u54ea\u4e2a\u70b9\u6240\u63a7\u5236\u4e86\u3002\u56e0\u4e3a\u9898\u76ee\u5bf9\u4e8emin\u7684\u5b9a\u4e49\u6ee1\u8db3pair\u7684\u6bd4\u8f83\u539f\u5219\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528pair\u800c\u4e0d\u9700\u8981\u81ea\u5df1\u5199\u4e2anode\u6765\u6bd4\u8f83\u3002\n\n\u90a3\u5728\u865a\u6811\u4e0a\u600e\u4e48\u505a\uff1f\n\n\u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u6309\u7167\u4e0a\u9762\u7684\u539f\u5219\u4f9d\u7136\u8ba1\u7b97\u51fa\u865a\u6811\u4e0a\u6bcf\u4e2a\u70b9\u88ab\u54ea\u4e2a\u70b9\u6240\u63a7\u5236\u3002\n\u800c\u4e14\u6211\u4eec\u77e5\u9053\uff0c\u4e0d\u5728\u865a\u6811\u4e0a\u7684\u70b9\u663e\u7136\u662f\u901a\u8fc7\u865a\u6811\u4e0a\u7684\u70b9\u8d70\u5230\u63a7\u5236\u70b9\u7684\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6709\u5982\u4e0b\u539f\u5219\uff1a\uff08\u8fd9\u91cc\u5047\u8bbe\u865a\u6811\u4e0a\u70b9u\u7684\u63a7\u5236\u70b9\u662fbel[u]\uff0c\u5b83\u5230\u63a7\u5236\u70b9\u7684\u8ddd\u79bb\u662fdis[u]\uff09\n\n1.\u5bf9\u4e8e\u4e00\u4e2a\u865a\u6811\u4e0a\u7684\u70b9u\uff0c\u5b83\u7684\u6240\u6709\u76f4\u63a5\u513f\u5b50\u4e2d\uff0c\u5982\u679c\u6709\u4e0d\u5728\u865a\u6811\u4e0a\u7684\uff0c\u5219\u8be5\u513f\u5b50\u4ee3\u8868\u7684\u5b50\u6811\u4e0a\u7684\u6240\u6709\u70b9\u90fd\u53ea\u80fd\u901a\u8fc7u\u8d70\u5230\u63a7\u5236\u70b9\u3002\n\n2.\u5bf9\u4e8e\u5728\u865a\u6811\u8fb9\u4e0a\u7684\u70b9\uff0c\u5047\u8bbe\u6240\u5728\u7684\u8fb9\u662f(u,v)\uff0c\u663e\u7136\u5f53\ndis[u]+x<dis[v]+e(u,v)-x || (bel[u]<bel[v] && dis[u]+x==dis[v]+e(u,v)-x)\u65f6\uff0c\u9009\u62e9\u901a\u8fc7u\u8d70\uff0c\u53cd\u4e4b\u901a\u8fc7v\u8d70\u3002\n\n3.\u7279\u522b\u5730\uff0c\u865a\u6811\u7684\u6839\u5728\u539f\u6811\u4e2d\u7684\u5916\u5b50\u6811\u90e8\u5206\u90fd\u53ea\u80fd\u901a\u8fc7\u865a\u6811\u6839\u8d70\u3002\n\n\u6839\u636e\u8fd9\u4e9b\u539f\u5219\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u7edf\u8ba1\u7684\u65b9\u6cd5\uff1a\n\n1.\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u865a\u6811\u4e0a\u7684\u70b9u\uff0cans[bel[u]]+=sz[u]-sum(sz[v])\uff0c\u5176\u4e2dv\u662fu\u5728\u539f\u6811\u4e0a\u7684\u513f\u5b50\u4e14v\u5728\u865a\u6811\u7684\u8fb9/\u70b9\u4e0a\u3002\n\n2.\u5bf9\u4e8e\u865a\u6811\u4e0a\u7684\u6bcf\u4e00\u6761\u8fb9(u,v)\uff0c\u5047\u8bbeu\u662fv\u7684\u7956\u5148\uff0c\u5230v\u7684\u8ddd\u79bb\u662fx\u7684\u70b9\u8981\u901a\u8fc7v\u8d70\u3002\n\n1)bel[u]<bel[v]\uff1a\u6b64\u65f6dis[u]+x<dis[u]+e(u,v\uff09-x\n\u4e141<=x<e(u,v)\n\n2)bel[u]==bel[v]\uff1a\u6b64\u65f6dis[u]+x<=dis[u]+e(u,v)-x\n\u4e141<=x<e(u,v)\n\n\u8bbev\u5f80\u4e0a\u8d70y\u6b65\u5230\u8fbe\u7684\u7956\u5148\u662fgetup(v,y)\uff0c\u5219\n\nans[bel[v]]+=sz[getup(v,x)]-sz[v],\n\nans[bel[u]]+=sz[getup(v,e(u,v)-1)]-sz[getup(v,x+1)]\u3002\n\n\u5f53\u7136\uff0cx\u53ef\u80fd\u4f1a\u51fa\u73b0\u8d1f\u503c\u4e4b\u7c7b\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\uff0c\u6b64\u65f6+0\u5373\u53ef\uff0c\u9700\u8981\u7279\u5224\u3002\n\n3.ans[bel[root]]+=n-sz[root]\u3002\n\n\u5199\u7740\u5199\u7740\uff0c\u6211\u4eec\u53d1\u73b0\u6709\u4e9b\u4e1c\u897f\u9700\u8981\u6e05\u96f6\uff0c\u4e0d\u8fc7\u5e78\u8fd0\u7684\u662f\u5728\u6b64\u9898\u4e2d\u6211\u4eec\u53ea\u8981\u5728\u505a\u5b8c\u4e4b\u540e\uff0c\u627e\u51fa\u6240\u6709\u865a\u6811\u4e0a\u7684\u70b9\uff0c\u628a\u5b83\u4eec\u7684\u6240\u6709\u5c5e\u6027\u6e05\u56de\u521d\u59cb\u503c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4e8e\u662f\u89e3\u51b3\u7684\u8fc7\u7a0b\u5c31\u662f\uff1a\n\n\u8f93\u5165->\u5efa\u865a\u6811->solve()->\u8f93\u51fa->\u6e05\u56de\u521d\u59cb\u503c\u3002\n\n\u8fd9\u6837\u5c31\u628a\u7ec6\u8282\u5904\u7406\u597d\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define rep(x,y,z) for (register int x=y; x<=z; x++)\n#define downrep(x,y,z) for (register int x=y; x>=z; x--)\n#define ms(x,y,z) memset(x,y,sizeof(z))\n#define LL long long\n#define repedge(x,y) for (register int x=hed[y]; ~x; x=edge[x].nex)\n#define repE(x,y) for(register int x=head[y]; ~x; x=E[x].nex)\n#define mp make_pair\n#define pr pair<int,int>\n#define fr first\n#define se second\ninline int read(){\n\tint x=0; int w=0; char ch=0;\n\twhile (ch<'0' || ch>'9') w|=ch=='-',ch=getchar();\n\twhile (ch>='0' && ch<='9') x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n\treturn w? -x:x;\n}\nconst int N=300005;\nconst int Maxlg=18;\nint n,m,nedge,hed[N],sz[N],tin[N],tout[N],dep[N],f[N][Maxlg+1],tot;\nint Nedge,head[N],d[N],st[N],tmp[N],imp[N],toc[N],sum,val[N],ans[N],lg[(1<<Maxlg)+1];\npr bel[N],F[N][2],G[N];\nstruct Edge{ int to,nex,cst; }edge[N<<1],E[N<<1];\nvoid addedge(int a,int b){\n\tedge[nedge].to=b; edge[nedge].nex=hed[a]; hed[a]=nedge++;\n}\nvoid dfs_1(int k){\n\tsz[k]=1; tin[k]=++tot;\n\trepedge(i,k){\n\t\tint v=edge[i].to; if (v==f[k][0]) continue;\n\t\tf[v][0]=k; dep[v]=dep[k]+1;\n\t\tdfs_1(v); sz[k]+=sz[v];\n\t}tout[k]=tot;\n}\nbool isancestor(int x,int y){ return ((tin[x]<=tin[y])&&(tout[y]<=tout[x])); }\nint getlca(int x,int y){\n\tif (isancestor(x,y)) return x; \n\tif (isancestor(y,x)) return y;\n\tdownrep(i,Maxlg,0) if (!isancestor(f[x][i],y)) x=f[x][i];\n\treturn f[x][0];\n}\nint lowbit(int x){ return (x&(-x)); }\nint getup(int x,int dis){\n\tfor(int i=dis; i; i-=lowbit(i))\n\tx=f[x][lg[lowbit(i)]]; return x;\n}\nint cmp(int a,int b){ return (tin[a]<tin[b]); }\nvoid addE(int a,int b){\n\tE[Nedge].to=b; E[Nedge].nex=head[a]; E[Nedge].cst=dep[b]-dep[a]; \n    head[a]=Nedge++; val[a]+=sz[getup(b,dep[b]-dep[a]-1)];\n}\nint build_tree(int n){\n\tsort(d+1,d+n+1,cmp); int tp=0;\n\trep(i,1,n){\n\t\tint v=d[i]; if (!tp){ st[++tp]=v; continue;\t}\n\t\tint u=st[tp]; int w=getlca(u,v);\n\t\tif (w==u){ st[++tp]=v; continue; }\n\t\twhile((tp>1)&&(dep[st[tp-1]]>dep[w])) addE(st[tp-1],st[tp]),tp--;\n\t\taddE(w,st[tp]); tp--; if ((!tp)||(st[tp]!=w)) st[++tp]=w; st[++tp]=v;\n\t}\n\twhile(tp>1) addE(st[tp-1],st[tp]),tp--; return st[tp];\n}\nvoid dfs_2(int k){\n\tF[k][0]=imp[k]? mp(0,k):mp(n+1,n+1); F[k][1]=mp(n+1,n+1);\n\trepE(i,k){\n\t\tint v=E[i].to; dfs_2(v); \n\t\tpr x=F[v][0]; x.fr+=E[i].cst;\n\t\tif (x<=F[k][0]) F[k][1]=F[k][0],F[k][0]=x;\n\t\telse F[k][1]=min(F[k][1],x);\n\t}\n}\nvoid dfs_3(int k){\n\ttoc[++sum]=k;\n\trepE(i,k){\n\t\tint v=E[i].to; pr x=F[v][0]; x.fr+=E[i].cst;\n\t\tpr y=(x==F[k][0])? F[k][1]:F[k][0]; y=min(y,G[k]); y.fr+=E[i].cst;\n\t\tG[v]=y; dfs_3(v);\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n); nedge=0; ms(hed,-1,hed);\n\trep(i,1,n-1){ int u,v; scanf(\"%d%d\",&u,&v); addedge(u,v); addedge(v,u); }\n\trep(i,0,Maxlg) lg[(1<<i)]=i; f[1][0]=1; dfs_1(1); \n\trep(j,1,Maxlg) rep(i,1,n) f[i][j]=f[f[i][j-1]][j-1];\n\tscanf(\"%d\",&m); Nedge=0; ms(head,-1,head);\n\trep(i,1,m){\n\t\tint nw; scanf(\"%d\",&nw);\n\t\trep(j,1,nw) scanf(\"%d\",&d[j]); rep(j,1,nw) tmp[j]=d[j];\n\t\tint rot=build_tree(nw); \n\t\trep(j,1,nw) imp[d[j]]=1; dfs_2(rot); G[rot]=mp(n+1,n+1); dfs_3(rot); \n\t\trep(j,1,sum) bel[toc[j]]=min(F[toc[j]][0],G[toc[j]]);\n\t\trep(j,1,sum){ \n\t\t   int k=toc[j]; ans[bel[k].se]+=sz[k]-val[k]; //\u53c2\u7167\u9898\u89e3\u4e2d\u76841.\n\t\t   repE(p,k){ \n\t\t      int v=E[p].to; int l=1; int r=E[p].cst-1; \n\t\t\t  int x,y; y=E[p].cst+bel[k].fr-bel[v].fr;\n\t\t\t  if (bel[v].se<bel[k].se) x=y/2; \n\t\t\t  else x=(y&1)? (y/2):(y/2-1); r=min(r,x); //[getup(v,l),getup(v,r)]\u90fd\u4ecev\u8d70\n\t\t      if (l<=r) ans[bel[v].se]+=sz[getup(v,r)]-sz[v];\n\t\t      l=max(l,r+1); r=E[p].cst-1; \n\t\t      if (l<=r) ans[bel[k].se]+=sz[getup(v,r)]-sz[getup(v,l-1)];\n              //[getup(v,r+1),getup(v,E[p].cst-1)]\u90fd\u4ecek\u8d70\n\t\t   }//\u53c2\u7167\u9898\u89e3\u4e2d\u76842.\n\t\t}ans[bel[rot].se]+=n-sz[rot];//\u53c2\u7167\u9898\u89e3\u4e2d\u76843.\n\t\trep(j,1,nw) if (j==nw) printf(\"%d\\n\",ans[tmp[j]]); else printf(\"%d \",ans[tmp[j]]);\n\t\trep(j,1,nw) imp[d[j]]=ans[d[j]]=0;\n\t\trep(j,1,sum) head[toc[j]]=-1,val[toc[j]]=0; Nedge=sum=0;//\u6e05\u56de\u521d\u59cb\u503c\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1544754646,
        "uid": 47611,
        "name": "\u4e0a\u5929\u53f0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3233 \u3010[HNOI2014]\u4e16\u754c\u6811\u3011"
    },
    {
        "content": "\u6211\u6765\u8bb2\u4e00\u4e0b\u8fd9\u9898\u865a\u6811\u7684\u5efa\u6cd5\n\n1. \u628a\u6240\u6709\u4f1a\u8bae\u5ba4\u7684\u70b9\u6309\u6839\u8282\u70b9\u6700\u5c0f\u7684$dfn$\u5e8f\u6392\u5e8f\uff0c\u6c42\u51fa\u4efb\u610f\u4e24\u70b9\u7684$LCA$\n\n2. \u628a\u6240\u6709LCA\u7684\u70b9\u548c\u4f1a\u8bae\u5ba4\u7684\u70b9\u53ca\u5176\u76f8\u53cd\u6570\u52a0\u8fdb\u53bb\uff0c\u6309$dfn$\u5e8f\uff08\u6b63\u7684\u6b63\u5e8f\uff0c\u8d1f\u7684\u5012\u5e8f\uff09\u6392\u5e8f\u4e4b\u540e$unique$\n3. \u7136\u540e\u5982\u679c\u70b9\u7684\u503c$>0$\u8fdb\u6808\uff0c$<0$\u8fde\u8fb9\u7136\u540e\u51fa\u6808\u3002\n\n4. \u7136\u540e$dp$\uff0c\u7b2c$1$\u904d$dfs$\u6c42\u6df1\u5ea6\u548c\u4e24\u4e2a$dfn$\u5e8f\uff0c\u7b2c$2$\u904d\u548c\u7b2c$3$\u904d\u6c42\u8ddd\u79bb\u548c\u7f16\u53f7\u7684\u6700\u5c0f\u503c\uff0c\u7b2c$4$\u7f16\u7edf\u8ba1\u7b54\u6848\n\n~~\u4ee3\u7801\u8d3a\u4e86\u6211\u4eec\u73ed\u5927\u4f6cckh\u7684\u4ee3\u7801~~\n\n```cpp\n//\u81ea\u884c\u52a0\u706b\u8f66\u5934\n#include<bits/stdc++.h>\n#include<iostream>\n#include<cstdio>\n#define ll long long\n#define prll pair<ll,ll>\n#define mkpr make_pair\nusing namespace std;\n\nconst ll N=300010,INF=1ll<<30;\nll n,m,cnt,top,a[N],b[N<<1],h[N],ans[N],d[N],size[N],p[N][30],v[N],st[N],dfnin[N],dfnout[N];\nll ver[N<<1],Next[N<<1],head[N],tot;\nll _ver[N<<1],_Next[N<<1],_head[N],_tot;\nprll g[N];\n\ninline ll read(){\n\tll x=0,tmp=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)){\n\t\tif(ch=='-') tmp=-1;\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch)){\n\t\tx=(x<<3)+(x<<1)+(ch^48);\n\t\tch=getchar(); \n\t}\n\treturn tmp*x;\n}\n\ninline void write(ll x){\n\tif(x<0){\n\t\tputchar('-');\n\t\tx=-x;\n\t}\n\tll y=10,len=1;\n\twhile(y<=x){\n\t\ty=(y<<3)+(y<<1);\n\t\tlen++;\n\t}\n\twhile(len--){\n\t\ty/=10;\n\t\tputchar(x/y+48);\n\t\tx%=y;\n\t}\n}\n\ninline void addEdge(ll x,ll y){\n\tver[++tot]=y;\n\tNext[tot]=head[x];\n\thead[x]=tot; \n}\n\ninline void _addEdge(ll x,ll y){\n\t_ver[++_tot]=y;\n\t_Next[_tot]=_head[x];\n\t_head[x]=_tot;\n}\n\nvoid dfs1(ll x,ll before){\n\td[x]=d[before]+1; size[x]=1; dfnin[x]=++cnt;\n\tp[x][0]=before; for(ll i=1; i<=20; i++) p[x][i]=p[p[x][i-1]][i-1];\n\tfor(ll i=head[x]; i; i=Next[i]){\n\t\tll y=ver[i];\n\t\tif(y==before) continue;\n\t\tdfs1(y,x);\n\t\tsize[x]+=size[y];\n\t}\n\tdfnout[x]=++cnt;\n}\n\nvoid dfs2(ll x){\n\tif(v[x]) g[x]=mkpr(0,x);\n\telse g[x]=mkpr(INF,0);\n\tfor(ll i=_head[x]; i; i=_Next[i]){\n\t\tll y=_ver[i];\n\t\tdfs2(y);\n\t\tg[x]=min(g[x],mkpr(g[y].first+d[y]-d[x],g[y].second));\n\t}\n} \n\nvoid dfs3(ll x){\n\tfor(ll i=_head[x]; i; i=_Next[i]){\n\t\tll y=_ver[i];\n\t\tg[y]=min(g[y],mkpr(g[x].first+d[y]-d[x],g[x].second));\n\t\tdfs3(y);\n\t}\n} \n\ninline ll LCA(ll x,ll y){\n\tif(d[x]>d[y]) swap(x,y);\n\tfor(ll i=20; i>=0; i--){\n\t\tif(d[x]<=d[p[y][i]]) y=p[y][i];\n\t}\n\tif(x!=y){\n\t\tfor(ll i=20; i>=0; i--){\n\t\t\tif(p[x][i]!=p[y][i]){\n\t\t\t\tx=p[x][i];\n\t\t\t\ty=p[y][i];\n\t\t\t}\n\t\t}\n\t\treturn p[x][0];\n\t}\n\treturn x;\n}\n\ninline ll getdis(ll x,ll y){\n\treturn d[x]+d[y]-2*d[LCA(x,y)];\n}\n\nvoid dfs4(ll x){\n\tll u=g[x].second;\n\tfor(ll i=_head[x]; i; i=_Next[i]){\n\t\tll y=_ver[i],v=g[y].second;\n\t\tif(u!=v){\n\t\t\tll dis=d[v]-(getdis(u,v)-(u<v))/2;\n\t\t\tfor(ll j=20; j>=0; j--){\n\t\t\t\tif(d[p[y][j]]>=dis) y=p[y][j];\n\t\t\t}\n\t\t\tans[u]-=size[y]; ans[v]+=size[y];\n\t\t}\n\t\tdfs4(_ver[i]);\n\t}\n}\n\nvoid clean(ll x){\n\tfor(ll i=_head[x]; i; i=_Next[i]) clean(_ver[i]);\n\tans[x]=_head[x]=v[x]=0;\n} \n\ninline bool cmp1(ll x,ll y){\n\treturn dfnin[x]<dfnin[y];\n}\n\ninline bool cmp2(ll x,ll y){\n\treturn (x>0?dfnin[x]:dfnout[-x])<(y>0?dfnin[y]:dfnout[-y]);\n}\n\nint main(){\n\tn=read();\n\tfor(ll i=1; i<n; i++){\n\t\tll x=read(),y=read();\n\t\taddEdge(x,y);\n\t\taddEdge(y,x);\n\t}\n\tdfs1(1,0);\n\tfor(ll T=read(); T; T--){\n\t\tm=read();\n\t\tfor(ll i=1; i<=m; i++){\n\t\t\th[i]=a[i]=read();\n\t\t\tv[a[i]]=1;\n\t\t}\n\t\tsort(a+1,a+1+m,cmp1);\n\t\tcnt=0;\n\t\tb[++cnt]=a[1]; b[++cnt]=-a[1];\n\t\tfor(ll i=2; i<=m; i++){\n\t\t\tll root=LCA(a[i-1],a[i]);\n\t\t\tb[++cnt]=root; b[++cnt]=-root;\n\t\t\tb[++cnt]=a[i]; b[++cnt]=-a[i];\n\t\t}\n\t\tsort(b+1,b+1+cnt,cmp2);\n\t\tcnt=unique(b+1,b+1+cnt)-b-1;\n\t\tfor(ll i=1; i<=cnt; i++){\n\t\t\tif(b[i]>0) st[++top]=b[i];\n\t\t\telse{\n\t\t\t\t_addEdge(st[top-1],st[top]);\n\t\t\t\tst[top--]=0;\n\t\t\t}\n\t\t}\n\t\tdfs2(b[1]); dfs3(b[1]);\n\t\tans[g[b[1]].second]=size[1];\n\t\tdfs4(b[1]);\n\t\tfor(ll i=1; i<=m; i++){\n\t\t\twrite(ans[h[i]]);\n\t\t\tputchar(' ');\n\t\t}\n\t\tputchar('\\n');\n\t\tclean(b[1]);\n\t} \n\treturn 0;\n}\n```",
        "postTime": 1588588768,
        "uid": 27924,
        "name": "xukuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3233 \u3010[HNOI2014]\u4e16\u754c\u6811\u3011"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](https://www.luogu.com.cn/problem/P3233)\u770b\u9898\u76ee\u3002  \n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7eaf\u66b4\u529b\uff1a$BFS$\uff0c\u65f6\u95f4$O(nq)$\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u770b\u5230$(\\sum k)\\le3\\times 10^5$\u8fd9\u6837\u7684\u6761\u4ef6\uff0c\u6211\u4eec\u4e0d\u7981\u60f3\u5230\u4e86\u865a\u6811\u3002\u4e8e\u662f\u5148\u628a\u865a\u6811\u5efa\u51fa\u6765\u518d\u8bf4\u3002~~\u53cd\u6b63\u90fd\u662f\u4e00\u4e2a\u677f\u5b50\u7684\u4e8b\u60c5~~  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7136\u540e\u8003\u8651\u865a\u6811\u4e0a\u9762\u600e\u4e48\u641e\u3002\u5176\u5b9e\u4e0d\u96be\u770b\u51fa\uff0c\u53ef\u4ee5\u7528\u4e24\u4e2a$DFS$\u6216\u8005\u4e00\u4e2a$BFS$\u641e\u51fa\u6765\u865a\u6811\u4e0a\u7684\u70b9\u7684\u7ba1\u8f96\u70b9\uff0c\u540c\u65f6\u4e00\u4e2a\u70b9$u$\u7684\u6ca1\u6709\u7ba1\u8f96\u5904\u7684\u5b50\u6811\u4eec\u4e5f\u5e94\u8be5\u7f29\u5230$u$\u4e0a\u9762\u6765\u3002\u4f46\u662f\u8fb9\u5176\u5b9e\u4e5f\u662f\u5f88\u591a\u4e2a\u70b9\u7f29\u51fa\u6765\u7684\uff0c\u95ee\u9898\u4e8e\u662f\u7b80\u5316\u6210\u4e86\u5982\u4f55\u786e\u5b9a\u8fb9\u4e0a\u7684\u7b54\u6848\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e0d\u96be\u60f3\u5230\u8bb0\u5f55\u865a\u6811\u4e0a\u6bcf\u4e2a\u70b9\u5230\u5176\u7ba1\u8f96\u70b9\u7684\u8ddd\u79bb\u3002\u7136\u540e\u8003\u8651\u865a\u6811\u4e0a\u7684\u4e00\u6761\u8fb9$(u,v)$\u7684\u60c5\u51b5\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$1.u$\u548c$v$\u5171\u5c5e\u4e8e\u540c\u4e00\u4e2a\u70b9\u7ba1\u8f96\u3002\u6240\u4ee5\u628a\u4e2d\u95f4\u7684\u90a3\u4e9b\u70b9\u8ba1\u5165$u$\u548c$v$\u7684\u7ba1\u8f96\u70b9\u5373\u53ef\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$2.u$\u548c$v$\u4e0d\u5c5e\u4e8e\u540c\u4e00\u4e2a\u70b9\u7ba1\u8f96\u3002\u4e0d\u96be\u53d1\u73b0\u8fd9\u6761\u8fb9\u4f1a\u4ece\u4e2d\u95f4\u5206\u5f00\u53d8\u6210\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u5c5e\u4e8e$v$\uff0c\u4e00\u90e8\u5206\u5c5e\u4e8e$u$\u3002\u4e8e\u662f\u5c31\u6709\u4e86\u5355\u8c03\u6027\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5\u7528\u500d\u589e\u6765\u7edf\u8ba1\u7b54\u6848\u4e86\u3002\u5177\u4f53\u53ef\u4ee5\u770b\u4ee3\u7801\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u603b\u65f6\u95f4$O((n+\\sum k)\\log_2n)$\u3002  \n# \u4ee3\u7801\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <algorithm>\n\nconst int INF = 0x3f3f3f3f;\nconst int MAXN = 3e5 + 5, MAXQ = 3e5 + 5, MAXLOG = 20;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n    x = 0;char s = getchar();int f = 1;\n    while( s > '9' || s < '0' ){if( s == '-' ) f = -1; s = getchar();}\n    while( s >= '0' && s <= '9' ){x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar();}\n    x *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n    if( x < 0 ){ putchar( '-' ); x = ( ~ x ) + 1; }\n    if( 9 < x ){ write( x / 10 ); }\n    putchar( x % 10 + '0' );\n}\n\ntemplate<typename _T>\n_T ABS( const _T a )\n{\n\treturn a < 0 ? -a : a;\n}\n\nstruct edge\n{\n\tint w, to, nxt;\n}Graph[MAXN << 1];\n\nint f[MAXN][MAXLOG];\nint mn[MAXN][2];\nint dist[MAXN], bel[MAXN], nsiz[MAXN], tot[MAXN];\nint seq[MAXN], nat[MAXN], sta[MAXN], top;\nint head[MAXN], siz[MAXN], dep[MAXN], DFN[MAXN];\nint N, K, ID, cnt, lg2;\nbool imp[MAXN];\n\nvoid addEdge( const int from, const int to, const int w )\n{\n\tcnt ++;\n\tGraph[cnt].w = w, Graph[cnt].to = to, Graph[cnt].nxt = head[from];\n\thead[from] = cnt;\n}\nvoid addE( const int from, const int to, const int w ) { addEdge( from, to, w ), addEdge( to, from, w ); }\n\nvoid DFS( const int u, const int fa )\n{\n\tsiz[u] = 1, f[u][0] = fa, dep[u] = dep[fa] + 1, DFN[u] = ++ ID;\n\tfor( int i = head[u], v ; i ; i = Graph[i].nxt )\n\t\tif( ( v = Graph[i].to ) ^ fa ) \n\t\t\tDFS( v, u ), siz[u] += siz[v];\n}\n\nvoid init()\n{\n\tlg2 = log2( N );\n\tfor( int j = 1 ; j <= lg2 ; j ++ )\n\t\tfor( int i = 1 ; i <= N ; i ++ )\n\t\t\tf[i][j] = f[f[i][j - 1]][j - 1];\n}\n\nvoid balance( int &u, const int steps )\n{\n\tfor( int i = 0 ; ( 1 << i ) <= steps ; i ++ )\n\t\tif( steps & ( 1 << i ) ) u = f[u][i];\n}\n\nint LCA( int u, int v )\n{\n\tif( dep[u] > dep[v] ) balance( u, dep[u] - dep[v] );\n\tif( dep[v] > dep[u] ) balance( v, dep[v] - dep[u] );\n\tif( u == v ) return u;\n\tfor( int i = lg2 ; ~ i ; i -- ) if( f[u][i] ^ f[v][i] ) u = f[u][i], v = f[v][i];\n\treturn f[u][0];\n}\n\nvoid build()\n{\n\tint tmp;\n\ttop = 0;\n\tif( seq[1] > 1 ) sta[++ top] = 1;\n\tfor( int i = 1 ; i <= K ; i ++ )\n\t{\n\t\tif( top )\n\t\t{\n\t\t\ttmp = LCA( seq[i], sta[top] );\n\t\t\twhile( top > 1 && dep[tmp] < dep[sta[top - 1]] )\n\t\t\t\taddE( sta[top - 1], sta[top], dep[sta[top]] - dep[sta[top - 1]] ), top --;\n\t\t\tif( top && dep[tmp] < dep[sta[top]] ) addE( tmp, sta[top], dep[sta[top]] - dep[tmp] ), top --;\n\t\t\tif( ! ( top && sta[top] == tmp ) ) sta[++ top] = tmp;\n\t\t}\n\t\tsta[++ top] = seq[i];\n\t}\n\twhile( top > 1 ) addE( sta[top - 1], sta[top], dep[sta[top]] - dep[sta[top - 1]] ), top --;\n}\n\nbool getSiz( const int u, const int fa )\n{\n\tnsiz[u] = siz[u];\n\tbool flag = false;\n\tint tmp;\n\tif( imp[u] ) flag = true;\n\tfor( int i = head[u], v ; i ; i = Graph[i].nxt )\n\t\tif( ( v = Graph[i].to ) ^ fa ) \n\t\t\tif( getSiz( v, u ) )\n\t\t\t{\n\t\t\t\tflag = true, tmp = v;\n\t\t\t\tfor( int i = lg2 ; ~ i ; i -- )\n\t\t\t\t\tif( f[tmp][i] && dep[f[tmp][i]] > dep[u] ) tmp = f[tmp][i];\n\t\t\t\tnsiz[u] -= siz[tmp];\n\t\t\t}\n\treturn flag;\n}\n\nint query( const int u, const int v ) { return dep[u] + dep[v] - 2 * dep[LCA( u, v )]; }\n\nvoid DFS1( const int u, const int fa )\n{\n\tdist[u] = query( u, bel[u] ), tot[bel[u]] += nsiz[u];\n\tfor( int i = head[u], v, tmp ; i ; i = Graph[i].nxt )\n\t\tif( ( v = Graph[i].to ) ^ fa )\n\t\t{\n\t\t\tDFS1( v, u );\n\t\t\tif( bel[u] == bel[v] )\n\t\t\t{\n\t\t\t\ttmp = v;\n\t\t\t\tfor( int j = lg2 ; ~ j ; j -- )\n\t\t\t\t\tif( f[tmp][j] && dep[f[tmp][j]] > dep[u] )\n\t\t\t\t\t\ttot[bel[u]] += siz[f[tmp][j]] - siz[tmp], tmp = f[tmp][j];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tint steps = 0, w; w = Graph[i].w - 1;\n\t\t\t\ttmp = v;\n\t\t\t\tfor( int j = lg2 ; ~ j ; j -- )\n\t\t\t\t\tif( f[tmp][j] && dep[f[tmp][j]] > dep[u] && \n\t\t\t\t\t\t( dist[v] + steps + ( 1 << j ) <= dist[u] + w - steps - ( 1 << j ) ||\n\t\t\t\t\t\t( dist[v] + steps + ( 1 << j ) == dist[u] + w - steps - ( 1 << j ) + 1 && \n\t\t\t\t\t\t  bel[u] > bel[v] ) ) )\t\n\t\t\t\t\t\ttot[bel[v]] += siz[f[tmp][j]] - siz[tmp], tmp = f[tmp][j], steps += 1 << j;\n\t\t\t\tif( f[tmp][0] == u ) continue;\n\t\t\t\ttot[bel[u]] += siz[f[tmp][0]] - siz[tmp], tmp = f[tmp][0];\n\t\t\t\tfor( int j = lg2 ; ~ j ; j -- )\n\t\t\t\t\tif( f[tmp][j] && dep[f[tmp][j]] > dep[u] )\n\t\t\t\t\t\ttot[bel[u]] += siz[f[tmp][j]] - siz[tmp], tmp = f[tmp][j];\n\t\t\t}\n\t\t}\n\thead[u] = 0, imp[u] = false;\n}\n\nbool better( const int u, const int a, const int b ) \n{\n\tint da = query( u, a ), db = query( u, b ); \n\treturn a && ( da < db || ( da == db && a < b ) ); \n}\n\nvoid DFS2( const int u, const int fa ) \n{\n\tif( imp[u] ) mn[u][0] = u;\n\telse mn[u][0] = -1;\n\tmn[u][1] = -1;\n\tint v;\n\tfor( int i = head[u] ; i ; i = Graph[i].nxt )\n\t\tif( ( v = Graph[i].to ) ^ fa )\n\t\t{\n\t\t\tDFS2( v, u );\n\t\t\tif( mn[u][0] == -1 || better( u, mn[v][0], mn[u][0] ) ) \n\t\t\t\tmn[u][1] = mn[u][0], mn[u][0] = mn[v][0];\n\t\t\telse if( mn[u][1] == -1 || better( u, mn[v][0], mn[u][1] ) ) mn[u][1] = mn[v][0];\n\t\t}\n}\n\nvoid DFS3( const int u, const int fa, const int upper )\n{\n\tif( mn[u][0] == -1 || better( u, upper, mn[u][0] ) ) mn[u][1] = mn[u][0], mn[u][0] = upper;\n\telse if( mn[u][1] == -1 || better( u, upper, mn[u][1] ) ) mn[u][1] = upper;\n\tfor( int i = head[u], v ; i ; i = Graph[i].nxt )\n\t\tif( ( v = Graph[i].to ) ^ fa )\n\t\t{\n\t\t\tif( mn[u][0] == mn[v][0] ) DFS3( v, u, mn[u][1] );\n\t\t\telse DFS3( v, u, mn[u][0] );\n\t\t}\n\tdist[u] = ABS( dep[mn[u][0]] - dep[u] ), bel[u] = mn[u][0];\n}\n\nbool cmp( const int &a, const int &b ) { return DFN[a] < DFN[b]; }\n\nint main()\n{\n\tint Q;\n\tread( N );\n\tfor( int i = 1, u, v ; i < N ; i ++ ) read( u ), read( v ), addE( u, v, 1 );\n\tDFS( 1, 0 ), init();\n\tfor( int i = 1 ; i <= N ; i ++ ) head[i] = 0;\n\tread( Q );\n\twhile( Q -- )\n\t{\n\t\tread( K );\n\t\tfor( int i = 1 ; i <= K ; i ++ ) read( seq[i] ), imp[nat[i] = seq[i]] = true;\n\t\tstd :: sort( seq + 1, seq + 1 + K, cmp );\n\t\tcnt = 0, build(); \n\t\tgetSiz( 1, 0 ); \n\t\tDFS2( 1, 0 ), \n\t\tDFS3( 1, 0, 0 );\n\t\tDFS1( 1, 0 );\n\t\tfor( int i = 1 ; i <= K ; i ++ ) write( tot[nat[i]] ), putchar( i == K ? '\\n' : ' ' ), tot[nat[i]] = 0;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1575695078,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[HNOI2014]\u4e16\u754c\u6811"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[$luogu$](https://www.luogu.com.cn/problem/P3233).\n# \u9898\u89e3\n## \u9898\u76ee\u5927\u610f\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e00\u68f5\u6811\u4e0a$n$\u4e2a\u70b9, \u5176\u4e2d\u6307\u5b9a\u4e86$m$\u4e2a\u5173\u952e\u70b9, \u8be2\u95ee\u6bcf\u4e2a\u5173\u952e\u70b9\u6240\"\u7edf\u6cbb\"\u7684\u7ed3\u70b9. \u4e00\u4e2a\u70b9\u4ec5\u4f1a\u88ab\u79bb\u5176\u6700\u8fd1\u7684\u5173\u952e\u70b9\u6240\"\u7edf\u6cbb\" ( \u82e5\u8ddd\u79bb\u76f8\u7b49, \u5219\u88ab\u6807\u53f7\u6700\u5c0f\u7684\u5173\u952e\u70b9\"\u7edf\u6cbb\". )  \n## \u601d\u8def\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;~~\u865a\u6811\u865a\u6811, \u8c03\u5230\u80be\u865a\u7684\u6811.~~  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6ce8\u610f\u5230\u6570\u636e\u7ea6\u5b9a\u4e2d:\n>\n$$\n\\sum_{i=1}^qm_i\\le3\\times10^5\n$$\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6240\u4ee5\u53ef\u4ee5\u5957\u4e0a\u865a\u6811. \u5728\u6b64\u4e4b\u524d\u5148\u5904\u7406\u5904\u500d\u589e\u6570\u7ec4$Fa$, \u5b50\u6811\u5927\u5c0f$Siz$, \u5efa\u51fa\u865a\u6811\u540e, \u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u88ab\u8c01\u7edf\u6cbb ( $Ctrl$ ). \u60f3\u4e00\u60f3\u5982\u4f55\u5728\u865a\u6811\u4e0a$DP$?  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5148\u6765\u4e00\u5f20\u56fe:\n![g1.png](https://i.loli.net/2019/12/06/rjnDqTS2Hw6xdh1.png)  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$Tips$: $u$, $v$\u662f\u5173\u952e\u7ed3\u70b9, \u7ea2\u8272\u8fb9\u662f\u865a\u6811\u8fb9, \u5176\u4f59\u4e3a\u539f\u6811\u7684\u4fe1\u606f.  \n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u9996\u5148\u5bf9\u4e8e\u4ee5$1$\u4e3a\u6839\u7684\u5b50\u6811, \u7531\u4e8e\u6ca1\u6709\u5173\u952e\u7ed3\u70b9, \u5b83\u6839\u672c\u4e0d\u4f1a\u4f53\u73b0\u5728\u865a\u6811\u4e0a. \u600e\u4e48\u529e? \u6211\u4eec\u7528\u4e00\u4e2a$Surp$\u6570\u7ec4\u8bb0\u5f55\u7ed3\u70b9$u$\"\u5931\u8e2a\u7684\u7ed3\u70b9\u4e2a\u6570\", \u521d\u59cb\u65f6, $Surp_u=Siz_u$, \u53ea\u9700\u8981\u5728$DP$\u7684\u65f6\u5019\u51cf\u53bb\u4e00\u4e9b\u88ab\u62a2\u593a\u7684\u7ed3\u70b9\u5373\u53ef.  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u63a5\u7740, \u6211\u4eec\u8003\u8651\u8def\u5f84$<u,4,5,v>$\u4e0a\u7684\u60c5\u51b5. \u663e\u7136, $u$\u548c$v$\u5e94\u8be5\u5c06\u4e2d\u95f4\u7684\u7ed3\u70b9\"\u5bf9\u534a\u5206\". \u5229\u7528\u500d\u589e\u6570\u7ec4. \u6211\u4eec\u4ece$v$\u5411\u4e0a\u8df3, \u5e76\u4fdd\u8bc1\u843d\u811a\u7684\u7ed3\u70b9\u88ab$v$\u7edf\u6cbb, \u8bbe\u6211\u4eec\u6700\u540e\u5f97\u5230\u7684\u7ed3\u70b9\u662f$mid$. ( \u8fd9\u610f\u5473\u7740, $<fa_{mid},mid>$\u5c31\u662f$u$\u548c$v$\u52bf\u529b\u8303\u56f4\u7684\u8fb9\u754c. ) \u518d\u987a\u4fbf\u6c42\u51fa$u$\u5230$v$\u7684\u8def\u5f84\u4e0a\u79bb$u$\u6700\u8fd1\u7684\u7ed3\u70b9, \u8bbe\u4e3a$s$. ( \u4f53\u73b0\u5728\u56fe\u4e0a, \u5c31\u662f\u7ed3\u70b9$4$. \u8fd9\u4e5f\u80fd\u5229\u7528\u500d\u589e. ) \u8003\u8651\u7ed3\u70b9$u$\u548c\u7ed3\u70b9$v$\u7684\u7edf\u6cbb\u70b9\u6709\u4f55\u53d8\u5316:\n\n- $a)$ \u5bf9\u4e8e$u$, \u5b83\u5931\u53bb\u4e86\u4ee5$mid$\u4e3a\u6839\u7684\u5b50\u6811\u7684\u6240\u6709\u7ed3\u70b9. \u6545$Ans_u+=Siz_s-Siz_{mid}$, \u540c\u65f6, \u6211\u4eec\u4e5f\u5df2\u7ecf\u53d1\u73b0\u4e86\u4ee5$s$\u4e3a\u6839\u7684\u5b50\u6811. \u6240\u4ee5$Surp_u-=Siz_s$.  \n\n- $b)$ \u5bf9\u4e8e$v$, \u5b83\u5f97\u5230\u4e86\u4ee5$mid$\u4e3a\u6839\u7684\u5b50\u6811\u51cf\u53bb\u4ee5$v$\u4e3a\u6839\u7684\u5b50\u6811\u7684\u6240\u6709\u7ed3\u70b9. \u6240\u4ee5$Ans_v+=Siz_{mid}-Siz_v$.  \n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$DP$\u7684\u601d\u8def\u5c31\u5230\u8fd9\u91cc. \u4f46\u4e07\u4e00$u$, $v$\u5e76\u4e0d\u662f\u5173\u952e\u7ed3\u70b9\u5462?  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5f88\u7b80\u5355, \u6211\u4eec\u628a\u4ed6\u4eec\u7684\u8d21\u732e\u8bb0\u5f55\u5728$Ctrl_u$\u4e0e$Ctrl_v$\u5c31\u53ef\u4ee5\u4e86. \u6240\u4ee5\u8981\u6ce8\u610f\u6c42$mid$\u65f6\u6211\u4eec\u76f8\u5f53\u4e8e\u6c42$Ctrl_u$\u4e0e$Ctrl_v$\u7684\u52bf\u529b\u8303\u56f4.  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u513f\u5b50\u641c\u5b8c\u4e4b\u540e, \u8bb0\u5f97\u52a0\u4e0a\u5931\u8e2a\u7684\u513f\u5b50\u4eec, \u4ed6\u4eec\u663e\u7136\u90fd\u5f52$Ctrl_u$\u7edf\u6cbb. \u5373$Ans_u+=Surp_u$.  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6700\u540e, \u5982\u679c\u4e0d\u6e05\u695a$Ctrl$\u600e\u4e48\u6c42, \u6216\u8fd8\u6709\u5176\u5b83\u7591\u60d1, \u5c31\u770b\u770b\u4ee3\u7801\u91cc\u7684\u6ce8\u91ca\u5427.\n## \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <algorithm>\n\n#define Int register int\n\nusing namespace std;\n\nconst int MAXN = 300000, LGMAXN = 19;\nint n, q, m, Cnte, Head[MAXN + 5], h[MAXN + 5], Depth[MAXN + 5], Siz[MAXN + 5];\nint Vcnte, Indx, DFN[MAXN + 5], Vhead[MAXN + 5], Fa[MAXN + 5][LGMAXN + 5];\nint Top, S[MAXN + 5], Ctrl[MAXN + 5], Surp[MAXN + 5], Ans[MAXN + 5], tmp[MAXN + 5];\nbool Import[MAXN + 5];\n\nstruct Edge {\n\tint To, Cost, _nxt;\n\tEdge () {}\n\tEdge ( const int t, const int c, const int n ): To ( t ), Cost ( c ), _nxt ( n ) {}\n} Graph[MAXN << 1], Vgraph[MAXN << 1]; // Vgraph\u662f\u865a\u6811\u8fb9\u96c6.\n\ninline int rint () {\n\tint x = 0; char s = getchar ();\n\tfor ( ; s < '0' || '9' < s; s = getchar () );\n\tfor ( ; '0' <= s && s <= '9'; s = getchar () ) x = ( x << 3 ) + ( x << 1 ) + ( s ^ '0' );\n\treturn x;\n}\n\ninline bool Cmp ( const int a, const int b ) { return DFN[a] < DFN[b]; }\n\ninline void Link ( const int From, const int To, const int Cost ) {\n\tGraph[++ Cnte] = Edge ( To, Cost, Head[From] );\n\tHead[From] = Cnte;\n}\n\ninline void Vlink ( const int From, const int To, const int Cost ) { // \u865a\u6811\u8fde\u8fb9.\n\tVgraph[++ Vcnte] = Edge ( To, Cost, Vhead[From] );\n\tVhead[From] = Vcnte;\n}\n\ninline void PrepareLCA ( const int u, const int fa ) { // \u9884\u5904\u7406\u500d\u589eFa\u6570\u7ec4, Siz\u6570\u7ec4, Depth\u6570\u7ec4, DFN\u6570\u7ec4.\n\tDFN[u] = ++ Indx, Depth[u] = Depth[Fa[u][0] = fa] + ( Siz[u] = 1 );\n\tfor ( Int i = 1; i <= 19; ++ i ) Fa[u][i] = Fa[Fa[u][i - 1]][i - 1];\n\tfor ( Int i = Head[u], v; i; i = Graph[i]._nxt ) {\n\t\tif ( ( v = Graph[i].To ) ^ fa ) {\n\t\t\tPrepareLCA ( v, u ), Siz[u] += Siz[v];\n\t\t}\n\t}\n}\n\ninline int LCA ( int a, int b ) { // \u6c42LCA.\n\tif ( Depth[a] < Depth[b] ) a ^= b, b ^= a, a ^= b;\n\tfor ( Int i = 19; ~ i; -- i ) if ( Depth[Fa[a][i]] >= Depth[b] ) a = Fa[a][i];\n\tif ( a == b ) return a;\n\tfor ( Int i = 19; ~ i; -- i ) if ( Fa[a][i] ^ Fa[b][i] ) a = Fa[a][i], b = Fa[b][i];\n\treturn Fa[a][0];\n}\n\ninline int Dist ( const int a, const int b ) { return Depth[a] + Depth[b] - 2 * Depth[LCA ( a, b )]; } // (\u539f)\u6811\u4e0a\u8ddd\u79bb.\n\ninline void PrepareCtrl1 ( const int u, const int fa ) { // \u9884\u5904\u7406Ctrl-\u8ba1\u7b97\u6765\u81ea\u5b50\u6811\u5185\u7684\u7edf\u6cbb.\n\tCtrl[u] = Import[u] * u;\n\tfor ( Int i = Vhead[u], v; i; i = Vgraph[i]._nxt ) {\n\t\tif ( ( v = Vgraph[i].To ) ^ fa ) {\n\t\t\tPrepareCtrl1 ( v, u );\n\t\t\tint d1 = Depth[Ctrl[v]] - Depth[u], d2 = Ctrl[u] ? Depth[Ctrl[u]] - Depth[u] : 0x3f3f3f3f;\n\t\t\tif ( d1 < d2 || ( d1 == d2 && Ctrl[v] < Ctrl[u] ) ) Ctrl[u] = Ctrl[v];\n\t\t}\n\t}\n}\n\ninline void PrepareCtrl2 ( const int u, const int fa ) { // \u9884\u5904\u7406Ctrl-\u8ba1\u7b97\u6765\u81ea\u7236\u4eb2\u7684\u7edf\u6cbb.\n\tfor ( Int i = Vhead[u], v; i; i = Vgraph[i]._nxt ) {\n\t\tif ( ( v = Vgraph[i].To ) ^ fa ) {\n\t\t\tint d1 = Dist ( v, Ctrl[u] ), d2 = Dist ( v, Ctrl[v] );\n\t\t\tif ( d1 < d2 || ( d1 == d2 && Ctrl[u] < Ctrl[v] ) ) Ctrl[v] = Ctrl[u];\n\t\t\tPrepareCtrl2 ( v, u );\n\t\t}\n\t}\n}\n\ninline void DP ( const int u, const int fa ) { // DP\u6c42\u7b54\u6848.\n\tSurp[u] = Siz[u]; // Surp\u521d\u503c.\n\tfor ( Int i = Vhead[u], v, s, mid; i; i = Vgraph[i]._nxt ) {\n\t\tif ( ( v = Vgraph[i].To ) ^ fa ) {\n\t\t\tDP ( v, u ), s = mid = v; // s\u662f\u6587\u4e2d\u79bbu\u6700\u8fd1\u7684\u7ed3\u70b9, mid\u662fCtrl[u]\u548cCtrl[v]\u7edf\u6cbb\u8303\u56f4\u7684\u8fb9\u754c.\n\t\t\tfor ( Int j = 19; ~ j; -- j ) if ( Depth[Fa[s][j]] > Depth[u] ) s = Fa[s][j]; // \u500d\u589e\u6c42s, \u6ce8\u610f\u662f\u4e25\u683c\u5927\u4e8e.\n\t\t\tSurp[u] -= Siz[s]; // \u627e\u5230s\u5b50\u6811, \"\u5931\u8e2a\u4eba\u53e3\"\u51cf\u5c11.\n\t\t\tif ( Ctrl[u] == Ctrl[v] ) { Ans[Ctrl[u]] += Siz[s] - Siz[v]; continue; }\n\t\t\t// \u8fd9\u91cc\u6ca1\u6709\u63d0\u53ca, u\u548cv\u88ab\u7edf\u4e00\u7ed3\u70b9\u7edf\u6cbb, \u90a3\u4e48\u8def\u5f84\u4e0a\u7684\u6240\u6709\u7ed3\u70b9\u90fd\u5f52Ctrl[u]\u7edf\u6cbb.\n\t\t\tfor ( Int j = 19, w; ~ j; -- j ) { // \u500d\u589e\u6c42mid.\n\t\t\t\tw = Fa[mid][j];\n\t\t\t\tif ( Depth[w] <= Depth[u] ) continue;\n\t\t\t\tint d1 = Dist ( Ctrl[u], w ), d2 = Dist ( Ctrl[v], w );\n\t\t\t\tif ( d2 < d1 || ( d1 == d2 && Ctrl[v] < Ctrl[u] ) ) mid = w;\n\t\t\t}\n\t\t\tAns[Ctrl[u]] += Siz[s] - Siz[mid];\n\t\t\tAns[Ctrl[v]] += Siz[mid] - Siz[v]; // \u8ba1\u7b97\u8d21\u732e.\n\t\t}\n\t}\n\tAns[Ctrl[u]] += Surp[u]; // \u52a0\u4e0a\u5931\u8e2a\u4eba\u53e3.\n}\n\ninline void Clear ( const int u, const int fa ) { // \u6e05\u7a7a\u865a\u6811, \u8fd9\u672c\u6765\u80fd\u5728DP\u56de\u6eaf\u65f6\u8fdb\u884c. ( \u6211\u6015\u51fa\u9505. )\n\tfor ( Int i = Vhead[u], v; i; i = Vgraph[i]._nxt ) {\n\t\tif ( ( v = Vgraph[i].To ) ^ fa ) {\n\t\t\tClear ( v, u );\n\t\t}\n\t}\n\tAns[Ctrl[u]] = Vhead[u] = Import[u] = 0;\n}\n\ninline void Work () {\n\tn = rint ();\n\tfor ( Int i = 1, u, v; i ^ n; ++ i ) {\n\t\tu = rint (), v = rint ();\n\t\tLink ( u, v, 1 ), Link ( v, u, 1 );\n\t}\n\tPrepareLCA ( 1, 0 );\n\tfor ( q = rint (); q --; Clear ( 1, 0 ), Vcnte = 0 ) {\n\t\tm = rint ();\n\t\tfor ( Int i = 1; i <= m; ++ i ) Import[h[i] = tmp[i] = rint ()] = true; // tmp\u7528\u6765\u8bb0\u5f55\u8f93\u5165\u987a\u5e8f.\n\t\tsort ( h + 1, h + m + 1, Cmp );\n\t\t/* \u5efa\u865a\u6811 */\n\t\tS[Top = 1] = 1;\n\t\tfor ( Int i = 1; i <= m; S[++ Top] = h[i ++] ) {\n\t\t\tint t = LCA ( S[Top], h[i] );\n\t\t\tfor ( ; Depth[S[Top]] > Depth[t]; ) {\n\t\t\t\tint u = S[Top], v, w; -- Top, v = Depth[S[Top]] > Depth[t] ? S[Top] : t;\n\t\t\t\tVlink ( u, v, w = Dist ( u, v ) ), Vlink ( v, u, w );\n\t\t\t}\n\t\t\tif ( S[Top] ^ t ) S[++ Top] = t;\n\t\t}\n\t\tfor ( ; S[Top] ^ 1; ) {\n\t\t\tint u = S[Top], v = S[-- Top], w = Dist ( u, v );\n\t\t\tVlink ( u, v, w ), Vlink ( v, u, w );\n\t\t}\n\t\t/* \u9884\u5904\u7406Ctrl */\n\t\tPrepareCtrl1 ( 1, 0 ), PrepareCtrl2 ( 1, 1 );\n\t\tDP ( 1, 0 ); // DP. \n\t\tfor ( Int i = 1; i <= m; ++ i ) printf ( \"%d%c\", Ans[tmp[i]], i ^ m ? ' ' : '\\n' ); // \u8f93\u51fa\u7b54\u6848.\n\t}\n}\n\nint main () {\n\tWork ();\n\treturn 0;\n}\n```",
        "postTime": 1575678419,
        "uid": 123807,
        "name": "Rainybunny",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3233 \u3010[HNOI2014]\u4e16\u754c\u6811\u3011"
    },
    {
        "content": "\n\u9898\u76ee\u5927\u610f\n\n\u6709\u4e00\u9897\u6811\uff0c\u4e14\u6bcf\u6b21\u8be2\u95ee\u5305\u542b$k$\u4e2a\u7279\u6b8a\u8282\u70b9\uff0c\u95ee\u6bcf\u4e2a\u7279\u6b8a\u8282\u70b9\u80fd\u5360\u9886\u51e0\u4e2a\u8282\u70b9\n\n\u8bd5\u9898\u5206\u6790\n\n\u5230\u5e95\u662f\u9053\u5fb7\u7684\u6ca6\u4e27,\u8fd8\u662f\u4eba\u6027\u7684\u626d\u66f2\u3002\n\n\u5176\u5b9e\u53d1\u73b0\u6570\u636e\u8303\u56f4$\\sum_{i=1}^q m_i \\leq 3\\times 10^5$\u60f3\u5230\u4e86\u4ec0\u4e48---\u865a\u6811\uff0c\u6240\u4ee5\u5e94\u8be5\u600e\u4e48\u7528\u865a\u6811\u4f18\u5316\u3002\n\n\u5148\u5c06\u865a\u6811\u5efa\u51fa\u6765\uff0c\u8fd9\u662f\u57fa\u672c\u64cd\u4f5c\uff0c\u70b9\u4e3a$(u,v)$,\u5219\u8fb9\u6743\u4e3a$dis_{u,v}$\n\n\u7136\u540e\u5c31$dfs$\u4e24\u904d\uff0c\u4e00\u904d\u6c42\u513f\u5b50\u5bf9\u7236\u4eb2\u7684\u5360\u9886\u5f71\u54cd\uff0c\u7136\u540e\u7b2c\u4e8c\u904d\u6c42\u7236\u4eb2\u5bf9\u513f\u5b50\u7684\u5360\u9886\u5f71\u54cd\u3002\u8bb0\u5f55$dis_i$\u4e3a\u4ece$i$\u5230\u7279\u6b8a\u8282\u70b9\u7684\u6700\u5c0f\u8ddd\u79bb\uff0c$bel_i$\u4e3a$i$\u5230\u54ea\u4e00\u4e2a\u7279\u6b8a\u8282\u70b9\u3002\n\n\u7136\u540e\u600e\u6837\u53bb\u7edf\u8ba1\u7b54\u6848\uff0c\u6211\u4eec\u53d1\u73b0\u82e5\u6811\u8fb9$(u,v)$\uff0c\u4ed6\u4eec\u7684$bel$\u76f8\u7b49\uff0c\u5219\u5c31\u8ba9\u7236\u4eb2\u51cf\u53bb\u513f\u5b50\u7684\u5b50\u6811\u5927\u5c0f\uff0c\u5c31\u662f\u4e0d\u7b97\u91cd\u4e86\u3002\u82e5\u4e0d\u7b49\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u51fa\u4e24\u7aef\uff0c\u4e24\u7aef\u503c\u4e24\u4e2a\u7279\u6b8a\u8282\u70b9\u7684\u8282\u70b9\u6570\u3002\u7136\u540e\u7ecf\u8fc7\u4e00\u7cfb\u5217\u7684\u8ba1\u7b97\u4fbf\u53ef\u4ee5\u500d\u589e\u6c42\u51fa\u4e24\u4e2a\u7684\u4e2d\u65ad\u503c\u3002\u7136\u540e\u5728\u52a0\u51cf\u4e00\u4e0b\u5b50\u6811\u5c31\u884c\u4e86\u3002\n```\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<stack>\n#include<algorithm>\n#include<climits>\nusing namespace std;\ninline int read(){\n    int f=1,ans=0;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n    while(c>='0'&&c<='9'){ans=ans*10+c-'0';c=getchar();}\n    return f*ans;\n}\nconst int N=300001;\nstruct node{\n    int u,v,w,nex;\n}x[N<<1];\nint in[N],size[N],out[N],num,n,head[N],cnt,deep[N],fa[N][21];\nvoid add(int u,int v,int w){\n    x[cnt].u=u,x[cnt].v=v,x[cnt].w=w,x[cnt].nex=head[u],head[u]=cnt++;\n}\nint remove(int u,int Deep){\n    for(int i=20;i>=0;i--) \n       if(deep[u]-(1<<i)>=Deep) u=fa[u][i];\n     return u; \n}\nvoid dfs(int f,int fath){\n    in[f]=++num;deep[f]=deep[fath]+1,size[f]=1;fa[f][0]=fath;\n    for(int i=1;(1<<i)<=deep[f];i++) fa[f][i]=fa[fa[f][i-1]][i-1];\n    for(int i=head[f];i!=-1;i=x[i].nex){\n        if(x[i].v==fath) continue;\n        dfs(x[i].v,f);\n        size[f]+=size[x[i].v];\n    }out[f]=++num;\n    return;\n}\nstack<int> s;\nint que[N];\nint lca(int u,int v){\n    if(deep[u]<deep[v]) swap(u,v);\n    for(int i=20;i>=0;i--)\n        if(deep[u]-(1<<i)>=deep[v]) u=fa[u][i];\n    if(u==v) return u;\n    for(int i=20;i>=0;i--){\n        if(fa[u][i]==fa[v][i]) continue;\n        u=fa[u][i],v=fa[v][i];\n    }return fa[u][0];\n}\nint Q,book[N],sta[N],st;\nint Dis(int u,int v){return deep[u]+deep[v]-2*deep[lca(u,v)];}\nbool cmp(int x,int y){\n    int s1,s2;\n    if(x>0) s1=in[x];else s1=out[-x];\n    if(y>0) s2=in[y];else s2=out[-y];\n    return s1<s2;\n}\nint eff[N];\nvoid build(){\n    memset(head,-1,sizeof(head)),cnt=0;\n    sort(sta+1,sta+st+1,cmp);\n    for(int i=1;i<st;i++){\n        int Lca=lca(sta[i],sta[i+1]);\n        if(!book[Lca]){book[Lca]=1;sta[++st]=Lca;}\n    }\n    int now=st;\n    for(int i=1;i<=now;i++) sta[++st]=-sta[i];\n    if(!book[1]) sta[++st]=1,sta[++st]=-1;\n    sort(sta+1,sta+st+1,cmp);\n    for(int i=1;i<=st;i++){\n        if(sta[i]>0) s.push(sta[i]);\n        else{\n            int f=s.top();s.pop();\n            if(f!=1){int fath=s.top();int dis=Dis(f,fath);add(f,fath,dis),add(fath,f,dis);}\n        }\n    }return;\n}\nint dis[N],bel[N],S[N];\nvoid dfs1(int f,int fath){\n    que[++que[0]]=f;\n    if(eff[f]) dis[f]=0,bel[f]=f;\n    else dis[f]=INT_MAX;\n    S[f]=size[f];\n    for(int i=head[f];i!=-1;i=x[i].nex){\n        if(x[i].v==fath) continue;\n        dfs1(x[i].v,f);\n        if((dis[f]>dis[x[i].v]+x[i].w)||((dis[f]==dis[x[i].v]+x[i].w)&&(bel[f]>bel[x[i].v]))){\n            dis[f]=dis[x[i].v]+x[i].w;\n            bel[f]=bel[x[i].v];\n        }\n    }return;\n}\nint ans[N];\nvoid dfs2(int f,int fath){\n    for(int i=head[f];i!=-1;i=x[i].nex){\n        if(x[i].v==fath) continue;\n        if((dis[f]+x[i].w<dis[x[i].v])||((dis[f]+x[i].w==dis[x[i].v])&&bel[x[i].v]>bel[f])){\n            dis[x[i].v]=x[i].w+dis[f];\n            bel[x[i].v]=bel[f];\n        }\n        dfs2(x[i].v,f);\n        if(bel[f]==bel[x[i].v]) S[f]-=size[x[i].v];\n        else{\n            int DIS=(dis[x[i].v]+deep[x[i].v])+(dis[f]-deep[f])-1;\n            int k=DIS/2-dis[x[i].v];\n            int tmp=remove(x[i].v,deep[x[i].v]-k);\n            if((DIS%2)&&(bel[x[i].v]<bel[f])&&(k>=0)) tmp=fa[tmp][0];\n            S[x[i].v]+=size[tmp]-size[x[i].v];\n            S[f]-=size[tmp];\n        }\n        ans[bel[x[i].v]]+=S[x[i].v];\n    }\n    if(f==1) ans[bel[1]]+=S[1];\n}\nint xs[N];\nint main(){\n    memset(head,-1,sizeof(head));\n    n=read();\n    for(int i=1;i<n;i++){\n        int u=read(),v=read();\n        add(u,v,0),add(v,u,0);\n    }\n    dfs(1,0);\n    Q=read();\n    while(Q--){\n        st=read();\n        for(int i=1;i<=st;i++) sta[i]=read(),book[sta[i]]=1,eff[sta[i]]=1,xs[i]=sta[i];\n        int ST=st;\n        build();\n        dfs1(1,0),dfs2(1,0);\n        for(int i=1;i<=ST;i++) printf(\"%d \",ans[xs[i]]);\n        for(int i=1;i<=que[0];i++) book[que[i]]=eff[que[i]]=dis[que[i]]=bel[que[i]]=S[que[i]]=ans[que[i]]=0;que[0]=0;\n        printf(\"\\n\");\n    }\n    return 0;\n}\n```",
        "postTime": 1546008367,
        "uid": 87382,
        "name": "_sry",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3233 \u3010[HNOI2014]\u4e16\u754c\u6811\u3011"
    },
    {
        "content": "\u6784\u51fa\u865a\u6811\uff0c\u8003\u8651\u63a5\u4e0b\u6765\u600e\u4e48\u505a\u3002\n\n    \n\u9996\u5148\u5bf9\u4e8e\u865a\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\u6c42\u51fa\u5b83\u88ab\u54ea\u4e2a\u5173\u952e\u70b9\u7ba1\u8f96\u3002\u5148\u7528\u513f\u5b50\u66f4\u65b0\u7236\u4eb2\uff0c\u7136\u540e\u7528\u7236\u4eb2\u66f4\u65b0\u513f\u5b50\u3002\uff08\u4e3a\u4ec0\u4e48\u53cd\u8fc7\u6765\u4e0d\u884c\uff1f\u56e0\u4e3a\u5b58\u5728\u67d0\u4e2a\u5173\u952e\u70b9\u7ba1\u8f96\u4e86\u5144\u5f1f\u8282\u70b9\u7684\u60c5\u51b5\uff09\n\n\n\u7136\u540e\u8003\u8651\u4e0d\u5728\u865a\u6811\u4e0a\u7684\u70b9\u3002\n\n    \n$~$\n    \n\u5982\u679c\u4e00\u4e2a\u70b9\u6302\u5728\u865a\u6811\u4e0a\u4e00\u6761\u8fb9\u7684\u4fa7\u94fe\uff0c\u90a3\u4e48\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n    \n1.\u8fd9\u6761\u8fb9\u4e24\u7aef\u7684\u70b9\u88ab\u540c\u4e00\u4e2a\u70b9\u6240\u7ba1\u8f96\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u80af\u5b9a\u4e5f\u88ab\u8fd9\u4e2a\u70b9\u7ba1\u8f96\u3002\n\n    \n2.\u8fd9\u6761\u8fb9\u4e24\u7aef\u7684\u70b9\u88ab\u4e0d\u540c\u7684\u70b9\u6240\u7ba1\u8f96\uff0c\u90a3\u4e48\u8fd9\u6761\u94fe\u4e0a\u5fc5\u5b9a\u5b58\u5728\u4e00\u4e2a\u5206\u754c\u70b9\uff0c\u5206\u754c\u70b9\u4e24\u8fb9\u7684\u70b9\u88ab\u4e0d\u540c\u7684\u70b9\u7ba1\u8f96\u3002\n\n    \n\u5bf9\u4e8e\u60c5\u51b52\uff0c\u6211\u4eec\u53ef\u4ee5\u500d\u589e\u5730\u8df3\u51fa\u8fd9\u4e2a\u5206\u754c\u70b9\uff0c\u8981\u6ce8\u610f\u8ba8\u8bba\u4e00\u4e0b\u8fb9\u754c\u60c5\u51b5\uff0c\u6bd4\u5982\u5230\u7ba1\u8f96\u94fe\u4e24\u7aef\u7684\u5173\u952e\u70b9\u7684\u8ddd\u79bb\u76f8\u7b49\u7684\u60c5\u51b5\u8981\u53d6\u7f16\u53f7\u5c0f\u7684\u90a3\u4e2a\u3002\n\n\n$~$\n\n\u5982\u679c\u4e00\u4e2a\u70b9\u6302\u5728\u865a\u6811\u4e0a\u4e00\u4e2a\u8282\u70b9\u4e0a\uff0c\u90a3\u4e48\u5f88\u7b80\u5355\uff0c\u8fd9\u4e2a\u70b9\u80af\u5b9a\u4e0e\u865a\u6811\u4e0a\u90a3\u4e2a\u70b9\u88ab\u540c\u4e00\u4e2a\u70b9\u6240\u7ba1\u8f96\u3002\n\n    \n$~$\n    \n\u76f4\u63a5\u8fd9\u4e48\u5199\u4f1a\u6bd4\u8f83\u9ebb\u70e6\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u865a\u6811\u4e0a\u540c\u4e00\u4e2a\u70b9\u7ba1\u8f96\u7684\u6240\u6709\u70b9\u770b\u505a\u4e00\u5757\uff0c\u7136\u540e\u6bcf\u5757\u7684\u521d\u59cb\u7b54\u6848\u4e3a\u8fd9\u4e00\u5757\u7684\u5927\u5c0f\u52a0\u4e0a\u8fd9\u4e00\u5757\u5728\u539f\u6811\u4e0a\u4e0b\u6302\u7684\u6240\u6709\u8282\u70b9\u4e2a\u6570\uff0c\u7edf\u8ba1\u7b54\u6848\u7684\u65f6\u5019\u53ea\u9700\u8981\u780d\u6389\u6ca1\u6709\u88ab\u8fd9\u4e00\u5757\u7ba1\u8f96\u7684\u5b50\u6811\u5373\u53ef\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u904d\u5386\u6574\u68f5\u865a\u6811\uff0c\u5bf9\u4e8e\u4e00\u6761\u94fe\u63a5\u4e24\u4e2a\u4e0d\u540c\u5757\u7684\u8fb9\uff0c\u8981\u7edf\u8ba1\u4e00\u4e0b\u8fd9\u6761\u8fb9\u4fa7\u94fe\u6709\u591a\u5c11\u88ab\u4e0b\u9762\u90a3\u4e2a\u5757\u7ba1\u8f96\uff0c\u52a0\u5230\u4e0b\u9762\u90a3\u5757\u7684\u7b54\u6848\u4e2d\uff0c\u7136\u540e\u4ece\u4e0a\u9762\u90a3\u5757\u7684\u7b54\u6848\u4e2d\u51cf\u6389\u88ab\u4e0b\u9762\u90a3\u5757\u7ba1\u8f96\u7684\u70b9\u6570\u3002\n\n    \n\u590d\u6742\u5ea6$O((\\sum{m_i})\\log n)$\u3002\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\n#define For(i,_beg,_end) for(int i=(_beg),i##end=(_end);i<=i##end;++i)\n#define Rep(i,_beg,_end) for(int i=(_beg),i##end=(_end);i>=i##end;--i)\n\ntemplate<typename T>T Max(const T &x,const T &y){return x<y?y:x;}\ntemplate<typename T>T Min(const T &x,const T &y){return x<y?x:y;}\ntemplate<typename T>int chkmax(T &x,const T &y){return x<y?(x=y,1):0;}\ntemplate<typename T>int chkmin(T &x,const T &y){return x>y?(x=y,1):0;}\ntemplate<typename T>void read(T &x){\n    T f=1;char ch=getchar();\n    for(;ch<'0'||ch>'9';ch=getchar())if(ch=='-')f=-1;\n    for(x=0;ch>='0'&&ch<='9';ch=getchar())x=x*10+ch-'0';\n    x*=f;\n}\n\nconst int maxn=300010;\nstruct edge{\n    int to,nxt;\n}e[maxn<<1];\nint n,m,q,num,head[maxn];\nint dfn[maxn],cnt,h[maxn],g[maxn],sta[maxn],top;\nint fa[maxn][20],dep[maxn],size[maxn];\nint ans[maxn],bl[maxn],d[maxn];\nbool vis[maxn];\n\nvoid addedge(int,int);\nvoid Dfs_Init(int);\nint jump(int,int);\nint Dis(int,int);\nint Lca(int,int);\nvoid Build(void);\nvoid Dfs1(int,int);\nvoid Dfs2(int,int);\nvoid Dfs(int,int);\nbool comp(int,int);\n\nint main(){\n    read(n);\n    For(i,1,n-1){\n        int u,v;\n        read(u);read(v);\n        addedge(u,v);\n    }\n    Dfs_Init(1);\n    read(q);\n    while(q--){\n        read(m);\n        For(i,1,m) read(h[i]),vis[h[i]]=true;\n        For(i,1,m) ans[g[i]=h[i]]=0;\n        Build();\n        Dfs1(1,0);Dfs2(1,0);Dfs(1,0);\n        For(i,1,m) printf(\"%d \",ans[g[i]]);\n        putchar(10);\n        For(i,1,m) vis[h[i]]=false;\n    }\n    return 0;\n}\n\nvoid Build(){\n    sort(h+1,h+m+1,comp);\n    num=head[sta[top=1]=1]=0;\n    For(i,1,m){\n        if(h[i]==1) continue;\n        int lca=Lca(h[i],sta[top]);\n        if(lca!=sta[top]){\n            while(dfn[sta[top-1]]>dfn[lca]){\n                addedge(sta[top],sta[top-1]);\n                top--;\n            }\n            if(dfn[sta[top-1]]<dfn[lca]){\n                head[lca]=0;\n                addedge(sta[top],lca);\n                sta[top]=lca;\n            }\n            else addedge(sta[top--],lca);\n        }\n        head[h[i]]=0;\n        sta[++top]=h[i];\n    }\n    For(i,1,top-1) addedge(sta[i],sta[i+1]);\n}\nvoid Dfs1(int x,int f){\n    if(vis[x]) bl[x]=x;\n    int dis=vis[x]?0:0x7fffffff;\n    for(int i=head[x];i;i=e[i].nxt) if(e[i].to!=f){\n        Dfs1(e[i].to,x);\n        int temp=dep[bl[e[i].to]]-dep[x];\n        if(chkmin(dis,temp)) bl[x]=bl[e[i].to];\n        else if(dis==temp) chkmin(bl[x],bl[e[i].to]);\n    }\n    d[x]=dis;\n}\nvoid Dfs2(int x,int f){\n    for(int i=head[x];i;i=e[i].nxt) if(e[i].to!=f){\n        int y=e[i].to;\n        if(chkmin(d[y],d[x]+dep[y]-dep[x])) bl[y]=bl[x];\n        else if(d[y]==d[x]+dep[y]-dep[x]) chkmin(bl[y],bl[x]);\n        Dfs2(y,x);\n    }\n    chkmax(ans[bl[x]],size[x]);\n}\nvoid Dfs(int x,int f){\n    for(int i=head[x];i;i=e[i].nxt) if(e[i].to!=f){\n        if(bl[e[i].to]!=bl[x]){\n            int y=e[i].to,dis=Dis(bl[x],bl[y]),z;\n            if(dis&1) ans[bl[x]]-=size[z=jump(y,dis/2-d[y])];\n            else{\n                z=jump(y,dis/2-d[y]);\n                if(z!=x&&z!=y) z=jump(y,dis/2-d[y]-(bl[x]<bl[y]));\n                else if(z==x) z=jump(y,dis/2-d[y]-1);\n                ans[bl[x]]-=size[z];\n            }\n            if(y!=z) ans[bl[y]]+=size[z]-size[y];\n        }\n        Dfs(e[i].to,x);\n    }\n}\nvoid addedge(int u,int v){\n    e[++num].to=v;e[num].nxt=head[u];head[u]=num;\n    e[++num].to=u;e[num].nxt=head[v];head[v]=num;\n}\nvoid Dfs_Init(int x){\n    dep[x]=dep[fa[x][0]]+1;\n    size[x]=1;dfn[x]=++cnt;\n    For(i,1,19)\n        if(fa[x][i-1]) fa[x][i]=fa[fa[x][i-1]][i-1];\n        else break;\n    for(int i=head[x];i;i=e[i].nxt) if(e[i].to!=fa[x][0]){\n        fa[e[i].to][0]=x;\n        Dfs_Init(e[i].to);\n        size[x]+=size[e[i].to];\n    }\n}\nint jump(int x,int y){\n    For(i,0,19){\n        if((y>>i)&1){\n            x=fa[x][i];\n            y^=(1<<i);\n        }\n        if(!y) break;\n    }\n    return x;\n}\nint Lca(int u,int v){\n    if(dep[u]<dep[v]) swap(u,v);\n    u=jump(u,dep[u]-dep[v]);\n    if(u==v) return u;\n    Rep(i,19,0) if(fa[u][i]!=fa[v][i]){\n        u=fa[u][i];\n        v=fa[v][i];\n    }\n    return fa[u][0];\n}\nint Dis(int x,int y){return dep[x]+dep[y]-2*dep[Lca(x,y)];}\nbool comp(int x,int y){return dfn[x]<dfn[y];}\n```",
        "postTime": 1517216874,
        "uid": 20176,
        "name": "Salamander",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3233 \u3010[HNOI2014]\u4e16\u754c\u6811\u3011"
    },
    {
        "content": "\u53c2\u8003\u4e86ljh2000\u7684\u535a\u5ba2\n\n\u3000\u3000\u540c\u865a\u6811\u7684\u9898\u76ee\u4e00\u6837\uff0c\u8fd9\u9053\u9898\u663e\u7136\u662f\u5148\u8981\u5efa\u51fa\u865a\u6811\uff0c\u7136\u540e\u590d\u6742\u5ea6\u5c31\u53ea\u548c\u5173\u952e\u70b9\u6709\u5173\u4e86\u3002\n\n\u3000\u3000\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\u5efa\u4e00\u68f5\u865a\u6811\uff0c\u5efa\u6cd5\u53c2\u89c1BZOJ2286\n\n\u3000\u3000\u4e4b\u540e\u6211\u4eec\u5728\u865a\u6811\u4e0adfs\u4e00\u904d\uff0c\u5f97\u5230\u6bcf\u4e2a\u70b9\u4ece\u5c5e\u4e8e\u54ea\u4e2a\u8282\u70b9\u3002\u4e4b\u540e\u6211\u4eec\u53ea\u8981\u7edf\u8ba1\u4e0d\u5728\u865a\u6811\u4e2d\u7684\u70b9\uff08\u5728\u865a\u6811\u4e2d\u7684\u70b9\u4e0a\u9762\u7edf\u8ba1\u4e86\u4e0b\u9762\u4e0d\u4f5c\u8003\u8651\uff09\u3002\n\n\u3000\u3000\u8003\u8651\u865a\u6811\u4e0a\u7684\u67d0\u4e00\u6761\u8fb9\uff0c\u5982\u679c\u4e24\u4e2a\u70b9\u540c\u5c5e\u4e8e\u4e00\u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u53ea\u8981\u52a0\u4e0a\u4e24\u70b9\u4e4b\u95f4\u7684\u672a\u5728\u865a\u6811\u4e2d\u7684\u70b9\u6570\u5373\u53ef\u3002\n\n\u3000\u3000\u5047\u5982\u4e24\u4e2a\u70b9\u4e0d\u5c5e\u4e8e\u540c\u4e00\u8282\u70b9\uff0c\u90a3\u4e48\u663e\u7136\u4e2d\u95f4\u4f1a\u5b58\u5728\u5206\u754c\u70b9\uff0c\u500d\u589e\u5730\u627e\u51fa\u8fd9\u4e2a\u5206\u754c\u70b9mid\uff0c\u7136\u540e\u4e24\u8fb9\u5206\u522b\u8ba1\u7b97\u8d21\u732e\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4e3b\u8981\u90e8\u5206\uff1a\u6ce8\u610f\u6211\u8fd8\u9700\u8981\u8bb0\u4e00\u4e2ag\u6570\u7ec4\uff0c\u8868\u793a\u672a\u5728\u4e0a\u8ff0\u7edf\u8ba1\u5230\u7684\u8282\u70b9\u6570\uff0c\u56e0\u4e3a\u6709\u4e00\u4e9b\u70b9\u6ca1\u6709\u5728\u4efb\u4f55\u4e00\u6b21\u8ba8\u8bba\u4e2d\u88ab\u8003\u8651\uff0c\u90a3\u4e48\u663e\u7136\u5c06\u4f1a\u4e0e\u4ed6\u4eec\u5728\u865a\u6811\u4e0a\u7684\u7236\u4eb2\u8282\u70b9\u5c5e\u4e8e\u540c\u4e00\u8282\u70b9\uff0c\u53ea\u8981\u628a\u521d\u503c\u8bbe\u4e3asize\uff0c\u6bcf\u6b21\u5728\u4e0a\u9762\u8ba8\u8bba\u4e00\u6b21\uff0c\u5c31\u628a\u8ba8\u8bba\u7684\u90e8\u5206\u5220\u6389\u5373\u53ef\u3002\n  \n  ```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\ninline int read(){int x=0,f=1,ch=getchar(); while(ch<'0'||ch>'9'){if(ch=='-') f=-1; ch=getchar();} while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();} return x*f;}\ninline void write(int x){if (x<0) putchar('-'),x=-x; if (x>=10) write(x/10); putchar(x%10+'0');}\ninline void writeln(int x){write(x); puts(\"\");}\nconst int N=3e5+5;\nstruct edge{\n\tint link,next;\n}e[N<<1];\nint n,tot,head[N];\ninline void add_edge(int u,int v){\n\te[++tot]=(edge){v,head[u]}; head[u]=tot;\n}\ninline void insert(int u,int v){\n\tadd_edge(u,v); add_edge(v,u);\n}\ninline void init(){\n\tn=read();\n\tfor (int i=1;i<n;i++){\n\t\tint u=read(),v=read();\n\t\tinsert(u,v);\n\t}\n}\nint fa[N][20],sz[N],dep[N],dfn[N],cnt;\nvoid dfs(int u,int Fa){\n\tfa[u][0]=Fa; sz[u]=1; dep[u]=dep[Fa]+1; dfn[u]=++cnt;\n\tfor (int i=1;i<20;i++){\n\t\tfa[u][i]=fa[fa[u][i-1]][i-1];\n\t}\n\tfor (int i=head[u];i;i=e[i].next){\n\t\tint v=e[i].link;\n\t\tif (v!=Fa){\n\t\t\tdfs(v,u); sz[u]+=sz[v];\n\t\t}\n\t}\n}\ninline int LCA(int u,int v){\n\tif (dep[u]<dep[v]) swap(u,v);\n\tint delta=dep[u]-dep[v];\n\tfor (int i=0;i<20;i++){\n\t\tif (delta&(1<<i)){\n\t\t\tu=fa[u][i];\n\t\t}\n\t} \n\tfor (int i=19;i>=0;i--){\n\t\tif (fa[u][i]!=fa[v][i]){\n\t\t\tu=fa[u][i]; v=fa[v][i];\n\t\t}\n\t}\n\tif (u!=v) u=fa[u][0];\n\treturn u;\n}\ninline int dis(int u,int v){\n\treturn dep[u]+dep[v]-2*dep[LCA(u,v)];\n}\nint st,ans[N],g[N],c[N],h[N],belong[N],top,stack[N<<1];\ninline bool cmp(int x,int y){\n\treturn dfn[x]<dfn[y];\n} \ninline void insert(int x){\n\tif (top==1) {\n\t\tstack[++top]=x;\n\t\treturn;\n\t}\n\tint lca=LCA(x,stack[top]);\n\twhile (top>1&&dfn[stack[top-1]]>=dfn[lca]) add_edge(stack[top-1],stack[top]),top--;\n\tif (stack[top]!=lca) add_edge(lca,stack[top]),stack[top]=lca;\n\tstack[++top]=x; \n}\nvoid dfs1(int u){\n\tg[u]=sz[u]; c[++cnt]=u;\n\tfor (int i=head[u];i;i=e[i].next){\n\t\tint v=e[i].link;\n\t\tdfs1(v);\n\t\tif (!belong[v]) continue;\n\t\tif (!belong[u]){\n\t\t\tbelong[u]=belong[v];\n\t\t\tcontinue;\n\t\t}\n\t\tint d1=dis(belong[u],u),d2=dis(belong[v],u);\n\t\tif (d1>d2||(d1==d2&&belong[u]>belong[v])) {\n\t\t\tbelong[u]=belong[v];\n\t\t}\n\t}\n}\nvoid dfs2(int u){\n\tfor (int i=head[u];i;i=e[i].next){\n\t\tint v=e[i].link;\n\t\tif (!belong[v]) {\n\t\t\tbelong[v]=belong[u];\n\t\t}else{\n\t\t\tint d1=dis(belong[v],v),d2=dis(belong[u],v);\n\t\t\tif (d1>d2||(d1==d2&&belong[u]<belong[v])) {\n\t\t\t\tbelong[v]=belong[u];\n\t\t\t}\n\t\t}\n\t\tdfs2(v); \n\t}\n}\ninline void calc(int Fa,int u){\n\tint son=u,mid=u;\n\tfor (int i=19;i>=0;i--){\n\t\tif (dep[fa[son][i]]>dep[Fa]){\n\t\t\tson=fa[son][i];\n\t\t}\n\t}\n\tg[Fa]-=sz[son];\n\tif (belong[Fa]==belong[u]){\n\t\tans[belong[Fa]]+=sz[son]-sz[u];\n\t\treturn;\n\t}\n\tfor (int i=19;i>=0;i--){\n\t\tint nxt=fa[mid][i];\n\t\tif (dep[nxt]<=dep[Fa]) continue;\n\t\tint d1=dis(belong[u],nxt),d2=dis(belong[Fa],nxt);\n\t\tif (d1<d2||(d1==d2&&belong[u]<belong[Fa])) {\n\t\t\tmid=nxt;\n\t\t}\n\t}\n\tans[belong[Fa]]+=sz[son]-sz[mid];\n\tans[belong[u]]+=sz[mid]-sz[u];\n}\nint b[N];\ninline void solve(){\n\tdfs(1,0); int q=read(); tot=0; memset(head,0,sizeof head );\n\twhile (q--){\n\t\tint m=read();\n\t\tfor (int i=1;i<=m;i++){\n\t\t\tb[i]=h[i]=read();\n\t\t}\n\t\tfor (int i=1;i<=m;i++){\n\t\t\tbelong[h[i]]=h[i];\n\t\t}\n\t\tsort(h+1,h+1+m,cmp); stack[top=1]=1;\n\t\tcnt=0;\n\t\tif (h[1]==1) st=2; else st=1;\n\t\tfor (int i=st;i<=m;i++){\n\t\t\tinsert(h[i]);\n\t\t}\n\t\twhile (top>1) {add_edge(stack[top-1],stack[top]); top--;}\n\t\tdfs1(1); dfs2(1);\n\t\tfor (int i=1;i<=cnt;i++){\n\t\t\tfor (int j=head[c[i]];j;j=e[j].next){\n\t\t\t\tint v=e[j].link;\n\t\t\t\tcalc(c[i],v);\n\t\t\t}\n\t\t}\n\t\tfor (int i=1;i<=cnt;i++) ans[belong[c[i]]]+=g[c[i]];\n\t\tfor (int i=1;i<=m;i++) write(ans[b[i]]),putchar(' ');\n\t\tputs(\"\");\n\t\tfor (int i=1;i<=cnt;i++) ans[c[i]]=head[c[i]]=g[c[i]]=belong[c[i]]=0;\n\t\ttot=0;\n\t}\n}\nint main(){\n\tinit();\n\tsolve();\n\treturn 0;\n} \n```",
        "postTime": 1534220364,
        "uid": 34444,
        "name": "\u5927\u83dc\u9e21fks",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3233 \u3010[HNOI2014]\u4e16\u754c\u6811\u3011"
    }
]