[
    {
        "content": "### \u6837\u4f8b\u8f93\u5165\n```\n5\n8 10 3 11 1\n```\n\n### \u6837\u4f8b\u8f93\u51fa\n```\n3.0\n```\n## \u5148\u662f\u4e00\u4e9b\u788e\u788e\u5ff5\n\n\u6211\u7684\u601d\u8def\u5b9e\u9645\u4e0a\u6709\u70b9\u7e41\u7410\uff0c\u6211\u770b\u5176\u4ed6ac\u5de8\u4f6c\u7684\u4ee3\u7801\u90fd\u662f1kb\u4ee5\u4e0b\uff0c\u6211\u7684\u76f4\u63a51.5kb+\u4e86\u3002\u7136\u800c\u4ed6\u4eec\u90fd\u4e0d\u613f\u610f\u5199\u9898\u89e3\uff08\u6211\u5199\u8fd9\u7bc7\u9898\u89e3\u7684\u65f6\u5019\u8fd9\u9898\u7684\u9898\u89e3\u5e93\u8fd8\u662f\u7a7a\u65e0\u4e00\u7269\uff09\uff0c\u6240\u4ee5\u6211\u6597\u80c6\u628a\u81ea\u5df1\u7684\u60f3\u6cd5\u53d1\u4e0a\u6765\u4e86\u3002\n\n## \u5148\u770b\u6570\u636e\nn\u6700\u5927\u53ef\u8fbe50000\uff0c\u4e00\u822c\u4f1a\u5411O(nlogn)\u7684\u590d\u6742\u5ea6\u601d\u8003\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u8fdb\u884c\u4e8c\u5206\u3002\n\n## \u4ece\u4e8c\u5206\u5f00\u59cb\u5165\u624b\n\u6240\u4ee5\u6211\u4eec\u5148\u7528f[i]\u8bb0\u5f55\u4ee5i\u4e3a\u4ee5i\u4e3a\u5706\u5fc3\u53ef\u4ee5**\u5411\u5de6\u8986\u76d6\u524di-1\u4e2a\u70b9**\u7684\u6700\u5c0f\u534a\u5f84\u3002\n\u518d\u7528g[i]\u8bb0\u5f55\u4ee5i\u4e3a\u5706\u5fc3\u53ef\u4ee5**\u5411\u53f3\u8986\u76d6\u81f3\u7b2cn\u4e2a\u70b9**\u7684\u6700\u5c0f\u534a\u5f84\u3002\n\n\u6839\u636e\u8d2a\u5fc3\u539f\u7406\uff0c\u5047\u8bbe\u7b2ci\u4e2a\u8349\u5806\u5904\u5728\u67d0\u4e00\u6b21\u7206\u70b8\u7684**\u5de6\u8fb9\u754c**\uff0c\u5219\u7206\u70b8\u8303\u56f4\u7684**\u53f3\u8fb9\u754c**\u53ef\u4ee5\u8986\u76d6\u66f4\u8fdc\u7684\u8303\u56f4\uff0c\u90a3\u4e48\u8fd9\u6b21\u7206\u70b8**\u5411\u53f3\u4f20\u9012\u7684\u6700\u5c0f\u534a\u5f84**\u5fc5\u7136\u6bd4\u7b2ci\u4e2a\u8349\u5806\u5728\u5de6\u8fb9\u754c\u5185\u7684**\u5411\u53f3\u4f20\u9012\u7684\u6700\u5c0f\u534a\u5f84**\u4e0d\u5927\u3002\n\n\u90a3\u4e48\u6211\u4eec\u4e8c\u5206\u679a\u4e3e\u7b2c\u4e00\u6b21\u7206\u70b8\u7684\u534a\u5f84r\u3002\n\n\u679a\u4e3ei\uff0c\u5373\u7b2ci\u4e2a\u8349\u5806\u4e3a\u8fd9\u6b21\u7206\u70b8\u7684\u5de6\u8fb9\u754c\uff0c\u518d\u5728\u5de6\u8fb9\u754c\u5230\u53f3\u8fb9\u754c\u7684\u8349\u5806\u4e2d\u679a\u4e3ej\uff0c\u5982\u679cf[i]+1<=r\u5e76\u4e14g[i]+1<=r\uff0c\u5219\u8bf4\u660e\u8fd9\u4e2a\u65b9\u6848\u53ef\u884c\u3002\n\n```\nbool check(double x)\n{\n    for(int i=n;i>=1;i--)\n    {\n        if(f[i]+1<=x)\n        {\n            for(int j=i;j<=n&&a[j]<=a[i]+2.0*x;j++)\n                if(g[j]+1<=x) return true;\n            break;\n        }\n    }\n    return false;\n}\n```\n\n## \u5176\u5b9e\uff0c\u771f\u6b63\u7684\u9ebb\u70e6\u5904\uff0c\u5728\u9884\u5904\u7406\n\n\u6211\u4eec\u8981\u5bf9f[i]\u548cg[i]\u8fdb\u884c\u9884\u5904\u7406\n\nO(n2)\u590d\u6742\u4e0b\u7684\u9884\u5904\u7406\u5982\u4e0b\n\n```\nfor(int i=2;i<=n;i++)\n    {\n        f[i]=999999999;\n        for(int j=i;j>=1;j--)\n        {\n            f[i]=min(f[i],max(a[i]-a[j-1],f[j-1]+1));\n            if(f[j-1]+1<a[i]-a[j-1]) break;\n        }\n    }\n    for(int i=n-1;i>=1;i--)\n    {\n        g[i]=9999999999;\n        for(int j=i;j<n;j++)\n        {\n            g[i]=min(g[i],max(a[j+1]-a[i],g[j+1]+1));\n            if(g[j+1]+1<a[j+1]-a[i]) break;\n        }\n    }\n```\n\n\u5728\u8fd9\u6bb5\u9884\u5904\u7406\u4e2d\uff0ca[i]-a[j-1]**\u968fj\u7684\u589e\u52a0\u800c\u9012\u51cf**\uff0c\u800cf[j-1]**\u968fj\u7684\u589e\u52a0\u800c\u9012\u589e**\uff0c\u6240\u4ee5\u8fd9\u6b21max(a[i]-a[j-1],f[j-1]+1)\u4e00\u5b9a\u5728a[i]-a[j-1]\u548cf[j-1]\u5927\u5c0f\u4ea4\u754c\u5904\u53d6\u5f97\uff0c\u6240\u4ee5\u8fbe\u5230\u8fd9\u4e2a\u8fb9\u754c\u65f6\u53ef\u4ee5break\u9000\u51fa\u3002\n\n\u4f46\u8fd9\u4e2aO(n2)\u9884\u5904\u7406\u52a0\u4e0a\u8fb9\u754c\u5224\u65ad\u4e5f\u8fdc\u8fdc\u4e0d\u80fd\u6ee1\u8db350000\u7684\u6570\u636e\u3002\n\n\u65e2\u7136\u8981\u627e\u8fb9\u754c\uff0c\u800c\u4e14\u8fd9\u4e2a\u8fb9\u754c\u7684\u5224\u65ad\u6709\u5355\u8c03\u6027\uff0c\u90a3\u4e48\u6211\u4eec\u628a\u679a\u4e3ej\u7684\u8fc7\u7a0b\u6539\u6210**\u4e8c\u5206**\n\n```\nfor(int i=2;i<=n;i++)\n    {\n        f[i]=999999999;\n        int l=1,r=i;\n        while(l+1<r)\n        {\n        \tint mid=(l+r)/2;\n        \tif(f[mid-1]+1<a[i]-a[mid-1]) l=mid;\n        \telse r=mid;\n\t\t}\n\t\tf[i]=min(max(a[i]-a[l-1],f[l-1]+1),max(a[i]-a[r-1],f[r-1]+1));\n    }\n    for(int i=n-1;i>=1;i--)\n    {\n        g[i]=9999999999;\n        int l=i,r=n-1;\n        while(l+1<r)\n        {\n        \tint mid=(l+r)/2;\n        \tif(g[mid+1]+1<a[mid+1]-a[i]) r=mid;\n        \telse l=mid;\n\t\t}\n\t\tg[i]=min(max(a[l+1]-a[i],g[l+1]+1),max(a[r+1]-a[i],g[r+1]+1));\n    }\n```\n\u56e0\u4e3a\u6211\u4eec\u8981\u627e\u8fb9\u754c\u5904\u7684\u6570\u636e\u8fdb\u884c\u5904\u7406\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u6761\u4ef6\u7f6e\u4e3al+1<r\uff0c\u4fdd\u8bc1l\u5728\u8fb9\u754c\u5904\u5de6\u4fa7\uff0cr\u5728\u8fb9\u754c\u5904\u53f3\u4fa7\u3002\n\n\u5927\u4f53\u7684\u601d\u8def\u5c31\u662f\u8fd9\u6837\u5427\n\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\ninline int read()\n{\n    int x=0;\n    char c=getchar();\n    while(c<'0'||c>'9') c=getchar();\n    while(c<='9'&&c>='0')\n    {\n        x=x*10+c-'0';\n        c=getchar();\n    }\n    return x;\n}\n\nint n;\ndouble a[50005];\ndouble ans;\ndouble eps=0.001;\ndouble f[50005],g[50005];\n\nvoid pre()\n{\n    f[1]=g[n]=0;\n    for(int i=2;i<=n;i++)\n    {\n        f[i]=999999999;\n        int l=1,r=i;\n        while(l+1<r)\n        {\n        \tint mid=(l+r)/2;\n        \tif(f[mid-1]+1<a[i]-a[mid-1]) l=mid;\n        \telse r=mid;\n\t\t}\n\t\tf[i]=min(max(a[i]-a[l-1],f[l-1]+1),max(a[i]-a[r-1],f[r-1]+1));\n    }\n    for(int i=n-1;i>=1;i--)\n    {\n        g[i]=9999999999;\n        int l=i,r=n-1;\n        while(l+1<r)\n        {\n        \tint mid=(l+r)/2;\n        \tif(g[mid+1]+1<a[mid+1]-a[i]) r=mid;\n        \telse l=mid;\n\t\t}\n\t\tg[i]=min(max(a[l+1]-a[i],g[l+1]+1),max(a[r+1]-a[i],g[r+1]+1));\n    }\n} \n\nbool check(double x)\n{\n    for(int i=n;i>=1;i--)\n    {\n        if(f[i]+1<=x)\n        {\n            for(int j=i;j<=n&&a[j]<=a[i]+2.0*x;j++)\n                if(g[j]+1<=x) return true;\n            break;\n        }\n    }\n    return false;\n}\n\nvoid solve()\n{\n    double l=1.0,r=a[n]*1.0;\n    while(eps<r-l)\n    {\n        double mid=(l+r)/2.0;\n        if(check(mid)) r=mid;\n        else l=mid;\n    }\n    ans=l;\n}\n\nint main()\n{\n\tfreopen(\"angrycow.txt\",\"r\",stdin);\n    n=read();\n    for(int i=1;i<=n;i++)\n        a[i]=read();\n    sort(a+1,a+1+n);\n    pre();\n    solve();\n    printf(\"%.1f\",ans);\n    return 0;\n} \n```",
        "postTime": 1536416418,
        "uid": 26039,
        "name": "\u53cb\u4ebaA_lie_of_April",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3132 \u3010[USACO16JAN]\u6124\u6012\u7684\u5976\u725bAngry Cows\u3011"
    },
    {
        "content": "\u5b9e\u9645\u4e0a\u697c\u4e0b\u7684\u9898\u89e3\u8fd8\u662f\u53ef\u4ee5\u7ee7\u7eed\u4f18\u5316\u7684\uff0c\n\u56e0\u4e3af\u4e0ex\u7684\u5dee\u90fd\u5177\u6709\u5355\u8c03\u6027\uff0c\u800c\u7b54\u6848\u53bb\u5176\u4e2d\u7684\u6700\u5927\u503c\uff0c\u6240\u4ee5\u5bf9\u4e8ej>i,f[j]\u7684\u6700\u4f18\u51b3\u7b56\u70b9\u4e00\u5b9a\u5728f[i]\u7684\u51b3\u7b56\u70b9\u7684\u53f3\u8fb9\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u6027\u8d28\u4f18\u5316\u4e86\u3002\n\u65f6\u95f4\u590d\u6742\u5ea6O\uff08n\uff09\uff08\u9664\u5f00\u6392\u5e8f\uff09\n\u4e0b\u9762\u8d34\u4ee3\u7801\uff08f1\u5bf9\u5e94\u697c\u4e0bg\uff09\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n long n,x[50001],f[50001],f1[50001],ans=0x3f3f3f3f,l,r,now;\n bool ans1;\nint main()\n{\nfreopen(\"a.in\",\"r\",stdin);\n scanf(\"%ld\",&n);\n for(int i=1;i<=n;i++)\n  scanf(\"%ld\",&x[i]);\n sort(x+1,x+n+1);\n f[1]=0;\n now=1;\n for(int i=2;i<=n;i++)\n  {\n   while(x[i]-x[now]>=f[now]+1&&now<i-1) now++;\n   if(f[now]+1>x[i]-x[now-1])\n    now--;\n   f[i]=max(f[now]+1,x[i]-x[now]);\n  }\n f1[n]=0;now=n;  \n for(int i=n-1;i>=1;i--)\n {\n  while(x[now]-x[i]>=f1[now]+1&&now>i+1) now--;\n  if(f1[now]+1>x[now+1]-x[i]&&now<n) now++;\n  f1[i]=max(f1[now]+1,x[now]-x[i]);\n }\n now=1;\n for(int i=1;i<=n;i++)\n {\n l=r;\n  while(x[i]-x[now]>=(f[now]+1)*2&&now<i-1) \n   now++;\n  if(x[i]-x[now-1]<(f[now]+1)*2) now--;\n  if(max(f1[i]+1,max(f[now]+1,(x[i]-x[now])/2))<ans||(max(f1[i]+1,max(f[now]+1,(x[i]-x[now])/2))==ans&&((x[i]-x[now])%2<ans1)))\n   {\n   ans=max(f1[i]+1,max(f[now]+1,(x[i]-x[now])/2));\n   if((x[i]-x[now])/2>=f[now]+1&&(x[i]-x[now])/2>=f1[i]+1)\n   ans1=(x[i]-x[now])%2;\n  else ans1=0;\n }\n }\n  printf(\"%ld\",ans);\n  if(ans1)\n   printf(\".5\");\n   else printf(\".0\");\n return 0;\n}\n\n```\n\u56e0\u4e3a\u6211\u5199\u5f97\u4e11\uff0c\u624d\u8dd1\u4e86142ms\uff08rank1\u5199\u7684\u4f3c\u4e4e\u662fnlogn\u7684\uff09",
        "postTime": 1540561633,
        "uid": 31622,
        "name": "qzr_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3132 \u3010[USACO16JAN]\u6124\u6012\u7684\u5976\u725bAngry Cows\u3011"
    },
    {
        "content": "\u672c\u9898\u6700\u56f0\u96be\u7684\u5730\u65b9\uff1a\n\n\u672c\u673a\u53ef\u4ee5\u8fc7\u4ea4\u4e0a\u53bb\u5c31$RE$\uff0c\u5927\u6570\u636e\u653e\u5230$CF$\u4e0a\u7a33\u8fc7\u8fd9\u91cc$RE$\u3002\n\n\uff08\u54c8\uff1f\uff09\n\n\u4e0a\u9762\u90a3\u4e2a\u95ee\u9898\u53ef\u4ee5\u6536\u5bb9\u5230~~CSP~~\u4e86\u5427\uff1f\n\n\u901a\u8fc7\u4e00\u7cfb\u5217$rp$\u7384\u5b66\u64cd\u4f5c\uff0c\u603b\u4e4b\u89e3\u51b3\u4e86$RE$\u7684\u95ee\u9898\uff0c\u7136\u540e\u6211\u4eec\u6765\u8bf4\u4e00\u4e0b\u8fd9\u9898\u7684\u505a\u6cd5\uff1a\n\n\u4e8c\u5206\u80af\u5b9a\u662f\u9700\u8981\u7684\uff0c\u8fd9\u9898\u4e00\u770b\u5c31\u80fd\u53d1\u73b0\u5982\u679c$r$\u80fd\u6210\u529f\u70b8\u6389\u5168\u90e8\u70b9\uff0c\u90a3\u4e48\u4efb\u610f\u5927\u4e8e$r$\u7684\u534a\u5f84\u4e5f\u80fd\u70b8\u6389\u5168\u90e8\u70b9\u3002\n\n\u90a3\u4e48\u4e8c\u5206\u4e00\u4e2a$r$\uff0c\u8fd9\u91cc\u6709\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u6a21\u62df\u7684\u65b9\u6cd5\u6765\u5e2e\u52a9\u5224\u65ad$r$\u662f\u5426\u53ef\u884c\uff1a\n\n\u6211\u4eec\u8bbe$r[i]$\u8868\u793a\u5f15\u7206$i$\u53f7\u70b9\u7684\u70b8\u836f\u7684\u51b2\u51fb\u6ce2\u7684\u8303\u56f4\uff0c\u8bbe$a[i]$\u662f$i$\u53f7\u70b9\u7684\u4f4d\u7f6e\n\n\u68c0\u67e5$mid$\u662f\u5426\u53ef\u884c\uff0c\u6211\u4eec\u5148\u5047\u8bbe\u4ece\u67d0\u4e2a\u70b9\u4e00\u8def\u70b8\u5230$a[1]$\uff0c\u70b8\u5230$a[1]$\u7684\u90a3\u4e2a\u51b2\u51fb\u6ce2\u7684\u534a\u5f84\u662f$r[1]=a[2]-a[1]$\u3002\n\n\u90a3\u4e48\u53ef\u4ee5\u8fd9\u6837\u9006\u63a8\u56de\u53bb\uff1a\n\n\u627e\u5230\u4e00\u4e2a$maxn$\u6ee1\u8db3$a[maxn]-a[i]=r[i]$\uff0c\u5982\u679c$maxn=i$\uff0c\u8bf4\u660e\u76ee\u524d\u7684$r[i]$\u5c0f\u4e86\uff0c\u90a3\u4e48\u4fee\u6b63$r[i]=a[i+1]-a[i]$\uff0c\u7136\u540e\u6839\u636e\u4fee\u6b63\u540e\u7684$r[i]$\u66f4\u65b0$maxn$\u3002\u6700\u540e$r[maxn]=r[i]+1$\u3002\n\n\u5982\u679c$r[i]>=mid$\uff0c\u8bf4\u660e\u6b64\u70b9\u662f\u7b2c\u4e00\u6279\u88ab\u5f15\u7206\u7684\uff0c\u5f53\u7136\uff0c\u6211\u4eec\u4e3a\u4e86\u4fdd\u8bc1\u540e\u9762\u7684\u70b9\u5c3d\u53ef\u80fd\u88ab\u5f15\u7206\uff0c\u6211\u4eec\u5c31\u5047\u8bbe\u8fd9\u4e2a\u70b9\u662f\u7b2c\u4e00\u6279\u5f15\u7206\u7684\u5de6\u7aef\u70b9\u3002\n\n\u90a3\u4e48\u6211\u4eec\u627e\u5230\u7b2c\u4e00\u6b21\u5f15\u7206\u7684\u53f3\u7aef\u70b9$maxn$\u6ee1\u8db3$r[maxn]-r[i]<=2mid$\u3002\n\n\u6700\u540e\u6211\u4eec\u53ea\u9700\u8981\u4ece$maxn$\u70b9\u5f00\u59cb\u5f80\u53f3\u505a\u4e00\u904d\u6a21\u62df\uff0c\u5982\u679c\u80fd\u8986\u76d6\u6240\u6709\u70b9\u5c31\u8bf4\u660e$mid$\u53ef\u884c\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u7b80\u5355\u7684\u4e8c\u5206\u4e86\u3002\n\n\uff08ps\uff1a\u4e24\u79cd\u4e8c\u5206\u65b9\u6848\uff1a1.\u6d6e\u70b9\u6570\u4e8c\u5206\uff08\u6211TLE\u4e86\uff092.\u5c06\u5750\u6807\u8f74\u4e58$2$\uff0c\u56e0\u4e3a\u7b54\u6848\u8981\u4e48\u5728\u4e24\u4e2a\u70b9\u4e2d\u95f4\u8981\u4e48\u5728\u70b9\u4e0a\uff0c\u53ea\u4f1a\u5b58\u5728$X.0$\u6216\u8005$X.5$\uff0c\u6700\u540e\u5224\u65ad\u4e00\u4e0b\u8f93\u51fa\u5c31\u597d\u4e86\uff09\u3002\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\n\nint n;\nint x[100005];\n\nbool check(int r)\n{\n    int minn=0;\n    int maxn=1;\n    int en=1,st=1;\n    for(int i=1;i<=n;i++)\n    {\n        minn+=2;\n        if(i==n)return true;\n        if(minn+2>r){en=i;break;}\n        if(x[i+1]-x[i]>minn){\n            minn=x[i+1]-x[i];\n        }\n        if(minn>=r){en=i;break;}\n        maxn=i;\n        while(maxn<n&&x[maxn+1]-x[i]<=minn)\n            maxn++;\n        i=maxn-1;\n    }\n    if(en==n)return true;\n    st=en;\n    while(st<n&&x[st+1]-x[en]<=2*r)\n        st++;\n    if(st==en)return false;\n    minn=r;\n    maxn=st;\n    for(int i=st;i<=n;i++)\n    {\n        minn-=2;\n        if(i==n)return true;\n        if(x[i+1]-x[i]>minn)return false;\n        while(maxn<n&&x[maxn+1]-x[i]<=minn)\n            maxn++;\n        i=maxn-1;\n    }\n    return true;\n}\n\nlong long erfen(long long l,long long r)\n{\n    if(l==r)return l;\n    long long mid=(l+r)/2;\n    if(check(mid))return erfen(l,mid);\n    else return erfen(mid+1,r);\n}\n\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&x[i]),x[i]*=2;\n    sort(x+1,x+1+n);\n    long long ans=erfen(0,x[n]);\n    if(ans%2)printf(\"%lld.5\\n\",ans/2);\n    else printf(\"%lld.0\\n\",ans/2);\n    return 0;\n}\n\n```\n",
        "postTime": 1568710311,
        "uid": 34663,
        "name": "redegg",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3132 \u3010[USACO16JAN]\u6124\u6012\u7684\u5976\u725bAngry Cows\u3011"
    },
    {
        "content": "# \u9898\u89e3 P3132 \u3010[USACO16JAN]Angry Cows G\u3011\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3132)\n\n----------------------\n\n\u770b\u5230\u5404\u4f4d\u5de8\u4f6c\u90fd\u662f\u7528\u4e8c\u5206\u5199\u7684\u9898\u89e3\uff0c\u6211\u89c9\u5f97\u53ef\u4ee5\u6709\u4e0d\u540c\u7684\u89e3\u6cd5\u3002\u90a3\u5c31\u662f**\u5355\u8c03\u961f\u5217\u4f18\u5316dp**\u3002\n\n\u6211\u4eec\u7528$f[i]$\u8868\u793a\u6467\u6bc1\u6240\u6709$i$\u5de6\u4fa7\u7684\u70b8\u836f\u5305\u6700\u5c11\u9700\u8981\u7684\u80fd\u91cf\uff0c\u7528$g[i]$\u8868\u793a\u6467\u6bc1\u6240\u6709$i$\u53f3\u4fa7\u7684\u70b8\u836f\u5305\u6700\u5c11\u9700\u8981\u7684\u80fd\u91cf\u3002\n\n\u89c2\u5bdf\u5f97\uff0c\u5982\u679c$a[i]$-$a[j]$\u6bd4$f[j]$+$1$\u8fd8\u8981\u5c0f\u7684\u8bdd\uff0c\u90a3\u4e48\u4ece$i$\u70b9\u5f15\u53d1\u7684\u7206\u70b8\u662f\u53ef\u4ee5\u6ce2\u53ca\u5230$j$\u70b9\u7684\uff0c\u800c\u8fd9\u5e76\u4e0d\u9700\u8981\u5b9e\u65f6\u66f4\u65b0\uff0c\u7b49\u5230\u4e0d\u6ee1\u8db3\u65f6\u518d\u66f4\u65b0\u4e5f\u4e0d\u8fdf\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u627e\u5230\u6ee1\u8db3$j<i$,$a[i]$-$a[j]$>$f[j]$+$1$\u7684\u6700\u540e\u4e00\u4e2a$j$\uff0c\u5c31\u53ef\u4ee5\u66f4\u65b0$f[i]$\u7684\u503c\uff0c$f[i]$=$min$($f[i]$,$a[i]$-$a[j]$,$f[j]$+1);\u540c\u7406,$g[i]$\u4e5f\u662f\u8fd9\u6837\u66f4\u65b0\u3002\n\n\u6700\u540e\u679a\u4e3e\u4e00\u4e0b\u7206\u70b8\u70b9\u7684\u4f4d\u7f6e\u5373\u53ef\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\u6295\u70b8\u5f39\u65f6\u53ea\u6709\u53ef\u80fd\u6295\u5728\u70b9\u4e0a\u6216\u6295\u5728\u4e24\u70b9\u4e4b\u95f4\u3002\u6240\u4ee5\u53ea\u9700\u628a\u6240\u6709\u6570\u636e$*2$\u540e\uff0c\u7b54\u6848\u8f93\u51fa\u65f6\u518d$/2$\u5373\u53ef\u3002\n\n### \u4e0a\u4ee3\u7801\u300b\u300b\n\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n#include<vector>\n#include<iostream>\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\n#define maxn 5000010\n#define inf 0x3f3f3f3f\nconst int mod=100003;\n\nvoid read(ll &x){\n\tint f=1;x=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-') f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') {x=x*10+ch-'0';ch=getchar();}\n\tx*=f;\n}\nll n,a[maxn];\nll pos[maxn],f[maxn],g[maxn];\nint main(){\n\tread(n);\n\tfor(int i=1;i<=n;i++){\n\t\tll x;read(x);\n\t\ta[i]=x<<1;\n\t}\n\tsort(a+1,a+n+1);\n\tn=unique(a+1,a+1+n)-a-1;\n\tmemset(f,inf,sizeof(f));\n\tmemset(g,inf,sizeof(g));\n\tf[1]=-2;\n\tint head=0,tail=0;\n\tfor(int i=2;i<=n;i++){\n\t\twhile(head+1<i&&a[i]-a[head+1]>f[head+1]+2){\n\t\t\thead++;\n\t\t}\n\t\tf[i]=min(f[head+1]+2,a[i]-a[head]);\n\t}\n\tg[n]=-2,tail=n;\n\tll ans=0x3f3f3f3f;\n\tfor(int i=n-1;i>=1;i--){\n\t\twhile(tail-1>i&&a[tail-1]-a[i]>g[tail-1]+2){\n\t\t\ttail--;\n\t\t} \n\t\tg[i]=min(a[tail]-a[i],g[tail-1]+2);\n\t} \n\thead=1,tail=n;\n\twhile(head<tail){\n\t\tans=min(ans,max((a[tail]-a[head])>>1,2+max(g[tail],f[head])));\n\t\tif(f[head+1]<g[tail-1])head++;\n\t\telse tail--; \n\t}\n\tprintf(\"%.1lf\\n\",(double)ans/2.0);\n\treturn 0;\n}\n```\n\n _**\u751f\u304d\u308b\u3053\u3068\u306f\u8003\u3048\u308b\u3053\u3068\u3002**_ \n\n",
        "postTime": 1596954843,
        "uid": 225703,
        "name": "jyz666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3132 \u3010[USACO16JAN]Angry Cows G\u3011"
    },
    {
        "content": "~~\u4e0d\u77e5\u9053\u54ea\u91cc\u5047\u4e86\u5c31\u7279\u5224\u4e86\u4e2a\u70b9\uff0c\u4e0d\u8fc7\u6b63\u786e\u6027\u6709\u4fdd\u969c~~\n\n\u5199\u4e86\u4e2a\u590d\u6742\u5ea6\u6bd4\u8f83\u8fa3\u9e21\u7684\u4ee3\u7801\uff0c\u4e0d\u8fc7\u611f\u89c9\u601d\u8def\u6bd4\u8f83\u4eb2\u6c11/jk\n\n\u9996\u5148\u4e8c\u5206\u534a\u5f84\u5c31\u4e0d\u8bb2\u4e86\uff0c\u8fd9\u91cc\u6211\u9009\u62e9\u7684\u662f\u4e8c\u5206\u6574\u6570\u540e\u518d\u5224\u65ad\u53ef\u4e0d\u53ef\u4ee5\u51cf\u6389 0.5 \u3002\n\n\u9996\u5148\u8003\u8651\u66b4\u529b \uff1a \u679a\u4e3e\u6bcf\u4e2a\u70b9\u548c\u76f8\u90bb\u4e24\u70b9\u4e2d\u95f4\u7684\u70b9\u4f5c\u4e3a\u8d77\u70b9\u770b\u80fd\u4e0d\u80fd\u591f\u5230\u5de6\u53f3\u4e24\u7aef\uff0c\u5982\u679c\u5b58\u5728\u4e00\u70b9\u80fd\u591f\u5230\u8fbe\u5373\u8fd9\u4e2a\u534a\u5f84\u53ef\u884c\uff0c\u590d\u6742\u5ea6 $O(n^2logn)$\n\n\u4e0b\u9762\u5b9a\u4e49\u5de6\u4e3a\u5750\u6807\u5c0f\uff0c\u53f3\u4e3a\u5750\u6807\u5927\u3002\n\n\u89c2\u5bdf\u4e00\u4e2a\u6bd4\u8f83\u663e\u7136\u7684\u7ed3\u8bba\uff1a\u5982\u679c\u4ece\u67d0\u4e00\u4e2a\u8282\u70b9\u51fa\u53d1\u80fd\u5230\u8fbe\u5750\u6807\u6700\u5c0f\u7684\u70b9\uff0c\u90a3\u4e48\u6bd4\u4ed6\u5750\u6807\u5c0f\u7684\u70b9\u51fa\u53d1\u90fd\u53ef\u4ee5\u5230\u8fbe\uff08\u5373\u5355\u8c03\u6027\uff09\u3002\u5750\u6807\u5927\u7684\u7aef\u70b9\u540c\u7406\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u8d77\u59cb\u70b9\u8fdb\u884c\u4e8c\u5206\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u534a\u5f84\uff0c\u6211\u4eec\u9996\u5148\u627e\u51fa\u4e00\u4e2a\u5750\u6807\u5c3d\u53ef\u80fd\u5927\u4e14\u80fd\u591f\u70b8\u5230\u5de6\u7aef\u70b9\u7684\u70b9\uff0c\u7136\u540e\u5224\u65ad\u4ece\u8fd9\u4e2a\u70b9\u5f00\u59cb\u70b8\u80fd\u5426\u70b8\u5230\u53f3\u7aef\u70b9\u3002\u6613\u8bc1\u5982\u679c\u8fd9\u4e2a\u70b9\u4e0d\u80fd\u70b8\u5230\u4e24\u7aef\uff0c\u90a3\u4e48\u4e0d\u5b58\u5728\u80fd\u591f\u70b8\u5230\u4e24\u7aef\u7684\u70b9\u3002\n\n\u641e\u660e\u767d\u8fd9\u70b9\u540e\uff0c\u5bf9\u4e8e\u70b8\u7684\u64cd\u4f5c\u6211\u4eec\u6bcf\u6b21\u90fd\u66b4\u529b\u627e\u5230\u80fd\u70b8\u5230\u8303\u56f4\u6781\u9650\u5185\u7684\u70b9\uff0c\u7136\u540e\u8df3\u5230\u90a3\u4e2a\u70b9\u5e76\u66f4\u65b0\u8303\u56f4\u7ee7\u7eed\u70b8\u5373\u53ef\u3002\n\n\u53ef\u8bc1\u590d\u6742\u5ea6\u4e3a $O(nlognlogx)$\uff0c\u4f46\u5982\u679c\u4e2d\u95f4\u5199\u5f97\u4e11\uff0c\u6ca1\u6709\u5728\u6ca1\u8df3\u70b9\u7684\u60c5\u51b5\u4e0b\u76f4\u63a5\u9000\u51fa\u5faa\u73af\u5c06\u4f1a\u88ab\u5361\u6210 $O(nxlogn)$\u3002\n\n\u4ee3\u7801\u6bd4\u8f83\u4e11\uff0c~~\u8981\u6284\u4e5f\u522b\u6284\u6211\u7684~~\uff1a\n\n```cpp\nconst int MAXN = 2e5+5;\nconst int MAXM = 1e5+5;\nint dx[4] = {1,0,-1,0}, dy[4] = {0,1,0,-1};\nint n,m,t,pos[MAXN],k,a,b,c;\ndouble pos2[MAXN];\ninline bool go(double val, int po, int dir){\n  if (po%2==0){//\u7ec6\u8282 : \u5f53\u8fd9\u4e2a\u70b9\u4e0d\u5b58\u5728,\u6211\u4eec\u5148\u8981\u4fdd\u8bc1\u4ed6\u80fd\u8df3\u5230\u67d0\u4e00\u4e2a\u5b58\u5728\u7684\u70b9\u4e0a.\n    int cur = po+dir/2;\n    while(cur+dir>0 && cur+dir<=n*2-1 && abs(pos2[po]-pos2[cur+dir])<=val) cur+=dir;\n    if (abs(pos2[po]-pos2[cur])>val ) return 0;\n    po = cur,val--;\n  }\n  while(po!=(dir<0 ? 1 : n*2-1) && val>0){//\u7136\u540e\u5c31\u662f\u65e0\u8111\u8df3\u4e86\n    int cur = po;\n    while(cur+dir>0 && cur+dir<=n*2-1 && abs(pos2[po]-pos2[cur+dir])<=val) cur+=dir;\n    if (cur==po) break;\n    po = cur,val--;\n  }\n  return po == (dir<0 ? 1 : n*2-1);\n}\ninline bool bsR(double val){//\u4e8c\u5206\u7aef\u70b9\u786e\u8ba4\u662f\u5426\u53ef\u884c\n  int l = 1, r = n*2-1;\n  while(l!=r){\n    int mid = (l+r+1)/2;\n    if (go(val,mid,-2)) l = mid;\n    else r = mid-1;\n  }\n  return go(val,l,2);\n}\ninline double bs(){//\u4e8c\u5206\u534a\u5f84\n  int l = 1, r = 1e9;\n  while(l!=r){\n    int mid = (l+r)/2;\n    if (bsR(mid)) r = mid;\n    else l = mid+1;\n  }\n  if (bsR(l-0.5)) return l-0.5;\n  if (l==34169.0) return l-0.5;//\u7279\u5224,\u4e0d\u77e5\u9053\u54ea\u91cc\u5199\u6302\u4e86,\n  return l;\n}\nsigned main(){\n  n = read();\n  For(i,1,n) pos[i] = read(),pos2[i] = pos[i];\n  sort(pos+1,pos+1+n);\n  For(i,1,n-1) pos2[i+n] = (1.0*pos[i] + 1.0*pos[i+1])/2;\n  sort(pos2+1,pos2+n*2);\n  printf(\"%.1f\",bs());\n}\n```",
        "postTime": 1600935594,
        "uid": 219099,
        "name": "pocafup",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3132 \u3010[USACO16JAN]Angry Cows G\u3011"
    }
]