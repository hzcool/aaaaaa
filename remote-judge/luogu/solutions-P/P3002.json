[
    {
        "content": "\u770b\u5230\u9898\u9762\uff0c\u9996\u5148\u53ef\u4ee5\u60f3\u5230\u4e00\u4e2a DP\uff1a\u8bbe $f(i)$ \u4e3a\u526a\u51fa\u7b2c\u4e8c\u5c01\u4fe1\u7684\u524d $i$ \u4e2a\u5b57\u7b26\u6240\u9700\u8981\u7684\u6700\u5c0f\u6b21\u6570\uff0c\u663e\u7136\u6709 $f(i)=1+\\min_{i-val_i\\le j<i} f(j)$\uff0c\u5176\u4e2d $val_i$ \u4e3a\u4ee5 $i$ \u7ed3\u5c3e\u80fd\u591f\u526a\u51fa\u7684\u6700\u5927\u540e\u7f00\u957f\u5ea6\u3002\u8fd9\u4e2a DP \u53ef\u4ee5\u5229\u7528\u7ebf\u6bb5\u6811\u4f18\u5316\u6210 $O(n\\log n)$\uff0c\u6240\u4ee5\u5173\u952e\u5728\u4e8e\u5982\u4f55\u6c42 $val_i$\u3002\n\n\u6839\u636e \u201c\u5b50\u4e32\u662f\u524d\u7f00\u7684\u540e\u7f00\u201d\uff0c$val_i$ \u5373\u4e3a\u7b2c\u4e8c\u5c01\u4fe1\u7684\u524d\u7f00 $i$ \u4e0e\u7b2c\u4e00\u5c01\u4fe1\u7684\u4efb\u610f\u524d\u7f00\u7684 **\u6700\u5927\u516c\u5171\u540e\u7f00**\u3002\u5c06\u4e24\u5c01\u4fe1\u7ffb\u8f6c\uff0c\u5c31\u53d8\u6210\u4e86\u6c42\u7b2c\u4e8c\u5c01\u4fe1\u7684\u4e00\u4e2a\u540e\u7f00\u4e0e\u7b2c\u4e00\u5c01\u4fe1\u7684\u4efb\u610f\u540e\u7f00\u7684 **\u6700\u5927\u516c\u5171\u524d\u7f00**\u3002\n\n\u5c06\u7b2c\u4e00\u5c01\u4fe1\u4e0e\u7b2c\u4e8c\u5c01\u4fe1\u62fc\u5728\u4e00\u8d77\uff0c\u4e2d\u95f4\u7528\u7279\u6b8a\u5b57\u7b26\u8fde\u63a5\uff0c\u8dd1\u4e00\u904d\u540e\u7f00\u6570\u7ec4\uff0c\u6c42\u51fa $height(i)$\uff0c\u6839\u636e $lcp(sa_i,sa_j)=\\min_{i+1\\le k\\le j}height(k)$\uff0c\u5efa\u7acb ST \u8868\u5c31\u53ef\u4ee5\u7528 $O(n\\log n)-O(1)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6c42\u51fa\u4efb\u610f\u4e24\u4e2a\u540e\u7f00\u7684\u6700\u5927\u516c\u5171\u524d\u7f00\u3002\n\n\u6839\u636e\u4e0a\u9762\u7684\u5b9a\u7406\uff0c\u82e5 $sa_i$ \u4e0e $sa_j$ \u8ddd\u79bb\u8d8a\u8fdc\uff0c\u5b83\u4eec\u7684\u6700\u5927\u516c\u5171\u524d\u7f00\u5c31\u8d8a\u5c0f\u3002\u6240\u4ee5\uff0c\u5728\u6c42 $val_i$ \u65f6\uff0c\u5bfb\u627e $sa$ \u6570\u7ec4\u4e0a\u5de6\u53f3\u8ddd\u79bb $rk_i$ \u6700\u8fd1\u7684\u4e24\u4e2a\u70b9\u6c42\u6700\u5927\u516c\u5171\u524d\u7f00\uff0c\u7136\u540e\u53d6\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u6bcf\u4e00\u6b65\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u4e3a $O(n\\log n)$\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define For(i,a,b) for(i=(a);i<=(b);++i)\n#define Rof(i,a,b) for(i=(a);i>=(b);--i)\nusing namespace std;\nconst int Maxn=2e5,inf=1e9;\n\nint m1,m2,n,i,j,m,p,t,seg[Maxn*4+5]; char s1[Maxn+5],s2[Maxn+5],s[Maxn+5],str[Maxn+5];\nint sa[Maxn+5],rk[Maxn+5],ht[Maxn+5],cnt[Maxn+5],id[Maxn+5],px[Maxn+5],old[Maxn+5];\nint f[Maxn+5],val[Maxn+5],pos[Maxn+5][2],lg[Maxn+5],st[Maxn+5][20],vis[Maxn+5];\ninline int cmp(int x,int y) {return (old[x]==old[y] && old[x+t]==old[y+t]);}\n#define ls(x) (x<<1)\n#define rs(x) (x<<1|1)\n\ninline void Init()\n{\n    int res=0;\n    scanf(\"%d%d\",&m1,&m2); n=m1+m2+1,m=200;\n    while(1)\n    {\n        scanf(\"%s\",str+1); int siz=strlen(str+1);\n        For(i,1,siz) s1[res+i]=str[i];\n        res+=siz; if(res==m1) break;\n    }\n    res=0;\n    while(1)\n    {\n        scanf(\"%s\",str+1); int siz=strlen(str+1);\n        For(i,1,siz) s2[res+i]=str[i];\n        res+=siz; if(res==m2) break;\n    }\n    For(i,1,m1) s[i]=s1[m1-i+1];\n    s[m1+1]='#';\n    For(i,1,m2) s[m1+1+i]=s2[m2-i+1];\n}\ninline void SA()\n{\n    For(i,1,n) cnt[rk[i]=s[i]]++;\n    For(i,1,m) cnt[i]+=cnt[i-1];\n    Rof(i,n,1) sa[cnt[rk[i]]--]=i;\n    for(t=1;t<=n;t<<=1,m=p)\n    {\n        for(p=0,i=n;i>n-t;--i) id[++p]=i;\n        For(i,1,n) if(sa[i]>t) id[++p]=sa[i]-t;\n        memset(cnt,0,sizeof(cnt));\n        For(i,1,n) cnt[px[i]=rk[id[i]]]++;\n        For(i,1,m) cnt[i]+=cnt[i-1];\n        Rof(i,n,1) sa[cnt[px[i]]--]=id[i];\n        memcpy(old,rk,sizeof(rk));\n        for(p=0,i=1;i<=n;++i) rk[sa[i]]=(cmp(sa[i-1],sa[i])?p:++p);\n    }\n}\ninline void Build()\n{\n    int res=0;\n    For(i,1,n)\n    {\n        while(s[sa[rk[i]-1]+res]==s[i+res]) res++;\n        ht[rk[i]]=res,res=max(0,res-1);\n    }\n}\ninline void BuildST()\n{\n    For(i,2,n) lg[i]=lg[i>>1]+1;\n    For(i,1,n) st[i][0]=ht[i];\n    For(j,1,19) For(i,1,n)\n    {\n        st[i][j]=st[i][j-1];\n        if(i+(1<<j-1)<=n) st[i][j]=min(st[i][j],st[i+(1<<j-1)][j-1]);\n    }\n}\ninline int Count(int l,int r)\n{\n    int len=lg[r-l+1];\n    return min(st[l][len],st[r-(1<<len)+1][len]);\n}\ninline void Tag()\n{\n    For(i,0,n+1) pos[i][0]=0,pos[i][1]=n+1;\n    For(i,1,m1) vis[rk[i]]=1;\n    For(i,1,n) pos[i][0]=(vis[i]?i:pos[i-1][0]);\n    Rof(i,n,1) pos[i][1]=(vis[i]?i:pos[i+1][1]);\n}\ninline void GetVal(int x)\n{\n    int l=pos[rk[n-x+1]][0],r=pos[rk[n-x+1]][1];\n    if(l) val[x]=max(val[x],Count(l+1,rk[n-x+1]));\n    if(r!=n+1) val[x]=max(val[x],Count(rk[n-x+1]+1,r));\n}\ninline void push_up(int p) {seg[p]=min(seg[ls(p)],seg[rs(p)]);}\ninline void Update(int l,int r,int p,int pos,int k)\n{\n    if(l==r) {seg[p]=k; return;}\n    int mid=(l+r)>>1;\n    if(pos<=mid) Update(l,mid,ls(p),pos,k);\n    else Update(mid+1,r,rs(p),pos,k);\n    push_up(p);\n}\ninline int Count(int nl,int nr,int l,int r,int p)\n{\n    if(l<=nl && nr<=r) return seg[p];\n    int mid=(nl+nr)>>1,res=inf;\n    if(l<=mid) res=min(res,Count(nl,mid,l,r,ls(p)));\n    if(r>mid) res=min(res,Count(mid+1,nr,l,r,rs(p)));\n    push_up(p); return res;\n}\ninline void GetAns()\n{\n    For(i,1,m2)\n    {\n        if(val[i]==i) f[i]=1;\n        else f[i]=Count(1,n,i-val[i],i-1,1)+1;\n        Update(1,n,1,i,f[i]);\n    }\n    printf(\"%d\\n\",f[m2]);\n}\n\nint main()\n{\n    Init(),SA(),Build(),BuildST(),Tag();\n    For(i,1,m2) GetVal(i);\n    GetAns();\n    return 0;\n}\n```",
        "postTime": 1637071235,
        "uid": 148913,
        "name": "Graphcity",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3002\u3010[USACO10DEC]Threatening Letter G\u3011"
    },
    {
        "content": "\u8fd9\u9898\u8bfb\u5165\u6bd4\u8f83\u5947\u602a\uff0c\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u6837\u4f8b\u6709\u8fd9\u4e48\u591a\u884c\u2026\u2026\u6240\u4ee5\u6211\u5efa\u8bae\u5c31\u8fd9\u4e48\u8bfb\u5165\uff1a\n\n\n```\n\ninline int read(){\n\tchar ch=getchar();\n\twhile (!isalpha(ch))  ch=getchar();\n\treturn ch-'A';\n}\n//------main------\nfor (int i=1;i<=n;i++){\n\tsa.insert(read());\n}\nfor (int i=1;i<=m;i++){\n\tsa.doit(read());\n}\n```\n\u9898\u610f\u7b80\u8ff0\uff1a\n```\n\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3an\u7684\u4e32s1\uff0c\u518d\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3am\u7684\u4e32s2\uff0c\u95ee\u9700\u8981\u81f3\u5c11\u591a\u5c11\u4e2as1\u7684\u5b50\u4e32\u624d\u53ef\u4ee5\u62fc\u6210s2\uff1f\n```\n\n\u56de\u5230\u6b63\u9898\uff0c\u6211\u4eec\u5148\u5bf9\u7b2c\u4e00\u4e2a\u4e32\u5efa\u4e00\u4e2a$SAM$\u3002\n\n\u7136\u540e\u628a\u7b2c\u4e8c\u4e2a\u4e32\u653e\u5728$SAM$\u4e0a\u8dd1\uff0c\u7528\u4e00\u4e2a\u6307\u9488$pos$\u8bb0\u5f55\u73b0\u5728\u5728$SAM$\u7684\u54ea\u4e2a\u8282\u70b9\u3002\n\n\u5982\u679c\u4e0d\u5339\u914d\u4e86\u5c31$ans++$\uff0c\u5e76\u4e14$pos$\u56de\u5230\u6839\u8282\u70b9\uff0c\u8fd9\u8bf4\u660e\u5fc5\u987b\u8981\u7528\u65b0\u7684\u5b50\u4e32\u624d\u53ef\u4ee5\u7ee7\u7eed\u62fc\u4e86\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n\tchar ch=getchar();\n\twhile (!isalpha(ch))  ch=getchar();\n\treturn ch-'A';\n}\nint ans;\nstruct Suffix_Automaton{\n\tint cnt,last,g[2000001][27],NOW,pa[2000001],len[2000001];\n\tinline void init(){\n\t\tcnt=last=1;NOW=1;\n\t}\n\tinline void insert(int ch){\n\t\tint np=++cnt,pos=last;last=cnt;len[np]=len[pos]+1;\n\t\tfor (;pos&&!g[pos][ch];pos=pa[pos]) g[pos][ch]=np;\n\t\tif (!pos) pa[np]=1;\n\t\telse{\n\t\t\tint posx=g[pos][ch];\n\t\t\tif (len[pos]+1==len[posx]) pa[np]=posx;\n\t\t\telse{\n\t\t\t\tint q=++cnt;\n\t\t\t\tlen[q]=len[pos]+1;\n\t\t\t\tfor (int i=0;i<26;i++) g[q][i]=g[posx][i];\n\t\t\t\tpa[q]=pa[posx];pa[posx]=pa[np]=q;\n\t\t\t\tfor (;g[pos][ch]==posx;pos=pa[pos]) g[pos][ch]=q;\n\t\t\t}\n\t\t}\n\t}\n\tinline void doit(int ch){\n\t\tif (g[NOW][ch]) NOW=g[NOW][ch];//\u5982\u679c\u5339\u914d\u7ee7\u7eed\u8dd1\n\t\telse{//\u5982\u679c\u4e0d\u5339\u914d\u4e86\n\t\t\tans++;\n\t\t\tNOW=g[1][ch];\n\t\t}\n\t}\n}sa;\nint main(){\n\tint n,m;cin>>n>>m;\n\tsa.init();\n\tfor (int i=1;i<=n;i++){\n\t\tsa.insert(read());\n\t}\n\tans=1;\n\tfor (int i=1;i<=m;i++){\n\t\tsa.doit(read());\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1544425625,
        "uid": 20309,
        "name": "Fading",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3002 \u3010[USACO10DEC]\u6050\u5413\u4fe1Threatening Letter\u3011"
    },
    {
        "content": "### \u9898\u610f\n\n\u7ed9\u5b9a\u4e24\u4e2a\u4e32 $s,t$\uff0c\u521d\u59cb\u6709\u4e00\u4e2a\u7a7a\u4e32 $p$\u3002\u6bcf\u6b21\u53ef\u4ee5\u9009\u51fa\u4e00\u4e2a $s$ \u7684\u5b50\u4e32\u62fc\u5230 $p$ \u540e\u9762\u3002\u6c42\u6700\u5c11\u7684\u64cd\u4f5c\u6b21\u6570\u4f7f\u5f97\u6700\u7ec8 $p = t$\u3002\n\n$1\\leq |s|,|t| \\leq 5\\times 10^4$\u3002\n\n### \u601d\u8def\n\n\u8003\u8651\u8d2a\u5fc3\uff1a\u6bcf\u4e00\u6b21\u622a\u53d6\u5c3d\u91cf\u957f\u7684\u5b50\u4e32\u62fc\u4e0a\u53bb\u3002\u6bd4\u8f83\u597d\u8bc1\uff1a\n\n- \u8bbe\u5b58\u5728\u4e00\u4e2a\u66f4\u77ed\u7684\u4e32 $q_2$ \u4f18\u4e8e\u66f4\u957f\u7684\u4e32 $q_1$\u3002\u800c\u63a5\u4e0b\u6765\u8981\u62fc\u7684\u4e32\u5bf9\u4e8e $q_2$ \u4f1a\u6bd4 $q_1$ \u66f4\u957f\u3002\u90a3\u4e48\u4e00\u65e6\u80fd\u7ed9 $q_2$ \u62fc\uff0c\u7ed9 $q_1$ \u62fc\u7684\u65b9\u6848\u4e00\u5b9a\u5b58\u5728\u4e14\u4e0d\u52a3\u3002\n\n\u5927\u6982\u662f\u8fd9\u6837\u7684\u3002\n\n\u6240\u4ee5 SA \u6c42\u51fa height\u3002\u5957\u8def\u5730\uff0c\u628a $s,t$ \u62fc\u5230\u4e00\u8d77\u5e76\u4e14\u4e2d\u95f4\u5206\u9694\u7b26\uff0c\u518d\u7528\u4e00\u4e2a\u8d2a\u5fc3\uff1a\u7531\u4e8e\u5b50\u4e32\u662f\u540e\u7f00\u7684\u524d\u7f00\uff0c\u6240\u4ee5\u95ee\u9898\u8f6c\u5316\u6210\u4e86\u786e\u5b9a\u4e86\u5176\u4e2d\u4e00\u4e2a\u4e32\uff0c\u518d\u5728\u53e6\u4e00\u4e9b\u4e32\u91cc\u9762\u9009\u4e00\u4e2a\u4f7f\u5f97\u8fd9\u4e24\u4e2a\u4e32\u7684 LCP \u6700\u5927\u3002\u7531\u4e8e LCP \u662f\u4e00\u5806\u8fde\u7eed height \u7684 min\uff0c\u73b0\u5728\u5df2\u7ecf\u786e\u5b9a\u4e86\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u90a3\u4e48\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u663e\u7136\u662f\u8d8a\u9760\u8fd1\u786e\u5b9a\u7684\u90a3\u4e2a\u4f4d\u7f6e\u8d8a\u597d\u3002\n\n\u6240\u4ee5\u5b58\u4e0b\u6765 $s$ \u7684\u6240\u6709 rnk \u5e76\u6392\u5e8f\uff0c\u6bcf\u4e00\u6b21 lower_bound \u4e4b\u540e\u914d\u5408 ST \u8868\u56de\u7b54\u8be2\u95ee\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n\\log n)$\u3002\n\n\u8f93\u5165\u6709\u70b9\u6076\u5fc3\uff0c\u5199\u5f97\u4e11\u3002\n\n[AC code record](https://www.luogu.com.cn/record/97784345)\n```cpp\nstring s, s2;\nint n, m, mii[MAXN][LOGN + 5], lg[MAXN];\nint tmp[MAXN], cnt[MAXN], rnk[MAXN << 1], prnk[MAXN << 1], sa[MAXN], hgt[MAXN];\nvector <int> frk;\n\nil int query(int l, int r) {\n\tint k = lg[r - l + 1];\n\treturn min(mii[l][k], mii[r - (1 << k) + 1][k]);\n}\n\nint main() {\n\tread(n, m); string k;\n\twhile (s.size() < n) cin >> k, s += k;\n\twhile (cin >> k) s2 += k;\n\ts = '@' + s; s += char(0); s += s2; n += m + 1;\n\trep1(i, 2, n) lg[i] = lg[i >> 1] + 1;\n\trep1(i, 1, n) sa[i] = i, rnk[i] = s[i];\n\tint p = 127;\n\tfor (int w = 1; w < n; w <<= 1) {\n\t\tmemset(cnt, 0, sizeof(int) * (p + 1));\n\t\trep1(i, 1, n) ++cnt[rnk[sa[i] + w]];\n\t\trep1(i, 1, p) cnt[i] += cnt[i - 1];\n\t\trep2(i, n, 1) tmp[cnt[rnk[sa[i] + w]]--] = sa[i];\n\t\tmemcpy(sa, tmp, sizeof(int) * (n + 1));\n\t\tmemset(cnt, 0, sizeof(int) * (p + 1));\n\t\trep1(i, 1, n) ++cnt[rnk[sa[i]]];\n\t\trep1(i, 1, p) cnt[i] += cnt[i - 1];\n\t\trep2(i, n, 1) tmp[cnt[rnk[sa[i]]]--] = sa[i];\n\t\tmemcpy(sa, tmp, sizeof(int) * (n + 1));\n\t\t\n\t\tmemcpy(prnk, rnk, sizeof(int) * (n + 1)); p = 0;\n\t\trep1(i, 1, n) {\n\t\t\tif (prnk[sa[i]] == prnk[sa[i - 1]] && prnk[sa[i] + w] == prnk[sa[i - 1] + w]) rnk[sa[i]] = p;\n\t\t\telse rnk[sa[i]] = ++p;\n\t\t}\n\t\tif (p == n) break;\n\t}\n\trep1(i, 1, n) {\n\t\tint k = max(0, hgt[rnk[i - 1]] - 1), t = max(i, sa[rnk[i] - 1]);\n\t\twhile (t + k <= n && s[i + k] == s[sa[rnk[i] - 1] + k]) ++k;\n\t\thgt[rnk[i]] = k;\n\t}\n\trep1(i, 1, n) mii[i][0] = hgt[i];\n\trep1(j, 1, lg[n]) rep1(i, 1, n - (1 << j) + 1) mii[i][j] = min(mii[i][j - 1], mii[i + (1 << j - 1)][j - 1]);\n\tn -= m + 1;\n\trep1(i, 1, n) frk.eb(rnk[i]);\n\tsort(frk.begin(), frk.end());\n\tint ans = 0, idx = 0;\n\twhile (idx < s2.size()) {\n\t\tauto it = lower_bound(frk.begin(), frk.end(), rnk[n + 2 + idx]);\n\t\tint now = 0;\n\t\tif (it != frk.end()) now = max(now, query(rnk[n + 2 + idx] + 1, *it));\n\t\tif (it != frk.begin()) now = max(now, query(*--it + 1, rnk[n + 2 + idx]));\n\t\tidx += now; ++ans;\n\t} printf(\"%d\", ans);\n\trout;\n}\n```",
        "postTime": 1671710016,
        "uid": 409236,
        "name": "StayAlone",
        "ccfLevel": 6,
        "title": "P3002 [USACO10DEC] Threatening Letter G \u8d2a\u5fc3 SA"
    },
    {
        "content": "\u8fd9\u6c34\u9898\u554a\u3002\n\n\u5f88\u663e\u7136\u8d2a\u5fc3\u4ece\u5339\u914d\u4e32\u5f00\u5934\u5f00\u59cb\u627e\u6700\u957f\u53ef\u4ee5\u5339\u914d\u7684\u4e32\u662f\u6b63\u786e\u7684\uff0c\u56e0\u4e3a\u4e0b\u4e00\u6b21\u5339\u914d\u7684\u5b57\u7b26\u4e32\u65e0\u8bba\u5f00\u5934\u53bb\u6389\u591a\u5c11\uff0c\u5b83\u4eec\u90fd\u662f\u5168\u62ff\u5b8c\u7684\u540e\u7f00\uff0c\u4e5f\u5c31\u5bfc\u81f4\u4f60\u5168\u62ff\u5b8c\u8981\u5207\u7684\u5730\u65b9\u4e0d\u62ff\u5b8c\u4e5f\u8981\u5207\u3002\n\n\u7136\u540e\u5224\u65ad\u4e00\u4e2a\u4e32\u662f\u5426\u5728\u53e6\u4e00\u4e2a\u4e32\u91cc\u9762\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u76f4\u63a5 SAM\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N = 114514;\nint n, m;\nstring s1, s2;\nstruct SAM\n{\n    int tot, last, len[N], t[N][26], fa[N];\n    inline SAM()\n    {\n        fa[tot = last = 0] = -1;\n    }\n    inline void insert(char c)\n    {\n        c -= 'A';\n        int cur = ++tot;\n        len[cur] = len[last] + 1;\n        int p = last;\n        last = cur;\n        while (~p && !t[p][c])\n            t[p][c] = cur, p = fa[p];\n        if (p == -1)\n        {\n            fa[cur] = 0;\n            return;\n        }\n        int x = t[p][c];\n        if (len[x] == len[p] + 1)\n            fa[cur] = x;\n        else\n        {\n            len[++tot] = len[p] + 1;\n            fa[tot] = fa[x];\n            memcpy(t[tot], t[x], sizeof(t[x]));\n            while (~p && t[p][c] == x)\n                t[p][c] = tot, p = fa[p];\n            fa[cur] = fa[x] = tot;\n        }\n    }\n    inline int match(string s)\n    {\n        int cur = 0, res = 1;\n        for (char c : s)\n        {\n            c -= 'A';\n            if (t[cur][c])\n                cur = t[cur][c];\n            else\n                cur = t[0][c], res++;\n        }\n        return res;\n    }\n} sam;\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cin >> n >> m;\n    while (s1.size() < n)\n    {\n        string tmp;\n        cin >> tmp;\n        s1 += tmp;\n    }\n    int res = 0;\n    while (s2.size() < m)\n    {\n        string tmp;\n        cin >> tmp;\n        s2 += tmp;\n    }\n    for (char c : s1)\n        sam.insert(c);\n    cout << sam.match(s2);\n    return 0;\n}\n```",
        "postTime": 1683633700,
        "uid": 576378,
        "name": "creation_hy",
        "ccfLevel": 5,
        "title": "P3002\u9898\u89e3"
    }
]