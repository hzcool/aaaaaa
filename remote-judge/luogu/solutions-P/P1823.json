[
    {
        "content": "## \u642c\u8fd0+\u7ffb\u8bd1Croatian Olympiad in Informatics 2007\u5b98\u65b9\u9898\u89e3\r\n\r\nThe large limit on N will make quadratic solutions time out.\r\n \r\n$O(N^2)$\u679a\u4e3e\u663e\u7136\u4f1aTLE\u3002\r\n \r\nTo start with, suppose the heights of all people are distinct. Imagine going through the line in order.\r\n \r\n\u5148\u5047\u8bbe\u6bcf\u4e2a\u4eba\u8eab\u9ad8\u4e0d\u540c\uff0c\u8111\u8865\u4e00\u4e0b\u8d70\u8fc7\u6574\u4e2a\u961f\u5217\u3002\r\n \r\nObserve any person A waiting in line. If, after person A, we encounter a taller person B, then person Asurely can't see anyone after person B.\r\n \r\n\u89c2\u5bdf\u961f\u4f0d\u4e2d\u7684\u4e00\u4e2a\u4ebaA\u3002\u5982\u679c\u6211\u4eec\u4ed6\u540e\u9762\u627e\u5230\u4e86\u4e00\u4e2a\u6bd4\u4ed6\u4e0d\u77e5\u9053\u9ad8\u5230\u54ea\u91cc\u53bb\u4e86\u7684B\uff0cA\u5c31\u4e0d\u80fd\u4e0eB\u540e\u9762\u7684\u4eba\u8c08\u7b11\u98ce\u751f\u4e86\u3002\r\n \r\nBecause of this, when going through the line, we can maintain a stack of \"open subproblems\", wherean open subproblem is a person already encountered in the line, but who still has a possibility of seeingsomeone whom we haven't yet encountered. It should be obvious that the subproblems on the stackare sorted in descending order of height (topmost subproblem = shortest person).\r\n \r\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u6808\uff0c\u8bb0\u5f55\u6211\u4eec\u5df2\u7ecf\u627e\u5230\u8fc7\u7684\u9ad8\u4eba\uff0c\u4f46\u4ed6\u4ecd\u53ef\u80fd\u4e0e\u6ca1\u627e\u5230\u8fc7\u7684\u9ad8\u4eba\u8c08\u7b11\u98ce\u751f\u3002\u663e\u7136\u6808\u4e0a\u7684\u9ad8\u4eba\u4eec\u6309\u9ad8\u5ea6\u7684\u964d\u5e8f\u6392\u5217\uff0c\u6808\u9876\u7684\u4eba\u6700\u77ee\u3002\r\n \r\nWhen we encounter a new person, that person can see everyone on the stack that is shorter, and alsotakes those people off the stack (closing their subproblems). If the stack isn't empty after this, theperson can also see the first person remaining on the stack. The person then enters the stack (there is apossibility that they will see someone later in line).\r\n \r\n\u5f53\u6211\u4eec\u627e\u5230\u4e00\u4e2a\u65b0\u7684\u9ad8\u4eba\u65f6\uff0c\u4ed6\u53ef\u4ee5\u5411\u6808\u91cc\u6bd4\u4ed6naive\u4eba\u7684\u4f20\u6388\u4eba\u751f\u7ecf\u9a8c\uff0c\u5e76\u8ba9\u4ed6\u4eec\u51fa\u6808\u3002\u5982\u679c\u51fa\u6808\u4e4b\u540e\u6808\u975e\u7a7a\uff0c\u4ed6\u8fd8\u53ef\u4ee5\u4e0e\u6808\u9876\u7684\u9ad8\u4eba\u8c08\u7b11\u98ce\u751f\u3002\u7136\u540e\u6211\u4eec\u518d\u53e6\u8bf7\u8fd9\u4f4d\u9ad8\u660e\u8fdb\u6808\u3002\r\n \r\nEven though the solution has two nested loops, the overall complexity is O(N), because every personenters and leaves the stack exactly once, and each iteration of the inner loop pops oneelement off thestack.\r\n \r\n\u6709\u4eba\u95ee\u4e86\u4e00\u4e2asimple\u7684\u95ee\u9898\uff1a\u8fd9\u6837\u7684\u89e3\u6cd5\u4e0d\u662f\u6709\u4e24\u5c42\u5faa\u73af\u5417\uff1f\u7136\u800c\u5b83\u7684\u603b\u590d\u6742\u5ea6\u662f$O(N)$\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u4eba\u7684\u8fdb\u6808\u4e0e\u51fa\u6808\u90fd\u53ea\u6709\u4e00\u6b21\uff0c\u5185\u5c42\u7684\u6bcf\u6b21\u5faa\u73af\u4ece\u6808\u4e2d\u5f39\u51fa\u4e00\u4e2a\u9ad8\u4eba\u3002\r\n \r\nTo complete the solution, we need to consider the effect of persons equally tall. One way is to have thestack hold ordered pairs (height, number of people) and maintain it accordingly.\r\n \r\n\u8981A\u6389\u8fd9\u9053\u9898\u6211\u4eec\u8fd8\u8981\u8003\u8651\u4e24\u4e2a\u4eba\u8eab\u9ad8\u76f8\u540c\u7684\u60c5\u51b5\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u6808\u91cc\u5b58pair<\u8eab\u9ad8\uff0c\u4eba\u6570>\u5e76\u7ef4\u62a4\u5b83\u3002\r\n\r\n\u5b98\u65b9\u6807\u7a0b\uff1a\r\n```\r\n/*\r\n  Croatian Olympiad in Informatics 2007\r\n  Task PATRIK\r\n*/\r\n\r\n#include <algorithm>\r\n#include <cstdio>\r\n#include <iostream>\r\n#include <stack>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long llint;\r\ntypedef pair<int,int> par;\r\n\r\nstack<par> S;\r\n\r\nint main( void ) {\r\n   int n;\r\n   scanf( \"%d\", &n );\r\n\r\n   llint ret = 0;\r\n   for( int i = 0; i < n; ++i ) {\r\n      int h;\r\n      scanf( \"%d\", &h );\r\n      \r\n      par p( h, 1 );\r\n      for( ; !S.empty() && S.top().first <= h; S.pop() ) {\r\n         ret += S.top().second;\r\n         if( S.top().first == h ) p.second += S.top().second;\r\n      }\r\n\r\n      if( !S.empty() ) ++ret;\r\n      S.push( p );\r\n   }\r\n   \r\n   cout << ret << endl;\r\n\r\n   return 0;\r\n}\r\n```",
        "postTime": 1521780116,
        "uid": 53374,
        "name": "SuperJvRuo",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1823 \u3010[COCI2007] Patrik\u3011"
    },
    {
        "content": "# \u5355\u8c03\u6808+\u4e8c\u5206\u67e5\u627e\n\n\u7167\u4f8b\u60f3\u63a8\u5e7f\u535a\u5ba2\uff1a[eternal\u98ce\u5ea6\u7684\u535a\u5ba2](http://www.cnblogs.com/cjoierljl)\n\n\u90a3\u4e48\u8fd9\u4e00\u7bc7\u4e5f\u540c\u6b65\u53d1\u8868\u4e8e\uff1a[Patrik \u97f3\u4e50\u4f1a\u7684\u7b49\u5f85\u9898\u89e3(\u5355\u8c03\u6808+\u4e8c\u5206\u67e5\u627e)](https://www.cnblogs.com/cjoierljl/p/9912127.html)\n\n## \u563f\u563f\u5165\u6b63\u9898\n\n\u8fd9\u4e2a\u9898\u4e0d\u662f\u5f88\u96be\uff0c\u4f46\u662f\u6ca1\u6709\u8f6c\u8fc7\u6765\u8fd8\u662f\u96be\u60f3\u7684\n\n\u53ef\u4ee5\u5148\u53bb\u505a\u4e00\u4e0b\u8fd9\u4e2a\u9898\uff1a[\u6d1b\u8c37P1901 \u53d1\u5c04\u7ad9](https://www.luogu.org/problemnew/show/P1901)\n\n**\u849f\u84bb\u53d1\u73b0\u5f88\u591a\u9898\u89e3\u90fd\u662f\u9519\u7684\u5440\uff0c\u590d\u6742\u5ea6\u6bd4\u8f83\u7384\u5b66\u5427**\n\n**\u90a3\u4e48\u4ecb\u7ecd\u4e00\u79cd\u6807\u51c6\u7684$O(nlogn)$\u7684\u65b9\u6cd5**\n\n### \u5355\u8c03\u6808\n\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u4eba\u4f5c\u4e3a\u65b9\u6848\u4e2d\u53f3\u8fb9\u90a3\u4e2a\u4eba\u65f6\u6211\u4eec\u7b97\u7b54\u6848\uff08\u4e3a\u4e86\u4e0d\u7b97\u91cd\uff09\n\n\u6709\u54ea\u4e9b\u4eba\u6211\u4eec\u770b\u4e0d\u5230\u5462\uff0c\u65e0\u975e\u662f\u88ab\u5b83\u53f3\u8fb9\u7684\u4eba\u6321\u4f4f\u4e86\u662f\u5427\n\n\u90a3\u4e48\u4ece\u5de6\u5f80\u53f3\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u9012\u51cf\u7684\u5355\u8c03\u6808\uff0c\u5355\u8c03\u6808\u4e2d\u7684\u4eba\u4e0d\u4f1a\u51fa\u73b0\u88ab\u6321\u4f4f\u7684\u60c5\uff08\u53ea\u6709$i$\u770b\u4e0d\u5230\u7684\u60c5\u51b5\u540e\u9762\u4f1a\u8bb2\uff09\n\n\u81ea\u5df1\u60f3\u4e00\u4e0b\u8fd9\u91cc\u5f88\u7b80\u5355\n\n### \u4e8c\u5206\u67e5\u627e\n\u8003\u8651\u80af\u5b9a\u53ea\u6709\u5355\u8c03\u6808\u4e2d\u7684\u4eba\u4f1a\u88ab$i$\u7b97\u5165\u7b54\u6848\u662f\u5427\n\n\u5e76\u4e14\u5f88\u5bb9\u6613\u53d1\u73b0\u4e00\u5b9a\u662f\u4e2a\u8fde\u7eed\u7684\u533a\u95f4$[x,i-1]$\uff08~~\u8fd9\u4e0d\u5e9f\u8bdd\u5417~~\uff09\n\n\u90a3\u4e48\u6211\u4eec\u5728\u5355\u8c03\u6808\u4e2d\u4e8c\u5206\u8fd9\u4e2a\u533a\u95f4\u7684\u5de6\u7aef\u70b9\uff0c\u663e\u7136\u5de6\u7aef\u70b9\u5c31\u662f$i$\u5de6\u8fb9\u7b2c\u4e00\u4e2a\u6bd4$i$\u9ad8\u7684\u6570\n\n\u8fd9\u4e0d\u5c31\u662f\u4e0a\u9762\u90a3\u4e2a[\u53d1\u5c04\u7ad9](https://www.luogu.org/problemnew/show/P1901)\u7684\u9898\u76ee\u4e86\u5417\n\n\u8ba1\u5165\u7b54\u6848\u7684\u5c31\u662f\u533a\u95f4\u957f\u5ea6\u5566\n\n### \u4ee3\u7801\u6781\u5176\u7b80\u5355\u3002\u3002\u3002\n```\n#include<bits/stdc++.h>\n#define il inline\n#define rg register\n#define ldb double\n#define lst long long\n#define rgt register int\n#define N 500050\nusing namespace std;\nconst int Inf=1e9;\nil int read()\n{\n\tint s=0,m=0;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')m=1;ch=getchar();}\n\twhile( isdigit(ch))s=(s<<3)+(s<<1)+(ch^48),ch=getchar();\n\treturn m?-s:s;\n}\n\nint n,top;lst Ans;\nint H[N],stk[N];\n\nil void Calc(rgt x)\n{\n\trgt le=0,ri=top,mid,ret=0;\n\twhile(le<=ri)\n\t{\n\t\tmid=(le+ri)>>1;\n\t\tif(H[stk[mid]]>x)ret=mid,le=mid+1;\n\t\telse ri=mid-1;\n\t}\n\tif(!ret)Ans+=top;\n\telse Ans+=top-ret+1;\n}\nint main()\n{\n\tn=read();\n\tfor(rgt i=1;i<=n;++i)H[i]=read();\n\tfor(rgt i=1;i<=n;++i)\n\t{\n\t\tCalc(H[i]);\n\t\twhile(top>0&&H[i]>H[stk[top]])--top;\n\t\tstk[++top]=i;\n\t}return printf(\"%lld\\n\",Ans),0;\n}\n```\n# \u5982\u679c\u5bf9\u60a8\u6709\u6240\u5e2e\u52a9\uff0c\u5c06\u662f\u6211\u4e07\u5206\u7684\u8363\u5e78",
        "postTime": 1541429321,
        "uid": 66596,
        "name": "eternal\u98ce\u5ea6",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1823 \u3010[COI2007] Patrik \u97f3\u4e50\u4f1a\u7684\u7b49\u5f85\u3011"
    },
    {
        "content": "\u8c8c\u4f3c\u6ca1\u6709STL\u9898\u89e3\u3001\u3001\u3001\u6765\u4e00\u53d1\n\n\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u6808\u5b58\u50a8\u6bcf\u4e2a\u4eba\u7684\u8eab\u9ad8\uff0c\u4f7f\u6808\u4e0a\u65b9\u7684\u6570<=\u4e0b\u65b9\u7684\n\n\u5f53\u4e00\u4e2a\u8eab\u9ad8\u6bd4\u6808\u9876\u9ad8\u7684\u4eba\u8981\u8fdb\u6808\u65f6\uff0c\u5148\u5c06\u6808\u4e2d\u6240\u6709\u8eab\u9ad8\u6bd4\u4ed6\u77ee(\u4e0d\u5305\u62ec\u76f8\u540c\u7684)\u7684\u4eba\u5f39\u6389\uff0c\u5f39\u6389\u51e0\u4e2a\u7b54\u6848\u5c31\u52a0\u51e0\u4e2a\n\n\u539f\u7406\uff1a\n\n\u6bd4\u5982\u8981\u5f39\u6389\u6808\u9876\u7684\u7b2c\u4e8c\u4e2a\u4eba\uff0c\u56e0\u4e3a\u6808\u9876\u7684\u7b2c\u4e00\u4e2a\u4eba\u4e00\u5b9a\u6bd4\u7b2c\u4e8c\u4e2a\u4eba\u548c\u5f53\u524d\u8981\u8fdb\u6808\u7684\u4eba\u77ee\uff0c\u6240\u4ee5\u7b2c\u4e8c\u4e2a\u4eba\u548c\u8981\u8fdb\u6808\u7684\u4eba\u53ef\u4ee5\u4e92\u76f8\u770b\u89c1\uff0c\u63a5\u4e0b\u53bb\u5faa\u73af(\u6bcf\u6b21\u5f39\u6389\u7684\u4eba\u90fd\u6bd4\u4e4b\u524d\u5939\u7740\u7684\u4eba\u8981\u9ad8\uff0c\u6240\u4ee5\u53ef\u4ee5\u5f39)\uff0c\u61c2\u4e86\u5417\uff1f\n\n\u5f53\u8981\u8fdb\u6808\u7684\u4eba\u548c\u6808\u4e2d\u7684\u4eba\u8eab\u9ad8\u76f8\u7b49\u65f6\uff0c\u56e0\u4e3a\u76f8\u7b49\u4e5f\u770b\u5f97\u89c1\uff0c\u4e5f\u8981\u52a0\u8fdb\u7b54\u6848\uff0c\u6709\u51e0\u4e2a\u52a0\u51e0\u4e2a\uff0c\u4f46\u662f\u4e0d\u5f39\u51fa\n\n\u7ecf\u8fc7\u5904\u7406\u8eab\u9ad8\u77ee\u7684\u548c\u8eab\u9ad8\u76f8\u7b49\u7684\u540e\uff0c\u5224\u65ad\u9664\u4e86\u76f8\u7b49\u7684\uff0c\u6808\u4e2d\u8fd8\u6709(\u6bd4\u5b83\u9ad8\u7684)\u4e1c\u897f\u5417\uff0c\u5982\u679c\u6709\uff0c\u7b54\u6848\u5c31\u8981\u591a+1(s)\uff0c\u56e0\u4e3a\u8981\u8fdb\u6808\u7684\u6570\u548c\u5f53\u524d\u6bd4\u5b83\u5927\u4e00\u7ea7\u7684\u6570(\u5c06\u6bd4\u5b83\u77ee\u548c\u76f8\u7b49\u7684\u5f39\u51fa\u4e4b\u540e\u7684\u6808\u9876)\u4e5f\u662f\u53ef\u4ee5\u4e92\u76f8\u770b\u89c1\u7684\uff0c(\u4f46\u662f\u6bd4\u5b83\u5927\u4e24\u7ea7\u7684\u56e0\u4e3a\u4e2d\u95f4\u6709\u5939\u4e00\u4e2a\u5927\u4e00\u7ea7\u7684\u6240\u4ee5\u5c31\u770b\u4e0d\u89c1\uff0c\u6240\u4ee5\u53ea\u80fd\u52a0\u4e0a1)\n\n\u8fd9\u6837\u5b50\u5c31\u53ef\u4ee5\u4e86\uff0c\u5176\u5b9e\u4e5f\u86ee\u6c34\u7684\uff0c\u5c31\u662f\u601d\u7ef4\u6027\u6bd4\u8f83\u5f3a\u4e00\u70b9\n\n```cpp\n#include<stack>\n#include<iostream>\nusing namespace std;\nint x,n,ans;\nstack<int>s;\nint main()\n{\n    cin>>n;\n    while (n--)\n    {\n        cin>>x;int t=1;  //t\u662f\u6709\u591a\u5c11\u4e2a\u8ddfx\u76f8\u7b49\u7684(\u5305\u62ecx\u5b83\u81ea\u5df1)\uff0c(\u6211\u662f\u5148\u5c06\u76f8\u7b49\u4e5f\u5148\u5f39\u6389\uff0c\u8fd9\u6837\u597d\u5224\u65ad\u8fd8\u6709\u6ca1\u5b58\u5728\u6bd4x\u5927\u4e00\u7ea7\u7684\u6570(\u76f8\u7b49\u7684\u4e5f\u5f39\u6389\u4e4b\u540e\u7684\u6808\u9876)\uff0c\u4e4b\u540e\u518d\u628at\u4e2a\u76f8\u7b49\u7684\u5f04\u56de\u6808\u4e2d\uff0c\u56e0\u4e3at\u4e00\u5f00\u59cb=1\uff0c\u6240\u4ee5\u6267\u884ct\u6b21\u5165\u6808\u7684\u65f6\u5019\u5c31\u5c06x\u81ea\u5df1\u4e5f\u8fdb\u6808\u4e86)\n        while (s.size() && x>=s.top()) //\u5f39\u6389\u6bd4\u5b83\u5927\u6216\u7b49\u4e8e\u7684\u540c\u65f6\u66f4\u65b0\u7b54\u6848\n        {\n            if (s.top()==x)t++;  //\u6709\u4e00\u4e2a\u76f8\u7b49\u5c31+1(s)\n            ans++;s.pop();\n        }\n        if (s.size())ans++;   //\u5982\u679c\u628a\u77ee\u7684\u548c\u76f8\u7b49\u7684\u90fd\u5f39\u6389\u4e4b\u540e\u8fd8\u6709\u6bd4x\u5927\u7684\u5c31+1\n        while (t--)s.push(x); //\u628a\u4e4b\u524d\u5f39\u6389\u7684\u76f8\u7b49\u7684\u548cx\u672c\u8eab\u8fdb\u6808\n    }\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1493818016,
        "uid": 14374,
        "name": "zhengrunzhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1823 \u3010\u97f3\u4e50\u4f1a\u7684\u7b49\u5f85\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u53ef\u4ee5\u4f7f\u7528\u5355\u8c03\u6808\u89e3\u51b3\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u6574\u7406\u4e00\u4e0b\u601d\u8def\uff0c\u5bf9\u4e8e\u961f\u4f0d\u4e2d\u7684\u4e00\u4e2a\u4eba\u6765\u8bf4\uff0c\u4ed6\u53ef\u80fd\u770b\u5230\u81ea\u5df1\u524d\u9762\u7684\u4eba\uff0c\u4e5f\u53ef\u80fd\u770b\u5230\u81ea\u5df1\u540e\u9762\u7684\u4eba\uff0c\u4f46\u662f\u5982\u679c\u628a\u524d\u540e\u4e24\u79cd\u60c5\u51b5\u90fd\u8003\u8651\u7684\u8bdd\uff0c\u5bfb\u627e\u4e00\u904d\u4e0b\u6765\u4e00\u5b9a\u6709\u5f88\u591a\u91cd\u590d\uff0c\u6240\u4ee5\u6211\u4eec\u51b3\u5b9a\u53ea\u8003\u8651\u6bcf\u4e2a\u4eba\u7684\u524d\u6216\u540e\u4e00\u4fa7\u7684\u60c5\u51b5\uff0c\u8fd9\u91cc\u6211\u4eec\u5bf9\u6bcf\u4e2a\u4eba\u7684\u524d\u9762\u7684\u4eba\u8ba8\u8bba\n\n\u5982\u679c\u4e00\u4e2a\u4eba\u8eab\u540e\u5b58\u5728\u4e00\u4e2a\u6bd4\u4ed6\u9ad8\u7684\u4eba\uff0c\u90a3\u4e48\u4ed6\u5c06\u4e0d\u4f1a\u518d\u88ab\u770b\u89c1\uff0c\u56e0\u6b64\uff0c\u53ef\u4ee5\u53ef\u6839\u636e\u8eab\u9ad8\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u6808\uff0c\u4ece\u5de6\u5411\u53f3\u4f9d\u6b21\u626b\u63cf\uff0c\u626b\u63cf\u5230 A \u65f6\uff0c\u6211\u4eec\u5e0c\u671b\u6808\u91cc\u4fdd\u5b58\u7684\u662f A \u4e4b\u524d\uff0c\u80fd\u591f\u548c A \u76f8\u4e92\u770b\u5230\u7684\u4eba\u3002\u5177\u4f53\u5b9e\u73b0\u65f6\uff0c\u6808\u4e2d\u7684\u5143\u7d20\u662f\u81ea\u4e0b\u800c\u4e0a\u9012\u51cf\u7684\uff0c\u8fd9\u5c31\u8981\u6c42\u6211\u4eec\u518d\u52a0\u5143\u7d20\u65f6\u4fdd\u8bc1\u6808\u9876\u5143\u7d20\u5927\u4e8e\u7b49\u4e8e\u52a0\u8fdb\u7684\u90a3\u4e2a\u5143\u7d20\uff0c\u53ef\u4ee5\u7528\u4e8c\u5206\u6cd5\u6c42\u51fa\u6808\u4e2d\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e\u8f93\u5165\u7684\u5143\u7d20\u7684\u503c\uff0c\u5e76\u628a\u8fd9\u4e2a\u5143\u7d20\u4ee5\u4e0a\u7684\u5143\u7d20\u5168\u90e8\u5f39\u51fa\uff0c\u628a\u8f93\u5165\u7684\u5143\u7d20\u653e\u8fdb\u6808\u4e2d\u3002\n\n\u5199\u4ee3\u7801\u65f6\u4e00\u5b9a\u8981\u6ce8\u610f\uff1a\n\n1.\u7b2c\u4e00\u4e2a\u5143\u7d20\u5355\u72ec\u8f93\u5165\uff0c\u9053\u7406\u5f88\u663e\u7136\n\n2.\u7531\u4e8e\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u5355\u72ec\u8f93\u5165\u7684\uff0c\u6240\u4ee5\u6808\u4e2d\u662f\u6709\u4e00\u4e2a\u5143\u7d20\u7684\uff0c\u521d\u59cb\u65f6\u628atop\u8bbe\u4e3a1\n\n3.\u6839\u636e\u9898\u610f\uff0c\u8eab\u9ad8\u76f8\u540c\u7684\u4eba\u5e76\u4e0d\u4f1a\u4e92\u76f8\u906e\u6321\n\n```cpp\n#include<iostream>\nusing namespace std;\nlong long st[10000000],n,top=1,ans,m;\nint main()\n{\n    cin>>n;\n    int a;\n    cin>>st[1];//\u8f93\u5165\n    for(int i=2;i<=n;i++)\n    {\n        cin>>a;\n        if(st[top]>a)\n        {\n            top++,ans++,st[top]=a;\n        }\n        else\n        {\n            int l=1,r=top;\n            while(l<r)\n            {\n                m=(l+r)>>1;\n                if(r==l+1)m=r;\n                if(a>=st[m])r=m-1;\n                else l=m;\n            }\n            ans+=top-l+1;\n            while(top>0&&st[top]<a)top--;\n            st[++top]=a;\n        }\n    }\n    cout<<ans;//\u8f93\u51fa\n}\n```",
        "postTime": 1524548362,
        "uid": 38886,
        "name": "\u8d8a\u5b66\u8d8a\u6382",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4333 \u3010[COI2007] Patrik\u3011"
    },
    {
        "content": "### \u5355\u8c03\u6808\u4e07\u5c81\uff01\n\nP1823\u65b9\u6cd5\uff1a\u5355\u8c03\u6808\n\n\u96be\u5ea6\u2605\u2605\u2605\u2605\n\n## \u6b63\u6587\u6765\u4e86\uff01\n\n\u6d1b\u8c37\u7684\u8fd9\u4e00\u9898\u8981\u7528**\u5355\u8c03\u6808**\u6765\u5b8c\u6210\u3002\n\n\u5355\u8c03\u6808\u662f\u4e00\u4e2a\u5177\u6709\u5355\u8c03\u6027\u7684\u6808\uff0c\u8981\u4e00\u76f4\u4fdd\u6301\u5355\u8c03\uff0c\u9047\u5230\u4e0d\u5355\u8c03\u7684\uff0c\u8981\u5220\u9664\u6216\u8986\u76d6\u3002\u5c31\u50cf\u8fd9\u4e00\u9898\uff0c\u8981\u4fdd\u6301\u4e0a\u5347\u7684\u8d8b\u52bf\u3002\n\n**\u91cd\u70b9\uff1a\u8fde\u7eed\u7684\u51e0\u4e2a\u540c\u6837\u7684\u6570\u5b57\u8981\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u8bb0\u5f55\u4e2a\u6570\uff0c\u6808\u4e2d\u53ea\u5b58\u4e00\u4e2a\u6570\u5b57\uff0c\u4e0d\u7136\u4f1aTLE\u3002\u8fd8\u8981\u5f00long long,\u4e0d\u7136WA\u7b49\u7740\u4f60\uff01**\n\n\u597d\u4e86\uff0c\u8bfe\u8bb2\u5b8c\u4e86\u3002\u4e0a\u4ee3\u7801\u3002\n\n\u540c\u5fd7\u4eec\u4e00\u5b9a\u8981\u8bb0\u5f97\uff1a\n\n**\u68d5\u540d\u53ea\u7528\u52a8\u52a8\u9f20\u6807\u6284\u9898\u89e3\uff0c\u4e0d\u6284\u9898\u89e3\uff0c\u62d2\u7edd\u68d5\u540d\uff01**\n\n```cpp\n#include<iostream>\n#include<fstream>\n#include<cstdio>\n#include<cmath>\n#include<string>\n#include<cstring>\n#include<string.h>\n#include<algorithm>\nusing namespace std;\nlong long n,s[500010],a[500010],top,sum,same[500010];\nint main()\n{\n\tcin>>n;\n\tfor(int i=1; i<=n; i++)\n\t    scanf(\"%d\",&a[i]);\n\tfor(int i=1; i<=n; i++)\n\t{\n\t\twhile(top>0&&a[i]>=a[s[top-1]])\n\t\t{\n\t\t\tif(a[i]==a[s[top-1]])\n\t\t\t    same[i]=same[s[top-1]]+1;\n\t\t\tsum++;\n\t\t\tsum+=same[s[top-1]];\n\t\t\ttop--;\n\t\t}\n\t\tif(top>0)sum++;\n\t\ts[top++]=i;\n\t}\n\tcout<<sum;\n\treturn 0;\n}\n```\n",
        "postTime": 1576213862,
        "uid": 153804,
        "name": "Mr_WA\u7684\u5927\u53f7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1823 \u3010[COI2007] Patrik \u97f3\u4e50\u4f1a\u7684\u7b49\u5f85\u3011"
    },
    {
        "content": "#### \u5355\u8c03\u6808\n\n\tn^2\u66b4\u529b\u53ef A 6\u4e2a\u70b9\n\t\u4e0d\u7528\u7ed3\u6784\u4f53\u6216pair\u8bb0\u5f55\u91cd\u590d\u4e2a\u6570 T 3\u4e2a\u70b9 \n\t\u8003\u8651\u4e00\u4e2a\u4eba\u5982\u679c\u9047\u5230\u4e00\u4e2a\u6bd4\u4ed6\u9ad8\u7684\u4eba\uff0c\u540e\u9762\u7684\u4eba\u4ed6\u5c31\u770b\u4e0d\u5230\u4e86\uff0c\u4e8e\u662f\u5230\u6b64\u4e3a\u6b62\uff0c\u628a\u4ed6\u6254\u6389\n\t\u60f3\u6cd5\u4e0e\u5355\u8c03\u6808\u6781\u4e3a\u76f8\u4f3c\uff0c\u4e8e\u662f\u6709\uff1a\n    \n  ```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nstruct info{\n\tint val,num;\n};//val\u8868\u793a\u5f53\u524d\u8fd9\u4e2a\u4eba\u7684\u9ad8\u5ea6\uff0cnum\u8868\u793a\u5728\u8fd9\u4e2a\u4eba\u4e4b\u524d\u4e14\u4ed6\u6240\u80fd\u770b\u5230\u7684\u6709\u591a\u5c11\u4eba\u548c\u4ed6\u4e00\u6837\u9ad8 \nvoid read(int &x){\n\tint f=1,r=0;char ch;\n\tdo ch=getchar();while(ch!='-'&&!isdigit(ch));\n\tif(ch=='-')f=-1,ch=getchar();\n\tdo r=r*10+ch-48,ch=getchar(); while(isdigit(ch));\n\tx=f*r; \n}//\u5feb\u8bfb \nstack<info> s; //\u5355\u8c03\u6808 \nint n; \nint main() {\n\tcin>>n;\n\tlong long ans=0;\n\tfor(int i=1;i<=n;i++){\n\t\tint h=0;\n\t\tread(h);//\u5f53\u524d\u8fd9\u4e2a\u4ebaA\u7684\u9ad8\u5ea6 \n\t\tinfo p=(info){h,1};//\u9ad8\u5ea6\u4e3a\u672c\u8eab\uff0c\u6700\u5148\u5f00\u59cb\u548cA\u4e00\u6837\u9ad8\u7684\u4eba\u662f\u4e00\u4e2a\uff08\u81ea\u5df1\uff09 \n\t\twhile(!s.empty()&&s.top().val<=h){\n\t\t\t//\u5f53\u6808\u9876\u5143\u7d20\u5c0f\u4e8eA\u7684\u65f6\u5019\uff0c\u6808\u9876\u8fd9\u4e2a\u4eba\u88abA\u6321\u4f4f\u4e86\uff0c\u6240\u4ee5\u770b\u4e0d\u89c1\u540e\u9762\u4e86\u8981\u88ab\u5f39\u51fa\u53bb\n\t\t\t//\u800c\u5f39\u51fa\u7b49\u4e8eA\u9ad8\u5ea6\u7684\u4eba\u65f6\u8981\u8bb0\u5f55\u4e00\u4e0b\uff0c\u4e5f\u5f39\u51fa\n\t\t\t//\uff08\u56e0\u4e3a\u5982\u679c\u4e0d\u5f39\u51fa\uff0c\u5355\u8c03\u6808\u8bbf\u95ee\u4e0d\u5230\u9664\u6808\u9876\u5143\u7d20\u4ee5\u5916\u7684\u5143\u7d20\uff09 \n\t\t\tans+=s.top().num;\n\t\t\t//\u7b54\u6848\u52a0\u4e0a\u6808\u9876\u5143\u7d20\u7684\u4e0e\u4e4b\u76f8\u540c\u9ad8\u5ea6\u7684\u5143\u7d20\u4e2a\u6570\uff08\u6ca1\u6709\u5c31\u52a0\u4e00\uff09 \n\t\t\tif(s.top().val==h)p.num+=s.top().num;\n\t\t\t//\u5982\u679c\u8be5\u5143\u7d20\u4e0eA\u7684\u9ad8\u5ea6\u76f8\u540c,\u90a3\u4e48\u4e0eA\u9ad8\u5ea6\u76f8\u540c\u7684\u4eba\u7684\u4e2a\u6570\uff08num\uff09\u8981\u52a0\u4e0a\u8be5\u5143\u7d20\u7684\u4e2a\u6570 \n\t\t\ts.pop();\n\t\t\t//\u5f39\u51fa\u6808\u9876\u5143\u7d20 \n\t\t}\n\t\tif(!s.empty())ans++;\n\t\t//\u5982\u679c\u6808\u4e2d\u8fd8\u6709\u5143\u7d20\uff0c\u5219\u5934\u5143\u7d20\u662f\u7b2c\u4e00\u4e2a\u5927\u4e8eA\u7684\u9ad8\u5ea6\u7684\u4eba\uff0c\u4e5f\u53ef\u4ee5\u548cA\u4e92\u76f8\u770b\u5230 \n\t\ts.push(p);\n\t\t//\u5c06A\u7684\u4fe1\u606f\u538b\u5165\u6808\u4e2d \n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1538140778,
        "uid": 47908,
        "name": "\u5218\u827a\u8343",
        "ccfLevel": 0,
        "title": "P1823 [COI2007] Patrik \u97f3\u4e50\u4f1a\u7684\u7b49\u5f85"
    },
    {
        "content": "## \u3010\u601d\u8def\u3011\n\u5355\u8c03\u6808    \n\u5f88\u6709\u610f\u601d\u7684\u4e00\u9053\u9898\u76ee     \n\n### \u3010\u9898\u76ee\u5927\u610f\u3011\n\u4e00\u4e2a\u961f\u5217    \n\u4e24\u4e2a\u4eba\u4e2d\u95f4\u53ea\u8981\u6ca1\u6709\u6bd4\u4ed6\u4fe9\u5176\u4e2d\u4e00\u4e2a\u9ad8\u7684\u5c31\u53ef\u4ee5\u76f8\u4e92\u770b\u89c1    \n\u6c42\u80fd\u591f\u76f8\u4e92\u770b\u89c1\u7684\u5bf9\u6570    \n\n### \u3010\u7406\u667a\u5206\u6790\u3011\n\u8fd9\u5bf9\u70b9\u80fd\u591f\u4e92\u76f8\u770b\u89c1\u662f\u57fa\u4e8e\u4e24\u8005\u4e4b\u95f4\u6ca1\u6709\u6bd4\u4ed6\u4eec\u4efb\u4f55\u4e00\u8005\u9ad8\u7684\u57fa\u7840\u4e0a\u7684    \n\u4e00\u4e2a\u4eba\u80fd\u591f\u770b\u89c1\u6700\u8fdc\u7684\u4e00\u4e2a\u4eba\u5c31\u662f\u4e24\u8fb9\u7b2c\u4e00\u4e2a\u6bd4\u4ed6\u9ad8\u7684    \n\u8fd9\u5f88\u663e\u7136\u5bf9\u5427\uff1f     \n\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u6bd4\u4ed6\u9ad8\u7684\u4e4b\u540e\u7684\u4eba\u5c31\u88ab\u4ed6\u6321\u4f4f\u4e86    \n\uff08\u8d34\u5408\u5b9e\u9645\uff09    \n\u7136\u540e\u5982\u679c\u8fd9\u4e2a\u4eba\u548c\u4e00\u8fb9\u7b2c\u4e00\u4e2a\u6bd4\u4ed6\u9ad8\u7684\u4eba    \n\u4e2d\u95f4\u7684\u4eba\u4e0d\u4e00\u5b9a\u80fd\u591f\u5168\u90e8\u88ab\u8fd9\u4e2a\u4eba\u770b\u89c1    \n\n### \u3010\u4e3e\u4f8b\u3011   \n\u56e0\u4e3a\uff1a   \n1 1 4 5 1 4 1 9 1 9    \n\u4f4d\u7f6e8\u4e0a\u7684\u90a3\u4e2a9\u53f3\u8fb9\u80fd\u770b\u5230\u6700\u8fdc\u7684\u5c31\u662f\u4f4d\u7f6e1\u4e0a\u76841    \n\u4f46\u662f\u4f4d\u7f6e1\u5230\u4f4d\u7f6e8\u4e4b\u95f4\u6240\u6709\u7684\u6570   \n\u4ed6\u4e0d\u662f\u90fd\u80fd\u591f\u5f7c\u6b64\u770b\u89c1\u7684    \n\u6bd4\u5982\u4f4d\u7f6e5\u4e0a\u7684\u90a3\u4e2a1   \n\u5c31\u4e0d\u80fd\u5f7c\u6b64\u770b\u89c1    \n\u56e0\u4e3a\u4e2d\u95f4\u6709\u4e00\u4e2a\u4f4d\u7f6e6\u4e0a\u76844\u662f\u6bd41\u9ad8\u7684   \n\u6240\u4ee5\u5f7c\u6b64\u770b\u4e0d\u89c1    \n\u770b\u4e00\u4e0b\u4f4d\u7f6e8\u4e0a\u76849\u53f3\u8fb9\u80fd\u591f\u770b\u5230\u7684\u6570     \n5 4 1    \n\u5f88\u663e\u7136\u8fd9\u662f\u4e00\u4e2a\u5927\u5411\u53f3\u9012\u589e\u7684\u533a\u95f4    \n\u56e0\u4e3a\u4f60\u770b\u5230\u4e86\u53f3\u8fb9\u7b2c\u4e00\u4e2a\u4e4b\u540e    \n\u770b\u5230\u7684\u53f3\u8fb9\u7b2c\u4e8c\u4e2a\u4e0d\u80fd\u591f\u6bd4\u53f3\u8fb9\u7b2c\u4e00\u4e2a\u8981\u4f4e    \n\u4e0d\u7136\u5c31\u662f\u4e0d\u80fd\u591f\u88ab\u770b\u89c1\u7684    \n\n### \u3010\u547c\u4e4b\u6b32\u51fa\u3011   \n\u662f\u4e0d\u662f\u5f88\u663e\u7136\u4e86\uff1f    \n\u8fd9\u4e0d\u5c31\u662f\u5355\u8c03\u6808\u5417\uff01\uff1f    \n\n### \u3010\u6700\u7ec8\u601d\u8def\u3011    \n\u4e0a\u9762\u7684\u8fc7\u7a0b\u5b8c\u5168\u5c31\u662f\u5728\u5355\u8c03\u6808\u7684\u8fc7\u7a0b\u5bf9\u5427    \n\u5982\u679c\u6808\u91cc\u9762\u7684\u6808\u9876\u5143\u7d20\u6bd4\u624b\u4e0a\u8fd9\u4e2a\u5143\u7d20\u8981\u5c0f    \n\u90a3\u6808\u9876\u5143\u7d20\u5de6\u8fb9\u80fd\u591f\u770b\u5230\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5c31\u662f\u624b\u4e0a\u8fd9\u4e2a\u4e86   \n\u518d\u4e5f\u770b\u4e0d\u5230\u522b\u7684\u4e86     \n\u8fd9\u5c31\u662f1\u5bf9\u53ef\u4ee5\u4e92\u76f8\u770b\u89c1     \n\u5f39\u51fa\u5c31\u597d\u4e86    \n\u7136\u540e\u624b\u4e0a\u8fd9\u4e2a\u7ee7\u7eed\u548c\u6808\u9876\u53bb\u6bd4\u8f83   \n\n### \u3010\u6ce8\u610f\u3011\n\u4e24\u4e2a\u4e00\u6837\u9ad8\u7684\u4eba\u662f\u53ef\u4ee5\u76f8\u4e92\u770b\u89c1\u7684    \n1 1 1 1 1     \n\u8fd9\u4e32\u6570\u5b57\u91cc\u9762    \n\u7b2c\u4e00\u4e2a1\u662f\u53ef\u4ee5\u548c\u6700\u540e\u4e00\u4e2a1\u76f8\u4e92\u770b\u89c1\u7684    \n\u5343\u4e07\u4e0d\u8981\u5ffd\u7565\u54e6    \n\n\u7136\u540e\u5c31\u662f\u600e\u4e48\u5904\u7406\u4e0a\u9762\u8fd9\u79cd\u60c5\u51b5\u4e86    \n\u4e00\u5f00\u59cb\u6211\u60f3\u7684\u662f\u66b4\u529b\u4ece\u6808\u91cc\u9762\u53d6\u51fa\u6765    \n\u8ba1\u6570\u6709\u591a\u5c11\u4e2a    \n\u8ba1\u5b8c\u6570\u4e4b\u540e\u518d\u653e\u56de\u6808    \n\u8fd9\u6837\u5c31\u8d85\u65f6\u4e86\u4e24\u4e2a\u70b9    \n\u8fd9\u4e24\u4e2a\u70b9\u6211\u4e0b\u8f7d\u4e86\u4e00\u4e2a\u70b9\u7684\u6d4b\u8bd5\u6570\u636e\u770b\u6765\u4e00\u4e0b    \n500000\u4e2a\u4e00\u6837\u768410   \n\u4e0d\u8d85\u65f6\u624d\u602a\u2026\u2026    \n\u6240\u4ee5 \u53ef\u4ee5\u5728\u6808\u4e2d\u5b58\u4e00\u4e2a\u7ed3\u6784\u4f53    \n\u8bb0\u5f55\u8fd9\u4e2a\u4eba\u7684\u9ad8\u5ea6\u548c\u4eba\u6570    \n\u4e5f\u5c31\u662f\u548c\u5979\u4e00\u6837\u9ad8\u7684\u5e76\u4e14\u5728\u6808\u4e2d\u4f4d\u7f6e\u662f\u7d27\u6328\u7740\u7684    \n\u9047\u5230\u548c\u5979\u4e00\u6837\u7684\u60c5\u51b5\u53ea\u9700\u8981\u5c06\u5176\u5f39\u51fa    \n\u7136\u540e\u5728\u5f39\u5165\u4e00\u4e2av(\u8ba1\u6570\u591a\u5c11\u4e2a\u4eba) + 1\u7684\u5c31\u597d\u4e86      \n## \u3010\u5b8c\u6574\u4ee3\u7801\u3011\n### \u301080\u5206\u66b4\u529b\u51fa\u6808\u4ee3\u7801\u3011\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<stack>\nusing namespace std;\nconst int Max = 500005;\nint a[Max];\nstack<int>s;\nint main()\n{\n\tint n;\n\tcin >> n;\n\tfor(register int i = 1;i <= n;++ i)\n\t\tcin >> a[i];\n\tint js = 0;\n\tfor(register int i = 1;i <= n;++ i)\n\t{\n\t\tint jj = 0;\n\t\twhile(!s.empty() && a[i] >= s.top())\n\t\t{\n\t\t\tif(a[i] == s.top())\n\t\t\t{\n\t\t\t\twhile(!s.empty() && s.top() == a[i])\n\t\t\t\t\ts.pop(),jj ++,js ++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ts.pop();\n\t\t\t\tjs ++;\n\t\t\t}\n\t\t}\n\t\tif(!s.empty())\n\t\t\tjs ++;\n\t\twhile(jj --)\n\t\t\ts.push(a[i]);\n\t\ts.push(a[i]);\n\t}\n\tcout << js << endl;\n\treturn 0;\n}\n```\n### \u3010AC\u4ee3\u7801\u3011\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<stack>\n#define int long long\nusing namespace std;\nconst int Max = 500005;\nstruct node\n{\n\tint h;\n\tint v;\n}a[Max];\nstack<node>s;\nsigned main()\n{\n//\tfreopen(\"music.in\",\"r\",stdin);\n\tint n;\n\tcin >> n;\n\tfor(register int i = 1;i <= n;++ i)\n\t\tcin >> a[i].h,a[i].v = 1;\n\tint ans = 0;\n\tfor(register int i = 1;i <= n;++ i)\n\t{\n\t\twhile(!s.empty() && a[i].h > s.top().h)\n\t\t{\n\t\t\tans += s.top().v;\n\t\t\ts.pop();\n\t\t}\n\t\tif(!s.empty() && a[i].h == s.top().h)\n\t\t{\n\t\t\tnode qwq = s.top();\n\t\t\tans += s.top().v;\n\t\t\ts.pop();\n\t\t\tif(!s.empty())\n\t\t\t\tans ++;\n\t\t\ts.push((node){qwq.h,qwq.v + 1});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(!s.empty())\n\t\t\t\tans ++;\n\t\t\ts.push(a[i]);\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n```",
        "postTime": 1571209399,
        "uid": 186489,
        "name": "EarthGiao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1823 \u3010[COI2007] Patrik \u97f3\u4e50\u4f1a\u7684\u7b49\u5f85\u3011"
    },
    {
        "content": "**\u8bf4\u53e5\u5b9e\u8bdd\uff0c\u8fd9\u9053\u9898\u771f\u7684\u633a\u5751\u7684\uff0c\u9996\u5148\uff0c\u6211\u4eec\u5148\u6765\u8bf4\u4e00\u4e0b\u5927\u4f53\u7684\u601d\u8def\u3002**\n\n**\u8fd9\u9053\u9898\u5176\u5b9e\u5c31\u662f\u7ed9\u51fa\u4e00\u4e2a\u961f\u4f0d\uff0c\u8981\u627e\u51fa\u6240\u6709\u80fd\u76f8\u4e92\u770b\u89c1\u7684\u4e00\u5bf9\uff08\u4e24\u4e2a\u4eba\u4e4b\u95f4\u6ca1\u6709\u6bd4\u4e24\u4e2a\u4eba\u4efb\u610f\u4e00\u4e2a\u4eba\u9ad8\u7684\u4eba\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u8be5\u600e\u4e48\u505a\u5462\uff1f**\n\n**\n\u6211\u4eec\u6765\u60f3\u4e00\u4e0b\uff0c\u7531\u4e8e\u9898\u4e2d\u8ba9\u6211\u4eec\u627e\u7684\u662f\u5bf9\u6570\uff0c\u4e3a\u4e86\u907f\u514d\u627e\u91cd\u4e86\uff0c\u6211\u4eec\u53ea\u80fd\u770b\u4e00\u4e2a\u65b9\u5411\uff08\u5982\u679c\u4f60\u504f\u8981\u770b\u4e24\u4e2a\u65b9\u5411\u518d\u9664\u4ee5\u4e8c\u4e5f\u6ca1\u6709\u4eba\u62e6\u4f60\u3002\u3002\u3002\uff09\uff0c\u4f46\u662f\u4ece\u5de6\u5f80\u53f3\u770b\u663e\u7136\u524d\u9762\u5143\u7d20\u4f1a\u53d7\u5230\u540e\u9762\u7684\u5f71\u54cd\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u6b63\u5e8f\u5224\u65ad\uff0c\u8fd9\u91cc\u5e94\u8be5\u4ece\u53f3\u5f80\u5de6\u770b\u3002\n**\n\n**\u6211\u4eec\u4efb\u610f\u53d6\u4e00\u4f4d\u4eba\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4eba\u6240\u80fd\u770b\u5230\u6700\u8fdc\u7684\u4eba\u5c31\u662f\u5b83\u524d\u9762\u7b2c\u4e00\u4e2a\u6bd4\u4ed6\u9ad8\u7684\u4eba\uff0c\u5e76\u4e14\u5982\u679c\u8fd9\u4e2a\u4eba\u9ad8\u4e8e\u4ed6\u5de6\u8fb9\u7684\u4ebaP\uff0c\u90a3\u4e48\u663e\u7136\u4ed6\u53f3\u8fb9\u7684\u4eba\u4e00\u5b9a\u770b\u4e0d\u5230P\u3002\n**\n\n**\u6839\u636e\u8fd9\u4e24\u6761\u6027\u8d28\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff1a\u6808\u3002\u53c8\u56e0\u4e3a\u6bcf\u4e2a\u4eba\u5165\u6808\u65f6\u6808\u4e2d\u5143\u7d20\u4e00\u5b9a\u662f\u5355\u8c03\u4e0d\u9012\u589e\u7684\uff0c\u6240\u4ee5\u8be5\u6808\u5177\u6709\u5355\u8c03\u6027\uff0c\u56e0\u6b64\u6211\u4eec\u5f15\u5165\u4e00\u4e2a\u65b0\u7684\u6982\u5ff5\uff1a\u5355\u8c03\u6808\u3002**\n\n**\u5f52\u6982\u6765\u8bf4\uff0c\u6bcf\u5f53\u6211\u4eec\u653e\u5165\u4e00\u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6267\u884c\u4e24\u4e2a\u64cd\u4f5c\uff1a**\n\n**1.\u67e5\u627e\u7b2c\u4e00\u4e2a\u6bd4\u4ed6\u9ad8\u7684\u4eba\uff0c\u7edf\u8ba1\u770b\u5230\u7684\u4eba\u6570**\n\n**2.\u5f39\u51fa\u4f1a\u88ab\u4ed6\u906e\u5230\uff08\u5c0f\u4e8e\u4ed6\uff09\u7684\u5143\u7d20**\n\n**\u7b2c\u4e00\u6761\u6211\u4eec\u53ef\u4ee5\u7528\u4e8c\u5206\u6cd5\u67e5\u627e\uff0c\u800c\u7b2c\u4e8c\u6761\u76f4\u63a5\u7ebf\u6027\u641c\u7d22\u5373\u53ef\u3002**\n\n**\u6700\u540e\uff0c\u9644\u4e0a\u672c\u9898\u4ee3\u7801\uff1a**\n\n```cpp\n#include<cstdio>\nusing namespace std;\nint n,top;\nlong long Ans;\nint a[500050],stk[500050];\nvoid dfs(int x)\n{\n    int le=0,ri=top,mid,ret=0;\n    while(le<=ri)\n    {\n        mid=(le+ri)>>1;\n        if(a[stk[mid]]>x)ret=mid,le=mid+1;\n        else ri=mid-1;\n    }\n    if(!ret)Ans+=top;\n    else Ans+=top-ret+1;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1; i<=n; ++i)scanf(\"%d\",&a[i]);\n    for(int i=1; i<=n; ++i)\n    {\n        dfs(a[i]);\n        while(top>0&&a[i]>a[stk[top]])--top;\n        stk[++top]=i;\n    }\n    printf(\"%lld\",Ans);\n    return 0;\n}\n```\n\n## **\u4f60\u4ee5\u4e3a\u8fd9\u5c31\u5b8c\u4e8b\u4e86\uff1f**\n**\u5e76\u6ca1\u6709**\uff01\n\n**\u5728\u8bfe\u4e0a\u6709\u4eba\u63d0\u5230\u4e86\u4e00\u79cd\u7b80\u4fbf\u505a\u6cd5\uff08\u9519\u7684\uff0c\u4f46\u53ef\u4ee5\u6539\u5bf9\uff09**\n\n\u7b80\u4fbf\u505a\u6cd5\uff1a\u4e0d\u8fdb\u884c\u4e8c\u5206\u67e5\u627e\uff0c\u8ba4\u4e3a\u5f39\u51fa\u5143\u7d20\u7684\u6570\u91cf\u52a0\u4e00\u5c31\u662f\u80fd\u770b\u5230\u7684\u4eba\u6570\n\n\u4e4d\u4e00\u770b\u597d\u50cf\u662f\u5bf9\u7684\uff1a\u4f8b\u5982 9 8 7 3 2\u4e2d\u63d2\u5165\u4e00\u4e2a6\uff0c\u90a3\u4e48\u5f39\u51fa3\uff0c2\u770b\u5230\u4e867\uff0c3\uff0c2\uff0c\u786e\u5b9e\u662f\u5f39\u51fa\u5143\u7d20\u6570\u91cf\u52a0\u4e00\uff0c\u4f46\u662f\u5ffd\u7565\u4e86\u76f8\u7b49\u7684\u60c5\u51b5\uff08\u9898\u4e2d\u6ca1\u8bf4\u4e0d\u80fd\u76f8\u7b49\uff08\u5751\uff09\uff09\u3002\n\n\u3000\u3000\u4f8b\u5982\uff1a9\uff0c8\uff0c7\uff0c2\u4e2d\u63d2\u5165\u4e00\u4e2a2\uff0c\u90a3\u4e48\u663e\u7136\u4e0d\u4f1a\u5f39\u51fa\u4efb\u4f55\u5143\u7d20\uff0c\u4f46\u662f\u770b\u5230\u7684\u662f\u4e24\u4e2a\u54c7\uff01\u56e0\u6b64\u52a0\u5165\u7279\u5224\u4e00\u3002\u3002\u3002\n  \n\u3000\u3000\u518d\u4f8b\u5982\uff1a\u03c6 \u4e2d\u63d2\u5165\u4efb\u4f55\u5143\u7d20\uff0c\u90a3\u4e48\u663e\u7136\u7b54\u6848\u662f0\uff0c\u4f46\u662f\u6309\u7167\u4e0a\u8ff0\u505a\u6cd5\u6c42\u5f97\u7b54\u68481\uff01\u56e0\u6b64\u52a0\u5165\u7279\u5224\u4e8c\u3002\u3002\u3002\n  \n\u3000\u3000\u8fd8\u6709\u5f88\u591a\u5c31\u4e0d\u4e00\u4e00\u5217\u4e3e\u4e86\uff0c\u603b\u4e4b\uff0c\u5982\u679c\u4e00\u9053\u9898\u52a0\u4e86\u8fd9\u4e48\u591a\u7279\u5224\uff0c\u4ee3\u7801\u957f\u5ea6\u4e00\u5b9a\u4f1a\u5927\u5927\u589e\u52a0\uff0c\u8fd9\u91cc\u8fd8\u662f\u63d0\u4f9b\u4e00\u79cd\u52a0\u4e86\u8865\u4e01\u540e\u7684\u4ee3\u7801\uff1a\n  \n\u3000\u3000\u8fd9\u91cc\u7528\u5230\u4e86\u4e24\u4e2a\u6808\uff0c\u4e00\u4e2a\u5b58\u6570\uff0c\u53e6\u4e00\u4e2a\u5b58\u4e2a\u6570\u3002\n  \n```cpp\n#include <cstdio>\n#include <stack>\nusing namespace std;\nstack <long long> stk,num;\nint n;\nlong long ans;\nint main()\n{\n    scanf(\"%d\",&n);\n    long long tmp;\n    for(int i = 1; i <= n; i++)\n    {\n        scanf(\"%lld\",&tmp);\n        while (!stk.empty() && stk.top() < tmp)\n        {\n            stk.pop();\n            ans += num.top();\n            num.pop();\n        }\n        if (stk.empty())\n        {\n            stk.push(tmp);\n            num.push(1);\n        }\n        else\n        {\n            if (tmp != stk.top())\n            {\n                ans += 1;\n                stk.push(tmp);\n                num.push(1);\n            }\n            else if (stk.size() == 1)\n            {\n                ans += num.top();\n                int u = num.top();\n                num.pop();\n                num.push(u + 1);\n            }\n            else\n            {\n                ans += num.top();\n                int u = num.top();\n                num.pop();\n                ans += 1;\n                num.push(u + 1);\n            }\n        }\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1550320621,
        "uid": 133227,
        "name": "\u4e8e\u4e30\u6797",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1823 \u3010[COI2007] Patrik \u97f3\u4e50\u4f1a\u7684\u7b49\u5f85\u3011"
    },
    {
        "content": "\u8fd9\u9898\u662f\u5f88\u7ecf\u5178\u7684\u5355\u8c03\u6808\u554a\u3002\n\n\u6570\u636e\u662f500000\uff0cnlogn\u4e5f\u80fd\u8fc7\uff08\u597d\u50cf\u53e6\u4e00\u7bc7\u9898\u89e3\u5c31\u662fnlogn\u7684\uff09\uff0c\u5176\u5b9e\u6570\u636e\u8fd8\u80fd\u518d\u52a0\u5f3a\u70b9\uff0c\u8fd9\u6837\u5c31\u53ea\u80fdo(n)\u7684\u5355\u8c03\u6808\u8fc7\u4e86\u3002\uff08\u4eb2\u6d4b\u65f6\u95f4\u4e3anlogn\u76841/5\uff09\n\n------------\n\u8fdb\u5165\u6b63\u9898\n\n## \u9898\u76ee\u5927\u610f\uff1a\n\n  \u6c42\u51fa\u7ec4\u5408A,B\uff0c\uff08**A\uff0cB\u76f4\u63a5\u4e0d\u5b58\u5728\u4e25\u683c\u5927\u4e8eA\u6216B**\uff09\u6709\u591a\u5c11\u7ec4\u3002\n  \n------------\n## 1.\u66b4\u529b\uff1a\n  \u597d\u7684\u65b9\u6cd5\u90fd\u662f\u5efa\u7acb\u5728\u66b4\u529b\u7684\u57fa\u7840\u4e0a\u7684\uff0c\u53ea\u6709\u60f3\u901a\u4e86\u66b4\u529b\u624d\u6709\u53ef\u80fd\u5f97\u51fa\u6b63\u89e3\u3002\u66b4\u529b\u8fd8\u662f\u6bd4\u8f83\u597d\u60f3\u7684\uff0cN\u65b9\u679a\u4e3e\u6bcf\u4e2a\u4eba\uff0c\u770b\u770b\u4ed6\u4eec\u4e4b\u95f4\u6709\u6ca1\u6709\u6bd4\u4ed6\u4eec\u5927\u7684\u5c31\u597d\u4e86\u3002\n  \n## 2.\u5355\u8c03\u6808 \uff08O\uff08n\uff09\uff09\n\n  \u4e3e\u4e2a\u4f8b\u5b50\uff1a1 2 3\n  \n  \u770b\u770b\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u53d1\u73b0\u5f53\u679a\u4e3ei\uff081\uff09\u65f6\uff0c\u53ea\u6709\u540e\u9762\uff082\uff09\u6709\u6bd4\u4ed6\u5927\u7684\uff0c\u518d\u540e\u9762\uff083\uff09\u7684\u4ed6\u5c31\u770b\u4e0d\u5230\u4e86\u3002\u8fd9\u5c31\u8ba9\u6211\u4eec\u60f3\u5230\u4e86\u5355\u8c03\u6808\uff0c**\u53ea\u8981\u4e00\u4e2a\u5143\u7d20\u51fa\u6808\u4e86\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u5c31\u6ca1\u4ed6\u4ec0\u4e48\u4e8b\u4e86**\uff08\u8fd9\u4e5f\u662f\u5355\u8c03\u6808\u65f6\u95f4\u590d\u6742\u5ea6O(n)\u7684\u539f\u56e0\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5143\u7d20\u53ea\u4f1a\u5165\u6808\u4e00\u6b21\uff0c\u51fa\u6808\u4e00\u6b21\uff09\u3002\n  \n  \u5177\u4f53\u5355\u8c03\u6808\u7684\u64cd\u4f5c\uff0c\u53e6\u4e00\u4e2a\u9898\u89e3\u5df2\u7ecf\u8bb2\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u6211\u5c31\u6765\u8bb2\u8bb2\u600e\u4e48\u628a\u90a3\u5c42\u591a\u4f59\u7684\u4e8c\u5206\u67e5\u627e\uff08logn\uff09\u7ed9\u53bb\u6389.\n  \n  \u56e0\u4e3a\u5355\u8c03\u6808\u662f\u4fdd\u6301\u5355\u8c03\u7684\uff0c\u8d8a\u9760\u8fd1\u6808\u9876\u7684\u503c\u8d8a\u5c0f\uff0c\u6240\u6709\u4e3a\u4e86\u4fdd\u6301\u5355\u8c03\u6027\u6bcf\u679a\u4e3e\u5230\u7684\u503c\u5c31\u5f80\u4e0b\u538b\uff0c\u5bf9\u6bd4\u548c\u6808\u9876\u90a3\u4e2a\u5927\uff0c\u5982\u679c\u5927\u4e8e\u6808\u9876\uff0ctop\uff08\u6808\u7684\u9ad8\u5ea6\uff09\u51cf1\u3002\u5f53\u4e0d\u80fd\u518d\u5f80\u4e0b\u538b\u65f6\uff0c\u5982\u679c\u6808\u5185\u8fd8\u6709\u5143\u7d20\uff0c\u8bf4\u660e\u8fd9\u4e24\u4e2a\u4eba\u662f\u53ef\u4ee5\u770b\u5230\u7684\uff08\u4e2d\u95f4\u4e0d\u5b58\u5728\u5927\u4e8e\u4ed6\u4eec\u7684\u5143\u7d20\u4e86\uff09\uff0cans++\u3002\n  \n  \u8fd9\u91cc\u6709\u4e2a\u4f18\u5316\uff0c\u5f53\u8be5\u5143\u7d20\u7b49\u4e8e\u6808\u9876\u5143\u7d20\u65f6\uff0c\u5c31\u628a\u6808\u9876\u5143\u7d20\u7684\u79ef\u7d2f\u6b21\u6570+1\uff0c\u4e0d\u7528\u518d\u7ad9\u4e00\u4f4d\u4e86\u3002\n  \n  \u8fd8\u6709\u4e00\u4e2a\u5751\u70b9\uff0c\u8fd9\u9898\u8981\u5f00**long long**\n  \n  \u5177\u4f53\u770b\u4ee3\u7801\u4f53\u4f1a\u5427\uff1a\n  \n  ```\n#include<bits/stdc++.h>\n#define ll long long\n#define maxn 10000005\nusing namespace std;\nll n,a[maxn],top,x,ans;\nstruct lc{\n\tll x,tot;\n}Q[maxn];\ninline ll read(){\n\tll ret=0,f=1;char ch=getchar();\n\twhile (ch<'0'||ch>'9'){if (ch=='-') f=-f;ch=getchar();}\n\twhile (ch<='9'&&ch>='0') ret=ret*10+ch-'0',ch=getchar();\n\treturn ret*f;\n}\nint main(){\n\tn=read();\n\tfor (int i=1;i<=n;i++) a[i]=read();\n\tfor (int i=1;i<=n;i++){\n\t\twhile (top&&a[i]>a[Q[top].x]) ans+=Q[top].tot,top--;\n\t\tif (a[i]==a[Q[top].x]){\n\t\t\tans+=Q[top].tot;Q[top].tot++;\n\t\t\tif (top>1) ans++;\n\t\t    continue;\n\t\t}\n\t\tif (top) ans++;\n\t\tQ[++top].x=i,Q[top].tot=1;\n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1564215057,
        "uid": 108047,
        "name": "LlLlCc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4333 \u3010[COI2007] Patrik\u3010\u91cd\u9898P1823\u3011\u3011"
    },
    {
        "content": "## \u6539\u4e2a\u4e00\u4e2a\u5c0f\u65f6\uff0c\u7ec8\u4e8e\u5c06\u8fd9\u4e2a\u9898\u7ed9A\u4e86\n### \u8bdd\u4e0d\u591a\u5c11 \u76f4\u63a5\u5206\u6790\u9898\u76ee  \n _\u961f\u5217\u4e2d\u4efb\u610f\u4e24\u4e2a\u4ebaA\u548cB\uff0c\u5982\u679c\u4ed6\u4eec\u662f\u76f8\u90bb\u6216\u4ed6\u4eec\u4e4b\u95f4\u6ca1\u6709\u4eba\u6bd4A\u6216B\u9ad8\uff0c\u90a3\u4e48\u4ed6\u4eec\u662f\u53ef\u4ee5\u4e92\u76f8\u770b\u5f97\u89c1\u7684\u3002_ \n### \u770b\u5230\u8fd9\u91cc\u53ef\u4ee5\u60f3\u5230\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u9012\u51cf\u7684\u5e8f\u5217+\u4e8c\u5206\u641c\u5bfb\u7b2c\u4e00\u4e2a\u6bd4\u8fd9\u4e2a\u4eba\u9ad8\u7684\u4f4d\u7f6e\n### \u53e6\u5916 \u6b64\u9898\u53ea\u8981\u8ba9\u8fd9\u4e2a\u4eba\u5411\u5de6\u770b\u5c31\u53ef\u4ee5\u5f97\u51fa\u6240\u6709\u7ed3\u679c\uff08\u4e0d\u8981\u5f80\u5de6\u53f3\u540c\u65f6\u770b \u4e0d\u7136\u5f88\u9ebb\u70e6\uff09\n#### \u4e0b\u9762\u770b\u4ee3\u7801\u8bf4\u8bdd\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nint n;\nint a[510000];\nint q[510000];\nlong long top;\nlong long ans,l,r;//ans\u8981\u5f00long long \u5426\u5219\u4f1aWA\nint main() {\n\tscanf(\"%d\",&n);\n\tfor(int i=1; i<=n; i++) {\n\t\tscanf(\"%d\",a+i);\n\t}\n\ttop=1;//top\u4e3a\u5355\u8c03\u961f\u5217\u7684\u957f\u5ea6\n\tq[1]=a[1];//\u7b2c\u4e00\u4e2a\u52a0\u5165\u961f\u5217\n\tq[0]=1231233;//\u6ce8\u610f \u5de6\u7aef\u70b9\u8bbe\u7f6e\u4e00\u4e2a\u8f83\u5927\u7684\u6570 \u4fdd\u8bc1\u961f\u5217\u7684\u4f4d\u7f6e\u4e3a1,2,3...\n   //\u4ece2\u5f80\u540e\u641c \u56e0\u4e3a\u7b2c\u4e00\u4e2a\u4eba\u4e0d\u4f1a\u770b\u5230\u4efb\u4f55\u4eba\n\tfor(int i=2; i<=n; i++) {\n\t\tl=0;\n\t\tr=top;\n      //\u4e8c\u5206\u961f\u5217\n\t\twhile(l<=r) {\n\t\t\tint mid=(l+r)>>1;\n\t\t\tif(q[mid]<=a[i])//\u9ad8\u5ea6\u76f8\u7b49\u65f6\u4e5f\u53ef\u4ee5\u770b\u5230\n\t\t        r=mid-1;\n                      else l=mid+1;\n\t\t}\n      //\u4e8c\u5206\u540e\u7684l\u8868\u793a\u8fd9\u4e2a\u4eba\u7684\u9ad8\u5ea6\u5e94\u8be5\u6392\u5728\u7b2c\u51e0\u4f4d\uff0cr\u8868\u793a\u7b2c\u4e00\u4e2a\u6bd4\u8fd9\u4e2a\u4eba\u9ad8\u7684\u4f4d\u7f6e\n              if(r==0)//\u524d\u9762\u7684\u5355\u8c03\u961f\u5217\u6700\u9ad8\u7684\u4eba\u90fd\u6ca1\u6709\u6bd4\u8fd9\u4e2a\u4eba\u9ad8\u65f6\n\t\t\tans+=top;//\u8fd9\u4e2a\u4eba\u53ef\u4ee5\u770b\u5230\u524d\u9762\u6240\u6709\u4eba\n\t\telse//\u6709\u6bd4\u4ed6\u9ad8\u7684\u65f6\u5019\n\t\t\tans+=(top-r+1);//\n         \u8fd9\u4e2ar\u4eba\u53ef\u4ee5\u770b\u5230\u6bd4\u4ed6\u9ad8\u7684\u7b2c\u4e00\u4e2a\u4eba\u4f46\u4e0d\u80fd\u770b\u5230\u66f4\u9ad8\u7684\u4eba\n\t\twhile(q[top]<a[i])//\u5165\u961f\u6761\u4ef6 \u628a\u6bd4\u4ed6\u77ee\u7684\u90fd\u5254\u9664\u6389\n\t\t\ttop--;\n\t\tq[++top]=a[i];//\u6700\u540e\u4f1a\u51cf\u5230\u6bd4\u4ed6\u5927\u6216\u7b49\u4e8e\u7684\u4f4d\u7f6e top++\u540e\u5728\u5165\u961f\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n### \u5e0c\u671b\u5bf9\u5404\u4f4d~~dalao~~\u6709\u6240\u5e2e\u52a9",
        "postTime": 1559378265,
        "uid": 122078,
        "name": "liubai",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1823 \u3010[COI2007] Patrik \u97f3\u4e50\u4f1a\u7684\u7b49\u5f85\u3011"
    },
    {
        "content": "\u849f\u84bb\u53c8\u6765~~\u6c34~~\u9898\u89e3\u4e86\u3002\n\n\u8fd9\u9053\u9898\u5355\u8c03\u6808\u7684\u5177\u4f53\u505a\u6cd5\u53ef\u4ee5\u53c2\u8003\u697c\u4e0a\uff0c\u7531\u4e8e\u52a0\u4e86\u4e09\u4e2a~~\u6bd2\u7624~~\u6570\u636e\uff0c\u8fd9\u9053\u9898ac\u540e\u9762\u4e09\u4e2a\u70b9\u7684\u6838\u5fc3\u64cd\u4f5c\u5c31\u662f\u5bf9\u91cd\u590d\u5143\u7d20\u7684\u5904\u7406\uff0c~~\u672c\u6765\u60f3\u5361\u5e38\u8fc7~~\uff0c\u91cd\u590d\u5143\u7d20\u4e0d\u80fd\u968f\u4fbf\u5220\uff0c\u4f46\u662f\u5982\u679c\u51fa\u73b0\u5927\u91cf\u7684\u91cd\u590d\u5143\u7d20\uff0c\u6bcf\u6b21\u90fd\u53bb\u904d\u5386\u4e00\u904d\u7684\u8bdd\u5c31\u4f1a\u975e\u5e38\u6d6a\u8d39\u65f6\u95f4\uff0c\u56e0\u6b64\u53ef\u4ee5\u641e\u4e00\u4e2a\u4e8c\u7ef4\u7684\u5355\u8c03\u6808\uff0c\u4e00\u7ef4\u5b58\u9ad8\u5ea6\uff0c\u4e8c\u7ef4\u5b58\u6570\u91cf\uff0c\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u5220\u91cd\u590d\u5143\u7d20\u4e86,\u7528\u6570\u7ec4\u7248\u7684\u5355\u8c03\u6808\u65b9\u4fbf\u67e5\u770b\u6808\u4e2d\u5143\u7d20\u53ca\u8c03\u8bd5\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int maxn=5e5+10;\nll n,x,a[maxn],h[maxn],ans=0;\nll q1[2][maxn];\nint f1=1,r1=0;\ninline ll read(){\n   ll s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}\n\nint main()\n{\n\t//ios::sync_with_stdio(false);\n\tn=read();\n\tfor(int i=1;i<=n;i++) h[i]=read();\n\tq1[0][++r1]=h[1],q1[1][r1]=1;\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tint t=1;\n\t\twhile(r1>0&&q1[0][r1]<=h[i]) \n\t\t{\n\t\t\tif(q1[0][r1]==h[i]) t+=q1[1][r1];\n\t\t\tans+=q1[1][r1];r1--;\n\t\t}\n\t\tif(r1>0) ans++;\n\t\tq1[0][++r1]=h[i];q1[1][r1]=t;\n\t}\n\tprintf(\"%lld\\n\",ans);\n} \n\n```\n\u540e\u9762\u4e09\u4e2a\u70b9\u5927\u6982\u662f20ms\u5de6\u53f3\uff0c\u53ef\u89c1\u91cd\u590d\u5143\u7d20\u4e4b\u591a\uff0c\u6570\u636e\u4e4b\u6bd2\u7624\uff08\u9003\uff09\n",
        "postTime": 1555393018,
        "uid": 128739,
        "name": "q17770027225",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1823 \u3010[COI2007] Patrik \u97f3\u4e50\u4f1a\u7684\u7b49\u5f85\u3011"
    },
    {
        "content": "## \u9898\u89e3\uff1a\n\n\u9996\u5148\u770b\u5230\u8fd9\u9898\uff0c\u4e00\u4e2a\u7edd\u5bf9\u66b4\u529b\u7684\u601d\u8def\u662f\u4e00\u4e00\u679a\u4e3e\u6240\u6709\u7ec4\u5408\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7ec4\u5408\uff0c\u5224\u65ad\u4e00\u4e0b\u8fd9\u4fe9\u4eba\u662f\u4e0d\u662f\u53ef\u4ee5\u4e92\u76f8\u770b\u89c1\u3002\u7136\u540e\u7d2f\u52a0ans\u3002\n\n\u80af\u5b9a\u662fT\u4e86\uff0c\u522b\u60f3\u4e86\u3002\n\n\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u521a\u521a\u7684\u66b4\u529b\u601d\u8def\u8fdb\u884c\u753b\u56fe\u6a21\u62df\u6765\u5f97\u51fa\u4e00\u4e9b\u66f4\u6df1\u523b\u7684\u7ed3\u8bba\uff1a\u663e\u7136\u5730\uff0c\u5982\u679c\u4ece\u67d0\u4e00\u4e2a\u4eba\u5f00\u59cb\u5411\u53f3\u67e5\u627e\uff0c\u78b0\u5230\u4e00\u7fa4\u6bd4\u4ed6\u77ee\u7684\uff0c\u90a3\u4e48\u8fd9\u4e9b\u6bd4\u4ed6\u77ee\u7684\u548c\u4ed6\u81ea\u5df1\u5c31\u662f\u5408\u6cd5\u7684\u5bf9\u3002\u4f46\u662f\u5982\u679c\u7a81\u7136\u78b0\u5230\u4e00\u4e2a\u6bd4\u4ed6\u9ad8\u7684\uff0c\u90a3\u5373\u4f7f\u540e\u9762\u8fd8\u6709\u82e5\u5e72\u7684\u4eba\u6bd4\u4ed6\u77ee\uff0c\u90a3\u4e5fGG\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u9ad8\u7684\u963b\u6321\u4f4f\u4e86\u6240\u6709\u7684\u89c6\u7ebf\u3002\n\n\u604d\u7136\u53d1\u73b0\u8981\u7ef4\u62a4\u4e00\u4e2a\u5177\u6709\u5355\u8c03\u6027\u7684\u961f\u5217\u3002\u4e8e\u662f\u6211\u4eec\u8003\u8651\u5355\u8c03\u961f\u5217/\u5355\u8c03\u6808\uff0c\u8fd9\u9053\u9898\u7528\u5355\u8c03\u961f\u5217\u662f\u4e0d\u884c\u7684\uff0c\u56e0\u4e3a\u5355\u8c03\u961f\u5217\u662f\u4e00\u4e2a\u5148\u8fdb\u5148\u51fa\u7684\u6570\u636e\u7ed3\u6784\uff0c\u663e\u7136\u548c\u672c\u9898\u9898\u610f\u4e0d\u7b26\u3002\u6240\u4ee5\u6211\u4eec\u7528\u5355\u8c03\u6808\u518d\u8003\u8651\u4e00\u4e0b\uff1a\u6211\u4eec\u4ece\u961f\u5217\u7684\u7b2c\u4e00\u4e2a\u4eba\u5f00\u59cb\uff0c\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u9012\u51cf\u7684\u6808\uff0c\u5f53\u4e00\u4e2a\u65b0\u7684\u5143\u7d20\u5165\u6808\u7684\u65f6\u5019\uff0c\u663e\u7136\uff0c\u4ed6\u53ef\u4ee5\u770b\u5230\u5f53\u524d\u5728\u6808\u4e2d\u6240\u6709\u6bd4\u4ed6\u77ee\u7684\u4eba\uff0c\u90a3\u5c31\u5f00\u59cb\u6309\u5355\u8c03\u6808\u7684\u64cd\u4f5c\u9010\u4e00\u5f39\u6808\uff0c\u7136\u540e\u4e00\u76f4\u66f4\u65b0\u7b54\u6848\u3002\u8fd9\u9053\u9898\u7684\u601d\u8def\u5c31\u51fa\u6765\u4e86\u3002\n\n\u5982\u6b64\u5199\u5b8c\uff0cWA\u3002\n\n\u539f\u56e0\u6709\u4e24\u4e2a\uff1a\n\n\u7b2c\u4e00\u4e2a\uff0c\u5982\u679c\u78b0\u5230\u548c\u5176\u8eab\u9ad8\u76f8\u7b49\u7684\u548b\u529e\uff1f\n\n\u65b0\u5f00\u4e00\u4e2a\u53d8\u91cf\u6765\u8bb0\u5f55\u6709\u51e0\u4e2a\uff08\u5305\u62ec\u81ea\u5df1\uff09\u76f8\u7b49\u7684\u3002\u540c\u65f6\u7d2f\u8ba1\u7b54\u6848\uff0c\u6700\u540e\u518d\u628a\u6240\u6709\u76f8\u7b49\u7684\u538b\u56de\u53bb\u5373\u53ef\u3002\n\n\u7b2c\u4e8c\u4e2a\uff0c\u6ce8\u610f\uff0c\u5982\u679c\u6bd4\u4ed6\u77ee\u7684\u548c\u76f8\u7b49\u7684\u90fd\u5f39\u6389\u4e4b\u540e\uff0c\u6808\u8fd8\u4e0d\u4e3a\u7a7a\uff0c\u90a3\u4e48\u8fd8\u8981\u52a0\u4e0a1.\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u5982\u679c\u8fd9\u4e2a\u4eba\u662f\u6bd4\u4ed6\u9ad8\u7684\u7b2c\u4e00\u4e2a\u4eba\uff0c\u90a3\u4e48\u4ed6\u4fe9\u8fd8\u662f\u53ef\u4ee5\u4e92\u76f8\u770b\u5230\u7684\uff0c\u800c\u8fd9\u4e2a\u4eba\u540e\u9762\u7684\u5c31\u4e0d\u884c\u4e86\u3002\n\n\u5f00\u5199\uff0cTLE\u4e09\u4e2a\u70b9\uff08\u8d85\u7ea7\u6570\u636e\uff09\n\n\u4e3a\u5565\u5b50\u4f1aT\u5462\uff1f\n\n\u8fd9\u4e09\u4e2a\u6570\u636e\u4e4b\u6240\u4ee5\u533a\u522b\u4e8e\u5176\u4ed6\u7684\u6570\u636e\uff0c\u5c31\u662f\u56e0\u4e3a\u7279\u6b8a\u6784\u9020\u4e86\u5f88\u591a\u76f8\u7b49\u7684\u4eba\u3002\u6309\u7167\u6211\u4eec\u521a\u624d\u7684\u601d\u8def\uff0c\u7edf\u8ba1\u5b8c\u4e86\u518d\u4e00\u4e00\u538b\u56de\u53bb\uff0c\u5b9e\u5728\u662f\u592a\u6162\uff01\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5728\u5f39\u6808\u7684\u65f6\u5019\u7d2f\u8ba1\uff0c\u6700\u540e\u4e00\u8d77\u538b\u56de\u53bb\u3002\u5177\u4f53\u662f\uff0c\u5f00\u4e00\u4e2a\u4e8c\u5143\u7ec4\uff0c\u7b2c\u4e00\u7ef4\u7edf\u8ba1\u8eab\u9ad8\uff0c\u7b2c\u4e8c\u7ef4\u7edf\u8ba1\u8fd9\u4e2a\u8eab\u9ad8\u7684\u4eba\u6570\uff0c\u8fd9\u6837\u5728\u6bcf\u6b21\u5f39\u6808\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u641e\u5f88\u591a\u4e2a\u4eba\uff0c\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff08\u53ef\u80fd\u53ea\u9488\u5bf9\u8fd93\u7ec4\u6545\u610f\u6784\u9020\u7684\u6570\u636e\uff09\u4f18\u5316\u4e86\u65f6\u95f4\u3002\n\n\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<stack>\n#include<cstdio>\nusing namespace std;\ntypedef pair<int,int>par;\ntypedef long long ll;\nll ans;\nint n;\nstack<par>s;\nint main()\n{\n\tscanf(\"%d\",&n);\n\twhile(n--)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tpar p=make_pair(x,1);\n\t\twhile (!s.empty()&&x>=s.top().first)\n\t\t{\n\t\t\tif (s.top().first==x)\n                p.second+=s.top().second;\n\t\t\tans+=s.top().second;\n\t\t\ts.pop();\n\t\t}\n\t\tif (!s.empty())\n            ans++;\n\t\ts.push(p);\n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1569838676,
        "uid": 175131,
        "name": "\u5085\u601d\u7ef4666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1823 \u3010[COI2007] Patrik \u97f3\u4e50\u4f1a\u7684\u7b49\u5f85\u3011"
    },
    {
        "content": "\u90fd\u662f\u5355\u8c03\u6808\uff0c\u90fd\u662f\u5355\u8c03\u6808\uff01\u5c31\u6ca1\u6709\u4eba\u60f3\u5230\u7528\u5806\u8fd9\u79cd\u50bb\u50bb\u7684\u6570\u636e\u7ed3\u6784\u53bb\u505a\u5417\uff1f\uff1f\uff1fqwq\n\n\u53ef\u80fd\u601d\u60f3\u548c\u5355\u8c03\u6808\u76f8\u8fd1\u5427\u3002\u3002\u3002\u53cd\u6b63\u6211\u4e0d\u77e5\u9053\u5355\u8c03\u6808\u662f\u4ec0\u4e48\u4e1c\u897f\n\n\u5177\u4f53\u5b9e\u73b0\u65b9\u6cd5\uff1a\u5c0f\u6839\u5806 + \u94fe\u8868\n\n### \uff08 Warning\uff1a\u4ee5\u4e0b\u5185\u5bb9\u5c06\u4f1a\u628a\u201c\u6570\u201d,\u201c\u8eab\u9ad8\u201d,\u201c\u4eba\u201d\u6df7\u4e3a\u4e00\u8c08\uff0c\u524d\u81ea\u884c\u7406\u89e3\uff09\n\n\u5bf9\u4e8e\u4e24\u4e2a\u4eba\uff1a\u4ed6\u4eec\u53ef\u4ee5\u770b\u5230\u5f7c\u6b64\uff0c\u5f53\u4e14\u4ec5\u5f53\u4e2d\u95f4\u7684\u4eba\u6ca1\u6709\u6bd4\u4ed6\u4eec\u9ad8\u7684\u4eba\u3002\u8fd9\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u4ece\u8fd9\u4e2a\u4eba\u5f00\u59cb\u5f80\u53f3\uff0c\u5f80\u5de6\u5bfb\u627e\uff0c\u5982\u679c\u6709\u6bd4\u4ed6\u5927\u7684\uff0c\u8bf4\u660e\u5b83\u4eec\u4e4b\u95f4\u4e00\u5b9a\u80fd\u770b\u5230\uff0c\u7ec4\u6570+1\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u4f9d\u6b21\u679a\u4e3e\u6bcf\u4e2a\u4eba\uff0c\u5982\u679c\u4ed6\u5de6\u8fb9\u6709\u4eba\u6bd4\u4ed6\u9ad8\uff0c\u7ec4\u6570+1\uff0c\u5982\u679c\u53f3\u8fb9\u6709\u4eba\u6bd4\u4ed6\u9ad8\uff0c\u7ec4\u6570+1\uff0c\u53ca\u65f6\u9000\u51fa\u5373\u53ef\n\n\u4f46\u662f\uff0c\u8fd9\u663e\u7136\u4e0d\u591f\uff0c\u8fd9\u6837\u5c31\u53d8O(n^2)\u4e86\uff0c\u8fd9\u5e76\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6570\uff0c\u6211\u4eec\u9700\u8981\u5feb\u901f\u68c0\u6d4b\u5b83\u7684\u53f3\u8fb9\u6216\u5de6\u8fb9\u662f\u5426\u6709\u6bd4\u5b83\u5927\u7684\u6570\uff01\n\n\u8fd9\u5f88\u597d\u529e\uff01\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u94fe\u8868\u548c\u4e00\u4e2a\u5c0f\u6839\u5806\u6765\u89e3\u51b3\u5b83\uff1a\u7531\u4e8e\u6211\u4eec\u4ece\u5c0f\u7684\u6570\u5f00\u59cb\u53d6\uff0c\u56e0\u6b64\u6211\u4eec\u4e4b\u524d\u68c0\u7d22\u8fc7\u7684\u6570\uff0c\u90fd\u6bd4\u5f53\u524d\u68c0\u7d22\u7684\u6570\u5c0f\uff0c\u6240\u4ee5\u68c0\u7d22\u5b8c\u4e00\u4e2a\u6570\u540e\uff0c\u6211\u4eec\u5c31\u628a\u4ed6\u4ece\u94fe\u8868\u4e2d\u5220\u53bb\u5373\u53ef\uff0c\u5982\u679c\u4ed6\u5de6\u8fb9\u6216\u53f3\u8fb9\u6ca1\u6709\u6570\u4e86\uff0c\u7ec4\u6570\u5c31\u4e0d\u518d+1\uff0c\u8fd9\u4e2a\u5b9e\u73b0\uff0c\u601d\u8def\u90fd\u5e94\u8be5\u8f83\u4e3a\u7b80\u5355\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u6ca1\u95ee\u9898\uff0c\u4f46\u662f\u8fd9\u6837\u5c31\u8fde\u6837\u4f8b\u4e5f\u8fc7\u4e0d\u4e86\n\n\u8fd9\u662f\u56e0\u4e3a\uff1a\u6211\u4eec\u6ca1\u6709\u8003\u8651\u5230\u4e24\u4e2a\u6570\u76f8\u7b49\u7684\u60c5\u51b5\uff0c\u5982\uff1a\n\n4 2 1 2 5\n\n\u6211\u4eec\u4f1a\u5206\u522b\u68c0\u7d22a[2]\uff0ca[3]\uff0c\u800c\u7ec4\u6570+4\u800c\u4e0d\u662f+5\u3002\u5176\u5b9ea[2],a[5]\u53ef\u4ee5\u770b\u5230\u5f7c\u6b64\uff0c\u4f46\u6211\u4eec\u5e76\u6ca1\u6709\u628a\u5b83\u4eec\u7edf\u8ba1\u8d77\u6765\uff0c\u56e0\u4e3a\u6211\u4eec\u9ed8\u8ba42\u7684\u5de6\u8fb9\u6216\u53f3\u8fb9\u81f3\u591a\u6709\u4e00\u4e2a\u4eba\u53ef\u4ee5\u770b\u5230\u4ed6\uff0c\u5982\u679c\u8fd9\u6837\uff0c\u6570\u5217\u4e2d\u5c31\u4e0d\u4f1a\u6709\u76f8\u7b49\u7684\u6570\u4e86\n\n\u5176\u5b9e\u8fd9\u4e2a\u95ee\u9898\u4e5f\u5f88\u5bb9\u6613\u5c31\u80fd\u89e3\u51b3\uff1a\u4e24\u4e2a\u8eab\u9ad8\u76f8\u7b49\u7684\u4eba\u80fd\u770b\u5230\u5f7c\u6b64\uff0c\u8bf4\u660e\u4ed6\u4eec\u5728\u76ee\u524d\u7684\u94fe\u8868\u4e2d\u662f\u76f8\u90bb\u7684\uff0c\u5982\u679c\u4e0d\u76f8\u90bb\uff0c\u5c31\u610f\u5473\u8fd9\u4ed6\u4eec\u4e2d\u95f4\u6709\u6bd4\u4ed6\u4eec\u9ad8\u7684\u4eba\uff0c\u6240\u4ee5\u624d\u770b\u4e0d\u5230\u3002\n\n\u8fd9\u5c31\u597d\u4e86\uff0c\u6bcf\u6b21\u6211\u4eec\u53d6\u6570\u65f6\uff0c\u5728\u53d6\u6700\u5c0f\u7684\u6570\u7684\u524d\u63d0\u4e0b\uff0c\u628a\u76f8\u90bb\u7684\u6570\u5168\u90e8\u53d6\u5b8c\u5373\u53ef\uff0c\u82e5\u53d6\u4e86n\u4e2a\uff0c\u5bb9\u6613\u77e5\u9053\uff0c\u4ea7\u751f\u7ec4\u6570\u5c31\u662f(n-1) * n/2 \u3002\u5f53\u7136\uff0c\u5982\u679c\u8fd9\u4e9b\u6570\u7684\u5de6\u8fb9\u4e0d\u4e3a\u7a7a\uff0c\u8bf4\u660e\u8fd9\u4e9b\u4eba\u7684\u5de6\u8fb9\u4e00\u5b9a\u6709\u6bd4\u4ed6\u4eec\u9ad8\u7684\uff0c\u8fd9\u6837\u53c8\u4f1a\u4ea7\u751fn\u7ec4\u80fd\u591f\u4e92\u76f8\u770b\u5230\u7684\u4eba\u4e86\uff0c\u53f3\u8fb9\u4e5f\u662f\u4e00\u6837\u7684\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u5199\u4e86\uff1a\n\n```cpp\n#include <bits/stdc++.h>//\u6211\u4e0d\u559c\u6b22\u538b\u884c\n\nusing namespace std;\n\npriority_queue < pair < int , int >  > q;\nint n[550000],i,j,m,xx,hc;\nlong long ans;\nint beginn;\n\nstruct list{\n\tint l,r;\n}a[550000];\n\nint main(){\n\tscanf(\"%d\",&m);\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d\",&n[i]);\n\t\tq.push(make_pair(-n[i],-i));//\u8fd9\u91cc\u628a\u4e0b\u6807\u53d6\u53cd\uff0c\u5c31\u80fd\u4fdd\u8bc1\u8eab\u9ad8\u4e00\u6837\u65f6\uff0c\u4e0b\u6807\u662f\u4ece\u5c0f\u5230\u5927\u5f00\u59cb\u53d6\u7684\uff0c\u5bf9\u4e8e\u94fe\u8868\uff0c\u5c31\u80fd\u4fdd\u8bc1\u4ed6\u662f\u4ece\u5de6\u5230\u53f3\u53d6\u800c\u975e\u4ece\u53f3\u5230\u5de6\u53d6\n\t\ta[i].l=i-1;//\u94fe\u8868\u521d\u59cb\u5316\n\t\ta[i].r=i+1;\n\t}\n\twhile(!q.empty())\n\t{\n\t\txx=-q.top().second;\n\n\t\tq.pop();\n\t\ta[a[xx].r].l=a[xx].l;//\u5220\u6570\n\t\ta[a[xx].l].r=a[xx].r;//\u5220\u6570\n\n\t\tif(n[xx]==n[a[xx].r])//\u4e00\u6b21\u6027\u53d6\u5b8c\u6240\u6709\u76f8\u540c\u7684\u6570\n\t\t{\n\t\t\tbeginn=xx;\n\t\t\thc=0;\n\t\t\twhile(n[xx]==n[a[xx].r]&&(!q.empty()))\n\t\t\t{\n\t\t\t\thc++;\n\t\t\t\tans+=hc;//\u539f\u6765\u53d6\u4e86n\u4e2a\u6570\uff0c\u6bcf\u591a\u53d61\u4e2a\uff0c\u5c31\u4f1a\u65b0\u4ea7\u751fn\u4e2a\u7ec4\u6570\uff0c\u540c\u65f6n++;\n\t\t\t\txx=-q.top().second;\n\t\t\t\tq.pop();\n\n\t\t\t\ta[a[xx].r].l=a[xx].l;//\u5220\u6570\n\t\t\t\ta[a[xx].l].r=a[xx].r;//\u5220\u6570\n\t\t\t}\n\t\t\tif(a[beginn].l!=0)//\u5982\u679c\u5de6\u8fb9\u6709\u6bd4\u4ed6\u4eec\u9ad8\u7684\uff0c\u52a0\u4e0a\n\t\t\tans+=hc+1;\n\t\t\tif(a[xx].r!=m+1)//\u5982\u679c\u53f3\u8fb9\u6709\u6bd4\u4ed6\u4eec\u9ad8\u7684\uff0c\u52a0\u4e0a\n\t\t\tans+=hc+1;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif(a[xx].l!=0)//\u5de6\u8fb9\u6709\u6bd4\u4ed6\u9ad8\u7684\uff0c\u52a0\u4e0a\n\t\tans++;\n\t\tif(a[xx].r!=m+1)//\u53f3\u8fb9\u6709\u6bd4\u4ed6\u9ad8\u7684\uff0c\u52a0\u4e0a\n\t\tans++;\n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n\n\u7ba1\u7406\u5458\u5927\u5927\u7ed9\u8fc7qwq",
        "postTime": 1556021244,
        "uid": 55357,
        "name": "Thaumaturge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1823 \u3010[COI2007] Patrik \u97f3\u4e50\u4f1a\u7684\u7b49\u5f85\u3011"
    },
    {
        "content": "## **STL Upper_bound Lower_bound\u5927\u6cd5\u597d\uff01**\n### \u56de\u5230\u672c\u9898\uff0c\u7531\u4e8e\u8981\u4e00\u5bf9\u4eba\u80fd\u591f\u4e92\u76f8\u770b\u89c1\uff0c\u5fc5\u987b\u4fdd\u8bc1\u4e24\u8005\u4e4b\u95f4\u6ca1\u6709\u4e00\u4e2a\u9ad8\u7684\u4eba\u963b\u6321\u4e86\u5176\u4e2d\u7684\u4e00\u4e2a\u4eba\u624d\u80fd\u591f\u76f8\u4e92\u770b\u89c1\uff0c\u52a0\u4e0a\u662f\u4e00\u6761\u961f\u4f0d\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5355\u8c03\u6808\uff0c\u4fdd\u8bc1\u6808\u4e2d\u5355\u8c03\u9012\u51cf\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u8f7b\u6613\u5224\u65ad\u6709\u51e0\u5bf9\u4eba\u53ef\u4ee5\u76f8\u4e92\u770b\u89c1\uff08\u53ea\u8981\u770b\u6808\u9876\u662f\u4e0d\u662f\u5c0f\u4e8e\u7b49\u4e8e\u4ed6\u4e0d\u5c31\u884c\u4e86\uff0c\u8fd8\u6709\u7b2c\u4e00\u4e2a\u6bd4\u4ed6\u9ad8\u7684\u4e5f\u53ef\u4ee5\u770b\u89c1\uff09\u3002\n\n\u60f3\u5230\u8fd9\u91cc\uff0c\u6697\u7b11\uff0c\u90a3\u4e0d\u662f\u5904\u7406\u8d77\u6765\u5f88\u7b80\u5355\uff0c\u4e00\u4e2a\u4e00\u4e2a\u70b9\u4eba\u5934\u597d\u4e86\u3002\n\n\u7136\u800c~~\u6bd2\u7624\u7684\u7ba1\u7406\u5458~~\u52a0\u5f3a\u4e86\u8fd9\u9898\u7684\u6570\u636e(\u8fd8\u5220\u4e86\u91cd\u98984333)\u3002\u6240\u4ee5\u5f53\u4e00\u6761\u961f\u4f0d\u6bcf\u4e2a\u4eba\u7684\u8eab\u9ad8\u90fd\u76f8\u7b49\u7684\u65f6\u5019\uff0c\u4e00\u4e2a\u4e00\u4e2a\u70b9\u7684\u6734\u7d20\u7b97\u6cd5\u4f1a\u88ab\u5361\u6210O(n*n)\uff0c\u6211\u4eec\u7684\u76ee\u7684\u662f\u5728\u5355\u8c03\u6808\u4e2d\u627e\u5230\u7b2c\u4e00\u4e2a\u6bd4\u4ed6\u9ad8\u7684\uff0c\u5e76\u4e14\u7ef4\u62a4\u5355\u8c03\u6808\u7684\u6027\u8d28\uff0c\u90a3\u4e48\u8003\u8651\u4e8c\u5206\u627e\u5230\u7b2c\u4e00\u4e2a\u6bd4\u4ed6\u9ad8\u7684\uff0c\u518d\u4e8c\u5206\u7b2c\u4e00\u4e2a\u6bd4\u4ed6\u5c0f\u7684\uff0c\u8fd9\u6837\u5c31\u6210\u529f\u7684\u628a\u590d\u6742\u5ea6\u63a7\u5236\u5728\u4e86O(nlgn)\u8fd8\u662f\u80fd\u8fc7\u7684\u3002\n\n\u7136\u800c\u672c\u849f\u84bb\u771f\u7684\u662f\u592a\u83dc\u4e86\u2026\u2026\u5bfc\u81f4\u5199\u4e0d\u597d\u4e8c\u5206\u7684\u8fb9\u754c\u5904\u7406?\n\n\u62ff\u8d77\u6211\u4eec\u4f1f\u5927\u7684\u6b66\u5668upper_bound \u548c lower_bound(\u867d\u7136\u7ecf\u5e38\u88ab\u5361\uff0c\u4f46\u662f\u505a\u9898\u7684\u65f6\u5019\u7528O2\u4f18\u5316\u4e00\u4e0b\u95ee\u9898\u4e0d\u7b97\u5f88\u5927)\n\n```\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nlong long n,stack[500500],s,top,height;\nint main(){\n    cin>>n;\n    cin>>height;\n    stack[++top]=height;\n    for(int i=1;i<n;i++){\n        cin>>height;\n        if(height<stack[top])s++,stack[++top]=height;\n        else{\n            int pos=lower_bound(stack+1, stack+1+top, height,greater<int>())-stack;//\u6700\u7ec8\u653e\u5f03\u624b\u5199\u4e8c\u5206,\u6700\u540e\u51cf\u53bb\u5934\u6307\u9488\u7684\u8bdd\u8fd4\u56de\u503c\u5c31\u4e0d\u662f\u8fed\u4ee3\u5668\u800c\u662f\u4e24\u4e2a\u8fed\u4ee3\u5668\u7684\u5730\u5740\u7684\u5dee\u503c,\u4e5f\u5c31\u662f\u6570\u7ec4\u4e0b\u6807,\u8fd9\u6837\u627e\u5230\u4e86\u7b2c\u4e00\u4e2a\u5c0f\u4e8e/\u7b49\u4e8e\u4ed6\u7684\u5728\u6808\u4e2d\u7684\u6570,\u6240\u4ee5\u7b2c\u4e00\u4e2a\u6bd4\u4ed6\u5927\u7684\u6570\u5e94\u8be5\u5c31\u662f\u8fd9\u4e2a\u6570\u518d\u5f80\u524d\u4e00\u4e2a\n            if(pos>1)//\u7531\u4e8e\u5f53\u5728\u6808\u5e95\u65f6\u524d\u9762\u6ca1\u6709\u4e86,\u6240\u4ee5\u4e0d\u7528\u5f80\u524d\n                pos--;\n            s+=top-pos+1;//top\u5230pos\u7684\u4eba\u8fd9\u4e2a\u65b0\u6765\u7684\u90fd\u53ef\u4ee5\u770b\u5230\n            top=upper_bound(stack+1, stack+1+top, height, greater<int>())-stack;//\u627e\u5230\u7b2c\u4e00\u4e2a\u6bd4\u4ed6\u77ee\u7684\u4eba,\u628a\u6bd4\u4ed6\u77ee\u7684\u4eba\u90fd\u6321\u4f4f\u4e86\u6240\u4ee5\u76f4\u63a5\u5c31\u53ef\u4ee5\u51fa\u6808\n            stack[top]=height;\n        }\n    }\n    cout<<s;\n    return 0;\n}\n\n```",
        "postTime": 1533479930,
        "uid": 100514,
        "name": "\u5c0f\u9ed1AWM",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1823 \u3010[COI2007] Patrik \u97f3\u4e50\u4f1a\u7684\u7b49\u5f85\u3011"
    },
    {
        "content": "\u6211\u5e76\u6ca1\u6709\u7528\u5355\u8c03\u6808\uff0c\u4f46\u601d\u60f3\u8ddf\u5355\u8c03\u6808\u8fd1\u4f3c\n\n\u7ef4\u62a4nxt[i]\u8868\u793ai\u4e4b\u540e\u6700\u8fd1\u7684\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8eh[i]\u7684\u4eba\n\n\u90a3\u4e48\u5bf9\u4e8e\u70b9i\uff0c\u53ea\u8981\u4e0d\u505c\u5730\u5411\u540e\u627e\u5b83\u7684nxt\u76f4\u5230h[nxt[j]]>h[i]\u5c31\u53ef\u4ee5\u4e86\n\n\u5177\u4f53\u5b9e\u73b0\u89c1\u4ee3\u7801\uff08\u8fd8\u662f\u6709\u4e9b\u7ec6\u8282\u8981\u6ce8\u610f\u7684\uff09\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#define N 500010\nusing namespace std;\nint a[N],nxt[N],n,ans=0;\nint main()\n{\n    int i,j;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n    for(i=1;i<n;i++) nxt[i]=i+1; nxt[n]=0;\n    for(i=n;i>=1;i--)\n    {\n        for(j=nxt[i];j;j=nxt[j])\n        {\n            if(a[j]<a[i]) ans++; \n            else break;\n        }\n        nxt[i]=j;\n        while(a[j]==a[i]) {ans++; j=nxt[j];}//\u7531\u4e8e\u76f8\u7b49\u7684\u4e5f\u6ee1\u8db3\u6761\u4ef6\uff0c\u4f46\u56e0\u4e3a\u7ef4\u62a4nxt\u7684\u6027\u8d28\u6240\u4ee5\u5728\u8fd9\u5904\u7406\n        if(j) ans++;//\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7684\u4e5f\u53ef\u4ee5(\u81ea\u5df1\u8111\u8865\u4e00\u4e0b\u5c31\u77e5\u9053\u4e86)\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1496447923,
        "uid": 19390,
        "name": "functionendless",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1823 \u3010\u97f3\u4e50\u4f1a\u7684\u7b49\u5f85\u3011"
    },
    {
        "content": "\u770b\u4e86\u9898\u89e3\uff0c\u53d1\u73b0\u5927\u4f6c\u4eec\u5927\u591a\u7528\u4e86\u5355\u8c03\u6808+pair\u7ef4\u62a4\u6216\u5355\u8c03\u6808+\u4e8c\u5206\u67e5\u627e\u7684\u65b9\u5f0f\uff0c\u4f46\u662f\uff0c\u6b64\u9898\u53ef\u4ee5\u7528\n## \u4e24\u4e2a\u5355\u8c03\u6808\n\u6765\u6c42\u89e3\u3002\n\n------------\n\n\u9996\u5148\uff0c\u8bfb\u5b8c\u9898\uff0c\u6211\u4eec\u53d1\u73b0\u6b64\u9898\u8981\u627e\u4e00\u4e2a\u4eba\u5de6\u53f3\u4e24\u8fb9\u7b2c\u4e00\u4e2a\u6bd4\u4ed6\u5927\u7684\u6570\uff0c\u90a3\u4e48\u81ea\u7136\u60f3\u5230\u5355\u8c03\u6808\u3002\u7b2c\u4e00\u6b21\u6211\u53ea\u7ef4\u62a4\u4e86\u4e00\u4e2a\u5355\u8c03\u6808\uff0c\u7ed3\u679c\u6837\u4f8b\u90fd\u8fc7\u4e0d\u4e86\u3002\u8003\u8651\u5230\u9898\u76ee\u8bf4\u7684\u662f\u7684\u5de6\u53f3\u4e24\u8fb9\uff0c\u6211\u5c31\u53c8\u52a0\u4e86\u4e00\u4e2a\u5355\u8c03\u6808\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5355\u8c03\u6808\uff0c\u5206\u522b\u4ece\u6570\u636e\u7684\u5de6\u53f3\u4e24\u8fb9\u5f00\u59cb\u5904\u7406\uff0c\u5bf9\u5e94\u8ba1\u7b97\u7684\u5206\u522b\u662f\u6bcf\u4e00\u4e2a\u4eba\u53ef\u4ee5\u770b\u5230\u4ed6\u5de6\u8fb9\u7684\u51e0\u4e2a\u4eba\u7684\u548c\u4ed6\u53ef\u4ee5\u770b\u5230\u4ed6\u53f3\u8fb9\u7684\u51e0\u4e2a\u4eba\uff0c\u671f\u95f4\u7ef4\u62a4\u5176\u5355\u8c03\u9012\u589e\u3002\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u5355\u4f4d\u4f1a\u88ab\u7b2c\u4e00\u4e2a\u6bd4\u4ed6\u9ad8\u7684\u90a3\u4e2a\u4eba\u6321\u4f4f\u89c6\u7ebf\uff0c\u6240\u4ee5\u6bcf\u5f53\u6709\u4e00\u4e2a\u4eba\u88ab\u4ece\u6808\u91cc\u5f39\u51fa\uff0c\u4ed6\u5c31\u4f1a\u88ab\u5f53\u524d\u8fd9\u4e2a\u4eba\u6321\u4f4f\u89c6\u7ebf\uff0c\u4e5f\u5c31\u662f\u770b\u4e0d\u5230\u540e\u9762\u7684\u4eba\u4e86\u3002\u5982\u679c\u6709\u4eba\u88ab\u4ece\u6808\u91cc\u5f39\u51fa\uff0c\u5c31\u628a\u7b54\u6848\u7d2f\u52a01\u3002\n\n\u7136\u800c\u6211\u4eec\u8fd8\u662f\u8fc7\u4e0d\u4e86\u6837\u4f8b\u3002\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u8ba1\u7b97\u9ad8\u5ea6\u76f8\u540c\u7684\u60c5\u51b5\u3002\u4f46\u662f\u6211\u4eec\u53c8\u4e0d\u80fd\u5f39\u51fa\u4e0e\u5f53\u524d\u8fd9\u4e2a\u4eba\u9ad8\u5ea6\u76f8\u540c\u7684\u4eba\uff0c\u56e0\u4e3a\u4ed6\u5e76\u4e0d\u4f1a\u88ab\u5f53\u524d\u8fd9\u4e2a\u4eba\u906e\u6321\uff0c\u90a3\u600e\u4e48\u529e\u5462\uff1f\u8fd9\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7d2f\u52a0\u7b54\u6848\u5c31\u53ef\u4ee5\u4e86\uff0c\u56e0\u4e3a\u9ad8\u5ea6\u76f8\u540c\u7684\u4e0d\u4f1a\u76f8\u4e92\u906e\u6321\uff0c\u800c\u9700\u8981\u7d2f\u52a0\u7684\u5219\u662f\u4e4b\u524d\u8ddf\u8fd9\u4e2a\u4eba\u9ad8\u5ea6\u76f8\u540c\u7684\u4eba\u7684\u603b\u6570\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5AC\u6b64\u9898\u4e86\u3002\n\n\u56e0\u4e3a\u5143\u7d20\u4e0d\u4f1a\u91cd\u590d\u5165\u6808\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n)\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\u4e3a\u4e86\u907f\u514d\u91cd\u590d\u7d2f\u52a0\uff0c\u7d2f\u52a0\u64cd\u4f5c\u53ea\u5728\u4e00\u4e2a\u6808\u4e2d\u6267\u884c\u4e00\u6b21\u3002\n\n\u6700\u540e\uff0c\u62ac\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<stack>//\u4e2a\u4eba\u559c\u6b22STL\nusing namespace std;\n\ninline long long read() {\n\tlong long f=1,x=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9') {if(ch=='-') f=-f;ch=getchar();}\n\twhile('0'<=ch&&ch<='9') x=(x<<3)+(x<<1)+ch-'0',ch=getchar();\n\treturn x*f;\n}\n\ninline void write(long long x) {\n\tif(x<0) x=-x,putchar('-');\n\tif(x>9) write(x/10);\n\tputchar(x%10+'0');\n}\n\nlong long n,h[500005],ans,c[500005];\n\nvoid left_maxx() {\n\tstack<int> s;\n\tfor(int i=1;i<=n;i++) {\n\t\twhile(!s.empty()&&h[s.top()]<h[i]) s.pop(),ans++;\n\t\tif(!s.empty()&&h[s.top()]==h[i]) c[i]+=c[s.top()]+1,ans+=c[i];//\u4e3a\u4e86\u907f\u514d\u56de\u6eaf\u67e5\u627e\uff0c\u6d6a\u8d39\u65f6\u95f4\uff0c\u53ef\u4ee5\u76f4\u63a5\u8bb0\u4e00\u4e0b\u6570\uff0c\u7d2f\u52a0\u7684\u65f6\u5019\u628a\u4e0a\u4e00\u4e2a\u4eba\u7d2f\u52a0\u7684\u6570\u7b97\u4e0a\uff0c\u518d\u52a01\u5c31\u884c\u3002\n\t\ts.push(i);\n\t}\n}\n\nvoid right_maxx() {\n\tstack<int> s;\n\tfor(int i=n;i>=1;i--) {\n\t\twhile(!s.empty()&&h[s.top()]<h[i]) s.pop(),ans++;\n\t\ts.push(i);\n\t}\n}\n\nint main() {\n\tn=read();\n\tfor(int i=1;i<=n;i++) h[i]=read();\n\tleft_maxx();\n\tright_maxx();\n\twrite(ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1573645111,
        "uid": 91736,
        "name": "RPChe_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1823 \u3010[COI2007] Patrik \u97f3\u4e50\u4f1a\u7684\u7b49\u5f85\u3011"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](https://www.luogu.org/problem/P1823)\u770b\u9898\u76ee\u3002\n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5c31\u662f\u4e00\u9053\u5355\u8c03\u6808\u7684\u9898\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6211\u4eec\u53ea\u8003\u8651\u4e00\u4e2a\u4eba\u4f5c\u4e3a\u4e00\u5bf9\u4eba\u7684\u53f3\u8fb9\u90a3\u4e2a\u7684\u60c5\u51b5\u3002\u4ece\u5de6\u5230\u53f3\u626b\u63cf\u8fd9\u4e9b\u4eba\uff0c\u5e76\u4e14\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u9012\u51cf\u7684\u6808\u3002\u5f53\u626b\u63cf\u5230\u7b2c$i$\u4e2a\u4eba\u7684\u65f6\u5019\uff0c\u6211\u4eec\u628a\u5355\u8c03\u6808\u4e2d\u6240\u6709\u6bd4\u4ed6\u77ee\u7684\u4eba\u90fd\u5f39\u6389\uff1b\u6839\u636e\u5355\u8c03\u6808\u7684\u6027\u8d28\uff0c\u6211\u4eec\u77e5\u9053\u8fd9\u4e9b\u4eba\u548c\u7b2c$i$\u4e2a\u4eba\u90fd\u53ef\u4ee5\u4e92\u76f8\u770b\u5230\uff0c\u6240\u4ee5\u6211\u4eec\u5f39\u51e0\u6b21\u7b54\u6848\u5c31\u52a0\u51e0\u6b21\u3002\u5f53\u6808\u9876\u7684\u4eba\u6bd4\u4ed6\u9ad8\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u628a\u5f53\u524d\u7684\u4eba\u585e\u5230\u6808\u91cc\u9762\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6211\u4eec\u8fd8\u7528\u4e00\u4e2a$cnt$\u6570\u7ec4\u6765\u7ef4\u62a4\u6808\u91cc\u7684\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u8eab\u9ad8\u76f8\u540c\u7684\u4eba\u7684\u6570\u91cf\u3002\u5982\u679c\u6808\u9876\u7684\u4eba\u548c\u7b2c$i$\u4e2a\u4eba\u4e00\u6837\u9ad8\uff0c\u6839\u636e\u9898\u610f\uff0c\u6808\u91cc\u8ddf$i$\u4e00\u6837\u9ad8\u7684\u4eba\u90fd\u53ef\u4ee5\u770b\u5230$i$\uff1b\u53e6\u5916\uff0c\u8fd9\u4e00\u6392\u8eab\u9ad8\u76f8\u540c\u7684\u4eba\u540e\u9762\u7684\u90a3\u4f4d\uff08\u662f\u4e00\u4e2a\u4eba\uff09\u4e5f\u53ef\u4ee5\u770b\u5230$i$\u3002\u7136\u540e$cnt$\u7684\u5bf9\u5e94\u4f4d\u7f6e\u9700\u8981\u589e\u52a0\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6309\u6b64\u6a21\u62df\u5373\u53ef\u3002\n# \u4ee3\u7801\n```cpp\n#include <cstdio>\n\ntypedef long long LL;\n\nconst int MAXN = 500005;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0;char s = getchar();int f = 1;\n\twhile( s > '9' || s < '0' ){if( s == '-' ) f = -1; s = getchar();}\n\twhile( s >= '0' && s <= '9' ){x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar();}\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ){ putchar( '-' ); x = ( ~ x ) + 1; }\n\tif( 9 < x ){ write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\nint sta[MAXN], top;\nint h[MAXN], cnt[MAXN];\nint N;\n\nint main()\n{\n\tread( N );\n\tfor( int i = 1 ; i <= N ; i ++ ) read( h[i] );\n\tLL res = 0;\n\ttop = 0;\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t{\n\t\twhile( top && h[sta[top]] < h[i] )\n\t\t\tres += cnt[top], cnt[top] = 0, top --;\n\t\tif( h[sta[top]] == h[i] )\n\t\t{\n\t\t\tres += cnt[top];\n\t\t\tif( top - 1 ) res ++;\n\t\t\tcnt[top] ++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif( top ) res ++;\n\t\t\tsta[++top] = i, cnt[top] = 1;\n\t\t}\n\t}\n\twrite( res ), putchar( '\\n' );\n\treturn 0;\n}\n```",
        "postTime": 1566712456,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[LG P1823][COI2007] Patrik \u97f3\u4e50\u4f1a\u7684\u7b49\u5f85"
    },
    {
        "content": "\u8fd9\u9898\u662f\u5f88\u7ecf\u5178\u7684\u5355\u8c03\u6808\u554a\u3002\n\n\u6570\u636e\u662f500000\uff0cnlogn\u4e5f\u80fd\u8fc7\uff08\u597d\u50cf\u524d\u9762\u7684\u9898\u89e3\u90fd\u662fnlogn\u7684\uff09\uff0c\u5176\u5b9e\u6570\u636e\u8fd8\u80fd\u518d\u52a0\u5f3a\u70b9\uff0c\u8fd9\u6837\u5c31\u53ea\u80fdo(n)\u7684\u5355\u8c03\u6808\u8fc7\u4e86\u3002\uff08\u4eb2\u6d4b\u65f6\u95f4\u4e3anlogn\u76841/5\uff09\n\n------------\n\u8fdb\u5165\u6b63\u9898\n\n## \u9898\u76ee\u5927\u610f\uff1a\n\n  \u6c42\u51fa\u7ec4\u5408A,B\uff0c\uff08**A\uff0cB\u76f4\u63a5\u4e0d\u5b58\u5728\u4e25\u683c\u5927\u4e8eA\u6216B**\uff09\u6709\u591a\u5c11\u7ec4\u3002\n  \n------------\n## 1.\u66b4\u529b\uff1a\n  \u597d\u7684\u65b9\u6cd5\u90fd\u662f\u5efa\u7acb\u5728\u66b4\u529b\u7684\u57fa\u7840\u4e0a\u7684\uff0c\u53ea\u6709\u60f3\u901a\u4e86\u66b4\u529b\u624d\u6709\u53ef\u80fd\u5f97\u51fa\u6b63\u89e3\u3002\u66b4\u529b\u8fd8\u662f\u6bd4\u8f83\u597d\u60f3\u7684\uff0cN\u65b9\u679a\u4e3e\u6bcf\u4e2a\u4eba\uff0c\u770b\u770b\u4ed6\u4eec\u4e4b\u95f4\u6709\u6ca1\u6709\u6bd4\u4ed6\u4eec\u5927\u7684\u5c31\u597d\u4e86\u3002\n  \n## 2.\u5355\u8c03\u6808 \uff08O\uff08n\uff09\uff09\n\n  \u4e3e\u4e2a\u4f8b\u5b50\uff1a1 2 3\n  \n  \u770b\u770b\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u53d1\u73b0\u5f53\u679a\u4e3ei\uff081\uff09\u65f6\uff0c\u53ea\u6709\u540e\u9762\uff082\uff09\u6709\u6bd4\u4ed6\u5927\u7684\uff0c\u518d\u540e\u9762\uff083\uff09\u7684\u4ed6\u5c31\u770b\u4e0d\u5230\u4e86\u3002\u8fd9\u5c31\u8ba9\u6211\u4eec\u60f3\u5230\u4e86\u5355\u8c03\u6808\uff0c**\u53ea\u8981\u4e00\u4e2a\u5143\u7d20\u51fa\u6808\u4e86\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u5c31\u6ca1\u4ed6\u4ec0\u4e48\u4e8b\u4e86**\uff08\u8fd9\u4e5f\u662f\u5355\u8c03\u6808\u65f6\u95f4\u590d\u6742\u5ea6O(n)\u7684\u539f\u56e0\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5143\u7d20\u53ea\u4f1a\u5165\u6808\u4e00\u6b21\uff0c\u51fa\u6808\u4e00\u6b21\uff09\u3002\n  \n  \u5177\u4f53\u5355\u8c03\u6808\u7684\u64cd\u4f5c\uff0c\u5176\u4ed6\u7684\u9898\u89e3\u5df2\u7ecf\u8bb2\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u6211\u5c31\u6765\u8bb2\u8bb2\u600e\u4e48\u628a\u90a3\u5c42\u591a\u4f59\u7684\u4e8c\u5206\u67e5\u627e\uff08logn\uff09\u7ed9\u53bb\u6389.\n  \n  \u56e0\u4e3a\u5355\u8c03\u6808\u662f\u4fdd\u6301\u5355\u8c03\u7684\uff0c\u8d8a\u9760\u8fd1\u6808\u9876\u7684\u503c\u8d8a\u5c0f\uff0c\u6240\u6709\u4e3a\u4e86\u4fdd\u6301\u5355\u8c03\u6027\u6bcf\u679a\u4e3e\u5230\u7684\u503c\u5c31\u5f80\u4e0b\u538b\uff0c\u5bf9\u6bd4\u548c\u6808\u9876\u90a3\u4e2a\u5927\uff0c\u5982\u679c\u5927\u4e8e\u6808\u9876\uff0ctop\uff08\u6808\u7684\u9ad8\u5ea6\uff09\u51cf1\u3002\u5f53\u4e0d\u80fd\u518d\u5f80\u4e0b\u538b\u65f6\uff0c\u5982\u679c\u6808\u5185\u8fd8\u6709\u5143\u7d20\uff0c\u8bf4\u660e\u8fd9\u4e24\u4e2a\u4eba\u662f\u53ef\u4ee5\u770b\u5230\u7684\uff08\u4e2d\u95f4\u4e0d\u5b58\u5728\u5927\u4e8e\u4ed6\u4eec\u7684\u5143\u7d20\u4e86\uff09\uff0cans++\u3002\n  \n  \u8fd9\u91cc\u6709\u4e2a\u4f18\u5316\uff0c\u5f53\u8be5\u5143\u7d20\u7b49\u4e8e\u6808\u9876\u5143\u7d20\u65f6\uff0c\u5c31\u628a\u6808\u9876\u5143\u7d20\u7684\u79ef\u7d2f\u6b21\u6570+1\uff0c\u4e0d\u7528\u518d\u7ad9\u4e00\u4f4d\u4e86\u3002\n  \n  \u8fd8\u6709\u4e00\u4e2a\u5751\u70b9\uff0c\u8fd9\u9898\u8981\u5f00**long long**\n  \n  \u5177\u4f53\u770b\u4ee3\u7801\u4f53\u4f1a\u5427\uff1a\n  \n  ```\n#include<bits/stdc++.h>\n#define ll long long\n#define maxn 10000005\nusing namespace std;\nll n,a[maxn],top,x,ans;\nstruct lc{\n\tll x,tot;\n}Q[maxn];\ninline ll read(){\n\tll ret=0,f=1;char ch=getchar();\n\twhile (ch<'0'||ch>'9'){if (ch=='-') f=-f;ch=getchar();}\n\twhile (ch<='9'&&ch>='0') ret=ret*10+ch-'0',ch=getchar();\n\treturn ret*f;\n}\nint main(){\n\tn=read();\n\tfor (int i=1;i<=n;i++) a[i]=read();\n\tfor (int i=1;i<=n;i++){\n\t\twhile (top&&a[i]>a[Q[top].x]) ans+=Q[top].tot,top--;\n\t\tif (a[i]==a[Q[top].x]){\n\t\t\tans+=Q[top].tot;Q[top].tot++;\n\t\t\tif (top>1) ans++;\n\t\t    continue;\n\t\t}\n\t\tif (top) ans++;\n\t\tQ[++top].x=i,Q[top].tot=1;\n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1564215199,
        "uid": 108047,
        "name": "LlLlCc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1823 \u3010[COI2007] Patrik \u97f3\u4e50\u4f1a\u7684\u7b49\u5f85\u3011"
    },
    {
        "content": "\u8003\u8651$A$\u600e\u4e48\u770b\u5230\u5de6\u8fb9\u7684\u4eba:\n1. $A$\u4e00\u5b9a\u80fd\u4e92\u76f8\u770b\u5230\u5de6\u8fb9\u7b2c\u4e00\u4e2a\u6bd4\u4ed6\u9ad8\u7684\u4eba\u3002 \n2. $A$\u53ef\u4ee5\u770b\u5230\u5de6\u8fb9\u5355\u8c03\u9012\u51cf\u533a\u95f4\u7684\u4eba\u3002\n\n\u8fd9\u4e2a\u4e1c\u897f\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u9012\u51cf\u7684\u5355\u8c03\u6808\u5c31\u597d\u4e86\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u76f8\u540c\u9ad8\u5ea6\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u7f29\u70b9\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\u8bb0\u5f55\u5757\u4e2d\u7684$size$\u3002\n\n\u53ea\u6709$A$\u8fd9\u4e2a\u5757\u4e2d\u6700\u5de6\u8fb9\u7684\u4eba\u80fd\u5411\u5de6\u4e00\u89c8\u65e0\u4f59\u5355\u8c03\u9012\u51cf\u533a\u95f4\u3002\u800c\u9047\u5230\u6bd4\u4ed6\u9ad8\u7684\u4eba$A$\u6574\u5757\u90fd\u4f1a\u770b\u5230\u3002\n\n\u5982\u679c\u78b0\u5230\u9ad8\u5ea6\u76f8\u540c\u7684\u4eba\uff0c\u663e\u7136\u4e24\u4e24\u90fd\u80fd\u770b\u5230\uff0c\u7136\u540e\u6700\u540e\u5408\u5e76$size$\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<ll,ll>par;\ntypedef pair<par,ll>pii;\nconst ll INF=2e18;\nconst int MAXN=8e5+5;\n#define mp make_pair\npar a[MAXN];\npii sta[MAXN];\nll cnt=0,n,top=0,ans=0,recalc=0;\nint main()\n{\n    scanf(\"%lld\",&n);\n    recalc=n-1;\n    for(int i=1;i<=n;i++)\n\t{\n        ll tmp;\n        scanf(\"%lld\",&tmp);\n        if(tmp!=a[cnt].first) a[++cnt]=mp(tmp,1);\n        else a[cnt].second++;\n    }\n    for(int i=1;i<=cnt;i++)\n\tif(a[i].second>2) recalc+=(a[i].second-1)*(a[i].second-2)/2;\n    for(int i=1;i<=cnt;i++)\n\t{\n        int flag=0;\n        while(top&&sta[top].first.first<=a[i].first)\n\t\t{\n            if(sta[top].first.first==a[i].first)\n\t\t\t{\n                ans+=sta[top].first.second*a[i].second;\n                flag=sta[top].first.second;top--;\n                break;  \n            }\n            ans+=sta[top].first.second;\n            if(i>1&&i-1==sta[top].second) ans--;\n            top--;  \n        }\n        if(top) ans+=a[i].second;\n        if(top&&sta[top].second==i-1) ans--;\n        if(flag) a[i].second+=flag;\n        sta[++top]=mp(a[i],i);\n    }\n    printf(\"%lld\\n\",ans+recalc);\n    return 0;\n}\n```",
        "postTime": 1560001304,
        "uid": 98954,
        "name": "\u4e0d\u5b58\u5728\u4e4b\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1823 \u3010[COI2007] Patrik \u97f3\u4e50\u4f1a\u7684\u7b49\u5f85\u3011"
    },
    {
        "content": "\u6ce8\u610f\u7b49\u4e8e\u7684\u60c5\u51b5\u5373\u53ef  \u6570\u636e\u6539\u4e86\u589e\u52a0\u4e00\u4e2a\u6570\u91cf\u7ef4\u5ea6\u9632\u6b62\u6700\u540e\u4e09\u4e2a\u70b9\u8d85\u65f6\t\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n//input by bxd\n#define rep(i,a,b) for(int i=(a);i<=(b);i++)\n#define repp(i,a,b) for(int i=(a);i>=(b);--i)\n#define RI(n) scanf(\"%d\",&(n))\n#define RII(n,m) scanf(\"%d%d\",&n,&m)\n#define RIII(n,m,k) scanf(\"%d%d%d\",&n,&m,&k)\n#define RS(s) scanf(\"%s\",s);\n#define ll long long\n#define pb push_back\n#define REP(i,N)  for(int i=0;i<(N);i++)\n#define CLR(A,v)  memset(A,v,sizeof A)\n//////////////////////////////////\n#define inf 0x3f3f3f3\nconst int N=1000000;\nint sta[N];\nstruct node\n{\n    int cnt,v;\n};\nint main()\n{\n    stack<node>sta;\n    ll ans=0;\n    int n;\n    RI(n);\n    int pos=0;\n    while(n--)\n    {\n        int x;\n        RI(x);\n        int t=1;\n\n        while(sta.size()&&sta.top().v<=x)\n        {\n            if(sta.top().v==x)t+=sta.top().cnt;\n            ans+=sta.top().cnt;\n            sta.pop();\n        }\n        if(sta.size())ans++;\n      \n        sta.push(node{t,x});\n    }\n    cout<<ans;\n    return 0;\n}\n\n```\n",
        "postTime": 1557243711,
        "uid": 172446,
        "name": "FFFFFFFHHHHHHH",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1823 \u3010[COI2007] Patrik \u97f3\u4e50\u4f1a\u7684\u7b49\u5f85\u3011"
    },
    {
        "content": "\u672c\u9898\u8003\u8651\u5355\u8c03\u961f\u5217\uff0c\u6d89\u53ca\u91cd\u590d\u7684\u5143\u7d20\u5904\u7406\uff0c\u4f7f\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\u5c31\u884c\uff0c\u4e5f\u6709\u4eba\u7528pair\u4e5f\u884c\u3002\n\u5b9a\u4e49\u7ed3\u6784\u4f53\nstruct sa\n{\n    int v;//\u5b58\u503c\n    int di;//\u5b58\u91cd\u590d\u5ea6\n}vis[N];\n    \n    \u8003\u8651\u4e0b\u97625\u4e2a\u6570\u5b57\uff1a\n    \n          \n\n------------\n   \u8f93\u5165\u7684\u503c     3   2   2   2   5\n    \n   \u91cd\u590d\u5ea6\u6570     0   0   1   2   0\n   \n   \u5165\u6808\u8ba1\u6570     0   1   1   1   0   \n   \n   \u51fa\u6808\u8ba1\u6570    1    1   2   3   0\n   \n   \n   \u7b54\u6848\uff1a    10\n   \n------------\n\n   \u7b97\u6cd5\u7b56\u7565\uff1a\n   \n   (1)\u65b0\u6765\u7684\u5143\u7d20\u5927\u4e8e\u548c\u7b49\u4e8e\u961f\u9996\u503c\uff0c\u5219\u961f\u9996\u5143\u7d20\u8981\u51fa\u6808\uff0c\u51fa\u6808\u7684\u65f6\u5019\u8981\u52a01\uff1b\n   \n   (2)\u5165\u6808\u7684\u65f6\u5019\uff0c\u5982\u679c\u6808\u91cc\u4e0d\u4e3a\u7a7a\u7684\u8bdd\uff08\u8fd8\u6709\u5143\u7d20\uff0c\u6784\u6210\u4e00\u4e2a\u6709\u5e8f\u5bf9\uff09\uff0c\u4e5f\u8981\u52a01\uff1b\n   \n   (3) \u51fa\u6808\u65f6\uff0c\u7ed3\u679c\u8fd8\u8981\u52a0\u4e0a\u51fa\u6808\u5143\u7d20\u7684\u91cd\u590d\u5ea6\u3002\n   \n  (4) \u5728\u7eb8\u4e0a\u597d\u597d\u753b\u753b\uff0c\u5c31\u61c2\u4e86\uff01\n  \n  (5) \u672c\u9898\u5361int,\u6240\u4ee5\u8981long long\n  \n  \n  \u4e0b\u9762\u89c1\u4ee3\u7801\uff1a\n  \n  ```cpp\n#include<cstdio>\n#include<algorithm>\n#include <stack>\nusing namespace std;\nconst int N=5e5+5;\nstruct sa\n{\n    int v;\n    int di;//\u91cd\u590d\u5ea6\n}vis[N];\nstack<sa>dis;\nint n;\n\nint main()\n{int tmp,du=0;\nlong long ans=0;\nscanf(\"%d\",&n);\nscanf(\"%d\",&tmp);\ndis.push({tmp,0});\nfor(int i=2;i<=n;i++)\n{    du=0;\n    scanf(\"%d\",&tmp);\n    while(!dis.empty()&&tmp>=dis.top().v)\n    {\n        if (tmp==dis.top().v)\n          du=dis.top().di+1;\n\n        ans+=1;\n        ans+=dis.top().di;\n        dis.pop();\n\n    }\n    if (!dis.empty())\n        ans++;\n    dis.push({tmp,du});\n\n}\n  printf(\"%lld\\n\",ans);\n\n\n\n    return 0;\n}\n\n```\n  \n  \n  \n  \n  \n   \n   \n    ",
        "postTime": 1534409127,
        "uid": 65643,
        "name": "\u5174\u5b89\u9ed1\u718a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1823 \u3010[COI2007] Patrik \u97f3\u4e50\u4f1a\u7684\u7b49\u5f85\u3011"
    },
    {
        "content": "\u63d0\u9ad8\u4e8c\u9898\u96be\u5ea6\u3002\u601d\u7ef4\u6027\u8f83\u9ad8\u3002\n\n#solution1\uff1a\u6a21\u62df\uff0c\u7206\u641c\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5de6\u53f3\u7aef\u70b9\uff0c\u5224\u65ad\u5f00\u533a\u95f4\u5185\u7684\u6700\u5927\u503c\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e\u5de6\u53f3\u7aef\u70b9\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO\uff08n^3\uff09\n\n```cpp\nuses math;\nvar s,i,j,n,tot,x:longint; a:array[0..500000] of longint;\nfunction cz(l,r:longint):longint;\nvar i:longint;\nbegin\n cz:=a[l];\n for i:=l+1 to r do\n     cz:=max(cz,a[i]);\nend;\nbegin\n read(n);\n tot:=0; s:=0;\n for i:=1 to n do read(a[i]);\n s:=0;\n for i:=1 to n-1 do\n     for j:=i+1 to n do\n         begin\n          if i+1=j then begin inc(s); continue; end;\n          if cz(i+1,j-1)<=min(a[i],a[j]) then inc(s);\n         end;\n write(s);\nend .\n```\n30\u5206\u2026\u2026\n\nsolution2\uff1a\u6a21\u62df\uff0c\u7ebf\u6bb5\u6811\n\n\u7531\u4e8e\u8981\u6c42\u533a\u95f4\u6700\u5927\u503c\uff0c\u7ebf\u6bb5\u6811\u4e0a\n\n\uff08\u849f\u84bb\u4e0d\u4f1a\u7ebf\u6bb5\u6811\u2026\u2026\uff09\n\nsolution3\uff1a\u5355\u8c03\u6808\n\n\u7ef4\u62a4\u4e00\u4e2a\u4e0d\u5347\u7684\u5e8f\u5217\uff0c\u5177\u4f53\u7ec6\u8282\u81ea\u5df1\u7406\u89e3\n\n```cpp\nuses math;\nvar s,i,j,n,tot,x,k:longint; a:array[0..500000] of longint;\nbegin\n read(n);\n tot:=0; s:=0; \n for i:=1 to n do\n  begin\n   read(x);\n   k:=tot;\n   while (k>0)and(a[k]<=x) do begin inc(s); dec(k); end;\n   if k>0 then inc(s);\n   while (tot>0)and(a[tot]<x) do dec(tot); \n   inc(tot); a[tot]:=x;\n  end;\n write(s);\nend .\n```",
        "postTime": 1472362560,
        "uid": 10291,
        "name": "fighter_OI",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1823 \u3010\u97f3\u4e50\u4f1a\u7684\u7b49\u5f85\u3011"
    },
    {
        "content": "\u5355\u8c03\u6808\u3002\n\n\u9898\u76ee\u610f\u601d\u662f\u6307\u4e24\u4e2a\u4eba\u4e2d\u95f4\u6ca1\u6709\u4e00\u4e2a\u4eba\u6bd4\u67d0\u4e00\u4e2a\u4eba\u9ad8\u5c31\u80fd\u4e92\u76f8\u770b\u89c1\uff08\u8bed\u6587\u4e0d\u597d\u8981\u4eba\u547d\n\n\u6240\u4ee5\u5982\u679c\u4e00\u4e2a\u4eba\u4e4b\u540e\u51fa\u73b0\u4e86\u4e00\u4e2a\u6bd4\u4ed6\u8fd8\u9ad8\u7684\uff0c\u4ed6\u5c31\u4e0d\u53ef\u80fd\u518d\u4e0e\u540e\u9762\u7684\u67d0\u4e2a\u4eba\u4e92\u76f8\u770b\u89c1\u3002\n\n\u6240\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u6808\uff0c\u6808\u5185\u9ad8\u5ea6\u5355\u8c03\u4e0d\u4e0a\u5347\uff0c\u6bcf\u6b21\u53ef\u4ee5\u5148\u4e0e\u6808\u5185\u6240\u6709\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524d\u9ad8\u5ea6\u7684\u4eba\u4e92\u76f8\u770b\u89c1\uff0c\u5982\u679c\u5f39\u51fa\u64cd\u4f5c\u5b8c\u6210\u540e\u6808\u975e\u7a7a\uff0c\u8fd8\u53ef\u4ee5\u4e0e\u6808\u9876\u4e92\u76f8\u770b\u89c1\u3002\n\n\u4f46\u662f\u6709\u91cd\u590d\u5143\u7d20\uff0c\u6240\u4ee5\u6808\u5185\u5b58\u4e2a `pair`\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <stack>\n\ntypedef long long LL;\n#define int LL\n\nconst int MAXN = 500000;\n\nint n, ans, Top;\nint a[MAXN | 1];\nstd::stack < std::pair < int, int > > sta;\n\ninline int read() {\n\tregister int x = 0;\n\tregister char ch = getchar();\n\twhile(!isdigit(ch)) ch = getchar();\n\twhile(isdigit(ch)) {\n\t\tx = x * 10 + ch - '0';\n\t\tch = getchar();\n\t}\n\treturn x;\n}\n\nsigned main() {\n\tn = read();\n\tfor(int i = 1; i <= n; ++i) a[i] = read();\n\tfor(int i = 1; i <= n; ++i) {\n\t\t/*\n\t\twhile(Top > 0 && a[sta[Top]] < a[i]) --Top, ans += 1LL;\n\t\tif(Top) ans += 1LL;\n\t\tsta[++Top] = i;\n\t\t*/\n\t\tstd::pair < int, int > nowP = std::make_pair(a[i], 1);\n\t\twhile(!sta.empty() && sta.top().first <= a[i]) {\n\t\t\tstd::pair < int, int > tmp = sta.top();\n\t\t\tsta.pop();\n\t\t\tif(tmp.first == a[i]) nowP.second += tmp.second;\n\t\t\tans += tmp.second;\n\t\t}\n\t\tif(!sta.empty()) ++ans;\n\t\tsta.push(nowP);\n\t}\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1545537520,
        "uid": 24878,
        "name": "iodwad",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1823 \u3010[COI2007] Patrik \u97f3\u4e50\u4f1a\u7684\u7b49\u5f85\u3011"
    }
]