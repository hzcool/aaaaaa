[
    {
        "content": "\u8fd9\u9898\u521a\u5f00\u59cb\u5f88\u591a\u4eba\u4f1a\u60f3\u5230\u4e8c\u5206\uff0c\u4e8c\u5206\u7b54\u6848\uff0c\u7136\u540e\u770b\u770b\u662f\u5426\u80fd\u7ed5\u8fc7\u6240\u6709\u4fe1\u53f7\u5854\uff0c\u4f46\u662f\uff0c\u8fd9\u6837\u5199\u660e\u663e\u8d85\u65f6\uff0c\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u70b9\uff0c\u8981\u627e\u5230\u79bb\u5b83\u6700\u8fd1\u7684\u4fe1\u53f7\u5854\u9700\u8981O(n)\u7684\u65f6\u95f4\uff0c\u518d\u4e58\u4e0aM\\*L\uff08L=\u6d77\u6ee9\u7684\u957f\u5ea6\uff09\u4e0d\u8d85\u65f6\u624d\u602a\u5462\u3002\n\n\u8fd9\u4e00\u9898\u7684\u672c\u8d28\u5c31\u662f\u5c01\u9501\u6d77\u6ee9\uff0c\u5373\u7528\u4fe1\u53f7\u5854\u7684\u5de5\u4f5c\u8303\u56f4\u5c06\u4e24\u8fb9\u7684\u8fb9\u754c\u8fde\u5728\u4e00\u8d77\u3002\u6240\u4ee5\uff0c\u8fd9\u9898\u5c31\u662f\u6c42\u4e00\u6761\u4ece\u7b2c0\u5217\u5230\u7b2cn\u5217\u7684\u6700\u77ed\u8def\u5f84\uff0c\u7528\u70b9\u4e0e\u8fb9\u754c\u7684\u8ddd\u79bb\u4f5c\u4e3a\u6743\u503c\uff0c\u70b9\u4e0e\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u7684\u4e8c\u5206\u4e4b\u4e00\u4f5c\u4e3a\u6743\u503c\uff0c\u6784\u56fe\u5b8c\u6210\u540e\uff0c\u7528Dijkstra\u7b97\u6cd5\u6c42\u6700\u77ed\u8def\u5c31\u53ef\u4ee5\u4e86\u3002\u5f53\u7136\u7528Kruskal\u7b97\u6cd5\u5e76\u67e5\u96c6\u7ed3\u6784\u4f9d\u6b21\u52a0\u6700\u5c0f\u8fb9\uff0c\u76f4\u5230\u4e24\u6761\u8fb9\u754c\u88ab\u8fde\u5728\u4e00\u8d77\u4e5f\u662f\u53ef\u4ee5\u7684\u3002\u4f46\u662f\u8981\u6ce8\u610f\u6700\u77ed\u8def\u7684\u957f\u5ea6\u662f\u8def\u5f84\u4e0a\u8fb9\u6743\u7684\u6700\u5927\u503c\uff0c\u800c\u4e0d\u662f\u8fb9\u6743\u4e4b\u548c\u3002\n\n\n\n```cpp\n\n#include<stdio.h> //By C_SUNSHINE\n#include<math.h>\n#include<iostream>\nusing namespace std;\nconst int maxn=805;\nint n,w;\nstruct edge\n{\n       int u,v;\n       float c;\n}e[maxn*maxn];\nint x[maxn],y[maxn],W;\nint f[maxn];\nfloat getdist(int i,int j)\n{\n  return sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));\n}\nbool cmp(edge e1,edge e2)\n{\n  return e1.c<e2.c;\n}\nint getfather(int root)\n{\n  if(f[root]==-1)return root;\n  else return f[root]=getfather(f[root]);\n}\nvoid init()\n{\n     memset(f,-1,sizeof(f));\n     n=0;w=0;\n     scanf(\"%d%d\",&W,&n);\n     if(n==0)exit(0);\n     int i,j;\n     for(i=1;i<=n;i++)\n       scanf(\"%d%d\",y+i,x+i);\n     for(i=1;i<n;i++)\n       for(j=i+1;j<=n;j++)\n         e[++w]=(edge){i,j,getdist(i,j)/2};\n     for(i=1;i<=n;i++)\n     {\n         e[++w]=(edge){i,0,y[i]};\n         e[++w]=(edge){i,n+1,W-y[i]};\n     }\n     sort(e+1,e+w+1,cmp);\n}\nvoid work()\n{\n     int i=0,p,q;\n     while(getfather(0)!=getfather(n+1))\n     {\n       i++;\n       p=getfather(e[i].u);\n       q=getfather(e[i].v);\n       if(p!=q)f[p]=q;\n     }\n     printf(\"%.2f\\n\",e[i].c);\n}\nint main()\n{\n    init();\n    work();\n    return 0;\n}\n\n\n```",
        "postTime": 1383314514,
        "uid": 716,
        "name": "C_SUNSHINE",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1783 \u3010\u6d77\u6ee9\u9632\u5fa1\u3011"
    },
    {
        "content": "# \u7b80\u5355\u9898\u89e3\uff0c\u770b\u4e0d\u61c2\u6211\u76f4\u64ad\u53bb\u4e16\n## \u5bf9\u9898\u76ee\u5206\u6790\u4e00\u4e0b\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u6709\u70b9\u50cf[noip2017\u5976\u916a](https://www.luogu.org/problem/P3958)\n\u4e8b\u5b9e\u4e0a\u6211\u89c9\u5f97\u8fd9\u4e2a\u9898\u6bd4\u5976\u916a\u8fd8\u8981\u6c34\uff0c\u5e76\u67e5\u96c6\u5c31\u8db3\u591f\u4e86\n## \u7b97\u6cd5\uff1a\u6392\u5e8f+\u5e76\u67e5\u96c6\n\u6211\u4eec\u53ea\u9700\u8981\u5c06\u6d77\u6ee9\u5de6\u754c\u548c\u53f3\u754c\u8fde\u5728\u4e00\u8d77\u5c31ok\u4e86\uff0c\u4ec0\u4e48\u6700\u77ed\u8def\u554a\uff0c\u4e8c\u5206\u5565\u7684\u592a\u9ebb\u70e6   \n\u4e0b\u9762\u8bf4\u505a\u6cd5\n\n\n------------\n\u8bfb\u5165\u5750\u6807\u540e\uff0c\u9884\u5904\u7406\u4e00\u4e0b\u5404\u4e2a\u9632\u5fa1\u5854\u4e4b\u95f4\u7684\u8ddd\u79bb\u653e\u5165\u7ed3\u6784\u4f53\u91cc\uff08\u65b9\u4fbf\u6211\u4eec\u6392\u5e8f\uff09\n\u518d\u7ed9\u6bcf\u4e2a\u9632\u5fa1\u5854\u8fde\u4e00\u6761\u548c\u5de6\u8fb9\u754c\uff0c\u53f3\u8fb9\u754c\u7684\u8fb9\u3002\n**\u6ce8\u610f\uff0c\u4e0e\u5de6\u53f3\u8fb9\u754c\u8fde\u8fb9\u65f6\u8981\u5c06\u8ddd\u79bb\u4e58\u4e8c\uff0c\u539f\u56e0\u662f\u4e24\u4e2a\u9632\u5fa1\u5854\u4e4b\u95f4\u8981\u8fde\u63a5\u53ea\u9700\u8981\u4e00\u534a\u8ddd\u79bb\u7684\u653b\u51fb\u8303\u56f4\u5373\u53ef\uff0c\u4f46\u4e0e\u8fb9\u754c\u95f4\u5c31\u53ea\u80fd\u9760\u9632\u5fa1\u5854\u81ea\u5df1\u4e00\u4e2a\u4eba\u4e86**\n\u7136\u540e\u6309\u8ddd\u79bb\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4f9d\u6b21\u8fde\u8fb9\uff0c\u6bcf\u6b21\u68c0\u67e5\u5de6\u53f3\u8fb9\u754c\u662f\u5426\u8fde\u63a5\u5373\u53ef\u3002\u4e0b\u9762\u662f\u4ee3\u7801\n```c\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\t//n \u5217 m \u5854  \nint a[1000],b[1000];\t//\u5b58\u50a8\u5217\u4ee5\u53ca\u8ddd\u6d77\u8fb9\u8ddd\u79bb\uff0c\u5c31\u662f\u5750\u6807\nint f[1000];\t//\u5e76\u67e5\u96c6\u7528\nstruct node{int x,y;\tdouble dis;}ju[1000000];\t//\u5b58\u8fb9\u7528\nint cnt=0;\ndouble dis(int x1,int y1,int x2,int y2)\n{\n\treturn (double)sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));\n}\t//\u8fd4\u56de\u4e24\u70b9\u8ddd\u79bb\nbool comp(node x,node y)\n{\n\treturn x.dis<y.dis;\n}\t//\u6392\u5e8f\u7528\nint find(int x)\n{\n\tif(f[x]!=x)\treturn f[x]=find(f[x]);\n\treturn x;\n}\t//\u5e76\u67e5\u96c6\u627e\u8001\u7956\u5b97\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\t\t\n\t\t\t{\n\t\t\t\tscanf(\"%d%d\",&a[i],&b[i]);\t\n\t\t\t\tf[i]=i;\n\t\t\t}\t\t\t\n\tfor(int i=1;i<m;i++)\n\t\tfor(int j=i+1;j<=m;j++)\t\t\n\t\t{\n\t\t\tju[++cnt].dis=dis(a[i],b[i],a[j],b[j]),ju[cnt].x=i,ju[cnt].y=j;\t\n\t\t}\n\tfor(int i=1;i<=m;i++)\n\t\tju[++cnt].x=i,ju[cnt].y=0,ju[cnt].dis=a[i]*2,ju[++cnt].x=i,ju[cnt].y=m+1,ju[cnt].dis=(n-a[i])*2;\n        //\u8fd9\u91cc\u7528\u6765\u5c06\u6bcf\u4e2a\u9632\u5fa1\u5854\u548c\u8fb9\u754c\u5efa\u8fb9\t\u5de6\u8fb9\u754c0\uff0c\u53f3\u8fb9\u754cm+1\n\tsort(ju+1,ju+1+cnt,comp);\n\tf[m+1]=m+1;\n\tint ans;\n\tfor(int i=1;i<=cnt;i++)\n\t{\n\t\tint x=ju[i].x;int y=ju[i].y;\n\t\tint r1=find(x);\n\t\tint r2=find(y);\n\t\tif(r1!=r2)\tf[r1]=r2;\t\t\n\t\tif(find(0)==find(m+1))\t\n\t\t{\n\t\t\tans=i;break;\n\t\t}\n\t}\t\n\tprintf(\"%.2lf\",ju[ans].dis/2);\t//\u8303\u56f4\u662f\u8ddd\u79bb\u9664\u4ee52\n\treturn 0;\n}\n\u5b8c\u4e8bokkkk\n\n```\n",
        "postTime": 1571915196,
        "uid": 141866,
        "name": "Akeryep",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1783 \u3010\u6d77\u6ee9\u9632\u5fa1\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\uff0c\u51fa\u9898\u4eba\u8bf4\u4e0d\u80fd\u4e8c\u5206\uff0c\u4f46\u662f\u6211\u7528\u4e8c\u5206\u8fc7\u4e86\uff0c\u53ef\u80fd\u662f\u5224\u65ad\u65b9\u6cd5\u548c\u51fa\u9898\u4eba\u60f3\u7684\u4e0d\u4e00\u6837\uff1f\u4f46\u5b9e\u9645\u4e0a\u8fd8\u662f\u5f88\u6162\uff0c\u6216\u8bb8\u5199\u4e2a\u5806\u4f18dij\u53ef\u80fd\u5feb\u4e9b\u3002\u3002\u3002\n\n\n\u5bf9\u4e8e\u4e00\u4e2a\u80fd\u591f\u6321\u4f4f\u6240\u6709\u9053\u8def\u7684\u60c5\u51b5 \uff0c \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0 \u5b83\u4eec\u7684\u5706\u5fc3\u8fde\u7ebf\u4e00\u5b9a\u8986\u76d6\u4e86 \u6700\u63a5\u8fd10 \u7684\u70b9\u548c\u6700\u63a5\u8fd1n\u7684\u70b9\u7684\u4e2d\u95f4\u90e8\u5206\uff0c\u8fb9\u754c\u7279\u6b8a\u8003\u8651\u4e00\u4e0b\u5c31\u53ef\u4ee5\u3002\u3002\n\n\n\u601d\u8def \uff1a \u5148\u5efa\u7acb\u4e24\u4e2a\u865a\u70b9\uff0c\u5206\u522b\u57280 \u548c n \uff08\u6211\u5199\u4e2a-1 n+1 \u662f\u4e3a\u4e86\u6392\u5e8f\u65b9\u4fbf\uff09 \u7136\u540e\u5efa\u8fb9\uff0c0 \u548c n \u6709\u4e9b\u7279\u6b8a \uff0c\u8fb9\u957f\u662f\u5782\u76f4\u884c\u7684\u8ddd\u79bb\uff0c\u5176\u4ed6\u7684\u5c31\u662f\u4e24\u70b9\u95f4\u8ddd\u79bb\u9664\u4ee5\u4e8c\u4e86\uff0c\u5224\u65ad\u662f\u5426\u8054\u901a\u6211\u7528\u4e86 \u66b4\u529b dij \u3002\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nint n,m;\n\nstruct ppp{\n    double x,y;\n}p[1100];\n\nstruct node{\n    double dis;\n    int to,nxt,k;\n}edg[2000050];\nint head[1100],num,pppp;\nvoid add_e(int a,int b,double dis,bool flag){\n    if(!flag) edg[++num].dis=sqrt((p[a].x-p[b].x)*(p[a].x-p[b].x)+(p[a].y-p[b].y)*(p[a].y-p[b].y))/2;\n    else edg[++num].dis=dis;\n    edg[num].k=pppp;\n    edg[num].to=b;\n    edg[num].nxt=head[a];\n    head[a]=num;\n}\n\ndouble dis[1100];int vis[1100];\nint check(double mid){  //dij\n    memset(dis,0x7f,sizeof(dis));\n    memset(vis,0,sizeof(vis));\n    dis[1]=0;\n    double minl=0x7fffffff;int px;\n    for(int i=1;i<=m+2;i++){\n        minl=0x7fffffff;\n        for(int j=1;j<=m+2;j++){\n            if(!vis[j]&&minl>dis[j]){\n                minl=dis[j];px=j;\n            }\n        }\n        vis[px]=1;\n        int t=head[px];\n        while(t!=0){\n            if(!vis[edg[t].to]&&dis[px]+edg[t].dis<dis[edg[t].to]&&edg[t].dis<=mid){\n                dis[edg[t].to]=dis[px]+edg[t].dis*edg[t].k;\n            }\n            t=edg[t].nxt;\n        }\n    }\n    if(dis[m+2]==dis[m+13])\n        return 0;\n    else \n        return 1;\n}\n\nint cmp(const ppp &a,const ppp &b){\n    return a.x<b.x;\n}\n\nint main(){\n    ios::sync_with_stdio(false);\n    \n    cin>>n>>m;\n    \n    int x,y;\n    for(int i=1;i<=m;i++){\n        cin>>x>>y;\n        p[i].x=x;\n        p[i].y=y;\n    }\n    \n    //\u00bd\u00a8\u00b1\u00df \n    p[m+1].x=-1;\n    p[m+2].x=n+1;\n    sort(p+1,p+m+3,cmp);\n    pppp=2;\n    for(int i=2;i<=m+1;i++){\n        for(int j=2;j<i;j++){\n            add_e(i,j,0,0);\n            add_e(j,i,0,0);\n        }\n    }\n    pppp=1;\n    for(int i=2;i<=m+1;i++){\n    //    add_e(i,1,p[i].x);\n        add_e(1,i,p[i].x,1);\n        add_e(i,m+2,(n-p[i].x),1);\n    //    add_e(m+2,i,(n-p[i].x));\n    }\n    \n    double l=0.5,r=1e7,mid;\n    while(abs(l-r)>1e-6){\n        mid=(l+r)/2;\n        if(check(mid)) r=mid;\n        else l=mid;\n    }\n    \n    printf(\"%.2f\",l);\n    \n    return 0;\n}\n```",
        "postTime": 1508924969,
        "uid": 21194,
        "name": "CURRENT_F",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1783 \u3010\u6d77\u6ee9\u9632\u5fa1\u3011"
    },
    {
        "content": "# \u5e76\u67e5\u96c6 + \u4e8c\u5206\n\n\u6211\u662f **\u5e76\u67e5\u96c6 + \u4e8c\u5206** \u505a\u7684QVQ\n\n\u601d\u8def\uff1a\u4e24\u4e24\u679a\u4e3e\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0csort\u6392\u5e8f\uff0c\u4f7f\u8ddd\u79bb\u6709\u5e8f\u3002\u4e8c\u5206\u7b54\u6848\uff0c\u6bcf\u6b21\u5224\u65ad\u662f\u5426\u7b26\u5408\u6761\u4ef6\uff0c\u7136\u540e\u7f29\u5c0f\u67e5\u8be2\u8303\u56f4\uff0c\u76f4\u5230\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\uff08\u4fdd\u75592\u4f4d\u5c0f\u6570\u7cbe\u5ea6\u5c31\u4e3a 0.001\u5c31\u597d\u4e86\uff09\u6700\u540e\u4fdd\u7559\u4e24\u4f4d\u5c0f\u6570\u8f93\u51fa\n\n\n\u6838\u5fc3 \u5224\u65ad\u662f\u5426\u7b26\u5408\u6761\u4ef6\uff1a\n\n\u5bf9\u4e8e\u6bcf\u6b21\u5224\u65ad\uff0c\u9996\u5148\u5e94\u521d\u59cb\u5316\u5e76\u67e5\u96c6\u3002\u56e0\u4e3a\u8ddd\u79bb\u6709\u5e8f\uff0c\u4e00\u76f4\u5e76\u96c6\u76f4\u5230\u4e24\u70b9\u8ddd\u79bb\u5927\u4e8e\uff08\u8981\u5224\u65ad\u7684\uff09k\u7684\u4e24\u500d\uff08k\u4e3a\u6bcf\u6b21\u4e8c\u5206\u68c0\u67e5\u7684\u534a\u5f84\uff0c\u4e24\u70b9\u8ddd\u79bb\u5927\u4e8e\u534a\u5f84\u5373\u4e24\u70b9\u76f8\u79bb\uff09\u4e3a\u6b62\u3002\n\n\n\uff08\u73b0\u5728\u6240\u6709\u8ddd\u79bb\u5c0f\u4e8ek\\*2 \u90fd\u88ab\u8054\u901a\u4e86\uff09\u4e24\u4e24\u679a\u4e3e\u6240\u6709\u70b9\uff0c\u82e5\u6709\u4e00\u70b9i\u79bb\u5de6\u6d77\u5cb8\u7ebf\u7684\u8ddd\u79bb<k\uff0c\u8bf4\u660e\u70b9i\u5728\u534a\u5f84\u4e3ak\u7684\u6761\u4ef6\u4e0b\u80fd\u591f\u5230\u5de6\u8fb9\u754c\uff1b\u540c\u7406\uff0c\u82e5\u6709\u4e00\u70b9j\u79bb\u53f3\u6d77\u5cb8\u7ebf\u7684\u8ddd\u79bb + k > len\u8bf4\u660e\u70b9j\u5728\u534a\u5f84\u4e3ak\u7684\u6761\u4ef6\u4e0b\u591f\u5f97\u5230\u53f3\u8fb9\u754c\uff0c\u5982\u679ci\uff0cj\u5728\u540c\u4e00\u96c6\u5408\u5185\uff0c\u8bf4\u660e\u6210\u7acb\uff08\u5de6\u8fb9\u754c->i->j->\u53f3\u8fb9\u754c\uff1b\u6ee1\u8db3\u5c01\u9501\uff09\n\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a\n\n\u5e76\u67e5\u96c6\u521d\u59cb\u5316\u9700\u4ece0\u5f00\u59cb\uff08\u8bfb\u9898\uff09\uff1b\n\n\u6bcf\u6b21\u5224\u65ad\u6210\u7acb\u90fd\u8981\u521d\u59cb\u5316\u5e76\u67e5\u96c6\uff1b\n\n\n\u4ee3\u7801\u5982\u4e0b\uff08\u6ce8\u91ca\u5e76\u4e0a\uff09\uff1a\n\n    \n    \n        \n    \n    \n```cpp\n    #include<iostream>\n    #include<algorithm>\n    #include<cmath>\n    #include<cstdio>\n    using namespace std;\n    const int maxn = 1001100;\n    int num,nr;//\u70b9\u6570\uff0c\u8fb9\u6570\n    int len;//\u6d77\u6ee9\u5bbd\u5ea6\n    int father[maxn];//\u5e76\u67e5\u96c6\n    struct R{\n        int u,v;\n        double dis;\n        }I[maxn];//\u8fb9\n    struct Node{\n        int x,y;\n        }N[maxn];//\u70b9\n    bool cmp(R a,R b){\n        return a.dis < b.dis;//sort\u7684cmp\u51fd\u6570\n        }\n        int findfather(int v){//\u67e5\u627e\u7956\u5148\uff08\u6ce8\u610f\u538b\u7f29\u8def\u5f84\u3010\u4e0d\u7136\u4e5f\u8bb8\u4f1a\u8d85\u65f6QAQ\u3011\uff09\n        if(father[v] == v)return v;\n        int F = findfather(father[v]);\n        father[v] = F;\n        return F;\n        }\n    void Union(int a,int b){//\u5e76\u96c6\n        int faA = findfather(a);\n        int faB = findfather(b);\n        if(faA != faB){\n            father[faA] = faB;\n            }\n        }\n    bool check(double k){//\u5224\u65ad\u51fd\u6570\n        for(int i = 0;i < num;i++)father[i] = i;//\u5e76\u67e5\u96c6\u6bcf\u6b21\u521d\u59cb\u5316\n        int i = 1;\n        while(I[i].dis <= 2 * k && i <= nr){//\u5728\u5f53\u524dk\u4e0b\u80fd\u8fde\u901a\u7684\u5168\u90e8\u8fde\u901a\n            Union(I[i].u,I[i].v);\n            i++;\n            }\n        for(int i = 0;i < num;i++){//\u4e24\u4e24\u679a\u4e3e\n            for(int j = 0;j < num;j++){\n                if(findfather(i) == findfather(j) && N[i].x - k < 0 && N[j].x + k > len){        \n                return 1;\n                    }\n                }\n            }\n        return 0;\n        }\n    double search(double l,double r){\n        while(l + 0.001 < r){//\u4e8c\u5206\uff0c\u7cbe\u5ea6\u4e3a0.001\n            double mid = (l + r)/2;\n                if(check(mid)){//\u6210\u7acb\u5c31\u7f29\u5c0f\u4e0a\u754c\n                r = mid;\n                }\n            else{\n                l = mid;\n                }\n            }\n        return r;\n        }\n    int main(){\n        cin>>len>>num;//\u8f93\u5165\u5bbd\u5ea6\u548c\u70b9\u6570\n        for(int i = 0;i < num;i++)father[i] = i;//\u5e76\u67e5\u96c6\u521d\u59cb\u5316\n        for(int i = 0;i < num;i++){\n            cin>>N[i].x>>N[i].y;//\u8f93\u5165\u70b9\u5750\u6807\n            }\n        for(int i = 0;i < num;i++){//\u4e24\u4e24\u679a\u4e3e\uff0c\u8ba1\u7b97\u70b9\u4e0e\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\n            for(int j = i;j < num;j++){\n                I[++nr].u = i;\n                I[nr].v = j;\n                I[nr].dis =sqrt (1.0 * (N[i].x - N[j].x) * (N[i].x - N[j].x) + (N[i].y - N[j].y) * (N[i].y - N[j].y));//\u8bb0\u5f97\u52a0math\u5934\u6587\u4ef6\n                }\n            }\n        sort(I + 1,I + nr + 1,cmp);//\u6309\u8ddd\u79bb\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n        printf(\"%.2f\\n\",search(0.0,10000000.0) );//\u8f93\u51fa\n        return 0;\n        }\nEnd.(\u6c42\u8fc7)\n```",
        "postTime": 1513145721,
        "uid": 56230,
        "name": "\u5929\u4e0a\u4e00\u9897\u86cb",
        "ccfLevel": 0,
        "title": "P1783 \u4e8c\u5206\u5e76\u67e5\u96c6\u5199\u6cd5"
    },
    {
        "content": "###\n\u8fd9\u4e2a\u9898\u4e3a\u4ec0\u4e48\u8981\u7528\u4e8c\u5206\u7b54\u6848\u505a\uff1f\u6700\u77ed\u8def\u90fd\u4e0d\u9700\u8981\uff0c\u4e00\u4e2a\u53d8\u4e86\u70b9\u5f62\u7684\u6700\u5c0f\u751f\u6210\u6811\u7b97\u6cd5\u5c31\u53ef\u4ee5AC,\u4e5f\u5c31\u662fkruskal;\n\n\u552f\u4e00\u7684\u96be\u70b9\u5728\u4e8e\u4ec0\u4e48\u65f6\u5019\u5224\u65ad\u5df2\u7ecf\u662f\u8054\u901a\u7684\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u663e\u7136\u7684\u5f97\u5230\uff0c0\u548cn+1\u521a\u597d\u53ef\u4ee5\u8fde\u8d77\u6765\u7684\u65f6\u5019\u5c31\u662f\u6700\u5c0f\u503c\u4e86\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u8054\u901a\u6240\u6709\u7684\u70b9\uff0c\u53ea\u662f\u9700\u8981\u8ba90\u70b9\u4e0en+1\u70b9\u8fde\u63a5\uff0c\u4e3e\u4e2a\u4f8b\u5b50\u5c31\u662f\u8bf4\u6211\u4eec\u53ef\u4ee5\u8fde\u63a50--1,1--3,3--n+1;\u6211\u4eec\u662f\u53ef\u4ee5\u8df3\u8fc72\u8fd9\u4e2a\u70b9\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u7684\u6027\u8d28\uff0c\u6bcf\u6b21\u5408\u5e76\u5b8c\u6210\u540e\u6c42\u4e00\u6b21n+1\u8282\u70b9\u4e0e0\u8282\u70b9\u7684\u7956\u5148\uff0c\u5982\u679c\u662f\u540c\u4e00\u7956\u5148\u7684\u8bdd\u5c31\u8bc1\u660e\u53ef\u4ee5\u4e86\uff1b\n```\n#include<iostream>\n#include<algorithm> \n#include<cstring>\n#include<cmath>\n#include<cstdio>\nusing namespace std;\n\nconst int N=1005;\n\nstruct node{\n    int x,y;\n    double z;\n};\n\nnode s[N*N/2];\n\nint x[N],y[N],fa[N];\n\ndouble oula(int x,int y,int z,int w)\n{\n    int xx=x-z;\n    int yy=y-w;\n    return sqrt(xx*xx+yy*yy);\n}//\u662fdouble\u7c7b\u578b\u7684\u5462\n\nint cmp(node x,node y)\n{\n    return x.z<y.z;\n}\n\nint find(int x)\n{\n    if(fa[x]==x)return x;\n    return fa[x]=find(fa[x]);\n}\n\nint d[N],vis[N],cnt=0,sum=0,n,m;\n\ndouble ans=0;\n\nvoid kruskal()\n{\n    for(int i=1;i<=sum;i++)\n    {\n        int xx=find(s[i].x);\n        int yy=find(s[i].y);\n        if(xx!=yy)\n        {\n            fa[xx]=yy;\n            ans=s[i].z;//\u56e0\u4e3a\u5df2\u7ecf\u6392\u8fc7\u5e8f\u4e86\uff0c\u6240\u4ee5\u6700\u540e\u4e00\u4e2a\u52a0\u5165\u7684\u8def\u5f84\u4e00\u5b9a\u662f\u6700\u957f\u7684\uff0c\u4e0d\u9700\u8981ans=max(ans,s[i].z);\n        }\n        if(find(n+1)==find(0))return;//\u8fd9\u5c31\u662f\u8981\u5224\u65ad\u7684\u4e1c\u897f\uff0c\u76f8\u4fe1\u524d\u9762\u5df2\u7ecf\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86\uff1b\n    }\n} \n\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=n*n/2;i++)fa[i]=i;//\u5343\u4e07\u4e0d\u8981\u5fd8\u4e86\u8fd9\u4e2a\uff0c\u6709\u7684\u4eba\u53ef\u80fd\u4e60\u60ef\u521d\u59cb\u5316\u7956\u5148\u4e3a0\uff0c\u4f46\u8fd9\u5176\u5b9e\u5f88\u5bb9\u6613\u51fa\u9519\uff1b\n    for(int i=1;i<=m;i++)\n    {\n        cin>>x[i]>>y[i];\n        for(int j=1;j<i;j++)\n        {\n            s[++sum]={(node){i,j,oula(x[i],y[i],x[j],y[j])*0.50}};   \n        }\n        s[++sum]={(node){0,x[i],(double)x[i]}};\n        s[++sum]={(node){n+1,x[i],n-x[i]}};//\u8fd9\u662f\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\uff0c\u4f60\u9700\u8981\u6c42\u51fa\u6bcf\u4e00\u4e2a\u548c\u8fb9\u754c\u7684\u8ddd\u79bb\uff0c\u6211\u521a\u5f00\u59cb\u7684\u65f6\u5019\u5fd8\u4e86\u8fd9\u4e2a\u5730\u65b9\uff0c\u7ed3\u679c\u53ea\u670910\u5206\uff08\u5e94\u8be5\u662f\u5f88\u5e78\u8fd0\u7684\u9a97\u4e8610\u5206\uff09\uff1b\n    }\n    sort(s+1,s+sum+1,cmp);//\u6700\u5c0f\u751f\u6210\u6811\u5f53\u7136\u8981\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u5440\uff1b\n    kruskal();//\u51e0\u4e4e\u5c31\u662f\u677f\u5b50\uff1b\n    printf(\"%.2lf\",ans);\n}\n```",
        "postTime": 1550896630,
        "uid": 122822,
        "name": "Merci",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1783 \u3010\u6d77\u6ee9\u9632\u5fa1\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P1783)\n\n\u521a\u770b\u5230\u8fd9\u9053\u9898\u60f3\u5230\u7684$\\text{noip2017 day2 T1}$\u3010\u5976\u916a\u3011\u2026\u2026\n\n\u8003\u8651\u5230\u9898\u9762\u6700\u5927\u534a\u5f84\u6700\u5c0f\u503c\uff0c\u60f3\u5230\u4e86**\u4e8c\u5206+\u5e76\u67e5\u96c6**\u2026\u2026\n\n\u4e8c\u5206\u6700\u5927\u534a\u5f84\u6700\u5c0f\u503c\uff0c\u641c\u5b8c\u4e00\u904d\u6700\u540e\u5982\u679c\u5728\u6240\u6709\u70b9\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u5c31\u66f4\u65b0\u7b54\u6848\n\n\u4f46\u662fTLE\u4e86\u51e0\u4e2a\u70b9\u2026\u2026\u770b\u6765\u4e0d\u8fc7\u5feb\u2026\u2026\n\n\u753b\u4e86\u4e00\u4e2a\u56fe\uff0c\u604d\u7136\u5927\u609f\n\n\u8fd9\u9053\u9898\u5176\u5b9e\u662f\u4e2a\u6700\u77ed\u8def\n\n![](https://cdn.luogu.com.cn/upload/pic/35958.png)\n\n\u663e\u7136\u6700\u6d77\u5cb8\u7684\u8fb9\u7f18\u7684\u4e24\u4e2a\u4fe1\u53f7\u5854\u7684\u5de5\u4f5c\u8303\u56f4\u81f3\u5c11\u662f\u4fe1\u53f7\u5854\u5230\u6d77\u6ee9\u8fb9\u7f18\u7684\u5782\u76f4\u8ddd\u79bb\n\n\u90a3\u4e48\u4e24\u4e2a\u706f\u5854\u4e4b\u95f4\u5462\uff1f\n\n\u8bbe\u4e24\u4e2a\u5854\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e3a$d$\uff0c\u4e24\u4e2a\u4fe1\u53f7\u5854\u63a2\u6d4b\u8303\u56f4\u5206\u522b\u662f$r_1$\u548c$r_2$\uff0c\u90a3\u4e48$r_1+r_2=d$\uff0c\u5f53\u4e14\u4ec5\u5f53$r_1=r_2=\\frac{d}{2}$\u65f6\u6700\u5927\u534a\u5f84\u7684\u6700\u5c0f\u503c\u4e3a$\\frac{d}{2}$\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u628a\u628a\u4fe1\u53f7\u5854\u4e4b\u95f4\u7684\u6700\u77ed\u8def\uff08\u6216\u8005\u8bf4\u6700\u5c0f\u751f\u6210\u6811\u4e5f\u53ef\u4ee5\uff09\u8ba1\u7b97\u51fa\uff0c\u627e\u51fa\u6700\u5927\u7684\u8fb9\u957f\u7684$\\frac{1}{2}$\u4e0e\u4e24\u4fa7\u4fe1\u53f7\u5854\u8ddd\u79bb\u6d77\u6ee9\u8fb9\u7f18\u7684\u8ddd\u79bb\u8fdb\u884c\u6bd4\u8f83\uff0c\u6700\u5927\u503c\u4fbf\u662f\u6700\u5927\u534a\u5f84\u7684\u6700\u5c0f\u503c\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5728\u6700\u77ed\u8def\u64cd\u4f5c\u4e2d\u628a\u66f4\u65b0\u8def\u5f84\u603b\u957f\u5ea6$dis[i]$\u7684\u64cd\u4f5c\u53d8\u4e3a**\u66f4\u65b0\u6700\u77ed\u8def\u8fb9\u957f\u7684\u6700\u5927\u503c\u7684$\\frac{1}{2}$**\u3002\n\n\u6211\u4eec\u4e0d\u59a8\u628a\u6d77\u6ee9\u4e0e\u706f\u5854\u7684\u8ddd\u79bb\u8003\u8651\u6210\u4e24\u6761\u8fb9\uff0c\u5728\u52a0\u8fb9\u7684\u65f6\u5019\u7b97\u4f5c\u7b2c$m+1$\u548c\u7b2c$m+2$\u6761\u8fb9\uff0c\u65b9\u4fbf\u66f4\u65b0\u6700\u503c\n\n\u4ee5\u4e0b\u662fAC Code\uff0c\u91cc\u9762\u8fd8\u6709\u6ce8\u91ca\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=850;\nconst int M=2*N*N;\nint n,m,tot,head[N],ver[M],next[M],h[N];\ndouble dx[N],dy[N],dis[N],edge[M];\nbool vis[N];\npriority_queue<pair<double,int> > q;\nvoid add(int x,int y,double z)//\u52a0\u8fb9\n{\n\tver[++tot]=y;\n\tedge[tot]=z;\n\tnext[tot]=head[x];\n\thead[x]=tot;\n}\ndouble dist(int i,int j){return sqrt((dx[i]-dx[j])*(dx[i]-dx[j])+(dy[i]-dy[j])*(dy[i]-dy[j]));}//\u8ba1\u7b97\u4e24\u70b9\u95f4\u8ddd\u79bb\nvoid dijskra(int st)//\u6807\u51c6dijskra\u6700\u77ed\u8def\n{\n\tmemset(dis,127,sizeof dis);\n\tdis[st]=0;\n\tq.push(make_pair(0,st));\n\twhile(q.size())\n\t{\n\t\tint x=q.top().second;q.pop();\n\t\tif(vis[x]) continue;\n\t\tvis[x]=1;\n\t\tfor(int i=head[x];i;i=next[i])\n\t\t{\n\t\t\tint y=ver[i];double z=edge[i];\n\t\t\tif(dis[y]>max(dis[x],z))\n\t\t\t{\n\t\t\t\tdis[y]=max(dis[x],z);\n\t\t\t\tq.push(make_pair(-dis[y],y));\n\t\t\t}\n\t\t}\n\t}\n} \nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for (int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%lf%lf\",&dx[i],&dy[i]);\n        //\u52a0\u8fb9\uff08\u706f\u5854\u8ddd\u79bb\u6d77\u6ee9\u8fb9\u7f18\u7684\u8ddd\u79bb\uff09\n        add(m+1,i,dx[i]);add(i,m+1,dx[i]);\n        add(m+2,i,double(n)-dx[i]),add(i,m+2,double(n)-dx[i]);\n    }\n    for(int i=1;i<m;i++)\n        for(int j=i+1;j<=m;j++)\n            add(i,j,dist(i,j)/2.0),add(j,i,dist(i,j)/2.0);//\u4fe1\u53f7\u5854\u4e4b\u95f4\u52a0\u8fb9\uff08\u6ce8\u610f\u957f\u5ea6\u4e3a\u8ddd\u79bb\u76841/2\uff09\n    dijskra(m+1);//\u4ee5\u5176\u4e2d\u6d77\u6ee9\u4e00\u8fb9\u4e3a\u8d77\u70b9\n    printf(\"%.2lf\",dis[m+2]);//\u53e6\u4e00\u8fb9\u4e3a\u7ec8\u70b9\n    return 0;\n}\n```",
        "postTime": 1538661387,
        "uid": 74896,
        "name": "Mathison",
        "ccfLevel": 0,
        "title": "P1783 \u6d77\u6ee9\u9632\u5fa1\u3010\u6700\u77ed\u8def\u3011"
    },
    {
        "content": "~~\u5b9e\u540d~~\u53cd\u5bf9\u90a3\u4e9b\u8bf4\u4e8c\u5206\u4e0d\u80fd\u8fc7\u7684\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u5bf9\u4e8e\u6b64\u9898\u6211\u4eec\u53ef\u4ee5\u7528O(m^2)\u7684\u65f6\u95f4\u8fdb\u884c\u5224\u65ad\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 O(m^2logn)\uff0c\u5b9e\u6d4b92ms\uff0c\u6bd4\u5176\u4ed6\u5927\u591a\u6570\u9898\u89e3\u8fd8\u8981\u5feb\n\u5177\u4f53\u89c1\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<queue>\n#include<cstring>\nusing namespace std;\nconst int N = 1005;\nconst double eps=1e-4;\nint n,m;\nint x[N],y[N];\nint vis[N];\ndouble dis[N][N];\nqueue<int> q;\ninline int check(double mid)  //bfs\u5224\u65ad\n{\n    memset(vis,0,sizeof(vis));\n    vis[0]=1;\n    q.push(0);\n    while(!q.empty())\n    {\n        int v=q.front();q.pop();\n        for(int i=1;i<=m+1;i++)\n        {\n            if(!vis[i])\n            {\n                if(i==m+1||v==0) {if(dis[v][i]<=mid) vis[i]=1,q.push(i);} //\u5728\u8fb9\u4e0a\n                else if(dis[v][i]<=2*mid) vis[i]=1,q.push(i); //\u4e24\u4e2a\u4fe1\u53f7\u5854\u4e4b\u95f4\u662f2*mid\n            }\n        }\n    }\n    return vis[m+1];\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&x[i],&y[i]);\n        dis[0][i]=dis[i][0]=x[i];\n        dis[m+1][i]=dis[i][m+1]=n-x[i];\n    }\n    dis[0][m+1]=(1<<30);\n    for(int i=1;i<=m;i++)\n        for(int j=i+1;j<=m;j++)\n            dis[i][j]=dis[j][i]=sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j])); //\u521d\u59cb\u5316\u8ddd\u79bb\u6570\u7ec4\n    double l=0,r=10005,ans,mid;\n    while(r-l>=eps)  //\u4e8c\u5206\n    {\n        mid=(l+r)/2;\n        if(check(mid)) r=mid,ans=mid;\n        else l=mid;\n    }\n    printf(\"%.2lf\",ans);\n    return 0;\n}\n```",
        "postTime": 1527470830,
        "uid": 27030,
        "name": "ustze",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1783 \u3010\u6d77\u6ee9\u9632\u5fa1\u3011"
    },
    {
        "content": "## [\u66f4\u597d\u7684\u4f53\u9a8c](https://www.luogu.com.cn/blog/renquanbang/)\n\n\u819c\u4f60\u8d5b\u642c\u7684\u9898\uff0c\u8bb2\u8bfe\u65f6\u4ed6\u4eec\u90fd\u8bf4\u7528\u4e8c\u5206+\u5e76\u67e5\u96c6\uff0c\u6211\u7528\u4e8c\u5206+DFS\u5c31\u53ef\u4ee5\u8279\u8fc7\u53bb\u4e86\n\n\u7531\u4e8e\u8bed\u6587\u6c34\u5e73\u592a\u5dee\u8bfb\u4e86\u597d\u957f\u65f6\u95f4\u7684\u9898\u76ee\u624d\u7406\u89e3\uff0c\u9898\u76ee\u7c7b\u4f3c\u4e8e\u4e00\u5f20\u7eb8\u7247\uff0c\u4e0a\u9762\u6709n\u4e2a\u70b9\u4ee5\u8fd9n\u4e2a\u70b9\u4e3a\u5706\u5fc3\uff0c\u6c42\u6700\u5c0f\u7684\u534a\u5f84\uff0c\u4f7f\u7eb8\u7247\u53ef\u4ee5\u88c2\u5f00\uff0c\u4e5f\u5c31\u662f\u6709\u4e00\u6761\u8def\u5f84\u4e0a\u9762\u90fd\u88ab\u5706\u8986\u76d6\n\n\u770b\u5230\u6700\u5c0f\u9996\u5148\u60f3\u5230\u4e8c\u5206\u7b54\u6848\uff0c\u4e8c\u5206\u8fd9\u4e2a\u6700\u5c0f\u7684\u534a\u5f84\uff0c\u7136\u540e\u6211\u4eec\u60f3\u5230\u9996\u5148\u6211\u4eec\u8981\u548c\u4e24\u8fb9\u6709\u4ea4\u70b9\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u6709\u4ea4\u70b9\u7684\u70b9dfs\uff0c\u80fd\u5230\u8fbe\u53e6\u4e00\u8fb9\u5c31\u8bf4\u660e\u8fd9\u662f\u4e00\u4e2a\u7b54\u6848\u3002\n\n\u90a3\u4e48\u5982\u4f55dfs\u5462\uff0c\u5148\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u786e\u5b9a\u534a\u5f84\u540e\uff0c\u5982\u679c\u4e24\u4e2a\u5706\u6709\u4ea4\uff0c\u90a3\u4e48\u4ed6\u4eec\u7684\u8ddd\u79bb\u4e00\u5b9a\u5c0f\u4e8e2 * \u534a\u5f84\uff0c\u53bb\u4e00\u4e0b\u91cd\uff0c\u5c31\u53ef\u4ee5\u4ee5\u8f83\u4e3a\u4f18\u79c0\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8fc7\u4e86\u3002\n\n\n\n------------\n\ncode\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ninline int read(){\n    int AK = 1, IOI = 0;\n    char ch = 0;\n    while (ch < '0' || ch > '9'){\n        AK = ch=='-'?-1:1;\n        ch = getchar();\n    }\n    while (ch <= '9' && ch >= '0'){\n        IOI *= 10;\n        IOI += ch - 48;\n        ch =  getchar();\n    }\n    return AK * IOI;\n}\ninline void Print(int b){\n    if (b < 10){\n        putchar(b + '0');\n        return;\n    }\n    Print(b / 10);\n    putchar(b % 10 + '0');\n}\n\nstruct nod{\n    int b, a;\n} a[1001];\ndouble l[1001][1001];\nint n, m;\n\ninline bool cmp(nod b, nod a){\n    return b . a < a . a;\n}\nbool bo[1001];\nbool boo;\ninline double sqr(double b){\n    return b * b;\n}\ninline void dfs(int x, double y){\n    if ((m - a[x] . a) <= y){//\u5982\u679c\u5df2\u7ecf\u53ef\u4ee5\u78b0\u5230\u9876\u4e86\uff0c\u90a3\u4e48\u7ed3\u675f\n        boo = 1;\n        return;\n    }\n    if (boo){//\u5982\u679c\u5df2\u7ecf\u6709\u7b54\u6848\u4e86\u90a3\u4e48\u4e0d\u5fc5\u8981\u7ee7\u7eed\u627e\u4e0b\u53bb\n        return;\n    }\n    for (int i = 1; i <= n; i ++){\n        if (!bo[i] && l[i][x] <= y * 2){//\u53bb\u627e\u6ca1\u6709\u7ecf\u8fc7\u7684\u4e14\u80fd\u5230\u7684\u70b9\n            bo[i] = 1;\n            dfs(i, y);\n        }\n    }\n}\ninline bool check(double b){\n    memset(bo, 0, sizeof(bo));\n    for (int i = 1; i <= n; i ++){//\u56e0\u4e3a\u6211\u4eec\u7684\u6570\u7ec4\u662f\u6709\u5e8f\u7684\uff0c\u6240\u4ee5\u5982\u679c\u5f53\u524d\u7684\u70b9\u5df2\u7ecf\u662f\u9ad8\u4e8e\u534a\u5f84\u4e86\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u548c\u63a5\u4e0b\u53bb\u7684\u6240\u6709\u70b9\u90fd\u4e0d\u80fd\u78b0\u5230\u5e95\uff0c\u526a\u679d\n    //\u7ecf\u6d4b\u8bd5\u8fd9\u4e2a\u526a\u679d\u8c8c\u4f3c\u4e0d\u52a0\u4e5f\u4e0d\u4f1aT\uff0c\u80fd\u526a\u679d\u5c31\u526a\uff0c\u8ba9\u65f6\u95f4\u66f4\u4f18\u79c0\u624d\u662f\u4e00\u4e2aoier\u8be5\u505a\u7684\n        if (a[i] . a <= b){\n            if (! bo[i]){\n                bo[i] = 1;\n                boo = 0;\n                dfs(i, b);\n                if (boo){\n                    return 1;\n                }\n            }\n        } else{\n            break;\n        }\n    }\n    return 0;\n}\nint main(){\n    m = read(), n = read();\n    for (int i = 1; i <= n; i ++){\n        a[i] . a = read();\n        a[i] . b = read();\n    }\n    sort(a + 1, a + 1 + n, cmp);//\u53ef\u4ee5\u526a\u679d\n    for (int i = 1; i < n; i ++){//\u5148\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\n        for (int j = i + 1; j <= n; j ++){\n            l[i][j] = sqrt(sqr (a[i] . b - a[j] . b) + sqr (a[i] . a - a[j] . a));\n            l[j][i] = l[i][j];\n        }\n    }\n    double answer = 0;\n    double left = 0, right = m;//\u4e8c\u5206\u7b54\u6848 \u8fb9\u4e3am\n    while ((right - left) >= 1e-5){//\u4fdd\u8bc1\u7cbe\u5ea6\n        double middle = (left + right) / 2;\n        // printf(\"%0.2lf %0.2lf %0.2lf\\n\", left, right, middle);\n        if (check(middle)){\n            answer = middle;\n            right = middle;\n        } else{\n            left = middle;\n        }\n    }\n    printf(\"%0.2lf\", answer);\n}\n```\n",
        "postTime": 1582782020,
        "uid": 46586,
        "name": "to_be_continued",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1783 \u3010\u6d77\u6ee9\u9632\u5fa1\u3011"
    },
    {
        "content": "## \u5e76\u67e5\u96c6+\u751f\u6210\u6811\n\u9898\u76ee\u8981\u6c42\uff1a\u7b80\u5355\u6765\u8bb2\uff0c\u5e94\u8be5\u662f\u4f7f\u5de6\u53f3\u4e24\u7aef\u76f8\u8fde\u901a\uff0c\u4e14\u6700\u5927\u7684\u90a3\u4e2a\u8fb9\u6700\u5c0f\u3002\n\n\u5206\u6790\u4e00\u4e0b\uff0c\u5b9e\u9645\u4e0a\u7c7b\u4f3c\u4e0eP1396\u8425\u6551\uff0c\u672c\u8d28\u4e0a\uff0c\u5e76\u4e0d\u8981\u6c42\u662f\u6700\u77ed\u8def\uff0c\u800c\u662f\u5728\u5c06\u8fb9\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u540e\u7528\u524dn\u6761\u8fb9\u5c31\u80fd\u4f7f\u5de6\u53f3\u4e24\u7aef\u76f8\u8fde\uff0c\u4e14\u4f7fn\u6700\u5c0f\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u7528\u514b\u9c81\u65af\u5361\u5c14\u7684\u7b97\u6cd5\uff0c\u5c06\u8fb9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u4f9d\u6b21\u52a0\u5165\u6811\u4e2d\uff0c\u5982\u679c\u8bf4fa[l]==fa[r]\uff0c\u5373\u5de6\u8fb9\u7684\u6839\u548c\u53f3\u8fb9\u7684\u6839\u8fde\u5230\u4e00\u8d77\uff0c\u90a3\u4e48\uff0c\u5c31\u662f\u8fd9\u4e2a\u8fb9\u7684\u4e00\u534a\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\uff1a\n```\nfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&f[i].x,&f[i].y);\n\t\tfor(int j=1;j<i;j++)add(i,j);\n\t\tft[++num].fr=l;ft[num].to=i;ft[num].w=(double)(f[i].x);\n\t\tft[++num].fr=r;ft[num].to=i;ft[num].w=(double)(n)-(double)(f[i].x);\n\t}\t\n```\n\u9996\u5148\u662f\u5efa\u8fb9\u7684\u8fc7\u7a0b\uff08\u5173\u952e\uff09\uff0c\u6bcf\u8f93\u5165\u4e00\u4e2a\u70b9\uff0c\u90fd\u9700\u8981\u5c06\u7b2ci\u4e2a\u70b9\u4e2a1\uff5ei-1\u4e2a\u70b9\u4e00\u6b21\u5efa\u8fb9\uff0c\u8fb9\u6743\u4e3a\u957f\u5ea6\u7684\u4e00\u534a\uff08\u56e0\u4e3a\u5706\u662f\u4ece\u4e24\u8fb9\u90fd\u53ef\u4ee5\u8d70\u7684\uff09\uff0c\u540c\u65f6\uff0c\u5728\u4e0b\u9762\u5728\u52a0\u4e0a\u548cl,r\uff0c\u7684\u5efa\u8fb9\uff0c\uff08\u63d0\u524d\u8bbe\u7f6e\u597dl\u548cr\uff09\u8fb9\u6743\u4e3a\u6a2a\u5750\u6807\u548cn-\u6a2a\u5750\u6807\uff0c\u6700\u540e\uff0c\u751f\u6210\u6811\uff0c\u8f93\u51fa\u8fb9\u5373\u53ef\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,num,fa[20000],l,r;\nstruct poin{\n\tint x,y;\n}f[8001];\nstruct edge{\n\tint fr,to;\n\tdouble w;\n}ft[800*8001];\nvoid add(int a,int b){\n\tdouble w1=sqrt(pow(f[a].x-f[b].x,2)+pow(f[a].y-f[b].y,2))/2.0;\n\tft[++num].fr=a;ft[num].to=b;ft[num].w=w1;\n}\nint fin(int x){\n\tif(fa[x]!=x)fa[x]=fin(fa[x]);\n\treturn fa[x];\n}\nbool cmp(edge a,edge b){return a.w<b.w;}\nint main(){\n\tcin>>n>>m;\n\tl=m+1,r=m+2;\n\tfor(int i=1;i<=m+2;i++)fa[i]=i;\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&f[i].x,&f[i].y);\n\t\tfor(int j=1;j<i;j++)add(i,j);\n\t\tft[++num].fr=l;ft[num].to=i;ft[num].w=(double)(f[i].x);\n\t\tft[++num].fr=r;ft[num].to=i;ft[num].w=(double)(n)-(double)(f[i].x);\n\t}\t\n\tsort(ft+1,ft+1+num,cmp);\n\tfor(int i=1;i<=num;i++){\n\t\tint r1=fin(ft[i].fr),r2=fin(ft[i].to);\n\t\tif(r1!=r2)fa[r2]=r1;\n\t\tif(fin(l)==fin(r)){\n\t\t\tprintf(\"%.2lf\\n\",ft[i].w);\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n```\n",
        "postTime": 1578381263,
        "uid": 287225,
        "name": "thelast",
        "ccfLevel": 0,
        "title": "\u6d77\u6ee9\u9632\u5fa1"
    },
    {
        "content": "# \u4e8c\u5206\u5e76\u67e5\u96c6\u3002\n\n\u5e76\u67e5\u96c6\u7684\u601d\u8def\u548c [\u5976\u916a](https://www.luogu.org/problem/P3958)\u975e\u5e38\u76f8\u4f3c\uff0c \u5c31\u662f\uff0c \u5148\u8054\u901a\u518d\u679a\u4e3e\u5de6\u53f3\u4e24\u8fb9\u7684\u7684\u7ad9\u70b9\u68c0\u67e5\u662f\u5426\u8fde\u901a\u3002\u5976\u916a\u5c31\u662f\u679a\u4e3e\u4e0a\u4e0b\u7684\u6d1e\u68c0\u67e5\u662f\u5426\u8054\u901a\u3002\n\n\u8fd9\u9898\u7684\u96be\u70b9\u5728\u4e8e\u4e8c\u5206\u7b54\u6848\uff0c \u80fd\u4f7f\u7528\u4e8c\u5206\u7b54\u6848\u7684\u8bc1\u660e\u5f88\u663e\u7136\uff0c \u56e0\u4e3a\u534a\u5f84\u592a\u5c0f\uff0c \u4e0d\u80fd\u6ee1\u8db3\u7b54\u6848\uff0c \u6b64\u65f6\u9700\u8981\u5c06\u534a\u5f84\u6269\u5927\uff0c \u534a\u5f84\u592a\u5927\uff0c \u4e0d\u6ee1\u8db3\u6700\u4f18\u6027\u8d28\uff0c \u5c06\u534a\u5f84\u7f29\u5c0f\u3002\n\n\u8fd9\u9053\u9898\u9690\u542b\u7684\u5b9e\u9645\u662f\u5728\u8be2\u95ee\uff1a\n\t\n    \u80fd\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u5c0f\u503c\u3002\n\u7c7b\u4f3c\u8fd9\u6837\u7684\u5904\u4e8e\u4e24\u4e2a\u4e34\u754c\u7684\u95ee\u9898\u5f88\u53ef\u80fd\u5c31\u662f\u4e8c\u5206\u7b54\u6848\u3002\n\u5269\u4e0b\u7684\u7ec6\u8282\u90fd\u5f88\u7b80\u5355\uff0c\u6211\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86\u3002\n\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cctype>\n#include <algorithm>\n#include <cmath>\ntemplate<typename T> \ninline void read(T &x) {\n    x = 0; int f = 1; char ch = getchar();\n    while(!isdigit(ch)) {if(ch == '-') f = -1; ch = getchar();}\n    while(isdigit(ch)) {x = x * 10 + ch - '0'; ch = getchar();}\n    x *= f;\n}\nconst int N = 1e3 + 5;\nconst double eps = 1e-5;\n\nusing namespace std;\nint n, m;\nint fa[N];\nint find(int x) {\n    return x == fa[x] ? x : (fa[x] = find(fa[x]));\n}\nstruct node {\n    int x, y; \n    bool operator < (const node &rhs) {\n        return x < rhs.x;\n    }\n}t[N];\ndouble operator + (const node& a, const node& b) {\n    double x = (double)a.x - b.x, y = (double)a.y - b.y;\n    return sqrt(x * x + y * y);\n}\nbool check(double mid) {\n    for(int i = 1; i <= m; i++) fa[i] = i;\n    for(int i = 1; i <= m; i++) {\n        for(int j = i + 1; j <= m; j++) {\n            if(t[i] + t[j] <= 2 * mid) {\n                int x = find(i), y = find(j);\n                if(x == y) continue;\n                fa[x] = y;\n            }\n        }\n    }\n    for(int i = 1; i <= m; i++) {\n        for(int j = 1; j <= m; j++) {\n            if(t[i].x <= mid && n - t[j].x <= mid) {\n                int x = find(i), y = find(j);\n                if(x == y) return true;\n            }\n        }\n    }\n    return false;\n}\nint main() {\n    read(n), read(m);\n    for(int i = 1; i <= m; i++) \n        read(t[i].x), read(t[i].y);\n    sort(t + 1, t + 1 + m);\n    double l = 0, r = 1e3;\n    while(r - l > eps) {\n        double mid = (l + r) / 2;\n        if(check(mid)) r = mid;\n        else l = mid;\n    }\n    printf(\"%.2f\\n\", l);\n}\n```\n",
        "postTime": 1573110806,
        "uid": 111617,
        "name": "RoRoyyy",
        "ccfLevel": 0,
        "title": "P1783"
    },
    {
        "content": "### \u4e8c\u5206\u7b54\u6848+\u5e76\u67e5\u96c6\n\n------------\n\n\u6211\u7684\u60f3\u6cd5\u5c31\u662f\u5148\u4f7f\u4ed6\u4eec\u7684\u8ddd\u79bb\u6709\u5e8f\uff08sort\uff09\uff0c\u4e8c\u5206\u7b54\u6848\uff0c\u6bcf\u6b21\u7f29\u5c0f\u67e5\u627e\u7684\u8303\u56f4\uff0c\u627e\u5230\u7b54\u6848\u8f93\u51fa.\n\n\u552f\u4e00\u7684\u96be\u70b9\u5728\u4e8e\u4ec0\u4e48\u65f6\u5019\u5224\u65ad\u5df2\u7ecf\u662f\u8054\u901a\u7684\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u663e\u7136\u7684\u5f97\u5230\uff0c0\u548cn+1\u521a\u597d\u53ef\u4ee5\u8fde\u8d77\u6765\u7684\u65f6\u5019\u5c31\u662f\u6700\u5c0f\u503c\u4e86\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u8054\u901a\u6240\u6709\u7684\u70b9\uff0c\u53ea\u662f\u9700\u8981\u8ba90\u70b9\u4e0en+1\u70b9\u8fde\u63a5\uff0c\u4e3e\u4e2a\u4f8b\u5b50\u5c31\u662f\u8bf4\u6211\u4eec\u53ef\u4ee5\u8fde\u63a50--1,1--3,3--n+1;\u6211\u4eec\u662f\u53ef\u4ee5\u8df3\u8fc72\u8fd9\u4e2a\u70b9\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u7684\u6027\u8d28\uff0c\u6bcf\u6b21\u5408\u5e76\u5b8c\u6210\u540e\u6c42\u4e00\u6b21n+1\u8282\u70b9\u4e0e0\u8282\u70b9\u7684\u7956\u5148\uff0c\u5982\u679c\u662f\u540c\u4e00\u7956\u5148\u7684\u8bdd\u5c31\u8bc1\u660e\u53ef\u4ee5\u4e86\uff1b\n\n\u6ce8\u610f\u4e8b\u9879\n------------\n\n\u5e76\u67e5\u96c6\u521d\u59cb\u5316\u9700\u4ece0\u5f00\u59cb\uff08\u8bfb\u9898\uff09\uff1b\n\n\u6bcf\u6b21\u5224\u65ad\u6210\u7acb\u90fd\u8981\u521d\u59cb\u5316\u5e76\u67e5\u96c6\uff1b\n\n------------\n\n\u8be6\u7ec6\u7684\u89e3\u7b54\u6211\u90fd\u6ce8\u91ca\u5728\u4ee3\u7801\u4e0a\uff0c\n\u4ee3\u7801\u5982\u4e0bQVQ\u2014\u2014\n------------\n```c\n#include <bits/stdc++.h>\nint wide,num,sum;//\u5206\u522b\u662f\u5bbd\u5ea6\uff0c\u70b9\u7684\u4e2a\u6570\uff0c\u8fb9\u7684\u4e2a\u6570 \nint fa[1000010];\nusing namespace std;\nstruct line{\n        int u,v;\n        double dis;\n}bian[1000010];//\u8fd9\u662f\u5b58\u8fb9\u7684\u7ed3\u6784\u4f53 \nstruct Node{\n        int x,y;\n}dian[1000010]; //\u8fd9\u662f\u5b58\u70b9\u7684\u7ed3\u6784\u4f53 \nbool cmp(line a,line b){\n    return a.dis < b.dis;\n}\nint findfa(int v){//\u67e5\u627e\u7236\u4eb2\u8282\u70b9\uff0c\u8def\u52b2\u538b\u7f29 \n        if(fa[v] == v)return v;\n        int faa= findfa(fa[v]);\n        fa[v] = faa;\n        return faa;\n}\nvoid u(int a,int b){//\u5408\u5e76 \n    int faA = findfa(a);\n    int faB = findfa(b);\n    if(faA != faB){\n        fa[faA] = faB;\n    }\n}\nbool check(double ans){\n\tfor(int i=0;i<num;i++)fa[i]=i;//\u5f88\u91cd\u8981\uff0c\u6bcf\u67e5\u627e\u4e00\u4e2a\u7b54\u6848\u5c31\u5f97\u521d\u59cb\u5316\u5e76\u67e5\u96c6 \n\tint i=1;\n\twhile(bian[i].dis<=2*ans&&i<=sum){//\u8054\u901a\u7684\u6761\u4ef6\uff1a\u5fc5\u987b\u5728\u4e24\u500d\u7684\u534a\u5f84\u5185\uff08\u753b\u4e24\u4e2a\u7d27\u8d34\u5706\u5c31\u660e\u767d\u4e86\uff09 \n\t\tu(bian[i].u,bian[i].v);\n\t\ti++;\n\t}\n\tfor(int i=0;i<num;i++){\n\t\tfor(int j=0;j<num;j++){\n\t\t\tif(findfa(i) == findfa(j)&&dian[i].x - ans < 0 && dian[j].x + ans >wide)return 1;\n\t\t}// dian[i].x - ans < 0 && dian[j].x + ans >wide\u4fdd\u8bc1\u70b9\u4e0e\u70b9\u8054\u901a\u7684\u540c\u65f6\u5de6\u53f3\u8fb9\u754c\u4e0d\u4f1a\u51fa\u73b0\u6f0f\u6d1e \n\t} \n\treturn 0;\n}\ndouble zhao(double l,double r){\n\twhile(l+0.001<r){//\u7cbe\u5ea6\u4e3a0.001\uff0c\u9700\u8981\u4e00\u4e2a\u7cbe\u5ea6 \n\t\tdouble mid=(l+r)/2;\n\t\tif(check(mid))r=mid;//\u4e8c\u5206\u8fc7\u7a0b \n\t\telse l=mid;\n\t}\n\treturn r;\n}\nint main(){\n\tcin>>wide>>num;\n\tfor(int i=0;i<num;i++)fa[i]=i;//\u5c06\u5e76\u67e5\u96c6\u521d\u59cb\u5316 \n\tfor(int i=0;i<num;i++){\n\t\tcin>>dian[i].x>>dian[i].y;\n\t}\n\tfor(int i=0;i<num;i++){\n\t\tfor(int j=i;j<num;j++){\n\t\t\tbian[++sum].u=i;\n\t\t\tbian[sum].v=j;\n\t\t\tbian[sum].dis=sqrt(1.0 * (dian[i].x - dian[j].x) * (dian[i].x - dian[j].x) + 1.0*(dian[i].y - dian[j].y) * (dian[i].y - dian[j].y));\n\t\t\t//\u4e24\u70b9\u95f4\u8ddd\u79bb\u516c\u5f0f \n\t\t}\n\t}\n\tsort(bian+1,bian+sum+1,cmp);//\u8ddd\u79bb\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\tprintf(\"%.2lf\\n\",zhao(0.0,100005.0));\n\treturn 0; //\u529f\u5fb7\u5706\u6ee1\n} \n```\n\n\n------------\n\u6c42\u8fc7\u8c22\u8c22",
        "postTime": 1566197119,
        "uid": 82128,
        "name": "Yummy_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1783 \u3010\u6d77\u6ee9\u9632\u5fa1\u3011"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u6ca1\u4eba\u5199\u6700\u77ed\u8def\uff08\u4e8c\u5206\u7b54\u6848\u591a\u9ebb\u70e6\u554aqwq\uff09\n\n\u5806\u4f18\u5316dijkstra\n\n\u601d\u8def\u697c\u4e0a\u90fd\u8bb2\u7684\u5f88\u660e\u767d\u4e86\uff0c\u56e0\u4e3a\u8981\u6c42\u8def\u5f84\u6700\u5927\u503c\u6700\u5c0f\uff0c\u6240\u4ee5\u53ea\u8981\u6539\u4e00\u4e0b\u677e\u5f1b\u7684\u5f0f\u5b50\u5c31\u597d\u4e86\u2193\n```cpp\nif (dis[v]>max(dis[u],e[i].val)){\n\tdis[v]=max(dis[u],e[i].val);\n\tq.push(mp(dis[v],v));\n}\n```\n\u8fd9\u6837dis[i]\u5c31\u662f\u6e90\u70b9\u5230i\u7684\u8def\u5f84\u4e2d\u6700\u5927\u7684\u8fb9\u662f\u591a\u5c11\uff0c\u4e14\u8fd9\u6761\u6700\u5927\u7684\u8fb9\u6700\u5c0f\n\n\u4ee5\u4e0b\u5b8c\u6574\u4ee3\u7801\u2193\u2193\u2193\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<queue>\n#include<vector>\n#define maxm 850\n#define pp pair<double,int>//\u6ce8\u610f\u4e0d\u8981\u987a\u624b\u5199\u6210int,int \n#define mp make_pair\nusing namespace std;\nint n,m,tot;\nint h[maxm],vis[maxm];\ndouble px[maxm],py[maxm],dis[maxm];\nstruct node{\n\tint to,nxt;\n\tdouble val;\n}e[maxm*maxm*2];\n\ninline void add(int x,int y,double z){\n\te[++tot].to=y;\n\te[tot].nxt=h[x];\n\te[tot].val=z;\n\th[x]=tot;\n\treturn;\n}//\u5efa\u8fb9 \n\ninline double calc(int i,int j){\n\treturn sqrt((px[i]-px[j])*(px[i]-px[j])+(py[i]-py[j])*(py[i]-py[j]));\n}//\u8ba1\u7b97\u4e24\u70b9\u8ddd\u79bb \n\nvoid dij(){\n\tpriority_queue<pp,vector<pp >,greater<pp> > q;//\u5806\u4f18\u5316\n\tfor (int i=1;i<=m+5;++i) dis[i]=1e9;//\u521d\u59cb\u5316 \n\tdis[m+1]=0;//\u4ecem+1\u51fa\u53d1 \n\tq.push(mp(0,m+1));\n\twhile (!q.empty()){\n\t\tint u=q.top().second;\n\t\tq.pop();\n\t\tif (vis[u]) continue;\n\t\tvis[u]=1;\n\t\tfor (int i=h[u];i;i=e[i].nxt){\n\t\t\tint v=e[i].to;\n\t\t\tif (dis[v]>max(dis[u],e[i].val)){\n\t\t\t\tdis[v]=max(dis[u],e[i].val);//\u677e\u5f1b \n\t\t\t\tq.push(mp(dis[v],v));\n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\n\nint main(){\n\tcin>>n>>m;\n\tfor (int i=1;i<=m;++i){\n\t\tcin>>px[i]>>py[i];\n\t\tadd(m+1,i,px[i]);\n\t\tadd(i,m+1,px[i]);\n\t\tadd(m+2,i,double(n)-px[i]);\n\t\tadd(i,m+2,double(n)-px[i]);\n\t\t//m+1\u662f\u6c99\u6ee9\u7684\u5de6\u8fb9\u754c\uff0cm+2\u662f\u6c99\u6ee9\u7684\u53f3\u8fb9\u754c\n\t\t//\u6c42\u7684\u5c31\u662fm+1\u5230m+2\u7684\u8def\u5f84\u6700\u5927\u503c\u6700\u5c0f \n\t}\n\tfor (int i=1;i<m;++i){\n\t\tfor (int j=i+1;j<=m;++j){\n\t\t\tadd(i,j,calc(i,j)/2.0);\n\t\t\tadd(j,i,calc(i,j)/2.0);\n\t\t}\n\t}//\u4e24\u4e24\u52a0\u8fb9\uff0c\u4e24\u4e2a\u5706\u76f8\u5207\u65f6\u521a\u597d\u8054\u901a\uff0c\u6240\u4ee5\u8981\u9664\u4ee52 \n\tdij();\n\tprintf(\"%.2lf\",dis[m+2]);//\u4fdd\u7559\u4e24\u4f4d\u5c0f\u6570 \n\treturn 0;\n}\n```",
        "postTime": 1536160297,
        "uid": 50881,
        "name": "saligia",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1783 \u3010\u6d77\u6ee9\u9632\u5fa1\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u7a0b\u5e8f\u7684\u601d\u8def\u5c31\u662f\u697c\u4e0b\u6240\u8bf4\u7684\u7b2c\u4e8c\u79cd\u601d\u8def\uff1a\u7528Kruskal\u4f9d\u6b21\u52a0\u6700\u5c0f\u8fb9\uff0c\u76f4\u5230\u8fb9\u754c\u88ab\u8fde\u8d77\u6765\u3002\n\n\n\u601d\u8def\uff1a\n\n\u8f93\u5165N\uff0cM\u4ee5\u53caM\u4e2a\u4f4d\u7f6e\u3002\n\n\n\u7531\u4e8e\u8fd9\u91cc\u8f93\u5165\u7684\u662fM\u4e2a\u4fe1\u53f7\u5854\u7684\u4f4d\u7f6e\uff0c\u800c\u4e0d\u662f\u8fd9\u4e9b\u5854\u4e4b\u95f4\u7684\u8def\uff0c\u6240\u4ee5\u5728\u8fd9\u9898\u91cc\u9700\u8981\u7528\u53cc\u91cd\u5faa\u73af\u5c06\u6bcf\u4e2a\u70b9\u4e4b\u95f4\u5efa\u4e00\u6761\u8fb9\u3002\n\n\u8fd8\u9700\u8981\u5c06\u8fd9M\u4e2a\u70b9\u90fd\u4e0e\u4e24\u4e2a\u8fb9\u754c\u4e4b\u95f4\u5efa\u4e00\u6761\u8fb9\uff0c\u4e5f\u5c31\u662f\u201c\u53ea\u7528\u8fd9\u4e2a\u5854\uff0c\u5de5\u4f5c\u534a\u5f84\u4e3an-x[i]\u201d\u7684\u60c5\u51b5\u3002\n\n\n\u7136\u540e\u5c31\u6309\u7167Kruskal\u7684\u56fa\u5b9a\u5957\u8def\u5148\u6392\u5e8f\uff0c\u518d\u4f9d\u6b21\u52a0\u6700\u5c0f\u8fb9\uff0c\u76f4\u5230\u8fb9\u754c\u88ab\u8fde\u5728\u4e00\u8d77\u3002\n\n\n\u7a0b\u5e8f\uff1a\n\n\n        \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,i,j,k,pre[10005],x[1005],y[1005];\ndouble ans,temp;\nstruct road\n{\n    int first;\n    int second;\n    double dis;\n} a[1000000];\nbool cmp(road x,road y)\n{\n    return x.dis<y.dis;\n}\nint sch(int x)\n{\n    if (pre[x]==x) return x;\n    pre[x]=sch(pre[x]);\n    return pre[x];\n}\nvoid BuildRoad()\n{\n    for (i=1;i<m;i++)\n    {\n        for (j=i+1;j<=m;j++)\n        {\n            k++;\n            a[k].first=i;\n            a[k].second=j;\n            temp=sqrt((abs(x[i]-x[j])*abs(x[i]-x[j]))+(abs(y[i]-y[j])*abs(y[i]-y[j])))/2.0;\n            a[k].dis=temp;\n        }\n    }\n    for (i=1;i<=m;i++)\n    {\n        k++;\n        a[k].first=i;\n        a[k].second=0;\n        a[k].dis=x[i];\n        k++;\n        a[k].first=i;\n        a[k].second=n+1;\n        a[k].dis=n-x[i];\n    }\n}\nint main()\n{\n    cin>>n>>m;\n    for (i=1;i<=n*n;i++) pre[i]=i;\n    for (i=1;i<=m;i++)\n    {\n        cin>>x[i]>>y[i];\n    }\n    BuildRoad();\n    sort(a+1,a+k+1,cmp);\n    i=0;\n    while (sch(0)!=sch(n+1))\n    {\n        i++;\n        if (sch(a[i].first)!=sch(a[i].second))\n        {\n            pre[sch(a[i].first)]=sch(a[i].second);\n            ans=max(ans,a[i].dis);\n        }\n    }\n    printf(\"%.2f\",ans);\n}\n```",
        "postTime": 1494221756,
        "uid": 12613,
        "name": "PTC06",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1783 \u3010\u6d77\u6ee9\u9632\u5fa1\u3011"
    },
    {
        "content": "## \u9898\u610f\r\n\u7ed9\u5b9a\u4e24\u6761\u76f4\u7ebf $x=0$ \u4e0e $x=n$\uff0c\u4ee5\u53ca\u82e5\u5e72\u4e2a\u5706\u5fc3\u5750\u6807 $(x_i,y_i)$\uff0c\u6c42\u6700\u5c0f\u7684\u534a\u5f84 $r$\uff0c\u4f7f\u5f97\u82e5\u5e72\u5706\u5fc3\u4e3a\u7ed9\u5b9a\u5750\u6807\uff0c\u534a\u5f84\u4e3a $r$ \u7684**\u5706\u7684\u5e76**\u7ec4\u6210\u7684**\u8fde\u7eed\u56fe\u5f62**\u7684\u5de6\u8fb9\u754c $\\le 0$\uff0c\u53f3\u8fb9\u754c $\\ge n$\u3002 \uff08\u8fd9\u91cc\u7684\u8fde\u7eed\u56fe\u5f62\u53ef\u4ee5\u5728\u67d0\u4e9b\u5730\u65b9\u4e3a\u4e24\u5706\u76f8\u5207\uff0c\u5373\u53ea\u6709\u4e00\u4e2a\u516c\u5171\u70b9\uff09\r\n\r\n\u8bf4\u4eba\u8bdd\u5c31\u662f\uff1a\u6c42\u6700\u5c0f\u7684\u534a\u5f84 $r$\uff0c\u4f7f\u5f97\u8fd9\u4e9b\u5706\u7684\u5e76\u7ec4\u6210\u7684\u56fe\u5f62\u201c\u6a2a\u8d2f\u201d\u533a\u57df $0 \\le x \\le n$\u3002\u5982\u4e0b\u56fe\r\n\r\n![picture](https://cdn.luogu.com.cn/upload/image_hosting/2btubx42.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\r\n\r\n\u9ed1\u8272\u7684\u5706\u662f $r=r_1$ \u65f6\u7684\u60c5\u51b5\uff0c\u663e\u7136\u4e0d\u6ee1\u8db3\u9898\u610f\uff0c\u800c\u7ea2\u8272\u7684\u5706\u662f $r=r_2$ \u65f6\u7684\u60c5\u51b5\uff0c\u6ee1\u8db3\u9898\u610f\u3002\u800c\u4e14\u7531\u4e8e\u4e2d\u95f4\u9760\u53f3\u7684\u4e24\u5706\u6b64\u65f6\u6070\u597d\u76f8\u5207\uff0c~~\u663e\u7136~~ $r_2$ \u5c31\u662f\u7b54\u6848\u3002\r\n\r\n## \u5404\u79cd\u65b9\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\r\n\uff08\u6b64\u5904\u6839\u636e\u9898\u610f\u548c\u5404\u79cd\u65b9\u6cd5\uff0c\u53ef\u8ba4\u4e3a\u70b9\u6570\u8bb0\u4e3a $M+2$\uff0c\u8fb9\u6570\u4e0e\u4e4b\u6210\u5e73\u65b9\u5173\u7cfb\uff0c\u590d\u6742\u5ea6\u5206\u6790\u65f6\u4ee5 $M$ \u548c $M^2$ \u8bb0\u3002\r\n\r\n### \u4e8c\u5206 + $\\text{Dijkstra } or$ \u641c\u7d22\uff08\u7a20\u5bc6\u56fe\u66f4\u9002\u5408\u7528\u65e0\u5806\u4f18\u5316\u7684\uff09\uff1a\r\n$O(M^2 \\log M^2)=O(M^2 \\log M)$\uff08\u6b64\u5904 $M^2$ \u4e3a\u8fb9\u6570\uff0c\u6392\u5e8f\u540e\u4e8c\u5206\uff0c\u4e24\u6b65\u90fd\u662f $O(M^2 \\log M)$\uff09\r\n### $\\text{Kruskal}$\uff1a\r\n\u540c\u4e0a\uff0c\u4e5f\u4e3a $O(M^2 \\log M)$\uff08\u4e3a\u4ec0\u4e48\u90a3\u4e48\u591a\u4eba\u4f1a\u62fc\u6210 $\\text{Kruscal}$\r\n### $\\text{Prim}$\uff1a\r\n\u4e0d\u52a0\u5806\u4f18\u5316\u4e3a $O(M^2)$\uff0c\u6b63\u786e\u6027\u89c1\u540e\u6587\u3002\u4e8e\u662f\u6211\u7801\u4e86\u4e00\u4e2a\u8bfb\u5165\u8f93\u51fa\u7528 $\\text{iostream}$\uff0c\u4e0d\u7528\u6307\u4ee4\u96c6\u3001$\\text{inline}$\u3001$\\text{register}$ \u76f4\u63a5\u8279\u5230\u65e0 $\\text{O2}$ \u6700\u4f18\u89e3 $\\text{rank 6}$ \u7684\u7a0b\u5e8f\uff08doge\r\n\r\n## \u9898\u76ee\u5206\u6790\r\n\u8fd9\u9898\u5982\u679c\u7528\u6700\u5c0f\u751f\u6210\u6811\u53ef\u4ee5\u4e0d\u7528\u4e8c\u5206\u3002\u56e0\u4e3a\u5b83\u80fd\u4fdd\u8bc1**\u9009\u4e2d\u7684\u8fb9\u6743\u503c\u603b\u548c**\u6700\u5c0f\u4e14**\u6700\u5927\u8fb9\u7684\u6743\u503c**\u6700\u5c0f\u3002\r\n\r\n\u5efa\u56fe\u7684\u65b9\u6cd5\u6bcf\u7bc7\u9898\u89e3\u90fd\u4e00\u6837\uff08\u4f3c\u4e4e\uff09\uff0c\u65e0\u975e\u5c31\u662f\u5c06\u8fb9\u754c\u7ebf\u4f5c\u4e3a\u4e24\u4e2a\u65b0\u70b9\uff08\u8bb0\u4f5c $0$ \u548c $M+1$\uff0c\u5176\u4ed6\u70b9\u4e3a $1,2,\\cdots,M$\uff09\uff0c\u6bcf\u4e24\u4e2a\u539f\u6709\u70b9\u4e4b\u95f4\u8fb9\u6743\u4e3a\u8ddd\u79bb\u9664\u4ee5 $2$\uff0c\u539f\u6709\u70b9\u5230\u8fb9\u754c\u4e4b\u95f4\u5efa\u8fb9\uff0c\u6743\u503c\u4e3a\u70b9\u5230\u76f4\u7ebf\u8ddd\u79bb\u3002\r\n\r\n\u53ea\u8981\u5728\u6c42\u6700\u5c0f\u751f\u6210\u6811\u65f6\uff0c\u6bcf\u4e00\u8f6e\u5224\u65ad $0$ \u548c $M+1$ \u662f\u5426\u8fde\u901a\u5c31\u884c\u4e86\u3002\r\n\r\n~~\u4f17\u6240\u5468\u77e5~~\uff0c\u5927\u591a\u6570\u4eba\u5199\u6700\u5c0f\u751f\u6210\u6811\u4ece\u6765\u53ea\u5199 $\\text{Kruskal}$\uff0c\u800c\u5fd8\u4e86\u4f20\u8bf4\u4e2d\u7684 $\\text{Prim}$\u3002$\\text{Kruskal}$\u5728\u7a00\u758f\u56fe\u4e2d\u5f88\u6709\u7528\uff0c\u4f46\u8fd9\u79cd\u5750\u6807\u5efa\u56fe\u7684\u7a20\u5bc6\u56fe\u7528 $\\text{Prim}$ \u66f4\u597d\u3002\uff08\u4f3c\u4e4e\u6ca1\u6709\u4eba\u7528 $\\text{Prim}$ \u5806\u4f18\u5316\uff0c\u6bd5\u7adf\u590d\u6742\u5ea6\u548c $\\text{Kruskal}$ \u5dee\u4e0d\u591a\uff0c\u4ee3\u7801\u8fd8\u96be\u5199\u4e00\u70b9\uff09\r\n\r\n## Prim \u6b63\u786e\u6027\u8bc1\u660e\r\n$\\text{Kruskal}$ \u7b97\u6cd5\u5728\u8fd9\u9898~~\u663e\u7136~~\u6b63\u786e\u3002\u56e0\u4e3a\u5373\u4f7f\u6709\u4e9b\u9009\u5165\u6700\u5c0f\u751f\u6210\u6811\u7684\u65e0\u7528\u8fb9\uff08\u5373\u6ca1\u6709\u51fa\u73b0\u5728 $0$ \u5230 $M+1$ \u8def\u5f84\u4e0a\u7684\u8fb9\uff09\uff0c\u7531\u4e8e\u5b83\u662f\u6309\u8fb9\u957f\u5ea6\u4f9d\u6b21\u9009\u8fb9\u7684\uff0c\u6240\u4ee5\u4e0d\u4f1a\u5f71\u54cd\u8def\u5f84\u4e0a\u8fb9\u957f\u5ea6\u7684\u6700\u5927\u503c\uff0c\u5373\u7b54\u6848\u3002\r\n\r\n\u4f46\u4f7f\u7528 $\\text{Prim}$ \u7b97\u6cd5\u65f6\uff0c\u5982\u679c\u4ece $0$ \u5f00\u59cb\u751f\u6210\u6811\uff0c\u628a\u6bcf\u6761\u65b0\u52a0\u5165\u7684\u8fb9\u4e2d\u6743\u503c\u6700\u5927\u7684\u4f5c\u4e3a\u7b54\u6848\uff08\u76f4\u5230 $M+1$ \u88ab\u6269\u5c55\u5165\u6811\uff0c\u7b97\u6cd5\u7ed3\u675f\uff09\uff0c\u7531\u4e8e\u8fb9\u957f\u65e0\u5e8f\uff0c\u4f1a\u4e0d\u4f1a\u6709\u4e9b\u65e0\u7528\u8fb9\u52a0\u5165\u751f\u6210\u6811\u4f7f\u7b54\u6848\u9519\u8bef\u5462\uff1f\r\n\r\n\u4e0d\u59a8\u8003\u8651\u53cd\u8bc1\u6cd5\u3002\u8bbe\u8fb9 $(u,v)$ \u4e3a\u6269\u5c55\u51fa\u7684 $\\text{MST}$ \u4e2d\u6700\u957f\u7684\uff0c\u5e76\u4e14\u662f\u65e0\u7528\u8fb9\u3002\u6839\u636e $\\text{Prim}$ \u7684\u627e\u70b9\u89c4\u5219\uff0c\u4e0d\u59a8\u8bbe $u$ \u5728\u5df2\u751f\u6210\u7684\u6811\u4e2d\uff0c$v$ \u662f $u$ \u6269\u5c55\u5f97\u5230\u7684\uff0c\u5e76\u4e14\u8bb0 $v$ \u88ab\u6269\u5c55\u5165\u751f\u6210\u6811\u4e2d\u4e4b\u524d\uff0c\u751f\u6210\u6811\u7684\u70b9\u96c6\u4e3a $S$\u3002\r\n\r\n\u90a3\u4e48\u8fd9\u4e00\u8f6e\u4e2d\uff0c$v$ \u662f\u79bb\u5df2\u751f\u6210\u7684\u6811\u6700\u8fd1\u7684\u672a\u8bbf\u95ee\u70b9\uff0c\u6240\u4ee5\u7b97\u6cd5\u4f1a\u6269\u5c55\u5230 $v$\uff0c\u4f46\u662f $(u,v)$ \u662f\u65e0\u7528\u8fb9\uff0c\u4e5f\u5c31\u662f\u8bf4\u540e\u9762\u7b97\u6cd5\u5e76\u6ca1\u6709\u4ece $v$ \u6269\u5c55\u5230 $M+1$ \u7684\u8def\u5f84\u3002\u6240\u4ee5\u5728\u82e5\u5e72\u8f6e\u4ece $v$ \u5f80\u5916\u6269\u5c55\u4ee5\u540e\uff0c\u6700\u7ec8\u901a\u5411 $M+1$ \u7684\u8def\u5f84\u4e00\u5b9a\u4f1a**\u4ece $S$ \u4e2d\u7684\u70b9**\u6269\u5c55\u5f97\u6765\u3002\u800c\u8fd9\u6761\u6269\u5c55\u7684\u8fb9\uff08**\u662f\u6709\u7528\u8fb9**\uff09\u957f\u5ea6\u4e00\u5b9a\u5927\u4e8e\u7b49\u4e8e $dist(u,v)$\u3002\u6240\u4ee5 $(u,v)$ \u80af\u5b9a\u4e0d\u662f\u6269\u5c55\u51fa\u7684 $\\text{MST}$ \u4e2d\u6700\u957f\u7684\u8fb9\uff0c\u4e0e\u9898\u610f\u77db\u76fe\u3002\r\n\r\n$\\text{Q.E.D.}$\r\n\r\n\uff08\u6ca1\u770b\u61c2\uff1f\u4e0a\u56fe\uff09\r\n\r\n![](https://cdn.luogu.com.cn/upload/image_hosting/ktz8sld7.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\r\n\r\n\u7ea2\u6846\u5185\u7684\u90fd\u662f $v$ \u53ca\u5176\u6269\u5c55\u51fa\u7684\u70b9,\u84dd\u6846\u5373\u4e3a\u4e0a\u6587\u7684 $S$\r\n\r\n![](https://cdn.luogu.com.cn/upload/image_hosting/yj9rv8ru.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\r\n\r\n\u6700\u7ec8\u4f1a\u6709\u4ece $S$ \u6269\u5c55\u51fa\u7684\u66f4\u957f\u6709\u7528\u8fb9\u3002\r\n\r\n~~\u4e8e\u662f\u6211\u4eec\u6109\u5feb\u5730\u6c34\u6389\u4e86\u4e00\u9053\u84dd\u9898~~\r\n\r\n## Code\r\n```cpp\r\n//0 -> x=0, M+1 -> x=N\r\n#include <iostream>\r\n#include <cstdio>\r\n#include <cmath>\r\n#define INF 1145141919.810\r\nusing namespace std;\r\nint n,m,x[803],y[803];\r\nbool vis[803]; \r\ndouble G[803][803],d[803];\t//G\u4e3a\u4e34\u63a5\u77e9\u9635\u5efa\u56fe\r\n\r\ndouble prim()\r\n{\r\n    fill(d,d+m+2,INF);\r\n    d[0]=0; double ans=0;\r\n    while(1)\r\n    {\r\n        int v; double dv=INF;\r\n        for(int i=0;i<=m+1;i++)\r\n            if(d[i]<dv&&!vis[i]) v=i,dv=d[i];\r\n        ans=max(ans,dv); vis[v]=1;\r\n        if(v==m+1) return ans;\t//\u53ea\u8981\u5230\u8fbe\u76ee\u6807\u5c31\u505c\u6b62\uff0c\u8fd4\u56de\u7b54\u6848\r\n        for(int i=0;i<=m+1;i++)\r\n            if(d[i]>G[v][i]&&!vis[i]) d[i]=G[v][i];\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    cin>>n>>m;\r\n    G[0][m+1]=G[m+1][0]=INF;\r\n    G[0][0]=G[m+1][m+1]=0;\r\n    for(int i=1;i<=m;i++)\r\n    {\r\n        cin>>x[i]>>y[i];\r\n        G[i][0]=G[0][i]=x[i];\t//\u70b9\u5230x=0\u8ddd\u79bb\r\n        G[i][m+1]=G[m+1][i]=n-x[i];\t//\u70b9\u5230x=n\u8ddd\u79bb\r\n    }\r\n    for(int i=1;i<=m;i++)\r\n        for(int j=1;j<=m;j++)   \r\n            G[i][j]=sqrt(double(pow(x[i]-x[j],2)+pow(y[i]-y[j],2)))/2;\r\n    printf(\"%.2lf\",prim());\r\n    return 0;\r\n}\r\n```",
        "postTime": 1629362955,
        "uid": 144044,
        "name": "XMK_\u840c\u65b0",
        "ccfLevel": 0,
        "title": "P1783 \u6d77\u6ee9\u9632\u5fa1 \u9898\u89e3"
    },
    {
        "content": "\u9898\u610f\uff1a\u9898\u76ee\u610f\u601d\u5462\u7ed9\u4f60\u7ed9\u51fa\u4e00\u4e9b\u5750\u6807\uff0c\u73b0\u5728\u8ba9\u4f60\u786e\u5b9a\u4e00\u4e2a\u6700\u5c0f\u7684\u534a\u5f84\uff0c\u4f7f\u5f97\u4ee5\u8fd9\n      \u4e9b\u5750\u6807\u4e3a\u5706\u5fc3\u7684\u5706\u3002\u80fd\u591f\u65e0\u7f1d\u8fde\u63a5\u7684\u8986\u76d6\u4f4f\u6574\u4e2a\u533a\u57df\u3002\n\u601d\u8def\uff1a\u6211\u4f7f\u7528\u7684\u6700\u5c0f\u751f\u6210\u6811\uff0c\u7528\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u7684\u5728\u6700\u5c0f\u751f\u6210\u6811\u4e0a\u7684\n      \u8def\u5f84\u4e0a\u7684\u6700\u5927\u503c\u3002\u5176\u5b9e\u8fd9\u4e2a\u7ef4\u62a4\u7684\u8fc7\u7a0b\u6211\u4eec\u53ef\u4ee5\u5148\u5c06\u6700\u5c0f\u751f\u6210\u6811\u8f6c\u5316\u4e3a\u6709\n      \u6839\u6811\uff0c\u7136\u540e\u4f7f\u7528LCA\u6765\u505a\uff0c\u4f46\u662f\u6570\u636e\u91cf\u5f88\u5c0f\uff0c\u6240\u4ee5\u5c31\u76f4\u63a5\u5f00\u4e86vector\u7136\u540e\n      \u9886\u63a5\u77e9\u9635\u6765\u5b58\u50a8\u6570\u636e\u3002\u6700\u540e\u679a\u4e3e\u4e00\u4e0b\u4e24\u4e2a\u70b9\uff0c\u4e00\u4e2a\u5de6\u8fb9\u6bcf\u4e00\u4e2a\u53f3\u8fb9\uff0c\u6700\u540e\n      \u7b54\u6848\u5c31\u662f\u5de6\u8fb9\u70b9\u8ddd\u79bb\u5de6\u8fb9\u754c\u7684\u503c\u548c\u53f3\u7aef\u70b9\u8ddd\u79bb\u53f3\u8fb9\u754c\u7684\u503c\u53d6\u4e00\u4e2a\u6700\u5927\u503c\u7136\n      \u540e\u548cdist\u3010\u5de6\u7aef\u70b9\u3011\u3010\u53f3\u7aef\u70b9\u3011/2\u7684\u503c\u53d6\u6700\u5927\u503c\u3002\uff08\u56e0\u4e3adist\u3010\u3011\u3010\u3011\n      \u5b58\u50a8\u7684\u662f\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u4e5f\u5c31\u662f\u4e24\u500d\u7684\u534a\u5f84\uff0c\u9898\u76ee\u8981\u6c42\u7684\u662f\u534a\u5f84\uff09\u3002\n\u5751\u70b9\uff1a\u5bf9\u4e8e\u70b9\u4e00\u5b9a\u8981\u6309\u7167\u884c\u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u4e00\u904d\u5e8f\uff0c\u4e0d\u7136\u524d\u4e09\u4e2a\u70b9wrong\u3002\u53ea\u6709\n      70\u5206\u3002\nAC\u4ee3\u7801\uff1a\n\n```c\n#include<bits/stdc++.h>\n#pragma GCC optimize(2)\n#define MAXN 810\n#define MAXP 55\n#define maxnode 50010\n#define sigma_size 26\n#define mod 1000000007\n#define INF 0x3f3f3f3f\n#define lc  (id<<1)\n#define rc  (id<<1|1)\nusing namespace std;\ntypedef long long LL;\n\nint n,m;\ndouble dist[MAXN][MAXN];\nstruct Edge\n{\n    int u,v;\n    double dis;\n    Edge(int u=0,int v=0,double dis=0.0):u(u),v(v),dis(dis){};\n    bool operator < (const Edge&rah) const\n    {\n        return dis>rah.dis;\n    }\n};\npriority_queue<Edge> Q;\nstruct point\n{\n    int x,y;\n    point(int x=0,int y=0):x(x),y(y){};\n};\nvector<point> pp;\nint pre[MAXN],xx,yy;\nvector<int> G[MAXN];\n\nbool comp(point A,point B)\n{\n    return A.x<B.x;\n}\n\nint Find(int x)\n{\n    return pre[x]==x?x:pre[x]=Find(pre[x]);\n}\n\ndouble show_dis(int a,int b)\n{\n    return sqrt((pp[a].x-pp[b].x)*(pp[a].x-pp[b].x)+(pp[a].y-pp[b].y)*(pp[a].y-pp[b].y)*1.0);\n}\n\nvoid init(int nn)\n{\n    for(int i=0;i<=nn;i++)\n        pre[i]=i;\n    for(int i=0;i<=nn;i++)\n        G[i].push_back(i);\n}\n\nint main()\n{\n    scanf(\"%d %d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d %d\",&xx,&yy);\n        pp.push_back({xx,yy});\n    }\n    sort(pp.begin(),pp.end(),comp);\n    init(m);\n    int mm=pp.size();\n    for(int i=0;i<mm;i++)\n    {\n        for(int j=i+1;j<mm;j++)\n        {\n            Q.push({i,j,show_dis(i,j)});\n        }\n    }\n    while(!Q.empty())\n    {\n        Edge X=Q.top();\n        Q.pop();\n        int xx=Find(X.u);\n        int yy=Find(X.v);\n        if(xx==yy)\n            continue;\n        pre[xx]=yy;\n        for(int i=0;i<G[xx].size();i++)\n        {\n            for(int j=0;j<G[yy].size();j++)\n            {\n                int uu=G[xx][i];\n                int vv=G[yy][j];\n                dist[uu][vv]=dist[vv][uu]=X.dis;\n            }\n        }\n        for(int i=0;i<G[xx].size();i++)\n        {\n            G[yy].push_back(G[xx][i]);\n        }\n    }\n    double maxn,minn;\n    minn=INF*1.0;\n    for(int i=0;i<mm;i++)\n    {\n        for(int j=i+1;j<mm;j++)\n        {\n            int xx=pp[i].x;\n            int yy=pp[j].x;\n            maxn=max(dist[i][j]/2,max(xx*1.0,(n-yy)*1.0));\n            minn=min(minn,maxn);\n        }\n    }\n    printf(\"%.2lf\\n\",minn);\n    return 0;\n}\n\n```\n\n      ",
        "postTime": 1577726491,
        "uid": 210155,
        "name": "abandentsky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1783 \u3010\u6d77\u6ee9\u9632\u5fa1\u3011"
    },
    {
        "content": "## \u53d1\u4e00\u7bc7\u597d\u770b\u7684Kruscal\u9898\u89e3\n\u4e25\u683c\u6309\u6a21\u677f\u5199\u7684Kruscal\uff0c\u6ca1\u6709\u7384\u5b66while\u3002\n\n## \u601d\u8def\uff1a\n1.\u5bf9\u8fb9\u7f18\u548c\u6bcf\u4e00\u4e2a\u70b9\u5782\u76f4\u5efa\u8fb9\u3002\n\n2.\u5bf9\u6bcf\u4e2a\u70b9\u5bf9\u4ee5\u5b83\u4eec\u4e4b\u95f4\u7684\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u7684$1/2$\u4e3a\u6743\u503c\u5efa\u8fb9\n### \u6ce8\u610f\uff1a\u672c\u4ee3\u7801\u56e0\u4e3a\u7384\u5b66\u53ef\u4ee5hack\n-------------\n\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n\nusing namespace std;\nint n,m,x[1010],y[1010];\nint f[1010];double ans;\nint bcj(int x)\n{\n\twhile(x!=f[x])x=f[f[x]];\n        return x;\n}\nstruct edg\n{\n\tint u,v;\n\tdouble w;\n}e[1000100];\nint cnt;\nbool cmp(edg a,edg b)\n{\n\treturn a.w<b.w;\n}\nvoid kruscal()\n{\n\tfor(int i=1;i<=cnt;i++)\n\t{\n\t\tint hu=bcj(0);\n\t\tint hv=bcj(m+1);\n\t\tif(hu==hv) return;\n\t\tint u=e[i].u;\n\t\tint v=e[i].v;\n\t\tint edu=bcj(u);\n\t\tint edv=bcj(v);\n\t\tif(edu==edv)continue;\n\t\tf[edu]=edv;\n\t\tans=e[i].w;\n\t\t\n\t}\n\t//printf(\"*\");\n}\nint main()\n{\n//\tfreopen(\"Age.in\",\"r\",stdin);\n//\tfreopen(\"Age.out\",\"w\",stdout);\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=0;i<=1010;i++)f[i]=i;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&x[i],&y[i]);\n\t\te[++cnt].u=0;\n\t\te[cnt].v=i;\n\t\te[cnt].w=x[i];\n\t\te[++cnt].u=m+1;\n\t\te[cnt].v=i;\n\t\te[cnt].w=((double)n-x[i]);\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tfor(int j=i+1;j<=m;j++)\n\t\t{\n\t\t\tdouble ww=sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]))*0.5;\n\t\t\te[++cnt].u=i;\n\t\t\te[cnt].v=j;\n\t\t\te[cnt].w=ww;\n\t\t}\n\t}\n\tsort(e+1,e+cnt+1,cmp);\n\tkruscal();\n\tprintf(\"%.2lf\",ans);\n}\n```",
        "postTime": 1572253833,
        "uid": 93292,
        "name": "\u79bb\u5b50\u952eIonic_Bond",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1783 \u3010\u6d77\u6ee9\u9632\u5fa1\u3011"
    },
    {
        "content": "~~\u6d1b\u5495\u7684\u7b97\u6cd5\u6807\u7b7e\u4ee4\u4eba\u5f77\u5fa8~~\n\n[P1783 \u6d77\u6ee9\u9632\u5fa1](https://www.luogu.org/problem/P1783)\n#### \u5176\u5b9e\u5854\u5c31\u662f\u4e2aKruskal\n\n~~\u5176\u5b9e\u53ef\u4ee5\u7b97\u662f\u677f\u5b50\u9898~~\n\n\u601d\u8def\u524d\u9762\u7684dalao\u8bf4\u7684\u5f88\u6e05\u695a\uff0c\u4f46\u662f\u4e2a\u4eba\u611f\u89c9\u524d\u9762\u4e24\u7bc7\u76f8\u540c\u601d\u8def\u7684\u9898\u89e3\u7ed9\u7684\u7801\u6709\u4e9b\u5730\u65b9\u6ca1\u9053\u7406\uff0c\n\n\u6bd4\u5982\n```cpp\n  for (i=1;i<=m;i++)\n    {\n        k++;\n        a[k].first=i;\n        a[k].second=0;\n        a[k].dis=x[i];\n        k++;\n        a[k].first=i;\n        a[k].second=n+1;\n        a[k].dis=n-x[i];\n    }\n}\n```\n\u8fd9\u91cc\u628a\u6240\u6709\u70b9\u548cn+1\u53f7\u70b9\u8fde\u8d77\u6765\uff0c\u867d\u7136\u672c\u8d28\u4e0a\u548c\u8fdem+1\u53f7\u5dee\u4e0d\u591a\uff0c\u4f46\u662f\u611f\u89c9\u5bb9\u6613\u5f15\u4eba\u8bef\u89e3\u554a\uff08\u4e0d\u77e5\u4e3a\u4f55\u524d\u9762\u4e24\u7bc7\u90fd\u662f\u8fd9\u6837\u3002\n\n\u4ee5\u53ca\u628a\u5e76\u67e5\u96c6f\u6570\u7ec4\u521d\u59cb\u5316\u5230n*n\u5927\u5c0f\uff0c\u4ee5\u53cadist\u53d6\u7edd\u5bf9\u503c\uff0cans\u53d6max\u7b49\u5176\u5b9e\u5b8c\u5168\u6ca1\u6709\u5fc5\u8981\u3002\n\n\u4f46\u662f\u6211\u4e3a\u4ec0\u4e48\u809d\u8fd9\u9898\u809d\u4e86\u8fd9\u4e48\u957f\u65f6\u95f4\u5462\uff08\u65e0\u610f\u4e2d\u66b4\u9732\u849f\u84bb\u672c\u8272\uff09\uff1f\n\n[uchada](https://www.luogu.org/space/show?uid=133194)\u5927\u4f6c\u8bf4\uff1a\u201c**double\u8f93\u51fa\u662f%lf\u800c\u4e0d\u662f%llf**\u201d\n\n~~\u6211\u592a\u96be\u4e86~~\n\n\u597d\u5427\u867d\u7136\u6211\u6bd4\u8f83\u83dc\uff0c\u4f46\u662f\u611f\u89c9\u6211\u7684\u7801\u8fd8\u662f\u5f88\u7b80\u7ec3\u6613\u61c2\u7684\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nint r(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nint x[1005],y[1005];\ndouble dist(int a,int b){\n\treturn sqrt((x[a]-x[b])*(x[a]-x[b])+(y[a]-y[b])*(y[a]-y[b]))/2.0;\n}\nint cnt;\nstruct edge{\n\tint u,v;double w;\n}e[640001];\nbool cmp(edge a,edge b){return a.w<b.w;}\nint f[1005];\nint find(int o){\n\tif(f[o]==o) return o;\n\treturn f[o]=find(f[o]);\n}\nint main(){\n\tint n=r(),m=r();\t\n\tfor(int i=1;i<=m;i++){\n\t\tx[i]=r(),y[i]=r();\n\t}\n\tfor(int i=1;i<m;i++)\n\t\tfor(int j=i+1;j<=m;j++){\n\t\t\te[++cnt].u=i;e[cnt].v=j;\n\t\t\te[cnt].w=dist(i,j);\n\t\t}\n\tfor(int i=1;i<=m;i++){\n\t\te[++cnt].u=i;e[cnt].v=0;\n\t\te[cnt].w=x[i];\n\t\te[++cnt].u=i;e[cnt].v=m+1;\n\t\te[cnt].w=n-x[i];\n\t}\n\tsort(e+1,e+cnt+1,cmp);\n\tfor(int i=0;i<=m+1;i++) f[i]=i;\n\tint i=0;double ans;\n\twhile(find(0)!=find(m+1)){\n\t\ti++;\n\t\tif(find(e[i].u)!=find(e[i].v)){\n\t\t\tf[find(e[i].u)]=find(e[i].v);\n\t\t\tans=e[i].w;\n\t\t}\n\t}\n\tprintf(\"%.2lf\\n\",ans);\n\treturn 0;\n}\n```\n _uchida\u592a\u5f3a\u4e86_ \n\n\n",
        "postTime": 1569749688,
        "uid": 134195,
        "name": "C712",
        "ccfLevel": 0,
        "title": "[\u9898\u89e3] P1783 \u6d77\u6ee9\u9632\u5fa1"
    },
    {
        "content": "\u8fd9\u9898\u53ef\u4ee5\u4e8c\u5206+BFS\n\n\u4e8c\u5206\u5de5\u4f5c\u534a\u5f84\uff0cbfs\u5224\u65ad\u80fd\u5426\u4ece\u5de6\u5230\u53f3\u8fde\u6210\u4e00\u6761\u7ebf\uff0c\u5373\u4ece\u67d0\u70b9\u51fa\u53d1\u7ecf\u8fc7\u5176\u4ed6\u70b9\u80fd\u5230\u8fbe\u4e24\u8fb9\u754c\uff080\uff0cn\uff09\uff1b\n\n\u901f\u5ea6\u8fd8\u662f\u6bd4\u8f83\u5feb\u7684\uff0c600ms\u5de6\u53f3\u3002\n\n```cpp\n    #include<cstdio>\n    #include<cmath>\n    #include<cstring>\n    #include<algorithm>\n    using namespace std;\n    int n,m,h[640001],np,lmx,rmx,x[801],y[801],st,ed;\n    bool vis[801];\n    struct rpg\n    {\n        int li,nx;\n        double ln;\n    }a[640001];//\u6700\u591a\u6709800*800=640000\u6761\u8fb9\n    double maxn,ans;\n    double ln(int i,int j)\n    {\n        return sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));\n    }\n    void add(int ls,int nx,double ln)\n    {\n        a[++np].li=h[ls];\n        a[np].nx=nx;\n        a[np].ln=ln;\n        h[ls]=np;\n    }\n    bool check(double mid)\n    {\n        memset(vis,0,sizeof(vis));\n        for(int i=1;i<=m;++i)\n        {\n            if(vis[i]) continue;\n            int q[801];\n            int hd=1,tl=1;\n            lmx=rmx=x[i];\n            q[hd]=i;\n            while(hd<=tl)\n            {\n                int nw=q[hd++];\n                for(int i=h[nw];i;i=a[i].li)\n                    if(a[i].ln<=mid&&!vis[a[i].nx])\n                    {\n                        q[++tl]=a[i].nx;\n                        vis[a[i].nx]=1;\n                        if(x[a[i].nx]<lmx)\n                            lmx=x[a[i].nx];//\u80fd\u5230\u7684\u6700\u5de6\u7aef\u5230\u5de6\u8fb9\u754c\u7684\u8ddd\u79bb\n                        if(x[a[i].nx]>rmx)\n                            rmx=x[a[i].nx];//\u80fd\u5230\u7684\u6700\u53f3\u7aef\u5230\u53f3\u8fb9\u754c\u7684\u8ddd\u79bb\n                        if(lmx<=mid&&rmx+mid>=n)\n                            return 1;//\u82e5\u5de6\u8fb9\u754c\u4e0e\u53f3\u8fb9\u754c\u5747\u80fd\u5230\u8fbe\uff0c\u5219\u53ef\u4ee5\u5c01\u9501\u6d77\u6ee9\n                    }\n            }\n        }\n        return 0;//\u4e0d\u80fd\u5b8c\u5168\u5c01\u9501\u6d77\u6ee9\n    }\n    void twice(double l,double r)\n    {\n        if((r-l)<=0.001)\n        {\n            ans=(r+l)/4;\n            return;\n        }\n        double mid=(l+r)/2;\n        if(!check(mid))\n            twice(mid,r);\n        else\n            twice(l,mid);\n    }\n    int main()\n    {\n        scanf(\"%d%d\",&n,&m);\n        for(int i=1;i<=m;++i)\n            scanf(\"%d%d\",&x[i],&y[i]);\n        for(int i=1;i<m;++i)\n            for(int j=i+1;j<=m;++j)\n            {\n                add(i,j,ln(i,j));\n                add(j,i,ln(i,j));\n            }\n        twice(0,10001);\n        printf(\"%.2lf\",ans);\n        return 0;\n    }\n\n```",
        "postTime": 1513170451,
        "uid": 31293,
        "name": "Adove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1783 \u3010\u6d77\u6ee9\u9632\u5fa1\u3011"
    }
]