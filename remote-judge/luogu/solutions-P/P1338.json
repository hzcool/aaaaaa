[
    {
        "content": "\u6211\u4eec\u8003\u8651\u628a\u8fd9\u4e2a\u95ee\u9898\u7f29\u5c0f\u8303\u56f4\u3002\n\n\u6bd4\u5982n=5\uff0c\u5728\u51b3\u5b9a\u4e86\u6700\u5c0f\u7684\u6570\u201c1\u201d\u7684\u4f4d\u7f6e\u4e4b\u540e\uff0c\u5269\u4e0b\u7684\u51e0\u4e2a\u6570\u662f2 3 4 5\uff0c\u4f46\u662f\u4ed6\u4eec\n\n\u5177\u4f53\u662f\u591a\u5c11\u6ca1\u5fc5\u8981\u5173\u5fc3\uff0c\u6211\u4eec\u53ea\u8981\u5173\u5fc3\u4ed6\u4eec\u7684**\u76f8\u5bf9\u5927\u5c0f\u5173\u7cfb**\u3002\n\n\u6240\u4ee5\u8003\u8651\u5b8c\u5f53\u524d\u6700\u5c0f\u7684\u6570\uff0c\u7b97\u51fa\u8fd9\u4e2a\u6570\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u7136\u540e\u51cf\u6389\u8fd9\u4e2a\u8d21\u732e\uff0c\n\n\u5c31\u53ef\u4ee5\u8f6c\u800c\u89e3\u51b3\u4e00\u4e2a\u66f4\u5c0f\u7684\u5b50\u95ee\u9898\u3002\uff08\u5373n-->n-1\uff09\n\n\u56de\u5230\u9898\u76ee\u4e0a\uff0c\u8981\u6c42\u662f\u6c42\u4e00\u4e2a\u6709m\u4e2a\u9006\u5e8f\u5bf9\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u6392\u5217\u3002\n\n\u6211\u4eec\u77e5\u9053\u4e00\u4e2a\u957f\u5ea6\u4e3an\u7684\u6392\u5217\u6700\u591a\u6709(n-1)\\*n/2\u4e2a\u9006\u5e8f\u5bf9\uff0c\u4e5f\u77e5\u9053\u4e00\u4e2a\u6392\u5217\u7684\u9006\u5e8f\u5bf9\u6570\u8d8a\u591a\uff0c\u6392\u5217\u5b57\u5178\u5e8f\u8d8a\u5927\u3002\n\n\u6240\u4ee5\u5982\u679c\u5f53\u524dm\u4e0d\u6bd4\u5f53\u524d\u7684(n-2)\\*(n-1)/2\uff08\u4e5f\u5c31\u662f\u51cf\u5c11\u4e00\u4e2a\u6570\u4e4b\u540e\u7684\u6700\u591a\u7684\u9006\u5e8f\u5bf9\u6570\uff09\u5927\uff0c\n\n\u5c31\u53ef\u4ee5\u76f4\u63a5\u628a\u5f53\u524d\u7684\u6700\u5c0f\u6570\u653e\u5728\u6700\u524d\u9762\uff0c\u8fd9\u80af\u5b9a\u662f\u6700\u4f18\u7684\u3002\n\n\u53cd\u4e4b\uff0c\u5219\u8003\u8651\u6700\u5c0f\u6570\u7684\u653e\u7f6e\u4f4d\u7f6e\u3002\n\n\u5047\u8bbe\u5f53\u524d\u6392\u5217\u957f\u4e3an\uff0c\u6700\u5c0f\u6570\u4e3aa\uff0c\u5219a\u6709n\u79cd\u653e\u6cd5\uff0c\u653e\u5728\u4ece\u5de6\u5230\u53f3\u7b2ci\u4e2a\u4f4d\u7f6e\u65f6\u4f1a\u751f\u6210i-1\u4e2a\u9006\u5e8f\u5bf9\n\n\uff08\u56e0\u4e3a\u5b83\u5de6\u8fb9\u6709i-1\u4e2a\u6bd4\u4ed6\u5927\uff09\u3002\n\n\u56e0\u4e3am\u5927\u4e8en-1\u957f\u5ea6\u6392\u5217\u6700\u591a\u6240\u80fd\u4ea7\u751f\u7684\u9006\u5e8f\u6570\uff0c\u6240\u4ee5a\u4e0d\u53ef\u80fd\u653e\u5728\u6700\u524d\u9762\uff0c\u5426\u5219\u4e0d\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u600e\u4e48\u529e\u5462\uff1f\u60f3\u5230\u4e4b\u524d\u8bf4\u7684\u9006\u5e8f\u5bf9\u8d8a\u591a\u5b57\u5178\u5e8f\u8d8a\u5927\uff0c\u6211\u4eec\u5c31\u5fc5\u987b\u8ba9\u5269\u4e0b\u7684\u6570\u80fd\u6784\u6210\u7684\u9006\u5e8f\u5bf9\u6570\u5c3d\u91cf\u5c0f\uff0c\u6240\u4ee5a\u8981\u653e\u5230\u6700\u540e\uff0c\u8fd9\u6837m\u51cf\u5c11\u7684\u6700\u591a\u3002\n\n\u653e\u5b8c\u4e86a\uff0c\u95ee\u9898\u5c31\u53d8\u6210\u4e86n-1\u548cm-(a\u7684\u8d21\u732e)\u7684\u5b50\u95ee\u9898\uff0c\u9012\u5f52\u6c42\u89e3\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6O(n)\u3002\n\n```cpp\ntypedef long long ll;\nll n,m,a[50005];\nint main(){\n    scanf(\"%lld%lld\\n\",&n,&m);\n    ll lst=n,fst=1;\n    for(int i=1;i<=n;i++){\n        ll t=(ll)(n-i)*(n-i-1)/2;\n        if(t>=m)a[fst++]=i;//\u653e\u5934\u4e0a\n        else a[lst--]=i,m-=(lst-fst+1);//\u653e\u6700\u540e\n    }\n    for(int i=1;i<=n;i++)printf(\"%d \",a[i]);\n    return 0;\n}\n```",
        "postTime": 1497711269,
        "uid": 11765,
        "name": "zqy1018",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1338 \u3010\u672b\u65e5\u7684\u4f20\u8bf4 \u3011"
    },
    {
        "content": "#\u4e0d\u770b\u9898\u89e3\u81ea\u5df1\u7814\u7a76\u5f97\u867d\u7136\u6162\uff0c\u4f46\u771f\u6b63\u6536\u83b7\u7684\u5374\u662f\u81ea\u5df1\u3002\n\u5982\u4f55\u8ba9\u9006\u5e8f\u5bf9\u6570\u4e3am\u7684\u5e8f\u5217\u5b57\u5178\u5e8f\u6700\u5c0f\u5462\uff1f\n\u5047\u8bbe\u4f4d\u7f6ep\u662f\u7b2c\u4e00\u4e2a\u975e\u539f\u59cb\u5e8f\u5217\u7684\u4f4d\u7f6e\uff0c\u90a3\u8fd9\u4e2a\u70b9\u5e94\u8be5\u5c3d\u91cf\u9760\u53f3\uff0c\u624d\u80fd\u4f7f\u5f97\u5b57\u5178\u5e8f\u6700\u5c0f\u3002\u800c\u4e3a\u4e86\u4fdd\u8bc1\u6709m\u4e2a\u9006\u5e8f\u5bf9\uff0c\u8981\u6c42p\u540e\u9762\u7684\u9006\u5e8f\u5bf9\u6570\u5c3d\u91cf\u5927\u3002\u600e\u4e48\u624d\u80fd\u5c3d\u91cf\u5927\u5462\uff1f\u5f53\u7136\u662f\u964d\u5e8f\u6392\u5217\u3002\n\n\u8fd9\u6837\u95ee\u9898\u5c31\u8f6c\u6210\u627e\u70b9p\uff0c\u540c\u65f6\u5728\u627e\u5230p\u65f6\u8fd8\u9700\u8981\u77e5\u9053m-\u540e\u9762\u6240\u6709\u9006\u5e8f\u5bf9\u6570\u5269\u4f59\u7684\u503c\uff0c\u8fd9\u4e2a\u503c\u8981\u5728\u70b9p\u8eab\u4e0a\u4fee\u6539\u3002\n\n\u5219\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa\u5e8f\u5217\u3002\n1\uff09p\u4e4b\u524d\u7684\u90e8\u5206\u6309\u7167\u987a\u5e8f\u8f93\u51fa\n2\uff09\u8f93\u51fap\uff0c\u5982\u679c\u540e\u9762\u9006\u5e8f\u5bf9\u4e0d\u591f\uff0c\u5219\u9700\u8981\u4fee\u6539p\u70b9\u518d\u8f93\u51fa\u3002\n3\uff09\u9006\u5e8f\u8f93\u51fap\u4e4b\u540e\u7684\u90e8\u5206\uff0c\u6ce8\u610f\u5982\u679cp\u4e4b\u524d\u6539\u70b9\u4e86\uff0c\u9700\u8981\u591a\u5224\u65ad\u4e00\u4e0b\u3002\n\n```\n#include <iostream>\nusing namespace std;\nint main() {\n\tint n,m;\n\tcin>>n>>m;\n\tint p=n,c=0;\n\tfor (int s=1; m>0 ;s++,p--) {\n\t\tm-=c=min(s,m);\n\t}\n\tfor(int i=1;i<p;i++){\n\t\tcout<<i<<' ';\n\t}\n\tcout<<p+c<<' ';\n\tfor(int i=n;i>=p;i--){\n\t\tif(i!=p+c){\n\t\t\tcout<<i<<' ';\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1518017259,
        "uid": 31086,
        "name": "ingu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1338 \u3010\u672b\u65e5\u7684\u4f20\u8bf4 \u3011"
    },
    {
        "content": "# _~~**\u6ed1\u7a3d\u9898\u89e3\u7b2c\u4e09\u5f39**~~_\n\u5927\u5bb6\u597d\uff0c\u6211\u662f\u4e00\u4e2a\u5165\u95e8\u4e00\u5e74\u8fd8\u5728\u5165\u95e8\u7684\u849f\u84bb\u3002\n\n\u4eca\u5929\u6211\u51b3\u5b9a\u4e0d\u53bb\u65b0\u624b\u6751\u4e86\uff0c\u53bb\u4e00\u4e0b\u666e\u53ca\u7ec3\u4e60\uff08\u8650\u5fc3\uff09\u573a\u3002\n\n\u7b80\u5355\u6570\u5b66\uff1f\u770b\u8d77\u6765\u8c8c\u4f3c\u4e0d\u96be\u2026\u2026\n\n\u770b\u5b8c\u8fd9\u4e2a\u9898\u6211\u540e\u6094\u4e86\u2026\u2026\u7b80\u5355\u6570\u5b66\u771f\u7684\u4e0d\u7b80\u5355\u2026\u2026\n\n\u4f46\u662f\u5728\u5386\u7ecf\u5343\u8f9b\u4e07\u82e6\u540e\u6211\u8fd8\u662f\u6700\u7ec8\u628a\u5b83\u8c03\u51fa\u6765\u4e86\u2026\u2026\n\n\u8bf4\u5b9e\u8bdd\u8fd9\u8fd8\u662f\u6211\u7b2c\u4e00\u6b21\u5199\u6570\u5b66\u65b9\u9762\u7684\u9898\u89e3\uff0c\u65e9\u5c31\u542c\u8bf4\u6570\u5b66\u9898\u89e3\u96be\u5199\uff0c\u6211\u4eca\u5929\u5c31\u662f\u8981\u5c1d\u8bd5\u4e00\u4e0b\u6211\u5230\u5e95\u80fd\u4e0d\u80fd\u628a\u6570\u5b66\u8bb2\u660e\u767d\uff08\u8bb2\u4e0d\u660e\u767d\u9884\u5b9a\uff09\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n### \u5f80\u671f\u94fe\u63a5\uff1a\n\u7b2c\u4e00\u5f39\uff1a\u4e00\u4e2a\u7ea2\u9898\u5e26\u4f60\u4e86\u89e3\u7eff\uff08\u9ec4\uff09\u9898\u77e5\u8bc6\u70b9 ([\u4f20\u9001\u95e8](https://www.luogu.org/blog/funny-talk/funny-solution-p1427))\n\n\u7b2c\u4e8c\u5f39\uff1a\u4ece\u641c\u7d22\u5230\u8d2a\u5fc3\u2014\u2014\u6c42\u89e3\u7b97\u6cd5\u7684\u4f18\u5316\uff08[\u4f20\u9001\u95e8](https://www.luogu.org/blog/funny-talk/funny-solution-p1478)\uff09\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\n------------\n## 1.\u57fa\u672c\u77e5\u8bc6\n### \uff081\uff09\u9006\u5e8f\u5bf9\n\u9006\u5e8f\u5bf9\u662f\u5565\uff1f\u8fd9\u4e1c\u897f\u8bf4\u96be\u4e0d\u96be\uff0c\u8bf4\u7b80\u5355\u4e5f\u4e0d\u7b80\u5355\u3002\u9006\u5e8f\u5bf9\u5c31\u662f\u5728\u4e00\u4e2a\u6570\u5217\u5f53\u4e2d\uff0c\u6ee1\u8db3$i<j$\u4e14$a_i>a_j$($i>j$\u4e14$a_i<a_j$)\u7684\u6570\u5bf9\u7684\u4e2a\u6570\u3002\n\n\u9006\u5e8f\u5bf9\u6700\u5e38\u89c1\u7684\u6c42\u6cd5\u5c31\u662f\u5f52\u5e76\u6392\u5e8f\u6c42\u9006\u5e8f\u5bf9\u4e2a\u6570\u3002\uff08\u5f52\u5e76\u6392\u5e8f\u8fd9\u91cc\u5148\u4e0d\u666e\u53ca\u4e86\uff09\u4e3a\u4ec0\u4e48\u5f52\u5e76\u6392\u5e8f\u80fd\u591f\u505a\u5230\u8fd9\u4e00\u70b9\u5462\uff1f\u56e0\u4e3a\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u662f\u53ef\u4ee5\u9012\u5f52\u5730\u6c42\u89e3\u7684\uff1a\n\n$[l,r]$\u4e2d\u7684\u9006\u5e8f\u5bf9\u53ef\u4ee5\u5206\u4e3a\u4e09\u7c7b\uff1a\n\n1. \u6570\u5bf9\u7684\u4e24\u4e2a\u6570\u90fd\u5728$[l,mid]$\u4e2d\u7684\u9006\u5e8f\u5bf9\n2. \u6570\u5bf9\u7684\u4e24\u4e2a\u6570\u90fd\u5728$[mid+1,r]$\u4e2d\u7684\u9006\u5e8f\u5bf9\n3. \u6570\u5bf9\u4e2d\u7684\u4e24\u4e2a\u6570\u4e00\u4e2a\u5728$[l,mid]$\u4e2d\uff0c\u4e00\u4e2a\u5728\t$[mid+1,r]$\u4e2d\u7684\u9006\u5e8f\u5bf9\n\n\u524d\u4e24\u79cd\u597d\u8bf4\uff0c\u9012\u5f52\u6c42\u89e3\u5c31\u662f\u4e86\uff0c\u9012\u5f52\u7ec8\u70b9\u5c31\u662f$l==r$\uff08\u957f\u5ea6\u7b49\u4e8e1\u7684\u6570\u5217\u4e0d\u53ef\u80fd\u6709\u9006\u5e8f\u5bf9\u7684\uff0c\u8fde\u4e24\u4e2a\u6570\u90fd\u6ca1\u6709\uff09\u3002\u7b2c\u4e09\u79cd\u5c31\u4e0d\u80fd\u518d\u628a\u9505\u7529\u7ed9\u9012\u5f52\u4e86\u3002\u4f46\u662f\u5f52\u5e76\u6392\u5e8f\u6709\u4e2a\u7f8e\u5999\u7684\u6027\u8d28\uff1a\u5408\u5e76\u6709\u5e8f\u6570\u5217\u7684\u65f6\u5019\uff0c\u5982\u679c\u5728\u524d\u9762\u7684\u6570\u5217\u672a\u7a7a\u65f6\u5148\u63d2\u5165\u540e\u9762\u7684\u6570\u5217\u7684\u6570\u7684\u8bdd\uff0c\u5c31\u610f\u5473\u7740\u524d\u9762\u7684\u6570\u5217\u4e2d\u6240\u6709\u8fd8\u672a\u63d2\u5165\u7684\u6570\u90fd\u4f9d\u6b21\u548c\u8fd9\u4e2a\u540e\u9762\u6570\u5217\u7684\u6b63\u5728\u63d2\u5165\u7684\u6570\u6784\u6210\u9006\u5e8f\u5bf9\uff08\u56e0\u4e3a\u524d\u9762\u7684\u6570\u6392\u4f4d\u6bd4\u8fd9\u4e2a\u6570\u9760\u524d\u4f46\u662f\u6bd4\u8fd9\u4e2a\u6570\u5927\uff09\u3002\n\n\u56e0\u4e3a\u8fd9\u4e0d\u662f\u672c\u9898\u7684\u91cd\u70b9\uff0c\u5c31\u4e0d\u7ec6\u8bb2\u4e86\u3002\u4e0b\u9762\u7ed9\u5927\u5bb6\u4e00\u6bb5\u5f52\u5e76\u6392\u5e8f\u6c42\u9006\u5e8f\u5bf9\u7684\u4ee3\u7801\uff0c\u5927\u5bb6\u81ea\u884c\u5b66\u4e60\u4e00\u4e0b\u5427\u3002\n\n~~PS\uff1a\u4e0b\u9762\u7684\u4ee3\u7801\u53ef\u4ee5AC P1908\uff08\u6211\u76f8\u4fe1\u4f60\u4e0d\u4f1a\u9053\u5fb7\u8d25\u574f\u5230\u76f4\u63a5\u6284\u8fc7\u53bb\u7684\uff09~~\n```cpp\n#include<iostream>\n#include<queue>\nusing namespace std;\nint n,a[500005];\nqueue<int> cup;\nlong long guibing(int l,int r){\n    if(l==r) return 0;\n    int mid=(l+r)/2;\n    long long ans=0;\n    ans+=guibing(l,mid);\n    //\u6c42\u89e3\u6570\u5bf9\u7684\u4e24\u4e2a\u6570\u90fd\u5728[l,mid]\u4e2d\u7684\u9006\u5e8f\u5bf9\n    ans+=guibing(mid+1,r);\n    //\u6c42\u89e3\u6570\u5bf9\u7684\u4e24\u4e2a\u6570\u90fd\u5728[mid\uff0cr]\u4e2d\u7684\u9006\u5e8f\u5bf9\n    int l_now=l,r_now=mid+1;\n    //\u4e0b\u9762\u5f00\u59cb\u6c42\u89e3\u6570\u5bf9\u4e2d\u7684\u4e24\u4e2a\u6570\u4e00\u4e2a\u5728[l,mid]\u4e2d\uff0c\u4e00\u4e2a\u5728[mid+1,r]\u4e2d\u7684\u9006\u5e8f\u5bf9\n    while(l_now<=mid&&r_now<=r){\n    //\u5176\u5b9e\u5f52\u5e76\u6392\u5e8f\u7528for\u5faa\u73af\u6765\u5199\u6700\u7b80\u5355\u4e5f\u6700\u4e0d\u5bb9\u6613\u51fa\u9519\uff0c\u8fd9\u91cc\u4e3a\u4e86\u4fbf\u4e8e\u7406\u89e3\u4f7f\u7528while\u5199\u6cd5\n        while(l_now<=mid&&a[l_now]<=a[r_now]){\n            cup.push(a[l_now++]);\n        }\n        while(r_now<=r&&a[r_now]<a[l_now]){\n            cup.push(a[r_now++]);\n            ans+=(mid-l_now+1);\n            //\u524d\u9762\u6570\u5217\u4e2d\u6240\u6709\u6ca1\u63d2\u5165\u7684\u6570\u90fd\u548c\u5f53\u524d\u63d2\u5165\u7684\u6570\u6784\u6210\u9006\u5e8f\u5bf9\n        }\n    }\n    if(l_now<=mid)\n    while(l_now<=mid){\n        cup.push(a[l_now++]);\n    }\n    if(r_now<=r)\n    while(r_now<=r){\n        cup.push(a[r_now++]);\n    }\n    for(int i=l;i<=r;i++){\n        a[i]=cup.front();\n        cup.pop();\n    }\n    return ans;\n}\nint main(){\n    cin>>n;\n    for(int i=1;i<=n;i++){\n        cin>>a[i];\n    }\n    cout<<guibing(1,n);\n    return 0;\n} \n```\n\n### \uff082\uff09\u5168\u6392\u5217\n\u7ed9\u5b9a\u4e00\u4e2a1~$n$\u7684\u6570\u5217\uff0c\u6c42\u8fd9\u4e2a\u6570\u5217\u6253\u4e71\u540e\u7684\u6240\u6709\u53ef\u80fd\u7684\u7ec4\u6210\u65b9\u5f0f\uff0c\u5c31\u662f\u5168\u6392\u5217\u3002\u6bd4\u59821~3\u7684\u5168\u6392\u5217\u5c31\u67096\u79cd\uff1a123\uff0c132\uff0c213\uff0c231\uff0c312\uff0c321\u3002\n\n\u4e00\u4e2a\u957f\u5ea6\u4e3a$n$\u7684\u6570\u5217\u7684\u5168\u6392\u5217\u6709\u591a\u5c11\u79cd\u5462\uff1f\u8fd9\u4e5f\u5f88\u597d\u60f3\uff0c\u6211\u4eec\u4f7f\u7528\u7ed9\u5404\u4e2a\u4f4d\u7f6e\u4f9d\u6b21\u786e\u5b9a\u6570\u7684\u65b9\u5f0f\u6765\u6c42\u89e3\u3002\u5bf9\u4e8e\u7b2c\u4e00\u4f4d\uff0c\u6211\u4eec\u6709$n$\u79cd\u9009\u62e9\uff0c\u56e0\u4e3a\u6b64\u65f6\u6240\u6709\u7684\u6570\u90fd\u6ca1\u6709\u88ab\u786e\u5b9a\u5230\u67d0\u4e2a\u4f4d\u7f6e\u4e0a\uff1b\u5bf9\u4e8e\u7b2c\u4e8c\u4f4d\uff0c\u6211\u4eec\u6709$n-1$\u79cd\u9009\u62e9\uff0c\u56e0\u4e3a\u8fd9\u65f6\u5019\u6709\u4e00\u4e2a\u6570\u5df2\u7ecf\u88ab\u786e\u5b9a\u5230\u7b2c\u4e00\u4f4d\u4e0a\u4e86\uff0c\u6240\u4ee5\u8fd8\u5269$n-1$\u79cd\u9009\u62e9\uff1b\u90a3\u4e48\u8fd9\u6837\u7c7b\u63a8\u7684\u8bdd\uff0c\u7b2ci\u4f4d\u5c31\u6709$n-i+1$\u79cd\u9009\u62e9\uff0c\u6bcf\u4e2a\u6570\u4f4d\u7684\u9009\u62e9\u6570\u4e58\u8d77\u6765\uff08\u56e0\u4e3a\u6bcf\u4f4d\u7684\u9009\u62e9\u6570\u662f\u57fa\u4e8e\u524d\u4e00\u4f4d\u7684\u57fa\u7840\u4e0a\u6c42\u51fa\u6765\u7684\uff09\uff0c\u5c31\u662f$n!$\u79cd\u7ed3\u679c\u4e86\u3002\n\n\u5168\u6392\u5217\u7684\u6240\u6709\u60c5\u51b5\u53ef\u4ee5\u6309\u7167\u5c06\u8fd9\u4e2a\u6570\u5217\u7684\u6bcf\u4e00\u4e2a\u6570\u90fd\u6309\u987a\u5e8f\u5bf9\u5e94\u8f6c\u6362\u4e3a$n+1$\u8fdb\u5236\u6570\u7684\u4e00\u4e2a\u6570\u4f4d\u540e\u5f97\u5230\u7684\u6570\u7684\u5927\u5c0f\u6765\u8fdb\u884c\u6392\u5e8f\uff08\u7b80\u800c\u8a00\u4e4b\u5c31\u662f\u5c06\u6570\u5217\u4e2d\u7684\u6bcf\u4e2a\u6570\u90fd\u60f3\u6210\u4e00\u4e2aASCII\u7801\uff08\u8fd9\u4e2a\u6570\u5f88\u53ef\u80fd\u5927\u4e8e127\uff09\u540e\u5c06\u5404\u6570\u5217\u6309\u5b57\u5178\u5e8f\u6392\u5e8f\uff09\u3002\u57fa\u4e8e\u8fd9\u79cd\u6392\u5e8f\u65b9\u5f0f\u7684\u5168\u6392\u5217\u63a8\u5bfc\u975e\u5e38\u4e4b\u9ebb\u70e6\uff0c\u6211\u4e5f\u6ca1\u6709\u53bb\u7814\u7a76\uff0c\u56e0\u4e3a\u6ca1\u6709\u5fc5\u8981\uff0c\u7f8e\u5999\u7684<algorithm>\u5e93\u5df2\u7ecf\u7ed9\u6211\u4eec\u51c6\u5907\u597d\u4e86\u4e00\u4e2a\u9ad8\u6548\u5b9e\u7528\u7684\u51fd\u6570\uff1anext_permutation()\u3002\n\nnext_permutation()\u7684\u53c2\u91cf\u6709\u4e24\u4e2a\uff0c\u524d\u4e00\u4e2a\u662f\u8fdb\u884c\u6c42\u89e3\u7684\u6570\u7ec4\u7684\u7b2c\u4e00\u4f4d\u7684\u6307\u9488\uff0c\u540e\u4e00\u4e2a\u662f\u8fdb\u884c\u6c42\u89e3\u7684\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4f4d\u7684\u540e\u4e00\u4f4d\u7684\u6307\u9488\uff08\u4e5f\u5c31\u662f\u4e00\u4e2a\u524d\u95ed\u540e\u5f00\u7684\u533a\u95f4\uff09\u3002\u5bf9\u4e8e\u6570\u7ec4\u8981\u683c\u5916\u6ce8\u610f\u4f60\u662f\u4ece0\u5f00\u59cb\u5b58\u50a8\u7684\u8fd8\u662f\u4ece1\u5f00\u59cb\u5b58\u50a8\u7684\uff0c\u4f46\u5bf9\u4e8eSTL\u5c31\u6ca1\u6709\u8fd9\u4e48\u591a\u9ebb\u70e6\uff0c\u5982\u679c\u4f60\u8981\u6c42\u89e3\u4e0b\u4e00\u4e2a\u6392\u5217\u7684\u6570\u7ec4\u662f\u6574\u4e2avector\uff08\u6216\u8005\u5176\u4ed6\u652f\u6301\u5355\u70b9\u67e5\u8be2\u7684STL\u6570\u636e\u7ed3\u6784\uff09\uff0c\u90a3\u4f60\u53ea\u9700\u8981\u7b2c\u4e00\u4e2a\u53c2\u91cf\u4f20\u5165$.begin()$\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u91cf\u4f20\u5165$.end()$\u5c31\u5b8c\u4e8b\u4e86\u3002\n\n\u66f4\u667a\u80fd\u7684\u662f\u5f53\u4f60\u7684\u5f85\u5904\u7406\u6570\u5217\u5df2\u7ecf\u662f\u6700\u5927\u7684\u5168\u6392\u5217\uff08\u5373\u5df2\u7ecf\u662f\u4e00\u4e2a\u5355\u8c03\u9012\u51cf\u7684\u6570\u5217\uff09\u65f6\uff0c\u8fd9\u4e2a\u51fd\u6570\u5c31\u4e0d\u4f1a\u518d\u5bf9\u6570\u5217\u8fdb\u884c\u5904\u7406\u4e86\uff0c\u5e76\u8fd4\u56de**false**\u3002\u800c\u5982\u679c\u4f60\u7684\u6570\u5217\u8fd8\u53ef\u4ee5\u8fdb\u4e00\u6b65\u6c42\u4e0b\u4e00\u5168\u6392\u5217\u7684\u8bdd\uff0c\u5c31\u4f1a\u8fdb\u884c\u6392\u5217\u5e76\u8fd4\u56de**true**\u3002\n\n\u5f53\u7136\u4e86\uff0c\u5982\u679c\u4f60\u60f3\u5c06\u5f53\u524d\u6570\u5217\u8f6c\u6362\u4e3a\u524d\u4e00\u6392\u5217\uff0c\u7528prev_permutation()\u5c31\u597d\u4e86\u3002\n\n------------\n## 2.\u9898\u76ee\u89e3\u6cd5\n### \uff081\uff09monkey solve\n\u4e0d\u77e5\u9053\u5927\u5bb6\u6709\u6ca1\u6709\u542c\u8bf4\u8fc7\u4e00\u79cd\u6392\u5e8f\u53eb\u7334\u5b50\u6392\u5e8f\uff08monkey sort\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(n!)$\u7684\uff09\u2026\u2026\n\n\u6700\u7b80\u5355\u6613\u61c2\u7684\u505a\u6cd5\uff0c\u4e5f\u662f\u6700\u5bb9\u6613\u7684\u60f3\u6cd5\uff0c\u5c31\u662f\u6a21\u62df\u8fd9\u4e2a\u65e5\u5386\u7684\u6f14\u8fdb\u65b9\u5f0f\u4e86\u3002\u4ece\u4e00\u4e2a1~$n$\u987a\u6b21\u589e\u5927\u7684\u5e8f\u5217\u5f00\u59cb\uff0c\u6bcf\u8fc7\u4e00\u5929\u5c31\u5224\u65ad\u4e00\u4e0b\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u662f\u4e0d\u662f$m$\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002\u90a3\u4e0d\u5c31\u7b80\u5355\u4e86\uff0c\u628a\u4e0a\u9762\u7ed9\u7684\u6c42\u9006\u5e8f\u5bf9\u6a21\u677f\u7684main\u51fd\u6570\u9b54\u6539\u4e00\u4e0b\uff0c\u4e0d\u5c31\u662f\u8fd9\u9898\u7684\u4ee3\u7801\u4e86\u5417\uff1f\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nint n,m,a[50001],b[50001];\nqueue<int> cup;\nlong long guibing(int l,int r){\n//\u539f\u5c01\u4e0d\u52a8\u7684\u6c42\u9006\u5e8f\u5bf9\u6a21\u677f\n    if(l==r) return 0;\n    int mid=(l+r)/2;\n    long long ans=0;\n    ans+=guibing(l,mid);\n    ans+=guibing(mid+1,r);\n    int l_now=l,r_now=mid+1;\n    while(l_now<=mid&&r_now<=r){\n        while(l_now<=mid&&a[l_now]<=a[r_now]){\n            cup.push(a[l_now++]);\n        }\n        while(r_now<=r&&a[r_now]<a[l_now]){\n            cup.push(a[r_now++]);\n            ans+=(mid-l_now+1);\n        }\n    }\n    if(l_now<=mid)\n    while(l_now<=mid){\n        cup.push(a[l_now++]);\n    }\n    if(r_now<=r)\n    while(r_now<=r){\n        cup.push(a[r_now++]);\n    }\n    for(int i=l;i<=r;i++){\n        a[i]=cup.front();\n        cup.pop();\n    }\n    return ans;\n}\nint main(){\n    cin>>n>>m;\n    for(int i=1;i<=n;i++){\n        b[i]=i;\n    }\n    while(guibing(1,n)!=m){\n    //\u6a21\u62df\u65e5\u5386\u4e00\u5929\u5929\u7684\u8fdb\u7a0b\n    \tnext_permutation(b+1,b+n+1);\n        //\u4e0b\u4e00\u5929\n    \tfor(int i=1;i<=n;i++) a[i]=b[i];\n        //\u6c42\u9006\u5e8f\u5bf9\u4e0d\u80fd\u628a\u539f\u6570\u7ec4\u6392\u5e8f\n    }\n    for(int i=1;i<=n;i++){\n    \tcout<<b[i]<<\" \";\n    }\n    return 0;\n}\n```\n\n\u4f46\u662f\u8fd9\u6837\u5b50\u7684\u8bdd\uff0c\u5982\u679c\u9898\u76ee\u5361\u4f60\u4e00\u6ce2\u6781\u9650\u6570\u636e\uff08\u4e5f\u5c31\u662f\u65e5\u5386\u7684\u6700\u540e\u4e00\u5929\u9006\u5e8f\u5bf9\u4e2a\u6570\u8fbe\u5230\u6700\u5927\u65f6\u7684\u4e2a\u6570\uff09\uff0c\u90a3\u4f60\u8fd9\u4e2a\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u4f1a\u539f\u5730\u76f4\u7ebf\u8d77\u98de\uff0c\u53d8\u6210$O(n!~log~n)$\u7684\u590d\u6742\u5ea6\u3002\u56e0\u4e3a\u6211\u4eec\u524d\u9762\u8bb2\u8fc7\uff0c\u5168\u6392\u5217\u4e00\u5171\u6709$n!$\u79cd\uff0c\u6bcf\u6b21\u6c42\u9006\u5e8f\u5bf9\u7684\u590d\u6742\u5ea6\u662f$O(n~log~n)$\u7684\uff0c\u4e58\u8d77\u6765\u5c31\u662f$(n!+1)~log~n$\u6b21\u8fd0\u7b97\uff0c\u4e5f\u5c31\u662f$O(n!~log~n)$\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u4e8b\u5b9e\u5c31\u662f\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u4ea4\u4e0a\u540eTLE\u4e86\u516b\u4e2a\u6570\u636e\u70b9\u3002\n### \uff082\uff09\u6b63\u89e3\n~~_\u6211\u77e5\u9053\u4f60\u4eec\u8bfb\u4e86\u8fd9\u4e48\u4e45\u4e00\u76f4\u5728\u671f\u5f85\u8fd9\u4e2a\u3002_~~\n\n\u6709\u4eba\u4f1a\u95ee\uff0c\u4f60\u4e4b\u524d\u8bb2\u4e86\u90a3\u4e48\u591a\u4e1c\u897f\uff0c\u4ec0\u4e48\u9006\u5e8f\u5bf9\uff0c\u5168\u6392\u5217\uff0c\u6709\u4ec0\u4e48\u7528\u5417\uff0c\u6211\u4eec\u81ea\u5df1\u53bb\u67e5\u4e0d\u5c31\u597d\u4e86\uff1f\u4f46\u5176\u5b9e\u4e0a\u9762\u8bb2\u7684\u57fa\u7840\u77e5\u8bc6\u5e76\u975e\u6beb\u65e0\u7528\u5904\uff0c\u6b63\u89e3\u5c31\u5728\u5176\u4e2d\uff1a\n\n\u6211\u4eec\u6bcf\u5c06\u4e00\u4e2a\u65e0\u9006\u5e8f\u5bf9\u7684\u6570\u5217\uff08\u5373\u6240\u6709\u6570\u90fd\u5355\u8c03\u9012\u589e\uff09\u4e2d\u4e24\u4e2a\u6570\u4ea4\u6362\u65f6\uff0c\u5c31\u4f1a\u4f7f\u5f97\u6570\u5217\u4e0d\u518d\u5355\u8c03\u9012\u589e\uff0c\u4e5f\u5c31\u4ea7\u751f\u4e86\u9006\u5e8f\u5bf9\u3002\u800c\u6c42\u4e0b\u4e00\u6392\u5217\u7684\u672c\u8d28\u4e0d\u5c31\u662f\u5c06\u6570\u7684\u987a\u5e8f\u4ea4\u6362\u5417\uff1f\n\n\u6240\u4ee5\u8fd9\u9898\u7684\u6b63\u89e3\u4e0d\u662f\u8ba9\u4f60\u6a21\u62df\u65e5\u5386\uff0c\u7136\u540e\u6bcf\u5929\u6c42\u9006\u5e8f\u5bf9\uff0c\u800c\u662f\u8ba9\u4f60\u6839\u636e\u6570\u5b66\u539f\u7406\u6765\u9020\u9898\u76ee\u6240\u8981\u7684\u6570\u5217\u3002\n\n\u90a3\u600e\u4e48\u9020\u5462\uff1f\u8fd9\u4e2a\u5730\u65b9\u5c31\u6709\u70b9\u96be\u60f3\u4e86\u3002\u60f3\u4e00\u4e0b\u6211\u4eec\u4e4b\u524d\u8bb2\u8fc7\u7684\u6c42\u5168\u6392\u5217\u4e2a\u6570\u7684\u601d\u60f3\uff1a\u6309\u4f4d\u786e\u5b9a\u6570\u7684\u4f4d\u7f6e\u3002\u8fd9\u9898\u7684\u5173\u952e\u4e5f\u548c\u4e4b\u524d\u8bb2\u8fc7\u7684\u5f52\u5e76\u6392\u5e8f\u6c42\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u7684\u65b9\u6cd5\u7c7b\u4f3c\uff1a\u5982\u679c\u6211\u4eec\u6309\u7167\u6240\u6c42\u6570\u5217\u7684\u4f4d\u7f6e\u4ece\u524d\u5411\u540e\u7684\u987a\u5e8f\u786e\u5b9a\u4e86\u4e00\u4e2a\u6570$a_i$\u7684\u4f4d\u7f6e,\u90a3\u4e48\u6240\u6709\u8fd8\u672a\u786e\u5b9a\u7684\u6570\u4e2d\u6240\u6709\u5c0f\u4e8e$a_i$\u7684\u6570\u90fd\u548c$a_i$\u6784\u6210\u4e86\u9006\u5e8f\u5bf9\uff08$a_i$\u6bd4\u8fd9\u4e9b\u6570\u90fd\u5927\uff0c\u4f46\u662f\u5374\u6392\u5728\u8fd9\u4e9b\u6570\u7684\u524d\u9762\uff09\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u5728\u4e00\u4e2a\u4ece0\u5f00\u59cb\u5b58\u653e\u7684\u6570\u7ec4$a$\u91cc\u5b58\u653e\u6240\u6709\u8fd8\u672a\u786e\u5b9a\u4f4d\u7f6e\u7684\u6570\u7684\u8bdd\uff0c\u90a3\u4e48\u5728\u67d0\u4e2a\u4f4d\u7f6e\u653e\u7f6e$a[i]$\u7684\u8bdd\uff0c\u5c31\u610f\u5473\u7740\u4f1a\u548c\u6570\u7ec4\u91cc\u6392\u5728$a[i]$\u524d\u7684$i$\u4e2a\u6570\u4ea7\u751f$i$\u4e2a\u9006\u5e8f\u5bf9\u3002\n\n\u4f46\u662f\u8fd9\u8fd8\u6ca1\u7ed3\u675f\uff0c\u56e0\u4e3a\u6211\u4eec\u8fd8\u6ca1\u5b9a\u4e0b\u6765\u7ed9\u5404\u4e2a\u4f4d\u7f6e\u5b89\u653e\u6570\u7684\u6807\u51c6\u3002\u5176\u5b9e\u63a5\u4e0b\u6765\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u53ea\u8981\u4f60\u80fd\u660e\u767d\u4e0a\u9762\u8bb2\u7684\u5173\u952e\u90e8\u5206\uff0c\u4e0b\u9762\u5176\u5b9e\u5c31\u5f88\u597d\u60f3\u4e86\u3002\u6309\u7167\u4e0a\u9762\u7684\u7406\u8bba\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u77e5\u9053\u4e00\u4e2a\u957f\u5ea6\u4e3a$n$\u7684\u6570\u5217\u6700\u591a\u53ef\u4ee5\u4ea7\u751f$\\sum_{i=1}^{n-1}$\uff08\u53731 ~ $n-1$\u7684\u6240\u6709\u81ea\u7136\u6570\u7684\u548c\uff09\u4e2a\u9006\u5e8f\u5bf9\u3002\u8fd9\u4e2a\u9898\u8981\u6c42\u6211\u4eec\u5728\u4ea7\u751f$m$\u4e2a\u9006\u5e8f\u5bf9\u7684\u540c\u65f6\u4f7f\u5f97\u6570\u5217\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u4f46\u662f\u5b57\u5178\u5e8f\u5c0f\u7684\u6570\u5217\u9006\u5e8f\u5bf9\u53c8\u4e0d\u4e00\u5b9a\u591a\uff0c\u6240\u4ee5\u8fd9\u5c31\u8981\u6c42\u6211\u4eec\u8d2a\u5fc3\u5730\u6765\u5b89\u653e\uff1a\u6211\u4eec\u8bbe\u5728\u5f53\u524d\u4f4d\u7f6e$i$\u8fd8\u672a\u4ea7\u751f\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u4e3a$k$\uff1a\u5982\u679c\u5269\u4e0b\u7684\u957f\u5ea6\u4e3a$l$\u7684\u6570\u5217\u80fd\u591f\u4ea7\u751f\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u4e5f\u5c31\u662f$\\sum_{i=1}^{l-1}$\uff08\u4e5f\u5c31\u662f$\\frac{l(l-1)}{2}$\uff09\u6bd4$k$\u5927\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u5f53\u524d\u6700\u5c0f\u7684\u6570\u4e5f\u5c31\u662f$a[i]$\u653e\u5230\u5f53\u524d\u4f4d\u7f6e\u4e0a\uff08\u63a5\u4e0b\u6765\u7684$l$\u4e2a\u6570\u8db3\u591f\u4ea7\u751f\uff09\uff1b\u5426\u5219\u5c31\u5c06$a[k-\\frac{l(l-1)}{2}]$\u653e\u5230\u5f53\u524d\u4f4d\u7f6e\u4e0a\uff0c\u6765\u4ea7\u751f$k-\\frac{l(l-1)}{2}$\u4e2a\u9006\u5e8f\u5bf9\uff08\u5728\u5f53\u524d\u4f4d\u7f6e\u653e\u7f6e$a[k-\\frac{l(l-1)}{2}]$\u53ef\u4ee5\u4f7f\u5b57\u5178\u5e8f\u6700\u5c0f\uff09\uff08\u5982\u679c\u8fd8\u662f\u653e\u6700\u5c0f\u7684\u6570\u7684\u8bdd\u63a5\u4e0b\u6765\u65e0\u8bba\u5982\u4f55\u4e5f\u4e0d\u53ef\u80fd\u4ea7\u751f$k$\u4e2a\u9006\u5e8f\u5bf9\u4e86\uff09\uff0c\u8fd9\u6837\u5b50\u518d\u7ee7\u7eed\u89e3\u51b3\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u5c31\u597d\u4e86\u3002\n\n\u6240\u4ee5\u8fd9\u9898\u5c31\u662f\u8981\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4\uff0c\u6765\u5b58\u653e\u6240\u6709\u672a\u786e\u5b9a\u4f4d\u7f6e\u7684\u6570\uff0c\u7136\u540e\u4ece\u524d\u5411\u540e\u8d2a\u5fc3\u5730\u786e\u5b9a\u6240\u6c42\u6570\u5217\u5404\u4f4d\u7f6e\u7684\u6570\u5c31\u597d\u4e86\u3002\n\n\u7ef4\u62a4\u4e5f\u4e0d\u96be\uff0cC++\u81ea\u5e26\u7684STL\u5e93\u91cc\u6709\u79cd\u6570\u636e\u7ed3\u6784\u53ebvector\u5c31\u652f\u6301\u5355\u70b9\u5220\u9664\uff0c\u590d\u6742\u5ea6\u662f$O(n)$\u7684\uff0c\u53eb$.erase()$\uff0c\u62ec\u53f7\u91cc\u4f20\u5165\u7684\u662f\u8981\u5220\u9664\u7684\u6570\u636e\u70b9\u7684\u8fed\u4ee3\u5668\uff08\u76f8\u5f53\u4e8e\u6307\u9488\uff09\u3002\n\n\u6211\u7684\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<cstdio>\n#include<vector>\nusing namespace std;\nlong long n,m,s,now;\n//\u56e0\u4e3an*(n-1)\u5f88\u53ef\u80fd\u5927\u4e8eint\u8303\u56f4\uff0c\u6240\u4ee5\u7528long long \nvector<int> v;\nint main(){\n    scanf(\"%lld %lld\",&n,&m);\n    for(int i=1;i<=n;i++) v.push_back(i);\n    s=(n*(n-1))>>1;\n    //\u8ba1\u7b97\u80fd\u591f\u4ea7\u751f\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\n    for(int i=n-1;i>=0;i--){\n        s-=i;\n        //\u8ba1\u7b97\u63a5\u4e0b\u6765\u7684\u6570\u5217\u6700\u591a\u80fd\u4ea7\u751f\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\n        if(m>s){\n        //\u5982\u679c\u63a5\u4e0b\u6765\u7684\u6570\u5217\u4ea7\u751f\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u4e0d\u591f\u7528\u7684\u8bdd\n            now=m-s;\n            m=s;\n        }else now=0;\n        printf(\"%d \",v[now]);\n        v.erase(v.begin()+now);\n        //\u8fd9\u4e2a\u6570\u65e2\u7136\u7528\u8fc7\u4e86\uff0c\u90a3\u5c31\u5c06\u5b83\u4ece\u672a\u5b89\u6392\u7684\u6570\u7ec4\u4e2d\u5220\u9664\n    }\n    return 0;\n}\n```\n### \uff083\uff09\u4f18\u5316\n\u5982\u679c\u4f60\u4ed4\u7ec6\u9605\u8bfb\u4e0a\u9762\u7684\u9898\u89e3\u7684\u8bdd\uff0c\u4f60\u5c31\u4f1a\u53d1\u73b0\uff0c\u8fd9\u4e2a\u6570\u5217\u53ef\u4ee5\u5206\u4e3a\u4e09\u90e8\u5206\uff1a\n\n1. \u4ece1\u5230\u67d0\u4e2a\u6570\u7684\u8fde\u7eed\u81ea\u7136\u6570\u4e0a\u5347\u5e8f\u5217\n2. $m-\\frac{l(l-1)}{2}$\n3. \u5269\u4f59\u6570\u7ec4\u6210\u7684\u5355\u8c03\u9012\u51cf\u5e8f\u5217\u3002\n\n\u8fd9\u4e5f\u5f88\u597d\u89e3\u91ca\uff1a\u9996\u5148\u6211\u4eec\u8d2a\u5fc3\uff0c\u4f7f\u5f97\u5b57\u5178\u5e8f\u5c3d\u53ef\u80fd\u5c0f\uff0c\u90a3\u4e48\u5fc5\u7136\u5f97\u5230\u7b2c\u4e00\u90e8\u5206\uff1b\u4e4b\u540e\u5f00\u59cb\u51fa\u73b0\u5269\u4f59\u6570\u80fd\u6784\u6210\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u4e0d\u591f\u7684\u60c5\u51b5\uff0c\u8fd9\u65f6\u5fc5\u7136\u8fd8\u6709m\u4e2a\u9006\u5e8f\u5bf9\u672a\u4ea7\u751f\uff0c\u6240\u4ee5\u5f97\u5230\u7b2c\u4e8c\u90e8\u5206\uff1b\u5269\u4e0b\u7684\u6570\u4e3a\u4e86\u6784\u6210$\\frac{l(l-1)}{2}$\u4e2a\u9006\u5e8f\u5bf9\uff0c\u5fc5\u7136\u8981\u5355\u8c03\u9012\u51cf\uff0c\u4e8e\u662f\u5f97\u5230\u7b2c\u4e09\u90e8\u5206\u3002\n\n\u4e0a\u9762\u7684\u6807\u7a0b\u7528\u4e86400\u591a\u6beb\u79d2\uff0c\u4e0b\u9762\u7684\u4f18\u5316\u7b97\u6cd5\u53ea\u7528\u4e8640\u591a\u6beb\u79d2\n```cpp\n#include<cstdio>\n#include<vector>\nusing namespace std;\nlong long n,m,s,i,j,k;\nbool use[50005];\nint main(){\n    scanf(\"%lld %lld\",&n,&m);\n    s=(n*(n-1))>>1;\n    for(i=1;i<=n;i++){\n    //\u6253\u5370\u7b2c\u4e00\u90e8\u5206\n        s-=(n-i);\n        if(m>s){\n        //\u7ec8\u6b62\u7b2c\u4e00\u90e8\u5206\u7684\u6253\u5370\uff0c\u6253\u5370\u7b2c\u4e8c\u90e8\u5206\n            printf(\"%lld \",i+m-s);\n            use[i+m-s]=true;\n            break;\n        }\n        printf(\"%lld \",i);\n        use[i]=true;\n    }\n    for(j=n,k=n;j>i;j--,k--){\n    //\u6253\u5370\u7b2c\u4e09\u90e8\u5206\n    \tif(use[k]){\n    \t\tj++;\n    \t\tcontinue;\n        }\n        printf(\"%lld \",k);\n    }\n    return 0;\n}\n```\n\n\n------------\n\u770b\u5b8c\u8fd9\u7bc7\u9898\u89e3\uff0c\u4f60\u6709\u6ca1\u6709\u5bf9\u6570\u5b66\u6709\u66f4\u597d\u7684\u7406\u89e3\u4e86\u5462\uff1f\u597d\u7684\uff0c\u672c\u671f\u7684_~~**\u6ed1\u7a3d\u9898\u89e3**~~_\u5230\u8fd9\u91cc\u5c31\u7ed3\u675f\u4e86\u3002\u8ba9\u6211\u4eec\u4e0b\u671f\u518d\u89c1\u5427\uff01",
        "postTime": 1546054138,
        "uid": 65960,
        "name": "ASZIIIS",
        "ccfLevel": 0,
        "title": "\u6570\u5b66\u771f\u7684\u4e0d\u96be\uff08\u6211\u81ea\u5df1\u90fd\u4e0d\u4fe1\uff09"
    },
    {
        "content": "\u9996\u5148\u4e00\u770b\u5230\u8fd9\u4e2a\u95ee\u9898\uff0c\u60f3\u5230\u7684\u662f\u2014\u2014\u4f1a\u4e0d\u4f1a\u5e8f\u5217\u5b57\u5178\u5e8f\u8d8a\u5927\uff0c\u9006\u5e8f\u5bf9\u5c31\u8d8a\u591a\u5462\uff1f\n\n\u7136\u800c\u4e8b\u5b9e\u4e0a\u5e76\u4e0d\u662f\u8fd9\u6837\uff0c\u4f8b\u5982\uff1a\n\n1 4 3 2\u67093\u4e2a\u9006\u5e8f\u5bf9\n\n2 1 3 4\u53ea\u67091\u4e2a\u9006\u5e8f\u5bf9\n\n\u56e0\u6b64\u8fd9\u4e2a\u547d\u9898\u662f\u9519\u8bef\u7684\uff0c\u90a3\u5c31\u8981\u53e6\u60f3\u529e\u6cd5\uff0c\u8fd9\u91cc\u6211\u7a0d\u5fae\u679a\u4e3e\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0\u4e86\u4e00\u4e2a\u89c4\u5f8b\uff1a\n\n\u7b54\u6848\u7684\u5e8f\u5217\u90fd\u53ef\u4ee5\u5212\u5206\u4e3a\u4e09\u4e2a\u90e8\u5206\uff1a\u5f00\u5934\u7684\u5347\u5e8f\u90e8\u5206\uff0c\u4e2d\u95f4\u4e00\u4e2a\u5355\u72ec\u7684\u6570\uff0c\u7ed3\u5c3e\u662f\u4e00\u6bb5\u964d\u5e8f\u90e8\u5206\uff0c\u4f8b\u5982\u6d4b\u8bd5\u6570\u636e\u76845 4\uff1a\n\n\u7b54\u6848\u662f1 3 5 4 2\uff0c\u5176\u4e2d1\u662f\u5f00\u5934\u7684\u5347\u5e8f\u90e8\u5206\uff0c3\u662f\u4e2d\u95f4\u7684\u5206\u754c\u6570\uff0c5 4 2\u662f\u6700\u540e\u7684\u964d\u5e8f\u90e8\u5206\u3002\n\n\u4e0b\u9762\u5c31\u662f\u5177\u4f53\u7684\u7b97\u6cd5\u8bbe\u8ba1\u4e86\uff0c\u4e00\u4e2a\u957f\u5ea6\u4e3an\u7684\u6392\u5217\u6700\u5927\u9006\u5e8f\u6570\u4e3an(n-1)/2\uff0c\u90a3\u4e48\u5047\u5982i\u662f\u6ee1\u8db3i(i-1)/2>=m\u7684\u6700\u5c0f\u6574\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u4e0d\u9700\u8981\u6539\u53d8\u524d\u9762\u7684\u6570\uff0c\u53ea\u9700\u8981\u8c03\u6574\u6700\u540ei\u4e2a\u6570\u5373\u53ef\u4f7f\u9006\u5e8f\u6570\u8fbe\u5230m\uff0c\u800c\u4e14\u5b57\u5178\u5e8f\u5c3d\u91cf\u5c0f\u3002\n\n\u7136\u800c\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u628a\u6700\u540ei\u4e2a\u6570\u7edf\u7edf\u964d\u5e8f\u6392\uff0c\u800c\u53ea\u9700\u8981\u5c06\u6700\u540ei-1\u4e2a\u6570\u4f5c\u4e3a\u964d\u5e8f\u90e8\u5206\uff0c\u5e76\u9009\u51fa\u4e00\u4e2a\u6570\u653e\u5728\u7b2ci\u4f4d\u5373\u53ef\uff1a\n\n\u56e0\u4e3a\u6700\u540ei-1\u4e2a\u6570\u964d\u5e8f\u6392\u5217\u4e4b\u540e\u5e76\u4e0d\u80fd\u8fbe\u5230m\u4e2a\u9006\u5e8f\u5bf9\uff0c\u4f46\u6211\u4eec\u5e0c\u671b\u7b2ci\u4f4d\u7684\u6570\u5c3d\u91cf\u5c0f\uff08\u5b57\u5178\u5e8f\u6700\u5c0f\uff09\uff0c\u56e0\u6b64\u9664\u53bbi-1\u4e2a\u6570\u7684\u8d21\u732e\u5916\u5269\u4f59\u7684\u9006\u5e8f\u5bf9\u5c31\u7531\u7b2ci\u4f4d\u63d0\u4f9b\uff0c\u9009\u51fa\u6700\u540ei\u4e2a\u6570\u4e2d\u5927\u5c0f\u5408\u9002\u7684\u4e00\u4e2a\u6570\u653e\u5728\u7b2ci\u4f4d\uff08\u5177\u4f53\u6765\u8bf4\u662f\u6700\u540ei\u4e2a\u6570\u4e2d\u7b2c(n-(i-1)\\*(i-2)/2)\u5927\u7684\u90a3\u4e2a\uff0c\u56e0\u4e3a\u5b83\u6070\u597d\u80fd\u63d0\u4f9b\u8fd9\u4e48\u591a\u7684\u9006\u5e8f\u5bf9\uff09\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nlong long n,m;    //\u67d0\u6d4b\u8bd5\u70b9\u8981\u5f00long long\u624d\u80fd\u8fc7\nvoid solve_ (int x,int y) {    //\u8868\u793a\u8c03\u6574\u6700\u540ex\u4f4d\uff0c\u5e76\u5c06\u7b2cy\u5927\u7684\u6570\u586b\u5165\u7b2cx\u4f4d\uff0c\u65e0\u9700\u9012\u5f52\n\tfor (int i=n;i>x;i--) {\n\t\tcout << (n-i+1) << ' ';    //\u7b2cx\u4f4d\u524d\u65e0\u9700\u8c03\u6574\uff0c\u5347\u5e8f\u8f93\u51fa\n\t}\n\tcout << (n-y) << ' ';    //\u7b2cx\u4f4d\u8f93\u51fa\u5269\u4f59x\u4e2a\u6570\u4e2d\u7b2cy\u5927\u7684\u6570\n\tfor (int i=n;i>=(n-x+1);i--) {\n\t\tif (i!=(n-y)) {\n\t\t\tcout << i << ' ';    //\u6700\u540ex-1\u4e2a\u6570\u964d\u5e8f\u8f93\u51fa\uff0c\u6ce8\u610f\u5224\u4e00\u4e0b\u662f\u5426\u5728\u524d\u9762\u8f93\u51fa\u8fc7\n\t\t}\n\t}\n\treturn;\n}\nint main () {\n\tcin >> n >> m;\n\tif (m==0) {    //0\u7684\u7279\u5224\n\t\tfor (int i=1;i<=n;i++) {\n\t\t\tcout << i << ' ';\n\t\t}\n\t\treturn 0;\n\t}\n\tfor (long long i=2;i<=n;i++) {\n\t\tif ((i*(i-1))/2>=m&&((i-1)*(i-2))/2<m) {\n\t\t\tsolve_(i,(i*(i-1))/2-m);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1547197860,
        "uid": 113546,
        "name": "ix35",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1338 \u3010\u672b\u65e5\u7684\u4f20\u8bf4 \u3011"
    },
    {
        "content": "\u9898\u610f\u5c31\u662f\u627e\u5230\u9006\u5e8f\u5bf9\u6570\u4e3a $M$ \u7684\u6700\u5c0f\u5b57\u5178\u5e8f\u7684\u5e8f\u5217\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u5e8f\u5217 $(a_n)$\uff0c\u8bb0\u5176\u9006\u5e8f\u5bf9\u6570\u4e3a $f(a_n)$\uff0c\u5219\u6709 $$0\u2264f(a_n)\u2264n*(n-1)/2$$\u5e76\u4e14\u53ef\u4ee5\u4f7f $f(a_n)$\u53d6\u5230\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\u6570 $m$\u3002\u8bc1\u660e\u5373\u5047\u8bbe\u5b58\u5728 $f(a^{'}_n)=m+1$\uff0c\u7531\u53cd\u8bc1\u77e5\u8be5 $a_n$\u4e2d\u5fc5\u5b58\u5728\u76f8\u90bb\u7684\u9006\u5e8f\u5bf9\uff0c\u4ea4\u6362\u5373\u53ef\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u9898\u4e2d\u7684 $M$\uff0c\u5148\u627e\u5230\u6ee1\u8db3 $n*(n-1)/2\u2265M$ \u7684\u6700\u5c0f\u503c $n$\uff0c\u5e76\u4f7f\u6784\u9020\u5e8f\u5217\u7684\u524d $(N-n)$ \u9879\u4ecd\u7136\u5347\u5e8f\uff0c\u53ea\u5bf9\u540e $n$ \u9879\u8fdb\u884c\u64cd\u4f5c\uff0c\u4e5f\u5c31\u6784\u6210\u4e86\u4e00\u4e2a\u65b0\u7684\u5b50\u95ee\u9898 $a_n$\uff08\u5e8f\u53f7\u6539\u4e3a1~$n$\uff09\u3002\u7136\u540e\u5728 $n$ \u9879\u4e2d\u627e\u51fa\u4e00\u4e2a\u6570 $a_i$\uff0c\u7f6e\u4e8e\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u6b64\u65f6 $a_i$ \u4e0e\u540e\u9762\u5f62\u6210$(i-1)$\u4e2a\u9006\u5e8f\u5bf9\uff0c\u4e14\u5e8f\u5217 $a_{n-1}$\u6784\u6210\u5b50\u95ee\u9898\u3002\u6211\u4eec\u53d1\u73b0\uff0c$f(a_{n-1})$ \u8d8a\u5927\uff0c$a_i$\u8d8a\u5c0f\uff0c\u5219\u627e\u5230 $i$\uff0c\u4f7f\u5f97\u4ee4 $a_{n-1}$ \u5168\u90e8\u964d\u5e8f\uff0c\u4e14\u6ee1\u8db3$(n-1)*(n-2)/2=M-(i-1)$ \u5373\u53ef\uff0c\u76f4\u63a5\u6c42\u51fa $i$\u3002\n\n\u590d\u6742\u5ea6 $O(N)$\uff0c\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\nusing namespace std;\nlong long N,M,p=1,q;//p\u4e3aan\u7b2c\u4e00\u9879\u7684\u4f4d\u7f6e\nint main()\n{\n    scanf(\"%lld%lld\",&N,&M);\n    for(;(N-p)*(N-p-1)/2>=M && p<=N;p++)printf(\"%lld \",p);//\u4fdd\u6301\u5347\u5e8f\n    if((N-p+1)*(N-p)/2!=M){q=p+M-(N-p)*(N-p-1)/2;printf(\"%lld \",q);}//ai\n    for(;N>=p;N--)if(N!=q)printf(\"%lld \",N);printf(\"\\n\");//\u6784\u9020\u964d\u5e8f\n}\n```",
        "postTime": 1528362028,
        "uid": 9315,
        "name": "zhyh",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1338 \u3010\u672b\u65e5\u7684\u4f20\u8bf4 \u3011"
    },
    {
        "content": "~~\u849f\u84bb\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u6c42\u8fc7\u2026\u2026~~\n\n\u7b2c\u4e00\u773c\u770b\u5230\u8fd9\u9053\u9898\u76ee\u7684\u60f3\u6cd5\u5c31\u662f\u9012\u5f52\u2026\u2026\n\n\u672c\u9898\u8981\u6c42\u627e\u51fa\u9006\u5e8f\u5bf9=m\u4e14\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u4e00\u7ec4\u6392\u5217\uff0c\n\n\u4ee5\u6837\u4f8b\u4e3a\u4f8b\uff0c\u5f88\u660e\u663e 1,2,5,4,3 \u662f\u9006\u5e8f\u5bf9\u4e3a3\u65f6\u7684\u6700\u4f18\u6392\u5217\uff0c\n\n\u8fd9\u65f6\u80af\u5b9a\u8981\u628a 3 \u653e\u5728\u6700\u540e\uff0c\n\n\u800c\u5f53m\u503c\u5728 3\uff081+2\uff09\u548c 6\uff081+2+3\uff09\u4e4b\u95f4\u65f6\uff08\u4e0d\u542b3\uff09\uff0c\n\n\u663e\u7136\u6700\u597d\u8981\u628a 2 \u653e\u5728\u6700\u540e\uff1b\n\n\u800c 2 \u653e\u5728\u6700\u540e\u5f97\u5230\u7684\u6700\u5c0f\u9006\u5e8f\u5bf9\u662f 3 \uff0c\n\n\u6240\u4ee5\u5c06m\u503c\u51cf\u53bb 3 \u540e\u5f97\u5230\u7684\u5269\u4f59\u9700\u8981\u7684\u9006\u5e8f\u5bf9\u503c\n\n\u5c31\u662f\u9700\u8981\u6bd4 2 \u5927\u7684 3,4,5\uff08\u73b0\u5728\u57282\u524d\u9762\uff09\u7684\u6392\u5217\u6765\u5f97\u5230\u4e86\n\n\u4e8e\u662f\u901a\u8fc7\u9012\u5f52\u5c31\u53ef\u4ee5\u628a\u9700\u8981\u7f6e\u540e\u7684\u6570\u6392\u5217\u597d\n\n\u4e0b\u9762\u662f\u849f\u84bb\u7684\u4e11\u964b\u4ee3\u7801\uff08~~\u4e0d\u559c\u52ff\u55b7~~\uff09\n```cpp\n#include<cstdio>\nusing namespace std;\nint n,m,k,num,posi;\nint a[50001],add[50001];\nbool judge,used[50001];\n\nvoid morijianglin(int x,int y)\n{\n    if(x<=0)//\u5982\u679c\u4f4d\u7f6e\u7f6e\u540e\u7684\u6570\u90fd\u5df2\u653e\u597d,\u5219\u8fd4\u56de \n    {\n        judge=true;\n        return;\n    }\n    for(int i=y;i>=0&&judge==false;i--)\n    {\n        if(add[i+1]>=x&&add[i]<x)\n        { //\u51cf\u53bb\u5c0f\u4e8e\u5f53\u524d\u4ecd\u9700\u8981\u7684\u9006\u5e8f\u5bf9\u503c\u7684\u6700\u5927num\u503c \n            a[k]=n-i-1,k--;//\u628a\u653e\u7f6e\u4f4d\u5f80\u524d\u632a\u4e00\u683c \n            used[n-i-1]=true;\n            morijianglin(x-i-1,i+1);//\u51cf\u53bb\u6700\u5c0f\u7684\u53ef\u80fd\u9006\u5e8f\u5bf9\u503c \n        }\n    }\n}\n\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    k=n;\n    for(int i=1;num<=m;i++)//\u7528num[i]\u6570\u7ec4\u5b58\u50a8 (1+2+\u2026+i)\u7684\u503c \n    {\n        num+=i,add[i]=num,posi=i;\n    }\n    morijianglin(m,posi);//posi\u5b58\u50a8\u79bbm\u6700\u8fd1\u7684num[i]\u503c\uff08\u65f6\u95f4\u4f18\u5316\uff09 \n    num=1;\n    while(used[num]==true) num++;\n    for(int i=1;i<=n;i++)\n    {\n        if(a[i]==0)\n        {\n            a[i]=num;\n            used[num]=true;\n            while(used[num]==true) num++;//\u627e\u5230\u672a\u6446\u653e\u7684\u6700\u5c0f\u7684\u6570 \n        }\n    }\n    for(int i=1;i<=n;i++) printf(\"%d \",a[i]);\n    return 0\uff1b\n}\n```",
        "postTime": 1534418252,
        "uid": 108365,
        "name": "LesterYu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1338 \u3010\u672b\u65e5\u7684\u4f20\u8bf4 \u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u9700\u8981\u5bf9\u6392\u5217\u6709\u6df1\u523b\u7684\u7406\u89e3\u548c\u8ba4\u8bc6\n\n\u7ed9\u51fa\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\uff0c\u6c42\u6539\u9006\u5e8f\u5bf9\u4e2a\u6570\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u6392\u5217\n\n\u90a3\u4e48\u65e2\u7136\u662f\u6700\u5c0f\uff0c\u90a3\u4e48\u4e00\u5f00\u59cb\u4e00\u6bb5\u80af\u5b9a\u662f\u5347\u5e8f\uff0c\u4e00\u76f4\u5230\u67d0\u4e2a\u6570\u540e\u624d\u5f00\u59cb\u6539\u53d8\n\n\u5373$1$ $2$ $3$$\u2026\u2026$ $n-1$ $n$ $a$ $b$ $c$ $d$$\u2026\u2026$\n\n\u7c7b\u4f3c\u8fd9\u6837\n\n\u90a3\u4e48\u6211\u4eec\u8981\u6c42\u51fa\u8fd9\u4e2a$n$\u5728\u54ea\u91cc\n\n\u8981\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u5c31\u9700\u8981$1$\u5230$n$\u8fd9\u4e00\u6bb5\u6700\u957f\n\n\u4e5f\u5c31\u662f\u8bf4\u5728$a,b,c,d$\u540e\u9762\u6709\u5c3d\u91cf\u591a\u7684\u9006\u5e8f\u5bf9\n\n\u5f53\u6570\u5217\u4e3a$n$ $n-1$ $n-2$$\u2026\u2026$$1$\u65f6\u9006\u5e8f\u5bf9\u6700\u591a\n\n\u9006\u5e8f\u5bf9\u4e2a\u6570\u5c31\u662f$n-1+n-2\u2026\u2026+1$\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u4ece\u5c0f\u5230\u5927\u679a\u4e3e$a$ $b$ $c$$\u2026\u2026$\u7684\u957f\u5ea6\uff0c\u7b97\u51fa\u6700\u591a\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\n\n\u627e\u5230\u4e00\u4e2a\u4e34\u754c\u503c\uff0c\u5373\u7b2c\u4e00\u6b21\u9006\u5e8f\u5bf9\u4e2a\u6570\u7b2c\u4e00\u6b21\u5927\u4e8e$m$\u7684\u65f6\u5019\n\u8fd9\u4e2a\u65f6\u5019\u5c31\u53ef\u4ee5\u6839\u636e\u957f\u5ea6\u6c42\u51fa$n$\u4e86\n\n\u6240\u4ee5$1$\u5230$n-1$\u76f4\u63a5\u8f93\u51fa\n\n\u4e3a\u4ec0\u4e48\u4e0d\u8f93\u51fa$n$\u5462\n\n\u56e0\u4e3a\u4e0d\u4e00\u5b9a\u540e\u9762\u7684\u9006\u5e8f\u5bf9\u521a\u597d\u4e3a$m$\n\n\u6240\u4ee5\u9700\u8981\u5bf9$n$\u8fd9\u4e2a\u4f4d\u7f6e\u505a\u8c03\u6574\uff0c\u4f7f\u5f97\u9006\u5e8f\u5bf9\u4e3a$m$\n\n\u8bbe\u4ece$n+1$\u5f00\u59cb\u5f80\u540e\u7684\u957f\u5ea6\u9006\u5e8f\u5bf9\u4e2a\u6570\u4e3a$len$(\u6ce8\u610f\u4e0d\u5305\u62ec$n$)\n\u90a3\u4e48\u5047\u8bbe$m-len=x$\n\n\u90a3\u4e48n\u7684\u4f4d\u7f6e\u5c31\u8f93\u51fa$n+x$\n\n\u56e0\u4e3a\u540e\u9762\u7684\u5e8f\u5217\u662f$n+1n+3\u2026\u2026$\n\n\u6bd4$n+x$\u5c0f\u7684\u6709$n+1,n+2\u2026\u2026n+x-1$\u521a\u597d$x$\u4e2a\u6570\n\n\u5c31\u628a\u5dee\u503c\u8865\u4e0a\u6765\u4e86\u3002\n\n\u7136\u540e\u540e\u9762\u5c31\u9006\u5e8f\u8f93\u51fa\u5c31\u884c\u4e86\u3002\n\n\u5177\u4f53\u770b\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define REP(i, a, b) for(int i = (a); i < (b); i++)\n#define _for(i, a, b) for(int i = (a); i <= (b); i++)\nusing namespace std;\nconst int MAXN=51234;\nint a[MAXN],n,m;\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    int p=n,c;\n    for(int s=1;m;p--,s++)\n    {\n        if(m>s) m-=s;\n        else {c=m;m=0;}\n    }\n    REP(i,1,p) printf(\"%d \",i);\n    printf(\"%d \",p+c);\n    for(int i=n;i>=p;i--)\n        if(i!=p+c)\n            printf(\"%d \",i);\n    puts(\"\");\n    return 0;\n}\n```",
        "postTime": 1543640880,
        "uid": 98954,
        "name": "\u4e0d\u5b58\u5728\u4e4b\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1338 \u3010\u672b\u65e5\u7684\u4f20\u8bf4 \u3011"
    },
    {
        "content": "\u60f3\u5b66\u66f4\u591a\u59ff\u52bf\u5c31\u8fdb\u5165\u6211\u7684\u535a\u5ba2\u6765\u67e5\u770b\u5427[\u6233\u8fd9\u91cc(\\*/\u03c9\uff3c*)\u5427](http://www.vixbob-lwc.pw)\n\n\u770b\u7740\u9898\u89e3\u91cc\uff0c\u6e05\u4e00\u8272\u7684\u90fd\u662f\u4e00\u79cd\u65b9\u6cd5\uff0c~~\u4f5c\u4e3a\u4e00\u4e2a\u66b4\u529b\u6570\u636e\u7ed3\u6784\u7231\u597d\u8005~~\uff0c\u6211\u51b3\u5b9a\u7528\u6570\u636e\u7ed3\u6784$A$\u6389\u8fd9\u9898\n\n\u9996\u5148\u6211\u4eec\u8981\u4f1a\u5212\u5206\u6811\uff0c\u5b83\u7684\u672c\u8d28\u662f\u4e00\u9897\u7ebf\u6bb5\u6811\uff0c\u4f46\u662f\u652f\u6301\u9759\u6001\u533a\u95f4\u7b2c$k$\u5927\n\n\u8fd9\u91cc\u6211\u5927\u81f4\u8bb2\u8bb2\uff0c\u5c31\u662f\u50cf\u5e73\u8861\u6811\u4e00\u6837\uff0c\u8fd9\u9897\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u7ef4\u62a4\u4e00\u4e2a$size$\u503c\uff0c\u5229\u7528$size$\u503c\u6765\u8fdb\u884c\u4e8c\u5206\uff0c$k$\u5c0f\u4e8e\u5de6\u513f\u5b50$size$\u5c31\u5f80\u5de6\uff0c\u5426\u5219\u5f80\u53f3\u5e76\u66f4\u65b0$k$\uff0c$k=k-t[ls].size$\n\n\u4e0b\u9762\u662f\u89e3\u9898\u601d\u8def\uff0c\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6ca1\u6709\u9009\u7684\u4f4d\u7f6e\u53ef\u4ee5\u4ea7\u751f\u7684\u6700\u5927\u9006\u5e8f\u5bf9\u8d21\u732e\u662f$(n-1)*n/2$\uff0c\u5b9a\u4e49$n$\u4e3a\u8fd8\u53ef\u4ee5\u9009\u7684\u6570\u7684\u4e2a\u6570,$res$\u7528\u4e8e\u50a8\u5b58\u6700\u5927\u503c\uff0c\u90a3\u4e48\u6211\u4eec\u5728\u5269\u4f59\u7684\u6570\u4e2d$lowerbound$\u4e00\u4e0b\u627e\u5230$m-res[n-1]$\u7684\u4f4d\u7f6e$k$\uff0c\u5e76\u7528\u7ebf\u6bb5\u6811\u6c42\u51fa\u7b2c$k$\u5927\u7684\u6570\uff0c\u8fd9\u5c31\u662f\u5f53\u524d\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u7b54\u6848\uff0c\u5e76\u5728\u5212\u5206\u6811\u4e2d\u5220\u9664\u8fd9\u4e2a\u6570\n\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c$m-res[n-1]>0$,$m$\u8981\u88ab\u66f4\u65b0\u4e3a$m-k+1$\uff0c\u8fd9\u4e2a\u4e5f\u5f88\u597d\u7406\u89e3\uff0c$k-1$\u662f\u5f53\u524d\u4f4d\u7f6e\u7684\u8fd9\u4e2a\u6570\u53ef\u4ee5\u4ea7\u751f\u7684\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\uff0c\u6240\u4ee5\u8981\u51cf\u53bb\u8d21\u732e\u503c\u8fdb\u884c\u5bf9$m$\u7684\u66f4\u65b0\n\n\u4e0b\u9762\u653e\u51fa\u4ee3\u7801\n```\n// luogu-judger-enable-o2\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#define ls p<<1\n#define rs p<<1|1\n#define mid (l+r>>1)\n#define ull unsigned long long\n#define LL long long\nusing namespace std;\nconst int MAXN=5e4+10;\nconst LL inf=1LL<<40;\nLL num[MAXN],n,m,w[MAXN];\nstruct node{LL size,sum;}t[MAXN<<2];\ninline LL read(){\n    char ch=getchar();LL u=0,f=1;\n    while(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n    while(isdigit(ch)){u=u*10+ch-48;ch=getchar();}return u*f;\n}\ninline void pushup(int p){\n    t[p].size=t[ls].size+t[rs].size;\n}\ninline void build(int l,int r,int p){\n    if(l==r){t[p].sum=r;t[p].size=1;return;}\n    build(l,mid,ls);\n    build(mid+1,r,rs);\n    pushup(p);\n}\ninline void modify(int l,int r,int pos,int p){\n    if(l==pos&&r==pos){t[p].sum=0;t[p].size=0;return;}\n    if(pos<=mid)modify(l,mid,pos,ls);\n    else modify(mid+1,r,pos,rs);\n    pushup(p);\n}\ninline LL query(int l,int r,int k,int p){\n    if(l==r)return t[p].sum;\n    if(k<=t[ls].size)return query(l,mid,k,ls);\n    else return query(mid+1,r,k-t[ls].size,rs);\n}\nint main(){\n    n=read();m=read();\n    //for(register int i=1;i<=n*4;i++)t[i].MIN=inf,t[i].MAX=-inf;\n    for(register LL i=1;i<=n;i++)\n        num[i]=i,w[i]=i*(i-1)/2;\n    build(1,n,1);w[0]=-inf;\n    for(register LL i=n;i>=1;i--){\n        LL res=(i-2)*(i-1)/2,ans=0;\n        LL pos=lower_bound(w+1,w+1+i,m-res)-w;\n        //if(m-res>0)m=m-res;\n        //if(w[pos]>0)m-=(i-1);\n        if(m-res>0)pos=m-res+1;\n        m-=pos-1;\n        ans=query(1,n,pos,1);\n        modify(1,n,ans,1);\n        printf(\"%lld \",ans);\n    }\n    return 0;\n}\n\n```",
        "postTime": 1520615243,
        "uid": 50971,
        "name": "ViXbob",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1338 \u3010\u672b\u65e5\u7684\u4f20\u8bf4 \u3011"
    },
    {
        "content": "## \u672c\u4eba\u679c\u7136\u6570\u5b66\u76f4\u89c9\u5947\u5dee\uff08\u96be\u53d7.jpg\uff09\n\n\u9898\u9762\u5f88\u82b1\u54e8\uff0c\u4f46\u662f\u5e76\u4e0d\u662f\u5f88\u96be\u770b\u61c2\u3002\u5c31\u662f\u6c42\u4e00\u4e2a\u9006\u5e8f\u5bf9\u4e3am\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u6392\u5217\u3002\u4e00\u5f00\u59cb\u6211\u7adf\u7136\u871c\u6c41\u611f\u89c9\u8fd9\u662f\u4e00\u9053next_permutation+merge_sort\u7684\u6c34\u9898\u2026\u2026\u4e8e\u662f\u4e4e\u5199\u51fa\u4e86\u8fd9\u6837\u7684\u9b3c\u755c\u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\nint calendar[50050],calendar_c[50050],n,m;\nint merge(int*a, int l, int mid, int r)\n{\n    int count = 0;\n    int p1 = l;\n    int p2 = mid + 1;\n    int i = 0;\n    int help[r - l + 1];\n    while (p1 <= mid && p2 <= r)\n    {\n        count += a[p1] > a[p2] ? (mid - p1 + 1) : 0;\n        help[i++] = a[p1] <= a[p2] ? a[p1++] : a[p2++];\n    }\n    while (p1 <= mid)\n        help[i++] = a[p1++];\n    while (p2 <= r)\n        help[i++] = a[p2++];\n    for (i = 0; i < r-l+1; i++)\n        a[l + i] = help[i];\n    return count;\n}\nint mergeSort(int *a, int l, int r)\n{\n    if (l == r)\n        return 0;\n    int mid = l + (r - l) / 2;\n    return mergeSort(a, l, mid) + mergeSort(a, mid + 1, r) + merge(a, l, mid, r);\n}\nint SmallSum(int *a,int len)\n{\n    if (len < 2)\n        return 0;\n    return mergeSort(a, 0, len - 1);\n}\nint main(){\n    cin>>n>>m;\n    //\u53ef\u8bc1\u660e0<=m<=1/2*n*(n-1)\n    for(int i=0;i<n;i++)\n        calendar_c[i]=calendar[i]=i+1;\n    while(SmallSum(calendar_c,n)!=m){\n        next_permutation(calendar, calendar+n);\n        for(int i=0;i<n;i++)\n            calendar_c[i]=calendar[i];\n    }\n    for(int i=0;i<n;i++)\n        cout<<calendar[i]<<\" \";\n    return 0;\n}\n```\n\u7b97\u9519\u4e86\u590d\u6742\u5ea6\uff0c\u628a\u590d\u6742\u5ea6\u5f53\u6210\u4e86~~$O(nlgn+n)$~~\uff0cTLE\u4e86\u624d\u53d1\u73b0\u5ffd\u89c6\u4e86\u6709\u4e00\u4e2a\u9636\u4e58\u7ea7\u6570~~(\u6342\u8138)\u4e8e\u662f\u5f00\u59cb\u601d\u8003\u5982\u4f55\u7ef4\u62a4\u51fa\u4e00\u4e2a\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u6ee1\u8db3\u9006\u5e8f\u5bf9\u6570m\u7684\u6570\u636e\u7ed3\u6784~~\uff08\u60e8\u75db\u7684\u73b0\u5b9e\u6253\u9192\u4e86\u6211\uff09\u65e0\u5934\u7eea\u4e4b\u4e0b\uff08\u6211\u7b80\u76f4\u8822\u5230\u6781\u81f4\uff09\u7ffb\u9898\u89e3\uff0c\u57fa\u672c\u6ca1\u770b\u61c2\u522b\u4eba\u7684\u8d2a\u5fc3\u7b56\u7565\u2026\u2026\u53ef\u80fd\u6211\u592a\u8822\u4e86\uff0c\u4f46\u6570\u636e\u7ed3\u6784\u90a3\u4f4d\u8001\u54e5\u53d7\u6211\u4e00\u62dc\u3002\n\n\u7a81\u7136\u60f3\u8d77\u6765\uff0c\u6211\u53ef\u4ee5\u5e9f\u7269\u5229\u7528\u554a\uff01\u8fd9\u79cd\u6570\u636e\u5f88\u660e\u663e\u6709\u6570\u5b66\u89c4\u5f8b\u554a\uff0c\u6253\u4e2a\u8868\u4ec0\u4e48\u7684\u591a\u8212\u670d\u3002\u4e8e\u662f\u7528\u4e4b\u524d\u53ea\u670920\u5206\u7684\u7a0b\u5e8f\u6253\u4e86\u4e2a\u8868\uff08\u8fd9\u91cc\u653e\u4e00\u90e8\u5206\uff09\n```\n6 0\n1 2 3 4 5 6\n6 1\n1 2 3 4 6 5\n6 2\n1 2 3 5 6 4\n6 3\n1 2 3 6 5 4\n6 4\n1 2 4 6 5 3\n6 5\n1 2 5 6 4 3\n6 6\n1 2 6 5 4 3\n6 7\n1 3 6 5 4 2\n6 8\n1 4 6 5 3 2\n6 9\n1 5 6 4 3 2\n6 10\n1 6 5 4 3 2\n6 11\n2 6 5 4 3 1\n6 12\n3 6 5 4 2 1\n6 13\n4 6 5 3 2 1\n6 14\n5 6 4 3 2 1\n6 15\n6 5 4 3 2 1\n\n```\n\u60ca\u5947\u5730\u53d1\u73b0\uff0c\u6240\u6709\u7684\u662f\u7b54\u6848\u7684\u6392\u5217\u6784\u6210\u7684\u56fe\u50cf\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u5355\u5cf0(\u5373\u5355\u8c03\u6027\u4e0d\u6539\u53d8\u6216\u5148\u5355\u8c03\u589e\uff0c\u518d\u5355\u8c03\u51cf)\uff01\u4e14\u7eb5\u5411\u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\uff0c\u7b2c$i$\u5217\u5728\u53d8\u62106\u4e4b\u524d\u7684\u5206\u5e03\u5f88\u6709\u89c4\u5f8b\uff0c\u662f$\\frac{(n-i)*(n-i+1)}{2}$\u4e2ai\u7136\u540e\u4f9d\u6b21\u9012\u589e\u76f4\u5230\u589e\u81f3$n$\u4e3a\u6b62\u3002\u5728\u8868\u4e2d\uff0c$m$\u4e3a\u884c\u6570\uff0c\u6240\u4ee5\u53ef\u4ee5\u501f\u6b64\u6027\u8d28\u6c42\u51fa\u7b2c$m$\u884c\u5355\u8c03\u589e\u90e8\u5206\u7684\u7b2c$i$\u4e2a\u5143\u7d20\u3002\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nDefine BASE as 1/2(n-i)*(n-i-1)\nif(m is lower than BASE)\n\telement is i;\nelse\n\tif(m-BASE+i is bigger than n)\n    \telement is n\n    else\n    \telement is m-BASE+i\n\n```\n\u800c\u5176\u4f59\u5355\u8c03\u51cf\u90e8\u5206\u76f4\u63a5\u5012\u5e8f\u8f93\u51fa\u5373\u53ef\uff08\u8fd9\u4e2a\u6211\u4eec\u4ece\u8868\u91cc\u53ef\u4ee5\u770b\u51fa6\u4e4b\u540e\u90fd\u662f\u9012\u51cf\u7684\uff09\nAC\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <cstdio>\n#include <iostream>\nusing namespace std;\nlong long n, m,output;\nlong long base [50050],use[ 50050];\nint main(){\n  cin>>n>>m;\n  for(int i=1;i<=n;i++)\n    base[i]=(n- i)*(n -i-1)/ 2;\n  for (int i=1;i<= n&&output !=n ;i++){\n    output =(m-base[i]<=0 )?i :(m-base[i]+ i<=n ?m -base[i]+i:n);\n    printf(\"%lld \",output);\n    use[output]=1;\n  }\n  for(int i=n; i >= 1;i--)\n    if( !use[i] )\n      printf(\"%lld \",i);\n  return 0;\n}\n\n```",
        "postTime": 1534783836,
        "uid": 100514,
        "name": "\u5c0f\u9ed1AWM",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1338 \u3010\u672b\u65e5\u7684\u4f20\u8bf4 \u3011"
    },
    {
        "content": "# P1338 \u672b\u65e5\u7684\u4f20\u8bf4 \u9898\u89e3\n\n## \u5410\u69fd\n\n\u5176\u5b9e\uff0c\u6211\u4eca\u5929\u672c\u6765\u662f\u60f3\u53bb\u5199\u4e00\u4e0b\u4ee3\u7801\u96be\u5ea6\u4e0d\u9ad8\uff0c\u4f46\u662f\u6bd4\u8f83\u9700\u8981\u601d\u8003\u7684\u9898\u76ee\n\uff08\u672c\u6765\u662f\u60f3\u8bf4\u6bd4\u8f83\u9700\u8981\u667a\u529b\u7684\u9898\u76ee\uff0c\u60f3\u4e86\u60f3\uff0c\u7b97\u4e86......\uff09\n\n\u8a00\u5f52\u6b63\u4f20\uff0c\u8fd9\u9053\u9898\u76ee\uff0c\u770b\u5b8c\u4e4b\u540e\uff0c\u6211\u5176\u5b9e\u6709\u70b9\u61f5\uff08**N+1\u8fdb\u5236\uff1f\uff01\uff01**\uff09\uff0c\u9898\u9762\uff1a\n>1, 2, 3, \u2026 N\n>\u7b2c\u4e8c\u5929\uff0c\u65e5\u5386\u81ea\u52a8\u53d8\u4e3a\n>1, 2, 3, \u2026 N, N-1\n>\u2026\u2026\u6bcf\u6b21\u5b83\u90fd\u751f\u6210\u4e00\u4e2a\u4ee5\u524d\u672a\u51fa\u73b0\u8fc7\u7684\u201c\u6700\u5c0f\u201d\u7684\u6392\u5217\u2014\u2014\u628a\u5b83\u8f6c\u4e3aN+1\u8fdb\u5236\u540e\u6570\u7684\u6570\u503c\u6700\u5c0f\u3002\n\n\u6211\u5728\u60f3\uff1aN+1\u8fdb\u5236\uff1f\uff1f\u4ec0\u4e48\u9b3c......\n\u518d\u8ba4\u771f\u770b\u4e00\u4e0b\u6837\u4f8b\uff0c\u624d\u53d1\u73b0\uff1a**\u9006\u5e8f**\u624d\u662f\u6709\u7528\u7684.....\n>\u4ed6\u8fd8\u9884\u8a00\u5230\uff0c\u5047\u5982\u67d0\u4e00\u4e2a\u65e5\u671f\u7684\u9006\u5e8f\u8fbe\u5230\u4e00\u4e2a\u503cM\u7684\u65f6\u5019\n\uff08\u8fd9\u5c31\u662f\u7b54\u6848\u4e86<_<\uff09\n\nOK,\u90a3\u4e48\uff0c\u9006\u5e8f\u5927\u5bb6\u90fd\u5e94\u8be5\u662f\u4e86\u89e3\u7684\uff0c\u5e94\u4e3a\u9898\u9762\u4e0a\u9762\u6709\u3002\n>\u5047\u5982\u6392\u5728\u524d\u9762\u7684\u90a3\u4e2a\u6bd4\u6392\u5728\u540e\u9762\u7684\u90a3\u4e2a\u66f4\u5927\uff0c\u5c31\u662f\u4e00\u4e2a\u9006\u5e8f\n\n\u597d\u7684\uff0c\u5410\u69fd\u5b8c\u6bd5\uff0c\u73b0\u5728\uff1a\n##\u9898\u76ee\u5206\u6790\n\n> * 1\u3001\u95ee\u9898\u89c4\u6a21\n> * 2\u3001\u53ef\u5b9e\u73b0\u7684\u65b9\u6cd5\n> * 3\u3001\u6b63\u89e3&\u5206\u6790\n\n###1.\u95ee\u9898\u89c4\u6a21\n\n>\u5bf9\u4e8e10%\u7684\u6570\u636e\u6709N <= 10\u3002\n>\u5bf9\u4e8e40%\u7684\u6570\u636e\u6709N <= 1000\u3002\n> **\u5bf9\u4e8e100%\u7684\u6570\u636e\u6709 N <= 50000**\u3002\n>\u6240\u6709\u6570\u636e\u5747\u6709\u89e3\u3002\n\nN<=50000,\u660e\u663e\uff0cO\uff08N$^2$\uff09\u89e3\u51b3\u4e0d\u4e86\uff0c\u6240\u4ee5\u8bd5\u8bd5O\uff08N$log n$\uff09O\uff08N\uff09\u80fd\u5426\u89e3\u51b3\nPS\uff1aO\uff081\uff09\u7684......\u8bf4\u5b9e\u8bdd\uff0c\u8bb2\u9053\u7406\u4e0d\u5b58\u5728......\n\n####\u770b\u9898\u76ee\uff0c\u5c31\u4f1a\u5f88\u81ea\u7136\u7684\u60f3\uff1a**\u7ebf\u6027\u590d\u6742\u5ea6**\u80fd\u4e0d\u80fd\u89e3\u51b3\uff1f\uff08O\uff08N\uff09\uff09\n\u4e0d\u6025\uff0c\u5148\u770b\u3002\n\n###2.\u53ef\u5b9e\u73b0\u7684\u65b9\u6cd5\n> * \u66b4\u529b\uff08\u679a\u4e3e\u5168\u6392\u5217\uff09\n> * \u795e\u5947\u601d\u8def\n\n\u5f88\u660e\u663e\uff0c\u679a\u4e3e\u5168\u6392\u5217\u66b4\u529b\u7684\u505a\u6cd5\uff0c\u4ee3\u7801\u91cf\u4e0d\u591a\uff0c\u800c\u4e14\u4e0d\u96be\uff08\u65e0\u8bba\u662f**\u624b\u5199**\u8fd8\u662f\u7528**next_permutation()**\uff09\uff0c\u4f46\u662f\uff0c\u4f60\u53ef\u80fd\u53ea\u80fd\u8fc71~4\u4e2a\u70b9\u3002\n\n\u4ee3\u7801\u7684\u8bdd......\u6211\u6bd4\u8f83\u61d2\uff0c\u6ca1\u6253\uff0c\u5c31\u4e0d\u8d34\u4e86......\n\n\u73b0\u5728\uff0c\u5173\u952e\u70b9\u5230\u4e86\uff1a\u5982\u4f55\u7528\u4e00\u79cd\u601d\u8def\u628a\u95ee\u9898**\u7b80\u5316**\u5230**\u7ebf\u6027\u590d\u6742\u5ea6**\n\u5047\u8bbe\uff0c\u4f60\u662f\u4e00\u5bb6\u516c\u53f8\u7684\u8463\u4e8b\u957f\uff0c\u4f60\u8981\u505a\u4e00\u4e2a\u9879\u76ee\uff0c\u4f46\u662f\u4f60\u4e0d\u60f3\u505a\u6240\u6709\u7684\u6b65\u9aa4\uff0c\u600e\u4e48\u529e\uff1f\uff1f\u5f88\u7b80\u5355\uff0c\u4f60\u505a\u5176\u4e2d\u7684\u4e00\u6b65\uff0c\u7136\u540e\u628a\u5b83\u4ea4\u7ed9\u4f60\u7684\u79d8\u4e66\uff0c\u8ba9\u4ed6\uff08\u5979\uff0c\u6216\u8005......\u5b83<_<\uff09\u5e2e\u4f60\u5b8c\u6210\u5269\u4e0b\u6240\u6709\u7684\uff0c\u7136\u540e\u4f60\u505a\u5b8c\u6700\u540e\u4e00\u6b65\u4e4b\u540e\uff0c\u5ba3\u5e03\uff1a\u9879\u76ee\u5b8c\u6210\uff0c\u7136\u540e\u5411\u6295\u8d44\u65b9\u4ea4\u5dee\uff0c\u7136\u540e\u7ee7\u7eed......\nOK\uff0c\u90a3\u4e48\uff0c\u5982\u679c\u4f60\u662f\u79d8\u4e66\uff0c\u4f60\u8be5\u5e72\u4ec0\u4e48\uff1f\uff08\u8fd9\u4e2a\u95ee\u9898\uff0c\u6392\u9664\u5bf9\u201c\u5b83\u201d\u7684\u8be2\u95ee\uff09\u5f88\u7b80\u5355\uff0c**\u4f60\u5b66\u4e60\u4e00\u4e0b\u4f60\u7684\u8001\u677f**\uff0c\u628a\u95ee\u9898\u5206\u89e3\uff0c\u4ea4\u7ed9\u4e0b\u5c5e\uff0c\u7136\u540e\u8fd9\u6837\u4e00\u6b65\u4e00\u6b65\u4e0b\u53bb\uff0c\u518d\u4f20\u4e0a\u6765\uff0c\u4e00\u4eba\u505a\u4e00\u6b65\uff0c\u6700\u540e\uff0c\u5b8c\u7f8efinish\u3002\n\uff08**\u9012\u5f52\u7684\u601d\u8def**\uff0c\u7ebf\u6027\u7684\u590d\u6742\u5ea6\uff08**\u5bf9\u4e8e\u672c\u9898**\uff09\uff09\n\n\u73b0\u5728\uff0c\u6211\u4eec\u6765\u5206\u89e3\u4e00\u4e0b\u95ee\u9898\uff0c\u663e\u7136\uff0c\u5047\u8bbe\u4f60\u73b0\u5728\u6b63\u5728\u5904\u7406\u7b2ci\u4e2a\u6570\uff0c\u524d\u9762\u90fd\u5904\u7406\u5b8c\u4e86\uff0c\u73b0\u5728\u8fd8\u9700\u8981now\u4e2a\u9006\u5e8f\uff0c\u4f60\u8be5\u5982\u4f55\u89e3\u51b3\uff1f\uff1f\n\n\u89e3\u51b3\u524d\uff0c\u6211\u4eec\u5e94\u8be5\u4e86\u89e3\u4e00\u4e0b\uff1a1\u30012\u30013~n\u4e2a\u6570\uff0c\u9006\u5e8f\u6700\u591a\u6709\u591a\u5c11\u4e2a\n\n\u6700\u5c11\u7684\u9006\u5e8f\uff0c\u5f88\u663e\u7136\uff1a1\u30012\u30013\u3001\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7n   \u603b\u51710\u4e2a\n\u505a\u591a\uff1an\u3001n-1\u3001\u00b7\u00b7\u00b7\u00b7\u00b7\u00b71   \u603b\u5171\u591a\u5c11\u4e2a\uff1f\n\u73b0\u5728\u5c31\u662f\u672c\u95ee\u9898\u7528\u5230\u7684\u7b2c\u4e00\u4e2a\uff08\u8c8c\u4f3c\u4e5f\u662f\u6700\u540e\u4e00\u4e2a\uff09\u6570\u5b66\u516c\u5f0f\n**\u9ad8\u65af\u6c42\u548c**\n\u5bf9\u4e8e\u7b2c1\u4e2a\u6570\uff0c\u5b83\u7684\u9006\u5e8f\u4e2a\u6570\uff1an-1 (\u4ece\u7b2cn-1\u52301)\n\u5bf9\u4e8e\u7b2c2\u4e2a\u6570\uff0c\u5b83\u7684\u9006\u5e8f\u4e2a\u6570\uff1an-2 (\u4ece\u7b2cn-2\u52301)\n\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n\u7b2cn-1\u4e2a\u6570\uff0c\u5b83\u7684\u9006\u5e8f\u4e2a\u6570\uff1a1\n\u7b2cn\u4e2a\u6570\uff0c\u5b83\u7684\u9006\u5e8f\u4e2a\u6570\uff1a0\n\n\u5f52\u7eb3\uff1a\u9006\u5e8f\u548c\uff08n-1+1\uff09$*$\uff08n-1\uff09$/$ 2=\uff08n-1\uff09$*$\uff08n-1\uff09$/$ 2\n\u63a8\u8bba\uff1a\u5bf9\u4e8e\u7b2ci\u4e2a\u6570\uff0ci\u53cai\u4ee5\u540e\u6240\u6709\u6570\u7684\u6700\u5927\u9006\u5e8f\u4e2a\u6570\u548c\uff08\u5012\u53d9\uff09\uff1a\n**\uff08\uff08n-i\uff09$*$\uff08n-i-1\uff09$/$2\uff09**\n\u6240\u4ee5:\u7528\u9012\u5f52\u7684\u601d\u8def\uff0c\u5bf9\u4e8e\u7b2ci\u4e2a\u6570\uff0c\u4f60\u53ea\u8981\u5224\u65ad\u5b83\u653e\u5728\u54ea\uff0c\u4e8e\u662f\uff0c\u795e\u5947\u601d\u8def\uff1a\n\n\u56e0\u4e3a\uff1a\u5047\u8bbe\u9006\u5e8f\u6570\u76f8\u540c\uff0c\u8981\u6c42\u5b57\u5178\u5e8f\u6700\u5c0f\n\u6240\u4ee5\uff1a\u8d8a\u5c0f\u7684\u6570\u5411\u524d\u653e\u8d8a\u597d\n\u6240\u4ee5\uff1a\u4e00\u5c42\u5c42\u7528\u8fd9\u79cd\u8d2a\u5fc3\u601d\u8def\u653e\u4e0b\u53bb\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u6700\u4f18\u89e3\n\n\u6240\u4ee5**\u6838\u5fc3\u601d\u60f3**\uff1a\n\u5047\u8bbe\u5bf9\u4e8e\u7b2ci\u4e2a\u6570\u7684\u53ef\u9020\u6210\u7684\u6700\u5927\u9006\u5e8f\u6570\uff1a\uff08\uff08n-i\uff09$*$\uff08n-i-1\uff09$/$2\uff09\n\u8bbe\u8fd9\u4e2a\u4e3aS\n\u5982\u679c\u8fd9\u4e2aS>=now\uff08\u76ee\u524d\u9700\u8981\u7684\u9006\u5e8f\u6570\u4e2a\u6570\uff09\n\u5c31\u653e\u5728\u76ee\u524d\u6570\u7ec4\uff08ans\u6570\u7ec4\uff09\u7684\u5f00\u5934\n\n> * PS\uff1a\u4e3a\u4ec0\u4e48\u7b49\u4e8e\u4e5f\u653e\uff1f\u8fd9\u4e2a\u5927\u5bb6\u60f3\u4e00\u60f3\u5c31\u77e5\u9053\u4e86\uff0c\u6211\u61d2\u5f97\u7801\u5b57\u8bc1\u660e\u4e86\uff0c\u5bf9\u4e0d\u8d77\u5566\uff01\uff01\uff01\n\n\u53cd\u4e4b\uff0c\u5c31\u653e\u5728\u672b\u5c3e\u3002\uff08\u4e3a\u4e86\u9632\u6b62\u51fa\u73b0\u540e\u9762\u6240\u6709\u6570\u5012\u53d9\u90fd\u4e0d\u6210\u7acb\u7684\u60c5\u51b5\uff09\n\nOK\uff0c\u9898\u76ee\u5206\u6790\u7ed3\u675f\uff0c\u4ee3\u7801\u5982\u4e0b\uff08\u4ec5\u4f9b\u53c2\u8003\u3002\u3002\u3002\uff09\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <iostream>\nusing namespace std;\n\n#define ll long long\n#define mx(x,y) x>y?x:y\n#define mn(x,y) x<y?x:y\n#define _e putchar(' ')\n#define _v putchar('\\n')\n#define BF_N 1<<17\n\nchar buf[BF_N],sl,sr;\nFILE *fin;\nchar gc() {\n\treturn sl==sr&&(sr=(sl=0)+fread(buf,1,BF_N,stdin),sl==sr)?EOF:buf[sl++];\n}\nint Read() {\n\tint ans=0,k=1;\n\tchar c=gc();\n\twhile(!isdigit(c)) {\n\t\tif(c=='-')k=-1;\n\t\tc=gc();\n\t}\n\twhile(isdigit(c)) {\n\t\tans=ans*10+c-'0';\n\t\tc=gc();\n\t}\n\treturn k*ans;\n}\n\nlong long n,m,fi=1,la;\nlong long ans[1000005];\n\nvoid init(){\n\tscanf (\"%lld%lld\",&n,&m);\n\tla=n;\n\treturn;\n}\n\n#define he(i) ((n-i)*(n-i-1)/2)\n\nvoid work(){\n\tlong long now=m;\n\tfor (long long i=1;i<=n;i++){\n\t\tif (he(i)>=now)\n\t\t\tans[fi++]=i;\n\t\telse\n\t\t\tans[la--]=i,now-=(n-i);\n\t}\n\tfor (int i=1;i<=n;i++)\n\t\tprintf (\"%lld \",ans[i]);\n\treturn;\n}\n\nint main(){\n\tinit();\n\twork();\n\treturn 0;\n}\n\n\n```\n\n\u5404\u4f4d\u81ea\u5df1\u4f53\u4f1a\u4e00\u4e0b\u554a\uff0c\u6211\u7d2f\u4e86\uff0c\u6e9c\u4e86\uff01\uff01\n\n\u54e6\u54e6\u54e6\uff0c\u5bf9\u4e86\uff0c\u6211\u5728\u8fd9\u8fb9\u9053\u6b49\u4e00\u4e0b\uff1a\u6211\u4e0d\u5c0f\u5fc3\u628a**\u9898\u76ee\u5206\u6790**\u4e2d\u76842\u548c3\u641e\u5230\u4e00\u8d77\u4e86\uff0c\u62b1\u6b49\u554aQwQ\n\n\u535a\u5ba2\uff1ahttps://www.luogu.org/blog/user52670/\n\u5efa\u8bae\u5927\u5bb6\u5728\uff1ahttps://www.zybuluo.com/luochenfall/note/1531007\n\u4e2d\u89c2\u770b\uff0c\u6548\u679c\u4f1a\u597d\u4e00\u70b9\u3002\u3002\u3002\n\nOver\uff0cThanks\u3002\n",
        "postTime": 1565622679,
        "uid": 52670,
        "name": "fallingdust",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1338 \u3010\u672b\u65e5\u7684\u4f20\u8bf4 \u3011"
    },
    {
        "content": "# P1338 \u672b\u65e5\u7684\u4f20\u8bf4 \u9898\u89e3\n\n## \u5410\u69fd\n\n\u5176\u5b9e\uff0c\u6211\u4eca\u5929\u672c\u6765\u662f\u60f3\u53bb\u5199\u4e00\u4e0b\u4ee3\u7801\u96be\u5ea6\u4e0d\u9ad8\uff0c\u4f46\u662f\u6bd4\u8f83\u9700\u8981\u601d\u8003\u7684\u9898\u76ee\n\uff08\u672c\u6765\u662f\u60f3\u8bf4\u6bd4\u8f83\u9700\u8981\u667a\u529b\u7684\u9898\u76ee\uff0c\u60f3\u4e86\u60f3\uff0c\u7b97\u4e86......\uff09\n\n\u8a00\u5f52\u6b63\u4f20\uff0c\u8fd9\u9053\u9898\u76ee\uff0c\u770b\u5b8c\u4e4b\u540e\uff0c\u6211\u5176\u5b9e\u6709\u70b9\u61f5\uff08**N+1\u8fdb\u5236\uff1f\uff01\uff01**\uff09\uff0c\u9898\u9762\uff1a\n>1, 2, 3, \u2026 N\n>\u7b2c\u4e8c\u5929\uff0c\u65e5\u5386\u81ea\u52a8\u53d8\u4e3a\n>1, 2, 3, \u2026 N, N-1\n>\u2026\u2026\u6bcf\u6b21\u5b83\u90fd\u751f\u6210\u4e00\u4e2a\u4ee5\u524d\u672a\u51fa\u73b0\u8fc7\u7684\u201c\u6700\u5c0f\u201d\u7684\u6392\u5217\u2014\u2014\u628a\u5b83\u8f6c\u4e3aN+1\u8fdb\u5236\u540e\u6570\u7684\u6570\u503c\u6700\u5c0f\u3002\n\n\u6211\u5728\u60f3\uff1aN+1\u8fdb\u5236\uff1f\uff1f\u4ec0\u4e48\u9b3c......\n\u518d\u8ba4\u771f\u770b\u4e00\u4e0b\u6837\u4f8b\uff0c\u624d\u53d1\u73b0\uff1a**\u9006\u5e8f**\u624d\u662f\u6709\u7528\u7684.....\n>\u4ed6\u8fd8\u9884\u8a00\u5230\uff0c\u5047\u5982\u67d0\u4e00\u4e2a\u65e5\u671f\u7684\u9006\u5e8f\u8fbe\u5230\u4e00\u4e2a\u503cM\u7684\u65f6\u5019\n\uff08\u8fd9\u5c31\u662f\u7b54\u6848\u4e86<_<\uff09\n\nOK,\u90a3\u4e48\uff0c\u9006\u5e8f\u5927\u5bb6\u90fd\u5e94\u8be5\u662f\u4e86\u89e3\u7684\uff0c\u5e94\u4e3a\u9898\u9762\u4e0a\u9762\u6709\u3002\n>\u5047\u5982\u6392\u5728\u524d\u9762\u7684\u90a3\u4e2a\u6bd4\u6392\u5728\u540e\u9762\u7684\u90a3\u4e2a\u66f4\u5927\uff0c\u5c31\u662f\u4e00\u4e2a\u9006\u5e8f\n\n\u597d\u7684\uff0c\u5410\u69fd\u5b8c\u6bd5\uff0c\u73b0\u5728\uff1a\n##\u9898\u76ee\u5206\u6790\n\n> * 1\u3001\u95ee\u9898\u89c4\u6a21\n> * 2\u3001\u53ef\u5b9e\u73b0\u7684\u65b9\u6cd5\n> * 3\u3001\u6b63\u89e3&\u5206\u6790\n\n###1.\u95ee\u9898\u89c4\u6a21\n\n>\u5bf9\u4e8e10%\u7684\u6570\u636e\u6709N <= 10\u3002\n>\u5bf9\u4e8e40%\u7684\u6570\u636e\u6709N <= 1000\u3002\n> **\u5bf9\u4e8e100%\u7684\u6570\u636e\u6709 N <= 50000**\u3002\n>\u6240\u6709\u6570\u636e\u5747\u6709\u89e3\u3002\n\nN<=50000,\u660e\u663e\uff0cO\uff08N$^2$\uff09\u89e3\u51b3\u4e0d\u4e86\uff0c\u6240\u4ee5\u8bd5\u8bd5O\uff08N$log n$\uff09O\uff08N\uff09\u80fd\u5426\u89e3\u51b3\nPS\uff1aO\uff081\uff09\u7684......\u8bf4\u5b9e\u8bdd\uff0c\u8bb2\u9053\u7406\u4e0d\u5b58\u5728......\n\n####\u770b\u9898\u76ee\uff0c\u5c31\u4f1a\u5f88\u81ea\u7136\u7684\u60f3\uff1a**\u7ebf\u6027\u590d\u6742\u5ea6**\u80fd\u4e0d\u80fd\u89e3\u51b3\uff1f\uff08O\uff08N\uff09\uff09\n\u4e0d\u6025\uff0c\u5148\u770b\u3002\n\n###2.\u53ef\u5b9e\u73b0\u7684\u65b9\u6cd5\n> * \u66b4\u529b\uff08\u679a\u4e3e\u5168\u6392\u5217\uff09\n> * \u795e\u5947\u601d\u8def\n\n\u5f88\u660e\u663e\uff0c\u679a\u4e3e\u5168\u6392\u5217\u66b4\u529b\u7684\u505a\u6cd5\uff0c\u4ee3\u7801\u91cf\u4e0d\u591a\uff0c\u800c\u4e14\u4e0d\u96be\uff08\u65e0\u8bba\u662f**\u624b\u5199**\u8fd8\u662f\u7528**next_permutation()**\uff09\uff0c\u4f46\u662f\uff0c\u4f60\u53ef\u80fd\u53ea\u80fd\u8fc71~4\u4e2a\u70b9\u3002\n\n\u4ee3\u7801\u7684\u8bdd......\u6211\u6bd4\u8f83\u61d2\uff0c\u6ca1\u6253\uff0c\u5c31\u4e0d\u8d34\u4e86......\n\n\u73b0\u5728\uff0c\u5173\u952e\u70b9\u5230\u4e86\uff1a\u5982\u4f55\u7528\u4e00\u79cd\u601d\u8def\u628a\u95ee\u9898**\u7b80\u5316**\u5230**\u7ebf\u6027\u590d\u6742\u5ea6**\n\u5047\u8bbe\uff0c\u4f60\u662f\u4e00\u5bb6\u516c\u53f8\u7684\u8463\u4e8b\u957f\uff0c\u4f60\u8981\u505a\u4e00\u4e2a\u9879\u76ee\uff0c\u4f46\u662f\u4f60\u4e0d\u60f3\u505a\u6240\u6709\u7684\u6b65\u9aa4\uff0c\u600e\u4e48\u529e\uff1f\uff1f\u5f88\u7b80\u5355\uff0c\u4f60\u505a\u5176\u4e2d\u7684\u4e00\u6b65\uff0c\u7136\u540e\u628a\u5b83\u4ea4\u7ed9\u4f60\u7684\u79d8\u4e66\uff0c\u8ba9\u4ed6\uff08\u5979\uff0c\u6216\u8005......\u5b83<_<\uff09\u5e2e\u4f60\u5b8c\u6210\u5269\u4e0b\u6240\u6709\u7684\uff0c\u7136\u540e\u4f60\u505a\u5b8c\u6700\u540e\u4e00\u6b65\u4e4b\u540e\uff0c\u5ba3\u5e03\uff1a\u9879\u76ee\u5b8c\u6210\uff0c\u7136\u540e\u5411\u6295\u8d44\u65b9\u4ea4\u5dee\uff0c\u7136\u540e\u7ee7\u7eed......\nOK\uff0c\u90a3\u4e48\uff0c\u5982\u679c\u4f60\u662f\u79d8\u4e66\uff0c\u4f60\u8be5\u5e72\u4ec0\u4e48\uff1f\uff08\u8fd9\u4e2a\u95ee\u9898\uff0c\u6392\u9664\u5bf9\u201c\u5b83\u201d\u7684\u8be2\u95ee\uff09\u5f88\u7b80\u5355\uff0c**\u4f60\u5b66\u4e60\u4e00\u4e0b\u4f60\u7684\u8001\u677f**\uff0c\u628a\u95ee\u9898\u5206\u89e3\uff0c\u4ea4\u7ed9\u4e0b\u5c5e\uff0c\u7136\u540e\u8fd9\u6837\u4e00\u6b65\u4e00\u6b65\u4e0b\u53bb\uff0c\u518d\u4f20\u4e0a\u6765\uff0c\u4e00\u4eba\u505a\u4e00\u6b65\uff0c\u6700\u540e\uff0c\u5b8c\u7f8efinish\u3002\n\uff08**\u9012\u5f52\u7684\u601d\u8def**\uff0c\u7ebf\u6027\u7684\u590d\u6742\u5ea6\uff08**\u5bf9\u4e8e\u672c\u9898**\uff09\uff09\n\n\u73b0\u5728\uff0c\u6211\u4eec\u6765\u5206\u89e3\u4e00\u4e0b\u95ee\u9898\uff0c\u663e\u7136\uff0c\u5047\u8bbe\u4f60\u73b0\u5728\u6b63\u5728\u5904\u7406\u7b2ci\u4e2a\u6570\uff0c\u524d\u9762\u90fd\u5904\u7406\u5b8c\u4e86\uff0c\u73b0\u5728\u8fd8\u9700\u8981now\u4e2a\u9006\u5e8f\uff0c\u4f60\u8be5\u5982\u4f55\u89e3\u51b3\uff1f\uff1f\n\n\u89e3\u51b3\u524d\uff0c\u6211\u4eec\u5e94\u8be5\u4e86\u89e3\u4e00\u4e0b\uff1a1\u30012\u30013~n\u4e2a\u6570\uff0c\u9006\u5e8f\u6700\u591a\u6709\u591a\u5c11\u4e2a\n\n\u6700\u5c11\u7684\u9006\u5e8f\uff0c\u5f88\u663e\u7136\uff1a1\u30012\u30013\u3001\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7n   \u603b\u51710\u4e2a\n\u505a\u591a\uff1an\u3001n-1\u3001\u00b7\u00b7\u00b7\u00b7\u00b7\u00b71   \u603b\u5171\u591a\u5c11\u4e2a\uff1f\n\u73b0\u5728\u5c31\u662f\u672c\u95ee\u9898\u7528\u5230\u7684\u7b2c\u4e00\u4e2a\uff08\u8c8c\u4f3c\u4e5f\u662f\u6700\u540e\u4e00\u4e2a\uff09\u6570\u5b66\u516c\u5f0f\n**\u9ad8\u65af\u6c42\u548c**\n\u5bf9\u4e8e\u7b2c1\u4e2a\u6570\uff0c\u5b83\u7684\u9006\u5e8f\u4e2a\u6570\uff1an-1 (\u4ece\u7b2cn-1\u52301)\n\u5bf9\u4e8e\u7b2c2\u4e2a\u6570\uff0c\u5b83\u7684\u9006\u5e8f\u4e2a\u6570\uff1an-2 (\u4ece\u7b2cn-2\u52301)\n\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n\u7b2cn-1\u4e2a\u6570\uff0c\u5b83\u7684\u9006\u5e8f\u4e2a\u6570\uff1a1\n\u7b2cn\u4e2a\u6570\uff0c\u5b83\u7684\u9006\u5e8f\u4e2a\u6570\uff1a0\n\n\u5f52\u7eb3\uff1a\u9006\u5e8f\u548c\uff08n-1+1\uff09$*$\uff08n-1\uff09$/$ 2=\uff08n-1\uff09$*$\uff08n-1\uff09$/$ 2\n\u63a8\u8bba\uff1a\u5bf9\u4e8e\u7b2ci\u4e2a\u6570\uff0ci\u53cai\u4ee5\u540e\u6240\u6709\u6570\u7684\u6700\u5927\u9006\u5e8f\u4e2a\u6570\u548c\uff08\u5012\u53d9\uff09\uff1a\n**\uff08\uff08n-i\uff09$*$\uff08n-i-1\uff09$/$2\uff09**\n\u6240\u4ee5:\u7528\u9012\u5f52\u7684\u601d\u8def\uff0c\u5bf9\u4e8e\u7b2ci\u4e2a\u6570\uff0c\u4f60\u53ea\u8981\u5224\u65ad\u5b83\u653e\u5728\u54ea\uff0c\u4e8e\u662f\uff0c\u795e\u5947\u601d\u8def\uff1a\n\n\u56e0\u4e3a\uff1a\u5047\u8bbe\u9006\u5e8f\u6570\u76f8\u540c\uff0c\u8981\u6c42\u5b57\u5178\u5e8f\u6700\u5c0f\n\u6240\u4ee5\uff1a\u8d8a\u5c0f\u7684\u6570\u5411\u524d\u653e\u8d8a\u597d\n\u6240\u4ee5\uff1a\u4e00\u5c42\u5c42\u7528\u8fd9\u79cd\u8d2a\u5fc3\u601d\u8def\u653e\u4e0b\u53bb\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u6700\u4f18\u89e3\n\n\u6240\u4ee5**\u6838\u5fc3\u601d\u60f3**\uff1a\n\u5047\u8bbe\u5bf9\u4e8e\u7b2ci\u4e2a\u6570\u7684\u53ef\u9020\u6210\u7684\u6700\u5927\u9006\u5e8f\u6570\uff1a\uff08\uff08n-i\uff09$*$\uff08n-i-1\uff09$/$2\uff09\n\u8bbe\u8fd9\u4e2a\u4e3aS\n\u5982\u679c\u8fd9\u4e2aS>=now\uff08\u76ee\u524d\u9700\u8981\u7684\u9006\u5e8f\u6570\u4e2a\u6570\uff09\n\u5c31\u653e\u5728\u76ee\u524d\u6570\u7ec4\uff08ans\u6570\u7ec4\uff09\u7684\u5f00\u5934\n\n> * PS\uff1a\u4e3a\u4ec0\u4e48\u7b49\u4e8e\u4e5f\u653e\uff1f\u8fd9\u4e2a\u5927\u5bb6\u60f3\u4e00\u60f3\u5c31\u77e5\u9053\u4e86\uff0c\u6211\u61d2\u5f97\u7801\u5b57\u8bc1\u660e\u4e86\uff0c\u5bf9\u4e0d\u8d77\u5566\uff01\uff01\uff01\n\n\u53cd\u4e4b\uff0c\u5c31\u653e\u5728\u672b\u5c3e\u3002\uff08\u4e3a\u4e86\u9632\u6b62\u51fa\u73b0\u540e\u9762\u6240\u6709\u6570\u5012\u53d9\u90fd\u4e0d\u6210\u7acb\u7684\u60c5\u51b5\uff09\n\nOK\uff0c\u9898\u76ee\u5206\u6790\u7ed3\u675f\uff0c\u4ee3\u7801\u5982\u4e0b\uff08\u4ec5\u4f9b\u53c2\u8003\u3002\u3002\u3002\uff09\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <iostream>\nusing namespace std;\n\n#define ll long long\n#define mx(x,y) x>y?x:y\n#define mn(x,y) x<y?x:y\n#define _e putchar(' ')\n#define _v putchar('\\n')\n#define BF_N 1<<17\n\nchar buf[BF_N],sl,sr;\nFILE *fin;\nchar gc() {\n\treturn sl==sr&&(sr=(sl=0)+fread(buf,1,BF_N,stdin),sl==sr)?EOF:buf[sl++];\n}\nint Read() {\n\tint ans=0,k=1;\n\tchar c=gc();\n\twhile(!isdigit(c)) {\n\t\tif(c=='-')k=-1;\n\t\tc=gc();\n\t}\n\twhile(isdigit(c)) {\n\t\tans=ans*10+c-'0';\n\t\tc=gc();\n\t}\n\treturn k*ans;\n}\n\nlong long n,m,fi=1,la;\nlong long ans[1000005];\n\nvoid init(){\n\tscanf (\"%lld%lld\",&n,&m);\n\tla=n;\n\treturn;\n}\n\n#define he(i) ((n-i)*(n-i-1)/2)\n\nvoid work(){\n\tlong long now=m;\n\tfor (long long i=1;i<=n;i++){\n\t\tif (he(i)>=now)\n\t\t\tans[fi++]=i;\n\t\telse\n\t\t\tans[la--]=i,now-=(n-i);\n\t}\n\tfor (int i=1;i<=n;i++)\n\t\tprintf (\"%lld \",ans[i]);\n\treturn;\n}\n\nint main(){\n\tinit();\n\twork();\n\treturn 0;\n}\n```\n\u5404\u4f4d\u81ea\u5df1\u4f53\u4f1a\u4e00\u4e0b\u554a\uff0c\u6211\u7d2f\u4e86\uff0c\u6e9c\u4e86\uff01\uff01\n\n\u54e6\u54e6\u54e6\uff0c\u5bf9\u4e86\uff0c\u6211\u5728\u8fd9\u8fb9\u9053\u6b49\u4e00\u4e0b\uff1a\u6211\u4e0d\u5c0f\u5fc3\u628a**\u9898\u76ee\u5206\u6790**\u4e2d\u76842\u548c3\u641e\u5230\u4e00\u8d77\u4e86\uff0c\u62b1\u6b49\u554aQwQ\n\n\u535a\u5ba2\uff1ahttps://www.luogu.org/blog/user52670/\nOver\uff0cThanks\u3002\n",
        "postTime": 1565622636,
        "uid": 52670,
        "name": "fallingdust",
        "ccfLevel": 0,
        "title": "P1338 \u672b\u65e5\u7684\u4f20\u8bf4\u9898\u89e3"
    },
    {
        "content": "\u5dee\u5206\u6811\u72b6\u6570\u7ec4\u725b\u903c\uff01\n\n---\n\n**\u3010\u5206\u6790\u3011**\n---\n\n**\u6cd5\u4e00\uff1a**\n\n\u5173\u952e\u7684\u91cd\u70b9\u5728\u4e8e\u600e\u4e48\u786e\u5b9a\u76f8\u5e94\u9006\u5e8f\u5bf9\u6570\u7684\u6700\u5c0f\u6392\u5217\n\n\u6211\u4eec\u8003\u8651 $n$ \u4e2a\u6570\u5168\u6392\u5217\uff0c\u9006\u5e8f\u5bf9\u6570\u6700\u5927\u7684\u60c5\u51b5\u65e0\u975e\u662f\n\n$n,(n-1),(n-2)\\dots3,2,1$\n\n\u8fd9\u4e2a\u60c5\u51b5\u4e0b\uff0c\u9006\u5e8f\u5bf9\u6570\u4e3a $(n-1)+(n-2)+(n-3)+\\dots+3+2+1={n(n-1)\\over 2}$\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c $n$ \u4e2a\u6570\u7684\u9006\u5e8f\u5bf9\u6570\u6700\u5c0f\u503c\u4e3a $0$ \uff0c\u6700\u5927\u503c\u4e3a ${n(n-1)\\over 2}$\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5728\u5df2\u77e5\u7684 $n$ \u4e2a\u6570\u4e2d\uff0c\u8981\u4f7f\u5f97\u9006\u5e8f\u5bf9\u6570\u4e3a $m$\n\n\u5219\u9009\u62e9\u5269\u4f59\u7684\u7b2c $i$ \u4e2a\u6570\uff0c\u4f7f\u5f97 $i+{n(n-1)\\over 2}\\geq m$ \u5373\u53ef\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u7528 $No_i$ \u6807\u8bb0\u7b2c $i$ \u6b21\u9009\u62e9\u5269\u4f59\u7684 $(n-i+1)$ \u4e2a\u6570\u7684\u7b2c $No_i$ \u4e2a\u6570\u3002\u81f3\u4e8e\u5b83\u5177\u4f53\u662f\u591a\u5c11\uff0c\u90a3\u662f\u540e\u9762\u7684\u95ee\u9898\n\n---\n\n\u6700\u540e\uff0c\u6211\u4eec\u8f93\u51fa\u7684\u65f6\u5019\u8fdb\u884c\u4e00\u4e9b\u5c0f\u6807\u8bb0\u5373\u53ef\u5b8c\u6210\uff1a\n\n\u6211\u4eec\u8bbe\u7f6e\u4e00\u4e2a\u6570\u7ec4 $Cnt_i$ \u8868\u793a\u9009\u62e9  **\u7b2c $\\boldsymbol i$ \u4e2a\u6570\u5b57\u8981\u5f80\u540e\u79fb\u51e0\u4f4d**\n\n\u8fd9\u4e2a\u5b9a\u4e49\u6709\u70b9\u795e\u5947\uff0c\u5b83\u7684\u6765\u6e90\u662f\u8fd9\u6837\u7684\uff1a\n\n\u6211\u53d6\u4e86\u6570 $j$ \u540e\uff0c\u518d\u53d6\u7b2c $j$ \u4e2a\u6570\u5c31\u8981\u76f8\u5e94\u5730\u540e\u79fb\u3002\u90a3\u4e48\u540e\u79fb\u591a\u5c11\u5462\uff1f\u5c31\u662f\u540e\u79fb $Cnt_j$ \u4e2a\u5355\u4f4d\u4e86\n\n\u5c31\u76f8\u5f53\u4e8e\u7b2c\u4e00\u6b21\u53d6\u5230\u4e86\u6570 $j$ \uff0c\u7b2c\u4e8c\u6b21\u5c31\u8981\u53d6\u5230\u6570 $(j+Cnt_j)$ \u4e86\n\n\u800c\u53d6\u4e86\u6570 $j$ \u540e\uff0c\u518d\u53d6\u5230\u7b2c $k$ \u4e2a\u6570 $(k\\geq j)$ \u90fd\u8981\u5f80\u540e\u79fb\u4e00\u4f4d\n\n\u6240\u4ee5\u6211\u4eec\u6bcf\u6b21\u7684\u64cd\u4f5c\u90fd\u662f\u8fd9\u6837\uff1a\n1. \u786e\u5b9a\u5f53\u524d\u7684\u7b2c $i$ \u4e2a\u6570\u662f\u6570 $(i+Cnt_i)$\n2. \u5c06 $Cnt_{i+Cnt_i}$ \u5230 $Cnt_n$ \u90fd $+1$\n\n~~\u7136\u540e\u4f60\u4eec\u4f1a\u76f8\u4fe1\u6211\u5c31\u90a3\u4e48\u803f\u76f4\u5730\u6253\u4e0a\u53bb\u4e86\uff0cT\u4e86 $6$ \u4e2a\u70b9\uff1f~~\n\n\u6211\u4eec\u60f3\u4e00\u60f3\uff0c\u6211\u4eec\u8981\u5148\u5355\u70b9\u67e5\u8be2\uff0c\u518d\u533a\u95f4\u4fee\u6539\n\n\u8fd9\u4e0d\u5c31\u662f\u5dee\u5206\u6811\u72b6\u6570\u7ec4\u5417\uff1f\n\n\u6253\u4e0a\u53bb\u5c31\u5b8c\u4e8b\u4e86\n\n---\n\n**\u3010\u4ee3\u7801\u3011**\n---\n\n\u90a3\u672c\u849f\u84bb\u5c31\u653e ~~\u6211\u7801\u98ce\u6781\u4e11\u7684~~ \u4ee3\u7801\u4e86\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n#define f(a,b,c,d) for(register int a=b,c=d;a<=c;a++)\n#define g(a,b,c,d) for(register int a=b,c=d;a>=c;a--)\n// #define LOCAL\ntypedef int i32;\ntypedef unsigned int u32;\ntypedef long long int i64;\ntypedef unsigned long long int u64;\nconst i32 MAXN=50010;\ntypedef i32 ar[MAXN];\n#ifdef LOCAL\n    inline char gc() { return getchar(); }\n#else\n    inline char gc() {\n        static char s[1<<20|1]={0},*p1=s,*p2=s;\n        return (p1==p2)&&(p2=(p1=s)+fread(s,1,1<<20,stdin),p1==p2)?EOF:*(p1++);\n    }\n#endif\ninline i32 read(){\n    register i32 ans=0;register char c=gc();register bool neg=0;\n    while(c<48||c>57) neg^=!(c^'-'),c=gc();\n    while(c>=48&&c<=57) ans=(ans<<3)+(ans<<1)+(c^48),c=gc();\n    return neg?-ans:ans;\n}\n//\u65e0\u804a\u7684\u8bfb\u5165\u4f18\u5316\n\nchar Output_Ans[1<<20|1],*Output_Cur=Output_Ans;\ninline bool output() { Output_Cur-=fwrite(Output_Ans,1,Output_Cur-Output_Ans,stdout); }\ninline void print(char c) { (Output_Cur-Output_Ans+1>>20)&&output(),*(Output_Cur++)=c; }\ninline void print(i32 x){\n    char buf[20]={0}; (Output_Cur-Output_Ans+sprintf(buf,\"%d\",x)>>20)&&output();\n    Output_Cur+=sprintf(Output_Cur,\"%d\",x);\n}\n//\u65e0\u804a\u7684\u8f93\u51fa\u4f18\u5316\n\ni32 d_N;\nar ar_d_No;\n\nnamespace Tree_arr{\n    ar ar_d_Num;\n    inline void add(i32 d_Pos,i32 d_A){\n        for(register i32 i=d_Pos;i<=d_N;i+=(i&(-i))) ar_d_Num[i]+=d_A;\n    }\n    inline i32 sum(i32 d_Pos){\n        i32 d_Ans=0;\n        for(register i32 i=d_Pos;i;i-=(i&(-i))) d_Ans+=ar_d_Num[i];\n        return d_Ans;\n    }\n    inline void update(i32 d_Pos){\n        add(d_Pos,1);\n        add(d_N+1,-1);\n    }\n}\n//\u65e0\u804a\u7684\u6811\u72b6\u6570\u7ec4\n\ninline void solve(i32 d_Pos,i32 &d_Lst){\n    i32 d_Max;\n    if(d_Pos&1) d_Max=(d_Pos-1)/2*d_Pos;\n    else d_Max=d_Pos/2*(d_Pos-1);\n    f(i,0,I,d_Pos) if(i+d_Max>=d_Lst){\n        ar_d_No[d_N-d_Pos]=i+1;\n        d_Lst-=i;\n        break;\n    }\n}\n\ninline void cal(){\n    f(i,1,I,d_N){\n        print(ar_d_No[i]+Tree_arr::sum(ar_d_No[i]));\n        Tree_arr::update(ar_d_No[i]);\n        print(' ');\n    }\n}\n\nint main(){\n    d_N=read();\n    i32 d_M=read();\n    f(i,1,I,d_N) solve(d_N-i,d_M);\n    cal();\n    output();\n    return 0;\n}\n```\n\n---\n\n**\u6cd5\u4e8c\uff1a**\n\n\u521a\u5199\u5b8c\u6cd5\u4e00\u7684\u9898\u89e3\uff0c\u7acb\u9a6c\u60f3\u5230\u4e86 $O(n)$ \u7684\u6cd5\u4e8c\n\n\u5bf9\u4e8e\u5269\u4f59\u7684 $n$ \u4e2a\u6570\uff0c\u7531\u6cd5\u4e00\u5f97\u5230\u9006\u5e8f\u5bf9\u6570\u5904\u4e8e $[0,{n(n-1)\\over 2}]\\bigcap Z$ \u4e2d\n\n\u800c\u5982\u679c\u8fd9 $n$ \u4e2a\u6570\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u6570\u786e\u5b9a\u662f\u5269\u4f59\u7684\u7b2c $i$ \u4e2a\uff0c\u5219\u9006\u5e8f\u5bf9\u6570\u6700\u5927\u503c\u4e3a $[i+{(n-1)(n-2)\\over 2}]$\n\n\u597d\uff0c\u6211\u4eec\u56de\u5230\u8003\u8651\u5982\u4f55\u4f7f\u5f97\u6392\u5217\u6700\u5c0f\uff1a\n\n\u5982\u679c\u524d\u9762\u7684\u6570\u5c3d\u53ef\u80fd\u5c0f\uff0c\u5219\u6392\u5217\u4e00\u5b9a\u4e5f\u4f1a\u5c3d\u53ef\u80fd\u5c0f\n\n\u800c\u524d\u9762\u7684\u6570\u5c3d\u53ef\u80fd\u5c0f\uff0c\u540e\u9762\u6570\u7684\u9006\u5e8f\u5bf9\u6570\u4e00\u5b9a\u5c31\u8981\u5c3d\u53ef\u80fd\u5927\n\n\u90a3\u600e\u4e48\u4ee4\u540e\u9762\u7684\u9006\u5e8f\u5bf9\u6570\u6700\u5927\uff1f\u5269\u4e0b\u7684\u51e0\u4e2a\u6570\u76f4\u63a5\u5012\u5e8f\u6392\u5217\u5373\u53ef\n\n\u603b\u4e4b\uff0c\u6211\u4eec\u8981\u5c3d\u53ef\u80fd\u5148\u9009**\u5269\u4f59\u7684\u6570\u4e2d**\u6700\u5c0f\u7684\u6570\uff0c\u7136\u540e\u901a\u8fc7\u9009\u6570\u8ba9\u5b83\u4eec\u7684\u9006\u5e8f\u5bf9\u6570\u8fbe\u5230 $m$ \uff0c\u518d\u5c06\u5269\u4e0b\u7684\u6570\u5012\u5e8f\u8f93\u51fa\n\n---\n\n\u8fd9\u662f\u6211\u4eec\u7684\u601d\u8def\uff0c\u4f46\u6211\u4eec\u5b9e\u73b0\u8d77\u6765\u6ca1\u5fc5\u8981\u90a3\u4e48\u590d\u6742\uff1a\n\n\u6240\u6709\u7684\u6570\u4e2d\uff0c\u6700\u5c0f\u7684\u662f $1$ \uff0c\u5176\u6b21\u662f $2\\ ,\\ 3\\ ,\\ 4\\dots$\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5148\u5c3d\u53ef\u80fd\u6309\u5e8f\u8f93\u51fa\n\n\u540c\u65f6\uff0c\u6211\u4eec\u8ba1\u7b97\uff0c\u5982\u679c\u6b64\u65f6\u9009\u62e9\u6700\u5c0f\u7684\u6570\uff0c\u90a3\u4e48\u5269\u4e0b\u7684\u6570\u7684\u9006\u5e8f\u5bf9\u6570\u603b\u548c\u4e3a\u591a\u5c11\n\n\u56e0\u4e3a\u524d\u9762\u90fd\u662f\u6309\u5e8f\u7684\uff0c\u9006\u5e8f\u5bf9\u6570\u4e3a $0$ \uff0c\u6240\u4ee5\u5f53\u5269\u4e0b\u6570\u7684\u9006\u5e8f\u5bf9\u6570\u603b\u548c\u4e3a $a$ \u65f6\uff0c\u5982\u679c\u6b64\u65f6\u4ecd\u9009\u62e9\u6700\u5c0f\u7684\u6570\uff0c\u5219\u6574\u4e2a\u6392\u5217\u7684\u9006\u5e8f\u5bf9\u6570\u6700\u5927\u4e3a $t$\n\n\u82e5 $t\\geq m$ \uff0c\u8bf4\u660e\u6b64\u65f6\u9009\u62e9\u6700\u5c0f\u7684\uff0c\u540e\u9762\u7684\u6570\u8fd8\u80fd\u4f7f\u5f97\u9006\u5e8f\u5bf9\u603b\u6570\u4e3a $m$\n\n\u82e5 $t<m$ \uff0c\u8bf4\u660e\u82e5\u6b64\u65f6\u4ecd\u9009\u62e9\u6700\u5c0f\u7684\uff0c\u540e\u9762\u7684\u6570\u5df2\u7ecf\u65e0\u6cd5\u4f7f\u5f97\u9006\u5e8f\u5bf9\u603b\u6570\u4e3a $m$ \u4e86\n\n\u6240\u4ee5\u5f53 $t<m$ \u65f6\uff0c\u6211\u4eec\u4e0d\u80fd\u9009\u62e9\u6700\u5c0f\u7684\uff0c\u4f46\u6211\u4eec\u4ecd\u8981\u5c3d\u53ef\u80fd\u9009\u62e9\u6700\u5c0f\u7684\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u6211\u4eec\u9009\u62e9\u7b2c $k$ \u5c0f\u7684\u6570\uff0c\u5b83\u4f1a\u5927\u4e8e\u540e\u9762 $(k-1)$ \u4e2a\u6570\uff0c\u6574\u4e2a\u6392\u5217\u7684\u6700\u5927\u9006\u5e8f\u5bf9\u6570\u5373\u4e3a $(t+k-1)$\n\n\u800c\u6211\u4eec\u8981\u4f7f\u5f97\u9006\u5e8f\u5bf9\u6570\u4e3a $m$ \uff0c\u6240\u4ee5\u6211\u4eec\u6b64\u65f6\u8981\u9009\u62e9\u7b2c $(m-t+1)$ \u4e2a\u6570\n\n\u9009\u5b8c\u6211\u4eec\u5c31\u6709\u4e86\u603b\u6570\u4e3a $(m-t)$ \u7684\u9006\u5e8f\u5bf9\u6570\uff0c\u518d\u5c06\u540e\u9762\u5012\u5e8f\u6392\u5217\uff0c\u5c31\u8fbe\u6210 $m$ \u7684\u9006\u5e8f\u5bf9\u6570\u4e86\n\n---\n\n**\u3010\u4ee3\u7801\u3011**\n---\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n#define f(a,b,c,d) for(register int a=b,c=d;a<=c;a++)\n#define g(a,b,c,d) for(register int a=b,c=d;a>=c;a--)\n//#define LOCAL\ntypedef int i32;\ntypedef unsigned int u32;\ntypedef long long int i64;\ntypedef unsigned long long int u64;\nconst i32 MAXN=50010;\ntypedef i32 ar[MAXN];\n#ifdef LOCAL\n    inline char gc() { return getchar(); }\n#else\n    inline char gc() {\n        static char s[1<<20|1]={0},*p1=s,*p2=s;\n        return (p1==p2)&&(p2=(p1=s)+fread(s,1,1<<20,stdin),p1==p2)?EOF:*(p1++);\n    }\n#endif\ninline i32 read(){\n    register i32 ans=0;register char c=gc();register bool neg=0;\n    while(c<48||c>57) neg^=!(c^'-'),c=gc();\n    while(c>=48&&c<=57) ans=(ans<<3)+(ans<<1)+(c^48),c=gc();\n    return neg?-ans:ans;\n}\n//\u65e0\u804a\u7684\u8bfb\u5165\u4f18\u5316\n\nchar Output_Ans[1<<20|1],*Output_Cur=Output_Ans;\ninline bool output() { Output_Cur-=fwrite(Output_Ans,1,Output_Cur-Output_Ans,stdout); }\ninline void print(char c) { (Output_Cur-Output_Ans+1>>20)&&output(),*(Output_Cur++)=c; }\ninline void print(i32 x){\n    char buf[20]={0}; (Output_Cur-Output_Ans+sprintf(buf,\"%d\",x)>>20)&&output();\n    Output_Cur+=sprintf(Output_Cur,\"%d\",x);\n}\n//\u65e0\u804a\u7684\u8f93\u51fa\u4f18\u5316\n\nint main(){\n    i32 d_N=read(),d_M=read(),d_Un;\n    g(i,d_N-1,I,0){\n        i32 d_T;\n        if(i&1) d_T=(i-1)/2*i;\n        else d_T=i/2*(i-1);\n        //\u7b97\u5269\u4e0b\u7684\u6570\u7684\u9006\u5e8f\u5bf9\u6700\u5927\u503c\n        \n        if(d_T>d_M) print(d_N-i),print(' ');\n        else{\n            d_Un=(d_N-i)+(d_M-d_T);\n            //\u9009\u7684\u90a3\u4e2a\u6570\u5177\u4f53\u4e3a\u591a\u5c11\n            print(d_Un),print(' ');\n            g(j,d_N,J,d_N-i) if(j^d_Un)\n                print(j),print(' ');\n            break;\n        }\n    }\n    output();\n    return 0;\n}\n```\n\n\u6700\u540e\u5b89\u5229\u4e00\u4e0b [\u672c\u849f\u84bb\u7684\u535a\u5ba2](https://www.luogu.org/blog/JustinRochester/)",
        "postTime": 1564745666,
        "uid": 36031,
        "name": "JustinRochester",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1338 \u3010\u672b\u65e5\u7684\u4f20\u8bf4 \u3011"
    },
    {
        "content": " * \u9898\u76ee\u6c42\u7684\u4f7f\u6700\u5c0f\u7684\u62e5\u6709n\u5bf9\u9006\u5e8f\u5bf9\u7684\u5168\u6392\u5217\u3002\n * \u663e\u7136\u8fd9\u6837\u7684\u5168\u6392\u5217\u9ad8\u4f4d\u90e8\u5206\u662f\u6309\u7167\u987a\u5e8f\u76841~n\u3002\n * \u6240\u6709\u6570\u5b57\u9006\u5e8f\u53ef\u4ee5\u63d0\u4f9b\u6700\u5927\u7684\u9006\u5e8f\u5bf9\u6570\u76een(n-1)/2\n * \u5bfb\u627e\u4e2d\u95f4\u754c\u70b9it\uff0c\u4ee4\u6240\u6c42\u9006\u5e8f\u5bf9\u6570m\u2208[(n-it-1)(n-it)/2,(n-it)(n-it+1)/2];\n * \u6570\u7ec4\u88ab\u5206\u4e3a\u4e09\u90e8\u5206\uff1a<it\u2014\u2014\u6ca1\u6709\u9006\u5e8f\u5bf9\uff0c=it\u2014\u2014\u7b49\u4e8e\u4e4b\u540e\u5c0f\u4e8eit\u7684\u6570\u76ee\uff0c>it\u2014\u2014\u5168\u9006\u5e8f(n-it-1)(n-it)/2\n * \u663e\u7136\uff0c\u5728>=it\u7684\u90e8\u5206\u7684\u6700\u5c0f\u503c\u662fit\uff0c\u8bbe\u653e\u7f6e\u5728it\u4f4d\u7f6e\u7684\u503c\u4e3ait+dx\uff0c\u5219dx\u5c31\u662f=it\u60c5\u51b5\u4e0b\u7684\u9006\u5e8f\u5bf9\u6570\u3002\n * \u663e\u7136\uff0c\u7531\u4e0a\u9762\u7684\u5206\u6790\u53ef\u77e5\uff0cdx = m - (n-it-1)(n-it)/2;\n * \u90a3\u4e48\u7b2c\u4e09\u90e8\u5206\u53ea\u9700\u8981\u9006\u5e8f\u8f93\u51fa\u88ab\u6316\u6389\u7684\u503c\u9664\u5916\u7684\u5176\u4ed6\u6240\u6709\u7684\u6570\u7684\u9006\u5e8f\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```c++\n#include <iostream>\n\nusing namespace std;\nint n,m;\nint dx,it;\n\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cin>>n>>m;\n    int tmp=m;it=n;\n    for(int i=1;tmp>0;++i,--it) //i+it==n+1\n    {\n        dx = tmp<i?tmp:i; //tmp<i\u65f6\uff0c\u8868\u793a\u5df2\u7ecf\u5230\u8fbe\u533a\u95f4\uff0ctmp\u6b64\u65f6\u7684\u503c\u5c31\u662f\u8fd8\u9700\u8981\u8fbe\u6210\u7684\u9006\u5e8f\u5bf9\u6570\u76ee\uff0c\u4e0b\u4e00\u6b65m\u5c06<=0\n        tmp-=i;\n    }\n    for(int i=1;i<it;++i)cout<<i<<' '; //\u8f93\u51fa\u7b2c\u4e00\u90e8\u5206\uff0c\u5bf9\u9006\u5e8f\u5bf9\u6ca1\u6709\u8d21\u732e\n    cout<<it+dx; //\u8f93\u51fa\u7b2c\u4e8c\u90e8\u5206\uff0c\u5bf9\u9006\u5e8f\u5bf9\u8d21\u732e\u4e3adx\n    for(int i=n;i>=it;--i)\n        if(i-it-dx)cout<<' '<<i; //\u8f93\u51fa\u7b2c\u4e09\u90e8\u5206\uff0c\u5bf9\u9006\u5e8f\u5bf9\u5949\u732e\u4e3a(n-it)(n-it-1)/2\n    return 0; //\u603b\u8d21\u732e = dx + (n-it)(n-it-1)/2 = tmp + (i-1)(i-2)/2 = m;\n}\n```",
        "postTime": 1570622621,
        "uid": 193889,
        "name": "shiroha",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1338 \u3010\u672b\u65e5\u7684\u4f20\u8bf4 \u3011"
    },
    {
        "content": "\u6392\u5217\u7684\u9006\u5e8f\u5bf9\u6c42\u548c\u516c\u5f0f\uff1a(N - i) * (N - i - 1) / 2\n\u5982\u679c\u6700\u5c0f\u7684\u653e\u5728\u6700\u524d\u9762\u53ef\u4ee5\u5f97\u5230\u6bd4M\u66f4\u591a\u7684\u9006\u5e8f\u5bf9\uff0c\u90a3\u5c31\u5c06\u6700\u5c0f\u7684\u6570\u653e\u5728\u6700\u524d\u9762\u3002\n\u53cd\u4e4b\uff0c\u5c06\u6700\u5c0f\u7684\u653e\u5728\u6700\u540e\u9762\uff0c\u5e76\u4e14\u8ba9M\u51cf\u53bb\u8fd9\u6b21\u901a\u8fc7\u5c06\u6700\u5c0f\u7684\u653e\u5728\u6700\u540e\u9762\u5f97\u5230\u7684\u9006\u5e8f\u5bf9\n\u6700\u7ec8\u5f97\u5230\u7684\u5e8f\u5217\u5c31\u662f\u7b54\u6848\n```python\nN, M = map(int, input().split())\nfst, lst = 1, N\nans = [0 for i in range(N + 1)]\nfor i in range(1, N + 1):\n    t = (N - i) * (N - i - 1) // 2\n    if t >= M:\n        ans[fst], fst = i, fst + 1\n    else:\n        ans[lst], lst = i, lst - 1\n        M -= (lst - fst + 1)\nfor i in range(1, N + 1):\n    print(str(ans[i]), end=' ')\n\n```",
        "postTime": 1545468119,
        "uid": 33147,
        "name": "xiaosongliu",
        "ccfLevel": 0,
        "title": "python3 --- P1338 \u672b\u65e5\u7684\u4f20\u8bf4"
    },
    {
        "content": "/\\*\n\\* P:1338\n\n\\* Au:Small\\_Ash\n\n\\* \u672c\u9898\uff0c\u55ef\uff0c\u600e\u4e48\u8bf4\u5462\uff0c\u771f\u662f\u7eaf\u6570\u8bba\u3002\n\n\\* \u8fd9\u91cc\u628a\u5bf9\u5e94\u9006\u5e8f\u5bf9\u4e3ax\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u6570\u4e32\u7ed9\u5199\u4e0b\u6765 \uff08n==5\uff09\n\n```cpp\n * 12354...x=1\n * 12453...x=2\n * 12543...x=3\n * 13542...x=4\n * 14532...x=5\n * 15432...x=6\n```\n\\*   .\n\\*   .\n\\* \u5f88\u660e\u663e\uff0c\u53ef\u4ee5\u53d1\u73b0\u6bcf\u6b21\u7684\u6570\u4e32\u53ea\u4ea4\u6362\u4e86\u4e24\u4e2a\u6570\u5b57\uff0c\u518d\u6b21\u770b\u4f1a\u53d1\u73b0\u4ea4\u6362\u7684\u4e24\u4e2a\u6570\u7684\u4f4d\u7f6e\u6709\u89c4\u5f8b\u3002\u603b\u7ed3\u4e00\u4e0b\u5c31\u662f\u4e0b\u9762\u7684\u4f2a\u4ee3\u7801\n\n   \n    \n```cpp\n    x=n;\n    y=n-1;\n    for (int i=1;i<=m;i++){\n        swap(a[x],a[y]);\n        if (x-y<=1) {\n            x=n;\n            y--;\n        }\n        else x--;\n    }\n```\n\\* \u7136\u800c\u6211\u5c31\u8fd9\u4e48\u4ea4\u4e86\u4e0a\u53bb\uff0cT\u4e86\u4e24\u4e2a\u70b9\u3002\u3002\u3002\u3002\n\\* \u4e0d\u662fO(N)\u7684\u7b97\u6cd5\u5417\uff1f\uff1f\u7b49\u7b49\uff0c\u662fO(M)\u7684\u3002\u3002\u3002M\u7684\u8303\u56f4\u6709\u70b9\u5927\u3002\u3002\u3002\n\n\\* \u55ef\uff0c\u90a3\u5c31\u9700\u8981\u4f18\u5316\u4e86\uff0c\u7136\u540e\u5c31\u53d1\u73b0\u6bcf\u9694 1 3 6 10 15 21 28...(\u5c31\u662fS=1+...N)\u7684\u6570\u4e32\uff0c\u6b63\u597d\u90fd\u662f\u628a\u5c3e\u672b\u7684\u4e00\u6bb5\u6570\u5b57\u5012\u8f6c\u800c\u5df2\n\n \\* x=1        123 54\n\n \\* x=1+2=3    12 543\n\n \\* x=1+2+3=6  1 5432\n\n\\* \u4e8e\u662f\u5c31\u53ef\u4ee5\u8bbe\u8ba1\u7a0b\u5e8f\u4e86(\u4e0d\u7406\u89e3\u7684\u53ef\u4ee5\u770b\u4ee3\u7801\u3002)\n\n\\*/\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\nint a[50005],n,m,x,y;\nint main(){\n    freopen(\"1338.out\",\"w\",stdout);\n    scanf(\"%d%d\",&n,&m);\n    if (n==1){\n        printf(\"1\");\n        return 0;\n    }\n    for (int i=1;i<=n;i++) a[i]=i;\n    if (m==0) {\n        for (int i=1;i<=n;i++) printf(\"%d \",a[i]);\n        return 0;\n    }\n    y=0;\n    while (m-y>=0) {y++; m-=y;}\n    for (int i=n;i>=n-y;i--) a[i]=2*n-i-y;\n    y=n-y-1;\n    x=n;\n    for (int i=1;i<=m;i++){\n        int t=a[x];\n        a[x]=a[y];\n        a[y]=t;\n        if (x-y<=1) {\n            x=n;\n            y--;\n        }\n        else x--;\n    }\n    for (int i=1;i<=n;i++) printf(\"%d \",a[i]);\n    return 0;\n}\n\n```",
        "postTime": 1476104076,
        "uid": 745,
        "name": "dph754132771",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1338 \u3010\u672b\u65e5\u7684\u4f20\u8bf4 \u3011"
    },
    {
        "content": "\u65e2\u7136\u6ca1\u6709\u4eba\u53d1\u9898\u89e3\uff0c\u90a3\u6211\u5c31\u505a\u7b2c\u4e00\u4e2a\u5427\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5bfb\u627e\u65e5\u671f\u9006\u5e8f\u5bf9\u7684\u89c4\u5f8b\uff1a\u5f53n=1\u65f6\uff0c\u53ea\u80fd\u8bb0\u5f55\u4e00\u5929\uff0c\u9006\u5e8f\u5bf9\u4e3a0\uff08\u8fd9\u4e0d\u7528\u89e3\u91ca\u5427\uff09\uff1b\u5f53n=p(p>1)\u65f6\uff0c\u8bb0ai\u8868\u793a\u5f53i\u4e3a\u7b2c\u4e00\u4e2a\u6570\u65f6\uff0c\u65e5\u5386\u7684\u7b2c\u4e00\u4e2a\u6570\u4ee5\u540e\u7684\uff0c\u6bd4\u7b2c\u4e00\u4e2a\u6570\u5c0f\u7684\u6570\u5b57\u4e2a\u6570\uff0cbj\u8868\u793a\u5f53n=p-1\u65f6\uff0c\u7b2cj\u5929\u7684\u65e5\u5386\u7684\u9006\u5e8f\u5bf9\uff0c\u5219\u7b2c(i-1)\u00b7(p-1)!+j\u5929\u7684\u65e5\u5386\u7684\u7b2c\u4e00\u4e2a\u6570\u4e3ai\uff0c\u540ep-1\u4e2a\u6570\u5b57\u4e3a\u7b2cj\u5929\u7684\u65e5\u5386\uff0c\u9006\u5e8f\u5bf9\u4e3aai+bj\u3002\u800ca\u6709\u4ec0\u4e48\u89c4\u5f8b\u5462\uff1f[delete]\u6ca1\u6709[/delete]\u5f53\u7136\u662fai=i-1\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u9012\u63a8\u6c42\u89e3\u3002\n\n\u7136\u800c\u4f60\u4f1a\u53d1\u73b0\u8fd9\u79cd\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u7279\u522b\u5927\uff0c\u4e3aO(n^2)\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u4f18\u5316\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0cai\u6700\u5927\u4e3an-1\uff0c\u6700\u540e\u4e00\u5929\u7684\u65e5\u5386\u7684\u9006\u5e8f\u5bf9\u6700\u5927\uff0c\u8fdb\u800c\u5f97\u51fa\u4e16\u754c\u672b\u65e5\u4e00\u5b9a\u5728\u7b2ci\u25aaj!\uff081\uff1ci\u2264j+1\uff09\u5929\uff0c\u5176\u4e2dj\u8868\u793a\u7b2cn-j\u4e2a\u6570\u4ee5\u524d\u7684\u6570\u5206\u522b\u662f1,2,3,\u2026,n-j-1\uff0ci\u8868\u793a\u7b2cn-j\u4e2a\u6570\u662fn-j-1+i\uff08\u8bf7\u81ea\u5df1\u8bc1\u660e\uff09\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u7528O(n)\u7b97\u6cd5\u6c42\u51fai\u548cj\u7684\u503c\uff0c\u7136\u540e\u6839\u636ei\u548cj\u6c42\u51fa\u4e16\u7eaa\u672b\u65e5\u7684\u65e5\u5386\u7684\u524dn-j\u4f4d\uff0c\u81f3\u4e8e\u4e4b\u540e\u7684\u6570\uff0c\u5c31\u662f\u9664\u524dn-j\u4f4d\u4ee5\u5916\u7684\u6570\u7684\u9006\u5e8f\uff08\u8bc1\u660e\u4e86\u524d\u9762\u90a3\u4e2a\uff0c\u8fd9\u4e2a\u5e94\u8be5\u5f88\u5bb9\u6613\u4e86\u5427\uff09\u3002\n\n\u9644\u4ee3\u7801\uff1a\n\n```cpp\n\n#include<iostream>\nusing namespace std;\nint n,m,i,MF=0,out,LO;\nint main ()\n{\n    cin>>n>>m;\n    if (m==0)\n    for (i=1;i<=n;i++)\n    cout<<i<<' ';\n    if (m==0)\n    return 0;\n    for (i=1;i<=n;i++)\n    if (MF+i<m)\n    MF+=i;\n    else\n    break;\n    out=n-i-1;\n    for (i=1;i<=out;i++)\n    cout<<i<<' ';\n    LO=out;\n    for (;MF<=m;MF++)\n    out++;\n    cout<<out<<' ';\n    for (i=n;i>LO;i--)\n    if (i!=out)\n    cout<<i<<' ';\n    return 0;\n} \n\n```",
        "postTime": 1436452678,
        "uid": 4865,
        "name": "Mr_Li",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1338 \u3010\u672b\u65e5\u7684\u4f20\u8bf4 \u3011"
    }
]