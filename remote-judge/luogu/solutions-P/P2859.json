[
    {
        "content": "\u4ee3\u7801\u89e3\u91ca\u5982\u4e0b\n```c++\n#include <iostream>\n#include <cstdio> \n#include <algorithm>\n#include <queue>\nusing namespace std;\n\nint n,num=1;\nstruct llo{\n\tint begin,end,xu,used;\n} cow[50008];\npriority_queue<pair <int,int> > q;\n//\u7528 priority_queue\u5b9e\u73b0\u5c0f\u6839\u5806\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\u4e00\u662f\u63d2\u5165\u76f8\u53cd\u6570\uff0c\u800c\u662f\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u8fd9\u91cc\u4ecb\u7ecd\u524d\u4e00\u79cd\n//\u5bf9\u4e8ec++\u5185\u7f6e\u6570\u636e\u7c7b\u578b\uff08\u5982int\uff0cfloat\uff09\uff0c\u53ef\u4ee5\u628a\u8981\u63d2\u5165\u7684\u6570\u7684\u76f8\u53cd\u6570\u63d2\u5165\uff0c\u5728\u5806\u4e2d\u53d6\u51fa\u540e\u518d\u53d6\u8d1f\u5f97\u5230\u539f\u6765\u7684\u6570\uff0c\n//\u4f8b\u5982\uff1a\u8981\u63d2\u51651,2,3\uff0c\u53ef\u4ee5\u63d2\u5165-1\uff0c-2\uff0c-3\uff0c\u90a3\u4e48\u4ece\u5806\u4e2d\u4f1a\u53d6\u51fa\u6700\u5927\u6570-1\uff0c\u518d\u53d6\u8d1f\u5c31\u53ef\u5f97\u52301 \n\nbool cmp1(llo x,llo y){\n\treturn x.begin<y.begin;\n}\nbool cmp2(llo x,llo y){\n\treturn x.xu<y.xu;\n}\n//\u6bcf\u4e00\u5934\u725b\u90fd\u5fc5\u987b\u4ece\u7f16\u53f7\u4e3a\u672a\u77e5\u7684\u725b\u68da\u6324\u5976\uff0c\u90a3\u6211\u4eec\u5728\u6324\u5976\u524d\u5047\u8bbe\u9700\u8981\u4e00\u4e2a\u725b\u68da\uff08\u6700\u4f18\uff09\uff0c\u518d\u4e0d\u65ad\u5f80\u4e0a\u52a0\u725b\u68da\n// 1. \u4e3a\u795e\u9a6c\u4ee5\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f\u5462\uff0c\u56e0\u4e3a\u6bcf\u4e24\u5934\u725b\u4e4b\u95f4\u53ea\u5b58\u5728\u4e92\u65a5\uff08\u4e0d\u80fd\u5728\u4e00\u4e2a\u725b\u68da\uff09\u548c\u76f8\u5bb9\uff08\u53ef\u4ee5\u5728\u4e00\u4e2a\u725b\u68da\uff09\u4e24\u79cd\u5173\u7cfb \n//\u90a3\u4e48\u6613\u5f97\uff1a\u5f53\u76f8\u5bb9\u65f6\uff0c\u5f00\u59cb\u65f6\u95f4\u65e9\u7684\u5fc5\u987b\u5148\u5f00\u59cb\uff1b\u5f53\u4e92\u65a5\u65f6\uff0c\u4e24\u725b\u68da\u4e92\u4e0d\u5f71\u54cd\uff0c\u6b64\u65f6\u4e0d\u5982\u8ba9\u5f00\u59cb\u65f6\u95f4\u65e9\u7684\u5148\u6324\u5976\n// 2.\u56e0\u4e3a\u9898\u76ee\u5177\u6709\u5168\u8986\u76d6\u6027\uff0c\u6240\u4ee5\u5f53\u5b58\u5728\u4e24\u725b\u5747\u53ef\u4ee5\u5728\u67d0\u4e2a\u725b\u68da\u6324\u5976\u65f6\uff08\u6216\u5f00\u59cb\u65f6\u95f4\u76f8\u540c\uff09\u5fc5\u987b\u6709\u4e00\u725b\u518d\u5f00\u4e00\u4e2a\u725b\u68da\uff0c\u800c\u6b64\u65f6\u4e24\u725b\u6324\u5976\u7684\u622a\u6b62\u65f6\u95f4\u90fd\u4f1a\u88ab\u4fdd\u5b58\u4e0b\u6765\uff0c\n//\u5bf9\u4ee5\u540e\u7684\u9009\u62e9\u6ca1\u6709\u5f71\u54cd \n\nint main(){\n\tscanf(\"%d\",&n);//\u8f93\u5165 \n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d%d\",&cow[i].begin,&cow[i].end);\n\t\tcow[i].xu=i;//\u6346\u7ed1\u5e8f\u53f7\uff0c\u5f00\u59cb\uff0c\u7ed3\u675f\uff0c\u548c\u4f7f\u7528\u54ea\u4e2a\u725b\u68da\n\t}\n\tsort(cow+1,cow+n+1,cmp1);//\u6309\u5f00\u59cb\u7aef\u70b9\u6392\u5e8f \n\tq.push(make_pair(-cow[1].end,num));//\u5c0f\u6839\u5806\u5b58\u6570\u5bf9\uff0cnum\u725b\u68da\u73b0\u5728\u622a\u6b62\u7684\u65f6\u95f4 \u548c\u725b\u68da\u53f7\u7801 \n\tcow[1].used=1;//\u7b2c\u4e00\u5934\u725b\u4f7f\u7528\u4e00\u53f7\u725b\u680f \n\tfor(int i=2;i<=n;i++){//\u4ece\u7b2c\u4e8c\u4e2a\u5f00\u59cb\uff0c\u770b\u662f\u5426\u9700\u8981\u65b0\u5efa\u725b\u68da \n\t\tint x=-q.top().first;//\u53d6\u6700\u65e9\u7684\u622a\u6b62\u65f6\u95f4 \n\t\tint num_q=q.top().second;//\u53d6\u6700\u65e9\u622a\u6b62\u65f6\u95f4\u7684\u725b\u68da\u53f7 \n\t\tif(cow[i].begin>x){//\u5f53\u524d\u725b\u4f7f\u7528\u4e4b\u524d\u725b\u817e\u51fa\u6765\u7684 \n\t\t\tq.pop();//\u5c06\u73b0\u725b\u68da\u7684\u622a\u6b62\u65f6\u671f\u548cnum\u518d\u66f4\u65b0\u4e00\u904d \n\t\t\tq.push(make_pair(-cow[i].end,num_q));\n\t\t\tcow[i].used=num_q;//\u5f53\u524d\u725b\u5165\u4f4f\u6b64\u725b\u68da\uff0c\u8bb0\u5f55 \n\t\t}\n\t\telse{//\u5f53\u524d\u725b\u5fc5\u987b\u81ea\u5df1\u518d\u641e\u4e00\u4e2a \n\t\t\tnum++;//\u725b\u680f\u6570\u52a0\u4e00\u4e2a \n\t\t\tcow[i].used=num;//\u5f53\u524d\u725b\u5165\u4f4f\u6b64\u725b\u68da\uff0c\u8bb0\u5f55\n\t\t\tq.push(make_pair(-cow[i].end,num));//\u5c06\u65b0\u725b\u68da\u548cnum\u5b58\u5165 \n\t\t}\n\t}\n\tprintf(\"%d\\n\",num);\n\tsort(cow+1,cow+n+1,cmp2);//\u6309\u5e8f\u53f7\u91cd\u65b0\u6392\u4e00\u904d \uff0c\u56e0\u4e3a\u6700\u540e\u662f\u8ba9\u6309\u5e8f\u53f7\u8f93\u51fa \n\t//\u5f88\u663e\u7136\u7b54\u6848\u6709\u5f88\u591a\u79cd\uff0c\u53ea\u8981\u8ba9\u8be5\u5728\u4e00\u4e2a\u725b\u68da\u6324\u5976\u7684\u725b\u7684\u8f93\u51fa\u53f7\u7801\u4e00\u6837\u5c31\u884c\uff0c\u6240\u4ee5\u4fdd\u8bc1\u8f93\u51fa\u7f16\u53f7\u548c\u8f93\u5165\u7f16\u53f7\u4e00\u81f4\u662f\u5fc5\u8981\u7684 \n\tfor(int i=1;i<=n;i++)\n\t\tprintf(\"%d\\n\",cow[i].used);//\u53d6\u6bcf\u4e2a\u725b\u4f7f\u7528\u7684\u725b\u68da\u7f16\u53f7 \n\treturn 0;\n}\n```\n",
        "postTime": 1558703101,
        "uid": 143445,
        "name": "sy_zmq_001",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2859 \u3010[USACO06FEB]\u644a\u4f4d\u9884\u8ba2Stall Reservations\u3011"
    },
    {
        "content": "\u770b\u5230\u8fd9\u9898\u7684\u9898\u89e3\u8981\u4e48\u8d85\u7ea7\u590d\u6742\uff0c\u8981\u4e48\u4e0d\u5b8c\u6574\u3002\u6240\u4ee5\u5c31\u8fc7\u6765\u6c34\u4e00\u4e2a\u9898\u89e3\u4e86\u3002\n\n\u601d\u8def\u662f\u5dee\u5206\u3002\u5bf9\u4e8e\u4e00\u6bb5\u65f6\u95f4\u7684\u7ef4\u62a4\uff0c\u539f\u672c\u9700\u8981\u5c06\u8fd9\u4e00\u6bb5\u65f6\u95f4\u90fd\u6807\u8bb0\u4e0a\u8fd9\u5934\u725b\uff0c\u4f46\u7ecf\u8fc7\u5dee\u5206\u540e\u5c31\u53ea\u7528\u6807\u8bb0\u4e24\u4e2a\u7aef\u70b9\uff0c\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u964d\u4e0b\u6765\u4e86\u3002\u7136\u540e\u81f3\u4e8e\u8f93\u51fa\uff0c\u5c31\u5927\u66b4\u529b\u679a\u4e3e\u5427\uff0c\u65f6\u95f4\u4e0a\u5176\u5b9e\u662f\u7ef0\u7ef0\u6709\u4f59\u7684\u3002\n\ncode\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define LL long long\n#define res register int\n#define inf 0x3f3f3f3f\ninline int read(){\n    int s=0,w=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=getchar();\n    return s*w;\n}\nconst int N=1e5+10,M=1e6+10;\nint pos[M],n,maxx,ans,tim[N],pen[N];\n//pos\u5b58\u5dee\u5206\u6570\u7ec4\uff0ctim\u5b58\u8f93\u51fa\uff0cpen\u6307\u6bcf\u4e2a\u725b\u68da\u4f7f\u7528\u5230\u7684\u65f6\u95f4\nstruct mdzz{\n\tint l,r,id;\n}seg[N];\ninline bool cmp(mdzz a,mdzz b){\n\treturn a.l<b.l;\n}\nint main(){\n    n=read();\n    for(res i=1;i<=n;i++){\n    \tint x=read(),y=read();\n    \tseg[i]=(mdzz){x,y,i};\n    \tpos[x]++,pos[y+1]--;\n    \tmaxx=max(maxx,y);\n\t}\n\tint a=0;\n    for(res i=1;i<=maxx;i++){\n    \ta+=pos[i];\n    \tans=max(ans,a);\n\t}\n\tprintf(\"%d\\n\",ans);\n\tsort(seg+1,seg+1+n,cmp);\n    //\u8fd9\u91cc\u80af\u5b9a\u6392\u4e2a\u5e8f\uff0c\u5e94\u8be5\u6ca1\u95ee\u9898\u5427\n\tfor(res i=1;i<=n;i++)\n\t\tfor(res k=1;k<=ans;k++)\n\t\t    if(pen[k]<seg[i].l){\n\t\t        pen[k]=seg[i].r,tim[seg[i].id]=k;break;\n\t\t\t}\n\tfor(res i=1;i<=n;i++)\n\t   printf(\"%d\\n\",tim[i]);\n    return 0;\n}\n```",
        "postTime": 1528194579,
        "uid": 32878,
        "name": "foreverlasting",
        "ccfLevel": 7,
        "title": "\u3010USACO06FEB\u3011\u644a\u4f4d\u9884\u8ba2Stall Reservations"
    },
    {
        "content": "- \u9898\u76ee\u94fe\u63a5\uff1a\n\n   https://www.luogu.org/problemnew/show/P2859\n\n- \u601d\u8def\uff1a\n \n   - \u9996\u5148\u5927\u5bb6\u4f1a\u60f3\u5230\u8fd9\u662f\u5178\u578b\u7684\u8d2a\u5fc3\uff0c\u7c7b\u4f3c\u533a\u95f4\u8986\u76d6\u95ee\u9898\u7684\u601d\u8def\uff0c\u6211\u4eec\u8981\u5c06\u6bcf\u6bb5\u65f6\u95f4\u7684\u5de6\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u4e00\u4e2a\u4e2a\u63d2\u5165\uff0c\u63d2\u5165\u65f6\u6bd4\u8f83\u662f\u5426\u5148\u524d\u7684\u725b\u68da\u4e2d\u5df2\u7ecf\u6709\u725b\u6324\u5b8c\u4e86\u5976\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u65b0\u589e\u4e00\u4e2a\u725b\u68da\uff0c\u5426\u5219\u7528\u6324\u5b8c\u5976\u7684\u725b\u68da\u3002\n   \n   - \u5982\u679c\u63d2\u5165\u65f6\u626b\u63cf\u4e00\u904d\u627e\u53ef\u7528\u7684\u725b\u68da\u7684\u8bdd\u80af\u5b9a\u662f\u4f1a\u8d85\u65f6\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u7528\u4e00\u4e2a**priority_queue\uff08\u5f53\u7136\u4f60\u624b\u5199\u5806\u4e5f\u53ef\u4ee5\uff09\u7ef4\u62a4\u5148\u524d\u63d2\u5165\u7684\u725b\u68da\u4e2d\u6700\u65e9\u6324\u5b8c\u5976\uff0c\u5373\u53f3\u7aef\u70b9\u6700\u5c0f\u7684**\u90a3\u4e2a\u3002\n   \n- Tips\uff1a\n\n  - \u6ce8\u610f\u6392\u5e8f\u540e\u5976\u725b\u7684\u987a\u5e8f\u53ef\u80fd\u662f\u6df7\u4e71\u7684\uff0c\u800c\u8f93\u51fa\u662f\u8981\u6309\u539f\u6765\u8f93\u5165\u7684\u987a\u5e8f\u3002\u6211\u4eec\u53ef\u4ee5**\u7528\u4e00\u4e2aindex\u8bb0\u5f55\u6bcf\u5934\u5976\u725b\u5148\u524d\u7684\u6570\u7ec4\u4e0b\u6807**\uff0c\u4ee5\u4fbf\u5728\u8bb0\u5f55\u644a\u4f4d\u4f4d\u7f6e\u65f6\u4e0d\u4f1a\u51fa\u9519\u3002\n  \n  - \u5982\u4f55\u5224\u65ad\u6bcf\u5934\u5976\u725b\u5728\u54ea\u4e2a\u644a\u4f4d\uff1f\uff1f\uff1f\n  \n    - \u867d\u7136\u611f\u89c9\u7b2c\u4e00\u7bc7\u9898\u89e3\u7684\u4e8c\u5206+\u6811\u72b6\u6570\u7ec4\u597d\u795e\u5947\u4f46\u662f\u6211\u770b\u4e0d\u61c2\n    - \u611f\u89c9\u7b2c\u4e09\u7bc7\u7684\u5dee\u5206\u597d\u795e\u5947\u4f46\u6211\u8fd8\u662f\u770b\u4e0d\u61c2\n    \n    \u4e8e\u662f\u5c31\u7528\u4e86\u571f\u65b9\u6cd5\n    \n    \u6211\u4eec\u7528\u4e00\u4e2abe\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u5976\u725b\u5bf9\u5e94\u7684\u644a\u4f4d\uff0c\u5982\u679c\u524d\u9762\u6ca1\u6709\u53ef\u63d2\u5165\u7684\u5976\u725b\uff0c\u5219\u65b0\u589e\u4e00\u4e2a\u3002\u5982\u679c\u524d\u9762\u6709\u4e00\u4e2a\u5976\u725b\u6324\u5b8c\u4e86\u5976\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u7528\u5b83\u7684\u725b\u68da\uff0c\u5177\u4f53\u8bf7\u770b\u4ee3\u7801\u5b9e\u73b0\u3002\n    \n    \n- \u4ee3\u7801\uff1a\n\n```\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\n#include <cctype>\n#include <vector>\n#include <queue>\nusing namespace std;\nconst int maxn=50005;\nint n,be[maxn],cnt=0;\nstruct Cow{\n\tint s,e,index;\n}cow[maxn];\nstruct Num{    //\u4f18\u5148\u961f\u5217\u8bb0\u5f55\u4e0b\u6807\n\tint x;\n\tbool operator < (const Num &a) const{\n\treturn cow[x].e>cow[a.x].e;\n\t}\n};\ninline bool cmp1(const Cow &a,const Cow &b){\n\treturn a.s<b.s;\n}\npriority_queue< Num,vector<Num>>poi;\nint main()\n{\n\tcin>>n;\n\tfor(register int i=1;i<=n;i++){\n\t\tscanf(\"%d %d\",&cow[i].s,&cow[i].e);\n\t\tcow[i].index=i;\n\t}\n\tsort(cow+1,cow+1+n,cmp1);\n\tfor(register int i=1;i<=n;i++){\n\t\tNum k;k.x=i;\n\t\tif(!poi.empty()){  \n\t\t\tNum p=poi.top();//\u53d6\u51fa\u961f\u9996\u65f6\u95f4\u6700\u77ed\u7684\n\t\t\tif(cow[p.x].e>=cow[i].s){\n\t\t\t\tcnt++;\n\t\t\t\tpoi.push(k);\n\t\t\t\tbe[cow[i].index]=cnt;  //\u6ce8\u610f\u662findex\u503c\n\t\t\t}\n\t\t\telse {//\u5982\u679c\u524d\u9762\u6709\u6324\u5b8c\u5976\u7684\n\t\t\t\tpoi.pop();//\u6ce8\u610f\u8981pop\u51fa\u6765\n                poi.push(k);\n                be[cow[i].index]=be[cow[p.x].index];\t\t\t\t//\u6ce8\u610f\u8fd9\u53e5\u8bdd\uff0c\u4ed4\u7ec6\u60f3\u4e00\u60f3\u4e3a\u4ec0\u4e48\n\t\t\t}\n\t\t}\n\t\telse {//\u5982\u679c\u662f\u7b2c\u4e00\u5934\u725b\n\t\t\tpoi.push(k);\n\t\t\tcnt++;\n\t\t\tbe[cow[i].index]=cnt;\n\t\t}\n\t}\n\tcout<<cnt<<endl;\n\tfor(register int i=1;i<=n;i++){\n\t\tprintf(\"%d\\n\",be[i]);\n\t}\n\treturn 0;\n}\n```\n- \u603b\u7ed3\uff1a\n\n  \u601d\u7ef4\u96be\u5ea6\u4e00\u822c\uff0c\u8003\u9a8c\u4e00\u4e9b\u5c0f\u6280\u5de7\u7684\u4f7f\u7528",
        "postTime": 1521950719,
        "uid": 61382,
        "name": "Rye_Catcher",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2859 \u3010[USACO06FEB]\u644a\u4f4d\u9884\u8ba2Stall Reservations\u3011"
    },
    {
        "content": "\u770b\u5230\u8fd9\u9898\u611f\u89c9\u8981\u7528\u5230\u6811\u72b6\u6570\u7ec4\u67e5\u5206\u6765\u5199\uff0c\u540e\u6765\u89c9\u5f97\u5976\u725b\u7f16\u53f7\u4e0d\u592a\u597d\u6c42\uff0c\u4e8e\u662f\u60f3\u5230\u4ee5\u4e0b\u8d2a\u5fc3\uff1a\n\n\t\u5c06\u5976\u725b\u7684\u5de6\u7aef\u70b9\u5355\u72ec\u5b58\u4e00\u4e2a\u6570\u7ec4\n    \u5c06\u5976\u725b\u7684\u53f3\u7aef\u70b9\u5355\u72ec\u5b58\u4e00\u4e2a\u6570\u7ec4\t\n    \u5de6\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n    \u53f3\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n    \n    \u53f3\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u679a\u4e3e;\n    \u82e5\u8be5\u53f3\u7aef\u70b9\u7684\u725b\u6ca1\u6709\u725b\u68da\uff0c\u8be5\u725b\u7684\u725b\u68da\u4e3a:\u725b\u68da\u6570\u91cf+1;\n    \u7136\u540e\u627e\u5de6\u7aef\u70b9\u7b2c\u4e00\u4e2a\u6bd4\u8fd9\u4e2a\u53f3\u7aef\u70b9\u5927\u7684\u725b\uff0c\u653e\u4e0a\u4e0e\u8be5\u53f3\u7aef\u70b9\u7684\u725b\u76f8\u540c\u7684\u725b\u68da\n    (\u8fd9\u91cc\u7b2c\u4e00\u4e2a\u6bd4\u53f3\u7aef\u70b9\u5927\uff0c\u6307\u7684\u662f\u8be5\u5de6\u7aef\u70b9\u5750\u6807\u5927\u4e8e\u8be5\u53f3\u7aef\u70b9\u5750\u6807\uff0c\u4e14\u8be5\u5de6\u7aef\u70b9\u7684\u725b\u8fd8\u6ca1\u6709\u725b\u68da\uff09\n    \u6211\u4eec\u679a\u4e3e\u53f3\u7aef\u70b9\u7684\u65f6\u5019\u987a\u4fbf\u53ef\u4ee5\u5e26\u7740\u5de6\u7aef\u70b9\u7684\u4f4d\u7f6e\u4e00\u8d77\u8d70\n    \u6240\u4ee5\u8fd9\u91cc\u662fO(n)\n    \u518d\u52a0\u4e0a\u6392\u5e8f\u7684O(n log n)\n    \u7136\u540e\u8fd9\u9898\u5c31\u5f88\u7b80\u5355\u7684\u505a\u5b8c\u4e86.\n  \n```\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nconst int N=1000000;\nconst int M=50009;\nint n,num=0;\nint ans[M];\nstruct P{int val,id;}a[M],b[M];\nint read(){\n\tint rex=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){rex=rex*10+ch-'0';ch=getchar();}\n\treturn rex*f;\n}\nbool cmp(const P &l,const P &r){\n\treturn l.val<r.val;\n}\nint main(){\n\tn=read();\n\tfor(int i=1;i<=n;++i){\n\t\ta[i].val=read(),a[i].id=i;\n\t\tb[i].val=read(),b[i].id=i;\n\t}\n\tsort(a+1,a+n+1,cmp);\n\tsort(b+1,b+n+1,cmp);\n\tfor(int i=1,j=1;i<=n;++i){\n\t\tif(j<=n)j++;// |\u5de6\u7aef\u70b9\u6392\u540d\u4e3aj|\u7684\u725b\u5df2\u7ecf\u6210\u4e3a\u4e86\u4e0e|\u53f3\u7aef\u70b9\u6392\u540d\u4e3ai-1|\u76f8\u540c\u7684\u725b\u68da\uff0c\u6240\u4ee5j++\n\t\t//\u6b64\u65f6j++\u4e4b\u540e\u7684j\u4e00\u5b9a\u662f\u8fd8\u6ca1\u6709\u725b\u68da \n\t\tif(!ans[b[i].id])ans[b[i].id]=++num;\n\t\twhile(a[j].val<=b[i].val&&j<=n)j++;\n\t\tans[a[j].id]=ans[b[i].id];\n\t}\n\tprintf(\"%d\\n\",num);\n\tfor(int i=1;i<=n;++i)printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1540519074,
        "uid": 31216,
        "name": "sjie",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2859 \u3010[USACO06FEB]\u644a\u4f4d\u9884\u8ba2Stall Reservations\u3011"
    },
    {
        "content": "CSP-S \u53d7\u5bb3\u9009\u624b\u5199\u4e00\u53d1\u9898\u89e3\uff0c\u4f5c\u4e3a T1 \u7684\u7b80\u5316\u7248\u6b64\u9898\u53ea\u9700\u8981\u626b\u4e00\u904d\u5373\u53ef\u3002\n\n## \u5206\u6790\n\u5148\u5047\u8bbe\u6709\u65e0\u9650\u4e2a\u725b\u68da\uff0c\u8fd9\u6837\u6700\u540e\u4ecd\u8981\u4f7f\u5f97\u725b\u68da\u6570\u6700\u5c11\u5c31\u9700\u8981\u5c3d\u53ef\u80fd\u8ba9\u725b\u5f80\u7f16\u53f7\u5c0f\u7684\u725b\u68da\u91cc\u585e\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n\n![](https://pic.imgdb.cn/item/61780d052ab3f51d912d5887.png)\n\n\u663e\u7136\uff0c\u65b0\u52a0\u7684\u725b\u5728 $1$ \u6216 $2$ \u53f7\u68da\u5b50\u5f85\u7740\u90fd\u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u8981\u4fdd\u8bc1\u5c3d\u91cf\u5c11\u7684\u725b\u68da\uff0c\u6240\u4ee5\u8981\u5728\u4e00\u53f7\u725b\u68da\u91cc\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u6765\u7ef4\u62a4\u725b\u68da\u7684\u7f16\u53f7\uff0c\u6765\u4fdd\u8bc1\u725b\u8fdb\u4e86\u7f16\u53f7\u6700\u5c0f\u7684\u725b\u68da\u3002\u518d\u7528\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u6765\u7ef4\u62a4\u725b\u79bb\u5f00\u7684\u6700\u540e\u65f6\u95f4\u548c\u5b83\u6240\u5728\u7684\u725b\u68da\u7f16\u53f7\uff0c\u8fd9\u6837\u53ef\u4ee5\u5f97\u5230\u5976\u725b\u53ef\u4ee5\u8fdb\u7684\u6240\u6709\u725b\u68da\u7684\u7f16\u53f7\u3002\n\n\u6bcf\u4e00\u6b21\uff0c\u6267\u884c\u4ee5\u4e0a\u64cd\u4f5c\uff0c\u8981\u6ce8\u610f\u725b\u8fdb\u5165\u7684\u65f6\u95f4\u662f\u5355\u8c03\u9012\u589e\u7684\uff0c\u6240\u4ee5\u8981\u5148\u6392\u5e8f\uff0c\u8fd9\u6837\u4f1a\u4f7f\u725b\u7684\u7f16\u53f7\u6253\u4e71\uff0c\u6240\u4ee5\u8fd8\u8981\u8bb0\u5f55\u7f16\u53f7\u6700\u540e\u6309\u7167\u7f16\u53f7\u6392\u5e8f\uff0c\u6700\u540e\u8f93\u51fa\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 5e4 + 10;\nint n;\nstruct node {\n\tint be,en;\n\tint id,last;\n} a[N];\nbool cmp(node aa,node bb) {\n\treturn aa.be < bb.be;\n}\nstruct node2 {\n\tint id,last;\n\tbool operator < (const node2 aa) const {\n\t\treturn last > aa.last;\n\t}\n};\nbool cmp2(node aa,node bb) {\n\treturn aa.id < bb.id;\n}\npriority_queue<node2> q;\npriority_queue<int,vector<int>,greater<int> > ida;\nint num = 0;\nint main() {\n\tcin >> n;\n\tfor(int i = 1 ; i <= n ; i ++) cin >> a[i].be >> a[i].en,a[i].id = i;\n\tsort(a + 1,a + 1 + n,cmp);\n\tfor(int i = 1 ; i <= n ; i ++) ida.push(i);\n\tfor(int i = 1 ; i <= n ; i ++) {\n\t\twhile(!q.empty() && a[i].be > q.top().last) {\n\t\t\tnode2 x = q.top();\n\t\t\tq.pop();\n\t\t\tida.push(x.id);\n\t\t}//\u628a\u6240\u6709\u53ef\u884c\u7684\u89e3\u53d6\u51fa\u6765\uff0c\u6254\u8fdb\u961f\u5217\u91cc\u7ef4\u62a4\u7f16\u53f7\u6700\u5c0f\n\t\tint x = ida.top();\n\t\tida.pop();\n\t\ta[i].last = x;\n\t\tq.push({x,a[i].en});//\u53d6\u51fa\u7f16\u53f7\u6700\u5c0f\u7684\uff0c\u8bb0\u5f55\uff0c\u628a\u65b0\u7684\u725b\u5165\u961f\u3002\n\n\t}\n\tsort(a + 1,a + 1 + n,cmp2);\n\tfor(int i = 1 ; i <= n ; i ++) num = max(num,a[i].last);\n\tcout <<num <<endl;//\u6700\u5927\u7684\u725b\u68da\u5c31\u4e3a\u9700\u8981\u7684\u725b\u68da\u6570\n\tfor(int i = 1 ; i <= n ; i ++) cout << a[i].last << endl;\n\treturn 0;\n\n}\n```\n\n\n",
        "postTime": 1635257008,
        "uid": 420102,
        "name": "phmaprostrate",
        "ccfLevel": 4,
        "title": "P2859"
    },
    {
        "content": "\u54c8\u54c8\u54c8\u54c8\u54c8$\\mathcal O(n^2)$ \u8fc750000\uff0c\u592a\u523a\u6fc0\u4e86\u3002\n\n\u52a0\u4e86\u4e2a\u6b27\u677e\uff0c\u5f00\u4e2ao2\u5c31\u8fc7\u4e86\u3002\n\n\u6211\u4eec\u6709\u4e00\u4e2a\u60f3\u6cd5\uff0c\u7528\u4e00\u4e2a\u6570\u7ec4\u5b58\u4e0b\u6bcf\u4e2a\u725b\u68da\u6700\u540e\u4e00\u5934\u725b\u7684\u7ed3\u675f\u65f6\u95f4\u6bcf\u5934\u725b\u627e\u5230\u4e00\u4e2a\u7ed3\u675f\u65f6\u95f4\u5927\u4e8e\u4ed6\u7684\u725b\u68da\u5c31\u8fdb\u53bb\uff0c\u627e\u4e0d\u5230\u5c31\u65b0\u5f00\u4e00\u95f4\u3002\n\n\u4f46\u662f\u8fd9\u6837\u597d\u50cf\u4e0d\u80fd\u4fdd\u8bc1\u6700\u4f18\uff0c\u6709\u53ef\u80fd\u6211\u4eec\u7684\u4e00\u5934\u5976\u725b\u4ed6\u6bd4\u73b0\u5728\u6240\u6709\u725b\u68da\u91cc\u7684\u90a3\u5934\u725b\u5f00\u59cb\u65f6\u95f4\u8981\u65e9\u4f46\u662f\u7ed3\u675f\u65f6\u95f4\u4e5f\u65e9\uff0c\u4e5f\u5c31\u662f\u4ed6\u5e94\u8be5\u5148\u6324\u5976\u3002\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u88abhack\u4e86\u3002\n\n\u90a3\u4e48\u5982\u679c\u6211\u4eec\u5148\u6309\u7167\u6bcf\u5934\u725b\u7684\u5f00\u59cb\u65f6\u95f4\u6392\u4e2a\u5e8f\u53ef\u4ee5\u4fdd\u8bc1\u6bd4\u5f53\u524d\u8fd9\u5934\u5976\u725b\u5f00\u59cb\u65f6\u95f4\u65e9\u7684\u5976\u725b\u4e00\u5b9a\u5df2\u7ecf\u5728\u725b\u68da\u91cc\u4e86\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u6700\u4f18\u3002\n\n\u90a3\u4e48\u6211\u4eec\u7528\u6109\u5feb\u7684n\u65b9\u8fc7\u4e86\u4ed6($O(n^2)$\u53c2\u8003lyd\u7684\u84dd\u4e66)\n\n\u5b9e\u5728\u5361\u4e0d\u8fc7\u53bb\u8fd8\u662f\u7528\u5806\u8001\u8001\u5b9e\u5b9e\u4f18\u5316\u4e00\u4e0b\u627e\u725b\u68da\u7684\u8fc7\u7a0b\u5427\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ninline char gc(){\n\tstatic char buf[1<<20],*p1=buf,*p2=buf;\n\tif(p1==p2){\n\t\tp2=(p1=buf)+fread(buf,1,1<<20,stdin);\n\t\tif(p1==p2) return EOF;\n\t}\n\treturn *p1++;\n}\n\n//#define gc getchar\n\ninline int read(){\n\tint x=0;bool f=0;char p=gc();\n\twhile(!isdigit(p)) f|=(p=='-'),p=gc();\n\twhile(isdigit(p)) x=x*10+p-'0',p=gc();\n\treturn (f)?-x:x;\n}\n\n\nconst int N=5e4+5;\nint S[N],id[N];\nstruct node {\n\tint L,R,id;\n\tinline bool operator < (const node &nt) const {\n\t\tif(L!=nt.L) return L<nt.L;\n\t\treturn R<nt.R;\n\t}\n} a[N];\n\nint main(){\n\tint n=read();\n\tfor(int i=1;i<=n;++i) \n\t\ta[i].L=read(),a[i].R=read(),a[i].id=i;\n\tsort(a+1,a+n+1);\n\tint num=0;\n\tfor(register int i=1;i<=n;++i){\n\t\tid[a[i].id]=-1;\n\t\tfor(register int j=1;j<=num;++j)\n\t\t\tif(a[S[j]].R<a[i].L){\n\t\t\t\tid[a[i].id]=j;\n\t\t\t\tbreak;\n\t\t\t} \n\t\tif(id[a[i].id]==-1) S[++num]=i,id[a[i].id]=num;\n\t\telse S[id[a[i].id]]=i;\n\t}\n\tprintf(\"%d\\n\",num);\n\tfor(int i=1;i<=n;++i) printf(\"%d\\n\",id[i]);\n\treturn 0;\n}\n```",
        "postTime": 1572479848,
        "uid": 94518,
        "name": "\u4e8c\u54e5\u559d\u53ef\u4e50",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2859 \u3010[USACO06FEB]\u644a\u4f4d\u9884\u8ba2Stall Reservations\u3011"
    },
    {
        "content": "\u770b\u5230\u8fd9\u9053\u9898\uff0c\u7c7b\u4f3c\u4e8e\u533a\u95f4\u8986\u76d6\uff0c\u4f46\u663e\u7136\u4e0d\u662f\uff0c\u4e0d\u8fc7\u53ef\u4ee5\u7c7b\u6bd4\u63a8\u7406\uff0c\u76f8\u5f53\u4e8e\u6c42\u89e3\u91cd\u5408\u533a\u95f4\u7684\u6700\u5927\u4e2a\u6570\uff0c\u5e76\u8bb0\u5f55\u6bcf\u4e2a\u533a\u95f4\u7684\u4f4d\u7f6e\uff08\u5373\u725b\u68da\u5e8f\u53f7\uff09\u3002\n\n\u5c06\u533a\u95f4\u5b58\u5165a\u7ed3\u6784\u4f53\uff0c\u5e76\u6309\u5de6\u7aef\u70b9a.l\u9012\u589e\u6392\u5e8f\uff0c\u5b9a\u4e49\u4e00\u4e2a\u6307\u9488\uff08\u4e0d\u4e00\u5b9a\u8981\u662f\u6307\u9488\u53d8\u91cf\uff09zzs\uff0c\u5355\u72ec\u5c06\u53f3\u7aef\u70b9\u62ce\u51fa\u6765\u5b58\u5165r\uff08\u4f5c\u4e3azzs\u7684\u8fd0\u52a8\u8f68\u9053\uff09\uff0c\u5efa\u4e00\u4e2a\u961f\u5217\u8bb0\u5f55\u7a7a\u725b\u68da\u7684\u5e8f\u53f7\u3002cow\u6570\u7ec4\u8868\u793a\u6bcf\u5934\u725b\u6324\u5976\u725b\u68da\u3002\n\n\u5f00\u59cb\u679a\u4e3e\uff0c\u82e5a[i].l<=zzs,\u8868\u793a\u6b64\u65f6\u6ca1\u6709\u725b\u6324\u5b8c\u5976\uff0c\u4ece\u961f\u5217\u4e2d\uff08\u5df2\u7ecf\u5efa\u7acb\u7684\u7a7a\u725b\u68da\uff09\uff0c\u82e5\u961f\u5217\u4e3a\u7a7a\uff0c\u5219\u65b0\u5efa\u4e00\u4e2a\u725b\u68da\uff0c\u5e76\u4e14cow[a[i].id]=maxx+1;\uff08maxx\u4e3a\u5df2\u5efa\u725b\u68da\u6570\uff0ca.id\u4e3a\u725b\u7684\u6392\u5e8f\u524d\u7684\u539f\u59cb\u5e8f\u53f7\uff09;\u76f8\u53cda[i].l>zzs,\u8bf4\u660e\u6709\u725b\u6324\u5b8c\u5976\u4e86\uff0c\u5c06\u7a7a\u51fa\u6765\u7684\u725b\u68da\u52a0\u5165\u961f\u5217\uff0cnum--\uff08\u5728\u6324\u5976\u7684\u725b\u6570\uff09\uff0c\u6307\u9488\u53f3\u79fb\u3002\u679a\u4e3e\u5230n\u8f93\u51fa\u5373\u53ef\u3002\n\n## code\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nint n,L,R,num,maxx;\nstruct ll\n{\n\tint l,r,id;\n}a[50004];\nstruct kk\n{\n\tint r,id;\n}rx[50004];\nint cow[50004];\nqueue<int> q;\nbool cmp(ll x,ll y)\n{\n\treturn x.l<y.l;\n}\nbool cmp2(kk x,kk y)\n{\n\treturn x.r<y.r;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\tscanf(\"%d%d\",&a[i].l,&a[i].r),rx[i].r=a[i].r,a[i].id=i,rx[i].id=i;\n\tsort(a+1,a+n+1,cmp);\n\tsort(rx+1,rx+n+1,cmp2);\t\n\tint zzs=rx[1].r;int j=1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(a[i].l<=zzs)\n\t\t{\n\t\t\tnum++;\n\t\t\tif(q.empty()) cow[a[i].id]=maxx+1;\n\t\t\telse cow[a[i].id]=q.front(),q.pop();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmaxx=max(maxx,num);\n\t\t\twhile(rx[j].r<a[i].l)\n\t\t\t{\n\t\t\t\tq.push(cow[rx[j].id]);\n\t\t\t\tnum--;j++;\t\n\t\t\t}\n\t\t\tnum++;\n\t\t\tzzs=rx[j].r;\n\t\t\tcow[a[i].id]=q.front();q.pop();\n\t\t}\n\t\tmaxx=max(maxx,num);\n\t}\n\tmaxx=max(maxx,num);\n\tprintf(\"%d\\n\",maxx);\n\tfor(int i=1;i<=n;i++)\n\tprintf(\"%d\\n\",cow[i]);\n\treturn 0;\n}\n```\n\u81f4\u8c22",
        "postTime": 1572344684,
        "uid": 113777,
        "name": "1\u6c83\u5c14\u514b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2859 \u3010[USACO06FEB]\u644a\u4f4d\u9884\u8ba2Stall Reservations\u3011"
    },
    {
        "content": "\u8fd9\u9898\u8fd0\u7528\u7684\u7b97\u6cd5\u662f\u8d2a\u5fc3\u7b97\u6cd5\u3002\n\n\u6211\u4eec\u5148\u6309\u6bcf\u5934\u725b\u5f00\u59cb\u6324\u5976\u7684\u65f6\u95f4\u5f00\u59cb\u6392\u5e8f\uff0c\u6ce8\u610f\u8981\u5728\u7ed3\u6784\u4f53\u91cc\u5bf9\u6bcf\u5934\u725b\u6253\u4e0a\u4e00\u4e2a\u7f16\u53f7\uff08\u6392\u5e8f\u540e\u987a\u5e8f\u6253\u4e71\u4e86\uff09\u3002\n\n\u5bf9\u4e8e\u6bcf\u5934\u725b\uff0c\u6211\u4eec\u627e\u51fa\u4e00\u4e0b\u4e4b\u524d\u7684\u725b\u7528\u8fc7\u7684\u8c03\u63a7\u7cfb\u7edf\u4e2d\u6700\u65e9\u7ed3\u675f\u4f7f\u7528\u7684\uff0c\u5982\u679c\u7ed3\u675f\u65f6\u95f4\u5c0f\u4e8e\u5f53\u524d\u5976\u725b\u5f00\u59cb\u6324\u5976\u65f6\u95f4\uff0c\u6211\u4eec\u5c31\u5c06\u5f53\u524d\u5976\u725b\u52a0\u5165\u8fd9\u4e2a\u8c03\u63a7\u7cfb\u7edf\u3002\u5426\u5219\uff0c\u65b0\u5efa\u4e00\u4e2a\u8c03\u63a7\u7cfb\u7edf\u3002\n\n\u5b9e\u73b0\u8fc7\u7a0b\u4e2d\u6211\u4eec\u7528\u4f18\u5148\u961f\u5217\u5b58\u4e00\u4e0b\u5f53\u524d\u6700\u65e9\u7ed3\u675f\u6324\u5976\u7684\u8c03\u63a7\u7cfb\u7edf\u3002\n\n\u6548\u7387 $O(n \\log n)$\u3002\n\n## AC Code:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node{\n\tint s,e,num;\n}c[50001];\nbool operator <(const node a,const node b){\n        //return a.e<b.e||a.e==b.e&&a.s>b.s;\n        return a.e>b.e;\n}\nbool cmp(node a,node b)\n{\n\treturn a.s<b.s||a.s==b.s&&a.e<b.e;\n}\nint ans,n,i,a[50001];\npriority_queue<node> q;\nint main()\n{\n\tcin>>n;\n\tfor(i=1;i<=n;i++){\n\t\tcin>>c[i].s>>c[i].e;\n\t\tc[i].num=i;\n\t}\n\tsort(c+1,c+1+n,cmp);\n\tq.push(c[1]);\n\ta[c[1].num]=ans=1;\n\tfor(i=2;i<=n;i++){\n\t\tif(q.top().e<c[i].s){\n\t\t\ta[c[i].num]=a[q.top().num];\n\t\t\tq.pop();\n\t\t}\n\t\telse{\n\t\t\tans++;\n\t\t\ta[c[i].num]=ans;\n\t\t}\n\t\tq.push(c[i]);\n\t}\n\tcout<<ans<<endl;\n\tfor(i=1;i<=n;i++) cout<<a[i]<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1636191483,
        "uid": 486484,
        "name": "Gaode_Sean",
        "ccfLevel": 6,
        "title": "P2859 \u9898\u89e3"
    },
    {
        "content": "\u770b\u5230\u9898\u89e3\u4e0d\u591a\uff0c\u5c31\u8fc7\u6765\u51d1\u4e2a\u70ed\u95f9\u3002\n\n\u8fd9\u9053\u9898\u6211\u662f\u8fd9\u4e48\u505a\u7684\u3002\n\n- \u9996\u5148\uff0c\u5927\u7684\u601d\u8def\u662f\u8d2a\u5fc3\uff0c\u5927\u6982\u5c31\u662f\u6309\u7740\u65f6\u95f4\u5148\u540e\u987a\u5e8f\u628a\u725b\u653e\u5165stall\uff0c\u5047\u5982stall\u6ee1\u4e86\uff0c\u90a3\u4e48\u5c31\u725b\u68da\u6570cnt++\u3002\n\n- \u4f46\u662f\u53c8\u4e0d\u60f3\u6574\u4e2a\u65f6\u95f4\u7ebffor\u4e00\u904d\u6bd5\u7adf\u592a\u957f\u4e86\uff0c\u90a3\u4e48\u5c31\u9009\u62e9**for\u4e00\u904d\u725b\u7684\u5de6\u7aef\u70b9**\u597d\u4e86\uff0c\u6240\u4ee5\u5c31\u8981**\u5bf9\u5de6\u7aef\u70b9\u6392\u5e8f**\u3002- 0.\n\n- \u7136\u540e\u5728for\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u53c8\u4f1a\u9047\u5230\u725b\u51fastall\uff0c\u6240\u4ee5\u53f3\u7aef\u70b9\u4e5f\u9700\u8981\u6392\u5e8f\uff0c\u4f46\u662f\u7531\u4e8e\u5de6\u7aef\u70b9for\u5b8c\u4e4b\u540e\u5c31\u6ca1\u6709\u53f3\u7aef\u70b9\u7684\u4e8b\u513f\u4e86\uff0c\u6240\u4ee5\u7ed9\u53f3\u7aef\u70b9\u5168\u90e8\u6392\u5e8f\u662f\u6ca1\u6709\u5fc5\u8981\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9009\u62e9**\u7528\u5806\u7ef4\u62a4\u53f3\u7aef\u70b9**\u3002\uff08\u5806\u6392\uff09\n\n- \u6700\u540e\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u5f53\u6211\u4eec\u9700\u8981\u628a\u725b\u585e\u5230\u7a7astall\u91cc\u9762\u7684\u65f6\u5019\uff0c\u6211\u4eec\u585e\u54ea\u4e2a\uff1f\u4e8e\u662f\u6211\u9009\u62e9\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4stall\uff0c**\u7528\u4e8c\u5206cnt\u7684\u65b9\u6cd5\uff0c\u628a\uff08stall\u524d\u7f00\u548c\u4e0emid\u76f8\u6bd4\u8f83\uff09**\u627e\u5230\u6700\u5c0f\u7684\u90a3\u4e2a\u7a7astall\uff0c\u7136\u540e\u901a\u8fc7\u6811\u72b6\u6570\u7ec4\u7684change\u586b\u6ee1\u90a3\u4e2astall\u3002BTW\uff0c\u5176\u4e2d\u6d89\u53ca\u5230\u4e00\u4e2a\u4e0d\u5e38\u89c1\u7684\u6811\u72b6\u6570\u7ec4\u64cd\u4f5c\uff0c\u5c31\u662f\u65b0\u589e\u52a0\u4e00\u4e2astall\uff0c\u5173\u4e8e\u65b0\u589e\u7ed3\u70b9\u7684\u7ba1\u8f96\u8303\u56f4\u3002\n\n```cpp\ncnt++;\nst[cnt]=sum(cnt-1)-sum(cnt-lowbit(cnt))+1;\n```\n- \u89e3\u51b3\u4e86\u4ee5\u4e0a\u95ee\u9898\uff0cOK\u4e3b\u7a0b\u5e8f\u5c31\u662f**for\u5de6\u7aef\u70b9**+**for\u7684\u91cc\u9762\u4e00\u5b9a\u8981\u8bb0\u5f97\u5148\u201c\u51fa\u5806\u201d**+**fill stall**+**\u8bb0\u5f55\u6bcf\u4e2acow\u7684stall\u7f16\u53f7\uff01**\u7136\u540e\u8f93\u51fa\u5c31\u597d\u4e86\u3002\u4e0b\u9762\u662f\u672c\u4eba\u5199\u7684\u4ee3\u7801\uff0c\u52a0\u4e86\u4e00\u70b9\u6ce8\u91ca\uff0c\u4e0d\u8fc7\u662fpascal\u7684= =\n\n\u5176\u4e2dle\uff0cri\u5206\u522b\u5de6\u7aef\u70b9\uff0c\u53f3\u7aef\u70b9\u3002\n\nlm\u662f\u5de6\u7aef\u70b9\u6392\u5e8f\u65f6\u725b\u7f16\u53f7\uff0crm\u662f\u53f3\u7aef\u70b9\u5165\u5806\u65f6\u725b\u7f16\u53f7\n\nst\u662fstall\u7684\u6811\u72b6\u6570\u7ec4\u3002\n\ncow\u662f\u6bcf\u5934\u725b\u7684stall\u7f16\u53f7\n\nlen\u662f\u5806\u7684\u6570\u76ee\n\ncnt\u662fstall\u7684\u6570\u76ee\u4e5f\u662f\u6811\u72b6\u6570\u7ec4\u7684\u4e0a\u754c\n\nem\u662f\u6700\u5c0fempty stall\u7684\u7f16\u53f7\uff0c\u548ccheck\uff08\u4e8c\u5206\u6c42\u6700\u5c0fempty stall\uff09\u51fd\u6570\u4e00\u8d77\u7528\u7684\u3002\n\n\u5c31\u9171\uff01\n\n```pascal\nconst maxn=50000;\nvar n,i,len,cnt,em:longint;\n    le,ri,lm,rm,st,cow:array[1..maxn]of longint;\n\nprocedure swap(var x,y:longint);//swap number\nvar t:longint;\nbegin   \n    t:=x;\n    x:=y;\n    y:=t;\nend;\n\nprocedure qs(l,r:longint);//ascend quicksort\nvar x,y,k:longint;\nbegin\n    x:=l;y:=r;\n    k:=le[(l+r)shr 1];\n    repeat\n        while le[x]<k do inc(x);\n        while le[y]>k do dec(y);\n        if x<=y then\n        begin\n            swap(le[x],le[y]);\n            swap(lm[x],lm[y]);\n            inc(x);\n            dec(y);\n        end;\n    until x>y;\n    if l<y then qs(l,y);\n    if r>x then qs(x,r);\nend;\n//\u5c0f\u6839\u5806\nprocedure down(x:longint);\nvar t:longint;\nbegin\n    t:=x shl 1;\n    if t>len then exit\n    else if (t<len)and(ri[t]>ri[t+1]) then inc(t);\n    if ri[t]<ri[x] then\n    begin\n        swap(ri[x],ri[t]);\n        swap(rm[x],rm[t]);\n        down(t);\n    end;\nend;\n\nprocedure delete(x:longint);\nbegin\n    ri[x]:=ri[len];\n    rm[x]:=rm[len];\n    dec(len);\n    down(x);\nend;\n//\u5c0f\u6839\u5806\n//BIT for stalls\nfunction lowbit(x:longint):longint;\nbegin\n    exit(x and (-x));\nend;\n\nprocedure change(x,y:longint);\nbegin\n    while x<=cnt do\n    begin\n        inc(st[x],y);\n        inc(x,lowbit(x));\n    end;\nend;\n\nfunction sum(x:longint):longint;\nbegin\n    sum:=0;\n    while x>0 do\n    begin\n        inc(sum,st[x]);\n        dec(x,lowbit(x));\n    end;\nend;\n//BIT for stalls\n//Binary Search for the empty stall\nfunction check(l,r:longint):longint;\nvar mid:longint;\nbegin\n    while l<r do\n    begin\n        mid:=(l+r)shr 1;\n        if sum(mid)=mid then l:=mid+1\n        else r:=mid;\n    end;\n    exit(r);\nend;\n\n//main\nbegin\n    readln(n);\n    for i:=1 to n do\n    begin\n        readln(le[i],ri[i]);\n        lm[i]:=i;\n        rm[i]:=i;\n    end;\n    qs(1,n);//\u5de6\u7aef\u70b9\u6392\u5e8f\n    len:=n;//len for heap\n    for i:=n shr 1 downto 1 do//\u53f3\u7aef\u70b9\u5165\u5806\n    down(i);\n    cnt:=0;//cnt for BIT\n    for i:=1 to n do\n    begin\n        while ri[1]<le[i] do//need to empty stall first\n        begin\n            change(cow[rm[1]],-1);//empty stall\n            delete(1);\n        end;\n        if sum(cnt)=cnt then\n        begin\n            inc(cnt);\n            st[cnt]:=sum(cnt-1)-sum(cnt-lowbit(cnt))+1;\n            cow[lm[i]]:=cnt;\n        end//stall is full\n        else\n        begin\n            em:=check(1,cnt);//find the smallest empty stall;\n            cow[lm[i]]:=em;\n            change(em,1);//fill the empty stall;\n        end;\n    end;\n    writeln(cnt);\n    for i:=1 to n do\n    writeln(cow[i]);\nend.\n```",
        "postTime": 1510469338,
        "uid": 2009,
        "name": "wmxwmx",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2859 \u3010[USACO06FEB]\u644a\u4f4d\u9884\u8ba2Stall Reservations\u3011"
    },
    {
        "content": "> $n$\u5934\u725b\uff0c\u6bcf\u5934\u725b\u5360\u7528\u65f6\u95f4\u533a\u95f4$[l_i,r_i]$\uff0c\u4e00\u4e2a\u725b\u68da\u6bcf\u4e2a\u65f6\u95f4\u70b9\u53ea\u80fd\u88ab\u4e00\u5934\u725b\u5360\u7528\uff0c\u95ee\u6700\u5c11\u65b0\u5efa\u591a\u5c11\u4e2a\u725b\u68da\uff0c\u5e76\u4e14\u6bcf\u5934\u725b\u5728\u54ea\u4e2a\u725b\u68da\u91cc\uff1f\n\n\u6bd4\u8f83\u5de7\u7684$O(n)$\u626b\u4e00\u904d\u505a\u6cd5\uff0c\u7528\u4e00\u4e2a**\u5c0f\u8ddf\u5806**\u7ef4\u62a4\u6240\u6709\u725b\u68da\u6700\u540e\u4e00\u4e2a\u725b\u5360\u7528\u7684\u65f6\u95f4\uff08\u5373$r_i$\uff09\uff0c\u8d2a\u5fc3\u7684\u60f3\uff0c\u5982\u679c\u6700\u5148\u7ed3\u675f\u7684\u90a3\u4e2a\u725b\u68da\u90fd\u4e0d\u80fd\u6ee1\u8db3\u5f53\u524d\u725b\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u80fd\u65b0\u5f00\u4e00\u4e2a\u725b\u68da\uff0c\u5e76\u7ee7\u7eed\u7ef4\u62a4\u5c0f\u6839\u5806\uff1b\u5982\u679c\u90a3\u4e2a\u725b\u68da\u6ee1\u8db3\uff0c\u90a3\u4e48\u8fd9\u4e2a\u725b\u5c31\u53bb\u90a3\u4e2a\u725b\u68da\uff0c\u66f4\u65b0\u5f53\u524d\u725b\u68da\u6700\u540e\u5360\u7528\u65f6\u95f4\u3002\n\n```cpp\n#include <cstdio>\n#include <queue>\n#include <algorithm>\nusing namespace std;\ninline int read(){\n    char ch=getchar();int s=0;\n    while(ch<'0'||ch>'9') ch=getchar();\n    while(ch>='0'&&ch<='9') s=s*10+(ch^'0'), ch=getchar();\n    return s;\n}\nstruct nod{\n    int cnt,last;\n    const bool operator < (const nod &a) const{\n        return last>a.last; // \u5c0f\u6839\u5806\n    }\n    nod(int cnt, int last):cnt(cnt),last(last){}\n};\n#define MAXN 50005\nstruct nod2{\n    int l,r,id;\n    const bool operator < (const nod2 &a) const{\n        if(l==a.l) return r<a.r;\n        return l<a.l;\n    }\n} a[MAXN];\nint ans[MAXN];\npriority_queue<nod> q;\nint n;\nint sum=0;\nint main(){\n    n=read();\n    for(int i=1;i<=n;++i) a[i].id=i,a[i].l=read(),a[i].r=read();\n    sort(a+1, a+1+n);\n    q.push(nod(1, a[1].r));\n    ans[a[1].id]=1;\n    ++sum;\n    for(int i=2;i<=n;++i){\n        nod cur=q.top();\n        if(cur.last>=a[i].l){\n            ++sum; // \u65b0\u5f00\u725b\u68da\n            ans[a[i].id]=sum;\n            q.push(nod(sum, a[i].r));\n        }else{\n            q.pop(); // \u66f4\u65b0\u725b\u68da\u6700\u540e\u7ed3\u675f\u65f6\u95f4\n            ans[a[i].id]=cur.cnt;\n            q.push(nod(cur.cnt, a[i].r));\n        }\n    }\n    printf(\"%d\\n\", sum);\n    for(int i=1;i<=n;++i) printf(\"%d\\n\", ans[i]);\n    return 0;\n}\n\n```\n\n\n",
        "postTime": 1573472121,
        "uid": 63896,
        "name": "Santiego",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2859 \u3010[USACO06FEB]\u644a\u4f4d\u9884\u8ba2Stall Reservations\u3011"
    },
    {
        "content": "\u8fd9\u9898\u53ef\u4ee5\u66b4\u529b\uff1b\n\n\u6392\u5e8f+\u4e8c\u5206+\u66b4\u529bdfs\u67d3\u8272==AC\uff1b\n\n\u6392\u5e8f+\u4e8c\u5206+dfs\u662f\u5f88\u591a\u9898\u76ee\u7684\u901a\u89e3\uff0c\u5355\u72ec\u62ff\u51fa\u4e8c\u5206+dfs\u4e5f\u80fd\u5728\u590d\u6742\u5ea6\u4e0d\u6b63\u786e\u7684\u60c5\u51b5\u4e0b\u6c34\u6389\u4e0d\u5c11\u9898\uff0c\u751a\u81f3\u6709\u53ef\u80fd\u62ff\u5230\u6700\u4f18\u89e3\uff0c\u4f8b\u5982\u3010SDOI2008\u3011Sandy\u7684\u5361\u7247\uff1b\n\n\u4e0a\u4ee3\u7801\u5427\u2193\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nconst int MAXN=1<<17;\n\nint n;\nint clr;\nstruct rpg{\n    int l,r,id,clr;\n}p[MAXN];\n\ninline int read(){\n\tint x=0;char ch=getchar();\n\twhile(ch<'0'||ch>'9') ch=getchar();\n\twhile(ch>='0'&&ch<='9') x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n\treturn x;\n}\n\nbool cmp1(rpg a,rpg b){\n    if(a.l==b.l) return a.r<b.r;\n    return a.l<b.l;\n}bool cmp2(rpg a,rpg b){\n    return a.id<b.id;\n}\n\nvoid dfs(int k){\n\tint l=k+1,r=n;\n\twhile(l<r){\n\t\tint mid=l+r>>1;\n\t\tif(p[mid].l>p[k].r) r=mid;\n\t\telse l=mid+1;\n\t}for(int i=l;i<=n;++i){\n\t\tif(!p[i].clr&&p[i].l>p[k].r){\n\t\t\tp[i].clr=p[k].clr;\n\t\t\tdfs(i);\n\t\t\treturn;\n\t\t}\n\t}return;\n}\n\nvoid init(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;++i){\n        p[i].l=read(),p[i].r=read();\n        p[i].id=i;\n    }return;\n}\n\nvoid solve(){\n    sort(p+1,p+n+1,cmp1);\n    for(register int i=1;i<=n;++i){\n        if(!p[i].clr){\n        \tp[i].clr=++clr;\n        \tdfs(i);\n\t\t}\n    }sort(p+1,p+n+1,cmp2);\n    return;\n}\n\nvoid write(){\n    printf(\"%d\\n\",clr);\n    for(int i=1;i<=n;++i){\n        printf(\"%d\\n\",p[i].clr);\n    }return;\n}\n\nint main(){\n    init();\n    solve();\n    write();\n    return 0;\n}\n```",
        "postTime": 1522318693,
        "uid": 31293,
        "name": "Adove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2859 \u3010[USACO06FEB]\u644a\u4f4d\u9884\u8ba2Stall Reservations\u3011"
    },
    {
        "content": "## \u601d\u8def\n\u8003\u8651\u8d2a\u5fc3\u5566\u3002\u4e0b\u6587\u4e2d $l_i$ \u8868\u793a\u7b2c $i$ \u5934\u725b\u6324\u5976\u5f00\u59cb\u65f6\u95f4\uff0c$r_i$ \u8868\u793a\u7ed3\u675f\u65f6\u95f4\uff0c$\\min$ \u8868\u793a\u524d $i-1$ \u5934\u725b\u4e2d\u6700\u65e9\u7ed3\u675f\u6324\u5976\u7684\u65f6\u95f4\u3002\u6211\u4eec\u53ef\u4ee5\u4ee5**\u5f00\u59cb\u65f6\u95f4**\u4e3a\u5173\u952e\u5b57\u7ed9\u5976\u725b\u4eec**\u6392\u5e8f**\uff0c\u7136\u540e\u4f9d\u6b21\u8003\u8651\u6bcf\u5934\u5976\u725b\u3002\u5230\u7b2c $i$ \u5934\u725b\u65f6\u5206\u4e0b\u9762\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1. $l_i\\leq\\min$ \u8fd9\u5934\u5976\u725b\u5c31\u6ca1\u5730\u65b9\u6324\u5976\u4e86\uff0c\u9700\u8981\u65b0\u5f00\u4e00\u95f4\u725b\u68da\uff0c\u7b54\u6848++\uff1b\n2. $l_i>\\min$ \u53ef\u4ee5\u627e\u4e2a\u7ed3\u675f\u6324\u5976\u7684\u725b\u68da\u8fdb\u53bb\u6324\u5976\u3002\u4f46\u662f\u5982\u679c\u6709\u591a\u4e2a\u725b\u68da\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\u5462\uff1f\u5176\u5b9e\u968f\u4fbf\u627e\u4e00\u4e2a\u5c31\u884c\u4e86\u3002\u56e0\u4e3a\u5bf9\u4e8e\u4efb\u610f $j>i$\uff0c\u90fd\u6709 $l_j>l_i$\uff08\u6211\u4eec\u81ea\u5df1\u6392\u597d\u5e8f\u4e86\uff09\uff0c\u5373\u5f53\u524d\u5976\u725b $i$ \u80fd\u53bb\u7684\u725b\u68da\u5976\u725b $j$ \u90fd\u80fd\u53bb\uff0c\u8c01\u5148\u53bb\u90fd\u4e00\u6837\u7684\u3002\u4e3a\u4e86\u65b9\u4fbf\u7528\u5806\u7ef4\u62a4\uff0c\u6211\u4eec\u5c31\u8ba9\u5b83\u53bb\u6700\u65e9\u7ed3\u675f\u6324\u5976\u7684\u725b\u68da\u3002\n\n\n\u653e\u4e2a\u6837\u4f8b\u7684\u56fe\u7406\u89e3\u4e00\u4e0b\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/nyod6ph7.png)\n\n## Code\n\u4ee3\u7801\u5b9e\u73b0\u7684\u8bdd\uff0c\u7528\u5c0f\u6839\u5806\u7ef4\u62a4 $\\min$\uff0c\u5047\u88c5\u4f60\u4eec\u90fd\u4f1a\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff08\u4e0d\u4f1a\u4e5f\u53ef\u4ee5\u73b0\u5b66\uff09\u3002\u8fd8\u8981\u6ce8\u610f\u4e00\u70b9\uff1a\u9898\u76ee\u8ba9\u6211\u4eec\u8f93\u51fa\u6bcf\u5934\u5976\u725b\u53bb\u7684\u725b\u68da\u7f16\u53f7\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5728\u6392\u5e8f\u524d\u8bb0\u5f55\u4e00\u4e2a\u503c $first$ \u8868\u793a\u6bcf\u5934\u5976\u725b\u7684\u521d\u59cb\u7f16\u53f7\u3002\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<queue>\n#include<algorithm>\nusing namespace std;\ninline int read() {\n\tint res;char c;\n\twhile(!isdigit(c=getchar()));res=c^48;\n\twhile(isdigit(c=getchar())) res=(res<<3)+(res<<1)+(c^48);\n\treturn res;\n}\nstruct Time { // \u725b\u6324\u5976\u7684\u65f6\u95f4\u6bb5 \n\tint first,l,r; \n}a[50005];\nstruct stall { // \u725b\u68da \n\tint num,last;\n};\nbool operator <(const stall &alpha,const stall &beta) { // \u91cd\u8f7d\u8fd0\u7b97\u7b26 \n\treturn alpha.last>beta.last;\n}\nbool cmp(Time alpha,Time beta) {\n\treturn alpha.l<beta.l;\n}\npriority_queue<stall> q; // \u5c0f\u6839\u5806 \nint tot,ans[50005]; // \u7b54\u6848\u5b58\u8fd9\u513f \nint main() {\n\tint n=read();\n\tfor(int i=1;i<=n;++i) a[i].first=i,a[i].l=read(),a[i].r=read();\n\tsort(a+1,a+n+1,cmp);\n\tstall x;\n\tx.num=++tot;\n\tx.last=a[1].r;\n\tans[a[1].first]=1;\n\tq.push(x);\n\tfor(int i=2;i<=n;++i) {\n\t\tif(a[i].l<=q.top().last) {\n\t\t\tans[a[i].first]=++tot;\n\t\t\tx.num=tot;\n\t\t\tx.last=a[i].r;\n\t\t\tq.push(x);\n\t\t}\n\t\telse {\n\t\t\tx=q.top();\n\t\t\tans[a[i].first]=x.num;\n\t\t\tq.pop();\n\t\t\tx.num=ans[a[i].first];\n\t\t\tx.last=a[i].r;\n\t\t\tq.push(x);\n\t\t}\n\t}\n\tprintf(\"%d\\n\",tot);\n\tfor(int i=1;i<=n;++i) printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1628581020,
        "uid": 186477,
        "name": "SegTre",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2859"
    },
    {
        "content": "# \u6211\u9009\u62e9\uff0c\u6a21\u62df\uff01\uff01\n\u56e0\u4e3a\u6b64\u9898\u65f6\u95f4\u6bb5A\u548cB\u7684\u8303\u56f4\u90fd\u53ef\u4ee5\u627f\u53d7\uff0c\uff08\u592a\u5927\u4e86\u4e5f\u53ef\u4ee5\u79bb\u6563\u5316\uff09\uff0c\u4e0d\u59a8\u4ee5\u65f6\u95f4\u4e3a\u5e8f\u6765\u6a21\u62df\u8fd9\u4e2a\u7b80\u5355\u8fc7\u7a0b\n\n\u76f4\u63a5\u5f00\u4e00\u4e2a\u6808\uff0c\u4f9d\u6b21\u52a0\u5165N-->1,\u8868\u793a\u8981\u7528\u7684\u725b\u68da\u7684\u7f16\u53f7\uff08\u6700\u591a\u4f1a\u7528n\u4e2a\uff09\n\n\u5bf9\u4e8e\u6bcf\u4e00\u5934\u725b\uff0c\u7528\u7c7b\u4f3c\u524d\u5411\u661f\u94fe\u8868\u7684\u65b9\u5f0f\u5728\u4ed6\u8d77\u70b9\u7684\u65f6\u95f4\u52a0\u4e00\u4e2a\u7f16\u53f7\u4e3ai\u7684\u513f\u5b50\n\n\u540c\u7406\uff0c\u5728\u7ed3\u675f\u4f4d\u7f6e\u4e5f\u52a0\u4e00\u4e2a\u7f16\u53f7\u4e3ai\u7684\u513f\u5b50\uff08\u7528\u53e6\u4e00\u5957\u94fe\u8868\uff09\n\n\u7136\u540e\u5c31\u6309\u7167\u65f6\u95f4\u987a\u5e8f\u7b80\u5355\u6a21\u62df\uff1a\n\n\u4e0d\u7ba1\u5565\u7684\u5148\u8bfb\u8fdb\u6765\u52a0\u5165\u94fe\u8868\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u65f6\u95f4\u70b9\n   \n\t1.\u4ece\u94fe\u8868\u53d6\u51fa\u5728\u5f53\u65f6\u8981\u725b\u68da\u7684\u725b\uff0c\u628a\u6808\u9876\u7684\u725b\u68da\u7ed9\u4ed6\uff1a\n\n\t2.ans\u4e0e\u5df2\u7ecf\u62ff\u53bb\u7528\u7684\u725b\u68da\u6570\u91cf\uff08\u5c31\u662f(n-top) )\u53d6max;\n\n\t3.\u4ece\u94fe\u8868\u53d6\u51fa\u5f53\u65f6\u8981\u79bb\u5f00\u725b\u68da\u7684\u725b\uff0c\u628a\u8be5\u725b\u7528\u7684\u725b\u68da\uff08\u5c31\u662fans[i]\uff09\u585e\u56de\u6808\u9876\n\n\u7136\u540e\u8f93\u51fa\uff0c\u5feb\u4e50\u7684\u7ed3\u675f\uff01\n\ncode:\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<iomanip>\n#include<cstring>\n#include<cstdlib>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\n//#define int long long\nconst int Maxx=1000005,Maxn=2001,INF=0x3f3f3f3f,Mod=1e9+7;\ninline int read()\n{\n\tint res=0,bj=0;char ch=getchar();\n\twhile(ch<'0'||ch>'9')bj|=(ch=='-'),ch=getchar();\n\twhile(ch>='0'&&ch<='9')res=(res<<3)+(res<<1)+(ch^48),ch=getchar();\n\treturn bj?-res:res;\n}\nvoid print(int x)\n{\n\tif(x>9)print(x/10);\n\tputchar(x%10^48);\n}\ninline void printnum(int x,char ch)\n{\n\tif(x<0)putchar('-'),x=-x;\n\tprint(x),putchar(ch);\n}\nint n,x,y,tp,ans,sum,Maxnum=-INF,Minnum=INF,stk[Maxx],as[Maxx];\nint hx[Maxx],nx[Maxx],hy[Maxx],ny[Maxx];\nsigned main()\n{\n\tfreopen(\"in.txt\",\"r\",stdin);\n\tfreopen(\"out.txt\",\"w\",stdout);\n\tn=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tMinnum=min(Minnum,x=read());\n\t\tMaxnum=max(Maxnum,y=read());\n\t\tnx[i]=hx[x],hx[x]=i;\n\t\tny[i]=hy[y],hy[y]=i;\n\t\t//\u8bfb\u5165\uff0c\u52a0\u5165\u94fe\u8868\uff0c\u56e0\u4e3a\u5982\u679c\u6309\u90bb\u63a5\u8868\u7684\u6765\uff0cto[i]=i,\u4e8e\u662f\u5c31\u5e72\u8106\u628ato[]\u7701\u4e86\u2026\u2026 \n\t\tstk[i]=(n-i+1);\n\t}tp=n;\n\tfor(int i=Minnum;i<=Maxnum;i++)\n\t{\n\t\tfor(int j=hx[i];j;j=nx[j])as[j]=stk[tp--];\n\t\tans=max(ans,n-tp);\n\t\tfor(int j=hy[i];j;j=ny[j])stk[++tp]=as[j];\n\t}\n\tprintnum(ans,'\\n');\n\tfor(int i=1;i<=n;i++)printnum(as[i],'\\n');\n\treturn 0;\n}\n```",
        "postTime": 1570534440,
        "uid": 89561,
        "name": "c2020HXW",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2859 \u3010[USACO06FEB]\u644a\u4f4d\u9884\u8ba2Stall Reservations\u3011"
    },
    {
        "content": "\u8003\u8651\u8d2a\u5fc3\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u5934\u725b\u7684\u8d77\u59cb\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u518d\u5efa\u4e00\u4e2a\u5c0f\u6839\u5806\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u725b\u68da\u7684\u725b\u6324\u5b8c\u5976\u7684\u65f6\u95f4\u548c\u8fd9\u4e2a\u725b\u68da\u7684\u7f16\u53f7\u3002\n\n\u6211\u4eec\u626b\u63cf\u6392\u597d\u5e8f\u7684\u6bcf\u5934\u725b\uff0c\u5982\u679c\u5806\u9876\u725b\u68da\u7684$time$\u665a\u4e8e\u5f53\u524d\u7684\u725b\u7684$begin$\uff0c\u5219\u4e00\u5b9a\u8981\u65b0\u5efa\u4e00\u4e2a\u725b\u68da\u7ed9\u8fd9\u4e2a\u725b\u6324\u5976\uff1b\u5426\u5219\uff0c\u76f4\u63a5\u5c06\u5806\u9876\u725b\u68da\u7684$time$\u4fee\u6539\u4e3a\u5f53\u524d\u725b\u7684$end$\uff0c\u5373\u628a\u5f53\u524d\u725b\u653e\u5230\u4e86\u5806\u9876\u725b\u68da\u4e2d\u6324\u5976\uff0c\u6211\u4eec\u8bb0\u5f55\u4e0b\u8fd9\u4e2a\u725b\u7684\u725b\u68da\u7f16\u53f7\u4e3a\u5806\u9876\u725b\u68da\u7f16\u53f7\u5373\u53ef\u3002\u7531\u4e8e\u8981\u6309\u5e8f\u53f7\u8f93\u51fa\uff0c\u6240\u4ee5\u8fd8\u8981\u8bb0\u5f55\u6bcf\u4e2a\u725b\u7684\u5e8f\u53f7\uff0c\u6700\u540e\u8bb0\u5f55\u7b54\u6848\u65f6\u76f4\u63a5$ans[cow[i].id]=$\u725b\u68da\u7f16\u53f7\u5c31\u884c\u4e86\u3002\n\n```cpp\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define il inline\n#define re register\n#define tie0 cin.tie(0),cout.tie(0)\n#define fastio ios::sync_with_stdio(false)\n#define File(x) freopen(x\".in\",\"r\",stdin);freopen(x\".out\",\"w\",stdout)\nusing namespace std;\ntypedef long long ll;\n\ntemplate <typename T> inline void read(T &x) {\n\tT f = 1; x = 0; char c;\n    for (c = getchar(); !isdigit(c); c = getchar()) if (c == '-') f = -1;\n    for ( ; isdigit(c); c = getchar()) x = x * 10 + (c ^ 48);\n    x *= f;\n}\n\nstruct eat {\n\tint begin, end, id;\n} cow[50003];\n\nstruct period {\n\tint time, num;//\u5206\u522b\u662f\u725b\u68da\u53ef\u4ee5\u7a7a\u51fa\u7684\u65f6\u95f4\u548c\u725b\u68da\u7f16\u53f7\n\tbool operator < (const period& x)const{return x.time < time;}//\u6309\u65f6\u95f4\u6392\u5e8f\n} now;\n\npriority_queue <period> q;\n\nint n, tot;\nint ans[50003];\n\nbool cmp(eat milk, eat grass) {\n\treturn milk.begin == grass.begin ? milk.end < grass.end : milk.begin < grass.begin;\n}\n\nint main() {\n//\tFile(\"testdata\");\n\tread(n);\n\tfor (int i = 1; i <= n; ++i) read(cow[i].begin), read(cow[i].end), cow[i].id = i;\n\tsort(cow + 1, cow + 1 + n, cmp);//\u6392\u5e8f\n\tfor (int i = 1; i <= n; ++i) {\n\t\tif (q.empty() || q.top().time >= cow[i].begin) {//\u7b2c\u4e00\u5934\u725b\u548c\u4e0d\u80fd\u653e\u8fdb\u5806\u9876\u725b\u68da\u7684\u725b\u8981\u65b0\u5efa\u4e00\u4e2a\u725b\u68da\n\t\t\tnow.time = cow[i].end, now.num = ++tot;\n\t\t\tq.push(now); ans[cow[i].id] = now.num;\n\t\t}\n\t\telse {//\u4fee\u6539\u5806\u9876\u5143\u7d20\n\t\t\tnow = q.top(); q.pop();\n\t\t\tnow.time = cow[i].end, ans[cow[i].id] = now.num;\n\t\t\tq.push(now);\n\t\t}\n\t}\n\tprintf(\"%d\\n\", tot);\n\tfor (int i = 1; i <= n; ++i) printf(\"%d\\n\", ans[i]);//\u8f93\u51fa\u7b54\u6848\n\treturn 0;\n}\n```",
        "postTime": 1565144253,
        "uid": 201280,
        "name": "\u592a\u9633\u9a91\u58eb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2859 \u3010[USACO06FEB]\u644a\u4f4d\u9884\u8ba2Stall Reservations\u3011"
    },
    {
        "content": "## \u644a\u4f4d\u9884\u5b9a\n\n**\u601d\u8def\uff1a**\n\n\u6211\u4eec\u53ef\u4ee5\u6309\u725b\u5f00\u59cb\u6324\u5976\u7684\u987a\u5e8f\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u4e00\u904d\uff0c\u63a5\u7740\u6211\u4eec\u53ef\u4ee5\u7528\u5c0f\u6839\u5806\u6765\u7ef4\u62a4\u6bcf\u4e2a\u725b\u68da\u725b\u7ed3\u675f\u6324\u5976\u7684\u65f6\u95f4\uff0c\u5982\u679c\u6709\u67d0\u5934\u725b\u5f00\u59cb\u5403\u8349\u7684\u65f6\u95f4\u5927\u4e8e\u5806\u9996\u7ed3\u675f\u7684\u65f6\u95f4\u5c31\u5c06\u5176\u66ff\u6362\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u65b0\u589e\u4e00\u4e2a\u725b\u68da\u3002\n\n**\u8bc1\u660e\uff1a**\n\n\u8bbex < y\n\u90a3\u4f1a\u6709\u8fd9\u4e09\u79cd\u60c5\u51b5\uff1a\n\n1.x\u548cy\u5747\u53ef\u4ee5\u9009\u62e9\n\n2.x\u53ef\u4ee5\u9009\u62e9\uff0cy\u4e0d\u53ef\u4ee5\u9009\u62e9\n\n3.\u4e24\u8005\u5747\u4e0d\u53ef\u9009\u62e9\n\n\u5f88\u663e\u7136\u9009\u62e9x\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u66f4\u5927\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <queue>\n#include <algorithm>\n\nusing namespace std;\nconst int N = 50050;\n\nint n, t, ans[N];\n\nstruct cow {\n\tint id, x, y;\n\tbool operator < (const cow & a) const{\n\t\treturn x < a.x;\n\t}\n} a[N];\n\nstruct cmp {\n\tint id, y;\n\tbool operator < (const cmp & a) const{\n\t\treturn y > a.y;\n\t}\n};\n\npriority_queue <cmp> que;//\u5c0f\u6839\u5806 \n\nint main() {\n\t\n\tscanf(\"%d\", &n);\n\tfor(int i = 1; i <= n; ++i) scanf(\"%d %d\", &a[i].x, &a[i].y), a[i].id = i;\n\t\n\tsort(a + 1, a + 1 + n);\n\t\n\tfor(int i = 1; i <= n; ++i) {\n\t\t\n\t\tif(que.empty() || que.top().y >= a[i].x) {\n\t\t\tt++;//\u65b0\u589e\u4e00\u4e2a\u725b\u68da \n\t\t\tque.push((cmp) {t, a[i].y});\n\t\t\tans[a[i].id] = t;\n\t\t}\n\t\telse {\n\t\t\tint id = que.top().id;\n\t\t\tque.pop();//\u725b\u53ef\u4ee5\u5728\u8fd9\u91cc\u6324\u5976\uff0c\u5c06\u8fd9\u4e2a\u7ed3\u675f\u65f6\u95f4\u66ff\u6362 \n\t\t\tque.push((cmp) {id, a[i].y});\n\t\t\tans[a[i].id] = id;\n\t\t}\n\t}\n\t\n\tprintf(\"%d\\n\", t);\n\tfor(int i = 1; i <= n; ++i) printf(\"%d\\n\", ans[i]);\n\treturn 0;\n}\n```\n\n**\u611f\u8c22\u673a\u623fdalao\uff08Mogu\uff09\u5bf9\u6211\u63d0\u4f9b\u7684\u601d\u8def\u3002**",
        "postTime": 1553519358,
        "uid": 56940,
        "name": "\u9677\u8bed",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2859 \u3010[USACO06FEB]\u644a\u4f4d\u9884\u8ba2Stall Reservations\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5c31\u662f\u4e00\u9053**\u8d2a\u5fc3**\u9898\u76ee\n\n\u53ef\u4ee5\u6839\u636e\u6bcf\u5934\u725b\u5f00\u59cb\u7684\u65f6\u95f4\u6392\u5e8f,\u7136\u540e\u987a\u5e8f\u679a\u4e3e\u65f6\uff0c\u6bcf\u4e00\u6b21\u626b\u63cf\u5df2\u6709\u7684\u725b\u68da\uff0c\u5982\u679c\u8fd9\u4e2a\u5976\u725b\u80fd\u5728\u5df2\u6709\u725b\u68da\u4e2d\u6324\u5976\uff0c\u90a3\u4e48\u5c31\u628a\u8fd9\u4e2a\u725b\u68da\u66f4\u65b0\u4e00\u4e0b\u7ed3\u675f\u65f6\u95f4\u5c31\u597d\uff08\u6ce8\u610f\u4e0d\u9700\u8981\u9009\u62e9\u7ed3\u675f\u5f97\u6700\u665a\u7684\u725b\u68da\u66f4\u65b0\u7ed3\u675f\u65f6\u95f4\uff0c\u56e0\u4e3a\u5976\u725b\u6324\u5976\u7684\u8d77\u59cb\u65f6\u95f4\u5df2\u7ecf\u6392\u597d\u5e8f\u4e86\uff0c\u4e0b\u4e00\u4e2a\u5976\u725b\u6324\u5976\u7684\u8d77\u59cb\u65f6\u95f4\u4e00\u5b9a\u6bd4\u8fd9\u4e00\u5934\u5976\u725b\u665a\uff0c\u6240\u4ee5\u66f4\u65b0\u54ea\u4e00\u4e2a\u725b\u68da\u90fd\u6ca1\u6709\u5173\u7cfb\uff09\uff0c\u5982\u679c\u4e0d\u80fd\uff0c\u90a3\u4e48\u5c31\u65b0\u5f00\u4e00\u4e2a\u725b\u68da\u3002  \n\n\u6700\u540e\u5f97\u5230\u725b\u68da\u6570\u91cf\u548c\u6bcf\u5934\u725b\u6324\u5976\u7684\u5730\u65b9~\n\n~~~\n#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\nusing namespace std;\nstruct node{\n    int st,ed,adr,pla;\n}q[50005];\nbool cmp_st(node a,node b)\n{\n    return a.st<b.st;\n}\nbool cmp_adr(node a,node b)\n{\n    return a.adr<b.adr;\n}\nint c[50005];\ninline void read(int & x)\n{\n\tx=0; int f=1; char c=getchar();\n\twhile(c<'0'||c>'9') {if(c=='-') f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9') \n\t{x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n\tx*=f;\n}\ninline void print(int x)\n{\n\tif(x<0) {x=-x;putchar('-');}\n\tif(x>9) print(x/10);\n\tputchar(x%10+48);\n}\nint main()\n{\n    int n;\n    read(n);\n    for(int i=1;i<=n;i++)\n    {\n    \tread(q[i].st),read(q[i].ed); \n        q[i].adr=i;\n    }\n    stable_sort(q+1,q+1+n,cmp_st);\n    int ans=0;\n    for(int i=1;i<=n;i++)\n    {\n        int k=0;\n        for(int j=1;j<=ans;j++)\n        {\n            if(c[j]<q[i].st)\n            {\n                c[j]=q[i].ed;\n                q[i].pla=j;\n                k=1;\n                break;\n            }\n        }\n        if(!k)\n        {\n            ans++;\n            c[ans]=q[i].ed;\n            q[i].pla=ans;\n        }\n    }\n    print(ans),putchar('\\n');\n    stable_sort(q+1,q+n+1,cmp_adr);\n    for(int i=1;i<=n;i++)\n        print(q[i].pla),putchar('\\n');\n    return 0;\n}\n~~~",
        "postTime": 1548764048,
        "uid": 118707,
        "name": "mol\u8336\u86cb\u7cd5",
        "ccfLevel": 0,
        "title": "P2859 [USACO06FEB]\u644a\u4f4d\u9884\u8ba2Stall Reservations   \u9898\u89e3\u62a5\u544a"
    },
    {
        "content": "//\u6ca1\u60f3\u5230\u5dee\u5206\u600e\u4e48\u6253\u5370\u725b\u5728\u54ea\u4e2a\u725b\u68da\uff0c\u5c31\u7528\u4e86\u8d2a\u5fc3\uff0c\u591a\u4e86\u4e00\u4e2aniu[]\u6570\u7ec4\uff0c\u628as[i].id\u5f53\u4e0b\u6807\u8bb0\u5f55i\u5c31\u597d\n\n\n\n\n\n\n\n\n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nconst int N = 50010;\nstruct Segment{\n    int l, r, id;\n    Segment(int l = 0, int r = 0, int id = 0) : l(l), r(r), id(id){}\n} s[N];\ninline int read(){\n    char ch = getchar(); int ans = 0;\n    while(ch < '0' || ch > '9') ch = getchar();\n    while(ch >= '0' && ch <= '9') ans = ans * 10 + ch - '0', ch = getchar();\n    return ans;\n}\nbool cmp(const Segment &a, const Segment &b){\n    return a.l < b.l;\n}\nint num, stall[N]; //\u73b0\u5728\u81f3\u5c11\u6709\u51e0\u4e2a\u4e95\u5df2\u7ecf\u7528\u4e86\uff0c\u6bcf\u4e2a\u4e95\u6700\u540e\u7684\u4f7f\u7528\u65f6\u95f4 \nstruct D{\n    int time, pos;\n    D(int t, int p) : time(t), pos(p){}\n    bool friend operator<(const D &a, const D &b){\n        return a.time > b.time;\n    }\n};\npriority_queue<D> que;\n//vector<int> vec[N];\nint niu[N];\nint main(){\n    //freopen(\"a.in\", \"r\", stdin);\n    //freopen(\"a.out\", \"w\", stdout);\n    int n;\n    n = read();\n    for(int i = 1; i <= n; ++i){\n        int a, b;\n        a = read(), b = read();\n        if(a > b) swap(a, b);\n        s[i] = Segment(a, b, i);\n    }\n    sort(s + 1, s + n + 1, cmp);\n    stall[++num] = s[1].r;\n    que.push(D(stall[1], 1));\n    //vec[1].push_back(s[1].id);\n    niu[s[1].id] = num;\n    for(int i = 2; i <= n; ++i){\n        D a = que.top();\n        if(s[i].l <= a.time){\n            stall[++num] = s[i].r;\n            que.push(D(stall[num], num));\n            niu[s[i].id] = num;\n//printf(\"%%%%%%%%%%%%%%\\n\");                    \n        }\n        else{\n            que.pop();\n            stall[a.pos] = s[i].r;\n            que.push(D(stall[a.pos], a.pos));\n            niu[s[i].id] = a.pos;\n        }\n        //vec[num].push_back(s[i].id);\n    }\n    printf(\"%d\\n\", num);\n    for(register int i = 1; i <= n; ++i){\n        printf(\"%d\\n\", niu[i]);\n    }\n    return 0;\n}\n```",
        "postTime": 1509183564,
        "uid": 52813,
        "name": "FFFurther",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2859 \u3010[USACO06FEB]\u644a\u4f4d\u9884\u8ba2Stall Reservations\u3011"
    },
    {
        "content": "\u65e2\u7136\u662f\u8d2a\u5fc3\u7684\u9898\u5c31\u7528\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u5148\u6309\u7167\u6bcf\u4e2a\u5976\u725b\u6324\u5976\u7684\u5f00\u59cb\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u4e2a\u5e8f\uff0c\u518d\u4e3a\u7b2c\u4e00\u5934\u5976\u725b\u65b0\u5efa\u4e00\u4e2a\u725b\u68da\uff0c\u63a5\u7740\u5904\u7406\u540e\u7eed\u5976\u725b\uff0c\u6211\u4eec\u8bbeSi\u4e3a\u7b2ci\u5934\u5976\u725b\u7684\u5f00\u59cb\u65f6\u95f4\uff0c\u8bbeEx\u4e3a\u725b\u68da\u7684\u7ed3\u675f\u65f6\u95f4,\u725b\u68da\u7684\u7ed3\u675f\u65f6\u95f4\uff0c\u610f\u601d\u65e2\u662f\u5728\u8be5\u725b\u68da\u6324\u5976\u7684\u5976\u725bx\u7684\u7ed3\u675f\u65f6\u95f4\uff0c\u5c06\u5df2\u77e5Ex\u6309\u7167\u4ece\u5c0f\u5230\u5927\u7684\u65f6\u95f4\u6392\u5e8f\u3002\u90a3\u4e48\uff0c\u5728\u5904\u7406\u7b2ci\u5934\u5976\u725b\u65f6\uff0c\u67e5\u770b\u5df2\u6709\u725b\u68da\u4e2d\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u7684\u725b\u68daEa \u82e5Ea<Sa\uff0c\u5219\u4e0d\u7528\u65b0\u5efa\u725b\u68da\uff0c\u7b2ci\u5934\u5976\u725b\u8fdb\u5165\u8be5\u725b\u68da\uff0c\u4fee\u6539Ea\u4e3aEi.\n\u82e5Ea>Si\uff0c\u5219\u65b0\u5efa\u725b\u68da\uff0c\u8bb0Eb=Ei.\n\u5173\u4e8eEx\u7684\u6392\u5e8f\uff0c\u90a3\u5c31\u501f\u52a9\u4f18\u5148\u961f\u5217\u5566\n```c\n#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<cstdio>\nusing namespace std;\nstruct cows{\n\tint a,b;\n\tint No;\n\tbool operator<(const cows & c)const{\n\t\treturn a<c.a;\n\t}\n} cow[50100];\nint pos[50100];\nstruct stall{\n\tint end;\n\tint No;\n\tbool operator<(const stall & x)const{\n\t\treturn end>x.end;\n\t}\n\tstall(int e,int n):end(e),No(n) {}\n};\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d%d\",&cow[i].a,&cow[i].b);\n\t\tcow[i].No=i;\n\t}\n\tsort(cow+1,cow+1+n);\n\tint tot=0;\n\tpriority_queue<stall>pq;\n\tfor(int i=1;i<=n;i++){\n\t\tif(pq.empty()){\n\t\t\ttot++;\n\t\t\tpq.push(stall(cow[i].b,tot));\n\t\t\tpos[cow[i].No]=tot;\n\t\t}\n\t\telse{\n\t\t\tstall t=pq.top();\n\t\t\tif(t.end<cow[i].a){\n\t\t\t\tpos[cow[i].No]=t.No;\n\t\t\t\tpq.pop();\n\t\t\t\tpq.push(stall(cow[i].b,t.No));\n\t\t\t}\n\t\t\telse{\n\t\t\t\ttot++;\n\t\t\t\tpos[cow[i].No]=tot;\n\t\t\t\tpq.push(stall(cow[i].b,tot));\n\t\t\t}\n\t\t}\n\t}\n\tcout<<tot<<endl;\n\tfor(int i=1;i<=n;i++){\n\t\tprintf(\"%d\\n\",pos[i]);\n\t}\t\n}\n```\n",
        "postTime": 1566561582,
        "uid": 224909,
        "name": "\u67e0\u9752\u54df",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2859 \u3010[USACO06FEB]\u644a\u4f4d\u9884\u8ba2Stall Reservations\u3011"
    }
]