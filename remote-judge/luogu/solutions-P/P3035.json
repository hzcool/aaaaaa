[
    {
        "content": "## \u9898\u610f\uff1a\n\u7ed9\u5b9an\u4e2a\u70b9\uff0c\u5750\u6807\u4e3a1~m\u4e4b\u95f4\u7684\u6b63\u6574\u6570\u4e14\u4e92\u4e0d\u76f8\u540c\uff0c\u73b0\u5728\u8981\u6c42\u7528\u4e00\u6bb5\u6216\u591a\u6bb5\u7ebf\u6bb5\u5c06n\u4e2a\u70b9\u8986\u76d6\uff0c\u6bcf\u79cd\u957f\u5ea6\u7684\u7ebf\u6bb5\u90fd\u6709\u4e00\u4e2a\u4ef7\u683c\uff08\u4e0d\u6ee1\u8db3\u5355\u8c03\u6027\uff09\uff0c\u6c42\u51fa\u6700\u5c0f\u4ef7\u683c\n\n------------\n\u770b\u5b8c\u9898\u76ee\u7b2c\u4e00\u60f3\u6cd5\u5c31\u5e94\u8be5\u662fDP\uff0c\u8d2a\u5fc3\u5e94\u8be5\u662f\u4e0d\u884c\u7684\n\n- #### \u5b9a\u4e49 $f$ \u6570\u7ec4\uff1a\n\u8fd9\u9898\u7684\u5b9a\u4e49\u8fd8\u662f\u5f88\u5bb9\u6613\u60f3\u5230\u7684\uff0c$f[i]$\u8868\u793a\u5c06\u524d$i$\u4e2a\u7684\u8986\u76d6\u6240\u9700\u8981\u7684\u6700\u5c0f\u4ef7\u503c\uff0c\u800c\u7b54\u6848\u5c31\u662f$f[n]$\u4e86\n\n- #### \u8f6c\u79fb\u65b9\u7a0b\uff1a\n\u6613\u5f97\uff1a$f[i]$ $=$ $f[j-1]$ $+$ $cost[a[i]-a[j]+1]$\n\n\u5176\u4e2d$a[i]$\u8868\u793a\u7b2c$i$\u4e2a\u70b9\u7684\u4f4d\u7f6e\uff0c$cost[i]$\u8868\u793a\u957f\u5ea6\u4e3a$i$\u7684\u7ebf\u6bb5\u7684\u4ef7\u683c\n\n\u4f46\u9898\u76ee\u660e\u786e\u6307\u51fa\uff0c\u957f\u5ea6\u589e\u52a0\u4ef7\u683c\u672a\u5fc5\u4f1a\u589e\u52a0\uff0c\u4e5f\u5c31\u662f\u8bf4\u6709\u53ef\u80fd\u66f4\u957f\u7684\u7ebf\u6bb5\u7684\u4ef7\u683c\u53cd\u800c\u6bd4\u957f\u5ea6\u4e3a$a[i]-a[j]+1$\u7684\u4fbf\u5b9c\n\n\u56e0\u4e3a\u53ea\u8981\u957f\u5ea6\u6bd4$a[i]-a[j]+1$\u66f4\u957f\u5c31\u80fd\u8986\u76d6\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u5728$cost[a[i]-a[j]+1]$ ~ $cost[m]$\u9009\u4e00\u4e2a\u6700\u5c0f\u503c\u5373\u53ef\uff0c\u6700\u5c0f\u503c\u600e\u4e48\u627e\uff1f\u6bcf\u6b21\u90fd$O(n)$\u627e\u4e00\u904d\uff1f\u663e\u7136\u4f1a\u8d85\u65f6\uff0c\u4e00\u4e2a\u5f88\u7b80\u5355**\u6700\u5c0f\u540e\u7f00\u503c**\u63d0\u524d\u9884\u5904\u7406\u4e00\u904d\u5c31\u884c\u4e86\n\n\u8be6\u89c1\u4ee3\u7801\uff1a\n```\n#include<bits/stdc++.h>\n#define maxn 200005\nusing namespace std;\nint n,m,f[maxn],Ans,lst[maxn],a[maxn],v[maxn];\ninline int read(){\n\tint ret=0,f=1;char ch=getchar();\n\twhile (ch<'0'||ch>'9'){if (ch=='-') f=-f;ch=getchar();}\n\twhile (ch<='9'&&ch>='0') ret=ret*10+ch-'0',ch=getchar();\n\treturn ret*f;\n}\nint main(){\n\tn=read(),m=read();memset(f,63,sizeof f);f[0]=0;\n\tfor (int i=1;i<=n;i++) a[i]=read();sort(a+1,a+n+1);\n\tfor (int i=1;i<=m;i++) v[i]=read();v[0]=1<<30;lst[m+1]=1<<30;\n\tfor (int i=m;i>=0;i--) lst[i]=min(v[i],lst[i+1]);\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=i;j;j--) f[i]=min(f[i],f[j-1]+lst[a[i]-a[j]+1]);\n\tprintf(\"%d\",f[n]);\n\treturn 0;\n}\n```\n",
        "postTime": 1579317836,
        "uid": 108047,
        "name": "LlLlCc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3035 \u3010[USACO11DEC]\u4f1e\u5934Umbrellas for Cows\u3011"
    },
    {
        "content": "## >\u6b64\u9898\u662f\u4e00\u4e2a\u5178\u578b\u7684\u52a8\u6001\u89c4\u5212\n#### >\u9898\u76ee\u7ffb\u8bd1\uff1a\u7ed9\u51fa\u6570\u8f74\u4e0an\u4e2a\u70b9\u7684\u5750\u6807\uff0c\u7528\u957f\u5ea6\u4e3a1~m\u7684\u7ebf\u6bb5\u8986\u76d6\u6bcf\u4e2a\u70b9\uff0c\u6bcf\u4e2a\u957f\u5ea6\u7684\u7ebf\u6bb5\u5747\u6709\u4e00\u4e2a\u4ee3\u4ef7C[i]\uff0c\u6c42\u8986\u76d6\u6240\u6709\u70b9\u6240\u9700\u6700\u5c0f\u4ee3\u4ef7\u548c\u3002\n\n------------\n\n## >\u601d\u8def\n### 1.\u5c06\u725b\u6309\u7167\u4f4d\u7f6e\u987a\u5e8fsort\n### 2.\u626b\u4e00\u904d\u96e8\u4f1e\u4ef7\u683c\uff0c\u5982\u679c\u4e00\u4e2a\u4f1e\u5b83\u53c8\u77ed\u53c8\u8d35\uff0c\u5219\u540c\u5316\u5b83\uff0c\u5373\u7528\u6bd4\u5b83\u957f\u4e14\u6bd4\u5b83\u4fbf\u5b9c\u7684\u4f1e\u7684\u4ef7\u683c $\\color{red}\\text{\u4ee3\u66ff\u5176\u539f\u6765\u4ef7\u683c}$\uff0c\u5c31\u662f\u8bf4\u76f4\u63a5\u541e\u6389\u4e0d\u5212\u7b97\u7684\u4f1e~~\uff08\u5176\u5b9e\u53ef\u4ee5\u4e0d\u8981\u8fd9\u4e00\u6b65\uff09~~\n### 3.\u5b9a\u4e49dp\u6570\u7ec4,dp[i]\u7528\u4e8e\u8868\u793a\u8981\u76d6\u4f4f\u7b2ci\u5934\u725b\u6240\u9700\u6700\u5c0f\u4ee3\u4ef7\n### 4.\u521d\u59cb\u5316dp[1~n]=\u221e\n### 5.\u5217\u52a8\u6001\u8f6c\u79fb\u65b9\u7a0b:\n\n$\\color{red}\\text{dp[i]=min(dp[i],dp[j-1]+umb[cow[i]-cow[j]+1]);}$\n### \u8fd9\u91cc\u7684 i \u4ece 1 \u5230 n ,\u800c j \u5219\u662f\u4ece i \u5230 1\n## DP\u4e00\u904d\u4e4b\u540e\u5c31\u7ed3\u675f\u4e86\u55ef\n### \u8fd9\u662f\u6211\u7684\u4ee3\u7801????\u6ce8\u91ca\u5e94\u8be5\u5f88\u6e05\u695a\u4e86\n```\n#include <bits/stdc++.h>\n#define ll long long //I'm lazy QwQ\nusing namespace std;\nconst int maxn=10005;\nint n,m;//n & m:amount of cows and umbrellas\n\nint umb[maxn*10];//umb[i]:prices of umbrellas covers length of i;\nint cow[maxn];//positions of cows\nll dp[maxn];//dp[i]:least cost of covering from 0 to the i th cow\nconst ll inf=1e12+1;\n\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i=1; i<=n; i++)\n\t{\n\t\tscanf(\"%d\",&cow[i]);\n\t}\n\tsort(cow+1,cow+1+n);\n\tfor(int i=1; i<=m; i++)\n\t{\n\t\tscanf(\"%d\",&umb[i]);\n\t}//input above\n\t\n\tfor(int i=m; i>=0; i--)\n\t{\n\t\tumb[i-1]=min(umb[i-1],umb[i]);\n\t}//cut off the useless umbrellas\n\t\n\tfor(int i=1; i<=n; i++)\n\t{\n\t\tdp[i]=inf;//initate the array dp\n\t\tfor(int j=i; j>=1; j--)\n\t\t{\n\t\t\tdp[i]=min(dp[i],dp[j-1]+umb[cow[i]-cow[j]+1]);\n\t\t}//dynamic programming\u2026\n\t}\u3000\n\t\n\tprintf(\"%lld\",dp[n]);//output the answer\n}\n```\n# \u6492\u82b1*\u2605,\u00b0*:.\u2606(\uffe3\u25bd\uffe3)/$:*.\u00b0\u2605* \u3002",
        "postTime": 1548511381,
        "uid": 126484,
        "name": "first_fan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3035 \u3010[USACO11DEC]\u4f1e\u5934Umbrellas for Cows\u3011"
    },
    {
        "content": "\u4e00\u4e2a\u5f88~~\u6c34~~\u7684DP\u9898\n\nf[i]\u8868\u793a\u7528\u96e8\u4f1e\u8986\u76d6\u524di\u5934\u725b\u7684\u6700\u5c0f\u82b1\u8d39,\u90a3\u4e48f[i]\u5c31\u7531f[j]+cost[c[i]- \nc[j]]\u5f97\u6765,\u5176\u4e2dcost[i]\u8868\u793a\u957f\u5ea6\u4e3ai\u7684\u96e8\u4f1e\u82b1\u8d39,c[i]\u8868\u793a\u7b2ci\u5934\u725b\u7684\u4f4d\u7f6e.\n\n```pascal\nf[i]:=min(f[i],f[j-1]+cost[c[i]-c[j]+1]);\n```\n\n\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\u5f53\u6211\u4eec\u8986\u76d6\u957f\u5ea6\u4e3ai\u7684\u4e00\u4e9b\u725b\u65f6,\u53ef\u4ee5\u7528\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8ei\u7684\u4f1e\u53bb\u8986\u76d6,\u800c\u4e14\u957f\u5ea6\u5927\u4e8ei\u7684\u5c45\u7136\u6bd4\u957f\u5ea6\u7b49\u4e8ei\u7684\u4fbf\u5b9c......\n\n\u90a3\u4e48\u5c31\u662f\n```pascal\nfor i:=1 to m do\nread(cost[i]);\nfor i:=m-1 downto 1 do\ncost[i]:=min(cost[i],cost[i+1]);\n```\n\n\u6700\u540e\u7ed9\u51fa\u6211\u7684AC\u4ee3\u7801\n\n```pascal\nvar\n        i,j:longint;\n        n,m:int64;\n        c,cost,f:array[0..100000]of int64;\nfunction min(a,b:int64):int64;\nbegin\n        if a<b then exit(a) else exit(b);\nend;\nprocedure swap(var a,b:int64);\nvar\n        c:int64;\nbegin\n        c:=a;\n        a:=b;\n        b:=c;\nend;\nprocedure sort(l,r:int64);\nvar\n        i,j,mid:int64;\nbegin\n        i:=l;\n        j:=r;\n        mid:=c[(l+r)>>1];\n        repeat\n                while c[i]<mid do inc(i);\n                while c[j]>mid do dec(j);\n                if i<=j then\n                begin\n                        swap(c[i],c[j]);\n                        inc(i);\n                        deC(j);\n                end;\n        until i>j;\n        if i<r then sort(i,r);\n        if l<j then sort(l,j);\nend;\nbegin\n        read(n,m);\n        for i:=1 to n do\n        read(c[i]);\n        for i:=1 to m do\n        read(cost[i]);\n        for i:=m-1 downto 1 do\n        cost[i]:=min(cost[i],cost[i+1]);\n        sort(1,n);\n        for i:=1 to n do\n        begin\n                f[i]:=cost[c[i]-c[1]+1];\n                for j:=2 to i do\n                f[i]:=min(f[i],f[j-1]+cost[c[i]-c[j]+1]);\n        end;\n        writeln(f[n]);\nend.\n```",
        "postTime": 1539992255,
        "uid": 28810,
        "name": "King_of_gamers",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3035 \u3010[USACO11DEC]\u4f1e\u5934Umbrellas for Cows\u3011"
    },
    {
        "content": "# P3035 \u9898\u89e3\n            \u4e00\u9053\u5f88\u660e\u663e\u7684\u52a8\u5f52\u3002\n\u4e0d\u591a\u8bf4\uff0c\u76f4\u63a5\u5206\u6790\uff1a  \n$dp_i$\u8868\u524di\u4e2a\u7684\u8986\u76d6\u6240\u9700\u8981\u7684\u6700\u5c0f\u4ef7\u503c  \n\u7b54\u6848:$dp_n$  \n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n$$dp_i=min(dp_i,dp_{j-1}+CST_{x_i-x_j+1})$$\n\u6ce8\u610f\u52a8\u5f52\u7684\u65f6\u5019$dp_i$\u8981\u8bbe\u7f6e\u6210$inf$\n```cpp\n//\n// \u524d\u7f6e\u8bf4\u660e\uff1a\u6211\u5199\u90a3\u4e48\u591a\u51fd\u6570\uff0c\u53ea\u662f\u4e3a\u4e86\u67e5\u9519\u65b9\u4fbf\u800c\u5df2\u3002 \n//\n#include<bits/stdc++.h>\n// #include<...> \nusing namespace std;\n// \u524d\u7f6e \nconst int sz1=10005;\nconst int sz2=100005;\nconst int inf=1<<29;\n// \u6570\u636e\u8bbe\u7f6e \nint n,i,j,CST[sz2],m,x[sz1],D_P[sz1];\n// \u5b9a\u4e49\u53d8\u91cf \nvoid getnm(\\)\n{\n\tscanf(\"%d %d\",&n,&m);\n}\n// getin \nvoid getx(\\int n)\n{\n\tfor(i=1;i<=n;i++)scanf(\"%d\",&x[i]);\n\tsort(x+1,x+1+n);\n}\n// getin \nvoid getC(\\int m)\n{\n\tfor(i=1;i<=m;i++)scanf(\"%d\",&CST[i]);\n\tfor(i=m-1;i>=1;i--)CST[i]=min(CST[i],CST[i+1]);\n}\n// getin \nvoid getall(\\)\n{\n\tgetnm();\n\tgetx(n);\n\tgetC(m);\n}\n// getin \nvoid in_and_sort(\\){getall();}\n// getin \nvoid Dynamic_Programming(\\)\n{\n\tfor(i=1;i<=n;i++){\n\t\tD_P[i]=inf;\n// set D_P[i] \n\t\tfor(j=i;j>=1;j--)\n\t\t\tD_P[i]=min(D_P[i],D_P[j-1]+CST[x[i]-x[j]+1]);\n// dynamicprogramming \n\t}\n}\n// main\u2193 \nint main(\\)\n{\n\t//////////////\n//\tfreopen(\"umbrella.in\",\"r\",stdin);\n//\tfreopen(\"umbrella.out\",\"w\",stdout);\n// file\n\t//////////////\n\tin_and_sort(\\); // getin\n\tDynamic_Programming(\\); // dynamicprogramming\n\t//////////////\n\tprintf(\"%d\",D_P[n]); // print\n\t//////////////\n\treturn 0; // return\n}\n```",
        "postTime": 1585286939,
        "uid": 291706,
        "name": "GspTools",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3035 \u3010[USACO11DEC]Umbrellas for Cows S\u3011"
    },
    {
        "content": "\u5f88\u663e\u7136\u7684dp\n\n\u8bb0f[i]\u4e3a\u906e\u4f4f1~i\u7684\u5976\u725b\u6700\u5c11\u82b1\u8d39\n\nf[i]=max(f[j-1]+(\u906e\u4f4f\u81f3\u5c11x[i]-x[j]+1\u4e2a\u70b9\u7684\u82b1\u8d39))\n\n(\u906e\u4f4f\u81f3\u5c11x[i]-x[j]+1\u4e2a\u70b9\u7684\u82b1\u8d39)\u600e\u4e48\u7b97\uff1f\u5b83\u7b49\u4e8ea[x[i]-x[j]+1]~a[m]\u7684\u6700\u5c0f\u503c\uff0c\n\n\u90a3\u4e48\u7528\u4e00\u4e0b\u540e\u7f00\u6700\u5c0f\u503c\u5c31\u884c\u4e86\n\nCode:\n```cpp\n#include <iostream>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <queue>\n#include <algorithm>\nusing namespace std;\nint n,i,j,a[100005],m,x[10005],ans[10005];\nint main(){\n    scanf(\"%d %d\",&n,&m);\n    for(i=1;i<=n;i++)\n        scanf(\"%d\",&x[i]);\n    sort(x+1,x+1+n);\n    for(i=1;i<=m;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=m-1;i>=1;i--)\n        a[i]=min(a[i],a[i+1]);\n    for(i=1;i<=n;i++)\n    {\n        ans[i]=1<<29;\n        for(j=i;j>=1;j--)\n            ans[i]=min(ans[i],ans[j-1]+a[x[i]-x[j]+1]);\n    }\n    printf(\"%d\",ans[n]);\n}\n\n```",
        "postTime": 1505741193,
        "uid": 13185,
        "name": "\u53cc\u7ba1\u8367\u5149\u706f",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3035 \u3010[USACO11DEC]\u4f1e\u5934Umbrellas for Cows\u3011"
    },
    {
        "content": "\u6211\u6765\u53d1\u7b2c\u4e00\u4e2a\u9898\u89e3\uff01\u6b64\u9898DP!\n\ndp[i]\u4ee3\u8868\u8986\u76d6\u94b1i\u5934\u725b\u7684\u6700\u5c0f\u4ef7\u503c\u3002\n\n\u9884\u5904\u7406\uff1a\u5148\u8981\u5c06\u725b\u7684\u4f4d\u7f6e\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff1bval\u4e5f\u8981\u76f8\u90bb\u6bd4\u8f83\u5927\u5c0f\uff0c\u4ece\u800c\u65b9\u4fbf\u5904\u7406\u3002\u3002\u3002\n\n\u7136\u540edp[i]=min(dp[i],dp[j]+val[pos[i-1]-pos[j]]) {j=0~i,pos\u4e3a\u725b\u7684\u4f4d\u7f6e\uff0cval\u4e3a\u4ef7\u503c}\n\n\n\n    \n        \n```cpp\n#include<iostream>\n#include<fstream>\n#include<cstdio>\n#include<algorithm>\n#include<string>\n#include<vector>\n#include<queue>\n#include<deque>\n#include<utility>\n#include<map>\n#include<set>\n#include<cmath>\n#include<cstdlib>\n#include<ctime>\n#include<functional>\n#include<sstream>\n#include<cstring>\n#include<bitset>\n#include<stack>\nusing namespace std;\nint n,m;\nint pos[5005],val[100005];\nlong long dp[5005];\nint main()\n{\n    //freopen(\"umbrella.in\",\"r\",stdin);\n    //freopen(\"umbrella.out\",\"w\",stdout);\n    scanf(\"%d%d\",&n,&m);\n    for(int i=0;i<n;i++)scanf(\"%d\",&pos[i]);\n    for(int i=0;i<m;i++)scanf(\"%d\",&val[i]);\n    sort(pos,pos+n);\n    for(int i=1;i<=n;i++)dp[i]=1e18;\n    for(int i=m-2;i>=0;i--)val[i]=min(val[i],val[i+1]);\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=0;j<i;j++)dp[i]=min(dp[i],dp[j]+val[pos[i-1]-pos[j]]);\n    }\n    cout<<dp[n]<<endl;\n    return 0;\n}\n```",
        "postTime": 1475738786,
        "uid": 16817,
        "name": "winmt",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3035 \u3010[USACO11DEC]\u4f1e\u5934Umbrellas for Cows\u3011"
    }
]