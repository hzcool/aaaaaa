[
    {
        "content": "\u6b64\u9898\u73b0\u6709\u9898\u89e3\u8f83\u4e3a\u5197\u957f\uff0c\u56e0\u6b64\u524d\u6765\u8d21\u732e\u4e00\u53d1\uff08\u76ee\u524d\u7684\uff09\u6700\u77ed\u89e3\u3002\n\n\u9996\u5148\u6b63\u5e38\u7684\u601d\u8def\u662f\u76f4\u63a5\u6309\u9898\u610f\u6a21\u62df\u3002\u5373\uff1a\n\n- \u679a\u4e3e\u5f53\u524d\u65f6\u523b $t$\n- \u5bf9\u4e8e\u6bcf\u4e2a\u4eba\uff0c\u6807\u8bb0\u8be5\u65f6\u523b\u60f3\u8981\u62ff\u5230\u7684\u4e66\n- \u6839\u636e\u9898\u76ee\u7684\u8981\u6c42\u5224\u65ad\u51b2\u7a81\u60c5\u51b5\n- \u5bf9\u4e66\u8fdb\u884c\u5206\u914d\n\n\u5b9e\u73b0\u8d77\u6765\u590d\u6742\u7684\u5730\u65b9\u4e3b\u8981\u5728\u5904\u7406\u51b2\u7a81\u4e0a\uff0c\u8003\u8651\u4ece\u8fd9\u65b9\u9762\u7b80\u5316\u4ee3\u7801\u3002\n\n\u6211\u4eec\u77e5\u9053\uff0c\u65f6\u523b\u4e3a $t$ \u65f6\u7b2c $i$ \u4e2a\u4eba\u5df2\u7ecf\u7b49\u5f85\u7684\u65f6\u95f4\u4e0e\u4ed6\u5373\u5c06\u8bfb\u54ea\u672c\u4e66\u65e0\u5173\uff0c\u53ea\u4e0e\u8fd9\u4e2a\u4eba\u5f00\u59cb\u7b49\u5f85\u7684\u65f6\u523b\u6709\u5173\u3002\n\n\u6545\u8bbe $last_i$ \u4e3a\u7b2c $i$ \u4e2a\u4eba\u5f00\u59cb\u7b49\u5f85\uff08\u5373\u8bfb\u5b8c\u4e0a\u4e00\u672c\u4e66\uff09\u7684\u65f6\u523b\u3002\u5219\u628a\u4eba\u6309\u7167 $last$ \u7684\u503c\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u5230\u8fbe\u65f6\u95f4\u7684\u503c\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u8fdb\u884c\u5347\u5e8f\u6392\u5217\uff0c\u4e0d\u96be\u8bc1\u660e\u5bf9\u4e8e\u540c\u4e00\u672c\u4e66\uff0c\u7b49\u5f85\u65f6\u95f4\u66f4\u957f\u7684\u4eba\u4e00\u5b9a\u5148\u88ab\u8ba1\u7b97\u5230\u3002\n\n\u65e2\u7136\u5df2\u7ecf\u8bf4\u5230\u8fd9\u6b65\uff0c\u6211\u4eec\u76f4\u63a5\u6309\u628a\u4eba\u6392\u5e8f\u540e\u7684\u5148\u540e\u987a\u5e8f\u5206\u914d\u4e66\u5c31\u53ef\u4ee5\u907f\u514d\u51b2\u7a81\u95ee\u9898\u4e86\u3002\n\n\u65f6\u95f4\u4e0a\u53ef\u80fd\u6bd4\u5176\u4ed6\u505a\u6cd5\u591a\u4e86\u4e2a\u6392\u5e8f\u7684 $\\log$\uff0c\u4f46\u5bf9\u4e8e\u6b64\u9898\u6570\u636e\u8303\u56f4\u4f9d\u7136\u7ef0\u7ef0\u6709\u4f59\u3002\n\nAC code:\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1005;\nint T,n;\nstruct node{\n\tint arr,k,ls; \n\tint s[10],t[10],flg[10];\n}a[N];\nbool cmp(node x,node y){\n\tif(x.ls==y.ls) return x.arr<y.arr;\n\telse return x.ls<y.ls;\n}\nint ans,bk[N];\nint main()\n{\n\tscanf(\"%d%d\",&T,&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d%d\",&a[i].arr,&a[i].k);a[i].arr++;\n\t\tfor(int j=1;j<=a[i].k;j++) scanf(\"%d%d\",&a[i].s[j],&a[i].t[j]);\n\t\ta[i].ls=a[i].arr;\n\t}\n\tfor(int t=1;t<=T;t++)\n\t{\n\t\tsort(a+1,a+n+1,cmp);\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(a[i].ls>t||a[i].arr>t) continue; \n\t\t\tfor(int k=1;k<=a[i].k;k++)\n\t\t\t{\n\t\t\t\tif((bk[a[i].s[k]]<=t)&&(!a[i].flg[k]))\n\t\t\t\t{\n\t\t\t\t\tans++;a[i].flg[k]=1;\n\t\t\t\t\ta[i].ls=bk[a[i].s[k]]=t+a[i].t[k];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n\n\u65e2\u7136\u90fd\u770b\u5230\u8fd9\u4e86\uff0c\u5c31\u7ed9 yx \u70b9\u4e2a\u8d5e\u5427 qwq\n",
        "postTime": 1663693938,
        "uid": 234074,
        "name": "\u6a31\u96ea\u55b5",
        "ccfLevel": 7,
        "title": "P1844 \u9605\u89c8\u5ba4"
    },
    {
        "content": "\u697c\u4e0b\u7684\u597d\u9ebb\u70e6\uff0cyy\u4e86\u4e2a\u7b80\u5355\u7684\uff08\u770b\u8d77\u6765\u4f3c\u4e4e\u662f\u8fd9\u6837\uff09\n\n\u5047\u8bbe\u4e00\u4e2a\u4eba\u501f\u5230\u4e66\u5c31\u6d88\u5931\u4e86\uff0c\u76f4\u5230\u8bfb\u5b8c\u518d\u51fa\u73b0\n\n\u5206\u522b\u8bb0\u5f55\u6bcf\u4e2a\u4eba\u548c\u6bcf\u672c\u4e66\u4e0b\u6b21\u51fa\u73b0\u7684\u65f6\u95f4\n\n\u679a\u4e3e\u65f6\u95f4t\uff0c\u8fd9\u4e2a\u4eba\u4e00\u51fa\u73b0\u5c31\u53bb\u501f\uff0c\u5982\u679c\u501f\u7684\u5230\u5c31\u548c\u4e66\u4e00\u8d77\u66f4\u65b0\u4e0b\u6b21\u51fa\u73b0\u65f6\u95f4\n\n\u5982\u679c\u501f\u4e0d\u5230\uff0c\u5c31\u627e\u5230\u6700\u65e9\u4f1a\u51fa\u73b0\u7684\u4e66\u6765\u66f4\u65b0\uff0c\u76f8\u5f53\u4e8e\u5c06\u5176\u9884\u5b9a\u4e86\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u4eba\u4e00\u5b9a\u662f\u6700\u65e9\u7684\uff0c\u82e5\u4e0d\u662f\uff0c\u90a3\u4e48\u5c31\u4f1a\u63d0\u524d\u6709\u4eba\u6765\u63a5\u5c06\u4e66\u7684\u51fa\u73b0\u65f6\u95f4\u66f4\u65b0\uff0c\u800c\u4ed6\u53c8\u662f\u5f53\u524d\u65f6\u95f4\u6765\u7684\u6700\u65e9\u7684\uff0c\u6240\u4ee5\u4e0b\u6b21\u51fa\u73b0\u65f6\u4ed6\u53ef\u4ee5\u7b2c\u4e00\u4e2a\u501f\u8d70\uff08\u903b\u8f91\u6709\u70b9\u4e71\uff0c\u597d\u597d\u601d\u8003\u601d\u8003\uff09\n\n\u6bcf\u4e00\u6b21\u66f4\u65b0 ans ++\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint t, n, b[1010]; // b\u8bb0\u5f55\u6bcf\u672c\u4e66\u4e0b\u6b21\u51fa\u73b0\u7684\u65f6\u95f4 \nlong long ans = 0;\nstruct peo\n{\n    int com, num, now; // \u5206\u522b\u8bb0\u5f55\u6765\u7684\u65f6\u95f4\uff0c\u4e0b\u6b21\u51fa\u73b0\u7684\u65f6\u95f4\uff0c\u4e66\u672c\u6570 \n    int a[6], b[6];    // \u4e66\u672c\u5e8f\u53f7\u53ca\u6d88\u8017\u65f6\u95f4 \n    bool aa[6];        // \u8fd9\u672c\u4e66\u662f\u5426\u8bfb\u8fc7 \n};\npeo p[110];\nint main()\n{\n    cin >> t >> n;\n    for (int i = 0; i < n; i ++)\n    {\n        scanf (\"%d %d\", &p[i].com, &p[i].num);\n        p[i].now = p[i].com;                // \u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u65f6\u95f4\u4e3a\u6765\u7684\u65f6\u95f4 \n        for (int j = 0; j < p[i].num; j ++)\n        scanf (\"%d %d\", &p[i].a[j], &p[i].b[j]);\n    }\n    for (int i = 0; i < t; i ++)  // \u8fd9\u91cc\u53ea\u9700\u8981\u679a\u4e3e\u5230 t - 1 (t\u7684\u65f6\u5019\u4e0d\u80fd\u501f\u4e86) \n        for (int j = 0; j < n; j ++)\n        {\n            if (p[j].now > i) continue;\n            bool jud = false; // \u5224\u65ad\u80fd\u5426\u627e\u5230\u53ef\u4ee5\u8bfb\u7684\u4e66 \n            for (int u = 0; u < p[j].num; u ++) // \u627e\u5230\u4e00\u672c\u53ef\u4ee5\u8bfb\u7684\u4e66 \n            if (b[p[j].a[u]] <= i && !p[j].aa[u])\n            {\n                jud = true;\n                p[j].aa[u] = true; // \u6807\u8bb0\u5df2\u8bfb \n                p[j].now = i + p[j].b[u];\n                b[p[j].a[u]] = i + p[j].b[u];  // \u5c06\u4eba\u548c\u4e66\u7684\u65f6\u95f4\u90fd\u66f4\u65b0\u5230\u8fd9\u672c\u4e66\u8bfb\u5b8c \n                ans ++;\n                break;\n            }\n            if (!jud) // \u6ca1\u6709\u627e\u5230 \n            {\n                int mn = 1e9 + 7, g;\n                for (int u = 0; u < p[j].num; u ++)\n                if (mn > b[p[j].a[u]] && !p[j].aa[u]) // \u627e\u4e00\u672c\u73b0\u5728\u80fd\u6700\u5feb\u51fa\u73b0\u7684 \n                {\n                    mn = b[p[j].a[u]];\n                    g = u;\n                }\n                if (mn < t) // \u76f8\u5f53\u4e8e\u628a\u5b83\u9884\u5b9a\u4e86\uff0c\u4e14\u4e0b\u6b21\u51fa\u73b0\u65f6\u95f4\u5728t\u4e4b\u524d \n                {\n                    p[j].aa[g] = true;\n                    b[p[j].a[g]] += p[j].b[g]; // \u662f\u5c06\u8fd9\u672c\u4e66\u4e0b\u6b21\u51fa\u73b0\u7684\u65f6\u95f4\u52a0\u4e0a\u9700\u8981\u8bfb\u7684\u65f6\u95f4 \n                    p[j].now = b[p[j].a[g]];  //\u66f4\u65b0\u5230\u548c\u4e66\u4e00\u6837 \n                    ans ++;\n                }\n            }\n        }\n    cout << ans;\n    return 0;\n}\n```",
        "postTime": 1494071301,
        "uid": 22104,
        "name": "pangpengzhu",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1844 \u3010\u9605\u89c8\u5ba4_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0812\uff09\u3011"
    },
    {
        "content": "\u7eaf\u6a21\u62df.\n\nC++STL\u9898\u89e3\n\n\u6211\u7528STL\u4f18\u5148\u961f\u5217\u8fdb\u884c\u4e8b\u4ef6\u7684\u5904\u7406\n\n\u4e8b\u4ef6\u5206\u4e09\u79cd\uff1a\u5173\u95e8\uff0c\u8fd8\u4e66\uff0c\u770b\u4e66(\u6309\u5148\u540e\u987a\u5e8f)\n\n\u4ee5\u65f6\u95f4\u6392\u5e8f\uff0c\u65f6\u95f4\u4e00\u6837\u5c31\u6309\u7c7b\u578b\u987a\u5e8f\uff0c\u7c7b\u578b\u4e00\u6837\u5c31\u6309\u7f16\u53f7\n\n\u8fd9\u6837\u5c31\u6709\u4e86\u4e00\u4e2a\u4e8b\u4ef6\u6e05\u5355\uff0c\u53ef\u4ee5\u4e0d\u50cffor (i=0;i<t;i++)\u90a3\u6837\u7684\u666e\u901a\u7b97\u6cd5\n\n\u53ef\u4ee5\u8df3\u8fc7\u8bb8\u591a\u6ca1\u6709\u7528\u7684\u65f6\u95f4\u70b9\n\n\u8be6\u7ec6\u89e3\u91ca\u89c1\u4ee3\u7801\n\n```cpp\n#include<queue>\n#include<cstdio>\n#include<vector>\nusing namespace std;\nconst int N=101,T=1001,S=1001;\nint n,t,i,j,ans,reading[N],reach[N],waiting[N];\n//reading[i]\u4ee3\u8868\u7b2ci\u4e2a\u4eba\u770b\u7684\u4e66\u7684\u7f16\u53f7\uff0creading[i]=-1\u65f6\u4ee3\u8868\u7b2ci\u4e2a\u4eba\u6ca1\u6709\u5728\u9605\u8bfb \n//reach[i]\u4ee3\u8868\u7b2ci\u4e2a\u4eba\u5230\u7684\u65f6\u95f4\n//waiting[i]\u4ee3\u8868\u7b2ci\u4e2a\u4eba\u5f00\u59cb\u7b49\u5f85\uff08\u767b\u8bb0\uff09 \u7684\u65f6\u95f4\uff0cwaiting[i]=-1\u65f6\u5373\u6ca1\u6709\u5728\u7b49\u5f85 \nvector<int>a[N];  //a[i][2*j(\u5076\u6570)]\u4ee3\u8868\u7b2ci\u4e2a\u4eba\u8fd8\u9700\u8981\u770b\u7684\u7b2cj\u672c\u4e66\u7684\u7f16\u53f7\uff0ca[i][j*2+1] \u662f\u65f6\u95f4 \nbool f[S],finish[N],want[S][N];\n//f[i]\u4ee3\u8868\u7f16\u53f7\u4e3ai\u7684\u4e66\u6709\u6ca1\u6709\u6b63\u5728\u88ab\u501f(1\u67090\u6ca1\u6709) \n//finish[i]\u4ee3\u8868\u7f16\u53f7\u4e3ai\u7684\u4eba\u6709\u6ca1\u6709\u770b\u5b8c\u4ed6\u8981\u770b\u7684\u6240\u6709\u4e66\n//want[i][j]\u4ee3\u8868\u7f16\u53f7\u4e3a\u7684i\u4e66\u9700\u4e0d\u9700\u8981\u88ab\u7b2cj\u4e2a\u4eba\u770b \nstruct heap\n{\n    int t,num,type;   //t\u662f\u8be5\u4e8b\u4ef6\u53d1\u751f\u7684\u65f6\u95f4\u70b9\uff0cnum\u662f\u4e8b\u4ef6\u7684\u53d1\u8d77\u4eba \uff0ctype\u662f\u4e8b\u4ef6\u7684\u7c7b\u578b\n    //type=0\u65f6\u4ee3\u8868\u9605\u89c8\u5ba4\u5173\u95e8\u7684\u4e8b\u4ef6\uff0c=1\u4ee3\u8868\u8fd8\u4e66\uff0c=2\u4ee3\u8868\u770b\u4e66 \n    bool operator<(const heap &hh)const\n    {\n        if (t>hh.t)return 1;\n        if (t<hh.t)return 0;  //\u5148\u6309\u65f6\u95f4\u6392\u5e8f \n        if (type>hh.type)return 1;\n        if (type<hh.type)return 0; //\u65f6\u95f4\u4e00\u6837\u5c31\u6309\u7c7b\u578b  \n        return num>hh.num;   //\u7c7b\u578b\u8fd8\u4e00\u6837\u5c31\u6309\u7f16\u53f7\u5148\u7684  \n    }\n};\npriority_queue<heap>q;\nint main()\n{\n    scanf(\"%d%d\",&t,&n);\n    for (i=1;i<=n;i++)\n    {\n        int x;\n        reading[i]=waiting[i]=-1;\n        scanf(\"%d%d\",&reach[i],&x);\n        q.push((heap){reach[i],i,2}); //\u5c06\u7b2ci\u4e2a\u4eba\u5230\u8fbe\u9605\u89c8\u5ba4\u7684\u4e8b\u4ef6\u52a0\u5165 \n        while (x--)\n        {\n            int book,time;\n            scanf(\"%d%d\",&book,&time),\n            want[book][i]=1; //\u7b2ci\u4e2a\u4eba\u9700\u8981\u770b\u8fd9\u672c\u4e66 \n            a[i].push_back(book);\n            a[i].push_back(time);\n        }\n    }\n    q.push((heap){t,0,0}); //\u628a\u5173\u95e8\u4e8b\u4ef6\u52a0\u5165 \n    while (q.size())\n    {\n        heap p=q.top();q.pop();\n        if (!p.type)break;  //\u5173\u95e8 \n        int man=p.num,tm=p.t;\n        if (p.type==1) //\u8fd8\u4e66 \n        {\n            int book=reading[man];  //book\u662f\u4ed6\u539f\u6765\u770b(\u8981\u8fd8)\u7684\u4e66 \n            f[book]=0;reading[man]=-1;  //book\u73b0\u5728\u6ca1\u6709\u88ab\u501f\uff0c\u8fd9\u4e2a\u4eba\u5148\u89c6\u4e3a\u4ed6\u6ca1\u6709\u5728\u9605\u8bfb \n            q.push((heap){tm,man,2});  //\u8fd9\u4e2a\u4eba\u4e5f\u53ef\u4ee5\u7ee7\u7eed\u770b\u4e66 \n            int get=T,whoget; //get\u662f\u5f53\u524d\u6700\u65e9\u7684\u767b\u8bb0\u65f6\u95f4\uff0cwhoget\u662f\u767b\u8bb0\u6700\u65e9\u7684\u4eba\u7684\u7f16\u53f7(\u8c01\u5e94\u8be5\u62ff\u5230\u4e66)\n            for (i=1;i<=n;i++)\n            {\n                if (finish[i])continue; //\u5982\u679c\u8fd9\u4e2a\u4eba\u5df2\u7ecf\u5168\u90e8\u770b\u5b8c\u4e86\u5c31\u8df3\u8fc7 \n                if (!want[book][i])continue; //\u4e0d\u9700\u8981\u8fd9\u672c\u4e66\u4e5f\u8df3\u8fc7 \n                if (reach[i]>tm)continue;  //\u8fd8\u6ca1\u5230\u8fbe\u9605\u89c8\u5ba4\u4e5f\u8df3\u8fc7 \n                if (reading[i]>=0)continue; //\u6b63\u5728\u9605\u8bfb\u7684\u4e5f\u8df3\u8fc7 \n                if (waiting[i]>=0&&waiting[i]<get) //\u5982\u679c\u4ed6\u6b63\u5728\u7b49\u5f85\u5e76\u4e14\u4ed6\u767b\u8bb0\u7684\u65f6\u95f4\u5c0f\u4e8eget \n                    get=waiting[i],whoget=i;  //\u5c31\u66f4\u65b0get\uff0c\u628awhoget\u8d4b\u4e3ai \n                if (waiting[i]>=0&&waiting[i]==get)  //\u5982\u679c\u4ed6\u6b63\u5728\u7b49\u5f85\u4f46\u767b\u8bb0\u65f6\u95f4=get \n                    if (reach[i]<reach[whoget])  //\u90a3\u4e48\u5c31\u6bd4\u8f83\u5230\u8fbe\u9605\u89c8\u5ba4\u7684\u65f6\u95f4 \n                        whoget=i;\n            }\n            //\u73b0\u5728\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n            //1.\u6709\u4eba\u7b49\u5f85\u8fd9\u672c\u4e66\n            //2.\u6ca1\u6709\u4eba\u7b49\u5f85\u8fd9\u672c\u4e66 \n            if (get!=T) //\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u76f4\u63a5\u628a\u8fd9\u672c\u4e66\u7ed9whoget \n                waiting[whoget]=-1,\n                q.push((heap){tm,whoget,2});\n            else    //\u53e6\u4e00\u79cd\uff0c\u4e0d\u7b49\u5f85\u5e76\u4e14\u9700\u8981\u8fd9\u672c\u4e66\u7684\u4eba\u80af\u5b9a\u662f\u521a\u5230\u8fbe\u9605\u89c8\u5ba4\u7684\u4eba \n                for (i=1;i<=n;i++)\n                    if (want[book][i]&&reach[i]==tm) //\u6240\u4ee5\u5c31\u627e\u5230\u8fd9\u4e2a\u4eba \n                    {\n                        q.push((heap){tm,i,2});\n                        waiting[i]=-1;\n                        break;\n                    }\n        }\n        if (p.type==2)  //\u770b\u4e66 \n        {\n            if (reading[man]>=0||waiting[man]>=0||finish[man])continue;\n            //\u5982\u679c\u6b63\u5728\u9605\u8bfb\u3001\u6b63\u5728\u7b49\u5f85\u6216\u5df2\u7ecf\u770b\u5b8c\u6240\u6709\u4e66\u5219\u8df3\u8fc7 \n            queue<int>del;  //\u8fd9\u4e2a\u5168\u79f0\u662fdelete\n            for (i=0;i<a[man].size();i+=2)\n            {\n                int book=a[man][i],\n                    time=a[man][i+1];\n                if (!f[book])  //\u5982\u679c\u6ca1\u6b63\u5728\u88ab\u501f \n                {\n                    ans++; //\u7b54\u6848+1 \n                    want[book][man]=0;  //\u8fd9\u4e2a\u4eba\u5c31\u4e0d\u9700\u8981\u770bbook\u4e86 \n                    del.push(i); //\u5c31\u53ef\u4ee5\u628a\u8fd9\u672c\u4e66\u4ece\u4ed6\u9700\u8981\u770b\u7684\u4e66\u4e2d\u6e05\u6389 \n                    if (time)  //\u56e0\u4e3a\u6211\u77e5\u9053\u6570\u636e\u4e2d\u6709\u53ef\u80fd\u5b58\u5728\u770b\u4e66\u4e0d\u9700\u8981\u65f6\u95f4\u7684\uff0c\u6240\u4ee5\u8981\u7279\u5224 \n                    {\n                        f[book]=1;  //\u53ea\u6709time>0\u7684\u624d\u4f1a\u628a\u8fd9\u672c\u4e66\u501f\u8d70\u4e00\u6bb5\u65f6\u95f4\uff0ctime=0\u7684\u8bdd\u5c31\u5373\u501f\u5373\u8fd8 \uff0c\u76f8\u5f53\u4e8e\u6ca1\u88ab\u501f\u8d70 \n                        reading[man]=book; //\u53ea\u6709time>0\u7684\u624d\u4f1a\u8fdb\u5165\u9605\u8bfb\u72b6\u6001\uff0ctime=0\u5373\u770b\u5373\u8fd8\uff0c\u76f8\u5f53\u4e8e\u6ca1\u770b \n                        q.push((heap){tm+time,man,1});  //time>0\u624d\u9700\u8981\u5728\u5f53\u524d\u65f6\u95f4+time\u7684\u65f6\u95f4\u70b9\u8fd8\u4e66 \n                        break;  //time>0\u5373\u672c\u8f6e\u4e0d\u80fd\u518d\u770b\u4e66\u4e86\uff0c\u5c31\u9000\u51fa\u5faa\u73af \n                    }\n                    //else continue;  \u4e0d\u9700\u8981\u65f6\u95f4\u7684\u8bdd\u5c31\u8df3\u8fc7\uff0c\u56e0\u4e3a\u672c\u6765\u5c31\u4f1a\u81ea\u5df1\u8df3\u8fc7\uff0c\u6240\u4ee5\u8fd9\u6761\u53ef\u4ee5\u7701\u7565 \n                }\n            }\n            while (del.size())  //\u6e05\u9664\u770b\u8fc7\u7684\u4e66 \n            {\n                int dele=del.front();\n                a[man].erase(a[man].begin()+dele,a[man].begin()+dele+2),\n                del.pop();\n            }\n            if (a[man].empty())finish[man]=1;  //\u5982\u679c\u5168\u90e8\u6e05\u6389\u4e86\uff0c\u5c31\u8bf4\u660e\u7ed3\u675f\u9605\u8bfb\u4e86 \n            if (reading[man]<0&&!finish[man]) //\u5982\u679c\u6ca1\u6709\u6b63\u5728\u9605\u8bfb(\u6ca1\u6709\u8bfb\u5230\u4e66)\uff0c\u5e76\u4e14\u4e5f\u6ca1\u6709\u7ed3\u675f\u9605\u8bfb \n                waiting[man]=tm; //\u5c31\u767b\u8bb0\u4e3a\u7b49\u5f85 \n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1503718875,
        "uid": 14374,
        "name": "zhengrunzhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1844 \u3010\u9605\u89c8\u5ba4_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0812\uff09\u3011"
    },
    {
        "content": "\u7528\u4e86\u4e00\u4e2a\u4e0d\u53bb\u679a\u4e3e\u65f6\u95f4T\uff0c\u6539\u7528\u4f18\u5148\u961f\u5217\u7684\u65b9\u6cd5\uff0c\u5c06\u9700\u8981\u53bb\u5904\u7406\u7684\u65f6\u95f4push\u5230\u4e00\u4e2a\u6309\u65f6\u95f4\u6392\u5e8f\u7684\u4f18\u5148\u961f\u5217\u4e2d\u3002\u5c3d\u7ba1\u8fd9\u9898\u6570\u636e\u5f88\u6c34\u4e0d\u7528\u4f18\u5148\u961f\u5217\u53bb\u679a\u4e3eT\u4e5f\u80fd\u8fc7\u3002\n\n\u6b64\u5916\uff0c\u5bf9\u4e8e\u767b\u8bb0\u520a\u7269\u91c7\u7528\u7684\u662f\u666e\u901a\u961f\u5217\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u8f93\u5165\u6570\u636e\u7684\u65f6\u5019\u5df2\u7ecf\u4fdd\u8bc1\u4e86\u5148\u6765\u540e\u5230\u7684\u987a\u5e8f\uff0c\u56e0\u6b64\u53ea\u8981\u6309\u7167\u987a\u5e8f\u68c0\u6d4b\u6bcf\u4e2a\u4eba\u7684\u72b6\u6001\u5c31\u884c\u3002\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <queue>\n#include <algorithm>\n#include <cstdlib>\nusing namespace std;\nstruct book {\n    int number;\n    int time;\n    bool have_read;//\u8bfb\u8fc7\n    book(int n,int t):number(n),time(t),have_read(false){}\n};\nstruct reader {\n    int arrival;\n    int request_time;//\u5230\u8fbe\u65f6\u95f4\u6216\u8bfb\u5b8c\u5f53\u524d\u8fd9\u672c\u4e66\u540e\u627e\u4e0b\u4e00\u672c\u4e66\u7684\u65f6\u95f4\n    vector <book> list;//\u60f3\u770b\u7684\u4e66\u987a\u5e8f\n};\nstruct comp {//\u7528\u4e8echecktime\u7684\u4f18\u5148\u961f\u5217\n    bool operator()(int x, int y){\n        return x > y;\n    }\n};\nint main() {\n    /*\n    freopen(\"Reading.in\",\"r\",stdin);\n    freopen(\"Reading.out\",\"w\",stdout);\n    */\n    int T,n;\n    while (scanf(\"%d%d\",&T,&n) == 2) {\n        int ans = 0;//\u6240\u6709\u520a\u7269\u88ab\u9605\u8bfb\u7684\u603b\u6b21\u6570\n        int books = 0;//\u4e66\u7684\u6700\u5927\u7f16\u53f7\n        int timeleft[1005]={0};//\u5f53\u524d\u6bcf\u672c\u4e66\u7684\u7b49\u5f85\u65f6\u95f4\n        int inqueue[1005]={0};//\u8fd9\u672c\u4e66\u961f\u5217\u4e2d\u7684\u4eba\u9605\u8bfb\u65f6\u95f4\u4e4b\u548c\n        queue <int> request_queue[1005];//\u7ed9\u6bcf\u672c\u4e66\u5efa\u7acb\u7b49\u5f85\u961f\u5217\uff0c\u5b58\u50a8\u8bfb\u8005\u7f16\u53f7 \n        reader r[105];\n        priority_queue<int, vector<int>, comp> checktime;//\u65f6\u95f4\u961f\u5217\n        bool vis[2005]={0};\n        for (int i=0;i<n;i++) {//\u8f93\u5165\u6570\u636e\n            scanf(\"%d\",&r[i].arrival);\n            r[i].request_time = r[i].arrival;\n            checktime.push(r[i].arrival);\n            vis[r[i].arrival] = true;\n            int k;\n            scanf(\"%d\",&k);\n            for (int j=0;j<k;j++) {\n                int S,t;\n                scanf(\"%d%d\",&S,&t);\n                books = max(books,S);//\u5b58\u50a8\u4e66\u7684\u6700\u5927\u7f16\u53f7\n                r[i].list.push_back(book(S,t));\n            }\n        }\n        int lasttime = 0;\n        while (!checktime.empty()){\n            int time = checktime.top();\n            checktime.pop();\n            if (time >= T) break;\n            for (int i=0;i<=books;i++) timeleft[i] -= time - lasttime;\n            lasttime = time;\n            //\u5148\u5904\u7406request queue\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u4eba\u540c\u65f6\u53ea\u4f1a\u5728\u4e00\u4e2a\u7b49\u5f85\u961f\u5217\u4e2d\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u8fd9\u4e48\u505a\u5373\u53ef \n            for (int i=0;i<=books;i++) {\n                if (timeleft[i] <= 0 && !request_queue[i].empty()) {\n                    int id = request_queue[i].front();\n                    request_queue[i].pop();\n                    for (unsigned int j=0;j<r[id].list.size();j++) {\n                        if (r[id].list[j].number == i) {\n                            inqueue[i] -= r[id].list[j].time;\n                            timeleft[i] = r[id].list[j].time;\n                            r[id].request_time = time + r[id].list[j].time;\n                            if (!vis[r[id].request_time]){\n                                checktime.push(r[id].request_time);    \n                                vis[r[id].request_time] = true;\n                            }\n                            r[id].list[j].have_read = true;\n                            ans++;\n                            break;\n                        }\n                    }\n                }\n            }\n            //\u518d\u5904\u7406\u6bcf\u4e2a\u4eba\uff0c\u7531\u4e8e\u8f93\u5165\u6570\u636e\u5df2\u7ecf\u6309\u5230\u8fbe\u65f6\u95f4\u7ed9\u51fa\u987a\u5e8f\uff0c\u56e0\u6b64\u76f4\u63a5\u5904\u7406\u5373\u53ef\n            for (int i=0;i<n;i++) {\n                if (r[i].request_time == time) {\n                    bool flag = false;//\u627e\u5230\u4e86\u8981\u8bfb\u7684\u4e66\n                    for (unsigned int j=0;j<r[i].list.size();j++) {//request for book & \u4e0d\u7b49\u5f85\n                        if (!r[i].list[j].have_read && timeleft[r[i].list[j].number] <= 0) {\n                            flag = true;\n                            timeleft[r[i].list[j].number] = r[i].list[j].time;\n                            r[i].request_time = time + r[i].list[j].time;\n                            if (!vis[r[i].request_time]){\n                                checktime.push(r[i].request_time);    \n                                vis[r[i].request_time] = true;\n                            }\n                            r[i].list[j].have_read = true;\n                            ans++;\n                            break;\n                        }\n                    }\n                    //\u8fdb\u7b49\u5f85\u961f\u5217\u7684\u60c5\u51b5\n                    if (!flag) {\n                        int select = -1;//\u9009\u62e9\u7b49\u5f85\u7684\u4e66\u53f7 \n                        int selectn = -1;//\u9009\u62e9\u7b49\u5f85\u7684\u4e66\u5728\u8bfb\u8005list\u4e2d\u7684\u5e8f\u53f7\n                        for (unsigned int j=0;j<r[i].list.size();j++) {\n                            //\u5224\u65ad\u9009\u62e9\u8fd9\u672c\u4e66\u662f\u5426\u53ef\u4ee5\u83b7\u5f97\u66f4\u5c0f\u7684\u7b49\u5f85\u65f6\u95f4\n                            if (!r[i].list[j].have_read) {\n                                //\u9996\u5148\u8fd9\u672c\u4e66\u5fc5\u987b\u6ca1\u6709\u8bfb\u8fc7\n                                int curr_number = r[i].list[j].number;\n                                if (select == -1) {\n                                    select = curr_number;//\u4f5c\u4e3a\u57fa\u51c6\u76f4\u63a5\u9009\u62e9\n                                    selectn = j;\n                                }\n                                else {\n                                    if (timeleft[curr_number] + inqueue [curr_number] < timeleft[select] + inqueue[select]) {\n                                        //\u5bfb\u627e\u4e00\u4e2a\u6240\u9700\u7b49\u5f85\u65f6\u95f4\u6700\u5c11\u7684\u6742\u5fd7\u53bb\u7b49\u5f85\n                                        select = curr_number;\n                                        selectn = j;\n                                    }\n                                } \n                            }\n                        }\n                        if (select != -1) {\n                            r[i].request_time = time + timeleft[select] + inqueue [select];\n                            if (!vis[r[i].request_time]){\n                                checktime.push(r[i].request_time);    \n                                vis[r[i].request_time] = true;\n                            }\n                            request_queue[select].push(i);\n                            inqueue[select] += r[i].list[selectn].time;\n                        }\n                    }\n                }\n            }\n            \n        }\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1475745646,
        "uid": 7738,
        "name": "chenyy",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1844 \u3010\u9605\u89c8\u5ba4_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0812\uff09\u3011"
    }
]