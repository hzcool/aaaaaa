[
    {
        "content": "@wangtianyi @\u5929\u4e0b\u7b2c\u4e00\u5251\u5ba2 \u8fd9\u91cc\u662f\u6ce5\u840c\u7684\u9519\u8bef\u53ca\u89e3\u51b3\u65b9\u6848\u4e4b\u4e00\uff1a\n\n\u5f53\u8f93\u5165\u4e3a$8$\u7684\u65f6\u5019\uff0c\u7b54\u6848\u5e94\u4e3a$24 = 2^3*3$, \u800c\u975e$30 = 2*3*5$\u3002\n\n\u65e2\u7136\u8d2a\u5fc3\u884c\u4e0d\u901a\uff0c\u6211\u4eec\u6765\u8003\u8651DP\u3002\n\u4ee4$f_{i, j}$\u8868\u793a\u6240\u6709\u53ea\u5305\u542b\u524d$j$\u4e2a\u8d28\u56e0\u6570\u7684\u6570\u4e2d\uff0c\u56e0\u6570\u4e2a\u6570\u4e3a$i$\u7684\u6700\u5c0f\u7684\u6570\u3002\n\n\u90a3\u4e48\uff0c\u6839\u636e\u56e0\u6570\u4e2a\u6570\u516c\u5f0f\n\n$$\\tau(n)=\\prod_i(k_i+1), \\rm{where}\\;n=\\prod_i p_i^{k_i}$$\n\n\u8f6c\u79fb\u65f6\u679a\u4e3e\u6700\u540e\u4e00\u4e2a\u8d28\u56e0\u5b50\u7684\u6b21\u6570\uff0c\u6211\u4eec\u6709\n\n$$f_{i, j} = \\min_{k|i}\\left(f_{\\frac ik, j-1}p_j^{k-1}\\right)$$\n\n\u663e\u7136\u6211\u4eec\u662f\u4e0d\u80fd\u9ad8\u7cbedp\u7684\uff08\u968f\u4fbf\u8f93\u5165\u4e86\u4e00\u4e2a28493\u5f97\u5230\u7684\u7b54\u6848\u67098577\u4f4d\u5341\u8fdb\u5236\uff0c\u60f3\u8981\u9ad8\u7cbedp\u7684\u81ea\u5df1\u7b97\u7b97\u590d\u6742\u5ea6\u5c31\u597d\u4e86\uff09\u3002\u90a3\u4e48\u8003\u8651\u53d6\u5bf9\u6570\uff0cdp\u53d8\u6210\u4e86\n\n$$f_{i, j} = \\min_{k|i}\\left(f_{\\frac ik, j-1}+(k-1)\\log p_j\\right)$$\n\n\u6700\u540e\u8981\u6c42\u7ed3\u679c\u7684\u65f6\u5019\u53ea\u8981\u627e\u5230\u8f6c\u79fb\u7684\u65b9\u5411\u628a\u5bf9\u5e94\u7684$p_j^{k-1}$\u4e58\u4e0a\u53bb\u5c31\u597d\u4e86\u3002\u9ad8\u7cbe\u4e58\u5355\u7cbe\u633a\u597d\u5199\u7684\u3002\n\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <cmath>\n#include <map>\nconst int N = 50050;\nconst int p[20] = {\n   2,  3,  5,  7, 11,\n  13, 17, 19, 23, 29,\n  31, 37, 41, 43, 47,\n  53, 59, 61, 67, 71\n};\ndouble logp[20];\ndouble f[505][20];\nint d[505];\nint cnt;\nint A[100000], len;\nvoid mul(int x) {\n  int v = 0;\n  for (int i = 0; i < len; ++i) {\n    v = (A[i] = A[i] * x + v) / 10;\n    A[i] %= 10;\n  }\n  while (v) A[len++] = v % 10, v /= 10;\n}\nint main() {\n  int n, m = 0;\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) if (!(n % i)) d[m++] = i;\n  for (int i = 0; i < 20; ++i) f[0][i] = .0;\n  for (int i = 0; i < 20; ++i) logp[i] = log(p[i]);\n  for (int i = 1; i < m; ++i) {\n    for (int k = 0; k < 20; ++k)\n      f[i][k] = 1e9;\n    for (int j = 0; j < i; ++j) if (!(d[i] % d[j])) {\n      int t = d[i] / d[j];\n      for (int k = 1; k < 20; ++k)\n        f[i][k] = std::min(f[i][k], f[j][k - 1] + logp[k - 1] * (t - 1));\n    }\n  }\n  A[0] = len = 1;\n  int j = 0;\n  for (int i = 0; i < 20; ++i) if (f[m - 1][i] < f[m - 1][j]) j = i;\n  for (int i = m - 1, nxt; i; i = nxt, --j) {\n    for (nxt = 0; d[i] % d[nxt] || f[i][j] < f[nxt][j - 1]\n        + logp[j - 1] * (d[i] / d[nxt] - 1) - 1e-5; ++nxt);\n    for (int k = 1; k < d[i] / d[nxt]; ++k)\n      mul(p[j - 1]);\n  }\n  while (len--) printf(\"%d\", A[len]);\n  return 0;\n}\n\n```",
        "postTime": 1519562662,
        "uid": 7868,
        "name": "_rqy",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1128 \u3010[HNOI2001]\u6c42\u6b63\u6574\u6570\u3011"
    },
    {
        "content": "\u4e3b\u8981\u662f\u5bf9DFS\u505a\u6cd5\u7684\u8865\u5145\u3002\n\n### [\u9898\u76ee\u63cf\u8ff0](https://www.luogu.org/problemnew/show/P1128)\n\n\u7ed9\u51fa\u51e0\u4e2a\u8981\u70b9\uff1a\n\n   1\u3001\u516c\u5f0f\uff1a\n   \n\n$N$\u53ef\u4ee5\u5206\u89e3\u8d28\u56e0\u6570\uff1a$N$=p1^a1\u00d7p2^a2\u00d7p3^a3*\u2026*pk^ak, \uff08ai\u4e3a\u6bcf\u4e2a\u8d28\u56e0\u5b50\u7684\u6307\u6570\uff09\n   \n   \u7531\u7ea6\u6570\u5b9a\u4e49\u53ef\u77e5p1^a1\u7684\u7ea6\u6570\u6709:p1^0, p1^1, p1^2......p1^a1 \uff0c\u5171\uff08a1+1\uff09\u4e2a;\u540c\u7406p2^a2\u7684\u7ea6\u6570\u6709\uff08a2+1\uff09\u4e2a......pk^ak\u7684\u7ea6\u6570\u6709\uff08ak+1\uff09\u4e2a\u3002\n   \n   \u6545\u6839\u636e\u4e58\u6cd5\u539f\u7406\uff1a$N$\u7684\u7ea6\u6570\u7684\u4e2a\u6570\u5c31\u662f(a1+1)(a2+1)(a3+1)\u2026(ak+1)\u3002\n\n   \u800c\u9898\u76ee\u7684\u610f\u601d\u662f\u8981\u6c42\u7ea6\u6570\u4e2a\u6570\u4e3a$n$\u7684$N$\u7684\u6700\u5c0f\u503c\u3002\n   \n   \u4e5f\u5c31\u662f\u8bf4\u901a\u8fc7$N$\u7684\u7ea6\u6570\u4e2a\u6570\u4e4b\u548c\uff08$N$\u7684\u7ea6\u6570\u4e2a\u6570\u5df2\u77e5\uff09\u6c42\u51fa\u6bcf\u4e2aai\u7684\u8fc7\u7a0b\u4e3aDFS\u7684\u8fc7\u7a0b\u3002\u90a3\u4e48\u6700\u7ec8\u7b54\u6848\u4e3a**$N$\u5206\u89e3\u8d28\u56e0\u6570\u7684\u9006\u8fc7\u7a0b**\u3002\n   \n   **\u6700\u591a\u53ef\u4ee5\u7528\u5230\u7684\u8d28\u56e0\u6570\u4e2a\u6570\u4e3a16**\uff0clog(50000)=16\u3002(\u5e95\u6570\u4e3a2)\u3002\n                                  \n------------\n\n   2\u3001\u526a\u679d:\n    \n   \u5efa\u8bae\u5728\u641e\u6e05\u695a\u5982\u4f55DFS\u540e\u98df\u7528\u66f4\u4f73\u3002\uff5e\uff5e\n    \n   \u76f4\u63a5\u7684DFS\u662f\u4e00\u5b9a\u4f1aTLE\u7684\uff0c\u6211\u4eec\u8003\u8651\u51e0\u4e2a\u526a\u679d\uff1a\n    \n   \uff081\uff09\u5982\u679c\u5f53\u524d\u5f97\u5230\u7684\u7b54\u6848\u4e0d\u6bd4\u73b0\u5728\u4f18\uff0c\u90a3\u4e48\u5b83\u4ee5\u540e\u4e5f\u4e0d\u4f1a\u66f4\u4f18\u3002\u8fd9\u662f\u663e\u800c\u6613\u89c1\u7684\u3002 \uff08\u6700\u4f18\u6027\u526a\u679d\uff09\n       \n   \u4f46\u8fd9\u4e2a\u6570\u5b9e\u5728\u592a\u5927\u4e86\uff08\u6700\u5927\u6709\u8d28\u657049999\uff0c\u5b83\u7684\u7b54\u6848\u4e3a2^49998\uff09\u3002\u6211\u4eec\u4e0d\u80fd\u7528**long long**\u6765\u5b58\uff0c\u6211\u4eec\u66f4\u4e0d\u80fd\u7528\u9ad8\u7cbe\uff0c\u90a3\u6837\u5b50\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u592a\u9ad8\u4e86\u3002\u6240\u4ee5\u6211\u4eec\u8003\u8651\u7528\u5bf9\u6570\u6765\u5b58\u3002\u6700\u540e\u7684\u7b54\u6848\u7528**\u6570\u7ec4\u4fdd\u5b58\u6bcf\u4e00\u4e2a\u8d28\u56e0\u6570\u7684\u6307\u6570**\u5373\u53ef\u3002\n    \n   \u5bf9\u6570\u7684\u516c\u5f0f\uff1a(\u4e3a\u4e86\u65b9\u4fbf\u9ed8\u8ba4\u5e95\u6570\u76f8\u540c\u4e14\u5927\u4e8e1)\n    \n   1. log(a*b)=log(a)+log(b);\n       \n       \u63a8\u5e7f\uff1a log(a^b)=b*log(a);\n    \n   2. log(x1)>log(x2) (x1>x2);\n    \n   \u516c\u5f0f\u53d8\u4e3a$N$=p1^a1\u00d7p2^a2\u00d7p3^a3*\u2026*pk^ak => log($n$)=(\u7d2f\u52a0)ai*log(pi);\n    \n   \u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u5bf9\u6570\u6765\u6bd4\u8f83\u5927\u5c0f\u4e86\uff0cc++\u51fd\u6570\u5e93\u7684cmath\u6709\u8fd9\u4e2a\u51fd\u6570log()(c++\u9ed8\u8ba4\u5e95\u6570\u4e3ae\uff0c\u7ea6\u4e3a2.6),\u4e14\u8fd4\u56de\u503c\u4e3a **double** \u578b\uff0c\u6211\u4eec\u5728DFS\u8fc7\u7a0b\u4e2d\u76f4\u63a5\u8ba1\u7b97\u5373\u53ef\u3002\n    \n   \uff082\uff09\u5982\u679c\u5f53\u524d\u641c\u5230\u7684\u6570\u4e0d\u80fd\u88abtol(\u4e00\u4e2a\u8bb0\u5f55\u4e2d\u95f4\u7b54\u6848\u7684\u4e1c\u897f\uff0c\u521d\u59cb\u4e3a$n$)\u6574\u9664\uff0c\n    \u5219\u8fd9\u4e2a\u6570\u4e00\u5b9a\u4e0d\u4f1a\u7528\u5230\u3002 \uff08\u53ef\u884c\u6027\u526a\u679d\uff09\n    \n   \uff083\uff09\u6ce8\u610f\u4e00\u4e2a\u95ee\u9898\uff0clog()\u51fd\u6570\u5728c++\u4e2d\u7684\u8ba1\u7b97\u662f\u5f88\u8017\u65f6\u95f4\u7684\uff0c\u5efa\u8bae\u5148\u7528\u6570\u7ec4\u4fdd\u5b58\u3002\n    \n    \n3\u3001\u6700\u540e\u7528\u9ad8\u7cbe\u4e58\u4f4e\u7cbe\u5373\u53ef\u3002\n\n\n------------\n\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<cstring>\nusing namespace std;\nconst int maxn=50000;\nint f[21],ans[21],a[10000];\nint ansd[1000000];\nint len,n,k;\nbool vis[maxn];\ndouble ansx=1000000000,lg[1000];  //g\u4e3a\u7b2cg\u4e2a\u8d28\u56e0\u6570\u3002\nvoid dfs(int tol,double d,int g){ //d\u4e3a\u5f53\u524d\u7684\u7b54\u6848\uff08\u7528log\u7f29\u5c0f\uff09\n    if(ansx<d||g==16) return; //\u526a\u679d1\n    if(tol==1){\n        if(ansx>d){\n            memcpy(ans,f,sizeof(f));\n            ansx=d;\n        }\n        return;\n    }\n    for(int i=0;(i+1)*(i+1)<=tol;i++)\n    if(tol%(i+1)==0){  //\u526a\u679d2\n        f[g]=i;\n        dfs(tol/(i+1),d+f[g]*lg[a[g]],g+1);\n        f[g]=tol/(i+1)-1;\n        dfs(i+1,d+f[g]*lg[a[g]],g+1);\n        f[g]=0;\n    }\n}\n\nvoid mem(){  //\u7ebf\u6027\u7b5b\u6c42\u7d20\u6570\uff0c\u6ca1\u6709\u5fc5\u8981\u3002\n    vis[1]=1;\n    int m=sqrt(maxn+0.05);\n    for(int i=2;i<=m;i++)\n    if(!vis[i]){\n        for(int j=i*i;j<maxn;j+=i)\n        vis[j]=1;\n    }\n    for(int i=2;i<=maxn;i++)\n    if(!vis[i]){\n        a[k]=i;\n        if(k<=20) lg[a[k]]=log(a[k]);\n        k++;\n    }\n}\n\nint main(){\n    mem();\n    scanf(\"%d\",&n);\n    dfs(n,0,0);\n    int top=0,x=0;\n    ansd[0]=1;\n    for(int i=0;i<=20;i++)\n    while(ans[i]){  //\u9ad8\u7cbe\u4e58\u4f4e\u7cbe\n        ans[i]--;\n        x=0;\n        for(int j=0;j<=top;j++){\n            ansd[j]=a[i]*ansd[j]+x;\n            if(ansd[j]>=10){\n                x=ansd[j]/10;\n                ansd[j]=ansd[j]%10;\n                if(j==top) top++;\n            }else x=0;\n        }\n    }\n    for(int i=top;i>=0;i--)\n    printf(\"%d\",ansd[i]);\n    printf(\"\\n\");\n    return 0;\n}\n```\n\n\u5176\u5b9e\u8fd9\u4e2a\u4ee3\u7801\u8fc7\u4e0d\u4e86\u5927\u7d20\u6570\uff0849999\uff09\uff0c\u5982\u679c\u4f18\u5316\u9700\u8981\u52a0\u5feb\u901f\u5e42\u3002\n\n\u5982\u679c\u8981\u7cbe\u76ca\u6c42\u7cbe\u5c31\u7801\u5427\u3002\n\n\n## \u9898\u5916\u8bdd\uff1a\n\n[\u9898\u76ee\u94fe\u63a5[\u6700\u591a\u56e0\u5b50\u6570]](https://www.luogu.org/problemnew/show/P1221)\n\n\u505a\u5b8c\u4e86\u8fd9\u9053\u9898\u5efa\u8bae\u770b\u4e00\u4e0b\u6700\u591a\u56e0\u5b50\u6570\uff0c\u5927\u540c\u5c0f\u5f02\u3002",
        "postTime": 1532924816,
        "uid": 59951,
        "name": "throusea",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1128 \u3010[HNOI2001]\u6c42\u6b63\u6574\u6570\u3011"
    },
    {
        "content": "[${\\color{orange}\\text{\u6b22\u8fce\u62dc\u8bbf\u6211\u8fd9\u4e2a\u849f\u84bb\u7684\u535a\u5ba2}}$](https://www.luogu.org/blog/Wendigo/)\n\n[P1128 \u3010\\[HNOI2001\\]\u6c42\u6b63\u6574\u6570\u3011](https://www.luogu.org/problem/P1128)\n\n### \u6b64\u9898\u7b97\u6cd5:\u6570\u8bba+$dfs$\n\n\u5927\u81f4\u601d\u8def:\n\n>1.$ $\u8f93\u5165$n$\uff0c\u9884\u5904\u7406$n$\u7684\u56e0\u6570\u6570\u7ec4$cd$\u3002\n\n>2.$ $\u6b64\u9898\u4e2d\u7684\u6570\u8bba\u77e5\u8bc6:\u4e00\u4e2a\u6570$m$\u7684\u56e0\u6570\u4e2a\u6570\u4e3a$(m$\u7684\u6bcf\u4e2a$($\u8bbe\u4e3a$k$\u4e2a$)$\u8d28\u56e0\u6570\u7684\u5e42\u6b21$($\u8bbe\u4e3a$a)-1)$\u7684\u4e58\u79ef\u3002\n\n>\u203b$f(n)=\\prod\\limits_{i=1}^k(a_i-1)$\n\n>3.$ $\u901a\u8fc7$dfs$\u679a\u4e3e\u6bcf\u79cd$m$\uff0c\u6c42\u51fa\u6700\u5c0f\u7684\u3002\n\n>4.$ $\u8f93\u51fa$m($\u8981\u7528\u9ad8\u7cbe\u5ea6\uff0c\u4e0b\u9762\u5728\u4ee3\u7801\u7684\u6ce8\u91ca\u4e2d\u4f1a\u5199\u6b64\u9898\u6280\u5de7$)$\u3002\n\n## \u4ee5\u4e0b\u662f\u4ee3\u7801+\u6ce8\u91ca\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=510; //n\u7684\u6700\u591a\u7ea6\u6570\u4e2a\u6570\uff0c\u4f60\u6ca1\u770b\u9519\uff0c\u662fn\nconst double inf=LLONG_MAX; //\u8868\u793along long\u7c7b\u578b\u7684\u6700\u5927\u503c\nconst int maxn=1e8;\nstruct num{ //\u9ad8\u7cbe\u5ea6\u5927\u6574\u6570\n\tint siz,d[N*40];\n\tvoid tim(int x){ //\u4e58\u6cd5\uff0c\u4e58\u4e0a\u5c0f\u6574\u6570t\n\t\tfor(int i=1;i<=siz;i++)\n\t\t\td[i]*=x;\n\t\tfor(int i=1;i<=siz;i++){\n\t\t\td[i+1]+=d[i]/10;\n\t\t\td[i]%=10;\n\t\t} while(d[siz+1]){\n\t\t\tsiz++;\n\t\t\td[siz+1]=d[siz]/10;\n\t\t\td[siz]%=10;\n\t\t}\n\t} void print(){ //\u8f93\u51fa\u5927\u6574\u6570\n\t\tfor(int i=siz;i>=1;i--)\n\t\t\tprintf(\"%d\",d[i]);\n\t\tprintf(\"\\n\");\n\t}\n}ans; //\u5c31\u662fm\nconst int p[20]={\n\t0,2,3,5,7,\n\t11,13,17,19,\n\t23,29,31,37,\n\t41,43,47,53\t\n}; //\u8db3\u591f\u7528\u7684\u8d28\u6570\nint n,tot,cd[N],c[N],\nsum,minc[N],t=1;\n/*\ntot\u8868\u793an\u7684\u56e0\u6570\u4e2a\u6570   __\ncd\u8868\u793an\u7684\u56e0\u6570       /  \\\nc\u8868\u793am\u7684\u8d28\u56e0\u6570\u5e42\u6b21  | \u203b|\nminc\u662f\u6700\u5c0fm\u7684c\u6570\u7ec4  \\__/ \nt\u662f\u540e\u9762\u7528\u6765\u4f5c\u4e58\u6cd5\u7684\n*/\ndouble minn,lgm;\n/*\n\u7531\u4e8em\u8fc7\u5927\ndfs\u8fc7\u7a0b\u4e2d\u8981\u7528m\u5bf9\u4e8ee\u7684\u5bf9\u6570lgm\u8868\u793am\nminn\u662f\u6700\u5c0f\u7684lgm\n*/\nvoid dfs(int dep,int m,int r){//dep\u8868\u793a\u7b2cdep\u4e2a\u8d28\u56e0\u6570\uff0cm\u8868\u793a\u4e0a\u4f20\u7528\u4e86n\u7684\u7b2cm\u4e2a\u56e0\u6570\uff0cr\u8868\u793a\u5269\u4f59\u7684n\n\tif(r==1){ lgm=0;\n\t\tfor(int i=1;i<=dep-1;i++)\n\t\t\tlgm+=(c[i]-1)*log(p[i]); //\u6c42m\u7684\u5bf9\u6570\n\t\tif(lgm<minn){\n\t\t\tminn=lgm;\n\t\t\tsum=dep-1;\n\t\t\tfor(int i=1;i<=N;i++)\n\t\t\t\tminc[i]=c[i]; //\u66f4\u65b0\u6700\u5c0fm\n\t\t}\n\t} else for(int i=m;i<=tot;i++)\n\t\t\tif(r%cd[i]==0){\n\t\t\t\tc[dep]=cd[i];\n\t\t\t\tdfs(dep+1,i,r/cd[i]);\n\t\t\t} //dfs\u7684\u9012\u5f52\u8fc7\u7a0b\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=n;i>=2;i--)\n\t\tif(n%i==0)\n\t\t\tcd[++tot]=i;\n\tminn=inf; //\u521d\u59cb\u5316\n\tdfs(1,1,n);\n\tans.siz=1; ans.d[1]=1;\n\tfor(int i=1;i<=sum;i++)\n\t\tfor(int j=1;j<=minc[i]-1;j++){\n\t\t\tif(p[i]*t<=maxn)\n\t\t\t\tt*=p[i]; \u7d2f\u52a0p\uff0c\u51cf\u5c11tim\u51fd\u6570\u4f7f\u7528\n\t\t\telse {ans.tim(t); t=p[i];}\n\t\t}\n\tans.tim(t); ans.print();//\u522b\u5fd8\u4e86\u4f59\u4e0b\u7684t\u4e58\u4e0a\n\treturn 0;\n}\n```\n\u6b64\u9898\u4e0d\u7528$int$\u548c$double$\u95f4\u7684\u8f6c\u6362\uff0c\u4e5f\u65e0\u9700$long\\space long$\n\n\u8c22\u8c22\u5927\u5bb6! !\n\n",
        "postTime": 1571301661,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1128 \u3010[HNOI2001]\u6c42\u6b63\u6574\u6570\u3011"
    },
    {
        "content": "\u4eca\u5929\u6a21\u62df\u8d5b\u9898\uff0c\u61d2\u5f97\u5199\u9ad8\u7cbe\u7528 `python` \u6253\u8868\uff0c\u7ed3\u679c\u526a\u679d\u5199\u9519\u767d\u4e22 $80$\uff0c\u60b2\u3002\n\n------------\n\u9ad8\u7cbe\u9898\u600e\u4e48\u80fd\u6ca1\u6709 `python` \u9898\u89e3\u5462\uff01\n\n\u5565\uff1f\u4f60\u8bf4\u8fd9\u9898 `C++` \u90fd\u5f97\u53d6\u5bf9\u6570\u624d\u80fd\u5361\u8fc7\u53bb\uff1f\n\n\u54b3\u54b3\uff0c\u5176\u5b9e\u8fd9\u7bc7\u9898\u89e3\u8bb2\u7684\u4e0d\u662f `python`\uff0c\u800c\u662f\u4e00\u4e2a\u5f88\u5f3a\u529b\u7684\u526a\u679d\u3002\n\n\u66b4\u641c\u7684\u601d\u8def\u5e94\u8be5\u662f\u4e0d\u96be\u60f3\u5230\u7684\u3002~~\u56e0\u4e3a\u6211\u4eec\u4eca\u5929\u6a21\u62df\u8d5b\u662f\u4e09\u9053\u641c\u7d22\u9898\u3002~~\n\n\u6839\u636e\u552f\u4e00\u5206\u89e3\u5b9a\u7406\uff0c\u5982\u679c $m=\\prod\\limits_{i=1}^pp_i^{t_i}$\uff0c$p_i$ \u4e3a\u8d28\u6570\uff0c\u90a3\u4e48 $m$ \u6709 $\\prod\\limits_{i=1}^p(t_i+1)$ \u4e2a\u56e0\u5b50\u3002\n\n\u5bf9\u5e94\u5230\u672c\u9898\uff0c\u6bcf\u4e00\u4e2a $t_i+1$ \u5c31\u662f $n$ \u7684\u4e00\u4e2a\u56e0\u5b50\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e $n$ \u7684\u6bcf\u4e00\u79cd\u5206\u89e3\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u51cf\u53bb\u4e00\u4f5c\u4e3a\u4e0d\u540c\u8d28\u6570\u7684\u6307\u6570\uff0c\u4e58\u8d77\u6765\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u7136\u540e\u6211\u4eec\u6765\u526a\u679d\u3002\n\n\u7528\u54ea\u51e0\u4e2a\u8d28\u6570\u5462\uff1f\u5f88\u663e\u7136\uff0c\u80af\u5b9a\u662f\u6700\u5c0f\u7684\u90a3\u51e0\u4e2a\u3002\n\n\u540c\u65f6\u56e0\u4e3a\u5373\u4f7f\u5168\u5206\u6210\u4e8c\uff0c\u56e0\u5b50\u4e5f\u4e0d\u4f1a\u8d85\u8fc7 $17$ \u4e2a\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u63d0\u524d\u7b97\u597d\u524d\u591a\u5c11\u4e2a\u8d28\u6570\u3002\n\n\u90a3\u6211\u4eec\u641c\u7d22\u7684\u65f6\u5019\u53ef\u4ee5\u8bb0\u4e00\u4e0b\u5f53\u524d\u7528\u7684\u662f\u54ea\u4e2a\u8d28\u6570\u3002\n\n\u540c\u65f6\uff0c\u5982\u679c\u6211\u4eec\u6709\u540c\u4e00\u79cd\u5206\u89e3\u65b9\u5f0f\uff0c\u6211\u4eec\u628a\u54ea\u4e2a\u6570\u7ed9\u54ea\u4e2a\u8d28\u6570\u5462\uff1f\u80af\u5b9a\u662f\u628a\u5927\u6570\u7ed9\u5c0f\u8d28\u6570\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u518d\u8bb0\u4e00\u4e0b\u4ee5\u524d\u7528\u8fc7\u7684\u6700\u5c0f\u6570\uff0c\u7136\u540e\u4ee5\u540e\u518d\u62c6\u5c31\u53ea\u679a\u6bd4\u5b83\u5c0f\u7684\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u7528 `python`\uff0c\u5e76\u4e14\u4e0d\u7528\u53d6\u5bf9\u6570\u5c31\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u5566\uff01\n\n\u5982\u679c\u8fd8\u4e0d\u6e05\u695a\u7684\u8bdd\uff0c\u770b\uff08\u8d85\u77ed\uff09\u4ee3\u7801\u5427\uff1a\n```\nprimes=(2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61)\ndef dfs(dep,x,mm):\n    if x==1:\n        return 1\n    ans=-1\n    for i in range(2,mm+1):\n        if x%i==0:\n            if ans<0:\n                ans=(primes[dep]**(i-1))*dfs(dep+1,x//i,i)\n            else:\n                ans=min(ans,(primes[dep]**(i-1))*dfs(dep+1,x//i,i))\n    return ans\nn=int(input())\nprint(dfs(0,n,n))\n```\n",
        "postTime": 1579605815,
        "uid": 174045,
        "name": "FZzzz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1128 \u3010[HNOI2001]\u6c42\u6b63\u6574\u6570\u3011"
    },
    {
        "content": "\u6839\u636e\u552f\u4e00\u5206\u89e3\u5b9a\u7406 $m=p_1^{a_1}\\times p_2^{a_2} \\times ... \\times p_k^{a_k}$.\n\n\u90a3\u4e48 $m$ \u7684\u7ea6\u6570\u4e2a\u6570\u5c31\u4e3a $(a_1+1)(a_2+1)...(a_k+1)$.\n\n\u5e76\u4e14\u89c2\u5bdf\u6570\u636e\u8303\u56f4, $n \\le 5 \\times 10^4$.\n\n\u90a3\u4e48\u53ef\u4ee5\u5f97\u51fa $k \\le 16$ ,\u56e0\u4e3a $2^{16} \\ge 5 \\times 10^4$.\n\n\u6240\u4ee5\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u641c\u7d22\u679a\u4e3e\u524d16\u4e2a\u8d28\u6570\u7684\u5e42\u6b21\u65b9 $a$ \u5c31\u884c\u4e86.\n\n\u4f46\u662f\u7531\u4e8e\u7b54\u6848\u53ef\u80fd\u5f88\u5927,\u6240\u4ee5\u8981\u7528\u9ad8\u7cbe,\u4f46\u5982\u679c\u6bcf\u4e00\u6b21\u66f4\u65b0\u7b54\u6848\u90fd\u7528\u4e00\u6b21\u9ad8\u7cbe,\u5f88\u660e\u663e\u4f1a\u8d85\u65f6.\n\n\u6839\u636e~~\u5c0f\u5b66\u77e5\u8bc6~~ $\\lg(x\\times y)=\\lg{x}+\\lg{y},lg{x^y}=y\\times \\lg{x}$,\u6211\u4eec\u53ef\u4ee5\u5bf9\u7b54\u6848\u53d6\u4e00\u4e2a\u5bf9\u6570,\u5c31\u4e0d\u6015\u7b54\u6848\u5f88\u5927\u4e86\n\n\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u5f00\u59cb\u901a\u8fc7\u641c\u7d22\u6765\u679a\u4e3e $a_i$\u4e86\n\n\u76f4\u63a5\u7206\u641c\u80af\u5b9a\u662f\u4e0d\u884c\u7684,\u6240\u4ee5\u8981\u60f3\u529e\u6cd5\u4f18\u5316\u4e00\u4e0b,\u6211\u4eec\u5728dfs\u7684\u65f6\u5019\u4f20\u5165\u56db\u4e2a\u53c2\u6570\n\n$poi$ \u8868\u793a\u5f53\u524d\u679a\u4e3e\u5230\u7b2c $poi$ \u4e2a\u8d28\u6570, $now$ \u8868\u793a\u5f53\u524d\u7684\u8d28\u56e0\u5b50\u4e2a\u6570, $last$ \u8868\u793a\u4e4b\u524d\u679a\u4e3e\u7684\u5e42\u6b21\u65b9, $temp$ \u8868\u793a\u5f53\u524d\u7b54\u6848\u53d6\u5b8c\u5bf9\u6570\u7684\u7ed3\u679c\n\n\u53ef\u4ee5\u5f97\u5230\u4e24\u4e2a\u660e\u663e\u7684\u526a\u679d\n\n\u6700\u4f18\u6027\u526a\u679d:\u5982\u679c\u5f53\u524d\u7684 $temp$ \u5df2\u7ecf\u5927\u4e8e\u4e4b\u524d\u7684\u6700\u5c0f\u503c,\u76f4\u63a5\u8fd4\u56de\n\n\u53ef\u884c\u6027\u526a\u679d:\u5728\u679a\u4e3e\u5e42\u6b21\u65b9 $i$ \u65f6, \u5982\u679c $(i+1) \\times now$\u4e0d\u662f$n$\u7684\u500d\u6570,\u820d\u6389\u8fd9\u79cd\u60c5\u51b5\n\n\u5e76\u4e14\u5728\u679a\u4e3e\u7684\u65f6\u5019,\u6211\u4eec\u9700\u8981\u4ece $last$ \u5f00\u59cb,\u56e0\u4e3a\u679a\u4e3e\u51fa\u6765\u7684 $a_i$ \u4e00\u5b9a\u65f6\u5355\u8c03\u4e0d\u4e0a\u5347\u7684,\u5426\u5219\u7b54\u6848\u4e00\u5b9a\u4e0d\u662f\u6700\u4f18,\u56e0\u4e3a\u6211\u4eec\u59cb\u7ec8\u53ef\u4ee5\u4ea4\u6362\u4efb\u610f\u4e24\u4e2a $a_i$ \u4f7f\u7b54\u6848\u66f4\u5c0f\n\n\u4ee3\u7801\n```\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\nusing namespace std;\ntypedef long long ll;\n\nint prime[16] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53};\nint rec[16], a[16], n;\ndouble recv = 1e13, val[16];\n\nstruct num\n{\n    ll data[10005];\n    num operator * (const int b) const\n    {\n        num c;\n        memcpy(c.data, data, sizeof(data));\n        for (int i = 1; i <= c.data[0]; i++)\n            c.data[i] *= b;\n        for (int i = 1; i <= c.data[0]; i++)\n        {\n            if (c.data[i] >= 10000)\n            {\n                c.data[i + 1] += c.data[i] / 10000;\n                c.data[i] %= 10000;\n            }            \n        }\n        ll &h = c.data[0];\n        while (c.data[h + 1] > 0)\n        {\n            h++;\n            c.data[h + 1] += c.data[h] / 10000;\n            c.data[h] %= 10000;\n        }\n        return c;\n    }\n    void print()\n    {\n        printf(\"%lld\", data[data[0]]);\n        for (int i = data[0] - 1; i >= 1; i--)\n        {\n            if (data[i] <= 9)\n                printf(\"000\");\n            else if (data[i] <= 99)\n                printf(\"00\");\n            else if (data[i] <= 999)\n                printf(\"0\");\n            printf(\"%lld\", data[i]);           \n        }\n \n    }\n} ans;//\u9ad8\u7cbe\u4e58\n\nvoid dfs(int poi, int now, int last, double temp)\n{\n    if (poi == 16 || temp > recv || n % now)\n        return;\n    if (now == n)\n    {\n        if (temp < recv)\n        {\n            recv = temp;\n            memcpy(a, rec, sizeof(rec));\n        }\n        return;\n    }\n    double t = val[poi];\n    int k = n / now;\n    for (int i = min(k - 1, last); i >= 0; --i)\n    {\n        rec[poi] = i;\n        dfs(poi + 1, now * (i + 1), i, temp + i * t);\n    }\n    rec[poi] = 0;\n}\n\nint main()\n{\n    scanf(\"%d\", &n);\n    for (int i = 0; i < 16; i++)\n        val[i] = log(prime[i]);\n    dfs(0, 1, n - 1, 0);\n    ans.data[0] = ans.data[1] = 1;\n    for (int i = 0; i < 16; i++)\n        while (a[i]--)\n            ans = ans * prime[i];\n    ans.print();\n}\n\n\n```",
        "postTime": 1614333731,
        "uid": 277863,
        "name": "BzhH",
        "ccfLevel": 6,
        "title": "P1128 [HNOI2001] \u6c42\u6b63\u6574\u6570"
    },
    {
        "content": "\u4e00\u4e2a150\u884c\u4ee3\u7801\u600e\u4e48\u80fd\u4e0d\u8fc71~50000\u6240\u6709\u70b9\u5462  \n~~\u5176\u5b9e\u80fd\u8fc71~1000000\u7684\u6240\u6709\u70b9\uff08\u53ea\u8981\u9ad8\u7cbe\u5f00\u7684\u591f\u5927\uff09~~\n\n\u6ca1\u9519 \u8fd9\u4efd\u4ee3\u7801\u8fde\u5927\u7d20\u6570\uff0849999\uff09\u90fd\u80fd\u8fc7 ~~\u53cd\u800c\u66f4\u8f7b\u677e~~\n\n\u901f\u5ea6\u4e5f\u662f\u76f8\u5f53\u7684\u5feb\u4e86\n\n------------\n\n\u5f15\u74061\uff1a\u6570$m$(\u5206\u89e3\u8d28\u56e0\u6570:$p_1^{c_1}\\times ...\\times p_n^{c_n}$)\u7684\u7ea6\u6570\u4e2a\u6570\u548c\u4e3a\n\n$(1+c_1)\\times (1+c_2)\\times ...\\times (1+c_n)$\n\n\u5f15\u74062\uff1a$2^{20}>50000$\u6240\u4ee5$\\sum c_i<20$ \u7d20\u6570\u8868\u505a\u523020\u4e2a\u5c31\u591f\u4e86\n\n------------\n\n\u4e0b\u9762\u5c31\u662f\u6211\u795e\u5947\u7684\u89e3\u6cd5\uff1a\n\n\u5206\u89e3$n$\u4e3a $p_1^{c_1}\\times p_2^{c_2}\\times...$\n\n\u521d\u59cb\u5206\u914d\uff1a\u5c06$c_i$\u4e2a$p_i$\u5206\u914d\u7ed9\u6bcf\u4e2a\u7d20\u6570 \u4e14$p_i$\u8d8a\u5927 \u5206\u914d\u7684\u7d20\u6570\u8d8a\u5c0f \u603b\u5171\u5206\u914d$\\sum_{i=1}^n c_i$\u4e2a\n\n\u4f8b\u5982\uff1a\u5f53$n=72=2^3\\times 3^2$\n\n\u5206\u914d$2->3,3->3,5->2,7->2,11->2$(\u524d\u4e00\u9879\u4e3a\u7d20\u6570\uff0c\u540e\u4e00\u9879\u4e3a\u5206\u914d\u7684$p_i$)\n          \n\u4e8c\u6b21\u5206\u914d\uff1a\u4e0a\u9762\u5df2\u7ecf\u5f97\u5230\u4e86\u4e00\u4e2a\u7b54\u6848$m=2^{3-1}\\times3^{3-1}\\times 5^{2-1}\\times7^{2-1}\\times11^{2-1}=13860$ \u7ea6\u6570\u4e3a$72$\u4e2a\n\n\u89e3\u91ca\u4e0a\u8ff0\u5f0f\u5b50\uff1a\u6839\u636e\u5f15\u74061,\u7b97\u7b54\u6848\u65f6\u6bcf\u4e2a\u5206\u914d\u7684$p_i$\u8981\u51cf\u4e00\u518d\u7b97\u6b21\u65b9,\u901a\u8fc7\u5f15\u74061\u53ef\u77e5\u4e0a\u8ff0\u7684$m$\u6709$72$\u4e2a\u7ea6\u6570\n\n$m$\u5374\u8fd8\u4e0d\u662f\u6700\u5c0f  \n\u6211\u4eec\u53d1\u73b0\u7ea6\u6570\u4e2a\u6570\u4e3a$3\\times3\\times 2\\times 2\\times 2$\u53ef\u6362\u4e3a$6\\times2\\times 2\\times 2$  \n\u8fd9\u6837$m=2^{6-1}\\times 3^{2-1}\\times 5^{2-1}\\times 7^{2-1}=10080$  \n\u5224\u65ad\u8fd9\u4e24\u4e2a\u5f0f\u5b50\u5927\u5c0f\u4e5f\u5c31\u662f\u5224\u65ad$2^3$\u4e0e$11$\u7684\u5927\u5c0f\n\n\u8bbe$px_i$\u8868\u793a\u7b2c$i$\u4e2a\u7d20\u6570  \n\u7c7b\u4f3c\u8fd9\u6837 \u5bf9\u4e8e\u6700\u540e\u4e00\u4f4d$n$ \u6211\u4eec\u6bcf\u6b21\u90fd\u641c\u51fa$1->n-1$\u4e2d$px_i^{(p[n]-1)\\times p[i]}$\u7684\u6700\u5c0f\u503c  \n\u82e5\u6bd4$px_n^{p_n-1}$\u5c0f  \n\u5219$p_i*=px_n$,$px_n=0$,$n--$  \n\u7ee7\u7eed\u5faa\u73af  \n\u82e5\u4e0d\u6bd4\u5176\u5c0f  \n\u5219\u8df3\u51fa\u5faa\u73af  \n\u7b54\u6848\u5219\u4e3a:$m=\\prod_{i=1}^n px_i^{p_i-1}$  \n\u5f53\u7136\u8fd8\u8981\u5199\u9ad8\u7cbe\u5ea6  \n\u5177\u4f53\u770b\u4ee3\u7801\n\n*10.15 latex\u4f18\u5316* ~~\u5f53\u65f6\u6211\u600e\u4e48\u8fd9\u4e48\u5f3a\uff0c\u60f3\u51fa\u4e86\u8fd9\u4e48\u795e\u4ed9\u7684\u65b9\u6cd5\uff0c\u8fd8\u8dd1\u5f97\u8fd9\u4e48\u5feb~~\n```c++\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<vector>\n#include<cmath>\n#include<map>\nusing namespace std;\ntypedef long long ll;\nconst int p[21] = {\n  0, 2,  3,  5,  7, 11,\n  13, 17, 19, 23, 29,\n  31, 37, 41, 43, 47,\n  53, 59, 61, 67, 71\n};\nint a[21],px[10000],c[100000];\nll fa[100000]={1},fb[100000]={1},s[100000]={1};\nint n,m=0,cnt=0;\nint h=0,ha=0,hb=0;\nconst int mod=10;\ninline ll qpow(ll a,int b)\n{\n    ll ans=1;\n    for(;b;b>>=1)\n    {\n        if(b&1) ans=ans*a;\n        a=a*a;\n    }\n    return ans;\n}\ninline void resolve(int n)\n{\n    for(int i=2;i*i<=n;i++)\n    {\n        if(n%i==0){\n            px[++cnt]=i;\n            c[cnt]=0;\n            while(n%i==0)\n            {\n                c[cnt]++;\n                n/=i;\n            }\n        }\n    }\n    if(n>1) px[++cnt]=n,c[cnt]=1;\n}\ninline void print(ll *s,int &h)\n{\n    for(int i=h;i>=0;i--)\n        printf(\"%lld\",s[i]);\n    putchar('\\n');\n}\ninline void mul(ll b,ll *s,int &h)\n{\n    for(int i=0;i<=h;i++)\n    {\n        s[i]*=b;\n    }\n    for(int i=0;i<=h;i++)\n    {\n        while(s[i]>=mod)\n        {\n            s[i+1]+=s[i]/mod;\n            s[i]=s[i]%mod;\n            if(i==h)\n                ++h;\n        }\n    }\n}\ninline void spow(ll p,ll a,ll *s,int &h)\n{\n    while(a!=0)\n    {\n        if(p>1e9) break;\n        if(a&1) mul(p,s,h);\n        a>>=1;\n        p*=p;\n    }\n    for(int i=1;i<=a;i++)\n        mul(p,s,h);\n}\ninline bool compare(ll *fa,ll *fb,int ha,int hb)\n{\n    if(ha>hb) return 1;\n    else if(ha<hb) return 0;\n    for(int i=ha;i>=0;i--)\n    {\n        if(fa[i]>fb[i]) return 1;\n        else if(fa[i]<fb[i]) return 0;\n    }\n    return 0;\n}\ninline void reuse(ll *s,int &h)\n{\n    for(int i=0;i<=h;i++)\n    {\n        s[i]=0;\n    }\n    h=0;\n    s[0]=1;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    if(n==1||n==0)\n    {\n        printf(\"%d\\n\",n);\n        return 0;\n    }\n    resolve(n);\n    for(int i=cnt;i>=1;i--)\n    {\n        for(int j=1;j<=c[i];j++)\n            a[++m]=px[i];\n    }\n    while(true)\n    {\n        if(m==1) break;\n        bool cmp=0;\n        int x=m;\n        spow(ll(p[m]),a[m]-1,fb,hb);\n        for(int i=1;i<m;i++)\n        {\n            reuse(fa,ha);\n            spow(ll(p[i]),a[i]*(a[m]-1),fa,ha);\n            if(compare(fb,fa,hb,ha))\n            {\n                reuse(fb,hb);\n                spow(ll(p[i]),a[i]*(a[m]-1),fb,hb);\n                x=i;\n            }\n        }\n        reuse(fa,ha);\n        spow(ll(p[m]),a[m]-1,fa,ha);\n        if(compare(fa,fb,ha,hb)){\n            a[x]*=a[m];\n            a[m]=0;\n            m--;\n            cmp=1;\n        }\n        if(!cmp) break;\n        reuse(fa,ha);\n        reuse(fb,hb);\n    }\n    for(int i=1;i<=m;i++)\n    {\n        //cout<<p[i]<<\"  \"<<a[i]-1<<endl;\n        spow(ll(p[i]),a[i]-1,s,h);\n    }\n    print(s,h);\n    return 0;\n}\n```",
        "postTime": 1552038174,
        "uid": 128523,
        "name": "ZhuMingYang",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1128 \u3010[HNOI2001]\u6c42\u6b63\u6574\u6570\u3011"
    },
    {
        "content": "\u6211\u76f8\u4fe1\u8bb8\u591a\u4eba\u548c\u6211\u4e00\u6837\u521a\u770b\u4e86\u8fd9\u9053\u9898\u4e00\u5b9a\u4f1a\u4e0d\u77e5\u6240\u63aa\uff0c\u63a5\u4e0b\u6765\u5c31\u5206\u6790\u4e00\u4e0b\u3002\n\n\u9898\u76ee\u4e2d\u7ed9\u4e86\u8fd9\u4e2a\u6b63\u6574\u6570\u7684\u56e0\u6570\u4e2a\u6570\uff0c\u5e76\u4e0d\u597d\u5904\u7406\uff0c\u5982\u679c\u662f\u8d28\u56e0\u6570\u5c31\u597d\u5904\u7406\u591a\u4e86\u3002\n\n\u4ecb\u7ecd\u4e00\u4e0b\u7ea6\u6570\u516c\u5f0f\uff1an=\u03a0pri[i]\\*a[i]\uff08n\u662f\u8fd9\u4e2a\u6570\u7684\u56e0\u6570\u4e2a\u6570\uff0cpri\u662f\u8d28\u6570\uff0ca\u662f\u6307\u6570\uff09\u3002\n\n\u6211\u5c31\u4e0d\u8bc1\u660e\u4e86\uff0c\u81ea\u5df1\u767e\u5ea6\u3002\n\n\u6570\u636e\u8303\u56f4\u53ea\u670950000\uff0c\u8ba1\u7b97\u53ef\u5f97\u7ea6\u6570\u4e2a\u6570\u6700\u591a16\u4e2a\uff0c\u5148\u6253\u51fa\u4e00\u5f20\u7d20\u6570\u8868\uff0c\u4ee5\u540e\u7684\u8d28\u6570\u5bf9\u7b54\u6848\u6ca1\u6709\u8d21\u732e\u3002\n\ndfs(x,y,z)\u2014\u2014x\u8868\u793a\u641c\u7d22\u5230\u7684\u6b63\u6574\u6570\uff0cy\u8868\u793ax\u7684\u56e0\u6570\u4e2a\u6570\uff0cz\u8868\u793a\u5df2\u7ecf\u641c\u7d22\u5230\u4e86\u7b2cz\u4e2a\u8d28\u6570\u3002\n\n\u8fd9\u6837\u662f\u4f1a\u8d85\u65f6\u7684\uff0c\u8003\u8651\u526a\u679d\u3002\n\n\u679a\u4e3e\u5f53\u524d\u8d28\u6570\u7684\u6307\u6570i\u65f6\uff0cy%(i+1)==0\uff0c\u90a3\u4e48\u5c31\u662f\u6c42y\u7684\u56e0\u6570\uff0c\u65f6\u95f4\u590d\u6742\u5ea6sqrt(y)\u3002\n\n\u5f53\u524d\u8d28\u6570\u7684\u8d28\u6570\u4e0d\u53ef\u4ee5\u4e3a0\uff0c\u56e0\u4e3a\u662f\u4ece\u5c0f\u5230\u5927\u641c\u7d22\uff0c\u8fd8\u662f\u6bd4\u8f83\u6709\u7528\u7684\u3002\n\n\u53c8\u53d1\u73b0x\u662f\u4f1a\u7206long long\u7684\uff08\u6bd4\u8d5b\u65f6\u7528double\u5361\u7684\u7cbe\u5ea6\uff09\u5982\u679c\u641c\u7d22\u65f6\u52a0\u9ad8\u7cbe\u5ea6\u5c31\u592a\u9ebb\u70e6\u4e86\uff0c\u8003\u8651\u7528\u5bf9\u6570\u3002\n\nlog(n)=\u03a3a[i]\\*log(pri[i])\uff08\u81ea\u5df1\u63a8\u5427\uff0c\u5b57\u6bcd\u4ee3\u8868\u7684\u610f\u4e49\u548c\u4e0a\u9762\u4e00\u6837\uff09\u3002\n\n\u641c\u7d22\u65f6\u4fdd\u5b58\u6307\u6570\uff0c\u6700\u540e\u52a0\u4e00\u4e2a\u9ad8\u7cbe\u5ea6\u5c31\u597d\u4e86\u3002\n\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cfloat>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\nint n,ans[100005],res[21],tmp[21],pri[]={0,2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53};\ndouble mn=DBL_MAX,lg[21];\nvoid print()\n{\n    ans[0]=ans[1]=1;\n    for(int i=1;i<=16;i++)\n    {\n        for(;res[i]>0;res[i]--)\n        {\n            for(int j=1;j<=ans[0];j++)\n                ans[j]*=pri[i];\n            for(int j=1;j<=ans[0];j++)\n                ans[j+1]+=ans[j]/10,ans[j]%=10;\n            if(ans[ans[0]+1]!=0)\n                ans[0]++;\n            while(ans[ans[0]]/10!=0)\n                ans[ans[0]+1]+=ans[ans[0]]/10,ans[ans[0]]%=10,++ans[0];\n        }\n    }\n    for(int i=ans[0];i>=1;i--)\n        printf(\"%d\",ans[i]);\n    printf(\"\\n\");\n}\nvoid dfs(double x,int y,int z)//\u73b0\u5728\u7684\u6570\u662fe^x\uff0c\u8fd8\u5269y\u4e2a\u56e0\u5b50\uff0c\u9009\u5230\u7b2cz\u4e2a\u8d28\u6570 \n{\n    if(x>=mn)\n        return ;\n    if(y==1)\n    {\n        mn=x;\n        memset(res,0,sizeof(res));\n        for(int i=1;i<=z-1;i++)\n            res[i]=tmp[i];\n        return ;\n    }\n    if(z>16)\n        return ;\n    for(int i=0;(i+1)*(i+1)<=y;i++)//\u627ey\u7684\u56e0\u5b50 \n        if(y%(i+1)==0)\n        {\n            if(i!=0)\n            {\n                tmp[z]=i;\n                dfs(x+lg[z]*i,y/(i+1),z+1);\n            }\n            if((i+1)*(i+1)!=y)\n            {\n                tmp[z]=y/(i+1)-1;\n                dfs(x+lg[z]*(y/(i+1)-1),i+1,z+1);\n            }\n        }\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=16;i++)\n        lg[i]=log(pri[i]);\n    dfs(0,n,1);\n    print();\n    return 0;\n}\n```",
        "postTime": 1478407201,
        "uid": 12070,
        "name": "Lynx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1128 \u3010[HNOI2001]\u6c42\u6b63\u6574\u6570\u3011"
    },
    {
        "content": "\u770b\u4e86\u697c\u4e0b\u7684\u9898\u89e3\uff0c\u53d1\u73b0\u4ed6\u7684\u601d\u60f3\u548c\u6211\u4e00\u6837\uff0c\u6240\u4ee5\u4e00\u683790\n\n\u867d\u7136\u5e76\u6ca1\u6709AC\uff0c\u4f46\u6211\u89c9\u5f97\u601d\u60f3\u548c\u5199\u8d77\u6765\u90fd\u6bd4\u6b63\u89e3\u8981\u7b80\u5355\u5f97\u591a\uff0c\u8003\u573a\u4e0a\u8fd9\u4e48\u5199\u4e0d\u5931\u4e3a\u4e00\u79cd\u4f18\u79c0\u7684\u7b56\u7565\uff08\u6bd5\u7adf\u53ea\u5c11\u4e8610\u5206\uff09\n\n\u5148\u8bf4\u4e00\u4e0b\u7b97\u6cd5\u3002\n\n\u8fd9\u5176\u5b9e\u662f\u6c42\u56e0\u6570\u4e2a\u6570\u7684\u4e00\u4e2a\u9006\u8fd0\u7b97\u3002\n\n\u8003\u8651\u6b63\u8fd0\u7b97\uff0c\u7ed9\u4f60\u4e00\u4e2a\u6570\uff0c\u8ba9\u4f60\u6c42\u5b83\u7684\u56e0\u6570\u4e2a\u6570\u3002\n\n\u8fd9\u4e2a\u95ee\u9898\u5f88\u597d\u5c31\u89e3\u51b3\uff0c\u628a\u8fd9\u4e2a\u6570\u8d28\u56e0\u6570\u5206\u89e3\uff0c\u628a\u6bcf\u4e2a\u8d28\u6570\u7684\u6307\u6570\u52a0\u4e00\u7136\u540e\u4e58\u8d77\u6765\u5c31\u662f\u7b54\u6848\u3002\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u6bcf\u4e2a\u8d28\u56e0\u6570\u90fd\u6709\u6307\u6570\u79cd\u53d6\u6cd5\uff0c\u56e0\u6570\u7684\u4e2a\u6570\u5176\u5b9e\u5c31\u662f\u8d28\u56e0\u6570\u7684\u9009\u6cd5\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5\u7528\u6392\u5217\u7ec4\u5408\u7684\u601d\u60f3\u3002\n\n\u4e3a\u4ec0\u4e48\u8981\u52a0\u4e00\uff1f\u56e0\u4e3a\u6bcf\u4e2a\u8d28\u56e0\u6570\u90fd\u53ef\u4ee5\u4e0d\u53d6\uff0c\u4e5f\u5c31\u662f0\u6b21\u5e42\u7684\u60c5\u51b5\u3002\n\n\u90a3\u4e48\u8bf4\u7b54\u6848\u5c31\u662f\u7531\u539f\u6570\u6bcf\u4e2a\u8d28\u56e0\u6570\u6307\u6570\u4e58\u8d77\u6765\u7684\u55bd\n\n\u73b0\u5728\u6765\u770b\u9006\u8fd0\u7b97\n\n\u7ed9\u4f60\u4e00\u4e2a\u56e0\u6570\u4e2a\u6570\uff0c\u8ba9\u4f60\u6c42\u6700\u5c0f\u7684\u539f\u6570\n\n\u4e00\u4e2a\u6bd4\u8f83\u611f\u6027\u7684\u60f3\u6cd5\u5c31\u662f\u628a\u8fd9\u4e2a\u6570\u4e5f\u8d28\u56e0\u6570\u5206\u89e3\uff0c\u5206\u89e3\u51fa\u7684\u6bcf\u4e2a\u8d28\u56e0\u6570\u5c31\u5bf9\u5e94\u539f\u6570\u7684\u4e00\u4e2a\u8d28\u56e0\u5b50\uff0c\u8fd9\u4e2a\u8d28\u56e0\u6570\u7684\u6307\u6570\u5c31\u5bf9\u5e94\u539f\u6570\u53c8\u591a\u5c11\u4e2a\u8d28\u56e0\u5b50\u7684\u6307\u6570\u90fd\u662f\u8fd9\u4e2a\u8d28\u56e0\u6570-1\n\n\u56e0\u4e3a\u8981\u6c42\u6700\u5c0f\u7684\uff0c\u6240\u4ee5\u4e00\u4e2a\u663e\u7136\u7684\u8d2a\u5fc3\u7b56\u7565\u5c31\u662f\u8d8a\u5927\u7684\u8d28\u56e0\u6570\uff08\u4e5f\u5c31\u662f\u539f\u6570\u7684\u67d0\u4e2a\u8d28\u56e0\u5b50\u7684\u6307\u6570\uff09\u5bf9\u5e94\u539f\u6570\u5c3d\u91cf\u5c0f\u7684\u8d28\u56e0\u5b50\uff0c\u7136\u540e\u9488\u5bf9n\u7684\u6bcf\u4e2a\u8d28\u56e0\u6570\u7684\u6307\u6570\uff0c\u5c31\u627e\u73b0\u5728\u6ca1\u9009\u7684\u6700\u5c0f\u7684\u6307\u6570\u4e2a\u6307\u6570\u4e58\u8d77\u6765\uff0c\u8fd9\u6837\u5c31\u4eff\u4f5b\u662f\u8981\u6c42\u7684\u539f\u6570\u4e86\u3002\n\n\u8fd9\u4e5f\u662f\u6211\u7684\u4ee3\u7801\u6240\u4f53\u73b0\u7684\u3002\u4f46\u4e8b\u5b9e\u8bc1\u660e\u8fd9\u4e2a\u8d2a\u5fc3\u4e0d\u5b8c\u5168\u6b63\u786e\uff0c\u4f46\u6b63\u786e\u7684\u6982\u7387\u5f88\u5927\u3002\n\n\u6982\u7387\u5177\u4f53\u591a\u5c11\u6211\u8bc1\u660e\u4e0d\u51fa\u6765\uff0c\u4f46\u53cd\u6b63\u5f88\u5927\uff08\u8981\u4e0d\u600e\u4e4890\u5206\uff09\n\n\u73b0\u5728\u6765\u8bf4\u4e00\u4e0b\u9519\u8bef\u4e4b\u5904\n\n\u7814\u7a76\u8fd9\u4e00\u4e2a\u6570\u636e\uff1an=128\n\n\u6b63\u786e\u7ed3\u679c\u662f83160\uff0c\u800c\u8fd9\u4e2a\u7a0b\u5e8f\u8f93\u51fa\u7684\u5374\u662f510510\uff0c\u5927\u4e86\u4e00\u5927\u5708\n\n\u73b0\u5728\u5206\u6790\u4e00\u4e0b\u539f\u56e0\u3002\n\n128=2^7\n\n83160=2^3\\*3^3\\*5\\*7\\*11, (3+1)\\*(3+1)\\*(1+1)\\*(1+1)\\*(1+1)=128\u6b63\u786e\n\n510510=2\\*3\\*5\\*7\\*11\\*13\\*17,(1+1)\\*(1+1)\\*(1+1)\\*(1+1)\\*(1+1)\\*(1+1)\\*(1+1)=128\u4e5f\u662f\u5408\u6cd5\u89e3\n\n\u4f46\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u8d2a\u5fc3\u6c42\u51fa\u6765\u7684\u4e0d\u662f\u6700\u5c0f\u7684\u5462\uff1f\n\n\u95ee\u9898\u5c31\u51fa\u5728\u5bf9\u4e8en\u5206\u89e3\u51fa\u6765\u7684\u6bcf\u4e00\u4e2a\u8d28\u56e0\u6570\u7684\u6307\u6570\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u7406\u6240\u5f53\u7136\u5730\u7ed9\u6bcf\u4e2a\u6ca1\u53d6\u7684\u8d28\u6570\u4e00\u4e2a1\u7684\u6307\u6570\uff0c\u4f46\u8fd9\u5e76\u4e0d\u4e00\u5b9a\u662f\u6700\u4f18\u7684\n\n\u8fd9\u4e2a\u6570\u636e\u5c31\u4f53\u73b0\u4e86\u51fa\u6765\uff0c\u7ed92\u548c3\u4e00\u4e2a2^2-1\uff0c\u8fd9\u68372\u548c3\u8fd9\u4e24\u4e2a\u5c0f\u8d28\u6570\u5bf9\u4e8en\u7684\u6307\u6570\u8d21\u732e\u5c31\u90fd\u662f2\u4e86\uff0c\u7701\u53bb\u4e86\u540e\u9762\u7684\u66f4\u5927\u768413\u548c17\n\n\u4f46\u662f\u8981\u5728\u539f\u6709\u7684\u8d2a\u5fc3\u91cc\u4f53\u73b0\u51fa\u8fd9\u4e00\u6b65\u5b9e\u5728\u592a\u96be\u4e86\uff0c\u6211\u4ea4\u4e4b\u524d\u5176\u5b9e\u5df2\u7ecf\u53d1\u73b0\u4e86\u8fd9\u4e2a\u7b97\u6cd5\u7684\u9519\u8bef\u4e4b\u5904\uff0c\u4f46\u82e6\u82e6\u601d\u7d22\u4e00\u4e2a\u5c0f\u65f6\u4e5f\u60f3\u51fa\u6765\u600e\u4e48\u5904\u7406\uff0c\u7d22\u6027\u76f4\u63a5\u52a0\u4e2a\u9ad8\u7cbe\u5ea6\u4ea4\u4e0a\u53bb\u8bd5\u8bd5\u770b\uff0c\u6ca1\u60f3\u523090\uff0c\u8981\u4e0d\u662f\u6570\u636e\u7279\u610f\u5361\u5c31AC\u4e86\uff0c\u6240\u4ee5\u4e8b\u5b9e\u8bc1\u660e\uff1a\u4f60\u6c38\u8fdc\u4e0d\u77e5\u9053\u4e00\u4e2a\u9519\u8bef\u7684\u8d2a\u5fc3\u80fd\u62ff\u591a\u5c11\u5206\n\n\u9519\u8bef\u7684\u8d2a\u5fc3\u672c\u8d28\u5c31\u662f\u4e00\u79cd\u6982\u7387\u7b97\u6cd5\uff0c\u770b\u6765\u8fd9\u4e2a\u8d2a\u5fc3\u6982\u7387\u8fd8\u662f\u86ee\u5927\u7684\n\n\u4e0b\u9762\u8d34\u51fa\u4ee3\u7801\uff08\u9ad8\u7cbe\u5ea6\u8fd9\u4e48\u7f8e\u5999\u7684\u4e1c\u897f\u600e\u4e48\u80fd\u4e0d\u7528\u7ed3\u6784\u4f53\uff09\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<vector>\n#include<iostream>\n#include<cstring>\n#define REP(x,a,b) for (int (x)=(a); (x)<=(b); (x)++)\nnamespace GOU{//\u547d\u540d\u7a7a\u95f4\u662f\u4e2a\u597d\u4e1c\u897f\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u56e0\u4e3a\u4e0estd\u91cc\u7684\u53d8\u91cf\u91cd\u540d\u800c\u610f\u5916\u51fa\u9519\u4e86\n    typedef unsigned long long ll;\n    const int p[16]={0,2,3,5,7,11,13,17,19,23,29,31,37,41,43,47};//\u9884\u5904\u7406\u51fa\u53ef\u80fd\u7528\u5230\u7684\u8d28\u6570\uff0c\u4e5f\u5c31\u662f\u524dlog(n)/log(2)\u4e2a\u8d28\u6570\n    struct Big{//\u9ad8\u7cbe\u5ea6\u7ed3\u6784\u4f53\n        static const int WIDTH=3,BASE=1000;//\u538b\u4f4d\n        std::vector<int>s;\n        Big(){s.clear();}\n        Big(ll x){do{s.push_back(x%BASE);x/=BASE;}while(x);}//\u6784\u9020\u51fd\u6570\n        Big operator * (const Big &b) const{//\u5b9a\u4e49\u4e58\u6cd5\u8fd0\u7b97\uff08\u8fd9\u91cc\u53ea\u7528\u5230\u4e86\u4e58\u6cd5\uff09\n            Big ret; int carry=0;\n            ret.s.resize(s.size()+b.s.size());\n            for (int i=0; i<s.size(); i++)\n                for (int j=0; j<b.s.size(); j++) ret.s[i+j]+=s[i]*b.s[j];\n            for (int i=0; i<ret.s.size(); i++) ret.s[i+1]+=ret.s[i]/BASE,ret.s[i]%=BASE;\n            int pos=ret.s.size()-1;\n            while (ret.s[pos]==0 && pos--) ret.s.pop_back();//\u53bb\u9664\u524d\u5bfc\u96f6\n            return ret;\n        }\n    };\n    std::ostream& operator << (std::ostream &out, const Big x){//\u5b9a\u4e49\u8f93\u51fa\u6d41\uff0c\u65b9\u4fbf\u8f93\u51fa\n        out<<x.s.back();\n        for (int i=x.s.size()-2; i>=0; i--){\n            char buf[10]; int len;\n            sprintf(buf,\"%03d\",x.s[i]);\n            len=strlen(buf);\n            for (int i=0; i<len; i++) out<<buf[i];\n        }\n        return out;\n    }\n    int n,cnt,tot,prime[10],index[10]; Big ans=1;\n    Big FastPower(Big base, int index){//\u9ad8\u7cbe\u5ea6\u6574\u6570\u7684\u5feb\u901f\u5e42\n        Big ret=1;\n        while (index){\n            if (index&1) ret=ret*base;\n            index>>=1; base=base*base;\n        }\n        return ret;\n    }\n    void resolve(int x){//\u8d28\u56e0\u6570\u5206\u89e3\n        int limit=ceil(sqrt(double(x)));\n        REP(i,2,limit){//\u8d28\u56e0\u6570\u5206\u89e3\u7b97\u6cd5\uff08\u4ee5\u524d\u4ee5\u4e3a\u8fd8\u5fc5\u987b\u7b5b\u7d20\u6570\uff0c\u540e\u6765\u53d1\u73b0\u4e0d\u7b5b\u7d20\u6570\u6b63\u786e\u6027\u4e5f\u6709\u4fdd\u969c\uff09\n            if (x%i==0) prime[++cnt]=i;\n            while (x%i==0) index[cnt]++,x/=i,tot++;\n        }\n        if (x!=1) prime[++cnt]=x,index[cnt]=1,tot++;//\u7279\u5224\u90a3\u4e2a\u5927\u4e8esqrt(n)\u7684\u8d28\u6570\n    }\n    void process(){//\u4e3b\u7a0b\u5e8f\n        scanf(\"%d\",&n);\n        resolve(n); int cur=1;\n        for (int i=cnt; i>0; i--){//\u8ba1\u7b97\u7b54\u6848\n            for (int j=1; j<=index[i]; j++){\n                ans=ans*FastPower(Big(p[cur]),prime[i]-1);\n                cur++;\n            }\n        }\n        std::cout<<ans<<std::endl;//\u8f93\u51fa\uff08\u5b9a\u4e49\u4e86\u8f93\u51fa\u6d41\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5cout\uff09\n    }\n}\nint main(){\n    GOU::process();//\u8c03\u7528\u4e3b\u7a0b\u5e8f\n    return 0;\n}\n\u6700\u540e\u8bf4\u4e00\u53e5\uff0c\u8981AC\u5927\u6982\u8981\u7528DFS\uff0c\u53cd\u6b63\u6211\u8fd8\u6ca1\u60f3\u5230\u5bf9\u4e8e\u8fd9\u4e2a\u8d2a\u5fc3\u7684\u6539\u8fdb\u3002\u8981\u5404\u4f4d\u6709\u60f3\u5230\u7684\u8bf7\u79c1\u4fe1\u6211\uff0c\u611f\u6fc0\u4e0d\u5c3d\u3002\n```",
        "postTime": 1510025800,
        "uid": 24548,
        "name": "\u5929\u4e0b\u7b2c\u4e00\u5251\u5ba2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1128 \u3010[HNOI2001]\u6c42\u6b63\u6574\u6570\u3011"
    },
    {
        "content": "```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nll n,ans=1e16+1024;\nll p[30]={0,2,3,5,7,11,13,17,19,23,29,31,37,41,43,47};\nvoid dfs(ll now_res,ll now_pos,ll now_ynum,ll last)\n{//\u73b0\u5728\u7684\u6570\uff0c\u73b0\u5728\u7b2c\u51e0\u4e2a\u7d20\u6570\uff0c\u73b0\u5728\u4e00\u5171\u7ea6\u6570\u4e2a\u6570\uff0c\u4e0a\u4e00\u4e2a\u6307\u6570\n\tif(now_res>=ans||now_pos>15) return ;\n\tif(now_ynum==n)\n\t{\n\t\tans=now_res;\n\t\treturn ;\n\t}\n\tll i=now_res,j=0;\n\twhile(j<last)//\u73b0\u5728\u7b2c\u51e0\u4e2a\u7d20\u6570\u7684\u6307\u6570\n\t{\n\t\tj++;\n\t\tif(i*p[now_pos]>ans) return ;\n\t\tll nxt_ynum=now_ynum*(j+1); i*=p[now_pos];\n\t\tif(i<=ans) dfs(i,now_pos+1,nxt_ynum,j);\n\t }\n}\n/*\u6211\u6765\u53d1\u4e00\u4e2a\u6ca1\u6709\u9ad8\u7cbe\u7684\u4ee3\u7801~~~\uff08\u6709\u8c01\u6539\u6210\u9ad8\u7cbe\uff0c\u611f\u6fc0\u4e0d\u5c3d\uff09\n\u5f53\u7136\uff0c\u7ed3\u679c\u53ea\u670950\u5206\uff0c\u4e0d\u8fc7\uff0c\u8fd9\u4e2a\u6211\u60f3\u5e94\u8be5\u5f88\u597d\u7406\u89e3\n\u7531\u9898\u76ee\uff0c\u6211\u4eec\u77e5\u9053\u8981\u7ec4\u6210 n \u4e2a\u7ea6\u6570\uff0c\u90a3\u6211\u4eec\u76f4\u63a5\u641c\u7d22\u7ea6\u6570\u4e2a\u6570\u5c31\u597d\u4e86\n\u987a\u4fbf\uff0c\u6211\u4e5f\u89e3\u91ca\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u67d0\u4e2a\u6570\u7684\u7ea6\u6570\u4e2a\u6570\u662f\u7ec4\u6210\u5176\u7684\u7d20\u6570\u7684\uff08\u5e42+1\uff09\u4e4b\u79ef\n\u6211\u4eec\u77e5\u9053\u6bcf\u4e00\u4e2a\u6570\u4e00\u5b9a\u662f\u7531\u67d0\u4e9b\u7d20\u6570\u7684\u5e42\u6b21\u7ec4\u6210\u7684\uff0c\u8fd9\u4e2a\u60f3\u4e00\u4e0b\u5c31\u77e5\u9053\u4e86\uff0c\n\uff08\u4e00\u4e2a\u6570\u4e0d\u662f\u5408\u6570\uff0c\u5c31\u662f\u7d20\u6570\u561b\uff0c\u5408\u6570\u4e0d\u5c31\u662f\u7531\u7d20\u6570\u7ec4\u6210\u7684\u554a\uff09\uff1b\n\u7136\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053\uff0c\u6bcf\u4e2a\u7d20\u6570\u4f1a\u6709k[i]\u7684\u5e42\n\u540c\u65f6\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u6bcf\u4e24\u4e2a\u7d20\u6570\u76f8\u4e58\u5f97\u5230\u7684\u7ed3\u679c\u662f\u4e0d\u540c\u7684\uff0c\u4e8e\u662f\u6bcf\u4e2a\u7d20\u6570\u5c31\u4f1a\u6709\u5176\uff08\u5e42+1\uff09\u6b21\u88ab\u9009\u4e2d\u7684\u53ef\u80fd\uff0c\u4e3a\u5565\uff1f\n\u56e0\u4e3a\u8fd8\u53ef\u4ee5\u9009\u8be5\u7d20\u6570\u7684 0 \u6b21\u65b9~~~\uff01\n\u4e8e\u662f\n1\uff1a\u67d0\u4e2a\u6570\u7684\u603b\u5171\u7ea6\u6570\u4e2a\u6570\u5c31\u662f\u7ec4\u6210\u5b83\u7684\u7d20\u6570\u7684\uff08\u5e42+1\uff09\u6b21\u4e4b\u79ef\n\u73b0\u5728\u7b2c\u4e8c\u4e2a\n2\uff1a\u9898\u76ee\u8981\u6c42\u7ec4\u6210\u7684\u6570\u6700\u5c0f\uff0c\u90a3\u80af\u5b9a\u662f\u8ba9\u5c0f\u7684\u7d20\u6570 \u5e42 \u66f4\u5927\u4e00\u70b9\uff0c\u4f46\u662f\u4e5f\u4e0d\u6392\u9664\u5927\u7684\u7d20\u6570\u53d6\u4e00\u70b9\uff0c\u4f46\u662f\u5fc5\u987b\u8981\u5c0f\u4e0e\u4e0a\u4e00\u4e2a\u7d20\u6570\u7684 \u5e42 \n\u6709\u4e86\u8fd9\u4e2a\uff0c\u76f4\u63a5\u770b\u4ee3\u7801\u5c31\u597d\u4e86\n*/\nint main()\n{\n\tscanf(\"%lld\",&n);\n\tdfs(1,1,1,23);\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1531877089,
        "uid": 70862,
        "name": "\u98ce\u706b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1128 \u3010[HNOI2001]\u6c42\u6b63\u6574\u6570\u3011"
    }
]