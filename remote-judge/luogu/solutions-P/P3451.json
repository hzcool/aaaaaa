[
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u81ea\u4ece\u6539\u4e86\u7a7a\u95f4\u9650\u5236\u4ee5\u540e\u5c31\u6ca1\u51e0\u4e2a\u4eba\u81ea\u5df1\u5199\u7a0b\u5e8f\u8fc7\u6389\u7684\uff0c\u6700\u8fd1AC\u4e5f\u51e0\u4e4e\u90fd\u662f\u6284\u7684POI\u7684\u5b98\u65b9\u9898\u89e3\u3002\u5c31\u8fde\u4e24\u4f4d\u697c\u4e3b\u7684\u4ee3\u7801\u5728\u65b0\u7684\u7a7a\u95f4\uff0864MB\uff09\u4e4b\u4e0b\u4e5f\u662f\u65e0\u6cd5\u901a\u8fc7\u7684\u3002\n\n\u6839\u636e\u4f20\u7edf\u72b6\u538bDP,\u591a\u6570\u4eba\u90fd\u9009\u62e9\u7528\u4e00\u4e2a\u6570\u7ec4\u76f4\u63a5\u8bb0\u5f55\u6240\u6709\u72b6\u6001\u4e0b\u7684\u6700\u4f18\u89e3\u3002\u4f46\u65e0\u8bba\u600e\u4e48\u538b\u7f29\u90fd\u662f\u4e0d\u4f1a\u4f4e\u4e8e$1048576 \\times 20 \\times 4B=80MB$\uff0c\u4e00\u5b9a\u662f\u4f1a\u7206\u7a7a\u95f4\u7684\u3002\n\n\u4e8e\u662f\u6709\u5f88\u591a\u4eba\u89c9\u5f97\u6b64\u9898\u4e0d\u53ef\u505a\uff0c\u6216\u8005\u5c31\u6307\u8d23\u7ba1\u7406\u5458\u3002\u7ba1\u7406\u5458\u4f9d\u7167\u539f\u9898\u8bbe\u5b9a\u7a7a\u95f4\u9650\u5236\u53ef\u4ee5\u7406\u89e3\uff0c\u4f46\u4e5f\u6ca1\u6709\u7ed9\u51fa\u4e0d\u7206\u7a7a\u95f4\u5c31AC\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\n\u5b9e\u9645\u4e0a\u8fd9\u4e2a\u95ee\u9898\u662f\u6709\u89e3\u51b3\u65b9\u6848\u7684\uff0c\u800c\u4e14\u8fd9\u4e2a\u65b9\u6848\u4e0d\u9700\u8981\u4ec0\u4e48\u5947\u6280\u6deb\u5de7\uff0c\u7528\u4e00\u4e2a$01$\u80cc\u5305\u4e2d\u5e38\u7528\u7684\u6280\u5de7\u5c31\u591f\u4e86\u3002\u8fd9\u4e5f\u662f\u51e0\u4e4e\u6240\u6709DP\u4e2d\u60ef\u7528\u7684\u8282\u7701\u7a7a\u95f4\u7684\u6280\u5de7\u3002\n\n**\u6eda\u52a8\u6570\u7ec4\u3002**\n\n\u6eda\u52a8\u6570\u7ec4\u5e94\u7528\u7684\u6761\u4ef6\u662fDP\u9636\u6bb5\u4e4b\u95f4\u4e4b\u95f4\u5b58\u5728\u62d3\u6251\u5e8f\u3002\u66f4\u76f4\u767d\u5730\u8bf4\u5c31\u662f$DAG$\u4e0a\u5206\u5c42\u3002\n\u6240\u6709\u8f6c\u79fb\u53ea\u4ece\u4e0a\u4e00\u5c42\u8f6c\u79fb\u5230\u4e0b\u4e00\u5c42\uff0c\u4e0d\u4f1a\u8de8\u5c42\u8f6c\u79fb\uff0c\u4e5f\u4e0d\u4f1a\u5c42\u5185\u8f6c\u79fb\u3002\n\n\u653e\u5230\u539f\u95ee\u9898\u4e2d\uff0c\u8fd9\u4e2a\u6027\u8d28\u663e\u7136\u662f\u6ee1\u8db3\u7684\uff0c\u5047\u5982$k$\u7684\u4e8c\u8fdb\u5236\u4e2d\u6709$x$\u4e2a$1$,\u90a3$f[u][k]$\u80fd\u8f6c\u79fb\u5230\u7684\u6240\u6709\u72b6\u6001$f[v][k']$\u4e2d,$k'$\u7684\u4e8c\u8fdb\u5236\u5185\u4e00\u5b9a\u6709\u4e14\u4ec5\u6709$x+1$\u4e2a$1$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5bf9\u6240\u6709\u7684\u4e8c\u8fdb\u5236\u6570\u505a$1$\u7684\u6570\u91cf\u7684\u5206\u7ec4\uff0c\u4e8c\u8fdb\u5236\u4e2d\u542b\u76f8\u540c\u6570\u76ee$1$\u7684\u5206\u5230\u540c\u4e00\u7ec4\u3002\u7136\u540e\u6bcf\u6b21\u4ece\u4e0a\u4e00\u7ec4\u8f6c\u79fb\u5230\u4e0b\u4e00\u7ec4\u3002\u63a5\u7740\u5c31\u662f\u6eda\u52a8\u6570\u7ec4\u7684\u5957\u8def\uff0c\u628a\u4e0a\u4e00\u5c42\u817e\u51fa\u6765\u66f4\u65b0\u66f4\u4e0b\u9762\u4e00\u7ec4\u5373\u53ef\u3002\u53ef\u4ee5\u6570\u5b66\u7684\u7b97\u51fa\u4e00\u7ec4\u4e2d\u7684\u4e8c\u8fdb\u5236\u6570\u4e2a\u6570\u6700\u5927\u4e3a$$C_{20}^{10} =184756$$\n\n\u8fd9\u6837\u6211\u4eec\u53ea\u8981\u5f00$f[maxK][C_{20}^{10}][2]$\u7684\u6570\u7ec4\u5c31\u591f\u4e86\u3002\n\u5b83\u7684\u5927\u5c0f\u662f$20 \\times 184756 \\times 2 \\times 4B < 30MB$\u8fd9\u6837\u5c31\u53ef\u4ee5\u901a\u8fc7\n\u4e86\u3002\n\n```\n#include<iostream>\n#include<cstdio>\n#include<set>\n#include<queue>\n#define pr make_pair\n#define fr first\n#define sc second\n#define FOR(i,a,b) for(int i=a;i<=b;i++)\n#define REP(u) for(int i=hd[u],v=e[i].v,w=e[i].w;i;i=e[i].n,v=e[i].v,w=e[i].w)\n#define REQ(u) for(int i=Hd[u],v=E[i].v,w=E[i].w;i;i=E[i].n,v=E[i].v,w=E[i].w)\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> p;\nconst int N=50050,M=1050000,INF=1000010000,TK=23,S=190000;\nstruct edge{int n,v,w;}e[M],E[M];\nint n,m,K,u,v,w,fl,Fl,to[TK],id[M];\nint fa[N],hd[N],Hd[N],g[N],d[TK][N],f[TK][S][2],ans=INF;\nset< p >h;\nqueue< p >q;\nvoid add(int u,int v,int w){e[++fl]=(edge){hd[u],v,w};hd[u]=fl;}\nvoid Add(int u,int v,int w){E[++Fl]=(edge){Hd[u],v,w};Hd[u]=Fl;}\nvoid dijkstra(int x){\n\tFOR(i,1,n) d[x][i]=INF;\n\td[x][x]=0;\n\th.insert(p(0,x));\n\twhile(h.size()){\n\t\tu=h.begin()->second;h.erase(h.begin());\n\t\tREP(u)if(d[x][u]+w<d[x][v]){\n\t\t\tif(d[x][v]<INF) h.erase(p(d[x][v],v));\n\t\t\td[x][v]=d[x][u]+w;\n\t\t\th.insert(p(d[x][v],v));\n\t\t}\n\t}\n}\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&K);K++;\n\tFOR(i,1,m) scanf(\"%d%d%d\",&u,&v,&w),add(u,v,w),add(v,u,w);\n\tscanf(\"%d\",&m);\n\tFOR(i,1,m) scanf(\"%d%d\",&u,&v),g[v]|=(1<<u-2);\n\tFOR(i,1,K) dijkstra(i);\n\tFOR(i,2,K) g[i]|=(1<<i-2);\n\tif(K==1) {printf(\"%d\",d[1][n]);return 0;}\n\tFOR(k,1,(1<<K-1)-1){int cn,tm;for(cn=0,tm=k;tm;tm-=(tm&-tm),cn++);Add(cn,k,0);id[k]=++to[cn];}\n\tFOR(j,1,K-1)REQ(j){\n\t\tFOR(u,2,K) f[u][id[v]][j&1]=INF;\n\t\tFOR(u,2,K)if((g[u]|v)==v){\n\t\t\tif(v-(v&-v)>0){\n\t\t\t\tFOR(x,2,K)if((1<<x-2&v) && x!=u)\n\t\t\t\t\tf[u][id[v]][j&1]=min(f[u][id[v]][j&1],f[x][id[v^(1<<u-2)]][j&1^1]+d[x][u]);\n\t\t\t}\n\t\t\telse f[u][id[v]][j&1]=d[1][u];\n\t\t\tif(v==(1<<K-1)-1) ans=min(ans,f[u][id[v]][j&1]+d[u][n]);\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n}/*\n8 15 4\n1 2 3\n1 3 4\n1 4 4\n1 6 2\n1 7 3\n2 3 6\n2 4 2\n2 5 2\n3 4 3\n3 6 3\n3 8 6\n4 5 2\n4 8 6\n5 7 4\n5 8 6\n3\n2 3\n3 4\n3 5\n*/\n```",
        "postTime": 1539931873,
        "uid": 62267,
        "name": "BJpers2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3451 \u3010[POI2007]ATR-Tourist Attractions\u3011"
    },
    {
        "content": "\u672c\u9898\u4e2d\u6587\u9898\u610f\u7565\u6709\u4e0d\u6e05\uff0c \u518d\u770b\u4e86\u82f1\u6587\u4e4b\u540e\u6211\u624d\u77e5\u9053\uff0c \u4f60\u9700\u8981\u5728 $2-k+1$ \u8fd9\u51e0\u4e2a\u57ce\u5e02**\u505c\u7559**\uff0c \u5728\u8fd9\u4e4b\u524d\u53ef\u4ee5\u968f\u610f**\u7ecf\u8fc7**\uff0c \u9650\u5236\u6761\u4ef6\u662f\u5bf9\u4e8e**\u505c\u7559**\u800c\u8a00\u7684\u3002\n\n\u5230\u8fd9\u91cc\uff0c \u5c31\u5bb9\u6613\u60f3\u5230\u72b6\u538b\u3002 \u4ee4 $f(s,i)$ \u8868\u793a\u73b0\u5728\u5df2\u7ecf\u5728 $s$ \u96c6\u5408\u4e2d\u7684\u57ce\u5e02**\u505c\u7559**\uff0c \u73b0\u5728\u5728\u7b2c $i$ \u4e2a\u57ce\u5e02\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u3002 \u4ee4 $u_i$ \u8868\u793a\u7b2c $i$ \u4e2a\u57ce\u5e02\u7684\u524d\u7f6e\u96c6\u5408\u3002 \u90a3\u4e48 $f(s,i)$ \u6210\u7acb\u7684\u6761\u4ef6\u662f $u_i\\subset s$\uff0c \u6709\u8f6c\u79fb\u65b9\u7a0b\uff1a\n$$\nf(s,i)=\\min_{j\\in s-\\{i\\}}\\{f(s-\\{i\\},j)+dis_{j,i} \\}\n$$\n\n\u5176\u4e2d\u8fb9\u754c\u6761\u4ef6\u4e3a $f(\\{i\\},i)=dis_{1,i}, ~u_i=\\varnothing$\u3002\n\n\u5bb9\u6613\u60f3\u5230\u5148\u7528\u5806\u4f18 $\\texttt{dijkstra}$ \u8dd1 $k$ \u4e2a\u70b9\u7684\u6700\u77ed\u8def\uff0c \u7b97\u51fa\u4e24\u4e24\u4e4b\u95f4\u7684 $dis$\uff0c \u5c31\u53ef\u4ee5\u5f00\u59cb\u8f6c\u79fb\u4e86\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u8fd9\u6837\u8981\u7206\u7a7a\u95f4\uff0c \u5bb9\u6613\u60f3\u5230\u6eda\u52a8\u6570\u7ec4\u3002 \u89c2\u5bdf\u8f6c\u79fb\u65b9\u7a0b\uff0c \u53d1\u73b0\u8f6c\u79fb\u96c6\u5408 $s$ \u9700\u8981\u7528\u5230\u7684\u96c6\u5408\u5927\u5c0f\u53ea\u6bd4 $s$ \u5c0f $1$\uff0c \u90a3\u4e48\u53ef\u4ee5\u5148\u5904\u7406\u6bcf\u4e2a\u96c6\u5408\u7684\u5143\u7d20\u4e2a\u6570\uff0c \u628a\u96c6\u5408\u5927\u5c0f\u4f5c\u4e3a\u62d3\u6251\u5e8f\uff0c \u5c31\u53ef\u4ee5\u4f7f\u7528\u6eda\u52a8\u6570\u7ec4\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a $\\Theta(km\\log m+2^kk^2)$\u3002\n\n## Code:\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nconst int N=2e4+5,M=2e5+5;\nint read(){\n\tint ans=0;char c=getchar();\n\twhile(c<'0'||c>'9') c=getchar();\n\twhile('0'<=c&&c<='9') ans=(ans<<1)+(ans<<3)+c-'0',c=getchar();\n\treturn ans;\n}\nstruct node{\n\tint v,w;\n\tbool operator<(const node &b)const{\n\t\treturn w>b.w;\n\t}\n};\nint n,m,k,Q,uset[21];\nint tl[21][21],Map[21],kdis[21][2],sum[(1<<20)+1];\nint f[2][184757][21],cur,pMap[(1<<20)+1];\nvector <int> p[21];\nvector <node> s[N];\npriority_queue <node> q;\nint dis[N];\nbool vis[N];\nvoid dijkstra(int S){\n\tmemset(dis,0x3f,sizeof dis);dis[Map[S]]=0;memset(vis,0,sizeof vis);\n\tq.push({Map[S],0});\n\twhile(!q.empty()){\n\t\tnode x=q.top();q.pop();\n\t\tif(vis[x.v]) continue;\n\t\tvis[x.v]=1;\n\t\tint len=s[x.v].size();\n\t\tfor(int i=0; i<len; i++){\n\t\t\tnode t=s[x.v][i];\n\t\t\tif(!vis[t.v]&&dis[t.v]>dis[x.v]+t.w){\n\t\t\t\tdis[t.v]=dis[x.v]+t.w;\n\t\t\t\tq.push({t.v,dis[t.v]});\n\t\t\t}\n\t\t}\n\t}\n\tkdis[S][0]=dis[1],kdis[S][1]=dis[n];\n\tfor(int i=0; i<k; i++) tl[S][i]=dis[Map[i]];\n}\n\nint main(){\n\tn=read();m=read();k=read();\n\tfor(int i=1; i<=m; i++){\n\t    int u=read(),v=read(),w=read();\n\t    s[u].push_back({v,w});s[v].push_back({u,w});\n\t}\n\tif(k==0){\n\t\tMap[1]=1;\n\t\tdijkstra(1);\n\t\tprintf(\"%d\\n\",dis[n]);\n\t\treturn 0;\n\t}\n\tfor(int i=0; i<k; i++){\n\t\tMap[i]=i+2;\n\t}\n\tfor(int s=1; s<(1<<k); s++) sum[s]=sum[s&(~(s&-s))]+1,p[sum[s]].push_back(s),pMap[s]=p[sum[s]].size()-1;\n\tQ=read();\n\twhile(Q--){\n\t\tint u=read(),v=read();\n\t\tuset[v-2]|=(1<<(u-2));\n\t}\n\tmemset(f,0x3f,sizeof f);\n\tfor(int i=0; i<k; i++){\n\t\tdijkstra(i);if(!uset[i]) f[0][pMap[1<<i]][i]=kdis[i][0];\n\t} \n\tfor(int w=2; w<=k; w++){\n\t\tint len=p[w].size();cur^=1;memset(f[cur],0x3f,sizeof f[cur]);\n\t\tfor(int e=0; e<len; e++){\n\t\t\tint s=p[w][e];\n\t\t\tfor(int i=0; i<k; i++) if((s&(1<<i))&&((uset[i]&(s&(~(1<<i))))==uset[i])){\n\t\t\t\tfor(int j=0; j<k; j++) if(i!=j&&(s&(1<<j))){\n\t\t\t\t\tf[cur][e][i]=min(f[cur][e][i],f[cur^1][pMap[s&(~(1<<i))]][j]+tl[j][i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint ans=0x3f3f3f3f;\n\tfor(int i=0; i<k; i++) ans=min(ans,f[cur][0][i]+kdis[i][1]);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}",
        "postTime": 1638064563,
        "uid": 225370,
        "name": "loverintime",
        "ccfLevel": 8,
        "title": "P3451"
    },
    {
        "content": "#### \u6ce8\uff1a\u5982\u679c\u8fde\u8fd9\u9053\u9898\u66b4\u529b\u72b6\u538b\u7684\u5199\u6cd5\u90fd\u4e0d\u4f1a\uff0c\u63a8\u8350\u5148\u53bb\u5eb7\u9898\u89e3\u533a\u7684\u201c\u9519\u8bef\u201d\u4ee3\u7801\uff08\u5927\u96fe\uff09\n\n> ......\u5199\u5b8c\u72b6\u538b\u4ee5\u540e\u81ea\u7136\u662f\u4f20\u7edf OI \u70b9\u5230\u4e3a\u6b62\uff0c\u4fdd\u7559 SPFA \u628a Dij \u6ce8\u91ca\u6389\uff0c\u6211\u7b11\u4e00\u4e0b\u51b3\u5b9a AC \uff0c\u56e0\u4e3a\u8fd9\u65f6\u95f4\uff0c\u6309\u7167\u4f20\u7edf OI \u7535\u5200\u5582\u7eb8\u4ed6\u5df2\u7ecf\u8f93\u4e86\u3002\u5982\u679c\u7528 Dij \uff0c\u518d\u5f3a\u7684\u6570\u636e\u4e5f\u5361\u4e0d\u6389\u6211\u7684\u65f6\u95f4\u4e86......\u6211\u63d0\u4ea4\u4e0d\u4f18\u5316\u4e86\uff0c\u4ed6\u7a81\u7136\u88ad\u51fb\uff0c\u6765\u5361\u6211\u7a7a\u95f4\uff0c\u554a\uff0c\u6211\u5927\u610f\u4e86\u554a\uff0c\u6ca1\u6709\u5361\u7a7a\u95f4......\u2642\u554a\uff0c\u770b\u6765\u662f\uff0c\u6709 bear \u800c\u6765\uff01\n \n\n$K_{max}=20$ \uff0c\u72b6\u538b\u65e0\u7591\uff0c\u9884\u5904\u7406\u51fa\u8981\u7ecf\u8fc7\u7684\u57ce\u5e02\u7684\u5355\u6e90\u6700\u77ed\u8def\uff08\u7c7b\u4f3c\u4e00\u9053\u53eb\u65b0\u5e74\u597d\u7684\u9898\uff09\uff1b\n\n\u6309\u7167\u4f20\u7edf\u7684\u72b6\u538b DP \uff0c\u72b6\u6001\u5e94\u8bbe\u4e3a $f[k][S]$ \uff1a\u904d\u5386\u96c6\u5408\u4e3a $S$ \u7684\u70b9\u540e\uff08\u4ee5\u4e0b\u7b80\u79f0\u70b9\u96c6\uff09\uff0c\u505c\u5728 $k$ \u70b9\u6240\u8d70\u7684\u6700\u77ed\u8def\u7a0b\uff0c\u56e0\u4e3a\u8d77\u59cb\u57ce\u5e02\u5fc5\u4e3a 1\uff0c\u7ec8\u6b62\u57ce\u5e02\u4e3a n\uff0c\u6545\u8fd9\u4e24\u4e2a\u70b9\u4e0d\u8ba1\u5165\u72b6\u6001\uff0c\u7edf\u8ba1\u7b54\u6848\u65f6\u7279\u522b\u5904\u7406\u5373\u53ef\uff1b\n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u5373\u4fbf\u5982\u6b64\uff0c\u7a7a\u95f4\u4e5f\u4f1a\u70b8\uff08\u5176\u4ed6\u9898\u89e3\u8bf4\u5f97\u5f88\u6e05\u695a\u4e86\uff09\uff0c\u6240\u4ee5\u8003\u8651\u4f18\u5316\uff1b\n\n### \u820d\u53bb\u5197\u4f59\u72b6\u6001\n\n\u8981\u4f18\u5316\u7a7a\u95f4\uff0c\u6700\u597d\u7684\u65b9\u5f0f\u5373\u662f\u820d\u53bb\u5197\u4f59\u72b6\u6001\uff0c\u6bd4\u5982\u6eda\u52a8\u6570\u7ec4\uff0c\u4f46\u662f\u4e00\u822c\u7684\u72b6\u538b DP \u7ebf\u6027\u679a\u4e3e\u70b9\u96c6\uff0c\u800c\u72b6\u6001\u5e76\u4e0d\u7ebf\u6027\u8f6c\u79fb\uff0c\u6545\u65e0\u6cd5\u76f4\u63a5\u6eda\u52a8\uff1b\n\n\u6211\u4eec\u5206\u6790\u4e00\u4e0b\u672c\u9898\u72b6\u6001\u8f6c\u79fb\u7684\u5b9e\u8d28\u4ee5\u4fbf\u4f18\u5316\u3002\u679a\u4e3e\u5230\u4efb\u610f\u70b9\u96c6\u65f6\uff0c\u6211\u4eec\u4ece\u4e2d\u7ee7\u7eed\u679a\u4e3e\u51fa\u4e00\u70b9\uff0c\u7136\u540e\u7528\u5269\u4f59\u70b9\u7ec4\u6210\u7684\u70b9\u96c6\u7684\u7b54\u6848\u6765\u4f18\u5316\u672c\u70b9\u96c6\u7684\u7b54\u6848\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u6b64\u8f6c\u79fb\u72b6\u6001\uff0c**\u70b9\u96c6\u4e2d\u70b9\u7684\u6570\u91cf\uff0c\u5373\u8fd9\u4e2a\u6570\u4e8c\u8fdb\u5236\u4e0b\u4e00\u7684\u4e2a\u6570\uff0c\u662f\u9012\u589e\u7684\uff0c\u4e14\u56fa\u5b9a+1**\uff0c\u6545\u53ef\u4ee5\u7528\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\uff1b\n\n\u6309\u7167\u4f20\u7edf\u72b6\u538b DP \u65e0\u6cd5\u4f7f\u7528\u6eda\u52a8\u6570\u7ec4\u7684\u539f\u56e0\u662f\uff0c\u901a\u8fc7\u7ebf\u6027\u679a\u4e3e\u7684\u70b9\u96c6\uff0c\u65e0\u6cd5\u4fdd\u8bc1\u4e8c\u8fdb\u5236\u4e0b\u4e00\u7684\u6570\u91cf\u5448\u5355\u589e\u3002\u4e3a\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ea\u9700\u8981\u9884\u5904\u7406\u51fa\u7b26\u5408\u6bcf\u4e2a\u70b9\u96c6\u6570\u76ee $num$\uff08$num \\in (0,k]$\uff09\u7684\u6240\u6709\u70b9\u96c6\u5373\u53ef\u3002\u5bf9\u4e8e\u4efb\u4e00 $num$ \uff0c\u5176\u5305\u542b\u7684\u70b9\u96c6\u6570\u4e3a $C{n \\atop k}$\uff0c\u6700\u591a\u4e3a $C{10 \\atop 20}=184756$\uff0c\u7a7a\u95f4\u5b8c\u5168\u53ef\u4ee5\u627f\u53d7\uff1b\n\n### \u7ec6\u8282\n\n- \u9700\u8981\u6309\u987a\u5e8f\u904d\u5386\u70b9\uff0c\u5177\u4f53\u64cd\u4f5c\u4e3a\u9884\u5904\u7406\u51fa\u8d70\u5230\u6bcf\u4e2a\u70b9\u4e4b\u524d\u9700\u8981\u904d\u5386\u7684\u70b9\u96c6\uff0c\u548c\u72b6\u6001\u8f6c\u79fb\u65f6\u7684\u70b9\u96c6\u8fdb\u884c\u4f4d\u8fd0\u7b97\uff08\u4e71\u641e\uff09\u5224\u65ad\u5373\u53ef\uff1b\n\n- \u5982\u679c $k=1$\uff0c\u76f4\u63a5\u8f93\u51fa\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8def\uff1b\n\n- \uff08\u5c3d\u91cf\uff09\u4e0d\u8981\u7528\u5df2\u6b7b\u7684\u7b97\u6cd5\uff08\u9003\n\n\n------------\n> \u8fd9\u4e2a\u51fa\u9898\u4eba\u4e0d\u8bb2\u6b66\u5fb7\uff0c\u6765\uff0c\u9a97\uff01\u6765\uff0c\u5361\u5e38\uff01\u6211\u516d\u5341\u4e5d\u5c81\u7684\u8001OIer\u3002\u8fd9\u597d\u5417\uff1f\u8fd9\u4e0d\u597d\uff01\u6211\u529d\uff0c\u8fd9\u4f4d\u51fa\u9898\u4eba\u8017\u5b50\u5c3e\u6c41\uff0c\u597d\u597d\u53cd\u601d\uff0c\u4ee5\u540e\u4e0d\u8981\u518d\u72af\u8fd9\u6837\u7684\u806a\u660e\uff0c\u5c0f\u806a\u660e\uff0c\u2642\u554a\u2026OI\u8981\u4ee5\u548c\u4e3a\u8d35\uff0c\u8981\u8bb2\u6c61\u7684\uff0c\u4e0d\u8981\u641e\u7a9d\u91cc\u6597\uff0c\u8c22\u8c22\u670b\u53cb\u4eec\uff01\n\n------------\n\n*Talk is cheap, show me the code*\n\n```cpp\n#include<bits/stdc++.h>\n#define re register\nusing namespace std;\n\nconst int K=22;\nconst int N=20005;\nconst int M=200005;\n\ninline int read(){\n\tre int ret=0;\n\tre char c=getchar();\n\twhile(c<'0'||c>'9') c=getchar();\n\twhile(c>='0'&&c<='9'){\n\t\tret=(ret<<1)+(ret<<3)+(c^48);\n\t\tc=getchar();\n\t} return ret;\n}\n\nint n,m,k;\n\nstruct Edge{\n\tint nxt;\n\tint to;\n\tint v;\n} e[M<<1];\n\nint h[N],cnt;\n\ninline void Add(int x,int y,int v){\n\te[++cnt].nxt=h[x];\n\te[cnt].to=y;\n\te[cnt].v=v;\n\th[x]=cnt;\n}\n\nint cond[K];\nint dis[K][N];\n\nbool vis[N];\n\n#define MK(x,y) make_pair((x),(y))\n\ninline void DIJ(int st) {\n    memset(vis,0,sizeof(vis));\n    memset(dis[st],63,sizeof(dis[st]));\n    priority_queue < pair<int,int> > q;\n    dis[st][st]=0; q.push(MK(0,st));\n    while(!q.empty()){\n        re int l=q.top().second; q.pop();\n        if(vis[l]) continue; vis[l]=1;\n        for(re int i=h[l],to,v;i;i=e[i].nxt){\n            to=e[i].to;\n            v=e[i].v;\n            if (dis[st][l]+v<dis[st][to]){\n                dis[st][to]=dis[st][l]+v;\n                q.push(MK(-dis[st][to],to));\n            }\n        }\n    }\n}\n\ninline void Init(){\n\tn=read(); m=read(); k=read()+1;\n\tfor(re int i=1,x,y,v;i<=m;i++){\n\t\tx=read(); y=read(); v=read();\n\t\tAdd(x,y,v); Add(y,x,v);\n\t} re int T=read();\n\tfor(re int i=1,x,y;i<=T;i++){\n\t\tx=read(); y=read();\n\t\tcond[y]|=(1<<(x-2)); //\u5904\u7406\u5230\u8fbe\u4e4b\u524d\u9700\u8981\u904d\u5386\u7684\u70b9\u96c6\n\t}\n\tfor(re int i=2;i<=k;i++) DIJ(i); //\u4e3a\u4e86\u7701\u65f6\u95f4\uff0c1\u548cn\u4e0d\u5fc5\u5904\u7406\n}\n\nstruct K{\n\tint nxt;\n\tint to;\n} R[1<<21];\n\nint h_R[K],cnt_R;\nint sum[K],bl[1<<21];\nint f[2][K][184760];\n\ninline void Add_K(int x,int y){\n\tR[++cnt_R].nxt=h_R[x];\n\tR[cnt_R].to=y;\n\th_R[x]=cnt_R;\n}\n\n#define lowbit(x) ((x)&(-(x)))\n#define For(p) for(re int rg=h_R[(p)],to=R[rg].to;rg;rg=R[rg].nxt,to=R[rg].to)\n//\u904d\u5386\u70b9\u4e2a\u6570\u4e3ap\u7684\u70b9\u96c6\u7684\u96c6\u5408\uff08\u7ed5\uff09\n\ninline void Solve(){\n\tif(k==1){\n\t\tDIJ(1); //\u56e0\u4e3a\u521a\u521a\u6ca1\u5904\u74061\n\t\tprintf(\"%d\",dis[1][n]);\n\t\treturn;\n\t}\n\tfor(re int i=1,num,now;i<1<<(k-1);i++){\n\t\tfor(num=0,now=i;now;now-=lowbit(now),num++); //\u6c42\"1\"\u7684\u4e2a\u6570\n\t\tAdd_K(num,i); bl[i]=++sum[num];//\u5904\u7406\u7f16\u53f7\n\t}\n\tFor(1){\n\t\tfor(re int i=2;i<=k;i++){\n\t\t\tif(to&(1<<(i-2))){\n\t\t\t\tf[0][i][bl[to]]=dis[i][1]; //\u4ece1\u51fa\u53d1\u5230\u6b64\u7684\u8ddd\u79bb\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tre int l=1,ans=1<<30;\n\tfor(re int NUM=2;NUM<k;NUM++,l^=1){\n\t\tFor(NUM){\n\t\t\tfor(re int i=2,now;i<=k;i++){\n\t\t\t\tif((to&(1<<(i-2)))&&((cond[i]&to)==cond[i])){\n\t\t\t\t\tnow=to^(1<<(i-2));  f[l][i][bl[to]]=1<<30;\n\t\t\t\t\tfor(re int j=2;j<=k;j++){\n\t\t\t\t\t\tif((now&(1<<(j-2)))&&((cond[j]&now)==cond[j])){\n\t\t\t\t\t\t\tif(f[l][i][bl[to]]>f[l^1][j][bl[now]]+dis[i][j]){\n\t\t\t\t\t\t\t\tf[l][i][bl[to]]=f[l^1][j][bl[now]]+dis[i][j];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tFor(k-1){\n\t\tfor(re int i=2;i<=k;i++){\n\t\t\tif((to&(1<<(i-2)))&&((cond[i]&to)==cond[i])){\n\t\t\t\tans=min(ans,f[l^1][i][bl[to]]+dis[i][n]);//\u52a0\u4e0a\u4ece\u8fd9\u4e2a\u70b9\u5230n\u7684\u8ddd\u79bb\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n}\n\nint main(){\n\tInit(); Solve();\n\treturn 0;\n}\n```\n",
        "postTime": 1604978051,
        "uid": 236099,
        "name": "H_D_NULL",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3451 \u3010[POI2007]ATR-Tourist Attractions\u3011"
    },
    {
        "content": "## \u8fd9\u662f\u4e00\u79cd\u5361\u5e38\u7684\u505a\u6cd5\n> \u8003\u8651\u666e\u901a\u505a\u6cd5$dp[i][state]$\u8868\u793a\u7ed3\u5c3e$i$\uff0c\u72b6\u6001\u4e3a$state$\u7684\u6700\u77ed\u8def\u5f84\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6$n*2^n=20*2^{20}*4KB=80MB$\n\n\u6211\u4eec\u4f1a\u53d1\u73b0$80MB$\u548c$64MB$\u6ca1\u5dee\u591a\u5c11\uff0c\u6240\u4ee5\u5361\u5e38\n\n> \u53d1\u73b0\u53ea\u6709\u5f53$i \\in state$\u65f6\u72b6\u6001\u5408\u6cd5\uff0c\u6240\u4ee5state\u53ef\u4ee5\u5c11\u5b58\u4e00\u4f4d\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6$n*2^{n-1}=20*2^{19}=40MB<64MB$\n\n _**Solved\uff01**_ \n \n \u8d34\u4e0a\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 20010;\nconst int M = 400010;\nstruct edge{\n\tint v, d, nxt;\n}g[M];\nint tot = 0, head[N];\ninline void add(int u, int v, int d){\n\tg[++ tot] = edge{v, d, head[u]}; head[u] = tot;\n\tg[++ tot] = edge{u, d, head[v]}; head[v] = tot;\n}\nint n, m, K;\nint dis[22][N];\nbool vis[N];\nqueue <int> q;\ninline void spfa(int s){\n\tmemset(vis, 0, sizeof(vis));\n\tq.push(s); dis[s][s] = 0; vis[s] = 1;\n\twhile(! q.empty()){\n\t\tfor(int i = head[q.front()]; i; i = g[i].nxt){\n\t\t\tif(dis[s][g[i].v] > dis[s][q.front()] + g[i].d){\n\t\t\t\tdis[s][g[i].v] = dis[s][q.front()] + g[i].d;\n\t\t\t\tif(! vis[g[i].v]){\n\t\t\t\t\tvis[g[i].v] = true;\n\t\t\t\t\tq.push(g[i].v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvis[q.front()] = 0;\n\t\tq.pop();\n\t}\n}\nint dp[21][1 << 19];\nint e;\nint c[22];\ninline int solve(int x, int y){\n\treturn (y & ((1 << x - 1) - 1)) + (y >> x << (x - 1));\n}\nint main(){\n\tscanf(\"%d%d%d\", &n, &m, &K);\n\tfor(int i = 1; i <= m; ++ i){\n\t\tint u, v, d;\n\t\tscanf(\"%d%d%d\", &u, &v, &d);\n\t\tadd(u, v, d);\n\t}\n\t\n\tscanf(\"%d\", &e);\n\tfor(int i = 1; i <= e; ++ i){\n\t\tint x, y;\n\t\tscanf(\"%d%d\", &x, &y);\n\t\tc[y] += (1 << x - 2);\n\t}\n\tmemset(dis, 127 / 3, sizeof(dis));\n\tfor(int i = 1; i <= K + 1; ++ i)\n\t\tspfa(i);\n\tif(K == 0){\n\t\tprintf(\"%d\", dis[1][n]);\n\t\treturn 0;\n\t}\n\tmemset(dp, 127 / 3, sizeof(dp));\n\tfor(int i = 1; i <= K; ++ i)\n\t\tif(!c[i + 1])\n\t\t\tdp[i][0] = dis[1][i + 1];\n\tfor(int i = 1; i < (1 << K); ++ i)\n\t\tfor(int j = 1; j <= K; ++ j){\n\t\t\tif(~i & (1 << j - 1))continue;\n\t\t\tif((i & c[j + 1]) != c[j + 1])continue;\n\t\t\tfor(int k = 1; k <= K; ++ k){\n\t\t\t\tif(k == j || (~i & (1 << k - 1)))\n\t\t\t\t\tcontinue;\n\t\t\t\tdp[j][solve(j, i)] = min(dp[j][solve(j, i)], dp[k][solve(k, i - (1 << j - 1))] + dis[k + 1][j + 1]);\n\t\t\t}\n\t\t}\n\tint ans = 1e9;\n\tfor(int i = 1; i <= K; ++ i)\n\t\tans = min(ans, dp[i][(1 << K - 1) - 1] + dis[i + 1][n]);\n\tprintf(\"%d\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1559309816,
        "uid": 29519,
        "name": "qianfujia",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3451 \u3010[POI2007]ATR-Tourist Attractions\u3011"
    },
    {
        "content": "# Analysis\n\n\u8fd9\u9053\u9898\u6211\u4ece10\u670831\u65e5\u8c03\u523011\u67083\u65e5\uff0c\u540e\u6765\u53d1\u73b0\u662f\u81ea\u5df1\u628a$max$\u4ece $2^{20}$ \u5b9a\u4e49\u4e3a $2^{21}$\u4e86 \uff0c\u5b9e\u5728\u662f\u81ea\u95ed\u4e86\u3002\n\n\u8fd9\u9053\u9898\u9996\u5148\u770b\u5230$k<=20$\uff0c\u518d\u52a0\u4e0a\u6ca1\u6709\u4ec0\u4e48\u9650\u5236\u6761\u4ef6\uff0c\u5c31\u53ef\u4ee5\u8bf4\u662f\u4e00\u9053\u72b6\u6001\u538b\u7f29\u52a8\u6001\u89c4\u5212\u4e86\u3002\n\n\u4e3a\u4e86\u8868\u8ff0\u65b9\u4fbf\uff0c\u6211\u4eec\u628a**\u60f3\u8981\u505c\u7559\u7684\u70b9**\u8bb0\u4f5c**\u5fc5\u7559\u70b9**\u3002\u56e0\u4e3a\u9898\u76ee\u8bf4\u53ef\u4ee5**\u8def\u8fc7**\u800c\u4e0d**\u505c\u7559**\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5148\u9884\u5904\u7406\u51fa\u6240\u6709\u7684**\u5fc5\u7559\u70b9**\u5230\u5176\u4ed6\u70b9\u7684**\u6700\u77ed\u8def\u5f84**\uff08\u8fd9\u9053\u9898\u6700\u597d\u7528$dijkstra$\u52a0\u4f18\u5316\u6765\u8dd1\uff0c$spfa$\u53ef\u80fd\u4f1a\u88ab\u5361\u6389\uff09\u3002\u4ee4$dis[0][i]$\u8868\u793a\u7b2c1\u4e2a\u70b9\u5230\u7b2c$i$\u4e2a**\u5fc5\u7559\u70b9**\u7684\u6700\u77ed\u8def\u5f84\uff08\u8fd9\u4e00\u6b65\u4e5f\u8981\u9884\u5904\u7406\uff09\uff0c$dis[k+1][i]$\u8868\u793a\u7b2c$n$\u4e2a\u70b9\u5230$i$\u4e2a\u5fc5\u7559\u70b9\u7684\u6700\u77ed\u8def\u5f84\uff08\u4f9d\u65e7\u8981\u63d0\u524d\u9884\u5904\u7406\uff09\u3002\u9898\u76ee\u5176\u5b9e\u5c31\u662f\u8ba9\u6211\u4eec\u6c42\u4e00\u7ec4\u8fd9$k$\u4e2a**\u5fc5\u7559\u70b9**\u7684\u6392\u5217\uff0c\u4e0d\u59a8\u4ee4\u8fd9\u7ec4\u6392\u5217\u4e3a$P$,\u7b54\u6848\u4e3a$ans$\uff1a\n$$\nans = min(dis[0][P_1]+\\sum_{i=1}^{k - 1}dis[P_i][P_{i+ 1}]+dis[k+1][P_k])\n$$\n\u597d\u4e86\uff0c\u9898\u610f\u8868\u8ff0\u5b8c\u6574\u3002\u7531\u4e8e$k <= 20$,\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4e0a\u624b\u52a8\u89c4\uff0c\u7528$f[i][j][l]$\u8868\u793a\u5df2\u7ecf\u8d70\u4e86$i$\u4e2a**\u5fc5\u7559\u70b9**\uff0c\u5f53\u524d\u505c\u5728\u7b2c$j$\u4e2a\u5fc5\u7559\u70b9\uff0c\u5f53\u524d\u5df2\u8d70\u7684\u5fc5\u7559\u70b9\u72b6\u6001\u4e3a$l$\u65f6\u7684\u6700\u77ed\u8def\u5f84\u3002\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n$$\nf[i][j][l] = min(f[i-1][u][l - (1 << (j - 1))])\n$$\n\u5f53\u7136\u8fd9\u91cc\u6211\u4eec\u8981\u5224\u65ad\u4e00\u4e0b$f[i - 1][u][l - (1 << (j - 1))]$\u7684\u72b6\u6001\u662f\u5426\u5408\u6cd5\u3002\n\n\u7136\u540e\u4f60\u53d1\u73b0\u4f60\u7684\u7a7a\u95f4\u70b8\u4e86\u3002\u89c2\u5bdf\u4e00\u4e0b\u65b9\u7a0b\u5f0f\uff0c\u53d1\u73b0$f[i]$\u53ea\u4e8e$f[i - 1]$\u6709\u5173\uff0c\u53ef\u4ee5\u7528\u6eda\u52a8\u6570\u7ec4\u6765\u5f04\u6389\u4e00\u7ef4\u3002\u90a3\u4e48\u5f53\u524d\u72b6\u6001\u5c31\u662f$f[j][l][2]$\uff0c\u6211\u4eec\u7b97\u4e00\u4e0b\u7a7a\u95f4\uff1a\n$$\n2^{20}*20*2*4B = 160MB>62.50MB\n$$\n~~\u94a6\u5b9a\u7684\u7a7a\u95f4\u9650\u5236\u5c31\u662f\u8fd9\u4e48\u5f3a~~\u3002\u600e\u4e48\u529e\u5462\uff1f\n\n\u6211\u4eec\u89c2\u5bdf\u4e00\u4e0b\uff0c\u53d1\u73b0\u5b9e\u9645\u4e0a\u7b2c\u4e8c\u7ef4\u7684$l$\u7684\u8bb8\u591a\u72b6\u6001\u90fd\u662f\u6d6a\u8d39\u7684\u3002\u5982\u679c$i=20$,\u90a3\u4e48$l$\u5176\u5b9e\u53ea\u6709\u4e00\u4e2a\u72b6\u6001\u662f\u6709\u7528\u7684\uff0c\u5176\u4ed6\u90fd\u6ca1\u6709\u7528\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5f53$i = 10,k = 20$\u7684\u65f6\u5019$j$\u6709\u7528\u7684\u72b6\u6001\u662f\u6700\u591a\u7684\u3002\u6b64\u65f6$max_j = C_{20}^{10} = 184756$\u3002\u6240\u4ee5\u8bf4\u6211\u4eec\u6b64\u65f6\u7684\u7a7a\u95f4\u5c31\u662f\u8fd9\u4e2a\u4e9a\u5b50\uff1a\n$$\nC_{20}^{10}*2*20*4B=28.19MB<65.20MB\n$$\n\u7136\u800c\u53ef\u80fd\u4f1a\u6709\u4eba\u95ee\uff1a\n\n- \u8fd9\u6837\u7684\u72b6\u6001\u600e\u4e48\u8f6c\u5316\u6210\u4e8c\u8fdb\u5236\u7ee7\u800c\u8868\u793a\u771f\u6b63\u7684\u72b6\u6001\u5462\uff1f\n- \u5373\u4f7f\u8868\u793a\u6210\u4e86\u4e8c\u8fdb\u5236\uff0c\u5728\u72b6\u6001\u8f6c\u79fb\u540e$l - (1 << (j - 1))$\u8fd9\u4e2a\u4e8c\u8fdb\u5236\u72b6\u6001\u53c8\u600e\u4e48\u8f6c\u79fb\u56de\u8fd9\u79cd\u72b6\u6001\u5462\uff1f\n\n\u4e3a\u4e86\u8868\u8ff0\u65b9\u4fbf\uff0c\u6211\u4eec\u628a**\"\u8fd9\u6837\u7684\u72b6\u6001\"**\u5b9a\u4e49\u4e3a**\"\u7ec4\u5408\u6570\u7c7b\u578b\u72b6\u6001\"**\n\n- \u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ea\u8981\u5f00\u4e00\u4e2a$state[i][j]$\u7684\u6570\u7ec4\u8868\u793a\u5f53\u524d2\u8fdb\u5236\u72b6\u6001\u4e2d\u6709$i$\u4e2a1\u65f6\u7b2c$j$\u4e2a**\u7ec4\u5408\u6570\u7c7b\u578b\u72b6\u6001**\u7684**\u4e8c\u8fdb\u5236\u72b6\u6001**\u53ef\u4ee5\u63d0\u524d\u9884\u5904\u7406\u3002\n- \u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u4e00\u4e2a$st2$ _to _ $num[i] = j$\u8868\u793a2\u8fdb\u5236\u72b6\u6001$i$\u8f6c\u5316\u6210\u7684**\u7ec4\u5408\u6570\u7c7b\u578b\u72b6\u6001**$state[t][j]$\uff0c\u56e0\u4e3a**\u6bcf\u4e2a\u4e8c\u8fdb\u5236\u72b6\u6001\u6240\u5305\u542b\u76841\u7684\u4e2a\u6570\u662f\u76f8\u540c\u7684**\uff0c\u6240\u4ee5$t$\u662f\u786e\u5b9a\u7684\uff0c\u4e0d\u7528\u518d\u53e6\u5916\u8868\u793a\u3002\u8fd9\u4e2a\u6570\u7ec4\u53ef\u4ee5\u5728\u9884\u5904\u7406$state$\u6570\u7ec4\u7684\u540c\u65f6\u9884\u5904\u7406\u3002\n\n\u6700\u540e\u7ed9\u51fa$ans$\u7684\u6570\u5b66\u8868\u8fbe\u5f0f\uff1a\n$$\nans = min(f[j][l][now] + dis[k + 1][j])(1 <= j <= k,0 <=l<2^k)\n$$\n\n\n# Notes\n\n- \u5f53$k = 1$\u7684\u65f6\u5019\u8981\u7279\u5224\uff0c\u4e0d\u7136\u4f1a\u70b8\u6389\u3002\n- \u8d70\u7b2c\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\u53ef\u4ee5\u5148\u9884\u5904\u7406\uff0c\u8fd9\u6837\u53ef\u80fd\u4f1a\u6bd4\u8f83\u597d\u4e9b\u3002\n- \u4e00\u5b9a\u8981\u8010\u5fc3\u5730\u5199\uff0c\u8010\u5fc3\u5730\u8c03\u3002\n\n\n\n# Code\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <queue>\n#include <cstring>\nusing namespace std;\nconst int maxm = 200001,maxn = 20001,maxk = 22,inf = 0x3f3f3f3f,max_state = 184758,max_2 = (1 << 20);\nint first[maxn],nxt[2 * maxm],last[maxn],dx[2 * maxm],w[2 * maxm];\nint dis[maxk][maxn],xb,n,m,k,x,y,z,f[maxk][max_state][2],state[maxk][max_state],num[max_2];\nint g,st2_to_num[max_2],now,pre,ans,xx,sum; \nbool vis[maxn],r[maxk][maxk],cnt[maxk];//r[i][j] = 1 \u8868\u793ai\u5fc5\u987b\u5728j\u524d\u9762 \npair<int,int> v;\n\npriority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > > q;\n\n\nvoid build(int x,int y,int z) {\n\tdx[++xb] = y,w[xb] = z;\n\tif (!first[x])\n\t\tfirst[x] = xb; else\n\t\tnxt[last[x]] = xb;\n\tlast[x] = xb;\n}\n\nvoid dijkstra(int x) {\n\tif (x == n)\n\t\tx = 0,xx = n; else\n\t\tif (x == n + 1)\n\t\t\tx = k + 1,xx = n - 1; else\n\t\t\txx = x;\n\tfor (int i=0; i<maxn; i++)\n\t\tdis[x][i] = inf;\n\t\t\n\tdis[x][xx] = 0;\n\twhile (!q.empty())\n\t\tq.pop();\n\tfor (int i=first[xx]; i; i = nxt[i])\n\t\tdis[x][dx[i]] = w[i];\n\tfor (int i=first[xx]; i; i = nxt[i]) \n\t\tq.push(make_pair(w[i],dx[i]));\n\tfor (int i=0; i<=n; i++)\n\t\tvis[i] = 0;\n\t\t\n\tvis[xx] = 1;\n\tfor (int i=1; i<n; i++) {\n\t\tif (q.empty()) \n\t\t\tbreak;\n\t\tv = q.top();\n\t\twhile (vis[v.second] && !q.empty()) {\n\t\t\tq.pop();\n\t\t\tif (q.empty())\n\t\t\t\tbreak;\n\t\t\tv = q.top();\n\t\t}\n\t\tvis[v.second] = 1;\n\t\tdis[x][v.second] = v.first;\n\t\tfor (int j = first[v.second]; j; j = nxt[j]) {\n\t\t\tif (dis[x][dx[j]] > dis[x][v.second] + w[j]) {\n\t\t\t\tdis[x][dx[j]] = dis[x][v.second] + w[j];\n\t\t\t\tif (!vis[dx[j]]) \n\t\t\t\t\tq.push(make_pair(dis[x][dx[j]],dx[j]));\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t}\n}\n\nint get_num(int x) {\n\tsum = 0;\n\twhile (x > 0) {\n\t\tsum += (x & 1);\n\t\tx >>= 1;\n\t}\n\treturn sum;\n}\n\nint main() {\n//    freopen(\"p3451.in\",\"r\",stdin);\n//    freopen(\"p3451.out\",\"w\",stdout);\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor (int i=1; i<=m; i++) {\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tif (x == 1)\n\t\t\tx = n; else\n\t\t\tx--;\n\t\tif (y == 1)\n\t\t\ty = n; else\n\t\t\ty--;\n\t\tbuild(x,y,z);\n\t\tbuild(y,x,z);\n\t}\n\t\n\tfor (int i=1; i<=k; i++)\n\t\tdijkstra(i);\t\n\tdijkstra(n);\n\tdijkstra(n + 1);\n\tscanf(\"%d\",&g);\n\tfor (int i=1; i<=g; i++) {\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tx--;\n\t\ty--;\n\t\tr[x][y] = 1;\n\t\tcnt[y] = 1;\n\t}\n\tfor (int i=0; i<max_2; i++)\n\t\tnum[i] = get_num(i);\n\t\t\n\tfor (int i=0; i<=k + 1; i++)\n\t\tfor (int j=0; j<max_2; j++)\n\t\t\tif (num[j] == i) {\n\t\t\t\tstate[i][++state[i][0]] = j;\n\t\t\t\tst2_to_num[j] = state[i][0];\n\t\t\t}\n\t\t\t\t\n\tmemset(f,0x3f,sizeof(f));\n\tfor (int i=1; i<=k; i++)\n\t\tif (!cnt[i])\n\t\t\tf[i][st2_to_num[1 << (i - 1)]][1] = dis[0][i];\n\t\t\t\t\n\tfor (int i=2; i<=k; i++) { ///\u7ecf\u8fc7i\u4e2a\u70b9\n\t\tnow =(i & 1),pre = 1 - now;\n\t\tfor (int j=0; j<=k; j++)\n\t\t\tfor (int l=1; l<=state[i][0]; l++)\n\t\t\t\tf[j][l][now] = inf;\n\t\t\t\t\n\t\tfor (int j=1; j<=k; j++) //\u5f53\u524d\u5230 j\u70b9 \n\t\t\tfor (int l=1; l<=state[i][0]; l++) { //\u5230j\u70b9\u540e\u72b6\u6001\u4e3astate[i][l]\n\t\t\t\tif (((state[i][l] | (1 << (j - 1))) == state[i][l])) {\n\t\t\t\t\tif (state[i][l] >= (1 << k))\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tint p_state = state[i][l] - (1 << (j - 1)); //p_state \u5373pre_state,\u8868\u793a\u524d\u4e00\u6b21\u72b6\u6001 \n\t\t\t\t\tbool t = 1;\n \t\t\t\t\tfor (int v = 1; v <= k; v++)\n\t\t\t\t\t\tif (r[v][j] && (((1 << (v - 1)) | p_state) != p_state)) {\n\t\t\t\t\t\t\tt = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\tif (!t)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tfor (int v = 1; v <= k; v++)\n\t\t\t\t\t\tif (((1 << (v - 1)) | p_state) == p_state)\n\t\t\t\t\t\t\tf[j][l][now] = min(f[j][l][now],f[v][st2_to_num[p_state]][pre] + dis[v][j]);\n\t\t\t\t}\n\t\t\t}  \n//\t\tif (i == 2)\n//\t\t\tprintf(\"%d\\n\",f[2][3][now]);\n\t}\n\tans = inf;\n\tif (k < 2)\n\t\tnow = 1;\n\tif (k == 0) {\n\t\tprintf(\"%d\\n\",dis[0][n - 1]);\n\t\treturn 0; \n\t}\n\tfor (int i=1; i<=k; i++)\n\t\tfor (int j=1; j<=state[k][0]; j++)\n\t\t\tans = min(ans,f[i][j][now] + dis[k + 1][i]);\t\t\n\tif (ans == inf)\n\t\tans = -1;\n\tprintf(\"%d\\n\",ans);\n\t\n\treturn 0;\n}\n```\n\n\n\n",
        "postTime": 1572787345,
        "uid": 25736,
        "name": "040902fyn",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3451 \u3010[POI2007]ATR-Tourist Attractions\u3011"
    },
    {
        "content": "\u50cf\u8fd9\u79cd\u9898\u9762\u6709\u70b9\u957f\u7684, \u591a\u534a\u662f(\u5212\u6389),\n\n\u4e3a\u4e86\u9632\u6b62\u8bfb\u9898\u6740, \u6211\u4eec\u9700\u8981\u4ed4\u7ec6\u770b\u770b\u9898\u9762, \u6bd4\u5982\u7b2c\u4e8c\u6bb5\u7684\"himdetermine\"\u6ca1\u6253\u7a7a\u683c(\u62d6\u8d70)(\u5176\u5b9e\u8fd8\u6709\u51e0\u4e2a)\n\n\n------------\n\n\n\n\u5176\u5b9e\u5c31\u662f\u53eb\u4f60\u6c42\u4e00\u4e2a\u6709\u5e8f\u6700\u77ed\u8def, \u56e0\u4e3aK\u7684\u503c\u90a3\u4e48\u5c0f, \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u4e8c\u8fdb\u5236\u96c6\u5408\u538b\u7f29\u4e00\u4e0b\n\n\u6211\u4eec\u7528$Prev[i]$\u8868\u793a\u7b2c$i$\u4e2a\u70b9\u4e4b\u524d\u5fc5\u987b\u505c\u7559\u7684\u6240\u6709\u70b9\n\n\u518d\u6765\u4e00\u6ce2\u9884\u5904\u7406, \u5c06\u6240\u6709\u5fc5\u987b\u7ecf\u8fc7\u7684\u70b9\u4e0e\u5176\u4ed6\u70b9\u7684\u6700\u77ed\u8ddd\u79bb$Len$\u6c42\u51fa, \u8fb9\u6570\u6709\u70b9\u591a......\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u6309\u90a3\u4e2a\u987a\u5e8f\u66f4\u65b0\u6700\u77ed\u8def, \u8fd9\u4e2a\u987a\u5e8f\u6211\u4eec\u5f88\u6e05\u695a, \u8bb0\u5fc6\u5316\u641c\u7d22\u5c31\u514d\u4e86\n\n\u7528$Dist[i][j]$\u8868\u793a\u5df2\u7ecf\u505c\u7559\u4e86$i$\u96c6\u5408\u4e2d\u7684\u57ce\u5e02, \u6700\u540e\u4e00\u6b65\u5728j\u57ce\u5e02,\n\n\u90a3\u4e48\u663e\u7136\u5f53 $Dist[i][j]>Dist[i_0][k]+Len[k][j]$,\u5e76\u4e14\u6ee1\u8db3\u5bf9\u5e94\u6761\u4ef6\u65f6\u6211\u4eec\u5c31\u8981\u677e\u5f1b\u4e00\u4e0b.**((S1|S2)==S1\u8868\u793aS2\u5305\u542b\u4e8eS1)**\n\n\u6700\u540e\u5c31\u662f\u627e\u7b54\u6848\u5566, \u5bf9\u5168\u96c6\u6c42\u4e00\u904d\u6700\u5c0f\u503c\u5c31ok\u5566~, \u8bb0\u5f97\u52a0\u4e0aj\u5230n\u7684\u8ddd\u79bb\u5c31\u597d\u4e86~\n\n\n------------\n\n\n\n**PS:** \u7b2c\u4e00\u904d\u4ea4\u7684\u65f6\u5019\u5de6\u79fb\u4e86\u4e00\u4e2a\u8d1f\u6570, \u534e\u4e3dRE, \u5b8c\u7f8e\u7206\u96f6......\n\n\u8fd8\u6709, \u6211\u8ba4\u4e3a\u672c\u9898\u6700\u5751\u7684\u5730\u65b9, \u9898\u9762\u7684\u90a3\u4e2a\u56fe, \u5bf9\u5c31\u662f\u5b83, \u90a3\u4e2a\u6d1b\u8c37\u7684\u9632\u4f2a\u6807\u8bc6, \u628a6\u53f7\u70b9\u6321\u4f4f\u4e86.\n\n\u7136\u540e, \u6211\u628a1\u52303\u7684\u6700\u77ed\u8def\u770b\u6210\u4e862, \u8fd8\u4ee5\u4e3a\u6709\u91cd\u8fb9(\u9898\u76ee\u8bf4\u4e86\u6ca1\u6709)\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ninline int rnum()\n{\n    int fh = 1, res = 0; char ch = getchar();\n    while (!isdigit(ch)) { if (ch == '-') fh = -1; ch = getchar(); }\n    while (isdigit(ch)) { res = res * 10 + ch - '0'; ch = getchar(); }\n    return fh * res;\n}\n\nconst int N = 20020, oo = 0x3f3f3f3f;\nstruct Edge { int to, w; };\nvector<Edge> G[N];\nint n, m, K, Len[22][N], Dist[1<<20][22], Prev[22];\n//Len[i][j] i(i\u2208[2, k+1])\u57ce\u5e02\u5230j\u57ce\u5e02\u7684\u6700\u77ed\u8def\n//Dist[i][j] \u5df2\u7ecf\u8bbf\u95ee\u4e86i\u96c6\u5408\u6240\u6709\u57ce\u5e02\uff0c\u6b63\u5728\u8bbf\u95eej\u7684\u6700\u77ed\u8def \n//Prev[i] \u8981\u8bbf\u95eei(i\u2208[2, k+1])\u70b9\u9700\u8981\u5148\u8bbf\u95ee\u7684\u57ce\u5e02\u96c6\u5408 \n\nvoid SPFA(const int &Source) //\u5176\u5b9e\u7a20\u5bc6\u56fe\u4e0d\u9002\u5408SPFA \n{\n    queue<int> q;\n    bool inq[N] = {false};\n    q.push(Source), inq[Source] = true, Len[Source][Source] = 0;\n    \n    int u, v;\n    while (!q.empty())\n    {\n        u = q.front(), q.pop(), inq[u] = false;\n        for (int i = 0; i < (int)G[u].size(); i++)\n        {\n            v = G[u][i].to;\n            if (Len[Source][v] > Len[Source][u] + G[u][i].w)\n            {\n                Len[Source][v] = Len[Source][u] + G[u][i].w;\n                if (!inq[v]) q.push(v), inq[v] = true;\n            }\n        }\n    }\n}\n\nint main()\n{\n    n = rnum(), m = rnum(), K = rnum();\n    const int sta = (1 << K) - 1; //\u8ba1\u7b97\u5168\u96c6\uff0c\u4e4b\u540e\u4f1a\u7528\u5230 \n    for (int i = 1, p, q, l; i <= m; i++)\n    {\n        p = rnum(), q = rnum(), l = rnum();\n        G[p].push_back((Edge){q, l});\n        G[q].push_back((Edge){p, l});\n    }\n    for (int i = 1, g = rnum(), r, s; i <= g; i++)\n    {\n        r = rnum() - 2, s = rnum();\n        Prev[s] |= 1 << r;\n    }\n    \n    memset(Len, 0x3f, sizeof (Len));\n    for (int i = 1; i <= K + 1; i++) SPFA(i);\n    \n    memset(Dist, 0x3f, sizeof (Dist));\n    Dist[0][1] = 0; //\u8fd9\u662f\u8d77\u70b9(\u7136\u800c\u53ef\u6709\u53ef\u65e0)\n    for (int i = 2; i <= K + 1; i++) //\u6700\u5f00\u59cb\u8fd9\u91cc\u7684Dist\u7b2c\u4e00\u7ef4\u7684i\u6ca1-2\n        if (!Prev[i]) Dist[1<<(i-2)][i] = Len[1][i]; \n    for (int i = 0; i <= sta; i++)\n        for (int j = 0; j < K; j++)\n            if (i >> j & 1) for (int k = 0; k < K; k++)\n                if (!(i >> k & 1) && (i | Prev[k+2]) == i)\n                    Dist[i|1<<k][k+2] = \n                min(Dist[i|1<<k][k+2], Dist[i][j+2] + Len[j+2][k+2]);\n                \n    int ans = +oo;\n    for (int i = 1; i <= K + 1; i++) //\u5b9e\u6d4b\u8fd9\u91cc\u628ai\u8d77\u70b9\u6539\u62102\u4f1a\u6302\u6389\u4e00\u4e2a\u70b9 \n        ans = min(ans, Dist[sta][i] + Len[i][n]); //\u539f\u56e0\u5c31\u662f\u5ffd\u7565\u4e86\u6ca1\u6709\u9650\u5236\u7684\u60c5\u51b5(\u5373g==0) \n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1514424000,
        "uid": 45660,
        "name": "yxr811740686",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3451 \u3010[POI2007]ATR-Tourist Attractions\u3011"
    },
    {
        "content": "## \u9898\u89e3\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/nanfeng-blog/p/14994781.html)\n\n\u8fd9\u91cc\u7684\u505a\u6cd5\u662f\u5361\u7a7a\u95f4\u7684\u505a\u6cd5\uff0c\u76f8\u6bd4\u4e8e\u6eda\u52a8\u6570\u7ec4\uff0c\u8fd9\u79cd\u505a\u6cd5\u56e0\u4e3a\u6ca1\u6709\u4e09\u7ef4\u6570\u7ec4\u5bfb\u5740\u7684\u5927\u5e38\u6570\uff0c\u6240\u4ee5\u8f83\u5feb\u3002\n\n\u5728\u666e\u901a\u7684\u505a\u6cd5\u4e2d\uff0c$dp_{state,i}$ \u8868\u793a\u4ee5 $i$ \u7ed3\u5c3e\uff0c\u90a3\u4e48 $state$ \u4e00\u5b9a\u662f\u5305\u542b $i$ \u7684\u72b6\u6001\uff0c\u6240\u4ee5\u5728 $state$ \u4e2d\u53ef\u4ee5\u7701\u6389 $i$ \u8fd9\u4e00\u4f4d\u3002\n\n\u6240\u4ee5 $cost=(k+1)\u00d72^{k-1}\u00d74kb$ \uff0c\u5927\u7ea6\u4e3a 42MB \u3002\n\n\u6ce8\uff1a\u672c\u9898\u7528 spfa \u4f1a\u6bd4 dijkstra \u5feb\u5f88\u591a\u3002\n\nCode\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define ri register signed\n#define p(i) ++i\nusing namespace std;\nnamespace IO{\n    char buf[1<<21],*p1=buf,*p2=buf;\n    #define gc() p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++\n    template<typename T>inline void read(T &x) {\n        ri f=1;x=0;register char ch=gc();\n        while(ch<'0'||ch>'9') {if (ch=='-') f=0;ch=gc();}\n        while(ch>='0'&&ch<='9') {x=(x<<1)+(x<<3)+(ch^48);ch=gc();}\n        x=f?x:-x;\n    }\n}\nusing IO::read;\nnamespace nanfeng{\n    #define node(x,y) (node){x,y}\n    #define cmax(x,y) ((x)>(y)?(x):(y))\n    #define cmin(x,y) ((x)>(y)?(y):(x))\n    #define FI FILE *IN\n    #define FO FILE *OUT\n    static const int N=2e4+7,M=2e5+7;\n    int first[N],dp[1<<19][21],pre[21],dis[21][N],vis[N],n,m,q,k,t=2,S;\n    struct edge{int v,w,nxt;}e[M<<1];\n    struct node{int x,dis;};\n    priority_queue<node> que;\n    inline int operator<(const node &n1,const node &n2) {return n1.dis>n2.dis;}\n    inline void add(int u,int v,int w) {\n        e[t].v=v,e[t].w=w,e[t].nxt=first[u],first[u]=t++;\n        e[t].v=u,e[t].w=w,e[t].nxt=first[v],first[v]=t++;\n    }\n    inline void dij(int rt){\n        memset(vis,0,sizeof(vis));\n        memset(dis[rt-1],0x3f,sizeof(dis[rt-1]));\n        dis[rt-1][rt-1]=0;\n        que.push(node(rt,0));rt-=1;\n        while(!que.empty()) {\n            int x(que.top().x),dist(que.top().dis);\n            que.pop();\n            if (vis[x]) continue;\n            vis[x]=1;\n            for (ri i(first[x]),v;i;i=e[i].nxt) {\n                if (dis[rt][v=e[i].v-1]>dist+e[i].w) {\n                    dis[rt][v]=dist+e[i].w;\n                    que.push(node(v+1,dis[rt][v]));\n                }\n            }\n        }\n    }\n    inline int calc(int x,int l) {\n        if ((1<<l)>x) return x;\n        ri tmp=x&((1<<l)-1);\n        return (x>>(l+1))<<l|tmp; \n    }\n    inline int main() {\n        // FI=freopen(\"nanfeng.in\",\"r\",stdin);\n        // FO=freopen(\"nanfeng.txt\",\"w\",stdout);\n        read(n),read(m),read(k);\n        for (ri i(1),u,v,w;i<=m;p(i)) read(u),read(v),read(w),add(u,v,w);\n        read(q);\n        for (ri i(1),r,s;i<=q;p(i)) {\n            read(r);read(s);\n            pre[s-2]|=1<<(r-2);\n        }\n        for (ri i(1);i<=k+1;p(i)) dij(i);\n        if (!k) {printf(\"%d\\n\",dis[0][n-1]);return 0;} \n        memset(dp,0x3f,sizeof(dp));\n        dp[0][0]=0;\n        for (ri i(1);i<=k;p(i)) if (!pre[i-1]) dp[0][i]=dis[0][i];\n        S=(1<<k)-1;\n        for (ri i(1);i<=S;p(i)) {\n            for (ri j(0);j<k;p(j)) {\n                if (!((1<<j)&i)) continue;\n                ri tmp1=calc(i,j);\n                for (ri l(0);l<k;p(l)) {\n                    if (!(i&(1<<l))&&((i&pre[l])==pre[l])) {\n                        ri tmp2=calc(i,l);\n                        dp[tmp2][l+1]=cmin(dp[tmp1][j+1]+dis[j+1][l+1],dp[tmp2][l+1]);\n                    }\n                }  \n            }\n        }\n        ri ans=INT_MAX;\n        for (ri i(1),tmp;i<=k;p(i)) {\n            tmp=calc(S,i-1);\n            ans=cmin(ans,dp[tmp][i]+dis[i][n-1]);    \n        }\n        printf(\"%d\\n\",ans);\n        return 0;\n    } \n}\nint main() {return nanfeng::main();}\n```",
        "postTime": 1625920013,
        "uid": 141958,
        "name": "\u6960\u67ab",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3451 [POI2007]ATR-Tourist Attractions"
    },
    {
        "content": "### \u9996\u5148\u58f0\u660e\uff1a\u5176\u5b9e\u8fd9\u4e2a\u7a0b\u5e8f\u5e76\u6ca1\u6709AC\uff0c\u53ea\u670995\u5206\uff0c\u4f46\u662f\u6bd4\u5355\u7eaf\u7684\u72b6\u538bDP\u8981\u597d\u5f88\u591a\uff08\u90a3\u662f\u76f4\u63a5MLE\u72060\u7684QAQ\uff09\n\n\n## \u9898\u89e3\uff1a\n\u524d\u9762\u4e00\u90e8\u5206\u662f\u8dd1K+1\u6b21dijkstra\uff0c\u7528\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u5b58\u8d77\u6765\n\n\u540e\u9762\u662f\u7528map\u4f18\u5316\u72b6\u538bDP\u7684\u7a7a\u95f4\uff0c\u7528dp[i][j]\u8868\u793a\u8d70\u5230\u4e86i\uff0c\u4e14\u8def\u5f84\u4e3aj\u7684\u6700\u77ed\u8def\uff0c\u7136\u540e\u679a\u4e3e\u8f6c\u79fb\u5c31\u884c\u4e86\n\n## \u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\n#include<map>\n#include<algorithm>\n#define M 400010\n#define N 20010\nusing namespace std;\nint getint(){\n    int w=0;bool f=false;char c=getchar();\n    while((c<'0'||c>'9')&&c!='-')c=getchar();\n    if(c=='-')f=true,c=getchar();\n    while(c>='0'&&c<='9')w=w*10+c-'0',c=getchar();\n    return f?-w:w;\n}\nint n,m,k,G,last[N],len(0),num,que[24],qt(0),dis[24][N],d[N],maxn,ans=0x3f3f3f3f,aqr[24];\nmap<int,int>dp[22];\nbool v[N];\nstruct EDGE{\n    int to,las,wi;\n}edge[M];\nstruct ono{\n    int xi,dit;\n}dui[N<<1];\nvoid add1(int x,int y,int z){\n    len++;edge[len].to=y;edge[len].las=last[x];\n    edge[len].wi=z;last[x]=len;return;\n}\nvoid insert(){\n    int now=num;\n    while(dui[now].dit<dui[now>>1].dit&&now>1)\n        swap(dui[now],dui[now>>1]),now>>=1;\n    return;\n}\nvoid top(){\n    dui[1]=dui[num--];\n    int now=2;\n    while(now<=num){\n        if(dui[now].dit>dui[now+1].dit)now++;\n        if(dui[now].dit<dui[now>>1].dit)\n            swap(dui[now],dui[now>>1]),now<<=1;\n        else break;\n    }return;\n}\nvoid dij(int x){\n    memset(d,0x3f3f3f3f,sizeof(d));memset(v,false,sizeof(v));\n    d[x]=num=0;dui[++num].xi=x;dui[num].dit=0;insert();\n    int t;\n    while(num){\n        while(v[dui[1].xi]==true&&num)top();\n        if(num<=0)break;\n        t=dui[1].xi;top();v[t]=true;\n        for(register int i=last[t];i;i=edge[i].las)\n        if(d[edge[i].to]>(d[t]+edge[i].wi)){\n            d[edge[i].to]=d[t]+edge[i].wi;\n            if(v[edge[i].to]==false)\n            dui[++num].xi=edge[i].to,dui[num].dit=d[edge[i].to],insert();\n        }\n    }\n    for(register int i=1;i<=n;i++)dis[x][i]=d[i];\n    return;\n}\nint main()\n{\n    int x,y,z;\n    n=getint();m=getint();k=getint();maxn=(1<<k)-1;\n    for(register int i=1;i<=m;i++)x=getint(),y=getint(),z=getint(),add1(x,y,z),add1(y,x,z);\n    G=getint();memset(aqr,false,sizeof(aqr));\n    for(register int i=1;i<=G;i++)x=getint(),y=getint(),aqr[y]=(aqr[y]|(1<<(x-2)));\n    for(register int i=1;i<=k+1;i++)dij(i);\n    dp[1][0]=0;\n    for(register int i=2;i<=k+1;i++)\n    if(aqr[i]==0)dp[i][1<<(i-2)]=dis[1][i];\n    for(register int i=1;i<=maxn;i++)\n    for(register int j=0;j<k;j++)\n        if((i&(1<<j))!=0&&dp[j+2].find(i)!=dp[j+2].end())\n            for(register int z=0;z<k;z++)\n                if((i&(1<<z))==0&&(i|aqr[z+2])==i){\n                    if(dp[z+2].find(i|(1<<z))==dp[z+2].end())dp[z+2][i|(1<<z)]=dp[j+2][i]+dis[j+2][z+2];\n                    else dp[z+2][i|(1<<z)]=min(dp[z+2][i|(1<<z)],dp[j+2][i]+dis[j+2][z+2]);\n                }\n    for(register int i=1;i<=k+1;i++)\n    if(dp[i].find(maxn)!=dp[i].end())ans=min(ans,dp[i][maxn]+dis[i][n]);\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1539856242,
        "uid": 44317,
        "name": "Bewegt",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3451 \u3010[POI2007]ATR-Tourist Attractions\u3011"
    },
    {
        "content": "\n\u8fd9\u79cd\u7a20\u5bc6\u56fe\u8fd8\u662f\u5efa\u8bae\u4f60\u4e0d\u8981\u8dd1spfa\uff0c\u4f60\u8dd1dijkstra\u5806\u4f18\u5316\u4f1a\u5feb\u5f88\u591a\n\n\u8981\u770b\u539f\u56fe[\u6233\u6211](http://www.lydsy.com/JudgeOnline/images/1097.jpg)(\u5de6\u4e0b\u89d2\u88ab\u6d1b\u8c37\u56fe\u6807\u906e\u4f4f\u4e86)\n\n\n#\u9898\u610f\n\n\u9898\u76ee\u7ed9\u4f60\u7684\u610f\u601d\u5c31\u662f\n\n\u6c421\u5230n\u7684\n\n\u5fc5\u987b\u7ecf\u8fc7\u4e00\u4e9b\u70b9\uff082\u2192k+1\uff09\n\n\u800c\u4e14\u8fc7\u8fd9\u4e9b\u70b9\u8fd8\u8981\u8bb2\u5148\u540e\u987a\u5e8f\n\n\u7684\u6700\u77ed\u8def\u957f\u5ea6\n\n\n#\u89e3\u9898\n\n\u9996\u5148\u770b\u5230k<=20\n\n\u5b83\u8fd9\u662f\u544a\u8bc9\u4f60\n\n\u5bf9\u4e8e\u8fd9k\u4e2a\u5fc5\u987b\u7ecf\u8fc7\u7684\u70b9\n\n\u4f60\u600e\u4e48\u66b4\u529b\u600e\u4e48\u641e\n\n\u6240\u4ee5\u6211\u4eec\u5bf9\u8fd9k\u4e2a\u70b9\u6bcf\u4e2a\u70b9\u5355\u5143\u6700\u77ed\u8def\uff08dijkstra\uff09\u4e00\u4e0b\uff0c\u6c42\u51fa\u4ed6\u4eec\u5230\u6240\u6709\u70b9\u7684\u8ddd\u79bb\u3002`dis[i][j]`\u8868\u793a\u7531`i`\u51fa\u53d1\u5230`j`\u7684\u8ddd\u79bb\n\n\n\u7136\u540e\u662f\u5904\u7406\u5148\u540e\u5173\u7cfb\u3002\u6211\u4eec\u5efa\u7acb\u4e00\u4e2a\u6570\u7ec4`r[i]`\uff0c`r[i]`\u7684\u503c\uff0c\u8868\u793a\u5230\u8fbe\u7b2ci\u4e2a\u70b9\u4e4b\u524d\uff0c\u5fc5\u987b\u505c\u7559\u7684\u70b9\u7684\u72b6\u538b\u96c6\u5408\uff0c1\u4e3a\u5fc5\u7ecf\uff0c0\u4e3a\u65e0\u6240\u8c13\uff08\u56e0\u4e3ak<=20\u6240\u4ee5\u53ef\u4ee5\u72b6\u538b\uff09\n\n\n\u63a5\u7740\u5c31\u662f\u72b6\u538bDP\u3002\u8fd9\u91cc``f[i][j]``\u8868\u793a\u5f53\u524d\u72b6\u6001\u96c6\u5408\u4e3a`i`\uff081\u4e3a\u505c\u7559\u8fc7\uff0c0\u4e3a\u6ca1\u6709\uff09\uff0c\u76ee\u524d\u505c\u7559\u5728`j`\u7684\u6700\u77ed\u8def\u5f84\u3002\n\n\u8f6c\u79fb\u5c31\u662f\u666e\u901a\u72b6\u538bdp\u5957\u8def\uff0c\u4ece0\u5230\uff081<<k-1\uff09[\u5168\u90fd\u6709] \u679a\u4e3e\u72b6\u6001\uff0c\u627e\u5230\u4e00\u4e2a\u96c6\u5408\u4e2d\u5b58\u5728\u7684\u70b9\u548c\u4e00\u4e2a\u96c6\u5408\u4e2d\u4e0d\u5b58\u5728\u7684\u70b9\uff0c\u5982\u679c\u5f53\u524d\u72b6\u6001\u6ee1\u8db3\u8fd9\u4e2a\u4e0d\u5728\u96c6\u5408\u5185\u7684\u70b9\u7684`r[i]`\uff08\u4e5f\u5c31\u662f\u7ecf\u8fc7\u5b83\u4e4b\u524d\u5fc5\u987b\u7ecf\u8fc7\u7684\u70b9\u90fd\u7ecf\u8fc7\u4e86\uff09\u90a3\u4e48\u5c31\u8fdb\u884c\u8f6c\u79fb\u3002\n\n\u521d\u59cb\u72b6\u6001\uff0cf\u8bbe\u4e3aINF,\u5982\u679c\u4e00\u4e2a\u70b9`i`\u5728\u505c\u7559\u4e4b\u524d\u4e0d\u9700\u8981\u5728\u4efb\u4f55\u70b9\u505c\u7559\uff0c\u90a3\u4e48`f[1][i]=dis[1][i]`\uff0c`f[0][1]=0`\n\n\n#\u51e0\u70b9\u6ce8\u610f\uff08\u957f\u8005\u7684\u7ecf\u9a8c\u6559\u8bad\uff09\n\n1.\u5f53k=0\u65f6\u76f4\u63a5\u8dd1\u6700\u77ed\u8def\u4e0d\u7136\u4f1aWA\u7b2c\u516d\u4e2a\u70b9\n\n2.INF\u4e0d\u80fd\u5f00\u592a\u5927\uff08\u7b2c\u4e09\u4e2a\u70b9\u4f1a\u7206\u6210\u8d1f\u6570\uff09\n\n3.\u6570\u7ec4\u8981\u5361\u7a7a\u95f4\uff0c\u4e0d\u7136\u8981\u4e48RE\u8981\u4e48MLE\n\n4.\u5982\u679c\u6570\u7ec4\u592a\u5927\u6700\u597d\u4e0d\u7528memset\uff0c\u6700\u597d\u81ea\u5df1\u7ed9\u6570\u7ec4\u8d4b\u503c\uff0c\u8fd9\u6837\u4f1a\u5feb\u5f88\u591a\n\n5.\u6ce8\u610f\u4f4d\u8fd0\u7b97\u7684\u5148\u540e\u987a\u5e8f\uff0c\u80fd\u6253\u62ec\u53f7\u5c31\u6253\u62ec\u53f7\u3002\n\n#\u4ee3\u7801\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <queue>\n\n#define rg register int\n#define RG register\n#define ll long long\n#define il inline\n#define INF 1000000000 // INF \u4e0d\u8981\u592a\u5927\u4f1a\u98de\u8d77\n#define mk make_pair\nusing namespace std;\ntypedef pair <int,int> P;\n\nil int gi()\n{\n    rg x=0,o=0;RG char ch=getchar();\n    while((ch!='-')&&(ch<'0'||ch>'9')) ch=getchar();\n    if(ch=='-') o=1,ch=getchar();\n    while('0'<=ch&&ch<='9') x=(x<<3)+(x<<1)+ch-'0',ch=getchar();\n    return o?-x:x;\n}\n\nstruct Edge{int to,nxt,w;}e[300001];\nint Ehead[30001],Ecnt=1;\nil void Eadd(rg u,rg v,rg w)\n{\n    e[Ecnt]=(Edge){v,Ehead[u],w};\n    Ehead[u]=Ecnt++;\n    e[Ecnt]=(Edge){u,Ehead[v],w};\n    Ehead[v]=Ecnt++;\n}\n\nint n,m,k,g;\nint r[32],dis[32][30001];\npriority_queue <P,vector<P>,greater<P> > Q;\nil void dijkstra(rg rt)\n{\n    for(rg i=1;i<=n;++i) dis[rt][i]=INF;\n    while(!Q.empty()) Q.pop();\n    Q.push(mk(0,rt));dis[rt][rt]=0;\n    while(!Q.empty())\n    {\n        rg u=Q.top().second;Q.pop();\n        for(rg i=Ehead[u];i;i=e[i].nxt)\n        {\n            rg v=e[i].to;\n            if(dis[rt][v]>dis[rt][u]+e[i].w)\n            {\n                dis[rt][v]=dis[rt][u]+e[i].w;\n                Q.push(mk(dis[rt][v],v));\n            }\n        }        \n    }\n}\n// dijkstra \u65e0vis\u6570\u7ec4\n\nint f[1<<20][25],Ans=INF;\nint a,b,u,v,w;\nint main()\n{\n    n=gi(),m=gi(),k=gi();\n    for(rg i=1;i<=m;++i)\n    {\n        u=gi(),v=gi(),w=gi();\n        Eadd(u,v,w);    \n    }\n\n    if(!k) \n    {\n        dijkstra(1);\n        printf(\"%d\",dis[1][n]);\n        return 0;\n    } //\u4e0d\u52a0\u8fd9\u4e2a\u5224\u65ad\u7b2c6\u4e2a\u70b9\u4f1aWA\n\n    g=gi();\n    for(rg i=1;i<=g;++i)\n    {\n        a=gi(),b=gi();\n        r[b] |= (1<<(a-2));\n    }\n    for(rg i=1;i<=k+1;++i)  dijkstra(i);\n    \n    for(rg i=0;i<=(1<<k)-1;++i)\n     for(rg j=1;j<=k+1;++j)\n      f[i][j]=INF;\n    // \u6570\u7ec4\u5927\u5c31\u5c3d\u91cf\u4e0d\u7528memset\n    \n    f[0][1]=0;\n    for(rg i=2;i<=k+1;++i)\n     if(!r[i])\n      f[1<<(i-2)][i]=dis[1][i];\n    \n    for(rg i=1;i<=(1<<k)-1;++i)\n     for(rg j=0;j<k;++j)\n      if(i&(1<<j))\n       for(rg l=0;l<k;++l)\n        if( !(i&(1<<l)) && (i|r[l+2])==i )\n         f[i|(1<<l)][l+2]=min(f[i|(1<<l)][l+2],f[i][j+2]+dis[j+2][l+2]);        \n    \n    for(rg i=2;i<=k+1;++i)\n     Ans=min(Ans,f[(1<<k)-1][i]+dis[i][n]);           \n      printf(\"%d\",Ans);\n    return 0;\n}\n```",
        "postTime": 1515721650,
        "uid": 47725,
        "name": "stdlifg",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3451 \u3010[POI2007]ATR-Tourist Attractions\u3011"
    }
]