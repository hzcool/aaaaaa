[
    {
        "content": "\u9996\u5148\u8981\u5148\u60f3\u660e\u767d\u600e\u4e48\u7528$LCT$\u6c42\u6700\u5c0f\u751f\u6210\u6811\n\n[~~\u4e8e\u662f\u6211\u53c8\u4e0d\u8981\u8138$QWQ$\u7684\u63a8\u8350\u4e86~~](https://www.luogu.org/blog/Soulist/solution-p3366)\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u8fd9\u9053\u9898\u600e\u4e48\u505a\n\n\u8981\u4fdd\u8bc1\u8fb9\u6743\u5dee\u6700\u5c0f\uff0c\u4e0d\u59a8\u5047\u8bbe\u5f53\u524d\u8fb9\u6743\u4e3a$k$\uff0c\u5219\u6b64\u65f6\u6211\u4eec\u9700\u8981\u6700\u5c0f\u8fb9\u6743\u6700\u5927\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u6309\u7167\u8fb9\u6743\u6392\u5e8f\u3002\n\n\u7c7b\u4f3c\u4e8e\u6c42\u6700\u5c0f\u751f\u6210\u6811\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u6bcf\u6b21\u52a0\u8fb9\u540e\u90fd\u9700\u8981\u5224\u4e00\u4e0b\u8fde\u901a\u6027\uff0c\u5982\u679c\u8054\u901a\u5c31\u51cf\u53bb\u8fb9\u6743\u4e2d\u6700\u5c0f\u503c\u3002\n\n\u81f3\u4e8e\u5982\u4f55\u6c42\u51fa\u6240\u6709\u8fb9\u6743\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u56e0\u4e3a\u5df2\u7ecf\u6392\u5e8f\uff0c\u6240\u4ee5\u6709\u4e0b\u6807\u5c0f\u7684\u70b9\u5176\u70b9\u6743\u4e00\u5b9a\u5c0f\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528 $book$ \u6570\u7ec4\u6765\u6807\u8bb0\u90a3\u4e9b\u70b9\u5df2\u7ecf\u88ab\u6807\u8bb0\uff0c\u7136\u540e\u7c7b\u4f3c\u4e0e\u961f\u5217\u7684\u4e00\u4e2a\u4e00\u4e2a\u5f39$?$\n\n\u5f53\u7136\uff0c\u9700\u8981\u7edf\u8ba1\u7b54\u6848\u7684\u65f6\u5019\uff0c\u8fd8\u8981\u5224\u65ad$Id_{num}$\uff08\u5408\u5e76\u6b21\u6570\uff09\uff08\u5f53\u524d\u8054\u901a\u5757\u6570\u91cf\u662f\u5426\u4e3a1\uff09\u662f\u5426\u4e3a$n-1$\n\n\u533a\u522b\u4e0e\u6700\u5c0f\u751f\u6210\u6811\u7684\u6a21\u677f\uff0c\u56e0\u4e3a\u6211\u4eec\u6709\u7f16\u53f7\u5c0f\u7684\u70b9\u4e14\u4e3a\u8fb9\u7684\u70b9\u5176\u8d8a\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5199$pushup(x)$\n\n```cpp\nvoid pushup( int x ) {\n\tt[x].id = x;\n\tif( t[ls(x)].id > n && ( t[x].id <= n || t[x].id > t[ls(x)].id ) ) t[x].id = t[ls(x)].id;\n\tif( t[rs(x)].id > n && ( t[x].id <= n || t[x].id > t[rs(x)].id ) ) t[x].id = t[rs(x)].id; \n    //\u5982\u679c\u5f53\u524d\u7684\u70b9\u4e3a\u70b9\u70b9\uff0c\u800c\u513f\u5b50\u6709\u8fb9\u70b9\uff0c\u5219\u590d\u5236\u513f\u5b50\n    //\u5982\u679c\u5f53\u524d\u70b9\u4f4d\u8fb9\u70b9\uff0c\u4f46\u7f16\u53f7\u5927\u4e8e\u513f\u5b50\uff0c\u4e5f\u590d\u5236\u513f\u5b50\n}\n```\n\n\u5176\u4ed6\u90e8\u5206\u4e0e\u6700\u5c0f\u751f\u6210\u6811\u505a\u6cd5\u5f02\u65a7\u540c\u5de5\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint read() {\n\tchar cc = getchar(); int cn = 0, flus = 1;\n\twhile(cc < '0' || cc > '9') {  if( cc == '-' ) flus = -flus;  cc = getchar();  }\n\twhile(cc >= '0' && cc <= '9')  cn = cn * 10 + cc - '0', cc = getchar();\n\treturn cn * flus;\n}\n#define ls(x) t[x].son[0]\n#define rs(x) t[x].son[1]\n#define rep( i, s, t ) for( register int i = s; i <= t; ++ i )\n#define inf 99999999\nconst int M = 200000 + 5;\nconst int N = 50000 + 5;\nstruct E{\n\tint from, to, w;\n}e[M * 2];\nstruct LCT {\n\tint son[2], fa, id;\n\tbool mark;\n}t[2 * M];\nint ans, Idnum, Idnex, st[M * 2], book[2 * N], n;\nbool cmp( E x, E y ) {\n\treturn x.w < y.w;\n}\nbool isroot( int x ) {\n\treturn ( ls(t[x].fa) != x ) && ( rs(t[x].fa) != x );\n}\nvoid pushup( int x ) {\n\tt[x].id = x;\n\tif( t[ls(x)].id > n && ( t[x].id <= n || t[x].id > t[ls(x)].id ) ) t[x].id = t[ls(x)].id;\n\tif( t[rs(x)].id > n && ( t[x].id <= n || t[x].id > t[rs(x)].id ) ) t[x].id = t[rs(x)].id;\n}\nvoid pushmark( int x ) {\n\tif( t[x].mark ) {\n\t\tt[x].mark = 0, t[ls(x)].mark ^= 1, t[rs(x)].mark ^= 1;\n\t\tswap( ls(x), rs(x) );\n\t}\n}\nvoid rotate( int x ) {\n\tint f = t[x].fa, ff = t[f].fa, qwq = ( rs(f) == x );\n\tt[x].fa = ff;\n\tif( !isroot(f) ) t[ff].son[rs(ff) == f] = x;\n\tt[t[x].son[qwq ^ 1]].fa = f, t[f].son[qwq] = t[x].son[qwq ^ 1];\n\tt[f].fa = x, t[x].son[qwq ^ 1] = f;\n\tpushup(f), pushup(x); \n}\nvoid Splay( int x ) {\n\tint top = 0, now = x; st[++top] = now;\n\twhile( !isroot(now) ) st[++top] = ( now = t[now].fa );\n\twhile( top ) pushmark( st[top--] );\n\twhile( !isroot(x) ) {\n\t\tint f = t[x].fa, ff = t[f].fa;\n\t\tif( !isroot(f) ) ( ( rs(ff) == f ) ^ ( rs(f) == x ) ) ? rotate(x) : rotate(f);\n\t\trotate(x);\n\t}\n}\nvoid access( int x ) {\n\tfor( int y = 0; x; y = x, x = t[y].fa ) \n\t\tSplay( x ), t[x].son[1] = y, pushup(x);\n}\nvoid makeroot( int x ) {\n\taccess(x), Splay(x), t[x].mark ^= 1, pushmark( x );\n}\nint findroot( int x ) {\n\taccess( x ), Splay( x ), pushmark(x);\n\twhile( ls(x) ) pushmark( x = ls(x) );\n\treturn x;\n}\nvoid split( int x, int y ) {\n\tmakeroot( x ), access( y ), Splay( y );\n}\nbool check( int x, int y ) {\n\tmakeroot( x );\n\treturn findroot(y) != x;\n}\nvoid link( int x, int y ) {\n\tmakeroot( x );\n\tt[x].fa = y;\n} \nsigned main()\n{\n\tn = read(); int m = read(), ll = 0, x, y, now;\n\t\n\trep( i, 1, m )  e[i].from = read(), e[i].to = read(), e[i].w = read();\n\tsort( e + 1, e + m + 1, cmp );\n\t\n\tIdnex = n, ll = 1, ans = inf;\n\t\n\trep( i, 1, m ) {\n\t\t++Idnex;\n\t\tx = e[i].from, y = e[i].to;\n\t\tif( e[i].to == e[i].from ) { book[i] = 1; continue; }\n\t\t\n\t\tif( check( e[i].from, e[i].to ) )\n\t\t\tlink( e[i].from, Idnex ), link( Idnex, e[i].to ), ++ Idnum;\n\t\telse {\n\t\t\tsplit( x, y ), now = t[y].id;\n\t\t\tbook[now - n] = 1, Splay( now );\n\t\t\tt[ls(now)].fa = t[rs(now)].fa = 0;\n\t\t\tlink( x, Idnex ), link( Idnex, y );\n\t\t}\n\t\twhile( book[ll] && ll <= i ) ++ ll; \n\t\tif( Idnum >= n - 1 ) ans = min( ans, e[i].w - e[ll].w );\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n\n```\n\n```",
        "postTime": 1553091458,
        "uid": 30036,
        "name": "Soulist",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4234 \u3010\u6700\u5c0f\u5dee\u503c\u751f\u6210\u6811\u3011"
    },
    {
        "content": "\u548c\u9b54\u6cd5\u68ee\u6797\u6709\u70b9\u50cf\uff0c\u90fd\u662f\u52a8\u6001\u7ef4\u62a4\u6700\u5c0f\u751f\u6210\u6811\uff08\u53ef\u53c2\u8003\u4e00\u4e0b[Blog\u7684LCT\u603b\u7ed3](http://www.cnblogs.com/flashhu/p/8324551.html)\u76f8\u5173\u90e8\u5206\uff09\n\n\u81f3\u4e8e\u4ece\u5c0f\u5230\u5927\u8fd8\u662f\u4ece\u5927\u5230\u5c0f\u5f53\u7136\u65e0\u6240\u8c13\u5566\uff0c\u6211\u662f\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u6bcf\u6b21\u679a\u4e3e\u8fb9\uff0c\u8fd8\u6ca1\u8fde\u901a\u5c31\u8fde\uff0c\u5df2\u8fde\u901a\u5c31\u66ff\u6362\u73af\u4e0a\u6700\u5c0f\u7684\u4e00\u6761\u8fb9\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u6700\u4f18\u3002\u5982\u679c\u5df2\u7ecf\u6784\u6210\u4e86\u751f\u6210\u6811\uff0c\u5c31\u53ef\u4ee5\u66f4\u65b0\u7b54\u6848\uff0c\u56e0\u4e3a\u5f53\u524d\u679a\u4e3e\u5230\u7684\u4e00\u5b9a\u662f\u751f\u6210\u6811\u91cc\u6700\u5927\u7684\uff0c\u6240\u4ee5\u76f4\u63a5\u7528\u5f53\u524d\u51cf\u53bb\u6700\u5c0f\u66f4\u65b0\u7b54\u6848\u3002\n\n\u81f3\u4e8e\u6700\u5c0f\u7684\u600e\u6837\u7ef4\u62a4\uff0c\u5176\u5b9e\u6839\u672c\u4e0d\u9700\u8981\u4ec0\u4e48\u522b\u7684set\u4ec0\u4e48\u7684\u6570\u636e\u7ed3\u6784\u3002\u53ea\u8981\u6807\u8bb0\u4e00\u4e0b\u5728\u751f\u6210\u6811\u4e2d\u7684\u8fb9\uff0c\u518d\u641e\u4e00\u4e2a\u6307\u9488\u6307\u5411\u5728\u6811\u4e2d\u6700\u5c0f\u7684\u8fb9\u5c31\u597d\u5566\u3002\u5f53\u6700\u5c0f\u7684\u8fb9\u4e5f\u88ab\u66ff\u6362\uff0c\u5c31\u628a\u6307\u9488\u540e\u79fb\uff0c\u76f4\u5230\u518d\u627e\u5230\u4e00\u4e2a\u5728\u6811\u4e2d\u7684\u8fb9\u4e3a\u6b62\u3002\n\n\u5410\u69fd\uff1a\u6ce8\u610f\u4e86\uff0c\u6709\u81ea\u73af\uff01\uff01\uff01\u6211~~\u672c\u6765\u8be51A\u5374~~\u8c03\u8bd5\u4e862h\uff0c\u672c\u5730\u62ff\u7ba1\u7406\u5458\u7684\u6807\u7a0b\u81ea\u9020\u6570\u636e\uff08\u6ca1\u9020\u81ea\u73af\uff09\u5bf9\u62cd\u51e0\u5341\u4e07\u7ec4\u65e0\u95ee\u9898\uff1f\uff01\n\n\u5361\u5e38\u7684\u5730\u65b9\u633a\u591a\u7684\uff0c\u5728LCT\u4e2d\u5e94\u8be5\u7b97\u633a\u5feb\u7684\u5427\uff08\u6bd4\u4e0b\u9762Niko\u5de8\u4f6c\u7684LCT\u4ee3\u7801\u5feb\u4e86$1 \\over 3$\u5de6\u53f3\uff0c\u4f46\u662fNiko\u5de8\u4f6c\u5199\u4e86\u4e2arank1\u7684\u4ee3\u7801\uff1f\uff01\u4ed4\u7ec6\u770b\u4e86\u4e0b\uff0c\u662f\u4f18\u5316\u7684\u66b4\u529b\uff1f\u8c8c\u4f3c\u4f1a\u88ab\u5361\u6210$O(NM)$\uff1f\uff01\u5f3a\u70c8\u5efa\u8bae\u518d\u52a0\u5f3a\u6570\u636e\u3002\u3002\u3002\u3002\u3002\u3002\n```\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n#define R register int\n#define I inline void\n#define lc c[x][0]\n#define rc c[x][1]\n#define in(z) ini=&z;\\\n    while(*++q<'-');\\\n    *ini=*q&15;\\\n    while(*++q>'-')*ini*=10,*ini+=*q&15//\u8bfb\u5165\u5361\u5e38\nconst int N=50001,M=200009,L=N+M;\nint f[L],c[L][2],mn[L],ff[N];\nunsigned short v[L];//short\u5361\u5e38\nbool r[L],vis[M];\nchar str[M<<6];\nstruct EDGE{\n    int u,v,l;\n    inline bool operator<(EDGE x)const{\n        return l<x.l;\n    }\n}e[M];\ninline bool nroot(R x){return c[f[x]][0]==x||c[f[x]][1]==x;}\ninline int get(R x,R y){return v[x]<v[y]?x:y;}\nI pushup(R x){mn[x]=get(x,get(mn[lc],mn[rc]));}\nI pushdown(R x){\n    if(r[x]){\n        R t=lc;\n        r[lc=rc]^=1;r[rc=t]^=1;r[x]=0;\n    }\n}\nI pushall(R x){\n    if(nroot(x))pushall(f[x]);\n    pushdown(x);\n}\nI rotate(R x){\n    R y=f[x],z=f[y],k=c[y][1]==x,w=c[x][!k];\n    if(nroot(y))c[z][c[z][1]==y]=x;c[x][!k]=y;c[y][k]=w;\n    f[w]=y;f[y]=x;f[x]=z;\n    pushup(y);\n}\nI splay(R x){\n    R y=x;\n    pushall(x);\n    while(nroot(x)){\n        if(nroot(y=f[x]))\n            rotate((c[y][0]==x)^(c[f[y]][0]==y)?x:y);\n        rotate(x);\n    }\n    pushup(x);\n}\nI access(R x){\n    for(R y=0;x;x=f[y=x])\n        splay(x),rc=y,pushup(x);\n}\nI mroot(R x){\n    access(x);splay(x);\n    r[x]^=1;\n}\nI link(R i){//\u5361\u5e38\u7248\u5199\u6cd5\n    mroot(e[i].u);\n    f[f[e[i].u]=N+i]=e[i].v;\n}\nI cut(R x){//\u4e5f\u662f\u5361\u5e38\u7248\u5199\u6cd5\n    access(e[x-N].u);splay(x);\n    lc=rc=f[lc]=f[rc]=0;\n}\nint getf(R x){//\u5e76\u67e5\u96c6\u5361\u5e38\n    if(x==ff[x])return x;\n    return ff[x]=getf(ff[x]);\n}\nint main(){\n    fread(str,1,sizeof(str),stdin);//fread\u5361\u5e38\n    R n,m,i,x,y,h,cnt,ans,*ini;\n    register char*q=str-1;\n    in(n);in(m);\n    for(i=0;i<=n;++i)\n        ff[i]=i,v[i]=-1;\n//-1\u653e\u5728unsigned\u91cc\u7b49\u4e8e\u662f\u6781\u5927\u503c\uff0c\u6ce8\u610fv[0]\u4e5f\u6539\u4e86\n    for(i=1;i<=m;++i){\n        in(e[i].u);in(e[i].v);in(e[i].l);\n    }\n    sort(e+1,e+m+1);\n    for(cnt=h=i=1;i<=m;++i){\n        v[i+N]=e[i].l;\n        if(getf(x=e[i].u)!=getf(y=e[i].v))\n        {\n            vis[i]=1,link(i),ff[ff[x]]=ff[y],++cnt;\n            if(cnt==n)ans=e[i].l-e[h].l;\n//\u521a\u5b8c\u5168\u5efa\u597d\u751f\u6210\u6811\u8981\u9a6c\u4e0a\u66f4\u65b0\u7b54\u6848\n        }\n        else{\n            if(x==y)continue;\n            vis[i]=1;\n            mroot(x);\n            access(y);splay(y);\n            vis[mn[y]-N]=0;while(!vis[h])++h;//\u7ef4\u62a4\u597d\u6700\u5c0f\u8fb9\n            cut(mn[y]);link(i);\n            if(cnt==n)ans=min(ans,e[i].l-e[h].l);\n        }\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1521120136,
        "uid": 61325,
        "name": "FlashHu",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4234 \u3010\u6700\u5c0f\u5dee\u503c\u751f\u6210\u6811\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c$QwQ$](https://ctz45562.github.io/2019/02/28/%E9%A2%98%E8%A7%A3-%E6%B4%9B%E8%B0%B7-P4234-%E3%80%90%E6%9C%80%E5%B0%8F%E5%B7%AE%E5%80%BC%E7%94%9F%E6%88%90%E6%A0%91%E3%80%91/)\n\n[\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P4234)\n\n\u9996\u5148\u5c06\u8fb9\u6392\u5e8f\uff0c\u4f9d\u6b21\u5c1d\u8bd5\u52a0\u8fb9\u3002\u4e24\u4e2a\u70b9\u4e0d\u8fde\u901a\u5c31\u8fde\uff0c\u5426\u5219\u628a\u8fd9\u6761\u8fb9\u53d6\u4ee3\u4e24\u70b9\u4e4b\u95f4\u6743\u503c\u6700\u5c0f\u7684\u8fb9\u3002\u53ef\u4ee5\u7528$LCT$\u62c6\u8fb9\u4e3a\u70b9\u7ef4\u62a4\u3002\n\n\u8003\u8651\u8fd9\u79cd\u505a\u6cd5\u7684\u6b63\u786e\u6027\uff1a\n\n\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u53ef\u4ee5\u7406\u89e3\u4e3a**\u679a\u4e3e\u7b54\u6848\u751f\u6210\u6811\u7684\u6700\u5927\u503c**\uff08\u6bd4\u5b83\u5927\u7684\u90fd\u5728\u540e\u9762\u8fd8\u6ca1\u6709\u52a0\uff09\u3002\u540c\u65f6\u6700\u5c0f\u503c\u4e5f\u8981\u5c3d\u91cf\u5927\uff0c\u56e0\u6b64\u7528\u8f83\u5927\u7684\u8fb9\u66ff\u6362\u8f83\u5c0f\u7684\u8fb9\u4e00\u5b9a\u66f4\u4f18\u3002\u540c\u65f6\u4e4b\u524d\u679a\u4e3e\u7684\u8fb9\u4e5f\u662f\u7528\u8f83\u5927\u7684\u8fb9\u66ff\u6362\u8f83\u5c0f\u7684\u8fb9\uff0c\u4e5f\u5c31\u6700\u5927\u5316\u4e86\u6700\u5c0f\u503c\u3002\n\n\u8fd9\u6837\u53ea\u8981\u5f53\u524d\u5df2\u7ecf\u6784\u6210\u4e86\u751f\u6210\u6811\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u66f4\u65b0\u7b54\u6848\u4e86\u3002\u6700\u5927\u8fb9\u5c31\u662f\u5f53\u524d\u679a\u4e3e\u7684\u8fb9\uff0c\u6700\u5c0f\u8fb9\u53ef\u4ee5\u7528\u5e73\u8861\u6811\u7ef4\u62a4\u3002\uff08\u4e00\u5f00\u59cb\u7528\u7684$multiset$\uff0c\u5565\u90fd\u6ca1\u60f3\u76f4\u63a5$erase$\uff0c\u6ca1\u60f3\u5230\u4f1a\u628a\u6240\u6709\u7684\u5143\u7d20\u90fd\u6e05\u9664\u6389\uff0c\u8c03\u4e86\u534a\u5c0f\u65f6\u3002\u3002\u3002\u540e\u6765\u8fd8\u662f\u5199\u7684$treap$\uff09\n\n\u7ec6\u8282\u4e0a\u6ce8\u610f\u6570\u636e\u4e2d\u6709\u81ea\u73af\uff0c\u8981\u5224\u65ad\u4e00\u4e0b\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n\n#define maxn 300005\n#define inf 0x3f3f3f3f\n#define pn putchar('\\n')\n#define px(x) putchar(x)\n#define ps putchar(' ')\n#define pd puts(\"======================\")\n#define pj puts(\"++++++++++++++++++++++\")\n\nusing namespace std;\n\ninline int read(){\n\tint x=0,y=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')y=1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn y?-x:x;\n}\ntemplate<typename T>\ninline T read(){\n\tT x=0;\n\tint y=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')y=1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn y?-x:x;\n}\ninline int ran(){\n\tstatic int seed=45562;\n\treturn seed=(seed*48271LL%2147483647);\n}//\u4f18\u5316\u5e38\u6570\u7684\u968f\u673a\u6570\u51fd\u6570\nint n,m;\nstruct edge{\n\tint from,to,l;\n}e[maxn];\nstruct Link_Cut_Tree{\n\tint mi[maxn],dat[maxn],son[maxn][2],fa[maxn],rev[maxn],st[maxn];\n    //dat\u662f\u8fd9\u4e2a\u70b9\uff08\u8fb9\uff09\u7684\u6743\u503c\uff0cmi\u662f\u6743\u503c\u6700\u5c0f\u7684\u70b9\u7684\u5e8f\u53f7\n    //\u8fb9\u7684\u5e8f\u53f7+n\u4e3a\u5b83\u62c6\u6210\u7684\u70b9\n#define son(x,y) son[x][y]\n#define whson(x) (son[fa[x]][1]==x)\n#define root(x) (son[fa[x]][0]!=x&&son[fa[x]][1]!=x)\n\tinline int MIN(int x,int y){\n\t\treturn dat[x]<dat[y]?x:y;\n\t}\n\tinline void update(int node){\n\t\tmi[node]=MIN(node,MIN(mi[son(node,0)],mi[son(node,1)]));\n\t}\n\tinline void addedge(int s,int f,int wh){\n\t\tif(s)fa[s]=f;\n\t\tson(f,wh)=s;\n\t}\n\tinline void reverdown(int node){\n\t\tswap(son(node,0),son(node,1));\n\t\trev[node]^=1;\n\t}\n\tinline void pushdown(int node){\n\t\tif(rev[node]){\n\t\t\tif(son(node,0))reverdown(son(node,0));\n\t\t\tif(son(node,1))reverdown(son(node,1));\n\t\t\trev[node]=0;\n\t\t}\n\t}\n\tinline void zhuan(int x){\n\t\tint f=fa[x],gf=fa[f],wh=whson(x);\n\t\tfa[x]=gf;\n\t\tif(!root(f))son(gf,whson(f))=x;\n\t\taddedge(son(x,wh^1),f,wh);\n\t\taddedge(f,x,wh^1);\n\t\tupdate(f),update(x);\n\t}\n\tinline void splay(int x){\n\t\tint top=1,y=x;\n\t\tst[1]=x;\n\t\twhile(!root(y))st[++top]=y=fa[y];\n\t\twhile(top)pushdown(st[top--]);\n\t\twhile(!root(x)){\n\t\t\ty=fa[x];\n\t\t\tif(!root(y))\n\t\t\t\tzhuan(whson(x)^whson(y)?x:y);\n\t\t\tzhuan(x);\n\t\t}\n\t}\n\tvoid access(int x){\n\t\tfor(int y=0;x;y=x,x=fa[x])\n\t\t\tsplay(x),son(x,1)=y,update(x);\n\t}\n\tvoid makeroot(int x){\n\t\taccess(x),splay(x),reverdown(x);\n\t}\n\tvoid link(int x,int y){\n\t\tmakeroot(x);\n\t\tfa[x]=y;\n\t}\n\tvoid cut(int x,int y){\n\t\tmakeroot(x),access(y),splay(y);\n\t\tson(y,0)=fa[x]=0;\n\t\tupdate(y);\n\t}\n\tint findroot(int x){\n\t\taccess(x),splay(x);\n\t\twhile(son(x,0))pushdown(x),x=son(x,0);\n\t\treturn x;\n\t}\n\tint Get(int x,int y){\n\t\tmakeroot(x),access(y),splay(y);\n\t\treturn mi[y];\n\t}\n\tLink_Cut_Tree(){\n\t\tmemset(dat,0x3f,sizeof dat);\n\t}\n}lct;\nstruct Treap{\n\tint dat[maxn],ls[maxn],rs[maxn],ra[maxn],root,cnt;\n#define ls(x) ls[x]\n#define rs(x) rs[x]\n\tvoid right(int &node){\n\t\tint rec=ls(node);\n\t\tls(node)=rs(rec);\n\t\trs(rec)=node;\n\t\tnode=rec;\n\t}\n\tvoid left(int &node){\n\t\tint rec=rs(node);\n\t\trs(node)=ls(rec);\n\t\tls(rec)=node;\n\t\tnode=rec;\n\t}\n\tvoid insert(int &node,int d){\n\t\tif(!node){\n\t\t\tnode=++cnt;\n\t\t\tra[node]=ran();\n\t\t\tdat[node]=d;\n\t\t\treturn;\n\t\t}\n\t\tif(dat[node]<d){\n\t\t\tinsert(rs(node),d);\n\t\t\tif(ra[rs(node)]>ra[node])left(node);\n\t\t}\n\t\telse {\n\t\t\tinsert(ls(node),d);\n\t\t\tif(ra[ls(node)]>ra[node])right(node);\n\t\t}\n\t}\n\tvoid del(int &node,int d){\n\t\tif(dat[node]==d){\n\t\t\tif(ls(node)&&rs(node)){\n\t\t\t\tif(ra[ls(node)]>ra[rs(node)])right(node),del(rs(node),d);\n\t\t\t\telse left(node),del(ls(node),d);\n\t\t\t}\n\t\t\telse node=ls(node)+rs(node);\n\t\t\treturn;\n\t\t}\n\t\tif(dat[node]<d)del(rs(node),d);\n\t\telse del(ls(node),d);\n\t}\n\tint getmin(){\n\t\tint node=root;\n\t\twhile(ls(node))node=ls(node);\n\t\treturn dat[node];\n\t}\n}tr;\ninline bool cmp(edge x,edge y){\n\treturn x.l<y.l;\n}\nvoid solve(){\n\tint ans=inf,cnt=1;\n\tfor(register int i=1;i<=n;++i)\n\t\tlct.mi[i]=i;\n\tfor(register int i=n+1;i<=n+m;++i)\n\t\tlct.dat[i]=e[i-n].l,lct.mi[i]=i;\n    //lct\u521d\u59cb\u5316\n\tfor(register int i=1;i<=m;++i){\n\t\tint x=e[i].from,y=e[i].to;\n\t\tif(x==y)continue;//\u81ea\u73af\u5224\u65ad\n\t\ttr.insert(tr.root,e[i].l);\n\t\tif(lct.findroot(x)==lct.findroot(y)){\n\t\t\tint k=lct.Get(x,y);\n\t\t\tlct.cut(x,k),lct.cut(y,k);\n\t\t\ttr.del(tr.root,e[k-n].l);\n\t\t}\n\t\telse ++cnt;\n\t\tlct.link(x,i+n),lct.link(i+n,y);\n\t\tif(cnt==n)ans=min(ans,e[i].l-tr.getmin());\n        //\u5df2\u7ecf\u6784\u6210\u6811\uff0c\u7edf\u8ba1\u7b54\u6848\n\t}\n\tprintf(\"%d\\n\",ans);\n}\nint main(){\n\tn=read(),m=read();\n\tfor(register int i=1;i<=m;++i)\n\t\te[i].from=read(),e[i].to=read(),e[i].l=read();\n\tsort(e+1,e+1+m,cmp);\n\tsolve();\n}\n\n```\n\n",
        "postTime": 1551360414,
        "uid": 111762,
        "name": "_ctz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4234 \u3010\u6700\u5c0f\u5dee\u503c\u751f\u6210\u6811\u3011"
    },
    {
        "content": "[\u535a\u5ba2\u98df\u7528\u66f4\u4f73\u54e6](http://ljf-cnyali.cn/2019/08/20/LuoguP4234%E6%9C%80%E5%B0%8F%E5%B7%AE%E5%80%BC%E7%94%9F%E6%88%90%E6%A0%91-LCT/)\n\n\u9898\u76ee\u5927\u610f:\u7ed9\u5b9a\u4e00\u4e2a\u56fe\uff0c\u6c42\u8fb9\u6743\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u7684\u5dee\u503c\u6700\u5c0f\u7684\u751f\u6210\u6811\n\n\u8fd9\u79cd\u9898\u5f88\u663e\u7136\u8ddfLCT\u6709\u5173\uff0c\u9996\u5148\u5c06\u8fb9\u6743\u6309\u7167\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u56fa\u5b9a\u8fb9\u6743\u6700\u5927\u503c\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u7b54\u6848\u66f4\u4f18\uff0c\u53ea\u9700\u8981\u7ef4\u62a4\u8fb9\u6743\u6700\u5c0f\u503c\u6700\u5927\u5373\u53ef\n\nLCT\u7ef4\u62a4\u6700\u5c0f\u503c$Min$\u548c\u70b9\u6743\u503c\u6700\u5c0f\u7684\u4f4d\u7f6e$MinPos$\uff0c\u8003\u8651\u5f53\u524d\u6dfb\u52a0$u,v,w$\u7684\u4e00\u6761\u8fb9\n\n-   \u5982\u679c$u,v$\u4e0d\u8fde\u901a\uff0c\u76f4\u63a5$Link$\n\n-   $Split(u,v)$\u627e\u5230$MinPos$\u5e76\u5220\u53bb\uff0c\u8fde\u4e0a$u,v$\u8fd9\u6761\u8fb9\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u8fb9\u6743\u6700\u5c0f\u503c\u6700\u5927\n\n\u8fd9\u9053\u9898\u7ec6\u8282\u5728\u4e8e\u5982\u4f55\u4fdd\u8bc1\u5f53\u524d\u662f\u4e00\u68f5\u6700\u5c0f\u751f\u6210\u6811\uff0c\u53ef\u4ee5\u62ff\u4e00\u4e2a$num$\u8ba1\u6570\uff0c\u5982\u679c\u9047\u89c1\u7b2c\u4e00\u79cd\u60c5\u51b5\u5c31$++num$\uff0c\u5f53$num=n-1$\u7684\u65f6\u5019\u5c31\u662f\u4e00\u68f5\u751f\u6210\u6811\n\n\u56e0\u4e3a\u6bcf\u6761\u8fb9\u53ea\u4f1a\u88ab\u52a0\u5165\u548c\u5220\u9664\u4e00\u6b21\uff0c\u8bb0\u5f55\u6700\u5c0f\u751f\u6210\u6811\u7684\u6700\u5c0f\u503c\u53ef\u4ee5\u76f4\u63a5\u7ed9\u6bcf\u6761\u8fb9\u8bb0\u5f55\u4e00\u4e2a$vis$\uff0c\u5224\u65ad\u7b54\u6848\u7684\u65f6\u5019\u66b4\u529b\u8df3\u5373\u53ef\n\n\u6ce8\u610f\u6709\u81ea\u73af\u9700\u8981\u7279\u5224\n\n```cpp\n/***************************************************************\n\tFile name: P4234.cpp\n\tAuthor: ljfcnyali\n\tCreate time: 2019\u5e7408\u670818\u65e5 \u661f\u671f\u65e5 11\u65f602\u520649\u79d2\n***************************************************************/\n#include<bits/stdc++.h>\n\nusing namespace std;\n\n#define REP(i, a, b) for ( int i = (a), _end_ = (b); i <= _end_; ++ i ) \n#define mem(a) memset ( (a), 0, sizeof ( a ) ) \n#define str(a) strlen ( a ) \n#define ls(x) Tree[x].son[0]\n#define rs(x) Tree[x].son[1]\n#define fa(x) Tree[x].fa\ntypedef long long LL;\n\nconst int maxn = 5000010;\n\nstruct node\n{\n    int son[2], Min, id, fa, lazy;\n} Tree[maxn];\n\nint n, m, w[maxn], num, Min, ans = 0x3f3f3f3f;\nbool vis[maxn];\n\nstruct Node\n{\n    int u, v, w;\n    bool operator < (const Node &a) const { return w < a.w; } \n} a[maxn];\n\ninline bool IsRoot(int x) { return (ls(fa(x)) == x || rs(fa(x)) == x) ? false : true; }\n\ninline void PushUp(int x)\n{\n    Tree[x].Min = w[x]; Tree[x].id = x;\n    if ( ls(x) && Tree[ls(x)].Min < Tree[x].Min ) { Tree[x].Min = Tree[ls(x)].Min; Tree[x].id = Tree[ls(x)].id; }\n    if ( rs(x) && Tree[rs(x)].Min < Tree[x].Min ) { Tree[x].Min = Tree[rs(x)].Min; Tree[x].id = Tree[rs(x)].id; }\n}\n\ninline void Update(int x) { Tree[x].lazy ^= 1; swap(ls(x), rs(x)); }\n\ninline void PushDown(int x)\n{\n    if ( !Tree[x].lazy ) return ;\n    if ( ls(x) ) Update(ls(x));\n    if ( rs(x) ) Update(rs(x));\n    Tree[x].lazy = 0;\n}\n\ninline void Rotate(int x)\n{\n    int y = fa(x), z = fa(y), k = rs(y) == x, w = Tree[x].son[!k];\n    if ( !IsRoot(y) ) Tree[z].son[rs(z) == y] = x;\n    fa(x) = z; fa(y) = x; if ( w ) fa(w) = y;\n    Tree[x].son[!k] = y; Tree[y].son[k] = w;\n    PushUp(y);\n}\n\ninline void Splay(int x)\n{\n    stack<int> Stack; int y = x, z; Stack.push(y);\n    while ( !IsRoot(y) ) Stack.push(y = fa(y));\n    while ( !Stack.empty() ) { PushDown(Stack.top()); Stack.pop(); }\n    while ( !IsRoot(x) ) \n    {\n        y = fa(x); z = fa(y);\n        if ( !IsRoot(y) ) Rotate((ls(y) == x) ^ (ls(z) == y) ? x : y);\n        Rotate(x);\n    }\n    PushUp(x);\n}\n\ninline void Access(int root) { for ( int x = 0; root; x = root, root = fa(root) ) { Splay(root); rs(root) = x; PushUp(root); } }\n\ninline void MakeRoot(int x) { Access(x); Splay(x); Update(x); }\n\ninline int FindRoot(int x) { Access(x); Splay(x); while ( ls(x) ) x = ls(x); Splay(x); return x; }\n\ninline void Link(int u, int v) { MakeRoot(u); if ( FindRoot(v) != u ) fa(u) = v; }\n\ninline void Cut(int u, int v) { MakeRoot(u); if ( FindRoot(v) != u || fa(v) != u || ls(v) ) return ; fa(v) = rs(u) = 0; }\n\ninline void Split(int u, int v) { MakeRoot(u); Access(v); Splay(v); }\n\ninline bool Check(int u, int v) { MakeRoot(u); return FindRoot(v) == u; }\n\nint main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n#endif\n    scanf(\"%d%d\", &n, &m);\n    REP(i, 1, m) scanf(\"%d%d%d\", &a[i].u, &a[i].v, &a[i].w);\n    sort(a + 1, a + m + 1);\n    REP(i, 1, n) w[i] = 0x3f3f3f3f; REP(i, n + 1, n + m) w[i] = a[i - n].w;\n    REP(i, 1, m)\n    {\n        if ( a[i].u == a[i].v ) continue ;\n        if ( !Check(a[i].u, a[i].v) ) \n        {\n            Link(a[i].u, i + n); \n            Link(i + n, a[i].v);\n            ++ num; vis[i] = true;\n        }\n        else\n        {\n            Split(a[i].u, a[i].v);\n            int x = Tree[a[i].v].id; Splay(x); fa(ls(x)) = fa(rs(x)) = 0;\n            vis[x - n] = false;\n            Link(a[i].u, i + n); Link(i + n, a[i].v);\n            vis[i] = true;\n        }\n        if ( num == n - 1 ) \n        {\n            while ( !vis[Min] ) ++ Min;\n            ans = min(ans, a[i].w - a[Min].w); \n        }\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1566261675,
        "uid": 8618,
        "name": "\u6c34\u5e93\u4e2d\u7684\u6c34\u5e93",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4234 \u3010\u6700\u5c0f\u5dee\u503c\u751f\u6210\u6811\u3011"
    },
    {
        "content": "----\n\n\u5410\u69fd\n\n\u7b2c\u4e00\u773c\uff1a\u9b54\u6cd5\u68ee\u6797\uff0c***\u9898\uff0c\u79d2\u4e86.\n\n\u7136\u540e\u53d1\u73b0\u81ea\u5df1\u4e0d\u4f1a\u7ef4\u62a4\u5168\u5c40\u7684\u6700\u5927\u503c\n\n----\n\u9996\u5148\u53ef\u4ee5\u6309\u7167\u9b54\u6cd5\u68ee\u6797\u90a3\u4e2a\u9898\u76f4\u63a5\u505a\uff0c\u4ee4$a_i=w,b_i=-w$\u5373\u53ef.\n\n[~~\u65e0\u803b\u6302blog~~](https://www.luogu.org/blog/qwaszx/solution-p2387#)\n\n\u6309\u7167$w$\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u7136\u540e\u4f9d\u6b21\u52a0\u5165\u8fb9\u5e76\u4e14\u7ef4\u62a4\u6700\u5c0f\u751f\u6210\u6811\uff0c\u5f53\u524d\u7684\u8fb9\u5373\u6700\u5c0f\u503c\uff0c\u6211\u4eec\u9700\u8981\u6c42\u51fa\u6700\u5c0f\u7684\u6700\u5927\u503c\uff0c\u5373\u6700\u5c0f\u74f6\u9888\u751f\u6210\u6811.\u76f4\u63a5\u7ef4\u62a4\u4e00\u4e2a\u6700\u5c0f\u751f\u6210\u6811\u5373\u53ef.\n\n\u5173\u4e8e\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u6700\u5927\u8fb9\u7684\u5904\u7406emm\n\n\u4e00\u4e2a\u7b28\u529e\u6cd5\u662f\u6309\u7167\u7ef4\u62a4\u5b50\u6811\u90a3\u6837\uff0c\u5f00\u4e00\u4e2a$multiset$\u6216\u8005\u5e73\u8861\u6811.\n\n\u7136\u800c\u5e76\u4e0d\u9700\u8981\uff0c\u56e0\u4e3a\u8fb9\u5168\u90fd\u662f\u4e4b\u524d\u7684\u8fb9\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6807\u8bb0\u54ea\u4e9b\u8fb9\u88ab\u5220\u9664\u4e86\u5373\u53ef.\u7136\u540e\u6bcf\u6b21\u53d6\u7b2c\u4e00\u4e2a\u672a\u88ab\u5220\u9664\u7684\u8fb9\u5c31\u597d\u4e86.\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define nroot(x) (ch[f[x]][0]==x||ch[f[x]][1]==x)\nusing namespace std;\nconst int N=5e5;\nstruct Edge{int u,v,w;}e[N];\nint ch[N][2],f[N],rev[N],w[N],id[N],n,tot,m,ans=1e9,maxx=1,vis[N];\nstruct Node{int w,id;bool operator <(const Node &a)const{return w<a.w;}}s[N];\nstruct DSU\n{\n\tint f[N];\n\tvoid clear(int n){for(int i=1;i<=n;i++)f[i]=i;}\n\tint find(int x){return f[x]==x?x:f[x]=find(f[x]);}\n\tvoid merge(int x,int y){x=find(x),y=find(y);f[x]=y;}\n}bcj;\nvoid reverse(int x){swap(ch[x][0],ch[x][1]);rev[x]^=1;}\nvoid pushdown(int x){if(rev[x])reverse(ch[x][0]),reverse(ch[x][1]),rev[x]=0;}\nvoid pushall(int x){if(nroot(x))pushall(f[x]);pushdown(x);}\nvoid pushup(int x){s[x]=max((Node){w[x],x},max(s[ch[x][0]],s[ch[x][1]]));}\nvoid rotate(int x)\n{\n\tint y=f[x],z=f[y],wh=ch[y][1]==x,w=ch[x][wh^1];\n\tif(nroot(y))ch[z][ch[z][1]==y]=x;\n\tch[x][wh^1]=y,ch[y][wh]=w;\n\tf[w]=y,f[y]=x,f[x]=z;pushup(y);\n}\nvoid splay(int x)\n{\n\tpushall(x);\n\twhile(nroot(x))\n\t{\n\t\tint y=f[x],z=f[y];\n\t\tif(nroot(y))rotate((ch[z][1]==y)^(ch[y][1]==x)?x:y);\n\t\trotate(x);\n\t}\n\tpushup(x);\n}\nvoid access(int x){for(int y=0;x;y=x,x=f[x])splay(x),ch[x][1]=y,pushup(x);}\nvoid makeroot(int x){access(x),splay(x),reverse(x);}\nvoid split(int x,int y){makeroot(x),access(y),splay(y);}\nvoid link(int x,int y){makeroot(x),f[x]=y;}\nvoid cut(int x,int y){split(x,y),ch[y][0]=f[x]=0;pushup(y);}\nvoid merge(int x,int y,int z)\n{\n\tif(bcj.find(x)!=bcj.find(y))\n\t{\n\t\t++tot;bcj.merge(x,y);\n\t\tlink(x,z),link(y,z);return;\n\t}\n\tsplit(x,y);\n\tif(w[z]<s[y].w)\n\t{\n\t\tint u=e[s[y].id-n].u,v=e[s[y].id-n].v,w=s[y].id;vis[w-n]=1;\n\t\tcut(u,w),cut(v,w),link(x,z),link(y,z);\n\t}\n\telse vis[z-n]=1;\n}\nint cmp(const Edge &a,const Edge &b){return a.w>b.w;}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u,v,w;\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\te[i]=(Edge){u,v,w};\n\t}\n\tsort(e+1,e+m+1,cmp);bcj.clear(n);\n\tfor(int i=1;i<=m;i++)w[i+n]=e[i].w,s[i+n]=(Node){w[i+n],i+n};\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u=e[i].u,v=e[i].v,w=e[i].w;\n\t\tif(u==v){vis[i]=1;continue;}//cout<<u<<\" \"<<v<<\" \"<<w<<\" \";\n\t\tmerge(u,v,i+n);\n\t\tif(tot==n-1)\n\t\t{\n\t\t\twhile(vis[maxx])++maxx;//cout<<e[maxx].w<<\" \"<<w<<endl;\n\t\t\tans=min(ans,e[maxx].w-w);\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n}\n```",
        "postTime": 1556852756,
        "uid": 22136,
        "name": "qwaszx",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4234 \u3010\u6700\u5c0f\u5dee\u503c\u751f\u6210\u6811\u3011"
    },
    {
        "content": "\n###### \u4ee5\u4e0b\u662f\u4e00\u4e9b~~\u60c5~~\uff08fei\uff09~~\u8282~~\uff08hua\uff09\n------------\n\n> ### $Two\\ Month\\ Later$\n>> #### $After\\ test$\n>>>[Anonymous31416](https://www.luogu.com.cn/user/360930):\n\n>>>\u4eca\u5929\u7684\u6700\u5c0f\u5dee\u503c\u751f\u6210\u6811\u597d\u7b80\u5355\u554a\uff01\u5c31\u662f\u677f\u5b50\u9898\uff01\u6211\u79d2\u5207\u4e86\uff01\n\n>>#### $Two\\ minutes\\ later$\n>>>[Anonymous31416](https://www.luogu.com.cn/user/360930):\n\n>>>\u8bf6\uff0c\u6d1b\u8c37\u4e0a\u600e\u4e48\u4e5f\u6709\u8fd9\u9053\u9898\uff1f\n\n>>#### $After\\ dinner$\n>>>[Anonymous31416](https://www.luogu.com.cn/user/360930):\n\n>>>What!\u6211\u53ea\u5f97\u4e86$30$\u5206\uff01\n\n>>#### $Another\\ fifteen\\ minutes$\n>>>[Anonymous31416](https://www.luogu.com.cn/user/360930):\n\n>>>\u6211\u7384\u5b66\u4f18\u5316\u62ff\u4e86$75$\u5206\uff01\n\n>### $Last\\ Week$\n>>$2020-12-11\\ 9\\ p.m.$\n>>>[Anonymous31416](https://www.luogu.com.cn/user/360930):\n\n>>>\u6211\u6700\u5c0f\u5dee\u503c\u751f\u6210\u6811A\u4e86\uff01\uff0c\u4e0d\u7528LCT\uff01\uff01\uff01\n\n>>>[EXODUS](https://www.luogu.com.cn/user/373699):Orz!tql!\n\n>$Now$\n>>>[EXODUS](https://www.luogu.com.cn/user/373699):\u6211\u4e5fA\u4e86\uff01\n\n#### \u4e8e\u662f\u6211\u5c31\u6765\u53d1\u9898\u89e3\u4e86\n\n###### \u4ee5\u4e0b\u662f\u6b63\u6587\u90e8\u5206\n------------\n\u9996\u5148\uff0c\u770b\u5230\u8fd9\u4e00\u9053\u9898\uff0c\u7b2c\u4e00\u4e2a\u60f3\u6cd5\u5c31\u662f\u66b4\u529b\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u679a\u4e3e\u9009\u53d6\u7684\u6700\u5c0f\u7684\u8fb9\uff0c\u5f00\u59cb\u8dd1Kruskal\u3002\u4e8e\u662f\u5c31\u6709\u4e86$75$\u5206\u3002\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#define il inline\nusing namespace std;\n\nint m,m0,n;\nstruct Edge{\n\tint u,v,w;\n}e[285714];\nint fa[142857];\nint eu,ev;\nint ans=0x3f3f3f3f,cnt;\n\nint read() {\n\tchar cc = getchar(); int cn = 0, flus = 1;\n\twhile(cc < '0' || cc > '9') {  if( cc == '-' ) flus = -flus;  cc = getchar();  }\n\twhile(cc >= '0' && cc <= '9')  cn = cn * 10 + cc - '0', cc = getchar();\n\treturn cn * flus;\n}\n\nil bool cmp(Edge x,Edge y){\n\treturn x.w<y.w;\n}\n\nil int find(int x){\n\twhile(x!=fa[x]){\n\t\tx=fa[x]=fa[fa[x]];\n\t}\n\treturn x;\n}\n\nil void init(){\n\tfor(int i=1;i<=n;i++){\n\t\tfa[i]=i;\n\t}\n}\n\nil void kruskal(){\n\tcnt=0;\n\tsort(e+1,e+m+1,cmp);\n\tfor(int i=1;i<=m;i++){\n\t\tcnt=0;\n\t\tinit();\n\t\tfor(int j=i;j<=m;j++){\n\t\t\teu=find(e[j].u);\n\t\t\tev=find(e[j].v);\n\t\t\tif(eu==ev){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfa[eu]=ev;\n\t\t\tif(ans<e[j].w-e[i].w){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(++cnt==n-1){\n\t\t\t\tans=min(ans,e[j].w-e[i].w);\t\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n\nint main(){\n\t//freopen(\"mdt.in\",\"r\",stdin);\n\t//freopen(\"mdt.out\",\"w\",stdout);\n\tn=read(),m=read();\n\tfor(int i=1;i<=m;i++){\n\t\tint u,v,w;\n\t\tu=read(),v=read(),w=read();\n\t\tif(u==v){\n\t\t\tcontinue;\n\t\t}else{\n\t\t\te[i].u=u;\n\t\t\te[i].v=v;\n\t\t\te[i].w=w;\n\t\t}\n\t}\n\tkruskal();\n\tcout<<ans;\n\treturn 0;\n}\n```\n\u4f46\u662f\u95ee\u9898\u6765\u4e86\uff0c\u7136\u540e\u5462\uff1f\n\n\u5f88\u660e\u663e\uff0c\u8fd9\u91cc\u51fa\u73b0\u4e86\u4e00\u4e9b\u4e0d\u5408\u6cd5\u7684\u72b6\u6001\u3002\u5373\u5728\u6b64\u65f6\u679a\u4e3e\u7684$i$\u7684\u7f16\u53f7$< n-1$\u65f6\uff0c\u5df2\u7ecf\u4e0d\u4f1a\u751f\u6210\u6811\u4e86\uff0c\u66f4\u4e0d\u4f1a\u51fa\u73b0\u6700\u5c0f\u751f\u6210\u6811\u4e86\u3002\u6240\u4ee5\uff0c\u8fd9\u4e9b\u72b6\u6001\u53ef\u4ee5\u51cf\u6389\u3002\n\u6240\u4ee5\u8bf4\u5c31\u53ef\u4ee5\u51fa\u73b0$93$\u5206\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<map>\n#define il inline\nusing namespace std;\n\nmap<int,bool>f;\nint m,m0,n;\nstruct Edge{\n\tint u,v,w;\n}e[285714];\nint fa[142857];\nint flag=1;\nint eu,ev;\nint ans=0x3f3f3f3f,cnt;\n\nint read() {\n\tchar cc = getchar(); int cn = 0, flus = 1;\n\twhile(cc < '0' || cc > '9') {  if( cc == '-' ) flus = -flus;  cc = getchar();  }\n\twhile(cc >= '0' && cc <= '9')  cn = cn * 10 + cc - '0', cc = getchar();\n\treturn cn * flus;\n}\n\nil bool cmp(Edge x,Edge y){\n\treturn x.w<y.w;\n}\n\nil int find(int x){\n\twhile(x!=fa[x]){\n\t\tx=fa[x]=fa[fa[x]];\n\t}\n\treturn x;\n}\n\nil void init(){\n\tfor(int i=1;i<=n;i++){\n\t\tfa[i]=i;\n\t}\n}\n\nil void kruskal(){\n\tcnt=0;\n\tsort(e+1,e+m+1,cmp);\n\tfor(int i=1;i<=m;i++){\n\t\tcnt=0;\n\t\tinit();\n\t\tfor(int j=i;j<=m;j++){\n\t\t\teu=find(e[j].u);\n\t\t\tev=find(e[j].v);\n\t\t\tif(eu==ev){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfa[eu]=ev;\n\t\t\tif(++cnt==n-1){\n\t\t\t\tans=min(ans,e[j].w-e[i].w);\t\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(cnt<n-1){\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\n\n\nint main(){\n\t//freopen(\"mdt.in\",\"r\",stdin);\n\t//freopen(\"mdt.out\",\"w\",stdout);\n\tn=read(),m0=read();\n\tfor(int i=1;i<=m0;i++){\n\t\tint u,v,w;\n\t\tu=read(),v=read(),w=read();\n\t\tif(f[w]==0&&i!=1){\n\t\t\tflag=0;\n\t\t}\n\t\tif(u==v){\n\t\t\tcontinue;\n\t\t}else{\n\t\t\te[m].u=u;\n\t\t\te[m].v=v;\n\t\t\te[m].w=w;\n\t\t\tm++;\n\t\t}\n\t}\n\tif(flag){\n\t\tcout<<0;\n\t\treturn 0;\n\t}\n\tkruskal();\n\tcout<<ans;\n\treturn 0;\n}\n```\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e00\u9053\u9898$93$\u5206\u7684\u5206\u6570\u90fd\u53ef\u4ee5\u4e0d\u7528$LCT$\u5b9e\u73b0\u3002\u90a3\u4e48\u63a5\u4e0b\u6765\u7684\u95ee\u9898\u5c31\u662f\uff0c\u5269\u4e0b\u7684$7$\u5206\u600e\u4e48\u529e\uff1f\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u5c31\u5f00\u59cb\u4e86\u7384\u5b66\u8def\u7ebf\u3002\n\n\u9996\u5148\uff0c\u672c\u7740\u4f18\u5316\u7684\u76ee\u7684\uff0c\u6211\u5728\u6211\u7684\u4ee3\u7801\u4e2d\u52a0\u5165\u4e86\n```cpp\n\tif(ans==0){\n\t\tbreak;\n   }\n```\n\u7ed3\u679c\uff0c\u7ed3\u679c\u5c31A\u4e86\uff1f\uff1f\uff01\uff01\nAC\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#define il inline\nusing namespace std;\nint m,n;\nstruct Edge{\n\tint u,v,w;\n}e[285714];\nint fa[142857];\nint flag=1;\nint eu,ev;\nint ans=0x3f3f3f3f,cnt;\n\nint read() {\n\tchar cc = getchar(); int cn = 0, flus = 1;\n\twhile(cc < '0' || cc > '9') {  if( cc == '-' ) flus = -flus;  cc = getchar();  }\n\twhile(cc >= '0' && cc <= '9')  cn = cn * 10 + cc - '0', cc = getchar();\n\treturn cn * flus;\n}\n\nil bool cmp(Edge x,Edge y){\n\treturn x.w<y.w;\n}\n\nil int find(int x){\n\twhile(x!=fa[x]){\n\t\tx=fa[x]=fa[fa[x]];\n\t}\n\treturn x;\n}\n\nil void init(){\n\tfor(int i=1;i<=n;i++){\n\t\tfa[i]=i;\n\t}\n}\n\nil void kruskal(){\n\tcnt=0;\n\tsort(e+1,e+m+1,cmp);\n\tfor(int i=1;i<=m;i++){\n\t\tcnt=0;\n\t\tinit();\n\t\tfor(int j=i;j<=m;j++){\n\t\t\teu=find(e[j].u);\n\t\t\tev=find(e[j].v);\n\t\t\tif(eu==ev){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfa[eu]=ev;\n\t\t\tif(++cnt==n-1){\n\t\t\t\tans=min(ans,e[j].w-e[i].w);\t\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(cnt<n-1||ans==0){\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\n\n\nint main(){\n\t//freopen(\"mdt.in\",\"r\",stdin);\n\t//freopen(\"mdt.out\",\"w\",stdout);\n\tn=read(),m=read();\n\tfor(int i=1;i<=m;i++){\n\t\tint u,v,w;\n\t\tu=read(),v=read(),w=read();\n\t\tif(u==v){\n\t\t\tcontinue;\n\t\t}else{\n\t\t\te[i].u=u;\n\t\t\te[i].v=v;\n\t\t\te[i].w=w;\n\t\t}\n\t}\n\tkruskal();\n\tcout<<ans;\n\treturn 0;\n}\n```\n\u603b\u7684\u6765\u8bf4\uff0c\u8fd9\u4e00\u9053\u9898\u7684\u524d$93$\u5206\u5e76\u4e0d\u662f\u7d2b\u9898\uff0c\u53ea\u80fd\u7b97\u662f\u96be\u5ea6\u504f\u9ad8\u7684\u7eff\u9898\u3002\u53ea\u6709\u6700\u540e\u4e00\u4e2a\u70b9\u9700\u8981\u4f7f\u7528$LCT$\uff0c\u4f46\u4e00\u65e6\u52a0\u5165\u4e86\u4e00\u4e2a\u770b\u4f3c\u4e0d\u5fc5\u8981\u7684\u4f18\u5316\uff0c\u5c31\u80fdA\u6389\u6b64\u9898\u3002\n\n\u6700\u540e\uff0c\u8fd8\u662f\u5e0c\u671b\u5927\u5bb6\u53ef\u4ee5\u5b66\u4e60$LCT$\u540e\u5e76\u89e3\u51b3\u6b64\u9898\uff0c\u56e0\u4e3a\u6bd5\u7adf\u8003\u573a\u4e0a\u5e76\u4e0d\u662f\u6bcf\u4e00\u9053\u9898\u90fd\u53ef\u4ee5\u8fd9\u6837\u4f18\u5316\u540e\u901a\u8fc7\u7684\u3002\n\n\u6c42\u5404\u4f4d\u7ed9\u4e2a\u8d5e\u5457\uff08\u5b66$LCT$\u53bb\u4e86\uff0c\u9003\\~~\uff09\n\n## $The\\ end$",
        "postTime": 1608967035,
        "uid": 373699,
        "name": "EXODUS",
        "ccfLevel": 0,
        "title": "P4234\u9898\u89e3"
    },
    {
        "content": "##[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/zzy2005/p/10313064.html)\n\n##\u9898\u89e3\n\nLCT\n\n[\u52a8\u6001\u6811Link-cut tree(LCT)\u603b\u7ed3](https://www.cnblogs.com/zzy2005/p/10312977.html)\n\n\u8003\u8651\u5148\u6309\u8fb9\u6743\u6392\u5e8f,\u4ece\u5c0f\u5230\u5927\u52a0\u8fb9\n\n\u5982\u679c\u6784\u6210\u4e00\u9897\u6811\u4e86,\u5c31\u66f4\u65b0\u7b54\u6848\n\n\u5f53\u52a0\u5165\u4e00\u6761\u8fb9,\u4f1a\u5f62\u6210\u73af.\n\n\u8d2a\u5fc3\u5730\u60f3,\u6211\u4eec\u8981\u6700\u5927\u8fb9\u6743-\u6700\u5c0f\u8fb9\u6743\u6700\u5c0f\n\n\u6700\u5927\u8fb9\u6743\u56fa\u5b9a\u5c31\u662f\u65b0\u52a0\u5165\u7684\u8fd9\u6761\u8fb9,\u6211\u4eec\u8981\u8ba9\u6700\u5c0f\u8fb9\u6743\u5c3d\u91cf\u5730\u5927\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u53bb\u6389\u539f\u5148\u8def\u5f84\u4e0a\u6700\u5c0f\u7684\u90a3\u4e00\u6761\u8fb9,\u8fd9\u6837\u4e00\u5b9a\u4e0d\u4f1a\u5dee\n\n\u4ee5\u4e0a,\u53ef\u4ee5\u7528LCT\u7ef4\u62a4\n## Code\n\n```cpp\n#include<bits/stdc++.h>\n#define mp make_pair\n#define LL long long\n#define RG register\nconst int inf = 2147483647;\nusing namespace std;\ntemplate<class T> inline void read(T &x) {\n\tx = 0; RG char c = getchar(); bool f = 0;\n\twhile (c != '-' && (c < '0' || c > '9')) c = getchar(); if (c == '-') c = getchar(), f = 1;\n\twhile (c >= '0' && c <= '9') x = x*10+c-48, c = getchar();\n\tx = f ? -x : x;\n\treturn ;\n}\ntemplate<class T> inline void write(T x) {\n\tif (!x) {putchar(48);return ;}\n\tif (x < 0) x = -x, putchar('-');\n\tint len = -1, z[20]; while (x > 0) z[++len] = x%10, x /= 10;\n\tfor (RG int i = len; i >= 0; i--) putchar(z[i]+48);return ;\n}\n\nconst int N = 250000 + 10;\n\nstruct node {\n\tint v, m, fa, ch[2], w;//m\u4e3a\u6700\u5c0f\u503c,w\u4e3a\u4f4d\u7f6e\n\tbool rev;\n}t[N];\nint S[N], top, val[N];\nset<pair<int, int> > Min;\nvoid putrev(int x) {\n\tswap(t[x].ch[0], t[x].ch[1]);\n\tt[x].rev ^= 1;\n}\nvoid pushup(int x) {\n\tt[x].m = val[x], t[x].w = x;\n\tif (t[x].m > t[t[x].ch[0]].m && t[x].ch[0]) t[x].m = t[t[x].ch[0]].m, t[x].w = t[t[x].ch[0]].w;\n\tif (t[x].m > t[t[x].ch[1]].m && t[x].ch[1]) t[x].m = t[t[x].ch[1]].m, t[x].w = t[t[x].ch[1]].w;\n}\n#define get(x) (t[t[x].fa].ch[1] == x)\nbool isroot(int x) {\n\treturn (t[t[x].fa].ch[0] != x) && (t[t[x].fa].ch[1] != x);\n}\nvoid pushdown(int x) {\n\tif (t[x].rev) {\n\t\tt[x].rev = 0;\n\t\tif (t[x].ch[0]) putrev(t[x].ch[0]);\n\t\tif (t[x].ch[1]) putrev(t[x].ch[1]);\n\t}\n}\nvoid rotate(int x) {\n\tint k = get(x), y = t[x].fa, z = t[y].fa;\n\tif (!isroot(y)) t[z].ch[get(y)] = x;\n\tt[x].fa = z;\n\tt[t[x].ch[k^1]].fa = y; t[y].ch[k] = t[x].ch[k^1];\n\tt[y].fa = x; t[x].ch[k^1] = y;\n\tpushup(y);\n}\nvoid splay(int x) {\n\tS[top = 1] = x;\n\tfor (RG int i = x; !isroot(i); i = t[i].fa) S[++top] = t[i].fa;\n\tfor (RG int i = top; i; i--) pushdown(S[i]);\n\twhile (!isroot(x)) {\n\t\tint y = t[x].fa;\n\t\tif (!isroot(y))\n\t\t\t(get(x) ^ get(y)) ? rotate(x) : rotate(y);\n\t\trotate(x);\n\t}\n\tpushup(x);\n}\n\nvoid access(int x) {for (int y = 0; x; y = x, x = t[x].fa)splay(x), t[x].ch[1] = y, pushup(x);}\n\nvoid makeroot(int x) {access(x); splay(x); putrev(x);}\nvoid link(int x, int y) {\n\tmakeroot(x);\n\tt[x].fa = y;\n}\nvoid cut(int x, int y) {\n\tmakeroot(x);\n\taccess(y);\n\tsplay(y);\n\tt[x].fa = t[y].ch[0] = 0; pushup(y);\n}\nvoid split(int x, int y) {makeroot(x); access(y); splay(y);}\n\nstruct Node {\n\tint u, v, w;\n\tbool operator <(Node z) const {\n\t\treturn w < z.w;\n\t}\n}p[N];\nint fa[N];\nint find(int x) {\n\treturn fa[x] == x ? x : fa[x] = find(fa[x]);\n}\nint main() {\n\tint n, m, cnt = 0, ans = inf;\n\n\tread(n), read(m);\n\tfor (int i = 1; i <= m; i++)\n\t\tread(p[i].u), read(p[i].v), read(p[i].w);\n\tsort(p+1, p+1+m);\n\tfor (int i = 1; i <= n; i++) fa[i] = i, val[i] = inf;\n\tfor (int i = 1; i <= m; i++) {\n\t\tint x = p[i].u, y = p[i].v;\n\t\tif (x == y) continue;\n\t\tval[i + n] = p[i].w;\n\t\tif (find(x) != find(y)) {\n\t\t\tcnt++; fa[find(y)] = find(x);\n\t\t\tlink(i + n, x);\tlink(i + n, y);\n\t\t\tMin.insert(mp(p[i].w, i));\n\t\t} else {\n\t\t\tsplit(x, y);\n\t\t\tint wz = t[y].w;\n\t\t\tcut(wz, p[wz - n].u); cut(wz, p[wz - n].v);\n\t\t\tlink(i + n, x); link(i + n, y);\n\t\t\tMin.erase(mp(p[wz - n].w, wz - n));\n\t\t\tMin.insert(mp(p[i].w, i));\n\t\t}\n\t\tif (cnt == n-1)\n\t\t\tans = min(ans, p[i].w - (Min.begin()->first));\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1548297480,
        "uid": 8952,
        "name": "M_se\u0430",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4234 \u3010\u6700\u5c0f\u5dee\u503c\u751f\u6210\u6811\u3011"
    },
    {
        "content": "\u5f88\u663e\u7136\u8fd9\u7c7b\u9898\u6709\u4e00\u79cd\u4e00\u822c\u7684\u505a\u6cd5\uff0c\u5c31\u662f\u7528lct\u52a8\u6001\u7ef4\u62a4\u751f\u6210\u6811\u3002\n\n\u5728\u672c\u9898\u4e2d\uff0c\u8003\u8651\u5c06\u8fb9\u4e0d\u65ad\u4ece\u5927\u5f80\u5c0f\u52a0\uff0c\u5982\u679c\u53ef\u4ee5\u52a0\u90a3\u5c31\u76f4\u63a5\u52a0\uff0c\u5426\u5219\u5c31\u65ad\u6389\u6743\u503c\u6700\u5927\u7684\u90a3\u4e00\u6761\u8fb9\uff0c\u7ef4\u62a4\u4e00\u4e0b\u90a3\u51e0\u6761\u8fb9\u88ab\u5272\u6389\u4e86\uff0c\u5728\u7ef4\u62a4\u4e00\u4e0b\u6ca1\u88ab\u5272\u6389\u7684\u8fb9\u7684\u6700\u5927\u5168\u804c\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6$\\Theta(n\\log n)$\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\n#include<set>\n#include<vector>\n#define ll long long\nusing namespace std;\ninline int getint()\n{\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')\n\t{\n\t\tif(ch=='-')f=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9')\n\t{\n\t\tx=(x<<3)+(x<<1)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn (f==1)?x:-x;\n}\ninline int max(int a,int b)\n{\n\treturn a>b?a:b;\n}\ninline int min(int a,int b)\n{\n\treturn a<b?a:b;\n}\nconst int maxn=3e5+5;\nint n,m;\nstruct edge\n{\n\tint u,v,w;\n\tinline bool operator <(const edge &rhs)const\n\t{\n\t\treturn w>rhs.w;\n\t}\n}e[maxn];\nint val[maxn];\nint maxv[maxn];\nint fa[maxn],son[maxn][2],ans=2e9;\nbool rev[maxn],is_cut[maxn];\ninline bool nroot(int x)\n{\n\treturn son[fa[x]][0]==x||son[fa[x]][1]==x;\n}\ninline void pushup(int u)\n{\n\tif(val[u]>val[maxv[son[u][0]]]&&val[u]>val[maxv[son[u][1]]])maxv[u]=u;\n\telse if(val[maxv[son[u][0]]]>val[maxv[son[u][1]]])maxv[u]=maxv[son[u][0]];\n\telse maxv[u]=maxv[son[u][1]];\n}\ninline void pushdown(int u)\n{\n\tif(rev[u])\n\t{\n\t\tswap(son[u][0],son[u][1]);\n\t\trev[son[u][0]]^=1,rev[son[u][1]]^=1;\n\t\trev[u]=0;\n\t}\n}\ninline void rotate(int x)\n{\n\tint y=fa[x],z=fa[y],k=son[y][1]==x;\n\tif(nroot(y))son[z][son[z][1]==y]=x;\n\tfa[x]=z;\n\tson[y][k]=son[x][k^1];\n\tfa[son[x][k^1]]=y;\n\tson[x][k^1]=y;\n\tfa[y]=x;\n\tpushup(y);\n\tpushup(x);\n}\ninline void pushall(int x)\n{\n\tif(nroot(x))pushall(fa[x]);\n\tpushdown(x);\n}\ninline void splay(int x)\n{\n\tpushall(x);\n\twhile(nroot(x))\n\t{\n\t\tint y=fa[x],z=fa[y];\n\t\tif(nroot(y))\n\t\t{\n\t\t\tif((son[z][1]==y)^(son[y][1]==x))rotate(x);\n\t\t\telse rotate(y);\n\t\t}\n\t\trotate(x);\n\t}\n}\ninline void access(int x)\n{\n\tfor(int y=0;x;y=x,x=fa[x])\n\t{\n\t\tsplay(x);\n\t\tson[x][1]=y;\n\t\tpushup(x);\n\t}\n}\ninline void makeroot(int x)\n{\n\taccess(x);\n\tsplay(x);\n\trev[x]^=1;\n}\ninline int findroot(int x)\n{\n\taccess(x);\n\tsplay(x);\n\tpushdown(x);\n\twhile(son[x][0])x=son[x][0],pushdown(x);\n\tsplay(x);\n\treturn x;\n}\ninline void link(int x,int y)\n{\n\tmakeroot(x);\n\tif(findroot(y)!=x)\n\t{\n\t\tfa[x]=y;\n\t}\n}\ninline void cut(int x,int y)\n{\n\tmakeroot(x);\n\taccess(y);\n\tsplay(y);\n\tif(findroot(y)==x&&fa[y]==x&&!son[y][0])\n\t{\n\t\tfa[y]=0;\n\t\tson[x][1]=0;\n\t\tpushup(x);\n\t}\n}\ninline int query(int x,int y)\n{\n\tmakeroot(x);\n\taccess(y);\n\tsplay(y);\n\treturn findroot(y)==x;\n}\ninline void split(int x,int y)\n{\n\tmakeroot(x);\n\taccess(y);\n\tsplay(y);\n}\nint main()\n{\n\tn=getint(),m=getint();\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\te[i].u=getint(),e[i].v=getint(),e[i].w=getint();\n\t}\n\tsort(e+1,e+m+1);\n\tfor(int i=1;i<=m;++i)val[i+n]=e[i].w;\n\tint cnt=0,pos=1;\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint x=e[i].u,y=e[i].v;\n\t\tif(x==y)\n\t\t{\n\t\t\tis_cut[i]=true;\n\t\t\tcontinue;\n\t\t}\n\t\tif(query(x,y))\n\t\t{\n\t\t\tsplit(x,y);\n\t\t\tint now=maxv[y];\n\t\t\tcut(e[now-n].u,now);\n\t\t\tcut(e[now-n].v,now);\n\t\t\tis_cut[now-n]=true;\n\t\t\tlink(e[i].u,i+n);\n\t\t\tlink(e[i].v,i+n);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlink(e[i].u,i+n);\n\t\t\tlink(e[i].v,i+n);\n\t\t\tcnt++;\n\t\t}\n\t\tif(cnt==n-1)\n\t\t{\n\t\t\twhile(is_cut[pos])pos++;\n\t\t\tans=min(ans,e[pos].w-e[i].w);\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n\u914d\u4e0a\u4e00\u4e2a\u6570\u636e\u751f\u6210\u5668\uff1a\n\n```cpp\n#include<iostream>\n#include<ctime>\n#include<cstdlib>\n#define ll long long\n#define rd rand()*rand()\nusing namespace std;\nchar temp[30];\nint main()\n{\n\tsrand(time(NULL));\n\tfreopen(\"1.txt\",\"w\",stdout);\n\tint n=50000,m=100000;\n\tcout<<n<<' '<<m<<endl;\n\tfor(int i=2;i<=n;++i)cout<<i<<' '<<rd%(i-1)+1<<' '<<rd%10000<<endl;\n\tfor(int i=n;i<=m;++i)cout<<rd%n+1<<' '<<rd%n+1<<' '<<rd%10000<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1592546617,
        "uid": 333789,
        "name": "lory1608",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4234 \u3010\u6700\u5c0f\u5dee\u503c\u751f\u6210\u6811\u3011"
    },
    {
        "content": "LCT\u3002~~\uff08\u867d\u7136\u597d\u50cf\u8fd8\u6709\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6cd5\uff09~~\n\n\u76f4\u63a5\u5c06\u8fb9\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u4f9d\u6b21\u52a0\u5165\uff0c\u5728\u52a8\u6001\u7ef4\u62a4\u6700\u5c0f\u751f\u6210\u6811\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6$O(nlog_2n)$\u3002\n\n\u4ee3\u7801:\n\n```cpp\n#include<bits/stdc++.h>\n#define For(i,a,b) for(i=(a);i<=(b);++i)\n#define Forward(i,a,b) for(i=(a);i>=(b);--i)\n#define Rep(i,a,b) for(register int i=(a),i##end=(b);i<=i##end;++i)\n#define Repe(i,a,b) for(register int i=(a),i##end=(b);i>=i##end;--i)\nusing namespace std;\ntemplate<typename T>inline void read(T &x){\n    T s=0,f=1;char k=getchar();\n    while(!isdigit(k)&&k^'-')k=getchar();\n    if(!isdigit(k)){f=-1;k=getchar();}\n    while(isdigit(k)){s=s*10+(k^48);k=getchar();}\n    x=s*f;\n}\nvoid file(void){\n    #ifndef ONLINE_JUDGE\n    freopen(\"water.in\",\"r\",stdin);\n    freopen(\"water.out\",\"w\",stdout);\n    #endif\n}\nstatic int n,m;\nconst int MAXN=8e5+7;\nstatic struct edge\n{\n    int u,v,w;\n    friend bool operator<(edge a,edge b)\n    {return a.w>b.w;}\n}q[MAXN];\ninline void init()\n{\n    read(n);read(m);\n    if(n==1){puts(\"0\");exit(0);}\n    for(register int i=1;i<=m;++i)\n    {\n        read(q[i].u),read(q[i].v),read(q[i].w);\n        if(q[i].u==q[i].v)--i,--m;\n    }\n    sort(q+1,q+m+1);\n}\nnamespace LCT\n{\n    int p[MAXN],son[MAXN][2],fa[MAXN],key[MAXN],rev[MAXN];\n    \n    inline bool isroot(int x)\n    {return x!=son[fa[x]][0]&&x!=son[fa[x]][1];}\n    \n    inline void refresh(int x)\n    {\n        p[x]=p[son[x][key[p[son[x][0]]]>key[p[son[x][1]]]?0:1]];\n        if(key[x]>key[p[x]])p[x]=x;\n    }\n   \n    inline bool isl(int x){return x^son[fa[x]][0];}\n    \n    inline void rotate(int x)\n    {\n        static int f,ff,ke;f=fa[x];ff=fa[f];ke=isl(x);\n        fa[x]=ff;if(!isroot(f))son[ff][isl(f)]=x;\n        son[fa[son[x][ke^1]]=f][ke]=son[x][ke^1];\n        son[fa[f]=x][ke^1]=f;\n        refresh(f);refresh(x);\n    }\n    \n    inline void pushdown(int x)\n    {\n        if(rev[x])swap(son[x][0],son[x][1])\n        ,rev[son[x][0]]^=1,rev[son[x][1]]^=1\n        ,rev[x]=0;\n    }\n    \n    static int sta[MAXN];\n    inline void splay(int x)\n    {\n        static int t,top,f;sta[top=1]=x;\n        for(t=x;!isroot(t);t=fa[t])sta[++top]=fa[t];\n        for(;top;--top)pushdown(sta[top]);\n        for(f=fa[x];!isroot(x);rotate(x),f=fa[x])\n            if(!isroot(f))rotate(isl(x)^isl(f)?x:f);\n    }\n\n    inline void access(int x)\n    {\n        static int t;\n        for(t=0;x;t=x,x=fa[x])\n            splay(x),son[x][1]=t,refresh(x);\n    }\n\n    inline void makeroot(int x)\n    {access(x);splay(x);rev[x]^=1;}\n\n    inline void link(int x,int y)\n    {makeroot(x);fa[x]=y;}\n\n    inline void cut(int x,int y)\n    {\n        makeroot(x),access(y),splay(y);\n        son[y][0]=fa[x]=0;refresh(y);\n    }\n\n    inline int find(int x)\n    {\n        access(x);splay(x);\n        while(son[x][0])x=son[x][0];\n        return x;\n    }\n}\nusing namespace LCT;\nmultiset<int,greater<int> >G;\nmultiset<int,greater<int> >::iterator it;\n#define Chkmin(a,b) a=a<b?a:b\ninline void solve()\n{\n    static int ans=200000,cnt=0,poi;\n    Rep(i,1,m)key[i+n]=q[i].w;\n    Rep(i,1,m)\n    {\n        if(find(q[i].u)==find(q[i].v))\n        {\n            makeroot(q[i].u);access(q[i].v);splay(q[i].v);\n            poi=p[q[i].v];\n            cut(poi,q[poi-n].u);\n            cut(poi,q[poi-n].v);\n            key[poi]=0;\n            it=G.lower_bound(q[poi-n].w);\n            G.erase(it);\n        }else ++cnt;\n        link(q[i].u,i+n);\n        link(q[i].v,i+n);\n        G.insert(q[i].w);\n        if(cnt==n-1)Chkmin(ans,*G.begin()-q[i].w);\n        //Rep(j,1,n+m)cout<<j<<' '<<fa[j]<<' '<<son[j][0]<<' '<<son[j][1]<<endl;\n        //cout<<endl;\n    }\n    printf(\"%d\\n\",ans);\n}\nint main(void){\n    file();\n    init();\n    solve();\n    return 0;\n}\n\n```",
        "postTime": 1519525726,
        "uid": 7035,
        "name": "Great_Influence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4234 \u3010\u6700\u5c0f\u5dee\u503c\u751f\u6210\u6811\u3011"
    }
]