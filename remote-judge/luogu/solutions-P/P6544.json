[
    {
        "content": "\u505a\u4e86\u4e24\u4e2a\u5c0f\u65f6\uff0c\u8fd8\u53bb\u8981\u4e86\u70b9\u63d0\u793a\u624d\u628a\u8fd9\u9053\u9898\u7ed9\u52c9\u5f3a\u505a\u4e86\u51fa\u6765\u3002    \n\n\u8fd9\u9053\u9898\u5176\u5b9e\u6709\u4e00\u4e2a\u6027\u8d28\u6bd4\u8f83\u96be\u627e\uff0c\u521a\u5f00\u59cb\u65f6\u5019\u5b8c\u5168\u6ca1\u601d\u8def\uff0c\u540e\u6765\u5404\u79cd\u4e71\u60f3\u4e71\u51d1\u624d\u627e\u51fa\u6765\u4e86\u8fd9\u4e2a\u6027\u8d28\u3002    \n\n\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\uff0c\u5982\u679c\u6211\u4eec\u4ece\u5206\u754c\u70b9\u628a\u539f\u5e8f\u5217\u5206\u6210\u4e24\u4e2a\u5e8f\u5217\u5904\u7406\uff0c\u4e5f\u5c31\u662f $1 \\sim a - 1$ \u548c $a + 1 \\sim n$ \u3002    \n\n\u73b0\u5728\u4e3a\u4e86\u884c\u6587\u65b9\u4fbf\uff0c\u5de6\u8fb9\u5e8f\u5217\u7684\u201c\u524d\u9762\u201d\u5c31\u6307\u7684\u662f\u5b83\u53f3\u8fb9\uff0c\u53f3\u8fb9\u5e8f\u5217\u7684\u201c\u524d\u9762\u201d\u5c31\u6307\u7684\u662f\u5b83\u5de6\u8fb9\u2026\u2026\u6a21\u62df\u7684\u662f\u5403\u86cb\u7cd5\u8fc7\u7a0b\u3002\n\n\u4ee5\u5de6\u8fb9\u5e8f\u5217\u4e3e\u4f8b\u3002\n\n\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u5de6\u8fb9\u5e8f\u5217\u7684\u86cb\u7cd5\u4e4b\u524d\u80fd\u88ab\u5403\u6389\u591a\u5c11\u5757\u86cb\u7cd5\u548c\u5b83\u524d\u9762\u7684 $d_i$ \u6700\u5927\u7684\u86cb\u7cd5\u6709\u5173\u7cfb\uff0c\u6bd4\u5982\u8bf4\u5b83\u524d\u9762(\u5305\u62ec\u5b83)\u6700\u5927\u7684\u86cb\u7cd5\u7684\u503c\u4e3a $Maxd$ \uff0c\u90a3\u4e48\u4ece\u53f3\u8fb9\u5e8f\u5217\u7684\u5934\u5230\u5c3e\u91cc\u9762\u5982\u679c\u4e00\u76f4\u6ca1\u51fa\u73b0\u4e00\u4e2a\u503c\u5927\u4e8e(\u6bd5\u7adf\u6ca1\u6709\u76f8\u7b49\u6570) $Maxd$ \u5c31\u4f1a\u4e00\u76f4\u6740\u4e0b\u53bb\uff0c   \n\n\u76f8\u53cd\uff0c\u5982\u679c\u51fa\u73b0\u4e00\u4e2a\u86cb\u7cd5\u5927\u4e8e $Maxd$ \u7684\u8bdd\uff0c\u90a3\u4e48\u8fd9\u4e2a\u86cb\u7cd5\u5c31\u53ef\u4ee5\u4e00\u76f4\u6740\u5230\u5de6\u8fb9\u5e8f\u5217\u7684\u8fd9\u4e2a\u86cb\u7cd5\u3002    \n\n\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u86cb\u7cd5\u7684\u67e5\u8be2\uff0c\u6211\u4eec\u5c31\u67e5\u8be2\u5b83\u524d\u9762(\u5305\u62ec\u5b83)\u7684\u6240\u6709\u86cb\u7cd5\u7684 $Maxd$ \uff0c \u7136\u540e\u4ece\u53f3\u8fb9\u5e8f\u5217\u7684\u5934\u5230\u5c3e\u627e\u5230\u7b2c\u4e00\u4e2a\u503c\u5927\u4e8e $Maxd$ \u4e3a\u6b62\uff0c\u7136\u540e\u8ba1\u7b97\u5373\u53ef\u3002     \n\n\u8fd9\u91cc\u4e0d\u96be\u53d1\u73b0\uff0c\u6211\u4eec\u8fd9\u4e2a\u8ba1\u7b97\u65b9\u6cd5\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u53ef\u4ee5\u76f4\u63a5\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u6211\u81ea\u5df1\u63a8\u7684\u65f6\u5019\u53d1\u73b0\u505a\u4e2a\u524d\u7f00\u6700\u5c0f\u503c\u7136\u540e\u8dd1\u4e8c\u5206\u597d\u50cf\u4e5f\u53ef\u4ee5\u8fc7(\u4e0d\u8fc7\u8fd9\u8fc7\u7a0b\u6700\u540e\u4fee\u6539\u7684\u65f6\u5019\u8fd8\u662f\u5f97\u5957\u4e2a\u7ebf\u6bb5\u6811\uff0c\u5c3d\u7ba1\u6b7b\u4e0d\u6210 $logn^2$ \u4f46\u662f\u786e\u5b9e\u590d\u6742\u4e86\u4e00\u4e9b)\uff0c\u6700\u540e\u8fd8\u662f\u76f4\u63a5\u7ef4\u62a4\u7684\u533a\u95f4\u6700\u5c0f\u503c\u2026\u2026    \n\n\u63a5\u7740\u6211\u4eec\u5f80\u91cc\u9762\u52a0\u5165\u4fee\u6539\u64cd\u4f5c\uff0c\u53d1\u73b0\u8fd9\u4e2a\u4fee\u6539\u64cd\u4f5c\u603b\u4e4b\u5c31\u662f\u7279\u522b\u4e0d\u8bb2\u6b66\u5fb7\uff0c\u9996\u5148\u8981\u5355\u70b9\u4fee\uff0c\u63a5\u7740\u8fd8\u8981\u6539\u53d8\u76f8\u5bf9\u5927\u5c0f\u5173\u7cfb\u2026\u2026\u8fd9\u5c31\u4e0d\u662f\u4eba\u597d\u4e0d\u597d\u3002    \n\n\u6211\u4eec\u56de\u5f52\u539f\u9898\uff0c\u770b\u6570\u636e\u53d1\u73b0 $d_i$ \u503c\u5c31\u662f\u4e00\u4e2a\u6392\u5217\uff0c\u5e76\u4e14\u6211\u4eec\u6700\u540e\u8ba1\u7b97\u7b54\u6848\u7684\u65f6\u5019\u53ea\u9700\u8981\u5b83\u4eec\u7684\u4e0b\u6807\uff0c\u800c\u6211\u4eec\u5c06 $d_i$ \u8f6c\u6362\u6210\u6392\u540d\uff0c\u6211\u4eec\u521a\u624d\u5c31 $Maxd$ \u7684\u8fc7\u7a0b\u5c31\u53ef\u4ee5\u8f6c\u6362\u6210\u6c42\u6700\u5c0f\u6392\u540d\u3002    \n\n\u8d70\u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u53d1\u73b0\u81ea\u5df1\u597d\u50cf\u662f\u5728\u515c\u5708\uff0c\u6211\u4eec\u53ef\u4ee5\u518d\u63a8\u4e00\u6b65\uff0c\u6211\u4eec\u80af\u5b9a\u53ef\u4ee5\u77e5\u9053\u7b2c\u51e0\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570\u7684\u76f8\u5bf9\u6392\u540d\uff0c\u5982\u679c\u6211\u4eec\u628a\u5f53\u524d\u8fd9\u4e2a\u6392\u540d $x$ \u53d8\u6210\u4e86 $y$ \uff0c \u90a3\u4e48\u5176\u5b9e\u6211\u4eec\u9700\u8981\u6539\u53d8\u7684\u5c31\u662f\u628a $x \\sim y$ \u7684\u6392\u540d\u5168\u90e8\u5f80\u540e\u79fb\u4e00\u4f4d\u2026\u2026    \n\n\u60f3\u5230\u8fd9\u91cc\uff0c\u5176\u5b9e\u5df2\u7ecf\u5f88\u63a5\u8fd1\u6b63\u89e3\u4e86\uff0c\u4e5f\u662f\u6211\u601d\u8def\u4e2d\u65ad\u7684\u5730\u65b9\u3002\u6211\u4eec\u73b0\u5728\u5fc5\u987b\u8981\u89e3\u51b3\u8fd9\u4e2a\u6539\u53d8\u533a\u95f4\u6392\u540d\u7684\u6bd2\u7624\u95ee\u9898\u2026\u2026\u8c8c\u4f3c\u5f97\u5957\u4e2a\u66f4\u9ad8\u7ea7\u7684\u6570\u636e\u7ed3\u6784\uff1f    \n\n\u5176\u5b9e\u6211\u4eec\u518d\u8ba4\u771f\u6574\u5408\u4e00\u4e0b\u6211\u4eec\u7684\u63a8\u5bfc\u8fc7\u7a0b\u4f1a\u53d1\u73b0\u6211\u4eec\u8fd8\u6709\u4e00\u4e2a\u4e1c\u897f\u6ca1\u6709\u7528\u5230\u6781\u81f4\u2014\u2014\u76f8\u5bf9\u5927\u5c0f\u548c\u6570\u636e\u8303\u56f4\u3002    \n\n\u6211\u4eec\u89c2\u5bdf\u5230 $1 \\leq e \\leq 10$ \uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u9053\u9898\u7ed9\u4e86\u6211\u4eec\u53ef\u4ee5\u66b4\u529b\u4fee\u6539\u6700\u524d\u9762\u7684\u6392\u540d\u4eec\u7684\u65f6\u95f4\u3002  \n\n\u5176\u5b9e\u4e5f\u5c31\u662f\u521a\u624d\u7684\u76f8\u5bf9\u5927\u5c0f\uff0c\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u628a\u4e2d\u95f4\u4e00\u6bb5\u7684\u6392\u540d\u5f80\u540e\u9762\u6574\u4f53\u5e73\u79fb\u65f6\uff0c\u5176\u5b9e\u53d8\u5316\u7684\u76f8\u5bf9\u5927\u5c0f\u5c31\u662f\u628a\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u7684\u76f8\u5bf9\u6392\u540d\u8fdb\u884c\u4e86\u53d8\u5316\uff0c\u6240\u4ee5\u53ea\u8981\u80fd\u6b63\u786e\u5904\u7406\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u7684\u76f8\u5bf9\u6392\u540d\uff0c\u8fd9\u9053\u9898\u5c31\u53ef\u4ee5\u9752\u7ed3\u4e86\u3002   \n\n\u6211\u4eec\u53ef\u4ee5\u5de7\u5999\u628a $+1$ \u6539\u6210 $-1$ \uff0c\u5982\u679c\u6211\u4eec\u79fb\u5230\u4e86 $x$ \u5927\uff0c\u5c31\u628a $1 \\sim x$ \u6574\u4f53\u5411\u5de6\u79fb\uff0c\u76f4\u5230\u79fb\u5230\u6211\u4eec\u4fdd\u5b58\u7684\u6392\u540d\u4e0b\u9762\u7b2c $x$ \u5927\u7684\u6570\u4e0e \u7b2c $x + 1$ \u5927\u7684\u6570\u53ef\u4ee5\u6b63\u786e\u5904\u7406\u51fa\u5176\u76f8\u5bf9\u5173\u7cfb\uff0c\u7531\u4e8e\u662f\u4e00\u8d77\u5e73\u79fb\u6240\u4ee5\u6211\u4eec\u524d\u9762\u7684\u6570\u4eec\u7684\u76f8\u5bf9\u5927\u5c0f\u80af\u5b9a\u53ef\u4ee5\u4e0d\u53d8\uff0c\u7136\u540e\u66b4\u529b\u628a\u73b0\u5728\u7684\u524d $x$ \u5927\u7684\u4f4d\u7f6e\u4fdd\u5b58\u7684\u76f8\u5bf9\u6392\u540d\u6253\u8fdb\u7ebf\u6bb5\u6811\u8fdb\u884c\u4fee\u6539\u5373\u53ef\u3002    \n\n\u6211\u753b\u56fe\u80fd\u529b\u6709\u9650\uff0c\u5c31\u53ea\u80fd\u518d\u5c3d\u53ef\u80fd\u63cf\u8ff0\u4e86\u2026\u2026\u76f8\u5f53\u4e8e\u5c31\u662f\u8bf4\u628a\u5f53\u524d\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u6392\u540d\u79fb\u5230\u524d\u9762\u7684\u6392\u540d\u91cc\u53bb\uff0c\u7136\u540e\u6211\u4eec\u73b0\u5728\u5176\u5b9e\u552f\u4e00\u9700\u8981\u6539\u52a8\u7684\u662f\u5f53\u524d\u8fd9\u4e2a\u6570\u4e0e\u5176\u5b83\u6570\u7684\u76f8\u5bf9\u6392\u540d\u5927\u5c0f\uff0c\u6211\u4eec\u53ef\u4ee5\u8bb0\u5f55\u5f53\u524d\u7684\u6700\u5c0f\u6392\u540d\u662f\u591a\u5c11\uff0c\u5c31\u628a $1 \\sim x$ \u79fb\u5230\u8fd9\u4e2a\u6392\u540d\u8fd8\u8981\u5f80\u524d\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u6211\u4eec\u7684 $x$ \u73b0\u5728\u4e00\u5b9a\u80fd\u548c $x + 1$ \u786e\u5b9a\u51fa\u76f8\u5bf9\u5927\u5c0f\uff0c\u7136\u540e\u6211\u4eec\u66b4\u529b\u4ece $x \\sim 1$ \u626b\u4e00\u904d\uff0c\u7ed9\u4ed6\u4eec\u8d4b\u4e00\u4e2a\u65b0\u7684\u201c\u6392\u540d\u201d\u3002 \n\n\u6bd4\u5982\u8bf4\uff0c\u73b0\u5728 $5$ \u4e2a\u6570\uff0c\u5f53\u524d\u53ea\u662f\u7b2c\u4e00\u6b21\u8fdb\u884c $E$ \u64cd\u4f5c\uff0c\u6700\u5c0f\u6392\u540d\u80af\u5b9a\u662f $1$ \uff0c\u5982\u679c\u628a\u7b2c $4$ \u5927\u6570\u79fb\u5230\u7b2c $2$ \u5927\u6570\u53bb\u7684\u8bdd\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u628a $1 \\sim 2$ \u7684\u6392\u540d\u5047\u5b9a\u4e3a $-1 , 0$ \uff0c\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u5f53\u524d\u7684\u7b2c $2$ \u5927\u7684\u76f8\u5bf9\u6392\u540d\u4e00\u5b9a\u5c0f\u4e8e \u7b2c $3,4,5$ \u5927\u7684\u503c\u91cc\u9762\u4fdd\u5b58\u7684\u76f8\u5bf9\u6392\u540d\u5373\u786e\u5b9a\u4e86\u5b83\u4eec\u4e4b\u95f4\u7684\u76f8\u5bf9\u5173\u7cfb\uff0c\u5e76\u4e14\u7b2c $1,2$ \u5927\u4e4b\u95f4\u7684\u76f8\u5bf9\u6392\u540d\u5373\u76f8\u5bf9\u5927\u5c0f\u4e5f\u53ef\u4ee5\u5904\u7406\u51fa\u6765\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u770b\u4ee3\u7801\uff1a    \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<vector>\nusing namespace std;\nconst int Len = 2.5e5 + 5;\nstruct node\n{\n\tint val,idx;\n}d[Len];\nbool cmp(node x,node y){return x.val > y.val;}\nint Id[Len],n,a,q,ans[Len << 2][2],rk[Len];\nint ls(int x){return x << 1;}\nint rs(int x){return x << 1 | 1;}\nvoid push_up(int x,int t){ans[x][t] = min(ans[ls(x)][t] , ans[rs(x)][t]);}\nvoid build(int p,int l,int r,int t)\n{\n\tif(l == r)\n\t{\n\t\tans[p][t] = d[l].val;\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(ls(p) , l , mid , t);\n\tbuild(rs(p) , mid + 1 , r , t);\n\tpush_up(p , t);\n}\nvoid update(int p,int l,int r,int idx,int w,int t)\n{\n\tif(l == r)\n\t{\n\t\tans[p][t] = w;\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tif(idx <= mid) update(ls(p) , l , mid , idx , w , t);\n\telse update(rs(p) , mid + 1 , r , idx , w , t);\n\tpush_up(p , t);\n}\nint query(int p,int l,int r,int nl,int nr,int t)\n{\n\tif(nl <= l && nr >= r) return ans[p][t];\n\tint mid = (l + r) >> 1 , res = 1e9;\n\tif(nl <= mid) res = min(res , query(ls(p) , l , mid , nl , nr , t));\n\tif(nr > mid) res = min(res , query(rs(p) , mid + 1 , r , nl , nr , t));\n\treturn res;\n}\nint find_l(int p,int l,int r,int fd)\n{\n\tif(ans[p][0] > fd) return l - 1;//\u627e\u4e0d\u5230\n\tif(l == r) return l;\n\tint mid = (l + r) >> 1;\n\tif(ans[rs(p)][0] < fd) return find_l(rs(p) , mid + 1 , r , fd);\n\telse return find_l(ls(p) , l , mid , fd); \n}\nint find_r(int p,int l,int r,int fd)\n{\n\tif(ans[p][1] > fd) return r + 1;\n\tif(l == r) return l;\n\tint mid = (l + r) >> 1;\n\tif(ans[ls(p)][1] < fd) return find_r(ls(p) , l , mid , fd);\n\telse return find_r(rs(p) , mid + 1 , r , fd);\n}\nchar s[5];\nint main()\n{\n\tscanf(\"%d %d\",&n,&a);\n\tfor(int i = 1 ; i <= n ; i ++) \n\t{\n\t\tscanf(\"%d\",&d[i].val);\n\t\td[i].val = n - d[i].val + 1;\n\t\td[i].idx = i;\n\t}\n\tif(a != 1) build(1 , 1 , a - 1 , 0);\n\tif(a != n) build(1 , a + 1 , n , 1);\n\tsort(d + 1 , d + 1 + n , cmp);\n\tfor(int i = 1 ; i <= n ; i ++) rk[i] = d[i].idx , Id[d[i].idx] = i;\n\tscanf(\"%d\",&q);\n\tint nowminrk = 1;//\u7528\u6765\u8bb0\u5f55\u5f53\u524d\u7684\u6700\u5c0f\u6392\u540d\n\twhile(q --)\n\t{\n\t\tscanf(\"%s\",s + 1);\n\t\tif(s[1] == 'F')\n\t\t{\n\t\t\tint x;scanf(\"%d\",&x);\n\t\t\tif(x == a) printf(\"0\\n\");\n\t\t\telse if(x > a)//\u53bb\u5de6\u8fb9\u67e5 \n\t\t\t{\n\t\t\t\tif(a == 1){printf(\"%d\\n\",x - 1);continue;}\n\t\t\t\tint Minn = query(1 , a + 1 , n , a + 1 , x , 1) , \n\t\t\t\tPos = a - 1 - find_l(1 , 1 , a - 1 , Minn);\n\t\t\t\tprintf(\"%d\\n\",Pos + x - a);\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tif(a == n){printf(\"%d\\n\",a - x);continue;}\n\t\t\t\tint Minn = query(1 , 1 , a - 1 , x , a - 1 , 0) , \n\t\t\t\tPos = find_r(1 , a + 1 , n , Minn) - a - 1;\n\t\t\t\tprintf(\"%d\\n\",Pos + a - x);\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tint x,y,nowp = min(n , 10);scanf(\"%d %d\",&x,&y);\n\t\t\tfor(int i = 1 ; i <= min(n , 10) ; i ++) if(rk[i] == x) nowp = i;\n\t\t\tfor(int i = nowp - 1 ; i >= y ; i --) rk[i + 1] = rk[i];\n\t\t\trk[y] = x;\n\t\t\tfor(int i = y ; i >= 1 ; i --)\n\t\t\t{\n\t\t\t\tnowminrk --;\n\t\t\t\tif(rk[i] > a) update(1 , a + 1 , n , rk[i] , nowminrk , 1);\n\t\t\t\telse if(rk[i] < a) update(1 , 1 , a - 1 , rk[i] , nowminrk , 0);\n\t\t\t} \n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1607069187,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6544 \u3010[CEOI2014] Cake\u3011"
    },
    {
        "content": "CEOI \u7684\u9898\u76ee\u90fd\u597d\u96be\u554aqwq\n\n#### \u9898\u610f\n\n> \u7ed9\u4e86\u4e00\u4e2a\u957f $n$ \u5e8f\u5217\u548c\u5f00\u59cb\u4f4d\u7f6e\uff0c\u4ece\u5f00\u59cb\u4f4d\u7f6e\u8d77\uff0c\u6bcf\u6b21\u8d70\u5230\u4e24\u8fb9\u6700\u5c0f\u7684\u4e00\u4e2a\u3002\u4e2d\u95f4\u53ef\u4ee5\u4fee\u6539\u67d0\u4e2a\u6570\u7684**\u6392\u540d**\u5230\u524d\u5341\u4ee5\u5185\uff0c\u591a\u6b21\u8be2\u95ee\u6bcf\u4e2a\u6570\u5728\u88ab\u8d70\u5230\u4e4b\u524d\u4f1a\u5148\u8d70\u591a\u5c11\u4e2a\u6570\u3002  \n\n#### \u9898\u89e3\n\n\u672c\u7bc7\u9898\u89e3\u4e2d\uff0c\u6211\u4eec\u4ee5\u8d77\u59cb\u4f4d\u7f6e\u4e3a\u5206\u754c\u7ebf\uff0c\u628a\u6574\u4e2a\u5e8f\u5217\u5206\u6210\u4e24\u90e8\u5206\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u6bcf\u6b21\u6211\u4eec\u7684\u8d70\u6cd5\u4e00\u5b9a\u662f\u8d70\u5230\u67d0\u4e2a\u5730\u65b9\uff0c\u7136\u540e\u6389\u5934\uff0c\u4ee5\u6b64\u7c7b\u63a8\u5411\u4e24\u8fb9\u6269\u5c55\u3002\u800c\u6389\u5934\u7684\u65f6\u5019\u5c31\u662f\u9047\u5230\u4e86\u4e00\u4e2a\u6570\uff0c\u5176\u503c\u5927\u4e8e\u53e6\u4e00\u8fb9\u7684\u6570\u7684\u65f6\u5019\u3002\u53ef\u4ee5\u53d1\u73b0\u5728\u6389\u5934\u4e4b\u524d\uff0c\u53e6\u4e00\u8fb9\u7684\u6570\u662f\u4e0d\u4f1a\u53d8\u5316\u7684\u3002\n\n\u800c\u4e14\u6211\u4eec\u4e0d\u96be\u60f3\u5230\u82e5\u80fd\u8d70\u5230\u67d0\u4e2a\u6570\uff0c\u5219\u8be5\u6570\u5230\u8d77\u59cb\u4f4d\u7f6e\u4e4b\u95f4\uff08\u4e0d\u5305\u62ec\u8d77\u59cb\u4f4d\u7f6e\uff09\u4e4b\u95f4\u6240\u6709\u7684\u6570\u90fd\u88ab\u8d70\u8fc7\u4e86\u3002\u5f53\u7136\uff0c\u4e5f\u4e0d\u96be\u60f3\u5230\u6700\u6709\u4ef7\u503c\u7684\u5176\u5b9e\u5e94\u8be5\u662f**\u6700\u5927\u7684**\u90a3\u4e00\u4e2a\uff0c\u56e0\u4e3a\u5b83\u6700\u6709\u53ef\u80fd\u5728\u4ece\u53e6\u4e00\u8fb9\u8fc7\u6765\u7684\u65f6\u5019\u6709**\u963b\u6321**\u3002\n\n\u90a3\u4e48\u4ec0\u4e48\u65f6\u5019\u6700\u5927\u7684\u8fd9\u4e2a\u6570\u4e5f\u4f1a\u88ab\u8d70\u5230\u5462\uff1f\u90a3\u5c31\u662f\u53e6\u5916\u4e00\u8fb9\u88ab\u8d70\u5b8c\u4e86\u6216\u8005\u53e6\u5916\u4e00\u8fb9\u6709\u66f4\u5927\u7684\u6570\u8fdb\u884c\u4e86**\u963b\u6321**\uff0c\u7531\u4e8e\u5411\u53e6\u4e00\u8fb9\u8d70\u65f6\uff0c\u8fd9\u8fb9\u7684\u6700\u5927\u503c\u662f\u4e0d\u53d8\u7684\uff0c\u56e0\u6b64\u8fdb\u884c\u963b\u6321\u7684\u5c31\u662f\u53e6\u4e00\u8fb9\u7b2c\u4e00\u4e2a\u4f1a\u88ab\u8d70\u5230\u7684\u5927\u4e8e\u90a3\u4e2a\u6700\u5927\u503c\u7684\u6570\u3002\n\n\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u64cd\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u7ef4\u62a4\uff1a**\u8fd9\u4e2a\u6570\u5230\u8d77\u59cb\u4f4d\u7f6e\uff08\u4e0d\u5305\u62ec\u8d77\u59cb\u4f4d\u7f6e\uff09\u4e4b\u95f4\u7684\u533a\u95f4\u6700\u5927\u503c** \u4e0e **\u67d0\u4e00\u90e8\u5206\u6700\u9760\u8fd1\u8d77\u59cb\u4f4d\u7f6e\u7684\u3001\u5927\u4e8e\u67d0\u4e2a\u6570\u7684\u6570\u7684\u4f4d\u7f6e**\u4ee5\u53ca **\u5355\u70b9\u4fee\u6539\u6392\u540d** \u4e4b\u540e\u7684\u7ed3\u679c\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u7ebf\u6bb5\u6811\uff0c\u540c\u65f6\u5bf9\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u8fdb\u884c\u4e8c\u5206\u3002\n\n\u81f3\u4e8e\u7565\u5fae\u6709\u4e9b\u6076\u5fc3\u7684\u6392\u540d\uff0c\u7531\u4e8e\u4e00\u5f00\u59cb\u8fd9\u4e2a\u5e8f\u5217\u4e2d\u6240\u6709\u5143\u7d20\u503c\u90fd\u5728 $n$ \u4ee5\u5185\uff0c\u56e0\u6b64\u6211\u4eec\u8bbe\u4e00\u4e2a\u6781\u5927\u503c\u4e3a $n$ \uff0c\u800c\u9898\u76ee\u4fdd\u8bc1\u4e86\u6bcf\u6b21\u4fee\u6539\u540e\u7684\u6392\u540d\u90fd\u5728\u524d\u5341\uff0c\u6240\u4ee5\u66b4\u529b\u7ed9\u524d\u5341\u7684\u5143\u7d20\u6309\u6392\u540d\u6539\u503c\u5c31\u53ef\u4ee5\u4e86\u3002~~\u5176\u5b9e\u6211\u731c\u51fa\u9898\u4eba\u662f\u51fa\u6570\u636e\u53d1\u73b0\u8981\u4fdd\u8bc1\u5e8f\u5217\u4e2d\u5143\u7d20\u4e0d\u91cd\u590d\u61d2\u5f97\u51fa\u4e86\u7136\u540e\u76f4\u63a5\u6539\u6210\u4e86\u6539\u6392\u540d~~\n\n\u7136\u540e\u6211\u4eec\u5c31\u80fd\u4ee5 $\\mathcal{O(q \\log n)}$ \uff08\u518d\u52a0\u4e0a $10$ \u7684\u5e38\u6570\uff09\u901a\u8fc7\u8fd9\u9053\u9898\u4e86\u3002\n\n#### \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nint n;\nint d[250005],arr[250005],rk[250005];\nstruct SegmentTree{\n\t#define ls p<<1\n\t#define rs p<<1|1\n\t#define lson p<<1,l,mid\n\t#define rson p<<1|1,mid+1,r\n\tint tr[1000005]; \n\tvoid pushUp(int p){tr[p]=max(tr[ls],tr[rs]);}\n\tvoid build(int p,int l,int r)\n\t{\n\t\tif(l==r)\n\t\t{\n\t\t\ttr[p]=d[l];\n\t\t\treturn;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tbuild(lson);build(rson);\n\t\tpushUp(p);\n\t\treturn;\n\t}\n\tvoid Modify(int p,int l,int r,int aim,int val)\n\t{\n\t\tif(l==r&&l==aim)\n\t\t{\n\t\t\ttr[p]=val;\n\t\t\treturn;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tif(aim<=mid) Modify(lson,aim,val);\n\t\telse Modify(rson,aim,val);\n\t\tpushUp(p);\n\t}\n\tint queryMax(int p,int l,int r,int lx,int rx)\n\t{\n\t\tif(lx<=l&&r<=rx) return tr[p];\n\t\tint mid=(l+r)>>1,ret=0;\n\t\tif(lx<=mid) ret=max(ret,queryMax(lson,lx,rx));\n\t\tif(mid<rx)  ret=max(ret,queryMax(rson,lx,rx));\n\t\treturn ret; \n\t}\n\tint upper_bound_left(int p,int l,int r,int lx,int rx,int val)\n\t{\n\t\tif(l>rx||r<lx) return -1;\n\t\tif(tr[p]<val) return -1;\n\t\tif(l==r) return l;\t\n\t\tint mid=(l+r)>>1;\n\t\tint rres=upper_bound_left(rson,lx,rx,val);\n\t\tif(rres>=1) return rres;\n\t\telse return upper_bound_left(lson,lx,rx,val);\n\t}\n\tint upper_bound_right(int p,int l,int r,int lx,int rx,int val)\n\t{\n\t\tif(l>rx||r<lx) return -1;\n\t\tif(tr[p]<val) return -1;\n\t\tif(l==r) return l;\n\t\tint mid=(l+r)>>1;\n\t\tint lres=upper_bound_right(lson,lx,rx,val);\n\t\tif(lres>=1) return lres;\n\t\telse return upper_bound_right(rson,lx,rx,val);\n\t}\n\tvoid Debug(int p,int l,int r)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tprintf(\"[%d,%d]:%d\\n\",l,r,tr[p]);\n\t\tDebug(lson);Debug(rson);\n\t}\n}Tr;\nchar s[250005];\nint main() {\n\tint a,m;\n\tscanf(\"%d %d\",&n,&a);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&d[i]);\n\t\tif(n-d[i]+1<=10) rk[n-d[i]+1]=i;\n\t}\n\tTr.build(1,1,n);\n\tscanf(\"%d\",&m);\n\tint Maxn=n,pos,val;\n\twhile(m--)\n\t{\n\t\tscanf(\"%s\",s+1);\n\t\tif(s[1]=='E')\n\t\t{\n\t\t\tint lst=min(n,10);\n\t\t\tscanf(\"%d %d\",&pos,&val);\n\t\t\tfor(int i=1;i<=10;i++) if(rk[i]==pos) lst=i;\n\t\t\tfor(int i=lst-1;i>=val;i--) rk[i+1]=rk[i];\n\t\t\trk[val]=pos;\n\t\t\tfor(int i=val;i>=1;i--) Maxn++,Tr.Modify(1,1,n,rk[i],Maxn);\n\t\t}\n\t\tif(s[1]=='F')\n\t\t{\n\t\t\tscanf(\"%d\",&pos);\n\t\t\tif(pos==a)\n\t\t\t{\n\t\t\t\tputs(\"0\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(pos<a)\n\t\t\t{\n\t\t\t\tint MAX=Tr.queryMax(1,1,n,pos,a-1);\n\t\t\t\tint k=Tr.upper_bound_right(1,1,n,a+1,n,MAX);\n\t\t\t\tif(k==-1) k=n+1;\n\t\t\t\tprintf(\"%d\\n\",k-pos-1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tint MAX=Tr.queryMax(1,1,n,a+1,pos);\n\t\t\t\tint k=Tr.upper_bound_left(1,1,n,1,a-1,MAX);\n\t\t\t\tif(k==-1) k=0;\n\t\t\t\tprintf(\"%d\\n\",pos-k-1);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\n\n",
        "postTime": 1607072143,
        "uid": 160701,
        "name": "Azaz\u0435l",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6544 \u3010[CEOI2014] Cake\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n- \u957f\u5ea6\u4e3a $n$ \u6392\u5217 $\\{d_i\\}$\uff0c\u8d77\u70b9 $a$ \u548c $q$ \u6b21\u64cd\u4f5c\u3002\n\n- \u4fee\u6539\u64cd\u4f5c\u662f\u5c06 $d_i$ \u63d0\u5347\u81f3\u7b2c $k$ \u5927\uff08$k\\in [1,10]$\uff09\u3002\n\n- \u6bcf\u6b21\u67e5\u8be2 $i$\uff0c\u5148\u5220\u9664\u4f4d\u7f6e $a$\uff0c\u8bbe\u7a7a\u4f4d\u7f6e\u96c6\u5408\u4e3a $[L,R]$\uff0c\u5220\u9664 $d_{L-1},d_{R+1}$ \u4e2d\u8f83\u5c0f\u7684\uff0c\u56de\u7b54\u5220\u9664 $d_i$ \u65f6\u5df2\u5220\u9664\u591a\u5c11\u4e2a\u6570\u3002\n\n- $ n \\in [1,2.5\\times 10^5],q\\in [1,5\\times 10^5] $\n\n# \u4e00. \u5206\u6790\n\n\u53ef\u4ee5\u628a $\\{d_i\\}$ \u5206\u4e3a $a$ \u5de6\u8fb9\u548c\u53f3\u8fb9\u4e24\u90e8\u5206\u3002\u5355\u72ec\u770b\u5de6\u534a\u8fb9\uff0c\u5220\u9664\u987a\u5e8f\u662f\u4ece\u53f3\u5f80\u5de6\uff08\u5de6\u534a\u90e8\u5206\u7684\u6b63\u65b9\u5411\uff09\uff0c\u5355\u72ec\u770b\u53f3\u8fb9\u5c31\u662f\u4ece\u5de6\u5f80\u53f3\uff08\u53f3\u534a\u90e8\u5206\u7684\u6b63\u65b9\u5411\uff09\uff0c\u6700\u7ec8\u7684\u5220\u9664\u987a\u5e8f\u5176\u5b9e\u53ef\u4ee5\u8ba4\u4e3a\u662f\u6309\u987a\u5e8f\u5c06\u5de6\u534a\u90e8\u5206\u63d2\u5165\u53f3\u534a\u90e8\u5206\uff08\u6216\u8005\u53f3\u534a\u90e8\u5206\u63d2\u5165\u5de6\u534a\u90e8\u5206\uff09\u3002\n\n\u8003\u8651\u63d2\u5165\u7684\u8fc7\u7a0b\uff0c\u5148\u662f\u627e\u5230\u53f3\u8fb9\u7b2c\u4e00\u4e2a\u6bd4 $d_{a-1}$ \u5927\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u628a $d_{a-1}$ \u63d2\u5165\u90a3\u4e2a\u4f4d\u7f6e\u4e4b\u524d\uff1b\u63a5\u7740\u4ece\u63d2\u5165 $d_{a-1}$ \u7684\u4f4d\u7f6e\u5f00\u59cb\u627e\u7b2c\u4e00\u4e2a\u6bd4 $d_{a-2}$ \u5927\u7684\u4f4d\u7f6e\u2026\u2026\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n\u5982\u679c\u5de6\u534a\u90e8\u5206\u4e2d $d_i>d_{i-1}$\uff0c\u90a3\u4e48\u6700\u7ec8\u7684\u5220\u9664\u5e8f\u5217\u4e2d $d_{i-1}$ \u5c31\u7d27\u63a5\u7740\u5728 $d_i$ \u53f3\u8fb9\uff0c\u56e0\u4e3a $d_{i-1}$ \u4e0d\u8db3\u4ee5\u8de8\u8d8a\u963b\u6321 $d_i$ \u7684\u6570\u3002\u65e2\u7136\u5982\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5206\u522b\u7ef4\u62a4\u5de6\u53f3\u90e8\u5206\u201c\u5148\u4e8e\u6211\u63d2\u5165\u7684\u6570\u90fd\u6bd4\u6211\u5c0f\u201d\u7684\u4f4d\u7f6e\uff0c\u8fd9\u6837\u7b80\u5316\u540e\u7684\u5de6\u53f3\u90e8\u5206\u90fd\u662f\u5355\u8c03\u9012\u589e\u7684\u4e86\u3002\n\n\u90a3\u4e48\u6765\u5904\u7406\u67e5\u8be2\u3002\u4e0d\u59a8 $i<a$\uff0c\u6211\u4eec\u5148\u627e\u51fa\u7b80\u5316\u540e\u7684\u5de6\u5e8f\u5217 $i$ \u7684\u524d\u9a71 $x$\uff08\u6700\u5c0f\u7684 $\\geq i$ \u7684\u4f4d\u7f6e\uff09\uff0c\u7136\u540e\u627e\u51fa $x$ \u5728\u7b80\u5316\u7684\u53f3\u5e8f\u5217\u7684\u540e\u7ee7 $y$\uff08\u6700\u5c0f\u7684 $d_y>d_x$ \u7684\u4f4d\u7f6e\uff09\uff0c\u7b54\u6848\u5c31\u4e3a $y-x-1$\u3002\n\n\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\uff0c\u53ef\u4ee5\u66b4\u529b\u7ef4\u62a4\u524d $10$ \u5927\u7684\u6570\u7684\u6743\u503c\uff0c\u7136\u540e\u5de6\u53f3\u7684\u7b80\u5316\u5e8f\u5217\u505a\u5bf9\u5e94\u4fee\u6539\u3002\n\n# \u4e8c. \u5b9e\u73b0\n\n\u7ef4\u62a4\u7b80\u5316\u5e8f\u5217\u53ef\u4ee5\u7528\u5e73\u8861\u6811\u3002\u5bf9\u4e8e\u67e5\u8be2\u64cd\u4f5c\u5728\u5e73\u8861\u6811\u4e0a\u4e8c\u5206\u5373\u53ef\uff1b\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\uff0c\u63d0\u5347 $d_i$ \u7684\u6743\u503c\u540e\u5220\u9664\u7b80\u5316\u5e8f\u5217\u540e\u6bd4\u4ed6\u5c0f\u7684\u5143\u7d20\u5373\u53ef\u3002\n\n\u5355\u6b21\u67e5\u8be2 $O(\\log n)$\uff0c\u603b\u7684\u4fee\u6539\u590d\u6742\u5ea6 $O((q+n)\\log n + 10q)$\u3002\n\n\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n + q(10+\\log n))$\uff0c\u7a7a\u95f4 $O(n+q)$\u3002\n\n# \u4e09. \u4ee3\u7801\n\n~~\u61d2\u5f97\u624b\u6253\u5e73\u8861\u6811\u56e0\u6b64\u5199\u4e86\u4e24\u4e2a log \u7684 set~~\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef set<int>::iterator it;\n\nconst int MAXN=2.5e5,MAXQ=5e5;\n\nint n,beg,q;\nint d[MAXN+5];\nint Top[11];//\u6700\u5927\u7684 10 \u4e2a\u86cb\u7cd5\nset<int> Q;\nint inTop[MAXN+5];\n\nint main()\n{\n\tscanf(\"%d %d\",&n,&beg);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&d[i]);\n\tscanf(\"%d\",&q);\n\tif(n<=10)\n\t{\n\t\tchar opt;\n\t\tfor(int x,v;q--;)\n\t\t{\n\t\t\tcin>>opt;\n\t\t\tif(opt=='E')\n\t\t\t{\n\t\t\t\tscanf(\"%d %d\",&x,&v);\n\t\t\t\tv=n-v+1;\n\t\t\t\tfor(int i=1;i<=n;i++)\n\t\t\t\t\tif(d[x]<d[i] && d[i]<=v) --d[i];\n\t\t\t\td[x]=v;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tscanf(\"%d\",&x);\n\t\t\t\tif(beg==x) {printf(\"0\\n\");continue;}\n\t\t\t\tint L=beg-1,R=beg+1;\n\t\t\t\tint ans=0;\n\t\t\t\twhile(x<=L || R<=x)\n\t\t\t\t{\n\t\t\t\t\tint Lval=n+1,Rval=n+1;\n\t\t\t\t\tif(L>=1) Lval=d[L];\n\t\t\t\t\tif(R<=n) Rval=d[R];\n\t\t\t\t\tif(Lval<Rval) --L;\n\t\t\t\t\telse ++R;\n\t\t\t\t\t++ans;\n\t\t\t\t}\n\t\t\t\tprintf(\"%d\\n\",ans);\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(d[i]>=n-9) Top[n-d[i]+1]=i,inTop[i]=n-d[i]+1;//\u4ece\u5927\u5230\u5c0f \n\t//for(int i=1;i<=10;i++) printf(\"%d \",Top[i]);printf(\"\\n\");\n\t\n\tQ.insert(beg);\n\tint lst=0;\n\tfor(int i=beg+1;i<=n;i++)\n\t\tif(d[i]>lst) lst=d[i],Q.insert(i);\n\tlst=0;\n\tfor(int i=beg-1;i>=1;i--)\n\t\tif(d[i]>lst) lst=d[i],Q.insert(i);\n\tQ.insert(0),Q.insert(n+1);\n\td[0]=d[n+1]=2*MAXQ;\n\t\n\tchar opt;\n\tfor(int x,v;q--;)\n\t{\n\t\tcin>>opt;\n\t\tif(opt=='E')\n\t\t{\n\t\t\tscanf(\"%d %d\",&x,&v);\n\n\t\t\td[x]=d[Top[v]]+1;\n\t\t\tif(!inTop[x])\n\t\t\t{\n\t\t\t\tinTop[Top[10]]=0;\n\t\t\t\tfor(int i=10;i>v;i--) Top[i]=Top[i-1],inTop[Top[i]]=i;\n\t\t\t}\n\t\t\telse for(int i=inTop[x];i>v;i--) Top[i]=Top[i-1],inTop[Top[i]]=i;\n\t\t\t\n\t\t\tTop[v]=x;\n\t\t\tinTop[x]=v;\n\t\t\tfor(int i=v-1;i>=1;i--) d[Top[i]]=d[Top[i+1]]+1;\n\t\t\t\n\t\t\tif(x==beg) continue;\n\t\t\tit now;\n\t\t\tif(x<beg)\n\t\t\t{\n\t\t\t\tnow=Q.upper_bound(x);\n\t\t\t\tif(d[x]<d[*now] && (*now)<beg) continue;\n\t\t\t\tQ.insert(x);\n\t\t\t\twhile(1)\n\t\t\t\t{\n\t\t\t\t\tnow=(--Q.lower_bound(x));\n\t\t\t\t\tif(d[x]<d[*now]) break;\n\t\t\t\t\tQ.erase(now);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnow=(--Q.lower_bound(x));\n\t\t\t\tif(d[x]<d[*now] && (*now)>beg) continue;\n\t\t\t\tQ.insert(x);\n\t\t\t\twhile(1)\n\t\t\t\t{\n\t\t\t\t\tnow=Q.upper_bound(x);\n\t\t\t\t\tif(d[x]<d[*now]) break;\n\t\t\t\t\tQ.erase(now);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tscanf(\"%d\",&x);\n\t\t\t\n\t\t\tif(x==beg) {printf(\"0\\n\");continue;}\n\t\t\tif(x<beg)\n\t\t\t{\n\t\t\t\tint val=d[*Q.lower_bound(x)];\n\t\t\t\tit i;\n\t\t\t\tfor(i=++Q.lower_bound(beg);1;i++)\n\t\t\t\t\tif(d[*i]>val) break;\n\t\t\t\tprintf(\"%d\\n\",(*i)-1-x);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tint val=d[*--Q.upper_bound(x)];\n\t\t\t\tit i;\n\t\t\t\tfor(i=--Q.lower_bound(beg);1;i--)\n\t\t\t\t\tif(d[*i]>val) break;\n\t\t\t\tprintf(\"%d\\n\",x-(*i)-1);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1647090573,
        "uid": 54591,
        "name": "Seauy",
        "ccfLevel": 9,
        "title": "[CEOI2014] Cake \u7684\u9898\u89e3"
    }
]