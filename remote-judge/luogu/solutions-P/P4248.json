[
    {
        "content": "\u8fd9\u9053\u9898\uff0c\u663e\u7136\u5c31\u662f$SAM$\u7684\u6a21\u677f\u9898\u3002\n\n\u6c42\u4e24\u4e2a\u540e\u7f00\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\uff0c\u663e\u7136\u5c31\u662f\u4e24\u4e2a\u540e\u7f00\u7684\u8282\u70b9\u5728$Parent$\u6811\u4e0a\u7684$LCA$\uff0c\u56e0\u4e3a$Parent$\u6811\u4e0a\u7684\u7236\u4eb2\u5c31\u662f\u5b83\u7684\u4e00\u4e9b\u524d\u7f00\u3002\n\n\u800c\u770b\u5230\u9898\u76ee\u4e2d\u7684\u5f0f\u5b50\uff0c\u5f88\u5bb9\u6613\u60f3\u5230$u$\u5230$v$\u7684\u8def\u5f84\u957f\uff08~~\u8fd9\u4e2a\u5f0f\u5b50\u90a3\u4e48\u7f8e\u89c2\uff0c\u4e3a\u4ec0\u4e48\u8981\u628a\u5b83\u62c6\u6389\u5462\uff1f~~\uff09\n\n\u6240\u4ee5\u5b9a\u4e49\u4ee5$p$\u4e3a\u513f\u5b50\u7684\u8fb9\u7684\u8fb9\u6743\u4e3a$len[p]-len[fa[p]]$\uff0c\u7136\u540e\u5c31\u662f\u6811\u4e0a\u6240\u6709\u8def\u5f84\u8fb9\u6743\u4e4b\u548c\u4e4b\u548c\u3002\n\n\u6211\u4eec\u8003\u8651\u4e00\u6761\u8fb9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u663e\u7136\u5c31\u662f\u6709$size_p*(n-size_p)$\u6761\u8def\u5f84\u7ecf\u8fc7\u8fd9\u6761\u8fb9\uff0c\u4e58\u4e0a\u8fb9\u6743\u52a0\u5165\u7b54\u6848\u5373\u53ef\u3002\n\n\u6211\u89c9\u5f97\u51fa\u9898\u4eba\u628a\u5f0f\u5b50\u51fa\u6210\u8fd9\u6837\uff0c\u5e94\u8be5\u6b63\u89e3\u60f3\u7684\u5c31\u662f\u8fd9\u4e2a\u5427\u3002\u3002\u3002\uff08\u5982\u679c\u4e0d\u662f\u3002\u3002\u3002\u4e5f\u4e0d\u4f1a\u600e\u4e48\u6837\u561b\uff09\n```\n\u5c31\u5f53\u6211\u6c42\u5927\u5bb6\u4e86\uff0c\u7ed9\u4e2a\u8d5e\u5427\u2026\u2026\u4e0d\u7136\u771f\u6ca1\u51e0\u4e2a\u4eba\u77e5\u9053\u771f\u6b63\u7684\u6b63\u89e3\u4e86\u2026\u2026\n\t\t\u2014\u2014\u2014\u2014from AThousandSuns\u795e\u4ed9\n```\n\uff08\u624b\u52a8hua|ji\uff09\n\nUpdate:\u5bf9\u4e0d\u8d77\u8fd9\u91cc\u5199\u9519\u4e86\uff0c\u8981\u628a\u6574\u4e2a\u4e32\u7ffb\u8f6c\u8fc7\u6765\u5efaSAM\u7684Parent\u6811\u624d\u53ef\u4ee5\uff0c\u4e0d\u7136\u5c31\u53d8\u6210\u4e86LCS\uff0c\u4f46\u5176\u5b9e\u662f\u4e00\u6837\u7684\u3002\uff08\u8bef\u5bfc\u4eba\u771f\u5fc3\u5bf9\u4e0d\u8d77\uff09\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#define Rint register int\nusing namespace std;\ntypedef long long LL;\nconst int N = 1000003;\nint n, a[N], c[N];\nchar str[N];\nLL ans;\nstruct SAM {\n    int cnt, last, ch[N][26], fa[N], l[N], size[N];\n    inline void ins(int c){\n        int p = last, np = ++ cnt;\n        l[last = np] = l[p] + 1;\n        for(;p && !ch[p][c];p = fa[p]) ch[p][c] = np;\n        if(!p) fa[np] = 1;\n        else {\n            int q = ch[p][c];\n            if(l[q] == l[p] + 1) fa[np] = q;\n            else {\n                int nq = ++ cnt;\n                l[nq] = l[p] + 1;\n                memcpy(ch[nq], ch[q], sizeof ch[q]);\n                fa[nq] = fa[q]; fa[q] = fa[np] = nq;\n                for(;ch[p][c] == q;p = fa[p]) ch[p][c] = nq;\n            }\n        }\n        size[np] = 1;\n    }\n    inline void calc(){\n        for(Rint i = 1;i <= cnt;i ++) c[l[i]] ++;\n        for(Rint i = 1;i <= cnt;i ++) c[i] += c[i - 1];\n        for(Rint i = 1;i <= cnt;i ++) a[c[l[i]] --] = i;\n        for(Rint i = cnt;i;i --){\n            int p = a[i];\n            size[fa[p]] += size[p];\n            ans += (LL) (l[p] - l[fa[p]]) * size[p] * (n - size[p]);\n        }\n    }\n} sam;\nint main(){\n    scanf(\"%s\", str);\n    n = strlen(str);\n    sam.last = sam.cnt = 1;\n    for(Rint i = 0;i < n;i ++)\n        sam.ins(str[i] - 'a');\n    sam.calc();\n    printf(\"%lld\", ans);\n}\n```",
        "postTime": 1545126281,
        "uid": 68148,
        "name": "watermoon",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4248 \u3010[AHOI2013]\u5dee\u5f02\u3011"
    },
    {
        "content": "### \u9898\u610f\u7b80\u8ff0\uff1a\n\n\u5b9a\u4e49\u4e24\u4e2a\u5b57\u7b26\u4e32 $S$ \u548c $T$ \u7684\u5dee\u5f02 $\\operatorname{diff}(S,T)$ \u4e3a\u8fd9\u4e24\u4e2a\u4e32\u7684\u957f\u5ea6\u4e4b\u548c\u51cf\u53bb\u4e24\u500d\u7684\u8fd9\u4e24\u4e2a\u4e32\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u7684\u957f\u5ea6\u3002\n\n\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5b9a\u4e49\u4ece\u7b2c $i$ \u4e2a\u5b57\u7b26\u5f00\u59cb\u7684\u540e\u7f00\u4e3a $Suf_i$\u3002\n\n\u6c42 $\\sum_{1\\le i<j\\le n}\\operatorname{diff}(Suf_i,Suf_j)$\u3002\n\n### \u9898\u89e3\uff1a\n\n\u5316\u7b80\u5f0f\u5b50\uff0c\u539f\u5f0f\u7b49\u4e8e\n\n$$\\begin{aligned}&\\left(\\sum_{1\\le i<j\\le n}i+j\\right)-2\\times\\sum_{1\\le i<j\\le n}\\operatorname{lcp}(Suf_i,Suf_j)\\\\=&\\frac{n(n-1)(n+1)}{2}-2\\times\\sum_{1\\le i<j\\le n}\\operatorname{lcp}(Suf_i,Suf_j)\\end{aligned}$$\n\n\u6240\u4ee5\u53ea\u8981\u6c42\u51fa\u540e\u534a\u90e8\u5206\u5373\u53ef\u3002\n\n\u5efa\u7acb\u5b57\u7b26\u4e32\u7684\u540e\u7f00\u6570\u7ec4\u3002\n\n\u8003\u8651 Height \u6570\u7ec4\u7684\u8d21\u732e\uff1aHeight \u6570\u7ec4\u4e2d \\[2, n\\] \u5185\u7684\u6bcf\u4e00\u4e2a\u533a\u95f4\u90fd\u7ed9\u7b54\u6848\u8d21\u732e\u533a\u95f4\u6700\u5c0f\u503c\u3002\n\n\u5957\u8def\uff1a\u6bcf\u4e2a\u533a\u95f4\u7684\u533a\u95f4\u6700\u5c0f\u503c\u4e4b\u548c\uff0c\u4f7f\u7528\u5355\u8c03\u6808\u89e3\u51b3\u3002\n\n```cpp\n#include <cstdio>\n#include <cstring>\n\ntypedef long long LL;\nconst int MN = 500005;\n\nint N;\nchar str[MN];\n\nint M;\nint rk[MN], rk2[MN], SA[MN], SA2[MN];\nint buk[MN], cnt;\nint Height[MN];\n\nvoid GetHeight() {\n\tint k = 0;\n\tfor (int i = 1; i <= N; ++i) {\n\t\tif (rk[i] == 1) { k = Height[1] = 0; continue; }\n\t\tif (k) --k;\n\t\tint j = SA[rk[i] - 1];\n\t\twhile (i + k <= N && j + k <= N && str[i + k] == str[j + k]) ++k;\n\t\tHeight[rk[i]] = k;\n\t}\n}\n\nvoid Rsort() {\n\tfor (int i = 1; i <= M; ++i) buk[i] = 0;\n\tfor (int i = 1; i <= N; ++i) ++buk[rk[i]];\n\tfor (int i = 1; i <= M; ++i) buk[i] += buk[i - 1];\n\tfor (int i = N; i >= 1; --i) SA[buk[rk[SA2[i]]]--] = SA2[i];\n}\n\nvoid GetSA() {\n\tM = 26;\n\tfor (int i = 1; i <= N; ++i) rk[i] = str[i] - 'a' + 1, SA2[i] = i;\n\tRsort();\n\tfor (int j = 1; j < N; j <<= 1) {\n\t\tint P = 0;\n\t\tfor (int i = N - j + 1; i <= N; ++i) SA2[++P] = i;\n\t\tfor (int i = 1; i <= N; ++i) if (SA[i] > j) SA2[++P] = SA[i] - j;\n\t\tRsort();\n\t\trk2[SA[1]] = P = 1;\n\t\tfor (int i = 2; i <= N; ++i) {\n\t\t\tif (rk[SA[i]] != rk[SA[i - 1]] || rk[SA[i] + j] != rk[SA[i - 1] + j]) ++P;\n\t\t\trk2[SA[i]] = P;\n\t\t}\n\t\tfor (int i = 1; i <= N; ++i) rk[i] = rk2[i];\n\t\tM = P;\n\t\tif (M == N) break;\n\t}\n\tGetHeight();\n}\n\nint st[MN], t;\nint L[MN], R[MN];\n\nint main() {\n\tscanf(\"%s\", str + 1);\n\tN = strlen(str + 1);\n\tGetSA();\n\tst[t = 1] = 1;\n\tfor (int i = 2; i <= N; ++i) {\n\t\twhile (t && Height[st[t]] > Height[i]) R[st[t--]] = i;\n\t\tL[i] = st[t];\n\t\tst[++t] = i;\n\t} while (t) R[st[t--]] = N + 1;\n\tLL Ans = (LL)(N - 1) * N * (N + 1) / 2;\n\tfor (int i = 2; i <= N; ++i)\n\t\tAns -= 2ll * (R[i] - i) * (i - L[i]) * Height[i];\n\tprintf(\"%lld\\n\", Ans);\n\treturn 0;\n}\n```",
        "postTime": 1544867617,
        "uid": 10703,
        "name": "\u5c0f\u7c89\u5154",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4248 \u3010[AHOI2013]\u5dee\u5f02\u3011"
    },
    {
        "content": "\u540e\u7f00\u6570\u7ec4+\u5355\u8c03\u6808\u7684\u5e94\u7528\n\n\u9996\u5148\u6211\u4eec\u7814\u7a76\u4e00\u4e0b\u8fd9\u4e2a\u8868\u8fbe\u5f0f\uff0c\u53ef\u4ee5\u53d1\u73b0\u524d\u534a\u90e8\u5206\u4e0e\u4e32\u7684\u60c5\u51b5\u5e76\u6ca1\u6709\u5173\u7cfb\uff0c\u800c\u53ea\u662f\u8ddf\u4e32\u7684\u957f\u5ea6\u6709\u5173\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u628a\u524d\u534a\u90e8\u5206\u7b97\u51fa\u6765\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8ba1\u7b97\u51fa\u5417\u6bcf\u4e2alcp\u5373\u53ef\n\n\u90a3\u4e48\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6392\u540d\u5206\u522b\u4e3ai\uff0cj\u7684\u4e24\u4e2a\u4e32\uff0c\u4ed6\u4eec\u7684lcp\u5e94\u5f53\u662f\uff1amin(height[i]~height[j])\n\n\u4f46\u662f\u8fd9\u91cc\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4ecd\u7136\u5f88\u5927\n\n\u6211\u4eec\u6362\u4e00\u4e2a\u89d2\u5ea6\u6765\u601d\u8003\uff1a\u5982\u679c\u8bbemin(height[i]~height[j])=height[k]\uff0c\u90a3\u4e48\u6211\u4eec\u8ba4\u4e3aheight[k]\u4ea7\u751f\u4e86\u4e00\u4e2a\u8d21\u732e\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4ece\u6bcf\u4e00\u4e2aheight[k]\u4ea7\u751f\u4e86\u591a\u5c11\u8d21\u732e\u7684\u89d2\u5ea6\u6765\u601d\u8003\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u5230O\uff08n\uff09\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u4e00\u4e2ak\u4f1a\u5bf9\u4e00\u4e2a\u533a\u95f4\u4ea7\u751f\u8d21\u732e\u7684\u6761\u4ef6\u5c31\u662fheight[k]\u662f\u6240\u5728\u533a\u95f4\u7684\u6700\u5c0f\u503c\n\n\u8fd9\u5c31\u53ef\u4ee5\u7528\u5355\u8c03\u6808\u7ef4\u62a4\u4e86\uff01\uff01\n\n\u4f46\u662f\u8981\u6ce8\u610f\uff0c\u4e3a\u4e86\u9632\u6b62\u91cd\u590d\u8ba1\u7b97\uff0c\u6211\u4eec\u5bf9\u5355\u8c03\u6808\u7684\u4e24\u7aef\u70b9\u7684\u53d6\u7b49\u6761\u4ef6\u8bbe\u6210\u4e0d\u4e00\u6837\u7684\uff08\u5373\u5de6\u4fa7\u7b97\u5230\u7b2c\u4e00\u4e2aheight\u5c0f\u4e8e\u7b49\u4e8eheight[k],\u53f3\u4fa7\u7b97\u5230\u7b2c\u4e00\u4e2aheight\u5c0f\u4e8eheight[k]\u7684\u4f4d\u7f6e\uff09\n\n\u8fd9\u6837\u627e\u5230\u6bcf\u4e2a\u70b9\u5411\u5de6\u548c\u5411\u53f3\u80fd\u5ef6\u4f38\u7684\u4f4d\u7f6elx,rx\u8fd9\u6837\u4ed6\u6240\u5360\u7684\u533a\u95f4\u4e2a\u6570\u5c31\u662f\uff08i-lx\uff09*(rx-i)\n\n\u8fd9\u6837\u53bb\u66f4\u65b0\u5c31\u53ef\u4ee5\u4e86\n\n```cpp\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <iostream>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#define ll long long\nusing namespace std;\nchar s[500005];\nint sa[500005];\nint rank[500005];\nint temprank[500005];\nint height[500005];\nint has[500005];\nint v[500005];\nint lx[500005],rx[500005];\nint l;\nbool be_same(int x,int y,int len)\n{\n    return x+len>l||y+len>l||rank[x]!=rank[y]||rank[x+len]!=rank[y+len];\n}\nvoid get_sa()\n{\n    int cnt=0;\n    for(int i=1;i<=l;i++)v[i]=s[i];\n    for(int i=1;i<=l;i++)has[v[i]]++;\n    for(int i=0;i<128;i++)if(has[i])temprank[i]=++cnt;\n    for(int i=1;i<128;i++)has[i]+=has[i-1];\n    for(int i=1;i<=l;i++)\n    {\n        rank[i]=temprank[v[i]];\n        sa[has[v[i]]--]=i;\n    }\n    for(int k=1;cnt!=l;k<<=1)\n    {\n        cnt=0;\n        for(int i=1;i<=l;i++)has[i]=0;\n        for(int i=1;i<=l;i++)has[rank[i]]++;\n        for(int i=1;i<=l;i++)has[i]+=has[i-1];\n        for(int i=l;i;i--)if(sa[i]>k)temprank[sa[i]-k]=has[rank[sa[i]-k]]--;\n        for(int i=1;i<=k;i++)temprank[l-i+1]=has[rank[l-i+1]]--;\n        for(int i=1;i<=l;i++)sa[temprank[i]]=i;\n        for(int i=1;i<=l;i++)temprank[sa[i]]=be_same(sa[i],sa[i-1],k)?++cnt:cnt;\n        for(int i=1;i<=l;i++)rank[i]=temprank[i];\n    }\n    for(int i=1;i<=l;i++)\n    {\n        if(rank[i]==1)continue;\n        int j=max(1,height[rank[i-1]]-1);\n        while(s[i+j-1]==s[sa[rank[i]-1]+j-1])height[rank[i]]=j++;\n    }\n}\nvoid init()\n{\n    height[0]=height[l+1]=-0x3f3f3f3f;\n    ll ret=0;\n    for(int i=1;i<=l;i++)lx[i]=i-1,rx[i]=i+1;\n    for(int i=2;i<=l;i++)while(height[lx[i]]>height[i])lx[i]=lx[lx[i]];\n    for(int i=l;i>=2;i--)while(height[rx[i]]>=height[i])rx[i]=rx[rx[i]];\n    for(int i=2;i<=l;i++)ret+=2*height[i]*(ll)((ll)(rx[i]-i)*(ll)(i-lx[i]));\n    ll ans=1ll*(l-1)*l/2ll*(l+1);\n    printf(\"%lld\\n\",ans-ret);\n}\nint main()\n{\n    scanf(\"%s\",s+1);\n    l=strlen(s+1);\n    get_sa();\n    init();\n    return 0;\n}\n\n```\n",
        "postTime": 1555835378,
        "uid": 66905,
        "name": "leozhang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4248 \u3010[AHOI2013]\u5dee\u5f02\u3011"
    },
    {
        "content": "# \u5dee\u5f02\n\n\u9898\u89e3\uff1a\n\n\u4e24\u4e2a\u540e\u7f00\u4e4b\u95f4\u7684$LCP$\u548c\u663e\u7136\u4e0d\u597d\u6c42\u3002\n\n\u6211\u4eec\u5148\u6784\u5efa\u540e\u7f00\u6570\u7ec4\u3002\n\n\u90a3\u4e48\u4efb\u610f\u4e24\u4e2a\u540e\u7f00\u4e4b\u95f4\u7684$LCP$\u4e4b\u548c\u5c31\u662f\u6240\u6709$sa$\u6570\u7ec4\u4e0a\u6240\u6709\u533a\u95f4\n\n\u7684$ht$\u6700\u5c0f\u503c\u3002\n\n\u6362\u8a00\u4e4b\uff0c\u6211\u4eec\u6709\u4e00\u4e2a$a$\u6570\u7ec4\u3002\n\n\u663e\u7136\u8ba9\u4f60\u6c42\u6240\u6709\u533a\u95f4\u7684\u6743\u503c\u548c\u3002\n\n\u4e00\u4e2a\u533a\u95f4\u7684\u6743\u503c\u4e3a\u8fd9\u4e2a\u533a\u95f4\u5185\u6240\u6709$a_i$\u7684\u6700\u5c0f\u503c\u3002\n\n\u8fd9\u4e2a\u8fc7\u7a0b\u6211\u4eec\u53ef\u4ee5\u7528\u5355\u8c03\u6808\u5b9e\u73b0\u3002\n\nCode\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define N 500010 \nusing namespace std; typedef long long ll;\nint wv[N],wa[N],wb[N],Ws[N],x[N],y[N],sa[N],rk[N],ht[N],n,m,S[N],top;\nll f[N]; int r[N]; char s[N];\nvoid build_sa()\n{\n\tm=129;\n\tint i,j,p,*x=wa,*y=wb,*t;\n\tfor(i=0;i<m;i++) Ws[i]=0;\n\tfor(i=0;i<n;i++) Ws[x[i]=r[i]]++;\n\tfor(i=1;i<m;i++) Ws[i]+=Ws[i-1];\n\tfor(i=n-1;~i;i--) sa[--Ws[x[i]]]=i;\n\tfor(p=j=1;p<n;j<<=1,m=p)\n\t{\n\t\tfor(p=0,i=n-j;i<n;i++) y[p++]=i;\n\t\tfor(i=0;i<n;i++) if(sa[i]-j>=0) y[p++]=sa[i]-j;\n\t\tfor(i=0;i<n;i++) wv[i]=x[y[i]];\n\t\tfor(i=0;i<m;i++) Ws[i]=0;\n\t\tfor(i=0;i<n;i++) Ws[wv[i]]++;\n\t\tfor(i=1;i<m;i++) Ws[i]+=Ws[i-1];\n\t\tfor(i=n-1;~i;i--) sa[--Ws[wv[i]]]=y[i];\n\t\tfor(t=x,x=y,y=t,i=p=1,x[sa[0]]=0;i<n;i++)\n\t\t{\n\t\t\tif(y[sa[i]]==y[sa[i-1]]&&y[sa[i-1]+j]==y[sa[i]+j]) x[sa[i]]=p-1;\n\t\t\telse x[sa[i]]=p++;\n\t\t}\n\t}\n\tfor(i=1;i<n;i++) rk[sa[i]]=i;\n\tfor(i=p=0;i<n-1;ht[rk[i++]]=p)\n\tfor(p?p--:0,j=sa[rk[i]-1];r[i+p]==r[j+p];p++);\n}\nint main()\n{\n    scanf(\"%s\",s);\n    n=strlen(s);\n    ll sum=1ll*n*(n+1)*(n-1)/2;\n    for(int i=0;i<n;i++) r[i]=s[i];\n    r[n++]=0;\n    build_sa();\n    for(int i=0;i<n;i++)\n\t{\n        while(top&&ht[i]<ht[S[top]]) top--;\n        int j=S[top];\n        f[i]=f[j]+1ll*(i-j)*ht[i]; sum-=2*f[i];\n        S[++top]=i;\n    }\n    printf(\"%lld\\n\",sum);\n\treturn 0;\n}\n```\n\u63a8\u9500\u4e2a\u4ebablog [JZYshuraK](https://www.cnblogs.com/ShuraK/p/10132090.html)",
        "postTime": 1546857533,
        "uid": 58178,
        "name": "JZYshuraK",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4248 \u3010[AHOI2013]\u5dee\u5f02\u3011"
    },
    {
        "content": "### \u9898\u610f\n\n\u6c42\u4e00\u4e2a\u5b9a\u503c$-2\\times$\u6240\u6709\u540e\u7f00\u7684\u516c\u5171\u524d\u7f00\n\n---\n\n### \u9898\u89e3\n\n\u524d\u9762\u90a3\u4e2a\u5b9a\u503c\u662f$$\\sum_{i=1}^{n-1}\\sum_{j=i+1}^ni+j=(n-1)\\times\\sum_{i=1}^ni=\\frac{(n-1)*n*(n+1)}2$$\n\n\u8003\u8651\u628a\u539f\u4e32\u7ffb\u8f6c\u8fc7\u6765,\u90a3\u4e48\u8981\u6c42\u7684\u5c31\u662f\u6240\u6709\u524d\u7f00\u516c\u5171\u540e\u7f00\u4e86\n\n\u4e24\u4e2a\u524d\u7f00\u7684\u6700\u957f\u516c\u5171\u540e\u7f00\u7684\u7b54\u6848\u5c31\u662f\u8fd9\u4e24\u4e2a\u524d\u7f00\u6240\u4ee3\u8868\u7684\u70b9\u5728\u540e\u7f00\u6811\u4e0a$lca$\u7684\u957f\u5ea6\n\n\u9898\u76ee\u5c31\u8f6c\u5316\u4e3a\u6c42\u6811\u4e0a\u67d0\u4e00\u4e2a\u70b9\u662f\u591a\u5c11\u70b9\u5bf9\u7684$lca$\u518d\u4e58\u4e0a$len[lca]$\n\n\u4e0a\u9762\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u76f4\u63a5\u8bb0\u5f55\u4e00\u4e0b\u5b50\u6811$sz,$\u7136\u540e$DP$\u6c42\u51fa\n\n```\n#include<bits/stdc++.h>\n#define fp(i,a,b) for(register int i=a,I=b+1;i<I;++i)\n#define fd(i,a,b) for(register int i=a,I=b-1;i>I;--i)\n#define go(u) for(register int i=fi[u],v=e[i].to;i;v=e[i=e[i].nx].to)\n#define file(s) freopen(s\".in\",\"r\",stdin),freopen(s\".out\",\"w\",stdout)\ntemplate<class T>inline bool cmax(T&a,const T&b){return a<b?a=b,1:0;}\ntemplate<class T>inline bool cmin(T&a,const T&b){return a>b?a=b,1:0;}\nusing namespace std;\nconst int N=5e5+5,M=2*N;\ntypedef int arr[M];\ntypedef long long ll;\nstruct SAM{\n    int las,T,ch[M][26];arr fa,sz,len;\n    inline void init(){las=T=1;}\n    inline void ins(int c){\n        int p=las,np;fa[las=np=++T]=1,len[T]=len[p]+1;sz[T]=1;\n        for(;p&&!ch[p][c];p=fa[p])ch[p][c]=np;\n        if(p){\n            int q=ch[p][c],nq;\n            if(len[p]+1==len[q])fa[np]=q;\n            else{\n                fa[nq=++T]=fa[q],len[T]=len[p]+1;memcpy(ch[nq],ch[q],4*26);\n                for(fa[q]=fa[np]=nq;ch[p][c]==q;p=fa[p])ch[p][c]=nq;\n            }\n        }\n    }arr b,c;ll sum[M];\n    inline ll calc(){\n        ll tp=0;\n        fp(i,1,T)++c[len[i]];\n        fp(i,1,T)c[i]+=c[i-1];\n        fp(i,1,T)b[c[len[i]]--]=i;\n        fd(i,T,1){int u=b[i];\n            tp+=(ll)sz[fa[u]]*sz[u]*len[fa[u]],sz[fa[u]]+=sz[u];\n        }\n        return tp;\n    }\n}p;\nint n;char s[N];\nint main(){\n    #ifndef ONLINE_JUDGE\n        file(\"s\");\n    #endif\n    scanf(\"%s\",s);n=strlen(s);p.init();\n    fp(i,0,n-1)p.ins(s[i]-'a');\n    printf(\"%lld\\n\",(ll)(n-1)*n*(n+1)/2-2*p.calc());\nreturn 0;   \n}\n```",
        "postTime": 1521625707,
        "uid": 20156,
        "name": "Kelin",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4248 \u3010[AHOI2013]\u5dee\u5f02\u3011"
    },
    {
        "content": "[\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/Memory-of-winter/p/10161164.html)\n\n**\u9898\u76ee\u5927\u610f\uff1a**\u7ed9\u4e00\u4e2a\u957f\u5ea6\u4e3a$n$\u7684\u5b57\u7b26\u4e32\uff0c\u6c42\uff1a\n\n$$\\sum\\limits_{1\\leqslant i<j\\leqslant n}|suf_i|+|suf_j|-2\\times lcp(suf_i,suf_j)$$\n\n**\u9898\u89e3\uff1a**\u5efa\u4e00\u68f5\u540e\u7f00\u6811\uff0c\u8fd9\u4e2a\u5f0f\u5b50\u5c31\u6210\u4e86\u540e\u7f00\u6811\u4e0a\u6240\u6709\u540e\u7f00\u4e4b\u95f4\u7684\u8ddd\u79bb\uff08\u540e\u7f00\u6811\u53ef\u4ee5\u628a\u5b57\u7b26\u4e32\u53cd\u7740\u52a0\u5165\u540e\u7f00\u81ea\u52a8\u673a\u5f97\u5230\u7684$fail$\u6570\u7ec4\u800c\u6765\uff09\uff0c\u7136\u540e\u6709\u4e24\u79cd\u505a\u6cd5\uff1a\n\n1. \u628a$\\sum\\limits_{1\\leqslant i<j\\leqslant n}|suf_i|+|suf_j|$\u76f4\u63a5\u6c42\u51fa\u6765\n$$\\sum\\limits_{1\\leqslant i<j\\leqslant n}|suf_i|+|suf_j|$$\n$$=\\sum\\limits_{1\\leqslant i<j\\leqslant n}i+j$$\n$$=\\dfrac{n(n+1)(n-1)} 2$$\n\u7136\u540e\u5bf9\u6bcf\u4e2a\u70b9\u8003\u8651\u5b83\u4f5c\u4e3a$lca$\u7684\u8d21\u732e\n\n2. \u76f4\u63a5\u8003\u8651\u6bcf\u6761\u8fb9\u7684\u8d21\u732e\uff08\u8fd9\u79cd\u6bd4\u8f83\u7b80\u5355\u4e00\u70b9\uff09\n\n\n\n**C++ Code\uff1a**\uff08\u65b9\u6cd5\u4e00\uff09\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define maxn 500010\n\nnamespace SAM {\n#define N (maxn << 1)\n\tint head[N], cnt;\n\tstruct Edge {\n\t\tint to, nxt;\n\t} e[N];\n\tinline void addedge(int a, int b) {\n\t\te[++cnt] = (Edge) {b, head[a]}; head[a] = cnt;\n\t}\n\n\tint R[N], fail[N], nxt[N][26];\n\tint lst = 1, idx = 1;\n\tint sz[N];\n\tvoid append(char __ch) {\n\t\tint ch = __ch - 'a';\n\t\tint p = lst, np = lst = ++idx;\n\t\tR[np] = R[p] + 1; sz[np] = 1;\n\t\tfor (; p && !nxt[p][ch]; p = fail[p]) nxt[p][ch] = np;\n\t\tif (!p) fail[np] = 1;\n\t\telse {\n\t\t\tint q = nxt[p][ch];\n\t\t\tif (R[q] == R[p] + 1) fail[np] = q;\n\t\t\telse {\n\t\t\t\tint nq = ++idx;\n\t\t\t\tstd::copy(nxt[q], nxt[q] + 26, nxt[nq]);\n\t\t\t\tfail[nq] = fail[q], R[nq] = R[p] + 1, fail[np] = fail[q] = nq;\n\t\t\t\tfor (; p && nxt[p][ch] == q; p = fail[p]) nxt[p][ch] = nq;\n\t\t\t}\n\t\t}\n\t}\n\n\tlong long ans;\n\tvoid dfs(int u) {\n\t\tlong long tmp = 0;\n\t\tfor (int i = head[u]; i; i = e[i].nxt) {\n\t\t\tint v = e[i].to;\n\t\t\tdfs(v);\n\t\t\ttmp += static_cast<long long> (sz[u]) * sz[v];\n\t\t\tsz[u] += sz[v];\n\t\t}\n\t\tans += 2 * tmp * R[u];\n\t}\n\tlong long work() {\n\t\tfor (int i = 2; i <= idx; i++) addedge(fail[i], i);\n\t\tdfs(1);\n\t\treturn ans;\n\t}\n#undef N\n}\n\nint n;\nchar s[maxn];\nlong long ans;\nint main() {\n\tscanf(\"%s\", s + 1);\n\tn = strlen(s + 1);\n\tfor (int i = n; i; i--) SAM::append(s[i]);\n\tans = static_cast<long long> (n - 1) * n * (n + 1) / 2;\n\tans -= SAM::work();\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n\n```\n\n\n\n**C++ Code\uff1a**\uff08\u65b9\u6cd5\u4e8c\uff09\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define maxn 500010\n\nlong long ans;\nint n;\nnamespace SAM {\n#define N (maxn << 1)\n\tint head[N], cnt;\n\tstruct Edge {\n\t\tint to, nxt;\n\t} e[N];\n\tinline void addedge(int a, int b) {\n\t\te[++cnt] = (Edge) {b, head[a]}; head[a] = cnt;\n\t}\n\n\tint R[N], fail[N], nxt[N][26];\n\tint lst = 1, idx = 1;\n\tint sz[N];\n\tvoid append(char __ch) {\n\t\tint ch = __ch - 'a';\n\t\tint p = lst, np = lst = ++idx;\n\t\tR[np] = R[p] + 1; sz[np] = 1;\n\t\tfor (; p && !nxt[p][ch]; p = fail[p]) nxt[p][ch] = np;\n\t\tif (!p) fail[np] = 1;\n\t\telse {\n\t\t\tint q = nxt[p][ch];\n\t\t\tif (R[q] == R[p] + 1) fail[np] = q;\n\t\t\telse {\n\t\t\t\tint nq = ++idx;\n\t\t\t\tstd::copy(nxt[q], nxt[q] + 26, nxt[nq]);\n\t\t\t\tfail[nq] = fail[q], R[nq] = R[p] + 1, fail[np] = fail[q] = nq;\n\t\t\t\tfor (; p && nxt[p][ch] == q; p = fail[p]) nxt[p][ch] = nq;\n\t\t\t}\n\t\t}\n\t}\n\n\tvoid dfs(int u) {\n\t\tfor (int i = head[u]; i; i = e[i].nxt) {\n\t\t\tint v = e[i].to;\n\t\t\tdfs(v);\n\t\t\tsz[u] += sz[v];\n\t\t\tans += static_cast<long long> (n - sz[v]) * (sz[v]) * (R[v] - R[u]);\n\t\t}\n\t}\n\tvoid work() {\n\t\tfor (int i = 2; i <= idx; i++) addedge(fail[i], i);\n\t\tdfs(1);\n\t}\n#undef N\n}\n\nchar s[maxn];\nint main() {\n\tscanf(\"%s\", s + 1);\n\tn = strlen(s + 1);\n\tfor (int i = n; i; i--) SAM::append(s[i]);\n\tSAM::work();\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1545462930,
        "uid": 22072,
        "name": "Memory_of_winter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4248 \u3010[AHOI2013]\u5dee\u5f02\u3011"
    },
    {
        "content": "\u5176\u5b9e\u4e0d\u7528\u90a3\u4e48\u9ebb\u70e6\uff0c\u8ba1\u7b97\u51fa _sa_ \u548c _height_ \u540e\uff0c\u7528\u4e00\u4e2a _stack_ \u5c31\u89e3\u51b3\u4e86\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a _height[ i ]_ \uff0c\u82e5 _height[ i - 1 ]_ <= _height[ i ]_ \uff0c\u90a3\u4e48 _height[ i - 1 ]_ \u80fd\u53d6\u5230\u7684\u503c _height[ i ]_ \u90fd\u80fd\u53d6\u5230\uff1b\u82e5 _height[ i - 1 ]_ > _height[ i ]_ \uff0c\u8fd9\u90e8\u5206\u7684 _LCP_ \u957f\u5ea6\u5c31\u662f _height[ i ]_\u3002\n\n\u7528\u4e00\u4e2a\u6808\u7ef4\u62a4\u524d\u9762\u8ddd _i_ \u6700\u8fd1\u4e14\u5c0f\u4e8e\u7b49\u4e8e _height[ i ]_ \u7684\u5143\u7d20\uff0c\u8bb0\u4e3a _p_ \uff0c\u5219\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a\n\n```\n\tf[i] = f[p] + (i - p) * height[i];\n```\n\n------------\n\n```\n#include <cstdio>\n#include <string>\n#include <stack>\n#include <cstring>\n\nconst int N = 500010;\nint n, m = 130, x[N], y[N], c[N], sa[N], rank[N], height[N];\nchar s[N];\n\nvoid get_sa() {\n\tfor (int i = 0; i < m; ++ i) c[i] = 0;\n\tfor (int i = 0; i < n; ++ i) ++c[x[i] = s[i]];\n\tfor (int i = 1; i < m; ++ i) c[i] += c[i-1];\n\tfor (int i = n - 1; i >= 0; -- i) sa[--c[x[i]]] = i;\n\tfor (int k = 1; k <= n; k <<= 1) {\n\t\tint p = 0;\n\t\tfor (int i = n - k; i < n; ++ i) y[p++] = i;\n\t\tfor (int i = 0; i < n; ++ i) if (sa[i] >= k) y[p++] = sa[i] - k;\n\t\tfor (int i = 0; i < m; ++ i) c[i] = 0;\n\t\tfor (int i = 0; i < n; ++ i) ++c[x[y[i]]];\n\t\tfor (int i = 1; i < m; ++ i) c[i] += c[i-1];\n\t\tfor (int i = n - 1; i >= 0; -- i) sa[--c[x[y[i]]]] = y[i];\n\t\tfor (int i = 0; i < n; ++ i) x[i] ^= y[i], y[i] ^= x[i], x[i] ^= y[i];\n\t\tp = 1, x[sa[0]] = 0;\n\t\tfor (int i = 1; i < n; ++ i)\n\t\t\tx[sa[i]] = y[sa[i]] == y[sa[i-1]] && (sa[i]+k<n ? y[sa[i]+k] : -1) == (sa[i-1]+k<n ? y[sa[i-1]+k] : -1) ? p-1 : p++;\n\t\tif (p >= n) break;\n\t\tm = p;\n\t}\n}\nvoid get_height() {\n\tint k = 0;\n\tfor (int i = 0; i < n; ++ i) rank[sa[i]] = i;\n\tfor (int i = 0; i < n; ++ i) {\n\t\tif (!rank[i]) continue;\n\t\tif (k) --k;\n\t\tint j = sa[rank[i]-1];\n\t\twhile (j+k < n && i+k < n && s[j+k] == s[i+k]) ++k;\n\t\theight[rank[i]] = k;\n\t}\n}\n\nstruct Pair {\n\tint val, pos;\n};\nstd::stack<Pair> sta;\nlong long f[N];\n\nint main() {\n\tscanf(\"%s\", s), n = strlen(s);\n\tget_sa(), get_height();\n\tlong long res = 0; int pos = 0;\n\tfor (int i = 0; i < n; ++ i) {\n\t\tint p = pos;\n\t\twhile (!sta.empty() && sta.top().val > height[i]) sta.pop();\n\t\tif (!sta.empty()) p = sta.top().pos;\n\t\tf[i] = f[p] + (i - p) * height[i], res += f[i];\n\t\tif (height[i] == 0) pos = i;\n\t\tsta.push((Pair){height[i], i});\n\t}\n\tprintf(\"%lld\\n\", (1LL) * (n - 1) * n * (n + 1) / 2 - res * 2);\n\treturn 0;\n}\n```",
        "postTime": 1522400605,
        "uid": 30922,
        "name": "Milky_Way",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4248 \u3010[AHOI2013]\u5dee\u5f02\u3011"
    },
    {
        "content": "\u677f\u5b50\u9898\uff0c\u4e89\u53d6\u4e00\u904d\u8fc7\uff08\u597d\u5427\u6ca1\u90a3\u4e48\u88f8\uff1f\uff09\n\n\u4ee3\u7801\u5012\u662f\u633a\u597d\u6253\u7684\uff0c\u5173\u952e\u5c31\u662f\u770b\u51fa\u9898\u76ee\u8ba9\u4f60\u6c42\u7684\u4e1c\u897f\u4e86\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u9898\u76ee\u4e2d\u5c31\u662f\u8981\u6c42   s  \u4efb\u610f\u4e24\u4e2a\u5b50\u4e32\u7684\u957f\u5ea6\u51cf\u53bb lcp \u957f\u5ea6\u7684**\u4e24\u500d**\n\n\n\u8fd9\u4e2a\u73a9\u610f\u513f...\u597d\u50cf\u5f88\u50cf\u6c42\u6811\u4e0a dis \uff1f\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u540e\u7f00\u81ea\u52a8\u673a\u4e2d\u7684 parent \u6811\u6070\u597d\u5c31\u662f\u4e24\u4e2a\u5b50\u4e32\u7684 lca \u4e3a\u4ed6\u4eec\u7684 lcp \u7684...\u5e76\u4e14\u4e00\u4e2a\u8282\u70b9\u5230\u6839\u7684 dis \u5c31\u662f\u5b83\u7684\u957f\u5ea6...\n\n\u6162\u7740\uff01\u9519\u4e86\u5427\uff1f\u4e24\u4e2a\u5b50\u4e32\u5728 parent \u6811\u4e0a\u7684 lca \u662f\u4ed6\u4eec\u7684 lcs \u554a\uff01\n\n...\n\n\u6211\u4eec\u518d\u8003\u8651\u4e00\u4e0b\uff08\u597d\u50cf\u7b2c\u4e00\u7bc7\u9898\u89e3\u8bf4\u7684\u662f\u9519\u7684\uff1f\uff09\n\n\u6211\u4eec\u8003\u8651\u5230\uff1a **\u4efb\u610f\u4e24\u4e2a\u5b50\u4e32\u7684 lcp \u957f\u5ea6\u4e4b\u548c  \u7b49\u4e8e\u4efb\u610f\u4e24\u4e2a\u5b50\u4e32 lcs \u7684\u540e\u7f00\u957f\u5ea6\u4e4b\u548c**\n\n\uff08\u6240\u4ee5\u8bf4\u53ef\u4ee5\u8f6c\u5316\u4e00\u4e0b\u95ee\u9898\uff0c\u53d8\u5f97\u66f4\u52a0\u7b80\u4fbf\uff09\n\n\u4e8e\u662f\u95ee\u9898\u8f6c\u5316\u4e3a\u4e86\u4efb\u610f\u4e24\u4e2a\u5b50\u4e32\u5728 parent \u6811\u4e0a\u7684\u8ddd\u79bb\u4e4b\u548c\n\n\u7b54\u6848\u4e5f\u5c31\u662f\uff1a\n\n$$ANS=\\sum_{u=1}^{cnt} \\sum_{v\u2208son_u} siz[v]\u00b7(n-siz[v])\u00b7(len[v]-len[u])$$\n\n\uff08\u5176\u4e2d n \u4e3a\u539f\u4e32\u7684\u957f\u5ea6\uff0c cnt \u4e3a SAM \u4e2d\u7684\u8282\u70b9\u6570\uff09\n\n\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u7528 n \u6765\u51cf\u6211\u8fd8\u662f\u611f\u89c9\u6709\u70b9\u7384\u5b66\uff08\u5927\u6982\u53ef\u4ee5\u7406\u89e3\u539f\u4e32 n \u4e2a\u70b9\uff0c\u6240\u4ee5 n \u4e2a\u70b9\u6709 siz \uff0c\u6211\u4eec\u7b97\u7684\u662f\u8fd9\u4e9b\u70b9\u4e4b\u95f4\u7684 dis \uff1f \uff09\n\n\u90a3\u4e48\u901a\u5e38\u8bf4\u7684\u662f\u6811\u5f62 dp \u5176\u5b9e\u6253\u662f\u53ef\u4ee5\u6253\u7684\uff0c\u4f46\u662f\u53ef\u4ee5\u8f6c\u5316\u4e3a SA \u7684\u6a21\u578b\uff0c\u9006\u5e8f\u6c42\u4e00\u4e0b\u540e\u7f00\u6392\u5e8f\u540e\u7684\u70b9\u5bf9\u5e94\u8fb9\u7684\u8d21\u732e\u5c31\u597d\u4e86\n\n\n```\n//by Judge\n#include<map>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#define fp(i,a,b) for(int i=(a),I=(b)+1;i<I;++i)\n#define fd(i,a,b) for(int i=(a),I=(b)-1;i>I;--i)\n#define ll long long\nusing namespace std;\nconst int M=1e6+3;\ntypedef int arr[M];\n#ifndef Judge\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n#endif\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline void reads(string& s){ char c=getchar();\n\tfor(;!isalpha(c);c=getchar());\n\tfor(;isalpha(c);c=getchar()) s+=c;\n} int n; string s; ll ans;\nstruct SAM{ int las,cnt; SAM(){las=cnt=1;}\n\tmap<char,int> to[M]; arr c,sa,fa,len,siz;\n\tinline void insert(char c){ int p=las,np=++cnt;\n\t\tlas=np,len[np]=len[p]+1,siz[np]=1;\n\t\tfor(;p&&!to[p].count(c);p=fa[p]) to[p][c]=np;\n\t\tif(!p) return fa[np]=1,void(); int q=to[p][c];\n\t\tif(len[q]==len[p]+1) return fa[np]=q,void();\n\t\tint nq=++cnt; len[nq]=len[p]+1,fa[nq]=fa[q],fa[q]=fa[np]=nq;\n\t\tto[nq]=to[q]; for(;to[p][c]==q;p=fa[p]) to[p][c]=nq;\n\t}\n\tinline void calc(){ fp(i,1,cnt) ++c[len[i]];\n\t\tfp(i,2,cnt) c[i]+=c[i-1]; fp(i,1,cnt) sa[c[len[i]]--]=i;\n\t\tfd(i,cnt,1){ int p=sa[i]; siz[fa[p]]+=siz[p];\n\t\t\tans+=1ll*siz[p]*(n-siz[p])*(len[p]-len[fa[p]]);\n\t\t}\n\t}\n}p;\nint main(){ reads(s),n=s.length();\n\tfd(i,n-1,0) p.insert(s[i]);\n\treturn p.calc(),!printf(\"%lld\\n\",ans);\n}\n```\n\n",
        "postTime": 1553309028,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4248 \u3010[AHOI2013]\u5dee\u5f02\u3011"
    },
    {
        "content": "#### [\u9898\u76ee\u94fe\u63a5 $Click$  $Here$](https://www.luogu.org/problemnew/show/P4248)\n\n\u795e\u4ed9\u9898\u3002\u6216\u8005\u53ef\u80fd\u6211\u592a\u83dc\u4e86\u6ca1\u89c1\u8fc7\u540e\u7f00\u6570\u7ec4\u7684\u9a9a\u64cd\u4f5c\uff0c\u7136\u540e\u5c31\u88ab\u79c0\u4e86\u4e00\u8138$hhhhh$\n\n$$\\sum\\limits_{1<=i < j <= n} len(T_i) + len(T_j) - 2 * lcp (T_i, T_j)$$\n\n\u8fd9\u4e2a\u5f0f\u5b50\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u628a\u524d\u9762\u62c6\u51fa\u6765\u5f53\u5e38\u6570\u7b97\uff08${(n - 1) * n * (n + 1) }/ 2$\uff09\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u600e\u4e48\u8ba1\u7b97\u6bcf\u4e2a\u533a\u95f4\u7684$lcp$\u4e4b\u548c\u4e86\u3002\n\n\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u8f6c\u5316\u6210\u540e\u7f00\u6570\u7ec4\u7684$height$\u6765\u8fdb\u884c\u8ba1\u7b97\u3002\u4ed4\u7ec6\u601d\u8003\u4f1a\u53d1\u73b0\uff0c\u539f\u5b57\u7b26\u4e32\u7684\u6bcf\u5bf9$i$\u548c$j$\u4e8b\u5b9e\u4e0a\u548c$height$\u6570\u7ec4\u7684\u6bcf\u4e00\u6bb5\u533a\u95f4$[rk[i], rk[j]]$\u4e00\u4e00\u5bf9\u5e94\u3002\u81f3\u6b64\uff0c\u6211\u4eec\u7684\u95ee\u9898\u53c8\u8f6c\u5316\u6210\u4e86\u6c42$height$\u6570\u7ec4\u4e0a\u7684\u6bcf\u4e00\u4e2a\u533a\u95f4\u7684\u6700\u5c0f\u503c\u4e4b\u548c\u3002\n\n\u66b4\u529b\u6c42\u663e\u7136\u662f$O(N^2)$\u7684\uff0c\u627f\u53d7\u4e0d\u4f4f\u3002\u6839\u636e$lcp$\u5177\u6709\u53ef\u5408\u5e76\u6027$ min(lcp (T_i,T_ j), lcp (T_{j + 1}, T_{k})) = lcp (T_i, T_k)$\uff0c\u800c$height$\u6570\u7ec4\u53c8\u4ee3\u8868\u4e86$lcp(T_i, T_{sa[rk[i ] - 1]})$\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u8fd9\u4e48\u505a\uff1a\n\n- \u8bbe$dp[i]$\u4e3a$height$\u6570\u7ec4\u4e2d\u524d\u7f00$i$\u7684\u6bcf\u4e00\u4e2a\u540e\u7f00\u8d21\u732e\u51fa\u7684\u7b54\u6848\u3002\n- \u5bf9\u4e8e\u4efb\u610f$i > p$\uff0c\u5f53$height[i] >= height[p]$\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6240\u6709$height[p]$\u7edf\u6cbb\u7684\u7b54\u6848\u91cc\uff0c\u5728\u540e\u9762\u7f00\u4e0a\u4e00\u4e2a$[p-1,i]$\u7684\u533a\u95f4\uff0c\u6240\u4ee5\u53ef\u4ee5\u8ba4\u4e3a\u662f\uff1a\u524d\u7f00$i$\u7684\u8d21\u732e\u4e2d\uff0c\u8fd8\u8981\u5305\u542b\u4e00\u4e2a\u524d\u7f00$p$\u7684\u603b\u8d21\u732e\u3002\n- \u6240\u4ee5\u53ea\u8981\u8ba1\u7b97\u6700\u8fd1\u7684\u4e00\u4e2a$p$\u5c31\u53ef\u4ee5\u56ca\u62ec$[1,p]$\u5185\u7684\u6240\u6709\u7b54\u6848\uff0c\u7ef4\u62a4\u6700\u8fd1\u7684\u5c0f\u4e8e$height[i]$\u7684$p$\u7684\u4f4d\u7f6e\u5373\u53ef\u3002\n- \u6240\u4ee5\u6709$f[i] = f[p] + (i - p) * height[i];$\n- \u5982\u679c$i$\u7684\u524d\u9762\u4e0d\u5b58\u5728$p$\uff0c\u6ee1\u8db3$height[p] <= height[i]$\uff0c\u90a3\u4e48\u524d\u7f00$[1,i]$\u7684\u6240\u6709\u540e\u7f00$height$\u7684\u6700\u5c0f\u503c\u90fd\u662f$height[i]$\uff08\u88ab$i$\u7edf\u6cbb\uff09\uff0c\u5373\u8d21\u732e\u4e3a$i * height[i]$\u3002\n\n\u4e3a\u4e86\u7ef4\u62a4\u524d\u4e00\u4e2a\u6bd4$height[i]$\u5c0f\u7684$height$\u503c\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u6211\u4eec\u9700\u8981\u5f00\u4e00\u4e2a\u9012\u589e\u7684\u5355\u8c03\u6808\uff0c\u904d\u5386\u5230$i$\u65f6\u5f39\u51fa\u6240\u6709$height$\u503c\u5c0f\u4e8e$height[i]$\u7684\u5143\u7d20\uff0c\u7ed3\u675f\u65f6\u518d\u63d2\u5165\u8be5$height$\u3002\n\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define LL long long\nconst int N = 500010;\n\nchar s[N];\nint n, m = 255, sa[N], tp[N];\nint rk[N], _rk[N], bin[N], height[N];\n\nvoid base_sort () {\n\tfor (int i = 0; i <= m; ++i) bin[i] = 0;\n\tfor (int i = 1; i <= n; ++i) bin[rk[tp[i]]]++;\n\tfor (int i = 1; i <= m; ++i) bin[i] += bin[i - 1];\n\tfor (int i = n; i >= 1; --i) sa[bin[rk[tp[i]]]--] = tp[i];\n}\n\nvoid suffix_sort () {\n\tfor (int i = 1; i <= n; ++i) {\n\t\ttp[i] = i;\n\t\trk[i] = s[i - 1];\n\t}\n\tbase_sort ();\n\tfor (int w = 1; w <= n; w <<= 1) {\n\t\tint cnt = 0;\n\t\tfor (int i = n - w + 1; i <= n; ++i) {\n\t\t\ttp[++cnt] = i;\n\t\t}\n\t\tfor (int i = 1; i <= n; ++i) {\n\t\t\tif (sa[i] > w) {\n\t\t\t\ttp[++cnt] = sa[i] - w;\n\t\t\t}\n\t\t}\n\t\tbase_sort ();\n\t\tmemcpy (_rk, rk, sizeof (rk));\n\t\trk[sa[1]] = cnt = 1;\n\t\tfor (int i = 2; i <= n; ++i) {\n\t\t\trk[sa[i]] = _rk[sa[i]] == _rk[sa[i - 1]] && _rk[sa[i] + w] == _rk[sa[i - 1] + w] ? cnt : ++cnt;\n\t\t}\n\t\tif (cnt == n) break;\n\t\tm = cnt;\n\t}\n\t// printf (\"sa : \");for (int i = 1; i <= n; ++i) printf (\"%d \", sa[i]); printf (\"\\n\");\n}\n\nvoid get_height () {\n\tint  k = 0;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tif (k) k--;\n\t\tint j = sa[rk[i] - 1];\n\t\twhile (s[i + k - 1] == s[j + k - 1]) ++k;\n\t\theight[rk[i]] = k; \n\t}\n\t// printf (\"height : \");\n\t// for (int i = 1; i <= n; ++i) {\n\t// \tprintf (\"%d \", height[i]);\n\t// }\n\t// printf (\"\\n\");\n}\n\nstruct node {\n\tint pos, val;\n\tnode (int ppos = 0, int vval = 0) {pos = ppos, val = vval;}\n};\n\nnode sta[N]; int top;\nLL f[N];\n\nint main () {\n\tscanf (\"%s\", s);\n\tn = strlen (s);\n\tsuffix_sort ();\n\tget_height ();\n\tfor (int i = 1; i <= n; ++i) {\n\t\twhile (top > 0 && sta[top].val > height[i]) --top;\n\t\t//\u4f7fsta[top].val <= height[i];\n\t\tif (top > 0) {\n\t\t\tint p = sta[top].pos; //p\u8bb0\u5f55\u63a7\u5236\u8303\u56f4\n\t\t\tf[i] = f[p] + (i - p) * height[i];\n\t\t} else {\n\t\t\tf[i] = i * height[i];\n\t\t}\n\t\tsta[++top] = node (i, height[i]);\n\t}\n\tLL ans = 1LL * (n - 1) * n * (n + 1) / 2;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tans -= 2 * f[i];\n\t}\n\tcout << ans << endl;\n} \n\n```\n\n",
        "postTime": 1551142794,
        "uid": 58698,
        "name": "Nativ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4248 \u3010[AHOI2013]\u5dee\u5f02\u3011"
    },
    {
        "content": "\u4e00\u4e2a\u7528SAM\u4f46\u662f\u4e0d\u7ffb\u8f6c\u5efa\u540e\u7f00\u6811\u7684\u8822\u529e\u6cd5\n\n\u9996\u5148\u6240\u6709\u540e\u7f00\u90fd\u5728\u6700\u540e\u4e00\u4e2anp\u8282\u70b9\uff0c\u7136\u540e\u4ed6\u4eec\u90fd\u662f\u4ece1\u53f7\u70b9\u51fa\u53d1\u6cbf\u4e00\u4e9b\u5b57\u7b26\u8fb9\u5230\u8fbe\u8fd9\u4e2a\u70b9\u7684\uff0c\u6240\u4ee5\u4e0b\u6587\u79f01\u53f7\u70b9\u4e3a\u6839\u8282\u70b9\uff0c\u6211\u4eec\u601d\u8003\u4e00\u4e0b\u4ec0\u4e48\u65f6\u5019\u4f1a\u4ea7\u751flcp\uff0c\u663e\u7136\u662f\u5f53\u4ed6\u4eec\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u4e00\u76f4\u8df3\u76f8\u540c\u8282\u70b9\u7684\u65f6\u5019\uff0c\u6240\u4ee5\u601d\u8def\u5c31\u662f\u5148\u627e\u51fa\u6bcf\u4e2a\u8282\u70b9\u88ab\u51e0\u4e2a\u540e\u7f00\u7ecf\u8fc7\uff0c\u8fd9\u663e\u7136\u628a\u8fb9\u53cd\u8f6c\u5012\u7740\u627e\u5c31\u53ef\u4ee5\u4e86\uff0c\u7136\u540e\u4ed6\u4f1a\u88ab\u51fa\u73b0\u6b21\u6570sz\u4e2a\u4e32\u7ecf\u8fc7\u3002\n\n\u51fa\u73b0\u6b21\u6570\u7b49\u4e8eparent\u6811\u5b50\u6811\u4e2dnp\u7c7b\u8282\u70b9\u7684\u4e2a\u6570\uff0c\u8fd9\u8dd1\u4e2adfs\u5c31\u597d\u4e86\uff0c\u4e00\u4e2a\u76f8\u540c\u524d\u7f00\u4ea7\u751f\u7684\u8d21\u732e\u662fsz*(sz-1)/2\n\n\u7136\u540e\u601d\u8003\u4e00\u4e2a\u70b9\u53ef\u80fd\u4ee3\u8868\u591a\u4e2a\u5b50\u4e32\uff0c\u4f46\u662f\u4ed6\u4eec\u7684\u51fa\u73b0\u6b21\u6570\u90fd\u662f\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u5355\u4e2a\u70b9\u7684\u8d21\u732e\u4e3a\u4e0a\u9762\u7684\u5355\u4e2a\u8d21\u732e\u518d\u4e58\u4e0a\u4e00\u4e2a\u6709\u51e0\u4e2a\u5b50\u4e32\n\n\u5b50\u4e32\u7684\u4e2a\u6570\u4e3aparent\u6811\u7236\u4eb2\u8282\u70b9\u7684\u6700\u5927\u957f\u5ea6\u51cf\u53bb\u8be5\u8282\u70b9\u7684\u6700\u5927\u957f\u5ea6\n\n\u8fd9\u6837\u5b50\u5728\u4ece\u6839\u5f00\u59cbdfs\uff0c\u5982\u679c\u7ecf\u8fc7\u67d0\u4e2a\u70b9\u53ea\u6709\u4e00\u4e2a\u540e\u7f00\u7ecf\u8fc7\uff0c\u5c31\u8bf4\u660elcp\u7ed3\u675f\u4e86\uff0c\u5c31\u4e0d\u7528\u518d\u641c\u8be5\u70b9\u4e86\u3002\n\n\u4e0a\u9762\u5c31\u6c42\u51fa\u4e86lcp\u7684\u548c\n\n\u81f3\u4e8e\u524d\u9762\u90a3\u4e2a\u5f0f\u5b50\uff0c\u53ea\u9700\u8981\u6253\u4e2a\u8868\u627e\u4e2a\u89c4\u5f8b\u53d1\u73b0\u662f(n-1)*n*(n+1)/2\u5c31\u53ef\u4ee5\u4e86\n\n\u867d\u7136\u5e38\u6570\u5927\u70b9\u4f46\u662f\u8fd8\u662f\u540e\u7f00\u81ea\u52a8\u673a\u590d\u6742\u5ea6\u7684\n\n\u4ee3\u7801\u56e0\u4e3a\u6ca1\u7528\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u8fb9\u6240\u4ee5\u4e0d\u5f00o2\u4f1at\uff0c\u4f46\u8fd8\u662f\u8d34\u4e00\u4e0b\u5427\n\n```cpp\n#include<bits/stdc++.h>\n#define N 1000010\nusing namespace std;\n\nint n;\nint gg=0;\n\nstruct SAM\n{\n\tstruct point\n\t{\n\t\tint son[26],fa,len,mx;\n\t}t[N];\n\t\n\tint cnt=1,last=1;\n\tint f[N],sz[N];\n\tbool vis[N];\n\tvector<int> g[N],e[N];\n\tlong long lcp=0ll; \n\t\n\tvoid add(int c)\n\t{\n\t\tint p=last;\n\t\tint np=++cnt;\n\t\tt[np].len=t[p].len+1;\n\t\tsz[np]=1;\n\t\twhile(p&&(!t[p].son[c]))\n\t\t{\n\t\t\tt[p].son[c]=np;\n\t\t\tp=t[p].fa;\n\t\t}\n\t\tif(!p) t[np].fa=1;\n\t\telse\n\t\t{\n\t\t\tint q=t[p].son[c],nq;\n\t\t\tif(t[p].len+1==t[q].len)\n\t\t\t{\n\t\t\t\tt[np].fa=q;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnq=++cnt;\n\t\t\t\tt[nq]=t[q];\n\t\t\t\tt[nq].len=t[p].len+1;\n\t\t\t\tt[q].fa=t[np].fa=nq;\n\t\t\t\twhile(p&&(t[p].son[c]==q))\n\t\t\t\t{\n\t\t\t\t\tt[p].son[c]=nq;\n\t\t\t\t\tp=t[p].fa; \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlast=np;\n\t}\n\t\n\tvoid dfs(int now)\n\t{\n\t\tt[now].mx=t[now].len-t[t[now].fa].len;\n\t\tfor(int i=0;i<26;i++)\n\t\t{\n\t\t\tif(t[now].son[i]) e[t[now].son[i]].push_back(now);\n\t\t}\n\t\tfor(int i=0;i<g[now].size();i++)\n\t\t{\n\t\t\tdfs(g[now][i]);\n\t\t\tsz[now]+=sz[g[now][i]];\n\t\t}\n\t}\n\t\n\tvoid dfs1(int now)\n\t{\n\t\tvis[now]=1;\n\t\tfor(int i=0;i<e[now].size();i++)\n\t\t{\n\t\t\tf[e[now][i]]++;\n\t\t\tif(!vis[e[now][i]])\n\t\t\t{\n\t\t\t\tdfs1(e[now][i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tvoid dfs3(int now)\n\t{\n\t\tvis[now]=1;\n\t\tif(f[now]) lcp+=t[now].mx*(1ll*sz[now]*(sz[now]-1)/2);\n\t\tfor(int i=0;i<26;i++)\n\t\t{\n\t\t\tif(f[t[now].son[i]]&&sz[t[now].son[i]]>1&&(!vis[t[now].son[i]]))\n\t\t\t{\n\t\t\t\tdfs3(t[now].son[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tvoid solve()\n\t{\n\t\tfor(int i=1;i<=cnt;i++) g[t[i].fa].push_back(i);\n\t\tdfs(1);\n\t\tsz[1]=0;\n\t\tmemset(vis,0,sizeof(vis));\n\t\tdfs1(last);\n\t\tmemset(vis,0,sizeof(vis)); \n\t\tdfs3(1);\n\t\tlong long len=1ll*n*(n-1)*(n+1)/2;\n\t\tprintf(\"%lld\\n\",len-2*lcp);\n\t}\n\t\n}sam;\n\nchar s[500050];\n\nint main()\n{\n\tscanf(\"%s\",s);\n\tn=strlen(s);\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tsam.add(s[i]-'a');\n\t}\n\tsam.solve(); \n} \n```",
        "postTime": 1550209845,
        "uid": 48740,
        "name": "Styx",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4248 \u3010[AHOI2013]\u5dee\u5f02\u3011"
    },
    {
        "content": "\u5e7f\u544a\uff1a\u98df\u7528[$blog$](https://www.cnblogs.com/heyujun/p/10305797.html)\u4f53\u9a8c\u66f4\u4f73\n## \u9898\u9762\n\u7ed9\u5b9a\u5b57\u7b26\u4e32$S$,\u4ee4$T_i$\u8868\u793a\u4ee5\u5b83\u4ece\u7b2c$i$\u4e2a\u5b57\u7b26\u5f00\u59cb\u7684\u540e\u7f00\u3002\n\u6c42\n\n$$\\sum_{1\\leq i<j\\leq n}len(T_i)+len(T_j)-2*lcp(T_i,T_j)$$\n\n\u5176\u4e2d$len(a)$\u8868\u793a\u4e32$a$\u7684\u957f\u5ea6\uff0c$lcp(a,b)$\u8868\u793a\u4e32$a,b$\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\n## \u9898\u89e3\n\u628a\u8fd9\u4e2a\u5f0f\u5b50\u770b\u4f5c\u4e24\u8fb9\u5206\u5f00\u6c42\uff1a\n### $Part1:$\n\n$$\\sum_{1\\leq i<j\\leq n}len(T_i)+len(T_j)$$\n\n$$\\Leftrightarrow\\sum_{i=1}^{n-1}\\sum_{j=i+1}^ni+j$$\n\n$$=\\sum_{i=1}^{n-1}i*(n-i)+\\frac{(i+1+n)*(n-i)}2$$\n\n\u5176\u5b9e\u73b0\u5728\u4f60\u5c31\u53ef\u4ee5$O(n)$\u5730\u6c42\u4e86\uff0c\u4f46\u662f\u56e0\u4e3a\u6211\u51fa(kan)\u4e8e(le)\u7f8e(ti)\u89c2(jie)\n\n\u53d1\u73b0\u5b83\u5176\u5b9e\u53ef\u4ee5\u5316\u6210\u8fd9\u6837\uff1a\n$$\\frac {(n-1)*n*(n+1)}2$$\n### $Part2:$\n\u4e00\u770b\u5230\u540e\u7f00\u5f53\u7136\u662f$sa$\u5566\n\n\u7531\u540e\u7f00\u6570\u7ec4\u7684\u6027\u8d28\uff0c\u6392\u540d\u4e3a\u5206\u522b\u4e3a$i,j$\u7684\u540e\u7f00\uff0c$lcp_{i,j}=\\min\\limits_{k=i+1}^jheight_k$\n\n\u6211\u4eec\u5c06\u6240\u6709\u9ad8\u5ea6\u6570\u7ec4\u6392\u6210\u4e00\u6392,\n\n\u5047\u8bbe\u4e2d\u95f4\u7684\u7b2c$i$\u4e2a\u6570\u662f$l-r$\u4e2d\u6700\u5c0f\u7684\n\n\u5219\u5b83\u7684\u8d21\u732e\u5c31\u662f$(i-l+1)*(r-i+1)$\n\n\u6211\u4eec\u5904\u7406\u51fa\u6765\u5bf9$i$\u6240\u6709\u7684$l,r$\u662f\u4e0d\u662f\u5c31\u505a\u51fa\u6765\u4e86\u5462\n\n\u8fd9\u4e0d\u5c31\u662f\u4e00\u4e2a\u5355\u8c03\u6808\u7684\u7ecf\u5178\u5e94\u7528\u5417\uff1f\n\n\u800c\u8fd9\u4e2a\u9898\u76ee\u4e2d\u56e0\u4e3a\u4e00\u4e9b\u7ec6\u8282\u95ee\u9898\u6211\u7684$l$\u8868\u793a\u5c0f\u4e8e$i$\u7684\u7b2c\u4e00\u4e2a\uff0c$r$\u8868\u793a\u5c0f\u4e8e\u7b49\u4e8e$i$\u7684\u7b2c\u4e00\u4e2a\n\n\u8be6\u89c1\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring> \n#include <cmath> \n#include <algorithm>\nusing namespace std; \ninline int gi() {\n\tregister int data = 0, w = 1;\n\tregister char ch = 0;\n\twhile (!isdigit(ch) && ch != '-') ch = getchar(); \n\tif (ch == '-') w = -1, ch = getchar();\n\twhile (isdigit(ch)) data = 10 * data + ch - '0', ch = getchar();\n\treturn w * data; \n}\nconst int MAX_N = 5e5 + 5; \nint N; char a[MAX_N]; \nint sa[MAX_N], lcp[MAX_N], rnk[MAX_N]; \nvoid GetSA() { \n#define cmp(i, j, k) (y[i] == y[j] && y[i + k] == y[j + k]) \n\tstatic int x[MAX_N], y[MAX_N], bln[MAX_N]; \n\tint M = 122; \n\tfor (int i = 1; i <= N; i++) bln[x[i] = a[i]]++; \n\tfor (int i = 1; i <= M; i++) bln[i] += bln[i - 1]; \n\tfor (int i = N; i >= 1; i--) sa[bln[x[i]]--] = i; \n\tfor (int k = 1; k <= N; k <<= 1) { \n\t\tint p = 0; \n\t\tfor (int i = 0; i <= M; i++) y[i] = 0; \n\t\tfor (int i = N - k + 1; i <= N; i++) y[++p] = i; \n\t\tfor (int i = 1; i <= N; i++) if (sa[i] > k) y[++p] = sa[i] - k; \n\t\tfor (int i = 0; i <= M; i++) bln[i] = 0; \n\t\tfor (int i = 1; i <= N; i++) bln[x[y[i]]]++; \n\t\tfor (int i = 1; i <= M; i++) bln[i] += bln[i - 1]; \n\t\tfor (int i = N; i >= 1; i--) sa[bln[x[y[i]]]--] = y[i]; \n\t\tswap(x, y); x[sa[1]] = p = 1; \n\t\tfor (int i = 2; i <= N; i++) x[sa[i]] = cmp(sa[i], sa[i - 1], k) ? p : ++p; \n\t\tif (p >= N) break; \n\t\tM = p; \n\t} \n}\nvoid GetLcp() { \n\tfor (int i = 1; i <= N; i++) rnk[sa[i]] = i; \n\tfor (int i = 1, j = 0; i <= N; i++) { \n\t\tif (j) --j; \n\t\twhile (a[i + j] == a[sa[rnk[i] - 1] + j]) ++j; \n\t\tlcp[rnk[i]] = j; \n\t} \n}\ntypedef long long ll; \nint lp[MAX_N], rp[MAX_N], stk[MAX_N], top; \nint main () {\n\tscanf(\"%s\", a + 1); N = strlen(a + 1); \n\tGetSA(); GetLcp(); \n\tll ans = 0; \n\t//for (int i = 1; i < N; i++) ans += 1ll * i * (N - i) + 1ll * (i + 1 + N) * (N - i) / 2ll; \n\tans = 1ll * N * (N + 1) * (N - 1) / 2ll; \n\tstk[0] = 1; \n\tfor (int i = 2; i <= N; i++) {\n\t\twhile (top > 0 && lcp[stk[top]] >= lcp[i]) --top; \n\t\tlp[i] = i - stk[top], stk[++top] = i; \n\t} \n\ttop = 0, stk[0] = N + 1; \n\tfor (int i = N; i >= 2; i--) { \n\t\twhile (top > 0 && lcp[stk[top]] > lcp[i]) --top; \n\t\trp[i] = stk[top] - i, stk[++top] = i; \n\t}\n\tfor (int i = 2; i <= N; i++) ans -= 2ll * lcp[i] * lp[i] * rp[i]; \n\tprintf(\"%lld\\n\", ans); \n\treturn 0; \n} \n```",
        "postTime": 1548158922,
        "uid": 42506,
        "name": "\u4f55\u4fde\u5747",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4248 \u3010[AHOI2013]\u5dee\u5f02\u3011"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.org/problemnew/show/P4248)\n\n\u9898\u610f\u8ba9\u6211\u4eec\u6c42\u51fa\n\n$\\displaystyle \\sum_{1\\leqslant i<j\\leqslant n}\\text{len}(T_i)+\\text{len}(T_j)-2\\times\\text{lcp}(T_i,T_j)$\n\n\u5176\u4e2d\uff0c$\\displaystyle \\sum_{1\\leqslant i<j\\leqslant n}\\text{len}(T_i)+\\text{len}(T_j)$\u662f\u4e00\u4e2a\u5b9a\u503c\u3002\u8003\u8651\u6bcf\u4e00\u4e2a\u65e0\u5e8f\u5bf9$(i, j)$\u88ab\u7b97\u4e86\u4e00\u6b21\uff0c\u90a3\u4e48\u4e0a\u5f0f\u7b49\u4e8e$\\displaystyle (n-1)\\sum_{i=1}^{n}i = \\frac{(n-1)n(n+1)}{2}$\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651$\\displaystyle \\sum_{1\\leqslant i<j\\leqslant n}\\text{lcp}(T_i,T_j)$\u600e\u4e48\u6c42\u3002\n\n\u56e0\u4e3a\u8fd9\u91cc\u7684$T$\u662f\u540e\u7f00\uff0c\u6211\u4eec\u9996\u5148\u6c42\u51fa\u540e\u7f00\u6570\u7ec4\u3002\u7136\u540e\u6211\u4eec\u8003\u8651\u679a\u4e3e$\\text{lcp}$\uff0c\u770b\u6709\u591a\u5c11\u5bf9$(T_i,T_j)$\u6ee1\u8db3$\\text{lcp}(T_i,T_j)$\u4e3a\u6211\u4eec\u5f53\u524d\u679a\u4e3e\u7684\u503c\u3002\n\n\u6ce8\u610f\u5230$\\text{lcp}(T_i,T_j) = \\min_{i<k\\leq j}\\{height[k]\\}$\uff0c\u6211\u4eec\u8003\u8651\u4ee5\u4e0b\u505a\u6cd5\u3002\n\n\u8003\u8651\u5012\u5e8f\u679a\u4e3e$\\text{lcp}$\u3002\u8bbe\u60f3\u6211\u4eec\u6709\u4e00\u4e9b\u8fde\u7eed\u7684\u533a\u95f4\u8868\u793a\u6bcf\u4e2a\u540e\u7f00\uff0c\u6bcf\u4e2a\u8fde\u7eed\u533a\u95f4\u7684\u542b\u4e49\u662f\uff1a\u8fd9\u4e2a\u533a\u95f4\u4e2d\u6240\u6709\u7684$height$\u5747\u5927\u4e8e\u6211\u4eec\u5f53\u524d\u679a\u4e3e\u5230\u7684$\\text{lcp}$\u3002\u8bbe\u6bcf\u4e2a\u533a\u95f4\u7684\u5927\u5c0f\u4e3a$size[i]$\u3002\u521d\u59cb\u65f6\u5b83\u4eec\u5206\u522b\u662f\u4e00\u4e2a\u8fde\u901a\u5757\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u5408\u5e76\u533a\u95f4\u7684\u540c\u65f6\u66f4\u65b0\u7b54\u6848\u3002\n\n\u7136\u540e\u6211\u4eec\u6309$height[i]$\u4ece\u5927\u5230\u5c0f\u7684\u987a\u5e8f\u6765\u679a\u4e3e$i$\u3002\u5bf9\u4e8e\u679a\u4e3e\u5230\u7684$i$\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u51fa$size[i-1] \\times size[i]$\u4e2a\u4e0d\u540c\u7684\u7ec4\u5408\uff0c\u4f7f\u8fd9\u4e9b\u7ec4\u5408\u7684$\\text{lcp}$\u5747\u4e3a\u6211\u4eec\u5f53\u524d\u679a\u4e3e\u7684\u503c\uff08$height[i]$\uff09\u3002\u4e8e\u662f\u5b83\u4eec\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a$height[i] \\times size[i-1] \\times size[i]$\u3002\n\n\u7136\u540e\u5408\u5e76\u533a\u95f4\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u5b9e\u73b0\u3002\n\n\u7136\u540e\u6211\u4eec\u7b97\u51fa\u5b83\u4eec\u7684\u548c\u4e3a$sum$\uff0c\u6700\u540e\u7b54\u6848\u4e3a$\\displaystyle \\frac{(n-1)n(n+1)}{2} - 2 \\times sum$\n\n\u5b9e\u9645\u4e0a\uff0c\u5229\u7528\u540c\u6837\u7684\u601d\u8def\u8fd8\u53ef\u4ee5\u505a[\\[NOI2015\\]\u54c1\u9152\u5927\u4f1a](https://www.luogu.org/problemnew/show/P2178)\u3002\n\n\u4e0b\u9762\u653e\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define maxn 500005\ntypedef long long ll;\n\nint n;\nchar s[maxn];\nint sa[maxn], rk[maxn], tp[maxn], tax[maxn];\nint h[maxn];\nint m;\n\ninline void rsort() {\n\tfor(int i = 1; i <= m; ++i) tax[i] = 0;\n\tfor(int i = 1; i <= n; ++i) ++tax[rk[i]];\n\tfor(int i = 1; i <= m; ++i) tax[i] += tax[i-1];\n\tfor(int i = n; i >= 1; --i) sa[tax[rk[tp[i]]]--] = tp[i];\n}\n\nvoid getsa() {\n\tm = 127;\n\tfor(int i = 1; i <= n; ++i) rk[i] = s[i], tp[i] = i;\n\trsort();\n\tfor(int w = 1, p = 0; p < n && w <= n; m = p, w <<= 1) {\n\t\tp = 0;\n\t\tfor(int i = n-w+1; i <= n; ++i) tp[++p] = i;\n\t\tfor(int i = 1; i <= n; ++i)\n\t\t\tif(sa[i] > w) tp[++p] = sa[i]-w;\n\t\trsort();\n\t\tstd::swap(rk, tp);\n\t\trk[sa[1]] = p = 1;\n\t\tfor(int i = 2; i <= n; ++i)\n\t\t\trk[sa[i]] = (tp[sa[i]] == tp[sa[i-1]] && (sa[i]+w > n ? -1 : tp[sa[i]+w]) == (sa[i-1]+w > n ? -1 : tp[sa[i-1]+w])) ? p : ++p;\n\t}\n}\n\nvoid geth() {\n\tint j, k = 0;\n\tfor(int i = 1; i <= n; ++i) {\n\t\tif(k) --k;\n\t\tj = sa[rk[i]-1];\n\t\twhile(i+k <= n && j+k <= n && s[i+k] == s[j+k]) ++k;\n\t\th[rk[i]] = k;\n\t}\n}\n\n// \u4ee5\u4e0a\u662fsa\u677f\u5b50\n\nint fa[maxn], sz[maxn];\n\nint getf(int x) {\n\treturn x == fa[x] ? x : fa[x] = getf(fa[x]);\n}\n\nll merge(int x, int y) {\n\tx = getf(x), y = getf(y);\n\tif(x == y) return 0;\n\tif(sz[x] > sz[y]) std::swap(x, y);\n\tll res = 1ll*sz[y]*sz[x];\n\tfa[x] = y, sz[y] += sz[x];\n\treturn res;\n}\n\n// \u4ee5\u4e0a\u662f\u5e76\u67e5\u96c6\u677f\u5b50\n\nint tn[maxn], g[maxn];\nll ans;\n\nint main() {\n\tscanf(\"%s\", s+1);\n\tn = strlen(s+1);\n\tgetsa(), geth();\n\tfor(int i = 1; i <= n; ++i) fa[i] = i, sz[i] = 1;\n\tfor(int i = 1; i <= n; ++i) ++tn[h[i]];\n\tfor(int i = 1; i <= n; ++i) tn[i] += tn[i-1];\n\tfor(int i = n; i >= 1; --i) g[tn[h[i]]--] = i;\n\t// \u6309h[i]\u4e3a\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u6392\u5e8f\u7684\u7ed3\u679c\u4e3ag[i]\n\tfor(int i = n; i >= 1; --i) ans += h[g[i]]*merge(g[i], g[i]-1); // \u7edf\u8ba1\u7b54\u6848\n\tprintf(\"%lld\", 1ll*(n-1)*n*(n+1)/2-2ll*ans);\n\treturn 0;\n}\n```",
        "postTime": 1556356978,
        "uid": 79017,
        "name": "\u82b1\u91cc\u5fc3\u7231",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4248 \u3010[AHOI2013]\u5dee\u5f02\u3011"
    },
    {
        "content": "# \u8fd9\u91cc\u7ed9\u51fa\u4e00\u79cd\u4e0d\u662f\u5f88\u4f18\u79c0\u7684\u505a\u6cd5\n\n\u9996\u5148SA\u662f\u6ca1\u5f97\u8bf4\u7684\n\n\u6709\u5f15\u7406\uff1aheight\u6570\u7ec4\u4e0a\u7684\u4e00\u6bb5\u7684\u6700\u5c0f\u503c\u4e3a\u539f\u4e32\u7684\u4e24\u4e2a\u540e\u7f00\u7684lcp\n\n\u7136\u540e\u89c2\u5bdf\u8981\u6c42\u7684\u5f0f\u5b50\uff0c\u524d\u4e24\u9879\u662f\u7b80\u5355\u7684\u6570\u5b66\u63a8\u5bfc\uff0c\u7b2c\u4e09\u9879\u7b49\u4ef7\u4e8eh\u6570\u7ec4\u6240\u6709\u533a\u95f4min\u4e4b\u548c\n\n\u8fd9\u4e2a\u4e1c\u897f\u600e\u4e48\u505a\u5462\uff1f\n\n\u4e00\u79cd\u65b9\u6cd5\u662f\u66b4\u529b\u9012\u5f52\uff0c\u6bcf\u6b21\u627e\u51fa\u6700\u5c0f\u503c\uff0c\u518d\u5f80\u4e24\u8fb9\u8ba1\u7b97\n\n\u8fd9\u4e48\u505a\u5728\u968f\u673a\u4e0b\u662fO(nlogn)\u7684\uff0c\u4f46\u663e\u7136\u80fd\u88ab\u5361\u6210O(n^2)\uff0c\u5361\u7684\u539f\u7406\u548c\u5361\u5feb\u6392\u5dee\u4e0d\u591a\uff0c\u53ea\u670965\u5206\n\n\u6ce8\u610f\u5230\u6709\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u53eb\u505a\u7b1b\u5361\u5c14\u6811\uff0c\u53ef\u4ee5\u7528\u5355\u8c03\u6808\u65b9\u4fbf\u5730\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\n\n\u8fd9\u4e2a\u4e1c\u897f\u4e0d\u60f3\u5199\u600e\u4e48\u529e\n\n\u7528\u6700\u66b4\u529b\u7684\u65b9\u5f0f\u601d\u8003\uff0c\u6211\u4eec\u6784\u5efa\u51fast\u8868\uff0c\u5e76\u4e14\u8bb0\u4e00\u4e0b\u6700\u5c0f\u503c\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u7528\u4e4b\u524d\u7684\u601d\u60f3\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u662fO(nlogn)\u7684\n\n\u4ee3\u7801\u7ed9\u51fa\u7684\u662f\u66b4\u529b\u9012\u5f52\u7684\uff0c\u4f46st\u8868\u5e94\u8be5\u4e5f\u4e0d\u96be\u5199\uff0c\u4e3b\u8981\u4ee3\u7801\u91cf\u662f\u5728SA\u4e0a\n\n```\n#include <cstdio>\n#include <iostream>\n#include <cstring>\nusing namespace std;\nint n, m, sa[500005], rk[500005], tp[500005], tax[500005], h[500005];\nlong long ans;\nchar s[500005];\nvoid Sort()\n{\n\tfor(int i = 0; i <= m; i++) tax[i] = 0;\n\tfor(int i = 1; i <= n; i++) tax[rk[i]]++;\n\tfor(int i = 1; i <= m; i++) tax[i] += tax[i - 1];\n\tfor(int i = n; i >= 1; i--) sa[tax[rk[tp[i]]]--] = tp[i];\n}\nvoid SA()\n{\n\tint i, j, p;\n\tfor(i = 1; i <= n; i++) rk[i] = s[i], tp[i] = i;\n\tm = 10000; Sort();\n\tfor(i = 1; p < n; m = p, i <<= 1)\n\t{\n\t\tp = 0;\n\t\tfor(j = 1; j <= i; j++) tp[++p] = n - i + j;\n\t\tfor(j = 1; j <= n; j++) if(sa[j] > i) tp[++p] = sa[j] - i;\n\t\tSort(); swap(rk, tp);\n\t\tp = rk[sa[1]] = 1;\n\t\tfor(j = 2; j <= n; j++)\n\t\t\trk[sa[j]] = (tp[sa[j]] == tp[sa[j - 1]] && tp[sa[j] + i] == tp[sa[j - 1] + i]) ? p : ++p;\n\t}\n\tp = 0;\n\tfor(i = 1; i <= n; i++)\n\t{\n\t\tif(p) p--;\n\t\twhile(s[i + p] == s[sa[rk[i] - 1] + p]) p++;\n\t\th[rk[i]] = p;\n\t}\n}\nvoid dfs(int l, int r)\n{\n\tif(l > r) return ;\n\tint i, mn = 1e9, p;\n\tfor(i = l; i <= r; i++) if(h[i] < mn) mn = h[i], p = i;\n\tans -= 2ll * mn * (p - l + 1) * (r - p + 1);\n\tdfs(l, p - 1); dfs(p + 1, r);\n}\nvoid work()\n{\n\tfor(int i = 1; i <= n; i++) ans += 3ll * i * (i - 1) / 2;\n}\nint main(int argc, char **argv)\n{\n\tscanf(\"%s\", s + 1); n = strlen(s + 1);\n\tSA(); dfs(1, n); work();\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1557664567,
        "uid": 47140,
        "name": "\u65af\u8302",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4248 \u3010[AHOI2013]\u5dee\u5f02\u3011"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](https://www.luogu.com.cn/problem/P4248)\u770b\u9898\u76ee\u3002  \n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5e94\u8be5\u662f\u540e\u7f00\u6570\u7ec4\u7684\u6a21\u677f\u9898\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5148\u6c42\u51fa$sa$\u548c$height$\u6570\u7ec4\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7136\u540e\u8003\u8651\uff0c\u5bf9\u4e8e\u6240\u6709\u540e\u7f00\u626b\u4e00\u904d\uff0c\u7136\u540e\u4e2d\u9014\u6c42\u51fa\u7b54\u6848\u3002\u5f53\u6211\u4eec\u626b\u63cf\u5230\u540e\u7f00$i$\uff08\u4e5f\u5c31\u662f$s[sa[i]...]$\uff0c\u540e\u7f00\u5df2\u7ecf\u6309\u7167\u5b57\u5178\u5e8f\u6392\u597d\u4e86\uff09\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa\uff1a  \n$$\\sum_{1\\le j<i}len(T_j)+len(T_i)-2\\times lcp(T_i,T_j)$$  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6bcf\u6b21\u5c31\u628a\u7b54\u6848\u7d2f\u52a0\u8d77\u6765\u5c31\u53ef\u4ee5\u4e86\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u53d8\u5f62\uff1a  \n$$=(i-1)\\times len(T_i)+\\sum_{1\\le j<i}len(T_j)-2\\sum_{1\\le j<i}lcp(T_i,T_j)$$\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8003\u8651\u5982\u4f55\u5feb\u901f\u6c42\u51fa\u4ee5\u4e0a\u7684\u4e1c\u897f\u3002\u663e\u7136\uff0c\u6700\u91cd\u8981\u7684\u662f\u6c42\u51fa\u540e\u9762\u7684\u90a3\u4e00\u5806\u4e1c\u897f\u3002\u6839\u636e$lcp$\u7684\u5b9a\u7406\uff08$lcp(T_i,T_j)=\\min_{i<k\\le j}\\{height[k]\\}$\uff0c\u540e\u7f00\u5df2\u7ecf\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5217\u597d\u5e76\u4e14$i<j$\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u7528\u4e00\u4e2a\u5355\u8c03\u6808\u6765\u7ef4\u62a4\u4e00\u4e2a\u9012\u589e\u7684$height$\u7684\u5e8f\u5217\uff0c\u53e6\u5916\u7528\u4e00\u4e2a\u53d8\u91cf\u6765\u5b58\u8ba1\u7b97\u51fa\u6765\u7684$2\\sum_{1\\le j<i}lcp(T_i,T_j)$\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u6210\u529f\u5730\u7ef4\u62a4\u51fa\u6765\u8fd9\u4e00\u5806\u4e1c\u897f\u4e86\u3002\u5176\u4ed6\u90e8\u5206\u7ef4\u62a4\u8d77\u6765\u6bd4\u8f83\u7b80\u5355\u3002\u65f6\u95f4\u662f$O(n\\log_2n)$\uff0c\u4e5f\u5c31\u662f\u5efa\u540e\u7f00\u6570\u7ec4\u7684\u65f6\u95f4\u3002~~\u5927\u4f6c\u4eec\u53ef\u4ee5\u5c1d\u8bd5DC3\u6216\u8005SA-IS......\u5c31\u53d8\u6210O(n)\u4e86......~~  \n# \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <cstring>\n\ntypedef long long LL;\n\nconst int MAXN = 500005, MAXSIZ = 30;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0; char s = getchar();int f = 1;\n\twhile( s < '0' || '9' < s ) { f = 1; if( s == '-' ) f = -1; s = getchar(); }\n\twhile( '0' <= s && s <= '9' ) { x = ( x << 3 ) + ( x << 1 ) + s - '0', s = getchar(); }\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ) { putchar( '-' ), x = -x; }\n\tif( 9 < x ) { write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\nint sta[MAXN], top;\nint height[MAXN];\nint sa[MAXN << 2], rnk[MAXN << 2], cnt[MAXN], tmp[MAXN];\nchar s[MAXN];\nint N;\n\nbool cmp( const int a, const int b, const int st ) { return rnk[a] == rnk[b] && rnk[a + st] == rnk[b + st]; }\n\nint main()\n{\n\tscanf( \"%s\", s + 1 ); N = strlen( s + 1 );\n\tfor( int i = 1 ; i <= N ; i ++ ) cnt[s[i] - 'a' + 1] = 1;\n\tfor( int i = 1 ; i <= 26 ; i ++ ) cnt[i] += cnt[i - 1];\n\tfor( int i = 1 ; i <= N ; i ++ ) rnk[i] = cnt[s[i] - 'a' + 1];\n\tint lst = cnt[26];\n\tfor( int k = 1, p = 0 ; p < N ; k <<= 1, p = lst )\n\t{\n\t\tfor( int i = 1 ; i <= N ; i ++ ) cnt[i] = 0;\n\t\tfor( int i = 1 ; i <= N ; i ++ ) cnt[rnk[i + k]] ++;\n\t\tfor( int i = 1 ; i <= N ; i ++ ) cnt[i] += cnt[i - 1];\n\t\tfor( int i = N ; i ; i -- ) tmp[cnt[rnk[i + k]] --] = i;\n\t\tfor( int i = 1 ; i <= N ; i ++ ) cnt[i] = 0;\n\t\tfor( int i = 1 ; i <= N ; i ++ ) cnt[rnk[tmp[i]]] ++;\n\t\tfor( int i = 1 ; i <= N ; i ++ ) cnt[i] += cnt[i - 1];\n\t\tfor( int i = N ; i ; i -- ) sa[cnt[rnk[tmp[i]]] --] = tmp[i];\n\t\tlst = 0;\n\t\tfor( int i = 1 ; i <= N ; i ++ )\n\t\t{\n\t\t\tif( ! cmp( sa[i], sa[i - 1], k ) ) lst ++;\n\t\t\ttmp[sa[i]] = lst;\n\t\t}\n\t\tfor( int i = 1 ; i <= N ; i ++ ) rnk[i] = tmp[i];\n\t}\n\tint r = 0;\n\tfor( int i = 1, j ; i <= N ; i ++ )\n\t{\n\t\tif( rnk[i] == 1 ) continue;\n\t\tif( r ) r --;\n\t\tj = sa[rnk[i] - 1];\n\t\twhile( j + r <= N && i + r <= N && s[i + r] == s[j + r] ) r ++;\n\t\theight[rnk[i]] = r;\n\t}\n\ttop = 0;\n\tLL res = 0, ps = N - sa[1] + 1, dif = 0; sta[top] = 1;\n\tfor( int i = 2 ; i <= N ; i ++ )\n\t{\n\t\twhile( top && height[sta[top]] >= height[i] ) \n\t\t\tdif -= 1ll * height[sta[top]] * ( sta[top] - sta[top - 1] ), top --;\n\t\tdif += 1ll * ( i - sta[top] ) * height[i], sta[++ top] = i;\n        //\u7ef4\u62a4\u51cf\u7684\u90a3\u4e00\u90e8\u5206\n\t\tres += 1ll * ( N - sa[i] + 1 ) * ( i - 1 ) + ps - 2 * dif; \n\t\tps += N - sa[i] + 1;\n\t}\n\twrite( res ), putchar( '\\n' );\n\treturn 0;\n}\n```",
        "postTime": 1575005006,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[AHOI2013]\u5dee\u5f02"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u4e00\u770b\u5c31\u662f\u4e3a\u540e\u7f00\u5bb6\u65cf\u8bbe\u8ba1\u7684\n\n\u6211\u4eec\u770b\u5230\u6211\u4eec\u8981\u6c42\u7684\u8fd9\u4e2a\u67ff\u5b50\n\n$$\\sum_{i=1}^n\\sum_{j=i+1}^nT_i+T_j-2\\times lcp(T_i,T_j)$$\n\n\u663e\u7136\u7684\u662f\u524d\u9762\u7684\u90a3\u4e9b\u4e1c\u897f\u662f\u4e2a\u5b9a\u503c\n\n\u5c31\u662f\u4fdd\u8bc1\u6bcf\u4e00\u4e2a\u957f\u5ea6\u90fd\u4f1a\u88ab\u5176\u4ed6\u957f\u5ea6\u7b97\u5230\uff0c\u4e5f\u5c31\u662f\u7b97\u5230$n-1$\u6b21\n\n\u4e8e\u662f\u628a\u524d\u9762\u90a3\u4e9b\u4e1c\u897f\u62ff\u51fa\u6765\u5c31\u662f\n\n$$\\frac{(n+1)(n-1)n}{2}$$\n\n\u4e4b\u540e\u518d\u770b\u540e\u9762\u90a3\u4e9b\u4e1c\u897f\n\n\u6240\u6709\u540e\u7f00\u7684$lcp$\u7684\u957f\u5ea6\uff1f\n\n\u5148\u6765\u8003\u8651\u4e00\u4e0b\u5982\u4f55\u6c42\u4e24\u4e2a\u540e\u7f00\u7684$lcp$\n\n~~\u54c8\u5e0c+\u4e8c\u5206\u554a~~$SA$\u554a\n\n\u5bf9\u4e8e\u540e\u7f00$i,j$\uff0c\u4ed6\u4eec\u7684$lcp$\u957f\u5ea6\u5c31\u662f$min(heighht[rk[i]+1]...height[rk[j]])$\n\n\u4e8e\u662f\u73b0\u5728\u7684\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u51fa$height$\u6570\u7ec4\u6240\u6709\u5b50\u533a\u95f4\u7684\u6700\u5c0f\u503c\u7684\u548c\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e00\u4e2a\u52a8\u6001\u5f80\u5e8f\u5217\u672b\u5c3e\u52a0\u6570\u7684\u8fc7\u7a0b\n\n\u4e5f\u5c31\u662f\u6211\u4eec\u5f80\u672b\u5c3e\u52a0\u4e00\u4e2a\u6570\u90fd\u4f1a\u548c\u4e4b\u524d\u6240\u6709\u7684\u6570\u5f62\u6210\u4e00\u4e2a\u65b0\u7684\u533a\u95f4\n\n\u8003\u8651\u5feb\u901f\u7b97\u51fa\u8fd9\u4e9b\u533a\u95f4\u7684\u6700\u5c0f\u503c\u7684\u548c\n\n\u6211\u4eec\u53ef\u4ee5\u5bf9\u6bcf\u4e00\u4e2a\u6570\u5b58\u50a8\u4e00\u4e2a$a_i$\uff0c\u8868\u793a$i$\u5230\u5f53\u524d\u5e8f\u5217\u672b\u5c3e\u7684\u6700\u5c0f\u503c\u662f\u591a\u5c11\n\n\u6211\u4eec\u6bcf\u6b21\u52a0\u5165\u4e00\u4e2a\u6570\u53ef\u4ee5\u5bf9\u66f4\u65b0\u4e00\u4e0b\u6240\u6709\u7684$a_i$\uff0c\u628a\u6240\u6709\u6bd4\u5f53\u524d\u52a0\u5165\u7684\u6570\u5927\u7684$a_i$\u53d8\u6210\u5f53\u524d\u6570\u5c31\u597d\u4e86\n\n\u8fd9\u4e0d\u5c31$T$\u4e86\u5417\n\n\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa\u6240\u6709$a_i$\u7684\u548c\uff0c\u5e76\u4e0d\u9700\u8981\u5173\u5fc3\u8fd9\u4e2a$i$\u6765\u81ea\u54ea\u91cc\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u628a\u76f8\u7b49\u7684$a_i$\u653e\u5728\u4e00\u8d77\u8ba1\u7b97\uff0c\u4e5f\u5c31\u662f\u6bcf\u6b21\u65b0\u52a0\u5165\u4e00\u4e2a\u6570\u5c31\u66b4\u529b\u626b\u4e00\u904d\u628a\u90a3\u4e9b\u6bd4\u5f53\u524d\u52a0\u5165\u6570\u5927\u7684\u5408\u5e76\u5230\u4e00\u4e2a$a_i$\u91cc\n\n\u770b\u8d77\u6765\u590d\u6742\u5ea6\u5e76\u4e0d\u79d1\u5b66\uff0c\u4f46\u662f\u6700\u574f\u60c5\u51b5\u4e0b\u5c31\u76f8\u5f53\u4e8e\u662f\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7684\u590d\u6742\u5ea6\u4e86\uff0c$O(n)$\u7684\uff0c\u8dd1\u7684\u8fd8\u633a\u5feb\u7684\n\n\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#define re register\n#define maxn 500005\n#define LL long long\n#define max(a,b) ((a)>(b)?(a):(b))\n#define min(a,b) ((a)<(b)?(a):(b))\n#define pt putchar(1)\ninline int read()\n{\n\tchar c=getchar();int x=0;\n\twhile(c<'0'||c>'9') c=getchar();\n\twhile(c>='0'&&c<='9') x=(x<<3)+(x<<1)+c-48,c=getchar();return x;\n}\nint n,m,top;\nLL ans=0,sum=0;\nchar S[maxn];\nint tax[maxn],sa[maxn],rk[maxn],tp[maxn],height[maxn];\nint L[maxn],R[maxn],st[maxn];\nint a[maxn],cnt[maxn];\nLL pre[maxn];\ninline void qsort()\n{\n\tfor(re int i=0;i<=m;i++) tax[i]=0;\n\tfor(re int i=1;i<=n;i++) tax[rk[i]]++;\n\tfor(re int i=1;i<=m;i++) tax[i]+=tax[i-1];\n\tfor(re int i=n;i;--i) sa[tax[rk[tp[i]]]--]=tp[i];\n}\nint main()\n{\n\tscanf(\"%s\",S+1);\n\tn=strlen(S+1);\n\tm=75;\n\tfor(re int i=1;i<=n;i++) rk[i]=S[i]-'a'+1,tp[i]=i;\n\tqsort();\n\tfor(re int w=1,p=0;p<n;m=p,w<<=1)\n\t{\n\t\tp=0;\n\t\tfor(re int i=1;i<=w;i++) tp[++p]=n-w+i;\n\t\tfor(re int i=1;i<=n;i++) if(sa[i]>w) tp[++p]=sa[i]-w;\n\t\tqsort();\n\t\tfor(re int i=1;i<=n;i++) std::swap(tp[i],rk[i]);\n\t\trk[sa[1]]=p=1;\n\t\tfor(re int i=2;i<=n;i++) rk[sa[i]]=(tp[sa[i-1]]==tp[sa[i]]&&tp[sa[i-1]+w]==tp[sa[i]+w])?p:++p;\n\t}\n\tint k=0;\n\tfor(re int i=1;i<=n;i++)\n\t{\n\t\tif(k) --k;\n\t\tint j=sa[rk[i]-1];\n\t\twhile(S[i+k]==S[j+k]) ++k;\n\t\theight[rk[i]]=k;\n\t}\n\tans+=height[2];\n\ta[1]=ans;cnt[1]=1,sum=ans;\n\ttop=1;\n\tfor(re int i=3;i<=n;i++)  \n\t{\n\t\tint now=1;\n\t\twhile(top&&height[i]<=a[top]) \n\t\t\tnow+=cnt[top],sum-=a[top]*cnt[top],top--;\n\t\tcnt[++top]=now;\n\t\ta[top]=height[i];\n\t\tsum+=cnt[top]*a[top];\n\t\tans+=sum;\n\t}\n\tprintf(\"%lld\\n\",(LL)(n-1)*(LL)(n+1)*(LL)n/2ll-2ll*ans);\n\treturn 0;\n}\n```",
        "postTime": 1545521031,
        "uid": 35178,
        "name": "asuldb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4248 \u3010[AHOI2013]\u5dee\u5f02\u3011"
    }
]