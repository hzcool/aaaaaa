[
    {
        "content": "\u4e0d\u9519\u7684\u601d\u7ef4\u9898 7.5/10\n\n\u5047\u8bbe\u4f60\u8981\u5207k\u6761\u8fb9\uff0c\u90a3\u4e48\u4f60\u4f1a\u628a\u8fd9\u68f5\u6811\u5207\u6210k+1\u4e2a\u8fde\u901a\u5757\uff0c\u6bcf\u4e00\u5757\u7684\u5927\u5c0f\u4e3an/(k+1)\uff0c\u5219k+1\u5fc5\u5b9a\u662fn\u7684\u7ea6\u6570\n\n~~\u679a\u4e3e\u7ea6\u6570\uff1fT\u4e86~~\n\n\u4efb\u610f\u9009\u4e00\u4e2a\u70b9\u4e3a\u6839\uff0c\u5efa\u6811\u3002\u5047\u8bbe\u4f60\u5207\u6389\u4e86\u8fde\u63a5(fa[u],u)\u7684\u4e00\u6761\u8fb9\uff0c\u90a3\u4e48u\u8fd9\u68f5\u5b50\u6811\u5927\u5c0f\u5fc5\u5b9a\u662fn/(k+1)\u7684\u500d\u6570\u3002\u90a3\u6211\u4eec\u627e\u51fa\u6ee1\u8db3\u5b50\u6811\u5927\u5c0f\u7b49\u4e8en/(k+1)\u7684\u500d\u6570\u7684\u70b9\uff0c\u82e5\u6570\u91cf\u7b49\u4e8e\uff08k+1\uff09\u90a3\u4e48\u4e00\u5b9a\u53ef\u884c\u3002\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nconst int MAXN=2010000;\nint n,siz[MAXN],sum[MAXN],q[MAXN],ans;\nint tot,front[MAXN],to[MAXN],nxt[MAXN];\nvoid init(int u,int v)\n{\n\tto[++tot]=v;\n\tnxt[tot]=front[u];\n\tfront[u]=tot;\n}\nvoid dfs(int u,int father)\n{\n\tsiz[u]++;\n\tfor(int i=front[u];i;i=nxt[i])\n\t{\n\t\tint v=to[i];\n\t\tif(v==father)continue;\n\t\tdfs(v,u);\n\t\tsiz[u]+=siz[v];\n\t}\n\tsum[siz[u]]++;\n}\nbool check(int x)\n{\n\tx++;\n\tif(n%x)return 0;\n\tint u=n/x,v=0;\n\tfor(int i=u;i<=n;i+=u)v+=sum[i];\n\treturn (v==x);\n}\nint main()\n{\n//\tfreopen(\"test.in\",\"r\",stdin);\n\t//freopen(\"test.out\",\"w\",stdout);\n\tscanf(\"%d\",&n);\n\tfor(int i=2,u,v;i<=n;i++)\n\t{\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tinit(u,v);\n\t\tinit(v,u);\n\t}\n\tdfs(1,0);\n\tfor(int i=1;i<n;i++)\n\t\tif(check(i))\n\t\t\tq[++ans]=i;\n\t//printf(\"%d\\n\",ans);\n\tfor(int i=1;i<=ans;i++)printf(\"%d \",q[i]);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1556107669,
        "uid": 27032,
        "name": "cyhzz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4748 \u3010[CERC2017]Justified Jungle\u3011"
    },
    {
        "content": "\u633a\u597d\u7684\u4e00\u9053\u601d\u7ef4\u9898,\u9996\u5148,\u6211\u4eec\u8981\u77e5\u9053\u4e00\u4e2a\u8054\u901a\u5757\u7684\u6570\u91cf\u4e00\u5b9a\u662fn\u7684\u7ea6\u6570\u624d\u6709\u53ef\u80fd.\n\u8003\u8651\u4e00\u4e2a\u66b4\u529b\u7684\u505a\u6cd5,\u679a\u4e3e\u6bcf\u4e00\u4e2a\u56e0\u5b50u,\u8003\u8651\u662f\u5426\u53ef\u884c,\u600e\u4e48\u5224\u65ad\u662f\u5426\u53ef\u884c\u5462\uff1f\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u8282\u70b9x.  \n1.\u82e5x\u7684size==u,\u5219\u6211\u4eec\u76f4\u63a5\u5c06\u8fb9(x,fa[x])\u65ad\u6389\u5373\u53ef,\u5c06size[x]\u6e05\u96f6.  \n2.\u82e5x\u7684size<u.\u5219x\u8fd8\u4e0d\u8db3\u4ee5\u6784\u6210\u4e00\u4e2a\u8054\u901a\u5757,\u8fd8\u9700\u8981\u7d2f\u52a0\u4e0a\u7236\u4eb2.\u5148\u4e0d\u7ba1.  \n3.\u6700\u96be\u7684\u82e5x\u7684size>u,\u6211\u4eec\u8be5\u600e\u4e48\u8003\u8651,\u8003\u8651\u7ecf\u8fc7\u4e0a\u9762\u4e24\u4e2a\u6b65\u9aa4,x\u7684\u6240\u6709\u513f\u5b50\u7684\nsize\u4e00\u5b9a<u,\u6216\u8005\u6ca1\u6709\u8d21\u732e(\u4e0d\u7528\u8003\u8651)\u5373\u6240\u6709\u7684\u513f\u5b50\u90fd\u9700\u8981\u4f9d\u9760\u7236\u4eb2\u6765\u6784\u6210\u8fde\u901a\u5757,\u4f46\u73b0\u5728x\u7684size\u5df2\u7ecf>u,\u8bf4\u660ex\u7684\u5b50\u6811\u5185\u4e00\u5b9a\u8981\u4ea7\u751f\u81f3\u5c11\u4e00\u4e2a\u8054\u901a\u5757.\u4f46\u662f\u65e0\u8bbax\u5206\u7ed9\u54ea\u4e2a\u513f\u5b50,\u5176\u4ed6x\u7684\u513f\u5b50\u5c31\u90fd\u65ad\u5f00\u4e86,\u4e14\u5176size<u,\u8fd9\u6837\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u7684\u8bdd,\u5c31\u8bf4\u660eu\u4e00\u5b9a\u4e0d\u5408\u6cd5.  \n\u8fd9\u662f\u66b4\u529b\u7684\u505a\u6cd5,\u5b9e\u6d4b70pts.  \n\u8003\u8651\u5982\u4f55\u66f4\u5feb\u901f\u7684\u8fdb\u884c\u5224\u65ad.\u901a\u8fc7\u4e0a\u9762\u7684\u5206\u6790,\u6211\u4eec\u53d1\u73b0,\u5176\u5b9e\u6211\u4eec\u65ad\u6389\u7684\u8fb9\u7684size\u90fd\u662fu\u7684\u500d\u6570..\u56e0\u4e3a\u5728\u4e0a\u9762\u7684\u64cd\u4f5c\u4e2d,\u53ea\u6709size==u\u65f6\u6211\u4eec\u624d\u6267\u884c\u65ad\u8fb9\u64cd\u4f5c,\u60f3\u8c61\u4e00\u4e0b,\u4e00\u4e2a\u70b9\u7684size==u\u4e4b\u540e,\u88ab\u6e05\u96f6\u4e86,\u4e4b\u540e\u5176\u7956\u5b97\u53c8\u591fu\u8fdb\u884c\u6e05\u96f6\u4e86,\u5982\u679c\u6211\u4eec\u5c06\u5176size\u539f\u672c\u5c31\u7d2f\u52a0\u8d77\u6765\u7684\u8bdd,\u65ad\u8fb9\u64cd\u4f5c\u7684\u5224\u65ad\u5b9e\u8d28\u5c31\u662f\u662f\u5426\u662fu\u7684\u500d\u6570.  \n\u77e5\u9053\u8fd9\u4e2a\u4e4b\u540e,\u6211\u4eec\u7edf\u8ba1\u4e0b,\u6240\u6709\u4e0d\u540c\u7684size\u7684\u4e2a\u6570,\u5bf9\u4e8e\u4e00\u4e2a\u8fde\u901a\u5757\u6570\u91cfu\u6765\u8bf4,\u76f4\u63a5\u627e\u51fa\u80fd\u65ad\u6389\u591a\u5c11\u6761\u8fb9.\u5224\u65ad\u662f\u5426\u5408\u6cd5\u5373\u53ef.\n\u4ee3\u7801(\u5efa\u8bae\u81ea\u5df1\u7801):\n```cpp\n//\u4e0d\u7b49,\u4e0d\u95ee,\u4e0d\u72b9\u8c6b,\u4e0d\u56de\u5934\n\n#include<bits/stdc++.h>\n#define _ 0\n#define db double\n#define RE register\n#define ll long long\n#define P 1000000007\n#define INF 1000000000\n#define get(x) x=read()\n#define PLI pair<ll,int>\n#define PII pair<int,int>\n#define pb(x) push_back(x)\n#define ull unsigned long long\n#define put(x) printf(\"%d\\n\",x)\n#define getc(a) scanf(\"%s\",a+1)\n#define putl(x) printf(\"%lld\\n\",x)\n#define rep(i,x,y) for(RE int i=x;i<=y;++i)\n#define fep(i,x,y) for(RE int i=x;i>=y;--i)\n#define go(x) for(int i=link[x],y=a[i].y;i;y=a[i=a[i].next].y)\nusing namespace std;\nconst int N=1e6+10;\nint link[N],tot,n,size[N],d[N],num,sum[N];\nstruct edge{int y,next;}a[N<<1];\nbool fail;\ninline int read()\n{\n\tint x=0,ff=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)) {if(ch=='-') ff=-1;ch=getchar();}\n\twhile(isdigit(ch)) {x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n\treturn x*ff;\n}\ninline void add(int x,int y)\n{\n\ta[++tot].y=y;\n\ta[tot].next=link[x];\n\tlink[x]=tot;\n}\ninline void dfs(int x,int fa)\n{\n\tsize[x]=1;\n\tgo(x)\n\t{\n\t\tif(y==fa) continue;\n\t\tdfs(y,x);\n\t\tsize[x]+=size[y];\n\t}\n\tsum[size[x]]++;\n}\ninline bool check(int x)//\u5224\u65ad\u4e00\u4e2a\u8fde\u901a\u5757\u7684\u6570\u91cf\u4e3ax\u662f\u5426\u53ef\u884c. \n{\n\tif(n%x) return false;\n\tint v=0;\n\tfor(int i=x;i<=n;i+=x) v+=sum[i];\n\treturn (v-1==(n/x-1)); \n}\nint main()\n{\n\tfreopen(\"1.in\",\"r\",stdin);\n\tget(n);\n\trep(i,1,n-1)\n\t{\n\t\tint get(x),get(y);\n\t\tadd(x,y);add(y,x);\n\t}\n\tdfs(1,0);\n\tfep(i,n-1,1) if(check(i)) d[++num]=n/i-1;\n\trep(i,1,num) printf(\"%d \",d[i]);\n\treturn (0^_^0);\n}\n\n//\u543e\u4ee5\u543e\u8840,\u796d\u543e\u6700\u540e\u7684\u4ea1\u9b42\n\n\n\n```\n",
        "postTime": 1588084926,
        "uid": 182101,
        "name": "\u9006\u5929\u5cf0\u738b\u8005",
        "ccfLevel": 0,
        "title": "P4748 [CERC2017]Justified Jungle \u9898\u89e3"
    },
    {
        "content": "\u5c06\u4e00\u9897\u6811\u5207\u6210 `x` \u4e2a\u5927\u5c0f\u76f8\u540c\u7684\u8fde\u901a\u5757\uff08$x\\mid n$\uff09\uff0c\u6bcf\u5757\u5927\u5c0f $SIZE=\\frac{n}{x}$\u3002\n\n\u8003\u8651\u5230\u679a\u4e3e `n` \u7684\u7ea6\u6570 `x` (`x` \u8868\u793a\u8fde\u901a\u5757\u7684\u4e2a\u6570)\uff0c\u7136\u540e\u5224\u65ad\u662f\u5426\u5b58\u5728\u5220\u53bb $\\frac{n}{x}$ \u8fb9\u65b9\u6848\u4f7f\u5f97 `x` \u6210\u7acb\u3002\n\n**`x` \u7684\u5b58\u5728\u6027\u5224\u65ad\u65b9\u6cd5\uff1a**\n\n\u5220\u53bb\u4efb\u610f\u4e00\u6761\u8fb9\uff0c\u90fd\u4f1a\u4f7f\u5f97\u6574\u68f5\u6811\u5206\u6210\u4e24\u90e8\u5206\uff0c\u8bbe\u8fd9\u4e24\u90e8\u5206\u7684\u5927\u5c0f\u5206\u522b\u4e3a $p_1$ \u548c $p_2$\u3002\n\n\u90a3\u4e48\u6709 $SIZE\\mid p_1$ \u4e14 $SIZE\\mid p_2$\u3002\uff08\u663e\u7136\u53ea\u7528\u6ee1\u8db3\u5176\u4e2d\u4e00\u4e2a\u6761\u4ef6\uff0c\u53e6\u4e00\u4e2a\u5fc5\u7136\u6210\u7acb\uff09\n\n\u53ef\u4ee5\u8003\u8651\u56fa\u5b9a\u4e00\u4e2a\u70b9\u4e3a\u6839\uff0c\u9884\u5904\u7406\u51fa\u6240\u6709\u70b9\u7684\u5b50\u6811\u7684\u5927\u5c0f\u5373\u53ef\u3002\n\n\u5982\u679c\u6709 `x` \u4e2a\u70b9\u7684\u5b50\u6811\u5927\u5c0f\u6ee1\u8db3 $SIZE\\mid p_1$\uff0c\u90a3\u4e48\u53ef\u4ee5\u8bc1\u660e\u5b58\u5728\u4e00\u79cd\u65b9\u6848\uff0c\u4f7f\u5f97\u6811\u80fd\u5206\u6210 `x` \u4e2a\u8fde\u901a\u5757\uff08\u4e0d\u4e3a `x-1` \u7684\u539f\u56e0\uff1a\u6839\u8282\u70b9\u5fc5\u7136\u6ee1\u8db3\uff0c\u4e14\u6ca1\u6709\u7236\u4eb2\u8282\u70b9\uff09\u3002\n\n\n```cpp\n#include <bits/stdc++.h>\nstruct Node\n{\n    static const int N = 10000005;\n    int sz[N], cnt[N], n;\n    std::vector<int> ans;\n    std::vector<int> G[N];\n    void init(int x, int fa)\n    {\n        sz[x] = 1;\n        for (int y : G[x])\n            if (y != fa) init(y, x), sz[x] += sz[y];\n        cnt[sz[x]]++;\n    }\n    bool check(int div)\n    {\n        // div \u5757\uff0c\u5927\u5c0f\u4e3a SIZE\n        int SIZE = n / div, sum = 0;\n        for (int i = SIZE; i <= n; i += SIZE)\n            sum = sum + cnt[i];\n        return div == sum;\n    }\n    void run()\n    {\n        for (int i = 1; i * i <= n; i++)\n            if (n % i == 0)\n            {\n                if (i != 1 && check(i))\n                    ans.push_back(i - 1);\n                if (i != n / i && check(n / i))\n                    ans.push_back(n / i - 1);\n            }\n        std::sort(ans.begin(), ans.end());\n        for (int x : ans)\n            printf(\"%d \", x);\n    }\n    void rai()\n    {\n        scanf(\"%d\", &n);\n        int a, b;\n        for (int i = 1; i <= n - 1; i++)\n        {\n            scanf(\"%d %d\", &a, &b);\n            G[a].push_back(b);\n            G[b].push_back(a);\n        }\n        init(1, 0);\n    }\n} work;\nint main()\n{\n    work.rai();\n    work.run();\n    return 0;\n}\n```",
        "postTime": 1655278449,
        "uid": 735756,
        "name": "mklzc",
        "ccfLevel": 0,
        "title": "Justified Jungle \u9898\u89e3"
    }
]