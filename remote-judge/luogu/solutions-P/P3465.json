[
    {
        "content": "\u4e00\u904d AC\uff0c \u975e\u5e38\u8212\u9002\uff0c\u53d1\u7bc7\u9898\u89e3\uff0c\u7eaa\u5ff5\u4e00\u4e0b\n\n\u539f\u9898\u94fe\u63a5[\u3010[POI2008]CLO-Toll\u3011](https://www.luogu.org/problem/P3465)\n\n\u672c\u9898\u7684\u96be\u70b9\u5728\u4e8e\u8bfb\u9898\uff0c\u6ca1\u9519\uff0c\u5c31\u662f\u8bfb\u9898\n\n\u4ed4\u7ec6\u7684\u8bfb\u4e00\u4e0b\u9898\u76ee\uff1a\n\n\t\t\u7ed9\u4f60 n \u4e2a\u70b9\u548c m \u6761\u53cc\u5411\u8fb9\uff0c\n\n\t\t\u95ee\u80fd\u5426\u5c06\u5176\u4e2d\u7684\u4e00\u4e9b\u8fb9\u6539\u6210\u6709\u5411\u8fb9\uff0c\n\n\t\t\u4f7f\u5f97\u53ea\u8003\u8651\u6709\u5411\u8fb9\u7684\u60c5\u51b5\u4e0b\u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\u90fd\u4e3a 1 \u3002\n\n\u53ea\u8003\u8651\u6709\u5411\u8fb9\uff0c\u53ea\u8003\u8651\u6709\u5411\u8fb9\uff0c\u53ea\u8003\u8651\u6709\u5411\u8fb9\n\n~~\u7136\u540e\u672c\u9898\u5c31\u5b8c\u4e86\u554a~~\n\n\u53ea\u8003\u8651\u6709\u5411\u8fb9\uff0c\u610f\u601d\u5c31\u662f\u522b\u7684\u8fb9\u90fd\u4e0d\u7528\u8003\u8651\n\n\u4e5f\u5c31\u662f\u8bf4\u53ea\u8981\u672c\u56fe\u5b58\u5728\u4e00\u4e2a\u5b50\u56fe\u6ee1\u8db3\u6bcf\u4e2a\u70b9\u53ea\u6709\u4e00\u4e2a\u5165\u5ea6\u5c31\u884c\n\n\u89e3\u9898\u601d\u8def\uff1a\n\n\t\t1\u3001\u76f4\u63a5\u8dd1\u4e00\u68f5\u751f\u6210\u6811\uff0c\u6216\u8005\u8bf4\u662f\u751f\u6210\u68ee\u6797\n\n\t\t2\u3001\u679a\u4e3e\u6bcf\u4e00\u6761\u975e\u6811\u8fb9\uff0c\u82e5\u4e24\u70b9\u5728\u540c\u4e00\u751f\u6210\u6811\u4e0a\uff0c\u5c31 dfs \u51fa\u8fd9\u6574\u68f5\u6811\u7684 ans\n\n\t\t3\u3001\u5224\u65ad\uff0c\u5e76\u8f93\u51fa\n\n\u55ef\uff0c\u5c31\u5b8c\u4e86\uff0c\u771f\u7684\u5b8c\u4e86 QwQ~~\n\n\u8bf4\u4e00\u4e0b\u6211\u5b8c\u6210\u6211\u7684\u601d\u8def\u7684\u4ee3\u7801\u5b9e\u73b0\uff1a\n\n\t\t1\u3001\u8dd1\u751f\u6210\u6811\uff0c\u76f4\u63a5\u7528\u5e76\u67e5\u96c6\uff0c\u5e76\u5efa\u597d\u53ea\u6709\u6811\u8fb9\u7684\u56fe\uff0c\u518d\u7ed9\u6811\u8fb9\u90fd\u6253\u4e0a\u6807\u8bb0\n\n\t\t2\u3001\u975e\u6811\u8fb9\u5373\u4e3a\u6ca1\u6709\u6253\u6807\u8bb0\u7684\u8fb9\uff0c\u5e76\u67e5\u96c6\u5224\u65ad\u662f\u5426\u5728\u540c\u4e00\u68f5\u6811\u4e0a\uff0c\u6811\u4e0a dfs \u5c31\u4e0d\u8bf4\u4e86\n\n\t\t3\u3001\u53ea\u8981\u6709\u4e00\u4e2a\u70b9\u6ca1\u6709\u7b54\u6848\uff0c\u90a3\u4e48\u5c31\u8f93\u51fa \u201cNIE\u201d\uff0c\u5426\u5219\u5c31\u8f93\u51fa\u7b54\u6848\u5c31\u597d\u4e86\n\n\u7136\u540e\u771f\u7684\u5b8c\u4e86\uff0c\u4e0a\u4ee3\u7801\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <cmath>\n\nusing namespace std;\nconst int maxn = 1e5 + 10;\nconst int maxm = 1e6 + 10;\n\ninline int read() {\n    char c = getchar(); int x = 0, f = 1;\n    for (; c > '9' || c < '0'; c = getchar()) if (c == '-') f = -1;\n    for (; c >='0' && c <='9'; c = getchar()) x = (x << 1) + (x << 3) + (c ^ 48);\n    return x * f;\n}\n\nstruct Edge {\n    int u, v; bool col;\n} h[maxm];\n\nint ver[maxm], nxt[maxm], head[maxn], tot;\nint n, m, fx, fy;\nint ans[maxn];\n\nint f[maxn];\ninline int find (int x) {\n    return x == f[x] ? x : f[x] = find (f[x]);\n}\n\nvoid add (int u, int v) {\n    ver[++ tot] = v, nxt[tot] = head[u], head[u] = tot;\n}\n\nvoid dfs (int x, int f) {\n    ans[x] = f;\n    for (register int i = head[x]; i; i = nxt[i])\n        if (!ans[ver[i]])\n            dfs (ver[i], x);\n}\n\nvoid djj () {\n    n = read(), m = read();\n    for (register int i = 1; i <= m; i ++)\n        h[i].u = read(), h[i].v = read();\n    for (register int i = 1; i <= n; i ++)\n        f[i] = i;\n    for (register int i = 1; i <= m; i ++) {\n        fx = find (h[i].u), fy = find (h[i].v);\n        if (fx == fy) continue ;\n        add (h[i].u, h[i].v), add (h[i].v, h[i].u);\n        f[fx] = fy, h[i].col = 1;\n    }\n}\n\nvoid lxy () {\n    for (register int i = 1; i <= m; i ++) {\n        if (h[i].col == 1) continue ;\n        if (find (h[i].u) != find (h[i].v))\n            continue ;\n        if (ans[h[i].u]) continue ;\n        dfs (h[i].u, h[i].v);\n    }\n    for (register int i = 1; i <= n; i ++)\n        if (!ans[i]) {\n            puts (\"NIE\");\n            exit (0);\n        }\n    puts (\"TAK\");\n    for (register int i = 1; i <= n; i ++)\n        printf (\"%d\\n\", ans[i]);\n    exit (0);\n}\n\nvoid djj_lxy () {\n    djj (), lxy ();\n}\n\nint main () {\n    djj_lxy ();\n}\n\n/*\n4 5\n1 2\n2 3\n1 3\n3 4\n1 4\n\nTAK\n3\n3\n4\n1\n*/\n\n```\n~~\u9b3c\u755c\u7684\u7801\u98ce\uff0c\u6253\u4e86\u516b\u5341\u884c~~\n\n\u6ce8\u610f\u597d\u597d\u8bfb\u9898\uff0c~~\u7136\u540e\u672c\u9898\u5b9e\u5728\u662f\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u4e86\u554a~~\n\n\u79bb\u65b0 Noip \u8fd8\u6709\u4e0d\u5230\u4e24\u4e2a\u6708\u7684\u65f6\u95f4\uff0c\u795d\u5927\u5bb6 rp ++\n\n\u4e5f\u662f\u5e0c\u671b\u81ea\u5df1\u80fd\u66f4\u52aa\u529b\u4e00\u4e9b\uff0c\u52a0\u6cb9\uff01",
        "postTime": 1569369501,
        "uid": 162867,
        "name": "shame_djj",
        "ccfLevel": 0,
        "title": "\u3010[POI2008]CLO-Toll\u3011\u9898\u89e3"
    },
    {
        "content": "~~\u641e\u4e0d\u61c2\u4e3a\u5565\u8981\u7528\u5e76\u67e5\u96c6~~\n\n\u601d\u8def: \n\n\u4ece\u4efb\u4e00\u70b9\u51fa\u53d1\u904d\u5386\u6574\u4e2a\u8054\u901a\u5757\uff0c\u628a\u8d70\u7684\u70b9\u548c\u8fb9\u6784\u6210\u4e00\u68f5\u6811\uff0c\u5f53\u51fa\u73b0\u8fd4\u7956\u8fb9\uff08\u5373\u904d\u5386\u8fc7\u7684\u70b9\u518d\u4e00\u6b21\u88ab\u904d\u5386\uff09\uff0c\u5c31\u628a\u8fd9\u4e00\u70b9\u4ee5\u53ca\u5b83\u6240\u6709\u7956\u5148\u6240\u8fde\u7684\u6709\u5411\u8fb9\u5168\u90e8\u53cd\u5411\uff0c\u5f53\u7136\u6709\u53ef\u80fd\u70b9\u4e0d\u5728\u540c\u4e00\u8054\u901a\u5757\u5185\uff0c\u90a3\u4e48\u76f4\u63a5\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\u770b\u6709\u6ca1\u6709\u904d\u5386\u8fc7\u5c31\u884c\u4e86\n\n\u5982\u56fe\uff08\u8868\u793a\u4e0d\u4f1a\u753b\u56fe\uff09\n\n\u6b63\u5e38\u904d\u5386ing![](https://cdn.luogu.com.cn/upload/pic/50956.png)\n\n\u8fd4\u7956![](https://cdn.luogu.com.cn/upload/pic/50958.png)\n\n\u53cd\u5411![](https://cdn.luogu.com.cn/upload/pic/50957.png)\n\n\n\u8fd9\u6837\u5c31\u6ee1\u8db3\u6bcf\u4e2a\u70b9\u90fd\u6709\u5165\u5ea6\u4e86\n\n\u5bb9\u6613\u77e5\u9053\u4e00\u68f5\u6811\u53ea\u9700\u8981\u4e00\u6761\u8fd4\u7956\u8fb9\u5c31\u53ef\u4ee5\u4f7f\u5f97\u6574\u4e2a\u8054\u901a\u5757\u6709\u89e3\uff0c\u4e4b\u540e\u518d\u51fa\u73b0\u8fd4\u7956\u8fb9\u76f4\u63a5\u4e0d\u7ba1\u3002\n\n\u65e0\u89e3\uff1a\u5982\u679c\u6ca1\u6709\u8fd4\u7956\u8fb9\uff0c\u90a3\u4e48\u6574\u4e2a\u8054\u901a\u5757\u5f62\u6210\u6811\u7ed3\u6784\uff0c\u8fd9\u68f5\u6811\u7684\u6839\u8282\u70b9\u6ca1\u6709\u5165\u5ea6\uff0c\u5c31\u5224\u65e0\u89e3\u3002\n\n\u5de8\u4e11\u4ee3\u7801\u5982\u4e0b\uff08\u611f\u89c9\u5f88\u591a\u5730\u65b9\u53ef\u4ee5\u7701\u7565~~\uff0c\u4f46\u8c01\u53eb\u6211\u61d2\u5462233~~\uff09\n```\n#include<bits/stdc++.h> \n#define N 100001\n#define M 200001\n#define orz\nusing namespace std;\nint n,m;\nint ans[N],father[N];\nbool vis[N],fanzu,ok=1;\n\nstruct Edge\n{\n\tint next,to;\n}edge[M*2]; int head[N],cnt;\nvoid add_edge(int from,int to)\n{\n\tedge[++cnt].next=head[from];\n\tedge[cnt].to=to;\n\thead[from]=cnt;\n}\n\ntemplate <class T>\nvoid read(T &x)\n{\n\tchar c;int sign=1;\n\twhile((c=getchar())>'9'||c<'0') if(c=='-') sign=-1; x=c-48;\n\twhile((c=getchar())>='0'&&c<='9') x=(x<<1)+(x<<3)+c-48; x*=sign;\n}\n\nvoid dfs2(int rt,int son)\n{\n\tif(ans[rt]) dfs2(ans[rt],rt);//\u4e00\u76f4\u8df3\u5230\u6839\n\tans[rt]=son;\n}\n\nvoid dfs1(int rt)\n{\n\tvis[rt]=1;\n\tfor(int i=head[rt];i;i=edge[i].next)\n\t{\n\t\tint v=edge[i].to;\n\t\tif(v==father[rt]) continue;//\u56de\u5934 \n\t\tif(vis[v])//\u8fd4\u7956 \n\t\t{\n\t\t\tif(!fanzu)//\u5f53\u524d\u8054\u901a\u5757\u672a\u8fd4\u7956\uff0c\u5426\u5219\u4e0d\u7ba1\u8fd9\u6761\u8fb9 \n\t\t\t{\n\t\t\t\tfanzu=1;\n\t\t\t\tdfs2(v,rt);//\u56de\u5934\u66f4\u65b0 \n\t\t\t}\n\t\t}\n\t\telse//\u6811\u8fb9 \n\t\t{\n\t\t\tans[v]=father[v]=rt;\n\t\t\tdfs1(v);\n\t\t}\n\t}\n}\n\nint main()\n{\n\tread(n);read(m);\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint x,y;\n\t\tread(x);read(y);\n\t\tadd_edge(x,y);\n\t\tadd_edge(y,x);\n\t}\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tif(!vis[i])//\u672a\u8d70\u8fc7 \n\t\t{\n\t\t\tfanzu=0;\n\t\t\tdfs1(i);\n\t\t\tif(!fanzu) {printf(\"NIE\\n\"); return 0;} \n\t\t}\n\t}\n\tprintf(\"TAK\\n\");\n\tfor(int i=1;i<=n;++i) printf(\"%d\\n\",ans[i]);\n\treturn orz;\n}\n```",
        "postTime": 1549261867,
        "uid": 115482,
        "name": "kkksx",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3465 \u3010[POI2008]CLO-Toll\u3011"
    },
    {
        "content": "### 1.\u6d1b\u8c37[P3465[POI2008]CLO-Toll](https://www.luogu.com.cn/problem/P3465)\n\n\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u4f60 $n$ \u4e2a\u70b9\u548c $m$ \u6761\u53cc\u5411\u8fb9\uff0c\u95ee\u80fd\u5426\u5c06\u5176\u4e2d\u7684\u4e00\u4e9b\u8fb9\u6539\u6210\u6709\u5411\u8fb9\uff0c**\u4f7f\u5f97\u53ea\u8003\u8651\u6709\u5411\u8fb9\u7684\u60c5\u51b5\u4e0b** \u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\u90fd\u4e3a $1$ \u3002\n\n#### \u5206\u6790\uff1a\n\n\u4ece $m$ \u6761\u53cc\u5411\u8fb9\u4e2d\u9009\u53d6\u4e00\u4e9b\u8fb9\uff0c\u9009\u5b9a\u65b9\u5411\u540e\u4f7f\u6bcf\u4e2a\u70b9\u5165\u5ea6\u4e3a $1$\u3002\n\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u4ec0\u4e48\u6837\u7684\u56fe\u4e2d\u6240\u6709\u70b9\u5165\u5ea6\u90fd\u4e3a $1$ \u5462\uff1f\n\n\u7b54\u6848 ~~\u663e\u800c\u6613\u89c1~~ -----\u5b58\u5728\u73af\u7684\u56fe\uff08\u57fa\u73af\u6811\uff09\uff1b\n![](https://cdn.luogu.com.cn/upload/image_hosting/ycvem36w.png)  \n\u5982\u56fe\u6240\u793a\uff1a\n\u6211\u4eec\u53d1\u73b0\u53ea\u8981\u5b58\u5728\u73af\u5b83\u5c31\u80fd\u4f7f\u5165\u5ea6\u4e3a\u4e00\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u9700\u4fdd\u8bc1\u5165\u5ea6\u4e3a\u4e00\u51fa\u5ea6\uff0c\u4e14\u6211\u4eec\u53ea\u9700\u9009\u51fa\u8def\u5f84\u5373\u53ef\u5373\u65e0\u9700\u8003\u8651\u591a\u51fa\u7684\u8fb9\uff0c\u6240\u4ee5\u5b58\u5728\u4e00\u4e2a\u73af\u65f6\u6211\u4eec\u4e00\u5b9a\u53ef\u4ee5\u9009\u51fa\u4e00\u6761\u5165\u5ea6\u4e3a\u4e00\u7684\u6709\u5411\u8def\u5f84\u3002\n\n## \u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read()\n{\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch>'9' or ch<'0')\n    {\n        if(ch=='-') f=-1;\n        ch=getchar();\n    }\n    while(ch>='0' and ch<='9')\n    {\n        x=(x<<1)+(x<<3)+(ch^48);\n        ch=getchar();    \n    }\n    return f*x; \n}\nconst int MM=1e6+55;\nint n,m,tot,fa[MM];\nint head[MM],nxt[MM],ver[MM],ans[MM];\nstruct node\n{\n    int x;\n    int y;\n    bool f;\n}e[MM];\ninline int Find(int x)\n{\n    if(x==fa[x]) return x;\n    else return fa[x]=Find(fa[x]);\n}\ninline void merge(int x,int y)\n{\n    int fx=Find(x),fy=Find(y);\n    fa[fx]=fy;\n    return ;\n}\ninline void add(int x,int y)\n{\n    ver[++tot]=y;\n    nxt[tot]=head[x];\n    head[x]=tot;\n}//\u94fe\u5f0f\u524d\u5411\u661f\u5efa\u56fe \ninline void dfs(int x,int y)\n{\n    ans[x]=y;\n    for(int i=head[x];i;i=nxt[i])\n    {\n        int v=ver[i];\n        if(!ans[v])\n        {\n            dfs(v,x);\n        }\n    }\n}//\u5bfb\u627e\u8def\u5f84 \ninline int StarMaster()\n{\n    n=read(),m=read();\n    for(int i=1;i<=n;i++)\n    {\n        fa[i]=i;\n    }\n    for(int i=1;i<=m;i++)\n    {\n        e[i].x=read(),e[i].y=read();\n        if(Find(e[i].x)==Find(e[i].y)) continue;\n        add(e[i].x,e[i].y);add(e[i].y,e[i].x);\n        merge(e[i].x,e[i].y);\n        e[i].f=true;\n    }\n//\u5efa\u7acb\u521d\u59cb\u6811\uff08\u65e0\u73af\uff09\uff0c\u4e4b\u540e\u904d\u5386\u5269\u4f59\u7684\u8fb9\uff0c\u662f\u5426\u80fd\u51fa\u73b0\u73af \n    for(int i=1;i<=m;i++)\n    {\n        if(e[i].f) continue;\n        if(ans[e[i].x]) continue;//\u5982\u679c\u5df2\u51fa\u73b0\u5728\u8def\u5f84\u91cc\u5219\u4e0d\u8fdb\u884cDFS \n        dfs(e[i].x,e[i].y); \n    }\n//dfs\u5373\u4e3a\u627e\u73af\u7684\u8fc7\u7a0b \n    for(int i=1;i<=n;i++)\n    {\n        if(!ans[i])\n        {\n            cout<<\"NIE\"<<'\\n';\n            return 0;\n        }//\u4f46\u51e1\u6709\u4e00\u4e2a\u70b9\u6ca1\u6709\u88ab\u904d\u5386\u5230\uff0c\u5219\u8bf4\u660e\u65e0\u73af\u5373\u65e0\u89e3 \n    }\n    cout<<\"TAK\"<<'\\n';\n    for(int i=1;i<=n;i++)\n    {\n        cout<<ans[i]<<'\\n';\n    }\n    return 0;\n}\n\nint Star_Master=StarMaster();\nsigned main(){;}\n```\n\n------",
        "postTime": 1626176479,
        "uid": 294561,
        "name": "theStarMaster",
        "ccfLevel": 4,
        "title": "P3465"
    },
    {
        "content": "#### \u9898\u76ee\u5927\u610f\n\n\n------------\n\u7ed9\u5b9a\u4e00\u5f20\u6709 $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u95ee\u80fd\u5426\u901a\u8fc7\u5c06\u5176\u4e2d\u7684\u65e0\u5411\u8fb9\u6539\u4e3a\u6709\u5411\u8fb9\u4f7f\u5f97\u6574\u5f20\u56fe\u4e0a\u7684\u70b9\u5168\u90e8\u5165\u5ea6\u4e3a $1$\uff0c\u5165\u5ea6\u53ea\u8ba1\u7b97**\u6709\u5411\u8fb9**\u3002\n\n#### \u601d\u8def\u5206\u6790\n\n\n------------\n\n\u6ce8\u610f\u9898\u76ee\u4e2d\u5165\u5ea6\u53ea\u8ba1\u7b97\u6709\u5411\u8fb9\u8fd9\u4e00\u6761\u4ef6\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u9700\u8981\u5728\u9898\u76ee\u4e2d\u9009\u51fa\u4e00\u4e9b\u65e0\u5411\u8fb9\u6539\u4e3a\u6709\u5411\u8fb9\uff0c\u5176\u4ed6\u5269\u4f59\u7684\u76f4\u63a5\u5220\u9664\u5373\u53ef\u3002\n\n\n![\u6837\u4f8b1](https://cdn.luogu.com.cn/upload/image_hosting/qtcf5aat.png)\n\n\u4e0a\u56fe\u662f\u9898\u76ee\u4e2d\u7ed9\u51fa\u7684\u6837\u4f8b $1$ \u5728\u64cd\u4f5c\u524d\u7684\u6837\u5b50\u3002\n\n\u4f3c\u4e4e\u5e76\u4e0d\u662f\u5f88\u597d\u6784\u9020\u3002\u4ed4\u7ec6\u9605\u8bfb\u9898\u5e72\uff0c\u8003\u8651\u5982\u4f55\u6784\u9020\u4e00\u5f20\u56fe\u6ee1\u8db3\u5165\u5ea6\u4e3a $1$\u3002\n\n\u8003\u8651\u5c06\u4e00\u5f20\u56fe\u9000\u5316\u4e3a\u4e00\u68f5\u6811\uff0c\u8fd9\u68f5\u6811\u9664\u4e86\u6839\u8282\u70b9\u4e4b\u5916\u6240\u6709\u7684\u8fb9\u90fd\u6ee1\u8db3\u9898\u8bbe\u8981\u6c42\uff0c\u90a3\u4e48\u5982\u4f55\u5904\u7406\u6839\u8282\u70b9\u5462\uff1f\n\n\u8003\u8651\u5c06\u4efb\u610f\u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9\u5411\u6839\u8282\u70b9\u8fde\u4e00\u6761**\u8fd4\u7956\u8fb9**\uff0c\u7ecf\u8fc7\u4e0a\u8ff0\u64cd\u4f5c\u5c31\u53ef\u4ee5\u6784\u9020\u51fa\u4e00\u5f20\u7b26\u5408\u9898\u610f\u7684\u56fe\uff0c\u6837\u4f8b $1$ \u5728\u7ecf\u8fc7\u5904\u7406\u540e\u5373\u4e3a\u4e0b\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/tuzrjn9w.png)\n\n\u6240\u4ee5\u53ea\u9700\u8981\u5904\u7406\u51fa\u5982\u56fe\u4e2d $3 \u2192 1 \u2192 2$ \u8fd9\u6837\u7684\u73af\u3002\u7528\u5e76\u67e5\u96c6\u5904\u7406\u51fa**\u8fd4\u7956\u8fb9**\uff0c\u5373\u5728\u56fe\u4e0a\u4efb\u610f\u627e\u51fa\u4e00\u68f5\u751f\u6210\u6811\uff0c\u518d\u627e\u51fa\u4e00\u6761\u8fde\u63a5\u7740\u6811\u4e0a\u4e24\u4e2a\u9876\u70b9\u7684\u8fb9\u3002\n\n\u5728\u6811\u4e0a ```DFS``` \u4e00\u904d\u627e\u51fa\u6240\u6709\u9876\u70b9\u7684\u7236\u8282\u70b9\uff0c\u6700\u540e\u8f93\u51fa\u7b54\u6848\u5373\u53ef\u3002\n\n#### \u4ee3\u7801\u5b9e\u73b0\n\n\n------------\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<cstdlib>\n\nusing namespace std;\nconst int N = 2000010;\n\ninline int read(){\n    int x=0,f=1;\n    char ch=getchar();\n    for(;!isdigit(ch);ch=getchar()) if(ch=='-') f=-1;\n    for(; isdigit(ch);ch=getchar()) x=(x<<3)+(x<<1)+ch-'0';\n    return x*f;\n}\n\nstruct node{\n\tint nxt,to;\n}edge[N<<1]; \nint cnt,head[N<<1],dis[N<<1];\nvoid add(int x,int y){\n\tedge[++cnt].to = y;\n\tedge[cnt].nxt = head[x];\n\thead[x] = cnt;\n}\nint f[N],fa[N];\nint find(int x){\n\tif(f[x] == x) return x;\n\telse return f[x] = find(f[x]);\n}\nvoid dfs(int now,int fath){\n\tfa[now] = fath;\n\tfor(int i=head[now];i;i=edge[i].nxt){\n\t\tif(!fa[edge[i].to])\n\t\t\tdfs(edge[i].to,now);\n\t}\n\treturn;\n}\nint x[N] , y[N];\nbool vis[N];\nint main(){\n\tint n = read() , m = read();\n\tfor(int i=1;i<=m;i++){\n\t\tx[i] = read() , y[i] = read();\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tf[i] = i;\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tint fx = find(x[i]) , fy = find(y[i]);\n\t\tif(fx != fy){\n\t\t\tadd(x[i],y[i]); add(y[i],x[i]);\n\t\t\tf[fy] = fx;\n\t\t\tvis[i] = true;\n\t\t}\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tif(!vis[i] && find(x[i]) == find(y[i]) && !fa[x[i]]){\n\t\t\tdfs(x[i],y[i]);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(!fa[i]){\n\t\t\tprintf(\"NIE\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"TAK\\n\");\n\tfor(int i=1;i<=n;i++){\n\t\tprintf(\"%lld\\n\",fa[i]);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1647776338,
        "uid": 335615,
        "name": "0xFF",
        "ccfLevel": 0,
        "title": "P3465"
    },
    {
        "content": "## P3465\n\n\u5927\u6982\u662f\u4e00\u9053~~\u51f8\u8f6e\u5c0f\u6c34\u9898~~\uff1f \u987a\u4fbf\u7eaa\u5ff5\u4e00\u4e0b $pecky$ ~~\u795e\u7287~~ (\u63d0\u4f9b\u7684\u601d\u8def\n\n---\n\n\u4f7f\u6bcf\u4e00\u4e2a\u70b9\u7684\u5165\u5ea6\u4e3a $1$ \uff08\u5728\u53ea\u8003\u8651\u6709\u5411\u8fb9\u7684\u60c5\u51b5\u4e0b\n\n\u7136\u540e \u53ea\u8981 \u6709\u73af \u5c31\u6210\u7acb ... \u601d\u8def\u8fd9\u6837\u5927\u6982\u5c31\u7ed3\u675f\u4e86\n\n\u4ee3\u7801\u4e3b\u8981\u5728 :\n\n$1.$ \u627e\u73af : \u53ef\u7528\u5e76\u67e5\u96c6 \u5728\u4e24\u70b9\u8fde\u8fb9\u65f6 \u5224\u65ad\u4e00\u4e0b\u662f\u5426\u5df2\u7ecf\u5728\u540c\u4e00\u96c6\u5408\u4e2d\uff0c \u5982\u679c\u5df2\u7ecf\u5728\u4e00\u4e2a\u96c6\u5408\u4e2d \u518d\u8fde\u4e00\u6761\u8fb9 \u5fc5\u7136\u6784\u6210\u4e00\u4e2a\u73af (\u6ce8\u610f\u56fe\u4e0d\u8fde\u901a\u8981\u627e\u591a\u4e2a\u73af)\n\n```cpp\nfor(int i = 1;i <= m;i++) {\n\t\tint u, v;\n\t\tscanf(\"%d%d\", &u, &v);\n\t\tadd(u, v); add(v, u);\n\t\tint fx = find(u), fy = find(v);\n    \t//\u6ce8\u610f\u5728\u8fd9\u91cc\n\t\tif(fx == fy) s[++s[0]] = u; //#4789\u7684\u70b9 (\u591a\u4e2a\u73af \n    \n\t\tf[fx] = fy;\n\t}\n```\n\n\n\n$2.\\ dfs:\\ $ \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8fde\u901a\u56fe\uff0c \u6211\u4eec\u53ea\u9700\u8981\u9009\u53d6\u5176\u4e2d\u4e00\u4e2a\u73af\u4efb\u610f\u4e00\u70b9\u4f5c\u4e3a\u8d77\u70b9\u5fc5\u7136\u80fd\u627e\u5230\u4e00\u6761\u8def\u5f84\u4f7f\u6bcf\u4e2a\u70b9\u5165\u5ea6\u4e3a\u4e00 (\u6ce8\u610f\u662f\u53cc\u5411\u8fb9\u5efa\u56fe \u8981\u5224\u4e00\u4e0b\u4e0d\u8981\u8fde\u6210\u53cc\u5411\u8fb9)\n\n```cpp\nvoid dfs(int u, int ss) {\n\tfor(int i = head[u]; i;i = nxt[i]) {\n\t\tint v = to[i]; \n        \n        //\u6ce8\u610f\u5728\u8fd9\u91cc\n\t\tif(ans[v] || ans[u] == v/*#5#6\u7684\u70b9*/ ) continue;\n        \n\t\tans[v] = u;\n\t\tif(v == ss) continue;\n\t\tdfs(v, ss);\n\t}\n}\n```\n\n \n\n$3.$ \u4e5f\u7b97\u4e00\u4e2a\u5c0f\u6ce8\u610f\u5427 \uff1a \u6574\u5f20\u56fe\u4e0d\u8fde\u901a \u8981\u4fdd\u8bc1\u6bcf\u4e2a\u8fde\u901a\u56fe\u90fd\u6709\u73af\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 2e5 + 10;\nint n, m;\nint nxt[maxn << 1], to[maxn << 1], head[maxn], cnt;\nvoid add(int u, int v) {\n\tto[++cnt] = v;\n\tnxt[cnt] = head[u];\n\thead[u] = cnt;\n}\nint f[maxn], s[maxn];\nint find(int x) {\n\treturn x == f[x] ? x : find(f[x]);\n}\nint ans[maxn], p[maxn];\nvoid dfs(int u, int ss) {\n\tfor(int i = head[u]; i;i = nxt[i]) {\n\t\tint v = to[i];\n\t\tif(ans[v] || ans[u] == v/*#5#6\u7684\u70b9*/ ) continue;\n\t\tans[v] = u;\n\t\tif(v == ss) continue;\n\t\tdfs(v, ss);\n\t}\n}\nint main() {\n\tscanf(\"%d%d\", &n, &m);\n\tfor(int i = 1;i <= n;i++) f[i] = i;\n\tfor(int i = 1;i <= m;i++) {\n\t\tint u, v;\n\t\tscanf(\"%d%d\", &u, &v);\n\t\tadd(u, v); add(v, u);\n\t\tint fx = find(u), fy = find(v);\n\t\tif(fx == fy) s[++s[0]] = u; //#4789\u7684\u70b9 (\u591a\u4e2a\u73af \n\t\tf[fx] = fy;\n\t}\n\tif(!s) {\n\t\tprintf(\"NIE\\n\");\n\t\treturn 0;\n\t}\n\tfor(int i = 1;i <= s[0];i++) \n\t\tif(!ans[s[i]])\n\t\t\tdfs(s[i], s[i]);\n    \n    //\u6ce8\u610f\u5728\u8fd9\u91cc\n\tfor(int i = 1;i <= n;i++) {\n\t\tif(ans[i] == 0) {\n\t\t\tprintf(\"NIE\\n\"); //#2#3\u7684\u70b9 \n\t\t\treturn 0; \n\t\t}\n\t}\n    \n\tprintf(\"TAK\\n\");\n\tfor(int i = 1;i <= n;i++) printf(\"%d\\n\", ans[i]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1637065133,
        "uid": 443844,
        "name": "_cnk",
        "ccfLevel": 0,
        "title": "P3465\u9898\u89e3"
    },
    {
        "content": "## \u5e76\u67e5\u96c6\n\n\u89c2\u5bdf\u9898\u76ee\u53d1\u73b0\uff1a\n\n> \u95ee\u80fd\u5426\u5c06\u5176\u4e2d\u7684 __\u4e00\u4e9b\u8fb9__ \u6539\u6210\u6709\u5411\u8fb9\n\n\u610f\u5473\u7740\u53ea\u9700\u8981\u6784\u9020\u4e00\u4e2a\u6ee1\u8db3\u9898\u610f\u7684\u5b50\u56fe\u5373\u53ef\u3002\u90a3\u4ec0\u4e48\u6837\u7684\u56fe\u6ee1\u8db3\u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\u90fd\u4e3a 1 \u5462\uff1f\u9996\u5148\u5f88\u5bb9\u6613\u60f3\u5230\u4e00\u68f5\u6811\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/14o363s6.png)\n\n\u6811\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u5f80\u5b83\u7684\u7236\u8282\u70b9\u8fde\u6709\u5411\u8fb9\uff0c\u9664\u4e86\u6839\u8282\u70b9\u4ee5\u5916\u7684\u8282\u70b9\u5165\u5ea6\u90fd\u4e3a 1\u3002\u90a3\u6839\u8282\u70b9\u600e\u4e48\u529e\u5462\uff1f\u518d\u627e\u4e00\u6761\u6307\u5411\u6839\u8282\u70b9\u7684\u8fb9\u5373\u53ef\uff0c\u6bd4\u5982\u8fd9\u6837\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/mhakbuhq.png)\n\n\u53ef\u4ee5\u53d1\u73b0\u6700\u7ec8\u6784\u6210\u4e86\u4e00\u68f5\u57fa\u73af\u5916\u5411\u6811\uff0c\u73af\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u6ee1\u8db3\u5165\u5ea6\u4e3a 1\uff0c\u6ee1\u8db3\u9898\u610f\u3002\u7531\u4e8e\u9898\u76ee\u4f7f\u53ea\u8003\u8651\u6709\u5411\u8fb9\u7684\u60c5\u51b5\uff0c\u5269\u4e0b\u7684\u8fb9\u5ffd\u7565 qwq\n\n\u73b0\u5728\u53ea\u9700\u8981\u628a\u8fd9\u4e2a\u73af\u627e\u51fa\u6765\u3002\u53ef\u4ee5 dfs \u627e\u8fd4\u7956\u8fb9\uff0c\u4e5f\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\uff0c\u5148\u4efb\u610f\u627e\u4e00\u68f5\u751f\u6210\u6811\uff0c\u518d\u627e\u4e00\u6761\u8fde\u63a5\u7740\u6811\u4e0a\u4e24\u4e2a\u8282\u70b9\u7684\u8fb9\u5373\u53ef\u3002\n\n\u6700\u540e\u8bb0\u5f55\u7b54\u6848\uff0c\u4ee5\u627e\u5230\u7684\u8fb9\u7684\u7aef\u70b9\u4e3a\u8d77\u70b9\u5411\u4e0b\u4e00\u8fb9 dfs \u4e00\u8fb9\u8bb0\u5f55\u5373\u53ef\uff0c\u56e0\u4e3a\u8981\u6c42\u8f93\u51fa\u5165\u5ea6\u662f\u7531\u54ea\u4e2a\u70b9\u51fa\u53d1\u7684\u8fb9\u6240\u5f97\u5230\u7684\uff0c\u6240\u6709\u7b54\u6848\u5373\u4e3a\u7236\u4eb2\u8282\u70b9\u3002\n\n```cpp\n#include<cstdio>\nusing namespace std;\nconst int N=2e6+10;\nint read()\n{\n\tint s=0;char c=getchar();\n\twhile(c<'0'||c>'9') c=getchar();\n\twhile(c>='0'&&c<='9') s=s*10+c-'0',c=getchar();\n\treturn s;\n}struct edge\n{\n\tint nxt,to;\n}a[N*2];\nint t,h[N*2],dis[N*2];\nvoid build(int x,int y) {a[++t]=edge{h[x],y},h[x]=t;}\n//\u94fe\u5f0f\u524d\u5411\u661f\u57fa\u672c\u64cd\u4f5c\n\n\n//--------------------------------------------------------- \n\nint f[N],fa[N];\nint find(int x) {return x==f[x]?x:f[x]=find(f[x]);}//\u5e76\u67e5\u96c6\u627e\u7238\u7238\u64cd\u4f5c\nvoid dfs(int now,int last)//dfs\u66f4\u65b0\u7b54\u6848\n{\n\tfa[now]=last;//\u7b54\u6848\u662f\u7236\u4eb2\u8282\u70b9\n\tfor(int i=h[now];i;i=a[i].nxt)\n\t\tif(!fa[a[i].to]) dfs(a[i].to,now);//\u6ca1\u66f4\u65b0\u7684\u4e0b\u53bb\u66f4\u65b0\n\treturn ;\n}\nint n,m,i,j,x[N],y[N],tag[N];\nint main()\n{\n\tn=read(),m=read();\n    for(i=1;i<=m;i++) x[i]=read(),y[i]=read();\n    for(i=1;i<=n;i++) f[i]=i;//\u521d\u59cb\u5316\n    for(i=1;i<=m;i++) \n\t{\n\t\tint p=find(x[i]),q=find(y[i]);\n        if(p!=q) build(x[i],y[i]),build(y[i],x[i]),f[q]=p,tag[i]=1;//\u4e0d\u5728\u540c\u4e00\u68f5\u6811\u91cc\uff0c\u5efa\u8fb9\uff0c\u6539\u7238\u7238\uff0c\u6807\u8bb0\u6811\u8fb9\n    }//\u8fd9\u91cc\u5c31\u628a\u68ee\u6797\u5efa\u597d\u4e86\u3002\n    for(i=1;i<=m;i++)\n    \tif(!tag[i]&&find(x[i])==find(y[i])&&!fa[x[i]])//\u975e\u6811\u8fb9\uff0c\u5728\u540c\u4e00\u68f5\u6811\u5185\uff0c\u4e14\u672a\u66f4\u65b0\u7b54\u6848\n\t    \tdfs(x[i],y[i]);//dfs\u66f4\u65b0\n    for(i=1;i<=n;i++)\n        if(!fa[i]) {puts(\"NIE\"); return 0;}//\u8fd8\u6709\u6ca1\u66f4\u65b0\u8fc7\u7684\uff0c\u8f93\u51faNIE\n    puts(\"TAK\");\n    for(i=1;i<=n;i++) printf(\"%d\\n\",fa[i]);//\u8f93\u51fa\u7b54\u6848\u3002\n    return 0;\n}\n```\n",
        "postTime": 1636894353,
        "uid": 54372,
        "name": "A_\u0110ark_Horcrux",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3465 \u3010[POI2008]CLO-Toll\u3011"
    },
    {
        "content": "\u8981\u6c42\u6bcf\u4e2a\u70b9\u4e00\u4e2a\u5165\u5ea6\uff0c\u5219\u5f62\u6210\u73af\u5957\u6811\u3002\n\n\n\u6c42\u51fa\u8054\u901a\u5757\u7684\u4efb\u610f\u4e00\u4e2a\u751f\u6210\u6811\uff0c\u53ea\u8981\u8fd8\u6709\u73af\u5c31\u597d\u4e86\u3002(\u770b\u4e00\u4e0b\u662f\u5426\u5b58\u5728\u8fd4\u7956\u8fb9\u5c31\u597d\u4e86)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define rep(i,l,r) for(int i=l;i<=r;++i)\n#define gc (c=getchar())\nint read()\n{\n    char c;\n    while(gc<'0');\n    int x=c-'0';\n    while(gc>='0')x=x*10+c-'0';\n    return x;\n}\nconst int N=1e5+5,M=2e5+5;\nint t[N];\nstruct edge\n{\n    int to,next;\n};\nedge l[M*2];int e;\n//int du[N],q[N];\nint fa[N],ansfa[N];//bool vis[N]; \n\nbool in[N];\nint havey,havex;\nnamespace DFS\n{\nint *fa;\nvoid dfs(int x)\n{\n    in[x]=1;\n    for(int i=t[x];i;i=l[i].next)\n    {\n        int y=l[i].to;\n        if(!fa[y]){fa[y]=x;dfs(y);}\n        else\n        if(!in[y]){havey=y;havex=x;}\n    }\n    in[x]=0;\n}\n};\n#define dfs(x,f) {DFS::fa=f;DFS::dfs(x);}\n\nint main()\n{\n    //freopen(\"1.in\",\"r\",stdin);freopen(\"1.out\",\"w\",stdout);\n    int n=read(),m=read();\n    while(m--)\n    {\n        int x=read(),y=read();\n        l[++e]=(edge){y,t[x]};t[x]=e;\n        l[++e]=(edge){x,t[y]};t[y]=e;\n    //    ++du[x];++du[y];\n    }\n    rep(x,1,n)\n    if(!fa[x])\n    {\n        havex=0;\n        fa[x]=-1;\n        dfs(x,fa);\n        if(!havex)\n        {\n            puts(\"NIE\");\n            exit(0);\n        }\n        \n        for(int i=havey;i!=havex;i=fa[i])ansfa[i]=fa[i];\n        ansfa[havex]=havey; \n        for(int i=havey;i!=-1;i=fa[i])\n            dfs(i,ansfa);\n    }\n    puts(\"TAK\");\n    rep(x,1,n)printf(\"%d\\n\",ansfa[x]);\n}\n```",
        "postTime": 1515985783,
        "uid": 9168,
        "name": "kczno1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3465 \u3010[POI2008]CLO-Toll\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u6709 $n$ \u4e2a\u70b9\u548c $m$ \u6761\u53cc\u5411\u8fb9\u7684\u6709\u5411\u56fe\uff0c\u95ee\u80fd\u5426\u5c06\u5176\u4e2d\u7684\u4e00\u4e9b\u8fb9\u6539\u6210\u6709\u5411\u8fb9\uff0c\u4f7f\u5f97\u53ea\u8003\u8651\u6709\u5411\u8fb9\u7684\u60c5\u51b5\u4e0b\u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\u90fd\u4e3a $1$\u3002\n\n## \u601d\u8def\u5206\u6790\n\n\u56e0\u4e3a\u53ea\u8003\u8651\u6709\u5411\u8fb9\uff0c\u6240\u4ee5\u53e6\u5916\u7684\u4ec0\u4e48\u90fd\u4e0d\u9700\u8981\u7279\u522b\u8003\u8651\u3002\n\n\u90a3\u4e48\u8fd9\u9898\u5c31\u5f88\u7b80\u5355\u4e86\uff1a\n\n\u9996\u5148\u5728\u539f\u56fe\u4e0a\u751f\u6210\u4e00\u68f5\u6811\uff0c\u539f\u56fe\u6709\u53ef\u80fd\u4e0d\u8054\u901a\uff0c\u6240\u4ee5\u53ef\u80fd\u6709\u597d\u51e0\u68f5\u6811\u3002\u6b64\u6b65\u4f7f\u7528 `Kruskal`\u3002\n\n\u7136\u540e\u5bf9\u6bcf\u4e00\u6761\u4e0d\u5728\u751f\u6210\u6811\u4e0a\u4e14\u4e24\u7aef\u5728\u540c\u4e00\u4e2a\u751f\u6210\u6811\u4e0a\u7684\u8fb9\u679a\u4e3e\u904d\u5386\uff0c\u5e76\u6807\u8bb0\u7b54\u6848\u3002\n\n\u6700\u540e\u626b\u4e00\u904d\u7b54\u6848\uff0c\u5982\u679c\u6709\u6ca1\u6709\u88ab\u6807\u8bb0\u5230\u7684\u5c31\u662f `NIE`\uff0c\u5426\u5219\u8f93\u51fa `TAK` \u5e76\u4e14\u8f93\u51fa\u7b54\u6848\u3002\n\n## \u5b8c\u6574\u7b54\u6848\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\n#define debug fout << \"Debug: \" << __LINE__ << endl;\n\nusing namespace std;\n\nnamespace FastIO\n{\n    struct instream\n    {\n        int base = 10;\n\n        friend instream &operator>>(instream &in, int &num)\n        {\n            int flag = 1;\n            int ans = 0;\n            char ch = getchar();\n            while (ch < '0' || ch > '9')\n            {\n                if (ch == '-')\n                {\n                    flag = -flag;\n                }\n                ch = getchar();\n            }\n\n            while (ch >= '0' && ch <= '9')\n            {\n                ans = ans * in.base + (ch - '0');\n                ch = getchar();\n            }\n            num = ans * flag;\n            return in;\n        }\n    };\n\n    struct outstream\n    {\n        template<typename _CharT, typename _Traits = char_traits<_CharT>>\n        struct typ {\n            typedef basic_ostream<_CharT, _Traits>& (* end) (basic_ostream<_CharT, _Traits>&);\n        };\n\n        int base = 10;\n\n        friend outstream &operator<<(outstream &out, int num)\n        {\n            if (num < 0)\n            {\n                putchar('-');\n                num = -num;\n            }\n            if (num >= 10)\n            {\n                out << num / 10;\n            }\n            putchar(num % 10 + '0');\n            return out;\n        }\n\n        friend outstream &operator<<(outstream &out, const char * s) {\n            printf(\"%s\", s);\n            return out;\n        }\n\n        friend outstream &operator<<(outstream &out, string s) {\n            cout << s;\n            return out;\n        }\n\n        friend outstream &operator<<(outstream &out, typ<char>::end e) {\n            puts(\"\");\n            return out;\n        }\n    };\n\n    instream fin;\n    outstream fout;\n}\n\nusing namespace FastIO;\n\nconst int maxn = 2e5 + 1;\nconst int maxm = 7e5 + 1;\nconst int maxd = 50;\n\nstruct edge {\n    int from, to, next;\n};\n\nstruct tree {\n    int n, cnt;\n    int head[maxn];\n    edge e[maxm];\n    int ans[maxn];\n    \n    void add_edge(int u, int v) {\n        e[++cnt] = (edge) {u, v, head[u]};\n        head[u] = cnt;\n    }\n    \n    void dfs(int u, int fa) {\n    \tans[u] = fa;\n    \tfor (int i = head[u]; i; i = e[i].next) {\n    \t\tint v = e[i].to;\n    \t\tif (!ans[v]) {\n    \t\t\tdfs(v, u);\n\t\t\t}\n\t\t}\n\t}\n};\n\nstruct dsu {\n    int fa[maxn];\n\n    void init(int n) {\n        for (int i = 1; i <= n; i++) {\n            fa[i] = i;\n        }\n    }\n    \n    int find(int x) {\n        if (fa[x] == x) {\n            return x;\n        }\n        return fa[x] = find(fa[x]);\n    }\n};\n\ntree tr;\n\nstruct graph {\n    int n, m, cnt;\n    int head[maxn];\n    edge e[maxm];\n    bool intree[maxm];\n    dsu d;\n\n    void add_edge(int u, int v) {\n        e[++cnt] = (edge) {u, v, head[u]};\n        head[u] = cnt;\n    }\n\n    void init() {\n        fin >> n >> m;\n        for (int i = 1; i <= m; i++) {\n        \tint u, v;\n            fin >> u >> v;\n            add_edge(u, v);\n        }\n    }\n    \n    void tree() {\n        d = dsu();\n        d.init(n);\n        tr.n = n;\n        for (int i = 1; i <= cnt; i++) {\n        \tint u = d.find(e[i].from);\n            int v = d.find(e[i].to);\n            if (u != v) {\n                d.fa[u] = v;\n                intree[i] = true;\n                tr.add_edge(e[i].from, e[i].to);\n                tr.add_edge(e[i].to, e[i].from);\n            }\n\t\t}\n\t}\n    \n    bool judge() {\n    \tfor (int i = 1; i <= cnt; i++) {\n    \t\tint u = e[i].from;\n    \t\tint v = e[i].to;\n    \t\tif (!intree[i] && d.find(u) == d.find(v) && !tr.ans[u]) {\n    \t\t\ttr.dfs(u, v);\n\t\t\t}\n\t\t}\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tif (!tr.ans[i]) return false;\n\t\t}\n\t\treturn true;\n\t}\n};\n\ngraph g;\n\nsigned main() {\n    g.init();\n    g.tree();\n    bool flg = g.judge();\n    if (flg) {\n    \tfout << \"TAK\" << endl;\n    \tfor (int i = 1; i <= tr.n; i++) {\n    \t\tfout << tr.ans[i] << endl;\n\t\t}\n\t} else {\n\t\tfout << \"NIE\" << endl;\n\t}\n    \n    return 0;\n}\n```",
        "postTime": 1652846569,
        "uid": 362750,
        "name": "TernaryTree",
        "ccfLevel": 0,
        "title": "P3465 [POI2008]CLO-Toll"
    },
    {
        "content": "\u9996\u5148\u6211\u4eec\u77e5\u9053 $n$ \u4e2a\u70b9\u80af\u5b9a\u9700\u8981 $n$ \u6761\u4e0d\u540c\u7684\u8fb9\u624d\u80fd\u8ba9\u5728\u628a\u8fb9\u5b9a\u5411\u540e\u505a\u5230\u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\u4e3a $1$\u3002\u95ee\u9898\u5728\u4e8e\u600e\u4e48\u9009\u8fd9 $n$ \u6761\u8fb9\u3002\n\n\u5728\u8003\u8651\u8fd9\u79cd\u60c5\u51b5\u524d\uff0c\u6211\u4eec\u5148\u8003\u8651\u56fe\u9000\u5316\u6811\u7684\u60c5\u51b5\u3002\n\n\u5047\u8bbe\u6709\u8fd9\u6837\u4e00\u4e2a $5$ \u4e2a\u70b9\u7684\u6811\uff1a\n\n![Pic1](https://cdn.luogu.com.cn/upload/image_hosting/uiwuit9c.png)\n\n\u6211\u4eec\u89c2\u5bdf\u540e\u53d1\u73b0\uff0c\u65e0\u8bba\u6211\u4eec\u4ee5\u54ea\u4e00\u4e2a\u8282\u70b9\u4e3a\u6839\uff0c\u628a\u8fb9\u5b9a\u5411\u4e3a\u4ece\u7236\u4eb2\u8282\u70b9\u6307\u5411\u5b50\u8282\u70b9\uff0c**\u6700\u540e\u53ea\u6709\u6839\u7684\u5165\u5ea6\u662f $0$**\u3002\n\n\u90a3\u6211\u4eec\u5c31\u9700\u8981\u518d\u641e\u4e00\u6761\u8fb9\u51fa\u6765\uff0c\u628a\u8fd9\u6761\u8fb9\u6307\u5411\u6839\uff0c\u4f7f\u6839\u7684\u5165\u5ea6\u4e3a $1$\u3002\n\n![Pic2](https://cdn.luogu.com.cn/upload/image_hosting/95r1wv7r.png)\n\n\u8fdb\u4e00\u6b65\u8003\u8651\uff0c\u6211\u4eec\u53d1\u73b0\u6dfb\u52a0\u7684\u8fd9\u4e00\u6761\u8fb9\u6240\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u90fd\u5fc5\u987b\u5728\u540c\u4e00\u68f5\u6811\u4e0a\u3002\u5982\u679c\u4e0d\u5728\u540c\u4e00\u68f5\u6811\u4e0a\uff0c**\u90a3\u4e48\u8fd9\u6761\u8fb9\u4e00\u5b9a\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u6811\u8fb9\u628a\u628a\u4e24\u4e2a\u8054\u901a\u5757\u8fde\u8d77\u6765\u6784\u6210\u4e00\u4e2a\u66f4\u5927\u7684\u6811**\u3002\u4e8e\u662f\u6211\u4eec\u5f97\u51fa\u4e00\u4e2a\u7b80\u8981\u7684\u601d\u8def\uff1a\u6c42\u751f\u6210\u6811\uff0c\u7136\u540e\u627e\u4e00\u6761\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u90fd\u5728\u540c\u4e00\u4e2a\u751f\u6210\u6811\u4e0a\u7684\u8fb9\uff0c\u628a\u8fd9\u6761\u8fb9\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u5176\u4e2d\u4e00\u4e2a\u5f53\u4f5c\u6839\uff0c\u904d\u5386\u6574\u4e2a\u6811\u7ed9\u8fb9\u5b9a\u5411\uff0c\u8ba1\u7b97\u7b54\u6848\u3002\n\n\u4e8e\u662f\u6211\u4eec\u63a8\u5e7f\u5230\u56fe\u4e0a\u3002\u9996\u5148\u6211\u4eec\u6ce8\u610f\u5230\uff0c**\u6574\u5f20\u56fe\u53ef\u80fd\u4e0d\u8fde\u901a**\uff01\u90a3\u4e48\u6211\u4eec\u8003\u8651\u4f7f\u7528 **\u5e76\u67e5\u96c6** \u7ef4\u62a4\u8054\u901a\u6027\uff0c\u8003\u8651\u5bf9\u6240\u6709\u7684\u8fb9\u626b\u63cf\u4e24\u6b21\u3002\n\n\u5148\u7528 $O(m)$ \u7684\u65f6\u95f4\u626b\u4e00\u904d\u5168\u90e8\u7684\u8fb9\uff0c\u5982\u679c\u8fb9\u6240\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u4e0d\u8054\u901a\uff0c\u5c31\u8fde\u63a5\u8fd9\u6761\u8fb9\uff0c**\u5e76\u6807\u8bb0\u8fd9\u6761\u8fb9**\u3002\u80fd\u8fde\u7684\u8fb9\u5168\u8fde\u5b8c\u540e\uff0c\u6574\u4e2a\u56fe\u4f1a\u6210\u4e00\u4e2a\u201c\u68ee\u6797\u201d\u7684\u72b6\u6001\u3002\u6211\u4eec\u8bb0\u8fd9\u4e2a\u68ee\u6797\u4e2d\u6709 $cnt$ \u68f5\u6811\u3002\n\n\u8fd9\u65f6\u6211\u4eec\u518d\u7528 $O(m)$ \u7684\u65f6\u95f4\u626b\u4e00\u904d\u5168\u90e8\u7684\u8fb9\uff0c\u7ed9\u201c\u68ee\u6797\u201d\u4e2d\u7684\u6bcf\u4e2a\u6811\u627e\u5230\u5b83\u9700\u8981\u7684\u6307\u5411\u6839\u7684\u90a3\u6761\u8fb9\u3002\u5177\u4f53\u5730\uff0c\u5c31\u662f\u7ed9\u6bcf\u4e2a\u6811\u627e **\u4e00\u6761\u6ca1\u6709\u88ab\u6253\u6807\u8bb0\u7684\u8fb9**\uff0c\u8ba9\u8fd9\u6761\u8fb9\u6307\u5411\u6839\uff0c\u5e76\u4ece\u8fd9\u4e2a\u6839\u5f00\u59cb\u904d\u5386\u6574\u4e2a\u6811\u8ba1\u7b97\u6bcf\u4e2a\u8282\u70b9\u7684\u7b54\u6848\u3002\u5982\u679c\u6b64\u65f6\u627e\u4e0d\u5230 $cnt$ \u6761\u8fb9\u80fd\u5bf9\u5e94\u68ee\u6797\u4e2d\u7684 $cnt$ \u68f5\u6811\uff0c\u65e0\u89e3\u3002\n\n\u4e8e\u662f\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86\u3002\u628a\u4e0a\u6587\u601d\u8def\u8f6c\u5316\u6210\u4ee3\u7801\u5b9e\u73b0\uff0c\u5f97\u5230\u4ee5\u4e0b\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#define ll long long\n#define rgt register int\nusing namespace std;\n\nconst int mxn = 2e5+5;\n\nint fa[mxn],ans[mxn];\nint ai[mxn],bi[mxn];\nbool ci[mxn],get_rt[mxn];\nint n,m,tot,rt,cnt;\nint lst[mxn],to[mxn<<1],nxt[mxn<<1];\n\nint fd(int x){\n    return x==fa[x]?x:fa[x]=fd(fa[x]);\n}\n\ninline void add(int u,int v){\n    tot++;\n    to[tot]=v;\n    nxt[tot]=lst[u];\n    lst[u]=tot;\n}\n\ninline int rd(){\n    int x=0;\n    bool ntv=false;\n    char c=getchar();\n    while(c!='-'&&(c<'0'||c>'9'))\n        c=getchar();\n    if(c=='-')\n        ntv=true;\n    else\n        x=(c^48);\n    c=getchar();\n    while(c>='0'&&c<='9'){\n        x=x*10+(c^48);\n        c=getchar();\n    }\n    return  ntv?-x:x;\n}\n\ninline void print(int d){\n    if(d==0){\n        putchar('0');\n        return;\n    }\n    if(d<0){\n        putchar('-');\n        d=-d;\n    }\n    int num=d,siz=0,buf[22];\n    while(num){\n        siz++;\n        buf[siz]=num%10;\n        num/=10;\n    }\n    while(siz){\n        putchar('0'+buf[siz]);\n        siz--;\n    }\n}\n\nvoid dfs(int pt,int ptfa){\n    for(rgt i=lst[pt];i;i=nxt[i]){\n        if(to[i]!=ptfa){\n            ans[to[i]]=pt;\n            dfs(to[i],pt);\n        }\n    }\n}  //\u904d\u5386\u6574\u4e2a\u6811\u8ba1\u7b97\u7b54\u6848\n\nint main(){\n    n=rd();\n    m=rd();\n    for(rgt i=1;i<=n;i++)\n        fa[i]=i;\n    cnt=n;  //\u4e00\u5f00\u59cb n \u4e2a\u70b9\u662f\u72ec\u7acb\u7684\uff0c\u5373\u6709 n \u4e2a\u8054\u901a\u5757\n    \n    for(rgt fai,fbi,i=1;i<=m;i++){  //\u7b2c\u4e00\u8f6e\u626b\u63cf\u8fb9\n        ai[i]=rd();\n        bi[i]=rd();\n        fai=fd(ai[i]);\n        fbi=fd(bi[i]);\n        if(fai!=fbi){  //\u627e\u5230\u4e00\u6761\u8fb9\u80fd\u8fde\n            cnt--;  //\u5c11\u4e00\u4e2a\u8054\u901a\u5757\n            ci[i]=true;  //\u6807\u8bb0\n            fa[fai]=fbi;  //\u8fde\u8fb9\n            add(ai[i],bi[i]);\n            add(bi[i],ai[i]);\n        }\n    }  //\u6b64\u65f6 cnt \u5c31\u662f\u5269\u4e0b\u7684\u8054\u901a\u5757\u4e2a\u6570\uff0c\u5373\u4e3a\u68ee\u6797\u4e2d\u6811\u7684\u4e2a\u6570\n    \n    for(rgt fai,fbi,i=1;i<=m;i++){  //\u7b2c\u4e8c\u8f6e\u626b\u63cf\u8fb9\uff0c\u627e cnt \u6761\u8fb9\u6307\u5411\u6839\n        if(!ci[i]){\n            fai=fd(ai[i]);\n            if(!get_rt[fai]){\n                cnt--;\n                get_rt[fai]=true;\n                ans[ai[i]]=bi[i];\n                dfs(ai[i],0);\n            }  //\u627e\u5230\u4e00\u4e2a\u6ca1\u6709\u8fb9\u6307\u5411\u6839\u7684\u6811\uff0c\u7edf\u8ba1\u7b54\u6848\n        }\n    }\n    \n    if(cnt){  //\u6ca1\u6709\u627e\u9f50 cnt \u6761\u8fb9\uff0c\u65e0\u89e3\n        putchar('N');\n        putchar('I');\n        putchar('E');\n        return 0;\n    }\n    \n    putchar('T');\n    putchar('A');\n    putchar('K');\n    putchar('\\n');\n    for(rgt i=1;i<=n;i++){\n        print(ans[i]);\n        putchar('\\n');\n    }\n    return 0;\n}\n```\n",
        "postTime": 1636904408,
        "uid": 57421,
        "name": "fls233666",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3465 \u3010[POI2008]CLO-Toll\u3011"
    },
    {
        "content": "\u8003\u8651\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u8fde\u901a\u5757\u5224\u5b9a\u4ec0\u4e48\u662f\u5426\u5b58\u5728\u7b54\u6848\uff0c\u53d1\u73b0\u5982\u679c\u4e00\u4e2a\u8fde\u901a\u5757\u5b58\u5728\u81f3\u5c11\u4e00\u4e2a\u73af\u65f6\u8fde\u901a\u5757\u5185\u6709\u89e3\u3002            \n\n\u8bc1\u660e\uff1a\u8003\u8651\u4efb\u610f\u4e00\u4e2a\u8fde\u901a\u5757\u7684\u751f\u6210\u6811\uff0c\u6211\u4eec\u968f\u673a\u4ee4\u5176\u4e2d\u4e00\u4e2a\u70b9\u4e3a\u6839\u90a3\u4e48\u5c06\u7236\u4eb2\u5411\u513f\u5b50\u8fde\u6709\u5411\u8fb9\uff0c\u73b0\u5728\u53ea\u6709\u6839\u8282\u70b9\u6ca1\u6709\u5165\u5ea6\u4e86\u3002           \n\n\u5982\u679c\u5176\u4e2d\u6709\u4e00\u4e2a\u73af\uff0c\u6211\u4eec\u8003\u8651\u5148\u628a\u4e00\u6761\u8fb9\u53bb\u6389\uff0c\u9009\u8fd9\u4e2a\u8fb9\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u4e2d\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u6839\u540e dfs \u5168\u6811\uff0c\u6700\u540e\u628a\u53e6\u4e00\u4e2a\u70b9\u6307\u5411\u6839\u5373\u53ef\u6784\u9020\u3002             \n\n```cpp\n#include \"bits/stdc++.h\"\nusing namespace std;\nconst int Len = 2e5 + 5;\nint n,m,fa[Len],siz[Len],head[Len],cnt,From[Len],To[Len],f[Len];\nvoid makeSet(int x){for(int i = 1 ; i <= x ; i ++) fa[i] = i , siz[i] = 0;}\nint findSet(int x){return fa[x] == x ? fa[x] : fa[x] = findSet(fa[x]);}\nstruct Node\n{\n\tint x,y;\n}line[Len << 2];\nstruct node\n{\n\tint next,to;\n}edge[Len << 1];\nvoid add(int from,int to)\n{\n\tedge[++ cnt].to = to;\n\tedge[cnt].next = head[from];\n\thead[from] = cnt;\n}\nbool vis[Len];\nvoid unionSet(int x,int y)\n{\n\tint u = findSet(x) , v = findSet(y);\n\tif(u == v)\n\t{\n\t\tsiz[u] ++;\n\t\tif(siz[u] == 1) From[u] = x , To[u] = y;\n\t\treturn;\n\t}\n\tfa[v] = u;\n\tadd(x , y) , add(y , x);\n\tsiz[u] += siz[v];\n\tif(From[v]) From[u] = From[v] , To[u] = To[v];\t \n}\nvoid dfs(int x,int ff)\n{\n\tf[x] = ff;\n\tfor(int e = head[x] ; e ; e = edge[e].next)\n\t{\n\t\tint to = edge[e].to;\n\t\tif(to == ff) continue;\n\t\tdfs(to , x);\n\t}\n}\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\tmakeSet(n);\n\tfor(int i = 1 ; i <= m ; i ++)\n\t{\n\t\tint x,y;scanf(\"%d %d\",&x,&y);\n\t\tunionSet(x , y);\n\t}\n\tfor(int i = 1 ; i <= n ; i ++)\n\t{\n\t\tint x = findSet(i);\n\t\tif(!vis[x])\n\t\t{\n\t\t\tif(!siz[x]) return puts(\"NIE\") & 0;\n\t\t\tvis[x] |= 1;\n\t\t\tint u = From[x];\n\t\t\tdfs(u , 0);\n\t\t\tf[u] = To[x];\n\t\t}\n\t}\n\tputs(\"TAK\");\n\tfor(int i = 1 ; i <= n ; i ++) printf(\"%d\\n\",f[i]);\n\treturn 0;\n}\n```",
        "postTime": 1634639970,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3465 [POI2008]CLO-Toll"
    },
    {
        "content": "# \u9898\u610f\n\u7ed9\u4f60\u4e00\u5f20\u56fe\uff0c\u8ba9\u4f60\u6c42\u51fa\u4e00\u4e2a\u7531\u5b83\u751f\u6210\u7684\u57fa\u73af\u6811\u68ee\u6797\n\n# \u89e3\u6cd5\n\u660e\u786e\u9898\u610f\u4e4b\u540e\u505a\u6cd5\u5c31\u5341\u5206\u660e\u663e\u4e86\uff1a\n\n\u5bf9\u56fe\u7684\u6bcf\u4e2a\u8fde\u901a\u5757\u6c42\u4e00\u4e2a\u751f\u6210\u6811\uff0c\u7136\u540e\u679a\u4e3e\u6bcf\u6761\u8fb9\uff0c\u4e0d\u5728\u751f\u6210\u6811\u4e0a\u7684\u8bdd\u5c31\u5c06\u8fd9\u6761\u8fb9\u7684\u4e00\u4e2a\u7aef\u70b9\u8bbe\u7f6e\u6210\u5f53\u524d\u751f\u6210\u6811\u7684\u6839\uff0c\u53e6\u4e00\u7aef\u70b9\u5c31\u662f\u8fd9\u4e2a\u6839\u7684\u5165\u5ea6\u6765\u6e90\n\n\u6700\u540e\u5bf9\u4e8e\u6bcf\u68f5\u6811\u8dd1\u4e00\u8fb9dfs\u904d\u5386\uff0c\u8ba9\u6bcf\u4e2a\u8282\u70b9\u7684\u5165\u5ea6\u6765\u6e90=\u5b83\u7684\u7236\u4eb2\u5373\u53ef\n\n\u6ce8\u610f\u56fe\u4e0d\u4fdd\u8bc1\u8054\u901a\uff0c\u8981\u5224\u65ad\u662f\u5426\u6709\u4e0d\u80fd\u5f62\u6210\u57fa\u73af\u6811\u7684\u8fde\u901a\u5757\n\n\u5177\u4f53\u65b9\u6cd5\u5c31\u662f\u8bb0\u5f55\u8fde\u901a\u5757\u4e2a\u6570\uff0c\u6bcf\u6b21\u786e\u5b9a\u4e00\u4e2a\u6839\u65f6\u5c06\u8fde\u901a\u5757\u4e2a\u6570--\uff0c\u6700\u540e\u5224\u65ad\u662f\u5426\u6709\u5269\u4f59\u5373\u53ef\n\n# \u4ee3\u7801\n\n\u56e0\u4e3a\u662fcin\u6240\u4ee5\u8dd1\u5f97\u597d\u6162/youl\n\n\u5efa\u8bae\u52a0\u5feb\u8bfb\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint head[100001], nxt[200001], to[200001], tot, fa[100001], fat[100001], rt[100001], rrt[100001], frr[100001];\nstruct hehe{\n\tint x, y;\n}e[200001];\nbool used[200001];\nint qwq[100001];\nvoid add(int x, int y)\n{\n\tnxt[++tot] = head[x];\n\thead[x] = tot;\n\tto[tot] = y;\n}\nint find(int x)\n{\n\tif(fa[x] == x) return x;\n\treturn fa[x] = find(fa[x]);\n}\nvoid dfs(int x, int from)\n{\n\t// cout << x << endl;\n\tfat[x] = from;\n\tfor(int i = head[x]; i; i = nxt[i])\n\t{\n\t\tint y = to[i];\n\t\tif(y == from) continue;\n\t\tdfs(y, x);\n\t}\n}\nint main()\n{\n\tint n, m;\n\tcin >> n >> m;\n\tint cnt = n;\n\tfor(int i = 1; i <= n; i++) fa[i] = i;\n\tif(m == n - 1)\n\t{\n\t\tcout << \"NIE\";\n\t\treturn 0;\n\t}\n\tfor(int i = 1; i <= m; i++)\n\t{\n\t\tint x, y;\n\t\tcin >> x >> y;\n\t\te[i].x = x, e[i].y = y;\n\t\tint fx = find(x), fy = find(y);\n\t\tif(fx != fy) fa[fx] = fy, used[i] = 1, add(x, y), add(y, x), cnt--;\n\t}\n\tfor(int i = 1; i <= m; i++)\n\t{\n\t\tint fx = find(e[i].x), fy = find(e[i].y);\n\t\tif(!used[i] && !rt[fx])\n\t\t{\n\t\t\trt[fx] = e[i].x;\n\t\t\tfrr[e[i].x] = e[i].y;\n\t\t\tqwq[e[i].x] = fx;\n\t\t\tcnt--;\n\t\t}\n\t}\n\tif(cnt)\n\t{\n\t\tcout << \"NIE\" << endl;\n\t\treturn 0;\n\t}\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tif(qwq[i])\n\t\t{\n\t\t\tif(!rt[qwq[i]])\n\t\t\t{\n\t\t\t\tcout << \"NIE\";\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tdfs(i, 0);\n\t\t}\n\t}\n\tcout << \"TAK\\n\";\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tif(!fat[i]) cout << frr[i] << endl;\n\t\telse cout << fat[i] << endl;\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1607048596,
        "uid": 75954,
        "name": "AuCloud",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3465 \u3010[POI2008]CLO-Toll\u3011"
    },
    {
        "content": "## \u9898\u89e3\uff1a\n\n\u5176\u5b9e\u5f88\u7b80\u5355\u7684\u3002\u5c31\u662f\u5728\u6bcf\u4e2a\u8fde\u901a\u5757\u91cc\u62ce\u51fa\u6765\u57fa\u73af\u6811\u3002\n\n\u5982\u679c\u62ce\u4e0d\u51fa\u8fde\u901a\u5757\uff0c\u90a3\u5c31\u662fNIE\u3002\n\n\u7136\u540e\u8003\u8651\u600e\u4e48\u62ce\u57fa\u73af\u6811\u3002\n\n\u57fa\u73af\u6811\u662f\u5565\u554a\uff0c\u5c31\u662f\u4e00\u68f5\u6811\u52a0\u4e0a\u4efb\u610f\u4e00\u6761\u8fb9\u5457\u3002\u8fd9\u6761\u8fb9\u5c31\u662f\u201c\u8fd4\u7956\u8fb9\u201d\u554a\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u6bcf\u4e2a\u8fde\u901a\u5757DFS\u4e00\u904d\uff0c\u53ea\u62ce\u4e00\u6761\u8fd4\u7956\u8fb9\uff08\u8fd9\u4e2a\u7528flag\u7ef4\u62a4\uff09\uff0c\u78b0\u5230\u8fd4\u7956\u8fb9\uff0c\u5c31\u8bf4\u660e\u53ef\u4ee5\u548c\u4e00\u4e9b\u8282\u70b9\u6784\u6210\u4e00\u4e2a\u73af\uff0c\u8fd9\u6837\u7684\u8bdd\u5c31\u56de\u6eaf\uff0c\u628a\u6240\u6709\u6cbf\u9014\u8282\u70b9\u5168\u90e8\u53cd\u5411\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\nusing namespace std;\nconst int maxn=1e5+5;\nconst int maxm=2e5+5;\nint n,m;\nint tot,head[maxn],nxt[maxm<<1],to[maxm<<1];\nint fa[maxn],ans[maxn];\nbool v[maxn];\nbool flag;\nvoid add(int x,int y)\n{\n\tto[++tot]=y;\n\tnxt[tot]=head[x];\n\thead[x]=tot;\n}\nvoid dfsback(int x,int s)\n{\n\tif(ans[x])\n\t\tdfsback(ans[x],x);\n\tans[x]=s;\n}\nvoid dfs(int x)\n{\n\tv[x]=1;\n\tfor(int i=head[x];i;i=nxt[i])\n\t{\n\t\tint y=to[i];\n\t\tif(y==fa[x])\n\t\t\tcontinue;\n\t\tif(v[y])\n\t\t{\n\t\t\tif(!flag)\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tdfsback(y,x);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans[y]=fa[y]=x;\n\t\t\tdfs(y);\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y);\n\t\tadd(y,x);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(!v[i])\n\t\t{\n\t\t\tflag=0;\n\t\t\tdfs(i);\n\t\t\tif(!flag)\n\t\t\t{\n\t\t\t\tputs(\"NIE\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\tputs(\"TAK\");\n\tfor(int i=1;i<=n;i++)\n\t\tprintf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1607046748,
        "uid": 175131,
        "name": "\u5085\u601d\u7ef4666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3465 \u3010[POI2008]CLO-Toll\u3011"
    }
]