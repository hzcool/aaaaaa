[
    {
        "content": "\u4ece\u4e0b\u5348\u4e09\u70b9\u5f00\u6b64\u9898\u8c03\u5230\u5230\u4e03\u70b9\uff0c$A$ \u6389\u6b64\u9898\u7684\u611f\u89c9\u771f\u7684\u662f\u592a\u723d\u4e86\uff01\uff01\uff01\n\n\u800c\u4e14\u6211\u89c9\u5f97\u8fd9\u9053\u9898\u5bf9\u4e8e\u7ec3\u6574\u4f53\u4e8c\u5206\u975e\u5e38\u7684\u597d\uff0c\u5c31\u662f\u5199\u7684\u4eba\u6709\u70b9\u5c11\u3002\n\n\u4e0d\u8fc7\u4e3a\u4ec0\u4e48\u76d8\u5b50\u662f\u6c34\u679c\u7684\u5b50\u8def\u5f84\u624d\u662f\u63a5\u4f4f\u554a\u3002\u3002\u3002\u4e0d\u5e94\u8be5\u76d8\u5b50\u6bd4\u6c34\u679c\u5927\u7684\u561b\u3002\u3002\u3002\n\n\u6211\u4eec\u5c06\u6b64\u8def\u5f84\u8986\u76d6\u5206\u4e24\u7c7b\u8ba8\u8bba\uff1a\n\n\u4e0d\u59a8\u4ee4 $st_x<st_y$\n\n1\u3001$LCA(x,y)=x$\n\n\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\u5176\u5b9e\u8def\u5f84\u4e00\u4e2a\u7aef\u70b9\u5728 $[st_y,ed_y]$\uff0c\u53e6\u4e00\u4e2a\u4e0d\u5728\u9664 $x,y$ \u5916 $x->y$ \u7684\u8def\u5f84\u4e0a\u7684\u70b9 $z$ \u7684\u5b50\u6811\u5185\u5c31\u884c\u4e86\uff0c\u5373 $[1,st_z-1]\\ or\\ [ed_z+1,n]$\u3002\u5176\u5b9e\u7528\u6811\u5256\u4e00\u76f4\u5411\u4e0a\u8df3\uff0c\u8df3\u5230\u79bb $x$ \u6700\u8fd1\u7684\u70b9\u4e14\u5176\u5b50\u6811\u5185\u5305\u542b $y$ \u5c31\u662f $z$ \u4e86\u3002\n\n2\u3001$LCA(x,y)\\not =x$\n\n\u90a3\u4e48\u4e00\u4e2a\u70b9\u5728 $[st_x,ed_x]$\uff0c\u53e6\u4e00\u4e2a\u70b9\u5728 $[st_y,ed_y]$ \u5c31\u884c\u4e86\n\n\u53d1\u73b0\u53ef\u4ee5\u505a\u4e00\u904d\u626b\u63cf\u7ebf\uff0c\u76f4\u63a5\u66b4\u529b\u6811\u5957\u6811\u3002\u5728\u5185\u5c42\u7ebf\u6bb5\u6811\u52a8\u6001\u5f00\u70b9\uff0c\u7136\u540e\u4e8c\u5206\u7b54\u6848\uff0c$\\log^2 n$ \u9a8c\u8bc1\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^3n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n\\log^2 n)$\n\n\u90a3\u6709\u6ca1\u6709\u66f4\u597d\u7684\u89e3\u6cd5\u5462\uff1f\u53d1\u73b0\u6ca1\u6709\u79bb\u7ebf\uff0c\u7b2c $k$ \u5c0f\uff0c\n\n\u6211\u4eec\u53ef\u4ee5\u8bf7\u51fa\u6211\u4eec\u7684\u6574\u4f53\u4e8c\u5206\uff01\n\n\u7136\u540e\u6b63\u89e3\u5c31\u662f\u626b\u63cf\u7ebf+\u6574\u4f53\u4e8c\u5206\u4e86\u3002\u628a\u77e9\u5f62\u5dee\u5206\u4e00\u4e0b\uff0c\u7136\u540e\u533a\u95f4\u52a0\uff0c\u5355\u70b9\u67e5\uff0c\u5957\u4e00\u4e2a\u5dee\u5206\u7684\u6811\u72b6\u6570\u7ec4\u5c31\u597d\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2 n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n)$\n\n$Code\\ Below:$\n\n```cpp\n#include <bits/stdc++.h>\n#define lowbit(x) ((x)&(-(x)))\nusing namespace std;\nconst int maxn=40000+10;\nint n,m,Q,c[maxn],ans[maxn],mp[maxn],lim,head[maxn],to[maxn<<1],nxt[maxn<<1],tot,cnt;\nint top[maxn],dep[maxn],siz[maxn],son[maxn],fa[maxn],st[maxn],ed[maxn],tim;\n\nstruct Query{\n    int op,x,l,r,k,v,id;\n}q[maxn*5],q1[maxn*5],q2[maxn*5];\n\nbool cmp(Query a,Query b){\n    if(a.x!=b.x) return a.x<b.x;\n    return a.op<b.op;\n}\n\ninline void read(int &x){\n    x=0;int f=1;char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n    while(isdigit(ch)){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n    if(f==-1) x=-x;\n}\nvoid print(int x){\n    if(x<0){putchar('-');x=-x;}\n    if(x>9) print(x/10);\n    putchar(x%10+'0');\n}\n\ninline void upd(int x,int y){\n    for(;x<=n;x+=lowbit(x)) c[x]+=y;\n}\ninline int sum(int x){\n    int ans=0;\n    for(;x;x-=lowbit(x)) ans+=c[x];\n    return ans;\n}\n\ninline void add(int x,int y){\n    to[++tot]=y;\n    nxt[tot]=head[x];\n    head[x]=tot;\n}\n\nvoid dfs1(int x,int f){\n    fa[x]=f;siz[x]=1;\n    dep[x]=dep[f]+1;\n    int maxson=-1;\n    for(int i=head[x],y;i;i=nxt[i]){\n        y=to[i];\n        if(y==f) continue;\n        dfs1(y,x);\n        siz[x]+=siz[y];\n        if(siz[y]>maxson){\n            maxson=siz[y];\n            son[x]=y;\n        }\n    }\n}\n\nvoid dfs2(int x,int topf){\n    top[x]=topf;\n    st[x]=++tim;\n    if(son[x]) dfs2(son[x],topf);\n    for(int i=head[x],y;i;i=nxt[i]){\n        y=to[i];\n        if(y==fa[x]||y==son[x]) continue;\n        dfs2(y,y);\n    }\n    ed[x]=tim;\n}\n\nint LCA(int x,int y){\n    while(top[x]!=top[y]){\n        if(dep[top[x]]<dep[top[y]]) swap(x,y);\n        x=fa[top[x]];\n    }\n    if(dep[x]>dep[y]) swap(x,y);\n    return x;\n}\n\nint getson(int x,int y){\n    while(top[x]!=top[y]){\n        if(fa[top[x]]==y) return top[x];\n        x=fa[top[x]];\n    }\n    return son[y];\n}\n\nvoid solve(int L,int R,int l,int r){\n    if(L>R) return ;\n    if(l==r){\n        for(int i=L;i<=R;i++)\n            if(q[i].op==2) ans[q[i].id]=mp[l];\n        return ;\n    }\n    int mid=(l+r)>>1,cnt1=0,cnt2=0,val;\n    for(int i=L;i<=R;i++){\n        if(q[i].op==1){\n            if(q[i].k<=mid){\n                upd(q[i].l,q[i].v);upd(q[i].r+1,-q[i].v);\n                q1[++cnt1]=q[i];\n            }\n            else q2[++cnt2]=q[i];\n        }\n        else {\n            val=sum(q[i].l);\n            if(val>=q[i].k) q1[++cnt1]=q[i];\n            else q[i].k-=val,q2[++cnt2]=q[i];\n        }\n    }\n    for(int i=1;i<=cnt1;i++) q[L+i-1]=q1[i];\n    for(int i=1;i<=cnt2;i++) q[L+i+cnt1-1]=q2[i];\n    solve(L,L+cnt1-1,l,mid);solve(L+cnt1,R,mid+1,r);\n}\n\nint main()\n{\n    read(n),read(m),read(Q);\n    int x,y,z,l,r,k,lca;\n    for(int i=1;i<n;i++){\n        read(x),read(y);\n        add(x,y);add(y,x);\n    }\n    dfs1(1,0);dfs2(1,1);\n    for(int i=1;i<=m;i++){\n        read(x),read(y),read(k);mp[i]=k;\n        if(st[x]>st[y]) swap(x,y);\n        lca=LCA(x,y);\n        if(lca==x){\n            z=getson(y,x);\n            if(st[z]>1){\n                q[++cnt]=(Query){1,1,st[y],ed[y],k,1,0};\n                q[++cnt]=(Query){1,st[z],st[y],ed[y],k,-1,0};\n            }\n            if(ed[z]<n){\n                q[++cnt]=(Query){1,st[y],ed[z]+1,n,k,1,0};\n                q[++cnt]=(Query){1,ed[y]+1,ed[z]+1,n,k,-1,0};\n            }\n        }\n        else {\n            q[++cnt]=(Query){1,st[x],st[y],ed[y],k,1,0};\n            q[++cnt]=(Query){1,ed[x]+1,st[y],ed[y],k,-1,0};\n        }\n    }\n    sort(mp+1,mp+m+1);\n    lim=unique(mp+1,mp+m+1)-mp-1;\n    for(int i=1;i<=cnt;i++) q[i].k=lower_bound(mp+1,mp+lim+1,q[i].k)-mp;\n    for(int i=1;i<=Q;i++){\n        read(x),read(y),read(k);\n        if(st[x]>st[y]) swap(x,y);\n        q[++cnt]=(Query){2,st[x],st[y],0,k,0,i};\n    }\n    sort(q+1,q+cnt+1,cmp);\n    solve(1,cnt,1,lim);\n    for(int i=1;i<=Q;i++) printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1545563859,
        "uid": 35069,
        "name": "Owen_codeisking",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3242 \u3010[HNOI2015]\u63a5\u6c34\u679c\u3011"
    },
    {
        "content": "## [\u9898\u610f](https://blog.csdn.net/BeNoble_/article/details/79894444)\n\n\u7ed9\u4f60\u4e00\u4e2a\u6811\u4e0a\u8def\u5f84\u96c6\u5408$S,$\u6bcf\u6761\u8def\u5f84\u6709\u4e2a\u6743\u503c\n\n\u6bcf\u6b21\u8be2\u95ee\u4e00\u6761\u8def\u5f84$p:x\\to y,$\u95ee\u4ed6\u5728$S$\u4e2d\u5305\u542b\u7684\u8def\u5f84\u4e2d\u6743\u503c\u7b2c$k$\u5c0f\u7684\u662f\u591a\u5c11\n\n---\n\n## \u9898\u89e3\n\n### \u5148\u8003\u8651\u600e\u4e48\u5224\u65ad\u4e00\u6761\u8def\u5f84\u662f\u5426\u88ab\u53e6\u4e00\u6761\u8def\u5f84\u5305\u542b\n\n\u5148\u6c42\u51fa\u8fd9\u68f5\u6811\u7684$dfs$\u5e8f$,$\u8bb0$L_u=dfn_u,R_u=dfn_u+sz_u-1$\n\n\u8003\u8651\u628a\u4e00\u6761\u8def\u5f84$u\\to v$\u6295\u5f71\u6210\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u70b9$(L_u,L_v),L_u<L_v$\n\n\u4e00$.$\u5982\u679c\u662f\u5728\u94fe\u4e0a\n\n>\u90a3\u4e48\u5305\u542b$u\\to v$\u7684\u8def\u5f84$x\\to y$\u8981\u6ee1\u8db3$1\\le L_x\\le L_u,L_v\\le L_y\\le R_v$\n\n>\u4e5f\u5c31\u662f\u8981\u6c42\u70b9$(L_x,L_y)$\u5728\u77e9\u5f62$\\{(1,L_v),(L_u,R_v)\\}$\u4e2d\n\n**\u6240\u4ee5**\n\n>\u4e00\u6761\u8def\u5f84\u5305\u542b\u591a\u5c11\u6761\u8def\u5f84$\\Leftrightarrow$\u5bf9\u5e94\u70b9\u88ab\u591a\u5c11\u4e2a\u77e9\u5f62\u8986\u76d6\n\n>\u540e\u8005\u53ef\u4ee5\u6309\u7167$x$\u6392\u5e8f\u626b\u63cf\u7ebf\u7136\u540e\u7ef4\u62a4$y$\u5750\u6807\u7684\u524d\u7f00\u548c\u6c42\u51fa\n\n\u4e8c$.$\u8003\u8651\u5728\u6811\u4e0a\n\n$1.$\u5982\u679c$lca(u,v)\\neq u$\n\n>\u90a3\u4e48\u5c31\u8981\u6c42\u8def\u5f84$p$\u6ee1\u8db3$x$\u5728$u$\u7684\u5b50\u6811\u91cc$,y$\u5728$v$\u7684\u5b50\u6811\u91cc\n\n>\u4e5f\u5c31\u662f$L_u\\le L_x\\le R_u,L_v\\le L_y\\le R_v$\n\n>\u5373$(L_x,L_y)$\u5728\u77e9\u5f62$\\{(L_u,L_v),(R_u,R_v)\\}$\u91cc\n\n$2.$\u5982\u679c$lca(u,v)=u$\n\n>\u8bbe$z$\u662f$u\\to v$\u4e0a\u7684\u7b2c\u4e00\u4e2a\u70b9\n\n>\u90a3\u4e48\u5c31\u8981\u6c42\u8def\u5f84$p$\u6ee1\u8db3\u4e00\u4e2a\u8282\u70b9\u5728$v$\u5b50\u6811\u5185$,$\u4e00\u4e2a\u8282\u70b9\u5728$z$\u5b50\u6811\u5916\n\n>\u4e5f\u5c31\u662f$(L_x,L_y)$\u5728\u77e9\u5f62$\\{(1,L_v),(L_z-1,R_v)\\}\\cup\\{(L_v,R_z+1),(R_v,n)\\}$\u4e2d\n\n\n### \u8003\u8651\u600e\u4e48\u6c42\u89e3\n\n\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u8be2\u95ee\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u4e00\u4e2a\u7b54\u6848\n\n\u7136\u540e\u52a0\u5165\u6743\u503c\u5c0f\u4e8e\u8fd9\u4e2a\u7b54\u6848\u7684\u8def\u5f84\u5bf9\u5e94\u7684\u77e9\u5f62$,$\u7136\u540e\u5224\u65ad$(L_x,L_y)$\u88ab\u8986\u76d6\u4e86\u591a\u5c11\u6b21\n\n\u5982\u679c\u8be2\u95ee\u5f88\u591a\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u6574\u4f53\u4e8c\u5206\n\n### \u8003\u8651\u600e\u4e48\u5361\u5e38\n\n$1.lca(u,v)=u\\Leftrightarrow L_v\\in[L_u,R_u]$\n\n$2.$\u627e\u8def\u5f84\u4e0a\u7b2c\u4e00\u4e2a\u70b9\u53ef\u4ee5\u7528\u6811\u5256$,$\u6bd4\u500d\u589e\u5feb\u5f88\u591a\n\n$3.$\u7ef4\u62a4$y$\u5750\u6807\u524d\u7f00\u548c\u7528\u6811\u72b6\u6570\u7ec4\u5373\u53ef\n\n$4.$\u4e8c\u5206\u7b54\u6848\u7684\u533a\u95f4\u5e94\u8be5\u662f$[1,P]$\u800c\u4e0d\u662f$[1,\\infty]$\n\n$5.$\u4e0d\u8981\u5b58\u77e9\u5f62$,$\u76f4\u63a5\u5b58\u626b\u63cf\u7ebf\n\n$6.$\u5148\u5728\u5916\u9762\u628a\u70b9\u548c\u626b\u63cf\u7ebf\u6309\u7167$x$\u6392\u5e8f\u7136\u540e\u5728\u6574\u4f53\u4e8c\u5206\u91cc\u9762\u53ea\u8981$two-pointer$\u626b\u4e00\u4e0b\n\n$7.two-pointer$\u65f6\u4ee5\u70b9\u7684$x$\u5750\u6807\u4e3a\u57fa\u51c6\u4f1a\u597d\u5199\u4e00\u4e9b\n\n$8.$\u6574\u4f53\u4e8c\u5206\u4e2d\u4f20\u4e0b\u53bb\u7684\u64cd\u4f5c\u4e5f\u8981\u6ee1\u8db3$x$\u5347\u5e8f\u8fd9\u6837\u5c31\u4e0d\u8981\u6bcf\u6b21\u6392\u5e8f\u4e86\n\n$9.$\u7528\u6307\u9488\u4e5f\u8bb8\u4f1a\u5feb\u4e00\u4e9b\n\n\n\u975e\u6307\u9488\u7248\n```\n#include<bits/stdc++.h>\n#define fp(i,a,b) for(register int i=a,I=b+1;i<I;++i)\n#define fd(i,a,b) for(register int i=a,I=b-1;i>I;--i)\n#define go(u) for(register int i=fi[u],v=e[i].to;i;v=e[i=e[i].nx].to)\n#define file(s) freopen(s\".in\",\"r\",stdin),freopen(s\".out\",\"w\",stdout)\ntemplate<class T>inline bool cmax(T&a,const T&b){return a<b?a=b,1:0;}\ntemplate<class T>inline bool cmin(T&a,const T&b){return a>b?a=b,1:0;}\nusing namespace std;\nchar ss[1<<17],*A=ss,*B=ss;\ninline char gc(){return A==B&&(B=(A=ss)+fread(ss,1,1<<17,stdin),A==B)?-1:*A++;}\ntemplate<class T>inline void sd(T&x){\n    char c;T y=1;while(c=gc(),(c<48||57<c)&&c!=-1)if(c==45)y=-1;x=c-48;\n    while(c=gc(),47<c&&c<58)x=x*10+c-48;x*=y;\n}\nchar sr[1<<21],z[20];int C=-1,Z;\ninline void Ot(){fwrite(sr,1,C+1,stdout),C=-1;}\ntemplate<class T>inline void we(T x){\n    if(C>1<<20)Ot();if(x<0)sr[++C]=45,x=-x;\n    while(z[++Z]=x%10+48,x/=10);\n    while(sr[++C]=z[Z],--Z);sr[++C]='\\n';\n}\nconst int N=2e5+5,inf=1e9;\ntypedef int arr[N];\nstruct eg{int nx,to;}e[N];\nstruct Line{\n    int x,L,R,w,val;\n    inline bool operator<(const Line b)const{return x<b.x;}\n}p[N],tp[N];\nstruct qry{\n    int x,y,k,id;\n    inline bool operator<(const qry b)const{return x<b.x;}\n}q[N],tq[N];\nint n,m,Q,dft;arr c,h,fa,fi,sz,Lx,Rx,dep,son,top,ans;\nvoid dfs(int u){\n    dep[u]=dep[fa[u]]+(sz[u]=1);\n    go(u)if(v^fa[u]){\n        fa[v]=u,dfs(v),sz[u]+=sz[v];\n        if(sz[v]>sz[son[u]])son[u]=v;\n    }\n}\nvoid dfs(int u,int t){\n    Lx[u]=++dft;top[u]=t;if(son[u])dfs(son[u],t);\n    go(u)if(v^fa[u]&&v^son[u])dfs(v,v);Rx[u]=dft;\n}\ninline int Go(int u,int p){\n    while(top[u]^top[p]){\n        if(fa[top[u]]==p)return top[u];\n        u=fa[top[u]];\n    }return top[u]==u?u:son[p];\n}\ninline void mdy(int i,int w){for(;i<=n;i+=i&-i)c[i]+=w;}\ninline int qry(int i){int w=0;for(;i;i-=i&-i)w+=c[i];return w;}\ninline void mdy(int L,int R,int w){mdy(L,w),mdy(R+1,-w);}\nvoid sol(int b,int e,int s,int t,int L,int R){\n    if(b>e||s>t)return;\n    if(L==R){fp(i,s,t)ans[q[i].id]=h[L];return;}\n    int mid=(L+R)>>1,tl=b,tr=e,sl=s,sr=t,j=b,sp;\n    fp(i,s,t){\n        for(;j<=e&&p[j].x<=q[i].x;++j)\n            if(p[j].val>h[mid])tp[tr--]=p[j];\n            else mdy(p[j].L,p[j].R,p[j].w),tp[tl++]=p[j];\n        q[i].k>(sp=qry(q[i].y))?q[i].k-=sp,tq[sr--]=q[i]:tq[sl++]=q[i];\n    }\n    for(;j<=e;++j)if(p[j].val>h[mid])tp[tr--]=p[j];\n        else mdy(p[j].L,p[j].R,p[j].w),tp[tl++]=p[j];\n    fp(i,b,tr)mdy(tp[i].L,tp[i].R,-tp[i].w);\n    fp(i,b,tr)p[i]=tp[i];fp(i,tl,e)p[e+tl-i]=tp[i];\n    fp(i,s,sr)q[i]=tq[i];fp(i,sl,t)q[t+sl-i]=tq[i];\n    sol(b,tr,s,sr,L,mid);sol(tl,e,sl,t,mid+1,R);\n}\ninline void add(int u,int v){static int ce=0;e[++ce]={fi[u],v},fi[u]=ce;}\nint main(){\n    #ifndef ONLINE_JUDGE\n        file(\"s\");\n    #endif\n    int u,v,w;sd(n),sd(w),sd(Q);\n    fp(i,2,n)sd(u),sd(v),add(u,v),add(v,u);\n    dfs(1),dfs(1,1);\n    fp(i,1,w){\n        sd(u),sd(v),sd(h[i]);\n        if(Lx[u]>Lx[v])swap(u,v);\n        if(Lx[u]<=Lx[v]&&Rx[v]<=Rx[u]){\n            int z=Go(v,u);\n            p[++m]={1,Lx[v],Rx[v],1,h[i]};\n            p[++m]={Lx[z],Lx[v],Rx[v],-1,h[i]};\n            if(Rx[z]<n)p[++m]={Lx[v],Rx[z]+1,n,1,h[i]},\n                p[++m]={Rx[v]+1,Rx[z]+1,n,-1,h[i]};\n        }else p[++m]={Lx[u],Lx[v],Rx[v],1,h[i]},p[++m]={Rx[u]+1,Lx[v],Rx[v],-1,h[i]};\n    }sort(p+1,p+m+1);sort(h+1,h+w+1);h[0]=unique(h+1,h+w+1)-h-1;\n    fp(i,1,Q){\n        sd(u),sd(v),sd(w);\n        if(Lx[u]>Lx[v])swap(u,v);\n        q[i]={Lx[u],Lx[v],w,i};\n    }sort(q+1,q+Q+1);\n    sol(1,m,1,Q,1,h[0]);\n    fp(i,1,Q)we(ans[i]);\nreturn Ot(),0;\n}\n```\n\u6307\u9488\u7248$($\u5199\u8d77\u6765\u597d\u50cf\u4e5f\u6ca1\u5565\u533a\u522b$,$\u5e94\u8be5\u662f\u6211\u4e0d\u592a\u4f1a\u7528\u5427$)$\n```\n#include<bits/stdc++.h>\n#define fp(i,a,b) for(register int i=a,I=b+1;i<I;++i)\n#define fd(i,a,b) for(register int i=a,I=b-1;i>I;--i)\n#define go(u) for(register int i=fi[u],v=e[i].to;i;v=e[i=e[i].nx].to)\n#define file(s) freopen(s\".in\",\"r\",stdin),freopen(s\".out\",\"w\",stdout)\ntemplate<class T>inline bool cmax(T&a,const T&b){return a<b?a=b,1:0;}\ntemplate<class T>inline bool cmin(T&a,const T&b){return a>b?a=b,1:0;}\nusing namespace std;\nchar ss[1<<17],*A=ss,*B=ss;\ninline char gc(){return A==B&&(B=(A=ss)+fread(ss,1,1<<17,stdin),A==B)?-1:*A++;}\ntemplate<class T>inline void sd(T&x){\n    char c;T y=1;while(c=gc(),(c<48||57<c)&&c!=-1)if(c==45)y=-1;x=c-48;\n    while(c=gc(),47<c&&c<58)x=x*10+c-48;x*=y;\n}\nchar sr[1<<21],z[20];int C=-1,Z;\ninline void Ot(){fwrite(sr,1,C+1,stdout),C=-1;}\ntemplate<class T>inline void we(T x){\n    if(C>1<<20)Ot();if(x<0)sr[++C]=45,x=-x;\n    while(z[++Z]=x%10+48,x/=10);\n    while(sr[++C]=z[Z],--Z);sr[++C]='\\n';\n}\nconst int N=2e5+5,inf=1e9;\ntypedef int arr[N];\nstruct eg{int nx,to;}e[N];\nstruct Line{\n    int x,L,R,w,val;\n    inline bool operator<(const Line b)const{return x<b.x;}\n}Li[N],*p[N],*tp[N];\nstruct qry{\n    int x,y,k,id;\n    inline bool operator<(const qry b)const{return x<b.x;}\n}Qr[N],*q[N],*tq[N];\nint n,m,Q,dft;arr c,h,fa,fi,sz,Lx,Rx,dep,son,top,ans;\nvoid dfs(int u){\n    dep[u]=dep[fa[u]]+(sz[u]=1);\n    go(u)if(v^fa[u]){\n        fa[v]=u,dfs(v),sz[u]+=sz[v];\n        if(sz[v]>sz[son[u]])son[u]=v;\n    }\n}\nvoid dfs(int u,int t){\n    Lx[u]=++dft;top[u]=t;if(son[u])dfs(son[u],t);\n    go(u)if(v^fa[u]&&v^son[u])dfs(v,v);Rx[u]=dft;\n}\ninline int Go(int u,int p){\n    while(top[u]^top[p]){\n        if(fa[top[u]]==p)return top[u];\n        u=fa[top[u]];\n    }return top[u]==u?u:son[p];\n}\ninline void mdy(int i,int w){for(;i<=n;i+=i&-i)c[i]+=w;}\ninline int qry(int i){int w=0;for(;i;i-=i&-i)w+=c[i];return w;}\ninline void mdy(int L,int R,int w){mdy(L,w),mdy(R+1,-w);}\nvoid sol(int b,int e,int s,int t,int L,int R){\n    if(b>e||s>t)return;\n    if(L==R){fp(i,s,t)ans[q[i]->id]=h[L];return;}\n    int mid=(L+R)>>1,tl=b,tr=e,sl=s,sr=t,j=b,sp;\n    fp(i,s,t){\n        for(;j<=e&&p[j]->x<=q[i]->x;++j)\n            if(p[j]->val>h[mid])tp[tr--]=p[j];\n            else mdy(p[j]->L,p[j]->R,p[j]->w),tp[tl++]=p[j];\n        q[i]->k>(sp=qry(q[i]->y))?q[i]->k-=sp,tq[sr--]=q[i]:tq[sl++]=q[i];\n    }\n    for(;j<=e;++j)if(p[j]->val>h[mid])tp[tr--]=p[j];\n        else mdy(p[j]->L,p[j]->R,p[j]->w),tp[tl++]=p[j];\n    fp(i,b,tr)mdy(tp[i]->L,tp[i]->R,-tp[i]->w);\n    fp(i,b,tr)p[i]=tp[i];fp(i,tl,e)p[e+tl-i]=tp[i];\n    fp(i,s,sr)q[i]=tq[i];fp(i,sl,t)q[t+sl-i]=tq[i];\n    sol(b,tr,s,sr,L,mid);sol(tl,e,sl,t,mid+1,R);\n}\ninline void add(int u,int v){static int ce=0;e[++ce]={fi[u],v},fi[u]=ce;}\nint main(){\n    #ifndef ONLINE_JUDGE\n        file(\"s\");\n    #endif\n    int u,v,w;sd(n),sd(w),sd(Q);\n    fp(i,2,n)sd(u),sd(v),add(u,v),add(v,u);\n    dfs(1),dfs(1,1);\n    fp(i,1,w){\n        sd(u),sd(v),sd(h[i]);\n        if(Lx[u]>Lx[v])swap(u,v);\n        if(Lx[u]<=Lx[v]&&Rx[v]<=Rx[u]){\n            int z=Go(v,u);\n            Li[++m]={1,Lx[v],Rx[v],1,h[i]};\n            Li[++m]={Lx[z],Lx[v],Rx[v],-1,h[i]};\n            if(Rx[z]<n)Li[++m]={Lx[v],Rx[z]+1,n,1,h[i]},\n                Li[++m]={Rx[v]+1,Rx[z]+1,n,-1,h[i]};\n        }else Li[++m]={Lx[u],Lx[v],Rx[v],1,h[i]},Li[++m]={Rx[u]+1,Lx[v],Rx[v],-1,h[i]};\n    }sort(Li+1,Li+m+1);fp(i,1,m)p[i]=Li+i;\n    sort(h+1,h+w+1);h[0]=unique(h+1,h+w+1)-h-1;\n    fp(i,1,Q){\n        sd(u),sd(v),sd(w);\n        if(Lx[u]>Lx[v])swap(u,v);\n        Qr[i]={Lx[u],Lx[v],w,i};\n    }\n\tsort(Qr+1,Qr+Q+1);fp(i,1,Q)q[i]=Qr+i;\n    sol(1,m,1,Q,1,h[0]);fp(i,1,Q)we(ans[i]);\nreturn Ot(),0;\n}\n```\n\n\u5199\u5728\u6700\u540e$:$\u7a9d\u518d\u4e5f\u4e0d\u6562\u4e71\u5361\u5e38\u4e86$,$\u5199\u5b8c\u540e\u8c03\u8bd5\u5230\u7edd\u671b![\u8fd9\u91cc\u5199\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdn.net/20180411114923645?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0JlTm9ibGVf/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)",
        "postTime": 1523419360,
        "uid": 20156,
        "name": "Kelin",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3242 \u3010[HNOI2015]\u63a5\u6c34\u679c\u3011"
    },
    {
        "content": "\u633a\u6bd2\u7684\u4e00\u9053\u9898\u3002\n\n\u9996\u5148\u8fd8\u662f\u8981\u8bf4\u8bf4\u5982\u4f55\u5c06\u95ee\u9898\u8f6c\u5316\u7684\uff0c\u5373\u5982\u4f55\u8003\u8651\u8def\u5f84\u4e4b\u95f4\u7684\u5305\u542b\u5173\u7cfb\u3002\n\n\u6211\u4eec\u6709 DFS \u5e8f\uff1a\u5165\u5e8f $ln_x$ \u53ca\u51fa\u5e8f $rn_x=ln_x+size_x-1$\u3002\n\n\u8bbe\u6709 $ln_x < ln_y$\uff0c$ln_v < ln_u$\uff0c\u8def\u5f84 $(x,y)$ \u5305\u542b $(v,u)$\u3002\n\n\u8ba8\u8bba $(v,u)$ \u8def\u5f84\u7684\u5f62\u6001\u3002\n\n---\n\n$u$ \u5728 $v$ \u7684\u5b50\u6811\u4e2d\uff0c\u53ef\u4ee5\u8868\u793a\u4e3a $rn_u \\leq rn_v$\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/w7zzkn6u.png)\n\n\u8003\u8651 $z$ \u4e3a $(v,u)$ \u8def\u5f84\u4e0a\u8ddd\u79bb $v$ \u6700\u8fd1\u7684\u70b9\uff0c\u53d1\u73b0 $(x,y)$ \u4e00\u4e2a\u5728 $z$ \u7684\u5b50\u6811\u4e4b\u5916\uff0c\u4e00\u4e2a\u5728 $u$ \u7684\u5b50\u6811\u4e4b\u5185\u3002\u6c42 $z$ \u53ef\u4ee5\u500d\u589e\u6216\u6811\u5256\u968f\u4fbf\u3002\n\n\u524d\u8005\u7684 $ln$ \u533a\u95f4\u4e3a $[1,ln_z)\\cup(rn_z,n]$\uff0c\u800c\u540e\u8005\u4e3a $[ln_u,rn_u]$\u3002\n\n\u4e8e\u662f $x$ \u5c31\u662f\u524d\u8005\uff0c $y$ \u5c31\u662f\u540e\u8005\u5417\uff1f\u4e5f\u4e0d\u5c3d\u7136\u3002\n\n\u5982\u679c $ln_z > 1$\uff0c\u5219 $x\\in[1,ln_z)$\uff0c $y\\in[ln_u,rn_u]$ \u65f6\u5305\u542b\uff1b\n\n\u540c\u65f6\u5982\u679c $rn_z < n$\uff0c\u5219 $x\\in[ln_u,rn_u]$\uff0c$y\\in(rn_z,n]$ \u65f6\u5305\u542b\u3002\n\n\u53d1\u73b0\u4e24\u79cd\u60c5\u51b5\u6ca1\u6709\u4ea4\u96c6\uff0c\u770b\u4f5c\u4e24\u4e2a\u6761\u4ef6\u5373\u53ef\u3002\n\n---\n\n$u$ \u548c $v$ \u4e92\u4e0d\u4e3a\u7956\u5148\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/b4h6f66q.png)\n\n\u8fd9\u79cd\u60c5\u51b5\u5c31\u662f $x,y$ \u5206\u522b\u5728 $v,u$ \u5b50\u6811\u4e2d\u4e86\u3002\u5373\uff1a$x\\in[ln_v,rn_v],y\\in[ln_u,rn_u]$\u3002\n\n---\n\n\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e2a\u6761\u4ef6\uff0c $x$ \u548c $y$ \u90fd\u5c5e\u4e8e\u4e00\u4e2a\u533a\u95f4\uff0c\u5373\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $(x,y)$\uff0c\u5b83\u5728\u4e00\u4e2a\u77e9\u5f62\u4e2d\u65f6\uff0c\u8fd9\u6761\u8def\u5f84 $(x,y)$ \u88ab\u8be5\u8def\u5f84\u5305\u542b\u3002\n\n\u95ee\u9898\u53d8\u4e3a\uff1a\u6c42\u82e5\u5e72\u70b9\u5305\u542b\u5176\u7684\u6743\u503c $k$ \u5927\u77e9\u5f62\u3002\n\n\u8003\u8651\u4e00\u4e2a\u5f31\u5316\u95ee\u9898\uff1a\u6c42\u82e5\u5e72\u70b9\u5305\u542b\u5176\u7684\u77e9\u5f62\u6570\u3002\n\n\u81ea\u7136\u95ee\u77e9\u5f62\u5305\u542b\u7684\u70b9\u6570\u6211\u4eec\u77e5\u9053\u600e\u4e48\u6c42\uff1a\u628a\u4e00\u4e2a\u5750\u6807\u8f74\u53d8\u4e3a\u65f6\u95f4\u8f74\uff0c\u77e9\u5f62\u62c6\u6210 $4$ \u4e2a\u524d\u7f00\uff0c\u626b\u63cf\u7ebf\u987a\u5e8f\u63d2\u5165\uff0c\u7ef4\u62a4\u6811\u72b6\u6570\u7ec4\u5373\u53ef\u3002\n\n\u4e8b\u5b9e\u4e0a\u8fd9\u4e2a\u95ee\u9898\u4e5f\u53ef\u4ee5\u8fd9\u4e48\u505a\u3002\u6811\u72b6\u6570\u7ec4\u5355\u70b9\u52a0\u533a\u95f4\u67e5\u6539\u6210\u533a\u95f4\u52a0\u5355\u70b9\u67e5\u5373\u53ef\uff0c\u5177\u4f53\u5730\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/0kf1zafc.png)\n\n\u4ece\u4e0b\u5f80\u4e0a\u626b\uff0c\u5230 $x1$ \u4f4d\u7f6e\u65f6\u5728 $[y1,y2]$ \u4e0a\u52a0\u4e00\uff0c\u5230\u8be2\u95ee\u70b9\u65f6\u67e5\u8be2\u5176\u6a2a\u5750\u6807\u4e0a\u7684\u503c\uff0c\u5230 $x2 + 1$ \u65f6\u5728 $[y1,y2]$ \u4e0a\u51cf\u4e00\u3002\n\n\u8fd9\u4e2a\u95ee\u9898\u5e26\u4e0a $k$ \u5927\u4e14\u53ef\u4ee5\u79bb\u7ebf\uff0c\u6574\u4f53\u4e8c\u5206\u3002\n\n\u5728\u4e8c\u5206\u91cc\u4e0d\u7528\u6392\u5e8f\uff0c\u4e4b\u524d\u6309 $y$ \u5750\u6807\u7b2c\u4e00\uff0c\u4fee\u6539\u5728\u524d\u7b2c\u4e8c\u6392\u597d\u5e8f\uff1b\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4 $x$ \u5750\u6807\u8f74\uff1b\u4e8c\u5206\u672c\u8eab\u7ef4\u62a4\u6743\u503c\u8f74\u3002\n\n\u6574\u4f53\u4e8c\u5206\u672c\u8eab\u662f\u6a21\u677f\uff0c\u53ef\u4ee5\u53bb\u5176\u5b83\u9898\u76ee\u5982 [P3332 [ZJOI2013]K\u5927\u6570\u67e5\u8be2](https://www.luogu.com.cn/problem/P3332) \u770b\u770b\u3002\n\n\u6c42\u5305\u542b\u6570\u7684\u5b50\u95ee\u9898\u662f $O(n\\log n)$ \u7684\uff0c\u5957\u4e0a\u6574\u4f53\u4e8c\u5206\uff0c\u603b\u590d\u6742\u5ea6\u662f $O(n\\log^2n)$ \u7684\u3002\n\n> \u6ce8\u610f\uff1a\n\n1. $(x,y)$ \u548c $(v,u)$ \u90fd\u662f\u6709\u5e8f\u7684\uff1b\n3. \u64cd\u4f5c\u4e2d\u76f4\u63a5\u5b58\u77e9\u5f62\u7684\u8fb9\u754c\u7ebf\u5373\u53ef\uff1b\n2. $y$ \u5750\u6807\u76f8\u540c\u65f6\uff0c\u4fee\u6539\u5e94\u8be5\u5728\u524d\uff1b\n4. \u64cd\u4f5c\u6570\u7ec4\u7684\u7a7a\u95f4\u8f83\u5927\u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n\nconst int MAXN = 50001;\n\ninline int read() {\n    int x = 0, f = 1; char ch = getchar();\n    while(ch > '9' || ch < '0') { if(ch == '-') f = -1; ch = getchar(); }\n    do x = x * 10 + ch - 48, ch = getchar(); while(ch >= '0' && ch <= '9');\n    return x * f;\n}\n\nstruct Edge {\n    int u; Edge *nxt;\n} *adj[MAXN];\nvoid ins(int v,int u) {\n    Edge *e = new Edge; e -> u = u;\n    e -> nxt = adj[v], adj[v] = e;\n}\n\nint fa[MAXN],d[MAXN],sv[MAXN],son[MAXN],top[MAXN];\nint ln[MAXN],rn[MAXN],dfn;\n\nvoid Dfs1(int v,int f) {\n    ln[v] = ++dfn;\n    fa[v] = f, d[v] = d[f] + 1, sv[v] = 1;\n    for(Edge *i = adj[v];i;i = i -> nxt) {\n        int u = i -> u;\n        if(u == f) continue;\n        Dfs1(u,v);\n        sv[v] += sv[u]; if(sv[u] > sv[son[v]]) son[v] = u;\n    }\n    rn[v] = dfn;\n}\n\nvoid Dfs2(int v,int t) {\n    top[v] = t;\n    if(!son[v]) return;\n    Dfs2(son[v],t);\n    for(Edge *i = adj[v];i;i = i -> nxt) {\n        int u = i -> u;\n        if(top[u]) continue;\n        Dfs2(u,u);\n    }\n}\n\nint GetSon(int v,int u) {\n    while(top[v] != top[u]) {\n        if(fa[top[v]] == u) return top[v];\n        v = fa[top[v]];\n    }\n    return son[u];\n}\n\nstruct Item {\n    int tp,y,l,r,k,id;\n    Item() {}\n    Item(int _tp,int _y,int _l,int _r,int _k,int _id) :\n        tp(_tp), y(_y), l(_l), r(_r), k(_k), id(_id) {}\n    friend bool operator <(const Item &x,const Item &y) {\n        if(x.y != y.y) return x.y < y.y;\n        else return x.tp < y.tp;\n    }\n} p[MAXN * 4], p1[MAXN * 4], p2[MAXN * 4];\nint n,m,q,b[MAXN],ans[MAXN],f[MAXN];\n\nvoid Add(int i,int x) {\n    for(;i <= n;i += i & (-i))\n        f[i] += x;\n}\n\nint Sum(int i) {\n    int ans = 0;\n    for(;i;i -= i & (-i)) ans += f[i];\n    return ans;\n}\n\nvoid Solve(int l,int r,int L,int R) {\n    if(L > R) return;\n    if(l == r) {\n        for(int i = L;i <= R;i++)\n            if(p[i].tp) ans[p[i].id] = l;\n        return;\n    }\n    int m = (l + r) >> 1, c1 = 0, c2 = 0;\n    for(int i = L;i <= R;i++) if(!p[i].tp) {\n        if(p[i].k <= m) Add(p[i].l,p[i].id), Add(p[i].r + 1,-p[i].id), p1[++c1] = p[i];\n        else p2[++c2] = p[i];\n    } else {\n        int s = Sum(p[i].l);\n        if(s >= p[i].k) p1[++c1] = p[i];\n        else p[i].k -= s, p2[++c2] = p[i];\n    }\n    for(int i = 1;i <= c1;i++) p[L + i - 1] = p1[i];\n    for(int i = 1;i <= c2;i++) p[R - c2 + i] = p2[i];\n    Solve(l,m,L,L + c1 - 1), Solve(m + 1,r,L + c1,R);\n    return;\n}\n\nint main() {\n    n = read(), m = read(), q = read();\n    for(int i = 2;i <= n;i++) {\n        int v = read(), u = read();\n        ins(v,u), ins(u,v);\n    }\n    Dfs1(1,1), Dfs2(1,1);\n    int t = 0;\n    for(int i = 1;i <= m;i++) {\n        int v = read(), u = read(), k = b[i] = read();\n        if(ln[v] > ln[u]) std::swap(v,u);\n        if(rn[v] >= rn[u]) {\n            v = GetSon(u,v);\n            if(ln[v] > 1) {\n                p[++t] = Item(0,ln[u],1,ln[v] - 1,k,1);\n                p[++t] = Item(0,rn[u] + 1,1,ln[v] - 1,k,-1);\n            }\n            if(rn[v] < n) {\n                p[++t] = Item(0,rn[v] + 1,ln[u],rn[u],k,1);\n                p[++t] = Item(0,n + 1,ln[u],rn[u],k,-1);\n            }\n        } else {\n            p[++t] = Item(0,ln[u],ln[v],rn[v],k,1);\n            p[++t] = Item(0,rn[u] + 1,ln[v],rn[v],k,-1);\n        }\n    }\n    std::sort(b + 1,b + 1 + m);\n    int tmp = std::unique(b + 1,b + 1 + m) - b - 1;\n    for(int i = 1;i <= t;i++) p[i].k = std::lower_bound(b + 1,b + 1 + tmp,p[i].k) - b;\n    for(int i = 1;i <= q;i++) {\n        int v = read(), u = read(), k = read();\n        if(ln[v] > ln[u]) std::swap(v,u);\n        p[++t] = Item(1,ln[u],ln[v],0,k,i);\n    }\n    std::sort(p + 1,p + 1 + t);\n    // for(int i = 1;i <= t;i++) std::printf(\"i=%d tp=%d y=%d l=%d r=%d k=%d id=%d\\n\",i,p[i].tp,p[i].y,p[i].l,p[i].r,p[i].k,p[i].id);\n    Solve(1,tmp,1,t);\n    for(int i = 1;i <= q;i++) std::printf(\"%d\\n\",b[ans[i]]);\n    return 0;\n}\n\n```\n\n\u540c\u6837\u6709\u4e0d\u7528\u6574\u4f53\u4e8c\u5206\u7684\u505a\u6cd5\u3002\u626b\u63cf\u7ebf\u7684\u540c\u65f6\uff0c\u6743\u503c\u7ebf\u6bb5\u6811\u5957\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u533a\u95f4\u52a0\uff0c\u5355\u70b9\u67e5\u5373\u53ef\u3002\u7a7a\u95f4 $O(n\\log^2 n)$ \u65f6\u95f4 $O(n\\log^2n)$\u3002",
        "postTime": 1597302851,
        "uid": 219595,
        "name": "Vocalise",
        "ccfLevel": 9,
        "title": "\u6574\u4f53\u4e8c\u5206--\u9898\u89e3 P3242 \u3010[HNOI2015]\u63a5\u6c34\u679c\u3011"
    },
    {
        "content": "# \u8bba\u5982\u4f55\u4f7f\u7528K-D tree \u5361\u8fc7\u8fd9\u9053\u9898\n\n### \u601d\u8def\uff1a\n\u9996\u5148\uff0c\u6211\u4eec\u4f1a\u6bd4\u8f83\u81ea\u7136\u5730\u60f3\u5230\u5c06\u76d8\u5b50\u548c\u6c34\u679c\u7684\u5173\u7cfb\u62bd\u8c61\u6210\u6574\u68f5\u6811\u7684DFS\u5e8f\u4e0a\u7684\u70b9\u5bf9\u3002\n\u5982\u679c\u4e00\u6761\u6811\u4e0a\u8def\u5f84\\[a,b\\]\u662f\\[c,d\\]\u7684\u5b50\u8def\u5f84\uff0c\u90a3\u4e48c\u548cd\u4e00\u5b9a\u4f1a\u5728\u4e0ea,b\u6709\u5173\u7684\u7279\u5b9a\u7684\u533a\u95f4\u5185\u3002\n\n\u56e0\u6b64\u6c42\u591a\u5c11\u5df2\u77e5\u8def\u5f84\u5305\u542b\u7ed9\u5b9a\u8def\u5f84\u5c06\u975e\u5e38\u5bb9\u6613\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\u6709\u591a\u5c11\u70b9\u5bf9(x,y)\u6ee1\u8db3$x\\in [l_1,r_1],y\\in [l_2,r_2]$\u3002\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u7531K-D\u6811\u6216\u8005\u626b\u63cf\u7ebf\u6216\u8005\u4ec0\u4e48\u8be1\u5f02\u7684\u65b9\u6cd5\u89e3\u51b3\uff0c\u5982\u7528k-d\u6811\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5b9e\u73b0\u533a\u95f4\u52a0\u548c\u5355\u70b9\u4fee\u6539\u3002\n\n\u63a5\u7740\u6211\u4eec\u5728\u6b64\u57fa\u7840\u4e0a\uff0c\u8003\u8651\u5982\u4f55\u6ee1\u8db3\u201c\u7b2ck\u5927\u201d\u8fd9\u4e2a\u9650\u5236\u3002\n\n\u5982\u679c\u6211\u4eec\u4e8c\u5206\u6bcf\u8fd9\u4e2a\u7b2ck\u5927\u503c\uff0c\u8be5\u95ee\u9898\u53c8\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5224\u5b9a\u6027\u95ee\u9898\uff1a\u6c42\u6709\u591a\u5c11\u5c0f\u4e8e\u8be5\u503c\u7684\u6ee1\u8db3\u6761\u4ef6\u7684\u70b9\u5bf9\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5bf9\u6bcf\u4e2a\u6c34\u679c\uff0c\u540c\u65f6\u4e8c\u5206\u7b54\u6848\uff0c\u6309\u4e8c\u5206\u7684\u7b2ck\u5927\u503c\u6392\u5e8f\u3002\u76d8\u5b50\u4e5f\u6309\u6743\u503c\u6392\u5e8f\u3002\u5c06\u6c34\u679c\u548c\u76d8\u5b50\u6309\u6743\u503c\u4ece\u5c0f\u5230\u8fbe\uff0c\u628a\u76d8\u5b50\u63d2\u5165\u5230k-d\u6811\u4e2d\uff0c\u7528\u6c34\u679c\u8be2\u95ee\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u77e5\u9053\u6bcf\u4e2a\u6c34\u679c\u8def\u5f84\u5305\u542b\u4e86\u591a\u5c11\u6bd4\u4ed6\u5c0f\u7684\u76d8\u5b50\u8def\u5f84\uff0c\u5229\u7528\u8fd9\u4e2a\u6570\u91cf\u7ee7\u7eed\u4e8c\u5206\u5373\u53ef\u3002\n\n\u8fd9\u662f\u4e00\u79cd\u7c7b\u4f3c\u6574\u4f53\u4e8c\u5206\u7684\u65b9\u6cd5\uff0c\u4f46\u76f8\u6bd4\u6574\u4f53\u4e8c\u5206\uff0c\u8fd9\u79cd\u65b9\u6cd5\u66f4\u50cf\u4e8c\u5206\u7b54\u6848\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\sqrt{n}log{n})$\n\n### \u5361\u00b7\u5e38\u6570 \u7684\u8bc5\u5492\n\u7136\u800c\u975e\u5e38\u6fc0\u52a8\u5730\u60f3\u5230\u8fd9\u79cd\u505a\u6cd5\uff0c\u975e\u5e38\u6fc0\u52a8\u5730\u7801\u5b8c\uff0c\u975e\u5e38\u6fc0\u52a8\u5730\u8fc7\u4e86\u6837\u4f8b\uff0c\u5374\u53ea\u670920\u5206\uff0c\u5269\u4e0b\u5168\u90e8TLE\u3002\u5f00O2\u540e\u8fd8\u662f\u53ea\u670970\u5206\u3002\n\u627e\u5230\u672c\u5730\u6570\u636e\u6d4b\u8bd5\u540e\uff0c\u53d1\u73b0\u6709\u4e00\u4e9b\u7cbe\u5fc3\u6784\u9020\u7684\u6570\u636e\u9700\u89815\u79d2\u624d\u80fd\u901a\u8fc7\uff0c\u4e8e\u662f\u7406\u6240\u5f53\u7136\u5730\u5728\u6d1b\u8c37\u4e0aTLE\u4e86\u3002\n\n\u4e8e\u662f\u6211\u5f00\u59cb\u4f18\u5316\u4ee3\u7801\n\n-\t\u95ee\u98981\uff1a\u540c\u65f6\u4e8c\u5206\u65f6\u6709\u4e9b\u7684l,r\u533a\u95f4\u5df2\u7ecf\u91cd\u5408\uff0c\u6ca1\u6709\u5fc5\u8981\u5904\u7406\u8fd9\u4e9b\u8be2\u95ee\u3002\n-\t\u89e3\u51b31\uff1a\u7279\u5224\u6389\u8fd9\u4e9b\u6ca1\u7528\u7684\u8be2\u95ee-0.07s\n-\t\u95ee\u98982\uff1a\u4e8c\u5206\u7684\u533a\u95f4\u592a\u5927\uff0c\u6ca1\u6709\u5fc5\u8981\u4e8c\u52060\u52301e9\u7684\u6240\u6709\u6570\u3002\n-\t\u89e3\u51b32\uff1a\u5c06\u6240\u6709\u53ef\u80fd\u4f5c\u4e3a\u7b54\u6848\u7684\u6570\u79bb\u6563\u5316\uff0c\u4e8c\u5206\u8fd9\u4e9b\u6570\u7684\u7f16\u53f7-0.5s\n-\t\u95ee\u98983\uff1agprof\u540e\u53d1\u73b0\u5404\u79cd\u8fd0\u7b97\u7b26\u91cd\u8f7d\u548cmin,max\u7b49\u6bd4\u8f83\u8017\u65f6\n-\t\u89e3\u51b33\uff1a\u8fd0\u7b97\u7b26\u7528const&\u91cd\u8f7d\uff0c\u624b\u5199min,max-0.3s\n-\t\u95ee\u98984\uff1a\u8bfb\u5165\u4e5f\u8bb8\u6bd4\u8f83\u8017\u65f6\n-\t\u89e3\u51b34\uff1a\u8bfb\u5165\u4f18\u5316-0.04s\n-\t\u95ee\u98985\uff1a\u6700\u5f71\u54cd\u6574\u4f53\u590d\u6742\u5ea6\u7684\u662fkd\u6811\u7684\u533a\u95f4\u52a0\n-\t\u89e3\u51b35\uff1a\u5bf9kd\u6811\u5b9e\u884c\u6807\u8bb0\u6c38\u4e45\u5316\uff0c\u69a8\u5e72\u533a\u95f4\u52a0\u7684\u5e38\u6570-0.6s\n-\t\u95ee\u98986\uff1a\u4e8c\u5206\u7b54\u6848\u65f6\u4f1a\u591a\u6b21\u8be2\u95ee\u540c\u6837\u7684\u77e9\u5f62\uff0c\u6bcf\u6b21\u5728kd\u6811\u4e2d\u9012\u5f52\u975e\u5e38\u6d6a\u8d39\u65f6\u95f4\n-\t\u89e3\u51b36\uff1a\u9884\u5904\u7406\u6240\u6709\u53ef\u80fd\u7528\u5230\u7684\u77e9\u5f62\u5728kd\u6811\u4e2d\u7528\u5230\u4e86\u54ea\u4e9b\u8282\u70b9\uff0c\u4ee5\u53ca\u5bf9\u8fd9\u4e9b\u8282\u70b9\u5b9e\u884c\u4e86\u4ec0\u4e48\u64cd\u4f5c\uff0c\u771f\u6b63\u533a\u95f4\u52a0\u65f6\u76f4\u63a5\u8bbf\u95ee\u8fd9\u4e9b\u8282\u70b9-0.8s\n\n\u81f3\u6b64\uff0c\u6211\u5c065s\u7684\u4ee3\u7801\u4f18\u5316\u6210\u4e862.7s\uff0c\u4e8e\u662f\u6211\u5c31\u4ef0\u5929\u957f\u5578\uff0c\u62cd\u6848\u800c\u8d77\uff0c\u4f46\u6700\u7ec8\u8fd8\u662f\n\u89c9\u5f97\u5bf9\u5f97\u8d77\u6d6a\u8d39\u6389\u7684\u8fd9\u4e24\u4e2a\u665a\u4e0a\u7684\u3002\n\n(\u7531\u4e8e\u5404\u79cd\u539f\u56e0\uff0c\u4ee3\u7801\u975e\u5e38\u957f)\n\n```cpp\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"sse3\",\"sse2\",\"sse\")\n#pragma GCC target(\"avx\",\"sse4\",\"sse4.1\",\"sse4.2\",\"ssse3\")\n#pragma GCC target(\"f16c\")\n#pragma GCC optimize(\"inline\",\"fast-math\",\"unroll-loops\",\"no-stack-protector\")\n#pragma GCC diagnostic error \"-fwhole-program\"\n#pragma GCC diagnostic error \"-fcse-skip-blocks\"\n#pragma GCC diagnostic error \"-funsafe-loop-optimizations\"\n#pragma GCC diagnostic error \"-std=c++14\"\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <ctime>\n#define MX 40004\n\nint D;\nint real[MX],rnum;\nint gfake(int a)\n{\n\treturn std::lower_bound(real+1,real+rnum+1,a)-real;\n}\nvoid lsh()\n{\n\tstd::sort(real+1,real+rnum+1);\n\trnum=std::unique(real+1,real+rnum+1)-real-1;\n}\nstruct node\n{\n\tint p[2],mn[2],mx[2],s[2],cnt,laz;\n\tbool operator < (const node& t)const{return p[D]!=t.p[D]?p[D]<t.p[D]:p[D^1]<t.p[D^1];}\n}tseq[MX*2];\nstruct edge\n{\n\tint u,v,w;\n}e[MX*2],plt[MX],qur[MX];\nstruct bina\n{\n\tint t,u,v,k,l,r,m,a,id;\t\t//type; u; v; kth; l; r; mid; ans; id;\n\tbool operator < (const bina& tmp)const{return real[m]==real[tmp.m]?t<tmp.t:real[m]<real[tmp.m];}\n}bin[MX*2];\nint n,p,q;\nint fst[MX],nxt[MX*2],lnum;\nint dfn[MX],rak[MX],mst[MX][2],dcnt;\nint out[MX],rout[MX][1000],rtyp[MX][1000],rsiz[MX];\n\nint mmin(const int &a,const int &b){return a>b?b:a;}\nint mmax(const int &a,const int &b){return a<b?b:a;}\n\nstruct KDT\n{\n\tnode tre[MX*2];\n\tint cnt,rot;\n\tvoid init(){for(int i=1;i<=cnt;++i)tre[i].cnt=tre[i].laz=0;}\n\tvoid upd(int a)\n\t{\n\t\ttre[a].mn[0]=tre[a].mx[0]=tre[a].p[0];\n\t\tif(tre[a].s[0])\n\t\t{\n\t\t\ttre[a].mn[0]=mmin(tre[a].mn[0],tre[tre[a].s[0]].mn[0]),\n\t\t\ttre[a].mx[0]=mmax(tre[a].mx[0],tre[tre[a].s[0]].mx[0]);\n\t\t}\n\t\tif(tre[a].s[1])\n\t\t{\n\t\t\ttre[a].mn[0]=mmin(tre[a].mn[0],tre[tre[a].s[1]].mn[0]),\n\t\t\ttre[a].mx[0]=mmax(tre[a].mx[0],tre[tre[a].s[1]].mx[0]);\n\t\t}\n\t\ttre[a].mn[1]=tre[a].mx[1]=tre[a].p[1];\n\t\tif(tre[a].s[0])\n\t\t{\n\t\t\ttre[a].mn[1]=mmin(tre[a].mn[1],tre[tre[a].s[0]].mn[1]),\n\t\t\ttre[a].mx[1]=mmax(tre[a].mx[1],tre[tre[a].s[0]].mx[1]);\n\t\t}\n\t\tif(tre[a].s[1])\n\t\t{\n\t\t\ttre[a].mn[1]=mmin(tre[a].mn[1],tre[tre[a].s[1]].mn[1]),\n\t\t\ttre[a].mx[1]=mmax(tre[a].mx[1],tre[tre[a].s[1]].mx[1]);\n\t\t}\n\t}\n\tvoid psd(int a)\n\t{\n\t\tif(!tre[a].laz)return;\n\t\ttre[tre[a].s[0]].cnt+=tre[a].laz,\n\t\ttre[tre[a].s[1]].cnt+=tre[a].laz,\n\t\ttre[tre[a].s[0]].laz+=tre[a].laz,\n\t\ttre[tre[a].s[1]].laz+=tre[a].laz,\n\t\ttre[a].laz=0;\n\t}\n\tbool itsct(const node& a,const node& b)\n\t{\n\t\treturn (*a.mn<=*b.mx&&*b.mn<=*a.mx&&\n\t\t\t\t*(a.mn+1)<=*(b.mx+1)&&*(b.mn+1)<=*(a.mx+1));\n\t}\n\tvoid build(int &a,int l,int r,int d)\n\t{\n\t\tif(l>r)return;\n\t\tD=d;\n\t\tint mid=(l+r)>>1;\n\t\tstd::nth_element(tseq+l,tseq+mid,tseq+r+1);\n\t\ttre[a=++cnt]=tseq[mid];\n\t\tbuild(tre[a].s[0],l,mid-1,d^1);\n\t\tbuild(tre[a].s[1],mid+1,r,d^1);\n\t\tupd(a);\n\t}\n\tvoid pre_add(int a,node &t,int tar)\n\t{\n\t\t++rsiz[tar];\n\t\trout[tar][rsiz[tar]]=a;\n\t\tif(\t*t.mn<=*tre[a].mn&&*tre[a].mx<=*t.mx&&\n\t\t\t*(t.mn+1)<=*(tre[a].mn+1)&&*(tre[a].mx+1)<=*(t.mx+1))\n\t\t\t{rtyp[tar][rsiz[tar]]|=1;return;}\n\t\tif(\t*t.mn<=*tre[a].p&&*tre[a].p<=*t.mx&&\n\t\t\t*(t.mn+1)<=*(tre[a].p+1)&&*(tre[a].p+1)<=*(t.mx+1))\n\t\t\t{rtyp[tar][rsiz[tar]]|=2;}\n\t\tint ls=*tre[a].s,rs=*(tre[a].s+1);\n\t\tif(\tls&&itsct(*(tre+ls),t))pre_add(ls,t,tar);\n\t\tif(\trs&&itsct(*(tre+rs),t))pre_add(rs,t,tar);\n\t}\n\tvoid add(int id)\n\t{\n\t\tfor(int i=1;i<=rsiz[id];++i)\n\t\t{\n\t\t\tif(rtyp[id][i]&1)++tre[rout[id][i]].laz;\n\t\t\tif(rtyp[id][i]&2)++tre[rout[id][i]].cnt;\n\t\t}\n\t}\n\tint query(int a,node &t,int d)\n\t{\n\t\tif(!a)return 0;\n\t\tD=d;\n\t\tif(t.p[0]==tre[a].p[0]&&t.p[1]==tre[a].p[1])return tre[a].cnt+tre[a].laz;\n\t\telse if(t<tre[a])return query(tre[a].s[0],t,d^1)+tre[a].laz;\n\t\telse return query(tre[a].s[1],t,d^1)+tre[a].laz;\n\t}\n}ktr;\n\nstruct LCA\n{\n\tint fa[17][MX],dep[MX];\n\tvoid init()\n\t{\n\t\tfor(int i=1;i<=16;++i)\n\t\t\tfor(int j=1;j<=n;++j)\n\t\t\t\tfa[i][j]=fa[i-1][fa[i-1][j]];\n\t}\n\tint lca(int a,int b)\n\t{\n\t\tif(dep[a]<dep[b])a^=b,b^=a,a^=b;\n\t\tfor(int i=16;i>=0;--i)\n\t\t\tif(dep[fa[i][a]]>=dep[b])\n\t\t\t\ta=fa[i][a];\n\t\tif(a==b)return a;\n\t\tfor(int i=16;i>=0;--i)\n\t\t\tif(fa[i][a]!=fa[i][b])\n\t\t\t\ta=fa[i][a],b=fa[i][b];\n\t\treturn fa[0][a];\n\t}\n\tint son(int a,int b)\n\t{\n\t\tfor(int i=16;i>=0;--i)\n\t\t\tif(dep[fa[i][b]]>dep[a])\n\t\t\t\tb=fa[i][b];\n\t\treturn b;\n\t}\n}lca;\n\nvoid addeg(int nu,int nv)\n{\n\tnxt[++lnum]=fst[nu];\n\tfst[nu]=lnum;\n\te[lnum]=(edge){nu,nv};\n}\n\nint read()\n{\n\tint x=0;char ch=getchar();\n\twhile(!isdigit(ch))ch=getchar();\n\twhile(isdigit(ch))x=x*10+ch-'0',ch=getchar();\n\treturn x;\n}\n\nvoid input()\n{\n\tint a,b;\n\tmemset(fst,0xff,sizeof(fst)),lnum=-1;\n\tn=read(),p=read(),q=read();\n\tfor(int i=1;i<n;++i)\n\t{\n\t\ta=read(),b=read();\n\t\taddeg(a,b);\n\t\taddeg(b,a);\n\t}\n\tfor(int i=1;i<=p;++i)plt[i].u=read(),plt[i].v=read(),plt[i].w=read();\n\tfor(int i=1;i<=q;++i)qur[i].u=read(),qur[i].v=read(),qur[i].w=read();\n}\n\nvoid dfs(int x,int f,int d)\n{\n\tlca.fa[0][x]=f;\n\tlca.dep[x]=d;\n\tdfn[x]=++dcnt;\n\trak[dcnt]=x;\n\tmst[x][0]=dcnt;\n\tfor(int i=fst[x];i!=-1;i=nxt[i])\n\t\tif(e[i].v!=f)\n\t\t\tdfs(e[i].v,x,d+1);\n\tmst[x][1]=dcnt;\n}\n\nvoid work()\n{\n\tnode t;int tmp=0,f;\n\tdfs(1,0,1);\n\tlca.init();\n\tfor(int i=1;i<=p;++i)real[++rnum]=plt[i].w;\n\tlsh();\n\tfor(int i=1;i<=p;++i)\n\t{\n\t\tint u=plt[i].u,v=plt[i].v;\n\t\tif(dfn[u]>dfn[v])u^=v,v^=u,u^=v;\n\t\tbin[i]=(bina){0,u,v,0,0,0,gfake(plt[i].w),0,i};\n\t}\n\tfor(int i=1;i<=q;++i)\n\t{\n\t\tint u=qur[i].u,v=qur[i].v;\n\t\tif(dfn[u]>dfn[v])u^=v,v^=u,u^=v;\n\t\tbin[p+i]=(bina){1,u,v,qur[i].w,1,rnum,(rnum+1)>>1,0,i};\n\t}\n\tfor(int i=1;i<=p+q;++i)\n\t\tif(bin[i].t)\n\t\t{\n\t\t\tint du=dfn[bin[i].u],dv=dfn[bin[i].v];\n\t\t\ttseq[++tmp]=(node){du,dv,du,dv,du,dv,0,0,0,0};\n\t\t}\n\tktr.build(ktr.rot,1,tmp,0);\n\tfor(int j=1;j<=p+q;j++)\n\t\tif(!bin[j].t)\n\t\t{\n\t\t\tint u=bin[j].u,v=bin[j].v,g=lca.lca(u,v);\n\t\t\tif(g!=u&&g!=v)\n\t\t\t{\n\t\t\t\tt=(node){0,0,mst[u][0],mst[v][0],mst[u][1],mst[v][1],0,0,0,0};\n\t\t\t\tif(t.mn[0]<=t.mx[0]&&t.mn[1]<=t.mx[1])ktr.pre_add(ktr.rot,t,bin[j].id);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tint x=lca.son(u,v);\n\t\t\t\tt=(node){0,0,1,mst[v][0],mst[x][0]-1,mst[v][1],0,0,0,0};\n\t\t\t\tif(t.mn[0]<=t.mx[0]&&t.mn[1]<=t.mx[1])ktr.pre_add(ktr.rot,t,bin[j].id);\n\t\t\t\tt=(node){0,0,mst[v][0],mst[x][1]+1,mst[v][1],n,0,0,0,0};\n\t\t\t\tif(t.mn[0]<=t.mx[0]&&t.mn[1]<=t.mx[1])ktr.pre_add(ktr.rot,t,bin[j].id);\n\t\t\t}\n\t\t}\n\tfor(int i=1;i<=17;++i)\n\t{\n\t\tf=0;\n\t\tktr.init();\n\t\tstd::sort(bin+1,bin+p+q+1);\n\t\tfor(int j=1;j<=p+q;++j)\n\t\t{\n\t\t\tif(!bin[j].t)\n\t\t\t{\n\t\t\t\tint u=bin[j].u,v=bin[j].v,g=lca.lca(u,v);\n\t\t\t\tif(g!=u&&g!=v)ktr.add(bin[j].id);\n\t\t\t\telse ktr.add(bin[j].id);\n\t\t\t}\n\t\t\telse if(bin[j].l<bin[j].r)\n\t\t\t{\n\t\t\t\tf=1;\n\t\t\t\tt=(node){dfn[bin[j].u],dfn[bin[j].v],0,0,0,0,0,0,0,0};\n\t\t\t\tbin[j].a=ktr.query(ktr.rot,t,0);\n\t\t\t\tif(bin[j].a>=bin[j].k)bin[j].r=bin[j].m;\n\t\t\t\telse bin[j].l=bin[j].m+1;\n\t\t\t\tbin[j].m=(bin[j].l+bin[j].r)>>1;\n\t\t\t}\n\t\t}\n\t\tif(!f)break;\n\t}\n\tfor(int i=1;i<=p+q;++i)if(bin[i].t)out[bin[i].id]=bin[i].m;\n\tfor(int i=1;i<=q;++i)printf(\"%d\\n\",real[out[i]]);\n}\n\nint main()\n{\n\n\tinput();\n\twork();\n\treturn 0;\n}\n```",
        "postTime": 1522151367,
        "uid": 41155,
        "name": "totorato",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3242 \u3010[HNOI2015]\u63a5\u6c34\u679c\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u662f\u597d\u5199\u597d\u60f3\u7684bitset\u505a\u6cd5\u3002\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u4e00\u6761\u8def\u5f84,\u8003\u8651\u5b83\u5982\u679c\u662f\u4e00\u4e2a\u8def\u5f84\u7684\u5b50\u8def\u5f84\uff0c\u8fd9\u4e2a\u8def\u5f84\u6ee1\u8db3\u7684\u6027\u8d28\u3002\n\n\u5148\u628a\u76d8\u5b50\u6309\u7167\u6743\u503c\u6392\u5e8f\u3002\n\n\u5206\u4e24\u79cd\u60c5\u51b5\u3002\n\n\u7b2c\u4e00\u79cd\uff1a\n\n$v$\u662f$u$\u7684\u5b50\u8282\u70b9\uff0c\u6216$u$\u662f$v$\u7684\u5b50\u8282\u70b9\u3002\n\n\u4e0d\u59a8\u8bbe$u$\u662f$v$\u7684\u7956\u5148\u3002\n\n\u8fd9\u4e2a\u7684\u8bdd\u5c31\u662f\u8def\u5f84\u4e00\u4e2a\u70b9\u5728$v$\u5b50\u6811\u5185\uff0c\u53e6\u4e00\u4e2a\u70b9**\u4e0d\u5728**$u$\u5411$v$\u65b9\u5411\u7684\u5b50\u8282\u70b9\u5b50\u6811\u5185\u3002\n\n\u7b2c\u4e8c\u79cd\uff1a\n\n\u6240\u6709\u4e0d\u662f\u7b2c\u4e00\u79cd\u7684\u60c5\u51b5\u3002\n\n\u5c31\u662f\u4e00\u4e2a\u70b9\u5728$u$\u5b50\u6811\u5185\uff0c\u53e6\u4e00\u4e2a\u70b9\u5728$v$\u5b50\u6811\u5185\u3002\n\n\u6211\u4eec\u9996\u5148\u5047\u8bbe\u6c34\u679c\u8def\u5f84\u662f\u6709\u5411\u7684\u3002\n\n\u73b0\u5728\u5bf9\u4e8e\u4e00\u4e2a\u6c34\u679c$x->y$\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u5bf9\u4e8e\u6bcf\u4e2a\u76d8\u5b50\uff0c\u5728\u4e00\u4e9b\u8282\u70b9\u6807\u8bb0\u4e00\u4e0b\uff0c\u8868\u793a\u8fd9\u4e2a$x$\u9700\u8981\u5728\u8fd9\u4e2a\u5b50\u6811\u91cc\u624d\u53ef\u80fd\u5305\u542b(\u5f53\u7136\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\u8981\u6807\u8bb0\u4e0d\u53ef\u80fd\u5305\u542b)\u8fd9\u4e2a\u76d8\u5b50\u3002\n\n\u5bf9\u4e8e$y$\u4e5f\u7c7b\u4f3c\u7684\u65b9\u6cd5\u5904\u7406\u3002\n\n\u7136\u540e\u6211\u4eec$dfs$\u4e00\u904d\uff0c\u5c31\u53ef\u4ee5\u6c42\u51fa\u6bcf\u4e2a\u8282\u70b9\u4f5c\u4e3a\u6c34\u679c\u7684$x$($y$),\u662f\u5426\u6bcf\u79cd\u76d8\u5b50\u8def\u5f84\u662f\u5426\u88ab\u5305\u542b\uff0c\u8fd9\u4e2a\u6211\u4eec\u7528$bitset$\u538b\u4e00\u4e0b\u4f4d\u5c31\u884c\u4e86\u3002\u8bbe$u$\u4f5c\u4e3a$x$\u7684bitset\u4e3a$c_u$,\u4f5c\u4e3a$y$\u7684\u4e3a$d_u$\u3002\n\n\u7136\u540e\u8003\u8651\u8f6c\u6362\u4e3a\u65e0\u5411\u8def\u5f84\u3002\n\n\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\n\n\u5bf9\u4e8e\u6c34\u679c$u,v$\uff0c\u53ea\u8981$(c_u \\text{ and }d_v) | (c_v \\text{ and }d_u)$\u5373\u53ef,\u5c31\u53ef\u4ee5\u6c42\u51fa\u6bcf\u4e2a\u76d8\u5b50\u662f\u4e0d\u662f\u8fd9\u4e2a\u6c34\u679c\u7684\u5b50\u8def\u5f84\n\n\u4e0d\u8fc7\u8fd9\u6837\u5e38\u6570\u5c31$3$\u500d\u4e86\uff0c\u5e0c\u671b\u770b\u6211\u9898\u89e3\u7684dalao\u53ef\u4ee5\u60f3\u60f3\u6709\u6ca1\u6709\u66f4\u597d\u7684\u65b9\u6cd5\n\nbitset\u6c42k\u5c0f\u5c31\u4e0d\u7528\u8bf4\u4e86\u5427=-=\uff0c\u626b\u4e00\u904d\u5c31\u884c\u4e86\n\n\u5177\u4f53\u89c1\u4ee3\u7801\uff0c\u6211bitset\u662f\u624b\u5199\u7684QAQ\n\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define MAXN 40005\n#define ui unsigned int\n#define pb push_back \n\nconst int len = MAXN/30;\n\nint n,m,q;\n\nstruct bian {\n\tint x,y,ls;\n}b[MAXN<<1];\nint t[MAXN],cnt;\n\nstruct pan {\n\tint x,y,k;\n}p[MAXN];\n\nint ppc[1<<20];\nstruct bs {\n\tunsigned int a[MAXN/30+5];\n}c[MAXN],d[MAXN]; \n\nvector<int>v[MAXN]; \n\ninline bs operator &(bs a,bs b) {\n\tbs c;\n\tfor(int i = 0; i < len; i ++)\n\t\tc.a[i] = a.a[i]&b.a[i];\n\treturn c;\n}\n\ninline bs operator |(bs a,bs b) {\n\tbs c;\n\tfor(int i = 0; i < len; i ++)\n\t\tc.a[i] = a.a[i]|b.a[i];\n\treturn c;\n}\n\ninline int kth(bs a,int k) {\n\tfor(int i = 0; i < len; i ++)  {\n\t\tint t = ppc[a.a[i]>>16] + ppc[a.a[i]&65535];\n\t\tif(k <= t) {\n\t\t\tint p = a.a[i];\n\t\t\tfor(int j = 0; j <= 31; j ++) {\n\t\t\t\tk -= (p&1);\n\t\t\t\tp >>= 1;\n\t\t\t\tif(k == 0) return j + (i<<5);\n\t\t\t}\n\t\t} else {\n\t\t\tk -= t;\n\t\t}\n\t}\n}\n\nvoid jb(int x,int y) {\n\tcnt ++;\n\tb[cnt].x = x;\n\tb[cnt].y = y;\n\tb[cnt].ls = t[x];\n\tt[x] = cnt;\n}\n\nbool cmp(pan a,pan b) {\n\treturn a.k < b.k;\n}\n\nvoid rd()\n{\n\tcin >> n >> m >> q;\n\tfor(int i = 1; i < n; i ++) {\n\t\tint x,y;\n\t\tcin >> x >> y;\n\t\tjb(x,y);\n\t\tjb(y,x);\n\t}\n\tfor(int i = 1; i <= m; i ++) {\n\t\tcin >> p[i].x >> p[i].y >> p[i].k;\n\t}\n\tsort(p+1,p+m+1,cmp);\n}\n\nint fa[MAXN],a[MAXN]; \nint f[MAXN][22],h[MAXN]; \n\nvoid dfs(int x) {\n\th[x] = h[fa[x]] +1;\n\tcnt ++;\n\ta[x] = cnt;\n\tfor(int i = t[x]; i != 0; i = b[i].ls) {\n\t\tint y = b[i].y;\n\t\tif(y != fa[x]) {\n\t\t\tfa[y] = x;\n\t\t\tdfs(y);\n\t\t}\n\t}\n}\n\nbs ww,fw;\nvoid wxw(int x)\n{\n\tfor(int i = 0; i < v[x].size(); i ++) {\n\t\tint y = v[x][i];\n\t\tif(y > 0) {\n\t\t\ty --;\n\t\t\tww.a[y>>5] ^= ((ui)1<<(y&31));\n\t\t} else {\n\t\t\ty = -y;\n\t\t\ty --; \n\t\t\tfw.a[y>>5] ^= ((ui)1<<(y&31));\n\t\t}\n\t}\n\t\n\tc[x] = ww;\n\td[x] = fw;\n\tfor(int i = t[x]; i != 0; i = b[i].ls) {\n\t\tint y = b[i].y;\n\t\tif(y != fa[x]) {\n\t\t\twxw(y);\n\t\t}\n\t}\n\t\n\tfor(int i = 0; i < v[x].size(); i ++) {\n\t\tint y = v[x][i];\n\t\tif(y > 0) {\n\t\t\ty --;\n\t\t\tww.a[y>>5] ^= ((ui)1<<(y&31));\n\t\t} else {\n\t\t\ty = -y;\n\t\t\ty --;\n\t\t\tfw.a[y>>5] ^= ((ui)1<<(y&31));\n\t\t}\n\t}\n}\n\nbs an;\n\nvoid jianbiao()\n{\n\tfor(int i = 1; i <= n; i ++)\n\t\tf[i][0] = fa[i];\n\tfor(int j = 1; j <= 20; j ++)\n\t\tfor(int i = 1; i <= n; i ++)\n\t\t\tf[i][j] = f[f[i][j-1]][j-1];\n}\n\nint jump(int x,int y) {//k\u7ea7\u7956\u5148\n\tfor(int i = 20; i >= 0; i --)\n\tif(y >= (1<<i))  {\n\t\tx = f[x][i];\n\t\ty -= (1<<i);\n\t}\n\treturn x;\t\n}\n\nsigned main() {\n\tfor(int i = 1; i < (1<<16); i ++)\n\t\tppc[i] = ppc[i>>1] + (i&1);\n\trd();\n\tcnt = 0;\n\tdfs(1);\n\tjianbiao();\n\tfor(int i = 1; i <= m; i ++) {\n\t\tif(a[p[i].x] > a[p[i].y]) {\n\t\t\tswap(p[i].x,p[i].y); \n\t\t} \n\t\tint x = p[i].x,y = p[i].y;\n\t\tif(jump(y,h[y] - h[x]) == x) {\n\t\t\tv[1].pb(i);\n\t\t\tint t = jump(y,h[y]-h[x]-1);\n\t\t\tv[t].pb(i);\n\t\t\tv[y].pb(-i);\t\t//i > 0\u8868\u793a\u4f5c\u4e3ax,\u5426\u5219\u4f5c\u4e3ay\n\t\t} else {\n\t\t\tv[p[i].x].pb(i);\n\t\t\tv[p[i].y].pb(-i);\n\t\t}\n\t}\n\t\n\twxw(1);\n\t\n\t\n\tfor(int i = 1; i <= q; i ++) {\n\t\tint x,y,k;\n\t\tcin >> x >> y >>  k;\n\t\tif(a[x] > a[y]) swap(x,y);\n\t\tan = (c[x]&d[y])|(d[x]&c[y]);\n\t\tint ans = kth(an,k);\n\t\tcout<<p[ans+1].k<<\"\\n\";\n\t}\n\treturn 0;\n } \n```",
        "postTime": 1576049458,
        "uid": 124721,
        "name": "Ynoi",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3242 \u3010[HNOI2015]\u63a5\u6c34\u679c\u3011"
    },
    {
        "content": "\u6b64\u6587\u540c\u6b65\u53d1\u8868\u4e8e\u6211\u7684\u535a\u5ba2\uff1ahttps://www.alpha1022.me/articles/bzoj-4009.htm\n\n\u6309\u7167\u5957\u8def\uff0c\u53ef\u4ee5\u7528 DFS \u5e8f\u628a\u95ee\u9898\u8f6c\u5316\u6210\u8be2\u95ee\u8986\u76d6\u4e00\u4e2a\u70b9\u7684\u6240\u6709\u77e9\u5f62\u4e2d\u7684\u7b2c $k$ \u5c0f\u6743\u503c\u3002  \n\u8fd9\u4e2a\u522b\u4eba\u90fd\u8bb2\u70c2\u4e86\u3002\n\n\u7136\u540e\uff0c\u5c31\u53ef\u4ee5\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u8fa3\uff01  \n\u4f46\u662f\u4e3a\u4ec0\u4e48\u5927\u5bb6\u90fd\u5199\u4e86\u6574\u4f53\u4e8c\u5206\u2026\u2026\n\n\u6211\u6c38\u8fdc\u559c\u6b22\u6811\u5957\u6811\uff01  \n\u4e8e\u662f\u6211\u9009\u62e9\u4e86\u7528\u6811\u5957\u6811\u7ef4\u62a4\u626b\u63cf\u7ebf\u3002  \n\u4f46\u662f\u8fd9\u6837\u5b50\u5361\u4e0d\u8fc7\u53bb\u3002\n\n\u6211\u7528\u4e86\u4e00\u4e9b\u5361\u5e38\u7684\u6280\u5de7\uff1a\n- \u8bfb\u5165\u4f18\u5316\u3002\n- \u6743\u503c\u79bb\u6563\u5316\uff0c\u5355\u6b21\u64cd\u4f5c\u4ece $O(\\log n \\log c)$ \u964d\u5230\u4e86 $O(\\log n \\log p)$\u3002\n- \u53d1\u73b0\u6211\u4eec\u4e0d\u7528\u6bcf\u4e2a\u77e9\u5f62\u90fd\u5b58\u4e24\u4e2a\uff08\u65cb\u8f6c $90^\\circ$\uff09\uff0c\u800c\u662f\u4fdd\u8bc1\u6240\u6709\u5750\u6807\u70b9 $(x,y)$ \u90fd\u6ee1\u8db3 $x \\le y$\uff0c\u8fd9\u6837\u5c31\u53ea\u7528\u5b58\u4e00\u4e2a\u77e9\u5f62\u3002\n\n\u4e8e\u662f\u8fd9\u6837\u5b50\u5c31\u80fd\u5728\u67d0\u8c37\u548c LibreOJ \u4e0a\u901a\u8fc7\u4e86\u3002  \n\u4f46\u662f\u4f9d\u7136\u8dd1\u4e0d\u8fc7\u571f\u8c46\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\nconst int BUFF_SIZE = 1 << 20;\nchar BUFF[BUFF_SIZE],*BB,*BE;\n#define gc() (BB == BE ? (BE = (BB = BUFF) + fread(BUFF,1,BUFF_SIZE,stdin),BB == BE ? EOF : *BB++) : *BB++)\ntemplate<class T>\ninline void read(T &x)\n{\n\tx = 0;\n\tchar ch = 0,w = 0;\n\twhile(ch < '0' || ch > '9')\n\t\tw |= ch == '-',ch = gc();\n\twhile(ch >= '0' && ch <= '9')\n\t\tx = (x << 3) + (x << 1) + (ch ^ '0'),ch = gc();\n\tw ? x = -x : x;\n}\n\nconst int N = 4e4;\nconst int LG = 16;\nconst int C = 1e9;\nint n,p,q;\nint to[(N << 1) + 5],pre[(N << 1) + 5],first[N + 5];\ninline void add(int u,int v)\n{\n\tstatic int tot = 0;\n\tto[++tot] = v;\n\tpre[tot] = first[u];\n\tfirst[u] = tot;\n}\nint id[N + 5],sz[N + 5],dep[N + 5],f[N + 5][LG + 5];\nvoid dfs(int p)\n{\n\tstatic int tot = 0;\n\tsz[p] = 1,id[p] = ++tot;\n\tfor(register int i = 1;i <= LG;++i)\n\t\tf[p][i] = f[f[p][i - 1]][i - 1];\n\tfor(register int i = first[p];i;i = pre[i])\n\t\tif(to[i] ^ f[p][0])\n\t\t\tf[to[i]][0] = p,dep[to[i]] = dep[p] + 1,dfs(to[i]),sz[p] += sz[to[i]];\n}\nstruct segnode\n{\n\tint sum,tag;\n\tint ls,rs;\n} seg[N * 930 + 10];\nstruct node\n{\n\tint rt;\n\tint ls,rs;\n} tree[N * 500 + 10];\nint rt;\nvoid update(int l,int r,int k,int &p,int tl,int tr)\n{\n\tstatic int tot = 0;\n\tif(!p)\n\t\tp = ++tot;\n\tif(l <= tl && tr <= r)\n\t{\n\t\tseg[p].sum += k * (tr - tl + 1),seg[p].tag += k;\n\t\treturn ;\n\t}\n\tint mid = tl + tr >> 1;\n\tif(l <= mid)\n\t\tupdate(l,r,k,seg[p].ls,tl,mid);\n\tif(r > mid)\n\t\tupdate(l,r,k,seg[p].rs,mid + 1,tr);\n\tseg[p].sum = seg[seg[p].ls].sum + seg[seg[p].rs].sum;\n}\nint query(int x,int p,int tl,int tr)\n{\n\tif(!p || tl == tr)\n\t\treturn seg[p].sum;\n\tint mid = tl + tr >> 1;\n\tif(x <= mid)\n\t\treturn seg[p].tag + query(x,seg[p].ls,tl,mid);\n\telse\n\t\treturn seg[p].tag + query(x,seg[p].rs,mid + 1,tr);\n}\nvoid insert(int l,int r,int x,int k,int &p,int tl,int tr)\n{\n\tstatic int tot = 0;\n\tif(!p)\n\t\tp = ++tot;\n\tupdate(l,r,k,tree[p].rt,1,n);\n\tif(tl == tr)\n\t\treturn ;\n\tint mid = tl + tr >> 1;\n\tif(x <= mid)\n\t\tinsert(l,r,x,k,tree[p].ls,tl,mid);\n\telse\n\t\tinsert(l,r,x,k,tree[p].rs,mid + 1,tr);\n}\nint query(int x,int k,int p,int tl,int tr)\n{\n\tif(!p || tl == tr)\n\t\treturn tl;\n\tint mid = tl + tr >> 1;\n\tint cnt = query(x,tree[tree[p].ls].rt,1,n);\n\tif(k <= cnt)\n\t\treturn query(x,k,tree[p].ls,tl,mid);\n\telse\n\t\treturn query(x,k - cnt,tree[p].rs,mid + 1,tr);\n}\nstruct edge\n{\n\tint x,y1,y2,w,k,id;\n\tinline bool operator<(const edge &o) const\n\t{\n\t\treturn x < o.x || (x == o.x && k > o.k);\n\t}\n} e[N * 9 + 10];\nint tot;\nint ans[N + 5];\nint ind[N + 5],len;\nint main()\n{\n\tread(n),read(p),read(q);\n\tint u,v;\n\tfor(register int i = 1;i < n;++i)\n\t\tread(u),read(v),add(u,v),add(v,u);\n\tdep[1] = 1,dfs(1);\n\tint a,b,c;\n\tfor(register int i = 1;i <= p;++i)\n\t{\n\t\tread(a),read(b),read(c),ind[i] = c;\n\t\tif((id[a] <= id[b] && id[b] < id[a] + sz[a]) || (id[b] <= id[a] && id[a] < id[b] + sz[b]))\n\t\t{\n\t\t\tif(dep[a] > dep[b])\n\t\t\t\tswap(a,b);\n\t\t\tint t = b;\n\t\t\tfor(register int j = LG;~j;--j)\n\t\t\t\tif(f[t][j] && dep[f[t][j]] > dep[a])\n\t\t\t\t\tt = f[t][j];\n\t\t\tif(id[t] > 1)\n\t\t\t{\n\t\t\t\te[++tot] = (edge){1,id[b],id[b] + sz[b] - 1,c,1,0};\n\t\t\t\te[++tot] = (edge){id[t] - 1,id[b],id[b] + sz[b] - 1,c,-1,0};\n\t\t\t}\n\t\t\tif(id[t] + sz[t] <= n)\n\t\t\t{\n\t\t\t\te[++tot] = (edge){id[b],id[t] + sz[t],n,c,1,0};\n\t\t\t\te[++tot] = (edge){id[b] + sz[b] - 1,id[t] + sz[t],n,c,-1,0};\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(id[a] > id[b])\n\t\t\t\tswap(a,b);\n\t\t\te[++tot] = (edge){id[a],id[b],id[b] + sz[b] - 1,c,1,0};\n\t\t\te[++tot] = (edge){id[a] + sz[a] - 1,id[b],id[b] + sz[b] - 1,c,-1,0};\n\t\t}\n\t}\n\tsort(ind + 1,ind + p + 1);\n\tlen = unique(ind + 1,ind + p + 1) - ind - 1;\n\tfor(register int i = 1;i <= q;++i)\n\t{\n\t\tread(a),read(b),read(c);\n\t\tif(id[a] > id[b])\n\t\t\tswap(a,b);\n\t\te[++tot] = (edge){id[a],id[b],0,c,0,i};\n\t}\n\tsort(e + 1,e + tot + 1);\n\tfor(register int i = 1;i <= tot;++i)\n\t{\n\t\tif(!e[i].k)\n\t\t\tans[e[i].id] = ind[query(e[i].y1,e[i].w,rt,1,len)];\n\t\telse\n\t\t\tinsert(e[i].y1,e[i].y2,lower_bound(ind + 1,ind + len + 1,e[i].w) - ind,e[i].k,rt,1,len);\n\t}\n\tfor(register int i = 1;i <= q;++i)\n\t\tprintf(\"%d\\n\",ans[i]);\n}\n```\n",
        "postTime": 1553397202,
        "uid": 75840,
        "name": "deserter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3242 \u3010[HNOI2015]\u63a5\u6c34\u679c\u3011"
    },
    {
        "content": "## \u63d0\u4f9b\u4e00\u4e2a\u6574\u4f53\u4e8c\u5206+BIT\u7684\u9898\u89e3\u3002\n\u8003\u8651\u6574\u4f53\u4e8c\u5206\u3002\u6309\u7167\u6574\u4f53\u4e8c\u5206\u7684\u5957\u8def\uff0c\u6211\u4eec\u5bf9\u4e8e\u4e00\u4e2a\u4e8c\u5206\u7684mid\uff0c\u5c06\u6240\u6709\u503c\u5c0f\u4e8e\u7b49\u4e8emid\u7684\u76d8\u5b50\u52a0\u5165\u6570\u636e\u7ed3\u6784\uff0c\u518d\u5bf9\u4e8e\u5904\u5728\u8be5\u6b21\u4e8c\u5206\u533a\u95f4\u5185\u7684\u8be2\u95ee\u67e5\u8be2\u6570\u636e\u7ed3\u6784\u4e2d\u88ab\u8fd9\u4e2a\u6c34\u679c\u8986\u76d6\u7684\u76d8\u5b50\u7684\u4e2a\u6570\u662f\u5426\u5927\u4e8eK\uff0c\u518d\u8003\u8651\u5c06\u6b64\u6b21\u8be2\u95ee\u5212\u5206\u7ed9\u5de6\u8fb9\u6216\u662f\u53f3\u8fb9\u3002\n\n\u8003\u8651\u5982\u4f55\u4f7f\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u8fd9\u6837\u7684\u94fe\u3002\u6211\u4eec\u9996\u5148\u5bf9\u4e8e\u6574\u9897\u4ee51\u4e3a\u6839\u8282\u70b9\u7684\u6811\u5efa\u7acbDFS\u5e8f\uff0c\u5e76\u4e14\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u5728DFS\u5e8f\u4e2d\u7684\u4f4d\u7f6e\u3001\u8be5\u8282\u70b9\u5b50\u6811\u5728DFS\u5e8f\u4e2d\u7684\u7ed3\u675f\u4f4d\u7f6e\uff08\u4ee3\u7801\u4e2d\u4e3ainn\u548cott\uff09\n\n\u5047\u8bbe\u4e00\u4e2a\u76d8\u5b50\u7684\u5de6\u53f3\u7aef\u70b9\u5206\u522b\u4e3al,r\uff0c\u4ee4LCA(l,r)=T,\u5bf9\u4e8eT\u548cl\uff0cr\u7684\u5173\u7cfb\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\u3002\n\n\u60c5\u51b51\uff0cT\u4e0el\uff0cr\u5747\u4e0d\u540c\u3002\u6b64\u65f6\uff0c\u82e5\u6709\u4e00\u4e2a\u6c34\u679c\u7684\u4e00\u4e2a\u7aef\u70b9\u5728$[inn[l],ott[l]]$\uff0c\u4e00\u4e2a\u7aef\u70b9\u5728$[inn[r],ott[r]]$\n\uff0c\u5219\u8fd9\u4e2a\u6c34\u679c\u5b8c\u5168\u5305\u542b\u4e86\u8fd9\u4e2a\u76d8\u5b50\u3002\n\n\u60c5\u51b52\uff0c\u4e0d\u59a8\u8bbeT\u4e3al\uff0c\u5b9a\u4e49\u5728l\uff0cr\u8fd9\u6761\u94fe\u4e0a\uff0c\u4e14\u6bd4l\u7684\u6df1\u5ea6\u59271\u7684\u70b9\u4e3ak\u3002\u6b64\u65f6\uff0c\u82e5\u6709\u4e00\u4e2a\u6c34\u679c\u7684\u5de6\u7aef\u70b9\u5728$[inn[r],ott[r]]$\uff0c\u53f3\u7aef\u70b9\u4e0d\u5728$[inn[k],ott[k]]$\uff0c\u5219\u8fd9\u4e2a\u6c34\u679c\u5b8c\u5168\u5305\u542b\u4e86\u8fd9\u4e2a\u76d8\u5b50\u3002\n\n\u5219\u8be5\u95ee\u9898\u88ab\u8f6c\u5316\u6210\u4e86\u4e00\u4e2a\u4e8c\u7ef4\u6570\u70b9\u95ee\u9898\uff0c\u7b80\u5355BIT+\u626b\u63cf\u7ebf+\u6574\u4f53\u4e8c\u5206\u5373\u53ef\uff0c\u5177\u4f53\u7ec6\u8282\u8be6\u89c1\u4ee3\u7801\u3002\n\n``` c++\n#include<bits/stdc++.h>\nusing namespace std;\nint n,p,q,ocnt;\nint inn[40010],ott[40010],ord[40010],fa[40010],tp[40010][17],dep[40010];\nint pw[20];\nvector<int>ed[40010];\nint num[40010],alis[40010];\nint ncnt;\nmap<int,int>lis; \nchar c;\ninline void read(int &a) { \n\ta=0,c=getchar();\n\twhile(!isdigit(c)) c=getchar();\n\twhile(isdigit(c)) a=a*10+c-'0',c=getchar();\n} \nvoid lish() { \n\tint nb=0;\n\tsort(num+1,num+ncnt+1);\n\tnum[0]=-123123;\n\tfor(int i=1;i<=ncnt;++i) { \n\t\tif(num[i]!=num[i-1]) lis[num[i]]=++nb,alis[nb]=num[i];\n\t} \n} \ninline void ade(int l,int r) {ed[l].push_back(r),ed[r].push_back(l);} \nvoid dfs(int k,int fro) { \n\tinn[k]=++ocnt,fa[k]=tp[k][0]=fro,dep[k]=dep[fro]+1,ord[ocnt]=k;\n\tfor(int i=0;i<ed[k].size();++i) { \n\t\tint tar=ed[k][i];\n\t\ttar==fro ? void() : dfs(tar,k);\n\t} ott[k]=ocnt;\n} \nvoid b_init() { \n\tpw[0]=1;for(int i=1;i<=16;++i) pw[i]=2*pw[i-1];\n\tfor(int i=1;i<=16;++i) { for(int j=1;j<=n;++j) { \n\t\t\ttp[j][i]=tp[tp[j][i-1]][i-1];\n\t} } \n} \nint lca(int l,int r) { \n\tif(dep[l]>dep[r]) swap(l,r);\n\tif(dep[l]!=dep[r]) { for(int i=15;i>=0;--i) if(dep[tp[r][i]]>dep[l]) r=tp[r][i]; r=tp[r][0];} \n\tif(l==r) return l;\n\tfor(int i=16;i>=0;--i) if(tp[l][i]!=tp[r][i]) l=tp[l][i],r=tp[r][i];\n\treturn tp[l][0];\n} \nint go(int k,int len) { \n\tfor(int i=16;i>=0;--i) if(len-pw[i]>=0) k=tp[k][i],len-=pw[i];\n\treturn k;\n} \nnamespace ds { \n\t#define low(x) (x&(-x))\n\tint lim;\n\tint num[50010];\n\tinline void init() { \n\t\tlim=n;\n\t} \n\tinline void add(const int &l,const int &r,const int &val) { \n\t\tfor(register int i=l;i<=lim;i+=low(i)) num[i]+=val;\n\t\tfor(register int i=r+1;i<=lim;i+=low(i)) num[i]-=val;\n\t} \n\tinline int query(const int &k) { \n\t\tregister int ret=0;\n\t\tfor(register int i=k;i>0;i-=low(i)) ret+=num[i];\n\t\treturn ret;\n\t} \n} \nstruct op { //0-> change   1->query\n\tint type,l,r,val,x,num;\n\tbool operator < (const op &a) const { \n\t\treturn x==a.x ? type < a.type : x < a.x;\n\t} \n};\nop sth[210010],lef[210010],rig[210010];\nint ans[40010];\nint xl,xr,yl,yr,scnt,acnt;\nvoid supdiv(int ql,int qr,int vl,int vr) { \n\tint lcnt=0,rcnt=0,tcnt=0;\n\tif(ql>qr) return;\n\tif(vl==vr) { \n\t\tfor(int i=ql;i<=qr;++i) if(sth[i].type==1) ans[sth[i].num]=vl;\n\t\treturn;\n\t} \n\tint mid=vl+vr>>1;\n\tfor(register int i=ql;i<=qr;++i) { \n\t\tif(sth[i].type==1) { \n\t\t\tint nv=ds::query(sth[i].l);\n\t\t\tif(sth[i].val<=nv) lef[++lcnt]=sth[i];\n\t\t\telse sth[i].val-=nv,rig[++rcnt]=sth[i];\n\t\t} \n\t\telse { \n\t\t\tif(sth[i].val<=mid) { \n\t\t\t\tds::add(sth[i].l,sth[i].r,sth[i].num),lef[++lcnt]=sth[i];\n\t\t\t} \n\t\t\telse rig[++rcnt]=sth[i];\n\t\t} \n\t} \n\tfor(int i=1;i<=lcnt;++i) sth[ql+(tcnt++)]=lef[i];\n\tfor(int i=1;i<=rcnt;++i) sth[ql+(tcnt++)]=rig[i];\n\tsupdiv(ql,ql+lcnt-1,vl,mid),supdiv(ql+lcnt,qr,mid+1,vr);\n} \nint main() { \n\tint l,r,val;\n\tread(n),read(p),read(q);\n\tfor(int i=1;i<n;++i) read(l),read(r),ade(l,r);\n\tdfs(1,1),b_init();ds::init();\n\tfor(register int i=1;i<=p;++i) { \n\t\tread(l),read(r),read(val);int lc=lca(l,r);\n\t\tnum[++ncnt]=val;\n\t\tif(lc!=l&&lc!=r) { \n\t\t\txl=inn[l],xr=ott[l],yl=inn[r],yr=ott[r];\n\t\t\tif(xl>yl) swap(xl,yl),swap(xr,yr);\n\t\t\tsth[++scnt]=(op){0,yl,yr,val,xl,1};\n\t\t\tsth[++scnt]=(op){0,yl,yr,val,xr+1,-1};\n\t\t\tif(xl>xr||yl>yr) scnt-=2,scnt=max(0,scnt);\n\t\t} \n\t\telse { \n\t\t\tif(dep[r]<dep[l]) swap(l,r);// L is higher.\n\t\t\tint nd=dep[r]-dep[l],ntar=go(r,nd-1);\n\t\t\tyl=inn[r],yr=ott[r],xl=1,xr=inn[ntar]-1;\n\t\t\tif(xl>yl) swap(xl,yl),swap(xr,yr);\n\t\t\tsth[++scnt]=(op){0,yl,yr,val,xl,1};\n\t\t\tsth[++scnt]=(op){0,yl,yr,val,xr+1,-1};\n\t\t\tif(xl>xr||yl>yr) scnt-=2,scnt=max(0,scnt);\n\t\t\txl=inn[r],xr=ott[r],yl=ott[ntar]+1,yr=ott[1];\n\t\t\tif(xl>yl) swap(xl,yl),swap(xr,yr);\n\t\t\tsth[++scnt]=(op){0,yl,yr,val,xl,1};\n\t\t\tsth[++scnt]=(op){0,yl,yr,val,xr+1,-1};\n\t\t\tif(xl>xr||yl>yr) scnt-=2,scnt=max(0,scnt);\n\t\t} \n\t} \n\tfor(register int i=1;i<=q;++i) { \n\t\tread(l),read(r),read(val);\n\t\tint nx=inn[l],ny=inn[r];\n\t\tif(nx>ny) swap(nx,ny);\n\t\tsth[++scnt]=(op){1,ny,0,val,nx,++acnt};\n\t} sort(sth+1,sth+scnt+1);\n\tlish();\n\tfor(register int i=1;i<=scnt;++i) if(sth[i].type==0) sth[i].val=lis[sth[i].val];\n\tsupdiv(1,scnt,1,n);\n\tfor(register int i=1;i<=acnt;++i) printf(\"%d\\n\",alis[ans[i]]);\n\treturn 0;\n} \n```\n",
        "postTime": 1542886208,
        "uid": 47981,
        "name": "liangs333",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3242 \u3010[HNOI2015]\u63a5\u6c34\u679c\u3011"
    },
    {
        "content": "\u601d\u8def{\n\n\nBZOJ\u4e0a\u8fd9\u4e2a\u9898\u88ab\u5361\u8bc4\u6d4b\u4e86,\u7ed3\u679c\u6539\u6210\u4e86\u6743\u9650\u9898\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u53ea\u597d\u5230WG\u7684OJ\u4e0a\u5199\u3002\u3002\u3002\u3002\u3002\u3002\n\n\n\u9996\u5148\u4e0d\u8003\u8651\u8def\u5f84\u7684\u8bdd\u662f\u533a\u95f4K\u5927\u7684\u95ee\u9898\uff0c\u8003\u8651\u4f7f\u7528\u6574\u4f53\u4e8c\u5206\u3002\n\n\n\u7edf\u8ba1\u5728\u7b54\u6848\u533a\u95f4\u5185\u7684\u8986\u76d6\u7684\u76d8\u5b50\u6570\u91cf,\n\n\n\u6bd4\u8f83\u6bcf\u6b21\u8be2\u95ee\u7684K\u503c\u5927\u5c0f\u5224\u65ad\u4e22\u5165\u5de6\u7b54\u6848\u533a\u95f4\u8fd8\u662f\u53f3\u7b54\u6848\u533a\u95f4\u3002\n\n\n(\u5927\u4e8eK\u4e22\u5165\u53f3\u533a\u95f4\uff0c\u5c0f\u4e8eK\u4e22\u5165\u5de6\u533a\u95f4:ps:\u8fd8\u8981\u7edf\u8ba1\u8d21\u732e\uff01)\u3002\n\n\n\u8fd9\u6837\u5c31\u89e3\u51b3\u4e86\u7b54\u6848\u67e5\u8be2\u95ee\u9898\u3002\u5173\u952e\u662f\u600e\u4e48\u641e\u51fa\u6240\u8986\u76d6\u7684\u76d8\u5b50\u6570\u5462\uff1f\uff1f\uff1f\uff1f\uff1f\uff1f\n\n\n\u6211\u4eec\u4e0d\u59a8\u5206\u7c7b\u8ba8\u8bba:\n\n\n\u2460\u4e00\u4e2a\u76d8\u5b50\u5de6\u53f3\u7aef\u70b9a,b\u5176\u4e2d\u4e00\u4e2a\u4e3aLCA\u65f6\uff1a\n\n\n\u6c34\u679c\u4e00\u7aef\u4e00\u5b9a\u5728\u6df1\u5ea6\u8f83\u6df1\u7684\u76d8\u5b50\u7aef\u70b9\u7684\u5b50\u6811\u4e2d,\u53e6\u4e00\u7aef\u5728LCA\u5916\u3002\n\n\n\u2461a,b\u5747\u4e0d\u4e3aLCA\u65f6\uff1a\u6c34\u679c\u4e24\u7aef\u90fd\u5728\u4e24\u7aef\u76d8\u5b50\u7684\u5b50\u6811\u4e2d\u3002\n\n\n\u5177\u4f53\u7528\u6570\u91cf\u5173\u7cfb\u8868\u793a\u7684\u8bdd\uff0c\u6211\u4eec\u8003\u8651\u7528DFS\u5e8f\u3002\n\n\n\u8bbeDFN[i]\u4e3ai\u7684dfs\u5e8f\uff0cLAST[i]\u4e3a\u4ee5i\u4e3a\u6839\u7684\u5b50\u6811\u7684DFS\u5e8f\u7684\u6700\u5927\u503c.\n\n\n\u5bf9\u4e8e\u2460\uff1a\u6c34\u679c\u4e24\u7aefu,v,\u6ee1\u8db3:DFN[b]<=DFN[v]<=LAST[b],\n\n\n\n\u3000\u3000(1<=DFN[u]<=DFN[w]-1)\u6216(LAST[w]+1<=DFN[u]<=n)\n\n\u5bf9\u4e8e\u2461\uff1a\u6c34\u679c\u4e24\u7aefu,v\u6ee1\u8db3:DFN[a]<=DFN[u]<=LAST[a],DFN[b]<=DFN[v]<=LAST[b].\n\n\n\u628a\u8fd9\u4e9b\u76d8\u5b50\uff0c\u6c34\u679c\u5206\u522b\u62bd\u8c61\u6210\u4e00\u4e2a\u4e2a\u77e9\u5f62\uff0c\u70b9\uff1a\u95ee\u9898\u8f6c\u5316\u6210\u6c42\u70b9\u88ab\u591a\u5c11\u77e9\u5f62\u8986\u76d6\uff01\n\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u626b\u63cf\u7ebf\u7b97\u6cd5\u89e3\u51b3\u67e5\u8be2\u95ee\u9898\u4e86\uff01\n\n\n}-",
        "postTime": 1501324847,
        "uid": 23122,
        "name": "\u57c3\u7f57\u8292\u963f\u8001\u5e08\u00b7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3242 \u3010[HNOI2015]\u63a5\u6c34\u679c\u3011"
    },
    {
        "content": "\u4ea4\u4e86\u4e00\u53d1\u7ed3\u679c\u624d\u7b2c\u4e8c\u9875\u5462\uff0c\u679c\u7136\u4eba\u4e11\u5e38\u6570\u5927...\uff08\u987a\u4fbf\u5728\u6253\u4ee3\u7801\u7684\u65f6\u5019\u53d1\u73b0\u81ea\u5df1\u51fa\u7684\u4e00\u9053\u9898\u8bc4\u6d4b\u7684\u65f6\u5019\u88ab\u4e00\u4f4d\u795e\u4ed9 0 ms \u8fc7\u4e86\uff0c\u6807\u7b97 1.470 S /kk\uff09\n\n\u6b63\u7ecf\u8bb2\u9898\u89e3\uff1a\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u628a\u539f\u6811\u6811\u5256\uff0c\u7136\u540e\u8bb0\u5f55\u6811\u5256\u7684 dfs \u5e8f\uff08\u51fa\u5165\u90fd\u8981\u8bb0\uff09\uff0c\u7136\u540e\u6211\u4eec\u628a\u6bcf\u6761\u8def\u5f84\u6620\u5c04\u5230\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u4e00\u4e2a\u70b9\n\n\u7136\u540e\u9898\u76ee\u76d8\u5b50\u8981\u662f\u82f9\u679c\u7684\u5b50\u8def\u5f84\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u4e00\u4e2a\u76d8\u5b50\u80fd\u63a5\u4f4f\u7684\u82f9\u679c\u8def\u5f84\u8303\u56f4\u8868\u793a\u4e3a\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u4e00\u4e2a\u77e9\u5f62\u533a\u95f4\uff08\u6216\u8005\u4e24\u4e2a\uff09\uff0c\u7136\u540e\u6211\u4eec\u8fd9\u65f6\u5019\u53ea\u8981\u67e5\u67d0\u4e2a\u70b9\u7684\u7b2c k \u5c0f\u8986\u76d6\u8986\u76d6\u77e9\u5f62\u5c31\u597d\u4e86\uff0c\u8c8c\u4f3c\u662f\u53ef\u4ee5\u6811\u5957\u6811\u7684 QwQ\n\n\u4e0d\u8fc7\u8fd9\u91cc\u7528\u4e86\u6574\u4f53\u4e8c\u5206\uff0c\u6211\u4eec\u4ee5\u7b54\u6848\u4e3a\u4e8c\u5206\u7684\u503c\uff0c\u7136\u540e\u5206\u5c42\u786e\u5b9a\u6bcf\u4e2a\u8be2\u95ee\u7684\u7b54\u6848\u4f4d\u7f6e\u5c31\u597d\u4e86\uff0c\u5206\u6cbb\u7684\u65f6\u5019\u7528\u5230\u4e86\u626b\u63cf\u7ebf\u601d\u60f3\u4ee5\u53ca\u5e38\u6570\u8f83\u5c0f\uff08\u4e14\u597d\u5199\uff09\u7684\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\n\n\u81f3\u4e8e\u6811\u72b6\u6570\u7ec4\u4e2d\u8be2\u95ee\u5185\u5bb9\u662f\u5355\u70b9\u88ab\u8986\u76d6\u4e86\u591a\u5c11\u6b21\uff0c\u56e0\u4e3a\u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u4e0d\u7528\u7ba1\u4ec0\u4e48 k \u5c0f\u4e0d k \u5c0f\u4e86\uff0c\u67e5\u8be2\u51fa\u6765\u548c\u8be2\u95ee\u7684 k \u6bd4\u4e00\u4e0b\uff0c\u5927\u7684\u51cf\u53bb\u8986\u76d6\u6b21\u6570\u4e22\u53f3\u8fb9\uff0c\u5c0f\u7684\u76f4\u63a5\u4e22\u5de6\u8fb9\uff0c\u7136\u540e\u7ee7\u7eed\u5411\u4e0b\u4e8c\u5206\u5c31\u597d\u4e86\n\n\u672c\u672b\u5012\u7f6e\u4e00\u4e0b\uff0c\u73b0\u5728\u8bb2\u600e\u4e48\u628a\u76d8\u5b50\u80fd\u63a5\u4f4f\u7684\u82f9\u679c\u8def\u5f84\u8303\u56f4\u8868\u793a\u51fa\u6765\uff1a\n\n\u6211\u4eec\u53d1\u73b0\u5982\u679c\u76d8\u5b50\u7684\u8def\u5f84\u4e24\u7aef\u70b9 x\u3001y \u4e3a\u5144\u5f1f\u5173\u7cfb\uff0c\u90a3\u4e48\u80fd\u63a5\u4f4f\u7684\u82f9\u679c\u5c31\u8981\u4e24\u7aef\u5206\u522b\u5728 x \u548c y \u5b50\u6811\u5185\uff0c\u7136\u540e\u6211\u4eec\n\n\u7136\u540e\u76d8\u5b50\u8def\u5f84\u4e24\u7aef\u70b9 x\u3001y \u662f\u7236\u5b50\u5173\u7cfb\uff0c\u90a3\u4e48\u82f9\u679c\u4e24\u7aef\u4e00\u4e2a\u5728\u513f\u5b50\u5b50\u6811\u5185\uff0c\u53e6\u4e00\u4e2a\u5c31\u662f\u9664\u53bb y \u5bf9\u5e94\u4e0a\u53bb\u7684 x \u5b50\u8282\u70b9\u7684\u5b50\u6811\u4ee5\u5916\u7684\u4efb\u610f\u4e00\u4e2a\u70b9\uff0c\u4e0d\u5982\u8fd9\u4e48\u89e3\u91ca\uff1a\n\n>\u5047\u8bbe\u8def\u5f84\u4e3a x,a,b,c,d,.....,y \uff0c\u90a3\u4e48 y \u5bf9\u5e94\u4e0a\u53bb\u7684 x \u5b50\u8282\u70b9\u5c31\u662f a \uff0c\u7136\u540e\u53e6\u4e00\u4e2a\u8282\u70b9\u5c31\u4e0d\u80fd\u5728 a \u8fd9\u68f5\u5b50\u6811\u5185\n\n\u8fd9\u4e2a\u5224\u65ad\u7236\u5b50\u5173\u7cfb\u5f88\u597d\u5b9e\u73b0\uff0c\u7528 dfs \u5e8f\u5c31\u597d\u4e86\uff0c\u627e\u5230 a \u8fd9\u4e2a\u8282\u70b9\u6709\u70b9\u56f0\u96be\uff0c\u4f46\u5b9e\u9645\u4e0a\u7528\u6811\u5256\u5c31\u80fd\u5b9e\u73b0\uff1a\n\n>\u9996\u5148\u505a\u6cd5\u662f\u6211\u4eec\u8ba9 y \u4e00\u76f4\u8df3\u5230 f[top[y]] \uff0c \u7136\u540e\u6211\u4eec\u8003\u8651\u8282\u70b9\u95f4 top \u7684\u5173\u7cfb\n\n>\u5982\u679c a \u662f x \u7684\u91cd\u513f\u5b50\uff0c\u90a3\u4e48\u6211\u4eec\u5728\u53d1\u73b0 top[y]==top[x] \u7684\u65f6\u5019\u5c31\u786e\u8ba4\u4e86\u8fd9\u4e2a\u5173\u7cfb\uff0c\u90a3\u4e48\u76f4\u63a5\u8fd4\u56de son[x] \u5c31\u884c\u4e86\n\n>\u5982\u679c\u662f\u8f7b\u513f\u5b50\uff0c\u90a3\u4e48\u6211\u4eec\u5df2\u77e5\u8df3\u76f4\u5230 f[top[y]]=x \uff0c\u8fd4\u56de top[y] \u5373\u53ef\n\n\n\u522b\u7684\u6ca1\u4e86\uff0c\u5e38\u89c4\u64cd\u4f5c\uff08\u54b1\u8c8c\u4f3c\u505a\u4e86\u597d\u51e0\u5929\uff1f\u3010\u9003\uff09\n\n\n# Code\n\n\u72e0\u77ed\u7684\u4ee3\u7801\uff01\n```\n//by Judge\n#define HGS_AK_IOI true\n#include<bits/stdc++.h>\n#define Rg register\n#define fp(i,a,b) for(Rg int i=(a),I=(b)+1;i<I;++i)\n#define fd(i,a,b) for(Rg int i=(a),I=(b)-1;i>I;--i)\n#define go(u) for(Rg int i=head[u],v=e[i].to;i;v=e[i=e[i].nxt].to)\n#define open(s) freopen(s\".in\",\"r\",stdin),freopen(s\".out\",\"w\",stdout)\n#define ll long long\nusing namespace std;\nconst int M=2e5+3;\ntypedef int arr[M];\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline int read(){ int x=0,f=1; char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0'; return x*f;\n} char sr[1<<21],z[20];int CCF=-1,Z;\ninline void Ot(){fwrite(sr,1,CCF+1,stdout),CCF=-1;}\ninline void print(int x,char chr='\\n'){\n\tif(CCF>1<<20)Ot();if(x<0)sr[++CCF]=45,x=-x;\n\twhile(z[++Z]=x%10+48,x/=10);\n\twhile(sr[++CCF]=z[Z],--Z);sr[++CCF]=chr;\n}\nint n,m,P,Q; arr h,ans;\nstruct Line{ int x,l,r,v,val; Line(){}\n\tLine(int _x,int _l,int _r,int _v,int V){x=_x,l=_l,r=_r,v=_v,val=V;}\n\tbool operator <(const Line& b)const{return x<b.x;}\n}Li[M],*p[M],*tp[M];\nstruct Qry{ int x,y,k,id; Qry(){}\n\tQry(int _x,int _y,int _k,int _id){x=_x,y=_y,k=_k,id=_id;}\n\tbool operator <(const Qry& b)const{return x^b.x?x<b.x:id>b.id;}\n}Qr[M],*q[M],*tq[M];\nnamespace TC{ int tim; arr f,son,siz,dep,top,In,Out;\n\tint pat,head[M]; struct Edge{int to,nxt;}e[M<<1];\n\tinline void add(int u,int v){\n\t\te[++pat]=(Edge){v,head[u]},head[u]=pat;\n\t\te[++pat]=(Edge){u,head[v]},head[v]=pat;\n\t}\n\tvoid dfs(int u,int fa){ dep[u]=dep[fa]+1,siz[u]=1;\n\t\tgo(u) if(v^fa){ f[v]=u,dfs(v,u),siz[u]+=siz[v];\n\t\t\tif(siz[v]>siz[son[u]]) son[u]=v;\n\t\t}\n\t}\n\tvoid dfs(int u){ In[u]=++tim; if(!top[u]) top[u]=u;\n\t\tif(son[u]) top[son[u]]=top[u],dfs(son[u]);\n\t\tgo(u) if(v^f[u]&&v^son[u]) dfs(v); Out[u]=tim;\n\t}\n\tinline int Get(int u,int p){\n\t\tfor(;top[u]^top[p];u=f[top[u]])\n\t\t\tif(f[top[u]]==p) return top[u];\n\t\treturn top[u]==u?u:son[p];\n\t}\n} using namespace TC;\nnamespace BIT{ arr c;\n#define lowbit(x) (x&-x)\n\tinline void add(int x,int v){ while(x<=n) c[x]+=v,x+=lowbit(x); }\n\tinline int ask(int x){ Rg int s=0; while(x) s+=c[x],x^=lowbit(x); return s; }\n\tinline void upd(int l,int r,int v){ add(l,v),add(r+1,-v); }\n}\nvoid CDQ(int pl,int pr,int ql,int qr,int hl,int hr){\n\tif(pl>pr||ql>qr) return ; int mid=(hl+hr)>>1;\n\tif(hl==hr){ fp(i,ql,qr) ans[q[i]->id]=h[hl]; return ; }\n\tRg int tpl=pl-1,tpr=pr+1,tql=ql-1,tqr=qr+1,j=pl,pp;\n\tfp(i,ql,qr){\n\t\twhile(j <= pr && p[j]->x <= q[i]->x)\n\t\t\tif(p[j]->val > h[mid]) tp[--tpr]=p[j],++j;\n\t\t\telse BIT::upd(p[j]->l, p[j]->r, p[j]->v),tp[++tpl]=p[j],++j;\n\t\t(q[i]->k > (pp=BIT::ask(q[i]->y))) ? q[i]->k -= pp,tq[--tqr]=q[i] : tq[++tql]=q[i];\n\t}\n\tfp(i,pl,j-1) if(p[i]->val <= h[mid]) BIT::upd(p[i]->l, p[i]->r, -p[i]->v);\n\twhile(j<=pr) ((p[j]->val > h[mid])?tp[--tpr]:tp[++tpl])=p[j],++j;\n\tfp(i,pl,tpl) p[i]=tp[i]; fp(i,tpr,pr) p[pr+tpr-i]=tp[i];\n\tfp(i,ql,tql) q[i]=tq[i]; fp(i,tqr,qr) q[qr+tqr-i]=tq[i];\n\tCDQ(pl,tpl,ql,tql,hl,mid),CDQ(tpr,pr,tqr,qr,mid+1,hr);\n}\nsigned main(){\n\tn=read(),P=read(),Q=read(); int x,y,z;\n\tfp(i,2,n) x=read(),y=read(),add(x,y); dfs(1,0),dfs(1);\n\tfp(i,1,P){ x=read(),y=read(),h[i]=read(); if(In[x]>In[y]) swap(x,y);\n\t\tif(In[x]<=In[y]&&In[y]<=Out[x]){ z=Get(y,x);\n\t\t\tLi[++m]=Line(1,In[y],Out[y],1,h[i]),Li[++m]=Line(In[z],In[y],Out[y],-1,h[i]);\n\t\t\tif(Out[z]<n) Li[++m]=Line(In[y],Out[z]+1,n,1,h[i]),Li[++m]=Line(Out[y]+1,Out[z]+1,n,-1,h[i]);\n\t\t} else Li[++m]=Line(In[x],In[y],Out[y],1,h[i]),Li[++m]=Line(Out[x]+1,In[y],Out[y],-1,h[i]);\n\t}\n\tfp(i,1,Q){ x=read(),y=read(),z=read(); if(In[x]>In[y]) swap(x,y); Qr[i]=Qry(In[x],In[y],z,i); }\n\tsort(Li+1,Li+1+m); fp(i,1,m) p[i]=Li+i; sort(Qr+1,Qr+1+Q); fp(i,1,Q) q[i]=Qr+i;\n\tsort(h+1,h+1+P),*h=unique(h+1,h+1+P)-h-1,CDQ(1,m,1,Q,1,h[0]); fp(i,1,Q) print(ans[i]); return Ot(),0;\n}\n```\n\n\n\uff08\u88ab\u6247\u4e86\u4e24\u5df4\u638c\u540e\uff09\u4ee5\u540e\u518d\u4e5f\u4e0d\u538b\u884c\u4e86\uff08\u53cd\u6b63\u5c31\u662f\u9999\uff09\n\n```\n//by Judge\n#define HGS_AK_IOI true\n#include<bits/stdc++.h>\n#define Rg register\n#define fp(i,a,b) for(Rg int i=(a),I=(b)+1;i<I;++i)\n#define fd(i,a,b) for(Rg int i=(a),I=(b)-1;i>I;--i)\n#define go(u) for(Rg int i=head[u],v=e[i].to;i;v=e[i=e[i].nxt].to)\n#define open(s) freopen(s\".in\",\"r\",stdin),freopen(s\".out\",\"w\",stdout)\n#define ll long long\nusing namespace std;\nconst int M=2e5+3;\ntypedef int arr[M];\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline int read(){ int x=0,f=1; char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0'; return x*f;\n} char sr[1<<21],z[20];int CCF=-1,Z;\ninline void Ot(){fwrite(sr,1,CCF+1,stdout),CCF=-1;}\ninline void print(int x,char chr='\\n'){\n\tif(CCF>1<<20)Ot();if(x<0)sr[++CCF]=45,x=-x;\n\twhile(z[++Z]=x%10+48,x/=10);\n\twhile(sr[++CCF]=z[Z],--Z);sr[++CCF]=chr;\n}\nint n,m,P,Q; arr h,ans;\nstruct Line{ int x,l,r,v,val; Line(){}\n\tLine(int _x,int _l,int _r,int _v,int V){x=_x,l=_l,r=_r,v=_v,val=V;}\n\tbool operator <(const Line& b)const{return x<b.x;}\n}Li[M],*p[M],*tp[M];\nstruct Qry{ int x,y,k,id; Qry(){}\n\tQry(int _x,int _y,int _k,int _id){x=_x,y=_y,k=_k,id=_id;}\n\tbool operator <(const Qry& b)const{return x^b.x?x<b.x:id>b.id;}\n}Qr[M],*q[M],*tq[M];\nnamespace TC{ //\u6a21\u677f\u600e\u80fd\u4e0d\u538b\u884c /kk \n\tint tim; arr f,son,siz,dep,top,In,Out;\n\tint pat,head[M];\n\tstruct Edge{int to,nxt;}e[M<<1];\n\tinline void add(int u,int v){\n\t\te[++pat]=(Edge){v,head[u]},head[u]=pat;\n\t\te[++pat]=(Edge){u,head[v]},head[v]=pat;\n\t}\n\tvoid dfs(int u,int fa){ dep[u]=dep[fa]+1,siz[u]=1;\n\t\tgo(u) if(v^fa){ f[v]=u,dfs(v,u),siz[u]+=siz[v];\n\t\t\tif(siz[v]>siz[son[u]]) son[u]=v;\n\t\t}\n\t}\n\tvoid dfs(int u){ In[u]=++tim; if(!top[u]) top[u]=u;\n\t\tif(son[u]) top[son[u]]=top[u],dfs(son[u]);\n\t\tgo(u) if(v^f[u]&&v^son[u]) dfs(v); Out[u]=tim;\n\t}\n\tinline int Get(int u,int p){\n\t\tfor(;top[u]^top[p];u=f[top[u]])\n\t\t\tif(f[top[u]]==p) return top[u];\n\t\treturn top[u]==u?u:son[p];\n\t}\n} using namespace TC;\nnamespace BIT{ arr c;\n#define lowbit(x) (x&-x)\n\tinline void add(int x,int v){ while(x<=n) c[x]+=v,x+=lowbit(x); }\n\tinline int ask(int x){ Rg int s=0; while(x) s+=c[x],x^=lowbit(x); return s; }\n\tinline void upd(int l,int r,int v){ add(l,v),add(r+1,-v); }\n}\nvoid CDQ(int pl,int pr,int ql,int qr,int hl,int hr){\n\tif(pl>pr||ql>qr) return ;\n\tif(hl==hr){\n\t\tfp(i,ql,qr) ans[q[i]->id]=h[hl];\n\t\treturn ;\n\t}\n\tint mid=(hl+hr)>>1;\n\tRg int tpl=pl-1,tpr=pr+1;\n\tRg int tql=ql-1,tqr=qr+1;\n\tRg int j=pl,pp;\n\tfp(i,ql,qr){\n\t\twhile(j <= pr && p[j]->x <= q[i]->x){\n\t\t\tif(p[j]->val > h[mid])\n\t\t\t\ttp[--tpr]=p[j],++j;\n\t\t\telse{\n\t\t\t\tBIT::upd(p[j]->l, p[j]->r, p[j]->v),\n\t\t\t\ttp[++tpl]=p[j],++j;\n\t\t\t}\n\t\t}\n\t\tif(q[i]->k > (pp=BIT::ask(q[i]->y))) \n\t\t\tq[i]->k -= pp,tq[--tqr]=q[i];\n\t\telse tq[++tql]=q[i];\n\t}\n\tfp(i,pl,j-1) if(p[i]->val <= h[mid])\n\t\tBIT::upd(p[i]->l, p[i]->r, -p[i]->v);\n\twhile(j<=pr){\n\t\tif(p[j]->val > h[mid])\n\t\t\ttp[--tpr]=p[j],++j;\n\t\telse tp[++tpl]=p[j],++j;\n\t}\n\tfp(i,pl,tpl) p[i]=tp[i];\n\tfp(i,tpr,pr) p[pr+tpr-i]=tp[i];\n\tfp(i,ql,tql) q[i]=tq[i];\n\tfp(i,tqr,qr) q[qr+tqr-i]=tq[i];\n\tCDQ(pl,tpl,ql,tql,hl,mid);\n\tCDQ(tpr,pr,tqr,qr,mid+1,hr);\n}\nsigned main(){\n\tn=read(),P=read(),Q=read();\n\tint x,y,z;\n\tfp(i,2,n) x=read(),y=read(),add(x,y);\n\tdfs(1,0),dfs(1);\n\tfp(i,1,P){\n\t\tx=read(),y=read(),h[i]=read();\n\t\tif(In[x]>In[y]) swap(x,y);\n\t\tif(In[x]<=In[y]&&In[y]<=Out[x]){\n\t\t\tz=Get(y,x);\n\t\t\tLi[++m]=Line(1,In[y],Out[y],1,h[i]);\n\t\t\tLi[++m]=Line(In[z],In[y],Out[y],-1,h[i]);\n\t\t\tif(Out[z]<n){\n\t\t\t\tLi[++m]=Line(In[y],Out[z]+1,n,1,h[i]);\n\t\t\t\tLi[++m]=Line(Out[y]+1,Out[z]+1,n,-1,h[i]);\n\t\t\t}\n\t\t} else{\n\t\t\tLi[++m]=Line(In[x],In[y],Out[y],1,h[i]);\n\t\t\tLi[++m]=Line(Out[x]+1,In[y],Out[y],-1,h[i]);\n\t\t}\n\t}\n\tfp(i,1,Q){\n\t\tx=read(),y=read(),z=read();\n\t\tif(In[x]>In[y]) swap(x,y);\n\t\tQr[i]=Qry(In[x],In[y],z,i);\n\t}\n\tsort(Li+1,Li+1+m);\n\tfp(i,1,m) p[i]=Li+i;\n\tsort(Qr+1,Qr+1+Q);\n\tfp(i,1,Q) q[i]=Qr+i;\n\tsort(h+1,h+1+P);\n\t*h=unique(h+1,h+1+P)-h-1;\n\tCDQ(1,m,1,Q,1,h[0]);\n\tfp(i,1,Q) print(ans[i]);\n\treturn Ot(),0;\n}\n```\n\n\n# \u6548\u679c\u5c55\u793a\n\n\u538b\u884c\u524d\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/tcvwc71j.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u538b\u884c\u540e\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/yolfs0qy.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\n",
        "postTime": 1573560573,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3242 \u3010[HNOI2015]\u63a5\u6c34\u679c\u3011"
    },
    {
        "content": "[\u5b89\u5229$\\mathbb{blog}$](https://ctz45562.github.io/2019/09/25/%E6%B4%9B%E8%B0%B7-P3242-HNOI2015-%E6%8E%A5%E6%B0%B4%E6%9E%9C/)\n\n[\u4f20\u9001\u95e8](https://www.luogu.org/problem/P3242)\n\n> \u4e0d\u8981...\u4e0d\u8981\u8bef\u4f1a\uff0c\u6211\u4e0d\u662f\u9488\u5bf9\u83ab\u961f\uff0c\u6211\u662f\u8bf4\u5728\u5ea7\u7684\u83ab\u961f\u90fd\u5047\u4e86\u3002\n\n~~\uff08\u867d\u7136\u6211\u4e5f\u5199\u7684\u5047\u83ab\u961f\uff09~~\n\n\u7ed9\u4f60\u4e00\u68f5\u6811\u548c\u82e5\u5e72\u6761\u5e26\u6743\u6a21\u5f0f\u94fe\uff0c\u591a\u6b21\u8be2\u95ee\uff0c\u7ed9\u51fa\u4e00\u6761\u94fe\uff0c\u6c42\u6240\u6709\u4e3a\u5176\u5b50\u94fe\u7684\u6a21\u5f0f\u94fe\u4e2d\uff0c\u6743\u503c\u7b2c$k$\u5c0f\u662f\u591a\u5c11\u3002\n\n\u7528\u6811\u4e0a\u83ab\u961f+\u5206\u5757\u89e3\u51b3\u3002\n\n\u5173\u952e\u5728\u4e8e\u600e\u4e48\u5224\u65ad\u67d0\u6761\u6a21\u5f0f\u94fe\u662f\u5426\u4e3a\u5f53\u524d\u533a\u95f4\u4ee3\u8868\u7684\u94fe\u7684\u5b50\u94fe\u3002\n\n\u9996\u5148\u80fd\u60f3\u5230\u6bcf\u4e2a\u70b9\u5f00\u4e00\u4e2a`vector`\uff0c\u628a\u6bcf\u4e2a\u6a21\u5f0f\u94fe\u63d2\u8fdb\u4e24\u7aef\u70b9\u7684`vector`\u4e2d\u3002\u79fb\u52a8\u6307\u9488\u65f6\uff0c\u626b\u4e00\u904d`vector`\uff0c\u5982\u679c\u4e00\u6761\u94fe\u7684\u53e6\u4e00\u4e2a\u7aef\u70b9\u4e5f\u4f4d\u4e8e\u5f53\u524d\u94fe\uff0c\u5c31\u628a\u5b83\u52a0\u8fdb\u5757\u91cc/\u4ece\u5757\u91cc\u5220\u9664\u3002\n\n\u4f46\u8fd9\u4e2a\u505a\u6cd5\u590d\u6742\u5ea6\u5bf9\u5417\uff1f\n\n\u7528`vector`\u5b58\u4fe1\u606f\u65f6\uff0c\u5fc5\u987b\u4fdd\u8bc1**\u6bcf\u4e2a`vector`\u88ab\u904d\u5386\u7684\u6b21\u6570\u662f\u5747\u7b49\u7684**\uff0c\u624d\u80fd\u628a\u590d\u6742\u5ea6\u5747\u644a\u6389\u3002\n\n\u663e\u7136\u83ab\u961f\u4e0d\u80fd\u4fdd\u8bc1\u6bcf\u4e2a\u4f4d\u7f6e\u88ab\u626b\u8fc7\u7684\u6b21\u6570\u662f\u5747\u7b49\u7684\u3002\u901a\u4fd7\u6765\u8bb2\uff0c**\u83ab\u961f\u7684\u6307\u9488\u79fb\u52a8\u6b21\u6570\u662f$O(n\\sqrt{m})$\u7684\uff0c\u4f46\u6bcf\u4e2a\u4f4d\u7f6e\u88ab\u626b\u8fc7\u7684\u6b21\u6570\u4e0d\u662f$O(\\sqrt{m})$\u7684**\u3002\n\n\u8fd9\u6837\u5361\u6389\u8fd9\u4e2a\u505a\u6cd5\u5c31\u5f88\u5bb9\u6613\u4e86\uff0c\u5c06\u6a21\u5f0f\u94fe\u5168\u90e8\u63d2\u5165\u7b2c\u4e00\u4e2a\u5757\u91cc\uff0c\u8be2\u95ee\u5de6\u7aef\u70b9\u4e5f\u5168\u653e\u5230\u7b2c\u4e00\u4e2a\u5757\u91cc\uff0c\u6784\u9020\u53f3\u7aef\u70b9\uff0c\u4f7f\u6392\u5e8f\u540e\u7684\u8be2\u95ee\u5de6\u7aef\u70b9\u4f1a\u5448\u8fd9\u79cd\u65b9\u5f0f\u79fb\u52a8\uff1a\n\n![](https://ctz45562.github.io/images/\u63a5\u6c34\u679c-1.png)\n\n\u590d\u6742\u5ea6\u5c31\u662f$O(nm)$\u7684\u3002\u53ea\u4e0d\u8fc7\u6570\u636e\u6c34\u6ca1\u5361\u3002\n\n\u89e3\u51b3\u65b9\u6848\uff1a\u628a\u6bcf\u4e2a\u4f4d\u7f6e\u6309`vector`\u7684\u5143\u7d20\u62c6\u6210\u82e5\u5e72\u4e2a\u65b0\u70b9\uff0c\u91cd\u65b0\u5236\u5b9a\u8be2\u95ee\u533a\u95f4\u3002\u5728\u65b0\u5e8f\u5217\u548c\u65b0\u8be2\u95ee\u533a\u95f4\u4e0a\u8dd1\u83ab\u961f\u3002\n\n\u7136\u800c\u8fd9\u6837\u5199\u5f88\u9ebb\u70e6\uff0c\u7ec6\u8282\u5f88\u7e41\u7410\uff0c~~\u6240\u4ee5\u6211\u8fd8\u662f\u5199\u7684\u5047\u83ab\u961f~~\n\n\u4ee3\u7801\uff1a\n\n``` cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <vector>\n\n#define maxn 80005\n#define inf 0x3f3f3f3f\n\nusing namespace std;\n\ninline int read(){\n\tint x=0,y=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')y=1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn y?-x:x;\n}\nint son[maxn],siz[maxn],seg[maxn],deep[maxn],fa[maxn],top[maxn],dis[maxn],ans[maxn],len;\nint fir[maxn],en[maxn],be[maxn],pos[maxn],h[maxn],bel[maxn],bc[maxn],c[maxn],num,cnt,all;\nvector<pair<int,int> >p[maxn];\nvector<pair<int,int> >::iterator iter;\nbool vis[maxn];\nstruct edge{\n\tint pre,to;\n}e[maxn];\nstruct Query{\n\tint l,r,num,lc,k;\n\tbool operator < (const Query &x)const{\n\t\tif(be[l]!=be[x.l])return be[l]<be[x.l];\n\t\tif(be[l]&1)return r<x.r;\n\t\treturn r>x.r;\n\t}\n}q[maxn>>1];\ninline void adde(int from,int to){\n\te[++num]=(edge){h[from],to};\n\th[from]=num;\n}\nvoid dfs1(int node=1){\n\tpos[fir[node]=++cnt]=node;\n\tsiz[node]=1;\n\tfor(register int i=h[node],x;i;i=e[i].pre){\n\t\tx=e[i].to;\n\t\tif(siz[x])continue;\n\t\tdeep[x]=deep[node]+1,fa[x]=node;\n\t\tdfs1(x),siz[node]+=siz[x];\n\t\tif(siz[x]>siz[son[node]])son[node]=x;\n\t}\n\tpos[en[node]=++cnt]=node;\n}\nvoid dfs2(int node=1){\n\tseg[node]=++all;\n\tif(!son[node])return;\n\tint x;\n\ttop[son[node]]=top[node],dfs2(son[node]);\n\tfor(register int i=h[node],x;i;i=e[i].pre){\n\t\tx=e[i].to;\n\t\tif(!seg[x])top[x]=x,dfs2(x);\n\t}\n}\nint lca(int x,int y){\n\twhile(top[x]!=top[y])deep[top[x]]<deep[top[y]]?y=fa[top[y]]:x=fa[top[x]];\n\treturn deep[x]<deep[y]?x:y;\n}\nvoid process(int x,int y,int k,int i){\n\tint l=lca(x,y);\n\tif(l!=x&&l!=y){\n\t\tif(en[x]>fir[y])swap(x,y);\n\t\tq[i]=(Query){en[x],fir[y],i,l,k};\n\t}\n\telse {\n\t\tif(l==y)swap(x,y);\n\t\tq[i]=(Query){fir[x],fir[y],i,0,k};\n\t}\n}\ninline void add(int x){++c[x],++bc[bel[x]];}\ninline void del(int x){--c[x],--bc[bel[x]];}\ninline void modify(int x){\n\tvis[x]^=1;\n\tif(!vis[x]){\n\t\tfor(iter=p[x].begin();iter!=p[x].end();++iter)\n\t\t\tif(vis[iter->first])del(iter->second);\n\t}\n\telse {\n\t\tfor(iter=p[x].begin();iter!=p[x].end();++iter)\n\t\t\tif(vis[iter->first])add(iter->second);\n\t}\n}\nint main(){\n\tint n=read(),m=read(),t=read(),sq,L,ssq,x,y,z;\n\tfor(register int i=1;i<n;++i)x=read(),y=read(),adde(x,y),adde(y,x);\n\tdfs1(),dfs2();\n\tsq=cnt/sqrt(t),L=cnt/sq+bool(cnt%sq);\n\tfor(register int i=1;i<=L;++i)\n\t\tfor(register int j=sq*(i-1)+1,r=min(cnt,j+sq-1);j<=r;++j)\n\t\t\tbe[j]=i;\n\twhile(m--){\n\t\tx=read(),y=read(),dis[++len]=z=read();\n\t\tp[x].push_back(make_pair(y,z)),p[y].push_back(make_pair(x,z));\n\t}\n\tsort(dis+1,dis+1+len);\n\tlen=unique(dis+1,dis+1+len)-dis-1;\n\tssq=sqrt(len),L=len/ssq+bool(len%ssq);\n\tfor(register int i=1;i<=L;++i)\n\t\tfor(register int j=ssq*(i-1)+1,r=min(len,j+ssq-1);j<=r;++j)\n\t\t\tbel[j]=i;\n\tfor(register int i=1;i<=n;++i)\n\t\tfor(iter=p[i].begin();iter!=p[i].end();++iter)\n\t\t\titer->second=lower_bound(dis+1,dis+1+len,iter->second)-dis;\n\tfor(register int i=1;i<=t;++i){\n\t\tx=read(),y=read(),z=read();\n\t\tprocess(x,y,z,i);\n\t}\n\tsort(q+1,q+1+t);\n\tint l=1,r=1,j;\n\tmodify(pos[1]);\n\tfor(register int i=1;i<=t;++i){\n\t\twhile(l<q[i].l)modify(pos[l++]);\n\t\twhile(l>q[i].l)modify(pos[--l]);\n\t\twhile(r<q[i].r)modify(pos[++r]);\n\t\twhile(r>q[i].r)modify(pos[r--]);\n\t\tif(q[i].lc)modify(q[i].lc);\n\t\tfor(j=1;j<=L&&q[i].k>bc[j];++j)q[i].k-=bc[j];\n\t\tfor(j=(j-1)*ssq+1,x=min(n,j+ssq-1);j<=x&&q[i].k>c[j];++j)q[i].k-=c[j];\n\t\tif(q[i].lc)modify(q[i].lc);\n\t\tans[q[i].num]=dis[j];\n\t}\n\tfor(register int i=1;i<=t;++i)printf(\"%d\\n\",ans[i]);\n}\n```\n\n",
        "postTime": 1569380666,
        "uid": 111762,
        "name": "_ctz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3242 \u3010[HNOI2015]\u63a5\u6c34\u679c\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u7ed9\u4e00\u4e2a\u65e0\u8111\u6bd2\u7624\u7684\u9898\u89e3\n\n\u6574\u4f53\u4e8c\u5206+\u6811\u5957\u6811\n\n\u660e\u663e\u6811\u5957\u6811\u5957\u6811\u662f\u53ef\u4ee5A\u7684\n\n\u4f46\u662fSplay\u7a7a\u95f4\u5f00\u4e0d\u597d\n\n\u8003\u8651\u6574\u4f53\u4e8c\u5206\u540e\u7528\u6811\u5957\u6811\u7ef4\u62a4\u77e9\u5f62\n\n\u7136\u540e\u52a8\u6001\u5f00\u70b9\u6e05\u7a7a\u662fO1\u7684\n\n\u6ce8\u610f\u70b9 \u4e25\u683c\u5b9a\u4e49SL\u548cEL\u7684\u5927\u5c0f\u5173\u7cfb\n\n```\nstruct Node{\n    int Sl,Sr,El,Er,K;\n}A[N<<2];\nint acnt=0;\nstruct Query{\n    int Sl,Sr,El,Er,K,opt;\n}Que[N*10],tmp1[N*10],tmp2[N*10];\nint qcnt=0;\n//\nint ans[N];\n//Out\nint Rt;\nint root[N<<2];//inner root;\nint L[N<<2];\nint R[N<<2];\nint Ftot=0;\n//In\nint lson[N*80];\nint rson[N*80];\nint sum[N*80];\nint lazy[N*80];\nint Stot=0;\n//\nint SNew(){\n    ++Stot;\n    lson[Stot]=rson[Stot]=sum[Stot]=lazy[Stot]=0;\n    return Stot;\n}\nvoid PushUp(int x){\n    sum[x]=0;\n    if(lson[x])sum[x]+=sum[lson[x]];\n    if(rson[x])sum[x]+=sum[rson[x]];\n}\nvoid PushNow(int x,int v){\n    sum[x]+=v;\n    lazy[x]+=v;\n}\nvoid PushDown(int x){\n    if(!lazy[x])return;\n    if(!lson[x])lson[x]=SNew();\n    if(!rson[x])rson[x]=SNew();\n    if(lazy[x]){\n        PushNow(lson[x],lazy[x]);\n        PushNow(rson[x],lazy[x]);\n        lazy[x]=0;\n    }\n}\nvoid Modify(int &x,int l,int r,int dl,int dr,int v){\n    if(!x)x=SNew();\n    if(dl<=l&&r<=dr){\n        PushNow(x,v);\n        return;\n    }\n    PushDown(x);\n    int mid=(l+r)>>1;\n    if(dl<=mid)Modify(lson[x],l,mid,dl,dr,v);\n    if(mid< dr)Modify(rson[x],mid+1,r,dl,dr,v);\n    PushUp(x);\n}\nint QueryIn(int x,int l,int r,int dpos){\n    if(!x)return 0;\n    if(l==r){\n        return sum[x];\n    }\n    PushDown(x);\n    int mid=(l+r)>>1;\n    int ret=0;\n    if(dpos<=mid)ret=ret+QueryIn(lson[x],l,mid,dpos);\n    else ret=ret+QueryIn(rson[x],mid+1,r,dpos);\n    return ret;\n}\n//\nint FNew(){\n    ++Ftot;\n    L[Ftot]=R[Ftot]=root[Ftot]=0;\n    return Ftot;\n}\nvoid Update(int &x,int l,int r,int dl,int dr,int ql,int qr,int v){\n    if(!x)x=FNew();\n    if(dl<=l&&r<=dr){\n        Modify(root[x],1,n,ql,qr,v);\n        return;\n    }\n    int mid=(l+r)>>1;\n    if(dl<=mid)Update(L[x],l,mid,dl,dr,ql,qr,v);\n    if(mid< dr)Update(R[x],mid+1,r,dl,dr,ql,qr,v);\n}\nint QueryOut(int x,int l,int r,int dpos,int qpos){\n    if(!x)return 0;\n    if(l==r){\n        return QueryIn(root[x],1,n,qpos);\n    }\t\n    int mid=(l+r)>>1;\n    int ret=QueryIn(root[x],1,n,qpos);\n    if(dpos<=mid)ret=ret+QueryOut(L[x],l,mid,dpos,qpos);\n    else ret=ret+QueryOut(R[x],mid+1,r,dpos,qpos);\n    return ret;\n}\n//\nint mmp[N];\nvoid CDQ(int dl,int dr,int l,int r){\n    if(dl>dr)return;\n    if(l==r){\n        for(int i=dl;i<=dr;++i){\n            if(Que[i].opt)ans[Que[i].opt]=l;\n        }\n        return;\n    }\n    int mid=(l+r)>>1;\n    int tot1=0,tot2=0;\n    for(int i=dl;i<=dr;++i){\n        if(!Que[i].opt){\n            if(Que[i].K<=mid){\n                Update(Rt,1,n,Que[i].Sl,Que[i].Sr,Que[i].El,Que[i].Er,1);\t\n                tmp1[++tot1]=Que[i];\n            }\n            else tmp2[++tot2]=Que[i];\n        }\n        else{\n            int sum=QueryOut(Rt,1,n,Que[i].Sl,Que[i].Sr);\n            if(sum>=Que[i].K){\n                tmp1[++tot1]=Que[i];\n            }\n            else{\n                tmp2[++tot2]=Que[i];\n                tmp2[tot2].K-=sum;\n            }\n        }\n    }\n    Rt=Ftot=Stot=0;\n    for(int i=1;i<=tot1;++i)Que[dl+i-1]=tmp1[i];\n    for(int i=1;i<=tot2;++i)Que[dl+tot1+i-1]=tmp2[i];\n    //DeBug\n    #define Clr(A) memset(A,0,sizeof(A));\n//\tClr(lson);Clr(rson);\n//\tClr(sum);\n//\tClr(L);Clr(R);Clr(lazy);Clr(root);\n    #undef Clr\n    //\n    CDQ(dl,dl+tot1-1,l,mid);\n    CDQ(dl+tot1,dr,mid+1,r);\n}\n```\n",
        "postTime": 1551277823,
        "uid": 28147,
        "name": "\u5289\u5b50\u98ba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3242 \u3010[HNOI2015]\u63a5\u6c34\u679c\u3011"
    },
    {
        "content": "[$\\Large \\color{blue}Blog$](http://geiz-revive.github.io/)\n\n\u6811\u4e0a\u83ab\u961f + \u503c\u57df\u5206\u5757\uff0c\u590d\u6742\u5ea6$\\Theta(n\\sqrt n+nlogn)$\n\n\u6211\u4eec\u628a\u4e00\u4e2a\u76d8\u5b50\u770b\u505a\u662f\u4e24\u4e2a\u70b9\uff0c\u7136\u540e\u5f53\u5728\u83ab\u961f\u540c\u65f6\u52a0\u5165\u8fd9\u4e2a\u4e24\u4e2a\u70b9\u65f6\uff0c\u6211\u4eec\u5c31\u76f8\u5e94\u7684\u628a\u8fd9\u4e2a\u76d8\u5b50\u52a0\u5165\u503c\u57df\u5206\u5757\u4e2d\uff0c\u5220\u9664\u540c\u7406\u3002\u7528\u4e00\u4e2a$vector$\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u4e0a\u5e26\u7740\u7684\u76d8\u5b50\u3002\n\n\u503c\u57df\u5206\u5757\u7684$trick$\u548c[\u8fd9\u4e2a\u9898](https://www.luogu.org/problemnew/show/P2617)\u4e00\u6837\uff0c\u67e5\u8be2$\\sqrt n$\uff0c\u52a0\u5165\u5220\u9664\u90fd\u662f$\\Theta(1)$\u7684\uff0c\u548c\u83ab\u961f\u7684\u590d\u6742\u5ea6\u644a\u6389\u4e86\uff0c\u7136\u540e\u770b\u5230$1e9$\u7684\u503c\u57df\u5f88\u663e\u7136\u662f\u8981\u79bb\u6563\u5316\uff0c\u7136\u540e\u8fd9\u9898\u5dee\u4e0d\u591a\u5c31\u505a\u5b8c\u4e86\u3002\n\n\u672c\u849f\u84bb\u505a\u7684\u65f6\u5019$LCA$\u5199\u9519\u8c03\u4e86\u597d\u4e45\uff0c\u5e0c\u671b\u5404\u4f4d\u4e0d\u8981\u72af\u8fd9\u79cd\u777f\u667a\u9519\u8bef\uff0c$LCA$\u7528\u7684\u662f$\\Theta(nlogn)/\\Theta(1)$$LCA$\n\n$\\Large Code:$\n\n```cpp\n#pragma region revive\n#include <set>\n#include <map>\n#include <cmath>\n#include <queue>\n#include <stack>\n#include <bitset>\n#include <cstdio>\n#include <vector>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <unordered_map>\n#define inl inline\n#define re register int\n#define fa(x) t[x].fa\n#define son(x, y) t[x].child[y]\n#define ls(x) t[x].child[0]\n#define rs(x) t[x].child[1]\n#define ll long long\nconst int inf = 0x3f3f3f3f;\n#define lowbit(x) ((x) & (-x))\nusing namespace std;\n#ifndef _DEBUG\n#define getchar() (*(IOB.in.p++))\n#define putchar(c) (*(IOB.out.p++) = (c))\n#define io_eof() (IOB.in.p >= IOB.in.pend)\nstruct IOBUF {\n\tstruct {\n\t\tchar buff[1 << 26], *p, *pend;\n\t} in;\n\tstruct {\n\t\tchar buff[1 << 26], *p;\n\t} out;\n\tIOBUF() {\n\t\tin.p = in.buff;\n\t\tout.p = out.buff;\n\t\tin.pend = in.buff + fread(in.buff, 1, 1 << 26, stdin);\n\t}\n\t~IOBUF() { fwrite(out.buff, 1, out.p - out.buff, stdout); }\n} IOB;\n#endif\ntemplate <typename IO>\ninl void write(IO x) {\n\tif (x == 0) return (void)putchar('0');\n\tif (x < 0) putchar('-'), x = -x;\n\tstatic char buf[30];\n\tchar *p = buf;\n\twhile (x) {\n\t\t*(p++) = x % 10 + '0';\n\t\tx /= 10;\n\t}\n\twhile (p > buf)\n\t\tputchar(*(--p));\n}\ninl void writestr(const char *s) {\n\twhile (*s != 0)\n\t\tputchar(*(s++));\n}\ntemplate <typename IO>\ninl void writeln(IO x) { write(x), putchar('\\n'); }\ntemplate <typename IO>\ninl void writesp(IO x) { write(x), putchar(' '); }\ninl int readstr(char *s) {\n\tchar *begin = s, c = getchar();\n\twhile (c < 33 || c > 127) {\n\t\tc = getchar();\n\t}\n\twhile (c >= 33 && c <= 127) {\n\t\t*(s++) = c;\n\t\tc = getchar();\n\t}\n\t*s = 0;\n\treturn s - begin;\n}\ntemplate <typename IO>\ninl IO read() {\n\tIO x = 0;\n\tregister bool w = 0;\n\tregister char c = getchar();\n\twhile (c > '9' || c < '0') {\n\t\tif (c == '-') w = 1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9') {\n\t\tx = (x << 3) + (x << 1) + (c ^ 48);\n\t\tc = getchar();\n\t}\n\treturn w ? -x : x;\n}\n#pragma endregion\nint f[100001][20], dep[50001], st[50001], ed[50001], o[100001], euler[100001], head[50001], mp[100001], lg[100001], len, tot, num, a[100001], b[100001], t[100001];\nvector<int> ve[40001];\nstruct edge {\n\tint next, to;\n} e[100001];\ninl void adde(int x, int y) {\n\te[++tot] = edge{ head[x], y }, head[x] = tot;\n\te[++tot] = edge{ head[y], x }, head[y] = tot;\n}\ninl void dfs(int x, int fa) {\n\teuler[++euler[0]] = x, o[++len] = x, st[x] = euler[0], mp[x] = len, dep[x] = dep[fa] + 1;\n\tfor (re i = head[x]; i; i = e[i].next) {\n\t\tif (e[i].to != fa) {\n\t\t\tdfs(e[i].to, x);\n\t\t\to[++len] = x;\n\t\t}\n\t}\n\teuler[++euler[0]] = x, ed[x] = euler[0];\n}\ninl int lca(int l, int r) {\n\tl = mp[l], r = mp[r];\n\tre x = min(l, r), y = max(l, r), k = lg[y - x + 1];\n\tl = x, r = y;\n\treturn dep[f[l][k]] < dep[f[r - (1 << k) + 1][k]] ? f[l][k] : f[r - (1 << k) + 1][k];\n}\nint s[100001], sum[1001], sz[1001], cnt[100001], buc[100001], ans[100001];\ninl void init() {\n\tdfs(1, 0);\n\tfor (re i = 2; i <= len; i++)lg[i] = lg[i >> 1] + 1;\n\tfor (re i = 1; i <= len; i++)f[i][0] = o[i];\n\tfor (re j = 1; j <= lg[len]; j++) {\n\t\tfor (re i = 1; i + (1 << j) - 1 <= len; i++) {\n\t\t\tf[i][j] = dep[f[i][j - 1]] < dep[f[i + (1 << (j - 1))][j - 1]] ? f[i][j - 1] : f[i + (1 << (j - 1))][j - 1];\n\t\t}\n\t}\n\tnum = sqrt(euler[0]);\n\tfor (re i = 1; i <= euler[0]; i++)s[i] = (i - 1) / num + 1, sz[s[i]]++;\n}\nbool vis[100001];\nstruct quiz {\n\tint l, r, k, lca, id;\n\tbool operator<(const quiz &a) {\n\t\treturn s[l] == s[a.l] ? s[l] & 1 ? r < a.r : r > a.r : s[l] < s[a.l];\n\t}\n} q[100001];\ninl void add(int x) {\n\tfor (auto i : ve[x])((++buc[i]) == 2) ? (cnt[a[i]]++, sum[s[a[i]]]++) : 0;\n}\ninl void del(int x) {\n\tfor (auto i : ve[x])(buc[i] == 2) ? (cnt[a[i]]--, buc[i]--, sum[s[a[i]]]--) : (buc[i]--);\n}\ninl void oper(int x) {\n\t(vis[x] ^= 1) ? add(x) : del(x);\n}\nsigned main() {\n\tre n = read<int>(), p = read<int>(), m = read<int>(), x, y, w, f;\n\tfor (re i = 1; i < n; i++) x = read<int>(), y = read<int>(), adde(x, y);\n\tinit();\n\tfor (re i = 1; i <= p; i++) {\n\t\tx = read<int>(), y = read<int>(), w = read<int>();\n\t\tve[x].push_back(i), ve[y].push_back(i), a[i] = b[i] = w;\n\t}\n\tsort(b + 1, b + 1 + p);\n\tre siz = unique(b + 1, b + 1 + p) - b - 1;\n\tfor (re i = 1; i <= p; i++) {\n\t\tre k = a[i];\n\t\tt[a[i] = lower_bound(b + 1, b + 1 + siz, a[i]) - b] = k;\n\t}\n\tfor (re i = 1; i <= m; i++) {\n\t\tx = read<int>(), y = read<int>(), w = read<int>();\n\t\tif (st[x] > st[y]) swap(x, y);\n\t\tf = lca(x, y);\n\t\tif (x != f) q[i] = quiz{ ed[x], st[y], w, f, i };\n\t\telse q[i] = quiz{ st[x], st[y], w, 0, i };\n\t}\n\tsort(q + 1, q + 1 + m);\n\tre l = 1, r = 0, res = 0;\n\tfor (re i = 1; i <= m; i++) {\n\t\twhile (l < q[i].l)oper(euler[l++]);\n\t\twhile (l > q[i].l)oper(euler[--l]);\n\t\twhile (r < q[i].r)oper(euler[++r]);\n\t\twhile (r > q[i].r)oper(euler[r--]);\n\t\tif (q[i].lca) oper(q[i].lca);\n\t\tres = 0;\n\t\tfor (re j = 1; j <= s[siz]; j++) {\n\t\t\tif (res + sum[j] < q[i].k)res += sum[j];\n\t\t\telse {\n\t\t\t\tfor (re l = (j - 1) * num + 1, r = l + sz[j] - 1; l <= r; l++) {\n\t\t\t\t\tif ((res += cnt[l]) >= q[i].k) {\n\t\t\t\t\t\tans[q[i].id] = t[l];\n\t\t\t\t\t\tgoto begin;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\tbegin:\n\t\tif (q[i].lca)oper(q[i].lca);\n\t}\n\tfor (re i = 1; i <= m; i++)writeln(ans[i]);\n}\n```\n\n",
        "postTime": 1563177912,
        "uid": 110271,
        "name": "Genius_Z",
        "ccfLevel": 0,
        "title": "P3242 [HNOI2015]\u63a5\u6c34\u679c"
    }
]