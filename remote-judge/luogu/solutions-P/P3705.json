[
    {
        "content": "\u7136\u800c\u7c7b\u4f3c\u65b9\u683c\u53d6\u6570\u95ee\u9898\u5957\u4e0a\u4e00\u4e2a\u5206\u6570\u89c4\u5212\u3002\u3002\u3002\n\n\u9898\u9762\u610f\u601d\u5927\u81f4\u662f\u7ed9\u4e00\u4e2a $n*n$ \u7684\u77e9\u9635\uff0c\u6bcf\u4e2a\u5143\u7d20\u6709\u4e24\u4e2a\u6743\u503c$(a,b)$\n\n\u6bcf\u884c\u6bcf\u5217\u90fd\u53ea\u80fd\u9009\u4e00\u4e2a\uff0c\u6700\u5927\u5316$\\dfrac{\\sum_{i=1}^na_i}{\\sum_{i=1}^nb_i}$\n\n\u8bbe$C=\\dfrac{\\sum_{i=1}^na_i}{\\sum_{i=1}^nb_i}$\n\n\u7a0d\u505a\u53d8\u5f62\uff1a$C*\\sum_{i=1}^nb_i = \\sum_{i=1}^n a_i$\n\n\u5373\uff1a\n\n$$\\sum_{i=1}^na_i - C*b_i=0$$\n\n\u8003\u8651\u4e8c\u5206$C$\u503c\uff0c\u7136\u540e\u5957\u4e0a\u8d39\u7528\u6d41\u6c42\u89e3\u5373\u53ef\u3002\n\n\u5efa\u56fe\u6bd4\u8f83\u7b80\u5355\uff0c\u6bcf\u884c\u5411\u6e90\u70b9\u8fde$1$\uff0c\u6bcf\u5217\u5411\u6c47\u70b9\u8fde$1$\uff0c\u8d39\u7528\u5747\u4e3a $0$ \n\n\u7136\u540e\u6bcf\u884c\u5411\u6bcf\u5217\u8fde\u6d41\u91cf$1$ \u8d39\u7528 $a_{i,j}-C*b_{i,j}$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint read() {\n    char cc = getchar(); int cn = 0, flus = 1;\n    while(cc < '0' || cc > '9') {  if( cc == '-' ) flus = -flus;  cc = getchar();  }\n    while(cc >= '0' && cc <= '9')  cn = cn * 10 + cc - '0', cc = getchar();\n    return cn * flus;\n}\nconst int M = 2e5 + 5 ; \nconst int N = 200 + 5 ; \n#define inf 123456789\n#define eps 1e-8\n#define rep( i, s, t ) for( register int i = s; i <= t; ++ i )\n#define Next( i, x ) for( register int i = head[x]; i; i = e[i].next )\nstruct E {\n    int to, next, w;\n    double f ; \n} e[M * 2]; \nint head[N * 2], cur[N * 2], cnt, n, mark[N * 2], vis[N * 2], s, t ;\ndouble dis[N * 2], Ans, a[N][N], b[N][N] ;\nvoid add( int x, int y, int z, double f ) {\n    e[++ cnt] = (E){ y, head[x], z, f }, head[x] = cnt ; \n    e[++ cnt] = (E){ x, head[y], 0, -f }, head[y] = cnt ; \n} \nqueue< int > q; \nbool spfa() {\n    rep( i, s, t ) dis[i] = - inf ; \n    memset( vis, 0, sizeof(vis) ) ;\n    q.push(s) ; dis[s] = 0 ;\n    while( !q.empty() ) {\n        int u = q.front() ; q.pop() ; vis[u] = 0;\n        Next( i, u ) {\n            int v = e[i].to ; \n            if( dis[v] < dis[u] + e[i].f && e[i].w ) {\n                dis[v] = dis[u] + e[i].f;\n                if( !vis[v] ) q.push(v), vis[v] = 1; \n            }\t\n        }\n    }\n    return dis[t] != -inf ;\n}\nint dfs( int x, int dist ) {\n    mark[x] = 1 ; \n    if( x == t ) return dist ; \n    int flow = 0 ; \n    for( register int &i = cur[x]; i; i = e[i].next ) {\n        int v = e[i].to ; \n        if( !mark[v] && dis[v] == dis[x] + e[i].f && e[i].w ) {\n            int di = dfs( v, min( dist, e[i].w ) ) ; \n            if( di > 0 ) {\n                e[i].w -= di, e[i ^ 1].w += di;\n                flow += di, dist -= di ; \n                Ans += di * e[i].f ; \n                if( dist == 0 ) return flow ; \n            }\n        }\n    }\n    return flow ;\n}\nvoid zkwflow() {\n    Ans = 0;\n    while(spfa()) {\n        memcpy( cur, head, sizeof(head) ) ;\n        mark[t] = 1 ; \n        while( mark[t] ) {\n            memset( mark, 0, sizeof(mark) ) ;\n            dfs( s, inf ) ;\n        }\n    }\n} \nbool check( double x ) {\n    s = 0, t = 2 * n + 1 ; cnt = 1;\n    memset( head, 0, sizeof(head) );\n    rep( i, 1, n ) add( s, i, 1, 0 ), add( i + n, t, 1, 0 ) ;\n    rep( i, 1, n ) rep( j, 1, n ) add( i, j + n, 1, a[i][j] - x * b[i][j] );\n    zkwflow() ;\n    return Ans >= 0 ;\n}\nvoid solve() {\n    double l = 0, r = 10000 + 5, mid, ans = 0 ;\n    while( r - l > eps ) {\n        mid = ( l + r ) / 2.0 ; \n        if( check(mid) ) ans = mid, l = mid + eps ; \n        else r = mid - eps ;\n    }\n    printf(\"%.6lf\\n\", ans ) ;\n}\nsigned main()\n{\n    n = read() ; \n    rep( i, 1, n ) rep( j, 1, n ) a[i][j] = read() ; \n    rep( i, 1, n ) rep( j, 1, n ) b[i][j] = read() ; \n    solve() ; \n    return 0;\n}\n```",
        "postTime": 1554946890,
        "uid": 30036,
        "name": "Soulist",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3705 \u3010[SDOI2017]\u65b0\u751f\u821e\u4f1a\u3011"
    },
    {
        "content": "\u7531\u4e8e\u9898\u76ee\u6c42\u7684\u662f\u6700\u4f18\u914d\u5bf9\u65b9\u6848\uff0c\u6240\u4ee5\u5f88\u5bb9\u6613\u60f3\u5230\u5efa\u4e00\u4e2a\u4e8c\u5206\u56fe\u540e\u7528\u8d39\u7528\u6d41\u6c42\u89e3\uff0c\u5373\u5efa\u7acb\u6e90\u70b9\u548c\u6c47\u70b9\uff0c\u7531\u6e90\u70b9\u5411\u6bcf\u4e2a\u7537\u751f\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a$1$\u7684\u8fb9\uff0c\u7531\u6bcf\u4e2a\u5973\u751f\u5411\u6c47\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a$1$\u7684\u8fb9\uff0c\u518d\u4ece\u4efb\u610f\u4e00\u4e2a\u7537\u751f\u5411\u4efb\u610f\u4e00\u4e2a\u5973\u751f\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a$1$\u7684\u8fb9\u3002\n\n\u518d\u8003\u8651\u8d39\u7528\u5206\u914d\u3002\u8fd9\u65f6\u5019\u4e3b\u8981\u7684\u95ee\u9898\u5728\u4e8e$C=\\frac{\\sum a}{\\sum b}$\u8fd9\u4e2a\u5f0f\u5b50\u4e2d$\\sum b$\u5728\u5206\u6bcd\u4f4d\u7f6e\uff0c\u65e0\u6cd5\u7b80\u5355\u6c42\u548c\u3002\u56e0\u6b64\u53ef\u4ee5\u5229\u7528\u5206\u6570\u89c4\u5212\u7684\u601d\u60f3\u53bb\u6389\u5206\u6bcd\u3002\u5148\u4e8c\u5206\u7b54\u6848$ans$\u3002\n\n\u63a5\u4e0b\u6765\u5224\u65ad\u6700\u4f18\u89e3$C$\u80fd\u5426\u5927\u4e8e\u6216\u7b49\u4e8e$ans$\u3002\u628a\u5f0f\u5b50$C=\\frac{\\sum a}{\\sum b}$\u53d8\u5f62\u540e\u4e3a$\\sum a-C\\sum b=0$\u3002\u8fd9\u65f6\u5019\u5c31\u53ef\u4ee5\u63a8\u51fa\u5982\u679c$C\\geq ans$\uff0c\u5c31\u4e00\u5b9a\u5b58\u5728\u4e00\u79cd$\\sum a,\\sum b$\u7684\u5408\u6cd5\u5206\u914d\u65b9\u6848\uff0c\u4f7f\u5f97$\\sum a-ans\\sum b\\geq 0$\u3002\u6b64\u65f6\u5c31\u53ef\u4ee5\u5f97\u51fa\uff0c\u6e90\u70b9\u8fde\u5411\u7537\u751f\uff0c\u4ee5\u53ca\u5973\u751f\u8fde\u5411\u6e90\u70b9\u7684\u8fb9\u7684\u8d39\u7528\u90fd\u4e3a$0$\uff0c\u7b2c$i$\u4e2a\u7537\u751f\u5411\u7b2c$j$\u4e2a\u5973\u751f\u7684\u8fb9\u7684\u8d39\u7528\u4e3a$a_{i,j}-ans*b_{i,j}$\u3002\u5efa\u56fe\u5b8c\u6210\u540e\uff0c\u5982\u679c**\u6700\u5927\u8d39\u7528**\u6700\u5927\u6d41\u5927\u4e8e\u7b49\u4e8e$0$\uff0c\u90a3\u4e48$C\\geq ans$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\ninline int read() {\n    int res = 0; bool bo = 0; char c;\n    while (((c = getchar()) < '0' || c > '9') && c != '-');\n    if (c == '-') bo = 1; else res = c - 48;\n    while ((c = getchar()) >= '0' && c <= '9')\n        res = (res << 3) + (res << 1) + (c - 48);\n    return bo ? ~res + 1 : res;\n}\nconst int L = 105, N = 5e5 + 5; const double eps = 1e-8;\nint n, a[L][L], b[L][L], ecnt, nxt[N], adj[N], go[N], cap[N], len,\nque[N], S, T; double cost[N], dis[N], ans;\nbool vis[N], walk[N];\nvoid add_edge(int u, int v, int w, double x) {\n    nxt[++ecnt] = adj[u]; adj[u] = ecnt; go[ecnt] = v;\n    cap[ecnt] = w; cost[ecnt] = x;\n    nxt[++ecnt] = adj[v]; adj[v] = ecnt; go[ecnt] = u;\n    cap[ecnt] = 0; cost[ecnt] = -x;\n}\nbool spfa() {\n    int i; for (i = S; i <= T; i++) dis[i] = -1e20, walk[i] = 0;\n    dis[que[len = 1] = S] = 0;\n    for (i = 1; i <= len; i++) {\n        int u = que[i]; vis[u] = 0;\n        for (int e = adj[u], v; e; e = nxt[e])\n            if (cap[e] > 0 && dis[u] + cost[e] > dis[v = go[e]]) {\n                dis[v] = dis[u] + cost[e];\n                if (!vis[v]) vis[que[++len] = v] = 1;\n            }\n    }\n    return dis[T] >= -1e19;\n}\nint dfs(int u, int flow) {\n    if (u == T) return ans += dis[T] * flow, flow;\n    int res = 0, delta; walk[u] = 1;\n    for (int e = adj[u], v; e; e = nxt[e])\n        if (!walk[v = go[e]] && cap[e] > 0 &&\n        abs(dis[v] - dis[u] - cost[e]) <= eps) {\n            delta = dfs(v, min(cap[e], flow - res));\n            if (delta) {\n                cap[e] -= delta; cap[e ^ 1] += delta;\n                res += delta; if (res == flow) break;\n            }\n        }\n    return res;\n}\ndouble mcmf() {\n    ans = 0;\n    while (spfa()) dfs(S, 0x3f3f3f3f);\n    return ans;\n}\nbool check(double mid) {\n    int i, j; ecnt = S = 1; T = (n << 1) + 2;\n    for (i = S; i <= T; i++) adj[i] = 0;\n    for (i = 1; i <= n; i++) add_edge(S, i + 1, 1, 0);\n    for (i = n + 2; i < T; i++) add_edge(i, T, 1, 0);\n    for (i = 1; i <= n; i++) for (j = 1; j <= n; j++)\n        add_edge(i + 1, j + n + 1, 1, 1.0 * a[i][j] - 1.0 * b[i][j] * mid);\n    double ap = mcmf(); return abs(ap) <= eps || ap > eps;\n}\nint main() {\n    int i, j; n = read();\n    for (i = 1; i <= n; i++) for (j = 1; j <= n; j++)\n        a[i][j] = read();\n    for (i = 1; i <= n; i++) for (j = 1; j <= n; j++)\n        b[i][j] = read();\n    double l = -1e7, r = 1e7;\n    while (abs(r - l) > eps) {\n        double mid = (l + r) / 2;\n        if (check(mid)) l = mid;\n        else r = mid;\n    }\n    printf(\"%.6lf\\n\", r);\n    return 0;\n}\n```",
        "postTime": 1512306493,
        "uid": 29936,
        "name": "xyz32768",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3705 \u3010[SDOI2017]\u65b0\u751f\u821e\u4f1a\u3011"
    },
    {
        "content": "**\u8d39\u7528\u6d41+\u5206\u6570\u89c4\u5212+\u4e8c\u5206\u7b54\u6848**\n\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u4e8c\u5206\u7b54\u6848C\uff0c\u4f46C\u7684\u6ee1\u8db3\u6761\u4ef6\u4f3c\u4e4e\u5e76\u4e0d\u597d\u5904\u7406\n\n\n\u4f46\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u5206\u6570\u89c4\u5212\u7684\u601d\u60f3\u5c06C\u8fdb\u884c\u8f6c\u6362\n\n\n\n```cpp\nC = (a1 + a2 + \u2026\u2026 + an) / (b1 + b2 + \u2026\u2026 + bn)\n(b1 + b2 + \u2026\u2026 + bn) * C = (a1 + a2 + \u2026\u2026 + an)\n(a1 + a2 + \u2026\u2026 + an) - (b1 + b2 + \u2026\u2026 + bn) * C = 0\n(a1 - b1 * C) + (a2 - b2 * C) + \u2026\u2026 + (an - bn * C) = 0\n```\n\u7531\u6b64\u6211\u4eec\u5f97\u51fa\u8fd9\u9053\u4e8c\u5206\u56fe\u7684\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\uff1a\n\n1)\u5c06\u6e90\u70b9\u5411\u6bcf\u4e2a\u7537\u751f\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a1\u3001\u8d39\u7528\u4e3a0\u7684\u8fb9\n\n\n2)\u5c06\u6bcf\u4e2a\u5973\u751f\u5411\u6c47\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a1\u3001\u8d39\u7528\u4e3a0\u7684\u8fb9\n\n\n3)\u5c06\u6bcf\u4e00\u5bf9\u7537\u5973\u821e\u4f34\u95f4\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a1\u3001\u8d39\u7528\u4e3a[a[i][j] - b[i][j] \\* C]\u7684\u8fb9\n\n\n\u7136\u540e\u6bcf\u6b21\u5224\u65ad\u6700\u5c0f\u8d39\u7528\u662f\u5426\u5c0f\u4e8e\uff08\u6216\u5927\u4e8e\uff090\u6765\u7f29\u5c0f\u8fb9\u754c\uff0c\u6700\u540e\u5f97\u5230\u7b54\u6848\u3002\n\n\n**\u4ee3\u7801\u5982\u4e0b\uff1a**\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nconst double Maxn = 1e9;\nconst int N = 205, M = 8e4 + 5;\nconst double eps = 1e-8;\nint pre[N], nxt[M], to[M], lst[N], fr[M], flw[M], Q[M];\nint n, s, t, T; bool vis[N];\ndouble a[N][N], b[N][N], cst[M], Ans, dis[N]; \ntemplate <class T> inline void CkMin(T &a, const T b) {if (a > b) a = b;}\ninline void Add(const int x, const int y, const int z, const double g)\n{\n    nxt[++T] = lst[x]; lst[x] = T; to[T] = y; fr[T] = x; flw[T] = z; cst[T] = g;\n    nxt[++T] = lst[y]; lst[y] = T; to[T] = x; fr[T] = y; flw[T] = 0; cst[T] = -g;\n}\ninline bool Bul()\n{\n    for (int i = s; i <= t; ++i) dis[i] = -Maxn;\n    int te = 0, we = 1, x, y; \n    dis[Q[1] = s] = 0.0;\n    while (te < we)\n    {\n        x = Q[++te]; vis[x] = false;\n        for (int i = lst[x]; i; i = nxt[i])\n        if (dis[y = to[i]] < dis[x] + cst[i] && flw[i])\n        {\n            dis[y] = dis[x] + cst[i]; pre[y] = i; \n            if (!vis[y]) vis[y] = true, Q[++we] = y;\n        }\n    }\n    return dis[t] > -Maxn;\n}\ninline void Deal()\n{\n    int Mif = Maxn;\n    for (int i = pre[t]; i; i = pre[fr[i]]) CkMin(Mif, flw[i]);\n    for (int i = pre[t]; i; i = pre[fr[i]])\n     flw[i] -= Mif, flw[i ^ 1] += Mif, Ans += (double)Mif * cst[i];\n}\ninline bool check(const double mi)\n{\n    T = 1; memset(lst, 0, sizeof(lst));\n    for (int i = 1; i <= n; ++i) \n     Add(s, i, 1, 0), Add(i + n, t, 1, 0);\n    for (int i = 1; i <= n; ++i)\n     for (int j = 1; j <= n; ++j)\n      Add(i, j + n, 1, a[i][j] - mi * b[i][j]);\n    Ans = 0.0; while (Bul()) Deal();\n    return (Ans <= 0); \n}\nint main()\n{\n    scanf(\"%d\", &n); s = 0; t = (n << 1) + 1;\n    for (int i = 1; i <= n; ++i)\n     for (int j = 1; j <= n; ++j) scanf(\"%lf\", &a[i][j]);\n    for (int i = 1; i <= n; ++i)\n     for (int j = 1; j <= n; ++j) scanf(\"%lf\", &b[i][j]);\n    double l = 0, r = 1e4;\n    while (r - l >= eps)\n    {\n        double mid = (l + r) / 2;\n        (check(mid) ? r : l) = mid;\n    } \n    return printf(\"%.6lf\\n\", l), 0;\n}\n```",
        "postTime": 1494163714,
        "uid": 17952,
        "name": "Log_x",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3705 \u3010[SDOI2017]\u65b0\u751f\u821e\u4f1a\u3011"
    },
    {
        "content": "\u597d\u4e45\u6ca1\u53d1\u9898\u89e3\u4e86\uff0c\u4f30\u503c\u6389\u4e86\u4e00\u5806o(\u2565\ufe4f\u2565)o\n\n\u89c2\u5bdf\u5230\u9898\u76ee\u4e2d\u8981\u6c42 $\\frac{\\sum{a'}}{\\sum{b'}}$ \u7684\u6700\u5927\u503c\uff0c\u8054\u60f3\u5230 01 \u5206\u6570\u89c4\u5212\u3002\n\n\u90a3\u4e48\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u7b54\u6848\u3002\n\n\u63a8\u4e00\u4e0b\u67ff\u5b50\uff08\u5176\u5b9e\u6ca1\u5565\u597d\u63a8\u7684\uff09\uff1a\n\n\u663e\u7136\uff0c\u8981\u4f7f $ans\\geq mid$\uff0c$\\frac{\\sum{a'}}{\\sum{b'}}\\geq mid$ \u662f\u5145\u5206\u5fc5\u8981\u6761\u4ef6\u3002\n\n\u539f\u5f0f\u53d8\u5f62\u540e\u5f97\uff1a$\\sum{(a'-mid\\cdot b')}\\geq 0$\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u4e00\u79cd\u914d\u65b9\u6848\u4f7f\u5f97 $\\sum{(a'-mid\\cdot b')}$ \u6700\u5927\uff0c\u5f53\u6700\u5927\u503c\u5927\u4e8e $0$ \u65f6\u8bf4\u660e $ans\\geq mid$\u3002\n\n\u90a3\u5982\u4f55\u627e\u5230\u6700\u5927\u503c\u5462\uff1f\n\n\u5f53\u6211\u4eec\u7ed9\u6bcf\u4e2a\u7537\u751f\u548c\u5973\u751f\u4e4b\u95f4\u8fde\u8fb9\uff0c\u5c31\u4f1a\u5f97\u5230\u4e00\u4e2a\u4e8c\u5206\u56fe\u3002\n\n\u800c\u7b2c $i$ \u4e2a\u7537\u751f\u548c\u7b2c $j$ \u4e2a\u5973\u751f\u4e4b\u95f4\u8fb9\u7684\u6743\u503c\u5c31\u662f $a_{i,j}-mid\\cdot b_{i,j}$\u3002\n\n\u90a3\u6211\u4eec\u89c2\u5bdf\u5230\u6b64\u4e8c\u5206\u56fe\u4e2d\u4e00\u79cd\u5339\u914d\u65b9\u6848\u5c31\u5bf9\u5e94\u7740\u4e00\u79cd\u7537\u5973\u751f\u914d\u5bf9\u65b9\u6848\u3002\n\n\u6240\u4ee5\u6700\u5927\u503c\u5c31\u662f\u5339\u914d\u4e2d\u7684\u6700\u5927\u6743\u503c\u548c\uff0c\u53ef\u4ee5\u7528\u7f51\u7edc\u8d39\u7528\u6d41\u5b51\u5b53\u3002\n\n\u4e0d\u4f1a\u7f51\u7edc\u6d41\u7684\u7ae5\u978b\u53ef\u4ee5\u770b\u770b\u6211\u7684\u8fd9\u7bc7 [blog](https://www.luogu.com.cn/blog/s19418/wang-lao-liu-xue-xi-bi-ji)\u3002\n\n\u56e0\u6b64\u601d\u8def\u5c31\u641e\u5b9a\u4e86\uff0c\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define eps 0.00000001\n#define INF 1000000000\n#define M 80005\n#define N 105\nusing namespace std;\nint n,s,t,a[N][N],b[N][N];\nstruct Edge{\n    int to,nxt,flw;double cst;\n    Edge(int a=0,int b=0,int c=0,double d=0):to(a),nxt(b),flw(c),cst(d){}\n};\nstruct Edge e[M];\nint head[N<<1],cnt;\ninline void Add(int u,int v,int w,double c){\n    e[++cnt]=Edge(v,head[u],w,c);head[u]=cnt;\n    e[++cnt]=Edge(u,head[v],0,-c);head[v]=cnt;\n}\ndouble dis[N<<1];\nbool vis[N<<1];\nqueue <int> q;\ninline bool SPFA(){\n    for(int i(s);i<=t;++i) dis[i]=-INF,vis[i]=0;\n    dis[s]=0;vis[s]=1;q.push(s);\n    while(!q.empty()){\n        int u(q.front());\n        q.pop();vis[u]=0;\n        for(int i(head[u]);~i;i=e[i].nxt){\n            if(!e[i].flw) continue;\n            int v(e[i].to);\n            if(dis[u]+e[i].cst>dis[v]){\n                dis[v]=dis[u]+e[i].cst;\n                if(!vis[v]) q.push(v),vis[v]=1;\n            }\n        }\n    }\n    return dis[t]!=-INF;\n}\nint cur[N<<1];double ans;\nint Dfs(int u,int limit){\n    if(u==t||!limit) return limit;\n    vis[u]=1;int f(0);\n    for(int i(cur[u]);(~i)&&limit;i=e[i].nxt){\n        cur[u]=i;int v(e[i].to);\n        if(e[i].flw&&!vis[v]&&dis[v]==dis[u]+e[i].cst){\n            int tmp(Dfs(v,min(limit,e[i].flw)));\n            e[i].flw-=tmp;e[i^1].flw+=tmp;\n            limit-=tmp;f+=tmp;\n            ans+=e[i].cst*tmp;\n        }\n    }\n    if(f) vis[u]=0;\n    return f;\n}\ninline void Dinic(){\n    while(SPFA()){\n        for(int i(s);i<=t;++i) vis[i]=0;\n        for(int i(s);i<=t;++i) cur[i]=head[i];\n        while(Dfs(s,INF));\n    }\n}\ninline bool Check(double x){\n    for(int i(s);i<=t;++i) head[i]=-1;cnt=-1;\n    for(int i(1);i<=n;++i){\n        Add(s,i,1,0);\n        Add(i+n,t,1,0);\n    }\n    for(int i(1);i<=n;++i)\n        for(int j(1);j<=n;++j)\n            Add(i,j+n,1,a[i][j]-x*b[i][j]);\n    ans=0;Dinic();\n    return ans>-eps;\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int i(1);i<=n;++i)\n        for(int j(1);j<=n;++j)\n            scanf(\"%d\",&a[i][j]);\n    for(int i(1);i<=n;++i)\n        for(int j(1);j<=n;++j)\n            scanf(\"%d\",&b[i][j]);\n    s=0;t=(n<<1)+1;\n    double l(0),r(10000),mid;\n    while(r-l>eps){\n        mid=(l+r)/2.0;\n        if(Check(mid)) l=mid;\n        else r=mid;\n    }\n    printf(\"%.6f\\n\",l);\n    return 0;\n}\n```\n\n\u5f53\u7136\u5b9e\u9645\u7801\u4ee3\u7801\u4e2d\u8fd8\u6709\u5f88\u591a\u7ec6\u8282\u8981\u601d\u8003\u3002\n\n\u6bd4\u5982\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u7cbe\u5ea6\u95ee\u9898\u7b49\u7b49\u3002\n\n\u5efa\u8bae\u770b\u5b8c\u9898\u89e3\u540e\u81ea\u5df1\u7801\u4e00\u904d\u3002\n\n\u7136\u540e\u2026\u2026\u5b8c\u7ed3\u273f\u273f\u30fd(\u00b0\u25bd\u00b0)\u30ce\u273f",
        "postTime": 1673411589,
        "uid": 554574,
        "name": "gyyyyx",
        "ccfLevel": 0,
        "title": "[SDOI2017]\u65b0\u751f\u821e\u4f1a"
    },
    {
        "content": "### \u5206\u6570\u89c4\u5212\uff0c\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41#\n\n\u9898\u610f\u53ef\u4ee5\u7b80\u5316\u4e3a\u7ed9\u51fa\u4e00\u4e2a\u77e9\u9635\uff0c\u8981\u6c42\u6bcf\u884c\u548c\u6bcf\u5217\u5fc5\u987b\u4e14\u53ea\u80fd\u53d6\u4e00\u4e2a\u683c\u5b50\uff0c\u8981\u6c42$sigma\\ a_{i,j}/sigma\\ b_{i,j}$ \u6700\u5927\n\n\u8003\u8651\u5206\u6570\u89c4\u5212\uff0c\u53ef\u4ee5\u5c06\u5f0f\u5b50\u8f6c\u5316\uff1a\n\n$sigma\\ a_{i,j}/sigma\\ b_{i,j}=C$\n\n$sigma\\ a_{i,j}=sigma\\ b_{i,j}*C$\n\n$sigma\\ a_{i,j}-sigma\\ b_{i,j}*C=0$\n\n$sigma(\\ a_{i,j}-b_{i,j}*C)=0$\n\nC\u5c31\u662f\u6211\u4eec\u8981\u6c42\u7684\u6700\u5927\u503c\uff0c\u6211\u4eec\u53ef\u4ee5$mid$\u5b9e\u6570\u4e8c\u5206\u5b83\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a$mid$\uff0c\u6c42\u51fa\u8fd9\u79cd\u60c5\u51b5\u4e0b$sigma(\\ a_{i,j}-b_{i,j}*mid)=0$\u7684\u6700\u5927\u503c\uff0c\u5982\u679c\u6700\u5927\u503c\u5c0f\u4e8e0\uff0c\u5c31\u8bf4\u660e$mid>C$\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\n\n\u81f3\u4e8e\u600e\u4e48\u6c42\u6700\u5927\u503c\uff0c\u53ef\u4ee5\u5c06\u6a2a\u5750\u6807\u5efa\u4e00\u4e2a\u70b9\u96c6\uff0c\u7eb5\u5750\u6807\u5efa\u4e00\u4e2a\u70b9\u96c6\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u77e9\u9635\u4e0a\u7684\u70b9$a_{i,j}$\u5efa\u4e00\u6761\u4ecei\u5230j\u7684\u5f27\uff0c\u6d41\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a$a_{i,j}-sigma\\ b_{i,j}*mid$\uff0c\u7136\u540e\u8dd1\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u5c31\u884c\u4e86\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<queue>\n#include<map>\n#define inf 0x7fffffff\nusing namespace std;\ninline int read()\n{\n\tint ans=0,fh=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')\n\t{\n\t\tif(ch=='-')\n\t\t\tfh=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9')\n\t\tans=(ans<<1)+(ans<<3)+ch-'0',ch=getchar();\n\treturn ans*fh;\n}\nconst int maxn=300;\nconst int maxm=10010;\nconst double eps=0.00000001;\nint s,t,v[maxm*2],u[maxm*2],w[maxm*2],qq[maxn],ll[maxn],nex[maxm*2],head[maxn],num=1,n,a[110][110],b[110][110];\ndouble f[maxm*2],bj[maxn],l,r,mid;\nbool cz[maxn];\nqueue<int>q;\nvoid add(int x,int y,double fee)\n{\n\tu[++num]=x;\n\tv[num]=y;\n\tw[num]=1;\n\tf[num]=fee;\n\tnex[num]=head[x];\n\thead[x]=num;\n\tu[++num]=y;\n\tv[num]=x;\n\tw[num]=0;\n\tf[num]=-fee;\n\tnex[num]=head[y];\n\thead[y]=num;\n}\nbool spfa()\n{\n\tmemset(qq,0,sizeof(qq));\n\tfor(int i=1;i<=n*2+2;i++)\n\t\tbj[i]=2100000000;\n\tmemset(ll,0,sizeof(ll));\n\tq.push(s);\n\tbj[s]=0;\n\tll[s]=inf;\n\twhile(!q.empty())\n\t{\n\t\tint now=q.front();\n\t\tq.pop();\n\t\tcz[now]=0;\n\t\tfor(int i=head[now];i;i=nex[i])\n\t\t\tif(w[i]&&bj[v[i]]>bj[now]+f[i])\n\t\t\t{\n\t\t\t\tbj[v[i]]=bj[now]+f[i];\n\t\t\t\tll[v[i]]=min(w[i],ll[now]);\n\t\t\t\tqq[v[i]]=i;\n\t\t\t\tif(!cz[v[i]])\n\t\t\t\t\tq.push(v[i]),cz[v[i]]=1;\n\t\t\t}\n\t}\n\treturn qq[t]>0;\n}\ndouble EK()\n{\n\tdouble fee=0;\n\twhile(spfa())\n\t{\n\t\tint liu=ll[t];\n\t\tfor(int i=qq[t];i;i=qq[u[i]])\n\t\t\tw[i]-=liu,w[i^1]+=liu;\n\t\tfee+=liu*bj[t];\n\t}\n\treturn fee*-1;\n}//\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\ndouble work(double x)\n{\n\tmemset(head,0,sizeof(head));\n\tnum=1;\n\tfor(int i=1;i<=n;i++)\n\t\tadd(s,i,0),add(i+n,t,0);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tadd(i,j+n,(double)x*b[i][j]-a[i][j]);//\u5efa\u56fe\n\treturn EK();\n}\nint main()\n{\n\tn=read();\n\ts=n*2+1;t=s+1;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\ta[i][j]=read();\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tb[i][j]=read();\n\tr=1000000;\n\twhile(r-l>eps)\n\t{\n\t\tmid=(l+r)*0.5;\n\t\tdouble dd=work(mid);\n\t\tif(dd>=0)\n\t\t\tl=mid;\n\t\telse\n\t\t\tr=mid;\n\t}//\u5b9e\u6570\u4e8c\u5206\n\tprintf(\"%.6lf\",l);\n\tfclose(stdin);\n\treturn 0;\n}\n\n```",
        "postTime": 1525599208,
        "uid": 53421,
        "name": "nianheng",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3705 \u3010[SDOI2017]\u65b0\u751f\u821e\u4f1a\u3011"
    },
    {
        "content": "\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u6211\u4e00\u5438\u6c27\u5c31\u5f00\u59cb\u75af\u72c2\u70b8\u2026\u2026\n\n(\u603b\u4e4b\u662f\u5728\u6ca1\u6709$O_{2}$\u7684\u60c5\u51b5\u4e0b\u75af\u72c2\u5361\u5e38\u8fc7\u4e86\u8fd9\u9053\u9898)\n\n## 01\u5206\u6570\u89c4\u5212\n\n\u770b\u8d77\u6765\u8fd9\u9053\u9898\u4f3c\u4e4e\u975e\u5e38\u7684\u4e0d\u53ef\u505a\n\n\u4f46\u662f\u719f\u7ec3\u7684OIER\u5e94\u8be5\u4e00\u773c\u5c31\u53ef\u4ee5\u63a8\u51fa\u505a\u6cd5\u5427\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\u9898\u76ee\u4e2d\u7ed9\u51fa\u7684\u5f0f\u5b50\u662f\u8fd9\u6837\u7684\n\n\u6700\u5927\u5316\n\n# $Mid=\\frac{\\sum a_{i,j}}{\\sum b_{i,j}}$\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u7f51\u683c\u56fe\uff0c\u6bcf\u4e2a\u683c\u5b50\u4e0a\u6709\u4e00\u4e2a\u7269\u54c1\uff0c\u4ef7\u503c\u4e3a$a_{i,j}$,\u4ee3\u4ef7\u4e3a$b_{i,j}$\u73b0\u5728\u8981\u6c42\u4f60**\u6bcf\u4e00\u884c\u6bcf\u4e00\u5217\u53d6\u4e14\u4ec5\u80fd\u53d6\u4e00\u4e2a**\uff0c\u6c42$Mid$\u6700\u5927\u503c\n\n\u5982\u679c\u4f60\u5b66\u4e60\u8fc7\u4e00\u79cd\u53eb01\u5206\u6570\u89c4\u5212\u7684\u4e1c\u897f\u7684\u8bdd\uff0c\u4f60\u4f1a\u610f\u8bc6\u5230\uff0c\u5904\u7406\u8fd9\u7c7b\u95ee\u9898\u7b2c\u4e00\u53cd\u5e94\u662f\u4e8c\u5206\u7b54\u6848\uff0c\u66f4\u51c6\u786e\u7684\u6765\u8bb2\uff0c\u6211\u4eec\u5224\u65ad\u6211\u4eec\u4e8c\u5206\u7684\u7b54\u6848mid\u662f\u5426\u6bd4\u771f\u5b9e\u7b54\u6848\u5927\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u6c42\u51fa\u8fd9\u4e2a\u51fd\u6570\u7684\u503c\u4e86\n\n\u8ba9\u6211\u4eec\u6765\u8bd5\u7740\u53d8\u6362\u4e0b\u521a\u624d\u7684\u5f0f\u5b50\n\n# $\\sum a_{i,j}-\\sum Midb_{i,j}=0$\n\n\u4e5f\u5c31\u662f\u8bf4\u5982\u679cmid=c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5f0f\u5b50\u6700\u5927\u503c\u4f1a\u7b49\u4e8e0\n\n\u5982\u679cmid>c\u8fd9\u4e2a\u5f0f\u5b50\u6700\u5927\u503c\u4f1a\u5c0f\u4e8e0\n\n\u5982\u679cmid<c\u8fd9\u4e2a\u5f0f\u5b50\u6700\u5927\u503c\u4f1a\u5927\u4e8e0\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5c31\u6b64\u4e8c\u5206\u7b54\u6848\u4e86\n\n\u552f\u4e00\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662f\uff0c\u5728\u7ed9\u5b9amid\u7684\u524d\u63d0\u4e0b\u5982\u4f55\u6c42\u51fa\u521a\u624d\u90a3\u4e2a\u5f0f\u5b50\u7684\u6700\u5927\u503c\n\n\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u628a\u4e00\u4e2a\u683c\u5b50\u7684\u6743\u503c\u53d8\u6210$a_{i,j}-Midb_{i,j}$\u73b0\u5728\u552f\u4e00\u8981\u8003\u8651\u7684\u95ee\u9898\u5c31\u662f\u5982\u4f55\u6ee1\u8db3**\u6bcf\u4e00\u884c\u6bcf\u4e00\u5217\u53d6\u4e14\u4ec5\u80fd\u53d6\u4e00\u4e2a**\u7684\u524d\u63d0\u4e0b\u505a\u5230\u6700\u4f18\n\n\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u4f7f\u7528\u7f51\u7edc\u6d41\u63cf\u8ff0\u4e00\u4e2a\u4e92\u65a5\u7684\u5173\u7cfb\uff0c\u5982\u679c\u4f60\u8db3\u591f\u719f\u7ec3\u7684\u8bdd\u5e94\u8be5\u53ef\u4ee5\u5f88\u5feb\u53cd\u5e94\u8fc7\u6765\u8fd9\u662f**\u884c\u5217\u62c6\u70b9**\n\n\u5177\u4f53\u6765\u8bb2\u6211\u4eec\u628a\u6bcf\u4e00\u884c\u548c\u6bcf\u4e00\u5217\u770b\u4f5c\u70b9\uff0c\u6bcf\u4e00\u4e2a\u70b9\u770b\u4f5c\u884c\u5217\u95f4\u7684\u4e00\u6761\u8fb9\uff0c\u90a3\u4e48\u6211\u4eec\u5982\u679c\u4ece\u6e90\u70b9\u5411\u6240\u6709\u884c\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a1\u7684\u8fb9\uff0c\u6240\u6709\u5217\u70b9\u5411\u6c47\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a1\u7684\u8fb9\uff0c\u90a3\u4e48\u6211\u4eec\u4f1a\u53d1\u73b0\u8fd9\u6837\u53ef\u4ee5\u6ee1\u8db3\u6bcf\u4e2a\u884c\u5217\u90fd\u53ea\u9009\u4e00\u6b21\u7684\u9650\u5236\u6761\u4ef6\n\n\u5269\u4e0b\u7684\u4e8b\u60c5\u5c31\u662f\u628a\u6bcf\u4e2a\u70b9\u4f5c\u4e3a\u4e00\u4e2a\u5bb9\u91cf\u4e3a1\u7684\u70b9\u8fde\u5165\uff0c\u7136\u540e\u70b9\u6743\u4f5c\u4e3a\u8fb9\u6743\u8dd1\u8d39\u7528\u6d41\u5c31\u597d\u4e86\n\n(\u4e0d\u5c31\u662f\u4e8c\u5206\u56fe\u6700\u5927\u5e26\u6743\u5339\u914d\u5417\u2026\u2026\u4f1a\u7684\u8bdd\u4e0d\u9700\u8981\u6211\u591a\u8bf4\u5427)\n\n## \u5361\u5e38\u6570\n\n\u672c\u9898\u552f\u4e00\u7684\u96be\u70b9\u5728\u4e8e\u4e27\u5fc3\u75c5\u72c2\u7684$10^{-6}$\u7cbe\u5ea6\u8981\u6c42\uff0c\u56e0\u6b64\u6211\u4eec\u7684\u4e8c\u5206\u6b21\u6570\u5c06\u4e0d\u53ef\u907f\u514d\u7684\u591a\n\n\u5177\u4f53\u6765\u8bb2\u5361\u5e38\u6570\u7684\u529e\u6cd5\u5c31\u662f\u53bb\u6389\u4f60\u7a0b\u5e8f\u91cc\u7684\u5168\u90e8\u7ed3\u6784\u9898\u518d\u624b\u5199\u4e00\u4e2a\u961f\u5217\uff0c\u4f9d\u9760\u4fe1\u4ef0\u53ef\u4ee5\u901a\u8fc7\u5361\u5e38\u6765\u901a\u8fc7\u672c\u9898\n\n\u4e0a\u4ee3\u7801~\n\n```C\n#include<cstdio>\n#include<algorithm>\n#include<queue>\nusing namespace std;const int N=110;typedef double db;db eps=1e-8;int n;\nint v[4*N*N];int x[4*N*N];int c[4*N*N];db val[4*N*N];\nint al[2*N];int ct=1;int rst[4*N*N];//\u53bb\u6389\u4e86\u6240\u6709\u7684\u7ed3\u6784\u4f53\uff0c\u5927\u5bb6\u51d1\u5408\u7740\u770b\u5427 \ninline void add(int p,int y)\n{\n    v[++ct]=y;x[ct]=al[p],c[ct]=1;al[p]=ct;rst[ct]=1;\n    v[++ct]=p;x[ct]=al[y];c[ct]=0;al[y]=ct;rst[ct]=0;\n}db cost;db d[2*N];int s;int t;int ctt;int q[4000010];int hd=1;int til;\nint fr[2*N];int nu[2*N];bool book[2*N];\ninline bool spfa()\n{\n    for(int i=1;i<=ctt;i++){d[i]=-0x3f3f3f3f;}d[s]=0;\n    for(q[++til]=s;hd<=til;++hd)//\u8fd9\u91cc\u624b\u5199\u4e86\u961f\u5217\u2026\u2026 \n    {\n        for(int w=q[hd],i=al[w];i;i=x[i])//spfa\u4e0d\u8bf4\u4e86 \n        {\n            if(d[v[i]]<d[w]+val[i]&&c[i]!=0)\n            {\n                fr[v[i]]=w;nu[v[i]]=i;d[v[i]]=d[w]+val[i];\n                if(!book[v[i]]){q[++til]=v[i];book[v[i]]=true;}\n            }\n        }book[q[hd]]=false;\n    }hd=1;til=0;//\u8bb0\u5f97\u624b\u52a8\u6e05\u7a7a \n    if(d[t]==-0x3f3f3f3f){return false;}//\u8fd9\u91cc\u4e3a\u4e86\u7701\u5e38\u6570\u76f4\u63a5+1-1\u56e0\u4e3a\u8fb9\u6743\u53ea\u67091\u548c0 \n    for(int p=t;p!=s;p=fr[p]){c[nu[p]]-=1;c[nu[p]^1]+=1;}\n    cost+=d[t];return true;\n}db a[N][N];db b[N][N];int tr[N][N];\ninline void rebuild(db mid)//\u8fd9\u91cc\u7ef4\u62a4\u4e86\u4e00\u4e2a\u70b9\u5230\u8fb9\u7684\u6620\u5c04 \n{\n    for(int i=1;i<=ct;i++){c[i]=rst[i];}\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=n;j++)//\u91cd\u65b0\u8bbe\u7f6e\u4e0b\u8fb9\u6743 \n        {\n        \tval[tr[i][j]]=a[i][j]-b[i][j]*mid;\n            val[tr[i][j]^1]=-val[tr[i][j]];\n        }\n    }cost=0;\n}\nint main()\n{\n    scanf(\"%d\",&n);ctt=2*n;s=++ctt;t=++ctt;\n    for(int i=1;i<=n;i++){for(int j=1;j<=n;j++){scanf(\"%lf\",&a[i][j]);}}\n    for(int i=1;i<=n;i++){for(int j=1;j<=n;j++){scanf(\"%lf\",&b[i][j]);}}\n    for(int i=1;i<=n;i++){add(s,i);add(n+i,t);}//\u52a0\u8fb9 \n    for(int i=1;i<=n;i++){for(int j=1;j<=n;j++){add(i,n+j);tr[i][j]=ct-1;}}\n    db l=0;db r=1e4;\n    while(r-l>eps)//\u4e8c\u5206\u7b54\u6848 \n    {\n        db mid=(l+r)/2;rebuild(mid);\n        while(spfa());if(cost<0){r=mid;}else {l=mid;}\n    }printf(\"%.6lf\",l);return 0;//\u62dc\u62dc\u7a0b\u5e8f~ \n}\n```\n\n\n\n\n\n",
        "postTime": 1522109615,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3705 \u3010[SDOI2017]\u65b0\u751f\u821e\u4f1a\u3011"
    },
    {
        "content": "### [P3705 [SDOI2017]\u65b0\u751f\u821e\u4f1a](https://www.luogu.com.cn/problem/P3705)\n\n\u8003\u8651\u5230\u6c42\u7684\u662f\u6700\u5927\u503c\uff0c\u6211\u4eec\u4e8c\u5206 $mid$\u3002\n\n$\\dfrac{\\sum a}{\\sum b}<mid\\to \\sum a<\\sum b\\times mid\\to\\sum (a_i-mid\\times b_i)<0$\n\n\u95ee\u9898\u8f6c\u5316\uff0c\u6211\u4eec\u8003\u8651\u8fd9\u4e2a\u5f0f\u5b50\u7684\u5b9e\u9645\u610f\u4e49\u662f\u5bf9\u7537\u751f\u5973\u751f\u8fdb\u884c\u4e8c\u5206\u56fe\u5339\u914d\uff0c\u5339\u914d\u662f\u6709\u4ee3\u4ef7\u7684\uff0c\u4e24\u4e2a\u4eba\u5339\u914d\u7684\u4ee3\u4ef7\u4e3a $a_{i,j}-b_{i,j}\\times mid$\u3002\n\n\u90a3\u4e48\u8003\u8651\u4e8c\u5206\u7684\u5177\u4f53\u5185\u5bb9\uff0c\u6211\u4eec\u53ea\u8981\u8bc1\u660e\u5f53\u524d\u7684 $mid$ \u5b58\u5728 $\\sum (a_i-mid\\times b_i)>0$\n \u5373\u53ef\uff0c\u5982\u679c\u5b58\u5728 $r=mid$ \u5426\u5219 $l=mid$\u3002\n \n \u95ee\u9898\u662f\u5982\u4f55\u8bc1\u660e/\u5bfb\u627e\u6700\u5927\u7684 $\\sum (a_i-mid\\times b_i)$\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u5b83\u7c7b\u4f3c\u4e8e\u8d39\u7528\u6d41\u7684\u5f62\u5f0f\uff0c\u540c\u65f6\u53c8\u56e0\u4e3a\u7f51\u7edc\u6d41\u517c\u5bb9\u4e8c\u5206\u56fe\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u627e\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u6765\u5bfb\u627e\u6700\u5c0f\u503c\uff0c\u65e2\u7136\u662f\u627e\u6700\u5c0f\u503c\uff0c\u6211\u4eec\u5c31\u8981\u628a\u8fb9\u6743\u53d8\u4e3a $mid\\times b_i-a_i$ \u8fdb\u884c\u5bfb\u627e\u3002\n \n\u5177\u4f53\u7684\u770b\u4e0b\u4ee3\u7801\u3002\n\n### CODE\n```cpp\n#include<bits/stdc++.h>\n#define N 105\nusing namespace std;\nint read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nconst double eps=1e-7;\nconst int inf=10000000009;\nint n,a[N][N],b[N][N],head[N],tot=1;\ndouble co;\nint s=0,t;\nstruct node\n{\n\tint from,val,to,next,ini;\n\tdouble a,b,cost;\n}k[N*N*N];\nvoid add(int from,int to,int val,int a,int b)\n{\n\tk[++tot].to=to;\n\tk[tot].from=from;\n\tk[tot].next=head[from];\n\tk[tot].ini=val;\n\tk[tot].a=a;\n\tk[tot].b=b;\n\thead[from]=tot;\n}\nbool vis[N*N];\ndouble dis[N*N];\nqueue<int> q;\nbool spfa()\n{\n\tfor(int i=s;i<=t;i++)dis[i]=inf;\n\tmemset(vis,0,sizeof(vis));\n\twhile(q.size())q.pop();\n\tq.push(0);\n\tvis[0]=1;\n\tdis[0]=0;\n\twhile(q.size())\n\t{\n\t\tint now=q.front();\n\t\tq.pop();\n\t\tvis[now]=0;\n\t\tfor(int i=head[now],to;i;i=k[i].next)\n\t\t{\n\t\t\tto=k[i].to;\n\t\t\tif(k[i].val&&dis[to]>dis[now]+k[i].cost)\n\t\t\t{\n\t\t\t\tdis[to]=dis[now]+k[i].cost;\n\t\t\t\tif(!vis[to])\n\t\t\t\t{\n\t\t\t\t\tq.push(to);\n\t\t\t\t\tvis[to]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[t]<inf;\n}\nint dfs(int now,int can)\n{\n\tif(now==t)return can;\n\tvis[now]=1;\n\tint out=0;\n\tfor(int i=head[now],to;i;i=k[i].next)\n\t{\n\t\tto=k[i].to;\n\t\tif(dis[to]!=dis[now]+k[i].cost||vis[to]||!k[i].val)continue;\n\t\tint res=dfs(to,min(can,k[i].val));\n\t\tk[i].val-=res;\n\t\tk[i^1].val+=res;\n\t\tco+=k[i].cost*res;\n\t\tout+=res;\n\t\tcan-=res;\n\t}\n\tvis[now]=0;\n\tif(out==0)dis[now]=0;\n\treturn out;\n}\nbool check(double mid)\n{\n\tfor(int i=1;i<=tot;i++)\n\tk[i].cost=k[i].b*mid-k[i].a,k[i].val=k[i].ini;\n\tint ans=0;co=0;\n\twhile(spfa())\n\t{\n\t\tmemset(vis,0,sizeof(vis));\n\t\tans+=dfs(0,inf);\n\t}\n\treturn co>0;\n}\nint main()\n{\n\tn=read();t=2*n+1; \n\tfor(int i=1;i<=n;i++)for(int j=1;j<=n;j++)a[i][j]=read();\n\tfor(int i=1;i<=n;i++)for(int j=1;j<=n;j++)b[i][j]=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tadd(0,i,1,0,0);\n\t\tadd(i,0,0,0,0);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tadd(i+n,t,1,0,0);\n\t\tadd(t,i+n,0,0,0);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tadd(i,j+n,1,a[i][j],b[i][j]);\n\t\t\tadd(j+n,i,0,-a[i][j],-b[i][j]);\n\t\t}\n\t}\n\tdouble l=0,r=1e6,mid;\n\twhile(r-l>eps)\n\t{\n\t\tmid=(l+r)/2.0;\n\t\tif(check(mid))r=mid;\n\t\telse l=mid;\n\t}\n\tprintf(\"%.6f\",l);\n\treturn 0;\n}\n\n```",
        "postTime": 1673591202,
        "uid": 331947,
        "name": "hegm",
        "ccfLevel": 0,
        "title": "P3705 [SDOI2017]\u65b0\u751f\u821e\u4f1a \u9898\u89e3"
    },
    {
        "content": "## \u5206\u6790\n\n\u505a\u4e86\u51e0\u9053\u5206\u6570\u89c4\u5212\u9898\uff0c\u9009\u4e00\u4e9b\u6765\u5199\u9898\u89e3\u3002\n\n\u9996\u5148\u89c2\u5bdf\u7b54\u6848\u5f62\u5f0f\uff0c\u5c31\u662f\u6c42\u6700\u7ec8 $(\\dfrac{\\sum a_i'}{\\sum b_i'})\\geqslant ans$ \u6700\u5927\u7684 $ans$\uff0c\u5728\u8f6c\u5316\u4e00\u4e0b\u5f62\u5f0f\uff0c\u5c31\u662f $\\sum a_i'-ans\\times b_i'\\geqslant 0$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53bb\u4e8c\u5206\u7b54\u6848\uff08\u663e\u7136\u8d8a\u5c0f\u7684\u7b54\u6848\u6700\u7ec8\u8d8a\u5bb9\u6613\u4f7f\u4e0a\u9762\u5f0f\u5b50\u6ee1\u8db3\uff09\uff0c\u7136\u540e\u6bcf\u4e00\u7ec4\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u80fd\u8ba1\u7b97\u51fa\uff0c\u7136\u540e\u53c8\u8981\u6c42\u6bcf\u4e00\u4e2a\u4eba\u90fd\u8981\u627e\u5230\u5404\u81ea\u821e\u4f34\uff0c\u5f0f\u5b50\u4e2d\u7684\u5927\u4e8e\u7b49\u4e8e\u53ef\u4ee5\u89c6\u4e3a\u4f7f\u5de6\u8fb9\u7684\u503c\u6700\u5927\uff0c\u6240\u4ee5\u5728 check \u51fd\u6570\u4e2d\u6211\u4eec\u7537\u5973\u751f\u5efa\u70b9\uff0c\u6bcf\u4e00\u7ec4\u7684\u8d21\u732e\u7528\u4f5c\u5efa\u8fb9\uff0c\u7537\u751f\u5411\u5973\u751f\u5efa\u8fb9\uff0c\u6d41\u91cf\u4e3a $1$\uff0c\u8d39\u7528 $a[i][j]-mid\\times b[i][j]$\uff0c\u8d85\u7ea7\u6e90\u70b9\u5411\u7537\u751f\uff0c\u5973\u751f\u5411\u8d85\u7ea7\u6c47\u70b9\u5efa\u6d41\u91cf $1$\uff0c\u8d39\u7528 $0$ \u7684\u8fb9\uff0c\u9a8c\u8bc1\u6700\u5927\u8d39\u7528\u662f\u5426\u5927\u4e8e\u7b49\u4e8e $0$ \u5373\u53ef\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline void read(int &res){\n\tres=0;\n\tint f=1;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9')res=(res<<1)+(res<<3)+c-48,c=getchar();\n\tres*=f;\n}\nint n,s,t;\nint a[105][105];\nint b[105][105];\nint head[210],tot;\nstruct edge{\n\tint to,nex,w;\n\tdouble bq;\n}e[100000];\ninline void add(int qq,int mm,int w,double bq){\n\te[++tot].to=mm;\n\te[tot].nex=head[qq];\n\te[tot].w=w;\n\te[tot].bq=bq;\n\thead[qq]=tot;\n}\ndouble dis[210];\nint pre[210],incf[210];\nqueue<int>q;\nint vis[210];\nbool spfa(){\n\tfor(int i=1;i<=t;i++){\n\t\tdis[i]=-1e18;\n\t\tincf[i]=1e9;\n\t}\n\tq.push(s);\n\twhile(q.size()){\n\t\tint x=q.front();q.pop();\n\t\tvis[x]=0;\n\t\tfor(int i=head[x];i;i=e[i].nex){\n\t\t\tif(!e[i].w)continue;\n\t\t\tint v=e[i].to;\n\t\t\tif(dis[v]<dis[x]+e[i].bq){\n\t\t\t\tpre[v]=i;\n\t\t\t\tdis[v]=dis[x]+e[i].bq;\n\t\t\t\tincf[v]=min(incf[v],e[i].w);\n\t\t\t\tif(!vis[v])q.push(v);\n\t\t\t\tvis[v]=1;\n\t\t\t}\n\t\t}\n\t}\n\treturn incf[t]<1e9;\n}\nbool check(double x){\n\tmemset(head,0,sizeof(head));\n\ttot=1;\n\tfor(int i=1;i<=n;i++){\n\t\tadd(0,i,1,0);\n\t\tadd(i,0,0,0);\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tdouble bq=-x*b[i][j]+a[i][j];\n\t\t\tadd(i,j+n,1,bq);\n\t\t\tadd(j+n,i,0,-bq);\n\t\t}\n\t\tadd(i+n,t,1,0);\n\t\tadd(t,i+n,0,0);\n\t}\n\tdouble sum=0;\n\twhile(spfa()){\n\t\tsum+=incf[t]*dis[t];\n\t\tint x=t;\n\t\twhile(x!=s){\n\t\t\te[pre[x]].w--;\n\t\t\te[pre[x]^1].w++;\n\t\t\tx=e[pre[x]^1].to;\n\t\t}\n\t}\n\treturn sum>=0;\n}\nint main()\n{\n\tread(n);\n\ts=0;t=2*n+1;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++)read(a[i][j]);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++)read(b[i][j]);\n\t}\n\tdouble l=0,r=10000;\n\twhile(r-l>=1e-7){\n\t\tdouble mid=(l+r)/2.0;\n\t\tif(check(mid))l=mid+1e-8;\n\t\telse r=mid-1e-8;\n\t}\n\tprintf(\"%.6lf\",l);\n}\n\n```\n",
        "postTime": 1639445237,
        "uid": 166410,
        "name": "\u6f20\u5bd2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3705 [SDOI2017]\u65b0\u751f\u821e\u4f1a"
    },
    {
        "content": "\u505a\u5b8c\u8fd9\u4e2a\u9898\u4e4b\u540e\u5bf9\u8fd9\u4e2a\u9898\u4ea7\u751f\u4e86\u6df1\u6df1\u5730\u538c\u6076\u3002\u3002\u3002\n\n\u51fa\u9898\u4eba\u51fa\u8fd9\u4e2a\u9898\u8fd8\u4e0dSPJ\u4f30\u8ba1\u5c31\u662f\u4e3a\u4e86\u6076\u5fc3\u4eba\u7684\u3002\n\n\u663e\u7136\u4e8c\u5206\u7b54\u6848\uff0c\u7136\u800c\u7531\u4e8e\u7cbe\u786e\u5230\u5c0f\u6570\u70b9\u540e6\u4f4d\uff0c\u5bfc\u81f4\u6211\u4eec\u5fc5\u987b\u628a\u4e8c\u5206\u7684\u7ea7\u6570\u589e\u592710^6\u3002\n\n\u8fde\u8fb9\u4ec0\u4e48\u7684\u697c\u4e0b\uff08\u53ef\u80fd\u9a6c\u4e0a\u5c31\u53d8\u6210\u697c\u4e0a\u4e86\uff09\uff0c\u51e0\u4f4d\u90fd\u8bf4\u7684\u5f88\u660e\u767d\u4e86\uff0c\u5c31\u662f\u628a\u9898\u76ee\u4e2d\u7684\u5206\u5f0f\u5316\u6210\u4e00\u4e2a\u7b49\u5f0f\uff0c\u5224\u65ad\u6700\u7ec8\u7ed3\u679c\u662f\u5426\u5c0f\u4e8e0\u5373\u53ef\u3002\n\n\u4f5c\u4e3a\u5176\u4ed6\u9898\u89e3\u7684\u4e00\u4e9b\u8865\u5145\uff0c\u8bf4\u4e00\u4e0b\u9632\u6b62T\u7684\u4e00\u4e9b\u65b9\u6cd5\uff1a\n\n\u2460\u4e0d\u8981\u968f\u4fbf\u589e\u5927\u4e8c\u5206\u4e0a\u754c\uff0c\u7b97\u597d\u4e86\u5199\n\n\u2461\u6700\u597d\u8fd8\u662f\u628a\u8ba1\u7b97\u65f6\u7684\u6570\u636e* 1e7\uff0c\u6700\u540e\u4e00\u5757\u9664\u6389\uff0c\u8981\u4e0d\u53ef\u80fd\u51fa\u73b0\u7384\u5b66\u5bfc\u81f4\u6b7b\u5faa\u73af\u3002\u3002\n\n\u2462\u4e0d\u8981\u5f00\u5927\u6570\u7ec4\uff0cmemset\u4f1a\u6559\u4f60\u505a\u4eba\u7684\u3002\n\n\u2463\u7ed3\u6784\u4f53\u5c3d\u91cf\u6539\u6210\u6570\u7ec4\u5427\uff0c\u8c8c\u4f3c\u597d\u50cf\u4f1a\u5feb\u4e00\u4e9b\u3002\n\n\u2464\u8bf7\u5c3d\u91cf\u4f7f\u7528\u8f83\u9ad8\u7ea7\u7684\u7b97\u6cd5\u641e\u8fd9\u4e2a\u9898\n\n\u2465\u7136\u800c\u6211\u4eec\u4f9d\u7136\u8981\u4fdd\u8bc1\u4e00\u5b9a\u7684\u7cbe\u5ea6\uff0c\u7b2c5\u4e2a\u70b9\uff0c\u5f88\u5bb9\u6613\u4f60\u5c31\u51fa\u95ee\u9898\uff0c\u7136\u540e\u8fd8\u6709\u4e00\u7b2c9\u4e2a\u70b9\uff0c\u6570\u636e\u4e0d\u662f\u6700\u5927\u7684\u4f46\u662fT\u7684\u5f88\u5389\u5bb3\u3002\n\n\u2466\u8bb0\u4f4fmemset\u6570\u7ec4\u8fd8\u6709num\u7684\u91cd\u7f6e\u3002\u3002\u3002\n\n# \u2467\u6700\u91cd\u8981\u7684\u2014\u2014\u2014\u2014>O2\u4f18\u5316\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<queue>\n#define inf 1000000000000001ll\n#define maxxx 500000001\n#define re register\n#define ll long long\n#define min(a,b) a<b?a:b \nusing namespace std;\nconst long double eps=0.00000007;\nstruct po{\n\tint to,nxt,w;\n\tll dis;\n};\npo edge[800001];\nint n,m,s,t,b[205],p;\nint head[205],num=-1;\nll tot,dis[205],pa[501][501],pb[501][501];\ninline int read()\n{\n    int x=0,c=1;\n    char ch=' ';\n    while((ch>'9'||ch<'0')&&ch!='-')ch=getchar();\n    while(ch=='-')c*=-1,ch=getchar();\n    while(ch<='9'&&ch>='0')x=x*10+ch-'0',ch=getchar();\n    return x*c;\n}\ninline void add_edge(int from,int to,int w,ll dis)\n{\n\tedge[++num].nxt=head[from];\n\tedge[num].to=to;\n\tedge[num].w=w;\n\tedge[num].dis=dis;\n\thead[from]=num;\n}\ninline void add(int from,int to,int w,ll dis)\n{\n\tadd_edge(from,to,w,dis);\n\tadd_edge(to,from,0,-dis);\n}\ninline bool spfa()\n{\n\tfor(re int i=s;i<=t;i++) dis[i]=inf+1;\n\tmemset(b,0,sizeof(b));\n\tqueue<int> q;\n\tq.push(t);\n\tdis[t]=0;\n\tb[t]=1;\n\twhile(!q.empty()){\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tb[u]=0;\n\t\tfor(re int i=head[u];i!=-1;i=edge[i].nxt){\n\t\t\tint v=edge[i].to;\n\t\t\tif(edge[i^1].w>0&&dis[v]>dis[u]-edge[i].dis){\n\t\t\t\tdis[v]=dis[u]-edge[i].dis;\n\t\t\t\tif(!b[v]){\n\t\t\t\t\tb[v]=1;\n\t\t\t\t\tq.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[s]<inf;\n}\ninline int dfs(int u,int low)\n{\n\tb[u]=1;\n\tif(u==t) return low;\n\tint diss=0;\n\tfor(re int i=head[u];i!=-1;i=edge[i].nxt){\n\t\tint v=edge[i].to;\n\t\tif(edge[i].w&&!b[v]&&dis[v]==dis[u]-edge[i].dis){\n\t\t\tint check=dfs(v,min(edge[i].w,low));\n\t\t\tif(check){\n\t\t\t\ttot+=check*edge[i].dis;\n\t\t\t\tlow-=check;\n\t\t\t\tdiss+=check;\n\t\t\t\tedge[i].w-=check;\n\t\t\t\tedge[i^1].w+=check;\n\t\t\t\tif(low==0) break;\n\t\t\t}\n\t\t}\n\t}\n\treturn diss;\n}\ninline void max_flow()\n{\n\tint ans=0;\n\twhile(spfa()){\n\t\tb[t]=1;\n\t\twhile(b[t]){\n\t\t\tmemset(b,0,sizeof(b));\n\t\t\tans+=dfs(s,maxxx);\n\t\t\t\n\t\t}\n\t}\n\treturn;\n}\ninline void build(ll x)\n{\n\tmemset(head,-1,sizeof(head));\n\tnum=-1;tot=0;\n\tfor(re int i=1;i<=n;i++)\n\tadd(s,i,1,0),add(n+i,t,1,0);\n\tfor(re int i=1;i<=n;i++)\n\t for(re int j=1;j<=n;j++)\n\t add(i,j+n,1,-(pa[i][j]-pb[i][j]*x));\n}\ninline bool check(ll x)\n{\n\tbuild(x);\n\tmax_flow();\n\tif(-tot<=0) return 1;\n\telse return 0;\n}\nint main()\n{\n\tn=read();\n\tfor(re int i=1;i<=n;i++) \n\t for(re int j=1;j<=n;j++)\n\t pa[i][j]=read(),pa[i][j]*=5000000;\n\tfor(re int i=1;i<=n;i++)\n\t for(re int j=1;j<=n;j++)\n\t pb[i][j]=read();\n\t s=0,t=n+n+1;\n\tll l=1,r=50000000000ll;\n\twhile(r>=l){\n\t\tll mid=(l+r)/2;\n\t\tif(check(mid))\n\t\tr=mid-1; else\n\t\tl=mid+1;\n\t}\n\tprintf(\"%.6lf\",l*1.0/5000000);\n}\n```",
        "postTime": 1521675789,
        "uid": 49223,
        "name": "Victorique",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3705 \u3010[SDOI2017]\u65b0\u751f\u821e\u4f1a\u3011"
    },
    {
        "content": "\u4e8c\u5206\u7b54\u6848 + \u7f51\u7edc\u6d41\u3002\n\n\u9898\u610f\u6709\u70b9\u50cf\u8d39\u7528\u6d41\uff0c\u4f46\u662f\u76f4\u63a5\u8dd1\u662f\u4e0d\u884c\u7684\u3002\n\n\u56e0\u4e3a\u76f4\u63a5\u5efa\u56fe\u7684\u8bdd\u4f60\u9700\u8981\u77e5\u9053\u6bcf\u4e2a\u70b9\u7cbe\u786e\u7684\u8d39\u7528\uff0c\u800c\n\n$\\sum\\dfrac{a_i}{b_i}\\ne\\dfrac{\\sum a_i}{\\sum b_i}$\n\n~~\u6211\u5c45\u7136\u8fd8\u50bb\u4e4e\u4e4e\u7684\u8bd5\u4e86\u4e00\u4e0b\uff0c\u8fd9\u662f\u53ef\u4ee5\u8bf4\u7684\u5417~~\n\n\u8003\u8651\u4e8c\u5206\u7b54\u6848\u3002\n\n\u7a0d\u5fae\u53d8\u5f62\u4e00\u4e0b\u5f0f\u5b50\uff1a\n\n$\\sum a_i-C\\sum b_i=0$\n\n$\\sum a_i-K\\sum b_i\\ge0(K\\le C)$\n\n\u7136\u540e `check` \u51fd\u6570\u4e0d\u5c31\u5199\u51fa\u6765\u4e86\u5417\u3002\n\n\u6309\u7167 $a_i-mid\\sum b_i$ \u5efa\u8d39\u7528\uff0c\u5982\u679c\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u5927\u4e8e\u7b49\u4e8e $0$\uff0c\u90a3\u4e48\u7b54\u6848\u53ef\u4ee5\u5927\u4e8e\u7b49\u4e8e\u8fd9\u4e2a\u6570\u5b57\uff0c$l=mid$\uff0c\u5426\u5219 $r=mid$\u3002\n\n\u6ce8\u610f `check` \u7684\u65f6\u5019\u6e05\u7a7a\u53d8\u91cf\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N = 205;\nconst int M = 3e4 + 5;\nconst ll inf = 1e18;\nconst double eps = 1e-8;\nint n, s, t, tot, head[N], to[M], nxt[M];\nint a[105][105], b[105][105];\nll val[M], flw;\ndouble c[M], d[N], cst;\nbool vis[N];\ninline void link(int u, int v, ll w, double cost)\n{\n    to[tot] = v;\n    nxt[tot] = head[u];\n    val[tot] = w;\n    c[tot] = cost;\n    head[u] = tot++;\n}\ninline void add(int u, int v, ll w, double cost)\n{\n    link(u, v, w, cost);\n    link(v, u, 0, -cost);\n}\nqueue<int> q;\ninline bool spfa()\n{\n    for (int i = s; i <= t; i++)\n        d[i] = 1e18;\n    q.emplace(s);\n    d[s] = 0;\n    vis[s] = true;\n    while (!q.empty())\n    {\n        int tmp = q.front();\n        q.pop();\n        vis[tmp] = false;\n        for (int i = head[tmp]; ~i; i = nxt[i])\n            if (val[i] && d[to[i]] > d[tmp] + c[i])\n            {\n                d[to[i]] = d[tmp] + c[i];\n                if (!vis[to[i]])\n                {\n                    vis[to[i]] = true;\n                    q.emplace(to[i]);\n                }\n            }\n    }\n    return d[t] != inf;\n}\ninline ll dfs(int x, ll flow)\n{\n    if (x == t)\n        return flow;\n    vis[x] = true;\n    ll rest = flow;\n    for (int i = head[x]; ~i && rest; i = nxt[i])\n        if (!vis[to[i]] && val[i] && d[to[i]] == d[x] + c[i])\n        {\n            ll rs = dfs(to[i], min(rest, val[i]));\n            if (!rs)\n                d[to[i]] = inf;\n            else\n            {\n                rest -= rs;\n                val[i] -= rs;\n                val[i ^ 1] += rs;\n                cst += rs * c[i];\n            }\n        }\n    vis[x] = false;\n    return flow - rest;\n}\ninline double mcmf()\n{\n    while (spfa())\n        flw += dfs(s, inf);\n    return cst;\n}\ninline bool check(double x)\n{\n    memset(head, -1, sizeof(head));\n    tot = flw = cst = 0;\n    for (int i = 1; i <= n; i++)\n        add(s, i, 1, 0), add(i + n, t, 1, 0);\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++)\n            add(i, j + n, 1, -(a[i][j] - x * b[i][j]));\n    return mcmf() < 0;\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cin >> n;\n    double l = 0, r = 0;\n    s = 0, t = n << 1 | 1;\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++)\n            cin >> a[i][j], r += a[i][j];\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++)\n            cin >> b[i][j];\n    while (r - l > eps)\n    {\n        double mid = (l + r) / 2;\n        if (check(mid))\n            l = mid;\n        else\n            r = mid;\n    }\n    cout << fixed << showpoint << setprecision(6) << l;\n    return 0;\n}\n```",
        "postTime": 1673122411,
        "uid": 576378,
        "name": "creation_hy",
        "ccfLevel": 5,
        "title": "P3705 \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u80af\u5b9a\u8eb2\u4e0d\u6389\u4e00\u4e2a\u4e8c\u5206\u4e00\u4e2a\n$C$\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u8003\u8651\u7684\u4fbf\u662f\u5982\u4f55\u5224\u65ad\u7b54\u6848\u662f\u5426\u5408\u6cd5\u3002\n\n\u8003\u8651 $C$ \u5df2\u77e5\u540e\uff0c\u5408\u6cd5\u7684\u5145\u8981\u6761\u4ef6\u4e3a\n\n$$\n\\begin{aligned}\n&C \\ge \\frac{a_1' + a_2' + a_3' \\ldots + a_n'}{b_1' + b_2' + b_3'+ \\cdots + b_n'}\\\\\n\\Leftrightarrow &C \\sum_{i = 1}^n b_i \\geqslant \\sum_{i = 1}^n a_i\\\\\n\\Leftrightarrow &\\sum_{i = 1}^n {Cb}_i - a_i \\geqslant 0\n\\end{aligned}\n$$\n\n\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u5c06\u6bcf\u4e2a\u7537\u751f\u5411\u5973\u751f\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a ${Cb}_i - a_i$ \u7684\u8fb9\uff0c\u518d\u6c42\u4e8c\u5206\u56fe\u6700\u5927\u6743\u5339\u914d\u5224\u65ad\u4e8c\u5206\u7684 $C$ \u662f\u5426\u5408\u6cd5\u5373\u53ef\u3002\u8dd1\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u7684\u70b9\u6570\u4e3a $ O(n)$ \u7ea7\u522b\uff0c\u8fb9\u6570\u4e3a $O(n^{2})$ \u7ea7\u522b\uff0c\u6700\u5927\u6d41\u91cf\u4e3a $n$\uff0c\u56e0\u6b64\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O (n^3 \\log\\sum_{i=1}^n\\sum_{j=1}^na_{i,j})$\uff0c\u8db3\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n",
        "postTime": 1666076197,
        "uid": 360977,
        "name": "541forever",
        "ccfLevel": 0,
        "title": "P3705 [SDOI2017]\u65b0\u751f\u821e\u4f1a"
    },
    {
        "content": "**\u5206\u6570\u89c4\u5212\u5957\u4e00\u4e2a KM \u7b97\u6cd5\u3002**\n\n\u5c06\u821e\u4f1a\u7684\u5339\u914d\u770b\u4f5c\u4e00\u4e2a\u4e8c\u5206\u56fe\u5339\u914d\u3002\n\n\u6211\u4eec\u8981\u6700\u5927\u5316 $ \\frac{\\sum_{i=1}^{n}{a_i^{'}}}{\\sum_{i=1}^n{b_i^{'}}}$\u3002\n\n\u53ef\u4ee5\u9996\u5148\u4e8c\u5206\u51fa\u4e00\u4e2a\u7b54\u6848 $mid$\uff0c\u5c06\u6bcf\u4e24\u4e2a\u4eba\u4e4b\u95f4\u7684\u6743\u8bbe\u4e3a $a_{i,j}-mid\\times b_{i,j} $\uff0c\u5957\u4e00\u4e2a KM \u7b97\u6cd5\u6c42\u6b64\u65f6\u4e8c\u5206\u56fe\u6700\u5927\u6743\u5b8c\u7f8e\u5339\u914d\u3002\n\n\u82e5\u8fd9\u4e2a\u503c\u5927\u4e8e $0$\uff0c\u90a3\u4e48\u7b54\u6848\u8fd8\u53ef\u4ee5\u66f4\u5927\uff1b\u82e5\u7b49\u4e8e $0$ \u90a3\u4e48\u7b54\u6848\u5c31\u662f\u6b64\u65f6\uff1b\u82e5\u5c0f\u4e8e $0$ \u90a3\u4e48\u7b54\u6848\u4f1a\u66f4\u5c0f\u3002\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <queue>\n#include <iomanip>\n#define double long double\n#define int long long\nusing namespace std;\nconst int kMaxN=201;\nconst double eps=1e-8;\nint n,a[kMaxN][kMaxN],b[kMaxN][kMaxN];\ndouble l,r=1e5,mid,ans;\ndouble hopel[kMaxN],hoper[kMaxN],w[kMaxN][kMaxN],d[kMaxN];\nint matchx[kMaxN],matchy[kMaxN],pre[kMaxN];\nbool visl[kMaxN],visr[kMaxN];\nvoid Match(int x)\n{\n  int lose;\n  while(x)\n  {\n    lose=matchx[pre[x]];\n    matchx[pre[x]]=x;\n    matchy[x]=pre[x];\n    x=lose;\n  }\n}\nvoid Bfs(int x)\n{\n  memset(visl,0,sizeof(visl));\n  memset(visr,0,sizeof(visr));\n  memset(pre,0,sizeof(pre));\n  for(int i=1;i<=n;i++)d[i]=1e15;\n  queue<int>q;\n  q.push(x);\n  while(1)\n  {\n    while(!q.empty())\n    {\n      int now=q.front();\n      q.pop();\n      visl[now]=true;\n      for(int i=1;i<=n;i++)\n      {\n        if(visr[i])continue;\n        if(d[i]>hopel[now]+hoper[i]-w[now][i])\n        {\n          d[i]=hopel[now]+hoper[i]-w[now][i];\n          pre[i]=now;\n          if(!d[i])\n          {\n            visr[i]=true;\n            if(!matchy[i])\n            {\n              Match(i);\n              return;\n            }\n            else\n            {\n              q.push(matchy[i]);\n            }\n          }\n        }\n      }\n    }\n    double mind=1e15;\n    for(int i=1;i<=n;i++)\n    {\n      if(!visr[i])mind=min(mind,d[i]);\n    }\n    for(int i=1;i<=n;i++)\n    {\n      if(visl[i])hopel[i]-=mind;\n      if(visr[i])hoper[i]+=mind;\n      else d[i]-=mind;\n    }\n    for(int i=1;i<=n;i++)\n    {\n      if(visr[i])continue;\n      if(!d[i])\n      {\n        visr[i]=true;\n        if(!matchy[i])\n        {\n          Match(i);\n          return;\n        }\n        else\n        {\n          q.push(matchy[i]);\n        }\n      }\n    }\n  }\n}\nbool Check(double x)\n{\n  for(int i=1;i<=n;i++)\n  {\n    for(int j=1;j<=n;j++)\n    {\n      w[i][j]=a[i][j]-x*b[i][j];\n    }\n  }\n  double sum=0;\n  memset(matchx,0,sizeof(matchx));\n  memset(matchy,0,sizeof(matchy));\n  memset(pre,0,sizeof(pre));\n  for(int i=1;i<=n;i++)\n  {\n    hopel[i]=-1e15;\n    hoper[i]=0;\n    for(int j=1;j<=n;j++)\n    {\n      hopel[i]=max(hopel[i],w[i][j]);\n    }\n  }\n  for(int i=1;i<=n;i++)\n  {\n    Bfs(i);\n  }\n  for(int i=1;i<=n;i++)\n  {\n    sum+=w[matchy[i]][i];\n  }\n  return sum>=0;\n}\nsigned main()\n{\ncin>>n;\nfor(int i=1;i<=n;i++)\n{\n  for(int j=1;j<=n;j++)cin>>a[i][j];\n}\nfor(int i=1;i<=n;i++)\n{\n  for(int j=1;j<=n;j++)cin>>b[i][j];\n}\nwhile(r-l>eps)\n{\n  mid=(l+r)/2.0;\n  //cout<<l<<\" \"<<r<<\" \"<<mid<<\"\\n\";\n  if(Check(mid))\n  {\n    ans=mid,l=mid;\n  }\n  else r=mid;\n}\ncout<<fixed<<setprecision(6)<<ans;\nreturn 0;\n}\n```",
        "postTime": 1648793158,
        "uid": 210719,
        "name": "Violet___Evergarden",
        "ccfLevel": 4,
        "title": "P3705"
    },
    {
        "content": "\u5e7f\u544a\uff1a[\u4e00\u540d Blink \u7684\u535a\u5ba2](https://foreverxxx.blog.luogu.org/)\n\n### \u524d\u8a00\n\n\u975e\u5e38\u8ba9\u4eba\u4e0d\u89e3\u7684\u4e00\u9053\u9898\uff0c\u6ca1\u6709 SPJ \u5bfc\u81f4\u6211\u8c03\u4e86\u534a\u5929\u4e8c\u5206\u7cbe\u5ea6\u624d\u8fc7\u2026\u2026\n\n### \u601d\u8def\n\n\u9996\u5148\u660e\u786e\u8fd9\u662f\u4e00\u9053\u5206\u6570\u89c4\u5212\u7684\u9898\u3002\u7531\u4e8e\u7b54\u6848\u5177\u6709\u5355\u8c03\u6027\uff0c\u6211\u4eec\u8003\u8651\u5c06\u7b54\u6848\u8fdb\u884c\u4e8c\u5206\u3002\n\n\u5bf9\u4e8e\u6240\u6c42\u7684\u7b54\u6848 $C$\uff0c\u6211\u4eec\u9700\u8981\u5c06\n$\\ C=\\dfrac{\\sum\\limits_{i=1}^{n}a_i}{\\sum\\limits_{i=1}^{n}b_i}$ \n\u6700\u5927\u5316\u3002\n\n\u5bf9\u4e8e\u5206\u6570\u89c4\u5212\u7684\u9898\uff0c\u5f88\u660e\u663e\u6211\u4eec\u53ef\u4ee5\u5c06\u5f0f\u5b50\u5316\u7b80\u4e3a \n$\\ C \\times \\sum\\limits_{i=1}^{n}b_i=\\sum\\limits_{i=1}^{n}a_i$\uff0c\u5373\u5f97\u5230  $\\ \\sum\\limits_{i=1}^{n}a_i - C \\times \\sum\\limits_{i=1}^{b}b_i = 0$\u3002\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u4e8c\u5206\u7b54\u6848 $C$\uff0c\u5c06\u6240\u6709\u7684\u8fb9\u5747\u8d4b\u503c\u4e3a $a_{i,j}-C \\times b_{i,j}$\uff0c\u7136\u540e\u8dd1\u4e00\u6b21\u4e8c\u5206\u56fe\u6700\u5927\u6743\u5b8c\u7f8e\u5339\u914d\uff0c\u5982\u679c KM \u7b97\u6cd5\u5f97\u5230\u7684\u7b54\u6848\u5927\u4e8e\u7b49\u4e8e $0$\uff0c\u5219\u5c06\u4e8c\u5206\u4e0b\u754c\u6269\u5927\uff0c\u5426\u5219\u5c06\u4e8c\u5206\u4e0a\u754c\u7f29\u5c0f\u3002\n\n\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u867d\u7136\u8fd9\u9053\u9898 KM \u7b97\u6cd5\u8dd1\u5f97\u6bd4\u7f51\u7edc\u6d41\u5feb\uff0c\u4e0d\u8fc7\u8fd8\u662f\u53ef\u4ee5\u6784\u9020\u51fa\u6570\u636e\u6765\u5c06 KM \u7b97\u6cd5\u7684\u6548\u7387\u641e\u6210 $O(n^4)$\uff0c\u4e0d\u8fc7\u6ca1\u6709\u5173\u7cfb\uff0c\u65e2\u7136\u4e0d\u5361\u7f51\u7edc\u6d41\uff0c\u90a3 KM \u7b97\u6cd5\u66f4\u4e0d\u53ef\u80fd\u88ab\u5361\u4e86\uff08\u5b9e\u5728\u4e0d\u884c\u5c31\u4e0a BFS \u7248\u672c\u7684 KM \u5427\uff09\u3002\n\nCode\n\n```cpp#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n\tint sss=0,www=1;\n\tchar chh=getchar();\n\twhile(chh<'0'||chh>'9'){\n\t\tif(chh=='-') www=-1;\n\t\tchh=getchar();\n\t}\n\twhile(chh>='0'&&chh<='9'){\n\t\tsss=sss*10+chh-'0';\n\t\tchh=getchar();\n\t}\n\treturn sss*www;\n}\nint n;\ndouble delta;\ndouble lx[105],ly[105];\nint matched[105];\nbool visx[105],visy[105];\ndouble a[105][105],b[105][105];\ndouble edge[105][105];\ndouble l=0,r=1e4,eps=1e-7;\nvoid remake_gragh(double mid){//\u4e8c\u5206\u7b54\u6848\u540e\u8fdb\u884c\u8fb9\u7684\u91cd\u65b0\u8d4b\u503c\u64cd\u4f5c\n\tfor(register int i=1;i<=n;i++){\n\t\tfor(register int j=1;j<=n;j++)\n\t\t\tedge[i][j]=a[i][j]-b[i][j]*mid;\n\t}\n}\nbool find(int now){\n\tvisx[now]=true;\n\tfor(register int i=1;i<=n;i++){\n\t\tif(!visy[i]){\n\t\t\tif(lx[now]+ly[i]-edge[now][i]>=-eps&&lx[now]+ly[i]-edge[now][i]<=eps){\n\t\t\t\tvisy[i]=true;\n\t\t\t\tif(!matched[i]||find(matched[i])){\n\t\t\t\t\tmatched[i]=now;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse delta=min(delta,lx[now]+ly[i]-edge[now][i]);\n\t\t}\n\t}\n\treturn false;\n}\ndouble KM(){//\u5e38\u89c4\u7684DFS\u7248\u672c\u7684KM\u7b97\u6cd5\n\tmemset(lx,0x3f,sizeof lx);\n\tmemset(ly,0,sizeof ly);\n\tmemset(matched,0,sizeof matched);\n\tfor(register int i=1;i<=n;i++){\n\t\twhile(true){\n\t\t\tmemset(visx,false,sizeof visx);\n\t\t\tmemset(visy,false,sizeof visy);\n\t\t\tdelta=1e18;\n\t\t\tif(find(i)) break;\n\t\t\tfor(register int j=1;j<=n;j++){\n\t\t\t\tif(visx[j]) lx[j]-=delta;\n\t\t\t\tif(visy[j]) ly[j]+=delta;\n\t\t\t}\n\t\t}\n\t}\n\tdouble ans=0;\n\tfor(register int i=1;i<=n;i++)\n\t\tans+=edge[matched[i]][i];\n\treturn ans;\n}\nint main(){\n\tn=read();\n\tfor(register int i=1;i<=n;i++){\n\t\tfor(register int j=1;j<=n;j++){\n\t\t\ta[i][j]=(double)read();\n\t\t}\n\t}\n\tfor(register int i=1;i<=n;i++){\n\t\tfor(register int j=1;j<=n;j++){\n\t\t\tb[i][j]=(double)read();\n\t\t}\n\t}\n\twhile(l+eps<r){\n\t\tdouble mid=(l+r)/2;\n\t\tremake_gragh(mid);\n\t\tif(KM()>=0) l=mid;\n\t\telse r=mid;\n\t}\n\tprintf(\"%.6lf\",l);\n\treturn 0;\n}\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n\tint sss=0,www=1;\n\tchar chh=getchar();\n\twhile(chh<'0'||chh>'9'){\n\t\tif(chh=='-') www=-1;\n\t\tchh=getchar();\n\t}\n\twhile(chh>='0'&&chh<='9'){\n\t\tsss=sss*10+chh-'0';\n\t\tchh=getchar();\n\t}\n\treturn sss*www;\n}\nint n;\ndouble delta;\ndouble lx[105],ly[105];\nint matched[105];\nbool visx[105],visy[105];\ndouble a[105][105],b[105][105];\ndouble edge[105][105];\ndouble l=0,r=1e4,eps=1e-7;\nvoid remake_gragh(double mid){\n\tfor(register int i=1;i<=n;i++){\n\t\tfor(register int j=1;j<=n;j++)\n\t\t\tedge[i][j]=a[i][j]-b[i][j]*mid;\n\t}\n}\nbool find(int now){\n\tvisx[now]=true;\n\tfor(register int i=1;i<=n;i++){\n\t\tif(!visy[i]){\n\t\t\tif(lx[now]+ly[i]-edge[now][i]>=-eps&&lx[now]+ly[i]-edge[now][i]<=eps){\n\t\t\t\tvisy[i]=true;\n\t\t\t\tif(!matched[i]||find(matched[i])){\n\t\t\t\t\tmatched[i]=now;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse delta=min(delta,lx[now]+ly[i]-edge[now][i]);\n\t\t}\n\t}\n\treturn false;\n}\ndouble KM(){\n\tmemset(lx,0x3f,sizeof lx);\n\tmemset(ly,0,sizeof ly);\n\tmemset(matched,0,sizeof matched);\n\tfor(register int i=1;i<=n;i++){\n\t\twhile(true){\n\t\t\tmemset(visx,false,sizeof visx);\n\t\t\tmemset(visy,false,sizeof visy);\n\t\t\tdelta=1e18;\n\t\t\tif(find(i)) break;\n\t\t\tfor(register int j=1;j<=n;j++){\n\t\t\t\tif(visx[j]) lx[j]-=delta;\n\t\t\t\tif(visy[j]) ly[j]+=delta;\n\t\t\t}\n\t\t}\n\t}\n\tdouble ans=0;\n\tfor(register int i=1;i<=n;i++)\n\t\tans+=edge[matched[i]][i];\n\treturn ans;\n}\nint main(){\n\tn=read();\n\tfor(register int i=1;i<=n;i++){\n\t\tfor(register int j=1;j<=n;j++){\n\t\t\ta[i][j]=(double)read();\n\t\t}\n\t}\n\tfor(register int i=1;i<=n;i++){\n\t\tfor(register int j=1;j<=n;j++){\n\t\t\tb[i][j]=(double)read();\n\t\t}\n\t}\n\twhile(l+eps<r){\n\t\tdouble mid=(l+r)/2;\n\t\tremake_gragh(mid);\n\t\tif(KM()>=0) l=mid;\n\t\telse r=mid;\n\t}\n\tprintf(\"%.6lf\",l);\n\treturn 0;\n}\n```",
        "postTime": 1644716129,
        "uid": 367316,
        "name": "Foreverxxx",
        "ccfLevel": 0,
        "title": "P3705 [SDOI2017]\u65b0\u751f\u821e\u4f1a \u9898\u89e3"
    },
    {
        "content": "## P3705 [SDOI2017]\u65b0\u751f\u821e\u4f1a\n\n\u8bfb\u9898\uff0c\u603b\u7ed3\u9898\u610f\uff1a\n\n\u6709\u4e24\u4e2a\u70b9\u96c6\u5408\uff0c\u4e0d\u540c\u70b9\u96c6\u4e4b\u95f4\u7684\u70b9\u53ef\u4ee5\u4e24\u4e24\u4e92\u76f8\u914d\u5bf9\uff0c\u6bcf\u4e00\u5bf9\u914d\u5bf9 $(i,j)$ \u4f1a\u4ea7\u751f\u6709\u4e24\u4e2a\u6743\u503c $a_{i,j},b_{i,j}$\uff0c\u6c42\u914d\u5bf9\u65b9\u6848 $S$ \u4f7f\u5f97 $C=\\frac{\\sum_{(i,j)\\in S} a_{i,j}}{\\sum_{(i,j)\\in S} b_{i,j}}$ \u6700\u5927\uff0c\u4e14\u6240\u6709\u70b9\u90fd\u88ab\u914d\u5bf9\u3002\u53ea\u9700\u7ed9\u51fa $C$ \u7684\u6700\u5927\u503c\u3002\n\n---\n\n\u6839\u636e\u505a\u9898\u7ecf\u9a8c\uff0c\u8fd9\u662f\u4e00\u4e2a\u5206\u6570\u89c4\u5212\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651 **\u4e8c\u5206\u4e00\u4e2a\u503c $mid$ \u4f7f\u5f97 $C\\ge mid$**\u3002\n\n\u7136\u540e\u5957\u8def\u5730\u5316\u4e00\u4e0b\u5f0f\u5b50\uff1a\n\n$$\\sum_{(i,j)\\in S} a_{i,j}\\ge mid \\sum_{(i,j)\\in S} b_{i,j}\\\\\n\\sum_{(i,j)\\in S}(a_{i,j}-mid\\cdot b_{i,j})\\ge 0\n$$\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $mid$\uff0c\u6211\u4eec\u9700\u8981\u9a8c\u8bc1\u5b58\u5728\u4e00\u79cd\u60c5\u51b5\u4e0a\u9762\u7684\u5f0f\u5b50\u80fd\u591f\u6210\u7acb\u3002\u95ee\u9898\u96c6\u4e2d\u4e8e\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u914d\u5bf9\u95ee\u9898\u3002\n\n\u5bf9\u4e8e\u8fd9\u7c7b\u914d\u5bf9\u95ee\u9898\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u7f51\u7edc\u6d41\u3002\n\n\u8bbe\u9898\u4e2d\u7684\u7537\u751f\u4e3a\u5de6\u90e8\u70b9\uff0c\u5973\u751f\u4e3a\u53f3\u90e8\u70b9\uff0c\u7531\u4e8e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5de6\u90e8\u70b9\uff0c\u90fd\u5411\u6240\u6709\u7684\u53f3\u90e8\u70b9\u8fde\u4e86\u8fb9\uff0c\u4e14\u5de6\u53f3\u4e24\u90e8\u70b9\u7684\u4e2a\u6570\u76f8\u540c\uff0c\u6240\u4ee5\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u5b8c\u7f8e\u5339\u914d\u3002\n\n\u6211\u4eec **\u5efa\u7acb\u8d85\u7ea7\u6e90\u6c47\u70b9\uff0c\u8d85\u7ea7\u6e90\u70b9\u5411\u6240\u6709\u5de6\u90e8\u70b9\u8fde\u8fb9\uff0c\u5de6\u90e8\u70b9\u5411\u53f3\u90e8\u70b9\u8fde\u8fb9\uff0c\u53f3\u90e8\u70b9\u5411\u8d85\u7ea7\u6c47\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u5747\u4e3a $1$**\u3002\u5bb9\u6613\u8bc1\u56fe\u4e2d\u4efb\u610f\u4e00\u4e2a\u6700\u5927\u6d41\u4e0e\u4e00\u4e2a\u5408\u6cd5\u65b9\u6848\u4e00\u4e00\u5bf9\u5e94\u3002\n\n\u7136\u540e\u6211\u4eec\u8981\u8003\u8651\u5982\u4f55\u4f53\u73b0\u6743\u503c\u7684\u5f71\u54cd\u3002\n\n\u7531\u4e8e\u6700\u5927\u6d41\u5df2\u7ecf\u88ab\u7528\u6765\u4fdd\u8bc1\u4e86\u5408\u6cd5\u65b9\u6848\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u8d39\u7528\u4e0b\u624b\u3002\u4ece\u4e0a\u9762\u7684\u4e0d\u7b49\u5f0f\u53ef\u4ee5\u770b\u51fa\uff0c\u6211\u4eec\u53ea\u9700\u8981\u9a8c\u8bc1\u4e0d\u7b49\u5f0f\u53f3\u8fb9\u7684\u6700\u5927\u503c\u5927\u4e8e $0$ \u5373\u53ef\uff0c\u53d1\u73b0\u6c42\u548c\u7684\u6bcf\u4e00\u9879\u90fd\u53ea\u4e0e\u4e00\u5bf9\u914d\u5bf9\u672c\u8eab\u6709\u5173\uff0c\u800c\u914d\u5bf9\u5728\u4e0a\u9762\u7684\u5efa\u56fe\u4e2d\u88ab\u62bd\u8c61\u6210\u4e86\u8fb9\uff0c**\u6240\u4ee5\u6211\u4eec\u5c06\u8fb9 $(i,j)$ \u7684\u8d39\u7528\u8bbe\u6210 $a_{i,j}-mid\\cdot b_{i,j}$\uff0c\u7136\u540e\u8dd1\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\uff0c\u5224\u5b9a\u8d39\u7528\u662f\u5426\u5927\u4e8e $0$** \u5373\u53ef\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef double dd;\n\nconst int N=1010,M=1e5+10,INF=1e8;\n\nint head[N],ver[M<<1],nxt[M<<1],cc[M<<1],tot=0;\ndd ww[M<<1];\nvoid add(int x,int y,int c,dd d)\n{\n\tver[tot]=y; cc[tot]=c; ww[tot]=d; nxt[tot]=head[x]; head[x]=tot++;\n\tver[tot]=x; cc[tot]=0; ww[tot]=-d; nxt[tot]=head[y]; head[y]=tot++;\n}\nint n,S,T;\nint a[N][N],b[N][N];\n\nint q[M],incf[M],pre[M];\ndd d[M];\nbool vis[M];\n\nbool spfa()\n{\n\tint hh=0,tt=1;\n\tmemset(d,0x42,sizeof d);\n\tmemset(incf,0,sizeof incf);\n\tq[0]=S; d[S]=0.0; incf[S]=INF;\n\twhile(hh!=tt)\n\t{\n\t\tint x=q[hh++];\n\t\tif(hh==M) hh=0;\n\t\tvis[x]=0;\n\t\tfor(int i=head[x];~i;i=nxt[i])\n\t\t{\n\t\t\tint y=ver[i];\n\t\t\tif(cc[i] && d[y]>d[x]+ww[i])\n\t\t\t{\n\t\t\t\td[y]=d[x]+ww[i];\n\t\t\t\tpre[y]=i;\n\t\t\t\tincf[y]=min(cc[i],incf[x]);\n\t\t\t\tif(!vis[y])\n\t\t\t\t{\n\t\t\t\t\tq[tt++]=y;\n\t\t\t\t\tif(tt==M) tt=0;\n\t\t\t\t\tvis[y]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn incf[T]>0;\n}\n\ndd EK()\n{\n\tint flow=0;\n\tdd cost=0;\n\twhile(spfa())\n\t{\n\t\tint tmp=incf[T];\n\t\tflow+=tmp; cost+=(dd)tmp*d[T];\n\t\tfor(int i=T;i!=S;i=ver[pre[i]^1])\n\t\t{\n\t\t\tcc[pre[i]]-=tmp;\n\t\t\tcc[pre[i]^1]+=tmp;\n\t\t}\n\t}\n\treturn cost;\n}\n\n\nbool check(dd mid)\n{\n\tmemset(head,-1,sizeof head);\n\ttot=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tadd(i,n+j,1,-((dd)a[i][j]-mid*(dd)b[i][j]));\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tadd(S,i,1,0),add(n+i,T,1,0);\n\treturn -EK()>=0;\n}\n\nint read()\n{\n\tint x=0;\n\tint w=1;\n\tchar ch=getchar();\n\twhile(ch>'9'||ch<'0') w*=(ch=='-'?-1:1),ch=getchar();\n\twhile(ch>='0'&&ch<='9') x=(x<<1)+(x<<3)+ch-'0',ch=getchar();\n\treturn x*w;\n}\n\nint main()\n{\n\tn=read();\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++) a[i][j]=read();\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++) b[i][j]=read();\n\tdd l=-1e5-10,r=1e5+10,mid;\n\tS=0,T=2*n+1;\n\twhile(r-l>1e-7)\n\t{\n\t\tmid=(l+r)/2.0;\n\t\tif(check(mid)) l=mid;\n\t\telse r=mid;\n\t}\n\tprintf(\"%.6lf\",l);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1631626739,
        "uid": 278259,
        "name": "RemiliaScarlet\u25ce",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3705 [SDOI2017]\u65b0\u751f\u821e\u4f1a"
    },
    {
        "content": "\u4e8c\u5206\u56fe\u6700\u4f73\u5339\u914d + \u5206\u6570\u89c4\u5212\u3002\u8bfb\u9898\uff0c\u53d1\u73b0\u8981\u6c42\u6700\u4f18\u914d\u5bf9\uff0c\u5f88\u663e\u7136\uff0c\u8fd9\u4e2a\u56fe\u662f\u4e00\u5f20\u4e8c\u5206\u56fe\uff0c\u90a3\u4e48\u6700\u4f73\u5339\u914d\u6211\u4eec\u53ef\u4ee5\u7528 $\\text{KM}$ \u6216\u8005 \u8d39\u7528\u6d41 \u6765\u6c42\u51fa\uff0c\u8fd9\u91cc\u4e0d\u8d58\u8ff0\u5982\u4f55\u6c42\u51fa\u6700\u4f73\u5339\u914d\u3002\u6211\u4eec\u6765\u8003\u8651\u600e\u4e48\u8ba1\u7b97\u8fd9\u4e2a $C=\\frac{\\sum_{i=1}^{k}a'[i]}{\\sum_{i=1}^{k}b'[i]}$\u3002\u663e\u7136\uff0c\u8fd9\u91cc\u7684 $\\sum_{i=1}^{k}b'[i]$ \u662f\u975e\u5e38\u4e0d\u597d\u5904\u7406\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5f15\u5165**\u5206\u6570\u89c4\u5212**\u7684\u601d\u60f3\uff0c\u5c06\u8fd9\u4e2a\u5f0f\u5b50\u8f6c\u5316\u6210 $\\sum_{}^{}a'-C\\sum_{}^{}b'=0$\uff0c\u7136\u540e\u4e8c\u5206\u7b54\u6848 $C$\uff0c\u6bcf\u6b21 $\\text{Check}$ \u90fd\u8dd1\u4e00\u904d\u6700\u4f73\u5339\u914d\uff0c\u8fb9\u6743\u5c31\u8bbe\u6210 $a[i][j]-mid\\times b[i][j]$\uff0c\u7136\u540e\u8dd1\u6700\u5927\u6743\u6700\u4f73\u5339\u914d\uff08\u4e5f\u5c31\u662f\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\uff09\uff0c\u5224\u65ad\u6700\u540e\u5f97\u5230\u7684\u6743\u548c\u662f\u5426\u4e3a $0$ \u5373\u53ef\u3002\n\n\u540c\u6b65\u53d1\u8868\u4e8e\u7b14\u8005\u7684\u535a\u5ba2\uff1a[\u9898\u89e3 P3705 [SDOI2017]\u65b0\u751f\u821e\u4f1a](https://venusnero.github.io/2019/01/25/solution_p3705/)\n\n\u4ee3\u7801\u9009\u7528 $\\text{zkw}$ \u8d39\u7528\u6d41\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 1005\n#define inf 1010580540\n#define eps 1e-8\nusing namespace std;\ndeque <int> q;\nint cnt,fst[MAXN],nxt[MAXN<<5],to[MAXN<<5],w[MAXN<<5],cur[MAXN];\nint n,m,S,T,maxflow;\ndouble dis[MAXN],a[MAXN][MAXN],b[MAXN][MAXN],cot[MAXN<<5],mincost;\nbool inq[MAXN],vis[MAXN];\nvoid AddEdge(int u,int v,int c,double fl)\n{\n\tto[++cnt]=v;\n\tnxt[cnt]=fst[u];\n\tfst[u]=cnt;\n\tw[cnt]=c;\n\tcot[cnt]=fl;\n}\nbool Spfa()\n{\n\tfor(int i=S;i<=T;i++) dis[i]=inf;\n\tmemset(inq,0,sizeof(inq));\n\tq.push_front(T);\n\tdis[T]=0;\n\tinq[T]=1;\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop_front();\n\t\tinq[u]=0;\n\t\tfor(int i=fst[u];i;i=nxt[i])\n\t\t{\n\t\t\tint v=to[i];\n\t\t\tif(dis[v]>dis[u]-cot[i] && w[i^1])\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]-cot[i];\n\t\t\t\tif(!inq[v])\n\t\t\t\t{\n\t\t\t\t\tif(!q.empty() && dis[v]<dis[q.front()]) q.push_front(v);\n\t\t\t\t\telse q.push_back(v);\n\t\t\t\t\tinq[v]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[S]!=inf;\n}\nint Dfs(int u,int flow)\n{\n\tvis[u]=1;\n\tif(u==T || !flow) return flow;\n\tint used=0;\n\tfor(int &i=cur[u];i;i=nxt[i])\n\t{\n\t\tint v=to[i];\n\t\tif(dis[v]==dis[u]-cot[i] && w[i] && !vis[v])\n\t\t{\n\t\t\tint fl=Dfs(v,min(flow,w[i]));\n\t\t\tif(fl)\n\t\t\t{\n\t\t\t\tused+=fl;\n\t\t\t\tflow-=fl;\n\t\t\t\tw[i]-=fl;\n\t\t\t\tw[i^1]+=fl;\n\t\t\t\tif(!flow) break;\n\t\t\t}\n\t\t}\n\t}\n\treturn used;\n}\nvoid zkwMCMF()\n{\n\twhile(Spfa())\n\t{\n\t\tvis[T]=1;\n\t\twhile(vis[T])\n\t\t{\n\t\t\tmemset(vis,0,sizeof(vis));\n\t\t\tmemcpy(cur,fst,sizeof(fst));\n\t\t\tint fl=Dfs(S,inf);\n\t\t\tmaxflow+=fl;\n\t\t\tmincost+=dis[S]*fl;\n\t\t}\n\t}\n\tmincost=-mincost;\n}\nbool Check(double mid)\n{\n\tmaxflow=mincost=0;\n\tcnt=1;\n\tmemset(fst,0,sizeof(fst));\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tAddEdge(S,i,1,0);\n\t\tAddEdge(i,S,0,0);\n\t}\n\tfor(int i=n+1;i<=n*2;i++)\n\t{\n\t\tAddEdge(i,T,1,0);\n\t\tAddEdge(T,i,0,0);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tAddEdge(i,j+n,1,-a[i][j]+b[i][j]*mid);\n\t\t\tAddEdge(j+n,i,0,a[i][j]-b[i][j]*mid);\n\t\t}\n\t}\n\tzkwMCMF();\n\treturn fabs(mincost)<=eps || mincost>eps;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tS=0;\n\tT=n*2+1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=n;j++) scanf(\"%lf\",&a[i][j]);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=n;j++) scanf(\"%lf\",&b[i][j]);\n\t}\n\tdouble l=0,r=1e4;\n\twhile(r-l>eps)\n\t{\n\t\tdouble mid=(l+r)/2.0;\n\t\tif(Check(mid)) l=mid;\n\t\telse r=mid;\n\t}\n\tprintf(\"%.6lf\\n\",r);\n\treturn 0;\n}\n```",
        "postTime": 1548394264,
        "uid": 23243,
        "name": "VenusM1nT",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3705 \u3010[SDOI2017]\u65b0\u751f\u821e\u4f1a\u3011"
    },
    {
        "content": "### $Describe$\n> \u6709\u4e00\u573a\u821e\u4f1a,n\u4e2a\u7537\u751f,n\u4e2a\u5973\u751f,\u8981\u7ec4\u6210n\u5bf9\u821e\u4f34,\u7537\u751fi\u548c\u5973\u751fj\u7ec4\u961f\u7684\u9002\u5408\u5ea6\u662f$a_{ij}$,\n\u4e0d\u9002\u5408\u5ea6\u662f$b_{ij}$,\n \u8ba9\u4f60\u6c42$max(\\sum($\u9002\u5408\u5ea6$)/\\sum($\u4e0d\u9002\u5408\u5ea6$))$\n\n### $Solution$\n\u8fd9\u9053\u9898\u662f$01$\u5206\u6570\u89c4\u5212\u7684\u597d\u9898\u76ee\u3002\u6211\u4eec\u9996\u5148\u62c6\u5206\u8fd9\u4e2a\u5f0f\u5b50:\n\u4ee4$A_i$\u4e3a\u821e\u4f34\u7684\u9002\u5408\u5ea6,$B_i$\u4e3a\u4e0d\u9002\u5408\u5ea6\n\n$$C=\\sum_{i=1}^{i<=n}a_i/\\sum_{i=1}^{i<=n}b_i$$  \n$$\\sum_{i=1}^{i<=n}a_i=\\sum_{i=1}^{i<=n}b_i*C$$  \n$$\\sum_{i=1}^{i<=n}a_i-\\sum_{i=1}^{i<=n}b_i*C=0$$  \n\n\u5219\u6211\u4eec\u53ef\u4ee5\u5bf9C\u4e8c\u5206\u4e00\u4e2a\u6570$mid$,\u4ee4\uff1a\n$$ans=max(\\sum_{i=1}^{i<=n}a_i-\\sum_{i=1}^{i<=n}b_i*mid)$$\n\n\u5982\u679c$ans>0$\u5219$ans$\u6bd4$C$\u8981\u5c0f,\u53cd\u4e4b\u6bd4$C$\u5927\n\n\u90a3\u4e48\u8fd9\u4e2a$max(ans)\u600e\u4e48\u6c42\u5462\uff1f$\n\u8fd9\u4e2a\u968f\u4fbf\u7528\u4e2a\u8d39\u7528\u6d41\u641e\u4e00\u641e\u5c31\u597d\u4e86;\n- \u628a\u6bcf\u4e2a\u4eba\u62c6\u6210$x$\u548c$x'$\n- \u5c06$S$\u548c$x$\u76f8\u8fde\uff0c\u6d41\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a0\n- \u5c06$x'$\u548c$T$\u76f8\u8fde\uff0c\u6d41\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a0\n- \u5bf9\u4e8e\u4e24\u4e2a\u4eba$x,y$\u6211\u4eec\u5c06$x$\u548c$y'$\u76f8\u8fde\uff0c\u6d41\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a$a[x][y]-mid*b[x][y]$(\u56e0\u4e3a\u6211\u7684spfa\u662f\u8dd1\u7684\u6700\u77ed\u8def\uff0c\u6240\u4ee5\u6211\u5199\u7684\u662f-a[x][y]+mid*b[x][y],\u6700\u540e\u8dd1\u51fa\u6765\u7684\u7b54\u6848\u7684\u7edd\u5bf9\u503c\u5c31\u662f\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41);\n- \u8dd1\u4e00\u904d\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\n\n### $Code$\n\u7f51\u7edc\u6d41\u4ee3\u7801\u8fc7\u957f\uff0c\u79fb\u6b65\u5230\u535a\u5ba2\u6548\u679c\u66f4\u4f73\n[\u6233\u8fd9](https://www.cnblogs.com/hbxblog/p/10266038.html)",
        "postTime": 1547437963,
        "uid": 19805,
        "name": "\u64a4\u4e91",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3705 \u3010[SDOI2017]\u65b0\u751f\u821e\u4f1a\u3011"
    },
    {
        "content": "\u539f\u9898\u4f20\u9001\u95e8[>Here<](https://www.luogu.org/problemnew/show/P3705)\n\n\u6211\u768401\u5206\u6570\u89c4\u5212\u5b66\u4e60\u7b14\u8bb0[>Here<](https://www.luogu.org/blog/PopulusEuphratica/post-xue-xi-bi-ji-01-fen-shuo-gui-hua)\n\n\u8fd9\u9053\u9898\u662f\u9053\u6bd4\u8f83\u6709\u8da3\u768401\u5206\u6570\u89c4\u5212\u9898\uff0c\u4e0d\u4ec5\u9700\u898101\u5206\u6570\u89c4\u5212\u7684\u601d\u60f3\uff0c\u8fd8\u8981\u5e94\u7528\u7f51\u7edc\u6d41\u6c42\u89e3\uff0c\u6709\u4e00\u4e9b\u590d\u6742\u3002\n\n\u8003\u8651\u5bf9\u4e8e\u4e8c\u5206\u51fa\u7684\u6bcf\u4e00\u4e2a\u503c\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u7f51\u7edc\u6d41\u5efa\u56fe:\n\n\u4ece\u6e90\u70b9\u5411\u6240\u6709\u7537\u751f\u5efa\u8fb9\uff0c\u6d41\u4e3a1\uff0c\u8d39\u7528\u4e3a0\uff1b\n\n\u4ece\u7537\u751f\u5411\u5973\u751f\u5efa\u8fb9\uff0c\u6d41\u4e3a1\uff0c\u8d39\u7528\u4e3a$mid*b_{ij}-a_{ij}$;\n\n\u4ece\u5973\u751f\u5411\u6c47\u70b9\u5efa\u8fb9\uff0c\u6d41\u4e3a1\uff0c\u8d39\u7528\u4e3a0\u3002\n\n\u63a5\u4e0b\u6765\u8dd1\u4e00\u904d\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u6c42\u51fa\u5339\u914d\u7684\u6700\u5c0f\u8d39\u7528\uff0c\u5224\u65ad\u662f\u5426\u662f\u8d1f\u6570\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u8fd9\u9898\u8fd8\u9700\u8981\u5361\u4e00\u70b9\u5e38\uff0c\u4e5f\u7b97\u662f\u8003\u9a8c\u4e0b\u5e94\u8bd5\u6280\u5de7\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#define min(X,Y) ((X)<(Y)?(X):(Y))\n\nint n,head[301],nxt[180001],b[180001],v[180001],k=1;\nint vt[180001],flow[301],q[100001],h,t,S,T,pre[301];\ndouble dis[301],ct[180001],bene[180001],cost[180001],a[101][101],bad[101][101],tem,l=0.0,r=100000000.0,mid;\nbool inq[301];\nvoid push(int s,int t,int val,double c){\n\tnxt[++k]=head[s];\n\thead[s]=k;\n\tb[k]=t;\n\tv[k]=val;\n\tcost[k]=c;\n}\nvoid link(int s,int t,int val,double c){\n\tpush(s,t,val,c);\n\tpush(t,s,0,-c);\n}\nbool spfa(){\n\tfor(int i=S;i<=T;i++)dis[i]=1000000000.0;\n\th=t=0;\n\tq[++t]=S;\n\tinq[S]=1;\n\tdis[S]=0.0;\n\tflow[S]=0x7f7f7f7f;\n\twhile(h<t){\n\t\t++h;inq[q[h]]=0;\n\t\tfor(register int i=head[q[h]];i;i=nxt[i])\n\t\t\tif(dis[b[i]]>dis[q[h]]+cost[i]&&v[i]){\n\t\t\t\tdis[b[i]]=dis[q[h]]+cost[i];\n\t\t\t\tflow[b[i]]=min(flow[q[h]],v[i]);\n\t\t\t\tpre[b[i]]=i;\n\t\t\t\tif(!inq[b[i]])inq[b[i]]=1,q[++t]=b[i];\n\t\t\t}\n\t}\n\treturn dis[T]!=1000000000.0;\n}\nbool judge(double u){\n\tdouble ans=0.0;\n\tmemset(head,0,sizeof head);\n\tk=1;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tlink(i,j+n,1,u*bad[i][j]-a[i][j]);\n\t\tlink(S,i,1,0.0);\n\t\tlink(i+n,T,1,0.0);\n\t}\n\twhile(spfa()){\n\t\tint tem=T;\n\t\twhile(tem!=S){\n\t\t\tv[pre[tem]]-=flow[T];\n\t\t\tv[pre[tem]^1]+=flow[T];\n\t\t\ttem=b[pre[tem]^1];\n\t\t}\n\t\tans+=(double)flow[T]*dis[T];\n\t}\n\treturn ans<0.0;\n}\nint read(){\n\tint x=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')ch=getchar();\n\twhile(ch>='0'&&ch<='9')x=x*10+ch-'0',ch=getchar();\n\treturn x;\n}\nint main(){\n\tn=read();\n\tT=n+n+1; \n\tfor(register int i=1;i<=n;i++)\n\t\tfor(register int j=1;j<=n;j++)\n\t\t\ta[i][j]=(double)read();\n\tfor(register int i=1;i<=n;i++)\n\t\tfor(register int j=1;j<=n;j++)\n\t\t\tbad[i][j]=(double)read();\n\twhile(r-l>=0.000000001){\n\t\tmid=(l+r)/2;\n\t\tif(judge(mid))l=mid;\n\t\telse r=mid;\n\t}\n\tprintf(\"%.6lf\",l);\n}\n```",
        "postTime": 1534001580,
        "uid": 30903,
        "name": "Isonan",
        "ccfLevel": 0,
        "title": "luoguP3705 [SDOI2017]\u65b0\u751f\u821e\u4f1a"
    }
]