[
    {
        "content": "WA\u65e0\u6570\uff0c\u7ec8\u4e8eAC\u3002\u3002\u3002\r\n\r\n\u601d\u8def\uff1aspfa+\u4e8c\u5206\r\n\r\n\u867d\u7136\u601d\u8def\u5df2\u7ecf\u91cd\u590d\u4e86\uff0c\u4f46\u662f\u6211\u60f3\u8bf4\uff0c\u771f\u7684\u770b\u4e0d\u61c2queue\u548cvector\u5e93\uff08\u672c\u849f\u84bb\u7ffb\u4e86\u9898\u89e3\uff0c\u90fd\u6ca1\u6709\uff09\u3002\u3002\u3002\r\n\r\n\u6240\u4ee5\uff0c\u8fd9\u91cc\u53d1\u4e00\u4e2a\u7528head\uff0ctail\uff0cteam\u7684\u3002\u3002\u3002\uff08dalao\u52ff\u55b7\uff09\r\n\r\n```cpp\r\n#include<cstdio>\r\n#define INF 1000000001\r\n#define M 100001\r\n#define N 10001\r\n#define r(i,a,b) for (int i=a;i<=b;i++)\r\nusing namespace std;\r\nint n,m,k,x,y,t,u,z,tot,team[N],head=0,tail=1,d,f[N],p,l,r,mid,b[N];\r\nint min(int x,int y){return x<y?x:y;}\r\nint max(int x,int y){return x>y?x:y;}\r\nlong long dis[N];bool v[N];\r\nstruct node{int next,to,v;}a[M];//\u90bb\u63a5\u8868\r\nvoid add(int u,int v,int w)//\u5efa\u56fe\r\n{\r\n    a[++tot].next=f[u];\r\n    a[tot].to=v;\r\n    a[tot].v=w;\r\n    f[u]=tot;\r\n}\r\nvoid read(int &f)//\u8f93\u5165\u6d41\r\n{\r\n    f=0;char c;bool d=0;\r\n    while (c=getchar(),c<'0'||c>'9') if (c=='-') d=1;f=f*10+c-48;\r\n    while (c=getchar(),c>='0'&&c<='9') f=f*10+c-48;\r\n    if (d) f*=-1;\r\n}\r\nvoid write(int x)//\u8f93\u51fa\u6d41\r\n{\r\n    if (x<0) {putchar('-');x=-x;}\r\n    if (!x) {putchar(48);return;}\r\n    if (!(x/10)){putchar(x%10+48);return;}\r\n    write(x/10);putchar(x%10+48);\r\n}\r\nbool spfa(int wh)\r\n{\r\n    if (b[1]>wh) return false;//\u76f4\u63a5\u9000\u51fa\uff0c\u8fd4\u56defalse\r\n    r(i,1,n) dis[i]=INF;\r\n    head=0;team[1]=1;tail=v[1]=true;dis[1]=0;//\u521d\u59cb\u5316\r\n    while(head!=tail)\r\n     {\r\n        head=head%N+1;//\u5faa\u73af\u961f\u5217\r\n        u=team[head];v[u]=true;t=f[u];//\u6807\u8bb0\r\n        while(t)//\u8bbf\u95ee\u6240\u6709\u90bb\u63a5\u70b9\r\n         {\r\n            if (dis[u]+a[t].v<dis[a[t].to])\r\n             {\r\n                  dis[a[t].to]=dis[u]+a[t].v;\r\n                   if (!v[a[t].to]&&b[a[t].to]<=wh)\r\n                    {\r\n                         tail=tail%N+1;\r\n                         team[tail]=a[t].to;//\u5165\u961f\r\n                         v[a[t].to]=1;//\u6807\u8bb0\r\n                     }\r\n             }\r\n            t=a[t].next;\r\n         }\r\n         v[u]=false;\r\n     }\r\n     if(dis[n]<k) return true;//\u6ee1\u8db3\u8981\u6c42\r\n     return false;//\u5426\u5219\r\n}\r\nint main()\r\n{\r\n    read(n);read(m);read(k);\r\n    r(i,1,n) \r\n     {read(b[i]);r=max(b[i],r);}//r\u5c31\u662f\u6240\u6709\u8d39\u7528\u4e2d\u7684\u6700\u5927\u503c\r\n    l=max(b[1],b[n]);//\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u7684\u6700\u5927\u503c\r\n    r(i,1,m)\r\n    {\r\n        read(x);read(y);read(z);if (x==y) continue;\r\n        add(x,y,z);\r\n        add(y,x,z);//\u53cc\u5411\r\n    }\r\n    if (!spfa(INF)) {printf(\"AFK\");return 0;}//\u7279\u5224\r\n    while(r-l+1)//\u76f8\u5f53\u4e8el<=r\uff0c\u7136\u800c\u8fd9\u5e76\u6ca1\u6709\u4ec0\u4e48\u5375\u7528\r\n    {\r\n        int mid=(l+r)>>1;//\u4e8c\u5206\r\n        if (spfa(mid)) r=mid-1;else l=mid+1;\r\n    }\r\n    printf(\"%d\",l);//\u8f93\u51fa\r\n}\r\n```\r\n~~\uff08\u559c\u6b22\u5c31\u70b9\u4e2a\u8d5e\u5457\uff09~~\r\n\u6c42dalao\u653e\u8fc7\uff0cqwq\u3002\r\n",
        "postTime": 1516708782,
        "uid": 52915,
        "name": "Ajwallet",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "### \u5176\u5b9e\u5427\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u4e2a\u9898\u4f5c\u4e3a\u4e00\u4e2a\u84dd\u9898\u662f\u88ab\u8bc4\u9ad8\u4e86\n\n### \u6838\u5fc3\u7b97\u6cd5\uff1a\u5355\u6e90\u6700\u77ed\u8def + \u4e8c\u5206\u7b54\u6848\n\n(\u6211\u4e3a\u4ec0\u4e48\u8bf4\u8bc4\u9ad8\u4e86:\n\n\u5355\u6e90\u6700\u77ed\u8def\uff08\u5f31\u5316\u7248\uff09\uff1a\u6d1b\u8c37\u96be\u5ea6\u8bc4\u7ea7\uff1a\u666e\u53ca/\u63d0\u9ad8-\uff08\u8fd9\u9898\u5e76\u6ca1\u6709\u5361SPFA\uff09\n\n\u6807\u51c6\u7684\u4e8c\u5206\u7b54\u6848\u9898\uff1a[\u3010P1182 \u6570\u5217\u5206\u6bb5`Section II`\u3011](https://www.luogu.org/problemnew/show/P1182)\n\u4e0e\u3010[P1316 \u4e22\u74f6\u76d6](https://www.luogu.org/problemnew/show/P1316)\u3011\n\uff1a\u6d1b\u8c37\u96be\u5ea6\u8bc4\u7ea7\uff1a\u666e\u53ca/\u63d0\u9ad8-\n\n~~\u4e24\u4e2a\u9ec4\u9898\u5408\u5728\u4e00\u8d77\u5c45\u7136\u84dd\u4e86....~~\n\n------------\n\n\u4e0d\u8bf4\u8fd9\u4e2a\u96be\u5ea6\uff0c\u5f00\u59cb\u8bb2\u9898\u3002\n\n\u9996\u5148\u4ecd\u7136\u662f\u5206\u6790\u9898\u610f\u3002\n\n\u6838\u5fc3\u6761\u4ef6\uff1a\n\n1. \u4e00\u5f00\u59cb\u57281\u53f7\u8282\u70b9\uff0c\u8981\u5230\u8fbe\u7ec8\u70b9n\u53f7\u8282\u70b9\n\n2. \u6bcf\u4e2a\u70b9\u4f1a\u6709\u4e00\u4e2a\u8d39\u7528\n\n3. \u6bcf\u6761\u9053\u8def\u90fd\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684\u635f\u5931\u8840\u91cf\n\n\u6b21\u8981\u6761\u4ef6\uff08\u540c\u6837\u91cd\u8981\uff09\n\n1. \u9053\u8def\u4e3a\u53cc\u5411\n\n2. \u53ea\u6709\u8840\u91cf\u4f1a\u4f7f\u4ed6\u65e0\u6cd5\u5230\u8fbe\u7ec8\u70b9~~\uff08\u571f\u8c6a\u4e0d\u4f1a\u88ab\u94b1\u5361\u4f4f\uff09~~\n\n\u9898\u76ee\u76ee\u7684\uff1a\n\n   **\u6c42\u51fa\u5230\u8fbe\u8def\u7ebf\u4e2d\u6700\u5927\u6536\u8d39\u7684\u6700\u5c0f\u503c**\n   \n\u628a\u8fd9\u4e9b\u8981\u70b9\u63d0\u70bc\u51fa\u6765\u540e\uff0c\u5c31\u5dee\u4e0d\u591a\u53ef\u4ee5\u5f00\u59cb\u5199\u9898\u4e86\u3002\n\n------------\n\n\u9996\u5148\uff0c\u770b\u89c1\u8fd9\u4e2a\u95ee\u9898\uff0c\u5c31\u5e94\u8be5\u60f3\u5230\u4e8c\u5206\u3002\n\n**\u6240\u6709\u7c7b\u4f3c\u4e8e\u201c\u6c42\u89e3\u6240\u6709\u7684\u6700\u5927\u503c\u4e2d\u7684\u6700\u5c0f\u503c\u201d\u7684\u95ee\u9898\uff0c\u90fd\u5e94\u8be5\u5148\u60f3\u4e00\u60f3\u7528\u4e8c\u5206\u7b54\u6848\u7684\u65b9\u6cd5\u6765\u5199\u3002**\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a**\u4e8c\u5206\u7b54\u6848\u5c31\u662f\u7528\u6765\u6c42\u89e3\u8fd9\u79cd\u95ee\u9898\u7684**\uff0c\u5b83\u901a\u8fc7\u731c\u6d4b\u76ee\u524d\u7684\u7b54\u6848+\u9a8c\u8bc1\u76ee\u524d\u7b54\u6848\u662f\u5426\u6210\u7acb\u6765\u6c42\u89e3\uff0c\u8fd9\u79cd\u201c\u5047\u8bbe\u5df2\u7ecf\u77e5\u9053\u7b54\u6848\u201d\u7684\u65b9\u6cd5\u6bd4\u7528\u9898\u76ee\u4fe1\u606f\u6c42\u89e3\u7b54\u6848\u7684\u65b9\u6cd5\u8981\u4f18\u79c0\u5f88\u591a\uff0c\u800c\u4e14\u590d\u6742\u5ea6\u4e5f\u4ec5\u4ec5\u662f\u52a0\u4e86\u4e00\u4e2alog\u3002\n\n\u4f46\u662f\u8fd8\u8981\u6ce8\u610f\u4e00\u70b9\uff0c**\u9664\u4e86\u8fd9\u79cd\u7ecf\u5178\u95ee\u6cd5\u4ee5\u5916\uff0c\u8fd8\u8981\u901a\u8fc7\u7b54\u6848\u662f\u5426\u5177\u6709\u5355\u8c03\u6027\u6765\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u7b54\u6848\u7684\u65b9\u6cd5**\n\n### \u4e0d\u5177\u6709\u5355\u8c03\u6027\u7684\u95ee\u9898\u662f\u4e0d\u53ef\u4ee5\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u7684\uff01\n\n\u56de\u5230\u672c\u9898\uff0c\u6211\u4eec\u731c\u6d4b\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u7b54\u6848\u540e\uff0c\u518d\u9a8c\u8bc1\uff1a\u7531\u4e8e**\u201c\u6211\u4eec\u5047\u8bbe\u9700\u8981\u7684\u94b1\u201d\u8d8a\u591a\uff0c\u80fd\u8d70\u7684\u70b9\u4e5f\u5c31\u8d8a\u591a\uff0c\u53ef\u4ee5\u8d70\u5230\u7ec8\u70b9\u7684\u53ef\u80fd\u6027\u4e5f\u5c31\u8d8a\u5927**\uff0c\u6240\u4ee5\uff0c\u8fd9\u9898\u662f\u5b8c\u5168\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u7b54\u6848\u6765\u5199\u7684\u3002\n\n\n\n------------\n\n\u7136\u540e\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u91cc\u6709\u4e24\u4e2a\u53d8\u91cf\uff1a\u8840\u91cf\u548c\u8d39\u7528\u3002\u81f3\u4e8e\u8d39\u7528\uff0c\u6211\u4eec\u5df2\u7ecf\u7528\u4e8c\u5206\u7b54\u6848\u89e3\u51b3\u4e86\uff0c\u73b0\u5728\u53ea\u9700\u8981\u89e3\u51b3\u8840\u91cf\u7684\u95ee\u9898\u3002\n\u6211\u4eec\u5728\u4e0a\u9762\u5206\u6790\u4e86\uff0c\u635f\u5931\u8840\u91cf\u662f\u548c\u8fb9\u7ed1\u5b9a\u5728\u4e00\u8d77\u7684\uff0c\u6240\u6709\u53ef\u4ee5\u628a\u635f\u5931\u8840\u91cf\u770b\u505a\u6bcf\u6761\u8fb9\u7684\u957f\u5ea6\uff0c\u8fdb\u800c\u5c31\u5230\u4e86\u8fd9\u9898\u7684\u4e2d\u5fc3\u2014\u2014\u5355\u6e90\u6700\u77ed\u8def\u3002\n\n\u5355\u6e90\u6700\u77ed\u8def\u5f84\u5c31\u4e0d\u591a\u8bf4\u4e86\uff0c\u8fd9\u9898\u6ca1\u6709\u5361spfa\uff0c\u6240\u4ee5\u60f3\u600e\u4e48\u6c42\u5c31\u53ef\u4ee5\u600e\u4e48\u6c42\u3002\u56e0\u4e3a\u6211\u662f\u628a\u5806\u4f18\u5316\u7684dijkstra\u7b97\u6cd5\u5b8c\u5b8c\u6574\u6574\u7684\u7406\u89e3\u6027\u80cc\u4e86\u4e0b\u6765\uff0c\u6240\u4ee5\u76f4\u63a5\u5957\u7684dijkstra\u3002\u867d\u7136\u901f\u5ea6\u53ef\u80fd\u6ca1\u6709spfa\u90a3\u4e48\u5feb\uff0c\u4f46\u4e0d\u4f1a\u88ab\u5361\u554a\u3002\uff08~~\u6211\u4f1a\u8ddf\u4f60\u8bf4\u6211\u5b8c\u5168\u4e0d\u4f1aspfa\u5417~~\n\n\n\n------------\n\n\u7136\u540e\u5c31\u662f\u5177\u4f53\u5b9e\u73b0\u4e86\u3002\n\n\uff08\u4ecd\u7136\u5206\u5f00\u7ed9\u51fa\uff09:\n\n\u6807\u51c6\u4e8c\u5206\u6a21\u677f\uff1a\n```cpp\n\tint l=1,r=MAXN,mid=(l+r)>>1;//\u51c6\u5907\u5f00\u59cb\u4e8c\u5206\n \tint c;\n \twhile(l<=r){//\u7ec8\u6b62\u6761\u4ef6\n \t\tc=work(mid);//\u4f7f\u7528work\u51fd\u6570\u6765\u5224\u65ad\u5f53\u524d\u731c\u6d4b\u7684\u7b54\u6848\u662f\u5426\u53ef\u884c\n \t\tif(c){//\u5982\u679c\u53ef\u4ee5\u7684\u8bdd \n \t\t\tr=mid-1;//\u6539\u53d8\u53f3\u7aef\u70b9\uff0c\u770b\u770b\u518d\u5c11\u4e00\u70b9\u662f\u4e0d\u662f\u4e5f\u53ef\u4ee5\n \t\t\tmid=(l+r)>>1;\n\t\t }\n \t\telse{\n \t\t\tl=mid+1;//\u5f53\u524d\u7b54\u6848\u4e0d\u53ef\u884c\uff0c\u9700\u8981\u589e\u5927\u7b54\u6848\n \t\t\tmid=(l+r)>>1;\n\t\t }\n\t }\n\t cout<<l<<endl;//\u8f93\u51fa\u627e\u5230\u7684\u7b54\u6848\n}\n```\n\u7136\u540e\u662f\u6700\u77ed\u8def....\n\n\u8bf4\u5b9e\u8bdd\uff0c\u5982\u679c\u4f60\u4e0d\u4e60\u60ef\u7528\u201c\u524d\u5411\u661f\uff0b\u5c0f\u6839\u5806\uff0bpair\u201d\u7684\u8bdd\uff0c\u5f88\u53ef\u80fd\u770b\u4e0d\u61c2\u6211\u5199\u7684\u4ec0\u4e48\u73a9\u610f..\u5efa\u8bae\u4f7f\u7528\u81ea\u5df1\u719f\u6089\u7684\u7b97\u6cd5\u3002\n\n\u8bf4\u4e00\u4e0b\u6700\u6838\u5fc3\u7684\u6539\u53d8\uff0c\u539f\u7248\u6700\u77ed\u8def\u4e3a\uff1a\n```cpp\n\twhile(q.size()!=0){\n\t\ts1=q.top().second;q.pop();\n\t\tif(ed[s1])continue;\n\t\ted[s1]=1;\n\t \ts2=head[s1];\n\t \twhile(s2){\n\t\t\t\tif(d[edge[s2].to]>d[s1]+edge[s2].dis&&ed[edge[s2].to]==0){\n            \td[edge[s2].to]=d[s1]+edge[s2].dis;\n\t \t\t\tq.push(make_pair( d[edge[s2].to] , edge[s2].to));\n\t\t\t }\n\t\t\t s2=edge[s2].next;\n\t\t }\n\t}\n```\n\n\u66f4\u6539\u4e00\u4e2a\u5f88\u5c0f\u7684\u7ec6\u8282\uff1a\n```cpp\nwhile(que.size()){\n\t\ts1=que.top().second;que.pop();\n\t\tif(ed[s1])continue;\n\t\ted[s1]=1;\n\t\ts2=head[s1];\n\t\twhile(s2){//\u53ea\u6709\u6536\u8d39\u5c0f\u4e8ex\u7684\u624d\u80fd\u4f7f\u7528\uff0c\u5927\u4e8ex\u7684\u4e00\u5f8b\u89c6\u4e3a\u6ca1\u6709 \n//***************\u589e\u52a0\u4e00\u4e2a\u5224\u5b9a\u6761\u4ef6************************************************\n\t\t\tif(f[e[s2].to]<=x&&ed[e[s2].to]==0&&dis[s1]+e[s2].len<dis[e[s2].to])\n\t\t\t{dis[e[s2].to]=dis[s1]+e[s2].len;\n\t\t\tque.push(make_pair(dis[e[s2].to],e[s2].to));\n            }//\u5165\u5806\u51c6\u5907\u4e0b\u4e00\u8f6e\u64cd\u4f5c \n\t\t\ts2=e[s2].next;//\u53bb\u4e0b\u4e00\u6761\u8fb9 \n\t\t}\n\t}\n```\n\n\u6bcf\u6b21\u679a\u4e3e\u7b54\u6848\u65f6\u628a\u53ea\u5728\u7b26\u5408\u5f53\u524d\u7b54\u6848\u7684\u70b9\u91cc\u9762\u627e\u6700\u77ed\u8def\uff0c\u7136\u540e\u5224\u65ad\u662f\u5426\u6210\u7acb\u3002\n\n\u56e0\u4e3a\u6211\u8fd9\u91cc\u662f\u76f4\u63a5\u5957\u7528[P4779 \u3010\u6a21\u677f\u3011\u5355\u6e90\u6700\u77ed\u8def\u5f84\uff08\u6807\u51c6\u7248\uff09](https://www.luogu.org/problemnew/show/P4779)\u7684\u4ee3\u7801\uff0c\u6240\u4ee5\u4ee3\u7801\u770b\u4e0a\u53bb\u53ef\u80fd\u53c8\u70e6\u53c8\u957f...\u4f46\u6700\u603b\u8981\u7684\u662f\u89e3\u9898\u601d\u8def\uff0c\u5982\u679c\u4f60\u80fd\u60f3\u5230\u4f7f\u7528\u4e8c\u5206\u7b54\u6848\u5e76\u4fee\u6539\u6c42\u6700\u77ed\u8def\u6761\u4ef6\u7684\u8bdd\uff0c\u4e24\u4e2a\u57fa\u672c\u4e0a\u5c31\u662f\u5957\u6a21\u677f\u7684\u4ee3\u7801\u5c31\u5f88\u597d\u5199\u4e86\u3002\n\n\u653e\u4e0a\u6211\u81ea\u5df1\u5199\u7684AC\u4ee3\u7801\uff0c\u53ef\u4ee5\u7528\u6765\u53c2\u8003\u4e00\u4e0b\u7ec6\u8282\uff08\u867d\u7136\u5bf9\u4e0d\u4f1a\u524d\u5411\u661f\u6216\u8005\u5806\u4f18\u5316\u7684\u840c\u65b0\u6765\u8bf4\u53ef\u80fd\u4e0d\u592a\u53cb\u597d\uff0c\u4f46\u6211\u771f\u7684\u6ca1\u7528\u8fc7spfa\u6216\u8005\u539f\u7248dijkstra...\u62b1\u6b49\u4e86\uff09\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<queue> \n#include<cstring>\n#define il inline\n#define rg register\n#define N 10005\n#define M 100005\n#define MAXN 1000000005//\u6700\u5927\u6536\u8d39\uff08\u4e8c\u5206\u7528 \nusing namespace std;\nint f[N];//\u6bcf\u4e2a\u57ce\u5e02\u7684\u6536\u8d39\u989d\u5ea6\nbool ed[N];//\u6c42\u6700\u77ed\u8def\u4f7f\u7528\nint dis[N];//\u540c\u4e0a\nint head[N];//\u524d\u5411\u661f \npriority_queue <pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > > que;\nint n,m,b;\nint t;\nstruct edge{\n\tint to,next,len;\n}e[M];\nil void add(int x,int y,int z){\n\te[++t].len=z;\n\te[t].to=y;\n\te[t].next=head[x];\n\thead[x]=t;\n}\nil int read(){\n\tint sum=0;char a=getchar();\n\twhile(a<'0'||a>'9')a=getchar();\n\twhile(a>='0'&&a<='9'){\n\t\tsum=(sum<<3)+(sum<<1)+a-'0';\n\t\ta=getchar();\n\t}\n\treturn sum;\n}\nil bool work(int x){//\u5bf9\u4e8e\u6bcf\u4e2a\u6700\u5927\u6536\u8d39\u90fd\u786e\u5b9a\u662f\u5426\u53ef\u4ee5\u5230\u8fbe \n   if(x<f[1])return 0;//\u8d77\u70b9\u90fd\u8fc7\u4e0d\u4e86\u8d70\u4e2ap \n\tfor(int i=1;i<=n;i++){\n\t\tdis[i]=1e9;//\u521d\u59cb\u5316\u4e3a\u6781\u5927\u503c \n\t}\n\tmemset(ed,0,sizeof(ed));\n\tdis[1]=0;\n\tque.push(make_pair(0,1));\n\tint s1,s2;\n\twhile(que.size()){\n\t\ts1=que.top().second;que.pop();\n\t\tif(ed[s1])continue;\n\t\ted[s1]=1;\n\t\ts2=head[s1];\n\t\twhile(s2){//\u53ea\u6709\u6536\u8d39\u5c0f\u4e8ex\u7684\u624d\u80fd\u4f7f\u7528\uff0c\u5927\u4e8ex\u7684\u4e00\u5f8b\u89c6\u4e3a\u6ca1\u6709 \n\t\t\tif(f[e[s2].to]<=x&&ed[e[s2].to]==0&&dis[s1]+e[s2].len<dis[e[s2].to])\n\t\t\t{dis[e[s2].to]=dis[s1]+e[s2].len;\n\t\t\tque.push(make_pair(dis[e[s2].to],e[s2].to));}//\u5165\u5806\u51c6\u5907\u4e0b\u4e00\u8f6e\u64cd\u4f5c \n\t\t\ts2=e[s2].next;//\u53bb\u4e0b\u4e00\u6761\u8fb9 \n\t\t}\n\t}\n\tif(dis[n]<b){\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nint main(){\n\tn=read();m=read();b=read();\n\tfor(rg int i=1;i<=n;i++)\n\tf[i]=read();//\u50a8\u5b58\u8d39\u7528\n\tint a1,a2,a3;\n\tfor(rg int i=1;i<=m;i++){\n\t\ta1=read();a2=read();a3=read();\n\t\tadd(a1,a2,a3);\n\t\tadd(a2,a1,a3);\n\t}\n\tif(work(MAXN)==0){\n\t\tcout<<\"AFK\"<<endl;\n\t\treturn 0;//\u5982\u679c\u6240\u6709\u90fd\u5f00\u901a\u4efb\u7136\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u5269\u4e0b\u7684\u80af\u5b9a\u4e5f\u4e0d\u4f1a\u6ee1\u8db3 \n\t} \n\tint l=1,r=MAXN,mid=(l+r)>>1;//\u51c6\u5907\u5f00\u59cb\u4e8c\u5206\n \tint c;\n \twhile(l<=r){\n \t\tc=work(mid);\n \t\tif(c){//\u5982\u679c\u53ef\u4ee5\u7684\u8bdd \n \t\t\tr=mid-1;\n \t\t\tmid=(l+r)>>1;\n\t\t }\n \t\telse{\n \t\t\tl=mid+1;\n \t\t\tmid=(l+r)>>1;\n\t\t }\n\t }\n\t cout<<l<<endl;\n}\n```\n\n\u8fd8\u6709\u4ec0\u4e48\u4e0d\u7406\u89e3\u7684\u53ef\u4ee5\u56de\u590d\u5e76@\u6211\uff0c\u53ea\u8981\u6211\u770b\u89c1\u4e86\u5c31\u4f1a\u56de\u590d\u7684\u3002",
        "postTime": 1540381847,
        "uid": 121838,
        "name": "Time_Rune",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "\u6e2f\u771f \u8bed\u6587\u597d\u771f\u7684\u5f88\u91cd\u8981\u554a\u3002\u3002\u3002\n\n\u5f00\u59cb\u770b\u9898\u5c31\u7ea0\u7ed3\u4e8e\u201c\u6240\u7ecf\u8fc7\u7684\u6240\u6709\u57ce\u5e02\u4e2d\u6700\u591a\u7684\u4e00\u6b21\u6536\u53d6\u7684\u8d39\u7528\u7684\u6700\u5c0f\u503c\u662f\u591a\u5c11\u201d\u8fd9\u4e0a\u4e86\n\n\u770b\u4e86\u5341\u5206\u949f\u624d\u53cd\u5e94\u8fc7\u6765\u8981\u6c42\u7684\u662f \u7ecf\u8fc7\u57ce\u5e02\u6700\u591a\u7684\u4e00\u6b21  \u8fd9\u6b21\u7684\u8d39\u7528\u6700\u5c0f\u503c\u662f\u591a\u5c11\n\n\u800c\u4e0d\u662f \u6700\u591a\u7684\u4e00\u6b21\u6536\u53d6 \u7684\u8d39\u7528\u662f\u591a\u5c11\u3002\u3002 \u849f\u84bb\u6d3b\u8be5\u88abdalao\u540a\u6253sigh   qaq\n\n\u9898\u610f\u8fd9\u6837\u5c31\u5f88\u660e\u767d\u4e86 \u4e8c\u5206\u662f\u4e00\u5b9a\u8981\u7528\u7684 \u8fd9\u79cd\u95ee\u6cd5\u57fa\u672c\u5341\u4e2a\u6709\u4e5d\u4e2a\u662f\u8981\u7528\u4e8c\u5206\n\n\u90a3\u4e48\u6211\u4eec\u8981\u4e8c\u5206\u4ec0\u4e48\u5462 \u8840\u91cf\u8fd8\u662f\u91d1\u94b1\u5462\n\n\u56e0\u4e3a\u8981\u6c42\u7684\u662f\u6536\u8d39\u6240\u4ee5\u5c31\u4e8c\u5206\u91d1\u94b1\u597d\u4e86////\n\n\u4e8c\u5206\u7684\u6761\u4ef6\u5c31\u662f \u4ee5\u5f53\u524d\u503c\u4e3a\u6700\u5927\u503c \u5224\u65ad\u662f\u5426\u6709\u4e00\u6761\u8def\u53ef\u4ee5\u4f7f\u5f97\n\n**\u6bcf\u6761\u8fb9\u7684\u6536\u8d39\u90fd\u5c0f\u4e8e\u7b49\u4e8e\u6b64\u503c \u5e76\u4e14 \u8d70\u5230\u7ec8\u70b9\u4e4b\u540e\u8840\u91cf\u4e0d\u4f1a\u88ab\u6263\u5149\uff08\u8fb9\u754c\u5e94\u8be5\u662f\u8840\u91cf<=0\u5c31\u7b97\u6b7b\u4e86\uff09**\n\n\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\u5c31\u770b\u4ee3\u7801\u597d\u4e86  \u611f\u89c9\u5168\u7528stl\u7684\u4ee3\u7801\u771f\u662f\u770b\u8d77\u6765\u7b80\u5355\u53c8\u6613\u61c2\u5462\uff08\u7ba1\u4ed6\u8d85\u4e0d\u8d85\u65f6\u5462\uff09\n\n\u6700\u540e\u795d\u5927\u5bb6noip rp++\n\n\n    \n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<queue>\n#include<vector>\nusing namespace std;\nlong long n,m,b;\nint vis[10010];\nlong long f[10010],viss[10010],ans,fmax,bl[10010];\nstruct cost{\n    int id;\n    long long w;\n};cost blood;\nqueue<int> q;\nvector<cost> g[10010];\nint relax(int x,int y)//\u677e\u5f1b\u64cd\u4f5c \n{\n    if(bl[g[x][y].id]>bl[x]+g[x][y].w)\n    {\n        bl[g[x][y].id]=bl[x]+g[x][y].w;\n        return true;\n    }\n    else return false;\n}\nint spfa(long long x)//spfa \n{\n    memset(bl,0x3f3f3f,sizeof(bl));\n    memset(vis,1,sizeof(vis));\n    bl[1]=0;\n    q.push(1);\n    vis[1]=false;\n    while(!q.empty())\n    {\n        int v=q.front();q.pop();\n        vis[v]=true;\n        for(int i=0;i<g[v].size();i++)\n        {  \n            if(relax(v,i)&&vis[g[v][i].id]&&f[g[v][i].id]<=x)//\u677e\u5f1b\u6210\u529f\u4e14\u4e0b\u4e00\u4e2a\u70b9\u4e0d\u5728\u961f\u5217\u4e2d \n            {\n                q.push(g[v][i].id);\n                vis[g[v][i].id]=false;//spfa\u6838\u5fc3 \n            }\n        }\n    }\n    if(bl[n]>=b) return false;//\u5224\u65ad\u662f\u5426\u5728\u6536\u53d6\u8d39\u7528\u6700\u5c0f\u503c\u4e3ax\u7684\u65f6\u5019\u8d70\u5b8c \u5982\u679c\u6700\u540e\u8017\u8840\u91cf\u5927\u4e8e\u81ea\u8eab\u8840\u91cf \u8868\u793a\u4e0d\u80fd\u901a\u8fc7 \n    else return true;\n}\nint main()//\u4e3b\u7a0b\u5e8f \n{\n    long long ai,bi,ci,r=0,l=0;\n    cin>>n>>m>>b;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>f[i];\n        r=max(r,f[i]); \n    }\n    l=max(f[1],f[n]);//\u5728\u8fd9\u91cc\u8bb0\u5f55\u4e00\u4e0b\u8981\u4e8c\u5206\u7684\u8fb9\u754c\u503cl\u548cr l\u4e3a\u6700\u5c0f\u503c r\u4e3a\u6700\u5927\u503c \u8fd9\u6837\u80fd\u7701\u53bb\u4e9b\u65f6\u95f4 \n    for(int i=0;i<m;i++)//\u5b58\u8fb9 \n    {\n        cin>>ai>>bi>>ci;\n        if(ai==bi) continue;//\u53bb\u6389\u81ea\u73af \n        blood.id=bi;\n        blood.w=ci;\n        g[ai].push_back(blood);//\u7528vector\u5b58\u8fb9 \u6bd5\u7adf\u771f\u7684\u61d2\u7684\u5199\u94fe\u8868 \u867d\u7136\u4ed6\u5feb \n        blood.id=ai;\n        g[bi].push_back(blood);\n    }\n    if(!spfa(1000000001))//\u7279\u5224\u4e00\u4e0b\u662f\u5426\u8054\u901a \u5982\u679cspfa 1000000001\u90fd\u662ffalse\u7684\u8bdd \u4e00\u5b9a\u4e0d\u8054\u901a \n    {\n        cout<<\"AFK\";\n        return 0;\n    }\n    while(l<=r)//\u4e8c\u5206 \n    {\n        int m=(l+r)/2;\n        if(spfa(m)) r=m-1;\n        else l=m+1;\n    }\n    cout<<l;\n    return 0;\n } \n\n```",
        "postTime": 1509964731,
        "uid": 18875,
        "name": "\u53f8\u5f92stuart",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "[${\\color{orange}\\text{\u6b22\u8fce\u62dc\u8bbf\u6211\u8fd9\u4e2a\u849f\u84bb\u7684\u535a\u5ba2}}$](https://www.luogu.org/blog/wzc-wwwwd/)\n\n[P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011](https://www.luogu.org/problem/P1462)\n\n### \u6b64\u9898\u7b97\u6cd5:Dijkstra\u4e0e\u4ed6\u7684\u4e8c\u5206\n\n\u5927\u81f4\u601d\u8def:\n\n>1.$ $\u8f93\u5165$i$\u7ad9\u6536\u8d39$f[i]$\uff0c\u6c42\u51fa\u4e8c\u5206\u8303\u56f4$l$\uff0c\u8d77\u70b9\u548c\u7ec8\u70b9\u7684\u8d39\u7528\u6700\u5927\u503c\uff0c\u548c$r$\uff0c\u6240\u6709\u7684\u57ce\u5e02\u6536\u8d39\u6700\u5927\u503c\u3002\n\n>2.$ $\u4e8c\u5206\u3002\u53ea\u7528\u4e0d\u9ad8\u4e8e$mid$\u7684\u6536\u8d39\u7ad9\u3002\u4e8c\u5206\u6761\u4ef6\uff1a\u6700\u5c11\u8017\u8840\u662f\u5426\u5c0f\u4e8e\u6700\u5927\u8840\u91cf\u3002\n\n>3.$ $\u8f93\u51fa\u7b54\u6848$l$\u3002\n\n![](https://s2.ax1x.com/2019/09/21/nx4zRK.jpg)\n\n## \u4ee5\u4e0b\u662f\u4ee3\u7801\u52a0\u6ce8\u91ca\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ong long long\nconst int N=10010;\nconst int M=100010;\nconst ong inf=LLONG_MAX/3;  //\u5c0f\u5fc3\u7206long long\nint n,m,b,u,v;\nint l,r,mid;\nong wi;  //\u7206int\u4e86\nstruct node{\n\tint a;\n\tong dis;\n};\nbool operator < (node x,node y){\n\treturn x.dis>y.dis; \n} priority_queue<node> q;\nint top,g[N],f[N];\nong dis[N];\nbool vis[N];\nstruct edge{\n\tint adj,nex;\n\tong w;\n}e[M];\nvoid add(int x,int y,ong wor){\n\te[++top]=(edge){y,g[x],wor}; \n\tg[x]=top;\n} void Dijkstra(int maxn){\n\tfor(int i=1;i<=n;i++){\n\t\tdis[i]=inf;\n\t\tvis[i]=0;\n\t} dis[1]=0;\n\twhile(!q.empty()) q.pop();\n\tq.push((node){1,dis[1]});\n\twhile(!q.empty()){\n\t\tnode now=q.top(); q.pop();\n\t\tint x=now.a;\n\t\tif(vis[x]) continue;\n\t\tvis[x]=1;\n\t\tfor(int i=g[x];i;i=e[i].nex){\n\t\t\tint p=e[i].adj;\n\t\t\tif(f[p]>maxn) continue;\n\t\t\tif(dis[x]+e[i].w<dis[p]){\n\t\t\t\tdis[p]=dis[x]+e[i].w;\n\t\t\t\tq.push((node){p,dis[p]});\n\t\t\t}\n\t\t}\n\t}\n} int main(){\n\tscanf(\"%d%d%d\",&n,&m,&b);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",f+i);\n\t\tr=max(r,f[i]);\n\t} l=max(f[1],f[n]);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d%d\",&u,&v,&wi);\n\t\tadd(u,v,wi);\n\t\tadd(v,u,wi);\n\t} while(l<r){\n\t\tmid=(l+r)>>1;\n\t\tDijkstra(mid);\n\t\tif(dis[n]>b)\n\t\t\tl=mid+1;  //\u6015\u6b7b\u5faa\u73af\n\t\telse r=mid;\n\t} Dijkstra(l);\n\tif(dis[n]>b) printf(\"AFK\\n\");\n\telse printf(\"%d\\n\",l);\n\treturn 0;\n} \n```\n\u6700\u540e\u6211\u60f3\u8bf4:~~\u6211\u592a\u849f\u4e86\uff01~~\n\n\u8c22\u8c22\u5927\u5bb6! !\n",
        "postTime": 1569052813,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "## \u4e8c\u5206+dijk\u7b80\u5355\u601d\u8def(vector \uff0b\uff51\uff55\uff45\uff55\uff45)\n## (\u770b\u5230\u5404\u4f4ddalao\u90fd\u6ca1\u6709\u8fd9\u6837\u7684\u505a\u6cd5\u5c1d\u8bd5\u4e00\u4e0b)\n## \u601d\u8def\u89e3\u91ca\n## 1.\u4e0a\u4e0b\u8fb9\u754c\u7684\u786e\u5b9a:\n### \u4e0a\u8fb9\u754c:\u4e0d\u96be\u60f3\u5230\uff0c\u6bcf\u4e2a\u65b9\u6848\u65e0\u8bba\u600e\u6837\uff0c\u5b83\u7684\u7b54\u6848\u4e00\u5b9a\u4e0d\u4f1a\n### \u4e8e\uff26[N]\u7684\u6700\u5927\u503c\uff0c\u56e0\u6b64\u4e0a\u8fb9\u754c\u4e3a\uff26\u6570\u7ec4\u7684\u6700\u5927\u503c\n### \u4e0b\u8fb9\u754c\uff08\u901a\u5e38\u6ca1\u6709\u9650\u5236\uff0c\u6211\u7528\u7684\u662f\uff11\uff09\n\n\n## 2.\u5224\u65ad\u51fd\u6570\uff23\uff28\uff25\uff23\uff2b\n### \u5982\u4f55\u5224\u65ad\u5f53\u524d\u7684\u503c\u662f\u5426\u6ee1\u8db3\u8981\u6c42\u5462\n### \u6211\u4eec\u8fd9\u6837\u60f3\uff0c\u8d70\u7684\u9053\u8def\u7684\u635f\u5931\u751f\u547d\u503c\u770b\u4f5c\u662f\u8fb9\u6743\n### \u7531\u4e8e\u8fd8\u8981\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u5230\u8fbe\n### \u56e0\u6b64\u770b\u4f5c\u6700\u77ed\u8def\u95ee\u9898\uff0c\u7136\u540e\u518d\u6269\u5c55\u65b0\u7684\u8fb9\u65f6\n### \u770b\u65b0\u62d3\u5c55\u7684\u70b9\u662f\u5426\u53ef\u4ee5\u52a0\u8fdb\u53bb\u5373\u53ef\n\n# \u4e0b\u9762\u770b\uff21\uff23\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 10010;\nlong long f[N];//\u70b9\u7684\u8d39\u7528 \nvector< pair< int , long long> >vec[N];//\u5b58\u8fb9 \npriority_queue< pair< long long, int > >que;\nint vis[N];\nlong long dis[N];\nlong long b, v;\nint n, m, x, y;\nint check(int x)\n{\n\tif(f[1] > x) return 0;//\u5982\u679c\u7b2c\u4e00\u4e2a\u70b9\u5c31\u4e0d\u80fd\u8d70,\u76f4\u63a5\u8fd4\u56de\u4e0d\u884c \n\tfor(int i = 1; i <= n; ++ i){\n\t\tdis[i] = 1e18;//\u5fc5\u5907\u7684\u521d\u59cb\u5316,\u6ca1\u6709\u4f1a\u81f4\u9519 \n\t\tvis[i] = 0;\n\t}\n\tdis[1] = 0;\n\tque.push(make_pair(0, 1));//\u4fee\u6539\u7684dijk \n\twhile(!que.empty()){\n\t\tint u = que.top().second;\n\t\tque.pop();\n\t\tif(vis[u]) continue;\n\t\tvis[u] = 1;\n\t\tfor(int i = 0; i < vec[u].size(); ++ i){\n\t\t\tint v = vec[u][i].first;\n\t\t\tif(f[v] > x) continue;//\u5982\u679c\u65b0\u62d3\u5c55\u7684\u70b9\u4e0d\u7b26\u5408\u8981\u6c42,\u7ee7\u7eed\u5bfb\u627e \n\t\t\tlong long w = vec[u][i].second;\n\t\t\tif(dis[u] + w < dis[v]){\n\t\t\t\tdis[v] = dis[u] + w;\n\t\t\t\tque.push(make_pair(-dis[v], v));\n\t\t\tif(v == n){//\u5982\u679c\u5df2\u7ecf\u5230\u8fbe,\u5224\u65ad\u662f\u5426\u751f\u547d\u503c\u6709\u5269\u4f59 \n\t\t\t\tif(dis[n] >= b) return 0;\n\t\t\t\telse return 1;\n\t\t\t}\t\n\t\t}\n\t}\n}\n\treturn 0;//\u5982\u679c\u6ca1\u6709\u5230\u8fbe,\u76f4\u63a5\u8fd4\u56de\u4e0d\u884c \n}\nint main()\n{\n\tlong long mxx = -1;\n\tscanf(\"%d%d%lld\", &n, &m, &b);\n\tfor(int i = 1; i <= n; ++ i){\n\t\tscanf(\"%lld\", &f[i]);\n\t\tmxx = max(mxx, f[i]);//\u5bfb\u627e\u4e0a\u8fb9\u754c \n\t}\n\tfor(int i = 1; i <= m; ++ i){\n\t\tscanf(\"%d%d%lld\", &x, &y, &v);\n\t\tvec[x].push_back(make_pair(y, v));\n\t\tvec[y].push_back(make_pair(x, v));\n\t}\n\tlong long ans = -1, l = 1, r = mxx;\n\twhile(l <= r){\n\t\tlong long mid = (l + r) / 2;\n\t\tif(check(mid)) ans = mid, r = mid - 1;//\u66f4\u5f62ans \n\t\telse\tl = mid + 1;\n\t}\n\tif(ans == -1) puts(\"AFK\");//\u5982\u679c\u6bcf\u6b21\u90fd\u6ca1\u6709\u6269\u5c55\u6210\u529f\u8bf4\u660e\u4e0d\u80fd\u5230\u8fbe \n\telse printf(\"%lld\\n\", ans);\n\treturn 0;\n}\n```\n# \u4e0d\u592a\u660e\u767d\u53ef\u4ee5\u79c1\u4fe1\u6211\uff0c\u7b2c\u4e00\u7bc7\u9898\u89e3\u6c42\u8fc7\u3002\u3002",
        "postTime": 1562489775,
        "uid": 128344,
        "name": "Crer_lu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1462"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u7684\u6807\u7b7e\u548c\u9898\u89e3\u90fd\u6709\u6700\u77ed\u8def\u548c\u4e8c\u5206\uff0c\u90a3\u6211\u5c31\u6765\u4e00\u7bc7\u4e0d\u7528\u6700\u77ed\u8def\u548c\u4e8c\u5206\u800c\u4e14AC\uff08102ms\uff09\u7684\u4ee3\u7801\uff1b\n\n\u867d\u8bf4\u4e0d\u7528\u6700\u77ed\u8def\uff0c\u5176\u5b9e\u662f\u5728dij\u7684\u57fa\u7840\u4e0a\u505a\u4e86\u6bd4\u8f83\u5927\u7684\u4fee\u6539\uff0c\n\u901a\u8fc7\u8fd9\u4e2a\u9898\uff0c\u4e5f\u53ef\u4ee5\u52a0\u6df1\u5bf9dij\u7684\u7406\u89e3\uff0c\u5e76\u7075\u6d3b\u5e94\u7528dij\uff1b\n\n**\u5148\u7406\u89e3\u4e00\u4e0b\u9898\u610f**\n\n\u9898\u76ee\u5c31\u662f\u7ed9\u5b9an\u4e2a\u70b9\u548cm\u6761\u8fb9\uff0c\u5728\u6240\u6709\u53ef\u884c\u7684\u4ece1\u5230n\u9053\u8def\u4e2d\uff08\u53ef\u884c\u662f\u6307\u4ece1\u5230n\u7684\u8840\u91cf\u4e3a\u6b63\uff09\uff0c\u627e\u51fa\u6700\u5927\u70b9\u6743\u6700\u5c0f\u7684\u4e00\u6761\u8def\uff1b\n\n\u9996\u5148\uff0c\u6b64\u9898\u5bf9\u8840\u91cf\u7684\u8981\u6c42\u4e0d\u9ad8\uff0c\u6682\u65f6\u5148\u4e0d\u8003\u8651\u6263\u8840\u7684\u95ee\u9898\uff1b\n\u5982\u679c\u5355\u7eaf\u8003\u8651\u6700\u5927\u70b9\u6743\u6700\u5c0f\u7684\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u641e\u4e00\u4e2a\u6309\u70b9\u6743\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u7684\u4f18\u5148\u961f\u5217\uff0c\u961f\u5217\u4e2d\u7684\u5143\u7d20\u50a8\u5b58\u8282\u70b9\u7684\u5e8f\u53f7\u4ee5\u53ca\u5230\u8fd9\u4e2a\u8282\u70b9\u7684\u6700\u5927\u70b9\u6743\uff0c\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u641c\u7d22\u5230n\u70b9\u7684\u662f\u6700\u5c0f\u7684\u6700\u5927\u70b9\u6743\uff1b\u4ee3\u7801\u5982\u4e0b...\uff08\u6211\u611f\u89c9\u4e0a\u9762\u4e00\u5806\u6bd4\u8f83\u4e0d\u597d\u61c2\uff09\n```cpp\nbool b[10010];\nstruct node{\n\tint xh;\n\tint hf;//\u82b1\u8d39\n\tfriend bool operator < (node x,node y)\n\t{\n\t\treturn x.hf>y.hf;\n\t}\n}dl[10010];\nvoid dfs()\n{\n\tint x=max(fi[1],fi[n]);//1\u548cn\u662f\u5fc5\u7ecf\u70b9\uff0c\u6240\u4ee5\u4e0d\u59a8\u628a\u6bcf\u4e2a\u70b9\u7684\u521d\u59cb\u6700\u5927\u82b1\u8d39\u8bbe\u6210fi[1]\u548cfi[n]\u7684\u6700\u5927\u503c\n\tfor(int i=1;i<=n;++i) dl[i].xh=i,dl[i].hf=x;\n\tpriority_queue <node> q;\n\tq.push(dl[1]);\n      b[1]=1;\n\twhile(!q.empty())\n\t{\n\t\tnode cur=q.top();\n\t\tq.pop();\n\t\tint st=cur.xh;\n\t\tfor(int i=head[st];i;i=ed[i].nxt)\n\t\t{\n\t\t\tint to=ed[i].to;\n\t\t\tint co=max(cur.hf,fi[to]);//\u8868\u793a\u5230\u8fbeto\u7684\u6700\u5927\u82b1\u8d39\uff08co\uff0ccost\u7684\u7b80\u79f0\uff09\uff1b\n\t\t\tif(b[to]==1&&co>=dl[to].hp) continue;//b[to]=1\u8868\u793a\u6765\u8fc7\uff0c\u5982\u679c\u4f60\u5df2\u7ecf\u6765\u8fc7\uff0c\u4f46\u5f53\u524d\u7684co\u4e0d\u6bd4\u4e0a\u6b21\u4f18\uff0c\u90a3\u5c31\u6ca1\u5fc5\u8981\u518d\u66f4\u65b0\u5165\u961f\n\t\t\tif(to==n) //\u5230\u7ec8\u70b9\u7acb\u523b\u8fd4\u56de\uff0c\u9632\u6b62\u591a\u4f59\u64cd\u4f5c\n\t\t\t{\n\t\t\t\tans=co;\n\t\t\t\treturn ;\n\t\t\t}\n      \t\t\tb[to]=1;\n\t\t\tdl[to].hp=xl;\n\t\t\tdl[to].hf=co;\n\t\t\tq.push(dl[to]); //\u66f4\u65b0\uff0c\u5165\u961f\n\t\t}\n\t}\n}\n```\n\u5982\u679c\u4ee5\u4e0a\u64cd\u4f5c\u5df2\u7ecf\u660e\u4e86\uff0c\u90a3\u4e48\u53cd\u8fc7\u5934\u6765\u8003\u8651\u8840\u91cf\u7684\u95ee\u9898\uff0c\u4e0d\u8fc7\u5c31\u662f\u52a0\u4e2a\u9650\u5236\uff0c\u4f46\u6b64\u65f6\u4e0d\u80fd\u5355\u7eaf\u7528b\u6570\u7ec4\u6807\u8bb0\u8fdb\u884c\u9650\u5236\uff0c\n\u5982\u4e0b\u56fe\u6240\u793a\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/67884.png )\n\u5982\u679c\u7528\u4e4b\u524d\u7684\u65b9\u5f0f\uff0c\u90a3\u4e481->3->2->4\u8fd9\u6761\u8def\u5f84\u5c31\u4f1a\u88ab\u820d\u5f03\uff0c\u663e\u7136\uff0c\u8fd9\u6761\u8def\u5f84\u662f\u6b63\u786e\u7b54\u6848...\n\u867d\u7136b\u6807\u8bb0\u4e0d\u53ef\u7528\uff0c\u4f46\u8840\u91cf\u7684\u9650\u5236\u5df2\u7ecf\u8db3\u591f\uff1a\n1.\u5982\u679c\u5f53\u524d\u8840\u91cf\u4e3a\u8d1f\uff0c~~\u90a3\u8fd9\u8d27\u80af\u5b9a\u6b7b\u4e86~~\uff0c\u4e0d\u5165\u961f\n2.\u5982\u679c\u8fd9\u4e2a\u70b9\u4e4b\u524d\u8d70\u8fc7\uff0c\u4f46\u662f\u73b0\u5728\u7684\u8840\u91cf\u6bd4\u4e0a\u6b21\u5c11\uff0c\u800c\u4e14\u6700\u5927\u70b9\u6743\u5e76\u4e0d\u6bd4\u4e0a\u6b21\u5c0f\uff0c\u90a3\u5c31\u4e0d\u52a0\u5165\u961f\u5217\uff1b\n\n\uff08\u6b64\u5904\u91cd\u70b9\uff09\u7b2c2\u6761\u9650\u5236\u63d0\u5230\u8fd9\u4e2a\u70b9\u6765\u8fc7\uff0c\u53c8\u6709\u4e86\u6807\u8bb0\u7684\u5f71\u5b50\uff0c\u4e0d\u8fc7\u5b8c\u5168\u4e0d\u5fc5\u8981\uff0c\u5148\u770b\u4e00\u6bb5\u4ee3\u7801\uff1a\n```cpp\n\tint xl=cur.hp-ed[i].dis;//xl\uff1a\u8840\u91cf\uff0ccur\u4e3a\u8def\u5f84\u8d77\u70b9\n\tint co=max(cur.hf,fi[to]);\n\tif(xl<=0) continue;\n\tif(xl<=dl[to].hp&&co>=dl[to].hf) continue;\n```\n\u7b2c\u4e00\u4e2aif\u4e3a\u9650\u52361\uff0c\u7b2c\u4e8c\u4e2aif\u4e3a\u9650\u52362\uff0cxl<=dl[to].hp\u8868\u793a\u6bd4\u8840\u91cf\u6bd4\u4e4b\u524d\u5c11\uff0cco>=dl[to].hf\u8868\u793a\u6700\u5927\u70b9\u6743\u4e0d\u5982\u4e0a\u6b21\u4f18\uff0c\u521d\u59cb\u5316\u65f6\uff0c\u6211\u4eec\u8bbedl[1].hp\u4e3a\u6ee1\u8840\uff0c\u5176\u4ed6\u70b9\u7684hp\u90fd\u8bbe\u62100\uff0c\u5982\u679c\u662f\u7b2c\u4e00\u6b21\u6765\u7684\u8bdd\uff0c\u90a3\u4e48xl\u4e00\u5b9a\u5927\u4e8e0\uff0c\u9650\u52362\u4e0d\u6210\u7acb\uff0c\u53ef\u4ee5\u5165\u961f\uff1b\n\n\u8bb2\u5b8c\u4e86\uff0c\u63a5\u4e0b\u6765\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\nusing namespace std;\ninline int read()\n{\n\tint xx=0;\n\tchar ch=getchar();\n\twhile(ch>'9'||ch<'0') ch=getchar();\n\twhile(ch>='0'&&ch<='9')\n\t{\n\t\txx=xx*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn xx;\n}\nint n,m,num,head[10010],fi[10010],b,ans;\nbool ju[10010];\nstruct edge{\n\tint to;\n\tint nxt;\n\tint dis;\n}ed[1000010];\nstruct node{\n\tint xh;\n\tint hf;\n\tint hp;\n\tfriend bool operator < (node x,node y)\n\t{\n\t\treturn x.hf>y.hf;\n\t}\n}dl[10010];\nvoid add(int st,int to,int dis)\n{\n\tnum++;\n\ted[num].dis=dis;\n\ted[num].nxt=head[st];\n\thead[st]=num;\n\ted[num].to=to;\n\treturn ;\n}\nvoid dfs()\n{\n\tint x=max(fi[1],fi[n]);\n\tfor(int i=1;i<=n;++i) dl[i].xh=i,dl[i].hp=0,dl[i].hf=x;\n\tdl[1].hp=b;\n\tpriority_queue <node> q;\n\tq.push(dl[1]);\n\twhile(!q.empty())\n\t{\n\t\tnode cur=q.top();\n\t\tq.pop();\n\t\tint st=cur.xh;\n\t\tfor(int i=head[st];i;i=ed[i].nxt)\n\t\t{\n\t\t\tint to=ed[i].to;\n\t\t\tint xl=cur.hp-ed[i].dis;\n\t\t\tint co=max(cur.hf,fi[to]);\n\t\t\tif(xl<=0) continue;\n\t\t\tif(xl<=dl[to].hp&&co>=dl[to].hf) continue;//\u4ea4\u7684\u65f6\u5019\u8fd9\u91cc\u5199\u9519\u4e86\uff0c\u4e0d\u8fc7\u8fd8\u80fd\u8fc7\uff0c\u53ef\u80fd\u662f\u6570\u636e\u6c34\uff0c\u4e5f\u53ef\u80fd\u8fd9\u53e5\u6ca1\u5565\u7528\n\t\t\tif(to==n) \n\t\t\t{\n\t\t\t\tans=co;\n\t\t\t\treturn ;\n\t\t\t}\n\t\t\tdl[to].hp=xl;\n\t\t\tdl[to].hf=co;\n\t\t\tq.push(dl[to]); \n\t\t}\n\t}\n}\nint main()\n{\n\tn=read();\n\tm=read();\n\tb=read();\n\tfor(int i=1;i<=n;++i) fi[i]=read();\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint x=read();\n\t\tint y=read();\n\t\tint z=read();\n\t\tadd(x,y,z);\n\t\tadd(y,x,z);\n\t}\n\tdfs();\n\tif(ans==0) cout<<\"AFK\";\n\telse cout<<ans;\n\treturn 0;\n}\n```\n\u96c1\u8fc7\u7559\u58f0\uff0c\u60a8\u8fc7\u7559\u4e2a\u8d5e\uff0c\u8ba9\u66f4\u591a\u4eba\u770b\u5230\u8fd9\u7bc7\u9898\u89e3\uff0c\u5f00\u62d3\u4e00\u4e0b\u601d\u7ef4...\n\n\u8c22\u8c22\u89c2\u770b",
        "postTime": 1564730128,
        "uid": 120594,
        "name": "\u9f99\u00b7\u6d77\u6d41",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "## \u601d\u8def\uff1a\n\n**\u4e8c\u5206\u7b54\u6848\u548cdijkstra**  \n\n\u56e0\u4e3a\u770b\u5230\u6c42\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u60f3\u5230\u4e86\u4e8c\u5206  \n~~\uff08\u67d0\u4f4d\u9ad8\u4eba\u66fe\u8a00\uff1a\u6700\u503c\u90fd\u53ef\u4ee5\u7528\u4e8c\u5206\uff09~~  \n\u600e\u4e48\u60f3\u5230dijkstra\u5c31\u4e0d\u7528\u8bf4\u4e86\u5427 QwQ  \n\n---\n## \u5b9e\u73b0\uff1a\n\n~~\u4ee3\u7801\u5b9e\u73b0\u548c\u6709\u601d\u8def\u540c\u6837\u91cd\u8981\uff01\uff01~~  \n1.\u8bfb\u5165\u6570\u636e\uff08\u5728\u8bfb\u5165\u6570\u636e\u7684\u65f6\u5019\u9700\u8981\u521d\u59cb\u5316\u4e00\u4e0b\u4e8c\u5206\u8fb9\u754c\uff0c\u4ee3\u7801\u4e2d\u6709\uff09  \n2.\u4e8c\u5206\u7b54\u6848\n3.\u8f93\u51fa\n\u6ce8\uff1a\u4e8c\u5206\u7b54\u6848\u7684\u5224\u65ad\u5c31\u662f\u4e00\u6b21dijkstra  \n\uff08\u6211\u89c9\u5f97\u8fd8\u80fd\u7b80\u5316\uff0c\u4f46\u662f\u5e76\u4e0d\u77e5\u9053\u5982\u4f55\u5b9e\u73b0\uff0c\u5982\u679c\u6709\u5927\u4f6c\u77e5\u9053\uff0c\u53ef\u4ee5\u79c1\u6211\uff09  \n~~\u5c31\u662f\u8fd9\u4e48\u7b80\u5355~~  \n\n---\n## Code\uff1a\n```\n#include <algorithm>\n#include <iostream>\n#include <cstring>//memset\u5e93\u51fd\u6570 \n#include <cstdio>\n#include <queue>//\u4f18\u5148\u961f\u5217 \nconst int maxn=1e5+7,maxm=5e5+7,inf=1e9+7;\nusing namespace std ;\nint to[maxm],nex[maxm],val[maxm];\nint head[maxn],tot;\ninline void add(int u,int v,int w)\n{\n\tto[++tot]=v;\n\tnex[tot]=head[u];\n\tval[tot]=w;\n\thead[u]=tot;\n}\n//\u94fe\u5f0f\u524d\u5411\u661f \nint n,m,k;\nint l=inf,r,flag;\n//\u8bb0\u5f97\u628al\u521d\u59cb\u5316\u4e3a\u6700\u5927\u503cinf \nint num[maxn];\nint dis[maxn];//dis[i]\u8868\u793a\u5230\u8fbei\u70b9\u7684\u6700\u5927\u751f\u547d\u503c \npriority_queue < pair < int , int > > q;//dijkstra+\u5806\u4f18\u5316 \n//\u9ed8\u8ba4\u7684\u4f18\u5148\u961f\u5217\u662f\u5927\u6839\u5806 \ninline bool judge(int x)\n//\u4e0d\u80fd\u8d70num[i]\u4e25\u683c\u5927\u4e8ex\u7684\u70b9\uff0c\u5230\u7ec8\u70b9\u7684dis\u503c\u4e3a\u6b63\u6570 \n{\n\tmemset(dis,-1,sizeof(dis));\n\t//\u5c06\u6240\u6709\u70b9\u521d\u59cb\u5316\u4e3a-1\uff0c\u8868\u793a\u8be5\u70b9\u76ee\u524d\u4e0d\u80fd\u5728\u6709\u9650\u7684\u751f\u547d\u4e2d\u8dd1\u8fc7\u53bb \n\tdis[1]=k;\n\t//\u5c061\u53f7\u51fa\u53d1\u70b9\u7684dis\u8bbe\u7f6e\u4e3a\u6700\u5927\u751f\u547d\u503c \n\tq.push(make_pair(dis[1],1));\n\twhile(!q.empty())\n\t{\n\t\tint u=q.top().second;\n\t\tint d=q.top().first;\n\t\tq.pop();//\u52ff\u5fd8\u5f39\u51fa \n\t\tif(dis[u]!=d) continue;\n\t\t//\u5982\u679c\u4e0d\u7b49\uff0c\u5c31\u8bc1\u660e\u8be5\u8282\u70b9\u5728\u8fd9\u6b21\u5165\u961f\u4e4b\u540e\u53c8\u88ab\u66f4\u65b0\u8fc7\uff0c\u5f39\u51fa\u5c31\u597d\u4e86\n\t\t//dijkstra+\u5806\u4f18\u5316\u7684\u5c0f\u6280\u5de7 \n\t\tfor(int i=head[u];i;i=nex[i])\n\t\t{\n\t\t\tint v=to[i];\n\t\t\tif(num[v]>x) continue;\n\t\t\t//\u5224\u65ad\u8be5\u70b9\u6709\u6ca1\u6709\u88ab\u4e8c\u5206\u7684\u7b54\u6848\u6240\u9650\u5236 \n\t\t\tif(dis[v]<dis[u]-val[i] && dis[u]-val[i]>=0)\n\t\t\t//\u66f4\u65b0\u7684\u662f\u5230v\u70b9\u7684\u751f\u547d\u6700\u5927\u503c\uff0c\u6240\u4ee5\u662f\u5411\u5927\u7684\u65b9\u5411\u66f4\u65b0\n\t\t\t//\u8fd8\u9700\u8981\u5224\u65ad\u7684\u662f\u80fd\u4e0d\u80fd\u6d3b\u7740\u8dd1\u5230\u8fd9\u70b9\uff0c\u6240\u4ee5\u8981\u22650 \n\t\t\t{\n\t\t\t\tdis[v]=dis[u]-val[i];\n\t\t\t\tq.push(make_pair(dis[v],v));\n\t\t\t\t//\u5165\u961f \n\t\t\t}\n\t\t}\n\t}\n\treturn dis[n]!=-1;\n\t//\u5982\u679c\u4e0d\u80fd\u6d3b\u7740\u5230\u8fbe\uff0c\u5c31\u8bc1\u660e\u8be5\u65b9\u6848\u4e0d\u884c\uff0c\u53cd\u4e4b\u53ef\u4ee5 \n}\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tscanf(\"%d\",num+i);\n\t\tl=min(l,num[i]);\n\t\tr=max(r,num[i]);\n\t\t//\u521d\u59cb\u5316\u4e8c\u5206\u7684\u8fb9\u754c\uff0c\u4e3a\u8282\u70b9\u7684\u70b9\u6743\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c \n\t}\n\tflag=r;\n\t//\u52a0\u4e00\u4e2a\u6807\u8bb0\u6700\u540e\u5224\u65ad\u201cAFK\u201d \n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint u,v,w;\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\tadd(u,v,w);\n\t\tadd(v,u,w);\n\t\t//\u53cc\u5411\u8fb9 \n\t}\n\twhile(l<=r)//\u4e8c\u5206\u7b54\u6848 \n\t{\n\t\tint mid=l+r>>1;\n\t\tif(judge(mid)) r=mid-1;\n\t\telse l=mid+1; \n\t}\n\tif(l==flag+1) puts(\"AFK\");\n\t//\u5982\u679c\u8fd9\u4e2a\u4e8c\u5206\u7684\u7b54\u6848\u6bd4\u6700\u5927\u7684\u70b9\u6743\u503c\u8fd8\u8981\u5927\uff0c\u5c31\u8bc1\u660e\u4e0d\u80fd\u5230\u8fbe\u55bd \n\telse printf(\"%d\\n\",l);\n\t//\u8f93\u51fa\u6700\u7ec8\u7b54\u6848 \n}\n/*\n\u7b80\u5355\u5206\u6790\u4e00\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\n\u4e8c\u5206\u7b54\u6848\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\uff1aO(\u679a\u4e3e) * O(\u5224\u65ad)\n\u679a\u4e3e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662fO(logN)\n\u5224\u65ad\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f\u4e00\u904ddijkstra+\u5806\u4f18\u5316\n\u5224\u65ad\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662fO(MlogN)\n\u7efc\u5408\u4e00\u4e0b\uff0c\u8be5\u7a0b\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662fO(MlogNlogN)\nM\u4e0eN\u540c\u7ea7\u522b\uff0c\u90fd\u662f\u5341\u4e07\u7ea7\uff0c\u6240\u4ee5\u662f\u53ef\u4ee5\u57281s\u4e4b\u5185\u8dd1\u5b8c\u7684\n\u5206\u6790\u5b8c\u6bd5\uff01\uff01 \n*/\n```\n\u6492\u82b1\u7ed3\u5c3e",
        "postTime": 1573268186,
        "uid": 149537,
        "name": "Atlicd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "\u5168\u90fd\u662f\u624b\u5199\u7684\uff0c\u503c\u5f97\u4e00\u770b\n\n//\u4e8c\u5206\u5f53\u524d\u6536\u8d39\u6700\u5927,\u7528dijkstral\u6700\u77ed\u8def\u68c0\u9a8c\uff0c\u4e0d\u8fc7\u8981\u52a0\u4e00\u4e2a\u5c0f\u6839\u5806\u4f18\u5316\uff0c\u5426\u5219\u4f1aTLE\n\n//\u6211\u5199\u4e86\u4e00\u4e2a\u624b\u5199\u7248\u5806\u4f18\u5316\uff0c\u524d\u4eba\u8fd8\u6ca1\u6709\u8fc7\uff0c\u5927\u5bb6\u53ef\u4ee5\u770b\u770b\uff0c\u52a0\u4e86\u6ce8\u91ca\n\n```cpp\n#include <cstdlib>\n#include <iostream>\n#include <cstdio>\n#include <math.h>\n#include <cstring>\n\nusing namespace std;\n\nint heap[20000], heap_size;//\u5806\u548c\u5806\u7684\u5927\u5c0f\nint d[10005], d_heap[10005];//d\u8bb0\u5f55\u8d77\u70b9\u5230\u5404\u4e2a\u70b9\u7684\u8ddd\u79bb\uff0cd_heap\u8bb0\u5f55d\u503c\u5728\u5806\u4e2d\u5bf9\u5e94\u4f4d\u7f6e\nint city[10005];//\u5404\u57ce\u5e02\u8def\u8d39\nint n, C, b;//\u70b9\u6570\uff0c\u8fb9\u6570\uff0c\u603b\u8840\u91cf\n\nvoid exchange(int &a, int &b)//\u4ea4\u6362\n{\n    int t = a;\n    a = b;\n    b = t;\n}\n\nint left(int i)//\u4e8c\u53c9\u5806\u7684\u5de6\u7ed3\u70b9\n{\n    return 2 * i;\n}\nint right(int i)//\u53f3\u8282\u70b9\n{\n    return 2 * i + 1;\n}\nint parent(int i)//\u7956\u5148\u8282\u70b9\n{\n    return i / 2;\n}\n\nvoid heapify(int i)//\u7ef4\u62a4\u5806\u7684\u6027\u8d28\uff0c\u5047\u5b9a\u5de6\u53f3\u5b50\u5806\u662f\u7b26\u5408\u6027\u8d28\u7684\uff0c\u5904\u7406\u6839\u8282\u70b9\n{\n    int l, r, m;\n    l = left(i);\n    r = right(i);\n    if (l <= heap_size&&d[heap[i]] > d[heap[l]])\n        m = l;\n    else\n        m = i;\n\n    if (r <= heap_size&&d[heap[r]] < d[heap[m]])\n        m = r;\n    if (m != i)\n    {//\u5c06\u6839\uff0c\u5de6\uff0c\u53f3\u4e2d\u6700\u5927\u7684\u4e0e\u6839\u4ea4\u6362\n        exchange(d_heap[heap[i]], d_heap[heap[m]]);//d_heap\u4e5f\u8981\u540c\u65f6\u4ea4\u6362\n        exchange(heap[m], heap[i]);\n        heapify(m);//\u9012\u5f52\u7ef4\u62a4\u5230\u7b26\u5408\u6027\u8d28\u4e3a\u6b62\n    }\n}\n\nvoid build_heap()//\u4ece\u65e0\u5e8f\u6570\u7ec4\u4e2d\u5efa\u5806\n{\n    heap_size = n;\n\n    for (int i = heap_size / 2; i >= 1; i--)//\u5806\u7684\u540e\u534a\u90e8\u5206\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u7b26\u5408\u6761\u4ef6\uff0c\n    {                                       //\u65e0\u9700\u7ef4\u62a4\n        heapify(i);\n    }\n}\n\nvoid key_decrease(int i, int key)//\u7f29\u5c0f\u5806\u4e2d\u67d0\u5143\u7d20\u5bf9\u5e94\u503c\u5e76\u7ef4\u62a4\u5806\u7684\u6027\u8d28\n{\n    d[heap[i]] = key;\n\n    while (i > 1 && d[heap[i]] < d[heap[parent(i)]])\n    {\n        exchange(d_heap[heap[i]], d_heap[heap[parent(i)]]);\n        exchange(heap[i], heap[parent(i)]);\n        i = parent(i);\n    }\n}\n\nvoid heap_insert(int i, int key)//\u589e\u52a0\u5143\u7d20\uff0c\u53ef\u7528\u4e8e\u5b9e\u73b0\u53e6\u4e00\u79cd\u4f18\u5316\u65b9\u5f0f\uff0c\n{                               //\u4f46\u8fd9\u91cc\u6ca1\u7528\u5230\n    heap_size++;\n    heap[heap_size] = i;\n    key_decrease(heap_size, key);\n}\n\n\nint heap_extract_min()//\u63d0\u53d6\u5806\u4e2d\u6700\u5c0f\u5143\u7d20\uff0c\u8f93\u51fa\u4e14\u5220\u9664\n{\n    int min = heap[1];\n\n    heap[1] = heap[heap_size];\n    d_heap[heap[heap_size]] = 1;\n    heap_size--;\n    heapify(1);\n    return min;\n}\n\nstruct node {//\u90bb\u63a5\u94fe\u8868\u7684\u8282\u70b9\n    int aim;\n    int cost;\n    node *next;\n};\n\nnode *head[10005];//\u90bb\u63a5\u94fe\u8868\u7684\u8868\u5934\uff0c\u6bcf\u4e2a\u57ce\u5e02\u5bf9\u5e94\u4e00\u4e2a\n\nvoid add(node *&head, int aim, int cost)//\u5411\u94fe\u8868\u4e2d\u6dfb\u52a0\u4e00\u6761\u8fb9\n{\n    if (head == NULL)//\u9700\u7279\u5224\u8868\u9996\u4e3a\u7a7a\u7684\u60c5\u51b5\n    {\n        head = new(node);\n        head->next = NULL;\n        head->aim = aim;\n        head->cost = cost;\n    }\n    else//\u5728\u8868\u9996\u6dfb\u52a0\u8282\u70b9\n    {\n        node *p = new(node);\n        p->aim = aim;\n        p->cost = cost;\n        p->next = head;\n        head = p;\n    }\n}\n\n\n\nvoid set()//\u521d\u59cb\u5316d\u503c\u548cheap\uff0cd_heap\u7684\u503c\n{\n    int i;\n\n    for (i = 0; i < 10005; i++)\n    {\n        d[i] = 1000000005;\n        heap[i] = i;\n        d_heap[i] = i;\n    }\n    d[1] = 0;//\u8d77\u70b9\u8ddd\u79bb\u4e3a0\n}\n\nvoid relax(int u, node *p)//\u5bf9\u8fb9\u8fdb\u884c\u677e\u5f1b\u64cd\u4f5c\uff0c\u7f29\u5c0f\u4e0a\u754c\n{\n    if (d[p->aim] > d[u] + p->cost)\n    {\n        key_decrease(d_heap[p->aim], d[u] + p->cost);\n    }\n}\n\nbool findway(int max)//\u8fd9\u91cc\u662f\u4e3b\u8981\u7b97\u6cd5\uff0cdijkstral\n{                    //\u5224\u65ad\u6700\u5927\u503c\u4e3amax\u65f6\u662f\u5426\u53ef\u884c\n    set();\n    build_heap();//\u521d\u59cb\u5316\u5e76\u5efa\u5806\n\n    for (int i = 1; i <= n; i++)\n    {\n        int k = heap_extract_min();//\u53d6\u5806\u4e2d\u6700\u5c0f\u5143\u7d20\n\n        node *p = head[k];\n        while (p != NULL)//\u4f9d\u6b21\u677e\u5f1b\u90bb\u63a5\u8868\u4e2d\u5bf9\u5e94\u8fb9\n        {\n            if (city[p->aim] <= max)//\u5224\u65ad\n                relax(k, p);\n            p = p->next;\n        }\n    }\n\n    if (d[n] >= b)//\u5982\u679c\u6700\u5c0f\u6d88\u8017\u5927\u4e8e\u7b49\u4e8e\u8840\u91cf\uff0c\u5bfb\u8def\u5931\u8d25\n        return false;\n    return true;\n}\n\nint main()\n{\n    int i, max = 0;\n    int u, v, c;\n\n    scanf(\"%d %d %d\", &n, &C, &b);\n\n    for (i = 1; i <= n; i++)\n    {\n        scanf(\"%d\", &city[i]);\n        if (city[i] > max)\n            max = city[i];\n    }\n    max = max + 2;//\u8f93\u5165\u5e76\u8bb0\u5f55\u6700\u5927\u503c\uff0c\u4ee5\u7f29\u5c0f\u4e8c\u5206\u67e5\u627e\u8303\u56f4\n\n    for (i = 0; i < C; i++)//\u8bb0\u5f55\u8fb9\n    {\n        scanf(\"%d %d %d\", &u, &v, &c);\n        add(head[u], v, c);//\u65e0\u5411\u56fe\uff0c\u8bb0\u5f55\u4e24\u904d\n        add(head[v], u, c);\n    }\n\n    int l = city[1] - 1;\n    int r = max;//\u4e8c\u5206\u8303\u56f4\n\n    while (1)//\u6807\u51c6\u7684\u4e8c\u5206\u67e5\u627e\n    {\n        if (l + 1 == r)\n            break;\n\n        int mid = (l + r) / 2;\n        if (findway(mid) == true)\n            r = mid;\n        else\n            l = mid;\n    }\n\n    if (r > max - 2)//r\u5927\u4e8emax-2\u8bf4\u660e\u65e0\u6cd5\u5230\u8fbe\u76ee\u6807\n        printf(\"AFK\");\n    else\n        printf(\"%d\", r);//\u8f93\u51fa\u7b54\u6848\n\n    system(\"pause\");\n    return 0;\n}\n//\u601d\u8def\u4e0e\u697c\u4e0b\u5e76\u65e0\u4e0d\u540c\uff0c\u53ef\u53c2\u8003\u697c\u4e0b\n\n//\u8be6\u89c1\u6ce8\u91ca\n\n```",
        "postTime": 1512833614,
        "uid": 64366,
        "name": "ddwqwq",
        "ccfLevel": 0,
        "title": "1462\u9898\u89e3\uff0c\u7eaf\u624b\u5199\u4f18\u5316"
    },
    {
        "content": "2019/9/5 \u4fee\u6539\u4e86\u4e00\u70b9\u70b9\u4e0d\u5f71\u54cd\u7b54\u6848\u7684\u5c0f\u9519\u8befQAQ\u611f\u8c22\u6307\u6b63\n~~\u90fd9021\u5e74\u4e86\uff0c\u5c45\u7136\u8fd8\u6709\u4eba\u518d\u7528SPFA\uff1f~~\n\n\u4e3a\u4ec0\u4e48\u6ca1\u4eba\u7528dijkstral\uff1f\n\n\u4e3a\u4ec0\u4e48\u4e00\u697c\u7684dijkstral\u662f\u9519\u7684QAQ\uff1f\n\n\n~~\u4e3a\u4ec0\u4e48\u662f\u9519\u7684\u8fd8\u6709\u4e00\u5806\u4eba\u8d5e\u5374\u6ca1\u4eba\u8d5e\u6211QAQ\uff1f~~\n\n\u601d\u8def\u662f\u6700\u77ed\u8def+\u4e8c\u5206\uff0c\u4e8c\u5206\u70b9\u6743\uff0c\u8fb9\u6743\u8dd1\u6700\u77ed\u8def\n\n\u4f46dijkstral\u5806\u4f18\u5316\u4f1a\u66f4\u5feb\uff0c\u5feb\u597d\u591a\u7684....\n\n\u6765\u4e00\u53d1\u6b63\u786e\u7684dijkstral\uff08\u4e00\u697c\u7684\u4f18\u5316\u6709\u70b9\u95ee\u9898\uff0c\u6839\u672c\u6ca1\u6709\u4f18\u5316...~~\u4ed6\u6253\u6302\u4e86\uff0c\u4ed6\u4f18\u5316\u4e86\u4e2a\u9570\u5200~~\uff09\n\n\u8bf7\u8fdc\u79bbSPFA\n\n```\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<queue>\nusing namespace std;\nconst int maxn=10010;\nstruct pp\n{\n\tint u;\n\tint v;\n\tint w;\n\tint nex;\n}e[maxn*maxn];\nstruct node\n{\n\tint dis;\n\tint pos;\n\tbool operator <(const node &x) const\n\t{\n\t\treturn x.dis<dis;\n\t}\n};\nint dis[maxn],head[maxn],vis[maxn],cost[maxn],f[maxn];\nint n,m,b,s,ans,cnt,res,flag,maxl,l,r;\npriority_queue <node> q;\nvoid add(int x,int y,int z)\n{\n\te[++cnt].u=x;\n\te[cnt].v=y;\n\te[cnt].w=z;\n\te[cnt].nex=head[x];\n\thead[x]=cnt;\n}\nbool go( int t)\n{\n\t\n\tfor(int i=1;i<=n;i++) dis[i]=1000000010,vis[i]=0;\n\tdis[1]=0;\n\tq.push((node) {0,1});\n\t\n\t//for(int i=1;i<=n;i++)\n\t//if(cost[i]>t) vis[i]=1;\n\t//else vis[i]=0;\n\twhile(!q.empty())\n\t{\n\t\tnode tmp=q.top();\n\t\tq.pop();\n\t\tint x=tmp.pos;\n\t\tif(vis[x]) continue;\n\t\tvis[x]=1;\n\t\tfor(int i=head[x];i;i=e[i].nex)\n\t\t{\n\t\t\tint y=e[i].v;\n\t\t\tif(dis[y]>dis[x]+e[i].w&&cost[y]<=t)\n\t\t\t{\n\t\t\t\tdis[y]=dis[x]+e[i].w;\n\t\t\t\tif(!vis[y])\n\t\t\t\tq.push((node) {dis[y],y} );\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t}\n\tif(dis[n]<b) return true;\n\telse return false;\n\t\n}\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&b);\n\tfor(int i=1;i<=n;i++)\n\tscanf(\"%d\",&f[i]),cost[i]=f[i];\n\tsort(f+1,f+1+n);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint aa,bb,cc;\n\t\tscanf(\"%d%d%d\",&aa,&bb,&cc);\n\t\tadd(aa,bb,cc);add(bb,aa,cc);\n\t}\n\tl=1;r=n;\n\tif(!go(f[n]+8)) \n\t{\n\t\tprintf(\"AFK\");\n\t\treturn 0;\n\t}\n\twhile (l<=r)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tif(go(f[mid])) ans=f[mid],r=mid-1;\n\t\telse l=mid+1;\n\t\t\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n\n```\n\n\u7ba1\u7406\u5927\u5927\u7ed9\u4e2a\u8fc7\u5427\u4e00\u697c\u7684\u5806\u4f18\u5316\u771f\u7684\u6302\u4e86QAQ\n",
        "postTime": 1567264599,
        "uid": 132413,
        "name": "lover_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5927\u5bb6\u601d\u8def\u90fd\u5dee\u4e0d\u591a\uff0c\u5c31\u662f\u4e8c\u5206+\u6700\u77ed\u8def\n\n\u4e0d\u8fc7\u6211\u89c9\u5f97djslt\u7b97\u6cd5\u7684\u90fd\u6ca1\u8bb2\u592a\u6e05\u695a\uff0c\u6211\u518d\u5e2e\u6211\u8fd9\u79cd\u849f\u84bb\u5417\u7406\u4e00\u4e0b\u601d\u8def\n\n\u9996\u5148\uff0c\u6211\u4eec\u770b\u5230\u8fd9\u91cc\u6709\u4e8c\u7ef4\uff0c\u8840\u548c\u94b1\n\n\u4e8c\u7ef4\u6700\u77ed\u8def\uff1f\u8fd8\u597d\uff0c\u4ed6\u53ea\u8981\u6700\u5927\u94b1\u6700\u5c0f\n\n\u90a3\u4e48\u5c31\u662f~~\u6700\u5927\u6d41~~\uff0c\u597d\u5427\u662f\u4e8c\u5206\u7b54\u6848\n\n\u6211\u4eec\u53ef\u4ee5\u8fd9\u4e48\u60f3\uff0c\u5982\u679c\u7ed9\u6700\u77ed\u8def\u4e2d\u52a0\u4e00\u4e2a\u82b1\u8d39\u4e0a\u9650mid\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4e0a\u9650\u8d8a\u5927\uff0c\u90a3\u4e48\u8dd1\u7684\u60c5\u51b5\u5c31\u8d8a\u591a\uff0c\u5c31\u8d8a\u53ef\u80fd\u5728\u6ca1\u6b7b\u524d\u8dd1\u8def\uff0c\u90a3\u4e48\u5c31\u4ea7\u751f\u4e86\u5355\u8c03\u6027\uff1a\n\n**mid\u8d8a\u5927\uff0c\u6210\u529f\u53ef\u80fd\u6027\u8d8a\u5927**\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u4e8c\u5206mid\uff0c\u5c06\u4e8c\u5206\u51fa\u7684mid\u5e26\u5165djstl\u4e2d\uff0c\u8dd1\u51fa\u6263\u7684\u6700\u5c11\u7684\u8840\uff0c\u5982\u679c<b,\u5c31\u538b\u53f3\u8fb9\u754c\uff0c\u53cd\u4e4b\uff0c\u538b\u5de6\u8fb9\u754c\n\n\n------------\n\u4e8c\u5206\u7b54\u6848\n\n\n------------\n\n```\nint l=0,r=1000000000;\n\twhile(l<=r)\n\t{\n\t\tint mid=(l+r)/2;\n\t\tif(djstl(mid))\n\t\t{\n\t\t\tans=min(ans,mid);\n\t\t\tr=mid-1;\n\t\t}\n\t\telse l=mid+1;\n\t}\n```\n\n\n------------\n\u6700\u77ed\u8def\u672c\u8d28\u4e0a\u5c31\u662f\u6c42\u4f1a\u6263\u7684\u6700\u5c11\u8840\u91cf\uff0c\u800c\u4e14\u53d1\u73b0\n\n**\u6ca1\u6709\u8d1f\u6743\uff0c\u4e14nm=5e8\uff0cspfa\u6709\u53ef\u80fd\u4f1a\u88ab\u5361\uff0c\u4e0d\u8fc7\u770b\u5176\u4ed6spfa\u9898\u89e3\uff0c\u8fd9\u9898\u597d\u50cf\u826f\u5fc3\u6ca1\u5361\uff0c\u4f46\u6bd5\u7adf\u4e0d\u5b89\u5168\uff0c\u6ca1\u6709\u8d1f\u6743\u5c31\u4e0d\u8981\u7528spfa\uff0c\u76f4\u63a5djstl\u5c31\u597d\u4e86**\n\n\n------------\ndjstl\u4ee3\u7801\n\n\n------------\n\n```\nbool djstl(int mid)//mid\u662f\u82b1\u8d39\u4e0a\u754c\n{\n\tfor(int i=2;i<=n;i++) dis[i]=1e9;//\u6ce8\u610f\u591a\u6b21\u8fd0\u7b97\uff0c\u9700\u8981\u6e05\u7a7a\n\tq.push(vs(1,0));\n\twhile(!q.empty())//\u961f\u5217\u4e0d\u7528\u6e05\u7a7a\uff0c\u4e0d\u89e3\u91ca\n\t{\n\t\tvs u=q.top();\n\t\tq.pop();\n\t\tif(u.vl>dis[u.x]) continue;\n\t\tfor(int i=head[u.x];i;i=p[i].next)\n\t\t{\n\t\t\tint v=p[i].to;\n\t\t\tif(a[v]>mid) //\u8d85\u51fa\u82b1\u8d39\u4e0a\u754c\uff0c\u4e0d\u8d70\n\t\t\tcontinue;\n\t\t\tif(dis[v]>dis[u.x]+p[i].vl)\n\t\t\t{\n\t\t\t\tdis[v]=dis[u.x]+p[i].vl;\n\t\t\t\tq.push(vs(v,dis[v]));\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[n]<b;\n}\n```\n",
        "postTime": 1562815804,
        "uid": 11392,
        "name": "shenbear",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "\u914d\u5408\u535a\u5ba2\u98df\u7528\u5473\u9053\u66f4\u4f73\uff1ahttp://littleseven.top/?p=280\n\n\u4e00\u9053**\u6700\u77ed\u8def**\u7684\u9898\uff0c\u5f53\u6211\u4eec\u62ff\u5230\u9898\u9762\u65f6\u5019\u53ef\u80fd\u4f1a\u4e0d\u662f\u5f88\u6e05\u6670\uff08~~\u8fd9\u9898\u6839\u672c\u8bfb\u4e0d\u660e\u767d~~\uff09 \uff0c\u800c\u6700\u7ec8\u7684\u9898\u610f\u5c31\u662f\u201c\u7ecf\u8fc7\u57ce\u5e02\u6700\u591a\u7684\u4e00\u6b21\uff0c\u8fd9\u6b21\u7684\u8d39\u7528\u6700\u5c11\u662f\u591a\u5c11\u201d\u3002\u8fd9\u79cd\u9898\u7684\u95ee\u6cd5\u53ef\u4ee5\u5f88\u76f4\u63a5\u7684\u60f3\u5230**\u4e8c\u5206\u7b54\u6848**\uff0c\u90a3\u4e48\u4e8c\u5206\u4ec0\u4e48\uff1f\u8840\u91cf\u8fd8\u662f\u91d1\u94b1\uff1f\u65e2\u7136\u6700\u7ec8\u95ee\u5230\u7684\u662f\u94b1\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4e8c\u5206\u94b1\u6570\u3002\n\n\u4e8c\u5206\u8fc7\u7a0b\uff1a\n\n\u200b\t\u5047\u8bbe\u5f53\u524d\u503c\u4e3a\u6700\u5927\u503c\uff0c\u5224\u65ad\u662f\u5426\u6709\u4e00\u6761\u8def\u53ef\u4ee5\u4ece1 - n \u5e76\u4e14\u4f7f\u5f97\u6bcf\u6761\u8fb9\u7684\u6536\u8d39\u90fd\u5c0f\u4e8e\u7b49\u4e8e\u8fd9\u4e2a\u503c\uff0c\u800c\u4e14\u8d70\u5230\u7ec8\u70b9\uff08 n \uff09\u65f6\u8840\u91cf\u5927\u4e8e\u7b49\u4e8e 0 \uff0c\u8fd9\u91cc\u5c31\u4f1a\u7528\u5230\u6700\u77ed\u8def\u7684\u6c42\u6cd5\uff1aDijkstra\u548cSPFA\u3002\u5728\u8fd9\u9053\u9898\u5f53\u4e2d\u5982\u679c\u76f4\u63a5\u4f7f\u7528\u88f8\u7684Dijkstra\u4f1aTLE\uff0c\u6240\u4ee5\u9009\u62e9\u4f7f\u7528\u5806\u4f18\u5316\uff0c\u90a3\u4e48\u5148\u8bf4\u5806\u4f18\u5316Dijkstra\u7684\u505a\u6cd5\uff1a\n\n\u200b\t\t\u9996\u5148\u770b\u666e\u901a\u7684Dijkstra\u6a21\u677f\uff1a\n\n```cpp\nvoid dijkstra(int s)\n{\n\tint tmp, k, y;\n\tmemset(vis, 0, sizeof vis);\n\tmemset(dis, 0x3f, sizeof dis);\n\tdis[s] = 0;\n\tfor (int i = 1; i <= n; i ++ )\n\t{\n\t\ttmp = 1 << 30;\n\t\tfor (int j = 1; j <= n; j ++ )\n\t\t{\n\t\t\tif (vis[j] == 0 && dis[j] < tmp)\n\t\t\t{\n\t\t\t\ttmp = dis[j];\n\t\t\t\tk = j;\n\t\t\t}\n\t\t}\n\t\tvis[k] = 1;\n\t\tfor (int j = head[k]; j; j = nxt[j])\n\t\t{\n\t\t\tif (dis[y = to[j]] > dis[k] + val[j])\n\t\t\t\tdis[y] = dis[k] + val[j];\n\t\t}\n\t}\n}\n\n```\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u95ee\u9898\uff0c\u5728tmp\u548ck\u5faa\u73af\u66f4\u65b0\u6700\u5c0f\u503c\u7684\u65f6\u5019\uff0c\u6d6a\u8d39\u4e86\u5f88\u591a\u65f6\u95f4\uff0c\u90a3\u4e48\u5982\u4f55\u624d\u80fd\u505a\u5230\u76f4\u63a5\u62ff\u51fa\u6700\u5c0f\u503c\u5462\uff1f\uff1f\uff1f\u8fd9\u91cc\u6211\u4eec\u5c31\u60f3\u5230\u4e86\u5c0f\u6839\u5806\uff0c\u6839\u636e\u5c0f\u6839\u5806\u7684\u6027\u8d28\uff0c\u6211\u4eec\u7b2c\u4e00\u6b21\u62ff\u51fa\u6765\u7684\u4e00\u5b9a\u662f\u4e00\u4e2a\u6700\u5c0f\u503c\uff0c\u800c\u5c0f\u6839\u5806\u6211\u4eec\u5219\u7528\u4f18\u5148\u961f\u5217\u7ef4\u62a4\uff08\u53d6\u8d1f\u503c\u7ef4\u62a4\u5927\u6839\u5806\uff09\uff0c\u7136\u800c\u7ef4\u62a4\u6574\u4e2a\u961f\u5217\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u65e0\u6cd5\u4ece\u4e0b\u6807\u8bbf\u95eedis\u503c\uff0c\u4e5f\u65e0\u6cd5\u4ecedis\u503c\u8bbf\u95ee\u4e0b\u6807\uff0c\u8fd9\u65f6\u6211\u4eec\u7528\u5230\u4e86\u4e00\u4e2a`pair<int, int>`\u7b2c\u4e00\u4e2a\u5b58dis\u503c\uff0c\u7b2c\u4e8c\u4e2a\u5b58\u4e0b\u6807\uff0c\u6839\u636e\u5927\u6839\u5806\u7684\u6027\u8d28\u4f1a\u6309\u7167\u7b2c\u4e00\u5173\u952e\u5b57->\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u8fd9\u6837\u521a\u597d\u505a\u5230\u4e86\u6211\u4eec\u8981\u7684\u987a\u5e8f\u3002\u8fd9\u6837\u5f97\u51fa\u6765\u4ee5\u4e0b\u4ee3\u7801\uff1a\n\n```cpp\npriority_queue < pair<int, int> > q;\nvoid dijkstra(int s)\n{\n\tmemset(dis, 0x3f, sizeof dis);\n\tdis[s] = 0;\n\tq.push(make_pair(0, s));\n\twhile (!q.empty())\n\t{\n\t\tint x = q.top().second;\n\t\tq.pop()\uff1b\n\t\tvis[x] = 1;\n\t\tfor (int i = head[x]; i; i = nxt[i])\n\t\t{\n\t\t\tif (dis[to[i]] > dis[x] + val[i])\n\t\t\t{\n\t\t\t\tdis[to[i]] = dis[x] + val[i];\n\t\t\t\tq.push(make_pair(-dis[to[i]], to[i]));//\uff08\u53d6\u8d1f\u503c\u5904\u7406\u5927\u6839\u5806\uff0c\u5b9e\u8d28\u7ef4\u62a4\u5c0f\u6839\u5806\uff09\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n\u7136\u800c\u6211\u4eec\u5728\u8fd9\u91cc\u4f1a\u6ce8\u610f\u5230\u5f88\u91cd\u8981\u7684\u4e00\u4e2a\u95ee\u9898\uff0c`pair<int, int>`\u8fd9\u4e2a\u4e8c\u5143\u7ec4\u662f\u4e0d\u652f\u6301\u52a8\u6001\u4fee\u6539\u7684\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u5728\u4e0b\u8fb9\u66f4\u65b0dis\u7684\u8fc7\u7a0b\u662f\u65e0\u6cd5\u4f20\u56de\u5230\u4f18\u5148\u961f\u5217\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u600e\u4e48\u89e3\u51b3\uff1f\uff1f\uff1f\u90a3\u4e48\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a vis[] \u6570\u7ec4\u6765\u8bb0\u5f55\u67d0\u4e00\u4e2a\u70b9\u662f\u5426\u88ab\u4fee\u6539\u8fc7\uff0c\u5982\u679c\u88ab\u4fee\u6539\u8fc7\uff0c\u5f53\u524d\u8fd9\u4e2a\u70b9\uff08\u961f\u5934\u5143\u7d20\uff09\u4e00\u5b9a\u662f\u4e00\u4e2a\u9519\u8bef\u7684\u4e14\u4e0d\u53ef\u4ee5\u53c2\u4e0e\u7b54\u6848\u8ba1\u7b97\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e00\u76f4\u5f39\u51fa\u961f\u9996\u5143\u7d20\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a vis[i] != 0 \u7684\u5143\u7d20\u5373\u53ef\uff0c**\u6700\u7ec8\u5806\u4f18\u5316Dijkstra\u4ee3\u7801\u5982\u4e0b\uff1a**\n\n```cpp\npriority_queue < pair<int, int> > q;\nvoid dijkstra(int s)\n{\n\tmemset(dis, 0x3f, sizeof dis);\n\tdis[s] = 0;\n\tq.push(make_pair(0, s));\n\twhile (!q.empty())\n\t{\n\t\tif (vis[q.top().second])\n\t\t{\n\t\t\tq.pop();\n\t\t\tcontinue ;\n\t\t}\n\t\tint x = q.top().second;\n\t\tq.pop()\uff1b\n\t\tvis[x] = 1;\n\t\tfor (int i = head[x]; i; i = nxt[i])\n\t\t{\n\t\t\tif (dis[to[i]] > dis[x] + val[i])\n\t\t\t{\n\t\t\t\tdis[to[i]] = dis[x] + val[i];\n\t\t\t\tq.push(make_pair(-dis[to[i]], to[i]));\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n\u800c\u5bf9\u4e8e\u8fd9\u9053\u9898\uff08\u53ea\u4fdd\u8bc1\u5bf9\u4e8e\u8fd9\u9053\u9898\uff09\u65b9\u9762SPFA\u8981\u6bd4Dijkstra\u4f18\uff0c\u4f46\u662f\u4e0d\u4ee3\u8868SPFA\u53ef\u4ee5\u5f88\u5b8c\u7f8e\u7684\u89e3\u51b3\u6240\u6709\u6700\u77ed\u8def\u7684\u95ee\u9898\u3002\u7531\u4e8eSPFA\u6781\u5176\u7384\u5b66\u7684\u590d\u6742\u5ea6\u5bfc\u81f4\u8fd9\u4e2a\u7b97\u6cd5\u975e\u5e38\uff01\u975e\u5e38\uff01\uff01\u975e\u5e38\uff01\uff01\uff01\u5bb9\u6613\u88ab\u5361\uff0c\u6240\u4ee5\u4e0d\u5efa\u8bae\u8fc7\u5ea6\u4f9d\u8d56SPFA\u3002\n\n## AC\u4ee3\u7801\n\n**\u5806\u4f18\u5316Dijkstra\uff1a**\n\n![\u6d1b\u8c37 P1462 \u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def p1](https://i.loli.net/2019/08/22/BZJVkvXGxdr2qpg.png)\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 100100;\nconst int M = 500100;\n\ntypedef long long ll;\n\nll n, m, b, maxx = -1;\nll cost[N], dis[N], vis[N];\nll tot, to[M], nxt[M], head[N], val[M];\nvoid add(ll x, ll y, ll z)\n{\n\tto[ ++ tot] = y;\n\tval[tot] = z;\n\tnxt[tot] = head[x];\n\thead[x] = tot;\n}\npriority_queue < pair<ll, ll> > q;\nbool check(ll s)\n{\n\tif (cost[1] > s || cost[n] > s)\n\t\treturn 0;\n\tmemset(dis, 0x7f, sizeof dis);\n\tmemset(vis, 0, sizeof vis);\n\tdis[1] = 0;\n\tq.push(make_pair(0, 1));\n\twhile (!q.empty())\n\t{\n\t\tif (vis[q.top().second])\n\t\t{\n\t\t\tq.pop();\n\t\t\tcontinue ;\n\t\t}\n\t\tll x = q.top().second;\n\t\tq.pop();\n\t\tvis[x] = 1;\n\t\tfor (ll i = head[x]; i; i = nxt[i])\n\t\t{\n\t\t\tif (cost[to[i]] > s) \n\t\t\t\tcontinue ;\n\t\t\tif (dis[to[i]] > dis[x] + val[i])\n\t\t\t{\n\t\t\t\tdis[to[i]] = dis[x] + val[i];\n\t\t\t\tq.push(make_pair(-dis[to[i]], to[i]));\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[n] < b;\n}\nint main()\n{\n\tscanf(\"%lld%lld%lld\", &n, &m, &b);\n\tfor (ll i = 1; i <= n; i ++ )\n\t{\n\t\tscanf(\"%lld\", &cost[i]);\n\t\tif (cost[i] > maxx)\n\t\t\tmaxx = cost[i];\n\t}\n\tfor (ll i = 1; i <= m; i ++ )\n\t{\n\t\tll x, y, z;\n\t\tscanf(\"%lld%lld%lld\", &x, &y, &z);\n\t\tadd(x, y, z);\n\t\tadd(y, x, z);\n\t}\n\tll l = 1, r = maxx + 1, ans = -1;\n\twhile (l < r)\n\t{\n\t\tll mid = (l + r) >> 1;\n\t\tif (check(mid))\n\t\t{\n\t\t\tans = mid;\n\t\t\tr = mid;\n\t\t}\n\t\telse \n\t\t\tl = mid + 1;\n\t}\n\tif (ans == -1)\n\t\tprintf(\"AFK\\n\");\n\telse\n\t\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n\n```\n\n**SPFA\uff1a**\n\n![\u6d1b\u8c37 P1462 \u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def p2](https://i.loli.net/2019/08/22/95gebUHdRutqx6f.png)\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\nconst int N = 100100;\nconst int M = 500500;\n\ntypedef long long ll;\n\nll n, m, b, maxx = -1, ans;\nll cost[N], dis[N], vis[N];\nll tot, to[M], val[M], nxt[M], head[N];\nvoid add(ll x, ll y, ll z)\n{\n\tto[ ++ tot] = y;\n\tval[tot] = z;\n\tnxt[tot] = head[x];\n\thead[x] = tot;\n}\nbool check(ll s)\n{\n\tif (cost[1] > s || cost[n] > s)\n\t\treturn 0;\n\tmemset(vis, 0, sizeof vis);\n\tmemset(dis, 0x7f, sizeof dis);\n\tqueue <ll> q;\n\tq.push(1);\n\tvis[1] = 1;\n\tdis[1] = 0;\n\twhile (!q.empty())\n\t{\n\t\tll x, y;\n\t\tx = q.front();\n\t\tq.pop();\n\t\tvis[x] = 0;\n\t\tfor (ll i = head[x]; i; i = nxt[i])\n\t\t{\n\t\t\tif (cost[to[i]] > s)\n\t\t\t\tcontinue ;\n\t\t\tif (dis[y = to[i]] > dis[x] + val[i])\n\t\t\t{\n\t\t\t\tdis[y] = dis[x] + val[i];\n\t\t\t\tif (vis[y] == 0)\n\t\t\t\t{\n\t\t\t\t\tq.push(y);\n\t\t\t\t\tvis[y] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[n] < b;\n}\nint main()\n{\n\tscanf(\"%lld%lld%lld\", &n, &m, &b);\n\tfor (ll i = 1; i <= n; i ++ )\n\t{\n\t\tscanf(\"%lld\", &cost[i]);\n\t\tmaxx = max(cost[i], maxx);\n\t}\n\tfor (ll i = 1; i <= m; i ++ )\n\t{\n\t\tll x, y, z;\n\t\tscanf(\"%lld%lld%lld\", &x, &y, &z);\n\t\tadd(x, y, z);\n\t\tadd(y, x, z);\n\t}\n\tll l = 1, r = maxx, ans = -1, mid;\n\twhile (l <= r)\n\t{\n\t\tmid = (l + r) >> 1;\n\t\tif (check(mid))\n\t\t{\n\t\t\tans = mid;\n\t\t\tr = mid - 1;\n\t\t}\n\t\telse\n\t\t\tl = mid + 1;\n\t}\n\tif (ans == -1)\n\t\tprintf(\"AFK\\n\");\n\telse\n\t\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1566435458,
        "uid": 144702,
        "name": "littleseven",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "## \u3010\u601d\u8def\u3011\n\u6700\u77ed\u8def + dijkstra + \u4e8c\u5206\u7b54\u6848     \n\n### \u3010\u9898\u76ee\u5927\u610f\u3011\n\u8d70\u6bcf\u4e00\u6761\u8def\u90fd\u4f1a\u6d88\u8017\u4e00\u5b9a\u7684\u8840\u91cf     \n\u5230\u6bcf\u4e00\u4e2a\u57ce\u5e02\u90fd\u4f1a\u8bdd\u8d39\u4e00\u5b9a\u7684\u91d1\u94b1     \n\u6c42\u5728\u6d3b\u7740\u7684\u60c5\u51b5\u4e0b\u7ecf\u8fc7\u7684\u57ce\u5e02\u4e2d\u4ea4\u7684\u91d1\u94b1\u6700\u591a\u7684\u6700\u5c11    \n\n### \u3010\u9898\u76ee\u5206\u6790\u3011\n#### \u3010\u4e8c\u5206\u3011 \n\u4f7f\u6700\u591a\u7684\u6700\u5c11    \n\u5f88\u663e\u7136\u5728\u63d0\u793a\u4f60\u8981\u7528\u4e8c\u5206\u7b54\u6848   \n\n\u4e8c\u5206\u6709\u4e24\u4e2a\u9009\u62e9\uff1a    \n1.\u4e8c\u5206\u8840\u91cf    \n2.\u4e8c\u5206\u82b1\u8d39\u6700\u591a\u7684\u57ce\u5e02\u82b1\u7684\u94b1    \n\u5982\u679c\u4e8c\u5206\u8840\u91cf    \n\u90a3\u5904\u7406\u8d77\u6765\u5c31\u76f8\u5f53\u9ebb\u70e6\u4e86   \n\u4f46\u662f\u5982\u679c\u4e8c\u5206\u82b1\u8d39     \n\u9650\u5236\u4e86\u54ea\u4e9b\u57ce\u5e02\u4e0d\u80fd\u8d70    \n\u8fd9\u6837\u5c31\u53ef\u4ee5check\u5728\u9650\u5236\u4e4b\u5916\u7684\u57ce\u5e02\u4e2d\u80fd\u4e0d\u80fd\u6d3b\u7740\u5230\u8fbe\u76ee\u7684\u5730       \n### \u3010\u6700\u77ed\u8def\u3011 \n\u770b\u6d3b\u7740\u7684\u60c5\u51b5    \n\u7ecf\u8fc7\u7684\u8def\u5f84\u8840\u91cf\u6d88\u8017\u4e0d\u7b49\u5927\u4e8e\u7b49\u4e8e\u6b6a\u5634\u54e6\u7684\u8840\u91cf    \n\u6ce8\u610f\uff1a    \n\u5373\u4f7f\u662f\u7b49\u4e8e\u4e5f\u662f\u4e0d\u884c\u7684    \n\u8fd9\u6837\u7684\u8bdd\u5728\u4e8c\u5206\u7684\u524d\u63d0\u4e4b\u4e0b\uff08\u53ea\u8d70\u82b1\u8d39\u4e0d\u8d85\u8fc7\u4e8c\u5206\u503c\u7684\u57ce\u5e02\uff09    \n\u8981\u8ba9\u6d88\u8017\u7684\u8840\u91cf\u6700\u5c11    \n\u800c\u4e14\u6d88\u8017\u7684\u8840\u91cf\u662f\u4f9d\u9644\u4e8e\u67d0\u6761\u8def\u5f84\u7684      \n\u6240\u4ee5\u53ef\u4ee5\u5f53\u6210\u8def\u5f84\u7684\u6743\u503c\u6765\u8dd1      \n\n### \u3010\u6838\u5fc3\u601d\u8def\u3011\n\u4e8c\u5206\u82b1\u8d39\u6700\u9ad8\u57ce\u5e02\u7684\u82b1\u8d39    \n\u7136\u540e\u8dd1dijkstra    \n\u56e0\u4e3a\u6709\u4e86\u6700\u9ad8\u82b1\u8d39\u7684\u9650\u5236    \n\u6240\u4ee5\u82b1\u8d39\u8d85\u51fa\u4e8c\u5206\u503c\u7684\u57ce\u5e02\u5c31\u4e0d\u80fd\u591f\u88ab\u8fdb\u884c\u677e\u5f1b\u64cd\u4f5c    \n\u7528\u5269\u4e0b\u7684\u8dd1\u4e00\u4e0b\u6700\u77ed\u8def    \n\u770b\u770b\u6700\u540e1-n\u7684\u6700\u5c11\u6d88\u8017\u7684\u8840\u91cf\u662f\u4e0d\u662f\u5c0f\u4e8e\u6b6a\u5634\u54e6\u7684\u8840\u91cf    \n\u5982\u679c\u5c0f\u4e8e\u90a3\u5c31\u8fd4\u56de\u771f    \n\u53cd\u4e4b\u8fd4\u56de\u5047     \n## \u3010\u5b8c\u6574\u4ee3\u7801\u3011\n```cpp\n#include<iostream> \n#include<cstdio>\n#include<cstring>\n#include<queue>\n#define int long long\nusing namespace std;\n\nint read()\n{\n\tint sum = 0,fg = 1;\n\tchar c = getchar();\n\twhile(c < '0' || c > '9')\n\t{\n\t\tif(c == '-')fg = -1;\n\t\tc = getchar();\n\t}\n\twhile(c >= '0' && c <= '9')\n\t{\n\t\tsum = sum * 10 + c - '0';\n\t\tc = getchar();\n\t}\n\treturn sum * fg; \n}\nconst int Max = 10004;\nint f[Max];\nstruct node\n{\n\tint y,ne;\n\tint z;\n}a[Max * 10];\nint head[Max],sum = 0;\nvoid add(int x,int y,int z)\n{\n\ta[++ sum].y = y;\n\ta[sum].ne = head[x];\n\ta[sum].z = z;\n\thead[x] = sum;\n}\n\nstruct point\n{\n\tint x;\n\tint w;\n\tbool operator < (const point xx) const \n\t{\n\t\treturn xx.w < w;\n\t}\n};\nint dis[Max];\nbool use[Max];\npriority_queue<point>q;\nint n,m,hp;\nbool check(int mid)\n{\n\tmemset(dis,0x3f,sizeof(dis));\n\tmemset(use,false,sizeof(use));\n\tdis[1] = 0;\n\tq.push((point){1,0});\n\twhile(!q.empty())\n\t{\n\t\tint x = q.top().x;\n\t\tq.pop();\n\t\tif(use[x] == true)\n\t\t\tcontinue;\n\t\tuse[x] = true;\n\t\tfor(register int i = head[x];i != 0;i = a[i].ne)\n\t\t{\n\t\t\tint awa = a[i].y;\n\t\t\tif(dis[awa] > dis[x] + a[i].z && f[awa] <= mid)\n\t\t\t{\n\t\t\t\tdis[awa] = dis[x] + a[i].z;\n\t\t\t\tif(use[awa] == false)\n\t\t\t\t\tq.push((point){awa,dis[awa]});\n\t\t\t}\n\t\t}\n\t}\n\tif(dis[n] < hp)\n\t\treturn true;\n\treturn false;\n}\n\nsigned main()\n{\n\tn = read(),m = read(),hp = read();\n\tint r = 0;\n\tfor(register int i = 1;i <= n;++ i)\n\t\tf[i] = read(),r = max(r,f[i]);\n\tfor(register int i = 1;i <= m;++ i)\n\t{\n\t\tint x = read(),y = read(),z = read();\n\t\tadd(x,y,z);\n\t\tadd(y,x,z);\n\t}\n\tint qwq = r;\n\tr ++;\n\tint l = 0;\n\twhile(l < r)\n\t{\n\t\tint mid = (r + l) >> 1;\n\t\tif(check(mid))r = mid;\n\t\telse\tl = mid + 1;\n\t}\n\tif(l == qwq + 1)\n\t{\n\t\tcout << \"AFK\" << endl;\n\t\treturn 0;\n\t}\n\tcout << l << endl;\n\treturn 0;\n}\n```",
        "postTime": 1573213046,
        "uid": 186489,
        "name": "EarthGiao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "##### \u672c\u9898\u9898\u9762\u53ef\u4ee5\u7b80\u5316\u4e3a\uff1a\u201c\u6709\u4e00\u4e2an\u70b9m\u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u56fe\u4e0a\u6bcf\u6761\u8fb9\u6709\u8fb9\u6743\uff0c\u6bcf\u4e2a\u70b9\u6709\u70b9\u6743\uff0c\u8bf7\u6c42\u51fa\u4e00\u6761\u4ece\u70b91\u5230n\u7684\u9053\u8def\uff0c\u4f7f\u5f97\u8fb9\u6743\u4e4b\u548c\u5c0f\u4e8e\u7ed9\u5b9a\u9650\u5236b\uff0c\u5e76\u4e14\u6700\u5c0f\u5316\u7ecf\u8fc7\u70b9\u6743\u7684\u6700\u5927\u503c\u201d\n##### \u5982\u679c\u6211\u4eec\u518d\u8003\u8651\u9898\u76ee\uff0c\u5c31\u4e0d\u96be\u53d1\u73b0\uff0c\u53ef\u4ee5\u4e8c\u5206\u5904\u7406\u672c\u9898\uff1a\u4e8c\u5206\u70b9\u6743\u7684\u6700\u5927\u503c\uff0c\u5982\u679c\u6709\u4e00\u70b9\u7684\u70b9\u6743\u5927\u4e8e\u8be5\u503c\uff0c\u5c31\u4e0d\u53bb\u8fd9\u4e00\u70b9\u3002\u7136\u540e\u8dd1\u4e00\u8fb9\u6700\u77ed\u8def\uff0c\u68c0\u6d4b\u662f\u5426\u80fd\u5230\u8fbe\u7ec8\u70b9\uff0c\u5e76\u7ee7\u7eed\u4e8c\u5206\u3002\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<iostream>\n#include<queue>\n#include<cstring>\n#include<algorithm>\n#include<cstdio>\n#include<vector>\nusing namespace std;\nstruct nod\n{\n    int st,en,cot;\n};\nqueue<int>q;\nvector<nod>v[10005];\nint b,m,n,p[10005],vis[10005];\nlong long dis[10005];\nvoid add(int x,int y,int z)\n{\n    nod xx;\n    xx.st=x;xx.en=y;xx.cot=z;\n    v[x].push_back(xx);\n}\nbool spfa(int lim)\n{\n    memset(dis,127,sizeof(dis));\n    memset(vis,0,sizeof(vis));\n    vis[1]=1;dis[1]=0;q.push(1);\n    while(!q.empty())\n    {\n        int h=q.front();\n        q.pop();vis[h]=0;\n        for(int i=0;i<v[h].size();i++)\n        {\n            nod t=v[h][i];\n            if(dis[t.en]>dis[t.st]+t.cot&&p[t.en]<=lim){\n                dis[t.en]=dis[t.st]+t.cot;\n                if(!vis[t.en]){\n                \tq.push(t.en);\n                \tvis[t.en]=1;\n                }\n            }\n        }\n    }\n    if(dis[n]>b)return 0;\n    else return 1;\n}\nint main()\n{\n    cin>>n>>m>>b;int l,r,mid;r=0;\n    for(int i=1;i<=n;i++){\n    \tcin>>p[i];\n        if(p[i]>=r)r=p[i];\n    }\n    l=0;//l\u4e5f\u53ef\u4ee5\u8d4b\u503c\u4e3a\u5176\u4ed6\u6bd4r\u5c0f\u7684\u503c\n    for(int j=1;j<=m;j++){\n        int x,y,z;\n        scanf(\"%d%d%d\",&x,&y,&z);\n        add(x,y,z);add(y,x,z);\n    }\n    if(!spfa(1000000001)){\n        cout<<\"AFK\";return 0;\n    }\n    while(l<=r){\n        mid=(l+r)>>1;\n        if(spfa(mid))r=mid-1;\n        else l=mid+1;\n    }\n    cout<<l;\n    return 0;\n}\n```",
        "postTime": 1534216727,
        "uid": 9522,
        "name": "\u5c0f\u77e5\u9752",
        "ccfLevel": 0,
        "title": "P-1462 \u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def"
    },
    {
        "content": "\u7b80\u5355\u7684\u4e8c\u5206\u7b54\u6848+\u6700\u77ed\u8def\u3002\n\n\u770b\u5230\u8981\u6c42\u6700\u5927\u7684\u6700\u5c0f\uff0c\u601d\u8003\u4e8c\u5206\u7b54\u6848\uff0c\u7136\u540e\u6211\u4eec\u53d1\u73b0\u9898\u76ee\u7684\u5355\u8c03\u6027\u662f\u5f88\u660e\u663e\u7684\u3002\n\n\u6211\u4eec\u6bcf\u6b21\u4e8c\u5206\u6700\u5927\u7684\u8d39\u7528$w$\uff0c\u7136\u540e\u628a\u6240\u6709\u5927\u4e8e$w$\u7684\u7ed3\u70b9\u6807\u8bb0\u4e0d\u5408\u6cd5\uff0c\u8dd1\u4e00\u6b21\u6700\u77ed\u8def\uff0c\u82e5\u6700\u540e\u53ef\u4ee5\u5230\u8fbe\u7ec8\u70b9\uff0c\u8bb0\u5f55\u4e00\u4e0b\u7b54\u6848\uff0c\u7136\u540e\u6211\u4eec\u8ba9$w$\u53d8\u5c0f\u7ee7\u7eed\u8dd1\uff0c\u5426\u5219\u8ba9$w$\u53d8\u5927\u7ee7\u7eed\u8dd1\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(knlogn)$\uff08$k$\u4e3a`spfa`\u4e2d\u7684\u201c\u5e38\u6570\u201d\uff09\n\n(\u5728\u51fa\u9898\u4eba\u4e0d\u5361`spfa`\u7684\u60c5\u51b5\u4e0b....\uff09\n\n\u4f46\u662f\u6211\u8981\u662f\u5361\u4e00\u4e0b\uff0c\u603b\u590d\u6742\u5ea6\u7acb\u9a6c\u5c31\u53d8\u6210\u4e86$O(mnlogn)$\n\n\u80c6\u5c0f\u5c31\u5199\u4e2a\u7a33\u5b9a$O(mlog^2n)$\u7684$dij$\u5427..\n\n\u8bb0\u5f97\u5224\u91cd\u8fb9\uff0c\u4e0d\u7136\u7684\u8bdd\u51fa\u73b0\u4e8c\u5143\u73af\u4f1a\u5f88\u9ebb\u70e6\u3002\n\n\n(\u6709\u4e8b\u6ca1\u4e8b\u5f00\u4e2a`long long`~)\n```cpp\n#include <bits/stdc++.h>\n#define int long long\n\nusing namespace std;\n\nconst int N = 50005;\nint n , m , b;\nint head[N] , cnt;\nmap <pair<int , int> , int> vis;\nint a[N] , l , r;\n\nstruct Edge {\n\tint to , nxt , w;\n}e[N << 1];\n\nvoid add(int u , int v , int w) {\n\te[++ cnt].to = v;\n\te[cnt].w = w;\n\te[cnt].nxt = head[u];\n\thead[u] = cnt;\n}\n\nbool flag[N] , inq[N];\nint dis[N];\nbool Spfa (int x) {\n\tfor(int i = 1 ; i <= n ; ++ i) {\n\t\tinq[i] = 0;\n\t\tif(a[i] <= x) flag[i] = 0;\n\t\telse flag[i] = 1;\n\t}\n\tfor(int i = 2 ; i <= n; ++ i) dis[i] = 0x7fffffff;\n\tqueue<int> q; q.push(1); inq[1] = 1;\n\twhile(! q.empty()) {\n\t\tint now = q.front(); q.pop();\n\t\tif(flag[now]) continue;\n\t\tinq[now] = 0;\n\t\tfor(int i = head[now] ; i ; i = e[i].nxt) {\n\t\t\tint v = e[i].to , w = e[i].w;\n\t\t\tif(flag[v]) continue;\n\t\t\tif(dis[v] > dis[now] + w) {\n\t\t\t\tdis[v] = dis[now] + w;\n\t\t\t\tif(!inq[v]) inq[v] = 1 , q.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[n] <= b;\n}\n\nsigned main () {\n\tscanf(\"%lld %lld %lld\" , &n , &m , &b);\n\tfor(int i = 1 ; i <= n ; ++ i) scanf(\"%lld\" , a + i) , r = max(a[i], r);\n\twhile(m -- ) {\n\t\tint u , v , w;\n\t\tscanf(\"%lld %lld %lld\" , &u, &v, &w);\n\t\tif(vis.count(make_pair(u , v)) || vis.count(make_pair(v , u))) continue;\n\t\tvis[make_pair(u , v)] = vis[make_pair(v , u)] = 1;\n\t\tadd(u , v , w); add(v , u , w);\n\t}\n\tint ans;\n\tif(!Spfa(1000000005)) {\n\t\tputs(\"AFK\"); return 0;\n\t}\n\twhile(l <= r) {\n\t\tint mid = (l + r) >> 1;\n\t\tif(Spfa(mid)) ans = mid , r = mid - 1;\n\t\telse l = mid + 1; \n\t}\n\tprintf(\"%lld\\n\" , ans);\n\treturn 0;\n}\n```",
        "postTime": 1572524964,
        "uid": 134080,
        "name": "jins3599",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "## \u641c\u7d22\n\n\u63d0\u4f9b\u4e00\u79cd\u4e0d\u4e00\u6837\u7684\u505a\u6cd5\u3002\n\n\u6211\u5728\u5199\u8fd9\u4e2a\u9898\u7684\u65f6\u5019\u521a\u521a\u5b66\u4e86\u4e8c\u5206\u548c\u641c\u7d22 ~~\u8fd8\u4e0d\u4f1a\u6700\u77ed\u8def~~\uff0c\u5c31\u628a\u8fd9\u4e2a\u9898\u5f53\u505a\u4e8c\u5206\u9898\u5199\u4e86\u3002\u53ef\u80fd\u662f\u6570\u636e\u6bd4\u8f83\u6c34\u5427\u3002\u9996\u5148\u770b\u5230\u6700\u5c0f\u503c\u6700\u5927\u6216\u8005\u6700\u5927\u503c\u6700\u5c0f\uff0c\u6211\u4eec\u7684\u7b2c\u4e00\u76f4\u89c9\u5c31\u662f\u4e8c\u5206\u7b54\u6848\u3002\n\n\u6211\u4eec\u4e8c\u5206\u6700\u5927\u503c\uff0c\u6211\u4eec\u53ea\u8d70\u90a3\u4e9b\u5c0f\u4e8e\u7b49\u4e8e\u4e8c\u5206\u7684\u7b54\u6848\u7684\u8def\uff0c\u5982\u679c\u6211\u4eec\u80fd\u591f\u8d70\u5230\u7ec8\u70b9\uff0c\u5c31\u8bf4\u660e\u6211\u4eec\u8bbe\u7f6e\u7684\u6761\u4ef6\u6bd4\u8f83\u5f31\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u51cf\u5c0f\u4e8c\u5206\u7684\u7b54\u6848\uff0c\u5f53\u6211\u4eec\u8d70\u4e0d\u5230\u7ec8\u70b9\u7684\u65f6\u5019\uff0c\u5c31\u8bf4\u660e\u6211\u4eec\u4e8c\u5206\u7684\u6761\u4ef6\u6bd4\u8f83\u4e25\uff0c\u6211\u4eec\u5c31\u5e94\u8be5\u8c03\u5927\u6211\u4eec\u4e8c\u5206\u7684\u7b54\u6848\uff0c\u4e00\u76f4\u8fd9\u6837\u4e0b\u53bb\u6211\u4eec\u5c31\u80fd\u627e\u5230\u4e00\u4e2a\u6bd4\u8f83\u7cbe\u786e\u7684\u503c\uff0c\u5f53\u8fd9\u4e2a\u6761\u4ef6\u7cbe\u786e\u5230\u552f\u4e00\u7684\u4e00\u4e2a\u503c\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u4e8c\u5206\u5230\u4e86\u6211\u4eec\u8981\u7684\u7b54\u6848\u3002\n\n\u4e8c\u5206\u7b54\u6848\u5f88\u91cd\u8981\u7684\u5c31\u662fcheck()\u51fd\u6570\u4e86\uff0c\u5f88\u591a\u5927\u4f6c\u90fd\u662f\u5199\u7684\u6700\u77ed\u8def\uff08dijkstral/spfa\uff09\uff0c\u5c06\u6389\u8840\u91cf\u770b\u6210\u8def\u7684\u957f\u5ea6\uff0c\u770b\u770b\u7b26\u5408\u6761\u4ef6\u7684\u6389\u8840\u91cf\u662f\u5426\u7b26\u5408\u6761\u4ef6\uff0c\u7136\u540e\u518d\u8c03\u6574mid\u503c\uff0c\u7ee7\u7eed\u4e8c\u5206\u3002\u4e8c\u5206\u7684\u590d\u6742\u5ea6\u4e3a$O(log(n))$,\u7136\u540e\u518d\u4e58\u4e0a\u6700\u77ed\u8def\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5c31\u662f\u6574\u4f53\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u4f46\u662f\u6211\u5199\u8fd9\u4e2a\u9898\u7684\u65f6\u5019\u8fd8\u4e0d\u4f1a\u5199\u6700\u77ed\u8def\uff0c\u4e4b\u597d\u5199\u4e86\u641c\u7d22\uff0c\u4f46\u53ef\u80fd\u662f\u6570\u636e\u6bd4\u8f83\u6c34\uff0c\u88ab\u6211\u6c34\u8fc7\u4e86\uff0c\u5f53\u7136\uff0c\u6211\u540e\u7eed\u4f1a\u8865\u4e0a\u5173\u4e8e\u6700\u77ed\u8def\u7684\u9898\u89e3\u3002\n\n\u4ee5\u4e0b\u5c31\u662f\u6211\u7684\u65e9\u671f\u4ee3\u7801\uff0c\u53ef\u80fd\u5b58\u5728\u7684\u95ee\u9898\u6bd4\u8f83\u591a\uff0c\u5018\u82e5\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u8fd8\u671b\u5927\u5bb6\u4e0d\u541d\u8d50\u6559\uff0c\u6307\u51fa\u6211\u7684\u9519\u8bef\u3002\n\n\u6700\u540e\u732e\u4e0a\u6211~~\u4e11\u964b~~\u7684\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nstruct bian\n{\n\tint to,nt,dis;\n}e[100001];\nint f[10001],head[10001],tot,ans;\nbool flag=0;\nint n,m,b,x,y,z;\nvoid add(int from,int to,int dis)\n{\n\te[++tot].to=to;\n\te[tot].dis=dis;\n\te[tot].nt=head[from];\n\thead[from]=tot;\n}\nvoid check(int fr,int l,int x,int q)\n{\t\n    if(f[1]>q||f[n]>q) {flag=0;return;}\n    if(fr==n)          {flag=1;return;}\n\tfor(int i=head[fr];i;i=e[i].nt)\n\t{\n\t\tif(f[e[i].to]<=q&&x-e[i].dis>0&&e[i].to!=l)\n\t\t{\n\t\t\tcheck(e[i].to,fr,x-e[i].dis,q);\t\n\t\t}\n\t\tif(flag==1)return;\n\t}\n}\nint main()\n{\n\tcin>>n>>m>>b;\n\tfor(int i=1;i<=n;++i)scanf(\"%d\",&f[i]);\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tadd(x,y,z);add(y,x,z);\n\t}\n\tint l=0,r=2147483646;\n\tcheck(1,0,b,2147483646);\n\tif(flag==0)\n\t{\n\t\tcout<<\"AFK\";\n\t\treturn 0;\n\t}\n\twhile(l<=r)\n\t{\n\t\tflag=0;\n\t\tint mid=(l+r)>>1;\n\t\tcheck(1,0,b,mid);\n\t\tif(flag==1)\n\t\t{\n\t\t\tr=mid-1;\n\t\t\tans=mid;\n\t\t}\n\t\telse l=mid+1;\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```\n\n## update\n\n\u5df2\u7ecf\u8865\u4e0a\u5173\u4e8e\u6700\u77ed\u8def\u7684\u9898\u89e3(SPFA)\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<queue>\n#include<cstdio>\nusing namespace std;\nconst int N=10010;\nstruct bian\n{\n\tint to,nt,dis;\n}e[100001];\nint n,m,b,x,y,z,tot,ans;\nint f[N],head[N];\nlong long dis[N];\nbool vis[N];\nvoid add(int from,int to,int dis)\n{\n\te[++tot].to=to;\n\te[tot].dis=dis;\n\te[tot].nt=head[from];\n\thead[from]=tot;\n}\nbool check(int mid)\n{\t\n    if(f[1]>mid||f[n]>mid)return 0;\n    memset(dis,0x3f,sizeof(dis));\n\tqueue<int>q;\n\tq.push(1);\n\tvis[1]=1;dis[1]=0;\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front();\n\t\tq.pop();vis[x]=0;\n\t\tfor(int i=head[x];i;i=e[i].nt)\n\t\t{\n\t\t\tif(f[e[i].to]>mid)continue;\n\t\t\tif(dis[e[i].to]>dis[x]+e[i].dis)\n\t\t\t{\n\t\t\t\tdis[e[i].to]=dis[x]+e[i].dis;\n\t\t\t\tif(!vis[e[i].to])\n\t\t\t\t{\n\t\t\t\t\tq.push(e[i].to);\n\t\t\t\t\tvis[e[i].to]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[n]<b;\n}\nint main()\n{\n\tcin>>n>>m>>b;\n\tfor(int i=1;i<=n;++i)scanf(\"%d\",&f[i]);\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tadd(x,y,z);add(y,x,z);\n\t}\n\tint l=0,r=2147483646;\n\tif(!check(2147483646))\n\t{\n\t\tcout<<\"AFK\";\n\t\treturn 0;\n\t}\n\twhile(l<=r)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tif(check(mid))\n\t\t{\n\t\t\tr=mid-1;\n\t\t\tans=mid;\n\t\t}\n\t\telse l=mid+1;\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```\n\u6548\u7387\u9ad8\u4e86\u4e00\u500d,\u73cd\u7231\u751f\u547d\uff0c\u8fdc\u79bb ~~\u4e71\u641e~~\n",
        "postTime": 1568710737,
        "uid": 153843,
        "name": "wljss",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "\u5177\u4f53\u7684\u601d\u8def\uff08\u5806\u4f18\u5316Dijkstra\uff09\u5176\u4ed6\u9898\u89e3\u5df2\u7ecf\u6709\u8bb2\u89e3\u3002  \n\u5199\u8fd9\u7bc7\u9898\u89e3\u4e3b\u8981\u6709\u4e24\u4e2a\u76ee\u7684\uff1a\n- \u4f7f\u7528\u5806\u4f18\u5316Dij\u7684\u9898\u89e3\u4e2d\uff0cTheGod\u7684\u9898\u89e3\u4f1aWA\u7b2c\u516b\u4e2a\u70b9\u3002\u53e6\u4e00\u7bc7\u5219\u662f\u96be\u5ea6\u8f83\u5927\u7684\u624b\u5199\u5806\u3002\u8fd9\u7bc7\u9898\u89e3\u5c31\u5f53\u7ed9\u65b0\u624b\u770b\u4e00\u4e0b\u4e00\u822c\u7684\u5806\u4f18\u5316Dijkstra\u7684\u57fa\u672c\u6846\u67b6\u548c\u6ce8\u610f\u4e8b\u9879\u3002\n- \u8fd9\u4efd\u4ee3\u7801\u662f\uff08\u76ee\u524d\uff092019\u5e74\u6700\u5feb\u7684\u4e00\u4efd\u4ee3\u7801\uff08\u5410\u69fd\uff1a2018\u7684Luogu3\u7684\u8bc4\u6d4b\u673a\u8c8c\u4f3c\u6c38\u8fdc\u6bd42019\u7684\u5feb\u8bb8\u591a\uff09\uff0c\u8fd0\u884c\u65f6\u95f4199ms\u3002\n\n\u5177\u4f53\u89c1\u4ee3\u7801\u6ce8\u91ca\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define reg register\nstatic char in[10000000],out[20],ch[20],*p=in,*q=out,*t=ch,vis[100001];\nstatic int n,m,B,b[50001],c[50001],dis[50001],head[10001],N;\n//in\u548cout\u662f\u8f93\u5165\u8f93\u51fa\u7684\u5b57\u7b26\u6570\u7ec4\uff08\u7f13\u51b2\u533a\uff09\u3002\n//N\u8868\u793a\u90bb\u63a5\u8868\u5927\u5c0f\u3002\n//\u5176\u4ed6\u53d8\u91cf\u5b9a\u4e49\u540c\u9898\u610f\u53ca\u4e00\u822c\u7684Dij\u6a21\u677f\u3002\ninline int read(){\n\treg int x=0;\n\twhile(*p<48)++p;\n    //\u56e0\u4e3a\u53ea\u6709\u7a7a\u683c\u548c\u56de\u8f66\uff0c\u6240\u4ee5\u5224\u65ad\u662f\u5426\u6570\u5b57\u53ea\u9700\u8981\u8fd9\u6837\u5199\u3002\n\twhile(isdigit(*p))x=(x+(x<<2)<<1)+(*p++^48);\n    //\u8fd9\u91cc\u8bb2\u4e00\u4e0b\uff1a\u5f00\u4e86O2\u4f18\u5316\u65f6\uff0c(x+(x<<2)<<1)\u6bd4(x<<1)+(x<<3)\u66f4\u5feb\u3002\n\treturn x;\n}//\u5230\u8fd9\u91cc\u90fd\u662ffread\u5b9e\u73b0\u7684\u5feb\u8bfb\u3002\nstruct Node{\n\tint u,v,w,nxt;\n}edges[100001];//\u90bb\u63a5\u8868\nstruct node{\n\tint dis,to;\n};//\u6ce8\u610f\u533a\u522b\u4e8eNode\nstruct cmp{\n\tinline bool operator()(node a,node b){\n\t\treturn a.dis>b.dis;\n\t}\n};//\u4f7f\u7528STL\u7684\u4f18\u5148\u961f\u5217\u65f6\uff0c\u5fc5\u987b\u81ea\u5b9a\u4e49\u6bd4\u8f83\u8fd0\u7b97\u7684\u7ed3\u6784\u4f53\u3002\u56e0\u4e3aSTL\u6ca1\u6709\u5185\u7f6egreater<node>\u7c7b\u578b\u3002\npriority_queue<node,vector<node>,cmp> Q;//\u961f\u5217\ninline void addedge(int u,int v,int w){\n\tedges[++N]=Node{u,v,w,head[u]},head[u]=N;\n    //\u8fd9\u91cc\u4f7f\u7528\u4e86C++11\u7684\u8bed\u6cd5\uff0c\u80fd\u8282\u7701\u4ee3\u7801\u91cf\u3002\n}\ninline char check(int x){//\u4e00\u4e2a\u6807\u51c6\u7684\u5806\u4f18\u5316Dijkstra\n\tif(x<b[1]||x<b[n])return 0;\n\tmemset(dis,0x3f,sizeof(dis));\n\tfor(reg int i=1;i<=n;++i)vis[i]=b[i]>x;//\u82b1\u8d39\u6bd4x\u5927\u7684\u76f4\u63a5\u8bbe\u4e3a\u4e0d\u53ef\u8d70\u3002\n\tdis[1]=0,Q.push(node{0,1});\n\twhile(!Q.empty()){\n\t\tnode now=Q.top();Q.pop();\n\t\tif(vis[now.to])continue;\n\t\tvis[now.to]=1;\n\t\tfor(reg int i=head[now.to];i;i=edges[i].nxt)\n\t\t\tif(dis[edges[i].v]>dis[now.to]+edges[i].w)\n\t\t\t\tdis[edges[i].v]=dis[now.to]+edges[i].w,\n\t\t\t\tQ.push(node{dis[edges[i].v],edges[i].v});\n\t}return dis[n]<B;//\u6ce8\u610f\u4e0d\u662f<=\n}\nint main(){\n\tfread(in,1,10000000,stdin);//fread\u8bfb\u5165\n\treg int ans=-1;\n\tn=read(),m=read(),B=read();\n\treg int *S=b+1,*E=S+n,*s2=c+1;\n\twhile(S<E)*s2++=*S++=read();//\u987a\u5e8f\u8bfb\u5165\u65f6\u4f7f\u7528\u6307\u9488\u66f4\u5feb\u3002\n\tsort(c+1,c+n+1);\n\tfor(reg int i=1;i<=m;++i){\n\t\tint u=read(),v=read(),w=read();\n\t\tu!=v&&(addedge(u,v,w),addedge(v,u,w),0);//\u8fd9\u91cc\u7528\u77ed\u8def\u8fd0\u7b97\u7b26\u4f18\u5316\u4e86if\u8bed\u53e5\u3002\u542b\u4e49\u662f\u5ffd\u7565\u4eceu\u5230u\u672c\u8eab\u7684\u8def\u7ebf\u3002\n        //\u6ce8\u610f\u4e00\u5b9a\u8981\u52a0\u4e24\u6761\u8fb9\uff0c\u5efa\u65e0\u5411\u56fe\u3002\n\t}\n\tint l=1,r=n,mid;\n\tif(!check(c[n])){//\u5982\u679c\u6700\u5927\u82b1\u8d39\u90fd\u4e0d\u80fd\u5b58\u6d3b\uff0c\u8f93\u51faAFK\n\t\tputs(\"AFK\");return 0;\n\t}\n\twhile(l<=r)//\u4e8c\u5206+\u4e09\u76ee\n\t\tmid=l+r>>1,check(c[mid])?(ans=c[mid],r=mid-1):l=mid+1;\n\tif(!ans)putchar('0');//\u5904\u74060\u7684\u60c5\u51b5\u3002\n\telse {\n\t\twhile(ans)*t++=ans%10+48,ans/=10;\n\t\twhile(t>ch)*q++=*--t;\n\t\tfwrite(out,1,q-out,stdout);\n\t}\n    //\u6ce8\u610f\uff1aputchar\u548cfwrite\u51b3\u4e0d\u80fd\u540c\u65f6\u4f7f\u7528\uff01\uff01\uff01\n\treturn 0;\n}\n```\n\u6700\u540e\u9644\u4e0a\u4e00\u4e9bNOIP\u5e76\u4e0d\u80fd\u7528\u7684\u7384\u5b66\u4f18\u5316\u65b9\u6cd5\uff1a\n```cpp\n\u5728\u5927\u578b\u51fd\u6570\u524d\u52a0__inline__ __attribute__ ((always_inline))\u800c\u4e0d\u662finline\n\u66f4\u591a\uff1ahttps://www.luogu.org/paste/bco4s6vl\n```\n# \u89c9\u5f97\u4e0d\u9519\u53ef\u4ee5\u8d5e\u4e00\u4e0b\u5965\u3002",
        "postTime": 1549606075,
        "uid": 75765,
        "name": "Starlight237",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "\u5728NOIP\u4e4b\u524d\u5199\u5199\u9898\u89e3\u6512\u6512\u4eba\u54c1\n\n\u5173\u4e8e\u8fd9\u9053\u9898\uff0c\u5149\u770b\u4e00\u4e0b\u8f93\u5165\u6570\u636e\u5c31\u662f\u4e00\u9053\u56fe\u8bba\u9898\uff08\u8fd9\u4e2a\u8c01\u90fd\u77e5\u9053\uff09\u3002\u3002\u3002\n\n\u7136\u540e\u8981\u6ce8\u610f\u7684\u70b9\u5c31\u662f\u9898\u76ee\u4e2d\u8fd9\u4e2a\u201c\u6240\u7ecf\u8fc7\u7684\u6240\u6709\u57ce\u5e02\u4e2d\u6700\u591a\u7684\u4e00\u6b21\u6536\u53d6\u7684\u8d39\u7528\u7684\u6700\u5c0f\u503c\u201d\uff0c\u5c31\u77e5\u9053\u662f\u4e8c\u5206\u7b54\u6848\u4e86\n\n\u601d\u8def\uff1a\u4f18\u5148\u961f\u5217\u4f18\u5316dijkstra+\u4e8c\u5206\u7b54\u6848\n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<algorithm>\nusing namespace std;\nconst int maxn=2e5+5;//\u4e2a\u4eba\u4e60\u60ef \nconst int inf=0x3fffffff;//\u8bbe\u4e3a0x7fffffff\u4f1a\u70b8 \nint val[maxn],dis[maxn],head[maxn],n,m,b,tot,l=inf,r=-inf,ans;\nstruct Edge\n{\n    int next;\n    int to;\n    int dis;\n}edge[maxn];//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u8fb9\u3002 \nstruct node\n{\n    int u;\n    int val;\n};\nbool operator < (const node &a,const node &b)\n{\n    return a.val>b.val;//\u91cd\u5b9a\u4e49\u5c0f\u4e8e\u53f7 \n}\nvoid addedge(int from,int to,int dis)\n{\n    edge[++tot].next=head[from];\n    edge[tot].to=to;\n    edge[tot].dis=dis;\n    head[from]=tot;\n}\npriority_queue<node> q;\nbool judge(int x)//\u4f18\u5148\u961f\u5217\u4f18\u5316dijkstra\u5224\u65ad\u7b54\u6848\u662f\u5426\u53ef\u884c \n{\n    for(int i=1;i<=n;i++) dis[i]=inf;\n    dis[1]=0;q.push((node){1,0});\n    while(!q.empty())\n    {\n        node temp=q.top();q.pop();\n        int u=temp.u,d=temp.val;\n        if(dis[u]!=d) continue;\n        for(int i=head[u];i;i=edge[i].next)\n        {\n            int v=edge[i].to;\n            if(val[v]<=x&&dis[u]+edge[i].dis<dis[v])\n            {\n                dis[v]=dis[u]+edge[i].dis;\n                q.push((node){v,dis[v]});\n            }\n        }\n    }\n    return dis[n]<=b;//\u5982\u679cdis[n]>b\uff0c\u6b6a\u5634\u9e45\u5c31\u4f1agay gay,\u8bf4\u660e\u7b54\u6848\u4e0d\u53ef\u884c\n}\nint main()\n{\n    int x,y,z;\n    scanf(\"%d%d%d\",&n,&m,&b);\n    for(int i=1;i<=n;i++) \n    {\n        scanf(\"%d\",&val[i]);\n        l=min(l,val[i]);//\u6709\u89e3\u7b54\u6848\u5de6\u533a\u95f4\n        r=max(r,val[i]);//\u6709\u89e3\u7b54\u6848\u53f3\u533a\u95f4\n    }\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d%d\",&x,&y,&z);\n        if(x==y) continue;//\u53bb\u9664\u81ea\u73af \n        addedge(x,y,z);\n        addedge(y,x,z);\n    }\n    if(!judge(inf)) \n    {\n        printf(\"AFK\\n\");//\u5982\u679c\u4ea4\u65e0\u7a77\u5927\u7684\u8d39\u7528\u90fd\u8fc7\u4e0d\u53bb\u7684\u8bdd\uff0c\u8bf4\u660e\u4e0d\u80fd\u4ece\u70b91\u5230\u70b9n \n        return 0;\n    }\n    while(l<=r)//\u4e8c\u5206\u7b54\u6848\u6a21\u677f \n    {\n        int mid=(l+r)>>1;\n        if(judge(mid))\n        {\n            ans=mid;\n            r=mid-1;\n        }\n        else l=mid+1;\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1539329104,
        "uid": 38481,
        "name": "doyo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "\n\n\n\n\n\n```cpp\n//\u4e0ep1948\u76f8\u4f3c \u4e8c\u5206+spfa\n//\u4e8c\u5206\u5f53\u524d\u6536\u8d39\u6700\u5927\n//\u8dd1spfa\u68c0\u9a8c\u7b54\u6848\n//\u5982\u679c d[n]>b \u5219\u7b54\u6848\u4e0d\u7b26\u5408\u6761\u4ef6\n//\u6ce8\u610fspfa\u4e2d\u677e\u5f1b\u7684\u5bf9\u8c61\u5e94\u8be5\u662f\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524d\u68c0\u9a8c\u7b54\u6848\u7684\u70b9\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <queue>\n#define MAXN 6666666\n#define INF 9999999999\nusing namespace std;\ninline long long read(){\n    char ch='*';\n    while(!isdigit(ch=getchar()));\n    long long num=ch-'0';\n    while(isdigit(ch=getchar())) num=num*10+ch-'0';\n    return num;\n}\nlong long h[MAXN],to[MAXN],next[MAXN],val[MAXN],cnt;\ninline void add(long long u,long long v,long long w){\n    to[++cnt]=v;val[cnt]=w;next[cnt]=h[u];h[u]=cnt;\n}\nlong long d[MAXN],w[MAXN],n,m,b;\nbool vis[MAXN];\ninline void spfa(int limit){\n    memset(vis,0,sizeof vis);\n    for(int i=1;i<=n;i++) d[i]=INF;\n    queue<int> q;\n    d[1]=0,vis[1]=true,q.push(1);\n    while(!q.empty()){\n        int u=q.front();q.pop();vis[u]=false;\n        for(int e=h[u];e;e=next[e]){\n            if(w[to[e]]<=limit&&d[to[e]]>d[u]+val[e]){\n                d[to[e]]=d[u]+val[e];\n                if(!vis[to[e]])\n                    vis[to[e]]=true,\n                    q.push(to[e]);\n            }\n        }\n    }\n}\ninline bool judge(int mid){\n    spfa(mid);\n    if(d[n]>b) return false;\n    return true;\n}\nint main(){\n    long long l=0,r=0;\n    cin>>n>>m>>b;\n    for(int i=1;i<=n;i++) cin>>w[i],r=max(r,w[i]);\n    l=max(w[1],w[n]);\n    for(long long i=1,u,v,w;i<=m;i++){\n        cin>>u>>v>>w;\n        add(u,v,w);add(v,u,w);\n    }\n    spfa(r);\n    if(d[n]==INF||d[n]>b){\n        printf(\"AFK\");\n        return 0;\n    }\n    while(l<=r){\n        int mid=(l+r)>>1;\n        if(judge(mid)) r=mid-1;\n        else l=mid+1; \n    }\n    printf(\"%d\",l);\n    return 0;\n}\n\n```",
        "postTime": 1510053647,
        "uid": 40571,
        "name": "0x404",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "1.\u7528\u5806\u4f18\u5316\u7684dijk\uff0c1.23s\n\n2.\u7528\u4e00\u4e2a\u96c6\u5408\u628a\u57ce\u5e02\u8d39\u7528\u590d\u5236\u6392\u5e8f\u4e00\u904d\uff08\u4f18\u5316logn\uff0c\u53ef\u4ee5\u6ca1\u6709\u7684\uff09\n\n\u7136\u540e\u4e8c\u5206\u7684\u662f\u57ce\u5e02\u7f16\u53f7\uff0c\u7528\u7684\u662f\u57ce\u5e02\u7684\u503c\n\n\u8d2a\u5fc3\u7684\u662f\u6700\u5c0f\u4e0d\u80fd\u8fbe\u5230\u7684\u57ce\u5e02\u8d39\u7528\uff0c\n\n\u90a3\u4e48\uff08\u524d\u63d0\u662f\u5230\u8fbe\u8fc7\u6700\u540e\u4e00\u8282\u70b9[\u6807\u8bb0flag\u5224AFK]\uff09\u4ed6\u4e0b\u4e00\u4e2a\u57ce\u5e02\u8d39\u7528\u5c31\u662f\u7b54\u6848\n\n3.\u5e0c\u671b\u5927\u4f6c\u544a\u8bc9\u6211\u4e3a\u4ec0\u4e48dis\u8981\u5f00long long\u624d\u80fd\u8fc7\uff0c\u611f\u6fc0\u4e0d\u5c3d\n\n```\n\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<queue>\nusing namespace std;\nint n,m,b;\nconst int maxn=10086,maxm=50505;\nstruct edge\n{\n\tint v,w,next;\n}e[maxm<<1];\nint k,head[maxn],city[maxn],unin[maxn];\nvoid add(int u,int v,int w)\n{\n\tk++;\n\te[k].v=v;\n\te[k].w=w;\n\te[k].next=head[u];\n\thead[u]=k;\n}\n\nint mid;bool flag;\ninline int cmid(int l,int r){return (l+r+1)>>1;};\n\nlong long dis[maxn];\nbool vis[maxn];\n#define M make_pair\ntypedef pair<int,int> pii;\npriority_queue<pii,vector<pii>,greater<pii> >q;\nbool dijk()\n{\n\tint cnt=0;\n\tint k=unin[mid];\n\tmemset(dis,127,sizeof(dis));\n\tmemset(vis,0,sizeof(vis));\n\tdis[1]=0;\n\tq.push(M(0,1));\n\twhile(!q.empty() and cnt<n)\n\t{\n\t\tint d=q.top().first,u=q.top().second;\n\t\tq.pop();\n\t\tif(vis[u])continue;\n\t\tvis[u]=1;cnt++;\n\t\tfor(int i=head[u];i;i=e[i].next)\n\t\t{\n\t\t\tint v=e[i].v,w=e[i].w;\n\t\t\tif(city[v]>k)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(dis[v]>dis[u]+w)\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+w;\n\t\t\t\tq.push(M(dis[v],v)); \n\t\t\t}\n\t\t}\n\t}\n\tif(dis[n]<=b){flag=1;return\t0;}//\u5230\u7684\u4e86\uff0c\u4e0a\u754c\u53ef\u80fd\u66f4\u5c0f \n\telse return 1;//\u5230\u4e0d\u4e86\uff0c\u4e0b\u754c\u589e\u52a0 \n}\nint main()\n{\n\t//freopen(\"test.txt\",\"r\",stdin);\n    cin>>n>>m>>b;\n    for(int i=1;i<=n;i++)\n    {\n    \tscanf(\"%d\",&city[i]);\n    \tunin[i]=city[i];\n    }\n    sort(unin+1,unin+1+n);\n    for(int i=1;i<=m;i++)\n    {\n    \tint al,bl,cl;\n    \tscanf(\"%d%d%d\",&al,&bl,&cl);\n    \tadd(al,bl,cl);\n    \tadd(bl,al,cl);\n    }\n    int l=1,r=n;\n    while(l<r)\n    {\n    \tmid=cmid(l,r);\n    \tif(city[1]>unin[mid])\n    \t{\n    \t\tl=mid;\n    \t\tcontinue;\n\t\t} \n    \tif(dijk())l=mid;\n    \telse r=mid-1;\n    }\n    if(!flag)cout<<\"AFK\";\n    else cout<<unin[l+1];\n    return 0;\n}\n  \n ```",
        "postTime": 1572239616,
        "uid": 104541,
        "name": "209074233fal",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "\u770b\u5b8c\u9898\u9762\u611f\u89c9\u8bed\u6587\u8981\u6302\u79d1\u3002\u3002\u3002o(\u2565\ufe4f\u2565)o\n\n## \u9898\u610f\uff1a\n$n$\u4e2a\u70b9$m$\u6761\u8fb9\u7684\u5e26\u6743\u65e0\u5411\u56fe\n\n\u6bcf\u4e2a\u70b9\u8fd8\u6709\u4e00\u4e2a\u70b9\u6743\n\n\u6c42$1-n$\u7684\u4e00\u6761\u6700\u77ed\u8def\u5f84\uff0c\u4f7f\u5f97\u8def\u5f84\u957f\u5ea6\u6bd4$b$\u65ad\uff0c\u5e76\u4e14\u7ecf\u8fc7\u7684\u70b9\u6743\u4e4b\u548c\u6700\u5927\u3002\n\n\u8f93\u51fa\u8fd9\u4e2a\u6700\u5927\u503c\n\n\n------------\n\n## \u601d\u8def\n\n\n\u8fd9\u9898\u6b63\u89e3 **$SPFA$ $+$ \u4e8c\u5206**\n\n_\u53ea\u770b\u601d\u8def\u7684\u540c\u5fd7\u4eec\u5230\u6b64\u4e3a\u6b62_\n\n------------\n\n## \u8be6\u60c5\n\n~~\u5f88\u7b80\u5355\uff0c~~\u5148\u6765\u4e2a\u4e8c\u5206\u7b54\u6848\uff0c$check()$\u51fd\u6570\u4e2d\u8fc7\u4e00\u904d$SPFA$\uff0c\u7136\u540e\u8dd1\u4e00\u4e0b$path$\uff0c\u4e5f\u5c31\u662f\u56de\u6eaf\u51fd\u6570\uff08\u7528\u6765\u6c42\u6700\u77ed\u8def\u5f84\uff09\uff0c\u7136\u540e\u5224\u4e00\u4e0b\u7b26\u4e0d\u7b26\u5408\u9898\u610f\u5c31\u884c\u4e86$QAQ$\n\n------------\n\n## \u4ee3\u7801\n\n```cpp\n#include <queue>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n#define MAXN 50010\n#define INF (int)1e9\nint n, m, cnt, blood, f[MAXN], dis[MAXN], pre[MAXN], ans; //pre[u]\u4ee3\u8868u\u52301\u7684\u6700\u77ed\u8def\u7684\u4e0a\u4e00\u4e2a\u8282\u70b9\nbool flag[MAXN];\nqueue<int> Q;\nstruct edge{ //\u90bb\u63a5\u8868\n\tint v, w;\n\tedge *next;\n}pool[MAXN << 1], *h[MAXN];\ninline void addedge(int u, int v, int w){ //\u5efa\u8fb9\u51fd\u6570\n\tedge *p = &pool[++cnt], *q = &pool[++cnt];\n\tp->v = v, p->w = w, p->next = h[u], h[u] = p;\n\tq->v = u, q->w = w, q->next = h[v], h[v] = q;\n}\ninline void spfa(int money){ //money\u4ee3\u8868\u8fd9\u6b21\u81f3\u5c11\u6536\u53d6\u591a\u5c11\u94b1\uff0c\u6240\u80fd\u591f\u8d70\u9053\u7684\u6700\u77ed\u8def\n\tint u, v;\n\tfor(int i = 2; i <= n; i++) dis[i] = INF;\n\tflag[1] = true, Q.push(1);\n\twhile(!Q.empty()){\n\t\tu = Q.front(), Q.pop(), flag[u] = false;\n\t\tfor(edge *p = h[u]; p; p = p->next)\n\t\t\tif(dis[v = p->v] > dis[u] + p->w && f[u] <= money){ //\u6ce8\u610f\u8fd9\u91cc\u8981\u5224\u4e00\u4e0b\u70b9\u6743\uff08\u94b1\uff09\u662f\u5426\u6ee1\u8db3\u8981\u6c42\uff08money\uff09\n\t\t\t\tdis[v] = dis[u] + p->w, pre[v] = u;\n\t\t\t\tif(!flag[v])\n\t\t\t\t\tQ.push(v), flag[v] = true;\n\t\t\t}\n\t}\n}\ninline int path(int u){ //\u6700\u77ed\u8def\u56de\u6eaf\u51fd\u6570\uff08\u9012\u5f52\u8c03\u7528\uff09\n\tif(u == 1) return f[1]; //\u5230\u5934\n\tif(u != 1 && !pre[u]) return -1; //\u8d70\u4e0d\u901a\u4e86\uff08\u4e0d\u8fde\u901a\uff09\n\treturn max(f[u], path(pre[u])); //\u6700\u591a\u4e00\u6b21\u7684\u94b1\n}\ninline bool check(int x){ //\u4e8c\u5206\u51fd\u6570\n\tspfa(x);\n\tint tmp = path(n);\n\tif(tmp <= x && tmp >= 0 && dis[n] <= blood) return true;\n\treturn false;\n}\nint main(){\n\tint u, v, w, left = INF, right = 0, mid, Max = 0;\n\tscanf(\"%d%d%d\", &n, &m, &blood);\n\tfor(int i = 1; i <= n; i++){\n\t\tscanf(\"%d\", &f[i]);\n\t\tleft = min(left, f[i]), Max = right = max(right, f[i]);\n\t}\n\tfor(int i = 1; i <= m; i++){\n\t\tscanf(\"%d%d%d\", &u, &v, &w);\n\t\taddedge(u, v, w);\n\t}\n\twhile(left <= right){\n\t\tmid = (left + right) >> 1;\n\t\tif(check(mid)) right = mid - 1;\n\t\telse left = mid + 1;\n\t}\n\tif(left > Max) puts(\"AFK\");\n\telse printf(\"%d\\n\", left);\n\treturn 0;\n}\n```",
        "postTime": 1540548862,
        "uid": 54628,
        "name": "eros1on",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011P1462\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def"
    },
    {
        "content": "\u5148\u6307\u51fa\u697c\u4e0b\u7684\u9519\u8bef= =\n\n\u5728\u7b2c\u4e8c\u904dSPFA\u4e2d\u65e0\u6cd5\u5224\u65ad\u6bcf\u4e00\u6b65\u53d6\u5230\u7684\u6700\u5c0f\u503c\u662f\u5426\u6ee1\u8db3\u201c\u6700\u7ec8\u5230n\u70b9\u751f\u547d\u4f1a\u5927\u4e8e\u96f6\u201d\u7684\u6761\u4ef6\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u8fd9\u6b21SPFA\u4e2d\u9650\u5236\u6761\u4ef6\u4ec5\u4ec5\u662f\u201c\u5230\u8be5\u70b9\u65f6\u751f\u547d\u4e0d\u4e3a\u96f6\u201d\uff0c\u6545\u6709\u4e00\u4e2a\u70b9\u4f1a\u56e0\u6b64WA\u6389\u3002\n\n\u8fd9\u79cd\u65b9\u6cd5\u867d\u7136\u662f\u9519\u7684\uff0c\u4f46\u662f\u8fd8\u662f\u6709\u4e5d\u5341\u5206\uff0c\u5728\u6bd4\u8d5b\u4e2d\u4e5f\u662f\u5f88\u7406\u60f3\u4e86\u4e0d\u662f\u4e48\uff08\u7b11\uff09\n\n\u56e0\u6b64\u4e0b\u9762\u8d34\u4e0a\u8fd9\u79cd\u65b9\u6cd5\u7684\u7b80\u5316\u5f62\u5f0f= =\u5728\u4e00\u904dSPFA\u5185\u89e3\u51b3\u5e76\u5f97\u5230\u4e5d\u5341\u5206\u7684\u4ee3\u7801= =\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<cstring>\nusing namespace std;\nstruct po\n{\n    int p,v;\n};\nbool cant_ar[10005],isin[10005];\nvector<po> map[10005];\nqueue<int> q;\nlong long d[10005],d2[10005];\nint n,m,b;\nlong long cv[10005];\nconst long long INF = 20000000000;\nvoid SPFA1()\n{\n    q.push(1);isin[1] = true;d2[1] = cv[1];\n    while(!q.empty())\n    {\n        int x = q.front();q.pop();isin[x] = false;\n        for(vector<po>::iterator ite = map[x].begin() ; ite != map[x].end() ; ite++)\n        {\n            if(d[(*ite).p] > d[x] + (*ite).v)\n            {\n                d[(*ite).p] = d[x] + (*ite).v;\n                d2[(*ite).p] = max(d2[x] , cv[(*ite).p]);\n                if(!isin[(*ite).p])\n                {\n                    q.push((*ite).p);\n                    isin[(*ite).p] = true;\n                }\n            }\n            if(d[x] + (*ite).v <= b)\n            {\n                if(d2[(*ite).p] > max(d2[x] , cv[(*ite).p]))\n                {\n                    d2[(*ite).p] = max(d2[x] , cv[(*ite).p]);\n                    if(!isin[(*ite).p])\n                    {\n                            q.push((*ite).p);\n                            isin[(*ite).p] = true;\n                    }\n                }\n            }\n        }\n    }\n    for(int i = 1 ; i <= n ; i++)\n    {\n        if(d[i] > b)\n            cant_ar[i] = true;\n    }\n}\nint main()\n{\n    cin.sync_with_stdio(false);\n    cin>>n>>m>>b;\n    for(int i = 1 ; i <= n ; i++)\n    {\n        cin>>cv[i];d[i] = d2[i] = INF;\n    }\n    d[1] = 0;\n    for(int i = 1 ; i <= m ; i++)\n    {\n        int x,y,z;\n        cin>>x>>y>>z;\n        map[x].push_back((po){y,z});\n        map[y].push_back((po){x,z});\n    }\n    SPFA1();\n    if(cant_ar[n])\n    {\n        cout<<\"AFK\";\n        return 0;\n    }\n    cout<<d2[n];\n    return 0;\n}\n\u6700\u540e\u2014\u2014\u60f3\u8981AC\u7684\u540c\u5b66\u4eec\u8fd8\u662f\u8001\u8001\u5b9e\u5b9e\u4e8c\u5206\u52a0SPFA\u5427\uff0c\u697c\u4e0b\u8fd9\u79cd\u65b9\u6cd5\u4f30\u8ba1\u5e76\u4e0d\u80fd\u8d70\u5f97\u901a\u3002\n```",
        "postTime": 1497632293,
        "uid": 25746,
        "name": "\u7406\u60f3\u6c14\u4f53",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u4e00\u4e2avis\u7684\u65f6\u5019spfa\u5224\u65ad\u9519\u4e86\u597d\u4e45\u90fd\u6ca1a \u8001\u662f\u9519\u4e00\u7ec4 \u54ce \u601d\u60f3\u5f88\u7b80\u5355 \u9047\u5230\u6700\u5927\u503c\u4e2d\u6c42\u6700\u5c0f\u503c\u6216\u8005\u6700\u5c0f\u503c\u4e2d \u6c42\u6700\u5927\u503c\u5c31\u5e94\u8be5\u60f3\u5230\u4e8c\u5206 \u4e8c\u5206\u6700\u5c0f\u7684\u6700\u5927\u8d39\u7528 \u5728spfa\u4e2d\u5224\u65ad\u4e00\u4e0b \u5c31\u597d\u4e86 \u5176\u5b9e\u53ef\u4ee5\u628ac\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u518d\u7528\u4e0b\u6807\u4e8c\u5206 \u4f46\u662f\u6211\u61d2 \u800c\u4e14\u6570\u636e\u8fd8\u8fd9\u4e48\u6c34\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<queue>\n#define maxn 20100\n#define maxm 100100\n#define ll long long\nusing namespace std;\nll n,m,b,Max=-1,cnt=1;\nll f[maxn],d[maxn],head[maxn];\nqueue<ll>q;\nstruct edge{\n    ll u,next,c;\n}e[maxm];\nvoid adde(ll a,ll b,ll c){\n    e[cnt].u=b;\n    e[cnt].c=c;\n    e[cnt].next=head[a];\n    head[a]=cnt++;\n}\n//\u6761\u4ef6\u662f\u5c0f\u4e8e\u6216\u8005\u7b49\u4e8emid \u5982\u679c\u4e0d\u53ef\u4ee5\u7684\u8bdd \u5c31\u76f4\u63a5\u7ec8\u6b62\u7a0b\u5e8f\u8f93\u51fa AFK \nll vis[maxn];\nbool ok =0;\nbool spfa(ll mid){\n    while(!q.empty())q.pop();\n    memset(vis,0,sizeof(vis));\n    for(ll i=1;i<=n;i++)d[i]=1e15;\n    d[1]=0;\n    vis[1]=1;\n    q.push(1);\n    for(int i=1;i<=n;i++)if(f[i]>mid)vis[i]=1;\n    if(f[1]>mid||f[n]>mid)return 0;\n    while(!q.empty()){\n        ll x=q.front();q.pop();\n        vis[x]=0;\n        for(ll i=head[x];i!=-1;i=e[i].next){\n            ll u=e[i].u;\n            if(d[u]>d[x]+e[i].c){\n                d[u]=d[x]+e[i].c;\n                if(!vis[u]){\n                    vis[u]=1;\n                    q.push(u);\n                }\n            }\n        }\n    }\n    if(d[n]>b)return 0;\n    ok=1;\n    return 1;\n}\nint main(){\n    scanf(\"%lld%lld%lld\",&n,&m,&b);\n    memset(head,-1,sizeof(head));\n    for(ll i=1;i<=n;i++){\n        scanf(\"%lld\",&f[i]);\n        Max=max(Max,f[i]);\n    }\n    for(ll i=1;i<=m;i++){\n        ll a,b,c;\n        scanf(\"%lld%lld%lld\",&a,&b,&c);\n        adde(a,b,c);\n        adde(b,a,c);\n    }\n    ll l=1,r=Max;\n    ll mid;\n    while(l<r){\n        mid=(l+r)/2;\n        if(spfa(mid))r=mid;\n        else l=mid+1;\n    }\n    if(!ok&&!spfa(l))printf(\"AFK\");\n    else\n    printf(\"%lld\",l);\n    return 0;\n}\n```",
        "postTime": 1467589446,
        "uid": 18431,
        "name": "intruder",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\u4e8c\u5206+\u5806\u4f18\u5316dijkstra\uff08~~\u5173\u4e8eSPFA\uff0c\u8fd9\u9898\u5b83\u6ca1\u6b7b~~\uff09\n\u4e8c\u5206\u5904\u7406\u70b9\u6743\uff08\u6536\u8d39\u7684\u591a\u5c11\uff09,\u6700\u77ed\u8def\u5904\u7406\u8fb9\u6743\uff08\u8840\u91cf\uff09\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nint ans,pp[10005],point[10005],pnt[100005],nxt[100005],head[10005],len[100005],E,dis[10005],INF=2147483647,n,m,b;\nstruct node\n{\n\tint val,pos;\n\tbool operator<(node x)const\n\t{\n\t\treturn val>x.val;\n\t}//\u91cd\u8f7d\u8fd0\u7b97\u7b26\n\tnode()\n\t{\n\t}\n\tnode(int _val,int _pos)\n\t{\n\t\tval=_val,pos=_pos;\n\t}\n};//\u4e5f\u53ef\u4ee5\u7528pair\u5904\u7406\nvoid add_edge(int u,int v,int w)\n{\n\tpnt[E]=v;\n\tlen[E]=w;\n\tnxt[E]=head[u];\n\thead[u]=E++;\n}//\u524d\u5411\u661f\nbool dijkstra(int u,int mid)\n{\n\tpriority_queue<node> q;\n\tfor (int i=1;i<=n;i++) dis[i]=INF;\n\tdis[u]=0;\n\tq.push(node(0,u));\n\twhile(!q.empty())\n\t{\n\t\tnode x=q.top();\n\t\tq.pop();\n\t\tint uu=x.pos,vv=x.val;\n\t\t//cout<<uu<<' '<<vv<<endl;\n\t\tif (vv!=dis[uu]) continue;//\u5982\u679c\u5806\u4e2d\u8282\u70b9\u7684dis\u5927\u4e8edis[uu]\uff0c\u5219\u8bf4\u660e\u8be5\u8282\u70b9\u88ab\u4fee\u6539\u8fc7\uff0c\u76f4\u63a5continue\n\t\tfor (int i=head[uu];i!=-1;i=nxt[i])\n\t\t{\n\t\t\tint v=pnt[i];\n\t\t\tif (point[v]>mid) continue;//\u70b9\u6743\u5927\u4e8e\u5f53\u524d\u7684\u6700\u5927\u503c\uff0ccontinue\n\t\t\tif (dis[v]>dis[uu]+len[i])\n\t\t\t{\n\t\t\t\tdis[v]=dis[uu]+len[i];\n\t\t\t\tq.push(node(dis[v],v));\n\t\t\t}\n\t\t}\n\t}\n\tif (dis[n]>b) return 0;//\u8840\u91cf\u5c0f\u4e8e0\u624d\u6b7b\uff0c\u4e00\u4e2a\u5c0f\u5751\u70b9\n\treturn 1; \n}//\u5806\u4f18\u5316dijkstra\nsigned main()\n{\n\tmemset(head,-1,sizeof(head));\n\tcin>>n>>m>>b;\n\tfor (int i=1;i<=n;i++) scanf(\"%lld\",&point[i]),pp[i]=point[i];\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tint a,b,c;\n\t\tscanf(\"%lld%lld%lld\",&a,&b,&c);\n\t\tadd_edge(a,b,c);\n\t\tadd_edge(b,a,c);\n\t}\n\tsort(pp+1,pp+1+n);\n\tint l=1,r=n;\n\twhile(l<=r)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\t//cout<<mid<<endl;\n\t\tif(dijkstra(1,pp[mid])) ans=pp[mid],r=mid-1;//\u5f53\u524d\u6700\u9ad8\u6536\u8d39\u80fd\u8dd1\u51fa\u6765\uff0c\u5c31\u7ee7\u7eed\u5c1d\u8bd5\u66f4\u5c0f\u7684\n\t\telse l=mid+1;//\u53cd\u4e4b\u66f4\u5927\u7684\n\t}\n\tif (ans==0) cout<<\"AFK\";\n\telse cout<<ans<<endl;\n}\n```",
        "postTime": 1567908485,
        "uid": 32879,
        "name": "k1saki",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "\u9898\u76ee\uff1ahttps://www.luogu.org/problem/P1462\n\u5f53\u521d\u672c\u849f\u84bb\u521a\u521a\u5b66\u5b8c\u5355\u6e90\u6700\u77ed\u8def\uff0c\u4e00\u9f13\u4f5c\u6c14\u60f3\u8981\u641e\u5b8c\u63d0\u9ad8\u5386\u7ec3\u7ec4\u4e2d\u7684\u6700\u77ed\u8def\u95ee\u9898\uff0c\u7136\u540e ~~\u5c31\u6ca1\u6709\u7136\u540e\u4e86~~\u3002\n\n\u6700\u5927\u503c\u6700\u5c0f\uff1f\uff1f\u4ec0\u4e48\u9b3c\uff1f\uff1f\u770b\u9898\u89e3\u2014\u2014~~\u4e8c\u5206\uff1f\uff1f\u6ca1\u5b66\uff1f\uff1f\u5148\u6536\u5230\u4efb\u52a1\u8ba1\u5212\uff0c~~\u3002\n\n\u4eca\u5929\u7a81\u7136\u770b\u89c1\u4e86\u5b83\uff0c\u7136\u800c\u5b83\u5728\u6211\u7684\u8ba1\u5212\u91cc\u5446\u4e86\u534a\u5e74\u591a\u3002\n\n\u5e9f\u8bdd\u5c11\u8bf4\uff0c\u6700\u5927\u503c\u6700\u5c0f\uff0c\u660e\u663e\u7684\u4e8c\u5206\u9898\u3002\n\u4e8c\u5206\u4ec0\u4e48\u5462??~~\u6c42\u8d39\u7528\u5f53\u7136\u5206\u8d39\u7528\u5566~~\u3002\n\n\u6211\u4eec\u5c06\u8d39\u7528\u4e8c\u5206\uff0c\u5c06\u8d39\u7528\u5927\u4e8e\u4e8c\u5206\u503c\u7684\u57ce\u5e02\u53bb\u6389~~\u8fd9\u4e48\u8d35\u7684\u57ce\u5e02\u6211\u5f53\u7136\u662f\u4e0d\u4f1a\u53bb\u7684\u5566~~\uff0c\u4ee5\u6389\u8840\u8bbe\u4e3a\u8fb9\u6743\uff0c\u7136\u540e\u5c31\u53d8\u6210\u4e86\u5355\u6e90\u6700\u77ed\u8def\u3002\n\n\u6839\u636e\u6211\u7cbe\u5999\u7edd\u4f26\u7684\u5206\u6790\uff0c\u6ca1\u6709\u8d1f\u503c\uff0c\u679c\u65adSPFA~~\u5176\u5b9e\u662f\u60f3\u4e0d\u8d77\u6765dijkstra\u600e\u4e48\u5199\u4e86~~\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\n#define itn int\nconst int N=1e4+10,M=2e5+10;\nint tot,n,m,b,l,r,ans;\nint ver[M],edge[M],nex[M],hea[N];\nlong long dis[N];\nint f[N];\nbool v[N],fv[N];\nqueue<int>q;\n\ninline void add(itn x,itn y,itn z){\n\tver[++tot]=y;nex[tot]=hea[x];\n\thea[x]=tot;edge[tot]=z;\n}\n\ninline bool spfa(){\n\tmemset(dis,0x7f7f,sizeof(dis));\n\tq.push(1);v[1]=1;dis[1]=0;\n\twhile(q.size()){\n\t\tint x=q.front();q.pop();v[x]=0;\n\t\tfor(int i=hea[x];i;i=nex[i]){\n\t\t\tint y=ver[i];\n\t\t\tif(fv[y])continue;\n\t\t\tif(dis[y]>dis[x]+edge[i]){\n\t\t\t\tdis[y]=dis[x]+edge[i];\n\t\t\t\tif(!v[y])q.push(y),v[y]=1;\n\t\t\t}\n\t\t}\n\t}\n\tif(dis[n]<b)return 1;\n\telse return 0;\n}\n\ninline bool check(int x){\n\tmemset(fv,0,sizeof(fv));\n\tfor(int i=1;i<=n;i++)if(f[i]>x)fv[i]=1;\n\tif(fv[n]||fv[1])return 0;\n\treturn spfa();\n}\n\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&b);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&f[i]);\n\t\tr=max(r,f[i]);\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y,z;scanf(\"%d%d%d\",&x,&y,&z);\n\t\tadd(x,y,z);add(y,x,z);\n\t}\n\twhile(l<=r){\n\t\tint mid=(l+r)/2;\n\t\tif(check(mid))ans=mid,r=mid-1;\n\t\telse l=mid+1;\n\t}\n\tif(ans==0)printf(\"AFK\");\n\telse printf(\"%d\",ans);\t\n\treturn 0;\n}\n```\n",
        "postTime": 1566123536,
        "uid": 169137,
        "name": "k\uff0c\u706b\u9b42",
        "ccfLevel": 0,
        "title": "P1462 \u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def"
    },
    {
        "content": " \u9996\u5148\uff0c\u770b\u89c1\u6700\u5927\u503c\u6700\u5c0f\uff0c\u4e0d\u8003\u8651\u6709\u5751\u7684\u60c5\u51b5\uff0c\u5c31\u8981\u50cf\u5230\u6700\u77ed\u8def+\u4e8c\u5206\u3002~~\uff08\u662f\u4e2a\u5957\u8def\uff0c\u8981\u8bb0\u4e0b\u6765\uff09~~ \n \n \u6700\u77ed\u8def\u7684\u8bdd\u5e94\u8be5\u7528dij+\u5806\u4f18\u5316\u662f\u6700\u4f18\u7684\u4e86\uff0c~~SPFA\u5df2\u7ecf\u6b7b\u4e86~~\u3002\n \n\u5c06\u5230i\u57ce\u5e02\u8981\u6536\u5230\u8d39\u8bbe\u4e24\u4e2a\u6570\u7ec4b[i]\u548cc[i]\uff0c\u8f93\u5165\u7684\u65f6\u5019\u662f\u4e00\u6837\u7684\u3002\u4f46\u662f\u8981\u5bf9c\u8fdb\u884c\u6392\u5e8f\uff0c\u7528\u4e8e\u4e8c\u5206\u627e\u6700\u5c0f\u503c\u3002\n \n------------\n\u4ee5\u4e0b\u653e\u4e0a\u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#include <algorithm>\nusing namespace std;\nconst int inf=0x3f3f3f3f;\nconst int N=10010;\nconst int M=50010;\nint n,m,hp;\nstruct node\n{\n    int next,to,w;\n}a[M<<1];\nint b[N],c[N],d[N],vis[N],head[N],tot;\nvoid add(int x,int y,int z)//\u5efa\u56fe \n{\n    a[++tot].next=head[x];\n    a[tot].to=y;\n    a[tot].w=z;\n    head[x]=tot;\n}\npriority_queue<pair<int,int> >q;\nint check(int x)\n{\n    if(x<b[1]||x<b[n]) return 0;\n    memset(d,inf,sizeof(d));\n    for(int i=1;i<=n;i++){\n        if(b[i]>x) vis[i]=1;\n        else vis[i]=0;\n    }//\u5c06\u6536\u8d39\u5927\u4e8emid\u7684\u8def\u6807\u8bb0\n    d[1]=0; q.push(make_pair(0,1));\n    while(!q.empty())//\u5728\u53ef\u4ee5\u8d70\u7684\u8def \n    {\n        int u=q.top().second; q.pop();\n        if(vis[u]) continue; vis[u]=1;\n        for(int i=head[u];i;i=a[i].next)\n        {\n            int v=a[i].to;\n            if(d[v]>d[u]+a[i].w){\n                d[v]=d[u]+a[i].w;\n                q.push(make_pair(-d[v],v));\n            }\n        }\n    }\n    if(d[n]<hp) return 1;\n    else return 0;\n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&hp);\n    for(int i=1;i<=n;i++){scanf(\"%d\",&b[i]); c[i]=b[i];}\n    sort(c+1,c+n+1);\n    for(int i=1;i<=m;i++)\n    {\n        int u,v,w;\n        scanf(\"%d%d%d\",&u,&v,&w); add(u,v,w); add(v,u,w);\n    }\n    if(!check(c[n])) {printf(\"AFK\\n\"); return 0;}\n    int l=1,r=n,mid;\n    while(l<r)//\u4e8c\u5206 \n    {\n        mid=(l+r)>>1;\n        if(check(c[mid])) r=mid;\n        else l=mid+1;\n    }\n    printf(\"%d\\n\",c[l]);\n    return 0;\n}\n```\n",
        "postTime": 1564484397,
        "uid": 113699,
        "name": "president",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "## \u9898\u89e3-P1462 \u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\n\n### $1.1$\u9898\u76ee\u610f\u601d\n\u9898\u76ee\u610f\u601d\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u4f60\u8981\u4ece$1$\u5230$n$\uff0c\u4f60\u6709$b$\u7684\u8840\u91cf\uff0c\u6bcf\u6b21\u4ece\u4e00\u4e2a\u57ce\u5e02\u5230\u53e6\u4e00\u4e2a\u57ce\u5e02\u4f1a\u6d88\u8017$bi$\u7684\u8840\u91cf\uff0c\u6bcf\u4e2a\u57ce\u5e02\u9700\u8981\u82b1$wi$\u7684\u8d39\u7528\u3002\u73b0\u5728\u95ee\u4f60\u5f53\u4f60\u7684$0\\leq b$\u65f6\uff0c\u4ed6\u6240\u7ecf\u8fc7\u7684\u6240\u6709\u57ce\u5e02\u4e2d\u6700\u591a\u7684\u4e00\u6b21\u6536\u53d6\u7684\u8d39\u7528\u7684\u6700\u5c0f\u503c\u662f\u591a\u5c11\u3002\n\n### $2.1$\u7b97\u6cd5\u601d\u8def\n\u9898\u76ee\u8981\u6c42\u6211\u4eec\u6c42\u6700\u5c0f\u503c\u663e\u7136\u60f3\u5230\u7528\u4e8c\u5206\u6c42\u89e3\u5440\u3002\u6211\u4eec\u76f4\u63a5\u4e8c\u5206\u7b54\u6848\u3002\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a\u5f53\u4f60\u4e8c\u5206\u5b8c\u540e\uff0c\u4f46\u4e0d\u4e00\u5b9a\u800c\u5206\u51fa\u4e86\u7b54\u6848\uff0c\u6240\u4ee5\u8981\u5bf9\u7b54\u6848\u8fdb\u4e00\u4e0d\u9a8c\u8bc1\uff0c\u5c31\u662f\u5224\u65ad\u5f53\u4f60\u8840\u91cf\u8fd8\u662f\u5927\u4e8e$0$\u65f6\u662f\u5426\u8fbe\u5230\u4e86\u57ce\u5e02$n$\u3002\u5728$check$\u7684\u65f6\u5019\uff0c\u5bf9\u4e8e$mid\\leq f[n]$ \u6216\u8005 $mid\\leq f[1]$\uff0c\u76f4\u63a5$continue$\u6389\uff0c\u7136\u540e\u5bf9\u4e8e$mid\\leq f[i]$\u7684$vis[i]=1$\u5373\u53ef\u3002\n\n### $3.1$\u4ee3\u7801\u5b9e\u73b0\n```cpp\n#include <bits/stdc++.h>\n#define re register\n#define int long long \nusing namespace std;\n\nconst int maxn=1e5+5,maxm=5e5+5;\nstruct nood {\n\tint nex,to,w;\n} e[maxm];\nint head[maxn],dis[maxn],vis[maxn];\nint n,m,b,cnt,ans,now,maxf,f[maxn],ff=0;\n\ninline void add_edge(int u,int v,int len) {\n\te[++cnt].nex=head[u];\n\thead[u]=cnt;\n\te[cnt].to=v;\n\te[cnt].w=len;\n}\n//\u524d\u5411\u661f\u8fde\u8fb9\ninline int read() {\n\tint sum=0; char ch=getchar();\n\twhile(!isdigit(ch)) ch=getchar();\n\twhile(isdigit(ch)) sum=sum*10+ch-'0',ch=getchar();\n\treturn sum;\n}\n//\u5feb\u8bfb\ninline bool spfa(int x) {\n\tqueue<int>ma;\n\tmemset(vis,0,sizeof(vis));\n\tmemset(dis,0x7f,sizeof(dis));\n\tma.push(1),dis[1]=0,vis[1]=1;\n\tfor ( re int i=1;i<=n;i++ ) \n\t\tif(f[i]>x) vis[i]=1;\n    //\u5bf9\u4e8e\u90a3\u4e9bmid<f[i]\u7684\u70b9\u6807\u8bb0\u4e3a1\n\twhile(!ma.empty()) {\n\t\tint u=ma.front(); \n\t\tma.pop(); \n\t\tvis[u]=0;\n\t\tfor ( re int i=head[u];i;i=e[i].nex ) {\n\t\t\tint v=e[i].to;\n\t\t\tif(dis[v]>dis[u]+e[i].w) {\n\t\t\t\tdis[v]=dis[u]+e[i].w;\n\t\t\t\tif(!vis[v]) {\n\t\t\t\t\tvis[v]=1;\n\t\t\t\t\tma.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}//\u666e\u901a\u7684\u6700\u77ed\u8defspfa\n\tif(dis[n]>b) return false;\n\tff=1;\n\treturn true;\n\twhile(ma.size()) ma.pop();\n}\n\nsigned main() {\n\tn=read(),m=read(),b=read();\n\tfor ( re int i=1;i<=n;i++ ) \n\t\tf[i]=read();\n\tfor ( re int i=1;i<=m;i++ ) {\n\t\tint u=read(),v=read(),z=read();\n\t\tadd_edge(u,v,z);\n\t\tadd_edge(v,u,z);\n\t}\n\tint l=0,r=1e10;\n\twhile(l<=r) {\n\t\tint mid=(l+r)/2;\n\t\tif(mid<f[n]||mid<f[1]) {\n\t\t\tl=mid+1;\n\t\t\tcontinue;\n\t\t}\n        //\u5bf9\u4e8e\u800c\u4e8c\u5206\u51fa\u7684\u503c\u5c0f\u4e8ef[1]\u6216\u8005f[n]\u76f4\u63a5\u8df3\u8fc7\uff0c\u5e76\u4e14l++\uff0c\u4e0dl++\u4f1a\u8fdb\u5165\u6b7b\u5faa\u73af\u3002\n\t\tif(spfa(mid)) r=mid-1,ans=mid;\n\t\telse l=mid+1;\n\t}\n\tif(ff==0 && !spfa(ans)) \n\t\treturn printf(\"AFK\\n\"),0;\n    //\u5982\u679cff\u5230\u8fbe\u6807\u8bb0\u8fd8\u662f0\uff0c\u5e76\u4e14\u5f53\u524d\u7b54\u6848\u8fd8\u662f\u4e0d\u5bf9\uff0c\u8f93\u51faAFK\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n### $4.1$\u603b\u7ed3\n\u8fd9\u9053\u9898\u76ee\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u4e8c\u5206+$spfa$\uff0c\u4ed4\u7ec6\u60f3\u4e00\u60f3\u80af\u5b9a\u80fd\u591f$AC$\u7684\u3002",
        "postTime": 1563242811,
        "uid": 172612,
        "name": "\u7c73\u5947\u5947\u7c73",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "<http://blog.csdn.net/u014120397/article/details/50962735>\n\n\u9898\u76ee\u91cc\u9762\u51fa\u73b0\u4e86\u4e00\u4e2a\u201c\u4ea4\u8d39\u6700\u591a\u7684\u4e00\u6b21\u7684\u6700\u5c0f\u503c\u201d\uff0c\u6700\u5927\u503c\u6700\u5c0f\uff0c\u679c\u65ad\u4e8c\u5206\u2026\u2026\n\n\u7531\u4e8e\u8fd9\u4e2a\u5012\u9709\u7684\u5bb6\u4f19\u8fd8\u6709\u4e00\u4e2a\u201c\u8840\u91cf\u201d\uff0c\u800c\u4e14\u8fd8\u8fc7\u4e00\u6761\u8def\u5c31\u6263\u4e00\u4e9b\uff0c\u4e8e\u662f\u6211\u4eec\u60f3\u5230\u4e86\u5728\u4e8c\u5206\u8fc7\u7a0b\u4e2dSPFA\uff0c\u5982\u679c\u8fd9\u4e2a\u4eba\u53ea\u82b1mid=(l+r)div 2\uff08\u521d\u59cb\u65f6r=max(cost[i])\uff09\u7684\u94b1\u80fd\u987a\u5229\u5230\u7ec8\u70b9\u800c\u4e14\u6263\u7684\u8840<=\u8840\u91cf\u7684\u8bdd\uff0c\u90a3\u4e48\u8bf4\u660e\u53ef\u4ee5\u5c11\u82b1\u4e00\u70b9\u94b1\uff0c\u6b64\u65f6r=mid\uff0c\u5426\u5219\u5c31\u8bf4\u660e\u8fd8\u662f\u5f97\u7834\u8d22\u6d88\u707e\uff0cl=mid+1\uff0c\u5982\u6b64\u5f80\u590d\u76f4\u81f3l=r\uff0c\u53d6\u6b64\u65f6\u7684l\u503c\u518dSPFA\u4e00\u6b21\uff0c\u5982\u679c\u8fd8\u4e0d\u80fd\u6b63\u5e38\u5230\u8fbe\u7ec8\u70b9\uff0c\u90a3\u4e48\u5c31\u6ca1\u529e\u6cd5\u4e86\uff0c\u8f93\u51faAFK\uff0c\u5426\u5219\u8f93\u51fal\u5373\u53ef\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff08\u5f53\u7136\u8fd8\u662fpascal\u7684\uff09\uff1a\n\n```cpp\ntype data=record  \n          v,next:longint;len:int64;  \n          end;  \nvar edge:array[1..60000]of data;  \n    cost:array[1..15000]of longint;  \n    head:array[1..60000]of longint;  \n    d:array[1..60000]of int64;  \n    vis:array[1..20000]of boolean;  \n    queue:array[1..1000000]of longint;  \n    n,m,i,j,x,y,num,l,r,mid:longint;  \n    z,b:int64;  \nfunction spfa(lim:longint):boolean;  \nvar he,ta:longint;  \n    i,j,s,t,e:longint;  \nbegin  \n  he:=0;  \n  ta:=1;  \n  queue[1]:=1;  \n  vis[1]:=true;  \n  for i:=1 to n do  \n  d[i]:=10000000000000;  \n  d[1]:=0;  \n  while he<ta do  \n  begin  \n    inc(he);  \n    s:=queue[he];  \n    e:=head[s];  \n    while e<>0 do  \n    begin  \n      t:=edge[e].v;  \n      if cost[t]>lim then  \n      begin  \n        e:=edge[e].next;  \n        continue;  \n      end;  \n      if d[t]>d[s]+edge[e].len then  \n      begin  \n        d[t]:=d[s]+edge[e].len;  \n        if not vis[t] then  \n        begin  \n          inc(ta);  \n          queue[ta]:=t;  \n          vis[t]:=true;  \n        end;  \n      end;  \n      e:=edge[e].next;  \n    end;  \n    vis[s]:=false;  \n  end;  \n  if d[n]>b then exit(false) else exit(true);  \nend;  \nprocedure addedge(x,y,z:longint);  \nbegin  \n  inc(num);  \n  edge[num].v:=y;  \n  edge[num].next:=head[x];  \n  head[x]:=num;  \n  edge[num].len:=z;  \nend;  \nbegin  \n  readln(n,m,b);  \n  num:=0;  \n  r:=0;  \n  for i:=1 to n do  \n  begin  \n    readln(cost[i]);  \n    if cost[i]>r then r:=cost[i];  \n  end;  \n  for i:=1 to m do  \n  begin  \n    readln(x,y,z);  \n    addedge(x,y,z);  \n    addedge(y,x,z);  \n  end;  \n  l:=1;  \n  while l<r do  \n  begin  \n    mid:=(l+r)div 2;  \n    if (not spfa(mid))or(cost[1]>mid) then l:=mid+1 else r:=mid;  \n  end;  \n  if spfa(l) then writeln(l) else writeln('AFK');  \nend.\n```",
        "postTime": 1461560927,
        "uid": 5263,
        "name": "DrCell_CellTech",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "\u3010\u601d\u8def\u3011\n\n\u4e8c\u5206\u6cd5+\u6700\u77ed\u8def\u5224\u5b9a\u3002\n\n\u4e8c\u5206\u7ecf\u8fc7\u57ce\u5e02\u7684\u6700\u5927\u8d39\u7528upc\uff0c\u7136\u540e\u5224\u5b9a\u3002\u5224\u5b9a\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8d39\u7528\u5927\u4e8eupc\u7684\u57ce\u5e02\u6807\u8bb0\u4e3a\u4e0d\u53ef\u8fbe\uff0c\u6c42\u6700\u77ed\u8def\u5f84\uff0c\u5224\u65ad\u6700\u77ed\u8def\u4e0e\u8840\u91cf\u7684\u5173\u7cfb\u5373\u53ef\u3002\u5982\u679c\u4e00\u4e2a\u57ce\u5e02\u4e0d\u53ef\u8fbe\u53ef\u4ee5\u5728SPFA\u7b97\u6cd5\u5f00\u59cb\u524d\u5c06inq\u7f6e\u4e3a1\u3002\n\n  \n\u5c0f\u7684\u4f18\u5316\uff1a\u770b\u5230\u5f88\u591a\u540c\u5b66\u7684\u65f6\u95f4\u5927\u7ea6\u57281000ms\u5de6\u53f3\uff0c\u5927\u591a\u56e0\u4e3a\u662f\u76f2\u76ee\u4e8c\u5206\u3002\u5176\u5b9e\u53ea\u9700\u8981\u628aC\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5bf9C\u503c\u8fdb\u884c\u4e8c\u5206\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\n\u3010\u4ee3\u7801\u3011\n\n```cpp\n\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\ntypedef long long LL;\nconst int maxn = 10000+10,maxm=50000+10;\nconst LL INF=1e15;\n\nstruct Edge{\n    int v,w,next;\n}e[2*maxm];\nint en,front[maxn];\n\nint n,m; LL B;\nint C[maxn];\n\n\ninline void AddEdge(int u,int v,int w) {\n    en++; e[en].v=v; e[en].w=w; e[en].next=front[u]; front[u]=en;\n}\n\nqueue<int> q;\nint inq[maxn];  LL d[maxn];\nbool can(int upc)\n{\n    memset(inq,0,sizeof(inq));\n    for(int i=1;i<=n;i++){\n        d[i]=INF;\n        if(C[i]>upc) inq[i]=1;\n    }\n    \n    if(C[1]>upc || C[n]>upc) return false;\n    d[1]=0; inq[1]=1; q.push(1);\n    while(!q.empty()) {\n        int u=q.front(); q.pop(); inq[u]=0;\n        for(int i=front[u];i>=0;i=e[i].next) {\n            int v=e[i].v,w=e[i].w;\n            if(d[v]>d[u]+w) {\n                d[v]=d[u]+w;\n                if(!inq[v]) {\n                    inq[v]=1;\n                    q.push(v);\n                }\n            }\n        }\n    }\n    return d[n]<=B;\n}\n\nint main() {\n    memset(front,-1,sizeof(front));\n    scanf(\"%d%d%lld\",&n,&m,&B);\n    for(int i=1;i<=n;i++) scanf(\"%d\",&C[i]);\n    int u,v,w;\n    for(int i=1;i<=m;i++) {\n        scanf(\"%d%d%d\",&u,&v,&w);\n        AddEdge(u,v,w);\n        AddEdge(v,u,w);\n    }\n    \n    int tmpc[maxn];\n    memcpy(&tmpc,&C,sizeof(C));\n    sort(tmpc+1,tmpc+n+1);\n    \n    int L=1,R=n+1,M;\n    while(L<R) {\n        M=L+(R-L)/2;\n        if(can(tmpc[M])) R=M;\n        else L=M+1;\n    }\n    if(L>R || (L==R && !can(tmpc[L]))) printf(\"AFK\\n\");\n    else printf(\"%d\\n\",tmpc[L]);\n    return 0;\n}\n\n```",
        "postTime": 1445680822,
        "uid": 3482,
        "name": "hahalidaxin2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "\u5728\u5c06\u8fd9\u9053\u9898\u7684\u5e73\u5747\u5206\u62c9\u4f4e0.6\u5206\u4e4b\u540e\uff0c\u7ec8\u4e8e\u5f3a\u884cAC\u8fc7\u53bb\u4e86\u3002\u3002\u3002\u3002\n\n\u8fd9\u9053\u9898\u5c31\u662f\u4e8c\u5206\u7b54\u6848+SPFA\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u3002\u3002\u3002\u3002\u3002\u4f46\u662f\u5c31\u662f\u8fd9\u6837\u4e5f\u8fd8\u662f\u6c34\u4e86\u4e00\u4e0b\u5348\u3002\u3002\u3002\n\n\u4ee3\u7801\u81ea\u884c\u7406\u89e3\u3002\u3002\u3002\n\n```cpp\n\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <cstdlib>\n#include <math.h>\n#include <algorithm>\nusing namespace std;\nstruct edge\n{\n    int to,next,w; \n}e[100010];\nint INF=0x3f3f3f3f;\nint n,m,d;\nint cost[10001];\nint tot,head[10001];\nvoid add(int a,int b,int c)\n{\n    e[tot].to=b;\n    e[tot].next=head[a];\n    e[tot].w=c;\n    head[a]=tot++;\n    e[tot].to=a;\n    e[tot].next=head[b];\n    e[tot].w=c;\n    head[b]=tot++;\n}\nint dis[10001];\nbool spfa(int x)\n{\n    int l=0,r=1;\n    bool inq[10010]={};\n    int q[10001]={};\n    memset(dis,0x3f,sizeof(dis));\n    dis[1]=0;q[0]=1;inq[1]=1;\n    while(l!=r)\n    {\n        int now=q[l++];\n        if(l==10001) l=0;\n        for(int i=head[now];i;i=e[i].next)\n        {\n            if(cost[e[i].to]>x) continue;\n            if(dis[e[i].to]>dis[now]+e[i].w)\n            {\n                dis[e[i].to]=dis[now]+e[i].w;\n                if(!inq[e[i].to])\n                {\n                    q[r++]=e[i].to;\n                    if(r==10001) r=0;\n                    inq[e[i].to]=1;\n                }\n            }\n        }\n        inq[now]=0;\n    }\n    if(d-dis[n]<=0||dis[n]==INF) return 0;\n    return 1;\n}\n/*bool spfa(int x)\n{\n    int dis[10001],i;\n    int p[10001];\n    int p1=0,p2=0;\n    memset(dis,0x3f,sizeof(dis));\n    memset(visit,0,sizeof(visit));\n    dis[1]=0,visit[1]=1;\n    p[++p2]=1;\n    while(p1!=p2)\n    {\n      int u=p[(++p1)%10000];\n      for(i=head[u];i;i=e[i].next)\n      {\n          int v=e[i].to;\n          if(cost[v]>x)\n            continue;\n          if(dis[v]>dis[u]+e[i].w)\n          {\n            dis[v]=dis[u]+e[i].w;\n            if(!visit[v])\n            {\n                p[(++p2)%10000]=v;\n                visit[v]=1;\n            }\n          }\n      }\n      visit[u]=0;\n    }\n    if(b-dis[n]<=0||dis[n]==INF)\n      return 0;\n    else return 1;\n}*/\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&d);\n    int i,ma=0;\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&cost[i]);\n        ma=max(ma,cost[i]);\n    }\n    for(i=1;i<=m;i++)\n    {\n      int a,b,c;\n      scanf(\"%d%d%d\",&a,&b,&c);\n      add(a,b,c);\n    }\n    int ans;\n    int l=0,r=ma,mid=(l+r)>>1;\n    if(spfa(INF))\n    {\n      while(l<=r)\n      {\n          if(spfa(mid)) \n        {\n          r=mid-1;\n          ans=mid;\n        }\n          else l=mid+1;\n          mid=(r+l)>>1;\n      }\n      printf(\"%d\\n\",ans);\n    }\n    else printf(\"AFK\\n\");\n}\n```",
        "postTime": 1444395691,
        "uid": 9729,
        "name": "timetravler",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "\u8bf7\u65e0\u89c6\u672c\u9898\u7684\u96be\u5ea6\u3002\u4e25\u91cd\u4e0d\u7b26= =\u3001\n\n\n\u7531\u4e8e\u672c\u9898\u6709\u4e24\u4e2a\u91cf\uff1a\u8840\u91cf\u548c\u91d1\u94b1\u8981\u8003\u8651\u3002\n\n\n\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u60f3\u5230\u5c06\u4e00\u4e2a\u91cf\u5b9a\u4e0b\u6765\u3002\n\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7528\u4e8c\u5206\u6765\u786e\u5b9a\u6240\u7ecf\u8fc7\u7684\u6700\u5927\u91d1\u94b1\u3002\u8fd9\u6837\u628a\u6240\u6709\u91d1\u94b1\u5927\u7684\u5168\u90e8\u65e0\u89c6\u6389\u3002\n\n\n\u63a5\u7740\u8dd1\u6700\u77ed\u8def\uff0c\u518d\u5224\u65ad\u6700\u77ed\u8def\u548c\u8840\u91cf\u7684\u5173\u7cfb\u3002\n\n\n\u672c\u9898AFK\u60c5\u51b5\u53ef\u4ee5\u5728\u4e8c\u5206\u524d\u5148\u5224\u65ad\uff0c\u5728\u65e0\u9650\u5236\u6761\u4ef6\u4e0b\u505a\u4e00\u904d\u6700\u77ed\u8def\u5373\u53ef\u3002\n\n\n\u8d34\u4e0a\u201c\u716e\u201d\u8fc7\u7a0b\u548cSPFA\n\n\n```delphi\n\n\nfor i:=0 to n+1 do v1[i]:=false;\n  mid:=n;\n  spfa(1);\n  if dist[n]>blood then begin writeln('AFK'); halt; end;\n\n  r:=n;\n  mid:=(l+r) div 2;\n  while l<r-1 do\n    begin\n      //writeln(l,' ',r,' ',mid);\n      for i:=0 to n+1 do v1[i]:=false;\n      spfa(1);\n      if dist[n]<=blood then r:=mid else l:=mid;\n      mid:=(l+r) div 2;\n    end;\n  writeln(vlist[r]);\n\n\n```\n\n```delphi\n\n\nprocedure spfa(s:longint);\nvar i,j,now,sum,point:longint;\nbegin\n  for j:= 1 to n do dist[j]:=maxlongint;\n  dist[s]:=0;\n  v1[s]:=true;\n  now:=s;\n  head:=0;\n  tail:=1;\n  h1:=0;\n  t1:=1;\n  d[head]:=s;\n  while h1<t1 do\n    begin\n      now:=d[head];\n      point:=front[now];\n      while point<>-1 do\n        begin\n          if (dist[t[point]]>dist[now]+v[point]) and (fv[t[point]]<=vlist[mid])\n          then\n            begin\n              dist[t[point]]:=dist[now]+v[point];\n              if not v1[t[point]]\n              then\n                begin\n                  d[tail]:=t[point];\n                  v1[t[point]]:=true;\n                  tail:=(tail+1) mod 10001; t1:=t1+1;\n                end;\n            end;\n          point:=next[point];\n        end;\n      v1[now] := false;\n      head:=(head+1) mod 10001;\n      inc(h1);\n    end;\nend;\n\n\n```",
        "postTime": 1376730592,
        "uid": 277,
        "name": "plane",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\u3002\u3002\u521a\u5f00\u59cb\u5199\u8fd9\u9898\u65f6\u60f3\u76f4\u63a5\u8dd1\u8d39\u7528\u7684\u6700\u77ed\u8def\uff0c\u7136\u540e\u8bb0\u5f55\u6536\u8d39\u6700\u5927\u7684\u90a3\u4e00\u7ad9\u7684\u8d39\u7528\uff0chp\u505a\u4e3a\u80fd\u5426\u8d70\u8fd9\u6761\u8fb9\u7684\u9650\u5236\u6761\u4ef6\u3002\u3002\u7136\u800c\u53ea\u670981\u5206\u3002\u3002\u3002\u540e\u9762\u770b\u4e86\u5176\u4ed6\u7684\u9898\u89e3\u540e\u624d\u77e5\u9053\u8981\u4e8c\u5206\u7b54\u6848\uff0c\u4f46\u597d\u50cf\u5f88\u591a\u90fd\u662f\u7528SPFA\u7684\u3002\u3002\u5c31\u53d1\u4e00\u4e2a\u7528\u5806\u4f18\u5316\u7684dijkstral\u5427\u3002\u3002\u4e0a\u4ee3\u7801\u3002\u3002\n```cpp\n#include<bits/stdc++.h>\nconst int inf = 1e9+10;\nconst int maxn = 10010;\nusing namespace std;\nint n, m, b;\nstruct qnode {\n\tint v\uff0chp;//hp\u662f\u5df2\u6263\u8840\u91cf\n\tqnode(int _v=0,int _h=0):v(_v),hp(_h){}\n\tbool operator <(const qnode& r)const {\n\t\treturn hp > r.hp;//\u6b3a\u9a97\u5806\u4e2d\u81ea\u5e26\u7684\u6bd4\u8f83\uff0c\u628a\u5c0f\u7684\u653e\u5728top\n\t}\n};\nstruct Edge {\n\tint v,c;\n\tEdge(int _v=0,int _c=0):v(_v),c(_c){}\n};\nvector<Edge>e[maxn];//\u90bb\u63a5\u8868\u5b58\u56fe\nint chp[maxn];//\u5230\u67d0\u4e2a\u57ce\u5e02\u8981\u6263\u7684\u8840\u91cf\nint f[maxn],u[maxn];//\u8bb0\u5f55\u6536\u8d39\uff0cf\u7528\u6765\u5907\u4efd\uff0cu\u7528\u6765\u4e8c\u5206\nbool vis[maxn];//\u6807\u8bb0\u662f\u5426\u5230\u8fc7\nvoid link(int u, int v, int w) {//\u6dfb\u52a0\u8fb9\n\te[u].push_back(Edge(v, w));\n\te[v].push_back(Edge(u, w));\n}\nbool check(int m) {\n\tif (m < f[1] || m < f[n])return false;\n    //\u5982\u679c\u8d77\u70b9\u548c\u7ec8\u70b9\u7684\u6536\u8d39\u90fd\u6bd4\u76ee\u524d\u7684\u5927\uff0c\u8bf4\u660e\u4e0d\u7b26\n\tfor (int i = 1; i <= n; i++) {\n\t\tchp[i] = inf;//\u521d\u59cb\u5316\n\t\tif (f[i] > m)vis[i] = true;//\u5c06\u6bd4\u5f53\u524d\u4e0a\u9650\u5927\u7684\u6807\u8bb0\u4e3a\u5df2\u7ecf\u8bbf\u95ee\uff0c\u9664\u53bb\u4e0d\u80fd\u8d70\u7684\u70b9\n\t\telse vis[i] = false;\n\t}\n    //dijkstral\u627e\u5230n\u7684\u6263\u8840\u6700\u5c11\u7684\u6700\u77ed\u8def\n\tchp[1] = 0;\n\tpriority_queue<qnode> que;\n\tque.push(qnode(1, 0));\n\tqnode tmp;\n\twhile (!que.empty()) {\n\t\ttmp = que.top();\n\t\tque.pop();\n\t\tif (vis[tmp.v])continue;\n\t\tvis[tmp.v] = true;\n\t\tfor (auto x : e[tmp.v]) {\n\t\t\tif (!vis[x.v] && chp[x.v] > chp[tmp.v] + x.c) {\n\t\t\t\tchp[x.v] = dist[tmp.v] + x.c;\n\t\t\t\tque.push(qnode(x.v, dist[x.v]));\n\t\t\t}\n\t\t}\n\t}\n\tif (b > chp[n])return true;//\u82e5\u8840\u91cf\u5927\u4e8e\u6700\u5c0f\u6263\u8840\u91cf\uff0c\u5219\u6ee1\u8db3\n\telse return false;\n}\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin >> n >> m >> b;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> f[i];\n\t\tu[i] = f[i];\n\t}\n\tint rs, re, c;\n\twhile (m--) {\n\t\tcin >> rs >> re >> c;\n\t\tlink(rs, re, c);\n\t}\n\tif (!check(inf)) {\n    //\u5982\u679c\u6700\u5927\u7684\u5141\u8bb8\u8d39\u7528\u4e0b\u90fd\u5230\u4e0d\u4e86n\uff0c\u90a3\u53ea\u80fd\u6b7b\u5728\u8def\u4e0a\u4e86\u3002\n\t\tcout << \"AFK\" << endl;\n\t\treturn 0;\n\t}\n    //\u5f00\u59cb\u4e8c\u5206\n\tsort(u + 1, u + n + 1);\n\tint l = 1, r = n,ans;\n\twhile (l <= r) {\n\t\tint mid = (l + r) >> 1;\n\t\tif (check(u[mid])) {\n\t\t\tans = u[mid];\n\t\t\tr = mid - 1;\n\t\t}\n\t\telse l = mid + 1;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n\n```\n",
        "postTime": 1569402049,
        "uid": 161744,
        "name": "Natsume_sosuke",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "\u535a\u5ba2\u98df\u7528\u6548\u679cMax\n[$$\\text{$\\color{red}\\large\\mathfrak{blog}$}$$](https://www.cnblogs.com/IcedMoon/p/11427914.html)\n\n\n\n\n# \u9898\u76ee\u5206\u6790\n## \u9898\u76ee\u63cf\u8ff0\n>\u5728\u827e\u6cfd\u62c9\u65af\uff0c\u6709n\u4e2a\u57ce\u5e02\u3002\u7f16\u53f7\u4e3a1,2,3,...,n\u3002\u57ce\u5e02\u4e4b\u95f4\u6709m\u6761\u53cc\u5411\u7684\u516c\u8def\uff0c\u8fde\u63a5\u7740\u4e24\u4e2a\u57ce\u5e02\uff0c\u4ece\u67d0\u4e2a\u57ce\u5e02\u5230\u53e6\u4e00\u4e2a\u57ce\u5e02\uff0c\u4f1a\u906d\u5230\u8054\u76df\u7684\u653b\u51fb\uff0c\u8fdb\u800c\u635f\u5931\u4e00\u5b9a\u7684\u8840\u91cf\u3002\u6bcf\u6b21\u7ecf\u8fc7\u4e00\u4e2a\u57ce\u5e02\uff0c\u90fd\u4f1a\u88ab\u6536\u53d6\u4e00\u5b9a\u7684\u8fc7\u8def\u8d39\uff08\u5305\u62ec\u8d77\u70b9\u548c\u7ec8\u70b9\uff09\u3002\u8def\u4e0a\u5e76\u6ca1\u6709\u6536\u8d39\u7ad9\u3002\u5047\u8bbe1\u4e3a\u66b4\u98ce\u57ce\uff0cn\u4e3a\u5965\u683c\u745e\u739b\uff0c\u800c\u4ed6\u7684\u8840\u91cf\u6700\u591a\u4e3ab\uff0c\u51fa\u53d1\u65f6\u4ed6\u7684\u8840\u91cf\u662f\u6ee1\u7684\u3002\u6b6a\u5634\u54e6\u4e0d\u5e0c\u671b\u82b1\u5f88\u591a\u94b1\uff0c\u4ed6\u60f3\u77e5\u9053\uff0c\u5728\u53ef\u4ee5\u5230\u8fbe\u5965\u683c\u745e\u739b\u7684\u60c5\u51b5\u4e0b\uff0c\u4ed6\u6240\u7ecf\u8fc7\u7684\u6240\u6709\u57ce\u5e02\u4e2d\u6700\u591a\u7684\u4e00\u6b21\u6536\u53d6\u7684\u8d39\u7528\u7684\u6700\u5c0f\u503c\u662f\u591a\u5c11\u3002\n\n## \u5206\u6790\u8fc7\u7a0b\n\u770b\u5230\u6700\u5927\u503c\u6700\u5c0f\uff0c\u60f3\u5230\u4e8c\u5206\u7b54\u6848\n\n\u8003\u8651\u5230\u7b54\u6848\u5728\u56fa\u5b9a\u96c6\u5408\u8fc7\u8def\u8d39(val)\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u8bc1\u8be5\u96c6\u5408\u5355\u8c03\u6027\u5e76\u5728\u5176\u4e2d\u4e8c\u5206\u5373\u53ef\n\n\u4e8c\u5206\u70b9\u6743\u96c6\u5408\uff0c\u6bcf\u4e00\u6b21\u90fd\u4f1a\u5f97\u5230\u4e00\u4e2a\u70b9\u6743\uff0c\u8fd9\u4e2a\u70b9\u6743\u5c06\u662f\u8def\u5f84\u4e0a\u6240\u6709\u70b9\u70b9\u6743\u7684\u6700\u5927\u503c\n\n\u5728\u6574\u5f20\u56fe\u4e0a\u5bfb\u627e\u8def\u5f84\uff0c\u4f46\u662f\u56e0\u4e3a\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u6700\u5927\u503c\uff0c\u6240\u4ee5\u5728\u5bfb\u627e\u8fc7\u7a0b\u4e2d\u4e0d\u9009\u8d85\u8fc7\u4e8c\u5206\u503c\u5f97\u70b9\n\n\u5bfb\u627e\u8def\u5f84\u4fbf\u662f\u62db\u6700\u77ed\u8def\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u7684\u4e0d\u80fd\u6b7b\u4ea1\u5c31\u662f\u6263\u8840\u5c3d\u91cf\u5c0f\n\n\u8981\u662f\u4e0d\u81f4\u6b7b\uff0c\u90a3\u4e48\u4e8c\u5206\u51fa\u7684\u70b9\u6743\u5c31\u662f\u6709\u6548\u7684\uff0c\u7ee7\u7eed\u5411\u4e0b\u4e8c\u5206\uff0c\u7f29\u5c0f\u70b9\u6743\u8303\u56f4 \n\u4e0d\u7136\u7684\u8bdd\uff0c\u6269\u5927\u70b9\u6743\u8303\u56f4\n\n\n**\u8fd8\u6709\u4e00\u4e2a\u4e0d\u540c\u4e8e\u522b\u4eba\u7684\u4f18\u5316\uff0c\u80fd\u52a0\u5feb\u4e8c\u5206\u901f\u5ea6**\n\n\u6211\u4eec\u521d\u59cb\u70b9\u57281\u53f7\uff0c\u7ed3\u675f\u70b9\u5728n\u53f7\uff0c\u8fd9\u4e24\u4e2a\u70b9\u662f\u5fc5\u987b\u7ecf\u8fc7\u7684\uff0c\u6240\u4ee5\u6700\u5c0f\u7684\u70b9\u6743\u5fc5\u987b\u8981\u6bd4\u8fd9\u4e24\u4e2a\u70b9\u6743\u66f4\u5927\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u4ece\u8fd9\u4e24\u4e2a\u503c\u4e2d\u95f4\u7684\u66f4\u5927\u7684\u90a3\u4e2a\u503c\u7684\u6392\u540d\u4f5c\u4e3a\u4e8c\u5206\u7684\u5de6\u7aef\u70b9\uff0c\u8be6\u89c1\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define re register\n#define ll long long\nusing namespace std;\ninline int read()\n{\n\tint k=1,sum=0;\n\tchar c=getchar();\n\tfor(;c<'0' || c>'9';c=getchar()) if(c=='-') k=-1;\n\tfor(;c>='0' && c<='9';c=getchar()) sum=sum*10+c-'0';\n\treturn sum*k;\n}\nint n,m,b;\nstruct Edge{\n\tint to,nxt,w;\n};\nconst int N=1e4+10,M=5e4+10;\nconst int inf=1000000000+10;\nEdge edge[M<<1];\nint rk=1;\nint head[N],cnt;\nint val[N],tp[N];\nint dis[N];\nbool vis[N];\ninline void Add(int x,int y,int w){\n\tedge[++cnt].to=y;edge[cnt].nxt=head[x];edge[cnt].w=w;head[x]=cnt;\n}\nstruct New{\n\tint u,d;\n\tbool operator<(const New& qwq) const{\n\t\treturn d>qwq.d;\n\t}\n};\npriority_queue<New> Q;\ninline bool Check(int top){\n\tmemset(dis,0x3f3f3f3f,sizeof(dis));memset(vis,0,sizeof(vis));\n\tdis[1]=0;\n\tQ.push((New){1,0});\n\twhile(!Q.empty()){\n\t\tNew fr=Q.top();Q.pop();\n\t\tif(vis[fr.u]) continue;\n\t\tvis[fr.u]=1;\n\t\tint x=fr.u;\n\t\tfor(re int i=head[x];i;i=edge[i].nxt){\n\t\t\tint y=edge[i].to,z=edge[i].w;\n\t\t\tif(val[y]>top) continue;\n\t\t\tif(dis[y]>dis[x]+z)\n\t\t\tdis[y]=dis[x]+z;\n\t\t\tQ.push((New){y,dis[y]});\n\t\t}\n\t}\n\tif(dis[n]<=b) return 1;else return 0;\n}\nint main()\n{\n\t//freopen(\"agrm.in\",\"r\",stdin);\n\tn=read();m=read();b=read();int js;val[1]=read();js=val[1];tp[1]=val[1];\n\tfor(re int i=2;i<=n;++i) {\n\t\tval[i]=read();tp[i]=val[i];\n\t\tif(val[i]<js) ++rk;   //\u8fdb\u884c\u70b9\u6743\u6392\u5e8f\n\t}\n\tfor(re int i=1;i<=m;++i){\n\t\tint u=read(),v=read(),w=read();\n\t\tAdd(u,v,w),Add(v,u,w);\n\t}\n\tsort(tp+1,tp+1+n); // \u4fdd\u8bc1\u5355\u8c03\u6027\uff0c\u5f00\u59cb\u4e8c\u5206\n\tif(!Check(inf)) {\n\t\tputs(\"AFK\");\n\t\treturn 0;\n\t}\n\tint l=rk,r=n,ans;\n\tint mid;\n\twhile(l<=r){\n\t\tmid=(l+r)>>1;\n\t\tbool pd=Check(tp[mid]);\n\t\tif(pd) {\n\t\t\tr=mid-1;ans=tp[mid];\n\t\t}\n\t\telse l=mid+1;\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1567042732,
        "uid": 48270,
        "name": "_YYY_",
        "ccfLevel": 0,
        "title": "\u6d1b\u8c37P1462 \u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u601d\u8def\u5c31\u662f\u4e8c\u5206\u67e5\u627e\u91d1\u5e01\u6570                   \n\u662f\u5426\u8db3\u4ee5\u8ba9\u6700\u77ed\u8def\u4e0a\u635f\u8840\u5c0f\u4e8e\u8840\u91cf\n\u590d\u6742\u5ea6n*logn^2          \n\u5728\u8fd9\u91cc\u53ef\u4ee5\u6709\u51e0\u4e2a\u5c0f\u4f18\u5316 \n\n1.\u4e8c\u5206\u67e5\u627e\u91d1\u5e01\u7684\u65f6\u5019\u53ef\u4ee5\u5148\u6392\u5e8f\u597d\u8d39\u7528\u503c\u4e8c\u5206\u67e5\u627e\u8d39\u7528\u503c \u7b54\u6848\u4e00\u5b9a\u662f\u67d0\u4e00\u4e2a\u57ce\u5e02\u8d39\u7528 \u4fdd\u8bc1\u4e86\u5176\u6b63\u786e\u6027\u7684\u540c\u65f6\u53ef\u4ee5\u52a0\u901f\u67e5\u627e \n\n2.\u56e0\u4e3a\u8fd9\u9053\u9898\u786e\u5b9a\u4e86\u7ec8\u70b9\u4e3an \u6240\u4ee5\u5e76\u4e0d\u9700\u8981\u8dd1\u5b8c\u6574\u5f20\u56fe                         \ndijkstral\u7b97\u6cd5\u7684\u7279\u6027-\u5982\u679c\u8d70\u5230\u4e86\u70b9n\u4e14dis[n]\u8fd8\u662f\u4e0d\u6ee1\u8db3\u8981\u6c42        \n\u90a3\u4e48\u4fbf\u53ef\u4ee5\u63d0\u524d\u9000\u51fa\u4e86    \u56e0\u4e3a\u5b83\u7684dis\u503c\u4e0d\u4f1a\u518d\u66f4\u65b0\u4e86\n\u4f46\u662f\u6ce8\u610f\u9000\u51fa\u524d\u505a\u597d\u5de5\u4f5c                               \n\u5982\u6e05\u7a7a\u5806\u7b49\u7b49\n\n3.register\u548c\u624b\u5199\u5806\u4f1a\u8ba9\u5176dijkstral\u901f\u5ea6\u98de\u5347\uff0c\u4e0d\u7528\u524d\u4e24\u4e2a\u4f18\u5316\u4e5f\u53ef\u4ee5\u7a33\u7a33\u7684AC\n\n4\u90bb\u63a5\u94fe\u8868\u7684\u52a8\u6001\u5206\u914d\u5185\u5b58\u597d\u5199\u4e14\u8282\u7701\u7a7a\u95f4\n\n5 ~~\u6084\u6084\u6253\u5f00O2\u4f18\u5316~~\n\n6~~SPFA\u5728\u968f\u673a\u56fe\u8dd1\u7684\u98de\u5feb~~\n\n\u901f\u5ea6316ms \u662fdijkstral\u91cc\u9762\u8dd1\u7684\u5feb\u7684\u4e86\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct note{\n\tint end;int w;struct note *next;\n};struct note edge[10001];int n,m,s,a,b,c,xie;bool sign[10001];int fi[10001];int fi2[10001];\nlong long dis[10001];\nstruct opp{\n\tint data;int sp;\n};struct opp disd[100001];int end=0;\nvoid pushin(int data,int sp){register int k=++end;disd[k].data=data;disd[k].sp=sp;\n    while(k>0){\n    \tif(disd[k].data<disd[k>>1].data){swap(disd[k],disd[k>>1]);k>>=1;}\n    \telse{break;}\n\t}\n}\nvoid pop(){swap(disd[1],disd[end]);end--;\nfor(register int i=1,j=2;j<=end;i=j,j=i*2){\n\tif(j+1<=end&&disd[j+1].data<disd[j].data){j++;}\n\tif(disd[j].data<disd[i].data){\n\tswap(disd[j],disd[i]);}\n\telse{break;}\n}}\nvoid dj(int x){sign[x]=1;if(x==n&&dis[n]>xie){while(end>0){pop();};return;};\n\tfor(struct note *l=edge[x].next;l!=NULL;l=l->next){\n\tif(l->w+dis[x]<dis[l->end]&&!sign[l->end]){dis[l->end]=dis[x]+l->w;pushin(dis[l->end],l->end);}\t\n\t}\n\twhile(end>0){\n\tif(sign[disd[1].sp]){pop();}\n\telse{dj(disd[1].sp);break;}\n\t}\n}\nvoid solve(int l,int r){if(l==r){cout<<fi2[l]<<endl;return;};\n    int mid=fi2[(l+r)>>1],midx=(l+r)>>1;\n\tfor(register int i=1;i<=n;i++){\n\tdis[i]=2147483647;sign[i]=0;}dis[1]=0;\n\tfor(register int i=1;i<=n;i++){\n\tif(fi[i]>mid){sign[i]=1;}}\n\tdj(1);\n\tif(dis[n]<=xie){solve(l,midx);}\n\telse{solve(midx+1,r);}\n}\ninline int read(){\n   int s=0,passd=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')passd=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9'){s=s*10+ch-'0';ch=getchar();}\n   return s*passd;\n}\nint main(){cin>>n>>m>>xie;int top;\n\tfor(register int i=1;i<=n;i++){\n\tedge[i].next=NULL;dis[i]=2147483647;cin>>fi[i];fi2[i]=fi[i];}dis[1]=0;\nfor(int i=1;i<=m;i++){\na=read();b=read();c=read();struct note *l=(note *)malloc(sizeof(note));\nl->end=b;l->w=c;\nl->next=edge[a].next;\nedge[a].next=l;\nl=(note *)malloc(sizeof(note));\nl->end=a;l->w=c;\nl->next=edge[b].next;\nedge[b].next=l;\n}; \n    for(register int i=1;i<=n;i++){\n\tdis[i]=2147483647;sign[i]=0;}dis[1]=0;dj(1);\n\tif(dis[n]>xie){cout<<\"AFK\"<<endl;return 0;}\n\tsort(fi2+1,fi2+n+1);\n    solve(1,n);\n\treturn 0;\n}\n```",
        "postTime": 1564896410,
        "uid": 33879,
        "name": "\u83dc\u9e1f\u81f3\u5c0a",
        "ccfLevel": 0,
        "title": "\u6700\u77ed\u8def"
    },
    {
        "content": "# P1462 \u9898\u89e3\n\n---\n\n## \u9898\u76ee\u5927\u610f\uff1a\n\u7ed9\u5b9a\u4e00\u4e2a$n$\u4e2a\u70b9\u7684\u65e0\u5411\u56fe\uff0c\u6c42\u5728\u6ee1\u8db3\u4ece$1$\u5230$n$\u7684\u6700\u77ed\u8def\u8fb9\u6743\u548c $\\leq b$ \u7684\u60c5\u51b5\u4e0b\uff0c\u6240\u7ecf\u8fc7\u7684\u70b9\u7684\u6700\u5927\u70b9\u6743\u7684\u6700\u5c0f\u503c\u3002\n\n### \u601d\u8def\uff1a\n\u5e26\u6709 **\u201c\u6700\u5927\u503c\u6700\u5c0f\u201d** \u7684\u201c\u53cc\u6700\u201d\u5b57\u6837\u7684\u6700\u4f18\u5316\u9898\u76ee\u4e00\u822c\u6bd4\u8f83\u96be\u76f4\u63a5\u6c42\u89e3\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u4e0d\u59a8\u7528\u4e8c\u5206\u7684\u601d\u60f3\uff0c\u5c06\u6700\u4f18\u5316\u95ee\u9898\u8f6c\u6362\u4e3a\u5224\u65ad\u5408\u6cd5\u6027\u95ee\u9898\u3002\n\n\u4e8c\u5206\u4ee3\u7801\u6a21\u677f\uff1a\n\n``` cpp\nwhile(l<=r)\n{\n  mid=(l+r)>>1;\n  if(check(mid)) ans=mid,r=mid-1; //\u5982\u679c\u89e3\u5408\u6cd5\uff0c\u8bb0\u5f55\u7b54\u6848\u5e76\u7f29\u5c0f\u5de6\u8fb9\u754c\n  else l=mid+1;//\u5426\u5219\u7f29\u5c0f\u53f3\u8fb9\u754c\n}\ncout<<ans<<endl;\n```\n\n### check()\u51fd\u6570\u7684\u8bbe\u8ba1\uff1a\n\n\u9996\u5148\uff0c\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u627e\u5230\u4e86\u4e00\u4e2a\u89e3 $val$\uff0c\u90a3\u4e48\u6240\u6709\u70b9\u6743 $> val$\u7684\u70b9\u5c31\u4e0d\u80fd\u88ab\u8bbf\u95ee\u4e86(\u56e0\u4e3a\u5982\u679c\u8fd9\u6837\u505a\u5c31\u4e0d\u6ee1\u8db3\u89e3)\u3002\u7136\u540e\u518d\u6c42\u51fa$1$\u5230$n$\u7684\u6700\u77ed\u8def *(SPFAer\u548cDijkstrer\u4eec\u53ef\u4ee5\u4e0d\u8981\u4e89\u4e86\uff0c\u8fd9\u4e2a\u4f18\u5148\u961f\u5217BFS\u5c31\u53ef\u4ee5\u505a\uff0c\u8fd8\u6bd4\u4f60\u4eec\u90fd\u5feb 233)*\uff0c\u4e4b\u540e\u5224\u65ad\u6700\u77ed\u8def\u7684\u6743\u503c\u548c\u662f\u5426 $\\leq b$ \uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\u5219\u8bf4\u660e\u89e3\u4e0d\u5408\u6cd5 ~~\uff08\u4f1a\u88ab\u63cd\u6b7b\uff09~~\u3002\n\n\n### \u4e00\u4e9b\u5c0f\u5751\u70b9\uff1a\n- \u4e8c\u5206\u65f6\u9700\u8981\u5224\u65ad **\u201c\u65e0\u8bba\u5982\u4f55\u4e5f\u65e0\u6cd5\u5230\u8fbe\u7684\u60c5\u51b5\u201d** \uff1b\n- fi\u22641000000000,\u56e0\u6b64\u76f4\u63a5\u4e8c\u5206\u4f1aT\u98de\uff0c\u8981\u5148\u79bb\u6563\u5316\uff1b\n- ci\u22641000000000,\u8bb0\u5f97\u5f00 long long \u4e0d\u7136\u70b8\u98de\uff1b\n\n---\n\n## \u4ee3\u7801\uff1a\n``` cpp\n#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<cstdio>\n#include<cstring>\n#include<ext/pb_ds/priority_queue.hpp>\nusing namespace std;\nconst int maxn=10005;\ntypedef long long ll;\nint n,m,b;\n\ninline ll read()//\u5feb\u8bfb\n{\n  ll s=0,w=1;\n  char c=getchar();\n  while(c<'0' || c>'9'){\n    if(c=='-') w=-1;\n    c=getchar();\n  }\n  while (c>='0' && c<='9') {\n    s=(s<<3)+(s<<1)+(c^48);\n    c=getchar();\n  }\n  return s*w;\n}\n\n/**\n * BFS\u7684\u8bb0\u5f55\u7ed3\u6784\u4f53\n * @param cur \u5f53\u524d\u70b9\n * @param c \u5df2\u7ecf\u6263\u6389\u7684\u8840\u91cf\n */\nstruct note{\n  ll cur,c;\n  note(ll a,ll b):cur(a),c(b) {}\n  note() {}\n};\n//\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u6bd4\u8f83\u8fd0\u7b97\u7b26\nstruct cmp{\n  bool operator () (note a,note b)\n  {\n    return a.c>b.c;\n  }\n};\n//pbds\u7684\u9ed1\u79d1\u6280\u5806\uff0c\u8be6\u7ec6\u63cf\u8ff0\u53ef\u4ee5\u770b\u8fd9\u91cc\uff1ahttps://blog.xehoth.cc/pb-ds-PriorityQueue/\ntypedef __gnu_pbds::priority_queue<note,cmp,__gnu_pbds::pairing_heap_tag> heap;\n\n//vector\u6570\u7ec4\u5b58\u56fe\nstruct edge{\n  ll to;ll w;\n  edge(ll a,ll b):to(a),w(b) {}\n  edge() {}\n};\nvector<edge> e[maxn];\nll v[maxn];//\u70b9\u6743\u6570\u7ec4\n/**\n * \u589e\u52a0\u4e00\u6761x\u5230y,\u6743\u503c\u4e3aw\u7684\u8fb9\n */\ninline void addedge(ll x,ll y,ll w)\n{\n  e[x].push_back(edge(y,w));\n}\n\n//BFS\u90e8\u5206\nbool vis[maxn];\nll bfs(ll val)\n{\n  memset(vis,0,sizeof(vis));\n  heap q;\n  q.push(note(1,0));\n  vis[1]=true;\n  while(!q.empty())\n  {\n    note cu=q.top();\n    q.pop();\n    if(cu.cur==n){\n      return cu.c;\n    }\n    ll& st=cu.cur;\n    ll& co=cu.c;\n    for(int i=0;i<e[st].size();i++)\n    {\n      ll& to=e[st][i].to;\n      if(!vis[to] && v[to]<=val)\n      {\n        q.push(note(to,co+e[st][i].w));\n        vis[to]=true;\n      }\n    }\n  }\n  return 0x3f3f3f3f;//\u5982\u679c\u5230\u4e0d\u4e86\u8fd4\u56de\u65e0\u7a77\u5927\n}\n\nll lsv[maxn];//\u79bb\u6563\u6570\u7ec4\nint main()\n{\n  n=read(),m=read(),b=read();\n  for(int i=1;i<=n;i++) lsv[i-1]=v[i]=read();\n  for(int i=1,x,y,w;i<=m;i++) {\n    x=read(),y=read(),w=read();\n    if(x!=y) addedge(x,y,w),addedge(y,x,w);\n  }\n  //\u79bb\u6563\u5316\n  sort(lsv,lsv+n);\n  int sz=unique(lsv,lsv+n)-lsv;\n  //\u4e8c\u5206\n  int l=0,r=sz,mid,ans=-1;\n  while(l<=r)\n  {\n    mid=(l+r)>>1;\n    if(bfs(lsv[mid])<=b) ans=mid,r=mid-1; \n    else l=mid+1;\n  }\n  if(ans==-1){//\u5982\u679c\u7b54\u6848\u6ca1\u88ab\u66f4\u65b0\u8fc7\u5373\u4e3a\u201c\u4e0d\u53ef\u5230\u8fbe\u201d\n    printf(\"AFK\\n\");\n    return 0;\n  }\n  else printf(\"%lld\\n\",lsv[ans]);//\u8f93\u51fa\u7b54\u6848\n}\n```\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(nlogn * logn) = O(nlog^2 n)$,\u6bd4\u51e0\u4e4e\u6240\u6709\u9898\u89e3\u90fd\u8981\u5feb\n\n\u987a\u4fbf\u5b89\u5229\u4e00\u4e0b\u672c\u4eba\u7684\u535a\u5ba2\uff1a[\u94fe\u63a5](https://directional-foil.blog.luogu.org)",
        "postTime": 1564405842,
        "uid": 155907,
        "name": "1379\u53f7\u76d1\u542c\u5458",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u4e00\u9053\u6700\u77ed\u8def~~\u5927\u5bb6\u4e00\u5b9a\u4e5f\u770b\u7684\u51fa\u6765~~  \n\u6211\u4eec\u7528\u4e8c\u5206\u679a\u4e3e\u6700\u5927\u6536\u8d39~~\u53cd\u6b63\u6570\u636e\u4e5f\u4e0d\u5927~~  \n~~\u8fd9\u4e2a\u6838\u5fc3\u90e8\u5206\u662f\u6211\u5199\u7684\u677f\u5b50\u76f4\u63a5\u6284\u7684~~\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct to\n{\n\tint p;\n\tlong long damage;\n\tbool operator < (const to& rhs)const\n\t{\n\t\treturn damage>rhs.damage;\n\t}\n};\nconst long long INF=9e18;\nint n,m,b;\nlong long dist[10003];\nvector<to> road[10003];\nlong long f[10003];\nchar went[10003];\npriority_queue<to> q;\nbool dijkstra(int ub)\n{\n\tint start,health=b;\n\tfor(int i=0;i<=n;i++)\n\t\tdist[i]=INF;\n\tdist[1]=0;\n\tq.push((to){1,0});\n\tmemset(went,0,sizeof(went));\n\twhile(!q.empty())\n\t{\n\t\tto x=q.top();\n\t\tq.pop();\n\t\tstart=x.p;\n\t\tif(went[start]==1||f[start]>ub)\n\t\t\tcontinue;\n\t\twent[start]=1;\n\t\tfor(int j=0;j<road[start].size();j++)\n\t\t{\n\t\t\tint end=road[start][j].p;\n\t\t\tif(dist[end]>dist[start]+road[start][j].damage&&f[end]<=ub)\n\t\t\t{\n\t\t\t\tdist[end]=dist[start]+road[start][j].damage;\n\t\t\t\tq.push((to){end,dist[end]});\n\t\t\t}\n\t\t}\n\t}\n\treturn dist[n]<b;\n}\nint merge(int l,int r)\n{\n\twhile(l<r)\n\t{\n\t\tint mid=(l+r)/2;\n\t\tif (dijkstra(mid))\n\t\t\tr=mid;\n\t\telse\n\t\t\tl=mid+1;\n\t}\n\treturn r;\n}\nint main()\n{\n\tcin>>n>>m>>b;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>f[i];\n\t\t\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint start,end,attack;\n\t\tcin>>start>>end>>attack;\n\t\troad[start].push_back((to){end,attack});\n\t\troad[end].push_back((to){start,attack});\n\t}\n\tint ans=merge(1,1e9);\n\tif(ans!=1e9)\n\t\tcout<<ans<<endl;\n\telse\n\t\tcout<<\"AFK\"<<endl;\n\treturn 0;\n}\n```\n\n~~\u8eab\u4e3a\u4e00\u4f4d\u5bf9\u9b54\u517d\u6709\u4e00\u70b9\u4e86\u89e3\u7684\u7089\u77f3\u73a9\u5bb6\uff0c\u6211\u80fd\u60f3\u5230\u7684\u7b26\u5408\u8fd9\u4f4d\u672f\u58eb\u5f62\u8c61\u7684\u5c31\u662f\u53e4\u5c14\u4e39~~",
        "postTime": 1563851807,
        "uid": 182525,
        "name": "yangyujia18",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "## ~~\u672c\u9898\u7684\u96be\u70b9\u5728\u4e8e\u7406\u89e3\u9898\u610f~~\n\u627e\u51fa\u6a21\u578b\u540e\u50bb\u50bb\u5957\u7b97\u6cd5\u5c31\u53ef\u4ee5\u4e86\n\n#### \u7a0d\u5fae\u89e3\u91ca\u4e00\u4e0b\n## 1. \u9898\u76ee\u91cc\u6bcf\u6761\u8fb9\u7684\u4f24\u5bb3\u5373\u4e3a\u8fd9\u6761\u8fb9\u7684\u957f\u5ea6\uff0c\u5982\u679c\u6700\u77ed\u8def\u7684\u957f\u5ea6\u8fd8\u662f\u8d85\u8fc7\u8840\u91cf\u5c31\u8bf4\u660e\u600e\u4e48\u8d70\u90fd\u4f1a\u88ab\u6253\u6b7b\uff0c\u5373\u65e0\u89e3\n\n## 2.\u6bcf\u4e2a\u70b9\u7684\u6536\u8d39\u4e3a\u9650\u5236\u6761\u4ef6\u3002\u65e2\u7136\u8981\u6c42\u6211\u4eec\u6c42\u6700\u5927\u6536\u8d39\u7684\u6700\u5c0f\u503c\uff0c\u5f88\u81ea\u7136\u60f3\u5230\u4e8c\u5206\uff08\u4e00\u822c\u7528\u4e8c\u5206\u89e3\u51b3\u6700\u5c0f\u503c\u6700\u5927\u95ee\u9898\uff09\u6536\u8d39\u3002\u56e0\u4e3a\u8def\u7a0b\u4e00\u5b9a\u4f1a\u7ecf\u8fc7\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u6240\u4ee5\u4e8c\u5206\u5de6\u8fb9\u754cl=max\uff08f[1],f[n])\uff0c\u4e8c\u5206\u53f3\u8fb9\u754c\u4e3a\u6240\u6709f\u4e2d\u7684\u6700\u5927\u503c\u3002\n\n##### \u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7528dijkstra\uff08k\uff09\u8868\u793a\u6bcf\u4e2a\u70b9\u7684\u6536\u8d39\u6700\u5927\u4e3ak\uff08\u8d85\u8fc7k\u5c31\u8df3\u8fc7\uff09\u65f6\u80fd\u5426\u6c42\u51fa\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8def\uff0c\u4e14\u8def\u7a0b\u5c0f\u4e8e\u8840\u91cf\u3002\u5e76\u66f4\u65b0l\u6216r\u3002\n\n\u4e0b\u9762\u4e0a\u4ee3\u7801\u3002\u6211\u7528\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\uff0cdijkstra\u5b9e\u884c\u6700\u77ed\u8def\uff0c\u5e76\u5c06\u5b83\u5206\u88c5\u7ed3\u6784\u4f53\u4e2d\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cstdlib>\n#include <queue>\n#include <ctime>\n#define INF 1000000000\n#define maxn 10000+5\n#define maxm 100000+5//\u6570\u7ec4\u8981\u5f00\u8fb9\u6570\u7684\u4e24\u500d\uff0c\u56e0\u4e3a\u6bcf\u6761\u8fb9\u8981\u5b58\u4e24\u6b21\nusing namespace std;\ntypedef long long ll;\n\nstruct Edge\n{\n\tint to,next,cost;\n\tEdge()//\u6784\u9020\u51fd\u6570\n\t{\n\t\tthis->cost=this->to=0;\n\t\tthis->next=-1;\n        //\u5982\u679c\u4ece0\u5f00\u59cb\u5b58\u8fb9\uff0c\u4e00\u5b9a\u8981\u5c06next\u521d\u59cb\u5316\u4e3a-1.\u5426\u5219\u904d\u5386\u51fa\u8fb9\u65f6\u4f1a\u5f15\u8d77\u65e0\u9650\u5faa\u73af\n\t}\n};\n\nstruct heapnode//\u4f18\u5148\u961f\u5217\u7684\u7ed3\u6784\u4f53\n{\n\tint d,u;//d\u4e3a\u6700\u77ed\u8def\u8ddd\u79bb\uff0cu\u4e3a\u8282\u70b9\u7f16\u53f7\n\tbool operator < (const heapnode& b)const//d\u503c\u5c0f\u7684\u4f18\u5148\u7ea7\u5927\n\t{\n\t\treturn d>b.d;\n\t}\n};\nstruct Dijkstra\n{\n\tint n,m,end,s,b,tot;\n\tint d[maxn],head[maxn],f[maxn];;\n\tbool v[maxn];\n\tEdge edges[maxm];\n\t\n\tvoid init(int n,int m,int b)\n\t{\n\t\tthis->tot=0;\n\t\tthis->n=n;\n\t\tthis->m=m;\n\t\tthis->b=b;\n\t\tthis->s=1;\n\t\tthis->end=n;\n\t}\n\t\n\tvoid add(int u,int v,int c)\n\t{\n\t\tedges[++tot].to=v;\n\t\tedges[tot].cost=c;\n\t\tedges[tot].next=head[u];\n\t\thead[u]=tot;\n\t}\n\t\n\tbool dijkstra(int k)//\u8282\u70b9f\u503c\u4e0d\u80fd\u8d85\u8fc7k\n\t{\n\t\tpriority_queue<heapnode> q;\n        //\u6ce8\u610f\uff0c\u7531\u4e8e\u591a\u6b21\u8c03\u7528dijkstra\uff0c\u6240\u4ee5\u4e00\u5b9a\u8981\u8bb0\u5f97\u521d\u59cb\u5316\n\t\tmemset(d,0x3f,sizeof(d));\n\t\tmemset(v,0,sizeof(v));\n\t\td[s]=0;\n\t\tq.push((heapnode){0,s});\n\t\twhile(!q.empty())\n\t\t{\n\t\t\theapnode x=q.top();q.pop();\n\t\t\tint u=x.u;\n\t\t\tif(v[u]) continue;\n\t\t\tv[u]=1;\n\t\t\tfor(int i=head[u];i!=-1;i=edges[i].next)\n\t\t\t{\n\t\t\t\tEdge &e=edges[i];\n                //\u58f0\u660e\u4e00\u4e2ae\u6765\u53d6\u4ee3edges[i].\u5bf9e\u7684\u6bcf\u4e00\u4e2a\u64cd\u4f5c\u5176\u5b9e\u90fd\u5b9e\u5728\u5bf9edges[i]\u8fdb\u884c\u64cd\u4f5c\n                //\u8fd9\u6837\u505a\u7684\u597d\u5904\u5728\u4e8e\u50cf\u51fa\u73b0edges[i][j][k][l][m][n]\u8fd9\u6837\u5f88\u957f\u7684\u53d8\u91cf\u65f6\u53ef\u4ee5\u4f7f\u5f97\u4ee3\u7801\u663e\u5f97\u7b80\u6d01\n\t\t\t\tif(d[e.to]>d[u]+e.cost&&f[e.to]<=k)//\u677e\u5f1b\u64cd\u4f5c\uff0cf>k\u5c31\u8df3\u8fc7\n\t\t\t\t{\n\t\t\t\t\td[e.to]=d[u]+e.cost;\n\t\t\t\t\tq.push((heapnode){d[e.to],e.to});\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(d[end]>b) return false;//\u5982\u679c\u627e\u4e0d\u5230\u6700\u77ed\u8def\u6216\u6700\u77ed\u8def\u5927\u4e8e\u8840\u91cf\uff0c\u5931\u8d25\n\t\treturn true;\n\t}\n}solve;\nint main()\n{\n\tfreopen(\"in.txt\",\"r\",stdin);\n\tios::sync_with_stdio(false);\n\n\tint n,m,b;\n\tcin>>n>>m>>b;\n\tsolve.init(n,m,b);\n\t\n\tint u,v,c; \n\t\n\tfor(int i=1;i<=n;i++)\n\tcin>>solve.f[i];\n\t\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>u>>v>>c;\n\t\tif(u==v) continue;//\u8df3\u8fc7\u81ea\u73af\n\t\tsolve.add(u,v,c);\n\t\tsolve.add(v,u,c);\n\t}\n\t\n    //\u6ce8\u610f\uff0c\u8981\u7279\u5224\u4e00\u4e0bdijkstra\uff08INF\uff09\uff0ck\u503c\u65e0\u7a77\u5927\u5373\u6ca1\u6709\u9650\u5236\uff0c\u8dd1\u4e00\u904d\u6240\u6709\u70b9\u7684\u6700\u77ed\u8def\uff0c\u5982\u679c\u8fd9\u6837\u90fd\u65e0\u89e3\u5c31\u8bf4\u660e\u65e0\u8bba\u5982\u4f55\u90fd\u8d70\u4e0d\u5230\n\tif(!solve.dijkstra(INF))\n\t{\n\t\tcout<<\"AFK\";return 0;\n\t}\n\tint l=max(solve.f[1],solve.f[n]),r=1000000000;//\u61d2\u5f97\u627er\u76f4\u63a5\u4ece\u6700\u5927\u503c\u5f00\u59cb\n\twhile(l<=r)//\u5982\u679c\u5199l<r\u6709\u65f6\u4f1a\u6709\u4e00\u4e2a\u503c\u88ab\u8df3\u8fc7\uff0c\u4f46\u8d85\u6c34\u6570\u636e\u53ea\u6709\u6700\u540e\u4e00\u4e2a\u70b9\u4f1a\u9519\n\t{\n\t\tint m=(l+r)>>1;\n\t\tif(solve.dijkstra(m)) r=m-1;\n\n\t\telse l=m+1;\n        //\u8fd9\u91cc\u6211\u4e00\u5b9a\u8981\u5410\u69fd\u4e00\u4e0b\u6570\u636e\u6709\u591a\u6c34\u3002\u6211\u4e00\u5f00\u59cb\u5199\u6210\u4e86l=r+1\uff0c\u5c45\u7136\u5bf9\u4e867\u4e2a\u70b9\uff1f\uff1f\uff1f\u8fd8\u662f\u5728\u5fd8\u8bb0\u7279\u5224\u7684\u60c5\u51b5\u4e0b\uff08\u9ed1\u4eba\u95ee\u53f7\u8138\uff09\n\t}\n\tcout<<l;\n    return 0;\n}\n```\nNOIP\u5c31\u5feb\u5230\u4e86\uff0c\u795d\u5404\u4f4d\u795e\u7287\u8003\u573a\u5168AK\uff08\u7b11~\uff09",
        "postTime": 1541170303,
        "uid": 80407,
        "name": "\u8001\u5361\u624b\u673a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "####\u6765\u4e00\u53d1pas\u9898\u89e3\uff0c\n\n\u5176\u5b9e\u4e5f\u6ca1\u4ec0\u4e48\u7279\u522b\u7684\uff0cpascal\u7684\u9898\u89e3\u697c\u4e0b\u4e5f\u6709\uff0c\u4f46\u7a81\u53d1\u5947\u60f3\u8bd5\u4e86\u8bd5LLL\u548cSLF\u4f18\u5316\uff0c\u5f97\u5230\u4e86\u610f\u60f3\u4e0d\u5230\u7684\u6548\u679c\n\n![](https://cdn.luogu.com.cn/upload/pic/10257.png)\n\n\u5c31\u662f\u8fd9\u6837\uff0c\u5355\u7528SLF\u76f4\u63a510000ms\u8d85\u65f6 T\u4e86\u516d\u4e2a\u70b9\uff08QAQ\uff09\n\n\u8fd9\u544a\u8bc9\u6211\u4eec\uff1aSLF\u548cLLL\u90fd\u662f\u5f88\u4f18\uff08xuan\uff09\u79c0\uff08xue\uff09\uff0c\u7f51\u4e0a\u6709\u8bf4SLF\u6bd4LLL\u7a33\u7684\uff0c\u4e5f\u6709\u8bf4LLL\u4f18\u5316\u7ed9\u529b\uff0c\u4f46\u4e00\u822c\u60c5\u51b5\uff08\u6570\u636e\u8f83\u5c0f\u88f8SPFA\u4e5f\u53ef\u4ee5\u8fc7\uff09\u65f6\uff0c\u5efa\u8bae\u8fd8\u662f\u6478\u4e00\u628a\u9c7c\u3002\uff08>\\_>\uff09\n\n####\u53e6\u5916\u5b89\u5229\u4e00\u4e0bSLF\u548cLLL\n\nSLF \u8bbe\\_\u5f53\u524d\\_\u961f\u5934\u8282\u70b9\u4e3aU\uff0c\u8981\u63d2\u5165\u7684\u8282\u70b9\u4e3aV\n\n\u82e5dis[v]>dis[u]\u5219\u52a0\u5165\u961f\u5c3e\uff0c\u5426\u5219\u52a0\u5165\u961f\u5934\n\n```cpp\nwhile head<=tail do\n  begin\n    u:=q[head];\n    inc(head);\n    v:=h[u];\n    vis[u]:=false;\n   while v<>0 do\n      begin\n        tmp:=e[v].t;\n        if (dis[tmp]>dis[u]+e[v].w)then\n        begin\n          dis[tmp]:=dis[u]+e[v].w;\n          if not vis[tmp] then\n          begin\n            vis[tmp]:=true;\n            if (head=tail)or(dis[tmp]>dis[q[head]])then\n            begin \n              inc(tail);\n              q[tail]:=tmp;\n            end\n            else begin \n            head:=head-2;\n            q[head+1]:=tmp;\n            end;{\u63d2\u5165\u961f\u5934\u7684\u64cd\u4f5c\uff0c\u56e0\u4e3ahead=1\u5fc5\u5b9a\u4e0d\u53ef\u80fd\u8fdb\u884c\u5982\u4e0a\u60c5\u51b5\u3002\u53ea\u6709head>1\u624d\u6709\u5982\u4e0a\u60c5\u51b5 \u6211\u4eec\u5148\u628ahead-2\uff0c\u56e0\u4e3a\u5f53\u524d\u961f\u5934\u4e3a        head\uff0c\u4e0b\u4e00\u6b21+1\u5c31\u5230\u4e86head-1\u4e86\u7136\u540ej\u653e\u5728head-1\u4e0a}\n          end;\n        end;\n        v:=e[v].next;\n      end;\n  end;\nend;\n```\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3aj\u6bd4i\u66f4\u6709\u53ef\u80fd\u662f\u6700\u77ed\u8def\u7684\u4e00\u4e2a\u70b9\nLLL\uff1a\n\u6211\u4eec\u53ef\u4ee5\u7b97\u51fa\u6240\u6709\u961f\u5217\uff08head~tail)\uff09\u7684\u5143\u7d20\u7684dis\u503c\u7684\u548c\uff0c\u7136\u540e\u6c42\u51fa\u5e73\u5747\u6570\n\n\u5982\u679c\u5f53\u524d\u7684\u961f\u5934i\u7684dis\u503c\u6bd4\u8fd9\u4e2a\u5e73\u5747\u503c\u5927\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u540e\u9762\u6709\u5b58\u5728\u6bd4\u8fd9\u4e2a\u70b9\u66f4\u52a0\u6709\u53ef\u80fd\u4e3a\u6700\u77ed\u8def\u7684\u503c\n\n\u90a3\u4e48\u628a\u961f\u5934\u7684\u6570\u653e\u5230\u961f\u5c3e\n\n\u6bcf\u6b21\u5982\u6b64\uff0c\u77e5\u9053\u6709\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8e\u5e73\u5747\u503c\n\n```cpp\n while head<=tail do\n  begin\n    u:=q[head];\n    inc(head);\n    v:=h[u];\n    vis[u]:=false;\n    dec(tot);\n    dec(sum,dis[u]);\n    while v<>0 do\n      begin\n        tmp:=e[v].t;\n        if (dis[tmp]>dis[u]+e[v].w)then\n        begin\n          dis[tmp]:=dis[u]+e[v].w;\n          if not vis[tmp] then\n          begin\n            vis[tmp]:=true;\n            if (head=tail)or(dis[tmp]*tot<=sum)\n            then\n              begin inc(tail);q[tail]:=tmp;end\n            else begin \n              head:=head-2;\n              q[head+1]:=tmp;\n              end;\n            inc(tot);\n            inc(sum,dis[tot]);\n          end;\n        end;\n        v:=e[v].next;\n      end;\n  end;\n```\n\u6700\u540e\u7ed9\u51faAC\u4ee3\u7801\uff08slf\u548clll\u90fd\u7528\u4e86\uff09\u7528\u90bb\u63a5\u77e9\u9635\u6253\u7684\uff0c\uff08\u60f3\u5230\u8fd9\u91cc\u4e0d\u7981\u7fa1\u6155c++\uff0c\u4e0d\u77e5\u5728pas\u7684\u5751\u91cc\u8fd8\u80fd\u8eba\u591a\u4e45\uff09\n\n\n```cpp\nconst inf=$3f;\ntype arr=record\n     t,next,w:longint;\nend;\nvar  i,n,m,hp,cnt,ans,l,r,mid,u1,v,w:longint;\n     e:array[0..500000] of arr;\n     q,h,dis,u,f:array[-1..100000] of longint;\n     vis:array[0..100000] of boolean;\nprocedure add(u,v,w:longint);\nbegin\n  inc(cnt);\n  e[cnt].t:=v;\n  e[cnt].next:=h[u];\n  e[cnt].w:=w;\n  h[u]:=cnt;\nend;\nfunction spfa(top:longint):boolean;\nvar head,tail,tmp,u,tot,sum,v:longint;\nbegin\n  fillchar(dis,sizeof(dis),$3f);\n  fillchar(vis,sizeof(vis),false);\n  fillchar(q,sizeof(q),0);\n  head:=1;tail:=1;    tot:=1;\n  q[head]:=1;vis[1]:=true;dis[1]:=0;\n  while head<=tail do\n  begin\n    u:=q[head];\n    inc(head);\n    v:=h[u];\n    vis[u]:=false;\n    dec(tot);\n    dec(sum,dis[u]);\n    while v<>0 do\n      begin\n        tmp:=e[v].t;\n        if (dis[tmp]>dis[u]+e[v].w)and(f[tmp]<=top)then\n        begin\n          dis[tmp]:=dis[u]+e[v].w;\n          if not vis[tmp] then\n          begin\n            vis[tmp]:=true;\n            if (head=tail)or(dis[tmp]>dis[q[head]])or(dis[tmp]*tot<=sum)\n            then\n              begin inc(tail);q[tail]:=tmp;end\n            else begin head:=head-2;q[head+1]:=tmp;end;\n            inc(tot);inc(sum,dis[tot]);\n          end;\n        end;\n        v:=e[v].next;\n      end;\n  end;\n  if dis[n]<=hp then exit(true) else exit(false);\nend;\nprocedure sort(l,r:longint);\nvar i,j,t,m:longint;\nbegin\n  i:=l;j:=r;m:=u[(i+j)div 2];\n  repeat\n    while u[i]<m do inc(i);\n    while u[j]>m do dec(j);\n    if i<=j then\n    begin\n      t:=u[i];u[i]:=u[j];u[j]:=t;\n      inC(i);dec(J);\n    end;\n  until I>j;\n  if l<j then sort(l,j);\n  if i<r then sort(i,r);\nend;\nbegin\n  readln(n,m,hp);\n  for i:=1 to n do READln(f[i]); u:=f;\n  //for i:=1 to n do writeln(u[i]);\n  for i:=1 to m do\n    begin\n      readln(u1,v,w);\n      add(u1,v,w);\n      add(v,u1,w);\n    end;\n  sort(1,n);\n  if not spfa(2000000005)  then begin writeln('AFK');exit;end;\n  l:=1;r:=n;\n  while l<=r do\n  begin\n    mid:=(l+r) div 2;\n    if spfa(u[mid]) then begin ans:=u[mid]; r:=mid-1 end\n      else l:=mid+1;\n  end;\n  writeln(ans);\nend.\n\n```",
        "postTime": 1509706136,
        "uid": 19485,
        "name": "scarborough_fair",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "//\u6d1b\u8c37p1462 \u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def  https://www.luogu.org/problemnew/show/P1462\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n//\u601d\u8def\uff1a\n//\u6784\u56fe\uff08\u524d\u5411\u661f\uff0c\u67d0\u4e9b\u70b9\u53ef\u80fd\u65e0\u8fb9\uff09\n//\u5bf9\u57ce\u5e02\u6309\u8d39\u7528\u4e3a\u5173\u952e\u5b57\u6392\u5e8f\uff08Fee[1]\u7f16\u53f7 Fee[2]\u8d39\u7528\uff09\n//\u5220\u9664\u8d77\u70b9\u7ec8\u70b9\u76f8\u540c\u7684\u8f83\u957f\u8fb9\n//\u5c1d\u8bd5\u4ece1\u8d70\u5230n\uff0c\u65e0\u6cd5\u62b5\u8fbe\u5219\u7ed3\u675f\n//\u4e8c\u5206\u7b54\u6848\u5e8f\u53f7\uff0c\u5c1d\u8bd5\u53ef\u5426\u62b5\u8fbe\uff08\u6700\u77ed\u8def\u6709\u66f4\u6539\uff09\nprogram xx;\n  const\n    MaxN=10005;\n    MaxM=50005;\n  var\n    n,m,b,l,r:longint;\n    u,v,w:array [1..2*MaxM] of longint;   //\u8fb9\u7684\u8d77\u70b9\u3001\u7ec8\u70b9\u3001\u6743\u503c\n    Fee:array [1..3,1..MaxN] of longint;  //Fee[3] \u4e3a\u9898\u76ee\u6570\u636e\u7684\u590d\u5236\u503c\n    f,d:array [1..MaxN] of longint;           //f \u524d\u5411\u661f\u7684\u8fb9\u533a\u95f4\u6807\u8bb0  d SPFA\u4e2d\u7684dist\u503c\n    Edge_Delete:array [1..2*MaxM] of boolean; //\u6807\u8bb0\u662f\u5426\u4e3a\u8f83\u957f\u7684\u91cd\u8fb9\n  function max(a,b:longint):longint;\n    begin if a>b then exit(a) else exit(b); end;\n  procedure Swap(var a,b:longint);\n    var t:longint;\n    begin t:=a;a:=b;b:=t; end;\n  procedure SortEdge(l,r:longint);\n    var i,j,k,m,tmp:longint;\n    begin\n      i:=l;j:=r;m:=u[(i+j) div 2];tmp:=v[(i+j) div 2];\n      repeat\n        while (u[i]<m) or ((u[i]=m) and (v[i]<tmp)) do inc(i);\n        while (u[j]>m) or ((u[j]=m) and (v[j]>tmp)) do dec(j);\n        if i<=j then\n          begin\n            swap(u[i],u[j]);\n            swap(v[i],v[j]);\n            swap(w[i],w[j]);\n            inc(i);\n            dec(j);\n          end;\n      until i>j;\n      if i<r then SortEdge(i,r);\n      if l<j then SortEdge(l,j);\n    end;\n  procedure SortCity(l,r:longint);\n    var i,j,k,m,tmp:longint;\n    begin\n      i:=l;j:=r;m:=Fee[2,(i+j) div 2];tmp:=Fee[1,(i+j) div 2];\n      repeat\n        while (Fee[2,i]<m) or ((Fee[2,i]=m) and (Fee[1,i]<tmp)) do inc(i);\n        while (Fee[2,j]>m) or ((Fee[2,j]=m) and (Fee[1,j]>tmp)) do dec(j);\n        if i<=j then\n          begin\n            swap(Fee[1,i],Fee[1,j]);\n            swap(Fee[2,i],Fee[2,j]);\n            inc(i);\n            dec(j);\n          end;\n      until i>j;\n      if i<r then SortCity(i,r);\n      if l<j then SortCity(l,j);\n    end;\n  procedure Mark;\n    var i,Pointer:longint;\n    begin\n      f[1]:=1;Pointer:=1;\n      for i:=1 to 2*m-1 do\n       if (u[i]<>u[i+1]) and (u[i+1]<>0) then\n        f[u[i+1]]:=i+1;\n    end;\n  procedure DeleteLongerEdge;\n    var i,j,k,tmp,val:longint;\n    begin\n      fillchar(Edge_Delete,sizeof(Edge_Delete),false);\n      for i:=1 to 2*m do\n       if (u[i]=u[i+1]) and (v[i]=v[i+1]) then\n         begin\n           tmp:=i;val:=w[i];\n           j:=i+1;\n           while (u[j+1]=u[i]) and (v[j+1]=v[i]) do inc(j);\n           for k:=i to j do\n            if w[k]<val then\n             begin\n               tmp:=k;\n               val:=w[k];\n             end;\n           for k:=i to j do\n            if k<>tmp then Edge_Delete[k]:=true;\n         end;\n   end;\n  procedure SPFA(MaxFee:longint);\n    var\n      h:array [1..5*MaxN] of longint;\n      visit:array [1..MaxN] of boolean;\n      s,t,i:longint;\n    begin\n      fillchar(h,sizeof(h),0);\n      fillchar(visit,sizeof(visit),false);\n      fillchar(d,sizeof(d),127);\n      s:=1;t:=1;h[1]:=1;visit[1]:=true;d[1]:=0;\n      while s<=t do\n        begin\n          for i:=f[h[s]] to f[h[s]+1]-1 do\n           if (not Edge_Delete[i]) and (Fee[3,v[i]]<=MaxFee) then\n            if (d[h[s]]+w[i]<d[v[i]]) then\n              begin\n                d[v[i]]:=d[h[s]]+w[i];\n                if not visit[v[i]] then\n                  begin\n                    visit[v[i]]:=true;\n                    inc(t);\n                    h[t]:=v[i];\n                  end;\n              end;\n          visit[h[s]]:=false;\n          inc(s);\n        end;\n    end;\n  function FirstEdgeNum(u:longint):longint;\n    begin exit(f[u]); end;\n  function LastEdgeNum(u:longint):longint;\n    begin if f[u+1]=0 then exit(2*m) else exit(f[u+1]-1); end;\n  function Check(MaxFee:longint):boolean;\n    var i:longint;\n    begin\n      SPFA(MaxFee);\n      if d[n]<b then exit(true) else exit(false);\n    end;\n  procedure Init;\n    var i:longint;\n    begin\n      read(n,m,b);\n      r:=0;\n      for i:=1 to n do\n        begin\n          Fee[1,i]:=i;\n          read(Fee[2,i]);\n          r:=max(r,Fee[2,i]);\n          Fee[3,i]:=Fee[2,i];\n        end;\n      SortCity(1,n);\n      for i:=1 to m do begin read(u[i],v[i],w[i]); end;\n      for i:=1 to m do begin u[i+m]:=v[i];v[i+m]:=u[i];w[i+m]:=w[i]; end;\n      SortEdge(1,2*m);\n      DeleteLongerEdge;\n      Mark;\n    end;\n  procedure Binary;\n    var mid:longint;\n    begin\n      if not check(maxlongint) then\n       begin writeln('AFK');halt; end;\n      l:=1;r:=n;\n      while l<>r do\n        begin\n          mid:=(l+r) div 2;\n          if check(Fee[2,mid]) then r:=mid else l:=mid+1;\n        end;\n      writeln(Fee[2,l]);\n    end;\n  begin\n    Init;\n    Binary;\n  end.\n\n```",
        "postTime": 1509248794,
        "uid": 30790,
        "name": "zzszzs",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "\u9898\u76ee\u4e2d\u7684\u8868\u8ff0\u5f88\u660e\u663e\u662f\u4e00\u9053\u4e8c\u5206\u7b54\u6848+\u6700\u77ed\u8def\u7684\u9898\u76ee\uff0c\u4e8c\u5206\u6536\u53d6\u7684\u8d39\u7528x\u5224\u65ad\u80fd\u5426\u5230\u8fbe\u5965\u683c\u745e\u739b\u3002\u68c0\u9a8c\u51fd\u6570\u7528SPFA\u8dd1\u6700\u77ed\u8def\uff0c\u6ce8\u610f\uff0c\u8d39\u7528\u9ad8\u4e8ex\u7684\u70b9\u4e0d\u80fd\u4f7f\u7528\u3002\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\n#include <queue>\nusing namespace std;\nconst int MAXN=10005,MAXM=50005,INF=0x7fffffff/2;\nint read(){\n    int rv=0,fh=1;\n    char c=getchar();\n    while(c<'0'||c>'9'){\n        if(c=='-') fh=-1;\n        c=getchar();\n    }\n    while(c>='0'&&c<='9'){\n        rv=(rv<<1)+(rv<<3)+c-'0';\n        c=getchar();\n    }\n    return fh*rv;\n}\nint n,m,b,fee[MAXN],nume,head[MAXN];\nstruct egde{\n    int to,nxt,kil;\n}e[MAXM*2];\nvoid adde(int from,int to,int kil){\n    e[++nume].to=to;\n    e[nume].nxt=head[from];\n    e[nume].kil=kil;\n    head[from]=nume;\n}\nbool chk(int x){\n    int dis[MAXN];\n    bool f[MAXN]={0};\n    memset(f,0,sizeof(f));\n    for(int i=1;i<=n;i++){\n        dis[i]=INF;\n    }\n    dis[1]=0;\n    f[1]=1;\n    queue <int>spfa;\n    spfa.push(1);\n    while(!spfa.empty()){\n        int u=spfa.front();\n        spfa.pop();\n        f[u]=0;\n        for(int i=head[u];i;i=e[i].nxt){\n            int v=e[i].to;\n            if(fee[v]<=x&&dis[v]>dis[u]+e[i].kil){\n                dis[v]=dis[u]+e[i].kil;\n                if(!f[v]){\n                    spfa.push(v);\n                    f[v]=1;\n                }\n            }\n        }\n    }\n    if(dis[n]<=b) return 1;\n    else return 0;\n}\nint main(){\n    freopen(\"in.txt\",\"r\",stdin);\n    n=read();m=read();b=read();\n    int l=0,r=0,mid=0;\n    for(int i=1;i<=n;i++){\n        fee[i]=read();\n        r=max(r,fee[i]);\n    }\n    l=max(fee[1],fee[n]);\n    for(int i=1;i<=m;i++){\n        int u=read(),v=read(),kil=read();\n        adde(u,v,kil);\n        adde(v,u,kil);\n    }\n    if(!chk(r)){\n        cout<<\"AFK\"<<endl;\n        return 0;\n    }    \n    while(l<=r){\n        mid=(l+r)>>1;\n        if(chk(mid)){\n            r=mid-1;\n        }else l=mid+1;\n    }\n    cout<<l;\n    fclose(stdin);\n    return 0;\n}\n\n```",
        "postTime": 1509004723,
        "uid": 45753,
        "name": "Mr_Wolfram",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "\u4e8c\u5206\u7b54\u6848+spfa\n\n\n\u9996\u5148\uff0c\u6c42\u6700\u5927\u8d39\u7528\u7684\u6700\u5c0f\u503c\uff0c\u90a3\u4e48\u4e8c\u5206\u8fd9\u4e2a\u6700\u5927\u8d39\u7528x\uff08\u7531\u4e8e\u8fd9\u4e2a\u6700\u5927\u8d39\u7528\u4e00\u5b9a\u662f\u67d0\u4e00\u4e2a\u70b9\u7684\u7684\u6743\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u70b9\u6743\u6392\u5e8f\u4ee5\u540e\u5bf9\u6570\u7ec4\u4e8c\u5206\uff0c\u8fd9\u6837\u4f1a\u6bd4\u76f4\u63a5\u5bf9\u6570\u4e8c\u5206\u5feb\u4e00\u4e9b\uff09\u3002\u68c0\u9a8c\u7684\u65f6\u5019\u9700\u8981spfa\u6c42\u6700\u77ed\u8def\uff0c\u7531\u4e8e\u5df2\u77e5\u7b54\u6848\u4e3ax\uff0c\u6240\u4ee5spfa\u65f6\u70b9\u6743\u8d85\u8fc7x\u7684\u90fd\u4e0d\u80fd\u52a0\u5230\u961f\u5217\u91cc\u53bb\u3002\u5176\u4f59\u7684\u5c31\u662f\u88f8\u5730\u6700\u77ed\u8def\uff0c\u6c42\u51fa\u8ddd\u79bb\u5982\u679c\u6bd4\u8840\u91cf\u5c0f\u5c31\u53ef\u4ee5\uff0c\u5426\u5219\u4e0d\u53ef\u4ee5\u3002\n\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cctype>\n#include<queue>\nusing namespace std;\n\nconst int N = 10010, M = 50010;\nconst int INF = 1e9;\nint n, m, blood, cnt;\nint val[N], cost[N], head[N], dis[N];\nbool vis[N];\n\nstruct Edge{\n    int to, nex, v;\n}e[2*M];\n\ninline int read()  //\u8bfb\u5165\u4f18\u5316\n{\n    char ch = getchar(); int x = 0;\n    while (!isdigit(ch)) ch = getchar();\n    while (isdigit(ch)){ x = x * 10 + ch - '0'; ch = getchar(); }\n    return x;\n}\n\ninline void add(int x, int y, int v)  //\u5efa\u8fb9\n{\n    e[++ cnt].to = y; e[cnt].nex = head[x]; e[cnt].v = v; head[x] = cnt;\n}\n\ninline bool check(int x)  //spfa\u95ea\u4eae\u767b\u573a\uff01\n{\n    queue<int> q;\n    q.push(1);\n    for (int i = 1; i <= n; i ++){ dis[i] = INF; vis[i] = 0; }  //\u6ce8\u610f\u5404\u79cd\u521d\u59cb\u5316\u522b\u5fd8\u5199\n    if (cost[1] > x) return false;\n    dis[1] = 0; vis[1] = 1;\n    while (!q.empty()){\n        int u = q.front(); q.pop(); vis[u] = 0;\n        for (int i = head[u]; i; i = e[i].nex){\n            int v = e[i].to;\n            if (cost[v] > x) continue;  //\u8fd9\u91cc\uff0c\u7531\u4e8e\u5df2\u77e5\u7b54\u6848\u4e3ax\uff0c\u6240\u4ee5\u70b9\u6743\u8d85\u8fc7x\u7684\u90fd\u4e0d\u80fd\u52a0\u5230\u961f\u5217\u91cc\n            if (dis[v] > dis[u] + e[i].v){\n                dis[v] = dis[u] + e[i].v;\n                if (vis[v]) continue;\n                vis[v] = 1;\n                q.push(v);\n                if (dis[q.front()] > dis[q.back()]) swap(q.front(), q.back());  //spfa\u7684\u5c0f\u4f18\u5316\uff0c\u81ea\u884c\u7406\u89e3~\n            }\n        }\n    }\n    return dis[n] < blood;\n}\n\nint main()\n{\n    n = read(); m = read(); blood = read();\n    for (int i = 1; i <= n; i ++) val[i] = cost[i] = read();\n    for (int i = 1; i <= m; i ++){\n        int x, y, z;\n        x = read(); y = read(); z = read();\n        add(x, y, z); add(y, x, z);\n    }\n    sort(val+1, val+1+n);  //\u5bf9\u70b9\u6743\u6392\u5e8f\u5728\u6570\u7ec4\u4e0a\u4e8c\u5206\uff0c\u590d\u6742\u5ea6logn,\u4e0d\u7136\u76f4\u63a5\u5bf9\u6570\u4e8c\u5206\u590d\u6742\u5ea6\u6709log1e9\n    int l = 1, r = n, mid, ans = -1;\n    while (l <= r){\n        mid = (l+r)/2;\n        if (check(val[mid])) ans = val[mid], r = mid-1;\n        else l = mid+1;\n    }\n    if (ans == -1) puts(\"AFK\");  //\u65e0\u6cd5\u62b5\u8fbe/(\u3112o\u3112)/~~\n    else printf(\"%d\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1504864861,
        "uid": 19722,
        "name": "fy0123",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "\u518d\u88ab\u9898\u9762\u519b\u641e\u61f5\u4e00\u9635\u5b50\u540e\u53d1\u73b0\u8fd9\u8c8c\u4f3c\u662f\u4e00\u4e2a\u6c42\u6700\u5927\u503c\u6700\u5c0f\u7684\u95ee\u9898\uff08\u8fd8\u771f\u662f\uff09\u3002\n\n\u54e6\uff0c\u627e\u4e0a\u754c\u561b\uff0c\u4f7f\u8fd9\u4e2a\u4e0a\u754c\u5728\u80fd\u8dd1\u5230n\u70b9\u7684\u60c5\u51b5\u4e0b\u5c3d\u53ef\u80fd\u7684\u5c0f\uff0c\u5f53\u7136\u4e0a\u754c\u5c31\u662ff [i] \u5566\u3002\u53ef\u4ee5\u52a0\u4e00\u4e2amon\u6570\u7ec4\uff0c\u6392\u904d\u5e8f\uff0c\u4e8c\u5206\u6bd4\u8f83\u65b9\u4fbf\u3002\n\n\u4e8c\u5206\u7b54\u6848\u5957\u6a21\u677f\uff0c\u628ajudge\u6362\u6210spfa\u7248\uff0c\u5177\u4f53\u770b\u4ee3\u7801\uff0c\u6846\u67b6\u662f\u4e8c\u5206\u7b54\u6848\u7684\u67b6\u5b50\uff0c\u4e3b\u4f53\u662fspfa\u3002\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cstdio>\n#include<queue>\n#include<cmath>\nusing namespace std;\nqueue <int> que;\nstruct Edge{\n    int next;\n    int to;\n    int key;\n}edge[100005];\nint cnt=0,head[50001],n,m,b,f[50001],mon[50001],r,l,mid,ans;\nlong long dis[50001];\nbool vis[50001];\nint read()\n{\n    int r=0,k=1;\n    char c=getchar();\n    for(;c<'0'||c>'9';c=getchar())if(c=='-')k=-1;\n    for(;c>='0'&&c<='9';c=getchar())r=r*10+c-'0';\n    return r*k;\n}\nvoid add(int x,int y,int z)\n{\n    ++cnt;\n    edge[cnt].next=head[x];\n    head[x]=cnt;\n    edge[cnt].to=y;\n    edge[cnt].key=z;\n}\nbool spfa(int sj)\n{\n    memset(dis,0x7f,sizeof(dis));\n    memset(vis,0,sizeof(vis));\n    dis[1]=0;\n    vis[1]=1;\n    que.push(1);\n    while(!que.empty())\n    {\n        int x=que.front();\n        que.pop();\n        vis[x]=0;\n        for(int i=head[x];i;i=edge[i].next)\n        {\n            int will=edge[i].to;\n            if(f[will]>sj) continue;\n            if(dis[x]+edge[i].key<dis[will])\n            {\n                dis[will]=dis[x]+edge[i].key;\n                if(!vis[will])\n                {\n                    vis[will]=1;\n                    que.push(will);\n                }\n            }\n        }\n    }\n    if(dis[n]>=b||dis[n]==dis[0]) return 0;\n    else return 1;\n}\nint main()\n{\n    n=read();\n    m=read();\n    b=read();\n    for(int i=1;i<=n;i++) mon[i]=f[i]=read();\n    sort(mon+1,mon+1+n);\n    for(int i=1;i<=m;i++)\n    {\n        int x,y,z;\n        x=read();\n        y=read();\n        z=read();\n        add(x,y,z);\n        add(y,x,z);\n    }\n    l=1,r=n;\n    if(!spfa(1000000001))\n    {\n        cout<<\"AFK\"<<endl;\n        return 0;\n    }\n    while(l<=r)\n    {\n        mid=(l+r)>>1;//\u4e8c\u5206\u91d1\u94b1 \n        if(spfa(mon[mid]))//\u770b\u770b\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u8840\u91cf\u662f\u5426\u5141\u8bb8 \n        {\n            r=mid-1;\n            ans=mon[mid];\n        }\n        else l=mid+1; \n    }\n    cout<<ans<<endl;\n    return 0;\n}\n\n```",
        "postTime": 1502680945,
        "uid": 22984,
        "name": "Tchaikovsky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u5176\u5b9e\u53ef\u4ee5\u4e0d\u7528\u4e8c\u5206\u3002\u3002\u3002\n\n\u9996\u5148\u7528\u4e00\u4e2aSPFA\u6c42\u51fa\u90a3\u4e9b\u57ce\u5e02\u4e0d\u80fd\u5230\u8fbe\uff08\u5373\u4e3a\u6700\u5c11\u51cf\u8840\u91cf\u5927\u4e8e\u603b\u8840\u91cf\u7684\u57ce\u5e02\uff09\uff1b\n\n\u7136\u540e\u7528\u4e00\u4e2aSPFA\u6c42\u5f97\u6700\u5c0f\u82b1\u8d39\uff1b\n\n\u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include<cstdio>\n#include<cstring>\nconst int maxn=1e5+10;\nconst int maxm=1e6+10;\nint n,m,hp;\nint a,b,c;\nint h[maxn],hs=1;\nint e_s[maxm],e_n[maxm],e_f[maxm];\ninline int max_(int x,int y){return x>y?x:y;}\nint q[maxm],head,tail;\nint hit[maxn];\nbool v[maxn];\nvoid SPFA1(int s){\n    memset(hit,0x7f,sizeof(hit));\n    hit[s]=0,q[head++]=s;\n    while(head>tail){\n        a=q[tail++];\n        for(int i=h[a];i;i=e_n[i])\n        if(0ll+hit[a]+e_f[i]<hit[e_s[i]]){\n            hit[e_s[i]]=hit[a]+e_f[i];\n            q[head++]=e_s[i];\n        }\n    }\n    for(int i=1;i<=n;i++) if(hit[i]<=hp) v[i]=1;\n}\nint f[maxn],fee[maxn];\nvoid SPFA2(int s){\n    memset(fee,0x7f,sizeof(fee));\n    fee[s]=f[s];head=tail=0,q[head++]=s;\n    while(head>tail){\n        a=q[tail++];\n        for(int i=h[a];i;i=e_n[i])\n        if(max_(fee[a],f[e_s[i]])<fee[e_s[i]]){\n            fee[e_s[i]]=max_(fee[a],f[e_s[i]]);\n            q[head++]=e_s[i];\n        }\n    }\n}\nint main(){\n    scanf(\"%d%d%d\",&n,&m,&hp);\n    for(int i=1;i<=n;i++) scanf(\"%d\",&f[i]);\n    for(int i=1;i<=m;i++){\n        scanf(\"%d%d%d\",&a,&b,&c);\n        ++hs,e_s[hs]=b,e_n[hs]=h[a],e_f[hs]=c,h[a]=hs;\n        ++hs,e_s[hs]=a,e_n[hs]=h[b],e_f[hs]=c,h[b]=hs;\n    }\n    SPFA1(1);\n    SPFA2(1);\n    if(v[n]) printf(\"%d\\n\",fee[n]);\n    else puts(\"AFK\");\n    return 0;\n}\n```\n\u6211\u7684\u4ee3\u7801\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u53ea\u5f97\u4e8690\u5206\uff0c\u53c8\u4e0b\u4e0d\u4e86\u6570\u636e\u3002\u3002\u3002\u90c1\u95f7ing\n\uff08\u535a\u5ba2\u4e2d\u53ef\u80fd\u4f1a\u8865\u5145AC\u4ee3\u7801\uff09\n\nblog:http://www.cnblogs.com/J-william/p/6850210.html\n",
        "postTime": 1494677639,
        "uid": 21020,
        "name": "Long\u00b7J\u00b7William",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "\u601d\u8def\u697c\u4e0b\u8bf8\u4f4d\u5927\u5927\u5df2\u7ecf\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86\uff0cSPFA+\u4e8c\u5206\uff08\u867d\u7136\u6211\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u7528Dij\u4f1a\u5168T\uff0c\u6709\u77e5\u9053\u7684\u4eba\u79c1\u4fe1\u6211\uff09\n\n\u4f46\u6211\u770b\u5230\u697c\u4e0b\u90fd\u5728\u7528\u6307\u9488\uff0c\u89c2\u8d4f\u6027\u6781\u4f4e\u6240\u4ee5\u6211\u7528\u4e86vector\u65b9\u4fbf\u7406\u89e3\n\n            \n```cpp\n#include<cstdio>\n#include<cstring>\n#include<vector>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nstruct P\n{\n    int pos;\n    long long v;\n};\nint n,m,b,c[10010],e[10010],ans=0;\nvector<P> map[10010];\nlong long dis[10010];//\u6ce8\u610f\u4e00\u5b9a\u8981longlong \u4e0d\u6b62\u6211\u4e00\u4e2a\u4eba\u6b7b\u5728\u8fd9\u91cc\u4e86\uff0c\u770b\u770b\u6211\u7684\u63d0\u4ea4\u8bb0\u5f55\u5c31\u77e5\u9053\u6709\u591a\u60e8\u4e86\nbool used[10010],type[10010];\nqueue<int> que;\n/*bool search(int mid)//Dij\n{\n    int i,j,p;\n    memset(dis,127,sizeof(dis));memset(used,0,sizeof(used));\n    dis[1]=0;\n    for(i=1;i<=n;i++) if(c[i]>mid) used[i]=1;\n    for(i=1;i<=n;i++)\n    {\n        p=0;\n        for(j=1;j<=n;j++) if(!used[j]) p=dis[p]<dis[j]?p:j;\n        used[p]=1;\n        int l=map[p].size();\n        for(j=0;j<l;j++) if(!used[map[p][j].pos]) dis[map[p][j].pos]=min(dis[map[p][j].pos],dis[p]+map[p][j].v);\n    }\n    if(dis[n]>=b) return false;\n    ans=mid;\n    return true;\n}*/\nbool search(int mid)//SPFA\n{\n    int i;\n    memset(dis,127,sizeof(dis)),memset(used,0,sizeof(used)),memset(type,0,sizeof(type));\n    for(i=1;i<=n;i++) if(c[i]>mid) type[i]=1;\n    dis[1]=0; que.push(1); used[1]=1;\n    while(!que.empty())\n    {\n        int p=que.front(),l=map[p].size();que.pop();\n        for(i=0;i<l;i++)\n        {\n            if((!type[map[p][i].pos])&&dis[map[p][i].pos]>dis[p]+map[p][i].v)\n            {\n                dis[map[p][i].pos]=dis[p]+map[p][i].v;\n                if(!used[map[p][i].pos])\n                {\n                    que.push(map[p][i].pos);\n                    used[map[p][i].pos]=1;\n                }\n            }\n        }\n        used[p]=0;\n    }\n    //printf(\"%d %d\\n\",mid,dis[n]);\n    if(dis[n]>b) return false;\n    ans=mid; return true;\n}\nint main()\n{\n    int i,j,x,y,v;\n    scanf(\"%d %d %d\",&n,&m,&b);\n    for(i=1;i<=n;i++) {scanf(\"%d\",&c[i]); e[i]=c[i];}\n    for(i=1;i<=m;i++) \n    {\n        scanf(\"%d %d %d\",&x,&y,&v); \n        P tmp;\n        tmp.pos=y,tmp.v=v,map[x].push_back(tmp);\n        tmp.pos=x,tmp.v=v,map[y].push_back(tmp);\n    }\n    sort(e+1,e+n+1);\n    i=1;\n    while(e[i]<c[1]) i++;\n    int l=i,r=n;\n    while(l<=r)\n    {\n        int mid=(l+r)/2;\n        if(search(e[mid])) r=mid-1;\n        else            l=mid+1;\n    }\n    if(ans) printf(\"%d\",ans);\n    else    printf(\"AFK\");\n    return 0;\n}\n```",
        "postTime": 1493881549,
        "uid": 19390,
        "name": "functionendless",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "\u5de9\u56fa\u6700\u77ed\u8def\u53ef\u4ee5\u4e00\u5237\uff1b\n\n\u601d\u8def\uff1a\u6700\u77ed\u8def+\u4e8c\u5206\uff1b\n\n\u5c06\u82b1\u8d39\u4e8c\u5206\uff0c\u6c42\u5230\u8fbe\u76ee\u7684\u5730\u6700\u5c0f\u6263\u8840\u91cf\uff0c\u5982\u679c\u5927\u4e8e\u603b\u8840\u91cf\u5c31\u4e0d\u80fd\u8d70\uff0c\u53cd\u4e4b\u5219\u884c\uff0c\u66f4\u65b0ans\uff1b\n\n\u5982\u679c\u5230\u6700\u540e\u90fd\u6ca1\u66f4\u65b0\u4e00\u6b21ans\uff0c\u5c31\u8f93\u51faAFK\uff0c\u5176\u4f59\u6ca1\u5565\u597d\u8bb2\u7684\uff1b\n\n\u4e0d\u4f1a\u4e8c\u5206\u7684\u8bdd\u53ef\u4ee5\u770bnoip2015\u7b2c\u56db\u9898\uff1b\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\nconst int N = 10000 + 5;\nint head[N],tot,z[N],n,m,b,ans,d[N];\nstruct node\n{\n    int next,val,to;\n}edge[10*N];\nvoid add(int x,int y,int c)\n{\n    edge[tot].to=y;\n    edge[tot].next=head[x];\n    edge[tot].val=c;\n    head[x]=tot++;\n}\nbool SPFA(int l)\n{\n    if(l<z[1])return false;\n    queue<int> Q;\n    memset(d,0x3f,sizeof(d));\n    bool vis[N];\n    d[1]=0;\n    vis[1]=true;Q.push(1);\n    while(Q.size())\n    {\n        int a=Q.front();Q.pop();vis[a]=false;\n        for(int i=head[a];~i;i=edge[i].next)\n        {\n            if(z[edge[i].to]<=l && d[edge[i].to]>d[a]+edge[i].val)\n            {\n                d[edge[i].to]=d[a]+edge[i].val;\n                if(!vis[edge[i].to])\n                {\n                    vis[edge[i].to]=true;\n                    Q.push(edge[i].to);\n                }\n            }\n        }\n    }\n    if(d[n]<=b)return true;\n    else return false;\n}\nint main()\n{\n    memset(head,-1,sizeof(head));\n    cin>>n>>m>>b;\n    int l=0x7f;int r=0;\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&z[i]);\n        r=max(r,z[i]);\n        l=min(l,z[i]);\n    }\n    for(int i=0;i<m;i++)\n    {\n        int u,v,val;\n        scanf(\"%d%d%d\",&u,&v,&val);\n        add(u,v,val);add(v,u,val);\n    }\n    while(l<=r)\n    {\n        int mid=(l+r)/2;\n        if(SPFA(mid))\n        {\n            ans=mid;\n            r=mid-1;\n        }\n        else l=mid+1;\n    }\n    if(ans)printf(\"%d\",ans);\n    else printf(\"AFK\");\n    return 0;\n}\n```",
        "postTime": 1487048495,
        "uid": 23087,
        "name": "Tgotp",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    },
    {
        "content": "**\n\u4e8c\u5206+\u6700\u77ed\u8def\n\n\u7b97\u6cd5\u662f\u6bd4\u8f83\u597d\u770b\u51fa\u6765\u7684\n\n\u987a\u4fbf\u7ed9\u697c\u4e0b\u8d5e\u4e00\u4e2a\n\n\u79bb\u6563\u5316\u975e\u5e38\u5389\u5bb3  \u53d8\u4e8c\u5206 \u503c\u4e3a\u4e8c\u5206 \u4e0b\u6807\n\n\u6bd5\u7adflogn\u548clog10^10\u4e0d\u662f\u4e00\u4e2a\u7ea7\u522b\u7684\n\n\u7136\u540e\u5c31\u662f\u73b0\u5728\u8c8c\u4f3c\u6839\u672c\u5c31\u4e0d\u4f1a\u4e8c\u5206\u4e86QAQ  \u6211\u5f00\u59cb\u5199\u7684\u662fmid\u6210\u7acb\u7684\u8bdd\u5c31\u5f80\u53f3\u8fb9\u627e = =\n\n\u627e\u5f97\u51fa\u6765\u6700\u5927\u503c> ->[delete]\u6bd5\u7adf\u571f\u8c6a[/delete]\n\n\u5176\u4f59\u7684\u6ca1\u4ec0\u4e48\u8bb2\u7684\n\n\u6211\u5199\u7684\u662fdiikstra -> ->\u603b\u89c9\u5f97\u6bd4SPFA\u987a\u773c\u4e9b\n\n\u8fd8\u6709   \u597d\u50cf\uff0c\u597d\u50cf\u662f\u8981\u7528long long  int\u597d\u50cf\u4f1a\u7206= =\n\n**\n```cpp\n\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\nconst int maxn=10000+10;\nconst int maxm=50000+10;\nconst ll INF=1e15;\nstruct Node{\n    int u,d;\n    Node(int u,int d):u(u),d(d){}\n    Node(){}\n    bool operator < (const Node &rhs)const{\n        return d>rhs.d;\n    }\n};\n\nint n,m,b,mac=-1,mic=(1<<30);\nint first[maxn],next[2*maxm],u[2*maxm],v[2*maxm],w[2*maxm];\nint cost[maxn],tmpcost[maxn];\n\nint cmp(int a,int b){return a<b;}\nvoid init_data()\n{\n    cin>>n>>m>>b;\n    for(int i=1;i<=n;i++) \n    {\n        scanf(\"%d\",&cost[i]);first[i]=-1;\n        tmpcost[i]=cost[i];\n    }\n    for(int i=1;i<=2*m;i+=2)\n    {\n        scanf(\"%d%d%d\",u+i,v+i,w+i);\n        next[i]=first[u[i]];\n        first[u[i]]=i;\n        w[i+1]=w[i];\n        u[i+1]=v[i];\n        v[i+1]=u[i];\n        next[i+1]=first[v[i]];\n        first[v[i]]=i+1;\n    }\n    sort(tmpcost+1,tmpcost+n+1,cmp);\n}\n\nll d[maxn];\nbool vis[maxn];\nint dijkstra(ll maxc)\n{\n    priority_queue<Node>q;\n    for(int i=1;i<=n;i++) d[i]=INF,vis[i]=0;\n    d[1]=0;\n    q.push(Node(1,0));\n    while(!q.empty())\n    {\n        Node x=q.top();q.pop();\n        int u=x.u;\n        if(vis[u]) continue;\n        vis[u]=1;\n        for(int i=first[u];i!=-1;i=next[i])\n          if(cost[v[i]]<=maxc&&d[v[i]]>d[u]+w[i])\n          {\n              d[v[i]]=d[u]+w[i];\n              q.push(Node(v[i],d[v[i]]));\n          }\n    }\n    if(d[n]>b) return false;\n    return true;\n}\n\nint main()\n{\n    init_data();\n    if(!dijkstra(INF)) printf(\"AFK\\n\");\n    else\n    {\n        int l=1,r=n,ans;\n        while(tmpcost[l]<cost[1]||tmpcost[l]<cost[n]) l++;\n        while(l<=r)\n        {\n            int mid=l+(r-l)/2;\n            if(dijkstra(tmpcost[mid])) r=mid-1,ans=mid;\n            else l=mid+1;\n        }\n        printf(\"%d\",tmpcost[ans]);\n    }\n    return 0;\n}\n\n\n```",
        "postTime": 1451956155,
        "uid": 11280,
        "name": "QWsin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1462 \u3010\u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def\u3011"
    }
]