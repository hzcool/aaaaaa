[
    {
        "content": "## \u7b80\u5355\u7684\u5b57\u7b26\u4e32\u64cd\u4f5c\n## \u4e3b\u8981\u7528\u5230\u7684\u51fd\u6570\u4e3afind\u51fd\u6570\uff0cfind\u51fd\u6570\u7528\u6765\u5bf9\u539f\u59cb\u6570\u636e\u4e2d\u67d0\u4e2a\u5b57\u7b26\u4e32\u8fdb\u884c\u5b9a\u4f4d\uff0c\u4ee5\u786e\u5b9a\u5176\u4f4d\u7f6e\u3002\n\n## \u5224\u65ad\u662f\u5426\u662f\u4ee5\u5b57\u7b26\u4e32T\u4e3a\u524d\u7f00\u7684\u5355\u8bcd\u53ea\u9700\u8981find\u8fd4\u56de\u7684\u6570\u4e3a0\u5373\u53ef\n\n## \u4ee3\u7801\u6f14\u793a\n\n\n\n------------\n\n\n```cpp\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint n;\nstring k,a[1000005]; \n\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t   cin>>a[i];\n\tcin>>k;\n\tsort(a+1,a+n+1);//\u5c06\u6240\u6709\u7684\u5355\u8bcd\u90fd\u6309\u5b57\u5178\u5e8f\u6392\u5e8f\n\tfor(int i=1;i<=n;i++) \n\t   if(a[i].find(k)==0)cout<<a[i]<<endl;\n       //\u5224\u65ad\u662f\u5426\u662f\u4ee5\u5b57\u7b26\u4e32T\u4e3a\u524d\u7f00\u7684\u5355\u8bcd\uff0c\u5982\u679c\u662f\u8f93\u51fa\n\treturn 0;\n}\n\n```\n",
        "postTime": 1532239620,
        "uid": 56665,
        "name": "\u90d1yz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1628 \u3010\u5408\u5e76\u5e8f\u5217\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u4e8c\u53c9\u5806\u7684\u95ee\u9898\uff0c\u5f88\u591a\u4eba\u7528\u5192\u6ce1\u6216sort\u6765\u4ee3\u66ff\u4e8c\u53c9\u5806\uff0c\u6211\u5f88\u60f3\u8bf4\uff1a\u6ca1\u6709\u8fd9\u4e2a\u5fc5\u8981\n\u56e0\u4e3a\u4e8c\u53c9\u5806\u4f1a\u81ea\u52a8\u8fdb\u884c\u6392\u5e8f\uff0c\u53ea\u9700\u8981\u5c06\u5143\u7d20\u538b\u5165\u4e8c\u53c9\u5806\uff08\u5c0f\u6839\u5806\uff09\uff0c\u518d\u5bf9\u9876\u90e8\u7684\u5143\u7d20\u8fdb\u884c\u64cd\u4f5c\n\n\u9996\u5148\u4ecb\u7ecd\u4e00\u4e0b\u4e8c\u53c9\u5806\u4e4b\u5c0f\u6839\u5806\u7684\u5b9a\u4e49\n\n```\n#include<bits/stdc++.h>\n#include<algorithm>\nusing namespace std;\npriority_queue<int, vector<int>, greater<int> > q;//\u5c0f\u6839\u5806 \nint a;\nint main()\n```\n\n\u5982\u679c\u4f60\u5f88\u61d2\uff0c\u4e5f\u53ef\u4ee5\uff1a\n```\n#include<bits/stdc++.h>\n#include<algorithm>\nusing namespace std;\npriority_queue<int> q;//\u5927\u6839\u5806 \nint a;\nint main(){\n\tfor(int i=1;i<=5;i++){\n\t\tcin>>a;\n\t\tq.push(-a);//\u53ea\u6709\u8d1f\u6570\u624d\u4f1a\u6309\u7167\u6570\u4ece\u5c0f\u5230\u5927\u6392\uff08\u5728\u8fd9\u91cc\u5ffd\u7565\u8d1f\u53f7\n\t}\n\tfor(int i=1;i<=5;i++){\n\t\tcout<<-q.top()<<\" \";\n\t\tq.pop();\n\t}\n\treturn 0;\n}\n```\n\u4e0b\u9762\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0a\u4ee3\u7801\n```\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<string>\n#include<cstring>\nusing namespace std;\npriority_queue<string, vector<string>, greater<string> > q;\nint main()\n{\n\tint a,b,c=0;\n\tstring d,e,f;\n\tcin>>a;\n\tfor(int i=1;i<=a;i++)\n\t{\n\t\tcin>>d;\n\t\tq.push(d);//\u89c1\u5143\u7d20\u538b\u5982\u4e8c\u53c9\u5806 \n\t}\n\tcin>>e;\n\tfor(int i=1;i<=a;i++)\n\t{\n\t    f=q.top();//\u9632\u6b62\u6570\u636e\u7d0a\u4e71 \n\t\tfor(int i=0;i<e.size();i++)\n\t\t{\n\t\t\tif(f[i]==e[i])//\u5224\u65ad\u662f\u5426\u542b\u6709\u5b57\u7b26\u4e32T \n\t\t\t{\n\t\t\t\tc++;//\n\t\t    }\n\t\t}\n\t\tif(c==e.size())//\u5982\u679c\u542b\u6709\uff0c\u76f4\u63a5\u8f93\u51fa \n\t\t{\n\t\t\tcout<<q.top()<<endl;\n\t\t}\n\t\tc=0;//c\u5f52\u96f6 \n\t\tq.pop();//\u5220\u9664\u5df2\u7ecf\u5224\u65ad\u5b8c\u7684\u5806\u9876\u7684\u5143\u7d20 \n\t}\n\treturn 0;//\u5b8c\u7f8e\u7ed3\u675f\uff08\u6492\u82b1\uff09\n}\n```\n//by:\u9c61\u821e//date:2019.8.15\n",
        "postTime": 1565861403,
        "uid": 183473,
        "name": "PrincessYR\u2728\uff5e",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1628 \u3010\u5408\u5e76\u5e8f\u5217\u3011"
    },
    {
        "content": "# \u8fd9\u9898\u662f\u4e00\u4e2a\u88f8\u7684trie\n\u9996\u5148\uff0c\u6211\u4eec\u6765\u4ecb\u7ecd\u4e00\u4e0btrie\uff1a\n>\u53c8\u79f0\u5355\u8bcd\u67e5\u627e\u6811\uff0c\u524d\u7f00\u6811\uff0c\u662f\u4e00\u79cd\u6811\u5f62\u7ed3\u6784\uff0c\u662f\u4e00\u79cd\u54c8\u5e0c\u6811\u7684\u53d8\u79cd\u3002\u5178\u578b\u5e94\u7528\u662f\u7528\u4e8e\u7edf\u8ba1\uff0c\u6392\u5e8f\u548c\u4fdd\u5b58\u5927\u91cf\u7684\u5b57\u7b26\u4e32\uff08\u4f46\u4e0d\u4ec5\u9650\u4e8e\u5b57\u7b26\u4e32\uff09\uff0c\u6240\u4ee5\u7ecf\u5e38\u88ab\u641c\u7d22\u5f15\u64ce\u7cfb\u7edf\u7528\u4e8e\u6587\u672c\u8bcd\u9891\u7edf\u8ba1\u3002\u5b83\u7684\u4f18\u70b9\u662f\uff1a\u5229\u7528\u5b57\u7b26\u4e32\u7684\u516c\u5171\u524d\u7f00\u6765\u51cf\u5c11\u67e5\u8be2\u65f6\u95f4\uff0c\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u65e0\u8c13\u7684\u5b57\u7b26\u4e32\u6bd4\u8f83\uff0c\u67e5\u8be2\u6548\u7387\u6bd4\u54c8\u5e0c\u6811\u9ad8\u3002\u2014\u767e\u5ea6\n\ntrie\u957f\u8fd9\u6837\uff08\u6839\u8282\u70b9\u6ca1\u6709\u5b9e\u9645\u5185\u5bb9\uff09\uff1a![](https://s2.ax1x.com/2019/08/20/mJarpF.jpg)\n\n\u5728\u67e5\u627e\u65f6\uff0c\u76f4\u63a5\u4ece\u6839\u8282\u70b9\u51fa\u53d1\u987a\u7740\u6811\u5f80\u4e0b\u627e\u5c31OK\uff0c\u63d2\u5165\u4e5f\u662f\u4e00\u6837\uff0c\u5e76\u4e14\u90fd\u53ef\u4ee5\u5199\u6210\u8fed\u4ee3\u7684\uff0c\u590d\u6742\u5ea6$ O(str.length()) $\n\n\u8fd9\u662f\u6211\u6700\u7231\u7684\u6570\u636e\u7ed3\u6784\uff0c\u539f\u56e0\u5728\u4e8e\u5176\u6548\u7387\u975e\u5e38\u9ad8\uff0c\u800c\u4e14\u53ef\u4ee5\u505a\u5f88\u591a\u4e8b\u60c5~~\u5176\u5b9e\u662f\u56e0\u4e3a\u6211\u89c9\u5f97\u8fd9\u662f\u9664\u6811\u72b6\u6570\u7ec4\u548c\u5e76\u67e5\u96c6\u5916\u6700\u7b80\u5355\u7684\u6811\u578b\u7ed3\u6784~~\n\n\u4f46trie\u7f3a\u70b9\u4e5f\u76f8\u5f53\u660e\u663e\uff1a\u7a7a\u95f4\u6781\u5927\uff0c\u5f88\u8017\u5185\u5b58\uff0c\u4f46\u5982\u679c\u5b57\u7b26\u4e32\u957f\u5ea6\u5f88\u5c0f\u5176\u5b9e\u65e0\u8bba\u65f6\u7a7a\u90fd\u5f88\u4f18\u79c0\uff0c\u628amap\u548cset\u540a\u8d77\u6765\u6253\n\n\uff08\u4e0d\u8fc7\u6211\u5199\u7684\u662f\u52a8\u6001\u7684\u6240\u4ee5\u5185\u5b58\u4e0d\u7b97\u592a\u5c34\u5c2c\uff09\n\n\u4e0a\u4ee3\u7801\uff1a\n```cpp\ntemplate<int set_,int mod>//set_\u662f\u5b57\u7b26\u96c6\u5927\u5c0f\nstruct trie{\n    struct node{\n        node* son[set_];\n        int flag;\n    };//\u8282\u70b9\uff0c\u90a3\u4e2aflag\u662f\u9632\u6b62\u67e5\u627e\u67d0\u4e00\u5b57\u7b26\u4e32\u4e0d\u5728trie\u91cc\u7684\u524d\u7f00\u65f6\u8fd4\u56de\u9519\u8bef\u7b54\u6848\n    //\u5f00\u6210int\u662f\u56e0\u4e3a\u53ef\u4ee5\u91cd\u590d\n    node* root,*ctrl_c;//\u590d\u5236\u4e00\u4e0b\u540e\u9762\u8fed\u4ee3\u63d2\u5165/\u67e5\u627e\u6709\u7528\n    inline void init(){\n        clear(ctrl_c);//\u6e05\u7a7a\u6574\u68f5\u6811\uff0c\u540e\u9762\u6709\u4ee3\u7801\n        root=new node(),ctrl_c=root;\n    }//\u4f7f\u7528\u524d\u8bf7\u52a1\u5fc5\u8c03\u7528tree.init();\uff0c\u5426\u5219RE\n    inline void insert(string line){//\u63d2\u5165\n        root=ctrl_c;//\u6211\u76f4\u63a5\u62ffroot\u8fed\u4ee3\u7684\n        //\u7531\u4e8e\u540e\u9762count\u4f1a\u8fd4\u56deroot->flag\uff0c\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u7528root\u8fed\u4ee3\n        for(int i=0;i<line.length();i++){\n            if(root->son[line[i]%mod]==NULL){//\u5185\u5b58\u4e0d\u5b58\u5728\uff0c\u8c03\u7528\u6784\u9020\u51fd\u6570\u5f00\u65b0\u5185\u5b58\n                root->son[line[i]%mod]=new node(),root->son[line[i]%mod]->flag=0;//\u628aflag\u7f6e\u4e3a0\uff0c\u8fd9\u4e2a\u5f88\u91cd\u8981\n            }\n            root=root->son[line[i]%mod];//\u5f80\u4e0b\u8fed\u4ee3\n        }\n        root->flag++,root=ctrl_c;//\u8fd9\u4e2a\u5f53\u7136\u662f\u80fd\u91cd\u7f6eroot\u5c31\u91cd\u7f6e\u554a\n    }\n    inline int count(string line){//\u67e5\u627e\n        root=ctrl_c;\n        for(int i=0;i<line.length();i++){\n            if(root->son[line[i]%mod]==NULL){//\u5185\u5b58\u90fd\u6ca1\u6709\uff0c\u663e\u7136\u6ca1\u6709\u8fd9\u4e2a\u5b57\u7b26\u4e32\n                root=ctrl_c;\n                return 0;\n            }\n            root=root->son[line[i]%mod];//\u4ecd\u7136\u5f80\u4e0b\u8fed\u4ee3\n        }\n        return root->flag;//\u6709\u53ef\u80fd\u6211\u4eec\u60f3count\u7684\u53ea\u662f\u67d0\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u524d\u7f00\n        //\u6240\u4ee5\u8981\u628aflag\u7f6e\u4e3a0\n    }\n    inline void del(string line){//\u5220\u9664\n        root=ctrl_c;\n        for(int i=0;i<line.length();i++){\n            if(root->son[line[i]%mod]==NULL){\n                root=ctrl_c;//\u5185\u5b58\u90fd\u6ca1\u6709\n                return;\n            }\n            root=root->son[line[i]%mod];\n        }\n        root->flag=(root->flag==0?0:root->flag-1);//\u5982\u679cflag\u662f0\u90a3\u5c31\u4e0d\u7ba1\u4ed6\u5426\u5219flag--\n        root=ctrl_c;\n    }\n    void clear(node* now){//\u6e05\u7a7a\n        if(now==NULL) return;\n        for(int i=0;i<set_;i++) if(now->son[i]!=NULL) clear(now->son[i]);//\u76f4\u63a5dfs\u66b4\u529b\u9012\u5f52\n        delete now;//\u8c03\u7528\u6790\u6784\u51fd\u6570&&\u91ca\u653e\u5185\u5b58\n    }\n};\n```\n\u90a3\u4e48\u4e3a\u4ec0\u4e48\u8fd9\u9053\u9898\u4f1a\u8003\u8651trie\u5462\uff1f\n\n\u7531\u4e8etrie\u57fa\u4e8e\u524d\u7f00\u7684\u65b9\u6cd5\u5b58\u5b57\u7b26\u4e32\uff0c\u6240\u4ee5\u524d\u7f00\u4e3aT\u7684\u5b57\u7b26\u4e32\u4e00\u5b9a\u5305\u542bT\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4eceT\u7684\u672b\u5c3e\u5f00\u59cbdfs\u8f93\u51fa\u6240\u6709\u5b57\u7b26\u4e32\u5373\u53ef\n\n\u4f7f\u7528dfs\u662f\u56e0\u4e3a\u6df1\u5ea6\u4f18\u5148\uff0c\u53ef\u4ee5\u5904\u7406```abfsd<ba```\u7684\u60c5\u51b5\n\n\u5173\u4e8edfs:\n```cpp\ninline node* count_(string line){\n    root=ctrl_c;\n    for(int i=0;i<line.length();++i){\n        if(root->son[line[i]%mod]==NULL){\n            root=ctrl_c;\n            return NULL;\n        }\n        root=root->son[line[i]%mod];\n    }\n    return root;\n}\nvoid dfs(node* now){\n\tif(now==NULL) return;\n    int temp=now->flag;\n\twhile(temp--) cout<<now->s<<endl;\n\tfor(int i=0;i<set_;++i) dfs(now->son[i]);\n}\n```\n\u590d\u6742\u5ea6$ n\\ length(n) $\n\nAC\u4ee3\u7801:\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<string>\n#include<iostream>\nusing namespace std;\ntemplate<int set_,int mod>\nstruct trie{\n    struct node{\n        node* son[set_];\n        int flag;\n        string s;\n    };\n    node* root,*ctrl_c;//\u590d\u5236\u4e00\u4e0b\u540e\u9762\u8fed\u4ee3\u67e5\u627e\u6709\u7528\n    inline void init(){\n        clear(ctrl_c);\n        root=new node(),ctrl_c=root;\n    }\n    inline void insert(string line){\n        root=ctrl_c;\n        for(int i=0;i<line.length();++i){\n            if(root->son[line[i]%mod]==NULL){\n                root->son[line[i]%mod]=new node(),root->son[line[i]%mod]->flag=0,root->son[line[i]%mod]->s.clear();\n            }\n            root=root->son[line[i]%mod];\n        }\n        root->flag++,root->s=line,root=ctrl_c;\n    }\n    inline int count(string line){\n        root=ctrl_c;\n        for(int i=0;i<line.length();++i){\n            if(root->son[line[i]%mod]==NULL){\n                root=ctrl_c;\n                return 0;\n            }\n            root=root->son[line[i]%mod];\n        }\n        return root->flag;\n    }\n    inline void del(string line){\n        root=ctrl_c;\n        for(int i=0;i<line.length();++i){\n            if(root->son[line[i]%mod]==NULL){\n                root=ctrl_c;\n                return;\n            }\n            root=root->son[line[i]%mod];\n        }\n        root->flag=(root->flag==0?0:root->flag-1);\n        root=ctrl_c;\n    }\n    void clear(node* now){\n        if(now==NULL) return;\n        for(int i=0;i<set_;++i) if(now->son[i]!=NULL) clear(now->son[i]);\n        delete now;\n    }\n    inline node* count_(string line){\n      root=ctrl_c;\n      for(int i=0;i<line.length();++i){\n          if(root->son[line[i]%mod]==NULL){\n              root=ctrl_c;\n              return NULL;\n          }\n          root=root->son[line[i]%mod];\n      }\n      return root;\n  }\n  void dfs(node* now){\n      if(now==NULL) return;\n      int temp=now->flag;\n      while(temp--) cout<<now->s<<endl;\n      for(int i=0;i<set_;++i) dfs(now->son[i]);\n  }\n};\ntrie<26,'a'> tree;\nstring s;\nint main(){\n\ttree.init();\n\tint n;\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tcin>>s,tree.insert(s);\n\t}\n\tcin>>s;\n\ttree.dfs(tree.count_(s));\n\treturn 0;\n}\n```\n[\u8bc4\u6d4b\u8bb0\u5f55](https://www.luogu.org/record/23478603)\n\np.s \u5176\u5b9e\u8fd9\u9898\u8fd8\u53ef\u4ee5\u7528kmp\u7b97\u6cd5\uff08\u5176\u5b9e\u5c31\u662f\u4f18\u5316\u4e00\u4e0bfind\uff09",
        "postTime": 1567066336,
        "uid": 157598,
        "name": "qbu666666",
        "ccfLevel": 5,
        "title": "\u9898\u89e3P1628\u3010\u5408\u5e76\u5e8f\u5217\u3011"
    },
    {
        "content": "## \u5206\u4eab\u4e00\u4e2achar\u4e8c\u7ef4\u6570\u7ec4\u7684\u65b9\u6cd5\n## \u4ee5\u53ca\u7528sort\u7684\u6bd2\u7624\u64cd\u4f5c~~\uff08\u5982\u679c\u662f\u6211\u592a\u5f31\u4e86\u53ef\u4ee5\u5ffd\u7565\u8fd9\u4e00\u53e5\uff09~~\n## \u867d\u7136\u4ee3\u7801\u6bd4\u4e0d\u4e0a\u524d\u9762\u5927\u4f6c\u7684\u7b80\u6d01\uff0c\u4f46\u662f\u81ea\u8ba4\u4e3a\u7b80\u5355\u6613\u61c2\uff0c\u6709\u5229\u4e8e\u7406\u89e3sort\u7528\u6cd5\uff1b\n## \u53e6\u5916\uff0c\u7b2c\u4e00\u6b21\u5199\uff0c\u6709\u4ec0\u4e48\u4e0d\u597d\u7684\u8bf7\u89c1\u8c05\n\u9996\u5148\u7eaf%\u819c\u4f60\u5e94\u8be5\u90fd\u4f1a\u5427~~\uff08\u5982\u679c\u4e0d\u4f1a\u6211\u8868\u793a\u62b1\u6b49\uff09~~ \n\n \u518d\u770b\u4e00\u4e0b\u4ee3\u7801\n```\nusing namespace std;\nchar c[100050][105];\nchar d[10000];\nll n,dl,cl,f=0;//ll \u5c31\u662f\u5b8f\u5b9a\u4e49(\u5373#define)\u6210long long(\u770b\u4e0d\u4e60\u60ef\u8bf7\u539f\u8c05)\n/*bool cmp(ll a,ll b){\n\treturn strcmp(c[a],c[b])<0;    \u7b2c\u4e00\u6b21\u5148\u522b\u7ba1\u8fd9\u4e1c\u897f\uff0c\u540e\u9762\u518d\u8bf4QAQ\n}*/\nint main(){\n    ll arr[100005];\n\tscanf(\"%d\",&n);//\u8f93\u5165\u5355\u8bcd\u4e2a\u6570\n\tfor(int i=0;i<n;i++)arr[i]=i;//\u8fd9\u4e00\u53e5\u662f\u8ba9long long\u6570\u7ec4\u7684\u4e0b\u6807\u8ddf\u7740char\u6570\u7ec4\u4e0b\u6807\u53d8\u5316(\u4e0d\u7406\u89e3\u53ef\u4ee5\u5148\u8df3\u8fc7\uff0c\u8fd9\u4e2a\u4e0b\u9762\u7684sort\u7528\u5230\u7684)\uff1b\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%s\",c[i]);//\u8f93\u5165\u5355\u8bcd\n\t}\n\tsort(arr,arr+n,cmp);//\u8fd9\u4e2a\u6392\u5e8f\u662f\u8ba9\u6240\u6709\u5b57\u7b26\u4e32\u6309\u5b57\u5178\u5e8f\u6392\u5217\uff0c\u56e0\u4e3a\u4e0d\u662f\u666e\u901a\u7684\u5347\u5e8f\u6392\u5217\uff0c\u6240\u4ee5\u8981\u5b9a\u4e49\u81ea\u5df1\u7684cmp(\u770b\u4e0d\u61c2\u5148\u8df3\u8fc7);\n\tscanf(\"%s\",d);//\u8f93\u5165\u5b57\u7b26\u4e32T\uff1b\n    dl=strlen(d);//\u6c42\u51faT\u7684\u957f\u5ea6\uff1b\u8fd9\u662fchar\u7684\u7528\u6cd5( string\u5e94\u4e3a\uff1adl.length() )\n    //\u522b\u6025\uff0c\u8fd8\u6ca1\u5b8c\u5462\uff1b\n}\n```\n\u73b0\u5728\u8bf4\u4e00\u4e0b\u90a3\u4e2asort\uff0c\u8fd9\u662f\u767e\u5ea6\u627e\u5230\u7684\uff0c\u94fe\u63a5[\u4f7f\u7528STL sort\u5bf9\u5b57\u7b26\u4e32\u6309\u5b57\u5178\u5e8f\u6392\u5e8f - amojury - \u535a\u5ba2\u56ed](https://www.cnblogs.com/amojury/p/9001195.html)\u542c\u5b8c\u4e0d\u61c2\u5f97\u53ef\u4ee5\u770b\u4e00\u4e0b,\u5927\u4f6c\u8bf4\u7684\u4e0d\u9519\uff1b\n### \u4e0b\u9762\u505a\u4e00\u4e0b\u642c\u8fd0\u5de5## \n\u5148\u8bf4\u4e00\u4e0b\u4e3a\u5565\u4e0d\u7528string\uff0c\u56e0\u4e3a\u67d0\u4e9b\u60c5\u51b5\u4e0bstring\u4f1a\u8d85\u65f6\uff0c\u4e2a\u4eba\u63a8\u8350\u7528char\uff1b\n\n\u7136\u540e\u8bf4\u8bf4\u90a3\u4e2asort~~(\u67d0\u4e9b\u5927\u4f6c\u53ef\u4ee5\u8df3\u8fc7)~~\n\n\u56e0\u4e3a\u6211\u4eec\u6392\u5e8f\u7684\u5b9e\u9645\u662f\u6570\u7ec4arr\u7684\u4e0b\u6807\uff0c\u6240\u4ee5\u6bd4\u8f83\u5feb\uff0c\u4f46\u662f\u6211\u4eec\u8981\u66f4\u6539\u662f\u6570\u7ec4c\uff1b\n```\nbool cmp(ll a,ll b){\n\treturn strcmp(c[a],c[b])<0; \n    /*\n    strcmp(),\u8fd9\u4e2a\u51fd\u6570\u662f\u7528\u6765\u6bd4\u8f83\u5b57\u7b26\u4e32\u5927\u5c0f\u7684\uff1b\n    \u82e5a==b,\u8fd4\u56de0\uff1b\n    \u82e5a<b,\u8fd4\u56de\u8d1f\u6570\uff1b\n    \u82e5a>b,\u8fd4\u56de\u6b63\u6570\uff1b\n    \u6211\u4eec\u662f\u8981\u5347\u5e8f\u6392\u5217\uff0c\u6240\u4ee5\u6761\u4ef6\u662f<0\uff1b\n    */\n    //\u5982\u679c\u770b\u4e0d\u61c2bool cmp\u8fd9\u4e2a\u4e1c\u897f\uff0c\u5e94\u8be5\u81ea\u884c\u767e\u5ea6\u4e00\u4e0bsort\u7684\u7528\u6cd5\uff1b\n}\n```\n\u518d\u770b\u4e00\u4e0b\u540e\u9762\u7684\u5224\u65ad\u90e8\u5206;\n```\nfor(int i=0;i<n;i++){\n\t\tcl=strlen(c[arr[i]]);//\u5207\u8bb0\uff0c\u6211\u4eec\u6392\u5e8f\u7684\u662farr\u6570\u7ec4\u4e0b\u6807\uff0c\u53d8\u6362\u7684\u4e5f\u662f\u4ed6\uff0c\u6240\u4ee5\u8981\u6c42\u5f53\u524d\u7684\u5e94\u8be5\u7528strlen(c[arr[i]]),\u800c\u4e0d\u662fstrlen(c[i]);\n        //\u56e0\u4e3a\u8003\u8651\u7684\u662f\u524d\u7f00\uff0c\u6240\u4ee5\u53ea\u9700\u5faa\u73af\u5230T\u5b8c\u5c31\u597d\u4e86\n\t\tfor(int k=0;k<dl;k++){\n\t\t\tif(c[arr[i]][k]!=d[k]){//\u4e00\u4f4d\u4e00\u4f4d\u7684\u5224\u65ad\uff0c\u5982\u679c\u6709\u4e00\u4f4d\u4e0d\u540cf=1\uff0c\u9000\u51fa\uff0c\u8fd9\u91cc\u7684f\u8d77\u8f85\u52a9\u4f5c\u7528\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3aflag\uff1b\n\t\t\t\tf=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(f==0)printf(\"%s\\n\",c[arr[i]]);//\u5982\u679c\u6ca1\u6709f==0\uff0c\u8bf4\u660e\u7b26\u5408\u6761\u4ef6\uff0c\u5219\u8f93\u51fa\uff0c\u8bb0\u4f4f\u8fd8\u662f\u8f93\u51fac[arr[i]]\uff0c\u7406\u7531\u540c\u4e0a\n\t\tf=0;\u4e00\u4e2a\u5355\u8bcd\u4e00\u4e2aflag\uff0c\u6240\u4ee5\u6700\u540e\u8fd8\u8981\u53d8\u4e3a0;\n\t}\n```\n\u6700\u540e\u5e0c\u671b\u901a\u8fc7\u5ba1\u6838\u5427QWQ\uff0c\u611f\u8c22\u7ba1\u7406\u5927\u5927",
        "postTime": 1533612702,
        "uid": 89398,
        "name": "WatT_T",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1628 \u3010\u5408\u5e76\u5e8f\u5217\u3011"
    },
    {
        "content": "# \u6211\u6765\u53d1\u4e00\u7bc7string\u7684\u9898\u89e3\n\n**\u601d\u8def\uff1a\u5148\u7ed9\u5b57\u7b26\u4e32\u6392\u4e2a\u5e8f\uff08sort\u76f4\u63a5\u5b57\u5178\u5e8f\u6392\u5e8f\u4e86\uff09\u3002\u679a\u4e3e\u5b57\u7b26\u4e321 ~ n\uff0c\u770b\u5b57\u7b26\u4e32\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\uff08\u524d\u7f00\u4e3a\u90a3\u4e2a\u5b57\u7b26\u4e32\uff09\uff0c\u662f\u5c31\u8f93\u51fa\uff0c\u4e0d\u662f\u5c31\u4e0d\u7ba1\u3002**\n\n**\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\uff1a\u53ea\u9700\u770b\u524d\u7f00\u7684\u5b57\u7b26\u4e32\u548c\u90a3\u4e2a\u5b57\u7b26\u4e32\u7684\u524d\uff08\u524d\u7f00\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff09\u4e2a\u5b57\u7b26\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u662f\u5426\u76f8\u7b49\u5c31\u884c\u4e86**\n\n\u5b57\u7b26\u4e32\u798f\u52291\uff1a**\u53ef\u4ee5\u76f4\u63a5\u62fc\u63a5\u5b57\u7b26\u4e32**\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff1aaaaaa\u548cbbbbbb\u62fc\u63a5\u8d77\u6765\u5c31\u662faaaaabbbbbb\n\ncode\uff1a\n\n```cpp\ns1 = s1 + s2;// '+' \u53f7\u5c31\u662f\u62fc\u63a5\u7b26\u53f7\uff08\u5728\u5b57\u7b26\u4e32\u4e2d\uff09\n```\n\n\u5b57\u7b26\u4e32\u798f\u52292\uff1a**\u53ef\u4ee5\u76f4\u63a5sort\u6309\u5b57\u5178\u5e8f\u6392\u5e8f**\uff08\u5b57\u5178\u5e8f\u5c31\u662f\u6309\u82f1\u6587\u5b57\u5178\u7684\u5355\u8bcd\u987a\u5e8f\uff09\n\ncode\uff1a\n\n```cpp\nsort(s + 1, s + n + 1);\n```\n\n\u5b57\u7b26\u4e32\u798f\u52293\uff1a**\u53ef\u4ee5\u76f4\u63a5\u5224\u7b49**\uff08\u53ca\u5224\u65ad\u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u5426**\u5b8c\u5168\u76f8\u7b49**\uff09\uff08\u901a\u5e38\u5728if\u8bed\u53e5\u4e2d\uff09\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff1aaaaaa\u548caaaaa\u5b8c\u5168\u76f8\u7b49\uff0caaaaa\u548cbbbbb\u4e0d\u5b8c\u5168\u76f8\u7b49\n\ncode\uff1a\n\n```cpp\nif(s1 == s2)\n{\n\tprintf(\"YES\");\n}\nelse\n{\n\tprintf(\"NO\");\n}\n```\n\n\u770b\u4ee3\u7801\u5427\uff1a\n\n```cpp\n//\u4ee3\u7801\u91cc\u7684register\u548cinline\u4e0d\u7528\u7ba1\uff0c\u662f\u7528\u4e8e\u4f18\u5316\u7684(\u662f\u7ed9\u840c\u65b0\u8bf4\u7684) \n#include <bits/stdc++.h>\nusing namespace std;\nint n;\nstring s[100001], m;\ninline bool check(string s)\n{\n\tstring x; \n\tfor(register int i = 0; i < m.length(); ++i)//s\u7684\u524dm.length()\u4e2a\u5b57\u7b26 \n\t{\n\t\tx += s[i];//\u62fc\u63a5 \n\t}\n\tif(x == m)//\u76f4\u63a5\u5224\u7b49 \n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nint main()\n{\n\tscanf(\"%d\", &n);\n\tfor(register int i = 1; i <= n; ++i)\n\t{\n\t\tcin >> s[i];\n\t}\n\tcin >> m;\n\tsort(s + 1, s + n + 1);//\u5feb\u6392 \n\tfor(register int i = 1; i <= n; ++i)\n\t{\n\t\tif(check(s[i]))\n\t\t{\n\t\t\tcout << s[i] << endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1559201805,
        "uid": 143681,
        "name": "Strong_Jelly",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1628 \u3010\u5408\u5e76\u5e8f\u5217\u3011"
    },
    {
        "content": "# \u66b4\u529b~~\u4e0d\u633a\u7b80\u5355\u7684~~\n\u8fd9\u9053\u9898\u849f\u84bb~~\u4e0d\u4f1a\u4ec0\u4e48\u4e8c\u53c9\u5806~~\uff0c\u66b4\u529b\u4e00\u6ce2\uff0c\u5927\u4f6c\u52ff\u55b7~~~\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<string>\nusing namespace std;\nint n;\nconst int M=100002;\nint len[M];//\u5b58\u957f\u5ea6\nstring a[M];//\u5b58\u8f93\u5165\u7684\u5b57\u7b26\u4e32\nstring end[M];//\u5b58\u524d\u7f00\u4e3at\u7684\u5b57\u7b26\u4e32\nstring t;//\u524d\u7f00\nbool cmp(string a,string b){\n\tint lena=a.length();\n\tint lenb=b.length();\n\tfor(int i=1;i<max(lena,lenb);++i){\n\t\tif((int)a[i]==(int)b[i]) continue;\n\t\treturn (int)a[i]<(int)b[i];\n\t\tbreak;//\u9898\u76ee\u8981\u6c42\uff0c\u5347\u5e8f\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i){\n\t\tcin>>a[i];\n\t\tlen[i]=a[i].length();\n\t}//\u8f93\u5165\u4e0d\u89e3\u91ca\n\tcin>>t;\n\tint sum;\n\tint l=1;//\u4fbf\u4e8e\u5b58\u5165end\u6570\u7ec4\u7684\u53d8\u91cf\n\tint r=0;//\u603b\u5171\u6709\u51e0\u4e2a\u5b57\u7b26\u4e32\u524d\u7f00\u4e3at\n\tfor(int i=1;i<=n;++i){\n\t\tsum=0;\n\t\tstring c=a[i];\n\t\tfor(int j=0;j<len[i];++j){\n\t\t\tif(c[j]==t[j]) sum++;\n\t\t\telse break;\n\t\t}\n\t\tif(sum==t.length()){\n\t\t\tend[l]=c;\n\t\t\t++l;\n\t\t\t++r;\n\t\t}\n\t}//\u66b4\u529b\u5339\u914d\n\tsort(end+1,end+r+1,cmp);//\u6392\u5e8f\n\tfor(int i=1;i<=r;++i) cout<<end[i]<<endl;\n\treturn 0;//\u534e\u4e3d\u5730\u7ed3\u675f\n} \n```\n\u849f\u84bb\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u6c42\u8fc7\n",
        "postTime": 1581316500,
        "uid": 261006,
        "name": "DOs__lx",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1628 \u3010\u5408\u5e76\u5e8f\u5217\u3011"
    },
    {
        "content": "# P1628\u3010\u5408\u5e76\u5e8f\u5217\u3011\u9898\u89e3 \n### \u8fd9\u9053\u9898\u5c31\u662f\u5c06\u4e00\u4e9b\u5b57\u7b26\u4e32\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5e8f\uff0c\u5f53\u7136\u53ef\u4ee5\u7528string+sort\u4e00\u904d\u8fc7\uff0c\u4e5f\u53ef\u4ee5\u7528\u5806\u6392\u5e8f\uff0c\u5c31\u662f\u5c06\u5806\u4e2d\u7684\u5143\u7d20\u5b58\u6210\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u7528<cstring>\u4e2d\u7684strcmp\u51fd\u6570\u6bd4\u8f83\u5b57\u7b26\u4e32\u5927\u5c0f\uff0c\u7ef4\u62a4\u4e00\u4e2a\u5143\u7d20\u4e3a\u5b57\u7b26\u4e32\u7684\u5c0f\u6839\u5806\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nchar tree[100002][101],s[101],cp[101];\nint n,len;\nvoid sp(char a[],char b[])//\u81ea\u5df1\u5199\u4ea4\u6362\u51fd\u6570\n{\n\tchar temp[101];\n\tstrcpy(temp,a);\n\tstrcpy(a,b);\n\tstrcpy(b,temp);\n}\nbool compare(string a,string b)\n//\u5224\u65ad\u6700\u540e\u7684\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u524d\u9762\u5b57\u7b26\u4e32\u7684\u524d\u7f00\n{\n\tfor(int i=0;i<len;i++)\n\t if(a[i]!=b[i])return false;\n\treturn true;\n}\nstruct node{\n\tint size;\n\tvoid push(char a[])\n\t{\n\t\tstrcpy(tree[++size],a);\n\t\tint pos=size;\n\t\twhile(pos/2&&strcmp(tree[pos],tree[pos/2])<0)//\u5c0f\u6839\u5806 \n\t\t {\n\t\t sp(tree[pos],tree[pos/2]);\n\t\t pos/=2;\n\t\t }\n\t}\n\tvoid pop()\n\t{\n\t\tint pos=1;\n\t\tstrcpy(tree[1],tree[size--]);\n\t\twhile(pos*2<=size){\n\t\t\tint i=pos*2;\n\t\t\tif(i+1<=size&&strcmp(tree[i],tree[i+1])>0)i++;\n\t\t\tif(strcmp(tree[pos],tree[i])>0)\n\t\t\t {\n\t\t\t sp(tree[pos],tree[i]);\n\t\t\t pos=i;\n\t\t     }\n\t\t    else break;\n\t\t}\n\t}\n}heap;\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t {\n\t cin>>s;\n     heap.push(s);\n\t }\n \tcin>>cp;\n\tlen=strlen(cp);\n\tfor(int i=1;i<=n;i++)\n\t {\n\t if(compare(tree[1],cp))\n\t  cout<<tree[1]<<endl;\n\t heap.pop();\n     }\n\treturn 0;\n} \n```",
        "postTime": 1524356600,
        "uid": 60120,
        "name": "Chemist",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1628 \u3010\u5408\u5e76\u5e8f\u5217\u3011"
    },
    {
        "content": "# P1628 \u3010\u5408\u5e76\u5e8f\u5217\u3011\n### \u849f\u84bb\u7684\u9898\u89e3\uff0c\u5f88\u597d\u7406\u89e3\uff0c\u4f46\u4e0d\u4e00\u5b9a\u662f\u6700\u4f18\u89e3\uff0c\u4e5f\u4e0d\u4e00\u5b9a\u662f\u6700\u7b80\u4fbf\u7684\u505a\u6cd5\n\n\n------------\n\n\n~~\u7b80\u5355\u5730~~\u63cf\u8ff0\u4e00\u4e0b\u9898\u9762\uff1a\u5c31\u662f\u627e\u54ea\u51e0\u4e2a\u5355\u8bcd\u662f\u4ee5\u5b57\u7b26\u4e32$t$\u5f00\u5934\u7684\uff0c\u5168\u90e8\u6309**\u5b57\u5178\u5e8f**\u8f93\u51fa\n\n\u8bf4\u5230\u5b57\u5178\u5e8f\uff0c\u5173\u952e\u6765\u4e86\u2014\u2014**\u6392\u5e8f**\uff0c\u9996\u5148\u5f53\u7136\u9009\u62e9$sort$\u5566\n\n~~\u5177\u4f53~~\u7684\u8bdd\u5c31\u770b\u6ce8\u91ca\u5427~\n\n------------\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node{//\u7ed3\u6784\u4f53\n\tstring s;//\u6709\u7684\u5355\u8bcd\n\tbool f=0;//\u6807\u8bb0\u8fd9\u4e2a\u5355\u8bcd\u7684\u5f00\u5934\u662f\u5426\u6709\u5b57\u7b26\u4e32t\n}a[100010];\nbool fg=0;\nint main(){\n\tint n,t;\n\tstring l,p[100010];\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++){\n\t\tcin>>a[i].s;//\u8f93\u5165n\u4e2a\u5b57\u6bcd\n\t}\n\tcin>>l;//\u8f93\u5165\u8981\u67e5\u8be2\u7684\u5b57\u7b26\u4e32\n\tfor(int i=0;i<n;i++){//\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5355\u8bcd\n\t\tfg=0;//\u4e0d\u8981\u5fd8\u8bb0\u6bcf\u4e00\u904d\u6807\u8bb0\u521d\u59cb\u5316\n\t\tfor(int j=0;j<l.size();j++){//\u679a\u4e3e\u5b57\u7b26\u4e32t\u4e2d\u7684\u6bcf\u4e2a\u5b57\u6bcd\n\t\t\tif(a[i].s[j]!=l[j]){//\u5f53\u5355\u8bcd\u4e2d\u7684\u4e00\u4e2a\u5b57\u6bcd\u4e0e\u5b57\u7b26\u4e32t\u4e2d\u5b57\u6bcd\u4e0d\u540c\u65f6\uff0c\u53ea\u8981\u53d1\u73b0\u6709\u4e00\u4e2a\u5b57\u6bcd\u4e0d\u540c\uff0c\u90a3\u5c31\u4e0d\u662f\u6211\u4eec\u8981\u67e5\u8be2\u7684\u5355\u8bcd\n\t\t\t\tfg=1;\n\t\t\t\tcontinue;//\u53d1\u73b0\u4e0d\u662f\u5c31\u9000\u51fa\n\t\t\t}\n\t\t}\n\t\tif(fg==1){//\u5f53fg==1\uff0c\u8bf4\u660e\u8fd9\u4e0d\u662f\u6211\u4eec\u8981\u67e5\u8be2\u7684\u5355\u8bcd\n\t\t\ta[i].f=0;\n\t\t}else{//\u5f53fg==0\uff0c\u8bf4\u660e\u8fd9\u662f\u6211\u4eec\u8981\u67e5\u8be2\u7684\u5355\u8bcd\n\t\t\ta[i].f=1;\n\t\t}\n\t}\n\tfor(int i=0;i<n;i++){\n\t\tif(a[i].f==1){//\u5c06\u6211\u4eec\u786e\u5b9a\u8981\u67e5\u8be2\u7684\u5355\u8bcd\u653e\u5728\u4e00\u4e2a\u6570\u7ec4\u91cc\uff0c\u8fdb\u884c\u6392\u5e8f\uff08\u4e0d\u53e6\u5916\u52a0\u6570\u7ec4\u5176\u5b9e\u4e5f\u53ef\u4ee5\uff0c\u4f46\u8fd9\u4e48\u5199\u5bb9\u6613\u7406\u89e3\uff09\n\t\t\tp[i]=a[i].s;\n\t\t}\n\t}\n\tsort(p,p+n);//\u6700\u6fc0\u52a8\u4eba\u5fc3\u7684sort\u6392\u5e8f\uff0c\u5c06\u786e\u5b9a\u7684\u5355\u8bcd\u6309\u5b57\u5178\u5e8f\u6392\u597d\n\tfor(int i=1;i<=n;i++){\n\t\tif(p[i]>=\"a\" && p[i]<=\"z\"){//\u56e0\u4e3a\u9898\u76ee\u4e2d\u63d0\u5230\u6240\u6709\u5355\u8bcd\u7684\u5b57\u6bcd\u90fd\u4e3a\u5c0f\u5199\u5b57\u6bcd\uff08\u5982\u679c\u6ca1\u4e86if(p[i]>=\"a\" && p[i]<=\"z\")\u53ef\u80fd\u4f1a\u6709\u5f88\u591a\u6362\u884c\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9009\u62e9\u5c0f\u5199\u5b57\u6bcd\u8f93\u51fa\uff09\n\t\t\tcout<<p[i]<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1578112608,
        "uid": 80976,
        "name": "\u534a\u7b19\u3001\u51e1\u5c18",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1628 \u3010\u5408\u5e76\u5e8f\u5217\u3011"
    },
    {
        "content": "\u53c2\u8003\u697c\u4e0b\u5927\u4f6c\u7684\u5b57\u5178\u6811\u9898\u89e3,\u6211\u6211\u6765\u8d21\u732e\u4e00\u4e2a\u6570\u7ec4\u7248\u7684\u5b57\u5178\u6811.\n\n\u7531\u4e8e\u6570\u636e\u975e\u5e38\u6c34,\u7406\u8bba\u4e0a\u6839\u672c\u4e0d\u591f\u76841e6\u4e2a\u6811\u8282\u70b9\u4e5fA\u6389\u4e86\u8fd9\u9053\u9898\n\n\u5177\u4f53\u64cd\u4f5c\u5c31\u662f\u628a\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u90fd\u63d2\u5230\u5b57\u5178\u6811\u91cc,\u5728\u9898\u76ee\u8981\u6c42\u7684\u8282\u70b9\u5904dfs\u4e00\u904d\u6240\u6709\u5b50\u6811,\n\ndfs\u5b50\u6811\u524d\u628a\u8be5\u5b50\u6811\u6839\u8282\u70b9\u7684\u5185\u5bb9push\u8fdb\u6808,\n\ndfs\u5b8c\u4e86\u518dpop\u51fa\u7ad9\n\n\u9047\u5230\u672b\u5c3e\u6807\u8bb0\u65f6\u5c31\u628a\u6808\u5185\u7684\u5b57\u7b26\u4e32\u8f93\u51fa\u4e00\u904d\n\n\u4e0b\u9762\u662f\u4ee3\u7801\n\n```cpp\n#include<stdio.h>\n#include<string.h>\n#define N 1000000\nint n;\nint ch[N][26],cnt[N],size;\nchar s[105],len;\nvoid insert() {\n    int t=0;\n    for(int i=0;i<len;i++) {\n        int &son=ch[t][s[i]-'a'];\n        if(son==-1) son=++size;\n        t=son;\n    }\n    cnt[t]++;\n}\nvoid dfs(int t) {\n    while(cnt[t]--) {\n        for(int i=0;i<len;i++) putchar(s[i]);\n        puts(\"\");\n    }\n    for(int i=0;i<26;i++) {\n        if(~ch[t][i]) {\n            s[len++]=i+'a';\n            dfs(ch[t][i]);\n            len--;\n        }\n    }\n}\nvoid predfs() {\n    int t=0;\n    for(int i=0;i<len;i++) {\n        t=ch[t][s[i]-'a'];\n        if(t==-1) return;\n    }\n    dfs(t);\n}\nint main() {\n    memset(ch,-1,sizeof ch);\n    scanf(\"%d\",&n);\n    while(~n--) {\n        scanf(\"%s\",s);\n        len=strlen(s);\n        ~n ? insert() : predfs();\n    }\n}\n```\n\u6700\u540e\u6211\u8981\u8bf4\u7684\u7684\u662f:\n\n\u8981\u6709\u4fe1\u4ef0\n\n\u6570\u636e\u5176\u5b9e\u5e76\u6ca1\u6709\u9898\u76ee\u6240\u7ed9\u7684\u90a3\u4e48\u5927\n",
        "postTime": 1512386148,
        "uid": 49920,
        "name": "\u8e72\u5728\u4e1b\u4e2d\u7b11",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1628 \u3010\u5408\u5e76\u5e8f\u5217\u3011"
    },
    {
        "content": "~~\u524d\u9762\u51e0\u7bc7\u9898\u89e3\u5199\u7684\u592a\u70e6\u4e86~~\n\n\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u63d0\u53d6\u5b50\u4e32\u7684\u51fd\u6570\u2014\u2014substr\n[\u8be6\u7ec6\u4e86\u89e3](https://www.cnblogs.com/yongpan/p/7919527.html)\n\nsubstr(a,b)\n\na\u662f\u5b57\u4e32\u7684\u8d77\u59cb\u4f4d\uff0cb\u662f\u5b57\u4e32\u7684\u957f\u5ea6\n\n\u5e0c\u671b\u5927\u5bb6\u8bb0\u4f4f\n\n\u7528\u5b57\u7b26\u4e32\u6570\u7ec4\u8bfb\u5165\uff0c\u9996\u5148\u8981\u6392\u5e8f\uff0c\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u6309\u5b57\u5178\u5e8f\u8f93\u51fa\u7b54\u6848\uff0c\u7136\u540e\u679a\u4e3e\u6bcf\u4e2a\u5b57\u7b26\u4e32\uff0c\u63d0\u53d6\u5b57\u4e32\uff0c\u4e0eT\u6bd4\u5bf9\uff0c\u76f8\u540c\u5219\u8f93\u51fa\uff08\u5b57\u7b26\u4e32\u6216\u6570\u7ec4\u53ef\u4ee5\u76f4\u63a5\u4e92\u76f8\u6bd4\u8f83\uff09\n\n```cpp\n#include<iostream>\n#include<string.h>\n#include<algorithm>\nusing namespace std;\nint n;\nstring s[100007];\nstring t;\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\tcin>>s[i];\n\tcin>>t;\n\tsort(s+1,s+n+1);//\u8981\u6c42\u5b57\u5178\u5e8f\u5347\u5e8f\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tstring x=s[i].substr(0,t.size());//\u63d0\u53d6\u5b50\u4e32\n\t\tif(x==t)cout<<s[i]<<endl; //\u76f8\u540c\uff0c\u8f93\u51fa\n\t}\n    return 0;    \n}\n```\n",
        "postTime": 1565855262,
        "uid": 164840,
        "name": "zhaowangji",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1628 \u3010\u5408\u5e76\u5e8f\u5217\u3011"
    },
    {
        "content": "### \u770b\u5230\u8fd9\u4e2a\u9898\uff0c\u5c0f\u91d1\u7f8a\u7b2c\u4e00\u79d2\u7684\u53cd\u5e94\u5c31\u662f\uff1a  \n## \u4f18\u5148\u961f\u5217\u53ef\u89e3\uff01  \n\u770b\u5230\u697c\u4e0a\u67d0\u540c\u5b66\u4e00\u4e2a\u4e2a\u6bd4\u8f83\uff0c  \n### find()\u51fd\u6570\u662f\u65f6\u5019\u73b0\u8eab\u4e86\uff01  \n```cpp\nstring//\u7c7b\u578b\u5e93\n      //find\u5177\u4f53\u7528\u6cd5\u53ef\u4ee5\u81ea\u884c\u767e\u5ea6\n      //\u8fd9\u91cc\u4ec5\u8bf4\u8fd9\u91cc\u7684\u7528\u6cd5\uff08\u9003\uff09\n\u539f\u578b\uff1a\npublic size_type basic_string::find(const basic_string&str,size_type __pos = 0)const noexcept;\n/*\n\u8fd4\u56de\u4e00\u4e2a\u5b9a\u4f4d\u5668:pos(unsigned int pos)\n       \u6216\u8fd4\u56denpos(unsigned int npos=-1)\n\u73b0\u884cG++\u7248\u672c\u9002\u7528-1\u4ee3\u66ffnpos\u3002\n\u82f1\u8bed\u89e3\u91ca\uff1a\npos=position\u4f4d\u7f6e\nnpos=no position\u6ca1\u6709\u4f4d\u7f6e\uff0c\u5373\u6ca1\u6709\u8fd9\u4e2a\u5b50\u5b57\u7b26\u4e32\n*/\n```\n\n------------\n\n\u8fd8\u6709\u4e00\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u4e34\u65f6\u961f\u5217\u6765\u5b58\u4e00\u4e0b\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u3002  \n\u6700\u540e\uff0c\u6211\u770b\u5230dalao\u4f7f\u7528\u4e86\u4e00\u4e2a\u8ba1\u6570\u5668\u6765\u8f93\u51fa\uff0c\u5e76\u4e14\u8f93\u51fa\u90fd\u4f1a\u591a\u4e00\u4e2a\u56de\u8f66\uff0c  \n### \u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5\u6765\u907f\u514d\u8fd9\u4e2a\u591a\u56de\u8f66\u7684\u529e\u6cd5\u3002  \n~~juruo\u4e0d\u624d\uff0c\u60ed\u6127\u60ed\u6127~~\n\n------------\n\n#### Code:\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <queue>\nusing namespace std;\npriority_queue<string,vector<string>,greater<string> >qwq;\n/*\n\u4e00\u5f00\u59cb\u5c0f\u91d1\u7f8a\u6ca1\u6709\u6253\u91cc\u9762\u591a\u4f59\u7684\uff08\u4e0d\u770b\u9898\uff09\uff0c\n\u7ed3\u679c\u5c31\u662f\u4e0d\u770b\u9898\u7684\u540e\u679c\uff1a\u4e00\u7247WA\u7136\uff01\uff08\u8fd8\u4ea4\u4e863\u6b21\uff09\n*/\nqueue<string>qwq2;\n//\u4e34\u65f6\u7684\u961f\u5217\uff0c\u7528\u6765\u5b58\u653e\u8f93\u5165\u7684\u5b57\u7b26\u4e32\nint main()\n{\n//\u5c0f\u91d1\u7f8a\u6ca1\u6709\u7528\u8f93\u5165\u4f18\u5316\uff0c\u5efa\u8bae\u5927\u5bb6\u52a0\u4e0aiostream\u7684\u53d6\u6d88\u7f13\u5b58\u4f18\u5316\n\tint n;\n\tstring input,t;\n\tcin>>n;\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tcin>>input;\n\t\tqwq2.push(input);\n        //\u5b58\u5165qwq2\u91cc\n\t}\n\tcin>>t;//\u5b50\u5b57\u7b26\u4e32\n\twhile (!qwq2.empty())\n\t{\n\t\tinput=qwq2.front();\n\t\tqwq2.pop();\n\t\tif (input.find(t,0)==0)\n\t\t{//\u5f53\u5b50\u5b57\u7b26\u4e32\u4f4d\u4e8e\u7236\u5b57\u7b26\u4e32\u7684\u6700\u524d\u7aef\u65f6\n\t\t\tqwq.push(input);\n         //\u538b\u5165\u4f18\u5148\u961f\u5217\n\t\t}\n\t}\n\twhile (!qwq.empty())\n\t{//\u5f53\u4f18\u5148\u961f\u5217\u4e0d\u7a7a\u7684\u65f6\u5019\uff0c\u5c3d\u60c5\u8f93\u51fa\u5c31\u662f\n\t\tinput=qwq.top();\n\t\tqwq.pop();\n        //\u5148\u53d6\u51fa\u4e00\u4e2a\u5143\u7d20\n\t\tif (!qwq.empty())\n\t\t{//\u5982\u679c\u91cc\u9762\u8fd8\u6709\u5143\u7d20\uff0c\u5c31\u8f93\u51fa\u6362\u884c(endl)\n\t\t\tcout<<input<<endl;\n\t\t}\n\t\telse\n\t\t{//\u7a7a\u4e86,\u5c31\u53ea\u8f93\u51fa\u5b57\u7b26\u4e32\uff0c\u907f\u514d\u6700\u540e\u7684\u6362\u884c\n\t\t\tcout<<input;\n\t\t}\n        //\u8fd9\u6837\u5c31\u7b80\u5355\u7684\u907f\u514d\u4e86\u4e0a\u8ff0\u6700\u540e\u4e00\u4e2a\u95ee\u9898\n\t}\n\treturn 0;\n}\n```\n# ~~\u867d\u7136\uff0c\u5361\u6362\u884c\u7684\u51fa\u9898\u4eba\u53ef\u4ee5\u53bb\u4e16\u4e86~~  \n### \u5173\u4e8estring\u5728\u4f18\u5148\u961f\u5217\uff08\u6216sort\uff09\u91cc\u7684\u6392\u5e8f\uff0c  \n### \u662f\u6309\u7167string\u91cd\u8f7d\u7684\u2018<\u2019\u53f7\uff0c  \n### \u81ea\u5e26\u5b57\u5178\u5e8f\u548c\u957f\u5ea6\u6bd4\u8f83\uff0c\u6240\u4ee5\u4f18\u5148\u961f\u5217\uff08\u6216sort\uff09\u53ef\u89e3\uff01\n\u8fd9\u7bc7\u9898\u89e3\u5e94\u8be5\u662f\u5199\u9898\u89e3\u7684OIER\u4eec\u6700\u6807\u51c6\u7684\u4e86\uff1f  \n~~\u7b80\u5355\u6613\u61c2\uff0cjuruo\u6c42\u8fc7\uff0c\u6572\u4ee3\u7801\u9898\u89e3\u5f88\u7d2f\uff01~~",
        "postTime": 1546946465,
        "uid": 122927,
        "name": "Jelly_Goat",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P1628 \u3010\u5408\u5e76\u5e8f\u5217\u3011"
    },
    {
        "content": "# \u672c\u849f\u84bb\u7684\u7b2c\u4e8c\u7bc7\u9898\u89e3\n\u770b\u5230\u5404\u5927\u4f6c\u4e0d\u662f\u7528trie\u5c31\u662f\u7528\u961f\u5217\u7b49\u7b49\u8d3c\u725b\u7684\u5f3a\u5927\u7684\u4e1c\u4e1c\uff0c\u7f6e\u9876\u7684\u5927\u4f6c\u8fd8\u7528find\u51fd\u6570\uff0c\u6b64\u849f\u84bb\u770b\u5f97\u745f\u745f\u53d1\u6296\uff0c\u4eca\u65e5\u6211\u53d1\u4e00\u4e2a\u54b1\u4eec\u849f\u84bb\u5bb6\u65cf\u80fd\u770b\u61c2\u7684\u9898\u89e3\u3002  \n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014  \n\n\u7b2c\u4e00\u8282\uff1a\u8bfb\u5165  \ncin\uff0c\u53c8\u6ca1\u7a7a\u683c\u3002\u5982\u679c\u8981\u7528getline\u7684\u8bdd\u6ce8\u610f\u8981\u591a\u52a0\u4e00\u4e2a\uff0c\u5438\u6536\u6362\u884c\u7b26\uff08\u5426\u5219\u4f60\u4f1aWA\u7684\u8000\u773c\uff09\u3002\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014  \n\n\u7b2c\u4e8c\u8282\uff1a\u6392\u5e8f  \nsort\u3002\u8fd9\u91cc\u89e3\u91ca\u4e00\u4e0b\u5b57\u7b26\u4e32\u7684\u5927\u5c0f\u6bd4\u8f83\u9ed8\u8ba4\u5c31\u662f\u5b57\u5178\u5e8f\u3002\u5b57\u5178\u5e8f\u7684\u610f\u601d\u5c31\u662f\u4ece\u7b2c\u4e00\u4e2a\u6bd4\u8f83ASCLL\u7801\u503c\uff0c\u5982\u679c\u4e00\u6837\u6bd4\u8f83\u6b21\u9ad8\u4f4d\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002    \n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014  \n\n\u7b2c\u4e09\u8282\uff1a\u67e5\u627e    \n\u67e5\u627e\u5e94\u8be5\u662f\u8fd9\u9898\u7684\u91cd\u70b9\u5427\u3002\u8bf4\u4e00\u4e0bstring\u4e5f\u53ef\u4ee5\u5f53char\u6570\u7ec4\u4f7f\u7528\uff0c\u800cstring\u6570\u7ec4\u53ef\u5f53\u6210char\u578b\u7684\u4e8c\u7ef4\u6570\u7ec4\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e00\u4e00\u679a\u4e3e\u524d\u7f00\u7684\u7b2ci\u4e2a\u5b57\u7b26\u548c\u5b57\u7b26\u4e32\u7684\u7b2ci\u4e2a\u5b57\u7b26\uff0c\u770b\u770b\u662f\u5426\u4e00\u6837\u3002\u5982\u679c\u5168\u4e00\u6837\uff0c\u5c31\u8f93\u51fa\u3002\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014 \n\n~~\u76f8\u4fe1\u6ce5\u840c\u90fd\u4e0d\u559c\u6b22\u770b\u4e0a\u9762\u7684\u4e00\u901a\u5206\u6790\uff0c~~\uff0c\u4ee3\u7801\u8d70\u8d77\u3002\n```cpp\n#include<bits/stdc++.h>\n#include<string>\n#include<algorithm>\nusing namespace std;\nint main()\n{\n\tint n;\n\tbool f;\n\tcin>>n;\n\tstring str[100001],t;\n\tfor(int p=1;p<=n;p++)cin>>str[p];\n\tcin>>t;\n\tsort(str+1,str+n+1);//\u5b57\u5178\u5e8f\u6392\u5e8f\n\tfor(int p=1;p<=n;p++)\n\t{\n\t\tf=1;//\u6807\u8bb0\u4e00\u4e0d\u4e00\u6837\u7684\u6807\u5fd7\n\t\tfor(int i=0;i<=t.size()-1;i++)\n\t\t{\n\t\t\tchar ch1=str[p][i];\n\t\t\tchar ch2=t[i];\n\t\t\tif(ch1!=ch2){f=0;break;}//\u5982\u679c\u4e0d\u4e00\u6837\uff0c\u679c\u65ad\u9000\u51fa\uff0c\u6807\u8bb0\u4e3a0\uff08\u4e0d\u4e00\u6837\uff09 \n\t\t}\n\t\tif(f==1)cout<<str[p]<<endl;//\u4e00\u6837\u7684\u64cd\u4f5c\n\t } \n\t return 0;\n}\n```\n\u867d\u7136\u8fd9\u4e2a\u9898\u89e3\u7528\u7684\u65f6\u95f4\u6bd4\u8f83\u957f\uff0c\u4f46\u8fd8\u662fAC\u4e86\u3002  \n\uff08\u7ba1\u7406\u5458\u5927\u5927\u6c42\u901a\u8fc7qwq\uff09",
        "postTime": 1581654479,
        "uid": 298549,
        "name": "SIXIANG32",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1628 \u3010\u5408\u5e76\u5e8f\u5217\u3011"
    },
    {
        "content": "## \u9898\u89e3\uff1a\n\n\u8fd9\u9053\u9898\u6709\u591a\u79cd\u65b9\u6cd5\uff1a\n\n\u5b57\u5178\u6811\uff08Trie\u6811\uff09\u3001\u6392\u5e8f\u3001\u4e8c\u53c9\u5806...\n\n\u6b63\u89e3\u5e94\u8be5\u662f\u5b57\u5178\u6811\uff08\u6765\u81ea\u6559\u7ec3\u548c\u5927\u4f6c\u7684\u6307\u70b9\uff09~~\u53ef\u60dc\u6211\u4e0d\u4f1a~~\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u4e00\u79cd\u6734\u7d20\u65b9\u6cd5\uff1a\n\n\u5904\u7406\u8f93\u5165\u7684\u5355\u8bcd\u548c\u524d\u7f00\u5173\u952e\u8bcd\u7684\u5339\u914d\uff0c\u5982\u679c\u5339\u914d\u4e0a\u4e86\u5c31\u52a0\u5165\u8981\u6392\u5e8f\u7684\u4e00\u4e2a\u6570\u7ec4\u4e2d\uff0c\u6ca1\u5339\u914d\u4e0a\u5c31\u4e0d\u7528\u7ba1\uff0c\u56e0\u4e3aC++\u7684sort\u51fd\u6570\u662f\u652f\u6301\u5b57\u7b26\u4e32\u6392\u5e8f\u7684\uff08\u5f53\u7136\u8981\u7528C++STL\u4e2d\u7684string\u5bb9\u5668\uff09\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u6b63\u786e\u6027\u3002\n\n\u800c\u4e14\u65f6\u95f4\u4e5f\u53ef\u4ee5\u8fc7\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u7528\u5806\u8fdb\u884c\u6570\u636e\u7ed3\u6784\u5904\u7406\u3002\u5b9e\u73b0\u539f\u7406\u548c\u4e0a\u9762\u90a3\u4e2a\u5927\u540c\u5c0f\u5f02\u3002\u56e0\u4e3a\u5c0f\u6839\u5806\uff08\u8fd9\u91cc\u7528\u4f18\u5148\u961f\u5217\u5b9e\u73b0\uff09\u4e5f\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5b57\u5178\u5e8f\u3002\n\n\u6bd4\u8f83\u4e00\u4e0b\u8fd9\u4e24\u79cd\u505a\u6cd5\uff1a\n\n\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6bd4\u8f83\u9ad8\uff0c\u4f46\u662f\u7801\u91cf\u5c11\uff0c\u5bb9\u6613\u60f3\u3002\u4e8c\u53c9\u5806\u7684\u5e38\u6570\u5927\uff0c\u5982\u679c\u4e0d\u5f00O2\u7684\u8bdd\u5947\u6162\u65e0\u6bd4\u5bb9\u6613\u88ab\u5361\uff0c\u4f46\u5927\u591a\u6570\u65f6\u5019\u8981\u66f4\u4f18\u79c0\u4e00\u4e9b\u3002~~\u800c\u4e14\u53ef\u4ee5\u7528\u4e8e\u88c5b~~\u3002\n\n\u4ee3\u7801\uff1a\n\n```c++\n#include<cstdio>\n#include<string>\n#include<queue>\n#include<vector>\n#include<iostream>\nusing namespace std;\nconst int maxn=1e5+1;\nint n;\nstring s[maxn],k;\npriority_queue<string,vector<string>,greater<string> >q;\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        cin>>s[i];\n        q.push(s[i]);\n    }\n    cin>>k;\n    for(int i=1;i<=n;i++)\n    {\n        int cnt=0;\n        string a=q.top();\n        q.pop();\n        for(int j=0;j<k.size();j++)\n            if(a[j]==k[j])\n                cnt++;\n        if(cnt==k.size())\n            cout<<a<<endl;\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1567162170,
        "uid": 175131,
        "name": "\u5085\u601d\u7ef4666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1628 \u3010\u5408\u5e76\u5e8f\u5217\u3011"
    },
    {
        "content": "# \u4e00\u9053\u6a21\u62df\u9898\u3002\n\n\u8fd9\u4e00\u9053\u9898\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a\n\n\u9996\u5148\uff0c\u9898\u76ee\u4e2d\u6709\u8bf4\u5230\u6309\u5347\u5e8f\u6392\u5217\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u4e22\u8fdb\u4e00\u4e2a\u5c0f\u6839\u5806\uff0c\u6700\u540e\u4e00\u4e2a\u4e00\u4e2a\u5904\u7406\u3002\n\n\u5173\u4e8e$string$\uff0c\u5b83\u6709\u4e00\u4e2a\u51fd\u6570\uff1a$substr (size_t pos = 0, size_t len)$\uff0c\u610f\u601d\u662f\u4ece$pos$\u5f00\u59cb\uff0c\u622a\u53d6\u4e00\u4e2a\u957f\u5ea6\u4e3a$len$\u7684\u5b50\u4e32\uff0c\u8fd4\u56de\u4e00\u4e2a$string$\uff0c\u8fd9\u6837\u7528\u6765\u622a\u53d6\u524d\u7f00\u5c31\u65b9\u4fbf\u7684\u591a\u3002\n\n\u5177\u4f53\u505a\u6cd5\u8be6\u89c1\u6ce8\u91ca\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\npriority_queue<string,vector<string>,greater<string> > q;//\u5b9a\u4e49\u4e00\u4e2a\u5185\u5bb9\u4e3astring\u7684\u5c0f\u6839\u5806\u3002\nint n;\nstring tmp,fr/*\u7528\u4e8e\u5b58\u50a8\u524d\u7f00*/;\nint main(){\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tcin>>tmp;\n\t\tq.push(tmp);//\u628a\u5b83\u6254\u8fdb\u53bb\n\t}\n\tcin>>fr;\n\tint len=fr.length();\n\twhile(!q.empty()){//\u4e00\u4e2a\u4e00\u4e2a\u68c0\u9a8c\n\t\tstring a=q.top();\n\t\tq.pop();\n\t\tif(a.substr(0,len)/*\u4ece\u5934\u5f00\u59cb\uff0c\u622a\u53d6\u4e00\u4e2a\u957f\u5ea6\u4e3afr\u957f\u5ea6\u7684\u524d\u7f00\u5e76\u5224\u65ad*/==fr) cout<<a<<endl;//\u6bd4\u8f83\u6210\u529f\u5c31\u8f93\u51fa\n\t}\n\treturn 0;\n}\n```\n\n\u8fd9\u4e5f\u662f\u5904\u7406\u5b57\u7b26\u4e32\u7684\u4e00\u4e2a\u597d\u65b9\u6cd5\u3002",
        "postTime": 1556170008,
        "uid": 138061,
        "name": "la_un_ty",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1628 \u3010\u5408\u5e76\u5e8f\u5217\u3011"
    },
    {
        "content": "\u8fd9\u9898 \u5f88 \u7b80\u5355\uff0c\u7eaf\u6a21\u62df\n\n\u5927\u4f53\u601d\u60f3\u4e3a \uff1a\n\u6bcf\u6b21 \u628a\u7528\u5230\u7684\u5b57\u7b26\u4e32 \u548c \u6807\u51c6 t \u6bd4\u8f83 \n\n\u7528 \u8ba1\u6570\u5668 ans \u6765 \u8868\u793a \u4ed6\u4eec\u7684\u76f8\u4f3c\u5ea6\n\n\u6700\u540eans \u5982\u679c \u7b49\u4e8e t\u7684\u957f\u5ea6 \n\n\u5373\uff1a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u524d\u7f00\u7b26\u5408 t \n\n\u518d\u8bbe\u7f6e\u4e00\u4e2a \u8f93\u51fa\u6570\u7ec4put\n\n\u628a\u6bcf\u6b21\u7684 \u5224\u65ad\u597d\u7684 \u5b57\u7b26\u4e32 \u653e\u8fdb\u53bb\uff0c\u6ce8\u610f\u4e0b\u6807\u7684\u521d\u59cb\u5750\u6807\n\n\u6700\u540e\u628a put \u7528 sort \u6392\u5e8f\u4e00\u4e0b\n\nsort \u662f\u4e2a\u597d\u4e1c\u897f\uff0c\u5b83\u53ef\u4ee5\u4e3a\u6211\u4eec\u8fdb\u884c\u5b57\u5178\u5e8f\u6392\u5e8f\n\n\u5c24\u5176\u6ce8\u610f \u4e0b\u6807 \u4e0e \u5b57\u7b26\u4e32 \u957f\u5ea6 \u7684\u5173\u7cfb\n\n\u4e0b\u6807\u53ef\u4ee5\u4ece 1 \u5f00\u59cb\uff0c\u4f46\u662f \u5b57\u7b26\u4e32\u7b2c\u4e00\u4e2a\u5b57\u7b26 \u786e\u662f\u4ece 0 \u5f00\u59cb\n\n    \n    \n    #include <cstdio>\n    #include <iostream>\n    #include <algorithm>\n    #define SM 402600\n\n    int n , len , y = 1 ;\n    std :: string t , a[SM] , put[SM] ;\n\n    int main () {\n        scanf ( \"%d\" , &n ) ;\n        for ( int i = 1 ; i <= n ; i ++ )\n            std :: cin >> a[i] ;\n        std :: cin >> t ;\n        len = t.length() ;\n        for ( int i = 1 ; i <= n ; i ++ ) {\n            int ans = 0 ;\n            for ( int j = 0 ; j <= len - 1 ; j ++ ) {\n            \t// \u5c24\u5176\u6ce8\u610f j \u521d\u59cb \u4e3a 0\n                // \u8981 \u5faa\u73af\u5230 len\u7684\u524d\u4e00\u4f4d\n                if ( a[i][j] == t[j] )\n                    ans ++ ;\n                if ( ans == len ) {\n                    put[y] = a[i] ;\n                    y ++ ;\n                }\n            }\n        }\n        std :: sort ( put + 1 , put + y + 1 ) ;\n        for ( int i = 2 ; i <= y ; i ++ )\n            std :: cout << put[i] << std :: endl ;\n        return 0 ;  \n    } \n    \nPS : \u4e0d\u8981\u5410\u69fd\u4e2a\u4eba\u4ee3\u7801\u98ce\u683c\n\n\u5c0f\u7ed3 \uff1a \n\n  \tstd :: \n\u662f\u4e2a \u597d\u4e1c\u897f\n\n\u4e0d\u7528 \n\n\tusing namespace std ;\n\u7684\u8bdd\n\n\u9700\u8981 \u5728 \u53d8\u91cf\u524d \u52a0\u4e0a \u8fd9\u4e2a \u4e1c\u897f\n\n#  ***\u91cd\u8981\u7684\u4e8b\u60c5\u8bf4\u4e09\u904d \uff1a \u6ce8\u610f 1 \u4e0e 0***\n#  ***\u5b83 \u4f1a\u5bb3\u6b7b\u4f60 \u7684***\n#  ***\u7b2c\u4e00\u6b21 \u63d0\u4ea4 \u4e0b\u6807 \u641e\u9519 0 \u4e0e 1 \uff0c \u7206\u96f6 ***",
        "postTime": 1538563402,
        "uid": 58324,
        "name": "altar",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1628 \u3010\u5408\u5e76\u5e8f\u5217\u3011"
    },
    {
        "content": "\u6211\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u6807\u7b7e\u91cc\u5199\u201c\u4e8c\u53c9\u5806\u201d\u3002\n\n\u8fd9\u9053\u9898\u975e\u5e38\u7b80\u5355\uff0c\u6392\u4e00\u4e0b\u5e8f\u3001\u5224\u65ad\u524d\u7f00\u5c31\u884c\u4e86\uff0c\u4e5f\u6ca1\u6709\u9677\u9631\u3002\n\n\u4e0d\u8981\u88ab**\u5b57\u5178\u5e8f**\u6240\u8ff7\u60d1\uff0c\u53ea\u7528\u4e00\u4e2asort\u6392\u5e8f\u5c31\u53ef\u4ee5\u4e86\u3002~~\u4e0d\u4f1asort\u6392\u5e8f\u7684\u849f\u84bb\u5c31\u4e0d\u8981\u5b66\u4e60\u4e86~~\n\n~~\u672c\u4eba\u53ea\u7528\u4e865\u5206\u949f\u6572\u51fa\u4ee3\u7801~~\n\n\u5e9f\u8bdd\u4e0d\u8bf4\uff0c\u8d34\u4e0a\u4ee3\u7801\u3002\n```\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<string>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n#include<stack>\n#include<vector>\n#include<map>\n#include<set>//\u4e00\u5927\u5806\u5934\u6587\u4ef6\nusing namespace std;\nstring a[100001],b;//\u6240\u6709\u7684\u5b57\u7b26\u4e32\u3001\u524d\u7f00\nint l,n;//\u957f\u5ea6\u3001\u4e2a\u6570\nint main()\n{\n    cin>>n;//\u8f93\u5165\u4e2a\u6570\n    for(int i=0;i<n;i++)\n        cin>>a[i];\n    cin>>b;//\u8f93\u5165\u524d\u7f00\n    sort(a,a+n);//\u6392\u5e8f\u5b57\u7b26\u4e32 \n    l=b.length();\n    for(int i=0;i<n;i++)\n        if(a[i].substr(0,l)==b)//\u5224\u65ad\u662f\u5426\u7b26\u5408\u8981\u6c42\n            cout<<a[i]<<endl;//\u8f93\u51fa\n    return 0;\n}\n```\n\u671b\u901a\u8fc7\n\n\u4e0d\u8981\u6284\u4ee3\u7801",
        "postTime": 1538396811,
        "uid": 58731,
        "name": "\u542c\u53d6TLE\u58f0\u4e00\u7247",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1628 \u3010\u5408\u5e76\u5e8f\u5217\u3011"
    },
    {
        "content": "\u5404\u79cd\u5927\u4f6c\u7684\u5b57\u5178\u6811\uff0c\u4f18\u5148\u961f\u5217\u4e4b\u7c7b\u7684\u770b\u7684\u6211\u4e00\u9635\u53d1\u51c9\n\n\u4e8b\u5b9e\u4e0a\uff0cAC\u8fd9\u9053\u9898\u53ea\u9700\u8981\u6a21\u62df+\u6392\u5e8f\u5373\u53ef\n\n\u5177\u4f53\u505a\u6cd5\u5982\u4e0b\uff1a\n\n1. \u7528map\u5b58\u50a8t\uff0cmap\u76f8\u5f53\u4e8e\u54c8\u5e0c\uff08\u6ca1\u5b66\u8fc7\u4e5f\u6ca1\u5173\u7cfb\uff09\uff0c\u76f8\u5f53\u4e8e\u4ee5\u5b57\u7b26\u4e32\u4e3a\u4e0b\u8868\u5b58\u50a8\u67d0\u4e2a\u6570\u503c\uff0c\u5b9a\u4e49\u65b9\u5f0f\u5982\u4e0b\uff1amap<\u4e0b\u6807\u7c7b\u578b\uff0c\u50a8\u5b58\u6570\u636e\u7c7b\u578b>\uff1b\u4e8b\u5b9e\u4e0a\uff0c\u5f00map\u6570\u7ec4\u53ea\u7528\u4e861\u4e2a\u7a7a\u95f4\uff0c\u4f46\u5374\u7ed9\u4e86\u6211\u4eec\u6781\u5927\u7684\u65b9\u4fbf\n\n2. sort\uff1a\u4e3a\u4e86\u4f7f\u5b57\u5178\u5e8f\u4ece\u5927\u5230\u5c0f\uff0c\u56e0\u6b64\u9700\u8981\u6392\u5e8f\u3002\n\n3. \u6bcf\u6b21\u53ea\u8981\u5224\u65advis[a[i].substr(0,t.length())]\u662f\u5426\u4e3a\u771f\uff0c\u5373\u662f\u5426\u6ee1\u8db3\u9898\u76ee\u6240\u8bf4\u7684\u8981\u6c42\u5373\u53ef\uff1bsubstr\u6307\u7684\u662f\u53d6\u5b57\u7b26\u4e32\u7684\u51fd\u6570\uff08s.substr(x,y)\u8868\u793a\u5728\u5b57\u7b26\u4e32s\u4e2d\u4ee5\u7b2cx\u4e2a\u4f4d\u7f6e\u4e3a\u8d77\u59cb\u70b9\u53bby\u4e2a\u5b57\u7b26\uff09\uff0c\u800ca[i].substr(0,t.length())\u5219\u662f\u53bb\u53d6a[i]\u7684\u524d\u957f\u5ea6\u4e3at.length()\u7684\u5b57\u7b26\u4e32\uff0cvis\u4e3a\u4e0a\u8ff0map\uff0c\u5373\u5982\u679c\u53d6\u7684\u5b57\u7b26\u4e32\u548ct\u76f8\u540c\u5219\u8f93\u51fa\u3002\n\n\n------------\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int n;\n    map<string,int>vis;\n    string t,a[10100]={};\n    cin>>n;\n    for (int i=1;i<=n;i++)\n        cin>>a[i];\n    cin>>t;\n\tvis[t]=1;\n\tsort(a+1,a+n+1);\n\tfor (int i=1;i<=n;i++)\n\t\tif (vis[a[i].substr(0,t.length())])\n\t\t\tcout<<a[i]<<endl;\n\treturn 0;\n} \n```\n",
        "postTime": 1522730809,
        "uid": 33243,
        "name": "\u5c0f\u5468\u732a\u732a",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1628 \u3010\u5408\u5e76\u5e8f\u5217\u3011"
    },
    {
        "content": "[multiset]\u7cfb\u7edf\u81ea\u5e26\u5b57\u5178\u6811\uff0c\u53ea\u9700\u5c06\u6bcf\u4e00\u4e2a\u5b57\u7b26\u4e32insert\u5165\u8fd9\u4e2a\u5bb9\u5668\u5373\u53ef\u81ea\u52a8\u6309\u5b57\u5178\u987a\u5e8f\u6392\u5217\u3002\n\n\tmultiset<string> str;\n\twhile(n--)\n\t{\n\t\tcin>>temp;\n\t\tstr.insert(temp);\n\t}\n    \n[\u5224\u65ad\u524d\u7f00]\n\u53ea\u9700\u8981\u77e5\u9053\u524d\u7f00\u7684\u957f\u5ea6len = temp.size()\uff0c\u7136\u540estring(p->begin(),p->begin()+len)==temp\u5373\u53ef\u3002\n\n\tsize_t len = temp.length();\n\t\n\tfor(auto p = str.begin(); p != str.end(); ++p)\n\t{\n\t\tif(string(p->begin(),p->begin()+len) == temp)\n\t\t\tcout<<*p<<endl;\n\t}",
        "postTime": 1517920988,
        "uid": 85765,
        "name": "Salmon_lee",
        "ccfLevel": 0,
        "title": "\u672c\u9898\u7684STL\u89e3\u6cd5"
    },
    {
        "content": "###\u8fd9\u662f\u4e00\u9898\u6bd4\u8f83\u6c34\u7684\u5b57\u7b26\u4e32\u6a21\u62df\uff0c\u8fd9\u91cc\u7528\u5230\u7684\u662fstring\uff0c\u4e0d\u8fc7\u4e5f\u53ef\u4ee5\u7528char\uff0c\u4f46\u53ef\u80fd\u6bd4\u8f83\u9ebb\u70e6\uff0c\u56e0\u4e3achar\u4e0d\u80fdsort\n\n###\u4ee3\u7801\u5949\u4e0a\uff1a\n\n\n\n```cpp\n#include<bits/stdc++.h> //\u4e07\u80fd\u5934\u6587\u4ef6\n#define f(i,j,n) for(i=j;i<=n;i++) //for\u5faa\u73af\u7b80\u5199\uff0c\u4e2a\u4eba\u4e60\u60ef\u95ee\u9898\nusing namespace std; \nstring s[100005],t;\nint main()\n{\n    ios::sync_with_stdio(false); //cin\uff0ccout\u8f93\u5165\u8f93\u51fa\u4f18\u5316\uff0c\u5199c\u7684\u6ce8\u610f\u4e86\uff0c\u5199\u4e86\u8fd9\u53e5\u8bddscanf\uff0cprintf\uff0cgetchar\uff0cgets\u7b49\u662f\u7528\u4e0d\u4e86\u7684\n    int n,l,i,j; //\u57fa\u672c\u5b9a\u4e49\n    bool ok; //bool\u53d8\u91cf\u7528\u4e8e\u8868\u793a\u662f\u5426\u4e3a\u524d\u7f00\n    cin>>n; //\u8f93\u5165n\n    f(i,1,n)\n        cin>>s[i]; //\u8f93\u5165n\u4e2a\u5b57\u7b26\u4e32\n    sort(s+1,s+1+n); //\u9996\u5148\u6392\u5e8f\uff0cstring\u7684\u4f18\u52bf\u5c31\u4f53\u73b0\u5728\u8fd9\u91cc\n    cin>>t; //\u8f93\u5165\u5b57\u7b26\u4e32t\n    l=t.size(); //\u6d4b\u957f\n    f(i,1,n) //\u91cd\u70b9\u5faa\u73af\u8bed\u53e5\n    {\n        ok=1; //\u6bcf\u6b21\u66f4\u65b0ok\u7684\u503c\u4e3a1\n        f(j,0,l-1)\n            if(s[i][j]!=t[j]) //\u53ea\u8981\u4e24\u8005\u4e0d\u76f8\u7b49\uff0c\u5c31\u628aok\u53d8\u6210\u5047\n            {\n                ok=0;\n                break;\n            }\n        if(ok) //\u5982\u679c\u6574\u4e2a\u5faa\u73af\u90fd\u6ca1\u6709\u4e0d\u540c\u70b9\uff0c\u5c31\u8bf4\u660et\u662f\u6b64\u5b57\u7b26\u4e32\u7684\u524d\u7f00\uff0c\u6b64\u65f6\u8f93\u51fa\n            cout<<s[i]<<endl;\n    }\n    return 0; //\u534e\u4e3d\u4e3d\u5730\u7ed3\u675f\n}\n\n```",
        "postTime": 1509116291,
        "uid": 33068,
        "name": "Hamster_Air",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1628 \u3010\u5408\u5e76\u5e8f\u5217\u3011"
    },
    {
        "content": "\u5b89\u5229\u4e00\u53d1\u81ea\u5df1\u7684\u535a\u5ba2\uff1a[http://www.cnblogs.com/OIerShawnZhou/](http://www.cnblogs.com/OIerShawnZhou/)\n\n\uff08\u6211\u5e73\u5e38\u5199\u7684\u9898\u89e3\u90fd\u4f1a\u5f80\u535a\u5ba2\u91cc\u53d1\uff0c\u6b22\u8fce\u5404\u4f4d\u5927\u4f6c\u524d\u6765\u62cd\u7816\uff09\n\n\u770b\u4e86\u770b\u9898\u89e3\uff0c\u600e\u4e48\u5927\u5bb6\u5199\u7684\u90fd\u8fd9\u4e48\u9ebb\u70e6\u3002\u3002\u3002\u3002\u6211\u7528STL\u968f\u624b\u778e\u641e\u4e86\u4e00\u4e0b\u4e00\u904d\u5c31\u8fc7\u4e86\u3002\u3002\n\n\u8fd9\u662f\u4e00\u4e2a\u5077\u61d2\u800c\u4e0d\u7528\u5c0f\u6839\u5806\u7684\u505a\u6cd5\u3002\u3002\n\n\u6211\u4eec\u79bb\u7ebf\u5904\u7406\u8fd9\u4e9b\u5355\u8bcd\u3002\u8bfb\u5165\u4e4b\u540e\u5148\u626b\u4e00\u904d\uff0c\u5982\u679c\u626b\u5230\u7684\u5355\u8bcd\u524d\u7f00\u4e0e\u7ed9\u5b9a\u7684\u76f8\u540c\u5c31\u538b\u5230\u4f18\u5148\u961f\u5217\u91cc\u9762\uff0c\u7136\u540e\u4f9d\u6b21\u5f39\u51fa\uff0c\u6bcf\u6b21\u5f39\u51fa\u4f7f\u8ba1\u6570\u5668cnt++\u3002\n\n\u7136\u540e\u8981\u600e\u4e48\u529e\uff1f\u4ececnt\u52300\u5012\u7740\u679a\u4e3e\uff0c\u8f93\u51fa\u5c31\u597d\u4e86\u3002\u3002\u3002\n\n\u6ca1\u6709\u60f3\u8c61\u4e2d\u90a3\u4e48\u96be\u3002\u3002\u3002\u3002\u771f\u7684\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#include <string>\n#define maxn 100005\nusing namespace std;\nint n;\nstring words[maxn];\nstring outwords[maxn];\npriority_queue<string> q;\nstring st;\nint cnt;\n\nint main(){\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++)\n        cin >> words[i];\n    cin >> st;\n    for (int i=1;i<=n;i++){\n        if (words[i].substr(0,st.length()) == st)\n            q.push(words[i]);\n    }\n    while (!q.empty()){\n        outwords[++cnt] = q.top();\n        q.pop();\n    }\n    for (int i = cnt;i>=0;i--)\n        cout << outwords[i] << endl;\n    return 0;\n}\n```",
        "postTime": 1508676566,
        "uid": 20197,
        "name": "ShawnZhou",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1628 \u3010\u5408\u5e76\u5e8f\u5217\u3011"
    },
    {
        "content": "\n\n\n\n```cpp\n//\u9996\u5148\uff0c\u6211\u662f\u4e2a\u6e23\u6e23\uff0c\u6211\u6ca1\u7528\u90a3\u4e2a\u51fd\u6570\n//\u6211\u662f\u81ea\u5df1\u5199\u4e86\u4e2a\u5224\u65ad\u51fd\u6570\n//\u8fd8\u6709\uff0c\u6211\u8ba4\u4e3a\u53ef\u4ee5\u4f18\u5316\uff0c\u5c31\u662f\u5728\u627e\u5230\u7b2c\u4e00\u4e2a\u5339\u914d\u7684\u4ee5\u540e\u5c31\u7528\u4e00\u4e2awhile\u8bed\u53e5\u5f80\u540e\u627e\n//\u77e5\u9053\u627e\u5230\u4e00\u4e2a\u4e0d\u5339\u914d\u7684\u5c31\u76f4\u63a5\u8df3\u51fa\n//\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u4f1a\u66f4\u4f4e\n//\u4ee3\u7801\u5982\u4e0b\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<string>\nusing namespace std;\nint n,len;\nstring s[100001];\nstring sx;\nbool check(string x)//\u5224\u65ad\u51fd\u6570\n{\n    for(int i=0;i<len;i++)\n    {\n        if(x[i]!=sx[i])  return false;\n    }\n    return true;\n}\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++)  cin>>s[i];\n    sort(s+1,s+n+1);\n    cin>>sx;\n    len=sx.size();\n    for(int i=1;i<=n;i++)\n    {\n        if(check(s[i])==1)\n        {\n            cout<<s[i]<<endl;\n            int j=i+1,sum=1;\n            while(check(s[j])==1&&j<=n)//\u8fd9\u5c31\u662f\u4f18\u5316\u7684\u6838\u5fc3\n            {\n                cout<<s[j]<<endl;\n                sum++;\n                j++;\n            }\n            break;\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1505393396,
        "uid": 46396,
        "name": "justin_cao",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1628 \u3010\u5408\u5e76\u5e8f\u5217\u3011"
    },
    {
        "content": "\u524d\u8a00\uff1a\u867d\u7136\u6211\u627f\u8ba4\u8fd9\u9898\u6839\u672c\u4e0d\u7528\u7528\u5806\u53bb\u505a\u3002\n\n\u4f46\u662f\uff0c\u8fd9\u5bf9\u4e8e\u4e00\u4e2a\u521a\u5b66\u4e60\u5806\u7684oier\u6765\u8bf4\uff0c\u503c\u5f97\u4e00\u505a\n\n\u5f53\u7136\uff0c\u8fd9\u91cc\u5e76\u4e0d\u5bf9\u6392\u5e8f\u6216\u8005trie\u6811\u8868\u793a\u6b67\u89c6\n\n\u5206\u6790\uff1a\n\n1.\u8fd9\u4e00\u9898\u7684\u7b2c\u4e00\u4e2a\u91cd\u70b9\u5728\u4e8e\uff0c\u5982\u4f55\u4ee5\u5b57\u5178\u5e8f\u8f93\u51fa\u3002\n\n2.\u4ee5\u5b57\u5178\u5e8f\u8f93\u51fa\uff0c\u8fd9\u6070\u597d\u7b26\u5408\u5c0f\u6839\u5806\u7684\u5b9a\u4e49\uff1a\n\n\u6839\u59cb\u7ec8\u6700\u5c0f\uff08\u5373\u5b57\u5178\u5e8f\u6700\u524d\uff09\n\n3.\u4e8e\u662f\uff0c\u95ee\u9898\u5c31\u53d8\u4e3a\u4e86\u4e00\u9053\u7b80\u5355\u7684\u5c0f\u6839\u5806\n\n4.\u4f46\u95ee\u9898\u662f\uff0c\u5b57\u7b26\u6570\u7ec4\u7684\u5806\uff0c\u5982\u4f55\u5b9e\u73b0\uff1f\n\n5.\u8fd9\u91cc\u6211\u4eec\u8981\u7528\u5230\u4e00\u4e2aSTL\uff1astring\u7c7b\uff0c\u5b8c\u7f8e\u5b9e\u73b0\u8be5\u9898\n\n6.\u4f46\u8fd8\u6709\u4e00\u4e2a\u91cd\u70b9\uff0cstring\u7c7b\u5982\u4f55\u5339\u914d\u524d\u7f00:\u5229\u7528find\u51fd\u6570\n\n\u5982\u679c\u6211\u4eec\u8981\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32s\u91cc\u9762\u5bfb\u627e\u6709\u6ca1\u6709\u524d\u7f00t\n\n\u90a3\u4e48\u53ea\u9700\u8981\u8fd9\u4e48\u5199:\n\n```cpp\nif(!s.find(t,0)); \n```\n\u6709\u540c\u5b66\u4f1a\u95ee\u4e86\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u5199?\n\n\u6211\u4eec\u9996\u5148\u5148\u770b\u4e00\u4e0bfind\u51fd\u6570\u7684\u539f\u578b\n\n```cpp\nsize_type find(const char *str, size_type index);\n//\u8fd4\u56destr\u5728\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff08\u4eceindex\u5f00\u59cb\u67e5\u627e\uff09\n``` \n\u5bf9\u4e8e\u4e0a\u9762\u90a3\u4e2aif\u8bed\u53e5\u7684\u89e3\u91ca\uff1a\n\n\u5728\u5b57\u7b26\u4e32s\u4e2d\u641c\u7d22\u5b57\u7b26\u4e32t,\u8fd4\u56det\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\n\n\u90a3\u4e48\u90a3\u4e2a'!'\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\n\n\u56e0\u4e3a\u6211\u4eec\u8981\u641c\u5bfb\u7684\u662f\u524d\u7f00\uff0c\u6240\u4ee5\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u5c31\u53ea\u80fd\u662f0\n\n```cpp\n#include<string>\n#include<iostream>\nusing namespace std;\nstring heap[100010],str[100010],t;\nint n,heap_size;\nvoid Swap(string &a,string &b){string tmp = a;a = b;b = tmp;}\nvoid put(string value){\n    heap[++heap_size] = value;\n    int now = heap_size,next;\n    while(now > 1){\n        next = now >> 1;\n        if(heap[next] <= heap[now]) return;\n        Swap(heap[next],heap[now]);\n        now = next;\n    }\n}\nstring get(){\n    string value = heap[1];\n    heap[1] = heap[heap_size--];\n    int now = 1,next;\n    while(now << 1 <= heap_size){\n        next = now << 1;\n        if(next < heap_size && heap[next + 1] < heap[next]) next++;\n        if(heap[now] <= heap[next]) break;\n        Swap(heap[next],heap[now]);\n        now = next;\n    }\n    return value;\n}\nint main(){\n    std::ios::sync_with_stdio(false);\n    //\u5173\u95edcin,cout\u4e0escanf,printf\u7684\u540c\u6b65\uff0c\u52a0\u901f\u6570\u636e\u8bfb\u5165 \n    cin >> n;\n    for(int i = 1;i <= n;i++) cin >> str[i];\n    cin >> t;\n    for(int i = 1;i <= n;i++)\n        if(!str[i].find(t,0))\n            put(str[i]);\n    while(heap_size) cout << get() << endl;\n    return 0;\n} \n```",
        "postTime": 1500537666,
        "uid": 19778,
        "name": "water_mi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1628 \u3010\u5408\u5e76\u5e8f\u5217\u3011"
    },
    {
        "content": "\u7528C++\u7684string\u7c7b+sort\u6392\u5e8f,\u8fd9\u9053\u9898\u8fd8\u662f\u633a\u7b80\u5355\u7684\n\n```cpp\n#include<bits/stdc++.h>\n#include<string>\nusing namespace std;\nstring a[100005],b;\nint main()\n{\n    int n,len;\n    cin>>n;\n    for(int i=1;i<=n;i++)\n        cin>>a[i];\n    sort(a+1,a+n+1);     //\u6309\u7167\u5b57\u5178\u987a\u5e8f\u6392\u5e8f,\u9ed8\u8ba4\u4ece\u5c0f\u5230\u5927\n        cin>>b;\n    len=b.size();                 //\u83b7\u5f97b\u7684\u957f\u5ea6\n    for(int i=1;i<=n;i++)\n        if(a[i].substr(0,len)==b) //\u6bd4\u8f83\u662f\u5426\u5339\u914d,\u82e5\u5339\u914d,\u5219\u8f93\u51fa\n            cout<<a[i]<<endl;  \n}\n```",
        "postTime": 1500468171,
        "uid": 36507,
        "name": "shijunfeng00",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1628 \u3010\u5408\u5e76\u5e8f\u5217\u3011"
    },
    {
        "content": "\u9996\u5148\u56de\u7b54\u697c\u4e0b\u7684\u95ee\u9898\uff0c\u4e0d\u7ba1\u662fnoip\uff0c\u8fd8\u662f\u7701\u9009\uff08\u53ea\u77e5\u9053zj\uff0c\u4e0d\u6562\u4e71\u8bb2\uff09\uff0csort\u90fd\u662f\u53ef\u4ee5\u7528\u7684\uff0c\u53ea\u8981\u5f00algorithm\u8fd9\u4e2a\u7cfb\u7edf\u5e93\u3002\n\n\u88ab\u697c\u4e0b\u5b57\u6bcd\u6570\u5927\u4f6c\u5413\u7684\u745f\u745f\u53d1\u6296\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<iostream>\n#include<cstring>\nusing namespace std; \nint n;\nstring sen[100000+10];\nchar word[100+10];\nint main(){\n    cin>>n;//cin\u8bfb\u5165\u5b57\u7b26\u4e32\u5f88\u597d\uff0c\u8bfb\u5230\u7a7a\u683c\u6216\u7a7a\u884c\u4e3a\u6b62\n    for (int i=1;i<=n;i++) cin>>sen[i];\n    cin>>word;\n    sort(sen+1,sen+n+1);//\u6211\u662f\u5148\u6392\u5e8f\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u91cd\u65b0\u538b\u5165\u4e00\u4e2a\u6570\u7ec4\u4e86\uff0c\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa\uff0c\u5982\u679c\u662f\u8981\u4ece\u5927\u5230\u5c0f\uff0c\u53ef\u4ee5\u6539\u6210sort(sen+1,sen+n+1,cmp) cmp\u4e3a\u81ea\u5b9a\u4e49\u7684\u4e00\u4e2abool\u51fd\u6570\uff0cbool cmp(int x,int y){return x>y},\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e86\u3002\n    int len=strlen(word);//\u6c42\u5b57\u7b26\u6570\u7ec4\u957f\u5ea6\n    for (int i=1;i<=n;i++){\n        bool p=true;//\u5224\u65ad\u662f\u5426\u4e3a\u524d\u7f00\n        for (int j=0;j<len;j++)    if (sen[i][j]!=word[j]){//\u7279\u522b\u6ce8\u610fc++\u7684\u5b57\u7b26\u4e32\u548c\u5b57\u7b26\u6570\u7ec4\u662f\u4ece0\u5f00\u59cb\u7684\n            p=false;\n            break;    \n        } \n        if (p==true) cout<<sen[i]<<endl;//\u5982\u679c\u662f\u524d\u7f00\u76f4\u63a5\u8f93\u51fa\uff0c\u56e0\u4e3a\u524d\u9762\u4ee5\u6309\u5b57\u5178\u5e8f\u6392\u597d\n    }\n}\n```",
        "postTime": 1499929931,
        "uid": 15232,
        "name": "Michael_Li",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1628 \u3010\u5408\u5e76\u5e8f\u5217\u3011"
    },
    {
        "content": "  \n    \n    \n      \n    \n    \n   \n    \n    \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\nusing namespace std;  //\u8be5\u9898\u5176\u5b9e\u53ea\u9700\u7528\u4e00\u4e2asort\u5c31\u53ef\u4ee5\u6392\u5e8f\u4e86\uff0c\u5b83\u4f1a\u81ea\u52a8\u5e2e\u4f60\u6309\u5b57\u5178\u987a\u5e8f\u6392\u597d\u5e8f\u3002\u800c\u4e14\u901f\u5ea6\u8fd8\u5f88\u5feb\u554a\uff0c192ms\uff0c\u54c8\u54c8\u54c8\u54c8\u54c8\uff0c\u5c31\u662f\u4e0d\u77e5\u9053\u8003\u8bd5\u7684\u65f6\u5019\u53ef\u4e0d\u53ef\u4ee5\u7528sort\u3002\nint main()\n{\n    bool t;\n    int n,i,l,j,m=0;\n    string s[100001],kk,a[100001];\n  cin>>n;\n    for(i=1;i<=n;i++)         //\u8f93\u5165\n      cin>>s[i];\n    cin>>kk;\nl=kk.length();   //\u957f\u5ea6\n    for(i=1;i<=n;i++)\n    {\n      t=true;\n      for(j=1;j<=l;j++)\n        if(s[i][j-1]!=kk[j-1]) t=false;  //\u7b5b\u9664\u8bcd\u5934\u4e0d\u7b26\u5408\u7684\u5355\u8bcd\n      if(t) a[++m]=s[i];    //\u628a\u7b26\u5408\u7684\u5355\u8bcd\u8ba1\u5165\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\u7ec4\n    }\n    sort(a+1,a+m+1);  //\u6392\u5e8f\u5566\n    for(i=1;i<=m;i++)\n      cout<<a[i]<<endl; //\u8f93\u51fa\n    return 0;\n    //\u603b\u7ed3\u4e00\u4e0b\uff0c\u5176\u5b9e\u8fd9\u4e2a\u505a\u6cd5\u5f88\u53d6\u5de7\uff0c\u53ea\u662f\u7ed9\u5927\u5bb6\u770b\u770b\u7684\n}\n```",
        "postTime": 1491479929,
        "uid": 27593,
        "name": "Hiki",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1628 \u3010\u5408\u5e76\u5e8f\u5217\u3011"
    },
    {
        "content": "\u5947\u5947\u602a\u602a\u7684\u505a\u6cd5\n\n\u95f2\u5f97\u65e0\u804a\u7528\u4f18\u5148\u961f\u5217\uff08\u5c0f\u6839\u5806\uff09\u505a\u5b57\u5178\u5e8f\n\n\u9010\u4e2a\u9010\u4f4d\u4e0et\u6bd4\u8f83\u4e5f\u80fd\u8fc7\n\n\u770b\u89c1\u6709\u4eba\u7528trie\u6811\u987f\u65f6\u5c31\u61f5\u903c\u4e86.\n\n\u6ce8\u89e3\u89c1\u4ee3\u7801\n\n```cpp\n#include<queue>\n#include<string>\n#include<vector>\n#include<iostream>\n#define N 100001  //\u6570\u636e\u8303\u56f4 \n#define S string  //\u65b9\u4fbf\u5b9a\u4e49 \nusing namespace std;\nint n,i,j;\nS t,s[N];\npriority_queue<S,vector<S>,greater<S> >q;  //\u5efa\u7acb\u5c0f\u6839\u5806 \u5373\u4f18\u5148\u961f\u5217 \nbool f;\nint main()\n{\n    cin>>n;\n    for (i=1;i<=n;i++)cin>>s[i];\n    cin>>t;\n    for (i=1;i<=n;i++)\n    {\n        f=0;  //\u6e05\u7a7a\u6807\u8bb0 \n        for (j=0;j<t.length();j++)if (s[i][j]!=t[j]){f=1;break;}  //\u9010\u4f4d\u5339\u914d \u5982\u679c\u5931\u914d\u4e86 \u5c31\u6807\u8bb0\u4e0a \u5e76\u9000\u51fa\u5faa\u73af \n        if (!f)q.push(s[i]); //\u5982\u679c\u6ca1\u88ab\u6807\u8bb0 \u5373\u4e3a\u5339\u914d\u6210\u529f \u5c06\u8be5\u5b57\u7b26\u4e32\u63a8\u8fdb\u5751\u4e2d \n    }\n    while (q.size())cout<<q.top()<<endl,q.pop(); //\u5c06\u4f18\u5148\u961f\u5217\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5b57\u7b26\u4e32\u8f93\u51fa \n    return 0;  //\u534e\u4e3d\u5730\u7ed3\u675f \n}\n```",
        "postTime": 1486386778,
        "uid": 14374,
        "name": "zhengrunzhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1628 \u3010\u5408\u5e76\u5e8f\u5217\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5176\u5b9e\u662f\u4e00\u9053\u5f88\u88f8\u7684Frie\u6811\u3002Frie\u6811\u53c8\u79f0\u5b57\u5178\u6811\uff0c\u529f\u80fd\u5c31\u662f\u50a8\u5b58\u5f88\u591a\u5355\u8bcd\u3002\u3002\u3002\uff08<--\u5e9f\u8bdd\uff09\uff08\u4f60\u53ef\u4ee5\u767e\u5ea6\u4e00\u4e0b\uff09\n\n\u5148\u653e\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<cstring>\nusing namespace std;\ninline void getstring(char *str){\n    char ch=0,sz=0;\n    while(!isalpha(ch)){\n        ch=getchar();\n    }\n    while(isalpha(ch)){\n        str[sz++]=ch;\n        ch=getchar();\n    }\n    str[sz]=0;\n}\nchar ans[110];int len=0;                                ans\u8bb0\u5f55\u8f93\u51fa\u7684\u7b54\u6848,len\u8bb0\u5f55ans\u7684\u957f\u5ea6\nclass FrieTree{\n```\npublic:\nFrieTree(){                                \u6784\u5efa\u6839\u8282\u70b9\u7684\u51fd\u6570\n\n```cpp\n            memset(subTree,0,sizeof(subTree));\n            ch=0;                                \u6839\u8282\u70b9\u4e0d\u50a8\u5b58\u503c\n            end=0;\n        }\n        FrieTree(int alpha){                            \u6784\u5efa\u53f6\u5b50\u8282\u70b9\u7684\u51fd\u6570\n            memset(subTree,0,sizeof(subTree));\n            ch=alpha+'a';                            \u53f6\u5b50\u8282\u70b9\u50a8\u5b58\u4e00\u4e2a\u5b57\u6bcd\n            end=0;\n        }\n        ~FrieTree(){                                \u6790\u6784\u51fd\u6570\uff08\u4e0d\u5199\u7528\u65f6\u66f4\u5c112333\uff09\n            ch=0;\n            end=0;\n            for(int i=0;i<26;i++){\n                if(subTree[i]){\n                    delete subTree[i];\n                }\n            }\n        }\n        inline void insert(char *str){                    \u5411\u6811\u91cc\u63d2\u5165\u4e00\u4e2a\u5355\u8bcd\n            if(*str==0){                            \u5982\u679c\u5355\u8bcd\u4e3a\u7a7a\n                end++;                            \u6807\u8bb0\uff1a\u5728\u8be5\u8282\u70b9\u6709\u4e00\u4e2a\u5355\u8bcd\u7ed3\u675f\n                return;\n            }\n            char str2[110];\n            strcpy(str2,str+1);                        \u5355\u8bcd\u5269\u4f59\u90e8\u5206\n            if(!subTree[*str-'a']){\n                subTree[*str-'a']=new FrieTree(*str-'a');\n            }\n            subTree[*str-'a']->insert(str2);                \u5c06\u5355\u8bcd\u5269\u4f59\u90e8\u5206\u63d2\u5165\u5b50\u6811\n        }\n        inline bool check_and_output(char *str){            \u68c0\u67e5\u4ee5str\u4e3a\u524d\u7f00\u7684\u5b57\u7b26\u4e32\u662f\u5426\u5b58\u5728\u5e76\u8f93\u51fa\n            if(*str==0){\n                output();                            \u8f93\u51fa\n                return true;\n            }\n            if(ch){                                \u5982\u679c\u4e0d\u662f\u6839\u8282\u70b9\n                ans[len++]=ch;                    \u8f93\u51fa\u5b57\u7b26\u4e32\u4e2d\u52a0\u5165ch\n            }\n            char str2[110];\n            strcpy(str2,str+1);                        \u5b57\u7b26\u4e32str\u5269\u4f59\u90e8\u5206\n            if(!subTree[*str-'a']){                        str\u4e0d\u662f\u4efb\u4f55\u4e00\u4e2a\u5355\u8bcd\u7684\u524d\u7f00\n                return false;\n            }\n            return subTree[*str-'a']->check_and_output(str2);        \u7ee7\u7eed\u68c0\u7d22\uff5e\n        }\n        inline void output(){\n            ans[len++]=ch;                            \u5c06ch\u52a0\u5165\u8f93\u51fa\u5b57\u7b26\u4e32\n            if(end){                                    \u5982\u679c\u6709\u5355\u8bcd\u5728\u6b64\u8282\u70b9\u7ed3\u675f\n                for(int i=1;i<=end;i++){                    \u6709\u591a\u5c11\u4e2a\u5c31\u8f93\u51fa\u591a\u5c11\u4e2a\n                    puts(ans);\n                }\n            }\n            for(int i=0;i<26;i++){\n                if(subTree[i]){                            \u7ee7\u7eed\u8f93\u51fa\u66f4\u957f\u7684\u5355\u8bcd\n                    subTree[i]->output();\n                }\n            }\n            ans[--len]=0;\n        }\n```\nprivate:\nFrieTree \\*subTree[26];                                    26\u68f5\u5b50\u6811\uff0c\u8868\u793a26\u4e2a\u5b57\u6bcd\n\nchar ch;                                                \u5f53\u524d\u8282\u70b9\u8868\u793a\u7684\u5b57\u6bcd\n\nint end;                                                \u6709\u591a\u5c11\u5355\u8bcd\u5728\u5f53\u524d\u8282\u70b9\u7ed3\u675f\n\n```cpp\n};\nFrieTree ft;\nint N;\nchar word[110],T[110];\nint main(){\n    scanf(\"%d\",&N);\n    for(int i=1;i<=N;i++){\n        getstring(word);\n        ft.insert(word);\n    }\n    getstring(T);\n    ft.check_and_output(T);\n}\n```",
        "postTime": 1472977829,
        "uid": 21903,
        "name": "vegetabird",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1628 \u3010\u5408\u5e76\u5e8f\u5217\u3011"
    },
    {
        "content": "\n**[color=green]\u8fd9\u9898\u4f60\u8fd8\u53eb\u201c\u5806\u201d\uff1f[/color][b]\n\n##[b]\u6b64\u9898\u601d\u8def\uff1a**\n\n[color=green]**[center]\u5148\u6392\u5e8f\uff0c\u518d\u67e5\u627e\u524d\u7f00\uff0c\u627e\u5230\u4e00\u4e2a\u8f93\u51fa\u4e00\u4e2a\uff08\u6392\u8fc7\u5e8f\u4e86\uff0c\u6240\u4ee5\u8fd8\u662f\u6709\u5e8f\u7684\u3002\u6216\u8005\u5148\u67e5\u627e\u524d\u7f00\uff0c\u653e\u5230\u65b0\u6570\u7ec4\u91cc\uff0c\u6392\u5e8f\uff0c\u8f93\u51fa\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u7b2c\u4e00\u79cd\u65b9\u6cd5\u597d\u4e00\u70b9\u3002[/center]**[/color]\n\n```delphi\n\nvar a:array[1..100000] of ansistring;\n    search:ansistring;  //search\u4e3a\u524d\u7f00\n    n,i:longint;\nprocedure qsort(l,r:longint);//\u5feb\u6392\uff0c\u4e0d\u591a\u89e3\u91ca\nvar i,j:longint;t,m:ansistring;\nbegin\n i:=l;j:=r;m:=a[(l+r) div 2];\n repeat\n  while a[i]<m do inc(i);\n  while m<a[j] do dec(j);\n  if i<=j then\n  begin\n   t:=a[i];a[i]:=a[j];a[j]:=t;\n   inc(i);dec(j);\n  end;\n until i>j;\n if l<j then qsort(l,j);\n if i<r then qsort(i,r);\nend;\nbegin\n readln(n);\n for i:=1 to n do readln(a[i]);//\u8f93\u5165\n readln(search);\n qsort(1,n); //\u6392\u5e8f\n for i:=1 to n do\n  {if copy(a[i],1,length(search))=search then}//\u8fd9\u6837\u4e5f\u53ef\u4ee5\n  if pos(search,a[i])=1 then                            //\u5982\u679c\u6709\u524d\u7f00\uff0c\u90a3\u4e48\u5b83\u7684\u8d77\u59cb\u4f4d\u662f\u7b2c1\u4f4d\n   writeln(a[i]);                                                //\u6709\u5c31\u8f93\u51fa\nend.\n[color=red]\u4e0b\u9762\u63d0\u4f9b**Pascal**\u6807\u7a0b\uff1a[/color]\n\n```",
        "postTime": 1454394191,
        "uid": 12102,
        "name": "hanghang0702",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1628 \u3010\u5408\u5e76\u5e8f\u5217\u3011"
    },
    {
        "content": "\u628a\u524d\u7f00\u5339\u914d\u7684\u7b5b\u51fa\u6765\uff0c\u5728\u5feb\u6392\u4e00\u6b21\u5373\u53ef\u3002\u4e0b\u9762\u63d0\u4f9b**C\u4ee3\u7801**\n\n```cpp\n#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nchar ans[100010][102],chr[102],ans2[100010][102];\nint cmp(const void *a,const void *b)\n{\n    return strcmp((char*)a,(char*)b);\n}\nint main(void)\n{\n    int n,i,len=0;\n    scanf(\"%d\\n\",&n);\n    for(i=0;i<n;i++)    \n        gets(ans[i]);\n    gets(chr);\n    for(i=0;i<n;i++)\n    {    \n        int ptr=strstr(ans[i],chr)- ans[i]; //\u524d\u7f00\u76f8\u540c\u65f6ptr\u4e3a0\uff08\u5373\u4ece&ans[i][0]\u5f00\u59cb\u5339\u914d\u5230\uff09\n        if( ptr == 0 ) strncpy(ans2[len++],ans[i],sizeof(ans[i])); \n    }\n    qsort(ans2,len,sizeof(ans2[0]),cmp);\n    for(i=0;i<len;i++)\n        puts(ans2[i]);\n    return 0;\n}\n```",
        "postTime": 1437640801,
        "uid": 4693,
        "name": "CoolTeam",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1628 \u3010\u5408\u5e76\u5e8f\u5217\u3011"
    },
    {
        "content": "[color=red]\u8fd9\u9898\u4f60\u597d\u610f\u601d\u53eb\u5806\uff1f[/color]\n\n\u8bfb\u5165\uff0c\u6c42\u524d\u7f00\uff0c\u5feb\u6392\uff0cend\uff0c\u5c45\u7136\u4e0d\u4f1a\u8d85\n\n\u975e\u5e38\u6734\u7d20\u7684\u7b97\u6cd5\n\n[\u5220\u9664]\u4f60\u75af\u4e86\u7684\u8bdd\u53ef\u4ee5\u7528\u4e8c\u53c9\u6392\u5e8f\u6811[/\u5220\u9664]\n\n```delphi\n\nvar\n  a:array[1..200000] of ansistring;\n  sort:array[1..200000] of ansistring;//\u4ee5b\u4e3a\u524d\u7f00\u7684\u6570\u7ec4\n  b:ansistring;\n  n,i,j:longint;\nprocedure qsort(l,r:longint);{\u5feb\u6392\u7565\u53bb}\nvar\nbegin\nend;\nbegin\n  readln(n);\n  for i:=1 to n do\n    readln(a[i]);\n  readln(b);\n  j:=1;\n  for i:=1 to n do\n    if copy(a[i],1,length(b))=b then {a[i]\u4ee5b\u4e3a\u524d\u7f00\u53a9\u5c06a[i]\u653e\u5165sort\u4e2d}\n      begin\n        sort[j]:=a[i];\n        inc(j);\n      end;\n  dec(j);\n  qsort(1,j);\n  for i:=1 to j do\n    writeln(sort[i]);\nend.\n\n```",
        "postTime": 1396706568,
        "uid": 8,
        "name": "\u53d1\u6e90\u4e8e",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1628 \u3010\u5408\u5e76\u5e8f\u5217\u3011"
    },
    {
        "content": "\u672c\u9898\u53ef\u4ee5\u5148\u5224\u65ad\u518d\u6392\u5e8f\u4e5f\u53ef\u4ee5\u5148\u6392\u5e8f\u518d\u5224\u65ad\uff0c\u4f46\u662f\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u4f7f\u7528\u540e\u4e00\u79cd\u65b9\u6cd5\uff08\u4ee3\u7801\u7b80\u5355\u4e00\u70b9\uff09\n\n1.\u9996\u5148\u8bfb\u5165n\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e76\u8fdb\u884c\u6392\u5e8f\uff08\u76f4\u63a5\u6bd4\u8f83\u5373\u53ef\uff0c\u4e0d\u9700\u8981\u7528\u7279\u6b8a\u7684\u6bd4\u8f83\u65b9\u6cd5\uff09\uff1b\n\n2.\u9010\u4e00\u6bd4\u8f83\u6bcf\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u7b26\u5408\u5373\u8f93\u51fa\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nvar\n  a:array[0..100000] of ansistring;\n  i,n,j:longint;\n  k,t:ansistring;//\u6ce8\u610f\u4e00\u5b9a\u8981\u7528ansistring\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u9519\u8bef\uff0c\u6211\u5c31\u88ab\u5751\u4e86\nprocedure qsort(r,l:longint);\nvar i,j:longint;\n    t,mid:ansistring;\nbegin\n  i:=r;\n  j:=l;\n  mid:=a[random(j-i+1)+i];\n  repeat\n    while a[i]<mid do inc(i);\n    while a[j]>mid do dec(j);\n    if i<=j then\n      begin\n        t:=a[i];\n        a[i]:=a[j];\n        a[j]:=t;\n        inc(i);\n        dec(j);\n      end;\n  until i>j;\n  if r<j then qsort(r,j);\n  if i<l then qsort(i,l);\nend;//\u5feb\u6392\uff0c\u4e0d\u591a\u89e3\u91ca\nbegin\n  randomize;//\u968f\u673a\u5316\u5feb\u6392\n  readln(n);\n  for i:=1 to n do readln(a[i]);\n  qsort(1,n);//\u5bf9n\u4e2a\u5b57\u7b26\u4e32\u6392\u5e8f\uff0c\u65b9\u4fbf\u540e\u9762\u7684\u64cd\u4f5c\n  readln(k);\n  for i:=1 to n do\n    if pos(k,a[i])=1 then writeln(a[i]);//\u5982\u679ck\u662f\u5b83\u7684\u524d\u7f00\uff0c\u5373pos(k,s)=1\uff0c\u5c31\u76f4\u63a5\u8f93\u51fa\uff0c\u56e0\u4e3aa[i]\u672c\u8eab\u662f\u6709\u5e8f\u7684\uff0c\u6240\u4ee5\u540e\u9762\u7684\u4e00\u5b9a\u4f1a\u5728\u524d\u9762\u7684\u5224\u65ad\u597d\u4e4b\u540e\u8f93\u51fa\uff0c\u4fdd\u8bc1\u4e86\u8f93\u51fa\u4e00\u5b9a\u662f\u6309\u5b57\u5178\u987a\u5e8f\u7684\nend.\n```",
        "postTime": 1381405643,
        "uid": 734,
        "name": "lych",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1628 \u3010\u5408\u5e76\u5e8f\u5217\u3011"
    }
]