[
    {
        "content": "\u6b64\u9898\u660e\u663e\u662f\u6700\u5c0f\u751f\u6210\u6811\u7684\u6a21\u677f\u9898...\n\nkruskal\u7b97\u6cd5...\n\n\u503c\u5f97\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff1a\u4e0e\u5976\u725b\u8c08\u8bdd\u4e5f\u9700\u8981\u65f6\u95f4\uff0c\u800c\u4e14\u6bcf\u6761\u8def\u90fd\u9700\u8981\u6765\u56de\u8d70\u4e24\u904d\u3002\n\n\u6240\u4ee5\u6bcf\u6761\u8fb9\u7684\u6743\u503c\u4e3a\uff1a\u8d77\u70b9\u6743\u503c+\u7ec8\u70b9\u6743\u503c+\u8def\u7684\u957f\u5ea6\\*2.\n\n\u7136\u540e\u5c31\u80fd\u76f4\u63a5\u8dd1\u6700\u5c0f\u751f\u6210\u6811\u4e86......\n\nPS\uff1a\u522b\u5fd8\u4e86\u52a0\u4e0a\u6743\u503c\u6700\u5c0f\u7684\u70b9\u54e6\n\n\n\u4e0b\u9762\u7c98\u4e0a\u849f\u84bb\u7684\u4e11\u964b\u4ee3\u7801...\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[10001];\nstruct edge\n{\n    int l,r,v;\n}\ne[100001];\nint f[10001];\nbool cmp(edge a,edge b)\n{\n    return a.v<b.v;\n}\nint n,ans;\nint find(int n)\n{\n    if(f[n]==n)\n    {\n        return n;\n    }\n    f[n]=find(f[n]);\n    return f[n];\n}\nvoid bing(int m,int n)\n{\n    int x,y;\n    x=find(m);\n    y=find(n);\n    f[x]=y;\n}\nint main()\n{\n    int p,num=0,road=0,s=0x7fffffff;\n    scanf(\"%d%d\",&n,&p);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        s=min(s,a[i]);\n    }\n    for(int i=1;i<=p;i++)\n    {\n        num++;\n        scanf(\"%d%d%d\",&e[num].l,&e[num].r,&e[num].v);\n        e[num].v=e[num].v*2+a[e[num].l]+a[e[num].r];   //\u6539\u53d8\u8fb9\u6743\n    }\n    sort(e+1,e+num+1,cmp);\n    for(int i=1;i<=n;i++)\n    {\n        f[i]=i;\n    }\n    for(int i=1;road<n-1;i++)    //\u6700\u5c0f\u751f\u6210\u6811\n    {\n        if(find(e[i].l)!=find(e[i].r))\n        {\n            ans+=e[i].v;\n            bing(e[i].l,e[i].r);\n            road++;\n        }\n    }\n    printf(\"%d\",ans+s);\n    return 0;\n}\n```",
        "postTime": 1504870384,
        "uid": 50202,
        "name": "qwqKanade",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2916 \u3010[USACO08NOV]\u4e3a\u6bcd\u725b\u6b22\u547cCheering up the C\u2026\u3011"
    },
    {
        "content": "[\u8fd9\u9053\u9898](https://www.luogu.com.cn/problem/P2916)\u89e3\u6cd5\uff1a\u6700\u5c0f\u751f\u6210\u6811\uff0c\u4e5f\u5c31\u662f\u4f7f\u7528 Kruskal \u7b97\u6cd5\u3002\n\n### \u9898\u610f\uff1a\n\u9898\u76ee\u4f1a\u7ed9\u51fa\u4e00\u5f20\u8fde\u901a\u56fe\uff0c\u9996\u5148\u9700\u8981\u6211\u4eec\u751f\u6210\u4e00\u68f5\u6811\uff0c\u7136\u540e\u9009\u53d6\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u51fa\u53d1\u70b9\uff0c\u8bbe\u8ba1\u4e00\u6761\u8def\u5f84\u904d\u5386\u6240\u6709\u7684\u70b9\uff0c\u5e76\u6309\u8981\u6c42\u8ba1\u7b97\u6700\u5c0f\u7684\u53ef\u80fd\u7b54\u6848\u3002\n\n### \u5206\u6790\uff1a\n\u6211\u4eec\u53d1\u73b0\u9898\u76ee\u5e76\u6ca1\u6709\u544a\u8bc9\u6211\u4eec\u751f\u6210\u6811\u7684\u89c4\u5219\uff0c\u5168\u90e8\u679a\u4e3e\u663e\u7136\u4e5f\u4e0d\u73b0\u5b9e\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4ece\u7b54\u6848\u7edf\u8ba1\u65b9\u6cd5\u4e0a\u6765\u5165\u624b\u3002\n\n\u7b54\u6848\u4e2d\u5305\u62ec\u4e86\u70b9\u6743\u4e0e\u8fb9\u6743\uff0c\u6bcf\u4e00\u4e2a\u70b9\u5bf9\u4e8e\u7b54\u6848\u7684\u8d21\u732e\u5e76\u4e0d\u80fd\u5f88\u663e\u7136\u7684\u786e\u5b9a\uff0c\u56e0\u4e3a\u53ef\u80fd\u4f1a\u7ecf\u8fc7\u4e00\u4e2a\u70b9\u591a\u6b21\u3002\u6211\u4eec\u53ef\u4ee5\u4ece\u8fb9\u5165\u624b\uff0c\u8def\u7ebf\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a**\u9996\u5c3e\u76f8\u63a5\u7684\u73af**\uff0c\u901a\u8fc7\u628a\u73a9\u6837\u4f8b\u53ef\u4ee5\u53d1\u73b0\u751f\u6210\u6811\u4e0a\u7684\u6bcf\u4e00\u6761\u8fb9\u90fd\u88ab\u7ecf\u8fc7\u4e86\u6070\u597d\u4e24\u6b21,\u5e76\u4e14\u53d1\u73b0\u8d77\u59cb\u70b9\u7684\u9009\u62e9\u5e76\u4e0d\u4f1a\u5f71\u54cd\u8def\u5f84\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u628a\u7b54\u6848\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5373\u4e3a **\u8d77\u59cb\u70b9\u70b9\u6743** \u4e0e **\u8def\u5f84\u73af\u4e0a\u7684\u70b9\u6743\u8fb9\u6743\u548c** \u3002 _\uff08\u6ce8\u610f : \u8fd9\u91cc\u6240\u8bf4\u7684\u201c\u8def\u5f84\u73af\u4e0a\u7684\u70b9\u6743\u8fb9\u6743\u201d\u5e76\u4e0d\u662f\u5355\u7eaf\u7684\u76f8\u52a0\uff09_\n\n\u7ecf\u8fc7\u8fdb\u4e00\u6b65\u7684\u89c2\u5bdf\u4e0e\u601d\u8003\uff0c\u6211\u4eec\u53d1\u73b0**\u4e00\u4e2a\u70b9\u88ab\u91cd\u590d\u7ecf\u8fc7\u7684\u6b21\u6570\u6070\u597d\u4e0e\u5b83\u5728\u751f\u6210\u6811\u4e2d\u7684\u5ea6\u6570\u76f8\u7b49**\u3002\u6211\u4eec\u8003\u8651\uff0c Kruskal \u7b97\u6cd5\u662f\u901a\u8fc7\u5bf9\u8fb9\u6743\u7684\u6392\u5e8f\u6765\u6c42\u53d6\u6700\u5c0f\u751f\u6210\u6811\uff0c\u6b64\u9898\u8981\u6c42\u6700\u5c0f\u7684\u7b54\u6848\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u67d0\u79cd\u624b\u6bb5\u5c06\u5b83\u4e5f\u8f6c\u5316\u6210\u6700\u5c0f\u751f\u6210\u6811\u6765\u6c42\u89e3\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u67d0\u79cd\u65b9\u6cd5\u6765\u5c06\u70b9\u6743\u6765\u8f6c\u5316\u5230\u8fb9\u6743\u4e0a\u3002\n\n\u6839\u636e\uff1a\u201c**\u4e00\u4e2a\u70b9\u88ab\u91cd\u590d\u7ecf\u8fc7\u7684\u6b21\u6570\u6070\u597d\u4e0e\u5b83\u5728\u751f\u6210\u6811\u4e2d\u7684\u5ea6\u6570\u76f8\u7b49**\u201d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u70b9\u6743\u5b89\u6392\u5230\u4e0e\u4e4b\u76f8\u90bb\u7684\u8fb9\u4e0a\u3002\n\n\u73b0\u5728\u6765\u6574\u7406\u4e00\u4e0b\u8981\u6c42\u7684\u5185\u5bb9\u3002\u201c**\u8d77\u59cb\u70b9\u70b9\u6743**\u6700\u5c0f\u201d\uff0c\u6211\u4eec\u53ef\u4ee5\u8d2a\u5fc3\u9009\u70b9\u6743\u6700\u5c0f\u7684\u70b9\u4f5c\u4e3a\u8d77\u59cb\u70b9\u3002\u201c**\u8def\u5f84\u73af\u4e0a\u7684\u70b9\u6743\u8fb9\u6743\u548c**\u6700\u5c0f\u201d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fb9\u6743\u8d4b\u503c\u4e3a\u539f\u8fb9\u6743\u7684\u4e8c\u500d\u4e0e\u4e24\u4e2a\u7aef\u70b9\u70b9\u6743\u7684\u548c\uff0c\u7136\u540e\u8dd1\u4e00\u904d Kruskal \u6c42\u51fa\u6700\u5c0f\u503c\u3002\n\ncode\uff1a\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\nusing namespace std;\nconst int N=2e5+7;\nint n,m,arr[N];\nstruct node{\n\tint u,v,dis;\n\tfriend bool operator < (node a,node b)\n\t{\n\t\treturn a.dis < b.dis;\n\t}\n}edge[N];\nint fa[N];\nint find(int s)//\u5e76\u67e5\u96c6 \n{\n\tif(fa[s] == s) return s;\n\treturn fa[s] = find(fa[s]);\n}\nint main()\n{\n\tint mini = 2147483647;\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i = 1;i <= n;i ++){\n\t\tscanf(\"%d\",&arr[i]);\n\t\tmini = min(mini,arr[i]);//\u8bfb\u5165\u65f6\u987a\u4fbf\u9009\u4e00\u4e0b\u8d77\u59cb\u70b9 \n\t}\n\tfor(int i = 1;i <= m;i ++){\n\t\tscanf(\"%d %d %d\",&edge[i].u,&edge[i].v,&edge[i].dis);\n\t\t//\u5904\u7406\u8fb9\u6743 \n\t\tedge[i].dis += edge[i].dis + arr[edge[i].u] + arr[edge[i].v];\n\t}\n\tsort(edge+1,edge+1+m);\n\tint sum = n-1,ans = 0;\n\tfor(int i = 1;i <= n;i ++) fa[i] = i;\n\t\n\t//Kruskal\n\tfor(int i = 1;i <= m&&sum;i ++){\n\t\tif(find(edge[i].u) != find(edge[i].v)){\n\t\t\tsum --;\n\t\t\tfa[find(edge[i].u)] = find(edge[i].v);\n\t\t\tans += edge[i].dis;\n\t\t//\tprintf(\"connect %d and %d,it cost %d\\n\",edge[i].u,edge[i].v,edge[i].dis);\n\t\t}\n\t}\n\tprintf(\"%d\",ans + mini);\n\treturn 0;\n}\n```\n",
        "postTime": 1581838063,
        "uid": 118166,
        "name": "nao_nao",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2916 \u3010[USACO08NOV]\u5b89\u6170\u5976\u725bCheering up the Cow\u3011"
    },
    {
        "content": "\u89e3\u9898\u62a5\u544a\uff1a\n\n\u6c42\u7ecf\u8fc7\u6240\u6709\u8282\u70b9\u6240\u82b1\u8d39\u7684\u6700\u5c0f\u4ee3\u4ef7.\n\n\u8003\u8651\u6700\u5c0f\u751f\u6210\u6811\u6c42\u89e3.\n\n\u6765\u770b\u4e00\u4e0b\u9898\u76ee\uff1a\n\n1.\u5f53\u4ed6\u8d70\u8bbf\u5b8c\u6240\u6709\u7684\u5976\u725b\u4e4b\u540e\uff0c\u8fd8\u8981\u56de\u5230\u4ed6\u7684\u51fa\u53d1\u5730.\n\n2.\u6ce8\u610f\u7ea6\u7ff0\u5728\u51fa\u53d1\u548c\u56de\u53bb\u7684\u65f6\u5019\uff0c\u90fd\u8981\u548c\u51fa\u53d1\u5730\u7684\u5976\u725b\u8c08\u4e00\u6b21\u8bdd.\n\n\u5148\u770b\u4e00\u4e0b\u8fd9\u4e00\u53e5\uff1a\n\n### \u6ce8\u610f\u7ea6\u7ff0\u5728\u51fa\u53d1\u548c\u56de\u53bb\u7684\u65f6\u5019\uff0c\u90fd\u8981\u548c\u51fa\u53d1\u5730\u7684\u5976\u725b\u8c08\u4e00\u6b21\u8bdd.\n\n\u90a3\u4e48\u662f\u4e0d\u662f\u5c31\u662f\u6bcf\u6761\u8fb9\u90fd\u662f\u88ab\u904d\u5386\u4e24\u6b21\u5462 \u5e76\u4e14\u6bcf\u4e00\u6b21\u8ba1\u7b97\u7684\u65f6\u5019\u90fd\u8981\u52a0\u4e0a\u8d77\u70b9\u7684\u6743\u503c\n\n\u4e3e\u4e2a\u4f8b\u5b50\u8bf4\u660e\u4e00\u4e0b\uff1a\n\n\u6709\u4e00\u6761\u8fb9 a->b \u90a3\u4e48\u5047\u5b9a\u6211\u4eec\u4ecea\u70b9\u51fa\u53d1\u518d\u56de\u5230a\u70b9 \u5148\u4ecea\u70b9\u51fa\u53d1 \u52a0\u4e0aa\u70b9\u6743\u503c\u548c\u8fb9\u6743 \u5728\u4eceb\u56de\u5230a \u52a0\u4e0ab\u70b9\u6743\u503c\u548c\u8fb9\u6743 \u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8fb9 \u4ed6\u7684\u8fb9\u6743\u662f\u4e0d\u662f\u5c31\u7b49\u4e8e\u8fb9\u6743$*2$+\u8d77\u70b9\u7684\u7ec8\u70b9\u7684\u8fb9\u6743\u5462\uff1f\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u628a\u6bcf\u4e00\u6761\u8fb9\u7684\u8fb9\u6743\u66f4\u65b0\u4e00\u4e0b\n\n```cpp\n\ta[i].z=z*2+t[x]+t[y]; \n```\n\n\u518d\u6765\u6ce8\u610f\u4e00\u4e0b\u53e6\u5916\u4e00\u53e5\u8bdd\uff1a\n\n### \u5f53\u4ed6\u8d70\u8bbf\u5b8c\u6240\u6709\u7684\u5976\u725b\u4e4b\u540e\uff0c\u8fd8\u8981\u56de\u5230\u4ed6\u7684\u51fa\u53d1\u5730.\n\n\u4ee3\u8868\u7740\u6211\u4eec\u8fd8\u8981\u52a0\u4e0a\u51fa\u53d1\u70b9\u7684\u6743\u503c \u5bf9\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u7684\u56fe \u5b83\u7684\u6700\u5c0f\u751f\u6210\u6811\u7684\u662f\u4e00\u5b9a\u7684 \u90a3\u4e48\u6211\u4eec\u53ea\u8981\u52a0\u4e0a\u6700\u5c0f\u7684\u51fa\u53d1\u70b9\u5373\u53ef\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,x,y,z,ans=0x3f,px,py,f[100005],t[100005];\nstruct p{\n\tint x,y,z;\n}a[200005];\nbool cmp(p a,p b){\n\treturn a.z<b.z;\n} \nint find(int x){\n\tif (x==f[x]) return x;\n\treturn f[x]=find(f[x]);\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1;i<=n;i++) f[i]=i;\n\tfor (int i=1;i<=n;i++) {\n\t\tscanf(\"%d\",&t[i]);\n\t\tans=min(ans,t[i]);\n\t}\n\tfor (int i=1;i<=m;i++){\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\ta[i].x=x;\n\t\ta[i].y=y;\n\t\ta[i].z=z*2+t[x]+t[y]; \n\t}\n\tsort(a+1,a+m+1,cmp);\n\tfor (int i=1;i<=m;i++){\n\t\tpx=find(a[i].x);\n\t\tpy=find(a[i].y);\n\t\tif (px==py) continue;\n\t\tf[px]=py;\n\t\tans+=a[i].z;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1555161988,
        "uid": 99460,
        "name": "Hiraeth",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2916 \u3010[USACO08NOV]\u5b89\u6170\u5976\u725bCheering up the Cow\u3011"
    },
    {
        "content": "**\u6838\u5fc3\u7b97\u6cd5\uff1aKruskal**\n\n\u9898\u76ee\u4e2d\u8bf4\uff1a\u201c\u5220\u53bb\u5c3d\u53ef\u80fd\u591a\u7684\u8fb9\u201d\u3002\u5c31\u662f\u6307\u4fdd\u7559\u4e00\u68f5\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n------------\n\n **\u6784\u56fe**\uff1a\n\n\u6211\u4eec\u53d6\u4e00\u5c0f\u6bb5\u6765\u5206\u6790\u4e00\u4e0b\uff1a\n\n\uff08\u53ef\u4ee5\u628a\u8fd9\u4e2a\u7406\u89e3\u4e3a**\u5355\u4f4d\u5143**\uff09\n\n![a8CtXQ.png](https://s1.ax1x.com/2020/08/01/a8CtXQ.png)\n\n\u6309\u7167\u9898\u76ee\u4e2d\u7684\u610f\u601d\uff0c\u8d70\u8fc7\u8be5\u56fe\u7684\u82b1\u8d39\u4e3a\uff1a\n\nC[1] + L + C[2] + L + C[1]\n\n\u5373\uff1aC[1] + C[1] + 2L + C[2]\n\n![a89RFP.png](https://s1.ax1x.com/2020/08/01/a89RFP.png)\n\n\u8d70\u8fc7\u8be5\u56fe\u7684\u82b1\u8d39\u4e3a\uff1a\n\nC[1] + L(1,2) + C[2] + L(2,3) + C[3] + L(2,3) + C[2] + L(1,2) + C[1]\n\n\u5373\uff1aC[1] + \uff08C[1] + 2L(1,2) + C[2]\uff09 + \uff08C[2] + 2L(2,3) + C[3]\uff09\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u63a8\u51fa\uff1a\u65b0\u7684\u8fb9\u7684\u6743\u503c\uff0c\u4e3a\u8fd9\u6761\u8fb9  **\u8d77\u70b9\u6743\u503c+\u7ec8\u70b9\u6743\u503c+\u4e24\u500d\u8fb9\u6743**\n\n **\u800c\u6700\u540e\u7684\u7ed3\u679c\uff0c\u8fd8\u8981\u52a0\u4e0a\u4e00\u5f00\u59cb\u8d77\u70b9\u6743\u503c\u3002** \uff08\u5373\u53d6\u70b9\u6743\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u56e0\u4e3a\u9898\u76ee\u4e2d\u8981\u6c42\u6700\u5c0f\uff09\n\n\u4ee3\u7801\u5982\u4e0b\uff08\u7ec6\u8282\u89c1\u6ce8\u91ca\uff09\uff1a\n```cpp\n#include <bits/stdc++.h>\n#define MAXN 1000000\n#define INF 0x3f3f3f3f\nint fat[MAXN],siz[MAXN];\nint c[MAXN],n,m,ans=0;\nstruct EDGE{int from,to,val;}\te[MAXN];\n//\u90bb\u63a5\u77e9\u9635 \nbool cmp(EDGE x,EDGE y){return x.val<y.val;}\n//\u6bd4\u8f83\u5668  \u6309\u7167\u8fb9\u7684\u6743\u503c\u6392\u5e8f \nint Find(int x)\t{return (fat[x]==x) ? x :fat[x]=Find(fat[x]);}\nvoid unionn (int x,int y)\n{\n\tx=Find(x); y=Find(y);\n\tif(siz[x]>siz[y]) std::swap(x,y);\n\tfat[x]=y;\tsiz[y]+=siz[x];\n}\n//\u5e76\u67e5\u96c6\u6a21\u677f \nbool kruskal()\n{\n\tint k=0;\n\tstd::sort(e+1,e+m+1,cmp);\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tif(k==n-1)\tbreak;\n\t\tif(Find(e[i].to)!=Find(e[i].from))\n\t\t{\n\t\t\tunionn(e[i].to,e[i].from);\n\t\t\t++k;\tans+=e[i].val;\n\t\t}\n\t}\n\treturn (k==n-1);\n}\n// kruskal\u6a21\u677f \nint main()\n{\n\tint minn=INF;\n\tstd::scanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i)\t{fat[i]=i;\tsiz[i]=1;}\n\t//\u5e76\u67e5\u96c6\u521d\u59cb\u5316  \n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tstd::scanf(\"%d\",&c[i]);\n\t\tminn=std::min(minn,c[i]);\n\t\t//\u70b9\u6743\u503c\u4e2d\u53d6\u6700\u5c0f\u503c \n\t}\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tstd::scanf(\"%d%d%d\",&e[i].from,&e[i].to,&e[i].val);\n\t\te[i].val=e[i].val*2+c[e[i].from]+c[e[i].to];\n\t\t//\u91cd\u65b0\u5b9a\u4e49\u6743\u503c \n\t}\n\tif(kruskal()) std::printf(\"%d\",ans+minn);\n\treturn 0;\n}\n```",
        "postTime": 1596288385,
        "uid": 128451,
        "name": "x_miracle",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2916 \u3010[USACO08NOV]Cheering up the Cow G\u3011"
    },
    {
        "content": "## \u6700\u5c0f\u751f\u6210\u6811\n\n\u8fd9\u9898\u5199\u8d77\u6765\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u9700\u8981\u601d\u8003\n\n\u6211\u4eec\u9996\u5148\u770b\u9898\u76ee\u8981\u6c42\uff0c\u9700\u8981\u5728\u4fdd\u8bc1\u8fde\u901a\u7684\u60c5\u51b5\u4e0b\u53bb\u9664\u6700\u591a\u7684\u8fb9\uff0c\u8bf4\u660e\u9700\u8981\u7559\u4e0b\u4e00\u68f5\u751f\u6210\u6811\u3002\n\n\u53e6\u5916\u8981\u6c42\u8c08\u8bdd\u65f6\u95f4\u6700\u77ed\u3002\u6211\u4eec\u6765\u770b\u8c08\u8bdd\u65f6\u95f4\u600e\u4e48\u7b97\u3002\u6bcf\u4e2a\u519c\u573a\u90fd\u8981\u904d\u5386\u4e00\u6b21\uff0c\u4ece\u8d77\u70b9\u51fa\u53d1\u5230\u7ec8\u70b9\u518d\u56de\u5230\u8d77\u70b9\u7684\u8fc7\u7a0b\u5c31\u76f8\u5f53\u4e8edfs\u7684\u8fc7\u7a0b\u3002\u4f46\u8fd9\u91cc\u5e76\u4e0d\u9700\u8981\u6211\u4eec\u5199dfs\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u62d3\u6251\u5b66\u7684\u89c4\u5f8b\u6765\u63a2\u7a76\u3002\u5bf9\u4e8e\u751f\u6210\u6811\u6765\u8bf4\uff0c\u4e00\u5b9a\u4e0d\u5b58\u5728\u73af\uff0c\u6240\u4ee5\u4ece\u8d77\u70b9\u51fa\u53d1\u904d\u5386\u4e00\u6b21\uff0c\u56de\u5230\u8d77\u70b9\u7684\u8def\u5f84\uff0c\u5fc5\u7136\u662f\u8fd9\u6837\u7684\u8def\u5f84\uff1a\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u9876\u70b9V\uff0c\u5047\u8bbe\u5176\u5ea6\u6570\u4e3ad(V)\uff0c\u5219\u6bcf\u4e2a\u8def\u5f84\u4e2d\u95f4\u7684\u9876\u70b9\u7ecf\u8fc7d(V)\u6b21\uff0c\u8d77\u70b9\u7ecf\u8fc7d(V)+1\u6b21\uff0c\u6bcf\u6761\u8fb9\u7ecf\u8fc72\u6b21\u3002\u5177\u4f53\u7684\u8bc1\u660e\u65b9\u6cd5\uff0c\u81ea\u5df1\u601d\u8003\uff0c\u63d0\u793a\uff1a\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u3002\n\n\u8fd9\u6837\uff0c\u5c31\u53ef\u4ee5\u628a\u6bcf\u6761\u8fb9\u7684\u6743\u503c\u4e582\uff0c\u518d\u52a0\u4e0a\u5b83\u7684\u4e24\u4e2a\u90bb\u63a5\u70b9\u7684\u6743\u503c\uff0c\u6784\u6210\u4e00\u4e2a\u65b0\u7684\u56fe\uff0c\u5bf9\u8fd9\u4e2a\u56fe\u6c42\u6700\u5c0f\u751f\u6210\u6811\u3002\u8fd9\u4e2a\u6700\u5c0f\u751f\u6210\u6811\u7684\u6743\u503c\u4e4b\u548c\u52a0\u4e0a\u8fd9\u4e9b\u70b9\u7684\u6743\u503c\u6700\u5c0f\u8005\u5373\u5f97\u7b54\u6848\u3002\n\n\u6240\u4ee5\u4e00\u4e0b\u5c31\u53d8\u6210\u4e86kruskal\u7b97\u6cd5+\u5e76\u67e5\u96c6\u7684~~\u6a21\u677f~~\u9898\uff01\n\n```cpp\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <algorithm>\n\nusing namespace std;\n\nint father[10001];\n\nint root(int n) {\n    while (father[n] >= 0) n = father[n];\n    return n;\n}\n\nbool merge(int a, int b) {\n    int r1 = root(a), r2 = root(b);\n    if (r1 == r2) return false;\n    if (father[r1] < father[r2]) {\n        father[r1] += father[r2];\n        father[r2] = r1;\n    } else {\n        father[r2] += father[r1];\n        father[r1] = r2;\n    }\n    return true;\n}\n\ntypedef struct {\n    int v1;\n    int v2;\n    int l;\n} edge;\nedge arr[100000];\nint c[10001];\n\nbool cmp(const edge& a, const edge& b) {\n    return a.l < b.l;\n}\n\nint main() {\n    int n, p, i, v1, v2, l, m = 19260817;\n    scanf(\"%d %d\", &n, &p);\n    for (i = 1; i <= n; i++) {\n        scanf(\"%d\", &c[i]);\n        if (m > c[i]) m = c[i];\n    }\n    for (i = 0; i < p; i++) {\n        scanf(\"%d %d %d\", &v1, &v2, &l);\n        arr[i].v1 = v1;\n        arr[i].v2 = v2;\n        arr[i].l = (l << 1) + c[v1] + c[v2];\n    }\n    sort(arr, arr + p, cmp);\n    memset(father, -1, sizeof(father));\n    for (i = 0; i < p; i++) {\n        if (merge(arr[i].v1, arr[i].v2)) m += arr[i].l;\n    }\n    printf(\"%d\", m);\n    return 0;\n}\n\n```",
        "postTime": 1580131167,
        "uid": 181612,
        "name": "wancong",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2916 \u3010[USACO08NOV]\u5b89\u6170\u5976\u725bCheering up the Cow\u3011"
    },
    {
        "content": "\u6700\u5c0f\u751f\u6210\u6811\u4e4bKruskal\u2014\u2014$O(m \\log m )$\u3002\u6ce8\u610f\u601d\u8def\u8f6c\u5316\u3002\n\n\u8fb9\u6743\u8f6c\u5316\u4e3a\u8fb9\u6743*2\uff08\u6765\u56de\uff0c\u8dd1\u4e24\u904d\uff09+\u4e24\u8fb9\u70b9\u6743\uff0c\u5373\n\n$ L_j=L_j\\times2+C_{S_j}+C_{E_j} $  \u3002\n\n\u6700\u540e\u6309\u7167\u8d2a\u5fc3\u601d\u60f3\uff0c\u9009\u62e9\u70b9\u6743\u6700\u5c0f\u7684\u70b9\u5f00\u59cb\u904d\u5386\uff0c\u5373\n\n$ ans+=\\min(C_i)$  \u3002\n\n\u4e0d\u77e5\u9053\u8981\u5f00long long\u5417\uff1f\u53cd\u6b63\u672c\u849f\u84bb\u5f00\u4e86\u3002\u3002\u3002\n\n```cpp\n//\u7701\u7565\u5934\u6587\u4ef6\u53catypedef\nconst int Maxn=10005,Enum=10;\nint n,p;ll c[Maxn],ans=0ll,minpt=1<<25;//minpt\u5b58\u6700\u5c0f\u70b9\u6743\nstruct Edge\n{\n\tint s,e;ll l;\n}a[Maxn*Enum];\nbool cmp(Edge x,Edge y)\n{\n\treturn x.l<y.l;\n}\nnamespace bcj //\u5e76\u67e5\u96c6\u64cd\u4f5c\uff1afa\u6570\u7ec4\uff0c\u521d\u59cb\u5316\uff0c\u67e5\u8be2\n{\n\tint fa[Maxn];\n\tvoid init()\n\t{\n\t\tfor(int i=1;i<=n;i++) fa[i]=i;\n\t}\n\tint fd(int x)\n\t{\n\t\tif (x==fa[x]) return x;\n\t\treturn fa[x]=fd(fa[x]);\n\t}\n}\nusing namespace bcj;\nvoid prework()\n{\n\t//\u7701\u7565n,p\u53ca\u70b9\u6743\u8bfb\u5165\n\tfor(int i=1;i<=p;i++)\n\t{\n\t\tscanf(\"%d%d%lld\",&a[i].s,&a[i].e,&a[i].l);\n\t\ta[i].l=(a[i].l<<1)+c[a[i].s]+c[a[i].e];//\u5904\u7406\u8fb9\u6743\n\t}\n\tsort(a+1,a+1+p,cmp);//\u6392\u5e8f\n\tinit();//\u5e76\u67e5\u96c6\u9884\u5904\u7406\n}\nvoid kruskal()\n{\n\tint i=0,sum=0,f1=0,f2=0;\n\twhile(sum<n-1)//\u627e\u9f50n-1\u6761\u8fb9\n\t{\n\t\ti++;\n\t\tf1=fd(a[i].s),f2=fd(a[i].e);\n\t\tif (f1==f2) continue;//\u5df2\u8fde\u901a\u7684\u4e24\u70b9\u4e4b\u95f4\u7684\u8fb9\u4e0d\u9009\uff0c\u5426\u5219\u6210\u73af\n\t\tsum++;\n\t\tfa[f1]=f2;\n\t\tans+=a[i].l;\n\t}\n}\nint main()\n{\n\tprework();\n\tkruskal();\n\tprintf(\"%lld\",ans+minpt);//\u522b\u6f0f\u4e86\u6700\u5c0f\u70b9\u6743\n\treturn 0;//\u6109\u5feb\u7ed3\u675f\n}\n```",
        "postTime": 1546749178,
        "uid": 83001,
        "name": "\u6d77\u6ee8WA\u58f0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2916 \u3010[USACO08NOV]\u5b89\u6170\u5976\u725bCheering up the Cow\u3011"
    },
    {
        "content": "[\u535a\u5ba2\u9605\u8bfb\u6548\u679c\u66f4\u4f73](https://blog.csdn.net/BWzhuzehao/article/details/104741744)\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u6700\u5c0f\u751f\u6210\u6811\u7b97\u6cd5\uff08Kruskal/Prim\uff09\n\n[\u4f8b\u9898](https://www.luogu.com.cn/problem/P3366)\n\n**\u7b97\u6cd5\u5206\u6790\uff1a**\n\n\u8fd9\u4e00\u9053\u9898\u4e2d\u7ed9\u51fa\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u6c42\u4ece\u4efb\u610f\u4e00\u70b9\u5f00\u59cb\u7ecf\u8fc7\u6bcf\u4e00\u70b9\u7684\u6700\u77ed\u8def\u5f84\u3002\n\n\u65e2\u7136\u8981\u7ecf\u8fc7\u6bcf\u4e00\u4e2a\u70b9\uff0c\u8fd8\u8981\u6c42\u6700\u77ed\u8def\u5f84\uff0c\u7b97\u6cd5\u5c31\u662f\u6700\u5c0f\u751f\u6210\u6811\u4e86\u3002\n\n\u6211\u7528\u7684\u662f Kruskal \u7b97\u6cd5\u3002\n\n\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\uff1a\u6bcf\u6761\u8def\u7684\u957f\u5ea6\u9700\u8981\u5982\u4f55\u8ba1\u7b97\uff1f\n\n\u7ea6\u7ff0\u9700\u8981\u7ecf\u8fc7\u6bcf\u4e00\u6761\u9053\u8def\u4e24\u6b21\uff0c\u5e76\u4e14\u6bcf\u8d70\u4e00\u6b21\uff0c\u5c31\u9700\u8981\u5b89\u6170\u8fd9\u6761\u8def\u540e\u7684\u5976\u725b\uff0c\u6240\u4ee5\u8def\u5f84\u957f\u5ea6=\u9053\u8def\u957f\u5ea6*2+\u5b89\u6170\u4e24\u5934\u5976\u725b\u65f6\u95f4\n\n**\u4ee3\u7801\u5982\u4e0b\uff1a\uff08\u56e0\u4e3a\u51e0\u4e4e\u662f Kruskal \u6a21\u677f\uff0c\u6240\u4ee5\u6ca1\u6709\u6ce8\u91ca\uff09**\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nstruct node\n{\n\tLL x,y,dis;\n}a[100000+10];\nLL n,p,c[10000+10],fa[10000+10],t,ans;\nbool cmp(node fir,node sec)\n{\n\treturn fir.dis<sec.dis;\n}\nLL gf(LL x)\n{\n\tif(fa[x]==x) return x;\n\treturn fa[x]=gf(fa[x]);\n}\nint main()\n{\n\tscanf(\"%lld%lld\",&n,&p);\n\tfor(int i=1;i<=n;i++) scanf(\"%lld\",&c[i]);\n\tfor(int i=1;i<=p;i++)\n\t{\n\t\tscanf(\"%lld%lld%lld\",&a[i].x,&a[i].y,&a[i].dis);\n\t\ta[i].dis=a[i].dis*2+c[a[i].x]+c[a[i].y];\n\t}\n\tfor(int i=1;i<=n;i++) fa[i]=i;\n\tsort(a+1,a+p+1,cmp);\n\tfor(int i=1;t<n-1;i++)\n\t{\n\t\tint fx=gf(a[i].x);\n\t\tint fy=gf(a[i].y);\n\t\tif(fx!=fy)\n\t\t{\n\t\t\tfa[fx]=fy;\n\t\t\tans+=a[i].dis;\n\t\t\tt++;\n\t\t}\n\t}\n\tsort(c+1,c+n+1);\n\tprintf(\"%lld\\n\",ans+c[1]);\n\treturn 0;\n}\n```",
        "postTime": 1583676225,
        "uid": 134000,
        "name": "Plozia",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2916 \u3010[USACO08NOV]Cheering up the Cow G\u3011"
    },
    {
        "content": "\u6b64\u9898\u8003\u6700\u5c0f\u751f\u6210\u6811\n\n\u9996\u5148\u60f3\u5230\u7684\u662fKruskal\n\nKruskal\u5c31\u4e0d\u591a\u8bb2\u4e86\n\n\u5148\u770b\u6837\u4f8b\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/4dxbx2fg.png)\n\n\u52fe\u4ee3\u8868\u9700\u8981\u5ffd\u60a0\u7684\u6b21\u6570,\u7ea2\u8272\u7684\u8fb9\u4ee3\u8868\u6700\u5c0f\u751f\u6210\u6811\n\n\u4ece\u56fe\u4e2d\u53ef\u770b\u51fa\u6bcf\u4e2a\u70b9\u7684\u5ffd\u60a0\u6b21\u6570\u4e3a\u6b64\u70b9\u8fde\u63a5\u7684\u7ea2\u8272\u7684\u8fb9\u7684\u6761\u6570\n\n\u4e0d\u96be\u770b\u51fa\u6bcf\u6761\u7ea2\u8272\u7684\u8fb9\u90fd\u8981\u8d70\u4e24\u904d\n\n\u57284\u8fd9\u4e2a\u70b9\u4e0a\u6211\u6807\u4e86\u4e00\u4e2a\u7ea2\u8272\u7684\u52fe\n\n\u4e0d\u96be\u770b\u51fa\u70b9\u6743\u6700\u5c0f\u7684\u662f\u51fa\u53d1\u4f4d\u7f6e\u6240\u4ee54\u4e3a\u51fa\u53d1\u70b9\n\n\u90a3\u4e48\u628a\u4e0a\u9762\u8bf4\u7684\u603b\u7ed3\u5728\u4e00\u8d77\n\n\u5c31\u662f\u6bcf\u6761\u8fb9\u7684\u6743\u503c\u662f\u6b64\u8fb9 * 2 + \u6b64\u8fb9\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u7684\u70b9\u6743\n\n\u4e0b\u9762\u662f\u6211T\u4e862\u4e2a\u70b9\u7684\u4ee3\u7801\n\n```\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\nusing namespace std;\n\nconst int MAXN = 10000 + 10 ,MAXP = 100000 + 10;\n\nint n ,p ,c[MAXN];\nint fa[MAXN] ,ans ,road;\n\ninline int read()\n{\n    int x = 0 ,y = 1;\n    char c = getchar();\n    while(c > '9' || c < '0')\n    {\n        if(c == '-')y = -1;\n        c = getchar();\n    }\n    while(c <= '9' && c >= '0')\n    {\n        x = x * 10 + c - '0';\n        c = getchar();\n    }\n    return x * y;\n}\n\nstruct node\n{\n\tint x ,y ,l;\n}t[MAXP];\n\nint cmp(node x ,node y)\n{\n\treturn x.l < y.l;\n}\n\nint find(int x)\n{\n\tif(fa[x] == x)return x;\n\telse find(fa[x]);\n}\n\nvoid Union(int x ,int y)\n{\n\tfa[find(x)] = find(y);\n}\n\nvoid kruskal()\n{\n\tsort(t + 1 ,t + 1 + p ,cmp);\n\tfor(register int i = 1;i <= n;i++)fa[i] = i;\n\tfor(register int i = 1;road < n - 1;i++)\n\t{\n\t\tif(find(t[i].x) != find(t[i].y))\n\t\t{\n\t\t\tans += t[i].l;\n\t\t\tUnion(t[i].x ,t[i].y);\n\t\t\troad++;\n\t\t}\n\t}\n}\n\nint main()\n{\n\tn = read(); p = read();\n\tfor(register int i = 1;i <= n;i++) c[i] = read();\n\tfor(register int i = 1;i <= p;i++)\n\t{\n\t\tt[i].x = read(); t[i].y = read(); t[i].l = read();\n\t\tt[i].l *= 2;\n\t\tt[i].l += c[t[i].x] + c[t[i].y];\n\t}\n\n\tkruskal();\n\tsort(c + 1 ,c + 1 + n);\n\tcout << ans + c[1];\n\n\treturn 0;\n}\n```\n",
        "postTime": 1570713105,
        "uid": 113900,
        "name": "jbc392",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2916 \u3010[USACO08NOV]\u5b89\u6170\u5976\u725bCheering up the Cow\u3011"
    },
    {
        "content": "\u601d\u8def:\u5b58\u8fb9\u6743\u4e3a\u8fb9\u67432\u500d\u52a0\u4e0a\u4e24\u4e2a\u9876\u70b9\u7684\u6743\u503c\n\n\u8f93\u51fa\u4e3a\u6700\u5c0f\u751f\u6210\u6811\u6743\u503c\u603b\u548c\u52a0\u4e0a\u6700\u5148\u70b9\u6743\n\n\u5982\u679c\u8fd8\u4e0d\u4f1a\u6c42\u6700\u5c0f\u751f\u6210\u6811\u7684\u8bf7\u5de6\u8f6c[\u8fd9\u91cc](https://www.luogu.org/problem/P3366)\n\n\u597d\u4e86\uff0c\u5f00\u59cb\u6211\u4eec\u7684\u6b63\u9898\uff0c\u6b64\u9898\u7528\u7684\u662fKruskal\u7b97\u6cd5\uff0c\u5b83\u662f\u4e00\u79cd\u57fa\u4e8e\u8d2a\u5fc3\u548c\u5e76\u67e5\u96c6\u7684\u7b97\u6cd5\uff08\u5c31\u662f\u628a\u8fb9\u6743\u6392\u5e8f\uff0c\u7136\u540e\u6309\u7167\u8fb9\u6743\u4ece\u5c0f\u5230\u5927\u641c\uff0c\u5982\u679c\u5f62\u6210\u73af\u5c31\u8df3\u8fc7\u7ee7\u7eed\u641c\uff0c\u76f4\u5230\u751f\u6210\u6811\u7684\u8fb9\u6570\u4e3a\u603b\u8fb9\u6570\u5373\u53ef\uff09\n\n\u4ee3\u7801\u5982\u4e0b:\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,fa[10001],a[10001],tot=0,smalest=0x3f,p,ans=0;\nstruct Edge{\n\tint from,to,dis;\n}edge[100001];\nbool operator <(Edge a,Edge b)\n{\n\treturn a.dis<b.dis;\n}//\u5b9a\u4e49\u5c0f\u4e8e\u53f7\nint get(int x)\n{\n\tif(fa[x]==x)  return x;\n\treturn fa[x]=get(fa[x]);\n}//\u5e76\u67e5\u96c6\u67e5\u8be2\u64cd\u4f5c\nint main()\n{\n\tscanf(\"%d%d\",&n,&p);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tsmalest=min(a[i],smalest);//\u5b58\u6700\u5c0f\u70b9\u6743\n\t}\n\tfor(int i=1;i<=p;i++)\n\t{\n\t\ttot++;\n\tscanf(\"%d%d%d\",&edge[i].from,&edge[i].to,&edge[i].dis);\n\t\tedge[i].dis=edge[i].dis*2+a[edge[i].from]+a[edge[i].to];\n\t}\n\tsort(edge+1,edge+tot+1);//\u6392\u5e8f\n\tfor(int i=1;i<=n;i++)  fa[i]=i;//\u521d\u59cb\u628a\u6bcf\u4e2a\u70b9\u89c6\u4e3a\u4e00\u4e2a\u96c6\u5408\n\tfor(int i=1;i<=p;i++)\n\t{\n\t\tint x=get(edge[i].from);\n\t\tint y=get(edge[i].to);\n\t\tif(x==y)  continue;\n\t\tfa[x]=y;\n\t\tans+=edge[i].dis;\n\t}\n\tprintf(\"%d\",ans+smalest);//\u6700\u5c0f\u751f\u6210\u6811\u6743\u548c\u52a0\u4e0a\u6700\u5c0f\u70b9\u6743\n\treturn 0;\n}\n\n\u6700\u540e\uff0c\u5e0c\u671b\u5404\u4f4d\u540c\u5b66\u90fd\u80fd\u591f\u5b66\u4f1aKruskal\uff0c\u4e5f\u5e0c\u671b\u7ba1\u7406\u5927\u5927\u80fd\u591f\u901a\u8fc7\u6b64\u7bc7\u9898\u89e3\uff01\n```\n",
        "postTime": 1570372460,
        "uid": 118300,
        "name": "\u626c\u76932006",
        "ccfLevel": 0,
        "title": "P2916 [USACO08NOV]\u5b89\u6170\u5976\u725bCheering up the Cow \u9898\u89e3"
    },
    {
        "content": "\u4eca\u5929\u521a\u5b66\u4e86\u6700\u5c0f\u751f\u6210\u6811\uff0c\u5199\u7bc7\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\uff0c\u7136\u800c\u4e0d\u4f1aPrim\uff0c\u5c31\u53ea\u80fd\u5199Kruscal\u4e86\u3002\n\n------------\n\u601d\u8def\uff1a\u53ea\u8981\u6839\u636e\u6d41\u7a0b\u8d70\u4e00\u904d\u5c31\u884c\uff0c\u8fd9\u4e2a\u9898\u4e2d\u5c31\u53ea\u6709\u8fb9\u6743\u5904\u7406\u7a0d\u5fae\u9ebb\u70e6\u4e00\u70b9\uff0c\u8981\u628a\u4e24\u8fb9\u7684\u70b9\u6743\u52a0\u4e0a\uff0c\u5373\u529d\uff08hu you\uff09\u5976\u725b\u7684\u65f6\u95f4\uff1b\u8fb9\u6743 * 2\uff0c\u56e0\u4e3a\u8981\u8fd4\u56de\uff1b\u8fd8\u8981\u627e\u51fa\u6700\u5c0f\u7684\u70b9\u6743\uff0c\u56e0\u4e3a\u6700\u540e\u8fd8\u8981\u518d\u529d\uff08hu you\uff09\u51fa\u53d1\u70b9\u7684\u5976\u725b\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\uff1a\u96be\u9053\u6211\u4eec\u6bcf\u6b21\u8fde\u8fb9\u65f6\u90fd\u8981\u628a\u70b9\u6743\u52a0\u4e00\u904d\uff0c\u5176\u5b9e\u4e0d\u7136\uff0c\u8f93\u5165\u7684\u65f6\u5019\u628a\u8fb9\u6743\u91cd\u65b0\u8d4b\u503c\u5373\u53ef\uff0cdis = \uff1b\u5176\u6b21\uff0cKruscal\u7684\u5904\u7406\u8981\u7528\u5230\u5e76\u67e5\u96c6\uff08\u5e9f\u8bdd\uff09\uff0c\u8fd9\u91cc\u6211\u7684find\u51fd\u6570\u662f\u7528\u8def\u5f84\u538b\u7f29\u5199\u7684\u3002\n   \n------------\n\u6700\u540e\u8d34\u4e00\u4e0b\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <algorithm>\nint f[100005],ans,a[100005];\nstruct node {\n\tint from,to,dis;\n}edge[100005];\nvoid makeSet(int n) {\n\tfor(int i = 1;i <= n;i ++) f[i] = i;\n}//\u521d\u59cb\u5316\nint findSet(int x) {\n\tif(x != f[x]) f[x] = findSet(f[x]);\n\treturn f[x];\n}//\u627e\u7956\u5b97\nvoid unionSet(int a,int b) {\n\tint u = findSet(a),v = findSet(b);\n\tf[u] = v;\n}//\u5408\u5e76\nbool cmp(node x,node y) {\n\treturn x.dis < y.dis;\n}//\u6392\u5e8f\u51fd\u6570\uff0c\u6309\u8fb9\u6743\u6392\u5e8f\uff0c\u4e5f\u662fKruscal\u4e2d\u8d2a\u5fc3\u601d\u60f3\u7684\u4f53\u73b0\nint main() {\n\tint n,p,Min = 1e9;\n\tscanf(\"%d %d\",&n,&p);\n\tfor(int i = 1;i <= n;i ++) scanf(\"%d\",&a[i]),Min = std::min(a[i],Min);//\u627e\u6700\u5c0f\u70b9\u6743\n\tfor(int i = 1;i <= p;i ++) {\n\t\tscanf(\"%d %d %d\",&edge[i].from,&edge[i].to,&edge[i].dis);\n\t\tedge[i].dis = a[edge[i].from] + edge[i].dis * 2 + a[edge[i].to];//\u91cd\u65b0\u8d4b\u503c\uff0c\u89c1\u4e0a\u6587\n\t}\n\tmakeSet(n);\n\tstd::sort(edge + 1,edge + p + 1,cmp);//\u6392\u5e8f\n\tint k = 0;\n\tfor(int i = 1;i <= p;i ++) {//Kruscal\u7684\u677f\u5b50\n\t\tif(k == n - 1) break;//\u4e0d\u5f62\u6210\u56de\u8def\uff0c\u5c31\u53ea\u6709n-1\u6761\u8fb9\n\t\tif(findSet(edge[i].from) != findSet(edge[i].to)) {\n\t\t\tans += edge[i].dis;\n\t\t\tunionSet(edge[i].from,edge[i].to);\n\t\t\tk ++;\n\t\t}\n\t}\n\tprintf(\"%d\",ans + Min);//\u8f93\u51fa\uff0c\u70b9\u6743\u548c\u8fb9\u6743\u7684\u5904\u7406\u4e0a\u6587\u63d0\u5230\u7684\n\treturn 0;\n}\n```\n",
        "postTime": 1566544695,
        "uid": 173484,
        "name": "C20212724\u6768\u4eac\u671d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2916 \u3010[USACO08NOV]\u5b89\u6170\u5976\u725bCheering up the Cow\u3011"
    },
    {
        "content": "[$My\\ blog$](https://blog.csdn.net/kkkksc03/article/details/102688779)\n\n\n\u524d\u6765\u8865\u5145\u4e00\u7bc7\u9898\u89e3\uff0c\uff0c\n\n## description\uff1a\n\n\u6c42\u4e00\u4e2a\u65e2\u6709\u70b9\u6743\u53c8\u6709\u8fb9\u6743\u7684\u65e0\u5411\u56fe\u4e2d\u7684\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n## solution\uff1a\n\n\u8fd9\u9053\u9898\u56e0\u4e3a\u4e00\u53e5\u8bdd\uff1a\n\n> \u7ea6\u7ff0\u6253\u7b97\u5728\u4fdd\u6301\u5404\u7267\u573a\u8fde\u901a\u7684\u60c5\u51b5\u4e0b\u53bb\u6389\u5c3d\u91cf\u591a\u7684\u9053\u8def\u3002\n\n\u663e\u7136\u5c31\u53ef\u4ee5\u770b\u51fa\u662f\u7528\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n\u4ed4\u7ec6\u8bfb\u8bfb\u9898\uff0c\u53d1\u73b0\u552f\u4e00\u7684\u74f6\u9888\u5c31\u662f\u5728\u5904\u7406\u6743\u503c\u4e0a\u3002\n\n- \u5982\u4f55\u5c06\u70b9\u6743\u548c\u8fb9\u6743\u90fd\u5904\u7406\u5462\uff1f\n\n- \u9996\u5148\uff0c\u8fd9\u6761\u8def\u8981\u88ab\u6765\u56de\u8d70\u4e24\u904d\uff08\u56e0\u4e3a\u662f\u6811\uff09\uff0c\u6240\u4ee5\u5728\u603b\u6743\u503c\u91cc\u8981\u6709\u5b83$\\times2$\n\n- \u5176\u6b21\uff0c\u6bcf\u5934\u5976\u725b\u4f1a\u88ab\u5b89\u6170\u4e24\u6b21\uff0c\u8fd9\u6837\u53ef\u4ee5\u60f3\u5230\u8981\u52a0\u51652\u500d\u7684\u70b9\u6743\uff0c\u4f46\u662f\u518d\u66f4\u65b0\u4e0b\u4e00\u6761\u65f6\u5c31\u53c8\u4f1a\u88ab\u91cd\u590d\u8ba1\u7b97\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u7b97\u4e00\u6b21\u5c31\u884c\u3002\n\n\n**\u8fd9\u6837\u4e2d\u95f4\u8282\u70b9\u90fd\u662f\u4e24\u6b21\uff0c\u4e24\u7aef\u662f1\u6b21\uff0c\u4f46\u662f\u9898\u76ee\u7684\u7279\u6b8a\u8981\u6c42\u8981\u8d77\u70b9\u7b972\u6b21\uff0c\u6240\u4ee5\u5148\u5728\u8bfb\u5165\u70b9\u6743\u65f6\u5c31\u627e\u5230\u6700\u5c0f\u7684\u6570\u6700\u540e\u52a0\u5165\u5373\u53ef**\n\n## code:\n\n```cpp\n#include<cstdio>\n#include<algorithm> \nusing namespace std;\nstruct ben\n{\n\tint s,e,l;\n}a[100005];\nint fa[10005];\nint cmp(const ben &a,const ben &b)\n{\n\treturn a.l<b.l;\n}\nint c[10005];\nint find(int x)\n{\n\tif(fa[x]!=x)fa[x]=find(fa[x]);\n\treturn fa[x];\n}\nint main()\n{\n\tint n,p;\n\tscanf(\"%d%d\",&n,&p);\n\tint Min=100000000;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfa[i]=i;\n\t\tscanf(\"%d\",&c[i]);\n\t\tMin=min(Min,c[i]);\n\t}\n\tfor(int i=1;i<=p;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&a[i].s,&a[i].e,&a[i].l);\n\t\ta[i].l=a[i].l*2+c[a[i].s]+c[a[i].e];\n\t}\n\tsort(a+1,a+p+1,cmp);\n\tint k=0,ans=0;\n\tfor(int i=1;i<=p;i++)\n\t{\n\t\tint x=find(a[i].s);\n\t\tint y=find(a[i].e);\n\t\tif(x!=y)\n\t\t{\n\t\t\tans+=a[i].l;\n\t\t\tk++;\n\t\t\tfa[y]=x;\n\t\t}\n\t\tif(k==n-1)break;\n\t}\n\tprintf(\"%d\\n\",ans+Min);\n\treturn 0;\n}\n```",
        "postTime": 1571743062,
        "uid": 45475,
        "name": "ShineEternal",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2916 \u3010[USACO08NOV]\u5b89\u6170\u5976\u725bCheering up the Cow\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u53ef\u4ee5\u7406\u89e3\u4e3a\u7ed9\u4f60\u4e00\u4e2a\u56fe\uff0c\u8ba9\u4f60\u5efa\u4e00\u4e2a\u6811\uff0c\u7136\u540e\u4ece\u67d0\u6839\u5f00\u59cb\u8d70\uff0c\u6bcf\u8d70\u4e00\u6761\u8fb9\u5c31\u8981\u6d88\u8017\u4e24\u8fb9\u70b9\u6743+\u8fb9\u7684\u8fb9\u6743\u3002\u6700\u540e\u518d\u52a0\u4e0a\u4e00\u4e2a\u6839\u7684\u70b9\u6743\uff0c\u95ee\u6700\u5c11\u82b1\u591a\u5c11\u4ee3\u4ef7\u3002\n\n\u9898\u89e3\uff1a\u6539\u53d8\u8fb9\u6743\u7136\u540e\u505a\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<algorithm>\n#include<cstdio>\n#define maxn 10001\n#define maxm 100001\n#define inf 99999999\nusing namespace std;\nstruct edge{\n    int x,y,z;\n}e[maxm];\nint fa[maxn],a[maxn];\nbool vis[maxn];\nint n,m;\nint gf(int k){\n    return k==fa[k]?k:fa[k]=gf(fa[k]);\n}\nbool cmp(edge l,edge m)\n{\n    return l.z<m.z;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for (int i=1;i<=n;i++)\n    fa[i]=i;\n    int ans=inf;\n    for (int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        ans=min(ans,a[i]);\n    }\n    for (int i=1;i<=m;i++)\n    {\n        int z;\n        scanf(\"%d%d%d\",&e[i].x,&e[i].y,&z);\n        e[i].z=a[e[i].x]+a[e[i].y]+z*2;\n    }\n    sort(e+1,e+1+m,cmp);\n    for (int i=1;i<=m;i++)\n    {\n        int f1=gf(e[i].x);\n        int f2=gf(e[i].y);\n        if (f1!=f2)\n        {\n            fa[f1]=f2;\n            ans+=e[i].z;\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1476361208,
        "uid": 8629,
        "name": "ws_fuweidong",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2916 \u3010[USACO08NOV]\u4e3a\u6bcd\u725b\u6b22\u547cCheering up the C\u2026\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u6b21\u5199\u6700\u5c0f\u751f\u6210\u6811\u7684\u9898\u89e3\uff0c\u4e0d\u559c\u52ff\u55b7\u2014\u2014\n\n\u672c\u9898\u6211\u7528\u7684Kruskal\n\n\u53ea\u662f\u6539\u4e86\u4e00\u4e0b\u8def\u5f84\u7684\u6743\u503c\n\n\u800c\u6211\u8fc7\u4e8611\u6b21\u624dAC\n\n\u76f4\u63a5\u4e0a\u4ee3\u7801\n\n```cpp\n#include<stdio.h>\nstruct mon\n{\n    int x;\n    int y;\n    int v;\n};\nint father[100001];\nint find(int x)//\u67e5\n{\n    if(father[x]!=x)\n    father[x]=find(father[x]);\n    return father[x];\n}\n```\nP.S.  \u201c\u5e76\u201d \u653e\u5728\u4e3b\u51fd\u6570\u7684\u5faa\u73af\u91cc\u4e86\nvoid qsort(struct mon a[],int l,int r)//\u5bf9\u5404\u4e2a\u8def\u5f84\u7684\u6743\u503c\u5feb\u6392\n\n```cpp\n{\n    int i,j,mid;\n    struct mon p;\n    i=l;\n    j=r;\n    mid=a[(l+r)/2].v;\n    while(i<=j)\n{\n    while(a[i].v<mid)\n    i++;\n    while(a[j].v>mid)\n    j--;\n    if(i<=j)\n{\n    p=a[i];\n    a[i]=a[j];\n    a[j]=p;\n    i++;\n    j--;\n}\n}\n    if(l<j)\n    qsort(a,l,j);\n    if(i<r)\n    qsort(a,i,r);\n}\nint min(int a,int b)//\u8fd4\u56de\u8f83\u5c0f\u503c\n{\n    return a<b?a:b;\n}\nint main()\n{\n    struct mon a[100001];\n    int c[100001],n,p,i,ans=999999;\n    scanf(\"%d%d\",&n,&p);\n    for(i=1;i<=n;i++)\n    father[i]=i;//\u521d\u59cb\u5316\n    for(i=1;i<=n;i++)\n{\n    scanf(\"%d\",&c[i]);\n    ans=min(ans,c[i]);//\u548c\u5976\u725b\u8c08\u5fc3\u7684\u6700\u77ed\u65f6\u95f4\n}\n    for(i=1;i<=p;i++)\n{\n    scanf(\"%d%d%d\",&a[i].x,&a[i].y,&a[i].v);\n    a[i].v=a[i].v*2+c[a[i].x]+c[a[i].y];//\u8fd9\u4e2a\u5c31\u662f\u5bf9\u6743\u503c\u7684\u4e00\u4e2a\u4fee\u6539\n}\n    qsort(a,1,p);//\u5feb\u6392\n    for(i=1;i<=p;i++)\n{\n    int r1,r2;\n    r1=find(a[i].x);\n    r2=find(a[i].y);\n    if(r1!=r2)//\u4e0d\u662f\u4e00\u4e2a\u7956\u5b97\n{\n    ans+=a[i].v;//\u7d2f\u52a0\u6743\u503c\n    father[r2]=r1;//\u5e76\n}       \n}\n    printf(\"%d\\n\",ans);//\u8f93\u51fa\u7ed3\u679c\n    return 0;\n}\n```",
        "postTime": 1511531117,
        "uid": 51135,
        "name": "\u661f\u4e4b\u6d77",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2916 \u3010[USACO08NOV]\u4e3a\u6bcd\u725b\u6b22\u547cCheering up the C\u2026\u3011"
    }
]