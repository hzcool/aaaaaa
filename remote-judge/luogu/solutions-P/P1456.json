[
    {
        "content": "\u5927\u5bb6\u597d\uff0c\u6211\u662fGD\u521d\u4e00\u6700\u5f31\u849f\u84bb $lolte$\u3002[\u6d1b\u8c37\u535a\u5ba2](https://www.luogu.org/blog/luoyuexiu/solution-p1456)\n\n\u7ec8\u4e8e\u4ece\u60b2\u60e8\u7684\u5b66\u6821\u96c6\u8bad\u4e2d\u89e3\u653e\u5566(\u204e\u02c3\u1d17\u02c2\u204e)\uff0c\u6b63\u597d\u8fd9\u51e0\u5929\u5728\u5237\u6570\u636e\u7ed3\u6784\uff0c\u4e5f\u5728\u5b66\u5de6\u504f\u6811\uff08\u5de6\u5f0f\u5806\uff09\uff0c\u7136\u540e\u5199\u5b8c\u6a21\u677f\u5c31\u6765\u6572\u8fd9\u9053$Monkey$ $King$ \u5566\u3002\n\n~~\u8bdd\u8bf4\u597d\u50cf\u8dd1\u9898\u4e86~~\n\n\u4e0b\u56fe\u5c31\u662f\u4e00\u68f5\u5de6\u504f\u6811\u5566\u3002**npl\u503c(null path length)\uff0c\u96f6\u8def\u5f84\u548c\uff0c\u5c31\u662f\u4e00\u4e2a\u70b9\u5230\u79bb\u5b83\u6700\u8fd1\u7684\u975e\u6ee1\u8282\u70b9\u7684\u8def\u5f84\u957f\u5ea6**\uff08\u53ef\u4ee5\u53c2\u8003\u4e0b\u56fe\uff09\u3002\u5728\u5de6\u504f\u6811\u91cc\uff0c\u53f3\u513f\u5b50\u7684npl\u503c\u5c0f\u4e8e\u7b49\u4e8e\u5de6\u513f\u5b50\u7684npl\u503c\u3002\u4e00\u4e2a\u8282\u70b9\u7684npl\u503c\u4e3a\u53f3\u513f\u5b50npl\u503c+1\u3002\u975e\u6ee1\u8282\u70b9\u7684npl\u503c\u4e3a0\uff0c\u4e3a\u4e86\u65b9\u4fbf\u8ba1\u7b97\uff0c0\u7684npl\u503c\u4e3a-1\u3002\n\n\u5728\u8fd9\u9898\u91cc\uff0c\u6211\u4eec\u8981\u7ef4\u62a4\u4e00\u4e2a\u5927\u6839\u5806\uff0c\u80fd\u529b\u503c\u5927\u7684\u5728\u4e0a\u3002\n![](http://www.z4a.net/images/2018/07/24/IMG_20180724_123303.md.jpg)\n\u7136\u540e\u8fd9\u9898\u5dee\u4e0d\u591a\u662f\u5de6\u504f\u6811\u6a21\u677f\u5566\u3002\n\n\u6709$n$\u53ea\u7334\u5b50\uff0c\u5c31\u662f$n$\u68f5\u5de6\u504f\u6811\u54af\uff0c\u7136\u540e\u6709$m$\u4e2a\u64cd\u4f5c\uff0c\u5c06\u4e24\u68f5\u5de6\u504f\u6811\u4e2d\u7684\u6839\u8282\u70b9\uff08\u5c31\u662f\u80fd\u529b\u503c\u6700\u9ad8\u7684\uff09\u80fd\u529b\u503c\u51cf\u534a\uff0c\u7136\u540e\u5408\u5e76\u8fd9\u4e24\u68f5\u6811\u3002\u51cf\u534a\u4e4b\u540e\uff0c\u76f4\u63a5\u5c06\u6839\u8282\u70b9\u632a\u4e0b\u53bb\u4e0d\u592a\u597d\u505a\uff0c\u4e8e\u662f\u5c31\u5206\u522b\u5c06\u4e24\u68f5\u6811\u7684\u6839\u8282\u70b9\u5148\u51cf\u534a\uff0c\u7136\u540e\u505a\u4e2a**\u5220\u9664**\uff0c\u4e4b\u540e**\u5408\u5e76\u5de6\u53f3\u5b50\u6811**\uff0c\u518d\u5c06\u6839\u8282\u70b9**\u5408\u5e76**\u56de\u6765\uff0c\u518d\u5c06\u8fd9\u4e24\u68f5\u6811\u5408\u5e76\u5c31\u597d\u5566\u3002\n\n### \u4e0b\u9762\u8fd9\u4e24\u5f20\u56fe\u6a21\u62df\u4e86\u8fd9\u9053\u9898\u7684\u64cd\u4f5c\u8fc7\u7a0b:\n![](http://www.z4a.net/images/2018/07/24/IMG_20180724_124338.md.jpg)\n![](http://www.z4a.net/images/2018/07/24/IMG_20180724_124349.md.jpg)\n\n\u7ec6\u8282\u5c31\u8bf7\u89c1\u4ee3\u7801\u548c\u6ce8\u91ca\u5427qwq\n\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h> \nusing namespace std;\ninline int read(){//\u8bfb\u5165\u4f18\u5316 \n    int x=0,f=1;\n    char ch=getchar();\n    while (ch<'0'||ch>'9') {\n        if (ch=='-') f=-1;\n        ch=getchar();\n    }\n    while (ch>='0'&&ch<='9') {\n        x=(x<<1)+(x<<3)+(ch^48);\n        ch=getchar();\n    }\n    return x*f;\n}\nconst int maxn=100010;//n\u7684\u6700\u5927\u503c \nint n,m,L[maxn],R[maxn],key[maxn],npl[maxn],fa[maxn];\n//L\u4e3a\u5de6\u5b50\u6811\u7f16\u53f7\uff0cR\u4e3a\u53f3\u5b50\u6811\u7f16\u53f7\uff0ckey\u4e3a\u80fd\u529b\u503c\uff0cnpl\u8bf7\u89c1\u4e0a\u9762\uff0cfa\u4e3a\u5e76\u67e5\u96c6\u6570\u7ec4 \ninline int getf(int o) { \n    return o==fa[o] ? o : fa[o]=getf(fa[o]);\n    //\u8def\u5f84\u538b\u7f29\u66f4\u5feb \n}\ninline int join(int a,int b) {\n\t//\u5408\u5e76\u51fd\u6570 \n    if (!a) return b;//\u5224\u65ad\u662f\u5426\u4e3a\u7a7a \n    if (!b) return a;\n    if (key[a]<key[b]) swap(a,b);//\u7ef4\u62a4\u5806\u6027\u8d28 \n    R[a]=join(R[a],b);//\u5c06b\u5408\u5e76\u5230a\u7684\u53f3\u5b50\u6811 \n    if (npl[R[a]]>npl[L[a]]) swap(L[a],R[a]);\n\t//\u7ef4\u62a4\u5de6\u504f\u6811\u6027\u8d28\uff0cnpl[r]<=npl[l] \n    npl[a]=npl[R[a]]+1;//\u83b7\u5f97npl\u503c \n    return a;//\u8fd4\u56de\u65b0\u6839\u7f16\u53f7 \n}\ninline void work(int a,int b) {\n    a=getf(a);b=getf(b);//\u627e\u6839 \n    if (a==b) {//\u5df2\u7ecf\u662f\u670b\u53cb \n        puts(\"-1\");\n        //\u4e0d\u6253\u4e86 \n        return;\n    }\n    int rt,art,brt;\n    //a\u6240\u5c5e\u7684\u5de6\u504f\u6811\u7684\u64cd\u4f5c \n    key[a]>>=1;//\u51cf\u534a \n    rt=join(L[a],R[a]);//\u5408\u5e76\u5de6\u53f3\u5b50\u6811 \n    L[a]=R[a]=npl[a]=0;//\u5c06\u6839\u8282\u70b9\u65ad\u6389 \n    art=join(rt,a);//\u91cd\u65b0\u5408\u5e76\u65e7\u6839\n    fa[rt]=fa[a]=art; \n    //\u4e3a\u4e86\u8def\u5f84\u538b\u7f29\uff0c\u8981\u5c06\u65e7\u6839\u548c\u5b50\u6811\u5408\u5e76\u7684\u6839\u90fd\u6307\u5411\u65b0\u6839 \n    key[b]>>=1;\n    rt=join(L[b],R[b]);\n    fa[L[b]]=fa[R[b]]=rt;\n    L[b]=R[b]=npl[b]=0;\n    brt=join(rt,b);\n    fa[rt]=fa[b]=brt;\n    //\u540ca\u7684\u64cd\u4f5c \n    rt=join(art,brt);//\u5408\u5e76\u4e24\u68f5\u5de6\u504f\u6811 \n    fa[art]=fa[brt]=rt;\n    //\u5c06\u4e24\u4e2a\u65e7\u6839\u6307\u5411\u65b0\u6839 \n    printf(\"%d\\n\",key[rt]);\n}\nint main(){\n    while (~scanf(\"%d\",&n)) {//\u591a\u7ec4\u6570\u636e \n        npl[0]=-1;//\u7279\u6b8a\u5904\u7406 \n        for (register int i=1;i<=n;++i) {\n        \t//\u521d\u59cb\u5316 \n            L[i]=R[i]=npl[i]=0;\n            fa[i]=i;\n            key[i]=read();\n        }\n        m=read();\n        for (register int i=1;i<=m;++i) \n            work(read(),read());//\u7334\u5b50\u6253\u67b6 \n    }\n}\n```\n\n### \u8bc4\u6d4b\u8bb0\u5f55\uff1a\n![](http://www.z4a.net/images/2018/07/24/a1cd3c8b7bb82888d8d05f012ff37c1b.md.png)\n\n#### \u795d\u5927\u5bb6OI rp++!!!",
        "postTime": 1532409611,
        "uid": 78752,
        "name": "lolte",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1456 \u3010Monkey King\u3011"
    },
    {
        "content": "[${\\color{#ee8800}\\text{\u6b22\u8fce\u62dc\u8bbf\u6211\u8fd9\u4e2a\u849f\u84bb\u7684\u535a\u5ba2}}$](https://www.luogu.com.cn/blog/Wendigo/)\n\n[P1456 \u3010Monkey King\u3011](https://www.luogu.com.cn/problem/P1456)\n\n### \u6b64\u9898\u7b97\u6cd5:\u5de6\u504f\u6811(\u53ef\u5e76\u5806)\n\n[\u5de6\u504f\u6811\u624b\u753b\u56fe\u89e3](https://www.luogu.com.cn/blog/Wendigo/zuo-pian-shu-ke-bing-dui-tu-xie)\n\n**\u9996\u5148\u8981\u7406\u89e3\u6b63\u786e\u9898\u76ee\uff1a**\n\n\u6709\u82e5\u5e72\u4e2a\u7334\u76df\uff0c\u6700\u5f3a\u7684\u7334\u5b50\u5f53\u5927\u738b\u3002\n\n\u521a\u5f00\u59cb\u7334\u5b50\u4e92\u4e0d\u76f8\u8bc6\uff0c\u6bcf\u53ea\u7334\u5b50\u90fd\u662f\u81ea\u5df1\u76df\u5927\u738b\u3002\n\n\u540e\u6765\u4e24\u53ea\u7334\u5b50\u8d77\u77db\u76fe\uff0c**\u5404\u627e\u5927\u738b**\u6765\u6253\u67b6\u3002\n\n\u6253\u5b8c\u540e\u5927\u738b\u88ab\u524a\uff0c\u80fd\u529b\u4e3a\u539f\u6765\u7684**\u4e00\u534a(\u4e0b\u53d6\u6574)**\u3002\n\n\u6253\u5b8c\u540e\u4e24\u7334\u7fa4**\u5408\u5e76\u4e3a\u540c\u76df\u5e76\u4ece\u65b0\u9009\u5927\u738b**\n\n\u6b64\u65f6\u8f93\u51fa**\u65b0\u5927\u738b\u80fd\u529b**\u3002\n\n>(\u624b\u753b\u52ff\u5410\u69fd)\n\n![\u7334\u5b50.jpg](https://i.loli.net/2019/12/14/ohwtgEYMOlrFx7m.jpg)\n\n\u6b64\u9898\u7528\u5230**\u5de6\u504f\u6811**\uff0c\u5c31\u662f**\u53ef\u5e76\u5806**\u3002\n\n\u6bcf**\u76df**\u7334\u5b50\u90fd\u662f\u4e00\u4e2a\u5806\u3002\n\n\u6bcf\u6b21\u6253\u67b6\uff0c\u5148**\u53cc\u65b9\u53d6\u5927\u738b**\u3002\n\n\u7136\u540e\uff0c\u628a\u4e24\u4e2a\u5927\u738b\u524a\u6389\u3002\n\n\u524a\u5b8c\u540e\u9009\u65b0\u5927\u738b(**\u524a\u4e00\u4e2a\u5927\u738b\u5982\u4e0b**)\u3002\n\n```cpp\nint weak(int x){//x\u4e3a\u5927\u738b\n\tv[x]>>=1; //v[x]/=2;\n\tint rt=merge(ls[x],rs[x]); //\u5408\u5e76\u5b50\u6811\uff0c\u65b0\u6839\u4e3art\n\tls[x]=rs[x]=dep[x]=0; //\u72ec\u7acbx\n\treturn f[rt]=f[x]=merge(rt,x); //\u52a0\u5165x\uff0c\u65b0\u6839\u548cx\u7684\u7956\u5148\u4e3a\u603b\u6839\n}\n\n```\n\u7279\u6b8a\u60c5\u51b5\uff0c**\u77db\u76fe\u751f\u4e8e\u540c\u76df\u95f4\uff0c\u4e0d\u6253\uff0c\u8f93\u51fa$-1$\u3002**\n\n\u5426\u5219\uff0c\u5c06\u8fde\u4e2a\u76df\u5408\u5e76\uff0c**\u7686\u5927\u6b22\u559c**\u3002\n\n```cpp\nif(x==y) puts(\"-1\"); //\u5316\u89e3\u77db\u76fe\nelse {\n\tint l=weak(x),r=weak(y); //\u5927\u738b:\u4e3a\u5565\u53d7\u4f24\u7684\u603b\u662f\u6211\n\tf[l]=f[r]=merge(l,r); //\u63a8\u4e3e\u65b0\u738b\n\tprintf(\"%d\\n\",v[f[l]]); //\u8f93\u51fa\u65b0\u738b\n}\n```\n**\u6b64\u5916\u4e3a\u4e86\u52a0\u901f\uff0c$f[]$\u6570\u7ec4\u662f\u7956\u5148\u6570\u7ec4\uff0c\u7c7b\u4f3c\u5e76\u67e5\u96c6\u7684\u8def\u5f84\u538b\u7f29\u3002**\n\n\n## \u4ee5\u4e0b\u662f\u4ee3\u7801+\u6ce8\u91ca\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+10;\nint n,m;\nint ls[N],rs[N],f[N];\nint v[N],dep[N];\nint find(int x){ //\u8def\u5f84\u538b\u7f29\u5e76\u67e5\u96c6find\u51fd\u6570\n\tif(f[x]==x) return x;\n\treturn f[x]=find(f[x]);\n}\nint merge(int x,int y){\n\tif(!x||!y) return x^y; //x+y x|y \u90fd\u53ef\u4ee5\n\tif(v[x]<v[y]) swap(x,y);\n\trs[x]=merge(rs[x],y);\n\tf[rs[x]]=x;\n\tif(dep[ls[x]]<dep[rs[x]]) //\u5de6\u504f\n\t\tswap(ls[x],rs[x]);\n\tdep[x]=dep[ls[x]]+1;\n\treturn x;\n}\nint weak(int x){//x\u4e3a\u5927\u738b\n\tv[x]>>=1; //v[x]/=2;\n\tint rt=merge(ls[x],rs[x]); //\u5408\u5e76\u5b50\u6811\uff0c\u65b0\u6839\u4e3art\n\tls[x]=rs[x]=dep[x]=0; //\u72ec\u7acbx\n\treturn f[rt]=f[x]=merge(rt,x); //\u52a0\u5165x\uff0c\u65b0\u6839\u548cx\u7684\u7956\u5148\u4e3a\u603b\u6839\n}\nvoid solve(){\n\tdep[0]=-1;\n\tfor(int i=1;i<=n;i++){\n\t\tls[i]=rs[i]=dep[i]=0;\n\t\tscanf(\"%d\",v+i),f[i]=i; //\u5e76\u67e5\u96c6\u4e00\u6837\u7684\u521d\u59cb\u5316\n\t}\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tx=find(x),y=find(y);\n\t\t// printf(\"%d %d\\n\",x,y);\n\t\tif(x==y) puts(\"-1\");\n\t\telse {\n\t\t\tint l=weak(x),r=weak(y);\n\t\t\tf[l]=f[r]=merge(l,r);\n\t\t\tprintf(\"%d\\n\",v[f[l]]);\n\t\t}\n\t}\n}\nint main(){\n\twhile(scanf(\"%d\",&n)==1) //\u591a\u79cd\u6d4b\u8bd5\u6570\u636e\n\t\tsolve();\n\treturn 0;\n}\n```\n\n\u9898\u76ee\u4e2d\u6587\u7ffb\u8bd1\u662f\u5b59\u609f\u7a7a\u3002\n\n**\u5199\u9898\u89e3\u4e0d\u6613\uff0c\u559c\u6b22\u5c31\u70b9\u4e2a\u8d5e\u5427\u3002**\n\n\u8c22\u8c22\u5927\u5bb6! !\n\n\n",
        "postTime": 1576330807,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1456 \u3010Monkey King\u3011"
    },
    {
        "content": "##\u6807\u7b7e\uff1a\u5de6\u504f\u6811&\u5e76\u67e5\u96c6\n\n##\u601d\u8def\u6765\u6e90\uff1a\n\nQ1\uff1a\u4e3a\u4ec0\u4e48\u7528\u5e76\u67e5\u96c6\uff1f\n\nA1\uff1a\u56e0\u4e3a\u8981\u5224\u65ad\u4e24\u961f\u7334\u5b50\u662f\u5426\u8ba4\u8bc6\uff0c\u5728\u6b64\u5904\u4f7f\u7528\u5e76\u67e5\u96c6\u53ef\u4ee5\u4fbf\u4e8e\u7ef4\u62a4\u4e24\u961f\u7334\u5b50\u95f4\u7684\u5173\u7cfb\u3002\n\nQ2\uff1a\u4e3a\u4ec0\u4e48\u7528\u5806\uff1f\n\nA2\uff1a\u56e0\u4e3a\u6bcf\u6b21\u5bf9\u6218\u90fd\u9700\u8981\u67e5\u627e\u5f53\u524d\u4e24\u961f\u7334\u5b50\u4e2d\u80fd\u529b\u503c\u6700\u5927\u7684\u7334\u5b50\uff0c\u8fd9\u91cc\u4f7f\u7528\u5806\u53ef\u4ee5\u4fbf\u4e8e\u9009\u51fa\u9996\u9886\u3002\n\nQ3\uff1a\u7528\u4ec0\u4e48\u6837\u7684\u5806\uff1f\n\nA3\uff1a\u56e0\u4e3a\u9700\u8981\u5728\u4e24\u961f\u7334\u5b50\u4e89\u6267\u4e4b\u540e\u5c06\u4e24\u961f\u7334\u5b50\u5408\u5e76\uff0c\u5e76\u4e14\u4e0d\u80fd\u7834\u574f\u5806\uff0c\u6240\u4ee5\u8981\u4f7f\u7528\u53ef\u5e76\u5806\u3002\n\nQ4\uff1a\u7528\u4ec0\u4e48\u53ef\u5e76\u5806\uff1f\n\nA4\uff1a\u5de6\u504f\u6811\uff0c\u6590\u6ce2\u90a3\u5951\u5806\u90fd\u662f\u4e0d\u9519\u7684\u53ef\u5e76\u5806\uff0c\u8fd9\u91cc\u6211\u4f7f\u7528\u7684\u662f\u5de6\u504f\u6811\u3002\n\n##\u5177\u4f53\u505a\u6cd5\uff1a\n\n-\u4f7f\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u4e24\u961f\u7334\u5b50\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5728\u4e89\u6267\u524d\u5148\u7279\u5224\u4e24\u961f\u7334\u5b50\u5df2\u7ecf\u8ba4\u8bc6\u7684\u60c5\u51b5\u3002\n\n-\u6839\u636e\u9898\u76ee\u8981\u6c42\uff0c\u7528\u5de6\u504f\u6811\u6a21\u62df\u5408\u5e76\u8fc7\u7a0b\u5373\u53ef\u3002\n\n**\u53c2\u8003\u4ee3\u7801**\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\n\nstruct monkey {\n    int lson;//\u7528\u4e0b\u6807\u6a21\u62df\u5730\u5740 \n    int rson;//\u7528\u4e0b\u6807\u6a21\u62df\u5730\u5740 \n    int power;//\u80fd\u529b\u503c \n    int dist;//\u8282\u70b9\u5230\u79bb\u5b83\u6700\u8fd1\u7684\u5916\u8282\u70b9\u7684\u8ddd\u79bb\uff08\u5907\u6ce8\uff1a\u5916\u8282\u70b9\u4e3a\u53f6\u8282\u70b9\u6216\u53ea\u6709\u5de6\uff08\u53f3\uff09\u5b50\u6811\u7684\u8282\u70b9\uff09 \n}m[100005];\n\nint f[100005];\n\nint ff(int ele) {//\u5e76\u67e5\u96c6-\u8def\u5f84\u538b\u7f29 \n    if (ele==f[ele]) {\n        return ele;\n    }\n    return f[ele]=ff(f[ele]);\n}\n\nint merge(int ele1,int ele2) {//\u5408\u5e76\u4e24\u4e2a\u5de6\u504f\u6811\uff0c\u5e76\u8fd4\u56de\u65b0\u6811\u7684\u6839\u8282\u70b9 \n    if (ele1==0) {//\u5982\u679c\u6709\u4e00\u68f5\u5f85\u5408\u5e76\u7684\u6811\u4e3a\u7a7a\u6811\uff0c\u5219\u5408\u5e76\u7ed3\u679c\u4e3a\u53e6\u4e00\u68f5\u6811 \n        return ele2;\n    }\n    if (ele2==0) {//\u540c\u4e0a \n        return ele1;\n    }\n    if (m[ele1].power<m[ele2].power) {//\u4fdd\u8bc1\u7b2c\u4e00\u68f5\u6811\u7684\u80fd\u529b\u503c<\u7b2c\u4e8c\u9897\u6811 \n        swap(ele1,ele2);\n    }\n    m[ele1].rson=merge(m[ele1].rson,ele2);//\u5c06\u8f83\u5c0f\u7684\u6811\u5408\u5e76\u5230\u8f83\u5927\u6811\u7684\u53f3\u5b50\u6811\u4e2d \n    f[m[ele1].rson]=ele1;\n    if (m[ele1].rson==0) {//\u66f4\u65b0\u6839\u8282\u70b9\u5230\u79bb\u5b83\u6700\u8fd1\u7684\u5916\u8282\u70b9\u7684\u8ddd\u79bb \n        m[ele1].dist=0;\n    }\n    else {\n        m[ele1].dist=m[m[ele1].rson].dist+1;\n    }\n    if (m[m[ele1].lson].dist<m[m[ele1].rson].dist) {//\u6839\u636e\u5de6\u504f\u6811\u7684\u6027\u8d28\uff0c\u5f53\u5de6\u4fa7\u7684\u957f\u5ea6>\u53f3\u4fa7\u7684\u957f\u5ea6\u65f6\uff0c\u8981\u4ea4\u6362\u5de6\u53f3\u5b50\u6811 \n        swap(m[ele1].lson,m[ele1].rson);\n    }\n    return ele1;\n}\n\nint main() {\n    int n,t,x,y,p,q,root,newx,newy;\n    while (scanf(\"%d\",&n)!=EOF) {\n        for (register int i=1;i<=n;++i) {\n            scanf(\"%d\",&m[i].power);\n        }\n        for (register int i=1;i<=n;++i) {//\u5728\u6700\u521d\u7684\u65f6\u5019\uff0c\u6bcf\u53ea\u7334\u5b50\u72ec\u7acb\u5f62\u6210\u4e00\u4e2a\u7fa4\u4f53 \n            m[i].lson=0;\n            m[i].rson=0;\n            f[i]=i;\n        }\n        scanf(\"%d\",&t);\n        while (t--) {\n            scanf(\"%d%d\",&x,&y);\n            p=ff(x);//\u627e\u51fa\u5404\u81ea\u7684\u9996\u9886\uff0c\u8fd9\u90e8\u5206\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4 \n            q=ff(y);\n            if (p==q) {//\u6309\u9898\u76ee\u8981\u6c42\uff0c\u4e24\u53ea\u672c\u6765\u5c31\u8ba4\u8bc6\u7684\u7334\u5b50\u4e0d\u4f1a\u53d1\u751f\u4e89\u6267 \n                printf(\"-1\\n\");\n                continue;\n            }\n            m[p].power/=2;//\u66f4\u65b0\u9996\u9886\u5728\u4e89\u6267\u540e\u5269\u4f59\u7684\u80fd\u529b\u503c \n            root=merge(m[p].lson,m[p].rson);//\u5148\u5408\u5e76\u539f\u9996\u9886\u7684\u5de6\u53f3\u5b50\u6811 \n            m[p].lson=0;//\u5c06\u9996\u9886\u5b64\u7acb \n            m[p].rson=0;\n            newx=merge(root,p);//\u8ba9\u9996\u9886\u5f52\u961f\uff0c\u8fd9\u90e8\u5206\u7528\u5de6\u8fb9\u6570\u7ef4\u62a4\uff0c\u4ee5\u4fbf\u9009\u51fa\u9996\u9886 \n            m[q].power/=2;//\u540c\u4e0a \n            root=merge(m[q].lson,m[q].rson);\n            m[q].lson=0;\n            m[q].rson=0;\n            newy=merge(root,q);\n            root=merge(newx,newy);//\u5c06\u4e89\u6267\u540e\u7684\u4e24\u961f\u7334\u5b50\u5408\u5e76 \n            f[newx]=root;//\u66f4\u65b0\u5e76\u67e5\u96c6 \n            f[newy]=root;\n            printf(\"%d\\n\",m[root].power);//\u8f93\u51fa\u65b0\u9996\u9886\u7684\u80fd\u529b\u503c \n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1506910205,
        "uid": 23688,
        "name": "\u798f\u5dde\u5468\u5723\u529b",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1456 \u3010Monkey King\u3011"
    },
    {
        "content": "## \u819c\u62dc\u624b\u5199\u53ef\u5e76\u5806\u7684\u5927\u4f6c\u4eec  \n\u672c\u849f\u84bb\u53ea\u4f1a\u7528\u4e00\u4e2a\u5341\u5206\u5077\u61d2\u7684\u529e\u6cd5  \n~~\uff08\u4f46\u4f3c\u4e4e\u590d\u6742\u5ea6\u4e0d\u90a3\u4e48\u4f18\u79c0\uff09~~  \n\u5e94\u8be5\u6ca1\u4eba\u77e5\u9053\u5728 ext/pb_ds/priority_queue.hpp\n\u91cc\u9762\u6709\u53ef\u5e76\u5806\u7684STL\u5427\uff0c\u8fd9\u91cc\u8bb2\u4e00\u4e0b\u6700\u4f18\u79c0\u7684\u914d\u5bf9\u5806  \n\uff08pairing_heap)\n```\n#include<ext/pb_ds/priority_queue.hpp>\nusing namespace __gnu_pbds;\npriority_queue<int,std::less<int>,pairing_heap_tag> q[100005];\n```\n\u652f\u6301join,pop,top,push\u2026\u2026\u64cd\u4f5c\uff08\u603b\u4e4b\u5de6\u504f\u6811\u80fd\u7528\u7684\uff0c\u90fd\u80fd\u7528\uff09  \n(\uff3e\uff35\uff3e)\u30ce~\uff39  \n~~\u624b\u5199\u53ef\u5e76\u5806\u88ab\u629b\u5f03\u4e86~~  \n\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u4e00\u4e0b\u6240\u5728\u5806\u5c31\u597d\u4e86  \n\u7136\u800c\u6709\u591a\u7ec4\u6570\u636e\uff0c\u53ea\u80fd\u653e\u5f03\u590d\u6742\u5ea6\u4e86\uff0c\u9884\u5904\u7406pop\u4e00\u904d  \ncode:\n```\n#include<bits/stdc++.h>\n#include<ext/pb_ds/priority_queue.hpp>\nusing namespace __gnu_pbds;\ntypedef priority_queue<int,std::less<int>,pairing_heap_tag> heap;\nusing namespace std;\nheap q[100005];\nint fa[100005],n,m;\ninline int fd(int x)\n{\n\tif(fa[x]!=x) fa[x]=fd(fa[x]);\n\treturn fa[x];\n}\nvoid work()\n{\n\tint x,y,fx,fy,xx,yy;\n\tfor(int i=1;i<=n;i++)\n\t\twhile(!q[i].empty())q[i].pop();\n\tfor(int i=1;i<=n;i++)\n\t\tfa[i]=i,cin>>x,q[i].push(x);\n\tcin>>m;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>x>>y;\n\t\tfx=fd(x),fy=fd(y);\n\t\tif(fx==fy)\n\t\t{\n\t\t\tcout<<-1<<endl;\n\t\t\tcontinue;\n\t\t}\n\t\txx=q[fx].top(),yy=q[fy].top();\n\t\tq[fx].pop(),q[fy].pop();\n\t\txx/=2,yy/=2;\n\t\tq[fx].push(xx),q[fy].push(yy);\n\t\tq[fx].join(q[fy]);\n\t\tfa[fy]=fx;\n\t\tcout<<q[fx].top()<<endl;\n\t}\n\treturn ;\n}\nint main()\n{\n\twhile(scanf(\"%d\",&n)!=EOF) work();\n\treturn 0;\n}\n```",
        "postTime": 1534655414,
        "uid": 103990,
        "name": "asd_a",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1456 \u3010Monkey King\u3011"
    },
    {
        "content": "\u4e2a\u4eba\u8ba4\u4e3a\uff0c\u8fd9\u9898\u53ef\u4ee5\u7528\u66f4\u597d\u5199\u7684 **\u542f\u53d1\u5f0f\u5408\u5e76** \u6765\u6c34\u8fc7\u3002\n\n\u8bf4\u662f\u201c\u6c34\u201d\uff0c\u4f46\u5176\u5b9e\u590d\u6742\u5ea6 $O(n\\log^2 n)$ \u4e5f\u662f\u6b63\u89e3\u3002\n\n\u9898\u76ee\u6240\u8bf4\u7684\u64cd\u4f5c\u5f88\u7b80\u5355\uff0c\u652f\u6301\u5f88\u591a\u4e2a\u5927\u6839\u5806\u7684\u5408\u5e76\u4ee5\u53ca\u4fee\u6539\u6700\u5927\u503c\u3002\n\n1. \u5bf9\u4e8e\u6bcf\u4e2a\u5408\u5e76\u64cd\u4f5c\uff0c\u6211\u4eec\u6309\u7167 **\u5806\u7684\u5927\u5c0f** \u4e3a $\\text{rank}$ \u542f\u53d1\u5f0f\u5408\u5e76\u3002\n\n   \u53ef\u4ee5\u8bc1\u660e\uff0c\u6bcf\u6b21\u5408\u5e76\u6700\u5c0f\u7684\u5806\u7684\u5927\u5c0f\u81f3\u5c11\u4f1a\u53d8\u4e3a\u539f\u6765\u7684 $2$ \u500d\uff0c\u56e0\u6b64\u8fd9\u4e2a\u64cd\u4f5c\u662f**\u5747\u644a** $O(\\log^2 n)$ \u7684\u3002\n   \n2. \u5bf9\u4e8e\u6bcf\u4e2a\u5220\u9664\u64cd\u4f5c\uff0c\u4f7f\u7528\u4e8c\u53c9\u5806\uff08\u6216\u662f `std::priority_queue`\uff09\u6765\u5b9e\u73b0\u662f $O(1)$ \u7684\u3002\n\n3. \u5bf9\u4e8e\u6bcf\u4e2a\u63d2\u5165\u64cd\u4f5c\uff0c\u663e\u7136\u662f $O(\\log n)$ \u7684\u3002\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u5229\u7528\u542f\u53d1\u5f0f\u5408\u5e76\u5806\u6765\u89e3\u51b3\u8fd9\u9053\u9898\u662f\u5408\u60c5\u5408\u7406\u7684\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a **\u5747\u644a** $O(n \\log n + m\\log^2n)$\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n\nconst int N = 1e6 + 5;\n\nint n, m;\n\nstd::priority_queue <int> h[N];\n\nstruct DSU {\n\tstatic const int MS = N;\n\tint fa[MS], siz[MS];\n\tint find(int x) { return x == fa[x] ? x : fa[x] = find(fa[x]); }\n\tvoid join(int a, int b) {\n\t\tint pa = find(a), pb = find(b);\n\t\tif(pa == pb) return;\n\t\tif(siz[pa] < siz[pb]) std::swap(pa, pb);\n\t\tfa[pb] = pa, siz[pa] += siz[pb];\n\t}\n\tint size(int x) { return siz[ find(x) ]; }\n\tvoid build(int x) {\n\t\tfor(int i = 1; i <= x; ++i) fa[i] = i, siz[i] = 1;\n\t}\n} dsu;\n\nint main() {\n\twhile(scanf(\"%d\", &n) != EOF) {\n\t\tdsu.build(n);\n\t\tfor(int i = 1; i <= n; ++i) {\n\t\t\tint v;\n\t\t\tscanf(\"%d\", &v);\n\t\t\twhile(!h[i].empty()) h[i].pop();\n\t\t\th[i].push(v);\n\t\t}\n\t\tscanf(\"%d\", &m);\n\t\tfor(int i = 1; i <= m; ++i) {\n\t\t\tint x, y;\n\t\t\tscanf(\"%d %d\", &x, &y);\n\t\t\tint fx = dsu.find(x), fy = dsu.find(y);\n\t\t\tif(fx == fy) { puts(\"-1\"); continue; }\n\t\t\telse {\n\t\t\t\tint vx = h[fx].top(), vy = h[fy].top();\n\t\t\t\th[fx].pop(), h[fy].pop();\n\t\t\t\tif(dsu.size(fx) < dsu.size(fy)) std::swap(fx, fy);\n\t\t\t\twhile(!h[fy].empty()) {\n\t\t\t\t\tint tmp = h[fy].top(); h[fy].pop();\n\t\t\t\t\th[fx].push(tmp);\n\t\t\t\t}\n\t\t\t\tdsu.join(fx, fy);\n\t\t\t\th[fx].push(vx / 2), h[fx].push(vy / 2);\n\t\t\t\tprintf(\"%d\\n\", h[fx].top());\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1583155856,
        "uid": 78407,
        "name": "Clever_Jimmy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1456 \u3010Monkey King\u3011"
    },
    {
        "content": "\u5e7f\u544a\uff1a[$\\texttt{BLOG}$](https://stevebraveman.github.io/)\n\n\u6211\u770b\u8fd9\u9053\u9898\u6ca1\u6709\u4eba\u7528\u624b\u5199\u914d\u5bf9\u5806\u8fc7\u7684\uff0c\u90a3\u6211\u5c31\u4ea4\u4e00\u53d1\u7528\u624b\u5199\u914d\u5bf9\u5806\u7684\u9898\u89e3\u3002\n\n\u8fd9\u9053\u9898\u6bd4\u8f83\u9ebb\u70e6\u7684\u64cd\u4f5c\u5c31\u662f\u4fee\u6539\u64cd\u4f5c\uff0c\u6211\u4e3b\u8981\u8bb2\u4e00\u4e0b\u4fee\u6539\u64cd\u4f5c\u3002\n\n\u6211\u662f\u8fd9\u4e48\u505a\u7684\uff1a\n\n\u5982\u679c\u8fd9\u4e2a\u5806\u7684\u5927\u5c0f\u662f1\uff0c\u90a3\u4e48\u76f4\u63a5\u4fee\u6539\u3002\n\n\u5982\u679c\u4e0d\u662f\uff0c\u5219\u5c06\u6700\u5927\u6743\u503c\u7684\u8282\u70b9\u5220\u9664\uff0c\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9\uff0c\u6743\u503c\u4e3a\u88ab\u5220\u9664\u8282\u70b9\u7684\u6743\u503c\u7684\u4e00\u534a\uff0c\u518d\u4e0e\u4e4b\u524d\u7684\u8282\u70b9\u5408\u5e76\u3002\n\n\u6700\u540e\u5c06\u4e24\u4e2a\u5806\u5408\u5e76\u5c31\u884c\u4e86\u3002\n\n### Code:\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define MAXN 2000010\nstruct Heap {\n\tint v, id;\n\tint s, xd;\n}h[MAXN];\nint fa[MAXN], a[MAXN], siz[MAXN];\nbool ifd[MAXN];\nint merge(int a, int b) {\n\tif (h[a].v == 0) return b;\n\tif (h[b].v == 0) return a;\n\tif (h[a].v < h[b].v || (h[a].v == h[b].v && a < b)) std::swap(a, b);\n\th[b].xd = h[a].s;\n\th[a].s = b;\n\treturn a;\n}\nint merges(int a) {\n\tif (h[a].v == 0 || h[h[a].xd].v == 0) return a;\n\tint p = h[a].xd, q = h[p].xd;\n\th[a].xd = h[p].xd = 0;\n\treturn merge(merge(a, p), merges(q));\n}\nint del(int a) {\n\th[a].v = -1;\n\treturn merges(h[a].s);\n}\nint find(int x) {\n\tif (fa[x] == x) return x;\n\telse return fa[x] = find(fa[x]);\n}\nbool un(int x, int y) {\n\tfa[y] = x;\n\treturn 1;\n}\nint head[MAXN], x, y, n, m, cnt;\nvoid push(int a, int &p) {\n\tcnt++;\n\thead[cnt] = cnt;\n\th[cnt].v = a;\n\th[cnt].id = cnt;\n\th[cnt].s = h[cnt].xd = 0;\n\tfa[cnt] = cnt;\n\tsiz[cnt] = 1;\n\tp = merge(cnt, p);\n}\nchar op[5];\nint main() {\n\twhile (scanf(\"%d\", &n) != EOF) {\n\t\t// scanf(\"%d\", &n);\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tscanf(\"%d\", &a[i]);\n\t\t\tfa[i] = i;\n\t\t}\n\t\th[0].v = 0;\n\t\tcnt = 0;\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\thead[i] = i;\n\t\t\th[i].v = a[i];\n\t\t\th[i].id = i;\n\t\t\th[i].s = h[i].xd = 0;\n\t\t\tsiz[i] = 1;\n\t\t}\n\t\tcnt = n;\n\t\tscanf(\"%d\", &m);\n\t\twhile (m--) {\n\t\t\tscanf(\"%d%d\", &x, &y);\n\t\t\tint _x = find(x), _y = find(y);\n\t\t\tif (_x == _y) {\n\t\t\t\tputs(\"-1\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tbool fl1 = 0, fl2 = 0;\n\t\t\tif (siz[head[_x]] == 1) {\n\t\t\t\th[head[_x]].v /= 2;\n\t\t\t\tfl1 = 1;\n\t\t\t}\n\t\t\tif (siz[head[_y]] == 1) {\n\t\t\t\th[head[_y]].v /= 2;\n\t\t\t\tfl2 = 1;\n\t\t\t}\n\t\t\tif (!fl1) {\n\t\t\t\tint f = h[head[_x]].v;\n\t\t\t\thead[_x] = del(head[_x]);\n\t\t\t\tpush(f / 2, head[_x]);\n\t\t\t}\n\t\t\tif (!fl2) {\n\t\t\t\tint g = h[head[_y]].v;\n\t\t\t\thead[_y] = del(head[_y]);\n\t\t\t\tpush(g / 2, head[_y]);\n\t\t\t}\n\t\t\tun(_x, _y);\n\t\t\thead[_x] = merge(head[_x], head[_y]);\n\t\t\tsiz[head[_x]] += siz[head[_y]];\n\t\t\tprintf(\"%d\\n\", h[head[_x]].v);\n\t\t}\n\t}\n}\n```",
        "postTime": 1573114561,
        "uid": 96570,
        "name": "RiverFun",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1456 \u3010Monkey King\u3011"
    },
    {
        "content": "\u9898\u76ee\u5730\u5740\uff1a[P1456 Monkey King](https://www.luogu.org/problemnew/show/P1456)\n\n\u4e00\u9053~~\u633a\u6a21\u677f\u7684~~\u5de6\u504f\u6811\u9898\n\n\u4e0d\u4f1a\u5de6\u504f\u6811\uff1f\u770b[\u8bba\u6587](https://wenku.baidu.com/view/20e9ff18964bcf84b9d57ba1.html)\u6253[\u6a21\u677f](https://www.luogu.org/problemnew/show/P3377)\uff0c\u5b8c\u4e86\u4e4b\u540e\u518d\u56de\u6765\u5427\n\n~~\u7136\u540e\u4f60\u53d1\u73b0\u770b\u5b8c\u8bba\u6587\u6253\u5b8c\u6a21\u677f\u4e4b\u540e\u5c31\u53ef\u4ee5A\u6389\u8fd9\u9053\u9898\u4e0d\u7528\u56de\u6765\u4e86~~\n\n\u7ec6\u8282\u89c1\u4ee3\u7801\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 6;\nint n, m, f[N], a[N], l[N], r[N], d[N];\n\n//\u7c7b\u5e76\u67e5\u96c6\u8def\u5f84\u538b\u7f29\nint get(int x) {\n\tif (x == f[x]) return x;\n\treturn f[x] = get(f[x]);\n}\n\n//\u5de6\u504f\u6811\u5408\u5e76\ninline int merge(int x, int y) {\n\tif (!x || !y) return x + y;//x\u6216y\u4e3a0\u5219\u8fd4\u56de\u53e6\u4e00\u4e2a\u7684\u7b80\u5199\n\tif (a[x] < a[y]) swap(x, y);//\u4fdd\u8bc1\u5806\u6027\u8d28\n\tr[x] = merge(r[x], y);\n\tf[r[x]] = x;\n\tif (d[l[x]] < d[r[x]]) swap(l[x], r[x]);//\u4fdd\u8bc1\u5de6\u504f\u6811\u6027\u8d28\n\td[x] = d[r[x]] + 1;\n\treturn x;\n}\n\n//\u5220\u9664\u5806\u9876\uff0c\u6ce8\u610f\u8bed\u53e5\u987a\u5e8f\ninline void pop(int x) {\n\tf[l[x]] = l[x], f[r[x]] = r[x];\n\tf[x] = merge(l[x], r[x]);\n\tl[x] = r[x] = 0;\n}\n\n//\u591a\u7ec4\u6570\u636e\u5355\u72ec\u5199\u4e00\u4e2a\u51fd\u6570\ninline void work() {\n\td[0] = -1;//0\u7684\u201c\u8ddd\u79bb\u201d\u4e3a-1\n\tfor (int i = 1; i <= n; i++) {\n\t\tscanf(\"%d\", &a[i]);\n\t\tf[i] = i;\n\t\td[i] = l[i] = r[i] = 0;//\u591a\u7ec4\u6570\u636e\u6e05\u7a7a\u6570\u7ec4\n\t}\n\tcin >> m;\n\twhile (m--) {\n\t\tint x, y;\n\t\tscanf(\"%d %d\", &x, &y);\n\t\tint fx = get(x), fy = get(y);//\u627e\u5806\u9876\n\t\tif (fx == fy) puts(\"-1\");//\u82e5\u5728\u540c\u4e00\u4e2a\u5806\u4e2d\u8f93\u51fa-1\n\t\telse {\n\t\t\tpop(fx), pop(fy);//\u5220\u9664\u5806\u9876\n\t\t\ta[fx] >>= 1, a[fy] >>= 1;\n\t\t\tf[fx] = merge(fx, f[fx]), f[fy] = merge(fy, f[fy]);//\u5c06\u65b0\u503c\u63d2\u5165\u5806\u9876\n\t\t\tfx = get(fx), fy = get(fy);\n\t\t\tprintf(\"%d\\n\", a[merge(fx,fy)]);//\u8f93\u51fa\u5806\u9876\uff0c\u6ce8\u610f\u5806\u4e2d\u5b58\u7684\u662f\u4e0b\u6807\u800c\u4e0d\u662f\u6570\n\t\t}\n\t}\n}\n\nint main() {\n\twhile (cin >> n) work();\n\treturn 0;\n}\n```",
        "postTime": 1550756400,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "P1456 Monkey King"
    },
    {
        "content": "\u5199\u4e86\u4e00\u4e2a\u6298\u78e8\u6211\u4e24\u5929\u7684\u5de6\u504f\u6811\u3002\u3002\u3002\u5408\u5e76\u7684\u5730\u65b9\u641e\u4e86\u6211\u5f88\u4e45\u554a\uff0c\u5177\u4f53\u6ce8\u91ca\u770b\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=100000+10;\nint n,m,f[maxn],dis[maxn];\nstruct node{\n    int v,l,r;\n}a[maxn];\nint merge(int x,int y){\n    if(x==0 || y==0)return x+y;//\u5982\u679c\u6709\u4e00\u4e2a\u5b50\u6811\u4e3a0\u5c31\u8fd4\u56de\u53e6\u4e00\u4e2a\n    if(a[x].v<a[y].v)    \n        swap(x,y);//\u6211\u4eec\u8981\u4fdd\u8bc1\u662f\u5c0f\u6839\u5806\n    a[x].r=merge(a[x].r,y);//\u9012\u5f52\u5b9e\u73b0\u6bcf\u6b21\u5c06\u4e24\u4e2a\u8981\u5408\u5e76\u7684\u5806\u6bd4\u8f83\uff0ca[x].r\u662f\u4e00\u4e2a\u5806\u7684\u53f3\u5b50\u6811\uff0cy\u662f\u53e6\u4e00\u4e2a\u5806\n    f[a[x].r]=x;\n    if(dis[a[x].r]>dis[a[x].l])//\u8981\u4fdd\u8bc1\u5de6\u504f\u6811\uff0c\u6240\u4ee5\u5de6\u8fb9\u7684\u8ddd\u79bb\u4e00\u5b9a\u8981\u5927\u4e8e\u7b49\u4e8e\u53f3\u8fb9\n        swap(a[x].r,a[x].l);    \n    if(a[x].r==0)dis[x]=0;    //\u8fd9\u91cc\u7275\u626f\u5230\u5de6\u504f\u6811\u7684\u8ddd\u79bb\u7684\u6982\u5ff5\uff0c\u56e0\u4e3a\u4ed6\u6ca1\u6709\u53f3\u5b50\u6811\u4e86\uff0c\u6240\u4ee5\u4ed6\u7684\u8ddd\u79bb\u5c31\u662f0\n    else dis[x]=dis[a[x].r]+1;    //\u5426\u5219\u8ddd\u79bb\u4e3a\u4ed6\u53f3\u5b50\u6811\u7684\u8ddd\u79bb\u52a01\n    return x;    //\u8fd4\u56dex\n}\nint r(int &x){\n    char c=getchar();x=0;\n    while(!isdigit(c))c=getchar();\n    while(isdigit(c))x=x*10+c-'0',c=getchar();\n}\nint find(int x){\n    return f[x]==x?x:find(f[x]);    \n}\nint del(int x){\n    int l=a[x].l,r=a[x].r;    \n    f[l]=l,f[r]=r;//\u56e0\u4e3a\u5220\u6389\u4e86\u6839\u8282\u70b9\uff0c\u6240\u4ee5\u6839\u8282\u70b9\u7684\u4e24\u4e2a\u5b69\u5b50\u7684\u7236\u4eb2\u90fd\u53d8\u6210\u81ea\u5df1\n    a[x].l=a[x].r=dis[x]=0;//\u5220\u9664\u6839\u8282\u70b9\n    return merge(l,r);\n}\nvoid work(int x,int y){\n    a[x].v/=2,a[y].v/=2;//\u6253\u6597\u4ee5\u540e\u6743\u503c\u51cf\u534a\n    int left,right;\n    left=del(x);\n    right=del(y);//\u524d\u4e24\u4e2aleft\u548cright\u662f\u5904\u7406\u8981\u5408\u5e76\u7684\u4e24\u4e2a\u5806\u7684\uff0c\u56e0\u4e3a\u8981\u628a\u4ed6\u4eec\u7684\u6839\u8282\u70b9\u90fd\u5220\u6389\uff08\u56e0\u4e3a\u5df2\u7ecf\u6253\u6597\u8fc7\u4e86\uff0c\u503c\u53d1\u751f\u4e86\u53d8\u5316\uff09\u7136\u540e\u5408\u5e76\u6210\u4e00\u4e2a\u65b0\u5806\n    left=merge(left,x);\n    right=merge(right,y);//\u8fd9\u4e24\u4e2aleft\u548cright\u662f\u628a\u4ed6\u4eec\u53d8\u5316\u8fc7\u7684\u6839\u8282\u70b9\u91cd\u65b0\u653e\u8fdb\u53bb\uff0c\u5806\u548c\u70b9\u5408\u5e76\uff0c\u4e5f\u53ef\u4ee5\u770b\u6210\u4e24\u4e2a\u5806\u5408\u5e76\n    left=merge(left,right);//\u6700\u540e\u518d\u5408\u5e76\u8fd9\u4e24\u4e2a\u5806\n    printf(\"%d\\n\",a[left].v);\n}\nint main(){\n    while(scanf(\"%d\",&n)!=EOF){\n        for(int i=1;i<=n;++i){    \n            f[i]=i;\n            a[i].r=a[i].l=0;\n            dis[i]=0;\n```\n}//\u591a\u7ec4\u6570\u636e\u6240\u4ee5\u6bcf\u6b21\u90fd\u8981\u521d\u59cb\u5316\n```cpp\n        for(int i=1;i<=n;++i)r(a[i].v);//\u8bfb\u5165\u6743\u503c\n        r(m);\n        for(int i=1;i<=m;++i){\n            int x,y;\n        r(x),r(y);\n            //cout<<\"---\";\n            int fx=find(x),fy=find(y);\n            if(fx==fy){\n                printf(\"-1\\n\");\n                continue;    \n            }\n            work(fx,fy);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1505026915,
        "uid": 47202,
        "name": "cheeseYang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1456 \u3010Monkey King\u3011"
    },
    {
        "content": "\uff08\u4e0a\u4e00\u6b21\u66f4\u65b0\uff1a 2022-06-02 19:40 \uff0c\u4fee\u6539\u4e86\u4e71\u52a0\u7a7a\u683c\u7684\u95ee\u9898\uff0c\u4ee5\u53ca\u51fd\u6570 merge \u7684\u547d\u540d\uff09\r\n\r\n\u5927\u5bb6\u597d\uff0c\u6211\u662f CQ-FZOIer\uff0cC2024 \u7ea7\u849f\u84bb CJH\u3002[\u6d1b\u8c37\u535a\u5ba2](https://www.luogu.com.cn/blog/Chen-Jinhui/solution-p1456)\r\n\r\n\u6700\u8fd1\u6211\u4eec\u5b66\u4e86\u5806\uff0c\u63a5\u7740\u5b66\u4e86\u5e76\u67e5\u96c6\uff0c\u8001\u5e08\u5c31\u4e3a\u6211\u4eec\u5e03\u7f6e\u4e86\u8fd9\u4e00\u9053\u9898\u76ee [Monkey King](https://www.luogu.com.cn/problem/P1456) \u4e86\u3002 ~~\u6211\u4eec\u8fd8\u6ca1\u6709\u5b66\u5de6\u504f\u6811\uff0c\u6240\u4ee5\u770b\u4e0d\u61c2\u5404\u4f4d\u5927\u4f6c\u7684\u5de6\u504f\u6811\u9898\u89e3\u3002~~ \u6211\u51b3\u5b9a\u6362\u4e00\u79cd\u66f4\u6d45\u663e\u7684\u65b9\u5f0f\uff0c\u4e5f\u5c31\u662f\u2026\u2026\r\n\r\n**\u5806+\u5e76\u67e5\u96c6**\u7684\u65b9\u6cd5\u6765 AC \u6b64\u9898\uff01\uff01\uff01\r\n\r\n\u4e0b\u9762\u2026\u2026\r\n\r\n### \u5f00\u59cb\u5207\u5165\u6b63\u9898\uff0c\u5206\u6790\u9898\u76ee\uff1a\r\n\r\n1. \u6709 $N$ \u53ea\u7334\u5b50\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u8981\u521b\u5efa $N$ \u4e2a\u5927\u6839\u5806\u3002\r\n\r\n2. \u8fd8\u9700\u8981\u957f\u5ea6\u4e3a $N$ \u7684 father \u6570\u7ec4\uff0c\u7528\u6765\u50a8\u5b58\u7334\u5b50\u7684\u6839\uff0c$fa_i$ \u8868\u793a\u7b2c $i$ \u4e2a\u7334\u5b50\u7684\u6839\u3002\r\n\r\n3. \u5f53\u4e24\u53ea\u7334\u5b50\u6253\u6597\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u5e76\u67e5\u96c6\u7684**\u627e\u6839**\uff08find\uff09\u6765\u67e5\u627e\u7334\u5b50\u7684\u6839\uff1a\r\n\r\n```cpp\r\nint find(int x){//\u627e\u7334\u5b50x\u7684\u6839\r\n\t//\u5faa\u73af\u67e5\u627e\r\n\t/*while(x!=fa[x]){\r\n\t\tx=fa[x];\r\n\t}\r\n\treturn x;*/\r\n\t//\u9012\u5f52\u67e5\u627e\r\n\tif(x==fa[x]) return x;\r\n\treturn fa[x]=find(fa[x]);\r\n}\r\n```\r\n4. \u6839\u636e\u9898\u610f\uff0c\u5982\u679c\u6839\u76f8\u7b49\uff08\u4e5f\u5c31\u662f\u4e92\u76f8\u8ba4\u8bc6\uff09\uff0c\u5219\u8f93\u51fa $-1$\uff1b\u5426\u5219\u4ece\u4e24\u53ea\u7334\u5b50\u7684\u56e2\u961f\u4e2d\u53d6\u51fa\uff08top&pop\uff09\u5f3a\u58ee\u6700\u5927\u503c\uff08\u5806\u9876\uff09\uff0c\u5206\u522b\u9664\u4ee5 $2$ \u540e\u518d\u653e\u56de\u5806\u4e2d\uff08push\uff09\u3002\r\n\r\n5. \u63a5\u7740\u7528\u5e76\u67e5\u96c6\u8fdb\u884c**\u6309\u79e9\u5408\u5e76**\uff08merge\uff09\uff1a\r\n\r\n```cpp\r\nvoid merge(int x,int y){//\u5408\u5e76x,y\r\n\tint f1=find(x),f2=find(y);//\u627e\u5230\u4e24\u53ea\u7334\u5b50\u7684\u6839\r\n\tif(f1==f2)//\u5982\u679c\u4e3a\u540c\u4e00\u4e2a\u6839\r\n\t\tprintf(\"-1\\n\");\r\n\telse{\r\n\t\tint at=a[f1].top(),bt=a[f2].top();\r\n\t\ta[f1].pop();a[f2].pop();\r\n\t\tat/=2;bt/=2;//\u6309\u7167\u9898\u76ee\u8981\u6c42\u51cf\u5c11\u4e00\u534a\r\n\t\ta[f1].push(at);a[f2].push(bt);//\u653e\u56de\u539f\u5806\u4e2d\r\n\t\tif(a[f1].size()<a[f2].size()){//\u6309\u79e9\u5408\u5e76\uff0c\u51cf\u5c11\u5faa\u73af\u6b21\u6570\u3002\r\n\t\t\t//\u5408\u5e76\r\n\t\t\tfa[f1]=f2; \r\n\t\t\t//\u5c06\u4e00\u5bf9\u5143\u7d20\u5168\u90e8\u79fb\u81f3f2\r\n\t\t\twhile(!a[f1].empty()){\r\n\t\t\t\tint tmp=a[f1].top();\r\n\t\t\t\ta[f1].pop();\r\n\t\t\t\ta[f2].push(tmp);\r\n\t\t\t}\r\n\t\t\t//\u8f93\u51fa\u6700\u5927\u503c\r\n\t\t\tprintf(\"%d\\n\",a[f2].top());\r\n\t\t}\r\n\t\telse{\r\n\t\t\t//\u540c\u4e0a\r\n\t\t\tfa[f2]=f1;\r\n\t\t\twhile(!a[f2].empty()){\r\n\t\t\t\tint tmp=a[f2].top();\r\n\t\t\t\ta[f2].pop();\r\n\t\t\t\ta[f1].push(tmp);\r\n\t\t\t}\r\n\t\t\tprintf(\"%d\\n\",a[f1].top());\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n### \u6ce8\u610f\u4e8b\u9879\r\n\r\n\u9898\u76ee\u53ef\u80fd\u6709**\u591a\u7ec4\u6570\u636e**\uff01\uff01\uff01\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u4e00\u76f4\u8bfb\u5165\u81f3**\u6587\u4ef6\u7ed3\u675f\u7b26 EOF**\u3002\r\n\r\n### \u5177\u4f53\u8be6\u89c1\u4ee3\u7801\uff08\u8bf7\u52ff\u6284\u88ad\uff01\uff01\uff01\uff09\uff1a\r\n\r\n```cpp\r\n//the code is from chenjh\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nint n,m;\r\nint fa[100001];//\u5b58\u50a8\u6bcf\u53ea\u7334\u5b50\u7684\u6839\r\npriority_queue <int> a[100001];//\u7ef4\u62a4\u7684\u5806\r\n//\u51fd\u6570\u90fd\u5728\u540e\u9762\uff01\uff01\uff01\r\nint find(int x);//\u627e\u6839\r\nvoid merge(int x,int y);//\u5408\u5e76\r\nint main(){\r\n\twhile(scanf(\"%d\",&n)!=EOF){//\u6709\u591a\u7ec4\u6570\u636e\uff0c\u9700\u8981\u4e00\u76f4\u8bfb\u5165\u5230\u6587\u4ef6\u7ed3\u675f\u7b26EOF\r\n\t\t//\u9700\u8981\u6e05\u7a7a\u5806\uff01\r\n\t\tfor(int i=0;i<=100000;i++){\r\n\t\t\twhile(!a[i].empty())\r\n\t\t\t\ta[i].pop();\r\n\t\t}\r\n\t\t//\u5c06\u6839\u5148\u8bbe\u4e3a\u81ea\u5df1\r\n\t\tfor(int i=1;i<=n;i++) fa[i]=i;\r\n\t\t//\u8bfb\u5165\u5b9e\u529b\u503c\uff0c\u5b58\u50a8\u81f3\u5806\u4e2d\r\n\t\tfor(int i=1;i<=n;i++){\r\n\t\t\tint x;\r\n\t\t\tscanf(\"%d\",&x);\r\n\t\t\ta[i].push(x);\r\n\t\t}\r\n\t\t//\u8fdb\u884c\u6253\u6597\r\n\t\tscanf(\"%d\",&m);\r\n\t\tfor(int i=1;i<=m;i++){\r\n\t\t\tint x,y;\r\n\t\t\tscanf(\"%d%d\",&x,&y);\r\n\t\t\tmerge(x,y);//\u5408\u5e76\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\nint find(int x){\r\n\t//\u5faa\u73af\u627e\u6839\r\n\t/*while(x!=fa[x]){\r\n\t\tx=fa[x];\r\n\t}\r\n\treturn x;*/\r\n\t//\u9012\u5f52\u627e\u6839\r\n\tif(x==fa[x]) return x;\r\n\treturn fa[x]=find(fa[x]);\r\n}\r\nvoid merge(int x,int y){\r\n\tint f1=find(x),f2=find(y);//\u627e\u5230\u4e24\u53ea\u7334\u5b50\u7684\u6839\r\n\tif(f1==f2)//\u5982\u679c\u4e3a\u540c\u4e00\u4e2a\u6839\r\n\t\tprintf(\"-1\\n\");\r\n\telse{\r\n\t\tint at=a[f1].top(),bt=a[f2].top();\r\n\t\ta[f1].pop();a[f2].pop();\r\n\t\tat/=2;bt/=2;//\u6309\u7167\u9898\u76ee\u8981\u6c42\u51cf\u5c11\u4e00\u534a\r\n\t\ta[f1].push(at);a[f2].push(bt);//\u653e\u56de\u539f\u5806\u4e2d\r\n\t\tif(a[f1].size()<a[f2].size()){//\u6309\u79e9\u5408\u5e76\uff0c\u51cf\u5c11\u5faa\u73af\u6b21\u6570\u3002\r\n\t\t\t//\u5408\u5e76\r\n\t\t\tfa[f1]=f2; \r\n\t\t\t//\u5c06\u4e00\u5bf9\u5143\u7d20\u5168\u90e8\u79fb\u81f3f2\r\n\t\t\twhile(!a[f1].empty()){\r\n\t\t\t\tint tmp=a[f1].top();\r\n\t\t\t\ta[f1].pop();\r\n\t\t\t\ta[f2].push(tmp);\r\n\t\t\t}\r\n\t\t\t//\u8f93\u51fa\u6700\u5927\u503c\r\n\t\t\tprintf(\"%d\\n\",a[f2].top());\r\n\t\t}\r\n\t\telse{\r\n\t\t\t//\u540c\u4e0a\r\n\t\t\tfa[f2]=f1;\r\n\t\t\twhile(!a[f2].empty()){\r\n\t\t\t\tint tmp=a[f2].top();\r\n\t\t\t\ta[f2].pop();\r\n\t\t\t\ta[f1].push(tmp);\r\n\t\t\t}\r\n\t\t\tprintf(\"%d\\n\",a[f1].top());\r\n\t\t}\r\n\t}\r\n}\r\n\r\n```\r\n\u5982\u6709\u9519\u8bef\uff0c\u6b22\u8fce*\u6279\u8bc4\u6307\u6b63*\uff0c\u672c\u4eba\u5c06**\u5c3d\u5feb\u4fee\u6539**\u3002\r\n\r\n*\u8c22\u8c22\u67e5\u770b\uff01*\r\n\r\n\u6b64\u9898\u662f\u672c\u4eba AC \u7684**\u7b2c\u4e00\u9053\u7d2b\u9898**\uff0c\u66f4\u662f\u672c\u4eba\u5199\u7684**\u7b2c\u4e00\u7bc7\u9898\u89e3**\uff01",
        "postTime": 1652183014,
        "uid": 577880,
        "name": "cjh20090318",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1456 \u3010Monkey King\u3011"
    },
    {
        "content": "\u8fd9\u9898\u4e00\u770b\u5c31\u662f\u5de6\u504f\u6811\uff08Leftist  Tree\uff09\uff0c\u8c8c\u4f3c\u6ca1\u6709\u4ec0\u4e48\u5176\u5b83\u5947\u5947\u602a\u602a\u7684\u505a\u6cd5\u4e86\u5427\uff1f\u5982\u679c\u4e0d\u4f1a\u7684\u540c\u5b66\u81ea\u884c\u767e\u5ea6\u3002\n\n\u8fd9\u91cc\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u5de6\u504f\u6811\uff1a\n\n\u5de6\u504f\u6811\u4e00\u9897\u4e8c\u53c9\u6811\uff0c\u4e14\u6ee1\u8db3\u5806\u7684\u6240\u6709\u6027\u8d28\uff08\u6839\u8282\u70b9\u662f\u6574\u68f5\u6811\u4e2d\u6700\u5c0f\u6216\u6700\u5927\u7684\uff09\uff0c\u4f46\u76f8\u6bd4\u4e8e\u5806\uff0c\u5b83\u662f\u6781\u5ea6\u4e0d\u5e73\u8861\u7684\uff0c\u987e\u540d\u601d\u4e49\uff0c\u6574\u68f5\u6811\u90fd\u662f\u5411\u5de6\u503e\u659c\u7684\uff0c\u8fd9\u4e5f\u662f\u5de6\u504f\u6811\u533a\u522b\u4e8e\u666e\u901a\u5806\u7684\u4e00\u4e2a\u91cd\u8981\u6027\u8d28\uff1a\n\n**\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u5176\u5de6\u513f\u5b50\u7684\u8ddd\u79bb\u5927\u4e8e\u7b49\u4e8e\u53f3\u513f\u5b50\u7684\u8ddd\u79bb**\n\n\u8fd9\u91cc\u7684\u8ddd\u79bb\u5b9a\u4e49\u4e3a\uff1a\u8be5\u8282\u70b9\u5230\u5176\u5b50\u6811\u7684\u53f6\u5b50\u8282\u70b9\u6700\u5c11\u8fdb\u8fc7\u7684\u8fb9\u6570\u3002\u5176\u4e2d\u53f6\u5b50\u8282\u70b9\uff08\u4e5f\u79f0\u5916\u8282\u70b9\uff09\u7684\u8ddd\u79bb\u4e3a0\uff0c\u7a7a\u8282\u70b9\u4e3a-1\u3002\n\n\u6709\u7684\u4eba\u53ef\u80fd\u4f1a\u95ee\uff0c\u90a3\u6bcf\u6b21\u63d2\u5165\u590d\u6742\u5ea6\u5c82\u4e0d\u662f\u5f88\u9ad8\uff1f\n\n\u5e76\u4e0d\u662f\u8fd9\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u4e0a\u9762\u7684\u6027\u8d28\uff0c\u6bcf\u6b21\u63d2\u5165\u90fd\u5f52\u5230\u53f3\u8fb9\uff0c\u590d\u6742\u5ea6\u53cd\u800c\u4f1a\u5c0f\u4e8e\u666e\u901a\u7684\u5806\uff08\u8282\u70b9\u90fd\u5728\u5de6\u8fb9\u4e86\uff09\u3002\n\n\u5bf9\u4e8e\u5de6\u504f\u6811\uff0c\u6700\u91cd\u8981\u7684\u610f\u4e49\u662f\u53ef\u4ee5\u5728LogN\u7684\u65f6\u95f4\u91cc\u5b9e\u73b0\u5806\u7684\u5408\u5e76\uff08\u5177\u4f53\u7684\u81ea\u884c\u767e\u5ea6\u5427\uff0c\u4e0e\u5806\u4e00\u6837\u6bd4\u8f83\u6613\u61c2\uff0c\u4ee3\u7801\u96be\u5ea6\u4e5f\u4e0d\u9ad8\uff09\u3002\n\n\u5047\u8bbe\u4f60\u5df2\u7ecf\u4f1a\u5de6\u504f\u6811\u4e86\uff0c\u7ed3\u5408\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u7684\u95ee\u9898\u5c31\u662f\u5982\u4f55\u5feb\u901f\u7684\u5f97\u51fa\u5f53\u524d\u8282\u70b9\u5c5e\u4e8e\u54ea\u68f5\u6811\uff08\u5806\uff09\u3002\n\n\u8fd9\u91cc\u5c31\u6709\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u5e76\u67e5\u96c6\u7684\u65b9\u6cd5\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int maxn=100005;\nstruct TreeNode{\n    int w,dis,l,r;\n    inline void clear(){ dis=l=r=0;}\n} node[maxn];\nint fa[maxn],n,m;\ninline int read(){\n    int ret=0; char ch=getchar();\n    while (ch<'0'||ch>'9') ch=getchar();\n    while (ch>='0'&&ch<='9')\n        ret=(ret<<3)+(ret<<1)+ch-'0',ch=getchar();\n    return ret;\n}\ninline int get_fa(int x){\n    return fa[x]==x?x:fa[x]=get_fa(fa[x]);\n}\ninline int merge(int x,int y){\n    if (!x) return y; if (!y) return x;\n    if (node[x].w<node[y].w) swap(x,y);\n    node[x].r=merge(node[x].r,y);\n    int lc=node[x].l,rc=node[x].r;\n    fa[rc]=x;       //\u8fd9\u91cc\u5c24\u4e3a\u6ce8\u610f\uff0c\u628a\u53f3\u5b50\u6811\u7684\u6839\u8282\u70b9\u7ed9x\n    if (node[lc].dis<node[rc].dis) swap(node[x].l,node[x].r);\n    if (node[x].r) node[x].dis=node[node[x].r].dis+1;\n    else node[x].dis=0;\n    return x;\n}\ninline int Delete(int x){\n    int lc=node[x].l,rc=node[x].r;\n    node[x].clear(),fa[lc]=lc,fa[rc]=rc;   //\u5f53\u524d\u6839\u8282\u70b9\u88ab\u5220\uff0c\u5219\u5de6\u53f3\u5b50\u6811\u7684\u6839\u8282\u70b9\u5c31\u4e3a\u5176\u672c\u8eab\u3002\n    return merge(lc,rc);    //\u5f39\u51fa\u5f53\u524d\u4e24\u4e2a\u5b50\u6811\u5408\u5e76\u540e\u65b0\u7684\u6811\u7684\u6839\u8282\u70b9\n}\nint main(){\n    freopen(\"data.in\",\"r\",stdin);\n    freopen(\"data.out\",\"w\",stdout);\n    while (scanf(\"%d\",&n)!=EOF){\n        for (int i=1;i<=n;i++)\n            node[i].w=read(),node[i].clear(),fa[i]=i;\n        m=read();\n        for (int i=1;i<=m;i++){\n            int x=read(),y=read();\n            x=get_fa(fa[x]),y=get_fa(fa[y]);\n            if (x==y){ printf(\"%d\\n\",-1); continue;}\n            node[x].w/=2,node[y].w/=2;\n            int left=Delete(x),right=Delete(y);   //\u5206\u522b\u5b58\u5de6\u53f3\u5b50\u6811\u6839\u8282\u70b9\n            left=merge(left,x),right=merge(right,y);\n            left=merge(left,right);\n            printf(\"%d\\n\",node[left].w);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1499494306,
        "uid": 21181,
        "name": "Justin_N_Wu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1456 \u3010Monkey King\u3011"
    },
    {
        "content": "\u4e00\u770b\u5230\u5408\u5e76\uff0c\u5f88\u5feb\u554a\uff0c\u556a\u7684\u4e00\u4e0b\u5c31\u62cd\u4e86\u4e00\u4e2a\u7ebf\u6bb5\u6811\u4e0a\u53bb\u3002\r\n\r\n\u6bcf\u4e2a\u7334\u5b50\u5efa\u4e00\u4e2a\u7ef4\u62a4\u503c\u57df\u7684\u7ebf\u6bb5\u6811\uff0c\u6bcf\u6b21\u8fdb\u884c\u51b3\u6597\uff0c\u5c31\u5220\u6389\u4e24\u68f5\u7ebf\u6bb5\u6811\u4e2d\u503c\u6700\u5927\u7684\u8282\u70b9\uff0c\u518d\u63d2\u5165\u4e00\u4e2a\u503c\u51cf\u4e00\u534a\u7684\u8282\u70b9\uff0c\u7136\u540e\u5408\u5e76\u3002\r\n\r\n\u6709\u4e00\u70b9\u8981\u6ce8\u610f\u7684\u662f\u5982\u679c\u6709\u4e24\u4e2a\u7334\u5b50 $s_i$ \u76f8\u540c\u65f6\uff0c\u8fd8\u8981\u7ef4\u62a4\u5f53\u524d\u8282\u70b9\u6709\u591a\u5c11\u4e2a $s_i$\uff0c\u53ea\u6709\u5220\u6389\u6700\u540e\u4e00\u4e2a $s_i$ \u7684\u65f6\u5019\u624d\u5220\u6389\u8fd9\u4e2a\u8282\u70b9\u3002\r\n\r\n\u540c\u65f6\u8981\u4e00\u4e2a\u5e76\u67e5\u96c6\u7ef4\u62a4\u5f53\u524d\u8282\u70b9\u6240\u5728\u7684\u7ebf\u6bb5\u6811\u7684\u6839\u3002\r\n\r\n\u53ef\u4ee5\u7528\u7ecf\u5178\u7ed3\u8bba\u8bc1\u660e\u8fd9\u662f $\\mathcal{O}(n\\log \\max s_i)$\u3002\r\n\r\n\u7a7a\u95f4\u8981\u5f00\u5927\u4e00\u70b9\u3002\u4e3a\u4e86\u8282\u7701\u7a7a\u95f4\u53ef\u4ee5\u5f00\u6808\u56de\u6536\u3002\r\n\r\n```cpp\r\n/* name: Luogu1456\r\n * author: 5ab\r\n * created at: 22-08-22 20:43\r\n */\r\n#include <iostream>\r\n#include <numeric>\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\nconst int max_lgv = 17, max_s = 32768, max_n = 100000;\r\n\r\nstruct nd\r\n{\r\n\tint l, r, mx, mxc;\r\n}\r\ntr[max_lgv*max_n*2];\r\nint stk[max_lgv*max_n*2], ptr[max_n], dsu[max_n], *stp;\r\n\r\ninline int nnode(int x)\r\n{\r\n\tint tmp = *(--stp);\r\n\ttr[tmp].l = tr[tmp].r = -1, tr[tmp].mx = x, tr[tmp].mxc = 1;\r\n\treturn tmp;\r\n}\r\n\r\ninline void delnode(int x)\r\n{\r\n\t*(stp++) = x;\r\n}\r\n\r\nint build(int l, int r, int pos)\r\n{\r\n\tif (l == r)\r\n\t\treturn nnode(l);\r\n\tint mid = (l + r) >> 1, ret = nnode(pos);\r\n\tif (pos <= mid)\r\n\t\ttr[ret].l = build(l, mid, pos);\r\n\telse\r\n\t\ttr[ret].r = build(mid + 1, r, pos);\r\n\treturn ret;\r\n}\r\n\r\ninline void chmax(int& a, int b) { if (a < b) a = b; }\r\ninline void pushup(int x)\r\n{\r\n\ttr[x].mx = -1;\r\n\tif (tr[x].l != -1)\r\n\t\tchmax(tr[x].mx, tr[tr[x].l].mx);\r\n\tif (tr[x].r != -1)\r\n\t\tchmax(tr[x].mx, tr[tr[x].r].mx);\r\n}\r\n\r\nvoid rmnode(int& id, int l, int r, int pos)\r\n{\r\n\tif (l == r)\r\n\t{\r\n\t\ttr[id].mxc--;\r\n\t\tif (!tr[id].mxc)\r\n\t\t{\r\n\t\t\tdelnode(id);\r\n\t\t\tid = -1;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tint mid = (l + r) >> 1;\r\n\t\t\r\n\t\tif (pos <= mid)\r\n\t\t\trmnode(tr[id].l, l, mid, pos);\r\n\t\telse\r\n\t\t\trmnode(tr[id].r, mid + 1, r, pos);\r\n\t\t\r\n\t\tif (tr[id].l == -1 && tr[id].r == -1)\r\n\t\t{\r\n\t\t\tdelnode(id);\r\n\t\t\tid = -1;\r\n\t\t}\r\n\t\telse\r\n\t\t\tpushup(id);\r\n\t}\r\n}\r\n\r\nint query(int id, int l, int r)\r\n{\r\n\tif (l == r)\r\n\t\treturn l;\r\n\tint mid = (l + r) >> 1;\r\n\t\r\n\tif (tr[id].r != -1)\r\n\t\treturn query(tr[id].r, mid + 1, r);\r\n\treturn query(tr[id].l, l, mid);\r\n}\r\n\r\nvoid merge(int &x, int y, int l, int r)\r\n{\r\n\tif (x == -1 || y == -1)\r\n\t{\r\n\t\tx = x + y + 1;\r\n\t\treturn;\r\n\t}\r\n\tif (l == r)\r\n\t{\r\n\t\ttr[x].mxc += tr[y].mxc;\r\n\t\treturn;\r\n\t}\r\n\tint mid = (l + r) >> 1;\r\n\tmerge(tr[x].l, tr[y].l, l, mid);\r\n\tmerge(tr[x].r, tr[y].r, mid + 1, r);\r\n\tpushup(x);\r\n}\r\n\r\nint fnd(int x)\r\n{\r\n\treturn dsu[x] = (dsu[x] == x ? x : fnd(dsu[x]));\r\n}\r\n\r\nsigned main()\r\n{\r\n\tios_base::sync_with_stdio(false);\r\n\tcin.tie(nullptr);\r\n\t\r\n\tint n, m, ptc;\r\n\t\r\n\twhile (cin >> n)\r\n\t{\r\n\t\tptc = n * max_lgv * 2;\r\n\t\tiota(stk, stk + ptc, 0);\r\n\t\tiota(dsu, dsu + n, 0);\r\n\t\tstp = stk + ptc;\r\n\t\t\r\n\t\tfor (int i = 0, x; i < n; i++)\r\n\t\t{\r\n\t\t\tcin >> x;\r\n\t\t\tptr[i] = build(0, max_s, x);\r\n\t\t}\r\n\t\t\r\n\t\tcin >> m;\r\n\t\tfor (int i = 0, x, y, rx, ry, cx, cy; i < m; i++)\r\n\t\t{\r\n\t\t\tcin >> x >> y;\r\n\t\t\trx = ptr[fnd(--x)], ry = ptr[fnd(--y)];\r\n\t\t\tif (rx == ry)\r\n\t\t\t{\r\n\t\t\t\tcout << \"-1\\n\";\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcx = query(rx, 0, max_s), cy = query(ry, 0, max_s);\r\n\t\t\trmnode(rx, 0, max_s, cx), rmnode(ry, 0, max_s, cy);\r\n\t\t\tmerge(rx, build(0, max_s, cx / 2), 0, max_s), merge(ry, build(0, max_s, cy / 2), 0, max_s);\r\n\t\t\tmerge(rx, ry, 0, max_s);\r\n\t\t\tdsu[fnd(y)] = fnd(x), ptr[fnd(x)] = rx;\r\n\t\t\t\r\n\t\t\tcout << query(rx, 0, max_s) << \"\\n\";\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn 0;\r\n}\r\n```",
        "postTime": 1661180181,
        "uid": 119491,
        "name": "5ab_juruo",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011P1456 Monkey King"
    },
    {
        "content": "# \u8fd9\u4e00\u9053\u9898\u5c31\u662f\u4f7f\u7528\u7684\u6b63\u5e38\u7684\u53ef\u5e76\u5806\n\n##  \u53ef\u5e76\u5806\u5c31\u662f\u53ef\u4ee5\u5408\u5e76\u7684\u5806\n\n\u5728\u5408\u5e76\u524d\u540e\u90fd\u53ef\u4ee5\u4fdd\u6301\u5806\u7684\u6027\u8d28\uff0c\u53ef\u4ee5\u662f\u5c0f\u6839\u5806\u4e5f\u53ef\u4ee5\u662f\u5927\u6839\u5806\u3002\n\n\n### so\n\n\u6211\u4eec\u8981\u4f7f\u7528\u4e00\u4e9b\u795e\u5947\u7684\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\u8fd9\u4e9b\u5806\n\n## \u76ee\u524d\u53ef\u4ee5\u7ef4\u62a4\u53ef\u5e76\u5806\u7684\u6709\uff1a\u5de6\u504f\u6811\uff0c\u659c\u5806\u2026\u2026\n\n\u5176\u5b9e\u8fd8\u6709\u5f88\u591a\u6211\u5c31\u4e0d\u4e00\u4e00\u4ecb\u7ecd\u4e86\n\n\u4eca\u5929\u6211\u4eec\u6765\u63a2\u8ba8\u4e00\u4e0b\u5de6\u504f\u6811\n\n### \u8fd9\u9053\u9898\u9898\u9762\u610f\u601d\u662f\u7ed9\u6bcf\u4e2a\u7334\u5b50\u548c\u4ed6\u8ba4\u8bc6\u7684\u4eba\u4e00\u8d77\u7ef4\u62a4\u4e00\u4e2a\u5927\u6839\u5806\uff1b\n\u7136\u540e\u6bcf\u4e00\u6b21\u4fee\u6539\u5c31\u662f\u5c06\u4e24\u4e2a\u5927\u6839\u5806\u7684\u5806\u9876\u53d6\u51fa\uff0c\u5e76\u5c06\u6218\u6597\u529b\u9664\u4ee5\u4e8c\uff0c\n\n\u63d2\u5165\u5408\u5e76\u7684\u4e24\u4e2a\u5806\u4e2d\uff1b\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u5de6\u504f\u6811\u3002\n\n```c\nint hebing (int a,int b)\n{\n\tif(!a)return b;//\u5982\u679c\u6709\u4e00\u4e2a\u662f\u7a7a\u5806\u5c31\u8fd4\u56de\n\tif(!b)return a;\n\tif(key[a]<key[b])swap(a,b);//\u4fdd\u6301\u5de6\u504f\u6811\u6027\u8d28\n\trc[a]=hebing(rc[a],b);//\u8fed\u4ee3\u5411\u4e0b\u5408\u5e76\n\tif(date[rc[a]]>date[lc[a]])swap(lc[a],rc[a]);//\u7ee7\u7eed\u7ef4\u6301\u6027\u8d28\n\tdate[a]=date[rc[a]]+1;//\u8fdb\u884c\u5408\u5e76\n\treturn a;//\u8fd4\u56de\u5408\u5e76\u540e\u7684\u4e00\u5171\u5927\u5c0f\n}\n```\n\u8fd9\u662f\u5de6\u504f\u6811\u7684\u6838\u5fc3\u4ee3\u7801\n\n\u5341\u5206\u660e\uff08\u901a\uff09\u4e86\uff08\u4fd7\uff09\u7b80\uff08\u6613\uff09\u6d01\uff08\u61c2\uff09\uff1b\n\n```c\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=100010;\nint lc[maxn],rc[maxn],date[maxn],key[maxn],fa[maxn];\nint hebing (int a,int b)\n{\n\tif(!a)return b;//\u5982\u679c\u6709\u4e00\u4e2a\u662f\u7a7a\u5806\u5c31\u8fd4\u56de\n\tif(!b)return a;\n\tif(key[a]<key[b])swap(a,b);//\u4fdd\u6301\u5de6\u504f\u6811\u6027\u8d28\n\trc[a]=hebing(rc[a],b);//\u8fed\u4ee3\u5411\u4e0b\u5408\u5e76\n\tif(date[rc[a]]>date[lc[a]])swap(lc[a],rc[a]);//\u7ee7\u7eed\u7ef4\u6301\u6027\u8d28\n\tdate[a]=date[rc[a]]+1;//\u8fdb\u884c\u5408\u5e76\n\treturn a;//\u8fd4\u56de\u5408\u5e76\u540e\u7684\u4e00\u5171\u5927\u5c0f\n}\nint ff(int x)//\u5bfb\u627e\u7236\u4eb2\n{\n\treturn (fa[x]==x)?x:ff(fa[x]);\n    /*\n    \t\u76f8\u5f53\u4e8e\n    \tif(fa[x]!=x)return ff(fa[x]);\n        else return x;\n    */\n}\ninline int read(){//\u8bfb\u5165\u4f18\u5316\n    int x=0,f=1;\n    char ch=getchar();\n    while (ch<'0'||ch>'9') {\n        if (ch=='-') f=-1;\n        ch=getchar();\n    }\n    while (ch>='0'&&ch<='9') {\n        x=(x<<1)+(x<<3)+(ch^48);\n        ch=getchar();\n    }\n    return x*f;\n}\nvoid work(int a,int b)//\u6839\u636e\u9898\u76ee\u6765\u5b8c\u6210\u8f93\u51fa\n{\n\tif((a=ff(a))==(b=ff(b)))//\u7279\u5224\n\t{\n\t\tcout<<\"-1\"<<endl;\n\t\treturn ;\n\t}\n    //\u5408\u5e76\n    //\u53ea\u8981\u770b\u61c2\u6838\u5fc3\u4ee3\u7801\u5c31\u53ef\u4ee5\u660e\u767d\n\tfa[b]=a;\n\tint art;\n\tint rt;\n\tint brt;\n\tkey[a]>>=1;\n\trt=hebing(lc[a],rc[a]);\n\tlc[a]=rc[a]=date[a]=0;\n\tart=hebing(a,rt);\n\tfa[rt]=fa[a]=art;\n\tkey[b]>>=1;\n\trt=hebing(lc[b],rc[b]);\n\tlc[b]=rc[b]=date[b]=0;\n\tbrt=hebing(b,rt);\n\tfa[rt]=fa[b]=brt;\n\trt=hebing(art,brt);\n\tfa[art]=fa[brt]=rt;\n\tprintf(\"%d\\n\",key[rt]);\n}\nint main()\n{\n\tint n;\n\twhile(scanf(\"%d\",&n)!=EOF)\n\t{for(int i=1;i<=n;i++)\n\t{\n\t\tlc[i]=rc[i]=date[i]=0;\n\t\tfa[i]=i;\n\t\tkey[i]=read();\n\t}\n\tint m=read();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\twork(read(),read());\n\t}\n\t}\n\treturn 0;\n}\n```\n\n\n\u8fd9\u9053\u9898\u5c31\u8fd9\u6837\u5b8c\u6210\u4e86\n# \u795d\u5927\u5bb6 AK IOI\n",
        "postTime": 1566373089,
        "uid": 174399,
        "name": "fzwfzwfzw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1456 \u3010Monkey King\u3011"
    },
    {
        "content": "pbds\u5e93\u7684\u914d\u5bf9\u5806\uff0c\u7b80\u5355\u6613\u61c2\uff0c\u4ee3\u7801\u7edd\u5bf9\u5f88\u77ed(\u8bbapbds\u7684\u4f18\u8d8a\u6027~)\n\n```cpp\n#include<cstdio>\n#define N 100005\n#include<algorithm>\n#define For(i,j,k) for(int i=j;i<=k;i++)\n#include<ext/pb_ds/priority_queue.hpp> //\u5934\u6587\u4ef6\nusing namespace std;\nusing namespace __gnu_pbds; //\u5f00pbds\u5e93\nint read(){\n    int l=1,x=0; char ch=getchar();\n    while((ch<'0'||ch>'9')&&ch!='-') ch=getchar();\n    if (ch=='-') ch=getchar(),l=-1;\n    while(ch>='0'&&ch<='9') x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n    return x*l;\n}\n__gnu_pbds::priority_queue<int> h[N]; //\u58f0\u660e\uff0c\u9ed8\u8ba4\u5927\u6839\u5806\u914d\u5bf9\u5806\nint fa[N];\nint find(int x){\n    if (fa[x]==x) return x;\n    fa[x]=find(fa[x]); return fa[x]; //\u8fd9\u51e0\u884c\u662f\u5e76\u67e5\u96c6\uff0c\u6807\u8bb0\u6bcf\u4e2a\u7334\u5b50\u5c5e\u4e8e\u54ea\u4e2a\u5806\n}\nint main(){\n    int n,m,k,k0,fx,fy,x,y;\n    while(scanf(\"%d\",&n)!=EOF){\n        For(i,1,n) h[i].push(read()),fa[i]=i; //\u521a\u5f00\u59cb\u4e00\u4e2a\u7334\u5b50\u4e00\u4e2a\u5806\n        m=read();\n        For(i,1,m){\n            x=read(),y=read();\n            fx=find(x); fy=find(y); //\u5e76\u67e5\u96c6\u5bfb\u627e2\u4e2a\u7334\u5b50\u5c5e\u4e8e\u54ea\u4e2a\u5806\n            if (fx==fy) printf(\"-1\\n\"); //\u5c5e\u4e8e\u540c\u4e00\u4e2a\u5806\u8f93\u51fa-1\n            else{\n                k=h[fx].top(); h[fx].pop(); k=k/2; h[fx].push(k);\n                k=h[fy].top(); h[fy].pop(); k=k/2; h[fy].push(k); //\u4e24\u4e2a\u5806\u6839\u8282\u70b9\u4e5f\u5c31\u662f\u6700\u5927\u7684\u51cf\u534a\n                fa[fx]=fy; h[fy].join(h[fx]); //\u5408\u5e762\u4e2a\u5806\uff0c\u4e00\u4e2ajoin\u5c31\u884c\u4e86\uff0c\u662f\u4e0d\u662f\u5f88\u7b80\u5355~\n                printf(\"%d\\n\",h[fy].top()); //\u8f93\u51fa\u5408\u5e76\u540e\u7684\u5806\u9876\n            }\n        }\n        For(i,1,n) h[i].clear(); //\u591a\u7ec4\u6570\u636e\uff0c\u5904\u7406\u5b8c\u4e00\u7ec4\u8981\u6e05\u7a7a\n    }\n    return 0;\n}\n```",
        "postTime": 1500856238,
        "uid": 20821,
        "name": "wjy666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1456 \u3010Monkey King\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u8fd9\u9053\u9898\u6d89\u53ca\u5230\u591a\u6b21\u67e5\u627e\u6700\u5c0f\u503c\uff0c\u81ea\u7136\u4f1a\u60f3\u5230\u7528\u5806\u3002\n\u4f46\u8fd9\u9053\u9898\u4e0d\u4ec5\u9700\u8981\u67e5\u627e\u6700\u5c0f\u503c\uff0c\u8fd8\u9700\u8981\u5408\u5e76\uff0c\u81ea\u7136\u4f1a\u60f3\u5230\u2014\u2014\n## \u53ef\u5e76\u5806\n\u53ef\u5e76\u5806\u6709\u5f88\u591a\u79cd\uff0c\u8fd9\u91cc\u6211\u9009\u7528\u5de6\u504f\u6811\u3002\n\n\u6240\u8c13\u5de6\u504f\u6811\uff0c\u5c31\u662f\u901a\u8fc7\u4e00\u4e9b~~\u7384\u5b66~~\u65b9\u6cd5\u4f7f\u4e00\u68f5\u6811\u5de6\u8fb9\u7684\u8282\u70b9\u5408\u7406\u5730\u591a\uff0c\u5408\u5e76\u65f6\u5408\u5e76\u5230\u53f3\u5b50\u6811\u65e2\u53ef\u964d\u4f4e\u590d\u6742\u5ea6\u3002\n\n\u518d\u52a0\u4e0a\u5e76\u67e5\u96c6\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u6240\u5c5e\u5806\u3002\n\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```c\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#define N 100002\nusing namespace std;\nint a[N],b,n,c,m,k,l,ls[N],rs[N],fa[N],dis[N],u,v,t;\ninline int read(){\n    char v=getchar();\n    long long s=0;\n    while(v<'0'||v>'9')v=getchar();\n    while(v>='0'&&v<='9'){\n        s=(s<<3)+(s<<1)+v-'0';\n        v=getchar();\n    }\n    return s;\n}\nint merge(int x,int y){\n\tif(!x||!y)return x|y;\n\tif(a[x]<a[y])swap(x,y);\n\trs[x]=merge(rs[x],y);\n\tif(dis[ls[x]]<dis[rs[x]])swap(ls[x],rs[x]);\n\tif(!rs[x])dis[x]=0;\n\telse dis[x]=dis[rs[x]]+1;\n\treturn x;\n}\nint root(int s){\n\tif(fa[s]==s)return s;\n\tfa[s]=root(fa[s]);\n\treturn fa[s];\n}\nint main(){\nwhile(scanf(\"%d\",&n)!=EOF){\nmemset(ls,0,sizeof(ls));\nmemset(rs,0,sizeof(rs));\nfor(int i=1;i<=n;++i)a[i]=read();\nm=read();\nfor(int i=1;i<=n;++i)fa[i]=i;\nfor(int i=1;i<=m;++i){\n\tu=read();\n\tv=read();\n\tu=root(u);\n\tv=root(v);\n\tif(u==v){\n\t\tprintf(\"-1\\n\");\n\t\tcontinue;\n\t}\n\tfa[v]=merge(ls[v],rs[v]);\n\tls[v]=0;\n\trs[v]=0;\n\tfa[u]=merge(ls[u],rs[u]);\n\tls[u]=0;\n\trs[u]=0;\n\ta[u]>>=1;\n\ta[v]>>=1;\n\tt=merge(fa[u],fa[v]);\n\tt=merge(t,u);\n\tt=merge(t,v);\n\tfa[t]=fa[u]=fa[v]=t;\n\tprintf(\"%d\\n\",a[t]);\n}}\n \n \n}\n\n```\n",
        "postTime": 1566547416,
        "uid": 41476,
        "name": "gyh20",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1456 \u3010Monkey King\u3011"
    },
    {
        "content": "\u521a\u81ea\u5b66\u5b8c\u4e00\u6ce2\u5de6\u504f\u6811\uff0c\u53d1\u73b0\u8fd9\u9898\u6bd4\u8f83\u50cf\u677f\u5b50\u5c31\u6765\u505a\u4e00\u53d1\n\n\u5982\u679c\u6709\u5bf9\u5de6\u504f\u6811\u4e0d\u592a\u4e86\u89e3\u7684\u795e\u4ed9\uff0c\u8bf7\u5f80[\u8fd9\u8fb9](https://www.luogu.org/problemnew/show/P3377)\u8d70\n\n#### \u5b9e\u9645\u4e0a\u8fd9\u9898\u53ea\u9700\u8981\u7528\u4e00\u4e2a\u53ef\u5408\u5e76\u7684\u5806\u5c31\u884c\uff0c\u4e0d\u4e00\u5b9a\u975e\u8981\u662f\u5de6\u504f\u6811\n\n\u4f8b\u5982\u6590\u6ce2\u90a3\u5951\u5806\u4e5f\u662f\u53ef\u884c\u7684\uff08\u849f\u84bb\u8868\u793a\u4e0d\u4f1aqwq\uff09\uff0c\u53c8\u6bd4\u5982pd_ds\uff08\u5c31\u662f\u4e00\u4e2a\u81ea\u52a8\u7684\u53ef\u5408\u5e76\u5806\uff09\n\n\u8fd9\u9898\u7684\u8f93\u5165\u6bd4\u8f83duliu\uff0c\u5bf9\u4e8e\u559c\u6b22\u5feb\u8bfb\u7684\u849f\u84bb\u5f88\u4e0d\u53cb\u597d......\n\n### \u601d\u8def\u5f88\u7b80\u5355\uff0c\u6253\u5b8c\u67b6\u76f4\u63a5\u66f4\u65b0\u6811\u7136\u540e\u8f93\u51fa\u5373\u53ef\n\n\u66f4\u65b0\u7684\u8fc7\u7a0b\u7b80\u5355\u8bf4\u660e\u4e00\u4e0b\uff1a\n\n\u4e24\u8fb9\u9635\u8425\u6253\u5b8c\u67b6\u4e4b\u540e\uff0c\u539f\u672c\u6700\u5f3a\u7684\u7334\u5b50\u6218\u6597\u529b\u51cf\u534a\uff0c\u7136\u540e\u5bfb\u627e\u51fa\u5f53\u524d\u6700\u5f3a\u7684\u7334\u5b50\u4f5c\u4e3a\u8fd9\u8fb9\u7684\u6839\uff0c\u518d\u5904\u7406\u4e00\u4e0b\u7236\u4eb2\u8282\u70b9\u548c\u5b50\u8282\u70b9\u7684\u5173\u7cfb\uff0c\u53e6\u4e00\u8fb9\u4e5f\u8fdb\u884c\u540c\u6837\u7684\u64cd\u4f5c\n\n\u6700\u540e\u5c06\u4e24\u4e2a\u5806\u8fdb\u884c\u5408\u5e76\uff0c\u66f4\u65b0\u7ed3\u675f\n\n#### \u4e0b\u9762\u4e0a\u4ee3\u7801\n\n```\n#include <iostream>\n#include <cmath>\n#include <cstring>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#define mem(i,j) memset(i,j,sizeof(i))\n#define Endl printf(\"\\n\")\nusing namespace std;\ninline int read(){\n    int res=0,f=1;char ch=' ';\n    while(!isdigit(ch)){if(ch=='-') f=-1;ch=getchar();}\n    while(isdigit(ch)){res=res*10+ch-'0';ch=getchar();}\n    return res*f;\n}\nvoid write(int x){\n    if(x<0){putchar('-');x=-x;}\n    if(x>9) write(x/10);\n    putchar(x%10+'0');\n}\nconst int N=2e6+5;\nint n,m,val[N],ch[N][2],fa[N],dis[N],roox,rooy,root;\n//val\u5b58\u70b9\u6743\uff0cdis\u5b58\u8ddd\u79bb\uff08\u5173\u4e8e\u8ddd\u79bb\u7684\u5b9a\u4e49\u8bf7\u79fb\u6b65\u6a21\u677f\u9898\u89e3\u5904\uff09\nint merge(int x,int y){//\u5de6\u504f\u6811\u5408\u5e76\n    if(!x||!y)return x+y;\n    if(val[x]<val[y])swap(x,y);\n    ch[x][1]=merge(ch[x][1],y);\n    fa[ch[x][1]]=x;\n    if(dis[ch[x][0]]<dis[ch[x][1]])swap(ch[x][0],ch[x][1]);\n    dis[x]=dis[ch[x][1]]+1;\n    return x;\n}\nint findf(int x){//\u5e76\u67e5\u96c6\u5224\u65ad\u53cc\u65b9\u662f\u5426\u8ba4\u8bc6\n    if(fa[x]==x)return x;\n    fa[x]=findf(fa[x]);\n    return fa[x];\n}\nvoid init(){\n    mem(dis,0),mem(ch,0);\n    root=0,roox=0,rooy=0;\n}\nint main(){\n    while(scanf(\"%d\",&n)!=EOF){//\u5c31\u662f\u8fd9\u91cc\u5361\u5feb\u8bfbqaq\n        init();//\u591a\u6d4b\u4e0d\u6e05\u7a7a\uff0c\u7206\u96f6\u4e24\u884c\u6cea\n        for(register int i=1;i<=n;i++)fa[i]=i,val[i]=read();\n        m=read();\n        for(register int i=1;i<=m;i++){\n            int l=read(),r=read(),fl=findf(l),fr=findf(r);\n            if(fl==fr){//\u5982\u679c\u4e24\u4e2a\u7334\u5b50\u672c\u6765\u5c31\u8ba4\u8bc6\n                write(-1);Endl;continue;\n            }\n            //\u66f4\u65b0\n            val[fl]/=2;\n            roox=merge(ch[fl][0],ch[fl][1]);\n            ch[fl][0]=ch[fl][1]=0;\n            fa[ch[fl][0]]=fa[ch[fl][1]]=roox;\n            roox=merge(roox,fl);\n            val[fr]/=2;\n            rooy=merge(ch[fr][0],ch[fr][1]);\n            ch[fr][0]=ch[fr][1]=0;\n            fa[ch[fr][0]]=fa[ch[fr][1]]=rooy;\n            rooy=merge(rooy,fr);\n            root=merge(roox,rooy);\n            fa[roox]=fa[rooy]=root;\n            write(val[root]),Endl;\n        }\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1555144526,
        "uid": 123318,
        "name": "ViXpop",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1456 \u3010Monkey King\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\uff0c\u6211\u770b\u4e86\u534a\u5929\u90fd\u662f\u4e00\u9053NP\u95ee\u9898\u554a\uff08\u5f53\u65f6\u6211\u6ca1\u5b66\u6570\u636e\u7ed3\u6784QAQ\uff09\n\n\u81ea\u4ece\u5b66\u4e86\u5de6\u504f\u6811\u4e4b\u540e\u987f\u65f6\u6253\u5f00\u4e86\u4e00\u6247\u65b0\u7684\u5927\u95e8\uff0c\u8fd9\u9053\u9898\u5de6\u504f\u6811\u6a21\u677f\u4f53\uff0c\u5c31\u662f\u80fd\u529b\u503c\u51cf\u534a\u6709\u70b9\u9ebb\u70e6\uff0c\u90a3\u4e48\u5c31\u628a\u8fd9\u4e2a\u8282\u70b9\u76f4\u63a5\u8131\u79bb\u51fa\u6765\u51cf\u534a\u540e\u518d\u91cd\u65b0merge\u5c31\u884c\u4e86\u963f\uff08\u6211\u662f\u4e0d\u4f1a\u8bf4\u6211\u60f3\u4e86\u5f88\u4e45\u7684\uff09\n\n\u5c31\u50cf\u8fd9\u6837\n\n```cpp\ntree[xx].val/=2;\nll root=merge(tree[xx].lc,tree[xx].rc);\ntree[xx].lc=0;\ntree[xx].rc=0;\nll newx=merge(root,xx);\ntree[yy].val/=2;\nroot=merge(tree[yy].lc,tree[yy].rc);\ntree[yy].lc=0;\ntree[yy].rc=0;\nll newy=merge(root,yy);\nroot=merge(newx,newy);\ntree[newx].fa=root;\ntree[newy].fa=root;\nprintf(\"%lld\\n\",tree[root].val);\n```\n\n\u5269\u4e0b\u7684\u5c31\u662f\u7eaf\u6a21\u677f\u4f53\u4e86\n\n\u76f4\u63a5\u4e0a\u4ee3\u7801\uff08\u4e0d\u8981\u5728\u610fdel\u662f\u4ec0\u4e48\uff0c\u6211\u662f\u6572\u5b8c\u4e86\u6a21\u677f\u540e\u6765\u6572\u5f97\u8fd9\u4e2aQAQ\uff09\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nstruct node\n{\n\tll val,lc,rc,dis,fa;\n}tree[10000001];\nint cnt;\nint n,m;\ninline ll read()\n{\n\tll x=0,f=1;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9')\n\t{\n\t\tif(c=='-')\n\t\t{\n\t\t\tf=-1;\n\t\t}\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9')\n\t{\n\t\tx=x*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn x*f;\n}\ninline ll merge(ll x,ll y)\n{\n\tif(x==0)\n\t{\n\t\treturn y;\n\t}\n\tif(y==0)\n\t{\n\t\treturn x;\n\t}\n\tif(tree[x].val<tree[y].val||(tree[x].val==tree[y].val&&x>y))\n\t{\n\t\tswap(x,y);\n\t}\n\ttree[x].rc=merge(tree[x].rc,y);\n\ttree[tree[x].rc].fa=x;\n\tif(tree[tree[x].rc].dis>tree[tree[x].lc].dis)\n\t{\n\t\tswap(tree[x].rc,tree[x].lc);\n\t}\n \tif(tree[x].rc==0)\n\t{\n\t\ttree[x].dis=0;\n\t}\n\telse\n\t{\n\t\ttree[x].dis=tree[tree[x].rc].dis+1;\n\t}\n\treturn x;\n}\ninline void del(ll x)\n{\n\tll l=tree[x].lc,r=tree[x].rc;\n\ttree[x].fa=tree[x].lc=tree[x].rc=tree[x].dis=0;\n\ttree[x].val=-20030711;\n\ttree[l].fa=l,tree[r].fa=r;\n\tmerge(l,r);\n\treturn;\n}\ninline ll find(ll x)\n{\n\tll xx=x;\n\twhile(xx!=tree[xx].fa)\n\t{\n\t\txx=tree[xx].fa;\n\t}\n\treturn xx;\n}\nll a[1000001];\nint main()\n{\n\twhile(cin>>n)\n\t{\n\t\tfor(int i=0;i<=n;i++)\n\t\t{\n\t\t\ttree[i].lc=tree[i].rc=tree[i].dis=0;\n\t\t\ttree[i].fa=i;\n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\ttree[i].val=read();\n\t\t}\n\t\tm=read();\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tll x=read(),y=read();\n\t\t\tll xx=find(x),yy=find(y);\n\t\t\tif(xx==yy)\n\t\t\t{\n\t\t\t\tprintf(\"-1\\n\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttree[xx].val/=2;\n\t\t\t\tll root=merge(tree[xx].lc,tree[xx].rc);\n\t\t\t\ttree[xx].lc=0;\n\t\t\t\ttree[xx].rc=0;\n\t\t\t\tll newx=merge(root,xx);\n\t\t\t\ttree[yy].val/=2;\n\t\t\t\troot=merge(tree[yy].lc,tree[yy].rc);\n\t\t\t\ttree[yy].lc=0;\n\t\t\t\ttree[yy].rc=0;\n\t\t\t\tll newy=merge(root,yy);\n\t\t\t\troot=merge(newx,newy);\n\t\t\t\ttree[newx].fa=root;\n\t\t\t\ttree[newy].fa=root;\n\t\t\t\tprintf(\"%lld\\n\",tree[root].val);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1547107557,
        "uid": 38427,
        "name": "Mr_\u6d53\u6c28",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1456 \u3010Monkey King\u3011"
    },
    {
        "content": "\u521a\u505a\u5b8c\u677f\u5b50\u5c31\u628a(bei)\u8fd9\u9898cao\u6389\u4e86(\u8c03\u4e86\u4e00\u4f1a\u513f, CE*1, \u6ca1\u6709\u79d2\u8fc7, \u9053\u884c\u5c1a\u6d45.)\n\n\u4e0d\u5e9f\u8bdd\u4e86...\u8bb2\u9898\n\n\u8fd9\u5c31\u662f\u905370%\u7684\u677f\u5b50\u9898\uff0c\u6ca1\u6709\u5220\u9664\uff0c\u6709\u7684\u662f\u4fee\u6539+\u7ef4\u62a4~~+\u5957\u8def~~\n```\n\u6bcf\u6b21\u6253\u67b6\u524d\u5148\u5e76\u67e5\u96c6(\u65e0\u8def\u5f84\u538b\u7f29)\u5f97\u5230 x \u548c y \u7684 father ,\n\u7136\u540e key[fx]>>=1, key[fy]>>=1, \u7ef4\u62a4\u4e00\u4e0b\u6240\u5728\u7684\u5806,\n\u518d\u5c06\u4e24\u4e2a\u65b0\u7684\u5806\u5408\u5e76\uff0c\u8f93\u51fa\u65b0\u5806\u7684\u6839\u7684key\n```\n\n```cpp\n//by Judge\n#include<algorithm>\n#include<cstring>\n#include<cstdio>\n#define swap(a,b) (a)^=(b)^= a^=b\nconst int M=1e5+11;\nint n,m,i;\nint key[M],dis[M],f[M],son[M][2];\nint find(int x){ return f[x]?find(f[x]):x; }  \u65e0\u5408\u5e76\u5e76\u67e5\u96c6\nint merge(int u,int v){  //\u5408\u5e76, \u677f\u5b50\u5c31\u4e0d\u89e3\u91ca\u4e86\n\tif(!u || !v) return u|v; if(key[u]<key[v]) swap(u,v);\n\tint &ul=son[u][0],&ur=son[u][1]; ur=merge(ur,v),f[ur]=u;\n\tif(dis[ul]<dis[ur]) swap(ul,ur); dis[u]=dis[ur]+1; return u;\n}\ninline int change(int u){\n\tkey[u]>>=1; int ul=son[u][0], ur=son[u][1];\n\tf[ul]=f[ur]=son[u][0]=son[u][1]=0;  //\u5148\u6682\u65f6\u5220\u9664\u4e0e u \u6709\u5173\u7684\u5168\u90e8\u4fe1\u606f\n    ul=merge(ul,ur),u=merge(u,ul); return u; //\u7136\u540e\u5408\u5e76 u \u7684\u4e24\u4e2a\u5b69\u5b50, \u518d\u5408\u5e76 u \u548c \u4e4b\u524d\u5408\u5e76\u5f97\u5230\u7684\u6839ul, \u8fd4\u56de\u65b0\u5806\u7684\u6839\u7f16\u53f7\n}\nint main(){\n\tint i,x,y,fx,fy;\n\twhile(~scanf(\"%d\",&n)){\n\t\tfor(i=1;i<=n;++i) //\u6ce8\u610f\u6e05\u96f6, dis\u4e0d\u7528\n\t\t\tf[i]=son[i][0]=son[i][1]=0;\n\t\tfor(i=1;i<=n;++i) scanf(\"%d\",key+i);\n\t\tfor(scanf(\"%d\",&m),i=1;i<=m;++i){\n\t\t\tscanf(\"%d%d\",&x,&y),\n            fx=find(x),fy=find(y); //\u5e76\u67e5\u96c6 get father\n            if(fx==fy){  //\u5224\u65ad fx \u548c fy \u5173\u7cfb,\u5982\u9898\n            \tputs(\"-1\"); continue; \n            }\n\t\t\tfx=change(fx),fy=change(fy), //\u66f4\u65b0\u4e24\u4e2a\u5806\n            fx=merge(fx,fy),printf(\"%d\\n\",key[fx]); //\u5408\u5e76\u4e24\u4e2a\u5806,\u8f93\u51fa\u65b0\u5806\u4e2d\u6839\u7684key\n\t\t}\n\t} return 0;\n}\n```",
        "postTime": 1533630359,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1456 \u3010Monkey King\u3011"
    },
    {
        "content": "/\\*\n\u6bcf\u6b21\u7ed9\u51fa\u8981\u4e89\u5435\u7684\u7334\u5b50a\u548cb\uff0c\u7528\u5e76\u67e5\u96c6\u5224\u65ad\u5982\u679c\u4ed6\u4eec\u662f\u670b\u53cb\u8f93\u51fa-1\n\n\u5982\u679c\u4e0d\u662f\uff0c\u627e\u51faa\uff0cb\u5728\u7684\u5806\u7684\u6839A\uff0cB\uff0c\u5206\u522b\u5408\u5e76A\uff0cB\u7684\u5de6\u53f3\u5b69\u5b50\uff0c\u518d\u5408\u5e76\u4e00\u4e0b\u3002\n\n\u4e4b\u540e\u628aA\uff0cB\u7684\u6570\u636e\u66f4\u6539\u4e00\u4e0b\uff1a\u6743\u503c\u9664\u4ee52\uff0c\u5de6\u53f3\u5b69\u5b50\u8bbe\u4e3a0\uff0c\u518d\u63d2\u5165\u5230\u5806\u4e2d\u5373\u53ef\u3002\n\n\u6700\u540e\u8f93\u51fa\u5806\u9876\u3002\n\n\\*/\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int N = 100005;\nint m,n;\nint set[N];\nstruct node\n{\n    int l,r,dis,key;\n}tree[N];\nint find(int x) {return set[x] == x ? x : set[x] = find(set[x]);}\nint merge(int a,int b)\n{\n    if(!a)\n        return b;\n    if(!b)\n        return a;\n    if(tree[a].key < tree[b].key)//\u5927\u5806\n        swap(a,b);\n    tree[a].r = merge(tree[a].r,b);\n    set[tree[a].r] = a;//\u5e76\u67e5\n    if(tree[tree[a].l].dis < tree[tree[a].r].dis)\n        swap(tree[a].l,tree[a].r);\n    if(tree[a].r)\n        tree[a].dis = tree[tree[a].r].dis + 1;\n    else\n        tree[a].dis = 0;\n    return a;\n}\nint pop(int a)\n{\n    int l = tree[a].l;\n    int r = tree[a].r;\n    set[l] = l;//\u56e0\u4e3a\u8981\u6682\u65f6\u5220\u6389\u6839\uff0c\u6240\u4ee5\u5de6\u53f3\u5b50\u6811\u5148\u4f5c\u4e3a\u6839\n    set[r] = r;\n    tree[a].l = tree[a].r = tree[a].dis = 0;\n    return merge(l,r);\n}\nint nextint()\n{\n    char c;\n    int ret = 0;\n    while((c = getchar()) > '9' || c < '0')\n        ;\n    ret = c - '0';\n    while((c = getchar()) >= '0' && c <= '9')\n        ret = ret * 10 + c - '0';\n    return ret;\n}\nvoid print(int a)\n{\n    if(!a)\n        return;\n    print(a/10);\n    putchar(a%10 + '0');\n}\nint main()\n{\n    int a,b,i;\n    while(~scanf(\"%d\",&n))\n    {\n        for(i = 1;i <= n;i ++)\n        {;\n            tree[i].key = nextint();\n            set[i] = i;\n            tree[i].l = tree[i].r = tree[i].dis = 0;\n        }\n        m = nextint();\n        while(m --)\n        {\n            a = nextint();\n            b = nextint();\n            int ra = find(a);\n            int rb = find(b);\n            if(ra == rb)\n                printf(\"-1\\n\");\n            else\n            {\n                int rra = pop(ra);//ra\u5de6\u53f3\u5b50\u6811\u5408\u5e76\n                tree[ra].key /= 2;\n                ra = merge(rra,ra);//\u91cd\u65b0\u63d2\u5165ra \u627e\u5230\u5408\u9002\u7684\u4f4d\u7f6e\n                int rrb = pop(rb);\n                tree[rb].key /= 2;\n                rb = merge(rrb,rb);\n                print(tree[merge(ra,rb)].key);\n                putchar(10);\n            }\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1481375662,
        "uid": 20833,
        "name": "\u5b89\u597d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1456 \u3010Monkey King\u3011"
    },
    {
        "content": "             \n              \n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<cmath>\n#include<cstdlib>\nusing namespace std;\nstruct node{  \n    int v,l,r;  //v\u80fd\u91cf\u503c\uff0cl\u8868\u793a\u5de6\u6307\u6570\uff0cr \u8868\u793a\u53f3\u6307\u6570 \n};  \nstruct node a[100000+10];  \nint m,n,f[100000+10],dist[100000+10];  //dist\u8868\u793a\u8ddd\u79bb,f\u8868\u793a\u7236\u4eb2\u8282\u70b9 \nint mg(int x,int y){  \n    if(x==0)return y; //\u4e00\u4e2a\u8282\u70b9\u4e3a\u7a7a\uff0c\u8f93\u51fa\u53e6\u4e00\u4e2a\u8282\u70b9 \n    if(y==0)return x;  \n    if(a[y].v>a[x].v){  //\u8981\u5c06y\u653e\u5165x\u4e2d\u5219,\u5219y\u7684\u80fd\u91cf\u503c\u5c0f \n        int tmp;tmp=x;x=y;y=tmp;  \n    }  \n    a[x].r=mg(a[x].r,y);  //\u5c06\u4e00\u4e2ay\u6811\u63a5\u5728x\u7684\u53f3\u5b50\u6811\u4e0a \n    f[a[x].r]=x; //\u5c06x\u4e3a\u9996\u9886\u3002==\u5408\u5e76 \n    if(a[x].r==0)dist[x]=0;  //\u8ddd\u79bb \n    else dist[x]=dist[a[x].r]+1;//\u8fd0\u7528\u5de6\u504f\u6811\u7684\u6027\u8d28  \n    if(dist[a[x].r]>dist[a[x].l]){  \n        int tmp;  \n        tmp=a[x].r;a[x].r=a[x].l,a[x].l=tmp;  //\u5f53\u5de6\u8fb9\u5927\u4e8e\u53f3\u8fb9\uff0c\u4ea4\u6362 \n    }  \n    return x;  \n}  \nint find(int x){  \n    if(f[x]==x)return x;  \n    else return f[x]=find(f[x]);   \n}  \nint main(){  \n    while(scanf(\"%d\",&n)!=EOF){  //\u8f93\u5165 \n        for(int i=1;i<=n;i++)a[i].l=a[i].r=0;//\u6bcf\u4e2a\u90fd\u72ec\u7acb  \n        for(int i=1;i<=n;i++)f[i]=i;  //\u9996\u9886\u4e3a\u81ea\u5df1 \n        for(int i=1;i<=n;i++)scanf(\"%d\",&a[i].v); //\u8f93\u5165\u6bcf\u53ea\u7334\u5b50\u7684\u80fd\u91cf\u503c \n        scanf(\"%d\",&m);  //m\u6b21\u6218\u6597\u7684\u673a\u4f1a \n        for(int i=1;i<=m;i++){  \n            int x,y;  \n            scanf(\"%d%d\",&x,&y);  //\u7b2c\u51e0\u4e2a\u7334\u7fa4\u4e0e\u7b2c\u51e0\u4e2a\u6218\u6597 \n            int fx,fy;  \n            fx=find(x);fy=find(y);  //\u627e\u9996\u9886 \n            if(fx==fy){  \n                printf(\"-1\\n\");continue;  //\u540c\u4e00\u7fa4 \n            }    \n            int tmp;  \n            a[fx].v/=2;  //\u7b2c\u4e00\u4e2a\u9996\u9886 \n            tmp=mg(a[fx].l,a[fx].r);//\u5408\u5e76 \n            a[fx].r=a[fx].l=0;  //\u5c06\u9996\u9886\u5b64\u7acb \n            int nx=mg(tmp,fx);  //\u9996\u9886\u91cd\u65b0\u653e\u5165\u6570\u7ec4\uff0c\u91cd\u65b0\u9009\u9996\u9886 \n            a[fy].v/=2;  //\u53e6\u4e00\u4e2a \n            tmp=mg(a[fy].l,a[fy].r);//\u5408\u5e76 \n            a[fy].r=a[fy].l=0;  //\u5c06\u9996\u9886\u62ff\u51fa \n            int ny=mg(tmp,fy);  //\u91cd\u65b0\u653e\u5165\u5de6\u504f\u6811\u4e2d \n            tmp=mg(nx,ny);  //\u5408\u5e76\u4e24\u5806\u7334\u5b50 \n            f[nx]=f[ny]=tmp;  //tmp\u4e3a\u65b0\u9996\u9886 \n            printf(\"%d\\n\",a[tmp].v);  //\u8f93\u51fa\u65b0\u9996\u9886\u7684\u80fd\u91cf\u503c \n        }  \n    }     \n}\n```",
        "postTime": 1470879255,
        "uid": 19863,
        "name": "1234KID",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1456 \u3010Monkey King\u3011"
    }
]