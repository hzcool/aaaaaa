[
    {
        "content": "### \u524d\u8a00\n\u5728$[WA]$\u4e86$10$\u6b21\u4e4b\u540e\uff0c\u6211\u7ec8\u4e8e\u8fc7\u4e86\u8fd9\u9053\u9898\u2026\u2026\n\n------------\n\n\u8bfb\u5b8c\u9898\u540e\u601d\u8def\u5c31\u5df2\u7ecf\u5f88\u660e\u6717\u4e86\uff1a\n1. \u627e\u73af\uff0c\u7f29\u70b9\n1. \u5229\u7528$LCA$\u5bfb\u627e\u4e24\u70b9\u4e4b\u95f4\u78b3\u7684\u4e2a\u6570\n\n------------\n\n**\u4f46\u662f**\u2026\u2026\u627e\u73af\u7684\u8fc7\u7a0b\uff1f\u7531\u4e8e\u8fd9\u662f\u4e2a**\u65e0\u5411\u56fe**\uff0c\u6240\u4ee5\u662f\u4e0d\u5b58\u5728\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u3002\u5f3a\u8fde\u901a\u5206\u91cf\u662f**\u6709\u5411\u56fe**\u4e2d\u7684\u5b9a\u4e49\u3002\u5bf9\u4e8e\u65e0\u5411\u56fe\u53ea\u6709\u53cc\u8fde\u901a\u5206\u91cf\u3002\u800c\u53cc\u8fde\u901a\u5206\u91cf\u53c8\u5206\u4e24\u79cd\uff1a\n- \u70b9-\u53cc\u8fde\u901a\u5206\u91cf\n- \u8fb9-\u53cc\u8fde\u901a\u5206\u91cf\n\n\u4ece\u9898\u76ee\u63cf\u8ff0\u6765\u770b\uff0c\u672c\u9898\u9700\u8981\u628a\u6240\u6709\u7684\u78b3\u73af\u5168\u90e8\u7f29\u6210\u4e00\u4e2a\u70b9\u3002\u4f46\u662f\u7531\u4e8e\u6211\u5bf9\u53cc\u8fde\u901a\u5206\u91cf\u7684\u7f29\u70b9\u4e0d\u719f\uff0c\u4e8e\u662f\u6211\u4e13\u95e8\u53bb\u67e5\u770b\u4e86\u8d44\u6599\uff1a\u70b9-\u53cc\u8fde\u901a\u5206\u91cf\u7684\u7f29\u70b9\u662f\u57fa\u4e8e**\u5272\u70b9**\u7684\uff0c\u800c\u8fb9-\u53cc\u8fde\u901a\u5206\u91cf\u662f\u57fa\u4e8e**\u6865**\u7684\u3002\n\n\u95ee\u9898\u6765\u4e86\uff1a\u662f\u5199 \u70b9-\u53cc\u8fde\u901a\u5206\u91cf \u8fd8\u662f \u8fb9-\u53cc\u8fde\u901a\u5206\u91cf \u5462\uff1f\u4ed4\u7ec6\u67e5\u770b\u5b9a\u4e49\u540e\uff0c\u6211\u53d1\u73b0\uff1a\u70b9-\u53cc\u8fde\u901a\u5206\u91cf \u7f29\u70b9\u540e\u7684\u7ed3\u6784\u662f\u4e0d\u7b26\u5408\u672c\u9898\u7684\u8981\u6c42\u7684\u3002\u56e0\u4e3a**\u5b83\u7f29\u70b9\u540e\u662f\u4f1a\u628a\u5272\u70b9\u770b\u4f5c\u5355\u72ec\u7684\u4e00\u4e2a\u70b9**\uff0c\u800c\u672c\u9898\u662f\u8981\u6c42\u628a\u6240\u6709\u7684\u7b80\u5355\u73af\u53d8\u6210\u4e00\u4e2a\u70b9\uff0c\u6b64\u65f6\u8fd9\u663e\u7136\u662f\u4e0d\u5bf9\u7684\u3002\n\n------------\n\n\u81f3\u4e8e\u9898\u89e3\u91cc\u7684\u5404\u4f4d\u5927\u4f6c\u5199\u7684\u201c\u70b9-\u53cc\u8fde\u901a\u5206\u91cf\u201d\uff0c\u8981\u4e48\u662f\u6211\u5b66\u827a\u4e0d\u7cbe\uff0c\u6ca1\u6709\u6b63\u786e$get$ \u70b9-\u53cc\u8fde\u901a\u5206\u91cf \u7684\u7f29\u70b9\u7684\u771f\u6b63\u5b9a\u4e49\uff0c\u8981\u4e48\u5c31\u662f\u90a3\u4e2a\u4e0d\u80fd\u53eb \u70b9-\u53cc\u8fde\u901a\u5206\u91cf \u7684\u7f29\u70b9\u3002\u4e0d\u7ba1\u600e\u4e48\u8bf4\uff0c\u6211\u653e\u5f03\u4e86\u5199 \u70b9-\u53cc\u8fde\u901a\u5206\u91cf \u7684\u60f3\u6cd5\u3002\n***\n$P.S.$\n***\n\u8fd9\u91cc\u4ec5\u4ec5\u662f\u53d1\u8868\u4e86\u4e2a\u4eba\u7684\u89c2\u70b9\uff0c\u5982\u6709\u5f02\u8bae\u6b22\u8fce\u5728\u8ba8\u8bba\u533a\u6307\u6559\u3002\u4e2a\u4eba\u611f\u89c9\u5e94\u8be5\u662f\u6211\u7406\u89e3\u9519\u4e86\uff0c\u56e0\u4e3a\u90a3\u4e2a\u611f\u89c9\u662f\u5f3a\u884c\u628a\u65e0\u5411\u56fe\u5199\u6210\u4e86\u6709\u5411\u56fe\u7684\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u8fd9\u5f53\u7136\u662f\u6b63\u786e\u7684\uff0c\u800c\u4e14\u5341\u5206\u5de7\u5999\uff0c\u53ea\u662f\u8bf4\u6cd5\u53ef\u80fd\u4e0d\u4e00\u6837\u3002\u5982\u6709\u5192\u72af\uff0c\u8bf7\u591a\u591a\u5305\u6db5\u3002~~\uff08\u745f\u745f\u53d1\u6296\uff09~~\n\n------------\n\n\u7ecf\u8fc7\u4e00\u756a\u6df1\u601d\u719f\u8651\uff0c\u6211\u51b3\u5b9a\u5199 \u8fb9-\u53cc\u8fde\u901a\u5206\u91cf\u3002\u8fb9-\u53cc\u8fde\u901a\u5206\u91cf \u7684\u6c42\u89e3\u65b9\u6cd5\u5982\u4e0b\uff1a\n1. \u627e\u5230\u8be5\u56fe\u4e2d\u7684\u6240\u6709\u7684\u6865\uff08\u5220\u53bb\u540e\u4f7f\u5f97\u539f\u56fe\u4e0d\u8fde\u901a\u7684\u8fb9\uff09\n1. \u628a\u6865\u5220\u6389\uff0c\u6b64\u65f6\u56fe\u4e2d\u7684\u6bcf\u4e00\u4e2a\u8fde\u901a\u7684\u90e8\u5206\u7ec4\u6210\u4e00\u4e2a \u8fb9-\u53cc\u8fde\u901a\u5206\u91cf\u3002\n\n\u7136\u800c\u8fd9\u79cd\u505a\u6cd5\u6709\u4e00\u4e2a\u5de8\u5927\u7684$bug$\u6446\u5728\u9762\u524d\uff1a\u4e24\u70b9\u95f4\u7684\u91cd\u8fb9\u53ea\u80fd\u7b97\u4e00\u6761\u8fb9\u3002\u800c\u5728\u6865\u7684\u5b9a\u4e49\u4e2d\uff0c\u4e00\u65e6\u6709\u91cd\u8fb9\u7684\u5b58\u5728\uff0c\u8fd9\u4e9b\u91cd\u8fb9\u5c31\u90fd\u4e0d\u80fd\u53eb\u505a\u6865\u4e86\u3002\u4f46\u662f\u5728\u672c\u9898\u4e2d\uff0c\u8fd9\u662f\u4e0d\u5bf9\u7684\u3002\n\n\u89e3\u51b3\u7684\u529e\u6cd5\uff1a**\u53bb\u6389\u91cd\u8fb9\u5373\u53ef**\u3002\n\n\u91cd\u8fb9\u600e\u4e48\u53bb\u6389\u5462\uff1f\u6211\u60f3\u5230\u4e86\u4e09\u79cd\u601d\u8def\uff1a\uff08\u6211\u56e0\u4e3a\u592a\u83dc\u4e86\u4e0d\u4f1a\u5199$vector$\uff09\n1. \u82e5\u7528\u90bb\u63a5\u8868\u5b58\u56fe\uff0c\u5219\u53ef\u5229\u7528\u54c8\u5e0c\u8868\u7684\u65b9\u5f0f\uff0c\u5728\u6dfb\u52a0\u8fb9\u4e4b\u524d\u5148\u770b\u6709\u6ca1\u6709\u8fd9\u6761\u8fb9\u5b58\u5728\u3002\u4f46\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n^{2})$\uff0c\u8d85\u65f6\u3002\n2. \u82e5\u91c7\u7528\u90bb\u63a5\u77e9\u9635\u5b58\u56fe\uff0c\u5219\u53ef\u4ee5$O(1)$\u53bb\u6389\u91cd\u8fb9\uff0c\u4f46\u662f\u7a7a\u95f4\u65e0\u6cd5\u627f\u53d7\u3002\n3. \u91c7\u7528\u53cc\u94fe\u8868\u5b58\u56fe\uff0c\u5e76\u4e14\u628a\u6240\u6709\u7684\u8fb9\u590d\u5236\u4e00\u904d\uff0c\u6309\u7167\u6309\u7167\u8d77\u70b9\u4f18\u5148\uff0c\u7ec8\u70b9\u5176\u6b21\uff0c**\u7f16\u53f7**\u6700\u540e\u7684\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u7136\u540e$O(m)$\u5224\u91cd\u3002\u603b\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(m\\cdot log_{2}m)$\uff0c\u53ef\u884c\u3002\n\n\t\u6ce8\u610f\uff0c\u4e00\u5b9a\u8981\u6309\u7167\u8d77\u70b9\uff0c\u7ec8\u70b9\uff0c**\u7f16\u53f7**\u7684\u5173\u952e\u5b57\uff0c\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u76f8\u540c\u7684\u8fb9\u76f8\u90bb\u3002\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u8981\u5728\u6700\u540e\u52a0\u4e00\u4e2a\u7f16\u53f7\uff0c\u662f\u56e0\u4e3a\u4e00\u6761\u65e0\u5411\u8fb9\u662f\u5f53\u4f5c\u4e24\u6761\u6709\u5411\u8fb9\u5b58\u7684\uff0c\u5982\u679c\u7f16\u53f7\u4ece$2$\u5f00\u59cb\uff0c\u5219\u4e00\u6761\u8fb9 $e$ \u7684\u5bf9\u5e94\u8fb9\u4e3a $e$ $xor$ $1$ \u3002\u5fc5\u987b\u8981\u5728\u6700\u540e\u7684\u5173\u952e\u5b57\u4e2d\u52a0\u5165\u7f16\u53f7\uff0c\u624d\u80fd\u4fdd\u8bc1\u524d\u540e\u5c5e\u4e8e\u4e00\u6761\u65e0\u5411\u8fb9\u7684\u4e24\u6761\u6709\u5411\u8fb9\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3002\u6bd4\u5982\u524d\u9762\u6709\u4e24\u4e2a $3$ $->$ $10$ \uff0c\u7f16\u53f7\u4e3a  $6$ \u3001$9$ \uff1b\u540e\u9762\u6709\u4e24\u4e2a $10$ $->$ $3$ \uff0c\u7f16\u53f7\u4e3a $8$ \u3001$7$ \uff0c\u6ca1\u6709\u4e00 \u4e00\u5bf9\u5e94\uff0c\u53bb\u91cd\u540e\u5c31\u4f1a\u51fa\u9519\u3002\uff08\u8fd9\u4e2a\u9519\u6211\u67e5\u4e86\u4e00\u4e0b\u5348\uff0c\u5fc3\u9178\uff09\n\n\t\u81f3\u4e8e\u53bb\u91cd\uff0c\u76f4\u63a5\u7528\u53cc\u94fe\u8868\u5c31\u53ef\u4ee5\u4e86\u3002\n***\n\u63a5\u4e0b\u6765\u662f\u7f29\u70b9\u3002\u53bb\u6389\u6865\u540e\uff0c\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\u91cc\u7684\u6240\u6709\u70b9\u6807\u8bb0\u4e0a\u540c\u4e00\u4e2a\u989c\u8272\uff0c\u7136\u540e\u67e5\u770b\u6240\u6709\u8fb9\uff0c\u628a\u4e24\u6761\u8fb9\u7684\u4e24\u70b9\u7684\u989c\u8272\u8fde\u8d77\u6765\u91cd\u65b0\u5efa\u56fe\u3002\u7f29\u5b8c\u70b9\u540e\u56fe\u5c31\u53d8\u6210\u4e86\u4e00\u68f5\u6811\uff0c\u968f\u4fbf\u6307\u5b9a\u4e00\u4e2a\u70b9\u4e3a\u6839\uff0c\u8dd1$LCA$\u5c31\u884c\u4e86\u3002\u6211\u7528\u7684\u662f\u500d\u589e\uff0c\u590d\u6742\u5ea6\u4e3a$O(n\\cdot log_{2}n)$\u3002\n\n\u6700\u540e\u7edf\u8ba1\u51fa\u7b54\u6848\u540e\u8f6c\u4e3a\u4e8c\u8fdb\u5236\u5373\u53ef\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6$O(m\\cdot log_{2}m+tot\\cdot n\\cdot log_{2}n)$\u3002\n\n$[AC]$\u4ee3\u7801\u5982\u4e0b\uff0c\u5176\u4e2d\u6709\u6ce8\u91ca\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline void read(int &x)//\u8bfb\u5165\u4f18\u5316 \n{\n\tint w=x=0;\n\tchar ch=0;\n\twhile(ch<'0'||'9'<ch)\n\t\tw|=(ch=='-'),ch=getchar();\n\twhile('0'<=ch&&ch<='9')\n\t\tx=(x<<3)+(x<<1)+(ch^'0'),ch=getchar();\n\tx=w?-x:x;\n}\nconst int N=1e5,M=5e5;//\u6012\u5f0010\u500d\n//<\u5410\u69fd>\uff1a \n//\u611f\u89c9\u6700\u540e\u4e00\u4e2a\u70b9\u8d85\u51fa\u4e86\u9898\u76ee\u63cf\u8ff0\u7684\u6570\u636e\u8303\u56f4 \nstruct Edge\n{\n\tint u,v;\n}E[M<<1|1],e[M<<1|1];\nstruct node\n{\n\tint no,u,v;\n}cop[M<<1|1];\nqueue<int> q; \nint last=1,fst[N+1],nxt[M<<1|1],bef[M<<1|1];//\u539f\u56fe \nint num,head[N+1],to[M<<1|1];//\u7f29\u70b9\u56fe \nint n,m,dep,dfn[N+1],low[N+1];//tarjan\nint tot,cnt,typ[N+1]; //\u7f29\u70b9 \nbool flag[M<<1|1],bri[M<<1|1],vis[N+1],rvis[N+1];//\u91cd\u8fb9 , \u6865 , \u7f29\u70b9 \nint lg2[N+1],as[25][N+1],depth[N+1];//lca\nvoid add(int x,int y)\n{\n\tE[++last]=(Edge){x,y};\n\tbef[fst[x]]=last,nxt[last]=fst[x],fst[x]=last;//\u4f7f\u7528\u53cc\u94fe\u8868\u4fbf\u4e8e\u5220\u8fb9 \n\tcop[last]=(node){last,x,y};\n}\nbool operator<(const node &x,const node &y)//\u91cd\u8f7d\u8fd0\u7b97\u7b26\u4ee5\u4fbf\u4e8e\u6392\u5e8f\u5220\u8fb9 \n{\n\tif(x.u!=y.u)\n\t\treturn x.u<y.u;\n\tif(x.v!=y.v)\t\n\t\treturn x.v<y.v;\n\treturn x.no<y.no;\n}\nvoid del(int x)//\u5229\u7528\u53cc\u94fe\u8868\u5220\u8fb9 \n{\n\tflag[x]=1;\n\tif(bef[x])\n\t\tnxt[bef[x]]=nxt[x];\n\telse\n\t{\n\t\tint y=E[x].u;\n\t\tfst[y]=nxt[x];\n\t}\n}\nvoid tarjan(int x,int e)//\u627e\u6865 \n{\n\tdfn[x]=low[x]=++dep;\n\tfor(int i=fst[x];i;i=nxt[i])\n\t{\n\t\tint y=E[i].v;\n\t\tif(i==(e^1))\n\t\t\tcontinue;\n\t\tif(!dfn[y])\n\t\t{\n\t\t\ttarjan(y,i);\n\t\t\tlow[x]=min(low[x],low[y]);\n\t\t\tif(low[y]>dfn[x])\n\t\t\t\tbri[i]=bri[i^1]=1;//\u6865\u7684\u5224\u5b9a\u6cd5\u5219 \n\t\t}\n\t\telse\n\t\t\tlow[x]=min(low[x],dfn[y]);\n\t}\n}\nvoid run(int x)//\u904d\u5386\u627e\u8fde\u901a\u5757 \n{\n\tvis[x]=1;\n\tq.push(x);\n\tfor(int i=fst[x];i;i=nxt[i])\n\t{\n\t\tint y=E[i].v;\n\t\tif(!vis[y]&&!bri[i])\n\t\t\trun(y); \n\t}\n}\nvoid radd(int x,int y)//\u91cd\u65b0\u5efa\u56fe \n{\n\te[++num]=(Edge){x,y};\n\tto[num]=head[x],head[x]=num;\n}\nvoid dfs(int x,int fa)//lca\u9884\u5904\u7406 \n{\n\trvis[x]=1,depth[x]=depth[fa]+1,as[0][x]=fa;\n\tfor(int i=1;i<=lg2[depth[x]]+1;++i)\n\t\tas[i][x]=as[i-1][as[i-1][x]];\n\tfor(int i=head[x];i;i=to[i])\n\t{\n\t\tint y=e[i].v;\n\t\tif(!rvis[y]&&y!=fa)\n\t\t\tdfs(y,x);\n\t}\n}\nint lca(int x,int y)//\u500d\u589e\u6c42lca \n{\n\tif(depth[x]<depth[y])\n\t\tswap(x,y);\n\tfor(int i=lg2[depth[x]]+1;i>=0;--i)\n\t{\n\t\tif(depth[as[i][x]]>=depth[y])\n\t\t\tx=as[i][x];\n\t\tif(x==y)\n\t\t\treturn x;\n\t}\n\tfor(int i=lg2[depth[x]]+1;i>=0;--i)\n\t\tif(as[i][x]!=as[i][y])\n\t\t\tx=as[i][x],y=as[i][y];\n\treturn as[0][x]; \n}\nvoid print(int x)\n{\n\tif(x==0)\n\t{\n\t\tprintf(\"0\");\n\t\treturn;\n\t}\n\tif(x==1)\n\t{\n\t\tprintf(\"1\");\n\t\treturn;\n\t}\n\tprint(x>>1);\n\tprintf(\"%d\",x%2);\t\n}\nint main()\n{\n\tread(n),read(m);\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint a,b;\n\t\tread(a),read(b);\n\t\tif(a!=b) \n\t\t\tadd(a,b),add(b,a);\n\t}\n\tsort(cop+2,cop+last+1);//\u6392\u5e8f\u53bb\u91cd\u8fb9 \n\tfor(int i=3;i<=last;++i)\n\t\tif(cop[i].u==cop[i-1].u&&cop[i].v==cop[i-1].v)\n\t\t\tdel(cop[i].no);\n\tfor(int i=1;i<=n;++i)\n\t\tif(!dfn[i])\n\t\t\ttarjan(i,1);\n\tfor(int i=1;i<=n;++i)\n\t\tif(!vis[i])\n\t\t{\n\t\t\trun(i);\n\t\t\t++cnt;\n\t\t\twhile(!q.empty())//\u5229\u7528\u961f\u5217\u5b58\u50a8\u8fde\u901a\u5757 \n\t\t\t{\n\t\t\t\ttyp[q.front()]=cnt;\n\t\t\t\tq.pop();\n\t\t\t}\n\t\t}\n\tfor(int i=2;i<=last;++i)\n\t{\n\t\tif(flag[i])\n\t\t\tcontinue;//\u4e0d\u8981\u5fd8\u4e86\u53bb\u6389\u91cd\u8fb9 \n\t\tint a=E[i].u,b=E[i].v;\n\t\ta=typ[a],b=typ[b];\n\t\tif(a!=b)\n\t\t\tradd(a,b),radd(b,a);\n\t}\n\tfor(int i=2;i<=cnt;++i)\n\t\tlg2[i]=lg2[i>>1]+1;\n\tdfs(1,0);\n\tread(tot);\n\twhile(tot--)\n\t{\n\t\tint a,b;\n\t\tread(a),read(b);\n\t\ta=typ[a],b=typ[b];\n\t\tint c=lca(a,b);\n\t\tint ans=depth[a]+depth[b]-(depth[c]<<1)+1;//\u8ba1\u7b97\u78b3\u7684\u4e2a\u6570\uff0c\u8bb0\u5f97+1 \n\t\tprint(ans);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n```\n\u5f53\u7136\uff0c\u6211\u8fd9\u79cd\u5199\u6cd5\u5176\u5b9e\u5e76\u4e0d\u4f18\uff0c\u590d\u6742\u5ea6\u6ca1\u6709\u5176\u4ed6\u5927\u4f6c\u4eec\u7684\u65b9\u6cd5\u4f18\uff0c\u8bf7\u8c05\u89e3\uff01",
        "postTime": 1559477706,
        "uid": 116293,
        "name": "SammyChu",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2783 \u3010\u6709\u673a\u5316\u5b66\u4e4b\u795e\u5076\u5c14\u4f1a\u505a\u4f5c\u5f0a\u3011"
    },
    {
        "content": "\u9898\u610f:\u7ed9\u4f60\u4e00\u4e2a\u65e0\u5411\u56fe,\u5176\u4e2d\u4e00\u4e2a\u70b9\u53cc\u8054\u901a\u5206\u91cf\u7b97\u4f5c\u4e00\u4e2a\u70b9,\u8be2\u95ee\u4e24\u4e2a\u70b9\u4e4b\u95f4\u6709\u591a\u5c11\u70b9\n\n\u70b9\u53cc\u8054\u901a\u5206\u91cf:\u6240\u8c13\u70b9-\u53cc\u8fde\u901a\u5206\u91cf\u662f\u6307\u5728\u4e00\u4e2a\u65e0\u5411\u56fe\u4e2d\u4e24\u70b9\u95f4\u81f3\u5c11\u6709\u4e24\u6761\u8def\u5f84,\u4e14\u8def\u5f84\u4e2d(\u4e0d\u7b97\u5934\u5c3e)\u7684\u70b9\u4e0d\u540c.\n\n\u6211\u4eec\u53ea\u8981\u628a\u6240\u6709\u7684\u53cc\u8054\u901a\u5206\u91cf\u7f29\u6210\u4e00\u4e2a\u70b9,\u7136\u540e\u8fd9\u4e2a\u56fe\u53c8\u662f\u4e00\u4e2a\u8fde\u901a\u56fe\n\n\u5373\u7f29\u70b9\u4e4b\u540e\u5c31\u662f\u4e00\u4e2a\u8054\u901a\u65e0\u73af\u56fe\u4e86\u2014\u2014\u5373\u6811\n\n\u8be2\u95ee\u4e24\u70b9\u4e4b\u95f4\u6709\u591a\u70b9\u5c31\u662f\u8be2\u95ee\u6811\u4e0a\u8ddd\u79bb+1\u4e86\n\n\u6811\u4e0a\u8ddd\u79bb=dep[u]+dep[v]-2\\*dep[lca(u,v)]\n\n\u7136\u540e\u8fd9\u9053\u9898,tarjan\u7684\u65f6\u5019\u6700\u597d\u7528vector\u5b58\u8fb9,\u4e0d\u7136\u7b2c4\u4e2a\u70b9\u6b7b\u6d3b\u8fc7\u4e0d\u53bb(\u4e0d\u8981\u95ee\u6211\u4e3a\u5565\u77e5\u9053\u7684)\n",
        "postTime": 1510294177,
        "uid": 20156,
        "name": "Kelin",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2783 \u3010\u6709\u673a\u5316\u5b66\u4e4b\u795e\u5076\u5c14\u4f1a\u505a\u4f5c\u5f0a\u3011"
    },
    {
        "content": "\n\u8fb9\u53cc\u7f29\u70b9\u7136\u540e$lca$\u8dd1$dis$\u5c31\u597d\u4e86\u3002\n\n\u6ce8\u610f\u8fd9\u91cc\u662f\u8fb9\u53cc\uff0c\u4e0d\u77e5\u9053\u4e3a\u5565\u6240\u6709\u9898\u89e3\u90fd\u8bf4\u7684\u662f\u70b9\u53cc\u3002\n\n\u8fb9\u53cc\u662f\u5b9a\u4e49\u5728\u70b9\u4e0a\u7684\uff0c\u5373\u6bcf\u4e2a\u70b9\u53ea\u5c5e\u4e8e\u4e00\u4e2a\u8fb9\u53cc\uff1b\u70b9\u53cc\u662f\u5b9a\u4e49\u5728\u8fb9\u4e0a\u7684\uff0c\u5373\u6bcf\u6761\u8fb9\u53ea\u5c5e\u4e8e\u4e00\u4e2a\u70b9\u53cc\u3002\n\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\n \nvoid read(int &x) {\n    x=0;int f=1;char ch=getchar();\n    for(;!isdigit(ch);ch=getchar()) if(ch=='-') f=-f;\n    for(;isdigit(ch);ch=getchar()) x=x*10+ch-'0';x*=f;\n}\n \nvoid print(int x) {\n    if(x<0) putchar('-'),x=-x;\n    if(!x) return ;print(x/2),putchar(x%2+48);\n}\nvoid write(int x) {if(!x) putchar('0');else print(x);putchar('\\n');}\n\n#define lf double\n#define ll long long \n\nconst int maxn = 2e4+10;\nconst int maxm = 1e5+10;\nconst int inf = 1e9;\nconst lf eps = 1e-8;\n\nint n,m;\n\nstruct Tree {\n\tint head[maxn],tot,fa[maxn][15],dep[maxn],vis[maxn];\n\tstruct edge{int to,nxt;}e[maxm<<1];\n\n\tvoid add(int u,int v) {e[++tot]=(edge){v,head[u]},head[u]=tot;}\n\tvoid ins(int u,int v) {add(u,v),add(v,u);}\n\n\tvoid dfs(int x,int Fa) {\n\t\tdep[x]=dep[Fa]+1,fa[x][0]=Fa;\n\t\tfor(int i=1;i<=14;i++) fa[x][i]=fa[fa[x][i-1]][i-1];\n\t\tfor(int i=head[x];i;i=e[i].nxt)\n\t\t\tif(e[i].to!=Fa) dfs(e[i].to,x);\n\t}\n\n\tint lca(int x,int y) {\n\t\tif(dep[x]<dep[y]) swap(x,y);\n\t\tfor(int i=14;~i;i--) if(dep[fa[x][i]]>=dep[y]) x=fa[x][i];\n\t\tif(x==y) return x;\n\t\tfor(int i=14;~i;i--) if(fa[x][i]!=fa[y][i]) x=fa[x][i],y=fa[y][i];\n\t\treturn fa[x][0];\n\t}\n\n\tint dis(int x,int y) {return dep[x]+dep[y]-2*dep[lca(x,y)]+1;}\n}T;\n\nstruct Graph {\n\tint head[maxn],tot,dfn[maxn],low[maxn],dfn_cnt,bel[maxn],col,sta[maxn],top;\n\tstruct edge{int to,nxt;}e[maxm<<1];\n\n\tvoid add(int u,int v) {e[++tot]=(edge){v,head[u]},head[u]=tot;}\n\tvoid ins(int u,int v) {add(u,v),add(v,u);}\n\t\n\tvoid tarjan(int x,int fa) {\n\t\tdfn[x]=low[x]=++dfn_cnt,sta[++top]=x;\n\t\tfor(int v,i=head[x];i;i=e[i].nxt) {\n\t\t\tif((v=e[i].to)==fa) continue;\n\t\t\tif(!dfn[v]) tarjan(v,x),low[x]=min(low[x],low[v]);\n\t\t\telse low[x]=min(low[x],dfn[v]);\n\t\t}\n\t\tif(dfn[x]==low[x]) {\n\t\t\t++col;\n\t\t\twhile(sta[top]!=x) bel[sta[top--]]=col;\n\t\t\tbel[sta[top--]]=col;\n\t\t}\n\t}\n\n\tvoid prepare() {\n\t\tfor(int i=1;i<=n;i++) if(!dfn[i]) tarjan(i,0);\n\t\tfor(int x=1;x<=n;x++)\n\t\t\tfor(int i=head[x];i;i=e[i].nxt)\n\t\t\t\tif(bel[e[i].to]!=bel[x]) T.add(bel[e[i].to],bel[x]); //\u6ce8\u610f\u8fd9\u91cc\u5355\u5411\u8fb9\n\t\tT.dfs(1,0);\n\t}\n}G;\n\nint main() {\n\tread(n),read(m);for(int i=1,x,y;i<=m;i++) read(x),read(y),G.ins(x,y);\n\tG.prepare();int q;read(q);for(int i=1,x,y;i<=q;i++) read(x),read(y),write(T.dis(G.bel[x],G.bel[y]));\n\treturn 0;\n}\n```",
        "postTime": 1553740675,
        "uid": 50777,
        "name": "Hyscere",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2783 \u3010\u6709\u673a\u5316\u5b66\u4e4b\u795e\u5076\u5c14\u4f1a\u505a\u4f5c\u5f0a\u3011"
    },
    {
        "content": "# \u524d\u8a00\n\n\u8fd9\u9053\u9898\u4ee5\u524d\u8fd8\u662f\u9053\uff08~~\u6c34~~\uff09\u9ed1\u9898\uff0c\u73b0\u5728\u600e\u4e48\u964d\u7d2b\u4e86\uff1f\uff1f\uff1f\uff1f\n\n## \u524d\u7f6e\u829d\u58eb\n\n1. tarjain \u7f29\u70b9\n\n1. \u500d\u589e\u6c42LCA\u6216\u6811\u5256\u6c42LCA\n\n1. \u8111\u5b50\u3002\u3002\u3002\n\n## \u9898\u610f\n\n\u7ed9\u4f60\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u8981\u6c42\u4f60\u628a\u6240\u6709\u7684\u73af\u7f29\u6210\u4e00\u4e2a\u70b9\u3002\u5728\u65b0\u5f97\u5230\u7684\u56fe\u4e0a\u95ee\u4f60\u4e24\u4e2a\u70b9\u4e4b\u95f4\u6709\u591a\u5c11\u4e2a\u70b9\u3002\n\n## \u5206\u6790\n\n\u9996\u5148\u6211\u4eec\u4f1a\u7531 \"\u6240\u6709\u7684\u73af\u72b6\u78b3\u90fd\u53d8\u6210\u4e86\u4e00\u4e2a\u78b3\" \u60f3\u5230\u8981\u7f29\u70b9\u3002\n\n\u4f46\u662f\u65e0\u5411\u56fe\u600e\u4e48\u7f29\u70b9\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u539f\u6765\u65e0\u5411\u56fe\u90a3\u6837\u7f29\u70b9\uff0c\u4f46\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f $to != fa[x] $\n\n\u56e0\u4e3a\u8fd9\u662f\u65e0\u5411\u56fe\uff0c\u53ef\u80fd\u6709\u7684\u8fb9\u4f1a\u76f4\u63a5\u8fde\u5411\u4ed6\u7236\u4eb2\uff0c\u5047\u5982\u6211\u4eec\u8981\u8d70\u8fd9\u6761\u8fb9\u7684\u8bdd\uff0c\u5c31\u4f1a\u91cd\n\n\u590d\u641c\uff0c\u5c31\u8fd9\u6837\u4e00\u76f4\u65e0\u9650\u5faa\u73af\u4e0b\u53bb\u3002\u5269\u4e0b\u7684\u5c31\u548c\u6709\u5411\u56fe\u7684\u7f29\u70b9\u6ca1\u4ec0\u4e48\u533a\u522b\u4e86\u3002\n\n\u63a5\u7740\u6211\u4eec\u5c31\u8981\u8003\u8651\u6bcf\u4e2a\u8be2\u95ee\u3002\n\n\u6211\u4eec\u628a\u6240\u6709\u7684\u73af\u53bb\u6389\u540e\uff0c\u5c31\u4f1a\u5f97\u5230\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\uff08\u6811\uff09\u3002\u4e0d\u7406\u89e3\u7684\u7ae5\u978b\u8bf7\u753b\u56fe\u81ea\u8bc1\n\n\u90a3\u4e48\u95ee\u9898\u5c31\u4f1a\u8f6c\u5316\u4e3a\u6811\u4e0a\u95ee\u9898\u3002\n\n\u7529\u7ed9\u4f60\u4e00\u5f20\u56fe\n\n![](https://images.cnblogs.com/cnblogs_com/zjp-shadow/1056673/o_tree3.png)\n\n\u5047\u5982\u6211\u4eec\u8981\u6c42 $4$ \u548c $7$ \u4e4b\u95f4\u7684\u6709\u591a\u5c11\u4e2a\u70b9\u3002\u6211\u4e48\u53ef\u4ee5\u7528\n\n$dep[4] + dep[7] - 2 * dep[3] + 1 $ \n\n\u5373 $dep[x] + dep[y] - 2 * dep[lca(x,y)] + 1$\n\n\u7531\u4e8e\u4ed6\u7684\u6df1\u5ea6\u6709\u7c7b\u4f3c\u4e8e\u524d\u7f00\u548c\u7684\u6027\u8d28\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8fd9\u4e48\u5904\u7406\u3002\n\n\u4e3a\u4ec0\u4e48\u8981\u51cf\u4e00\u5462\uff1f \u56e0\u4e3a\u4f60 $LCA $\u5904 \u53ea\u80fd\u7b97\u4e00\u4e2a\u70b9\uff0c\u4f46\u4f60\u5374\u51cf\u4e86\u4e24\u6b21\uff0c\u6240\u4ee5\u8981\n\n\u91cd\u65b0\u52a0\u4e0a\n\n## \u8865\u5145\n\n\u5173\u4e8e\u4e00\u4e2a\u6570\u8f6c\u4e8c\u8fdb\u5236\u7684\u65b9\u6cd5\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8054\u60f3\u5230\u5feb\u901f\u5e42\u4e2d\u8981\u4f9d\u6b21\u53d6\u51fa\u6307\u6570\u7684\u4e8c\u8fdb\u5236\u6bcf\u4e00\u4f4d\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u50cf\u5feb\u901f\u5e42\n\n\u4e2d\u7684\u5199\u6cd5\u6a21\u62df\u51fa\u4e8c\u8fdb\u5236\u6bcf\u4e00\u4f4d\u3002\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\nvoid shuchu(int x)\n{\n    int xx = 0;//\u8bb0\u5f55\u6709\u591a\u5c11\u4f4d\n    for(; x; x>>=1)//\u4f9d\u6b21\u53d6\u51fa\u6bcf\u4e00\u4f4d\u4e0a\u7684\u6570\u5b57\n    {\n    \txx++;\n    \tif(x & 1) t[xx] = 1;\n    \telse t[xx] = 0;\n    }\n    for (int i = xx; i >= 1; i-- )  printf(\"%d\",t[i]);//\u5012\u5e8f\u8f93\u51fa\n    printf(\"\\n\");\n}\n```\n\n## \u51e0\u4e2a\u8981\u6ce8\u610f\u7684\u70b9\n\n1. \u6c42\u4e24\u4e2a\u70b9\u7684LCA \u4e00\u5b9a\u8981\u5728\u65b0\u5efa\u7684\u56fe\u4e0a\u6c42 \uff08\u672c\u849f\u84bb\u5c31\u5728\u8fd9\u91cc\u5361\u4e86\u597d\u51e0\u56de\uff09\n\n1. \u6811\u5256\u6c42 LCA \u65f6\u8981\u6ce8\u610f\u662f\u5728\u7f29\u5b8c\u70b9\u4e4b\u540e\u7684\u56fe\u4e0a\u6c42\n\n1. tarjain \u7f29\u70b9\u65f6\u8981\u6ce8\u610f\u4e0d\u80fd\u8bbf\u95ee\u5230\u4ed6\u7236\u4eb2\u7684\u8fb9\n\n## \u65b0\u53d1\u73b0\n\n\u4ee5\u524d\u7684\u4ee3\u7801\uff0c\u6211\u6c42\u7684\u662f\u6bcf\u4e00\u6761\u94fe\u7684\u8f7b\u513f\u5b50\u7adf\u7136\u610f\u5916\u7684AC\u4e86\u3002\n\n\u4f46\u6c42\u91cd\u513f\u5b50\u8981\u6bd4\u6c42\u8f7b\u513f\u5b50\u8981\u8dd1\u7684\u5feb\u3002\u96fe\n\n\n\u4e0d\u61c2\u5f97\u540c\u978b , \u8bf7\u770b\u4e0b\u9762\u4ee3\u7801 \uff0c\u4e0b\u9762\u6709\u6ce8\u91ca\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int N = 1e5+10;\nint n,m,u,v,x,y,tot,sum,cnt,num,topp,T;\nint dep[N],fa[N],size[N],top[N],head[N],hed[N];\nint shu[N],dfn[N],low[N],sta[N],son[N];\nint t[N];\nbool vis[N];\ninline int read()//\u6807\u51c6\u5feb\u8bfb\n{\n\tint s = 0,w = 1; char ch = getchar();\n\twhile(ch < '0' || ch > '9'){if(ch == '-') w = -1; ch = getchar();}\n\twhile(ch >= '0' && ch <= '9'){s = s * 10+ch -'0'; ch = getchar();}\n\treturn s * w;\n}\nstruct node{int to,net;}e[N<<1],edge[N<<1];//\u4e3a\u4e86\u538b\u884c\u4e0d\u62e9\u624b\u6bb5\nvoid add(int x,int y)\n{\n\te[++tot].to = y;\n\te[tot].net = head[x];\n\thead[x] = tot;\n}\nvoid add_(int x,int y)//\u5efa\u65b0\u56fe\u4e0a\u7684\u8fb9\n{\n\tedge[++sum].to = y;\n\tedge[sum].net = hed[x];\n\thed[x] = sum;\n}\nvoid tarjain(int x,int fa)//\u7f29\u70b9\n{\n\tdfn[x] = low[x] = num++;\n\tsta[++topp] = x; vis[x] = 1;\n\tfor(int i = head[x]; i; i = e[i].net)\n\t{\n\t\tint to = e[i].to;\n\t\tif(to == fa) continue;//\u7279\u5224\u662f\u4e0d\u662f\u8054\u5411\u4ed6\u7236\u4eb2\u5f97\u8fb9\n\t\tif(!dfn[to])\n\t\t{\n\t\t\ttarjain(to,x);\n\t\t\tlow[x] = min(low[x],low[to]);\n\t\t}\n\t\telse if(vis[to])\n\t\t{\n\t\t\tlow[x] = min(low[x],dfn[to]);\n\t\t}\n\t}\n\tif(dfn[x] == low[x])//\u6c42\u5f3a\u8054\u901a\u5206\u91cf\n\t{\n\t\tcnt++; int y;\n\t\tdo\n\t\t{\n\t\t\ty = sta[topp--];\n\t\t\t//size[cnt]++;\n\t\t\tshu[y] = cnt;\n\t\t\tvis[y] = 0;\n\t\t}while(x != y);\n\t}\n}\nvoid get_tree(int x)//\u6811\u5256\u7b2c\u4e00\u904dDFS\u6c42\u91cd\u513f\u5b50\n{\n\tdep[x] = dep[fa[x]] + 1; size[x] = 1;\n\tfor(int i = hed[x]; i; i = edge[i].net)\n\t{\n\t\tint to = edge[i].to;\n\t\tif(to == fa[x]) continue;\n\t\tfa[to] = x;\n\t\tget_tree(to);\n\t\tsize[x] += size[to];\n\t\tif(size[to] > size[son[x]]) son[x] = to;\n\t}\n}\nvoid dfs(int x,int topp)//\u6811\u5256\u7b2c\u4e8c\u904dDFS\u6c42\u6bcf\u6761\u94fe\u7684\u9876\u7aef\n{\n\ttop[x] = topp;\n\tif(son[x]) dfs(son[x],topp);\n\tfor(int i = hed[x]; i; i = edge[i].net)\n\t{\n\t\tint to = edge[i].to;\n\t\tif(to == fa[x] || to == son[x]) continue;\n\t\tdfs(to,to);\n\t}\n}\nint lca(int x,int y)//\u6811\u5256\u6c42LCA\n{\n\twhile(top[x] != top[y])\n\t{\n\t\tif(dep[top[x]] < dep[top[y]]) swap(x,y);\n\t\tx = fa[top[x]];\n\t}\n\tif(dep[x] < dep[y]) return x;\n\telse return y;\n}\nvoid shuchu(int x)//\u4e8c\u8fdb\u5236\u8f6c\u5316\n{\n    int xx = 0;\n    for(; x; x>>=1)\n    {\n    \txx++;\n    \tif(x & 1) t[xx] = 1;\n    \telse t[xx] = 0;\n    }\n    for (int i = xx; i >= 1; i--) printf(\"%d\",t[i]);\n    printf(\"\\n\");\n}\nint main()\n{\n\tn = read(); m = read();\n\tfor(int i = 1; i <= m; i++)\n\t{\n\t\tu = read(); v = read();\n\t\tadd(u,v); add(v,u);\n\t}\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tif(!dfn[i]) tarjain(i,0);\n\t}\n\tfor(int i = 1; i <= n; i++)//\u7f29\u70b9\n\t{\n\t\tfor(int j = head[i]; j; j = e[j].net)\n\t\t{\n\t\t\tint to = e[j].to; \n\t\t\tif(shu[to] != shu[i])\n\t\t\t{\n\t\t\t\tadd_(shu[i],shu[to]);\n\t\t\t}\n\t\t}\n\t}\n\tget_tree(1);\n\tdfs(1,1);\n\tT = read();\n\twhile(T--)\n\t{\n\t\tx = read(); y = read();\n\t\tint Lca = lca(shu[x],shu[y]);\n\t\tint ans = dep[shu[x]] + dep[shu[y]] - 2 * dep[Lca] + 1;//\u8ba1\u7b97\u6bcf\u4e2a\u8be2\u95ee\u7684\u7b54\u6848\n\t\tshuchu(ans);\n\t}\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1595891402,
        "uid": 248896,
        "name": "genshy",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2783 \u3010\u6709\u673a\u5316\u5b66\u4e4b\u795e\u5076\u5c14\u4f1a\u505a\u4f5c\u5f0a\u3011"
    },
    {
        "content": "\u7528\u90bb\u63a5\u8868\u8fc7\u4e86\u554a\uff1f\uff1f\uff1f\uff1f\n\n\u63d0\u4f9b\u4e2atarjanLCA\n\ntarjan\u7b97\u6cd5\u6c42\u5b8c\u53cc\u8fde\u901a\u5206\u91cf\u4e4b\u540e\u91cd\u6784\u56fe\uff0c\u8f93\u51fa\u4e24\u70b9\u95f4\u8ddd\u79bb\n\ndep[x]+dep[y]-2dep[lca]+1\n\n\n```cpp\n#include<stack>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int N=1e4+10,M=5e4+10;\nstack<int>s;\nbool vis[N];\nint n,m,tot,dfn[N],low[N],dfn_cnt,edge_cnt,ciredge_cnt,ask_cnt,cir_cnt,head[N],from[N],start[N],cir[N],fa[N],lca[N],dep[N]={0,1};\nstruct edge{int to,next,num;}e[M*2],c[M*2],q[N];\ninline void addedge(int a,int b) //\u52a0\u4e00\u6761\u539f\u56fe\u7684\u8fb9 \n{\n\te[++edge_cnt].next=head[a];\n\thead[a]=edge_cnt;\n\te[edge_cnt].to=b;\n}\ninline void addcircle(int a,int b) //\u52a0\u4e00\u6761\u53cc\u8fde\u901a\u5206\u91cf\u7684\u8fb9 \n{\n\tc[++ciredge_cnt].next=from[a];\n\tfrom[a]=ciredge_cnt;\n\tc[ciredge_cnt].to=b;\n}\ninline void addquery(int a,int b,int c) //\u52a0\u4e00\u6761lca\u67e5\u8be2\u7684\u8fb9 \n{\n\tq[++ask_cnt].next=start[a];\n\tstart[a]=ask_cnt;\n\tq[ask_cnt].to=b;\n\tq[ask_cnt].num=c;\n}\nvoid dfs(int p,int fa)\n{\n\tlow[p]=dfn[p]=++dfn_cnt;s.push(p);\n\tfor (int to,i=head[p];i;i=e[i].next)\n\t\tif ((to=e[i].to)!=fa)\n\t\t\tif (!dfn[to])dfs(to,p),low[p]=min(low[p],low[to]);\n\t\t\telse if (!cir[to])low[p]=min(low[p],dfn[to]);\n\tif (low[p]!=dfn[p])return;\n\tcir_cnt++;\n\twhile (1)\n\t{\n\t\tint x=s.top();s.pop();\n\t\tcir[x]=cir_cnt;\n\t\tif (x==p)break;\n\t}\n}\ninline void tarjan()\n{\n\tfor (int i=1;i<=n;i++)if (!dfn[i])dfs(i,0);\n}\ninline void rebuild() //\u91cd\u6784\u56fe \n{\n\tfor (int id1,i=1;i<=n;i++)\n\t\tfor (int id2,j=head[i];j;j=e[j].next)\n\t\t\tif ((id1=cir[i])!=(id2=cir[e[j].to]))\n\t\t\t\taddcircle(id1,id2),addcircle(id2,id1);\n}\ninline void init() \n{\n\tfill(vis+1,vis+cir_cnt+1,0);\n\tfor (int i=1;i<=cir_cnt;i++)fa[i]=i;\n}\nint find(int x)\n{\n\treturn fa[x]==x?x:fa[x]=find(fa[x]);\n}\ninline void Union(int x,int y)\n{\n\tint f1=find(x),f2=find(y);\n\tif (f1==f2)return;\n\tfa[f1]=f2;\n}\nvoid getdep(int p) //dfs\u6c42\u6df1\u5ea6 \n{\n\tvis[p]=1;\n\tfor (int to,i=from[p];i;i=c[i].next)\n\t\tif (!vis[to=c[i].to])\n\t\t\tdep[to]=dep[p]+1,getdep(to);\n}\nvoid tarjan_lca(int p) //tarjan\u6c42lca \n{\n\tvis[p]=1;\n\tfor (int to,i=start[p];i;i=q[i].next)\n\t\tif (vis[to=q[i].to])lca[q[i].num]=find(to);\n\tfor (int to,i=from[p];i;i=c[i].next)\n\t\tif (!vis[to=c[i].to])\n\t\t\ttarjan_lca(to),Union(to,p);\n}\ninline int distance(int x,int y,int lca)\n{\n\treturn dep[x]+dep[y]-2*dep[lca]+1;\n}\ninline void print(int x) //\u8f6c\u6210\u4e8c\u8fdb\u5236\u8f93\u51fa \n{\n\tstack<bool>st;\n\twhile (x)st.push(x%2),x/=2;\n\twhile (st.size())printf(\"%d\",st.top()),st.pop();\n\tputs(\"\");\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tint a,b;\n\twhile (m--)\n\t\tscanf(\"%d%d\",&a,&b),\n\t\taddedge(a,b),addedge(b,a);\n\ttarjan();rebuild();\n\tscanf(\"%d\",&tot);\n\tfor (int i=1;i<=tot;i++)\n\t\tscanf(\"%d%d\",&a,&b),\n\t\taddquery(cir[a],cir[b],i),addquery(cir[b],cir[a],i);\n\tgetdep(1);init();tarjan_lca(1);\n\tfor (int i=1;i<=tot;i++)\n\t\tprint(distance(q[i*2].to,q[i*2-1].to,lca[i]));\n\treturn 0;\n}\n```",
        "postTime": 1538809941,
        "uid": 14374,
        "name": "zhengrunzhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2783 \u3010\u6709\u673a\u5316\u5b66\u4e4b\u795e\u5076\u5c14\u4f1a\u505a\u4f5c\u5f0a\u3011"
    },
    {
        "content": "### \u7ec8\u4e8e\u6709\u673a\u4f1a\u5199\u4e00\u9053\u9ed1\u9898~~\u81f3\u5c11\u76ee\u524d\u662f\u8fd9\u6837~~\u7684\u9898\u89e3\u4e86\uff01\u5c0f\u849f\u84bb\u597d\u5174\u594bqwq\n\n\u8fd9\u9053\u9898\u53ef\u4ee5\u8bf4\u662f\u975e\u5e38\u6c34\u4e86\uff0c\u65b9\u6cd5\u90fd\u5dee\u4e0d\u591a\uff0c\u57fa\u672c\u4e0a\u5c31\u662f\u5148\u7528tarjan\u6c42\u53cc\u8054\u901a\u5206\u91cf\u7f29\u4e00\u4e0b\u70b9\uff0c\u7136\u540e\u518d\u91cd\u65b0\u5efa\u56fe\u8fdb\u884c\u5904\u7406\uff0c\u6700\u540e\u628a\u7b54\u6848\u8f6c\u5316\u4e3a\u4e8c\u8fdb\u5236\u3002\n\n\u770b\u5404\u4f4ddalao\u90fd\u662f\u7f29\u70b9\u540e\u6c42\u51falca\u518d\u76f4\u63a5\u8ba1\u7b97\u7684\uff08**depth[x]+depth[y]-depth[lca]*2+1**\uff09\n\n**\u5c0f\u849f\u84bb\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u5728\u6811\u5256\u4e2d\u76f4\u63a5\u6c42\u51fa\u7b54\u6848\u7684\u65b9\u6cd5~~\uff08\u4f3c\u4e4e\u672c\u8d28\u4e0a\u5e76\u6ca1\u6709\u533a\u522b\uff09~~\u6743\u5f53\u662f\u4e00\u79cd\u601d\u8def\u5427qwq**\n```\nint qrange(int x,int y){\n    int ress=0;\n    while(top[x]!=top[y]){  \n        if(depth[top[x]]<depth[top[y]])\n          swap(x,y);\n        ress+=depth[x]-depth[top[x]]+1;\n        x=fa[top[x]];\n    }\n    if(depth[x]>depth[y])\n      swap(x,y);\n    int ree=depth[y]-depth[x]+1;\n    return ress+ree;\n}\n\n```\n**\u5728\u6811\u5256\u6bcf\u6b21\u8df3\u94fe\u7684\u65f6\u5019\u987a\u4fbf\u6c42\u51fa\u8d70\u8fc7\u7684\u78b3\u7684\u6570\u91cf\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u4e13\u95e8\u6c42lca\u4e86\uff08\u96fe**\n\n\u6709dalao\u8bf4\u5fc5\u987b\u8981\u7528vector\u5b58\u8fb9\uff0c\u5c0f\u849f\u84bb\u745f\u745f\u53d1\u6296\uff0c\u601d\u91cf\u518d\u4e09\u6700\u540e\u8fd8\u662f\u7528\u7684\u90bb\u63a5\u8868\uff0c\u7136\u800c\u5c31\u8fc7\u4e86(\u96fe\n\n\u7a0b\u5e8f\u4e2d\u8fd8\u6709\u7b80\u5355\u7684\u6ce8\u89e3\uff0c\u5c0f\u849f\u84bb\u5728\u8fd9\u91cc\u5c31\u4e0d\u591a\u8bf4\u4e86qwq\n\n\u90a3\u4e48\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<stack>\n#define maxn 200010\n#define re register\n#define FOR(i,l,r) for(re int i=l;i<=r;i++)\nusing namespace std;\n\nint n,m,k,c,t,cnt,num,num1,tot,co,x,y,z;\nint ans[maxn],head1[maxn],depth[maxn],fa[maxn],son[maxn],head2[maxn];\nint a[maxn],low[maxn],dfn[maxn],val[maxn],b[maxn],siz[maxn],top[maxn]; \nint shu[100010],id[maxn];\n\nstruct hz{\n    int next;\n    int to;\n    int ff;\n}h1[maxn],h2[maxn]; //\u90bb\u63a5\u8868\u5b58\u56fe\n\nstack<int> st;\n\ninline void in(int &x){ //\u65e0\u5904\u4e0d\u5728\u7684\u5feb\u8bfb\n    x=0;int f=1;char c=getchar();\n    while(c<'0'||c>'9'){\n        if(c==-1) return;\n        if(c=='-')f=-1;\n        c=getchar();\n    }\n    while(c<='9'&&c>='0'){\n        x=(x<<1)+(x<<3)+(c^'0');\n        c=getchar();\n    }\n    x=x*f;\n}\n\ninline void out(int a){\n    if(a<0){\n        a*=-1;\n        putchar('-');\n    } \n    if(a>=10)out(a/10);\n    putchar(a%10+'0');\n}\n\nvoid add1(int from,int to){  //\u8bfb\u5165\u65f6\u7684\u52a0\u8fb9\n    h1[++num].next=head1[from];\n    h1[num].ff=from;\n    h1[num].to=to;\n    head1[from]=num;\n}\n\nvoid add2(int from,int to){ //\u7f29\u70b9\u540e\u7684\u52a0\u8fb9\n    h2[++num1].next=head2[from];\n    h2[num1].to=to;\n    head2[from]=num1;\n}\n\nvoid tarjan(int x,int f){ //tarjan\u6c42\u53cc\u8fde\u901a\u5206\u91cf\n    dfn[x]=low[x]=++tot;\n    b[x]=1;\n    st.push(x);\n    for(re int i=head1[x];i!=0;i=h1[i].next){\n        if(h1[i].to==f) //\u548ctarjan\u6c42\u5f3a\u8054\u901a\u5206\u91cf\u7565\u7528\u5dee\u522b\uff0c\u4e0d\u80fd\u8d70\u56de\u7236\u8282\u70b9\n          continue;\n        if(dfn[h1[i].to]==0){\n            tarjan(h1[i].to,x);\n            low[x]=min(low[x],low[h1[i].to]);\n        }\n        else\n          if(b[h1[i].to]==1)\n            low[x]=min(low[x],dfn[h1[i].to]);\n    }\n    if(dfn[x]==low[x]){\n        ++co;\n        while(x!=st.top()){\n            b[st.top()]=0;\n            a[st.top()]=co;\n            st.pop();\n        }\n        b[x]=0;\n        a[x]=co;\n        st.pop();\n    }\n}\n\nvoid dfs1(int f,int ff){ \n    depth[f]=depth[ff]+1;\n    fa[f]=ff;\n    siz[f]=1;\n    for(re int i=head2[f];i!=0;i=h2[i].next){\n        if(h2[i].to==ff)\n          continue;\n        dfs1(h2[i].to,f);\n        siz[f]+=siz[h2[i].to];\n        if(siz[h2[i].to]>siz[son[f]])\n          son[f]=h2[i].to;\n    }\n}\n\nvoid dfs2(int x,int topf){ \n    top[x]=topf;\n    id[x]=++cnt;\n    if(!son[x])\n      return;\n    dfs2(son[x],topf);\n    for(re int i=head2[x];i!=0;i=h2[i].next){\n        if(h2[i].to==fa[x]||h2[i].to==son[x])\n          continue;\n        dfs2(h2[i].to,h2[i].to);\n    }\n}\n\nint qrange(int x,int y){ //\u6811\u5256\u6c42\u7b54\u6848\n    int ress=0;\n    while(top[x]!=top[y]){\n        if(depth[top[x]]<depth[top[y]])\n          swap(x,y);\n        ress+=depth[x]-depth[top[x]]+1;\n        x=fa[top[x]];\n    }\n    if(depth[x]>depth[y])\n      swap(x,y);\n    int ree=depth[y]-depth[x]+1;\n    return ress+ree;\n}\n\nvoid zhuan(int x){ //\u8f6c2\u8fdb\u5236\n    int w=0;\n    memset(shu,0,sizeof(shu));\n    while(x!=0){\n        shu[++w]=x%2;\n        x/=2;\n    }\n    for(re int i=w;i>=1;i--)\n      out(shu[i]);\n    puts(\"\");\n}\n\nint main(){\n    in(n),in(m);\n    FOR(i,1,m){\n        in(x),in(y);\n        add1(x,y);  //\u65e0\u5411\u8fb9\n        add1(y,x); \n    }\n    co=0;\n    FOR(i,1,n)   //\u6c42\u73af\n      if(!dfn[i])\n        tarjan(i,0);\n    FOR(i,1,2*m){ //\u7f29\u70b9\u91cd\u65b0\u5efa\u56fe\n        if(i%2==0) continue;\n        if(a[h1[i].ff]!=a[h1[i].to])\n          add2(a[h1[i].ff],a[h1[i].to]),add2(a[h1[i].to],a[h1[i].ff]);\n    }\n    dfs1(1,0);\n    dfs2(1,1);\n    int kk,ansss;\n    in(kk);\n    FOR(i,1,kk){\n        in(x),in(y);\n        x=a[x],y=a[y];  //\u8bfb\u5165\u70b9\u6240\u5728\u7684\u53cc\u8fde\u901a\u5206\u91cf\u7684\u5e8f\u53f7\n        zhuan(qrange(x,y)); //\u8f6c\u63622\u8fdb\u5236\n    }\n    return 0; //\u529f\u5fb7\u5706\u6ee1\n}\n```",
        "postTime": 1536451676,
        "uid": 66965,
        "name": "Juan_feng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2783 \u3010\u6709\u673a\u5316\u5b66\u4e4b\u795e\u5076\u5c14\u4f1a\u505a\u4f5c\u5f0a\u3011"
    },
    {
        "content": "## \u9898\u89e3-P2783 \u6709\u673a\u5316\u5b66\u4e4b\u795e\u5076\u5c14\u4f1a\u505a\u4f5c\u5f0a\n**[P2783 \u6709\u673a\u5316\u5b66\u4e4b\u795e\u5076\u5c14\u4f1a\u505a\u4f5c\u5f0a]**(https://www.luogu.org/problemnew/show/P2783)\n### $1.1$ \u9898\u76ee\u610f\u601d\n\u6309\u7167\u4eba\u8bdd\u8bb2\u5c31\u662f\u7ed9\u4f60\u4e00\u5f20\u56fe\uff0c\u8ba9\u4f60\u7f29\u70b9\uff0c\u7136\u540e\u6c42\u6811\u4e0a\u4e24\u70b9\u4e4b\u95f4\u8ddd\u79bb\u5373\u53ef\uff08\u7b54\u6848\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u8f93\u51fa\uff09\n\n### $2.1$\u7b97\u6cd5\u601d\u60f3\n\u6309\u7167$1.1$\u9a6c\u4e0a\u5c31\u53ef\u4ee5\u60f3\u5230\u5148\u7528$tarjan$\u7f29\u70b9\u4e00\u904d\uff0c\u7136\u540e\u518d\u91cd\u6784\u56fe\uff0c\u518d\u5462\u5c31\u662f$lca$\u6c42\u51fa\u6811\u4e0a\u4e24\u70b9\u8ddd\u79bb\uff0c\u518d\u7528\u6570\u7ec4\u6a21\u62df\u4e8c\u8fdb\u5236\u8f6c\u6362\u3002\u4e8e\u662f\u4f60\u5c31\u6c34\u8fc7\u5566\u4e00\u9053\u9ed1\u9898\u3002\u4f46\u662f\u503c\u5f97\u6ce8\u610f\u7684\u662f\u5728$tarjan$\u7f29\u70b9\u7684\u65f6\u5019\uff0c\u5982\u679c\u8fd9\u4e2a\u73af\u7684\u5927\u5c0f$siz\\leq 2$\uff08\u9898\u76ee\u4e2d\u8bf4\u4e24\u4e2a\u78b3\u4e0d\u6210\u73af\uff09\u5c31\u8df3\u8fc7\u5373\u53ef\u3002\u4e3b\u8981\u662f\u7ec6\u8282\u95ee\u9898\uff0c\u5176\u4f59\u7684\u90fd\u5f88\u7b80\u5355\u7684\u5440\u3002\n\n### $3.1$\u4ee3\u7801\u5b9e\u73b0\n**\u7b2c\u4e00\u90e8\u5206\uff1atarjan\u7f29\u70b9**\n```cpp\ninline void tarjan(int u,int fa) {\n//\u7565\u52a0\u53d8\u5316\u7684trajan\u6a21\u677f\n    stak[++top]=u;\n    low[u]=dfn[u]=++now;\n    for ( int i=head[u];i;i=e[i].nex ) {\n        int v=e[i].to;\n        if(v==fa) continue;//\u5982\u679csiz<=2\u4e0d\u7f29\u70b9\n        if(!dfn[v]) {\n            tarjan(v,u);\n            low[u]=min(low[u],low[v]);\n        }\n        else \n            if(!col[v]) \n                low[u]=min(low[u],dfn[v]);\n    }\n    if(low[u]==dfn[u]) {\n        col[u]=++sum;\n        siz[sum]++;\n        while(stak[top]!=u) {\n            col[stak[top]]=sum;\n            siz[sum]++;\n            top--;\n        }\n        top--;\n    }\n}\n```\n\n**\u7b2c\u4e8c\u90e8\u5206\uff1a\u91cd\u65b0\u6784\u56fe**\n```cpp\n    cnt=0;\n    memset(head,0,sizeof(head));\n    memset(e,0,sizeof(e));\n    //\u521d\u59cb\u5316\n    for ( int i=1;i<=m;i++ ) \n        if(col[u[i]]!=col[v[i]]) {\n        //\u5982\u679c\u4e24\u4e2a\u70b9\u5728\u4e0d\u540c\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u9762\uff0c\u8fde\u4e24\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\n            add_edge(col[u[i]],col[v[i]]);\n            add_edge(col[v[i]],col[u[i]]);\n        }\n```\n\n**\u7b2c\u4e09\u90e8\u5206\uff1adfs\u9884\u5904\u7406+lca\u500d\u589e**\n```cpp\ninline void dfs(int u,int fa) {\n    d[u]=d[fa]+1;//\u9884\u5904\u7406\u6df1\u5ea6\n    pa[u][0]=fa;//\u6c42\u7236\u4eb2\u662f\u8c01\n    for ( int i=1;i<=20;i++ ) \n        pa[u][i]=pa[pa[u][i-1]][i-1];//\u500d\u589e\u9884\u5904\u7406pa\u6570\u7ec4\n    for ( int i=head[u];i;i=e[i].nex ) {\n        int v=e[i].to;\n        if(v==fa) continue;\n        dfs(v,u);//\u9012\u5f52\u4e0b\u53bb\n    }\n}\n\ninline int lca(int a,int b) {\n    if(d[a]>d[b]) swap(a,b);\n    for ( int i=20;i>=0;i-- ) \n        if(d[b]-(1<<i)>=d[a]) b=pa[b][i];\n    if(a==b) return a;//\u5982\u679c\u5df2\u7ecf\u76f8\u540c\u6c42\u76f4\u63a5\u8fd4\u56de\n    for ( int i=20;i>=0;i-- ) \n        if(pa[a][i]!=pa[b][i]) {\n            a=pa[a][i];\n            b=pa[b][i];\n        }\n    return pa[a][0];\n}\n```\n**\u7b2c\u56db\u90e8\u5206\uff1a\u6c42\u6811\u4e0a\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb**\n$d[a]+d[b]-2*d[lca(a,b)]$\n```cpp\ninline int find(int a,int b) {\n    return d[a]+d[b]-2*d[lca(a,b)]+1;\n}\n```\n\n**\u7b2c\u4e94\u90e8\u5206\uff1a\u4e8c\u8fdb\u5236\u8f6c\u6362**\n```cpp\ninline void change(int s) {\n    int len=0;\n    memset(bit,0,sizeof(bit));\n    while(s!=0) {\n        bit[++len]=s%2;//\u6570\u7ec4\u6a21\u62df\u6bcf\u4e00\u4f4d\u60c5\u51b5\n        s/=2;\n    }\n    for ( int i=len;i>=1;i-- ) \n        printf(\"%d\",bit[i]);\n    printf(\"\\n\");\n}\n```\n**\u4ee3\u7801\u4e3b\u8981\u5c31\u8fd9\u4e48\u591a\u4e86\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u7ec6\u8282\u95ee\u9898\uff0c\u4ee3\u7801\u4e5f\u5c31\u4e0d\u653e\u4e86\uff0c\u795d\u5927\u5bb6A\u6389\u8fd9\u9053\u9ed1\u9898\uff0c\u7f8e\u6ecb\u6ecb\u3002\u3002\u3002**\n\n\n\n",
        "postTime": 1563543451,
        "uid": 172612,
        "name": "\u7c73\u5947\u5947\u7c73",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2783 \u3010\u6709\u673a\u5316\u5b66\u4e4b\u795e\u5076\u5c14\u4f1a\u505a\u4f5c\u5f0a\u3011"
    },
    {
        "content": "\n# [\u987e](https://www.luogu.org/blog/RPdreamer/#)[z](https://www.cnblogs.com/-guz/)\n\n~~\u4f60\u6ca1\u6709\u53d1\u73b0\u4e24\u4e2a\u5b57\u91cc\u7684blog\u90fd\u4e0d\u4e00\u6837\u561b~~ qwq\n\n\u9898\u76ee\u63cf\u8ff0-->[p2783 \u6709\u673a\u5316\u5b66\u4e4b\u795e\u5076\u5c14\u4f1a\u505a\u4f5c\u5f0a](https://www.luogu.org/problemnew/show/P2783)\n\n\u633a\u6076\u5fc3\u7684\u4e00\u4e2a\u9898,\u6d89\u53ca\u5230\u4e86$tarjan+LCA$\n\n\u9996\u5148$Tarjan$\u7f29\u70b9,\u5bf9\u5f3a\u8fde\u901a\u5206\u91cf\u4e4b\u95f4\u5efa\u8fb9.\u8dd1$LCA$\u5373\u53ef\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f,\u6c42\u51fa\u6765$LCA$\u4e4b\u540e\u6c42\u8ddd\u79bb\u7684\u65f6\u5019,\u8981$+1$\n\n$$ans=dis[x]+dis[y]-2\\times dis[lca]+1$$\n\n\u8fd9\u91cc\u4e3a\u4e3a\u4ec0\u4e48\u8981\u52a0$1$?\u6211\u4eec\u8ba1\u7b97$dis[x]+dis[y]-2\\times dis[lca]$\u7684\u65f6\u5019\u5c31\u51cf\u53bb\u4e86$LCA$\u8fd9\u4e2a\u70b9,\u9700\u8981\u518d\u52a0\u4e0a.\n\n(\u5efa\u8bae\u624b\u7ed8\u4e00\u4e0b qwq)\n\n\u8f6c\u5316\u4e3a\u4e8c\u8fdb\u5236\u4e5f\u5f88\u7b80\u5355,\u4e0d\u591a$BB$ \u3000~~\u867d\u7136\u521a\u5f00\u59cb\u6211\u4e5f\u5199\u9519\u4e86 qwq~~\n\n**PS\uff1a\u5f53\u6c42$LCA$\u7684\u65f6\u5019\u8981\u5bf9$x,y$\u6240\u5728\u5f3a\u8fde\u901a\u5206\u91cf\u6c42$LCA$**\n\n``\u4ee3\u7801``\n\n```c++\n/*\u53d8\u91cf\u540d\u8d77\u7684\u5f88\u7384\u5b66 qwq,\u770b\u6e05*/\n#include<bits/stdc++.h>\n#define N 100008\n#define R register\nusing namespace std;\ninline void in(int &x)\n{\n\tint f=1;x=0;char s=getchar();\n\twhile(!isdigit(s)){if(s=='-')f=-1;s=getchar();}\n\twhile(isdigit(s)){x=x*10+s-'0';s=getchar();}\n\tx*=f;\n}\nint n,m,head[N],tot,dfn[N],low[N],stk[N],top,idx,h[N],ttt;\nstruct code{int u,v;}edge[N<<3],e[N<<3];\nint belong[N],col,dis[N],depth[N],f[N][21];\nint q;\nbool inq[N];\ninline void add(int x,int y)\n{\n\te[++tot].u=h[x];\n\te[tot].v=y;\n\th[x]=tot;\n}\ninline void ado(int x,int y)\n{\n\tedge[++ttt].u=head[x];\n\tedge[ttt].v=y;\n\thead[x]=ttt;\n}\nvoid tarjan(int x,int fa)\n{\n\tdfn[x]=low[x]=++idx;\n\tstk[++top]=x;inq[x]=true;\n\tfor(R int i=h[x];i;i=e[i].u)\n\t{\n\t\tif(e[i].v==fa)continue;\n\t\tif(!dfn[e[i].v])\n\t\t{\n\t\t\ttarjan(e[i].v,x);\n\t\t\tlow[x]=min(low[x],low[e[i].v]);\n\t\t}\n\t\telse if(inq[e[i].v])\n\t\t\tlow[x]=min(low[x],dfn[e[i].v]);\n\t}\n\tif(dfn[x]==low[x])\n\t{\n\t\tcol++;\n\t\tint now=-1;\n\t\twhile(now!=x)\n\t\t{\n\t\t\tnow=stk[top--];\n\t\t\tinq[now]=false;\n\t\t\tbelong[now]=col;\n\t\t}\n\t}\n}\nvoid dfs(int u,int fa)\n{\n\tf[u][0]=fa;\n\tdis[u]=dis[fa]+1;\n\tdepth[u]=depth[fa]+1;\n\tfor(R int i=1;(1<<i)<=depth[u];i++)\n\t\tf[u][i]=f[f[u][i-1]][i-1];\n\tfor(R int i=head[u];i;i=edge[i].u)\n\t{\n\t\tif(edge[i].v==fa)continue;\n\t\tdfs(edge[i].v,u);\t\n\t}\n}\ninline int lca(int x,int y)\n{\n\tint res=0;\n\tif(depth[x]>depth[y])swap(x,y);\n\tfor(R int i=17;i>=0;i--)\n\t\tif(depth[x]+(1<<i)<=depth[y])\n\t\t\ty=f[y][i];\n\tif(x==y)return y;\n\tfor(R int i=17;i>=0;i--)\n\t{\n\t\tif(f[x][i]==f[y][i])continue;\n\t\tx=f[x][i],y=f[y][i];\t\t\n\t}\n\treturn f[x][0];\n}\nint main()\n{\n\tin(n),in(m);\n\tfor(R int i=1,x,y;i<=m;i++)\n\t{\n\t\tin(x),in(y);\n\t\tadd(x,y),add(y,x);\n\t}\n\tfor(R int i=1;i<=n;i++)\n\t\tif(!dfn[i])tarjan(i,0);\n\tfor(R int i=1;i<=n;i++)\n\t\tfor(R int j=h[i];j;j=e[j].u)\n\t\t\tif(belong[i]!=belong[e[j].v])\n\t\t\t\tado(belong[i],belong[e[j].v]);\n\n\tdfs(belong[1],0);\n\tin(q);\n\tfor(R int x,y,la;q;q--)\n\t{\n\t\tin(x),in(y);\n\t\tx = belong[x], y = belong[y];\n\t\tla=lca(x,y);\n\t\tint ans=dis[x]+dis[y]-2*dis[la]+1;\n\t\tint size[15]={0},cnt=0;\n\t\twhile(ans)\n\t\t{\n\t\t\tsize[++cnt]=ans%2;\n\t\t\tans/=2;\n\t\t}\n\t\tfor(R int i=cnt;i>=1;i--)\n\t\t\tprintf(\"%d\",size[i]);\n\t\tputchar('\\n');\n\t}\n}\n```\n\n",
        "postTime": 1539316370,
        "uid": 87960,
        "name": "\u987ez",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2783 \u3010\u6709\u673a\u5316\u5b66\u4e4b\u795e\u5076\u5c14\u4f1a\u505a\u4f5c\u5f0a\u3011"
    },
    {
        "content": "[\u66f4\u8212\u9002\u7684\u4f53\u9a8c](https://www.luogu.org/blog/doitsmart/solution-p2783)\n\n### \u8fd9\u662f\u4e00\u9053\u975e\u5e38\u597d~~\uff08shui)~~\u7684\u9898 \n\u4e0e\u5404\u4f4d\u5927\u4f6c\u57fa\u672c\u76f8\u540c\uff1a\n\n1.\u5148\u7528Tarjan\u627e\u51fa\u56fe\u4e2d\u6240\u6709\u7684\u5f3a\u8fde\u901a\u5206\u91cf\n\n2.\u7136\u540e\u7f29\u70b9\u5e76\u4e14\u91cd\u65b0\u6784\u5efa\u56fe\n\n3.\u5f88\u663e\u7136\u6b64\u65f6\u6574\u4e2a\u56fe\u5df2\u7ecf\u662f\u4e00\u4e2a\u6811\u4e86\uff0c\u8dd1LCA\n\n4.\u4e8c\u8fdb\u5236\u8f93\u51fa\n\n**\u8fd9\u91cc\u6709\u4e00\u4e2a\u5c0f\u5c0f\u7684\u4f18\u5316\uff08\u6240\u4ee5\u53ef\u4ee5\u4e0d\u7528vector\u5b58\u8fb9\uff09**\n\n-\u8bfb\u5165\u6bcf\u6761\u8fb9\u65f6\u7528\u6570\u7ec4\u8bb0\u4e0b\n\n-\u91cd\u65b0\u6784\u5efa\u56fe\u65f6\u76f4\u63a5\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\n\n-\u68c0\u67e5\u4ed6\u4eec\u662f\u5426\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5185\n\n-\u5982\u679c\u5426\uff0c\u8fde\u8fb9\u5373\u53ef\n\n**\u91cd\u6784\u56fe\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u4e86\u4e00\u7ef4\u54e6**\n\n## code\n\n```cpp\n#include<bits/stdc++.h>\n#define N 100001\nusing namespace std;\nint n,m,tot,q,sign,top,cnt;\nint first[N<<1][2],next[N<<1][2],to[N<<1][2],dfn[N],low[N],sta[N],id[N],dep[N];\nint p[N][50],xx[N],yy[N];\nbool insta[N];\nvoid ADD(int x,int y,int w)\n{\n\tnext[++tot][w]=first[x][w];\n    to[tot][w]=y;\n    first[x][w]=tot;\n}\nvoid add(int x,int y,int w)\n{\n\tADD(x,y,w);\n    ADD(y,x,w);\n}\n////\u5f3a\u8fde\u901a\u5206\u91cf\u90e8\u5206 \nvoid DFS(int x,int fa)\n{\n    dfn[x]=low[x]=++sign;\n    sta[++top]=x;\n    insta[x]=1;\n    int k=first[x][0],u;\n    while(k)\n    {\n        u=to[k][0];\n        if(u==fa) //\u4e24\u4e2a\u78b3\u4e0d\u6210\u73af\n        {\n            k=next[k][0];\n            continue;\n        }\n        if(!dfn[u])\n        {\n            DFS(u,x);\n            low[x]=min(low[u],low[x]);\n        }\n        else if(insta[u])\n            low[x]=min(low[x],dfn[u]);\n        k=next[k][0];\n    }\n    if(low[x]==dfn[x])\n    {\n    \tcnt++;\n    \twhile (7) \n        {\n        \tint y=sta[top];\n        \ttop--;\n        \tid[y]=cnt;\n        \tif(x==y)\n            \tbreak;\n    \t}\n    }\n    return;\n}\n//\u91cd\u6784\u56fe\nvoid rebuild()\n{\n    tot=0;\n    for(int i=1;i<=m;i++)\n        if(id[xx[i]]!=id[yy[i]])\n            add(id[xx[i]],id[yy[i]],1);\n}\n//LCA\u9884\u5904\u7406\nvoid DFS2(int son,int fa)\n{\n    dep[son]=dep[fa]+1;\n    p[son][0]=fa;\n    for(int i=first[son][1];i;i=next[i][1]) \n        if(to[i][1]!=fa) \n            DFS2(to[i][1],son);\n    return;\n}\n//LCA\nint LCA(int a,int b)\n{\n    if(a==b) return a;\n    if(dep[a]>dep[b]) swap(a,b);\n    for(int i=20;i>=0;i--) \n        if(dep[p[b][i]]>=dep[a]) \n            b=p[b][i];\n    if(a==b) return a;\n    for(int i=20;i>=0;i--) \n        if(p[a][i]!=p[b][i])\n            a=p[a][i],b=p[b][i];\n    return p[a][0];\n}\n//\u8f93\u51fa\nint tmp[64];\nvoid print(int res) \n{\n    if(res==0) {puts(\"0\");return;}\n    if(res<0) {putchar('-');res=0-res;}\n    while(res) tmp[++tmp[0]]=res&1,res>>=1;\n    while(*tmp) putchar(tmp[(*tmp)--]+'0');\n    putchar('\\n');\n} \nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=m;i++) \n    {\n        cin>>xx[i]>>yy[i];\n        add(xx[i],yy[i],0);\n    }\n    for(int i=1;i<=n;i++)\n        if(!dfn[i]) DFS(i,0);\n    rebuild();\n    DFS2(1,0);\n    for(int i=1;i<=20;i++)\n        for(int j=1;j<=cnt;j++)\n            p[j][i]=p[p[j][i-1]][i-1];\n    cin>>q;\n    while(q--)\n    {\n        int a,b;\n        cin>>a>>b;\n        a=id[a];\n        b=id[b];//\u8bb0\u5f97\u4e00\u5b9a\u662f\u7f29\u5b8c\u70b9\u540e\u7684\u7f16\u53f7\uff01\uff01\n//\u6211\u88ab\u5361\u4e86n\u6b21\n        int lca=LCA(a,b),ans;\n        ans=dep[a]+dep[b]-(dep[lca]<<1)+1;\n        print(ans);\n    }\n    return 0;\n}\n```\n\n[\u5e7f\u544a](https://www.luogu.org/blog/doitsmart/#)",
        "postTime": 1532521892,
        "uid": 66784,
        "name": "BILL666",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2783 \u3010\u6709\u673a\u5316\u5b66\u4e4b\u795e\u5076\u5c14\u4f1a\u505a\u4f5c\u5f0a\u3011"
    },
    {
        "content": "## \u8fd9\u9898\u4e0d\u96beqwq  \n~~\u4f46\u662f\u5361\u4e86\u6211\u597d\u957f\u65f6\u95f4~~  \n# \u9898\u610f  \n\u7ed9\u51fa\u4e00\u5f20\u65e0\u5411\u56fe\uff0c\u6bcf\u6b21\u5220\u53bb\u4e00\u4e2ae-DCC(\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\uff09\uff0c\u91cd\u65b0\u5efa\u56fe\uff0c\u7136\u540e\u6c42\u4e24\u70b9\u6240\u5728e-DCC\u4e4b\u95f4\u8ddd\u79bb\u3002  \n# \u601d\u8def  \n\u8fd9\u9053\u9898\u7684\u9898\u610f\u975e\u5e38\u7684\u663e\u7136\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u76f4\u63a5\u6309\u7167\u9898\u610f\u505a\u4e00\u904d\u5c31\u597d\u4e86\u3002  \n\n\u6700\u540e\u6c42\u4e24\u70b9\u4e4b\u95f4\u8ddd\u79bb\u7684\u65f6\u5019\uff0c\u6c42\u4e00\u4e2aLCA\u5373\u53ef\uff0c\u7b54\u6848\u5c31\u662fd[a]+d[b]-2* d[lca\uff08a,b\uff09]+1  \n\u6240\u4ee5\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86(\u96fe  \n# \u5c0fbug  \n\u6211\u4eec\u4ea4\u4e0a\u4e86\u4ee3\u7801\uff0c\u5fc3\u6ee1\u610f\u8db3\u7684\u671f\u5f85\u7740\u53c8\u4e00\u9053\u9ed1\u9898\u7684ac\uff0c\u4f46\u662f\u7a81\u7136\u7ed3\u679c\u51fa\u73b0\uff0c\u53ea\u670973pts\u3002\u600e\u4e48\u56de\u4e8b\u554a\uff1f\uff1f\uff1f  \n\n## \u8fd9\u5c31\u662f\u672c\u9898\u89e3\u6700\u91cd\u8981\u7684\u90e8\u5206  \n\n\u8fb9\u53cc\u8054\u901a\u5206\u91cf\u6709\u6709\u4e24\u79cd\u65b9\u6cd5\uff0c\u5176\u4e2d\u4e00\u79cd\u662f\u6c42\u51fa\u6240\u6709\u5272\u8fb9\uff0c\u7136\u540e\u4f9d\u6b21\u5220\u53bb\u3002\u8fd9\u6837\u5269\u4e0b\u7684\u56fe\u5c31\u88ab\u5206\u6210\u4e86\u5f88\u591a\u5355\u72ec\u7684\u90e8\u5206\uff0c\u6bcf\u4e00\u4e2a\u90e8\u5206\u5c31\u662f\u4e00\u4e2ae-DCC  \n\n\u53e6\u4e00\u79cd\u65b9\u6cd5\u5219\u548c\u6709\u5411\u56fe\u7684\u7f29\u70b9\u76f8\u4f3c\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u6808\u8bb0\u5f55\u641c\u7d22\u6811\u4e0a\u7684\u70b9\uff0c\u5f53low[x]=dfn[x]\u7684\u65f6\u5019\u5c06stack\u91cc\u7684\u70b9\u4f9d\u6b21\u9000\u51fa\uff0c\u4e00\u76f4\u9000\u5230x\uff0c\u6211\u4eec\u4fbf\u6c42\u51fa\u4e86\u4e00\u4e2ae-DCC  \n\n\u6ce8\u610f\uff1a\u6700\u4e0b\u65b9\u9898\u9762\u91cc\u8bf4\u4e24\u4e2a\u70b9\u4e0d\u5220\u53bb\u6240\u4ee5\u5f53\u6211\u4eectarjan\u7684\u65f6\u5019\u9047\u5230x\u7684\u7236\u4eb2\u5c31\u76f4\u63a5continue,\u6309\u8fd9\u4e2a\u601d\u8def\u6cd5\u4e8c\u53ef\u4ee5\u8fc7\u3002  \n\n\u4f46\u662f\u6cd5\u4e00\u5373\u4f7f\u52a0\u4e0a\u8fd9\u4e2a\u5224\u65ad\u4e5f\u8fc7\u4e0d\u4e86\uff0c\u6240\u4ee5\u8fd8\u662f\u4e0d\u5199\u6cd5\u4e00\u6bd4\u8f83\u597d(\u96fe\n# 73ptsCODE\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#include <cmath>\nusing namespace std;\n#define N 100500\n#define M 500500\nint n,m,head[N],num=1,dfn[N],low[N],cnt,bridge[M],he[N],sy[N],numm,t,f[N][50],d[N];\nqueue<int> q;\nstruct node\n{\n    int next,to;\n}edge[M*2],tu[M*2];\nvoid addedge(int u,int v)\n{\n    edge[++num]=(node){head[u],v};\n    head[u]=num;\n}\nvoid newaddedge(int u,int v)\n{\n    tu[++numm]=(node){he[u],v};\n    he[u]=numm;\n}\nvoid tarjan(int x,int in_edge)\n{\n    low[x]=dfn[x]=++cnt;\n    for(int i=head[x];i;i=edge[i].next)\n    {\n        int v=edge[i].to;\n        if(!dfn[v])\n        {\n            tarjan(v,i);\n            low[x]=min(low[x],low[v]);\n            if(dfn[x]<low[v])bridge[i]=bridge[i^1]=1;\n        }\n        else if(i!=(in_edge^1))low[x]=min(low[x],dfn[v]);\n    }\n}\nvoid jb(int x,int syy)\n{\n    for(int i=head[x];i;i=edge[i].next)\n    {\n        int v=edge[i].to;\n        if(bridge[i]||sy[v])continue;\n        sy[v]=syy;\n        jb(v,syy);\n    }\n}\nvoid bfs()\n{\n    q.push(1);\n    d[1]=1;\n    while(!q.empty())\n    {\n        int u=q.front();\n        q.pop();\n        for(int i=he[u];i;i=tu[i].next)\n        {\n            int v=tu[i].to;\n            if(d[v])continue;\n            d[v]=d[u]+1;\n            f[v][0]=u;\n            for(int k=1;k<=t;k++)f[v][k]=f[f[v][k-1]][k-1];\n            q.push(v);\n        }\n    }\n}\nint lca(int a,int b)\n{\n    if(d[a]<d[b])swap(a,b);\n    for(int i=t;i>=0;i--)if(d[f[a][i]]>=d[b])a=f[a][i];\n    if(a==b)return a;\n    for(int i=t;i>=0;i--)if(f[a][i]!=f[b][i])a=f[a][i],b=f[b][i];\n    return f[a][0];\n}\nvoid xs(int shu)\n{\n    int answer[500000],kkk=0;\n    while(shu)\n    {\n        answer[++kkk]=shu%2;\n        shu/=2;\n    }\n    for(int i=kkk;i>=1;i--)printf(\"%d\",answer[i]);\n    printf(\"\\n\");\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        int u,v;\n        scanf(\"%d%d\",&u,&v);\n        addedge(u,v);addedge(v,u);\n    }\n    for(int i=1;i<=n;i++)if(!dfn[i])tarjan(i,0);\n    cnt=0;\n    for(int i=1;i<=n;i++)if(!sy[i])sy[i]=++cnt,jb(i,cnt);\n    for(int i=2;i<=num;i++)if(sy[edge[i].to]!=sy[edge[i^1].to])newaddedge(sy[edge[i].to],sy[edge[i^1].to]);\n    t=(int)(log(cnt)/log(2))+1;\n    bfs();\n    int tot;\n    scanf(\"%d\",&tot);\n    for(int i=1;i<=tot;i++)\n    {\n        int a,b;\n        scanf(\"%d%d\",&a,&b);\n        a=sy[a];b=sy[b];\n        int lcab=lca(a,b);\n        xs(d[a]+d[b]-2*d[lcab]+1);\n    }\n    return 0;\n}\n```     \n\n\n------------\n\n\n# 100ptsCODE\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#include <cmath>\nusing namespace std;\n#define N 100500\n#define M 500500\nint stack[N],top,ttt,n,m,head[N],num=1,dfn[N],low[N],cnt,bridge[M],he[N],sy[N],numm,t,f[100050][50],d[N];\nqueue<int> q;\nstruct node\n{\n    int next,to;\n}edge[M*2],tu[M*2];\nvoid addedge(int u,int v)\n{\n    edge[++num]=(node){head[u],v};\n    head[u]=num;\n}\nvoid newaddedge(int u,int v)\n{\n    tu[++numm]=(node){he[u],v};\n    he[u]=numm;\n}\nvoid tarjan(int x,int fa)\n{\n    low[x]=dfn[x]=++cnt;\n    stack[++top]=x;\n    for(int i=head[x];i;i=edge[i].next)\n    {\n        int v=edge[i].to;\n        if(v==fa)continue;\n        if(!dfn[v])\n        {\n            tarjan(v,x);\n            low[x]=min(low[x],low[v]);\n        }\n        else low[x]=min(low[x],dfn[v]);\n    }\n    if(low[x]==dfn[x])\n    {\n        sy[x]=++ttt;\n        while(stack[top]!=x)sy[stack[top]]=ttt,top--;\n        top--;\n    }\n}\nvoid jb(int x)\n{\n    sy[x]=cnt;\n    for(int i=head[x];i;i=edge[i].next)\n    {\n        int v=edge[i].to;\n        if(bridge[i]||sy[v])continue;\n        jb(v);\n    }\n}\nvoid bfs()\n{\n    q.push(1);\n    d[1]=1;\n    while(!q.empty())\n    {\n        int u=q.front();\n        q.pop();\n        for(int i=he[u];i;i=tu[i].next)\n        {\n            int v=tu[i].to;\n            if(d[v])continue;\n            d[v]=d[u]+1;\n            f[v][0]=u;\n            for(int k=1;k<=t;k++)f[v][k]=f[f[v][k-1]][k-1];\n            q.push(v);\n        }\n    }\n}\nint lca(int a,int b)\n{\n    if(d[a]<d[b])swap(a,b);\n    for(int i=t;i>=0;i--)if(d[f[a][i]]>=d[b])a=f[a][i];\n    if(a==b)return a;\n    for(int i=t;i>=0;i--)if(f[a][i]!=f[b][i])a=f[a][i],b=f[b][i];\n    return f[a][0];\n}\nvoid xs(int shu)\n{\n    int answer[500000],kkk=0;\n    while(shu)\n    {\n        answer[++kkk]=shu%2;\n        shu/=2;\n    }\n    for(int i=kkk;i>=1;i--)printf(\"%d\",answer[i]);\n    printf(\"\\n\");\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        int u,v;\n        scanf(\"%d%d\",&u,&v);\n        addedge(u,v);addedge(v,u);\n    }\n    for(int i=1;i<=n;i++)if(!dfn[i])tarjan(i,0);\n    cnt=0;\n   // for(int i=1;i<=n;i++)if(!sy[i]){++cnt;jb(i);}\n    for(int i=2;i<=num;i++)if(sy[edge[i].to]!=sy[edge[i^1].to])newaddedge(sy[edge[i].to],sy[edge[i^1].to]);\n    t=32;\n    bfs();\n    int tot;\n    scanf(\"%d\",&tot);\n    for(int i=1;i<=tot;i++)\n    {\n        int a,b;\n        scanf(\"%d%d\",&a,&b);\n        a=sy[a];b=sy[b];\n        int lcab=lca(a,b);\n        xs(d[a]+d[b]-2*d[lcab]+1);\n    }\n    return 0;\n}\n```\n",
        "postTime": 1565097043,
        "uid": 73983,
        "name": "Infiltrator",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2783 \u3010\u6709\u673a\u5316\u5b66\u4e4b\u795e\u5076\u5c14\u4f1a\u505a\u4f5c\u5f0a\u3011"
    },
    {
        "content": "\u8eab\u4e3a\u4e00\u4e2a\u849f\u84bb\uff0c\u7adf\u7136\u7b2c\u4e00\u6b21\u6ca1\u770b\u9898\u89e3AC\u4e86\u4e00\u9053~~(\u4f2a)~~\u9ed1\u9898\u3002\n\n**\u5206\u6790\u9898\u5e72\uff1a**\uff08\u5df2\u7ecf\u4e86\u89e3\u4e86\u9898\u610f&&\u660e\u767d\u4ec0\u4e48\u53eb\u53cc\u8fde\u901a\u5206\u91cf\u7684dalao\u53ef\u4ee5\u8df3\u8fc7\u6b64\u90e8\u5206\uff09\n\n\u5148\u770b\u4e00\u770b\u9898\u76ee\uff0c\u6069\uff0c\u4e00\u4e0b\u5c31\u770b\u89c1\u4e86\u9898\u76ee\u4e2d\u7684**\u201c\u6240\u6709\u7684\u73af\u72b6\u78b3\u90fd\u53d8\u6210\u4e86\u4e00\u4e2a\u78b3\u201d**\uff08\u5212\u91cd\u70b9\uff09\uff0c\u8054\u60f3\u5230\u4e86\u5565\uff1f\u6ca1\u9519\uff0ctarjan\u7f29\u70b9\uff01\u4f46\u662f\u518d\u7a0d\u5fae\u770b\u770b\u9898\u76ee\u5c31\u4f1a\u53d1\u73b0\u4e8b\u60c5\u6709\u4e00\u70b9\u4e0d\u5bf9\u52b2\uff1a\u8fd9\u662f\u65e0\u5411\u56fe\u5440\uff0c\u90a3\u4e48\u6574\u4e2a\u56fe\u96be\u9053\u4e0d\u5c31\u662f\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5417\uff1f\n\u7136\u800c\uff0c\u8fd9\u4e16\u95f4\u8fd8\u5b58\u5728\u4e00\u79cd\u4e1c\u897f\u53eb\u505a**\u53cc\u8fde\u901a\u5206\u91cf**\uff08\u4e5f\u8bb8\u662f\u6211\u592a\u849f\u4e86\uff0c\u4eca\u5929\u624d\u77e5\u9053\u6709\u8fd9\u4e1c\u897f\uff09\n\n\u5173\u4e8e\u53cc\u8fde\u901a\u5206\u91cf\uff1a\n\u53cc\u8fde\u901a\u5206\u91cf\u5206\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u548c\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u4e24\u79cd\u3002\u82e5\u4e00\u4e2a\u65e0\u5411\u56fe\u4e2d\u7684\u53bb\u6389\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\uff08\u4e00\u6761\u8fb9\uff09\u90fd\u4e0d\u4f1a\u6539\u53d8\u6b64\u56fe\u7684\u8fde\u901a\u6027\uff0c\u5373\u4e0d\u5b58\u5728\u5272\u70b9\uff08\u6865\uff09\uff0c\u5219\u79f0\u4f5c\u70b9\uff08\u8fb9\uff09\u53cc\u8fde\u901a\u56fe\u3002\u4e00\u4e2a\u65e0\u5411\u56fe\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6781\u5927\u70b9\uff08\u8fb9\uff09\u53cc\u8fde\u901a\u5b50\u56fe\u79f0\u4f5c\u6b64\u65e0\u5411\u56fe\u7684\u70b9\uff08\u8fb9\uff09\u53cc\u8fde\u901a\u5206\u91cf\u3002\u6c42\u53cc\u8fde\u901a\u5206\u91cf\u53ef\u7528Tarjan\u7b97\u6cd5\u3002\n\n\t\t\t\t\t\t\t\t\t\t\t    \u4ee5\u4e0a\u6765\u81ea\u4e07\u80fd\u7684\u767e\u5ea6\u767e\u79d1\u3002\n\n\u90a3\u4e48\u663e\u7136\uff08\u539f\u8c05\u6211\u7528\u8fd9\u4e48\u6076\u52a3\u7684\u8bcd\uff09\uff0c\u8fd9\u91cc\u662f\u70b9\u53cc\u8054\u901a\u5206\u91cf\u3002\u81f3\u4e8e\u505a\u6cd5\uff0c\u7b49\u4e0b\u518d\u4ee3\u7801\u91cc\u4f1a\u6709\u8be6\u89e3\u7684\u3002\n\n\u626f\u7684\u6709\u70b9\u8fdc\u4e86\uff0c\u8ba9\u6211\u4eec\u518d\u770b\u4e0b\u4e00\u4e2a\u5173\u952e\u53e5\uff1a**\u6307\u5b9a\u591a\u7ec4\u78b3\uff0c\u6c42\u51fa\u5b83\u4eec\u4e4b\u95f4\u603b\u5171\u6709\u591a\u5c11\u78b3**\uff0c\u90a3\u4e48\u8fd9\u5c31\u5f88\u660e\u663e\u662f\u6c42\u56fe\u4e2d\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u70b9\u4e2a\u6570\u4e86\uff08\u518d\u770b\u4e00\u770b\u6837\u4f8b\uff0c\u5c31\u53ef\u4ee5\u5224\u65ad\u8fd9\u91cc\u4e24\u70b9\u4e4b\u95f4\u7684\u70b9\u4e2a\u6570\u662f\u5305\u62ec\u4e86\u90a3\u4e24\u4e2a\u70b9\u672c\u8eab\u7684\uff09\u3002\n\nOK\uff0c\u90a3\u4e48\u672c\u9898\u9898\u610f\u5373\u4e3a\uff1a\u6c42\u51fa\u4e00\u4e2a\u5c06\u6240\u6709\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u7f29\u70b9\u4e4b\u540e\u7684\u56fe\u4e2d\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u70b9\u4e2a\u6570\uff08\u5305\u62ec\u5176\u672c\u8eab\uff09\u3002\n\n**\u7b97\u6cd5\u89e3\u6790\uff1a**\n\n\u521a\u521a\u5728\u5206\u6790\u9898\u5e72\u7684\u90e8\u5206\u5df2\u7ecf\u63d0\u5230\u4e86\u70b9\u53cc\u8fde\u901a\u5206\u91cf\uff0c\u90a3\u6211\u5c31\u76f4\u63a5\u4ece\u7f29\u70b9\u4e4b\u540e\u5f00\u59cb\u8bb2\u8d77\u4e86\u3002\n\n\u7ecf\u8fc7\u4e86\u7f29\u70b9\u4e4b\u540e\u7684\u56fe\u5fc5\u5b9a\u662f\u4e00\u68f5\u6811\uff0c\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u600e\u4e48\u6c42\u6811\u4e0a\u7684\u4e24\u70b9\u4e4b\u95f4\u7684\u70b9\u4e2a\u6570\u5462\uff1femmmm\uff0c\u7206\u641c\uff1fTLE\u5c06\u4f1a\u7b49\u7740\u4f60\u7684\u3002\u90a3\u4e48\u8fd9\u9898\u5c31\u6ca1\u529e\u6cd5\u4e86\u5417\uff1f\n\n~~\u4e0d\u5b58\u5728\u7684\uff0c\u4e0d\u7136\u6211\u5199\u8fd9\u7bc7\u9898\u89e3\u5e72\u561b\u3002~~\u7a81\u7136\u60f3\u5230\u4e86\u524d\u51e0\u5929\u521a\u521a\u590d\u4e60\u8fc7\u4e86\u7684[P1967\u8d27\u8f66\u8fd0\u8f93](https://www.luogu.org/problemnew/show/P1967)\u3002\u8fd9\u9898\u662f\u7528LCA\u6c42\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u5927\u7684 \u8def\u5f84\u4e2d\u6743\u503c\u7684\u6700\u5c0f\u503c\uff0c\u4e0e\u8fd9\u9053\u9898\u6709\u4e00\u70b9\u70b9\u6cbe\u8fb9\u3002\u90a3\u4e48\u8fd9\u9053\u9898\u53ef\u4e0d\u53ef\u4ee5\u7528LCA\u641e\u4e8b\u5462\uff1f\u786e\u5b9e\u662f\u53ef\u4ee5\u7684\u3002\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u5148\u6c42\u51fa\u4e24\u70b9\u76f4\u63a5\u7684lca\uff0c\u7136\u540e\u70b9\u6570\u5c31\u662fdeep[x]-deep[lca]+deep[y]-deep[lca]+1\u4e86\uff0c\u5bf9\u5427\u3002\n\n\u597d\u7684\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u8fd9\u9898\u7684\u601d\u8def\u5c31\u51fa\u6765\u4e86\uff1a\u9996\u5148\u5c06\u6240\u6709\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u8fdb\u884c\u7f29\u70b9\uff0c\u518d\u7528LCA\u6c42\u51fa\u4e24\u70b9\u4e4b\u95f4\u7684\u70b9\u4e2a\u6570\u5c31\u884c\u4e86\uff0c~~\u597d\u50cf\u771f\u7684\u5f88\u7b80\u5355\uff1f~~\n\n**\u4ee3\u7801\u5c55\u793a\uff1a**\n\n```cpp\n#include <bits/stdc++.h>\n\n#define MAXN 500500\n#define re register\n\nusing namespace std;\n\nstruct edge\n{\n    int to,next;\n}e[MAXN<<1];\n\nint first[MAXN],x[MAXN],y[MAXN],book[MAXN];//x,y\u8bb0\u5f55\u8fb9\uff08\u7528\u4e8e\u7f29\u70b9\u91cd\u5efa\u8fb9\uff09\uff0cbook\u7528\u4e8eLCA\u521d\u59cb\u5316 \nint f[MAXN][21],deep[MAXN];\nint low[MAXN],dfn[MAXN],co[MAXN]; \nint conum,n,m,tot,cnt;\n\nstack <int> p;\n\ninline int read()//\u8bfb\u4f18 \n{\n    int res=0;re bool f=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9')\n    {\n        if(ch=='-') f=0;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9')\n    {\n        res=(res<<3)+(res<<1)+(ch&15);\n        ch=getchar();\n    }\n    return f?res:-res;\n}\n\ninline void addedge(int u,int v)\n{\n    e[++tot].to=v;\n    e[tot].next=first[u];\n    first[u]=tot;\n}\n\ninline void tarjan(int u,int fa)  //tarjan \n{\n    low[u]=dfn[u]=++cnt;\n    p.push(u);\n    for(re int i=first[u];i;i=e[i].next)\n    {\n        int v=e[i].to;\n        if(v==fa) continue; //\u4e0e\u666e\u901atarjan\u552f\u4e00\u7684\u533a\u522b\uff0c\u5982\u679c\u80fd\u4e0d\u7ecf\u8fc7\u7236\u4eb2\u8282\u70b9\u4f7f\u5f97low[u]==dfn[u]\uff0c\u90a3\u4e48\u5c31\u662f\u70b9\u53cc\u8fde\u901a\u5206\u91cf \n        //\u5176\u4ed6\u90e8\u5206\u5c31\u4e0d\u7528\u89e3\u91ca\u4e86\u5427\uff0c\u6bd5\u7adf\u6562\u505a\u9ed1\u9898\u7684\u4eba\u4e00\u822c\u90fd\u662fdalao(\u6211\u5f53\u7136\u4e0d\u662f) \n        if(!dfn[v])\n        {\n            tarjan(v,u);\n            low[u]=min(low[u],low[v]);\n        }\n        else if(!co[v]) low[u]=min(low[u],dfn[v]);\n    }\n    if(low[u]==dfn[u])\n    {\n        ++conum;\n        while(p.top()^u)//p.top!=u \n        {\n            co[p.top()]=conum;\n            p.pop();\n        }\n        co[p.top()]=conum;\n        p.pop();\n    }\n}\n\ninline void rebuild()//\u7f29\u70b9\u52a0\u91cd\u5efa\u8fb9 \n{\n    tot=0;\n    memset(first,0,sizeof first);\n    for(int i=1;i^m;++i)//i!=m\n        if(co[x[i]]^co[y[i]]) addedge(co[x[i]],co[y[i]]),addedge(co[y[i]],co[x[i]]);\n    //\u5e94\u8be5\u5f88\u597d\u7406\u89e3\u5427 \n}\n\ninline void init(int u,int fa)//\u7ecf\u5178\u7684LCA\u7684\u521d\u59cb\u5316 \n{\n    if(book[u]) return;\n    book[u]=1;\n    deep[u]=deep[fa]+1;\n    for(re int i=1;i^21;++i)//i<=20 \n        f[u][i]=f[f[u][i-1]][i-1];\n    for(re int i=first[u];i;i=e[i].next)\n    {\n        int v=e[i].to;\n        if(v==fa) continue;\n        f[v][0]=u;\n        init(v,u);\n    }\n}\n\ninline int LCA(int a,int b)//\u7ecf\u5178\u7684LCA \n{\n    if(deep[a]<deep[b]) swap(a,b);\n    for(re int i=20;~i;--i)//i>=0\n        if(deep[f[a][i]]>=deep[b])\n            a=f[a][i];\n    if(a==b) return a;\n    for(re int i=20;~i;--i)//i>=0\n        if(f[a][i]^f[b][i])\n            a=f[a][i],b=f[b][i];\n    return f[a][0];\n}\n\ninline void print(int x) //\u4e8c\u8fdb\u5236\u8f93\u51fa \n{\n    if(!x) return;\n    print(x>>1);\n    printf(\"%d\",x&1);\n}\n\nint main()\n{\n    int t;\n    n=read(),m=read();\n    ++n;++m;//\u65b9\u4fbf\u4e0b\u9762\u7684i^m\uff0ci^n\u7b49\u64cd\u4f5c \uff08tips\uff1aa^b <==> a!=b\uff09 \n    for(re int i=1;i^m;++i)\n    {\n        x[i]=read(),y[i]=read();\n        addedge(x[i],y[i]);\n        addedge(y[i],x[i]);//\u8bb0\u5f97\u662f\u65e0\u5411\u56fe \n    }\n    for(re int i=1;i^n;++i) if(!dfn[i]) tarjan(i,i); //tarjan\u627e\u70b9\u53cc\u8fde\u901a\u5206\u91cf \n    rebuild();//\u7f29\u70b9\u91cd\u65b0\u5efa\u8fb9 \n    ++conum;//\u540c\u6837\u662f\u65b9\u4fbf\u4e0b\u9762\u7684i^conum\u64cd\u4f5c \n    \n    for(re int i=1;i^conum;++i) if(!book[i]) init(i,i);//\u5b9e\u9645\u4e0a\u53ef\u4ee5\u4e0d\u7528\u8fd9\u6837\uff0c\u56e0\u4e3a\u786e\u5b9a\u4e86\u662f\u8fde\u901a\u56fe \n    //init(1,1); //\u76f4\u63a5\u8fd9\u6837\u5c31\u884c\u4e86\n\t \n    t=read();\n    for(re int i=0;i^t;++i)\n    {\n        int x=read(),y=read();\n        int lca=LCA(co[x],co[y]);//\u8bb0\u5f97\u662fco[x]\u4e0eco[y]\uff0c\u800c\u4e0d\u662fx,y\uff0c\u4e0d\u7136\u4f1a\u51fa\u4e8b\u7684 \n        print(deep[co[x]]-deep[lca]+deep[co[y]]-deep[lca]+1);//\u4e8c\u8fdb\u5236\u8f93\u51fa\n        printf(\"\\n\");\n    }\n    return 0;\n}\n```",
        "postTime": 1538410424,
        "uid": 112008,
        "name": "\u6211\u6ca1\u6709\u5f00\u6302",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2783 \u3010\u6709\u673a\u5316\u5b66\u4e4b\u795e\u5076\u5c14\u4f1a\u505a\u4f5c\u5f0a\u3011"
    },
    {
        "content": "## \u8c01\u8bf4\u4e0d\u7528vector\u8fc7\u4e0d\u53bb\uff1f\n\n\u6211\u5c31\u7528\u666e\u901a\u7684\u524d\u5411\u661f\u5b58\u56fe\u8fc7\u4e86\uff0c\u6ca1\u7528vector\n\n\u601d\u8def\u57fa\u672c\u4e0a\u8ddf\u5927\u5bb6\u90fd\u5dee\u4e0d\u591a\u3002\u5148\u7528tarjan\u8dd1\u51fa\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u7136\u540e\u7f29\u70b9\u3002\u7f29\u70b9\u5c31\u662f\u91cd\u65b0\u5efa\u4e00\u5f20\u56fe\uff0c\u65b0\u56fe\u7684\u7ed3\u70b9\u7f16\u53f7\u5bf9\u5e94\u539f\u6765\u7684\u56fe\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7f16\u53f7\u3002\u518d\u5177\u4f53\u4e00\u70b9\u5c31\u662f\uff0c\u5bf9\u4e8e\u539f\u56fe\u4e2d\u7684\u6bcf\u6761\u8fb9(u, v)\uff0c\u5982\u679cu\u548cv\u5206\u5c5e\u4e0d\u540c\u7684\u5f3a\u8fde\u901a\u5206\u91cf\uff08\u5373sccno[u] != sccno[v]\uff09\uff0c\u90a3\u4e48\u5411\u65b0\u56fe\u4e2d\u52a0\u4e00\u6761\u8fb9(sccno[u], sccno[v])\u3002\n\n\u65b0\u56fe\u5fc5\u7136\u662f\u4e00\u68f5\u6811\uff0c\u95ee\u9898\u5c31\u53d8\u4e3a\u6c42\u6811\u4e0a\u4e24\u70b9\u4e4b\u95f4\u6709\u591a\u5c11\u4e2a\u70b9\u3002\u5982\u679c\u6811\u6839\u7684dep\u8bbe\u4e3a0\uff0c\u90a3\u4e48ans=dep[sccno[x]] + dep[sccno[y]] - 2 * dep[lca] + 1.\n\n```cpp\n// C++11\n#include <cctype>\n#include <cstdio>\n#include <climits>\n#include <algorithm>\n#include <stack>\n\n#define il inline\n#define gc getchar\n#define rep(i, a, b) for (int i = a; i <= b; ++i)\n#define rrep(i, a, b) for (int i = a; i >= b; --i)\n\ntemplate <class T> il void read(T& t) {\n    int f = 0, c = gc(); t = 0;\n    while (!isdigit(c)) f |= c == '-', c = gc();\n    while (isdigit(c)) t = t * 10 + c - 48, c = gc();\n    f ? t = -t : 0;\n}\ntemplate <class T, class... Args> il void read(T& t, Args&... args) {\n    read(t);\n    read(args...);\n}\n\nconst int maxn = 5e4 + 100;\ntypedef int arrT[maxn << 1];\narrT v, head, next, low, pre, sccno;\nint dfs_clock, scccnt;\nint n, m, tot = -1;\nstd::stack<int> s;\n\nvoid dfs1(int x, int fa) {\n    pre[x] = low[x] = ++dfs_clock;\n    s.push(x);\n    for (int i = head[x]; i != -1; i = next[i]) {\n        int y = v[i];\n        if (y != fa) {\n            if (!pre[y]) {\n                dfs1(y, x);\n                low[x] = std::min(low[x], low[y]);\n            } else if (!sccno[y]) {\n                low[x] = std::min(low[x], pre[y]);\n            }\n        }\n    }\n    if (low[x] == pre[x]) {\n        ++scccnt;\n        while (0207) {\n            int y = s.top();\n            s.pop();\n            sccno[y] = scccnt;\n            if (x == y)\n                break;\n        }\n    }\n}\nil void find_scc() { rep(i, 1, n) if (!pre[i]) dfs1(i, -1); }\nil void ae(int x, int y) {\n    v[++tot] = y;\n    next[tot] = head[x];\n    head[x] = tot;\n}\nil void init() { rep(i, 1, n) head[i] = -1; }\n\narrT v2, head2, next2, dep;\nint anc[maxn][50];\n\nil void ae2(int x, int y) {\n    v2[++tot] = y;\n    next2[tot] = head2[x];\n    head2[x] = tot;\n}\nil void rebuild() {\n    tot = -1;\n    rep(i, 1, scccnt) head2[i] = -1;\n    rep(i, 1, n) for (int j = head[i]; j != -1; j = next[j]) if (sccno[i] != sccno[v[j]])\n        ae2(sccno[i], sccno[v[j]]);\n}\nvoid dfs2(int x) {\n    dep[x] = dep[anc[x][0]] + 1;\n    rep(i, 1, 20) anc[x][i] = anc[anc[x][i - 1]][i - 1];\n    for (int i = head2[x]; i != -1; i = next2[i])\n        if (v2[i] != anc[x][0]) {\n            anc[v2[i]][0] = x;\n            dfs2(v2[i]);\n        }\n}\nil int getLCA(int x, int y) {\n    if (x == y) return x;\n    if (dep[x] < dep[y]) std::swap(x, y);\n    rrep(i, 20, 0) if (dep[anc[x][i]] >= dep[y]) x = anc[x][i];\n    if (x == y) return x;\n    rrep(i, 20, 0) if (anc[x][i] != anc[y][i]) x = anc[x][i], y = anc[y][i];\n    return anc[x][0];\n}\n\nvoid printInBinary(int ans) {\n    if (!ans) return;\n    printInBinary(ans >> 1);\n    printf(\"%d\", ans & 1);\n}\n\nint main() {\n    read(n, m);\n    init();\n    rep(i, 1, m) {\n        int x, y;\n        read(x, y);\n        ae(x, y);\n        ae(y, x);\n    }\n    find_scc();\n    rebuild();\n    dfs2(1);\n    int q;\n    read(q);\n    rep(i, 1, q) {\n        int x, y;\n        read(x, y);\n        int lca = getLCA(sccno[x], sccno[y]);\n        int ans = dep[sccno[x]] + dep[sccno[y]] - (dep[lca] << 1) + 1;\n        printInBinary(ans);\n        printf(\"\\n\");\n    }\n    return 0;\n}\n```",
        "postTime": 1530431231,
        "uid": 72071,
        "name": "GKxx",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2783 \u3010\u6709\u673a\u5316\u5b66\u4e4b\u795e\u5076\u5c14\u4f1a\u505a\u4f5c\u5f0a\u3011"
    },
    {
        "content": "\u8fd9\u771f\u662f\u4e00\u9053\u6c34\u79ef\u5206\u7684\u597d\u9898(\u54a6\u4e3a\u4ec0\u4e48\u6211\u53d1\u7684\u6240\u6709\u9898\u89e3\u90fd\u662f\u6c34\u79ef\u5206\u7684\u597d\u9898)\n\n\u5176\u5b9e\u4ed4\u7ec6\u60f3\u60f3,\u8fd9\u9053\u9898\u5e76\u6ca1\u6709\u4ec0\u4e48\u5f88\u96be\u7684\u5730\u65b9\n\n\u628a\u73af\u7f29\u6210\u70b9\u7528\u53cc\u8054\u901a\u5206\u91cf(\u53ea\u8981\u6539\u4e00\u4e0b\u5f3a\u8fde\u901a\u5206\u91cf\u5c31\u597d\u4e86),\u7136\u540e\u5efa\u68f5\u6811\u8dd1LCA\u5c31\u597d\u4e86\n\n\u6446\u4e24\u4e2a\u677f\u5b50\u4e0a\u53bb,\u4f60\u5c31\u53ef\u4ee5\u83b7\u5f9792\u5206(\u56e0\u4e3a\u7b2c\u56db\u4e2a\u70b9\u8fc7\u4e0d\u4e86)\n\n\u7528vector\u5b58\u8fb9\u5c31\u53ef\u4ee5\u8fc7\u4e86(\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u4f46\u662fBeNoble\u5927\u4f6c\u53d1\u73b0\u4e86\u8fd9\u4e00\u70b9%%%%)\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<string>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#include<cmath>\n#define siz 10010\n#define minn(a,b) (a<b?a:b)\nusing namespace std;\n//\u5f3a\u8fde\u901a\u5206\u91cf\u90e8\u5206 \nint n,m,s,t,pos,top,cnt,corcnt;\nint first[siz],dfn[siz],low[siz],cor[siz],corsiz[siz],st[siz];\nbool in[siz];\nvector <int> node[siz*10];\nvoid tajan(int p,int form) {\n    dfn[p]=low[p]=++cnt;\n    st[++top]=p,in[p]=1;\n    for(int i=0;i<node[p].size();++i)\n     if(node[p][i]!=form) {\n         if(!dfn[node[p][i]]){\n            tajan(node[p][i],p);\n            low[p]=minn(low[node[p][i]],low[p]);\n         } else if(in[node[p][i]]) low[p]=minn(low[p],dfn[node[p][i]]);\n     }\n    int j;\n    if(low[p]==dfn[p]) {\n        corcnt++;\n        do {\n            j=st[top--],in[j]=0; \n            cor[j]=corcnt,corsiz[corcnt]++;\n        }while(j!=p);\n    }\n}\n\n//\u91cd\u5efa\u56fe \nint rfirst[siz];\nvector <int> rnode[siz*10];\nvoid rebuild() {\n    pos=0;\n    for(int i=1;i<=n;++i)\n     for(int j=0;j<node[i].size();++j)\n       if(cor[i]!=cor[node[i][j]]) rnode[cor[i]].push_back(cor[node[i][j]]);\n}\n\n//LCA\u90e8\u5206\nint q;\nint u,v,dep[siz],T[siz][21];\nvoid dfs(int p,int fa,int depth){\n    dep[p]=depth,T[p][0]=fa;\n    for(int i=0;i<rnode[p].size();++i)\n     if(rnode[p][i]!=fa) dfs(rnode[p][i],p,depth+1);\n}\nint LCA(int u,int v) {\n    if(dep[u]<dep[v]) swap(u,v);\n    int d=dep[u]-dep[v];\n    for(int i=20;i>=0;--i)\n      if(d&(1<<i)) u=T[u][i];\n    if(u==v) return u;\n    for(int i=20;i>=0;--i)\n      if(T[u][i]!=T[v][i]) u=T[u][i],v=T[v][i];\n    return T[u][0];\n}\n\n//\u8f93\u51fa\u90e8\u5206\nint tmp[64];\nvoid print(int res) {\n    if(res==0) { puts(\"0\"); return ;}\n    if(res<0) { putchar('-');res=0-res; }\n    while(res) tmp[++tmp[0]]=res&1,res>>=1;\n    while(*tmp) putchar(tmp[(*tmp)--]+'0');\n    putchar('\\n');\n} \nint main(){\n\n//    freopen(\".in\",\"r\",stdin);\n//    freopen(\".out\",\"w\",stdout);\n    scanf(\"%d%d\",&n,&m);\n    while(m--) {\n        scanf(\"%d%d\",&s,&t);\n        node[s].push_back(t);\n        node[t].push_back(s);\n    }\n    for(int i=1;i<=n;++i)\n     if(!dfn[i]) tajan(i,0);\n    rebuild();\n    dfs(1,0,0);\n    for(int j=1;j<=20;++j)\n     for(int i=1;i<=corcnt;++i)\n      T[i][j]=T[T[i][j-1]][j-1];\n    scanf(\"%d\",&q);\n    for(int i=1;i<=q;++i) {\n        scanf(\"%d%d\",&u,&v);\n        int lca=LCA(cor[u],cor[v]);\n        print(dep[cor[u]]+dep[cor[v]]-(dep[lca]<<1)+1);\n    }\n    return 0;\n}\n```\n\u4ee3\u7801\u98ce\u683c\u6bd4\u8f83\u8be1\u5f02\u4f60\u4eec\u53ef\u4ee5\u590d\u5236\u7136\u540eAstyle\u4e00\u4e0b\n",
        "postTime": 1510295372,
        "uid": 18416,
        "name": "Nepenthe",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2783 \u3010\u6709\u673a\u5316\u5b66\u4e4b\u795e\u5076\u5c14\u4f1a\u505a\u4f5c\u5f0a\u3011"
    },
    {
        "content": "\u989d\uff0c\u5927\u90e8\u5206\u4eba\u90fd\u7528\u7684$vector$\u8fc7\u4e86\u7b2c4\u4e2a\u70b9\uff0c\u4f46\u662f\u6211\u597d\u50cf\u5c31\u662f\u524d\u5411\u661f\u8fc7\u7684\u3002\u3002\u3002\n\n\u90a3\u5c31\u7ed9\u5927\u5bb6\u4e00\u4e2a\u53c2\u8003\u7684\u8303\u4f8b\u5427\uff0c\u987a\u4fbf\u52a0\u4e0a\u4e00\u4e2a\u9ed1\u79d1\u6280\u2014\u2014$namespace$\n\n\u8fd9\u662f\u4e00\u4e2a\u597d\u4e1c\u897f\uff0c\u6bd4\u5982\u4f60\u5728\u7701\u9009\u573a\u4e0a\uff0c\u60f3\u6253\u66b4\u529b\uff0c\u4f46\u662f\u80fd\u6253\u4e0d\u540c\u7684\u90e8\u5206\u5206\u7684\u66b4\u529b\uff0c\u5c31\u53ef\u4ee5\u7528$namespace$\u628a\u5404\u4e2a\u66b4\u529b\u62ec\u8d77\u6765\uff0c\u9632\u6b62\u53d8\u91cf\u540d\u7684\u91cd\u590d\u518d\u53bb\u8c03\u8bd5\u800c\u803d\u8bef\u4e86\u65f6\u95f4\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u7528\u5904\uff1a\u5f53\u4f7f\u7528\u4e86\u4e0d\u540c\u7684\u7b97\u6cd5\uff0c\u4f46\u662f\u53c8\u5bb9\u6613\u5f04\u6df7\u6dc6\u65f6\uff08\u6bd4\u5982$LCA$\u4e0e$Tarjan$\u5f3a\u8fde\u901a\u90fd\u6709$DFS$\uff09\uff0c\u5c31\u53ef\u4ee5\u5206\u522b\u628a\u8fd9\u4e24\u4e2a\u7b97\u6cd5\u62ec\u8d77\u6765\uff0c\u9632\u6b62\u53d8\u91cf\u540d\u7684\u91cd\u590d\u3002\n\n\u7136\u540e\u662f\u7b97\u6cd5\u3002\n\n\u6211\u4eec\u770b\u9898\uff0c\u8981\u6c42\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u7f29\u70b9\u540e\u6c42\u4e24\u70b9\u95f4\u8ddd\u79bb\u3002\n\n\u6211\u4eec\u53d1\u73b0\u7f29\u5b8c\u70b9\u540e\u7684\u56fe\u662f\u68f5\u6811\uff0c\u90a3\u4e48\u4e24\u70b9\u95f4\u8ddd\u79bb\u5c31\u53ef\u4ee5\u7528$LCA$\u89e3\u51b3\u4e86\uff1a\n\n$dis=deep[x]+deep[y]-deep[LCA(x,y)]* 2+1$\n\n\u7136\u540e\u7684\u95ee\u9898\u5c31\u662f\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u600e\u4e48\u6c42\u3002\n\n\u8ddf\u5f3a\u8fde\u901a\u5206\u91cf\u5dee\u4e0d\u591a\uff0c\u53ea\u8981\u4fee\u6539\u4fee\u6539\u5c31\u597d\u4e86\u3002\n\n\u5269\u4e0b\u7684\uff0c\u770b\u4ee3\u7801\u5427\u3002\u3002\u3002\n\n\u9644\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#define MAXN 100010\nusing namespace std;\nint n,m,q,c=1;\nint head[MAXN],deep[MAXN],son[MAXN],size[MAXN],fa[MAXN],top[MAXN],colour[MAXN];\nstruct Tree{\n\tint next,to;\n}a[MAXN<<1];\ninline int read(){\n\tint date=0,w=1;char c=0;\n\twhile(c<'0'||c>'9'){if(c=='-')w=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){date=date*10+c-'0';c=getchar();}\n\treturn date*w;\n}\ninline void add_tree(int x,int y){\n\ta[c].to=y;a[c].next=head[x];head[x]=c++;\n}\nnamespace Tarjan{//Tarjan\u70b9\u53cc\u8fde\u901a\u5206\u91cf\n\tint c=1,top=1,d=1,s=0;\n\tint head[MAXN],cstack[MAXN],deep[MAXN],low[MAXN];\n\tstruct node{\n\t    int next,to;\n\t}a[MAXN];\n\tinline void add(int x,int y){\n\t\ta[c].to=y;a[c].next=head[x];head[x]=c++;\n\t\ta[c].to=x;a[c].next=head[y];head[y]=c++;\n\t}\n\tvoid work(int x,int f){\n\t\tdeep[x]=low[x]=d++;\n\t\tcstack[top++]=x;\n\t\tfor(int i=head[x];i;i=a[i].next){\n\t\t\tint v=a[i].to;\n\t\t\tif(v==f)continue;\n\t\t\tif(!deep[v]){\n\t\t\t\twork(v,x);\n\t\t\t\tlow[x]=min(low[x],low[v]);\n\t\t\t}\n\t\t\telse if(!colour[v])\n\t\t\tlow[x]=min(low[x],deep[v]);\n\t\t}\n\t\tif(low[x]==deep[x]){\n\t\t\ts++;\n\t\t\tdo{\n\t\t\t\tcolour[cstack[top-1]]=s;\n\t\t\t}while(cstack[--top]!=x);\n\t\t}\n\t}\n\tvoid init(){\n\t\tint x,y;\n\t\tn=read();m=read();\n\t\tfor(int i=1;i<=m;i++){\n\t\t\tx=read();y=read();\n\t\t\tadd(x,y);\n\t\t}\n\t\tfor(int i=1;i<=n;i++)if(!deep[i])work(i,0);\n\t    for(int i=1;i<=n;i++)\n\t    for(int j=head[i];j;j=a[j].next){\n\t\t    int v=a[j].to;\n\t\t    if(colour[i]!=colour[v])add_tree(colour[i],colour[v]);\n\t    }\n\t}\n}\nvoid dfs1(int rt){//LCA\u6211\u7528\u7684\u662f\u6811\u94fe\u5256\u5206\n\tson[rt]=0;size[rt]=1;\n\tfor(int i=head[rt];i;i=a[i].next){\n\t\tint will=a[i].to;\n\t\tif(!deep[will]){\n\t\t\tdeep[will]=deep[rt]+1;\n\t\t\tfa[will]=rt;\n\t\t\tdfs1(will);\n\t\t\tsize[rt]+=size[will];\n\t\t\tif(size[will]>size[son[rt]])son[rt]=will;\n\t\t}\n\t}\n}\nvoid dfs2(int rt,int f){\n\ttop[rt]=f;\n\tif(son[rt])dfs2(son[rt],f);\n\tfor(int i=head[rt];i;i=a[i].next){\n\t\tint will=a[i].to;\n\t\tif(will!=fa[rt]&&will!=son[rt])\n\t\tdfs2(will,will);\n\t}\n}\nint LCA(int x,int y){\n\twhile(top[x]!=top[y]){\n\t\tif(deep[top[x]]<deep[top[y]])swap(x,y);\n\t\tx=fa[top[x]];\n\t}\n\tif(deep[x]>deep[y])swap(x,y);\n\treturn x;\n}\ninline void write(int x){//\u8f93\u51fa\u4e8c\u8fdb\u5236\n    if(!x)return;\n    write(x>>1);\n    printf(\"%d\",x&1);\n}\nvoid work(){\n\tint x,y;\n\tq=read();\n\twhile(q--){\n\t\tx=colour[read()];y=colour[read()];//\u5df2\u7ecf\u7f29\u5b8c\u4e86\u70b9\uff0c\u6240\u4ee5\u662f\u7f29\u5b8c\u70b9\u540e\u7684\u7f16\u53f7\n\t\tint lca=LCA(x,y);\n\t\twrite(deep[x]+deep[y]-deep[lca]*2+1);\n\t\tprintf(\"\\n\");\n\t}\n}\nvoid init(){\n\tdeep[1]=1;\n\tdfs1(1);\n\tdfs2(1,1);\n}\nint main(){//\u4e3b\u51fd\u6570So easy!\n\tTarjan::init();\n\tinit();\n\twork();\n\treturn 0;\n}\n\n```",
        "postTime": 1531917410,
        "uid": 49998,
        "name": "\u65af\u5fb7\u54e5\u5c14\u6469",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2783 \u3010\u6709\u673a\u5316\u5b66\u4e4b\u795e\u5076\u5c14\u4f1a\u505a\u4f5c\u5f0a\u3011"
    },
    {
        "content": "**\u9898\u610f\u5206\u6790**\n\n\u7ed9\u51fa\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u8981\u6c42\u5c06\u8fb9\u53cc\u8054\u901a\u5206\u91cf\u7f29\u70b9\uff0c\u5e76\u7ed9\u51fa\u591a\u4e2a\u8be2\u95ee\u6c42\u7f29\u70b9\u540e\u6811\u4e0a\u7684\u94fe\u957f\u3002\n\n\u770b\u5230\u9898\u89e3\u533a\u548c\u8ba8\u8bba\u533a\u5f88\u591a\u4eba\u5728\u8ba8\u8bba\u7f29\u7684\u662fe-DCC\u8fd8\u662fv-DCC\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0b\u4e0b\u9762\u8fd9\u5f20\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ogdrp5qh.png)\n\n\u53ef\u4ee5\u770b\u51fa\uff0c\u52a0\u7c97\u7684\u8fd9\u51e0\u4e2a\u70b9(3,6,7,8,9)\u663e\u7136\u5c5e\u4e8e\u540c\u4e00\u4e2ae-DCC,\u4f46\u4e0d\u5c5e\u4e8e\u540c\u4e00\u4e2av-DCC\u3002\u800c\u6839\u636e\u9898\u610f\uff0c\u8fd9\u51e0\u4e2a\u70b9\u5e94\u8be5\u8981\u7f29\u6210\u540c\u4e00\u4e2a\u70b9\uff0c\u56e0\u6b64\u7f29\u7684\u662fe-DCC\u3002\n\n**\u601d\u8def\u5206\u6790**\n\n\u663e\u7136\u5730\uff0c\u5148\u7f29\u70b9\uff0c\u7136\u540e\u6c42\u94fe\u957f\u3002\u6c42\u94fe\u957f\u7684\u65b9\u6cd5\u5c31\u5f88\u591a\u4e86\uff0c\u4e0d\u8fc7\u57fa\u672c\u4e0a\u90fd\u8981\u5148\u6c42\u51faLCA\uff0c\u7136\u540e\u901a\u8fc7\u6df1\u5ea6\u6570\u7ec4$d$\u6765\u6c42\u51fa\u94fe\u957f\u3002\u56e0\u6b64\u80fd\u6c42LCA\u7684\u7b97\u6cd5\u90fd\u53ef\u4ee5\u7528\u6765\u6c42\u94fe\u957f\uff0c\u672c\u6587\u4ee3\u7801\u4f7f\u7528tarjan\u6c42LCA\uff08~~\u600e\u4e48\u53c8\u662ftarjan~~\uff09\n\n**\u5177\u4f53\u5b9e\u73b0**\n\n\u65e0\u803b\u5730\u6302\u4e00\u6ce2\u535a\u5ba2\u94fe\u63a5\uff1a[LCA\u8be6\u89e3](https://www.cnblogs.com/TEoS/p/11376616.html)\n\n\u5bf9\u4e8e\u5728\u540c\u4e00\u4e2ae-DCC\u91cc\u7684\u8282\u70b9\uff0c\u53ef\u4ee5\u76f4\u63a5\u7279\u5224\uff0c\u663e\u7136\uff0c\u7b54\u6848\u4e3a1\uff0c\u53ef\u4ee5\u4e0d\u7528\u518d\u53bb\u6c42\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u70b9\uff0c\u8f93\u5165\u6570\u636e\u4e2d\u53ef\u80fd\u4f1a\u6709\u91cd\u8fb9\uff0c\u8fd9\u4e2a\u91cd\u8fb9\u4f1a\u5bfc\u81f4\u539f\u672c\u4e0d\u5728\u540c\u4e00\u4e2ae-DCC\u91cc\u7684\u8282\u70b9\u88ab\u8bef\u5224\u4e3a\u5728\u540c\u4e00\u4e2ae-DCC\u91cc\u800c\u5bfc\u81f4WA\u3002\u5bf9\u4e8e\u91cd\u8fb9\u7684\u5904\u7406\uff0c\u5176\u5b83\u9898\u89e3\u63d0\u4f9b\u4e86\u4e00\u4e9b\u4e0d\u9519\u7684\u65b9\u6cd5\uff0c\u5927\u5bb6\u53ef\u4ee5\u53c2\u8003\u3002\u5f53\u7136\uff0c\u5bf9\u4e8e\u5bf9\u539f\u7a0b\u5e8f~~\u61d2\u5f97~~\u4e0d\u60f3\u6709\u592a\u5927\u6539\u52a8\u7684\u540c\u5b66\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u6570\u636e\u8303\u56f4\u5f88\u5c0f\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u5f00\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u5224\u65ad\u4e24\u4e2a\u70b9\u4e4b\u95f4\u662f\u5426\u5df2\u6709\u8fb9\uff0c\u82e5\u5df2\u6709\u8fb9\u5c31\u4e0d\u518d\u8fde\uff0c\u4ee5\u8fbe\u5230\u53bb\u9664\u91cd\u8fb9\u7684\u76ee\u7684\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6$O(n^2)$\uff0c\u52c9\u5f3a\u5361\u8fc7\u3002\n\n\u5bf9\u4e8e\u8f93\u51fa\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u6808\u5b58\u50a8\u7b54\u6848\uff0c\u6bcf\u6b21\u53d6$x$\u4e8c\u8fdb\u5236\u4e0b\u7684\u6700\u540e\u4e00\u4f4d\uff0c\u5373$x\\%2$\uff0c\u7136\u540e\u9664\u4e8c\uff0c\u76f4\u5230\u6700\u9ad8\u4f4d\uff0c\u7136\u540e\u5012\u5e8f\u8f93\u51fa\u3002\u6ce8\u610f\u7279\u52240\u7684\u60c5\u51b5\u3002\n\n\u8fd8\u6709\u7ec6\u8282\u7684\u5904\u7406\u53ef\u4ee5\u770b\u4ee3\u7801\u6ce8\u91ca\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<stack>\n#include<vector>\n#define y(i) query[x][i].first\n#define id(i) query[x][i].second\n#define ano ((i-1)^1)+1\nusing namespace std;\nconst int N=1e4+100,M=5e4+100;\nint n,m,k,tot,num,ctot,cnt;\nint head[N],ver[M<<1],Next[M<<1];\nint ch[N],cv[M<<1],cn[M<<1];\nint low[N],dfn[N],v[N],d[N],fa[N],c[N],ans[M];\nbool p[M<<1],pp[N][N];\nvector<pair<int,int> > query[M];\nstack<int> s;\nvoid add(int x,int y)\n{\n\tver[++tot]=y,Next[tot]=head[x],head[x]=tot;\n\tver[++tot]=x,Next[tot]=head[y],head[y]=tot;\n}//\u539f\u56fe\u52a0\u8fb9\nvoid addc(int x,int y)\n{\n\tcv[++ctot]=y,cn[ctot]=ch[x],ch[x]=ctot;\n}//\u65b0\u56fe\u52a0\u8fb9\nvoid Add(int x,int y,int id)\n{\n\tquery[x].push_back(make_pair(y,id));\n\tquery[y].push_back(make_pair(x,id));\n}//\u52a0\u5165\u8be2\u95ee\nint get(int a)\n{\n\treturn fa[a]==a?a:fa[a]=get(fa[a]);\n}//\u8def\u5f84\u538b\u7f29\u5e76\u67e5\u96c6\nvoid tarjan(int x,int fa)\n{\n\tdfn[x]=low[x]=++num;\n\tfor(int i=head[x];i;i=Next[i])\n\t{\n\t\tint y=ver[i];\n\t\tif(!dfn[y])\n\t\t{\n\t\t\ttarjan(y,i);\n\t\t\tlow[x]=min(low[x],low[y]);\n\t\t\tif(low[y]>dfn[x])\n\t\t\t\tp[i]=p[ano]=1;\n\t\t}\n\t\telse\n\t\t\tif(ano!=fa)\n\t\t\t\tlow[x]=min(low[x],dfn[y]);\n\t}\n}//tarjan\u6c42e-DCC\nvoid dfs(int x)\n{\n\tc[x]=cnt;\n\tfor(int i=head[x],y;i;i=Next[i])\n\t\tif(!c[y=ver[i]] && !p[i])\n\t\t\tdfs(y);\n}//e-DCC\u7f29\u70b9\nvoid lca(int x,int f)\n{\n\tv[x]=1;d[x]=d[f]+1;\n\tfor(int i=ch[x],y;i;i=cn[i])\n\t\tif(!v[y=cv[i]])\n\t\t{\n\t\t\tlca(y,x);\n\t\t\tfa[y]=x;\n\t\t}\n\tfor(int i=0;i<query[x].size();i++)\n\t\tif(v[y(i)]==2)\n\t\t\tans[id(i)]=d[x]+d[y(i)]-2*d[get(y(i))]+1;//\u8ba1\u7b97\u7b54\u6848\uff0cget(y(i))\u5373\u4e3aLCA(x,y(i))\n\tv[x]=2;\n}//tarjan\u6c42LCA\u53ca\u94fe\u957f\nvoid print(int x)\n{\n\tif(!x)\n\t{\n\t\tputs(\"0\");\n\t\treturn ;\n\t}//\u7279\u52240\n\twhile(s.size())\n\t\ts.pop();\n\twhile(x)\n\t\ts.push(x%2),x>>=1;//\u6bcf\u6b21\u53d6\u4e8c\u8fdb\u5236\u4e0b\u6700\u540e\u4e00\u4f4d\n\twhile(s.size())\n\t\tprintf(\"%d\",s.top()),s.pop();//\u5012\u5e8f\u8f93\u51fa\n\tputs(\"\");\n}//\u8f93\u51fa\u7b54\u6848\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1,x,y;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tif(!pp[x][y] && !pp[y][x])\n\t\tadd(x,y),pp[x][y]=pp[y][x]=1;//\u5224\u91cd\u8fb9\n\t}//\u539f\u56fe\u52a0\u8fb9\n\tfor(int i=1;i<=n;i++)\t\n\t\tif(!dfn[i])\n\t\t\ttarjan(i,0);//tarjan\u6c42e-DCC\n\tfor(int i=1;i<=n;i++)\n\t\tif(!c[i])\n\t\t\tcnt++,dfs(i);//e-DCC\u7f29\u70b9\n\tfor(int i=1,x,y;i<=tot;i++)\n\t\tif(c[x=ver[i]]!=c[y=ver[ano]])\n\t\t\taddc(c[x],c[y]);//\u65b0\u56fe\u52a0\u8fb9\n\tscanf(\"%d\",&k);\n\tfor(int i=1,x,y;i<=k;i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tif(c[x]==c[y])\n\t\t\tans[i]=1;//\u7279\u5224\n\t\telse\n\t\t\tAdd(c[x],c[y],i);\n\t}//\u52a0\u5165\u8be2\u95ee\n\tfor(int i=1;i<=n;i++)\n\t\tfa[i]=i;//\u5e76\u67e5\u96c6\u521d\u59cb\u5316\n\tlca(c[1],0);//tarjan\u6c42LCA\u53ca\u94fe\u957f\n\tfor(int i=1;i<=k;i++)\n\t\tprint(ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1573519103,
        "uid": 91534,
        "name": "TEoS",
        "ccfLevel": 6,
        "title": "P2783 \u6709\u673a\u5316\u5b66\u4e4b\u795e\u5076\u5c14\u4f1a\u505a\u4f5c\u5f0a"
    },
    {
        "content": "# \u54b3\u54b3\uff0c\u4eba\u751f\u7b2c\u4e00\u9053\u7684\u9ed1\u9898\n\n\u5f88\u663e\u7136\u662f\u4e00\u4e2a\u7f29\u70b9+\u5e76\u67e5\u96c6+\u6811\u4e0a\u500d\u589eLCA+\u5341\u8f6c\u4e8c\n\n\u6240\u4ee5......\u6240\u4ee5\u4f3c\u4e4e\u771f\u6ca1\u5565\u597d\u8bf4\u7684\uff1f\n\n\u8bb0\u5f97\u5224\u4e2a\u91cd\u8fb9\u4e0d\u7136\u53ea\u670972\u5206\uff08tarjan\u4f1a\u628a\u6709\u91cd\u8fb9\u7684\u4e24\u4e2a\u70b9\u7f29\u6210\u4e00\u4e2a\uff09\uff0c\u7136\u540e\u6c42\u4e24\u70b9\u8ddd\u79bb\u4e4b\u540e\u518d+1\u624d\u662f\u78b3\u7684\u6570\u91cf\n\n\u597d\u4e86\u771f\u7684\u6ca1\u4e86\uff0c\u5c31\u8fd9\u6837\u5427\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint head[100005],size,N,M,dfn[10005],low[10005],indx;\nint col[10005],cnt,u[50005],v[50005],f[10005],lg2[10005]={-1};\nint fa[10005][20],dep[10005];\nbool vis[100005];\n\nstruct node{\n\tint nxt,to;\n}edge[100005];\n\nvoid adde(int from,int to){\n\tedge[size].nxt=head[from];\n\tedge[size].to=to;\n\thead[from]=size++;\n}\n\nstd::stack<int>s;\n\nvoid tarjan(int cur,int pa){\n\tlow[cur]=dfn[cur]=++indx;s.push(cur);\n\tfor(int i=head[cur];i!=-1;i=edge[i].nxt){\n\t\tif(vis[i])continue;\n\t\tint v=edge[i].to;\n\t\tif(v==pa)continue;\n\t\tif(!dfn[v]){\n\t\t\tvis[i]=vis[i^1]=1;\n\t\t\ttarjan(v,cur);\n\t\t\tvis[i]=vis[i^1]=0;\n\t\t\tlow[cur]=min(low[cur],low[v]);\n\t\t}\n\t\telse low[cur]=min(low[cur],dfn[v]);\n\t}\n\tif(low[cur]==dfn[cur]){\n\t\tint top;cnt++;\n\t\tdo{\n\t\t\ttop=s.top();s.pop();\n\t\t\tcol[top]=cnt;\n\t\t}while(top!=cur);\n\t}\n}\n\nint find(int x){\n\tif(f[x]!=x)\n\tf[x]=find(f[x]);\n\treturn f[x];\n}\n\nvoid prepare(int cur,int pa){\n\tdep[cur]=dep[pa]+1;fa[cur][0]=pa;\n\tfor(int k=1;k<=lg2[dep[cur]];k++)fa[cur][k]=fa[fa[cur][k-1]][k-1];\n\tfor(int i=head[cur];i!=-1;i=edge[i].nxt){\n\t\tint v=edge[i].to;if(v==pa)continue;\n\t\tprepare(v,cur);\n\t}\n}\n\nint LCA(int u,int v){\n\tif(dep[u]<dep[v])swap(u,v);\n\twhile(dep[u]>dep[v])u=fa[u][lg2[dep[u]-dep[v]]];\n\tif(u==v)return u;\n\tfor(int k=lg2[dep[u]];k>=0;k--){\n\t\tif(fa[u][k]==fa[v][k])continue;\n\t\tu=fa[u][k];v=fa[v][k];\n\t}\n\treturn fa[u][0];\n}\n\nint print(int x){\n\tstd::stack<int>s;\n\twhile(x){\n\t\ts.push(x&1);\n\t\tx>>=1;\n\t}\n\twhile(!s.empty()){\n\t\tprintf(\"%d\",s.top());\n\t\ts.pop();\n\t}\n}\n\nint main(){\n\t//freopen(\"in.txt\",\"r\",stdin);\n\tmemset(head,-1,sizeof(head));\n\tscanf(\"%d%d\",&N,&M);\n\tfor(int i=1;i<=M;i++){\n\t\tscanf(\"%d%d\",&u[i],&v[i]);\n\t\tadde(u[i],v[i]);adde(v[i],u[i]);\n\t}\n\tfor(int i=1;i<=N;i++)if(!dfn[i])tarjan(i,0);\n\tmemset(edge,0,sizeof(edge));\n\tmemset(head,-1,sizeof(head));\n\tsize=0;for(int i=1;i<=cnt;i++){\n\t\tlg2[i]=lg2[i/2]+1;f[i]=i;\n\t}\n\tfor(int i=1;i<=M;i++)\n\tif(col[u[i]]!=col[v[i]]&&find(col[u[i]])!=find(col[v[i]]))\n\tadde(col[u[i]],col[v[i]]),adde(col[v[i]],col[u[i]]),f[find(col[u[i]])]=find(col[v[i]]);\n\tprepare(1,0);int tot;\n\tscanf(\"%d\",&tot);\n\twhile(tot--){\n\t\tint a,b;\n\t\tscanf(\"%d%d\",&a,&b);\n\t\ta=col[a],b=col[b];\n\t\tprint(dep[a]+dep[b]-2*dep[LCA(a,b)]+1);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1553305209,
        "uid": 109396,
        "name": "Uniecho1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2783 \u3010\u6709\u673a\u5316\u5b66\u4e4b\u795e\u5076\u5c14\u4f1a\u505a\u4f5c\u5f0a\u3011"
    },
    {
        "content": "## \u6ca1\u4eba\u79bb\u7ebf\u7528Tarjan\u6c42lca\u561b??\n#### \u53ef\u4ee5\u7701\u5f88\u591a\u65f6\u95f4\n#### ----\u8fd9\u6837\u5b58\u8fb9\u5c31\u53ef\u4ee5\u7528\u94fe\u5f0f\u524d\u5411\u661f\u55bd~\n###### ~~\u8c01\u90fd\u77e5\u9053\u7f29\u70b9+LCA~~\n---\n##### \u5176\u5b9e,\u6211\u6ca1\u7528\u53cc\u5f3a\u8fde\u901a\u5206\u91cf.\u8fc7\u8fb9\u65f6\u7ed9\u53e6\u5916\u4e00\u4e2a\u8fb9\u987a\u4fbf\u6253\u4e2a\u6807\u8bb0\u5c31\u884c\u4e86~,\u9632\u6b62\u91cd\u590d\u8d70\n### \u8fd9\u6837\u641e:\n\u4f60\u8fc7\u4e86edge[i],\n\u90a3\u5c31\u6253edge[(i-1)^1+1]\u7684\u6807\u8bb0.\n##### \u795e\u9a6c\u610f\u601d\u5462?\n\u8bf4\u767d\u4e86\u5c31\u662f\u8fc7\u5355\u6570\u8fb9\u6253\u53cc\u6570\u8fb9\u7684\u6807\u8bb0,\u8fc7\u53cc\u6570\u8fb9\u6253\u5355\u6570\u8fb9\u7684\u6807\u8bb0;\n(\u56e0\u4e3a\u5b58\u8fb9\u65f6\u662f\u4e00\u5bf9\u4e00\u5bf9\u5b58\u7684)\n\n---\n\u5176\u4ed6\u5185\u5bb9\u770b\u770b\u697c\u4e0b\u5927\u4f6c\u7684\u5427,\u8fd9\u91cc\u4e0d\u518d\u591a\u8bf4\n\n---\n```cpp\n#include<iostream>\n#include<map>\n#include<cstdlib>\n#include<cstring>\n#include<vector>\n#include<stack>\n#include<cstdio>\nusing namespace std;\n#define N 10010\ninline int read(){//\u5feb\u8bfb,\u56e0\u4e3a\u6570\u636e\u592a\u591a\u5566~\n\tint x=0;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9')c=getchar();\n\twhile(c>='0'&&c<='9'){\n\t    x=(x<<3)+(x<<1)+c-'0';c=getchar();\n\t}\n\treturn x;\n}\nint n,m,cnt=0,num=0,tot=0,q,ans[N<<8],f[N],dep[N];\nint head[N],dfn[N],low[N],vis[N],color[N],x[N<<4],y[N<<4];\n//STL\u5927\u6cd5\u771f\u597d\u7528\nstack<int> st;\nvector<pair<int,int> > vec[N<<3];\nmap<pair<int,int>,int> mp;\nstruct Edge{\n\tint to,nxt,use;//use\u5c31\u662f\u6807\u8bb0\n}edge[N<<4];\nvoid add(int a,int b){\n\tcnt++;\n\tedge[cnt].use=0;\n\tedge[cnt].to=b;\n\tedge[cnt].nxt=head[a];\n\thead[a]=cnt;\n}\nvoid Tarjan(int u){\n\tst.push(u);\n\tdfn[u]=low[u]=++num;\n\tvis[u]=1;\n\tfor(int i=head[u];i;i=edge[i].nxt){\n\t\tif(edge[i].use)continue;\n\t\tint v=edge[i].to;\n\t\tedge[((i-1)^1)+1].use=1;\n\t\tif(!dfn[v]){\n\t\t\tTarjan(v);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}\n\t\telse if(vis[v]){\n\t\t\tlow[u]=min(low[u],dfn[v]);\n\t\t}\n\t}\n\tif(dfn[u]==low[u]){\n\t\tint t=0;\n\t\ttot++;\n\t\twhile(t!=u){\n\t\t\tvis[st.top()]=0;\n\t\t\tcolor[st.top()]=tot;\n\t\t\tt=st.top();\n\t\t\tst.pop();\n\t\t}\n\t}\n}\n//\u79bb\u7ebf\u6c42Tarjan\u8981\u7528\u5230\u5e76\u67e5\u96c6\nint getf(int x){\n\tif(f[x]==x)return x;\n\treturn f[x]=getf(f[x]);\n}\nvoid merge(int x,int y){\n\tint r1,r2;\n\tr1=getf(x),r2=getf(y);\n\tif(r1!=r2){\n\t\tf[r2]=r1;\n\t}\n}\nvoid Deal(int u,int fa){\n\tdep[u]=dep[fa]+1;\n\tfor(int i=head[u];i;i=edge[i].nxt){\n\t\tif(edge[i].use)continue;\n\t\tint v=edge[i].to;\n\t\tedge[((i-1)^1)+1].use=1;\n\t\tif(v==fa)continue;\n\t\tDeal(v,u);\n\t}\n}\nvoid Tarjan2(int u,int fa){//HERE,\u91cd\u70b9,\u79bb\u7ebfLCA\n\tfor(int i=head[u];i;i=edge[i].nxt){\n\t\tif(edge[i].use)continue;\n\t\tint v=edge[i].to;\n\t\tedge[((i-1)^1)+1].use=1;\n\t\tif(v==fa)continue;\n\t\tTarjan2(v,u);\n\t\tmerge(u,v);\n\t}\n\tvis[u]=1;\n\tfor(int i=0;i<vec[u].size();i++){\n\t\tint v=vec[u][i].first;\n\t\tif(vis[v]){\n\t\t\tans[vec[u][i].second]=dep[u]+dep[v]-2*dep[getf(v)]+1;\n\t\t}\n\t}\n}\nvoid print(int x){\n\tif(x==0)return;\n\tprint(x>>1);\n\tcout<<(x&1);\n}\nint main(){\n\tn=read();m=read();\n\tfor(int i=1;i<=m;i++){\n\t\tint u,v;\n\t\tu=read(),v=read();\n\t\tif(mp[make_pair(u,v)])continue;//\u7528map\u53bb\u91cd,\u5426\u5219\u4f1aWA\u51e0\u4e2a\u70b9\n\t\tmp[make_pair(u,v)]=mp[make_pair(v,u)]=1;\n\t\tx[i]=u,y[i]=v;\n\t\tadd(u,v);add(v,u);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(!dfn[i])Tarjan(i);\n\t}\n\tcnt=0;\n\tmemset(head,0,sizeof(head));\n\tmemset(edge,0,sizeof(edge));\n\tmemset(vis,0,sizeof(vis));//\u75af\u72c2memset,\u7701\u70b9\u7a7a\u95f4\n\tfor(int i=1;i<=m;i++){\n\t\tif(color[x[i]]!=color[y[i]]){\n\t\t\tadd(color[x[i]],color[y[i]]);\n\t\t\tadd(color[y[i]],color[x[i]]);\n\t\t}\n\t}\n\tmemset(x,0,sizeof(x));\n\tmemset(y,0,sizeof(y));\n\tfor(int i=1;i<=n;i++)f[i]=i;\n\tq=read();\n\tfor(int i=1;i<=q;i++){\n\t\tx[i]=read(),y[i]=read();\n\t\tvec[color[x[i]]].push_back(make_pair(color[y[i]],i));\n\t\tvec[color[y[i]]].push_back(make_pair(color[x[i]],i));\n\t}\n\tDeal(1,0);\n\tfor(int i=1;i<=2*m;i++)edge[i].use=0;\n\tvis[1]=1;\n\tTarjan2(1,0);\n\tfor(int i=1;i<=q;i++){\n\t\tprint(ans[i]);\n\t\tcout<<endl;\n\t}\n\treturn 0;\n}\n\n\n```\n\u8f6c\u4e8c\u8fdb\u5236\u65f6\u6211\u8bd5\u4e86\u4e00\u4e0bitoa()\u51fd\u6570~~\u4e0d\u77e5\u9053\u7684\u8bdd\u627e\u5ea6\u5a18~~,\u52a0\u4e86<ctdlib>,\u53ef\u60dcCE,\u53ea\u80fd\u624b\u52a8\u8f6c.\n  \n# ~~\u672c\u9752\u86d9\u7b2c\u4e8c\u6b21AC\u9ed1\u9898,\u5471~~~~\n#### \u6709\u95ee\u9898\u7684\u95ee\u6211\u54e6~\u79c1\u4fe1\u4e5f\u53ef\u4ee5\n~~\u672c\u9752\u86d9\u53ea\u662f\u4e2a\u6e23\u6e23,\u6b22\u8fce\u5927\u4f6c\u83dc\u6211~~",
        "postTime": 1549373305,
        "uid": 100285,
        "name": "Froggy",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2783 \u3010\u6709\u673a\u5316\u5b66\u4e4b\u795e\u5076\u5c14\u4f1a\u505a\u4f5c\u5f0a\u3011"
    },
    {
        "content": "####  **\u770b\u5927\u5bb6\u90fd\u5199\u7684tarjan\u53cc\u8fde\u901a+\u500d\u589eLCA\uff0c\u6211\u5c31\u53d1\u4e00\u7bc7\u53ccTarjan\uff08Tarjan\u53cc\u8fde\u901a+Tarjan_LCA\uff09\u7684\u9898\u89e3\u5427\u3002**\n\n\u9996\u5148\u6211\u4eec\u770b\u770b\u9898\uff0c\u9898\u4e3b\u8981\u67093\u4e2a\u95ee\u9898\u6709\u5f85\u6211\u4eec\u53bb\u89e3\u51b3\n\n1.\u5c06\u78b3\u73af\u7f29\u6210\u4e00\u4e2a\u70b9\n\n2.\u6c42\u4e24\u70b9\u4e4b\u4e2d\u70b9\u7684\u4e2a\u6570\n\n3.\u8f93\u51fa2\u8fdb\u5236\u8868\u793a\n\n\u95ee\u9898\u4e00\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7Tarjan\u5272\u8fb9\u6c42\u51fa\u56fe\u4e2dDCC\u7136\u540e\u7f29\u70b9\u91cd\u5efa\u8fb9\u6765\u89e3\u51b3\uff0c\n\n\u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\uff1a\n------------\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nlong long n,m,q;\nbool bridge[1000010];\nlong long num,dfn[1000010],low[1000010];\nlong long c[1000010],dcc;\n//ci\u8868\u793a\u70b9\u6240\u5728\u53cc\u8fde\u901a\u5206\u91cf\u7684\u7f16\u53f7\nstruct node{\n\tlong long to,next;\n}edge[1000010],edge_c[1000010];\n//edge\u4e3a\u7f29\u70b9\u524d\u7684\u56fe\u7684\u50a8\u5b58\uff0cedge_c\u4e3a\u7f29\u70b9\u540e\u7684\u56fe\u3002\n\nlong long first[1000010],first_c[1000010],cnt=1,cnt_c;\nvoid add(long long u,long long v){\n\tedge[++cnt].to = v;\n\tedge[cnt].next = first[u];\n\tfirst[u] = cnt;\n}\nvoid add_c(long long u,long long v){\n\tedge_c[++cnt_c].to = v;\n\tedge_c[cnt_c].next = first_c[u];\n\tfirst_c[u] = cnt_c;\n}\n\nvoid TJ_C(long long x,long long in){\n\tdfn[x] = low[x] = ++num;\n\tfor(long long i = first[x];i;i = edge[i].next){\n\t\tlong long y = edge[i].to ;\n\t\tif(!dfn[y]){\n\t\t\tTJ_C(y,i);\n\t\t\tlow[x] = min(low[x],low[y]);\n\t\t\tif(low[y]>dfn[x]){\n\t\t\t\tbridge[i] = bridge[i^1]=1;\n\t\t\t}\n\t\t}\n\t\telse if(i!=(in^1))low[x]=min(low[x],dfn[y]);\n\t}\n}\n//tarjan\u7684\u5272\u8fb9\u5224\u5b9a\u6cd5\u5219\n\nvoid dfs(long long x){\n\tc[x] = dcc;\n\tfor(long long i =first[x];i;i=edge[i].next){\n\t\tlong long y = edge[i].to;\n\t\tif(c[y]||bridge[i])continue;\n\t\tdfs(y);\n\t}\n}\n//\u7f29\u70b9\u64cd\u4f5c\nint main(){\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(long long i = 1; i <= m; i++){\n\t\tlong long x,y;\n\t\tscanf(\"%lld%lld\",&x,&y);\n\t\tadd(x,y);add(y,x);\n\t}//\u90bb\u63a5\u8868\u5efa\u8fb9\n    \n\tscanf(\"%lld\",&q);\n\tfor(long long i = 1; i <= n; i++)if(!dfn[i])TJ_C(i,0);\n\tfor(long long i = 1; i <= n; i++)if(!c[i]){dcc++;dfs(i);}\n    \n\tfor(long long i = 2; i <=cnt;i++){\n\t\t\tlong long y = edge[i].to,x = edge[i^1].to;\n\t\t\tif(c[x] == c[y])continue;\n\t\t\tadd_c(c[x],c[y]);\n\t\t}\n    //\u4f7f\u7528\u5f02\u6216\u64cd\u4f5c\uff0c\u4e00\u6b21\u6027\u5904\u74062\u4e2a\u70b9\n    \n}\n```\n\u7136\u540e\u95ee\u9898\u4e00\u5c31\u53ef\u4ee5\u89e3\u51b3\u4e86\uff0c\u81f3\u4e8e\u95ee\u9898\u4e8c\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\uff0c\u4e00\u4e2a\u65e0\u5411\u65e0\u73af\u56fe\u4e0d\u5c31\u662f\u4e00\u9897\u6811\u5417\uff1f\u81f3\u4e8e2\u70b9\u4e2d\u70b9\u7684\u4e2a\u6570\u5c31\u662f\u4e24\u70b9\u8ddd\u79bb\u52a0\u4e00\uff0c\u4e5f\u5c31\u662f\u4ee5\u4e0b\u516c\u5f0f\uff1a\n\n\t\tans = d[x] + d[y] - 2*d[LCA(x,y)] + 1\n\u800c\u8fd9\u5c31\u8981\u7528\u5230LCA\u4e86\uff0c\u56e0\u4e3a\u662f\u591a\u7ec4\u6570\u636e,\u6240\u4ee5\u6211\u4eec\u5c31\u4f7f\u7528Tarjan_LCA\u79bb\u7ebf\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u4f4e(O(n+m))\n\n\u4e0b\u9762\u662f\u6838\u5fc3\u4ee3\u7801\u90e8\u5206\uff1a\n------------\n```\n#include<bits/stdc++.h>\nusing namespace std;\nlong long n,m,q;\nlong long ans[1000010];\nlong long fa[1000010],d[1000010],v[1000010];\nvector<long long>query[1000010],query_id[1000010];\n\nstruct node{\n\tlong long to,next;\n}edge[1000010];\n\nlong long first[1000010],cnt=1;\nvoid add(long long u,long long v){\n\tedge[++cnt].to = v;\n\tedge[cnt].next = first[u];\n\tfirst[u] = cnt;\n}\n\n\nvoid add_query(long long x,long long y,long long id){\n\tquery[x].push_back(y),query_id[x].push_back(id); \n\tquery[y].push_back(x),query_id[y].push_back(id);  \n}\n\nlong long get(long long x){\n\treturn fa[x]==x?x:fa[x]=get(fa[x]);\n}\n\nvoid TJ_LCA(long long x){\n\tv[x] = 1;\n\tfor(long long i = first[x];i;i = edge[i].next){\n\t\tlong long y = edge[i].to;\n\t\tif(v[y])continue;\n\t\td[y] = d[x]+1;\n\t\tTJ_LCA(y);\n\t\tfa[y] = x;\n\t}\n\tfor(long long i = 0;i < query[x].size(); i++){\n\t\tlong long y = query[x][i],id = query_id[x][i];\n\t\tif(v[y] == 2){\n\t\t\tlong long LCA = get(y);\n\t\t\tans[id] = min(ans[id],d[x]+d[y]-2*d[LCA]+1);\n            //\u6c42\u4e24\u70b9\u4e2d\u70b9\u7684\u4e2a\u6570\n\t\t}\n\t}\n\tv[x] = 2;\n} \n//Tarjan_LCA\nint main(){\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(long long i = 1; i <= m; i++){\n\t\tlong long x,y;\n\t\tscanf(\"%lld%lld\",&x,&y);\n\t\tadd(x,y);add(y,x);\n\t}\n    //\u5efa\u8fb9\n\tmemset(ans,0x3f,sizeof ans); \n\tfor(long long i = 1; i <= q; i++){\n\t\tlong long x,y;\n\t\tscanf(\"%lld%lld\",&x,&y);\n\t\tif(x == y)ans[i] = 1;\n\t\telse{\n\t\t\tadd_query(x,y,i);\n\t\t}\n\t}\n\t// \u5c06\u7b54\u6848\u6240\u5bf9\u5e94\u7f16\u53f7\u548c\u8be2\u95ee\u76842\u70b9\u8054\u7cfb\u8d77\u6765\n\tfor(long long i = 1; i <= n; i++)fa[i]=i;\n    //\u5e76\u67e5\u96c6\u521d\u59cb\u5316\n\tTJ_LCA(1);\n\n\tfor(long long i = 1; i <= q; i++){ \n\t\tprintf(\u201c%d\u201d,ans[i]);\n\t\tprintf(\"\\n\");\n\t}\n}\n```\n\u5728\u89e3\u51b3\u5b8c\u95ee\u98982\u540e\uff0c\u5927\u95ee\u9898\u5c31\u5df2\u7ecf\u5dee\u4e0d\u591a\u89e3\u51b3\u5b8c\u4e86\uff0c\u95ee\u98983\u7684\u8bdd\u4e0d\u591a\u8bf4\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\n\n```\nvoid output(long long x){\n\tif(x){\n\t\toutput(x>>1);\n\t\tprintf(x&1?\"1\":\"0\");\n\t}\n}\n```\n\u7136\u540e\u5982\u679c\u4f60\u7167\u7740\u8fd9\u4e2a\u6253\u5b8c2\u4e2a\u7248\u5b50\uff0c\u4f60\u4f1a\u53d1\u73b0\u53ea\u670973\u5206\uff08\u4e0d\u8981\u95ee\u6211\u600e\u4e48\u77e5\u9053\u7684\uff09\n\u90a3\u662f\u4ec0\u4e48\u539f\u56e0\u5462\uff1f\n\n\u56e0\u4e3a\u91cd\u8fb9\u95ee\u9898\u3002\n\n\u9996\u5148\uff0c\u9898\u76ee\u91cc\u8bf4\u4e86\uff0c2\u78b3\u4e0d\u6210\u73af\uff0c\u800c\u6570\u636e\u91cc\u6709\u91cd\u8fb9\uff0cTarjan\u5272\u8fb9\u4f1a\u628a\u6709\u91cd\u8fb9\u76842\u70b9\u7f29\u6389\uff0c\u8fd9\u5c31\u5bfc\u81f4\u4f60\u7684\u7b54\u6848\u4f1a\u51fa\u9519\uff0c\u4e8e\u662f\u6211\u53c8\u7528\u4e86\u9886\u63a5\u77e9\u9635\u6765\u5220\u9664\u91cd\u8fb9\u3002\n\n\u4e0b\u9762\u662fAC\u4ee3\u7801\n------------\n```\n#include<bits/stdc++.h>\n//\u4e07\u80fd\u5934\u6587\u4ef6\uff0c\u4e0d\u63a8\u8350\u4e0e\u4e0b\u9762using namespace std\u4e00\u8d77\u4f7f\u7528\uff0c\u4ec5\u4e3a\u51cf\u5c11\u7801\u957f\nusing namespace std;\n\nlong long n,m,q,ans[1000010];\n\nbool bridge[1000010];\nlong long num,dfn[1000010],low[1000010];\n//Tarjan\u5272\u8fb9\u6240\u7528\u6570\u7ec4\n\nlong long c[1000010],dcc;\n//\u7f29\u70b9\u6240\u7528\u6570\u7ec4\n\nlong long fa[1000010],d[1000010],v[1000010];\nvector<long long>query[1000010],query_id[1000010];\n//Tarjan_LCA\u6240\u7528\u6570\u7ec4\n\nstruct node{\n\tlong long to,next;\n}edge[1000010],edge_c[1000010];\nmap<int ,bool>mp[1000010];//\u7528map\u5199\u9886\u63a5\u77e9\u9635\uff0c\u9632\u6b62\u7206\u7a7a\u95f4\nlong long first[1000010],first_c[1000010],cnt=1,cnt_c;\n//\u5b58\u56fe\u6240\u7528\u6570\u7ec4\n\nvoid add(long long u,long long v){\n\tedge[++cnt].to = v;\n\tedge[cnt].next = first[u];\n\tfirst[u] = cnt;\n}\n//\u5efa\u521d\u59cb\u56fe\nvoid add_c(long long u,long long v){\n\tedge_c[++cnt_c].to = v;\n\tedge_c[cnt_c].next = first_c[u];\n\tfirst_c[u] = cnt_c;\n}//\u5efa\u7f29\u70b9\u540e\u56fe\n\nvoid add_query(long long x,long long y,long long id){\n\tquery[x].push_back(y),query_id[x].push_back(id); \n\tquery[y].push_back(x),query_id[y].push_back(id);  \n}\n//\u5b58\u50a8\u7b54\u6848\u4e0e\u95ee\u9898\n\nvoid TJ_C(long long x,long long in){\n\tdfn[x] = low[x] = ++num;\n\tfor(long long i = first[x];i;i = edge[i].next){\n\t\tlong long y = edge[i].to ;\n\t\tif(!dfn[y]){\n\t\t\tTJ_C(y,i);\n\t\t\tlow[x] = min(low[x],low[y]);\n\t\t\tif(low[y]>dfn[x]){\n\t\t\t\tbridge[i] = bridge[i^1]=1;\n\t\t\t}\n\t\t}\n\t\telse if(i!=(in^1))low[x]=min(low[x],dfn[y]);\n\t}\n}\n//Tarjan\u6c42\u5272\u8fb9\nvoid dfs(long long x){\n\tc[x] = dcc;\n\tfor(long long i =first[x];i;i=edge[i].next){\n\t\tlong long y = edge[i].to;\n\t\tif(c[y]||bridge[i])continue;\n\t\tdfs(y);\n\t}\n}\n// \u7f29\u70b9\nlong long get(long long x){return fa[x]==x?x:fa[x]=get(fa[x]);}\n//\u5e76\u67e5\u96c6\nvoid TJ_LCA(long long x){\n\tv[x] = 1;\n\tfor(long long i = first_c[x];i;i = edge_c[i].next){\n\t\tlong long y = edge_c[i].to;\n\t\tif(v[y])continue;\n\t\td[y] = d[x]+1;\n\t\tTJ_LCA(y);\n\t\tfa[y] = x;\n\t}\n\tfor(long long i = 0;i < query[x].size(); i++){\n\t\tlong long y = query[x][i],id = query_id[x][i];\n\t\tif(v[y] == 2){\n\t\t\tlong long LCA = get(y);\n\t\t\tans[id] = min(ans[id],d[x]+d[y]-2*d[LCA]+1);\n\t\t}\n\t}\n\tv[x] = 2;\n} \n//LCA\n\nvoid output(long long x){\n\tif(x){\n\t\toutput(x>>1);\n\t\tprintf(x&1?\"1\":\"0\");\n\t}\n}\n//\u8f93\u51fa\nint main(){\n\tscanf(\"%lld%lld\",&n,&m);\n    \n\tfor(long long i = 1; i <= m; i++){\n\t\tlong long x,y;\n\t\tscanf(\"%lld%lld\",&x,&y);\n\t\tif(mp[x][y])continue;\n\t\tmp[x][y] = 1;\n\t\tmp[y][x] = 1;\n        // \u7edf\u8ba1\u8fb9\uff0c\u9632\u91cd\u8fb9\n\t\tadd(x,y);add(y,x);\n\t}\n    \n\t\n\tfor(long long i = 1; i <= n; i++)if(!dfn[i])TJ_C(i,0);\n\tfor(long long i = 1; i <= n; i++)if(!c[i]){dcc++;dfs(i);}\n\tfor(long long i = 2; i <=cnt;i++){\n\t\tlong long y = edge[i].to,x = edge[i^1].to;\n\t\tif(c[x] == c[y])continue;\n\t\tadd_c(c[x],c[y]);\n\t}\n    //\u95ee\u9898\u4e00\n    \n    scanf(\"%lld\",&q);\n\tmemset(ans,0x3f,sizeof ans); \n\tfor(long long i = 1; i <= q; i++){\n\t\tlong long x,y;\n\t\tscanf(\"%lld%lld\",&x,&y);\n\t\tif(c[x] == c[y])ans[i] = 1;\n\t\telse{\n\t\t\tadd_query(c[x],c[y],i);\n\t\t}\n\t}\n\tfor(long long i = 1; i <= n; i++)fa[i]=i;\n\tTJ_LCA(1);\n\t//\u95ee\u9898\u4e8c\n    \n\tfor(long long i = 1; i <= q; i++){ \n\t\toutput(ans[i]);\n\t\tprintf(\"\\n\");\n\t}\n    //\u95ee\u9898\u4e09\n}\n```\n\n\n\t\t\n        \n",
        "postTime": 1539944174,
        "uid": 92359,
        "name": "MisakaQAQ",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2783 \u3010\u6709\u673a\u5316\u5b66\u4e4b\u795e\u5076\u5c14\u4f1a\u505a\u4f5c\u5f0a\u3011"
    },
    {
        "content": "\u53c8\u4e00\u9053~~\u6c34~~\u9ed1\u9898\n\n# \u601d\u8def\uff1a\n\n## \u663e\u7136\u7684\u7f29\u70b9+\u6811\u5256/\u500d\u589e\u6c42lca\n\n\u7531\u4e8e\u662f\u65e0\u5411\u56fe\uff0c\u7f29\u70b9\u65f6\u5199\u6cd5\u7565\u6709\u53d8\u5316\uff0c\u5373\u4e00\u4e2a\u70b9\u548c\u4ed6\u7684\u7236\u4eb2\u4e0d\u80fd\u6784\u6210\u5f3a\u8fde\u901a\u5206\u91cf\n\n\u7f29\u70b9\u5c31\u8fd9\u4e48\u5199\uff1a~~\uff08\u7801\u98ce\u7565\u4e11\uff09~~\n```\nvoid dfs(int u,int fa){\n\tvis[u]=1;\n\tdfn[u]=low[u]=++ti;\n\tst[++sttop]=u;\n\tinst[u]=1;\n\tfor(int i=oldhead[u];i;i=nod[i].next){\n\t\tint d=nod[i].v;\n\t\tif(d==fa)continue;\n\t\tif(!vis[d]){\n\t\t\tdfs(d,u);\n\t\t\tlow[u]=min(low[u],low[d]);\n\t\t}\n\t\telse if(inst[d])low[u]=min(low[d],low[u]);\n\t}\n\tif(dfn[u]==low[u]){\n\t\tint now;\n\t\ttaj++;\n\t\tdo{\n\t\t\tnow=st[sttop--];\n\t\t\tinst[now]=0;\n\t\t\tBelong[now]=taj;\n\t\t}while(now!=u);\n\t}\n}\n```\n\n\u8fd8\u6709\u8fd9\u5947\u602a\u7684\u8f93\u51fa\u683c\u5f0f\uff1a\n```\ninline int out(int n){//\u8f93\u51fan\u7684\u4e8c\u8fdb\u5236\u8868\u793a\n\tint o=log2(n);\n\tfor(;o>=0;o--){\n\t\tif((1<<o)<=n){\n\t\t\tn-=(1<<o);\n\t\t\tprintf(\"1\");\n\t\t}\n\t\telse printf(\"0\");\n\t}\n\tprintf(\"\\n\");\n}\n```\n\n\n------------\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\ninline int Read(){\n\tint x=0;\n\tchar c=getchar();\n\twhile(c>'9'||c<'0')c=getchar();\n\twhile(c>='0'&&c<='9')x=x*10+c-'0',c=getchar();\n\treturn x;\n}\nint toop,cnt;\nint oldhead[11010];\nint head[10101];\nstruct Node{\n\tint v;\n\tint next;\n}nod[101010],node[101010];\ninline void ad(int u,int v){\n\tnod[++toop].v=v;\n\tnod[toop].next=oldhead[u];\n\toldhead[u]=toop;\n}//\u65e7\u56fe \ninline void addedge(int u,int v){\n\tnode[++cnt].v=v;\n\tnode[cnt].next=head[u];\n\thead[u]=cnt;\n}//\u65b0\u56fe \ninline void add(int u,int v){\n\tad(u,v);\n\tad(v,u);\n}//\u65e7\u56fe\ninline void newadd(int u,int v){\n\taddedge(u,v);\n\taddedge(v,u);\n}//\u65b0\u56fe \nint n,m;\nint Belong[11010];\nint vis[11010];\nbool inst[10505];\nint st[10101];\nint sttop;\nint taj;\nint dfn[10101],low[10101],ti;\nvoid dfs(int u,int fa){\n\tvis[u]=1;\n\tdfn[u]=low[u]=++ti;\n\tst[++sttop]=u;\n\tinst[u]=1;\n\tfor(int i=oldhead[u];i;i=nod[i].next){\n\t\tint d=nod[i].v;\n\t\tif(d==fa)continue;\n\t\tif(!vis[d]){\n\t\t\tdfs(d,u);\n\t\t\tlow[u]=min(low[u],low[d]);\n\t\t}\n\t\telse if(inst[d])low[u]=min(low[d],low[u]);\n\t}\n\tif(dfn[u]==low[u]){\n\t\tint now;\n\t\ttaj++;\n\t\tdo{\n\t\t\tnow=st[sttop--];\n\t\t\tinst[now]=0;\n\t\t\tBelong[now]=taj;\n\t\t}while(now!=u);\n\t}\n}\nvoid sd(){\n\tint i,j;\n\tfor(i=1;i<=n;i++)if(!vis[i])dfs(i,i);\n\tfor(i=1;i<=n;i++){\n\t\tfor(j=oldhead[i];j;j=nod[j].next){\n\t\t\tint d=nod[j].v;\n\t\t\tif(Belong[i]!=Belong[d]) newadd(Belong[i],Belong[d]);\n\t\t}\n\t}\n}\nint dep[10101],siz[10101],fa[10101],son[10101],top[10101];\nvoid dfs1(int u){\n\tsiz[u]=1;\n\tfor(int i=head[u];i;i=node[i].next){\n\t\tint d=node[i].v;\n\t\tif(fa[u]!=d){\n\t\t\tfa[d]=u;\n\t\t\tdep[d]=dep[u]+1;\n\t\t\tdfs1(d);\n\t\t\tsiz[u]+=siz[d];\n\t\t\tif(siz[d]>siz[son[u]])son[u]=d;\n\t\t}\n\t}\n}\nvoid dfs2(int u,int tp){\n\ttop[u]=tp;\n\tif(son[u])dfs2(son[u],tp);\n\tfor(int i=head[u];i;i=node[i].next){\n\t\tint d=node[i].v;\n\t\tif(fa[u]!=d&&son[u]!=d)dfs2(d,d);\n\t}\n}\ninline int lca(int u,int v){\n\twhile(top[u]!=top[v]){\n\t\tif(dep[top[u]]>dep[top[v]])u=fa[top[u]];\n\t\telse v=fa[top[v]];\n\t}\n\treturn dep[u]>dep[v]?v:u;\n}\ninline int out(int n){\n\tint o=log2(n);\n\tfor(;o>=0;o--){\n\t\tif((1<<o)<=n){\n\t\t\tn-=(1<<o);\n\t\t\tprintf(\"1\");\n\t\t}\n\t\telse printf(\"0\");\n\t}\n\tprintf(\"\\n\");\n}\nint main(){\n\tn=Read(),m=Read();\n\tregister int i;\n\tint u,v;\n\tfor(i=1;i<=m;i++)u=Read(),v=Read(),ad(u,v);\n\tsd();\n\tdep[1]=1;\n\tdfs1(1);\n\tdfs2(1,1);\n\tint q;\n\tq=Read();\n\twhile(q--){\n\t\tu=Read(),v=Read();\n\t\tu=Belong[u];\n\t\tv=Belong[v];\n\t\tout(dep[u]+dep[v]-2*dep[lca(u,v)]+1);\n\t}\n\treturn 0;\n}\n```\n# ~~\u6c42\u8d5e~~",
        "postTime": 1541651751,
        "uid": 28088,
        "name": "\u94b1\u9038\u51e1",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2783 \u3010\u6709\u673a\u5316\u5b66\u4e4b\u795e\u5076\u5c14\u4f1a\u505a\u4f5c\u5f0a\u3011"
    }
]