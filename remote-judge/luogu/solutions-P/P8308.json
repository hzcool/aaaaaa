[
    {
        "content": "\u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u7b2c\u4e00\u9879\u53ef\u4ee5\u4e0d\u8981\uff0c\u800c\u8282\u70b9 $x$\uff08\u7b2c\u4e8c\u9879\u4e3a $x$\uff0c\u4e0b\u540c\uff09\u8fde\u5411 $[1,\\lfloor\\log_3x\\rfloor+1]$\uff0c\u6240\u4ee5\u5f97\u51fa\u9012\u63a8\u5f0f\uff1a\n$$f_x = \\sum\\limits_{i=1}^{\\lfloor\\log_3x\\rfloor+1}f_i $$\n\u8fb9\u754c\u6761\u4ef6\uff1a$f_1 = 1$\u3002  \n\u8fd9\u6837\uff0c\u4f60\u5c31\u53ef\u4ee5\u901a\u8fc7 $40\\%$ \u7684\u6570\u636e\uff08\u9884\u5904\u7406\u51fa $f_{1..\\lfloor\\log_3x\\rfloor+1}$\uff09\u3002  \n\u4f46\u662f $ \\mathcal O(q\\log_3 p)$ \u7684\u590d\u6742\u5ea6\u8fd8\u662f\u4e0d\u591f\u4f18\u79c0\uff0c\u65e0\u6cd5\u901a\u8fc7\u6b64\u9898\uff0c\u4f46\u662f\u6211\u4eec\u8003\u8651\u7b2c\u4e09\u5c42\uff08$\\log_3 \\log_3 p^q$\uff09  \n\u9996\u5148\uff0c\u6211\u4eec\u5b9a\u4e49 $f$ \u7684\u524d\u7f00\u548c\u6570\u7ec4\u4e3a $g$\uff0c\u6240\u4ee5\u6709 $f_x = g_{\\lfloor\\log_3x\\rfloor+1}$\u3002  \n\u7edf\u8ba1 $g_{\\lfloor\\log_3x\\rfloor+1}$ \u4e2d$f_{1..\\lfloor\\log_3(\\lfloor\\log_3x\\rfloor+1)+1\\rfloor}$ \u7684\u4e2a\u6570\uff0c\u63a8\u63a8\u67ff\u5b50\uff0c\u5373\u53ef\u89e3\u51b3\u3002  \n\u5177\u4f53\uff1a  \n\u6ce8\u610f~~\u4e0d~~\u5230\uff1a  \n$$f_1 = f_2 = 1$$  \n$$f_3 = f_4 = f_5 = f_6 = \\dots = f_8 = f_1 + f_2$$  \n$$f_{3^2} = f_{3^2+1} = \\dots = f_{3^3-1} = g_3$$  \n\u9884\u5904\u7406 $\\log_3 \\log_3 p^q$ \u4ee5\u5185\u7684 $g$ \u5373\u53ef\u3002  \n\u66f4\u5177\u4f53\u5730\uff1a  \n$$g_x = \\sum_{i = 1}^{\\lfloor\\log_3x\\rfloor} (3^{i} - 3^{i-1}) g_i + Ext$$  \n$$Ext = (x - 3^{\\lfloor\\log_3x\\rfloor} + 1)g_{\\lfloor\\log_3x\\rfloor + 1}$$  \n$$f_x = g_{\\lfloor\\log_3x\\rfloor + 1}$$\n\u53ef\u4ee5\u5728 $\\mathcal O(\\log_3 \\log_3 p^q)$ \u65f6\u95f4\u5185\u89e3\u51b3\u3002  \n\n\n\nCode:  \n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\nusing namespace FastIO; // FastIO \u7684\u5177\u4f53\u65f6\u95f4\u5c31\u4e0d\u7c98\u4e86\uff0c\u56e0\u4e3a\u5f88\u957f\n\nconst int maxn = 1e+5 + 1;\nconst double eps = 1e-6;\n\nint p, q, log3pq, log3log3pq, ext, ans;\nint g[maxn];\n\nint log3(int mx)\n{\n    return log(mx) / log(3) + eps;\n}\n\nint power(int base, int freq)\n{\n    int ans = 1, tmp = base;\n    while (freq > 0)\n    {\n        if (freq % 2 == 1)\n            ans = ans * tmp;\n        freq /= 2;\n        tmp = tmp * tmp;\n    }\n    return ans;\n}\n\nvoid generate()\n{\n    log3pq = q * log3(p) + 1;\n    log3log3pq = log3(log3pq);\n    g[1] = 1;\n    g[2] = 2;\n    for (int x = 3; x <= log3(log3pq) + 1; x++)\n    {\n        ext = (x - power(3, log3(x)) + 1) * g[(int)log3(x) + 1];\n        g[x] += ext;\n        for (int i = 1; i <= log3(x); i++)\n        {\n            g[x] += (power(3, i) - power(3, i - 1)) * g[i];\n        }\n    }\n}\n\nint getans()\n{\n    ext = (log3pq - power(3, log3log3pq) + 1) * g[(int)log3log3pq + 1];\n    ans = 0;\n    for (int i = 1; i <= log3(log3pq); i++)\n    {\n        ans += (power(3, i) - power(3, i - 1)) * g[i];\n    }\n    return ans + ext;\n}\n\nvoid init()\n{\n    memset(g, 0, sizeof(g));\n    ans = 0;\n}\n\nsigned main()\n{\n    fin >> p >> q;\n    init();\n    generate();\n    fout << getans() << endl;\n    return 0;\n}\n```",
        "postTime": 1647734693,
        "uid": 360265,
        "name": "lhx1048576",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 Counting By Ternary"
    }
]