[
    {
        "content": "upd 2018.09.16 \u53d1\u73b0\u81ea\u5df1\u7684\u56fe\u6ca1\u4e86\uff0c\u91cd\u65b0\u5ba1\u6838\n\n[\u6211\u7684\u535a\u5ba2\u540c\u9898\u9898\u89e3QAQAQQQ](https://www.cnblogs.com/acfunction/p/10051345.html)\n\n\u795e\u4ed9\u5206\u5757\u9898\u3002\u3002\n\n### Description\n\n\u7ed9\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u5e8f\u5217 $a$ \uff0c$m$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u533a\u95f4 $[l,r]$ \u91cc\u7684\u4f17\u6570\uff08\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u6570\uff09\u3002\u82e5\u6709\u591a\u4e2a\uff0c\u8f93\u51fa\u6700\u5c0f\u7684\u3002\n\n$a_i \\leq 10^9, n \\leq 40000, m \\leq 50000$\uff0c\u5f3a\u5236\u5728\u7ebf\u3002\n\n### Solution \n\n$a_i \\leq 10^9$ \uff0c\u5148\u79bb\u6563\u5316\u3002\u7136\u540e\n\n\u7b97\u6cd5\u4e00\uff1a\u66b4\u529b $n ^ 2$ \uff0c\u9884\u8ba1\u5f97\u5206 20 \uff1b \u5b9e\u9645\u5f97\u5206 20 \uff08\u5f00\u4e86 O2 \u76f4\u63a5\u53d8\u6210 85 \u5565\u64cd\u4f5c\uff09\n\n\u7b97\u6cd5\u4e8c\uff1a$n \\leq 40000$ \uff0c \u770b\u6765\u9700\u8981\u642c\u51fa\u5206\u5757\u5927\u6cd5\u3002 \n\n\u9884\u5904\u7406\u51fa\u4e24\u4e2a\u6570\u7ec4\uff1a\n\n$p[i][j]$\uff1a\u8868\u793a\u7b2c $i$ \u4e2a\u5757 \u5230\u7b2c $j$ \u4e2a\u5757\u7684\uff08\u6700\u5c0f\u7684\uff09\u4f17\u6570\u3002\n\n$s[i][j]$\uff1a\u7c7b\u4f3c\u4e8e\u524d\u7f00\u548c\uff0c\u5728\u524d $i$ \u4e2a\uff08\u5305\u62ec $i$ \uff09\u4e2a\u5757\u4e2d $j$ \uff08\u79bb\u6563\u5316\u4e4b\u540e\u7684\u503c\uff09\u51fa\u73b0\u4e86\u51e0\u6b21\u3002\n\n\u5982\u4f55\u9884\u5904\u7406 $p,s$\n\n\u5bf9\u4e8e $s$ \uff0c\u76f4\u63a5\u6bcf\u4e2a\u5757\u626b\u4e00\u904d\uff0c\u590d\u6742\u5ea6 $O(n \\sqrt n)$\n\n\u5bf9\u4e8e $p$ \uff0c\u53cc\u91cd\u5faa\u73af\u679a\u4e3e $i,j$\uff0c\u5f00\u4e00\u4e2a\u6570\u7ec4\u66b4\u529b\u7edf\u8ba1\u6bcf\u4e2a\u6570\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\u3002\u590d\u6742\u5ea6 $O(\\sqrt n \\sqrt n \\sqrt n)=O(n \\sqrt n)$\n\n\u9884\u5904\u7406 $p,s$ \u6709\u5565\u7528\u5462\uff1f\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee $[l,r]$ \uff0c\u8bbe $l$ \u5728\u7b2c $posl$ \u4e2a\u5757\u4e2d\uff0c$r$ \u5728\u7b2c $posr$ \u4e2a\u5757\u4e2d\u3002\u90a3\u4e48\u5206\u4e24\u79cd\u60c5\u51b5\uff1a\n\n\u7b2c\u4e00\u79cd\uff1a$posr - posl <= 1$\uff0c\u76f4\u63a5\u66b4\u529b\u626b $l,r$\uff0c\u590d\u6742\u5ea6 $O(\\sqrt n)$\n\n\u7b2c\u4e8c\u79cd\uff1a$posr - posl >= 2$\uff0c\u5982\u4e0b\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/33249.png)\n\n\u7ea2\u7ebf\u5c31\u662f $l$\uff0c\u84dd\u7ebf\u5c31\u662f $r$\uff0c\u9ed1\u7ebf\u662f\u5757\u4e0e\u5757\u7684\u5206\u5272\u7ebf\u3002\n\n\u7b54\u6848 $\\in$ $\\{\\text{\u9ec4\u7ebf\u4e2d\u7684\u5143\u7d20}\\} \\cup \\{\\text{\u7eff\u7ebf\u7684\u4f17\u6570}\\}$\n\n\u7eff\u7ebf\u7684\u4f17\u6570\u5728\u4e4b\u524d\u5df2\u7ecf\u9884\u5904\u7406\u597d\u4e86\uff0c\u5bf9\u4e8e\u9ec4\u7ebf\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u5728\u533a\u95f4$[l,r]$\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u5c31\u662f \u5728\u9ec4\u7ebf\u4e2d\u51fa\u73b0\u7684\u6b21\u6570 + \u5728\u7eff\u7ebf\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n\u5bf9\u4e8e\u5728\u9ec4\u7ebf\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u53ef\u4ee5\u76f4\u63a5\u626b\uff0c\u590d\u6742\u5ea6 $O(\\sqrt n)$\n\n\u5bf9\u4e8e\u5728\u7eff\u7ebf\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u53ef\u4ee5\u6839\u636e\u4e4b\u524d\u5904\u7406\u7684\u524d\u7f00\u548c\u7b97\u51fa\u3002\n\n\u8fd9\u6837\u6bcf\u4e2a\u5143\u7d20\u5c31\u53ef\u4ee5\u5728 $O(\\sqrt n)$ \u7684\u65f6\u95f4\u5185\u6c42\u51fa\u51fa\u73b0\u6b21\u6570\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u6109\u5feb\u7684AC~~\u795e\u4ed9\u5206\u5757\u9ed1\u9898\u4e86~~\u4e86\u3002 \uff08\u7ec6\u8282\u5f88\u591a\uff0c\u8c03\u4e86\u5f88\u4e45\uff09\n\n\n### Code \n\n```cpp\n#include <iostream>\n#include <cstdlib>\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <algorithm>\n\nusing namespace std;\nconst int N = 40040;\nconst int K = 220;\nint n, m, L, len, sum[K][N], vis[N];\nint tmpnum[N], B[N], last, pre[N];\nstruct getin {\n    int id, d, se;\n}a[N];\nstruct node {\n    int num, s;\n}p[K][K];\ninline bool cmp1(getin x, getin y) { return x.d < y.d; }\ninline bool cmp2(getin x, getin y) { return x.id < y.id; }\ninline int getB(int x) {\n    int ret = x / L;\n    if(x % L) ret++;\n    return ret;\n}\ninline void prework() {\n    for(int i = 1; i <= len; i++) {\n        memset(B, 0, sizeof(B)); node tmp;\n        tmp.num = tmp.s = 0;\n        for(int j = i; j <= len; j++) {\n            for(int k = (j - 1) * L + 1; k <= min(n, j * L); k++) {\n                B[a[k].se]++;\n                if(B[a[k].se] > tmp.s) {\n                    tmp.num = a[k].se;\n                    tmp.s = B[a[k].se];\n                }\n                else if(B[a[k].se] == tmp.s)\n                    tmp.num = min(tmp.num, a[k].se), \n                    tmp.s = B[a[k].se];\n            }\n            p[i][j] = tmp;\n        }\n    }\n    for(int i = 1; i <= len; i++) {\n        for(int j = 1; j <= n; j++) sum[i][a[j].se] = sum[i - 1][a[j].se];\n        for(int j = (i - 1) * L + 1; j <= min(n, i * L); j++) \n            sum[i][a[j].se]++;\n    }\n}\nint main() {\n    scanf(\"%d%d\", &n, &m); L = sqrt(n);\n    len = (n + L - 1) / L;\n    for(int i = 1; i <= n; i++)\n        scanf(\"%d\", &a[i].d), a[i].id = i;\n    sort(a + 1, a + n + 1, cmp1); a[0].d = -1;\n    for(int i = 1; i <= n; i++) {\n        a[i].se = a[i - 1].se;\n        if(a[i - 1].d != a[i].d) \n            a[i].se++;\n        pre[a[i].se] = a[i].d;\n    }\n    sort(a + 1, a + n + 1, cmp2);\n    prework(); \n    for(int i = 1; i <= m; i++) {\n        int l, r; scanf(\"%d%d\", &l, &r);\n        l = (l + last - 1) % n + 1;\n        r = (r + last - 1) % n + 1;\n        if(l > r) swap(l, r);\n        int posl = getB(l), posr = getB(r);\n         if(posr - posl <= 2) {\n            int ans = 0;\n            for(int j = l; j <= r; j++) tmpnum[a[j].se] = 0;\n            for(int j = l; j <= r; j++) {\n                tmpnum[a[j].se]++;\n                if(tmpnum[a[j].se] > tmpnum[ans]) ans = a[j].se;\n                else if(tmpnum[a[j].se] == tmpnum[ans]) ans = min(ans, a[j].se);\n            }\n            printf(\"%d\\n\", last = pre[ans]);\n        } \n        else {\n            int ans = p[posl + 1][posr - 1].num;\n            tmpnum[ans] = 0, vis[ans] = 0;\n            for(int j = l; j <= min(n, posl * L); j++) tmpnum[a[j].se] = 0, vis[a[j].se] = 0;\n            for(int j = (posr - 1) * L + 1; j <= r; j++) tmpnum[a[j].se] = 0, vis[a[j].se] = 0;\n            for(int j = l; j <= min(n, posl * L); j++) tmpnum[a[j].se]++;\n            for(int j = (posr - 1) * L + 1; j <= r; j++) tmpnum[a[j].se]++;\n            int MXnum, MX = 0;\n            for(int j = l; j <= min(n, posl * L); j++)\n                if(!vis[a[j].se]) {\n                    vis[a[j].se] = 1;\n                    int val = tmpnum[a[j].se] + sum[posr - 1][a[j].se] - sum[posl][a[j].se];\n                    if(MX < val)\n                        MX = val, \n                        MXnum = a[j].se;\n                    else if(MX == val) MXnum = min(MXnum, a[j].se);\n                }\n            for(int j = (posr - 1) * L + 1; j <= r; j++)\n                if(!vis[a[j].se]) {\n                    vis[a[j].se] = 1;\n                    int val = tmpnum[a[j].se] + sum[posr - 1][a[j].se] - sum[posl][a[j].se];\n                    if(MX < val)\n                        MX = val, \n                        MXnum = a[j].se;\n                    else if(MX == val) MXnum = min(MXnum, a[j].se);\n                }\n            if(MX > tmpnum[ans] + p[posl + 1][posr - 1].s) ans = MXnum;\n            else if(MX == tmpnum[ans] + p[posl + 1][posr - 1].s) ans = min(ans, MXnum);\n            printf(\"%d\\n\", last = pre[ans]);\n        } \n    }\n    return 0;\n}\n```\n\n\n",
        "postTime": 1535898537,
        "uid": 54745,
        "name": "Gypsophila",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4168 \u3010[Violet]\u84b2\u516c\u82f1\u3011"
    },
    {
        "content": "\u5206\u5757\u770b\u4f3c\u66b4\u529b\uff0c\u4f46\u5176\u5b9e\u786e\u5b9e\u662f\u5f88\u4f18\u7f8e  \n\u5728\u8fd9\u79cd**\u4e0d\u6ee1\u8db3\u533a\u95f4\u53ef\u52a0\u6027**\u7684\u9898\u76ee\u4e2d\uff0c\u5206\u5757\u5c31\u53d1\u6325\u4e86\u5b83\u7684\u4f5c\u7528   \n\n\u8fd9\u9053\u9898\u7684\u9898\u610f\u5341\u5206\u6e05\u6670\uff0c\u5c31\u662f\u6c42\u533a\u95f4\u4f17\u6570   \n\u60f3\u4e0d\u51fa\u6b63\u89e3\uff1f\u6211\u4eec\u53ef\u4ee5\u7528\u66b4\u529b  \n\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\u5f00\u4e00\u4e2a\u6876$t$\uff0c\u4ece\u5de6\u81f3\u53f3\u626b\u4e00\u904d\uff0c\u627e\u51fa\u4f17\u6570  \n\u76f4\u63a5\u5f00$1e9$\u7684\u6570\u7ec4\u6765\u7edf\u8ba1\u80af\u5b9a\u662f\u4f1a\u7206\u7a7a\u95f4\u7684,\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u6700\u591a\u53ea\u53ef\u80fd\u6709$40000$\u79cd\u4e0d\u540c\u7684\u6570\u503c\uff0c\u6240\u4ee5\u53ea\u8981**\u79bb\u6563\u5316**\u4e00\u4e0b\u5c31\u53ef\u4ee5\u66b4\u529b\u7edf\u8ba1\u4e86\u3002\u6570\u7ec4$a$\u5b58\u50a8\u539f\u672c\u7684\u6570\u503c\u7684\u6392\u540d\uff0c**\u6709\u5e8f\u6570\u7ec4**$b$\u5b58\u50a8\u539f\u672c\u7684\u6570\u503c    \n\u7531\u4e8e\u6570\u636e\u6bd4\u8f83\u826f\u5fc3\uff0c\u52a0\u4e0a\u5feb\u8bfb\u4e0d\u5f00$O_{2}$\u53ef\u4ee5\u5f97\u523045\u5206  \n\n\u5176\u5b9e\u6211\u4eec\u79bb\u6b63\u89e3\u5e76\u4e0d\u8fdc  \n\u6211\u4eec\u53ef\u4ee5\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff0c\u5982\u679c\u6211\u4eec\u628a\u4e00\u4e2a\u6570\u5217\u5206\u6210\u51e0\u6bb5\uff0c\u90a3\u4e48\u5982\u56fe\u6240\u793a\uff0c\u8fd9\u4e2a\u533a\u95f4\u7684\u4f17\u6570\u4e00\u5b9a\u4f1a\u662f\u6a59\u8272\u533a\u57df\u4e2d\u7684\u4f17\u6570\u6216\u8005\u84dd\u8272\u533a\u57df\u51fa\u73b0\u4e86\u7684\u6570  \n![](https://i.loli.net/2018/11/24/5bf912331b9c0.png)  \n\u8bbe\u6a59\u8272\u90e8\u5206\u4e2d\u4efb\u610f\u51fa\u73b0\u8fc7\u7684\u6570\u5b57\u4e3a$x$\uff0c\u4f17\u6570\u4e3a$f$\u3002  \n\u82e5$x$\u539f\u672c\u7684\u6570\u91cf\u52a0\u4e0a\u4e86\u5728\u84dd\u8272\u90e8\u5206\u7684\u6570\u91cf\u4ecd\u7136\u6ca1\u6709$f$\u539f\u672c\u7684\u6570\u91cf\u52a0\u4e0a$f$\u5728\u84dd\u8272\u90e8\u5206\u7684\u6570\u91cf\u4e4b\u548c\u5927\uff0c\u90a3\u4e48\u5b83\u662f\u4e0d\u53ef\u80fd\u6210\u4e3a\u4f17\u6570\u7684\u3002  \n\u6ca1\u51fa\u73b0\uff1f\u89c6\u4e3a\u539f\u672c\u5728\u6a59\u8272\u90e8\u5206\u7684\u6570\u91cf\u4e3a0\u5373\u53ef\u3002  \n\u82e5\u5728\u84dd\u8272\u90e8\u5206\u6ca1\u51fa\u73b0\u4e14\u672c\u6765\u5c31\u4e0d\u662f\u4f17\u6570\uff0c\u5c31\u66f4\u4e0d\u53ef\u80fd\u6253\u8fc7\u4f17\u6570\u4e86\u3002  \n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u84dd\u8272\u90e8\u5206\u51fa\u73b0\u8fc7\u7684\u6570\u5b57\u5e76\u5c06\u5b83\u548c\u6a59\u8272\u90e8\u5206\u7684\u4f17\u6570\u4f5c\u6bd4\u8f83\u5373\u53ef  \n\u56e0\u4e3a\u84dd\u8272\u90e8\u5206\u957f\u5ea6\u548c\u5c0f\u4e8e\u4e24\u683c\u7684\u957f\u5ea6\uff0c\u6240\u4ee5\u6bcf\u6b21\u8be2\u95ee\u6700\u591a\u53ea\u9700\u8981\u67e5\u4e24\u683c\u8fd9\u4e48\u591a\uff0c\u4e00\u4e0b\u5c31\u7701\u53bb\u4e86\u5f88\u591a\u65f6\u95f4  \n\u7406\u89e3\u4e86\u8fd9\u4e00\u90e8\u5206\uff0c\u4f60\u5c31\u5df2\u7ecf\u4f1a\u8fd9\u9053\u9898\u7684\u6b63\u89e3\u4e86\uff0c\u5269\u4e0b\u7684\u662f\u6709\u4e00\u4e9b\u7ec6\u8282\u7684\u4ee3\u7801\u5b9e\u73b0  \n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u9700\u8981\u9884\u5904\u7406\u4e00\u4e2a\u6570\u7ec4$f$\u548c\u524d\u7f00\u548c\u6570\u7ec4$s$\uff0c$f[i][j]$\u8868\u793a\u4ece\u7b2c$i$\u4e2a\u5757\u5230\u7b2c$j$\u4e2a\u5757\u4e2d\u7684\u4f17\u6570\uff0c$s[i][j]$\u8868\u793a\u5728\u524d$i$\u5757\u4e2d$b[j]$\u51fa\u73b0\u7684\u6b21\u6570  \n\u4e00\u4e9b\u7ec6\u8282\u5728\u4ee3\u7801\u4e2d\u6709\u6ce8\u91ca  \n```\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\nconst int maxn=40000+10;\nint a[maxn],b[maxn],s[200+10][maxn],f[200+10][200+10],t[maxn];\nint block;//\u6bcf\u5757\u957f\u5ea6 \n\nint read()\n{\n\tint x=0,p=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')\n\t{\n\t\tif (ch=='-')\n\t\t\tp=-1;\n\t\tch=getchar();\n\t}\n\twhile('0'<=ch&&ch<='9')\n\t{\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn x*p;\n}\nint get_block(int u)\n{\n\treturn (u-1)/block+1;\n}\ninline int min(int x,int y)\n{\n\treturn x<y?x:y;\n}\nint main()\n{\n\tint n=read(),m=read();\n\tblock=int(sqrt(n));//\u6bcf\u4e00\u5757\u7684\u957f\u5ea6\n\t \n\tfor (int i=1;i<=n;i++)\n\t\tb[i]=a[i]=read();\n\tstd::sort(b+1, b+1+n);\n\tint sum=std::unique(b+1, b+1+n)-b-1,cnt=(n-1)/block+1;//sum\u662f\u4e0d\u540c\u7684\u6570\u503c\u4e2a\u6570\uff0ccnt\u662f\u603b\u5757\u6570 \n\tfor (int i=1;i<=n;i++)\n\t\ta[i]=std::lower_bound(b+1, b+1+sum, a[i])-b;//\u8fd9\u4e00\u90e8\u5206\u662f\u79bb\u6563\u5316\uff0ca\u5b58\u50a8\u7684\u662fa_i\u5728b\u4e2d\u7684\u4f4d\u7f6e \n\t\n\tfor (int i=1;i<=cnt;i++)//\u9884\u5904\u7406\u51faf\u548cs \n\t{\n\t\tfor (int j=block*(i-1)+1;j<=min(block*i, n);j++)//\u5c0f\u5fc3\u5904\u7406\u8fb9\u754c\u95ee\u9898 \n\t\t\ts[i][a[j]]++;\n\t\tfor (int j=1;j<=sum;j++)\n\t\t\ts[i][j]+=s[i-1][j];\n\t}\n\tfor (int i=1;i<=cnt;i++)\n\t\tfor (int j=i;j<=cnt;j++)\n\t\t{\n\t\t    int MAX=f[i][j-1];\n\t\t\tfor (int k=block*(j-1);k<=min(block*j, n);k++)//\u4e0d\u9700\u8981\u4ece\u5934\u5f00\u59cb\u626b\n\t\t\t    if ((s[j][a[k]]-s[i-1][a[k]]>s[j][MAX]-s[i-1][MAX])||(s[j][a[k]]-s[i-1][a[k]]==s[j][MAX]-s[i-1][MAX]&&a[k]<MAX))\n\t\t\t\t\tMAX=a[k];\n\t\t\tf[i][j]=MAX;\n\t\t}\n\t\t\n\tint x=0;\n\twhile(m--)\n\t{\n\t\tint l=(read()+x-1)%n+1,r=(read()+x-1)%n+1;\n\t\tif (l>r)\n\t\t\tstd::swap(l, r);\n\t\tint bl=get_block(l),br=get_block(r),MAX=0;//bl\u662fl\u6240\u5c5e\u5757\u7f16\u53f7\uff0cbr\u662fr\u6240\u5c5e\u5757\u7684\u7f16\u53f7\uff0cMAX\u662f\u4f17\u6570\u5728b\u4e2d\u7684\u4e0b\u6807 \n\t\tif (br-bl<=1)//\u5982\u679c\u533a\u95f4\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e\u4e24\u683c\uff0c\u76f4\u63a5\u66b4\u529b \n\t\t{\n\t\t\tfor (int i=l;i<=r;i++)\n\t\t\t\tt[a[i]]++;\n\t\t\tfor (int i=l;i<=r;i++)\n\t\t\t    if (t[a[i]]>t[MAX]||(t[a[i]]==t[MAX]&&a[i]<MAX))\n\t\t\t        MAX=a[i];\n\t\t\tfor (int i=l;i<=r;i++)//\u5c06\u6876\u6e05\u7a7a \n\t\t\t\tt[a[i]]=0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (int i=l;i<=block*bl;i++)\n\t\t\t\tt[a[i]]++;\n\t\t\tfor (int i=block*(br-1)+1;i<=r;i++)\n\t\t\t\tt[a[i]]++;\n\t\t\t\t\n\t\t\tMAX=f[bl+1][br-1];\n\t\t\tfor (int i=l;i<=block*bl;i++)//\u8003\u8651\u84dd\u8272\u90e8\u5206\u51fa\u73b0\u7684\u6570\u662f\u5426\u4f1a\u6210\u4e3a\u4f17\u6570 \n\t\t\t{\n\t\t\t    int pre=t[MAX]+s[br-1][MAX]-s[bl][MAX],now=t[a[i]]+s[br-1][a[i]]-s[bl][a[i]];\n\t\t\t    if (now>pre||(now==pre&&MAX>a[i]))\n\t\t\t        MAX=a[i];\n\t\t\t}\n\t\t\tfor (int i=block*(br-1)+1;i<=r;i++)\n\t\t\t{\n\t\t\t    int pre=t[MAX]+s[br-1][MAX]-s[bl][MAX],now=t[a[i]]+s[br-1][a[i]]-s[bl][a[i]];\n\t\t\t    if (now>pre||(now==pre&&MAX>a[i]))\n\t\t\t        MAX=a[i];\n\t\t\t}\n\t\t\tfor (int i=l;i<=block*bl;i++)//\u5c06\u6876\u6e05\u7a7a \n\t\t\t    t[a[i]]=0;\n\t\t\tfor (int i=block*(br-1)+1;i<=r;i++)\n\t\t\t    t[a[i]]=0;\n\t\t}\n\t\tx=b[MAX];\n\t\tprintf(\"%d\\n\",x);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1543052632,
        "uid": 111528,
        "name": "hkr04",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4168 \u3010[Violet]\u84b2\u516c\u82f1\u3011"
    },
    {
        "content": "# \u63d0\u4f9b\u4e00\u79cd\u7279\u522b\u7b80\u5355\u7684\u601d\u8def \n#### ~~\u5c31\u662f\u9700\u8981\u5f00\u4e00\u4e2a\u53eb\u505aO2\u4f18\u5316\u7684\u4e1c\u897f\u624d\u80fd\u8fc7~~\n#### ~~\u5927\u4f6c\u90fd\u7528\u5206\u5757\u505a\u4e86\uff0c\u849f\u84bb\u53ea\u80fd\u79bb\u6563\u5316~~\n#### ~~\u5feb\u4e50\u5c31\u597d~~\n-------\n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u672c\u849f\u84bb\u7684\u60f3\u6cd5\u662f\u73b0\u7f29\u5c0fa\u6570\u7ec4\u7684\u6570\u636e\u89c4\u6a21\uff0c\u7136\u540e\u518d\u5b58\u5230b\u6570\u7ec4\u4e2d\u53bb   \n      ~~\u6bd5\u7adf\u4f601e9\u7684\u6570\u636e\u6876\u91cc\u4e5f\u5b58\u4e0d\u4e0b~~     \u4e4b\u540e\u6bcf\u6b21\u8fdb\u884c\u64cd\u4f5c\u7684\u65f6\u5019\u53ea\u9700\u8981\u627e\u5230\u5176\u5728a\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\uff0c\u518d\u5c06\u5176\u6620\u5c04\u5230b\u6570\u7ec4\u4e2d\u7136\u540e\u8f93\u51fa\uff0c\u5373\u53ef\u5f97\u5230\u84b2\u516c\u82f1\u7684\u7f16\u53f7\u3002\n      \n~~\u5176\u5b9e\u8fd9\u9053\u9898\u7684\u7cbe\u534e\u90e8\u5206\u662fluogu-judger-enable-o2~~\n\n~~\u4e5f\u8bb8\u79bb\u6563\u5316\u6709\u5f88\u591a\u7528\u5904\u4f46\u672c\u849f\u84bb\u53ea\u4f1a\u62ff\u6765\u7f29\u5c0f\u6570\u636e\u89c4\u6a21QAQ~~\n\n```cpp\n\tint a[50001];//\u539f\u6570\u7ec4\uff1b\n\tint b[50001];//\u8fdb\u884c\u53bb\u91cd\u64cd\u4f5c\u7684\u6570\u7ec4\uff08\u79bb\u6563\u5316\uff09\u5e76\u5b58\u50a8a\u6570\u7ec4\u7684\u6570\u7ec4\uff1b\n\tint t[50001];//\u7f29\u5c0f\u6570\u636e\u8303\u56f4\u540e\u62ff\u6765\u5b58\u50a8\u6570\u636e\u7684\u6876   \n\tint x=0;//\u6839\u636e\u9898\u610f\uff0c\u7b2c\u4e00\u6b21\u64cd\u4f5c\u65f6x\u4e3a0\uff1b\n\tint l0,r0;\n\tint l,r;\n```\n\u8bfb\u5165n,m,a\u540e\u5c31\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u79bb\u6563\u5316\u64cd\u4f5c\u4e86\u3002\n\n```cpp\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        b[i]=a[i];\n    }\t\n    sort(b+1,b+n+1);\n    int sum=unique(b+1,b+n+1)-b-1;\n    for(int i=1;i<=n;i++)\n    a[i]=lower_bound(b+1,b+sum+1,a[i])-b;//\u79bb\u6563\u5316\u7684\u677f\u5b50\uff1b\n```\n\u64cd\u4f5c\u5b8c\u6bd5\u4e4b\u540e\uff0c\u5982\u679ca\u6570\u7ec4\u4e2d\u539f\u6765\u5b58\u50a8\u7684\u662f1,99999,50,50,25,\u90a3\u4e48\u73b0\u5728\u5c31\u53d8\u6210\u4e861,4,3,3,2;\u800cb\u6570\u7ec4\u5c31\u5b58\u50a8\u4e861,25,50,99999,50\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u73b0\u5728\u7684a[2]==4,b[a[2]]==99999,\u4e5f\u5c31\u4e0e\u539f\u6765\u7684a[2]\u7684\u503c\u76f8\u7b49\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5df2\u7ecf\u8fd0\u7528\u79bb\u6563\u5316\u7f29\u5c0f\u4e86\u6570\u636e\u89c4\u6a21\u3002\n\n~~\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u5feb\u4e50\u5730\u66b4\u529b\u6a21\u62df\u5566~~\n```cpp\n\twhile(m--){\n        scanf(\"%d%d\",&l0,&r0);\n        l=(l0+x-1)%n+1;\n        r=(r0+x-1)%n+1;//\u6839\u636e\u9898\u610f\u8fdb\u884c\u64cd\u4f5c\n        if(l>r) swap(l,r);\n        for(int i=l;i<=r;i++)\n            t[a[i]]++;//\u6876\n        int maxx=0;\n        int p=0;\n        for(int i=1;i<=sum;i++){\n            if(maxx<t[i]){\n                maxx=t[i];\n                p=i;//\u8bb0\u5f55\u51fa\u73b0\u6b21\u6570\u6700\u591a\u5730\u84b2\u516c\u82f1\u7684\u4f4d\u7f6e\n            }\n        }\n        printf(\"%d\\n\",b[p]);//\u8f93\u51fa\u5176\u5728b\u6570\u7ec4\u4e2d\u7684\u7f16\u53f7\n        x=b[p];\n        memset(t,0,sizeof(t));//\u6bcf\u6b21\u7528\u5b8c\u6876\u8bb0\u5f97\u8fd8\u539f\u5c31\u597d\u5566\uff01QWQ\n    }\n\n```\n\n~~\u8bb0\u5f97\u5f00O2\u4f18\u5316\u4e0d\u7136\u4f1aTLE4\u4e2a\u70b9~~\n\n~~\u7136\u540e\u6211\u4eec\u5c31\u5728O2\u7684\u5e2e\u52a9\u4e0b\u6210\u529fAC\u5566~~\n",
        "postTime": 1540883677,
        "uid": 120259,
        "name": "\u57fa\u8f85\u8fea\u5c31\u662f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4168 \u3010[Violet]\u84b2\u516c\u82f1\u3011"
    },
    {
        "content": "\u4e4d\u4e00\u770b\u662f\u4e00\u9053\u6050\u6016\u7684\u9ed1\u9898\uff0c\u4ed4\u7ec6\u4e00\u770b\u53d1\u73b0\u5e76\u6ca1\u6709\u90a3\u4e48\u96be\uff1b\n\n\u5927\u81f4\u601d\u8def\u662f\u8fd9\u6837\u7684\uff0c\u9996\u5148\u6211\u4eec\u8981\u5145\u5206\u53d1\u6325\u5206\u5757\u66b4\u529b\u5927\u6cd5\u597d\u7684\u7cbe\u795e\n\n\u5148\u66b4\u529b\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u5757\u5185\u6bcf\u79cd\u84b2\u516c\u82f1\u7684\u4e2a\u6570\uff0c\n\n\u7136\u540e\u6c42\u51fa\u5bf9\u6bcf\u4e2a\u5757\u800c\u8a00\u7684\u524d\u7f00\u548c\uff0c\n\n\u4e8e\u662f\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u533a\u95f4\u67e5\u8be2\u4efb\u610f\u4e24\u4e2a\u5757\u4e4b\u95f4\u6bcf\u79cd\u84b2\u516c\u82f1\u7684\u6570\u91cf\u4e86\n\n\u7136\u540e\u6211\u4eec\u9884\u5904\u7406\u51fa\u4efb\u610f\u4e24\u4e2a\u5757\u4e4b\u95f4\u7684\u4f17\u6570\n\n\u6700\u540e\u5bf9\u4e8e\u6bcf\u7ec4\u8be2\u95ee\uff0c\u6211\u4eec\u5148\u627e\u5230\u5939\u5728\u5b83\u4eec\u4e2d\u95f4\u7684\u5757\uff0c\n\n\u5982\u679c\u8fd9\u4e2a\u4e24\u4e2a\u5757r-l<=1\uff0c\u90a3\u4e48\u6211\u4eec\u66b4\u529b\u6c42\u4f17\u6570\n\n\u4e3a\u4ec0\u4e48\uff1f \u56e0\u4e3a\u4e0d\u8fd9\u6837\u7684\u8bdd\uff0c\u4e07\u4e00x,y\u5728\u4e00\u4e2a\u5feb\uff0c\u90a3\u4e48r\u53ef\u80fd\u4f1a\u6bd4l\u5c0f\uff0c\u8981\u7279\u5224\n\n\u5982\u679cx,y\u9694\u5f97\u5f88\u8fd1\uff0c\u540c\u6837\u6709\u5404\u79cd\u5947\u5947\u602a\u602a\u7684\u60c5\u51b5\u8981\u505a\u7279\u5224\uff0c\n\n\u90a3\u65e2\u7136\u8fd9\u4e48\u9ebb\u70e6\uff0c\u6211\u4eec\u4e0d\u5982\u76f4\u63a5\u66b4\u529b\u641e\u662f\u5427\u3002\n\n\u5982\u679c\u4e24\u4e2a\u5757\u76f8\u5dee\u8d85\u8fc7\u4e861\uff0c\u90a3\u4e48\u6211\u4eec\u5148\u53d6\u51fa\u4e2d\u95f4\u5757\u7684\u4f17\u6570\uff0c\u4f5c\u4e3a\u6211\u4eec\u7684answer\uff0c\u7136\u540e\u5bf9\u65c1\u8fb9\u4e24\u4e2a\u5757\u66b4\u529b\u5904\u7406\u4f17\u6570\uff08\u6b64\u5904\u6ce8\u610f\u5224\u65ad\u65f6\u8981\u52a0\u4e0a\u4e2d\u95f4\u7684\u84b2\u516c\u82f1\uff09\u3002\n\n\u6700\u540e\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u7b54\u6848\uff0c\n\n\u4f46\u662f\u6ce8\u610f\u5230ai\u7684\u8303\u56f4\u5f88\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u79bb\u6563\u5316\u3002\n\n\u5e76\u4e14\u7531\u4e8e\u6570\u91cf\u76f8\u540c\u65f6\u8981\u4f18\u5148\u7f16\u53f7\u5c0f\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u5904\u7406\u4f17\u6570\u7684\u65f6\u5019\u8981\u591a\u52a0\u8fd9\u4e2a\u5224\u65ad\n\n\u57fa\u672c\u5c31\u662f\u8fd9\u6837\u4e86\u3002\u3002\u3002\n\n\u8868\u793a\u672c\u849f\u84bb\u7b2c\u4e00\u6b21\u505a\u9ed1\u9898\u4e00A\u8fc7\u4e86\u8fd8\u662f\u5f88\u5f00\u5fc3\u7684(*^\u25bd^*)\uff08\u867d\u7136\u8bf4\u7b2c\u4e00\u6b21\u4ea4\u6ca1\u5220\u8c03\u8bd5\u7ed3\u679ctoo many or too few lines \u4e86\uff0c\u4f46\u662f\u53bb\u6389\u8c03\u8bd5\u5c31\u8fc7\u4e86\uff0c\u4e5f\u53ef\u4ee5\u7b97\u662f\u4e00A\u561b\u662f\u5427\uff09\n\n\u4e0b\u9762\u4ee3\u7801\uff1a\n\n\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u4e0b\u9762\u9898\u89e3\u8bf4\u5757\u5206\u6839\u53f7n\u8fc7\u4e0d\u53bb\uff1f\n\n\u6211\u611f\u89c9\u6211\u7684\u901f\u5ea6\u8fd8\u53ef\u4ee5\u554a\n\n\u81f3\u5c11\u8fdb\u4e86\u7b2c\u4e00\u7248\u561b\n\n\u53e6\u5916\uff1a\n\u6211\u4e4b\u524d\u6d4b\u8bd5\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\uff0c\uff0c\u53d1\u73b0\n\n 6 4 \n \n 7 12 8 1 7 3\n \n 2 5\n \n 3 3 \n \n 4 6 \n\n3 5\n \n \u5bf9\u4e8e\u8fd9\u7ec4\u6570\u636e\uff0c\u697c\u4e0a\u67d0\u4efd\u9898\u89e3\u4f1a\u8f93\u51fa\n\n1\n\n1\n\n1\n\n1\n \n\u4f46\u662f\u7b54\u6848\u5e94\u8be5\u662f\n\n1\n\n1\n\n7\n\n1\n\n\u6240\u4ee5\u53ef\u4ee5\u6ce8\u610f\u4e00\u4e0b\uff08\u5f53\u7136\u5982\u679c\u662f\u6211\u9519\u4e86\uff0c\uff0c\uff0c\u4f60\u53ef\u4ee5\u79c1\u4fe1\u6211\uff09\n\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\nusing namespace std;\n#define R register int\n#define AC 40100\n#define ac 210\n#define D printf(\"line in %d\\n\",__LINE__);\nint block,n,m,answer,tot;\nint s[AC];\nstruct abc{\n    int num,w,x;\n}b[AC];//\u539f\u6570\u5217+\u79bb\u6563\u5316\u540e\u6570\u7ec4\nint sum[ac][AC];//\u6bcf\u79cd\u6570\u5b57\u5757\u5185\u524d\u7f00\u548c\nint ans[ac][ac];//\u4efb\u610f\u4e24\u5757\u4e4b\u95f4\u7684\u4f17\u6570\nint belong[AC];//\u6240\u5c5e\u5757\nint color[AC];\n\ninline int read()\n{\n    int x=0;char c=getchar();\n    while(c>'9' || c<'0') c=getchar();\n    while(c>='0' && c<='9') x=x*10+c-'0',c=getchar();\n    return x;\n}\n\nbool cmp1(abc a,abc b)\n{\n    return a.w < b.w;\n}\n\nbool cmp2(abc a,abc b)\n{\n    return a.num < b.num;\n}\n\nvoid search(int x,int y)\n{\n//\tprintf(\"%d %d\\n\",x,y);\n    int l=x/block + 1,r=y/block - 1;//\u53d6\u51fa\u4e2d\u95f4\u5757\n    if(r - l <= 1)//\u5982\u679cx,y\u76f8\u5dee\u5f88\u5c0f,\u90a3\u4e48\u66b4\u529b\u7edf\u8ba1\n    {\n        answer=0;\n        for(R i=x;i<=y;i++)\n            if((++color[b[i].x] > color[answer]) || (color[b[i].x] == color[answer] && b[i].x < answer)) answer=b[i].x;\n        for(R i=x;i<=y;i++)\n            --color[b[i].x];\n        printf(\"%d\\n\",s[answer]);\n        return ;\n    }\n    else//\u4e0d\u7136\u7684\u8bdd\n    {\n        int ll=l * block - 1,rr=(r+1) * block;\n        answer=ans[l][r];\n        for(R i=x;i<=ll;i++)\n        {\n            ++color[b[i].x];\n            if(color[b[i].x] + sum[r][b[i].x] - sum[l-1][b[i].x] > color[answer] + sum[r][answer] - sum[l-1][answer]) answer=b[i].x;\n            else if(color[b[i].x] + sum[r][b[i].x] - sum[l-1][b[i].x] == color[answer] + sum[r][answer] - sum[l-1][answer] && b[i].x < answer) answer=b[i].x;//\u7f16\u53f7\u5c0f\u4e5f\u8981\u4f18\u5148\uff0c\u56e0\u4e3a\u4e00\u884c\u5199\u4e0d\u4e0b\uff0c\u4e3a\u4e86\u7f8e\u89c2\uff0c\uff0c\uff0c\u5c31\u7528else\u5427\uff0c\u4e0d\u7136\u5c31\u7528||\u4e86\n        }\n        for(R i=rr;i<=y;i++)\n        {\n            ++color[b[i].x];\n            if(color[b[i].x] + sum[r][b[i].x] - sum[l-1][b[i].x] > color[answer] + sum[r][answer] - sum[l-1][answer]) answer=b[i].x;\n            else if(color[b[i].x] + sum[r][b[i].x] - sum[l-1][b[i].x] == color[answer] + sum[r][answer] - sum[l-1][answer] && b[i].x < answer) answer=b[i].x;\n        }\n        for(R i=x;i<=ll;i++) --color[b[i].x];\n        for(R i=rr;i<=y;i++) --color[b[i].x];\n        printf(\"%d\\n\",s[answer]);\n        return ;\n    }\n}\n\nvoid pre()//\u8bfb\u5165\n{\n    n=read(),m=read();\n    block=sqrt(n);\n    for(R i=1;i<=n;i++) b[i].w=read(),b[i].num=i;\n    sort(b+1,b+n+1,cmp1);\n    for(R i=1;i<=n;i++)\n    {\n        if(b[i].w != b[i-1].w) \n        {\n            s[++tot]=b[i].w;//\u5b58\u4e0b\u5bf9\u5e94\u65b0\u7f16\u53f7\u7684\u5bf9\u5e94\u771f\u5b9e\u7f16\u53f7 \n            b[i].x=tot;\n        }\n        else b[i].x=b[i-1].x;//\u79bb\u6563\u5316\n    }\n    sort(b+1,b+n+1,cmp2);\n}\n\nvoid getsum()\n{//\u6ce8\u610f0\u4e5f\u88ab\u5206\u5728\u57570\u4e2d\n    for(R i=1;i<=n;i++)\n    {\n        belong[i]=i/block;\n        sum[belong[i]][b[i].x]++;\n    }\n    for(R i=0;i<=belong[n];i++)\n        for(R j=1;j<=tot;j++)\n            sum[i][j]+=sum[i-1][j];\n}\n\nvoid getans()\n{\n    for(R i=0;i<=belong[n];i++)\n    {\n        int be=i * block,now=0;\n        if(!be) be=1;//\u8fd9\u91cc\u548c\u4f5c\u8bd7\u4e0d\u540c\uff0c\u56e0\u4e3a\u8fd9\u91cc\u7684now\u8981\u53c2\u4e0e\u6bd4\u8f83\u4e86\uff0c\u800c\u4e0d\u662f\u5355\u7eaf\u7684\u7edf\u8ba1\uff0c\u800cnow\u521d\u59cb\u503c\u4e3a0\uff0c\u6240\u4ee5color[0]\u4e0d\u80fd\u88ab\u4fee\u6539\n        for(R j=be;j<=n;j++)\n        {\n            if((++color[b[j].x] > color[now]) || (color[b[j].x] == color[now] && b[j].x < now)) now=b[j].x;//\u66f4\u65b0ans\n            ans[i][belong[j]]=now;//\u5b58\u4e0b\u65b0ans\n        }\n        for(R j=be;j<=n;j++) --color[b[j].x];//\u66b4\u529b\u64a4\u9500\n    }\n    /*for(R i=0;i<=belong[n];i++)\n    {\n        for(R j=i;j<=belong[n];j++)\n            printf(\"%d \",ans[i][j]);\n        printf(\"\\n\");\n    }*/\n}\n\nvoid work()//\u9884\u5904\u7406\u51fa\u524d\u7f00\u548c\u548c\u4f17\u6570\n{\n    int a,b;\n    for(R i=1;i<=m;i++)\n    {\n        a=(read() + s[answer] -1) % n + 1,b=(read() + s[answer] - 1) % n + 1;//\u83b7\u53d6\u8be2\u95ee\n        if(a < b) search(a,b);\n        else search(b,a);//\u56e0\u4e3a\u7ecf\u8fc7\u4e86\u8fd0\u7b97\uff0c\u6240\u4ee5\u5927\u5c0f\u987a\u5e8f\u5c31\u53ef\u80fd\u6539\u53d8\u4e86\n    }\t\n}\n\nint main()\n{\n//\tfreopen(\"in.in\",\"r\",stdin);\n    pre();\n    getsum();\n    getans();\n    work();\n//\tfclose(stdin);\n    return 0;\n}\n```",
        "postTime": 1523015323,
        "uid": 47136,
        "name": "ww3113306",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4168 \u3010[Violet]\u84b2\u516c\u82f1\u3011"
    },
    {
        "content": "$$\\href{http://blog.chhokmah.top/index.php/archives/37/}{\\Large\\texttt{My blog}}$$\n\n---\n# Description\n\u6c42\u533a\u95f4\u4f17\u6570\uff0c\u5982\u679c\u6709\u591a\u4e2a\u53d6\u6700\u5c0f\u7684\u90a3\u4e00\u4e2a\n\u5f3a\u5236\u5728\u7ebf\n# Data range \n$n\\leq 40000$\n# Solution\n\u5148\u79bb\u6563\u5316\u4e00\u4e0b\u3002  \n\u7528\u5206\u5757**\u8fb9\u89d2\u66b4\u529b**\u7684\u601d\u60f3\u3002  \n\u9996\u5148\u628a\u95ee\u9898\u5206\u6210\u8fb9\u89d2\u548c\u6574\u6bb5\u8ba8\u8bba\u3002  \n\u6211\u4eec\u8bbe$cnt[l][r][x]$\u8868\u793a\u7684\u7b2c$l$\u6bb5\u5230\u7b2c$r$\u6bb5\u4e2d$x$\u51fa\u73b0\u7684\u6b21\u6570\u3002  \n\u66b4\u529b\u6c42\u89e3\u662f$tot^2\\times n$\uff0c$tot$\u662f\u5757\u7684\u4e2a\u6570\u3002  \n\u7ef4\u62a4$f[i][j]$\u8868\u793a\u7684\u662f\u6574\u6bb5$i$\u5230$j$\u7684\u4f17\u6570\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5e76\u4e14\u8bb0\u5f55$d[i][j]$\u4e3a\u8be5\u6570\u4e3a\u591a\u5c11\u3002  \n\u4ee5\u4e0a\u6240\u6709\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u4e3a$tot^2\\times n$\u3002\n\u5dee\u4e0d\u591a\u5b8c\u6210\u4e86\u6574\u6bb5\u7684\u4efb\u52a1\u4e86\u3002   \n\u90a3\u4e48\u8003\u8651\u8fb9\u89d2\u66b4\u529b\u3002    \n\u5982\u679c\u76f8\u90bb\u5728\u4e00\u8d77\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u66b4\u529b\u6c42\u89e3\u3002    \n\u5982\u679c\u4e0d\u662f\u76f8\u90bb\uff0c\u90a3\u4e48\u5c31\u4fee\u6539\u5728\u5f53\u524d\u7684\u6574\u6bb5\u7b54\u6848\u4e0a\u3002    \n\u4ec0\u4e48\u610f\u601d\n\u5047\u5982\u8bf4\u4f60\u73b0\u5728\u8981\u67e5\u8be2\u7684\u533a\u95f4\u662f$[l,r]$  \n\u6574\u6bb5\u7684\u533a\u95f4\u662f$[bl,br]$  \n\u5f88\u660e\u663e\u6211\u4eec\u5df2\u7ecf\u6c42\u51fa\u4e86$[bl,br]$\u3002\n\u90a3\u4e48\u5728\u8fb9\u89d2\u66b4\u529b\u67e5\u8be2\u7684\u65f6\u5019\u6211\u4eec\u5c31\u628a\u7b54\u6848\u7d2f\u52a0\u5728$[bl,br]$\u7684\u7b54\u6848\u4e0a\u5c31\u53ef\u4ee5\u4e86\uff0c\u4e4b\u540e\u4e0d\u8981\u5fd8\u8bb0\u8fd8\u539f\u3002  \n\u6ce8\u610f\u4e00\u70b9\uff0c\u4e0d\u8981\u975e\u5e38\u50bb\u7684\u7d2f\u52a0\u7b54\u6848\u540e\u66b4\u529b\uff0c\u56e0\u4e3a\u63d2\u5165\u4e00\u4e2a\u6570\u53ea\u6709\u8fd9\u4e2a\u6570\u6539\u53d8\uff0c\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f\u53ea\u6709\u8fd9\u4e2a\u6570\u539f\u6765\u7684\u7b54\u6848\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u5f71\u54cd\uff0c\u53ea\u9700\u8981\u5224\u65ad\u8fd9\u4e2a\u6570\u7684\u6539\u53d8\u91cf\u5c31\u53ef\u4ee5\u4e86\u3002  \n\u4ee5\u4e0a\u7684\u590d\u6742\u5ea6\u4e3a$\\frac{mn}{tot}$\uff0c\u8bbe$n$\u548c$m$\u662f\u540c\u9636\u7684\uff0c\u90a3\u4e48\u53ef\u5f97\u5f53$tot$\u4e3a$^3\\sqrt{n}$\u8fd0\u884c\u6700\u5feb\u3002   \n# Code\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T> inline void read(T &x) {\n    x = 0; T fl = 1; char ch = 0; \n    for (; ch < '0' || ch > '9'; ch = getchar()) if (ch == '-') fl = -1;\n    for (; ch >= '0' && ch <= '9'; ch = getchar()) x = (x << 1) + (x << 3) + (ch ^ 48);\n    x *= fl;\n}\nconst int N = 40000 + 5;\nint n, m, blo, dn, ans, tot, L, R, ANS1, ANS2;\nint disc[N], a[N], b[N], cnt[45][45][N], pos[N], num[45][45], f[45][45];\nint st(int x) { return x * blo - blo + 1; }\nint ed(int x) { return x * blo; }\nvoid read_disc() {\n    read(n); read(m); \n    tot = (int) pow(n * 1.0, 1.0 / 3);\n    if (tot) blo = n / tot; \n    if (n % blo != 0) tot ++; \n    for (int i = 1; i <= n; i ++) \n        read(a[i]), disc[i] = a[i], pos[i] = (i - 1) / blo + 1;\n    sort(disc + 1, disc + 1 + n); dn = unique(disc + 1, disc + 1 + n) - disc - 1;\n    for (int i = 1; i <= n; i ++) \n        b[i] = lower_bound(disc + 1, disc + 1 + dn, a[i]) - disc;\n}\nvoid pre() {\n    for (int i = 1; i <= tot; i ++) \n        for (int j = i; j <= tot; j ++) {\n            for (int k = st(i); k <= ed(j); k ++) cnt[i][j][b[k]] ++;\n            for (int k = 1; k <= dn; k ++) \n                if (cnt[i][j][k] > f[i][j] || (cnt[i][j][k] == f[i][j] && num[i][j] > k))  \n                    f[i][j] = cnt[i][j][k], num[i][j] = k; \n        }\n}\nvoid add(int x) {\n    cnt[L][R][b[x]] ++;\n    if (cnt[L][R][b[x]] > ANS1 || (cnt[L][R][b[x]] == ANS1 && b[x] < ANS2)) \n        ANS1 = cnt[L][R][b[x]], ANS2 = b[x];\n}\nint query(int ql, int qr) {\n    int px = pos[ql], py = pos[qr];\n    L = px + 1, R = py - 1; \n    if (L > R) L = R = 0;  \n    ANS1 = f[L][R], ANS2 = num[L][R];\n    if (px == py) {\n        for (int i = ql; i <= qr; i ++) add(i);\n        for (int i = ql; i <= qr; i ++) cnt[L][R][b[i]] --;\n    } else {\n        for (int i = ql; i <= ed(px); i ++) add(i);\n        for (int i = st(py); i <= qr; i ++) add(i);\n        for (int i = ql; i <= ed(px); i ++) cnt[L][R][b[i]] --;\n        for (int i = st(py); i <= qr; i ++) cnt[L][R][b[i]] --;\n    }\n    return disc[ANS2];\n}\nint main() {\n    read_disc(); pre();\n    ans = 0; \n    for (int i = 1; i <= m; i ++) {\n        int x, y, ql, qr; read(x); read(y);  \n        ql = (x + ans - 1) % n + 1, qr = (y + ans - 1) % n + 1;\n        if (ql > qr) swap(ql, qr); ans = query(ql, qr);\n        printf(\"%d\\n\", ans); \n    }\n    return 0;\n}\n```",
        "postTime": 1557061733,
        "uid": 35567,
        "name": "Ayers",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4168 \u3010[Violet]\u84b2\u516c\u82f1\u3011"
    },
    {
        "content": "\u6765\u4e00\u7bc7\u5728\u7ebf\u83ab\u961f\u7684\u9898\u89e3\uff1f\uff08\u4e3a\u4ec0\u4e48\u611f\u89c9\u597d\u50cf\u5206\u5757\u554aqwq\uff09\n\n[\u60f3\u4e86\u89e3\u83ab\u961f\u7684\u70b9\u6211](https://www.luogu.org/blog/codesonic/Mosalgorithm)\n\n[\u60f3\u4e86\u89e3\u5728\u7ebf\u83ab\u961f\u7684\u70b9\u6211](https://shoko.blog.luogu.org/moqueue)\uff0c~~\u987a\u4fbf%%%\u8bd7\u4e43\uff0c%%%lxl~~\n\n\u8fd9\u9053\u9898\u663e\u7136\u662f\u9053\u5206\u5757\u88f8\u9898\uff0c\u4f46\u7531\u4e8e\uff08~~\u9898\u89e3\u91cc\u6709\u4e86~~\uff09\u5206\u5757\u7801\u91cf\u8fc7\u5927\uff0c\u6211\u4eec\u9009\u62e9\u4f7f\u7528\u5728\u7ebf\u83ab\u961f\uff08\u867d\u7136\u5c31\u662f\u8be2\u95ee\u7684\u65f6\u5019\u7801\u91cf\u5c11\u4e86\uff0c\u4f46\u4e5f\u5c11\u4e86\u5f88\u591a\uff09\n\n\u9996\u5148\uff0c\u6309\u7167\u8bd7\u4e43\u795e\u4ed9\u7684\u505a\u6cd5\uff0c\u6211\u4eec\u8bbe\u4e0b\u8bb8\u591a\u7279\u5f81\u533a\u95f4\uff0c\u5176\u5b9e\u5728\u8fd9\u91cc\u7684\u5904\u7406\u4e0e\u5206\u5757\u7684\u505a\u6cd5\u76f8\u540c\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u6211\u4eec\u76f4\u63a5\u770b\u7ed3\u8bba\uff1a\n\n\u4e00\u4e2a\u533a\u95f4\uff08\u8bbe\u5176\u4e3a$L$~$R$\uff09\u7684\u4f17\u6570\u53ea\u80fd\u662f\u5b83\u4e2d\u95f4\u5939\u7684\u4e00~~\u5806~~\u4e9b\u8fde\u7eed\u7279\u5f81\u533a\u95f4\uff08\u8bbe\u5176\u4e3a$l$~$r$\uff09\u6574\u4e2a\u7684\u4f17\u6570 $or$ $L$~$l$\u7684\u84b2\u516c\u82f1\u7684\u5404\u79cd\u79cd\u7c7b $or$ $r$~$R$\u7684\u84b2\u516c\u82f1\u7684\u5404\u79cd\u79cd\u7c7b\n\n\u6240\u4ee5\u6211\u4eec\u4e0d\u4ec5\u8981\u9884\u5904\u7406\u6bcf\u4e2a\u7279\u5f81\u533a\u95f4\u51fa\u73b0\u7684\u79cd\u7c7b\u7684\u4e2a\u6570\uff0c\u8fd8\u8981\u5904\u7406$i$~$j$\u7684\u4f17\u6570\n\n\u7136\u540e\u5728\u8be2\u95ee\u65f6\u5c06$l$,$r$\uff08\u5b9a\u4e49\u89c1\u4e0a\uff09\u5206\u522b\u79fb\u5230$L$,$R$\u5373\u53ef\u3002\n\n\u53ef\u662f\u8fd9\u662f\u5728\u7ebf\u83ab\u961f\uff0c\u6bcf\u6b21\u8981\u6e05\u7a7a$cnt$\u6570\u7ec4\uff0c\u600e\u4e48\u529e\u5462\uff1f\u518d\u8df3\u56de\u6765\u5373\u53ef\uff0c\u8bb0\u5f97\u8fd8\u8981\u5c06\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570\u6e05\u7a7a\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\n\n#define maxn 55555\n#define sqrtn 333\n\ninline int read(){\n\tint r=0,f=1;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9')r=(r<<1)+(r<<3)+(c^48),c=getchar();\n\treturn r*f;\n}\n\ninline int max(int a,int b){\n\treturn a>b?a:b;\n}\n\ninline void swap(int &a,int &b){\n\tint c=a;\n\ta=b;\n\tb=c;\n}\n\nstruct L_R{\n\tint l,r;\n\tint cnt[maxn];\n}lr[sqrtn];\n\nint n,m,size,cnt,s_block,a[maxn],b[maxn],lsh[maxn],pos[maxn],cnt_block[maxn];\n\nint ans,anss[sqrtn][sqrtn];//anss[i][j]\u4e3a\u7f16\u53f7\u4e3ai\u7684\u7279\u5f81\u533a\u95f4\u5230\u7f16\u53f7\u4e3aj\u7684\u7279\u5f81\u533a\u95f4\u7684\u4f17\u6570\n\nbool used[maxn];//\u65b9\u4fbf\u6e050\n\ninline int find(int x){\n\tint l=0,r=n+1;\n\twhile(l+1<r){\n\t\tint mid=(l+r)>>1;\n\t\tif(lsh[mid]<x)l=mid;\n\t\telse r=mid;\n\t}\n\treturn r;\n}\n\ninline void add(int l,int r,int x,int k){\n\tif(!cnt_block[x])cnt_block[x]=lr[r].cnt[x]-lr[l-1].cnt[x],used[x]=1;\n    //\u5982\u679c\u662f\u7b2c\u4e00\u6b21\u9047\u89c1\uff0c\u90a3\u5c31\u8981\u52a0\u4e0al~r(\u5b9a\u4e49\u89c1\u4e0a)\u4e2dx\u51fa\u73b0\u7684\u6b21\u6570\n\telse if(k<0&&used[x])cnt_block[x]-=lr[r].cnt[x]-lr[l-1].cnt[x],used[x]=0;\n    //\u9000\u56de\u6765\u65f6\u7b2c\u4e00\u6b21\u770b\u89c1\uff0c\u5c31\u8981\u51cf\u53bbl~r(\u5b9a\u4e49\u89c1\u4e0a)\u4e2dx\u51fa\u73b0\u7684\u6b21\u6570\n\tcnt_block[x]+=k;\n\tif(k<0)return;\n\tif(cnt_block[x]>cnt_block[ans])ans=x;//\u6bd4\u8f83\u7b54\u6848\u662f\u5426\u66f4\u4f18\n\telse if(cnt_block[x]==cnt_block[ans]&&x<ans)ans=x;\n}\n\nint main(){\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++)lsh[i]=a[i]=read();\n\tsort(lsh+1,lsh+1+n);\n\tfor(int i=2;i<=n;i++)\n\t\tif(lsh[i-1]==lsh[i])lsh[i-1]=1e9+10;\n\tsort(lsh+1,lsh+1+n);\n\tfor(int i=1;i<=n;i++){//\u79bb\u6563\u5316\n\t\tint wz=find(a[i]);\n\t\tb[wz]=a[i],a[i]=wz;\n\t\tcnt=max(cnt,a[i]);\n\t}\n\ts_block=size=sqrt(n);\n\tfor(int i=1;i<=s_block;i++){//\u9884\u5904\u7406\uff0c\u7279\u5f81\u533a\u95f4\u4e00\u822c\u5b58\u4e2a\u6570\u5b58\u7684\u90fd\u662f\u524d\u7f00\u548c\n\t\tlr[i].l=(i-1)*size+1,lr[i].r=i*size;\n\t\tfor(int j=(i-1)*size+1;j<=i*size;j++)lr[i].cnt[a[j]]++,pos[j]=i;\n\t\tfor(int j=1;j<=cnt;j++)lr[i].cnt[j]+=lr[i-1].cnt[j];\n\t}\n\tif(size*size<n){//\u8fd8\u6709\u4e00\u5c0f\u5757\u6ca1\u5904\u7406\n\t\tlr[s_block+1].l=size*size+1,lr[s_block+1].r=n;\n\t\tfor(int i=size*size+1;i<=n;i++)lr[s_block+1].cnt[a[i]]++,pos[i]=s_block+1;\n\t\tfor(int i=1;i<=cnt;i++)lr[s_block+1].cnt[i]+=lr[s_block].cnt[i];\n\t\ts_block++;\n\t}\n\tfor(int i=1;i<=s_block;i++){//\u7b97anss\n\t\tfor(int j=i;j<=s_block;j++,anss[i][j]=anss[i][j-1]){\n        //\u8bb0\u5f97\u7ee7\u627fi~j-1\u7684\u4f17\u6570\uff0c\u5426\u5219\u5018\u82e5\u4e00\u4e2a\u6570\u672a\u51fa\u73b0\u5728\u8fd9\u4e00\u4e2a\u7279\u5f81\u533a\u95f4\u91cc\uff0c\u4f46i~j-1\u4e2a\u7279\u5f81\u533a\u95f4\u91cc\u51fa\u73b0\u7684\u7279\u522b\u591a\uff0c\u90a3\u5c31\u6ca1\u6709\u8003\u8651\u5230\n\t\t\tfor(int k=lr[j].l;k<=lr[j].r;k++){\n\t\t\t\tcnt_block[a[k]]++;\n\t\t\t\tif(cnt_block[a[k]]>cnt_block[anss[i][j]])anss[i][j]=a[k];\n\t\t\t\telse if(cnt_block[a[k]]==cnt_block[anss[i][j]]&&a[k]<anss[i][j])anss[i][j]=a[k];\n\t\t\t}\n\t\t}\n\t\tfor(int j=1;j<=cnt;j++)cnt_block[j]=0;\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tint L=(read()+b[ans]-1)%n+1,R=(read()+b[ans]-1)%n+1;\n\t\tif(L>R)swap(L,R);\n\t\tint LL=R+1,RR=R;\n\t\tint l=R+1,r=R,posl=1,posr=0;\n\t\tif(pos[L]+1<pos[R]){//\u4e2d\u95f4\u5939\u4e86\u7279\u5f81\u533a\u95f4\n\t\t\tposl=pos[L]+1,posr=pos[R]-1;\n\t\t\tans=anss[posl][posr];\n\t\t\tl=LL=lr[posl].l;\n\t\t\tr=RR=lr[posr].r;\n\t\t\tcnt_block[ans]=lr[posr].cnt[ans]-lr[posl-1].cnt[ans];\n\t\t}\n        //\u83ab\u961f\n\t\twhile(l>L)add(posl,posr,a[--l],1);\n\t\twhile(r<R)add(posl,posr,a[++r],1);\n\t\tprintf(\"%d\\n\",b[ans]);\n        //\u8bb0\u5f97\u626b\u56de\u6765\n\t\twhile(l<LL)add(posl,posr,a[l++],-1);\n\t\twhile(r>RR)add(posl,posr,a[r--],-1);\n\t\tif(pos[L]+1<pos[R])//\u8bb0\u5f97\u51cf\u53bb\u4e2d\u95f4\u5939\u7684\u7279\u5f81\u533a\u95f4\u7684\u4f17\u6570\u4e2a\u6570\n\t\t\tcnt_block[anss[posl][posr]]-=lr[posr].cnt[anss[posl][posr]]-lr[posl-1].cnt[anss[posl][posr]];\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1571835267,
        "uid": 71403,
        "name": "\u4e00\u53f6\u77e5\u79cb\u3002",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4168 \u3010[Violet]\u84b2\u516c\u82f1\u3011"
    },
    {
        "content": "\u524d\u51e0\u5929\u521a\u5b66\u4e60\u4e86\u5206\u5757\uff0c\u611f\u89c9\u8fd9\u9053\u9898\u7528\u5206\u5757\u6c42\u89e3\u7684\u65b9\u5f0f\u633a\u5de7\u5999\u7684\n\n\u65e2\u7136\u7528\u7684\u662f\u5206\u5757\uff0c\u90a3\u4e48\u80af\u5b9a\u662f\u4e24\u7aef\u66b4\u529b\u6c42\u89e3\uff0c\u4e2d\u95f4\u8981\u5feb\u901f\u5730\u5904\u7406\u6bcf\u4e2a\u5757\n\n\u9996\u5148\u6211\u4eec\u8981\u5f97\u5230\u4e00\u4e2a\u7ed3\u8bba\uff0c\u6700\u540e\u6c42\u51fa\u7684\u8fd9\u4e00\u4e2a\u4f17\u6570\u5fc5\u5b9a\u4e3a\u4e2d\u95f4\u5757\u7684\u4f17\u6570\u6216\u8005\u662f\u4e24\u7aef\u7684\u4efb\u610f\u4e00\u4e2a\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u7528$nu[i][j]$\u6765\u8868\u793a\u7b2c$i$\u4e2a\u5757\u5230\u7b2c$j$\u4e2a\u5757\u7684\u4f17\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u7528$O(n\\sqrt{n})$\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5148\u679a\u4e3e\u6bcf\u4e2a\u5757\uff0c\u7136\u540e\u679a\u4e3e\u540e\u9762\u7684\u70b9\u6765\u6c42\u51fa$nu[i][j]$,\u653e\u4e00\u4e0b\u8fd9\u4e00\u6bb5\u7684\u4ee3\u7801\n\n```\nvoid pre(int x)\n{\n\tmemset(cnt,0,sizeof(cnt));\n\tint maxx=0,num1=0;\n\tfor(int i=(x-1)*m+1;i<=n;i++)\n\t{\n\t\tcnt[a[i]]++;\n\t\tif(cnt[a[i]]>maxx||(cnt[a[i]]==maxx&&a[i]<num1))\n\t\t\tmaxx=cnt[a[i]],num1=a[i];\n\t\tnu[x][pos[i]]=num1;\n\t}\n}\n```\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u6bcf\u4e00\u6b21\u7684\u8be2\u95ee\uff0c\u5148\u5047\u5b9a\u4e2d\u95f4\u7684\u5757\u7684\u4f17\u6570\u4e3a\u6574\u4e2a\u533a\u95f4\u7684\u4f17\u6570\uff0c\u5e76\u6c42\u51fa\u5728\u533a\u95f4\u5185\u7684\u4e2a\u6570\uff0c\u518d\u679a\u4e3e\u4e24\u7aef\u7684\u6bcf\u4e00\u4e2a\u70b9\uff0c\u6c42\u51fa\u5728\u533a\u95f4\u5185\u7684\u4e2a\u6570\uff0c\u5982\u679c\u6bd4\u4e4b\u524d\u7684\u591a\u90a3\u4e48\u5c31\u66f4\u65b0\n\n\u81f3\u4e8e\u6c42\u4e00\u4e2a\u6570\u5728\u533a\u95f4\u5185\u7684\u4e2a\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u5de7\u7528$vector$,\u8bb0\u5f55\u6bcf\u4e2a\u6570\u5b57\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u7528upper_bound\u548clower_bound\u6c42\u51fa\u5728\u533a\u95f4\u5185\u7684\u4e2a\u6570\n\n\u8bb0\u5f97\u79bb\u6563\u5316\uff01\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,a[100003],num[100003],id,pos[100003],l,r,su,cnt[100003],nu[3003][3003],res,m,b[100003],las,o;\nvector<int>l1[100003];\nmap<int,int>mp;\nint ask1(int ll,int rr,int x)\n{\n\treturn upper_bound(l1[x].begin(),l1[x].end(),rr)-lower_bound(l1[x].begin(),l1[x].end(),ll); //\u6c42\u51fa\u4e00\u4e2a\u6570\u5728\u533a\u95f4\u5185\u7684\u4e2a\u6570\n}\nvoid pre(int x) //\u9884\u5904\u7406nu[i][j]\n{\n\tmemset(cnt,0,sizeof(cnt));\n\tint maxx=0,num1=0;\n\tfor(int i=(x-1)*m+1;i<=n;i++)\n\t{\n\t\tcnt[a[i]]++;\n\t\tif(cnt[a[i]]>maxx||(cnt[a[i]]==maxx&&a[i]<num1))\n\t\t\tmaxx=cnt[a[i]],num1=a[i]; \n\t\tnu[x][pos[i]]=num1;\n\t}\n}\nint ask(int l1,int r1)\n{\n\tint maxx=0,num1=0;\n\tif(pos[l1]+1<pos[r1])\n\t\tmaxx=ask1(l1,r1,nu[pos[l1]+1][pos[r1]-1]),num1=nu[pos[l1]+1][pos[r1]-1]; //\u5047\u5b9a\u4f17\u6570\u4e3a\u4e2d\u95f4\u7684\u5757\u7684\u4f17\u6570\n\tfor(int i=l1;i<=min(r1,pos[l1]*m);i++) //\u679a\u4e3e\u5de6\u7aef\u7684\u5757\n\t{\n\t\tres=ask1(l1,r1,a[i]);\n\t\tif(res>maxx||(res==maxx&&a[i]<num1))\n\t\t\tmaxx=res,num1=a[i];\n\t}\n\tif(pos[l1]!=pos[r1]) //\u679a\u4e3e\u53f3\u7aef\u7684\u5757\n\t\tfor(int i=(pos[r1]-1)*m+1;i<=r1;i++)\n\t\t{\n\t\t\tres=ask1(l1,r1,a[i]);\n\t\t\tif(res>maxx||(res==maxx&&a[i]<num1))\n\t\t\t\tmaxx=res,num1=a[i];\n\t\t}\n\treturn num[num1];\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&o);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tb[i]=a[i];\n\t}\n\tsort(b+1,b+n+1);\n\tfor(int i=1;i<=n;i++)\n\t\tif(!mp[b[i]])\n\t\t\tid++,mp[b[i]]=id,num[id]=b[i]; //\u79bb\u6563\u5316\n\tfor(int i=1;i<=n;i++)\n\t\ta[i]=mp[a[i]],l1[a[i]].push_back(i); \n\tfor(int i=1;i<=id;i++)\n\t\tl1[i].push_back(n+1);\n\tm=pow(n,0.4);\n\tfor(int i=1;i<=n;i++)\n\t\tpos[i]=(i-1)/m+1;\n\tsu=pos[n];\n\tfor(int i=1;i<=su;i++)\n\t\tpre(i);\n\tfor(int i=1;i<=o;i++)\n\t{\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tl=(l+las-1)%n+1,r=(r+las-1)%n+1;\n\t\tif(l>r)\n\t\t\tswap(l,r);\n\t\tlas=ask(l,r);\n\t\tcout<<las<<endl;\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1579060413,
        "uid": 78001,
        "name": "dz_ice",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4168 \u3010[Violet]\u84b2\u516c\u82f1\u3011"
    },
    {
        "content": "\u597d\u4e45\u4ee5\u524d\u5c31\u8981\u5199\u7684\u535a\u5ba2\u62d6\u5230\u8fd0\u52a8\u4f1a\u6765\u5199....(~~\u5f53\u65f6\u601d\u8def\u597d\u50cf\u8fd8\u662f\u539f\u521b\u7684,\u73b0\u5728\u4e0d\u662f\u4e86~~)\n\n\u5148\u8bf4\u660e\u5e76\u6ca1\u6709 $A$ \u8fd9\u9053\u9898,\u4f46\u662f $A$ \u4e86 [$loj$ \u5206\u5757 $9$](https://loj.ac/problem/6285) (\u4e5f\u662f\u533a\u95f4\u4f17\u6570,\u6211\u662f\u6309\u5728\u7ebf\u505a\u7684)\u3002**\u5982\u679c\u6709\u5927\u4f6c\u77e5\u9053\u4e3a\u4ec0\u4e48\u6211\u6ca1\u6709 $A$ \u84b2\u516c\u82f1\u53ef\u4ee5\u6765 @ \u6211!**\u3002\n\n\u672c\u7bc7\u9002\u5408\u4e8e\u521a\u521a\u5165\u624b\u5206\u5757\u7684\u849f\u84bb(~~\u8d85\u8be6\u7ec6~~)\u3002\n\n\u9996\u5148\u6211\u4eec\u5148\u628a\u533a\u95f4\u5206\u5757(~~\u5e9f\u8bdd~~)\u3002\u8003\u8651\u5230\u4e00\u4e2a\u533a\u95f4\u7684\u4f17\u6570\u662f\u8981\u4e0d\u662f\u8fd9\u4e2a\u533a\u95f4\u7684**\u6700\u5927\u5757\u7684\u7b54\u6848**,\u5c31\u662f**\u65c1\u8fb9\u591a\u51fa\u6765\u7684\u8fb9\u89d2\u7684\u6570\u5b57**\u3002\u56e0\u4e3a\u4efb\u4f55\u6570\u5728**\u6700\u5927\u5757\u4e2d\u51fa\u73b0\u7684\u6b21\u6570** \u80af\u5b9a\u5c0f\u4e8e **\u6700\u5927\u5757\u7684\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570**,\u800c\u8fb9\u89d2\u5374\u53ef\u4ee5\u8ba9\u81ea\u5df1\u7684\u51fa\u73b0\u6b21\u6570\u589e\u52a0\u6765\u8fbe\u5230\u8d85\u8d8a\u6700\u5927\u5757\u7684\u4f17\u6570\u7684\u6548\u679c\u3002\n\n![](https://i.loli.net/2018/11/21/5bf4ebe8e4cb3.png)\n\n(\u5982\u56fe,\u9ec4\u8272\u90e8\u5206\u7684\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570\u53ef\u80fd\u8d85\u8fc7\u6700\u5927\u5757\u4f17\u6570 $x$ \u7684\u51fa\u73b0\u6b21\u6570,\u7ea2\u8272\u4e3a\u6700\u5927\u5757\u7684\u8fb9\u754c)\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u7b2c $i$ \u5757\u5230\u7b2c $j$ \u5757\u7684\u4f17\u6570,\u4e14\u8981\u77e5\u9053\u6700\u5927\u5757\u4e2d\u7684\u6bcf\u4e2a\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n\u9996\u5148\u8981\u9884\u5904\u7406\u6bcf\u4e2a\u5757\u4e2d\u6570\u7684\u51fa\u73b0\u6b21\u6570\u3002\u5982\u679c\u6211\u4eec\u5b9a\u4e49\u6570\u7ec4 $times[i,j,x]$ \u4ee3\u8868 $i$ \u5757\u5230 $j$ \u5757\u7684\u51fa\u73b0\u6b21\u6570\u7684\u8bdd,\u7a7a\u95f4\u7206\u70b8 $n \\times \\sqrt{n} \\times \\sqrt{n}$ --- $O(n^2)$\u3002\u5982\u679c\u6211\u4eec\u7528 $times[i,x]$ \u8868\u793a\u7b2c $i$ \u5757 $x$ \u7684\u51fa\u73b0\u6b21\u6570\u7684\u8bdd,\u65f6\u95f4\u590d\u6742\u5ea6\u7206\u70b8 --- \u4e00\u6b21\u67e5\u8be2 $O(\\sqrt{n} \\times \\sqrt{n})$ (\u56e0\u4e3a\u6211\u4eec\u8fd8\u8981\u4e00\u5757\u4e00\u5757\u7684\u627e\u51fa\u73b0\u6b21\u6570,\u672c\u6765\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31 $\\sqrt{n}$)\u3002\u7136\u540e\u6211\u4eec\u5c31\u673a\u5236\u7684\u628a $times[i,x]$ \u5b9a\u4e49\u4e3a $1$~$i$ \u7684 $x$ \u7684\u51fa\u73b0\u6b21\u6570\u3002\u90a3\u6211\u4eec\u67e5\u8be2\u7b2c $i$ \u5757\u5230\u7b2c $j$ \u5757\u7684\u51fa\u73b0\u6b21\u6570\u5c31\u662f $times[i,x]-times[j-1,x]$ \u4e86\u3002\u9884\u5904\u7406\u590d\u6742\u5ea6 $O(n \\sqrt{n})$\u3002(\u79bb\u6563\u5316\u4ee5\u540e)\n\n```pascal\nj:=1;\nfor i:=1 to n do\nbegin\n    inc(times[j,num[i]]);\n    if i mod (block_num-1)=0 then // block_num \u4ee3\u8868\u5757\u7684\u4e2a\u6570\n    begin\n        for k:=1 to tail do times[j+1,k]:=times[j,k]; // \u5168\u90e8\u6570\u5b57\u90fd\u8981\u7ee7\u627f\n        inc(j); // \u53c8\u8fc7\u4e86\u4e00\u5757\n    end;\nend;\n```\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u8981\u5feb\u901f\u6784\u9020\u6570\u7ec4 $ans[i,j]$ \u4ee3\u8868\u7b2c $i$ \u5757\u5230\u7b2c $j$ \u5757\u7684\u7b54\u6848\u3002\u6211\u4eec\u60f3,\u5982\u679c\u6211\u4eec\u5df2\u7ecf\u6709\u4e86 $ans[i,j-1]$,\u6211\u4eec\u5982\u4f55\u6c42 $ans[i,j]$ ? \u66b4\u529b\u8dd1\u4e00\u904d\u554a!\u53cd\u6b63\u4e2d\u95f4\u53ea\u6709 $\\sqrt{n}$ \u4e2a\u6570\u5b57! \u4e3a\u4ec0\u4e48\u4e0a\u4e00\u4e2a\u7b54\u6848\u53ef\u4ee5\u62ff\u6765\u6bd4\u8f83? \u56e0\u4e3a $i,j$ \u5305\u62ec\u7740 $i,j-1$,\u6211\u4eec\u5df2\u77e5\u7684\u4f17\u6570\u53ea\u6709 $ans[i-1,j]$,\u90a3\u4e48\u53ea\u6709\u5757 $j-1$ \u5230\u5757 $j$ \u8fd9\u4e2a\u5730\u65b9\u53c8\u53ef\u80fd\u8d85\u8fc7\u539f\u6709\u7684\u4f17\u6570,\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u67e5\u8be2\u3002 \u5176\u4e2d\u6211\u4eec\u8981\u4e24\u4e2a\u5faa\u73af $i,j$ \u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u53d8\u4e3a $\\sqrt{n} \\times \\sqrt{n}$ --- $O(n)$,\u7136\u540e\u66b4\u529b\u626b,\u53d8\u4e3a $O(n \\sqrt{n})$\u3002\n\n```pascal\nfor i:=1 to block_num do\n    for j:=i to block_num do\n    begin\n        now:=ans[i,j-1]; // \u4e0a\u4e00\u6b21\u7684\u7b54\u6848\n        for k:=(j-1)*node_num+1 to min(n,j*node_num) do // \u8fd9\u4e2a\u5757\n        begin\n            tmp1:=times[j,num[k]]-times[i-1,num[k]]; // \u73b0\u6709\u7b54\u6848\u7684\u51fa\u73b0\u6b21\u6570\n            tmp2:=times[j,now]-times[i-1,now]; // \u53ef\u80fd\u7684\u6570\u7684\u51fa\u73b0\u6b21\u6570\n            if (tmp1>tmp2)or((tmp1=tmp2)and(num[k]<now)) then now:=num[k]; // \u66f4\u597d\u5c31\u66f4\u65b0\n        end;\n        ans[i,j]:=now;\n     end;\n```\n\n\u67e5\u8be2\u7684\u601d\u8def\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86,\u5927\u5bb6\u4e3b\u8981\u770b\u6ce8\u91ca\u3002\n\n\u8bb2\u4e00\u4e0b\u5b9a\u4e49:\n\n- $Ready$ \u8f93\u5165 $+$ \u79bb\u6563\u5316 $+$ \u9884\u5904\u7406\n- $now$ \u7b54\u6848\u7684\u79bb\u6563\u5316\u540e\u7684\u7f16\u53f7\n- $recf$ \u7f16\u53f7\u6240\u5bf9\u5e94\u7684\u539f\u6709\u6570\u7ec4\n- $Locate$ \u8fd9\u4e2a\u4f4d\u7f6e\u5728\u7b2c\u51e0\u5757 \n- $real[1$~$2]$ \u6700\u5927\u5757\u7684\u8fb9\u754c\u7684\u5757\u7f16\u53f7 (\u6bd4\u5982 $l=1$ \u7684\u65f6\u5019 $real[1]=1$,$r=n$ \u7684\u65f6\u5019 $real[2]=Locate(n)$)\n- $bucket$ \u8fd9\u4e2a\u6570\u5b57\u5728\u8fb9\u89d2\u7684\u51fa\u73b0\u6b21\u6570\n- $node_{num}$ \u6bcf\u4e2a\u5757\u7684\u6570\u5b57\u4e2a\u6570\n\n```pascal\n\nbegin\n    Ready; now:=0; recf[0]:=0; // \u4e00\u5f00\u59cb now=0\n    for i:=1 to m do\n    begin\n        read(l,r);\n        real[1]:=Locate(l); real[2]:=Locate(r); bucket[0]:=0;\n        if real[2]-real[1]<=1 then // \u53ef\u4ee5\u66b4\u529b\u5c31\u66b4\u529b \u590d\u6742\u5ea6\u662f\u4e24\u4e2a sqrt(n)\n        begin\n            now:=0; \n            for k:=l to r do\n            begin\n                inc(bucket[num[k]]);\n                if (bucket[num[k]]>bucket[now])or((bucket[num[k]]=bucket[now])and(now>num[k])) then now:=num[k];\n            end;\n            for k:=l to r do bucket[num[k]]:=0;\n            writeln(recf[now]);\n        end\n        else\n        begin // \u53ea\u6709\u5de6\u53f3\u9700\u8981\u66b4\u529b,\u8fd8\u8981\u6e05\u7a7a,\u6240\u4ee5\u662f\u56db\u4e2a sqrt(n)\n            now:=ans[real[1]+1,real[2]-1]; // \u6700\u5927\u5757\u7684\u51fa\u73b0\u6b21\u6570\n            for k:=l to min(n,real[1]*node_num) do // \u5de6\u8fb9\u89d2\u66b4\u529b\n            begin\n                inc(bucket[num[k]]);\n                tmp1:=bucket[num[k]]+times[real[2]-1,num[k]]-times[real[1],num[k]];\n                tmp2:=bucket[now]+times[real[2]-1,now]-times[real[1],now];\n                if (tmp1>tmp2)or((tmp1=tmp2)and(now>num[k])) then now:=num[k];\n            end;\n            for k:=(real[2]-1)*node_num+1 to r do // \u53f3\u8fb9\u89d2\u66b4\u529b\n            begin\n                inc(bucket[num[k]]);\n                tmp1:=bucket[num[k]]+times[real[2]-1,num[k]]-times[real[1],num[k]];\n                tmp2:=bucket[now]+times[real[2]-1,now]-times[real[1],now];\n                if (tmp1>tmp2)or((tmp1=tmp2)and(now>num[k])) then now:=num[k];\n            end;\n            // \u6e05\u7a7a\n            for k:=l to min(n,real[1]*node_num) do bucket[num[k]]:=0;\n            for k:=(real[2]-1)*node_num+1 to r do bucket[num[k]]:=0;\n            writeln(recf[now]);\n        end;\n    end;\nend.\n```\n\n\u5199\u4e86\u597d\u4e45,\u5e0c\u671b\u7ed9\u4e2a\u8d5e\u518d\u8d70 $QwQ$\u3002",
        "postTime": 1542779235,
        "uid": 77760,
        "name": "arfa",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4168 \u3010[Violet]\u84b2\u516c\u82f1\u3011"
    },
    {
        "content": "# \u5206\u5757\n\n\u7b97\u662f\u6bd4\u8f83\u7b80\u5355\u7684\u4e00\u9053\u9ed1\u9898\uff0c\u601d\u8def\u4f9d\u7136\u662f\u5206\u5757\uff0c\u4f46\u662f\u7a0d\u6709\u5dee\u522b\n1. \u628a\u5e8f\u5217a\u5206\u6210t\u5757\uff0c\u6bcf\u6bb5len=n/t\n1. \u5bf9\u4e8e\u8be2\u95ee[l,r]\uff0c\u8bbel\u5904\u4e8etl\u5757\uff0cr\u5904\u4e8etr\u5757\uff0c\u628a[l,r]\u5206\u4e3a\u4e09\u6bb5\uff0c\u5de6\u8fb9\u4e0d\u8db3\u7684+\u4e2d\u95f4\u6574\u7684+\u53f3\u8fb9\u591a\u7684\n1. \u663e\u7136\u5bf9\u4e8e[l,r]\u4e2d\u7684\u4f17\u6570\u53ea\u6709\u4e24\u79cd\u53ef\u80fd \u5728\u4e2d\u95f4\u6574\u5757\u4e2d\u6216\u662f\u4e24\u8fb9\u96f6\u6563\u7684\u6570\n\n\t\u5230\u8fd9\u91cc\u90fd\u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u5176\u4ed6\u9898\u89e3\u8c8c\u4f3c\u4fdd\u5b58\u4e86\u6240\u6709\u4ee5\u5757\u8fb9\u754c\u4e3a\u7aef\u70b9\u7684\u6570\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u53d8\u4e3ant^2\uff0c\u8fd9\u91cc\u63d0\u4f9b\u53e6\u4e00\u79cd\u601d\u8def\u3002\n    \n## Solution\n    1. \u6211\u4eec\u53ea\u8bb0\u5f55f[i][j]\uff0c\u8868\u793ai\u5757\u5230j\u5757\u7684\u4f17\u6570\uff08\u79bb\u6563\u4e4b\u540e\u7684\u503c\uff09\uff0c\u5047\u8bbe\u4f60\u5df2\u7ecf\u77e5\u9053\u600e\u4e48nt\u6c42\u51fa\n    2.\u5bf9\u4e8e\u6574\u533a\u95f4\uff0c\u7b97\u51fa\u8fd9\u4e2a\u4f17\u6570\u4ee5\u53ca\u4ed6\u51fa\u73b0\u7684\u6b21\u6570,\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u65b9\u6cd5\u4e8c\u5206\u8fd9\u4e2a\u4f17\u6570\u5728\u8fd9\u6574\u6bb5\u533a\u95f4\u51fa\u73b0\u6b21\u6570\u3002\n    3.\u5bf9\u4e8e\u96f6\u6563\u7684\u4e24\u8fb9\u7684\u6570\uff0c\u66b4\u529b\u679a\u4e3e\u6bcf\u4e00\u4e2a\uff0c\u4f46\u600e\u4e48\u77e5\u9053\u5b83\u5728[l,r]\u4e4b\u95f4\u51fa\u73b0\u7684\u6b21\u6570\u5462\uff1f\n    \u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u79bb\u6563\u540e\u7684\u6570\u503c\u5efa\u4e00\u4e2avector\uff0c\u8bb0\u5f55\u5b83\u6bcf\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u662f\u4e00\u4f4d\u4e00\u4f4d\u52a0\uff0c\u6bcf\u4e2avector\u5185\u4e00\u5b9a\u662f\u5355\u8c03\u9012\u589e\u7684\uff0c\u7136\u540e\u5047\u8bbe\u4f60\u60f3\u77e5\u9053k\u8fd9\u4e2a\u6570\u5728[l,r]\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5c31\u5728k\u8fd9\u4e2avector\u4e8c\u5206\u7b2c\u4e00\u4e2a>=l\u7684\u6570\uff0c\u6700\u540e\u4e00\u4e2a<=r\u7684\u6570\uff0c\u8fd9\u4e24\u4e2a\u4e0b\u6807\u76f8\u51cf+1\uff0c\u5c31\u662f\u51fa\u73b0\u6b21\u6570\u3002\n    \u4e3e\u4e2a\u4f8b\u5b50\uff0ca={2,3,3,2,4,2,1,1,2,4},\u4f60\u60f3\u6c422\u5728[3,10]\u51fa\u73b0\u6b21\u6570\uff0c2\u7684vector={1,4,6,9}\uff0c\u4e8c\u5206\u51fa\u7b2c\u4e00\u4e2a>=3\u7684\u4e0b\u6807\uff0c\u5f97\u52302,\u6700\u540e\u4e00\u4e2a<=10\u7684\u4e0b\u6807\uff0c\u5f97\u52304,\u8fd9\u6837\u51fa\u73b0\u6b21\u6570=4-2+1=3\n    \u73b0\u5728\u552f\u4e00\u95ee\u9898\u5c31\u662f\u600e\u4e48\u6c42f[i][j]\n    \u53ef\u4ee5\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5757i\uff0c\u4ee5\u8fd9\u4e2a\u5757\u5de6\u7aef\u70b9\u4e3a\u8d77\u70b9\uff0c\u5411\u540e\u5ef6\u4f38\uff0c\u8bb0\u5f55sum[k]\u6570\u7ec4\u8868k\u8fd9\u79cd\u6570\u51fa\u73b0\u6b21\u6570\uff0c\u5047\u8bbe\u5411\u53f3\u5ef6\u4f38\u5230j,sum[c[j]]++,(c[j]\u662fj\u79bb\u6563\u540e\u7684\u503c)\uff0c\u7136\u540e\u7528maxx\u8868\u793a\u51fa\u73b0\u6700\u591a\u7684\u6570\u51fa\u73b0\u6b21\u6570\uff0cans\u8bb0\u5f55\u51fa\u73b0\u6700\u591a\u7684\u6570\uff0c\u6bcf\u6b21\u7528sum[j]\u8ddf\u65b0maxx,ans\u8ddf\u7740\u53d8\uff0c\u6700\u540ef[i][id[j]]=ans\uff08\u8fd9\u4e00\u6b65\u4ed4\u7ec6\u4f53\u4f1a\u4e00\u4e0b\uff0cf[i][id[j]]\u4f1a\u88ab\u8d4b\u503c\u591a\u6b21\u4f46\u6700\u540e\u4e00\u5b9a\u662f\u6700\u4f18\u7684\uff09\n    \u6700\u540e\u8003\u8651\u590d\u6742\u5ea6\u6c42f\u6570\u7ec4nt\uff0c\u6bcf\u6b21\u8be2\u95ee len*log(n)\u6240\u4ee5\u603b\u590d\u6742\u5ea6nt+n/t*log(n),\u6240\u4ee5t=sqrt(n*log(n))\u6700\u4f18.\n   ```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=40010,maxt=1000;\nvector <int> ed[maxn];\nint a[maxn],b[maxn],c[maxn],sum[maxn],f[maxt][maxt],id[maxn],p,len,t;\n//c\u662f\u79bb\u6563\u540e\u7684\u6570\u7ec4\uff0cid\u662fi\u8fd9\u4e2a\u70b9\u6240\u5728\u7f16\u53f7 ,t\u662f\u5757\u6570,len\u662f\u6bcf\u5757\u957f\u5ea6 \nint n,m,l[maxt],r[maxt];\nvoid prework(int x)//\u6c42f[i][j],\u5f53\u524d\u5728x\u8fd9\u4e2a\u5757 \n{\n\tint maxx=0,ans=0;\n\tmemset(sum,0,sizeof(sum));//\u6bcf\u6b21\u90fd\u8981\u6e05\u7a7a \n\tfor (int i=(x-1)*len+1;i<=n;i++)//\u4ece\u8fd9\u4e2a\u5757\u5de6\u7aef\u70b9\u4e00\u4f4d\u4e00\u4f4d\u5411\u540e\u79fb\u52a8 \n\t{\n\t\tsum[c[i]]++;\n\t\tif (maxx<sum[c[i]] ||(maxx==sum[c[i]] && b[c[i]]<b[ans]))//\u5982\u679c\u7f16\u53f7\u5c0f\u4e5f\u53ef\u4ee5 \n\t\t{\n\t\t\tans=c[i];\n\t\t\tmaxx=sum[c[i]];\n\t\t}\n\t\tf[x][id[i]]=ans;\n\t}\n}\n\nint chal(int x,int g,int h)//\u4e8c\u5206\u6700\u5de6\u8fb9\u4e0b\u6807 \n{\n\tint ll=0,rr=ed[x].size()-1;\n\twhile (rr>ll)\n\t{\n\t\tint mid=(ll+rr)>>1;\n\t\tif (ed[x][mid]>=g) rr=mid;\n\t\t\telse ll=mid+1;\n\t}\n\treturn rr;\n}\n\nint chair(int x,int g,int h)//\u4e8c\u5206\u6700\u53f3\u8fb9\u4e0b\u6807 \n{\n\tint ll=0,rr=ed[x].size()-1;\n\twhile (rr>ll)\n\t{\n\t\tint mid=(ll+rr+1)>>1;//\u7ec6\u8282\uff0c\u4e0d\u52a01\u4f1a\u6b7b\u5faa\u73af,\u5982\u679cl=4,r=5,mid=4,ed[x][mid]<=h,l=4\u5c31\u6b7b\u5faa\u73af\u4e86 \n\t\tif (ed[x][mid]<=h) ll=mid;\n\t\t\telse rr=mid-1;\n\t}\n\treturn ll;\n}\n\nint askl(int al,int ar)\n{\n\tint tl=id[al],tr=id[ar];\n\tif (tl+1>=tr-1) {//\u5982\u679c\u8fd9\u6bb5\u592a\u5c0f\uff0c\u4e5f\u5c31\u662f\u6ca1\u6709\u4e2d\u95f4\u6574\u6bb5 \n\t\tint maxx=0,ans=0;\n\t\tfor (int i=al;i<=ar;i++)\n\t\t\t{\n\t\t\t\tint pl=chal(c[i],al,ar),pr=chair(c[i],al,ar);\n\t\t\t\tif (maxx<pr-pl+1 || (maxx==pr-pl+1 && b[c[i]]<b[ans]))\n\t\t\t\t{\n\t\t\t\t\tans=c[i];\n\t\t\t\t\tmaxx=pr-pl+1;\n\t\t\t\t} \n\t\t\t}\n\t\treturn b[ans];\n\t}\n\tint ans=f[tl+1][tr-1];//\u4e2d\u95f4\u6574\u5757\u7684\u4f17\u6570 \n\tint maxx=chair(ans,l[tl+1],r[tr-1])-chal(ans,l[tl+1],r[tr-1])+1;//ans\u7684\u51fa\u73b0\u6b21\u6570 \n\tfor (int i=al;i<=r[tl];i++)//\u5904\u7406\u5de6\u8fb9\u96f6\u6563\u5757 \n\t{\n\t\tint pl=chal(c[i],al,ar),pr=chair(c[i],al,ar);\n\t\tif (maxx<pr-pl+1 || (maxx==pr-pl+1 && b[c[i]]<b[ans]))\n\t\t{\n\t\t\tans=c[i];\n\t\t\tmaxx=pr-pl+1;\n\t\t} \n\t}\n\tfor (int i=l[tr];i<=ar;i++)//\u5904\u7406\u53f3\u8fb9\u96f6\u6563\u5757 \n\t{\n\t\tint pl=chal(c[i],al,ar),pr=chair(c[i],al,ar);\n\t\tif (maxx<pr-pl+1 || (maxx==pr-pl+1 && b[c[i]]<b[ans]))\n\t\t{\n\t\t\tans=c[i];\n\t\t\tmaxx=pr-pl+1;\n\t\t} \n\t}\n\treturn b[ans];\n}\n\n\nint main()\n{\n\tmemset(a,0,sizeof(a));\n\tmemset(f,0,sizeof(f));\n\tscanf(\"%d %d\",&n,&m);\n\tfor (int i=1;i<=n;i++) scanf(\"%d\",&a[i]),b[i]=a[i];\n\tt=sqrt(n*log(n));\n\tlen=n/t; \n\tfor (int i=1;i<=t;i++)\n\t{\n\t\tif (i*len>n) break;//\u5757\u592a\u5927\u5c31\u4e0d\u8981 \n\t\tl[i]=(i-1)*len+1;\n\t\tr[i]=i*len;\n\t}\n\tif (r[t]<n) {\n\t\tt++;l[t]=r[t-1]+1;r[t]=n;//\u6700\u540e\u4e00\u6bb5\u72ec\u7acb\u6210\u5757 \n\t}\n\tfor (int i=1;i<=t;i++)\n\t\tfor (int j=l[i];j<=r[i];j++)\n\t\t\tid[j]=i;\n\tsort(b+1,b+n+1);\n\tint q=unique(b+1,b+n+1)-(b+1);\n\tfor (int i=1;i<=n;i++)\n\t\tc[i]=lower_bound(b+1,b+q+1,a[i])-b;//\u79bb\u6563\u5316\uff0c\u8fd9\u91cc\u4f7f\u7528\u6392\u5e8f\u540e\u7b2c\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e\u505a\u79bb\u6563\u503c \n\tfor (int i=1;i<=n;i++)\n\t\ted[c[i]].push_back(i);//\u6bcf\u79cd\u6570\u52a0\u4e0b\u6807 \n\tfor (int i=1;i<=t;i++)\n\t\tprework(i);\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tint l0,r0;\n\t\tscanf(\"%d %d\",&l0,&r0);\n\t\tl0=(l0+p-1)%n+1;r0=(r0+p-1)%n+1;//\u5f3a\u5236\u5728\u7ebf \n\t\tif (l0>r0) swap(l0,r0);\n\t\tp=askl(l0,r0);\n\t\tprintf(\"%d\\n\",p);\n\t}\n\treturn 0;\n}\n```\n//\u7ec6\u8282\u8fd8\u662f\u86ee\u591a\u7684\uff0c\u795d\u8bf8\u541b\u597d\u8fd0",
        "postTime": 1533892840,
        "uid": 5912,
        "name": "laduiw",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4168 \u3010[Violet]\u84b2\u516c\u82f1\u3011"
    },
    {
        "content": "## \u5206\u5757\n\n\u63d0\u4f9b\u51e0\u4e2a\u5fc5\u987b\u8981\u77e5\u9053\u7684\u6ce8\u610f\u4e8b\u9879\u3002\n\n\u9996\u5148\u66b4\u529b\u7edf\u8ba1\u533a\u95f4\u4f17\u6570\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u63a5\u8fd1$O(n^2)$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u591f\u4f18\u79c0\uff0c\u6240\u4ee5\u6211\u4eec ~~\u9047\u4e8b\u4e0d\u51b3\u5148\u5206\u5757~~\u8003\u8651\u5206\u6bb5\u5904\u7406\u3002\u6570\u636e\u8303\u56f4\u6bd4\u8f83\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u79bb\u6563\u5316\u3002\u6240\u8c13\u79bb\u6563\u5316\u5c31\u662f\u5c06\u6570\u636e\u6392\u597d\u5e8f\u540e\u7528ta\u7684\u6392\u540d\u6765\u4ee3\u66ffta\u672c\u8eab\uff08\u9700\u8981\u53e6\u5f00\u4e00\u4e2a\u6570\u7ec4\uff09\u3002$nlog(n)$\u65f6\u95f4\u5185\u5c31\u80fd\u5b8c\u6210\u3002\n\n```cpp\nvoid yych()//\u79bb\u6563\u5316 \n{\n\tlen=sqrt(n);\n\tmemset(L,0x3f,sizeof(L));\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tpos[i]=(i-1)/len+1;\n\t\tL[pos[i]]=min(L[pos[i]],i);\n\t\tR[pos[i]]=max(R[pos[i]],i);\n\t\ta[i]=read();\n\t\tb[i]=a[i];\t\n\t}\n\tsort(b+1,b+1+n);\n\ttot=unique(b+1,b+1+n)-b-1;\n\tfor(int i=1;i<=n;++i)a[i]=lower_bound(b+1,b+1+tot,a[i])-b;\n}\n```\n\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u5206\u5757\u9884\u5904\u7406\u3002\u6211\u4eec\u9996\u5148\u53ef\u4ee5\u5904\u7406\u51fa\u6bcf\u4e2a\u6570\u5b57\u5728\u5757\u4e2d\u51fa\u73b0\u6b21\u6570\u7684\u524d\u7f00\u548c\u3002\u679a\u4e3e\u6bcf\u4e00\u4e2a\u6570\u662f$O(n)$,\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5757\u65f6\u95f4\u662f$O(\\sqrt n)$,\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u5c31\u662f$O(n \\sqrt n)$\u3002\u7136\u540e\u6211\u4eec\u8fd8\u53ef\u4ee5\u5904\u7406\u51fa\u4ece\u7b2c$l$\u4e2a\u5757\u5230\u7b2c$r$\u4e2a\u5757\u7684\u533a\u95f4\u4f17\u6570\u3002\u6211\u4eec\u679a\u4e3e$l$\u7684\u590d\u6742\u5ea6\u662f$O(\\sqrt n)$,\u679a\u4e3e$r$\u7684\u590d\u6742\u5ea6\u662f$O(\\sqrt n)$,\u7136\u540e\u679a\u4e3e\u5757\u5185\u6bcf\u4e00\u4e2a\u6570\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u662f$O(\\sqrt n)$,\u603b\u5171\u5c31\u662f$O(n\\sqrt n)$.\n\n```cpp\nvoid Treaker()//\u5206\u5757\u9884\u5904\u7406 \n{\n\tfor(int i=1;i<=n;++i)\n\tfor(int j=pos[i];j<=pos[n];++j)s[j][a[i]]++;\n\t\n\tfor(int i=1;i<=pos[n];++i)\n\t{\n\t\tmemset(tong,0,sizeof(tong));\n\t\tfor(int j=i;j<=pos[n];++j)\n\t\t{\n\t\t\tp[i][j]=p[i][j-1];\n\t\t\tfor(int k=L[j];k<=R[j];++k)\n\t\t\t{\n\t\t\t\ttong[a[k]]++;\n\t\t\t\tif((tong[a[k]]>tong[p[i][j]])||(tong[a[k]]==tong[p[i][j]]&&a[k]<p[i][j]))p[i][j]=a[k];\n\t\t\t}\n\t\t}\n\t}\n\tmemset(tong,0,sizeof(tong));\n}\n```\n\n\u5176\u4e2d\u975e\u5e38\u91cd\u8981\u7684\u5c31\u662f\n```cpp\np[i][j]=p[i][j-1];\n```\n\u56e0\u4e3a\u6211\u4eec\u9996\u5148\u9700\u8981\u7ee7\u627f\u539f\u5148\u7684\u533a\u95f4\u4f17\u6570\uff0c\u7136\u540e\u624d\u80fd\u591f\u6bd4\u8f83\u66f4\u65b0\u3002\u5426\u5219\u7684\u8bdd\u5c31\u4f1a \u542c\u53d6WA\u58f0\u4e00\u7247,\u6211\u5c31\u662f\u6709\u5f88\u591a\u6b21\u6302\u5728\u8fd9\u91cc\u7684 TAT.\n\n\u7136\u540e\u5c31\u662f\u8be2\u95ee\u64cd\u4f5c\uff0c\u6211\u4eec\u6839\u636e\u5206\u5757\u76f4\u89c9\uff0c\u5c31\u5e94\u8be5\u662f\u6b8b\u5757\u66b4\u529b\u641e\uff0c\u6574\u5757\u9a9a\u64cd\u4f5c\u3002\u6240\u4ee5\u6211\u4eec\u5bf9\u4e8e$pos_r- pos_l \\le2$\u7684\u60c5\u51b5\u76f4\u63a5\u66b4\u529b\u5c31OK\u4e86\u3002\n```cpp\nif(pos[r]-pos[l]<=2)\n\t{\n\t\tint res=0;\n\t\tfor(int i=l;i<=r;++i)\n\t\t{\n\t\t\t++tong[a[i]];\n\t\t\tif(tong[a[i]]>tong[res]||(tong[a[i]]==tong[res]&&a[i]<res))res=a[i];\n\t\t}\n\t\tfor(int i=l;i<=r;++i)tong[a[i]]=0;\n\t\treturn res;\n\t}\n```\n\n\n\u5bf9\u4e8e\u5176\u4ed6\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u77e5\u9053\u6211\u4eec\u6240\u6c42\u7684\u7b54\u6848\uff0c\u8981\u4e48\u662f\u6574\u5757\u91cc\u7684\u4f17\u6570\uff0c\u8981\u4e48\u662f\u6b8b\u5757\u91cc\u7684\u6570\u5b57\u3002\u5bf9\u4e8e\u6b8b\u5757\u91cc\u7684\u6570\u5b57\uff0c\u4ee5\u4e3a\u6211\u4eec\u4e4b\u524d\u5df2\u7ecf\u5904\u7406\u8fc7\u4e86\u6574\u5757\u7684\u6570\u5b57\u51fa\u73b0\u7684\u524d\u7f00\u548c\uff0c\u6240\u4ee5\u6211\u4eec\u80fd\u7edf\u8ba1\u51fa\u6b8b\u5757\u4e2d\u7684\u6570\u5b57\u5728\u8be2\u95ee\u533a\u95f4\u91cc\u7684\u51fa\u73b0\u6b21\u6570\u3002\u5bf9\u4e8e\u6574\u5757\u4e2d\u7684\u4f17\u6570\uff0c\u6211\u4eec\u4e5f\u80fd\u5728$O(\\sqrt n)$\u590d\u6742\u5ea6\u5185\u7edf\u8ba1\u51fa ta\u5728\u6b8b\u5757\u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u5f97\u5230\u6211\u4eec\u8be2\u95ee\u533a\u95f4\u91cc\u4f17\u6570\u3002\n\n```cpp\nint res=0;\n\tfor(int i=l;i<=R[pos[l]];++i)if(!tong[a[i]])tong[a[i]]+=s[pos[r]-1][a[i]]-s[pos[l]][a[i]];\n\tfor(int i=L[pos[r]];i<=r;++i)if(!tong[a[i]])tong[a[i]]+=s[pos[r]-1][a[i]]-s[pos[l]][a[i]];\n\tfor(int i=l;i<=R[pos[l]];++i)\n\t{\n\t\t++tong[a[i]];\n\t\tif(tong[a[i]]>tong[res]||(tong[a[i]]==tong[res]&&a[i]<res))res=a[i];\n\t}\n\tfor(int i=L[pos[r]];i<=r;++i)\n\t{\n\t\t++tong[a[i]];\n\t\tif(tong[a[i]]>tong[res]||(tong[a[i]]==tong[res]&&a[i]<res))res=a[i];\n\t}\n\tint k=p[pos[l]+1][pos[r]-1];\n\tint lin=s[pos[r]-1][k]-s[pos[l]][k];\n\tfor(int i=l;i<=R[pos[l]];++i)lin+=(a[i]==k);\n\tfor(int i=L[pos[r]];i<=r;++i)lin+=(a[i]==k);\n\tif(lin>tong[res]||(lin==tong[res]&&k<res))res=k;\n\t\n\tfor(int i=l;i<=R[pos[l]];++i)tong[a[i]]=0;\n\tfor(int i=L[pos[r]];i<=r;++i)tong[a[i]]=0;\n\treturn res;\n```\n\n\n\u8fd8\u6709\u4e00\u70b9\u5c31\u662f\u6211\u4eec\u5728\u7edf\u8ba1\u6bcf\u4e2a\u6570\u5b57\u51fa\u73b0\u7684\u6b21\u6570\u7684\u65f6\u5019\u6211\u4eec\u9700\u8981\u5f00\u4e00\u4e2a\u6876\u6570\u7ec4\uff0c\u6211\u4eec\u6bcf\u6b21\u7528\u5b8c\u4e86\u4e4b\u540e\u4e0d\u7528\u5168\u90e8\u6e05\u7a7a\uff0c\u53ea\u7528\u5c06\u6211\u4eec\u4f7f\u7528\u8fc7\u7684\u6e05\u7a7a\u4e00\u4e0b\u5c31\u73c2\u4ee5\u5566\u3002\u5b9e\u6d4b\u53ef\u4ee5\u7701\u6389\u5f88\u5927\u7684\u65f6\u95f4\u3002\n\n\u6700\u540e\u8bf4\u4e00\u4e0b\u6ce8\u610f\u4e8b\u9879\uff1a\n\n1.\u6ce8\u610f\u79bb\u6563\u5316\uff0c\u5426\u5219\u76f4\u63a5RE\u5230\u539f\u5730\u8d77\u98de\u3002\n\n2.\u6ce8\u610fp\u6570\u7ec4\u7684\u8f6c\u79fb\uff0c\u5426\u5219WA\u5230\u6000\u7591\u4eba\u751f\u3002\n\n3.\u6ce8\u610f\u5206\u5757\u7684\u8fb9\u754c\uff0c\u5426\u5219TLE\u5230\u76f4\u63a5\u539f\u5730\u7206\u70b8\u3002\n\n\u53e6\u5916\u542c\u8bf4\u5f00$n^{\\frac {1} {3}}$\u4e2a\u5757\u4f1a\u66f4\u5feb\u4e00\u4e9b\uff0c\u54ea\u4f4d\u5927\u795e\u80fd\u7ed9\u7a9d\u89e3\u91ca\u89e3\u91ca?QAQ\n\n\u6700\u540e\u732e\u4e0a\u7a9d\u4e11\u964b\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nint n,m,tot,len,l,r,ans;\nconst int N=40010,M=50010,K=510;\nint a[N],b[N],pos[N],s[K][N],L[K],R[K],p[K][K],tong[N];\nint read()\n{\n\tchar ch;int x=0,f=1;\n\twhile(!isdigit(ch=getchar()))\n\t{(ch=='-')&&(f=-f);}\n\twhile(isdigit(ch))\n\t{x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n    return x*f;\n}\nint cnt=0;\nvoid yych()//\u79bb\u6563\u5316 \n{\n\tlen=sqrt(n);\n\tmemset(L,0x3f,sizeof(L));\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tpos[i]=(i-1)/len+1;\n\t\tL[pos[i]]=min(L[pos[i]],i);\n\t\tR[pos[i]]=max(R[pos[i]],i);\n\t\ta[i]=read();\n\t\tb[i]=a[i];\t\n\t}\n\tsort(b+1,b+1+n);\n\ttot=unique(b+1,b+1+n)-b-1;\n\tfor(int i=1;i<=n;++i)a[i]=lower_bound(b+1,b+1+tot,a[i])-b;\n}\nvoid Treaker()//\u5206\u5757\u9884\u5904\u7406 \n{\n\tfor(int i=1;i<=n;++i)\n\tfor(int j=pos[i];j<=pos[n];++j)s[j][a[i]]++;\n\t\n\tfor(int i=1;i<=pos[n];++i)\n\t{\n\t\tmemset(tong,0,sizeof(tong));\n\t\tfor(int j=i;j<=pos[n];++j)\n\t\t{\n\t\t\tp[i][j]=p[i][j-1];\n\t\t\tfor(int k=L[j];k<=R[j];++k)\n\t\t\t{\n\t\t\t\ttong[a[k]]++;\n\t\t\t\tif((tong[a[k]]>tong[p[i][j]])||(tong[a[k]]==tong[p[i][j]]&&a[k]<p[i][j]))p[i][j]=a[k];\n\t\t\t}\n\t\t}\n\t}\n\tmemset(tong,0,sizeof(tong));\n}\nint ask(int l,int r)\n{\n\tif(pos[r]-pos[l]<=2)\n\t{\n\t\tint res=0;\n\t\tfor(int i=l;i<=r;++i)\n\t\t{\n\t\t\t++tong[a[i]];\n\t\t\tif(tong[a[i]]>tong[res]||(tong[a[i]]==tong[res]&&a[i]<res))res=a[i];\n\t\t}\n\t\tfor(int i=l;i<=r;++i)tong[a[i]]=0;\n\t\treturn res;\n\t}\n\tint res=0;\n\tfor(int i=l;i<=R[pos[l]];++i)if(!tong[a[i]])tong[a[i]]+=s[pos[r]-1][a[i]]-s[pos[l]][a[i]];\n\tfor(int i=L[pos[r]];i<=r;++i)if(!tong[a[i]])tong[a[i]]+=s[pos[r]-1][a[i]]-s[pos[l]][a[i]];\n\tfor(int i=l;i<=R[pos[l]];++i)\n\t{\n\t\t++tong[a[i]];\n\t\tif(tong[a[i]]>tong[res]||(tong[a[i]]==tong[res]&&a[i]<res))res=a[i];\n\t}\n\tfor(int i=L[pos[r]];i<=r;++i)\n\t{\n\t\t++tong[a[i]];\n\t\tif(tong[a[i]]>tong[res]||(tong[a[i]]==tong[res]&&a[i]<res))res=a[i];\n\t}\n\tint k=p[pos[l]+1][pos[r]-1];\n\tint lin=s[pos[r]-1][k]-s[pos[l]][k];\n\tfor(int i=l;i<=R[pos[l]];++i)lin+=(a[i]==k);\n\tfor(int i=L[pos[r]];i<=r;++i)lin+=(a[i]==k);\n\tif(lin>tong[res]||(lin==tong[res]&&k<res))res=k;\n\t\n\tfor(int i=l;i<=R[pos[l]];++i)tong[a[i]]=0;\n\tfor(int i=L[pos[r]];i<=r;++i)tong[a[i]]=0;\n\treturn res;\n}\nint main()\n{\n\tcin>>n>>m;\n\tyych();\n\tTreaker();\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tl=read();r=read();\n\t\tl=(l+ans-1)%n+1;r=(r+ans-1)%n+1;\n\t\tif(l>r)swap(l,r);\n\t\tans=b[ask(l,r)];\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n/*\n6 3 \n1 2 3 2 1 2 \n1 5 \n3 6 \n1 5\n*/\n```\n\n",
        "postTime": 1569123169,
        "uid": 153843,
        "name": "wljss",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4168 \u3010[Violet]\u84b2\u516c\u82f1\u3011"
    },
    {
        "content": "[My Blog](https://www.cnblogs.com/Jackpei/p/11105253.html)\n\n\u8fd9\u9053\u9898\u7b97\u662f\u597d\u597d\u5199\u4e86\u3002\u5199\u4e86\u4e09\u79cd\u65b9\u6cd5\u3002\n\n\u6ce8:$pos[i]$\u8868\u793a$i$\u5c5e\u4e8e\u7b2c$pos[i]$\u5757\u3002\n\n###### upd\uff1a\u4ee3\u7801\u5df2\u7ecf\u683c\u5f0f\u5316\n------------\n\n\n\u7b2c\u4e00\u79cd\u662f\u7edf\u8ba1\u6240\u6709\u53ef\u80fd\u7684\u5757\u7ec4\u6210\u7684\u533a\u95f4\u4e2d\uff08\u7b2ci\u5757\u5230\u7b2cj\u5757\uff09,\u6bcf\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u8bb0\u505a$f[i][j][k]$\uff0c\u548c\u6240\u6709\u53ef\u80fd\u7684\u5757\u7ec4\u6210\u7684\u533a\u95f4\u7684\u7b54\u6848\uff0c\u8bb0\u505a$h[i][j]$\u3002\n\n\u7136\u540e\u6bcf\u6b21\u5148\u628a\u6574\u5757\u7684\u7b54\u6848\u4f5c\u4e3a\u521d\u59cb\u7b54\u6848\uff0c\u7136\u540e\u5bf9\u4e8e\u6563\u5757\u4e2d\u7684\u6bcf\u4e2a\u503c$vl$\uff0c\u66b4\u529b\u4fee\u6539\u5bf9\u5e94\u7684$f[i][j][vl]$,\u66f4\u65b0\u7b54\u6848\u3002\n\n\u5f53\u5757\u957f\u53d6$N^\\frac{2}{3}$,\u65f6\u95f4\u590d\u6742\u5ea6$O(N^\\frac{5}{3})$\u7ea7\u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <cmath>\n#include <cctype>\n#include <cstdlib>\n#include <vector>\n#include <queue>\n#include <map>\n#include <set>\n#define ull unsigned long long\n#define ll long long\n#define R register int\n#define pause (for (R i = 1; i <= 10000000000; ++i))\n#define OUT freopen(\"out.out\", \"w\", stdout);\nusing namespace std;\nnamespace Fread\n{\nstatic char B[1 << 15], *S = B, *D = B;\n#define getchar() (S == D && (D = (S = B) + fread(B, 1, 1 << 15, stdin), S == D) ? EOF : *S++)\ninline int g()\n{\n  R ret = 0, fix = 1;\n  register char ch;\n  while (!isdigit(ch = getchar()))\n    fix = ch == '-' ? -1 : fix;\n  do\n    ret = ret * 10 + (ch ^ 48);\n  while (isdigit(ch = getchar()));\n  return ret * fix;\n}\ninline bool isempty(const char &ch) { return ch <= 36 || ch >= 127; }\ninline void gs(char *s)\n{\n  register char ch;\n  while (isempty(ch = getchar()))\n    ;\n  do\n    *s++ = ch;\n  while (!isempty(ch = getchar()));\n}\n} // namespace Fread\nusing Fread::g;\nusing Fread::gs;\nconst int N = 40010, M = 37;\nint n, m, tot, T, lst;\nint f[M][M][N], h[M][M], vl[N], a[N], b[N], pos[N];\ninline void PRE()\n{\n  R mx = 0, ans = 0;\n  for (R i = 1; i <= n; ++i)\n    pos[i] = (i - 1) / T + 1;\n  for (R j = 1, L = pos[n]; j <= L; ++j, mx = 0, ans = 0)\n    for (R t = j; t <= L; ++t)\n    {\n      memcpy(f[j][t], f[j][t - 1], sizeof(f[j][t - 1]));\n      for (R i = (t - 1) * T + 1, LL = min(t * T, n); i <= LL; ++i)\n        ++f[j][t][a[i]];\n      for (R i = tot; i; --i)\n        if (f[j][t][i] >= mx)\n          mx = f[j][t][i], ans = i;\n      h[j][t] = ans;\n    }\n}\nsigned main()\n{\n#ifdef JACK\n  freopen(\"NOIPAK++.in\", \"r\", stdin);\n  OUT;\n#endif\n  n = g(), m = g(), T = n / pow(n, 1.0 / 3);\n  for (R i = 1; i <= n; ++i)\n    a[i] = g();\n  memcpy(b, a, sizeof(a));\n  sort(b + 1, b + n + 1);\n  tot = unique(b + 1, b + n + 1) - b - 1;\n  for (R i = 1; i <= n; ++i)\n    a[i] = lower_bound(b + 1, b + tot + 1, a[i]) - b;\n  memcpy(vl, b, sizeof(int) * (tot + 1));\n  PRE();\n  for (R i = 1, l, r; i <= m; ++i)\n  {\n    R mx = 0, ans = 0;\n    l = (g() + lst - 1) % n + 1, r = (g() + lst - 1) % n + 1;\n    l > r ? swap(l, r) : (void)0;\n    R p = pos[l] + 1, q = pos[r] - 1;\n    ans = h[p][q], mx = f[p][q][ans];\n    if (pos[l] == pos[r])\n    {\n      for (R i = l; i <= r; ++i)\n      {\n        ++f[p][q][a[i]];\n        if (f[p][q][a[i]] > mx || (f[p][q][a[i]] == mx && a[i] < ans))\n          mx = f[p][q][a[i]], ans = a[i];\n      }\n      for (R i = l; i <= r; ++i)\n        --f[p][q][a[i]];\n    }\n    else\n    {\n      ans = h[p][q], mx = f[p][q][ans];\n      for (R i = l, L = pos[l] * T; i <= L; ++i)\n      {\n        ++f[p][q][a[i]];\n        if (f[p][q][a[i]] > mx || (f[p][q][a[i]] == mx && a[i] < ans))\n          mx = f[p][q][a[i]], ans = a[i];\n      }\n      for (R i = (pos[r] - 1) * T + 1; i <= r; ++i)\n      {\n        ++f[p][q][a[i]];\n        if (f[p][q][a[i]] > mx || (f[p][q][a[i]] == mx && a[i] < ans))\n          mx = f[p][q][a[i]], ans = a[i];\n      }\n      for (R i = l, L = pos[l] * T; i <= L; ++i)\n        --f[p][q][a[i]];\n      for (R i = (pos[r] - 1) * T + 1; i <= r; ++i)\n        --f[p][q][a[i]];\n    }\n    printf(\"%d\\n\", lst = vl[ans]);\n  }\n}\n    \n\n```\n\n\n------------\n                                            \n                                            \n\u7b2c\u4e8c\u79cd\u662f\u9884\u5904\u7406\u51fa\u6240\u6709\u53ef\u80fd\u7684\u5757\u7ec4\u6210\u7684\u533a\u95f4\u4e2d\uff08\u7b2c$i$\u5757\u5230\u7b2c$j$\u5757\uff09\u7684\u7b54\u6848$f[i][j]$,\u5e76\u4e14\u62ff\u4e00\u4e2a$vector$\u5b58\u6bcf\u4e2a\u6570$vl$\u51fa\u73b0\u7684\u4f4d\u7f6e$s[vl][1...n]$\u3002\n\n\u7b54\u6848\u521d\u59cb\u5316\u4e3a\u6574\u5757\u7684\u7b54\u6848\uff0c\u7136\u540e\u5bf9\u4e8e\u6563\u5757\u4e2d\u7684\u6bcf\u4e2a\u6570$vl$,\u5728$s[vl]$\u4e2d\u4e8c\u5206\u51fa$[l,r]$\u7684\u6700\u5c0f\u548c\u6700\u5927\u7684\u4f4d\u7f6e\u7684\u4e0b\u6807\uff0c\u76f8\u51cf\u5c31\u662f$[l,r]$\u6709\u591a\u5c11\u4e2a$vl$,\u7136\u540e\u66f4\u65b0\u7b54\u6848\u3002\n\n\u5f53\u5757\u957f\u53d6$\\sqrt{\\frac{N}{logN}}$,\u65f6\u95f4\u590d\u6742\u5ea6$O(N\\sqrt{NlogN})$\u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <cmath>\n#include <cctype>\n#include <cstdlib>\n#include <vector>\n#include <queue>\n#include <map>\n#include <set>\n#define ull unsigned long long\n#define ll long long\n#define R register int\n#define pause (for (R i = 1; i <= 10000000000; ++i))\n#define OUT freopen(\"out.out\", \"w\", stdout);\nusing namespace std;\nnamespace Fread\n{\nstatic char B[1 << 15], *S = B, *D = B;\n#define getchar() (S == D && (D = (S = B) + fread(B, 1, 1 << 15, stdin), S == D) ? EOF : *S++)\ninline int g()\n{\n  R ret = 0, fix = 1;\n  register char ch;\n  while (!isdigit(ch = getchar()))\n    fix = ch == '-' ? -1 : fix;\n  do\n    ret = ret * 10 + (ch ^ 48);\n  while (isdigit(ch = getchar()));\n  return ret * fix;\n}\ninline bool isempty(const char &ch) { return ch <= 36 || ch >= 127; }\ninline void gs(char *s)\n{\n  register char ch;\n  while (isempty(ch = getchar()))\n    ;\n  do\n    *s++ = ch;\n  while (!isempty(ch = getchar()));\n}\n} // namespace Fread\nusing Fread::g;\nusing Fread::gs;\nconst int N = 40010;\nint n, m, T, tot, lst;\nvector<int> s[N];\n#define pb push_back\nint f[10010][10010], cnt[N], p[N], pos[N], a[N], b[N], vl[N];\ninline void PRE(int p)\n{\n  R ans = 0, mx = 0;\n  memset(cnt, 0, sizeof(cnt));\n  for (R t = p, lim = pos[n]; t <= lim; ++t)\n  {\n    for (R i = (t - 1) * T + 1, lim = min(n, t * T); i <= lim; ++i)\n    {\n      if (++cnt[a[i]] > mx || (cnt[a[i]] == mx && a[i] < ans))\n        mx = cnt[a[i]], ans = a[i];\n    }\n    f[p][t] = ans;\n  }\n}\ninline int calc(int l, int r, int x) { return upper_bound(s[x].begin(), s[x].end(), r) - lower_bound(s[x].begin(), s[x].end(), l); }\ninline int solve(int l, int r)\n{\n  R mx = 0, ret = 0;\n  if (pos[l] == pos[r])\n  {\n    memset(cnt, 0, sizeof(cnt));\n    for (R i = l; i <= r; ++i)\n      if (++cnt[a[i]] > mx || (cnt[a[i]] == mx && a[i] < ret))\n        ret = a[i], mx = cnt[a[i]];\n  }\n  else\n  {\n    ret = f[pos[l] + 1][pos[r] - 1], mx = calc(l, r, ret);\n    for (R i = l, lim = pos[l] * T; i <= lim; ++i)\n    {\n      R t = calc(l, r, a[i]);\n      if (t > mx || (t == mx && a[i] < ret))\n        ret = a[i], mx = t;\n    }\n    for (R i = (pos[r] - 1) * T + 1; i <= r; ++i)\n    {\n      R t = calc(l, r, a[i]);\n      if (t > mx || (t == mx && a[i] < ret))\n        ret = a[i], mx = t;\n    }\n  }\n  return ret;\n}\nsigned main()\n{\n#ifdef JACK\n  freopen(\"NOIPAK++.in\", \"r\", stdin);\n  OUT;\n#endif\n  n = g(), m = g(); //,T=n/sqrt(n*log2(n));\n  T = qpow(n, 1.0 / 4);\n  for (R i = 1; i <= n; ++i)\n    a[i] = g();\n  memcpy(b, a, sizeof(a));\n  sort(b + 1, b + n + 1);\n  tot = unique(b + 1, b + n + 1) - b - 1;\n  memcpy(vl, b, sizeof(int) * (tot + 1));\n  for (R i = 1; i <= n; ++i)\n    a[i] = lower_bound(b + 1, b + tot + 1, a[i]) - b, s[a[i]].pb(i);\n  for (R i = 1; i <= n; ++i)\n    pos[i] = (i - 1) / T + 1;\n  for (R i = 1; i <= pos[n]; ++i)\n    PRE(i);\n  for (R i = 1, l, r; i <= m; ++i)\n  {\n    l = (g() + lst - 1) % n + 1, r = (g() + lst - 1) % n + 1;\n    l > r ? swap(l, r) : (void)0;\n    printf(\"%d\\n\", lst = vl[solve(l, r)]);\n  }\n}\n\n\n```\n\n\n------------\n \n  \n\u7b2c\u4e09\u79cd\u6309\u7406\u8bf4\u662f\u590d\u6742\u5ea6\u6700\u4f18\u79c0\u7684\uff0c\u4f46\u662f\u8dd1\u7684\u4e0d\u662f\u5f88\u5feb$qwq$\u3002\n\n\u4f46\u662f\u8fd8\u662f\u6073\u8bf7\u5927\u4f6c\u4eec\u5e2e\u6211\u770b\u770b\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u6162$qwq$\n\n\u540c\u7b2c\u4e8c\u79cd\uff0c\u9884\u5904\u7406\u51fa\u6240\u6709\u53ef\u80fd\u7684\u5757\u7ec4\u6210\u7684\u533a\u95f4\u4e2d\uff08\u7b2ci\u5757\u5230\u7b2cj\u5757\uff09\u7684\u7b54\u6848$f[i][j]$,\u5e76\u4e14\u62ff\u4e00\u4e2a$vector$\u5b58\u6bcf\u4e2a\u6570$vl$\u51fa\u73b0\u7684\u4f4d\u7f6e$s[vl][1...n]$\u3002\n\n\u7136\u540e\u9884\u5904\u7406$a[i]$\u662f\u6574\u4e2a\u6570\u5217\u4e2d\u7684\u7b2c\u51e0\u4e2a$a[i]$,\u51fa\u7b2c$1$\u5230\u7b2c$i$\u5757\u4e2d\u6700\u9760\u540e\u7684$vl$\u662f\u7b2c\u51e0\u4e2a$vl$\uff0c\u8bb0\u4e3a$d[i][vl]$\uff0c\u9884\u5904\u7406\u51fa\u7b2c$n$\u5757\u5230\u7b2c$i$\u5757\u4e2d\u6700\u9760\u524d\u7684$vl$\u662f\u7b2c\u51e0\u4e2a$vl$,\u8bb0\u4e3a$h[i][vl]$\u3002\n\n\u5bf9\u4e8e\u5de6\u8fb9\u6563\u5757\u4e2d\u7684$vl$\uff0c\u67e5\u4e00\u4e0b$d[pos[r]-1][vl]$,\u548c\u53f3\u8fb9\u6563\u5757\u4e2d\u662f\u5426\u6709\u66f4\u9760\u540e\u7684$vl$(\u53ef\u4ee5\u4e8b\u5148\u7528\u4e00\u4e2a\u6570\u7ec4\u5b58\u8d77\u6765)\uff0c\u7136\u540e\u53ef\u4ee5\u6c42\u51fa\u8fd9\u4e2a\u533a\u95f4\u6709\u591a\u5c11\u4e2a$vl$(\u6bcf\u4e00\u4e2a$vl$\u662f\u7b2c\u51e0\u4e2a$vl$\u5df2\u7ecf\u77e5\u9053\u4e86),\u66f4\u65b0\u7b54\u6848\u3002\n\n\u5f53\u5757\u957f\u53d6$\\sqrt{n}$\u65f6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(N\\sqrt{N})$\u7ea7(\u4e0d\u77e5\u9053\u63a8\u6ca1\u63a8\u9519)\u3002\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <cmath>\n#include <cctype>\n#include <cstdlib>\n#include <vector>\n#include <queue>\n#include <map>\n#include <set>\n#define ull unsigned long long\n#define ll long long\n#define R register int\n#define pause (for (R i = 1; i <= 10000000000; ++i))\n#define OUT freopen(\"out.out\", \"w\", stdout);\nusing namespace std;\nnamespace Fread\n{\nstatic char B[1 << 15], *S = B, *D = B;\n#define getchar() (S == D && (D = (S = B) + fread(B, 1, 1 << 15, stdin), S == D) ? EOF : *S++)\ninline int g()\n{\n  R ret = 0, fix = 1;\n  register char ch;\n  while (!isdigit(ch = getchar()))\n    fix = ch == '-' ? -1 : fix;\n  do\n    ret = ret * 10 + (ch ^ 48);\n  while (isdigit(ch = getchar()));\n  return ret * fix;\n}\ninline bool isempty(const char &ch) { return ch <= 36 || ch >= 127; }\ninline void gs(char *s)\n{\n  register char ch;\n  while (isempty(ch = getchar()))\n    ;\n  do\n    *s++ = ch;\n  while (!isempty(ch = getchar()));\n}\n} // namespace Fread\nusing Fread::g;\nusing Fread::gs;\nconst int N = 40010, M = 1000;\nint n, m, T, tot, lst;\nvector<int> s[N];\n#define pb push_back\nint f[M][M], cnt[N], P[N], pos[N], a[N], b[N], vl[N], h[M][N], d[M][N], c[M][M];\ninline void PRE(int p)\n{\n  R ans = 0, mx = 0;\n  memset(cnt, 0, sizeof(cnt));\n  for (R t = p, lim = pos[n]; t <= lim; ++t)\n  {\n    for (R i = (t - 1) * T + 1, lim = min(n, t * T); i <= lim; ++i)\n    {\n      if (++cnt[a[i]] > mx || (cnt[a[i]] == mx && a[i] < ans))\n        mx = cnt[a[i]], ans = a[i];\n    }\n    f[p][t] = ans, c[p][t] = mx;\n  }\n}\ninline int solve(int l, int r)\n{\n  R mx = 0, ret = 0, p = pos[l] + 1, q = pos[r] - 1;\n  if (pos[l] == pos[r])\n  {\n    memset(cnt, 0, sizeof(cnt));\n    for (R i = l; i <= r; ++i)\n      if (++cnt[a[i]] > mx || (cnt[a[i]] == mx && a[i] < ret))\n        ret = a[i], mx = cnt[a[i]];\n  }\n  else\n  {\n    ret = f[p][q], mx = c[p][q];\n    memset(cnt, 0x3f, sizeof(cnt));\n    for (R i = l, L = pos[l] * T; i <= L; ++i)\n      if (cnt[a[i]] == 0x3f3f3f3f)\n        cnt[a[i]] = P[i];\n    for (R i = q * T + 1; i <= r; ++i)\n    {\n      R tmp = P[i] + 1 - min(cnt[a[i]], h[p][a[i]]);\n      if (tmp > mx || (tmp == mx && a[i] < ret))\n        ret = a[i], mx = tmp;\n      cnt[a[i]] = P[i];\n    }\n    for (R i = l, L = pos[l] * T; i <= L; ++i)\n    {\n      R tmp = max((cnt[a[i]] == 0x3f3f3f3f ? 0 : cnt[a[i]]), d[q][a[i]]) - P[i] + 1;\n      if (tmp > mx || (tmp == mx && a[i] < ret))\n        ret = a[i], mx = tmp;\n    }\n  }\n  return ret;\n}\nsigned main()\n{\n#ifdef JACK\n  freopen(\"NOIPAK++.in\", \"r\", stdin);\n  OUT;\n#endif\n  n = g(), m = g();\n  T = pow(n, 1 / 2.3); //\u597d\u50cf\u66f4\u5c0f\u4e00\u70b9\u66f4\u5feb\uff08\u4e5f\u4e0d\u662f\u8d8a\u5c0f\u8d8a\u5feb\uff09\n  for (R i = 1; i <= n; ++i)\n    a[i] = g();\n  memcpy(b, a, sizeof(a));\n  sort(b + 1, b + n + 1);\n  tot = unique(b + 1, b + n + 1) - b - 1;\n  memcpy(vl, b, sizeof(int) * (tot + 1));\n  for (R i = 1; i <= n; ++i)\n    a[i] = lower_bound(b + 1, b + tot + 1, a[i]) - b, s[a[i]].pb(i);\n  for (R i = 1; i <= n; ++i)\n    pos[i] = (i - 1) / T + 1;\n  for (R i = 1; i <= n; ++i)\n    P[i] = ++cnt[a[i]];\n  memset(cnt, 0, sizeof(cnt));\n  memset(h[pos[n] + 1], 0x3f, sizeof(h[pos[n] + 1]));\n  for (R t = pos[n]; t; --t)\n  {\n    memcpy(h[t], h[t + 1], sizeof(h[t + 1]));\n    for (R i = min(n, t * T); i > (t - 1) * T; --i)\n      h[t][a[i]] = P[i];\n  }\n  for (R t = 1; t <= pos[n]; ++t)\n  {\n    memcpy(d[t], d[t - 1], sizeof(d[t - 1]));\n    for (R i = (t - 1) * T + 1, L = t * T; i <= L; ++i)\n      d[t][a[i]] = P[i];\n  }\n  for (R i = 1; i <= pos[n]; ++i)\n    PRE(i);\n  for (R i = 1, l, r; i <= m; ++i)\n  {\n    l = (g() + lst - 1) % n + 1, r = (g() + lst - 1) % n + 1;\n    l > r ? swap(l, r) : (void)0;\n    printf(\"%d\\n\", lst = vl[solve(l, r)]);\n  }\n}\n```\n\n2019.06.28",
        "postTime": 1561735967,
        "uid": 115086,
        "name": "Tari",
        "ccfLevel": 7,
        "title": "JACK's \u9898\u89e3 P4168 \u3010[Violet]\u84b2\u516c\u82f1\u3011"
    },
    {
        "content": "# \u6069 \u600e\u4e48\u8bf4\u5462 \u66b4\u529bo2\u8fc7\u4e86\n\u611f\u8c22\u6d1b\u8c37\uff01\n\u672c\u849f\u84bb\u79bb\u6563\u5316\u4e86\u4e00\u4e0b\uff0c\u7136\u540e\u5c31A\u4e86\uff08\u83ab\u540d\u5176\u5999\uff09\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <cmath>\n#include <cstdio>\nusing namespace std;\ninline int read()//\u5feb\u8bfb \u6b63\u5e38\u64cd\u4f5c\uff08\u4e0d\u5199\u4f1aT\u4e00\u4e2a\u70b9\u54e6\uff09 \n{\n\tint res=0;\n\tchar ch;\n\twhile(isspace(ch=getchar()));\n\tdo res=res*10+ch-'0';\n\twhile(isdigit(ch=getchar()));\n\treturn res;\n}\nint n,m,l,r,x;\nlong long belong[40005];//\u8bb0\u4e00\u4e0b\u4ed6\u539f\u672c\u7684\u6807\u53f7 \nint b[40005];//\u79bb\u6563\u5316\u540e\u5c06\u6570\u653e\u8fdbb\u6570\u7ec4 \nint tong[40005];//\u6d45\u663e\u6613\u61c2 \n//int a[40005];\nstruct pp{\n\tint w,r;\n}a[40005];\nbool cmp(pp x,pp y)//\u624b\u5199cmp \n{\n\treturn x.w<y.w;\n}\nint main()\n{\n\tn=read();\n\tm=read();\n\t//cin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\ta[i].w=read(),a[i].r=i;\n\t//cin>>a[i].w,a[i].r=i;\n\tsort(a+1,a+1+n,cmp);\n\tint now=1;\n\tint last=1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(a[i].w==last){//\u6ce8\u610f\uff01\u9898\u76ee\u8981\u6c42\u8f93\u51fa\u6700\u5c0f\u7684 \n\t\t\tbelong[now]=a[i].w;\n\t\t\ta[i].w=now;\n\t\t\tb[a[i].r]=now;\n\t\t}\n\t\telse {\n\t\t\tnow++;\n\t\t\tbelong[now]=a[i].w;\n\t\t\tlast=a[i].w;\n\t\t\ta[i].w=now;\n\t\t\tb[a[i].r]=now;\n\t\t}\n\t}\n//\tfor(int i=1;i<=n;i++)\n//\tcout<<b[i]<<' ';\n\twhile(m--)\n\t{\n\t\t//cin>>l>>r;\n\t\tl=read();\n\t\tr=read();\n\t\tl=(l+x-1)%n+1;\n\t\tr=(r+x-1)%n+1;\n\t\tif(l>r)\n\t\t{\n\t\t\tint t=r;\n\t\t\tr=l;\n\t\t\tl=t;\n\t\t}\n\t\tmemset(tong,0,sizeof(tong));\n\t\tint maxx=0;\n\t\tint ans;\n\t\tfor(int i=l;i<=r;i++)\n\t\t{\n\t\t\ttong[b[i]]++;//\u6876\u4e43\u65e5\u5e38\u64cd\u4f5c \n\t\t\tif(tong[b[i]]>maxx){\n\t\t\t\tmaxx=tong[b[i]];\n\t\t\t\tans=belong[b[i]];\n\t\t\t}\n\t\t\tif(tong[b[i]]==maxx)\n\t\t\t{\n\t\t\t\tif(belong[b[i]]<ans)\n\t\t\t\tans=belong[b[i]];\n\t\t\t}\n\t\t}\n\t\tx=ans;\n\t\tprintf(\"%d\\n\",ans);\n\t//\tcout<<ans<<endl;\n\t}\n\treturn 0;//\u8d62\u4e86\uff01 \n}\n```\n\u3002\u3002\u3002\u7b2c\u4e00\u6b21\u4ea4\u9ed1\u9898\u9898\u89e3\u3002\u614c\u5f97\u4e00\u6279\n",
        "postTime": 1551844783,
        "uid": 71844,
        "name": "\u6768\u94e0\u8fdc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4168 \u3010[Violet]\u84b2\u516c\u82f1\u3011"
    },
    {
        "content": "#\n\u672c\u7bc7\u9898\u89e3\u7684\u5206\u5757\u601d\u8def\u5e76\u4e0d\u9700\u8981\u4e8c\u5206\n\n\n\n\u9996\u5148\u628a\u533a\u95f4\u5206\u5757\uff0c \u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u5757\u5185\u6bcf\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\uff0c \u4ee5\u53ca\u533a\u95f4\u4f17\u6570\uff0c\u7136\u540e\u628a\u6240\u6709\u8fde\u7eed\u7684\u5757\u7684\u4f17\u6570\u6c42\u51fa\u6765\uff0c\u9884\u5904\u7406\u662f O(NT^2),\u8fd9\u91cc\u7684T\u662f\u628a\u533a\u95f4\u5206\u6210\u7684\u5757\u6570\uff0c\u540c\u65f6\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u518d\u8fdb\u884c\u4e00\u6b21\u6734\u7d20\u7684\u626b\u63cf\uff0c \u628a\u5757\u4e24\u8fb9\u4f59\u5904\u7684\u5730\u65b9\u7ecf\u884c\u5904\u7406\u5373\u53ef\u590d\u6742\u5ea6\u4e3aO(MN/T);\n\n\u6240\u4ee5\u7efc\u4e0a\u590d\u6742\u5ea6\u4e3aO(NT^2 + MN/T), \u901a\u8fc7\u4e00\u5b9a\u7684\u8ba1\u7b97\u53ef\u7684\uff0c \u6700\u6709\u590d\u6742\u5ea6\u5e94\u8be5\u5728NT^2 = MN/T\u65f6\u53d6\u5f97\uff0c \u6211\u4eec\u5047\u8bbeN\u548cM\u662f\u540c\u6570\u91cf\u7ea7\u7684\uff0c \u5373NT^2 = N^2/T, \u53ef\u5f97\u5f53T =\uff08N ^(1/ 3))\u65f6\u53ef\u4ee5\u6709\u6700\u6709\u7684\u590d\u6742\u5ea6O(N^(5/3))!\n\n\u540c\u65f6\u6211\u4eec\u5728\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u4f18\u7684\u60c5\u51b5\u4e0b\u7a7a\u95f4\u4e3aO(NT^2), \u5373O(N^(5/3))\uff0c \u53ef\u4ee5\u901a\u8fc7\u672c\u9898\uff01\n\n\u540c\u65f6\u63a8\u8350\u5f90\u660e\u5bbd\u795e\u4ed9\u7684\u8bba\u6587\u300a\u975e\u5e38\u89c4\u5927\u5c0f\u5206\u5757\u7b97\u6cd5\u521d\u63a2\u300b QwQ\n\nps:\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u5982\u679c\u4e0d\u7b97\u4e00\u4e0b\u5206\u5757\u5927\u5c0f\u4f1a\u600e\u4e48\u6837\uff1f\u7136\u800c\u6211\u4eec\u8fd9\u6837\u5199\u6302\u4e86\uff0c\u4e0d\u4f46\u70b8\u4e86\u7a7a\u95f4\uff0c\u5bfc\u81f4\u8981\u5f00\u4e00\u4e2a\u6570\u91cf\u7ea71e9\u7684\u6570\u7ec4\uff0c\u8981\u4e0d\u5c31\u4f1aRE + \u5404\u79cdTLE,\u6240\u4ee5\u4e0d\u80fd\u53ea\u8981\u5206\u5757\u9898\u90fd\u968f\u624b\u5f00\u6839\u53f7\u554a\uff01\u53ef\u4ee5\u81ea\u5df1\u7b97\u4e00\u4e0b\uff0c \u7b80\u5355\u7684\u8bdd\u5747\u503c\u4e0d\u7b49\u5f0f\u5c31\u53ef\u4ee5\u89e3\u51b3\u5927\u90e8\u5206\u7684\u5206\u5757\u5927\u5c0f\u95ee\u9898\u4e86!\n\n```c\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\")\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\n#include <iostream>\nusing namespace std;\nconst int N = 40005;\ninline int read() {\n    int x = 0; char c = getchar();\n    while(c < '0' || c > '9') c = getchar();\n    while(c >= '0' && c<='9'){x = x * 10 + c - 48; c = getchar();}\n    return x;\n}\nint sum[50][50][N], f[50][50], Cnt[50][50];\nint K, n, m, bl[N], blo, a[N], b[N];\ninline int query(int l, int r) {\n    int ans = 0, cnt = 0x3f3f3f3f;\n    if(l > r) swap(l, r); \n    int L = bl[l], R = bl[r];\n    if(L == R) {\n        L = R = 0;\n        for(int i = l; i <= r; i ++) {\n            sum[L][R][a[i]] ++;\n            if(sum[L][R][a[i]] > ans || sum[L][R][a[i]] == ans && a[i] < cnt)\n                cnt = a[i], ans = sum[L][R][a[i]]; \n        }\n        for(int i = l; i <= r; i ++)\n            sum[L][R][a[i]] --;\n        return b[cnt];\n    }\n    else L = L + 1, R = R - 1;  \n    ans = f[L][R], cnt = Cnt[L][R];\n    for(int i = l; i <= min((L - 1) * blo, r); i ++) {\n        sum[L][R][a[i]] ++;\n        if(sum[L][R][a[i]] > ans || (sum[L][R][a[i]] == ans && a[i] < cnt)) {\n            cnt = a[i], ans = sum[L][R][a[i]]; \n        }\n    }  \n    for(int i = R * blo + 1; i <= r; i ++) {\n        sum[L][R][a[i]] ++;\n        if(sum[L][R][a[i]] > ans || sum[L][R][a[i]] == ans && a[i] < cnt) {\n            cnt = a[i], ans = sum[L][R][a[i]]; \n            }   \n    }\n    for(int i = R * blo + 1; i <= r; i ++)\n            sum[L][R][a[i]] --;\n    for(int i = l; i <= min((L - 1) * blo, r); i ++)\n        sum[L][R][a[i]] --;\n    return b[cnt];\n}\nint main() {\n//  freopen(\"tjj.in\", \"r\" ,stdin); \n    n = read(), m = read();\n    for(int i = 1; i <= n; i ++)\n        a[i] = read(), b[i] = a[i];\n    sort(b + 1, b + n + 1);\n    K = unique(b + 1, b + n + 1) - b - 1;\n    for(int i = 1; i <= n; i ++)\n        a[i] = lower_bound(b + 1, b + K + 1, a[i]) - b;\n    blo = pow(n * 1.0, 1.0/ 3);\n    if(blo!=0) blo = n/blo;\n    else blo = 1;\n    for(int i = 1; i <= n; i ++)\n        bl[i] = (i - 1) / blo  + 1; \n    for(int i = 1; i <= bl[n]; i ++) {\n        for(int j = i; j <= bl[n]; j ++) {\n            for(int k = (i - 1) * blo + 1; k <= min(blo * j, n); k ++)\n                sum[i][j][a[k]] ++;\n            for(int k = 1; k <=  K; k ++)\n                if(sum[i][j][k] > f[i][j])\n                    f[i][j] = sum[i][j][k], Cnt[i][j] = k;  \n        }\n    }\n    int ans = 0;\n    for(int i = 1; i <= m; i ++) {\n        int x = read(), y = read();\n        ans = query((x + ans - 1) % n + 1, (y + ans - 1) % n + 1);\n        printf(\"%d\\n\", ans);\n    }\n}\n```",
        "postTime": 1572269168,
        "uid": 122822,
        "name": "Merci",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4168 \u3010[Violet]\u84b2\u516c\u82f1\u3011"
    },
    {
        "content": "\u5728\u4e61\u4e0b\u7684\u5c0f\u8def\u65c1\u79cd\u7740\u8bb8\u591a\u84b2\u516c\u82f1\uff0c\u800c\u6211\u4eec\u7684\u95ee\u9898\u6b63\u662f\u4e0e\u8fd9\u4e9b\u84b2\u516c\u82f1\u6709\u5173\u3002\n\n\u4e3a\u4e86\u7b80\u5316\u8d77\u89c1\uff0c\u6211\u4eec\u628a\u6240\u6709\u7684\u84b2\u516c\u82f1\u770b\u6210\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u5e8f\u5217a1,a2,\u2026,an,\u5176\u4e2dai\u4e3a\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u8868\u793a\u7b2c i \u68f5\u84b2\u516c\u82f1\u7684\u79cd\u7c7b\u7f16\u53f7\u3002\n\n\u800c\u6bcf\u6b21\u8be2\u95ee\u4e00\u4e2a\u533a\u95f4 [l,r] \uff0c\u4f60\u9700\u8981\u56de\u7b54\u533a\u95f4\u91cc\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u662f\u54ea\u79cd\u84b2\u516c\u82f1\uff0c\u5982\u679c\u6709\u82e5\u5e72\u79cd\u84b2\u516c\u82f1\u51fa\u73b0\u6b21\u6570\u76f8\u540c\uff0c\u5219\u8f93\u51fa\u79cd\u7c7b\u7f16\u53f7\u6700\u5c0f\u7684\u90a3\u4e2a\u3002\n\n\u8f93\u5165\u683c\u5f0f\n\u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570n\uff0cm\uff0c\u8868\u793a\u6709 n \u682a\u84b2\u516c\u82f1\uff0cm \u6b21\u8be2\u95ee\u3002\n\n\u63a5\u4e0b\u6765\u4e00\u884c n \u4e2a\u7a7a\u683c\u9694\u5f00\u7684\u6574\u6570ai,\u8868\u793a\u84b2\u516c\u82f1\u7684\u79cd\u7c7b\u3002\n\n\u518d\u63a5\u4e0b\u6765 m \u884c\u6bcf\u884c\u4e24\u4e2a\u6574\u6570l0,r0\uff0c\u6211\u4eec\u4ee4\u4e0a\u6b21\u8be2\u95ee\u7684\u7ed3\u679c\u4e3a x\uff08\u5982\u679c\u8fd9\u662f\u7b2c\u4e00\u6b21\u8be2\u95ee\uff0c\u5219 x=0\uff09\u3002\n\n\u4ee4l=(l0+x-1) mod n+1,r=(r0+x-1) mod n+1,\u5982\u679cl>r,\u5219\u4ea4\u6362l\uff0cr\u3002\n\n\u6700\u7ec8\u7684\u8be2\u95ee\u533a\u95f4\u4e3a[l,r]\u3002\n\n\u8f93\u51fa\u683c\u5f0f\n\u8f93\u51fa m \u884c\u3002\n\n\u6bcf\u884c\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6bcf\u6b21\u8be2\u95ee\u7684\u7ed3\u679c\u3002\n\n\u6570\u636e\u8303\u56f4\n1\u2264n\u226440000,\n1\u2264m\u226450000,\n1\u2264ai\u2264109\n\n\n----------\n\n### \u7b97\u6cd51\n##### (\u5206\u5757+\u4e8c\u5206) O(n\uff08\u221amlogn\uff09)\n\n\u9884\u5904\u7406\u51fa\u6240\u6709\u4ee5\"\u6bb5\u8fb9\u754c\"\u4e3a\u7aef\u70b9\u7684\u533a\u95f4[L,R]\u4e2d\u6bcf\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570,\u4ee5\u53ca\u533a\u95f4\u4f17\u6570.\u8fd9\u6837\u7684\u533a\u95f4\u5171\u6709O(T\u00b2)\u4e2a,\u5e76\u4e14\u4fdd\u5b58\u6bcf\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\u9700\u8981\u957f\u5ea6\u4e3aO(N)\u7684\u6570\u7ec4(\u8bb0\u4e3acntL,R).\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u4e2d\u7684[l,L)\u4e0e(R,r]\u53ef\u4ee5\u901a\u8fc7\u6734\u7d20\u626b\u63cf,\u5728\u6570\u7ec4cntL,R\u7684\u57fa\u7840\u4e0a\u7d2f\u52a0\u6b21\u6570,\u4ece\u800c\u66f4\u65b0\u7b54\u6848.\u56de\u7b54\u8be2\u95ee\u540e\u518d\u8fdb\u884c\u4e00\u6b21\u6734\u7d20\u626b\u63cf,\u4ececntL,R\u4e2d\u51cf\u5c11\u6b21\u6570,\u628a\u6570\u7ec4\u590d\u539f.\n\n\u8fd9\u4e2a\u7b97\u6cd5\u7684\u65f6\u95f4\u4e3aO(NT\u00b2+MN/T),\u7a7a\u95f4\u4e3aO(NT\u00b2).\u4e0d\u59a8\u8bbeN,M\u4e3a\u76f8\u540c\u6570\u91cf\u7ea7,\u901a\u8fc7\u65b9\u7a0bNT\u00b2=MN/T,\u53ef\u89e3\u5f97T\u2248sqrt(sqrt(N)),\u6b64\u65f6\u6574\u4e2a\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u5728O(pow(N,5/3))\u7ea7\u522b.\n\n\n#### C++ \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n//#pragma GCC optimize(2)//O2\u4f18\u5316\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\nconst int N=1e5+10;\nll n,m,anst;\nll a[N],b[N],f[N],tot;\nll d[1000][1000];\nll ct[N];\nvector<ll> g[N];\nvoid asd()\n{\n    anst=max(1,(int)(n/sqrt(m*log2(n))));\n    for(int i=1;i<=n;i++)\n    {\n    \tb[i]=(i-1)/anst+1;\n\t}\n}\nll bll(ll l,ll r,ll val)\n{\n    ll t=upper_bound(g[val].begin(),g[val].end(),r)-lower_bound(g[val].begin(),g[val].end(),l);\n    return t;\n}\nvoid qwe(int x)//\u9884\u5904\u7406\u4ece\u5757x\u5230\u5176\u4ed6\u5757\u7684\u4f17\u6570\n{\n    memset(ct,0,sizeof(ct));\n    int ansy=-1,ans=0;\n    for(int i=(x-1)*anst+1;i<=n;i++)\n    {\n        ct[a[i]]++;\n        if(ct[a[i]]>ansy||(ct[a[i]]==ansy&&a[i]<ans))\n        {\n            ans=a[i];\n            ansy=ct[a[i]];\n        }\n        d[x][b[i]]=ans;\n    }\n}\nll dsa(ll l,ll r)\n{\n    ll ans=d[b[l]+1][b[r]-1];\n    ll ansy=bll(l,r,ans);\n    ll ant=0;\n    ll minn=min(r,b[l]*anst);\n    for(int i=l;i<=minn;i++)\n    {\n        ant=bll(l,r,a[i]);\n        if(ant>ansy||(ant==ansy&&f[ans]>f[a[i]]))\n        {\n            ansy=ant;\n            ans=a[i];\n        }\n    }\n    if(b[l]!=b[r])\n    {\n        for(int i=(b[r]-1)*anst+1;i<=r;i++)\n        {\n            ant=bll(l,r,a[i]);\n            if(ant>ansy||(ant==ansy&&ans>a[i]))\n            {\n                ansy=ant;\n                ans=a[i];\n            }\n        }\n    }\n    return ans;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        f[i]=a[i];\n    }\n    asd();\n    sort(f+1,f+n+1);\n    int N=unique(f+1,f+n+1)-f-1;\n    for(int i=1;i<=n;i++)\n    {\n        a[i]=lower_bound(f+1,f+N+1,a[i])-f;\n        g[a[i]].push_back(i);\n    }\n    int ans=0;\n    for(int i=1;i<=b[n];i++)\n    {\n    \tqwe(i);\n\t}\n    while(m--)\n    {\n        int l,r;\n        scanf(\"%d%d\",&l,&r);\n        l=(l+ans-1)%n+1;\n        r=(r+ans-1)%n+1;\n        if(l>r)\n        {\n        \tswap(l,r);\n\t\t}\n        ans=f[dsa(l,r)];\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n\n```\n\n\n----------\n\n### \u7b97\u6cd52\n##### (\u5206\u5757+\u540e\u7f00\u548c) O(n\uff08\u221an\uff09)\n\n\u5728\u9884\u5904\u7406\u65f6,\u53ea\u4fdd\u5b58\u6240\u6709\u4ee5\"\u6bb5\u8fb9\u754c\"\u4e3a\u7aef\u70b9\u7684\u533a\u95f4[L,R]\u7684\u4f17\u6570.\u53e6\u5916,\u5bf9\u6bcf\u4e2a\u6570\u503c\u5efa\u7acb\u4e00\u4e2aSTLvertor,\u6309\u987a\u5e8f\u4fdd\u5b58\u8be5\u6570\u503c\u5728\u5e8f\u5217a\u4e2d\u6bcf\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e.\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee,\u626b\u63cf[l,L)\u4e0e(R,r]\u4e2d\u7684\u6bcf\u4e2a\u6570x,\u5728\u5bf9\u5e94\u7684vertor\u91cc\u4e8c\u5206\u67e5\u627e\u5373\u53ef\u5f97\u5230x\u5728[l,r]\u4e2d\u51fa\u73b0\u7684\u6b21\u6570,\u4ece\u800c\u66f4\u65b0\u7b54\u6848.\n\n\u4f8b\u5982\u5e8f\u5217a={1,4,2,3,2,4,3,2,1,4},\u6570\u503c1\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e3a{1,9},\u6570\u503c2\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e3a{3,5,8},\u6570\u503c3\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e3a{4,7},\u6570\u503c4\u51fa\u73b0\u7684\u4f4d\u7f6e\u4fc4\u65e5{2,6,10}.\u5047\u8bbel=2,r=8,\u82e5\u8981\u6c42\u662f\u6570\u503c2\u5728\u5e8f\u5217a\u7684\u533a\u95f4[l,r]\u4e2d\u51fa\u73b0\u591a\u5c11\u6b21,\u5219\u5e94\u8be5\u5728{3,5,8}\u4e2d\u4e8c\u5206\n\u67e5\u627e\u7b2c\u4e00\u4e2a\u2265l\u7684\u6570,\u5f97\u52303(\u4e0b\u6807\u4e3a0);\u4e8c\u5206\u67e5\u627e\u6700\u540e\u4e00\u4e2a\u2264r\u7684\u6570,\u5f97\u52308(\u4e0b\u6807\u4e3a2).\u628a\u4e24\u4e2a\u4e0b\u6807\u76f8\u51cf\u518d\u52a01,\u5f97\u5230\u7b54\u6848:3\u6b21.\n\n\u8fd9\u4e2a\u7b97\u6cd5\u7684\u65f6\u95f4\u4e3aO(NT+MN/T*logN),\u7a7a\u95f4\u4e3aO(T\u00b2).\u5e94\u53d6T=sqrt(NlogN),\u6b64\u65f6\u6574\u4e2a\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u5728O(Nsqrt(NlogN))\u7ea7\u522b.\n\n\n\u8fd9\u4e9b\u90fd\u662f\u4ece\u4e66\u4e0a\u770b\u5230\u7684\uff0c\u6211\u53ea\u662f\u642c\u8fd0\u5de5",
        "postTime": 1565403216,
        "uid": 156734,
        "name": "dfydada\u26a1\u26a1\u26a1",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4168 \u3010[Violet]\u84b2\u516c\u82f1\u3011"
    },
    {
        "content": "\u72b9\u8c6b\u4e86\u5f88\u4e45\u8fd8\u662f\u51b3\u5b9a\u6765\u5199\u4e00\u7bc7Pascal\u9898\u89e3\u3002\n\n\u7ecf\u5178\u7684\u5206\u5757\u5165\u95e8\u9898\u3002\n\n\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u5206\u5757\uff1a\n\n\u628a\u6570\u636e\u5206\u6210\u4e00\u4e9b\u5757\uff0c\u7136\u540e\u9884\u5904\u7406\u3002\n\n\u7ef4\u62a4\u6216\u67e5\u8be2\u6570\u636e\u65f6\uff0c\u4e2d\u95f4\u8fde\u7eed\u7684\u51e0\u4e2a\u5757\u4e00\u8d77\u64cd\u4f5c\uff0c\u8fb9\u89d2\u66b4\u529b\u3002\n\n\u5c0f\u4e8e\u4e24\u4e2a\u5757\u7684\u8bdd\u5c31\u76f4\u63a5\u66b4\u529b\u4e86\u3002\n\n\u4e00\u822c\u6bcf\u4e2a\u5757\u7684\u5927\u5c0f\u4e3a$\\sqrt{n}$\u3002\n\n\u5f53\u9898\u76ee\u5f3a\u5236\u5728\u7ebf\u7684\u8bdd\u7528\u5206\u5757\uff0c\u79bb\u7ebf\u5c31\u53ef\u4ee5\u7528\u83ab\u961f\u4e86\u3002\n\n\u5148\u770b\u9898\u76ee\uff0c$1\\le a_i\\le 10^9$\u3002\u80af\u5b9a\u8981\u79bb\u6563\u5316\u3002\n\n\u7136\u540e\u5c31\u662f\u9884\u5904\u7406\u3002\u8fd9\u662f\u5206\u5757\u91cc\u9762\u5f88\u91cd\u8981\u7684\u4e00\u6b65\u3002\u8fd9\u4e2a\u60f3\u51fa\u6765\u4ee5\u540e\u505a\u9898\u5c31\u4e0d\u96be\u4e86\u3002\n\n\u6c42\u533a\u95f4\u4f17\u6570\u9700\u8981\u6bcf\u4e2a\u6570\u51fa\u73b0\u7684\u6570\u91cf\u3002\u8003\u8651\u7528\u524d\u7f00\u548c\u5bf9\u6bcf\u4e00\u4e2a\u5757\u7ef4\u62a4\u3002\n\n\u6211\u4eec\u8fd8\u9700\u8981\u7ef4\u62a4\u8fde\u7eed\u7684\u51e0\u4e2a\u5757\u7684\u4f17\u6570\u3002\n\n\u67e5\u8be2\u7684\u65f6\u5019\u76f4\u63a5\u679a\u4e3e\u8fb9\u89d2\u7684\u6570\u5c31\u597d\u4e86\uff08\u8fb9\u89d2\u66b4\u529b\uff09\u3002\n\n\u8be6\u7ec6\u8fd8\u662f\u89c1\u4ee3\u7801\u5427\uff1a\n\n```\n{P4168}\nvar\n  a,d,p,sum,temp:array[1..40000]of longint;//a\u662f\u539f\u59cb\u6570\u7ec4\uff08\u540e\u6765\u88ab\u79bb\u6563\u5316\u4e86\uff09\uff0cp\u662f\u79bb\u6563\u5316\u524d\u539f\u59cb\u7684\u6570\u503c\uff0cd\u548ctemp\u7528\u6765\u79bb\u6563\u5316\uff08\u5177\u4f53\u770b\u4e3b\u7a0b\u5e8f\uff09\uff0csum\u662f\u67e5\u8be2\u8fc7\u7a0b\u4e2d\u7edf\u8ba1\u6570\u91cf\u7684\n  s:array[0..200,1..40000]of longint;//\u9884\u5904\u7406\u7684\u524d\u7f00\u548c\n  m:array[1..200,1..200]of longint;//\u533a\u95f4\u4f17\u6570\n  n,q,i,x,l,r,num,size,last:longint;\nfunction min(x,y:longint):longint;//\u4e0d\u89e3\u91ca\nbegin\n  if x<y then\n    exit(x)\n  else\n    exit(y);\nend;\nprocedure swap(var x,y:longint);//\u4e0d\u89e3\u91ca\nvar\n  t:longint;\nbegin\n  t:=x;\n  x:=y;\n  y:=t;\nend;\nprocedure quicksort(l,r:longint);//\u4e0d\u89e3\u91ca\nvar\n  i,j,m,t:longint;\nbegin\n  i:=l;\n  j:=r;\n  m:=a[(l+r) div 2];\n  repeat\n    while a[i]<m do\n      inc(i);\n    while a[j]>m do\n      dec(j);\n    if i<=j then\n    begin\n      t:=a[i];\n      a[i]:=a[j];\n      a[j]:=t;\n      t:=d[i];\n      d[i]:=d[j];\n      d[j]:=t;\n      inc(i);\n      dec(j);\n    end;\n  until i>j;\n  if l<j then\n    quicksort(l,j);\n  if i<r then\n    quicksort(i,r);\nend;\nprocedure init;                //\u521d\u59cb\u5316\nvar\n  i,j,k:longint;\nbegin\n  for i:=1 to num do\n  begin\n    for j:=1 to x do\n      s[i,j]:=s[i-1,j];\n    for j:=(i-1)*size+1 to min(n,i*size) do//\u8ba1\u7b97\u524d\u7f00\u548c\n      inc(s[i,a[j]]);\n    for j:=1 to i do           //\u8ba1\u7b97\u4ece\u7b2cj\u4e2a\u5757\u5230\u7b2ci\u4e2a\u5757\u7684\u533a\u95f4\u4f17\u6570\n    begin\n      m[j,i]:=1;\n      for k:=2 to x do         //\u66b4\u529b\u679a\u4e3e\n        if s[i,k]-s[j-1,k]>s[i,m[j,i]]-s[j-1,m[j,i]] then\n          m[j,i]:=k;\n    end;\n  end;\nend;\nfunction query(l,r:longint):longint;//\u67e5\u8be2\nvar\n  i,tl,tr:longint;\nbegin\n  tl:=(l-1) div size+1;        //l\u6240\u5728\u7684\u5757\n  tr:=(r-1) div size+1;        //r\u6240\u5728\u7684\u5757\n  if tr-tl<=1 then             //\u5c0f\u4e8e2\u4e2a\u5757\u76f4\u63a5\u66b4\u529b\n  begin\n    for i:=l to r do\n      sum[a[i]]:=0;\n    for i:=l to r do           //\u628a\u6240\u6709\u6570\u7684\u6570\u91cf\u90fd\u7edf\u8ba1\u51fa\u6765\n      inc(sum[a[i]]);\n    query:=a[l];\n    for i:=l+1 to r do         //\u66b4\u529b\u679a\u4e3e\n      if (sum[a[i]]>sum[query]) or (sum[a[i]]=sum[query]) and (a[i]<query) then\n        query:=a[i];\n  end\n  else\n  begin\n    sum[m[tl+1,tr-1]]:=s[tr-1,m[tl+1,tr-1]]-s[tl,m[tl+1,tr-1]];//\u5148\u628a\u533a\u95f4\u4f17\u6570\u7684\u6570\u91cf\u7edf\u8ba1\u597d\n    for i:=l to min(n,tl*size) do//\u7edf\u8ba1\u6bcf\u4e2a\u8fb9\u89d2\u7684\u6570\u5728\u5757\u5185\u7684\u6570\u91cf\n      sum[a[i]]:=s[tr-1,a[i]]-s[tl,a[i]];\n    for i:=(tr-1)*size+1 to r do\n      sum[a[i]]:=s[tr-1,a[i]]-s[tl,a[i]];\n    for i:=l to min(n,tl*size) do//\u7edf\u8ba1\u8fb9\u89d2\u7684\u6570\u91cf\n      inc(sum[a[i]]);\n    for i:=(tr-1)*size+1 to r do\n      inc(sum[a[i]]);\n    query:=m[tl+1,tr-1];\n    for i:=l to min(n,tl*size) do//\u66b4\u529b\u679a\u4e3e\n      if (sum[a[i]]>sum[query]) or (sum[a[i]]=sum[query]) and (a[i]<query) then\n        query:=a[i];\n    for i:=(tr-1)*size+1 to r do\n      if (sum[a[i]]>sum[query]) or (sum[a[i]]=sum[query]) and (a[i]<query) then\n        query:=a[i];\n  end;\n  query:=p[query];             //\u6ce8\u610f\u79bb\u6563\u5316\u8fc7\uff0c\u8981\u628a\u7b54\u6848\u8f6c\u56de\u53bb\nend;\nbegin\n  read(n,q);\n  size:=trunc(sqrt(n));        //\u5757\u7684\u5927\u5c0f\n  num:=(n-1) div size+1;       //\u4e00\u5171\u6709\u51e0\u5757\n  for i:=1 to n do\n  begin\n    read(a[i]);                //\u8bfb\u5165\n    d[i]:=i;                   //\u628a\u5e8f\u53f7\u8bb0\u4e0b\u6765\uff0c\u65b9\u4fbf\u79bb\u6563\u5316\n  end;\n  quicksort(1,n);              //\u6392\u5e8f\n  x:=a[1];                     //\u5199\u7684\u6781\u4e11\u7684\u79bb\u6563\u5316\n  a[1]:=1;\n  p[1]:=x;\n  for i:=2 to n do\n    if a[i]=x then\n      a[i]:=a[i-1]\n    else\n    begin\n      x:=a[i];\n      a[i]:=a[i-1]+1;\n      p[a[i]]:=x;\n    end;\n  x:=a[n];\n  temp:=a;\n  for i:=1 to n do\n    a[d[i]]:=temp[i];\n  init;\n  last:=0;\n  for i:=1 to q do             //\u67e5\u8be2\u90e8\u5206\n  begin\n    read(l,r);\n    l:=(l+last-1) mod n+1;     //\u5f3a\u5236\u5728\u7ebf\n    r:=(r+last-1) mod n+1;\n    if l>r then\n      swap(l,r);\n    last:=query(l,r);\n    writeln(last);\n  end;\nend.\n```",
        "postTime": 1546934480,
        "uid": 40241,
        "name": "dblark",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4168 \u3010[Violet]\u84b2\u516c\u82f1\u3011"
    },
    {
        "content": "\u5c06\u6570\u7ec4\u6309\u7167(n^(1/3))\u8fdb\u884c\u5206\u5757\uff0c\u9884\u5904\u7406\u51fa\u4ece\u5757i\u5230\u5757j\u4e2d\u6bcf\u4e2a\u6570\u51fa\u73b0\u7684\u4e2a\u6570\uff0c\u6700\u5927\u7684\u51fa\u73b0\u6b21\u6570\u548c\u5bf9\u5e94\u7684\u6570\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95eel\uff0cr\uff0c\u7b54\u6848\u53ea\u53ef\u80fd\u6765\u81ea\u4e8e\u5757[L,R]\u4e2d\u7684\u4f17\u6570\uff0c\u6216\u5176\u4f59\u8303\u56f4\u5185\u7684\u6570\u3002\u56e0\u4e3a\u4e0d\u662f\u5757[L,R]\u4e2d\u7684\u4f17\u6570\uff0c\u6216\u5176\u4f59\u8303\u56f4\u5185\u7684\u6570\u7684\u6570\uff0c\u5f88\u660e\u663e\u6ca1\u6709\u5757[L,R]\u4e2d\u7684\u4f17\u6570\u4f18\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95eel\uff0cr\uff0c\u5148\u901a\u8fc7\u6734\u7d20\u626b\u63cf\uff0c\u5728[L,R]\u7684\u57fa\u7840\u4e0a\u7d2f\u8ba1\u6b21\u6570\u5e76\u66f4\u65b0\u7b54\u6848\uff0c\u56de\u7b54\u8be2\u95ee\u540e\u518d\u6734\u7d20\u626b\u63cf\u590d\u539f\u6570\u7ec4\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6O(n^(5/3))\n\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<string>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nconst int u=40010;\nint c[40][40][u],f[40][40],d[40][40],a[u],b[u],fa[u],fb[u],st[40],ed[40];\nint n,m,t,l,tot,i,j,k,x,y,ans,L,R,cnt,num;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+ch-'0';ch=getchar();}\n\treturn x*f;\n}\ninline void prework(){\n\tt=(int)pow(n*1.0,1.0/3.0);\n\tif(t) l=n/t;\n\tfor(i=1;i<=t;i++) st[i]=(i-1)*l+1,ed[i]=i*l;\n\tif(ed[t]<n) st[t+1]=ed[t]+1,ed[++t]=n;\n\tmemcpy(fa,a,sizeof(a));\n\tsort(fa+1,fa+1+n);\n\tfor(i=1;i<=n;i++) if(i==1||fa[i]!=fa[i-1]) fb[++tot]=fa[i];\n\tfor(i=1;i<=n;i++) b[i]=lower_bound(fb+1,fb+1+tot,a[i])-fb;\n\tfor(i=1;i<=t;i++){\n\t\tfor(j=i;j<=t;j++){\n\t\t\tfor(k=st[i];k<=ed[j];k++) c[i][j][b[k]]++;\n\t\t\tfor(k=1;k<=tot;k++){\n\t\t\t\tif(f[i][j]<c[i][j][k]||f[i][j]==c[i][j][k]&&d[i][j]>k){\n\t\t\t\t\tf[i][j]=c[i][j][k];d[i][j]=k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\ninline void update(int i){\n\tc[L][R][b[i]]++;\n\tif(c[L][R][b[i]]>cnt||c[L][R][b[i]]==cnt&&b[i]<num) cnt=c[L][R][b[i]],num=b[i];\n}\ninline int solve(int x,int y){\n\tint i,l,r;\n\tif(x>y) swap(x,y);\n\tfor(i=1;i<=t;i++) if(x<=ed[i]){l=i;break;}\n\tfor(i=t;i>=1;i--) if(y>=st[i]){r=i;break;}\n\tif(l+1<=r-1){L=l+1;R=r-1;}\n\telse L=R=0;\n\tcnt=f[L][R],num=d[L][R];\n\tif(l==r){\n\t\tfor(i=x;i<=y;i++) update(i);\n\t\tfor(i=x;i<=y;i++) c[L][R][b[i]]--;\n\t}\n\telse{\n\t\tfor(i=x;i<=ed[l];i++) update(i);\n\t\tfor(i=st[r];i<=y;i++) update(i);\n\t\tfor(i=x;i<=ed[l];i++) c[L][R][b[i]]--;\n\t\tfor(i=st[r];i<=y;i++) c[L][R][b[i]]--;\n\t}\n\treturn fb[num];\n}\nint main(){\n\tn=read();m=read();\n\tfor(i=1;i<=n;i++) a[i]=read();\n\tprework();\n\tfor(i=1;i<=m;i++){\n\t\tx=read();y=read();\n\t\tans=solve((x+ans-1)%n+1,(y+ans-1)%n+1);\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1543045142,
        "uid": 53032,
        "name": "\u5c0f\u5858\u7a7a\u660e",
        "ccfLevel": 0,
        "title": "P4168 [Violet]\u84b2\u516c\u82f1"
    },
    {
        "content": "UPD ON\uff1a2019/7/17 \u53d1\u73b0\u5199\u4e86\u4e2a\u5047\u7b97\u6cd5\n## \u601d\u8def\n\u540c[hzwer\u5206\u57579\u9898](http://hzwer.com/8053.html)\u3002\n\n\u6211\u4eec\u77e5\u9053\uff0c\u4f17\u6570\u4e00\u5b9a\u5728\u6574\u5757\u548c\u6563\u5757\u4e4b\u95f4\u3002\u5206\u5757\u7684\u601d\u60f3\uff1a**\u5927\u6bb5\u7ef4\u62a4\uff0c\u5c0f\u6bb5\u6734\u7d20**\u4e8e\u662f\u8fd9\u4e2a\u601d\u8def\u4fbf\u5f88\u597d\u60f3\u4e86\n\n\u5927\u6bb5\uff1a\u9884\u5904\u7406\u6574\u5757\u4e4b\u95f4\u7684\u4f17\u6570$f[i][j]$\u6765\u8868\u793a\uff0c\n$O(n\\sqrt{n})$ \u9884\u5904\u7406\u3002\n\n\u5c0f\u6bb5\uff1a\u4e8c\u5206\u66b4\u529b\u67e5\u8be2\n\n\u4f46\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f$O(n\\sqrt{n} logn)$\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5982\u4f55\u53bb\u6389\u8fd9\u4e2a$logn$\n\n------------\n\n\u4e8e\u662f\u8003\u8651\u4e24\u4e2a\u6570\u7ec4\uff1a\n\n$c[i][x]$\u8868\u793a\u524d$i$\u5757(\u5305\u542b$i$)$x$\u7684\u603b\u6570\n\n$s[i][j][x]$\u8868\u793a\u7b2c$i$\u5757\u524d$j$\u4e2a\u6570(\u5305\u542b$j$)$x$\u7684\u603b\u6570\n\n\u8fd9\u4e24\u4e2a\u6570\u7ec4\u90fd\u662f\u53ef\u4ee5\u5728$O(n\\sqrt[2]{n})$\u5185\u5904\u7406\u7684\u3002\u81f3\u4e8e\u67e5\u8be2\u64cd\u4f5c\u4e0d\u518d\u8d58\u8ff0\u3002\u7c7b\u4f3c\u4e8e\u524d\u7f00\u548c\u7684$O(1)$\n\n\u5f53\u7136\u8fd8\u5c11\u4e0d\u4e86\u79bb\u6563\u5316\n\n## \u4ee3\u7801\n\u4e0d\u52a0\u4f18\u5316\uff0c\u9700\u8981\u5f00O2\u624d\u80fd\u8dd1\u8fc7\n\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=50000+100,md=200+100;\nint f[md][md];\nint L[md],R[md],pos[maxn];\nint a[maxn],cnt[maxn];\nint val[maxn];\nmap<int,int>ma;\nvector<int>v[maxn];\nint n,m,id=0,x=0;\ninline int read(){\n    int x=0,f=1;char ch=getchar();\n    while(ch<='0'||ch>='9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n    return x*f;\n} \nvoid cal(int p){\n    memset(cnt,0,sizeof(cnt));\n    int ans=0;\n    for(int i=L[p];i<=n;i++){\n        cnt[a[i]]++;\n        int q=pos[i];\n        if(cnt[a[i]]>cnt[ans]||(cnt[a[i]]==cnt[ans]&&val[a[i]]<val[ans]))\n        ans=a[i];\n        f[p][q]=ans; \n    }\n}\nvoid pre(){\n    n=read(),m=read();\n    for(int i=1;i<=n;i++){\n        a[i]=read();\n        if(!ma[a[i]]){\n            ma[a[i]]=++id;\n            val[id]=a[i];\n        }\n        a[i]=ma[a[i]];\n        v[a[i]].push_back(i);\n    }\n    int blo=sqrt(n);\n    for(int i=1;i<=blo;i++)\n    L[i]=(i-1)*blo+1,R[i]=i*blo;\n    if(R[blo]<n)blo++,L[blo]=R[blo-1]+1,R[blo]=n;\n    for(int i=1;i<=blo;i++)\n      for(int j=L[i];j<=R[i];j++)\n      pos[j]=i;\n    for(int i=1;i<=blo;i++)cal(i);\n}\nint query(int x,int l,int r){\n    return upper_bound(v[x].begin(),v[x].end(),r)-lower_bound(v[x].begin(),v[x].end(),l);\n}\nint query(int l,int r){\n    int p=pos[l],q=pos[r];\n    int ans=0,mt=0;\n    if(p==q){\n        for(int i=l;i<=r;i++){\n            int t=query(a[i],l,r);\n            if(t>mt||(t==mt&&val[a[i]]<val[ans]))\n            ans=a[i],mt=t;\n        }\n    } \n    else{\n        ans=f[p+1][q-1];\n        mt=query(ans,l,r);\n        for(int i=l;i<=R[p];i++){\n            int t=query(a[i],l,r);\n            if(t>mt||(t==mt&&val[a[i]]<val[ans]))\n            ans=a[i],mt=t;\n        }\n        for(int i=L[q];i<=r;i++){\n            int t=query(a[i],l,r);\n            if(t>mt||(t==mt&&val[a[i]]<val[ans]))\n            ans=a[i],mt=t;\n        }\n    }\n    return val[ans];\n}\nvoid work(){\n    for(int i=1;i<=m;i++){\n      \tint l=(read()+x-1)%n+1,r=(read()+x-1)%n+1;\n      \tif(l>r)swap(l,r);\n        x=query(l,r);\n        printf(\"%d\\n\",x);\n    }\n}\nint main(){\n    pre();\n    work();\n    return 0;\n} \n```\n------------\n\u4f18\u5316\uff0c\u5199\u7684\u5e76\u4e0d\u662f\u5f88\u4f18\u7f8e\u3002\u5e38\u6570\u4e5f\u5f88\u5927\uff0c\u8c05\u89e3\u3002\u3002\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=100000+5,md=320+5;\nint f[md][md],c[md][maxn],s[md][md][md];\nint L[md],R[md],pos[maxn];\nint a[maxn],cnt[maxn];\nint val[maxn];\nint vis[md][maxn];\nmap<int,int>mp;\nint n,m,id=0,x=0;\ninline int read(){\n    int x=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n    return x*f;\n} \nvoid cal(int p){\n    memset(cnt,0,sizeof(cnt));\n    int ans=0;\n    for(int i=L[p];i<=n;i++){\n        cnt[a[i]]++;\n        int q=pos[i];\n        if(cnt[a[i]]>cnt[ans]||(cnt[a[i]]==cnt[ans]&&val[a[i]]<val[ans]))\n        ans=a[i];\n        f[p][q]=ans; \n    }//\u9884\u5904\u7406f \n    memset(cnt,0,sizeof(cnt));\n    for(int i=1;i<=id;i++)\n    c[p][i]=c[p-1][i]; \n    for(int i=L[p];i<=R[p];i++)\n    c[p][a[i]]++;//\u9884\u5904\u7406c\n    int tot=0;\n\tfor(int j=1,i=L[p];i<=R[p];i++,j++){\n\t\tif(!vis[p][a[i]])vis[p][a[i]]=++tot; \n\t\tcnt[vis[p][a[i]]]++;\n\t\tfor(int k=1;k<=tot;k++)\n\t\ts[p][j][k]=cnt[k];\n\t}//\u4e8c\u6b21\u79bb\u6563\u5904\u7406s \n} \nvoid pre(){\n    n=read();m=read();\n    for(int i=1;i<=n;i++){\n        a[i]=read();\n        if(!mp[a[i]]){\n            mp[a[i]]=++id;\n            val[id]=a[i];\n        }\n        a[i]=mp[a[i]];\n    }\n    int blo=sqrt(n);\n    for(int i=1;i<=blo;i++)\n    L[i]=(i-1)*blo+1,R[i]=i*blo;\n    if(R[blo]<n)blo++,L[blo]=R[blo-1]+1,R[blo]=n;\n    for(int i=1;i<=blo;i++)\n      for(int j=L[i];j<=R[i];j++)\n      pos[j]=i;\n    for(int i=1;i<=blo;i++)cal(i);\n}\nint query(int l,int r){\n    int p=pos[l],q=pos[r];\n    int ans=0,mt=0;\n    if(p==q){\n        for(int i=l;i<=r;i++){\n            int t=s[p][r-L[p]+1][vis[p][a[i]]]-s[p][l-L[p]][vis[p][a[i]]];\n            if(t>mt||(t==mt&&val[a[i]]<val[ans]))\n            ans=a[i],mt=t;\n        }\n    } \n    else{\n        ans=f[p+1][q-1];\n        mt=c[q-1][ans]-c[p][ans];\n        for(int i=l;i<=R[p];i++){\n            int t=c[q-1][a[i]]-c[p-1][a[i]]-s[p][l-L[p]][vis[p][a[i]]]+s[q][r-L[q]+1][vis[q][a[i]]];\n            if(t>mt||(t==mt&&val[a[i]]<val[ans]))\n            ans=a[i],mt=t;\n        }\n        for(int i=L[q];i<=r;i++){\n            int t=c[q-1][a[i]]-c[p-1][a[i]]-s[p][l-L[p]][vis[p][a[i]]]+s[q][r-L[q]+1][vis[q][a[i]]];;\n            if(t>mt||(t==mt&&val[a[i]]<val[ans]))\n            ans=a[i],mt=t;\n        }\n    }\n    return val[ans];\n}\nvoid work(){\n    for(int i=1;i<=m;i++){;\n      \tint l=(read()+x-1)%n+1,r=(read()+x-1)%n+1;\n      \tif(l>r)swap(l,r);\n      \tx=query(l,r);\n        printf(\"%d\\n\",x);\n    }\n}\nint main(){\n    pre();\n    work();\n    return 0;\n} \n```\n\n",
        "postTime": 1563330453,
        "uid": 58707,
        "name": "Edward_Elric",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4168 \u3010[Violet]\u84b2\u516c\u82f1\u3011"
    },
    {
        "content": "[\u6233\u6211\u6765\u83b7\u5f97\u66f4\u7684\u9605\u8bfb\u4f53\u9a8cw](https://www.cnblogs.com/GoldenPotato/p/10351638.html)\n\n---\n# Solution\n\u9898\u76ee\u8981\u6c42\u6c42\u51fa\u533a\u95f4\u4f17\u6570\uff0c\u5f3a\u5236\u5728\u7ebf\u3002\n\n\u533a\u95f4\u4f17\u6570\u662f\u4e00\u4e2a\u6bd4\u8f83\u5c34\u5c2c\u7684\u95ee\u9898\uff0c\u6211\u4eec\u65e0\u6cd5\u7528\u533a\u95f4\u6570\u636e\u7ed3\u6784\u6765\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u6211\u4eec\u6ca1\u6cd5\u5f88\u597d\u7684\u5408\u5e76\u533a\u95f4\u4f17\u6570\u7684\u7b54\u6848\u3002\n\n\u65e2\u7136\u533a\u95f4\u6570\u636e\u7ed3\u6784\u89e3\u51b3\u4e0d\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e00\u4e0b\u4f7f\u7528\u57fa\u4e8e\u5206\u5757\u7684\u7b97\u6cd5\uff0c\u4f8b\u5982\u83ab\u961f\u3002\n\u8fd9\u9898\u7528\u83ab\u961f\u975e\u5e38\u597d\u5904\u7406\uff0c\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u9898\u8981\u6c42\u5f3a\u5236\u5728\u7ebf\u3002\n\u56e0\u6b64\u6211\u4eec\u8003\u8651\u4f7f\u7528\u5206\u5757\u7b97\u6cd5\u3002\n\n\u5206\u5757\u7b97\u6cd5\u7684\u6838\u5fc3\u5728\u4e8e\u628a\u4e00\u6574\u4e2a\u5757\u7684\u4fe1\u606f\u538b\u7f29\u8d77\u6765\u4ee5\u4fbf\u5feb\u901f\u5904\u7406\u3002\n\u6211\u4eec\u8981\u67e5\u8be2\u4e00\u6bb5\u533a\u95f4\u7684\u4f17\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u8fd9\u6837\u641e\uff1a**\u5bf9\u4e8e\u8fd9\u4e2a\u533a\u95f4\u5185\u8fde\u7eed\u7684\u5757\uff0c\u6211\u4eec\u5148\u5feb\u901f\u5730\u67e5\u8be2\u8fd9\u4e2a\u8fde\u7eed\u7684\u5757\u4e2d\u7684\u4f17\u6570\uff0c\u7136\u540e\u6211\u4eec\u66b4\u529b\u5904\u7406\u8fd9\u4e2a\u533a\u95f4\u5269\u4f59\u7684\u5de6\u53f3\u4e24\u4e2a\u96f6\u6563\u7684\u70b9\uff0c\u5f00\u4e00\u4e2a\u6876\u66b4\u529b\u7ef4\u62a4\u8fd9\u4e9b\u96f6\u6563\u7684\u70b9\u6bcf\u4e2a\u989c\u8272\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u6bcf\u65b0\u52a0\u5165\u4e00\u4e2a\u70b9\uff0c\u5c31\u4e0e\u6574\u4e2a\u533a\u95f4\u7684\u7b54\u6848\u6bd4\u8f83\u4e00\u4e0b\uff0c\u5982\u679c\u66f4\u4f18\u5c31\u66ff\u6362\u7b54\u6848\u3002**\n\n\u4e3a\u4e86\u5b9e\u73b0\u4e0a\u9762\u90a3\u4e2a\u601d\u8def\uff0c\u6211\u4eec\u5fc5\u987b\u8981\u5b9e\u73b0\u4e24\u70b9\uff1a**\u5feb\u901f\u6c42\u51fa\u4e00\u6bb5\u8fde\u7eed\u5757\u7684\u6bcf\u4e2a\u989c\u8272\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5feb\u901f\u6c42\u51fa\u4e00\u6bb5\u8fde\u7eed\u5757\u7684\u4f17\u6570\u3002**\n\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u95ee\u9898\uff0c\u89e3\u51b3\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u66b4\u529b\u505a**\u524d\u7f00\u548c**\u5373\u53ef\uff0c\u590d\u6742\u5ea6$O(n*\\sqrt n)$\n```cpp\nfor(int i=1;i<=cnt_block;i++)\n\t{\n\t\tfor(int j=1;j<=to;j++)\n\t\t\tpre[i][j]=pre[i-1][j];\n\t\tfor(int j=(i-1)*size;j<i*size;j++)\n\t\t\tpre[i][a[j]]++;\n\t}\n```\n\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u628a\u6bcf\u6bb5\u8fde\u7eed\u5757\u7684\u7b54\u6848\u9884\u5904\u7406\u51fa\u6765\u3002\n\u5177\u4f53\u505a\u6cd5\u662f\uff1a\u6211\u4eec\u679a\u4e3e\u6bcf\u4e2a\u5757\uff0c\u7136\u540e\u6211\u4eec\u66b4\u529b\u5f80\u540e\u626b\u63cf\uff0c\u6bcf\u626b\u5230\u4e00\u4e2a\u5757\u7684\u7ed3\u5c3e\u5c31\u8bb0\u5f55\u7b54\u6848\u3002\n```cpp\ncnt[0]=-0x3f3f3f3f;\n\tfor(int i=1;i<=cnt_block;i++)\n\t{\n\t\tint t_ans=0;\n\t\tfor(int j=(i-1)*size;j<=n;j++)\n\t\t{\n\t\t\tcnt[a[j]]++;\n\t\t\tif(cnt[a[j]]>cnt[t_ans] or (cnt[a[j]]==cnt[t_ans] and a[j]<t_ans)) \n\t\t\t\tt_ans=a[j];\n\t\t\tif((j+1)%size==0)\n\t\t\t\tf[i][j/size+1]=t_ans;\n\t\t}\n\t\tmemset(cnt,0,sizeof cnt);\n\t\tcnt[0]=-0x3f3f3f3f;\n\t}\n```\n\n\n\u5c31\u9171\uff0c\u8fd9\u9898\u5c31\u88ab\u6211\u4eec\u641e\u5b9a\u5566~\n\n\u590d\u6742\u5ea6$O(n\\sqrt n)$\n\n---\n# Code\n**\u672c\u9898\u5b9e\u73b0\u4e0a\u6709\u8f83\u591a\u7ec6\u8282\u8981\u5904\u7406\uff0c\u8bf7\u5c0f\u5fc3**\n```cpp\n//Luogu P4168 [Violet]\u84b2\u516c\u82f1\n//Feb,4th,2019\n//\u5206\u5757\u5957\u8def\u9898\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nlong long read()\n{\n\tlong long x=0,f=1; char c=getchar();\n\twhile(!isdigit(c)){if(c=='-') f=-1;c=getchar();}\n\twhile(isdigit(c)){x=x*10+c-'0';c=getchar();}\n\treturn x*f;\n}\nconst int N=40000+1000;\nconst int M=200+10;\nint n,m,a[N],b[N],t_n,mmap[N];//\u79bb\u6563\u503c->\u539f\u503c\nint f[M][M],pre[M][N];//f[i][j]:\u5757i\u5230j\u7684\u4f17\u6570\uff0cpre[i][j]\uff1a\u5230i\u5757\u4e3a\u6b62\uff0c\u989c\u8272j\u7684\u51fa\u73b0\u6b21\u6570\u524d\u7f00\u548c\nint cnt[N];//\u96f6\u65f6\u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u6b21\u6570\nint main()\n{\n\t//freopen(\"testdata.in\",\"r\",stdin);\n\t//freopen(\"4168.out\",\"w\",stdout);\n\t\n\tt_n=n=read(),m=read();\n\tfor(int i=1;i<=n;i++)\n\t\ta[i]=read(),b[i]=a[i];\n\t\n\tsort(b+1,b+1+n);\n\tint to=0,last=0;\n\tfor(int i=1;i<=n;i++)\n\t\tif(b[i]!=last)\n\t\t\tlast=b[i],b[++to]=b[i];\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint t=lower_bound(b+1,b+1+to,a[i])-b;\n\t\tmmap[t]=a[i],a[i]=t;\n\t}\n\tint size=int(sqrt(n)),cnt_block=n/size+1;\n\tn=cnt_block*size-1;\n\tfor(int i=1;i<=cnt_block;i++)\n\t{\n\t\tfor(int j=1;j<=to;j++)\n\t\t\tpre[i][j]=pre[i-1][j];\n\t\tfor(int j=(i-1)*size;j<i*size;j++)\n\t\t\tpre[i][a[j]]++;\n\t}\n\tcnt[0]=-0x3f3f3f3f;\n\tfor(int i=1;i<=cnt_block;i++)\n\t{\n\t\tint t_ans=0;\n\t\tfor(int j=(i-1)*size;j<=n;j++)\n\t\t{\n\t\t\tcnt[a[j]]++;\n\t\t\tif(cnt[a[j]]>cnt[t_ans] or (cnt[a[j]]==cnt[t_ans] and a[j]<t_ans)) \n\t\t\t\tt_ans=a[j];\n\t\t\tif((j+1)%size==0)\n\t\t\t\tf[i][j/size+1]=t_ans;\n\t\t}\n\t\tmemset(cnt,0,sizeof cnt);\n\t\tcnt[0]=-0x3f3f3f3f;\n\t}\n\t\n\tint ans=0;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint l=read(),r=read();\n\t\tl=(l+ans-1)%t_n+1,r=(r+ans-1)%t_n+1;\n\t\tif(l>r) swap(l,r);\n\t\t\n\t\tint bl=l/size+1,br=r/size+1;\n\t\tans=0;\n\t\tif(bl+1<=br-1)\n\t\t\tans=f[bl+1][br-1];\n\t\tfor(int j=l;j<bl*size and j<=r;j++)\n\t\t{\n\t\t\tcnt[a[j]]++;\n\t\t\tint tmp1=cnt[a[j]],tmp2=cnt[ans];\n\t\t\tif(bl+1<=br-1)\n\t\t\t\ttmp1+=pre[br-1][a[j]]-pre[bl][a[j]],\n\t\t\t\ttmp2+=pre[br-1][ans]-pre[bl][ans];\n\t\t\tif(tmp1>tmp2 or (tmp1==tmp2 and a[j]<ans)) \n\t\t\t\tans=a[j];\n\t\t}\n\t\tif(bl!=br)\n\t\t\tfor(int j=(br-1)*size;j<=r;j++)\n\t\t\t{\n\t\t\t\tcnt[a[j]]++;\n\t\t\t\tint tmp1=cnt[a[j]],tmp2=cnt[ans];\n\t\t\t\tif(bl+1<=br-1)\n\t\t\t\t\ttmp1+=pre[br-1][a[j]]-pre[bl][a[j]],\n\t\t\t\t\ttmp2+=pre[br-1][ans]-pre[bl][ans];\n\t\t\t\tif(tmp1>tmp2 or (tmp1==tmp2 and a[j]<ans)) \n\t\t\t\t\tans=a[j];\n\t\t\t}\n\t\t\t\n\t\tfor(int j=l;j<bl*size and j<=r;j++)\n\t\t\tcnt[a[j]]--;\n\t\tif(bl!=br)\n\t\t\tfor(int j=(br-1)*size;j<=r;j++)\n\t\t\t\tcnt[a[j]]--;\n\t\tcnt[0]=-0x3f3f3f3f;\n\t\t\n\t\tans=mmap[ans];\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1549259417,
        "uid": 52563,
        "name": "GoldenPotato137",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4168 \u3010[Violet]\u84b2\u516c\u82f1\u3011"
    },
    {
        "content": "###### ~~Violet \u9017\u6211\u5417\uff1f\uff1f~~\n\n## \u554a,\u5206\u5757\u5927\u6cd5\u597d\n\n#### \u66b4\u529b\u51fa\u5947\u8ff9~~(poi~~\n\n\u8ba9\u6211\u4eec\u6765\u770b\u770b\u9898\u76ee\n\n\u554a\uff0c\u6709\u597d\u591a\u6570$a$($a\\le10^{9}$),\u8ba9\u6211\u4eec\u6c42\u51fa\u6bcf\u6b21\u6c42$l-r$,\u4e4b\u95f4\u7684\u4f17\u6570\uff0c\u5f3a\u5236\u5728\u7ebf\u5466\uff01\uff01\n\n\u5b66\u8fc7\u5206\u5757\u7684***dalao***\u4eec\u5e94\u8be5\u90fd\u4e00\u773c\u79d2\u6389\u4e86\u8fd9\u9053\u9898\u5427(\u5b9e\u5728\u662f\u592a\u88f8\u4e86)\n\n\u90a3\u6211\u4eec\u5c31\u6765\u8003\u8651\u4e00\u4e0b\u600e\u4e48\u5206\u5757\n\n\u9996\u5148\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u601d\u8def\u5c31\u662f\u5206\u5757\u4e4b\u540e\u9884\u5904\u7406\u51fa\u7b2c$i-j$\u5757\u4e4b\u95f4\u7684\u4f17\u6570\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee\u4e2d$l-r$\u7684\u6574\u5757,\u76f4\u63a5\u8bfb\u53d6,\u518d\u4fbf\u5229\u975e\u6574\u5757\u4e0a\u7684\u5143\u7d20,\u7528\u4ed6\u4eec\u66f4\u65b0\u7b54\u6848\u4fbf\u662f\u6211\u4eec\u6240\u8981\u6c42\u7684\u7b54\u6848\u4e86\n\n\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u505a\u5462\uff1f\uff1f\u56e0\u4e3a\u6709\u4e00\u4e2a\u6bd4\u8f83\u663e\u7136\u7684\u7ed3\u8bba\n\n#### \u6572\u9ed1\u677f\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee,\u5982\u679c\u67d0\u4e2a\u6570(\u5373\u672c\u9898\u4e2d\u67d0\u79cd\u84b2\u516c\u82f1),\u4ed6\u6ca1\u6709\u51fa\u73b0\u5728\u96f6\u788e\u7684\u5757\u4e2d,\u4ed6\u4e00\u5b9a\u4e0d\u662f\u7b54\u6848\n\n##### \u8bc1\u660e\n\n\u6211\u4eec\u5047\u8bbe\u5b58\u5728$a_{i}$\u4e0d\u5b58\u5728\u4e0e\u96f6\u788e\u7684\u5757\u4e2d,\u4e14\u4e0d\u662f$l-r$\u4e4b\u95f4\u7684\u4f17\u6570,\u90a3\u4e48\u4ed6\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u8be2\u95ee\u7684\u4e2a\u6570\u5373\u662f$l-r$\u6574\u5757\u5185\u7684\u4e2a\u6570,\u4f46\u56e0\u4e3a\u4ed6\u4e0d\u662f$l-r$\u4e4b\u95f4\u7684\u4f17\u6570,\u6240\u4ee5\u4e00\u5b9a\u6ca1\u6709$l-r$\u4e4b\u95f4\u7684\u4f17\u6570\u4f18,\u6240\u4ee5\u53ef\u80fd\u66f4\u65b0\u7b54\u6848\u7684\u6570\u4e00\u5b9a\u5b58\u5728\u4e8e\u96f6\u788e\u7684\u5757\u4e2d\u51fa\u73b0\u8fc7\u7684\u6570\u91cc\u9762,\u56e0\u4e3a\u4ed6\u4eec\u7684\u6570\u91cf\u76f8\u5bf9\u4e8e$l-r$\u4e4b\u95f4\u4ed6\u4eec\u76f8\u5e94\u7684\u6570\u91cf\u662f\u53ef\u4ee5\u589e\u52a0\u7684,\u6240\u4ee5\u4ed6\u4eec\u6709\u53ef\u80fd\u66f4\u65b0\u7b54\u6848\n\n##### \u8bc1\u6bd5\n\n#### \u6572\u9ed1\u677f\u7ed3\u675f\n\n\u6240\u4ee5\u6211\u4eec\u7684\u95ee\u9898\u5c31\u8f6c\u5316\u5230\u4e86\u5982\u4f55\u9884\u5904\u7406\u51fa\u5757\u4e0e\u5757\u4e4b\u95f4\u7684\u4f17\u6570\u4e86\n\n**\u76f4\u63a5\u5f00\u4e00\u4e2a\u6570\u7ec4\u5b58??**\u542c\u4e0a\u53bb\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\n\n\u6211\u4eec\u8003\u8651\u5f00\u4e00\u4e2a\u6570\u7ec4**mode[l][r][k]**\u8868\u793a\u7b2c$l-r$\u4e4b\u95f4$k$\u51fa\u73b0\u4e86\u51e0\u6b21\n\n\u4f46\u662f\u6211\u4eec\u770b\u770b$a_{i}\\le10^{9}$,\u53ea\u5f00\u4e00\u4e2a**mode[k]**\u5c31\u70b8\u7a7a\u95f4\u4e86,\u66f4\u522b\u8bf4\u8fd8\u8981\u5f00\u4e24\u7ef4\u4e86,\u4f46\u662f\u6211\u4eec\u53c8\u770b\u770bn(\u5373\u6700\u591a\u53ef\u80fd\u51fa\u73b0\u7684\u84b2\u516c\u82f1\u7684\u79cd\u6570)$n\\le40000$,\u987f\u65f6\u8ba1\u4e0a\u5fc3\u5934**\u79bb\u6563\u5316\u662f\u4e2a\u597d\u4e1c\u897f**\u4e8e\u662f\u6211\u4eec\u8003\u8651\n\n\n**mode[l][r][k]**\u8868\u793a\u7b2c$l-r$\u5757\u4e2d\u79bb\u6563\u5316\u4e4b\u540e\u6807\u53f7\u4e3ak\u7684\u6570\u6709\u51e0\u4e2a\n\n**mode[l][r][0]**\u8868\u793a$l-r$\u5757\u4e4b\u95f4\u4f17\u6570\u7684\u6570\u91cf\n\n**mode_id[l][r]**\u8868\u793a$l-r$\u5757\u4e4b\u95f4\u4f17\u6570\u7684\u6807\u53f7\n\n### \u79bb\u6563\u5316\n\n\u56e0\u4e3a\u672c\u4eba\u592a\u61d2\u4e86,~~\u5176\u5b9e\u662f\u592a\u83dc\u4e86~~\u79bb\u6563\u5316\u4e00\u822c\u7528**map**\u5199,\u867d\u7136\u6709\u70b9\u6162,\u4f46\u662f\u6548\u679c\u8fd8\u662f\u4e0d\u9519\u7684\n\n**CODE**\n\n\u5176\u4e2d$a_{i}$\u8868\u793a***i***\u4f4d\u7f6e\u4e0a\u7684\u84b2\u516c\u82f1\u7684\u79cd\u7c7b,$b_{i}$\u8868\u793a\u79bb\u6563\u5316\u540e\u7f16\u53f7\u4e3a***i***\u7684\u5143\u7d20\u539f\u6765\u7684\u503c\n```cpp\nmap<int,int>Mymap;\nvoid Discretization_Method(){\n    for(map<int,int>::iteratorit=Mymap.begin();it!=Mymap.end();it++)\n        it->second=++Rin;//\u8fd4\u56deMymap\u7684\u8fed\u4ee3\u5668\u5e76\u628a\u5b83\u7684\u7b2c\u4e8c\u7ef4\u7684\u503c\u8d4b\u503c\u4e3a\u5b83\u79bb\u6563\u5316\u4e4b\u540e\u7684\u7684\u7f16\u53f7\n    for(int i=1;i<=n;++i)\n        b[Mymap[a[i]]]=a[i],a[i]=Mymap[a[i]];\n}//\u79bb\u6563\u5316\u5927\u6cd5\u597d\n```\n\n\u56db\u516b\u56db\u7070\u5e38\u5730\u7b80\u5355\n\n\u7136\u540e\u6211\u4eec\u5c31\u89e3\u51b3\u4e86\u6570\u636e\u8303\u56f4\u8fc7\u5927\u7684\u95ee\u9898,\u73b0\u5728\u6b63\u5f0f\u6765\u8003\u8651\u5982\u4f55\u5206\u5757\u89e3\u51b3\u8fd9\u9053\u9898\u76ee,\u5148\u8003\u8651\u5757\u957f\u7684\u95ee\u9898,\u56e0\u4e3a\u6211\u4eec**mode[l][r][k]**\u662f\u4e00\u4e2a\u4e09\u7ef4\u6570\u7ec4,\u6240\u4ee5\u5373\u4f7f\u6211\u4eec\u63a7\u5236\u4e86k\u7684\u5927\u5c0f,\u7a7a\u95f4\u8fd8\u662f\u4e0d\u53ef\u4e00\u5ffd\u7565\u7684,\u8bf8\u4f4d\u770b\u5b98\u53ef\u4ee5\u8bd5\u8bd5**sqrt(n)**\u5206\u5757\u76f4\u63a5MLE\u5230\u98de\u8d77,\u6240\u4ee5\u6211\u4eec\u4e0d\u5f97\u4e0d\u8003\u8651\u4e00\u79cd\u8239\u661f~~\u86e4\u897f~~\u5206\u5757\u65b9\u6cd5,$n^{\\frac{2}{3}}$\u4e86\u89e3\u4e00\u4e0b??\u7ecf\u8fc7\u4e00\u756a\u4e71\u641e\u6211\u4eec\u53d1\u73b0\u4ee5\u8fd9\u4e2a\u4e3a\u5757\u957f\u7684\u5206\u5757\u5373\u4f7f\u5230\u4e86$n==40000$\u7684\u60c5\u51b5\u4e0b,\u4e5f\u53ea\u6709\u4e0d\u5230**40**\u5757\u7684\u5206\u5757\uff01\uff01\uff01\n\n**congratulations\uff01\uff01\uff01**\n\n\u606d\u559c\u5927\u4f6c\u627e\u5230\u4e86\u6b63\u786e\u7684\u6253\u5f00\u59ff\u52bf  \u4f46\u8fd8\u662f\u6709\u4e00\u4e2a\u4e0d\u600e\u4e48\u8d77\u773c\u7684\u5c0f\u7ec6\u8282,\u5c31\u662f\u5206\u5757$L_{i},R_{i}$\u6570\u7ec4\u7684\u5904\u7406,\u56e0\u4e3a\u6211\u4eec\u8fd9\u91cc\u5757\u957f\u4e3a$n^{\\frac{2}{3}}$\u6b21\u65b9,\u6240\u4ee5\u5757\u7684\u5904\u7406\u5c31\u4e00\u5b9a\u8981\u91cd\u5f00\u4e00\u4e2a\u6570\u6765\u8bb0\u5f55\u4e00\u5171\u6709\u51e0\u5757\n\n\u6211\u4eec\u628a\u6240\u6709\u7684\u533a\u95f4\u5c31\u8fd9\u4e48\u5206\u6210\u4e86\u8fd9\u4e48\u51e0\u4e2a\u533a\u95f4,\u4e0b\u9762\u8003\u8651\u9884\u5904\u7406\n\n**CODE**\n\n\u5176\u4e2d$L_{i}$\u4e0e$R_{i}$\u5206\u522b\u8868\u793a\u7b2c***i***\u5757\u7684\u5de6\u53f3\u7aef\u70b9,$Len$\u4e3a\u603b\u5757\u6570\n\n```cpp\nvoid Find_Mode(){\n    for(int i=1;i<=Len;++i)//\u679a\u4e3e\u524d\u4e00\u5757\n        for(int j=i;j<=Len;++j)//\u679a\u4e3e\u540e\u4e00\u5757\n            for(int k=L[i];k<=R[j];++k){//\u679a\u4e3e\u7b2ci\u5230j\u5757\u4e4b\u95f4\u7684\u6bcf\u4e00\u4e2a\u6570\n                ++mode[i][j][a[k]];\n                if(mode[i][j][a[k]]>mode[i][j][0]||(mode[i][j][a[k]]==mode[i][j][0]&&a[k]<mode_id[i][j]))\n                    mode[i][j][0]=mode[i][j][a[k]],mode_id[i][j]=a[k];//\u6ee1\u8db3\u6570\u91cf\u5927\u4e8e\u5f53\u524d\u4f17\u6570,\u6216\u6570\u91cf\u7b49\u4e8e,\u7f16\u53f7\u5c0f\u4e8e\u5c31\u66f4\u65b0\u9884\u5904\u7406\u6570\u7ec4\n            }\n}//\u5904\u7406\u51fa\u533a\u95f4\u4f17\u6570\n```\n\u5982\u6b64\u6211\u4eec\u4fbf\u627e\u5230\u4e86\u533a\u95f4\u7684\u4f17\u6570,\u6839\u636e\u5206\u5757\u7684\u601d\u60f3,\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee,\u5148\u5047\u8bbe\u6574\u5757\u7684\u4f17\u6570\u5c31\u662f\u7b54\u6848,\u5728\u7528\u96f6\u788e\u7684\u5757\u4e0a\u7684\u6570\u53bb\u8bd5\u56fe\u66f4\u65b0\u7b54\u6848\u5c31\u53ef\u4ee5\u4e86\n\n**CODE**\n\n\u5176\u4e2d**temporary[]**\u503c\u5f97\u662f\u5b58\u50a8\u96f6\u788e\u7684\u5757\u4e2d\u76f8\u5e94\u7684\u4e2a\u6570\u6709\u51e0\u4e2a\n\n```cpp\nint Find_Ans(int l,int r){\n    int ans=0,mode_num=-1;\n    if(belong[l]==belong[r]){//\u5de6\u53f3\u7aef\u70b9\u4e4b\u95f4\u6ca1\u6709\u6574\u5757\u5c31\u66b4\u529b\u67e5\u8be2\n        for(int i=l;i<=r;++i){\n            ++temporary[a[i]];\n            if(temporary[a[i]]>mode_num||(temporary[a[i]]==mode_num&&a[i]<ans))\n                ans=a[i],mode_num=temporary[a[i]];\n        }\n        for(int i=l;i<=r;++i)\n            temporary[a[i]]=0;//\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u8be2\u95ee\u8bb0\u5f97\u6e050\u8fd9\u4e2a\u4e34\u65f6\u6570\u7ec4\n        return ans;\n    }\n    ans=mode_id[belong[l]+1][belong[r]-1],mode_num=mode[belong[l]+1][belong[r]-1][0];//\u5148\u94a6\u5b9a\u6574\u5757\u7684\u7b54\u6848\u5c31\u662f\u7b54\u6848\n    for(int i=l;i<L[belong[l]+1];++i){\n        ++temporary[a[i]];\n        if(temporary[a[i]]+mode[belong[l]+1][belong[r]-1][a[i]]>mode_num||(temporary[a[i]]+mode[belong[l]+1][belong[r]-1][a[i]]==mode_num&&a[i]<ans))\n            ans=a[i],mode_num=temporary[a[i]]+mode[belong[l]+1][belong[r]-1][a[i]];\n    }\n    for(int i=R[belong[r]-1]+1;i<=r;++i){\n        ++temporary[a[i]];\n        if(temporary[a[i]]+mode[belong[l]+1][belong[r]-1][a[i]]>mode_num||(temporary[a[i]]+mode[belong[l]+1][belong[r]-1][a[i]]==mode_num&&a[i]<ans))\n            ans=a[i],mode_num=temporary[a[i]]+mode[belong[l]+1][belong[r]-1][a[i]];\n    }//\u8bd5\u56fe\u7528\u96f6\u5757\u4e0a\u7684\u6570\u66f4\u65b0\u7b54\u6848\n    for(int i=l;i<L[belong[l]+1];++i)\n        temporary[a[i]]=0;\n    for(int i=R[belong[r]-1]+1;i<=r;++i)\n        temporary[a[i]]=0;//\u8bb0\u5f97\u5c06\u6807\u8bb0\u5220\u9664\n    return ans;\n}//\u5206\u5757\uff01\uff01\uff01\n```\n\n\u81f3\u4e8e\u6574\u6bb5\u7684\u4ee3\u7801\u8fd9\u91cc\u5c31\u4e0d\u7ed9\u51fa\u4e86(\u5176\u5b9e\u5c31\u662f\u61d2",
        "postTime": 1539687514,
        "uid": 103762,
        "name": "Wow_Goodjob",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4168 \u3010[Violet]\u84b2\u516c\u82f1\u3011"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\n\n\u6c42\u533a\u95f4\u4f17\u6570\uff0c\u4e14\u89e3\u6cd5\u88ab\u5f3a\u5236\u5728\u7ebf\uff1a\n\n```\n\u518d\u63a5\u4e0b\u6765m \u884c\u6bcf\u884c\u4e24\u4e2a\u6574\u6570 l0,r0 \u6211\u4eec\u4ee4\u4e0a\u6b21\u8be2\u95ee\u7684\u7ed3\u679c\u4e3a x\uff08\u5982\u679c\u8fd9\u662f\u7b2c\u4e00\u6b21\u8be2\u95ee\uff0c\u5219x=0\uff09\u3002\n\n\u4ee4 l=(l0+x\u22121)%n+1,r=(r0+x\u22121)%n+1,\u5982\u679cl>r\uff0c\u5219\u4ea4\u6362l,r \u3002\n\n\u6700\u7ec8\u7684\u8be2\u95ee\u533a\u95f4\u4e3a[l,r]\u3002\n```\n\n\u53ef\u6015\u5427\n\n# \u89e3\u6cd5\n\n\u7c7b\u4f3c\u6b64\u79cd\u4e0d\u6ee1\u8db3\u533a\u95f4\u53ef\u52a0\u6027\u7684\uff0c\u6211\u4eec\u5e38\u91c7\u7528**\u66b4\u529b**\u7684\u5206\u5757\u6765\u89e3\u51b3\n\n1. \u5c06\u539f\u6570\u636e\u79bb\u6563\u5316\uff0c\u5e76\u5efa\u7acb\u6620\u5c04\n2. \u5206\u5757\n3. \u9884\u5904\u7406\u51fa\u4e24\u4e2a\u6570\u7ec4\uff1a\n\t* $mode[i][j]$,\u8868\u793a\u7b2c$i$\u5757\u5230\u7b2c$j$\u5757\u7684\u4f17\u6570\n    * $sum[i][j]$,\u8868\u793a\u4ece\u7b2c$0$\u5757\u5230\u7b2c$i$\u5757,$j$\u7684\u4e2a\u6570\n    \n## \u9884\u5904\u7406\u65b9\u6cd5\n\n\u6bd4\u8f83\u7b80\u5355\uff0c\u76f4\u63a5\u8d34\u4ee3\u7801\uff1a\n\n```cpp\n//calc:sum \n\tfor (i=1;i+SQRTN-1<=n;i+=SQRTN){\n\t\tlim=i+SQRTN-1,++pos;\n\t\tif (i!=1){\n\t\t\tfor (j=1;j<=cnt;++j) sum[pos][j]=sum[pos-1][j];\n\t\t}\n\t\tfor (j=i;j<=lim;++j) ++sum[pos][a[j]],P[j]=pos;\n\t}\n\tif (i+SQRTN-1<n){\n\t\t++pos;\n\t\tfor (;i<=n;++i) ++sum[pos][a[i]],P[i]=pos;\n\t}\n//calc:mode \n\ttot=pos;\n\tfor (i=1;i<=tot;++i){\n\t\tfor (j=i;j<=tot;++j){\n\t\t\tlim=j*SQRTN>n?n:j*SQRTN,ls=0,pos=0x7f7f7f7f;\n\t\t\tfor (k=(i-1)*SQRTN+1;k<=lim;++k){\n \t\t\t\tif ((sum[j][a[k]]-sum[i-1][a[k]]>ls)||(sum[j][a[k]]-sum[i-1][a[k]]==ls&&a[k]<pos))\n\t\t\t\t\tls=sum[j][a[k]]-sum[i-1][a[k]],pos=a[k]; \n\t\t\t}\n\t\t\tmode[i][j]=pos;\n\t\t}\n\t}    \n```\n\n## \u6c42\u89e3\n\n1. \u82e5$l,r$\u4f4d\u4e8e\u76f8\u90bb\u6216\u540c\u4e00\u5757\uff0c\u66b4\u529b\u6c42\u89e3\n2. \u82e5$l,r$\u4e4b\u95f4\u5305\u542b\u6574\u5757\uff0c\u76f4\u63a5\u4f7f\u7528$mode[l][r]$\u6c42\u51fa\u4e2d\u95f4\u7684\u4f17\u6570\uff0c\u90a3\u4e48\u4f17\u6570\u5c31\u53ea\u80fd\u5728\u4e24\u4e2a\u5730\u65b9\u4ea7\u751f\uff1a\n\t* \u4e2d\u95f4\u7684\u4f17\u6570\n    * \u4e24\u8fb9\"\u6b8b\u4f59\"\u7684\u6bb5\u4e2d\u7684\u6570\uff0c\u6b64\u60c5\u51b5\u66b4\u529b\u5373\u53ef",
        "postTime": 1558443284,
        "uid": 123744,
        "name": "PandZz",
        "ccfLevel": 6,
        "title": "\u3010\u9898\u89e3\u3011\u84b2\u516c\u82f1\u9898\u89e3\u62a5\u544a"
    },
    {
        "content": "\u548c[\u8fd9\u4e2a](https://www.luogu.org/problemnew/show/P5048)\u4e00\u6837\u3002\n\n\u8fd9\u4e2a\u65b9\u6cd5\u5e38\u6570\u548c\u5185\u5b58\u90fd\u6bd4\u8f83\u5c0f\uff0c\u8981\u597d\u4e00\u4e9b\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u5148\u6c42\u51fa\u5757\u5185\u7b54\u6848\uff0c\u7136\u540e\u66b4\u529b\u5904\u7406\u8fb9\u89d2\u6599\u3002\n\n\u5bf9\u4e8e\u8fb9\u89d2\u6599\u4e2d\u7684\u7b54\u6848\uff0c\u5982\u679c\u4e00\u4e2a\u6570\u5b57\u5411\u524d/\u5411\u540e\u7b2c$ans$\u6b21\u51fa\u73b0\u4f4d\u7f6e\u4ecd\u7136\u5728\u533a\u95f4\u5185\uff0c\u5219\u53ef\u4ee5\u5c06\u7b54\u6848+1\u3002\n\n\u8fd9\u6837\u53ea\u9700\u8981\u7528$vector$\u8bb0\u5f55\u6240\u6709\u70b9\u7684\u51fa\u73b0\u4f4d\u7f6e\u96c6\u5408\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O[(n+q)\\sqrt n]$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6$O(n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define Rep(i,a,b) for(register int i=(a);i<=(b);++i)\n#define Repe(i,a,b) for(register int i=(a);i>=(b);--i)\n#define pb push_back\n#define mp make_pair\ntypedef unsigned long long uint64;\ntypedef unsigned int uint32;\nusing namespace std;\n\nnamespace IO\n{\n    const uint32 Buffsize=1<<15,Output=1<<24;\n    static char Ch[Buffsize],*S=Ch,*T=Ch;\n    inline char getc()\n\t{\n\t\treturn((S==T)&&(T=(S=Ch)+fread(Ch,1,Buffsize,stdin),S==T)?0:*S++);\n\t}\n    static char Out[Output],*nowps=Out;\n    \n    inline void flush(){fwrite(Out,1,nowps-Out,stdout);nowps=Out;}\n\n    template<typename T>inline void read(T&x)\n\t{\n\t\tx=0;static char ch;T f=1;\n\t\tfor(ch=getc();!isdigit(ch);ch=getc())if(ch=='-')f=-1;\n\t\tfor(;isdigit(ch);ch=getc())x=x*10+(ch^48);\n\t\tx*=f;\n\t}\n\n\ttemplate<typename T>inline void write(T x,char ch='\\n')\n\t{\n\t\tif(!x)*nowps++='0';\n\t\tif(x<0)*nowps++='-',x=-x;\n\t\tstatic uint32 sta[111],tp;\n\t\tfor(tp=0;x;x/=10)sta[++tp]=x%10;\n\t\tfor(;tp;*nowps++=sta[tp--]^48);\n\t\t*nowps++=ch;\n\t}\n}\nusing namespace IO;\n\ninline void file()\n{\n#ifndef ONLINE_JUDGE\n\tFILE*WA=freopen(\"water.in\",\"r\",stdin);\n\tFILE*TER=freopen(\"water.out\",\"w\",stdout);\n#endif\n}\n\nconst int MAXN=4e4+7;\n\nstatic int n,m,a[MAXN],b[MAXN],tt,ps[MAXN],sz[MAXN];\n\nvector<int>show[MAXN];\n\ninline void init()\n{\n\tread(n),read(m);\n\tRep(i,1,n)read(a[i]),b[i]=a[i];\n\tsort(b+1,b+n+1),tt=unique(b+1,b+n+1)-b-1;\n\tRep(i,1,n)\n\t{\n\t\ta[i]=lower_bound(b+1,b+tt+1,a[i])-b;\n\t\tshow[a[i]].pb(i);\n\t\tps[i]=show[a[i]].size();\n\t}\n\tRep(i,1,tt)sz[i]=show[i].size();\n}\n\nconst int BLK=211;\n\nstatic int blk,ans[BLK][BLK],shown[BLK][BLK];\n\nstatic int nt,cnt[MAXN];\n\nstatic int bel[MAXN],lp[BLK],rp[BLK];\n\ninline void Chkmin(int&a,int b){a>b?a=b:0;}\n\ninline void fixans(int l,int r,int w)\n{\n\tif(ans[l][r]<cnt[w])ans[l][r]=cnt[w],shown[l][r]=w;\n\telse if(ans[l][r]==cnt[w])Chkmin(shown[l][r],w);\n}\n\ninline void solve()\n{\n\tblk=sqrt(n)+1;\n\tRep(i,1,n)\n\t{\n\t\tbel[i]=(i-1)/blk+1;\n\t\tif(!lp[bel[i]])lp[bel[i]]=i;\n\t\trp[bel[i]]=i;\n\t}\n\tnt=bel[n];\n\tRep(z,1,nt)\n\t{\n\t\tans[z][z]=0;\n\t\tRep(i,1,tt)cnt[i]=0;\n\t\tRep(i,lp[z],rp[z])++cnt[a[i]],fixans(z,z,a[i]);\n\t\tRep(i,z+1,nt)\n\t\t{\n\t\t\tans[z][i]=ans[z][i-1],shown[z][i]=shown[z][i-1];\n\t\t\tRep(j,lp[i],rp[i])++cnt[a[j]],fixans(z,i,a[j]);\n\t\t}\n\t}\n\tstatic int l,r,mx,lasans=0;\n\tRep(_,1,m)\n\t{\n\t\tread(l),read(r);\n\t\tl=(l+lasans-1)%n+1,r=(r+lasans-1)%n+1;\n\t\tif(l>r)swap(l,r);\n\t\tmx=0;\n\t\tif(r-l<=2*blk)\n\t\t{\n\t\t\tRepe(i,r,l)\n\t\t\t{\n\t\t\t\tif(sz[a[i]]>=ps[i]+mx&&show[a[i]][ps[i]+mx-1]<=r)++mx,lasans=a[i];\n\t\t\t\telse if(sz[a[i]]>=ps[i]+mx-1&&show[a[i]][ps[i]+mx-2]<=r)\n\t\t\t\t\tChkmin(lasans,a[i]);\n\t\t\t}\n\t\t\tlasans=b[lasans];\n\t\t\twrite(lasans);\n\t\t\tcontinue;\n\t\t}\n\t\tint x=l==lp[bel[l]]?bel[l]:bel[l]+1,y=r==rp[bel[r]]?bel[r]:bel[r]-1;\n\t\tmx=ans[x][y];\n\t\tlasans=shown[x][y];\n\t\tRepe(i,lp[x]-1,l)\n\t\t{\n\t\t\tif(sz[a[i]]>=ps[i]+mx&&show[a[i]][ps[i]+mx-1]<=r)++mx,lasans=a[i];\n\t\t\telse if(sz[a[i]]>=ps[i]+mx-1&&show[a[i]][ps[i]+mx-2]<=r)\n\t\t\t\tChkmin(lasans,a[i]);\n\t\t}\n\t\tRep(i,rp[y]+1,r)\n\t\t{\n\t\t\tif(ps[i]>=mx+1&&show[a[i]][ps[i]-mx-1]>=l)++mx,lasans=a[i];\n\t\t\telse if(ps[i]>=mx&&show[a[i]][ps[i]-mx]>=l)Chkmin(lasans,a[i]);\n\t\t}\n\t\tlasans=b[lasans];\n\t\twrite(lasans);\n\t}\n\tflush();\n}\n\nint main()\n{\n    init();\n    solve();\n    return 0;\n}\n```",
        "postTime": 1545400706,
        "uid": 7035,
        "name": "Great_Influence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4168 \u3010[Violet]\u84b2\u516c\u82f1\u3011"
    },
    {
        "content": "\n------\n\n## \u5206\u5757\n\n### \u4e00.\u9898\u610f\u53ca\u601d\u8def\n\n\u9996\u5148\uff0c\u53d1\u73b0\u9898\u76ee\u662f\u8981\u6c42\u9759\u6001\u533a\u95f4\u4f17\u6570\n\n**\u66b4\u529b**\u7684\u60f3\u6cd5:\n\n\u200b\t\u5148\u79bb\u6563\u5316,\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u533a\u95f4$[l,r]$ ,\u5f00\u4e00\u4e2a\u6876,\u7136\u540e\u66b4\u626b,\u590d\u6742\u5ea6$O(n\\times m)$,TLE\n\n\u90a3\u4e48\u53ef\u4ee5\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u7b49\n\n\u4f46\u662f\u663e\u7136\u4f17\u6570\u4e0d\u6ee1\u8db3\u533a\u95f4\u53ef\u52a0\u6027\n\n\u6240\u4ee5\u8003\u8651\u5206\u5757\u7b97\u6cd5\n\n\u867d\u7136\u590d\u6742\u5ea6\u66f4\u52a3\uff0c\u4f46\u4ee3\u7801\u7b80\u5355\n\n-----\n\n### \u4e8c.\u5206\u5757\u6b63\u89e3\n\n\u5c06\u6574\u4e2a\u533a\u95f4\u5206\u4e3a$T$\u4e2a\u5757,\u6bcf\u5757\u957f $len$\n\n\u90a3\u4e48\u8be2\u95ee$[l,r]$ \u5fc5\u7136\u5305\u62ec\u4e09\u4e2a\u90e8\u5206\n\n\u5373\u4e24\u7aef\u7684\u96f6\u6563\u533a\u95f4\u548c\u4e2d\u95f4\u6574\u6bb5\u533a\u95f4\n\n\u90a3\u4e48\u4f17\u6570\u7684\u6765\u6e90\u4e5f\u5c31\u5bf9\u5e94\u7684\u53ea\u6709\u4e09\u79cd\u60c5\u51b5\n\n~~\u5e9f\u8bdd,\u4e0d\u7136\u5462!~~\n\n\u5230\u8fd9\u91cc,\u6211\u4eec\u7684\u590d\u6742\u5ea6\u4ecd\u7136\u662f\u5047\u7684\n\n\u56e0\u4e3a\u6bcf\u6b21\u90fd\u8981\u5c06\u6574\u4e2a\u8be2\u95ee\u533a\u95f4\u626b\u4e00\u904d\n\n**\u90a3\u4e48\u6b64\u65f6\u5206\u5757\u7684\u4f18\u52bf\u5c31\u4f53\u73b0\u51fa\u6765\u4e86**\n\n\u5c06\u8be2\u95ee\u533a\u95f4\u5206\u6210\u4e09\u5757\u540e,\u5206\u522b\u5904\u7406:\n\n\u200b\t1.\u5de6\u8fb9\u96f6\u6563\u533a\u95f4:\u66b4\u529b\u626b,\u590d\u6742\u5ea6$O(len)$\n\n\u200b\t2.\u53f3\u8fb9\u96f6\u6563\u533a\u95f4:\u540c\u4e0a\n\n\u200b\t**3.\u4e2d\u95f4\u6574\u5757\u533a\u95f4**:\n\n\u200b\t\t\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u4e00\u4e2a\u6570\u7ec4$color[L][R][N]$\u505a\u5230\u6bcf\u6b21\u8be2\u95ee\u65f6$O(1)$\n\n\u200b\t\t**\u5176\u4e2d$L,R\u200b$\u662f\u8868\u793a\u5de6\u53f3\u7aef\u70b9\u5757(\u5373\u5f53\u524d\u533a\u95f4$[l,r]=[L*len+1,R*len]\u200b$)**\n\n\u200b\t\t$N$\u8868\u793a\u54ea\u79cd\u989c\u8272\n\n\u200b\t\t\u90a3\u4e48$color[L][R][K]=color[L][R-1][K]+\\sum_{i=(R-1)*len+1}^{R*len}[a[i]==K]$\n\n\u200b\t\t\u6240\u4ee5\u9884\u5904\u7406\u7684\u590d\u6742\u5ea6\u662f$O(N*T^2)$ \n\n\u90a3\u4e48\u603b\u5171\u7684\u590d\u6742\u5ea6\u5c31\u662f$O(N*T*T+M*N/T)$ \n\n\u53ef\u4ee5\u53d1\u73b0\u5f53$T=N^\\frac{1}{3}$ \u65f6\u6700\u4f18\n\n### \u4e09.\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define il inline \n#define RG  register int\n#define ll long long\n#define gc getchar\nusing namespace std;\nil int rd()\n{\n    int x=0,flag=1;\n    char ch=0;\n    while((ch>'9'||ch<'0')&&ch!='-')ch=gc();\n    if(ch=='-')flag=-1,ch=gc();\n    while(ch>='0'&&ch<='9')x=(x<<3)+(x<<1)+(ch^48),ch=gc();\n    return x*flag;\n}\nconst int MAXT=40,MAXN=40010;\nint color[MAXT][MAXT][MAXN];\nint modenum[MAXT][MAXT],mdtimes[MAXT][MAXT];\nint n,m,T,len;\nint a[MAXN],b[MAXN];\nint l,r,ans,ans2;\nint main ()\n{\n    //freopen(\"in\",\"r\",stdin);\n    //freopen(\"out\",\"w\",stdout);\n    n=rd();m=rd();\n    T=floor(pow(n,0.3333333));\n    len=n/T;\n    for(RG i=1;i<=n;i++)\n        b[i]=a[i]=rd();\n    sort(b+1,b+n+1);\n    unique(b+1,b+n+1);\n    for(RG i=1;i<=n;i++)a[i]=lower_bound(b+1,b+n+1,a[i])-b;\n    for(RG i=1;i<=T;i++)\n        for(RG j=i;j<=T;j++){\n            for(RG k=1;k<=n;k++)\n                color[i][j][k]+=color[i][j-1][k];\n            for(RG k=(j-1)*len+1;k<=j*len;k++)\n                color[i][j][a[k]]++;\n            for(RG k=1;k<=n;k++)\n                if(mdtimes[i][j]<color[i][j][k])modenum[i][j]=k,mdtimes[i][j]=color[i][j][k];\n        }\n    for(RG i=1;i<=m;i++){\n        l=rd(),r=rd();\n        l=(l+b[ans2]-1)%n+1,r=(r+b[ans2]-1)%n+1;\n        if(l>r)swap(l,r);\n        int L=l/len+1,R=(r-1)/len;\n        ans2=modenum[L+1][R];//?\n        if(L<=R)\n        {\n            for(RG j=l;j<=L*len;j++)\n                color[L+1][R][a[j]]++;\n            for(RG j=R*len+1;j<=r;j++)\n                color[L+1][R][a[j]]++;\n            for(RG j=l;j<=L*len;j++)\n                if(color[L+1][R][a[j]]>color[L+1][R][ans2]||(color[L+1][R][a[j]]==color[L+1][R][ans2]&&ans2>a[j]))ans2=a[j];\n            for(RG j=R*len+1;j<=r;j++)\n                if(color[L+1][R][a[j]]>color[L+1][R][ans2]||(color[L+1][R][a[j]]==color[L+1][R][ans2]&&ans2>a[j]))ans2=a[j];\n            for(RG j=l;j<=L*len;j++)\n                color[L+1][R][a[j]]--;\n            for(RG j=R*len+1;j<=r;j++)\n                color[L+1][R][a[j]]--;\n            printf(\"%d\\n\",b[ans2]);\n        }\n        else\n        {\n            for(RG j=l;j<=r;j++)\n                color[L+1][R][a[j]]++;\n            for(RG j=l;j<=r;j++)\n                if(color[L+1][R][a[j]]>color[L+1][R][ans2]||(color[L+1][R][a[j]]==color[L+1][R][ans2]&&ans2>a[j]))ans2=a[j];\n            for(RG j=l;j<=r;j++)\n                color[L+1][R][a[j]]--;\n            printf(\"%d\\n\",b[ans2]);\n        }\n    }\n    return 0;\n}\n\n\n```",
        "postTime": 1544528094,
        "uid": 44182,
        "name": "zyzzyzzyzzyz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4168 \u3010[Violet]\u84b2\u516c\u82f1\u3011"
    },
    {
        "content": "```cpp\n//\u89e3\u51b3\u672c\u9898\u7684\u91cd\u8981\u6027\u8d28\uff1a \n//\u5bf9\u4e8e\u4e24\u4e2a\u533a\u95f4a,b,\u5176\u4e2d\u5df2\u77e5a\u533a\u95f4\u7684\u4f17\u6570k \n//\u5219\u4f17\u6570\u4e00\u5b9a\u4e3ak\u6216\u662fb\u533a\u95f4\u7684\u4efb\u610f\u4e00\u4e2a\u6570  \n#include<bits/stdc++.h>\n#define re register int \nusing namespace std;\nconst int N=40010,M=410;\nint n,q,m,blen,bsum;\nint a[N],b[N];//b\u4e3a\u79bb\u6563\u6570\u7ec4 \nint bl[M][M];//bl[i][j]\u8868\u793a\u7b2ci\u4e2a\u5757\u4e2d\u7684\u7b2cj\u4e2a\u6570\uff0cbl[i][0]\u8868\u793a\u7b2ci\u4e2a\u5757\u7684\u957f\u5ea6 \nint bk[N];//bk[i]\u8868\u793a\u7b2ci\u4e2a\u6570\uff08\u5728\u539f\u6570\u5217\u4e2d\uff09\u5728\u7b2cbk[i]\u4e2a\u5757\u4e2d \nint f[M][M];//f[i][j]\u8868\u793a\u7b2ci\u5757\u5230\u7b2cj\u5757\u4e4b\u95f4\u7684\u4f17\u6570 \nint g[N][M];//g[i][j]\u8868\u793ai\u5728\u524dj\u4e2a\u5757\u4e2d\u51fa\u73b0\u7684\u6b21\u6570 \nvoid init(){//\u521d\u59cb\u5316 \n\tfor(int i=1,j=1;i<=n;++j){\n\t\tint k;\n\t\tfor(k=1;k<=blen&&i<=n;++i,++k){\n\t\t\tbk[i]=j;\n\t\t\tbl[j][k]=a[i];\n\t\t}k--;\n\t\tbl[j][0]=k;\n\t\tbsum=j;\n\t}//\u5904\u7406\u5757 \n\tfor(int i=1;i<=bsum;++i){\n\t\tfor(int j=1;j<=m;++j){\n\t\t\tg[j][i]=g[j][i-1];\n\t\t}\n\t\tfor(int j=1;j<=bl[i][0];++j){\n\t\t\tg[bl[i][j]][i]++;\n\t\t}\n\t}//\u9884\u5904\u7406g\u6570\u7ec4 \n\tfor(int i=1;i<=bsum;++i){\n\t\tfor(int j=i;j<=bsum;++j){\n\t\t\tint num=f[i][j-1];int mx=g[num][j]-g[num][i-1];\n\t\t\tfor(int k=1;k<=bl[j][0];++k){\n\t\t\t\tint now=g[bl[j][k]][j]-g[bl[j][k]][i-1];\n\t\t\t\tif(now>mx||(now==mx&&bl[j][k]<num))num=bl[j][k],mx=now;\n\t\t\t}\n\t\t\tf[i][j]=f[j][i]=num;\n\t\t}\n\t}//\u9884\u5904\u7406f\u6570\u7ec4 \n}\nvoid read(){//\u8bfb\u5165 \n\tcin>>n>>q;blen=sqrt(n);\n\tfor(int i=1;i<=n;++i)scanf(\"%d\",a+i),b[i]=a[i];\n}\nvoid lsh(){//lisanhua==lsh,\u79bb\u6563\u5316 \n\tsort(b+1,b+n+1);\n\tm=unique(b+1,b+n+1)-b-1;\n\tfor(int i=1;i<=n;++i)a[i]=lower_bound(b+1,b+m+1,a[i])-b;\n//\tfor(int i=1;i<=n;++i)cout<<i<<\":\"<<a[i]<<' ';puts(\"\");\n}\nvoid work(){\n\tint last=0;\n\twhile(q--){\n\t\tint l,r;\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tl=(l+last-1)%n+1;\n\t\tr=(r+last-1)%n+1;\n\t\tif(l>r)swap(l,r);\n\t\tstatic int bj[M],cnt,v[N];cnt=0;//bj\u8bb0\u5f55\u8fb9\u89d2\u7684\u6570\u636e,cnt\u4e3a\u8fb9\u89d2\u6570\u636e\u7684\u6570\u91cf\n\t\tint L,R,num,mx; \n\t\tif(bk[l]==bk[r]){//\u5728\u540c\u4e00\u5757\u5185\u66b4\u529b\u6c42\u4f17\u6570 \n\t\t\tfor(int i=l;i<=r;++i)bj[++cnt]=a[i],v[a[i]]++;\n\t\t\tmx=0;\n\t\t\tfor(int i=l;i<=r;++i){\n\t\t\t\tif(v[a[i]]>mx||(v[a[i]]==mx&&a[i]<num))num=a[i],mx=v[a[i]];\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",last=b[num]);\n\t\t}else{//\u5728\u4e0d\u540c\u5757\u65f6\uff0c\u5c06\u4e2d\u95f4\u5f53\u6210\u4e00\u5927\u5757\u548c\u8fb9\u89d2\u6bd4\u8f83\n\t\t      //\u6839\u636e\u6027\u8d28\uff0c\u4f17\u6570\u53ea\u6709\u53ef\u80fd\u662f\u4e2d\u95f4\u8fd9\u4e00\u5757\u7684\u4f17\u6570\u6216\u662f\u8fb9\u89d2\u4e0a\u7684\u6570\n\t\t\t  //\u6240\u4ee5\u66b4\u529b\u679a\u4e3e\u518d\u5224\u65ad\u5c31\u884c\u4e86 \n\t\t\tre i;\n\t\t\tfor(i=l;bk[i]==bk[i-1];++i){\n\t\t\t\tbj[++cnt]=a[i];v[a[i]]++;\n\t\t\t}L=bk[i]; \n\t\t\tfor(i=r;bk[i]==bk[i+1];--i){\n\t\t\t\tbj[++cnt]=a[i];v[a[i]]++;\n\t\t\t}R=bk[i];\n\t\t    num=f[L][R],mx=v[num]+g[num][R]-g[num][L-1];\n\t\t    for(i=1;i<=cnt;++i){\n\t\t    \tint now=v[bj[i]]+g[bj[i]][R]-g[bj[i]][L-1];\n\t\t    \tif(now>mx||(now==mx&&bj[i]<num))num=bj[i],mx=now;\n\t\t\t}\n//\t\t\tprintf(\"%d\\n\",num);\n\t\t\tprintf(\"%d\\n\",last=b[num]);\n\t\t}\n//\t\tfor(int i=1;i<=cnt;++i)cout<<bj[i]<<' ';puts(\"\");\n\t\tfor(re i=1;i<=cnt;++i)--v[bj[i]];//v\u6570\u7ec4\u8981\u8fd9\u6837\u6e05\u7a7a\uff0c\u590d\u6742\u5ea6O(cnt)\uff0c\u4e0d\u80fd\u7528memset\uff0c\u90a3\u6837\u662fO(n)\n\t}\n}\nint main(){\n//\tfreopen(\"1.in\",\"r\",stdin);\n//\tfreopen(\"1.out\",\"w\",stdout);\n\tread();\n\tlsh();\n\tinit();\n\twork(); \n}\n```",
        "postTime": 1542855140,
        "uid": 48143,
        "name": "zhenglier",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4168 \u3010[Violet]\u84b2\u516c\u82f1\u3011"
    },
    {
        "content": "\u539f\u9898\u4f20\u9001\u95e8[>Here<](https://www.luogu.org/problemnew/show/P4168)\n\n\uff08\u5f3a\u5236\u5728\u7ebf\u5751\u6b7b\u4eba\u554a\u3002\u3002\uff09\n\n\u4e00\u53e5\u8bdd\u9898\u610f\uff1a\u5728\u7ebf\u9759\u6001\u533a\u95f4\u4f17\u6570\u3002\n\n\u540c\u673a\u623f\u5946\u4f6c\u5206\u4e863\u5757\u5c31\u6c34\u8fc7\u4e86\u6b64\u9898\uff0c\u7136\u800c\u6211\u4e0d\u662f\u5f88~~**\u60f3\u6253**~~\u4f1a\u8fd9\u79cd~~**\u66b4\u529b**~~\u9ad8\u6df1\u7684\u7b97\u6cd5\u3002\uff08\u6b7b\u4e5f\u4e0d\u7528\u5206\u5757\u7cfb\u5217\uff09\n\n\u6211\u672c\u6765\u4ee5\u4e3a\u53ef\u4ee5\u50cf[\u603b\u7edf\u9009\u4e3e](https://www.luogu.org/problemnew/show/P3765)\u4e00\u6837\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u4f17\u6570\uff0c\u53ef\u60dc\u4e00\u4e2a\u533a\u95f4\u4f17\u6570\u5e76\u6ca1\u6709\u53ef\u4ee5\u7528\u6765\u5408\u5e76\u7684\u6027\u8d28\uff0c\u5982\u679c\u8981\u901a\u8fc7\u4e24\u4e2a\u533a\u95f4\u5408\u5e76\u5f97\u5230\u5927\u533a\u95f4\u4e2d\u7684\u4f17\u6570\uff0c\u7b54\u6848\u6709\u53ef\u80fd\u662f\u5176\u4e2d\u4e00\u4e2a\u533a\u95f4\u4e2d\u7b2c\u4e8c\u5927\u7684\u6570\uff0c\u8981\u7ef4\u62a4\u7b2c\u4e8c\u5927\u7684\u6570\u53c8\u8981\u8bb0\u5f55\u7b2c\u4e09\u5927\u3002\u3002\n\n\u6ca1\u6709\u529e\u6cd5\uff0c\u6700\u540e\u8fd8\u662f~~**\u5c48\u670d\u5728\u5206\u5757\u7684\u6deb\u5a01\u4e4b\u4e0b**~~\u6253\u4e86\u5206\u5757\u3002\n\n\u7528\u5206\u5757\u6253\u5c31\u5f88\u7b80\u5355\u4e86\uff1a\n\n\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u5757\u4e2d\u6bcf\u79cd\u82b1\u4e2a\u6570\uff0c\u7136\u540e\u5bf9\u4e8e\u5757\u6c42\u524d\u7f00\u548c\uff0c\u5e76\u7b97\u51fa\u6bcf\u4e2a\u5757\u4e2d\u7684\u4f17\u6570\u3002\n\n\u6bcf\u6b21\u67e5\u8be2\u65f6\u52a0\u4e0a\u4e24\u8fb9\u7684\u90e8\u5206\uff0c\u4e00\u8fb9\u52a0\u4e00\u8fb9\u66f4\u65b0\u4f17\u6570\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n\nint block,pos[100001],sum[1001][100001],num[100001],orig[100001],n,m,ans,lim,a[1001][1001];\nint start[1001],count[100001],l,r;\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tblock=(int)sqrt(n);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",num+i),orig[i]=num[i];\n\tstd::sort(orig+1,orig+n+1);\n\tlim=std::unique(orig+1,orig+n+1)-orig-1;\n\tfor(int i=1;i<=n;i++){\n\t\t++sum[pos[i]=(i-1)/block+1][num[i]=std::lower_bound(orig+1,orig+lim+1,num[i])-orig];\n\t\tif(pos[i]!=pos[i-1])start[pos[i]]=i;\n\t}\n\tfor(int i=1;i<=pos[n];i++)\n\t\tfor(int j=1;j<=lim;j++)\n\t\t\tsum[i][j]+=sum[i-1][j];\n\tfor(int i=1;i<=pos[n];i++){\n\t\tfor(int j=start[i];j<=n;j++){\n\t\t\tif(pos[j]!=pos[j-1])a[i][pos[j]]=a[i][pos[j]-1];\n\t\t\tif(++count[num[j]]>count[a[i][pos[j]]]||(count[num[j]]==count[a[i][pos[j]]]&&num[j]<a[i][pos[j]]))\n\t\t\t\ta[i][pos[j]]=num[j];\n\t\t}\n\t\tfor(int j=start[i];j<=n;j++){\n\t\t\t--count[num[j]];\n\t\t}\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tl=(l+ans-1)%n+1;\n\t\tr=(r+ans-1)%n+1;\n\t\tif(l>r)l^=r^=l^=r;\n\t\tans=0;\n\t\tif(pos[r]-pos[l]<=2){\n\t\t\tfor(int j=l;j<=r;j++){\n\t\t\t\tif(++count[num[j]]>count[ans]||(count[num[j]]==count[ans]&&num[j]<ans))\n\t\t\t\t\tans=num[j];\n\t\t\t}\n\t\t\tfor(int j=l;j<=r;j++){\n\t\t\t\t--count[num[j]];\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tans=a[pos[l]+1][pos[r]-1];\n\t\t\tfor(int j=l;pos[j]==pos[l];j++)\n\t\t\t\tif(++count[num[j]]+sum[pos[r]-1][num[j]]-sum[pos[l]][num[j]]>count[ans]+sum[pos[r]-1][ans]-sum[pos[l]][ans]||\n\t\t\t\t\t(count[num[j]]+sum[pos[r]-1][num[j]]-sum[pos[l]][num[j]]==count[ans]+sum[pos[r]-1][ans]-sum[pos[l]][ans]&&\n\t\t\t\t\tnum[j]<ans))\n\t\t\t\tans=num[j];\n\t\t\tfor(int j=start[pos[r]];j<=r;j++)\n\t\t\t\tif(++count[num[j]]+sum[pos[r]-1][num[j]]-sum[pos[l]][num[j]]>count[ans]+sum[pos[r]-1][ans]-sum[pos[l]][ans]||\n\t\t\t\t\t(count[num[j]]+sum[pos[r]-1][num[j]]-sum[pos[l]][num[j]]==count[ans]+sum[pos[r]-1][ans]-sum[pos[l]][ans]&&\n\t\t\t\t\tnum[j]<ans))\n\t\t\t\tans=num[j];\n\t\t\tfor(int j=l;pos[j]==pos[l];j++)--count[num[j]];\n\t\t\tfor(int j=start[pos[r]];j<=r;j++)--count[num[j]];\n\t\t}\n\t\tans=orig[ans];\n\t\tprintf(\"%d\\n\",ans);\n\t}\n}\n```",
        "postTime": 1537780837,
        "uid": 30903,
        "name": "Isonan",
        "ccfLevel": 0,
        "title": "luoguP4168 [Violet]\u84b2\u516c\u82f1"
    },
    {
        "content": "\u5148\u539a\u989c\u65e0\u803b\u7684\u6253\u4e2a\u5e7f\u544a->[\u8fd9\u91cc](https://www.cnblogs.com/bztMinamoto/p/9607299.html)\n\nmd\u8c03\u4e86\u4e00\u4e2a\u665a\u4e0a\u6700\u540e\u53d1\u73b0\u7adf\u7136\u662f\u7a7a\u95f4\u5f00\u5c0f\u4e86\u2026\u2026\u660e\u660e\u7b97\u51fa\u6765\u591f\u7684\u2026\u2026\n\n\u8bb2\u771f\u5176\u5b9e\u6211\u4ee5\u524d\u4e0d\u592a\u77a7\u5f97\u8d77\u5206\u5757\uff0c\u89c9\u5f97\u8fd9\u79cd\u57fa\u4e8e\u66b4\u529b\u7684\u6570\u636e\u7ed3\u6784\u4e00\u70b9\u7f8e\u611f\u90fd\u6ca1\u6709\u3002\u7136\u800c\u4eca\u5929\u505a\u4e86\u8fd9\u9053\u5206\u5757\u7684\u9898\u624d\u53d1\u73b0\u5206\u5757\u7684\u66b4\u529b\u4e4b\u7f8e\uff08\u5982\u679c\u6211\u7a7a\u95f4\u6ca1\u6709\u5f00\u5c0f\u5c31\u66f4\u7f8e\u4e86\uff09\n\n\u6211\u4eec\u5148\u5c06\u6574\u4e2a\u6570\u7ec4\u5206\u5757\uff0c\u8bbe\u5757\u7684\u5927\u5c0f\u4e3a$T$\n\n\u6211\u4eec\u5148\u9884\u5904\u7406\u51fa\u6240\u6709\u4ee5\u5757\u8fb9\u754c\u4e3a\u7aef\u70b9\u7684\u533a\u95f4\u7684\u7b54\u6848\uff0c\u5373$ans[L][R]$\u4ee3\u8868\u7740\u7b2c$L$\u5757\u5230\u7b2c$R$\u5757\u7684\u5e8f\u5217\u6240\u4ee3\u8868\u7684\u7b54\u6848\u3002\u8fd9\u4e2a\u53ef\u4ee5$O(n*n/T)$\u9884\u5904\u7406\n\n\u7136\u540e\u6211\u4eec\u5148\u5c06\u6240\u6709\u7684\u6570\u7ed9\u79bb\u6563\u5316\uff0c\u7136\u540e\u5bf9\u6bcf\u4e00\u4e2a\u503c\u90fd\u5f00\u4e00\u4e2avector\uff0c\u8bb0\u5f55\u8fd9\u4e2a\u503c\u5728\u6570\u7ec4\u4e2d\u51fa\u73b0\u7684\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u3002\u6bd4\u5982\u6570\u7ec4\u7684\u4e0b\u6807\u4e3a1,3,5\u7684\u4f4d\u7f6e\u90fd\u662f3\uff0c\u90a3\u4e483\u7684vector\u8bb0\u5f55\u7684\u5c31\u662f{1,3,5}\n\n\u8fd9\u4e2a\u6709\u4ec0\u4e48\u7528\u5462\uff1f\u6211\u4eec\u8bbe\u67e5\u8be2\u7684\u533a\u95f4\u4e3a$[l,r]$\uff0c\u7136\u540e\u5728\u8fd9\u4e2avector\u91cc\u5148\u4e8c\u5206\u67e5\u627e\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e$l$\u7684\u6570\u7684\u4f4d\u7f6e\uff0c\u518d\u4e8c\u5206\u67e5\u627e\u7b2c\u4e00\u4e2a\u5927\u4e8e$r$\u7684\u6570\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u4e24\u4e2a\u4f4d\u7f6e\u4e00\u51cf\u5c31\u662f\u8fd9\u4e2a\u6570\u5728\u8fd9\u4e2a\u533a\u95f4\u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u3002\u6bd4\u5982\u67e5\u8be2\u533a\u95f4$[2,4]$\uff0c\u6211\u4eec\u5148\u627e\u5230\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e2\u7684\u65703\uff0c\u5728vector\u4e2d\u4e0b\u6807\u4e3a2\uff0c\u518d\u627e\u7b2c\u4e00\u4e2a\u5927\u4e8e4\u7684\u6570\u4e3a5\uff0c\u4e0b\u6807\u4e3a3\uff0c\u90a3\u4e483-2=1\u5c31\u662f3\u8fd9\u4e2a\u6570\u5b57\u5728\u8fd9\u4e2a\u533a\u95f4\u4e2d\u7684\u51fa\u73b0\u6b21\u6570\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u8bbe$[L,R]$\u4e3a\u67e5\u8be2\u533a\u95f4\u4e4b\u95f4\u7684\u6574\u5757\uff0c\u56e0\u4e3a\u6211\u4eec\u7b2c\u4e00\u6b65\u5df2\u7ecf\u9884\u5904\u7406\u51fa\u4e86\u6240\u6709\u5757\u4e0e\u5757\u4e4b\u95f4\u7684\u7b54\u6848\uff0c\u90a3\u4e48\u8fd9\u4e00\u6bb5\u4e4b\u95f4\u7684\u4f17\u6570\u4e5f\u5c31\u53ef\u4ee5\u77e5\u9053\u3002\u90a3\u4e48\uff0c\u53ea\u6709\u533a\u95f4$[l,L-1]$\u548c$[R+1,r]$\u4e4b\u95f4\u7684\u6570\u5b57\u6709\u53ef\u80fd\u66f4\u65b0\u7b54\u6848\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u53bb\u679a\u4e3e\u8fd9\u4e24\u4e2a\u533a\u95f4\u4e2d\u7684\u6240\u6709\u6570\u5b57\uff0c\u7136\u540e\u7528\u4e0a\u9762\u8bf4\u7684\u65b9\u6cd5\u53bb\u67e5\u8be2\u5b83\u5728\u6574\u4e2a\u67e5\u8be2\u533a\u95f4\u5185\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u7136\u540e\u66f4\u65b0\u7b54\u6848\u5373\u53ef\n\n\u590d\u6742\u5ea6\u4e3a$O(n*n/T+n*T*logn)$\uff0c\u8bbe\u5757\u7684\u5927\u5c0f\u4e3a$n/sqrt{nlogn}$ \uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f$O(nsqrt{nlogn})$\n\n\u5176\u5b9e\u8fd8\u6709\u4e00\u79cd\u66f4\u5feb\u7684\u65b9\u6cd5\u662f\u5148\u9884\u5904\u7406\u51fa\u5757\u4e0e\u5757\u4e4b\u95f4\u7684\u7b54\u6848\u548c\u5404\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u7136\u540e\u67e5\u8be2\u53ea\u8981\u5728\u6563\u5757\u91cc\u66b4\u529b\u589e\u52a0\u5e76\u66f4\u65b0\u7b54\u6848\uff0c\u4e4b\u540e\u66b4\u529b\u590d\u539f\u5373\u53ef\uff08\u7136\u800c\u6211\u61d2\u5e76\u4e0d\u60f3\u6253\uff09\u3002\u697c\u4e0b\u5df2\u7ecf\u5199\u4e86\uff0c\u6211\u5c31\u4e0d\u591a\u63d0\u4e86\uff08\u4e3b\u8981\u662f\u6253\u5b8c\u624d\u53d1\u73b0\u697c\u4e0b\u90a3\u4e2a\u597d\u60f3\u8dd1\u7684\u6bd4\u6211\u5feb\uff0c\u56e0\u4e3a\u5c11\u4e86\u4e2a\u4e8c\u5206\u7684\u590d\u6742\u5ea6\uff09\n\n\u7136\u540e\u57fa\u672c\u6ce8\u610f\u70b9\u90fd\u5199\u5728\u6ce8\u89e3\u91cc\u4e86\n```\n//minamoto\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<vector>\n#include<cmath>\n#define inf 0x3f3f3f3f\nusing namespace std;\n#define getc() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline int read(){\n    #define num ch-'0'\n    char ch;bool flag=0;int res;\n    while(!isdigit(ch=getc()))\n    (ch=='-')&&(flag=true);\n    for(res=num;isdigit(ch=getc());res=res*10+num);\n    (flag)&&(res=-res);\n    #undef num\n    return res;\n}\nchar sr[1<<21],z[20];int C=-1,Z;\ninline void Ot(){fwrite(sr,1,C+1,stdout),C=-1;}\ninline void print(int x){\n    if(C>1<<20)Ot();if(x<0)sr[++C]=45,x=-x;\n    while(z[++Z]=x%10+48,x/=10);\n    while(sr[++C]=z[Z],--Z);sr[++C]='\\n';\n}\nconst int N=40005,M=1005;\nint ans[M][M],a[N],b[N],cnt[N],rt[N],vis[N];\nvector<int> pos[N];\nint n,m,q,lastans=0,s,l,r;\ninline int query_cnt(int x){\n\t//\u67e5\u8be2\u6570\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u6ce8\u610fl\u548cr\u8981\u5f00\u5168\u5c40\u53d8\u91cf \n    return upper_bound(pos[x].begin(),pos[x].end(),r)-lower_bound(pos[x].begin(),pos[x].end(),l);\n}\nvoid init(){\n\t//\u66b4\u529b\u679a\u4e3e\u5757\u4e0e\u5757\u4e4b\u95f4\u7684\u7b54\u6848 \n    for(int i=1;i<=rt[n];++i){\n        memset(cnt,0,sizeof(cnt));\n        int bg=s*(i-1)+1,res=a[bg];\n        for(int j=bg;j<=n;++j){\n            ++cnt[a[j]];\n            if(cnt[a[j]]>cnt[res]||(cnt[a[j]]==cnt[res]&&a[j]<res)) res=a[j];\n            ans[i][rt[j]]=res;\n        }\n    }\n}\nint query(int l,int r){\n\t//\u67e5\u8be2\uff0c\u5c0f\u5757\u66b4\u529b\uff0c\u5927\u5757\u76f4\u63a5\u627e\u7b54\u6848 \n    if(rt[r]-rt[l]<=1){\n    \tint id=0,res=0;\n        for(int i=l;i<=r;++i)\n        if(!vis[a[i]]){\n            int t=query_cnt(a[i]);\n            if(t>res||(t==res&&a[i]<id)) res=t,id=a[i];\n            vis[a[i]]=1;\n        }\n        for(int i=l;i<=r;++i) vis[a[i]]=0;\n        return b[id];\n    }\n    int L=rt[l]+1,R=rt[r]-1;\n    int LL=(L-1)*s+1,RR=R*s;\n    int id=ans[L][R],res=query_cnt(id);vis[id]=1;\n    for(int i=l;i<LL;++i)\n    if(!vis[a[i]]){\n        int t=query_cnt(a[i]);\n        if(t>res||(t==res&&a[i]<id)) res=t,id=a[i];\n        vis[a[i]]=1;\n    }\n    for(int i=RR+1;i<=r;++i)\n    if(!vis[a[i]]){\n        int t=query_cnt(a[i]);\n        if(t>res||(t==res&&a[i]<id)) res=t,id=a[i];\n        vis[a[i]]=1;\n    }\n    for(int i=l;i<LL;++i) vis[a[i]]=0;\n    for(int i=RR+1;i<=r;++i) vis[a[i]]=0;\n    vis[ans[L][R]]=0;\n    return b[id];\n}\nint main(){\n    n=read(),q=read(),s=sqrt(n/(double)(log2(n))+1);\n    //\u6211\u6015s\u4f1a\u53d8\u62100\u6240\u4ee5sqrt\u91cc\u52a0\u4e86\u4e2a1\uff08\u53ef\u80fd\u5e76\u4e0d\u9700\u8981\uff09 \n    for(int i=1;i<=n;++i) a[i]=b[i]=read(),rt[i]=(i-1)/s+1;//\u5206\u5757 \n    sort(b+1,b+1+n),m=unique(b+1,b+1+n)-b-1;\n    for(int i=1;i<=n;++i) a[i]=lower_bound(b+1,b+1+m,a[i])-b,pos[a[i]].push_back(i);\n    //\u4ee5\u4e0a\u662f\u79bb\u6563 \n    init();\n    while(q--){\n        l=read(),r=read();\n        l=(l+lastans-1)%n+1,r=(r+lastans-1)%n+1;\n        if(l>r) swap(l,r);\n        print(lastans=query(l,r));\n    }\n    Ot();\n    return 0;\n}\n```",
        "postTime": 1536328619,
        "uid": 41781,
        "name": "bztMinamoto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4168 \u3010[Violet]\u84b2\u516c\u82f1\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u660e\u663e\u7684\u5206\u5757\u9898\u3002\n\n\u5148\u5c06\u989c\u8272\u79bb\u6563\u5316~~\uff08\u6bd5\u7adf\u989c\u8272\u6570\u5b57\u67091e9\uff09~~\u518d\u5206\u6210$\\sqrt{n}$\u4e2a\u5757\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u5757\u7684\u4f17\u6570\uff0c\u53ef\u4ee5\u628a\u6bcf\u6b21\u8be2\u95ee\u62c6\u6210k\u4e2a\u6574\u5757\u4e0e\u4e0d\u5b8c\u6574\u5757\u7684\u4f17\u6570\u3002\u4e8e\u662f\u6bcf\u6b21\u6700\u591a\u9700\u8981\u6bd4\u8f83$2\\sqrt{n}+1$\u4e2a\u5143\u7d20\u3002\n\n\u6709\u51e0\u4e2a\u5c0f\u7684\u6ce8\u610f\u4e8b\u9879\uff1a\n\n1.\u8fd9\u662f\u5f3a\u5236\u5728\u7ebf\u7684\uff01\uff01\uff01\n\n2.\u5757\u4e0d\u4e00\u5b9a\u662f\u6807\u51c6\u7684$\\sqrt{n}$\u5757\uff01\uff01\uff01~~\uff08\u6211\u4e0d\u4f1a\u544a\u8bc9\u4f60\u8fd9\u6837\u6211\u8fd8\u62ff\u4e8685\u5206\u7684\uff09~~\u5efa\u8bae\u5757\u6570\u8bb0\u4e00\u4e2a\u53d8\u91cf\n\n\n\u4ee3\u7801\u5982\u4e0b\uff0c\u7f29\u8fdb\u8f83\u4e11\u89c1\u8c05~~\uff08\u6211\u662f\u4e0d\u4f1a\u8bf4\u6211\u56e0\u4e3a\u7f29\u8fdb\u6709\u4e9b\u5730\u65b9\u5199\u9519\u4e86\u6ca1\u53d1\u73b0\u7136\u540ewa\u4e86\u51e0\u6b21\u7684\uff09~~\n\n```\n#include <bits/stdc++.h>\n#define F(i, l, r) for(int i = (l), _end_ = (int)(r); i <= _end_; ++i)\n#define f(i, r, l) for(int i = (r), _end_ = (int)(l); i >= _end_; --i)\n#define Set(a, v) memset(a, v, sizeof(a))\nusing namespace std;\n\nbool chkmin(int &a, int b) {return b < a ? a = b, 1 : 0;}\nbool chkmax(int &a, int b) {return b > a ? a = b, 1 : 0;}\n\ninline long long  read() {\n long long x = 0, fh = 1; char ch = getchar();\n    for (; !isdigit(ch); ch = getchar() ) if (ch == '-') fh = -1;\n    for (; isdigit(ch); ch = getchar() ) x = (x<<1) + (x<<3) + (ch ^ '0');\n    return x * fh;\n}\nint sum[230][230];\nint mp[50005],mp2[50005];\nint h[50005],t[50005];\nint n,m;\nint cnt;\nint k;\nint ksum;\nint from[50005];\nint num[50005];\nint col[230][50005];\nint main () {\n#ifndef ONLINE_JUDGE\n    freopen(\"fk.in\",\"r\",stdin);\n    freopen(\"fk.out\",\"w\",stdout);\n#endif\n    n=read();\n    m=read();\n    F(i,1,n){\n       mp[i]=mp2[i]=read();\n    }\n    cnt=n;\n    sort(mp2+1,mp2+cnt+1);\n    cnt=unique(mp2+1,mp2+cnt+1)-mp2-1;\n    F(i,1,n)mp[i]=lower_bound(mp2+1,mp2+cnt+1,mp[i])-mp2;\n    k=sqrt(n);\n    F(i,1,n){\n       if(i%k==1)h[++ksum]=i;\n       if(i%k==0||i==n)t[ksum]=i;\n       from[i]=ksum;\n    }\n    F(i,1,ksum){\n       F(j,i,ksum){\n         sum[i][j]=sum[i][j-1];\n         F(l,h[j],t[j]){\n            ++num[mp[l]];\n            if((num[mp[l]]>num[sum[i][j]])||(num[mp[l]]==num[sum[i][j]]&&mp[l]<sum[i][j]))sum[i][j]=mp[l];\n\n         }\n       }\n       F(j,1,n)col[i][j]=col[i-1][j];\n       F(j,h[i],t[i])++col[i][mp[j]];\n       Set(num,0);\n    }\n    int lstans=0;\n    F(i,1,m){\n       int l=read(),r=read();\n       l=(l+lstans-1)%n+1,r=(r+lstans-1)%n+1;\n       if(l>r)swap(l,r);\n       lstans=0;\n       if(from[l]+1>=from[r]){\n           F(i,l,r){\n              ++num[mp[i]];\n              if(num[mp[i]]>num[lstans]||(num[mp[i]]==num[lstans]&&mp[i]<lstans))lstans=mp[i];\n           }\n           F(i,l,r)num[mp[i]]--;\n       }\n       else{\n           lstans=sum[from[l]+1][from[r]-1];\n           F(i,l,t[from[l]]){\n              ++num[mp[i]];\n              int lans=num[mp[i]]+col[from[r]-1][mp[i]]-col[from[l]][mp[i]],rans=num[lstans]+col[from[r]-1][lstans]-col[from[l]][lstans];\n               if(lans>rans||(lans==rans&&mp[i]<lstans))lstans=mp[i];\n           }\n           F(i,h[from[r]],r){\n              ++num[mp[i]];\n              int lans=num[mp[i]]+col[from[r]-1][mp[i]]-col[from[l]][mp[i]],rans=num[lstans]+col[from[r]-1][lstans]-col[from[l]][lstans];\n               if(lans>rans||(lans==rans&&mp[i]<lstans))lstans=mp[i];\n           }\n           F(i,l,t[from[l]])--num[mp[i]];\n           F(i,h[from[r]],r)--num[mp[i]];\n       }\n       lstans=mp2[lstans];\n       printf(\"%d\\n\",lstans);\n    }\n    return 0;\n}\n```",
        "postTime": 1518078974,
        "uid": 44829,
        "name": "psk011102",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4168 \u3010[Violet]\u84b2\u516c\u82f1\u3011"
    }
]