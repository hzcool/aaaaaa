[
    {
        "content": "\u53c8\u6765\u7801\u9898\u89e3\u54af~~\n\n~~\u5176\u5b9e\u53ea\u662f\u4e3a\u4e86\u8865\u4e00\u4e0b\u5495\u503cQAQ~~\n\n\u9996\u5148\uff0c\u770b\u5230\u8fd9\u4e00\u9053\u9898\uff0c\u6211\u7b2c\u4e00\u6b65\u60f3\u5230\u7684\u5c31\u662f\u6700\u77ed\u8def\u3002\n\n\u4e3a\u4ec0\u4e48\uff1f~~\u849f\u84bb\u7684\u7075\u9b42\u62f7\u95eeQAQ~~\n\n\u56e0\u4e3a\u8fd9\u9053\u9898\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u662f\u53ef\u4ee5\u628a\u516c\u4ea4\u8f66\u4fe1\u606f\u8f6c\u5316\u6210\u4e00\u4e2a\u56fe\uff0c\u800c\u6700\u5c11\u8f6c\u8f66\u6b21\u6570\u5c31\u662f\u5b83\u7684\u6700\u77ed\u8def\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u8fd9\u6837\u7684\u4e00\u4e2a\u56fe\uff0c\u7136\u540e\u5c31\u7528\u5806\u4f18\u5316$dijkstra$\u6a21\u677f\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u600e\u4e48\u5efa\u56fe\u5462\uff1f\n\n\u9996\u5148\uff0c\u5728\u4e00\u6761\u4fe1\u606f\u4e4b\u5185\uff0c\u6bcf\u4e24\u4e2a\u516c\u4ea4\u8f66\u7ad9\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\uff0c\u4e0d\u9700\u8981\u6362\u8f66\uff0c\u4e8e\u662f\u8fd9\u4e24\u4e2a\u516c\u8f66\u7ad9\u4e4b\u95f4\u7684\u6743\u503c\u4e3a$0$\uff1b\n\n\u5176\u6b21\uff0c\u5bf9\u4e8e\u540c\u4e00\u4e2a\u8f66\u7ad9\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u51fa\u4e24\u6761\u4fe1\u606f\u90fd\u6709\u6ca1\u6709\u5305\u542b\u8fd9\u4e00\u4e2a\u8f66\u7ad9\u3002\u5982\u679c\u6709\uff0c\u5c31\u5728\u5b83\u4eec\u4e4b\u95f4\u8fde\u4e00\u6761\u6743\u503c\u4e3a$1$\u7684\u8fb9\u3002\n\n\u4e8e\u662f\uff0c\u5efa\u56fe\u5c31\u8fd9\u6837\u5927\u529f\u544a\u6210\u4e86\uff010^_^0\n\n$Code$\u5982\u4e0b\uff1a\n\n```cpp\nvoid Add_nei(){\n\tfor(int k = 1; k <= m; ++k){\n\t\tfor(int i = 1; i < mp[k][0]; ++i){\n\t\t\tfor(int j = i + 1; j <= mp[k][0]; ++j){\n\t\t\t\tint x, y, z, w;\n\t\t\t\tx = z = k;\n\t\t\t\ty = mp[k][i], w = mp[k][j];\n\t\t\t\tadd(x * 1000 + y, z * 1000 + w, 0);//\u76f8\u540c\u4fe1\u606f\u5185\u4e24\u4e2a\u8f66\u7ad9\u7684\u8fde\u8fb9\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = 1; i <= n; ++i){\n\t\tfor(int j = 1; j <= m; ++j){\n\t\t\tif(vis[j][i]){\n\t\t\t\tint x, y, z, w;\n\t\t\t\tx = j, y = i, w = i;\n\t\t\t\tfor(int k = 1; k <= m; ++k){\n\t\t\t\t\tif(k == j) continue;\n\t\t\t\t\tif(vis[k][i]){\n\t\t\t\t\t\tz = k;\n\t\t\t\t\t\tadd(x * 1000 + y, z * 1000 + w, 1);//\u76f8\u540c\u8f66\u7ad9\u7684\u8fde\u8fb9\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\n```\n\n\u5f53\u7136\uff0c\u8fd9\u9053\u9898\u8fd8\u6709\u8bb8\u591a\u9700\u8981\u5904\u7406\u7684\u5730\u65b9\uff1a\n\n$i.$\u8f93\u5165\u3002\u8fd9\u91cc\u662f\u4ee5\u6362\u884c\u7b26\u4e3a\u5206\u754c\u70b9\u6765\u8f93\u5165\u7684\u3002\u5927\u5bb6\u53ef\u4ee5\u7528\u624b\u5199\u5feb\u8bfb\u6765\u5904\u7406\u8f93\u5165\uff0c\u6211\u7528\u7684\u662f$string$\u7684$getline$\u8f93\u5165\u3002\n\n$ii.$\u8282\u70b9\u8868\u793a\u3002\u56e0\u4e3a\u8fd9\u91cc\u6d89\u53ca\u5230\u516c\u4ea4\u8f66\u4fe1\u606f\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u540c\u65f6\u5b58\u50a8\u4fe1\u606f\u7f16\u53f7\u548c\u516c\u4ea4\u8f66\u7ad9\u7f16\u53f7\u3002\u4f46\uff0c\u4e3a\u4e86\u524d\u5411\u661f\u94fe\u8868\u7684\u5b58\u50a8\uff0c\u6211\u662f\u7528\u7684\u662f\u54c8\u5e0c\uff0c\u8282\u7ea6\u7a7a\u95f4\u3002\n\n$iii.$\u6700\u540e\u8f93\u51fa\u3002\u6ce8\u610f\u8f93\u51fa\u65f6\u5e94\u5f53\u6bcf\u4e2a\u4fe1\u606f\u91cc\u7684$n$\u53f7\u8f66\u7ad9\u7684\u6700\u5c0f\u503c\u3002\n\n\u4e8e\u662f\uff0c\u8fd9\u9053\u9898\u5c31\u8fd9\u4e48\u7ed3\u675f\u4e86\u2026\u2026\n\n\u63a5\u4e0b\u6765\u4e0a\u5b8c\u6574$Code$\u5566~~\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <queue>\n#include <vector>\n#include <cctype>\n#include <string>\nusing namespace std;\nint m, n, mp[110][510], ans = 0x7fffffff;\nbool vis[110][510];\nstring s;\nstruct edge{\n\tint v, w, nxt;\n}e[2500010];\nint head[2500010], cnt, dis[2500010];\ninline void add(int u, int v, int w){//\u524d\u5411\u661f \n\te[++cnt].v = v;\n\te[cnt].w = w;\n\te[cnt].nxt = head[u];\n\thead[u] = cnt;\n}\nvoid work(int k){//\u8f93\u5165\u5904\u7406 \n\tint sz = s.size();\n\tfor(int i = 0; i < sz; ++i){\n\t\tint x = 0;\n\t\twhile(s[i] >= '0' && s[i] <= '9'){\n\t\t\tx = (x << 3) + (x << 1) + (s[i] ^ 48);\n\t\t\t++i;\n\t\t}\n\t\tmp[k][++mp[k][0]] = x;\n\t\tvis[k][x] = 1;\n\t}\n\treturn; \n}\nvoid Add_nei(){//\u5efa\u56fe \n\tfor(int k = 1; k <= m; ++k){\n\t\tfor(int i = 1; i < mp[k][0]; ++i){\n\t\t\tfor(int j = i + 1; j <= mp[k][0]; ++j){\n\t\t\t\tint x, y, z, w;\n\t\t\t\tx = z = k;\n\t\t\t\ty = mp[k][i], w = mp[k][j];\n\t\t\t\tadd(x * 1000 + y, z * 1000 + w, 0);//\u76f8\u540c\u4fe1\u606f\u5185\u4e24\u4e2a\u8f66\u7ad9\u7684\u8fde\u8fb9\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = 1; i <= n; ++i){\n\t\tfor(int j = 1; j <= m; ++j){\n\t\t\tif(vis[j][i]){\n\t\t\t\tint x, y, z, w;\n\t\t\t\tx = j, y = i, w = i;\n\t\t\t\tfor(int k = 1; k <= m; ++k){\n\t\t\t\t\tif(k == j) continue;\n\t\t\t\t\tif(vis[k][i]){\n\t\t\t\t\t\tz = k;\n\t\t\t\t\t\tadd(x * 1000 + y, z * 1000 + w, 1);//\u76f8\u540c\u8f66\u7ad9\u7684\u8fde\u8fb9\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\nstruct node{\n\tint u, d;\n\tbool operator<(const node&rhs)const{\n\t\treturn d > rhs.d;\n\t}\n};\npriority_queue <node> q;\nvoid Dij(){//dijkstra\u6a21\u677f \n\tfor(int i = 1; i <= n; ++i){\n\t\tfor(int j = 1; j <= m; ++j){\n\t\t\tdis[j * 1000 + i] = 0x3f3f3f3f;\n\t\t}\n\t}//\u6700\u5c0f\u503c\u521d\u59cb\u5316\u6700\u5927 \n\tfor(int i = 1; i <= m; ++i) dis[i * 1000 + 1] = 0;//\u8f66\u7ad91\u4e3a0 \n\tfor(int i = 1; i <= m; ++i) if(vis[i][1]) q.push((node){i * 1000 + 1, 0});\n\twhile(!q.empty()){\n\t\tnode data = q.top();\n\t\tq.pop();\n\t\tint u = data.u, d = data.d;\n\t\tif(d != dis[u]) continue;\n\t\tfor(int i = head[u]; i; i = e[i].nxt){\n\t\t\tint v = e[i].v, w = e[i].w;\n\t\t\tif(dis[v] > dis[u] + w){\n\t\t\t\tdis[v] = dis[u] + w;\n\t\t\t\tq.push((node){v, dis[v]});\n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\nint main(){\n\tscanf(\"%d%d\", &m, &n);\n\tgetline(cin, s);\n\tfor(int i = 1; i <= m; ++i){\n\t\tgetline(cin, s);\n\t\twork(i);\n\t}\n\tAdd_nei();\n\tDij();\n\tfor(int i = 1; i <= m; ++i) ans = min(ans, dis[i * 1000 + n]);//\u53d6\u6700\u5c0f\u503c \n\tif(ans == 0x3f3f3f3f){//\u6ce8\u610f\u7279\u5224 \n\t\tprintf(\"NO\"); \n\t\treturn 0;\n\t}\n\tprintf(\"%d\", ans);\n\treturn 0;\n}\n```\n\n\u8fd9\u7bc7\u9898\u89e3\u5c31\u5230\u6b64\u7ed3\u675f\u4e86\uff0c\u6c42\u5927\u5bb6\u7684\u8d44\u74f7QAQ\n\n~~\u5e2e\u5fd9\u70b9\u4e2a\u8d5e\u5457~~\n\n## End",
        "postTime": 1575688978,
        "uid": 147999,
        "name": "Warriors_Cat",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5754 \u3010[NOI1997]\u6700\u4f18\u4e58\u8f66\u3011"
    },
    {
        "content": "**\u505a\u6cd5 \uff1aFloyd + \u795e\u5947\u601d\u8def**\n\n**\u535a\u5ba2\u6548\u679c\u66f4\u4f73\uff1a[\u4f20\u9001\u95e8](https://www.cnblogs.com/qqq1112/p/12045742.html)**\n\n**\u601d\u8def**\uff1a\u6b64\u9898\u53ef\u4ee5\u6362\u4e2a\u601d\u8def\u53bb\u60f3\uff0c\u4ee5\u6837\u4f8b\u4e3a\u4f8b\uff0c\u6211\u4eec\u4e0d\u8003\u8651\u6362\u4e58\u7684\u6b21\u6570\uff0c\u8bbe\u540c\u4e00\u6761\u7ebf\u8def\u4e0a\u7684\u4efb\u610f\u4e24\u70b9\u95f4\u7684\u8ddd\u79bb\u4e3a1\uff0c\u540c\u65f6\u4e0d\u9700\u8981\u6362\u4e58\uff0c\u8fd9\u65f6\u4fbf\u53ef\u4ee5\u60ca\u5947\u7684\u53d1\u73b0\u4ece1\uff08\u8d77\u70b9\uff09\u8dd1\u5230n\uff08\u7ec8\u70b9\uff09\u7684\u6700\u77ed\u8def\u5f84 - 1\u5373\u4e3a\u6b63\u786e\u7b54\u6848\uff01\u8fd9\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f\u5176\u539f\u56e0\u662f\u5f53\u9700\u8981\u6362\u4e58\u65f6\uff0c\u80af\u5b9a\u4f1a\u4ece\u5f53\u524d\u7ebf\u8def\u4e0a\u8d70\u5230\u4efb\u610f\u4e00\u70b9\u518d\u8fdb\u884c\u6362\u4e58\uff0c\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u80af\u5b9a\u4f1a\u4ece\u5f53\u524d\u7ebf\u8def\u4e0a\u8d70\u5230\u53e6\u5916\u4e00\u70b9\u81ea\u5df1\u53bb\u60f3\uff08\u6216\u8005\u8bc4\u8bba\u79c1\u4fe1\u95ee\uff09\uff0c\u4ece\u800c\u6362\u4e58\u7684\u6b21\u6570\u5c31\u4fbf\u662f\u5728\u4efb\u610f\u4e00\u6761\u8def\u5f84\u4e0a\u8d70\u7684\u6b21\u6570\u4e86\uff08\u8d70\u5b8c\u4e4b\u540e\u80af\u5b9a\u4f1a\u53bb\u6362\u4e58\uff0c\u6700\u540e\u8d70\u7684\u4e00\u6b21\u9664\u5916\uff09\u3002\u5f53\u7136\u6211\u4eec\u6700\u540e\u7b54\u6848\u5fc5\u987b\u51cf\u4e00\uff0c\u5176\u539f\u56e0\u5c31\u662f\u5f53\u8d70\u5230\u6700\u540e\u4e00\u6761\uff08\u518d\u4e5f\u4e0d\u4f1a\u6362\u4e58\u4e86\uff09\u7ebf\u8def\u65f6\uff0c\u76f4\u63a5\u8d70\u5230\u7ec8\u70b9\u662f\u4e0d\u82b1\u6362\u6210\u6b21\u6570\u7684\uff0c\u800c\u6211\u4eec\u5374\u8bb0\u5f55\u4e86\u4e00\u6b21\uff0c\u6240\u4ee5\u6700\u540e\u8981\u51cf\u4e00\u3002\u6570\u636e\u5f88\u5c0f\uff0c\u7528Floyd\u5b9e\u73b0\u5c31\u884c\u4e86\u3002\n\n**\u672c\u9898\u5751\u70b9**\uff1a\u8bfb\u5165\u5f88\u5751\uff0c\u9700\u8981\u7528\u5b57\u7b26\u4e32\u8bfb\u5165\uff0c\u8fd8\u6709\u8bb0\u5f97\u628a\u7b2c\u4e00\u884c\u884c\u672b\u7a7a\u683c\u7ed9\u8fc7\u6ee4\u6389\uff0c\u5426\u5219getline\u6216gets\u4f1a\u628a\u8fd9\u4e2a\u56de\u8f66\u4e5f\u7ed9\u8bfb\u4e86\u3002\n\n**code**\uff1a\n```cpp\n#include <bits/stdc++.h>\n#define INF 0x3f3f3f3f//\u5f88\u5927\u7684\u6570 \nusing namespace std;\nint n, m, x, q[100001], f[1001][1001];\nstring s;\ninline void floyd()//\u6a21\u677f \n{\n\tfor(register int k = 1; k <= n; ++k)\n\t{\n\t\tfor(register int i = 1; i <= n; ++i)\n\t\t{\n\t\t\tfor(register int j = 1; j <= n; ++j)\n\t\t\t{\n\t\t\t\tif(i != j && i != k && j != k)\n\t\t\t\t{\n\t\t\t\t\tf[i][j] = min(f[i][j], f[i][k] + f[k][j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\nint main()\n{\n\tmemset(f, INF, sizeof(f));\n\tscanf(\"%d %d\\n\", &m, &n);//\u8bb0\u5f97 + \\n \n\twhile(m--)\n\t{\n\t\tint z = 0;\n\t\tgetline(cin, s);//\u5b57\u7b26\u4e32\u8bfb\u5165 \n\t\tfor(register int i = 0; i < s.length(); ++i)\n\t\t{\n\t\t\tx = 0;//\u8bb0\u5f55\u5f53\u524d\u7b54\u6848 \n\t\t\twhile(s[i] <= '9' && s[i] >= '0')//\u8f6c\u6362(\u9047\u5230\u7a7a\u683c\u5c31\u9000\u4e86) \n\t\t\t{\n\t\t\t\tx = x * 10 + s[i] - '0';//\u5f53\u524d\u6240\u6709\u4f4d\u90fd\u5411\u524d\u79fb\u4e00\u4f4d\u518d\u52a0\u4e0a\u6700\u4f4e\u4f4d(\u8f6c\u6210\u6570\u5b57) \n\t\t\t\t++i;//\u4e0d\u505c\u7684\u52a0 \n\t\t\t}\n\t\t\tq[++z] = x;//\u5b58\u50a8 \n\t\t}\n\t\tfor(register int i = 1; i <= z; ++i)\n\t\t{\n\t\t\tf[i][i] = 0;//\u81ea\u5df1\u5230\u81ea\u5df1\u662f0 \n\t\t\tfor(register int j = i + 1; j <= z; ++j)\n\t\t\t{\n\t\t\t\tf[q[i]][q[j]] = 1;//\u8f66\u7ad9\u4efb\u4f55\u4e00\u4f4d\u5230\u9664\u4e86\u81ea\u5df1\u4ee5\u5916\u7684\u4efb\u4f55\u4e00\u4f4d\u7684\u8ddd\u79bb\u90fd\u662f1 \n\t\t\t}\n\t\t}\n\t}\n\tfloyd();//\u7ecf\u5178\u7b97\u6cd5 \n\tif(f[1][n] == INF)//\u5230\u4e0d\u4e86 \n\t{\n\t\tprintf(\"NO\");//\u6ce8\u610f\u4e00\u672c\u901a\u4e0a\u7684\u8fd9\u9053\u9898\u662fN0\uff0c\u4f46\u597d\u50cf\u4e0d\u5f71\u54cd\uff0c\u6ca1\u6709\u8fd9\u79cd\u6570\u636e \n\t}\n\telse\n\t{\n\t\tprintf(\"%d\", f[1][n] - 1);//\u8bb0\u5f97 - 1 \n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1576412993,
        "uid": 143681,
        "name": "Strong_Jelly",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5767 \u3010[NOI1997]\u6700\u4f18\u4e58\u8f66\u3011"
    },
    {
        "content": "**\u6838\u5fc3\u601d\u8def\uff1aDijkstra\u7b97\u6cd5**\n\n------------\n\n\u9996\u5148\uff0c\u6211\u8ba4\u4e3a\u8fd9\u9053\u9898\u6700\u91cd\u8981\u7684\u662f\u5efa\u56fe\uff0c\u89e3\u91ca\u4e00\u4e0b\u6211\u662f\u5982\u4f55\u5efa\u56fe\uff1a\n\n\uff08\u9898\u76ee\u4e2d\u8bf4\u660e\u4e86\u662f\u201c**\u5355\u7a0b**\u5df4\u58eb\u7ebf\u8def\u201d\uff0c\u6545\u56fe\u4e3a\u6709\u5411\u56fe\u3002\uff09\n\n\u6837\u4f8b\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/ue25y66b.png)\n\n\uff08\u7ebf\u8def\u7684\u7ad9\u70b9\u5c31\u662f\u8282\u70b9\uff0c\u8fb9\u4e0a\u7684\u6570\u5b57\u5c31\u662f\u6307\u8fd9\u6761\u8fb9\u5c5e\u4e8e\u54ea\u4e00\u6761\u7ebf\u8def\uff09\n\n\u7531\u6837\u4f8b\u56fe\u53ef\u4ee5\u770b\u51fa\uff0c1->7\u7684\u6700\u5c11\u6362\u4e58\u7684\u6b21\u6570\u662f2\u6b21\uff1a\n\n1->3  \u6362\u4e58  3->6  \u6362\u4e58 6->7 \n\n\u4f46\u5982\u679c\u53ea\u662f\u5355\u7eaf\u7684\u4f5c\u6a21\u62df\uff0c\u8fd9\u9053\u9898\u5c31\u5931\u53bb\u4e86\u610f\u4e49\u3002\n\n\u6211\u4eec\u4e0d\u59a8\u8fd9\u6837\u5efa\u56fe\uff1a\n\n**\u5c06\u6bcf\u4e00\u6761\u7ebf\u8def\u7684\u7ad9\u70b9\uff0c\u90fd\u4e0e\u8fd9\u6761\u7ebf\u8def\u7684\u8d77\u70b9\u76f8\u8fde\u3002**\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/t8rkn89r.png)\n\n**\u5728\u540c\u4e00\u6761\u7ebf\u8def\u4e0a\u7684\u8282\u70b9\uff0c\u5bf9\u4e8e\u6700\u540e\u7684\u6362\u4e58\u6570\u662f\u6ca1\u6709\u8d21\u732e\u7684\u3002** \u4e5f\u5c31\u662f\u8bf4\uff0c\u540c\u4e00\u6761\u7ebf\u8def\u4e0a\u7684\u70b9\u662f\u7b49\u4ef7\u7684\u3002\n\n\u800c\u5c06\u6bcf\u4e2a\u70b9\u90fd\u4e0e\u8d77\u70b9\u76f8\u8fde\uff0c**\u662f\u56e0\u4e3a\u4e0d\u80fd\u786e\u5b9a\u540e\u6765\u8bfb\u5165\u7684\u7ebf\u8def\u662f\u5426\u4e0e\u5148\u524d\u7684\u7ebf\u8def\u5b58\u5728\u6362\u4e58\u70b9\u3002** \u6240\u4ee5\u5e72\u8106\u5c31\u5168\u8fde\u4e0a\u3002\n\n\u8fd9\u6837\u4e00\u6765\uff0c**\u56fe\u4e2d1->n\u7684\u6700\u77ed\u8def\uff0c\u5c31\u662f\u6700\u5c0f\u6362\u4e58\u6570+1\u3002**\n\n------------\n\n\u7136\u540e\uff0c\u8bb2\u8fd9\u9053\u9898\u5982\u4f55\u8bfb\u5165\u3002\n\n\u6211\u770b\u5df2\u6709\u7684\u8bb8\u591a\u7684\u9898\u89e3\u4e2d\uff0c\u662f\u7528\u5b57\u7b26\u4e32\u8bfb\u5165\u7684\u3002\u5927\u53ef\u4e0d\u5fc5\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5229\u7528**\u7a7a\u683c**\u548c**\u6362\u884c\u7b26**\u6765\u8bfb\u5165\u3002\n\n\u50cf\u8fd9\u6837\uff1a\n\n```cpp\nwhile(c!=-1 && c!='\\r')\t//'\\n'\n{\n\tscanf(\"%d\",&a[ ++n ]);\n\tc=-1;\n\tscanf(\"%c\",&c);\n}\n```\n\n\uff08\u8fd9\u4e2a'/r'\u548c\u6d1b\u8c37\u7684\u6d4b\u8bc4\u59ec\u6709\u5173\uff09\n\n------------\n\n\u96be\u5ea6\u8bc4\u5206\uff1a\u5efa\u8bae\u7eff\u9898\n\n\u7406\u7531\uff1a\u8fd9\u9898\u5728Dijkstra\u6a21\u677f\u9898\u7684\u57fa\u7840\u4e0a\uff0c\u589e\u52a0\u4e86\u5bf9Dijkstra\u7684\u7406\u89e3\u5e94\u7528\uff0c\u540c\u65f6\u8fd9\u9053\u9898\u5361\u8bfb\u5165\u3002\n\n\u9644\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\n#define MAXN 510\n#define MAX 0x3f3f3f3f\nusing namespace std;\nint ori=1,node;\t//ori \u8d77\u70b9   node \u8282\u70b9\u6570 \nint a[5005];\t//\u5b58\u8f93\u5165 \nint dis[MAXN],g[MAXN][MAXN];\nbool vis[MAXN]; \nvoid init()\t\t\t//\u521d\u59cb\u5316 \n{\n\tmemset(vis,0,sizeof(vis));\n\tmemset(dis,0,sizeof(dis));\n\tvis[ori]=1;\n\tfor(int i=1;i<=node;++i)\t\tdis[i] = (i == ori ? 0 : g[ori][i]);\n}\nvoid Dijkstra()\t\t//\u6734\u7d20Dijkstra \n{\n\tint k;\tinit();\n\tfor(int i=1;i<=node-2;++i)\n\t{\n\t\tint m=MAX;\n\t\tfor(int j=1;j<=node;++j)\n\t\t{\n\t\t\tif(dis[j]<m && vis[j]==0)\n\t\t\t{m=dis[j];\tk=j;}\n\t\t}\n\t\tif(m==MAX)\t\tbreak;\n\t\tvis[k]=1;\n\t\tfor(int j=1;j<=node;++j)\n\t\t\tif(dis[k]+g[k][j]<dis[j])\n\t\t\t\tdis[j]=dis[k]+g[k][j];\t\n\t}\n\treturn ;\n}\nint main()\n{\n\tint edge;\n\tscanf(\"%d%d\",&edge,&node);\n\tfor(int i=1;i<=node;++i)\n\t\tfor(int j=1;j<=node;++j)\n\t\t\tg[i][j]=MAX;\n\tfor(int i=1;i<=edge;++i)\n\t{\n\t\tmemset(a,0,sizeof(a));\n\t\tint n=0;\t\t\t\t//\u8ba1\u6570\u5668 \n\t\tchar c=1;\n\t\twhile(c!=-1 && c!='\\r')\t//'\\n'\n\t\t{\n\t\t\tscanf(\"%d\",&a[ ++n ]);\n\t\t\tc=-1;\n\t\t\tscanf(\"%c\",&c);\n\t\t}\n\t\tfor(int j=1;j<n;++j)\n\t\t\tfor(int k=j+1;k<=n;++k)\n\t\t\t\tg[ a[j] ][ a[k] ]=1;\n\t}\n\tDijkstra();\n\tif(dis[node]>=MAX) printf(\"NO\");\n    \telse printf(\"%d\",dis[node]-1);\t//\u6362\u4e58\u6570\u4e3a\u6700\u77ed\u8ddd\u79bb-1 \n\treturn 0;\n}\n```\n\n",
        "postTime": 1594990247,
        "uid": 128451,
        "name": "x_miracle",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5767 \u3010[NOI1997]\u6700\u4f18\u4e58\u8f66\u3011"
    },
    {
        "content": "\u9898\u76ee\u94fe\u63a5[Link](https://www.luogu.com.cn/problem/P5767)\n\n\u4e00\u9053\u7b80\u5355\u56fe\u8bba\u9898\uff0c\u4e3b\u8981\u96be\u70b9\u5728\u4e8e\u5efa\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/27y2bhji.png)\n\n\u6211\u4eec\u628a\u540c\u4e00\u6761\u7ebf\u8def\u4e0a\u7684\u6240\u6709\u8f66\u7ad9\u4e4b\u95f4\u5168\u90e8\u8fde\u4e00\u6761\u8fb9\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u76f4\u63a5\u5229\u7528bfs\u6c42\u5f97\u6700\u77ed\u8ddd\u79bb\uff0c\u56e0\u4e3abfs\u53ea\u8981\u5230\u8fbe\u7ec8\u70b9\u5c31\u4e00\u5b9a\u662f\u6700\u77ed\u7684\u3002\n\n\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<queue>\nusing namespace std;\nconst int N=500+21;\nint g[N][N],a[N];//\u56e0\u4e3a\u6570\u636e\u8303\u56f4\u8f83\u5c0f\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u90bb\u63a5\u77e9\u9635 \nstruct node{int u,dep;}q[N];\nbool vis[N];\nint n,m;\nint bfs(int s){\n\tmemset(vis,0,sizeof(vis));//\u521d\u59cb\u5316\u662f\u597d\u4e60\u60ef \n\tq[0]=(node){s,0};\n\tvis[s]=1;\n\tint head=0,tail=1;//head\u5934\u6307\u9488\uff0ctail\u5c3e\u540e\u6307\u9488\uff0c\u8fd9\u6837\u6bd4\u8f83\u597d\u5199\u3002 \n\twhile(head<tail){\n\t\tnode p=q[head++];\n\t\tif(p.u==n)return p.dep-1;\n\t\tint u=p.u;\n\t\tfor(int v=1;v<=n;v++){\n\t\t\tif(g[u][v]&&vis[v]==0){\n\t\t\t\tq[tail++]=(node){v,p.dep+1};\n\t\t\t\tvis[v]=1;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}\nint main(){\n\tscanf(\"%d%d\",&m,&n);\n\tfor(int p=1;p<=m;++p){\n\t\tint cnt=0;\n\t\tscanf(\"%d\",&a[++cnt]);\n\t\tchar ch=getchar();//\u8bfb\u5165\u9700\u8981\u6ce8\u610f \n\t\twhile(ch==' '){\n\t\t\tscanf(\"%d\",&a[++cnt]);\n\t\t\tch=getchar();\n\t\t}\n\t\tfor(int i=1;i<=cnt;i++)\n\t\t\tfor(int j=i+1;j<=cnt;j++)g[a[i]][a[j]]=1;\n\t}\n\tint ans=bfs(1);\n\tif(ans==-1)cout<<\"NO\"<<endl;\n\telse cout<<ans<<endl;\n\treturn 0;\n}\n```\n\n\u8c22\u8c22\u5927\u5bb6\uff01\n",
        "postTime": 1580553469,
        "uid": 160484,
        "name": "cunzai_zsy0531",
        "ccfLevel": 7,
        "title": "P5767\u9898\u89e3"
    },
    {
        "content": "**\u6ca1\u6709P\u515a\uff0c\u8d76\u7d27\u6765\u4ea4\u4e2a\u9898\u89e3~~\u6c34\u4f30\u503c~~**\n\n\u8fd9\u9898\u662f\u4e2a\u5f88\u597d\u7684\u6700\u77ed\u8def\u7ec3\u624b\u9898\uff0c\u5f53\u7136\u5176\u4ed6\u9898\u89e3\u4e5f\u6709\u7528`bfs`\u505a\u7684\uff0c\u4e0d\u8fc7\u672c\u849f\u84bb\u521a\u5b66`Dijkstra`,\u5c31\u7528`Dijkstra`\u6765\u505a\u6b64\u9898\u3002\n\n\u9898\u76ee\u591a\u8bfb\u51e0\u904d\u5c31\u5b66\u4f1a\u4e86\u5982\u4f55\u5efa\u56fe\uff0c\u81f3\u4e8e\u5177\u4f53\u7684\u8bdd\u5176\u4ed6\u9898\u89e3\u8bb2\u7684\u4e5f\u5f88\u7ec6\uff0c\u53ef\u4ee5\u53bb\u5eb7\u5eb7\uff09\u3002\n\n\u672c\u9898\u7684\u5751\u70b9\u5c31\u662f\u8f93\u5165\uff0c\u4f46`Pascal`\u8bed\u8a00\u53ef\u4ee5\u5f88$Easy$\u7684\u89e3\u51b3\uff0c`eoln`\u51fd\u6570\u5c31\u662f\u5224\u65ad\u5f53\u524d\u8f93\u5165\u662f\u5426\u6709\u6362\u884c,\u4f7f\u7528`not eoln`\u51fd\u6570\u5c31\u53ef\u4ee5\u5c06\u4e00\u6574\u884c\u7684\u6570\u5b57\u8f93\u5165\u5566\uff01\n\n```pascal\nj:=0; //\u8bfb\u5165\u6307\u9488\nwhile not eoln do begin \n  inc(j);  //\u6307\u9488++\n  read(a[j]); //\u8bfb\u5165\nend;\n```\n\n\u8fd9\u6837\u672c\u9898\u5c31\u6ca1\u4ec0\u4e48\u96be\u70b9\u5566\uff1a\n\n$Code:$\n\n```pascal\nuses math;//\u8c03\u7528math\u5e93\uff0c\u5305\u542b\u4e86max,min\u7b49\u51fd\u6570\nvar\n  i,j,k,n,m,l,t,g:longint;\n  v:array[0..10000] of boolean; //Dijkstra\u7b97\u6cd5\u4e2d\u5224\u65ad\u5df2\u52a0\u5165\u7684\u7aef\u70b9\u6570\u7ec4\n  f:array[0..701,0..701] of longint; //\u4fdd\u5b58\u5efa\u56fe\u7684\u6570\u7ec4\n  dis,a:array[0..10000] of longint; //\u8bb0\u5f55\u6700\u540e\u7b54\u6848\u7684\u6570\u7ec4\nbegin\n  readln(m,n);\n  filldword(f,length(f),maxlongint);\n  //\u8fd9\u4e2a\u51fd\u6570\u5c31\u662f\u5c06f\u6570\u7ec4\u5168\u7f6e\u4e3amaxlongint\u53732147483647\n  for i:=1 to m do begin\n    j:=0;\n    while not eoln do begin inc(j); read(a[j]); end;\n\tfor k:=1 to j do \n\t  for t:=k+1 to j do \n\t    f[a[k],a[t]]:=1;\n\treadln;\n  end;\n  \n  //\u4ee5\u4e0a\u4e3a\u5efa\u56fe\n  \n  filldword(dis,length(dis),maxlongint);\n  \n  //\u63a5\u4e0b\u6765\u662fDijkstra\u7b97\u6cd5\u7684\u6a21\u677f\n  dis[1]:=0;  \n  for i:=1 to n-1 do begin\n    t:=maxlongint;\n\tfor j:=1 to n do if (not v[j])and(dis[j]<t) then begin t:=dis[j]; g:=j; end;\n\tv[g]:=true;\n\tfor j:=1 to n do if (not v[j])and(f[g,j]>0) then dis[j]:=min(dis[j],dis[g]+f[g,j]);\n  end;\n  if dis[n]=maxlongint then write('NO') //\u7279\u5224\n    else write(dis[n]-1);\nend.\n```\n",
        "postTime": 1591797973,
        "uid": 175456,
        "name": "Licykoc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5767 \u3010[NOI1997]\u6700\u4f18\u4e58\u8f66\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5751\u4e86\u6211\u597d\u4e45\u5462\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u9996\u5148\u8fd9\u9053\u9898\u7684\u8f93\u5165\u5c31\u5f88\u5751\uff0c\u6211\u51b3\u5b9a\u4f7f\u7528getchar\u8f93\u5165\u3002\n```cpp\nwhile(m--)\n{\n\tchar x;bool flag=true;vector<int>ans;\n   while(flag)\n  \t{\n      int num=0;\n      while(x=getchar())\n      {\t\t\t\t\n      if(isdigit(x))num*=10,num+=x-'0';\t\n      else if(x==' ')break;\t\n      else{flag=false;break;}\n      }ans.push_back(num);\n \t }\n    for(i=0;i<ans.size();++i)\n    \tfor(j=i+1;j<ans.size();++j)\n    \t  a[ans[i]][ans[j]]=true;\t\n}\n```\nans\u662f\u7528\u6765\u5b58\u8f66\u7ad9\u7684\u987a\u5e8f\u7684\uff0c\u7136\u540e\u5de6\u8fb9\u7684\u8f66\u7ad9\u80fd\u5230\u53f3\u8fb9\u7684\u5168\u90e8\u8f66\u7ad9\uff0c\u4e3a\u4e86\u9632\u6b62WA\uff0c\u6211\u5c31\u4e0d\u662f\u53ea\u8fde\u63a5\u53f3\u8fb9\u7684\u4e00\u4e2a\u8f66\u7ad9\uff0c\u800c\u662f\u50cf\u4e0a\u9762\u7684\u90a3\u6837\n\n\u7136\u540e\uff0c\u53ea\u670930\u5206\u3002\u3002\u3002\u3002\u3002\u3002\u6211\u5c31\u731c\u5230\u4e86\u90a330\u5206\u7684\u7b54\u6848\u5168\u662f-1\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u4e8e\u662f\u6211\u601d\u8003\u4e86\u534a\u4e2a\u6708\uff0c\u7ec8\u4e8e\u60f3\u5230\u4e86\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5c31\u662f\u6574\u884c\u8bfb\u5165getline+\u5b57\u7b26\u4e32string\uff0c\u7136\u540e\u518d\u52a0\u4e0a\u5224\u65ad\u5341\u8fdb\u5236\u6574\u6570\u8d85\u7ea7\u5feb\u7684isdigit\u51fd\u6570\uff0c\u6700\u7ec8\u6211\u7684\u65f6\u95f4\u53ea\u670932ms\n\n```cpp\nwhile(m--)\n{\n\tvector<int>ans;int l,num=0;\n\tgetline(cin,s);l=s.length();\n\tfor(i=0;i<=l;++i)\n\tif(isdigit(s[i]))num*=10,num+=s[i]-'0';//\u5224\u65ad\u5341\u8fdb\u5236\u6574\u6570\n\telse ans.push_back(num),num=0;//\u5426\u5219\u662f\u7a7a\u683c\uff0c\u628a\u6570\u585e\u8fdb\u53bb\uff0cnum\u5f52\u96f6\n     for(i=0;i<ans.size();++i)\n     \tfor(j=i+1;j<ans.size();++j)\n     \t\ta[ans[i]][ans[j]]=true;//\u8fde\u63a5\u56fe\n}\n```\n\u7136\u540e\u5c31\u662f\u7b97\u6cd5\u4e86\u3002\u8fd9\u9053\u9898\u6211\u9009\u7528\u7684\u662fDijkstra\u7b97\u6cd5\uff0c\u56e0\u4e3a\u6211\u770b\u6570\u636e\u8303\u56f4\u662f500\uff0c\u6015Floyed\u4f1a\u8d85\u65f6\u3002\n```cpp\nfor(j=1;j<=n;++j)\n{\n\tint mi=INF,x;\n\tfor(i=1;i<=n;++i)if(!flag[i]&&d[i]<mi)mi=d[i],x=i;//\u627e\u6700\u5c0f\u70b9\n\tflag[x]=true;//\u6807\u8bb0\n\tfor(i=1;i<=n;++i)if(!flag[i]&&a[x][i])d[i]=min(d[i],d[x]+1);//\u56e0\u4e3a\u662f\u6362\u4e58\uff0c\u6240\u4ee5\u53ea\u8981+1\u5c31\u884c\u4e86\n}\n```\n\u6700\u540e\uff0c\u5b8c\u7ed3\u6492\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#include<vector>\nusing namespace std;\nint n,m,mx,d[1005];bool flag[1005],a[1005][1005];\nconst int INF=0x7fffffff;string s;\nint main()\n{\n\tint i,j;ios::sync_with_stdio(false);\n\tcin>>m>>n;getline(cin,s);//\u8f93\u5165\u7684\u65f6\u5019\u4f1a\u6709\u6362\u884c\u7b26\n\twhile(m--)\n\t{\n\t\tvector<int>ans;int l,num=0;\n\t\tgetline(cin,s);l=s.length();\n\t\tfor(i=0;i<=l;++i)if(isdigit(s[i]))num*=10,num+=s[i]-'0';\n\t\telse ans.push_back(num),num=0;\n\t\tfor(i=0;i<ans.size();++i)for(j=i+1;j<ans.size();++j)\n\t\ta[ans[i]][ans[j]]=true;\n\t}for(i=2;i<=n;++i)d[i]=INF;//\u521d\u59cb\u5316\n\tfor(j=1;j<=n;++j)\n\t{\n\t\tint mi=INF,x;\n\t\tfor(i=1;i<=n;++i)if(!flag[i]&&d[i]<mi)mi=d[i],x=i;\n\t\tflag[x]=true;\n\t\tfor(i=1;i<=n;++i)if(!flag[i]&&a[x][i])\n\t\td[i]=min(d[i],d[x]+1);\n\t}if(d[n]!=INF)cout<<d[n]-1;else cout<<\"NO\";\n}\n```",
        "postTime": 1581739465,
        "uid": 160839,
        "name": "Prean",
        "ccfLevel": 7,
        "title": "\u56fe\u8bba \u6700\u77ed\u8def P5767\u9898\u89e3"
    },
    {
        "content": "\u634b\u4e00\u634b\u601d\u8def\uff1a\n\n\u95ee\u6700\u5c0f\u6362\u4e58\u6b21\u6570\uff0c\u5df4\u58eb\u7ad9\u548c\u5df4\u58eb\u7ebf\u8def\u53c8\u957f\u5f97\u50cf\u4e00\u4e2a\u56fe\uff0c\u60f3\u5230\u6700\u77ed\u8def\u3002\n\n\u6c42\u4ec0\u4e48\u8bbe\u4ec0\u4e48\uff0c\u81ea\u7136\u4f1a\u60f3\u5230\u628a\u8fb9\u6743\u7684\u610f\u4e49\u8bbe\u4e3a\u6362\u4e58\u6b21\u6570\u3002\n\n\u4f46\u60f3\u8c61\u4e00\u4e0b\u5efa\u51fa\u7684\u56fe\uff0c\u53ea\u6709\u96f6\u8fb9\uff0c\u663e\u7136\u6ca1\u6cd5\u505a\u3002\n\n\u8be5\u600e\u4e48\u89e3\u51b3\u5462\uff1f\u4e24\u79cd\u65b9\u6cd5\u3002\n\n\u6cd5\u4e00\uff1a\n\n\u8fd9\u79cd\u6211\u89c9\u5f97\u662f\u6bd4\u8f83\u597d\u60f3\u7684\uff08~~\u56e0\u4e3a\u7b2c\u4e00\u904d\u505a\u7684\u65f6\u5019\u6211\u5c31\u662f\u8fd9\u4e48\u60f3\u7684~~\uff09\uff1a\u62c6\u70b9\u3002\n\n\u628a\u6bcf\u4e2a\u70b9\u62c6\u6210m\u4e2a\u70b9\uff0c\u6bcf\u6761\u5df4\u58eb\u7ebf\u8def\u4e00\u5957\u70b9\uff0c\u6839\u636e\u8bfb\u5165\u5efa\u96f6\u8fb9\u3002\u6bcf\u4e2a\u5df4\u58eb\u7ad9\u7684\u6240\u6709\u5df4\u58eb\u7ebf\u8def\u4e4b\u95f4\u4e24\u4e24\u5efa\u8fb9\u3002\u7136\u540edijkstra\u6c42\u6700\u77ed\u8def\uff08\u611f\u89c9\u4e0d\u662f\u5355\u6e90\u7684\uff1f\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff0c\u628a1\u53f7\u5df4\u58eb\u7ad9\u62c6\u6210\u7684m\u4e2a\u70b9\u770b\u4f5c\u4e00\u4e2a\u5927\u70b9\uff0c\u662f\u4e00\u6837\u7684\uff09\uff0c\u5728n\u53f7\u5df4\u58eb\u7ad9\u62c6\u6210\u7684m\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u4e2d\u6c42\u4e00\u4e2a\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n\u663e\u7136\uff0c\u8fd9\u6837\u4f1a\u51fa\u73b0\u5f88\u591a\u5efa\u4e86\u4f46\u6839\u672c\u7528\u4e0d\u5230\u7684\u8fb9\u548c\u70b9\u3002\n\u6240\u4ee5\u5177\u4f53\u5b9e\u73b0\u4e0d\u7528\u771f\u7684\u628a\u90a3\u4e9b\u8fb9\u6743\u4e3a1\u7684\u8fb9\u5efa\u51fa\u6765\u7684\uff08\u5360\u7a7a\u95f4\uff09\uff0c\u53ea\u5efa\u96f6\u8fb9\u5373\u53ef\uff08\u8fd9\u6837\u8fb9\u6743\u4e5f\u7701\u4e86\uff09\u3002\u6211\u4eec\u53ea\u4f1a\u7528\u5230\u8bfb\u5165\u4e2d\u6d89\u53ca\u5230\u7684\u70b9\uff0c\u6240\u4ee5\u8bfb\u5165\u65f6\u987a\u4fbf\u8bb0\u5f55\u4e00\u4e0b\u7528\u5230\u7684\u70b9\uff0c\u53ef\u4ee5\u52a0\u901f\u3002\n\n\u653e\u4e0b\u4ee3\u7801\n\n```\n#include <cstdio>\n#include <cstring>\n#include <queue>\nusing namespace std;\nconst int N=50005;\nint m,n,x,y,last,head[N],sum;\nint dis[N];\nbool vi[N],use[N];\nchar xx;\nstruct edge{int to,next;}a[N];\nstruct node\n{\tint num,dis;\n\tbool operator < (const node x) const\n\t{\treturn x.dis<dis;}\n};\npriority_queue <node> f;\nvoid insert(int x,int y)\n{\tsum++;a[sum].to=y;a[sum].next=head[x];head[x]=sum;}\nvoid dijkstra()\n{\tmemset(dis,0x7f,sizeof(dis));\n\tfor(int i=1;i<=m;i++)\n\t{\tif(use[i])\n\t\t{ dis[i]=0;f.push((node){i,0});}\n\t}\n\tint x,y,z;\n\twhile(!f.empty())\n\t{\tx=f.top().num;f.pop();\n\t\tif(vi[x]) continue;\n\t\tvi[x]=true;\n\t\tfor(int i=head[x];i;i=a[i].next)\n\t\t{\ty=a[i].to;//\u7528\u96f6\u8fb9\u66f4\u65b0\n\t\t\tif(dis[y]>dis[x])\n\t\t\t{\tdis[y]=dis[x];\n\t\t\t\tf.push((node){y,dis[y]});\n\t\t\t}\n\t\t}\n\t\ty=x%m;z=x-y;\n\t\tif(y==0) z=x-m;\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\ty=z+i;//\u7528\u8fb9\u6743\u4e3a1\u7684\u8fb9\u66f4\u65b0\n\t\t\tif(use[y]&&dis[y]>dis[x]+1)\n\t\t\t{\tdis[y]=dis[x]+1;\n\t\t\t\tf.push((node){y,dis[y]});\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\tscanf(\"%d %d\",&m,&n);\n\tfor(int i=1;i<=m;i++)\n\t{\tscanf(\"%d\",&last);\n\t\txx=getchar();\n\t\twhile(xx==' ')\n\t\t{\tscanf(\"%d\",&x);\n\t\t\tinsert((last-1)*m+i,(x-1)*m+i);//\u5efa\u96f6\u8fb9\uff0c\u53cd\u6b63\u90fd\u662f\u96f6\u8fb9\uff0c\u5c31\u4e0d\u7528\u8fb9\u6743\u4e86\n\t\t\tuse[(last-1)*m+i]=use[(x-1)*m+i]=true;//\u8bb0\u5f55\u6709\u6ca1\u6709\u7528\u5230\n\t\t\tlast=x; \n\t\t\txx=getchar();\n\t\t}\n\t}\n\tdijkstra();\n\tx=0xffffff;\n\ty=(n-1)*m;\n\tfor(int i=1;i<=m;i++)\n\tif(dis[y+i]<x) x=dis[y+i];\n\tif(x==0xffffff) printf(\"NO\\n\");\n\telse printf(\"%d\\n\",x);\n\treturn 0;\n}\n```\n\n\u6cd5\u4e8c\uff1a\n\n\u4e2a\u4eba\u611f\u89c9\u8fd9\u4e2a\u65b9\u6cd5\u7279\u522b\u5de7\u5999\u3002\u53d1\u73b0\u4e0a\u8ff0\u5efa\u56fe\u884c\u4e0d\u901a\u540e\uff0c\u4e0d\u8003\u8651\u62c6\u70b9\uff0c\u8003\u8651\u6539\u53d8\u8fb9\u6743\u7684\u610f\u4e49\uff0c\u4f7f\u8fb9\u6743\u4e0d\u662f0\u3002\u4e8e\u662f\u60f3\u5230 **\u6700\u5c11\u6362\u4e58\u6b21\u6570=\u6700\u5c11\u4e58\u8f66\u6b21\u6570-1**\uff0c\u8fd9\u6837\uff0c\u5c31\u5efa\u51fa\u4e86\u4e00\u4e2a\u8fb9\u6743\u5168\u90e8\u4e3a1\u7684\u56fe\uff0cbfs,floyd,dijkstra\u2026\u2026\u968f\u4fbf\u7528\u4ec0\u4e48\u6c42\u6700\u77ed\u8def\u90fd\u884c\n\n\u6ce8\u610f\uff1a\u8fd9\u91cc\u5efa\u8fb9\u65f6\uff0c\u5bf9\u4e8e\u6bcf\u6761\u516c\u4ea4\u7ebf\u8def\uff0c\u6bcf\u4e2a\u5df4\u58eb\u7ad9\u5fc5\u987b\u5411\u5728\u5b83\u540e\u9762\u7684\u6bcf\u4e2a\u5df4\u58eb\u7ad9\u90fd\u8fde\u8fb9\uff0c\u800c\u4e0d\u80fd\u50cf\u6cd5\u4e00\u4e00\u6837\u53ea\u5411\u540e\u4e00\u4e2a\u5efa\u8fb9\u3002\u56e0\u4e3a\u6cd5\u4e00\u662f\u96f6\u8fb9\uff0c\u5411\u540e\u4e00\u4e2a\u8fde\uff0c\u5c31\u76f8\u5f53\u4e8e\u5411\u6bcf\u4e2a\u90fd\u8fde\u4e86\u96f6\u8fb9\uff0c\u8fb9\u6743\u4e0d\u4e3a\u96f6\u5c31\u4e0d\u884c\u4e86\u3002",
        "postTime": 1579836868,
        "uid": 125270,
        "name": "flyfree",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5767 \u3010[NOI1997]\u6700\u4f18\u4e58\u8f66\u3011"
    },
    {
        "content": "> [P5767](https://www.luogu.com.cn/problem/P5767).\n\n---\n\n**Changelog:**\n\n\u66f4\u65b0\u7b80\u5316\u4ee3\u7801\u3001$\\LaTeX$\u3001\u5206\u6790\u8fc7\u7a0b\uff0c\u52a0\u5165\u8bfb\u5165\u65b9\u5f0f\u6ce8\u89e3\u3002\n\n---\n\n\u5bb9\u6613\u60f3\u5230\u6700\u77ed\u8def\u6216\u641c\u7d22\u4e00\u7c7b\u7684\u7b97\u6cd5\u3002\n\n\u6211\u4eec\u8003\u8651\u5c06\u6bcf\u4e2a\u8f66\u7ad9\u89c6\u4e3a\u4e00\u4e2a\u8282\u70b9\u5efa\u56fe\uff0c\u8fdb\u800c\u6211\u4eec\u60f3\u5230\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u5411\u5176\u4e00\u6b21\u4e58\u8f66\u53ef\u8fbe\u7684\u70b9\u8fde\u6709\u5411\u8fb9\u3002\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u4e24\u70b9\u95f4\u6700\u77ed\u8ddd\u79bb\u5373\u4e3a\u4ece\u4e00\u4e2a\u8f66\u7ad9\u5230\u53e6\u4e00\u4e2a\u8f66\u7ad9\u7684\u6700\u5c11\u4e58\u8f66\u6b21\u6570\u3002\n\n\u90a3\u4e48\uff0c\u6700\u5c11\u6362\u4e58\u6b21\u6570\u5373\u4e3a\u6700\u5c11\u4e58\u8f66\u6b21\u6570\u51cf\u4e00\u3002\n\n---\n\n\u8fd9\u91cc\u7531\u4e8e\u6570\u636e\u8303\u56f4\u8f83\u5c0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528 Bellman-Ford \u66b4\u529b\u677e\u5f1b\u3002BFS \u4e5f\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(mn^2)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $\\mathcal O(mn)$\u3002\n\n---\n\n\u672c\u9898\u8bfb\u5165\u6709\u4e9b\u7279\u6b8a\uff0c\u505a\u4e00\u4e9b\u6ce8\u91ca\u3002\n\n\u5c31\u662f\u6bcf\u6b21\u8bfb\u5165\u4e00\u4e2a\u5b57\u7b26\u3002\u8bfb\u5165\u975e\u6570\u5b57\u5b57\u7b26\u65f6\u5224\u65ad\u662f\u5426\u4e3a\u6362\u884c\u7b26\u6216\u6587\u4ef6\u7ed3\u675f\u7b26\u3002\n\n`isdigit(int)` \u51fd\u6570\u5b9a\u4e49\u5728\u5934\u6587\u4ef6 `cctype` \u4e2d\uff0c\u53ef\u7528\u6765\u5224\u65ad\u5b57\u7b26\u662f\u5426\u4e3a\u6570\u5b57\u5b57\u7b26\u3002\n\n    static inline const void read_bus(vector& bus) {\n        char u;\n        while (not isdigit(u = getchar()));\n        // \u8fc7\u6ee4\u6389\u884c\u9996\u7a7a\u767d\u5b57\u7b26\uff0c\u8df3\u51fa\u540e u \u4e2d\u5e94\u4e3a\u672c\u884c\u7b2c\u4e00\u4e2a\u6570\u5b57\u5b57\u7b26\u3002\n        // \u65e0\u8d1f\u6570\uff0c\u4e0d\u5fc5\u8003\u8651\u7b26\u53f7\n        while (true) {\n            // \u6ce8\u610f\u5faa\u73af\u5f00\u59cb\u65f6 u \u4e2d\u5b58\u50a8\u4e86\u4e00\u4f4d\u6570\u5b57\n            hu t(0);\n            while (t = t * 10 + (u - '0'), isdigit(u = getchar()));\n            // t \u4e3a\u5f53\u524d\u8bfb\u5165\u7684\u6570\u503c\uff0c\u9017\u53f7\u4f5c\u4e3a\u8fd0\u7b97\u7b26\u4ece\u5de6\u8ba1\u7b97\uff08\u5de6\u7ed3\u5408\uff09\u8fd4\u56de\u53f3\u4fa7\u503c\n            bus.push_back(t);\n            bool brk(false);\n            do { if (u == '\\n' or u == EOF) { brk = true; break; } }\n            while (not isdigit(u = getchar()));\n            if (brk) break;\n            // \u8bfb\u5165\u975e\u6570\u5b57\u4f4d\uff0c\u82e5\u6709\u6362\u884c\u7b26\u6216\u6587\u4ef6\u7ed3\u675f\u7b26\u5219\u9000\u51fa\u5faa\u73af\n        }\n        for (hu i(0); i < bus.size(); ++i) for (hu j(i); j < bus.size(); ++j)\n            out[bus[i]].push_back(bus[j]); // \u8fde\u8fb9\n    }\n\n---\n\n```cpp\n# include <cctype>\n# include <cstdio>\n# include <cstring>\n# include <vector>\n\nnamespace Main {\n    namespace Source {\n        typedef short unsigned int hu;\n        typedef std::vector<hu> vector;\n        static inline const hu min(const hu a, const hu b) { return b < a ? b : a; }\n        static inline const void amin(hu& a, const hu b) { a = min(a, b); }\n    }\n    using namespace Source;\n    enum { M = 100, N = 500 };\n    static hu m, n;\n    static vector bus[M];\n    static vector out[N + 1];\n    static hu ans[N + 1];\n    static inline const void read_bus(vector& bus) {\n        char u;\n        while (not isdigit(u = getchar()));\n        while (true) {\n            hu t(0);\n            while (t = t * 10 + (u - '0'), isdigit(u = getchar()));\n            bus.push_back(t);\n            bool brk(false);\n            do { if (u == '\\n' or u == EOF) { brk = true; break; } }\n            while (not isdigit(u = getchar()));\n            if (brk) break;\n        }\n        for (hu i(0); i < bus.size(); ++i) for (hu j(i); j < bus.size(); ++j)\n            out[bus[i]].push_back(bus[j]);\n    }\n    static inline const void main() {\n        scanf(\"%hu%hu\", &m, &n);\n        for (hu i(0); i < m; ++i) read_bus(bus[i]);\n        memset(ans, 0x7f, sizeof ans), ans[1] = 0;\n        for (hu i(0); i < n; ++i)\n            for (hu j(1); j <= n; ++j)\n                for (hu k(0); k < out[j].size(); ++k)\n                    amin(ans[out[j][k]], ans[j] + 1);\n        if (ans[n] == ans[0]) puts(\"NO\");\n        else printf(\"%hu\\n\", ans[n] ? ans[n] - 1 : 0);\n    }\n}\n\nsigned int main() { Main::main(); return 0; }\n```\n\n",
        "postTime": 1576331095,
        "uid": 236807,
        "name": "Mitama",
        "ccfLevel": 9,
        "title": "[Solution] P5767 #NOI1997"
    },
    {
        "content": "## \u89e3\u9898\u601d\u8def\n\u8fd9\u9053\u9898\u662f\u4e00\u9053**BFS**\uff0c\u96be\u70b9\u5728\u4e8eBFS\u8981\u6c42**\u4ee3\u4ef7\u76f8\u540c**\uff0c\u800c\u8fd9\u9053\u9898\u5728\u641c\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u51fa\u73b0\u5728\u540c\u4e00\u8f86\u8f66\u4e0a\uff0c\u7ecf\u8fc7\u4e24\u7ad9\u540e\u4ee3\u4ef7\u5c31\u53d8\u6210**2**\u7684\u60c5\u51b5\uff0c\u8fd9\u6837\u7684\u8bdd**\u4ee3\u4ef7\u5c31\u4e0d\u76f8\u7b49**\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u9884\u5904\u7406\uff0c\u5c06\u5df4\u58eb\u548c\u7ad9\u7684\u5173\u7cfb\u8f6c\u5316\u6210\u4e00\u4e2a**01\u77e9\u9635**\uff0c\u5c31\u53ef\u4ee5\u8fdb\u884c\u5e7f\u641c\u4e86\u3002\n## \u53c2\u8003\u7a0b\u5e8f\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<string>\n#include<cstdio>\nusing namespace std;\nstruct abc{\n\tint ans,zhan;\n}f[10000010];\nint n,m,bus[1100][1100],a[2100],hd=1,tl=1;\nchar x;\nbool check(int q,int p)//\u5224\u65ad\n{\n\tif(!bus[q][p])\n\t\treturn 0;\n\tif(a[p])\n\t\treturn 0;\n\treturn 1;\n}\nint main()\n{\n\tcin>>m>>n;\n\tfor(int i=0;i<=m;i++)//\u5feb\u8bfb\u52a0\u9884\u5904\u7406\n\t{\n\t\tmemset(a,0,sizeof(a));\n\t\ta[0]=1;\n\t\tdo{\n\t\t\tx=getchar();\n\t\t\tif(isdigit(x))\n\t\t\t\ta[a[0]]=a[a[0]]*10+x-48;\n\t\t\telse\n\t\t\t\ta[0]++;\n\t\t}while(x!='\\n'&&x!=EOF);\n\t\ta[0]--;\n\t\tfor(int j=1;j<=a[0]-1;j++)//\u8f6c\u6362\u621001\u77e9\u9635\n\t\t\tfor(int k=j+1;k<=a[0];k++)\n\t\t\t\tbus[a[j]][a[k]]=1;\n\t}\n\tf[1].ans=-1;f[1].zhan=1;\n\tmemset(a,0,sizeof(a));//\u5faa\u73af\u5229\u7528\uff0c\u4e0b\u9762\u7528\u4f5c\u6807\u8bb0\u5230\u8fbe\u7684\u60c5\u51b5\uff0c\u9632\u6b62\u8df3\u7801\u3002\n\twhile(hd<=tl)\n\t{\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(check(f[hd].zhan,i))\n\t\t\t{\n\t\t\t\ttl++;\n\t\t\t\tf[tl].ans=f[hd].ans+1;\n\t\t\t\tf[tl].zhan=i;\n\t\t\t\ta[f[tl].zhan]=1;//\u6807\u8bb0\n\t\t\t\tif(f[tl].zhan==n)\n\t\t\t\t{\n\t\t\t\t\tcout<<f[tl].ans<<endl;\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\thd++;\n\t}\n\tcout<<\"NO\"<<endl;\n} \n```",
        "postTime": 1575679419,
        "uid": 68627,
        "name": "\u83dc\u9e21\u5495",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5754 \u3010[NOI1997]\u6700\u4f18\u4e58\u8f66\u3011"
    }
]