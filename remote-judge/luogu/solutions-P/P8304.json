[
    {
        "content": "\u5148\u8003\u8651 $[1,n]$ \u7684\u7b54\u6848\u3002\n\n\u731c\u7ed3\u8bba\u3002\u5c06 $a_i=0$ \u89c6\u4e3a $-1$\uff0c\u505a\u524d\u7f00\u548c\uff0c\u6bcf\u4e00\u6b21 $<0$ \u5c31\u610f\u5473\u7740\u5220\u6389\u4e00\u4e2a $0$\u3002\n\n\u518d\u505a\u4e00\u904d\u540e\u7f00\u548c\uff0c\u6267\u884c\u540c\u6837\u7684\u64cd\u4f5c\u3002\n\n\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f\u533a\u95f4\u957f\u5ea6 $-$ \u5220\u6389\u7684 $0$ \u7684\u6570\u91cf\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u4ea4\u4e00\u53d1\uff0c\u53d1\u73b0\u6709 40pts\uff0c\u8bc1\u660e\u8d2a\u5fc3\u662f\u5bf9\u7684\u3002\n\n\uff08\u4f46\u662f\u6211\u771f\u7684\u4e0d\u4f1a\u8bc1\u8d2a\u5fc3\u7b56\u7565\uff0c\u6211\u53ea\u80fd\u611f\u6027\u7406\u89e3\uff0c\u5982\u679c\u6709\u795e\u4ed9\u77e5\u9053\u8bf7\u53d1\u5230\u8bc4\u8bba\u533a /kk\uff09\n\n\u90a3\u4e48\u8003\u8651\u7b54\u6848\u7684\u53d8\u5316\u8fc7\u7a0b\u3002\n\n\u6bd4\u65b9\u8bf4\uff0c\u5f53\u524d\u524d\u7f00\u548c\u6570\u7ec4 $\\text{pre}_i=-1$\uff0c\u8003\u8651\u5bf9 $[i,n]$ \u5168\u4f53 $+1$\u3002\n\n\u7ee7\u7eed\u78b0\u5230 $\\text{pre}'_j=-1$\uff08\u6709\u539f\u6765 $\\text{pre}_j=-2$\uff09\uff0c\u5bf9 $[j,n]$ \u5168\u4f53 $+1$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\uff0c\u7edf\u8ba1\u505a\u524d\u7f00\u548c\u7684\u8fc7\u7a0b\uff0c\u5176\u5b9e\u4f9d\u6b21\u5c31\u662f\u627e\u5230\u7b2c\u4e00\u4e2a $-1,-2,...,-x$\u3002\n\n\u90a3\u4e48\u7b2c\u4e00\u8f6e\u64cd\u4f5c\uff08\u7edf\u8ba1\u524d\u7f00\u548c\uff09\u7684\u64cd\u4f5c\u6b21\u6570\uff0c\u4e5f\u5c31\u662f $-\\min\\limits_{i=1}^n \\{\\text{pre}_i\\}$\u3002\n\n\u7531\u4e8e\u7b2c\u4e00\u8f6e\u64cd\u4f5c\u4f1a\u5bf9\u7b2c\u4e8c\u8f6e\u64cd\u4f5c\uff08\u7edf\u8ba1\u540e\u7f00\u548c\uff09\u4ea7\u751f\u5f71\u54cd\uff0c\u8003\u8651\u5f71\u54cd\u3002\n\n\u5bf9\u4e8e\u73b0\u5728\u7684\u540e\u7f00\u6570\u7ec4 $\\text{suf}'_i$\uff08\u5728\u7b2c\u4e00\u8f6e\u64cd\u4f5c\u4e4b\u524d\u4e3a $\\text{suf}_i$\uff09\uff0c$\\Delta=$ \u5728 $i$ \u53f3\u4fa7\u5220\u9664\u7684 $0$ \u7684\u4e2a\u6570\u3002\n\n\u60f3\u5230\u8fd9\u4e2a\u4e0d\u597d\u7ef4\u62a4\uff0c\u8f6c\u5316\u4e3a\u5dee\uff0c\u5373 $-\\min\\limits_{i=1}^n\\{\\text{pre}_i\\}-$ $i$ \u5de6\u4fa7\u5220\u9664\u7684 $0$ \u7684\u4e2a\u6570\u3002\n\n\u6839\u636e\u4e0a\u4fa7\u7684\u8d2a\u5fc3\u7b56\u7565\uff0c\u5728 $i$ \u5de6\u4fa7\u5220\u9664\u7684 $0$ \u7684\u4e2a\u6570 $=-\\min\\limits_{j=1}^{i-1}\\{\\text{pre}_j\\}$\u3002\n\n\u90a3\u4e48 $\\text{suf}'_i=\\text{suf}_i+(-\\min\\limits_{i=1}^n\\{\\text{pre}_i\\})-(-\\min\\limits_{j=1}^{i-1}\\{\\text{pre}_j\\})$\u3002\n\n\u5219\u6700\u7ec8\u7b54\u6848\u4e3a $-\\min\\limits_{i=1}^n \\{\\text{pre}_i\\}+(-\\min\\limits_{i=1}^n \\{\\text{suf}'_i\\})=-\\min\\limits_{i=1}^n \\{\\text{suf}_i+\\min\\limits_{j=1}^{i-1}\\{\\text{pre}_j\\}\\}$\u3002\n\n\u8003\u8651\u600e\u4e48\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\u3002\n\n\u60f3\u60f3\uff0c\u7b54\u6848\u5176\u5b9e\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6bb5 $[i,n]$\uff0c\u90fd\u6c42\u51fa $\\min\\limits_{j=1}^{i-1}\\{\\text{pre}_j\\}$\u3002\n\n\u679a\u4e3e $i,j$ \u7684\u8fc7\u7a0b\u672c\u8d28\u4e0a\u4e5f\u5c31\u662f\u679a\u4e3e\u4e92\u4e0d\u76f8\u4ea4\u7684\u4e00\u4e2a\u524d\u7f00\u548c\u4e00\u4e2a\u540e\u7f00\u3002\n\n\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\uff0c\u6c42\u4e92\u4e0d\u76f8\u4ea4\u7684\u4e00\u4e2a\u524d\u7f00\u548c\u4e00\u4e2a\u540e\u7f00\u7684\u548c\u7684\u6700\u5c0f\u503c\u3002\n\n\u7ee7\u7eed\u8f6c\u5316\uff0c\u5176\u5b9e\u4e00\u4e2a\u524d\u7f00\u548c\u4e00\u4e2a\u540e\u7f00\u7684\u548c\u7684\u6700\u5c0f\u503c\uff0c\u5c31\u7b49\u4e8e\u5168\u5c40\u548c\u51cf\u53bb\u5939\u5728\u4e2d\u95f4\u7684\u533a\u95f4\u548c\u3002\n\n\u95ee\u9898\u7b49\u4e8e $\\max\\limits_{1 \\le l < r \\le n}\\{(\\sum\\limits_{k=1}^n a_k)-(\\sum\\limits_{k=l+1}^{r-1}a_k)\\}$\u3002\n\n\u90a3\u4e48\u5c31\u8f6c\u5316\u4e3a\u6700\u5927\u5b50\u6bb5\u548c\u95ee\u9898\u3002\u8fd9\u4e2a\u4e1c\u897f\u663e\u7136\u53ef\u4ee5\u63a8\u5e7f\u5230\u533a\u95f4\u4e0a\u3002\n\n\u7531\u4e8e\u9898\u76ee\u95ee\u7684\u662f\u6700\u591a\u5269\u4e0b\u591a\u5c11\u4e2a\u6570\uff0c\u6240\u4ee5\u8981\u7528\u533a\u95f4\u957f\u5ea6\u51cf\u6389\u7ef4\u62a4\u7684\u7b54\u6848\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define ls ((rt) << 1)\n#define rs ((rt) << 1 | 1)\nusing namespace std;\n\nconst int N = 5e5 + 10; int n, q;\nstruct Node { int al, sum, pre, suf; } t[N << 2];\n\ninline Node pushup(Node f, Node s) {\n    Node res; res.sum = f.sum + s.sum;\n    res.pre = max(f.pre, f.sum + s.pre), res.suf = max(s.suf, s.sum + f.suf);\n    res.al = max(max(f.al, s.al), f.suf + s.pre); return res;\n}\n\ninline void build(int rt, int l, int r) {\n    if (l == r) {\n        char op; cin >> op;\n        t[rt].al = t[rt].sum = t[rt].pre = t[rt].suf = (op == '0'? -1 : 1);\n        if (t[rt].al < 0) t[rt].al = 0; return ;\n    }\n    int mid = (l + r) >> 1;\n    build(ls, l, mid), build(rs, mid + 1, r);\n    t[rt] = pushup(t[ls], t[rs]); return ;\n}\n\ninline Node query(int rt, int l, int r, int L, int R) {\n    if (L <= l && r <= R) return t[rt];\n    int mid = (l + r) >> 1; Node f, s; int tag = 0;\n    if (L <= mid) f = query(ls, l, mid, L, R), ++tag;\n    if (R > mid) s = query(rs, mid + 1, r, L, R), tag += 2;\n    if (tag == 1) return f; if (tag == 2) return s;\n    return pushup(f, s);\n}\n\ninline void solve() {\n    int l, r; cin >> l >> r;\n    Node res = query(1, 1, n, l, r); int len = res.al - res.sum;\n    if (len >= r - l + 1) cout << -1 << endl;\n    else cout << r - l + 1 - len << endl; return ;\n}\n\nint main() {\n    ios_base::sync_with_stdio(false); cin.tie(0), cout.tie(0);\n    cin >> n >> q; build(1, 1, n);\n    while (q--) solve(); return 0;\n}\n```",
        "postTime": 1668600794,
        "uid": 487752,
        "name": "MistZero",
        "ccfLevel": 0,
        "title": "\u7ebf\u6bb5\u6811\u4f18\u5316\u8d2a\u5fc3\u7b56\u7565\u3002"
    }
]