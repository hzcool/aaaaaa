[
    {
        "content": "$\\text{update 2019.8.18}$ \u7531\u4e8e\u672c\u4eba\u5c06\u5927\u90e8\u5206\u7cbe\u529b\u82b1\u5728\u4e86cnblogs\u4e0a\uff0c\u800c\u4e0d\u662f\u6d1b\u8c37\u535a\u5ba2\uff0c\u8bc4\u8bba\u533a\u63d0\u51fa\u7684\u4e00\u4e9b\u95ee\u9898\u76f4\u5230\u4eca\u5929\u624d\u89e3\u51b3\u3002\n\n\u4e0b\u9762\u7ed9\u51fa\u7684Pollard Rho\u51fd\u6570\u5df2\u7ed9\u51fa\u6563\u70b9\u56fe\u3002\u5173\u4e8e$Millar Robin$\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5728\u6211\u7684\u535a\u5ba2\u5e94\u8be5\u6709\u6240\u5907\u6ce8\u3002\u7531\u4e8e\u672c\u4eba\u4e0d\u64c5\u957f\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\uff0c\u5982\u679c\u5bf9\u4e8e\u65f6\u95f4\u590d\u6742\u5ea6\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u6b22\u8fce\u5728\u4e0b\u65b9\u6307\u51fa\u3002\n \n### 1.1 \u95ee\u9898\u7684\u5f15\u5165\n\n\u7ed9\u5b9a\u4e00\u6b63\u6574\u6570$N \\in \\mathbb{N}^*$,\u8bd5\u5feb\u901f\u627e\u5230\u5b83\u7684\u4e00\u4e2a\u56e0\u6570\u3002\n\n\u5f88\u4e45\u5f88\u4e45\u4ee5\u524d\uff0c\u6211\u4eec\u66fe\u5b66\u8fc7\u8bd5\u9664\u6cd5\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u5f88\u5bb9\u6613\u60f3\u5230\u56e0\u6570\u662f\u6210\u5bf9\u79f0\u5206\u5e03\u7684\uff1a\u5373$N$\u7684\u6240\u6709\u56e0\u6570\u53ef\u4ee5\u88ab\u5206\u6210\u4e24\u5757\uff1a$[1,\\sqrt(N)]$\u548c$[\\sqrt(N),N]$.\u8fd9\u4e2a\u5f88\u5bb9\u6613\u60f3\u6e05\u695a,\u6211\u4eec\u53ea\u9700\u8981\u628a\u533a\u95f4$[1,\\sqrt(N)]$\u626b\u4e00\u904d\u5c31\u53ef\u4ee5\u4e86,\u6b64\u65f6\u8bd5\u9664\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(\\sqrt(N))$.\n\n\u5bf9\u4e8e$N \\geqslant 10^{18}$\u7684\u6570\u636e,\u8fd9\u4e2a\u7b97\u6cd5\u8fd0\u884c\u8d77\u6765\u65e0\u610f\u662f\u975e\u5e38\u7cdf\u7cd5\u7684.\u6211\u4eec\u5e0c\u671b\u6709\u66f4\u5feb\u7684\u7b97\u6cd5,\u6bd4\u5982$O(1)$\u7ea7\u522b\u7684?\n\n\u5bf9\u4e8e\u8fd9\u6837\u7684\u7b97\u6cd5,\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u60f3\u6cd5\u662f\u53bb\u8bbe\u8ba1\u4e00\u4e2a\u968f\u673a\u7a0b\u5e8f,\u968f\u4fbf\u731c\u4e00\u4e2a\u56e0\u6570.\u5982\u679c\u4f60\u8fd0\u6c14\u597d,\u8fd9\u4e2a\u7a0b\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e0b\u9650\u4e3a$o(1)$.\u4f46\u5bf9\u4e8e\u4e00\u4e2a$N \\geqslant 10^{18}$\u7684\u6570\u636e,\u8fd9\u4e2a\u7b97\u6cd5\u7ed9\u51fa\u7b54\u6848\u7684\u6982\u7387\u662f$\\frac{1}{1000000000000000000}$.\u5f53\u7136,\u5982\u679c\u5728$[1,\\sqrt(N)]$\u91cc\u9762\u731c,\u6210\u529f\u7684\u53ef\u80fd\u6027\u4f1a\u66f4\u5927.\n\n\u90a3\u4e48,\u6709\u6ca1\u6709\u66f4\u597d\u7684\u6539\u8fdb\u7b97\u6cd5\u6765\u63d0\u9ad8\u6211\u4eec\u731c\u7684\u51c6\u786e\u7387\u5462?\n\n### 2.1 \u7528\u4e00\u4e2a\u6096\u8bba\u6765\u63d0\u9ad8\u6210\u529f\u7387\n\n\u6211\u4eec\u6765\u8003\u8651\u8fd9\u6837\u4e00\u79cd\u60c5\u51b5:\u5728$[1,1000]$\u91cc\u9762\u53d6\u4e00\u4e2a\u6570,\u53d6\u5230\u6211\u4eec\u60f3\u8981\u7684\u6570(\u6bd4\u5982\u8bf4,$42$),\u6210\u529f\u7684\u6982\u7387\u662f\u591a\u5c11\u5462?\u663e\u7136\u662f$\\frac{1}{1000}$.\n\n\u4e00\u4e2a\u4e0d\u884c\u5c31\u53d6\u4e24\u4e2a\u5427:\u968f\u4fbf\u5728$[1,1000]$\u91cc\u9762\u53d6\u4e24\u4e2a\u6570.\u6211\u4eec\u60f3\u529e\u6cd5\u63d0\u9ad8\u51c6\u786e\u7387,\u5c31\u53d6\u4e24\u4e2a\u6570\u7684\u5dee\u503c\u7edd\u5bf9\u503c.\u4e5f\u5c31\u662f\u8bf4,\u5728$[1,1000]$\u91cc\u9762\u4efb\u610f\u9009\u53d6\u4e24\u4e2a\u6570$i , j$,\u95ee$|i-j|=42$\u7684\u6982\u7387\u662f\u591a\u5927?\u7b54\u6848\u4f1a\u6269\u5927\u5230$\\frac{1}{500}$\u5de6\u53f3,\u4e5f\u5c31\u662f\u5c06\u8fd1\u6269\u5927\u4e00\u500d.\u673a\u623f\u7684gql\u5927\u4f6c\u7ed9\u51fa\u4e86\u7b80\u8bc1:$i$\u5728$[1,1000]$\u91cc\u9762\u53d6\u51fa\u4e00\u4e2a\u6b63\u6574\u6570\u7684\u6982\u7387\u662f$100\\%$,\u800c\u53d6\u51fa$j$\u6ee1\u8db3$|i-j|=42$\u7684\u6982\u7387\u5dee\u4e0d\u591a\u5c31\u662f\u539f\u6765\u7684\u4e00\u500d:$j$\u53d6$i-42$\u548c$i+42$\u90fd\u662f\u53ef\u4ee5\u7684.\n\n\u8fd9\u7ed9\u4e86\u6211\u4eec\u4e00\u70b9\u542f\u53d1:\u8fd9\u79cd\"\u7ec4\u5408\u968f\u673a\u91c7\u6837\"\u7684\u65b9\u6cd5\u662f\u4e0d\u662f\u53ef\u4ee5\u5927\u5927\u63d0\u9ad8\u51c6\u786e\u7387\u5462?\n\n\u8fd9\u4e2a\u4fbf\u662f\u751f\u65e5\u6096\u8bba\u7684\u6a21\u578b\u4e86.\u5047\u5982\u8bf4\u4e00\u4e2a\u73ed\u4e0a\u6709k\u4e2a\u4eba,\u5982\u679c\u627e\u5230\u4e00\u4e2a\u4eba\u7684\u751f\u65e5\u662f4\u67082\u65e5,\u8fd9\u4e2a\u6982\u7387\u7684\u786e\u4f1a\u76f8\u5f53\u4f4e.\u4f46\u662f\u5982\u679c\u5355\u7eaf\u60f3\u627e\u5230\u4e24\u4e2a\u751f\u65e5\u76f8\u540c\u7684\u4eba,\u8fd9\u4e2a\u6982\u7387\u662f\u4e0d\u662f\u4f1a\u9ad8\u4e00\u70b9\u5462?\n\u53ef\u4ee5\u66b4\u529b\u8bc1\u660e:\u5982\u679c\u662f$k$\u4e2a\u4eba\u751f\u65e5\u4e92\u4e0d\u76f8\u540c,\u5219\u6982\u7387\u4e3a:$p=\\frac{365}{365}\\cdot\\frac{364}{365}\\cdot\\frac{363}{365}\\cdot\\dots\\cdot\\frac{365-k+1}{365}$ ,\u6545\u751f\u65e5\u6709\u91cd\u590d\u7684\u73b0\u8c61\u7684\u6982\u7387\u662f:$\\text{P}(k)=1-\\prod\\limits_{i=1}^{k}{\\frac{365-i+1}{365}}$.\n\u6211\u4eec\u968f\u4fbf\u53d6\u4e00\u4e2a\u6982\u7387:\u5f53$P(k) \\geqslant \\frac{1}{2}$\u65f6,\u89e3\u5f97$k \\gtrsim 23$.\u8fd9\u610f\u5473\u7740\u4e00\u4e2a\u670923\u4e2a\u4eba\u7ec4\u6210\u7684\u73ed\u7ea7\u4e2d,\u4e24\u4e2a\u4eba\u5728\u540c\u4e00\u5929\u751f\u65e5\u7684\u6982\u7387\u81f3\u5c11\u6709$50\\%$!\u5f53k\u53d6\u523060\u65f6,$\\text{P}(k) \\approx 0.9999$.\u8fd9\u4e2a\u6570\u5b66\u6a21\u578b\u548c\u6211\u4eec\u65e5\u5e38\u7684\u7ecf\u9a8c\u4e25\u91cd\u4e0d\u7b26.\u8fd9\u4e5f\u662f\"\u751f\u65e5\u6096\u8bba\"\u8fd9\u4e2a\u540d\u5b57\u7684\u7531\u6765.\n\n### 3.1 \u968f\u673a\u7b97\u6cd5\u7684\u4f18\u5316\n\u751f\u65e5\u6096\u8bba\u7684\u5b9e\u8d28\u662f:\u7531\u4e8e\u91c7\u7528\"\u7ec4\u5408\u968f\u673a\u91c7\u6837\"\u7684\u65b9\u6cd5,\u6ee1\u8db3\u7b54\u6848\u7684\u7ec4\u5408\u6bd4\u5355\u4e2a\u4e2a\u4f53\u8981\u591a\u4e00\u4e9b.\u8fd9\u6837\u53ef\u4ee5\u63d0\u9ad8\u6b63\u786e\u7387.\n\n\u6211\u4eec\u4e0d\u59a8\u60f3\u4e00\u60f3:\u5982\u4f55\u901a\u8fc7\u7ec4\u5408\u6765\u63d0\u9ad8\u6b63\u786e\u7387\u5462?\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u60f3\u6cd5\u662f:\u6700\u5927\u516c\u7ea6\u6570\u4e00\u5b9a\u662f\u67d0\u4e2a\u6570\u7684\u7ea6\u6570.\u4e5f\u5c31\u662f\u8bf4,$\\forall k \\in \\mathbb{N}^* , \\gcd(k,n)|n$.\u53ea\u8981\u9009\u9002\u5f53\u7684k\u4f7f\u5f97$\\gcd(k,n)>1$\u5c31\u53ef\u4ee5\u6c42\u5f97\u4e00\u4e2a\u7ea6\u6570$\\gcd(k,n)$.\u8fd9\u6837\u7684k\u6570\u91cf\u8fd8\u662f\u86ee\u591a\u7684:k\u6709\u82e5\u5e72\u4e2a\u8d28\u56e0\u5b50,\u800c\u6bcf\u4e2a\u8d28\u56e0\u5b50\u7684\u500d\u6570\u90fd\u662f\u53ef\u884c\u7684.\n\n\u6211\u4eec\u4e0d\u653e\u9009\u53d6\u4e00\u7ec4\u6570$x_1,x_2,x_3,\\dots,x_n$,\u82e5\u6709$gcd(|x_i-x_j|,N)>1$,\u5219\u79f0$gcd(|x_i-x_j|,N)$\u662fN\u7684\u4e00\u4e2a\u56e0\u5b50.\u65e9\u671f\u7684\u8bba\u6587\u4e2d\u6709\u8bc1\u660e,\u9700\u8981\u9009\u53d6\u7684\u6570\u7684\u4e2a\u6570\u5927\u7ea6\u662f$O(N^{\\frac{1}{4}})$.\u4f46\u662f,\u6211\u4eec\u8fd8\u9700\u8981\u89e3\u51b3\u50a8\u5b58\u65b9\u9762\u7684\u95ee\u9898.\u5982\u679c$N=10^{18}$,\u90a3\u4e48\u6211\u4eec\u4e5f\u9700\u8981\u53d6$10^4$\u4e2a\u6570.\u5982\u679c\u8fd8\u8981$O(n^2)$\u6765\u4e24\u4e24\u6bd4\u8f83,\u65f6\u95f4\u590d\u6742\u5ea6\u53c8\u4f1a\u5f39\u56de\u53bb.\n\n### 3.2 Pollard Rho \u548c\u4ed6\u7684\u968f\u673a\u51fd\u6570\n\n\u6211\u4eec\u4e0d\u59a8\u8003\u8651\u6784\u9020\u4e00\u4e2a\u4f2a\u968f\u673a\u6570\u5e8f\u5217,\u7136\u540e\u53d6\u76f8\u90bb\u7684\u4e24\u9879\u6765\u6c42gcd.\u4e3a\u4e86\u751f\u6210\u4e00\u4e32\u4f18\u79c0\u7684\u968f\u673a\u6570,Pollard\u8bbe\u8ba1\u4e86\u8fd9\u6837\u4e00\u4e2a\u51fd\u6570:\n$f(x)=(x^2+c)\\mod N$\n\u5176\u4e2dc\u662f\u4e00\u4e2a\u968f\u673a\u7684\u5e38\u6570.\n\n\u6211\u4eec\u968f\u4fbf\u53d6\u4e00\u4e2a$x_1$,\u4ee4$x_2=f(x_1)$,$x_3=f(x_2)$,$\\dots$,$x_i=f(x_{i-1})$.\u5728\u4e00\u5b9a\u7684\u8303\u56f4\u5185,\u8fd9\u4e2a\u6570\u5217\u662f\u57fa\u672c\u968f\u673a\u7684,\u53ef\u4ee5\u53d6\u76f8\u90bb\u4e24\u9879\u4f5c\u5dee\u6c42gcd.\n\n\u751f\u6210\u4f2a\u968f\u673a\u6570\u7684\u65b9\u5f0f\u6709\u5f88\u591a\u79cd.\u4f46\u662f\u8fd9\u4e2a\u51fd\u6570\u751f\u6210\u51fa\u6765\u7684\u4f2a\u968f\u673a\u6570\u6548\u679c\u6bd4\u8f83\u597d.\u5b83\u7684\u56fe\u50cf\u957f\u8fd9\u4e2a\u6837\u5b50:\n\n![png](https://cdn.luogu.com.cn/upload/pic/73201.png)\n\n\u8fd9\u91cc\u7684\u51fd\u6570\u4e3a$f(x)=(x^2+2)\\mod 10$\u3002\u56fe\u4e2d\u7684\u9ed1\u70b9\u4e3a\u8fed\u4ee3$1,2,\\cdots,30$\u6b21\u5f97\u5230\u7684\u968f\u673a\u6570\u3002\u5176\u5b9e\u4ece\u8fd9\u91cc\u5f88\u5bb9\u6613\u770b\u51fa\u4e00\u4e2a\u91cd\u590d3\u6b21\u7684\u5faa\u73af\u8282\u3002\n\n\u9009\u53d6\u8fd9\u4e2a\u51fd\u6570\u662f\u81ea\u6709\u9053\u7406\u7684.\u6709\u4e00\u79cd\u51e0\u4f55\u56fe\u5f62\u53eb\u505a\u66fc\u5fb7\u52c3\u7f57\u96c6,\u5b83\u662f\u7528$f(x)=x^2+c$,\u7136\u540e\u5e26\u5165\u590d\u6570,\u7528\u4e0a\u9762\u8bb2\u5230\u7684\u65b9\u5f0f\u8fdb\u884c\u8fed\u4ee3\u7684.\n![png2](https://gss2.bdstatic.com/9fo3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike92%2C5%2C5%2C92%2C30/sign=4dfd34e0114c510fbac9ea4801304e48/a71ea8d3fd1f41345db3ef562e1f95cad1c85e16.jpg)\n*\u2191\u66fc\u5fb7\u52c3\u7f57\u96c6.\u6bcf\u4e2a\u70b9\u7684\u5750\u6807\u4ee3\u8868\u4e00\u4e2a\u590d\u6570$x_1$,\u7136\u540e\u6839\u636e\u6570\u5217\u7684\u53d1\u6563\u901f\u5ea6\u5bf9\u8fd9\u4e2a\u70b9\u67d3\u8272.*\n\n\u8fd9\u4e2a\u56fe\u5f62\u548c\u6240\u8c13\u7684\u6df7\u6c8c\u7cfb\u7edf\u6709\u5173.\u6211\u731c\u5927\u6982\u662f**\u6df7\u6c8c**\u8fd9\u4e2a\u6027\u8d28\u4fdd\u8bc1\u4e86Pollard\u51fd\u6570\u4f1a\u751f\u6210\u4e00\u4e32\u4f18\u79c0\u7684\u4f2a\u968f\u673a\u6570\u5427.\n\n\u4e0d\u8fc7\u4e4b\u6240\u4ee5\u53eb\u4f2a\u968f\u673a\u6570,\u662f\u56e0\u4e3a\u8fd9\u4e2a\u6570\u5217\u91cc\u9762\u4f1a\u5305\u542b\u6709\"\u6b7b\u5faa\u73af\".\n\n${1,8,11,8,11,8,11,\\dots}$\u8fd9\u4e2a\u6570\u5217\u662f$c=7,N=20,x_1=1$\u65f6\u5f97\u5230\u7684\u968f\u673a\u6570\u5217.\u8fd9\u4e2a\u6570\u5217\u4f1a\u6700\u7ec8\u57288\u548c11\u4e4b\u95f4\u4e0d\u65ad\u5faa\u73af.\u5faa\u73af\u8282\u7684\u4ea7\u751f\u4e0d\u96be\u7406\u89e3:\u5728\u6a21N\u610f\u4e49\u4e0b,\u6574\u4e2a\u51fd\u6570\u7684\u503c\u57df\u53ea\u80fd\u662f${0,1,2,\\dots,N-1}$.\u603b\u6709\u4e00\u5929,\u51fd\u6570\u5728\u8fed\u4ee3\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u5e26\u5165\u4e4b\u524d\u7684\u503c,\u5f97\u5230\u76f8\u540c\u7684\u7ed3\u679c.\n\u751f\u6210\u6570\u5217\u7684\u8f68\u8ff9\u5f88\u50cf\u4e00\u4e2a\u5e0c\u814a\u5b57\u6bcd$\\rho$,\u6240\u4ee5\u6574\u4e2a\u7b97\u6cd5\u7684\u540d\u5b57\u53eb\u505aPollard Rho.\n\n### 3.3 \u57fa\u4e8eFloyd\u7b97\u6cd5\u4f18\u5316\u7684Pollard Rho\n\u4e3a\u4e86\u5224\u65ad\u73af\u7684\u5b58\u5728,\u53ef\u4ee5\u7528\u4e00\u4e2a\u7b80\u5355\u7684Floyd\u5224\u5708\u7b97\u6cd5,\u4e5f\u5c31\u662f\"\u9f9f\u5154\u8d5b\u8dd1\".\n\u5047\u8bbe\u4e4c\u9f9f\u4e3a$t$,\u5154\u5b50\u4e3a$r$,\u521d\u59cb\u65f6$t=r=1$.\u5047\u8bbe\u5154\u5b50\u7684\u901f\u5ea6\u662f\u4e4c\u9f9f\u7684\u4e00\u500d.\n\u8fc7\u4e86\u65f6\u95f4$i$\u540e,$t=i,r=2i$.\u6b64\u65f6\u4e24\u8005\u5f97\u5230\u7684\u6570\u5217\u503c$x_t=x_i,x_r=x_{2i}$.\n\u5047\u8bbe\u73af\u7684\u957f\u5ea6\u4e3a$c$,\u5728\u73af\u5185\u6052\u6709:$x_i=x_{i+c}$.\n\u5982\u679c\u9f9f\u5154\"\u76f8\u9047\",\u6b64\u65f6\u6709:$x_r=x_t$,\u4e5f\u5c31\u662f$x_i=x_{2i}=x_{i+kc}$.\u6b64\u65f6\u4e24\u8005\u8def\u5f84\u4e4b\u5dee\u6b63\u597d\u662f\u73af\u957f\u5ea6\u7684\u6574\u6570\u500d\u3002\n\n\u8fd9\u6837\u4ee5\u6765,\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u5957\u57fa\u4e8eFloyd\u5224\u5708\u7b97\u6cd5\u7684Pollard Rho \u7b97\u6cd5.\n```cpp\nint f(int x,int c,int n)\n{\n    return (x*x+c)%n;\n}\n\nint pollard_rho(int N)\n{\n    int c=rand()%(N-1)+1;\n    int t=f(0,c,N),r=f(f(0,c,N),c,N);//\u4e24\u500d\u901f\u8dd1\n    while(t!=r)\n    {\n        int d=gcd(abs(t-r),N);\n        if(d>1)\n            return d;\n        t=f(t,c,N),r=f(f(r,c,N),c,N);\n    }\n    return N;//\u6ca1\u6709\u627e\u5230,\u91cd\u65b0\u8c03\u6574\u53c2\u6570c\n}\n```\n\n### 3.4 \u57fa\u4e8e\u8def\u5f84\u500d\u589e\u548c\u4e00\u4e2a\u5e38\u6570\u7684\u4f18\u5316\n\u7531\u4e8e\u6c42$\\gcd$\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(\\log{N})$\u7684,\u9891\u7e41\u5730\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u4f1a\u5bfc\u81f4\u7b97\u6cd5\u53d8\u5f97\u5f02\u5e38\u6162.\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e58\u6cd5\u7d2f\u79ef\u6765\u51cf\u5c11\u6c42gcd\u7684\u6b21\u6570.\n\u663e\u7136\u7684,\u5982\u679c$\\gcd(a,b)>1$,\u5219\u6709$\\gcd(ac,b)>1$,c\u662f\u67d0\u4e2a\u6b63\u6574\u6570.\u66f4\u8fd1\u4e00\u6b65\u7684,\u7531\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5,\u6211\u4eec\u6709$gcd(a,b) = gcd(ac\\mod b,b) >1$. \u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u6d4b\u8bd5\u6837\u672c$|t-r|$\u5728\u6a21N\u610f\u4e49\u4e0b\u4e58\u8d77\u6765,\u518d\u505a\u4e00\u6b21gcd.\u9009\u53d6\u9002\u5f53\u7684\u76f8\u4e58\u4e2a\u6570\u5f88\u91cd\u8981.\n\n\u6211\u4eec\u4e0d\u59a8\u8003\u8651\u500d\u589e\u7684\u601d\u60f3:\u6bcf\u6b21\u5728\u8def\u5f84$\\rho$\u4e0a\u500d\u589e\u5730\u53d6\u4e00\u6bb5$[2^{k-1},2^k]$\u7684\u533a\u95f4.\u5c06$2^{k-1}$\u8bb0\u4e3a$l$,$2^k$\u8bb0\u4e3a$r$.\u53d6\u800c\u4ee3\u4e4b\u7684,\u6211\u4eec\u6bcf\u6b21\u53d6\u7684gcd\u6d4b\u8bd5\u6837\u672c\u4e3a$|x_i-x_l|$,\u5176\u4e2d$l \\leqslant i \\leqslant r$.\u6211\u4eec\u6bcf\u6b21\u79ef\u7d2f\u7684\u6837\u672c\u4e2a\u6570\u5c31\u662f$2^{k-1}$\u4e2a,\u662f\u500d\u589e\u7684\u4e86.\u8fd9\u6837\u53ef\u4ee5\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u907f\u514d\u5728\u73af\u4e0a\u505c\u7559\u8fc7\u4e45,\u6216\u8005\u53d6gcd\u7684\u6b21\u6570\u8fc7\u7e41\u7684\u5f0a\u7aef.\n\n\u5f53\u7136\uff0c\u5982\u679c\u500d\u589e\u6b21\u6570\u8fc7\u591a\uff0c\u7b97\u6cd5\u9700\u8981\u79ef\u7d2f\u7684\u6837\u672c\u5c31\u8d8a\u591a\u3002\u6211\u4eec\u53ef\u4ee5\u89c4\u5b9a\u4e00\u4e2a\u500d\u589e\u7684\u4e0a\u754c\u3002\n\n![127](http://images.cnblogs.com/cnblogs_com/LinearODE/1409729/o_Screenshot_2019-03-16%20%E8%AF%A5%E6%95%B0%E6%80%A7%E8%B4%A8%20127.png)\n\n*\u2191$127=2^7-1$\uff0c\u636e\u63a8\u6d4b\u5e94\u8be5\u662f\u9650\u5236\u4e86\u500d\u589e\u7684\u4e0a\u754c\u3002*\n\n\u4e00\u65e6\u6837\u672c\u7684\u957f\u5ea6\u8d85\u8fc7\u4e86127\uff0c\u6211\u4eec\u5c31\u7ed3\u675f\u8fd9\u6b21\u79ef\u7d2f\uff0c\u5e76\u6c42\u4e00\u6b21$\\gcd$\u3002$127$\u8fd9\u4e2a\u6570\u5e94\u8be5\u662f\u6709\u7531\u6765\u7684\u3002\u5728\u6700\u8fd1\u4e00\u6b21\u5b66\u957f\u8003\u8bd5\u8bb2\u89e3\u4e2d\uff0c$128$\u4f3c\u4e4e\u4f5c\u4e3a\u201c\u4e0d\u8d85\u8fc7\u67d0\u4e2a\u6570\u7684\u8d28\u6570\u4e2a\u6570\u201d\u51fa\u73b0\u5728\u65f6\u95f4\u590d\u6742\u5ea6\u4e2d\u3002\u4e0d\u8fc7\u4f60\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u5c06\"\u8fed\u4ee37\u6b21\"\u4f5c\u4e3a\u4e0a\u754c\u662f\u5b9e\u9a8c\u5f97\u51fa\u7684\u8f83\u4f18\u65b9\u6848\u3002\u5982\u679c\u6709\u77e5\u9053\u548c$128$\u6709\u5173\u6027\u8d28\u7684\u5927\u4f6c\uff0c\u6b22\u8fce\u5728\u4e0b\u65b9\u7559\u8a00\u3002\n\n\u8fd9\u6837,\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u5957\u5b8c\u6574\u7684,\u57fa\u4e8e\u8def\u5f84\u500d\u589e\u7684Pollard Rho \u7b97\u6cd5.\n\n\n```cpp\ninline ll PR(ll x)\n{\n    ll s=0,t=0,c=1ll*rand()%(x-1)+1;\n    int stp=0,goal=1;\n    ll val=1;\n    for(goal=1;;goal<<=1,s=t,val=1)\n    {\n        for(stp=1;stp<=goal;++stp)\n        {\n            t=f(t,c,x);\n            val=(lll)val*abs(t-s)%x;\n            if((stp%127)==0)\n            {\n                ll d=gcd(val,x);\n                if(d>1)\n                    return d;\n            }\n        }\n        ll d=gcd(val,x);\n        if(d>1)\n            return d;\n    }\n}\n```\n\u8fd9\u4e2a\u4ee3\u7801\u4e0d\u4e00\u5b9a\u662f\u6700\u597d\u7684,\u8fd8\u53ef\u4ee5\u6709\u76f8\u5f53\u591a\u7684\u4f18\u5316.\u4e0d\u8fc7\u81f3\u5c11\u5b83\u8db3\u591f\u901a\u8fc7\u90e8\u5206\u6bd2\u7624\u6570\u636e\u4e86.\n\n### 4.1 \u4f8b\u9898\n[P4718](https://www.luogu.org/problemnew/show/P4718)\n\n\u8fd9\u4e2a\u95ee\u9898\u8fd8\u9700\u8981\u4e00\u4e2a[Miller Rabin](https://www.cnblogs.com/LinearODE/p/10543412.html)\u6d4b\u8bd5\u6765\u5feb\u901f\u6d4b\u5b9a\u8d28\u6570.\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6570$n$,\u6211\u4eec\u9996\u5148\u7528Miller Rabin\u5feb\u901f\u5224\u5b9a\u4e00\u4e0b\u8fd9\u4e2a\u6570\u662f\u4e0d\u662f\u8d28\u6570.\u5982\u679c\u662f\u5219\u76f4\u63a5\u8fd4\u56de,\u5426\u5219\u5c31\u7528Pollard Rho \u627e\u4e00\u4e2a\u56e0\u5b50p.\n\u5c06n\u4e2d\u7684\u56e0\u5b50p\u5168\u90e8\u5220\u53bb,\u518d\u9012\u5f52\u5730\u5206\u89e3\u65b0\u7684n\u548cp.\n\u53ef\u4ee5\u7528\u4e00\u4e2a\u5168\u5c40\u53d8\u91cfmax_factor\u8bb0\u5f55\u4e00\u4e0bn\u6700\u5927\u7684\u56e0\u5b50,\u5728\u9012\u5f52\u5206\u89e3\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u628a\u6ca1\u5fc5\u8981\u7684\u64cd\u4f5c\"\u526a\u679d\"\u6389.\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define rg register\n#define RP(i,a,b) for(register int i=a;i<=b;++i)\n#define DRP(i,a,b) for(register int i=a;i>=b;--i)\n#define fre(z) freopen(z\".in\",\"r\",stdin),freopen(z\".out\",\"w\",stdout)\ntypedef long long ll;\ntypedef double db;\n#define lll __int128\ntemplate<class type_name> inline type_name qr(type_name sample)\n{\n    type_name ret=0,sgn=1;\n    char cur=getchar();\n    while(!isdigit(cur))\n        sgn=(cur=='-'?-1:1),cur=getchar();\n    while(isdigit(cur))\n        ret=(ret<<1)+(ret<<3)+cur-'0',cur=getchar();\n    return sgn==-1?-ret:ret;\n}\n\nll max_factor;\n\ninline ll gcd(ll a,ll b)\n{\n    if(b==0)\n        return a;\n    return gcd(b,a%b);\n}\n\ninline ll qp(ll x,ll p,ll mod)\n{\n    ll ans=1;\n    while(p)\n    {\n        if(p&1)\n            ans=(lll)ans*x%mod;\n        x=(lll)x*x%mod;\n        p>>=1;\n    }\n    return ans;\n}\n\ninline bool mr(ll x,ll b)\n{\n    ll k=x-1;\n    while(k)\n    {\n        ll cur=qp(b,k,x);\n        if(cur!=1 && cur!=x-1)\n            return false;\n        if((k&1)==1 || cur==x-1)\n            return true;\n        k>>=1;\n    }\n    return true;\n}\n\ninline bool prime(ll x)\n{\n    if(x==46856248255981ll || x<2)\n        return false;\n    if(x==2 || x==3 || x==7 || x==61 || x==24251)\n        return true;\n    return mr(x,2)&&mr(x,61);\n}\n\ninline ll f(ll x,ll c,ll n)\n{\n    return ((lll)x*x+c)%n;\n}\n\ninline ll PR(ll x)\n{\n    ll s=0,t=0,c=1ll*rand()%(x-1)+1;\n    int stp=0,goal=1;\n    ll val=1;\n    for(goal=1;;goal<<=1,s=t,val=1)\n    {\n        for(stp=1;stp<=goal;++stp)\n        {\n            t=f(t,c,x);\n            val=(lll)val*abs(t-s)%x;\n            if((stp%127)==0)\n            {\n                ll d=gcd(val,x);\n                if(d>1)\n                    return d;\n            }\n        }\n        ll d=gcd(val,x);\n        if(d>1)\n            return d;\n    }\n}\n\ninline void fac(ll x)\n{\n    if(x<=max_factor || x<2)\n        return;\n    if(prime(x))\n    {\n        max_factor=max_factor>x?max_factor:x;\n        return;\t\t\n    }\n    ll p=x;\n    while(p>=x)\n        p=PR(x);\n    while((x%p)==0)\n        x/=p;\n    fac(x),fac(p);\n}\n\nint main()\n{\n    int T=qr(1);\n    while(T--)\n    {\n        srand((unsigned)time(NULL));\n        ll n=qr(1ll);\n        max_factor=0;\n        fac(n);\n            if(max_factor==n)\n                puts(\"Prime\");\n            else\n                printf(\"%lld\\n\",max_factor);\n    }\n    return 0;\n}\n```",
        "postTime": 1552726387,
        "uid": 134757,
        "name": "LinearODE",
        "ccfLevel": 0,
        "title": "Pollard  Rho \u7b97\u6cd5\u7b80\u4ecb"
    },
    {
        "content": "## \u524d\u8a00\r\n\r\n\u5728\u521a\u5f00\u59cb\u5b66\u4e60 Miller-Rabin \u7684\u65f6\u5019\uff0c\u6211\u5bf9\u7b97\u6cd5\u672c\u8eab\u7684\u968f\u673a\u6027\u611f\u5230\u76f8\u5f53\u7a0b\u5ea6\u7684\u4e0d\u6ee1\u3002\r\n\r\n\u7136\u540e\uff0c\u767e\u5ea6\u767e\u79d1\u4e0a\u7684\u4e00\u6bb5\u8bdd\u4fbf\u5438\u5f15\u4e86\u6211\u7684\u6ce8\u610f\u3002\r\n\r\n> \u5361\u5185\u57fa\u6885\u9686\u5927\u5b66\u7684\u8ba1\u7b97\u673a\u7cfb\u6559\u6388 Gary Lee Miller \u9996\u5148\u63d0\u51fa\u4e86\u57fa\u4e8e\u5e7f\u4e49\u9ece\u66fc\u731c\u60f3\u7684\u786e\u5b9a\u6027\u7b97\u6cd5\uff0c  \r\n> \u7531\u4e8e\u5e7f\u4e49\u9ece\u66fc\u731c\u60f3\u5e76\u6ca1\u6709\u88ab\u8bc1\u660e\uff0c\u5176\u540e\u7531\u4ee5\u8272\u5217\u8036\u8def\u6492\u51b7\u5e0c\u4f2f\u6765\u5927\u5b66\u7684 Michael O. Rabin \u6559\u6388\u4f5c\u51fa\u4fee\u6539\uff0c  \r\n> \u63d0\u51fa\u4e86\u4e0d\u4f9d\u8d56\u4e8e\u8be5\u5047\u8bbe\u7684\u968f\u673a\u5316\u7b97\u6cd5\u3002\r\n\r\n\u4e8e\u662f\u4fbf\u6709\u4e86\u51e0\u4e2a\u95ee\u9898\uff1a\r\n- \u8fd9\u4e2a\u786e\u5b9a\u6027\u7b97\u6cd5\u5230\u5e95\u662f\u4ec0\u4e48\uff1f\r\n- \u65e2\u7136\u7b97\u6cd5\u88ab\u968f\u673a\u5316\u4ec5\u4ec5\u662f\u56e0\u4e3a\u5e7f\u4e49\u9ece\u66fc\u731c\u60f3\u672a\u88ab\u8bc1\u660e\uff0c    \r\n  \u90a3\u4e48\u662f\u5426\u610f\u5473\u7740\u5b83\u81f3\u5c11\u5728 OI \u8303\u56f4\u5185\uff08$2^{64}$ \u4ee5\u5185\uff09 \u662f\u6b63\u786e\u7684\uff0c\u53ef\u4ee5\u7528\u4e8e OI\uff1f\r\n- \u662f\u5426\u6709\u7b80\u6d01\u660e\u5feb\u7684\u65b9\u6cd5\uff0c\u5728 OI \u8303\u56f4\u5185\u5b9e\u73b0 **\u786e\u5b9a\u6027** \u5224\u7d20\uff1f\r\n\r\n\u76f8\u4fe1\u4e0d\u5c11\u521d\u5b66\u8005\u90fd\u6709\u4e0e\u6211\u4e00\u6837\u7684\u95ee\u9898\uff0c  \r\n\u8fd9\u7bc7\u535a\u6587\u5c06\u4ecb\u7ecd Miller Rabin \u7b97\u6cd5\u53ca\u5176\u786e\u5b9a\u6027\u5316\uff0c\u89e3\u51b3\u8fd9\u51e0\u4e2a\u7591\u95ee\u3002\r\n\r\n\u524d\u7f6e\u829d\u58eb\uff1a[\u4e58\u6cd5\u9006\u5143](https://www.luogu.com.cn/problem/P5431)\r\n\r\n## \u8d39\u9a6c\u7d20\u6027\u68c0\u9a8c\r\n\r\n\u7d20\u6027\u68c0\u9a8c\u6700\u66b4\u529b\u7684\u65b9\u6cd5\u662f $\\Theta(\\sqrt{n})$ \u7684\uff0c\u4e3a\u4e86\u5e94\u4ed8 $2^{64}$ \u4ee5\u5185\u7684\u6570\u636e\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u66f4\u8fc5\u901f\u7684\u65b9\u6cd5\u6765\u5224\u5b9a\u7d20\u6570\u3002 \r\n\r\n\u5177\u4f53\u7684\uff0c\u6211\u4eec\u6709\u8d39\u9a6c\u5c0f\u5b9a\u7406\uff1a\r\n> \u82e5 $p$ \u4e3a\u7d20\u6570\uff0c\u5bf9\u4e8e\u6240\u6709\u7684 $1\\le a<p$\uff0c\u6709 $a^{p-1}\\equiv 1\\pmod{p}$ \u3002\r\n\r\n\u8003\u8651\u5b83\u7684\u9006\u5426\u547d\u9898\uff1a\r\n> \u82e5\u5b58\u5728 $1\\le a<p$\uff0c\u4f7f\u5f97 $a^{p-1}\\not\\equiv 1\\pmod{p}$\uff0c\u5219 $p$ \u4e00\u5b9a\u4e0d\u662f\u7d20\u6570\u3002\r\n\r\n\u90a3\u6211\u4eec\u53ef\u4ee5\u5728 $[1,p-1)$ \u5185\u968f\u4fbf\u9009\u53d6\u51e0\u4e2a\u6570\uff0c\u5feb\u901f\u5e42\u6765\u68c0\u9a8c $p$ \u662f\u5426\u662f\u7d20\u6570\u3002\r\n\r\n- \u82e5\u5b58\u5728\u5feb\u901f\u5e42\u7684\u7ed3\u679c\u4e0d\u662f $1$\uff0c\u5219 $p$ \u4e00\u5b9a\u4e0d\u662f\u7d20\u6570\u3002\r\n- \u5426\u5219\uff0c$p$ \u5927\u6982\u7387\u662f\u4e00\u4e2a\u7d20\u6570\u3002\r\n\r\n\u8fd9\u4e00\u65b9\u6cd5\u79f0\u4e3a **\u8d39\u9a6c\u7d20\u6027\u68c0\u9a8c** \u3002\r\n\r\n## \u4e8c\u6b21\u63a2\u6d4b\u5b9a\u7406\u4e0e Miller Rabin \u7d20\u6027\u68c0\u9a8c\r\n\r\n\u9057\u61be\u7684\u662f\uff0c\u8d39\u9a6c\u7d20\u6027\u68c0\u9a8c\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff1a  \r\n\u6709\u7684\u5408\u6570 $p$ \u4e5f\u6ee1\u8db3 $a^{p-1}\\equiv 1\\pmod{p} \\quad(1\\le a<p)$\uff0c  \r\n\u8fd9\u6837\u7684\u6570\u88ab\u79f0\u4e3a\u5361\u8fc8\u514b\u5c14\u6570\uff08Carmichael Number\uff09\uff0c\u53c8\u79f0\u4e3a\u8d39\u9a6c\u4f2a\u7d20\u6570\u3002  \r\n\u4f8b\u5982\uff0c$561=3\\times 11\\times 17$ \u5c31\u662f\u4e00\u4e2a\u5361\u8fc8\u514b\u5c14\u6570\u3002  \r\n\u5728 $10^9$ \u4ee5\u5185\uff0c\u8fd9\u6837\u7684\u6570\u6709 $646$ \u4e2a\uff0c\u663e\u7136 $2^{64}$ \u4ee5\u5185\u4e0d\u80fd\u901a\u8fc7\u6253\u8868\u6765\u6ee1\u8db3\u7d20\u6027\u68c0\u6d4b\u7684\u8981\u6c42\u3002\r\n\r\n\u8fd9\u8feb\u4f7f\u6211\u4eec\u53bb\u4f18\u5316\u8d39\u9a6c\u7d20\u6027\u68c0\u9a8c\u3002\u5177\u4f53\u5730\uff0c\u6211\u4eec\u6709\u4e8c\u6b21\u63a2\u6d4b\u5b9a\u7406\uff1a\r\n\r\n> \u82e5 $p$ \u4e3a\u5947\u7d20\u6570\uff0c\u5219 $x^2\\equiv 1\\pmod{p}$ \u7684\u89e3\u4e3a $x\\equiv\\pm 1\\pmod{p}$\u3002\r\n\r\n\u82e5 $p$ \u662f\u5947\u6570\uff0c\u663e\u7136 $p-1$ \u662f\u5076\u6570\uff0c\u53ef\u4ee5\u8fd9\u6837\u4f18\u5316\u7b97\u6cd5\u7684\u6b63\u786e\u6027\uff1a\r\n- \u8bbe\u9009\u53d6\u7684\u5e95\u6570\u4e3a $a$\uff0c\u521d\u59cb\u5316\u6307\u6570 $d=p-1$\u3002\r\n- \u5feb\u901f\u5e42\u5224\u5b9a $a^d\\bmod{p}$ \u662f\u5426\u4e3a $1$\uff0c\u4e0d\u662f $1$ \u5219 $p$ \u4e3a\u5408\u6570\u3002\r\n- \u5426\u5219\uff0c\u91cd\u590d $d\\leftarrow \\dfrac{d}{2}$ \u76f4\u5230 $d$ \u4e3a\u5947\u6570\u6216 $a^d\\not\\equiv 1\\pmod{p}$\r\n- \u6700\u540e\uff0c\u82e5 $a^d\\not\\equiv\\pm 1\\pmod{p}$\uff0c\u5219 $p$ \u4e3a\u5408\u6570\uff0c\u5426\u5219 $p$ \u5927\u6982\u7387\u662f\u4e2a\u7d20\u6570\u3002\r\n\r\n```cpp\r\ntypedef unsigned long long ull;\r\ntypedef unsigned int word;\r\nbool check(const word a,const ull p){\r\n\tull d=p-1,get=pow(a,d,p);\r\n\tif(get!=1) return 1;//\u7279\u5224 d=p-1 \u7684\u60c5\u51b5\r\n\twhile((d&1)^1)\r\n\t\tif(d>>=1,(get=pow(a,d,p))==p-1) return 0;//\u5148 d/=2\uff0c\u518d\u8ba1\u7b97\u5feb\u901f\u5e42\r\n\t\telse if(get!=1) return 1;\r\n\treturn 0;\r\n}\r\n```\r\n\r\n\u521d\u5b66\u8005\u5199 Miller-Rabin \u65f6\u53ef\u80fd\u4f1a\u72af\u7684\u9519\u8bef\uff1a\r\n- \u6ca1\u6709\u7279\u5224 $2^{p-1}\\equiv -1\\pmod{p}$ \u7684\u60c5\u51b5\u3002\r\n- \u5148\u8ba1\u7b97 $a^d\\bmod{p}$\uff0c\u518d $d\\leftarrow \\dfrac{d}{2}$\uff0c\u5bfc\u81f4\u5ffd\u7565\u4e86 $d$ \u4e3a\u5947\u6570\u7684\u60c5\u51b5\u3002\r\n\r\n\u82e5\u968f\u673a\u9009\u53d6 $k$ \u4e2a\u5e95\u6570\uff0cMiller-Rabin \u7684\u9519\u8bef\u7387\u4e3a $4^{-k}$\u3002  \r\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u9009\u53d6 $20\\sim 40$ \u4e2a\u5e95\u6570\uff0c\u6b63\u786e\u7387\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\r\n\r\n## \u56fa\u5b9a\u5e95\u6570\u4e0e\u786e\u5b9a\u6027\u68c0\u9a8c\r\n\r\nMiller-Rabin \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(k\\log^2 p)$\uff0c\u5b9e\u9645\u662f\u7528\u4e8e\u83b7\u53d6\u9ad8\u8fbe $2^{1024}$ \u7684 \u201c\u5de5\u4e1a\u201d \u7d20\u6570\u7684\u3002  \r\n\u5728 OI \u7684 $2^{64}$ \u8303\u56f4\u5185\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u786e\u5b9a\u6027\u5316\u3002\r\n\r\n> \u5982\u679c\u6211\u4eec\u5047\u8bbe\u5e7f\u4e49 Riemann \u731c\u60f3\uff08GRH\uff09\u6210\u7acb\uff0c\u90a3\u4e48\u8bc1\u660e $n$ \u662f\u7d20\u6570\u5c31\u53ea\u9700\u8981\u9a8c\u8bc1  \r\n> \u201c $n$ \u53ef\u4ee5\u901a\u8fc7\u4ee5 $2,3,4,\\cdots \\lfloor 2(\\log n)^2\\rfloor$ \u4e3a\u5e95\u7684 Rabin-Miller \u6d4b\u8bd5 \u201d\u4e86\u3002  \r\n> \u8fd9\u4e2a\u7b97\u6cd5\uff0c\u5982\u679c\u80fd\u4e25\u683c\u8bc1\u660e\u7684\u8bdd\uff0c\u8fd0\u884c\u65f6\u95f4\u662f $O((\\log n)^5)$\u3002  \r\n> \u2014\u2014\u6458\u81ea\u77e5\u4e4e\u56de\u7b54[\u5982\u4f55\u7f16\u7a0b\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u5426\u662f\u8d28\u6570\uff1f](https://www.zhihu.com/question/308322307)\r\n\r\n$n=2^{64}$ \u65f6\uff0c$\\lfloor 2(\\log n)^2\\rfloor=8192$\uff0c  \r\n\u5373\u4f7f GRH \u6210\u7acb\uff0c\u6539\u9020\u540e\u7b97\u6cd5\u7684\u8fd0\u884c\u65f6\u95f4\u5df2\u7ecf\u4e0d\u53ef\u63a5\u53d7\u4e86\u3002  \r\n\r\n\u4f46\u662f\uff0c\u5c31\u7b97 GRH \u4e0d\u6210\u7acb\uff0c\u901a\u8fc7\u9009\u53d6\u51e0\u4e2a\u56fa\u5b9a\u7684\u5e95\u6570\uff0c  \r\n\u6211\u4eec\u4f9d\u7136\u80fd\u5728\u4e00\u5b9a\u7684\u8303\u56f4\u5185\u5b9e\u73b0\u786e\u5b9a\u6027\u5224\u7d20\u3002\r\n\r\n- \u5bf9\u4e8e $2^{32}$ \u4ee5\u5185\u7684\u5224\u7d20\uff0c\u9009\u53d6 $2,7,61$ \u4e09\u4e2a\u5e95\u6570\u5373\u53ef\u3002\r\n- \u5bf9\u4e8e\u5c0f\u4e8e $2^{64}$ \u4ee5\u5185\u7684\u5224\u7d20\uff0c\u9009\u53d6 $2,325,9375,28178,450775,9780504,1795265022$ \u4e03\u4e2a\u5e95\u6570\u5373\u53ef\u3002\r\n- \u5982\u679c\u662f\u8003\u573a\u4e0a\uff0c\u9009\u53d6 $2,3,5,7,11,13,17,19,23,29,31,37$   \r\n  \uff08\u4e5f\u5c31\u662f\u524d\u5341\u4e8c\u4e2a\u8d28\u6570\uff09\u4f5c\u4e3a\u5e95\u6570\u5373\u53ef\uff0c\u5b83\u9002\u7528\u4e8e $2^{78}$ \u4ee5\u5185\u7684\u5224\u7d20\u3002  \r\n  \u5bf9\u4e8e\u9009\u53d6\u524d $n$ \u4e2a\u8d28\u6570\u4f5c\u4e3a\u5e95\u6570\u7684\u9002\u7528\u8303\u56f4\uff0c\u8be6\u89c1 [OEIS](https://oeis.org/A014233)  \r\n\r\n\u7531\u6b64\u6211\u4eec\u5f97\u5230\u4e86\u6700\u7ec8\u7684\u56fa\u5b9a\u5224\u7d20\u7684\u4ee3\u7801\uff08\u9700\u8981 C++ 11\uff09\uff1a\r\n```cpp\r\ntypedef unsigned long long ull;\r\ntypedef unsigned char byte;\r\nconst byte test[]={2,3,5,7,11,13,17,19,23,29,31,37};\r\nbool miller_rabin(const ull p){\r\n\tif(p>40){\r\n    \tfor(word a:test)\r\n\t\t\tif(check(a,p)) return 0;\r\n        return 1;\r\n    }\r\n    for(word a:test)\r\n\t\tif(p==a) return 1;\r\n\treturn 0;\r\n}\r\n```\r\n## \u53c2\u8003\u8d44\u6599\r\n- \u77e5\u4e4e\u56de\u7b54[\u5982\u4f55\u7f16\u7a0b\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u5426\u662f\u8d28\u6570\uff1f](https://www.zhihu.com/question/308322307)\r\n- [\u7ef4\u57fa\u767e\u79d1](https://en.wikipedia.org/wiki/Miller%E2%80%93Rabin_primality_test#Deterministic_variants_of_the_test)\r\n- [Deterministic variants of the Miller-Rabin primality test](https://miller-rabin.appspot.com)\r\n\r\n\r\n\u5e0c\u671b\u501f\u6211\u8fd9\u7bc7\u535a\u6587\uff0c\u786e\u5b9a\u6027\u5224\u7d20\u7684 miller-rabin \u80fd\u5728 OI \u4e2d\u666e\u53ca\u3002  \r\n\u671b\u5927\u5bb6\u5b66\u4e60\u65f6\u4e0d\u8981\u4eba\u4e91\u4ea6\u4e91\u3001\u6d45\u5c1d\u8f84\u6b62\u3002",
        "postTime": 1632624409,
        "uid": 104726,
        "name": "wangrx",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4718/\u8bba Miller-Rabin \u7b97\u6cd5\u7684\u786e\u5b9a\u6027\u5316"
    },
    {
        "content": "**\u8fd9\u7bc7\u9898\u89e3\u6ca1\u6709\u6d89\u53ca\u5230Pollard-Rho\u7b97\u6cd5\u7684\u4efb\u4f55\u4ecb\u7ecd**\uff0c\u4f46\u662f\u7684\u786e\u4f7f\u7528\u5230\u4e86Pollard-Rho\u7b97\u6cd5\u3002\n\n\u5f88\u591a\u4eba\u90fd\u77e5\u9053linux\u7cfb\u7edf\u4e2d\u6709\u4e00\u4e2a`factor`\u547d\u4ee4\uff0c\u652f\u6301__int128\u8303\u56f4\u5185\u7684\u6570\uff0c\u5927\u6982\u662f\u8fd9\u4e48\u7528\u7684\uff1a\n```\n$factor 1000000000000000034000000000000000093\n1000000000000000034000000000000000093: 1000000000000000003 1000000000000000031\n```\n(\u8fd9\u4e2a\u4eba\u7c7b\u53ef\u4ee5\u968f\u624b\u5341\u5b57\u76f8\u4e58\u5206\u89e3\u7684\u6570\u5b57\uff0c\u5374\u7528\u4e86`factor`30\u79d2)\n\n\u5728[Github](https://github.com/coreutils/coreutils/blob/master/src/factor.c)\u4e0a\u6709`factor`\u7684\u6e90\u4ee3\u7801\uff0c\u53ef\u4ee5\u770b\u5230\u7684\u786e\u4f7f\u7528\u4e86$\\texttt{Miller-Rabin}$\u548c$\\texttt{Pollard-Rho}$\u7b97\u6cd5\u3002\n\n\u4f46\u662f\u663e\u7136\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u8c03\u7528`factor`\uff0c\u56e0\u4e3a\u8f93\u51fa\u683c\u5f0f\u548c\u6b64\u9898\u9700\u8981\u7684\u683c\u5f0f\u4e0d\u7b26\u3002\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528`sed`\u5de5\u5177\u8c03\u6574\u8f93\u51fa\u7684\u683c\u5f0f\u3002`sed`\u662flinux\u4e0b\u5e38\u7528\u7684\u6587\u672c\u5904\u7406\u5de5\u5177\uff0c\u8bed\u6cd5\u548c`ed`\u3001`vi`\u7b49\u7b49\u7f16\u8f91\u5668\u7c7b\u4f3c\u3002\n\n\u53ef\u4ee5\u53d1\u73b0`factor`\u7684\u6bcf\u4e00\u4e2a\u56e0\u6570\u4e4b\u524d\u90fd\u6709\u4e00\u4e2a\u7a7a\u683c\uff0c\u6240\u4ee5\u7a7a\u683c\u6570\u5c31\u662f\u56e0\u6570\u4e2a\u6570\u3002\u6b64\u5904\u4f7f\u7528\u4e86`sed \"s/[0-9:]//g\"`\u66ff\u6362\u6389`0..9`\u548c`:`\u5b57\u7b26\uff0c\u5269\u4e0b\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u5c31\u662f\u7a7a\u683c\u4e2a\u6570\u3002`s`\u662f\u66ff\u6362\u547d\u4ee4\uff0c`s/A/B/g`\u7684\u610f\u601d\u662f\u628aA\u66ff\u6362\u6210B(`g`\u662f\u5168\u90e8\u66ff\u6362)\u3002\u4f7f\u7528`${#s}`\u83b7\u5f97\u5b57\u7b26\u4e32`s`\u7684\u957f\u5ea6\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u5224\u65ad\u6570\u5b57\u662f\u5426\u662f\u8d28\u6570\uff0c\u7a7a\u683c\u6570\u7b49\u4e8e1\u7684\u662f\u8d28\u6570\u3002\n\n\u7136\u540e\u662f\u8981\u8f93\u51fa\u6700\u5927\u7684\u56e0\u6570\u3002\u7531\u4e8e`factor`\u5df2\u7ecf\u5e2e\u6211\u4eec\u6392\u597d\u5e8f\u4e86\uff0c\u6700\u540e\u4e00\u4e2a\u6570\u5c31\u662f\u6700\u5927\u7684\u6570\u3002\u6211\u4e0d\u4f1a\u4f7f\u7528`sed`\u63d0\u53d6\u6700\u540e\u4e00\u4e2a\u6570\uff0c\uff08\u6211\u4f1a\u7528`awk`\u505a\u5230\u53ef\u662f\u61d2\u5f97\u5199\u4e86\uff09\uff0c\u4e8e\u662f\u5c31\u7528`sed \"s/ /\\n/g\"`\u628a\u7a7a\u683c\u66ff\u6362\u6210\u4e86\u56de\u8f66\uff0c\u7136\u540e\u7528`tail -n1`\u53d6\u51fa\u6700\u540e\u4e00\u884c\u3002\n\n\u4e0b\u9762\u662f\u5b8c\u6574\u7684\u811a\u672c\uff0c\u53ef\u4ee5\u4f7f\u7528`sh`\u8fd0\u884c\u3002\n```\nread a                              # \u8bfb\u5165\u4e00\u4e2a\u6570\uff0c\u5b58\u5165\u53d8\u91cfa\nfor i in `seq 1 $a`; do             # seq 1 n\u7684\u610f\u601d\u662f1\u5230n\u7684\u6570\n    read t\n    s=`factor $t`                   # ``\u662f\u628a\u5176\u4e2d\u7684\u547d\u4ee4\u66ff\u6362\u6210\u547d\u4ee4\u7684\u8f93\u51fa\n    # s\u5b58\u7684\u5c31\u662ffactor\u7684\u7ed3\u679c\n    ss=`echo $s | sed \"s/[0-9:]//g\"`# ss\u5b58s\u4e2d\u7a7a\u683c\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\n    if [ ${#ss} -eq 1 ]; then       # -eq\u8868\u793a\u7b49\u4e8e\n        echo Prime                  # \u8f93\u51fa\u8d28\u6570\n    else\n        echo $s | sed \"s/ /\\n/g\" | tail -n1 #\u8f93\u51fa\u6700\u5927\u56e0\u6570\n    fi\ndone\n```\n\n\u867d\u7136\u6d1b\u8c37\u4e0a\u6ca1\u6709`sh`\u6216\u8005`bash`\u8fd9\u6837\u7684\u8bed\u8a00\uff0c\u4f46\u662f\u53ef\u4ee5\u4f7f\u7528C\u7684`system()`\u6216\u8005Python\u7684`os.system()`\u51fd\u6570\u63d0\u4ea4\u3002\n\n\u6700\u540e\u4ecb\u7ecd\u4e00\u4e0b\u591a\u884craw string\u7684\u5199\u6cd5\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u76f4\u63a5\u590d\u5236\u811a\u672c\u4e86\u3002\n```cpp\nR\"(\n\u591a\u884c\u5b57\u7b26\u4e32\n\u53ef\u4ee5\u5e26\\\uff0c\u4e0d\u4f1a\u8f6c\u4e49\n)\"              //C++11\n\n```\n```python\nr'''\n\u591a\u884c\u5b57\u7b26\u4e32\n\u53ef\u4ee5\u5e26\\\uff0c\u4e0d\u4f1a\u8f6c\u4e49\n'''             #python\n```",
        "postTime": 1562157480,
        "uid": 30093,
        "name": "cosmicAC",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4718 \u3010\u3010\u6a21\u677f\u3011Pollard-Rho\u7b97\u6cd5\u3011"
    },
    {
        "content": "## \u524d\u8a00\n\n\u534a\u5e74\u524d\u6211\u66fe\u5199\u4e86\u4e00\u6b21 PR \u7684\u4ee3\u7801\uff0c\u4e0d\u8fc7\u5f53\u65f6\u662f\u7167\u7740 AC \u4ee3\u7801\u7384\u5b66\u8c03\u8bd5\uff08~~\u8fd8\u662f\u6982\u7387~~\uff09\u8fc7\u7684\uff0c\u6ce8\u91ca\u6253\u7684\u4e5f\u5927\u90e8\u5206\u90fd\u662f\u8c03\u8bd5\u5751\u70b9\uff0c\u548c\u7b97\u6cd5\u6b63\u786e\u6027\u4e1d\u6beb\u6ca1\u6709\u5173\u7cfb...\uff08~~\u6bd5\u7adf\u662f\u9053\u9ed1\u9898\u600e\u4e48\u4e5f\u5f97\u60f3\u529e\u6cd5\u8fc7\u6389~~\uff09\n\n\u534a\u5e74\u540e~~\u4e3a\u4e86\u505a lxl \u7684\u67d0\u9053[\u9898](https://www.luogu.com.cn/problem/P5071 \"lxl\u6bd2\u7624\uff01\uff08\u5212\uff09\")~~\uff0c\u6211\u518d\u6b21\u6253\u5f00\u4e86\u8fd9\u9053\u9898\u76ee\u3002\u4e0d\u8fc7\u53d1\u73b0\u81ea\u5df1\u4ee5\u524d\u5199\u7684\u4ee3\u7801\u592a\u4e11\u4e86\uff0c\u6253\u7b97\u91cd\u5199\u4e00\u4efd\u3002\n\n\u4e8e\u662f\u548c\u7740\u7b97\u6cd5\u5bfc\u8bba\u4e0a\u7684\u4ee3\u7801\uff0c\u5dee\u4e0d\u591a\u5730\u6253\u4e86\u4e00\u4efd\uff1b\u4ea4\u4e0a\u53bb T \u7684\u5f88\u60e8\u3002\u63a5\u7740\u5f00\u59cb\u8bd5\u7740\u5bfb\u627e\u5173\u4e8e Pollard-Rho \u7b97\u6cd5\u7684\u8d44\u6599\uff0c\u6839\u636e\u5bf9\u590d\u6742\u5ea6\u7684\u7406\u89e3\u518d\u6253\u4e86\u4e00\u4efd\uff0c\u603b\u7b97\u662f\u7a33\u8fc7\u4e86\u3002\uff08\u5f53\u7136\u4e2d\u9014\u4e5f\u5c11\u4e0d\u4e86\u88ab\u6570\u636e\u5404\u79cd\u5361\u7684\u8c03\u8bd5\u90e8\u5206\uff09\n\n\uff08\u8bdd\u8bf4\u8fc7\u7a0b\u4e2d\u56e0\u770b\u4e0d\u61c2\u7b97\u5bfc\u5728 ~~bb~~ \u5199\u4ec0\u4e48\u5c31\u53bb\u7f51\u4e0a\u641c\u4e86\u4e00\u5708\uff0c\u7ed3\u679c\u6700\u540e\u8fd8\u662f\u770b\u7b97\u5bfc\u7406\u89e3\u7684qaq\uff09\n\n\u5199\u5b8c\u53c8\u7ffb\u4e86\u4e0b\u9898\u89e3\uff0c\u53d1\u73b0\u51e0\u4e4e\u6ca1\u4eba\u6d89\u53ca\u5230\u7b97\u6cd5\u590d\u6742\u5ea6\u7684\u90e8\u5206\uff0c\u5c24\u5176\u662f**\u671f\u671b\u590d\u6742\u5ea6 $\\sqrt p$ \u662f\u600e\u4e48\u6765\u7684**\u3002\u4e8e\u662f\u5c31\u6253\u7b97\u81ea\u5df1\u53e6\u5199\u4e00\u7bc7\u9898\u89e3\u4e86qwq\n\n&nbsp;\n\n\u4ee5\u4e0a\u5168\u662f\u5e9f\u8bdd\uff0c\u7531\u4e8e\u6211\u7684\u95ee\u9898\u8bed\u6587\u8bfb\u7740\u8fd8\u4e0d\u592a\u901a\uff0c\u53ea\u662f\u7eaa\u5ff5\u6027\u5730\u5199\u5728\u8fd9\u3002\u770b\u5230\u8fd9\u53e5\u8bdd\u8bf7\u65e0\u89c6\u4ee5\u4e0a\u6240\u6709\u6587\u5b57\u63a5\u7740\u770b\u6b63\u6587\uff08\n\n## \u7b97\u6cd5\u89e3\u6790\n\n\u9996\u5148\u6211\u4eec\u601d\u8003\u4e00\u4e2a\u4e0b\u4e00\u9879\u4ec5\u7531\u4e0a\u4e00\u9879\u51b3\u5b9a\uff0c\u4e14\u503c\u57df\u4e3a\u6a21 $n$ \u7684\u5269\u4f59\u7cfb\u7684\u5e8f\u5217 $\\text{<}x\\text{>}$\n\n\u4f8b\u5982 $x_i=(x_{i-1}^2+1)\\pmod n$\n\n\u7531\u4e8e\u5b83\u67d0\u9879\u7684\u503c\u4ec5\u7531\u524d\u4e00\u9879\u51b3\u5b9a\uff0c\u4e14\u6bcf\u4e00\u9879\u53ef\u80fd\u7684\u53d6\u503c\u662f\u6709\u9650\u7684\uff0c\u56e0\u6b64\u8be5\u6570\u5217\u4e00\u5b9a\u4f1a\u5728\u7ecf\u5386\u4e00\u5b9a\u6b21\u6570\u7684\u8fed\u4ee3\u540e\u9677\u5165\u5faa\u73af\n\n![rho](https://cdn.luogu.com.cn/upload/image_hosting/yaihaze5.png \"\u50cf\u4e0d\u50cf\u4e00\u4e2a rho\")\n\n\u66f4\u5177\u4f53\u7684\u6765\u8bf4\uff0c\u53ea\u8981\u8be5\u5e8f\u5217\u4e2d**\u51fa\u73b0\u4e00\u5bf9\u76f8\u540c\u7684\u6570**\uff0c\u5c31\u4f1a\u5728\u8fd9\u5bf9\u6570\u95f4\u4ea7\u751f\u73af\n\n\u8054\u60f3\u5230\u751f\u65e5\u6096\u8bba\uff0c\u82e5\u8fd9\u4e2a\u6570\u5217\u662f\u671f\u671b\u968f\u673a\u7684\uff0c\u5219\u5b83\u7684 \"\u73af\" \u53ca \"\u5c3e\" \u7684\u671f\u671b\u957f\u5ea6\u5c31\u662f $\\sqrt n$ \u7684\n\n\u4e3a\u4e86\u8bf4\u660e\u65b9\u4fbf\uff0c\u4e0b\u9762\u6211\u4eec\u5c31\u5148\u5047\u8bbe\u7531\u8be5\u9012\u63a8\u5f0f\u5bfc\u51fa\u7684\u5e8f\u5217\u90fd\u662f**\u8db3\u591f\u968f\u673a**\u7684\uff0c\u5e76\u4ee5\u6b64\u7ee7\u7eed\u8ba8\u8bba\u3002\n\n&nbsp;\n\n\u73b0\u5728\u6211\u4eec\u5047\u8bbe $n$ \u4e0d\u662f\u8d28\u6570\uff0c\u6216\u8005\u8bf4\u5b83\u81f3\u5c11\u6709\u4e00\u5bf9\u975e\u5e73\u51e1\u56e0\u5b50\uff08\u6307\u8be5\u56e0\u5b50\u4e0d\u4e3a $1$ \u6216 $n$\uff09\uff1b\u5219 $n$ \u53ef\u4ee5\u8868\u793a\u4e3a $n=p_1^{r_1}\\cdot p_2^{r_2}\\cdots p_m^{r_m}$\n\n\u8fd9\u91cc\u6211\u4eec\u968f\u610f\u53d6\u4e00\u4e2a $p_i$ \u5e76\u8bbe\u4e3a $p$\n\n\u518d\u8003\u8651\u4e00\u4e2a\u5e8f\u5217 $\\text{<}x'\\text{>}$\uff0c\u5176\u4e2d $x'_i=x_i\\pmod p$\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u7531\u4e8e\u6570\u5217 $\\text{<}x\\text{>}$ \u7684\u9012\u63a8\u5f0f\u4ec5\u6709\u52a0\u51cf\u4e58\u9664\u8fd0\u7b97\uff0c\u56e0\u6b64\u6570\u5217 $\\text{<}x'\\text{>}$ \u5176\u5b9e\u548c\u5b83\u6709\u7740\u540c\u6837\u7684\u9012\u63a8\u5f0f\uff1a\n\n${x'}_i=x_{i-1}\\pmod p$\n\n${x'}_i=((x_{i-1}^2+1)\\pmod n)\\pmod p$\n\n${x'}_i=(x_{i-1}^2+1)\\pmod p$\n\n${x'}_i=((x_{i-1}\\pmod p)^2+1)\\pmod p$\n\n${x'}_i=({x'}_{i-1}^2+1)\\pmod p$\n\n\n\u7531\u6b64\u53ef\u4ee5\u9884\u77e5\u5e8f\u5217 $\\text{<}x'\\text{>}$ \u4e5f\u4f1a\u4ea7\u751f \"\u73af\"\u3002\u800c\u6839\u636e\u751f\u65e5\u6096\u8bba\uff0c\u5e8f\u5217 $\\text{<}x'\\text{>}$ \u7684\u73af\u7684\u957f\u5ea6\u5c31\u662f\u671f\u671b $\\sqrt p$ \u7684\u3002\n\n![2rho](https://cdn.luogu.com.cn/upload/image_hosting/2ull97fr.png \"\u5e8f\u5217 <x'> \u5c31\u50cf\u662f <x> \u7684\u8f83\u5c0f\u7248\u672c\")\n\n\u6ce8\u610f\u5230\u5f53 ${x'}_i\\equiv {x'}_j\\pmod p$ \u65f6\uff0c\u4e00\u5b9a\u6709 $p | (|x_i-x_j|)$\uff1b\u6b64\u65f6\u82e5$x_i\\neq x_j$\uff0c\u901a\u8fc7\u8ba1\u7b97 $\\gcd(|x_i-x_j|, n)$\uff0c\u4e00\u5b9a\u5c31\u53ef\u4ee5\u5f97\u5230 $n$ \u7684\u56e0\u5b50 $p$\n\n\u82e5\u6211\u4eec\u6cbf\u7740 \"$\\rho$\" \u7684\u8def\u5f84\u904d\u5386\u6570\u5217\uff0c\u4e0d\u96be\u60f3\u5230\uff0c\u662f\u53ef\u4ee5\u5728\u671f\u671b\u8bb0\u5f55 $n^{\\frac 1 4}$ \u4e2a\u5143\u7d20\u540e\u5c31\u80fd\u627e\u51fa\u4e00\u5bf9 $x_i, x_j$\uff0c\u5e76\u4ee5\u6b64\u8ba1\u7b97\u51fa $n$ \u7684\u67d0\u4e2a\u975e\u5e73\u51e1\u56e0\u5b50\n\n## \u7b97\u6cd5\u5b9e\u73b0\n\n### \u968f\u673a\u6570\n\n\u9996\u5148\u6211\u4eec\u8981\u8003\u8651\u5c31\u662f\u5e8f\u5217 $\\text{<}x\\text{>}$ \u7684\u6570\u662f\u5426\u8db3\u591f\u968f\u673a\n\n\u8fd9\u91cc\u6211\u6ca1\u627e\u5230\u53ef\u884c\u7684\u8bc1\u660e\uff08qaq\uff09\uff1b\u4e0d\u8fc7\u6839\u636e\u7b97\u6cd5\u5b9e\u9645\u6548\u7387\u6765\u770b\uff0c\u8fd9\u79cd\u751f\u6210\u65b9\u5f0f\u662f\u8db3\u591f\u4f18\u79c0\u7684\n\n\u4e0d\u8fc7\u4e3a\u4e86\u4fdd\u8bc1\u6570\u5217\u5728\u66f4\u591a\u60c5\u51b5\u4e0b\u4f9d\u7136\u8db3\u591f\u968f\u673a\uff0c\u6211\u4eec\u4f7f\u7528\u66f4\u4e00\u822c\u7684\u516c\u5f0f $x_i=x_{i-1}^2+c$\uff0c\u5e76\u5728\u521d\u59cb\u65f6\u968f\u673a\u5e26\u5165\u4e00\u4e2a $x$ \u548c $c$ \u5e76\u8fdb\u884c\u8fed\u4ee3\n\n\u4e0d\u8fc7\u6ce8\u610f\u5f53 $c=0$ \u6216 $c=2$ \u7684\u60c5\u51b5\u5e94\u5f53\u907f\u514d\uff08\u6765\u81ea\u7b97\u6cd5\u5bfc\u8bba\uff0c\u4e66\u4e0a\u4e5f\u6ca1\u6709\u5177\u4f53\u89e3\u91ca\u539f\u56e0\uff09\n\n### \u521d\u59cb\u7684\u5b9e\u73b0\u65b9\u5f0f\n\n\u8bbe\u6700\u5927\u7684\u4e0d\u5728 \"\u73af\" \u4e0a\u7684\u5e8f\u5217\u7f16\u53f7 $s$\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5e8f\u53f7 $t, t>s$\uff0c\u4e00\u5b9a\u80fd\u627e\u5230\u4e00\u4e2a\u5e8f\u53f7 $t'$ \u4f7f\u5f97 $x_t\\equiv x_{t'}\\pmod p$\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u8bbe\u4e00\u4e2a\u5b9a\u70b9 $y$ \u548c\u4e00\u4e2a\u52a8\u70b9 $x$\uff1b$x$ \u6839\u636e\u5e8f\u5217\u7684\u8fed\u4ee3\u516c\u5f0f\u4e00\u6b65\u6b65\u8ba1\u7b97\uff0c\u671f\u671b\u4f1a\u5728 $n^{\\frac 1 4}$ \u6b65\u5185\u627e\u5230 $n$ \u7684\u4e00\u4e2a\u975e\u5e73\u51e1\u56e0\u5b50\n\n\u4f46\u6211\u4eec\u5f88\u96be\u786e\u5b9a $y$ \u662f\u5426\u5728\u5e8f\u5217\u7684 \"\u73af\" \u4e0a\u3002\u5177\u4f53\u5b9e\u73b0\u65f6\u6211\u4eec\u500d\u589e\u5730\u8bbe\u7f6e $y$ \u7684\u5e8f\u53f7\u5373\u53ef\n\n```cpp\n/*\u5176\u4e2d rand(l, r) \u4ee3\u8868\u53d6\u8fd9\u4e2a\u95ed\u533a\u95f4\u7684\u968f\u673a\u6570*/\nll pr(ll n){\n    ll x =rand(0, n-1), y =x;\n    ll c =rand(3, n-1), d =1;\n    for(int i =1, k =2; d == 1; ++i){\n        x =(x*x+c)%n;\n        d =gcd(abs(y-x), n);\n        if(i == k){\n            y =x;\n            k <<=1;\n        }\n    }\n    return d;\n}\n```\n\n### Floyd \u5224\u73af\n\n\u4e0a\u9762\u7684\u7b97\u6cd5\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u5df2\u7ecf\u8db3\u4ee5\u5e94\u4ed8\u4e86\n\n\u4f46\u6211\u4eec\u53d1\u73b0\uff0c\u5728\u6781\u5c11\u6570\u60c5\u51b5\u4e0b\uff0c\u8be5\u7b97\u6cd5\u751a\u81f3\u5728\u904d\u5386\u6574\u4e2a\u6a21 $n$ \u7684 \"$\\rho$\" \u6570\u5217\u540e\u4ecd\u7136\u65e0\u6cd5\u627e\u5230\u89e3\n\n\u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u8981\u5224\u73af\u5e76\u91cd\u65b0\u5c1d\u8bd5\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u53e6\u8bbe\u4e00\u4e2a\u70b9 $y$ \u548c $x$ \u5728\u540c\u4e00\u8d77\u70b9\u51fa\u53d1\uff0c\u4f46\u8be5\u70b9\u4ee5 $x$ \u4e24\u500d\u7684\u901f\u5ea6\u6309\u516c\u5f0f\u8fed\u4ee3\uff0c\u5f53 $x\\equiv y\\pmod n$ \u65f6\u6211\u4eec\u5c31\u627e\u5230\u4e86\u73af\u3002\u671f\u671b\u73af\u7684\u957f\u5ea6\u662f $\\sqrt n$ \u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\u8be5\u7b97\u6cd5\u80fd\u5728 $O(\\sqrt n)$ \u7684\u65f6\u95f4\u5185\u5224\u65ad\u51fa\u73af\n\n\u81f3\u4e8e\u7b97\u6cd5\u7684\u8bc1\u660e\uff0c\u8bbe\u8d77\u70b9\u8ddd\u79bb\u8fdb\u5165\u73af\u8fd8\u6709 $s$ \u6b65\uff0c\u73af\u957f $c$\uff0c\u70b9 $x$ \u8d70\u4e86 $k$ \u6b65\uff1b\u5219\u60f3\u8981\u4ee4 $x, y$ \u76f8\u9047\u5c31\u9700\u8981\u4f7f $k-s\\equiv 2k-s\\pmod c$ \u4e14 $k> s$\uff0c\u8fd9\u663e\u7136\u53ef\u4ee5\u505a\u5230\n\n\u540c\u65f6\u6ce8\u610f\u5728\u7b97\u6cd5\u7ed3\u675f\u65f6\uff0c\u70b9 $y$ \u4f1a\u81f3\u5c11\u904d\u5386\u73af\u4e00\u6b21\uff0c\u4f46 $x$ \u4e0d\u4e00\u5b9a\u4f1a\n\n### \u57fa\u4e8e Floyd \u7684\u5b9e\u73b0\n\n\u7531\u4e8e\u5e8f\u5217 $\\text{<}x'\\text{>}$ \u53ef\u4ee5\u770b\u505a\u662f $\\text{<}x\\text{>}$ \u7684\u8f83\u5c0f\u7248\u672c\uff0c\u6216\u8005\u8bf4\u8fd9\u4e24\u4e2a\u5e8f\u5217\u5b58\u5728\u4e00\u4e00\u5bf9\u5e94\u7684\u5173\u7cfb\uff0c\u6211\u4eec\u7684 Floyd \u5224\u73af\u5176\u5b9e\u5bf9\u5e8f\u5217 $\\text{<}x'\\text{>}$ **\u4e5f\u662f\u9002\u7528**\u7684\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u5f53\u6211\u4eec\u53d1\u73b0 Floyd \u7b97\u6cd5\u5185\u7684\u4e24\u52a8\u70b9\u6ee1\u8db3 $x\\equiv y\\pmod p$ \u65f6\uff08\u5c3d\u7ba1\u6211\u4eec\u53ef\u80fd\u4e0d\u4f1a\u68c0\u67e5\u8fd9\u4e2a\u5f0f\u5b50\uff09\uff0c$\\gcd(|x-y|, n)$ \u5c31\u4f1a\u7ed9\u51fa $n$ \u7684\u4e00\u4e2a\u975e\u5e73\u51e1\u56e0\u5b50\u3002\u800c Floyd \u7b97\u6cd5\u663e\u7136\u4f1a\u6bd4\u6211\u4eec\u4e0a\u9762\u7684\u500d\u589e\u6cd5\u8981\u5feb\u8bb8\u591a\n\n```cpp\nll pr(ll n){\n\t/*\u56e0\u4e3a\u521d\u59cb\u8df3\u4e24\u6b65\u7684\u539f\u56e0\uff0c\u8be5\u5199\u6cd5\u6ca1\u6cd5\u5206\u89e3 4*/\n\tif(n == 4) return 2;\n\tll x =rand(0, n-1), y =x;\n\tll c =rand(3, n-1);\n\tll d =1;\n\tx =(x*x+c)%n;\n\ty =(y*y+c)%n, y =(y*y+c)%n;\n\twhile(x != y){\n\t\tx =(x*x+c)%n;\n\t\ty =(y*y+c)%n, y =(y*y+c)%n;\n\t\td =gcd(abs(x-y), n);\n\t\tif(d != 1)\n\t\t\treturn d;\n\t}\n\treturn n;\n}\n```\n\n### \u521d\u59cb\u5b9e\u73b0\u7684\u5224\u73af\u6539\u8fdb\n\n\u5f53\u7136\uff0c\u5982\u679c\u52a0\u4e0a\u5224\u73af\u90e8\u5206\uff0c\u4e00\u5f00\u59cb\u7684\u521d\u59cb\u5b9e\u73b0\u4e5f\u662f\u53ef\u884c\u7684\n\n```cpp\nll pr(ll n){\n\t/*\u56e0\u4e3a\u521d\u59cb\u8df3\u4e24\u6b65\u7684\u539f\u56e0\uff0c\u8be5\u5199\u6cd5\u6ca1\u6cd5\u5206\u89e3 4*/\n\tif(n == 4) return 2;\n\tll x =rand(0, n-1), y =x, y2 =x;\n\tll c =rand(3, n-1);\n\tx =(x*x+c)%n;\n\ty2 =(y2*y2+c)%n, y2 =(y2*y2+c)%n;\n\tfor(int i =1, k =2; x != y2; ++i){\n\t\tx =(x*x+c)%n;\n\t\ty2 =(y2*y2+c)%n, y2 =(y2*y2+c)%n;\n\t\tll d =gcd(abs(x, -y), n);\n\t\tif(d != 1)\n\t\t\treturn d;\n\t\tif(i == k){\n\t\t\ty =x;\n\t\t\tk <<=1;\n\t\t}\n\t}\n\treturn n;\n}\n```\n\n### \u500d\u589e\u79ef\u7d2f gcd\n\n\u6211\u4eec\u53d1\u73b0\u5728\u6a21 $n$ \u610f\u4e49\u4e0b\u5c06\u6bcf\u6b21\u7684 `abs(x-y)` \u76f8\u4e58\uff0c\u82e5\u5bf9\u4e8e\u67d0\u4e00\u4e2a $|x_i-y_i|$ \u6709 $d=\\gcd(|x_i-y_i|, n)$ \u4e14 $d$ \u4e3a $n$ \u7684\u975e\u5e73\u51e1\u56e0\u5b50\uff1b\u5219\u5b83\u4eec\u7684\u79ef\uff0c\u8fd9\u91cc\u8bbe\u4e3a $cnt$\uff0c\u4e5f\u4e00\u5b9a\u6709 $d'=\\gcd(|x_i-y_i|, n)$ \u4e14 $d'$ \u4e3a $n$ \u7684\u975e\u5e73\u51e1\u56e0\u5b50\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u79ef\u7d2f\u4e00\u5b9a\u7684\u6837\u672c\u518d\u505a $\\gcd$\uff0c\u8fd9\u6837\u80fd\u8282\u7701\u4e00\u4e9b\u65f6\u95f4\uff0c\u4e14\u4e0d\u4f1a\u5f71\u54cd\u6bcf\u4e2a\u6837\u672c\u7684\u7b54\u6848\n\n\u8fd9\u4e2a\u9608\u503c\u53ef\u4ee5\u8bbe\u4e3a\u500d\u589e\u7684\uff0c\u4e14\u53ef\u4ee5\u8bbe\u4e00\u4e2a\u4e0a\u9650\u3002\u4ee5\u672c\u9898\u6570\u636e\u6765\u8bf4\u8bbe\u4e3a $128$ \u4f1a\u6709\u4e0d\u9519\u7684\u6548\u679c\n\n\u8fd9\u91cc\u4ec5\u7ed9\u51fa\u4ee5 \"\u57fa\u4e8e Floyd \u7684\u5b9e\u73b0\" \u4e3a\u6a21\u677f\u6539\u8fdb\u7684\u4ee3\u7801\n\n```cpp\nll pr(ll n){\n\tif(n == 4) return 2;\n\tll x =rand(0, n-1), y =x;\n\tll c =rand(3, n-1);\n\tll d =1;\n\tx =(x*x+c)%n;\n\ty =(y*y+c)%n, y =(y*y+c)%n;\n\tfor(int lim =1; x != y; lim =min(128, lim<<1)){\n\t\tll cnt =1;\n\t\tfor(int i =0; i < lim; ++i){\n\t\t\tll tmp =cnt*abs(x-y)%n;\n\t\t\t/*\u8fd9\u65f6\u8981\u4e48\u539f\u5148\u7684 cnt \u4ee5\u53ca\u6b64\u65f6\u7684 |x-y| \u542b n \u8d28\u56e0\u6570 \uff0c\u8981\u4e48 x-y == 0*/\n\t\t\t/*\u4e3a\u4e86\u907f\u514d\u4e4b\u524d\u7684\u6837\u672c\u4e22\u5931\uff0c\u76f4\u63a5\u63a8\u51fa\u5faa\u73af\u5e76\u5bf9\u4e4b\u524d\u79ef\u7d2f\u7684\u6837\u672c\u505a\u4e00\u6b21\u8ba1\u7b97*/\n\t\t\tif(!tmp)\n\t\t\t\tbreak;\n\t\t\tcnt =tmp;\n\t\t\tx =(x*x+c)%n;\n\t\t\ty =(y*y+c)%n, y =(y*y+c)%n;\n\t\t}\n\t\td =gcd(cnt, n);\n\t\tif(d != 1)\n\t\t\treturn d;\n\t}\n\treturn n;\n}\n```\n\n## CODE\n\n\u4ee3\u7801\u91cc\u6709\u8be6\u5c3d\u7684\u6ce8\u8bd1\n\n\u5176\u4e2d `pr()` \u51fd\u6570\u4e2d\uff0c\u6211\u5c06 \"\u521d\u59cb\u5b9e\u73b0\u7684\u5224\u73af\u6539\u8fdb\" \u6ce8\u8bd1\u8d77\u6765\u4e86\uff0c\u5e76\u6807\u4e3a \"\u7b97\u6cd52\"\n\n\u540c\u65f6\u4ee3\u7801\u4e2d\u4f7f\u7528\u7684\u968f\u673a\u6570\u751f\u6210\u51fd\u6570\u662f `std::mt19937`\uff1b\u4e0d\u8fc7\u5728\u672c\u9898\u7684\u6570\u636e\u8868\u73b0\u4e2d\uff0c\u5176\u548c\u4e00\u822c\u7684 `rand()` \u51fd\u6570\u5dee\u522b\u4e0d\u5927\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <ctime>\n#include <cmath>\n#include <random>\n#define ll long long\n#define ull unsigned long long\n#define lll __int128\n//#pragma GCC target(\"avx\")\n//#pragma GCC optimize(\"Ofast\")\n//#pragma GCC optimize(2)\n\n/*------------------------------Base------------------------------*/\n\ninline ll mul(ll a, ll b, const ll M){\n\tll d =a*(long double)b/M;\n\tll ret =a*b-d*M;\n\tif(ret < 0)\n\t\tret +=M;\n\tif(ret >= M)\n\t\tret -=M;\n\treturn ret;\n}\n\ninline ll plus2(ll a, ll b, const ll M){\n\tll d =(a+(long double)b)/M+0.5;\n\tll ret =a+b-d*M;\n\tif(ret < 0)\n\t\tret +=M;\n\treturn ret;\n}\n\ninline ll plus(const lll a, const lll b, const lll M){\n\tlll c =a+b;\n\tif(c >= M)\n\t\treturn c-M;\n\telse\n\t\treturn c;\n}\n\nll Pow(ll x, ll k, const ll M){\n\tll ret =1;\n\tfor(; k; x =mul(x, x, M), k >>=1) if(k&1) ret =mul(ret, x, M);\n\treturn ret;\n}\n\nll gcd(ll a, ll b){\n\twhile(b) b ^=a ^=b ^=a %=b;\n\treturn a;\n}\n\ninline ll Abs(ll x){ return (x < 0) ? -x : x; }\n\n/*------------------------------Rand------------------------------*/\n\nstatic std::mt19937 engine;\n\n/*------------------------------Miller Robin------------------------------*/\n\nbool mr(ll p){\n\tif(p < 2) return 0;\n\tif(p == 2) return 1;\n\tif(p == 3) return 1;\n\tstd::uniform_int_distribution<ll> Rand(2, p-2);\n\tll d =p-1, r =0;\n\twhile(!(d&1)) ++r, d >>=1;\n\tfor(ll k =0; k < 10; ++k){\n\t\t/*[2, p-2]*/\n\t\tll a =Rand(engine);\n\t\tll x =Pow(a, d, p);\n\t\tif(x == 1 || x == p-1) continue;\n\t\tfor(int i =0; i < r-1; ++i){\n\t\t\tx =mul(x, x, p);\n\t\t\tif(x == p-1) break;\n\t\t}\n\t\tif(x != p-1) return 0;\n\t}\n\treturn 1;\n}\n\n/*------------------------------Pollard Rho------------------------------*/\n\nusing std::min;\n\n/*\u8c8c\u4f3c -c \u5728\u672c\u9898\u7684\u6570\u636e\u7684\u6548\u7387\u9ad8\u4e9b (0.2s)\uff0c\u539f\u56e0\u5c1a\u4e0d\u786e\u5b9a*/\ninline ll getnext(ll x, ll c, ll n){ return plus(mul(x, x, n), -c, n); }\n\nll pr(ll n){\n\t/*\u56e0\u4e3a\u521d\u59cb\u8df3\u4e24\u6b65\u7684\u539f\u56e0\uff0c\u4e0b\u9762\u5199\u6cd5\u5747\u6ca1\u6cd5\u5206\u89e3 4 (\u5373\u4f7f\u4e0b\u9762\u7684 Rand \u8303\u56f4\u8bbe\u7f6e\u4e3a [0, n-1] )*/\n\tif(n == 4) return 2;\n\tstd::uniform_int_distribution<ll> Rand(3, n-1);\n\tll x =Rand(engine), y =x;\n\tll c =Rand(engine);\n\tll d =1;\n\t\n\t/*\u4ee5\u4e0b\u4e24\u79cd\u5199\u6cd5\u7684\u671f\u671b\u590d\u6742\u5ea6\u90fd\u662f\u6b63\u786e\u7684\uff0c\u4f46\u5199\u6cd5 1 \u7684\u8868\u73b0\u66f4\u597d*/\n\t\n\t/*----------\u5199\u6cd5 1----------*/\n\t\n\tx =getnext(x, c, n);\n\ty =getnext(y, c, n), y =getnext(y, c, n);\n\tfor(int lim =1; x != y; lim =min(128, lim<<1)){/*\u63d0\u5347\u7ea6 0.1s */\n//\tfor(int lim =1; x != y; lim =lim<<1){\n\t\tll cnt =1;\n\t\tfor(int i =0; i < lim; ++i){\n\t\t\tll tmp =mul(cnt, Abs(plus(x, -y, n)), n);\n\t\t\tif(!tmp)/*\u63d0\u5347\u7ea6 0.6s\uff1b\u8fd9\u65f6\u8981\u4e48\u539f\u5148\u7684 cnt \u542b n \u8d28\u56e0\u6570 (\u8fd9\u65f6 x-y \u4e5f\u542b )\uff0c\u8981\u4e48 x-y == 0*/\n\t\t\t\tbreak;\n\t\t\tcnt =tmp;\n\t\t\tx =getnext(x, c, n);\n\t\t\ty =getnext(y, c, n), y =getnext(y, c, n);\n\t\t}\n\t\td =gcd(cnt, n);\n\t\tif(d != 1)\n\t\t\treturn d;\n\t}\n\treturn n;\n\t\n\t/*----------\u5199\u6cd5 2----------*/\n\t/*\u8fd9\u91cc\u8fd8\u52a0\u4e86\u500d\u589e gcd \u4f18\u5316\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u8003*/\n\t\n\t/*\n\tx =getnext(x, c, n);\n\ty =getnext(y, c, n), y =getnext(y, c, n);\n\tll x2 =x, cnt =1;\n\tfor(int i =1, i2 =1, k =2, lim =1; x != y; ++i, ++i2){\n\t\tx =getnext(x, c, n);\n\t\ty =getnext(y, c, n), y =getnext(y, c, n);\n\t//\td =gcd(Abs(plus(x, -x2, n)), n);\n\t\tll tmp =mul(cnt, Abs(plus(x, -x2, n)), n);\n\t\tif(tmp)\n\t\t\tcnt =tmp;\n\t\tif(i2 == lim || !tmp || x == y){\n\t\t\ti2 =1;\n\t\t\tlim =min(128, lim<<1);\n\t\t\td =gcd(cnt, n);\n\t\t\tif(d != 1)\n\t\t\t\treturn d;\n\t\t\tcnt =1;\n\t\t}\n\t//\tif(d != 1)\n\t//\t\treturn d;\n\t\tif(i == k){\n\t\t\tx2 =x;\n\t\t\tk <<=1;\n\t\t}\n\t}\n\treturn n;*/\n}\n\nll mxp;\n\ninline void push(ll p){\n\tif(p > mxp)\n\t\tmxp =p;\n}\n\n/*\u51fd\u6570\u8981\u6c42\u4fdd\u8bc1 n \u53ef\u5206\u89e3*/\nvoid dfs(ll n){\n\tsrand(time(0));\n\tll d =pr(n), d2;\n\twhile(d == n)\n\t\td =pr(n);\n\td2 =n/d;\n\tif(mr(d))\n\t\tpush(d);\n\telse\n\t\tdfs(d);\n\tif(mr(d2))\n\t\tpush(d2);\n\telse\n\t\tdfs(d2);\n}\n\nll getfact(ll n){\n\tmxp =0;\n\tif(mr(n))\n\t\treturn n;\n\telse\n\t\tdfs(n);\n\treturn mxp;\n}\n\n/*------------------------------Main------------------------------*/\n\ninline ll read(){\n\tll x =0; char c =getchar();\n\twhile(c < '0' || c > '9') c =getchar();\n\twhile(c >= '0' && c <= '9') x = (x<<3) + (x<<1) + (48^c), c =getchar();\n\treturn x;\n}\n\nint main(){\n\tsrand(time(0));\n\tfor(int t =0, T =read(); t < T; ++t){\n\t\tll n =read();\n\t\tll fact =getfact(n);\n\t\tif(fact == n)\n\t\t\tputs(\"Prime\");\n\t\telse\n\t\t\tprintf(\"%lld\\n\", fact);\n\t}\n}\n```",
        "postTime": 1595506057,
        "uid": 105254,
        "name": "Piwry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4718 \u3010\u3010\u6a21\u677f\u3011Pollard-Rho\u7b97\u6cd5\u3011"
    },
    {
        "content": "**\u7d20\u6027\u6d4b\u8bd5**\n- \u6d4b\u8bd5\u4e00\u4e2a\u6570\u662f\u5426\u662f\u8d28\u6570\u3002\n- \u5e94\u8be5\u90fd\u5b66\u8fc7 $O(\\sqrt n)$ \u7684\u8bd5\u9664\u6cd5\uff0c\u57fa\u4e8e $\\forall  ab=c(a,b,c\\in \\mathbf{Z^+}),\\min(a,b)\\leq\\sqrt c$\n- \u7c73\u52d2\u00b7\u62c9\u5bbe\u7b97\u6cd5\uff0c$O(\\log_2n)$ \u7684\u968f\u673a\u7b97\u6cd5\u3002\uff08\u6ca1\u9519\u8fd9\u5c31\u662f\u6b63\u786e\u7387\u63a5\u8fd1 100% \u7684\u968f\u673a\u7b97\u6cd5\uff09\n- \u5370\u5ea6\u5c0f\u54e5\u6709\u4e2a\u975e\u968f\u673a\u7b97\u6cd5\u5524\u4f5c AKS\uff0c\u4e0d\u8fc7\u5b9e\u7528\u6027\u7a0d\u4f4e\u4e0d\u8bb2\uff0c\u7c73\u52d2\u00b7\u62c9\u5bbe\u5df2\u7ecf\u8db3\u591f\u4f18\u79c0~~\u540c\u65f6\u8db3\u591f\u7b80\u5355~~\u3002\n- \u7c73\u52d2\u00b7\u62c9\u5bbe\u7b97\u6cd5\u57fa\u4e8e\u8d39\u9a6c\u5c0f\u5b9a\u7406\uff0c\u5373\uff1a\n$$\\forall p\\nmid a,\\quad a^{p-1}\\equiv1\\pmod p$$\n- \u4e8e\u662f\u4fbf\u4ea7\u751f\u4e86\u4e00\u79cd\u6734\u7d20\u7684\u60f3\u6cd5\uff1a\u5bf9\u4e8e\u5f85\u6d4b\u8bd5\u7684\u6570 n \uff0c\u968f\u673a\u4e00\u4e2a $0<a<n$ \u8ba1\u7b97 $a^{n-1}\\bmod n$ \u82e5\u7ed3\u679c\u4e0d\u4e3a 1 \u5373\u53ef\u6392\u9664 n \u662f\u8d28\u6570\u3002 \n- \u4f46\u8fd9\u663e\u7136\u662f\u5fc5\u8981\u4e0d\u5145\u5206\u6761\u4ef6\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u5b58\u5728\u4e00\u4e9b\u5408\u6570 n\uff0c\u6ee1\u8db3\uff1a\n$$\\forall a\\bot n,\\quad a^{n-1}\\equiv1\\pmod n$$\n- \u8fd9\u7c7b\u6570\u79f0\u4e3a Carmichael \u6570\uff0c\u5982 561=3\u00d711\u00d717 \uff0c\u8fd9\u7c7b\u505a\u6cd5\u5f88\u96be\u8bd5\u51fa\u6765\u3002\n- \u6240\u4ee5\u8fd8\u9700\u8981~~\u5e73\u65b9\u5dee\u516c\u5f0f~~\u5947\u7d20\u6570\u5224\u5b9a\uff0c\u9664\u4e86 2 \u4ee5\u5916\u7684\u8d28\u6570\uff0c\u90fd\u662f\u5947\u6570\uff01\u800c\u5947\u6570\u51cf\u4e00\uff0c\u5c31\u662f\u5076\u6570\u554a\uff01~~\u4e24\u53e5\u5927\u5e9f\u8bdd\u3002~~\n- \u6362\u53e5\u8bdd\u8bf4\uff0c\u82e5 $a^{n-1}\\equiv1\\pmod n$ \u5219 $(a^{\\frac{n-1} 2}+1)(a^{\\frac{n-1} 2}-1)\\equiv0\\pmod n$\uff0c\u4e5f\u5c31\u662f $a^{\\frac{n-1} 2}\\equiv-1\\pmod n$\uff0c$a^{\\frac{n-1} 2}\\equiv1\\pmod n$ \uff0c\u5982\u679c $\\frac {n-1} 2$ \u662f\u5076\u6570\uff0c\u8fd8\u53ef\u4ee5\u9a8c\u8bc1 $\\frac {n-1} 4$ \u3002\n- \u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u5b9e\u9645\u4e0a\u7528\u6765\u5224\u5b9a\u7684\u5b9a\u7406\u662f\uff1a\u4ee4 $n-1=2^x\\cdot y$ \uff08y \u662f\u5947\u6570\uff09\uff0c\u82e5 $n\\in\\mathbf{P}$ \u5219 \uff0c\u5bf9\u4e8e $a^y\\equiv1\\pmod n$ \u6216 $\\exists k\\in[0,x],\\quad a^{2^k\\cdot y}\\equiv-1\\pmod n$\uff08\u5176\u5b9e\u90a3\u4e2a\u533a\u95f4\u662f\u5de6\u95ed\u53f3\u5f00\u7684\uff0c\u6211\u53ea\u662f\u8ba8\u538c\u4e0b\u5212\u7ebf\uff0c\u800c\u4e14\u52a0\u4e0a\u4e5f\u4e0d\u5f71\u54cd\uff09\n- \u7528\u539f\u6839~~\u6211\u4eec\u4e0d\u4f1a\u6d89\u53ca~~\u7684\u539f\u7406\u53ef\u4ee5\u8bc1\u660e\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a $a\\bot n$ \u628a $n$ \u662f\u5408\u6570\u7684\u60c5\u51b5\u5224\u6389\u3002\n- \u7528~~\u4ecd\u7136\u4e0d\u4f1a\u6d89\u53ca\u7684\u77e5\u8bc6~~\u53ef\u4ee5\u8bc1\u660e\u5bf9\u4e8e\u5947\u5408\u6570 $n$ \u975e\u8bc1\u636e\u7684\u6570\u76ee\u81f3\u591a\u662f $\\dfrac{n-1}4$ \u3002\n- \u6839\u636e\u7ef4\u57fa\u767e\u79d1\u7684\u8bf4\u6cd5\uff0c\u7528\u4e0d\u8d85\u8fc7 37 \u7684\u8d28\u6570\u5373\u53ef\u5224\u5b9a $2^{64}$ \u6216 $18446744073709551616$ \u8303\u56f4\u7684 n \u3002\n- [\u4ee3\u7801\u5b9e\u73b0](https://www.luogu.com.cn/paste/sw8ndzqz)\u3002\n- \u5982\u679c\u4e0d\u662f\u679a\u4e3e\u518d\u5feb\u901f\u5e42\u662f\u53ef\u4ee5\u505a\u5230 $O(\\log_2n)$ \u800c\u975e $O(\\log_2^2n)$ \u7684\u3002\n- \u6ce8\u610f $\\text{OI wiki}$ \u4e0a\u7ed9\u51fa\u7684\u590d\u6742\u5ea6\u662f\u8003\u8651\u4e86\u5de8\u5927\u6574\u6570\u65e0\u6cd5\u8fdb\u884c $O(1)$ \u52a0\u51cf\u4e58\u9664\u7684\u60c5\u51b5\u3002\n\n**\u8d28\u56e0\u6570\u5206\u89e3**\n- \u8bd5\u9664\u6cd5\u4ecd\u7136\u662f $O(\\sqrt n)$ \u590d\u6742\u5ea6\u3002\n- Pollard-rho \u53ef\u4ee5\u505a\u5230\u7406\u8bba $O(\\sqrt[4]n\\log_2n)$ \u7684\u590d\u6742\u5ea6\uff0c\u4e14\u5728\u5b9e\u9645\u8fd0\u884c\u4e2d\u8dd1\u5f97\u98de\u5feb\u3002\n- \u4e3b\u8981\u601d\u60f3\u662f\u5982\u4f55\u5feb\u901f\u7528\u968f\u673a\u6570\u8bd5\u51fa\u67d0\u4e2a\u6570\u7684\u56e0\u5b50\u3002\n- \u751f\u65e5\u653b\u51fb\u6096\u8bba\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u7406\u60f3\u7684\u53d6\u503c\u4e3a $[1,n]$ \u7684\u968f\u673a\u6570\u751f\u6210\u5668\uff0c\u751f\u6210 $\\sqrt {\\dfrac{\\pi n}2}$ \u4e2a\u6570\u671f\u671b\u5f97\u5230\u4e24\u4e2a\u6570\u76f8\u540c\u3002\n- \u5982\u679c\u4e00\u4e2a\u6570 $n$ \u4e0d\u662f\u8d28\u6570\uff0c\u90a3\u4e48\u5b83\u7684\u6700\u5c0f\u8d28\u56e0\u5b50 $p_x$ \u6ee1\u8db3 $p\\leq\\sqrt n$\n- \u5982\u679c\u6211\u4eec\u968f\u673a\u751f\u6210 $\\sqrt[4]n$ \u4e2a\u6570\uff0c\u90a3\u4e48\u671f\u671b\u5b58\u5728\u4e24\u4e2a\u6570 $a,b$ \u4f7f\u5f97 $a\\equiv b\\pmod {p_x}$\u3002\u90a3\u4e48 $|a-b|$ \u5c31\u662f p \u7684\u500d\u6570\uff0c\u53ef\u4ee5\u901a\u8fc7\u6c42 $\\gcd(|a-b|,n)$ \u5f97\u5230\u4e00\u4e2a\u56e0\u5b50\u3002\n- \u4f46\u6211\u4eec\u53d1\u73b0\u8fd9\u6837\u505a\u590d\u6742\u5ea6\u53c8\u4e58\u4e86\u56de\u53bb\uff0c\u7531\u4e8e\u8fd8\u6709 gcd \u7684\u8fd0\u7b97\uff0c\u590d\u6742\u5ea6\u76f4\u63a5\u53d8\u6210 $O(\\sqrt n\\log_2n)$ \u3002\n- Pollard \u6784\u9020\u4e86\u8fd9\u6837\u4e00\u7ec4\u6570\u5217 $\\lbrace a_i\\rbrace$ \u6ee1\u8db3 $a_0=x$ \u4e14 $a_{i+1}=(a_i^2+c)\\bmod n$ \u3002\n- \u8fd9\u4e2a\u6570\u5217\u6709\u4e00\u4e2a\u4e0d\u5f97\u4e86\u7684\u6027\u8d28\uff0c\u4efb\u53d6\u6570\u5217\u4e2d\u7684\u4e24\u4e2a\u6570 $a_i,a_j$ \uff0c\u82e5 $a_i-a_j\\equiv0\\pmod {p_x}$\uff0c~~\u6839\u636e\u5e73\u65b9\u5dee\u516c\u5f0f~~:\n$$a_{i+1}-a_{j+1}=(a_i^2+c)-(a_j^2+c)=a_i^2-a_j^2$$\n$$=(a_i+a_j)(a_i-a_j)\\equiv0\\pmod {p_x}$$\n- \u6240\u4ee5\u6211\u4eec\u6700\u597d\u6bcf\u6b21\u68c0\u67e5\u4e0d\u540c\u7684\u8ddd\u79bb\u3002\n- \u8fd9\u6837\u7684\u6570\u636e\u968f\u673a\u6027\u5f53\u7136\u6709\u4fdd\u8bc1\u3002\n- \u7ed9\u5f20 Excel \u81ea\u5236\u6563\u70b9\u56fe\u770b\u4e00\u4e0b\u3002($a_0=3222,a_{i+1}=(a_i^2+24)\\bmod9409$\uff0c\u7ed9\u51fa\u6570\u5217\u7684\u524d 1000 \u9879)\n![\u4f60\u80fd\u770b\u51fa\u8fd9\u5f20\u56fe\u662f\u5faa\u73af\u7684\u5417](https://cdn.luogu.com.cn/upload/image_hosting/37hgicue.png)\n- \u5927\u6982\u4e00\u770b\uff0c\u7684\u786e\u662f\u5206\u5e03\u5730\u6bd4\u8f83\u5747\u5300\uff0c\u4e0d\u8fc7\u4ed4\u7ec6\u4e00\u770b\u4f60\u5c31\u4f1a\u53d1\u73b0\uff1a\u6570\u5217\u4e4b\u95f4\u597d\u50cf\u6709\u5faa\u73af\uff1f\n- \u6ca1\u9519\uff0c\u663e\u7136\u8fd9\u79cd\u4f2a\u968f\u673a\u6570\u4e00\u65e6\u51fa\u73b0\u76f8\u540c\u7684\u5c31\u4f1a\u5faa\u73af\uff0c\u800c\u7531\u4e8e\u6570\u636e\u8303\u56f4\u56fa\u5b9a\uff0c\u5f88\u5bb9\u6613\u8fdb\u5165\u5faa\u73af\uff0c\u5f62\u6210\u6df7\u5faa\u73af\uff08\u5373rho\u5f62\u7ed3\u6784\uff09\uff08\u6211\u4e4b\u524d\u7684\u6570\u636e\u7ecf\u8fc7\u7279\u5236\uff0c\u4f7f\u5f97\u73af\u957f\u8f83\u957f\uff0c\u5b9e\u9645\u73af\u957f\u8fd8\u8981\u66f4\u77ed\uff09\uff08\u5982\u56fe $a_0=121,a_{i+1}=(a_i^2+11)\\bmod 1014$\uff09\uff0c\u5982\u679c\u8fdb\u5165\u5faa\u73af\u8fd8\u4e00\u76f4\u4e0d\u505c\u5730\u68c0\u67e5\u5c31\u592a\u50bb\u4e86\u3002\n![$\\rho$](https://cdn.luogu.com.cn/upload/image_hosting/ol7wlz84.png)\n- \u7ed9\u51fa\u4e00\u79cd\u540d\u53eb floyd \uff08\u6ca1\u9519\u5c31\u662f\u5f17\u6d1b\u4f0a\u5fb7\uff09\u7684\u5224\u73af\u65b9\u6cd5\u3002\n- \u7b2c $k$ \u6b21\u64cd\u4f5c\u8ba9\u4e00\u4e2a\u6570\u4e3a $a_k$ \uff0c\u53e6\u4e00\u4e2a\u6570\u4e3a $a_{2k}$\uff08\u8fd9\u5f88\u5bb9\u6613\u505a\u5230\uff0c\u8fed\u4ee3\u4e24\u6b21\u5c31\u597d\u4e86\uff09\uff0c\u5982\u679c $a_k=a_{2k}$ \u90a3\u4e48\u663e\u7136\u5df2\u7ecf\u8fdb\u5165\u73af\u4e2d\uff0c\u76f4\u63a5\u8df3\u51fa\u5373\u53ef\u3002\n- \u663e\u7136\u8fdb\u5165\u73af\u4e2d\u540e $k$ \u4f1a\u6162\u6162\u589e\u52a0\u5230\u67d0\u4e2a\u73af\u957f\u7684\u500d\u6570\uff0c\u7ec8\u6b62\u53ef\u884c\u3002\n- \u800c\u4e14\u8fd9\u6837\u6bcf\u6b21\u53ea\u8981\u68c0\u67e5 $\\gcd(|a_{2k}-a_k|,n)$ \u5c31\u80fd\u591f\u4fdd\u8bc1\u4e0d\u540c\u7684\u8ddd\u79bb\uff0c\u53ef\u8c13\u4e00\u4e3e\u4e24\u5f97\u3002\uff08\u53e6\u5916 $a_{2k}=a_k$ \u65f6\uff0c\u5373\u4f7f\u6574\u9664\uff09\n- \u4e0d\u8fc7\uff0c\u4f60\u6709\u6ca1\u6709\u53d1\u73b0\u4e00\u4e9b\u95ee\u9898\uff1f\n- **\u8fd9\u5176\u5b9e\u5e76\u6ca1\u6709\u505a\u5230\u68c0\u67e5\u5168\u90e8\u7684\u6570\u5bf9**\uff0c\u4f60\u53ef\u4ee5\u6682\u65f6\u7406\u89e3\u6210\uff0c\u7531\u4e8e\u4ee5\u4e0a\u7684\u6027\u8d28\uff0c\u5176\u5b9e\u6211\u4eec\u5df2\u7ecf\u68c0\u67e5\u4e86\u5927\u90e8\u5206\u7684\u60c5\u51b5\u3002~~\u6bd5\u7adf\u6211\u4eec\u7edd\u5bf9\u4e0d\u80fd\u8bb2\u8d85\u8fc7\u9ad8\u4e2d\u7684\u77e5\u8bc6~~\u3002\n- \u521a\u624d\u90a3\u4e2a\u95ee\u9898\u4ee4\u6211\u4eec\u60f3\u5230\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u5982\u679c\u73af\u957f\u4e3a1\uff0c\u90a3\u4e48\u4e00\u4e0b\u5b50\u6162\u7684\u8df3\u5230 $a_1$\uff0c\u5feb\u7684\u8df3\u5230 $a_2$\uff0c\u4e0b\u4e00\u6b65\u76f4\u63a5\u7ed3\u675f\u7136\u540e\u65e0\u9650\u5faa\u73af\uff0c\u6240\u4ee5\u6b63\u786e\u7684\u505a\u6cd5\u662f\u5728\u7b2c $k$ \u6b65\u8df3\u5230 $a_{k-1}$ \u548c $a_{2k-1}$\u3002\n- \u5982\u679c\u6211\u4eec\u7ed9\u7684\u4f2a\u968f\u673a\u6570\u968f\u673a\u6027\u591f\u9ad8\uff0c\u4e14\u6211\u4eec\u7684\u68c0\u6d4b\u65b9\u6cd5\u4e8b\u5b9e\u4e0a\u63a5\u8fd1\u4e8e\u4e24\u4e24\u6c42\u5dee\uff0c\u5219\u671f\u671b\u5728 $O(\\sqrt[4] p\\log_2n)$ \u7684\u590d\u6742\u5ea6\u5185\u7ed9\u51fa $n$ \u7684\u6700\u5c0f\u8d28\u56e0\u5b50 $p$ \u3002\n- \u5f88\u9057\u61be\uff0c\u8fd9\u91cc\u4e0d\u80fd\u7ed9\u51fa\u590d\u6742\u5ea6\u7684\u4e25\u683c\u8bc1\u660e\uff0c\u4f46\u4e8b\u5b9e\u4e0a\u65f6\u95f4\u590d\u6742\u5ea6\u5e76\u6ca1\u6709\u56e0\u4e3a\u591a\u6b21\u5bfb\u627e\u56e0\u5b50\u800c\u6539\u53d8\uff0c\u4ecd\u7136\u662f $O(\\sqrt[4]n\\log_2n)$\uff0c\u7ed9\u51fa\u4e00\u4e2a\u8868\u683c\u770b\u4e00\u4e0b\u8fd9\u4e2a\u7b97\u6cd5\u5728\u4e0d\u540c\u6570\u5b57\u4e0b\u7684\u8fd0\u7b97\u6b21\u6570~~\u5f53\u7136\u5728\u6211\u7684\u7a0b\u5e8f\u4e0b~~\u3002\n\n| \u6570\u5b57 | \u8d28\u56e0\u6570\u5206\u89e3\u5f0f | \u6700\u5927\u8fd0\u7b97\u6b21\u6570 | \u6700\u5c0f\u8fd0\u7b97\u6b21\u6570 | \u5e73\u5747\u8fd0\u7b97\u6b21\u6570 |\n| :----------: | :----------: | :----------: | :----------: | :----------: |\n| $9223372036854775808$ | $2^{63}$ | $3611$ |$2158$|$2900.72$\n| $9223372036854775783$ | \u662f\u8d28\u6570 | $610$ |$610$ |$610$ |\n| $9223371994482243049$ | $3037000493^2$ | $6434444$ |$245074$|$2301568.32$\n| $9223253290108583207$ | $2097143^3$ | $239219$ |$28609$|$111099.06$\n| $2147483648$ | $2^{31}$ | $1246$ |$843$|$1004.33$\n| $2147483647$ | \u662f\u8d28\u6570 | $300$ |$300$|$300$\n| $2147117569$ | $46337^2$ | $14255$ |$487$|$5971.98$\n| $2141700569$ | $1289^3$ | $3655$ |$522$|$1890.79$\n\n- [\u4ee3\u7801\u5b9e\u73b0](https://www.luogu.com.cn/paste/8gnuzk91)\u3002\n- \u4e0a\u4f8b\u9898\uff01\n- [\u3010\u6a21\u677f\u3011Pollard-Rho\u7b97\u6cd5](https://www.luogu.com.cn/problem/P4718)\n- \u8fd9\u9053\u9898\u9760\u4e4b\u524d\u90a3\u4e2a\u6a21\u677f\u4f1a TLE \u4e00\u4e2a\u70b9\u3002\n- \u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u4e00\u4e2a\u7b80\u5355\u7684\u4f18\u5316\uff0c\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u628a\u4e00\u6bb5\u6570\u4e58\u8d77\u6765 $\\bmod n$ \u6765\u51cf\u5c11\u5e38\u6570\u3002\n- \u4f46\u8fd9\u6837\u53ef\u80fd\u4f1a\u5bfc\u81f4 floyd \u8fc7\u665a\u9000\u51fa\uff0c\u800c\u4e14\u4e58\u51fa $n$ (\u4e00\u70b9\u7528\u4e5f\u6ca1\u6709\uff09\u7684\u6982\u7387\u4e5f\u4f1a\u589e\u52a0\u3002\n- \u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u4e00\u4e2a\u6298\u4e2d\u7684\u65b9\u6cd5\uff1a\u6bcf\u9694\u7ea6 $\\log(n)$ \u6b21\u8fdb\u884c\u4e00\u6b21 gcd\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u6d88\u6389 gcd \u7684\u590d\u6742\u5ea6\uff0c\u7406\u8bba\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\sqrt[4]n)$\u3002\n- AC \u5730\u592a\u8f7b\u677e\u4e86\uff1f\n- \u518d\u6b21\u7ed9\u51fa\u8fd9\u4e2a\u7b97\u6cd5\u590d\u6742\u5ea6\u7684\u8868\u3002\n\n| \u6570\u5b57 | \u8d28\u56e0\u6570\u5206\u89e3\u5f0f | \u6700\u5927\u8fd0\u7b97\u6b21\u6570 | \u6700\u5c0f\u8fd0\u7b97\u6b21\u6570 | \u5e73\u5747\u8fd0\u7b97\u6b21\u6570 |\n| :----------: | :----------: | :----------: | :----------: | :----------: |\n| $9223372036854775808$ | $2^{63}$ | $9625$ |$1444$|$3624.04$\n| $9223372036854775783$ | \u662f\u8d28\u6570 | $610$ |$610$ |$610$ |\n| $9223371994482243049$ | $3037000493^2$ | $805484$ |$3803$|$249223.63$\n| $9223253290108583207$ | $2097143^3$ | $27931$ |$699$|$7487.53$\n| $2147483648$ | $2^{31}$ | $1578$ |$74$|$265.49$\n| $2147483647$ | \u662f\u8d28\u6570 | $300$ |$300$|$300$\n| $2147117569$ | $46337^2$ | $5446$ |$345$|$1407.82$\n| $2141700569$ | $1289^3$ | $2918$ |$126$|$687.6$\n- \u5bf9\u6bd4\u5373\u53ef\u53d1\u73b0\u8fd9\u4e2a\u7b80\u5355\u4f18\u5316\u7684\u4f18\u8d8a\u6027\u80fd\u3002\n- \u4e0d\u8fc7 Pollard \u7b97\u6cd5\u786e\u5b9e\u4e0d\u662f\u5f88\u7a33\u5b9a\u3002\n- [\u4ee3\u7801\u5b9e\u73b0](https://www.luogu.com.cn/paste/8h81rzqz)\u3002",
        "postTime": 1629474723,
        "uid": 260884,
        "name": "WeLikeStudying",
        "ccfLevel": 0,
        "title": "\u8d28\u56e0\u6570\u5206\u89e3"
    },
    {
        "content": "upd :\u591a\u8c22\u5927\u4f6c` zhoutb2333\uff08UID31564\uff09`\u7684\u6307\u6b63\uff0c\u73b0\u5728\u7684\u9898\u89e3\u5df2\u7ecf\u662f\u6b63\u786e\u7684\u4e86\u3002\n\n\u5176\u5b9e\u6211\u7684\u6e90\u7a0b\u5e8f\u6709\u4e2a\u5f88\u4e25\u91cd\u7684bug\uff0c\u5c31\u662f\u4e24\u4e2a`Int64`\u7c7b\u578b\u6211\u7ed9\u76f4\u63a5\u4e58\u8d77\u6765\u4e86\u2026\u2026\u4e8e\u662f\u5c31\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u5947\u602a\u7684\u6ea2\u51fa\u3002\u5bf9\u4e8e\u67d0\u4e9b\u7d20\u6570\u4f1a\u88ab\u5f53\u6210\u5408\u6570\uff0c\u4e8e\u662f\u65e0\u8bba\u600e\u6837\u90fd\u5224\u4e0d\u51fa\u6765\u8d28\u56e0\u5b50\u5bfc\u81f4TLE\u2026\u2026\n\n\u7136\u540e\u5927\u5bb6\u5982\u679c\u60f3\u77e5\u9053\u6211\u662f\u600e\u4e48\u77e5\u9053\u8fd9\u4e2a\u95ee\u9898\u7684\uff0c\u53ef\u4ee5\u5de6\u8f6c\u8ba8\u8bba\u533a\u770b\u770b\u6211\u662f\u600e\u4e48\u667a\u969c\u7684\u2026\u2026\n\n\u53cd\u6b63\u6700\u540e\u5462\uff0c\u6211\u53d1\u73b0\u5728\u7528\u9f9f\u901f\u4e58\u4e4b\u540e\u7a0b\u5e8f\u7684\u5224\u7d20\u6027\u4f1a\u53d8\u5f31\uff0c\u4e8e\u662f\u53c8\u52a0\u4e86\u51e0\u4e2a\u8d28\u6570\uff0c\u5f00\u4e86O2\u5c31\u8fc7\u4e86233\n\n\u73b0\u5728\u6700\u65b0\u7684\u4ee3\u7801\u653e\u5728\u4e86\u6700\u4e0b\u9762\u3002\u4ee5\u4e0b\u662f\u539f\u9898\u89e3\uff1a\n____\n\n\u6211\u60f3\u8bf4\u4e00\u4e0b\u8fd9\u4e2a\u9898\u76ee\u662f\u600e\u4e48\u5361\u5e38\u7684\u3002\n\n\u867d\u7136\u6211\u7684\u4ee3\u7801\u4e5f\u4e0d\u662f\u5f88\u5feb\u2026\u2026\u4f46\u662f\u4e0d\u81f3\u4e8e$94pts$\u2026\u2026\n\n\u4ee5\u4e0b\u662f\u6218\u679c\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/50558.png)\n\n\u4e0d\u7740\u6025\uff0c\u6211\u4eec\u4e00\u70b9\u4e00\u70b9\u6765\uff1a\n\n## \u4e00\u3001$6000+\\rm{ms} \\to 4000+\\rm{ms}$\n\n\u9996\u5148\u5949\u4e0a\u5728\u4e0b\u6700\u6162\u7684\u4ee3\u7801\uff1a\n\n```cpp\nLL Prime[11] = {2, 3, 5, 7, 13, 17, 19, 23} ;\n\ninline LL expow(LL a, LL b, LL p){\n    LL res = 1 ;\n    while (b){\n        if (b & 1) \n            (res *= a) %= p ;\n        (a *= a) %= p, b >>= 1 ; \n    }\n    return res % p ;\n}\ninline bool Test(LL p, LL x){\n    LL r = 0, d = x - 1 ;\n    while (!(d & 1)) d >>= 1, ++ r ;\n    for (LL i = expow(p, d, x), j ; r ; -- r){\n        j = i * i % x ;\n        if (j == 1){\n            if (i == 1 || i == x - 1) \n                return 1 ; \n            return 0 ;\n        }\n        i = j ;\n    }\n    return 0 ;\n}\ninline bool Miller_Rabin(LL x){\n    if (x == 1) return 0 ;\n    for (int i = 0 ; i < 8 ; ++ i){\n        if (x == Prime[i]) return 1 ;\n        if (!(x % Prime[i])) return 0 ;\n        if (!Test(Prime[i], x)) return 0 ;\n    }\n    return 1 ;\n}\nLL res[MAXN], tot ;\ninline int pksrand(){\n    return rand() << 15 ^ rand() ;\n} // 2\ninline LL Irand(LL x){\n    return (((LL)pksrand()) << 30 ^ pksrand()) % x ; //2\n}\ninline LL guisuMul(LL a, LL b, LL x){\n    return (a * b - (LL) ((long double) a * b / x + 1e-9) * x) % x;\n} \ninline LL qwq(LL x){\n    LL A = Irand(x), C = Irand(x) ;\n    LL t1 = A, t2 = (guisuMul(A, A, x) + C) % x ; // 1\n    LL dif = max(t1, t2) - min(t1, t2), G = __gcd(x, dif) ;\n    while (G == 1){\n        t1 = (guisuMul(t1, t1, x) + C) % x ;\n        t2 = (guisuMul(t2, t2, x) + C) % x ;\n        t2 = (guisuMul(t2, t2, x) + C) % x ;\n        dif = max(t1, t2) - min(t1, t2), G = __gcd(x, dif) ;\n    }\n    return G ;\n}\ninline void Pollard_Rho(LL x){\n    if (x == 1) return ;\n    if (Miller_Rabin(x)) {\n        res[++ tot] = x ; return ;\n    }\n    LL y = x ; while (y == x) y = qwq(x) ;\n    Pollard_Rho(y), Pollard_Rho(x / y) ;\n}\nint main(){\n    cin >> T ;\n    while (T --){\n        scanf(\"%lld\", &N), tot = 0, Pollard_Rho(N) ;\n        if (tot == 1) { puts(\"Prime\") ; continue ; } \n        sort(res + 1, res + tot + 1), printf(\"%lld\\n\", res[tot]) ; \n    }\n} \n```\n\n\u90a3\u4e48\u5f00\u59cb\u4f18\u5316\n\n*\n\n* $1$\u3001\u9898\u76ee\u4e2d\u8ba9\u6c42\u6700\u5927\u7684\u56e0\u5b50\uff0c\u800c\u6211\u4e00\u5f00\u59cb\u7684\u505a\u6cd5\u662f\u5168\u90e8\u4fdd\u5b58\u5e76\u4e14\u6392\u4e00\u904d\u5e8f\u3002\n\u4f46\u8fd9\u663e\u7136\u662f\u5f88\u8822\u7684\u4e3e\u52a8\u3002\u4e8e\u662f\u6211\u4eec\u4fee\u6539\u4e00\u4e0b\uff1a\n\n```cpp\ninline void Pollard_Rho(LL x){\n    if (x == 1) return ;\n    if (Miller_Rabin(x)){\n        Ans = max(Ans, x) ; return ;\n    } \n    register LL y = x ; \n    while (y == x) y = qwq(x) ;\n    Pollard_Rho(y), Pollard_Rho(x / y) ;\n}\nint main(){\n    srand(19260817) ;\n    T =qr() ;\n    while (T --){\n        N = qr(), Ans = -1, Pollard_Rho(N) ;\n        if (Ans == N) puts(\"Prime\") ;else printf(\"%lld\", Ans), putchar('\\n') ;\n}\n```\n\n~~\u867d\u7136\u8fd9\u4f3c\u4e4e\u6ca1\u4e2a\u5375\u7528~~\n\n* $2$\u3001\u6211\u4eec\u6c42$gcd$\u662f\u5f88\u9891\u7e41\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5c1d\u8bd5\u601d\u8003\u4e00\u79cd\u6bd4\u8f83\u597d\u7684\u65b9\u5f0f\u3002\u5927\u6982\u5c31\u662f\u4e8c\u8fdb\u5236\u8f6c\u5316\uff1a\n\n```cpp\n#define mytz __builtin_ctzll\n\ninline LL gcd(LL a, LL b){\n    if(!a) return b;\n    if(!b) return a;\n    register int t = mytz(a|b) ;\n    a >>= mytz(a) ;\n    do{\n        b >>= mytz(b) ;\n        if(a>b){LL t=b;b=a,a=t;}\n        b-=a;\n    }while(b);\n    return a<<t;\n}\n```\n\n\u5176\u4e2d$\\_\\_builtin\\_ctzll$\u662f\u7528\u6765\u5224\u65ad\u4e8c\u8fdb\u5236\u4e0b\u672b\u5c3e\u96f6\u7684\u6570\u91cf(\u9488\u5bf9$int64$)\u7684\u3002\u539f\u7406\u7684\u8bdd\u5927\u6982\u5c31\u662f\u4e8c\u8fdb\u5236\u4e71\u641e$233$\u2026\u2026\n\n* $3$\u3001\u7d20\u6570\u4e2a\u6570\u4e0d\u7528\u592a\u591a\u3002\u8fd9\u662f\u5b9e\u6d4b\uff0c\u53ea\u9700\u8981$2$\u548c$61$\u4e24\u4e2a\u8d28\u6570\u5c31\u53ef\u4ee5\u5361\u8fc7\u53bb\u3002\u867d\u7136\u8d28\u6570\u7684\u591a\u5c11\u4e4b\u4e8e\u65f6\u95f4\u662f\u4e2a\u7384\u5b66\u7684\u95ee\u9898\uff0c\u4f46\u770b\u8d77\u6765\u4f3c\u4e4e\u4f1a\u5feb\u4e00\u4e9b\u3002\u5e76\u4e14\uff0c\u5f88\u91cd\u8981\u7684\uff0c**\u5faa\u73af\u5c55\u5f00**\uff0c\u6211\u4eec\u5728$Miller\\_Rabin$\u4e2d\u5b8c\u5168\u6ca1\u6709\u5fc5\u8981$for$\uff0c\u6bd5\u7adf\u7d20\u6570\u4e2a\u6570\u5f88\u5c11\uff0c\u4e8e\u662f\uff1a\n\n```cpp\ninline bool Miller_Rabin(LL x){\n    if (x == Prime[1] || x == Prime[0]) return 1 ;\n    if (!(x % Prime[1]) || !(x % Prime[0])) return 0 ;\n    if (Test(Prime[1], x) ^ 1) return 0 ;\n    if (Test(Prime[0], x) ^ 1) return 0 ;\n    return 1 ;\n}\n```\n\n\u7136\u540e\u5c31\u559c\u95fb\u4e50\u89c1\u5730\u62ff\u5230\u4e86$4500ms$\u5de6\u53f3\u7684\u597d\u6210\u7ee9\u2014\u2014\u53ef\u8fd9\u4f3c\u4e4e\u4e0d\u80fd\u89e3\u51b3\u6700\u540e\u4e00\u4e2a\u70b9\u4ecd\u7136\u5361\u4e0d\u8fc7\u53bb\u7684\u95ee\u9898\u3002\n\n## \u4e8c\u3001$4000+ms \\to 3000+ms$\n\n\u4e0b\u9762\u624d\u662f\u771f\u6b63\u7684\u5361\u5e38\u6570\u2026\u2026\n\n\u9996\u5148\u6ce8\u610f\u5230\uff0c\u6211\u4eec\u9700\u8981\u9891\u7e41\u8c03\u7528\u7684$Rho$\u51fd\u6570\u548c$Miller$\u4e2d\u7684$check$\uff0c\u90fd\u6216\u591a\u6216\u5c11\u5b9a\u4e49\u4e86\u4e00\u4e9b\u4e34\u65f6\u53d8\u91cf\uff0c\u800c\u5bf9\u4e8e\u4e34\u65f6\u53d8\u91cf\uff0c\u6211\u4eec\u662f\u53ef\u4ee5`register`\u4f18\u5316\u7684\u2026\u2026\u5f53\u4f60\u5168\u90e8\u52a0\u4e0a`register`\u4fee\u9970\u7b26\u4e4b\u540e\uff0c\u4f60\u4f1a\u53d1\u73b0\u4f60\u7684\u7a0b\u5e8f\u5feb\u4e86\u63a5\u8fd1$300+ms$\u2026\u2026\n\n\u4f46\u8fd9\u4e0d\u91cd\u8981\uff0c\u91cd\u8981\u7684\u662f\u63a5\u4e0b\u6765\u7684\u5361\u5e38\uff1a\n\n\u5728$4000+ms$\u65f6\uff0c\u6211\u7684$rand$\u662f\u8fd9\u4e48\u5199\u7684\uff1a\n\n```cpp\ninline LL Irand(LL x){\n    return ((LL)(rand() << 15 ^ rand()) << 30 ^ (rand() << 15 ^ rand())) % x ; //2\n}//2\n```\n\u770b\u4e0a\u53bb\u5e76\u4e0d\u53ef\u4ee5\u4f18\u5316\uff0c\u4f46\u4e8b\u5b9e\u4e0a\uff0c\u53ea\u8981\u6211\u4eec\u6539\u53d8\u4e00\u4e0b\u90a3\u4e2a\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u7684\u4f4d\u7f6e\uff1a\n\n```cpp\ninline LL Irand(LL x){\n    return 1ll * ((rand() << 15 ^ rand()) << 30 ^ (rand() << 15 ^ rand())) % x ; //2\n}//2\n```\n\u4ed6\u5c31\u4f1a\u5feb\u6574\u6574$500+ms$\uff01\uff01\n\n\u8fd9\u4e5f\u4ece\u4fa7\u9762\u5370\u8bc1\u4e86\uff0c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u624d\u662f\u6700\u6162\u7684\u8fd0\u7b97\u3002\u3002\u3002\n\n\u6240\u4ee5\uff0c\u6700\u540e\u6211\u4eec\u5c31\u6210\u529f\u5730\u5361\u4e86\u8fc7\u53bbqaq\n\n\u7a0d\u5fae\u63d0\u4e00\u53e5\uff0c\u73af\u5883\u4f18\u5316\u53c2\u6570\uff1a\n\n```cpp\n#pragma GCC diagnostic error \"-std=c++14\"\n#pragma GCC target(\"avx\")\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"inline\")\n#pragma GCC optimize(\"-fgcse\")\n#pragma GCC optimize(\"-fgcse-lm\")\n#pragma GCC optimize(\"-fipa-sra\")\n#pragma GCC optimize(\"-ftree-pre\")\n#pragma GCC optimize(\"-ftree-vrp\")\n#pragma GCC optimize(\"-fpeephole2\")\n#pragma GCC optimize(\"-ffast-math\")\n#pragma GCC optimize(\"-fsched-spec\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC optimize(\"-falign-jumps\")\n#pragma GCC optimize(\"-falign-loops\")\n#pragma GCC optimize(\"-falign-labels\")\n#pragma GCC optimize(\"-fdevirtualize\")\n#pragma GCC optimize(\"-fcaller-saves\")\n#pragma GCC optimize(\"-fcrossjumping\")\n#pragma GCC optimize(\"-fthread-jumps\")\n#pragma GCC optimize(\"-funroll-loops\")\n#pragma GCC optimize(\"-fwhole-program\")\n#pragma GCC optimize(\"-freorder-blocks\")\n#pragma GCC optimize(\"-fschedule-insns\")\n#pragma GCC optimize(\"inline-functions\")\n#pragma GCC optimize(\"-ftree-tail-merge\")\n#pragma GCC optimize(\"-fschedule-insns2\")\n#pragma GCC optimize(\"-fstrict-aliasing\")\n#pragma GCC optimize(\"-fstrict-overflow\")\n#pragma GCC optimize(\"-falign-functions\")\n#pragma GCC optimize(\"-fcse-skip-blocks\")\n#pragma GCC optimize(\"-fcse-follow-jumps\")\n#pragma GCC optimize(\"-fsched-interblock\")\n#pragma GCC optimize(\"-fpartial-inlining\")\n#pragma GCC optimize(\"no-stack-protector\")\n#pragma GCC optimize(\"-freorder-functions\")\n#pragma GCC optimize(\"-findirect-inlining\")\n#pragma GCC optimize(\"-fhoist-adjacent-loads\")\n#pragma GCC optimize(\"-frerun-cse-after-loop\")\n#pragma GCC optimize(\"inline-small-functions\")\n#pragma GCC optimize(\"-finline-small-functions\")\n#pragma GCC optimize(\"-ftree-switch-conversion\")\n#pragma GCC optimize(\"-foptimize-sibling-calls\")\n#pragma GCC optimize(\"-fexpensive-optimizations\")\n#pragma GCC optimize(\"-funsafe-loop-optimizations\")\n#pragma GCC optimize(\"inline-functions-called-once\")\n#pragma GCC optimize(\"-fdelete-null-pointer-checks\")\n```\n\n\u90fd\u52a0\u4e0a\u7684\u6548\u679c\u4e0d\u662f\u7279\u522b\u597d\uff0c\u6700\u597d\u7684\u662f\u4e0b\u9762\u51e0\u53e5\uff1a\n\n```cpp\n#pragma GCC diagnostic error \"-std=c++14\"\n#pragma GCC target(\"avx\")\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\")\n```\n\n\u4e0b\u9762\u662f\u5b8c\u6574\u7248$\\rm{qaq}$\n\n\n```cpp\n#define min my_min\n#define LL long long\n#define max(a, b) (((a) > (b)) ? (a) : (b))\n\n\nusing namespace std ; LL T, N ;\nLL Prime[11] = {2, 61, 97, 7, 13, 17, 23, 29}, Ans = -1 ;\n\ninline LL guisuMul(LL a, LL b, LL m){\n    LL d =((long double)a / m * b + 1e-8) ;\n    LL r = a * b - d * m ;\n    return r < 0 ? r + m : r ;\n} \ninline LL gsm(LL a, LL b, LL p){\n    register LL res = 0 ;\n    while (b){\n        if (b & 1) \n           \tres = (res + a) % p ;\n        a = (a + a) % p, b >>= 1 ; \n    }\n    return res ;\n} \ninline LL expow(LL a, LL b, LL p){\n    if (a == 1) return 1 ;\n    register LL res = 1 ;\n    while (b){\n        if (b & 1) \n           \tres = gsm(res, a, p) ;\n        a = gsm(a, a, p), b >>= 1 ; \n    }\n    return res ;\n}\ninline LL my_max(LL a, LL b){ return a > b ? a : b ; }\ninline LL my_min(LL a, LL b){ return a < b ? a : b ; }\ninline LL qr(){\n    register LL k = 0 ; char c = getchar() ;\n    while (c < '0' || c > '9') c = getchar() ;\n    while (c <= '9' && c >= '0') k = (k << 1) + (k << 3) + c - 48, c = getchar() ;\n    return k ;\n}\ninline bool Test(LL p, LL x){\n    register LL r = 0, d = x - 1 ;\n    while (!(d & 1)) d >>= 1, ++ r ;\n    for (register LL i = expow(p, d, x), j ; r ; -- r){\n        j = gsm(i, i, x) ;\n        if (j == 1){\n            if (i == 1 || i == x - 1) \n                return 1 ; \n            return 0 ;\n        }\n        i = j ;\n    }\n    return 0 ;\n}\n#define ctz __builtin_ctzll\n\ninline LL gcd(LL a, LL b){\n    if(!a) return b;\n    if(!b) return a;\n    register int t = ctz(a|b) ;\n    a >>= ctz(a) ;\n    do{\n        b >>= ctz(b) ;\n        if(a>b){LL t=b;b=a,a=t;}\n        b-=a;\n    }while(b);\n    return a<<t;\n}\ninline bool Miller_Rabin(LL x){\n    if (x == Prime[1] || x == Prime[0]) return 1 ;\n    if (!(x % Prime[1]) || !(x % Prime[0])) return 0 ;\n    if (Test(Prime[1], x) ^ 1) return 0 ;\n    if (Test(Prime[0], x) ^ 1) return 0 ;\n\tif (x == Prime[2] || x == Prime[3]) return 1 ;\n    if (!(x % Prime[2]) || !(x % Prime[3])) return 0 ;\n    if (Test(Prime[2], x) ^ 1) return 0 ;\n    if (Test(Prime[3], x) ^ 1) return 0 ;\n\tif (x == Prime[4] || x == Prime[5]) return 1 ;\n    if (!(x % Prime[4]) || !(x % Prime[5])) return 0 ;\n    if (Test(Prime[4], x) ^ 1) return 0 ;\n    if (Test(Prime[5], x) ^ 1) return 0 ;\n\tif (x == Prime[6] || x == Prime[7]) return 1 ;\n    if (!(x % Prime[6]) || !(x % Prime[7])) return 0 ;\n    if (Test(Prime[6], x) ^ 1) return 0 ;\n    if (Test(Prime[7], x) ^ 1) return 0 ;\n    return 1 ;\n}\ninline LL Irand(LL x){\n    return 1ll * ((rand() << 15 ^ rand()) << 30 ^ (rand() << 15 ^ rand())) % x ; //2\n}//2\n\ninline LL qwq(LL x){\n    register LL C = Irand(x) ;\n    register LL t1 = Irand(x), t2 = guisuMul(t1, t1, x) + C ; // 1\n    register LL dif = t1 > t2 ? (t1 - t2) : (t2 - t1), G = gcd(x, dif) ;\n    while (G == 1){\n        t1 = guisuMul(t1, t1, x) + C ;if (t1 >= x) t1 %= x ;\n        t2 = guisuMul(t2, t2, x) + C, t2 = guisuMul(t2, t2, x) + C ;\n        if (t2 >= x) t2 %= x ; dif = t1 > t2 ? (t1 - t2) : (t2 - t1), G = gcd(x, dif) ;\n    }\n    return G ;\n}\ninline void Pollard_Rho(LL x){\n    if (x == 1) return ;\n    if (Miller_Rabin(x)){\n        Ans = max(Ans, x) ; return ;\n    } \n    register LL y = x ; \n    while (y == x) y = qwq(x) ;\n    Pollard_Rho(y), Pollard_Rho(x / y) ;\n}\nint main(){\n    srand(19260817) ;\n    freopen(\"sttd.out\", \"w\", stdout) ;\n    T =qr() ;\n    while (T --){\n        N = qr(), Ans = -1, Pollard_Rho(N) ;\n        if (Ans == N) puts(\"Prime\") ;else printf(\"%lld\", Ans), putchar('\\n') ;\n    }\n} \n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1548912609,
        "uid": 28313,
        "name": "\u768e\u6708\u534a\u6d12\u82b1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4718 \u3010\u3010\u6a21\u677f\u3011Pollard-Rho\u7b97\u6cd5\u3011"
    },
    {
        "content": "### \u524d\u7f6e\u77e5\u8bc6\uff1a$MillerRabin$\u7d20\u6570\u6d4b\u8bd5\n\n#### \u524d\u8a00\n\n[\u5728\u535a\u5ba2\u67e5\u770b](https://www.cnblogs.com/chenxiaoran666/p/MillerRabin.html)\n\n$MillerRabin$\u7d20\u6570\u6d4b\u8bd5\u662f\u4e00\u79cd\u5f88\u5b9e\u7528\u7684\u7d20\u6570\u5224\u5b9a\u65b9\u6cd5\u3002\n\n\u5b83\u53ea\u9488\u5bf9\u5355\u4e2a\u6570\u5b57\u8fdb\u884c\u5224\u5b9a\uff0c\u56e0\u800c\u53ef\u4ee5\u5bf9\u8f83\u5927\u7684\u4e43\u81f3\u4e8e$long\\ long$\u8303\u56f4\u5185\u7684\u6570\u8fdb\u884c\u5224\u5b9a\uff0c\u800c\u4e14\u901f\u5ea6\u4e5f\u5f88\u5feb\uff0c\u662f\u4e2a\u5341\u5206\u4f18\u79c0\u7684\u7b97\u6cd5\u3002\n\n#### \u524d\u7f6e\u5b9a\u7406\n\n- **\u8d39\u9a6c\u5c0f\u5b9a\u7406**\uff1a$a^{p-1}\\equiv1(mod\\ p)$\uff08\u8be6\u89c1\u6b64\u535a\u5ba2\uff1a[\u8d39\u9a6c\u5c0f\u5b9a\u7406](https://www.cnblogs.com/chenxiaoran666/p/Fermat_little.html)\uff09\n- **\u4e8c\u6b21\u63a2\u6d4b\u5b9a\u7406**\uff1a\u82e5$p$\u4e3a\u5947\u7d20\u6570\u4e14$x^2\\equiv1(mod\\ p)$\uff0c\u5219$x\\equiv1(mod\\ p)$\u6216$x\\equiv p-1(mod\\ p)$\u3002\n\n#### \u5927\u81f4\u601d\u8def\n\n\u5047\u8bbe\u6211\u4eec\u8981\u9a8c\u8bc1$x$\u662f\u5426\u4e3a\u7d20\u6570\uff0c\u5219\u6211\u4eec\u5e94\u5148\u627e\u4e00\u4e2a\u8d28\u6570$p$\u6765\u5bf9\u5176\u8fdb\u884c\u6d4b\u8bd5\uff08$p$\u53ef\u4ee5\u9009\u53d6\u591a\u4e2a\u4f9d\u6b21\u8fdb\u884c\u6d4b\u8bd5\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u4e0d\u6ee1\u8db3\u5c31\u53ef\u4ee5\u786e\u5b9a\u5176\u4e0d\u662f\u8d28\u6570\uff09\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u5148\u5224\u65ad\u5982\u679c$x=p$\uff0c\u5219$x$\u5fc5\u4e3a\u8d28\u6570\uff08\u56e0\u4e3a$p$\u4e3a\u8d28\u6570\uff09\u3002\u5982\u679c$x$\u662f$p$\u7684\u500d\u6570\uff0c\u5219$x$\u5fc5\u4e3a\u5408\u6570\u3002\n\n\u7136\u540e\uff0c\u7531\u4e8e\u8d39\u9a6c\u5c0f\u5b9a\u7406\uff0c\u6211\u4eec\u5148\u6d4b\u8bd5$p^{x-1}\\%x$\u662f\u5426\u7b49\u4e8e$1$\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u5219\u5b83\u5fc5\u7136\u4e0d\u662f\u8d28\u6570\uff08\u8fd9\u4e00\u6b65\u4e5f\u53eb\u4f5c**\u8d39\u9a6c\u6d4b\u8bd5**\uff09\u3002\n\n\u5426\u5219\uff0c\u6211\u4eec\u6839\u636e\u4e8c\u6b21\u63a2\u6d4b\u5b9a\u7406\uff0c\u5148\u7528\u4e00\u4e2a$k$\u8bb0\u5f55\u4e0b$x-1$\uff0c\u7136\u540e\u53ea\u8981$k$\u4e3a\u5076\u6570\u5c31\u6301\u7eed\u64cd\u4f5c\uff1a\n\n- \u5148\u5c06$k$\u9664\u4ee5$2$\uff0c\u7136\u540e\u7528\u4e00\u4e2a$t$\u8bb0\u5f55\u4e0b$p^k\\%x$\u7684\u503c\u3002\n- \u5982\u679c$t$\u4e0d\u7b49\u4e8e$1$\u4e14\u4e0d\u7b49\u4e8e$p-1$\uff0c\u5219\u6839\u636e\u4e8c\u6b21\u63a2\u6d4b\u5b9a\u7406\uff0c$x$\u975e\u8d28\u6570\u3002\n- \u5982\u679c$t=p-1$\uff0c\u5219\u65e0\u6cd5\u7ee7\u7eed\u5957\u7528\u4e8c\u6b21\u63a2\u6d4b\u5b9a\u7406\uff0c\u56e0\u6b64\u76f4\u63a5\u8fd4\u56de$true$\u3002\n\n\u5982\u679c\u4e00\u76f4\u64cd\u4f5c\u5230$k$\u4e3a\u5947\u6570\u4ecd\u7136\u65e0\u6cd5\u786e\u5b9a$x$\u975e\u8d28\u6570\uff0c\u5c31\u8fd4\u56de$true$\u3002\n\n\u8fd9\u4e00\u8fc7\u7a0b\u5e94\u8be5\u8fd8\u662f\u6bd4\u8f83\u5bb9\u6613\u7406\u89e3\u7684\u3002\n\n#### \u4ee3\u7801\n\n```cpp\nclass MillerRabin\\\\MR\u6d4b\u8bd5\n{\n    private:\n        #define Pcnt 10\n        Con int P[Pcnt]={2,3,5,7,11,13,19,61,2333,24251};//\u7528\u4e8e\u6d4b\u8bd5\u7684\u8d28\u6570\n        I int Qpow(RI x,RI y,CI X) {RI t=1;W(y) y&1&&(t=1LL*t*x%X),x=1LL*x*x%X,y>>=1;return t;}//\u5feb\u901f\u5e42\n        I bool Check(CI x,CI p)//\u6d4b\u8bd5\n        {\n            if(!(x%P[i])||Qpow(p%x,x-1,x)^1) return false;//\u5224\u65adx\u662f\u5426\u4e3ap\u7684\u500d\u6570\uff0c\u7136\u540e\u8d39\u9a6c\u6d4b\u8bd5\n            RI k=x-1,t;W(!(k&1))//\u6301\u7eed\u64cd\u4f5c\u76f4\u81f3k\u4e3a\u5947\u6570\n            {\n                if((t=Qpow(p%x,k>>=1,x))^1&&t^(x-1)) return false;//\u5982\u679cp^k\u4e0d\u662f1\u4e5f\u4e0d\u662f-1\uff0c\u8bf4\u660ex\u4e0d\u662f\u8d28\u6570\n                if(!(t^(x-1))) return true;//\u5982\u679cp^k\u5df2\u4e3a-1\uff0c\u65e0\u6cd5\u7528\u4e8c\u6b21\u63a2\u6d4b\u5b9a\u7406\uff0c\u56e0\u6b64\u8fd4\u56detrue\n            }return true;\n        }\n    public:\n        I bool IsPrime(CI x)//\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u5426\u4e3a\u8d28\u6570\n        {\n            if(x<2) return false;\n            for(RI i=0;i^Pcnt;++i) {if(!(x^P[i])) return true;if(!Check(x,P[i])) return false;}//\u679a\u4e3e\u8d28\u6570\u8fdb\u884c\u6d4b\u8bd5\n            return true;\n        }\n}MR;\n```\n\n### \u6b63\u5f0f\u5185\u5bb9\uff1a$Pollard\\ Rho$\u7b97\u6cd5\n\n#### \u524d\u8a00\n\n[\u5728\u535a\u5ba2\u67e5\u770b](https://www.cnblogs.com/chenxiaoran666/p/PollardRho.html)\n\n$Pollard\\ Rho$\u662f\u4e00\u4e2a\u8457\u540d\u7684**\u5927\u6570\u8d28\u56e0\u6570\u5206\u89e3**\u7b97\u6cd5\uff0c\u5b83\u7684\u5b9e\u73b0\u57fa\u4e8e\u4e00\u4e2a\u795e\u5947\u7684\u7b97\u6cd5\uff1a$MillerRabin$\u7d20\u6570\u6d4b\u8bd5\u3002\n\n\u671f\u671b\u4e0b\uff0c$Pollard\\ Rho$\u7b97\u6cd5\u53ef\u4ee5\u8fbe\u5230\u6781\u5feb\u7684\u590d\u6742\u5ea6\u3002\n\n#### \u6838\u5fc3\u601d\u60f3\n\n\u5728$ZJOI2019Day1$\u8bb2\u8bfe\u671f\u95f4\uff0c\u5b83\u662f\u88ab$CQZ$\u795e\u4ed9\u4f5c\u4e3a**\u968f\u673a\u7b97\u6cd5**\u5185\u7684\u4e00\u90e8\u5206\u6765\u8fdb\u884c\u4ecb\u7ecd\u7684\u3002\n\n\u7531\u6b64\u53ef\u89c1\uff0c\u5176\u6838\u5fc3\u601d\u60f3\u4fbf\u662f**\u968f\u673a**\u4e8c\u5b57\u3002\n\n#### \u64cd\u4f5c\u6d41\u7a0b\n\n\u9996\u5148\uff0c\u6211\u4eec\u5148\u7528$MillerRabin$\u5224\u65ad\u5f53\u524d\u6570$x$\u662f\u5426\u4e3a\u8d28\u6570\uff0c\u82e5\u662f\uff0c\u5219\u53ef\u76f4\u63a5\u7edf\u8ba1\u4fe1\u606f\u5e76\u9000\u51fa\u51fd\u6570\n\n\u5426\u5219\uff0c\u6211\u4eec\u8003\u8651\uff0c\u5982\u679c\u80fd\u627e\u5230\u4e00\u4e2a\u6570$s$\u4f7f\u5f97$1<gcd(s,x)<x$\uff0c\u5219$x$\u5fc5\u7136\u53ef\u4ee5\u88ab\u5206\u6210$gcd(s,x)$\u548c$\\frac x{gcd(s,x)}$\u4e24\u90e8\u5206\uff0c\u63a5\u4e0b\u6765\u9012\u5f52\u5904\u7406\u8fd9\u4e24\u90e8\u5206\u5373\u53ef\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8981\u627e\u7684\uff0c\u5c31\u662f\u4e00\u4e2a\u7b26\u5408\u6761\u4ef6\u7684$s$\u3002\n\n\u800c\u627e\u7684\u8fc7\u7a0b\u5229\u7528\u4e86\u968f\u673a\u3002\n\n\u6211\u4eec\u968f\u673a\u51fa\u4e00\u4e2a$1\\sim x-1$\u8303\u56f4\u5185\u7684\u6570$v_0$\uff0c\u7136\u540e\uff0c\u4e0d\u65ad\u8ba1\u7b97$v_i=(v_{i-1}*v_{i-1}+t)\\%x$\uff08$t$\u4e3a\u4e00\u4e2a\u81ea\u5df1\u8bbe\u5b9a\u7684\u5e38\u6570\uff09\u3002\n\n\u5219\u6211\u4eec\u6bcf\u6b21\u5224\u65ad$d=gcd(abs(v_i-v_0),x)$\u662f\u5426\u5927\u4e8e$1$\u4e14\u4e0d\u7b49\u4e8e$x$\u672c\u8eab\uff0c\u82e5\u6ee1\u8db3\u5219\u53ef\u76f4\u63a5\u8fd4\u56de$d$\u3002\n\n\u7531\u4e8e$v_i$\u6700\u7ec8\u80af\u5b9a\u4f1a\u5f62\u6210\u73af\uff0c\u800c\u5728\u5f62\u6210\u73af\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u65e0\u6cd5\u7ee7\u7eed\u64cd\u4f5c\u4e86\uff0c\u56e0\u6b64\u5f53$v_i=v_0$\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u9000\u51fa\u51fd\u6570\u5e76\u8fd4\u56de$x$\u672c\u8eab\uff0c\u8868\u793a\u5206\u89e3\u5931\u8d25\u3002\n\n\u5bf9\u4e8e\u5206\u89e3\u5931\u8d25\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u8c03\u6574$t$\u5e76\u91cd\u65b0\u8fdb\u884c\u5206\u89e3\u3002\n\n\u6839\u636e**\u751f\u65e5\u6096\u8bba**\uff0c\u5f62\u6210\u7684\u671f\u671b\u73af\u957f\u4e3a$O(\\sqrt x)$\uff0c\u56e0\u6b64\u590d\u6742\u5ea6\u5f97\u4ee5\u4fdd\u8bc1\u3002\n\n\u4f46\u662f\uff0c\u5149\u8fd9\u6837\u4f9d\u7136\u4e0d\u591f\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u52a0\u4f18\u5316\u3002\n\n#### \u4f18\u5316\uff1a\u8def\u5f84\u500d\u957f\n\n\u8003\u8651\u5230\u5982\u679c\u5bf9\u4e8e\u6bcf\u4e2a$v_i$\u90fd\u8981\u8ba1\u7b97\u4e00\u904d$gcd$\uff0c\u663e\u7136\u5f88\u6162\u3002\n\n\u4e8e\u662f\uff0c\u5c31\u4f1a\u60f3\u5230\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u5c06\u8fd9\u4e9b\u6570\u4e00\u8d77\u8fdb\u884c\u4e00\u6b21$gcd$\u3002\n\n\u800c\u9694\u7684\u65f6\u95f4\u5982\u4f55\u786e\u5b9a\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u500d\u589e\u3002\n\n\u7528\u4e00\u4e2a\u53d8\u91cf$s$\u7edf\u8ba1$abs(v_i-v_0)$\u4e4b\u79ef\u5e76\u5411$n$\u53d6\u6a21\uff0c\u56e0\u4e3a\u53d6\u6a21\u4e0d\u4f1a\u6539\u53d8$gcd$\u3002\n\n\u5982\u679c\u67d0\u4e00\u65f6\u523b$s$\u53d8\u6210\u4e86$0$\uff0c\u5219\u5206\u89e3\u5931\u8d25\uff0c\u9000\u51fa\u51fd\u6570\u5e76\u8fd4\u56de$x$\u672c\u8eab\u3002\n\n\u7136\u540e\u6bcf\u9694$2^k$\u4e2a\u6570\uff0c\u6211\u4eec\u8ba1\u7b97$gcd(s,x)$\u662f\u5426\u5927\u4e8e$1$\u4e14\u5c0f\u4e8e$x$\uff0c\u7136\u540e\u91cd\u65b0\u628a$v_0$\u8bbe\u7f6e\u4e3a\u5f53\u524d\u7684$v_i$\u3002\n\n\u8fd9\u6837\u4e00\u6765\uff0c\u590d\u6742\u5ea6\u5c31\u5f97\u5230\u4e86\u5927\u5927\u4f18\u5316\u3002\n\n#### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define Tp template<typename Ty>\n#define Ts template<typename Ty,typename... Ar>\n#define Reg register\n#define RI Reg int\n#define RL Reg LL\n#define Con const\n#define CI Con int&\n#define CL Con LL&\n#define I inline\n#define W while\n#define LL long long\n#define Gmax(x,y) (x<(y)&&(x=(y)))\n#define abs(x) ((x)<0?-(x):(x))\n#define hl_AK_NOI true\nusing namespace std;\nI LL Qmul(CL x,CL y,CL X)//\u5feb\u901f\u4e58\n{\n    RL k=(LL)((1.0L*x*y)/(1.0L*X)),t=x*y-k*X;\n    t-=X;W(t<0) t+=X;return t;\n}\nclass MillerRabin//MillerRabin\u5224\u7d20\u6570\u677f\u5b50\n{\n    private:\n        #define Pcnt 12\n        Con int P[Pcnt]={2,3,5,7,11,13,17,19,61,2333,4567,24251};\n        I LL Qpow(RL x,RL y,CL X)\n        {\n            RL t=1;W(y) y&1&&(t=Qmul(t,x,X)),x=Qmul(x,x,X),y>>=1;\n            return t;\n        }\n        I bool Check(CL x,CI p)\n        {\n            if(!(x%p)||Qpow(p%x,x-1,x)^1) return false;\n            RL k=x-1,t;W(!(k&1))\n            {\n                if((t=Qpow(p%x,k>>=1,x))^1&&t^(x-1)) return false;\n                if(!(t^(x-1))) return true;\n            }return true;\n        }\n    public:\n        bool IsPrime(CL x)\n        {\n            if(x<2) return false;\n            for(RI i=0;i^Pcnt;++i) {if(!(x^P[i])) return true;if(!Check(x,P[i])) return false;}\n            return true;\n        }\n};\nclass PollardRho//PollardRho\u5206\u89e3\u8d28\u56e0\u6570\n{\n    private:\n        #define Rand(x) (1LL*rand()*rand()*rand()*rand()%(x)+1)\n        LL ans;MillerRabin MR;\n        I LL gcd(CL x,CL y) {return y?gcd(y,x%y):x;}//\u6c42gcd\n        I LL Work(CL x,CI y)//\u5206\u89e3\n        {\n            RI t=0,k=1;RL v0=Rand(x-1),v=v0,d,s=1;W(hl_AK_NOI)//\u521d\u59cb\u5316\u968f\u673a\u4e00\u4e2av0\n            {\n                if(v=(Qmul(v,v,x)+y)%x,s=Qmul(s,abs(v-v0),x),!(v^v0)||!s) return x;//\u8ba1\u7b97\u5f53\u524dv\uff0c\u7edf\u8ba1\u4e58\u79ef\uff0c\u5224\u65ad\u662f\u5426\u5206\u89e3\u5931\u8d25\n                if(++t==k) {if((d=gcd(s,x))^1) return d;v0=v,k<<=1;}//\u500d\u589e\n            }\n        }\n        I void Resolve(RL x,RI t)//\u5206\u89e3\n        {\n            if(!(x^1)||x<=ans) return;if(MR.IsPrime(x)) return (void)Gmax(ans,x);//\u5148\u8fdb\u884c\u7279\u5224\n            RL y=x;W((y=Work(x,t--))==x);W(!(x%y)) x/=y;Resolve(x,t),Resolve(y,t);//\u627e\u5230\u4e00\u4e2a\u56e0\u6570y\uff0c\u7136\u540e\u5206\u89e3\uff08\u6ce8\u610f\u9664\u5c3d\uff09\n        }\n    public:\n        I PollardRho() {srand(20050521);}//\u521d\u59cb\u5316\u968f\u673a\u79cd\u5b50\n        I LL GetMax(CL x) {return ans=0,Resolve(x,302627441),ans;}//\u6c42\u7b54\u6848\n}P;\nint main()\n{\n    RI Ttot;RL n,res;scanf(\"%d\",&Ttot);\n    W(Ttot--) scanf(\"%lld\",&n),(res=P.GetMax(n))^n?printf(\"%lld\\n\",res):puts(\"Prime\");//\u8f93\u51fa\n    return 0;\n}\n```",
        "postTime": 1555296048,
        "uid": 28382,
        "name": "TheLostWeak",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4718 \u3010\u3010\u6a21\u677f\u3011Pollard-Rho\u7b97\u6cd5\u3011"
    },
    {
        "content": "\u4e3b\u8981\u8bb2\u89e3 Miller_Rabin&Pollard Rho\u3002\n\n\u8d44\u6599\u4e3b\u8981\u662f\u6d1b\u8c37 P4718 \u7684\u90e8\u5206\u9898\u89e3\u53ca oiwiki\u3002\n\n# \u8d39\u9a6c\u5b9a\u7406\n\n\u5373\u5bf9\u4e8e\u8d28\u6570 $p$\uff1a\n\n- $\\forall a \\in [1 , p - 1],a ^ {p - 1} \\equiv 1 \\pmod p$\n\n\u540c\u65f6\u5b58\u5728\u9006\u5b9a\u7406\u5373\uff1a\n\n- $\\exists a \\in [1 , p - 1],a ^ {p - 1} \\not \\equiv 1 \\pmod b$\n\n\u5219 $p$ \u4e00\u5b9a\u4e0d\u4e3a\u8d28\u6570\u3002\n\n\u636e\u6b64\uff0c\u6211\u4eec\u5728 $[1,p - 1]$ \u5185\u7b5b\u9009\u4e00\u4e9b\u6570\u6765\u505a\u4e0a\u8ff0\u8fd0\u7b97\uff0c\u5982\u679c\u9009\u62e9\u7684\u6570\u5bf9\u4e8e\u4e0a\u8ff0\u8fd0\u7b97\u7684\u7ed3\u679c\u90fd\u4e3a $1$ \u5219 $p$ \u5927\u6982\u7387\u662f\u8d28\u6570\uff0c\u5426\u5219 $p$ \u4e00\u5b9a\u662f\u5408\u6570\u3002\n\n\u8fd9\u4e2a\u65b9\u6cd5\u4e5f\u88ab\u79f0\u4e3a**\u8d39\u9a6c\u7d20\u6027\u68c0\u9a8c**\u3002\u53ef\u662f\u5b58\u5728\u4e00\u4e9b\u88ab\u79f0\u4f5c\u5361\u8fc8\u514b\u5c14\u6570\u7684\u6570\uff0c\u4ed6\u4eec\u65e2\u662f\u5408\u6570\u4e5f\u6ee1\u8db3\u8d39\u9a6c\u5b9a\u7406\u7684\u5f0f\u5b50\uff0c\u636e\u7edf\u8ba1\uff0c\u5728 $10 ^ 9$ \u4ee5\u5185\u5c31\u6709 $646$ \u4e2a\u5361\u8fc8\u514b\u5c14\u6570\uff0c\u6240\u4ee5\u8fd9\u4e2a\u65b9\u6cd5\u7684\u98ce\u9669\u5f88\u5927\u3002\n\n\n# \u4e8c\u6b21\u63a2\u6d4b\u5b9a\u7406\n\n\u82e5 $p$ \u4e3a\u5947\u7d20\u6570\uff0c\u5219\u6ee1\u8db3 $x ^ 2 \\equiv 1$ \u7684\u89e3\u4e3a $x = 1 \\lor x = p - 1$\u3002\n\n\n# Miller_Rabin\n\n\n\u6839\u636e\u4e8c\u6b21\u63a2\u6d4b\u5b9a\u7406\uff0c\u5728\u786e\u5b9a $n$ \u53ea\u6709\u53ef\u80fd\u662f\u5947\u7d20\u6570\u4e0b\uff0c\u6211\u4eec\u540c\u6837\u968f\u673a\u4e00\u4e9b\u57fa\u5e95\uff0c\u53ef\u4ee5\u5c06 $n - 1$ \u62c6\u6210 $n - 1 = r \\times 2 ^ t$\uff0c\u5148\u6c42\u51fa\u57fa\u5e95 $z$ \u5b83 $z ^ r$ \u5728 $n$ \u7684\u6a21\u610f\u4e49\u4e0b\u7684\u503c\uff0c\u82e5\u4e3a $1$ \u5219\u4e0d\u8003\u8651\u8be5\u57fa\u5e95\u3002\n\n\u63a5\u7740\u5e73\u65b9 $t$ \u6b21\uff0c\u5982\u679c\u8be5\u6570\u5b58\u5728\u4e00\u4e2a\u89e3\u4e3a $n - 1$ \u90a3\u4e48\u5c31\u8bf4\u660e\u8be5\u6570\u53ef\u80fd\u4e3a\u7d20\u6570\uff1b\u5982\u679c\u4e00\u4e2a\u57fa\u5e95\u4e2d\u4e0d\u5b58\u5728\u4e00\u4e2a\u89e3\u4e3a $n - 1$ \u90a3\u4e48\u8bf4\u660e\u8be5\u6570\u4e3a\u5408\u6570\u3002\n\n\u8fd9\u4e48\u505a\u5176\u5b9e\u672c\u8eab\u4e5f\u6ca1\u6709\u5b8c\u5168\u7684\u903b\u8f91\uff0c\u53ea\u662f\u5927\u5927\u63d0\u9ad8\u4e86\u6b63\u786e\u7387\u3002\n\n\u7ecf\u8ba1\u7b97\uff0c\u82e5\u6211\u4eec\u9009\u62e9 $k$ \u4e2a\u57fa\u5e95\uff0c\u9519\u8bef\u7387\u4ec5\u4e3a $\\frac{1}{4 ^ k}$\uff0c\u8fd9\u5df2\u7ecf\u662f\u4e2a\u5f88\u597d\u7684\u671f\u671b\u7b97\u6cd5\u4e86\u3002 \n\ncode\uff1a\n\n```cpp\nconst __int128 ONE = 1;\nbool millerRabin(ll n) \n{\n    if (n < 3 || n % 2 == 0) return n == 2;\n    ll a = n - 1 , b = 0 , tt = 11;\n    while (a % 2 == 0) a /= 2 , ++ b;\n    for(int i = 1 ; i <= tt ; i ++)\n    {\n        ll x = 1ll * rand() * rand() % (n - 2) + 2 , v = qpow(x , a , n);\n        if (v == 1) continue;int j;\n        for(j = 1 ; j <= b ; j ++) \n        {\n            if (v == n - 1) break;\n            v = (ll)v * v % n;\n        }\n        if (j > b) return 0;\n    }\n    return 1;\n}\n```\n\n\u4e0d\u8fc7\u5b58\u5728\u4e00\u79cd**\u5728 OI \u9886\u57df\u5177\u6709\u5b8c\u5168\u6b63\u786e\u6027\u7684\u505a\u6cd5**\uff0c\u5373**\u5f53\u503c\u57df $V \\leq 2 ^ {78}$ \u65f6**\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u56fa\u5b9a\u5e95\u6570\u4e3a\u524d $12$ \u4e2a\u7d20\u6570 $2,3,5,7,11,13,17,19,23,29,31,37$\uff0c\u6765\u5b9e\u73b0\u786e\u5b9a\u6027\u5224\u7d20\u3002\n\n\u8fd9\u4e2a\u4e1c\u897f\u7684\u539f\u7406\u5176\u5b9e\u6211\u4e5f\u4e0d\u662f\u5f88\u61c2\uff0c\u4f46\u662f\u5982\u679c\u4f60\u6709\u95f2\u5fc3~~\u4e00\u5b9a\u80fd\u901a\u8fc7\u6253\u8868\u68c0\u9a8c\u7684~~\uff0c\u5728\u6b64\u5c31\u4e0d\u591a\u63d0\u4e86\u3002\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\u5b9e\u73b0\uff1a\n\n```cpp\nint Suk[25]={0,2,3,5,7,11,13,17,19,23,29,31,37};\ninline bool chk(ll n,ll a,ll b,ll x) \n{\n    ll v = qpow(x , a , n);\n    if (v == 1) return 1;\n    int j = 1;\n    while(j <= b)\n    {\n    \tif(v == n - 1) break;\n\t\tv = ONE * v * v % n;\n\t\tj ++;\n\t}\n    if (j > b) return 0;\n    return 1;\n}\ninline bool mr(ll n)\n{\n\tif(n < 3 || n % 2 == 0) return n == 2;\n\tif(n > 37)\n\t{\n\t\tll a = n - 1 , b = 0;\n\t\twhile(a % 2 == 0) a >>= 1 , b ++;\n\t\tfor(int i = 1 ; i <= 12 ; i ++) if(!chk(n , a ,  b , Suk[i])) return 0;\n\t\treturn 1;\n\t}\n\telse\n\t{\n\t\tfor(int i = 1 ; i <= 12 ; i ++) if(n == Suk[i]) return 1;\n\t\treturn 0;\n\t}\n}\n```\n\n\u5173\u4e8e\u9ece\u66fc\u731c\u60f3\uff0c\u65e2\u7136\u4ed6\u4e5f\u53ea\u80fd\u505a $O(\\log ^ 5 V)$ \u90a3\u5728\u5f53\u4eca\u7b97\u6cd5\u7ade\u8d5b\u9886\u57df\u8fd8\u662f\u5f88\u96be\u7528\u5230\uff0c\u5c31\u8fd8\u662f\u5148\u5495\u5495\u5495\u5427\uff08\n\n# \u751f\u65e5\u6096\u8bba\n\n\u8003\u8651\u4e00\u4e2a\u5927\u5c0f\u4e3a $k$ \u7684\u4eba\u7fa4\u4e2d\uff0c\u5176\u4e2d\u81f3\u5c11\u6709\u4e24\u4e2a\u751f\u65e5\u76f8\u540c\u4eba\u7684\u6982\u7387\u662f\u591a\u5c11\u3002\n\n\u7528\u666e\u901a\u7684\u671f\u671b\u6982\u7387\u6c42\u89e3\u65b9\u6cd5\uff0c\u6c42\u89e3 $P(A)$ \u8868\u793a\u4eba\u7fa4\u4e2d\u65e0\u751f\u65e5\u76f8\u540c\u7684\u4e00\u5bf9\u4eba\u7684\u6982\u7387\uff0c\u663e\u7136\u662f $P(A) = \\prod_{i = 1} ^ k \\frac{365 - i + 1}{365}$\uff0c\u8fdb\u884c\u503c\u7684\u5e26\u5165\u8ba1\u7b97\u53ef\u4ee5\u53d1\u73b0\u5728 $60$ \u5de6\u53f3\u65f6 $P(A)$ \u5df2\u7ecf\u4e0b\u964d\u5230 $0.0001$ \u5de6\u53f3\u4e86\uff0c\u800c $1 - P(A)$ \u5373\u4e24\u4eba\u751f\u65e5\u76f8\u540c\u7684\u6982\u7387\u5c31\u5f88\u5927\u4e86\u3002\n\n\u7ecf\u8ba1\u7b97\uff0c\u5bf9\u4e8e\u4efb\u610f\u7684 $k$\uff0c\u8be5\u95ee\u9898\u5728 $\\sqrt k$ \u7684\u65f6\u5019\u6982\u7387\u5c31\u5f88\u5927\u4e86\u3002\n\n# Pollard rho \u7b97\u6cd5\u539f\u7406\n\n\u8be5\u7b97\u6cd5\u53ef\u7528\u4e8e\u89e3\u51b3\u4e00\u4e2a**\u5408\u6570 $n$**\uff0c\u5176\u6700\u5927\u7684\u8d28\u56e0\u5b50\u3002\n\n\u9996\u5148\u5f15\u5165\u4e00\u4e2a\u6570\u5b66\u6a21\u578b\uff1a\u6784\u9020\u51fd\u6570 $f(x) = (x ^ 2 + c) \\pmod n$\u3002\n\n\u6784\u9020\u5e8f\u5217\uff0c\u968f\u673a\u9009\u53d6 $x_1$\uff0c\u5e76\u4e14\u4ee4 $\\forall i \\geq 2,x_i = f(x_{i - 1})$\u3002\n\n\u8003\u8651\u8be5\u5e8f\u5217\u7684\u671f\u671b\u5faa\u73af\u8282\u957f\u3002\u4e0d\u96be\u53d1\u73b0\u5982\u679c\u51fa\u73b0\u4e86 $x_i = x_j,i \\not = j$ \u7684\u60c5\u51b5\u51fa\u73b0\u4e00\u5b9a\u51fa\u73b0\u4e86\u73af\u3002\n\n\u5c06\u5e8f\u5217\u62bd\u8c61\u5316\uff0c\u53ef\u4ee5\u53d1\u73b0\u5b83\u957f\u6210\u201c\u03c1\u201d\u7684\u6837\u5b50\uff0c\u8fd9\u4e5f\u662f\u8fd9\u4e2a\u7b97\u6cd5\u7684\u5f97\u540d\u3002\n\n\u6839\u636e\u4e0a\u8ff0\u7684\u751f\u65e5\u6096\u8bba\u95ee\u9898\u7684\u63a2\u8ba8\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\u73af\u957f\u4e0e\u5c3e\u957f\u7684\u671f\u671b\u90fd\u662f $\\sqrt n$\u3002\n\n\u53d6 $n$ \u7684\u4e00\u4e2a\u8d28\u56e0\u5b50 $p$\u3002\n\n\u63a5\u7740\u6211\u4eec\u7ee7\u7eed\u6784\u9020\u4e00\u4e2a\u6620\u5c04\u5e8f\u5217\uff0c$y_i = x_i \\pmod p$\u3002\n\n\u6784\u9020\u51fd\u6570 $g(x) = (x ^ 2 + c) \\pmod p$\n\n\u7531\u4e8e $p < n$\uff0c\u6240\u4ee5 $y_i$ \u4e5f\u53ef\u4ee5\u6784\u9020\u9012\u63a8\u5f0f $y_i = g(y_{i - 1})$\u3002\n\n\u548c\u4e0a\u8ff0\u60c5\u51b5\u4e00\u6837\uff0c$y$ \u5e8f\u5217\u7684\u73af\u957f\u4e0e\u5c3e\u957f\u7684\u671f\u671b\u90fd\u662f $\\sqrt p$\u3002\n\n\u6211\u4eec\u8981\u7528 $y$ \u5e8f\u5217\u5e72\u4ec0\u4e48\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u82e5 $y_i = y_j,i \\not = j$\uff0c\u5219\uff1a\n\n- $x_i \\equiv x_j \\pmod p$\n\n- $p\\mid|x_i-x_j|$\n\n\u901a\u8fc7\u8ba1\u7b97 $\\gcd(|x_i - x_j|,n)$ \u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u4e00\u4e2a\u81f3\u5c11\u5305\u542b\u4e86\u8d28\u56e0\u5b50 $p$ \u7684\u6570 $z$\uff0c\u5bf9\u4e8e\u672c\u9898\u800c\u8a00\u82e5 $z$ \u662f\u8d28\u6570\u8003\u8651\u8d21\u732e\u7b54\u6848\uff0c\u5426\u5219\u6211\u4eec\u5c31\u53ef\u4ee5\u9012\u5f52\u8ba1\u7b97 $z$ \u4e0e $\\frac{n}{z}$ \u7684\u6700\u5927\u8d28\u56e0\u5b50\u3002\n\n\u63a5\u7740\u6211\u518d\u7b80\u8ff0\u8be5\u7b97\u6cd5\u7684\u4e3b\u8981\u6d41\u7a0b\uff0c\u4f1a\u66f4\u65b9\u4fbf\u7406\u89e3\u4e00\u4e9b\uff1a\u5148\u968f\u673a $x_1$ \u6784\u9020 $x$ \u5e8f\u5217\uff0c\u63a5\u7740\u5f97\u51fa\u6784\u9020\u7684 $y$ \u5e8f\u5217\uff0c\u6211\u4eec\u8003\u8651\u4f7f\u7528\u4e24\u4e2a\u6307\u9488 $a,b$ \u4f7f\u4e24\u6307\u9488\u4fdd\u6301 $b = 2a$ \u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u6bcf\u6b21\u770b $d = \\gcd(|x_a - x_b|,n)$ \u662f\u4e0d\u662f $1$\uff0c\u4e0d\u662f\u7684\u8bdd\u5c31\u76f4\u63a5\u628a\u8fd9\u4e2a $d$ \uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a $n$ \u7684\u56e0\u6570\u62ff\u51fa\u6765\u5411\u4e0a\u8ff0\u90a3\u6837\u76f4\u63a5\u8d21\u732e\u6216\u9012\u5f52\u8ba1\u7b97\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u8fd9\u6837\u505a\uff0c\u4e00\u5b9a\u53ef\u4ee5\u5728 $a$ \u5927\u5c0f\u4e3a\u73af\u957f\u7684 $1 \\sim 3$ \u500d\u65f6\u627e\u5230\u8fd9\u4e2a\u73af\u5e76\u4e14\u628a\u8fd9\u4e2a $d$ \u627e\u51fa\u6765\uff0c\u4e5f\u5c31\u662f\u8bf4 **$y$ \u5e8f\u5217\u662f\u4e00\u4e2a\u9690\u6027\u7684\u5e8f\u5217**\uff0c\u662f\u6211\u4eec\u5e76\u6ca1\u6709\u76f4\u63a5\u6784\u9020\u51fa\u6765\u7684\u3002\n\n\u663e\u7136\u5bf9 $n$ \u505a\u4e00\u6b21\u4e0a\u8ff0\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8bb0\u4e3a $c(n)$\uff0c\u5219 $c(n) = \\sqrt p$\uff0c\u5176\u4e2d $p$ \u5728\u671f\u671b\u4e0a\u662f $n$ \u7684\u6700\u5c0f\u8d28\u56e0\u5b50\uff0c\u56e0\u4e3a\u671f\u671b\u4e0b\u7b2c\u4e00\u4e2a\u627e\u5230\u7684 $p$ \u5b83\u7684 $y$ \u5e8f\u5217\u7684\u5927\u5c0f\u5e94\u8be5\u662f\u5c3d\u91cf\u5c0f\u7684\uff0c\u6240\u4ee5\u671f\u671b\u627e\u5230\u7684\u5c31\u662f\u6700\u5c0f\u7684\u8d28\u56e0\u5b50\u3002\n\n\u6839\u636e\u4e3b\u5b9a\u7406\uff0c\u6b64\u9898\u8fd9\u6837\u7684\u505a\u6cd5\u662f $T(n) = c(n) + T(\\frac{n}{p}) + T(p)$ \u6700\u540e\u7684\u6570\u91cf\u7ea7\u4ecd\u7136\u662f $c(n)$\u3002\n\n\u540c\u65f6\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u4e0a\u5b58\u5728 $O(n ^ {\\frac{1}{4}})$ \u4ee5\u53ca $O(\\sqrt p)$ \u4e24\u79cd\u8bf4\u6cd5\uff1a\u56e0\u4e3a\u5728\u4f7f\u7528 Miller_Rabin \u5224\u7d20\u540e\u8be5\u6570\u662f\u4e00\u4e2a\u5408\u6570\uff0c\u6240\u4ee5\u5176\u5b58\u5728\u7684\u6700\u5c0f\u8d28\u56e0\u5b50\u4e00\u5b9a\u5728 $\\sqrt n$ \u4ee5\u5185\uff0c\u53ef\u4ee5\u7b97\u6210 $O(n ^ {\\frac{1}{4}})$\u3002\u5f53\u7136\u4e25\u683c\u4e0a\u6765\u8bf4\u6211\u8fd8\u662f\u66f4\u503e\u5411\u4e8e $O(\\sqrt p)$ \u8fd9\u79cd\u8bf4\u6cd5\u3002\n\n# Pollard rho \u7b97\u6cd5\u4f18\u5316\n\n\u663e\u7136\u7684\u662f\u7531\u4e8e\u8981\u6c42 $\\gcd$\uff0c\u6240\u4ee5\u8fd9\u4e2a\u7b97\u6cd5\u5e38\u6570\u8fd8\u662f\u7565\u5927\u3002\n\n\u89c2\u5bdf\u5230\u6211\u4eec\u5e76\u6ca1\u6709\u5fc5\u8981\u6bcf\u6b21\u90fd\u505a\u4e00\u6b21 $\\gcd$\uff0c\u4e0d\u59a8\u5c06\u64cd\u4f5c\u5206\u5757\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5757\u8ba1\u7b97 $e = \\prod |x_a - x_b| \\pmod n$\u3002\n\n\u82e5\u4e00\u4e2a\u5757\u5185\u5b58\u5728\u4e00\u6b21\u679a\u4e3e\u7684 $\\gcd(|x_a - x_b|,n) \\not = 1$\uff0c\u663e\u7136 $\\gcd((\\prod |x_a - x_b|),n) \\not = 1$\uff0c\u5219\uff1a\n\n- $\\gcd((\\prod |x_a - x_b|),n) = \\gcd((n,\\prod |x_a - x_b|)\\pmod n) = \\gcd(e , n)$\n\n\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u5757\u7684 $e$ \u7edf\u8ba1\u51fa\u6765\u518d\u8ba1\u7b97\u4e00\u6b21 $\\gcd$ \u662f\u53ef\u4ee5\u4fdd\u8bc1\u7b54\u6848\u7684\u6709\u89e3\u6027\uff0c\u5e76\u4e14\u8fd0\u884c\u65f6\u95f4\u4e5f\u8d8b\u8fd1\u4e8e $\\sqrt p$\u3002\n\n\u5c06\u5757\u957f\u8c03\u6210 $128$ \u5728\u5927\u91cf\u6570\u636e\u4e0b\u8fd0\u884c\u6548\u7387\u6bd4\u8f83\u9ad8\u3002\n\n\u4ee5\u4e0b\u662f\u5b9e\u73b0\u4ee3\u7801\u3002\n\n```cpp\nstatic std::mt19937 MoBaiXHR;\ninline ll F(ll x,ll c,ll MOD){return (ONE * x * x % MOD + c) % MOD;}\ninline ll ABS(ll x){if(x < 0) return -x;return x;}\nll gcd(ll a,ll b)\n{\n\tif(!b) return a;\n\treturn gcd(b , a % b);\n}\ninline ll pr(ll n)\n{\n\tif(n == 4) return 2;\n\tstd::uniform_int_distribution<ll> Rand(3 , n - 1);\n\tll x = Rand(MoBaiXHR) , y = x , c = Rand(MoBaiXHR);\n\tx = F(x , c , n) , y = F(F(y , c , n) , c , n);\n\tfor(int lim = 1 ; x != y ; lim = min(lim << 1 , 128))\n\t{\t\n\t\tll cnt = 1;\n\t\tfor(int i = 0 ; i < lim ; i ++) \n\t\t{\n\t\t\tcnt = ONE * cnt * ABS(x - y) % n;\n\t\t\tif(!cnt) break;\n\t\t\tx = F(x , c , n) , y = F(F(y , c , n) , c , n);\n\t\t}\n\t\tll d = gcd(cnt , n);\n\t\tif(d != 1) return d;\n\t}\n\treturn n;\n}\n```\n\u6700\u540e\u6b64\u9898\u603b\u4ee3\u7801\uff1a\n```cpp\n#include \"bits/stdc++.h\"\nusing namespace std;\n#define ll long long\nconst __int128 ONE = 1;\nll qpow(ll a,ll b,ll mod)\n{\n\tll res = 1;\n\twhile(b)\n\t{\n\t\tif(b & 1) res = ONE * res * a % mod;\n\t\ta = ONE * a * a % mod;\n\t\tb = b >> 1;\n\t}\n\treturn res;\n}\nint Suk[25]={0,2,3,5,7,11,13,17,19,23,29,31,37};\ninline bool chk(ll n,ll a,ll b,ll x) \n{\n    ll v = qpow(x , a , n);\n    if (v == 1) return 1;\n    int j = 1;\n    while(j <= b)\n    {\n    \tif(v == n - 1) break;\n\t\tv = ONE * v * v % n;\n\t\tj ++;\n\t}\n    if (j > b) return 0;\n    return 1;\n}\ninline bool mr(ll n)\n{\n\tif(n < 3 || n % 2 == 0) return n == 2;\n\tif(n > 37)\n\t{\n\t\tll a = n - 1 , b = 0;\n\t\twhile(a % 2 == 0) a >>= 1 , b ++;\n\t\tfor(int i = 1 ; i <= 12 ; i ++) if(!chk(n , a ,  b , Suk[i])) return 0;\n\t\treturn 1;\n\t}\n\telse\n\t{\n\t\tfor(int i = 1 ; i <= 12 ; i ++) if(n == Suk[i]) return 1;\n\t\treturn 0;\n\t}\n}\nstatic std::mt19937 MoBaiXHR;\ninline ll F(ll x,ll c,ll MOD){return (ONE * x * x % MOD + c) % MOD;}\ninline ll ABS(ll x){if(x < 0) return -x;return x;}\nll gcd(ll a,ll b)\n{\n\tif(!b) return a;\n\treturn gcd(b , a % b);\n}\ninline ll pr(ll n)\n{\n\tif(n == 4) return 2;\n\tstd::uniform_int_distribution<ll> Rand(3 , n - 1);\n\tll x = Rand(MoBaiXHR) , y = x , c = Rand(MoBaiXHR);\n\tx = F(x , c , n) , y = F(F(y , c , n) , c , n);\n\tfor(int lim = 1 ; x != y ; lim = min(lim << 1 , 128))\n\t{\t\n\t\tll cnt = 1;\n\t\tfor(int i = 0 ; i < lim ; i ++) \n\t\t{\n\t\t\tcnt = ONE * cnt * ABS(x - y) % n;\n\t\t\tif(!cnt) break;\n\t\t\tx = F(x , c , n) , y = F(F(y , c , n) , c , n);\n\t\t}\n\t\tll d = gcd(cnt , n);\n\t\tif(d != 1) return d;\n\t}\n\treturn n;\n}\nll ans;\ninline void MAX(ll z){if(z > ans) ans = z;}\nvoid dfs(ll n)//\u975e\u8d28\u6570 \n{\n\tll d = pr(n);\n\twhile(d == n) d = pr(n);\n\tll d2 = n / d;\n\tif(mr(d)) MAX(d);\n\telse dfs(d);\n\tif(mr(d2)) MAX(d2);\n\telse dfs(d2);\n}\nll getans(ll x)\n{\n\tif(mr(x)) return x;\n\tans = 0;\n\tdfs(x);\n\treturn ans;\n}\nint main()\n{\n\tsrand(time(0));\n\tint T;scanf(\"%d\",&T);\n\twhile(T --)\n\t{\n\t\tll x;scanf(\"%lld\",&x);\n\t\tll res = getans(x);\n\t\tif(x == res) puts(\"Prime\");\n\t\telse printf(\"%lld\\n\",res);\n\t}\n\treturn 0;\n}\n```\n# \u603b\u7ed3\n\n\u501f\u52a9 Miller_Rabin&Pollard Rho\uff0c\u6211\u4eec\u5c31\u6709\u4e86\u5728 OI \u754c\uff0c\u8fd1\u4e4e\u786e\u5b9a\u6027\u505a\u6cd5\u7684\u5feb\u901f\u5224\u7d20\u548c\u6700\u503c\u8d28\u56e0\u5b50\u6c42\u89e3\u7684\u505a\u6cd5\uff0c\u5176\u80cc\u540e\u8574\u85cf\u7684\u968f\u673a\u601d\u60f3\u662f\u8fd1\u51e0\u5e74\u5728 CF \u4e0a\u5f88\u6d41\u884c\u7684\u51fa\u9898\u98ce\u5411\u3002\n\n\u56de\u9996\u4e00\u5e74\u524d\u7684 [NOId2t1](https://www.luogu.com.cn/problem/P7738)\uff0c\u968f\u673a\u5728\u4e2d\u56fd\u7684\u4fe1\u606f\u5b66\u7ade\u8d5b\u9886\u57df\u4e5f\u5f00\u59cb\u9010\u6e10\u53d1\u5c55\u3002\n\n",
        "postTime": 1656580284,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u5c31\u5728\uff0c\u521a\u521a\u5f00\u59cb\u719f\u6089\u8fd9\u4e2a\u57ce\u5e02\u7684\u6e29\u5ea6\u7684\u65f6\u5019\uff0c\u6211\u613f\u4e3a\u4f60\u6d41\u6cea"
    },
    {
        "content": "# Pollard-Rho\u7b97\u6cd5\u6c42\u6700\u5927\u8d28\u56e0\u6570\nRollard-Rho\u7b97\u6cd5\u7684\u6838\u5fc3\u5c31\u662f\uff0c\u4f7f\u7528\u5224\u65ad\u8d28\u6570\u5f88\u5feb\u7684Miller-Rabin\u7b97\u6cd5\u5224\u65ad\u8d28\u6570\uff0c\u5047\u5982\u662f\u8d28\u6570\u5c31\u8fd4\u56de\uff0c\u53cd\u4e4b\u731c\u4e00\u4e2a\u56e0\u6570\u3002\n\n\u9996\u5148\u7ed9\u51faMiller-Rabin\u7684\u677f\u5b50\uff1a\n```cpp\n#define li inline\n#define ll long long\n#define re register\nnamespace Miller_Rabin\n{\n\tconst int Pcnt=12;\n\tconst ll p[Pcnt]={2,3,5,7,11,13,17,19,61,2333,4567,24251};\n\tli ll pow(re ll a,re ll b,re ll p)\n\t{\n\t\tre ll ans=1;\n\t\tfor(;b;a=a*a%p,b>>=1)if(b&1)ans=ans*a%p;\n\t\treturn ans;\n\t}\n\tli bool check(re ll x,re ll p)\n\t{\n\t\tif(x%p==0||pow(p%x,x-1,x)^1)return true;\n\t\tre ll t,k=x-1;\n\t\twhile((k^1)&1)\n\t\t{\n\t\t\tt=pow(p%x,k>>=1,x);\n\t\t\tif(t^1&&t^x-1)return true;\n\t\t\tif(!(t^x-1))return false;\n\t\t}return false;\n\t}\n\tinline bool MR(re ll x)\n\t{\n\t\tif(x<2)return false;\n\t\tfor(re int i=0;i^Pcnt;++i)\n\t\t{\n\t\t\tif(!(x^p[i]))return true;\n\t\t\tif(check(x,p[i]))return false;\n\t\t}return true;\n\t}\n}\n```\np\u6570\u7ec4\u662f\u6211\u4eec\u9009\u51fa\u6765\u7684\u8d28\u6570\uff0cpow\u662f\u5feb\u901f\u5e42\uff0c\u63a5\u4e0b\u6765\u5177\u4f53\u8bf4check\u5728\u5e72\u561b\u3002\n\n\u7b2c\u4e00\u4e2a\uff1a\n```cpp\nif(x%p==0||pow(p%x,x-1,x)^1)return true;\n```\n\u7b2c\u4e00\u4e2a\u5c31\u662f\u5224\u65ad\u500d\u6570\uff0c\u6ca1\u5565\u597d\u8bf4\u7684\u3002\u7b2c\u4e8c\u4e2a\u5c31\u662f\u8d39\u9a6c\u5c0f\u5b9a\u7406\uff0c\u56e0\u4e3a\u5047\u5982x\u662f\u8d28\u6570\u7684\u8bdd\u7ed3\u679c\u4e00\u5b9a\u662f1\uff0c\u800c\u4e0d\u662f1\u7684\u8bdd\u5c31\u4e00\u5b9a\u4e0d\u662f\u8d28\u6570\u3002\n\n\u90a3\u4e3a\u4ec0\u4e48\u540e\u9762\u8fd8\u6709\u5462\uff1f\u56e0\u4e3a\u6709\u4e00\u4e9b\u7384\u5b66\u7684\u60c5\u51b5\u4e0b\u4e5f\u4f1a\u5f97\u52301\u3002\u6bd4\u59825\u548c4\u3002\n\n\u540e\u9762\u6bcf\u6b21\u8ba1\u7b97\u7684\u662f\uff1a\n```cpp\nt=pow(p%x,k>>=1,x);\nif(t^1&&t^x-1)return true;\nif(!(t^x-1))return false;\n```\n\u8fd9\u91cc\u8981\u7528\u5230\u4e8c\u6b21\u63a2\u6d4b\u5b9a\u7406\uff1a\n\n\u5047\u5982$ x^2 \\equiv 1(mod $ $ p)$ \uff0c\u90a3\u4e48\u8981\u4e48$ x \\equiv 1 (mod $ $  p) $\uff0c\u8981\u4e48$ x \\equiv p-1 (mod $ $ p) $\uff0cp\u4e3a\u8d28\u6570\u3002\n\n\u8bc1\u660e\u5f88\u7b80\u5355\uff0c\u53f3\u8fb9\u5e73\u65b9\u5c31\u884c\u4e86\u3002\n\n\u5047\u5982t\u4e0d\u4e3a1\u5e76\u4e14t\u4e0d\u4e3ax-1\uff0c\u56e0\u4e3a\u6a21\u6570\u662fx\uff0c\u6240\u4ee5\u80af\u5b9a\u4e0d\u662f\u8d28\u6570\uff0c\u8fd4\u56detrue\u3002\n\n\u5047\u5982t\u662fx-1\uff0c\u90a3\u4e48\u5c31\u662f\u8d28\u6570\uff0c\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u3002\n\n\u7136\u540e\u770bMR\u51fd\u6570\uff1a\n```cpp\ninline bool MR(re ll x)\n{\n\tif(x<2)return false;\n\tfor(re int i=0;i^Pcnt;++i)\n\t{\n\t\tif(!(x^p[i]))return true;\n\t\tif(check(x,p[i]))return false;\n\t}return true;\n}\n```\n\u90fd\u5f88\u597d\u7406\u89e3\uff0c\u5c31\u4e0d\u591a\u8bf4\u4e86\u3002\n# \u4e0b\u9762\u8fdb\u5165Pollard-Rho\u7684\u90e8\u5206\n\u6700\u524d\u9762\u8bf4\u8fc7\uff0cPR\u7684\u6838\u5fc3\u601d\u60f3\u5c31\u662f\u731c\u4e00\u4e2a\u6570\uff0c\u770b\u770b\u662f\u5426\u662fx\u7684\u56e0\u6570\u3002\n\n\u5148\u653e\u4ee3\u7801\uff1a\n```cpp\nnamespace Pollard_Rho\n{\n\t#define Rand(x) (1ll*rand()*rand()%(x)+1)\n\tli ll gcd(const ll a,const ll b){return b?gcd(b,a%b):a;}\n\tli ll mul(const re ll x,const re ll y,const re ll X)\n\t{\n\t\tll k=(1.0L*x*y)/(1.0L*X)-1,t=x*y-k*X;\n\t\twhile(t<0)t+=X;return t;\n\t}\n\tli ll PR(const re ll x,const re ll y)\n\t{\n\t\tre int t=0,k=1;re ll v0=Rand(x-1),v=v0,d,s=1;\n\t\twhile(true)\n\t\t{\n\t\t\tv=(mul(v,v,x)+y)%x,s=mul(s,abs(v-v0),x);\n\t\t\tif(!(v^v0)||!s)return x;\n\t\t\tif(++t==k){if((d=gcd(s,x))^1)return d;v0=v,k<<=1;}\n\t\t}\n\t}\n\tli void Resolve(re ll x,re ll&ans)\n\t{\n\t\tif(!(x^1)||x<=ans)return;\n\t\tif(Miller_Rabin::MR(x)){if(ans<x)ans=x;return;}\n\t\tre ll y=x;while((y=PR(x,Rand(x)))==x);while(!(x%y))x/=y;\n\t\tResolve(x,ans);Resolve(y,ans);\n\t}\n\tli ll check(ll x)\n\t{\n\t\tre ll ans=0;Resolve(x,ans);\n\t\treturn ans;\n\t}\n}\n```\ngcd\u662f\u6700\u5927\u516c\u7ea6\u6570\uff0cmul\u662f\u9f9f\u901f\u4e58\uff0c\u90fd\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u3002\n\n\u4e0b\u9762\u6765\u770bPR\u51fd\u6570\uff1a\n```cpp\nli ll PR(const re ll x,const re ll y)\n{\n\tre int t=0,k=1;re ll v0=Rand(x-1),v=v0,d,s=1;\n\twhile(true)\n\t{\n\t\tv=(mul(v,v,x)+y)%x,s=mul(s,abs(v-v0),x);\n\t\tif(!(v^v0)||!s)return x;\n\t\tif(++t==k){if((d=gcd(s,x))^1)return d;v0=v,k<<=1;}\n\t}\n}\n```\nv0\u662f\u968f\u673a\u9009\u7684\u4e00\u4e2a\u6570\uff0c\u6ca1\u9519\uff0c\u968f\u673a\u9009\u7684\u3002\n\n\u7136\u540ev\u7684\u7b97\u6cd5\u662f\uff1a\n\n$ v_i=(v_{i-1}^2+t) $%$x $,\u77e5\u9053$ v $\u548c$ v0 $\u76f8\u540c\u4e3a\u6b62\uff0ct\u662f\u968f\u673a\u7684\u4e00\u4e2a\u6570\u3002\n\n\u7136\u540e\u5faa\u73af\u5185\u90e8\u5c31\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u4e86\uff0c\u5185\u90e8\u5c31\u662f\u4e0d\u65ad\u5730\u731c\u3002\u6700\u540e\u7684if\u662f\u4e2a\u4f18\u5316\uff0c\u4f7f\u7528\u500d\u589e\u7684\u4f18\u5316\u3002\n\n\u6765\u770b\u770b\u7b97\u6cd5\u7684\u53e6\u4e00\u4e2a\u91cd\u70b9\uff1aResolve\u51fd\u6570\uff1a\n```cpp\nli void Resolve(re ll x,re ll&ans)\n{\n\tif(!(x^1)||x<=ans)return;\n\tif(Miller_Rabin::MR(x)){if(ans<x)ans=x;return;}\n\tre ll y=x;while((y=PR(x,Rand(x)))==x);while(!(x%y))x/=y;\n\tResolve(x,ans);Resolve(y,ans);\n}\n```\n\u7b2c\u4e00\u4e2aif\u5176\u5b9e\u5c31\u662f\u526a\u679d\uff0c\u5f53$ x=1 $\u65f6\u5230\u8fbe\u5e95\u5c42\uff0c\u7ed3\u675f\u9012\u5f52\uff1b\u5f53$ x \\leq ans $\u65f6\u4e0d\u53ef\u80fd\u5206\u89e3\u51fa\u6765\u6bd4ans\u8fd8\u5927\u7684\u56e0\u6570\uff0c\u4e5f\u7ed3\u675f\u3002\n\n\u7b2c\u4e8c\u4e2aMiller-Rabin\u5c31\u662f\u770bx\u662f\u5426\u662f\u8d28\u6570\uff0c\u5982\u679c\u662f\u7684\u8bdd\u90a3\u4e48\u5c31\u662f\u5176\u4e2d\u4e00\u79cd\u8d28\u56e0\u6570\uff0c\u800c\u4e14\u4e5f\u4e0d\u80fd\u5206\u89e3\u56e0\u6570\u4e86\uff0creturn\u3002\n\n\u7b2c\u4e09\u884c\uff1a\n```cpp\nre ll y=x;while((y=PR(x,Rand(x)))==x);while(!(x%y))x/=y;\n```\n\u5229\u7528PR\u627e\u56e0\u6570\uff0c\u4e5f\u6ca1\u5565\u597d\u8bf4\u7684\u3002\u4e0d\u8fc7\u540e\u9762\u8fd8\u6709\u4e00\u4e2awhile\uff0c\u662f\u53ef\u80fdx\u5305\u542b\u591a\u4e2ay\uff0c\u8981\u5168\u90e8\u90fd\u9664\u53bb\u3002\n\n\u6700\u540e\u4e00\u6b65\u4e5f\u5f88\u597d\u7406\u89e3\uff0c\u5206\u522b\u627e\u5404\u81ea\u7684\u56e0\u6570\u3002\n\n[\u8bc4\u6d4b\u8bb0\u5f55](https://www.luogu.com.cn/record/32198860)\n\n\u600e\u4e48\u5c31TLE\u4e86\u5462\uff1f\n\n\u56de\u5934\u770b\u4e86\u4e00\u773c\u6570\u636e\u8303\u56f4\uff0c$ 1 \\leq n \\leq 10^{18} $\uff0c\u7206long long\u4e86\u3002\n\n\u6240\u4ee5\u53ea\u8981\u628a\n```cpp\n#define ll long long\n```\n\u6539\u6210\n```cpp\n#define ll __int128\n```\n\u5c31\u597d\u4e86\u3002\u4e0d\u8fc7\u8f93\u5165\u7684\u65f6\u5019\u8bb0\u5f97\u8f93\u5165long long\u7c7b\u578b\u3002\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n#include<cstdlib>\n#include<cstdio>\n#include<ctime>\n#define li inline\n#define re register\n#define ll __int128\n#define abs(a) ((a)>0?(a):-(a))\nnamespace Miller_Rabin\n{\n\tconst int Pcnt=12;\n\tconst ll p[Pcnt]={2,3,5,7,11,13,17,19,61,2333,4567,24251};\n\tli ll pow(re ll a,re ll b,re ll p)\n\t{\n\t\tre ll ans=1;\n\t\tfor(;b;a=a*a%p,b>>=1)if(b&1)ans=ans*a%p;\n\t\treturn ans;\n\t}\n\tli bool check(re ll x,re ll p)\n\t{\n\t\tif(x%p==0||pow(p%x,x-1,x)^1)return true;\n\t\tre ll t,k=x-1;\n\t\twhile((k^1)&1)\n\t\t{\n\t\t\tt=pow(p%x,k>>=1,x);\n\t\t\tif(t^1&&t^x-1)return true;\n\t\t\tif(!(t^x-1))return false;\n\t\t}return false;\n\t}\n\tinline bool MR(re ll x)\n\t{\n\t\tif(x<2)return false;\n\t\tfor(re int i=0;i^Pcnt;++i)\n\t\t{\n\t\t\tif(!(x^p[i]))return true;\n\t\t\tif(check(x,p[i]))return false;\n\t\t}return true;\n\t}\n}\nnamespace Pollard_Rho\n{\n\t#define Rand(x) (1ll*rand()*rand()%(x)+1)\n\tli ll gcd(const ll a,const ll b){return b?gcd(b,a%b):a;}\n\tli ll mul(const re ll x,const re ll y,const re ll X)\n\t{\n\t\tll k=(1.0L*x*y)/(1.0L*X)-1,t=x*y-k*X;\n\t\twhile(t<0)t+=X;return t;\n\t}\n\tli ll PR(const re ll x,const re ll y)\n\t{\n\t\tre int t=0,k=1;re ll v0=Rand(x-1),v=v0,d,s=1;\n\t\twhile(true)\n\t\t{\n\t\t\tv=(mul(v,v,x)+y)%x,s=mul(s,abs(v-v0),x);\n\t\t\tif(!(v^v0)||!s)return x;\n\t\t\tif(++t==k){if((d=gcd(s,x))^1)return d;v0=v,k<<=1;}\n\t\t}\n\t}\n\tli void Resolve(re ll x,re ll&ans)\n\t{\n\t\tif(!(x^1)||x<=ans)return;\n\t\tif(Miller_Rabin::MR(x)){if(ans<x)ans=x;return;}\n\t\tre ll y=x;while((y=PR(x,Rand(x)))==x);while(!(x%y))x/=y;\n\t\tResolve(x,ans);Resolve(y,ans);\n\t}\n\tli long long check(ll x)\n\t{\n\t\tre ll ans=0;Resolve(x,ans);\n\t\treturn ans;\n\t}\n}\nsigned main()\n{\n\tsrand(20060926);//\u636e\u8bf4\u7528\u59b9\u5b50\u7684\u751f\u65e5\u505a\u79cd\u5b50\u4f1a\u6709\u795e\u79d8\u52a0\u6210\uff08\u5927\u96fe\uff09\n\tre int t;scanf(\"%d\",&t);long long re x,res;\n\tfor(;t;--t)\n\t{\n\t\tscanf(\"%lld\",&x);\n\t\tif((res=Pollard_Rho::check(x))^x)printf(\"%lld\\n\",res);\n\t\telse printf(\"Prime\\n\");\n\t}\n}\n```",
        "postTime": 1585322093,
        "uid": 160839,
        "name": "Prean",
        "ccfLevel": 7,
        "title": "\u6570\u8bba Pollard-Rho\u6a21\u677f P4718\u9898\u89e3"
    },
    {
        "content": "\u5728\u6211\u7684\u535a\u5ba2\u4e2d [\u9605\u8bfb](https://www.cnblogs.com/zhs1/p/14075926.html) \n\n### \u7b97\u6cd5\u7b80\u4ecb\nPollard-Rho \u4e3b\u8981\u7528\u4e8e\u8d28\u56e0\u6570\u5206\u89e3\uff0c\u662f\u4e00\u4e2a\u968f\u673a\u5316\u7b97\u6cd5\u3002\n### \u524d\u7f6e\u7b97\u6cd5\n[Miller-Rabin](https://www.cnblogs.com/zhs1/p/14043999.html)\n### \u4f2a\u968f\u673a\u51fd\u6570\n\u6b64\u7b97\u6cd5\u7528 $f_x=f_{x-1}^2+c \\bmod n$ \u751f\u6210\u968f\u673a\u6570\u7528\u4e8e\u5bfb\u627e\u8d28\u56e0\u6570\u3002\n\n\uff08\u5176\u4e2d\uff0c$f_1$ \u548c $c$ \u53ef\u4ee5\u968f\u673a\u751f\u6210\uff0c $n$ \u4e3a\u6b63\u5728\u5206\u89e3\u7684\u6570\uff09\n\n\u4f46\u662f\uff0c\u8fd9\u4e2a\u51fd\u6570\u4f1a\u4ea7\u751f\u73af\uff0c\u6240\u4ee5\u53eb\u4f2a\u968f\u673a\u51fd\u6570\u3002\n### \u5224\u73af\n\u8003\u8651\u7528\u4e24\u4e2a\u6307\u9488\uff0c\u4e00\u4e2a\u6bcf\u6b21\u8d70\u4e00\u6b65\uff0c\u53e6\u4e00\u4e2a\u6bcf\u6b21\u8d70\u4e24\u6b65\u3002\n\n\u5982\u679c\u4e24\u4e2a\u6307\u9488\u7684\u503c\u5728\u67d0\u4e00\u65f6\u523b\u76f8\u7b49\uff0c\u5219\u627e\u5230\u4e86\u73af\u3002\n\n\u56e0\u4e3a\u4e24\u4e2a\u6307\u9488\u4f4d\u7f6e\u7684\u5dee\u6bcf\u6b21\u589e\u52a01\uff0c\u6240\u4ee5\u4e0d\u7528\u62c5\u5fc3\u627e\u4e0d\u5230\u73af\u3002\n### \u7b97\u6cd5\u4e3b\u4f53\n\u5982\u679c\u5f53\u524d\u7684\u6570\u662f\u8d28\u6570\uff0c\u8bb0\u5f55\u4e00\u4e0b\uff0c\u76f4\u63a5\u8fd4\u56de\u3002\n\n\u5224\u8d28\u6570\u53ef\u7528 Miller-Rabin \u5b9e\u73b0\u3002\n\n\u7528\u4e0a\u9762\u7684\u4f2a\u968f\u673a\u51fd\u6570\u751f\u6210 $f$ \u6570\u7ec4\u3002\n\n\u6839\u636e\u751f\u65e5\u6096\u8bba\uff0c\u968f\u673a\u4e24\u4e2a\u6570 $x$ \uff0c $y$ \uff0c\u4f7f\u5f97 $\\gcd(|x-y|,n)>1$ \u7684\u6982\u7387\u6bd4\u53ea\u968f\u673a\u4e00\u4e2a\u6570\u7684\u6982\u7387\u8981\u5927\u3002\n\n\u6240\u4ee5\uff0c\u7528\u5224\u73af\u4f7f\u7528\u7684\u4e24\u4e2a\u6307\u9488\u7684\u503c\u4f5c\u4e3a $x$ \uff0c $y$ \uff0c\n\n\u8bbe $d=\\gcd(|x-y|,n)$ \u3002\n\n\u82e5 $d>1$ \u4e14 $d<n$\uff0c\u5219\u9012\u5f52\u5904\u7406 $d$ \u548c $\\frac{n}{d}$ \u4e24\u4e2a\u90e8\u5206\u3002\n\n\u540c\u65f6\uff0c\u5982\u679c\u627e\u5230\u4e86\u73af\uff0c\u4e14\u8fd8\u6ca1\u6709\u627e\u5230\u5408\u6cd5\u7684\u56e0\u6570\uff0c\u5c31\u91cd\u65b0\u968f\u673a $f_1$ \u548c $c$ \u3002\n### \u73b0\u5728\u7684\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<cstdio>\n#include<ctime>\n#define int long long\n#define LD long double\n#define ull unsigned long long\nusing namespace std;\nint T,n,ans;\nint MUL(int a,int b,int p) //a*b%p\n{\n\tint x=(LD)a/p*b;\n\treturn ((ull)a*b-(ull)x*p+p)%p;\n}\nint POW(int a,int b,int p) //a^b%p\n{\n\tif(!b) return 1;\n\tif(b==1) return a;\n\tint sum=POW(a,b/2,p);\n\tif(b%2) return MUL(MUL(sum,sum,p),a,p);\n\treturn MUL(sum,sum,p);\n}\nint MAX(int x,int y)\n{\n\treturn x>y?x:y;\n}\nint ABS(int x)\n{\n\treturn x>0?x:-x;\n}\nint gcd(int x,int y)\n{\n\tif(!y) return x;\n\treturn gcd(y,x%y);\n}\nint f(int x,int c,int p)\n{\n\treturn (MUL(x,x,p)+c)%p;\n}\nbool MR(int x)\n{\n\tif(x==0||x==1) return false;\n\tif(x==2) return true;\n\tif(x%2==0) return false;\n\tint p=x-1,q=0;\n\twhile(p%2==0) q++,p/=2;\n\tfor(int i=1;i<=10;i++)\n\t{\n\t\tint a=rand()%(x-1)+1;\n\t\tif(POW(a,x-1,x)!=1) return false;\n\t\tint lst=1;\n\t\tfor(int j=0;j<q;j++)\n\t\t{\n\t\t\tint t=POW(a,(1ll<<j)*p,x);\n\t\t\tif(t==1&&lst!=1&&lst!=x-1) return false;\n\t\t\tlst=t;\n\t\t}\n\t\tif(lst!=1&&lst!=x-1) return false;\n\t}\n\treturn true;\n}\nint find(int x)\n{\n\tif(x%2==0) return 2;\n\tif(MR(x)) return x;\n\tint t=rand()%(x+1);\n\tint a=t,b=t;\n\tint c=rand()%(x+1);\n\twhile(1)\n\t{\n\t\ta=f(a,c,x),b=f(f(b,c,x),c,x);\n\t\tint d=gcd(ABS(a-b),x);\n\t\tif(d>1&&d<x) return d;\n\t\tif(a==b) return find(x);\n\t}\n}\nvoid PR(int x)\n{\n\tif(x<=1) return;\n\tif(MR(x))\n\t{\n\t\tans=MAX(ans,x);\n\t\treturn;\n\t}\n\tint y=find(x);\n\tPR(y),PR(x/y);\n}\nsigned main()\n{\n\tsrand(time(0));\n\tscanf(\"%lld\",&T);\n\twhile(T--)\n\t{\n\t\tscanf(\"%lld\",&n);\n\t\tif(MR(n)) puts(\"Prime\");\n\t\telse\n\t\t{\n\t\t\tans=0,PR(n);\n\t\t\tprintf(\"%lld\\n\",ans);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n### \u9ed1\u79d1\u6280 gcd\n\u4e0a\u9762\u7684\u4ee3\u7801\u56e0\u4e3a\u6548\u7387\u8fc7\u6162\u8fc7\u4e0d\u4e86\u6d1b\u8c37\u4e0a\u7684 [\u6a21\u677f\u9898](https://www.luogu.com.cn/problem/P4718)\u3002\n\n\u89c2\u5bdf\u5230\u4ee3\u7801\u4e2d\u4f1a\u4f7f\u7528\u5f88\u591a\u6b21 gcd \u51fd\u6570\uff0c\u6240\u4ee5\u8003\u8651\u4f18\u5316\u8ba1\u7b97 gcd \u7684\u65b9\u6cd5\u3002\n\n**\u65b0\u7b97\u6cd5**\n\n\u8bbe\u73b0\u5728\u8981\u8ba1\u7b97 $a$ \u548c $b$ \u4e24\u6570\u7684 gcd\u3002\n\n\u82e5 $a$ \u548c $b$ \u90fd\u662f\u5076\u6570\uff0c\u5219\u9012\u5f52\u8ba1\u7b97 $2 \\times gcd(\\frac{a}{2},\\frac{b}{2})$ \u3002\n\n\u82e5 $a$ \u662f\u5076\u6570\uff0c\u4e14 $b$ \u662f\u5947\u6570\uff0c\u5219\u9012\u5f52\u8ba1\u7b97 $gcd(\\frac{a}{2},b)$ \u3002\n\n\u82e5 $a$ \u662f\u5947\u6570\uff0c$b$ \u662f\u5076\u6570\u540c\u7406\u3002\n\n\u82e5 $a$ \u548c $b$ \u90fd\u662f\u5947\u6570\uff0c\u5219\u9012\u5f52\u8ba1\u7b97 $gcd(|a-b|,a)$ \u3002\n\n\u8bc1\u660e\uff1a\n\n\u8bbe\u539f\u6765 $a$ \uff0c $b$ \u7684 gcd \u4e3a $k$ \u3002\n\n\u5219 $a=kA$ \uff0c $b=kB$ \u3002\n\n$|a-b|=k|A-B|$ \u3002\n\n\u56e0\u4e3a $A$ \u4e0e $B$ \u5fc5\u7136\u4e92\u8d28\uff0c\n\n\u6240\u4ee5\uff0c\u73b0\u5728\u8981\u8bc1\u660e\u7684\u5c31\u662f $A$ \u4e0e $|A-B|$ \u4e92\u8d28\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u5148\u5047\u8bbe $A>B$ \uff0c\u53bb\u6389\u7edd\u5bf9\u503c\u3002\u76f8\u53cd\u7684\u60c5\u51b5\u7684\u8bc1\u660e\u4e5f\u662f\u7c7b\u4f3c\u7684\u3002\n\n\u8003\u8651\u53cd\u8bc1\u6cd5\u3002\n\n\u8bbe $A$ \u4e0e $A-B$ \u4e0d\u4e92\u8d28\uff0c\n\n\u5219 $A=qx$ \uff0c $A-B=qy$ \u3002\n\n\u5219 $B=A-(A-B)=qx-qy=q(x-y)$ \uff0c\u6240\u4ee5 $A$ \u4e0e $B$ \u4e0d\u4e92\u8d28\uff0c\u4e0d\u6210\u7acb\u3002\n\n\u6240\u4ee5\u524d\u9762\u7684\u9012\u5f52\u662f\u6210\u7acb\u7684\u3002\n\n\n\u628a\u539f\u7b97\u6cd5\u4e2d\u7684 gcd \u90e8\u5206\u6362\u6210\u8fd9\u79cd\u5199\u6cd5\uff0c\u5e76\u52a0\u4e0a\u4e00\u4e9b\u6bd4\u8f83\u5e38\u89c1\u7684\u5361\u5e38\u6280\u5de7\u5373\u53ef\u8f7b\u677e\u901a\u8fc7\u672c\u9898\u3002\n\n\u8d34\u4e00\u4e2a\u7528\u8fed\u4ee3\u5b9e\u73b0\u7684\u677f\u5b50\u3002\n```cpp\n//__builtin_ctzll(x) \u51fd\u6570\u7528\u4e8e\u6c42x\u5728\u4e8c\u8fdb\u5236\u4e2d\u672b\u5c3e0\u7684\u4e2a\u6570\nint gcd(int x,int y)\n{\n\tif(!x) return y;\n\tif(!y) return x;\n\tint t=__builtin_ctzll(x|y);\n\tx>>=__builtin_ctzll(x);\n\tdo\n\t{\n\t\ty>>=__builtin_ctzll(y);\n\t\tif(x>y) swap(x,y);\n\t\ty-=x;\n\t}while(y);\n\treturn x<<t;\n}\n```",
        "postTime": 1606962244,
        "uid": 186587,
        "name": "BBD186587",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4718 \u3010\u3010\u6a21\u677f\u3011Pollard-Rho\u7b97\u6cd5\u3011"
    },
    {
        "content": "## \u524d\u7f6e\u829d\u58eb\n### 1. \u8d39\u9a6c\u5c0f\u5b9a\u7406\n#### \u5185\u5bb9\n\u5bf9\u4e8e**\u4efb\u610f\u8d28\u6570** $p$ \u548c $a$\uff0c\u5176\u4e2d $p\\nmid a$\uff0c\u6ee1\u8db3\uff1a\n$$\na^{p-1}\\equiv 1\\pmod p\n$$\n\n#### \u8bc1\u660e\n\u6839\u636e\u88f4\u8700\u5b9a\u7406\uff0c\u53ef\u4ee5\u77e5\u9053 $\\{1\\dots n\\}$ \u4e0e $\\{a\\dots(an)\\}$ \u662f\u4e00\u4e00\u5bf9\u5e94\u7684\uff0c\u56e0\u6b64\uff1a\n$$\n\\begin{aligned}\n\\prod_{i=1}^{p-1}ia&\\equiv\\prod_{i=1}^{p-1}i&\\pmod p\\\\\na^{p-1}\\prod_{i=1}^{p-1}i&\\equiv\\prod_{i=1}^{p-1}i&\\pmod p\\\\\na^{p-1}&\\equiv1&\\pmod p\n\\end{aligned}\n$$\n\n#### \u62d3\u5c55\n\u8fd9\u4e2a\u5b9a\u7406\u5e76**\u6ca1\u6709**\u9006\u5b9a\u7406\uff0c\u6240\u4ee5**\u4e0d\u80fd**\u76f4\u63a5\u7528\u4e8e\u7d20\u6027\u68c0\u9a8c\u3002\u4f46\u662f\u503c\u7684\u6ce8\u610f\u7684\u662f\uff0c\u5b83\u80fd\u6392\u9664\u6389\u5f88\u5927\u4e00\u90e8\u5206\u5408\u6570\u3002\n\n### 2. \u4e8c\u6b21\u63a2\u6d4b\u5b9a\u7406\n#### \u5185\u5bb9\n\u5bf9\u4e8e**\u8d28\u6570** $p$ \u548c $a$\uff0c\u6709\u4ee5\u4e0b\u6027\u8d28\uff1a\n\n\u5982\u679c\u6ee1\u8db3\uff1a\n$$\na^2\\equiv1\\pmod p\n$$\n\u5219\u6709\uff1a\n$$\na\\equiv\\pm1\\pmod p\n$$\n\n#### \u8bc1\u660e\n~~\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5c31\u8ba9\u8bfb\u8005\u81ea\u884c\u8bc1\u660e\u4e86\u3002~~\n\n\u6839\u636e $a^2\\equiv1\\pmod p$\uff0c\u53ef\u4ee5\u77e5\u9053 $a^2-1=kp$\u3002\n\n\u7136\u540e\u6839\u636e\u5e73\u65b9\u5dee\u516c\u5f0f\u53ef\u5f97\uff1a$kp=(a+1)(a-1)$\u3002\n\n\u56e0\u4e3a $p$ \u662f**\u8d28\u6570**\uff0c\u6240\u4ee5 $a+1$ \u548c $a-1$ \u4e2d\uff0c**\u81f3\u5c11**\u6709\u4e00\u4e2a\u662f $p$ \u7684\u500d\u6570\u3002\n\n\u4e5f\u5c31\u662f $a\\equiv\\pm1\\pmod p$\u3002\n\n### 3. Miller Rabin \u7d20\u6027\u68c0\u9a8c\n#### \u7b97\u6cd5\u6d41\u7a0b\n\u5176\u5b9e\u5c31\u662f\u628a\u8d39\u9a6c\u5c0f\u5b9a\u7406\u548c\u4e8c\u6b21\u63a2\u6d4b\u5b9a\u7406\u7ed3\u5408\u4e86\u4e00\u4e0b\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a**\u5947\u6570** $n$\uff0c\u6211\u4eec\u4ee4 $n=2^km+1$\uff0c\u5176\u4e2d $m$ \u662f**\u5947\u6570**\u3002\n\n\u6211\u4eec\u5148**\u968f\u673a**\u4e00\u4e2a\u6570 $a$\uff0c\u8ba1\u7b97\u51fa $b=a^m$\u3002\n\n\u7136\u540e\u5c06 $b$ \u5e73\u65b9 $k$ \u6b21\uff0c\u6bcf\u6b21\u5e73\u65b9\u7684\u65f6\u5019\u7528\u4e8c\u6b21\u63a2\u6d4b\u5b9a\u7406\u5224\u65ad\u4e00\u4e0b\u3002\n\n\u7136\u540e\u7ecf\u8fc7 $k$ \u6b21\u5e73\u65b9\u7684 $b$ \u53d8\u6210\u4e86 $a^{p-1}$\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u53ef\u4ee5\u7528\u8d39\u9a6c\u5c0f\u5b9a\u7406\u5224\u65ad\u4e86\u3002\n\n#### \u6b63\u786e\u7387\n\u5047\u8bbe\u4f60\u968f\u673a\u4e86 $s$ \u6b21\uff0c\u90a3\u4e48\u5224\u65ad\u9519\u8bef\u7684\u6982\u7387\u5c31\u662f $\\frac{1}{4^s}$\u3002\n\n\u6240\u4ee5\u591a\u968f\u51e0\u6b21\u5c31\u53ef\u4ee5\u4e86\u3002\n\n#### \u62d3\u5c55\n\u5bf9\u4e8e OI \u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e0d\u968f\u673a\uff0c\u800c\u662f\u4f7f\u7528\u56fa\u5b9a\u7684\u6570\u6765\u7d20\u6027\u68c0\u9a8c\u3002\n\n\u5224\u65ad `int` \u8303\u56f4\u5185\u7684\u8d28\u6570\u53ea\u8981\u524d $4$ \u4e2a\u8d28\u6570\u3002\n\n\u5224\u65ad $10^{18}$ \u8303\u56f4\u5185\u7684\u8d28\u6570\u53ea\u8981\u524d $9$ \u4e2a\u8d28\u6570\u3002\n\n\u5224\u65ad `long long` \u8303\u56f4\u5185\u7684\u8d28\u6570\u53ea\u8981\u524d $10$ \u4e2a\u8d28\u6570\u3002\n\n\u63a5\u4e0b\u6765\u7ed9\u51fa\u672c\u9898\u8303\u56f4\u5185\uff08\u5373 $n\\le10^{18}$\uff09\u7684 Miller Rabin \u4ee3\u7801\uff1a\n\n```cpp\nusing ll = long long;\nll mul(ll a, ll b, ll mod){\n  ll r = a * b - mod * (ll)(1.L / mod * a * b);\n  return r - mod * (r >= mod) + mod * (r < 0);\n}\nll qpow(ll a, ll b, ll mod) {\n  ll res(1);\n  for (; b; b >>= 1, a = mul(a, a, mod))\n    if (b & 1) res = mul(res, a, mod);\n  return res;\n}\nbool is_prime(ll n) {\n  if (n <= 1) return false;\n  vector<ll> base = {2, 3, 5, 7, 11, 13, 17, 19, 23};\n  for (ll p : base) {\n    if (n == p) return true;\n    if (n % p == 0) return false;\n  }\n  ll m = (n - 1) >> __builtin_ctz(n - 1);\n  for (ll p : base) {\n    ll t = m, a = qpow(p, m, n);\n    while (t != n - 1 && a != 1 && a != n - 1)\n      a = mul(a, a, n), t *= 2;\n    if (a != n - 1 && t % 2 == 0) return false;\n  }\n  return true;\n}\n```\n\n\u503c\u7684\u4e00\u63d0\u7684\u662f\uff0c\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7684\u4e58\u6cd5\u6ca1\u6709\u4f7f\u7528 `int128`\uff0c\u800c\u662f\u4f7f\u7528\u4e86 `long double`\uff0c\u8fd9\u6837\u4f1a\u6781\u5927\u5f97\u63d0\u5347\u8fd0\u7b97\u6548\u7387\u3002\n\n\u800c\u4e14 `is_prime` \u51fd\u6570\u5e76\u6ca1\u6709\u5b8c\u5168\u6309\u7167\u4e4b\u524d\u7b97\u6cd5\u6d41\u7a0b\u6765\u5199\uff0c\u800c\u662f\u7a0d\u52a0\u6539\u52a8\uff0c\u4f46\u662f\u672c\u8d28\u4e0a\u662f\u76f8\u540c\u7684\u3002\n\n### 4. \u751f\u65e5\u6096\u8bba\n#### \u5185\u5bb9\n\u5728 $n$ \u4e2a\u6570\u4e2d\uff0c\u6bcf\u6b21\u968f\u673a\u9009\u53d6 $1$ \u4e2a\u6570\uff0c\u671f\u671b $O(\\sqrt n)$ \u6b21\u51fa\u73b0\u91cd\u590d\u7684\u6570\u3002\n\n#### \u8bc1\u660e\n~~\u4e0d\u592a\u4f1a~~\uff0c\u5927\u6982\u7528\u65af\u7279\u6797\u516c\u5f0f\u4f30\u7b97\u4e00\u4e0b\u3002\n\n## Pollard Rho\n### \u5bfb\u627e\u4e00\u4e2a\u6570\u7684\u771f\u56e0\u5b50\n\u9996\u5148\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a**\u5408\u6570** $n$ \u627e\u5230\u5b83\u7684\u4e00\u4e2a\u56e0\u5b50 $d$\uff0c\u6ee1\u8db3 $d\\mid n,1<d<n$\u3002\n\n#### \u5927\u81f4\u601d\u8def\n\u5bf9\u4e8e $n$ \u7684\u4e00\u4e2a**\u5947**\u8d28\u56e0\u5b50 $p$\uff0c\u6211\u4eec\u628a $0$ \u5230 $p-1$ \u4e2d\u6bcf\u4e2a\u6570 $x$ \u5411 $(x^2+1)\\bmod p$ \u8fde\u8fb9\uff0c\u8fd9\u6837\u6784\u6210\u4e86\u4e00\u4e2a\u57fa\u73af\u68ee\u6797\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u8fd9\u4e2a\u57fa\u73af\u68ee\u6797\u6709\u4e00\u4e9b\u6027\u8d28\uff1a\n1. \u9996\u5148\u6211\u4eec\u53ef\u4ee5\u628a $(x^2+1)\\bmod p$ \u770b\u4f5c\u662f\u968f\u673a\u7684\uff0c\u6240\u4ee5\u6839\u636e\u751f\u65e5\u6096\u8bba\uff0c\u6240\u6709\u7684\u73af\u5927\u5c0f\u90fd\u662f\u671f\u671b $O(\\sqrt p)$ \u7684\u3002\n2. \u518d\u89c2\u5bdf\u73af\u4e0a\u6302\u4e0b\u6765\u7684\u6811\uff0c\u53ef\u4ee5\u770b\u4f5c\u4e00\u68f5\u968f\u673a\u7684\u4e8c\u53c9\u6811\uff0c\u6240\u4ee5\u671f\u671b\u6811\u9ad8\u662f $O(\\log p)$ \u7684\u3002\n\n\u6211\u4eec\u8003\u8651\u4e24\u4e2a\u6307\u9488 $x$ \u548c $y$ \uff0c\u4e00\u5f00\u59cb\u6307\u5411\u540c\u4e00\u4e2a\u968f\u673a\u8282\u70b9\uff0c\u7136\u540e\u6bcf\u6b21 $x$ \u8d70 $1$ \u6b65\uff0c$y$ \u8d70 $2$ \u6b65\u3002\n\n\u7ecf\u8fc7 $O(\\log p)$ \u6b65 $x$ \u548c $y$ \u90fd\u4f1a\u5230\u8fbe\u73af\u4e0a\uff0c\u800c\u6839\u636e\u8ffd\u53ca\u95ee\u9898\u6700\u591a\u518d\u7ecf\u8fc7\u73af\u7684\u5927\u5c0f\u6b65\uff0c$x$ \u548c $y$ \u5c31\u5fc5\u5b9a\u4f1a\u91cd\u5408\uff0c\u4e5f\u5c31\u662f\u7ecf\u8fc7\u671f\u671b $O(\\sqrt p)$ \u6b65\uff0c$x$ \u548c $y$ \u5c31\u4f1a\u91cd\u5408\u3002\n\n\u6211\u4eec\u5c06 $x$ \u548c $y$ \u653e\u5728 $\\pmod n$ \u7684\u610f\u4e49\u4e0b\uff0c\u90a3\u4e48\u5c31\u662f\u7ecf\u8fc7\u671f\u671b $O(\\sqrt p)$ \u6b65\uff0c$p\\mid\\gcd(n,x-y)$\uff0c\u6b64\u65f6\u7684 $\\gcd$ \u8fd8\u4e0d\u80fd\u4f5c\u4e3a\u6700\u7ec8\u7ed3\u679c\uff0c\u56e0\u4e3a\u8fd8\u8981\u8003\u8651 $\\gcd=n$ \u7684\u60c5\u51b5\uff0c\u4f46\u662f\u8fd9\u79cd\u60c5\u51b5\u7684\u53d1\u751f\u6982\u7387\u5f88\u5c0f\uff0c\u6240\u4ee5\u76f4\u63a5\u91cd\u65b0\u9009\u62e9\u8d77\u59cb\u70b9\u5373\u53ef\u3002\n\n\u53e6\u5916\u7684\uff0c\u5bf9\u4e8e\u8d28\u56e0\u5b50 $2$ \u53ef\u80fd\u9700\u8981\u7279\u5224\u3002\n\n\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $O(\\sqrt{\\min\\{p}\\})$ \u7684\uff0c\u7136\u800c $n$ \u7684\u6700\u5c0f\u8d28\u56e0\u5b50 $p\\le \\sqrt n$\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u53ef\u4ee5\u770b\u4f5c\u662f $O(n^{\\frac14})$ \u7684\u3002\n\n#### \u4e00\u4e9b\u4f18\u5316\n\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u5757\u957f $M$\uff0c\u628a\u6bcf $M$ \u6b65\u7684 $x-y$ \u7d2f\u4e58\u8d77\u6765\uff0c\u4e00\u8d77\u53d6 $\\gcd$ \u5224\u65ad\uff0c\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u7d2f\u4e58\u8d77\u6765\u7684\u53d8\u91cf\u4f1a\u53d8\u4e3a $0$\uff0c\u5c31\u4e0d\u8981\u4e58\u4e0a\u53bb\uff0c$M$ \u4e00\u822c\u53d6 $256$ \u6216\u8005 $128$\uff0c\u4f46\u662f\u597d\u50cf\u6ca1\u6709\u4e00\u5b9a\u8981\u53d6 $2$ \u7684\u5e42\u6b21\u8fd9\u79cd\u8bf4\u6cd5\u3002\n\n\u5f53\u9047\u5230\u4e86 $x=y$ \u7684\u60c5\u51b5\uff0c\u8bf4\u660e\u8d70\u5b8c\u4e86\u6a21 $n$ \u610f\u4e49\u4e0b\u7684\u4e00\u5927\u5708\uff0c\u5176\u4ed6\u4f4d\u7f6e\u90fd\u662f $\\gcd(x-y,n)=1$\uff0c\u800c\u53ea\u6709\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a $\\gcd=n$\uff0c\u6240\u4ee5\u6211\u4eec\u518d\u968f\u53e6\u4e00\u4e2a\u8d77\u59cb\u70b9\u5373\u53ef\u3002\n\n### \u5206\u89e3\n\u76f4\u63a5\u9012\u5f52\uff0c\u627e\u56e0\u5b50\u524d\u5148\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u662f\u8d28\u6570\u5373\u53ef\u3002\n\n## \u4ee3\u7801\u5b9e\u4f8b\n```cpp\n/*\n* @Author: ftt2333\n* @Email: ftt2333@126.com\n* @LastEditTime: 2022-12-21 22:18:29\n*/\n\n#include <bits/stdc++.h>\nusing namespace std;\n#ifndef LOCAL\nvoid debug(...) { }\n#endif\n#define all(v) (v).begin(), (v).end()\nusing ll = long long;\nusing lll = __int128;\n\nmt19937_64 rnd(114514);\n\nll mul(ll a, ll b, ll mod){\n  ll r = a * b - mod * (ll)(1.L / mod * a * b);\n  return r - mod * (r >= mod) + mod * (r < 0);\n}\nll add(ll a, ll b, ll mod) {\n  a += b;\n  return a >= mod ? a - mod : a;\n}\nll sub(ll a, ll b, ll mod) {\n  a -= b;\n  return a < 0 ? a + mod : a;\n}\nll gcd(ll a, ll b) { return b ? gcd(b, a % b) : a; }\nll qpow(ll a, ll b, ll mod) {\n  ll res(1);\n  for (; b; b >>= 1, a = mul(a, a, mod))\n    if (b & 1) res = mul(res, a, mod);\n  return res;\n}\nbool is_prime(ll n) {\n  if (n <= 1) return false;\n  vector<ll> base = {2, 3, 5, 7, 11, 13, 17, 19, 23};\n  for (ll p : base) {\n    if (n == p) return true;\n    if (n % p == 0) return false;\n  }\n  ll m = (n - 1) >> __builtin_ctz(n - 1);\n  for (ll p : base) {\n    ll t = m, a = qpow(p, m, n);\n    while (t != n - 1 && a != 1 && a != n - 1)\n      a = mul(a, a, n), t *= 2;\n    if (a != n - 1 && t % 2 == 0) return false;\n  }\n  return true;\n}\nll get_factor(ll n) {\n  if (n % 2 == 0) return 2;\n  auto f = [&](ll x) { return add(mul(x, x, n), 1, n); };\n  ll x = 0, y = 0, tot = 0, p = 1, q, g;\n  for (ll i = 0; (i & 0xff) || (g = gcd(p, n)) == 1; i++, x = f(x), y = f(f(y))) {\n    if (x == y) x = tot++, y = f(x);\n    q = mul(p, sub(x, y, n), n);\n    if (q) p = q;\n  }\n  return g;\n}\n\nvector<ll> solve(ll n) {\n  if (n == 1) return {};\n  if (is_prime(n)) return {n};\n  ll d = get_factor(n);\n  auto v1 = solve(d), v2 = solve(n / d);\n  auto i1 = v1.begin(), i2 = v2.begin();\n  vector<ll> ans;\n  while (i1 != v1.end() || i2 != v2.end()) {\n    if (i1 == v1.end()) ans.push_back(*i2++);\n    else if (i2 == v2.end()) ans.push_back(*i1++);\n    else {\n      if (*i1 < *i2) ans.push_back(*i1++);\n      else ans.push_back(*i2++);\n    }\n  }\n  return ans;\n}\n\nint main() {\n  cin.tie(nullptr)->sync_with_stdio(false);\n  int t; cin >> t;\n  while (t--) {\n    ll x; cin >> x;\n    auto res = solve(x);\n    if (res.size() <= 1) cout << \"Prime\\n\";\n    else cout << res.back() << '\\n';\n  }\n}\n```",
        "postTime": 1671609033,
        "uid": 34225,
        "name": "ftt2333",
        "ccfLevel": 7,
        "title": "Pollard Rho"
    },
    {
        "content": "## \u5e8f\n\n\u5bf9\u4e8e Pollard Rho \u7b97\u6cd5\u6d41\u7a0b\u548c\u5361\u5e38\u6280\u5de7\u5176\u4ed6\u9898\u89e3\u5df2\u7ecf\u8bb2\u5f97\u5f88\u8be6\u7ec6\u4e86\uff0c\u4f46\u5176\u4e2d\u7b14\u8005\u5728\u5b66\u4e60\u65f6\u9047\u5230\u4ee5\u4e0b\u95ee\u9898\uff1a\n\n1. \u590d\u6742\u5ea6\u6b63\u786e\u6027\uff1f\n\n2. \u4e3a\u4f55\u8981\u7528\u90a3\u4e2a Pollard \u4f2a\u968f\u673a\u6570\u5217\u800c\u975e mt19937 \u76f4\u63a5\u968f\u4e00\u4e2a\uff1f\n\n3. \u600e\u4e48\u60f3\u5230\u7684\u8fd9\u4e2a\u7b97\u6cd5\uff1f\n\n\u8fd9\u4e9b\u73b0\u6709\u9898\u89e3\u5e76\u672a\u8f83\u5b8c\u6574\u7684\u89e3\u7b54\uff0c\u672c\u6587\u5c06\u66f4\u5b8c\u6574\u7684\u4ecb\u7ecd\u3002\n\n\u901a\u8fc7\u5bf9\u8fd9\u4e9b\u95ee\u9898\u7684\u7406\u89e3\uff0c\u53ef\u4ee5\u52a0\u6df1\u8bfb\u8005\u5bf9\u4e8e Pollard Rho \u7b97\u6cd5\u6b63\u786e\u6027\u7684\u4fe1\u4efb\uff0c\u540c\u65f6\u53ef\u4ee5\u5728\u80cc\u677f\u5b50\u7684\u65f6\u5019\u660e\u767d\u6bcf\u6b65\u5728\u5e72\u4ec0\u4e48\uff0c\u907f\u514d\u80cc\u4e86\u5c31\u5fd8\u7684\u95ee\u9898\u3002\n\n## \u95ee\u9898\u5f15\u5165\n\n$\\circ$ \u4e00\u4e2a\u6570 $n$ , \u5c06\u4ed6\u5206\u89e3\u8d28\u56e0\u6570\u3002\n\n\u5bf9\u4e8e\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u76f8\u4fe1\u5927\u5bb6\u90fd\u4f1a $O(\\sqrt n)$ \u7684\u66b4\u529b\u8bd5\u9664\u6cd5\uff0c\u4f46\u8d28\u56e0\u6570\u4e2a\u6570 $\\omega(n)$ \u662f\u6bd4 $\\log(n)$ \u8fd8\u5c0f\u7684\uff0c\u770b\u8d77\u6765\u5341\u5206\u6d6a\u8d39\uff0c\u4f46\u76f4\u63a5\u5206\u89e3\u7684\u7b97\u6cd5\u4f3c\u4e4e\u5e76\u4e0d\u663e\u7136\u3002\n\n\u4e8e\u662f\u6211\u4eec\u9000\u800c\u6c42\u5176\u6b21\uff0c\u5148\u8003\u8651\u89e3\u51b3\u4e0b\u9762\u8fd9\u4e2a\u95ee\u9898\uff1a\n\n$\\circ$ \u5bf9\u4e8e\u4e00\u4e2a\u5408\u6570 $n$ , \u627e\u5230\u4ed6\u7684\u4e00\u4e2a\u975e\u5e73\u51e1\u56e0\u5b50\u3002\n\n\u5176\u4e2d\u975e\u5e73\u51e1\u56e0\u5b50\u662f $n$ \u7684\u56e0\u5b50\u4e2d\uff0c\u9664\u4e86 $1$ \u548c $n$ \u7684\u4e00\u4e2a\u56e0\u6570\u3002\u8fd9\u91cc\u56e0\u6570\u4e0d\u4e00\u5b9a\u662f\u8d28\u56e0\u6570\u3002\n\n\u6211\u4eec\u8003\u8651\u7528\u968f\u673a\u7684\u505a\u6cd5\uff0c\u76f4\u63a5\u968f\u770b\u662f\u4e0d\u662f $n$ \u7684\u56e0\u6570\u5f53 $n$ \u53ea\u6709\u4e24\u4e2a\u56e0\u6570\u65f6\u6b7b\u7684\u900f\u900f\u7684\u3002\n\n\u751f\u65e5\u6096\u8bba\u662f\u968f\u673a\u505a\u6cd5\u4e2d\u8f83\u5e38\u5229\u7528\u7684\u4e00\u4e2a\u7ed3\u8bba\uff0c\u751f\u65e5\u6096\u8bba\u53ef\u7b80\u5355\u63cf\u8ff0\u4e3a\uff1a$m$ \u4e2a\u6570\u4e2d\u968f\u673a\u9009 $k$ \u6b21\uff0c\u5f53 $k\\ge\\sqrt m$ \u65f6\uff0c\u9009\u7684 $k$ \u4e2a\u6570\u4e24\u4e24\u4e0d\u540c\u7684\u6982\u7387\u53ef\u5ffd\u7565\u3002\n\n\u6211\u4eec\u8003\u8651\u7528\u751f\u65e5\u6096\u8bba\u53bb\u649e\u4ed6\u3002\n\n\u8bb0 $n$ \u7684\u6700\u5c0f\u56e0\u5b50\u4e3a $p$ \uff0c\u6709 $p\\le \\sqrt n$\n\n\u8003\u8651\u6211\u4eec\u968f\u4e86\u4e00\u4e2a\u53ef\u91cd\u96c6 $X=\\{x_i\\}$ \uff0c$x_i$ \u7684\u503c\u57df\u4e3a $[0,n-1]$ (\u5f53\u7136\uff0c\u6574\u6570)\uff0c\u6211\u4eec\u8bb0 $y_i=(x_i\\mod p)$\uff0c\u4e8e\u662f\u6211\u4eec\u5f97\u5230\u4e86\u53e6\u4e00\u4e2a\u53ef\u91cd\u96c6 $Y=\\{y_i\\}$ \u503c\u57df\u662f $[0,p-1]$ \u3002\n\n\u7531\u751f\u65e5\u6096\u8bba\u6211\u4eec\u77e5\u9053\uff0c\u5f53 $|Y|>\\sqrt p$ \u65f6\uff0c$Y$ \u4e2d\u57fa\u672c\u4e0a\u4e00\u5b9a\u6709\u81f3\u5c11\u4e00\u4e2a\u6570\u5bf9 $(y_i,y_j)$ \u76f8\u7b49\uff0c\u8bbe\u8fd9\u6837\u6709\u81f3\u5c11\u4e00\u4e2a\u6570\u5bf9\u76f8\u7b49\u7684\u6982\u7387\u4e3a $P_1$ , \u751f\u65e5\u6096\u8bba\u544a\u8bc9\u6211\u4eec $P_1=1-\\epsilon$  \uff0c \u5373\u975e\u5e38\u63a5\u8fd1 $1$ \u3002\n\n\u6240\u4ee5 $X$ \u4e2d\u6709\u540c\u6837 $P_1$ \u7684\u6982\u7387\u6709\u81f3\u5c11\u4e00\u4e2a\u6570\u5bf9 $(x_i,x_j)$ \uff0c\u6ee1\u8db3 $x_i\\equiv x_j\\pmod p$\u3002\n\n\u8003\u8651 $x_i=x_j$ \u7684\u60c5\u51b5\uff0c\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u7684\u6982\u7387 $P_2$ \u662f\u6781\u5c0f\u7684 , \u800c\u5269\u4e0b\u7684 $x_i\\ne x_j$ \u7684\u60c5\u51b5\uff0c\u6709 $p|(|x_i-x_j|)$\u3002\n\n\u201c$P_2$ \u6781\u5c0f\u201d \u8fd9\u4e2a\u7ed3\u8bba\u6613\u4e8e\u7406\u89e3\uff0c\u5373 $n$ \u4e2a\u91cc\u9009 $k$ \u4e2a \uff0c$k\\le \\sqrt p\\le n^{\\frac{1}{4}}$ \uff0c\u80fd\u9009\u51fa\u4e24\u4e2a\u76f8\u540c\u7684\u6570\u6982\u7387\u5f88\u5c0f\u3002\u5177\u4f53\u8bc1\u660e\u5927\u6982\u633a\u6570\u6570\u7684\uff0c\u8bfb\u8005\u6709\u5174\u8da3\u53ef\u4ee5\u81ea\u5df1\u63a8\u4e00\u63a8\uff0c\u4e0d\u662f\u672c\u6587\u91cd\u70b9\u3002\n\n\u8fd9\u8bf4\u660e\u4ec0\u4e48\uff1f\u8fd9\u8bf4\u660e\u6211\u4eec\u53ea\u9700\u8981\u627e $k(k\\le \\sqrt p\\le n^{\\frac{1}{4}})$ \u4e2a\u6570 \uff0c\u91cc\u9762\u5305\u542b\u7684\u4fe1\u606f\u5c31\u6709 $P_1-P_2$ \u7684\u6982\u7387\u5305\u542b $p$ \u7684\u4e00\u4e2a\u500d\u6570\uff01\n\n\u6b64\u65f6\u4e4b\u524d\u90a3\u5bf9 $(x_i,x_j)$ \u6ee1\u8db3 $\\gcd(|x_i-x_j|,n)$ \u4e00\u5b9a\u4e3a $n$ \u7684\u4e00\u4e2a\u56e0\u6570\uff0c\u4e14\u4e3a $p$ \u7684\u4e00\u4e2a\u500d\u6570\u3002\n\n$|x_i-x_j|=p\\times p=n$ \u7684\u60c5\u51b5\u4e0d\u4f1a\u51fa\u73b0 \uff0c\u56e0\u4e3a $\\gcd(|x_i-x_j|,n)\\le |x_i-x_j|\\leq n-1$ \u3002\n\n\u56e0\u4e3a $p|\\gcd(|x_i-x_j|,n)$ \u4e14 $p>1$ ,\u6240\u4ee5 $\\gcd(|x_i-x_j|,n)\\ne 1$\n\n\u6240\u4ee5 $\\gcd(|x_i-x_j|,n)$ \u4e00\u5b9a\u662f $n$ \u7684\u4e00\u4e2a\u975e\u5e73\u51e1\u56e0\u5b50\u3002\n\n\n\u7531\u6b64\uff0c\u6211\u4eec\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\u4e0b\u9762\u8fd9\u4e2a\u5f62\u5f0f \uff1a\n\n$\\circ$ \u7ef4\u62a4\u4e00\u4e2a\u6570\u96c6 $S$ \uff0c\u6bcf\u6b21\u968f\u673a\u4e00\u4e2a\u6570 $a$ \uff0c\u5224\u65ad $S$ \u4e2d\u662f\u5426\u6709\u4e00\u4e2a\u6570 $b$ \u4f7f\u5f97 $\\gcd(|a-b|,n)\\ne 1$ , \u6709\u5219\u76f4\u63a5\u662f\u7b54\u6848\uff0c\u5426\u5219\u5c06 $a$ \u52a0\u5165 $S$ \u3002\n\n\u7531\u4e4b\u524d\u7684\u8bc1\u660e\uff0c\u53ef\u4ee5\u77e5\u9053\u52a0\u5165\u6b21\u6570 $\\le n^{\\frac{1}{4}}$\n\n\u66b4\u529b\u679a\u4e3e\u8fdb\u884c\u5224\u65ad\u662f $O((n^{\\frac{1}{4}})^2)=O(\\sqrt n)$ \u7684\uff0c\u8ddf\u8bd5\u9664\u4e00\u4e2a\u590d\u6742\u5ea6\u3002\n\n\u8fd9\u4e2a\u4e1c\u897f\u4f3c\u4e4e\u4e5f\u4e0d\u597d\u6570\u636e\u7ed3\u6784\u4f18\u5316\uff0c\u8fd9\u5c31\u662f\u4e0d\u80fd\u76f4\u63a5\u7528 mt19937 \u968f\u4e00\u4e2a\u6570\u5217\u7684\u539f\u56e0\u3002\n\n## Pollard \u7684\u4f2a\u968f\u673a\u6570\u5217\n\n\u76f4\u63a5\u7ef4\u62a4\u4e0d\u597d\u505a\uff0c\u6211\u4eec\u8003\u8651\u5728\u968f\u673a\u7684\u6570\u5217\u4e0a\u505a\u6587\u7ae0\u3002\n\n\u6211\u4eec\u9700\u8981\u4f7f\u968f\u673a\u7684\u6570\u5217\u6709\u4e00\u4e9b\u6027\u8d28 \uff0c\u4f7f\u5f97\u53ea\u9700\u8981\u901a\u8fc7\u679a\u4e3e\u5c11\u6570\u51e0\u4e2a $S$ \u4e2d\u7684\u6570\u5373\u53ef\u5224\u65ad\u662f\u5426\u5b58\u5728 $b$ \u4f7f\u5f97 $\\gcd(|a-b|,n)\\ne 1$ \n\nPollard \u7ed9\u51fa\u4e86\u8fd9\u6837\u4e00\u4e2a\u6570\u5217 :\n\n$x_i=(x_{i-1}^2+c) \\mod n$ \n\n\u6211\u4eec\u8003\u8651\u8fd9\u4e2a\u6570\u5217\u6709\u4ec0\u4e48\u597d\u5904\u5462\uff1f\n\n$\\circ$ \u53ef\u4ee5\u4f7f\u7b97\u6cd5\u590d\u6742\u5ea6\u6b63\u786e\n\n\u5bf9\u4e8e $\\gcd(|x_i-x_j|,n)\\ne 1$ \uff0c\u8bb0\u4e00\u4e2a $n$ \u7684\u56e0\u6570 $q|(|x_i-x_j|)$ \uff0c\u6211\u4eec\u8003\u8651 $x_{i+1}$ \u548c $x_{j+1}$ \uff0c\u6ee1\u8db3 $|x_{i+1}-x_{j+1}|\\equiv|x_i^2+c-(x_j^2+c)|\\equiv|(x_i-x_j)\\times (x_i+x_j)|\\pmod n$\n\n\u800c\u56e0\u4e3a $|x_{i+1}-x_{j+1}|\\in [0,n-1]$ , \u6240\u4ee5 $|x_{i+1}-x_{j+1}|=(|(x_i-x_j)\\times (x_i+x_j)|\\mod n)$\n\n\u53d1\u73b0\u4ecd\u6ee1\u8db3 $q|(|x_{i+1}-x_{j+1}|)$ \u4f46\u6709\u6982\u7387 $x_i+x_j=n$ \u800c\u4f7f\u5176\u53d8\u4e3a $0$ \u6216\u8005\u5176\u4ed6\u60c5\u51b5\u4f7f\u5f97 $n|(|(x_i-x_j)\\times(x_i+x_j)|)$ \uff0c\u8fd9\u6837\u5f97\u5230\u7684 $\\gcd$ \u4e0d\u518d\u662f\u975e\u5e73\u51e1\u56e0\u5b50\u4e86\uff0c\u9020\u6210\u975e\u5e73\u51e1\u56e0\u5b50\u7684\u635f\u5931\u3002\u8fd9\u6837\u60c5\u51b5\u6982\u7387\u5927\u7ea6 $\\dfrac{1}{n}$ \u91cf\u7ea7\uff0c\u5f71\u54cd\u5e76\u4e0d\u5927\uff0c\u6211\u4eec\u4e00\u4f1a\u518d\u8ba8\u8bba\u3002\n\n\u6211\u4eec\u5148\u8ba8\u8bba\u6bd4\u8f83\u597d\u7684\u60c5\u51b5 \uff0c\u5373\u6240\u6709 $(i,j)$ , \u82e5 $\\gcd(|x_i-x_j|,n)\\ne 1$ \u5219 $\\gcd(|x_{i+t}-x_{j+t}|,n)\\ne 1$ \u3002\n\n\u5bf9\u4e8e\u76f8\u540c\u8ddd\u79bb\u7684\u70b9\u5bf9 \uff0c\u6211\u4eec\u53ea\u9700\u8981\u6bcf\u4e2a\u8ddd\u79bb\u53ea\u5224\u65ad\u4e00\u6b21\u5373\u53ef\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u6709\u5f88\u591a\u529e\u6cd5\u5904\u7406\u4e86\uff0c\u6bd4\u5982\u5148\u52a0\u5165 $k$ \u4e2a\uff0c\u8bb0\u4e3a $x_1$ \u5230 $x_k$ , \u7136\u540e\u8003\u8651\u7b2c $k+1$ \u4e2a\u4f4d\u7f6e\uff0c\u6211\u4eec\u5bf9\u6240\u6709 $i\\in[1,k]$ \u67e5\u662f\u5426\u6709 $\\gcd(|x_i-x_{k+1}|,n)\\ne 1$ \u3002 \n\n\u4f46\u7531\u4e8e\u8981\u8003\u8651\u5230\u4e4b\u524d\u8bf4\u7684\u975e\u5e73\u51e1\u56e0\u5b50\u635f\u5931\u7684\u60c5\u51b5\uff0c\u5404\u79cd\u5224\u6cd5\u6709\u5b9e\u9645\u8868\u73b0\u4e0a\u7684\u5dee\u5f02\u3002\u4e00\u4e2a\u5e38\u7528\u7684\u662f\u500d\u589e\u5224\u6cd5\uff1a\n\n\u5224\u65ad\u6bcf\u4e2a $x_i$ \u548c $i$ \u4ee5\u4e0b\u6700\u5927\u7684 $2$ \u7684\u6574\u6570\u6b21\u5e42 $j$ \u662f\u5426 $\\gcd(|x_i-x_{j}|,n)\\ne 1$ \u3002\n\n\n$\\circ$ \u8fd9\u4e2a\u6570\u5217\u8db3\u591f\u968f\u673a\n\n\u8fd9\u662f\u4e00\u4e2a\u4f2a\u968f\u673a\u6570\u5217\uff0c\u4ed6\u8db3\u591f\u968f\u673a\u3002\u8fd9\u4e2a\u6bd4\u8f83\u7384\u5b66\uff0c\u522b\u7684\u9898\u89e3\u6709\u6240\u6d89\u53ca\uff0c\u5728\u672c\u6587\u4e2d\u53ea\u4f5c\u4e3a\u7ed3\u8bba\u8fdb\u884c\u4ecb\u7ecd\u3002\n\n\u4f46\u4ed6\u6bd5\u7adf\u662f\u4e00\u4e2a\u4f2a\u968f\u673a\u6570\u5217\uff0c\u5f53\u6709\u6570\u5217\u7684\u4e24\u9879\u76f8\u7b49\u7684\u65f6\u5019\uff0c\u7531\u4e8e\u751f\u6210\u4e0b\u4e00\u9879\u7684\u65b9\u5f0f\u4e00\u6837\uff0c\u8fd9\u4e2a\u6570\u5217\u5c31\u4f1a\u51fa\u73b0\u5faa\u73af\uff0c\u51fa\u73b0\u4e00\u4e2a $\\rho$ \u7684\u5f62\u72b6\u3002\n\n\u6709\u53ef\u80fd\u975e\u5e38\u4e0d\u5e78\u968f\u5230\u7684 $\\rho$ \u975e\u5e38\u5c0f \uff0c\u8fd9\u65f6\u9700\u8981\u8fdb\u884c\u5224\u73af\u3002\n\n\u6211\u4eec\u76f4\u63a5\u5728\u90a3\u4e2a\u500d\u589e\u505a\u6cd5\u4e0a\u8fdb\u884c\u6539\u8fdb\u3002\n\n\u8003\u8651\u7d2f\u8ba1 $\\prod\\limits_{j<i\\le2j} |x_i-x_j|\\mod n$ \uff0c\u5176\u4e2d $j$ \u4f9d\u7136\u662f\u5c0f\u4e8e $i$ \u7684\u6700\u5927 $2$ \u7684\u6574\u6570\u6b21\u5e42\uff0c\u8fd9\u6837\u5bf9\u4e8e\u4e00\u8f6e\u500d\u589e\u7ed3\u675f\u540e\uff0c\u5224\u65ad\u7d2f\u79ef\u7684\u503c\u662f\u5426\u4e3a $0$ , \u5373\u53ef\u77e5\u9053\u8def\u5f84\u4e0a\u662f\u5426\u6709\u4e24\u503c\u76f8\u7b49\uff0c\u5373\u51fa\u73b0\u73af\u3002\u6709\u53ef\u80fd\u56e0\u4e3a\u975e\u5e73\u51e1\u56e0\u5b50\u635f\u5931\u800c\u8bef\u5224\u73af, \u53ef\u7531\u4e8e\u975e\u5e73\u51e1\u56e0\u5b50\u635f\u5931\u6982\u7387\u6781\u4f4e\u6240\u4ee5\u5b9e\u9645\u8868\u73b0\u4ecd\u662f\u6781\u597d\u7684\u3002\n\n\u8fd8\u6709\u4e00\u4e9b\u5e38\u6570\u4f18\u5316\u8fd9\u91cc\u4e0d\u4ecb\u7ecd\u4e86\u3002\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u4ee5 $O(\\sqrt p)$ \u89e3\u51b3\u4e86 \u201c\u5bf9\u4e8e\u4e00\u4e2a\u5408\u6570 $n$ , \u627e\u5230\u4ed6\u7684\u4e00\u4e2a\u975e\u5e73\u51e1\u56e0\u5b50\u201d\u8fd9\u4e2a\u95ee\u9898\uff0c\u5176\u4e2d $p$ \u662f $n$ \u7684\u6700\u5c0f\u975e\u5e73\u51e1\u56e0\u5b50\u3002\n\n\u6211\u4eec\u8003\u8651\u89e3\u51b3\u7b2c\u4e00\u4e2a\u95ee\u9898\uff0c\u5373\n\n$\\circ$ \u4e00\u4e2a\u6570 $n$ , \u5c06\u4ed6\u5206\u89e3\u8d28\u56e0\u6570\u3002\n\n\u6211\u4eec\u7528 Miller Rabin \u5224\u65ad\u4e00\u4e2a\u6570\u662f\u5426\u662f\u8d28\u6570\uff0c\u5982\u679c\u662f\u5c31\u7ed3\u675f\uff0c\u5426\u5219\u8003\u8651\u6211\u4eec\u73b0\u5728\u5c06 $n$ \u5206\u4e3a\u4e86 $m$ \u548c $\\frac{n}{m}$ \uff0c \u76f4\u63a5\u9012\u5f52\u4e24\u4fa7\u7ee7\u7eed\u5206\u89e3\u5373\u53ef\u3002\n\n\n\u590d\u6742\u5ea6\u4e3a\u4ec0\u4e48\u5bf9\u5462\uff1f\n\n\u6211\u4eec\u8003\u8651\u5206\u89e3\u7684\u8fc7\u7a0b\uff0c\u6bcf\u4e00\u6b21\u5206\u89e3\u7684\u590d\u6742\u5ea6\u662f $O(\\sqrt p)$ , \u6700\u7ec8\u5206\u89e3\u4e3a\u4e86 $n$ \u7684\u6240\u6709\u8d28\u56e0\u6570\uff0c\u5047\u8bbe\u6709 $k$ \u4e2a\uff08\u7531\u4e8e\u8fd9\u4e9b\u8d28\u56e0\u5b50\u53ef\u4ee5\u91cd\u590d\u6240\u4ee5\u4e0d\u662f $\\omega(n)$ \u4e2a\uff09\uff0c\u8bbe\u4e3a $p_1,p_2\\dots p_k(p1\\le p2\\le\\dots\\le p_k)$\uff0c\u800c\u5206\u89e3\u7684\u9012\u5f52\u6811\u662f\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u5e95\u5c42\u53f6\u5b50\u662f\u6bcf\u4e2a\u8d28\u56e0\u5b50\uff0c\u8d21\u732e\u590d\u6742\u5ea6\u7684\u662f\u6bcf\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u8d21\u732e\u4e3a\u5b50\u6811\u4e2d\u6700\u5c0f\u7684 $p$ \u5f00\u6839\u53f7\uff0c\u7531\u4e8e\u4e8c\u53c9\u6811\u53f6\u5b50\u6570\u6052\u5b9a\uff0c\u6240\u4ee5\u975e\u53f6\u8282\u70b9\u5171 $k-1$ \u4e2a\uff0c\u6b32\u4f7f\u6700\u5927\u5316\u590d\u6742\u5ea6\u770b\u6700\u52a3\u60c5\u51b5\uff0c\u5373\u4ece\u5c0f\u5230\u5927\u6bcf\u4e2a\u53ea\u8d21\u732e\u4e00\u6b21\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u662f $O(\\sum\\limits_{i=1}^{k-1}\\sqrt p_i)$ \u7684\uff0c\u56e0\u4e3a $p_i\\ge 2$ \uff0c\u4e14\u6709 $\\prod\\limits_{i=1}^{k} p_i=n$ \uff0c \u7531\u4e0d\u7b49\u5f0f\u77e5\u8bc6\u77e5\u4e24\u9879\u4e14\u76f8\u7b49\u65f6\u53d6\u5230\u6700\u5927\u503c\uff0c\u5373 $O(\\sqrt p_1)=O(n^{\\frac{1}{4}})$ \u3002\n\n\u6c42 $\\gcd$ \u7684 $\\log$ \u88ab\u90a3\u4e2a 127 \u6b21\u76f8\u4e58\u5224\u65ad\u4e00\u6b21\u7684\u62b5\u6d88\u4e86\uff0c\u5373\u6700\u540e\u590d\u6742\u5ea6\u671f\u671b\u662f $O(n^{\\frac{1}{4}}\\frac{\\log n}{127})$ \u3002\n\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define ll long long\n#define lll __int128\n\nll mod;\ninline ll add(ll x,ll y)\n{\n\tll res=x+y;\n\treturn res<mod?res:res-mod;\n}\ninline ll mul(ll x,ll y)\n{\n\treturn (lll)x*y%mod;\n}\ninline ll qpow(ll x,ll y)\n{\n\tll res=1;\n\twhile(y)\n\t{\n\t\tif(y&1)res=mul(res,x);\n\t\tx=mul(x,x),y>>=1;\n\t}\n\treturn res;\n}\nll pri[]={2,3,5,7,11,13,17,19,23,29,31,37};\ninline bool chk(ll x)\n{\n\tll v=qpow(x,mod-1);\n\tif(v!=1)return 0;\n\tll d=mod-1;\n\twhile(!(d&1))\n\t{\n\t\td>>=1;\n\t\tv=qpow(x,d);\n\t\tif(v==mod-1)return 1;\n\t\tif(v!=1)return 0;\n\t}\n\treturn 1;\n}\ninline bool MR(ll x)\n{\n\tmod=x;\n\tfor(auto p:pri)\n\t{\n\t\tif(x==p)return 1;\n\t\tif(!chk(p))return 0;\n\t}\n\treturn 1;\n}\nmt19937 rnd(time(0));\ninline ll f(ll x,ll c)\n{\n\treturn add(mul(x,x),c);\n}\ninline ll rho(ll n)\n{\n\tmod=n;\n\tll x=rnd()%mod,c=rnd()%(mod-1)+1;\n\tll p=1;\n\tfor(ll i=2,j=2,d=x;;i++)\n\t{\n\t\tx=f(x,c),p=mul(p,abs(x-d));\n\t\tif(i%127==0&&__gcd(p,n)!=1)return __gcd(p,n);\n\t\tif(i==j)\n\t\t{\n\t\t\tj<<=1,d=x;\n\t\t\tif(__gcd(p,n)!=1)return __gcd(p,n);\n\t\t}\n\t}\n}\nll PR(ll n)\n{\n\t//cout<<n<<\"\\n\";\n\tif(MR(n))return n;\n\tll p=n;\n\twhile(p==n)p=rho(n);\n\treturn max(PR(p),PR(n/p));\n}\n\ninline void SOLVE()\n{\n\tll n;\n\tcin>>n;\n\tll ans=PR(n);\n\tif(ans==n)cout<<\"Prime\\n\";\n\telse cout<<ans<<\"\\n\";\n}\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\tint t;\n\tcin>>t;\n\twhile(t--)SOLVE();\n\treturn 0;\n}\n```\n\n",
        "postTime": 1664610683,
        "uid": 223560,
        "name": "_HL_",
        "ccfLevel": 0,
        "title": "Pollard Rho \u5c0f\u8bb0"
    },
    {
        "content": "\u8fd9\u7bc7\u9898\u89e3\u548c @cosmicAC \u7684\u601d\u8def\u4e00\u6837\uff0c\u53ea\u662f\u4ed6\u7ed9\u51fa\u7684\u7edf\u8ba1\u7a7a\u683c\u6570\u7684\u65b9\u5f0f\u662f\u9519\u8bef\u7684\n\n\u7ecf\u8fc7\u6211\u7684~~\u4e0a\u7f51\u67e5\u627e~~\u5c1d\u8bd5,\u6709\u4e86\u4e0b\u9762\u7684\u4ee3\u7801\n\n~~\u5341\u4e94\u884cA\u9ed1\u9898~~\n\n__\u4ee3\u7801:__\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    system(R\"(\n\t  read a\n    for i in `seq 1 $a`; do\n      read t\n      s=`factor $t` \n      if [ `echo $s |tr -cd ' ' |wc -c` -eq 1 ]; then #\u4f7f\u7528\u8fd9\u79cd\u5224\u65ad\u7a7a\u683c\u7684\u65b9\u5f0f\n        echo Prime\n      else\n        echo $s | sed \"s/ /\\n/g\" | tail -n1\n      fi\n    done\n    )\");\n    return 0;\n}\n```\n",
        "postTime": 1573472569,
        "uid": 183154,
        "name": "swiftc",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4718 \u3010\u3010\u6a21\u677f\u3011Pollard-Rho\u7b97\u6cd5\u3011"
    },
    {
        "content": "# Miller-Rabin \u4e0e Pollard-Rho \u7b97\u6cd5\u5b66\u4e60\u7b14\u8bb0\n\n[\u4e5f\u8bb8\u6709\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/zheyuanxie/p/miller-rabin-pollard-rho.html)\n\n## \u524d\u8a00\n\nMiller-Rabin \u7b97\u6cd5\u7528\u4e8e\u5224\u65ad\u4e00\u4e2a\u6570 $p$ \u662f\u5426\u662f\u8d28\u6570\uff0c\u82e5\u9009\u5b9a $w$ \u4e2a\u6570\u8fdb\u884c\u5224\u65ad\uff0c\u90a3\u4e48\u6b63\u786e\u7387\u7ea6\u662f $1-\\frac{1}{4^w}$ \uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\log p+w\\log p)$\u3002\uff08\u6211\u7684\u5b9e\u73b0\uff09\n\nPollard-Rho \u7b97\u6cd5\u53ef\u4ee5\u5728\u671f\u671b $O(n^{\\frac{1}{4}})$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u627e\u5230\u5408\u6570 $n$ \u7684\u67d0\u4e00\u4e2a\u975e\u5e73\u51e1\u7684\uff08\u5373\u65e2\u4e0d\u662f $1$\uff0c\u4e5f\u4e0d\u662f\u5b83\u672c\u8eab\u7684\uff09\u56e0\u5b50\u3002\n\n\u4e0b\u6587\u4e2d\u7528 $\\mathbb{P}$ \u6765\u8868\u793a\u8d28\u6570\u96c6\u5408\u3002\n\n## Miller-Rabin \u7b97\u6cd5\n\n### \u524d\u7f6e\u77e5\u8bc6\n\n**\u8d39\u9a6c\u5c0f\u5b9a\u7406**\uff1a\u82e5 $p\\in\\mathbb{P},\\gcd(a,p)=1$\uff0c\u5219 $a^{p-1}\\equiv1\\pmod{p}$\u3002\n\n**\u4e8c\u6b21\u63a2\u6d4b\u5b9a\u7406**\uff1a\u82e5 $p\\in\\mathbb{P},x^2\\equiv 1\\pmod{p}$\uff0c\u5219 $x\\equiv\\pm1\\pmod{p}$\u3002\n\n\u6ce8\u610f\uff1a\u8d39\u9a6c\u5c0f\u5b9a\u7406\u7684\u9006\u547d\u9898\u5e76\u4e0d\u6210\u7acb\uff01\n\n### \u7b97\u6cd5\u6d41\u7a0b\n\n\u9996\u5148\uff0c\u5c06 $p-1$ \u8868\u793a\u6210 $t2^k$ \u7684\u5f62\u5f0f\u3002\u90a3\u4e48\uff0c\u82e5 $p\\in\\mathbb{P}$\uff0c\u5219 $p^{t2^k}=p^{p-1}\\equiv1\\pmod{p}$\u3002\n\n\u7136\u540e\u6211\u4eec\u9009\u62e9 $w$ \u4e2a\u6570 $q_1,q_2,\\cdots,q_w$ \u8fdb\u884c\u5224\u65ad\u3002\u5047\u5982\u5f53\u524d\u5224\u65ad\u5230\u4e86 $q_i$\uff0c\u90a3\u4e48\u7528\u5feb\u901f\u5e42\u8ba1\u7b97\u51fa $a=q_{i}^{t}\\bmod{p}$\u3002\u7136\u540e\u8ba9 $a$ \u81ea\u4e58 $k$ \u6b21\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230 $p-1$\u3002\n\n\u81ea\u4e58\u7684\u65f6\u5019\u6211\u4eec\u5224\u65ad\uff0c\u5982\u679c $a\\equiv1\\pmod{p}$ \uff0c\u90a3\u4e48\u6b64\u65f6 $p$ \u6709\u4e00\u5b9a\u6982\u7387\u662f\u8d28\u6570\u3002\u4e8e\u662f\u6211\u4eec\u770b\u4e00\u770b $a$ \u81ea\u4e58\u524d\u662f\u5426\u6ee1\u8db3\u4e8c\u6b21\u63a2\u6d4b\u5b9a\u7406\u5373\u53ef\uff0c\u5982\u679c\u662f\uff0c\u5219\u7ee7\u7eed\u81ea\u4e58\uff0c\u5426\u5219\u8868\u660e $p$ \u4e00\u5b9a\u4e0d\u662f\u8d28\u6570\u3002\n\n\u5982\u679c\u81ea\u4e58\u5f97\u5230\u7684\u6570\u540c\u4f59 $p$ \u4e0d\u4e3a $1$\uff0c\u90a3\u4e48 $p$ \u4e5f\u4e0d\u4e00\u5b9a\u662f\u8d28\u6570\u3002\u5426\u5219 $p$ \u5f88\u53ef\u80fd\u662f\u5408\u6570\u3002\n\n\u8fd9\u65f6\u60a8\u53ef\u80fd\u4f1a\u8bf4\uff1a\u4e0d\u662f\u8bf4\u8fc7\u8d39\u9a6c\u5c0f\u5b9a\u7406\u9006\u5b9a\u7406\u4e0d\u6210\u7acb\u5417\uff1f\u5176\u5b9e\uff0c\u9006\u5b9a\u7406\u7684\u53cd\u4f8b\uff08\u5361\u8fc8\u514b\u5c14\u6570\uff09\u662f\u5341\u5206\u7a00\u5c11\u7684\u3002\u7ecf\u8fc7\u591a\u6b21\u5224\u65ad\uff0c\u5408\u6570\u5224\u6210\u8d28\u6570\u7684\u6982\u7387\u5341\u5206\u5c0f\uff08\u8d28\u6570\u4e0d\u53ef\u80fd\u5224\u6210\u5408\u6570\uff0c\u60f3\u4e00\u60f3\uff0c\u4e3a\u4ec0\u4e48\uff09\n\nOI \u4e2d\u53ef\u4ee5\u9009\u62e9 $w=9$\uff0c$q$ \u4e3a\u524d $9$ \u4e2a\u8d28\u6570\u3002\u8fd9\u6837\u5b50 $10^{18}$ \u8303\u56f4\u5185\u4e00\u822c\u4e0d\u4f1a\u51fa\u9519\u3002\n\n### \u53c2\u8003\u5b9e\u73b0\n\n```cpp\nstruct {/*Miller Rabin \u8d28\u6570\u5224\u5b9a\u7b97\u6cd5*/\n\tvector<int> primes= {2,3,5,7,11,13,17,19,23};\n\tbool operator()(int p) {\n\t\tif (p==1)return 0;\n\t\tint t,k;\n\t\tfor (t=p-1,k=0; !(t&1); k++,t>>=1);\n\t\tfor (int i : primes) {\n\t\t\tif (p==i) return true;\n\t\t\tint a=fastpow(i,t,p),b=a;\n\t\t\tfor (int j=1; j<=k; j++) {\n\t\t\t\tb=M(((__int128)a)*a,p);\n\t\t\t\tif (b==1&&a!=1&&a!=p-1) return false;\n\t\t\t\ta=b;\n\t\t\t}\n\t\t\tif (a!=1) return false;\n\t\t}\n\t\treturn true;\n\t}\n} MillerRabin;\n```\n\n[\u6a21\u677f\u9898](https://loj.ac/p/143)\n\n## Pollard-Rho \u7b97\u6cd5\n\n### \u524d\u7f6e\u77e5\u8bc6\n\n**Floyd \u5224\u5708\u7b97\u6cd5**\uff1a\u8be5\u7b97\u6cd5\u53ef\u4ee5\u7ebf\u6027\u5224\u65ad\u4e00\u4e2a\u94fe\u8868\u4e0a\u662f\u5426\u6709\u73af\u3002\u5176\u6d41\u7a0b\u4e3a\u4f7f\u7528\u4e24\u4e2a\u6307\u9488\u3002\u4e00\u4e2a\u6307\u9488\u6bcf\u6b21\u8dd1 $1$ \u6761\u8fb9\uff0c\u53e6\u4e00\u4e2a\u6307\u9488\u4e00\u6b21\u8dd1 $2$ \u6761\u8fb9\uff0c\u7136\u540e\u76f8\u9047\u7684\u70b9\u5c31\u5728\u73af\u4e0a\u3002\n\n### \u7b97\u6cd5\u6d41\u7a0b\n\n\u5148\u7279\u5224 $n=4$ \u548c $n\\in\\mathbb{P}$\u3002\n\nPollard-Rho \u9700\u8981\u4e00\u4e2a\u4f2a\u968f\u673a\u51fd\u6570 $f(x,c,n)=x^2+c\\bmod{n}$\u3002\u5176\u4e2d $x$ \u8868\u793a\u4e0a\u4e00\u4e2a\u6570\uff0c$c$ \u662f\u6211\u4eec\u751f\u6210\u7684\uff0c\u7528\u4e8e\u4fdd\u8bc1\u968f\u673a\u6027\u7684\u6570\uff0c$n$ \u662f\u6211\u4eec\u9700\u8981\u627e\u56e0\u5b50\u7684\u6570\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u51fd\u6570\u6700\u540e\u4f1a\u5927\u6982\u7387\u751f\u6210\u4e00\u4e2a\u6df7\u5faa\u73af\u5e8f\u5217\u3002\u5982\u540c\u5e0c\u814a\u5b57\u6bcd $\\rho(\\texttt{Rho})$ \u4e00\u822c\u3002\n\n\u5148\u9009\u62e9\u4e00\u4e2a\u968f\u673a\u6570 $c$\u3002\u4e24\u4e2a\u6307\u9488\u4ece $0$ \u51fa\u53d1\uff0c\u6211\u4eec\u770b\u6210\u5b58\u5728\u4e00\u4e2a\u94fe\u8868\uff0c\u5176\u4e2d\u5b58\u5728\u8fb9 $(i,f(i,c,n))$\u3002\u7136\u540e\u5728\u4e0a\u9762\u8dd1 Floyd \u5224\u5708\u7b97\u6cd5\uff0c\u5728 Floyd \u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u6307\u9488\u5728 $t$\uff0c\u4e00\u4e2a\u6307\u9488\u5728 $k$\u3002\u82e5 $\\gcd(|t-k|,n)\\neq1$\u3002\u5219\u6211\u4eec\u8ba4\u4e3a $\\gcd(|t-k|,n)$ \u662f $n$ \u7684\u4e00\u4e2a\u56e0\u6570\u3002\u5982\u679c\u627e\u5230\u4e86\u73af\uff0c\u5219\u91cd\u65b0\u9009\u62e9\u4e00\u4e2a $c$\uff0c\u91cd\u590d\u4e0a\u8ff0\u6d41\u7a0b\u3002\n\n\u6b64\u65f6\u65f6\u95f4\u590d\u6742\u5ea6\u671f\u671b $O(n^{\\frac{1}{4}}\\log n)$\u3002\n\n### \u7b97\u6cd5\u4f18\u5316\n\n\u4e0a\u8ff0\u7b97\u6cd5\u5728\u6d1b\u8c37\u677f\u9898\u4e0a\u53ea\u80fd\u83b7\u5f97 $93$ \u5206\uff08TLE \u5728\u4e86\u7b2c $13$ \u4e2a\u70b9\uff09\u3002\u4f18\u5316\u8feb\u5728\u7709\u776b\u3002\n\n\u6211\u4eec\u53d1\u73b0\u6c42 $\\gcd$ \u7684 $O(\\log n)$ \u9700\u8981\u88ab\u4f18\u5316\u3002\u6211\u4eec\u53ef\u4ee5\u56fa\u5b9a\u4e00\u4e2a $W$\uff0c\u8df3 $W$ \u6b21\u7684\u65f6\u5019\u7edf\u8ba1 $|t-k|$ \u7684\u4e58\u79ef $p$\u3002\u6700\u540e\u548c $n$ \u53d6\u4e00\u6b21 $\\gcd$\u3002\u7136\u540e\u5982\u679c\u4e0b\u4e00\u6b21 $p$ \u4f1a\u5230 $0$\uff0c\u90a3\u4e48\u4e5f\u8981\u8df3\u51fa\u3002\u56e0\u4e3a\u540e\u9762\u90fd\u662f $0$\u3002\n\n\u8fd9\u6837\u5b50\u53ea\u8981 $W\\gt \\log n$ \u5c31\u53ef\u4ee5\u505a\u5230\u671f\u671b $O(n^{\\frac{1}{4}})$\u3002\u6211\u8bd5\u4e86\u4e00\u4e0b\uff0c\u8c8c\u4f3c $W=256$ \u8868\u73b0\u4e0d\u9519\u3002\n\n\u53e6\u5916\u8fd8\u53ef\u4ee5\u52a0\u4e00\u4e2a\u8bb0\u5fc6\u5316\uff0c\u5728\u540e\u9762\u7684\u4f8b\u9898\u4e2d\u6709\u7528\u3002\n\n### \u53c2\u8003\u5b9e\u73b0\n\n```cpp\nmt19937 engine(time(0));\n\ninline int pr_rand(int x,int c,int n) { /*Pollard Rho \u7b97\u6cd5\u4f7f\u7528\u7684\u4f2a\u968f\u673a\u6570*/\n\treturn M(M(((__int128)x)*x,n)-c,n);\n}\n\nunordered_map<int,int> prm;\n\nint pollard_rho(int n) { /*Pollard Rho \u7b97\u6cd5\u6c42\u4e00\u4e2a\u6570\u7684\u67d0\u4e00\u4e2a\u8d28\u56e0\u5b50*/\n\tif (prm[n])return prm[n];\n\tif (n==4) return 2;\n\tif (MillerRabin(n)) return n;\n\tuniform_int_distribution<int> randint(3,n-1);\n\twhile (1) {\n\t\tint c=randint(engine);\n\t\tint t=0,r=0,p=1,q=0;\n\t\tdo{\n\t\t\tfor(int i=1;i<=256;i++){\n\t\t\t\tt=pr_rand(t,c,n);\n\t\t\t\tr=pr_rand(pr_rand(r,c,n),c,n);\n\t\t\t\tint delta=(t-r)>0?(t-r):(r-t);\n\t\t\t\tif(t==r||(q=M(__int128(p)*delta,n))==0){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tp=q;\n\t\t\t}\n\t\t\tint d=__gcd(p,n);\n\t\t\tif(d>1) return prm[n]=d;\n\t\t}while(t!=r);\n\t}\n}\n```\n\n## [P4718 \u3010\u6a21\u677f\u3011Pollard's rho\u7b97\u6cd5](https://www.luogu.com.cn/problem/P4718)\n\n ### \u7b80\u8981\u9898\u610f\n\n$T$ \u7ec4\u6570\u636e\uff0c\u6bcf\u7ec4\u6570\u636e\u7ed9\u51fa\u4e00\u4e2a\u6570 $n$\uff0c\u5982\u679c $n$ \u662f\u8d28\u6570\uff0c\u8f93\u51fa `Prime`\uff0c\u5426\u5219\u4f60\u9700\u8981\u8f93\u51fa $n$ \u7684\u6700\u5927\u8d28\u56e0\u5b50\u3002\n\n$1 \\leq T \\leq 350,1 \\lt n \\leq 10^{18}$\n\n### \u601d\u8def\n\n\u9996\u5148\uff0c\u6211\u4eec\u5148\u7528\u4e00\u4e2a Miller-Rabin \u7b97\u6cd5\u6765\u5224\u65ad\u8d28\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u7528 Pollard-Rho \u7b97\u6cd5\u627e\u51fa\u6240\u6709\u7684\u56e0\u5b50\uff08\u5f53\u7136\u4e0d\u7528\u5b58\u8d77\u6765\uff0c\u53ea\u9700\u8981\u7528\u4e00\u4e2a\u9012\u5f52\u51fd\u6570\uff0c\u6700\u540e $\\max$ \u7edf\u8ba1\u7b54\u6848\uff09\u5373\u53ef\u3002\u7531\u4e8e\u552f\u4e00\u5206\u89e3\u5b9a\u7406\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u662f\u6b63\u786e\u7684\u3002\n\n\u6ce8\u610f\u6211\u4eec\u9700\u8981\u52a0\u4e00\u4e2a\u8bb0\u5fc6\u5316\u6765\u4fdd\u8bc1\u590d\u6742\u5ea6\uff0c\u5426\u5219\u590d\u6742\u5ea6\u7206\u70b8\u3002\n\n### \u4ee3\u7801\n\n\u5173\u952e\u4ee3\u7801\u5982\u4e0b\uff08\u8981\u5b8c\u6574\u4ee3\u7801\u7684\u79c1\u4fe1\uff09\uff1a\n\n```cpp\nunordered_map<int,int> mrm;\n\nint max_factor(int n) { /*\u6c42\u4e00\u4e2a\u6570\u7684\u6700\u5927\u8d28\u56e0\u5b50*/\n\tif (mrm[n]) return mrm[n];\n\tint factor=pollard_rho(n);\n\tif (factor==n) return mrm[n]=n;\n\treturn mrm[n]=max(max_factor(factor),max_factor(n/factor));\n}\n```\n\n[AC Record](https://www.luogu.com.cn/record/97717113)\n\n## \u53c2\u8003\u8d44\u6599\n\n[Miller Rabin \u7b97\u6cd5\u8be6\u89e3 - \u81ea\u4e3a\u98ce\u6708\u9a6c\u524d\u5352 - \u535a\u5ba2\u56ed](https://www.cnblogs.com/zwfymqz/p/8150969.html)\n\n[\u7b97\u6cd5\u5b66\u4e60\u7b14\u8bb0(55): Pollard-Rho \u7b97\u6cd5 - \u77e5\u4e4e ](https://zhuanlan.zhihu.com/p/267884783)\n",
        "postTime": 1671604623,
        "uid": 413065,
        "name": "xiezheyuan",
        "ccfLevel": 5,
        "title": "Miller-Rabin \u4e0e Pollard-Rho \u7b97\u6cd5\u5b66\u4e60\u7b14\u8bb0"
    },
    {
        "content": "upd 2023.4.15\uff1a\u66f4\u6539\u4e00\u4e9b\u7b14\u8bef\u3002\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](http://cmsblog.top/archives/pollard-rho)\n\n## \u95ee\u9898\u5f15\u5165\n\n\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570  $a \\in \\mathbb{Z}^+$\uff0c\u8bf7\u627e\u5230\u5176\u4e00\u4e2a\u56e0\u5b50\u3002\n\n## \u6734\u7d20\u7b97\u6cd5\n\n\u8981\u627e\u5230\u5927\u6574\u6570\u7684\u4e00\u4e2a\u56e0\u5b50\uff0c\u6700\u6734\u7d20\u7684\u60f3\u6cd5\u662f\u8bd5\u9664\u6cd5\u3002\u4e5f\u5c31\u662f\u8fd9\u6837\uff1a\n\n```cpp\nint Find_Factor(int x) {\n    for(int i = 2; i * i <= N; i++)\n        if(n % i == 0)\n        \treturn i;\n    return n;\n}\n```\n\n\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f  $\\Theta(\\sqrt n)$ \u7684\uff0c\u4e0d\u80fd\u591f\u5904\u7406 $10^{18}$ \u53ca\u4ee5\u4e0a\u7684\u5927\u6570\u3002\n\n## \u57fa\u4e8e\u968f\u673a\u7684\u7b97\u6cd5\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u7528 Miller-Rabbin \u7b97\u6cd5\u68c0\u6d4b\u8d28\u6570\uff0c\u5982\u679c\u8fd9\u4e2a\u6570\u4e0d\u662f\u8d28\u6570\uff0c\u6bcf\u6b21\u4ece $[2\uff0cn - 1]$ \u4e2d\u968f\u673a\u4e00\u4e2a\u6570\u5b57\u8fdb\u884c\u5224\u65ad\uff0c\u4e5f\u5c31\u662f\u8fd9\u6837\uff1a\n\n```cpp\nint RandInt(int l , int r) {\n\tstatic mt19937 Rand(time(0));\n\tuniform_int_distribution<int> dis(l, r);\n\treturn dis(Rand);\n}\n\nint Find_Factor(int n) {\n\tif(Miller_Rabbin(n))\n\t\treturn n;\n\tint x;\n\tdo {\n\t\tx = RandInt(2 , n - 1);\n\t} while(n % x);\n\treturn x;\n}\n```\n\n\u4e0a\u8ff0\u7b97\u6cd5\u6700\u5dee\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n)$\u3002\n\n\u8fd9\u4e2a\u7cdf\u7cd5\u7684\u968f\u673a\u7b97\u6cd5\u53ef\u4ee5\u8fdb\u884c\u6539\u8fdb\uff1a\n\n```cpp\nint RandInt(int l , int r) {\n\tstatic mt19937 Rand(time(0));\n\tuniform_int_distribution<int> dis(l, r);\n\treturn dis(Rand);\n}\n\nint Find_Factor(int n) {\n\tif(Miller_Rabbin(n))\n\t\treturn n;\n\tint x , y;\n\tdo {\n\t\tx = RandInt(2 , n - 1);\n\t\ty = __gcd(n , x);\n\t} while(y == 1);\n\treturn y;\n}\n```\n\n\u5206\u6790\u6700\u5dee\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u5f53 $n$ \u4e3a $p^2$\uff08$p$ \u4e3a\u8d28\u6570\uff09\uff0c\u663e\u7136\u5f53\u968f\u673a\u6570 $x$ \u53d6 $p , 2p , 3p , \\cdots , (p-1)p$ \u65f6\u90fd\u53ef\u4ee5\u627e\u5230 $\\gcd(x , n) = p > 1$\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\sqrt n \\log n)$ \u7684\uff0c\u8fde\u66b4\u529b\u90fd\u6253\u4e0d\u8fc7\uff0c\u4f46\u8fd9\u662f Pollard-Rho \u7b97\u6cd5\u7684\u57fa\u7840\u3002\n\n## \u751f\u65e5\u6096\u8bba\n\n\u8fd9\u4e2a\u6096\u8bba\u662f Pollard-Rho \u7b97\u6cd5\u7684\u524d\u7f6e\u77e5\u8bc6\u3002\n\n\u5728\u4e00\u4e2a\u623f\u95f4\u4e2d\u81f3\u5c11\u6709\u591a\u5c11\u4eba\u53ef\u4ee5\u4f7f\u5f97\u540c\u4e00\u5929\u51fa\u751f\u7684\u4eba\u51fa\u751f\u7684\u6982\u7387\u4e3a $50\\%$\uff1f\n\n\u5047\u8bbe\u4e00\u5e74\u6709 $n$ \u5929\uff0c\u623f\u95f4\u91cc\u5171\u6709 $k$ \u4e2a\u4eba\uff0c\u7f16\u53f7\u4e3a $1 \\sim k$\uff0c\u5047\u8bbe\u751f\u65e5\u968f\u673a\u5206\u5e03\u3002\n\n\u8bbe $k$ \u4e2a\u4eba\u751f\u65e5\u4e0d\u76f8\u540c\u4e3a\u4e8b\u4ef6 $A$\uff0c\u5219\u6709\uff1a\n\n$$\\operatorname{Pr}\\{A\\} = \\sum_{i=n-k+ 1}^n \\frac{i}{n}$$\n\n\u540c\u4e00\u5929\u51fa\u751f\u7684\u4eba\u51fa\u751f\u7684\u6982\u7387\u4e3a $\\operatorname{Pr}\\{\\overline A\\} = 1-\\operatorname{Pr}\\{A\\}$\uff0c\u5f53 $\\operatorname{Pr}\\{ \\overline A\\} \\ge \\frac{1}{2}$ \u65f6\u663e\u7136\u6709 $\\operatorname{Pr}\\{A\\} \\le \\frac{1}{2}$\u3002\n\n\u4f7f\u7528 Mathemaica \u8ba1\u7b97\u51fa\u6765 $n = 365$ \u65f6 $k = 23$\u3002\n\n\u5b9e\u9645\u4e0a\u53ef\u4ee5\u4f7f\u7528\u968f\u673a\u53d8\u91cf\u6307\u793a\u5668\u8fdb\u884c\u8fd1\u4f3c\u5206\u6790\uff1a\n\n\u8bbe\u7b2c $i$ \u4e2a\u4eba\u548c\u7b2c $j$ \u4e2a\u4eba\u540c\u65f6\u5728\u7b2c $w$ \u5929\u51fa\u751f\u4e3a\u4e8b\u4ef6 $B$\uff0c\u6709\n\n$$\\operatorname{Pr}\\{N\\}=\\frac{1}{n^2}$$\n\n\u7531\u4e8e\u4e00\u5e74\u6709 $n$ \u5929\uff0c\u6240\u4ee5\u6709\n\n$$ \\operatorname{Pr}\\{i,j \\ born\\  on\\  the\\  same\\  day\\} = \\frac{1}{n}$$\n\n\u8bbe\u968f\u673a\u53d8\u91cf\u6307\u793a\u5668 $X_{i,j}$\uff0c\u5b9a\u4e49\uff1a\n\n$$\nX_{i,j} =\\left\\{ \n    \\begin{array}{lc}\n        1  &if\\ i \\ and \\ j\\ born\\  on\\  the\\  same\\  day\\\\\n        0  &Otherwise\n    \\end{array}\n\\right.\n$$\n\n\u90a3\u4e48\u6709\uff1a\n\n$$\n\\mathbb{E}[X_{i,j}] = \\operatorname{Pr}\\{i,j \\ born\\  on\\  the\\  same\\  day\\} = \\frac{1}{n}\n$$\n\n\u8bbe $X$ \u4e3a\u4e24\u4e2a\u4eba\u5728\u540c\u4e00\u5929\u51fa\u751f\u7684\u4eba\u7684\u65e0\u5e8f\u5bf9\u6570\uff0c\u5373  $X = \\sum\\limits_{i=1}^k \\sum\\limits_{j = i + 1}^kX_{i,j}$ \u5219\u6709\uff1a\n\n$$\n\\mathbb{E}[X] = \\mathbb{E}[\\sum\\limits_{i=1}^k \\sum\\limits_{j = i + 1}^kX_{i,j}]\n$$\n\n\u7531\u6570\u5b66\u671f\u671b\u7684\u7ebf\u6027\u6027\u8d28\u5f97\uff1a\n\n$$\n \\mathbb{E}[\\sum\\limits_{i=1}^k \\sum\\limits_{j = i + 1}^kX_{i,j}] = \\sum\\limits_{i=1}^k \\sum\\limits_{j = i + 1}^k \\mathbb{E}[X_{i,j}] = \\sum\\limits_{i=1}^k \\sum\\limits_{j = i + 1}^k \\frac{1}{n} = \\frac{k(k-1)}{2} \\times \\frac{1}{n}\n$$\n\n\u89e3\u5f97\u5f53 $n = 365$ \u65f6\uff0c\u623f\u95f4\u4e2d\u6709 $28$ \u4eba\u5c31\u53ef\u4ee5\u671f\u671b\u6709\u4e24\u4eba\u751f\u65e5\u76f8\u540c\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u8fd9\u6837\u4f18\u5316\uff1a\n\n\u539f\u6765\u4ece $[1,n]$ \u4e2d\u968f\u673a\u51fa\u6211\u4eec\u60f3\u8981\u7684\u6570\u5b57 $k$ \u7684\u6982\u7387\u4e3a $\\frac{1}{n}$\uff0c\u73b0\u5728\u6211\u4eec\u968f\u673a\u4e24\u4e2a\u6570 $i-j$ \u4f7f\u5f97 $|i-j|=k$ \u7684\u6982\u7387\u5927\u7ea6\u4e3a $\\frac{2}{n}$\uff0c\u6982\u7387\u6269\u5927\u4e86\u4e24\u500d\u5de6\u53f3\u3002\n\n## \u4f2a\u968f\u673a\u6570\u5e8f\u5217\n\nPollard-Rho \u4f7f\u7528\u4e00\u79cd\u7279\u522b\u7684\u4f2a\u968f\u673a\u6570\u751f\u6210\u5668\u6765\u751f\u6210 $[1,n-1]$ \u95f4\u7684\u4f2a\u968f\u673a\u6570\u5e8f\u5217\uff1a\u8bbe\u5e8f\u5217\u7b2c\u4e00\u4e2a\u6570\u4e3a $x$\uff0c$f(x) := (x^2+c) \\mod n$\uff0c\u5176\u4e2d $c$ \u4e3a\u53ef\u4ee5\u81ea\u884c\u6307\u5b9a\u7684\u5e38\u6570\uff0c\u5219 $x,f(x),f(f(x)),f(f(f(x)))$ \u4e3a\u4e00\u4e2a\u4f2a\u968f\u673a\u6570\u5e8f\u5217\u3002\n\n\u663e\u7136\u7684\uff0c\u6bcf\u4e2a\u6570\u90fd\u7531\u524d\u4e00\u4e2a\u6570\u5b57\u51b3\u5b9a\uff0c\u4ee5\u751f\u6210\u7684\u6570\u53c8\u662f\u6709\u9650\u7684\uff0c\u90a3\u4e48\u8fdf\u65e9\u4f1a\u8fdb\u5165\u5faa\u73af\uff0c\u800c\u4e14\u5927\u6982\u7387\u4e3a\u6df7\u5faa\u73af\uff0c\u6240\u4ee5\u751f\u6210\u7684\u5e8f\u5217\u7c7b\u4f3c\u4e00\u4e2a $\\rho$ \u5f62\uff0c\u6545\u540d $\\rho$ \u7b97\u6cd5\u3002\n\n\u9047\u5230\u73af\u540e\u6211\u4eec\u63a5\u4e0b\u6765\u505a\u7684\u968f\u673a\u90fd\u6ca1\u6709\u610f\u4e49\u4e86\uff0c\u6240\u4ee5\u9700\u8981\u66f4\u6362 $c$ \u91cd\u65b0\u5f00\u59cb\u3002\n\n## Floyd \u5224\u73af\u7b97\u6cd5\n\n\u8bbe\u7f6e\u4e24\u4e2a\u53d8\u91cf $t,r$\uff0c\u6bcf\u6b21\u5224\u65ad\u662f\u5426\u6709 $\\gcd(|t-r|,n) > 1$\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u4ee4 $t=f(t)$\uff0c$r=f(f(r))$\u3002\u56e0\u4e3a $r$ \u8dd1\u7684\u66f4\u5feb\uff0c\u90a3\u4e48\u5b83\u4eec\u6700\u540e\u4f1a\u76f8\u9047\uff0c\u8fd9\u65f6\u5019\u5c31\u6362\u4e00\u4e2a $c$ \u91cd\u65b0\u751f\u6210\u968f\u673a\u6570\u3002\n\n\u8fd9\u4e2a\u4f2a\u968f\u673a\u6570\u751f\u6210\u5668\u6709\u4e00\u4e2a\u6027\u8d28\uff1a\u5982\u679c $|i-j| \\equiv 0 (\\operatorname{mod} \\ p)$\uff0c\u90a3\u4e48\u6709 $|f(i)-f(j)| = |i^2 - j^2| = |i - j| \\times|i + j| \\equiv 0 (\\operatorname{mod} \\ p)$\n\n\u7531\u6b64\u53ef\u5f97\uff0c\u53ea\u8981\u73af\u4e0a\u8ddd\u79bb\u4e3a $x$ \u7684\u4e24\u4e2a\u6570\u6ee1\u8db3\u6761\u4ef6\uff0c\u90a3\u4e48\u6240\u6709\u8ddd\u79bb\u4e3a $x$ \u7684\u6570\u90fd\u6ee1\u8db3\u6761\u4ef6\u3002\u5728 Floyd \u5224\u73af\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u6b21\u79fb\u52a8\u90fd\u76f8\u5f53\u4e8e\u5728\u68c0\u67e5\u4e00\u4e2a\u65b0\u7684\u8ddd\u79bb $x$ \uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u8fdb\u884c\u4e24\u4e24\u6bd4\u8f83\u4e86\u3002\n\n\u8fd9\u4e2a\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u4f9d\u8d56\u4e8e\u8fd9\u4e2a\u4f2a\u968f\u673a\u6570\u751f\u6210\u5668\u7684\u968f\u673a\u7a0b\u5ea6\uff0c\u8fd8\u6ca1\u6709\u88ab\u4e25\u683c\u8bc1\u660e\u3002\u5982\u679c\u5b83\u662f\u8db3\u591f\u968f\u673a\u7684\uff0c\u90a3\u4e48\u671f\u671b\u590d\u6742\u5ea6\u663e\u7136\u662f $\\Theta(n^{\\frac{1}{4}}\\log n)$\u3002\n\n```cpp\nll RandInt(ll l , ll r) {\n\tstatic mt19937 Rand(time(0));\n\tuniform_int_distribution<ll> dis(l, r);\n\treturn dis(Rand);\n}\n\nll Pollard_Rho(ll n) {\n\tif(n == 4) {\n\t\treturn 2; \n\t} \n\tif(Miller_Rabin(n)) {\n\t\treturn n;\n\t}\n\twhile(true) {\n\t\tll c = RandInt(1 , n - 1);\n\t\tauto f = [=](ll x) {\n\t\t\treturn ((__int128)x * x + c) % n;\n\t\t};\n\t\tll t = f(0) , r = f(f(0));\n\t\twhile(t != r) {\n\t\t\tll d = __gcd(abs(t - r) , n);\n\t\t\tif(d > 1)\n\t\t\t\treturn d;\n\t\t\tt = f(t);\n\t\t\tr = f(f(r));\n\t\t}\n\t}\n}\n```\n\n## \u500d\u589e\u4f18\u5316\n\n\u7531\u4e8e $\\gcd(a,b)$ \u7684\u8fd0\u7b97\u4f1a\u82b1\u8d39 $O(\\log n)$ \u7684\u65f6\u95f4\uff0c\u4ece\u800c\u4f7f\u6211\u4eec\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6302\u4e0a\u4e86 $\\log$\uff0c\u8fd9\u4f7f\u4eba\u975e\u5e38\u4e0d\u723d\uff0c\u73b0\u5728\u6211\u4eec\u60f3\u529e\u6cd5\u53bb\u6389\u8fd9\u4e2a $\\log$\u3002\n\n\u6211\u4eec\u4f7f\u7528 **\u4e58\u6cd5\u7d2f\u8ba1** \u6765\u51cf\u5c11\u6c42 $\\gcd$ \u7684\u6b21\u6570\u3002\u5982\u679c $\\gcd(a,b) > 1$\uff0c\u90a3\u4e48\u6709 $\\gcd(ac,b)>1,c\\in \\mathbb{N}^*$\uff0c\u5e76\u4e14\u6709 $\\gcd(ac\\ \\operatorname{mod} \\ b,b) = \\gcd(a,b)$\u3002\n\n\u6211\u4eec\u6bcf\u8fc7\u4e00\u6bb5\u65f6\u95f4\u5bf9\u8fd9\u4e9b\u5dee\u503c\u8fdb\u884c $\\gcd$ \u8fd0\u7b97\uff0c\u8bbe $s = \\prod|x_0-x_1| \\ \\operatorname{mod} \\ n$\uff0c\u5982\u679c\u8fc7\u7a0b\u4e2d\u5b58\u5728 $s = 0$ \u6d4b\u8868\u793a\u5206\u89e3\u5931\u8d25\uff0c $n$ \u662f\u8d28\u6570\u3002\u6bcf\u9694 $2^k-1$ \u4e2a\u6570\uff0c\u8ba1\u7b97\u662f\u5426\u6ee1\u8db3  $1 < \\gcd(s,n) < n$\u3002\u6b64\u5904 $k=7$\uff0c\u53ef\u4ee5\u66f4\u5177\u9700\u8981\u81ea\u884c\u8c03\u8282\u3002\n\n```cpp\ntypedef long long ll;\ntypedef __int128 lll;\n\nll RandInt(ll l , ll r) {\n\tstatic mt19937 Rand(time(0));\n\tuniform_int_distribution<ll> dis(l, r);\n\treturn dis(Rand);\n}\n\nll Pollard_Rho(ll n) {\n\tif(Miller_Rabin(n)) {\n\t\treturn n;\n\t}\n\tll s = 0 , t = 0;\n\tll c = RandInt(1 , n - 1);\n\tint step = 0 , goal = 1;\n\tll value = 1;\n\tauto f = [=](ll x) {\n\t\treturn ((lll)x * x + c) % n;\n\t};\n\tfor(goal = 1;; goal <<= 1, s = t , value = 1) {\n\t\tfor(step = 1; step <= goal; step++) {\n\t\t\tt = f(t);\n\t\t\tvalue = ((lll)value * abs(t - s)) % n;\n\t\t\tif(step % 127 == 0) {\n\t\t\t\tll d = __gcd(value , n);\n\t\t\t\tif(d > 1) return d;\n\t\t\t}\n\t\t}\n\t\tll d = __gcd(value , n);\n\t\tif(d > 1) return d;\n\t}\n}\n```\n\n## \u3010\u6a21\u677f\u3011Pollard-Rho\u7b97\u6cd5\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4718)\n\n## \u601d\u8def\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6570 $n$\uff0c\u5982\u679c\u7528 Miller_Rabin \u5224\u65ad\u51fa\u6765\u4ed6\u662f\u8d28\u6570\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u3002\n\n\u5426\u5219\u627e\u5230\u5b83\u7684\u4e00\u4e2a\u771f\u56e0\u5b50 $p$\uff0c\u628a $n$ \u9664\u53bb\u6240\u6709\u7684 $p$ \u56e0\u5b50\uff0c\u518d\u9012\u5f52\u5206\u89e3 $n$ \u548c $p$\uff0c\u5176\u4e2d\u4f7f\u7528 Miller_Rabin \u5224\u65ad\u662f\u5426\u5b58\u5728\u8d28\u56e0\u5b50\uff0c\u5e76\u6253\u64c2\u53f0\u53d6\u6700\u5927\u503c\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef __int128 lll;\n\nll RandInt(ll l , ll r) {\n\tstatic mt19937 Rand(time(0));\n\tuniform_int_distribution<ll> dis(l, r);\n\treturn dis(Rand);\n}\n\nll Quick_Power(ll a , ll b , ll p) {\n\tll res = 1;\n\twhile(b) {\n\t\tif(b & 1) res = (lll)res * a % p;\n\t\ta = (lll)a * a % p;\n\t\tb >>= 1;\n\t}\n\treturn res;\n}\n\nbool Miller_Rabin(ll n) {\n\tif(n < 3 || n % 2 == 0) return n == 2;\n\tll a = n - 1 , b = 0;\n\twhile(a % 2 == 0) {\n\t\ta /= 2;\n\t\tb++;\n\t}\n\tfor(int i = 1 , j; i <= 10; i++) {\n\t\tll x = RandInt(2 , n - 1);\n\t\tll v = Quick_Power(x , a , n);\n\t\tif(v == 1) continue;\n\t\tfor(j = 0; j < b; j++) {\n\t\t\tif(v == n - 1) break;\n\t\t\tv = (lll) v * v % n;\n\t\t}\n\t\tif(j == b) return 0;\n\t}\n\treturn 1; \n}\n\nll Pollard_Rho(ll n) {\n\tll s = 0 , t = 0;\n\tll c = RandInt(1 , n - 1);\n\tint step = 0 , goal = 1;\n\tll value = 1;\n\tauto f = [=](ll x) {\n\t\treturn ((lll)x * x + c) % n;\n\t};\n\tfor(goal = 1;; goal <<= 1, s = t , value = 1) {\n\t\tfor(step = 1; step <= goal; step++) {\n\t\t\tt = f(t);\n\t\t\tvalue = ((lll)value * abs(t - s)) % n;\n\t\t\tif(step % 127 == 0) {\n\t\t\t\tll d = __gcd(value , n);\n\t\t\t\tif(d > 1) return d;\n\t\t\t}\n\t\t}\n\t\tll d = __gcd(value , n);\n\t\tif(d > 1) return d;\n\t}\n}\n\nll Ans;\n\nvoid Fac(ll n) {\n\tif(n <= Ans || n < 2) return;\n\tif(Miller_Rabin(n)) {\n\t\tAns = max(Ans , n);\n\t\treturn;\n\t}\n\tll p = n;\n\twhile(p == n) p = Pollard_Rho(n);\n\twhile((n % p) == 0) n /= p;\n\tFac(n);\n\tFac(p); \n}\n\nll T , N;\n\nint main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tcout.tie(0);\n\tcin >> T;\n\twhile(T--) {\n\t\tAns = 0;\n\t\tcin >> N;\n\t\tFac(N);\n\t\tif(Ans == N) {\n\t\t\tcout << \"Prime\" << endl;\n\t\t}\n\t\telse {\n\t\t\tcout << Ans << endl;\n\t\t}\n\t}\n\treturn 0;\n} \n```",
        "postTime": 1657761225,
        "uid": 461426,
        "name": "CmsMartin",
        "ccfLevel": 6,
        "title": "Pollard-Rho\u7b97\u6cd5"
    }
]