[
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684 `Trie` \u6811\uff0c\u8fdb\u884c $k$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u4e00\u4e2a\u4e32 $str$ \u4e0e `Trie` \u6811\u4e0a\u4ece\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u5f00\u59cb\u8d70\u5230\u6839\u8def\u5f84\u4e0a\u5f62\u6210\u7684\u4e32\u4e2d\uff0c\u6709\u591a\u5c11\u4e2a\u4e32\u6ee1\u8db3 $str$ \u662f\u5176\u524d\u7f00\u3002\n\n$1 \\leq n,k,\\sum|str| \\leq 10^6$\n\n## \u9898\u76ee\u89e3\u6cd5\n\n\u8003\u8651 `Trie` \u6811\u4e0a\u6bcf\u4e00\u4e2a\u4e32\u5bf9\u6240\u6709\u8be2\u95ee\u4e32\u7684\u8d21\u732e\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c\u6211\u4eec\u5bf9\u8be2\u95ee\u4e32\u7684\u53cd\u4e32\u5efa `AC` \u81ea\u52a8\u673a\uff08\u6b64\u65f6\u8981\u6c42\u7684\u6761\u4ef6\u662f\u8be2\u95ee\u4e32\u662f `Trie` \u6811\u4e0a\u7684\u4e32\u7684\u540e\u7f00\uff09\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u4e32 $S$\uff0c\u5b83\u5728 `AC` \u81ea\u52a8\u673a\u4e2d\u51fa\u73b0\u8fc7\u7684\u6240\u6709\u540e\u7f00\uff0c\u4e00\u5b9a\u662f `fail` \u6811\u4e0a\u7684\u4e00\u6761\u5230\u6839\u8282\u70b9\u7684\u94fe\u3002\u6211\u4eec\u53ea\u9700\u8981\u7528 $S$ \u5728 `AC` \u81ea\u52a8\u673a\u4e0a\u66b4\u529b\u5339\u914d\uff0c\u5c31\u80fd\u627e\u5230\u6700\u957f\u7684\u90a3\u4e00\u4e2a\u540e\u7f00\u3002\u6253\u4e00\u4e2a\u524d\u7f00\u548c\u6807\u8bb0\u6700\u540e\u8fdb\u884c\u4e00\u904d `DFS` \u5373\u53ef\u3002\n\n\u73b0\u5728\u6211\u4eec\u9700\u8981\u5bf9 `Trie` \u6811\u4e0a\u6240\u6709\u70b9\u4ee3\u8868\u7684\u5b57\u7b26\u4e32\u8dd1\u4e00\u904d\u5339\u914d\u3002\u7531\u4e8e `Trie` \u6811\u4e0a\u7684\u5b50\u8282\u70b9\u6240\u4ee3\u8868\u7684\u4e32\u5728 `AC` \u81ea\u52a8\u673a\u4e0a\u8dd1\u5230\u7684\u5339\u914d\u662f\u53ef\u4ee5\u76f4\u63a5\u7528\u5176\u7236\u8282\u70b9\u5339\u914d\u7684\u4f4d\u7f6e\u8df3\u4e00\u6b65\u8f6c\u79fb\u5c31\u53ef\u4ee5\u5230\u8fbe\u7684\u3002\u5229\u7528 `Trie` \u56fe\u7684\u5c0f `trick` \u5c31\u80fd\u505a\u5230 $O(n + k + |str|)$\u3002\n\n`Code`\uff1a\n\n```cpp\nconst int MAXN = 1000010;\n\nint tr[MAXN][26];\nint res[MAXN];\nint pos[MAXN];\n\nchar str[MAXN];\nvector<int>to[MAXN];\n\nstruct ACAM {\n\tint tr[MAXN][26];\n\tint fail[MAXN];\n\tint cnt[MAXN];\n\tint ct;\n\n\tinline int Insert(int n) {\n\t\tint x = 0;\n\t\tfor(int i = n; i >= 1; i--) {\n\t\t\tint c = str[i] - 'A';\n\t\t\tif(!tr[x][c])\n\t\t\t\ttr[x][c] = ++ct;\n\t\t\tx = tr[x][c];\n\t\t} return x;\n\t}\n\n\tinline void build() {\n\t\tqueue<int>q;\n\t\tfor(int i = 0; i < 26; i++)\n\t\t\tif(tr[0][i]) q.push(tr[0][i]);\n\t\twhile(!q.empty()) {\n\t\t\tint x = q.front(); q.pop();\n\t\t\tfor(int c = 0; c < 26; c++)\n\t\t\t\tif(tr[x][c]) fail[tr[x][c]] = tr[fail[x]][c], q.push(tr[x][c]);\n\t\t\t\telse tr[x][c] = tr[fail[x]][c];\n\t\t}\n\t\tfor(int i = 1; i <= ct; i++)\n\t\t\tto[fail[i]].push_back(i);\n\t}\n\n\tinline void dfs(int x) {\n\t\tint sz = to[x].size();\n\t\tfor(int i = 0; i < sz; i++)\n\t\t\tdfs(to[x][i]), cnt[x] += cnt[to[x][i]];\n\t}\n}ac;\n\ninline void dfs(int x, int y) {\n\tac.cnt[y]++;\n\tfor(int c = 0; c < 26; c++)\n\t\tif(tr[x][c]) dfs(tr[x][c], ac.tr[y][c]);\n}\n\nint main() {\n\tint n = ri, k = ri;\n\tfor(int i = 1; i <= n; i++) {\n\t\tchar ch = ge;\n\t\twhile(!isalpha(ch)) ch = ge;\n\t\ttr[ri][ch - 'A'] = i;\n\t}\n\tfor(int i = 1; i <= k; i++) {\n\t\tchar ch = ge; int len = 0;\n\t\twhile(!isalpha(ch)) ch = ge;\n\t\twhile(isalpha(ch)) str[++len] = ch, ch = ge;\n\t\tpos[i] = ac.Insert(len);\n\t} ac.build(), dfs(0, 0), ac.dfs(0);\n\tfor(int i = 1; i <= k; i++) printf(\"%d\\n\", ac.cnt[pos[i]]);\n\treturn 0;\n}\n```",
        "postTime": 1603075411,
        "uid": 20782,
        "name": "CYJian",
        "ccfLevel": 10,
        "title": "FG: First of Her Name \u9898\u89e3"
    },
    {
        "content": "## \u601d\u8def\n\n\u591a\u4e32\u67e5\u8be2\uff0c\u8003\u8651 $\\texttt{AC}$ \u81ea\u52a8\u673a\u3002\n\n\u5982\u679c\u4ee5\u9898\u76ee\u6240\u63cf\u8ff0\u7684\u987a\u5e8f\u96be\u4ee5\u63d2\u5165\uff0c\u8003\u8651\u6bcf\u6b21\u5728\u5176\u6bcd\u4eb2\u7684\u540d\u5b57\u540e\u9762\u52a0\u5b57\u6bcd\uff0c\u518d\u628a\u8be2\u95ee\u7684\u524d\u7f00\u5012\u8fc7\u6765\uff0c\u53d8\u6210\u8be2\u95ee\u540e\u7f00\uff0c\u8fd9\u6837\u95ee\u9898\u7b80\u5316\u4e86\u5f88\u591a\u3002\n\n\u9996\u5148\u628a\u6bcf\u4f4d\u592b\u4eba\u7684\u540d\u5b57\u63d2\u5165\uff0c\u867d\u7136\u603b\u957f\u5ea6\u5f88\u957f\uff0c\u4f46\u662f\u7531\u4e8e\u6bcf\u6b21\u53ea\u5728\u5df2\u6709\u7684\u4e32\u540e\u9762\u52a0\u4e00\u4e2a\u5b57\u7b26\uff0c\u6240\u4ee5\u6bcf\u6b21 $\\texttt{trie}$ \u7684\u5927\u5c0f\u53ea\u4f1a $+1$\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u67e5\u8be2\u3002\u5982\u679c\u76f4\u63a5\u8fd9\u6837\u53bb\u67e5\u8be2\u5f88\u96be\u4ee5\u5904\u7406\uff0c\u56e0\u4e3a\u9700\u8981\u627e\u5230 $\\texttt{trie}$ \u56fe\u4e2d\u6bcf\u4e00\u6761\u5305\u542b\u8fd9\u4e2a\u67e5\u8be2\u4e32\u7684\u94fe\u3002\n\n\u4e00\u4e2a\u5f88\u5de7\u5999\u7684\u5904\u7406\u662f\u628a\u67e5\u8be2\u4e32\u4e5f\u63d2\u5165 $\\texttt{AC}$ \u81ea\u52a8\u673a\u4e2d\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u5176\u5728 $\\texttt{fail}$ \u6811\u4e2d\u5bf9\u5e94\u7684\u7ed3\u70b9\u7684\u5b50\u6811\u4e00\u5b9a\u5305\u542b\u4e86\u6240\u6709\u4ee5\u5b83\u4e3a\u540e\u7f00\u7684\u4e32\u3002\n\n\u8fd9\u6837\u4e00\u6765\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8ba9\u6bcf\u4e00\u4e2a\u540d\u5b57\u4e32\u7684\u7ed3\u5c3e\u6743\u503c\u4e3a $1$\uff0c\u7136\u540e\u7edf\u8ba1\u6bcf\u4e2a\u7ed3\u70b9\u5728 $\\texttt{fail}$ \u6811\u4e0a\u7684\u5b50\u6811\u6743\u503c\u548c\u3002\u76f4\u63a5\u67e5\u8be2\u8be5\u8be2\u95ee\u7684\u4e32\u5bf9\u5e94\u7684\u5b50\u6811\u6743\u503c\u548c\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <queue>\nusing namespace std;\nconst int N = 2e6 + 5, S = 26;\n\nint pos[N];\nstring s;\n\nint cnt, elst[N];\nstruct edge {\n\tint to, nxt;\n} e[N << 1];\nvoid add(int u, int v) {\n\te[++cnt].to = v;\n\te[cnt].nxt = elst[u];\n\telst[u] = cnt;\n}\n\nint idx, go[N][S], fa[N], siz[N];\nvoid ins(string s, int id) {\n\tint u = 0;\n\tfor (auto i : s) {\n\t\tint c = i - 'A';\n\t\tif (!go[u][c]) go[u][c] = ++idx;\n\t\tu = go[u][c];\n\t}\n\tpos[id] = u;\n}\nvoid build() {\n\tqueue<int> q;\n\tfor (int i = 0; i < S; i++)\n\t\tif (go[0][i]) q.push(go[0][i]);\n\twhile (!q.empty()) {\n\t\tint u = q.front();\n\t\tq.pop();\n\t\tadd(fa[u], u);\n\t\tfor (int i = 0; i < S; i++) {\n\t\t\tif (go[u][i]) fa[go[u][i]] = go[fa[u]][i], q.push(go[u][i]);\n\t\t\telse go[u][i] = go[fa[u]][i];\n\t\t}\n\t}\n}\nvoid dfs(int u) {\n\tfor (int i = elst[u]; i; i = e[i].nxt) {\n\t\tint v = e[i].to;\n\t\tdfs(v);\n\t\tsiz[u] += siz[v];\n\t}\n}\n\nint main() {\n\tint n, m;\n\tscanf(\"%d %d\", &n, &m);\n\tfor (int i = 1; i <= n; i++) {\n\t\tchar c;\n\t\tint p, u;\n\t\tscanf(\"\\n%c %d\", &c, &p);\n\t\tu = pos[p];\n\t\tif (!go[u][c - 'A']) go[u][c - 'A'] = ++idx;\n\t\tu = go[u][c - 'A'];\n\t\tpos[i] = u;\n\t\tsiz[u]++;\n\t}\n\tfor (int i = 1; i <= m; i++) {\n\t\tcin >> s;\n\t\treverse(s.begin(), s.end());\n\t\tins(s, i + n);\n\t}\n\tbuild();\n\tdfs(0);\n\tfor (int i = 1; i <= m; i++) printf(\"%d\\n\", siz[pos[i + n]]);\n\treturn 0;\n}\n```",
        "postTime": 1670919470,
        "uid": 365542,
        "name": "SDqwq",
        "ccfLevel": 7,
        "title": "P6257 [ICPC2019 WF]First of Her Name"
    },
    {
        "content": "\u6b64\u6587\u540c\u6b65\u4e8e\u6211\u7684\u535a\u5ba2\uff1a<https://www.alpha1022.me/articles/loj-6583>\n\n\u4f9d\u7136\u662f\u4e00\u4e2a\u5e7f\u4e49 SAM \u5c51\u9898\uff08  \n\u4e8e\u662f ACAM \u7167\u6837\u80fd\u505a\uff08\n\n\u4e3a\u4e86\u7b26\u5408\u5404\u79cd\u5b57\u7b26\u4e32\u6570\u636e\u7ed3\u6784\u7684\u4e60\u60ef\uff0c\u8003\u8651\u5c06\u6240\u6709\u4e32\u53cd\u8fc7\u6765\u3002  \n\u53d1\u73b0\u5c06\u8f93\u5165\u770b\u505a Trie \u4e0a\u7684\u8fde\u8fb9\u5c31\u53ef\u4ee5\u4e86\u3002  \n\u4e8e\u662f\u76f4\u63a5 BFS \u5efa\u5e7f\u4e49 SAM\uff0c\u8be2\u95ee\u5219\u5c06\u8be2\u95ee\u4e32\u53cd\u8fc7\u6765\u653e\u5728\u5e7f\u4e49 SAM \u4e0a\u8dd1\uff0c\u8fbe\u5230\u7684\u72b6\u6001\u7684 Parent Tree \u4e0a\u5b50\u6811\u5185\u6240\u6709\u72b6\u6001\u90fd\u662f\u4ee5\u5b83\u4e3a\u4e00\u4e2a\u540e\u7f00\u7684\u5b57\u7b26\u4e32\u3002  \n\u53c8\u56e0\u4e3a\u6bcf\u4e2a\u72b6\u6001\u4e00\u5b9a\u90fd\u662f\u4e00\u4e2a\u540d\u5b57\uff0c\u6240\u4ee5\u76f4\u63a5\u5bf9\u6240\u6709\u4e32\u7ef4\u62a4 $|{\\rm endpos}|$ \u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nconst int N = 1e6;\nint n,m,k;\nchar s[N + 5];\nstruct node\n{\n    int ch[26];\n    int ed;\n} tr[N + 5];\nnamespace SAM\n{\n    struct node\n    {\n        int ch[26];\n        int fa,len;\n    } sam[(N << 1) + 5];\n    int tot = 1,las = 1,sz[(N << 1) + 5];\n    inline void insert(int x)\n    {\n        int cur = las,p = las = ++tot,nxt;\n        sam[p].len = sam[cur].len + 1,sz[p] = 1;\n        for(;cur && !sam[cur].ch[x];cur = sam[cur].fa)\n            sam[cur].ch[x] = p;\n        if(!cur)\n            sam[p].fa = 1;\n        else\n        {\n            int q = sam[cur].ch[x];\n            if(sam[cur].len + 1 == sam[q].len)\n                sam[p].fa = q;\n            else\n            {\n                nxt = ++tot;\n                sam[nxt] = sam[q],sam[nxt].len = sam[cur].len + 1,sam[p].fa = sam[q].fa = nxt;\n                for(;cur && sam[cur].ch[x] == q;cur = sam[cur].fa)\n                    sam[cur].ch[x] = nxt;\n            }\n        }\n    }\n    int c[N + 5],a[(N << 1) + 5];\n    inline void init()\n    {\n        for(register int i = 1;i <= tot;++i)\n            ++c[sam[i].len];\n        for(register int i = 1;i <= N;++i)\n            c[i] += c[i - 1];\n        for(register int i = tot;i > 1;--i)\n            a[c[sam[i].len]--] = i;\n        for(register int i = tot;i > 1;--i)\n            sz[sam[a[i]].fa] += sz[a[i]];\n    }\n}\nint q[N + 5],head,tail;\nint main()\n{\n    scanf(\"%d%d\",&n,&k);\n    char ch;\n    int fa;\n    for(register int i = 1;i <= n;++i)\n        scanf(\" %c%d\",&ch,&fa),tr[++fa].ch[ch - 'A'] = i + 1;\n    q[tail = 1] = 1,tr[1].ed = 1;\n    for(register int p;head < tail;)\n    {\n        p = q[++head];\n        for(register int i = 0;i < 26;++i)\n            if(tr[p].ch[i])\n                SAM::las = tr[p].ed,SAM::insert(i),tr[tr[p].ch[i]].ed = SAM::las,q[++tail] = tr[p].ch[i];\n    }\n    SAM::init();\n    for(;k;--k)\n    {\n        scanf(\"%s\",s + 1),m = strlen(s + 1);\n        int p = 1,flag = 0;\n        for(register int i = m;i;--i)\n        {\n            if(!SAM::sam[p].ch[s[i] - 'A'])\n            {\n                puts(\"0\"),flag = 1;\n                break;\n            }\n            p = SAM::sam[p].ch[s[i] - 'A'];\n        }\n        if(!flag)\n            printf(\"%d\\n\",SAM::sz[p]);\n    }\n}\n```",
        "postTime": 1593928846,
        "uid": 75840,
        "name": "deserter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6257 \u3010[ICPC2019 WF]First of Her Name\u3011"
    }
]