[
    {
        "content": "## \u524d\u8a00\n\n[\u9898\u76ee\u4f20\u9001\u95e8\uff01](https://www.luogu.com.cn/problem/P8422)\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff1f](https://www.cnblogs.com/liangbowen/p/17151985.html)\n\n\u7b2c\u4e09\u9053\u5927\u6a21\u62df\uff0c\u5199\u7bc7\u9898\u89e3\u5e86\u795d\u4e00\u4e0b\u3002\n\n\u6587\u4e2d\u7c97\u4f53\u5b57\u662f\u6211\u8e29\u5751\u7684\u5730\u65b9\uff0c\u6b22\u8fce\u7edf\u8ba1\u6211\u88ab\u5751\u4e86\u591a\u5c11\u6b21\u3002\n\n## \u601d\u8def\n\n\u7ec8\u5c40\u5956\u5206\u5f88\u7b80\u5355\uff0c\u653e\u5728\u4e3b\u51fd\u6570\u91cc\uff0c\u6240\u4ee5\u6211\u4eec\u770b\u6bcf\u6b21\u7684\u64cd\u4f5c\u662f\u600e\u6837\u7684\u3002\n\n\u9996\u5148\u5224\u65ad\u64cd\u4f5c\u4e0d\u5408\u6cd5\uff1a\n\n+ \u7ed9\u5b9a\u7684\u5750\u6807\u8d85\u51fa\u8303\u56f4\u3002\n+ \u662f\u7a7a\u4f4d\u7f6e\u3002\n+ \u4e0d\u662f\u76f8\u90bb\u7684\u3002\n+ **\u4ea4\u6362\u540e\u4ecd\u7136\u4e0d\u5408\u6cd5**\u3002\n\n\u6ce8\u610f\u4e0d\u5408\u6cd5\u8981**\u628a\u4ea4\u6362\u7684\u4e1c\u897f\u590d\u539f**\u3002\u7136\u540e\u6211\u4eec\u5408\u6cd5\u7684\u8bdd\u5c31\u4e00\u76f4\u64cd\u4f5c\uff0c\u4e0d\u5408\u6cd5\u4e86\u5c31\u8df3\u51fa\uff0c\u8dd1\u4e0b\u4e00\u6b21\u3002\n\n\u8fd9\u91cc\u5927\u5bb6\u53ef\u4ee5\u53c2\u8003\u6211\u7684\u987a\u5e8f\uff1a\n\n1. \u7edf\u8ba1\u4e3b\u989c\u8272\uff0c\u6ee1\u4e86\u5c31\u770b**\u724c\u578b\u5956\u5206**\u3002\n2. \u4e00\u76f4\u8dd1\u3002\u5148\u8fde\u901a\u5757\u7edf\u8ba1\u7ec4\u5408\u5956\u5206\u3002\n3. \u6d88\u9664\uff0c\u5305\u62ec\u7279\u6b8a\u5c5e\u6027\u3002\u6d88\u9664\u7684\u65f6\u5019\u7edf\u8ba1\u6d88\u9664\u5956\u5206\u3002\u6ce8\u610f\u8fd9\u91cc\u53ea\u6807\u8bb0\u4e0d\u5220\u9664\u3002\n4. \u73b0\u5728\u518d\u5220\u9664\u3002\n5. \u81ea\u7531\u6389\u843d\u3002\n6. \u5faa\u73af\u7ed3\u675f\u4e86\u3002\u7edf\u8ba1\u8fde\u9501\u5956\u5206\u3002\n\n\u5927\u90e8\u5206\u64cd\u4f5c\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff0c\u6bd4\u8f83\u6076\u5fc3\u7684\u64cd\u4f5c\u5c31\u662f\u724c\u578b\u5956\u5206\u3002\n\n\u9996\u5148\u6211\u4eec\u7edf\u8ba1\u7684\u65f6\u5019\u628a\u4e3b\u51fd\u6570\u7528 Node \u5b58\u50a8\u3002**\u5b58\u50a8\u7684\u989c\u8272\u663e\u7136\u4e0d\u80fd\u91cd\u590d**\u3002\n\n```cpp\nNode tmp = (Node){-114514, -114514};\nfor (int i = 1; i <= n; i++)\n\tfor (int j = 1; j <= m; j++)\n\t\tif (del[i][j])\n\t\t{\n\t\t\tif (tmp.x == -114514) tmp.x = color[i][j];\n\t\t\telse if (tmp.y != color[i][j] && tmp.y == -114514) tmp.y = color[i][j];\n\t\t}\ncard[++cntcard] = tmp;\nif (cntcard == 5)\n{\n\tvector <int> empty; //\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u7684\u73a9\u610f\uff0c\u4ed6\u662f\u7a7a\u7684\n\tmaxn = 0, dfs(1, empty);\n\tans += maxn;\n\tcntcard = 0;\n}\n```\n\n\u73b0\u5728\u6ee1\u4e94\u4e2a\u4e86\uff0c\u76f4\u63a5\u679a\u4e3e\u8df3\u989c\u8272 1 \u8fd8\u662f\u989c\u8272 2 \u5373\u53ef\u3002\n\n```cpp\n#define let(x) tmp.push_back(x), dfs(i + 1, tmp), tmp.pop_back()\nvoid dfs(int i, vector <int> tmp)\n{\n\tif (i > 5) {maxn = max(maxn, calc(tmp)); return;}\n\tif (card[i].x != -114514) let(card[i].x);\n\tif (card[i].y != -114514) let(card[i].y);\n}\n```\n\n\u81f3\u4e8e**\u8ba1\u7b97**\u5c31\u6bd4\u8f83\u7b80\u5355\u4e86\uff08\u4f46\u662f\u5224\u65ad\u8f83\u591a\uff0c\u8111\u5b50\u4e0d\u6e05\u9192\u6700\u597d\u4e0d\u8981\u505a\uff09\u3002\u5143\u7d20\u53ea\u6709\u4e94\u4e2a\uff0c\u6240\u4ee5\u7528\u4efb\u4f55\u529e\u6cd5\u7edf\u8ba1\u90fd\u53ef\u4ee5\uff0c\u663e\u7136\u4e0d\u4f1a\u8d85\u65f6\u3002\n\n## \u4ee3\u7801\n\n\u8fd9\u6b21\u6253\u5927\u6a21\u62df\u6fc0\u8fdb\u4e86\u4e00\u70b9\uff0c\u6240\u4ee5\u5c31\u6ca1\u5199\u591a\u5c11\u6ce8\u91ca\uff0c\u4f46\u662f\u770b\u61c2\u5f88\u5bb9\u6613\u7684\u5427\uff08\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <vector>\n#include <algorithm>\n//\u8fd9\u4e24\u4e2a\u662f\u5173\u952e\u5b57\uff0c\u6240\u4ee5\u5c31\u66ff\u6362\u6389\uff0c\u4ee3\u7801\u4e2d\u6ca1\u6709\u5f71\u54cd\n#define y1 jojojo\n#define round jinitaimei\nusing namespace std;\n#define squ(x) ((x) * (x))\nconst int N = 55, dict[4][2] = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};\nint n, m, k, q, color[N][N], tag[N][N];\nvoid swp(int x1, int y1, int x2, int y2) {swap(color[x1][y1], color[x2][y2]), swap(tag[x1][y1], tag[x2][y2]);}\nbool near(int x1, int y1, int x2, int y2)\n{\n\tfor (int i = 0; i < 4; i++)\n\t\tif (x1 + dict[i][0] == x2 && y1 + dict[i][1] == y2 || x2 + dict[i][0] == x1 && y2 + dict[i][1] == y1)\n\t\t\treturn true;\n\treturn false;\n}\nstruct Node {int x, y;};\nbool del[N][N];\nbool chk()\n{\n\tmemset(del, false, sizeof del);\n\tbool flag = false;\n\tfor (int x = 1; x <= n; x++)\n\t\tfor (int y = 1; y <= m; y++)\n\t\t\tfor (int i = 0; i < 4; i++)\n\t\t\t{\n\t\t\t\tint dx = x + dict[i][0], dy = y + dict[i][1], ddx = dx + dict[i][0], ddy = dy + dict[i][1];\n\t\t\t\tif (dx < 1 || dx > n || dy < 1 || dy > m) continue;\n\t\t\t\tif (ddx < 1 || ddx > n || ddy < 1 || ddy > m) continue;\n\t\t\t\tif (color[x][y] != 0 && color[x][y] == color[dx][dy] && color[x][y] == color[ddx][ddy])\n\t\t\t\t\tdel[x][y] = del[dx][dy] = del[ddx][ddy] = flag = true;\n\t\t\t}\n\treturn flag;\n}\nbool vis[N][N]; int siz;\nvoid dfs(int x, int y)\n{\n\tsiz++, vis[x][y] = true;\n\tfor (int i = 0; i < 4; i++)\n\t{\n\t\tint dx = x + dict[i][0], dy = y + dict[i][1];\n\t\tif (dx < 1 || dx > n || dy < 1 || dy > m) continue;\n\t\tif (del[dx][dy] && color[x][y] == color[dx][dy] && !vis[dx][dy]) dfs(dx, dy);\n\t}\n}\nint ans, round;\nvoid remove(int x, int y)\n{\n\tif (color[x][y] == 0 || vis[x][y]) return;\n\tvis[x][y] = true, ans += round * color[x][y];\n\tif (tag[x][y] == 1 || tag[x][y] == 3) {for (int i = 1; i <= m; i++) remove(x, i);}\n\tif (tag[x][y] == 2 || tag[x][y] == 3) {for (int i = 1; i <= n; i++) remove(i, y);}\n\tif (tag[x][y] == 4)\n\t{\n\t\tfor (int i = max(1, x - 1); i <= min(n, x + 1); i++)\n\t\t\tfor (int j = max(1, y - 1); j <= min(m, y + 1); j++)\n\t\t\t\tremove(i, j);\n\t}\n\telse if (tag[x][y] == 5)\n\t{\n\t\tfor (int i = max(1, x - 2); i <= min(n, x + 2); i++)\n\t\t\tfor (int j = max(1, y - 2); j <= min(m, y + 2); j++)\n\t\t\t\tremove(i, j);\n\t}\n\telse if (tag[x][y] == 6)\n\t{\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tfor (int j = 1; j <= m; j++)\n\t\t\t\tif (color[i][j] == color[x][y])\n\t\t\t\t\tremove(i, j);\n\t}\n}\nvoid drop()\n{\n\tfor (int i = n; i; i--)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t\tif (color[i][j] == 0)\n\t\t\tfor (int ii = i - 1; ii; ii--)\n\t\t\t\tif (color[ii][j] != 0)\n\t\t\t\t{\n\t\t\t\t\tswp(i, j, ii, j);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\n}\nNode card[105]; int cntcard;\nint calc(vector <int> v)\n{\n\tint cntbox[105] = {}; vector <int> cnt[10];\n\tfor (int x : v) cntbox[x]++;\n\tfor (int i = 0; i < 105; i++) cnt[cntbox[i]].push_back(i);\n\tfor (int i = 0; i < 10; i++) sort(cnt[i].begin(), cnt[i].end());\n\t\n\tif ((int)cnt[1].size() == 5) return 50 + cnt[1][4];\n\tif ((int)cnt[1].size() == 3 && (int)cnt[2].size() == 1) return 100 + cnt[2][0] * 2;\n\tif ((int)cnt[1].size() == 1 && (int)cnt[2].size() == 2) return 200 + cnt[2][1] * 2 + cnt[2][0];\n\tif ((int)cnt[1].size() == 2 && (int)cnt[3].size() == 1) return 300 + cnt[3][0] * 3;\n\tif ((int)cnt[2].size() == 1 && (int)cnt[3].size() == 1) return 500 + cnt[3][0] * 3 + cnt[2][0];\n\tif ((int)cnt[1].size() == 1 && (int)cnt[4].size() == 1) return 750 + cnt[4][0] * 5;\n\tif ((int)cnt[5].size() == 1) return 1000 + cnt[5][0] * 10;\n    return 0;\n}\nint maxn;\n#define let(x) tmp.push_back(x), dfs(i + 1, tmp), tmp.pop_back()\nvoid dfs(int i, vector <int> tmp)\n{\n\tif (i > 5) {maxn = max(maxn, calc(tmp)); return;}\n\tif (card[i].x != -114514) let(card[i].x);\n\tif (card[i].y != -114514) let(card[i].y);\n}\nvoid play()\n{\n\tNode tmp = (Node){-114514, -114514};\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t\tif (del[i][j])\n\t\t\t{\n\t\t\t\tif (tmp.x == -114514) tmp.x = color[i][j];\n\t\t\t\telse if (tmp.x != color[i][j] && tmp.y == -114514) tmp.y = color[i][j];\n\t\t\t}\n\tcard[++cntcard] = tmp;\n\tif (cntcard == 5)\n\t{\n\t\tvector <int> empty;\n\t\tmaxn = 0, dfs(1, empty);\n\t\tans += maxn;\n\t\t//printf(\"mx = %d\\n\", maxn);\n\t\tcntcard = 0;\n\t}\n\tfor (round = 1;; round++)\n\t{\n\t\tmemset(vis, false, sizeof vis);\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tfor (int j = 1; j <= m; j++)\n\t\t\t\tif (del[i][j] && !vis[i][j])\n\t\t\t\t\tsiz = 0, dfs(i, j), ans += 50 * squ(siz - 3);\n\t\tmemset(vis, false, sizeof vis);\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tfor (int j = 1; j <= m; j++)\n\t\t\t\tif (del[i][j] && !vis[i][j])\n\t\t\t\t\tremove(i, j);\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tfor (int j = 1; j <= m; j++)\n\t\t\t\tif (vis[i][j])\n\t\t\t\t\tcolor[i][j] = 0;\n\t\tdrop();\n\t\t\n//\t\tsystem(\"cls\");\n//\t\tprintf(\"\u5f53\u524d%d\u5c40\u52bf\\n\", round);\n//\t\tfor (int i = 1; i <= n; i++, putchar('\\n'))\n//\t\t\tfor (int j = 1; j <= m; j++)\n//\t\t\t\tprintf(\"(%d,%d) \", color[i][j], tag[i][j]);\n//\t\tsystem(\"pause\");\n\t\t\n\t\tif (!chk()) break;\n\t}\n\tans += 80 * squ(round - 1);\n//\tprintf(\"\u5956\u91d1 %d\\n\", ans);\n}\nbool solve(int x1, int y1, int x2, int y2)\n{\n\tif (x1 < 1 || x1 > n || y1 < 1 || y1 > m) return false;\n\tif (x2 < 1 || x2 > n || y2 < 1 || y2 > m) return false;\n\tif (color[x1][y1] == 0 || color[x2][y2] == 0 || !near(x1, y1, x2, y2)) return false;\n\tswp(x1, y1, x2, y2);\n\tif (chk()) {play(); return true;}\n\telse {swp(x1, y1, x2, y2); return false;} //\u4e0d\u6210\u529f\u8981\u6362\u56de\u6765\uff01 \n}\nint main()\n{\n\tscanf(\"%d%d%d%d\", &n, &m, &k, &q);\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t\tscanf(\"%d\", &color[i][j]);\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t\tscanf(\"%d\", &tag[i][j]);\n\tint allOK_score = 1000, wonderful_score = 10000;\n\twhile (q--)\n\t{\n\t\tint x1, y1, x2, y2;\n\t\tscanf(\"%d%d%d%d\", &x1, &y1, &x2, &y2);\n\t\tif (!solve(x1, y1, x2, y2)) allOK_score = 0;\n\t}\n\tfor (int i = 1; i <= n && wonderful_score; i++)\n\t\tfor (int j = 1; j <= m && wonderful_score; j++)\n\t\t\tif (color[i][j] != 0)\n\t\t\t\twonderful_score = 0;\n\tcout << ans + allOK_score + wonderful_score;\n\treturn 0;\n}\n```\n\n\u5e0c\u671b\u80fd\u5e2e\u52a9\u5230\u5927\u5bb6\uff01",
        "postTime": 1677227238,
        "uid": 367488,
        "name": "liangbowen",
        "ccfLevel": 0,
        "title": "P8422 \u9898\u89e3"
    },
    {
        "content": "## \u9898\u76ee\u5206\u6790\n\u5927\u6a21\u62df\uff0c\u9898\u9762\u5f88\u957f\uff0c\u4f46\u662f\u6574\u9053\u9898\u53ef\u4ee5\u5206\u4e3a\u51e0\u4e2a\u90e8\u5206\u5206\u5f00\u5904\u7406\uff1a\n\n**\u64cd\u4f5c\u4e00\uff1a\u4ea4\u6362\u4e24\u4e2a\u68cb\u5b50**\n\n\u672c\u9898\u6700\u7b80\u5355\u7684\u90e8\u5206\uff0c\u6ce8\u610f\u7279\u5224\u8fb9\u754c\u548c\u4ea4\u6362\u4f4d\u7f6e\u6ca1\u6709\u68cb\u5b50\u4ee5\u53ca\u4e24\u4e2a\u4f4d\u7f6e\u4e0d\u76f8\u90bb\u7684\u60c5\u51b5\u3002\n\n**\u64cd\u4f5c\u4e8c\uff1a\u5224\u65ad\u5f53\u524d\u5c40\u9762\u80fd\u5426\u6d88\u9664**\n\n\u53ef\u4ee5\u5bf9\u6bcf\u4e00\u4e2a\u68cb\u5b50\u8fdb\u884c $x$ \u65b9\u5411\u548c $y$ \u65b9\u5411\u7684\u679a\u4e3e\uff0c\u5982\u679c\u6709\u4e09\u4e2a\u53ca\u4ee5\u4e0a\u5728 $x$ \u65b9\u5411\u6216 $y$ \u65b9\u5411\u8fde\u7eed\u4e14\u5305\u542b\u5f53\u524d\u68cb\u5b50\u7684\u540c\u8272\u68cb\u5b50\u5219\u628a\u8fd9\u4e9b\u68cb\u5b50\u6253\u4e0a\u6807\u8bb0\uff0c\u4ee3\u8868\u6b64\u8f6e\u5c06\u8981\u6d88\u9664\u7684\u68cb\u5b50\u3002\n\n\n\u6ce8\uff1a\u4ea4\u6362\u68cb\u5b50\u548c\u5224\u65ad\u80fd\u5426\u6d88\u9664\u4ee5\u53ca\u8fde\u9501\u6d88\u9664\u6211\u653e\u8fdb\u4e86\u4e00\u4e2a\u51fd\u6570\u91cc\u8fdb\u884c\u89e3\u51b3\n\n```cpp\nvoid SWAP(int X1,int Y1,int X2,int Y2)\n{\n\tif(!((X1==X2+1&&Y1==Y2)||(X1==X2-1&&Y1==Y2)||(X1==X2&&Y1==Y2+1)||(X1==X2&&Y1==Y2-1)))\n\t{\n\t\tuseless++;\n\t\tAP=0;\n\t\treturn;\n\t}\n\tif(!type[X1][Y1]||!type[X2][Y2])\n\t{\t\n\t\tuseless++;\n\t\tAP=0;\n\t\treturn;\n\t}\n\tint round=0;\n\tswap(type[X1][Y1],type[X2][Y2]);\n\tswap(spec[X1][Y1],spec[X2][Y2]);\n\tint T1=type[X1][Y1];\n\tint cnt=0;\n\tbool flag=0;\n\tfor(int r=X1+1;r<=n;r++)\n\t{\n\t\tif(type[r][Y1]==T1)\n\t\t{\n\t\t\tif(CL[r][Y1]!=2)\n\t\t\t{\n\t\t\t\tCL[r][Y1]=1;\n\t\t\t}\n\t\t\tcnt++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(int r=X1-1;r>=1;r--)\n\t{\n\t\tif(type[r][Y1]==T1)\n\t\t{\n\t\t\tif(CL[r][Y1]!=2)\n\t\t\t{\n\t\t\t\tCL[r][Y1]=1;\n\t\t\t}\n\t\t\tcnt++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\tcnt++;\n\tif(cnt>=3)\n\t{\n\t\tmaincolor[optnum][0]=type[X1][Y1];\n\t\tCL[X1][Y1]=2;\n\t\tfor(int r=1;r<=n;r++)\n\t\t{\n\t\t\tfor(int f=1;f<=m;f++)\n\t\t\t{\n\t\t\t\tif(CL[r][f]==1)\n\t\t\t\t{\n\t\t\t\t\tCL[r][f]=2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tflag=1;\n\t}\n\telse\n\t{\n\t\tfor(int r=1;r<=n;r++)\n\t\t{\n\t\t\tfor(int f=1;f<=m;f++)\n\t\t\t{\n\t\t\t\tif(CL[r][f]==1)\n\t\t\t\t{\n\t\t\t\t\tCL[r][f]=0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcnt=0;\n\tfor(int r=Y1+1;r<=m;r++)\n\t{\n\t\tif(type[X1][r]==T1)\n\t\t{\n\t\t\tif(CL[X1][r]!=2)\n\t\t\t{\n\t\t\t\tCL[X1][r]=1;\n\t\t\t}\n\t\t\tcnt++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(int r=Y1-1;r>=1;r--)\n\t{\n\t\tif(type[X1][r]==T1)\n\t\t{\n\t\t\tif(CL[X1][r]!=2)\n\t\t\t{\n\t\t\t\tCL[X1][r]=1;\n\t\t\t}\n\t\t\tcnt++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\tcnt++;\n\tif(cnt>=3)\n\t{\n\t\tmaincolor[optnum][0]=type[X1][Y1];\n\t\tCL[X1][Y1]=2;\n\t\tfor(int r=1;r<=n;r++)\n\t\t{\n\t\t\tfor(int f=1;f<=m;f++)\n\t\t\t{\n\t\t\t\tif(CL[r][f]==1)\n\t\t\t\t{\n\t\t\t\t\tCL[r][f]=2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tflag=1;\n\t}\n\telse\n\t{\n\t\tfor(int r=1;r<=n;r++)\n\t\t{\n\t\t\tfor(int f=1;f<=m;f++)\n\t\t\t{\n\t\t\t\tif(CL[r][f]==1)\n\t\t\t\t{\n\t\t\t\t\tCL[r][f]=0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tint T2=type[X2][Y2];\n\tcnt=0;\n\tfor(int r=X2+1;r<=n;r++)\n\t{\n\t\tif(type[r][Y2]==T2)\n\t\t{\n\t\t\tif(CL[r][Y2]!=2)\n\t\t\t{\n\t\t\t\tCL[r][Y2]=1;\n\t\t\t}\n\t\t\tcnt++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(int r=X2-1;r>=1;r--)\n\t{\n\t\tif(type[r][Y2]==T2)\n\t\t{\n\t\t\tif(CL[r][Y2]!=2)\n\t\t\t{\n\t\t\t\tCL[r][Y2]=1;\n\t\t\t}\n\t\t\tcnt++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\tcnt++;\n\tif(cnt>=3)\n\t{\n\t\tmaincolor[optnum][1]=type[X2][Y2];\n\t\tCL[X2][Y2]=2;\n\t\tfor(int r=1;r<=n;r++)\n\t\t{\n\t\t\tfor(int f=1;f<=m;f++)\n\t\t\t{\n\t\t\t\tif(CL[r][f]==1)\n\t\t\t\t{\n\t\t\t\t\tCL[r][f]=2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tflag=1;\n\t}\n\telse\n\t{\n\t\tfor(int r=1;r<=n;r++)\n\t\t{\n\t\t\tfor(int f=1;f<=m;f++)\n\t\t\t{\n\t\t\t\tif(CL[r][f]==1)\n\t\t\t\t{\n\t\t\t\t\tCL[r][f]=0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcnt=0;\n\tfor(int r=Y2+1;r<=m;r++)\n\t{\n\t\tif(type[X2][r]==T2)\n\t\t{\n\t\t\tif(CL[X2][r]!=2)\n\t\t\t{\n\t\t\t\tCL[X2][r]=1;\n\t\t\t}\n\t\t\tcnt++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(int r=Y2-1;r>=1;r--)\n\t{\n\t\tif(type[X2][r]==T2)\n\t\t{\n\t\t\tif(CL[X2][r]!=2)\n\t\t\t{\n\t\t\t\tCL[X2][r]=1;\n\t\t\t}\n\t\t\tcnt++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\tcnt++;\n\tif(cnt>=3)\n\t{\n\t\tmaincolor[optnum][1]=type[X2][Y2];\n\t\tCL[X2][Y2]=2;\n\t\tfor(int r=1;r<=n;r++)\n\t\t{\n\t\t\tfor(int f=1;f<=m;f++)\n\t\t\t{\n\t\t\t\tif(CL[r][f]==1)\n\t\t\t\t{\n\t\t\t\t\tCL[r][f]=2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tflag=1;\n\t}\n\telse\n\t{\n\t\tfor(int r=1;r<=n;r++)\n\t\t{\n\t\t\tfor(int f=1;f<=m;f++)\n\t\t\t{\n\t\t\t\tif(CL[r][f]==1)\n\t\t\t\t{\n\t\t\t\t\tCL[r][f]=0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(!flag)\n\t{\n\t\tswap(type[X1][Y1],type[X2][Y2]);\n\t\tswap(spec[X1][Y1],spec[X2][Y2]);\n\t\tAP=0;\n\t\t\n\t\tuseless++;\n\t\treturn;\n\t}\n\t//cout<<\"114514 \"<<X1<<\" \"<<Y1<<\" \"<<X2<<\" \"<<Y2<<endl;\n\toptnum++;\n\twhile(flag)\n\t{\n\t\tmemset(vis,0,sizeof vis);\n\t\tround++;\n\t\tfor(int r=1;r<=n;r++)\n\t\t{\n\t\t\tfor(int f=1;f<=m;f++)\n\t\t\t{\n\t\t\t\tif(!vis[r][f]&&CL[r][f]==2)\n\t\t\t\t{\n\t\t\t\t\tint K=bfs(r,f);\n\t\t\t\t\tcalc3(K);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\troundclear=0;\n\t\tfor(int r=1;r<=n;r++)\n\t\t{\n\t\t\tfor(int f=1;f<=m;f++)\n\t\t\t{\n\t\t\t\tif(CL[r][f]==2)\n\t\t\t\t{\n\t\t\t\t\tClear(r,f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcalc1(round,roundclear);\n\t\tmemset(CL,0,sizeof CL);\n\t\tdown();\n\t\t/*\n\t\tcout<<\"-----------------------------\"<<endl;\n\t\tfor(int r=1;r<=n;r++)\n\t\t{\n\t\t\tfor(int f=1;f<=m;f++)\n\t\t\t{\n\t\t\t\tcout<<type[r][f]<<\" \";\n\t\t\t}\n\t\t\tcout<<endl;\n\t\t}\n\t\tcout<<\"-----------------------------\"<<endl;\n\t\t*/\n\t\tflag=0;\n\t\tif(check())\n\t\t{\n\t\t\tflag=1;\n\t\t}\n\t}\n\tcalc2(round);\n\tif(optnum==5)\n\t{\n\t\toptnum=0;\n\t\tcalc4();\n\t\tmemset(maincolor,0,sizeof maincolor);\n\t}\n}\n```\n\n\n**\u64cd\u4f5c\u4e09\uff1a\u6d88\u9664\u68cb\u5b50**\n\n\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u51fd\u6570\uff0c\u4f20\u5165\u88ab\u6d88\u9664\u68cb\u5b50\u7684\u5750\u6807\uff0c\u5982\u6d88\u9664\u4e86\u5177\u6709\u7279\u6b8a\u80fd\u529b\u7684\u68cb\u5b50\uff0c\u5219\u9012\u5f52\u6d88\u9664\u88ab\u6280\u80fd\u6d88\u9664\u7684\u68cb\u5b50\u3002\n\n```cpp\nvoid Clear(int x,int y)\n{\n\tint col=type[x][y];\n\troundclear+=type[x][y];\n\ttype[x][y]=0;\n\tif(!spec[x][y])\n\t{\n\t\treturn;\n\t}\n\tif(spec[x][y]==1)\n\t{\n\t\tspec[x][y]=0;\n\t\tfor(int r=1;r<=m;r++)\n\t\t{\n\t\t\tif(type[x][r])\n\t\t\t{\n\t\t\t\tClear(x,r);\n\t\t\t}\n\t\t}\n\t}\n\tif(spec[x][y]==2)\n\t{\n\t\tspec[x][y]=0;\n\t\tfor(int r=1;r<=n;r++)\n\t\t{\n\t\t\tif(type[r][y])\n\t\t\t{\n\t\t\t\tClear(r,y);\n\t\t\t}\n\t\t}\n\t}\n\tif(spec[x][y]==3)\n\t{\n\t\tspec[x][y]=0;\n\t\tfor(int r=1;r<=n;r++)\n\t\t{\n\t\t\tif(type[r][y])\n\t\t\t{\n\t\t\t\tClear(r,y);\n\t\t\t}\n\t\t}\n\t\tfor(int f=1;f<=m;f++)\n\t\t{\n\t\t\tif(type[x][f])\n\t\t\t{\n\t\t\t\tClear(x,f);\n\t\t\t}\n\t\t}\n\t}\n\tif(spec[x][y]==4)\n\t{\n\t\tspec[x][y]=0;\n\t\tfor(int r=max(1,x-1);r<=min(n,x+1);r++)\n\t\t{\n\t\t\tfor(int f=max(1,y-1);f<=min(m,y+1);f++)\n\t\t\t{\n\t\t\t\tif(type[r][f])\n\t\t\t\t{\n\t\t\t\t\tClear(r,f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(spec[x][y]==5)\n\t{\n\t\tspec[x][y]=0;\n\t\tfor(int r=max(1,x-2);r<=min(n,x+2);r++)\n\t\t{\n\t\t\tfor(int f=max(1,y-2);f<=min(m,y+2);f++)\n\t\t\t{\n\t\t\t\tif(type[r][f])\n\t\t\t\t{\n\t\t\t\t\tClear(r,f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(spec[x][y]==6)\n\t{\n\t\tspec[x][y]=0;\n\t\tfor(int r=1;r<=n;r++)\n\t\t{\n\t\t\tfor(int f=1;f<=m;f++)\n\t\t\t{\n\t\t\t\tif(type[r][f]==col)\n\t\t\t\t{\n\t\t\t\t\tClear(r,f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n\n**\u64cd\u4f5c\u56db\uff1a\u8ba1\u7b97\u5206\u6570**\n\n\u8ba1\u7b97\u5206\u6570\u53c8\u5206\u4e3a\u4e94\u4e2a\u90e8\u5206\uff1a\n\n\u7b2c\u4e00\u90e8\u5206\uff1a\u6d88\u9664\u5206\u6570\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u6d88\u9664\uff0c\u8bb0\u5f55\u88ab\u6d88\u9664\u7684\u68cb\u5b50\u7684\u989c\u8272\u7f16\u53f7\u603b\u548c\uff0c\u4ee5\u53ca\u5f53\u524d\u6d88\u9664\u7684\u8f6e\u6570\uff0c\u4e24\u8005\u7684\u4e58\u79ef\u5373\u4e3a\u6b64\u90e8\u5206\u7684\u5206\u6570\u3002\n\n```cpp\nvoid calc1(int round,int sum)\n{\n\tscore+=sum*round;\n\treturn;\n}\n```\n\n\u7b2c\u4e8c\u90e8\u5206\uff1a\u8fde\u9501\u5206\u6570\n\n\u540c\u7b2c\u4e00\u90e8\u5206\uff0c\u4f46\u53ea\u9700\u8bb0\u5f55\u6bcf\u6b21\u6d88\u9664\u7684\u8f6e\u6570\u5373\u53ef\u3002\n\n```cpp\nvoid calc2(int round)\n{\n\tscore+=80*(round-1)*(round-1);\n\treturn;\n}\n```\n\n\u7b2c\u4e09\u90e8\u5206\uff1a\u7ec4\u5408\u5206\u6570\n\n\u5bf9\u6bcf\u6b21\u975e\u7279\u6b8a\u80fd\u529b\u6d88\u9664\u7684\u68cb\u5b50\u8fdb\u884c ```bfs```\uff0c\u53ef\u4ee5\u4f7f\u7528 ```vis``` \u6570\u7ec4\u9632\u6b62\u91cd\u590d\u8ba1\u7b97\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u8fde\u901a\u5757\u5927\u5c0f\u5373\u53ef\u3002\n\n\n```cpp\nvoid calc3(int blocksize)\n{\n\tif(blocksize<=3)\n\t{\n\t\treturn;\n\t}\n\tscore+=50*(blocksize-3)*(blocksize-3);\n\treturn;\n}\n```\n\n\u7b2c\u56db\u90e8\u5206\uff1a\u724c\u578b\u5206\u6570\n\n\u4f7f\u7528\u4e8c\u7ef4\u6570\u7ec4 ```maincolor``` \u8bb0\u5f55\u6bcf\u4e94\u6b21\u6709\u6548\u64cd\u4f5c\u7684\u4e3b\u989c\u8272\uff0c\u4f7f\u7528\u4e8c\u8fdb\u5236\u679a\u4e3e\u6bcf\u4e00\u79cd\u53ef\u80fd\u7684\u60c5\u51b5\uff0c\u7ecf\u68c0\u9a8c\u5408\u6cd5\u4e4b\u540e\u518d\u5728\u6bcf\u79cd\u53ef\u80fd\u7684\u5206\u6570\u4e2d\u53d6\u6700\u5927\u503c\u3002\n\n```cpp\nbool check1(int state)\n{\n\tfor(int r=0;r<=4;r++)\n\t{\n\t\tif((state>>r)&1)\n\t\t{\n\t\t\tif(!maincolor[5-r-1][1])\n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(!maincolor[5-r-1][0])\n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\treturn 1;\n}\nvoid Calc4(int state)\n{\n\tmemset(sum,0,sizeof sum);\n\tint colmax=0;\n\tint flag2=0,flag3=0,flag4=0,flag5=0;\n\tint N2_1=0,N2_2=0,N3=0;\n\tfor(int r=0;r<=4;r++)\n\t{\n\t\tsum[maincolor[5-r-1][(state>>r)&1]]++;\n\t}\n\tfor(int r=1;r<=k;r++)\n\t{\n\t\tif(sum[r])\n\t\t{\n\t\t\tcolmax=max(colmax,r);\n\t\t}\n\t\tif(sum[r]==5)\n\t\t{\n\t\t\tflag5++;\n\t\t\taddscore=max(addscore,1000+10*r);\n\t\t}\n\t\tif(sum[r]==4)\n\t\t{\n\t\t\tflag4++;\n\t\t\taddscore=max(addscore,750+5*r);\n\t\t}\n\t\tif(sum[r]==3)\n\t\t{\n\t\t\tN3=r;\n\t\t\tflag3++;\n\t\t}\n\t\tif(sum[r]==2)\n\t\t{\n\t\t\tif(!N2_1)\n\t\t\t{\n\t\t\t\tN2_1=r;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tN2_2=r;\n\t\t\t}\n\t\t\tflag2++;\n\t\t}\n\t}\n\tif(!(flag2||flag3||flag4||flag5))\n\t{\n\t\taddscore=max(addscore,50+colmax);\n\t}\n\tif(flag2==1&&!flag3)\n\t{\n\t\taddscore=max(addscore,100+N2_1*2);\n\t}\n\tif(flag2==2)\n\t{\n\t\taddscore=max(addscore,200+max(N2_1,N2_2)*2+min(N2_1,N2_2));\n\t}\n\tif(flag3&&flag2)\n\t{\n\t\taddscore=max(addscore,500+N3*3+N2_1);\n\t}\n\tif(flag3&&!flag2)\n\t{\n\t\taddscore=max(addscore,300+N3*3);\n\t}\n}\nvoid calc4()\n{\n\taddscore=0;\n\tfor(int r=0;r<(1<<5);r++)\n\t{\n\t\tif(check1(r))\n\t\t{\n\t\t\tCalc4(r);\n\t\t}\n\t}\n\tscore+=addscore;\n}\n```\n\u6ce8\uff1a```check1``` \u90e8\u5206\u4e3a\u5408\u6cd5\u6027\u5224\u65ad\uff0c```Calc4``` \u90e8\u5206\u4e3a\u6bcf\u4e00\u79cd\u60c5\u51b5\u7684\u52a0\u5206\u8ba1\u7b97\u3002\n\n\n\n\u7b2c\u4e94\u90e8\u5206\uff1a\u7ec8\u5c40\u5206\u6570\n\n\u4f7f\u7528\u4e00\u4e2a\u53d8\u91cf ```AP``` \u8bb0\u5f55\u662f\u5426\u6bcf\u4e00\u6b21\u64cd\u4f5c\u90fd\u6709\u6548\uff0c\u53ef\u4ee5\u5728\u6bcf\u4e00\u6b21\u64cd\u4f5c\u65f6\u90fd\u8bb0\u5f55\u662f\u5426\u4e3a\u5408\u6cd5\u64cd\u4f5c\uff0c\u5982\u679c\u4e0d\u5408\u6cd5\u5219 $AP=0$ \u3002\u5728\u5b8c\u6210\u6240\u6709\u64cd\u4f5c\u4e4b\u540e\u626b\u63cf\u4e00\u904d\u68cb\u76d8\uff0c\u5982\u679c\u6ca1\u6709\u5269\u4f59\u68cb\u5b50\u53ef\u83b7\u5f97\u5168\u6e05\u5206\u6570\u3002\n\n```cpp\nvoid calc5()\n{\n\tif(AP)\n\t{\n\t\tscore+=1000;\n\t}\n\tfor(int r=1;r<=n;r++)\n\t{\n\t\tfor(int f=1;f<=m;f++)\n\t\t{\n\t\t\tif(type[r][f])\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\tscore+=10000;\n}\n```\n\n## \u4ee3\u7801\n\n\n\u7531\u4e8e\u4ee3\u7801\u592a\u957f\u6240\u4ee5\u653e\u4e91\u526a\u8d34\u677f\n\n\n[\u4ee3\u7801](https://www.luogu.com.cn/paste/j52egb40)",
        "postTime": 1664429693,
        "uid": 576702,
        "name": "_Remake_",
        "ccfLevel": 4,
        "title": "P8422 [THUPC2022 \u51b3\u8d5b] \u5fb7\u5dde\u6d88\u6d88\u4e50 \u9898\u89e3"
    },
    {
        "content": "\u672c\u9898\u4e3a\u5927\u6a21\u62df\uff0c\u53ea\u8981\u8282\u594f\u4e0d\u4e71\uff0c\u8fc7\u6389\u53ea\u662f\u65f6\u95f4\u7684\u95ee\u9898\u3002\n\n\u672c\u9898\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u70b9\u5c31\u662f\u51fa\u9898\u4eba\u5e76\u6ca1\u6709\u5728\u8bed\u8a00\u4e0a\u96be\u4e3a\u4f60\u3002\n\n# \u4ee3\u7801\u6d41\u7a0b\n\n- \u8f93\u5165\u64cd\u4f5c\u3002\n- \u5224\u65ad\u662f\u5426\u51fa\u754c\u6216\u8981\u64cd\u4f5c\u7684\u5143\u7d20\u5df2\u7ecf\u88ab\u5220\u3002\n- \u5426\u5219\u4ea4\u6362\uff0c\u7136\u540e\u8ba1\u7b97\u4e3b\u989c\u8272\u3002\n- \u5982\u679c\u6ca1\u6709\u4e3b\u989c\u8272\u90a3\u4e48\u8bf4\u660e\u8fd9\u4e2a\u64cd\u4f5c\u6ca1\u7528\u3002\n- \u5426\u5219\u5f00\u59cb\u6d88\u9664\u3002\n- \u5bf9\u4e8e\u6bcf\u4e00\u8f6e\uff0c\u518d\u7b97\u4e00\u904d\u4e3b\u989c\u8272\uff08\u4e3a\u4e86\u5224\u65ad\u8fd8\u80fd\u4e0d\u80fd\u6d88\uff09\uff0c\u7136\u540e\u518d\u6d88\u9664\uff0c\u7136\u540e\u6309\u91cd\u529b\u4e0b\u843d\u3002\n- \u5bf9\u4e8e\u6bcf\u4e00\u8f6e\u7684\u6d88\u9664\uff0c\u5bf9\u6240\u6709\u70b9\u90fd\u5224\u65ad\u4e00\u904d\u80fd\u4e0d\u80fd\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u4e2d\u70b9\u6d88\u9664\uff0c\u5982\u679c\u80fd\u5c31\u6d88\u9664\u8fd9\u4e09\u4e2a\u65b9\u5757\u3002\n- \u6d88\u9664\u5b8c\u6bd5\uff0c\u8ba1\u7b97\u7ec4\u5408\u5956\u5206\u3002\n- \u8ba1\u7b97\u6d88\u9664\u5956\u5206\u3002\n- \u5bf9\u4e8e\u6d88\u9664\u6bcf\u4e2a\u65b9\u5757\uff0c\u5148\u5c06\u8fd9\u4e2a\u65b9\u5757\u7684\u989c\u8272\u8bbe\u7f6e\u6210 $0$\uff0c\u7136\u540e\u5224\u65ad\u6709\u6ca1\u6709\u7279\u6b8a\u6548\u679c\uff0c\u5982\u679c\u6709\u6267\u884c\uff08\u9012\u5f52\u8c03\u7528\uff09\u3002\n- \u8fd4\u56de\uff0c\u8ba1\u7b97\u8fde\u9501\u5956\u5206\u3002\n- \u8fd4\u56de\uff0c\u5982\u679c\u5df2\u7ecf\u591f\u4e86\u4e94\u6b21\u90a3\u4e48\u8ba1\u7b97\u724c\u578b\u5956\u5206\u3002\n- \u6700\u7ec8\u8ba1\u7b97\u7ec8\u5c40\u5956\u5206\u3002\n- \u8f93\u51fa\uff0c\u7ed3\u675f\u3002\n\n## \u5173\u4e8e\u8ba1\u7b97\u8fde\u9501\u5956\u5206\n\n\u5148\u5f04\u51fa\u6240\u6709\u53ea\u901a\u8fc7\u4e09\u6d88\u7684\u65b9\u6cd5\u6d88\u9664\u7684\u65b9\u5757\u5217\u8868\uff08\u8fd9\u4e2a\u5728\u6d88\u9664\u65f6\u5c31\u53ef\u4ee5\u540c\u65f6\u8ba1\u7b97\u4e86\uff09\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u88ab\u8fd9\u6837\u6d88\u9664\u7684\u65b9\u5757\u90fd\u8ba1\u7b97\u8fde\u901a\u5757\uff0c\u7136\u540e\u6839\u636e\u516c\u5f0f\u7d2f\u52a0\u3002\n\n## \u5173\u4e8e\u8ba1\u7b97\u724c\u578b\u5956\u5206\n\n\u5148\u4e94\u91cd\u5faa\u73af\u679a\u4e3e\u4e3b\u989c\u8272\u7684\u9009\u62e9\uff0c\u7136\u540e\u518d\u5177\u4f53\u8ba1\u7b97\u3002\n\n\u5bf9\u4e8e\u5177\u4f53\u8ba1\u7b97\u7684\u4e94\u4e2a\u989c\u8272\uff0c\u5148\u5c06\u4ed6\u4eec\u52a0\u5165 `STL map` \u4e2d\u3002\uff08\u5373 `MAP[VAL] += 1`\uff09\n\n\u7136\u540e\u5224\u65ad `STL map` \u7684\u957f\u5ea6\u5c31\u80fd\u786e\u5b9a\u4e00\u90e8\u5206\u7684\u7c7b\u578b\u3002\n\n\u7136\u540e\u5c31\u66b4\u529b\u5224\u65ad\u8ba1\u7b97\u5373\u53ef\u3002\n\n## \u5173\u4e8e\u91cd\u529b\n\n\u6211\u8fd9\u8fb9\u4f7f\u7528\u4e86 $\\mathcal{O}(n^3)$ \u7684\u65b9\u6cd5\u5f04\u91cd\u529b\uff0c\u6211\u81ea\u6211\u611f\u89c9\u4e0d\u662f\u5f88\u9ebb\u70e6\u3002\n\n# \u6700\u7ec8\u4ee3\u7801\n\n\u6ce8\uff1a`/**/` \u5185\u7684\u4e3a\u89e3\u91ca\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define PrintBy(by, str) //std::cout << \"[\" << by << \"]:\" << str << std::endl;\n/* \u8fd9\u4e00\u4e2a\u5b8f\u5b9a\u4e49\u662f\u4e3a\u4e86\u8c03\u8bd5\u7528\u7684 */\ntypedef std::pair<int, int> ThePosition;\nconst int N = 64;\nint n, m, k, q;\nint TotalScore;\nstruct TheElement { /* \u8fd9\u4e00\u4e2a\u7c7b\u5c31\u662f\u6bcf\u4e00\u4e2a\u5143\u7d20 */\n    int color, extra;\n    TheElement(): color(0), extra(0) {\n    }\n};\nstruct TheGraph {\n    TheElement a[N][N];\n    std::vector<std::vector<int>> elis;\n    std::vector<int> CheckErase() { /* \u8ba1\u7b97\u4e3b\u989c\u8272 */\n        std::vector<int> mc;\n        for (int i = 1; i <= n; i++)\n            for (int j = 1; j <= m; j++) {\n                int l = a[i - 1][j].color, m = a[i][j].color, r = a[i + 1][j].color;\n                if (l != 0 and m != 0 and r != 0 and l == m and m == r)\n                    mc.emplace_back(l);\n                l = a[i][j - 1].color, m = a[i][j].color, r = a[i][j + 1].color;\n                if (l != 0 and m != 0 and r != 0 and l == m and m == r)\n                    mc.emplace_back(l);\n            }\n        std::sort(mc.begin(), mc.end());\n        mc.erase(std::unique(mc.begin(), mc.end()), mc.end());\n        std::string mcstr = \"{\";\n        for (auto i : mc)\n            mcstr += std::to_string(i) + \",\";\n        PrintBy(\"Eraser\", \"The <main-color> of this operation is : \" << mcstr << \"}.\");\n        return mc;\n    }\n    void EraseBlock(std::array<std::array<int, N>, N>& eraser, int& ColorSummon, const int& x, const int& y) { /* \u5220\u9664\u5143\u7d20 */\n        if ((not (1 <= x and x <= n and 1 <= y and y <= m)) or eraser[x][y] == 1 or a[x][y].color == 0) return;\n        PrintBy(\"Eraser\", \"The block(\" << x << \", \" << y << \") has been erased.\");\n        ColorSummon += a[x][y].color;\n        eraser[x][y] = 1;\n        if (a[x][y].extra != 0)\n            PrintBy(\"Eraser\", \"This block has extra-effect: \" << a[x][y].extra);\n        switch (a[x][y].extra) {\n            case 1:\n                for (int i = 1; i <= m; i++)\n                    EraseBlock(eraser, ColorSummon, x, i);\n                break;\n            case 2:\n                for (int i = 1; i <= n; i++)\n                    EraseBlock(eraser, ColorSummon, i, y);\n                break;\n            case 3:\n                for (int i = 1; i <= n; i++)\n                    EraseBlock(eraser, ColorSummon, i, y);\n                for (int i = 1; i <= m; i++)\n                    EraseBlock(eraser, ColorSummon, x, i);\n                break;\n            case 4:\n                for (int i = -1; i <= 1; i++)\n                    for (int j = -1; j <= 1; j++)\n                        EraseBlock(eraser, ColorSummon, x + i, y + j);\n                break;\n            case 5:\n                for (int i = -2; i <= 2; i++)\n                    for (int j = -2; j <= 2; j++)\n                        EraseBlock(eraser, ColorSummon, x + i, y + j);\n                break;\n            case 6:\n                for (int i = 1; i <= n; i++)\n                    for (int j = 1; j <= m; j++)\n                        if (a[i][j].color == a[x][y].color)\n                            EraseBlock(eraser, ColorSummon, i, j);\n        }\n    }\n    int FindBlock(std::array<std::array<int, N>, N>& ers, int fx, int fy) { /* \u627e\u8fde\u901a\u5757\uff0c\u8ba1\u7b97\u7ec4\u5408\u5956\u5206\u7528\u7684 */\n        std::queue<ThePosition> q;\n        q.emplace(fx, fy);\n        ers[fx][fy] = 0;\n        int fb = 1, col = a[fx][fy].color;\n        const int dx[4] = {0, 0, 1, -1};\n        const int dy[4] = {1, -1, 0, 0};\n        while (q.size()) {\n            int qx = q.front().first, qy = q.front().second;\n            q.pop();\n            for (int i = 0; i < 4; i++) {\n                int nx = qx + dx[i], ny = qy + dy[i];\n                if (not (1 <= nx and nx <= n and 1 <= ny and ny <= m) or ers[nx][ny] != 1 or a[nx][ny].color != col) continue;\n                q.emplace(nx, ny);\n                fb += 1;\n                ers[nx][ny] = 0;\n            }\n        }\n        return fb;\n    }\n    void CalcuComboScore(const std::array<std::array<int, N>, N>& ers) { /* \u8ba1\u7b97\u7ec4\u5408\u5956\u5206 */\n        std::array<std::array<int, N>, N> ibl = ers;\n        for (int i = 1; i <= n; i++)\n            for (int j = 1; j <= m; j++)\n                if (ibl[i][j] == 1) {\n                    int fb = FindBlock(ibl, i, j);\n                    PrintBy(\"System\", \"Got <combo> score: \" << 50 * (fb - 3) * (fb - 3));\n                    TotalScore += 50 * (fb - 3) * (fb - 3);\n                }\n    }\n    bool Erase(int rnd) { /* \u6574\u4e2a\u5220\u9664\u7684\u6d41\u7a0b */\n        //std::cout << \"Round \" << rnd << \"!\\n\";\n        if (CheckErase().empty()) return 0;\n        int ColorSummon = 0;\n        std::array<std::array<int, N>, N> eraser, native;\n        for (int i = 1; i <= n; i++)\n            for (int j = 1; j <= m; j++)\n                eraser[i][j] = native[i][j] = 0;\n        for (int i = 1; i <= n; i++)\n            for (int j = 1; j <= m; j++) {\n                int l = a[i - 1][j].color, m = a[i][j].color, r = a[i + 1][j].color;\n                if (l != 0 and m != 0 and r != 0 and l == m and m == r) {\n                    native[i - 1][j] = native[i][j] = native[i + 1][j] = 1;\n                    EraseBlock(eraser, ColorSummon, i - 1, j);\n                    EraseBlock(eraser, ColorSummon, i, j);\n                    EraseBlock(eraser, ColorSummon, i + 1, j);\n                }\n                l = a[i][j - 1].color, m = a[i][j].color, r = a[i][j + 1].color;\n                if (l != 0 and m != 0 and r != 0 and l == m and m == r) {\n                    native[i][j - 1] = native[i][j] = native[i][j + 1] = 1;\n                    EraseBlock(eraser, ColorSummon, i, j - 1);\n                    EraseBlock(eraser, ColorSummon, i, j);\n                    EraseBlock(eraser, ColorSummon, i, j + 1);\n                }\n            }\n        CalcuComboScore(native);\n        for (int i = 1; i <= n; i++)\n            for (int j = 1; j <= m; j++)\n                if (eraser[i][j])\n                    a[i][j].color = 0;\n        TotalScore += ColorSummon * rnd;\n        PrintBy(\"System\", \"Got <erase> score \" << ColorSummon * rnd << \".(\" << TotalScore << \")\");\n        return 1;\n    }\n    void Gravity() { /* \u91cd\u529b */\n        PrintBy(\"System\", \"The Gravity!\");\n        for (int i = 1; i <= m; i++)\n            for (int k = 1; k <= n; k++)\n                for (int j = 1; j < n; j++)\n                    if (a[j][i].color != 0 and a[j + 1][i].color == 0)\n                        std::swap(a[j][i], a[j + 1][i]);\n        //std::cout << \"Screen After Gravity:\\n\";\n        //PrintScreen();\n    }\n    void PrintScreen() { /* \u8f93\u51fa\u5c4f\u5e55\u3002\u8c03\u8bd5\u7528\u7684 */\n        for (int i = 1; i <= n; i++)\n            for (int j = 1; j <= m; j++)\n                if (a[i][j].color != 0)\n                    std::cout << \"(\" << a[i][j].color << \", \" << a[i][j].extra << \")\" << \" \\n\"[j == m];\n                else\n                    std::cout << \"Erased\" << \" \\n\"[j == m];\n    }\n    bool Swap(int xa, int ya, int xb, int yb) { /* \u4e3b\u6d41\u7a0b */\n        if (abs(xa - xb) + abs(ya - yb) != 1) return 1;\n        if (a[xa][ya].color == 0 or a[xb][yb].color == 0) return 1;\n        std::swap(a[xa][ya], a[xb][yb]);\n        std::vector<int> MainColor = CheckErase();\n        if (MainColor.empty()) {\n            std::swap(a[xa][ya], a[xb][yb]);\n            return 1;\n        }\n        //std::cout << \"Raw Screen:\\n\";\n        //PrintScreen();\n        elis.push_back(MainColor);\n        int Round = 0;\n        while (Erase(Round + 1)) {\n            //std::cout << \"After Erase round \" << Round + 1 << \", now screen:\\n\";\n            //PrintScreen();\n            Round += 1;\n            Gravity();\n        }\n        TotalScore += 80 * (Round - 1) * (Round - 1);\n        PrintBy(\"System\", \"Got <chain-reaction> score \" << 80 * (Round - 1) * (Round - 1) << \".(\" << TotalScore << \")\");\n        return 0;\n    }\n    bool AllElimated() {\n        for (int i = 1; i <= n; i++)\n            for (int j = 1; j <= m; j++)\n                if (a[i][j].color != 0)\n                    return 0;\n        return 1;\n    }\n    int Card(int v1, int v2, int v3, int v4, int v5) { /* \u8ba1\u7b97\u724c\u578b\u5206 */\n        PrintBy(\"wordle\", \"The World by card!:\" << v1 << v2 << v3 << v4 << v5);\n        std::map<int, int> mp;\n        mp[v1] += 1, mp[v2] += 1, mp[v3] += 1, mp[v4] += 1, mp[v5] += 1;\n        if (mp.size() == 5)\n            return 50 + std::max({v1, v2, v3, v4, v5});\n        if (mp.size() == 4)\n            for (auto i : mp)\n                if (i.second == 2)\n                    return 100 + i.first * 2;\n        if (mp.size() == 3) {\n            int typ = -1;\n            for (auto i : mp)\n                if (i.second == 3) {\n                    typ = 1;\n                    break;\n                }\n            if (typ == -1) {\n                std::vector<int> dui;\n                for (auto i : mp)\n                    if (i.second == 2)\n                        dui.emplace_back(i.first);\n                return 200 + std::max(dui[0], dui[1]) * 2 + std::min(dui[0], dui[1]);\n            } else\n                for (auto i : mp)\n                    if (i.second == 3)\n                        return 300 + i.first * 3;\n        }\n        if (mp.size() == 2) {\n            int typ = -1;\n            for (auto i : mp)\n                if (i.second == 4) {\n                    typ = 1;\n                    break;\n                }\n            if (typ == -1) {\n                int sc = 500;\n                for (auto i : mp)\n                    if (i.second == 3)\n                        sc += i.first * 3;\n                    else\n                        sc += i.first;\n                return sc;\n            } else \n                for (auto i : mp)\n                    if (i.second == 4)\n                        return 750 + i.first * 5;\n        }\n        if (mp.size() == 1)\n            return 1000 + 10 * v1;\n        return 0;\n    }\n    void Calcucard(int Rnd) { /* \u8ba1\u7b97\u724c\u578b\u5956\u5206\u7684\u6d41\u7a0b */\n        int mx = 0;\n        //for (int i = -4; i <= 0; i++) {\n         //   for (int j : elis[Rnd + i]) \n          //     std::cout << j << \" \";\n           //std::cout << \"\\n\";\n            //}\n        for (auto i : elis[Rnd])\n            for (auto j : elis[Rnd - 1])\n                for (auto k : elis[Rnd - 2])\n                    for (auto o : elis[Rnd - 3])\n                        for (auto p : elis[Rnd - 4])\n                            mx = std::max(mx, Card(i, j, k, o, p));\n        TotalScore += mx;\n        PrintBy(\"System\", \"Got <card-type> score \" << mx << \".(\" << TotalScore << \")\");\n    }\n} G;\nint main() {\n    std::cin >> n >> m >> k >> q;\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= m; j++)\n            std::cin >> G.a[i][j].color;\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= m; j++)\n            std::cin >> G.a[i][j].extra;\n    PrintBy(\"System\", \"Basic info has been inputed.\");\n    bool AllUsed = 1;\n    int Rnd = 0, HaveBeenCalcuCard = 0;\n    for (int i = 1; i <= q; i++) {\n        int xa, xb, ya, yb;\n        std::cin >> xa >> ya >> xb >> yb;\n        PrintBy(\"System\", \"User operation \" << i << \" has been inputed(\" << xa << \", \" << ya << \", \" << xb << \", \" << yb << \").\");\n        bool x = G.Swap(xa, ya, xb, yb);\n        if (x == 1) AllUsed = 0;\n        if (x == 0) Rnd += 1; \n        if (Rnd % 5 == 0 and HaveBeenCalcuCard != Rnd) G.Calcucard(Rnd - 1), HaveBeenCalcuCard = Rnd;\n    }\n    if (AllUsed) {\n        TotalScore += 1000;\n        PrintBy(\"System\", \"Got <endy-map> score 1000.(\" << TotalScore << \")\");\n    }\n    bool gael = G.AllElimated();\n    TotalScore += 10000 * gael;\n    if (gael) PrintBy(\"System\", \"Got <endy-map> score 10000.(\" << TotalScore << \")\");\n    std::cout << TotalScore;\n    return 0;\n}\n```",
        "postTime": 1676177828,
        "uid": 528472,
        "name": "codeLJH",
        "ccfLevel": 6,
        "title": "P8422 [THUPC2022 \u51b3\u8d5b] \u5fb7\u5dde\u6d88\u6d88\u4e50 \u9898\u89e3"
    },
    {
        "content": "## Description\n\n\u7ed9\u5b9a\u4e00\u4e2a $N \\times M$ \u7684\u68cb\u76d8\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u6709\u4e00\u4e2a\u68cb\u5b50\uff08\u989c\u8272\u4e3a $1 \\sim k$\uff0c\u53ef\u80fd\u6709\u7279\u6b8a\u6548\u679c\uff09\uff0c\u73b0\u6709 $q$ \u6b21\u64cd\u4f5c\uff08\u53ef\u80fd\u662f\u4e0d\u5408\u6cd5\u7684\u64cd\u4f5c\uff09\uff0c\u6bcf\u6b21\u64cd\u4f5c\u4ea4\u6362\u76f8\u90bb\u4e24\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u68cb\u5b50\uff0c\u82e5\u4e3a\u5408\u6cd5\u64cd\u4f5c\uff0c\u5219\u4f1a\u89e6\u53d1\u82e5\u5e72\u8f6e\u6d88\u9664\u5e76\u4f1a\u6309\u7167\u7279\u5b9a\u89c4\u5219\u52a0\u5206\uff0c\u95ee $q$ \u6b21\u64cd\u4f5c\u540e\u7684\u603b\u5f97\u5206\u3002\uff08$1 \\le N,M \\le 50,1 \\le k \\le 100,1 \\le q \\le 10^3$\uff09\n\n## Solution\n\n\u5927\u6a21\u62df\uff0c\u6309\u7167\u9898\u610f\u4f9d\u6b21\u5904\u7406\u6bcf\u4e2a\u6b65\u9aa4\uff1a\n\n- \u5224\u65ad\u4e00\u6b21\u64cd\u4f5c\u540e\u662f\u5426\u4f1a\u89e6\u53d1\u6d88\u9664\uff0c\u82e5\u65e0\u6cd5\u89e6\u53d1\uff0c\u5224\u65ad\u4e3a\u4e0d\u5408\u6cd5\u64cd\u4f5c\u5e76**\u4f7f\u5f97\u6b64\u6b21\u64cd\u4f5c\u65e0\u6548**\uff0c\u540c\u65f6\u4ee4\u7ec8\u5c40\u5956\u5206\u7684\u7b2c\u4e00\u9879\u65e0\u6548\u3002\n- \u89e6\u53d1\u4ea4\u6362\u540e\u7684\u7b2c\u4e00\u8f6e\u6d88\u9664\uff0c\u8bb0\u5f55\u4e0b\u53ef\u80fd\u7684\u7ec4\u5408\u5956\u5206\u548c\u724c\u578b\u5956\u5206\u3002\n- \u5904\u7406\u5e26\u6709\u7279\u6b8a\u6548\u679c\u7684\u68cb\u5b50\u3002\n- \u7edf\u8ba1\u6b64\u8f6e\u88ab\u6d88\u9664\u7684\u68cb\u5b50\u7684\u989c\u8272\u603b\u548c\uff0c\u8bb0\u5f55\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\n- \u5904\u7406\u68cb\u76d8\u5185\u68cb\u5b50\u7684\u91cd\u529b\u4e0b\u843d\uff0c\u5e76\u5f00\u59cb\u65b0\u7684\u4e00\u8f6e\u6d88\u9664\u3002\n- \u4e00\u6b21\u64cd\u4f5c\u5b8c\u6bd5\u540e\uff0c\u8bb0\u5f55\u8fde\u9501\u5956\u5206\u3002\n- $q$ \u6b21\u64cd\u4f5c\u5747\u5b8c\u6bd5\u540e\uff0c\u5904\u7406\u7ec8\u5c40\u5956\u5206\u3002\n\n\u4e00\u4e9b\u9700\u8981\u6ce8\u610f\u7684\u70b9\uff1a\n\n- \u4e00\u6b21\u64cd\u4f5c\u82e5\u662f\u4e0d\u5408\u6cd5\u7684\uff08\u4e0d\u89e6\u53d1\u6d88\u9664\uff09\uff0c\u90a3\u4e48\u4e0d\u5e94\u6267\u884c\u4ea4\u6362\u3002\n- \u7ec4\u5408\u5956\u5206\u53ea\u5bf9\u4ea4\u6362\u540e\u7684\u6d88\u9664\u6709\u6548\uff0c\u6240\u4ee5\u5e94\u5728\u89e6\u53d1\u6d88\u9664\u524d\u5224\u65ad\uff08\u6216\u8005\u6253\u4e0a\u4e0e\u5f85\u6d88\u9664\u4f4d\u7f6e\u4e0d\u540c\u7684\u6807\u8bb0\uff09\u3002\n- \u7531\u4e8e\u724c\u578b\u5956\u5206\u7684\u5904\u7406\u4e2d\uff0c\u4e00\u6b21\u5408\u6cd5\u64cd\u4f5c\u53ef\u80fd\u6709\u4e24\u79cd\u4e3b\u989c\u8272\uff0c\u6211\u4eec\u9700\u8981\u679a\u4e3e\u53ef\u80fd\u7684\u7ec4\u5408\u65b9\u6848\u6765\u5224\u65ad\u5f97\u5206\u3002\n\n## [Code](https://www.luogu.com.cn/paste/bod4wweb)\n",
        "postTime": 1665280722,
        "uid": 112661,
        "name": "NKL\u4e36",
        "ccfLevel": 0,
        "title": "\u3010\u505a\u9898\u8bb0\u5f55\u3011[THUPC2022 \u51b3\u8d5b] \u5fb7\u5dde\u6d88\u6d88\u4e50"
    },
    {
        "content": "\u7b2c\u4e00\u9053\u7d2b\u9898\u9898\u89e3\uff01~~\u867d\u7136\u662f\u9053\u6a21\u62df\u3002~~\n\n## \u9898\u610f\n\n\u5927\u4f53\u9898\u610f\u5c31\u662f\u4e00\u4e2a\u6d88\u6d88\u4e50\u7684\u6e38\u620f\u8fc7\u7a0b\uff0c\u591a\u770b\u51e0\u904d\u9898\u9762\u5373\u53ef\u3002\n\n## \u5206\u6790\n\n\u6d88\u6d88\u4e50\u7684\u6e38\u620f\u6b65\u9aa4\uff1a\u4ea4\u6362\u68cb\u5b50 $\\to$ \u5224\u65ad\u662f\u5426\u53ef\u6d88 $\\to$ \u7edf\u8ba1\u7ec4\u5408\u5956\u5206 $\\to$ \u7279\u6b8a\u6548\u679c $\\to$ \u7edf\u8ba1\u6d88\u9664\u5956\u5206 $\\to$ \u6d88\u9664\u68cb\u5b50 $\\to$ \u91cd\u529b\u4e0b\u843d $\\to$ \u5224\u65ad\u662f\u5426\u53ef\u6d88 $\\to ...$\u3002\n\n\u5176\u4e2d\u6709\u6548\u64cd\u4f5c\u6bcf\u6ee1 $5$ \u6b21\u5c31\u8981\u8fdb\u884c\u4e00\u6b21\u7edf\u8ba1\u724c\u578b\u5956\u5206\u3002\n\n\u6700\u540e\u8981\u7edf\u8ba1\u7ec8\u5c40\u5956\u5206\u3002\n\n\u56e0\u4e3a\u8fd9\u662f\u4e00\u9053\u6a21\u62df\u9898\uff0c\u4e14 $1 \\le n,m \\le 50$\uff0c\u6240\u4ee5\u53ea\u8981\u4e0d\u662f\u6b7b\u5faa\u73af\u7684\u4ee3\u7801\u5c31\u57fa\u672c\u4e0d\u4f1a $\\texttt{TLE}$\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u4e00\u4e2a\u4e00\u4e2a\u6b65\u9aa4\u5b9e\u73b0\u3002\n\n### \u4ea4\u6362\u68cb\u5b50\n\n\u4ea4\u6362\u68cb\u5b50\u662f\u8fd9\u4e9b\u6b65\u9aa4\u91cc\u6700\u7b80\u5355\u7684\u4e00\u4e2a\u3002\n\n\u9996\u5148\u9700\u8981\u5224\u65ad\u8fd9\u4e24\u4e2a\u4ea4\u6362\u7684\u4f4d\u7f6e\u662f\u5426\u76f8\u90bb\u3002\n\n\u5176\u6b21\u5224\u65ad\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u662f\u5426\u5b58\u5728\u68cb\u5b50\u3002\n\n\u6700\u540e\u5224\u65ad\u4ea4\u6362\u540e\u76d8\u9762\u80fd\u5426\u5b9e\u73b0\u6d88\u9664\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta\\left(nm(n+m)\\right)$\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nbool change(int xa,int ya,int xb,int yb){ //\u4ea4\u6362\u68cb\u5b50\uff0c\u8fd4\u56de\u503c\u8868\u793a\u662f\u5426\u4ea4\u6362\u6210\u529f\n\tif (abs(xa-xb)+abs(ya-yb)==1) //\u5224\u65ad\u662f\u5426\u76f8\u90bb\n\t\tif (a[xa][ya].first&&a[xb][yb].first){ //\u5224\u65ad\u4f4d\u7f6e\u662f\u5426\u6709\u68cb\u5b50\n\t\t\tswap(a[xa][ya],a[xb][yb]);\n\t\t\tbool res=check(1); //\u5224\u65ad\u80fd\u5426\u6d88\u9664\n\t\t\tif (!res){swap(a[xa][ya],a[xb][yb]);return false;} //\u4e0d\u80fd\u6d88\u9664\u5219\u91cd\u7f6e\u76d8\u9762\n\t\t\treturn true;\n\t\t}\n\treturn false;\n}\n```\n\n### \u5224\u65ad\u662f\u5426\u53ef\u6d88\n\n\u4e3b\u8981\u601d\u8def\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u68cb\u5b50\u5411\u53f3\u548c\u5411\u4e0b\u626b\u63cf\uff0c\u5224\u65ad\u662f\u5426\u6709 $3$ \u4e2a\u53ca $3$ \u4e2a\u4ee5\u4e0a\u7684\u540c\u8272\u68cb\u5b50\u8fde\u6210\u4e00\u7ebf\u3002\u51fd\u6570\u5c06\u53ef\u4ee5\u6d88\u9664\u7684\u68cb\u5b50\u5750\u6807\u52a0\u5165 `dels` \u4e2d\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta\\left(nm(n+m)\\right)$\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nbool check(bool flg){ //\u5224\u65ad\u662f\u5426\u53ef\u6d88\uff0cflg \u53c2\u6570\u8868\u793a\u662f\u5426\u662f\u7b2c\u4e00\u8f6e\u6d88\u9664\uff0c\u8fd4\u56de\u503c\u8868\u793a\u662f\u5426\u53ef\u4ee5\u6d88\u9664\n\tdels.clear();\n\tbool can=false; //\u8bb0\u5f55\u662f\u5426\u6d88\u9664\n\tfor (int i=1;i<=n;++i)\n\t\tfor (int j=1;j<=m;++j){\n\t\t\tif (a[i][j].first){ //\u5982\u679c\u6709\u68cb\u5b50\n\t\t\t\tint tot=0,tot2=0;\n\t\t\t\tfor (int k=0;i+k<=n;++k){ //\u5411\u4e0b\u626b\u63cf\n\t\t\t\t\tif (a[i+k][j].first==a[i][j].first) ++tot;\n\t\t\t\t\telse break;\n\t\t\t\t}\n\t\t\t\tif (tot>=3){ //\u5982\u679c\u6709 3 \u4e2a\u53ca\u4ee5\u4e0a\u7684\u540c\u8272\u68cb\u5b50\n\t\t\t\t\tcan=true;\n\t\t\t\t\tif (flg) col[now%5].insert(a[i][j].first); //\u5982\u679c\u662f\u7b2c\u4e00\u8f6e\u6d88\u9664\uff0c\u90a3\u4e48\u5c06\u6d88\u9664\u7684\u989c\u8272\u52a0\u5165\u5230\u8fd9\u4e00\u6b21\u7684\u4e3b\u989c\u8272\u4e2d\n\t\t\t\t\tfor (int k=0;k<tot;++k)\n\t\t\t\t\t\tdels.insert(make_pair(i+k,j)); //\u628a\u8981\u6d88\u9664\u7684\u68cb\u5b50\u52a0\u5165 dels\n\t\t\t\t}\n\t\t\t\tfor (int k=0;j+k<=m;++k){ //\u5411\u53f3\u626b\u63cf\n\t\t\t\t\tif (a[i][j+k].first==a[i][j].first) ++tot2;\n\t\t\t\t\telse break;\n\t\t\t\t}\n\t\t\t\tif (tot2>=3){\n\t\t\t\t\tcan=true;\n\t\t\t\t\tif (flg) col[now%5].insert(a[i][j].first);\n\t\t\t\t\tfor (int k=0;k<tot2;++k)\n\t\t\t\t\t\tdels.insert(make_pair(i,j+k));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\treturn can;\n}\n```\n\n### \u7edf\u8ba1\u7ec4\u5408\u5956\u5206\n\n\u628a\u6240\u6709\u8981\u6d88\u9664\u7684\u70b9\u6253\u4e0a\u6807\u8bb0\uff08\u4ee3\u7801\u4e2d\u7684 `mp` \u6570\u7ec4\uff09\uff0c\u7136\u540e\u6c42\u51fa\u6240\u6709\u56db\u8fde\u901a\u5757\u5373\u53ef\u3002\n\n\u4f9d\u6b21\u5bf9\u8fd8\u6ca1\u6709\u8bbf\u95ee\u8fc7\u7684\u70b9\u8fdb\u884c\u5bbd\u641c\uff0c\u5bbd\u641c\u65f6\u8bbf\u95ee\u7684\u70b9\u6253\u4e0a\u5df2\u8bbf\u95ee\u6807\u8bb0\uff08\u4ee3\u7801\u4e2d\u7684 `vis` \u6570\u7ec4\uff09\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta\\left(nm\\right)$\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nbitset<maxn> vis[maxn],mp[maxn];\nint dir[][2]={{0,1},{0,-1},{1,0},{-1,0}};\nvoid calcsquares(){ //\u7edf\u8ba1\u7ec4\u5408\u5956\u5206\n\tqueue<pii> q;delsquares.clear();\n\tfor (int i=1;i<=n;++i) vis[i].reset(),mp[i].reset();\n\tfor (pii it:dels) mp[it.first].set(it.second); //\u6807\u8bb0\u6240\u6709\u8981\u6d88\u9664\u7684\u70b9\n\tfor (pii it:dels){\n\t\tif (!vis[it.first][it.second]){ //\u5982\u679c\u8be5\u70b9\u8fd8\u6ca1\u6709\u8bbf\u95ee\u8fc7\uff0c\u5373\u4e0d\u5728\u5df2\u7ecf\u641c\u7d22\u7684\u4efb\u4e00\u56db\u8fde\u901a\u5757\u5185\n\t\t\tq.push(it);int tot=0; //tot \u8bb0\u5f55\u8fde\u901a\u5757\u5927\u5c0f\n\t\t\tvis[it.first].set(it.second);\n\t\t\twhile (!q.empty()){ //\u5bbd\u641c\u677f\u5b50\n\t\t\t\tpii fr=q.front();q.pop();++tot;\n\t\t\t\tint x=fr.first,y=fr.second;\n\t\t\t\tfor (int i=0;i<4;++i){\n\t\t\t\t\tint dx=dir[i][0]+x,dy=dir[i][1]+y;\n\t\t\t\t\tif (1<=dx&&dx<=n&&1<=dy&&dy<=m){\n\t\t\t\t\t\tif (mp[dx].test(dy)&&a[dx][dy].first==a[x][y].first&&!vis[dx].test(dy)){\n\t\t\t\t\t\t\tvis[dx].set(dy);\n\t\t\t\t\t\t\tq.push(make_pair(dx,dy));\n\t\t\t\t\t\t}\n\t\t\t\t\t} \n\t\t\t\t}\n\t\t\t}\n\t\t\tdelsquares.push_back(tot); //\u8bb0\u5f55\u8be5\u56db\u8fde\u901a\u5757\u7684\u5927\u5c0f\n\t\t}\n\t}\n\tfor (int it:delsquares)\n\t\tans+=(it-3)*(it-3)*50; //\u8ba1\u7b97\u5206\u6570\n\treturn;\n}\n```\n\n### \u7279\u6b8a\u6548\u679c\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u529f\u80fd\u90fd\u6309\u9898\u610f\u6a21\u62df\u5b9e\u73b0\u5373\u53ef\u3002\u628a\u6240\u6709\u529f\u80fd\u52a0\u5165\u5230\u961f\u5217\u4e2d\uff0c\u5982\u679c\u89e6\u53d1\u4e86\u65b0\u7684\u529f\u80fd\u5219\u5c06\u65b0\u529f\u80fd\u4e5f\u52a0\u5165\u5230\u961f\u5217\u4e2d\u3002\n\n\u4e5f\u662f\u4f7f\u7528\u5bbd\u641c\uff08~~\u4e5f\u8bb8\u53eb\u624b\u5199\u6808\u7684\u6df1\u641c\uff1f~~\uff09\u5b9e\u73b0\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u7ea6\u4e3a $\\Theta\\left(n^2m\\right)$\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nvoid feature(){ //\u7279\u6b8a\u6548\u679c\n\tqueue<tuple<int,int,int> > q;\n\tfor (pii it:dels)\n\t\tif (a[it.first][it.second].second){ //\u5982\u679c\u6709\u7279\u6b8a\u6548\u679c\n\t\t\tq.push(make_tuple(it.first,it.second,a[it.first][it.second].second)); //\u52a0\u5165\u961f\u5217\n\t\t\ta[it.first][it.second].second=0; //\u53d6\u6d88\u6548\u679c\uff0c\u5426\u5219\u4f1a\u88ab\u591a\u6b21\u52a0\u5165\n\t\t}\n\twhile (!q.empty()){ //\u5bbd\u641c\u677f\u5b50\n\t\tauto fr=q.front();q.pop();\n\t\tint x=get<0>(fr),y=get<1>(fr),op=get<2>(fr); //x \u548c y \u8868\u793a\u5750\u6807\uff0cop \u8868\u793a\u529f\u80fd\u7684\u7c7b\u578b\n\t\tswitch (op){\n\t\t\tcase 1: //\u6d88\u4e00\u884c\n\t\t\t\tfor (int i=1;i<=m;++i)\n\t\t\t\t\tif (a[x][i].first){\n\t\t\t\t\t\tif (a[x][i].second)\n\t\t\t\t\t\t\tq.push(make_tuple(x,i,a[x][i].second)),a[x][i].second=0;\n\t\t\t\t\t\tdels.insert(make_pair(x,i));\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 2: //\u6d88\u4e00\u5217\n\t\t\t\tfor (int i=1;i<=n;++i)\n\t\t\t\t\tif (a[i][y].first){\n\t\t\t\t\t\tif (a[i][y].second)\n\t\t\t\t\t\t\tq.push(make_tuple(i,y,a[i][y].second)),a[i][y].second=0;\n\t\t\t\t\t\tdels.insert(make_pair(i,y));\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 3: //\u6d88\u4e00\u884c + \u4e00\u5217\n\t\t\t\tfor (int i=1;i<=m;++i)\n\t\t\t\t\tif (a[x][i].first){\n\t\t\t\t\t\tif (a[x][i].second)\n\t\t\t\t\t\t\tq.push(make_tuple(x,i,a[x][i].second)),a[x][i].second=0;\n\t\t\t\t\t\tdels.insert(make_pair(x,i));\n\t\t\t\t\t}\n\t\t\t\tfor (int i=1;i<=n;++i)\n\t\t\t\t\tif (a[i][y].first){\n\t\t\t\t\t\tif (a[i][y].second)\n\t\t\t\t\t\t\tq.push(make_tuple(i,y,a[i][y].second)),a[i][y].second=0;\n\t\t\t\t\t\tdels.insert(make_pair(i,y));\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 4: //\u6d88 3*3 \u533a\u57df\n\t\t\t\tfor (int i=max(1ll,x-1);i<=min(n,x+1);++i)\n\t\t\t\t\tfor (int j=max(1ll,y-1);j<=min(m,y+1);++j)\n\t\t\t\t\t\tif (a[i][j].first){\n\t\t\t\t\t\t\tif (a[i][j].second)\n\t\t\t\t\t\t\t\tq.push(make_tuple(i,j,a[i][j].second)),a[i][j].second=0;\n\t\t\t\t\t\t\tdels.insert(make_pair(i,j));\n\t\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 5: //\u6d88 5*5 \u533a\u57df\n\t\t\t\tfor (int i=max(1ll,x-2);i<=min(n,x+2);++i)\n\t\t\t\t\tfor (int j=max(1ll,y-2);j<=min(m,y+2);++j)\n\t\t\t\t\t\tif (a[i][j].first){\n\t\t\t\t\t\t\tif (a[i][j].second)\n\t\t\t\t\t\t\t\tq.push(make_tuple(i,j,a[i][j].second)),a[i][j].second=0;\n\t\t\t\t\t\t\tdels.insert(make_pair(i,j));\n\t\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 6: //\u6d88\u540c\u8272\u68cb\u5b50\n\t\t\t\tfor (int i=1;i<=n;++i)\n\t\t\t\t\tfor (int j=1;j<=m;++j)\n\t\t\t\t\t\tif (a[i][j].first==a[x][y].first){\n\t\t\t\t\t\t\tif (a[i][j].second)\n\t\t\t\t\t\t\t\tq.push(make_tuple(i,j,a[i][j].second)),a[i][j].second=0;\n\t\t\t\t\t\t\tdels.insert(make_pair(i,j));\n\t\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n```\n\n### \u7edf\u8ba1\u6d88\u9664\u5956\u5206\n\n\u6309\u9898\u4e2d\u6240\u7ed9\u516c\u5f0f\u6a21\u62df\u5373\u53ef\uff0c\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta\\left(nm\\right)$\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nvoid calcchesses(int turns){ //\u7edf\u8ba1\u6d88\u9664\u5956\u5206\n\tfor (pii it:dels){\n\t\tint x=it.first,y=it.second;\n\t\tans+=a[x][y].first*turns; //\u516c\u5f0f\n\t}\n\treturn;\n}\n```\n\n### \u6d88\u9664\u68cb\u5b50\n\n\u73b0\u5728\u6240\u6709\u8981\u6d88\u9664\u7684\u68cb\u5b50\u90fd\u5728 `dels` \u91cc\u9762\uff0c\u6240\u4ee5\u76f4\u63a5\u904d\u5386 `dels` \u9010\u4e2a\u8fdb\u884c\u6d88\u9664\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta\\left(nm\\right)$\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nvoid remove(){ //\u6d88\u9664\u68cb\u5b50\n\tfor (pii it:dels){\n\t\tint x=it.first,y=it.second;\n\t\ta[x][y].first=0;\n\t}\n\treturn;\n}\n```\n\n### \u91cd\u529b\u4e0b\u843d\n\n\u5bf9\u4e8e\u6bcf\u4e00\u5217\u5206\u5f00\u8003\u8651\uff0c\u5982\u679c\u8fd9\u4e00\u4e2a\u4f4d\u7f6e\u6709\u68cb\u5b50\uff0c\u90a3\u4e48\u5b83\u4e0b\u843d\u7684\u683c\u6570\u5c31\u7b49\u4e8e\u8fd9\u4e00\u5217\u5b83\u4e0b\u9762\u88ab\u6d88\u9664\u7684\u68cb\u5b50\u4e2a\u6570\u3002\n\n\u6240\u4ee5\u5bf9\u6bcf\u4e00\u5217\u505a\u540e\u7f00\u548c\uff0c\u7edf\u8ba1\u88ab\u6d88\u9664\u68cb\u5b50\u7684\u4e2a\u6570\uff0c\u5373\u53ef\u4ece $\\Theta\\left(n^2m\\right)$ \u4f18\u5316\u5230 $\\Theta\\left(nm\\right)$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta\\left(nm\\right)$\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nint zeros[maxn]; //\u540e\u7f00\u548c\uff0c\u8868\u793a\u88ab\u6d88\u9664\u68cb\u5b50\u7684\u4e2a\u6570\nvoid down(){ //\u91cd\u529b\u4e0b\u843d\n\tfor (int i=1;i<=m;++i){\n\t\tfor (int j=n;j;--j){ //\u540e\u7f00\u548c\n\t\t\tif (!a[j][i].first) zeros[j]=zeros[j+1]+1;\n\t\t\telse zeros[j]=zeros[j+1];\n\t\t}\n\t\tfor (int j=n;j;--j)\n\t\t\tif (a[j][i].first) //\u5982\u679c\u6709\u68cb\u5b50\n\t\t\t\tif (j+zeros[j]<=n){\n\t\t\t\t\tpii tmp=a[j][i];\n\t\t\t\t\ta[j][i]=make_pair(0,0);\n\t\t\t\t\ta[j+zeros[j]][i]=tmp; //\u4ea4\u6362\n\t\t\t\t}\n\t}\n\treturn;\n}\n```\n\n### \u679a\u4e3e\u4e3b\u989c\u8272\n\n\u663e\u7136\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u64cd\u4f5c\uff0c\u6700\u5c11\u6709\u4e00\u4e2a\u4e3b\u989c\u8272\uff0c\u6700\u591a\u6709\u4e24\u4e2a\u4e3b\u989c\u8272\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u5bf9\u6709\u4e24\u4e2a\u4e3b\u989c\u8272\u7684\u64cd\u4f5c\u8fdb\u884c\u679a\u4e3e\uff0c\u56e0\u4e3a\u6700\u591a\u53ea\u6709 $5$ \u6b21\u64cd\u4f5c\u9700\u8981\u679a\u4e3e\uff0c\u6240\u4ee5\u679a\u4e3e\u7684\u6b21\u6570\u4e0d\u8d85\u8fc7 $2^5=32$ \u6b21\u3002\n\n\u679a\u4e3e\u53ef\u4ee5\u4f7f\u7528 $\\texttt{dfs}$\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u7528\u4e8c\u8fdb\u5236\u6570\u679a\u4e3e\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta\\left(2^{len}k\\le 32k\\right)$\uff0c\u5176\u4e2d $len$ \u8868\u793a\u6709 $2$ \u4e2a\u4e3b\u989c\u8272\u7684\u64cd\u4f5c\u603b\u6570\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nint dfscolors(){ //\u679a\u4e3e\u4e3b\u989c\u8272\uff0c\u8fd4\u56de\u503c\u8868\u793a\u8fd9\u4e94\u6b21\u64cd\u4f5c\u7684\u6700\u5927\u724c\u578b\u5956\u5206\n\tvector<int> dbcols; //\u6709 2 \u4e2a\u4e3b\u989c\u8272\u7684\u64cd\u4f5c\u7f16\u53f7\n\tfor (int i=0;i<5;++i)\n\t\tif (col[i].size()==2) dbcols.push_back(i);\n\tint len=dbcols.size(),range=1<<len,num=0;\n\tvector<int> nowcol;\n\tint maxx=0;\n\tfor (int i=0;i<range;++i){ //\u4e8c\u8fdb\u5236\u6570\u679a\u4e3e\n\t\tnum=0;\n\t\tfor (int j=0;(1<<j)<=i;++j)\n\t\t\tif (i&(1<<j)) num|=(1<<dbcols[j]); //\u8ba1\u7b97\u5f53\u524d\u72b6\u6001\u5bf9\u5e94\u7684\u6570\n\t\tnowcol.clear();\n\t\tfor (int j=0,k=1;j<5;++j,k<<=1){ //\u4f9d\u6b21\u53d6\u4e3b\u989c\u8272\n\t\t\tif (num&k) nowcol.push_back(*col[j].rbegin());\n\t\t\telse nowcol.push_back(*col[j].begin());\n\t\t}\n\t\tint res=calccolors(nowcol); //\u8ba1\u7b97\n\t\tmaxx=max(res,maxx);\n\t}\n\treturn maxx;\n}\n```\n\n### \u7edf\u8ba1\u5f53\u524d\u724c\u578b\u5956\u5206\n\n\u4e3b\u8981\u601d\u60f3\u5c31\u662f\u4e24\u6b21\u4f7f\u7528\u6620\u5c04\u8ba1\u7b97\u51fa\u6bcf\u79cd\u724c\u578b\u6709\u51e0\u79cd\u3002\n\n`cnt` \u8868\u793a\u4e00\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\uff1b\n\n`ccnt` \u8868\u793a\u4e00\u79cd\u724c\u578b\uff08$1$ \u4e2a\u76f8\u540c\u989c\u8272\uff0c$1$ \u5bf9\u76f8\u540c\u989c\u8272\u7b49\uff09\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta\\left(k\\right)$\uff0c\u4e0d\u8fc7\u53ef\u4ee5\u901a\u8fc7\u4e00\u8fde\u4e32\u5224\u65ad\u5b9e\u73b0\u5230 $\\Theta\\left(1\\right)$\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nint calccolors(vector<int> cols){ //\u7edf\u8ba1\u5f53\u524d\u724c\u578b\u5956\u5206\uff0c\u8fd4\u56de\u503c\u8868\u793a\u5f53\u524d\u724c\u578b\u5f97\u5206\n\tint cnt[maxk]={0},ccnt[6]={0};\n\tfor (int it:cols) ++cnt[it];\n\tfor (int i=1;i<=kinds;++i) ++ccnt[cnt[i]];\n\tif (ccnt[1]==5){ //\u9ad8\u724c\uff1a5 \u79cd\u4e0d\u540c\u989c\u8272\n\t\tint maxx=*max_element(cols.begin(),cols.end()); //\u53d6\u6700\u5927\u989c\u8272\u7f16\u53f7\n\t\treturn 50+maxx;\n\t}\n\tif (ccnt[1]==3&&ccnt[2]==1){ //\u4e00\u5bf9\uff1a1 \u5bf9+ 3 \u79cd\u4e0d\u540c\u989c\u8272\n\t\tfor (int i=kinds;i;--i)\n\t\t\tif (cnt[i]==2) return 100+(i<<1);\n\t} \n\tif (ccnt[1]==1&&ccnt[2]==2){ //\u4e24\u5bf9\uff1a2 \u5bf9+ 1 \u79cd\u4e0d\u540c\u989c\u8272\n\t\tint res=200,flg=1;\n\t\tfor (int i=kinds;i;--i)\n\t\t\tif (cnt[i]==2) res+=(i<<flg),flg=0;\n\t\treturn res;\n\t}\n\tif (ccnt[3]==1&&ccnt[1]==2){ //\u4e09\u6761\uff1a3 \u79cd\u76f8\u540c\u989c\u8272+ 2 \u79cd\u4e0d\u540c\u989c\u8272\n\t\tfor (int i=kinds;i;--i)\n\t\t\tif (cnt[i]==3) return 300+i*3;\n\t}\n\tif (ccnt[3]==1&&ccnt[2]==1){ //\u846b\u82a6\uff1a3 \u4e2a\u76f8\u540c\u989c\u8272 + \u53e6\u5916 2 \u4e2a\u76f8\u540c\u989c\u8272\n\t\tint res=500;\n\t\tfor (int i=kinds;i;--i)\n\t\t\tif (cnt[i]==3) res+=i*3;\n\t\t\telse if (cnt[i]==2) res+=i;\n\t\treturn res;\n\t}\n\tif (ccnt[4]==1&&ccnt[1]==1){ //\u56db\u6761\uff1a4 \u4e2a\u76f8\u540c\u989c\u8272 + 1 \u4e2a\u5176\u4ed6\u989c\u8272\n\t\tfor (int i=kinds;i;--i)\n\t\t\tif (cnt[i]==4) return 750+i*5;\n\t}\n\tif (ccnt[5]==1){ //\u4e94\u6761\uff1a5 \u4e2a\u989c\u8272\u5168\u90e8\u76f8\u540c\n\t\tfor (int i=kinds;i;--i)\n\t\t\tif (cnt[i]==5) return 1000+i*10;\n\t}\n\treturn 0;\n}\n```\n\n### \u4e3b\u51fd\u6570\u548c\u5269\u4e0b\u7684\u51e0\u79cd\u5f97\u5206\n\n\u8fd9\u4e9b\u5f97\u5206\u6bd4\u8f83\u7b80\u5355\uff0c\u6211\u5c31\u90fd\u653e\u5728\u4e86\u4e3b\u51fd\u6570\u91cc\u8ba1\u7b97\u3002\n\n```cpp\nbool alluse=true; //\u6807\u8bb0\u64cd\u4f5c\u662f\u5426\u5168\u90e8\u6709\u6548\nwhile (q--){\n\tint xa=read(),ya=read(),xb=read(),yb=read();\n\tbool flg=change(xa,ya,xb,yb);\n\tif (flg){ //\u5982\u679c\u64cd\u4f5c\u6709\u6548\n\t\tcalcsquares();\n\t\tfeature();\n\t\tcalcchesses(1);\n\t\tremove();down();\n\t\tint turns=1;\n\t\twhile (check(0)){\n\t\t\t++turns;\n\t\t\tcalcsquares();\n\t\t\tfeature();\n\t\t\tcalcchesses(turns);\n\t\t\tremove();down();\n\t\t}\n\t\tans+=(turns-1)*(turns-1)*80; //\u7edf\u8ba1\u8fde\u9501\u5956\u5206\n\t\t++now; //\u8ba1\u5165\u4e00\u6b21\u6709\u6548\u64cd\u4f5c\n\t\t}\n\telse alluse=false; //\u5426\u5219\u65e0\u6cd5\u5f97\u5230\u5168\u90e8\u64cd\u4f5c\u6709\u6548\u7684\u7ec8\u5c40\u5f97\u5206\n\tif (now==5){ //\u5982\u679c\u6709\u6548\u64cd\u4f5c\u6ee1 5 \u4e2a\n\t\tans+=dfscolors();\n\t\tfor (int i=0;i<5;++i) col[i].clear();\n\t\tnow=0;\n\t}\n}\n//\u4ee5\u4e0b\u662f\u7ec8\u5c40\u5956\u5206\nif (alluse) ans+=1000;\nif (delall()) ans+=10000; //delall \u51fd\u6570\u8868\u793a\u662f\u5426\u5168\u90e8\u5220\u9664\uff0c\u8be5\u51fd\u6570\u5b9e\u73b0\u7b80\u5355\uff0c\u5c31\u4e0d\u653e\u4ee3\u7801\u4e86\n```\n\n## \u540e\u8bb0\n\n[AC \u8bb0\u5f55](https://www.luogu.com.cn/record/109447425)\u3002\n\n\u8fd9\u9053\u5927\u6a21\u62df\u5c5e\u4e8e\u6bd4\u8f83\u597d\u505a\u7684\uff0c\u6ca1\u6709\u4ec0\u4e48\u5751\u70b9\uff0c\u4e3b\u8981\u5728\u4e8e\u7801\u91cf\u3002\n\n\u53e6\u5916\u719f\u7ec3\u8fd0\u7528 `STL` \u5728\u4e00\u4e9b\u4e0d\u5361\u65f6\u95f4\u7684\u6a21\u62df\u9898\u4e2d\u53ef\u4ee5\u51cf\u5c11\u5f88\u591a\u4e0d\u5fc5\u8981\u7684\u9519\u8bef\u548c\u7801\u91cf\u3002\uff08\u4ec5\u4e2a\u4eba\u89c2\u70b9\uff09\n\n\u5b8c\u7ed3\u6563\u82b1\uff01\uff01\uff01",
        "postTime": 1683109473,
        "uid": 674721,
        "name": "yanhao40340",
        "ccfLevel": 7,
        "title": "P8422 \u9898\u89e3"
    },
    {
        "content": "\u6bd4\u8f83\u597d\u505a\u7684\u4e00\u9053\u5927\u6a21\u62df\uff0c\u6ca1\u6709\u4ec0\u4e48\u6076\u5fc3\u7684\u7ec6\u8282\u3002\n\n\u6211\u4eec\u4e00\u4e2a\u4e00\u4e2a\u6765\u5b9e\u73b0\u64cd\u4f5c\u3002\n\n## \u8f85\u52a9\u51fd\u6570\n\n```cpp\nbool I(int x, int y) { return x >= 1 && x <= n && y >= 1 && y <= m; }\nbool N(int x, int y) { return !I(x, y) || !a[x][y].first; }\n```\n\n`I(x,y)` \u7528\u6765\u5224\u65ad\u5750\u6807\u662f\u5426\u5728\u8303\u56f4\u5185\uff0c`N(x,y)` \u7528\u6765\u5224\u65ad\u5750\u6807\u662f\u5426**\u4e0d**\u5408\u6cd5\u3002\n\n```cpp\nint Cx(int x, int y) {\n  int cx = 0;\n  for (int _x = x; _x >= 1 && a[x][y].first == a[_x][y].first; --_x, ++cx) {\n  }\n  for (int _x = x + 1; _x <= n && a[x][y].first == a[_x][y].first; ++_x, ++cx) {\n  }\n  return cx;\n}\nint Cy(int x, int y) {\n  int cy = 0;\n  for (int _y = y; _y >= 1 && a[x][y].first == a[x][_y].first; --_y, ++cy) {\n  }\n  for (int _y = y + 1; _y <= m && a[x][y].first == a[x][_y].first; ++_y, ++cy) {\n  }\n  return cy;\n}\nvoid T(int x, int y) { v[x][y] = a[x][y].first; }\n```\n\n`Cx(x,y),Cy(x,y)` \u7528\u5904\u7c7b\u4f3c\uff0c\u90fd\u662f\u7528\u6765\u7edf\u8ba1\u540c\u4e00\u884c/\u5217\u4e2d\u8fde\u7eed\u7684\u68cb\u5b50\u6570\u91cf\u3002\n\n`T(x,y)` \u7528\u6765\u6253\u6807\u8bb0\uff0c\u8868\u793a\u8fd9\u4e2a\u5750\u6807\u662f\u9700\u8981\u88ab\u5220\u9664\u7684\u3002\n\n## \u4ea4\u6362\u68cb\u5b50\n\n```cpp\nbool H(int x, int y) { return !N(x, y) && (Cx(x, y) >= 3 || Cy(x, y) >= 3); }\nbool C(int x1, int y1, int x2, int y2) {\n  if (N(x1, y1) || N(x2, y2) || abs(x1 - x2) + abs(y1 - y2) != 1) {\n    return 0;\n  }\n  swap(a[x1][y1], a[x2][y2]);\n  bool f = H(x1, y1) || H(x2, y2);\n  swap(a[x1][y1], a[x2][y2]);\n  return f;\n}\n```\n\n`H(x,y)` \u7528\u6765\u5224\u65ad\u5f53\u524d\u70b9\u80fd\u5426\u88ab\u6d88\u9664\uff0c`C(x1,y1,x2,y2)` \u7528\u6765\u5224\u65ad\u6b64\u6b21\u4ea4\u6362\u662f\u5426\u6709\u6548\u3002\n\n\u4ea4\u6362\u6709\u6548\u7684\u6761\u4ef6\uff1a\u4e24\u4e2a\u5750\u6807\u90fd\u5408\u6cd5\uff0c\u66fc\u54c8\u987f\u8ddd\u79bb\u4e3a $1$\uff0c\u4ea4\u6362\u540e\u53ef\u4ee5\u88ab\u6d88\u9664\u3002\n\n## \u5bfb\u627e\u88ab\u6d88\u9664\u7684\u68cb\u5b50\n\n**\u5751\u70b9\uff1a\u88ab\u6d88\u9664\u7684\u68cb\u5b50\u662f\u4ece\u5f53\u524d\u5750\u6807\u5f00\u59cb\u5411\u884c/\u5217\u5ef6\u4f38\u7684\u6240\u6709\u540c\u8272\u68cb\u5b50\uff0c\u800c\u4e0d\u662f\u540c\u8272\u56db\u8fde\u901a\u5757\u3002**\n\n```cpp\nvoid G(int x, int y) {\n  if (Cx(x, y) >= 3) {\n    for (int _x = x; _x >= 1 && a[x][y].first == a[_x][y].first; T(_x, y), --_x) {\n    }\n    for (int _x = x + 1; _x <= n && a[x][y].first == a[_x][y].first; T(_x, y), ++_x) {\n    }\n  }\n  if (Cy(x, y) >= 3) {\n    for (int _y = y; _y >= 1 && a[x][y].first == a[x][_y].first; T(x, _y), --_y) {\n    }\n    for (int _y = y + 1; _y <= m && a[x][y].first == a[x][_y].first; T(x, _y), ++_y) {\n    }\n  }\n}\nbool G() {\n  bool f = 0;\n  for (int i = 1; i <= n; ++i) {\n    for (int j = 1; j <= m; ++j) {\n      if (H(i, j)) {\n        G(i, j), f = 1;\n      }\n    }\n  }\n  return f;\n}\n```\n\n`G(x,y)` \u4f1a\u5bf9\u4ece\u5f53\u524d\u5750\u6807\u5f00\u59cb\u4f1a\u88ab\u5220\u9664\u7684\u68cb\u5b50\u5168\u90e8\u6253\u4e0a\u6807\u8bb0\uff1b`G()` \u4f1a\u627e\u51fa\u6240\u6709\u8981\u88ab\u5220\u9664\u7684\u68cb\u5b50\uff0c\u540c\u65f6\u5224\u65ad\u662f\u5426\u8fd8\u8981\u7ee7\u7eed\u5220\u3002\n\n## \u6d88\u9664\u68cb\u5b50\n\n```cpp\nvoid C(int x, int y) {\n  if (N(x, y)) {\n    return;\n  }\n  int ty = a[x][y].second, co = a[x][y].first;\n  sc += co, a[x][y] = {0, 0};\n  if (ty == 1 || ty == 3) {\n    for (int k = 1; k <= m; ++k) {\n      C(x, k);\n    }\n  }\n  if (ty == 2 || ty == 3) {\n    for (int k = 1; k <= n; ++k) {\n      C(k, y);\n    }\n  }\n  if (ty == 6) {\n    for (int i = 1; i <= n; ++i) {\n      for (int j = 1; j <= m; ++j) {\n        if (a[i][j].first == co) {\n          C(i, j);\n        }\n      }\n    }\n  }\n  if (ty == 4 || ty == 5) {\n    int v = ty - 3;\n    for (int i = -v; i <= v; ++i) {\n      for (int j = -v; j <= v; ++j) {\n        if (i || j) {\n          C(x + i, y + j);\n        }\n      }\n    }\n  }\n}\n```\n\n\u6d88\u9664\u7684\u65f6\u5019\u8bb0\u5f55\u4e00\u4e0b\u989c\u8272\u7f16\u53f7\u548c\u7528\u6765\u7ed3\u7b97\u5206\u6570\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u6309\u7167\u9898\u610f\u6a21\u62df\u3002\n\n## \u4e3b\u8fc7\u7a0b\n\n```cpp\nvoid FD() {\n  for (int j = 1; j <= m; ++j) {\n    int k = n;\n    for (int i = n; i >= 1; --i) {\n      if (a[i][j].first) {\n        a[k--][j] = a[i][j];\n      }\n    }\n    for (; k; a[k--][j] = {0, 0}) {\n    }\n  }\n}\n......\nfor (int x1, y1, x2, y2; q--;) {\n  cin >> x1 >> y1 >> x2 >> y2;\n  bool f = C(x1, y1, x2, y2);\n  if (!f) {\n    aC = 0;\n    continue;\n  }\n  swap(a[x1][y1], a[x2][y2]);\n  int k = 0;\n  for (; G(); FD()) {\n    ++k, sc = 0;\n    for (int i = 1; i <= n; ++i) {\n      for (int j = 1; j <= m; ++j) {\n        if (v[i][j]) {\n          C(i, j);\n        }\n      }\n    }\n  }\n}\n```\n\n\u6a21\u62df\u6bcf\u4e00\u8f6e\u7684\u6d88\u9664\u548c\u4e0b\u843d\u5373\u53ef\n\n## \u7ed3\u7b97\u5206\u6570\n\n### \u7ec8\u5c40\u5956\u5206\n\n\u5f88\u7b80\u5355\uff0c\u5f00\u4e2a\u53d8\u91cf\u5b58\u4e00\u4e0b\u6240\u6709\u64cd\u4f5c\u7684\u5408\u6cd5\u6027\uff0c\u6700\u540e\u5224\u4e00\u4e0b\u6e05\u7a7a\u76d8\u9762\u5373\u53ef\u3002\n\n```cpp\nif (aC) {\n  ans += 1000;\n}\naC = 1;\nfor (int i = 1; i <= n; ++i) {\n  for (int j = 1; j <= m; ++j) {\n    aC &= !a[i][j].first;\n  }\n}\nif (aC) {\n  ans += 10000;\n}\n```\n\n### \u6d88\u9664\u5956\u5206\n\n\u7ef4\u62a4\u4e00\u4e0b\u4e4b\u524d\u63d0\u5230\u7684 `sc`\uff0c\u6bcf**\u8f6e**\u6d88\u9664\u540e\u7ed3\u7b97\u5206\u6570\u5373\u53ef\u3002\n\n```cpp\nfor (int x1, y1, x2, y2; q--;) {\n  cin >> x1 >> y1 >> x2 >> y2;\n  bool f = C(x1, y1, x2, y2);\n  if (!f) {\n    aC = 0;\n    continue;\n  }\n  swap(a[x1][y1], a[x2][y2]);\n  int k = 0;\n  for (; G(); FD()) {\n    ++k, sc = 0;\n    for (int i = 1; i <= n; ++i) {\n      for (int j = 1; j <= m; ++j) {\n        if (v[i][j]) {\n          C(i, j);\n        }\n      }\n    }\n    ans += sc * k; // \u6d88\u9664\u5956\u5206\n  }\n}\n```\n\n### \u8fde\u9501\u5956\u5206\n\n\u8bb0\u4e00\u4e0b\u603b\u8f6e\u6570\u5373\u53ef\u3002\n\n```cpp\nfor (int x1, y1, x2, y2; q--;) {\n  cin >> x1 >> y1 >> x2 >> y2;\n  bool f = C(x1, y1, x2, y2);\n  if (!f) {\n    aC = 0;\n    continue;\n  }\n  swap(a[x1][y1], a[x2][y2]);\n  int k = 0;\n  for (; G(); FD()) {\n    ++k, sc = 0;\n    for (int i = 1; i <= n; ++i) {\n      for (int j = 1; j <= m; ++j) {\n        if (v[i][j]) {\n          C(i, j);\n        }\n      }\n    }\n    ans += sc * k; // \u6d88\u9664\u5956\u5206\n  }\n  ans += 80 * (k - 1) * (k - 1); // \u8fde\u9501\u5956\u5206\n}\n```\n\n### \u7ec4\u5408\u5956\u5206\n\n\u627e\u51fa\u6240\u6709\u7684\u540c\u8272\u56db\u8fde\u901a\u5757\uff0c\u7ed3\u7b97\u5206\u6570\u5373\u53ef\u3002\n\n```cpp\nint F(int x, int y, int co) {\n  if (!I(x, y) || v[x][y] != co) {\n    return 0;\n  }\n  int c = 1;\n  v[x][y] = 0;\n  for (int k = 0; k < 4; ++k) {\n    c += F(x + kD[k][0], y + kD[k][1], co);\n  }\n  return c;\n}\n......\nfor (int x1, y1, x2, y2; q--;) {\n  cin >> x1 >> y1 >> x2 >> y2;\n  bool f = C(x1, y1, x2, y2);\n  if (!f) {\n    aC = 0;\n    continue;\n  }\n  swap(a[x1][y1], a[x2][y2]);\n  int k = 0;\n  for (; G(); FD()) {\n    ++k, sc = 0;\n    for (int i = 1; i <= n; ++i) {\n      for (int j = 1; j <= m; ++j) {\n        if (v[i][j]) {\n          C(i, j);\n        }\n      }\n    }\n    ans += sc * k; // \u6d88\u9664\u5956\u5206\n    for (int i = 1; i <= n; ++i) { // \u7ec4\u5408\u5956\u5206\n      for (int j = 1; j <= m; ++j) {\n        if (v[i][j]) {\n          int vc = F(i, j, v[i][j]);\n          if (vc) {\n            ans += 50 * (vc - 3) * (vc - 3);\n          }\n        }\n      }\n    }\n  }\n  ans += 80 * (k - 1) * (k - 1); // \u8fde\u9501\u5956\u5206\n}\n```\n\n### \u724c\u578b\u5956\u5206\n\n\u6bcf\u4e94\u6b21\u64cd\u4f5c\u7ed3\u7b97\u4e00\u4e0b\u5206\u6570\u5373\u53ef\uff0c\u53ef\u4ee5\u66b4\u529b\u679a\u4e3e\u3002\n\n```cpp\nint C(int l[5]) {\n  fill_n(cc + 1, k, 0);\n  for (int i = 0; i < 5; ++i) {\n    ++cc[l[i]];\n  }\n  vector<int> cl[6];\n  for (int i = 0; i < 6; ++i) {\n    cl[i].clear();\n  }\n  for (int i = 1; i <= k; ++i) {\n    if (cc[i]) {\n      cl[cc[i]].push_back(i);\n    }\n  }\n  if (cl[1].size() == 5) {\n    return 50 + cl[1].back();\n  }\n  if (cl[1].size() == 3) {\n    return 100 + cl[2][0] * 2;\n  }\n  if (cl[1].size() == 2) {\n    return 300 + cl[3][0] * 3;\n  }\n  if (cl[2].size() == 2) {\n    return 200 + cl[2][1] * 2 + cl[2][0];\n  }\n  if (cl[2].size() == 1) {\n    return 500 + cl[3][0] * 3 + cl[2][0];\n  }\n  if (cl[4].size() == 1) {\n    return 750 + cl[4][0] * 5;\n  }\n  return 1000 + cl[5][0] * 10;\n}\n......\nfor (int x1, y1, x2, y2; q--;) {\n  cin >> x1 >> y1 >> x2 >> y2;\n  bool f = C(x1, y1, x2, y2);\n  if (!f) {\n    aC = 0;\n    continue;\n  }\n  swap(a[x1][y1], a[x2][y2]);\n  ml[mlc][0] = H(x1, y1) ? a[x1][y1].first : a[x2][y2].first;\n  ml[mlc][1] = H(x2, y2) ? a[x2][y2].first : a[x1][y1].first;\n  if (++mlc == 5) {\n    mlc = 0;\n    int mc = 0;\n    for (int i = 0; i < 32; ++i) {\n      int c[5] = {0};\n      for (int j = 0; j < 5; ++j) {\n        c[j] = ml[j][i >> j & 1];\n      }\n      mc = max(mc, C(c));\n    }\n    ans += mc; // \u724c\u578b\u5956\u5206\n  }\n  int k = 0;\n  for (; G(); FD()) {\n    ++k, sc = 0;\n    for (int i = 1; i <= n; ++i) {\n      for (int j = 1; j <= m; ++j) {\n        if (v[i][j]) {\n          C(i, j);\n        }\n      }\n    }\n    ans += sc * k; // \u6d88\u9664\u5956\u5206\n    for (int i = 1; i <= n; ++i) { // \u7ec4\u5408\u5956\u5206\n      for (int j = 1; j <= m; ++j) {\n        if (v[i][j]) {\n          int vc = F(i, j, v[i][j]);\n          if (vc) {\n            ans += 50 * (vc - 3) * (vc - 3);\n          }\n        }\n      }\n    }\n  }\n  ans += 80 * (k - 1) * (k - 1); // \u8fde\u9501\u5956\u5206\n}\n```\n\n## \u603b\u4ee3\u7801\n\n```cpp#include <vector>\n#include <iostream>\n\nusing namespace std;\nusing Pii = pair<int, int>;\n\nconst int kN = 51, kK = 101;\nconst int kD[4][2] = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};\n\nint n, m, k, q, cc[kK], v[kN][kN], mlc, ml[5][2], ans, sc;\nPii a[kN][kN];\nbool aC = 1;\n\nbool I(int x, int y) { return x >= 1 && x <= n && y >= 1 && y <= m; }\nbool N(int x, int y) { return !I(x, y) || !a[x][y].first; }\nint Cx(int x, int y) {\n  int cx = 0;\n  for (int _x = x; _x >= 1 && a[x][y].first == a[_x][y].first; --_x, ++cx) {\n  }\n  for (int _x = x + 1; _x <= n && a[x][y].first == a[_x][y].first; ++_x, ++cx) {\n  }\n  return cx;\n}\nint Cy(int x, int y) {\n  int cy = 0;\n  for (int _y = y; _y >= 1 && a[x][y].first == a[x][_y].first; --_y, ++cy) {\n  }\n  for (int _y = y + 1; _y <= m && a[x][y].first == a[x][_y].first; ++_y, ++cy) {\n  }\n  return cy;\n}\nvoid T(int x, int y) { v[x][y] = a[x][y].first; }\nvoid G(int x, int y) {\n  if (Cx(x, y) >= 3) {\n    for (int _x = x; _x >= 1 && a[x][y].first == a[_x][y].first; T(_x, y), --_x) {\n    }\n    for (int _x = x + 1; _x <= n && a[x][y].first == a[_x][y].first; T(_x, y), ++_x) {\n    }\n  }\n  if (Cy(x, y) >= 3) {\n    for (int _y = y; _y >= 1 && a[x][y].first == a[x][_y].first; T(x, _y), --_y) {\n    }\n    for (int _y = y + 1; _y <= m && a[x][y].first == a[x][_y].first; T(x, _y), ++_y) {\n    }\n  }\n}\nbool H(int x, int y) { return !N(x, y) && (Cx(x, y) >= 3 || Cy(x, y) >= 3); }\nbool C(int x1, int y1, int x2, int y2) {\n  if (N(x1, y1) || N(x2, y2) || abs(x1 - x2) + abs(y1 - y2) != 1) {\n    return 0;\n  }\n  swap(a[x1][y1], a[x2][y2]);\n  bool f = H(x1, y1) || H(x2, y2);\n  swap(a[x1][y1], a[x2][y2]);\n  return f;\n}\nvoid C(int x, int y) {\n  if (N(x, y)) {\n    return;\n  }\n  int ty = a[x][y].second, co = a[x][y].first;\n  sc += co, a[x][y] = {0, 0};\n  if (ty == 1 || ty == 3) {\n    for (int k = 1; k <= m; ++k) {\n      C(x, k);\n    }\n  }\n  if (ty == 2 || ty == 3) {\n    for (int k = 1; k <= n; ++k) {\n      C(k, y);\n    }\n  }\n  if (ty == 6) {\n    for (int i = 1; i <= n; ++i) {\n      for (int j = 1; j <= m; ++j) {\n        if (a[i][j].first == co) {\n          C(i, j);\n        }\n      }\n    }\n  }\n  if (ty == 4 || ty == 5) {\n    int v = ty - 3;\n    for (int i = -v; i <= v; ++i) {\n      for (int j = -v; j <= v; ++j) {\n        if (i || j) {\n          C(x + i, y + j);\n        }\n      }\n    }\n  }\n}\nbool G() {\n  bool f = 0;\n  for (int i = 1; i <= n; ++i) {\n    for (int j = 1; j <= m; ++j) {\n      if (H(i, j)) {\n        G(i, j), f = 1;\n      }\n    }\n  }\n  return f;\n}\nvoid FD() {\n  for (int j = 1; j <= m; ++j) {\n    int k = n;\n    for (int i = n; i >= 1; --i) {\n      if (a[i][j].first) {\n        a[k--][j] = a[i][j];\n      }\n    }\n    for (; k; a[k--][j] = {0, 0}) {\n    }\n  }\n}\nint C(int l[5]) {\n  fill_n(cc + 1, k, 0);\n  for (int i = 0; i < 5; ++i) {\n    ++cc[l[i]];\n  }\n  vector<int> cl[6];\n  for (int i = 0; i < 6; ++i) {\n    cl[i].clear();\n  }\n  for (int i = 1; i <= k; ++i) {\n    if (cc[i]) {\n      cl[cc[i]].push_back(i);\n    }\n  }\n  if (cl[1].size() == 5) {\n    return 50 + cl[1].back();\n  }\n  if (cl[1].size() == 3) {\n    return 100 + cl[2][0] * 2;\n  }\n  if (cl[1].size() == 2) {\n    return 300 + cl[3][0] * 3;\n  }\n  if (cl[2].size() == 2) {\n    return 200 + cl[2][1] * 2 + cl[2][0];\n  }\n  if (cl[2].size() == 1) {\n    return 500 + cl[3][0] * 3 + cl[2][0];\n  }\n  if (cl[4].size() == 1) {\n    return 750 + cl[4][0] * 5;\n  }\n  return 1000 + cl[5][0] * 10;\n}\nint F(int x, int y, int co) {\n  if (!I(x, y) || v[x][y] != co) {\n    return 0;\n  }\n  int c = 1;\n  v[x][y] = 0;\n  for (int k = 0; k < 4; ++k) {\n    c += F(x + kD[k][0], y + kD[k][1], co);\n  }\n  return c;\n}\n\nint main() {\n  ios_base::sync_with_stdio(0), cin.tie(0);\n  cin >> n >> m >> k >> q;\n  for (int i = 1; i <= n; ++i) {\n    for (int j = 1; j <= m; ++j) {\n      cin >> a[i][j].first;\n    }\n  }\n  for (int i = 1; i <= n; ++i) {\n    for (int j = 1; j <= m; ++j) {\n      cin >> a[i][j].second;\n    }\n  }\n  for (int x1, y1, x2, y2; q--;) {\n    cin >> x1 >> y1 >> x2 >> y2;\n    bool f = C(x1, y1, x2, y2);\n    if (!f) {\n      aC = 0;\n      continue;\n    }\n    swap(a[x1][y1], a[x2][y2]);\n    ml[mlc][0] = H(x1, y1) ? a[x1][y1].first : a[x2][y2].first;\n    ml[mlc][1] = H(x2, y2) ? a[x2][y2].first : a[x1][y1].first;\n    if (++mlc == 5) {\n      mlc = 0;\n      int mc = 0;\n      for (int i = 0; i < 32; ++i) {\n        int c[5] = {0};\n        for (int j = 0; j < 5; ++j) {\n          c[j] = ml[j][i >> j & 1];\n        }\n        mc = max(mc, C(c));\n      }\n      ans += mc;\n    }\n    int k = 0;\n    for (; G(); FD()) {\n      ++k, sc = 0;\n      for (int i = 1; i <= n; ++i) {\n        for (int j = 1; j <= m; ++j) {\n          if (v[i][j]) {\n            C(i, j);\n          }\n        }\n      }\n      ans += sc * k;\n      for (int i = 1; i <= n; ++i) {\n        for (int j = 1; j <= m; ++j) {\n          if (v[i][j]) {\n            int vc = F(i, j, v[i][j]);\n            if (vc) {\n              ans += 50 * (vc - 3) * (vc - 3);\n            }\n          }\n        }\n      }\n    }\n    ans += 80 * (k - 1) * (k - 1);\n  }\n  if (aC) {\n    ans += 1000;\n  }\n  aC = 1;\n  for (int i = 1; i <= n; ++i) {\n    for (int j = 1; j <= m; ++j) {\n      aC &= !a[i][j].first;\n    }\n  }\n  if (aC) {\n    ans += 10000;\n  }\n  cout << ans;\n  return 0;\n}\n```\n",
        "postTime": 1678199947,
        "uid": 376161,
        "name": "wsfxk",
        "ccfLevel": 6,
        "title": "P8422 [THUPC2022 \u51b3\u8d5b] \u5fb7\u5dde\u6d88\u6d88\u4e50 \u9898\u89e3"
    }
]