[
    {
        "content": "\u8c8c\u4f3c\u672c\u6765\u7528\u6811\u72b6\u6570\u7ec4\u505a\uff0c\u4f46\u662f\u5f52\u5e76\u4e5f\u80fd\u6c42\u3002\n\n\u9898\u76ee\u770b\u5b8c\u540e\u9996\u5148\u60f3\u5230\u7684\u5e94\u8be5\u662f\u5192\u6ce1\u6392\u5e8f\uff0c\u6bcf\u6b21\u76f4\u63a5\u679a\u4e3e\u4ea4\u6362\u4e24\u4e2a\u76f8\u90bb\u7684\u6570\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u6c42\u89e3\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2)$\u3002\u7531\u4e8e $n\\le10^{5}$\uff0c\u4e0d\u53ef\u884c\u3002\n\n\u8003\u8651\u50cf\u5206\u6cbb\u6c42\u9006\u5e8f\u5bf9\u7684\u60f3\u6cd5\uff0c\u80fd\u5426\u6839\u636e\u4e24\u5757\u7684\u7ed3\u679c\u6c42\u51fa\u6765\u4e00\u4e2a\u5927\u7684\u7ed3\u679c\uff1f\u663e\u7136\u662f\u53ef\u4ee5\u7684\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e3a $l-r+1$\uff0c\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u50cf\u5728\u6c42\u9006\u5e8f\u5bf9\u4e00\u6837\uff0c\u4e00\u8fb9\u5206\u6cbb\uff0c\u4e00\u8fb9\u6c42\u7b54\u6848\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\log n)$\uff0c\u80fd\u591f\u7a33\u7a33\u5730\u8fc7\u3002\n\n\u7531\u4e8e\u7ed3\u8bba\u5f88\u77ed\uff0c\u6211\u5c31\u7ed9\u70b9\u4ee3\u7801\u7406\u89e3\u5427\u3002\n\n```.cpp\nvoid Merge( Point *a , int first , int end ) { //\u5f52\u5e76\u6392\u5e8f\n\tint tmp = first , mid = first + end >> 1 , p = first , q = mid + 1;\n\twhile( p <= mid && q <= end ) \n\t\tif( a[ p ].h > a[ q ].h ) {\n\t\t\ta[ q ].t += mid + 1 - p; //\u8bb0\u5f55\u7b54\u6848\n\t\t\tc[ tmp++ ] = a[ q++ ];\n\t\t}\n\t\telse {\n\t\t\ta[ p ].t += q - 1 - mid; //\u8bb0\u5f55\u7b54\u6848\n\t\t\tc[ tmp++ ] = a[ p++ ];\n\t\t}\n\twhile( q <= end ) c[ tmp++ ] = a[ q++ ];\n\tq--;\n\twhile( p <= mid ) a[ p ].t += q - mid , c[ tmp++ ] = a[ p++ ];\n\tfor( int i = first ; i <= end ; i++ ) a[ i ] = c[ i ];\n}\n\nvoid MergeSort( Point *a , int first , int end ) {//\u5206\u6cbb\u4e3b\u7a0b\u5e8f\n\tif( first == end ) return;\n\tint mid = first + end >> 1;\n\tMergeSort( a , first , mid ) , MergeSort( a , mid + 1 , end );\n\tMerge( a , first , end );\n}\n```\n\n\u96be\u5ea6\u5efa\u8bae\u8bc4\u5b9a\uff1a\u7eff/\u84dd\u3002",
        "postTime": 1666744652,
        "uid": 571841,
        "name": "zzq_666",
        "ccfLevel": 0,
        "title": "\u53d1\u5e03\u9898\u89e3P8613"
    },
    {
        "content": "\u6211\u4eec\u8003\u8651\u6c42\u51fa\u6bcf\u4e2a\u6570\u5b57\u7684\u4ea4\u6362\u6b21\u6570\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6570\u5b57\uff0c\u5b83\u4e00\u5b9a\u4f1a\u548c\u524d\u9762\u6bd4\u5b83\u5927\u7684\u6570\u5b57\u4ea4\u6362\uff0c\u540e\u9762\u6bd4\u5b83\u5c0f\u7684\u6570\u5b57\u4e5f\u4e00\u5b9a\u4f1a\u548c\u5b83\u4ea4\u6362\uff0c\u8fd9\u975e\u5e38\u663e\u7136\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u7528\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\u5206\u522b\u6c42\u51fa\u524d\u9762\u6bd4\u5b83\u5927\u7684\u6570\u5b57\u548c\u540e\u9762\u6bd4\u5b83\u5c0f\u7684\u6570\u5b57\uff0c\u6700\u540e\u7edf\u8ba1\u51fa\u4ea4\u6362\u6b21\u6570\u3002\n\n\u6839\u636e\u9898\u76ee\uff0c\u5047\u8bbe\u4e00\u4e2a\u6570\u5b57\u4ea4\u6362\u4e86 $k$ \u6b21\uff0c\u90a3\u4e48\u5b83\u7684\u4ee3\u4ef7\u5c31\u662f\uff1a\n$$\n1+2+3+...+(k-2)+(k-1)+k\n$$\n\n\u7ed3\u5408\u7b49\u5dee\u6570\u5217\u6c42\u548c\u516c\u5f0f\uff0c\u5f97\uff1a\n\n$$\n\\frac{k(k+1)}2\n$$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nlong long n,a[500005],b[500005],t[500005],cnt[500005],ans;\nmap<long long,int>m;\nlong long lowbit(long long x)\n{\n    return x&(-x);\n}\nlong long getsum(long long x)\n{\n    long long sum=0;\n    while(x)\n    {\n        sum+=t[x];\n        x-=lowbit(x);\n    }\n    return sum;\n}\nvoid update(long long x,long long y)\n{\n    while(x<=500000)\n    {\n        t[x]+=y;\n        x+=lowbit(x);\n    }\n}\nint main()\n{\n    scanf(\"%lld\",&n);\n    for (int i = 1; i <= n; i++)\n    {\n        scanf(\"%lld\",&a[i]);\n        b[i]=a[i];\n    }\n    sort(b+1,b+n+1);\n    for(int i=1;i<=n;i++)\n    {\n        m[b[i]]=i;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        a[i]=m[a[i]];\n    }\n    for (int i = 1; i <= n; i++)\n    {\n        update(a[i]+1,1);//\u6570\u5b57\u53ef\u4ee5\u662f0\uff0c\u6240\u4ee5\u8981\u52a01\n        cnt[i]+=(i-getsum(a[i]+1)); //\u7edf\u8ba1\u524d\u9762\u6bd4\u5b83\u5927\u7684\u6570\u5b57\n    }\n    memset(t,0,sizeof(t));\n    for (int i = n; i >= 1; i--)\n    {\n        update(a[i]+1,1);\n        cnt[i]+=getsum(a[i]); //\u7edf\u8ba1\u540e\u9762\u6bd4\u5b83\u5c0f\u7684\u6570\u5b57\n    }\n    for(int i=1;i<=n;i++)\n    {\n    \tans+=(cnt[i]+1)*cnt[i]/2;//\u7b97\u51fa\u8fd9\u4e2a\u6570\u5b57\u7684\u4ee3\u4ef7\n    }\n    printf(\"%lld\",ans);\n    return 0;\n}\n```\n\nupd\uff1a\u6839\u636e lawrence142 \u7684\u53cd\u9988\uff0c\u539f\u6765\u7684\u201c\u540e\u9762\u6bd4\u5b83\u5927\u201d\u5e94\u8be5\u4e3a\u201c\u540e\u9762\u6bd4\u5b83\u5c0f\u201d\uff0c\u8fdb\u884c\u66f4\u65b0\uff0c\u91cd\u65b0\u63d0\u4ea4\u3002",
        "postTime": 1669612538,
        "uid": 501947,
        "name": "DengDuck",
        "ccfLevel": 6,
        "title": "P8613 \u5c0f\u670b\u53cb\u6392\u961f\u9898\u89e3"
    }
]