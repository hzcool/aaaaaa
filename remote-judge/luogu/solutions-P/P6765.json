[
    {
        "content": "**\u524d\u7f6e\u601d\u60f3\uff1aKruskal \u91cd\u6784\u6811**\n\n\u5728\u8bb2\u89e3\u539f\u9898\u7684\u7b97\u6cd5\u524d\uff0c\u5148\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b Kruskal \u91cd\u6784\u6811\u7684\u601d\u60f3\u3002\u4e00\u4e2a\u7ecf\u5178\u95ee\u9898\uff1a\n\n> \u7ed9\u4e00\u5f20\u65e0\u5411\u56fe $G$\uff0c\u8fb9\u6709\u8fb9\u6743\u3002\u6bcf\u6b21\u8be2\u95ee\u7ed9\u5b9a $x,v$\uff0c\u6c42\u4ece $x$ \u51fa\u53d1\u53ea\u7ecf\u8fc7\u8fb9\u6743 $\\leq v$ \u7684\u8fb9\u80fd\u5230\u8fbe\u591a\u5c11\u4e2a\u70b9\u3002**\u5f3a\u5236\u5728\u7ebf\u3002**\n\n\u4f17\u6240\u5468\u77e5\uff0c\u56fe\u4e0a\u4e24\u70b9\u7684**\u6700\u5c0f\u74f6\u9888\u8def**\uff08\u4e5f\u5c31\u662f\u6700\u5927\u8fb9\u6700\u5c0f\u7684\u8def\uff09\u4e00\u5b9a\u5305\u62ec\u6700\u5c0f\u751f\u6210\u6811\u4e0a\u4e24\u70b9\u7684\u8def\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u628a\u8fb9\u6392\u5e8f\uff0c\u7528 Kruskal \u7b97\u6cd5\u6c42\u51fa\u6700\u5c0f\u751f\u6210\u6811\u3002\u4f46\u8fd9\u6837\u4ecd\u7136\u4e0d\u80fd\u65b9\u4fbf\u5730\u6c42\u51fa\u7b54\u6848\uff0c\u600e\u4e48\u529e\u5462\uff1fKruskal \u91cd\u6784\u6811\u7684\u601d\u60f3\u662f\uff1a\u5728 Kruskal \u7b97\u6cd5\u786e\u5b9a\u4e00\u6761\u6700\u5c0f\u751f\u6210\u6811\u4e0a\u7684\u8fb9 $(x,y)$ \u65f6\uff0c\u4e0d\u76f4\u63a5\u8fde\u63a5 $(x,y)$\uff0c\u800c\u662f\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9 $T$\uff0c\u5206\u522b\u8fde\u63a5 $(T,x),(T,y)$\uff0c\u5c06 $T$ \u7684\u70b9\u6743\u8bbe\u7f6e\u4e3a $x,y$ \u7684\u8fb9\u6743\uff0c\u8fd9\u5c31\u5f62\u6210\u4e86 Kruskal \u91cd\u6784\u6811\u3002\u5bb9\u6613\u53d1\u73b0\u4e00\u4e9b\u6027\u8d28\uff1a\n\n- \u5bf9\u4e8e\u6bcf\u4e2a\u70b9 $x$\uff0c$x$ \u7956\u5148\u4e0a\u7684\u70b9\u6743\u5355\u8c03\u9012\u589e\u3002\n- \u5bf9\u4e8e\u6bcf\u4e2a\u70b9 $x$ \u548c\u6bcf\u4e2a\u9608\u503c $v$\uff0c\u4ece $x$ \u51fa\u53d1\u53ea\u7ecf\u8fc7\u8fb9\u6743 $\\leq v$ \u7684\u8fb9\u80fd\u5230\u8fbe\u7684\u70b9\u7684\u96c6\u5408\uff0c\u548c $x$ \u7956\u5148\u8282\u70b9\u4e2d\u6df1\u5ea6\u6700\u5927\u7684 $\\leq v$ \u7684\u8282\u70b9\u7684\u5b50\u6811\u5185\u7684\u6240\u6709\u539f\u56fe\u8282\u70b9\u7684\u96c6\u5408\u662f\u4e00\u6837\u7684\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u89e3\u51b3\u4e0a\u9762\u7684\u9898\u76ee\u4e86\u3002\n- \u5bf9\u4e8e\u4e24\u70b9 $x,y$\uff0c$x,y$ \u7684\u6700\u5c0f\u74f6\u9888\u8fb9\u6743\uff08\u4e5f\u5c31\u662f\u6700\u5927\u8fb9\u6700\u5c0f\u7684\u8def\u7684\u6700\u5927\u8fb9\u6743\uff09\u7b49\u4e8e $x,y$ \u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\uff08LCA\uff09\u7684\u70b9\u6743\u3002\n\n\u5173\u4e8e\u66f4\u8be6\u7ec6\u7684\u8bb2\u89e3\uff0c\u8bf7\u89c1 [NOI2018 \u5f52\u7a0b](https://www.luogu.com.cn/problem/P4768) \u4e00\u9898\u7684\u9898\u89e3\u3002\n\n---------------\n\n\u5bf9\u4e8e\u672c\u9898\u6765\u8bf4\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u662f\u67e5\u8be2\u4e24\u70b9\u95f4\u7684\u74f6\u9888\u8fb9\uff0c\u6211\u4eec\u5c1d\u8bd5\u8fd0\u7528\u7c7b\u4f3c Kruskal \u91cd\u6784\u6811\u7684\u601d\u60f3\u3002\n\n\u9996\u5148\u5206\u6790\u539f\u9898\u4e2d\u7684\u63cf\u8ff0\uff0c\u53ef\u4ee5\u77e5\u9053\uff1a\u4e24\u70b9 $x,y$ \u80fd\u4e92\u76f8\u6d3e\u51fa\u4f7f\u8005\u8bbf\u95ee\uff0c**\u5f53\u4e14\u4ec5\u5f53\u4e24\u70b9\u8fde\u901a\uff0c\u4e14\u5b83\u4eec\u6240\u5728\u7684\u8fde\u901a\u5757\u4e0d\u662f\u4e00\u6761\u94fe\u3002** \u8bc1\u660e\u8f83\u4e3a\u7b80\u5355\uff0c\u8fde\u901a\u6027\u663e\u7136\u5fc5\u987b\u6ee1\u8db3\uff0c\u800c\u5982\u679c\u8fde\u901a\u5757\u662f\u94fe\u4e5f\u663e\u7136\u65e0\u89e3\uff0c\u5c1d\u8bd5\u4e00\u4e0b\u53d1\u73b0\u53ea\u8981\u6709\u5ea6\u6570 $\\geq 3$ \u7684\u70b9\u6216\u8005\u73af\u90a3\u4e48\u5fc5\u5b9a\u6709\u89e3\u3002\n\n\u5c06\u8fb9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u8fd0\u884c\u548c Kruskal \u7b97\u6cd5\u7c7b\u4f3c\u7684\u8fc7\u7a0b\u3002\u4e0d\u540c\u7684\u662f\uff0c\u6211\u4eec\u4e0d\u4ec5\u8981\u7ef4\u62a4\u8fde\u901a\u6027\uff0c\u8fd8\u8981\u7ef4\u62a4\u4e00\u4e2a\u8fde\u901a\u5757\u7a76\u7adf\u662f\u4e0d\u662f\u94fe\u3002\u53d1\u73b0\u4e00\u6761\u94fe\u7684\u6027\u8d28\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8e\u4e24\u4e2a\u7aef\u70b9\uff0c\u4e8e\u662f\u4e0d\u59a8\u5728\u5e76\u67e5\u96c6\u7684\u6839\u8282\u70b9\u5904\u7ef4\u62a4\u4e24\u4e2a\u6570\u7ec4 $st_i,en_i$\uff0c\u5982\u679c\u8be5\u8fde\u901a\u5757\u662f\u94fe\uff0c\u5219\u5b58\u50a8\u94fe\u7684\u7aef\u70b9\u3002\u5f53\u4e00\u4e2a\u8fde\u901a\u5757\u4ece\u94fe\u53d8\u6210\u975e\u94fe\u65f6\uff0c\u6211\u4eec\u5c31\u5728 Kruskal \u91cd\u6784\u6811\u4e0a\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9\uff0c\u8fd9\u4e2a\u8282\u70b9\u5411\u6240\u6709\u94fe\u4e0a\u7684\u70b9\u8fde\u8fb9\uff1b\u8fde\u901a\u5757\u5408\u5e76\u540c\u7406\u3002\u4e0d\u96be\u53d1\u73b0\u8fd9\u6837\u505a\u4ecd\u7136\u80fd\u4fdd\u8bc1\u539f\u6765 Kruskal \u91cd\u6784\u6811\u7684\u5927\u90e8\u5206\u6027\u8d28\uff0c\u800c\u4e14\u4e5f\u80fd\u7528 LCA \u6765\u5904\u7406\u5728\u7ebf\u8be2\u95ee\u3002\n\n\u7b80\u5355\u6765\u8bf4\uff0c\u6211\u4eec\u626b\u63cf\u6bcf\u6761\u8fb9\uff1a\n\n1. \u5982\u679c\u8fb9\u4e24\u7aef\u5df2\u7ecf\u8fde\u901a\uff1a\u5982\u679c\u8fd9\u4e2a\u8fde\u901a\u5757\u662f\u4e00\u6761\u94fe\uff0c\u90a3\u4e48\u52a0\u4e0a\u8fd9\u6761\u8fb9\u663e\u7136\u4e0d\u518d\u662f\u94fe\u4e86\uff0c\u90a3\u4e48\u6253\u4e0a\u6807\u8bb0\uff0c\u540c\u65f6\u5728 Kruskal \u91cd\u6784\u6811\u4e0a\u8fde\u8fb9\uff1b\u5426\u5219\u6ca1\u6709\u53d8\u5316\u3002\n1. \u5982\u679c\u6ca1\u6709\u8fde\u901a\uff1a\n- \u5982\u679c\u539f\u6765\u4e24\u4e2a\u8fde\u901a\u5757\u6709\u81f3\u5c11\u4e00\u4e2a\u4e0d\u662f\u94fe\uff0c\u90a3\u4e48\u65b0\u8fde\u901a\u5757\u4e5f\u4e00\u5b9a\u4e0d\u662f\u94fe\uff1b\n- \u5982\u679c\u539f\u6765\u4e24\u4e2a\u8fde\u901a\u5757\u90fd\u662f\u94fe\uff0c\u90a3\u4e48\u65b0\u8fde\u901a\u5757\u662f\u4e0d\u662f\u94fe\u53d6\u51b3\u4e8e\u8fde\u8fb9\u662f\u4e0d\u662f\u5728\u7aef\u70b9\u4e4b\u95f4\u8fdb\u884c\u7684\u3002\u4e5f\u53ef\u7b80\u5355\u7ef4\u62a4\u3002\n\n\u6ce8\u610f\u6211\u4eec\u7531\u4e8e\u8981\u7ef4\u62a4\u4e00\u4e2a\u70b9\u6240\u5728\u7684\u8fde\u901a\u5757\uff0c\u4e14\u8981\u652f\u6301\u5408\u5e76\uff0c\u5e94\u91c7\u7528\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u4f7f\u65f6\u95f4\u590d\u6742\u5ea6\u7a33\u5b9a\u5728 $O(n\\log n)$\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O((n+q)\\log n)$\u3002\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff0c\u5176\u4e2d\u5e76\u67e5\u96c6 $B$ \u7528\u6765\u7ef4\u62a4\u8fde\u901a\u6027\uff0c$conn_i$ \u8868\u793a\u5e76\u67e5\u96c6\u91cc\u4ee5 $i$ \u4e3a\u6839\u7684\u8fde\u901a\u5757\u662f\u4e0d\u662f\u8131\u79bb\u94fe\u7684\u5f62\u6001\u4e86\uff0c$tr$ \u8868\u793a Kruskal \u91cd\u6784\u6811\u7684\u8fb9\u3002\n\n```cpp\n#include\"swap.h\"\n\n#include<cstdio>\n#include<vector>\n#include<algorithm>\n\nusing namespace std;\n\nstruct BCJ\n{\n\tint fa[500000];\n\tvoid init(int n){for(int i=0;i<n;i++)fa[i]=i;}\n\tint fnd(int x){return x==fa[x]?x:fa[x]=fnd(fa[x]);}\n}B;\n\nstruct e\n{\n\tint u,v,w;e(int uu=0,int vv=0,int ww=0):u(uu),v(vv),w(ww){}\n};vector<e> ed;\nbool operator<(e a,e b){return a.w<b.w;}\n\nbool conn[500000];int st[500000],en[500000],rt[500000];vector<int> pnt[500000];\n\nvector<int> tr[500000];\n\nint fa[500000][20],dep[500000];\n\nvoid dfs(int u,int f)\n{\n\tfa[u][0]=f;for(int i=1;i<20;i++)fa[u][i]=fa[u][i-1]==-1?-1:fa[fa[u][i-1]][i-1];\n\trt[u]=f==-1?u:rt[f],dep[u]=f==-1?1:dep[f]+1;\n\tfor(int i=0;i<tr[u].size();i++)dfs(tr[u][i],u);\n}\n\nint LCA(int x,int y)\n{\n\tif(rt[x]!=rt[y])return -1;\n\tif(dep[x]<dep[y])swap(x,y);\n\tfor(int i=19;i>=0;i--)\n\t{\n\t\tif(fa[x][i]!=-1&&dep[fa[x][i]]>=dep[y])x=fa[x][i];\n\t}\n\tif(x==y)return x;\n\tfor(int i=19;i>=0;i--)\n\t{\n\t\tif(fa[x][i]!=fa[y][i])x=fa[x][i],y=fa[y][i];\n\t}\n\treturn fa[x][0];\n}\nint n,m;\nvoid init(int N, int M,vector<int> U,vector<int> V,vector<int> W)\n{\n\tn=N,m=M;\n\tfor(int i=0;i<M;i++)ed.push_back(e(U[i],V[i],W[i]));sort(ed.begin(),ed.end());\n\tB.init(N);for(int i=0;i<N;i++)st[i]=en[i]=rt[i]=i,pnt[i].push_back(i);\n\tfor(int i=0;i<M;i++)\n\t{\n\t\tint u=ed[i].u,v=ed[i].v,fu=B.fnd(u),fv=B.fnd(v);\n\t\tif(pnt[fu].size()<pnt[fv].size()){swap(u,v),swap(fu,fv);}\n\t\tif(fu==fv)\n\t\t{\n\t\t\tif(!conn[fu])\n\t\t\t{\n\t\t\t\tconn[fu]=1;\n\t\t\t\tfor(int j=0;j<pnt[fu].size();j++)tr[i+N].push_back(pnt[fu][j]);\n\t\t\t\trt[fu]=i+N;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(conn[fu]||conn[fv])\n\t\t\t{\n\t\t\t\tif(conn[fu])tr[i+N].push_back(rt[fu]);\n\t\t\t\telse for(int j=0;j<pnt[fu].size();j++)tr[i+N].push_back(pnt[fu][j]);\n\t\t\t\tif(conn[fv])tr[i+N].push_back(rt[fv]);\n\t\t\t\telse for(int j=0;j<pnt[fv].size();j++)tr[i+N].push_back(pnt[fv][j]);\n\t\t\t\tconn[fu]=1,rt[fu]=i+N;B.fa[fv]=fu;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif((u==st[fu]||u==en[fu])&&(v==st[fv]||v==en[fv]))\n\t\t\t\t{\n\t\t\t\t\tst[fu]=u^st[fu]^en[fu];en[fu]=v^st[fv]^en[fv];\n\t\t\t\t\tfor(int j=0;j<pnt[fv].size();j++)pnt[fu].push_back(pnt[fv][j]);\n\t\t\t\t\tB.fa[fv]=fu;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tconn[fu]=1;\n\t\t\t\t\tfor(int j=0;j<pnt[fu].size();j++)tr[i+N].push_back(pnt[fu][j]);\n\t\t\t\t\tfor(int j=0;j<pnt[fv].size();j++)tr[i+N].push_back(pnt[fv][j]);\n\t\t\t\t\tB.fa[fv]=fu;rt[fu]=i+N;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n\t/*for(int i=0;i<N+M;i++)\n\t{\n\t\tprintf(\"%d: \",i);\n\t\tfor(int j=0;j<tr[i].size();j++)printf(\"%d \",tr[i][j]);puts(\"\");\n\t}*/\n\tfor(int i=N+M-1;i>=0;i--)\n\t{\n\t\tif(!dep[i])dfs(i,-1);\n\t}\n\t//for(int i=0;i<N+M;i++){printf(\"%d\\n\",dep[i]);for(int j=0;j<4;j++)printf(\"%d \",fa[i][j]);puts(\"\");}\n}\n\nint getMinimumFuelCapacity(int X,int Y)\n{\n\t\n\tint u=LCA(X,Y);if(u==-1)return -1;\n\treturn ed[u-n].w;\n}\n```",
        "postTime": 1597740160,
        "uid": 112794,
        "name": "\u5468\u5b50\u8861",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P6765 \u3010[APIO2020]\u4ea4\u6362\u57ce\u5e02\u3010\u6682\u65e0\u6570\u636e\u3011\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u8bf4\u5b9e\u8bdd\u51fa\u9898\u4eba\u8bbe\u8ba1\u7528\u5fc3\u5f88\u826f\u82e6\u4e86\uff0c\u4f46\u6211\u5c31\u662f\u4e0d\u9886\u60c5\u2026\u2026\n\n\u56e0\u4e3a\u4e00\u79cd\u60c5\u51b5\u6ca1\u8003\u8651\uff0c\u559c\u63d0 $0$ \u5206\u2026\u2026\n\n---\n\n# \u9898\u610f\n__\u5f3a\u5236\u5728\u7ebf__ \u95ee\u8be2\u5c06\u56fe\u4e0a\u4e24\u70b9\u4ea4\u6362\u6240\u8d70\u8fc7\u7684\u8fb9\u4e2d\u6743\u503c\u6700\u5927\u7684\u3002\n\n# \u90e8\u5206\u5206\u6027\u8d28\n\u8fd9\u9053\u9898\u8bbe\u8ba1\u597d\u5c31\u597d\u5728\u90e8\u5206\u5206\u53ef\u4ee5\u5f88\u597d\u5730\u5e2e\u52a9\u60f3\u5230\u6b63\u89e3\u3002\n\n## Subtask1\nSubtask1 \u8bb2\u7684\u5176\u5b9e\u662f\u94fe\u548c\u73af\u7684\u60c5\u51b5\uff0c\u7ed3\u8bba\u663e\u7136\uff1a__\u5982\u679c\u662f\u94fe__\uff0c\u5219 $-1$\uff0c__\u5982\u679c\u662f\u73af__\uff0c\u5219\u8f93\u51fa\u73af\u4e0a\u6700\u5927\u503c\u3002\n\n## Subtask2\nSubtask2 \u662f\u83ca\u82b1\u56fe\uff0c\u7ed3\u8bba\u662f __\u5f53 $n\\ge3$ \u65f6\uff0c\u4e00\u5b9a\u6709\u89e3__\u3002\n\n\u5f53 $x$ \u4e3a\u6839\u65f6\uff0c\u7b54\u6848\u4e3a $w(x,y)$ \u4ee5\u53ca\u8fd9\u6761\u8fb9\u4e4b\u5916\u7684\u5176\u4ed6\u8fb9\u7684\u6b21\u5c0f\u503c\u4e24\u8005\u7684\u6700\u5927\u503c\u3002\n\n\u5f53 $x,y$ \u5747\u4e0d\u4e3a\u6839\uff0c\u8bbe $u$ \u4e3a\u6839\uff0c\u7b54\u6848\u4e3a $w(u,x),w(u,y)$ \u548c\u5176\u4f59\u8fb9\u4e2d\u6700\u5c0f\u503c\u4e09\u8005\u7684\u6700\u5927\u503c\u3002\n\n## Subtask5\nSubtask5 \u662f\u4e00\u68f5\u6811\uff0c\u56e0\u4e3a\u4e0d\u5b58\u5728\u73af\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u6709\u4e09\u5c94\u8def\u5c31\u53ef\u4ee5\u4e86\uff0c\u8003\u8651 $dp$ \u51fa\u5230\u5404\u4e2a\u70b9\u7684\u6700\u5927\u503c\u6700\u5c0f\u4e09\u5c94\u8def\uff0c\u518d\u548c $(x,y)$ \u94fe\u4e0a\u6700\u5927\u503c\u6bd4\u8f83\u5f97\u5230\u6700\u7ec8\u7b54\u6848\u3002\n\n\u60c5\u51b5\u5206\u4e3a\u5b50\u6811\u5185\u548c\u5b50\u6811\u5916\uff1a\n\n__\u5b50\u6811\u5185\uff1a__\n\n\u5b9a\u4e49 $E_u$ \u4e3a\u4ee5 $u$ \u4e3a\u4e00\u4e2a\u7aef\u70b9\u7684\u8fb9\u7684\u96c6\u5408\uff0c$v$ \u4e3a $u$ \u7684\u4e00\u4e2a\u5b69\u5b50\uff0c$v_k$ \u4e3a $E_u$ \u4e2d\u7684\u7b2c $k$ \u5c0f\u503c\uff0c$h_u$ \u4e3a\u5b50\u6811\u5185\u7684\u6700\u5c0f\u4e09\u5c94\u8def\u3002\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a$h_u=\\min(\\min\\limits_v\\{\\max(h_v,w_{(u,v)})\\},v_3\\mid|E_u|\\ge 3)$\n\n__\u5b50\u6811\u5916\uff1a__\n\n\u5b9a\u4e49 $H_u$ \u4e3a\u6574\u4f53\u6700\u5c0f\u4e09\u5c94\u8def\uff0c$p$ \u4e3a $u$ \u7684\u7236\u4eb2\u3002\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a$H_u=\\min(\\max(F_p,w_{(u,p)}),h_u)$\n\n\u5982\u679c\u4e0d\u5b58\u5728\u4e09\u5c94\u8def $H_u=INF$\u3002\n\n\u6700\u7ec8 $H_{lca(x,y)}$ \u5c31\u662f\u6211\u4eec\u8981\u6c42\u7684 $(x,y)$ \u5411\u4e09\u5c94\u8def\u8fdb\u884c\u4ea4\u6362\u7684\u6700\u5927\u503c\u3002\n\n\u6709\u4e9b\u4eba\u53ef\u80fd\u4f1a\u95ee\uff1a\u4e3a\u4ec0\u4e48\u53d6 $v_3$ \u4e00\u5b9a\u662f\u5bf9\u7684\uff1f\n\n\u6211\u4eec\u8003\u8651\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u4e00\u4e2a\u5c94\u8def\u8981\u4e14\u4ec5\u8981\u7528\u5230\u4e09\u6761\u8fb9\u3002\u5bf9\u4e8e\u6700\u597d\u7684\u60c5\u51b5\uff0c\u4f1a\u7528\u5230 $v_1,v_2,v_3$ \u7684\u4e09\u6761\u8fb9\u3002\u4f46\u7531\u4e8e\u8fdb\u5165\u548c\u79bb\u5f00\u5c94\u8def\u7684\u65b9\u5411\u95ee\u9898\uff0c\u5f88\u591a\u65f6\u5019\u4f1a\u7528\u5230\u66f4\u5927\u7684\u8fb9\u3002\n\n\u8003\u8651\u8f6c\u79fb\u65b9\u7a0b\u4e2d $\\max(h_v,w_{(u,v)})$ \u4e00\u53e5\uff0c\u5b9e\u9645\u5c31\u662f\u5c06\u8fdb\u5165\u5b50\u6811\u7684\u8fb9\u540c\u6837\u505a\u4e86\u6b21\u6bd4\u8f83\uff0c\u56e0\u6b64\u5982\u679c\u53ea\u6709\u4e00\u6761\u8fb9\u89c4\u5b9a\u4e86\uff0c\u7b54\u6848\u4ecd\u7136\u662f\u6b63\u786e\u7684\u3002\n\n\u5bf9\u4e8e\u4e24\u6761\u8fb9\u89c4\u5b9a\u7684\u60c5\u51b5\uff0c\u53ea\u53ef\u80fd\u51fa\u73b0\u5728 $(x,y)$ \u94fe\u4e0a\uff0c\u800c\u6211\u4eec\u8ba1\u7b97\u7b54\u6848\u65f6\u4f1a\u548c\u94fe\u4f5c\u6bd4\u8f83\u53d6\u6700\u5927\u503c\uff0c\u56e0\u6b64\u4ecd\u7136\u662f\u6b63\u786e\u7684\u3002\n\n# \u4e3a\u6b63\u89e3\u505a\u51c6\u5907\n\u8003\u8651\u56fe\u4e0a\u4e24\u4e2a\u70b9\u80fd\u4e92\u6362\u7684\u6761\u4ef6\uff1a\u7531 Subtask1\uff0c__\u6709\u73af__\uff1b\u7531 Subtask2\uff0c__\u6709\u4e09\u5c94\u8def__\u3002\uff08\u90fd\u94fa\u57ab\u597d\u4e86\uff09\n\n\u53ef\u4ee5\u8bc1\u660e\u53ea\u8981\u8fd9\u4e24\u79cd\u60c5\u51b5\u51fa\u73b0\u4e00\u79cd\u5c31\u4e00\u5b9a\u53ef\u4ee5\u4e92\u6362\u3002\n\n\u6240\u4ee5\u7b54\u6848\u4e00\u5b9a\u662f\u5728\u70b9 $x,y$ \u80fd\u5230\u8fbe\u7684\u6700\u5927\u503c\u6700\u5c0f\u73af\u3001\u6700\u5927\u503c\u6700\u5c0f\u4e09\u5c94\u8def\u3001$x$ \u5230 $y$ \u7684\u6700\u5c0f\u76f4\u94fe\u4e0a\u4e09\u8005\u4e4b\u4e00\u3002\n\n\u5206\u6790\u6570\u636e\u89c4\u6a21\uff1a$N\\le100000,M,Q\\le200000$\uff0c\u7531\u4e8e\u5728\u7ebf\u95ee\u8be2\uff0c\u6bcf\u6b21\u95ee\u8be2\u590d\u6742\u5ea6\u8981\u5728 $\\log$ \u4ee5\u4e0b\u3002\u8003\u8651\u56fe\u8bba\u4e2d\u7684 $\\log$ \u7ea7\u522b\u7b97\u6cd5\u90fd\u662f\u5728\u6811\u4e0a\u64cd\u4f5c\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u60f3\u89c1\u4e00\u5b9a\u4f1a\u7528\u5230\u751f\u6210\u6811\u3002\n\n\u53c8\u7531\u4e8e\u6211\u4eec\u8981\u6700\u5927\u503c\u6700\u5c0f\uff0c\u4e0d\u96be\u60f3\u5230\u4f7f\u7528\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n# \u6b63\u89e3\n\u6211\u4eec\u5148\u5efa\u4e00\u68f5\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n\u4e3a\u4e86\u4e4b\u540e\u7684\u89e3\u9898\u65b9\u4fbf\uff0c\u6211\u4eec\u5728\u8fde\u8fb9\u65f6\u52a0\u4e00\u4e2a\u4e2d\u7ee7\u8282\u70b9 $x$\uff0c\u5c06 $x$ \u7684\u70b9\u6743\u8bbe\u4e3a $w$\uff0c\u5e76\u8fde\u63a5 $(x,u)$ \u53ca $(x,v)$\u3002\n\n\u6839\u636e\u4e0a\u6587\u7684\u8bb2\u89e3\uff0c\u6211\u4eec\u5206\u4e09\u7c7b\u8ba1\u7b97\uff1a\uff08\u6ce8\uff1a\u4e0b\u6587\u6240\u8c13\u6700\u5c0f\u73af\u3001\u6700\u5c0f\u4e09\u5c94\u8def\u5373\u4ece\u70b9 $u$ \u5411\u73af/\u4e09\u5c94\u8def\u8d70\u8fdb\u884c\u4e00\u6b21\u4ea4\u6362\u7684\u6700\u5c0f\u82b1\u8d39\uff09\n\n## $(x,y)$ \u95f4\u76f4\u94fe\n\u6839\u636e\u6700\u5c0f\u751f\u6210\u6811\u6027\u8d28\uff0c$(x,y)$ \u95f4\u7684\u6700\u5927\u503c\u610f\u4e49\u6700\u5c0f\u8def\u5c31\u662f\u6811\u4e0a\u4e24\u70b9\u95f4\u7684\u7b80\u5355\u8def\u5f84\uff0c\u53ef\u4ee5\u901a\u8fc7\u6811\u4e0a $ST$ \u8868 $O(\\log n)$ \u6c42\u89e3\u3002\n\n## \u6700\u5c0f\u73af\n\u56e0\u4e3a\u6700\u5c0f\u751f\u6210\u6811\u5bf9\u4e8e\u539f\u56fe\u4e2d\u7684\u6bcf\u4e00\u4e2a\u73af\u90fd\u53bb\u6389\u4e86\u73af\u4e0a\u7684\u6700\u5927\u8fb9\uff0c\u6211\u4eec\u53d1\u73b0\u6bcf\u4e00\u6761\u4e0d\u5728\u6811\u4e0a\u7684\u8fb9\u4e00\u5b9a\u5c31\u662f\u539f\u56fe\u4e2d\u4e00\u4e2a\u73af\u7684\u6700\u5927\u503c\u3002\n\n\u53c8\u8003\u8651\u5230\u8d70\u4e0d\u5728\u6811\u4e0a\u7684\u8fb9\u53ea\u4f1a\u4f7f\u7ed3\u679c\u53d8\u5927\uff0c\u56e0\u6b64\u6211\u4eec\u627e\u73af\u65f6\u53ea\u80fd\u6cbf\u7740\u6811\u4e0a\u7684\u8fb9\u8d70\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u6811\u5f62 $DP$\u9884\u8ba1\u7b97\u3002\n\n\u5904\u7406\u548c Subtask5 \u7c7b\u4f3c\uff0c\u60c5\u51b5\u540c\u6837\u5206\u4e3a\u5b50\u6811\u5185\u548c\u5b50\u6811\u5916\u3002\n\n__\u5b50\u6811\u5185\uff1a__\n\n\u5b9a\u4e49 $E_u$ \u4e3a\u4ee5 $u$ \u4e3a\u4e00\u4e2a\u7aef\u70b9\u7684\u8fb9\u7684\u96c6\u5408\uff0c$E_T$ \u4e3a\u5728\u6811\u4e0a\u7684\u8fb9\u96c6\u5408\uff0c$v$ \u4e3a $u$ \u7684\u4e00\u4e2a\u5b50\u8282\u70b9\uff0c$f_u$ \u4e3a\u70b9 $u$ \u53ca\u5b50\u6811\u5185\u53ef\u8fbe\u7684\u6700\u5927\u503c\u610f\u4e49\u4e0b\u6700\u5c0f\u73af\u4e0a\u7684\u6700\u5927\u503c\uff08\u6709\u70b9\u7ed5\uff09\u3002\n\n\u5219\u6709\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a$f_u=\\min(\\min\\limits_v\\{\\max(f_v,w_{(u,v)})\\},\\min\\limits_{e\\in E_u,e\\not\\in E_T}\\{w_e\\})$\n\n\u5373\u5b50\u6811\u5185\u7684\u503c\u8981\u548c\u51fa\u5b50\u6811\u7684\u90a3\u6761\u8fb9\u53d6\u4e2a\u6700\u5927\u503c\uff0c\u4e14\u8fd8\u8981\u548c\u8fde\u63a5\u8be5\u70b9\u7684\u975e\u6811\u4e0a\u7684\u8fb9\u6bd4\u8f83\u3002\n\n__\u5b50\u6811\u5916\uff1a__\n\n\u5b9a\u4e49 $F_u$ \u4e3a $u$ \u53ef\u8fbe\u7684\u6700\u5927\u503c\u610f\u4e49\u4e0b\u6700\u5c0f\u73af\u4e0a\u7684\u6700\u5927\u503c\uff0c$p$ \u4e3a $u$ \u7684\u7236\u4eb2\u3002\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a$F_u$ = $\\min(\\max(F_p,w_{(u,p)}),f_u)$\n\n\u5982\u679c $f_p$ \u4ece $u$ \u8f6c\u79fb\u5f97\u5230\uff0c\u5219\u5c06\u5b50\u6811\u5185\u540c\u6837\u8ba1\u7b97\u4e86\u4e0a\u53bb\u3002\n\n\u540c\u6837\u6ce8\u610f\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u73af $F_u=INF$\u3002\n\n\u6700\u7ec8 $F_{lca(x,y)}$ \u5c31\u662f\u6211\u4eec\u8981\u6c42\u7684 $(x,y)$ \u5411\u6700\u5c0f\u73af\u8fdb\u884c\u4ea4\u6362\u7684\u6700\u5927\u503c\u3002\n\n## \u6700\u5c0f\u4e09\u5c94\u8def\n\u8fd9\u79cd\u60c5\u51b5\u53ef\u4ee5\u76f4\u63a5\u91c7\u7528 Subtask5 \u7684\u5904\u7406\u3002\n\n## \u6700\u7ec8\u7b54\u6848\n$ans_{(x,y)}=\\max(st(x,y),\\min(F_{lca(x,y)},H_{lca(x,y)}))$\n\n\u6ce8\u610f\u5982\u679c $ans=INF$\uff0c\u8f93\u51fa $-1$\u3002\n\n\u590d\u6742\u5ea6\uff1a$O((n+m)\\log n)$\uff08\u9884\u5904\u7406\uff09\uff0c$O(Q\\log n)$\uff08\u8ba1\u7b97\u7b54\u6848\uff09\n\n## \u4ee3\u7801\n\uff08\u4ee3\u7801\u7ec6\u8282\u8f83\u591a\uff0c\u8bf7\u7ed3\u5408\u6587\u7ae0\u4eab\u7528\uff09\n```cpp\n#include \"swap.h\"\n\n#include <bits/stdc++.h>\nusing namespace std;\n#define INF 1000000005\n#define NMAX 100005\n#define MMAX 200005\n#define LOGNMAX 20\n\nstd::vector<int> U,V,W;\nint n,m,val[2*NMAX][3];\n\n//////\u524d\u5411\u661f\uff0c\u524d\u4e09\u5c0f\u503c\nint hd[2*NMAX],t,deg[2*NMAX];\n\nstruct edge{\n  int u,v,w;\n  bool isTree;//\u8fb9\u662f\u5426\u5728\u6811\u4e0a\n  int nxt;\n} es[4*MMAX];\n\ninline void add_edge(int u,int v,int w,bool isTree){\n  es[++t]=(edge){u,v,w,isTree,hd[u]};\n  hd[u]=t;\n\n  // \u540c\u65f6\u8ba1\u7b97\u524d\u4e09\u5c0f\u503c\n  if(val[u][0]==0||w<val[u][0])val[u][2]=val[u][1],val[u][1]=val[u][0],val[u][0]=w;\n  else if(val[u][1]==0||w<val[u][1])val[u][2]=val[u][1],val[u][1]=w;\n  else if(val[u][2]==0||w<val[u][2])val[u][2]=w;\n}\n//////\n\n//////\u5efa\u6811\uff0c\u500d\u589e\uff0c\u6811\u4e0ast\u8868\nint idx;//\u65b0\u589e\u8282\u70b9\u6570\nint p[2*NMAX][LOGNMAX],st[2*NMAX][LOGNMAX],d[2*NMAX];\n\nvoid buildTree(int u,int fa){\n  p[u][0]=fa;\n  if(fa>=0)d[u]=d[fa]+1;else d[u]=1;//\u6ce8\u610f\u6b64\u5904\u7279\u5224\u6839\u8282\u70b9\n\n  for(int i=hd[u];i;i=es[i].nxt){\n    if(!es[i].isTree||es[i].v==fa)continue;\n    buildTree(es[i].v,u);\n  }\n}\n\nvoid doublep(){//\u5efa\u7acb\u500d\u589e\u5173\u7cfb\n  for(int i=1;i<LOGNMAX;i++){\n    for(int j=0;j<n+idx;j++){\n      if(p[j][i-1]>=0){\n        p[j][i]=p[p[j][i-1]][i-1];\n        st[j][i]=max(st[j][i-1],st[p[j][i-1]][i-1]);\n      }\n      else p[j][i]=-1,st[j][i]=st[j][i-1];//\u4e8b\u5b9e\u4e0a\u6b64\u5904\u4e0d\u7ba1\u5982\u4f55\u8d4b\u503cst\u90fd\u6ca1\u6709\u592a\u591a\u610f\u4e49\n    }\n  }\n}\n\ninline int lca(int u,int v){\n  if(d[u]<d[v])swap(u,v);\n  for(int i=LOGNMAX-1;i>=0;i--){\n    if(p[u][i]>=0&&d[p[u][i]]>=d[v])u=p[u][i];\n  }\n  if(u==v)return v;\n  for(int i=LOGNMAX-1;i>=0;i--){\n    if(p[u][i]!=p[v][i])u=p[u][i],v=p[v][i];\n  }\n  return p[u][0];\n}\n\ninline int ST(int u,int v){\n  int res=0;\n  //\u7167\u642clca\n  if(d[u]<d[v])swap(u,v);\n  for(int i=LOGNMAX-1;i>=0;i--){\n    if(p[u][i]>=0&&d[p[u][i]]>=d[v])res=max(res,st[u][i]),u=p[u][i];\n  }\n  if(u==v)return max(res,st[u][0]);\n  for(int i=LOGNMAX-1;i>=0;i--){\n    if(p[u][i]!=p[v][i])res=max(res,max(st[u][i],st[v][i])),u=p[u][i],v=p[v][i];\n  }\n  return max(max(res,st[p[u][0]][0]),max(st[u][0],st[v][0]));\n}\n//////\n\n////// Kruscal\nint id[MMAX],bel[2*NMAX];\n\nbool cmp(const int &a,const int &b){\n  return W[a]<W[b];\n}\n\nint find(int u){\n  return u==bel[u]?u:bel[u]=find(bel[u]);\n}\n\nvoid unite(int u,int v){\n  int fu=find(u),fv=find(v);\n  if(fu!=fv)bel[fu]=fv;\n}\n\nvoid kruscal(){\n  for(int i=0;i<m;i++)id[i]=i;\n  for(int i=0;i<2*n;i++)bel[i]=i;\n  sort(id,id+m,cmp);//\u5bf9\u8fb9\u6392\u5e8f\n  for(int i=0;i<m;i++){\n    if(find(U[id[i]])!=find(V[id[i]])){\n      unite(U[id[i]],V[id[i]]);\n      add_edge(U[id[i]],n+idx,W[id[i]],true);//\u65b0\u5efa\u4e00\u4e2a\u70b9\u8fde\u8fb9\n      add_edge(n+idx,U[id[i]],W[id[i]],true);\n      add_edge(V[id[i]],n+idx,W[id[i]],true);\n      add_edge(n+idx,V[id[i]],W[id[i]],true);\n      st[n+idx][0]=W[id[i]];\n      idx++;\n    }\n    else{\n      add_edge(U[id[i]],V[id[i]],W[id[i]],false);\n      add_edge(V[id[i]],U[id[i]],W[id[i]],false);\n    }\n    \n    //\u7d2f\u52a0\u5ea6\u6570\n    deg[V[id[i]]]++;\n    deg[U[id[i]]]++;\n  }\n}\n//////\n\n////// h,f,H,F\uff08\u5c3d\u7ba1h,f\u8ba1\u7b97\u53ef\u4ee5\u5408\u5e76\u5728\u5efa\u6811\u4e2d\uff0c\u4f46\u5206\u5f00\u6765\u8ba1\u7b97\u66f4\u6613\u4e8e\u7ba1\u7406\uff09\nint h[2*NMAX],f[2*NMAX],H[2*NMAX],F[2*NMAX];\nvoid dfs_fh(int u){\n  f[u]=INF;\n  h[u]=val[u][2]?val[u][2]:INF;\n  int v;\n  for(int i=hd[u];i;i=es[i].nxt){\n    if(es[i].v==p[u][0])continue;\n    v=es[i].v;\n    if(es[i].isTree){\n      dfs_fh(v);\n      f[u]=min(f[u],max(f[v],es[i].w));\n      h[u]=min(h[u],max(h[v],es[i].w));\n    }\n    else{\n      f[u]=min(f[u],es[i].w);\n    }\n  }\n}\n\nvoid dfs_FH(int u,int w){\n  F[u]=f[u],H[u]=h[u];\n  if(p[u][0]>=0){\n    F[u]=min(F[u],max(w,F[p[u][0]]));\n    H[u]=min(H[u],max(w,H[p[u][0]]));\n  }\n  int v;\n  for(int i=hd[u];i;i=es[i].nxt){\n    if(es[i].v==p[u][0])continue;\n    v=es[i].v;\n    if(es[i].isTree){\n      dfs_FH(v,es[i].w);\n    }\n  }\n}\n//////\n\n\nvoid init(int N, int M,\n  std::vector<int> U, std::vector<int> V, std::vector<int> W) {\n  n=N,m=M;\n  ::U=U,::V=V,::W=W;//\u5168\u5c40\u53d8\u91cf\u5f15\u7528\n\n  kruscal();\n\n  buildTree(0,-1);\n  doublep();\n\n  dfs_fh(0);\n  dfs_FH(0,0);\n}\n\nint getMinimumFuelCapacity(int X, int Y) {\n  int lxy=lca(X,Y);\n  int ans=max(ST(X,Y),min(F[lxy],H[lxy]));\n  if(ans==INF)return -1;\n  return ans;\n}\n\n```\n",
        "postTime": 1597810517,
        "uid": 156377,
        "name": "LAWArthur",
        "ccfLevel": 6,
        "title": "P6765 [APIO2020]\u4ea4\u6362\u57ce\u5e02 \u9898\u89e3"
    },
    {
        "content": "## Subtask 1\n\n\u300c\u6bcf\u4e2a\u57ce\u5e02\u81f3\u591a\u662f\u4e24\u6761\u9053\u8def\u7684\u4e00\u4e2a\u7aef\u70b9\u300d\u8bf4\u660e\u53ea\u5b58\u5728\u4e24\u79cd\u60c5\u51b5\uff1a\u4e00\u662f\u6574\u5f20\u56fe\u6784\u6210\u4e00\u6761\u94fe\uff0c\u8fd9\u65f6\u7b54\u6848\u663e\u7136\u59cb\u7ec8\u4e3a $-1$\uff1b\u4e8c\u662f\u6574\u5f20\u56fe\u6784\u6210\u4e00\u4e2a\u73af\uff0c\u8fd9\u65f6\u7b54\u6848\u663e\u7136\u4e3a $\\max W$\uff0c\u56e0\u4e3a\u552f\u4e00\u53ef\u80fd\u7684\u9519\u8f66\u65b9\u6cd5\u5c31\u662f\u4e24\u8f86\u8f66\u5206\u522b\u4ece\u4e24\u8fb9\u8d70\uff0c\u90a3\u6b63\u597d\u904d\u5386\u4e86\u56fe\u4e0a\u7684\u6bcf\u4e00\u6761\u8fb9\uff0c\u7b54\u6848\u4e3a\u5168\u5c40\u6700\u5927\u503c\u3002\n\n## Subtask 2\n\n\u83ca\u82b1\u56fe\u7684\u5904\u7406\u65b9\u6cd5\u4e5f\u5f88\u7b80\u5355\uff0c\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff1a\n\n\u4e00\u662f $X = 0, Y \\ne 0$ \uff0c\u90a3\u4e48\u7b54\u6848\u4e3a**\u8fde\u63a5 $(0, Y)$ \u7684\u8fb9**\u4ee5\u53ca\u5176\u4ed6\u8fb9\u4e2d**\u6700\u5c0f**\u7684\u548c**\u6b21\u5c0f**\u7684\u8fd9\u4e09\u8fb9\u7684 $\\max$\uff08\u56fe\u5de6\uff09\u3002\n\n\u4e8c\u662f $X \\ne 0, Y \\ne 0$\uff0c\u90a3\u4e48\u7b54\u6848\u4e3a**\u8fde\u63a5 $(0, X)$ \u7684\u8fb9**\uff0c**\u8fde\u63a5 $(0, Y)$ \u7684\u8fb9**\uff0c\u4ee5\u53ca\u5176\u4ed6\u8fb9\u4e2d**\u6700\u5c0f**\u7684\u8fd9\u4e09\u8fb9\u7684 $\\max$\uff08\u56fe\u53f3\uff09\u3002\n\n![image.png](https://i.loli.net/2020/09/08/rNBta59sLmdMgA1.png)\n\n## Subtask 3\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u7c7b\u4f3c Dijkstra \u7684\u7b97\u6cd5\u6765\u5c1d\u8bd5\u89e3\u51b3\u8fd9\u4e2a\u90e8\u5206\u5206\u3002\n\n\u7528 $cost_{A, B}$ \u6765\u8868\u793a\u6709\u4e24\u8f86\u8f66\u5206\u522b\u662f $X \\to A, Y \\to B$ \u65f6\u6240\u9700\u8981\u7684\u6700\u5c0f\u8fb9\u6743\u3002\u521d\u59cb\u9664\u4e86 $cost_{X, Y} \\gets 0$ \u5916\u5176\u4ed6\u5747\u4e3a $+\\infty$\u3002\u663e\u7136\u7b54\u6848\u4e3a $cost_{Y, X}$\u3002\n\n\u6bd4\u5982\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u6709 $cost_{A, B}$ \u7684\u503c\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u628a\u4f4d\u4e8e $A$ \u7684\u8f66\u79fb\u52a8\u5230\u4e00\u4e2a\u76f8\u90bb\u7684\u70b9 $C$ ($C \\ne B$)\uff0c\u8fd9\u6761\u8fde\u63a5 $(A, C)$ \u7684\u8fb9\u8fb9\u6743\u4e3a $D$\u3002\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u66f4\u65b0 $cost_{C, B} \\gets \\min(cost_{C, B}, \\max(cost_{A, B}, D))$\u3002\u540c\u6837\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u628a\u4f4d\u4e8e $B$ \u7684\u8f66\u79fb\u52a8\u5230\u4e00\u4e2a\u76f8\u90bb\u7684\u70b9\uff0c\u5168\u90e8\u66f4\u65b0\u7ed3\u675f\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(Q \\times N \\times (N+M) \\times \\log (N^2))$\u3002\n\n## Subtask 4\n\n\u56de\u60f3 Subtask 1, 2\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\uff0c\u4e24\u4e2a\u57ce\u5e02\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\u5f53\u4e14\u4ec5\u5f53\u4e0b\u9762\u4e24\u4e2a\u6761\u4ef6**\u4e4b\u4e00**\u6210\u7acb\uff1a\n\n* \u6784\u6210\u73af\uff1b\n* \u67d0\u7ed3\u70b9\u5ea6\u6570 $\\ge 3$\u3002\n\n\u603b\u7ed3\u4e00\u4e0b\uff0c\u5c31\u662f**\u6240\u5728\u8fde\u901a\u5757\u4e0d\u4e3a\u94fe**\u5373\u53ef\u3002\n\n\u7531\u4e8e\u672c\u9898\u6c42\u7684\u662f\u74f6\u9888\u8fb9\uff0c\u8003\u8651\u5229\u7528 Kruskal \u7b97\u6cd5\u6c42\u6700\u5c0f\u751f\u6210\u6811\u7684\u8fc7\u7a0b\u3002\n\n\u6211\u4eec\u6309\u7167 $W$ \u4ece\u4f4e\u5230\u9ad8\u63d2\u5165\u6bcf\u6761\u8fb9\uff0c\u52a8\u6001\u7ef4\u62a4\u4e00\u4e2a $\\text{nch}_u$ (**n**ot a **ch**ain) \u8868\u793a\u4ee5 $u$ \u4e3a\u4ee3\u8868\u5143\u7684\u8fde\u901a\u5757\u662f\u5426\u8131\u79bb\u7684\u94fe\u7684\u5f62\u6001\u3002\u4e0b\u9762\u8bb0 $\\operatorname{Find}(u)$ \u8868\u793a\u5bfb\u627e\u5305\u542b $u$ \u7684\u8fde\u901a\u5757\u7684\u4ee3\u8868\u5143\uff0c\u4e5f\u5c31\u662f\u5e76\u67e5\u96c6\u7684\u627e\u7236\u4eb2\u64cd\u4f5c\u3002\n\n\u5f53\u6211\u4eec\u63d2\u5165\u67d0\u4e00\u6761\u8fb9\u540e $\\operatorname{Find}(X) = \\operatorname{Find}(Y) = Z$\uff08$X, Y$ \u8fde\u901a\uff09\u4e14 $\\text{nch}_Z = 1$\uff08\u8be5\u8fde\u901a\u5757\u8131\u79bb\u94fe\u7684\u5f62\u6001\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u505c\u6b62\u64cd\u4f5c\uff0c\u7b54\u6848\u5373\u4e3a\u8fd9\u6761\u8fb9\u7684\u8fb9\u6743\u3002\n\n\u95ee\u9898\u5728\u4e8e $\\text{nch}_u$ \u600e\u4e48\u7ef4\u62a4\u3002\u6bd4\u5982\u73b0\u5728\u63d2\u5165\u7684\u8fb9\u662f $(A, B)$\uff0c\u9996\u5148 $deg_A \\gets deg_A + 1, deg_B \\gets deg_B + 1$\uff0c\u90a3\u4e48 $\\text{nch}_u = 1$ \u5f53\u4e14\u4ec5\u5f53\u4e0b\u9762\u4e94\u8005\u6709\u4e00\u4e2a\u6210\u7acb\uff1a\n\n* $\\text{nch}_{\\operatorname{Find}(A)} = 1$\uff1b\n* $\\text{nch}_{\\operatorname{Find}(B)} = 1$\uff1b\n* $deg_A \\ge 3$\uff1b\n* $deg_B \\ge 3$\uff1b\n* $\\operatorname{Find}(A) = \\operatorname{Find}(B)$\uff08\u539f\u672c\u5df2\u7ecf\u8fde\u901a\u4e86\uff0c\u518d\u52a0\u4e00\u6761\u5c31\u6784\u6210\u73af\uff09\u3002\n\n\u5982\u679c\u6240\u6709\u8fb9\u90fd\u63d2\u5165\u4e86\u7ec8\u6b62\u6761\u4ef6\u8fd8\u662f\u4e0d\u6ee1\u8db3\uff0c\u7b54\u6848\u4e3a $-1$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(M \\log M + Q \\times M \\times \\alpha(N))$\u3002\n\n## subtask 5\n\n\u56fe\u7684\u5f62\u6001\u662f\u4e00\u68f5\u6811\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4e0d\u7528\u8003\u8651\u6784\u6210\u73af\u7684\u60c5\u51b5\u4e86\u3002\n\n\u7528 $cost_u$ \u8868\u793a\u4ece $u$ \u51fa\u53d1\uff0c\u627e\u5230\u4e00\u4e2a\u53ef\u4ee5\u9519\u8f66\u7684\u4e09\u53c9\u8def\u53e3\uff0c\u8d70\u8fc7\u7684\u6700\u5927\u8fb9\u6743\u6700\u5c0f\u662f\u591a\u5c11\u3002\u521d\u59cb\u65f6\uff0c\u5982\u679c $deg_x \\ge 3$\uff0c\u5219 $cost_x = $ \u548c $x$ \u8fde\u63a5\u7684\u7b2c\u4e09\u5c0f\u7684\u8fb9\u6743\uff1b\u5426\u5219 $cost_x = \\infty$\u3002\n\n\u5982\u679c\u6709\u4e00\u6761\u8fb9\u8fde\u63a5\u4e86 $(A, B)$\uff0c\u8fb9\u6743\u4e3a $C$\uff0c\u90a3\u4e48\u53ef\u4ee5\u5f97\u5230 DP \u5f0f\u5b50 $ cost_A \\gets \\min(cost_A, \\max(cost_B, C)), cost_B \\gets \\min(cost_B, \\max(cost_A, C)) $\u3002DP \u7684\u987a\u5e8f\u5f88\u5957\u8def\uff0c\u53ef\u4ee5\u4ece\u53f6\u5b50\u7ed3\u70b9\u4e00\u8def\u4e0a\u4f20\u5230\u6839\uff0c\u518d\u4ece\u6839\u4f20\u64ad\u5230\u5404\u4e2a\u5b50\u8282\u70b9\u3002\n\n\u6700\u7ec8\uff0c\u7b54\u6848\u5c31\u662f $\\max(X \\to Y$ \u8def\u5f84\u4e0a\u7684\u6700\u5927\u8fb9\u6743$, cost_X)$\u3002\u524d\u9762\u90a3\u90e8\u5206\u53ef\u4ee5\u76f4\u63a5\u500d\u589e\u7ef4\u62a4\u4e00\u4e0b\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(N \\log N + Q \\log N)$\u3002\n\n## subtask 6\n\nSubtask 4 \u7684\u505a\u6cd5\u662f\u6bd4\u8f83\u9760\u8c31\u7684\uff0c\u53ef\u60dc\u5b83\u9700\u8981\u6bcf\u6b21\u8be2\u95ee\u90fd\u505a\u4e00\u6b21 Kruskal\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528 **Kruskal \u91cd\u6784\u6811**\u7684\u601d\u8def\u3002\n\n\u666e\u901a\u7684 Kruskal \u91cd\u6784\u6811\u53ef\u4ee5\u56de\u7b54 $X, Y$ \u8fde\u901a\u4e4b\u540e\u7684\u74f6\u9888\u8fb9\u6743\uff0c\u73b0\u5728\u6211\u4eec\u4e0d\u662f\u60f3\u8981 $X, Y$ \u7b80\u5355\u8fde\u901a\uff0c\u800c\u662f**\u4e0d\u5448\u73b0\u94fe\u72b6\u8fde\u901a**\u3002\u53ef\u4ee5\u6539\u9020\u4e00\u4e0b Kruskal \u91cd\u6784\u6811\uff0c\u4f7f\u5f97\u5b83\u6210\u4e3a\u4e00\u68f5\u591a\u53c9\u6811\uff0c\u4f46\u4f9d\u7136\u6ee1\u8db3 $\\operatorname{LCA}(X, Y)$ \u7684\u6743\u503c\u5c31\u662f\u7b54\u6848\u3002\n\n\u6240\u4ee5\uff0c\u5728 $\\text{nch}_u = 1$ \u4e4b\u524d\uff0c\u7528\u4e00\u4e2a\u6570\u7ec4 $\\text{pnt}_u$ \u6765\u8868\u793a $u$ \u6240\u5728\u8fde\u901a\u5757\u5185\u70b9\u7684\u7f16\u53f7\uff0c\u800c\u5728 $\\text{nch}_u = 1$ \u4e4b\u540e\uff0c\u628a $\\text{pnt}_u$ \u5f53\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u8fde\u5230\u7236\u7ed3\u70b9\u4e0a\u3002$\\text{pnt}$ \u53ef\u4ee5\u901a\u8fc7\u542f\u53d1\u5f0f\u5408\u5e76\u6765\u4fdd\u8bc1\u590d\u6742\u5ea6\u3002\uff08\u611f\u8c22[\u8fd9\u7bc7\u9898\u89e3](https://www.luogu.com.cn/blog/zhouziheng666/solution-p6765)\u7684\u4f18\u79c0\u601d\u8def\uff09\n\n\u6bd4\u5982\u73b0\u5728\u52a0\u5165\u4e00\u6761\u8fb9 $(A, B)$\uff0c\u5206\u5982\u4e0b\u60c5\u51b5\uff1a\n\n* \u5982\u679c\u4e4b\u524d $A, B$ \u5df2\u7ecf\u8fde\u901a\u4e14\u662f\u94fe\uff0c\u90a3\u4e48\u52a0\u4e0a\u8fd9\u6761\u8fb9\u5c31\u4e0d\u518d\u662f\u94fe\u4e86\uff0c\u6253\u4e0a\u6807\u8bb0\uff0c\u540c\u65f6\u5728 Kruskal \u91cd\u6784\u6811\u4e0a\u8fde\u8fb9\uff1b\n* \u5982\u679c\u539f\u6765 $A, B$ \u4e24\u4e2a\u8fde\u901a\u5757\u6709\u81f3\u5c11\u4e00\u4e2a\u4e0d\u662f\u94fe\uff0c\u90a3\u4e48\u65b0\u8fde\u901a\u5757\u4e5f\u4e00\u5b9a\u4e0d\u662f\u94fe\uff0c\u6253\u4e0a\u6807\u8bb0\uff0c\u540c\u65f6\u5728 Kruskal \u91cd\u6784\u6811\u4e0a\u8fde\u8fb9\uff1b\n* \u5982\u679c\u539f\u6765 $A, B$ \u4e24\u4e2a\u8fde\u901a\u5757\u90fd\u662f\u94fe\uff0c\u90a3\u4e48\u65b0\u8fde\u901a\u5757\u662f\u4e0d\u662f\u94fe\u53d6\u51b3\u4e8e\u8fde\u8fb9\u662f\u4e0d\u662f\u5728\u7aef\u70b9\u4e4b\u95f4\u8fdb\u884c\u7684\u3002\u53ef\u4ee5\u7ef4\u62a4 $s_u$ \u548c $t_u$ \u8868\u793a $u$ \u4e3a\u4ee3\u8868\u5143\u7684\u94fe\u7684\u7aef\u70b9\uff0c\u90a3\u4e48\u8fd9\u91cc\u5c31\u5f88\u597d\u5224\u65ad\uff1a\n   * \u5982\u679c\u4e0d\u662f\u5728\u7aef\u70b9\u8fdb\u884c\u7684\uff0c\u90a3\u4e48\u52a0\u4e0a\u8fd9\u6761\u8fb9\u5c31\u4e0d\u518d\u662f\u94fe\u4e86\uff0c\u6253\u4e0a\u6807\u8bb0\uff0c\u540c\u65f6\u5728 Kruskal \u91cd\u6784\u6811\u4e0a\u8fde\u8fb9\uff1b\n   * \u5982\u679c\u662f\u5728\u7aef\u70b9\u8fdb\u884c\u7684\uff0c\u90a3\u4e48\u52a0\u4e0a\u8fd9\u6761\u8fb9\u4f9d\u7136\u662f\u94fe\uff0c\u66f4\u65b0 $s$ \u548c $t$\uff0c\u540c\u65f6\u5408\u5e76 $\\text{pnt}$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(N \\log N + Q \\log N)$\u3002\n\n\u4ee3\u7801\u4e2d\u7ed3\u70b9\u7f16\u53f7\u4ece $1$ \u5f00\u59cb\u3002\n\n```cpp\n#include \"swap.h\"\n#include <cassert>\n#include <cstdio>\n#include <algorithm>\n#include <string>\n#include <vector>\nusing namespace std; \nconst int MAXN = 500005;\nint n, m, cnt, f[20][MAXN], dep[MAXN], s[MAXN], t[MAXN], rt[MAXN];\nvector<int> pnt[MAXN], tr[MAXN];\nbool nch[MAXN];\nstruct disjoint_sets_union\n{\n\tint fa[MAXN];\n\tvoid init() { for(int i = 1; i <= n; i++) fa[i] = i; }\n\tint find(int u) { return fa[u] == u ? u : fa[u] = find(fa[u]); }\n} dsu;\nstruct edge\n{\n\tint u, v, w;\n\tbool operator < (const edge &oth) const { return w < oth.w; }\n} e[MAXN];\n\nvoid DFS(int u, int fa)\n{\n\tdep[u] = dep[fa] + 1;\n\trt[u] = fa ? rt[fa] : u;\n\tf[0][u] = fa;\n\tfor(int k = 1; k <= 19; k++) f[k][u] = f[k - 1][f[k - 1][u]];\n\tfor(int v : tr[u]) DFS(v, u);\n}\n\nint LCA(int u, int v)\n{\n\tif(rt[u] != rt[v]) return -1;\n\tif(dep[u] < dep[v]) swap(u, v);\n\tfor(int k = 19; ~k; k--)\n\t{\n\t\tif(dep[f[k][u]] < dep[v]) continue;\n\t\tu = f[k][u];\n\t}\n\tif(u == v) return u;\n\tfor(int k = 19; ~k; k--)\n\t{\n\t\tif(f[k][u] == f[k][v]) continue;\n\t\tu = f[k][u]; v = f[k][v];\n\t}\n\treturn f[0][u];\n}\n\nvoid init(int N, int M, vector<int> U, vector<int> V, vector<int> W) \n{\n\tn = N; m = M;\n\tfor(int i = 0; i < m; i++) e[++cnt] = (edge){U[i] + 1, V[i] + 1, W[i]};\n\tsort(e + 1, e + m + 1);\n\tdsu.init();\n\tfor(int i = 1; i <= n; i++) { s[i] = t[i] = rt[i] = i; pnt[i].push_back(i); }\n\tfor(int i = 1; i <= m; i++)\n\t{\n\t\tint u = e[i].u, v = e[i].v;\n\t\tint fau = dsu.find(u), fav = dsu.find(v);\n\t\tif(pnt[fau].size() < pnt[fav].size()) { swap(u, v); swap(fau, fav); }\n\t\tint cur = i + n;\n\t\tif(fau == fav)\n\t\t{\n\t\t\tif(!nch[fau])\n\t\t\t{\n\t\t\t\tnch[fau] = true;\n\t\t\t\tfor(int k : pnt[fau]) tr[cur].push_back(k);\n\t\t\t\tpnt[fau].clear();\n\t\t\t\trt[fau] = cur;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(nch[fau] || nch[fav])\n\t\t\t{\n\t\t\t\tif(nch[fau]) tr[cur].push_back(rt[fau]);\n\t\t\t\telse for(int k : pnt[fau]) tr[cur].push_back(k);\n\t\t\t\tif(nch[fav]) tr[cur].push_back(rt[fav]);\n\t\t\t\telse for(int k : pnt[fav]) tr[cur].push_back(k);\n\t\t\t\tpnt[fau].clear(); pnt[fav].clear();\n\t\t\t\tnch[fau] = true;\n\t\t\t\trt[fau] = cur;\n\t\t\t\tdsu.fa[fav] = fau;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif((u == s[fau] || u == t[fau]) && (v == s[fav] || v == t[fav]))\n\t\t\t\t{\n\t\t\t\t\ts[fau] = u ^ s[fau] ^ t[fau]; t[fau] = v ^ s[fav] ^ t[fav];\n\t\t\t\t\tfor(int k : pnt[fav]) pnt[fau].push_back(k);\n\t\t\t\t\tpnt[fav].clear();\n\t\t\t\t\tdsu.fa[fav] = fau;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnch[fau] = true;\n\t\t\t\t\tfor(int k : pnt[fau]) tr[cur].push_back(k);\n\t\t\t\t\tfor(int k : pnt[fav]) tr[cur].push_back(k);\n\t\t\t\t\tpnt[fau].clear(); pnt[fav].clear();\n\t\t\t\t\trt[fau] = cur;\n\t\t\t\t\tdsu.fa[fav] = fau;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = n + m; i; i--)\n\t\tif(!dep[i]) DFS(i, 0);\n}\n\nint getMinimumFuelCapacity(int X, int Y)\n{\n\tint a = LCA(X + 1, Y + 1);\n\tif(a == -1) return -1;\n\treturn e[a - n].w;\n}\n```",
        "postTime": 1599665668,
        "uid": 51971,
        "name": "syksykCCC",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6765 \u3010[APIO2020]\u4ea4\u6362\u57ce\u5e02\u3011"
    },
    {
        "content": "# \u9898\u610f\n\n[\u9898\u76ee](https://www.luogu.com.cn/problem/P6765)\n\n# \u5199\u5728\u524d\u9762\n\n\u672c\u7bc7\u4e3b\u8981\u8865\u5145\u4e00\u4e0b\u6709\u5173\u5408\u5e76\u8fde\u901a\u5757\u7684\u66f4\u7b80\u4fbf\u7684\u65b9\u6cd5\uff0c\u6574\u4f53\u601d\u8def\u4e0e\u5176\u4ed6\u9898\u89e3\u4e00\u81f4\u3002\n\n### \u5fc3\u8def\u5386\u7a0b\uff08\u5efa\u8bae\u8df3\u8fc7\uff09\uff1a\n\n\u672c\u6765\u6253\u7b97\u6574\u4f53\u4e8c\u5206\u505a\uff0c\u7136\u540e\u53d1\u73b0\u5f3a\u5236\u5728\u7ebf\uff0c\u60b2\u50ac\u3002\u7136\u540e\u73a9\u4e86\u73a9\u53d1\u73b0\u53ef\u4ee5\u641e\u4e2a`\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6`\uff08\u778e\u731c\u6709\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\uff09\uff0c\u7ed3\u679c\u4e00\u641c\u53d1\u73b0\u771f\u7684\u6709\u8fd9\u79cd\u4e1c\u897f\uff0c\u4f46\u653e\u5728\u8fd9\u91cc\u518d\u52a0\u4e2a\u4e8c\u5206\uff0c\u5c31\u6709\u4e09\u4e2a $\\log$\uff0c\u4e0d\u592a\u884c\u3002\n\n\u540e\u6765\u770b\u6709\u4eba\u5728\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6\u9898\u89e3\u5e95\u4e0b\u8bc4\u8bba\uff0c\u8bf4 Kruskal \u91cd\u6784\u6811\u5728\u5f88\u591a\u65f6\u5019\u53ef\u4ee5\u66ff\u4ee3\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6\u3002\u4e8e\u662f\u53c8\u73a9\u4e86\u73a9\uff0c\u611f\u89c9\u53ef\u505a\u3002\n\n\u81f3\u4e8e\u4e3a\u5565 Kruskal \u91cd\u6784\u6811\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6bd4\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6+\u4e8c\u5206\u4f18\u79c0\uff0c\u6211\u8ba4\u4e3a\u662f\u56e0\u4e3a\u524d\u8005\u9700\u8981\u9884\u5904\u7406\u4e00\u4e9b\u4fe1\u606f\uff0c\u4e0d\u652f\u6301\u4e00\u8fb9\u52a0\u8fb9\u4e00\u8fb9\u8be2\u95ee\uff0c\u4f46\u540e\u8005\u652f\u6301\u4fee\u6539\u548c\u8be2\u95ee\u7684\u4ea4\u66ff\uff0c\u5bfc\u81f4\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u9ad8\u3002\n\n# \u5206\u6790\n\n\u770b\u5230\u8981\u6700\u5c0f\u5316\u74f6\u9888\uff0c\u5bb9\u6613\u8054\u60f3\u4e8c\u5206\uff08\u5c3d\u7ba1\u6700\u540e\u6ca1\u6709\u7528\u4e8c\u5206\uff09\uff0c\u90a3\u4e48\u53ef\u4ee5\u8003\u8651\u4ec0\u4e48\u6837\u7684\u56fe\u4e0a\u7684\u4e24\u70b9\u53ef\u4ee5 `swap`\u3002\u663e\u7136\uff0c\u9996\u5148\uff0c\u4e24\u4e2a\u70b9\u5fc5\u987b\u5728\u540c\u4e00\u8fde\u901a\u5757\u5185\u3002\u4e4b\u540e\u624b\u73a9\u4e00\u4e0b\uff0c\u5bb9\u6613\u53d1\u73b0\u8fd9\u4e2a\u8fde\u901a\u5757\u5fc5\u987b\u4e0d\u662f\u4e00\u6761\u94fe\u3002\u5373\u4e24\u70b9\u53ef\u4ee5 `swap` \u7b49\u4ef7\u4e8e\u4e24\u70b9\u5728\u540c\u4e00\u8fde\u901a\u5757\u5185\uff0c\u5e76\u4e14\u8fde\u901a\u5757\u4e0d\u662f\u4e00\u6761\u94fe\u3002\n\n\u5982\u4f55\u5224\u5b9a\u8fde\u901a\u5757\u662f\u4e0d\u662f\u94fe\u5462\uff1f\u6211\u7684\u505a\u6cd5\u662f\uff0c\u8bb0\u5f55\u8fde\u901a\u5757\u5927\u5c0f $size$\u3001\u5ea6\u6570\u4e3a $1$ \u7684\u70b9\u7684\u4e2a\u6570 $c_1$\u3001\u5ea6\u6570\u4e3a $2$ \u7684\u70b9\u7684\u4e2a\u6570 $c_2$\u3002\u90a3\u4e48\uff0c\u5f53\u4e14\u4ec5\u5f53 $c_1=2$ \u4e14 $c_1+c_2=size$ \u65f6\uff0c\u8fde\u901a\u5757\u662f\u94fe\u3002\u6709\u8fd9\u4e2a\u7b49\u4ef7\u6761\u4ef6\uff0c\u5c31\u5bb9\u6613\u7ef4\u62a4\u4e86\uff0c\u53ea\u9700\u8981\u518d\u989d\u5916\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u5c31\u884c\uff0c\u5728\u52a0\u8fb9\u7684\u65f6\u5019 $O(1)$ \u4fee\u6539\u5373\u53ef\uff0c\u7136\u540e\u5e76\u67e5\u96c6\u6b63\u5e38\u5408\u5e76\uff0c**\u4e0d\u9700\u8981**\u5f88\u591a\u9898\u89e3\u63d0\u5230\u7684\u542f\u53d1\u5f0f\u5408\u5e76\u3002\n\n\u5269\u4e0b Kruskal \u91cd\u6784\u6811\u7684\u601d\u8def\u5c31\u4e0e\u5176\u4ed6\u9898\u89e3\u5927\u81f4\u76f8\u540c\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 1e5+5, M = 2e5+5, K = 3e5+5;// K = N + M\n\nint n, m;\nstruct Edge {\n\tint x, y, w;\n\tEdge() : x(0), y(0), w(0) {}\n\tEdge(int _x, int _y, int _w) : x(_x), y(_y), w(_w) {}\n} e[M];\n\ninline bool operator < (const Edge &x, const Edge &y) { return x.w < y.w; }\n\nstruct Kruskal {// kruskal \u91cd\u6784\u6811\n\tint g[K], v[K], nxt[K], tot, idx;\n\tint f[K], siz[K], d[N], c[K][3], a[K];\n\tint anc[K][20], dep[K], h[K];\n\tinline void add(int x, int y) {\n\t\tv[++tot] = y, nxt[tot] = g[x], g[x] = tot;\n\t}\n\tint getf(int x) {\n\t\tif (f[x] == x) return x;\n\t\treturn f[x] = getf(f[x]);\n\t}\n\tinline void upd(int x, int v) {\n\t\tif (1 <= d[x] && d[x] <= 2) c[getf(x)][d[x]] += v;\n\t}\n\tvoid dfs(int x, int fa, int dpt) {\n\t\tanc[x][0] = fa, dep[x] = dpt;\n\t\tif (c[x][1] == 2 && c[x][1] + c[x][2] == siz[x]) h[x] = h[fa];\n\t\telse h[x] = x;\n\t\tfor (int i = 1; (1 << i) <= dep[x]; i++)\n\t\t\tanc[x][i] = anc[anc[x][i-1]][i-1];\n\t\tfor (int i = g[x]; i; i = nxt[i]) {\n\t\t\tint y = v[i];\n\t\t\tdfs(y, x, dep[x] + 1);\n\t\t}\n\t}\n\tinline int lca(int x, int y) {\n\t\tif (dep[x] < dep[y]) swap(x, y);\n\t\tint dlt = dep[x] - dep[y];\n\t\tfor (int i = 19; i >= 0; i--)\n\t\t\tif ((dlt >> i) & 1)\n\t\t\t\tx = anc[x][i];\n\t\tif (x == y) return x;\n\t\tfor (int i = 19; i >= 0; i--)\n\t\t\tif (anc[x][i] != anc[y][i])\n\t\t\t\tx = anc[x][i], y = anc[y][i];\n\t\treturn anc[x][0];\n\t}\n\tinline int qry(int x, int y) {\n\t\tint d = h[lca(x, y)];\n\t\tif (!d) return -1;\n\t\treturn a[d];\n\t}\n\tinline void init() {\n\t\tsort(e + 1, e + 1 + m);\n\t\tfor (int i = 1; i <= n; i++) f[i] = i, siz[i] = 1;\n\t\tidx = n;\n\t\tfor (int i = 1; i <= m; i++) {\n\t\t\tint x = e[i].x, y = e[i].y, z = e[i].w;\n\t\t\tint fx = getf(x), fy = getf(y);\n\t\t\tif (fx != fy) {\n\t\t\t\t++idx, f[idx] = idx, a[idx] = z, siz[idx] = siz[fx] + siz[fy];\n\t\t\t\tc[idx][1] = c[fx][1] + c[fy][1], c[idx][2] = c[fx][2] + c[fy][2];\n\t\t\t\tf[fx] = idx, f[fy] = idx;\n\t\t\t\tadd(idx, fx), add(idx, fy);\n\t\t\t}\n\t\t\telse if (z != a[fx]) {\n\t\t\t\t++idx, f[idx] = idx, a[idx] = z, siz[idx] = siz[fx];\n\t\t\t\tc[idx][1] = c[fx][1], c[idx][2] = c[fx][2], f[fx] = idx, add(idx, fx);\n\t\t\t}\n\t\t\tupd(x, -1), upd(y, -1);\n\t\t\td[x]++, d[y]++;\n\t\t\tupd(x, 1), upd(y, 1);\n\t\t}\n\t\tdfs(idx, 0, 0);\n\t}\n} kt;\n\nvoid init(int N, int M, vector<int> U, vector<int> V, vector<int> W) {\n\tn = N, m = M;\n\tfor (int i = 0; i < m; i++) e[i+1] = Edge(U[i] + 1, V[i] + 1, W[i]);\n\tkt.init();\n}\n\nint getMinimumFuelCapacity(int x, int y) {\n\tx++, y++;\n\treturn kt.qry(x, y);\n}\n```",
        "postTime": 1621328867,
        "uid": 138041,
        "name": "cyh_toby",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6765 \u3010[APIO2020]\u4ea4\u6362\u57ce\u5e02\u3011"
    },
    {
        "content": "[Luogu6765](https://www.luogu.com.cn/problem/P6765)\n\n\u8fd8\u662f\u63a8\u8350\u7528 LOJ \u8bc4\u6d4b,\u53ef\u4ee5\u8bc4\u6d4b\u5168\u90e8\u7684\u6570\u636e\n\n[LOJ3346](https://loj.ac/p/3346)\n\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://tony102.xyz/index.php/2021/05/18/loj3346-apio2020%e4%ba%a4%e6%8d%a2%e5%9f%8e%e5%b8%82/)\n\n\n### Description\n\n\u7ed9\u4e00\u4e2a\u7b80\u5355\u4e00\u4e9b\u7684\u9898\u9762\n\n\u6709\u4e00\u5f20 $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u5e26\u6743\u65e0\u5411\u56fe, \u5747\u4ece $0$ \u5f00\u59cb\u7f16\u53f7.\u73b0\u5728\u6709 $Q$ \u7ec4\u8be2\u95ee,\u6bcf\u6b21\u4e24\u4e2a\u4eba\u4ece $u,v$ \u51fa\u53d1,\u8981\u6c42\u8fd9\u4e24\u4e2a\u4eba\u4e0d\u80fd\u540c\u65f6\u5728\u4e00\u4e2a\u70b9\u4e0a,\u4e5f\u4e0d\u80fd\u540c\u65f6\u7ecf\u8fc7\u4e00\u6761\u8fb9.\u5141\u8bb8\u591a\u6b21\u8d70\u4e00\u4e2a\u70b9\u6216\u8005\u4e00\u6761\u8fb9.\n\n\u73b0\u5728\u8981\u6c42\u6700\u5c0f\u5316\u8def\u5f84\u4e0a\u7684\u6700\u5927\u8fb9\u6743.\n\n\n\n### Sol\n\nAPIO2021\u6765\u4e4b\u524d\u51b3\u5b9a\u505a\u4e00\u4e9b APIO \u7684\u771f\u9898\u6765\u7ec3\u7ec3\u624b\n\nAPIO \u7684\u9898\u90fd\u662f\u7528\u5b9e\u73b0\u51fd\u6570\u7c7b\u4f3c\u4e8e\u4ea4\u4e92\u5e93\u7684\u5f62\u5f0f, \u8fd8\u662f\u8981\u63d0\u524d\u9002\u5e94\n\n\u9996\u5148\u770b\u5230\u6700\u5c0f\u5316\u6700\u5927\u8fd9\u79cd\u4e1c\u897f,\u53ef\u4ee5\u5148\u8bd5\u7740\u5f80\u4e8c\u5206\u4e0a\u9760.\u90a3\u4e48\u5c31\u4e8c\u5206\u8fd9\u4e2a\u7b54\u6848\u6700\u5927\u6743,\u6bcf\u6b21\u4e24\u4e2a\u70b9\u4e22\u8fdb\u53bb\u66b4\u8df3\u7684\u9014\u4e2d\u5224\u65ad\u5c31\u5b8c\u4e8b\u513f\u4e86.\u53ef\u80fd\u8981\u6ce8\u610f\u4e0b\u7ec6\u8282.\u5e94\u8be5\u53ef\u4ee5\u62ff\u5230 Subtask3 \u7684\u90e8\u5206\u5206\n\n\u73b0\u5728\u4e8c\u5206\u5224\u5b9a\u7684\u74f6\u9888\u4e0d\u5728\u4e8c\u5206\u51fa\u7b54\u6848\u4e0a\u9762,\u800c\u662f\u5728\u5224\u5b9a\u7b54\u6848\u65f6\u6211\u662f\u7206\u5224\u7684.\u8003\u8651\u6765\u4f18\u5316\u8fd9\u4e2a\u8fc7\u7a0b.\u6700\u7b80\u5355\u7684\u60c5\u5f62\u5c31\u662f\u5728\u4e00\u6761\u94fe\u4e0a\u9762,\u8fd9\u4e2a\u4e24\u4e2a\u4eba\u5982\u679c\u540c\u65f6\u5f80\u4e2d\u95f4\u8df3\u65f6\u76f8\u9047,\u5c31\u8dd1\u4e0d\u6389\u4e86.\u8fd9\u6837\u94fe\u7684\u7b54\u6848\u662f $-1$ . \u83ca\u82b1\u56fe\u7684\u60c5\u51b5\u5bf9\u5e94 Subtask2, \u90a3\u4e48\u53ea\u9700\u8981\u5224\u65ad\u4e00\u4e0b\u8d77\u70b9\u548c\u7ec8\u70b9\u7ecf\u4e0d\u7ecf\u8fc7\u83ca\u82b1\u6839\u5c31\u53ef\u4ee5\u4e86.\n\n\u73b0\u5728\u8981\u89e3\u51b3\u7684\u95ee\u9898\u5c31\u662f\u4ec0\u4e48\u65f6\u5019\u4e00\u5b9a\u4f1a\u6709\u7b54\u6848. \u5df2\u77e5\u94fe\u65e0\u89e3,\u65e0\u89e3\u662f\u56e0\u4e3a\u5fc5\u8981\u540c\u65f6\u7ecf\u8fc7\u540c\u4e00\u8fb9.\u4f46\u51e1\u6709\u4e00\u6761\u522b\u7684\u51fa\u8fb9\u80fd\u51fa\u53bb,\u5c31\u6709\u53ef\u80fd\u6709\u89e3. \u5047\u5982\u73b0\u5728\u6709\u8fd9\u4e48\u4e00\u6761\u8fb9\u80fd\u8ba9\u5b83\u51fa\u53bb\u4e86,\u8981\u518d\u8ba9\u4ed6\u56de\u6765\u5230\u8fbe\u7ec8\u70b9\u5c31\u5fc5\u987b\u6709\u4e00\u6761\u8fb9\u5f15\u56de.\u8fd9\u6837\u5c31\u662f\u4e00\u4e2a\u4e09\u5143\u73af.(\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u591a\u753b\u753b\u56fe)\n\n\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898,\u4e8c\u5206\u7684\u65b9\u6cd5\u590d\u6742\u5ea6\u662f $O(Qn \\log n)$ .\u53ef\u4ee5\u901a\u8fc7 Subtask4\n\n\u89e3\u51b3\u95ee\u9898\u7684\u5173\u952e\u53c8\u53d8\u6210\u4e86\u4e8c\u5206\u4e0d\u591f\u4f18\u79c0.\u8003\u8651 Kruskal \u91cd\u6784\u6811.\u53ef\u4ee5\u7528\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898. \u5728 Kruskal \u91cd\u6784\u6811\u4e0a, $u, v$ \u8def\u5f84\u4e0a\u7684\u6700\u5c0f\u88ab\u9600\u503c\u9650\u5236\u7684\u8fb9\u6743\u5c31\u662f\u5b83\u4eec lca \u7684\u70b9\u6743.\n\n\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u505a Kruskal \u7684\u65f6\u5019\u8fd8\u8981\u6ce8\u610f\u8fde\u901a\u5757\u662f\u4e0d\u662f\u94fe\u7684\u95ee\u9898.\u53ef\u4ee5\u8fd9\u4e48\u89e3\u51b3,\u540c\u65f6\u7ef4\u62a4\u4e00\u4e2a\u8fde\u901a\u5757\u7684\u8d77\u70b9\u548c\u7ec8\u70b9,\u4ee5\u53ca\u8fde\u901a\u5757\u7684\u4e00\u4e2a\u6839.\u5408\u5e76\u7684\u65f6\u5019\u6ce8\u610f,\u5206\u60c5\u51b5\u8ba8\u8bba.\n\n1. \u73b0\u5728\u4e24\u4e2a\u8fde\u901a\u5757\u8981\u5408\u5e76,\u4e0d\u662f\u94fe\u7684\u8bdd\u5408\u5e76\u4ee5\u540e\u4e5f\u4e0d\u662f\n2. \u8fd8\u4e0d\u80fd\u5408\u5e76: \n   1. \u6709\u4e00\u4e2a\u4e0d\u662f\u65b0\u7684\u5c31\u4e0d\u662f\n   2. \u539f\u6765\u4e24\u4e2a\u90fd\u662f\u94fe,\u90a3\u4e48\u5c31\u770b\u662f\u4e0d\u662f\u4e24\u6761\u94fe\u7684\u7aef\u70b9\u8fde\u8fb9,\u5982\u679c\u662f\u7684\u8bdd\u5c31\u4f1a\u8fde\u6210\u4e00\u6761\u94fe.\n\n\n\n### Code\n\nLuogu \u7684\u4e0d\u8981\u52a0 `swap.h` \u8fd9\u4e00\u53e5\n\n**[Code\u6233\u8fd9\u91cc](https://tony102.xyz/index.php/2021/05/18/loj3346-apio2020%e4%ba%a4%e6%8d%a2%e5%9f%8e%e5%b8%82/)**",
        "postTime": 1621348038,
        "uid": 230933,
        "name": "Tony102",
        "ccfLevel": 7,
        "title": "LOJ#3346 [APIO2020]\u4ea4\u6362\u57ce\u5e02"
    },
    {
        "content": "\u7eaa\u5ff5\u4e00\u4e0b\u8fc7\u7684\u7b2c\u4e00\u9053\u4ea4\u4e92\u7c7b\u578b\u7684\u9898\u76ee\u3002\n\n[**\u9898\u76eeLink**](https://www.luogu.com.cn/problem/P6765)\n\n\u9898\u610f\uff1a$n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c$q$ \u7ec4\u8be2\u95ee $(x,y)$ \uff0c\u95ee\u4ece $x,y$ \u5206\u522b\u8d70\u5230\u5bf9\u65b9\uff0c\u8ba9\u8def\u5f84\u4e0a\u8fb9\u6743\u7684\u6700\u5927\u503c\u6700\u5c0f\uff0c\u8981\u6c42\u4e24\u6761\u8def\u5f84\u4e0d\u5b8c\u5168\u91cd\u5408\u3002\n\n\u5404\u4e2a\u5b50\u4efb\u52a1\u771f\u7684\u90fd\u591a\u5c11\u6307\u5411\u4e86\u6b63\u89e3\u5427\u3002\u3002\n\n$Q\\leq 5$ \u7684\u90e8\u5206\u8ba9\u6211\u4eec\u60f3\u5230\u4e86 $\\mathcal O(Qnlogn)$ \u7684**\u4e8c\u5206\u7b54\u6848**\u3002\n\n\u60f3\u8fd9\u4e2a $Subtask$ \u7684\u65f6\u5019\u9700\u8981\u601d\u8003\u4e00\u4e9b\u5b9e\u73b0\u7ec6\u8282\uff0c\u6bd4\u5982\u7b80\u5316\u4e00\u4e0b\u9898\u610f\uff0c\u5373\u4e8c\u5206\u51fa\u4e00\u4e2a\u7b54\u6848 $k$ \uff0c\u6211\u4eec\u5229\u7528 Kruskal \u7684\u601d\u60f3\uff0c\u628a\u8fb9\u6743\u5c0f\u4e8e\u7b49\u4e8e $k$ \u7684\u8fb9\u90fd\u52a0\u8fdb\u53bb\uff0c\u5982\u679c $x,y$ \u8fde\u901a\uff0c\u90a3\u4e48\u8bf4\u660e\u8fd9\u4e2a $k$ \u5141\u8bb8\u6211\u4eec\u6709\u4e00\u6761\u8def\u5f84\u8ba9 $x$ \u5230\u8fbe $y$ \u3002\n\n\u95ee\u9898\u662f\u6211\u4eec\u9700\u8981\u4e24\u6761\u4e0d\u5b8c\u5168\u91cd\u5408\u7684\u8def\u5f84\uff0c\u4e8e\u662f $M=N-1$ \uff08\u6811\uff09\u7684\u90e8\u5206\u662f\u4e24\u70b9\u4e4b\u95f4\u8def\u5f84\u552f\u4e00\uff0c\u90a3\u6211\u4eec\u53ea\u80fd\u8ba9\u4e00\u4e2a\u70b9\u8d70\u51fa\u8fd9\u6761\u8def\u5f84\u4e00\u6b65\uff0c\u7b49\u53e6\u4e00\u8fb9\u8d70\u5230\u4e86\u7ec8\u70b9\u518d\u8d70\u8fc7\u53bb\u3002\u7279\u6b8a\u7684\uff0c\u5982\u679c\u4ece\u8d77\u70b9\u53ea\u6709\u4e00\u6761\u8def\u9000\u51fa\u53bb\u662f\u4e0d\u884c\u7684\uff0c\u5426\u5219\u53e6\u4e00\u8fb9\u8d70\u5230\u4e86\u81ea\u5df1\u7684\u4f4d\u7f6e\u4e4b\u540e\u5c31\u8d70\u4e0d\u56de\u53bb\u4e86\u3002\n\n\u505c\u4e0b\u6765\u89c2\u5bdf\u4e00\u4e0b\uff0c\u6211\u4eec\u9700\u8981**\u8def\u5f84\u4e0a\u4efb\u610f\u4e00\u70b9\u7684\u5ea6\u6570\u5927\u4e8e2**\uff0c\u8fd9\u6837\u5373\u4f7f\u662f\u5728\u521d\u59cb $x$ \u5c31\u9000\u4e00\u6b65\u5230 $z_1$\uff0c$y$ \u5230\u8fbe $x$ \u7684\u4f4d\u7f6e\u4e4b\u540e\uff0c\u8fd8\u6709\u4e00\u4e2a\u7a7a\u4f4d $z_2$ \u53ef\u4ee5\u8d70\u8fc7\u53bb\u505c\u7559\uff0c\u8ba9 $x$ \u8d70\u8fc7\u53bb\uff0c\u8def\u5f84\u4e0a\u7684\u70b9\u540c\u7406\u3002\n\n\u4e8e\u662f\u4e0d\u96be\u60f3\u5230\uff0c\u8981\u4e24\u6761\u4e0d\u5b8c\u5168\u91cd\u5408\u7684\u8def\u5f84\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8ba9\u8fd9\u6761\u8def\u5f84\u4e0a\u7684\u70b9\u6709\u4e00\u4e2a\u5ea6\u6570\u8d85\u8fc72\u7684\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u8d70\u51fa\u8fd9\u6761\u94fe\uff0c\u7b49\u5f85\u53e6\u4e00\u8fb9\u8fc7\u53bb\u4e4b\u540e\u518d\u7ee7\u7eed\u8d70\u3002\u8fd9\u4e2a\u7528\u7b80\u5355\u7684\u6743\u503c\u5e76\u67e5\u96c6\u53ef\u4ee5\u5b9e\u73b0\u3002\n\n\u8003\u8651\u6574\u4f53\u4e8c\u5206\uff0c\u4f46\u662f\u4f1a\u53d1\u73b0\u9898\u76ee\u8fd9\u4e2a\u5b9e\u73b0\u7684\u8981\u6c42\u8feb\u4f7f\u6211\u5f3a\u5236\u5728\u7ebf\uff0c\u90a3\u4e48\u5c31\u60f3\u5176\u4ed6\u7b97\u6cd5\u3002\n\n\u53d1\u73b0 Kruskal \u7684\u601d\u8def\u53ef\u4ee5\u7ee7\u7eed\u6cbf\u7528\uff0c\u8003\u8651 Kruskal \u91cd\u6784\u6811\u3002\u5373\u505a\u751f\u6210\u6811\u65f6\uff0c\u5982\u679c\u4e00\u5bf9 $(u,v)$ \u6210\u529f\u8fde\u901a\u4e24\u4e2a\u8fde\u901a\u5757\uff0c\u90a3\u4e48\u6539\u53d8\u539f\u6765\u628a\u5b83\u4eec merge \u8d77\u6765\u7684\u505a\u6cd5\uff0c\u800c\u662f\u65b0\u5efa\u4e00\u4e2a\u70b9 $f$\uff0c\u628a $u,v$ \u90fd**\u5728\u5e76\u67e5\u96c6\u4e0a**\u5e76\u5230 f \u4e0a\uff0c\u7136\u540e**\u5728\u56fe\u4e0a**\u628a $get(u),get(v)$ \u8fde\u5411\u7236\u4eb2 $f$\u3002\u8fd9\u6837\u505a\u5b8c\u751f\u6210\u6811\u4e4b\u540e\uff0c\u5c31\u5f97\u5230\u4e86\u4e00\u68f5 Kruskal \u91cd\u6784\u6811\u3002\n\n\u5e76\u4e14\u5728\u8fd9\u9053\u9898\u4e2d\uff0c\u6211\u4eec\u628a\u5bf9\u5e94\u7684\u6743\u503c $w$ \u4f5c\u4e3a\u70b9\u6743\u8d4b\u503c\u7ed9\u7236\u4eb2 $f$\u3002\u8fd9\u6837\u7684\u8bdd\u5982\u679c\u53ea\u8003\u8651\u4e00\u6761\u8def\u5f84\u7684\u8bdd\uff0c$x,y$ \u4e4b\u95f4\u7684\u7b54\u6848\u5c31\u662f $lca(x,y)$ \u7684\u70b9\u6743\u3002\n\n\u56e0\u4e3a\u5f53\u4ea7\u751f\u5b83\u4eec\u7684 $lca$ \u7684\u8fb9\u52a0\u8fdb\u53bb\u4e4b\u540e\u5b83\u4eec\u624d\u8fde\u901a\uff0c\u800c\u8fb9\u6743\u53c8\u662f\u4ece\u5c0f\u5230\u5927\u52a0\u5165\u7684\uff0c\u4e8e\u662f\u5230 $lca$ \u7684\u70b9\u6743\u5c31\u662f\u6700\u4f18\u7684\u7b54\u6848\u3002\n\n\u5230\u8fd9\u91cc\u5df2\u7ecf\u5f88\u63a5\u8fd1\u6b63\u89e3\u4e86\u3002\u6211\u4eec\u53d1\u73b0\uff0c$lca$ \u53ca\u5176\u4e4b\u4e0a\u7684\u70b9\u90fd\u53ef\u4ee5\u6ee1\u8db3\u8ba9 $x,y$ \u8fde\u901a\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4ece $lca$ \u5411\u4e0a\u627e\u5230\u5176\u6700\u8fd1\u7684\u4e00\u4e2a\u70b9\u4f7f\u5176\u6ee1\u8db3\u6709\u8def\u5f84\u70b9\u6570\u5927\u4e8e2\u3002\u53d1\u73b0\u8fd9\u4e2a\u6027\u8d28\u662f\u53ef\u4ee5\u5408\u5e76\u7684\uff0c\u5373\u6328\u7740\u52a0\u8fb9\u8fdb\u53bb\u7684\u65f6\u5019\u8ba9 $u,v$ \u7684\u5ea6\u6570\u52a0\u4e00\uff0c\u5982\u679c\u5176\u4e2d\u6709\u5927\u4e8e2\u7684\uff0c\u90a3\u4e48\u65b0\u5408\u5e76\u51fa\u6765\u7684\u70b9\u5c31\u62e5\u6709\u8fd9\u4e2a\u6027\u8d28\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u67d0\u4e9b\u70b9\u5929\u7136\u6709\u8fd9\u4e2a\u6027\u8d28\uff0c\u52a0\u5b8c\u8fb9\u4e4b\u540e dfs \u4e0b\u53bb\u5c31\u53ef\u4ee5\u4f20\u9012\u6700\u8fd1\u7684\u62e5\u6709\u6027\u8d28\u7684\u7956\u5148\u7ed3\u70b9\u4e86\u3002\n\n\u6253\u51fa\u6765\u53d1\u73b0\u4f1a\u8fc7\u4e0d\u4e86\u6837\u4f8b\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u8003\u8651\u5728\u52a0\u5165\u8fb9 $(u,v)$ \u65f6\u5b83\u4eec\u5df2\u7ecf\u8fde\u901a\uff0c\u6700\u7b80\u5355\u7684\u662f\u5f62\u6210\u4e86\u4e00\u4e2a $(a-b-c-a)$ \u7684\u73af\uff0c\u56fe\u4e2d\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u90fd\u662f2\uff0c\u4f46\u6211\u4eec\u662f\u53ef\u4ee5\u8ba9 $a,b$ \u5206\u522b\u8d70\u5230\u5bf9\u65b9\u7684\u4f4d\u7f6e\u7684\uff0c\u8fd9\u79cd\u60c5\u51b5\u7279\u5224\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n[**\u5b8c\u6574\u4ee3\u7801Link**](https://www.luogu.com.cn/paste/jf032za1)\n\n",
        "postTime": 1615941138,
        "uid": 173685,
        "name": "\u6478\u9c7c\u9171",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P6765 [APIO2020]\u4ea4\u6362\u57ce\u5e02"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9898\u5f88\u7b80\u5355\u554a\uff0c\u4e0d\u50cf\u4e00\u4e9b\u9898\u89e3\u8bf4\u7684\u8981\u542f\u53d1\u5f0f\u5408\u5e76\u3002\n\n\u6309\u7167\u8fb9\u6743\u4ece\u5c0f\u5230\u5927\u52a0\u8fb9\uff0c\u7136\u540e\u6709\u4e00\u4e2a\u7ed3\u8bba\uff1a\u70b9 $u$ \u548c $v$ \u80fd\u591f\u4e92\u76f8\u901a\u8f66\uff0c\u5f53\u4e14\u4ec5\u5f53 $u$ \u548c $v$ \u8054\u901a\uff0c\u4e14 $u$ \u4e0e $v$ \u6240\u5728\u7684\u8fde\u901a\u5757\u4e0d\u662f\u4e00\u6761\u94fe\u3002\u7ed3\u8bba\u81ea\u8bc1\u4e0d\u96be\u3002\n\n\u95ee\u9898\u662f\u5982\u4f55\u7528 kruskal \u91cd\u6784\u6811\u7ef4\u62a4\u8fd9\u4e2a\u4fe1\u606f\u3002\n\n\u8003\u8651\u52a0\u5165\u4e00\u6761\u8fb9\uff1a\n\n\u5f53 $u$ \u548c $v$ \u4e0d\u8054\u901a\u65f6\uff0c\u6211\u4eec\u9996\u5148\u5408\u5e76 $u$ \u4e0e $v$ \u6240\u5728\u7684\u8054\u901a\u5757\uff0c\u7136\u540e\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n+ \u5982\u679c $u$ \u548c $v$ \u6240\u5728\u7684\u8054\u901a\u5757\u6709\u4e00\u4e2a\u4e0d\u662f\u94fe\uff0c\u90a3\u4e48\u65b0\u8054\u901a\u5757\u4e00\u5b9a\u4e0d\u662f\u94fe\u3002\n+ \u5426\u5219\uff0c\u8bb0\u5f55\u8054\u901a\u5757\u5bf9\u5e94\u94fe\u7684\u5de6\u53f3\u7aef\u70b9\uff0c\u5982\u679c\u80fd\u63a5\u8d77\u6765\u5c31\u662f\u94fe\uff0c\u5426\u5219\u5c31\u4e0d\u662f\u3002\n\n\u5f53 $u$ \u548c $v$ \u8054\u901a\u65f6\uff0c\u5982\u679c $u$ \u548c $v$ \u6240\u5728\u7684\u8054\u901a\u5757\u662f\u94fe\uff0c\u90a3\u4e48\u52a0\u4e00\u6761\u8fb9\u540e\u4e00\u5b9a\u4e0d\u662f\u94fe\u3002\u6211\u4eec\u5c06 $u$ \u548c $v$ \u6240\u5728\u8054\u901a\u5757\u5bf9\u5e94\u7684\u70b9\u63a5\u5230\u65b0\u70b9\u4e0a\uff0c\u5c06\u65b0\u70b9\u8bbe\u4e3a\u4e0d\u662f\u94fe\u3002\n\n\u56e0\u4e3a\u4e00\u4e2a\u8054\u901a\u5757\u81f3\u591a\u6709\u4e00\u6b21\u4ece\u662f\u94fe\u8f6c\u53d8\u6210\u4e0d\u662f\u94fe\uff0c\u6240\u4ee5\u6700\u7ec8\u8282\u70b9\u603b\u6570\u4e0d\u8d85\u8fc7 $3n$\u3002\n\n\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9996\u5148\u627e\u5230 $u$ \u548c $v$ \u5728 \tkruskal\t \u91cd\u6784\u6811\u4e0a\u7684 lca\uff0c\u5982\u679c\u5bf9\u5e94\u7684\u8054\u901a\u5757\u4e0d\u662f\u94fe\uff0c\u76f4\u63a5\u8fd4\u56de\u5bf9\u5e94\u8fb9\u6743\u5373\u53ef\uff1b\u5426\u5219\u4ece lca \u5f00\u59cb\u500d\u589e\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0d\u662f\u94fe\u7684\u70b9\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O((n+q)\\log n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n[\u4ee3\u7801](https://loj.ac/s/1677370)",
        "postTime": 1673835767,
        "uid": 362346,
        "name": "TianyiLemon",
        "ccfLevel": 0,
        "title": "\u300cAPIO2020\u300d\u4ea4\u6362\u57ce\u5e02"
    },
    {
        "content": "### Analysis\n\n* * *\n\n**\u5f15\u7406\uff1a** \u82e5\u8fde\u901a\u7b80\u5355\u56fe $G$ \u4e0d\u662f\u94fe\uff0c\u5219 $G$ \u6709\u4e00\u4e2a\u70b9\u7684\u5ea6 $\\ge 3$ \u6216\u6709\u73af\u3002\n\n**\u8bc1\u660e\uff1a** \u65e0\u73af\u8fde\u901a\u56fe\u4e3a\u6811\uff0c\u4e00\u68f5\u6811\u4e0d\u662f\u94fe\u5219\u6709\u4e00\u4e2a\u5ea6\u6570 $\\ge 3$ \u7684\u70b9\u3002\n\n* * *\n\n\u6211\u4eec\u8bbe\u4e24\u4e2a\u57ce\u5e02\u4e3a $X,Y$\uff0c\u8f66\u4e3a $x,y$\u3002\n\n\u6838\u5fc3\u95ee\u9898\uff1a\u600e\u6837\u7684\u56fe\u53ef\u4ee5\u8ba9 $X,Y$ \u4e92\u901a\u8f66\uff1f\n\n\u624b\u73a9\u4e00\u4e0b\uff0c\u53d1\u73b0\u7b54\u6848\u662f**\u9664\u4e86\u94fe\u7684\u6240\u6709\u56fe**\uff08\u5f53\u7136\u8981\u4fdd\u8bc1\u4e24\u57ce\u5e02\u5728\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u4e2d\uff09\uff0c\u4e0b\u9762\u7ed9\u51fa\u8bc1\u660e\u3002\n\n* * *\n\n\u9996\u5148\u4e00\u6761\u94fe\u80af\u5b9a\u662f\u4e0d\u884c\u7684\uff0c\u56e0\u4e3a\u4e24\u8f86\u8f66\u5728\u94fe\u4e0a\u7684\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u4f1a\u6539\u53d8\u3002\n\n\u6211\u4eec\u8bc1\u660e\u4e0d\u662f\u94fe\uff08\u6709\u4e00\u4e2a\u70b9\u7684\u5ea6 $\\ge 3$ \u6216\u6709\u73af\uff09\u4e00\u5b9a\u53ef\u884c\u3002\n\n**\u6709\u73af\uff1a**\n\n1. \u5c06 $x,y$ \u5f00\u5230\u73af\u4e0a\u3002\n\n2. \u5c06 $x,y$ \u5728\u73af\u4e0a\u4ea4\u6362\u4f4d\u7f6e\u3002\n\n3. $x$ \u6cbf\u7740 $y$ \u6765\u7684\u8def\u56de\uff0c$y$ \u540c\u7406\u3002\n\n**\u65e0\u73af\uff1a**\n\n\u4e0d\u59a8\u8bbe\u5ea6 $\\ge 3$ \u7684\u70b9\u4e3a $O$\uff0c\u4e14\u5ea6\u6570\u6070\u597d\u4e3a $3$\uff0c\u76f8\u90bb\u7684\u70b9\u4e3a $A,B,C$\u3002\n\n\u4ee5 $O$ \u5b9a\u6839\u3002\n\n\u4e0d\u59a8\u8bbe\u57ce\u5e02 $X$ \u5728 $A$ \u7684\u5b50\u6811\u5185\u3002\n\n**\uff08\u4e00\uff09** $Y$ \u4e5f\u5728 $A$ \u5b50\u6811\u5185\u3002\u4e0d\u59a8\u8bbe $Y$ **\u4e0d\u662f** $X$ \u7684\u7956\u5148\u3002\u5219\uff1a\n\n1. $x$ \u79fb\u5230 $B$\u3002\n\n2. $y$ \u79fb\u5230 $C$\u3002\n\n3. $x$ \u79fb\u5230 $Y$\u3002\n\n4. $y$ \u79fb\u5230 $X$\u3002\n\n**\uff08\u4e8c\uff09** $Y$ \u4e0d\u5728 $A$ \u5b50\u6811\u5185\uff0c\u4e0d\u59a8\u8bbe\u5728 $B$ \u7684\u5b50\u6811\u5185\u3002\n\n1. $x$ \u79fb\u5230 $C$\u3002\n\n2. $y$ \u79fb\u5230 $X$\u3002\n\n3. $x$ \u79fb\u5230 $Y$\u3002\n\n* * *\n\n\u6211\u4eec\u8981\u627e\u5230\u5bf9\u4e8e\u6bcf\u7ec4\u8be2\u95ee\uff0c\u8ba9 $X,Y$ \u540c\u8fde\u901a\u5757\u4e0d\u4e3a\u94fe\u7684\u6700\u5927\u8fb9\u6743\u6700\u5c0f\u503c\u3002\uff08\u6162\u6162\u8bfb qwq\uff09\n\n\u8fd9\u8ba9\u6211\u4eec\u60f3\u8d77\u4e86 **Kruskal \u91cd\u6784\u6811**\uff0c\u6ca1\u5b66\u8fc7\u7684\u5feb\u53bb\u5b66 awa\u3002\n\n\u5c06\u8fb9\u6309\u7167\u8fb9\u6743\u6392\u5e8f\uff0c\u4f9d\u6b21\u52a0\u5165\uff08\u8bbe\u5f53\u524d\u4e3a $(x,y)$\uff09\uff1a\n\n* \u82e5 $x,y$ \u5df2\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u91cc\u3002\n1. \u8be5\u8fde\u901a\u5757\u4e3a\u94fe\uff0c\u65b0\u5f00\u7ed3\u70b9\uff0c\u6807\u8bb0\u4e3a\u975e\u94fe\u3002\n2. \u5426\u5219\u4e0d\u505a\u3002\n\n* \u82e5 $x,y$ \u4e0d\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u91cc\u3002\n1. $x,y$ \u6240\u5728\u8fde\u901a\u5757\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u4e0d\u662f\u94fe\uff0c\u6216\u8005 $x$ \u6216 $y$ \u4e0d\u4e3a\u8be5\u8fde\u901a\u5757\u7684\u4e24\u7aef\u4e4b\u4e00\u3002\u5c06\u4e24\u8fde\u901a\u5757\u5408\u5e76\uff0c\u6807\u8bb0\u4e3a\u975e\u94fe\u3002\n2. \u5426\u5219\uff0c\u5c06\u4e24\u8fde\u901a\u5757\u5408\u5e76\uff0c\u6807\u8bb0\u4e3a\u94fe\uff0c\u5e76\u8bb0\u5f55\u4e24\u7aef\u4ee5\u4fbf\u540e\u7eed\u67e5\u8be2\u3002\n\n\u6700\u540e\u8be2\u95ee\u65f6\u67e5\u8be2 $x,y$ \u7684 LCA \u7684\u6700\u8fd1\u975e\u94fe\u7956\u5148\uff0c\u8f93\u51fa\u8fb9\u6743\u5373\u53ef\u3002\n\n### Detail\n\n\u5efa\u8bae\u7528 `C++ 20` \u7f16\u8bd1\uff0c\u5426\u5219\u4f1a CE\u3002\n\n\u6ce8\u610f\u4e0d\u80fd `#define int long long`\uff0c\u56e0\u4e3a\u9898\u76ee\u4e2d\u7ed9\u7684\u51fd\u6570\u8fd4\u56de\u5fc5\u987b\u662f int32\u3002\n\n\u7531\u4e8e\u6b64 Kruskal \u91cd\u6784\u6811\u53d8\u5f62\u6709 \u94fe $\\to$ \u975e\u94fe \u65b0\u5f00\u8282\u70b9\u7684\u64cd\u4f5c\uff0c\u7a7a\u95f4\u8bb0\u5f97\u5f00 $3$ \u500d\u800c\u4e0d\u662f $2$ \u500d\u3002\n\n### Code\n\n```cpp\n//Said no more counting dollars. We'll be counting stars.\n#include<bits/stdc++.h>\nusing namespace std;\n#define For(i,j,k) for(int i=j;i<=k;i++)\n#define Rof(i,j,k) for(int i=j;i>=k;i--)\n#define vi vector<int>\n#define N 100010\n#define M 200010\n#define C 20 \nstruct edge{\n\tint u,v,w;\n\tfriend bool operator<(edge x,edge y){return x.w<y.w;}\n}e[M];\nint rt[3*N],st[3*N],ed[3*N],f[3*N][C+1],tot,val[3*N],dep[3*N];\ninline int gf(int x){return rt[x]==x?x:rt[x]=gf(rt[x]);}\nvoid init(int n,int m,vi U,vi V,vi W){\n\tFor(i,0,m-1) e[i+1]=(edge){U[i]+1,V[i]+1,W[i]};\n\tsort(e+1,e+1+m);\n\tFor(i,1,3*n) rt[i]=i;\n\tFor(i,1,n) st[i]=ed[i]=i;\n\ttot=n;\n\tint x,y,w,xx,yy;\n\tFor(i,1,m){\n\t\tx=e[i].u,y=e[i].v,w=e[i].w;\n\t\txx=gf(x),yy=gf(y);\n\t\tif(xx==yy){\n\t\t\tif(st[xx]!=-1){\n\t\t\t\tval[++tot]=w;\n\t\t\t\tf[xx][0]=tot;\n\t\t\t\trt[xx]=tot;\n\t\t\t\tst[tot]=-1;\n//\t\t\t\tcerr<<xx<<\"->\"<<tot<<\":\"<<val[tot]<<\" \"<<st[tot]<<\"*\"<<ed[tot]<<endl; \n\t\t\t}\n\t\t}else{\n\t\t\tval[++tot]=w;\n\t\t\tf[xx][0]=f[yy][0]=tot;\n\t\t\trt[xx]=rt[yy]=tot;\n\t\t\tif(st[xx]!=-1 && st[yy]!=-1 && (x==st[xx] || x==ed[xx]) && (y==st[yy] || y==ed[yy])){\n\t\t\t\tst[tot]=x^st[xx]^ed[xx];\n\t\t\t\ted[tot]=y^st[yy]^ed[yy];\n\t\t\t}else st[tot]=-1;\n//\t\t\tcerr<<xx<<\"&\"<<yy<<\"->\"<<tot<<\":\"<<val[tot]<<\" \"<<st[tot]<<\"*\"<<ed[tot]<<endl; \n\t\t}\n\t}\n\tRof(i,tot,1) dep[i]=dep[f[i][0]]+1;\n//\tFor(i,1,tot) cout<<dep[i]<<\" \"; cout<<endl;\n\tFor(j,1,C) For(i,1,tot) f[i][j]=f[f[i][j-1]][j-1];\n}\nint lca(int x,int y){\n\tif(dep[x]<dep[y]) swap(x,y);\n\tint xx,yy;\n\tRof(i,C,0){\n\t\txx=f[x][i];\n\t\tif(dep[xx]>=dep[y]) x=xx;\n\t}\n\tif(x==y) return x;\n\tRof(i,C,0){\n\t\txx=f[x][i];\n\t\tyy=f[y][i];\n\t\tif(xx!=yy) x=xx,y=yy;\n\t}\n\treturn f[x][0];\n}\nint antichain(int x){\n\tif(st[x]==-1) return x;\n\tint xx;\n\tRof(i,C,0){\n\t\txx=f[x][i];\n\t\tif(xx && st[xx]!=-1) x=xx;\n\t}\n\treturn f[x][0];\n}\nint getMinimumFuelCapacity(int x,int y){\n\tx++,y++;\n\tint z=lca(x,y);\n\tz=antichain(z);\n\tif(st[z]!=-1) return -1;\n\telse return val[z];\n}\n```",
        "postTime": 1653050903,
        "uid": 101868,
        "name": "I_am_Accepted",
        "ccfLevel": 0,
        "title": "P6765 [APIO2020]\u4ea4\u6362\u57ce\u5e02"
    },
    {
        "content": "update on 2022.4.28 \u4fee\u6539\u4e86\u4ee3\u7801\u4e2d\u7684\u4e00\u4e2a\u5c0f\u9519\u8bef\n### Preface  \n\u8fd9\u9898\u7ee7\u627f\u4e86 APIO \u8bdd\u591a\u4e8b\u5c11\u7684\u9898\u9762\u7279\u70b9...  \n### Problem  \n\u9898\u610f\u7b80\u8ff0\uff1a  \n\u5728\u4e00\u4e2a\u65e0\u5411\u8fde\u901a\u56fe\u4e2d\u6c42\u4f7f\u4e00\u4e2a\u70b9\u5bf9\u8fde\u901a\u4e14\u8fde\u901a\u5757\u4e0d\u4e3a\u94fe\u7684\u6700\u5927\u8fb9\u6743\u6700\u5c0f\u7684\u8fde\u901a\u5757\u3002  \n### Solution  \n\u53d1\u73b0\u8fd9\u73a9\u610f\u6ca1\u6709\u8fde\u901a\u5757\u4e0d\u4e3a\u94fe\u7684\u6027\u8d28\u5176\u5b9e\u5c31\u662f\u5728\u6c42\u74f6\u9888\u8def\uff0c\u76f4\u63a5 Kruskal \u91cd\u6784\u6811\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fdb\u884c\u6c42\u89e3\u3002\u4f46\u662f\u5b83\u6709\u4e00\u4e2a\u4e0d\u4e3a\u94fe\u7684\u6027\u8d28\u3002  \n\u6211\u4eec\u53d1\u73b0\u4e00\u65e6\u6709\u8fd9\u4e2a\u6027\u8d28\uff0c\u90a3\u4e48\u5728\u539f Kruskal \u91cd\u6784\u6811\u4e2d\u6ca1\u6709\u5375\u7528\u7684\u8fb9\u53ef\u4ee5\u53d8\u5f97\u6709\u7528\u4e86\uff0c\u56e0\u4e3a\u5176\u867d\u7136\u5bf9\u8fde\u901a\u5757\u6ca1\u6709\u8d21\u732e\u4f46\u5bf9\u662f\u5426\u4e3a\u94fe\u662f\u6709\u8d21\u732e\u7684\u3002  \n\u9a6c\u4e0a\u5c31\u53ef\u4ee5\u60f3\u5230\u5148\u628a\u8fd9\u4e9b\u539f\u672c\u6ca1\u7528\u7684\u8fb9\u4e5f\u52a0\u5230\u91cd\u6784\u6811\u4e2d\u53bb\uff0c\u53cd\u6b63\u4e0d\u4f1a\u5f71\u54cd\u91cd\u6784\u6811\u7684\u539f\u672c\u6027\u8d28\uff08\u6613\u8bc1\uff09\u3002  \n\u7136\u540e\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u91cd\u6784\u6811\u4e0a\u7684\u70b9\u7ef4\u62a4\u4e00\u4e0b\u5b83\u6240\u4ee3\u8868\u7684\u8fde\u901a\u5757\u662f\u5426\u4e3a\u94fe\uff0c\u8fd9\u4e2a\u8bb0\u5f55\u4e00\u4e0b\u94fe\u7684\u5934\u5c3e\u7136\u540e\u5408\u5e76\u7684\u65f6\u5019\u5224\u65ad\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\uff0c\u6613\u53d1\u73b0\u5982\u679c\u4e3a\u94fe\u8be5\u70b9\u6743\u503c\u4e3a 0\uff0c\u5426\u5219\u4e3a 1 \u7684\u8bdd\u8fd9\u68f5\u6811\u4f9d\u7136\u662f\u4e00\u4e2a\u5927\u6839\u5806\uff0c\u6240\u4ee5\u5982\u679c\u4e00\u4e2a\u70b9\u4e3a\u94fe\uff0c\u90a3\u4e48\u6240\u6709\u5176\u5b50\u8282\u70b9\u90fd\u4e3a\u94fe\u3002  \n\u73b0\u5728\u6211\u4eec\u62ff\u5230\u4e00\u4e2a\u70b9\u5bf9\uff0c\u9996\u5148\u6309\u7167\u4e00\u822c\u6d41\u7a0b\u5904\u7406\u8fde\u901a\uff0c\u4e5f\u5c31\u662f\u5728\u91cd\u6784\u6811\u4e0a\u627e\u5230\u4e24\u70b9 LCA\u3002\u7136\u540e\u6211\u4eec\u8981\u6c42\u79bb\u8fd9\u4e2a LCA \u6700\u8fd1\u7684\u7236\u4eb2\u3002\u4f9d\u7167\u4e4b\u524d\u7684\u63a8\u8bba\uff0c\u4e00\u4e2a\u70b9\u5982\u679c\u662f\u94fe\uff0c\u5176\u6240\u6709\u5b50\u8282\u70b9\u90fd\u7528\u4e0d\u4e86\uff0c\u53ef\u4ee5\u76f4\u63a5\u4e8c\u5206\u6b65\u6570\u5957\u4e00\u4e2a\u500d\u589e\u89e3\u51b3\u3002  \ntips\uff1a\u8fd9\u4e2a\u4e8c\u5206\u5982\u679c\u5206\u5230\u4e86\u4e00\u4e2a\u6bd4\u5176\u6df1\u5ea6\u8fd8\u8981\u6df1\u7684\u6b65\u6570\uff0c\u90a3\u4e48 $r=mid-1$ \u3002\u548c\u53d1\u73b0\u4e3a\u94fe\u7684 $l=mid+1$ \u4e0d\u4e00\u6837\uff0c\u8fd9\u70b9\u9700\u8981\u6ce8\u610f\u4e00\u4e0b\u3002  \ncode\uff1a  \n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN=4e5+10;\nint n,m;int f[MAXN];\nstruct EDGE{int u,v,w;}edge[MAXN];\nint st[MAXN][21];int fa[MAXN];int value[MAXN];\nint root;int son[MAXN][2];bool chain[MAXN];\nint s[MAXN];int t[MAXN];int deep[MAXN];\nint find(int x){\n\tif(fa[x]==x)return x;\n\telse return fa[x]=find(fa[x]);\n}\nvoid merge(int x,int y,int i){\n\tfa[x]=y;\n\tif(s[y]==0&&t[y]==0){\n\t\tchain[y]=chain[x];\n\t\ts[y]=s[x];t[y]=t[x];\n\t\treturn;\n\t}\n\tif(chain[x]&&chain[y]){\n\t\tif(s[x]==edge[i].u&&t[y]==edge[i].v)t[y]=t[x];\n\t\telse if(s[x]==edge[i].v&&t[y]==edge[i].u)t[y]=t[x];\n\t\telse if(t[x]==edge[i].u&&t[y]==edge[i].v)t[y]=s[x];\n\t\telse if(t[x]==edge[i].v&&t[y]==edge[i].u)t[y]=s[x];\n\t\telse if(s[x]==edge[i].u&&s[y]==edge[i].v)s[y]=t[x];\n\t\telse if(s[x]==edge[i].v&&s[y]==edge[i].u)s[y]=t[x];\n\t\telse if(t[x]==edge[i].u&&s[y]==edge[i].v)s[y]=s[x];\n\t\telse if(t[x]==edge[i].v&&s[y]==edge[i].u)s[y]=s[x];\n\t\telse chain[y]=0;\n\t}else{\n\t\tchain[y]=0;s[y]=t[y]=-1;\n\t}\n}\nbool cmp(EDGE a,EDGE b){return a.w<b.w;}\nvoid dfs(int u){\n\t//cout<<u<<\" \"<<son[u][0]<<\" \"<<son[u][1]<<endl;\n\tdeep[u]=deep[f[u]]+1;\n\tst[u][0]=f[u];\n\tfor(int i=1;i<=20;i++)st[u][i]=st[st[u][i-1]][i-1];\n\tif(son[u][0])dfs(son[u][0]);\n\tif(son[u][1])dfs(son[u][1]);\n}\nint LCA(int x,int y){\n\tif(deep[x]<deep[y])swap(x,y);\n\tfor(int i=20;i>=0;i--){\n\t\tif(deep[st[x][i]]>=deep[y])x=st[x][i];\n\t}\n\tif(x==y)return x;\n\tfor(int i=20;i>=0;i--){\n\t\tif(st[x][i]!=st[y][i]){\n\t\t\tx=st[x][i];y=st[y][i];\n\t\t}\t\n\t}\n\treturn f[x];\n}\nvoid init(int N,int M,vector <int> U,vector <int> V,vector <int> W){\n\tn=N;m=M;\n\tfor(int i=0;i<m;i++)\n\t\tedge[i+1]=(EDGE){U[i]+1,V[i]+1,W[i]};\n\tfor(int i=1;i<=n+m;i++)fa[i]=i;\n\tfor(int i=1;i<=n;i++)chain[i]=1,s[i]=i,t[i]=i;\n\tsort(edge+1,edge+1+m,cmp);\n\tfor(int i=1;i<=m;i++){\n\t\tint x=find(edge[i].u);\n\t\tint y=find(edge[i].v);\n\t\tvalue[i+n]=edge[i].w;\n\t\tif(x==y){\n\t\t\tf[x]=i+n;son[i+n][0]=x;\n\t\t\tmerge(x,i+n,i);chain[i+n]=0;\n\t\t\tcontinue;\n\t\t}\n\t\tf[x]=f[y]=i+n;son[i+n][0]=x;son[i+n][1]=y;\n\t\tmerge(x,i+n,i);\n\t\tmerge(y,i+n,i);\n\t}\n\t//for(int i=1;i<=m;i++)cout<<edge[i].u<<\" \"<<edge[i].v<<\" \"<<chain[i+n]<<endl;\n\tdfs(n+m);\n}\nint res;\nint check(int x,int y){\n\tfor(int i=20;i>=0;i--){\n\t\tif(st[x][i]==0)continue;\n\t\tif((1<<i)<=y){\n\t\t\tx=st[x][i];y-=(1<<i);\n\t\t}\n\t}\n\tres=value[x];\n\tif(y)return -1;\n\tif(chain[x])return 0;\n\treturn 1;\n}\nint getMinimumFuelCapacity(int x,int y){\n\tx++;y++;\n\tint lca=LCA(x,y);\n\t//cout<<lca<<endl;\n\tint l=0;int r=n;\n\twhile(l<r){\n\t\tint mid=(l+r)/2;\n\t\tint c=check(lca,mid);\n\t\tif(c==-1)r=mid-1;\n\t\tif(c==0)l=mid+1;\n\t\tif(c==1)r=mid;\n\t}\n\tif(check(lca,l)!=1)return -1;\n\tcheck(lca,l);\n\treturn res;\n}\n//int main(){\n//\tint n,m,q,u,v,w;\n//\tvector <int> U;U.clear();\n//\tvector <int> V;V.clear();\n//\tvector <int> W;W.clear();\n//\tcin>>n>>m;\n//\tfor(int i=1;i<=m;i++){\n//\t\tcin>>u>>v>>w;\n//\t\tU.push_back(u);\n//\t\tV.push_back(v);\n//\t\tW.push_back(w);\n//\t}\n//\tinit(n,m,U,V,W);\n//\tcin>>q;\n//\tfor(int i=1;i<=q;i++){\n//\t\tcin>>u>>v;\n//\t\tcout<<getMinimumFuelCapacity(u,v)<<endl;\n//\t}\n//\treturn 0;\n//}\n```\n",
        "postTime": 1650978755,
        "uid": 213173,
        "name": "\u5c0f\u6728\u866b",
        "ccfLevel": 4,
        "title": "\u3010APIO\u5907\u6218\u8ba1\u5212\u3011APIO2020 \u4ea4\u6362\u57ce\u5e02"
    },
    {
        "content": "\u524d\u7f6e\u7b97\u6cd5:kruskal\u91cd\u6784\u6811(\u5305\u542b kruskal\u89e3\u6700\u5c0f\u751f\u6210\u6811(\u7528\u5230\u4e86\u5e76\u67e5\u96c6))\u3002\n\n\u672c\u9898\u89e3\u4e2d\u6700\u77ed\u8def\u5b9a\u4e49\u4e3a\u6700\u5927\u503c\u6700\u5c0f\u7684\u8def\u3002\n\n\u7b2c\u4e00\u8f86\u8f66\u80af\u5b9a\u8d70\u6700\u77ed\u8def\u3002\u73b0\u5728\u8981\u8003\u8651\u7b2c\u4e8c\u8f86\u8f66\u5982\u4f55\u8d70\u3002\n\n\u6709\u4e24\u79cd\u7c7b\u578b:\u907f\u8ba9 \u6216 \u65b0\u8d70\u4e00\u6761\u8def\u3002\n\n\u907f\u8ba9:\u6307\u4e24\u8f86\u8f66\u8d70\u540c\u4e00\u6761\u8def\u3002\u4f46\u7b2c\u4e8c\u8f86\u8f66\u8981\u5728\u4e2d\u9014\u5bf9\u7b2c\u4e00\u8f86\u8f66\u907f\u8ba9\u3002\u6bd4\u5982\u5bf9\u4e8e\u4e0b\u56fe:\n\n```\n0-1-2\n  |\n  3\n```\n\u5bf9\u4e8e\u8fd9\u5f20\u56fe\uff0c\u7b2c\u4e00\u8f86\u8f66\u548c\u7b2c\u4e8c\u8f86\u8f66\u90fd\u8981\u8d70 0-1-2\uff0c\u4f46\u7b2c\u4e8c\u8f86\u4e2d\u9014\u9700\u53bb $3$ \u7ed3\u70b9\u907f\u8ba9\u4ee5\u514d\u649e\u8f66\u3002\n\n\u5f88\u5bb9\u6613\u89c2\u5bdf\u5230\u907f\u8ba9\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u5ea6\u6570\u5927\u4e8e $2$ \u7684\u7ed3\u70b9\u624d\u884c\u3002\u6b64\u65f6\u5efa kruskal\u91cd\u6784\u6811\u3002\u4f46\u662f\u9047\u5230\u5ea6\u5927\u4e8e $2$ \u7684\u7ed3\u70b9\u5c31\u8981\u6807\u8bb0\uff0c\u8868\u793a\u8fd9\u4e2a\u70b9\u53ef\u7528\uff0c\u6c42 lca \u65f6\u5fc5\u987b\u8981\u627e\u5230\u88ab\u6807\u8bb0\u8fc7\u7684\u7956\u5148\u4fdd\u8bc1\u53ef\u4ee5\u907f\u8ba9\u3002\n\n\u5982\u4f55\u627e\u5ea6>2\u7684\u70b9\u5f88\u5bb9\u6613\uff0c\u521d\u59cb $\\text{\u6240\u6709\u5ea6\u6570=0}$\uff0c\u7136\u540e\u52a0\u4e00\u6761\u8fb9\u5c06\u4e24\u4e2a\u7aef\u70b9\u7684\u5ea6\u6570\u81ea\u589e $1$\uff0c\u7136\u540e\u82e5\u5176\u4e2d\u6709\u4e00\u4e2a\u5ea6\u6570\u5927\u4e8e $2$ \u5c31\u53ef\u4ee5\u6807\u8bb0\u4e86\u3002\n\n\u6bd4\u5982\uff0c\u8fd8\u662f\u5bf9\u4e8e\u4e0a\u9762\u90a3\u5f20\u56fe\uff0c\u6784\u5efa\u51fa\u91cd\u6784\u6811(\u5c0f\u62ec\u53f7\u8868\u793a\u91cd\u6784\u7684\u70b9\uff0c\u4e2d\u62ec\u53f7\u8868\u793a\u88ab\u6807\u8bb0\u7684\u70b9):\n```\n   [6]\n   / \\\n (5)  3\n / \\\n(4) 2\n/ \\\n0  1\n```\n\u6b64\u65f6\uff0c\u4e24\u8f86\u8f66\u5206\u522b\u5728 $0$ \u548c $1$\uff0c\u6c42\u51fa $lca(0,1)=4$\uff0c\u4f46 $4$ \u65e0\u6807\u8bb0\uff0c\u4e0d\u80fd\u4f5c\u4e3a\u67e5\u8be2\u7684\u70b9\u3002\u6b64\u65f6\u8981\u627e\u5230 lca \u7684\u6700\u8fd1\u88ab\u6807\u8bb0\u8fc7\u7684\u7956\u5148\uff0c\u5373 $6$\u3002\n\n\u65b0\u8def:\u6307\u4e24\u6761\u4e0d\u540c\u7684\u8def\u3002\n\n\u6bd4\u5982:\n```\n0-1\n| |\n2-3\n```\n\u7b2c\u4e00\u8f86\u8d70 0-1-3\uff0c\u7b2c\u4e8c\u8f86\u8d70 3-2-0 \u3002\u8fd9\u5c31\u662f\u4e0d\u540c\u7684\u8def\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u4e0d\u540c\u7684\u4e24\u6761\u8def\u6784\u6210\u4e86\u4e00\u4e2a\u73af\u3002\u6240\u4ee5\u5c31\u8981\u6c42\u6700\u5c0f\u73af\u3002\n\n\u4e00\u6837\u8fd8\u662f kruskal\u91cd\u6784\u6811\uff0c\u6784\u6210\u73af\u5c31\u6807\u8bb0\u3002\n\n\u95ee\u9898\u662f\u600e\u4e48\u5224\u73af\u3002\u5e76\u67e5\u96c6\u5c31\u53ef\u4ee5\u5904\u7406\u3002\u82e5\u5e76\u67e5\u96c6\u4e2d\u7956\u5148\u76f8\u540c\u5219\u8fde\u6210\u4e86\u73af\u3002\u5982\u679c\u8fd9\u4e2a\u7956\u5148\u6ca1\u88ab\u6807\u8bb0\u8fc7\uff0c\u5219\u5c06\u5176\u6807\u8bb0\uff0c\u5e76\u6613\u5176\u70b9\u6743\u4e3a\u6b64\u8fb9\u6743\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\u3002\u5bf9\u4e8e\u8fd9\u5f20\u56fe\u3002\n```\n 0---(4)---1\n |         |\n(1)       (2)\n |         |\n 2---(3)---3\n ```\n\u5efa\u91cd\u6784\u6811(\u6ce8:\u4e3a\u65b9\u4fbf\uff0c\u91cd\u6784\u51fa\u6765\u7684\u70b9\u76f4\u63a5\u5199\u70b9\u6743\uff0c\u6ca1\u6807\u53f7\u4e86)\n```\n   [4]\n  /   \\\n(1)   (2)\n/ \\   / \\\n0  2  1  3\n```\n\u5bf9\u4e8e\u6700\u4e0a\u65b9\u7684\u70b9\uff0c\u672c\u6765\u8fb9\u6743\u4e3a $3$\uff0c\u65e0\u6807\u8bb0\u3002\u4f46\u52a0\u5165\u8fb9 $(0,1)$ \u540e\uff0c\u6784\u6210\u4e86\u73af\uff0c\u6545\u6807\u8bb0\uff0c\u5e76\u6539\u6743\u4e3a $4$\u3002\n\n\u6ce8\u610f:\u82e5\u4e00\u70b9\u88ab\u6807\u8bb0\uff0c\u5176\u6240\u6709\u7956\u5148\u90fd\u5fc5\u987b\u6807\u8bb0\u3002\u5173\u4e8e\u5982\u4f55\u5b9e\u73b0\uff0c\u89c1\u4ee3\u7801\u3002\n```cpp\n#include<iostream>\n#include<vector>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nstruct bian{ //\u90bb\u63a5\u8868\u3002\n\tint u,v,w;\n}_[1000005];\nstruct rule{ //\u6309\u8fb9\u6743\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\tbool operator()(const bian &s1,const bian &s2){\n\t\treturn s1.w<s2.w;\n\t}\n};\nint father[1000005]; //\u5e76\u67e5\u96c6\u3002\nint getfather(int iakioi){\n\tif(father[iakioi]==iakioi){\n\t\treturn iakioi;\n\t}\n\tfather[iakioi]=getfather(father[iakioi]);\n\treturn father[iakioi];\n}\nint a[1000005],du[1000005]; //a\u8868\u793a\u70b9\u91cd\u6784\u6811\u6743,du\u8868\u793a\u5ea6\u3002\nbool can[1000005]; //can\u8868\u793a\u6807\u8bb0\u6570\u7ec4\u3002\nstruct xyq{ //\u5b58\u91cd\u6784\u6811\u3002\n\tint v,next;\n}asdf[1000005];\nint head[1000005],tot=1;\nvoid add(int u,int v){\n\tasdf[tot].v=v;\n\tasdf[tot].next=head[u];\n\thead[u]=tot;\n\ttot++;\n}\nint depth[1000005],f[21][200005],dianshu,logn; //\u8282\u70b9\u6570\u3002 \nint getMinimumFuelCapacity(int b,int c){\n\tif(b==c){\n\t\treturn -1;\n\t}\n\tint i;\n\tif(depth[b]<depth[c]){ //\u628a\u6df1\u5ea6\u5927\u7684\u5f53\u505ab\u3002\u65b9\u4fbf\u500d\u589e\u3002\n\t\tswap(b,c);\n\t}\n\tfor(i=logn;i>=0;i--){ //\u5c06b\u8df3\u5230\u4e0ec\u6df1\u5ea6\u76f8\u540c\u3002\n\t\tif(depth[b]>(1<<i)&&depth[f[i][b]]>=depth[c]){\n\t\t\tb=f[i][b];\n\t\t}\n\t}\n\tfor(i=logn;i>=0;i--){ //\u6c42\u51falca\u3002\n\t\tif(f[i][b]!=f[i][c]){\n\t\t\tb=f[i][b];\n\t\t\tc=f[i][c];\n\t\t}\n\t}\n\tb=f[0][b]; //\u6b64\u523bb\u70b9\u4e3alca\u3002\n\tfor(i=logn;i>=0;i--){ //\u8df3\u5230\u88ab\u6807\u8bb0\u7684\u70b9\u3002\n\t\tif(depth[b]>(1<<i)&&!can[f[i][b]]){  //\u5982\u679c\u8fd9\u4e2a\u70b9\u6ca1\u6709\u88ab\u6807\u8bb0,\u5176\u5b50\u66f4\u4e0d\u53ef\u80fd\u88ab\u6807\u8bb0\u3002\u5c31\u8df3\u81f3\u6b64\u70b9\u3002\n\t\t\tb=f[i][b];\n\t\t}\n\t}\n\tif(!can[b]&&depth[b]>1){\n\t\tb=f[0][b];\n\t}\n\tif(can[b]){  //\u5982\u679c\u6240\u6709\u70b9\u5747\u4e3a\u88ab\u6807\u8bb0,\u5219\u65e0\u89e3,\u5426\u5219\u8fd4\u56de\u5bf9\u5e94\u6743\u503c\u3002\n\t\treturn a[b];\n\t}else{\n\t\treturn -1;\n\t}\n}\nvoid dfs(int iakioi,int step){\n\tdepth[iakioi]=step;\n\tint i;\n\tfor(i=head[iakioi];i>=0;i=asdf[i].next){\n\t\tdfs(asdf[i].v,step+1);\n\t}\n}\nvoid init(int n,int m,vector<int> u,vector<int> v,vector<int> w){\n\tdianshu=n;\n\tmemset(head,-1,sizeof(head));\n\ttot=1;\n\tint i,j,f1,f2,ykb=(n<<1);\n\tfor(logn=0;(1<<logn)<=n;logn++){\n\t}\n\tlogn++;\n\tfor(i=0;i<=ykb;i++){\n\t\tfather[i]=i;\n\t}\n\tfor(i=0;i<m;i++){\n\t\t_[i].u=u[i];\n\t\t_[i].v=v[i];\n\t\t_[i].w=w[i];\n\t}\n\tsort(_,_+m,rule());\n\tfor(i=0;i<m;i++){\n\t\tf1=getfather(_[i].u);\n\t\tf2=getfather(_[i].v);\n\t\tdu[_[i].u]++;\n\t\tdu[_[i].v]++;\n\t\tif(f1==f2){ //\u8bf4\u660e\u6784\u6210\u4e86\u73af\u3002\n\t\t\tif(!can[f1]){ //\u82e5\u672a\u6807\u8bb0,\u5219\u6807\u8bb0\u800c\u6613\u5176\u503c\u3002\n\t\t\t\tcan[f1]=1;\n\t\t\t\ta[f1]=_[i].w;\n\t\t\t}\n\t\t}else{\n\t\t\tfather[f1]=dianshu;\n\t\t\tfather[f2]=dianshu;\n\t\t\tadd(dianshu,f1);\n\t\t\tadd(dianshu,f2);\n\t\t\tf[0][f1]=dianshu;\n\t\t\tf[0][f2]=dianshu;\n\t\t\ta[dianshu]=_[i].w;\n\t\t\tcan[dianshu]=(du[_[i].u]>=3||du[_[i].v]>=3||can[f1]||can[f2]); //\u82e5\u513f\u5b50\u88ab\u6807\u8bb0,\u5219\u6b64\u70b9\u4e5f\u9700\u6807\u8bb0\u3002\u82e5\u5ea6>2,\u4ea6\u9700\u6807\u8bb0\u3002\n\t\t\tdianshu++;\n\t\t}\n\t}\n\tfor(i=dianshu-1;i>=0;i--){\n\t\tif(!depth[i]){\n\t\t\tdfs(i,1);\n\t\t}\n\t}\n\tfor(i=1;i<=logn;i++){\n\t\tfor(j=0;j<dianshu;j++){\n\t\t\tif(depth[j]>(1<<i)){\n\t\t\t\tf[i][j]=f[i-1][f[i-1][j]];\n\t\t\t}\n\t\t}\n\t}\n}\n//\u52a0\u4e0a\u4e0b\u9762\u7684\u8bed\u53e5\u53ef\u5c06\u6b64\u9898\u53d8\u4e3a\u4f20\u7edf\u9898,\u65b9\u4fbf\u8c03\u8bd5\u3002\n// vector<int> u,v,w;\n// int main(){\n// \tfreopen(\"1.in\",\"r\",stdin);\n// \tfreopen(\"1.out\",\"w\",stdout);\n// \tint n,m,q,i,A,B,C;\n// \tcin>>n>>m;\n// \tfor(i=0;i<m;i++){\n// \t\tcin>>A>>B>>C;\n// \t\tu.push_back(A);\n// \t\tv.push_back(B);\n// \t\tw.push_back(C);\n// \t}\n// \tinit(n,m,u,v,w);\n// \tcin>>q;\n// \tfor(i=0;i<q;i++){\n// \t\tcin>>A>>B;\n// \t\tcout<<getMinimumFuelCapacity(A,B)<<endl;\n// \t}\n// \treturn 0;\n// } \n```",
        "postTime": 1616858680,
        "uid": 87799,
        "name": "xh39",
        "ccfLevel": 0,
        "title": "p6765\u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e0d\u96be\u60f3\u5230\u7528\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6\u505a\uff0c\u4f46\u662f\u6211\u4eec\u8003\u8651\u5982\u4f55\u7528 Kruskal \u91cd\u6784\u6811\u6765\u505a\u3002\n\n\u9996\u5148\uff0c\u4e0d\u96be\u53d1\u73b0\u6700\u7ec8\u7b54\u6848\u548c Kruskal \u6709\u4e00\u5b9a\u5173\u7cfb\uff0c\u4f46\u662f\u6709\u53ef\u80fd\u7b54\u6848\u6bd4 Kruskal \u5927\uff0c\u800c\u4e14\u6211\u4eec\u5728\u505a Kruskal \u91cd\u6784\u6811\u7684\u65f6\u5019\u7ef4\u62a4\u70b9\u96c6\u5f53\u524d\u56fe\u662f\u5426\u4e3a\u4e00\u6761\u94fe\u3002\u6211\u4eec\u8fd9\u6837\u6765\u505a\uff1a\n\n\u6211\u4eec\u6309\u7167\u8fb9\u6743\u4ece\u5c0f\u5230\u5927\u6765\u505a\uff0c\u7136\u540e\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u5f53\u524d\u8fb9\u4e24\u7aef\u7684\u8fde\u901a\u5757\uff0c\u5982\u679c\u4e24\u7aef\u6709\u4e00\u4e2a\u4e0d\u662f\u94fe\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u6761\u8fb9\u7684\u6743\u503c\u6302\u5728\u8fd9\u4e2a\u70b9\u4e0a\uff0c\u5982\u679c\u4e24\u7aef\u90fd\u662f\u94fe\uff0c\u8fde\u8d77\u6765\u4e4b\u540e\u4e0d\u662f\uff0c\u6211\u4eec\u4ecd\u7136\u8fd9\u6837\u505a\uff0c\u5426\u5219\u6211\u4eec\u4ec0\u4e48\u90fd\u4e0d\u505a\uff0c\u7ef4\u62a4\u8fd9\u6761\u94fe\u5c31\u884c\u3002\u5982\u679c\u4e00\u6761\u8fb9\u4e24\u8fb9\u70b9\u5c5e\u4e8e\u540c\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u6211\u4eec\u5c31\u66f4\u65b0\u5f53\u524d lca \u4e0a\u7684\u7b54\u6848\u5373\u53ef\u3002\n\n\u7136\u540e\u6211\u4eec\u4ece\u4e0a\u9762\u5f80\u4e0b dfs\uff0c\u5982\u679c\u7236\u4eb2\u6709\u503c\uff0c\u513f\u5b50\u6ca1\u6709\u503c\uff0c\u6211\u4eec\u76f4\u63a5\u8986\u76d6\u3002\n\n\u8003\u8651\u8fd9\u4e48\u505a\u7684\u6b63\u786e\u6027\uff0c\u5f53\u4e00\u4e2a\u4e24\u4e2a\u8fde\u901a\u5757\u5408\u5e76\u4e3a\u975e\u94fe\u7684\u65f6\u523b\uff0c\u5f53\u524d\u7684\u6743\u503c\u4e00\u5b9a\u662f\u6700\u4f18\u7684\uff0c\u5426\u5219\u4e0d\u7b26\u5408 Kruskal \u91cd\u6784\u6811\u7684\u6027\u8d28\uff0c\u5982\u679c\u4e00\u76f4\u662f\u94fe\uff0c\u5230\u67d0\u4e00\u6761\u8fb9\u7684\u65f6\u5019\u4e0d\u662f\u94fe\u4e86\uff0c\u90a3\u4e48\u4e4b\u524d\u7684\u7b54\u6848\u4e5f\u4e00\u5b9a\u662f\u8fd9\u6761\u8fb9\u7684\u6743\u503c\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u8981\u628a\u7b54\u6848\u5f80\u4e0b\u63a8\u3002 \n\n\u7136\u540e\u6211\u4eec\u76f4\u63a5\u6811\u5256\uff0c\u6c42 lca \u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n```c++\n#include<bits/stdc++.h>\n// #include\"swap.h\"\n#define dd double\n#define ld long double\n#define ll long long\n#define uint unsigned int\n#define ull unsigned long long\nusing namespace std;\n\nconst int maxn=200010;\nconst int INF=0x3f3f3f3f;\n\ntemplate<typename T> inline void read(T &x) {\n    x=0; int f=1;\n    char c=getchar();\n    for(;!isdigit(c);c=getchar()) if(c == '-') f=-f;\n    for(;isdigit(c);c=getchar()) x=x*10+c-'0';\n    x*=f;\n}\n\nstruct edge{\n    int from,to,next,w;\n    inline void Init(int fr_,int to_,int ne_){\n        from=fr_;to=to_;next=ne_;\n    }\n    inline bool operator < (const edge &b)const{return w<b.w;}\n}li[maxn<<2],li2[maxn<<2];\nint head[maxn],tail;\n\ninline void Add(int from,int to){\n    li[++tail].Init(from,to,head[from]);\n    head[from]=tail;\n}\n\nint fa[maxn<<1],now,n,m;\nint Ans[maxn<<1],P[maxn<<1][2],Tag[maxn<<1];\n\ninline int Find(int x){return x==fa[x]?x:fa[x]=Find(fa[x]);}\n\ninline bool IsNotThePoint(int p,int top){\n    return p!=P[top][0]&&p!=P[top][1];\n}\n\ninline int OtherPoint(int p,int top){\n    if(p==P[top][0]) return P[top][1];\n    else return P[top][0];\n}\n\ninline void dfs(int k){\n    for(int x=head[k];x;x=li[x].next){\n        int to=li[x].to;\n        if(Ans[k]&&!Ans[to]) Ans[to]=Ans[k];\n        dfs(to);\n    }\n}\n\nint Top[maxn],Dep[maxn],Size[maxn],Son[maxn],Fa[maxn];\n\ninline void dfs1(int k,int fat){\n    Dep[k]=Dep[fat]+1;Size[k]=1;Fa[k]=fat;\n    for(int x=head[k];x;x=li[x].next){\n        int to=li[x].to;\n        dfs1(to,k);Size[k]+=Size[to];\n        if(Size[Son[k]]<Size[to]) Son[k]=to;\n    }\n}\n\ninline void dfs2(int k,int t){\n    Top[k]=t;\n    if(Son[k]) dfs2(Son[k],t);\n    for(int x=head[k];x;x=li[x].next){\n        int to=li[x].to;\n        if(to==Son[k]) continue;\n        dfs2(to,to);\n    }\n}\n\ninline int GetLca(int a,int b){\n    while(Top[a]!=Top[b]){\n        if(Dep[Top[a]]<Dep[Top[b]]) swap(a,b);\n        a=Fa[Top[a]];\n    }\n    if(Dep[a]>Dep[b]) swap(a,b);\n    return a;\n}\n\ninline void Kruskal(){\n    sort(li2+1,li2+m+1);\n    for(int i=1;i<=(n<<1);i++){\n        fa[i]=i;Tag[i]=-1;P[i][0]=P[i][1]=i;\n    }\n    for(int i=1;i<=m;i++){\n        int faa=Find(li2[i].from),fab=Find(li2[i].to);\n        if(faa==fab){\n            if(Ans[faa]) continue;\n            Tag[faa]=2;Ans[faa]=li2[i].w;\n        }   \n        else{\n            now++;\n            fa[faa]=now;fa[fab]=now;Add(now,faa);Add(now,fab);\n            if(Tag[faa]==2||Tag[fab]==2||(IsNotThePoint(li2[i].from,faa)||IsNotThePoint(li2[i].to,fab))){\n                if(Ans[now]) continue;\n                Ans[now]=li2[i].w;Tag[now]=2;\n            }\n            else{\n                P[now][0]=OtherPoint(li2[i].from,faa);\n                P[now][1]=OtherPoint(li2[i].to,fab);\n                Tag[now]=1;\n            }\n        } \n    }\n    dfs(now);dfs1(now,0);dfs2(now,now);\n}\n\nvoid init(int N, int M, std::vector<int> U, std::vector<int> V, std::vector<int> W){\n    n=N;m=M;\n    for(int i=1;i<=M;i++){\n        li2[i].from=U[i-1];li2[i].to=V[i-1];li2[i].w=W[i-1];\n        li2[i].from++;li2[i].to++;\n    }\n    now=N;Kruskal();\n}\n\nint getMinimumFuelCapacity(int X, int Y){\n    X++;Y++;\n    int lca=GetLca(X,Y);\n    return (!Ans[lca])?-1:Ans[lca];\n}\n\n// inline void Init(){\n//     read(n);read(m);\n//     for(int i=1;i<=m;i++){\n//         read(li2[i].from);read(li2[i].to);read(li2[i].w);\n//         li2[i].from++;li2[i].to++;\n//     }\n//     now=n;Kruskal();\n// }\n\n// int main(){\n//     freopen(\"my.in\",\"r\",stdin);\n//     freopen(\"my.out\",\"w\",stdout);\n//     Init();\n//     int Q;read(Q);\n//     for(int i=1;i<=Q;i++){\n//         int a,b;read(a);read(b);\n//         a++;b++;\n//         printf(\"%d\\n\",getMinimumFuelCapacity(a,b));\n//     }\n//     return 0;\n// }\n```\n\n",
        "postTime": 1635767679,
        "uid": 194093,
        "name": "\u5929\u68a6",
        "ccfLevel": 6,
        "title": "P6765 [APIO2020]\u4ea4\u6362\u57ce\u5e02"
    }
]