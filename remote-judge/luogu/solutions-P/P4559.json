[
    {
        "content": "### \u9898\u610f\u7b80\u8ff0\uff1a\n\n\u6709 $n$ \u4e2a\u5b66\u751f\uff0c\u7f16\u53f7\u4e3a $i$ \u7684\u5b66\u751f\u6709\u4e00\u4e2a\u4f4d\u7f6e $a_i$\u3002\n\n\u6709 $m$ \u4e2a\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7f16\u53f7\u5728 $[l,r]$ \u533a\u95f4\u5185\u7684\u5b66\u751f\u8dd1\u5230\u533a\u95f4 $[k,k+r-l]$ \u4e2d\u7684\u4f4d\u7f6e\u82b1\u8d39\u7684\u8ddd\u79bb\u603b\u548c\u7684\u6700\u5c0f\u503c\u3002\n\n\u6bcf\u4e2a\u5b66\u751f\u7684\u521d\u59cb\u4f4d\u7f6e\u4e92\u4e0d\u76f8\u540c\uff0c\u6700\u7ec8\u5230\u8fbe\u7684\u4f4d\u7f6e\u4e5f\u5fc5\u987b\u4e92\u4e0d\u76f8\u540c\u3002\n\n### \u9898\u89e3\uff1a\n\n\u4e0d\u96be\u8bc1\u660e\uff0c\u5b66\u751f\u8dd1\u5230\u6700\u7ec8\u7684\u4f4d\u7f6e\u65f6\uff0c\u4ed6\u4eec\u7684\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u6539\u53d8\u81f3\u5c11\u662f\u6700\u4f18\u89e3\u4e4b\u4e00\uff0c\u8fd9\u53ef\u4ee5\u8111\u8865\u4e00\u4e0b\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u6c42\u6700\u7ec8\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u53d8\u65f6\u7684\u7b54\u6848\u5373\u53ef\u3002\n\n\u56e0\u4e3a\u5b66\u751f\u4e24\u4e24\u4f4d\u7f6e\u4e0d\u540c\uff0c\u6240\u4ee5\u6700\u7ec8\u6709\u4e00\u90e8\u5206\u5b66\u751f\u5411\u53f3\u8dd1\uff0c\u6709\u4e00\u90e8\u5206\u5b66\u751f\u5411\u5de6\u8dd1\u3002\n\n\u5411\u53f3\u8dd1\u7684\u5b66\u751f\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u662f $k+rk_i-1-a_i$\uff0c$rk_i$ \u8868\u793a\u4ed6\u7684\u4f4d\u7f6e\u5728\u8fd9\u4e2a\u7f16\u53f7\u533a\u95f4\u4e2d\u7684\u5b66\u751f\u662f\u7b2c $rk_i$ \u5c0f\u7684\u3002\n\n\u5411\u5de6\u8dd1\u7684\u5b66\u751f\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u662f $a_i-k-rk_i+1$\u3002\n\n\u663e\u7136\u5de6\u8fb9\u4e00\u90e8\u5206\u5b66\u751f\u5411\u53f3\u8dd1\uff0c\u53f3\u8fb9\u4e00\u90e8\u5206\u5b66\u751f\u5411\u5de6\u8dd1\u3002\n\n\u8003\u8651\u4f7f\u7528\u4e3b\u5e2d\u6811\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u5bf9\u6743\u503c\u7ebf\u6bb5\u6811\u8fdb\u884c\u53ef\u6301\u4e45\u5316\uff0c\u5219\u7f16\u53f7\u533a\u95f4\u5185\u7684\u5b66\u751f\u5c31\u662f\u4e24\u4e2a\u7ebf\u6bb5\u6811\u76f8\u51cf\u3002\n\n\u8003\u8651\u9012\u5f52\u8fdb\u4e00\u4e2a\u533a\u95f4 $[l,r]$\uff0c\u6709 $4$ \u79cd\u60c5\u51b5\u3002\n\n1. \u8fd9\u4e2a\u533a\u95f4\u4e2d\u6ca1\u6709\u5b66\u751f\u3002\u76f4\u63a5\u8fd4\u56de $0$\u3002\n\n2. \u8fd9\u4e2a\u533a\u95f4\u4e2d\u7684\u5b66\u751f\u5168\u90e8\u5f80\u53f3\u8dd1\u3002\u8fd4\u56de $(\\sum k+rk_i-1)-(\\sum a_i)$\uff0c\u5de6\u8fb9\u662f\u7b49\u5dee\u6570\u5217\u6c42\u548c\u7684\u5f62\u5f0f\uff0c\u53f3\u8fb9\u53ef\u4ee5\u76f4\u63a5\u8bb0\u3002\n\n3. \u8fd9\u4e2a\u533a\u95f4\u4e2d\u7684\u5b66\u751f\u5168\u90e8\u5f80\u5de6\u8dd1\u3002\u8fd4\u56de $(\\sum a_i)-(\\sum k+rk_i-1)$\u3002\n\n4. \u4e0d\u80fd\u786e\u5b9a\u8fd9\u4e2a\u533a\u95f4\u4e2d\u7684\u5b66\u751f\u7684\u65b9\u5411\uff0c\u9012\u5f52\u5230\u5b50\u6811\u5904\u7406\u3002\n\n\u76f4\u63a5\u5728\u4e3b\u5e2d\u6811\u4e0a\u5b9e\u73b0\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n+m\\log n\\times\\text{wys})$\uff0c\u56e0\u4e3a\u6211\u4e0d\u4f1a\u5206\u6790\u9012\u5f52\u7684\u590d\u6742\u5ea6\uff0c\u53ef\u80fd\u662f $O(m\\log n)$ \u7684\u3002\n\n```cpp\n#include <cstdio>\n\ntypedef long long LL;\nconst int MN = 500005;\nconst int MS = 11000005;\n\nint n, m, s = 1000000;\nint rt[MN];\nint ls[MS], rs[MS], mx[MS], mn[MS], sz[MS], cnt;\nLL sum[MS];\n\nvoid Add(int &rt, int l, int r, int p) {\n    ls[++cnt] = ls[rt], rs[cnt] = rs[rt], sz[cnt] = sz[rt] + 1, sum[cnt] = sum[rt] + p, rt = cnt;\n    if (l == r) return ;\n    int mid = l + r >> 1;\n    if (p <= mid) Add(ls[rt], l, mid, p);\n    else Add(rs[rt], mid + 1, r, p);\n}\n\nLL Qur(int rt1, int rt2, int l, int r, int f, int k) {\n    if (!(sz[rt1] - sz[rt2])) return 0;\n    LL Sz = sz[rt1] - sz[rt2], Sum = sum[rt1] - sum[rt2];\n    if (l >= k + f) return Sum - (2*k + 2*f + Sz - 1) * Sz / 2;\n    if (r <= k + f + Sz - 1) return (2*k + 2*f + Sz - 1) * Sz / 2 - Sum;\n    int mid = l + r >> 1, lsz = sz[ls[rt1]] - sz[ls[rt2]];\n    return Qur(ls[rt1], ls[rt2], l, mid, f, k) + Qur(rs[rt1], rs[rt2], mid + 1, r, f + lsz, k);\n}\n\nint main() {\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 1, x; i <= n; ++i) {\n        scanf(\"%d\", &x);\n        Add(rt[i] = rt[i - 1], 1, s, x);\n    }\n    for (int i = 1, l, r, k; i <= m; ++i) {\n        scanf(\"%d%d%d\", &l, &r, &k);\n        printf(\"%lld\\n\", Qur(rt[r], rt[l - 1], 1, s, 0, k));\n    }\n    return 0;\n}\n```",
        "postTime": 1547204659,
        "uid": 10703,
        "name": "\u5c0f\u7c89\u5154",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4559 \u3010[JSOI2018]\u5217\u961f\u3011"
    },
    {
        "content": "\n\u697c\u4e0b\u9898\u89e3\u5199\u7684\u4ec0\u4e48\u554a2333\u2026\u2026~~(\u53ef\u80fd\u8fd9\u5c31\u662fdalao\u7684\u601d\u8def\u5427)~~\n\n\u83dc\u7684\u4e0d\u884c\u7684\u6211\u6765\u5199\u4e00\u53d1\u9898\u89e3\u597d\u4e86\n______________________________________\n\n### \u524d\u7f6e\u829d\u58eb:\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811/\u4e3b\u5e2d\u6811\n\n\u4e0d\u4f1a\u8fd9\u4e2a\u4e1c\u897f\u7684\u8bdd\u53ef\u4ee5\u51fa\u95e8\u5de6\u8f6cluogu\u6a21\u677f\u533a\uff0c\u5305\u6559\u5305\u4f1a\n\n## \u672c\u9898\u9898\u89e3\n\n\u9898\u76ee\u610f\u601d\u7b80\u5355\u660e\u4e86\uff0c\u5c31\u662f\u6bcf\u6b21\u8be2\u95ee\u4e00\u4e2a\u533a\u95f4\u7684\u4eba\u5728k\u8fd9\u4e2a\u4f4d\u7f6e\u96c6\u5408\u7684\u6700\u5c0f\u4f53\u529b\u6d88\u8017\n\n\u90a3\u4e48\u6839\u636e\u6392\u5e8f\u4e0d\u7b49\u5f0f\u8fd8\u662f\u522b\u7684\u4ec0\u4e48\u4e1c\u897f\u603b\u4e4b\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7ed3\u8bba\u5c31\u662f$[l,r]$\u4e2d\u4f4d\u7f6e\u7b2c\u4e00\u5c0f\u7684\u4eba\u8dd1\u5230\u7b2cK\u4e2a\u4f4d\u7f6e\uff0c\u7b2c\u4e8c\u5c0f\u7684\u4eba\u8dd1\u5230k+1,\u7b2c3\u5c0f\u7684\u4eba\u8dd1\u5230k+2\u2026\u2026\u5982\u6b64\u8fd9\u822c\u4e00\u76f4\u5230\u4f4d\u7f6e\u6700\u5927\u7684\u4eba\u8dd1\u5230\u7b2cK+r-l\u4e2a\u4f4d\u7f6e\uff0c\u8fd9\u6837\u8fdb\u884c\u5217\u961f\u4f53\u529b\u503c\u6d88\u8017\u4e4b\u548c\u4e00\u5b9a\u662f\u6700\u5c0f\u7684\n\n\u8bc1\u660e\u7684\u8bdd\u5927\u6982\u5c31\u662f\u5047\u8bbe\u6709\u4e24\u4e2a\u4eba\u662f\u9006\u5e8f\u5217\u961f\u7684(\u4e5f\u5c31\u662f\u539f\u6765\u4f4d\u7f6e\u9760\u524d\u7684\u4eba\u7ad9\u5230\u4e86\u540e\u9762)\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e24\u4e2a\u4eba\u8fdb\u884c\u4ea4\u6362\u4ece\u800c\u4f7f\u5f97\u603b\u4ee3\u4ef7\u66f4\u52a0\u5c11\n\n\u800c\u6211\u4eec\u53d1\u73b0\u53e6\u5916\u4e00\u4e2a\u975e\u5e38\u6709\u8da3\u7684\u6027\u8d28\u5c31\u662f\u5728\u8fd9\u4e2a\u5217\u961f\u8fc7\u7a0b\u4e2d\uff0c\u5b58\u5728\u4e00\u4e2a\u5206\u754c\u70b9mid\u4f7f\u5f97mid\u5de6\u8fb9\u7684\u4eba\u90fd\u5411\u53f3\u8dd1\uff0cmid\u53f3\u8fb9\u7684\u4eba\u90fd\u5411\u5de6\u8dd1\n\n\u8bc1\u660e\u7684\u8bdd\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u753b\u4e00\u753b\u56fe\uff0c\u7136\u540e\u5c31\u4f1a\u53d1\u73b0\u56e0\u4e3a\u96c6\u5408\u7684\u533a\u57df\u662f\u8fde\u7eed\u7684\u4e00\u6bb5\u533a\u95f4\uff0c\u56e0\u6b64\u662f\u4e0d\u4f1a\u5b58\u5728\u90a3\u79cd\u4e00\u4e9b\u4eba\u5411\u53f3\u8dd1\u4e4b\u540e\u53c8\u4e00\u4e9b\u5411\u5de6\u8dd1\u53c8\u4e00\u4e9b\u4eba\u5411\u53f3\u8dd1\u7684\u60c5\u51b5\u7684\n\n\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u5047\u5982\u8bf4\u6211\u4eec\u6709\u4e00\u4e2a\u795e\u5947\u7684\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u8ba9\u6211\u4eec\u77e5\u9053\u6709\u591a\u5c11\u4e2a\u4eba\u5411\u53f3\u8dd1\u4e86\uff0c\u5047\u8bbe\u8fd9\u4e9b\u4eba\u96c6\u5408\u5728\u4e86$[K,K+s]$\u8fd9\u4e2a\u533a\u95f4\u7684\u8bdd\uff0c\u6839\u636e\u521a\u624d\u7684\u7ed3\u8bba\u6211\u4eec\u77e5\u9053\u4e00\u5b9a\u662f\u4f4d\u7f6e\u6700\u9760\u524d\u7684\u524d$s+1$\u7684\u4eba\u5411\u53f3\u8dd1\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0d\u600e\u4e48\u8d1f\u8d23\u4efb\u7684\u5217\u51fa\u8fd9\u6837\u7684\u4e00\u4e2a\u5f0f\u5b50\uff0c\u5b83\u8868\u793a\u6240\u6709\u5411\u53f3\u8dd1\u7684\u4eba\u7684\u4f53\u529b\u6d88\u8017\u4e4b\u548c(\u5bf9\u4e8e\u8fd9\u4e2a\u5f0f\u5b50\u610f\u4f1a\u4e00\u4e0b\u5c31\u597d\u5b83\u5e76\u4e0d\u4e25\u8c28)\n\n$$\\sum_{i}|a_{i}-K+i|$$\n\n\u7136\u540e\u6211\u4eec\u62c6\u4e00\u4e0b\u2211\u7684\u8bdd\u4f1a\u53d8\u6210\u8fd9\u4e2a\u5f0f\u5b50:(\u7531\u4e8e\u90fd\u662f\u5411\u53f3\u8dd1\uff0c\u56e0\u6b64\u7edd\u5bf9\u503c\u53f7\u88ab\u62c6\u6389\u4e4b\u540e\u8981\u53d6\u8d1f\u53f7)\n\n$$\\sum_{i=K}^{K+s}i-\\sum_{i}a_{i}$$\n\n\u524d\u9762\u7684\u5f0f\u5b50\u662f\u4e2a\u7b49\u5dee\u6570\u5217\u6c42\u548c\u53ef\u4ee5$O(1)$\u7684\u7b97\u51fa\u6765\uff0c\u7136\u540e\u6211\u4eec\u73b0\u5728\u552f\u4e00\u8981\u505a\u7684\u5c31\u662f\u5feb\u901f\u7684\u7b97\u51fa\u6765$[l,r]$\u524d$s+1$\u5c0f\u6570\u5b57\u7684\u548c\u4e86\n\n__________________\n\n _\u5982\u679c\u770b\u61c2\u4e86\u524d\u9762\u7684\u90e8\u5206\u4e0d\u9700\u8981\u770b\u8fd9\u91cc_ \n \n \u540c\u7406\u6211\u4eec\u4f1a\u53d1\u73b0\u6070\u597d\u6709$r-l-s$\u4e2a\u4eba\u5411\u5de6\u8dd1\u4e86\uff0c\u8fd9\u90e8\u5206\u4ee3\u4ef7\u6211\u4eec\u4e5f\u53ef\u4ee5\u4e0d\u600e\u4e48\u8d1f\u8d23\u4efb\u7684\u5217\u4e00\u4e2a\u5f0f\u5b50\u51fa\u6765\n \n $$\\sum_{i}|a_{i}-K+i|$$\n \n \u53ea\u4e0d\u8fc7\u8fd9\u4f1a\u662f\u5411\u5de6\u8dd1\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u628a\u7edd\u5bf9\u503c\u7b26\u53f7\u62c6\u6389\uff0c\u5c31\u5f97\u5230\u4e86\u8fd9\u4e2a\u5f0f\u5b50\n \n $$\\sum_{i}a_{i}-\\sum_{i=K+s+1}^{K+r-l}i$$\n \n \u5f53\u7136\u540e\u8fb9\u7684\u5f0f\u5b50\u4f9d\u7136\u662f\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\u6c42\u548c\u7684\u5f62\u5f0f\uff0c\u6211\u4eec\u4f9d\u7136\u53ef\u4ee5$O(1)$\u7684\u7b97\u51fa\u6765\n \u524d\u9762\u7684\u90e8\u5206\u5219\u662f$[l,r]$\u4e2d\u7b2c$s+2$\u5c0f\u5230\u7b2c$r-l+1$\u5c0f\u6570\u5b57\u7684\u548c\u4e86\n\n_________________\n\n\u597d\u4e86\u7ecf\u8fc7\u521a\u624d\u7684\u4e00\u987f\u5206\u6790\u6211\u4eec\u4f1a\u53d1\u73b0\u6211\u4eec\u9700\u8981\u7684\u4e1c\u897f\u5c31\u662f\u7b2c\u4e00\u5feb\u901f\u7684\u6c42\u51fa\u90a3\u4e2a\u5206\u754c\u70b9mid\uff0c\u6216\u8005\u8bf4\u4e0d\u6c42\u51fa\u5206\u754c\u70b9mid\u4e5f\u53ef\u4ee5\uff0c\u4f46\u662f\u6211\u4eec\u5fc5\u987b\u77e5\u9053\u6709\u591a\u5c11\u4eba\u5411\u5de6\u8dd1\u4e86\n\n\u7b2c\u4e8c\u5c31\u662f\u6211\u4eec\u9700\u8981\u5feb\u901f\u7684\u6c42\u51fa\u533a\u95f4$[l,r]$\u5185\u524dk\u5927\u7684\u6570\u5b57\u4e4b\u548c\n\n\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\u4e00\u4ef6\u4e8b\u662f\u90a3\u4e2a\u795e\u5947\u7684\u5206\u754c\u70b9\u4f1a\u6ee1\u8db3\u8fd9\u6837\u7684\u6027\u8d28\uff0c\u90a3\u5c31\u662f\n\n$cnt_{mid}=mid-K+1$\n\n\u5176\u4e2d$cnt_{mid}$\u8868\u793a\u5728\u533a\u95f4$[l,r]$\u5f53\u4e2d\u5c0f\u4e8e\u7b49\u4e8emid\u7684\u6570\u5b57\u4e2a\u6570\n\n\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u5f53\u7136\u53ef\u4ee5\u4e8c\u5206\u5566~\n\n\u73b0\u5728\u53ef\u80fd\u6211\u4eec\u552f\u4e00\u8981\u505a\u7684\u4e8b\u60c5\u5c31\u662f\u67e5\u627e\u533a\u95f4\u4e2d\u6bd4mid\u5c0f\u7684\u6570\u5b57\u4e2a\u6570\u548c\u524dk\u5c0f\u7684\u6570\u5b57\u4e4b\u548c\u5566~\n\n\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u4f3c\u4e4e\u53ea\u8981\u5f97\u77e5\u4e86$[l,r]$\u8fd9\u4e2a\u533a\u95f4\u7684\u6743\u503c\u7ebf\u6bb5\u6811\u957f\u4ec0\u4e48\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u76f8\u5f53\u5feb\u901f\u7684\u6c42\u51fa\u6765\u4e86\u2026\u2026\uff0c\u751a\u81f3\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u6743\u503c\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\uff0c\u6bcf\u6b21\u8ba1\u7b97\u4e00\u4e0b\u521a\u624d\u7684\u90a3\u4e2a\u503c\uff0c\u5982\u679c$cnt_{mid}$\u6bd4$mid-K+1$\u5c0f\u4e86\u6211\u4eec\u5c31\u5411\u53f3\u9012\u5f52\uff0c\u5426\u5219\u6211\u4eec\u5c31\u5411\u5de6\u9012\u5f52\uff0c\u6bcf\u6b21\u5411\u53f3\u9012\u5f52\u7684\u65f6\u5019\u6211\u4eec\u76f4\u63a5\u52a0\u4e0a\u5de6\u513f\u5b50\u533a\u95f4\u5bf9\u5e94\u6570\u5b57\u4e4b\u548c\uff0c\u8fd9\u6837\u5f53\u6211\u4eec\u4e8c\u5206\u51famid\u7684\u65f6\u5019\u6211\u4eec\u4e5f\u987a\u624b\u6c42\u51fa\u4e86\u6240\u6709\u503c\u5c0f\u4e8emid\u7684\u6570\u5b57\u4e4b\u548c\n\n\u95ee\u9898\u6765\u4e86\u6211\u4eec\u600e\u4e48\u77e5\u9053\u4e00\u4e2a\u533a\u95f4\u7684\u6743\u503c\u7ebf\u6bb5\u6811\u957f\u4ec0\u4e48\u6837\u5462\uff1f\n\n\u5f53\u7136\u662f\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811(\u4e3b\u5e2d\u6811)\u5566~\u6211\u4eec\u628a\u4e24\u4e2a\u524d\u7f00\u7684\u6743\u503c\u7ebf\u6bb5\u6811\u4e00\u51cf\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u76ee\u6807\u533a\u95f4\u7684\u6743\u503c\u7ebf\u6bb5\u6811\u4e86\u2026\n\n\u6240\u4ee5\u8fd9\u9053\u9898\u6211\u4eec\u6700\u540e\u8981\u505a\u7684\u5c31\u662f\u5728\u4e3b\u5e2d\u6811\u4e0a\u4e8c\u5206\u51fa\u5217\u961f\u65f6\u7684\u5206\u754c\u70b9(\u6ce8\u610f\u4e00\u4ef6\u4e8b\u662f\u53ef\u80fd\u6211\u4eec\u5728\u6240\u6709\u4eba\u90fd\u5411\u5de6\u8dd1\u6216\u8005\u5411\u53f3\u8dd1\u7684\u65f6\u5019\u53ef\u80fd\u65e0\u6cd5\u6b63\u786e\u7684\u4e8c\u5206\u51famid\u7684\u4f4d\u7f6e\uff0c\u4e0d\u8fc7\u6211\u4eec\u4f9d\u7136\u53ef\u4ee5\u6b63\u786e\u7684\u4e8c\u5206\u51fa\u6709\u591a\u5c11\u4e2a\u4eba\u5411\u5de6\u8dd1\u4e86)\uff0c\u7136\u540e\u5bf9\u4e8e\u5411\u5de6\u8dd1\u7684\u4eba\u548c\u5411\u53f3\u8dd1\u7684\u4eba\u5206\u522b\u8ba1\u7b97\u4e00\u4e0b\u4ee3\u4ef7\u5373\u53ef\u4e86\uff0c\u5199\u8d77\u6765\u7684\u8bdd\u4f1a\u76f8\u5f53\u7684\u597d\u5199~\n\n _tips:\u503c\u57df\u624d$10^6$\u6211\u4eec\u65e0\u9700\u4e5f\u4e0d\u80fd\u5199\u79bb\u6563\u5316_ \n\n\u4e0a\u4ee3\u7801~\n\n```C\n#include<cstdio>\n#include<algorithm>\n#include<map>\nusing namespace std;const int N=5*1e5+10;const int P=22*N;typedef long long ll;\nint n;int m;\nstruct per_linetree//\u7b80\u6613\u4e3b\u5e2d\u6811\u677f\u5b50\n{\n    int s[P][2];int siz[P];ll val[P];int ct;int root[N];int tim;ll vl;ll sl;\n    per_linetree(){root[0]=ct=1;}\n    inline void ins(int p1,int p2,int l,int r,int pos)//\u63d2\u5165\n    {\n        siz[p2]=siz[p1]+1;val[p2]=val[p1]+pos;if(r-l==1){return;}int mid=(l+r)/2;\n        if(pos<=mid)s[p2][1]=s[p1][1],ins(s[p1][0],s[p2][0]=++ct,l,mid,pos);\n        else s[p2][0]=s[p1][0],ins(s[p1][1],s[p2][1]=++ct,mid,r,pos);\n    }\n    inline void query(int p1,int p2,int l,int r,int k)//\u4e8c\u5206\uff0c\u8fd9\u91cc\u4f7f\u7528\u4e24\u4e2a\u5168\u5c40\u53d8\u91cf\u6765\u8bb0\u5f55\u5411\u53f3\u8dd1\u7684\u4eba\u6570\u548c\u5411\u5de6\u8dd1\u7684\u4eba\u7684\u4f4d\u7f6e\u4e4b\u548c\n    {\n        if(r-l==1)return;int mid=(l+r)/2;\n        int ns=siz[s[p2][0]]-siz[s[p1][0]];ll nv=val[s[p2][0]]-val[s[p1][0]];\n        if(mid-k+1<ns+sl)vl+=nv,sl+=ns,query(s[p1][1],s[p2][1],mid,r,k);\n        else if(mid-k+1==ns+sl){vl+=nv,sl+=ns;return;}\n        else query(s[p1][0],s[p2][0],l,mid,k);\t\n    }\n    inline void cins(int val){ins(root[tim],root[tim+1]=++ct,0,1e6,val);++tim;}\n    inline void cquery(int l,int r,int k)//\u4e8c\u5206\u51fa\u6765\u5206\u5272\u70b9\u4e4b\u540e\u7b80\u5355\u7684\u8ba1\u7b97\u4e00\u4e0b\u5c31\u884c\u4e86\n    {\n        vl=0;sl=0;query(root[l-1],root[r],0,1e6,k);\n        ll vr=val[root[r]]-val[root[l-1]]-vl;\n        ll sr=(k+sl+k+r-l)*(r-l+1-sl)/2;sl=(k+k+sl-1)*sl/2;\n        printf(\"%lld\\n\",sl-vl+vr-sr);\n    }\n}plt;\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1,t;i<=n;i++)scanf(\"%d\",&t),plt.cins(t);\n    for(int i=1,l,r,k;i<=m;i++)scanf(\"%d%d%d\",&l,&r,&k),plt.cquery(l,r,k);\n    return 0;//\u62dc\u62dc\u7a0b\u5e8f~\n}\n```\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1537703807,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4559 \u3010[JSOI2018]\u5217\u961f\u3011"
    },
    {
        "content": "\u9898\u89e3\u540c\u6b65\u53d1\u5728\u6211\u7684\u535a\u5ba2\uff1ahttps://www.cnblogs.com/luyouqi233/p/9090038.html\n\n**40pts\uff1a**\n\n\u4e0d\u96be\u60f3\u5230\u8be2\u95ee\u5e94\u5f53\u5728\u4e3b\u5e2d\u6811\u4e0a\u505a\u3002\n\n$[l,r]$\u4e3a\u6211\u4eec\u8be2\u95ee\u7684\u8fd9\u4e9b\u4eba\u6240\u5728\u4f4d\u7f6e\u7684\u5750\u6807\u533a\u95f4\uff0c$[l1,r1]$\u4e3a\u8fd9\u4e9b\u4eba\u6700\u7ec8\u8981\u53bb\u8fd9\u4e2a\u533a\u95f4\u91cc\u7ad9\u7740\u3002\n\n\u6211\u4eec\u7ef4\u62a4\u4e3b\u5e2d\u6811\u8282\u70b9\u4ee3\u8868\u7684\u533a\u95f4\u7684\u4eba\u6570\uff0c\u5219\u8bbe\u5f53\u524d\u8282\u70b9\u5de6\u5b50\u6811\u4eba\u6570\u4e3a$ls$\uff0c\u5219\u53ef\u4ee5\u9012\u5f52\u5904\u7406$[l,mid][l1,l1+ls-1]$\u548c$[mid+1,r][l1+ls,r1]$\uff0c\u590d\u6742\u5ea6$O(n^2)$\u3002\n\n**100pts\uff1a**\n\n\u7136\u540e\u6211\u4eec\u5c31\u8bd5\u56fe\u526a\u679d\u5457\u770b\u770b\u6211\u4eec\u80fd\u526a\u6210\u5565\u6837\u3002\n\n\u6211\u4eec\u80fd\u5904\u7406$r<=l1$\u548c$r1<=l$\u7684\u60c5\u51b5\u5417\uff1f\u5f53\u7136\u53ef\u4ee5\u3002\n\n\u6211\u4eec\u4e3e\u524d\u4e00\u79cd\u60c5\u51b5\u4e3a\u4f8b\uff08\u540e\u9762\u7684\u60c5\u51b5\u57fa\u672c\u540c\u7406\uff09\uff1a\n\n\u53ea\u9700\u8981\u5148\u8ba9\u8fd9\u4e9b\u4eba\u90fd\u8dd1\u5230$l1$\uff0c\u7136\u540e\u518d\u8ba9\u8fd9\u4e9b\u4eba\u5728$[l1,r1]$\u7ad9\u597d\u5c31\u884c\u4e86\u3002\n\n\u4e8e\u662f\u7b97\u51fa\u8fd9\u4e9b\u4eba\u5230l1\u7684\u8ddd\u79bb\uff0c\u518d\u7b97\u8fd9\u4e9b\u4eba\u5728$[l1,r1]$\u7684\u4f53\u529b\u503c\u5c31\u884c\u4e86\uff0c\u4e3b\u5e2d\u6811\u7ef4\u62a4\u5f53\u524d\u4eba\u5750\u6807\u4e4b\u548c\u5373\u53ef\u505a\u5230\u524d\u8005\uff0c\u800c\u540e\u8005\u5c31\u662f\u7b49\u5dee\u6570\u5217\u6c42\u548c\u3002\n\n\u5176\u5b9e\u5199\u5230\u8fd9\u91cc\u5c31\u53ef\u4ee5AC\u4e86\uff08\u6570\u636e\u6709\u70b9\u5f31\uff08\u7b11\uff09\uff09\u3002\n\n**\u771f\u00b7100pts\uff1a**\n\n\u90a3\u6211\u4eec\u7ee7\u7eed\u60f3\uff0c\u6211\u4eec\u80fd\u5904\u7406$r<=r1$\u548c$l1<=l$\u7684\u60c5\u51b5\u5417\uff1f\u5f53\u7136\u53ef\u4ee5\u3002\n\n\u8fd8\u662f\u4e3e\u524d\u4e00\u79cd\u60c5\u51b5\u4e3a\u4f8b\uff08\u540e\u9762\u7684\u60c5\u51b5\u57fa\u672c\u540c\u7406\uff09\uff1a\n\n\u53ea\u9700\u8981\u5148\u8ba9\u8fd9\u4e9b\u4eba\u90fd\u8dd1\u5230$r1$\uff0c\u7136\u540e\u518d\u8ba9\u8fd9\u4e9b\u4eba\u5728$[l1,r1]$\u7ad9\u597d\u5c31\u884c\u4e86\u3002\n\n\u6ce8\u610f\u552f\u4e00\u4e0d\u540c\u7684\u662f\"\u7ad9\u597d\"\u8fd9\u4e2a\u8fc7\u7a0b\u5b9e\u9645\u4e0a\u662f\u201c\u9000\u6d41\u201d\u2014\u2014\u9000\u4f53\u529b\u503c\u7684\u8fc7\u7a0b\uff0c\u56e0\u4e3a\u6211\u4eec\u80fd\u591f\u8bc1\u660e\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6bcf\u4e2a\u4eba\u53ea\u53ef\u80fd\u8dd1\u591a\u4e0d\u53ef\u80fd\u8dd1\u5c11\uff0c\u6240\u4ee5\u6211\u4eec\u524d\u8005\u51cf\u540e\u8005\u5373\u53ef\uff0c\u7ef4\u62a4\u65b9\u6cd5\u540c\u4e0a\u3002\n\n\u90a3\u4e48\u590d\u6742\u5ea6\u5230\u5e95\u662f\u4ec0\u4e48\u5462\uff1f\u601d\u8003\u4e00\u4e0b\u4e0d\u96be\u53d1\u73b0\uff0c\u5f53$mid<=l1+ls-1$\u65f6\u5019\u6211\u4eec\u524d\u5b50\u95ee\u9898\u53ef\u4ee5$O(1)$\u7b97\u51fa\uff0c\u540e\u5b50\u95ee\u9898$O(log)$\u7ee7\u7eed\u9012\u5f52\uff0c\u5f53$mid>l1+ls-1$\u65f6\u540e\u5b50\u95ee\u9898\u53ef\u4ee5$O(1)$\u7b97\u51fa\uff0c\u524d\u5b50\u95ee\u9898$O(log)$\u7ee7\u7eed\u9012\u5f52\u3002\n\n\u590d\u6742\u5ea6$O(nlog)$\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n```\n#include<cmath>\n#include<queue>\n#include<vector>\n#include<cstdio>\n#include<cctype>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\nconst int N=5e5+5;\nconst int M=1e6;\ninline int read(){\n    int X=0,w=0;char ch=0;\n    while(!isdigit(ch)){w|=ch=='-';ch=getchar();}\n    while(isdigit(ch))X=(X<<3)+(X<<1)+(ch^48),ch=getchar();\n    return w?-X:X;\n}\nstruct tree{\n    int l,r,sum;\n    ll dis;\n}tr[M*20+5];\nint n,m,pool,rt[N];\nvoid insert(int y,int &x,int l,int r,ll a){\n    tr[x=++pool]=tr[y];\n    tr[x].sum++;tr[x].dis+=a;\n    if(l==r)return;\n    int mid=(l+r)>>1;\n    if(a<=mid)insert(tr[y].l,tr[x].l,l,mid,a);\n    else insert(tr[y].r,tr[x].r,mid+1,r,a);\n}\nll query(int nl,int nr,int l,int r,int l1,int r1){\n    if(l1>r1)return 0;\n    if(r<=r1){\n\t\treturn (ll)r1*(r1-l1+1)-(tr[nr].dis-tr[nl].dis)-(ll)(r1-l1)*(r1-l1+1)/2;\n    }\n    if(l1<=l){\n\t\treturn (tr[nr].dis-tr[nl].dis)-(ll)l1*(r1-l1+1)-(ll)(r1-l1)*(r1-l1+1)/2;\n    }\n    int mid=(l+r)>>1;\n    int delta=tr[tr[nr].l].sum-tr[tr[nl].l].sum;\n    return query(tr[nl].l,tr[nr].l,l,mid,l1,l1+delta-1)\n\t+query(tr[nl].r,tr[nr].r,mid+1,r,l1+delta,r1);\n}\nint main(){\n    n=read(),m=read();\n    for(int i=1;i<=n;i++)insert(rt[i-1],rt[i],1,M,read());\n    for(int i=1;i<=m;i++){\n\t\tint l=read(),r=read(),k=read();\n\t\tprintf(\"%lld\\n\",query(rt[l-1],rt[r],1,M,k,k+r-l));\n    }\n    return 0;\n}\n\n```",
        "postTime": 1527245329,
        "uid": 36276,
        "name": "w36557658",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4559 \u3010[JSOI2018]\u5217\u961f\u3011"
    },
    {
        "content": "\u672c\u9898\u89e3\u4fa7\u91cd\u4e8e\u5bf9\u8d2a\u5fc3\u539f\u7406\u548c\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u8bc1\u660e\uff0c\u5177\u4f53\u5b9e\u73b0\u53ef\u53c2\u8003\u9898\u89e3\u533a\u7684\u5176\u4ed6\u9898\u89e3\u3002\n\n### \u7b97\u6cd5\u5206\u6790\n\n~~\u901a\u8fc7\u67d0\u79cd\u65b9\u6cd5~~\u6211\u4eec\u4e0d\u96be\u60f3\u5230\u4f53\u529b\u6d88\u8017\u6700\u5c11\u7684\u60c5\u51b5\u5e94\u8be5\u662f**\u5f53\u524d\u533a\u95f4\u7684\u6240\u6709\u5b66\u751f\u6309\u7167\u76f8\u5bf9\u4f4d\u7f6e\u987a\u5e8f\u6392\u5230 $[K,K+L-R]$** \u3002\n\n\u6709\u4e00\u79cd\u6bd4\u8f83\u597d\u7406\u89e3\u7684\u8bc1\u660e\uff1a\u4efb\u610f\u4e00\u79cd\u987a\u5e8f\u90fd\u53ef\u4ee5\u901a\u8fc7\u82e5\u5e72\u6b21\u4ea4\u6362\u76f8\u90bb\u7684\u5b66\u751f\u5b9e\u73b0\uff0c\u4e00\u6b21\u4ea4\u6362\u5bf9\u4e8e\u4ea4\u6362\u7684\u8fd9 $2$ \u4e2a\u5b66\u751f\u5404\u6709$2$\u79cd\u60c5\u51b5\uff1a\u6bd4\u539f\u6765\u591a\u8d70 $1$ \u6b65\uff1b\u6bd4\u539f\u6765\u5c11\u8d70 $1$ \u6b65\u3002\u4e0b\u9762\u5bf9\u4e8e\u4e0a\u8ff0\u8d2a\u5fc3\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n1. \u4ea4\u6362\u7684 $2$ \u4e2a\u5b66\u751f\u90fd\u662f\u4ece\u5de6\u5f80\u53f3\u8d70\u7684\u3002\u4ea4\u6362\u4e4b\u540e\u4e00\u4e2a\u5b66\u751f\u591a\u8d70 $1$ \u6b65\uff0c\u53e6\u4e00\u4e2a\u5b66\u751f\u5c11\u8d70 $1$ \u6b65\uff0c\u4e0e\u539f\u65b9\u6848\u4ee3\u4ef7\u76f8\u540c\u3002\n2. \u4ea4\u6362\u7684 $2$ \u4e2a\u5b66\u751f\u90fd\u662f\u4ece\u53f3\u5f80\u5de6\u8d70\u7684\u3002\u540c\u6837\u4ea4\u6362\u4e4b\u540e\u4e00\u4e2a\u5b66\u751f\u591a\u8d70 $1$ \u6b65\uff0c\u53e6\u4e00\u4e2a\u5b66\u751f\u5c11\u8d70 $1$ \u6b65\uff0c\u4e0e\u539f\u65b9\u6848\u4ee3\u4ef7\u76f8\u540c\u3002\n3. \u4ea4\u6362\u7684 $2$ \u4e2a\u5b66\u751f\u4e00\u4e2a\u4ece\u5de6\u5f80\u53f3\u8d70\uff0c\u53e6\u4e00\u4e2a\u4ece\u53f3\u5f80\u5de6\u8d70\u3002\u56e0\u4e3a\u4fdd\u8bc1\u662f**\u6309\u7167\u76f8\u5bf9\u4f4d\u7f6e\u987a\u5e8f\u6392\u5217**\uff0c\u56e0\u6b64\u4e00\u5b9a\u662f**\u9760\u5de6\u8fb9\u7684\u5b66\u751f\u662f\u4ece\u5de6\u5f80\u53f3\u8d70\uff0c\u9760\u53f3\u8fb9\u7684\u5b66\u751f\u662f\u4ece\u53f3\u5f80\u5de6\u8d70**\uff0c\u4ea4\u6362\u4e4b\u540e\u53d1\u73b0\u4e24\u4e2a\u5b66\u751f\u90fd\u6bd4\u539f\u6765\u591a\u8d70 $1$ \u6b65\uff0c\u6bd4\u539f\u65b9\u6848\u4ee3\u4ef7\u591a\u3002\n\n\u6211\u4eec\u53d1\u73b0\u5728\u4e0a\u8ff0\u8d2a\u5fc3\u4e0b\u65e0\u8bba\u600e\u4e48\u4ea4\u6362**\u90fd\u4e0d\u53ef\u80fd\u8ba9 $2$ \u4e2a\u5b66\u751f\u540c\u65f6\u5c11\u8d70 $1$ \u6b65**\uff0c\u56e0\u6b64\u4ea4\u6362\u4e4b\u540e**\u4e0d\u4f1a\u4f7f\u7b54\u6848\u53d8\u66f4\u4f18**\u3002\n\n----\n\n\u6211\u4eec\u628a\u4e0a\u8ff0\u8d2a\u5fc3\u7684\u5f0f\u5b50\u5199\u51fa\u6765\uff0c\u6700\u5c0f\u4ee3\u4ef7\uff1a\n\n$$\\sum_{i=l}^r|a_i-(rk_i+K-1)|$$\n\n\u8fd9\u91cc\u628a\u7edd\u5bf9\u503c\u53bb\u6389\uff0c\u5206\u7c7b\u8ba8\u8bba\uff0c $rk_i+K-1$ \u53ef\u901a\u8fc7\u7b49\u5dee\u6570\u5217\u6c42\u548c\u5f97\u51fa\uff0c $a_i$ \u901a\u8fc7\u4e3b\u5e2d\u6811\u7ef4\u62a4\u3002\n\n\u4e0b\u9762\u6211\u4eec\u91cd\u70b9\u6765\u770b\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u8bc1\u660e\u3002\n\n\u5206\u7c7b\u8ba8\u8bba\u7ed3\u679c\u5982\u4e0b\uff1a\n\n1. \u5f53\u524d\u533a\u95f4\u65e0\u5b66\u751f\uff0c\u76f4\u63a5\u8fd4\u56de $0$ \u3002\n1. \u5f53\u524d\u533a\u95f4\u5b8c\u5168\u6ee1\u8db3 $a_i-(rk_i+K-1)<0$ \uff0c\u5373\u5f53\u524d\u6743\u503c\u533a\u95f4\u4e2d\u6240\u6709\u5b66\u751f\u90fd\u5e94\u5411\u5de6\u8dd1\uff0c\u6b64\u65f6\u4ee3\u4ef7\u548c\u4e3a $\\sum rk_i+K-1-a_i$ \uff0c\u5206\u79bb\u53ef\u5f97\u4e3a $\\sum rk_i+K-1-\\sum a_i$ \uff0c\u76f4\u63a5\u8fd4\u56de\u7b54\u6848\u3002\n1. \u5f53\u524d\u533a\u95f4\u5b8c\u5168\u6ee1\u8db3 $a_i-(rk_i+K-1)>0$ \uff0c\u5373\u5f53\u524d\u6743\u503c\u533a\u95f4\u4e2d\u6240\u6709\u5b66\u751f\u90fd\u5e94\u5411\u53f3\u8dd1\uff0c\u6b64\u65f6\u4ee3\u4ef7\u548c\u4e3a $\\sum a_i-(rk_i+K-1)$ \uff0c\u5206\u79bb\u53ef\u5f97\u4e3a $\\sum a_i-\\sum rk_i+K-1$ \uff0c\u76f4\u63a5\u8fd4\u56de\u7b54\u6848\u3002\n1. \u5f53\u524d\u533a\u95f4\u4e0d\u5b8c\u5168\u6ee1\u8db3\u4e0a\u8ff0 $2$ \u5f0f\uff0c\u5373\u5f53\u524d\u6743\u503c\u533a\u95f4\u4e2d\u4e00\u90e8\u5206\u5b66\u751f\u5411\u5de6\u8dd1\uff0c\u4e00\u90e8\u5206\u5b66\u751f\u5411\u53f3\u8dd1\u3002\u9012\u5f52\u5904\u7406\u3002\n\n\u8fd9\u91cc\u590d\u6742\u5ea6\u53ef\u4ee5\u4fdd\u8bc1\u5355\u6b21\u8be2\u95ee $O(\\log n)$ \u3002\u6211\u4eec\u628a\u5f53\u524d\u8be2\u95ee\u5b66\u751f\u533a\u95f4 $a_l,a_{l+1},\\cdots,a_r$ \u6392\u5e8f\uff0c\u8bb0\u4e3a $b_1,b_2,\\cdots,b_{r-l+1}$ \u3002\u663e\u7136 $a_l,a_{l+1},\\cdots,a_r$ \u548c $b_1,b_2,\\cdots,b_{r-l+1}$ \u5bf9\u4e8e\u5f53\u524d\u8be2\u95ee\u7b49\u4ef7\u3002\n\n\u56e0\u4e3a**\u5b66\u751f\u4f4d\u7f6e\u4e92\u4e0d\u76f8\u540c**\uff0c\u56e0\u6b64\u6ee1\u8db3 $b_i\\ge b_{i-1}+1$ \u3002\n\n\u4e24\u8fb9\u540c\u65f6 $-i$ \uff0c\u5373 $b_i-i\\ge b_{i-1}-(i-1)$ \u3002\n\n\u4e0d\u96be\u53d1\u73b0\u5bf9\u4e8e $b$ \u800c\u8a00 $rk_i=i\\ ,\\ rk_{i-1}=i-1$ \uff0c\u4e0a\u5f0f\u5373\u4e3a $b_i-rk_i>=b_{i-1}-rk_{i-1}$ \u3002\n\n\u5bf9\u4e8e\u4e00\u7ec4\u8be2\u95ee\uff0c $K$ \u662f\u56fa\u5b9a\u7684\uff0c\u56e0\u6b64\u7edd\u5bf9\u503c\u91cc\u9762\u7684\u5f0f\u5b50\u662f**\u5355\u8c03\u7684**\uff0c\u4e0a\u8ff0\u9012\u5f52\u53ef\u4ee5\u770b\u4f5c\u662f\u5bfb\u627e\u7edd\u5bf9\u503c\u5f0f\u5b50\u6b63\u8d1f\u7684**\u552f\u4e00\u5206\u754c\u70b9**\uff0c\u56e0\u6b64\u4fdd\u8bc1\u5355\u6b21\u8be2\u95ee\u590d\u6742\u5ea6\u4e3a $\\log n$ \u3002\n\n\u8fd9\u91cc\u5c31\u4e0d\u8d34\u4ee3\u7801\u4e86\uff0c\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u53c2\u8003\u9898\u89e3\u533a\u5176\u4ed6\u9898\u89e3\u3002",
        "postTime": 1582467710,
        "uid": 35871,
        "name": "ZigZagKmp",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4559 \u3010[JSOI2018]\u5217\u961f\u3011"
    },
    {
        "content": "> [P4559 [JSOI2018]\u5217\u961f](https://www.luogu.com.cn/problem/P4559)\n\n\u76f8\u5f53\u88f8\u7684\u4e00\u9053\u9898\u76ee\u3002\u4e3a\u4ec0\u4e48\u5feb\u8981 NOI \u4e86\u6211\u8fd8\u5728\u5237\u8fd9\u79cd\u9898\u554a\uff01\u7b97\u662f\u5de9\u56fa\u57fa\u7840\u4e86\u7f62\u3002\n\n\u8003\u8651\u4e00\u6b21\u8be2\u95ee\uff0c\u8bbe\u6240\u6709\u6d89\u53ca\u5230\u7684\u5b66\u751f\u7684\u4f4d\u7f6e\u5206\u522b\u4e3a $x_0 < x_1 < \\cdots < x_k(k = r - l)$\uff0c\u624b\u52a8\u6a21\u62df\u4e00\u4e0b\u53d1\u73b0\u5b58\u5728\u4e00\u4e2a\u5206\u5272\u70b9 $p$\uff0c\u4f7f\u5f97 $x_p$ \u53ca\u5176\u5de6\u8fb9\u7684\u5b66\u751f\u5411\u53f3\u8dd1\uff0c$x_p$ \u53f3\u8fb9\u7684\u5b66\u751f\u5411\u5de6\u8dd1\u3002\u8fd9\u662f\u56e0\u4e3a\u8003\u5bdf $x_i$ \u548c $i$ \u7684\u6700\u7ec8\u4f4d\u7f6e $K + i$\uff0c\u4e24\u5f0f\u76f8\u51cf\u5f97 $F(i) = x_i - (K + i)$\uff0c\u800c $i$ \u4ea7\u751f\u7684\u8d21\u732e\u5373 $|F(i)|$\u3002\n\n\u56e0\u4e3a $x_i$ \u4e92\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5 $x_i$ \u76f8\u8f83\u4e8e $x_{i - 1}$ \u589e\u52a0\u4e0d\u5c0f\u4e8e $1$\uff08$x_{i - 1} < x_i \\Rightarrow x_{i - 1} + 1 \\leq x_i$\uff09\uff0c\u800c $K + i$ \u76f8\u8f83\u4e8e $K + i - 1$ \u6070\u597d\u589e\u52a0 $1$\uff0c\u56e0\u6b64 $F(i) - F(i - 1) = x_i - x_{i - 1} - 1\\geq 0$\uff0c\u5373 $F(i)$ \u5355\u8c03\u4e0d\u964d\uff0c\u56e0\u6b64\u5b58\u5728 $p$ \u4f7f\u5f97 $F(p) \\leq 0$ \u6216\u4e0d\u5b58\u5728\uff0c\u4e14 $F(p + 1) > 0$ \u6216\u4e0d\u5b58\u5728\uff0c\u8fd9\u6837 $p$ \u5de6\u8fb9\u7684\u5b66\u751f\u5c31\u8981\u5411\u53f3\u8dd1\uff0c\u53f3\u8fb9\u7684\u5b66\u751f\u5411\u5de6\u8dd1\u3002\n\n\u5982\u4f55\u627e\u5230\u8fd9\u6837\u7684\u5b66\u751f\u5462\uff1f\u56e0\u5176\u5177\u6709\u5355\u8c03\u6027\uff0c\u53ef\u4ee5\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u3002\n\n\u4e8c\u5206\u627e\u5230 $p$ \u4e4b\u540e\u67e5\u4e00\u4e0b $p$ \u5de6\u8fb9\u7684\u5b66\u751f\u4e2a\u6570\u4e0e\u4f4d\u7f6e\u4e4b\u548c\uff0c$p$ \u53f3\u8fb9\u7684\u5b66\u751f\u4e2a\u6570\u4e0e\u4f4d\u7f6e\u4e4b\u548c\u5373\u53ef\u6c42\u51fa\u7b54\u6848\u3002\n\n\u8fdb\u4e00\u6b65\u5730\uff0c\u8003\u8651\u591a\u7ec4\u8be2\u95ee\uff0c\u5bb9\u6613\u53d1\u73b0\u5957\u4e2a\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}((n + m)\\log n)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\n#define TIME 1e3 * clock() / CLOCKS_PER_SEC\nbool Mbe;\nconstexpr int N = 5e5 + 5;\nconstexpr int K = N << 5;\nconstexpr int V = 1.5e6 + 5;\nint n, m, node, R[N], ls[K], rs[K], num[K], cnum;\nll sum[K], csum;\nvoid modify(int pre, int &x, int l, int r, int p) {\n  ls[x = ++node] = ls[pre], rs[x] = rs[pre];\n  num[x] = num[pre] + 1, sum[x] = sum[pre] + p;\n  if(l == r) return;\n  int m = l + r >> 1;\n  if(p <= m) modify(ls[pre], ls[x], l, m, p);\n  else modify(rs[pre], rs[x], m + 1, r, p);\n}\nvoid binary(int l, int r, int x, int y, int k) {\n  ll rnum = num[y] - num[x], rsum = sum[y] - sum[x];\n  int m = l + r >> 1;\n  if(cnum + rnum >= r - k + 1) return cnum += rnum, csum += rsum, void();\n  if(l == r) return;\n  binary(l, m, ls[x], ls[y], k);\n  if(cnum >= m - k + 1) binary(m + 1, r, rs[x], rs[y], k);\n}\nbool Med;\nint main() {\n  fprintf(stderr, \"%.3lf MB\\n\", (&Mbe - &Med) / 1048576.0);\n  #ifdef ALEX_WEI\n    freopen(\"1.in\", \"r\", stdin);\n    freopen(\"1.out\", \"w\", stdout);\n  #endif\n  ios::sync_with_stdio(0);\n  cin >> n >> m;\n  for(int i = 1, a; i <= n; i++) cin >> a, modify(R[i - 1], R[i], 1, V, a);\n  for(int i = 1, l, r, k; i <= m; i++) {\n    cin >> l >> r >> k, cnum = csum = 0;\n    binary(1, V, R[l - 1], R[r], k);\n    auto calc = [&](int l, int r) {return 1ll * (l + r) * (r - l + 1) / 2;};\n    cout << calc(k, k + cnum - 1) - csum + (sum[R[r]] - sum[R[l - 1]] - csum) - calc(k + cnum, k + r - l) << \"\\n\";\n  }\n  cerr << TIME << \" ms\\n\";\n  return 0;\n}\n/*\n2022/8/10\nAuthor: Alex_Wei\nstart coding at 21:06\nfinish debugging at 21:17\n*/\n```",
        "postTime": 1660310363,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "P4559 [JSOI2018]\u5217\u961f"
    },
    {
        "content": "## \u5927\u66b4\u529b\n\n\u8fd9\u9898\u6709\u4e2a\u5f88\u663e\u7136\u7684\u8d2a\u5fc3\uff0c\u6700\u540e\u7684\u5bf9\u5e94\u5173\u7cfb\u4e00\u5b9a\u662f\u6392\u5e8f\u540e\u4e00\u4e00\u5bf9\u5e94\u7684\u3002\n\n\u548c P3992 \u5f88\u50cf\uff0c\u4e0d\u8fc7\u90a3\u9898\u6bd4\u8fd9\u4e2a\u96be\u5f88\u591a\u3002\n\n\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u6b21\u67e5\u8be2\uff0c\u7ed9\u533a\u95f4\u7684\u4f4d\u7f6e\u6392\u5e8f\uff0c\u7136\u540e\u4e00\u4e2a\u4e00\u4e2a\u51cf\u5c31\u884c\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(mn\\log n)$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N = 5e5 + 5;\nint n, m, a[N], b[N], id[N];\ninline bool cmp(const int &x, const int &y)\n{\n    return a[x] < a[y];\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cin >> n >> m;\n    for (int i = 1; i <= n; i++)\n        cin >> a[i];\n    while (m--)\n    {\n        int l, r, k;\n        cin >> l >> r >> k;\n        for (int i = l; i <= r; i++)\n            id[i] = i;\n        sort(id + l, id + r + 1, cmp);\n        ll res = 0;\n        for (int i = l; i <= r; i++)\n            res += abs(i + k - l - a[id[i]]);\n        cout << res << '\\n';\n    }\n    return 0;\n}\n```\n\n## \u4f18\u5316\u7684\u66b4\u529b\n\n\u8003\u8651\u628a\u6392\u5e8f\u4f18\u5316\u6389\u3002\n\n\u4e00\u5f00\u59cb\u6392\u5b8c\u6240\u6709\u4f4d\u7f6e\uff0c\u7136\u540e\u627e\u7684\u65f6\u5019\u770b\u4f4d\u7f6e\u662f\u5426\u5728\u533a\u95f4\u5185\u5c31\u884c\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(mn)$\n\n~~\u4f46\u662f\u5f97\u5206\u548c\u5927\u66b4\u529b\u662f\u4e00\u6837\u7684~~\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N = 5e5 + 5;\nint n, m;\nstruct node\n{\n    int val, id;\n    inline bool operator<(const node &t) const\n    {\n        return val < t.val;\n    }\n} a[N];\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cin >> n >> m;\n    for (int i = 1; i <= n; i++)\n        cin >> a[i].val, a[i].id = i;\n    sort(a + 1, a + 1 + n);\n    while (m--)\n    {\n        int l, r, k;\n        cin >> l >> r >> k;\n        int pos = k;\n        ll res = 0;\n        for (int i = 1; i <= n; i++)\n            if (l <= a[i].id && a[i].id <= r)\n                res += abs(pos - a[i].val), pos++;\n        cout << res << '\\n';\n    }\n    return 0;\n}\n```\n\n## \u6b63\u89e3\n\n\u8fd9\u9898\u65f6\u95f4\u590d\u6742\u5ea6\u74f6\u9888\u5728\u7edd\u5bf9\u503c\u3002\u6709\u4e86\u7edd\u5bf9\u503c\uff0c\u76f4\u63a5\u5dee\u5206\u6839\u672c\u4e0d\u53ef\u80fd\u3002\uff08\u6bd4\u5982 $1\\ 3$ \u548c $2\\ 2$\uff0c\u5dee\u5206\u540e\u7b54\u6848\u4e3a $1+3-2-2=0$\uff0c\u4f46\u662f\u663e\u7136\u4e0d\u5bf9\uff09\n\n\u4f46\u662f\uff0c\u5982\u679c\u6240\u6709\u540c\u5b66\u90fd\u662f\u4ece\u5de6\u79fb\u52a8\u5230\u53f3\u6216\u8005\u90fd\u662f\u4ece\u53f3\u5230\u5de6\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5dee\u5206\u3002\n\n\u8bc1\u660e\u5f88\u7b80\u5355\uff0c\u6bd4\u5982\u90fd\u662f\u4ece\u5de6\u5230\u53f3\u3002\u4ece\u5de6\u5230\u53f3\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e00\u5b9a\u662f\u79fb\u52a8\u540e\u7684\u5750\u6807\u51cf\u53bb\u539f\u6765\u7684\u5750\u6807\u3002\u90a3\u4e48\u628a\u79fb\u52a8\u540e\u7684\u5750\u6807\u90fd\u52a0\u8d77\u6765\uff0c\u51cf\u53bb\u79fb\u52a8\u524d\u7684\u5750\u6807\u7684\u548c\uff0c\u5c31\u662f\u7b54\u6848\u4e86\u3002\n\n\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u62ff\u4e3b\u5e2d\u6811\u7ef4\u62a4\u3002\uff08\u6743\u503c\u7248\uff09\n\n\u6539\u4e00\u4e0b\u67e5\u8be2\u51fd\u6570\u5373\u53ef\u3002\n\n\u5177\u4f53\u5b9e\u73b0\uff1a\n\n- \u5982\u679c\u533a\u95f4\u6ca1\u6709\u6570\uff08\u5373 $r<l$\uff09\uff0c\u8fd4\u56de $0$\u3002\n- \u5982\u679c\u533a\u95f4\u5168\u662f\u4e00\u4e2a\u65b9\u5411\u79fb\u52a8\u7684\u4eba\uff0c\u8fd4\u56de\u7b54\u6848\u3002\n- \u5426\u5219\uff0c\u7ee7\u7eed\u5f80\u4e0b\u641c\u7d22\u3002\n\n\u7b2c\u4e8c\u9879\u4e2d\uff0c\u539f\u6765\u7684\u4f4d\u7f6e\u5c31\u662f\u4e3b\u5e2d\u6811\u7684 $sum$ \u6570\u7ec4\uff0c\u65b0\u7684\u4f4d\u7f6e\u662f $\\sum k+i-1$\u3002\n\n\u600e\u4e48\u6c42\u5462\uff1f\n\n$\\sum k+i-1=\\sum k+\\sum i-\\sum 1=k\\times n+\\dfrac{n(n+1)}{2}-n$\n\n\u8bb0\u5f97\u5f00 `long long`\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N = 5e5 + 5;\nconst int M = 4e7 + 5;\nconst int inf = 1e6;\nint n, m, root[N], L[M], R[M], sz[M], tot;\nll sum[M];\ninline int insert(int last, int l, int r, int k)\n{\n    int cur = ++tot;\n    sz[cur] = sz[last] + 1;\n    sum[cur] = sum[last] + k;\n    if (l == r)\n        return cur;\n    int mid = l + r >> 1;\n    if (k <= mid)\n        L[cur] = insert(L[last], l, mid, k), R[cur] = R[last];\n    else\n        R[cur] = insert(R[last], mid + 1, r, k), L[cur] = L[last];\n    return cur;\n}\ninline ll query(int p1, int p2, int l, int r, int k) // k=cur pos\n{\n    if (r < l)\n        return 0;\n    int mid = l + r >> 1, siz = sz[p2] - sz[p1];\n    ll val = sum[p2] - sum[p1];\n    if (k <= l || r <= k + siz - 1)\n        return abs(val - (1ll * k * siz + 1ll * siz * (siz + 1) / 2 - siz));\n    return query(L[p1], L[p2], l, mid, k) + query(R[p1], R[p2], mid + 1, r, k + (sz[L[p2]] - sz[L[p1]]));\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cin >> n >> m;\n    for (int i = 1, x; i <= n; i++)\n    {\n        cin >> x;\n        root[i] = insert(root[i - 1], 1, inf, x);\n    }\n    for (int i = 1, l, r, k; i <= m; i++)\n    {\n        cin >> l >> r >> k;\n        cout << query(root[l - 1], root[r], 1, inf, k) << '\\n';\n    }\n    return 0;\n}\n```",
        "postTime": 1672918601,
        "uid": 576378,
        "name": "creation_hy",
        "ccfLevel": 5,
        "title": "P4559 \u9898\u89e3"
    },
    {
        "content": "\u672c\u9898\u662f\u4e3b\u5e2d\u6811\u7684\u4e00\u4e2a\u7b80\u5355\u5e94\u7528\u3002\n\n\u9605\u8bfb\u9898\u76ee\uff0c\u4e0d\u96be\u5f97\u51fa**\u8d2a\u5fc3\u7b56\u7565**\u3002\u5728\u7f16\u53f7\u4f4d\u4e8e$[l,r]$\u7684\u6240\u6709\u4eba\u4e2d\uff0c\u5176\u4f4d\u7f6e\u6700\u9760\u524d\u7684\u8dd1\u5230$K$\u4f4d\u7f6e\uff0c\u4f4d\u7f6e\u7b2c\u4e8c\u9760\u524d\u7684\u8dd1\u5230$K+1$\u4f4d\u7f6e\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u53ef\u4ee5\u4f7f\u4f53\u529b\u503c\u603b\u548c\u6700\u5c0f\u3002\u6b63\u786e\u6027\u4e0d\u7ed9\u51fa\u8bc1\u660e\u3002~~\uff08\u4e0d\u4f1a\u8bc1\uff09~~\n\n\u5bf9\u4e8e\u6240\u6709\u5b66\u751f\u7684\u4f4d\u7f6e\u5e8f\u5217\uff0c\u6211\u4eec\u53ef\u4ee5\u5efa\u7acb\u4e3b\u5e2d\u6811\uff0c\u5e76\u53ef\u4ee5\u7528\u4e3b\u5e2d\u6811\u7684\u57fa\u672c\u67e5\u8be2\u64cd\u4f5c\u63d0\u53d6\u51fa\u533a\u95f4\u4e3a$[l,r]$\u7684\u5b66\u751f\u4f4d\u7f6e\u503c\u57df\u4fe1\u606f\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u5b66\u751f\u5de6\u53f3\u8dd1\u52a8\u65f6\u4f53\u529b\u503c\u7684\u7edf\u8ba1\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e3b\u5e2d\u6811\u4e0a\u989d\u5916\u8bb0\u5f55\u4e24\u4e2a\u6570\u503c\uff1a$gl$\u548c$gr$\uff0c\u5206\u522b\u8868\u793a\u5f53\u524d\u8282\u70b9\u5bf9\u5e94\u7684\u533a\u95f4\u5185\u6240\u6709\u5b66\u751f\u8dd1\u52a8\u81f3\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\u6240\u6d88\u8017\u7684\u4f53\u529b\u503c\u3002\u5728\u5efa\u6811\u8fc7\u7a0b\u4e2d\u5373\u53ef\u5bf9\u8fd9\u4e24\u4e2a\u53d8\u91cf\u8fdb\u884c\u7edf\u8ba1\uff0c\u5176\u4e2d$gl$\u7b49\u4e8e\u5f53\u524d\u8282\u70b9$u$\u7684\u5de6\u513f\u5b50\u4e0a\u7684$gl$\uff0c\u52a0\u4e0a$u$\u7684\u53f3\u513f\u5b50\u4e0a\u7684$gl$\uff0c\u518d\u52a0\u4e0a\u53f3\u513f\u5b50\u4e0a\u6240\u6709\u5b66\u751f\u4ece\u53f3\u513f\u5b50\u7684\u5de6\u7aef\u70b9\u8dd1\u5230$u$\u7684\u5de6\u7aef\u70b9\u6240\u8981\u6d88\u8017\u7684\u4f53\u529b\u503c\u3002\uff08\u53ef\u4ee5\u81ea\u5df1\u5728\u6570\u8f74\u4e0a\u6a21\u62df\u4e00\u4e0b\uff09\n\n\u63a5\u4e0b\u6765\u8bbe\u8ba1\u67e5\u8be2\u51fd\u6570\u3002\u53c2\u6570\u5305\u62ec\u503c\u57df\u7684\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9$l$\u548c$r$\uff0c\u4ee5\u53ca\u76ee\u6807\u4f4d\u7f6e\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9$ql$\u548c$qr$\u3002\u663e\u7136\u5bf9\u4e8e\u4ee5\u4e0b\u60c5\u51b5\uff0c\u51fd\u6570\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u8ba1\u7b97\u5f97\u51fa\u7b54\u6848\uff1a\n\n- $r\\le ql$ \u6b64\u65f6\u5904\u4e8e\u5f53\u524d\u503c\u57df\u5185\u7684\u6240\u6709\u5b66\u751f\u90fd\u8981\u5f80\u53f3\u8dd1\n- $qr\\le l$ \u6b64\u65f6\u5904\u4e8e\u5f53\u524d\u503c\u57df\u5185\u7684\u6240\u6709\u5b66\u751f\u90fd\u8981\u5f80\u5de6\u8dd1\n- \u5f53\u524d\u503c\u57df\u5185\u6ca1\u6709\u5b66\u751f \u8fd4\u56de $0$\n\n\u5426\u5219\uff0c\u5fc5\u987b\u5c06\u503c\u57df\u62c6\u5206\uff0c\u9012\u5f52\u5230\u5de6\u53f3\u5b50\u8282\u70b9\u8fdb\u884c\u7edf\u8ba1\u3002\n\n\u672c\u9898\u6700\u7ed5\u7684\u5730\u65b9\u5728\u4e8e**\u5b66\u751f\u7f16\u53f7**\u548c**\u5b66\u751f\u4f4d\u7f6e**\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u4e1c\u897f\uff0c\u5728\u8bbe\u8ba1\u67e5\u8be2\u51fd\u6570\u65f6\u5fc5\u987b\u533a\u5206\u503c\u57df\u548c\u7f16\u53f7\u7684\u6982\u5ff5\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nconst int MAXN=500005;\nconst int L=1000005;\n\nint N,M;\n\nstruct Node{\n    int l,r;\n    ll gl,gr,sum;\n}node[L*22+5];\nint head[MAXN];\nint cnt;\n\ninline void build(Node& u,int l,int r){\n    u.sum=u.gl=u.gr=0;\n    if(l==r) return;\n    int mid=(l+r)>>1;\n    build(node[u.l=++cnt],l,mid);\n    build(node[u.r=++cnt],mid+1,r);\n}\n\ninline void insert(Node c,Node& u,int l,int r,int p){\n    u.sum=c.sum+1;u.gl=u.gr=0;\n    if(l==r) return;\n    int mid=(l+r)>>1;\n    if(p<=mid)\n        insert(node[c.l],node[u.l=++cnt],l,mid,p),u.r=c.r;\n    else\n        insert(node[c.r],node[u.r=++cnt],mid+1,r,p),u.l=c.l;\n    u.gl=node[u.l].gl+node[u.r].gl+node[u.r].sum*(mid-l+1);\n    u.gr=node[u.r].gr+node[u.l].gr+node[u.l].sum*(r-mid);\n}\n\ninline ll query(Node x,Node y,int l,int r,ll ql,ll qr){\n    ll sum=y.sum-x.sum; \n    ll gl=y.gl-x.gl,gr=y.gr-x.gr;\n    if(sum==0) return 0;\n    if(qr<=l)\n        return gl+(2*l-ql-qr)*(qr-ql+1)/2;\n    if(ql>=r)\n        return gr+(ql+qr-2*r)*(qr-ql+1)/2;\n    int mid=(l+r)>>1;\n    ll lsum=node[y.l].sum-node[x.l].sum;\n    return query(node[x.l],node[y.l],l,mid,ql,ql+lsum-1)+\n           query(node[x.r],node[y.r],mid+1,r,ql+lsum,qr);\n}\n\nint main(){\n    scanf(\"%d%d\",&N,&M);\n    build(node[0],1,L);\n    for(register int i=1;i<=N;++i){\n        int a;\n        scanf(\"%d\",&a);\n        insert(node[head[i-1]],node[head[i]=++cnt],1,L,a);\n    }\n    for(register int i=1;i<=M;++i){\n        ll l,r,k;\n        scanf(\"%lld%lld%lld\",&l,&r,&k);\n        printf(\"%lld\\n\",query(node[head[l-1]],node[head[r]],1,L,k,k+r-l));\n    }\n    return 0;\n}\n\n\n```",
        "postTime": 1554868536,
        "uid": 116851,
        "name": "_\u98ce\u4f11\u4f4f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4559 \u3010[JSOI2018]\u5217\u961f\u3011"
    },
    {
        "content": "### \u4e00\u3001\u524d\u7f6e\u829d\u58eb\n\n+ [\u4e3b\u5e2d\u6811](https://www.luogu.com.cn/problem/P3834)\n\n### \u4e8c\u3001\u9898\u76ee\u5927\u610f\n\n+ \u6709 $n$ \u4e2a\u5b66\u751f\uff0c\u7f16\u53f7\u4e3a $i$ \u7684\u5b66\u751f\u7684\u4f4d\u7f6e\u662f $a_i$\u3002\n\n+ \u6709 $m$ \u4e2a\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7f16\u53f7\u5728 $[l,r]$ \u4e4b\u95f4\u7684\u6240\u6709\u5b66\u751f\u96c6\u5408\u5230 $[k,k+r-l]$ \u6240\u4f4d\u7f6e\u82b1\u8d39\u7684\u603b\u548c\u3002\n\n### \u4e09\u3001\u9898\u76ee\u89e3\u6790\n\n+ \u7531\u9898\u76ee\u4e0d\u96be\u77e5\uff0c\u5f53\u6240\u6709\u8981\u96c6\u5408\u7684\u5b66\u751f\u4f4d\u7f6e\u76f8\u5bf9\u4e0d\u53d8\u65f6\uff0c\u6b64\u65f6\u89e3\u4e00\u5b9a\u662f\u6700\u4f18\u89e3\uff0c\u6545\u6211\u4eec\u4e00\u5b9a\u53ef\u4ee5\u5728 $[k,k+r-l]$ \u4e2d\u627e\u5230\u4e00\u4e2a\u4f4d\u7f6e $mid$ \u4f7f\u5f97\u6240\u6709 $a_i \\le mid$ \u7684\u5b66\u751f\u96c6\u4e2d\u5728 $[k,k+mid-1]$ \u4e4b\u4e2d\uff0c\u800c\u5176\u4f59\u6240\u6709\u5b66\u751f\u96c6\u5408\u5728 $[k+mid,k+r-l]$ \u4e2d\n\n+ \u800c\u6b64\u65f6\u7b54\u6848\u5c31\u662f \n\n$$Ans=\\sum_{i=k}^{mid}1-\\sum_{i=mid+1}^{k+r-l}1+\\sum_{i=l}^{r}a_i-2\\sum_{i=l}^{a_i\\le mid}{a_i}$$\n\n+ \u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u5728\u4e3b\u5e2d\u6811\u6765\u7ef4\u62a4\u533a\u95f4 $[l,r]$ \u5e76\u5728\u533a\u95f4\u4e0a\u4e8c\u5206\u548c\u8ba1\u7b97\u7b54\u6848\u3002\n\n### \u56db\u3001\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntemplate<typename T>inline void rd(T&x) {\n\tx = 0;\n\tT f = 1;\n\tchar ch = getchar();\n\twhile (!isdigit(ch))f = (ch == '-') ? -1 : 1, ch = getchar();\n\twhile (isdigit(ch))x = (x << 1) + (x << 3) + ch - '0', ch = getchar();\n\tx *= f;\n}\nconst int M = 500010, inf = 1000000;\nstruct Node {\n\tint l, r, siz;\n\tll sum;\n} T[M << 4];\nint rt[M], node, n, m;\ninline int copy(int x) {\n\treturn T[++node] = T[x], node;\n}\n#define mid ((l+r)>>1)\ninline void update(int&k, int pre, int l, int r, int x) {\n\tk = copy(pre);\n\tT[k].siz++;\n\tT[k].sum += x;\n\tif(l==r)return;\n\tif (x <= mid)update(T[k].l, T[pre].l, l, mid, x);\n\telse update(T[k].r, T[pre].r, mid + 1, r, x);\n}\nll query(int i, int j, int l, int r, int x, int y) {\n\tif (x > y)return 0;\n\tif (r <= y)  //\u5047\u5982\u533a\u95f4\u5728 mid \u5de6\u8fb9 \n\t\treturn (ll)y * (y - x + 1) - (T[j].sum - T[i].sum) - (ll)(y - x) * (y - x + 1) / 2;\n\tif (x <= l)  //\u5047\u5982\u533a\u95f4\u5728 mid \u53f3\u8fb9 \n\t\treturn (T[j].sum - T[i].sum) - (ll)x * (y - x + 1) - (ll)(y - x) * (y - x + 1) / 2;\n\tint tt = T[T[j].l].siz - T[T[i].l].siz;\n\treturn query(T[i].l, T[j].l, l, mid, x, x + tt - 1)\n\t       + query(T[i].r, T[j].r, mid + 1, r, x + tt, y);\n\t//\u5982\u679c\u5de6\u53f3\u76f8\u4ea4\u5219\u5bfb\u627e\u4e2d\u95f4\u70b9 mid \u5e76\u5206\u6cbb \n}\nint main() {\n\trd(n), rd(m);\n\tfor (int i = 1; i <= n; i++) {\n\t\tint x;\n\t\trd(x);\n\t\tupdate(rt[i], rt[i-1], 1, inf, x);\n\t}\n\tfor (int i = 1; i <= m; i++) {\n\t\tint l, r, k;\n\t\trd(l), rd(r), rd(k);\n\t\tprintf(\"%lld\\n\", query(rt[l - 1], rt[r], 1, inf, k, k + r - l));\n\t}\n\treturn 0;\n}\n\n```\n\n\u6492\u82b1",
        "postTime": 1652081232,
        "uid": 233260,
        "name": "zyp123456",
        "ccfLevel": 7,
        "title": "P4559\u9898\u89e3"
    },
    {
        "content": "\u6211\u4eec\u53d1\u73b0\u8fd9\u662f\u9053 \u53ef\u601c \u9898\uff0c\u554a\u5478\uff0c\u8fd9\u662f\u9053 **\u6811** \u636e\u7ed3\u6784\u9898\uff01\n\n~~\uff08\u53ef\u601c\u597d\u7d2f\u554a 2018 \u5e74\u6d59\u6c5f\u6c5f\u82cf\u4e24\u5730\u6765\u56de\u8dd1\u8fd8\u8f6e\u6d41\u88ab\u55b7...\uff09~~\n\n\u4e8e\u662f\u8ba9\u6211\u4eec\u6765\u4ed4\u7ec6\u5206\u6790\u4e00\u6ce2\u8fd9\u9053\u9898\u7684\u89e3\u6cd5\u5427\n\n\n\u9996\u5148\u66b4\u529b $n^3 log~ n$ \u7684\u505a\u6cd5\u53ef\u4ee5\u62ff\u5230 $10$ \u5206\n\n\u7b2c\u4e8c\u4e2a\u90e8\u5206\u7684 $n^2$ \u7b97\u6cd5\u6211\u662f\u60f3\u4e0d\u51fa\u6765...\n\n\u81f3\u4e8e\u540e\u9762\u7684\u5206\u6570\u5c31\u8981\u5f00\u59cb\u601d\u8003\u6b63\u89e3\u4e86\n\n\u6211\u4eec\u8003\u8651\u66b4\u529b\u7684\u505a\u6cd5\u5728\u4e8e\u5c06\u6574\u4e2a\u533a\u95f4\u7684\u6570\u9886\u51fa\u6765\u6392\u4e86\u4e2a\u5e8f\uff0c\u4e8e\u662f\u6211\u4eec\u8003\u8651\u7528\u83ab\u961f\u4f18\u5316\u4e00\u4e0b\uff0c\u53cd\u6b63\u8fd9\u9898\u4e0d\u5f3a\u5236\u5728\u7ebf\n\n\u4e8e\u662f\u6211\u4eec\u6bcf\u6b21\u5728 splay \u91cc\u9762\u53d6/\u5220\u4e00\u4e2a\u6570\uff0c\u590d\u6742\u5ea6\u4e3a $O(log n)$\n\n\u4f46\u662f\u6ca1\u6709\u7528\u554a\uff0c\u6700\u540e\u7b97\u7b54\u6848\u8fd8\u662f\u8981 $splay$ \u4e0a\u6eda\u4e00\u904d\uff0c\u590d\u6742\u5ea6\u90fd\u6ca1\u53d8\u8fc7\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u9898\u76ee\u4e2d\u7684\u6027\u8d28\n\n\u6211\u4eec\u8981\u8ba9\u6240\u6709\u7684\u6570\u96c6\u4e2d\u5230\u4e00\u4e2a\u533a\u57df\uff0c\u90a3\u4e48\u81ea\u7136\u662f\u5de6\u534a\u90e8\u5206\u70b9\u96c6\u4e2d\u5230\u6307\u5b9a\u533a\u57df\u7684\u5de6\u534a\u8fb9\uff0c\u53f3\u534a\u90e8\u5206\u70b9\u5230\u53f3\u534a\u8fb9\uff0c\u8fd9\u6837\u6700\u4f18\n\n\n\u4f46\u662f\u6211\u4eec\u5c31\u662f\u4e0d\u77e5\u9053\u8fd9\u5de6\u53f3\u90e8\u5206\u7684\u8fb9\u754c\uff0c\u4f46\u662f\u6211\u4eec\u77e5\u9053\u8fd9\u4e2a\u8fb9\u754c\u4e00\u5b9a\u53ef\u4ee5\u5728\u6307\u5b9a\u96c6\u5408\u7684\u533a\u57df\u4e2d\n\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u5728\u533a\u57df\u4e2d\u4e8c\u5206\u8fd9\u4e2a\u8fb9\u754c\uff0c\u4f7f\u5f97\u5176\u6ee1\u8db3**\u8fb9\u754c\u5de6\u7aef\u7684\u70b9\u6570**\u7b49\u4e8e**\u8fd9\u4e2a\u8fb9\u754c\u4e0e\u6307\u5b9a\u533a\u57df\u5de6\u7aef\u70b9**\u4e4b\u95f4\u7684\u8ddd\u79bb\n\n\u7136\u540e\u5957\u4e0a splay \u7684\u590d\u6742\u5ea6\u5c31\u662f $O(log^2n)$\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u6700\u540e\u7684\u7b54\u6848\u53ef\u4ee5\u53d8\u6210\n\n$$ANS=(\\sum_{i=K}^{K+_m}i-\\sum_{a_j<K+m} a_j ) + ( \\sum_{a_j>K+m}a_j-\\sum_{i=K+m+1}^{K+R-L}i  )$$\n\n\uff08m \u4e3a\u8fb9\u754c\uff0cL R K \u4e3a\u4e09\u4e2a\u8be2\u95ee\u503c\uff09\n\n\u8fd9\u4e2a\u5f0f\u5b50\u4e2d\u7684\u7b49\u5dee\u6570\u5217\u6211\u4eec\u53ef\u4ee5 $O(1)$ \u6c42\u5f97\uff0c\u800c $a_i$ \u7684\u548c\u901a\u8fc7 $splay$ \u4e0a\u67e5\u8be2\u53ef\u4ee5 $O(log~ n)$ \u5f97\u5230\n\n\u518d\u52a0\u4e0a\u4e4b\u524d\u4e8c\u5206\u8fb9\u754c\u7684 $log^2n$\uff0c\u4e8e\u662f\u603b\u8be2\u95ee\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $m~log^2n$\n\n\n\u4f46\u662f\u8fd9\u6837\u53ea\u80fd 70 \u5206\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e0d\u4e8c\u5206\u76f4\u63a5\u627e\u8fb9\u754c\uff0c\u5c31\u662f\u5411\u4e0b\u6bcf\u6b21\u5230\u4e00\u4e2a\u70b9\u90fd\u5224\u65ad\u4e00\u4e0b\u8fd9\u91cc\u80fd\u4e0d\u80fd\u6ee1\u8db3\u6761\u4ef6...\uff08\u7559\u7ed9\u8bfb\u8005\u60f3\u50cf\uff09\n\n\n\u7136\u540e\u7531\u4e8e\u6211\u4e0d\u4f1a\u6253 splay \uff0c\u5c31\u7528\u4e86\u4e3b\u5e2d\u6811\u5b8c\u6210\u8fd9\u4e00\u7cfb\u5217\u64cd\u4f5c...\uff08\u660e\u660e\u4e3b\u5e2d\u6811\u66f4\u65b9\u4fbf\u7684\u8bf4\uff1f\uff09\n\n\n\u7136\u540e\u6211\u4e00\u5f00\u59cb\u79bb\u6563\u4e86 a \u6570\u7ec4\u3002\u3002\u3002\u5176\u5b9e\u4e0d\u79bb\u6563\u65b9\u4fbf\u4e00\u70b9\uff0c\u800c\u4e14 a \u7684\u6570\u636e\u8303\u56f4\u4e5f\u4e0d\u5927...\n\n\n```\n//by Judge\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#define mid (l+r>>1)\n#define ll long long\n#define rint register int \nusing namespace std;\nconst int M=5e5+3;\ntypedef int arr[M<<6];\n#ifndef Judge\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n#endif\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline void cmax(int& a,int b){if(a<b)a=b;}\ninline int read(){ int x=0,f=1; char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0'; return x*f;\n} char sr[1<<21],z[20];int C=-1,Z;\ninline void Ot(){fwrite(sr,1,C+1,stdout),C=-1;}\ninline void print(ll x,char chr='\\n'){\n    if(C>1<<20)Ot();if(x<0)sr[++C]=45,x=-x;\n    while(z[++Z]=x%10+48,x/=10);\n    while(sr[++C]=z[Z],--Z);sr[++C]=chr;\n} int n,m,mx,tot,L,R,K,siz;\nint a[M],rt[M]; arr ls,rs,num; ll sum[M<<6];\nvoid update(int& k,rint las,rint l,rint r,rint x){ if(!k) k=++tot;\n\tnum[k]=num[las]+1,sum[k]=sum[las]+x; if(l==r) return ;\n\tif(x<=mid) rs[k]=rs[las],update(ls[k],ls[las],l,mid,x);\n\telse ls[k]=ls[las],update(rs[k],rs[las],mid+1,r,x);\n}\nll query_sum(rint u,rint v,rint l,rint r){ //\u8fd9\u91cc\u7684 siz \u8981\u5f04\u5168\u5c40\u53d8\u91cf\uff0c\u56e0\u4e3a\u4e0b\u9762\u8fd8\u8981\u7528\u5230\u8fd9\u4e2a\u8fb9\u754c\n\tif(!v||l==r) return siz+=num[v]-num[u],sum[v]-sum[u];\n\trint Num=num[ls[v]]-num[ls[u]]; ll Sum=sum[ls[v]]-sum[ls[u]];\n\tif(siz+Num<=mid-K+1) return query_sum(ls[u],ls[v],l,mid); //\u8fd9\u91cc\u53ef\u4ee5\u5224\u65ad\u8fb9\u754c\u7684\u5408\u6cd5\u6027\n\treturn siz+=Num,query_sum(rs[u],rs[v],mid+1,r)+Sum;\n}\ninline ll sum1(rint x){ return 1ll*x*(x+1)/2; }\ninline ll calc(){ siz=0; //\u7b97\u8d21\u732e\n\tll Lans=query_sum(rt[L-1],rt[R],1,mx); //\u5148\u627e\u8fb9\u754c\u5e76\u540c\u65f6\u7b97\u51fa\u8fb9\u754c\u5de6\u7aef\u7684\u8d1f\u8d21\u732e\n\tll Rans=sum[rt[R]]-sum[rt[L-1]]-Lans;\n\tLans=(sum1(K+siz-1)-sum1(K-1))-Lans; //\u7b49\u5dee\u6570\u5217\u6c42\u548c\u8fd8\u662f\u4e60\u60ef\u5199\u8fd9\u6837...\n\tRans=Rans-(sum1(K+R-L)-sum1(K+siz-1));\n\treturn Lans+Rans;\n}\nint main(){ n=read(),m=read();\n\tfor(rint i=1;i<=n;++i)\n\t\ta[i]=read(),cmax(mx,a[i]);\n\tfor(rint i=1;i<=n;++i)\n\t\tupdate(rt[i],rt[i-1],1,mx,a[i]);\n\tfor(rint i=1,l,r;i<=m;++i)\n\t\tL=read(),R=read(),\n\t\tK=read(),print(calc());\n\treturn Ot(),0;\n}\n```\n\n\n\n\n\n\n",
        "postTime": 1552288315,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4559 \u3010[JSOI2018]\u5217\u961f\u3011"
    },
    {
        "content": "## \u95ee\u9898\u63cf\u8ff0\n\n\u4f5c\u4e3a\u4e00\u540d\u5927\u5b66\u751f\uff0c\u4e5d\u6761\u53ef\u601c\u5728\u53bb\u5e74\u53c2\u52a0\u4e86\u5979\u4eba\u751f\u4e2d\u7684\u6700\u540e\u4e00\u6b21\u519b\u8bad\u3002\n\n\u519b\u8bad\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u9879\u76ee\u662f\u7ec3\u4e60\u5217\u961f\uff0c\u4e3a\u4e86\u8bad\u7ec3\u5b66\u751f\uff0c\u6559\u5b98\u7ed9\u6bcf\u4e00\u4e2a\u5b66\u751f\u5206\u914d\u4e86\u4e00\u4e2a\u4f11\u606f\u4f4d\u7f6e\u3002\u6bcf\u6b21\u8bad\u7ec3\u5f00\u59cb\u524d\uff0c\u6240\u6709\u5b66\u751f\u90fd\u5728\u5404\u81ea\u7684\u4f11\u606f\u4f4d\u7f6e\u4f11\u606f\uff0c\u4f46\u662f\u5f53\u6559\u5b98\u53d1\u51fa\u96c6\u5408\u547d\u4ee4\u540e\uff0c\u88ab\u70b9\u5230\u7684\u5b66\u751f\u5fc5\u987b\u8981\u5230\u6307\u5b9a\u4f4d\u7f6e\u96c6\u5408\u3002\n\n\u4e3a\u4e86\u7b80\u5316\u95ee\u9898\uff0c\u6211\u4eec\u628a\u4f11\u606f\u4f4d\u7f6e\u548c\u96c6\u5408\u4f4d\u7f6e\u62bd\u8c61\u6210\u4e00\u6839\u6570\u8f74\u3002\u4e00\u5171\u6709 $n$ \u4e2a\u5b66\u751f\uff0c\u7b2c $i$ \u4e2a\u5b66\u751f\u7684\u4f11\u606f\u4f4d\u7f6e\u662f $a_i$\u3002\u6bcf\u4e00\u6b21\u547d\u4ee4\uff0c\u6559\u5b98\u4f1a\u6307\u5b9a\u4e00\u4e2a\u533a\u95f4 $[l,r]$ \u548c\u96c6\u5408\u70b9 $K$ \uff0c\u6240\u6709\u7f16\u53f7\u5728 $[l,r]$ \u5185\u7684\u5b66\u751f\u90fd\u5fc5\u987b\u8d76\u5230\u96c6\u5408\u70b9\u5217\u961f\u3002\u5728\u5217\u961f\u65f6\uff0c\u6bcf\u4e00\u4e2a\u5b66\u751f\u9700\u8981\u9009\u62e9 $[K,K+r-l]$ \u4e2d\u7684\u4e00\u4e2a\u6574\u6570\u5750\u6807\u7ad9\u5b9a\u4e14\u4e0d\u80fd\u6709\u4efb\u4f55\u4e24\u4e2a\u5b66\u751f\u9009\u62e9\u7684\u5750\u6807\u76f8\u540c\u3002\u5b66\u751f\u4ece\u5750\u6807 $x$ \u8dd1\u5230\u5750\u6807 $y$ \u9700\u8981\u8017\u8d39\u4f53\u529b $|y-x|$ \u3002\n\n\u5728\u4e00\u5929\u7684\u8bad\u7ec3\u4e2d\uff0c\u6559\u5b98\u4e00\u5171\u53d1\u5e03\u4e86 $m$ \u6761\u547d\u4ee4 $(l,r,K)$ \uff0c\u73b0\u5728\u4f60\u9700\u8981\u8ba1\u7b97\u5bf9\u4e8e\u6bcf\u4e00\u6761\u547d\u4ee4\uff0c\u5728\u6240\u6709\u53ef\u80fd\u7684\u5217\u961f\u65b9\u6848\u4e2d\uff0c\u6d88\u8017\u7684\u4f53\u529b\u503c\u603b\u548c\u6700\u5c0f\u662f\u591a\u5c11\u3002\n\n\u4ee5\u4e0b\u662f\u5bf9\u9898\u610f\u7684\u4e00\u4e9b\u8865\u5145\uff1a\n\n* \u4efb\u4f55\u4e24\u6761\u547d\u4ee4\u662f\u65e0\u5173\u7684\uff0c\u5373\u5728\u4e00\u6761\u96c6\u5408\u547d\u4ee4\u7ed3\u675f\u540e\uff0c\u6240\u6709\u5b66\u751f\u90fd\u4f1a\u56de\u5230\u81ea\u5df1\u7684\u4f11\u606f\u4f4d\u7f6e\uff0c\u7136\u540e\u6559\u5b98\u624d\u4f1a\u53d1\u51fa\u4e0b\u4e00\u6761\u547d\u4ee4\u3002\n* \u5728\u96c6\u5408\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u6709\u7f16\u53f7\u4e0d\u5728 $[l,r]$ \u5185\u7684\u5b66\u751f\u5904\u5728\u533a\u95f4 $[K,K+r-l]$ \u4e2d\uff0c\u8fd9\u65f6\u4ed6\u4f1a\u81ea\u5df1\u8dd1\u5f00\uff0c\u4e14\u8dd1\u52a8\u7684\u8ddd\u79bb\u4e0d\u8bb0\u5728\u6d88\u8017\u7684\u4f53\u529b\u503c\u603b\u548c\u4e2d\u3002\n\n---\n\n## \u9898\u89e3\n\n\u663e\u7136\uff0c\u4e0d\u539f\u76f8\u5bf9\u987a\u5e8f\u66f4\u4f18\u3002\n\n\u56e0\u6b64\u7b54\u6848\u4e3a $\\sum\\limits_{i=l}^r{a_i+rk_i-k-1}$ \u3002\n\n\u628a\u8fd9\u4e2a\u5f0f\u5b50\u62c6\u6389\u7edd\u5bf9\u503c\uff0c\u5c31\u53d8\u4e3a\u4e86\u5411\u5de6\u8dd1\u548c\u5411\u53f3\u8dd1\u7684\u4e24\u79cd\u60c5\u51b5\u3002\n\n\u5728\u53ef\u6301\u4e45\u5316\u6743\u503c\u7ebf\u6bb5\u6811\u4e0a\u8bb0\u5f55 $\\sum a_i$ \u5373\u53ef\u3002\n\n\u5176\u4ed6\u7684 $rk_i$ \u7684\u548c\u662f\u4e2a\u7b49\u5dee\u6570\u5217\u6c42\u503c\u3002\n\n---\n\n## $\\mathrm{Code}$\n\n\u4ece\u4eca\u5929\u8d77\u66f4\u6539\u7801\u98ce\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\ntypedef long long LL;\n\nconst int maxn = 500007;\nconst int maxs = 11000007;\nconst int s = 1000000;\n\nint n, T;\nint rt[maxn];\nint ls[maxs], rs[maxs], cnt;\nint size[maxs];\n\nLL sum[maxs];\n\nvoid Insert(int &x ,int l, int r, int val) {\n\tls[++cnt] = ls[x], rs[cnt] = rs[x], size[cnt] = size[x] + 1, sum[cnt] = sum[x] + (LL)val;\n\tx = cnt;\n\tif(l == r) return ;\n\tint mid = (l + r) >> 1;\n\tif(val <= mid) Insert(ls[x], l, mid, val);\n\telse Insert(rs[x], mid + 1, r, val);\n}\n\nint k;\n\nLL Query(int rt1, int rt2, int l, int r, int st) {\n\tif(size[rt1] - size[rt2] == 0) return 0ll;\n\tLL sz = size[rt1] - size[rt2], sigma = sum[rt1] - sum[rt2];\n\tif(l >= k + st) return sigma - sz * (2 * st + 2 * k + sz - 1) / 2;\n\tif(r <= k + st + sz - 1) return sz * (2 * st + 2 * k + sz - 1) / 2 - sigma;\n\tint mid = (l+r) >> 1;\n\treturn Query(ls[rt1], ls[rt2], l, mid, st) + Query(rs[rt1], rs[rt2], mid + 1, r, st + size[ls[rt1]] - size[ls[rt2]]);\n}\n\nvoid Init(void) {\n\tscanf(\"%d%d\", &n, &T);\n\tfor(int i = 1, x; i <= n; i++) {\n\t\tscanf(\"%d\", &x);\n\t\trt[i] = rt[i-1];\n\t\tInsert(rt[i], 1, s, x);\n\t}\n}\n\nvoid Work(void) {\n\twhile(T--) {\n\t\tint l, r;\n\t\tscanf(\"%d%d%d\", &l, &r, &k);\n\t\tprintf(\"%lld\\n\",Query(rt[r], rt[l-1], 1, s, 0));\n\t}\n}\n\nint main() {\n\tInit();\n\tWork();\n\treturn 0;\n}\n```",
        "postTime": 1582445168,
        "uid": 28910,
        "name": "\u89c8\u904d\u5343\u79cb",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4559 \u3010[JSOI2018]\u5217\u961f\u3011"
    }
]