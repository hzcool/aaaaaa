[
    {
        "content": "\uff08update 2020.9.6\uff1a\u4fee\u9519\u522b\u5b57\u53ca\u516c\u5f0f\u9519\u8bef\uff0c\u671b\u901a\u8fc7\uff09\n\n\u8fd9\u662f\u6211\u4ee5\u524d\u505a\u7684\u7b2c\u4e00\u9053\u7531\u4e43\u9898\uff08\u5230\u5199\u4f5c\u65f6\u4e5f\u662f\u552f\u4e00\u4e00\u9053\uff09\uff0c\u5199\u7bc7\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\u3002\n\n\u770b\u5230\u7531\u4e43\u9898\u5e94\u8be5\u60f3\u5230\u4ec0\u4e48\uff1f\n\n- \u5206\u5757\n- \u5361\u5e38\n\n---\n\n\u601d\u8def\uff1a\n\n\u6211\u4eec\u8003\u8651\u5206\u5757\u7ef4\u62a4\u5757\u5185\u7684\u548c\u3002\n\n\u672c\u9898\u96be\u70b9\u4e3b\u8981\u5728\u4fee\u6539\u64cd\u4f5c\uff1a\n\n- \u64cd\u4f5c\u4e00\uff1a\u5c06\u7f16\u53f7\u4e3a $y,y+x,y+2\\times x,\\cdots,y+k\\times x$ \u7684\u661f\u661f\u4eae\u5ea6\u589e\u52a0 $z$\u3002\n\n\u5bf9\u4e8e $x\\ge\\operatorname{SIZE}$\uff08$\\operatorname{SIZE}$ \u662f\u5757\u7684\u5927\u5c0f\uff0c\u7ea6\u4e3a $\\sqrt{n}$\uff09\uff0c\u7531\u4e8e\u9700\u8981\u4fee\u6539\u7684\u4f4d\u7f6e\u4e0d\u8d85\u8fc7\u5757\u6570\uff08\u7ea6\u4e3a $\\sqrt{n}$\uff09\uff0c\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u4fee\u6539\u5373\u53ef\u3002\n\n\u5bf9\u4e8e $x\\lt\\operatorname{SIZE}$\uff0c\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u4fee\u6539\uff0c\u8003\u8651\u5176\u4ed6\u65b9\u6cd5\uff1a\n\n\u56e0\u4e3a\u4eae\u5ea6\u53d8\u5316\u5728\u6574\u4e2a\u661f\u661f\u5e8f\u5217\u5185\u662f\u5468\u671f\u6027\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u7edf\u8ba1\u957f\u5ea6\u4e3a $x$ \u7684\u5468\u671f\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u7684**\u7d2f\u8ba1\u4fee\u6539\u603b\u548c**\u3002\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u5728\u67e5\u8be2\u7684\u65f6\u5019\u8017\u8d39\u65f6\u95f4\u6781\u591a\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4f18\u5316\u3002\u5bb9\u6613\u60f3\u5230\u901a\u8fc7**\u524d\u540e\u7f00\u548c**\u53ef\u4ee5\u89e3\u51b3**\u5355\u70b9\u6539\u3001\u533a\u95f4\u67e5**\u7684\u95ee\u9898\uff0c\u6211\u4eec\u7edf\u8ba1\u4fee\u6539\u7684\u524d\u540e\u7f00\u548c\u5373\u53ef\u3002\n\n- \u64cd\u4f5c\u4e8c\uff1a\u67e5\u8be2 $\\displaystyle\\sum_{i=l}^ra_i$\uff0c\u5176\u4e2d $a_i$ \u8868\u793a\u4eae\u5ea6\u3002\n\n\u5bf9\u4e8e\u4e24\u4fa7\u7684\u4e0d\u5b8c\u6574\u5757\uff0c\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u7edf\u8ba1\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u4e2d\u95f4\u7684\u5b8c\u6574\u5757\uff0c\u6211\u4eec\u6309\u7167\u5757\u6765\u7edf\u8ba1\u5373\u53ef\u3002\n\n\u7b49\u7b49\uff0c\u4e0d\u8981\u5fd8\u8bb0\u524d\u9762\u7edf\u8ba1\u7684\u524d\u540e\u7f00\u548c\uff01\u5728\u5f97\u5230\u6309\u5757\u7edf\u8ba1\u7684\u7ed3\u679c\u540e\uff0c\u6211\u4eec\u9700\u8981\u5c06\u7ed3\u679c\u52a0\u4e0a**\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5468\u671f\u957f\u5ea6\uff0c\u6839\u636e\u524d\u540e\u7f00\u548c\u7edf\u8ba1\u51fa\u7684\u7d2f\u8ba1\u4fee\u6539\u603b\u548c**\u3002\n\n---\n\n\u7b80\u5355\u603b\u7ed3\uff1a\n\n\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u539f\u6570\u7ec4\u3001\u5206\u5757\u6570\u7ec4\u548c\u5468\u671f\u7684\u524d\u540e\u7f00\u548c\uff0c\u4fee\u6539\u65f6\u4fee\u6539\u5757\u6216\u8005\u5468\u671f\u7684\u524d\u540e\u7f00\u548c\uff0c\u67e5\u8be2\u65f6\u7edf\u8ba1\u4e24\u4fa7\u4e0d\u5b8c\u6574\u5757\u3001\u4e2d\u95f4\u5b8c\u6574\u5757\u548c\u4e0d\u540c\u5468\u671f\u5728\u67e5\u8be2\u533a\u95f4\u5185\u7684\u4fee\u6539\u603b\u548c\u5373\u53ef\u3002\n\n---\n\n\u7136\u540e\u5c31\u662f\u6f2b\u957f\u7684\u5361\u5e38\u6570\u8fc7\u7a0b\uff0c\u6211\u5728\u7b2c $89$ \u6b21\u624d\u5361\u5e38\u6210\u529f\uff0c\u4e3b\u8981\u662f\u4e00\u76f4\u7528 C++\uff0c\u522b\u4eba\u544a\u8bc9\u6211 C++11 \u66f4\u5feb\uff0c\u624d\u53bb\u8bd5\u7684\u3002\n\n\u7531\u4e8e\u5361\u5e38\u539f\u56e0\uff0c\u7801\u98ce\u53ef\u80fd\u4e0e\u6211\u7684\u6b63\u5e38\u7801\u98ce\u6709\u4e00\u4e9b\u4e0d\u540c\uff0c\u656c\u8bf7\u8c05\u89e3\u3002\n\n\u4e3b\u8981\u4ee3\u7801\uff1a\n\n```cpp\n#define whichBlock(x) (\\\n\t(x - 1) / SIZE + 1\\\n)\ninline void initBlock() {\n\ttot = whichBlock(n);\n\tfor(register int i=1;i<=tot;++i) {\n\t\tl[i] = r[i-1] + 1;\n\t\tr[i] = i * SIZE;\n\t}\n\tr[tot] = n;\n}\ninline int sumBlock(register int x, register int y) {\n\tregister const int X = whichBlock(x), Y = whichBlock(y);\n\tregister int res = 0;\n\tif(X == Y) {\n\t\tfor(register int i=x;i<=y;++i) res = (res + a[i]) % mod;\n\t}\n\telse {\n\t\tfor(register int i=x;i<=r[X];++i) res = (res + a[i]) % mod;\n\t\tfor(register int i=X+1;i<=Y-1;++i) res = (res + s[i]) % mod;\n\t\tfor(register int i=l[Y];i<=y;++i) res = (res + a[i]) % mod;\n\t}\n\treturn res;\n}\ninline void modify(register int x, register int y, register int z=read()) {\n\tif(x >= SIZE) {\n\t\tfor(register int i=y;i<=n;i+=x) {\n\t\t\tregister const int _ = whichBlock(i);\n\t\t\ta[i] = (a[i] + z) % mod;\n\t\t\ts[_] = (s[_] + z) % mod;\n\t\t}\n\t}\n\telse {\n\t\tfor(register int i=y;i<=x;++i) pre[x][i] = (pre[x][i] + z) % mod;\n\t\tfor(register int i=1;i<=y;++i) suf[x][i] = (suf[x][i] + z) % mod;\n\t}\n}\ninline int query(register int x, register int y) {\n\tregister int res = sumBlock(x, y);\n\tfor(register int i=1;i<SIZE;++i) {\n\t\tregister const int X = (x - 1) / i + 1, Y = (y - 1) / i + 1;\n\t\tregister const int L = Y - X - 1;\n\t\tif(X == Y) res = (res - pre[i][(x-1)%i] + pre[i][(y-1)%i+1]) % mod;\n\t\telse res = (res + 1LL * L * pre[i][i] + pre[i][(y-1)%i+1] + suf[i][(x-1)%i+1]) % mod;\n\t}\n\treturn (res+mod)%mod;\n}\n```",
        "postTime": 1599379361,
        "uid": 122461,
        "name": "rui_er",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5309 \u3010[Ynoi2011]\u521d\u59cb\u5316\u3011"
    },
    {
        "content": "\u8fd9\u662f\u6211\u5f53\u65f6\u505a\u65f6\u5019Ynoi\u7b2c\u4e00\u8840\uff0c\u53d1\u4e00\u7bc7\u9898\u89e3\u3002\n\n\u77e5\u8bc6\u70b9\uff1a\n\n- \u5206\u5757\n\n- \u524d\u7f00\u540e\u7f00\u548c\n\n- \u5c0f\u6280\u5de7\n\n\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217\uff0c\u8ba9\u4f60\u7ef4\u62a4\u533a\u95f4\u548c\u8fd8\u6709\u533a\u95f4\u4e0b\u8868\u4e3a $y,x,2x,3x...kx$ \u7684\u6570\u52a0 $z$\u3002\n\n- \u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\uff1a\n\n1. \u5982\u679c $x \\ge \\sqrt n$\uff0c\u4e5f\u5c31\u662f\u8bf4 x \u5927\u4e8e\u7b49\u4e8e\u5757\u957f\uff0c\u90a3\u4e48\u53ef\u4ee5**\u66b4\u529b\u4fee\u6539**\u3002\u56e0\u4e3a\u5982\u679c x \u5927\u4e8e\u7b49\u4e8e\u6839\u53f7n\uff0c\u90a3\u4e48\u8df3\u7684\u6b21\u6570\u4f1a\u5c0f\u4e8e\u7b49\u4e8e $\\sqrt n$\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u5c31\u4e0d\u4f1a\u8d85\u8fc7 $O(\\sqrt n)$\u3002\n\n2. \u5982\u679c $x \\lt \\sqrt n$\uff0c\u6211\u4eec\u5c31\u4ee5 $x$ \u4e3a\u8df3\u7684\u5468\u671f\uff0c\u6bcf\u4e2a\u70b9\u7edf\u8ba1\u7d2f\u8ba1\u4fee\u6539\u603b\u548c\u3002~~Ynoi\u9898\u80af\u5b9a\u4f1a\u6709\u4e00\u4e2a\u5730\u65b9\u5361\u4f60~~\uff0c\u800c\u5728\u8fd9\u9053\u9898\u4e2d\uff0c\u521a\u521a\u8fd9\u79cd\u65b9\u6cd5\u5c31\u592a\u6162\u4e86\u3002\u4e3a\u4e86\u4f18\u5316\uff0c\u6211\u4eec\u91c7\u7528**\u524d\u7f00\u540e\u7f00\u7edf\u8ba1\u65b9\u6cd5**\u3002\n\n\u6240\u4ee5\u6839\u636e\u60c5\u51b5\uff0c\u9009\u62e9\u7edf\u8ba1\u5757\u3001\u524d\u7f00\u540e\u7f00\u548c\u3002\n\n- \u5bf9\u4e8e\u533a\u95f4\u548c\u64cd\u4f5c\uff1a\n\n1. \u66b4\u529b\u6c42\u4e24\u8fb9\u4e0d\u5b8c\u6574\u5757\u3002\n\n2. \u6839\u636e\u5757\u7edf\u8ba1\uff0c\u7136\u540e\u52a0\u5bf9\u5e94\u6bcf\u4e2a\u5468\u671f\u7684\u524d\u540e\u7f00\u7d2f\u8ba1\u4fee\u6539\u548c\u3002\n\n\u5219\u7edf\u8ba1\u5b8c\u6574\u548c\u4e0d\u5b8c\u6574\u5757\u4e2d\u7684\u524d\u7f00\u540e\u7f00\u6c42\u6539\u603b\u548c\u3002\n \n- tips: \n\n1. \u8fd9\u9053\u9898\u4e0d\u7528\u5361\u5e38\uff0c\u6211\u52a0\u4e86\u4e00\u4e2a `ios::sync_with_stdio(0);` \u7136\u540e\u5c31\u7528cin cout\u8fc7\u4e86\u3002\n\n2. \u9700\u8981\u6a21\u6570\u7684\u5730\u65b9\u4e00\u5b9a\u8981\u6a21\u597d\uff0c\u51cf\u5b8c\u6570\u65f6\u5019\u5343\u4e07\u4e0d\u8981\u6a21\uff0c\u5728\u6c42\u548c\u7684\u65f6\u5019\u8981\u628a\u5f0f\u5b50\u5408\u8d77\u6765\uff0c\u8981\u4e0d\u7136\u4f1a\u70b8int\u3002\n\n```\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\n#define MOD 1000000007\n\n//#define int long long\n\nconst int MAXN = 200005;\n\nint block, L[MAXN], R[MAXN], num, n, m, a[MAXN], sum[MAXN], pre[500][500], suf[500][500];\n\n/* num\uff1a\u5757\u7684\u4e2a\u6570\n * pre\uff0csuf \u524d\u7f00\u540e\u7f00\u548c\n * block\uff1a\u6bcf\u5757\u7684\u5927\u5c0f\n * L[i]\uff1ai\u8fd9\u5757\u5de6\u7aef\u70b9\u7684\u4f4d\u7f6e\n * R[i]\uff1ai\u8fd9\u5757\u53f3\u7aef\u70b9\u7684\u4f4d\u7f6e */\n\ninline int blockpos(int i) {\n    return (i - 1) / block + 1;\n}\n\ninline void update(int x, int y, int z) {\n    if (x >= block) { // \u8df3\u7684\u957f\u5ea6\u5927\u4e8e\u5757\u957f\uff0c\u590d\u6742\u5ea6\u4e5f\u662fsqrt(n)\n        for (int i = y; i <= n; i += x) {\n            int cur = blockpos(i);\n            a[i] += z;\n            a[i] %= MOD;\n            sum[cur] += z;\n            sum[cur] %= MOD;\n        }\n        return;\n    }\n    for (int i = y; i <= x; ++i) {\n        pre[x][i] += z;\n        pre[x][i] %= MOD;\n    }\n    for (int i = 1; i <= y; ++i) {\n        suf[x][i] += z;\n        suf[x][i] %= MOD;\n    }\n}\n\ninline int block_sum(int l, int r) {\n    int Ll = blockpos(l), Rr = blockpos(r), ans = 0;\n    if (Ll == Rr) {\n        for (int i = l; i <= r; ++i) {\n            ans += a[i];\n            ans %= MOD;\n        }\n        return ans;\n    }\n    for (int i = l; i <= R[Ll]; ++i) {\n        ans += a[i];\n        ans %= MOD;\n    }\n    for (int i = L[Rr]; i <= r; ++i) {\n        ans += a[i];\n        ans %= MOD;\n    }\n    for (int i = Ll + 1; i < Rr; ++i) {\n        ans += sum[i];\n        ans %= MOD;\n    }\n    return ans;\n}\n\ninline int query_sum(int l, int r) {\n    int bsum = block_sum(l, r);\n    for (int i = 1; i < block; ++i) {\n        int Ll = (l - 1) / i + 1, Rr = (r - 1) / i + 1;\n        if (Ll == Rr) {\n            bsum -= pre[i][(l - 1) % i];\n            bsum += pre[i][(r - 1) % i + 1];\n            bsum %= MOD;\n        } else {\n            bsum = (bsum + 1LL * (Rr - Ll - 1) * pre[i][i] + pre[i][(r - 1) % i + 1] + suf[i][(l - 1) % i + 1]) % MOD;\n        }\n    }\n    return (bsum + MOD) % MOD;\n}\n\nvoid solve() {\n    ios::sync_with_stdio(0);\n    cin >> n >> m;\n    for (int i = 1; i <= n; ++i) {\n        cin >> a[i];\n    }\n    block = sqrt(n);\n    num = n / block; //\u6c42\u5757\u7684\u4e2a\u6570\n    if (n % block) num++;\n    for (int i = 1; i <= num; ++i) L[i] = R[i - 1] + 1, R[i] = i * block;\n    R[num] = n;\n    for (int i = 1; i <= num; ++i) {\n        for (int j = L[i]; j <= R[i]; ++j) {\n            sum[i] += a[j];\n            sum[i] %= MOD;\n        }\n    }\n    while (m--) {\n        int op;\n        cin >> op;\n        if (op == 1) {\n            int x, y, z;\n            cin >> x >> y >> z;\n            update(x, y, z);\n            /*for (int i = 1; i <= n; ++i) {\n                cout << a[i] << ' ';\n            }\n            cout << \"\\n\";*/\n        }\n        if (op == 2) {\n            int l, r;\n            cin >> l >> r;\n            cout << query_sum(l, r) << '\\n';\n        }\n    }\n}\n\nint main() {\n    solve();\n    return 0;\n}\n```\n\n\n\n\n\n",
        "postTime": 1601983343,
        "uid": 298325,
        "name": "Marshadow",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5309 \u3010[Ynoi2011]\u521d\u59cb\u5316\u3011"
    },
    {
        "content": "\u5206\u5757+\u6839\u53f7\u5206\u6cbb\u7b80\u5355\u7ef4\u62a4\u5373\u53ef\u3002\r\n\r\n\u8003\u8651\u5bf9$x$\u7684\u5927\u5c0f\u5206\u7c7b\u8ba8\u8bba\u3002\r\n\r\n\u82e5$x\\geqslant \\sqrt n$\uff0c\u5219\u6211\u4eec\u66b4\u529b\u7ed9\u6bcf\u4e2a\u4f4d\u7f6e\u52a0\uff0c\u9700\u8981\u52a0\u7684\u6b21\u6570\u4e3a$O(\\sqrt n)$\u6b21\u3002\u7531\u4e8e\u9700\u8981\u67e5\u8be2\u533a\u95f4\u548c\uff0c\u7528\u5206\u5757\u7ef4\u62a4\uff0c\u603b\u4fee\u6539\u3001\u67e5\u8be2\u590d\u6742\u5ea6\u4e3a$O(m\\sqrt n)$\u3002\r\n\r\n\u82e5$x< \\sqrt n$\uff0c\u6211\u4eec\u9700\u8981\u7528\u53e6\u5916\u7684\u65b9\u6cd5\u7ef4\u62a4\u3002\r\n\r\n\u6ce8\u610f\u5230\u5355\u6b21\u4fee\u6539\u662f\u9488\u5bf9\u6574\u4e2a\u5e8f\u5217\u7684\u5143\u7d20\uff0c\u6240\u4ee5\u5bf9$x,y$\u76f8\u540c\u7684\u4fee\u6539\uff0c\u6211\u4eec\u53ef\u4ee5\u7d2f\u52a0\u5b83\u7684\u8d21\u732e\u3002\r\n\r\n\u90a3\u4e48\u6211\u4eec\u6bcf\u6b21\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u9700\u8981\u5bf9\u4e8e\u6240\u6709\u7684$x$\u8fdb\u884c\u4e00\u904d\u67e5\u8be2\u3002\u6545\u6211\u4eec\u9700\u8981\u505a\u5230\u5355\u6b21$O(1)$\u3002\r\n\r\n\u6211\u4eec\u5bf9\u6bcf\u4e2a$x$\uff0c\u7ef4\u62a4$y$\u7684\u524d\u7f00\u3001\u540e\u7f00\u548c\u3002\u5bf9\u4e8e\u4e00\u6b21\u8be2\u95ee\uff0c\u6211\u4eec\u53ef\u4ee5\u5f53\u6210\u628a\u5e8f\u5217\u5206\u6210\u4e86\u82e5\u5e72\u4e2a\u5927\u5c0f\u4e3a$x$\u7684\u5757\u3002\u4e2d\u95f4\u7684\u6574\u5757\u5143\u7d20\uff0c\u6bcf\u4e2a\u5757\u91cc\u80af\u5b9a\u6240\u6709\u7684$y$\u90fd\u6709\uff0c\u589e\u52a0\u7684\u8d21\u732e\u5c31\u662f\u5173\u4e8e$x$\u7684\u4fee\u6539\u603b\u548c\u3002\u6240\u6709\u5757\u7684\u8d21\u732e\u76f8\u540c\uff0c\u53ef\u4ee5$O(1)$\u7b97\u3002\u8fb9\u89d2\u7684\u8bdd\uff0c\u7531\u4e8e\u6211\u4eec\u8bb0\u5f55\u4e86\u524d\u7f00\u3001\u540e\u7f00\u548c\uff0c\u4e5f\u53ef\u4ee5$O(1)$\u7b97\u3002\u4e24\u4e2a\u7aef\u70b9\u5728\u540c\u4e00\u4e2a\u5757\u4e2d\uff0c\u5219\u76f4\u63a5\u524d\u7f00\u548c\u76f8\u51cf\u5373\u53ef\u3002\r\n\r\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6$O(m\\sqrt n)$\u3002\r\n\r\n\u7531\u4e8e\u5e38\u6570\u539f\u56e0\uff0c\u9608\u503c\u4e0d\u5e94\u8be5\u53d6\u592a\u5927\u3002\r\n\r\n## Code\uff1a\r\n```cpp\r\n#include<iostream>\r\nconst int siz=128,M=siz+2,N=2e5+5,Z=N/siz+2,md=1e9+7;\r\n#define bel(x)((x-1)/siz+1)\r\ninline void upd(int&a){a+=a>>31&md;}\r\nint n,blocks,L[Z],R[Z],a[N],sum[Z],m;\r\nint pre[M][M],suf[M][M];\r\ninline int sigma(int l,int r){\r\n\tconst int bL=bel(l),bR=bel(r);\r\n\tint ret=0;\r\n\tif(bL==bR)\r\n\tfor(int i=l;i<=r;++i)upd(ret+=a[i]-md);\r\n\telse{\r\n\t\tfor(int i=R[bL];i>=l;--i)upd(ret+=a[i]-md);\r\n\t\tfor(int i=L[bR];i<=r;++i)upd(ret+=a[i]-md);\r\n\t\tfor(int i=bL+1;i<bR;++i)upd(ret+=sum[i]-md);\r\n\t}\r\n\treturn ret;\r\n}\r\nint main(){\r\n\tstd::ios::sync_with_stdio(0),std::cin.tie(0),std::cout.tie(0);\r\n\tstd::cin>>n>>m;\r\n\tblocks=bel(n);\r\n\tfor(int i=1;i<=blocks;++i)L[i]=R[i-1]+1,R[i]=i*siz;R[blocks]=n;\r\n\tfor(int i=1;i<=n;++i)std::cin>>a[i];\r\n\tfor(int i=1;i<=blocks;++i)\r\n\tfor(int j=L[i];j<=R[i];++j)upd(sum[i]+=a[j]-md);\r\n\twhile(m--){\r\n\t\tint op;\r\n\t\tstd::cin>>op;\r\n\t\tif(op==1){\r\n\t\t\tint x,y,z;\r\n\t\t\tstd::cin>>x>>y>>z,z-=md;\r\n\t\t\tif(x>=siz)\r\n\t\t\tfor(int i=y;i<=n;i+=x)upd(a[i]+=z),upd(sum[bel(i)]+=z);\r\n\t\t\telse{\r\n\t\t\t\tint*pr=pre[x],*sf=suf[x];\r\n\t\t\t\tfor(int i=x;i>=y;--i)upd(pr[i]+=z);\r\n\t\t\t\tfor(int i=1;i<=y;++i)upd(sf[i]+=z);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tint l,r;\r\n\t\t\tstd::cin>>l>>r;\r\n\t\t\tint ans=sigma(l,r);\r\n\t\t\tfor(int i=1;i<siz;++i){\r\n\t\t\t\tconst int bL=(l-1)/i+1,bR=(r-1)/i+1;\r\n\t\t\t\tif(bL==bR)upd(ans+=pre[i][(r-1)%i+1]-md),upd(ans-=pre[i][(l-1)%i]);else\r\n\t\t\t\tans=(ans+(bR-bL-1LL)*pre[i][i])%md,upd(ans+=pre[i][(r-1)%i+1]-md),upd(ans+=suf[i][(l-1)%i+1]-md);\r\n\t\t\t}\r\n\t\t\tstd::cout<<ans<<'\\n';\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n```",
        "postTime": 1555582411,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5309 \u3010[Ynoi2012]D1T1\u3011"
    },
    {
        "content": "\u6211\u4eec\u770b\u5230\u8fd9\u79cd\u8df3\u7740\u52a0 / \u7edf\u8ba1\u8df3\u7740\u52a0\u548c\u7684\u9898\u76ee\uff0c\u5e94\u8be5\u60f3\u5230\u7684\u5c31\u662f\u6839\u53f7\u5206\u6cbb\u3002\n\n\u8fd8\u6709\u4e00\u79cd\u8981\u9884\u5904\u7406\u548c\u67e5\u8be2\u5e73\u8861\u7684\u9898\u4e5f\u662f\u6839\u53f7\u5206\u6cbb\u7684\u5e38\u89c1\u4f8b\u5b50\u3002\n\n\u6211\u4eec\u8bbe\u4e00\u4e2a\u9608\u503c $T$\uff0c\u5728 $x$ \u5927\u4e8e $T$ \u7684\u65f6\u5019\u76f4\u63a5\u66b4\u529b\u4fee\u6539\u3002\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u4e00\u4e2a $O(1)$ \u4fee\u6539\u7684 ds\uff0c\u90a3\u4e48\u9996\u9009\u5206\u5757\u4e86\u3002\n\n\u95ee\u9898\u5c31\u5728\u4e8e $x$ \u5c0f\u4e8e $T$ \u7684\u65f6\u5019\u600e\u4e48\u641e\u3002\n\n\u8003\u8651\u7ef4\u62a4\u3002\u6211\u4eec\u53d1\u73b0\u5e8f\u5217\u53ef\u4ee5\u62bd\u8c61\u6210\u4e00\u4e9b\u5927\u5c0f\u4e3a $x$ \u7684\u6bb5\u3002\n\n\u663e\u7136\u4e2d\u95f4\u5b8c\u6574\u7684\u6bb5\u4e00\u5b9a\u4f1a\u88ab\u6240\u6709\u542b $x$ \u7684\u64cd\u4f5c\u4fee\u6539\uff0c\u4e24\u8fb9\u7684\u5c0f\u6bb5\u4f1a\u88ab\u90e8\u5206\u4fee\u6539\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/odz04dpb.png)\n\n\u4e00\u6761\u6761\u7ebf\u6bb5\u5c31\u662f\u5206\u51fa\u6765\u7684\u957f\u5ea6\u4e3a $x$ \u7684\u6bb5\u3002\u6a59\u8272\u7684\u7ebf\u662f\u67e5\u8be2\u7684\u4e24\u7aef\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u6570\u7ec4 $v(x, y)$ \u8868\u793a\u4fee\u6539\u7684\u65f6\u5019 $(x, y)$ \u4f4d\u7f6e\u4e0a\u7684\u6743\u503c\u548c\u3002\u518d\u8bb0\u5f55\u4e00\u4e2a\u524d\u7f00\u548c\u548c\u540e\u7f00\u548c\u5c31\u53ef\u4ee5\u5feb\u901f\u67e5\u8be2\u4e86\u3002\n\n```cpp\nconst int MAXN = 200005;\nconst int MAXB = 505;\nint a[MAXN], bel[MAXN], n, m, bn = 0, S, T;\nint L[MAXB], R[MAXB], sum[MAXB];\nint pre[MAXB][MAXB], suf[MAXB][MAXB];\nvoid init() {\n\tfor(rint tL = 1, tR; tL <= n; tL = tR + 1) {\n\t\ttR = tL + S - 1; ckmin(tR, n);\n\t\tL[++bn] = tL, R[bn] = tR;\n\t\tFor(i, tL, tR) bel[i] = bn, addmod(sum[bn], a[i]); \n\t}\n\tmst(pre, 0); mst(suf, 0);\n}\nint query(int l, int r) {\n\tint bl = bel[l], br = bel[r], res = 0;\n\tif(bl == br) {\n\t\tFor(i, l, r) addmod(res, a[i]);\n\t} else {\n\t\tFor(i, l, R[bl]) addmod(res, a[i]);\n\t\tFor(i, L[br], r) addmod(res, a[i]);\n\t\tFor(i, bl+1, br-1) addmod(res, sum[i]);\n\t}\n\tFor(x, 1, min(T, n)) {\n\t\tbl = (l - 1) / x + 1, br = (r - 1) / x + 1;\n\t\tif(bl == br) {\n\t\t\taddmod(res, pre[x][r-(br-1)*x]);\n\t\t\taddmod(res, P-pre[x][l-1-(bl-1)*x]);\n\t\t} else {\n\t\t\taddmod(res, 1ll * pre[x][x] * (br - bl - 1) % P);\n\t\t\taddmod(res, pre[x][r-(br-1)*x]);\n\t\t\taddmod(res, suf[x][l-(bl-1)*x]);\n\t\t}\n\t\t\n\t\t\n\t}\n\treturn res % P;\n}\nsigned main()\n{\n\tcin >> n >> m; S = pow(n, 0.5); T = 60;\n\tFor(i, 1, n) a[i] = read() % P;\n\tinit();\n\twhile(m--) {\n\t\tint op = read(), x = read(), y = read(), z;\n\t\tif(op == 1) {\n\t\t\tz = read() % P;\n\t\t\tif(x <= T) {\n\t\t\t\tFor(i, y, x) addmod(pre[x][i], z);\n\t\t\t\tfoR(i, y, 1) addmod(suf[x][i], z);\n\t\t\t} else {\n\t\t\t\tfor(rint i = y; i <= n; i += x)\n\t\t\t\t\taddmod(a[i], z), addmod(sum[bel[i]], z);\n\t\t\t}\n\t\t} else {\n\t\t\tprintf(\"%d\\n\", query(x, y));\n\t\t}\n\t}\n    return 0;\n}\n```",
        "postTime": 1584845723,
        "uid": 55078,
        "name": "YLWang",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5309 \u3010[Ynoi2011]\u521d\u59cb\u5316\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u6b21\u60f3\u51fa $Ynoi$ \u796d\u3002\n\n\u5c0f\u6e05\u65b0\u5206\u5757\u9898\uff01\u65e0\u9650 $orz\\ lxl$\n\n\u60f3\u5fc5 $n,m\\leq 1000$ \u548c $x\\geq 300$ \u5927\u5bb6\u90fd\u4f1a\u505a\u5427\u3002\n\n\u8fd9\u6837\u5c31\u6709\u4e00\u4e2a\u63d0\u793a\uff1a\u6211\u4eec\u53ef\u4ee5\u9009\u5b9a\u4e00\u4e2a\u6570 $T$\uff0c\u5bf9\u4e8e $x>T$\uff0c\u6211\u4eec\u76f4\u63a5\u66b4\u529b\uff1b\u5bf9\u4e8e $x\\leq T$\uff0c\u6211\u4eec\u8003\u8651\u5206\u5757\u7ef4\u62a4\u3002\n\n\u5b9e\u9645\u4e0a $T=30$ \u5c31\u8db3\u591f\u4e86\uff0c\u56e0\u4e3a\u7ef4\u62a4 $x\\leq T$ \u5e38\u6570\u6781\u5927\u3002\n\n\u4ee5\u4e0b\u91cd\u70b9\u8bb2 $x\\leq T$\n\n**\u63d0\u793a\uff1a\u4ee5\u4e0b\u8bb2\u89e3\u5e8f\u5217\u662f\u4ece $0$ \u5f00\u59cb\u7684\u3002**\n\n\u6211\u4eec\u4ee4 \n\n- $blo$ \u2014\u2014\u6b63\u5e38\u5757\u7684\u957f\u5ea6\n\n- $sum_i$ \u2014\u2014\u7b2c $i$ \u5757\u7684\u6743\u503c\u548c\n\n- $pos_i$ \u2014\u2014\u7b2c $i$ \u4e2a\u6570\u5728\u54ea\u4e2a\u5757\n\n- $L_i$ \u2014\u2014\u7b2c $i$ \u5757\u7684\u5de6\u7aef\u70b9\n\n- $R_i$ \u2014\u2014\u7b2c $i$ \u5757\u7684\u53f3\u7aef\u70b9\n\n\u6211\u4eec\u53ef\u4ee5 $O(1)$ \u7b97\u51fa $[l,r]$ \u4e2d\u6709\u591a\u5c11\u4e2a\u6570\u6a21 $x$ \u4f59 $y$\n\n\u5177\u4f53\u5b9e\u73b0\uff1a\n\n\u6211\u4eec\u53ef\u4ee5\u7b97\u51fa\u82e5\u4ee5 $x$ \u4e3a\u5757\u957f\u5ea6\u65f6\uff0c$l$ \u548c $r$ \u5728\u54ea\u4e00\u5757\u3002\n\n\u4ee4 $s=l\\%x,t=r\\%x$\n\n\u82e5 $l$ \u548c $r$ \u5728\u540c\u4e00\u5757\u4e2d\uff0c`ans = (s <= y && y <= n) ? 1 : 0`\n\n\u5426\u5219\u8de8\u8d8a $l$ \u548c $r$ \u7684\u6574\u5757\u4e2a\u6570\u4e3a `max(0, r / x - l / x - 1)`\uff0c\u7b54\u6848\u4e3a `max(0, r / x - l / x - 1) + (s <= y) ? 1 : 0 + (y <= t) ? 1 : 0`\n\n\u90a3\u4e48\u52a0\u4e0a\u5c31\u884c\u4e86\u3002\n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u8be2\u95ee\u7684\u65f6\u5019\u6574\u5757\u597d\u7ef4\u62a4\uff0c\u96f6\u6563\u7684\u5757\u96be\u7ef4\u62a4\u3002\n\n\u6211\u4eec\u518d\u4ee4\n\n$val_{i,j}$ \u2014\u2014\u6a21 $i$ \u4f59 $0\\sim j$ \u7684\u6743\u503c\u548c\n\n\u90a3\u4e48\u4fee\u6539\u7684\u65f6\u5019\u66b4\u529b\u4fee\u6539\u524d\u7f00\u548c\uff0c\u67e5\u8be2\u53ef\u4ee5 $O(1)$\n\n\u73b0\u5728\u5c31\u662f\u8be2\u95ee\u89e3\u51b3\u96f6\u6563\u5757\u7684\u95ee\u9898\u4e86\u3002\n\n\u6211\u4eec\u66b4\u529b\u67e5\u8be2 $1\\sim T$ \u7684\u6240\u6709\u6a21\u6570\uff0c\u7136\u540e\u7c7b\u4f3c\u8ba1\u7b97 $[l,r]$ \u4e2d\u6709\u591a\u5c11\u4e2a\u6570\u6a21 $x$ \u4f59 $y$ \u7684\u65b9\u6cd5\u7b97\u8d21\u732e\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\n\n$$O(\\frac {n^2}{T}+n\\sqrt{n})$$\n\n$Code\\ Below:$\n\n```cpp\n// luogu-judger-enable-o2\n#include <bits/stdc++.h>\n#define res register int\nusing namespace std;\nconst int maxn=200000+10;\nconst int mod=1e9+7;\nint n,m,blo,now,a[maxn],pos[maxn],L[450],R[450],sum[450],val[50][50];\n\ninline int read()\n{\n    register int x=0,f=1;char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n    while(isdigit(ch)){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n    return (f==1)?x:-x;\n}\n\nvoid print(int x)\n{\n    if(x<0){putchar('-');x=-x;}\n    if(x>9) print(x/10);\n    putchar(x%10+'0');\n}\n\ninline int add(int x,int y)\n{\n    return (x+=y)>=mod?x-mod:x;\n}\n\ninline int sub(int x,int y)\n{\n    return (x-=y)<0?x+mod:x;\n}\n\ninline int calc(int l,int r,int x)\n{\n    return max(0,r/x-l/x-1);\n}\n\ninline int sigma(int l,int r,int x)\n{\n    if(l>r) return 0;\n    return sub(val[x][r],(l?val[x][l-1]:0));\n}\n\ninline int Sum(int l,int r,int x)\n{\n    res s=l%x,t=r%x;\n    if(s<=t) return sigma(s,t,x);\n    return add(sigma(0,t,x),sigma(s,x-1,x));\n}\n\ninline int id(int i,int x){return i/x;}\ninline int left(int i,int x){return (i/x)*x;}\ninline int right(int i,int x){return min(n-1,(i/x+1)*x-1);}\n\ninline int solve(int l,int r)\n{\n    res ans=0,x;\n    for(x=1;x<now;x++)\n    {\n        if(id(l,x)==id(r,x)) ans=(ans+Sum(l,r,x))%mod;\n        else\n        {\n            ans=add(ans,Sum(l,right(l,x),x));\n            ans=add(ans,Sum(left(r,x),r,x));\n            ans=add(ans,1ll*sigma(0,x-1,x)*calc(l,r,x)%mod);\n        }\n    }\n    return ans;\n}\n\ninline void update(int x,int y,int z)\n{\n    res i,l,r;\n    if(x>=now)\n    {\n        for(i=y;i<n;i+=x)\n        {\n            sum[pos[i]]=add(sum[pos[i]],z);\n            a[i]=add(a[i],z);\n        }\n        return ;\n    }\n    for(i=0;i<=pos[n-1];i++)\n    {\n        l=L[i],r=R[i];\n        if(id(l,x)==id(r,x)) sum[i]=add(sum[i],(l%x<=y&&y<=r%x)*z);\n        else sum[i]=add(sum[i],1ll*(calc(l,r,x)+(l%x<=y)+(y<=r%x))*z%mod);\n    }\n    for(i=y;i<x;i++) val[x][i]=add(val[x][i],z);\n}\n\ninline int query(int l,int r)\n{\n    res ans=0,i;\n    if(pos[l]==pos[r])\n    {\n        for(i=l;i<=r;i++) ans=add(ans,a[i]);\n        ans=add(ans,solve(l,r));\n        return ans;\n    }\n    for(i=pos[l]+1;i<pos[r];i++) ans=add(ans,sum[i]);\n    ans=add(ans,solve(l,R[pos[l]]));\n    for(i=l;i<=R[pos[l]];i++) ans=add(ans,a[i]);\n    ans=add(ans,solve(L[pos[r]],r));\n    for(i=L[pos[r]];i<=r;i++) ans=add(ans,a[i]);\n    return ans;\n}\n\nint main()\n{\n    res i,op,x,y,z;\n    n=read(),m=read();blo=sqrt(n)+1;now=min(blo,30);\n    for(i=0;i<n;i++) a[i]=read();\n    for(i=1;i<n;i++)\n    {\n        pos[i]=i/blo;\n        if(pos[i]!=pos[i-1]) L[pos[i]]=i,R[pos[i-1]]=i-1;\n    }\n    R[pos[n-1]]=n-1;\n    for(i=0;i<n;i++) sum[pos[i]]=add(sum[pos[i]],a[i]);\n    while(m--)\n    {\n        op=read(),x=read(),y=read();\n        if(op==1) z=read(),update(x,y-1,z);\n        else print(query(x-1,y-1)),putchar('\\n');\n    }\n    return 0;\n}\n```",
        "postTime": 1555500801,
        "uid": 35069,
        "name": "Owen_codeisking",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5309 \u3010[Ynoi2012]D1T1\u3011"
    },
    {
        "content": "### [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5309)\n\n## \u9898\u610f\n\n- \u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u652f\u6301\u533a\u95f4\u6c42\u548c\u548c\u8df3\u70b9\u52a0\uff08\u5373\u5bf9\u4e8e $y+kx(k \\in N)$ \u4f4d\u7f6e\u4e0a\u52a0\uff09\n\n## Sol\n\n\u7b2c\u4e00\u9053\u5b8c\u5168\u6ca1\u6709\u63d0\u793a\u505a\u51fa\u7684 Ynoi\u3002\n\n\u8003\u8651\u5230\u9898\u76ee\u548c [P3396 \u54c8\u5e0c\u51b2\u7a81](https://www.luogu.com.cn/problem/P3396) \u6709\u70b9\u50cf\uff0c\u4e0d\u5982\u5148\u770b\u4e00\u4e0b[\u90a3\u4e00\u9898\u9898\u89e3](https://www.luogu.com.cn/blog/danieljiang/ha-xi-chong-tu-ti-xie-gen-hao-ke-ji)\u5427\u3002\n\n\u83b7\u5f97\u7075\u611f\u4e86\u5417\uff1f\n\n\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\uff0c\u6211\u4eec\u4ecd\u7136\u5206\u4e24\u7c7b\u3002\n\n1. $x < \\sqrt n$\n\n\u540c\u6837\u8003\u8651\u8bb0\u5f55 $f_{i}{j}$ \u8868\u793a $x=i$\uff0c$y=j$ \u7684\u4fee\u6539\u603b\u548c\u3002\n\n\u6211\u4eec\u8003\u8651\u7edf\u8ba1\u7b54\u6848\u3002\n\n\u7b54\u6848\u5373\u4e3a $\\sum\\limits_{i=l}^r a_i+\\sum\\limits_{i=1}^{\\sqrt n}\\sum\\limits_{j=1}^i (f_{i,j}\\times(\\left\\lceil \\dfrac{r-j}{i}\\right\\rceil-\\left\\lceil \\dfrac{l-1-j}{i}\\right\\rceil))$\u3002\n\n\u663e\u7136\u53ef\u4ee5\u5206\u5f00\u7b97\u540e\u7528\u524d\u7f00\u548c\u4f18\u5316\u6389\u4e00\u4e2a $\\sqrt n$\u3002\n\n\u7528 $s_{i,j}$ \u8868\u793a $f_{i,j}$ \u5bf9 $j$ \u4e00\u7ef4\u53d6\u524d\u7f00\u548c\uff0c\u5373 $s_{i,j}=\\sum\\limits_{k=1}^j f_{i,k}$\u3002\n\n\u7b54\u6848\u5373\u53ef\u8868\u793a\u4e3a $\\sum\\limits_{i=l}^r a_i+\\sum\\limits_{i=1}^{\\sqrt n}((s_{i,i}\\times(\\left\\lfloor \\dfrac{r}{i}\\right\\rfloor-\\left\\lfloor \\dfrac{l-1}{i}\\right\\rfloor))+s_{i,r\\%i}-s_{i,(l-1)\\%r})$\u3002\n\n\u4e8b\u5b9e\u4e0a\u8fd9\u4e2a\u610f\u4e49\u6bd4\u4e0a\u5f0f\u66f4\u597d\u7406\u89e3\u3002\uff08\n\n\u4fee\u6539\u5904\u7406 $s_{i,j}$ \u5373\u53ef\u3002\n\n2. $x \\ge \\sqrt n$\n\n~~\u66b4\u529b\u4fee\u6539\u5373\u53ef~~\u3002 \n\n\u5982\u4e0a\u5f0f\uff0c\u8003\u8651\u8fc5\u901f\u6c42 $\\sum\\limits_{i=l}^r a_i$\uff0c\u90a3\u4e48\u8003\u8651\u5206\u5757\u3002\n\n\u603b\u590d\u6742\u5ea6 $O((n+m)\\sqrt n)$\u3002\n\n### \u8bb0\u5f97\u5f00 $\\text{long long}$\n\n### $\\text{Code}$\n\n```cpp\n// wish to get better qwq\n\n#include<bits/stdc++.h>\n#define re register int\n#define pb push_back\n\nusing namespace std;\ntypedef long long ll;\n\ntemplate <typename T> void rd(T &x){\n\tll fl=1;x=0;char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') fl=-fl;\n\tfor(;isdigit(c);c=getchar()) x=(x<<3)+(x<<1)+c-'0';\n\tx*=fl;\n}\nvoid wr(ll x){\n\tif(x<0) x=-x,putchar('-');\n\tif(x<10) putchar(x+'0');\n\tif(x>9) wr(x/10),putchar(x%10+'0');\n}\n\n// ---------- IO ---------- //\n\nconst int N=2e5+5,SQ=505,mod=1e9+7;\nint n,m,op,l,r,qaq,len,tot;\nll a[N],sum[SQ],s[SQ][SQ];\n// s[i][j] \u6307 x=i [1,j] \u4e2d add \u7684\u503c \n\ninline int block(int x){return (x-1)/len+1;}\ninline int L(int x){return (x-1)*len+1;}\ninline int R(int x){return x*len;}\n\ninline void modify(int x,int y,int z){\n\tif(x>=tot){\n\t\tfor(re i=y;i<=n;i+=x) a[i]+=z,sum[block(i)]+=z;\n\t\treturn ;\n\t}\n\tfor(re i=y;i<=x;i++) s[x][i]+=z;\n//\tcout<<x<<' '<<y<<' '<<z<<endl;\n//\tfor(re i=0;i<=x;i++) cout<<s[x][i]<<' ';cout<<endl;\n\treturn ;\n}\n\ninline ll query(int l,int r){\n\tll ans=0;int lb=L(block(l)+1),rb=R(block(r)-1),tmp=block(r)-1;\n\tif(block(l)==block(r)){\n\t\tfor(re i=l;i<=r;i++) ans+=a[i];\n\t}\n\telse{\n\t\tfor(re i=l;i<lb;i++) ans+=a[i];\n\t\tfor(re i=rb+1;i<=r;i++) ans+=a[i];\n\t\tfor(re i=block(l)+1;i<=tmp;i++) ans+=sum[i];\n\t}\n//\tcout<<ans<<endl;\n\tfor(re i=1;i<=tot;i++) ans+=s[i][r%i]-s[i][(l-1)%i]+s[i][i]*(r/i-(l-1)/i);\n\treturn ans;\n}\n\n// ---------- Sqrt & Operations ---------- //\n\nint main(){\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\trd(n);rd(m);len=(int)sqrt(n);tot=block(n);\n\tfor(re i=1;i<=n;i++) rd(a[i]),sum[block(i)]+=a[i];\n\tfor(re i=1;i<=m;i++){\n\t\trd(op);rd(l);rd(r);\n\t\tif(op==1) rd(qaq),modify(l,r,qaq);\n\t\telse wr(query(l,r)%mod),puts(\"\");\n\t}\n\treturn 0;\n}\n\n// ---------- Main ---------- //\n\n```",
        "postTime": 1606622872,
        "uid": 83999,
        "name": "Demoe",
        "ccfLevel": 7,
        "title": "[Ynoi2011]\u521d\u59cb\u5316 \u9898\u89e3 \u6839\u53f7\u79d1\u6280"
    },
    {
        "content": "\u77e5\u8bc6\u70b9\uff1a\n\n- \u5206\u5757\n- \u524d\u7f00\u548c\n- \u6839\u53f7\u5206\u6cbb\n- \u5361\u5e38\u5c0f\u6280\u5de7\n\n> \u7ed9\u5b9a\u4e00\u4e2a\u533a\u95f4\uff0c\u7ef4\u62a4\u533a\u95f4\u548c$\\!\\!\\mod 10^9+7$\uff0c\u4e0b\u6807\u4e3a $y,\\,y+x,\\,y+2x,\\dots,y+kx$ \u7684\u6570\u52a0 $z$\u3002\n\n\u5bf9\u4e8e\u4fee\u6539\uff1a\n\n1. \u5982\u679c $x \\ge F$\uff0c\u76f4\u63a5\u6bcf\u6b21\u8df3 $x$\uff0c\u5206\u5757\u7ef4\u62a4\u3002\n2. \u5982\u679c $x < F$\uff0c\u6211\u4eec\u53ef\u4ee5\u524d\u7f00\u548c\u7ef4\u62a4\u6570\u7ec4 $Q_{i,j}$\uff0c\u8868\u793a\u8df3 $i$ \u4e2a\uff0c\u4ece $j$ \u5f00\u59cb\u5df2\u7ecf\u52a0\u4e86\u51e0\u6b21\u3002\n\n\u5bf9\u4e8e\u7edf\u8ba1\u533a\u95f4\u548c\uff1a\n\n1. \u5bf9\u4e8e\u4e24\u8fb9\u4e0d\u5b8c\u6574\u5757\uff0c\u5206\u5757\u76f4\u63a5\u66b4\u529b\u7edf\u8ba1\u5373\u53ef\u3002\n2. \u5bf9\u4e8e\u6bcf\u5757\u7edf\u8ba1\uff0c\u7528 $Q_{i,j}$ \u7b97\uff0c\u7edf\u8ba1\u524d\u7f00\u548c\u5373\u53ef\u3002\n\n\u5361\u5e38\u5c0f\u6280\u5de7\uff1a\n\n$F$ \u53ef\u4ee5\u53d6 $70 \\to 80$\uff0c\u5b9e\u6d4b\u8dd1\u7684\u98de\u5feb\u3002\n\n\u6ce8\u610f\u5230\u6570\u636e\u8303\u56f4\uff0c$1 \\le n, m \\le 2 \\times 10^5$\uff0c$0 \\le a_i, z \\le 10^9+7$\uff0c**\u5e76\u4e0d\u9700\u8981\u6bcf\u6b21\u4fee\u6539\u90fd\u53d6\u6a21**\uff0c\u5f00 LL \u662f\u53ef\u4ee5\u5b58\u7684\u4e0b\u7684\uff0c\u6ce8\u610f\u8f93\u51fa\u65f6\u53d6\u6a21\u5c31\u597d\u4e86\uff0c\u53ef\u4ee5\u7701\u53bb\u5927\u91cf\u7684\u53d6\u6a21\u8fd0\u7b97\u65f6\u95f4\u3002\n\n\u4e8e\u662f\u5c31\u4e00\u53d1\u6700\u4f18\u89e3\u4e86\u3002\n\n$\\text{Code}$\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#define ll long long\n#define il inline\n#define rg register\n\nnamespace IO {\n    const int SIZE = (1 << 20) + 1;\n    char ibuf[SIZE], *iS, *iT, obuf[SIZE],*oS = obuf, *oT = obuf + SIZE - 1;\n    char _st[55];\n    int _qr = 0;\n    inline char gc() {\n        return (iS == iT ? iT = (iS = ibuf) + fread(ibuf, 1, SIZE, stdin), (iS == iT ? EOF : *iS++) : *iS++);\n    }\n    inline void qread() {}\n    template<class T1, class ...T2>\n    inline void qread(T1 &IEE, T2&... ls) {\n        register T1 __ = 0, ___ = 1;\n        register char ch;\n        while(!isdigit(ch = gc())) ___ = (ch == '-') ? -___ : ___;\n        do {\n            __ = (__ << 1) + (__ << 3) + (ch ^ 48);\n        }while(isdigit(ch = gc()));\n        __ *= ___;\n        IEE = __;\n        qread(ls...);\n        return ;\n    }\n    inline void flush() {\n        fwrite(obuf, 1, oS - obuf, stdout);\n        oS = obuf;\n        return ;\n    }\n    inline void putc_(char _x) {\n        *oS++ = _x;\n        if(oS == oT) flush();\n    }\n    inline void qwrite() {}\n    template<class T1, class ...T2>\n    inline void qwrite(T1 IEE, T2... ls) {\n        if(!IEE) putc_('0');\n        if(IEE < 0) putc_('-'), IEE = -IEE;\n        while(IEE) _st[++_qr] = IEE % 10 + '0', IEE /= 10;\n        while(_qr) putc_(_st[_qr--]);\n        qwrite(ls...);\n        return ;\n    }\n    struct Flusher_{~Flusher_(){flush();}}io_flusher;\n}\n//\u5feb\u8bfb\u6765\u81ea@SPFA(uid=177999)\u3002\nusing namespace IO;\nusing namespace std;\n\nconst int mod = 1e9 + 7;\nconst int N = 2e5 + 5;\nconst int M = 205;\n\nint n, m, blocksize, Faster = 80;\nint blocknum[N];\nll a[N], sum[M << 3], Query[M][M];\n\nint main() {\n\tqread(n, m);\n\tblocksize = sqrt(n);\n\tfor(rg int i = 1; i <= n; ++i) blocknum[i] = i / blocksize;\n\tfor(rg int i = 1; i <= n; ++i) qread(a[i]), sum[blocknum[i]] += a[i];\n\twhile(m--) {\n\t\tint opt;\n\t\tqread(opt);\n\t\tif(opt == 1) {\n\t\t\tint x, y;\n\t\t\tll z;\n\t\t\tqread(x, y, z);\n\t\t\tif(x >= Faster) for(rg int i = y; i <= n; i += x) a[i] += z, sum[blocknum[i]] += z;\n\t\t\telse {\n\t\t\t\ty %= x;\n\t\t\t\tfor(rg int i = y; i < x; ++i) Query[x][i] += z;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tint x, y;\n\t\t\tll ans = 0;\n\t\t\tqread(x, y);\n\t\t\tif(blocknum[x] == blocknum[y]) for(int i = x; i <= y; ++i) ans += a[i];\n\t\t\telse {\n\t\t\t\tfor(rg int i = x; i < (blocknum[x] + 1) * blocksize; ++i) ans += a[i];\n\t\t\t\tfor(rg int i = blocknum[x] + 1; i < blocknum[y]; ++i) ans += sum[i];\n\t\t\t\tfor(rg int i = blocknum[y] * blocksize; i <= y; ++i) ans += a[i];\n\t\t\t}\n\t\t\tfor(rg int i = 1; i <= Faster; ++i) {\n\t\t\t\tif(x / i == y / i) ans += (Query[i][y % i] - Query[i][x % i - 1]);\n\t\t\t\telse ans += Query[i][i - 1] * (y / i - x / i) - Query[i][x % i - 1] + Query[i][y % i]; \n\t\t\t}\n\t\t\tprintf(\"%lld\\n\", ans % mod);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1602512615,
        "uid": 242543,
        "name": "BreezeEnder",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5309 [Ynoi2011]\u521d\u59cb\u5316"
    },
    {
        "content": "\u672c\u6765\u5e94\u8be5\u662f\u4e00\u9053\u4e0d\u96be\u7684\u5206\u5757\u2026\u2026\u7ed3\u679c\u8fd8\u662f\u505a\u7684\u5f88\u70c2\u3002     \n\n\u77e5\u8bc6\u70b9\uff1a\u9608\u503c\u5206\u6cbb + \u5206\u5757 \u3002      \n\n\u9996\u5148\u6211\u4eec\u5148\u8003\u8651\u4e00\u4e0b~~\u6b63\u5e38\u70b9\u7684~~\u6570\u636e\u7ed3\u6784\uff0c\u53d1\u73b0\u50cf\u7ebf\u6bb5\u6811\u548c\u6811\u72b6\u6570\u7ec4\u597d\u50cf\u751f\u642c\u786c\u5957\u90fd\u6709\u70b9\u96be\u641e\uff0c\u6240\u4ee5\u8003\u8651\u66b4\u529b\u6570\u636e\u7ed3\u6784\u5206\u5757\u3002      \n\n\u63a5\u7740\u8003\u8651\u4e00\u4e0b\u76f4\u63a5\u66b4\u529b\u7ef4\u62a4\uff0c\u6211\u4eec\u53ea\u8981\u5224\u65ad\u4e00\u4e0b\u5f53\u524d\u7684\u4fee\u6539\u6b21\u6570\u6709\u6ca1\u6709\u8d85\u8fc7  $\\sqrt n$ \u6b21\uff0c\u5373\u5224\u65ad\u5f53\u524d\u7684 $x \\geq \\sqrt n$ \uff0c\u8fd9\u6837\u6211\u4eec\u53ea\u7528\u8003\u8651 $x \\leq \\sqrt n$ \u7684\u60c5\u51b5\u4e86\u3002      \n\n\u5206\u6790\u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u5df2\u7ecf\u53ef\u4ee5\u60f3\u5230 $Ynoi$ \u9898\u76ee\u91cc\u9762\u5e38\u4f7f\u7528\u7684\u9608\u503c\u5206\u6cbb\u4e86\uff0c\u800c\u5728\u5957\u8def\u7684\u9608\u503c\u5206\u6cbb\u4e2d\uff0c\u901a\u5e38\u90fd\u662f\u4e00\u534a\u66b4\u529b\u4e00\u534a\u9884\u5904\u7406\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u8be5\u600e\u4e48\u9884\u5904\u7406\u5462\uff1f       \n\n\u6211\u4eec\u518d\u4ed4\u7ec6\u89c2\u5bdf\u64cd\u4f5c\uff0c\u53d1\u73b0\u8fd9\u4e2a\u64cd\u4f5c\u662f\u9488\u5bf9\u5168\u5c40\u800c\u8a00\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4e0d\u53ef\u4ee5\u4ece\u5b8f\u89c2\u5927\u5c40\u4e0a\u6765\u7ef4\u62a4\u5462\uff1f      \n\n\u63a5\u7740\u53c8\u53d1\u73b0\u5982\u679c\u6211\u4eec\u6a21\u62df\u5206\u5757\uff0c\u628a\u539f\u5e8f\u5217\u5206\u6210\u957f\u4e3a $x$ \u7684\u82e5\u5e72\u5757\uff0c\u90a3\u4e48\u6b64\u65f6\u6bcf\u4e2a\u5757\u5185\u88ab\u52a0\u4e0a $z$ \u7684\u6570\u7684\u76f8\u5bf9\u4f4d\u7f6e\u5728\u5f53\u524d\u5757\u4e2d\u90fd\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u7ef4\u62a4\u4e00\u4e0b\u8fd9\u79cd\u6a21\u62df\u51fa\u6765\u7684\u201c\u5c0f\u5757\u201d\u7684\u4fe1\u606f\u5373\u53ef\u5728\u8ba1\u7b97\u4e2d\u505a\u51fa\u5168\u5c40\u4fe1\u606f\u3002      \n\n\u6211\u4eec\u8003\u8651\u5206\u5757\u67e5\u8be2\u65f6\u662f\u600e\u4e48\u67e5\u8be2\u7684\uff0c\u4e2d\u95f4\u4e00\u4e32\u8fde\u7740\u7684\u5757\u4e24\u8fb9\u4e00\u4e9b\u8fb9\u89d2\u5757\uff0c\u7531\u4e8e\u65e0\u6cd5\u7ef4\u62a4\u6240\u6709\u7684 $x \\leq \\sqrt n$ \u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u6211\u4eec\u7edf\u8ba1\u65f6\u80af\u5b9a\u662f\u6709\u4e00\u5c42\u5faa\u73af\u679a\u4e3e\u4e86 $\\sqrt n$ \u4ee5\u5185\u7684\u6240\u6709 $x$ \uff0c\u5373\u6211\u4eec\u73b0\u5728\u9700\u8981 $O(1)$ \u7b97\u3002       \n\u8003\u8651\u5747\u644a\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u73b0\u5728\u6211\u4eec\u7528\u4e00\u4e2a\u524d\u7f00\u548c\u4ee5\u53ca\u540e\u7f00\u548c\u6765\u7ef4\u62a4\u6bcf\u79cd $x$ \u7684\u4fe1\u606f\uff0c\u5728\u5f53\u524d $x \\leq \\sqrt n$ \u7684\u60c5\u51b5\u4e0b\uff0c\u66b4\u529b\u628a\u524d\u7f00\u548c\u548c\u540e\u7f00\u548c\u66f4\u65b0\u4e00\u4e0b\u5373\uff1a    \n\n```cpp\nfor(register int i = y ; i <= x ; i ++) pre[x][i] = pre[x][i] + z;\nfor(register int i = y ; i >= 1 ; i --) suf[x][i] = suf[x][i] + z;\n```     \n\n\u5f88\u663e\u7136\u8fd9\u6837\u7684\u66b4\u529b\u65f6\u95f4\u590d\u6742\u5ea6\u5728\u9650\u5236\u4e86 $x \\leq \\sqrt n$ \u7684\u60c5\u51b5\u4e0b\u4e0d\u8d85\u8fc7 $O(\\sqrt n)$  \u3002       \n\n\u5728\u8ba1\u7b97\u65f6\uff0c\u6211\u4eec\u53ea\u8981\u50cf\u5206\u5757\u4e00\u6837\u8ba1\u7b97\u51fa\u5de6\u7aef\u70b9\u5728\u5f53\u524d $x$ \u7684\u610f\u4e49\u4e0b\u5c5e\u4e8e\u90a3\u4e2a\u5757\uff0c\u53f3\u7aef\u70b9\u5728\u5f53\u524d $x$ \u7684\u610f\u4e49\u4e0b\u5c5e\u4e8e\u90a3\u4e2a\u5757\uff0c\u7136\u540e\u6a21\u62df\u4e00\u4e0b\u5206\u5757\u7684\u67e5\u8be2\u8fc7\u7a0b\u5373\u53ef\u3002(\u5982\u679c\u770b\u5230\u8fd9\u91cc\u8fd8\u6709\u70b9\u61f5\u53ef\u4ee5\u770b\u4e00\u4e0b\u4ee3\u7801)      \n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nconst int Len = 2e5 + 5 , SIZE = 505 , mod = 1e9 + 7;\ninline int read() {\n    char ch = getchar();\n    int x = 0;\n    while (ch < '0' || ch > '9') ch = getchar();\n    while ('0' <= ch && ch <= '9') {\n        x = x * 10 + ch - '0';\n        ch = getchar();\n    }\n    return x;\n}\ninline void write(long long x) {\n    if (x > 9)\n        write(x / 10);\n    putchar(x % 10 + '0');\n}\nint n,m,pos[Len],L[SIZE],R[SIZE],t;\nlong long sum[SIZE],pre[SIZE][SIZE],suf[SIZE][SIZE],a[Len];\ninline void Upd(int x,int y,int z)\n{\n\tif(x >= t) \n\t{\n\t\tfor(register int i = y ; i <= n ; i += x) \n\t\t{\n\t\t\ta[i] = a[i] + z;\n\t\t\tsum[pos[i]] = sum[pos[i]] + z;\n\t\t}\n\t}\n\telse\n\t{\n\t\tfor(register int i = y ; i <= x ; i ++) pre[x][i] = pre[x][i] + z;\n\t\tfor(register int i = y ; i >= 1 ; i --) suf[x][i] = suf[x][i] + z;\n\t}\n}\ninline long long qbsum(int l,int r)\n{\n\tint Lid = pos[l] , Rid = pos[r] ; long long res = 0;\n\tif(Lid == Rid) for(register int i = l ; i <= r ; i ++) res = res + a[i];\n\telse\n\t{\n\t\tfor(register int i = l ; i <= R[Lid] ; i ++) res = res + a[i];\n\t\tfor(register int i = Lid + 1 ; i <= Rid - 1 ; i ++) res = res + sum[i];\n\t\tfor(register int i = L[Rid] ; i <= r ; i ++) res = res + a[i]; \n\t}\n\treturn res;\n}\ninline long long all_sum(int l,int r)\n{\n\tlong long Blocksum = qbsum(l , r);\n\tfor(register int i = 1 ; i < t ; i ++)\n\t{\n\t\tint Lb = (l - 1) / i + 1 , Rb = (r - 1) / i + 1;\n\t\tif(Lb == Rb) \n\t\t{\n\t\t\tBlocksum -= pre[i][(l - 1) % i];\n\t\t\tBlocksum += pre[i][(r - 1) % i + 1];\n\t\t}\n\t\telse Blocksum = Blocksum + (Rb - Lb - 1) * pre[i][i] + suf[i][(l - 1) % i + 1] + pre[i][(r - 1) % i + 1];\n\t}\n\treturn Blocksum % mod;\n}\nsigned main()\n{\n\tn = read() , m = read();\n\tt = sqrt(n);\n\tfor(register int i = 1 ; i <= n ; i ++) a[i] = read();\n\tfor(register int i = 1 ; i <= t ; i ++) L[i] = (i - 1) * t + 1 , R[i] = i * t;\n\tR[t] = n;\n\tfor(register int i = 1 ; i <= t ; i ++)\n\t\tfor(register int j = L[i] ; j <= R[i] ; j ++) pos[j] = i; \n\tfor(register int i = 1 ; i <= n ; i ++) sum[pos[i]] = sum[pos[i]] + a[i];\n\tfor(register int i = 1 ; i <= m ; i ++)\n\t{\n\t\tint opt,x,y,z;opt = read();\n\t\tif(opt == 1){x = read() , y = read() , z = read() , Upd(x , y , z);}\n\t\telse{x = read() , y = read() ; write(all_sum(x , y)) , putchar('\\n');}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1610515222,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5309 \u3010[Ynoi2011] \u521d\u59cb\u5316\u3011"
    },
    {
        "content": "Ynoi \u4e2d\u4e0d\u53ef\u591a\u5f97\u7684\u5c0f\u6e05\u65b0\u5206\u5757\u9898\u3002\n\n\u770b\u5230\u8fd9\u4e2a\u9898\u5c31\u611f\u89c9\u5b83\u5f88\u6839\u53f7\u5206\u6cbb\uff08\uff1f\uff09\uff0c\u7136\u540e\u5c31\u5bf9\u4e8e $x>\\sqrt n$ \u7684\u4fee\u6539\u76f4\u63a5\u66b4\u529b\u53bb\u6539\u5c31\u53ef\u4ee5\u4e86\u3002\u7136\u540e\u8fd9\u91cc\u5982\u679c\u7528\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u7684\u8bdd\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u4fee\u6539 $O(n\\sqrt n\\log n)$ \u67e5\u8be2 $O(n\\log n)$ \u7684\u8fc7\u4e0d\u53bb\u505a\u6cd5\uff0c\u6240\u4ee5\u5206\u4e2a\u5757\u5c31\u53ef\u4ee5\u4e00\u4e2a\u6839\u53f7\u505a\u4e86\u3002\n\n\u7136\u540e\u5bf9\u4e8e $x\\le\\sqrt n$ \u7684\u4fee\u6539\u5c31\u6253\u6807\u8bb0\u53bb\u505a\uff0c\u8bbe $add_{x,y}$ \u8868\u793a\u6240\u6709\u8fd9\u6837\u7684\u8be2\u95ee\u4e00\u5171\u52a0\u4e86\u591a\u5c11\u67e5\u8be2\u7684\u65f6\u5019\u4e00\u8d77\u7b97\u8d21\u732e\u3002\u7136\u800c\u8fd9\u6837\u7684\u8bdd\u67e5\u8be2\u662f $O(n\\sqrt n)$ \u7684~~\u6bd4\u66b4\u529b\u8fd8\u52a3~~\u3002\u4f46\u662f\u53d1\u73b0 $y$ \u8fd9\u4e00\u7ef4\u5728\u67e5\u8be2\u7684\u65f6\u5019\u662f\u8fde\u7eed\u7684\uff0c\u6240\u4ee5\u505a\u4e00\u4e2a\u524d\u7f00\u548c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u7136\u540e\u8fd9\u6837\u590d\u6742\u5ea6\u5c31\u662f\u4e00\u4e2a\u6839\u53f7\uff0c\u5e38\u6570\u968f\u4fbf\u5361\u4e00\u5361\u5c31\u53ef\u4ee5\u4e86\u3002\n```cpp\n#include<cmath>\n#include<cctype>\n#include<cstdio>\nusing namespace std;\ninline int readint(){\n    int x=0;\n    bool f=0;\n    char c=getchar();\n    while(!isdigit(c)&&c!='-') c=getchar();\n    if(c=='-'){\n        f=1;\n        c=getchar();\n    }\n\twhile(isdigit(c)){\n        x=x*10+c-'0';\n        c=getchar();\n    }\n    return f?-x:x;\n}\nconst int maxn=2e5+5,maxs=500;\nint n,m,a[maxn];\nint s,blocks,pos[maxn],bl[maxs],br[maxs];\ntypedef long long ll;\nconst ll mod=1e9+7;\nll sum[maxn];\nll add[maxs][maxs];\nint main(){\n    #ifdef LOCAL\n    freopen(\"in.txt\",\"r\",stdin);\n    freopen(\"out.txt\",\"w\",stdout);\n    #endif\n    n=readint();\n    m=readint();\n    for(int i=1;i<=n;i++) a[i]=readint();\n    s=0.9*sqrt(n);\n    blocks=(n-1)/s+1;\n    for(int i=0;i<blocks;i++){\n    \tbl[i]=i*s+1;\n    \tif(i==blocks-1) br[i]=n;\n    \telse br[i]=(i+1)*s;\n    \tfor(int j=bl[i];j<=br[i];j++){\n    \t\tpos[j]=i;\n    \t\tsum[i]+=a[j];\n\t\t}\n\t\tsum[i]%=mod;\n\t}\n\twhile(m--){\n\t\tint opt=readint();\n\t\tif(opt==1){\n\t\t\tint x,y,z;\n\t\t\tx=readint();\n\t\t\ty=readint();\n\t\t\tz=readint();\n\t\t\tif(x>s) for(int i=y;i<=n;i+=x){\n\t\t\t\ta[i]=(a[i]+z)%mod;\n\t\t\t\tsum[pos[i]]=(sum[pos[i]]+z)%mod;\n\t\t\t}\n\t\t\telse for(int i=y;i<=x;i++) add[x][i]=(add[x][i]+z)%mod;\n\t\t}\n\t\telse{\n\t\t\tint l,r;\n\t\t\tl=readint();\n\t\t\tr=readint();\n\t\t\tll ans=0;\n\t\t\tif(pos[l]==pos[r]) for(int i=l;i<=r;i++) ans+=a[i];\n\t\t\telse{\n\t\t\t\tfor(int i=pos[l]+1;i<pos[r];i++) ans+=sum[i];\n\t\t\t\tfor(int i=l;i<=br[pos[l]];i++) ans+=a[i];\n\t\t\t\tfor(int i=bl[pos[r]];i<=r;i++) ans+=a[i];\n\t\t\t}\n\t\t\tfor(int i=1;i<=s;i++){\n\t\t\t\tans+=r/i*add[i][i]%mod+add[i][r%i];\n\t\t\t\tans+=mod*2-(l-1)/i*add[i][i]%mod-add[i][(l-1)%i];\n\t\t\t}\n\t\t\tans%=mod;\n\t\t\tprintf(\"%d\\n\",(int)ans);\n\t\t}\n\t}\n    return 0;\n}\n```\n~~\u516b\u5341\u884c\u7684 Ynoi \u54e6\u3002~~\n\n~~\u54e6\u5bf9\u6211\u8fd9\u4e2a\u4ee3\u7801\u56e0\u4e3a\u628a\u5757\u957f\u8c03\u6210\u4e86 $0.9$ \u500d\u6240\u4ee5\u53ea\u9700\u8981\u4ee4 $n=1$ \u5c31\u53ef\u4ee5 hack \u6389\u4e86\uff0c\u4f46\u662f\u663e\u7136\u662f\u4e0d\u4f1a\u6709\u8fd9\u6837\u7684\u6570\u636e\u7684\u3002~~",
        "postTime": 1585651808,
        "uid": 174045,
        "name": "FZzzz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5309 \u3010[Ynoi2011]\u521d\u59cb\u5316\u3011"
    },
    {
        "content": "\u5c0f\u6e05\u65b0\u5206\u5757\u9898\uff0c\u4ece\u5934\u5230\u5c3e\u90fd\u5341\u5206\u5957\u8def\uff0c\u548cCXR\u5927\u4f6c\u4e00\u8d77YY\u4e86\u4e00\u4e0b\u5c31\u51fa\u6765\u4e86\n\n\u9996\u5148\u5957\u8def\u5730\u8bbe\u4e2a**\u9608\u503c$S$**\uff0c\u628a\u4fee\u6539\u7684$x$\u5206\u6210\u5927\u4e8e$S$\u548c\u5c0f\u4e8e\u7b49\u4e8e$S$\u4e24\u90e8\u5206\uff0c\u7136\u540e\u6211\u4eec\u8003\u8651\u5206\u522b\u6c42\u89e3\u8fd9\u4e24\u90e8\u5206\n\n------\n\n### $x>S$\n\n\u8fd9\u4e2a\u5e94\u8be5\u662f\u6bd4\u8f83\u7b80\u5355\u7684\u4e00\u90e8\u5206\u4e86\u5427\uff0c\u6211\u4eec\u8003\u8651\u5230\u6b64\u65f6\u8981\u4fee\u6539\u7684\u6570\u4e5f\u5c31$\\frac{n}{x}$\u4e2a\uff0c\u6240\u4ee5\u53ef\u4ee5\u5927\u529b\u4fee\u6539\n\n\u4f46\u662f\u5982\u679c\u7528**\u6811\u72b6\u6570\u7ec4**\u8fd9\u6837\u7684\u4e1c\u897f\u6765\u7ef4\u62a4\u533a\u95f4\u548c\u90a3\u4e48\u590d\u6742\u5ea6\u5c31\u662f\u4fee\u6539$\\frac{n}{x}\\cdot\\log n$\u7684\uff0c\u800c\u8be2\u95ee\u53ea\u6709$O(\\log n)$\uff0c\u5f88\u4e0d\u5e73\u8861\n\n\u6240\u4ee5\u6211\u4eec\u5957\u8def\u5730\u7528**\u5206\u5757**\u6765\u7ef4\u62a4\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\uff0c\u8fd9\u6837\u8fd9\u90e8\u5206\u7684\u603b\u4f53\u590d\u6742\u5ea6\u5c31\u5e73\u8861\u5230\u4e86$O(m\\cdot(\\sqrt n+\\frac{n}{S}))$\n\n\u7136\u540e\u521a\u5f00\u59cb\u7684\u521d\u59cb\u5316\u4e5f\u53ef\u4ee5\u4ea4\u7ed9\u8fd9\u4e00\u90e8\u5206\uff0c\u8fd9\u90fd\u662f\u6bd4\u8f83\u6e05\u65b0\u7684\n\n------\n\n### $x\\le S$\n\n\u8bf4\u5b9e\u8bdd\u8fd9\u90e8\u5206\u5176\u5b9e\u4e5f\u4e0d\u96be\uff0c\u56e0\u4e3a\u6211\u4eec\u4ed4\u7ec6\u89c2\u5bdf\u9898\u76ee\uff0c\u6bcf\u6b21\u4fee\u6539\u7684$y\\le x$\n\n\u90a3\u4e48\u4e5f\u5c31\u610f\u5473\u8fd9\u8fd9\u6b21\u4fee\u6539\u662f\u628a\u6570\u7ec4\u4e2d\u6240\u6709\u4e0b\u6807$\\mod x$\u4e0e$y$\u540c\u4f59\u7684\u4f4d\u7f6e\u5168\u90e8\u52a0\u4e86$z$\n\n\u6211\u4eec\u8003\u8651\u56fa\u5b9a$x$\u65f6\u7684\u8be2\u95ee\uff0c\u90a3\u4e48\u4e00\u6bb5\u533a\u95f4$[l,r]$\u5176\u5b9e\u5305\u542b\u4e86$\\lfloor\\frac{r-l+1}{x}\\rfloor$\u4e2a\u6574\u4e2a\u7684\u533a\u95f4\uff0c\u800c\u8fd9\u4e9b\u533a\u95f4\u5185\u7684\u548c\u5176\u5b9e\u5c31\u662f\u6240\u6709\u8be2\u95ee$x$\u56fa\u5b9a\u7684$z$\u7684\u603b\u548c\n\n\u5269\u4e0b\u7684\u4e00\u90e8\u5206\u4e5f\u5f88\u597d\u7b97\uff0c\u5176\u5b9e\u5c31\u662f\u6c42\u4e00\u4e2a$\\mod x$\u610f\u4e49\u4e0b\u7684\u533a\u95f4\u548c\uff08\u53ea\u7528\u5bf9$y\\mod x$\u4f4d\u7f6e\u589e\u52a0\uff09\n\n\u8003\u8651\u5230\u6b64\u65f6$x$\u7684\u8303\u56f4\u5f88\u5c0f\uff0c\u56e0\u6b64\u6211\u4eec\u5927\u53ef\u4ee5\u76f4\u63a5\u8bb0\u4e00\u4e2a**\u524d\u7f00\u548c**\uff0c\u6bcf\u6b21\u4fee\u6539\u66b4\u529b\u4fee\u6539\u6574\u4e2a\u540e\u7f00\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u603b\u4f53\u662f$O(mS)$\u7684\n\n------\n\n### \u603b\u4f53\u5206\u6790\n\n\u8fd9\u4e2a\u65f6\u5019\u6309\u7167\u4e00\u822c\u7684\u5957\u8def\u6211\u4eec\u603b\u662f\u53d6$S=\\sqrt n$\u6765\u8fbe\u5230\u7406\u8bba\u6700\u4f18\u7684\u590d\u6742\u5ea6\u5e73\u8861\n\n\u4f46\u662f\u8fd9\u91cc\u5982\u679c\u4f60\u8fd9\u4e48\u5199\u4f60\u53ef\u80fd\u5c31\u4f1a\u5f97\u5230TLE80\u7684\u60c5\u51b5\uff0c\u5176\u5b9e\u662f\u56e0\u4e3a\u51fa\u9898\u4eba\u4e3a\u4e86\u5361\u66b4\u529b\u51fa\u4e86\u5927\u91cf\u7684$x\\le S$\u7684\u6570\u636e\uff0c\u800c\u6211\u4eec\u7684\u7b97\u6cd5\u5728\u8fd9\u90e8\u5206\u7684\u5e38\u6570\u7279\u522b\u5927\n\n\u56e0\u6b64\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u5927\u53ef\u4ee5\u8c03\u5c0f$S$\u7684\u503c\uff08\u63a8\u8350\u5728$[30,50]$\u4e2d\uff09\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u8f7b\u677e\u5730\u901a\u8fc7\u6b64\u9898~~\u987a\u624b\u62a2\u4e86\u4e2aRank233~~\n\nCODE\n\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<cmath>\n#define RI register int\n#define CI const int&\n#define Tp template <typename T>\nusing namespace std;\nconst int N=200005,mod=1e9+7,S=40;\nint n,m,a[N],opt,x,y,z,size;\nclass FileInputOutput\n{\n    private:\n        static const int S=1<<21;\n        #define tc() (A==B&&(B=(A=Fin)+fread(Fin,1,S,stdin),A==B)?EOF:*A++)\n        #define pc(ch) (Ftop<S?Fout[Ftop++]=ch:(fwrite(Fout,1,S,stdout),Fout[(Ftop=0)++]=ch))\n        char Fin[S],Fout[S],*A,*B; int Ftop,pt[15];\n    public:\n        Tp inline void read(T& x)\n        {\n            x=0; char ch; while (!isdigit(ch=tc()));\n            while (x=(x<<3)+(x<<1)+(ch&15),isdigit(ch=tc()));\n        }\n        Tp inline void write(T x)\n        {\n            if (!x) return (void)(pc('0'),pc('\\n')); RI ptop=0;\n            while (x) pt[++ptop]=x%10,x/=10; while (ptop) pc(pt[ptop--]+48); pc('\\n');\n        }\n        inline void Fend(void)\n        {\n            fwrite(Fout,1,Ftop,stdout);\n        }\n        #undef tc\n        #undef pc\n}F;\ninline void inc(int& x,CI y)\n{\n    if ((x+=y)>=mod) x-=mod;\n}\ninline int sum(CI a,CI b)\n{\n    int t=a+b; return t>=mod?t-mod:t;\n}\ninline int sub(CI a,CI b)\n{\n    int t=a-b; return t<0?t+mod:t;\n}\nnamespace Case1 //Solver for z>sqrt(n)\n{\n    const int BLO=450; int sum[BLO],blk[N];\n    inline void init(void)\n    {\n        for (RI i=1;i<=n;++i) inc(sum[blk[i]=(i-1)/size+1],a[i]);\n    }\n    inline void modify(CI x,CI y,CI z)\n    {\n        for (RI i=y;i<=n;i+=x) inc(a[i],z),inc(sum[blk[i]],z);\n    }\n    inline int BF(CI x,CI y,int ret=0)\n    {\n        for (RI i=x;i<=y;++i) inc(ret,a[i]); return ret;\n    }\n    inline int query(CI x,CI y,int ret=0)\n    {\n        if (blk[x]==blk[y]) return BF(x,y);\n        inc(ret,BF(x,blk[x]*size)); inc(ret,BF((blk[y]-1)*size+1,y));\n        for (RI i=blk[x]+1;i<blk[y];++i) inc(ret,sum[i]); return ret;\n    }\n};\nnamespace Case2 //Solver for z<=sqrt(n)\n{\n    int mv[S+5][S+5],sum[S+5],stack[N],top; bool vis[S+5];\n    inline void modify(CI x,CI y,CI z)\n    {\n        if (!vis[x]) vis[x]=1,stack[++top]=x;\n        for (RI i=y%x;i<x;++i) inc(mv[x][i],z); inc(sum[x],z);\n    }\n    inline int query(CI x,CI y,int ret=0)\n    {\n        for (RI i=1;i<=top;++i)\n        {\n            int p=stack[i],t=(y-x+1)/p; inc(ret,1LL*t*sum[p]%mod);\n            int l=x+t*p,r=y; if (l>r) continue; l%=p; r%=p;\n            if (l<=r) inc(ret,sub(mv[p][r],l?mv[p][l-1]:0)); else\n            inc(ret,mv[p][r]),inc(ret,sub(sum[p],l?mv[p][l-1]:0));\n        }\n        return ret;\n    }\n};\nint main()\n{\n    //freopen(\"CODE.in\",\"r\",stdin); freopen(\"CODE.out\",\"w\",stdout);\n    RI i; for (F.read(n),F.read(m),i=1;i<=n;++i) F.read(a[i]);\n    for (size=(int)sqrt(n),Case1::init();m;--m)\n    {\n        F.read(opt); F.read(x); F.read(y);\n        if (opt^1) F.write(sum(Case1::query(x,y),Case2::query(x,y)));\n        else F.read(z),x>S?(Case1::modify(x,y,z),0):(Case2::modify(x,y,z),0);\n    }\n    return F.Fend(),0;\n}\n```\n\n",
        "postTime": 1555891757,
        "uid": 41698,
        "name": "hl666",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5309 \u3010[Ynoi2012]D1T1\u3011"
    },
    {
        "content": "\u4eba\u751f\u4e2d\u7b2c\u4e00\u9053Ynoi\uff0c\u5c0f\u6e05\u65b0\u5206\u5757\uff0c\u76ee\u524d\u662f\u6700\u4f18\u89e3\u3002\n\n\u672c\u7bc7\u9898\u89e3\u4ecb\u7ecd\u4e24\u79cd\u65b9\u6cd5\n \n### \u65b9\u6cd5\u4e00\uff08\u5047\u65b9\u6cd5\uff0c\u4f46\u53ef A \u6389\u8fd9\u9053\u9898\uff09\n\u77e5\u8bc6\u70b9\uff1a\n- \u5206\u5757\n\n\u6211\u4eec\u901a\u8fc7\u6570\u636e\u8303\u56f4\u53ef\u4ee5\u770b\u51fa\u5f00 longlong \u5373\u53ef\u5728\u4e0d\u53d6\u6a21\u7684\u524d\u63d0\u4e0b\u5b58\u4e0b\u6240\u6709\u503c\uff0c\u6240\u4ee5\u53ea\u8981\u5f00longlong\u5e76\u628a\u4e2d\u95f4\u7684\u591a\u6b21\u53d6\u6a21\u53bb\u6389\uff0c\u5728\u67e5\u8be2\u65f6\u53d6\u6a21\u4e00\u6b21\u5373\u53ef\uff0c\u8fd9\u6837\u4fbf\u7701\u4e86\u5927\u91cf\u7684\u53d6\u6a21\u65f6\u95f4\u3002\n\n\u56e0\u4e3a\u8fd9\u9053\u9898\u6570\u636e\u592a\u5f31\uff0c\u6240\u4ee5\u76f4\u63a5\u5206\u5757\u52a0 longlong \u5c31\u80fd A \u6389\uff0c\u6570\u636e\u518d\u5f00\u5927\u5c31\u8981\u7528\u65b9\u6cd5\u4e8c\u4e86\u3002\n\n### \u65b9\u6cd5\u4e8c\uff08\u6b63\u89e3\uff09\n\u77e5\u8bc6\u70b9\uff1a\n- \u5206\u5757\n- \u5206\u6cbb\n- \u524d\u7f00\u548c\n\n\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\u9700\u8981\u8fdb\u884c\u5206\u6cbb\n- \u82e5 $x > f$\uff0c\u76f4\u63a5\u66b4\u529b\u4fee\u6539\u3002\n- \u82e5 $x \\le f$\uff0c\u5c31\u8981\u8fdb\u884c\u4f18\u5316\u3002\n\n\u4e0a\u9762\u7684 $f$ \u662f\u4e00\u4e2a\u5e38\u6570\uff0c\u53ef\u4ee5\u53d6 $\\sqrt{n}$\uff0c\u5efa\u8bae\u53d6 $65$ \u5230 $80$ \u4e4b\u95f4\uff0c\u4eb2\u6d4b\u8dd1\u7684\u98de\u5feb\u3002\n\n\u5728 $x \\le f$ \u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u91c7\u7528\u6253\u6807\u8bb0\u7684\u65b9\u6cd5\u3002\u5bf9\u4e8e\u4e00\u4e2a\u4fee\u6539\u64cd\u4f5c\uff0c\u7528 $t_{x,y}$  \u5b58\u4e0b\u6765\u5b83\u7684\u503c\uff0c\u56e0\u4e3a\u8be2\u95ee\u65f6\u7684 $y$ \u662f\u8fde\u7eed\u7684\uff0c\u6240\u4ee5\u641e\u4e00\u4e2a\u524d\u7f00\u548c\u5373\u53ef\u3002\n\n$code:$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N=2e5+1,QN=500,MOD=1e9+7;\nint n,m;\nint len,f,cntq;\nint q[N];\nlong long val[N],sumq[QN],t[QN][QN]; \n\n/*\nlen\u4e3a\u5757\u7684\u957f\u5ea6\nf\u4e3a\u5206\u6cbb\u70b9\ncntq\u662f\u5757\u6570\nq[i]\u8868\u793a\u70b9i\u6240\u5728\u7684\u5757\nval\u662f\u7ef4\u62a4\u7684\u6570\u5217\nsumq[i]\u8868\u793a\u7b2ci\u5757\u7684\u548c\nt\u4e3a\u524d\u7f00\u548c\u6570\u7ec4\n*/\n\nnamespace IO \n{\n    const int SIZE = (1 << 20) + 1;\n    char ibuf[SIZE], *iS, *iT, obuf[SIZE],*oS = obuf, *oT = obuf + SIZE - 1;\n    char _st[55];\n    int _qr = 0;\n    inline char gc() {\n        return (iS == iT ? iT = (iS = ibuf) + fread(ibuf, 1, SIZE, stdin), (iS == iT ? EOF : *iS++) : *iS++);\n    }\n    inline void qread() {}\n    template<class T1, class ...T2>\n    inline void qread(T1 &IEE, T2&... ls) {\n        register T1 __ = 0, ___ = 1;\n        register char ch;\n        while(!isdigit(ch = gc())) ___ = (ch == '-') ? -___ : ___;\n        do {\n            __ = (__ << 1) + (__ << 3) + (ch ^ 48);\n        }while(isdigit(ch = gc()));\n        __ *= ___;\n        IEE = __;\n        qread(ls...);\n        return ;\n    }\n    inline void flush() {\n        fwrite(obuf, 1, oS - obuf, stdout);\n        oS = obuf;\n        return ;\n    }\n    inline void putc_(char _x) {\n        *oS++ = _x;\n        if(oS == oT) flush();\n    }\n    inline void qwrite() {}\n    template<class T1, class ...T2>\n    inline void qwrite(T1 IEE, T2... ls) {\n        if(!IEE) putc_('0');\n        if(IEE < 0) putc_('-'), IEE = -IEE;\n        while(IEE) _st[++_qr] = IEE % 10 + '0', IEE /= 10;\n        while(_qr) putc_(_st[_qr--]);\n        qwrite(ls...);\n        return ;\n    }\n    struct Flusher_{~Flusher_(){flush();}}io_flusher;\n}\nusing namespace IO;//\u5feb\u8bfb\n\nvoid change(int x,int y,int z)//\u4fee\u6539\n{\n\tif(x>=f)//\u5206\u6cbb\n\t\tfor(register int i=y;i<=n;i+=x)//\u66b4\u529b\u4fee\u6539\n\t\t{\n\t\t\tval[i]+=z;\n\t\t\tsumq[q[i]]+=z;\n\t\t}\n\telse\n\t\tfor(register int i=y;i<=x;++i)//\u524d\u7f00\u548c\n\t\t\tt[x][i]+=z;\n\treturn;\n}\n\nlong long query(int l,int r)//\u8be2\u95ee\n{\n\tlong long ans=0;\n\tfor(register int i=l;i<=min(q[l]*len,r);++i)\n\t\tans+=val[i];\n\tif(q[l]!=q[r])\n\t\tfor(register int i=(q[r]-1)*len+1;i<=r;++i)\n\t\t\tans+=val[i];\n\tfor(register int i=q[l]+1;i<q[r];++i)\n\t\tans+=sumq[i];\n    //\u4ee5\u4e0a\u662f\u8bb0\u5757\u548c\n\tfor(register int i=1;i<=f;++i)//\u524d\u7f00\u548c\u8ba1\u7b97\n\t{\n\t\tans+=r/i*t[i][i]-(l-1)/i*t[i][i];\n\t\tans+=MOD+t[i][r%i]-t[i][(l-1)%i];\n\t}\n\treturn ans;\n}\n\nint main()\n{\n\tqread(n,m);\n\tlen=sqrt(n);\n\tf=75;\n\tfor(register int i=1;i<=n;++i)//\u5efa\u5757\n\t{\n\t\tqread(val[i]); \n\t\tq[i]=(i%len==1)?++cntq:cntq;\n\t\tsumq[q[i]]+=val[i];\n\t}\n\twhile(m--)\n\t{\n\t\tint opt;\n\t\tqread(opt);\n\t\tif(opt==1)\n\t\t{\n\t\t\tint x,y,z;\n\t\t\tqread(x,y,z);\n\t\t\tchange(x,y,z);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint l,r;\n\t\t\tqread(l,r);\n\t\t\tprintf(\"%lld\\n\",query(l,r)%MOD);\n\t\t}\n\t}\n  \treturn 0;\n}\n```\n",
        "postTime": 1610431573,
        "uid": 239075,
        "name": "Eon_Floating",
        "ccfLevel": 5,
        "title": "P5309 \u3010[Ynoi2011] \u521d\u59cb\u5316\u3011\u3010\u9898\u89e3\u3011"
    }
]