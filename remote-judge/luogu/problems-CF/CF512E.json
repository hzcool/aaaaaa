{
    "description": "Fox Ciel just designed a puzzle game called \"Polygon\"! It is played using triangulations of a regular $ n $ -edge polygon. The goal is to transform one triangulation to another by some tricky rules.\n\n![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF512E/9b9b9fefab3537d907c17350d789b68a582ea458.png)Triangulation of an $ n $ -edge poylgon is a set of $ n-3 $ diagonals satisfying the condition that no two diagonals share a common internal point.\n\nFor example, the initial state of the game may look like (a) in above figure. And your goal may look like (c). In each step you can choose a diagonal inside the polygon (but not the one of edges of the polygon) and flip this diagonal.\n\nSuppose you are going to flip a diagonal $ a\u2013b $ . There always exist two triangles sharing $ a\u2013b $ as a side, let's denote them as $ a\u2013b\u2013c $ and $ a\u2013b\u2013d $ . As a result of this operation, the diagonal $ a\u2013b $ is replaced by a diagonal $ c\u2013d $ . It can be easily proven that after flip operation resulting set of diagonals is still a triangulation of the polygon.\n\nSo in order to solve above case, you may first flip diagonal $ 6\u20133 $ , it will be replaced by diagonal $ 2\u20134 $ . Then you flip diagonal $ 6\u20134 $ and get figure (c) as result.\n\nCiel just proved that for any starting and destination triangulations this game has a solution. She wants you to solve it in no more than $ 20000 $ steps for any puzzle satisfying $ n<=1000 $ .",
    "inputFormat": "The first line contain an integer $ n $ ( $ 4<=n<=1000 $ ), number of edges of the regular polygon.\n\nThen follows two groups of $ (n-3) $ lines describing the original triangulation and goal triangulation.\n\nDescription of each triangulation consists of $ (n-3) $ lines. Each line contains 2 integers $ a_{i} $ and $ b_{i} $ ( $ 1<=a_{i},b_{i}<=n $ ), describing a diagonal $ a_{i}\u2013b_{i} $ .\n\nIt is guaranteed that both original and goal triangulations are correct (i. e. no two diagonals share a common internal point in both of these triangulations).",
    "outputFormat": "First, output an integer $ k $ ( $ 0<=k<=20,000 $ ): number of steps.\n\nThen output $ k $ lines, each containing 2 integers $ a_{i} $ and $ b_{i} $ : the endpoints of a diagonal you are going to flip at step $ i $ . You may output $ a_{i} $ and $ b_{i} $ in any order.\n\nIf there are several possible solutions, output any of them.",
    "samples": [
        [
            "4\n1 3\n2 4\n",
            "1\n1 3\n"
        ],
        [
            "6\n2 6\n3 6\n4 6\n6 2\n5 2\n4 2\n",
            "2\n6 3\n6 4\n"
        ],
        [
            "8\n7 1\n2 7\n7 3\n6 3\n4 6\n6 1\n6 2\n6 3\n6 4\n6 8\n",
            "3\n7 3\n7 2\n7 1"
        ]
    ],
    "hint": "Sample test 2 is discussed above and shown on the picture.",
    "translation": "## \u9898\u76ee\u63cf\u8ff0\n\u72d0\u72f8Ciel\u8bbe\u8ba1\u4e86\u4e00\u79cd\u53eb\u201c\u591a\u8fb9\u5f62\u201d\u7684\u667a\u529b\u6e38\u620f\uff01\u5b83\u662f\u901a\u8fc7\u628a\u4e00\u4e2an\u53d8\u5f62\u5206\u6210\u4e09\u89d2\u5f62\u6765\u8fdb\u884c\u7684\u3002\u76ee\u6807\u662f\u901a\u8fc7\u4e00\u4e9b\u590d\u6742\u7684\u89c4\u5219\u628a\u4e00\u79cd\u5206\u6cd5\u8f6c\u6362\u6210\u53e6\u4e00\u79cd\u5206\u6cd5\u3002\n\nn\u8fb9\u5f62\u7684\u4e00\u79cd\u201c\u5206\u6cd5\u201d\u662fn - 3\u6761\u4e0d\u76f8\u4ea4\u7684\u5bf9\u89d2\u7ebf\u6784\u6210\u7684\u96c6\u5408\u3002\n\n\u6bcf\u4e00\u6b65\u53ef\u4ee5\u9009\u62e9\u4e00\u6761\u5bf9\u89d2\u7ebf\uff08\u4f46\u4e0d\u80fd\u662fn\u8fb9\u5f62\u7684\u8fb9\uff09\u7136\u540e\u7ffb\u8f6c\u8fd9\u6761\u5bf9\u89d2\u7ebf\u3002\n\n\u5bf9\u4e8e\u4e00\u6761\u5bf9\u89d2\u7ebfAB\uff0c\u5047\u8bbe\u5b83\u7684\u4e24\u8fb9\u5206\u522b\u662f\u4e09\u89d2\u5f62ABC\u548c\u4e09\u89d2\u5f62ABD\u3002\u201c\u7ffb\u8f6c\u201d\u5bf9\u89d2\u7ebfAB\uff0c\u5c31\u662f\u5220\u9664\u5bf9\u89d2\u7ebfAB\uff0c\u5e76\u6dfb\u52a0\u5bf9\u89d2\u7ebfCD\u3002\n\nCiel\u8bc1\u660e\u4e86\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u8d77\u70b9\u548c\u7ec8\u70b9\u90fd\u6709\u5408\u6cd5\u7684\u7ffb\u8f6c\u65b9\u5f0f\uff0c\u5979\u60f3\u8ba9\u4f60\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2an <= 1000\u7684\u5c40\u9762\uff0c\u572820000\u6b21\u64cd\u4f5c\u5185\u5b8c\u6210\u3002\n## \u8f93\u5165\u683c\u5f0f\n\u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u6574\u6570n\uff0c \u8868\u793a\u591a\u8fb9\u5f62\u7684\u8fb9\u6570\n\n\u63a5\u4e0b\u6765n - 3\u884c\uff0c \u6bcf\u4e00\u884c\u6709\u4e24\u4e2a\u6b63\u6574\u6570a[i]\uff0cb[i],\u8868\u793a\u5f00\u59cb\u6709\u5bf9\u89d2\u7ebfa[i]-b[i]\u88ab\u8fde\u63a5\u3002\n\n\u63a5\u4e0b\u6765n - 3\u884c\uff0c \u6bcf\u4e00\u884c\u4e24\u4e2a\u6b63\u6574\u6570A[i], B[i]\uff0c\u8868\u793a\u76ee\u6807\u4e2d\u5bf9\u89d2\u7ebfA[i]-B[i]\u88ab\u8fde\u63a5\n\n\u8f93\u5165\u4fdd\u8bc1\u5408\u6cd5\n## \u8f93\u51fa\u683c\u5f0f\n\u9996\u5148\u8f93\u51fa\u4e00\u4e2a\u6574\u6570k\uff0c\u8868\u793a\u9700\u8981k\u6b21\u7ffb\u8f6c\n\n\u63a5\u4e0b\u6765k\u884c\uff0c\u6bcf\u4e00\u884c\u4e24\u4e2a\u6574\u6570a[i], b[i]\uff0c\u8868\u793a\u7b2ci\u6b21\u7ffb\u8f6c\u5bf9\u89d2\u7ebfa[i]-b[i]\uff0c \u987a\u5e8f\u4efb\u610f\n\n\u5982\u679c\u6709\u591a\u91cd\u64cd\u4f5c\u65b9\u6cd5\uff0c \u53ea\u9700\u8f93\u51fa\u5176\u4e2d\u4e00\u79cd"
}