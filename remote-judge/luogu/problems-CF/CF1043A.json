{
    "description": "Awruk is taking part in elections in his school. It is the final round. He has only one opponent \u2014 Elodreip. The are $ n $ students in the school. Each student has exactly $ k $ votes and is obligated to use all of them. So Awruk knows that if a person gives $ a_i $ votes for Elodreip, than he will get exactly $ k - a_i $ votes from this person. Of course $ 0 \\le k - a_i $ holds.\n\nAwruk knows that if he loses his life is over. He has been speaking a lot with his friends and now he knows $ a_1, a_2, \\dots, a_n $ \u2014 how many votes for Elodreip each student wants to give. Now he wants to change the number $ k $ to win the elections. Of course he knows that bigger $ k $ means bigger chance that somebody may notice that he has changed something and then he will be disqualified.\n\nSo, Awruk knows $ a_1, a_2, \\dots, a_n $ \u2014 how many votes each student will give to his opponent. Help him select the smallest winning number $ k $ . In order to win, Awruk needs to get strictly more votes than Elodreip.",
    "inputFormat": "The first line contains integer $ n $ ( $ 1 \\le n \\le 100 $ ) \u2014 the number of students in the school.\n\nThe second line contains $ n $ integers $ a_1, a_2, \\ldots, a_n $ ( $ 1 \\leq a_i \\leq 100 $ ) \u2014 the number of votes each student gives to Elodreip.",
    "outputFormat": "Output the smallest integer $ k $ ( $ k \\ge \\max a_i $ ) which gives Awruk the victory. In order to win, Awruk needs to get strictly more votes than Elodreip.",
    "samples": [
        [
            "5\n1 1 1 5 1\n",
            "5"
        ],
        [
            "5\n2 2 3 2 2\n",
            "5"
        ]
    ],
    "hint": "In the first example, Elodreip gets $ 1 + 1 + 1 + 5 + 1 = 9 $ votes. The smallest possible $ k $ is $ 5 $ (it surely can't be less due to the fourth person), and it leads to $ 4 + 4 + 4 + 0 + 4 = 16 $ votes for Awruk, which is enough to win.\n\nIn the second example, Elodreip gets $ 11 $ votes. If $ k = 4 $ , Awruk gets $ 9 $ votes and loses to Elodreip.",
    "translation": "\u6709\u4e24\u4e2a\u4eba\u5c0fA\u548c\u5c0fB\u53c2\u52a0\u9009\u4e3e\uff0c\u5171\u6709n\u4e2a\u4eba\u53c2\u4e0e\u6295\u7968\uff0c\u6bcf\u4eba\u53ef\u4ee5\u6295k\u7968\u3002\u5c0fA\u901a\u8fc7\u6697\u7bb1\u64cd\u4f5c\u77e5\u9053\u4e86\u6bcf\u4e2a\u4eba\u4e00\u5b9a\u4f1a\u6295ai\u7968\u7ed9\u5c0fB\u3002\n\u4ed6\u5f88\u60f3\u8d62\uff0c\u6240\u4ee5\u51b3\u5b9a\u901a\u8fc7\u64cd\u4f5c\u6765\u6539\u53d8\u6bcf\u4e2a\u4eba\u53ef\u4ee5\u6295\u7684\u7968\u6570k\u3002\u95eek\u6700\u5c0f\u4e3a\u591a\u5c11\u65f6\uff0c\u5c0fA\u80fd\u83b7\u80dc\u3002\n\n\u8f93\u5165\uff1a\u7b2c\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u6574\u6570n\uff0c\u6295\u7968\u7684\u4eba\u6570\u3002\n\t \u7b2c\u4e8c\u884c\uff0cn\u4e2a\u6574\u6570ai\uff0cai\u4e3a\u7b2ci\u4e2a\u4eba\u6295\u7ed9\u5c0fB\u7684\u7968\u6570\u3002\n     \n\u8f93\u51fa\uff1a\u4ec5\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u6574\u6570k\uff0c\u6bcf\u4e2a\u4eba\u53ef\u6295\u7684\u7968\u6570\u3002"
}