{
    "description": "There is a binary string $ t $ of length $ 10^{100} $ , and initally all of its bits are $ \\texttt{0} $ . You are given a binary string $ s $ , and perform the following operation some times:\n\n- Select some substring of $ t $ , and replace it with its XOR with $ s $ . $ ^\\dagger $\n\n After several operations, the string $ t $ has exactly two bits $ \\texttt{1} $ ; that is, there are exactly two distinct indices $ p $ and $ q $ such that the $ p $ -th and $ q $ -th bits of $ t $ are $ \\texttt{1} $ , and the rest of the bits are $ \\texttt{0} $ . Find the lexicographically largest $ ^\\ddagger $ string $ t $ satisfying these constraints, or report that no such string exists.\n\n $ ^\\dagger $ Formally, choose an index $ i $ such that $ 0 \\leq i \\leq 10^{100}-|s| $ . For all $ 1 \\leq j \\leq |s| $ , if $ s_j = \\texttt{1} $ , then toggle $ t_{i+j} $ . That is, if $ t_{i+j}=\\texttt{0} $ , set $ t_{i+j}=\\texttt{1} $ . Otherwise if $ t_{i+j}=\\texttt{1} $ , set $ t_{i+j}=\\texttt{0} $ .\n\n $ ^\\ddagger $ A binary string $ a $ is lexicographically larger than a binary string $ b $ of the same length if in the first position where $ a $ and $ b $ differ, the string $ a $ has a bit $ \\texttt{1} $ and the corresponding bit in $ b $ is $ \\texttt{0} $ .",
    "inputFormat": "The only line of each test contains a single binary string $ s $ ( $ 1 \\leq |s| \\leq 35 $ ).",
    "outputFormat": "If no string $ t $ exists as described in the statement, output -1. Otherwise, output the integers $ p $ and $ q $ ( $ 1 \\leq p < q \\leq 10^{100} $ ) such that the $ p $ -th and $ q $ -th bits of the lexicographically maximal $ t $ are $ \\texttt{1} $ .",
    "samples": [
        [
            "1",
            "1 2"
        ],
        [
            "001",
            "3 4"
        ],
        [
            "1111",
            "1 5"
        ],
        [
            "00000",
            "-1"
        ],
        [
            "00000111110000011111000001111101010",
            "6 37452687"
        ]
    ],
    "hint": "In the first test, you can perform the following operations. $ $$$\\texttt{00000}\\ldots \\to \\color{red}{\\texttt{1}}\\texttt{0000}\\ldots \\to \\texttt{1}\\color{red}{\\texttt{1}}\\texttt{000}\\ldots $ $ </p><p>In the second test, you can perform the following operations.  $ $ \\texttt{00000}\\ldots \\to \\color{red}{\\texttt{001}}\\texttt{00}\\ldots \\to \\texttt{0}\\color{red}{\\texttt{011}}\\texttt{0}\\ldots $ $ </p><p>In the third test, you can perform the following operations.  $ $ \\texttt{00000}\\ldots \\to \\color{red}{\\texttt{1111}}\\texttt{0}\\ldots \\to \\texttt{1}\\color{red}{\\texttt{0001}}\\ldots $ $ </p><p>It can be proven that these strings  $ t $  are the lexicographically largest ones.</p><p>In the fourth test, you can't make a single bit  $ \\\\texttt{1}$$$, so it is impossible.",
    "translation": "\u73b0\u6709\u4e00\u4e2a\u65e0\u7a77\u5927\u7684 $01$ \u5e8f\u5217\uff0c\u521d\u59cb\u5168\u4e3a $0$\u3002\u7ed9\u5b9a\u4e00\u4e2a\u6709\u9650\u7684 $01$ \u5e8f\u5217 $S$\uff0c\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u5c06\u539f\u5e8f\u5217\u4e00\u4e2a\u957f\u4e3a $|S|$ \u7684\u5b50\u6bb5\u5f02\u6216\u4e0a  $S$ \uff0c\u6700\u7ec8\u9700\u8981\u4f7f\u5f97\u6574\u4e2a\u5e8f\u5217\u53ea\u6709\u4e24\u4e2a $1$\u3002\n\n\u95ee\u6700\u7ec8\u5b57\u5178\u5e8f\u6700\u5927\u7684\u5e8f\u5217\u7684\u4e24\u4e2a $1$ \u5206\u522b\u6240\u5904\u7684\u4f4d\u7f6e\u3002\n\n$|S|$ $\\le$ 35\u3002"
}