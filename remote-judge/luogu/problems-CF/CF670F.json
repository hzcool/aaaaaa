{
    "description": "Vasya decided to pass a very large integer $ n $ to Kate. First, he wrote that number as a string, then he appended to the right integer $ k $ \u2014 the number of digits in $ n $ .\n\nMagically, all the numbers were shuffled in arbitrary order while this note was passed to Kate. The only thing that Vasya remembers, is a non-empty substring of $ n $ (a substring of $ n $ is a sequence of consecutive digits of the number $ n $ ).\n\nVasya knows that there may be more than one way to restore the number $ n $ . Your task is to find the smallest possible initial integer $ n $ . Note that decimal representation of number $ n $ contained no leading zeroes, except the case the integer $ n $ was equal to zero itself (in this case a single digit 0 was used).",
    "inputFormat": "The first line of the input contains the string received by Kate. The number of digits in this string does not exceed $ 1000000 $ .\n\nThe second line contains the substring of $ n $ which Vasya remembers. This string can contain leading zeroes.\n\nIt is guaranteed that the input data is correct, and the answer always exists.",
    "outputFormat": "Print the smalles integer $ n $ which Vasya could pass to Kate.",
    "samples": [
        [
            "003512\n021\n",
            "30021\n"
        ],
        [
            "199966633300\n63\n",
            "3036366999\n"
        ]
    ],
    "hint": "",
    "translation": "Vasya\u8981\u7ed9Kate\u4f20\u4e00\u4e2a\u5f88\u5927\u7684\u6574\u6570n\uff0c\u4ed6\u7684\u4f20\u8f93\u65b9\u6cd5\u662f\uff0c\u5148\u628an\u7528\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u8868\u793a\u51fa\u6765\uff0c\u518d\u5728\u8fd9\u4e2a\u5b57\u7b26\u4e32\u540e\u9762\u63a5\u4e0a\u4e00\u4e2a\u6570k\uff0ck\u4ee3\u8868\u5b57\u7b26\u4e32n\u7684\u957f\u5ea6\u3002\r\n\r\n\u4f46\u662fKate\u6536\u5230\u7684\u6570\u662f\u4e71\u5e8f\u7684\uff0c\u5979\u8be2\u95eeVasya\u65f6\uff0cVasya\u53ea\u8bb0\u5f97\u8fd9\u4e2a\u5b57\u7b26\u4e32n\u7684\u4e00\u4e2a\u975e\u7a7a\u5b50\u4e32\u4e86\u3002\r\n\r\n\u73b0\u5728\u4f60\u9700\u8981\u53bb\u628an\u8fd8\u539f\u6210\u90a3\u4e2a\u5f88\u5927\u7684\u6574\u6570\u3002\u7531\u4e8en\u6709\u5f88\u591a\u79cd\u8fd8\u539f\u65b9\u6cd5\uff0c\u4f60\u9700\u8981\u8f93\u51fa\u7684\u662f\u7b26\u5408\u9898\u76ee\u6761\u4ef6\u7684\u6700\u5c0f\u7684n\u3002\u8fd9\u91cc\u7684n\u4e0d\u542b\u6709\u524d\u5bfc0\uff0c\u9664\u975en=0.\r\n\r\n\u8f93\u5165\uff1a\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u5206\u522b\u4ee3\u8868Kate\u6536\u5230\u7684\u5b57\u7b26\u4e32\u548cn\u7684\u4e00\u4e2a\u5b50\u4e32\uff0c\u5b50\u4e32\u53ef\u4ee5\u542b\u6709\u524d\u5bfc0.\r\n\r\n\u8f93\u51fa\uff1a\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793aVasya\u60f3\u4f20\u9001\u7684\u6574\u6570n\u7684\u6700\u5c0f\u503c\u3002\r\n\r\n\u6837\u4f8b\u89e3\u91ca\uff1a\u5728\u7b2c\u4e00\u7ec4\u6837\u4f8b\u91cc\uff0c\u7b54\u6848\u957f\u5ea6\u4e3a5\uff0c\u4e14\u5305\u542b\u5b50\u4e32021\uff0c\u6240\u4ee5\u80fd\u4ea7\u751f\u7684\u7ed3\u679c\u662f30021\uff1b\u5728\u7b2c\u4e8c\u7ec4\u6837\u4f8b\u4e2d\uff0c\u7b54\u6848\u957f\u5ea6\u4e3a10\uff0c\u4e14\u5305\u542b\u5b50\u4e3263\uff0c\u80fd\u4ea7\u751f\u7684\u7ed3\u679c\u4e3a3036366999\u3002"
}