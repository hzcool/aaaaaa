{
    "description": "You have unweighted tree of $ n $ vertices. You have to assign a positive weight to each edge so that the following condition would hold:\n\n- For every two different leaves $ v_{1} $ and $ v_{2} $ of this tree, [bitwise XOR](https://en.wikipedia.org/wiki/Bitwise_operation#XOR) of weights of all edges on the simple path between $ v_{1} $ and $ v_{2} $ has to be equal to $ 0 $ .\n\nNote that you can put very large positive integers (like $ 10^{(10^{10})} $ ).\n\nIt's guaranteed that such assignment always exists under given constraints. Now let's define $ f $ as the number of distinct weights in assignment.\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1338B/eb47baeab358a9bf4d6536421055c2c258904b33.png) In this example, assignment is valid, because bitwise XOR of all edge weights between every pair of leaves is $ 0 $ . $ f $ value is $ 2 $ here, because there are $ 2 $ distinct edge weights( $ 4 $ and $ 5 $ ).![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1338B/158a70d1382d5b7e8863700d0f77901af19c305f.png) In this example, assignment is invalid, because bitwise XOR of all edge weights between vertex $ 1 $ and vertex $ 6 $ ( $ 3, 4, 5, 4 $ ) is not $ 0 $ .\n\nWhat are the minimum and the maximum possible values of $ f $ for the given tree? Find and print both.",
    "inputFormat": "The first line contains integer $ n $ ( $ 3 \\le n \\le 10^{5} $ ) \u2014 the number of vertices in given tree.\n\nThe $ i $ -th of the next $ n-1 $ lines contains two integers $ a_{i} $ and $ b_{i} $ ( $ 1 \\le a_{i} \\lt b_{i} \\le n $ ) \u2014 it means there is an edge between $ a_{i} $ and $ b_{i} $ . It is guaranteed that given graph forms tree of $ n $ vertices.",
    "outputFormat": "Print two integers \u2014 the minimum and maximum possible value of $ f $ can be made from valid assignment of given tree. Note that it's always possible to make an assignment under given constraints.",
    "samples": [
        [
            "6\n1 3\n2 3\n3 4\n4 5\n5 6",
            "1 4"
        ],
        [
            "6\n1 3\n2 3\n3 4\n4 5\n4 6",
            "3 3"
        ],
        [
            "7\n1 2\n2 7\n3 4\n4 7\n5 6\n6 7",
            "1 6"
        ]
    ],
    "hint": "In the first example, possible assignments for each minimum and maximum are described in picture below. Of course, there are multiple possible assignments for each minimum and maximum.\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1338B/c4eae7135fc2816569401e9d249b68afcb80223d.png)In the second example, possible assignments for each minimum and maximum are described in picture below. The $ f $ value of valid assignment of this tree is always $ 3 $ .\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1338B/baad69bf823b2a9aa4bb5b201a45aae8769d51f6.png)In the third example, possible assignments for each minimum and maximum are described in picture below. Of course, there are multiple possible assignments for each minimum and maximum.\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1338B/4ce205cbdc1e4310ee123b92671ae7a1941bacd7.png)",
    "translation": "### \u9898\u76ee\u63cf\u8ff0\n\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684\u65e0\u6839\u6811\uff0c\u8981\u6c42\u7ed9\u6bcf\u6761\u8fb9\u5206\u914d\u4e00\u4e2a**\u6b63\u6574\u6570**\u6743\u503c\uff0c\u4f7f\u5f97\u4efb\u610f\u4e24\u4e2a\u53f6\u5b50\u8282\u70b9\u4e4b\u95f4\u8def\u5f84\u4e0a\u7684\u8fb9\u6743\u5f02\u6216\u503c\u4e3a $0$\u3002\u6c42\u6700\u5c11\u8981\u591a\u5c11\u79cd\u4e0d\u540c\u6743\u503c\uff0c\u4ee5\u53ca\u6700\u591a\u53ef\u4ee5\u4f7f\u7528\u591a\u5c11\u79cd\u4e0d\u540c\u6743\u503c\u3002  \n\u8fd9\u91cc\uff0c\u586b\u5165\u7684\u8fb9\u6743\u503c\u53ef\u4ee5\u4e3a\u4efb\u610f\u5927\u3002  \n\n### \u6570\u636e\u8303\u56f4\n$3 \\le n\\le 10^5$ "
}