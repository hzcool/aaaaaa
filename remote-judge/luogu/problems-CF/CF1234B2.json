{
    "description": "The only difference between easy and hard versions are constraints on $ n $ and $ k $ .\n\nYou are messaging in one of the popular social networks via your smartphone. Your smartphone can show at most $ k $ most recent conversations with your friends. Initially, the screen is empty (i.e. the number of displayed conversations equals $ 0 $ ).\n\nEach conversation is between you and some of your friends. There is at most one conversation with any of your friends. So each conversation is uniquely defined by your friend.\n\nYou (suddenly!) have the ability to see the future. You know that during the day you will receive $ n $ messages, the $ i $ -th message will be received from the friend with ID $ id_i $ ( $ 1 \\le id_i \\le 10^9 $ ).\n\nIf you receive a message from $ id_i $ in the conversation which is currently displayed on the smartphone then nothing happens: the conversations of the screen do not change and do not change their order, you read the message and continue waiting for new messages.\n\nOtherwise (i.e. if there is no conversation with $ id_i $ on the screen):\n\n- Firstly, if the number of conversations displayed on the screen is $ k $ , the last conversation (which has the position $ k $ ) is removed from the screen.\n- Now the number of conversations on the screen is guaranteed to be less than $ k $ and the conversation with the friend $ id_i $ is not displayed on the screen.\n- The conversation with the friend $ id_i $ appears on the first (the topmost) position on the screen and all the other displayed conversations are shifted one position down.\n\nYour task is to find the list of conversations (in the order they are displayed on the screen) after processing all $ n $ messages.",
    "inputFormat": "The first line of the input contains two integers $ n $ and $ k $ ( $ 1 \\le n, k \\le 2 \\cdot 10^5) $ \u2014 the number of messages and the number of conversations your smartphone can show.\n\nThe second line of the input contains $ n $ integers $ id_1, id_2, \\dots, id_n $ ( $ 1 \\le id_i \\le 10^9 $ ), where $ id_i $ is the ID of the friend which sends you the $ i $ -th message.",
    "outputFormat": "In the first line of the output print one integer $ m $ ( $ 1 \\le m \\le min(n, k) $ ) \u2014 the number of conversations shown after receiving all $ n $ messages.\n\nIn the second line print $ m $ integers $ ids_1, ids_2, \\dots, ids_m $ , where $ ids_i $ should be equal to the ID of the friend corresponding to the conversation displayed on the position $ i $ after receiving all $ n $ messages.",
    "samples": [
        [
            "7 2\n1 2 3 2 1 3 2\n",
            "2\n2 1 \n"
        ],
        [
            "10 4\n2 3 3 1 1 2 1 2 3 3\n",
            "3\n1 3 2 \n"
        ]
    ],
    "hint": "In the first example the list of conversations will change in the following way (in order from the first to last message):\n\n- $ [] $ ;\n- $ [1] $ ;\n- $ [2, 1] $ ;\n- $ [3, 2] $ ;\n- $ [3, 2] $ ;\n- $ [1, 3] $ ;\n- $ [1, 3] $ ;\n- $ [2, 1] $ .\n\nIn the second example the list of conversations will change in the following way:\n\n- $ [] $ ;\n- $ [2] $ ;\n- $ [3, 2] $ ;\n- $ [3, 2] $ ;\n- $ [1, 3, 2] $ ;\n- and then the list will not change till the end.",
    "translation": "\u6ce8\uff1a*\u7b80\u5355\u7248*\u4e0e*\u56f0\u96be\u7248*\u7684\u533a\u522b\u53ea\u662f$n$\u548c$k$\u7684\u6570\u636e\u7ea6\u675f\u4e0d\u540c\u3002\n\n\u4f60\u6b63\u5728\u901a\u8fc7\u4f60\u7684\u624b\u673a\u5728\u4e00\u4e2a\u6d41\u884c\u793e\u4ea4\u7f51\u7edc\uff08\u670b\u53cb\u5708\uff09\u4e4b\u4e2d\u53d1\u4fe1\u606f\u3002\u4f60\u7684\u624b\u673a\u53ef\u4ee5\u540c\u65f6\u5c55\u793a\u81f3\u591a$k$\u4e2a\u4f60\u4e0e\u4f60\u7684\u670b\u53cb\u7684\u6700\u8fd1\u901a\u8bdd\u8bb0\u5f55\u3002\u8d77\u521d\uff0c\u624b\u673a\u7684\u5c4f\u5e55\u4e0a\u662f\u7a7a\u7684\uff08\u5373\u663e\u793a\u7684\u901a\u8bdd\u8bb0\u5f55\u6570\u91cf\u4e3a$0$\uff09\u3002\n\n\u6bcf\u6b21\u901a\u8bdd\u90fd\u662f\u4f60\u4e0e\u4f60\u7684\u670b\u53cb\u8fdb\u884c\u7684\u3002\u800c\u4e14\u4f60\u4e0e\u4f60\u7684\u4efb\u4f55\u4e00\u4e2a\u670b\u53cb\u81f3\u591a\u53ea\u4f1a\u901a\u8bdd\u4e00\u6b21\uff0c\u6240\u4ee5\u6bcf\u6b21\u901a\u8bdd\u90fd\u662f\u548c\u4f60\u7684\u670b\u53cb\u4e00\u4e00\u5bf9\u5e94\u3001\u552f\u4e00\u5b9a\u4e49\u7684\u3002\n\n\u4f60\uff08\u7a81\u7136\u4e4b\u95f4\uff01\uff01\uff01\uff09\u5f97\u5230\u4e86\u9884\u77e5\u672a\u6765\u7684\u80fd\u529b\u3002\u4f60\u77e5\u9053\u5728\u4e00\u5929\u5f53\u4e2d\u4f60\u5c06\u4f1a\u6536\u5230$n$\u6761\u4fe1\u606f\uff0c\u7b2c$i$\u6761\u4fe1\u606f\u5c06\u4f1a\u662f\u6765\u81ea\u7f16\u53f7\u4e3a$id_i$\u7684\u670b\u53cb\u7684\uff08$1 \\le id_i \\le 10^9$\uff09\u3002\n\n\u5982\u679c\u4f60\u6536\u5230\u7684\u4e00\u6761\u6765\u81ea$id_i$\u7684\u670b\u53cb\u7684\u4fe1\u606f\u5e76\u4e14\u8fd9\u4e2a\u670b\u53cb\u5df2\u7ecf\u5728\u4f60\u624b\u673a\u5c4f\u5e55\u6240\u663e\u793a\u7684\u901a\u8bdd\u8bb0\u5f55\u4e2d\u5b58\u5728\u4e86\uff0c\u90a3\u4e48\u4ec0\u4e48\u90fd\u4e0d\u4f1a\u53d1\u751f\uff1a\u5c4f\u5e55\u4e0a\u7684\u8bb0\u5f55\u4e0d\u4f1a\u6539\u53d8\uff0c\u987a\u5e8f\u4e5f\u4e0d\u4f1a\u88ab\u6539\u53d8\uff0c\u4f60\u53ea\u662f\u8bfb\u4e86\u8fd9\u4e2a\u4fe1\u606f\u4e4b\u540e\u7b49\u5f85\u4e00\u6761\u65b0\u7684\u4fe1\u606f\u3002\n\n\u7136\u800c\uff08\u5728\u5c4f\u5e55\u4e0a\u6ca1\u6709\u663e\u793a\u4e0e\u53d1\u6765\u4fe1\u606f\u7684\u670b\u53cb$id_i$\u7684\u901a\u8bdd\u8bb0\u5f55\uff09\uff1a\n\n- \u9996\u5148\uff0c\u5982\u679c\u5c4f\u5e55\u4e0a\u663e\u793a\u7684\u901a\u8bdd\u8bb0\u5f55\u7684\u6570\u76ee\u4e3a$k$\uff0c\u90a3\u4e48\u5c06\u5728\u5c4f\u5e55\u4e2d\u6e05\u9664\u6700\u540e\u4e00\u4e2a\u901a\u8bdd\u8bb0\u5f55\uff08\u4f4d\u7f6e\u4e3a$k$\uff09\u3002\n- \u73b0\u5728\u5c4f\u5e55\u4e0a\u7684\u8bb0\u5f55\u6570\u76ee\u4e00\u5b9a\u5c0f\u4e8e$k$\u5e76\u4e14\u7f16\u53f7\u4e3a$id_i$\u7684\u670b\u53cb\u4e5f\u6ca1\u6709\u51fa\u73b0\u5728\u4f60\u624b\u673a\u5c4f\u5e55\u4e0a\u7684\u901a\u8bdd\u8bb0\u5f55\u5f53\u4e2d\u3002\n- \u4f60\u4e0e\u7f16\u53f7\u4e3a$id_i$\u7684\u670b\u53cb\u7684\u901a\u8bdd\u8bb0\u5f55\u5c06\u51fa\u73b0\u5728\u5c4f\u5e55\u4e0a\u5217\u8868\u7684\u7b2c\u4e00\u4e2a\uff08\u6700\u4e0a\u8fb9\uff09\u7684\u4f4d\u7f6e\uff0c\u5176\u4ed6\u7684\u901a\u8bdd\u8bb0\u5f55\u90fd\u5c06\u5411\u540e\u79fb\u52a8\u4e00\u4e2a\u4f4d\u7f6e\u3002\n\n\u4f60\u7684\u4efb\u52a1\u5c31\u662f\u5728\u5904\u7406\u5b8c\u8fd9\u6240\u6709\u7684$n$\u6761\u4fe1\u606f\u4e4b\u540e\u627e\u5230\u8fd9\u65f6\u901a\u8bdd\u8bb0\u5f55\u7684\u5217\u8868\uff08\u6309\u7167\u4ed6\u4eec\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u7684\u987a\u5e8f\uff09\u3002\n\n"
}