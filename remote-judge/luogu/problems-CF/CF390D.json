{
    "description": "Inna loves sweets very much. That's why she decided to play a game called \"Sweet Matrix\".\n\nInna sees an $ n\u00d7m $ matrix and $ k $ candies. We'll index the matrix rows from $ 1 $ to $ n $ and the matrix columns from $ 1 $ to $ m $ . We'll represent the cell in the $ i $ -th row and $ j $ -th column as $ (i,j) $ . Two cells $ (i,j) $ and $ (p,q) $ of the matrix are adjacent if $ |i-p|+|j-q|=1 $ . A path is a sequence of the matrix cells where each pair of neighbouring cells in the sequence is adjacent. We'll call the number of cells in the sequence the path's length.\n\nEach cell of the matrix can have at most one candy. Initiallly, all the cells are empty. Inna is trying to place each of the $ k $ candies in the matrix one by one. For each candy Inna chooses cell $ (i,j) $ that will contains the candy, and also chooses the path that starts in cell $ (1,1) $ and ends in cell $ (i,j) $ and doesn't contain any candies. After that Inna moves the candy along the path from cell $ (1,1) $ to cell $ (i,j) $ , where the candy stays forever. If at some moment Inna can't choose a path for the candy, she loses. If Inna can place all the candies in the matrix in the described manner, then her penalty equals the sum of lengths of all the paths she has used.\n\nHelp Inna to minimize the penalty in the game.",
    "inputFormat": "The first line of the input contains three integers $ n $ , $ m $ and $ k $ $ (1<=n,m<=50,1<=k<=n\u00b7m) $ .",
    "outputFormat": "In the first line print an integer \u2014 Inna's minimum penalty in the game.\n\nIn the next $ k $ lines print the description of the path for each candy. The description of the path of the candy that is placed $ i $ -th should follow on the $ i $ -th line. The description of a path is a sequence of cells. Each cell must be written in the format $ (i,j) $ , where $ i $ is the number of the row and $ j $ is the number of the column. You are allowed to print extra whitespaces in the line. If there are multiple optimal solutions, print any of them.\n\nPlease follow the output format strictly! If your program passes the first pretest, then the output format is correct.",
    "samples": [
        [
            "4 4 4\n",
            "8\n(1,1) (2,1) (2,2)\n(1,1) (1,2)\n(1,1) (2,1)\n(1,1)\n"
        ]
    ],
    "hint": "Note to the sample. Initially the matrix is empty. Then Inna follows her first path, the path penalty equals the number of cells in it \u2014 3. Note that now no path can go through cell (2, 2), as it now contains a candy. The next two candies go to cells (1, 2) and (2, 1). Inna simply leaves the last candy at cell (1, 1), the path contains only this cell. The total penalty is: 3 + 2 + 2 + 1 = 8.\n\nNote that Inna couldn't use cell (1, 1) to place, for instance, the third candy as in this case she couldn't have made the path for the fourth candy."
}