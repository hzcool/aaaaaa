{
    "description": "Two pirates Polycarpus and Vasily play a very interesting game. They have $ n $ chests with coins, the chests are numbered with integers from 1 to $ n $ . Chest number $ i $ has $ a_{i} $ coins.\n\nPolycarpus and Vasily move in turns. Polycarpus moves first. During a move a player is allowed to choose a positive integer $ x $ $ (2\u00b7x+1<=n) $ and take a coin from each chest with numbers $ x $ , $ 2\u00b7x $ , $ 2\u00b7x+1 $ . It may turn out that some chest has no coins, in this case the player doesn't take a coin from this chest. The game finishes when all chests get emptied.\n\nPolycarpus isn't a greedy scrooge. Polycarpys is a lazy slob. So he wonders in what minimum number of moves the game can finish. Help Polycarpus, determine the minimum number of moves in which the game can finish. Note that Polycarpus counts not only his moves, he also counts Vasily's moves.",
    "inputFormat": "The first line contains a single integer $ n $ $ (1<=n<=100) $ \u2014 the number of chests with coins. The second line contains a sequence of space-separated integers: $ a_{1},a_{2},...,a_{n} $ $ (1<=a_{i}<=1000) $ , where $ a_{i} $ is the number of coins in the chest number $ i $ at the beginning of the game.",
    "outputFormat": "Print a single integer \u2014 the minimum number of moves needed to finish the game. If no sequence of turns leads to finishing the game, print -1.",
    "samples": [
        [
            "1\n1\n",
            "-1\n"
        ],
        [
            "3\n1 2 3\n",
            "3\n"
        ]
    ],
    "hint": "In the first test case there isn't a single move that can be made. That's why the players won't be able to empty the chests.\n\nIn the second sample there is only one possible move $ x=1 $ . This move should be repeated at least 3 times to empty the third chest.",
    "translation": "#### \u9898\u76ee\u63cf\u8ff0\n\n\u4e24\u4e2a\u6d77\u76d7 Polycarpus \u548c Vasily \u73a9\u4e86\u4e00\u4e2a\u975e\u5e38\u6709\u8da3\u7684\u6e38\u620f\u3002\u4ed6\u4eec\u6709 $n$ \u4e2a\u88c5\u6709\u786c\u5e01\u7684\u7bb1\u5b50\uff0c\u8fd9\u4e9b\u7bb1\u5b50\u90fd\u6709\u4e00\u4e2a\u4ece $1$ \u5230 $n$ \u7684\u6574\u6570\u7f16\u53f7\u3002\u7f16\u53f7\u4e3a $i$ \u7684\u7bb1\u5b50\u6709 $a_{i}$ \u4e2a\u786c\u5e01\u3002\n\nPolycarpus \u548c Vasily \u8f6e\u6d41\u51fa\u624b\u3002 Polycarpus \u9996\u5148\u51fa\u624b\u3002\u5728\u79fb\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u73a9\u5bb6\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a\u6b63\u6574\u6570 $x$ $(2\u00d7x+1 \\leq n)$ \u5e76\u4ece\u6bcf\u4e2a\u7f16\u53f7\u4e3a $x$ \u3001 $2 \\times x$ \u3001$2 \\times x+1$ \u7684\u7bb1\u5b50\u4e2d\u53d6\u51fa\u4e00\u4e2a\u786c\u5e01\u3002 \u53ef\u80fd\u4f1a\u53d1\u73b0\u67d0\u4e9b\u7bb1\u5b50\u6ca1\u6709\u786c\u5e01\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e0d\u4f1a\u4ece\u8fd9\u4e2a\u7bb1\u5b50\u4e2d\u53d6\u51fa\u786c\u5e01\u3002\u5f53\u6240\u6709\u7bb1\u5b50\u90fd\u6ca1\u6709\u786c\u5e01\u65f6\uff0c\u6e38\u620f\u7ed3\u675f\u3002\n\nPolycarpys \u975e\u5e38\u61d2\uff0c\u4f46\u662f\u4ed6\u53c8\u60f3\u77e5\u9053\u6e38\u620f\u6700\u5c11\u53ef\u4ee5\u73a9\u51e0\u8f6e\uff0c\u4e8e\u662f\u4ed6\u628a\u8fd9\u4e2a\u4efb\u52a1\u4ea4\u7ed9\u4e86\u4f60\u3002\n\n#### \u8f93\u5165\u683c\u5f0f\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570 $n$ \uff0c\u8868\u793a\u7bb1\u5b50\u7684\u4e2a\u6570\uff1b\\\n\u7b2c\u4e8c\u884c $n$ \u4e2a\u6574\u6570\uff0c\u8868\u793a\u6bcf\u4e2a\u7bb1\u5b50\u88c5\u6709\u7684\u786c\u5e01\u6570\u3002\n\n#### \u8f93\u51fa\u683c\u5f0f\n\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u5b8c\u6210\u6e38\u620f\u6700\u5c11\u9700\u8981\u7684\u8f6e\u6570\u3002\u5982\u679c\u65e0\u6cd5\u7ed3\u675f\u6e38\u620f\uff0c\u8f93\u51fa `-1` \u3002"
}