{
    "description": "Andrew has $ n $ piles with stones. The $ i $ -th pile contains $ a_i $ stones. He wants to make his table clean so he decided to put every stone either to the $ 1 $ -st or the $ n $ -th pile.\n\nAndrew can perform the following operation any number of times: choose $ 3 $ indices $ 1 \\le i < j < k \\le n $ , such that the $ j $ -th pile contains at least $ 2 $ stones, then he takes $ 2 $ stones from the pile $ j $ and puts one stone into pile $ i $ and one stone into pile $ k $ .\n\nTell Andrew what is the minimum number of operations needed to move all the stones to piles $ 1 $ and $ n $ , or determine if it's impossible.",
    "inputFormat": "The input contains several test cases. The first line contains one integer $ t $ ( $ 1 \\leq t \\leq 10\\,000 $ ) \u2014 the number of test cases.\n\nThe first line for each test case contains one integer $ n $ ( $ 3 \\leq n \\leq 10^5 $ ) \u2014 the length of the array.\n\nThe second line contains a sequence of integers $ a_1, a_2, \\ldots, a_n $ ( $ 1 \\leq a_i \\leq 10^9 $ ) \u2014 the array elements.\n\nIt is guaranteed that the sum of the values $ n $ over all test cases does not exceed $ 10^5 $ .",
    "outputFormat": "For each test case print the minimum number of operations needed to move stones to piles $ 1 $ and $ n $ , or print $ -1 $ if it's impossible.",
    "samples": [
        [
            "4\n5\n1 2 2 3 6\n3\n1 3 1\n3\n1 2 1\n4\n3 1 1 2",
            "4\n-1\n1\n-1"
        ]
    ],
    "hint": "In the first test case, it is optimal to do the following:\n\n1. Select $ (i, j, k) = (1, 2, 5) $ . The array becomes equal to $ [2, 0, 2, 3, 7] $ .\n2. Select $ (i, j, k) = (1, 3, 4) $ . The array becomes equal to $ [3, 0, 0, 4, 7] $ .\n3. Twice select $ (i, j, k) = (1, 4, 5) $ . The array becomes equal to $ [5, 0, 0, 0, 9] $ . This array satisfy the statement, because every stone is moved to piles $ 1 $ and $ 5 $ .\n\n There are $ 4 $ operations in total.In the second test case, it's impossible to put all stones into piles with numbers $ 1 $ and $ 3 $ :\n\n1. At the beginning there's only one possible operation with $ (i, j, k) = (1, 2, 3) $ . The array becomes equal to $ [2, 1, 2] $ .\n2. Now there is no possible operation and the array doesn't satisfy the statement, so the answer is $ -1 $ .\n\nIn the third test case, it's optimal to do the following:\n\n1. Select $ (i, j, k) = (1, 2, 3) $ . The array becomes equal to $ [2, 0, 2] $ . This array satisfies the statement, because every stone is moved to piles $ 1 $ and $ 3 $ .\n\n The is $ 1 $ operation in total.In the fourth test case, it's impossible to do any operation, and the array doesn't satisfy the statement, so the answer is $ -1 $ .",
    "translation": "\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u6570\u7ec4 $a$\u3002\u4f60\u53ef\u4ee5\u6267\u884c\u82e5\u5e72\u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u9009\u5b9a\u4e09\u4e2a\u4e0b\u6807 $i,j,k$\uff0c\u9700\u8981\u4fdd\u8bc1 $1\\leqslant i<j<k\\leqslant n$ \u4e14 $a_j\\geqslant 2$\uff0c\u7136\u540e\u5c06 $a_i$ \u66ff\u6362\u4e3a $a_i+1$\uff0c\u5c06 $a_j$ \u66ff\u6362\u4e3a $a_j-2$\uff0c\u5c06 $a_k$ \u66ff\u6362\u4e3a $a_k+1$\u3002\u4f60\u60f3\u4f7f\u5f97 $\\forall i\\in[2,n-1]$\uff0c$a_i=0$\u3002\u6c42\u9700\u8981\u7684\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a\n\n- $t$ \u7ec4\u6570\u636e\uff0c$1\\leqslant t\\leqslant 10^4$\u3002\n- $3\\leqslant n,\\sum n\\leqslant 10^5$\u3002\n- $1\\leqslant a_i\\leqslant 10^9$\u3002\n\nTranslated by Eason_AC"
}