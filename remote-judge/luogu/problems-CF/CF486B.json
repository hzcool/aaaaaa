{
    "description": "Let's define logical $ OR $ as an operation on two logical values (i. e. values that belong to the set $ {0,1} $ ) that is equal to $ 1 $ if either or both of the logical values is set to $ 1 $ , otherwise it is $ 0 $ . We can define logical $ OR $ of three or more logical values in the same manner:\n\n![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF486B/406211f13f2a7c95dc14e24b4ae950d102f218cc.png) where ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF486B/83308fae1dcded561005b623c7c1ed2fdfdfe04f.png) is equal to $ 1 $ if some $ a_{i}=1 $ , otherwise it is equal to $ 0 $ .\n\nNam has a matrix $ A $ consisting of $ m $ rows and $ n $ columns. The rows are numbered from $ 1 $ to $ m $ , columns are numbered from $ 1 $ to $ n $ . Element at row $ i $ ( $ 1<=i<=m $ ) and column $ j $ ( $ 1<=j<=n $ ) is denoted as $ A_{ij} $ . All elements of $ A $ are either 0 or 1. From matrix $ A $ , Nam creates another matrix $ B $ of the same size using formula:\n\n![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF486B/157692e348a7a47f249e1d0e7ed60b12dc8cb619.png).\n\n( $ B_{ij} $ is $ OR $ of all elements in row $ i $ and column $ j $ of matrix $ A $ )\n\nNam gives you matrix $ B $ and challenges you to guess matrix $ A $ . Although Nam is smart, he could probably make a mistake while calculating matrix $ B $ , since size of $ A $ can be large.",
    "inputFormat": "The first line contains two integer $ m $ and $ n $ ( $ 1<=m,n<=100 $ ), number of rows and number of columns of matrices respectively.\n\nThe next $ m $ lines each contain $ n $ integers separated by spaces describing rows of matrix $ B $ (each element of $ B $ is either $ 0 $ or $ 1 $ ).",
    "outputFormat": "In the first line, print \"NO\" if Nam has made a mistake when calculating $ B $ , otherwise print \"YES\". If the first line is \"YES\", then also print $ m $ rows consisting of $ n $ integers representing matrix $ A $ that can produce given matrix $ B $ . If there are several solutions print any one.",
    "samples": [
        [
            "2 2\n1 0\n0 0\n",
            "NO\n"
        ],
        [
            "2 3\n1 1 1\n1 1 1\n",
            "YES\n1 1 1\n1 1 1\n"
        ],
        [
            "2 3\n0 1 0\n1 1 1\n",
            "YES\n0 0 0\n0 1 0\n"
        ]
    ],
    "hint": "",
    "translation": "```\nA  B \u90fd\u662f n*m \u7684\u77e9\u9635\uff0c\u5df2\u77e5 B \u77e9\u9635\u662f\u7531 A \u77e9\u9635\u4ee5\u67d0\u79cd\u89c4\u5219\u751f\u6210\uff0c\nB [i][j]\u662f\u7531 A \u77e9\u9635\u7684\u7b2c i \u884c\u7684\u6240\u6709\u5143\u7d20\u548c\u7b2c j \u5217\u7684\u6240\u6709\u5143\u7d20 \u6216\u8fd0\u7b97\uff08or\uff09\u5f97\u5230\n```\n![](https://odzkskevi.qnssl.com/cabc1d1bbab97a93cdc521dabe1cee40)\n```\n\u7ed9\u5b9a B \u77e9\u9635\uff0c\u6c42\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u77e9\u9635 A\n1 <= n,m  <= 100\n```\n\n\u611f\u8c22@\u51c9\u51c9 \u63d0\u4f9b\u7684\u7ffb\u8bd1"
}