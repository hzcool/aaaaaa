{
    "description": "The string $ s $ is given, the string length is odd number. The string consists of lowercase letters of the Latin alphabet.\n\nAs long as the string length is greater than $ 1 $ , the following operation can be performed on it: select any two adjacent letters in the string $ s $ and delete them from the string. For example, from the string \"lemma\" in one operation, you can get any of the four strings: \"mma\", \"lma\", \"lea\" or \"lem\" In particular, in one operation, the length of the string reduces by $ 2 $ .\n\nFormally, let the string $ s $ have the form $ s=s_1s_2 \\dots s_n $ ( $ n>1 $ ). During one operation, you choose an arbitrary index $ i $ ( $ 1 \\le i < n $ ) and replace $ s=s_1s_2 \\dots s_{i-1}s_{i+2} \\dots s_n $ .\n\nFor the given string $ s $ and the letter $ c $ , determine whether it is possible to make such a sequence of operations that in the end the equality $ s=c $ will be true? In other words, is there such a sequence of operations that the process will end with a string of length $ 1 $ , which consists of the letter $ c $ ?",
    "inputFormat": "The first line of input data contains an integer $ t $ ( $ 1 \\le t \\le 10^3 $ ) \u2014 the number of input test cases.\n\nThe descriptions of the $ t $ cases follow. Each test case is represented by two lines:\n\n- string $ s $ , which has an odd length from $ 1 $ to $ 49 $ inclusive and consists of lowercase letters of the Latin alphabet;\n- is a string containing one letter $ c $ , where $ c $ is a lowercase letter of the Latin alphabet.",
    "outputFormat": "For each test case in a separate line output:\n\n- YES, if the string $ s $ can be converted so that $ s=c $ is true;\n- NO otherwise.\n\nYou can output YES and NO in any case (for example, the strings yEs, yes, Yes and YES will be recognized as a positive response).",
    "samples": [
        [
            "5\nabcde\nc\nabcde\nb\nx\ny\naaaaaaaaaaaaaaa\na\ncontest\nt",
            "YES\nNO\nNO\nYES\nYES"
        ]
    ],
    "hint": "In the first test case, $ s $ =\"abcde\". You need to get $ s $ =\"c\". For the first operation, delete the first two letters, we get $ s $ =\"cde\". In the second operation, we delete the last two letters, so we get the expected value of $ s $ =\"c\".\n\nIn the third test case, $ s $ =\"x\", it is required to get $ s $ =\"y\". Obviously, this cannot be done.",
    "translation": "\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 $s$ \uff0c\u957f\u5ea6\u4e3a\u5947\u6570\uff0c\u7531\u5c0f\u5199\u5b57\u6bcd\u6784\u6210\u3002\n\n\u53ea\u8981\u5b57\u7b26\u4e32\u957f\u5ea6\u5927\u4e8e1\uff0c\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a\u9009\u62e9\u5b57\u7b26\u4e32\u4e2d\u4efb\u610f\u4e24\u4e2a\u76f8\u90bb\u7684\u5b57\u6bcd\uff0c\u5e76\u4ece\u5b57\u7b26\u4e32\u4e2d\u5220\u9664\u5b83\u4eec\u3002\n\n\u4f8b\u5982\uff0c\u5728\u5b57\u7b26\u4e32 `lemma` \u7684\u4e00\u6b21\u64cd\u4f5c\u4e2d\uff0c\u4f60\u53ef\u4ee5\u80fd\u4f1a\u83b7\u5f97\u4ee5\u4e0b\u56db\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a: `mma`\u3001`lma`\u3001 `lea` \u6216 `lem`\u3002\n\n\u7279\u522b\u5730\uff0c\u5728\u4e00\u6b21\u64cd\u4f5c\u4e2d\uff0c\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4f1a\u51cf\u5c11 $2$\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u5b57\u7b26\u4e32 $s$\uff0c $s = s_1s_2\\ldots s_n$ ( $n>1$ )\u3002\u4f60\u53ef\u4ee5\u5728\u5176\u4e2d\u4efb\u610f\u9009\u62e9\u4e00\u4e2a\u4e0b\u6807 $i$ ( $1 \\le i \\le n$ ) \u5e76\u66f4\u65b0 $s = s_1 s_2 \\ldots s_{i - 1} s_{i + 2} \\ldots s_n$ \u3002\n\n\u5bf9\u4e8e\u7ed9\u5b9a\u7684 $s$ \u548c\u5b57\u7b26 $c$\uff0c\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u64cd\u4f5c\u5e8f\u5217\u53ef\u4ee5\u8ba9 $s$ \u5728\u7ecf\u8fc7\u82e5\u5e72\u6b21\u64cd\u4f5c\u8fc7\u540e\uff0c\u53ea\u5269\u4e0b\u7684\u5b57\u7b26\u4e3a $c$\uff1f\n\n\u5982\u679c\u53ef\u4ee5\uff0c\u8f93\u51fa `YES`\uff0c\u5426\u5219\u8f93\u51fa `NO`\u3002\n\n### \u63d0\u793a\uff1a\n\n\u5728\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u6837\u4f8b\u4e2d\uff0c$s = abcde$\u3002\n- \u5bf9\u4e8e\u7b2c\u4e00\u6b21\u64cd\u4f5c\uff0c\u5220\u9664\u524d\u4e24\u4e2a\u5b57\u6bcd\uff0c\u6211\u4eec\u5f97\u5230 $s = cde$\u3002\n\n- \u5728\u7b2c\u4e8c\u6b21\u64cd\u4f5c\u4e2d\uff0c\u6211\u4eec\u5220\u9664\u6700\u540e\u4e24\u4e2a\u5b57\u6bcd\uff0c\u5f97\u5230 $s = c$"
}