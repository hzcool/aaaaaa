{
    "description": "You know that the Martians use a number system with base $ k $ . Digit $ b $ ( $ 0<=b&lt;k $ ) is considered lucky, as the first contact between the Martians and the Earthlings occurred in year $ b $ (by Martian chronology).\n\nA digital root $ d(x) $ of number $ x $ is a number that consists of a single digit, resulting after cascading summing of all digits of number $ x $ . Word \"cascading\" means that if the first summing gives us a number that consists of several digits, then we sum up all digits again, and again, until we get a one digit number.\n\nFor example, $ d(3504_{7})=d((3+5+0+4)_{7})=d(15_{7})=d((1+5)_{7})=d(6_{7})=6_{7} $ . In this sample the calculations are performed in the 7-base notation.\n\nIf a number's digital root equals $ b $ , the Martians also call this number lucky.\n\nYou have string $ s $ , which consists of $ n $ digits in the $ k $ -base notation system. Your task is to find, how many distinct substrings of the given string are lucky numbers. Leading zeroes are permitted in the numbers.\n\nNote that substring $ s[i...\\ j] $ of the string $ s=a_{1}a_{2}...\\ a_{n} $ ( $ 1<=i<=j<=n $ ) is the string $ a_{i}a_{i+1}...\\ a_{j} $ . Two substrings $ s[i_{1}...\\ j_{1}] $ and $ s[i_{2}...\\ j_{2}] $ of the string $ s $ are different if either $ i_{1}\u2260i_{2} $ or $ j_{1}\u2260j_{2} $ .",
    "inputFormat": "The first line contains three integers $ k $ , $ b $ and $ n $ ( $ 2<=k<=10^{9} $ , $ 0<=b&lt;k $ , $ 1<=n<=10^{5} $ ).\n\nThe second line contains string $ s $ as a sequence of $ n $ integers, representing digits in the $ k $ -base notation: the $ i $ -th integer equals $ a_{i} $ ( $ 0<=a_{i}&lt;k $ ) \u2014 the $ i $ -th digit of string $ s $ . The numbers in the lines are space-separated.",
    "outputFormat": "Print a single integer \u2014 the number of substrings that are lucky numbers.\n\nPlease, do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams or the %I64d specifier.",
    "samples": [
        [
            "10 5 6\n3 2 0 5 6 1\n",
            "5"
        ],
        [
            "7 6 4\n3 5 0 4\n",
            "1"
        ],
        [
            "257 0 3\n0 0 256\n",
            "3"
        ]
    ],
    "hint": "In the first sample the following substrings have the sought digital root: $ s[1...\\ 2] $ = \"3 2\", $ s[1...\\ 3] $ = \"3 2 0\", $ s[3...\\ 4] $ = \"0 5\", $ s[4...\\ 4] $ = \"5\" and $ s[2...\\ 6] $ = \"2 0 5 6 1\".",
    "translation": "\u4e00\u4e2a\u6570\u5b57\u7684\u6570\u5b57\u6839\u5b9a\u4e49\u4e3a\u5728k\u8fdb\u5236\u4e0b\u5404\u4f4d\u6570\u5b57\u76f8\u52a0\uff0c\u91cd\u590d\u82e5\u5e72\u6b21\uff0c\u5f97\u5230\u7684\u4e00\u4f4d\u6570\u3002\u5982\u679c\u4e00\u4e2a\u6570\u5b57\u7684\u6570\u5b57\u6839\u4e3ab\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u5b57\u5c31\u5f88lucky\u3002\u7ed9\u4f60\u4e00\u4e2a\u6570\u5b57\u4e32\uff0c\u95ee\u6709\u591a\u5c11\u4e2a\u8fde\u7eed\u5b57\u4e32\u7ec4\u6210\u7684\u6570\u5b57\u662flucky\u7684\u3002"
}