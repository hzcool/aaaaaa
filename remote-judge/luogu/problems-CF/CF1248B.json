{
    "description": "Gardener Alexey teaches competitive programming to high school students. To congratulate Alexey on the Teacher's Day, the students have gifted him a collection of wooden sticks, where every stick has an integer length. Now Alexey wants to grow a tree from them.\n\nThe tree looks like a polyline on the plane, consisting of all sticks. The polyline starts at the point $ (0, 0) $ . While constructing the polyline, Alexey will attach sticks to it one by one in arbitrary order. Each stick must be either vertical or horizontal (that is, parallel to $ OX $ or $ OY $ axis). It is not allowed for two consecutive sticks to be aligned simultaneously horizontally or simultaneously vertically. See the images below for clarification.\n\nAlexey wants to make a polyline in such a way that its end is as far as possible from $ (0, 0) $ . Please help him to grow the tree this way.\n\nNote that the polyline defining the form of the tree may have self-intersections and self-touches, but it can be proved that the optimal answer does not contain any self-intersections or self-touches.",
    "inputFormat": "The first line contains an integer $ n $ ( $ 1 \\le n \\le 100\\,000 $ ) \u2014 the number of sticks Alexey got as a present.\n\nThe second line contains $ n $ integers $ a_1, \\ldots, a_n $ ( $ 1 \\le a_i \\le 10\\,000 $ ) \u2014 the lengths of the sticks.",
    "outputFormat": "Print one integer \u2014 the square of the largest possible distance from $ (0, 0) $ to the tree end.",
    "samples": [
        [
            "3\n1 2 3\n",
            "26"
        ],
        [
            "4\n1 1 2 2\n",
            "20"
        ]
    ],
    "hint": "The following pictures show optimal trees for example tests. The squared distance in the first example equals $ 5 \\cdot 5 + 1 \\cdot 1 = 26 $ , and in the second example $ 4 \\cdot 4 + 2 \\cdot 2 = 20 $ .\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1248B/7db20a2c52bb98904e15a368693f20c8c6e11756.png) ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1248B/f37e132abb11c10bbc7a671b08b806fa38567869.png)",
    "translation": "\u6709n\u4e2a\u6728\u68cd\uff0c\u4ece\uff080\uff0c0\uff09\u70b9\u5f00\u59cb\uff0c\u6bcf\u6b21\u4f60\u53ef\u4ee5\u9009\u4e00\u6839\u6728\u68cd\u5e73\u884c\u4e8ex\u8f74\u6216y\u8f74\u7684\u6446\uff0c\u4f46\u4e0d\u80fd\u6709\u8fde\u7eed\u4e24\u4e2a\u6216\u4ee5\u4e0a\u7684\u6728\u68cd\u662f\u9009\u62e9\u540c\u4e00\u72b6\u6001\u7684\uff08\u53ea\u80fd\u6a2a\u7ad6\u6a2a\u7ad6\u6216\u7ad6\u6a2a\u7ad6\u6a2a\u5730\u6446\uff09\u3002\u6bcf\u6b21\u6728\u68cd\u6446\u7684\u8d77\u59cb\u4f4d\u7f6e\u662f\u4e0a\u4e00\u6839\u6728\u68cd\u7684\u7ed3\u675f\u4f4d\u7f6e\uff0c\u95ee\u6700\u540e\u4e00\u6761\u6728\u68cd\u7684\u7ec8\u70b9\u8ddd\u79bb\uff080\uff0c0\uff09\u70b9\u6700\u8fdc\u7684\u8ddd\u79bb\u7684\u5e73\u65b9\u6700\u5927\u662f\u591a\u5c11\u3002"
}