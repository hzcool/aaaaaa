{
    "description": "Tree is a connected undirected graph that has no cycles. Edge cactus is a connected undirected graph without loops and parallel edges, such that each edge belongs to at most one cycle.\n\nVasya has an edge cactus, each edge of this graph has some color.\n\nVasya would like to remove the minimal number of edges in such way that his cactus turned to a tree. Vasya wants to make it in such a way that there were edges of as many different colors in the resulting tree, as possible. Help him to find how many different colors can the resulting tree have.",
    "inputFormat": "The first line contains two integers: $ n $ , $ m $ ( $ 2<=n<=10000 $ ) \u2014 the number of vertices and the number of edges in Vasya's graph, respectively.\n\nThe following $ m $ lines contain three integers each: $ u $ , $ v $ , $ c $ ( $ 1<=u,v<=n $ , $ u\u2260v $ , $ 1<=c<=m $ ) \u2014 the numbers of vertices connected by the corresponding edge, and its color. It is guaranteed that the described graph is indeed an edge cactus.",
    "outputFormat": "Output one integer: the maximal number of different colors that the resulting tree can have.",
    "samples": [
        [
            "4 4\n1 2 4\n2 3 1\n3 4 2\n4 2 3\n",
            "3\n"
        ],
        [
            "7 9\n1 2 1\n2 3 4\n3 1 5\n1 4 5\n4 5 2\n5 1 6\n1 6 4\n6 7 6\n7 1 3\n",
            "6\n"
        ]
    ],
    "hint": "",
    "translation": "**\u9898\u76ee\u63cf\u8ff0**\n\n\u6811\u662f\u4e00\u4e2a\u6ca1\u6709\u5faa\u73af\u7684\u8fde\u901a\u65e0\u5411\u56fe\u3002\n\n\u4ed9\u4eba\u638c\u56fe\u662f\u4e00\u4e2a\u65e0\u73af\u3001\u65e0\u5e73\u884c\u8fb9\u7684\u8fde\u901a\u65e0\u5411\u56fe\uff0c\u6bcf\u4e2a\u8fb9\u6700\u591a\u53ea\u5c5e\u4e8e\u4e00\u4e2a\u73af\u3002Vasya \u6709\u4e00\u4e2a\u4ed9\u4eba\u638c\u56fe\uff0c\u56fe\u7684\u6bcf\u4e00\u4e2a\u8fb9\u90fd\u6709\u989c\u8272\u3002\n\nVasya \u60f3\u79fb\u9664\u6700\u5c11\u6570\u91cf\u7684\u8fb9\uff0c\u8fd9\u6837\u4ed6\u7684\u4ed9\u4eba\u638c\u56fe\u5c31\u53d8\u6210\u4e86\u4e00\u68f5\u6811\u3002\n\nVasya\u79fb\u9664\u540e\uff0c\u6811\u4e0a\u6709\u5c3d\u53ef\u80fd\u591a\u7684\u4e0d\u540c\u989c\u8272\u7684\u8fb9\u3002\u8bf7\u5e2e\u52a9\u4ed6\u627e\u51fa\u6811\u4e0a\u53ef\u4ee5\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u989c\u8272\u3002\n\n\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u8ba9\u4f60\u6c42\u628a\u8fd9\u68f5\u4ed9\u4eba\u638c\u5220\u8fb9\u6210\u4e00\u68f5 n \u4e2a\u8282\u70b9\u7684\u6811\u540e\u5269\u4f59\u7684\u989c\u8272\u6700\u591a\u79cd\u7c7b\u6570\u3002\n\n**\u8f93\u5165\u683c\u5f0f**\n\n\u7b2c\u4e00\u884c\u8f93\u5165\u4e24\u4e2a\u6574\u6570 n, m \u5206\u522b\u4ee3\u8868\u9876\u70b9\u6570\u548c\u8fb9\u6570\u3002\n\nn<=10000\n\n\u4e0b\u9762 m \u884c\u5305\u542b\u4e09\u4e2a\u6574\u6570 u, v, c \u8868\u793a\u4e00\u6761\u4ece u \u8fde\u5411 v \u989c\u8272\u4e3a c \u7684\u8fb9\u3002\u8f93\u5165\u6570\u636e\u4fdd\u8bc1\u662f\u4e00\u4e2a\u4ed9\u4eba\u638c\u56fe\u3002\n\n**\u8f93\u51fa\u683c\u5f0f**\n\n\u8f93\u51fa\u6700\u591a\u989c\u8272\u6570\u3002"
}