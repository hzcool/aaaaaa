{
    "description": "There is an infinite 2-dimensional grid. The robot stands in cell $ (0, 0) $ and wants to reach cell $ (x, y) $ . Here is a list of possible commands the robot can execute:\n\n- move north from cell $ (i, j) $ to $ (i, j + 1) $ ;\n- move east from cell $ (i, j) $ to $ (i + 1, j) $ ;\n- move south from cell $ (i, j) $ to $ (i, j - 1) $ ;\n- move west from cell $ (i, j) $ to $ (i - 1, j) $ ;\n- stay in cell $ (i, j) $ .\n\nThe robot wants to reach cell $ (x, y) $ in as few commands as possible. However, he can't execute the same command two or more times in a row.\n\nWhat is the minimum number of commands required to reach $ (x, y) $ from $ (0, 0) $ ?",
    "inputFormat": "The first line contains a single integer $ t $ ( $ 1 \\le t \\le 100 $ ) \u2014 the number of testcases.\n\nEach of the next $ t $ lines contains two integers $ x $ and $ y $ ( $ 0 \\le x, y \\le 10^4 $ ) \u2014 the destination coordinates of the robot.",
    "outputFormat": "For each testcase print a single integer \u2014 the minimum number of commands required for the robot to reach $ (x, y) $ from $ (0, 0) $ if no command is allowed to be executed two or more times in a row.",
    "samples": [
        [
            "5\n5 5\n3 4\n7 1\n0 0\n2 0",
            "10\n7\n13\n0\n3"
        ]
    ],
    "hint": "The explanations for the example test:\n\nWe use characters N, E, S, W and 0 to denote going north, going east, going south, going west and staying in the current cell, respectively.\n\nIn the first test case, the robot can use the following sequence: NENENENENE.\n\nIn the second test case, the robot can use the following sequence: NENENEN.\n\nIn the third test case, the robot can use the following sequence: ESENENE0ENESE.\n\nIn the fourth test case, the robot doesn't need to go anywhere at all.\n\nIn the fifth test case, the robot can use the following sequence: E0E.",
    "translation": "\u5728\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u4e0a\u6709\u4e00\u4e2a\u673a\u5668\u4eba\uff0c\u5b83\u60f3\u4ece $(x,y)$ \u8d70\u5230 $(0,0)$\u3002\u5b83\u53ef\u4ee5\u6267\u884c\u5982\u4e0b\u7684\u547d\u4ee4\uff1a\n- \u5411\u4e0a\u4e0b\u5de6\u53f3\u4efb\u610f\u4e00\u4e2a\u65b9\u5411\u884c\u8d70\u4e00\u4e2a\u5355\u4f4d\u3002\n- \u505c\u7559\u5728\u5f53\u524d\u4f4d\u7f6e\u4e0d\u52a8\u3002\n\n\u4f46\u662f\uff0c\u673a\u5668\u4eba\u4e0d\u80fd\u8fde\u7eed\u6267\u884c\u540c\u4e00\u4e2a\u547d\u4ee4\u4e24\u6b21\u6216\u66f4\u591a\u6b21\u3002\u73b0\u5728\u7ed9\u51fa $t$ \u7ec4\u8be2\u95ee\uff0c\u6bcf\u7ec4\u8be2\u95ee\u7ed9\u5b9a $(x,y)$\uff0c\u6c42\u81f3\u5c11\u8981\u6267\u884c\u7684\u547d\u4ee4\u6b21\u6570\u3002\n\nTranslated by Eason_AC  \n2020.11.20"
}