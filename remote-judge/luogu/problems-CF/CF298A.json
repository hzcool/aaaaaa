{
    "description": "There is a straight snowy road, divided into $ n $ blocks. The blocks are numbered from 1 to $ n $ from left to right. If one moves from the $ i $ -th block to the $ (i+1) $ -th block, he will leave a right footprint on the $ i $ -th block. Similarly, if one moves from the $ i $ -th block to the $ (i-1) $ -th block, he will leave a left footprint on the $ i $ -th block. If there already is a footprint on the $ i $ -th block, the new footprint will cover the old one.\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF298A/67d5fe232964f55b35f1d37315e4e2b333131dd5.png)At the beginning, there were no footprints. Then polar bear Alice starts from the $ s $ -th block, makes a sequence of moves and ends in the $ t $ -th block. It is known that Alice never moves outside of the road.\n\nYou are given the description of Alice's footprints. Your task is to find a pair of possible values of $ s,t $ by looking at the footprints.",
    "inputFormat": "The first line of the input contains integer $ n $ $ (3<=n<=1000) $ .\n\nThe second line contains the description of the road \u2014 the string that consists of $ n $ characters. Each character will be either \".\" (a block without footprint), or \"L\" (a block with a left footprint), \"R\" (a block with a right footprint).\n\nIt's guaranteed that the given string contains at least one character not equal to \".\". Also, the first and the last character will always be \".\". It's guaranteed that a solution exists.",
    "outputFormat": "Print two space-separated integers \u2014 the values of $ s $ and $ t $ . If there are several possible solutions you can print any of them.",
    "samples": [
        [
            "9\n..RRLL...\n",
            "3 4\n"
        ],
        [
            "11\n.RRRLLLLL..\n",
            "7 5\n"
        ]
    ],
    "hint": "The first test sample is the one in the picture.",
    "translation": "\u5317\u6781\u718aAlice\u5728\u4e00\u6761\u8986\u76d6\u7740\u767d\u96ea\u7684\u76f4\u884c\u9053\u8def\u4e0a\u884c\u8d70\uff0c\u7559\u4e0b\u4e00\u4e32\u5c0f\u722a\u5370\u3002\r\n\u8fd9\u6761\u8def\u5206\u4e3an\u4e2a\u90e8\u5206\uff0c\u8fd9\u4e9b\u90e8\u5206\u4ece\u5de6\u5230\u53f3\u7f16\u53f7\u4e3a 1 \u5230 n \u3002\u5982\u679cAlice\u4ece\u7b2c i \u4e2a\u5757\u79fb\u52a8\u5230\u7b2c\uff08i+1\uff09\u4e2a\u5757\uff0c\u5b83\u5c06\u5728\u7b2c i \u4e2a\u5757\u4e0a\u7559\u4e0b\u53f3\u722a\u7684\u722a\u5370\u3002\u7c7b\u4f3c\u5730\uff0c\u5982\u679c\u5b83\u4ece\u7b2c i \u4e2a\u5757\u79fb\u52a8\u5230\u7b2c\uff08i-1)\u4e2a\u5757\uff0c\u5b83\u5c06\u5728\u7b2c i \u4e2a\u5757\u4e0a\u7559\u4e0b\u5de6\u722a\u7684\u722a\u5370\u3002\u5982\u679c\u7b2c i \u5757\u4e0a\u5df2\u7ecf\u6709\u722a\u5370\uff0c\u5219\u65b0\u722a\u5370\u5c06\u8986\u76d6\u65e7\u722a\u5370\u3002\r\n\u4e00\u5f00\u59cb\uff0c\u6ca1\u6709\u722a\u5370\uff0c\u7136\u540e\u5b83\u4ece\u7b2cs\u4e2a\u90e8\u5206\u5f00\u59cb\uff0c\u8fdb\u884c\u4e00\u7cfb\u5217\u79fb\u52a8\u5e76\u5728\u7b2ct\u4e2a\u90e8\u5206\u7ed3\u675f\uff0c\u5e76\u4e14Alice\u4ece\u672a\u5728\u8def\u5916\u79fb\u52a8\u3002\r\n\u60a8\u5c06\u83b7\u5f97Alice\u7684\u722a\u5370\u63cf\u8ff0\u3002 \u4f60\u7684\u4efb\u52a1\u662f\u901a\u8fc7\u67e5\u770b\u8db3\u8ff9\u627e\u5230\u4e00\u5bf9\u53ef\u80fd\u7684s\uff0cts\uff0ct\u503c\u3002![](https://cdn.luogu.org/upload/vjudge_pic/CF298A/67d5fe232964f55b35f1d37315e4e2b333131dd5.png)"
}