{
    "description": "Let us call a non-empty sequence of lowercase English letters a word. Prefix of a word $ x $ is a word $ y $ that can be obtained from $ x $ by removing zero or more last letters of $ x $ .\n\nLet us call two words similar, if one of them can be obtained from the other by removing its first letter.\n\nYou are given a set $ S $ of words. Find the maximal possible size of set of non-empty words $ X $ such that they satisfy the following:\n\n- each word of $ X $ is prefix of some word from $ S $ ;\n- $ X $ has no similar words.",
    "inputFormat": "Input data contains multiple test cases. The first line of the input data contains an integer $ t $ \u2014 the number of test cases. The descriptions of test cases follow.\n\nThe first line of each description contains an integer $ n $ \u2014 the number of words in the set $ S $ ( $ 1<=n<=10^{6} $ ). Each of the following $ n $ lines contains one non-empty word \u2014 elements of $ S $ . All words in $ S $ are different.\n\nIt is guaranteed that the total length of all words in one input data doesn't exceed $ 10^{6} $ .",
    "outputFormat": "For each test case print one line that contains one integer $ m $ \u2014 the maximal number of words that $ X $ can contain.",
    "samples": [
        [
            "2\n3\naba\nbaba\naaab\n2\naa\na\n",
            "6\n1\n"
        ]
    ],
    "hint": "",
    "translation": "\u3010\u9898\u76ee\u63cf\u8ff0\u3011\r\n\u5355\u8bcd\u662f\u7531\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u7684\u975e\u7a7a\u4e32\u3002\r\n\u82e5\u4e00\u4e2a\u5355\u8bcd\u53bb\u6389\u9996\u5b57\u6bcd\u540e\u4e0e\u53e6\u4e00\u4e2a\u5355\u8bcd\u76f8\u540c\uff0c\u5219\u8fd9\u4e24\u4e2a\u5355\u8bcd\u76f8\u4f3c\u3002\r\n\u73b0\u7ed9\u5b9an\u4e2a\u5355\u8bcd(\u53ef\u80fd\u91cd\u590d)\uff0c\u8bf7\u6311\u9009\u5c3d\u91cf\u591a\u7684\u65b0\u5355\u8bcd\u7ec4\u6210\u96c6\u5408x\u5e76\u6ee1\u8db3\u6761\u4ef6\uff1a\r\n1.\t\u96c6\u5408x\u4e2d\u7684\u65b0\u5355\u8bcd\u4e3a\u539fn\u4e2a\u5355\u8bcd\u7684\u524d\u7f00\uff08\u5305\u542b\u81ea\u8eab\uff09\r\n2.\t\u96c6\u5408x\u4e2d\u7684\u65b0\u5355\u8bcd\u4e24\u4e24\u4e0d\u76f8\u4f3c\u3002\r\n\u8f93\u51fax\u4e2d\u7684\u6700\u5927\u5355\u8bcd\u6570\u3002\r\n\u5171\u6709t\u7ec4\u6570\u636e\r\n\u3010\u8f93\u5165\u683c\u5f0f\u3011 \r\n\u7b2c\u4e00\u884c\u67091\u4e2a\u6574\u6570t\r\n\u63a5\u4e0b\u6765t\u4e2a\u4efb\u52a1\uff0c\u6bcf\u4e2a\u4efb\u52a1\u7b2c\u4e00\u884c\u4e3a\u5355\u8bcd\u6570n\r\n\u63a5\u4e0b\u6765n\u884c\u6bcf\u884c\u8868\u793a\u4e00\u4e2a\u5355\u8bcd\r\n\u3010\u8f93\u51fa\u683c\u5f0f\u3011\r\nt\u884c\u8868\u793at\u4e2a\u4efb\u52a1\u7684\u7b54\u6848\r\n\u3010\u6837\u4f8b\u8f93\u51651\u3011\r\n2\r\n\t3\r\n\taba\r\n\tbaba\r\n\taaab\r\n\t2\r\n\taa\r\n\ta\r\n\u3010\u6837\u4f8b\u8f93\u51fa1\u3011\r\n6\r\n1\r\n\r\n\u3010\u6570\u636e\u8303\u56f4\u3011\r\n\u5bf9\u4e8e20%\u6570\u636e\uff0c1<=n<=20,\u957f\u5ea6\u4e4b\u548c\u4e0d\u8d85\u8fc7100\r\n\u5bf9\u4e8e50%\u6570\u636e\uff0c1<=n<=5000\r\n\u5bf9\u4e8e100%\u6570\u636e\uff0c1<=n<=1000000\r\n\u6570\u636e\u4fdd\u8bc1\u5728\u4e00\u7ec4\u4efb\u52a1\u4e2d\u7684\u6240\u6709\u5355\u8bcd\u957f\u5ea6\u4e4b\u548c\u4e0d\u8d85\u8fc71000000\r\n"
}