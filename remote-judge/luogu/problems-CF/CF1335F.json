{
    "description": "There is a rectangular grid of size $ n \\times m $ . Each cell of the grid is colored black ('0') or white ('1'). The color of the cell $ (i, j) $ is $ c_{i, j} $ . You are also given a map of directions: for each cell, there is a direction $ s_{i, j} $ which is one of the four characters 'U', 'R', 'D' and 'L'.\n\n- If $ s_{i, j} $ is 'U' then there is a transition from the cell $ (i, j) $ to the cell $ (i - 1, j) $ ;\n- if $ s_{i, j} $ is 'R' then there is a transition from the cell $ (i, j) $ to the cell $ (i, j + 1) $ ;\n- if $ s_{i, j} $ is 'D' then there is a transition from the cell $ (i, j) $ to the cell $ (i + 1, j) $ ;\n- if $ s_{i, j} $ is 'L' then there is a transition from the cell $ (i, j) $ to the cell $ (i, j - 1) $ .\n\nIt is guaranteed that the top row doesn't contain characters 'U', the bottom row doesn't contain characters 'D', the leftmost column doesn't contain characters 'L' and the rightmost column doesn't contain characters 'R'.\n\nYou want to place some robots in this field (at most one robot in a cell). The following conditions should be satisfied.\n\n- Firstly, each robot should move every time (i.e. it cannot skip the move). During one move each robot goes to the adjacent cell depending on the current direction.\n- Secondly, you have to place robots in such a way that there is no move before which two different robots occupy the same cell (it also means that you cannot place two robots in the same cell). I.e. if the grid is \"RL\" (one row, two columns, colors does not matter there) then you can place two robots in cells $ (1, 1) $ and $ (1, 2) $ , but if the grid is \"RLL\" then you cannot place robots in cells $ (1, 1) $ and $ (1, 3) $ because during the first second both robots will occupy the cell $ (1, 2) $ .\n\nThe robots make an infinite number of moves.\n\nYour task is to place the maximum number of robots to satisfy all the conditions described above and among all such ways, you have to choose one where the number of black cells occupied by robots before all movements is the maximum possible. Note that you can place robots only before all movements.\n\nYou have to answer $ t $ independent test cases.",
    "inputFormat": "The first line of the input contains one integer $ t $ ( $ 1 \\le t \\le 5 \\cdot 10^4 $ ) \u2014 the number of test cases. Then $ t $ test cases follow.\n\nThe first line of the test case contains two integers $ n $ and $ m $ ( $ 1 < nm \\le 10^6 $ ) \u2014 the number of rows and the number of columns correspondingly.\n\nThe next $ n $ lines contain $ m $ characters each, where the $ j $ -th character of the $ i $ -th line is $ c_{i, j} $ ( $ c_{i, j} $ is either '0' if the cell $ (i, j) $ is black or '1' if the cell $ (i, j) $ is white).\n\nThe next $ n $ lines also contain $ m $ characters each, where the $ j $ -th character of the $ i $ -th line is $ s_{i, j} $ ( $ s_{i, j} $ is 'U', 'R', 'D' or 'L' and describes the direction of the cell $ (i, j) $ ).\n\nIt is guaranteed that the sum of the sizes of fields does not exceed $ 10^6 $ ( $ \\sum nm \\le 10^6 $ ).",
    "outputFormat": "For each test case, print two integers \u2014 the maximum number of robots you can place to satisfy all the conditions described in the problem statement and the maximum number of black cells occupied by robots before all movements if the number of robots placed is maximized. Note that you can place robots only before all movements.",
    "samples": [
        [
            "3\n1 2\n01\nRL\n3 3\n001\n101\n110\nRLL\nDLD\nULL\n3 3\n000\n000\n000\nRRD\nRLD\nULL",
            "2 1\n4 3\n2 2"
        ]
    ],
    "hint": "",
    "translation": "\u7ed9\u51fa\u4e00\u4e2a $n\\times m$ \u7684\u7f51\u683c\uff0c\u6bcf\u4e2a\u683c\u5b50\u88ab\u67d3\u6210\u9ed1\u8272\u6216\u767d\u8272\uff0c\u5e76\u4e14\u5728\u6bcf\u4e2a\u683c\u5b50\u4e0a\u90fd\u6709\u4e00\u4e2a\u65b9\u5411\u3002\u5728\u4e00\u4e9b\u683c\u5b50\u4e2d\u653e\u7f6e\u673a\u5668\u4eba\uff0c\u5219\u6bcf\u4e2a\u65f6\u523b\u673a\u5668\u4eba\u4f1a\u6309\u7167\u5f53\u524d\u683c\u5b50\u7684\u65b9\u5411\u884c\u8d70\u4e00\u6b65\u3002\u6ce8\u610f\uff1a\u4e24\u4e2a\u673a\u5668\u4eba\u4e0d\u80fd\u540c\u65f6\u8d70\u5230\u4e00\u4e2a\u683c\u5b50\u91cc\u3002\r\n\u8bf7\u4f60\u5bfb\u627e\u4e00\u4e2a\u5408\u9002\u7684\u653e\u7f6e\u65b9\u6848\uff0c\u4f7f\u5f97\u673a\u5668\u4eba\u6570\u91cf\u548c\u673a\u5668\u4eba\u5360\u636e\u7684\u9ed1\u683c\u6570\u91cf\u5747\u6700\u591a\u3002"
}