{
    "description": "The Human-Cow Confederation ( $ HC^{2} $ ), led by Heidi, has built a base where people and cows can hide, guarded from zombie attacks. The entrance to the base is protected by an automated gate which performs a kind of a Turing test: it shows the entering creature a photograph and asks them whether the top and bottom halves of this photograph have been swapped or not. A person (or even a cow) will have no problem answering such questions; on the other hand, a zombie would just randomly smash one of the two buttons.\n\nThe creature is asked a series of such questions. If at least $ 75% $ of them are answered correctly, the gate is unlocked; otherwise, a side door opens, beneath which a huge fan is spinning...\n\nHeidi is now building a robot army to fight the zombies, and she wants the robots to also be able to enter the base. You are tasked with programming them to distinguish the images.\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF690E1/5049ba9bbfc4129520c0662372ea952b95839547.png)The first two images from the test set. The first picture has been rearranged, but not the second.",
    "inputFormat": "The first line of the input contains the number $ q $ of questions ( $ 1<=q<=220 $ ). After that, $ q $ questions follow, each of which in the format described below.\n\nThe first line of every question contains two space-separated integers $ h $ and $ w $ ( $ 1<=h,w<=600 $ ) \u2013 the height (number of rows) and width (number of columns) of the photograph. (Most photographs are roughly $ 200\u00d7300 $ .) After this, $ h $ lines follow, each describing a single row of the picture. The picture is monochrome (in shades of grey). Its $ i $ -th row is described by $ w $ space-separated integers $ a_{ij} $ ( $ j=1,...,w $ ), where $ a_{ij} $ is the brightness of the corresponding pixel ( $ 0<=a_{ij}<256 $ , where $ 0 $ is black and $ 255 $ is white).\n\nEach picture will be either a real-life photograph, or a real-life photograph which has been broken up into two pieces and rearranged. More precisely, in the latter case, the topmost ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF690E1/568e61a98a42ddbec25913a1d27f1db5aeb559a8.png) rows have been moved to the bottom of the picture. It is guaranteed that $ h $ is even.\n\nThere is only a single input file to be processed, called all.in, and it is downloadable from the online judge. You are also a given another input file, called sample.in, which contains the first $ 20 $ pictures from all.in; you are provided the correct answers for sample.in in sample.out. You are also given a directory easy\\_bmp, which contains the first 50 input photographs in the form of .bmp image files, as well as a directory easy\\_sample\\_original\\_bmp, which contains the first $ 20 $ images before rearrangement. Check the notes for the download links.",
    "outputFormat": "",
    "samples": [],
    "hint": "The link to download all necessary files is http://assets.codeforces.com/files/690/easy\\_contestant\\_package.zip",
    "translation": "### **ps:\u56e0\u6d1b\u8c37\u4e0a\u7684\u9898\u76ee\u6ca1\u6709\u8f93\u51fa\u683c\u5f0f\u548c\u6837\u4f8b\uff0c\u6240\u4ee5\u6709\u90e8\u5206\u7ffb\u8bd1\u539f\u6587\u53c2\u8003\u5b98\u7f51**\n\n## \u9898\u76ee\u63cf\u8ff0\nHeidi \u7ec4\u5efa\u7684\u4eba\u725b\u8054\u76df\u5efa\u9020\u4e86\u4e00\u4e2a\u9632\u6b62\u50f5\u5c38\u653b\u51fb\u7684\u57fa\u5730, \u57fa\u5730\u7684\u5165\u53e3\u6709\u4e00\u4e2a\u5b89\u5168\u95e8, \u8fd9\u4e2a\u95e8\u6267\u884c\u4e00\u79cd\u6d4b\u8bd5, \u5b83\u4f1a\u5411\u8fdb\u5165\u7684\u4eba (\u725b\u3001\u50f5\u5c38) \u5c55\u793a\u4e00\u5f20\u7167\u7247\uff0c\u5e76\u5bf9\u4eba (\u725b\u3001\u50f5\u5c38) \u8be2\u95ee\u8fd9\u5f20\u7167\u7247\u7684\u4e0a\u534a\u90e8\u5206\u548c\u4e0b\u534a\u90e8\u5206\u662f\u5426\u88ab\u4ea4\u6362\u3002\u4eba\uff08\u725b\uff09\u4f1a\u8ba4\u771f\u56de\u7b54\u8fd9\u6837\u7684\u95ee\u9898\uff1b \u800c\u50f5\u5c38\u4f1a\u968f\u4fbf\u6309\u4e0b\u4e24\u4e2a\u6309\u94ae\u4e2d\u7684\u4e00\u4e2a\u3002\u4eba (\u725b\u3001\u50f5\u5c38) \u4f1a\u88ab\u8be2\u95ee\u6570\u6b21, \u5982\u679c\u6b63\u786e\u7684\u6570\u91cf\u8fbe\u5230\u6216\u8d85\u8fc7 $75$ \u4e2a \uff0c\u5219\u901a\u5411\u57fa\u5730\u7684\u95e8\u6253\u5f00, \u5426\u5219\uff0c\u901a\u5411\u6b7b\u4ea1\u7684\u95e8\u6253\u5f00\u3002\n\nHeidi \u6b63\u5728\u7ec4\u5efa\u80fd\u6d88\u706d\u50f5\u5c38\u7684\u673a\u5668\u4eba\u519b\u961f, \u5979\u5e0c\u671b\u4f60\u80fd\u5e2e\u5979\u5b8c\u6210\u673a\u5668\u4eba\u533a\u5206\u56fe\u50cf\u7684\u529f\u80fd\u3002\n\n![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF690E1/5049ba9bbfc4129520c0662372ea952b95839547.png)\n\n\u8fd9\u662f\u6d4b\u8bd5\u6240\u7528\u7684\u56fe\u7247\u96c6\u7684\u524d\u4e24\u5f20\uff0c\u7b2c\u4e00\u5f20\u7684\u4e0a\u4e0b\u4ea4\u6362\u8fc7\uff0c\u4f46\u7b2c\u4e8c\u5f20\u5e76\u6ca1\u6709\u3002\n\n## \u8f93\u5165\u683c\u5f0f\n\n\u8f93\u5165\u7b2c\u4e00\u884c\u4e3a\u95ee\u9898\u6570\u91cf $q$ ($1 <= q <= 220$)\n\n\u6bcf\u4e2a\u95ee\u9898\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u4ee5\u7a7a\u683c\u5206\u9694\u7684\u6574\u6570 $h$ \u548c $w$ ($1<=h,w<=600$) \u7684\u9ad8\u5ea6 (\u884c\u6570) \u548c\u5bbd\u5ea6 (\u5217\u6570) \u7167\u7247\u3002(\u591a\u6570\u7167\u7247\u5927\u7ea6\u4e3a $200\u00d7300$) \u5728\u6b64\u4e4b\u540e\u7684 $h$ \u884c\uff0c\u6bcf\u884c\u4e3a\u56fe\u7247\u7684\u4e00\u884c (\u56fe\u7247\u662f\u9ed1\u767d\u7167\u7247)\u3002\u7b2c $i$ \u884c\u7531 $w$ \u7a7a\u683c\u5206\u9694\u7684\u6574\u6570 $a_{ij}$ \u8868\u793a ($j=1, 2, ..., w$) , \u5176\u4e2d $a_{ij}$ \u6b64\u5904\u7684\u4eae\u5ea6\u3002 ($0<=a_{ij}<256$} (0\u4e3a\u9ed1\u8272\uff0c255\u4e3a\u767d\u8272)\n\n\u6bcf\u5f20\u7167\u7247\u8981\u4e48\u662f\u771f\u5b9e\u7167\u7247\uff0c\u8981\u4e48\u662f\u88ab\u5904\u7406\u8fc7\u7684\u7167\u7247\u3002\u51c6\u786e\u5730\u8bf4\uff0c\u5728\u540e\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e0a\u534a\u90e8\u5206\u7684\u56fe\u7247\u79fb\u52a8\u5230\u56fe\u7247\u7684\u5e95\u90e8\u3002\n\n\u4fdd\u8bc1 $h$ \u662f\u5076\u6570\u3002\n\n\u53ea\u6709\u4e00\u4e2a\u8f93\u5165\u6587\u4ef6\u9700\u8981\u5904\u7406\uff0c\u6587\u4ef6\u540d\u4e3a all.in\uff0c\u53ef\u4ece\u5728\u7ebf\u4e0b\u8f7d\u3002\u4f60\u8fd8\u6709\u53e6\u4e00\u4e2a\u7ed9\u5b9a\u7684\u8f93\u5165\u6587\u4ef6\uff0c\u6587\u4ef6\u540d\u4e3a sample.in\uff0c\u5176\u4e2d\u5305\u542b all.in \u7684\u524d 2020 \u5f20\u56fe\u7247\uff1b\u5728 sample.out \u4e2d\u63d0\u4f9b\u4e86 sample.in \u7684\u6b63\u786e\u7b54\u6848\u3002\u4f60\u8fd8\u5c06\u83b7\u5f97\u4e00\u4e2a\u76ee\u5f55 easy_bmp\uff0c\u5176\u4e2d\u5305\u542b .bmp \u683c\u5f0f\u7684\u524d 50 \u5f20\u8f93\u5165\u7167\u7247\uff0c\u4ee5\u53ca\u53e6\u4e00\u4e2a\u76ee\u5f55 easy_sample_original_bmp\uff0c\u5176\u4e2d\u5305\u542b\u91cd\u65b0\u6392\u5217\u4e4b\u524d\u7684\u524d 2020 \u5f20\u56fe\u50cf\u3002\n\n## \u8f93\u51fa\u683c\u5f0f\n\n\u8f93\u51fa $q$ \u884c\u3002 \u7b2c $i$ \u884c\u5e94\u5305\u542b\u5bf9\u7b2c $i$ \u4e2a\u95ee\u9898\u7684\u56de\u7b54\uff1a\u5982\u679c\u7167\u7247\u88ab\u5904\u7406\u8fc7\uff0c\u5219\u4e3a\u201c\u662f\u201d\uff0c\u5426\u5219\u4e3a\u201c\u5426\u201d\u3002 \u5982\u679c\u7b54\u6848\u90fd\u7b26\u5408\u6b64\u683c\u5f0f\u5e76\u4e14\u81f3\u5c11\u6709 $75\\%$ \u662f\u6b63\u786e\u7684\uff0c\u90a3\u4e48\u4f60\u7684\u7b54\u6848\u5c06\u4f1a\u5224\u4e3a\u6b63\u786e\n\n\u56e0\u4e3a\u8f93\u5165\u5f88\u5927\uff0c\u6240\u4ee5\u8bf7\u5728\u672c\u5730\u5904\u7406\u5b83\u5e76\u53ea\u63d0\u4ea4\u4f60\u9884\u5148\u8ba1\u7b97\u7684\u7b54\u6848\uff08\u5373\uff0c\u4e00\u4e2a\u53ea\u6253\u5370\u8f93\u51fa\u7684\u7a0b\u5e8f\uff09\u3002\n\n## \u8f93\u5165\u8f93\u51fa\u6837\u4f8b\n\u65e0\n\n### \u8bf4\u660e/\u63d0\u793a\n[\u4e0b\u8f7d\u94fe\u63a5](http://assets.codeforces.com/files/690/easy_contestant_package.zip)"
}