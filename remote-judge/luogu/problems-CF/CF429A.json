{
    "description": "Iahub is very proud of his recent discovery, propagating trees. Right now, he invented a new tree, called xor-tree. After this new revolutionary discovery, he invented a game for kids which uses xor-trees.\n\nThe game is played on a tree having $ n $ nodes, numbered from $ 1 $ to $ n $ . Each node $ i $ has an initial value $ init_{i} $ , which is either 0 or 1. The root of the tree is node 1.\n\nOne can perform several (possibly, zero) operations on the tree during the game. The only available type of operation is to pick a node $ x $ . Right after someone has picked node $ x $ , the value of node $ x $ flips, the values of sons of $ x $ remain the same, the values of sons of sons of $ x $ flips, the values of sons of sons of sons of $ x $ remain the same and so on.\n\nThe goal of the game is to get each node $ i $ to have value $ goal_{i} $ , which can also be only 0 or 1. You need to reach the goal of the game by using minimum number of operations.",
    "inputFormat": "The first line contains an integer $ n $ ( $ 1<=n<=10^{5} $ ). Each of the next $ n-1 $ lines contains two integers $ u_{i} $ and $ v_{i} $ ( $ 1<=u_{i},v_{i}<=n $ ; $ u_{i}\u2260v_{i} $ ) meaning there is an edge between nodes $ u_{i} $ and $ v_{i} $ .\n\nThe next line contains $ n $ integer numbers, the $ i $ -th of them corresponds to $ init_{i} $ ( $ init_{i} $ is either 0 or 1). The following line also contains $ n $ integer numbers, the $ i $ -th number corresponds to $ goal_{i} $ ( $ goal_{i} $ is either 0 or 1).",
    "outputFormat": "In the first line output an integer number $ cnt $ , representing the minimal number of operations you perform. Each of the next $ cnt $ lines should contain an integer $ x_{i} $ , representing that you pick a node $ x_{i} $ .",
    "samples": [
        [
            "10\n2 1\n3 1\n4 2\n5 1\n6 2\n7 5\n8 6\n9 8\n10 5\n1 0 1 1 0 1 0 1 0 1\n1 0 1 0 0 1 1 1 0 1\n",
            "2\n4\n7\n"
        ]
    ],
    "hint": "",
    "translation": "lahub\u53d1\u660e\u4e86\u4e00\u79cd\u5f02\u6216\u6811\uff0c\u5e76\u53d1\u660e\u4e86\u4e00\u4e2a\u4f7f\u7528\u5f02\u6216\u6811\u7684\u6e38\u620f\u3002  \n\u6e38\u620f\u5728\u4e00\u68f5\u6709$N$\u4e2a\u8282\u70b9\u3001\u6839\u8282\u70b9\u4e3a$1$\u7684\u6811\u4e0a\u8fdb\u884c\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u521d\u59cb\u503c\u4e3a$0$\u6216$1$\u3002  \n\u5b9a\u4e49\u6e38\u620f\u4e2d\u7684\u4e00\u6b21\u64cd\u4f5c:  \n- \u9009\u62e9\u4e00\u4e2a\u8282\u70b9$x$\n- $x$\u7684\u503c\u7ffb\u8f6c\uff0c$x$\u7684\u513f\u5b50\u7684\u503c\u4e0d\u7ffb\u8f6c\uff0c$x$\u7684\u5b59\u5b50\u7684\u503c\u7ffb\u8f6c\uff0c$x$\u7684\u5b59\u5b50\u7684\u513f\u5b50\u4e0d\u7ffb\u8f6c\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 \n\n\u6e38\u620f\u5b58\u5728\u4e00\u4e2a\u76ee\u6807\u503c\uff0c\u95ee\u6700\u5c11\u591a\u5c11\u6b21\u64cd\u4f5c\u80fd\u4f7f\u6811\u4e2d\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u90fd\u7b49\u4e8e\u76ee\u6807\u503c\u3002\n\n\u8f93\u51fa\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\u548c\u64cd\u4f5c\u65b9\u6848\u3002"
}