{
    "description": "The Smart Beaver has recently designed and built an innovative nanotechnologic all-purpose beaver mass shaving machine, \"Beavershave 5000\". Beavershave 5000 can shave beavers by families! How does it work? Very easily!\n\nThere are $ n $ beavers, each of them has a unique id from 1 to $ n $ . Consider a permutation $ a_{1},a_{2},...,a_{n} $ of $ n $ these beavers. Beavershave 5000 needs one session to shave beavers with ids from $ x $ to $ y $ (inclusive) if and only if there are such indices $ i_{1}<i_{2}<...<i_{k} $ , that $ a_{i1}=x $ , $ a_{i2}=x+1 $ , ..., $ a_{ik-1}=y-1 $ , $ a_{ik}=y $ . And that is really convenient. For example, it needs one session to shave a permutation of beavers $ 1,2,3,...,n $ .\n\nIf we can't shave beavers from $ x $ to $ y $ in one session, then we can split these beavers into groups $ [x,p_{1}] $ , $ [p_{1}+1,p_{2}] $ , ..., $ [p_{m}+1,y] $ $ (x<=p_{1}<p_{2}<...<p_{m}<y) $ , in such a way that the machine can shave beavers in each group in one session. But then Beavershave 5000 needs $ m+1 $ working sessions to shave beavers from $ x $ to $ y $ .\n\nAll beavers are restless and they keep trying to swap. So if we consider the problem more formally, we can consider queries of two types:\n\n- what is the minimum number of sessions that Beavershave 5000 needs to shave beavers with ids from $ x $ to $ y $ , inclusive?\n- two beavers on positions $ x $ and $ y $ (the beavers $ a_{x} $ and $ a_{y} $ ) swapped.\n\nYou can assume that any beaver can be shaved any number of times.",
    "inputFormat": "The first line contains integer $ n $ \u2014 the total number of beavers, $ 2<=n $ . The second line contains $ n $ space-separated integers \u2014 the initial beaver permutation.\n\nThe third line contains integer $ q $ \u2014 the number of queries, $ 1<=q<=10^{5} $ . The next $ q $ lines contain the queries. Each query $ i $ looks as $ p_{i} $ $ x_{i} $ $ y_{i} $ , where $ p_{i} $ is the query type ( $ 1 $ is to shave beavers from $ x_{i} $ to $ y_{i} $ , inclusive, $ 2 $ is to swap beavers on positions $ x_{i} $ and $ y_{i} $ ). All queries meet the condition: $ 1<=x_{i}<y_{i}<=n $ .\n\n- to get 30 points, you need to solve the problem with constraints: $ n<=100 $ (subproblem B1);\n- to get 100 points, you need to solve the problem with constraints: $ n<=3\u00b710^{5} $ (subproblems B1+B2).\n\nNote that the number of queries $ q $ is limited $ 1<=q<=10^{5} $ in both subproblem B1 and subproblem B2.",
    "outputFormat": "For each query with $ p_{i}=1 $ , print the minimum number of Beavershave 5000 sessions.",
    "samples": [
        [
            "5\n1 3 4 2 5\n6\n1 1 5\n1 3 4\n2 2 3\n1 1 5\n2 1 5\n1 1 5\n",
            "2\n1\n3\n5\n"
        ]
    ],
    "hint": "",
    "translation": "\u7ed9\u51fa\u4e00\u4e2a1~n\u7684\u6392\u5217a \uff0cQ\u6b21\u64cd\u4f5c\r\n\r\n\r\n\u64cd\u4f5c1\uff1a\u67e5\u8be2\u6570\u5b57x\u5230\u6570\u5b57y\u6709\u591a\u5c11\u8fde\u7eed\u4e0a\u5347\u5b50\u5e8f\u5217\r\n\r\n\r\n\u64cd\u4f5c2\uff1a\u4ea4\u6362a[x],a[y]\r\n\r\n\r\nn<=30W,Q<=10W"
}