{
    "description": "Suppose you are performing the following algorithm. There is an array $ v_1, v_2, \\dots, v_n $ filled with zeroes at start. The following operation is applied to the array several times \u2014 at $ i $ -th step ( $ 0 $ -indexed) you can:\n\n- either choose position $ pos $ ( $ 1 \\le pos \\le n $ ) and increase $ v_{pos} $ by $ k^i $ ;\n- or not choose any position and skip this step.\n\nYou can choose how the algorithm would behave on each step and when to stop it. The question is: can you make array $ v $ equal to the given array $ a $ ( $ v_j = a_j $ for each $ j $ ) after some step?",
    "inputFormat": "The first line contains one integer $ T $ ( $ 1 \\le T \\le 1000 $ ) \u2014 the number of test cases. Next $ 2T $ lines contain test cases \u2014 two lines per test case.\n\nThe first line of each test case contains two integers $ n $ and $ k $ ( $ 1 \\le n \\le 30 $ , $ 2 \\le k \\le 100 $ ) \u2014 the size of arrays $ v $ and $ a $ and value $ k $ used in the algorithm.\n\nThe second line contains $ n $ integers $ a_1, a_2, \\dots, a_n $ ( $ 0 \\le a_i \\le 10^{16} $ ) \u2014 the array you'd like to achieve.",
    "outputFormat": "For each test case print YES (case insensitive) if you can achieve the array $ a $ after some step or NO (case insensitive) otherwise.",
    "samples": [
        [
            "5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810",
            "YES\nYES\nNO\nNO\nYES"
        ]
    ],
    "hint": "In the first test case, you can stop the algorithm before the $ 0 $ -th step, or don't choose any position several times and stop the algorithm.\n\nIn the second test case, you can add $ k^0 $ to $ v_1 $ and stop the algorithm.\n\nIn the third test case, you can't make two $ 1 $ in the array $ v $ .\n\nIn the fifth test case, you can skip $ 9^0 $ and $ 9^1 $ , then add $ 9^2 $ and $ 9^3 $ to $ v_3 $ , skip $ 9^4 $ and finally, add $ 9^5 $ to $ v_2 $ .",
    "translation": "$\\qquad$\u80fd\u5426\u5bf9\u4e00\u4e2a\u6570\u7ec4\u6267\u884c\u4efb\u610f\u6b21\u64cd\u4f5c\uff0c\u4f7f\u5f97\u5176\u53d8\u4e3a\u76ee\u6807\u6570\u7ec4\u3002\r\n\r\n$\\qquad$\u5bf9\u4e8e\u7b2c$i$\u6b21\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u653e\u5f03\uff0c\u6216\u7ed9\u6570\u7ec4\u4e2d\u4efb\u610f\u4e00\u4e2a\u5143\u7d20\u52a0\u4e0a$k^i$\u3002\r\n\r\nn<=30,k<=100,\u76ee\u6807\u6570\u7ec4\u5143\u7d20<=$10^{16}$"
}