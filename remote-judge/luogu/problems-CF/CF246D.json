{
    "description": "You've got an undirected graph, consisting of $ n $ vertices and $ m $ edges. We will consider the graph's vertices numbered with integers from 1 to $ n $ . Each vertex of the graph has a color. The color of the $ i $ -th vertex is an integer $ c_{i} $ .\n\nLet's consider all vertices of the graph, that are painted some color $ k $ . Let's denote a set of such as $ V(k) $ . Let's denote the value of the neighbouring color diversity for color $ k $ as the cardinality of the set $ Q(k)={c_{u}\u00a0:\u00a0c_{u}\u2260k $ and there is vertex $ v $ belonging to set $ V(k) $ such that nodes $ v $ and $ u $ are connected by an edge of the graph $ } $ .\n\nYour task is to find such color $ k $ , which makes the cardinality of set $ Q(k) $ maximum. In other words, you want to find the color that has the most diverse neighbours. Please note, that you want to find such color $ k $ , that the graph has at least one vertex with such color.",
    "inputFormat": "The first line contains two space-separated integers $ n,m $ $ (1<=n,m<=10^{5}) $ \u2014 the number of vertices end edges of the graph, correspondingly. The second line contains a sequence of integers $ c_{1},c_{2},...,c_{n} $ $ (1<=c_{i}<=10^{5}) $ \u2014 the colors of the graph vertices. The numbers on the line are separated by spaces.\n\nNext $ m $ lines contain the description of the edges: the $ i $ -th line contains two space-separated integers $ a_{i},b_{i} $ $ (1<=a_{i},b_{i}<=n;\u00a0a_{i}\u2260b_{i}) $ \u2014 the numbers of the vertices, connected by the $ i $ -th edge.\n\nIt is guaranteed that the given graph has no self-loops or multiple edges.",
    "outputFormat": "Print the number of the color which has the set of neighbours with the maximum cardinality. It there are multiple optimal colors, print the color with the minimum number. Please note, that you want to find such color, that the graph has at least one vertex with such color.",
    "samples": [
        [
            "6 6\n1 1 2 3 5 8\n1 2\n3 2\n1 4\n4 3\n4 5\n4 6\n",
            "3\n"
        ],
        [
            "5 6\n4 2 5 2 4\n1 2\n2 3\n3 1\n5 3\n5 4\n3 4\n",
            "2\n"
        ]
    ],
    "hint": "",
    "translation": "\u6709N\u4e2a\u70b9\uff0c\u6bcf\u4e2a\u9876\u70b9\u5bf9\u5e94\u4e00\u79cd\u989c\u8272\uff0c\u53ef\u4ee5\u76f8\u540c\u3002\u7ed9\u51fa\u8fde\u63a5\u8fd9\u4e9b\u9876\u70b9\u7684M\u8fb9\uff0c\u5b9a\u4e49Q\uff08k\uff09\u662f\u6240\u6709\u989c\u8272\u4e3ak\u7684\u6240\u6709\u9876\u70b9\u76f8\u8fde\u7684\u4e0d\u540c\u7684\u989c\u8272\u7684\u603b\u6570\u91cf\uff08\u4e0d\u5305\u542bk\uff09\uff0c\u6c42\u4f7f\u5f97Q\uff08k\uff09\u6700\u5927\u65f6\u7684k\u7684\u503c\uff0c\u5982\u679c\u6709\u591a\u4e2ak \u503c\u6ee1\u8db3\uff0c\u8f93\u51fa\u6700\u5c0f\u7684k\u503c\n\n\u611f\u8c22@Ricardo_Ni \u63d0\u4f9b\u7684\u7ffb\u8bd1"
}