{
    "description": "It is Borya's eleventh birthday, and he has got a great present: $ n $ cards with numbers. The $ i $ -th card has the number $ a_{i} $ written on it. Borya wants to put his cards in a row to get one greater number. For example, if Borya has cards with numbers $ 1 $ , $ 31 $ , and $ 12 $ , and he puts them in a row in this order, he would get a number $ 13112 $ .\n\nHe is only 11, but he already knows that there are $ n! $ ways to put his cards in a row. But today is a special day, so he is only interested in such ways that the resulting big number is divisible by eleven. So, the way from the previous paragraph is good, because $ 13112=1192\u00d711 $ , but if he puts the cards in the following order: $ 31 $ , $ 1 $ , $ 12 $ , he would get a number $ 31112 $ , it is not divisible by $ 11 $ , so this way is not good for Borya. Help Borya to find out how many good ways to put the cards are there.\n\nBorya considers all cards different, even if some of them contain the same number. For example, if Borya has two cards with 1 on it, there are two good ways.\n\nHelp Borya, find the number of good ways to put the cards. This number can be large, so output it modulo $ 998244353 $ .",
    "inputFormat": "Input data contains multiple test cases. The first line of the input data contains an integer $ t $ \u2014 the number of test cases ( $ 1<=t<=100 $ ). The descriptions of test cases follow.\n\nEach test is described by two lines.\n\nThe first line contains an integer $ n $ ( $ 1<=n<=2000 $ ) \u2014 the number of cards in Borya's present.\n\nThe second line contains $ n $ integers $ a_{i} $ ( $ 1<=a_{i}<=10^{9} $ ) \u2014 numbers written on the cards.\n\nIt is guaranteed that the total number of cards in all tests of one input data doesn't exceed $ 2000 $ .",
    "outputFormat": "For each test case output one line: the number of ways to put the cards to the table so that the resulting big number was divisible by 11, print the number modulo $ 998244353 $ .",
    "samples": [
        [
            "4\n2\n1 1\n3\n1 31 12\n3\n12345 67 84\n9\n1 2 3 4 5 6 7 8 9\n",
            "2\n2\n2\n31680\n"
        ]
    ],
    "hint": "",
    "translation": "\u672c\u9898\u662f\u591a\u7ec4\u6570\u636e\n\n\u5bf9\u4e8e\u6bcf\u7ec4\u6570\u636e\uff0c\u7ed9\u51fan\u4e2a\u6570\u5b57\uff0c\u6c42\u6709\u591a\u5c11\u79cd\u6392\u5217\u65b9\u5f0f\uff0c\u4f7f\u5f97\u6392\u5217\u540e\u7684n\u4e2a\u6570\u5b57\u9996\u5c3e\u76f8\u63a5\u5f62\u6210\u7684\u6570\u5b57\u80fd\u88ab11\u6574\u9664\u3002\u7b54\u6848\u5bf9998244353\u53d6\u6a21\n\n\u611f\u8c22@ObsdianGungnir   \u63d0\u4f9b\u7684\u7ffb\u8bd1\u3002"
}