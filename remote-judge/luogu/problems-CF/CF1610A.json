{
    "description": "You are playing a game on a $ n \\times m $ grid, in which the computer has selected some cell $ (x, y) $ of the grid, and you have to determine which one.\n\nTo do so, you will choose some $ k $ and some $ k $ cells $ (x_1, y_1),\\, (x_2, y_2), \\ldots, (x_k, y_k) $ , and give them to the computer. In response, you will get $ k $ numbers $ b_1,\\, b_2, \\ldots b_k $ , where $ b_i $ is the manhattan distance from $ (x_i, y_i) $ to the hidden cell $ (x, y) $ (so you know which distance corresponds to which of $ k $ input cells).\n\nAfter receiving these $ b_1,\\, b_2, \\ldots, b_k $ , you have to be able to determine the hidden cell. What is the smallest $ k $ for which is it possible to always guess the hidden cell correctly, no matter what cell computer chooses?\n\nAs a reminder, the manhattan distance between cells $ (a_1, b_1) $ and $ (a_2, b_2) $ is equal to $ |a_1-a_2|+|b_1-b_2| $ .",
    "inputFormat": "The first line of the input contains a single integer $ t $ ( $ 1 \\le t \\le 10^4 $ ) \u2014 the number of test cases. The description of test cases follows.\n\nThe single line of each test case contains two integers $ n $ and $ m $ ( $ 1 \\le n, m \\le 10^9 $ ) \u2014 the number of rows and the number of columns in the grid.",
    "outputFormat": "For each test case print a single integer \u2014 the minimum $ k $ for that test case.",
    "samples": [
        [
            "2\n2 3\n3 1",
            "2\n1"
        ]
    ],
    "hint": "In the first test case, the smallest such $ k $ is $ 2 $ , for which you can choose, for example, cells $ (1, 1) $ and $ (2, 1) $ .\n\nNote that you can't choose cells $ (1, 1) $ and $ (2, 3) $ for $ k = 2 $ , as both cells $ (1, 2) $ and $ (2, 1) $ would give $ b_1 = 1, b_2 = 2 $ , so we wouldn't be able to determine which cell is hidden if computer selects one of those.\n\nIn the second test case, you should choose $ k = 1 $ , for it you can choose cell $ (3, 1) $ or $ (1, 1) $ .",
    "translation": "\u84dd\u9080\u8bf7\u4f60\u548c\u5979\u73a9\u4e00\u4e2a\u6e38\u620f\uff1a\n\n\u6709\u4e00\u4e2a $n\\times m$ \u7684\u7f51\u683c\u3002\u5979\u5728\u5fc3\u91cc\u60f3\u4e86\u7f51\u683c\u4e2d\u7684\u4e00\u4e2a\u5750\u6807 $(x,y)$\u3002\n\n\u4e3a\u4e86\u731c\u51fa\u5750\u6807 $(x,y)$\uff0c\u4f60\u53ef\u4ee5\u9009\u51fa $k$ \u4e2a\u5750\u6807 $(x_1,y_1),(x_2,y_2),\\dots,(x_k,y_k)$\uff0c\u7136\u540e\u84dd\u4f1a\u7b97\u51fa\u5e76\u544a\u8bc9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a $k$ \u7684\u6570\u7ec4 $b$\uff0c\u6ee1\u8db3 $b_i=|x-x_i|+|y-y_i|$\u3002\n\n\u73b0\u5728\u4f60\u5bf9\u4e8e $k$ \u7684\u6700\u5c0f\u503c\u5f88\u611f\u5174\u8da3\u3002\u5bf9\u4e8e\u7ed9\u51fa\u7684 $n,m$\uff0c\u8bd5\u7740\u6c42\u51fa\u6700\u5c0f\u7684 $k$\uff0c\u4f7f\u5f97\u5b58\u5728\u4e00\u79cd\u9009\u51fa $k$ \u4e2a\u5750\u6807\u7684\u65b9\u6848\uff0c\u4f7f\u5f97\u65e0\u8bba\u84dd\u5fc3\u4e2d\u60f3\u7684 $(x,y)$ \u662f\u4ec0\u4e48\u6837\u7684\uff0c\u4f60\u90fd\u80fd\u5c06\u5176\u731c\u51fa\u3002\n\n\u672c\u9898\u591a\u7ec4\u6570\u636e\uff0c\u6570\u636e\u7ec4\u6570\u4e3a $t$\uff0c\u4f1a\u5728\u8f93\u5165\u7684\u5f00\u5934\u7ed9\u51fa\u3002\u5bf9\u4e8e\u6bcf\u7ec4\u6570\u636e\uff0c\u84dd\u4f1a\u4f9d\u6b21\u544a\u8bc9\u4f60 $n$ \u548c $m$\u3002\u4f60\u9700\u8981\u8f93\u51fa\u6700\u5c0f\u7684 $k$\u3002\n\n\u9898\u76ee\u6570\u636e\u6ee1\u8db3\uff1a$1 \\leq t \\leq 10^4$\uff0c$1 \\leq n,m \\leq 10^9$\u3002"
}