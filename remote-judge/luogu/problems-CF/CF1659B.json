{
    "description": "You are given a binary string of length $ n $ . You have exactly $ k $ moves. In one move, you must select a single bit. The state of all bits except that bit will get flipped ( $ 0 $ becomes $ 1 $ , $ 1 $ becomes $ 0 $ ). You need to output the lexicographically largest string that you can get after using all $ k $ moves. Also, output the number of times you will select each bit. If there are multiple ways to do this, you may output any of them.\n\nA binary string $ a $ is lexicographically larger than a binary string $ b $ of the same length, if and only if the following holds:\n\n- in the first position where $ a $ and $ b $ differ, the string $ a $ contains a $ 1 $ , and the string $ b $ contains a $ 0 $ .",
    "inputFormat": "The first line contains a single integer $ t $ ( $ 1 \\le t \\le 1000 $ ) \u2014 the number of test cases.\n\nEach test case has two lines. The first line has two integers $ n $ and $ k $ ( $ 1 \\leq n \\leq 2 \\cdot 10^5 $ ; $ 0 \\leq k \\leq 10^9 $ ).\n\nThe second line has a binary string of length $ n $ , each character is either $ 0 $ or $ 1 $ .\n\nThe sum of $ n $ over all test cases does not exceed $ 2 \\cdot 10^5 $ .",
    "outputFormat": "For each test case, output two lines.\n\nThe first line should contain the lexicographically largest string you can obtain.\n\nThe second line should contain $ n $ integers $ f_1, f_2, \\ldots, f_n $ , where $ f_i $ is the number of times the $ i $ -th bit is selected. The sum of all the integers must be equal to $ k $ .",
    "samples": [
        [
            "6\n6 3\n100001\n6 4\n100011\n6 0\n000000\n6 1\n111001\n6 11\n101100\n6 12\n001110",
            "111110\n1 0 0 2 0 0 \n111110\n0 1 1 1 0 1 \n000000\n0 0 0 0 0 0 \n100110\n1 0 0 0 0 0 \n111111\n1 2 1 3 0 4 \n111110\n1 1 4 2 0 4"
        ]
    ],
    "hint": "Here is the explanation for the first testcase. Each step shows how the binary string changes in a move.\n\n- Choose bit $ 1 $ : $ \\color{red}{\\underline{1}00001} \\rightarrow \\color{red}{\\underline{1}}\\color{blue}{11110} $ .\n- Choose bit $ 4 $ : $ \\color{red}{111\\underline{1}10} \\rightarrow \\color{blue}{000}\\color{red}{\\underline{1}}\\color{blue}{01} $ .\n- Choose bit $ 4 $ : $ \\color{red}{000\\underline{1}01} \\rightarrow \\color{blue}{111}\\color{red}{\\underline{1}}\\color{blue}{10} $ .\n\n The final string is $ 111110 $ and this is the lexicographically largest string we can get.",
    "translation": "### \u9898\u76ee\u63cf\u8ff0\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u4e3a $n$ \u7684 01 \u4e32\uff0c\u4f60\u53ef\u4ee5\u8fdb\u884c $k$ \u6b21\u64cd\u4f5c\u3002\u6bcf\u6b21\u64cd\u4f5c\u4e2d\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u4efb\u610f\u4e00\u4f4d\uff0c\u5e76\u5c06\u9664\u4e86\u8fd9\u4e00\u4f4d\u4ee5\u5916\u7684\u5176\u5b83\u4f4d\u7ffb\u8f6c\uff081 \u53d8 0,0 \u53d8 1\uff09\uff0c\u8f93\u51fa $k$ \u6b21\u64cd\u4f5c\u540e\u80fd\u83b7\u5f97\u7684\u5b57\u5178\u5e8f\u6700\u5927\u7684\u5b57\u7b26\u4e32\uff0c\u5e76\u8f93\u51fa\u6bcf\u4e00\u4f4d\u5728\u64cd\u4f5c\u4e2d\u88ab\u9009\u62e9\u7684\u6b21\u6570\u3002\u82e5\u6709\u591a\u89e3\u8f93\u51fa\u4efb\u610f\u4e00\u89e3\u3002\n\n01 \u4e32 $a$ \u5728\u5b57\u5178\u5e8f\u4e0a\u5927\u4e8e 01 \u4e32 $b$ \u5f53\u4e14\u4ec5\u5f53\uff1a\n- \u5728 $a$ \u548c $b$ \u4ece\u524d\u5f80\u540e\u7b2c\u4e00\u4e2a\u4e0d\u540c\u7684\u4f4d\u4e0a\uff0c$a$ \u4e3a $1$ \u800c $b$ \u4e3a $0$\u3002\n### \u8f93\u5165\u683c\u5f0f\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u6b63\u6574\u6570 $t$ \u8868\u793a\u6570\u636e\u7ec4\u6570\uff08$1\\le t\\le 1000$\uff09\uff0c\u63a5\u4e0b\u6765\u4f9d\u6b21\u8f93\u5165\u6bcf\u7ec4\u6570\u636e\uff1a\n\n\u6bcf\u7ec4\u6570\u636e\u5305\u62ec\u4e24\u884c\uff0c\u7b2c\u4e00\u884c\u4e24\u4e2a\u6b63\u6574\u6570 $n$ \u548c $k$\uff08$1\\le n\\le 2\\cdot 10^5;0\\le k\\le 10^9$\uff09\uff1b\n\n\u7b2c\u4e8c\u884c\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684 01 \u4e32\u8868\u793a\u539f\u59cb\u4e32\u3002\n\n\u5404\u7ec4\u6570\u636e\u7684 $n$ \u4e4b\u548c\u4e0d\u8d85\u8fc7 $2\\cdot 10^5$\u3002\n### \u6837\u4f8b\u8f93\u51fa\n\u5bf9\u4e8e\u6bcf\u7ec4\u6570\u636e\u8f93\u51fa\u4e24\u884c\u3002\n\n\u7b2c\u4e00\u884c\u4e00\u4e2a 01 \u4e32\u8868\u793a $k$ \u6b21\u64cd\u4f5c\u540e\u5f97\u5230\u7684\u5b57\u5178\u5e8f\u6700\u5927\u7684 01 \u4e32\u3002\n\n\u7b2c\u4e8c\u884c $n$ \u4e2a\u6570\uff0c\u8bb0\u4e3a $f_1,f_2,\u2026,f_n$\uff0c$f_i$ \u8868\u793a\u8fd9 $k$ \u6b21\u64cd\u4f5c\u4e2d\u9009\u5230\u7b2c $i$ \u4f4d\u7684\u6b21\u6570\u3002\u8fd9\u4e9b\u6570\u4e4b\u548c\u9700\u4fdd\u8bc1\u4e3a $k$\u3002\n### \u6837\u4f8b\u89e3\u91ca\n\u5bf9\u4e8e\u7b2c\u4e00\u7ec4\u6570\u636e\uff0c\u4e0b\u9762\u662f 3 \u6b21\u64cd\u4f5c\u7684\u8fc7\u7a0b\uff1a\n- \u7b2c\u4e00\u6b21\u9009\u62e9\u7b2c 1 \u4f4d\uff1a$\\color{red}{\\underline{1}00001\\rightarrow \\underline{1}}\\color{blue}{11110}$\uff1b\n- \u7b2c\u4e8c\u6b21\u9009\u62e9\u7b2c 4 \u4f4d\uff1a$\\color{red}{111\\underline{1}10}\\rightarrow\\color{blue}{000}\\color{red}{\\underline{1}}\\color{blue}{01}$\uff1b\n- \u7b2c\u4e09\u6b21\u9009\u62e9\u7b2c 4 \u4f4d\uff1a$\\color{red}{000\\underline{1}01}\\rightarrow\\color{blue}{111}\\color{red}{\\underline{1}}\\color{blue}{10}$\u3002\n\n\u6700\u7ec8\u5f97\u5230 $111110$\uff0c\u662f\u80fd\u591f\u5f97\u5230\u7684\u5b57\u5178\u5e8f\u6700\u5927\u7684\u4e32\u3002"
}