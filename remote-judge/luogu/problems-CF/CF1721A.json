{
    "description": "You have an image file of size $ 2 \\times 2 $ , consisting of $ 4 $ pixels. Each pixel can have one of $ 26 $ different colors, denoted by lowercase Latin letters.\n\nYou want to recolor some of the pixels of the image so that all $ 4 $ pixels have the same color. In one move, you can choose no more than two pixels of the same color and paint them into some other color (if you choose two pixels, both should be painted into the same color).\n\nWhat is the minimum number of moves you have to make in order to fulfill your goal?",
    "inputFormat": "The first line contains one integer $ t $ ( $ 1 \\le t \\le 1000 $ ) \u2014 the number of test cases.\n\nEach test case consists of two lines. Each of these lines contains two lowercase letters of Latin alphabet without any separators, denoting a row of pixels in the image.",
    "outputFormat": "For each test case, print one integer \u2014 the minimum number of moves you have to make so that all $ 4 $ pixels of the image have the same color.",
    "samples": [
        [
            "5\nrb\nbr\ncc\nwb\naa\naa\nab\ncd\nyy\nxx",
            "1\n2\n0\n3\n1"
        ]
    ],
    "hint": "Let's analyze the test cases of the example.\n\nIn the first test case, you can paint the bottom left pixel and the top right pixel (which share the same color) into the color r, so all pixels have this color.\n\nIn the second test case, two moves are enough:\n\n- paint both top pixels, which have the same color c, into the color b;\n- paint the bottom left pixel into the color b.\n\nIn the third test case, all pixels already have the same color.\n\nIn the fourth test case, you may leave any of the pixels unchanged, and paint all three other pixels into the color of that pixel in three moves.\n\nIn the fifth test case, you can paint both top pixels into the color x.",
    "translation": "### \u9898\u76ee\u63cf\u8ff0\n\n\u4f60\u6709\u4e00\u4e2a\u5927\u5c0f\u4e3a $2\u00d72$ \u7684\u56fe\u50cf\u6587\u4ef6\uff0c\u7531 $4$ \u4e2a\u50cf\u7d20\u7ec4\u6210\u3002\u6bcf\u4e2a\u50cf\u7d20\u53ef\u4ee5\u5177\u6709 $26$ \u79cd\u4e0d\u540c\u989c\u8272\u4e2d\u7684\u4e00\u79cd\uff0c\u7531\u5c0f\u5199\u62c9\u4e01\u5b57\u6bcd\u8868\u793a\u3002\n\n\n\u4f60\u5e0c\u671b\u5bf9\u56fe\u50cf\u7684\u67d0\u4e9b\u50cf\u7d20\u91cd\u65b0\u7740\u8272\uff0c\u4ee5\u4fbf\u6240\u6709 $4$ \u4e2a\u50cf\u7d20\u5177\u6709\u76f8\u540c\u7684\u989c\u8272\u3002\u5728\u4e00\u6b21\u64cd\u4f5c\u4e2d\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u81f3\u591a\u4e24\u4e2a\u76f8\u540c\u989c\u8272\u7684\u50cf\u7d20\u5e76\u5c06\u5b83\u4eec\u7ed8\u5236\u6210\u5176\u4ed6\u989c\u8272\uff08\u5982\u679c\u9009\u62e9\u4e24\u4e2a\u50cf\u7d20\uff0c\u5219\u5e94\u5c06\u5b83\u4eec\u7ed8\u5236\u4e3a\u76f8\u540c\u989c\u8272\uff09\u3002\n\n\n\u4e3a\u4e86\u5b9e\u73b0\u4f60\u7684\u76ee\u6807\uff0c\u4f60\u5fc5\u987b\u91c7\u53d6\u7684\u6700\u5c11\u884c\u52a8\u6570\u662f\u591a\u5c11\uff1f\n\n### \u8f93\u5165\u683c\u5f0f\n\u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570 $t$$(1\\leq t \\leq 1000)$ \u2014\u2014\u8868\u793a\u6d4b\u8bd5\u6837\u4f8b\u7684\u6570\u91cf\n\n\u6bcf\u4e2a\u6d4b\u8bd5\u6837\u4f8b\u7531\u4e24\u884c\u7ec4\u6210\u3002\u6bcf\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u5c0f\u5199\u62c9\u4e01\u5b57\u6bcd\uff0c\u6ca1\u6709\u4efb\u4f55\u5206\u9694\u7b26\uff0c\u8868\u793a\u56fe\u50cf\u4e2d\u7684\u4e00\u884c\u50cf\u7d20\u3002\n\n### \u8f93\u51fa\u683c\u5f0f\n\u5bf9\u4e8e\u6bcf\u4e2a\u6d4b\u8bd5\u6837\u4f8b\uff0c\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\u2014\u2014\u4f60\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\uff0c\u4ee5\u4f7f\u56fe\u50cf\u76844\u4e2a\u50cf\u7d20\u5177\u6709\u76f8\u540c\u7684\u989c\u8272\u3002"
}