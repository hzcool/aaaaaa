{
    "description": "In this problem we consider Boolean functions of four variables $ A,B,C,D $ . Variables $ A,B,C $ and $ D $ are logical and can take values 0 or 1. We will define a function using the following grammar:\n\n<expression> ::= <variable> | (<expression>) <operator> (<expression>)\n\n<variable> ::= 'A' | 'B' | 'C' | 'D' | 'a' | 'b' | 'c' | 'd'\n\n<operator> ::= '&' | '|'\n\nHere large letters $ A,B,C,D $ represent variables, and small letters represent their negations. For example, if $ A=1 $ , then character 'A' corresponds to value 1, and value character 'a' corresponds to value 0. Here character '&' corresponds to the operation of logical AND, character '|' corresponds to the operation of logical OR.\n\nYou are given expression $ s $ , defining function $ f $ , where some operations and variables are missing. Also you know the values of the function $ f(A,B,C,D) $ for some $ n $ distinct sets of variable values. Count the number of ways to restore the elements that are missing in the expression so that the resulting expression corresponded to the given information about function $ f $ in the given variable sets. As the value of the result can be rather large, print its remainder modulo $ 10^{9}+7 $ .",
    "inputFormat": "The first line contains expression $ s $ ( $ 1<=|s|<=500 $ ), where some characters of the operators and/or variables are replaced by character '?'.\n\nThe second line contains number $ n $ ( $ 0<=n<=2^{4} $ ) \u2014 the number of integers sets for which we know the value of function $ f(A,B,C,D) $ . Next $ n $ lines contain the descriptions of the sets: the $ i $ -th of them contains five integers $ a_{i},b_{i},c_{i},d_{i},e_{i} $ ( $ 0<=a_{i},b_{i},c_{i},d_{i},e_{i}<=1 $ ), separated by spaces and meaning that $ f(a_{i},b_{i},c_{i},d_{i})=e_{i} $ .\n\nIt is guaranteed that all the tuples ( $ a_{i},b_{i},c_{i},d_{i} $ ) are distinct.",
    "outputFormat": "In a single line print the answer to the problem.",
    "samples": [
        [
            "?\n2\n1 0 1 0 1\n0 1 1 0 1\n",
            "2\n"
        ],
        [
            "(A)?(?)\n1\n1 1 0 0 0\n",
            "4\n"
        ],
        [
            "((?)&(?))|((?)&(?))\n0\n",
            "4096"
        ],
        [
            "b\n1\n1 0 1 1 1\n",
            "1\n"
        ]
    ],
    "hint": "In the first sample the two valid expressions are 'C' and 'd'.\n\nIn the second sample the expressions look as follows: '(A)&(a)', '(A)&(b)', '(A)&(C)', '(A)&(D)'.",
    "translation": "$A,B,C,D,a,b,c,d$ \u4e3a\u516b\u4e2a\u5e03\u5c14\u300c\u53d8\u91cf\u300d\uff0c\u5176\u4e2d\u5c0f\u5199\u5b57\u6bcd\u7684\u503c\u7b49\u4e8e\u5bf9\u5e94\u5927\u5199\u5b57\u6bcd\u7684\u503c\u53d6\u53cd\u3002\n\n$&,|$ \u4e3a\u4e24\u4e2a\u5e03\u5c14\u300c\u64cd\u4f5c\u7b26\u300d\u3002\n\n\u5e03\u5c14\u300c\u8868\u8fbe\u5f0f\u300d\u4e3a\u4e00\u4e2a\u300c\u53d8\u91cf\u300d\uff0c\u6216\u901a\u8fc7\u300c\u64cd\u4f5c\u7b26\u300d\u8fde\u63a5\u8d77\u6765\u7684\u4e24\u4e2a\u300c\u8868\u8fbe\u5f0f\u300d\u3002\n\n\u5e03\u5c14\u300c\u51fd\u6570\u300d$f(A,B,C,D)$ \u4e3a\u4e00\u4e2a\u5e03\u5c14\u300c\u8868\u8fbe\u5f0f\u300d\u3002\n\n\u7ed9\u5b9a\u4e00\u4e2a\u53ef\u80fd\u7f3a\u5c11\u67d0\u4e9b\u300c\u53d8\u91cf\u300d\u548c\u300c\u64cd\u4f5c\u7b26\u300d\uff08\u7528 `?` \u4ee3\u66ff\uff09\u7684\u300c\u51fd\u6570\u300d$s$\uff0c\u5e76\u7ed9\u51fa $n$ \u4e2a**\u51fd\u6570\u5728 $A,B,C,D$ \u786e\u5b9a\u65f6**\u7684\u503c\u3002\n\n\u6c42\u53ef\u80fd\u7684\u300c\u51fd\u6570\u300d\u4e2a\u6570\u3002\n\n$|s|\\le 500$\uff0c$n \\le 16$\uff0c\u7b54\u6848\u5bf9 $10^9+7$ \u53d6\u6a21\u3002"
}