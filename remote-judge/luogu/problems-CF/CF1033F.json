{
    "description": "Alice has a computer that operates on $ w $ -bit integers. The computer has $ n $ registers for values. The current content of the registers is given as an array $ a_1, a_2, \\ldots, a_n $ .\n\nThe computer uses so-called \"number gates\" to manipulate this data. Each \"number gate\" takes two registers as inputs and calculates a function of the two values stored in those registers. Note that you can use the same register as both inputs.\n\nEach \"number gate\" is assembled from bit gates. There are six types of bit gates: AND, OR, XOR, NOT AND, NOT OR, and NOT XOR, denoted \"A\", \"O\", \"X\", \"a\", \"o\", \"x\", respectively. Each bit gate takes two bits as input. Its output given the input bits $ b_1 $ , $ b_2 $ is given below:\n\n $ \\begin{matrix} b_1 & b_2 & A & O & X & a & o & x \\\\ 0 & 0 & 0 & 0 & 0 & 1 & 1 & 1 \\\\ 0 & 1 & 0 & 1 & 1 & 1 & 0 & 0 \\\\ 1 & 0 & 0 & 1 & 1 & 1 & 0 & 0 \\\\ 1 & 1 & 1 & 1 & 0 & 0 & 0 & 1 \\\\ \\end{matrix} $ To build a \"number gate\", one takes $ w $ bit gates and assembles them into an array. A \"number gate\" takes two $ w $ -bit integers $ x_1 $ and $ x_2 $ as input. The \"number gate\" splits the integers into $ w $ bits and feeds the $ i $ -th bit of each input to the $ i $ -th bit gate. After that, it assembles the resulting bits again to form an output word.\n\nFor instance, for $ 4 $ -bit computer we might have a \"number gate\" \"AXoA\" (AND, XOR, NOT OR, AND). For two inputs, $ 13 = 1101_2 $ and $ 10 = 1010_2 $ , this returns $ 12 = 1100_2 $ , as $ 1 $ and $ 1 $ is $ 1 $ , $ 1 $ xor $ 0 $ is $ 1 $ , not ( $ 0 $ or $ 1 $ ) is $ 0 $ , and finally $ 1 $ and $ 0 $ is $ 0 $ .\n\nYou are given a description of $ m $ \"number gates\". For each gate, your goal is to report the number of register pairs for which the \"number gate\" outputs the number $ 0 $ . In other words, find the number of ordered pairs $ (i,j) $ where $ 1 \\leq i,j \\leq n $ , such that $ w_k(a_i, a_j) = 0 $ , where $ w_k $ is the function computed by the $ k $ -th \"number gate\".",
    "inputFormat": "The first line contains three integers: $ w $ , $ n $ , and $ m~(1 \\leq w \\leq 12, 1 \\leq n \\leq 3\\cdot 10^4, 1 \\leq m \\leq 5\\cdot 10^4) $ \u2014 the word size, the number of variables, and the number of gates.\n\nThe second line contains $ n $ integers $ a_1, a_2, \\ldots, a_n $ $ (0 \\leq a_i < 2^w) $ \u2014 the value of variables stored in the registers.\n\nEach of the next $ m $ lines contains a string $ g_j~(|g_j| = w) $ with a description of a single gate. Each character of $ g_j $ is one of \"A\", \"O\", \"X\", \"a\", \"o\", \"x\".",
    "outputFormat": "Print $ m $ lines. The $ i $ -th line should contain the number of ordered pairs of variables for which the $ i $ -th gate returns zero.",
    "samples": [
        [
            "4 3 1\n13 10 6\nAXoA\n",
            "3\n"
        ],
        [
            "1 7 6\n0 1 1 0 1 0 0\nA\nO\nX\na\no\nx\n",
            "40\n16\n25\n9\n33\n24\n"
        ],
        [
            "6 2 4\n47 12\nAOXaox\nAAaaAA\nxxxxxx\nXXXXXX\n",
            "2\n3\n0\n2\n"
        ],
        [
            "2 2 2\n2 0\nxO\nOx\n",
            "2\n0\n"
        ]
    ],
    "hint": "In the first test case, the inputs in binary are $ 1101 $ , $ 1010 $ , $ 0110 $ . The pairs that return $ 0 $ are $ (13, 6) $ , $ (6, 13) $ , and $ (6, 6) $ . As it was already mentioned in the problem statement, $ 13 \\oplus 10 = 10 \\oplus 13 = 12 $ . The other pairs are $ 13 \\oplus 13 = 11 $ , $ 10 \\oplus 10 = 8 $ and $ 10 \\oplus 6 = 6 \\oplus 10 = 4 $ .",
    "translation": "\u73b0\u6709\u4e00\u79cd\u4e8c\u5143\u4f4d\u8fd0\u7b97\u65b9\u5f0f\uff0c\u5b9a\u4e49\u4e3a $\\odot$ \uff0c\u8fd0\u7b97\u6570\u5747\u5728\u533a\u95f4 $[0,2^w)$ \u5185\uff0c\u4ed6\u4f7f\u7528\u6570\u5b57\u95e8\u8fdb\u884c\u8fd0\u7b97\uff0c\u8fd0\u7b97\u6cd5\u5219\u7531\u4e00\u4e2a\u957f\u5ea6\u4e3a $w$ \u7684\u5b57\u7b26\u4e32\u6784\u6210\uff0c\u8bbe\u4e3a $s$ \uff0c $s$ \u4ec5\u5305\u542b $\\texttt{A,O,X,a,o,x}$ \uff0c\u5206\u522b\u8868\u793a \u4e0e\uff0c\u6216\uff0c\u5f02\u6216\uff0c\u4e0e\u975e\uff0c\u6216\u975e\uff0c\u540c\u6216\uff0c\u8868\u793a\u6bcf\u4e00\u4f4d\u7684\u8fd0\u7b97\u6cd5\u5219\u3002\u771f\u503c\u8868\u89c1\u4e0a\u3002\n\n\u5177\u4f53\u5730\uff0c $x\\odot y \\ (s) =z$ \u7684\u8fd0\u7b97\u65b9\u5f0f\u5982\u4e0b\uff1a   \n\n+   $z$ \u7684\u4e8c\u8fdb\u5236\u7684**\u4ece\u9ad8\u5230\u4f4e**\u7b2c $i$ \u4f4d\u7684\u7ed3\u679c\u662f $x$ \u548c $y$ \u7684\u7b2c $i$ \u4f4d\u901a\u8fc7 $s_i$ \u5bf9\u5e94\u7684\u8fd0\u7b97\u5f97\u5230\u7684\u3002   \n\n\u73b0\u6709 $n$ \u4e2a\u6570\uff0c\u5206\u522b\u4e3a $a_1,a_2,\\cdots ,a_n$\uff0c\u6bcf\u4e2a\u6570\u90fd\u5728\u533a\u95f4 $[0,2^w)$ \u5185\uff0c\u53c8\u6709 $Q$ \u7ec4\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u5b9a\u95e8\u8fd0\u7b97\u7684\u8fd0\u7b97\u6cd5\u5219 $s$ \uff0c\u8be2\u95ee\u6709\u591a\u5c11\u5bf9**\u6709\u5e8f\u5bf9** $(x,y)$ \u6ee1\u8db3 $a_x \\odot a_y = 0$ \uff08\u6ce8\u610f $x$ \u53ef\u4ee5\u7b49\u4e8e $y$\uff09\u3002   \n\n~~\u60f3\u4e86\u534a\u5929\u600e\u4e48\u7ffb\u8bd1\u7559\u4e2a\u540d\u5427 qaq~~ By @wasa855"
}