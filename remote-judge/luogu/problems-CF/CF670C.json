{
    "description": "Moscow is hosting a major international conference, which is attended by $ n $ scientists from different countries. Each of the scientists knows exactly one language. For convenience, we enumerate all languages of the world with integers from $ 1 $ to $ 10^{9} $ .\n\nIn the evening after the conference, all $ n $ scientists decided to go to the cinema. There are $ m $ movies in the cinema they came to. Each of the movies is characterized by two distinct numbers \u2014 the index of audio language and the index of subtitles language. The scientist, who came to the movie, will be very pleased if he knows the audio language of the movie, will be almost satisfied if he knows the language of subtitles and will be not satisfied if he does not know neither one nor the other (note that the audio language and the subtitles language for each movie are always different).\n\nScientists decided to go together to the same movie. You have to help them choose the movie, such that the number of very pleased scientists is maximum possible. If there are several such movies, select among them one that will maximize the number of almost satisfied scientists.",
    "inputFormat": "The first line of the input contains a positive integer $ n $ ( $ 1<=n<=200000 $ ) \u2014 the number of scientists.\n\nThe second line contains $ n $ positive integers $ a_{1},a_{2},...,a_{n} $ ( $ 1<=a_{i}<=10^{9} $ ), where $ a_{i} $ is the index of a language, which the $ i $ -th scientist knows.\n\nThe third line contains a positive integer $ m $ ( $ 1<=m<=200000 $ ) \u2014 the number of movies in the cinema.\n\nThe fourth line contains $ m $ positive integers $ b_{1},b_{2},...,b_{m} $ ( $ 1<=b_{j}<=10^{9} $ ), where $ b_{j} $ is the index of the audio language of the $ j $ -th movie.\n\nThe fifth line contains $ m $ positive integers $ c_{1},c_{2},...,c_{m} $ ( $ 1<=c_{j}<=10^{9} $ ), where $ c_{j} $ is the index of subtitles language of the $ j $ -th movie.\n\nIt is guaranteed that audio languages and subtitles language are different for each movie, that is $ b_{j}\u2260c_{j} $ .",
    "outputFormat": "Print the single integer \u2014 the index of a movie to which scientists should go. After viewing this movie the number of very pleased scientists should be maximum possible. If in the cinema there are several such movies, you need to choose among them one, after viewing which there will be the maximum possible number of almost satisfied scientists.\n\nIf there are several possible answers print any of them.",
    "samples": [
        [
            "3\n2 3 2\n2\n3 2\n2 3\n",
            "2\n"
        ],
        [
            "6\n6 3 1 1 3 7\n5\n1 2 3 4 5\n2 3 4 5 1\n",
            "1\n"
        ]
    ],
    "hint": "In the first sample, scientists must go to the movie with the index $ 2 $ , as in such case the $ 1 $ -th and the $ 3 $ -rd scientists will be very pleased and the $ 2 $ -nd scientist will be almost satisfied.\n\nIn the second test case scientists can go either to the movie with the index $ 1 $ or the index $ 3 $ . After viewing any of these movies exactly two scientists will be very pleased and all the others will be not satisfied.",
    "translation": "\u83ab\u65af\u79d1\u5728\u4e3e\u529e\u4e00\u573a\u91cd\u8981\u7684\u6709$n$ \u4e2a\u4e0d\u540c\u56fd\u5bb6\u7684\u73c2\u5b66\u5bb6\u53c2\u4e0e\u7684\u56fd\u9645\u4f1a\u8bae\uff0c\u6bcf\u4e2a\u73c2\u5b66\u5bb6\u90fd\u53ea\u4f1a\u4e00\u79cd\u8bed\u8a00\u3002\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u89c4\u5b9a\u4e00\u79cd\u8bed\u8a00\u7528$1$ \u5230$10^9$ \u7684\u6570\u6765\u63cf\u8ff0\u3002 \n\u5728\u4f1a\u8bae\u4e4b\u540e\u7684\u665a\u4e0a\uff0c\u73c2\u5b66\u5bb6\u4eec\u51b3\u5b9a\u53bb\u770b\u7535\u5f71\u3002\u4ed6\u4eec\u53bb\u7684\u7535\u5f71\u9662\u6709$m$ \u573a\u7535\u5f71\uff0c\u6bcf\u573a\u6709\u4e24\u4e2a\u4e0d\u540c\u7684\u6570\u5b57\uff0c\u5206\u522b\u4ee3\u8868\u914d\u97f3\u7684\u8bed\u8a00\u548c\u5b57\u5e55\u7684\u8bed\u8a00\u3002\u5982\u679c\u4e00\u4e2a\u73c2\u5b66\u5bb6\u80fd\u542c\u61c2\u914d\u97f3\uff0c\u4ed6\u4f1a\u975e\u5e38\u6109\u60a6\uff1b\u5982\u679c\u80fd\u770b\u61c2\u5b57\u5e55\uff0c\u4ed6\u4f1a\u6bd4\u8f83\u6ee1\u610f\u3002\u5982\u679c\u65e2\u770b\u4e0d\u61c2\u4e5f\u542c\u4e0d\u61c2\uff0c\u4ed6\u4f1a\u5f88\u751f\u6c14\u3002 \n\u73c2\u5b66\u5bb6\u4eec\u51b3\u5b9a\u53bb\u770b\u540c\u4e00\u573a\u7535\u5f71\uff0c\u4f60\u5fc5\u987b\u5e2e\u52a9\u4ed6\u4eec\u9009\u62e9\u4e00\u573a\u7535\u5f71\uff0c\u8ba9\u6109\u60a6\u7684\u4eba\u6700\u591a\u7684\u524d\u63d0\u4e0b\uff0c\u6bd4\u8f83\u6ee1\u610f\u7684\u4eba\u6700\u591a\u3002 \n\u8f93\u5165\u683c\u5f0f\uff1a \u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570$n(1 \\leq n \\leq 200000)$ \u8868\u793a\u73c2\u5b66\u5bb6\u4e2a\u6570\u3002\n\u7b2c\u4e8c\u884c$n$ \u4e2a\u6574\u6570$a_1, a_2, ..., a_n(1 \\leq a_i \\leq 10^9)$ \u8868\u793a\u73c2\u5b66\u5bb6\u4eec\u4f1a\u7684\u8bed\u8a00\u3002 \n\u7b2c\u4e09\u884c\u4e00\u4e2a\u6574\u6570$1 \\leq m \\leq 200000$ \u8868\u793a\u7535\u5f71\u7684\u573a\u6570\u3002 \n\u7b2c\u56db\u884c$m$ \u4e2a\u6574\u6570$b_1, b_2, ..., b_n(1 \\leq b_j \\leq 10^9)$ \u8868\u793a\u7535\u5f71\u7684\u914d\u97f3\u7528\u7684\u8bed\u8a00\u3002\n\u7b2c\u4e94\u884c$m$ \u4e2a\u6574\u6570$c_1, c_2, ..., c_n(1 \\leq c_j \\leq 10^9)$ \u8868\u793a\u7535\u5f71\u7684\u5b57\u5e55\u7528\u7684\u8bed\u8a00\u3002 \n\u8f93\u51fa\u683c\u5f0f\uff1a \u4e00\u4e2a\u6574\u6570\u8868\u793a\u5b89\u6392\u54ea\u4e00\u573a\u7535\u5f71\u3002 \u5982\u679c\u6709\u591a\u79cd\u60c5\u51b5\uff0c\u9009\u62e9\u6bd4\u8f83\u6ee1\u610f\u7684\u65b9\u6848\u8f93\u51fa\u3002"
}