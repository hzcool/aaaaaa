{
    "description": "You have an array $ a $ of size $ n $ consisting only of zeroes and ones and an integer $ k $ . In one operation you can do one of the following:\n\n- Select $ 2 $ consecutive elements of $ a $ and replace them with their minimum (that is, let $ a := [a_{1}, a_{2}, \\ldots, a_{i-1}, \\min(a_{i}, a_{i+1}), a_{i+2}, \\ldots, a_{n}] $ for some $ 1 \\le i \\le n-1 $ ). This operation decreases the size of $ a $ by $ 1 $ .\n- Select $ k $ consecutive elements of $ a $ and replace them with their maximum (that is, let $ a := [a_{1}, a_{2}, \\ldots, a_{i-1}, \\max(a_{i}, a_{i+1}, \\ldots, a_{i+k-1}), a_{i+k}, \\ldots, a_{n}] $ for some $ 1 \\le i \\le n-k+1 $ ). This operation decreases the size of $ a $ by $ k-1 $ .\n\nDetermine if it's possible to turn $ a $ into $ [1] $ after several (possibly zero) operations.",
    "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $ t $ ( $ 1 \\le t \\le 1000 $ ). The description of the test cases follows.\n\nThe first line of each test case contains two integers $ n $ and $ k $ ( $ 2 \\le k \\le n \\le 50 $ ), the size of array $ a $ and the length of segments that you can perform second type operation on.\n\nThe second line contains $ n $ integers $ a_{1}, a_{2}, \\ldots, a_{n} $ ( $ a_i $ is $ 0 $ or $ 1 $ ), elements of array $ a $ .",
    "outputFormat": "For each test case, if it is possible to turn $ a $ into $ [1] $ , print \"YES\", otherwise print \"NO\".",
    "samples": [
        [
            "7\n3 2\n0 1 0\n5 3\n1 0 1 1 0\n2 2\n1 1\n4 4\n0 0 0 0\n6 3\n0 0 1 0 0 1\n7 5\n1 1 1 1 1 1 1\n5 3\n0 0 1 0 0",
            "YES\nYES\nYES\nNO\nYES\nYES\nYES"
        ]
    ],
    "hint": "In the first test case, you can perform the second type operation on second and third elements so $ a $ becomes $ [0, 1] $ , then you can perform the second type operation on first and second elements, so $ a $ turns to $ [1] $ .\n\nIn the fourth test case, it's obvious to see that you can't make any $ 1 $ , no matter what you do.\n\nIn the fifth test case, you can first perform a type 2 operation on the first three elements so that $ a $ becomes $ [1, 0, 0, 1] $ , then perform a type 2 operation on the elements in positions two through four, so that $ a $ becomes $ [1, 1] $ , and finally perform the first type operation on the remaining elements, so that $ a $ becomes $ [1] $ .",
    "translation": "#### \u9898\u76ee\u63cf\u8ff0\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u53ea\u5305\u542b $0$ \u548c $1$ \u7684\u5e8f\u5217 $a$ \u548c\u4e00\u4e2a\u6570\u5b57 $k$\uff0c\u53ef\u4ee5\u8fdb\u884c\u5982\u4e0b\u7684\u64cd\u4f5c\u5404\u82e5\u5e72\u6b21\uff1a\n\n- \u9009\u5b9a\u4e00\u4e2a $i\\in[1,n-1]$\uff0c\u5c06 $a_i$ \u548c $a_{i+1}$ \u8fd9\u4e24\u4e2a\u6570\u66ff\u6362\u4e3a\u5b83\u4eec\u7684\u6700\u5c0f\u503c\u3002\u8fdb\u884c\u6b64\u64cd\u4f5c\u540e\uff0c\u5e8f\u5217\u7684\u957f\u5ea6 $n$ \u51cf\u5c11 $1$\u3002\n\n- \u9009\u5b9a\u4e00\u4e2a $i\\in[1,n-k+1]$\uff0c\u5c06 $a_i$ \u5230 $a_{i+k-1}$ \u8fd9 $k$ \u4e2a\u6570\u66ff\u6362\u4e3a\u5b83\u4eec\u7684\u6700\u5927\u503c\u3002\u8fdb\u884c\u6b64\u64cd\u4f5c\u540e\uff0c\u5e8f\u5217\u7684\u957f\u5ea6 $n$ \u51cf\u5c11 $k-1$\u3002\n\n\u5224\u65ad\u7ecf\u8fc7\u82e5\u5e72\u6b21\u64cd\u4f5c\u540e\u662f\u5426\u80fd\u4f7f $n=1$ \u4e14 $a_1=1$\u3002\n\n#### \u8f93\u5165\n\n$t$ \u7ec4\u6570\u636e\uff0c\u6bcf\u7ec4\u6570\u636e\u7b2c\u4e00\u884c\u8f93\u5165\u4e24\u4e2a\u6574\u6570 $n$ \u548c $k$\uff0c\u7b2c\u4e8c\u884c\u8f93\u5165 $n$ \u4e2a\u6574\u6570 $a_i$\u3002\n\n#### \u8f93\u51fa\n\n\u82e5\u53ef\u4ee5\uff0c\u8f93\u51fa `YES`\uff0c\u5426\u5219\u8f93\u51fa `NO`\u3002"
}