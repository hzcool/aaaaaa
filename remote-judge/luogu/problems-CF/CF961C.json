{
    "description": "Magnus decided to play a classic chess game. Though what he saw in his locker shocked him! His favourite chessboard got broken into $ 4 $ pieces, each of size $ n $ by $ n $ , $ n $ is always odd. And what's even worse, some squares were of wrong color. $ j $ -th square of the $ i $ -th row of $ k $ -th piece of the board has color $ a_{k,i,j} $ ; $ 1 $ being black and $ 0 $ being white.\n\nNow Magnus wants to change color of some squares in such a way that he recolors minimum number of squares and obtained pieces form a valid chessboard. Every square has its color different to each of the neightbouring by side squares in a valid board. Its size should be $ 2n $ by $ 2n $ . You are allowed to move pieces but not allowed to rotate or flip them.",
    "inputFormat": "The first line contains odd integer $ n $ $ (1<=n<=100) $ \u2014 the size of all pieces of the board.\n\nThen $ 4 $ segments follow, each describes one piece of the board. Each consists of $ n $ lines of $ n $ characters; $ j $ -th one of $ i $ -th line is equal to 1 if the square is black initially and 0 otherwise. Segments are separated by an empty line.",
    "outputFormat": "Print one number \u2014 minimum number of squares Magnus should recolor to be able to obtain a valid chessboard.",
    "samples": [
        [
            "1\n0\n\n0\n\n1\n\n0\n",
            "1\n"
        ],
        [
            "3\n101\n010\n101\n\n101\n000\n101\n\n010\n101\n011\n\n010\n101\n010\n",
            "2\n"
        ]
    ],
    "hint": "",
    "translation": "\u9a6c\u683c\u7eb3\u65af\u51b3\u5b9a\u73a9\u4e00\u4e2a\u7ecf\u5178\u7684\u56fd\u9645\u8c61\u68cb\u6e38\u620f\u3002\u5c3d\u7ba1\u4ed6\u5728\u50a8\u7269\u67dc\u91cc\u770b\u5230\u7684\u4e1c\u897f\u9707\u60ca\u4e86\u4ed6\uff01\u4ed6\u6700\u559c\u6b22\u7684\u68cb\u76d8\u88ab\u5206\u6210\u4e864\u5757\uff0c\u6bcf\u4e2a\u68cb\u76d8\u7684\u5927\u5c0fN\u603b\u662f\u5947\u6570\u3002\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u6709\u4e9b\u6b63\u65b9\u5f62\u7684\u989c\u8272\u4e0d\u5bf9\u3002\u7b2ci\u6392\u7b2cj\u4e2a\u6570\u5b57\u4e3a1\u8868\u793a\u8be5\u683c\u5b50\u4e3a\u9ed1\u8272\uff0c0\u4e3a\u767d\u8272\u3002\r\n\r\n\u73b0\u5728\u9a6c\u683c\u7eb3\u65af\u60f3\u8981\u6539\u53d8\u4e00\u4e9b\u65b9\u5757\u7684\u989c\u8272\uff0c\u8fd9\u6837\u4ed6\u5c31\u53ef\u4ee5\u91cd\u65b0\u7ed9\u6700\u5c0f\u7684\u65b9\u5757\u7f16\u53f7\uff0c\u4f7f\u5f97\u76f8\u90bb\u7684\u65b9\u5757\u989c\u8272\u4e0d\u540c\u3002\u5176\u8fb9\u957f\u5e94\u4e3a2n\u3002\u5141\u8bb8\u79fb\u52a8\u65b9\u5757\uff0c\u4f46\u4e0d\u5141\u8bb8\u65cb\u8f6c\u6216\u7ffb\u8f6c\u65b9\u5757\u3002\r\n\u6c42\u4ed6\u6700\u5c0f\u9700\u8981\u6539\u53d8\u65b9\u5757\u7684\u989c\u8272\u6570\u3002"
}