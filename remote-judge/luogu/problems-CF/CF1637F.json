{
    "description": "You are given a tree with $ n $ vertices numbered from $ 1 $ to $ n $ . The height of the $ i $ -th vertex is $ h_i $ . You can place any number of towers into vertices, for each tower you can choose which vertex to put it in, as well as choose its efficiency. Setting up a tower with efficiency $ e $ costs $ e $ coins, where $ e > 0 $ .\n\nIt is considered that a vertex $ x $ gets a signal if for some pair of towers at the vertices $ u $ and $ v $ ( $ u \\neq v $ , but it is allowed that $ x = u $ or $ x = v $ ) with efficiencies $ e_u $ and $ e_v $ , respectively, it is satisfied that $ \\min(e_u, e_v) \\geq h_x $ and $ x $ lies on the path between $ u $ and $ v $ .\n\nFind the minimum number of coins required to set up towers so that you can get a signal at all vertices.",
    "inputFormat": "The first line contains an integer $ n $ ( $ 2 \\le n \\le 200\\,000 $ ) \u2014 the number of vertices in the tree.\n\nThe second line contains $ n $ integers $ h_i $ ( $ 1 \\le h_i \\le 10^9 $ ) \u2014 the heights of the vertices.\n\nEach of the next $ n - 1 $ lines contain a pair of numbers $ v_i, u_i $ ( $ 1 \\le v_i, u_i \\le n $ ) \u2014 an edge of the tree. It is guaranteed that the given edges form a tree.",
    "outputFormat": "Print one integer \u2014 the minimum required number of coins.",
    "samples": [
        [
            "3\n1 2 1\n1 2\n2 3",
            "4"
        ],
        [
            "5\n1 3 3 1 3\n1 3\n5 4\n4 3\n2 3",
            "7"
        ],
        [
            "2\n6 1\n1 2",
            "12"
        ]
    ],
    "hint": "In the first test case it's optimal to install two towers with efficiencies $ 2 $ at vertices $ 1 $ and $ 3 $ .\n\nIn the second test case it's optimal to install a tower with efficiency $ 1 $ at vertex $ 1 $ and two towers with efficiencies $ 3 $ at vertices $ 2 $ and $ 5 $ .\n\nIn the third test case it's optimal to install two towers with efficiencies $ 6 $ at vertices $ 1 $ and $ 2 $ .",
    "translation": "\u7ed9\u5b9a\u4e00\u68f5\u5305\u542b $n$ \u4e2a\u70b9\u7684\u6811\uff0c\u7b2c $i$ \u4e2a\u70b9\u7684\u9ad8\u5ea6\u4e3a $h_i$\u3002\u4f60\u53ef\u4ee5\u5728\u8fd9 $n$ \u4e2a\u70b9\u4e2d\u5efa\u4efb\u610f\u591a\u4e2a\u5854\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5854\uff0c\u4f60\u90fd\u53ef\u4ee5\u6307\u5b9a\u5176\u6240\u5728\u7684\u70b9\u7684\u7f16\u53f7\u53ca\u5176\u52bf\u80fd\u3002\u5efa\u4e00\u4e2a\u52bf\u80fd\u4e3a $e$ \u7684\u5854\u9700\u8981\u82b1\u8d39 $e$ \u679a\u786c\u5e01\uff08\u9700\u8981\u4fdd\u8bc1 $e>0$\uff09\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6811\u4e0a\u7684\u70b9 $x$\uff0c\u6211\u4eec\u79f0\u5176\u63a5\u6536\u5230\u4e86\u4fe1\u53f7\uff0c\u5f53\u4e14\u4ec5\u5f53\u5728\u6811\u4e0a\u5b58\u5728\u4e24\u4e2a\u5efa\u4e86\u5854\u7684\u70b9 $u,v$\uff08\u9700\u8981\u4fdd\u8bc1 $u\\neq v$\uff0c\u4f46\u4e0d\u9700\u8981\u4fdd\u8bc1 $x\\neq u$ \u6216 $x\\neq v$\uff09\uff0c\u4f7f\u5f97 $x$ \u5728\u4ece $u$ \u5230 $v$ \u7684\u8def\u5f84\u4e0a\uff0c\u4e14 $\\min(e_u,e_v)\\geqslant h_x$\u3002\n\n\u8bf7\u6c42\u51fa\u6700\u5c11\u9700\u8981\u82b1\u8d39\u591a\u5c11\u679a\u786c\u5e01\uff0c\u624d\u80fd\u4f7f\u5f97\u6811\u4e0a\u6240\u6709\u70b9\u90fd\u80fd\u63a5\u53d7\u5230\u4fe1\u53f7\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a\n\n- $2\\leqslant n\\leqslant 2\\times 10^5$\u3002\n- $1\\leqslant h_i\\leqslant 10^9$\u3002\n\nTranslated by Eason_AC"
}