{
    "description": "Omkar has received a message from Anton saying \"Your story for problem A is confusing. Just make a formal statement.\" Because of this, Omkar gives you an array $ a = [a_1, a_2, \\ldots, a_n] $ of $ n $ distinct integers. An array $ b = [b_1, b_2, \\ldots, b_k] $ is called nice if for any two distinct elements $ b_i, b_j $ of $ b $ , $ |b_i-b_j| $ appears in $ b $ at least once. In addition, all elements in $ b $ must be distinct. Can you add several (maybe, $ 0 $ ) integers to $ a $ to create a nice array $ b $ of size at most $ 300 $ ? If $ a $ is already nice, you don't have to add any elements.\n\nFor example, array $ [3, 6, 9] $ is nice, as $ |6-3|=|9-6| = 3 $ , which appears in the array, and $ |9-3| = 6 $ , which appears in the array, while array $ [4, 2, 0, 6, 9] $ is not nice, as $ |9-4| = 5 $ is not present in the array.\n\nFor integers $ x $ and $ y $ , $ |x-y| = x-y $ if $ x > y $ and $ |x-y| = y-x $ otherwise.",
    "inputFormat": "Each test contains multiple test cases. The first line contains $ t $ ( $ 1 \\leq t \\leq 50 $ ), the number of test cases. Description of the test cases follows.\n\nThe first line of each test case contains a single integer $ n $ ( $ 2 \\leq n \\leq 100 $ ) \u2014 the length of the array $ a $ .\n\nThe second line of each test case contains $ n $ distinct integers $ a_1, a_2, \\cdots, a_n $ ( $ -100 \\leq a_i \\leq 100 $ ) \u2014 the elements of the array $ a $ .",
    "outputFormat": "For each test case, output one line containing YES if Omkar can create a nice array $ b $ by adding elements to $ a $ and NO otherwise. The case of each letter does not matter, so yEs and nO will also be accepted.\n\nIf the first line is YES, output a second line containing a single integer $ k $ ( $ n \\leq k \\leq 300 $ ).\n\nThen output one line containing $ k $ distinct integers $ b_1, b_2, \\cdots, b_k $ ( $ -10^9 \\leq b_i \\leq 10^9 $ ), the elements of the nice array $ b $ . $ b_1, b_2, \\cdots, b_k $ can be in any order. For each $ a_i $ in $ a $ , $ a_i $ must appear at least once in $ b $ .\n\nIt can be proved that if Omkar can create such an array $ b $ , then he can also do so in a way that satisfies the above constraints.\n\nIf multiple solutions exist, you can print any.",
    "samples": [
        [
            "4\n3\n3 0 9\n2\n3 4\n5\n-7 3 13 -2 8\n4\n4 8 12 6",
            "yes\n4\n6 0 3 9\nyEs\n5\n5 3 1 2 4\nNO\nYes\n6\n8 12 6 2 4 10"
        ]
    ],
    "hint": "For the first case, you can add integers to $ a $ to receive the array $ b = [6, 0, 3, 9] $ . Note that $ |6-3| = |9-6| = |3-0| = 3 $ and $ 3 $ is in $ b $ , $ |6-0| = |9-3| = 6 $ and $ 6 $ is in $ b $ , and $ |9-0| = 9 $ is in $ b $ , so $ b $ is nice.\n\nFor the second case, you can add integers to $ a $ to receive the array $ b = [5, 3, 1, 2, 4] $ . We have that $ |2-1| = |3-2| = |4-3| = |5-4| = 1 $ is in $ b $ , $ |3-1| = |4-2| = |5-3| = 2 $ is in $ b $ , $ |4-1| = |5-2| = 3 $ is in $ b $ , and $ |5-1| = 4 $ is in $ b $ , so $ b $ is nice.\n\nFor the fourth case, you can add integers to $ a $ to receive the array $ b = [8, 12, 6, 2, 4, 10] $ . We have that $ |4-2| = |6-4| = |8-6| = |10-8| = |12-10| = 2 $ is in $ b $ , $ |6-2| = |8-4| = |10-6| = |12-8| = 4 $ is in $ b $ , $ |8-2| = |10-4| = |12-6| = 6 $ is in $ b $ , $ |10-2| = |12-4| = 8 $ is in $ b $ , and $ |12-2| = 10 $ is in $ b $ , so $ b $ is nice.\n\nIt can be proven that for all other test cases it is impossible to create a nice array $ b $ .",
    "translation": "## \u9898\u76ee\u63cf\u8ff0\n\n\u7ed9\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 $a = [a_1, a_2, \\cdots a_n]$ \uff0c\u8981\u6c42\u901a\u8fc7\u5411 $a$ \u4e2d\u6dfb\u52a0\u6574\u6570\u5f97\u5230\u4e00\u4e2a\u6570\u7ec4 $b = [b_1, b_2, \\cdots, b_k]$ \uff0c\u4f7f\u5f97 $b$ \u4e2d\u6bcf\u4e2a\u5143\u7d20\u4e92\u4e0d\u76f8\u540c\uff0c\u4e14\u6bcf\u4e24\u4e2a\u5143\u7d20\u7684\u5dee\u7684\u7edd\u5bf9\u503c\u4e5f\u5728 $b$ \u4e2d\uff0c $b$ \u7684\u5927\u5c0f\u4e0d\u5f97\u8d85\u8fc7 $300$ \u3002\n\n## \u8f93\u5165\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570 $t$ \uff0c\u4ee3\u8868\u6709\u6709 $t$ \u7ec4\u6d4b\u8bd5\u6570\u636e\uff0c\u6bcf\u7ec4\u6d4b\u8bd5\u6570\u636e\u4e2d\uff1a\n\u7b2c\u4e00\u884c\u4e00\u4e2a $n$ \u3002\n\u4e0b\u9762\u4e00\u884c $n$ \u4e2a\u6570\u4ee3\u8868\u6570\u7ec4 $a$ \u3002\n\n## \u8f93\u51fa\u683c\u5f0f\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u6d4b\u8bd5\u70b9\uff0c\u5982\u679c\u4e0d\u80fd\u6784\u9020\u51fa\u5408\u6cd5\u7684 $b$ \u8f93\u51fa `NO` \uff1b\n\n\u5982\u679c\u80fd\u6784\u9020\u51fa\u5408\u6cd5\u7684 $b$ \uff0c\u8f93\u51fa `YES` \uff0c\u5e76\u5728\u63a5\u4e0b\u6765\u4e24\u884c\u4e2d\uff0c\u7b2c\u4e00\u884c\u8f93\u51fa \u6570\u7ec4 $b$ \u7684\u5927\u5c0f $k$ \uff0c\u7b2c\u4e8c\u884c\u8f93\u51fa\u6570\u7ec4 $b$ \u3002\n\n`YES` \u548c\u00b7 `NO` \u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff0c\u6570\u7ec4 $b$ \u8f93\u51fa\u987a\u5e8f\u968f\u610f\u3002\n\n## \u6570\u636e\u8303\u56f4\n\n$1 \\le t \\le 50$\n\n$1 \\le n \\le 100$\n\n$-100 \\le a_i \\le 100$\n\n$n \\le k \\le 300$\n\n$-10^9 \\le b_i \\le 10^9$\n\nby XYY1411\n\n2021.06.07"
}