{
    "description": "New Year is coming in Tree World! In this world, as the name implies, there are $ n $ cities connected by $ n-1 $ roads, and for any two distinct cities there always exists a path between them. The cities are numbered by integers from 1 to $ n $ , and the roads are numbered by integers from $ 1 $ to $ n-1 $ . Let's define $ d(u,v) $ as total length of roads on the path between city $ u $ and city $ v $ .\n\nAs an annual event, people in Tree World repairs exactly one road per year. As a result, the length of one road decreases. It is already known that in the $ i $ -th year, the length of the $ r_{i} $ -th road is going to become $ w_{i} $ , which is shorter than its length before. Assume that the current year is year $ 1 $ .\n\nThree Santas are planning to give presents annually to all the children in Tree World. In order to do that, they need some preparation, so they are going to choose three distinct cities $ c_{1} $ , $ c_{2} $ , $ c_{3} $ and make exactly one warehouse in each city. The $ k $ -th ( $ 1<=k<=3 $ ) Santa will take charge of the warehouse in city $ c_{k} $ .\n\nIt is really boring for the three Santas to keep a warehouse alone. So, they decided to build an only-for-Santa network! The cost needed to build this network equals to $ d(c_{1},c_{2})+d(c_{2},c_{3})+d(c_{3},c_{1}) $ dollars. Santas are too busy to find the best place, so they decided to choose $ c_{1},c_{2},c_{3} $ randomly uniformly over all triples of distinct numbers from $ 1 $ to $ n $ . Santas would like to know the expected value of the cost needed to build the network.\n\nHowever, as mentioned, each year, the length of exactly one road decreases. So, the Santas want to calculate the expected after each length change. Help them to calculate the value.",
    "inputFormat": "The first line contains an integer $ n $ ( $ 3<=n<=10^{5} $ ) \u2014 the number of cities in Tree World.\n\nNext $ n-1 $ lines describe the roads. The $ i $ -th line of them ( $ 1<=i<=n-1 $ ) contains three space-separated integers $ a_{i} $ , $ b_{i} $ , $ l_{i} $ ( $ 1<=a_{i},b_{i}<=n $ , $ a_{i}\u2260b_{i} $ , $ 1<=l_{i}<=10^{3} $ ), denoting that the $ i $ -th road connects cities $ a_{i} $ and $ b_{i} $ , and the length of $ i $ -th road is $ l_{i} $ .\n\nThe next line contains an integer $ q $ ( $ 1<=q<=10^{5} $ ) \u2014 the number of road length changes.\n\nNext $ q $ lines describe the length changes. The $ j $ -th line of them ( $ 1<=j<=q $ ) contains two space-separated integers $ r_{j} $ , $ w_{j} $ ( $ 1<=r_{j}<=n-1 $ , $ 1<=w_{j}<=10^{3} $ ). It means that in the $ j $ -th repair, the length of the $ r_{j} $ -th road becomes $ w_{j} $ . It is guaranteed that $ w_{j} $ is smaller than the current length of the $ r_{j} $ -th road. The same road can be repaired several times.",
    "outputFormat": "Output $ q $ numbers. For each given change, print a line containing the expected cost needed to build the network in Tree World. The answer will be considered correct if its absolute and relative error doesn't exceed $ 10^{-6} $ .",
    "samples": [
        [
            "3\n2 3 5\n1 3 3\n5\n1 4\n2 2\n1 2\n2 1\n1 1\n",
            "14.0000000000\n12.0000000000\n8.0000000000\n6.0000000000\n4.0000000000\n"
        ],
        [
            "6\n1 5 3\n5 3 2\n6 1 7\n1 4 4\n5 2 3\n5\n1 2\n2 1\n3 5\n4 1\n5 2\n",
            "19.6000000000\n18.6000000000\n16.6000000000\n13.6000000000\n12.6000000000\n"
        ]
    ],
    "hint": "Consider the first sample. There are 6 triples: $ (1,2,3),(1,3,2),(2,1,3),(2,3,1),(3,1,2),(3,2,1) $ . Because $ n=3 $ , the cost needed to build the network is always $ d(1,2)+d(2,3)+d(3,1) $ for all the triples. So, the expected cost equals to $ d(1,2)+d(2,3)+d(3,1) $ .",
    "translation": "\u9898\u76ee\u63cf\u8ff0\n\u6811\u4e16\u754c\u7684\u65b0\u5e74\u5373\u5c06\u5230\u6765\uff01\u5728\u8fd9\u4e2a\u4e16\u754c\u4e0a\uff0c\u987e\u540d\u601d\u4e49\uff0c\u6709n\u4e2a\u57ce\u5e02\u88abn-1\u6761\u9053\u8def\u8fde\u63a5\uff0c\u5e76\u4e14\u4efb\u4f55\u4e24\u4e2a\u4e0d\u540c\u7684\u57ce\u5e02\u90fd\u5b58\u5728\u7740\u5b83\u4eec\u4e4b\u95f4\u7684\u8def\u5f84\u3002\u57ce\u5e02\u7684\u7f16\u53f7\u4e3a1~n\u7684\u6574\u6570\uff0c\u5e76\u4e14\u9053\u8def\u7684\u7f16\u53f7\u4e3a1~n-1\u7684\u6574\u6570\u3002\u8ba9\u6211\u4eec\u5b9a\u4e49d(u,v)\u4f5c\u4e3a\u57ce\u5e02u\u4e0e\u57ce\u5e02v\u4e4b\u95f4\u7684\u9053\u8def\u7684\u957f\u5ea6\u3002\n\n\u4f5c\u4e3a\u4e00\u9879\u5e74\u5ea6\u6d3b\u52a8\uff0c\u6811\u4e16\u754c\u7684\u4eba\u4eec\u6bcf\u5e74\u90fd\u8981\u4fee\u597d\u4e00\u6761\u8def\u3002\u7ed3\u679c\uff0c\u4e00\u6761\u9053\u8def\u7684\u957f\u5ea6\u51cf\u5c11\u4e86\u3002\u73b0\u5728\u5df2\u7ecf\u77e5\u9053\u4e86\u5728\u7b2ci\u5e74\uff0c\u7b2cri\u6761\u9053\u8def\u7684\u6743\u503c\u5c06\u53d8\u4e3awi,wi\u5c0f\u4e8e\u539f\u957f\u3002\n\n\u4e09\u4e2a\u5723\u8bde\u8001\u4eba\u6b63\u5728\u8ba1\u5212\u6bcf\u5e74\u7ed9\u6811\u4e16\u754c\u4e0a\u6240\u6709\u7684\u5b69\u5b50\u4eec\u793c\u7269\u3002\u4e3a\u4e86\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u4ed6\u4eec\u9700\u8981\u4e00\u4e9b\u51c6\u5907\uff0c\u6240\u4ee5\u4ed6\u4eec\u5c06\u4f1a\u9009\u62e9\u4e09\u4e2a\u4e0d\u540c\u7684\u57ce\u5e02c1,c2,c3\u5728\u6bcf\u4e2a\u57ce\u5e02\u5efa\u4e00\u4e2a\u4ed3\u5e93\u7b2ck\u4e2a\uff081<=k<=3\uff09\u5723\u8bde\u8001\u4eba\u5c06\u8d1f\u8d23ck\u4e2a\u57ce\u5e02\u7684\u4ed3\u5e93\u3002\n\n\u4e09\u4e2a\u5723\u8bde\u8001\u4eba\u72ec\u81ea\u770b\u7ba1\u4ed3\u5e93\u5b9e\u5728\u592a\u65e0\u804a\u4e86\u3002\u6240\u4ee5\uff0c\u4ed6\u4eec\u51b3\u5b9a\u5efa\u7acb\u4e00\u4e2a\u53ea\u4f9b\u5723\u8bde\u8001\u4eba\u7684\u7f51\u7edc\uff01\u5efa\u8fd9\u4e2a\u7f51\u7edc\u7684\u82b1\u8d39\u76f8\u5f53\u4e8ed(c1,c2)+d(c2,c3)+d(c3,c1) \u7f8e\u5143\u3002 \u5723\u8bde\u8001\u4eba\u592a\u5fd9\u4e86\u6240\u4ee5\u4e0d\u80fd\u627e\u5230\u6700\u597d\u7684\u57ce\u5e02\uff0c\u6240\u4ee5\u4ed6\u4eec\u51b3\u5b9a\u57281~n\u4e2d\u968f\u673a\u9009\u62e9\u4e09\u4e2a\u57ce\u5e02\u3002\u5723\u8bde\u8001\u4eba\u60f3\u77e5\u9053\u9700\u8981\u5efa\u7acb\u7f51\u7edc\u7684\u6210\u672c\u671f\u671b\u503c\u3002\n\n\u7136\u800c\uff0c\u5982\u4e0a\u6240\u8ff0\uff0c\u6bcf\u5e74\u4e00\u6761\u9053\u8def\u7684\u957f\u5ea6\u90fd\u4f1a\u51cf\u5c11\u3002\u6240\u4ee5\uff0c\u5723\u8bde\u8001\u4eba\u8981\u8ba1\u7b97\u6bcf\u6b21\u957f\u5ea6\u53d8\u5316\u540e\u7684\u9884\u671f\u3002\u5e2e\u52a9\u4ed6\u4eec\u8ba1\u7b97\uff01\n\n\u8f93\u5165\u683c\u5f0f\uff1a\n\u7b2c\u4e00\u884c \u4e00\u4e2a\u6570\u5b57n\n\n\u4e4b\u540en-1\u884c ai\uff0cbi\uff0cli\u8868\u793a\u9053\u8def \u7f16\u53f7\u4e3ai\u7684\u9053\u8def\u8fde\u63a5ai\uff0cbi\u4e24\u4e2a\u57ce\u5e02\uff0c\u9053\u8def\u957f\u5ea6\u4e3ali\n\n\u4e0b\u4e00\u884c \u4e00\u4e2a\u6570\u5b57q, \u8868\u793a\u9053\u8def\u7ef4\u4fee\u6b21\u6570\n\n\u4e4b\u540eq\u884c rj\uff0cwj\u8868\u793a\u7b2cj\u6b21\u7ef4\u4fee,\u5c06\u7b2crj\u6761\u9053\u8def\u7684\u957f\u5ea6\u53d8\u4e3a\u4e86wj \uff08\u4e00\u6761\u9053\u8def\u53ef\u4ee5\u88ab\u7ef4\u4fee\u591a\u6b21\uff09\n\n\u8f93\u51fa\u683c\u5f0f:\nq\u884c\uff1a\u5bf9\u4e8e\u6bcf\u6b21\u4fee\u6539\uff0c\u8f93\u51fa\u5728\u6811\u4e16\u754c\u91cc\u5efa\u7acb\u7f51\u7edc\u7684\u9884\u671f\u82b1\u8d39\u3002\u4fdd\u7559\u5c0f\u6570\u70b9\u540e\u516d\u4f4d\u3002\n\nTranslated by @jzzcjb"
}