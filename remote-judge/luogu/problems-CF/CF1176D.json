{
    "description": "Authors guessed an array $ a $ consisting of $ n $ integers; each integer is not less than $ 2 $ and not greater than $ 2 \\cdot 10^5 $ . You don't know the array $ a $ , but you know the array $ b $ which is formed from it with the following sequence of operations:\n\n1. Firstly, let the array $ b $ be equal to the array $ a $ ;\n2. Secondly, for each $ i $ from $ 1 $ to $ n $ : \n  - if $ a_i $ is a prime number, then one integer $ p_{a_i} $ is appended to array $ b $ , where $ p $ is an infinite sequence of prime numbers ( $ 2, 3, 5, \\dots $ );\n  - otherwise (if $ a_i $ is not a prime number), the greatest divisor of $ a_i $ which is not equal to $ a_i $ is appended to $ b $ ;\n3. Then the obtained array of length $ 2n $ is shuffled and given to you in the input.\n\nHere $ p_{a_i} $ means the $ a_i $ -th prime number. The first prime $ p_1 = 2 $ , the second one is $ p_2 = 3 $ , and so on.\n\nYour task is to recover any suitable array $ a $ that forms the given array $ b $ . It is guaranteed that the answer exists (so the array $ b $ is obtained from some suitable array $ a $ ). If there are multiple answers, you can print any.",
    "inputFormat": "The first line of the input contains one integer $ n $ ( $ 1 \\le n \\le 2 \\cdot 10^5 $ ) \u2014 the number of elements in $ a $ .\n\nThe second line of the input contains $ 2n $ integers $ b_1, b_2, \\dots, b_{2n} $ ( $ 2 \\le b_i \\le 2750131 $ ), where $ b_i $ is the $ i $ -th element of $ b $ . $ 2750131 $ is the $ 199999 $ -th prime number.",
    "outputFormat": "In the only line of the output print $ n $ integers $ a_1, a_2, \\dots, a_n $ ( $ 2 \\le a_i \\le 2 \\cdot 10^5 $ ) in any order \u2014 the array $ a $ from which the array $ b $ can be obtained using the sequence of moves given in the problem statement. If there are multiple answers, you can print any.",
    "samples": [
        [
            "3\n3 5 2 3 2 4\n",
            "3 4 2 "
        ],
        [
            "1\n2750131 199999\n",
            "199999 "
        ],
        [
            "1\n3 6\n",
            "6 "
        ]
    ],
    "hint": "",
    "translation": "\u4ece\u524d\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a$n$\u7684\u6570\u7ec4$a$\uff0c\u5176\u4e2d\u6bcf\u4e00\u4e2a\u6570\u90fd\u5728$2$\u5230$2\\cdot10^5$\u4e4b\u95f4\uff0c\u4f60\u4e0d\u77e5\u9053$a$\uff0c\u4f46\u662f\u4f60\u77e5\u9053\u53e6\u4e00\u4e2a\u957f\u5ea6\u4e3a$2n$\u7684\u6570\u7ec4$b$\uff0c$b$\u662f\u7531$a$\u751f\u6210\u7684\u3002\r\n\r\n\u751f\u6210\u65b9\u5f0f\u5982\u4e0b\uff1a\r\n\r\n\u9996\u5148\uff0c\u8ba9$b$\u7b49\u4e8e$a$\u3002\r\n\r\n\u7136\u540e\uff0c\u5bf9\u4e8e$a$\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570$a_i$\uff0c\u5982\u679c\u8fd9\u662f\u4e00\u4e2a\u8d28\u6570\uff0c\u90a3\u4e48\u5c31\u628a\u7b2c$a_i$\u5c0f\u7684\u8d28\u6570\u6dfb\u52a0\u5230$b$\u7684\u672b\u5c3e\uff0c\u5426\u5219\uff0c\u5c31\u628a$a_i$\u7684\u6700\u5927\u7684\u4e0d\u7b49\u4e8e$a_i$\u7684\u56e0\u5b50\u6dfb\u52a0\u5230$b$\u7684\u672b\u5c3e\u3002\r\n\r\n\u6700\u540e\u628a$b$\u6253\u4e71\u987a\u5e8f\u3002\r\n\r\n\u4f60\u9700\u8981\u627e\u5230\u4efb\u610f\u4e00\u7ec4\u5408\u6cd5\u7684$a$\uff0c\u4f7f\u5f97$a$\u53ef\u4ee5\u751f\u6210$b$\u3002"
}