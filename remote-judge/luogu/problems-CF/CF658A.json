{
    "description": "Limak and Radewoosh are going to compete against each other in the upcoming algorithmic contest. They are equally skilled but they won't solve problems in the same order.\n\nThere will be $ n $ problems. The $ i $ -th problem has initial score $ p_{i} $ and it takes exactly $ t_{i} $ minutes to solve it. Problems are sorted by difficulty \u2014 it's guaranteed that $ p_{i}&lt;p_{i+1} $ and $ t_{i}&lt;t_{i+1} $ .\n\nA constant $ c $ is given too, representing the speed of loosing points. Then, submitting the $ i $ -th problem at time $ x $ ( $ x $ minutes after the start of the contest) gives $ max(0,\\ p_{i}-c\u00b7x) $ points.\n\nLimak is going to solve problems in order $ 1,2,...,n $ (sorted increasingly by $ p_{i} $ ). Radewoosh is going to solve them in order $ n,n-1,...,1 $ (sorted decreasingly by $ p_{i} $ ). Your task is to predict the outcome \u2014 print the name of the winner (person who gets more points at the end) or a word \"Tie\" in case of a tie.\n\nYou may assume that the duration of the competition is greater or equal than the sum of all $ t_{i} $ . That means both Limak and Radewoosh will accept all $ n $ problems.",
    "inputFormat": "The first line contains two integers $ n $ and $ c $ ( $ 1<=n<=50,1<=c<=1000 $ ) \u2014 the number of problems and the constant representing the speed of loosing points.\n\nThe second line contains $ n $ integers $ p_{1},p_{2},...,p_{n} $ ( $ 1<=p_{i}<=1000,p_{i}&lt;p_{i+1} $ ) \u2014 initial scores.\n\nThe third line contains $ n $ integers $ t_{1},t_{2},...,t_{n} $ ( $ 1<=t_{i}<=1000,t_{i}&lt;t_{i+1} $ ) where $ t_{i} $ denotes the number of minutes one needs to solve the $ i $ -th problem.",
    "outputFormat": "Print \"Limak\" (without quotes) if Limak will get more points in total. Print \"Radewoosh\" (without quotes) if Radewoosh will get more points in total. Print \"Tie\" (without quotes) if Limak and Radewoosh will get the same total number of points.",
    "samples": [
        [
            "3 2\n50 85 250\n10 15 25\n",
            "Limak\n"
        ],
        [
            "3 6\n50 85 250\n10 15 25\n",
            "Radewoosh\n"
        ],
        [
            "8 1\n10 20 30 40 50 60 70 80\n8 10 58 63 71 72 75 76\n",
            "Tie\n"
        ]
    ],
    "hint": "In the first sample, there are $ 3 $ problems. Limak solves them as follows:\n\n1. Limak spends $ 10 $ minutes on the $ 1 $ -st problem and he gets $ 50-c\u00b710=50-2\u00b710=30 $ points.\n2. Limak spends $ 15 $ minutes on the $ 2 $ -nd problem so he submits it $ 10+15=25 $ minutes after the start of the contest. For the $ 2 $ -nd problem he gets $ 85-2\u00b725=35 $ points.\n3. He spends $ 25 $ minutes on the $ 3 $ -rd problem so he submits it $ 10+15+25=50 $ minutes after the start. For this problem he gets $ 250-2\u00b750=150 $ points.\n\nSo, Limak got $ 30+35+150=215 $ points.\n\nRadewoosh solves problem in the reversed order:\n\n1. Radewoosh solves $ 3 $ -rd problem after $ 25 $ minutes so he gets $ 250-2\u00b725=200 $ points.\n2. He spends $ 15 $ minutes on the $ 2 $ -nd problem so he submits it $ 25+15=40 $ minutes after the start. He gets $ 85-2\u00b740=5 $ points for this problem.\n3. He spends $ 10 $ minutes on the $ 1 $ -st problem so he submits it $ 25+15+10=50 $ minutes after the start. He gets $ max(0,50-2\u00b750)=max(0,-50)=0 $ points.\n\nRadewoosh got $ 200+5+0=205 $ points in total. Limak has $ 215 $ points so Limak wins.\n\nIn the second sample, Limak will get $ 0 $ points for each problem and Radewoosh will first solve the hardest problem and he will get $ 250-6\u00b725=100 $ points for that. Radewoosh will get $ 0 $ points for other two problems but he is the winner anyway.\n\nIn the third sample, Limak will get $ 2 $ points for the $ 1 $ -st problem and $ 2 $ points for the $ 2 $ -nd problem. Radewoosh will get $ 4 $ points for the $ 8 $ -th problem. They won't get points for other problems and thus there is a tie because $ 2+2=4 $ .",
    "translation": "## \u9898\u76ee\u63cf\u8ff0\nLimak \u548c Radewoosh \u5c06\u8981\u7ade\u4e89\u53c2\u52a0\u4e00\u573a\u7b97\u6cd5\u6bd4\u8d5b\u3002\u4ed6\u4eec\u5b9e\u529b\u76f8\u5f53\uff0c\u4f46\u4e0d\u4ee5\u540c\u6837\u7684\u987a\u5e8f\u7b54\u9898\u3002\n\n\u6709 $n$ \u4e2a\u95ee\u9898\u3002\u7b2c $i$ \u4e2a\u95ee\u9898\u6709 $p_i$ \u5206\uff0c\u9700\u8981 $t_i$ \u5206\u949f\u89e3\u51fa\u3002\u9898\u76ee\u6309\u96be\u5ea6\u6392\u5e8f\uff0c\u4e5f\u5c31\u662f\u8bf4 $p_i<p_{i+1},t_i<t_{i+1}$\u3002\n\n\u53e6\u7ed9\u51fa\u5e38\u91cf $c$ \uff0c\u4ee3\u8868\u5206\u6570\u6263\u9664\u7684\u901f\u5ea6\u3002\u5728 $x$ \u5206\u949f\u65f6\u4e0a\u4f20\u7684\u9898\u76ee $i$ \uff08$x$ \u6307\u6bd4\u8d5b\u5f00\u59cb\u7684\u65f6\u95f4\uff09\uff0c\u53ef\u4ee5\u5f97\u5230 $max(0,p_i-c\\times x)$ \u5206\u3002\n\nLimak \u6309\u7167\u96be\u5ea6\u5347\u5e8f\u89e3\u9898\uff08\u4ece\u6613\u5230\u96be\uff09\u3002Radewoosh \u6309\u7167\u96be\u5ea6\u964d\u5e8f\u89e3\u9898\uff08\u4ece\u96be\u5230\u6613\uff09\u3002\n\n\u4f60\u7684\u4efb\u52a1\u662f\u8f93\u51fa\u8d62\u5bb6\u7684\u540d\u5b57\uff0c\u5982\u679c\u662f\u5e73\u5c40\u5219\u8f93\u51fa `Tie`\u3002\n\n\u4f60\u53ef\u4ee5\u5047\u8bbe\u65f6\u95f4\u5927\u4e8e\u6216\u7b49\u4e8e $t_i$ \u7684\u603b\u548c\uff0c\u4e5f\u5c31\u662f\u8bf4\u4ed6\u4eec\u6709\u65f6\u95f4\u505a\u5b8c\u6240\u6709\u7684\u9898\u76ee\u3002\n## \u8f93\u5165\u683c\u5f0f\n\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 $n$ \u548c $c$ ($1\\le n\\le 50,1\\le c\\le 1000$)\uff0c\u4ee3\u8868\u9898\u76ee\u6570\u91cf\u548c\u6263\u5206\u901f\u5ea6\u3002\n\n\u7b2c\u4e8c\u884c\u5305\u542b $n$ \u4e2a\u6574\u6570$p_1,p_2,p_3,...,p_n$\uff0c\u4ee3\u8868\u9898\u76ee\u5206\u503c\n\n\u7b2c\u4e09\u884c\u5305\u542b $n$ \u4e2a\u6574\u6570$t_1,t_2,t_3,...,t_n$\uff0c\u4ee3\u8868\u9898\u76ee\u89e3\u7b54\u65f6\u95f4\n\n## \u8f93\u51fa\u683c\u5f0f\n\u5982\u679c Limak \u8d62\u4e86\uff0c\u8f93\u51fa`Limak`\uff1b\n\n\u5982\u679c Radewoosh \u8d62\u4e86\uff0c\u8f93\u51fa`Radewoosh`\uff1b\n\n\u5982\u679c\u5e73\u5c40\uff0c\u8f93\u51fa`Tie`\u3002\n\nTranslated by TianLuen"
}