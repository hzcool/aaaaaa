{
    "description": "Automatic Bakery of Cyberland (ABC) recently bought an $ n\u00d7m $ rectangle table. To serve the diners, ABC placed seats around the table. The size of each seat is equal to a unit square, so there are $ 2(n+m) $ seats in total.\n\nABC placed conveyor belts on each unit square on the table. There are three types of conveyor belts: \"^\", \"<\" and \">\". A \"^\" belt can bring things upwards. \"<\" can bring leftwards and \">\" can bring rightwards.\n\nLet's number the rows with $ 1 $ to $ n $ from top to bottom, the columns with $ 1 $ to $ m $ from left to right. We consider the seats above and below the top of the table are rows $ 0 $ and $ n+1 $ respectively. Also we define seats to the left of the table and to the right of the table to be column $ 0 $ and $ m+1 $ . Due to the conveyor belts direction restriction there are currently no way for a diner sitting in the row $ n+1 $ to be served.\n\nGiven the initial table, there will be $ q $ events in order. There are two types of events:\n\n- \"A $ x $ $ y $ \" means, a piece of bread will appear at row $ x $ and column $ y $ (we will denote such position as $ (x,y) $ ). The bread will follow the conveyor belt, until arriving at a seat of a diner. It is possible that the bread gets stuck in an infinite loop. Your task is to simulate the process, and output the final position of the bread, or determine that there will be an infinite loop.\n- \"C $ x $ $ y $ $ c $ \" means that the type of the conveyor belt at $ (x,y) $ is changed to $ c $ .\n\nQueries are performed separately meaning that even if the bread got stuck in an infinite loop, it won't affect further queries.",
    "inputFormat": "The first line of input contains three integers $ n $ , $ m $ and $ q $ ( $ 1<=n<=10^{5},1<=m<=10,1<=q<=10^{5} $ ), separated by a space.\n\nNext $ n $ lines, each line contains $ m $ characters, describing the table. The characters can only be one of \"<^>\".\n\nNext $ q $ lines, each line describes an event. The format is \"C x y c\" or \"A x y\" (Consecutive elements are separated by a space). It's guaranteed that $ 1<=x<=n,1<=y<=m $ . $ c $ is a character from the set \"<^>\".\n\nThere are at most $ 10000 $ queries of \"C\" type.",
    "outputFormat": "For each event of type \"A\", output two integers $ tx $ , $ ty $ in a line, separated by a space, denoting the destination of $ (x,y) $ is $ (tx,ty) $ .\n\nIf there is an infinite loop, you should output $ tx=ty=-1 $ .",
    "samples": [
        [
            "2 2 3\n>>\n^^\nA 2 1\nC 1 2 <\nA 2 1",
            "1 3\n-1 -1\n"
        ],
        [
            "4 5 7\n><<^<\n^<^^>\n>>>^>\n>^>>^\nA 3 1\nA 2 2\nC 1 4 <\nA 3 1\nC 1 2 ^\nA 3 1\nA 2 2",
            "0 4\n-1 -1\n-1 -1\n0 2\n0 2\n"
        ]
    ],
    "hint": "For the first sample:\n\nIf the bread goes from $ (2,1) $ , it will go out of the table at $ (1,3) $ .\n\nAfter changing the conveyor belt of $ (1,2) $ to \"<\", when the bread goes from $ (2,1) $ again, it will get stuck at \"><\", so output is $ (-1,-1) $ .",
    "translation": "\u6709\u4e00\u4e2a$ n\u00d7m $\u7684\u5730\u56fe\uff0c\u4e0a\u9762\u6709\u4e09\u79cd\u7b26\u53f7'<^>' \u5206\u522b\u8868\u793a\u5411\u5de6\uff0c\u5411\u4e0a\uff0c\u5411\u53f3\n\n\u6709\u4e24\u79cd\u64cd\u4f5c\uff0cA X Y\u8be2\u95ee\u4ece\u4e00\u4e2a\u70b9\uff08X\uff0cY\uff09\u5f00\u59cb\u6700\u7ec8\u4f1a\u8d70\u5230\u54ea\u4e2a\u70b9\u6216\u8005\u6b7b\u5faa\u73af \uff0c C X Y ch \u8868\u793a\u5c06\u5730\u56fe\u4e0a\uff08X\uff0cY\uff09\u7684\u7b26\u53f7\u6362\u6210ch\n\n\u6570\u636e\u8303\u56f4$ 1 \\leq n \\leq 10^5 $\uff0c$ 1 \\leq m \\leq 10 $\uff0cC\u64cd\u4f5c\u6700\u591a$ 10000 $\u6b21"
}