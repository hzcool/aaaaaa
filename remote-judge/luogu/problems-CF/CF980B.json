{
    "description": "The city of Fishtopia can be imagined as a grid of $ 4 $ rows and an odd number of columns. It has two main villages; the first is located at the top-left cell $ (1,1) $ , people who stay there love fishing at the Tuna pond at the bottom-right cell $ (4, n) $ . The second village is located at $ (4, 1) $ and its people love the Salmon pond at $ (1, n) $ .\n\nThe mayor of Fishtopia wants to place $ k $ hotels in the city, each one occupying one cell. To allow people to enter the city from anywhere, hotels should not be placed on the border cells.\n\nA person can move from one cell to another if those cells are not occupied by hotels and share a side.\n\nCan you help the mayor place the hotels in a way such that there are equal number of shortest paths from each village to its preferred pond?",
    "inputFormat": "The first line of input contain two integers, $ n $ and $ k $ ( $ 3 \\leq n \\leq 99 $ , $ 0 \\leq k \\leq 2\\times(n-2) $ ), $ n $ is odd, the width of the city, and the number of hotels to be placed, respectively.",
    "outputFormat": "Print \"YES\", if it is possible to place all the hotels in a way that satisfies the problem statement, otherwise print \"NO\".\n\nIf it is possible, print an extra $ 4 $ lines that describe the city, each line should have $ n $ characters, each of which is \"\\#\" if that cell has a hotel on it, or \".\" if not.",
    "samples": [
        [
            "7 2\n",
            "YES\n.......\n.#.....\n.#.....\n.......\n"
        ],
        [
            "5 3\n",
            "YES\n.....\n.###.\n.....\n.....\n"
        ]
    ],
    "hint": "",
    "translation": "## \u9898\u76ee\u63cf\u8ff0\r\n\r\n\u9c7c\u6258\u90a6\u5e02\u53ef\u4ee5\u60f3\u8c61\u6210\u4e00\u4e2a4\u884c\u4e14\u6bcf\u884c\u5305\u542bn\u4e2a\u5947\u6570\u7684\u7f51\u683c\u3002\r\n\r\n\u5b83\u6709\u4e24\u4e2a\u4e3b\u8981\u7684\u6751\u5e84\uff1a\u7b2c\u4e00\u4e2a\u4f4d\u4e8e\u5de6\u4e0a\u65b9\u7684\u65b9\u683c\uff081\uff0c1\uff09\uff0c\u4f4f\u5728\u90a3\u91cc\u7684\u4eba\u559c\u6b22\u5728\u53f3\u4e0b\u65b9\u7684\u65b9\u683c\uff084\uff0cn\uff09\u7684\u91d1\u67aa\u9c7c\u6c60\u5858\u9493\u9c7c\u3002\u7b2c\u4e8c\u4e2a\u6751\u5e84\u4f4d\u4e8e\uff084\uff0c1\uff09\uff0c\u4eba\u4eec\u559c\u6b22\uff081\uff0cn\uff09\u7684\u9c91\u9c7c\u6c60\u5858\u3002\r\n\r\n\u9c7c\u6258\u90a6\u5e02\u5e02\u5e02\u957f\u60f3\u5728\u8be5\u5e02\u8bbe\u7acbk\u5bb6\u9152\u5e97\uff0c\u6bcf\u5bb6\u90fd\u5360\u636e\u4e00\u4e2a\u65b9\u683c\u3002\u4e3a\u4e86\u8ba9\u4eba\u4eec\u53ef\u4ee5\u4ece\u4efb\u4f55\u5730\u65b9\u8fdb\u5165\u57ce\u5e02\uff0c\u9152\u5e97\u4e0d\u5e94\u8bbe\u5728\u8fb9\u7f18\u3002\r\n\r\n\u5982\u679c\u4e24\u4e2a\u65b9\u683c\u5747\u6ca1\u6709\u88ab\u65c5\u9986\u5360\u636e\u5e76\u5171\u7528\u4e00\u6761\u8fb9\uff0c\u4e00\u4e2a\u4eba\u53ef\u4ee5\u4ece\u4e00\u4e2a\u65b9\u683c\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u65b9\u683c\u3002\r\n\r\n\u4f60\u80fd\u5e2e\u52a9\u5e02\u957f\u628a\u65c5\u9986\u5b89\u7f6e\u5728\u4e00\u4e2a\u5730\u65b9\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u6751\u5b50\u7684\u4eba\u90fd\u6709\u76f8\u540c\u6570\u91cf\u7684\u6700\u77ed\u8def\u5f84\u5230\u4ed6\u4eec\u7684\u9996\u9009\u6c60\u5858\u5417\uff1f \r\n\r\n## \u8f93\u5165\u683c\u5f0f\r\n\r\n\u8f93\u5165\u7684\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570\uff0cn\u548ck\uff083\u2264n\u226499\uff0c0\u2264k\u22642\u00d7\uff08n\u22122\uff09\uff0cn\u4e3a\u5947\u6570\uff09\u3001\u57ce\u5e02\u5bbd\u5ea6\u548c\u8981\u5165\u4f4f\u7684\u9152\u5e97\u6570\u91cf\u3002\r\n\r\n## \u8f93\u51fa\u683c\u5f0f\r\n\r\n\u5982\u679c\u53ef\u4ee5\u4ee5\u6ee1\u8db3\u8981\u6c42\u7684\u65b9\u5f0f\u653e\u7f6e\u6240\u6709\u9152\u5e97\uff0c\u8f93\u51fa\u201cYES\u201d\uff0c\u5426\u5219\u8f93\u51fa\u201cNO\u201d\u3002\r\n\u5982\u679c\u53ef\u4ee5\u7684\u8bdd\uff0c\u518d\u8f93\u51fa4\u884c\u6765\u63cf\u8ff0\u8fd9\u4e2a\u57ce\u5e02\uff0c\u6bcf\u884cn\u4e2a\u5b57\u7b26\u3002\u5982\u679c\u8fd9\u4e2a\u5355\u5143\u683c\u6709\u9152\u5e97\u7684\u8bdd\uff0c\u8f93\u51fa\u201c#\u201d\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5219\u8f93\u51fa\u201c.\u201d\u3002\r\n"
}