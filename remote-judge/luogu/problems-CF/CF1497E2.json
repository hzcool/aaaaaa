{
    "description": "This is the hard version of the problem. The only difference is that in this version $ 0 \\leq k \\leq 20 $ .\n\nThere is an array $ a_1, a_2, \\ldots, a_n $ of $ n $ positive integers. You should divide it into a minimal number of continuous segments, such that in each segment there are no two numbers (on different positions), whose product is a perfect square.\n\nMoreover, it is allowed to do at most $ k $ such operations before the division: choose a number in the array and change its value to any positive integer.\n\nWhat is the minimum number of continuous segments you should use if you will make changes optimally?",
    "inputFormat": "The first line contains a single integer $ t $ $ (1 \\le t \\le 1000) $ \u2014 the number of test cases.\n\nThe first line of each test case contains two integers $ n $ , $ k $ ( $ 1 \\le n \\le 2 \\cdot 10^5 $ , $ 0 \\leq k \\leq 20 $ ).\n\nThe second line of each test case contains $ n $ integers $ a_1, a_2, \\ldots, a_n $ ( $ 1 \\le a_i \\le 10^7 $ ).\n\nIt's guaranteed that the sum of $ n $ over all test cases does not exceed $ 2 \\cdot 10^5 $ .",
    "outputFormat": "For each test case print a single integer \u2014 the answer to the problem.",
    "samples": [
        [
            "3\n5 2\n18 6 2 4 1\n11 4\n6 2 2 8 9 1 3 6 3 9 7\n1 0\n1",
            "1\n2\n1"
        ]
    ],
    "hint": "In the first test case it is possible to change the array this way: $ [\\underline{3}, 6, 2, 4, \\underline{5}] $ (changed elements are underlined). After that the array does not need to be divided, so the answer is $ 1 $ .\n\nIn the second test case it is possible to change the array this way: $ [6, 2, \\underline{3}, 8, 9, \\underline{5}, 3, 6, \\underline{10}, \\underline{11}, 7] $ . After that such division is optimal:\n\n- $ [6, 2, 3] $\n- $ [8, 9, 5, 3, 6, 10, 11, 7] $",
    "translation": "\u6570\u7ec4 $a$ \u7531 $n$ \u4e2a\u6b63\u6574\u6570\u6784\u6210\u3002\u4f60\u9700\u8981\u5c06\u5b83\u4eec\u5206\u5272\u6210\u6700\u5c0f\u6570\u91cf\u7684\u8fde\u7eed\u5b50\u6bb5\uff0c\u4f7f\u5f97\u6bcf\u4e00\u4e2a\u5b50\u6bb5\u4e2d\u7684\u4efb\u610f\u4e24\u4e2a\u6570\uff08\u4e0d\u540c\u4f4d\u7f6e\uff09\u7684\u4e58\u79ef\u4e0d\u4e3a\u5b8c\u5168\u5e73\u65b9\u6570\u3002\n\n\u9664\u6b64\u4e4b\u5916\uff0c\u4f60\u88ab\u5141\u8bb8\u5728\u5206\u5272\u4e4b\u524d\u8fdb\u884c\u6700\u591a $k$ \u6b21\u4fee\u6539\u64cd\u4f5c\u3002\n\n\u5728\u4e00\u6b21\u4fee\u6539\u64cd\u4f5c\u4e2d\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u6570\u7ec4\u4e2d\u7684\u67d0\u4e2a\u4f4d\u7f6e\u7684\u6570\uff0c\u5c06\u8be5\u4f4d\u7f6e\u7684\u6570\u53d8\u4e3a\u4efb\u610f\u6b63\u6574\u6570\u3002\n\n\u8bf7\u95ee\u8fde\u7eed\u5b50\u6bb5\u7684\u6700\u5c0f\u6570\u91cf\u662f\u591a\u5c11\uff08\u5728\u6700\u591a $k$ \u6b21\u64cd\u4f5c\u540e\uff09\uff1f"
}