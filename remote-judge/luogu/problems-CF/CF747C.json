{
    "description": "There are $ n $ servers in a laboratory, each of them can perform tasks. Each server has a unique id \u2014 integer from $ 1 $ to $ n $ .\n\nIt is known that during the day $ q $ tasks will come, the $ i $ -th of them is characterized with three integers: $ t_{i} $ \u2014 the moment in seconds in which the task will come, $ k_{i} $ \u2014 the number of servers needed to perform it, and $ d_{i} $ \u2014 the time needed to perform this task in seconds. All $ t_{i} $ are distinct.\n\nTo perform the $ i $ -th task you need $ k_{i} $ servers which are unoccupied in the second $ t_{i} $ . After the servers begin to perform the task, each of them will be busy over the next $ d_{i} $ seconds. Thus, they will be busy in seconds $ t_{i},t_{i}+1,...,t_{i}+d_{i}-1 $ . For performing the task, $ k_{i} $ servers with the smallest ids will be chosen from all the unoccupied servers. If in the second $ t_{i} $ there are not enough unoccupied servers, the task is ignored.\n\nWrite the program that determines which tasks will be performed and which will be ignored.",
    "inputFormat": "The first line contains two positive integers $ n $ and $ q $ ( $ 1<=n<=100 $ , $ 1<=q<=10^{5} $ ) \u2014 the number of servers and the number of tasks.\n\nNext $ q $ lines contains three integers each, the $ i $ -th line contains integers $ t_{i} $ , $ k_{i} $ and $ d_{i} $ ( $ 1<=t_{i}<=10^{6} $ , $ 1<=k_{i}<=n $ , $ 1<=d_{i}<=1000 $ ) \u2014 the moment in seconds in which the $ i $ -th task will come, the number of servers needed to perform it, and the time needed to perform this task in seconds. The tasks are given in a chronological order and they will come in distinct seconds.",
    "outputFormat": "Print $ q $ lines. If the $ i $ -th task will be performed by the servers, print in the $ i $ -th line the sum of servers' ids on which this task will be performed. Otherwise, print -1.",
    "samples": [
        [
            "4 3\n1 3 2\n2 2 1\n3 4 3\n",
            "6\n-1\n10\n"
        ],
        [
            "3 2\n3 2 3\n5 1 2\n",
            "3\n3\n"
        ],
        [
            "8 6\n1 3 20\n4 2 1\n6 5 5\n10 1 1\n15 3 6\n21 8 8\n",
            "6\n9\n30\n-1\n15\n36\n"
        ]
    ],
    "hint": "In the first example in the second $ 1 $ the first task will come, it will be performed on the servers with ids $ 1 $ , $ 2 $ and $ 3 $ (the sum of the ids equals $ 6 $ ) during two seconds. In the second $ 2 $ the second task will come, it will be ignored, because only the server $ 4 $ will be unoccupied at that second. In the second $ 3 $ the third task will come. By this time, servers with the ids $ 1 $ , $ 2 $ and $ 3 $ will be unoccupied again, so the third task will be done on all the servers with the ids $ 1 $ , $ 2 $ , $ 3 $ and $ 4 $ (the sum of the ids is $ 10 $ ).\n\nIn the second example in the second $ 3 $ the first task will come, it will be performed on the servers with ids $ 1 $ and $ 2 $ (the sum of the ids is $ 3 $ ) during three seconds. In the second $ 5 $ the second task will come, it will be performed on the server $ 3 $ , because the first two servers will be busy performing the first task.",
    "translation": "\u4e00\u5171\u6709 n \u4e2a\u670d\u52a1\u5668\uff0c\u7f16\u53f7\u4ece 1 \u5230 n\uff0c\u6709 q \u4e2a\u4efb\u52a1\uff1b \u6bcf\u4e2a\u4efb\u52a1\u5728 t[i] \u79d2\u7684\u65f6\u95f4\u6536\u5230\uff0c\u9700\u8981 k[i] \u53f0\u670d\u52a1\u5668\uff0c\u6bcf\u53f0\u4f1a\u5360\u7528 d[i] \u79d2\u7684\u65f6\u95f4\uff1b\n\n\u95ee\u9898\uff1a\u5f53\u6bcf\u4e2a\u4efb\u52a1\u5230\u8fbe\u65f6\uff0c\u662f\u5426\u6709\u8db3\u591f\u7684\u673a\u5668\u5b8c\u6210\u4efb\u52a1\uff1b \u5982\u679c\u53ef\u4ee5\u5b8c\u6210\uff0c\u5219\u9009\u62e9\u5e8f\u53f7\u6700\u5c0f\u7684\u673a\u5668\uff0c\u8f93\u51fa\u673a\u5668\u7684\u5e8f\u53f7\u548c\uff1b \u5982\u679c\u4e0d\u80fd\u5b8c\u6210\uff0c\u5219\u8f93\u51fa -1\u3002"
}