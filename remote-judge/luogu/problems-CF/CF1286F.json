{
    "description": "To defeat Lord Voldemort, Harry needs to destroy all horcruxes first. The last horcrux is an array $ a $ of $ n $ integers, which also needs to be destroyed. The array is considered destroyed is all its elements are zeroes. To destroy the array, Harry can perform two types of operations:\n\n1. choose an index $ i $ ( $ 1 \\le i \\le n $ ), an integer $ x $ , and subtract $ x $ from $ a_i $ .\n2. choose two indices $ i $ and $ j $ ( $ 1 \\le i, j \\le n; i \\ne j $ ), an integer $ x $ , and subtract $ x $ from $ a_i $ and $ x + 1 $ from $ a_j $ .\n\nNote that $ x $ does not have to be positive.\n\n![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1286F/031ef3236899050487554337aedf48f35b14685c.png)Harry is in a hurry, please help him to find the minimum number of operations required to destroy the array and exterminate Lord Voldemort.",
    "inputFormat": "The first line contains a single integer $ n $ \u2014 the size of the array $ a $ ( $ 1 \\le n \\le 20 $ ).\n\nThe following line contains $ n $ integers $ a_1, a_2, \\ldots, a_n $ \u2014 array elements ( $ -10^{15} \\le a_i \\le 10^{15} $ ).",
    "outputFormat": "Output a single integer \u2014 the minimum number of operations required to destroy the array $ a $ .",
    "samples": [
        [
            "3\n1 10 100",
            "3"
        ],
        [
            "3\n5 3 -2",
            "2"
        ],
        [
            "1\n0",
            "0"
        ]
    ],
    "hint": "In the first example one can just apply the operation of the first kind three times.\n\nIn the second example, one can apply the operation of the second kind two times: first, choose $ i = 2, j = 1, x = 4 $ , it transforms the array into $ (0, -1, -2) $ , and then choose $ i = 3, j = 2, x = -2 $ to destroy the array.\n\nIn the third example, there is nothing to be done, since the array is already destroyed.",
    "translation": "## \u9898\u76ee\u63cf\u8ff0\r\n\r\n\u5047\u8bbe\u6709\u4e00\u4e2a\u5305\u542b $n$ \u4e2a\u5143\u7d20\u7684\u6570\u7ec4 $a$ \uff0c\u73b0\u5728\u9700\u8981\u628a\u6b64\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u53d8\u4e3a $0$ \u3002\r\n\r\n\u53ef\u4ee5\u8fdb\u884c\u7684\u64cd\u4f5c\u6709\uff1a\r\n\r\n- \u9009\u5b9a\u4e24\u4e2a\u6570 $i$ \u548c $x$ \uff0c\u7136\u540e\u628a $a_i$ \u51cf\u53bb $x$ \u3002\uff08\u6ce8\u610f\uff0c $x$ \u53ef\u4ee5\u662f\u8d1f\u6570\uff09\r\n- \u9009\u5b9a\u4e09\u4e2a\u6570 $i,j$ \u548c $x$ \uff0c\u7136\u540e\u628a $a_i$ \u51cf\u53bb $x$ \uff0c\u628a $a_j$ \u51cf\u53bb $x+1$ \u3002\r\n\r\n\u8bf7\u8f93\u51fa\u6700\u5c11\u7684\u64cd\u4f5c\u6b21\u6570\u3002\r\n\r\n## \u8f93\u5165\u683c\u5f0f\r\n\r\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u6b63\u6574\u6570 $n$ \uff0c\u4ee3\u8868\u6570\u7ec4\u5927\u5c0f\u3002\r\n\r\n\u7b2c\u4e8c\u884c\uff0c $n$ \u4e2a\u6b63\u6574\u6570\u5206\u522b\u4ee3\u8868 $a_1,a_2,a_3,\\dots,a_{n-1},a_n$\u3002\r\n\r\n\uff08\u6ca1\u9519\uff0c $i,j,x$ \u4f60\u81ea\u5df1\u5b9a\uff09\r\n\r\n## \u8f93\u51fa\u683c\u5f0f\r\n\r\n\u4e00\u884c\u4e00\u4e2a\u6b63\u6574\u6570\u8868\u793a\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\u3002\r\n\r\n## \u8bf4\u660e/\u63d0\u793a\r\n\r\n\u5bf9\u4e8e$100\\%$\u7684\u6570\u636e\uff0c$-10^{15}\\le a_i\\le10^{15},1\\le n\\le 20$\r\n\r\n### \u6837\u4f8b\u89e3\u91ca\r\n\r\n**\u6837\u4f8b#1** \r\n\r\n\u53ea\u80fd\u5c06\u7b2c\u4e00\u79cd\u64cd\u4f5c\u6267\u884c\u4e09\u6b21\u3002\r\n\r\n**\u6837\u4f8b#2**\r\n\r\n\u7b2c\u4e00\u6b65\uff0c\u4ee4$i=2,j=1,x=4$\uff0c\u6570\u7ec4\u53d8\u6210$\\{0,-1,-2\\}$\uff1b\r\n\r\n\u7b2c\u4e8c\u6b65\uff0c\u4ee4$i=3,j=2,x=-2$\uff0c\u6570\u7ec4\u53d8\u6210$\\{0,0,0\\}$\uff0c\u64cd\u4f5c\u5b8c\u6bd5\u3002\r\n\r\n**\u6837\u4f8b#3**\r\n\r\n\u4e0d\u5fc5\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\u3002"
}