{
    "description": "Roman planted a tree consisting of $ n $ vertices. Each vertex contains a lowercase English letter. Vertex $ 1 $ is the root of the tree, each of the $ n-1 $ remaining vertices has a parent in the tree. Vertex is connected with its parent by an edge. The parent of vertex $ i $ is vertex $ p_{i} $ , the parent index is always less than the index of the vertex (i.e., $ p_{i}&lt;i $ ).\n\nThe depth of the vertex is the number of nodes on the path from the root to $ v $ along the edges. In particular, the depth of the root is equal to $ 1 $ .\n\nWe say that vertex $ u $ is in the subtree of vertex $ v $ , if we can get from $ u $ to $ v $ , moving from the vertex to the parent. In particular, vertex $ v $ is in its subtree.\n\nRoma gives you $ m $ queries, the $ i $ -th of which consists of two numbers $ v_{i} $ , $ h_{i} $ . Let's consider the vertices in the subtree $ v_{i} $ located at depth $ h_{i} $ . Determine whether you can use the letters written at these vertices to make a string that is a palindrome. The letters that are written in the vertexes, can be rearranged in any order to make a palindrome, but all letters should be used.",
    "inputFormat": "The first line contains two integers $ n $ , $ m $ ( $ 1<=n,m<=500000 $ ) \u2014 the number of nodes in the tree and queries, respectively.\n\nThe following line contains $ n-1 $ integers $ p_{2},p_{3},...,p_{n} $ \u2014 the parents of vertices from the second to the $ n $ -th ( $ 1<=p_{i}&lt;i $ ).\n\nThe next line contains $ n $ lowercase English letters, the $ i $ -th of these letters is written on vertex $ i $ .\n\nNext $ m $ lines describe the queries, the $ i $ -th line contains two numbers $ v_{i} $ , $ h_{i} $ ( $ 1<=v_{i},h_{i}<=n $ ) \u2014 the vertex and the depth that appear in the $ i $ -th query.",
    "outputFormat": "Print $ m $ lines. In the $ i $ -th line print \"Yes\" (without the quotes), if in the $ i $ -th query you can make a palindrome from the letters written on the vertices, otherwise print \"No\" (without the quotes).",
    "samples": [
        [
            "6 5\n1 1 1 3 3\nzacccd\n1 1\n3 3\n4 1\n6 1\n1 2\n",
            "Yes\nNo\nYes\nYes\nYes\n"
        ]
    ],
    "hint": "String $ s $ is a palindrome if reads the same from left to right and from right to left. In particular, an empty string is a palindrome.\n\nClarification for the sample test.\n\nIn the first query there exists only a vertex 1 satisfying all the conditions, we can form a palindrome \"z\".\n\nIn the second query vertices 5 and 6 satisfy condititions, they contain letters \"\u0441\" and \"d\" respectively. It is impossible to form a palindrome of them.\n\nIn the third query there exist no vertices at depth 1 and in subtree of 4. We may form an empty palindrome.\n\nIn the fourth query there exist no vertices in subtree of 6 at depth 1. We may form an empty palindrome.\n\nIn the fifth query there vertices 2, 3 and 4 satisfying all conditions above, they contain letters \"a\", \"c\" and \"c\". We may form a palindrome \"cac\".",
    "translation": "\u7b80\u5316\u7248:\n\n\u7ed9\u5b9a\u4e00\u4e2a\u4ee5 $1$ \u4e3a\u6839\u7684 $n$ \u4e2a\u7ed3\u70b9\u7684\u6811\uff0c\u6bcf\u4e2a\u70b9\u4e0a\u6709\u4e00\u4e2a\u5b57\u6bcd\uff08`a`-`z`\uff09\uff0c\u6bcf\u4e2a\u70b9\u7684\u6df1\u5ea6\u5b9a\u4e49\u4e3a\u8be5\u8282\u70b9\u5230 $1$ \u53f7\u7ed3\u70b9\u8def\u5f84\u4e0a\u7684\u70b9\u6570\u3002\u6bcf\u6b21\u8be2\u95ee $a, b$ \u67e5\u8be2\u4ee5 $a$ \u4e3a\u6839\u7684\u5b50\u6811\u5185\u6df1\u5ea6\u4e3a $b$ \u7684\u7ed3\u70b9\u4e0a\u7684\u5b57\u6bcd\u91cd\u65b0\u6392\u5217\u4e4b\u540e\u662f\u5426\u80fd\u6784\u6210\u56de\u6587\u4e32\u3002"
}