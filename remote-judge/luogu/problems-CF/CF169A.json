{
    "description": "Petya and Vasya are brothers. Today is a special day for them as their parents left them home alone and commissioned them to do $ n $ chores. Each chore is characterized by a single parameter \u2014 its complexity. The complexity of the $ i $ -th chore equals $ h_{i} $ .\n\nAs Petya is older, he wants to take the chores with complexity larger than some value $ x $ ( $ h_{i}&gt;x $ ) to leave to Vasya the chores with complexity less than or equal to $ x $ ( $ h_{i}<=x $ ). The brothers have already decided that Petya will do exactly $ a $ chores and Vasya will do exactly $ b $ chores ( $ a+b=n $ ).\n\nIn how many ways can they choose an integer $ x $ so that Petya got exactly $ a $ chores and Vasya got exactly $ b $ chores?",
    "inputFormat": "The first input line contains three integers $ n,a $ and $ b $ ( $ 2<=n<=2000 $ ; $ a,b>=1 $ ; $ a+b=n $ ) \u2014 the total number of chores, the number of Petya's chores and the number of Vasya's chores.\n\nThe next line contains a sequence of integers $ h_{1},h_{2},...,h_{n} $ ( $ 1<=h_{i}<=10^{9} $ ), $ h_{i} $ is the complexity of the $ i $ -th chore. The numbers in the given sequence are not necessarily different.\n\nAll numbers on the lines are separated by single spaces.",
    "outputFormat": "Print the required number of ways to choose an integer value of $ x $ . If there are no such ways, print 0.",
    "samples": [
        [
            "5 2 3\n6 2 3 100 1\n",
            "3\n"
        ],
        [
            "7 3 4\n1 1 9 1 1 1 1\n",
            "0\n"
        ]
    ],
    "hint": "In the first sample the possible values of $ x $ are 3, 4 or 5.\n\nIn the second sample it is impossible to find such $ x $ , that Petya got 3 chores and Vasya got 4.",
    "translation": "## \u9898\u76ee\u63cf\u8ff0\uff1a\n\u5f7c\u4f73\u548c\u74e6\u897f\u4e9a\u662f\u5144\u5f1f\u3002\u4eca\u5929\u5bf9\u4ed6\u4eec\u6765\u8bf4\u662f\u4e2a\u7279\u6b8a\u7684\u65e5\u5b50\uff0c\u56e0\u4e3a\u4ed6\u4eec\u7684\u7236\u6bcd\u628a\u4ed6\u4eec\u72ec\u81ea\u7559\u5728\u5bb6\u91cc\uff0c\u8ba9\u4ed6\u4eec\u505a\u5bb6\u52a1\u3002\u6bcf\u4e2a\u6742\u52a1\u90fd\u6709\u4e00\u4e2a\u5355\u4e00\u7684\u53c2\u6570\u2014\u2014\u5b83\u7684\u590d\u6742\u5ea6\u3002\u7b2c$i$\u4e2a\u6742\u52a1\u7684\u590d\u6742\u5ea6\u7b49\u4e8e$h_{i}$\n\n\u7531\u4e8e\u5f7c\u4f73\u5e74\u7eaa\u8f83\u5927\uff0c\u4ed6\u60f3\u8981\u627f\u62c5\u90a3\u4e9b\u590d\u6742\u7684\u5bb6\u52a1$(h_{i}>x)$\uff0c\u628a\u8f83\u4e3a\u7b80\u5355\u7684\u5bb6\u52a1\u7559\u7ed9\u74e6\u897f\u4e9a\u3002$(h_{i}<=x)$\u3002\u5144\u5f1f\u4fe9\u5df2\u7ecf\u51b3\u5b9a\uff0c\u5f7c\u4f73\u505a$a$\u4e2a\u5bb6\u52a1\uff0c\u74e6\u897f\u4e9a\u505a$b$\u4e2a\u5bb6\u52a1$(a+b=n)$\u3002\n\n\u6709\u591a\u5c11\u79cd\u65b9\u6cd5\u53ef\u4ee5\u8ba9\u4ed6\u4eec\u9009\u62e9\u4e00\u4e2a\u6574\u6570$x$\uff0c\u4f7f\u5f97\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\uff0c\u5f7c\u4f73\u6b63\u597d\u505aa\u4e2a\u5bb6\u52a1\uff0c\u74e6\u897f\u4e9a\u6b63\u597d\u505a$b$\u4e2a\u5bb6\u52a1\uff1f\n\n## \u8f93\u5165\u683c\u5f0f\uff1a\n\u7b2c\u4e00\u884c\u8f93\u5165\u4e09\u4e2a\u6574\u6570$n,a,b(2<=n<=2000;a,b>=1;a+b=n)$\uff0c\u5206\u522b\u4ee3\u8868\u5bb6\u52a1\u7684\u603b\u6570\uff0c\u5f7c\u4f73\u505a\u7684\u5bb6\u52a1\u6570\u91cf\u548c\u74e6\u897f\u4e9a\u505a\u7684\u5bb6\u52a1\u6570\u91cf\u3002\n\n\u7b2c\u4e8c\u884c\u4e00\u4e2a\u6574\u6570\u5e8f\u5217$h_{1},h_{2},\u2026\u2026,h_{n}(1<=h_{i}<=10^9)$,\u4ee3\u8868\u5404\u9879\u6742\u52a1\u7684\u590d\u6742\u5ea6\u3002\u5e8f\u5217\u4e2d\u7684\u6570\u5b57\u6709\u53ef\u80fd\u76f8\u540c\u3002\n\n\u8f93\u5165\u7684\u6240\u6709\u6570\u5b57\u90fd\u7528\u5355\u4e2a\u7a7a\u683c\u9694\u5f00\u3002\n\n## \u8f93\u51fa\u683c\u5f0f\uff1a\n\u4e00\u884c\u4e00\u4e2a\u6574\u6570$x$\uff0c\u4ee3\u8868\u53ef\u884c\u7684\u65b9\u6848\u6570\u91cf\u3002\u5982\u679c\uff0c\u6ca1\u6709\u53ef\u884c\u7684\u65b9\u6848\uff0c\u8f93\u51fa0\u3002\n\n## \u8bf4\u660e\uff1a\n\u5728\u7b2c\u4e00\u4e2a\u6837\u4f8b\u4e2d\uff0c$x$ \u53ef\u80fd\u4e3a3\uff0c4\uff0c5"
}