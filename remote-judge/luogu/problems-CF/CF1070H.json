{
    "description": "Polycarp is working on a new operating system called BerOS. He asks you to help with implementation of a file suggestion feature.\n\nThere are $ n $ files on hard drive and their names are $ f_1, f_2, \\dots, f_n $ . Any file name contains between $ 1 $ and $ 8 $ characters, inclusive. All file names are unique.\n\nThe file suggestion feature handles queries, each represented by a string $ s $ . For each query $ s $ it should count number of files containing $ s $ as a substring (i.e. some continuous segment of characters in a file name equals $ s $ ) and suggest any such file name.\n\nFor example, if file names are \"read.me\", \"hosts\", \"ops\", and \"beros.18\", and the query is \"os\", the number of matched files is $ 2 $ (two file names contain \"os\" as a substring) and suggested file name can be either \"hosts\" or \"beros.18\".",
    "inputFormat": "The first line of the input contains integer $ n $ ( $ 1 \\le n \\le 10000 $ ) \u2014 the total number of files.\n\nThe following $ n $ lines contain file names, one per line. The $ i $ -th line contains $ f_i $ \u2014 the name of the $ i $ -th file. Each file name contains between $ 1 $ and $ 8 $ characters, inclusive. File names contain only lowercase Latin letters, digits and dot characters ('.'). Any sequence of valid characters can be a file name (for example, in BerOS \".\", \"..\" and \"...\" are valid file names). All file names are unique.\n\nThe following line contains integer $ q $ ( $ 1 \\le q \\le 50000 $ ) \u2014 the total number of queries.\n\nThe following $ q $ lines contain queries $ s_1, s_2, \\dots, s_q $ , one per line. Each $ s_j $ has length between $ 1 $ and $ 8 $ characters, inclusive. It contains only lowercase Latin letters, digits and dot characters ('.').",
    "outputFormat": "Print $ q $ lines, one per query. The $ j $ -th line should contain the response on the $ j $ -th query \u2014 two values $ c_j $ and $ t_j $ , where\n\n- $ c_j $ is the number of matched files for the $ j $ -th query,\n- $ t_j $ is the name of any file matched by the $ j $ -th query. If there is no such file, print a single character '-' instead. If there are multiple matched files, print any.",
    "samples": [
        [
            "4\ntest\ncontests\ntest.\n.test\n6\nts\n.\nst.\n.test\ncontes.\nst\n",
            "1 contests\n2 .test\n1 test.\n1 .test\n0 -\n4 test.\n"
        ]
    ],
    "hint": "",
    "translation": "\u5f00\u59cb\u7ed9\u4f60$n$\u4e2a\u7531\u5c0f\u5199\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4ee5\u53ca`'.'`\uff08\u70b9\u53f7\uff09\u6784\u6210\u7684\u5b57\u7b26\u4e32$(n\\le 10000,len\\le 8)$\uff0c\u540e\u6709$q(q\\le 50000)$\u7ec4\u8be2\u95ee\uff0c\u8be2\u95ee\u4e0a\u8ff0\u5b57\u7b26\u4e32\u4e2d\u6709\u591a\u5c11\u4e32\u4e2d\u5305\u542b\u7ed9\u51fa\u5b57\u7b26\u4e32\u7684\u5b50\u4e32\uff0c\u5e76\u8f93\u51fa\u5176\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u4e32\u3002\u5982\u679c\u4e0d\u5b58\u5728\u8f93\u51fa`0 -`\u3002"
}