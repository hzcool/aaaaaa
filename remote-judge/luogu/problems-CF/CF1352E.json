{
    "description": "Pay attention to the non-standard memory limit in this problem.\n\n In order to cut off efficient solutions from inefficient ones in this problem, the time limit is rather strict. Prefer to use compiled statically typed languages (e.g. C++). If you use Python, then submit solutions on PyPy. Try to write an efficient solution.\n\nThe array $ a=[a_1, a_2, \\ldots, a_n] $ ( $ 1 \\le a_i \\le n $ ) is given. Its element $ a_i $ is called special if there exists a pair of indices $ l $ and $ r $ ( $ 1 \\le l < r \\le n $ ) such that $ a_i = a_l + a_{l+1} + \\ldots + a_r $ . In other words, an element is called special if it can be represented as the sum of two or more consecutive elements of an array (no matter if they are special or not).\n\nPrint the number of special elements of the given array $ a $ .\n\nFor example, if $ n=9 $ and $ a=[3,1,4,1,5,9,2,6,5] $ , then the answer is $ 5 $ :\n\n- $ a_3=4 $ is a special element, since $ a_3=4=a_1+a_2=3+1 $ ;\n- $ a_5=5 $ is a special element, since $ a_5=5=a_2+a_3=1+4 $ ;\n- $ a_6=9 $ is a special element, since $ a_6=9=a_1+a_2+a_3+a_4=3+1+4+1 $ ;\n- $ a_8=6 $ is a special element, since $ a_8=6=a_2+a_3+a_4=1+4+1 $ ;\n- $ a_9=5 $ is a special element, since $ a_9=5=a_2+a_3=1+4 $ .\n\nPlease note that some of the elements of the array $ a $ may be equal \u2014 if several elements are equal and special, then all of them should be counted in the answer.",
    "inputFormat": "The first line contains an integer $ t $ ( $ 1 \\le t \\le       1000 $ ) \u2014 the number of test cases in the input. Then $ t $ test cases follow.\n\nEach test case is given in two lines. The first line contains an integer $ n $ ( $ 1 \\le n \\le 8000 $ ) \u2014 the length of the array $ a $ . The second line contains integers $ a_1, a_2, \\dots,       a_n $ ( $ 1 \\le a_i \\le n $ ).\n\nIt is guaranteed that the sum of the values of $ n $ for all test cases in the input does not exceed $ 8000 $ .",
    "outputFormat": "Print $ t $ numbers \u2014 the number of special elements for each of the given arrays.",
    "samples": [
        [
            "5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1",
            "5\n1\n0\n4\n0"
        ]
    ],
    "hint": "",
    "translation": "\u7ed9\u4f60a\u6570\u5217\uff0c\u8ba9\u4f60\u5224\u65ad\u5176\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u662f\u5426\u80fd\u5199\u6210\u6570\u5217\u4e2d\u51e0\u4e2a\u8fde\u7eed\u5143\u7d20\u4e4b\u548c\uff0c\u5e76\u7edf\u8ba1\u4e2a\u6570\u3002"
}