{
    "description": "One night, Mark realized that there is an essay due tomorrow. He hasn't written anything yet, so Mark decided to randomly copy-paste substrings from the prompt to make the essay.\n\nMore formally, the prompt is a string $ s $ of initial length $ n $ . Mark will perform the copy-pasting operation $ c $ times. Each operation is described by two integers $ l $ and $ r $ , which means that Mark will append letters $ s_l s_{l+1} \\ldots s_r $ to the end of string $ s $ . Note that the length of $ s $ increases after this operation.\n\nOf course, Mark needs to be able to see what has been written. After copying, Mark will ask $ q $ queries: given an integer $ k $ , determine the $ k $ -th letter of the final string $ s $ .",
    "inputFormat": "The first line contains a single integer $ t $ ( $ 1\\leq t\\leq 1000 $ ) \u2014 the number of test cases.\n\nThe first line of each test case contains three integers $ n $ , $ c $ , and $ q $ ( $ 1\\leq n\\leq 2\\cdot 10^5 $ , $ 1\\leq c\\leq 40 $ , and $ 1\\leq q\\leq 10^4 $ ) \u2014 the length of the initial string $ s $ , the number of copy-pasting operations, and the number of queries, respectively.\n\nThe second line of each test case contains a single string $ s $ of length $ n $ . It is guaranteed that $ s $ only contains lowercase English letters.\n\nThe following $ c $ lines describe the copy-pasting operation. Each line contains two integers $ l $ and $ r $ ( $ 1\\leq l\\leq r\\leq 10^{18} $ ). It is also guaranteed that $ r $ does not exceed the current length of $ s $ .\n\nThe last $ q $ lines of each test case describe the queries. Each line contains a single integer $ k $ ( $ 1\\leq k\\leq 10^{18} $ ). It is also guaranteed that $ k $ does not exceed the final length of $ s $ .\n\nIt is guaranteed that the sum of $ n $ and $ q $ across all test cases does not exceed $ 2\\cdot 10^5 $ and $ 10^4 $ , respectively.",
    "outputFormat": "For each query, print the $ k $ -th letter of the final string $ s $ .",
    "samples": [
        [
            "2\n4 3 3\nmark\n1 4\n5 7\n3 8\n1\n10\n12\n7 3 3\ncreamii\n2 3\n3 4\n2 9\n9\n11\n12",
            "m\na\nr\ne\na\nr"
        ]
    ],
    "hint": "In the first test case, the copy-paste process is as follows.\n\n- The first step is pasting string $ \\texttt{mark} $ at the end, yielding the string $ \\texttt{mark}\\color{red}{\\texttt{mark}} $ .\n- The second step is pasting string $ \\texttt{mar} $ at the end, yielding the string $ \\texttt{markmark}\\color{red}{\\texttt{mar}} $ .\n- The third step is pasting string $ \\texttt{rkmark} $ at the end, yielding the string $ \\texttt{markmarkmar}\\color{red}{\\texttt{rkmark}} $ .\n\nIn the second test case, the copy-paste process is as follows.\n\n- The first step is pasting string $ \\texttt{re} $ at the end, yielding the string $ \\texttt{creamii}\\color{red}{\\texttt{re}} $ .\n- The second step is pasting string $ \\texttt{ea} $ at the end, yielding the string $ \\texttt{creamiire}\\color{red}{\\texttt{ea}} $ .\n- The third step is pasting string $ \\texttt{reamiire} $ at the end, yielding the string $ \\texttt{creamiireea}\\color{red}{\\texttt{reamiire}} $ .",
    "translation": "\u7ed9\u5b9a\u957f\u5ea6\u4e3a $n$ \u7684\u5b57\u7b26\u4e32 $s$\uff0c\u8fdb\u884c $c$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u5c06 $s_l$ \u5230 $s_r$ \u590d\u5236\u5230\u5b57\u7b26\u4e32\u5c3e\u3002 \u5168\u90e8\u64cd\u4f5c\u7ed3\u675f\u540e\u6709 $q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u5b57\u7b26\u4e32 $s$ \u7684\u7b2c $k$ \u4f4d\u3002\n\n$1\u2264n\u22642\u22c510^5,1\\leq c\\leq 40,1\\leq q\\leq 10^4,1\u2264l\u2264r\u226410^{18},1\u2264k\u226410^{18}$\n\n\u6570\u636e\u4fdd\u8bc1 $r$ \u4e0d\u8d85\u8fc7\u5f53\u524d\u5b57\u7b26\u4e32\u957f\u5ea6\uff0c$k$ \u4e0d\u8d85\u8fc7\u6700\u7ec8\u5b57\u7b26\u4e32\u957f\u5ea6\u3002\n\nby Wu_while"
}