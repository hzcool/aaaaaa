{
    "description": "Emperor Palpatine loves owls very much. The emperor has some blueprints with the new Death Star, the blueprints contain $ n $ distinct segments and $ m $ distinct circles. We will consider the segments indexed from $ 1 $ to $ n $ in some way and the circles \u2014 indexed from $ 1 $ to $ m $ in some way.\n\nPalpatine defines an owl as a set of a pair of distinct circles $ (i,j) $ ( $ i&lt;j $ ) and one segment $ k $ , such that:\n\n1. circles $ i $ and $ j $ are symmetrical relatively to the straight line containing segment $ k $ ;\n2. circles $ i $ and $ j $ don't have any common points;\n3. circles $ i $ and $ j $ have the same radius;\n4. segment $ k $ intersects the segment that connects the centers of circles $ i $ and $ j $ .\n\nHelp Palpatine, count the number of distinct owls on the picture.",
    "inputFormat": "The first line contains two integers \u2014 $ n $ and $ m $ ( $ 1<=n<=3\u00b710^{5} $ , $ 2<=m<=1500 $ ).\n\nThe next $ n $ lines contain four integers each, $ x_{1} $ , $ y_{1} $ , $ x_{2} $ , $ y_{2} $ \u2014 the coordinates of the two endpoints of the segment. It's guaranteed that each segment has positive length.\n\nThe next $ m $ lines contain three integers each, $ x_{i} $ , $ y_{i} $ , $ r_{i} $ \u2014 the coordinates of the center and the radius of the $ i $ -th circle. All coordinates are integers of at most $ 10^{4} $ in their absolute value. The radius is a positive integer of at most $ 10^{4} $ .\n\nIt is guaranteed that all segments and all circles are dictinct.",
    "outputFormat": "Print a single number \u2014 the answer to the problem.\n\nPlease, do not use the %lld specifier to output 64-bit integers is \u0421++. It is preferred to use the cout stream or the %I64d specifier.",
    "samples": [
        [
            "1 2\n3 2 3 -2\n0 0 2\n6 0 2\n",
            "1\n"
        ],
        [
            "3 2\n0 0 0 1\n0 -1 0 1\n0 -1 0 0\n2 0 1\n-2 0 1\n",
            "3\n"
        ],
        [
            "1 2\n-1 0 1 0\n-100 0 1\n100 0 1\n",
            "0\n"
        ]
    ],
    "hint": "Here's an owl from the first sample. The owl is sitting and waiting for you to count it.\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF350D/61898774872e3a34e56e4869f77f49d1bd8725ed.png)",
    "translation": "### \u9898\u610f\u7b80\u8ff0\n\u7ed9\u51fa\u4e00\u4e9b\u5706\u548c\u7ebf\u6bb5\u3002\n\n\u5b9a\u4e49\u4e00\u4e2a\u201c\u732b\u5934\u9e70\u201d\u662f\u6ee1\u8db3\u4ee5\u4e0b\u56db\u4e2a\u6761\u4ef6\u7684\u4e00\u6761\u7ebf\u6bb5\u548c\u4e24\u4e2a\u5706\u7684\u96c6\u5408\u3002\n1. \u4e24\u4e2a\u5706\u534a\u5f84\u76f8\u7b49\n1. \u4e24\u4e2a\u5706\u6ca1\u6709\u4ea4\u70b9\n1. \u4e24\u4e2a\u5706\u5173\u4e8e\u7ebf\u6bb5\u5bf9\u79f0\n1. \u4e24\u4e2a\u5706\u5706\u5fc3\u7684\u8fde\u7ebf\u548c\u7ebf\u6bb5\u6709\u4ea4\u70b9\n\n\u8bf7\u627e\u51fa\u56fe\u4e0a\u4e0d\u540c\u201c\u732b\u5934\u9e70\u201d\u7684\u6570\u91cf\u3002\n### \u8f93\u5165\u683c\u5f0f\n\u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570 $n$ \u548c $m ( 1\\le n\\le 3\u00b710^5,2\\le m\\le 1500)$\u3002\n\n\u63a5\u4e0b\u6765\u7684 $n$ \u884c\u5206\u522b\u5305\u542b\u56db\u4e2a\u6574\u6570 $x_1,y_1,x_2,y_2$, \u8868\u793a\u7ebf\u6bb5\u7684\u4e24\u4e2a\u7aef\u70b9\u7684\u5750\u6807\u3002\u4fdd\u8bc1\u6bcf\u6761\u7ebf\u6bb5\u957f\u5ea6\u5927\u4e8e $0$\u3002\n\n\u63a5\u4e0b\u6765\u7684 $m$ \u884c\u5206\u522b\u5305\u542b\u4e09\u4e2a\u6574\u6570 $x_i,y_i,r_i$, \u8868\u793a\u7b2c $i$ \u4e2a\u5706\u7684\u5706\u5fc3\u5750\u6807\u548c\u534a\u5f84\u957f\u5ea6\u3002\u6240\u6709\u7684\u5750\u6807\u90fd\u662f\u7edd\u5bf9\u503c\u6700\u5927\u4e3a $10^4$ \u7684\u6574\u6570\u3002\u5706\u7684\u534a\u5f84\u662f\u4e00\u4e2a\u6700\u5927 $10^4$ \u7684\u6b63\u6574\u6570\u3002 \n### \u8f93\u51fa\u683c\u5f0f\n\u8f93\u51fa\u4e00\u4e2a\u6570\u5b57 \u2014 \u95ee\u9898\u7684\u7b54\u6848\u3002\n\n\u5bf9\u4e8eC++,\u8bf7\u4e0d\u8981\u4f7f\u7528 %lld \u8bf4\u660e\u7b26\u8f93\u51fa 64 \u4f4d\u6574\u6570\u3002\u6700\u597d\u4f7f\u7528 cout \u6d41\u6216 %I64d \u8bf4\u660e\u7b26\u3002"
}