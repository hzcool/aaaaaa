{
    "description": "This is an interactive problem. Remember to flush your output while communicating with the testing program. You may use fflush(stdout) in C++, system.out.flush() in Java, stdout.flush() in Python or flush(output) in Pascal to flush the output. If you use some other programming language, consult its documentation. You may also refer to the guide on interactive problems: <https://codeforces.com/blog/entry/45307>.\n\nThe jury has chosen a string $ s $ consisting of $ n $ characters; each character of $ s $ is a lowercase Latin letter. Your task is to guess this string; initially, you know only its length.\n\nYou may ask queries of two types:\n\n- $ 1 $ $ i $ \u2014 the query of the first type, where $ i $ is an integer from $ 1 $ to $ n $ . In response to this query, the jury will tell you the character $ s_i $ ;\n- $ 2 $ $ l $ $ r $ \u2014 the query of the second type, where $ l $ and $ r $ are integers such that $ 1 \\le l \\le r \\le n $ . In response to this query, the jury will tell you the number of different characters among $ s_l, s_{l+1}, \\dots, s_r $ .\n\nYou are allowed to ask no more than $ 26 $ queries of the first type, and no more than $ 6000 $ queries of the second type. Your task is to restore the string $ s $ .\n\nFor each test in this problem, the string $ s $ is fixed beforehand, and will be the same for every submission.",
    "inputFormat": "Initially, the jury program sends one integer $ n $ on a separate line \u2014 the size of $ s $ ( $ 1 \\le n \\le 1000 $ ).",
    "outputFormat": "To give the answer, print one line ! s with a line break in the end, where $ s $ should be the string picked by the jury. After that, your program should flush the output and terminate gracefully.\n\nInteraction\n\nTo ask a query, you should send one line containing the query, in one of the following formats:\n\n- ? 1 i \u2014 for a query of the first type ( $ 1 \\le i \\le n $ );\n- ? 2 l r \u2014 for a query of the second type ( $ 1 \\le l \\le r \\le n $ ).\n\nDon't forget to flush the output after sending the query line.\n\nThe answer to your query will be given on a separate line. For a query of the first type, the answer will be the character $ s_i $ . For a query of the second type, the answer will be an integer equal to the number of different characters among $ s_l, s_{l+1}, \\dots, s_r $ .\n\nYou are allowed to ask no more than $ 26 $ queries of the first type, and no more than $ 6000 $ queries of the second type.\n\nIn case you ask too many queries, or the jury program fails to recognize your query format, the answer to your query will be one integer $ 0 $ . After receiving $ 0 $ as the answer, your program should terminate immediately \u2014 otherwise you may receive verdict \"Runtime error\", \"Time limit exceeded\" or some other verdict instead of \"Wrong answer\".",
    "samples": [
        [
            "5\n4\nu\n2\ng\ne\ns\n1",
            "? 2 1 5\n? 1 2\n? 2 1 2\n? 1 1\n? 1 3\n? 1 4\n? 2 4 5\n! guess"
        ]
    ],
    "hint": "Let's analyze the example of interaction.\n\nThe string chosen by the jury is guess, so initially the jury sends one integer $ 5 $ .\n\n1. the first query is ? 2 1 5, which means \"count the number of different characters among $ s_1, s_2, \\dots, s_5 $ \". The answer to it is $ 4 $ .\n2. the second query is ? 1 2, which means \"tell which character is $ s_2 $ \". The answer to it is u.\n3. the third query is ? 2 1 2, which means \"count the number of different characters among $ s_1 $ and $ s_2 $ \". The answer to it is $ 2 $ .\n4. the fourth query is ? 1 1, which means \"tell which character is $ s_1 $ \". The answer to it is g.\n5. the fifth query is ? 1 3, which means \"tell which character is $ s_3 $ \". The answer to it is e.\n6. the sixth query is ? 1 4, which means \"tell which character is $ s_4 $ \". The answer to it is s.\n7. the seventh query is ? 2 4 5, which means \"count the number of different characters among $ s_4 $ and $ s_5 $ \". The answer to it is $ 1 $ , so it's possible to deduce that $ s_4 $ is the same as $ s_5 $ .\n\nIn the end, the answer is submitted as ! guess, and it is deduced correctly.",
    "translation": "**\u672c\u9898\u4e3a\u4ea4\u4e92\u9898\uff0c\u4f7f\u7528 IO \u4ea4\u4e92\u3002**\n\n**\u5728\u4f60\u8f93\u51fa\u4e00\u884c\u540e\uff0c\u8bf7\u6e05\u7a7a\u7f13\u51b2\u533a\uff1a**\n\n- \u5728 C++ \u4e2d\uff0c\u4f7f\u7528 `fflush(stdout)` \u6216 `cout.flush()`\u3002\n\n- \u5728 Pascal \u4e2d\uff0c\u4f7f\u7528 `flush(output)`\u3002\n\n- \u5728 Python \u4e2d\uff0c\u4f7f\u7528 `stdout.flush()`\u3002\n\n\n- \u5176\u4ed6\u8bed\u8a00\u8bf7\u81ea\u884c\u67e5\u9605\u6587\u6863\u3002\n\n**\u8bf7\u9075\u5faa\u9898\u76ee\u5b8c\u6210\u4ea4\u4e92\uff0c\u53d1\u51fa\u4e0d\u5408\u6cd5\u8be2\u95ee\u53ef\u80fd\u4f1a\u51fa\u73b0 TLE\uff0cWA \u7b49\u95ee\u9898\u3002**\n\n------------\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u4e14\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u7684\u5b57\u7b26\u4e32 $S$\uff0c\u4f60\u9700\u8981\u731c\u51fa\u5b83\u3002\n\n\u4e00\u5171\u6709 $4$ \u79cd\u4ea4\u4e92\u65b9\u5f0f\uff1a\n\n| \u683c\u5f0f | \u5141\u8bb8\u8c03\u7528\u6b21\u6570 | \u9650\u5236 | \u8fd4\u56de\u503c | \u8bf4\u660e |\n| :----------: | :----------: | :----------: | :----------: | :----------: |\n| \u65e0 | $1$ | \u65e0 | \u4e00\u4e2a\u6574\u6570\uff0c$n$ \u7684\u503c\u3002 | **\u5728\u6700\u5f00\u59cb\u8c03\u7528\u3002** |\n| `? 1 i` | $26$ | $i$ \u4e3a $[1,n]$ \u8303\u56f4\u5185\u7684\u6574\u6570\u3002 | \u4e00\u4e2a**\u5b57\u7b26**\uff0c$S_i$\uff08$S$ \u7684\u7b2c $i$ \u4e2a\u5b57\u7b26\uff09\u3002 | \u65e0 |\n| `? 2 l r` | $6 \\times 10^3$ | $1 \\le l \\le r \\le n$\uff0c\u4e14 $l,r$ \u4e3a\u6574\u6570\u3002 |  \u4e00\u4e2a\u6574\u6570\uff0c$S_{l \\ldots r}$\uff08$S$ \u7684\u7b2c $l$ \u81f3 $r$ \u4e2a\u5b57\u7b26\uff09\u4e2d\u4e0d\u540c\u5b57\u7b26\u7684**\u79cd\u6570**\u3002 | \u65e0 |\n| `! s` | $1$ | $s$ \u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4ee3\u8868\u4f60\u6240\u8ba4\u4e3a\u7684 $S$\u3002 | \uff08\u8bc4\u6d4b\u7ed3\u679c\u2014\u2014AC \u6216 WA\u3002\uff09 | **\u6700\u540e\u8c03\u7528\uff0c\u7136\u540e\u505c\u6b62\u4ea4\u4e92\u3002** |\n\n------------\n\n\u5bf9\u4e8e $100\\%$ \u7684\u6570\u636e\uff0c$1 \\le n \\le 10^3$\u3002"
}