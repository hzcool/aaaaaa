{
    "description": "This is an interactive problem.\n\nYou are given two integers $ c $ and $ n $ . The jury has a randomly generated set $ A $ of distinct positive integers not greater than $ c $ (it is generated from all such possible sets with equal probability). The size of $ A $ is equal to $ n $ .\n\nYour task is to guess the set $ A $ . In order to guess it, you can ask at most $ \\lceil 0.65 \\cdot c \\rceil $ queries.\n\nIn each query, you choose a single integer $ 1 \\le x \\le c $ . As the answer to this query you will be given the [bitwise xor sum](https://en.wikipedia.org/wiki/Bitwise_operation#XOR) of all $ y $ , such that $ y \\in A $ and $ gcd(x, y) = 1 $ (i.e. $ x $ and $ y $ are coprime). If there is no such $ y $ this xor sum is equal to $ 0 $ .\n\nYou can ask all queries at the beginning and you will receive the answers to all your queries. After that, you won't have the possibility to ask queries.\n\nYou should find any set $ A' $ , such that $ |A'| = n $ and $ A' $ and $ A $ have the same answers for all $ c $ possible queries.",
    "inputFormat": "Firstly you are given two integers $ c $ and $ n $ ( $ 100 \\le c \\le 10^6 $ , $ 0 \\le n \\le c $ ).",
    "outputFormat": "In the first line you should print an integer $ q $ $ (0 \\le q \\le \\lceil 0.65 \\cdot c \\rceil) $ \u2014 the number of queries you want to ask. After that in the same line print $ q $ integers $ x_1, x_2, \\ldots, x_q $ $ (1 \\le x_i \\le c) $ \u2014 the queries.\n\nFor these queries you should read $ q $ integers, $ i $ -th of them is the answer to the described query for $ x = x_i $ .\n\nAfter that you should print $ n $ distinct integers $ A'_1, A'_2, \\ldots, A'_n $ \u2014 the set $ A' $ you found.\n\nIf there are different sets $ A' $ that have the same answers for all possible queries, print any of them.\n\nIf you will ask more than $ \\lceil 0.65 \\cdot c \\rceil $ queries or if the queries will be invalid, the interactor will terminate immediately and your program will receive verdict Wrong Answer.\n\nAfter printing the queries and answers do not forget to output end of line and flush the output buffer. Otherwise, you will get the Idleness limit exceeded verdict. To do flush use:\n\n- fflush(stdout) or cout.flush() in C++;\n- System.out.flush() in Java;\n- flush(output) in Pascal;\n- stdout.flush() in Python;\n- Read documentation for other languages.\n\nHacks\n\nYou cannot make hacks in this problem.",
    "samples": [
        [
            "10 6\n\n1 4 2 11 4 4 4",
            "7 10 2 3 5 7 1 6\n\n1 4 5 6 8 10"
        ]
    ],
    "hint": "The sample is made only for you to understand the interaction protocol. Your solution will not be tested on the sample.\n\nIn the sample $ A = \\{1, 4, 5, 6, 8, 10\\} $ . $ 7 $ queries are made, $ 7 \\le \\lceil 0.65 \\cdot 10 \\rceil = 7 $ , so the query limit is not exceeded.\n\nAnswers for the queries:\n\n- For $ 10 $ : $ 1 $ is the only number in the set $ A $ coprime with $ 10 $ , so the answer is $ 1 $\n- For $ 2 $ : $ 1_{10} \\oplus 5_{10} = 001_2 \\oplus 101_2 = 4_{10} $ , where $ \\oplus $ is the bitwise xor\n- For $ 3 $ : $ 1_{10} \\oplus 4_{10} \\oplus 5_{10} \\oplus 8_{10} \\oplus 10_{10} = 0001_2 \\oplus 0100_2 \\oplus 0101_2 \\oplus 1000_2 \\oplus 1010_2 = 2_{10} $\n- For $ 5 $ : $ 1_{10} \\oplus 4_{10} \\oplus 6_{10} \\oplus 8_{10} = 0001_2 \\oplus 0100_2 \\oplus 0110_2 \\oplus 1000_2 = 11_{10} $\n- For $ 7 $ : $ 1_{10} \\oplus 4_{10} \\oplus 5_{10} \\oplus 6_{10} \\oplus 8_{10} \\oplus 10_{10} = 0001_2 \\oplus 0100_2 \\oplus 0101_2 \\oplus 0110_2 \\oplus 1000_2 \\oplus 1010_2 = 4_{10} $\n- For $ 1 $ : $ 1_{10} \\oplus 4_{10} \\oplus 5_{10} \\oplus 6_{10} \\oplus 8_{10} \\oplus 10_{10} = 0001_2 \\oplus 0100_2 \\oplus 0101_2 \\oplus 0110_2 \\oplus 1000_2 \\oplus 1010_2 = 4_{10} $\n- For $ 6 $ : $ 1_{10} \\oplus 5_{10} = 0001_2 \\oplus 0101_2 = 4_{10} $",
    "translation": "**\u672c\u9898\u662f\u4e00\u9053\u4ea4\u4e92\u9898\u3002**\n\n\u4ea4\u4e92\u5e93\u6709\u4e00\u4e2a\u5927\u5c0f\u4e3a $n$ \u7684**\u968f\u673a\u751f\u6210\u7684**\u6b63\u6574\u6570\u96c6 $A$\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f $[1,c]$ \u7684\u6b63\u6574\u6570\u3002$n,c$ \u662f\u516c\u5f00\u60c5\u62a5\u3002\u5bf9\u6bcf\u4e2a\u6b63\u6574\u6570 $x\\in [1,c]$\uff0c\u5b9a\u4e49 $F(A,x)$ \u8868\u793a $A$ \u4e2d\u6240\u6709\u548c $x$ \u4e92\u8d28\u7684\u6570\u7684\u5f02\u6216\u548c\u3002\n\n\u73b0\u5728\u4f60\u53ef\u4ee5\u63d0\u51fa\u4e0d\u8d85\u8fc7 $\\lceil 0.65c\\rceil$ \u4e2a\u95ee\u9898\uff0c\u6bcf\u4e2a\u95ee\u9898\u7684\u5f62\u5f0f\u90fd\u5fc5\u987b\u5982\u4e0b\uff1a\u7ed9\u5b9a\u6b63\u6574\u6570 $x$\uff0c\u8be2\u95ee $F(A,x)$ \u7684\u503c\u3002\u4ea4\u4e92\u5e93\u5728\u6536\u5230\u4f60\u7684\u6240\u6709\u8be2\u95ee\u540e\uff0c\u4f1a\u4e00\u6b21\u6027\u8fd4\u56de\u6240\u6709 $F(A,x)$ \u7684\u503c\u3002\n\n\u4f60\u9700\u8981\u6784\u9020\u4e00\u4e2a\u5927\u5c0f\u4e3a $n$\u3001\u5404\u5143\u7d20\u5747\u4e3a $[1,c]$ \u95f4\u6b63\u6574\u6570\u7684\u96c6\u5408 $A'$\uff0c\u6ee1\u8db3\u5bf9\u5168\u90e8\u7684 $x\\in [1,c]$ \u90fd\u6709 $F(A,x)=F(A',x)$\u3002\u4fdd\u8bc1\u4e00\u5b9a\u6709\u89e3\u3002\n\n### \u4ea4\u4e92\u683c\u5f0f\n\n\u4f60\u9700\u8981\u5148\u8bfb\u5165\u4e24\u4e2a\u6b63\u6574\u6570 $c,n(100\\leq c\\leq 10^6,0\\leq n\\leq c)$\uff0c\u542b\u4e49\u5982\u4e0a\u3002\n\n\u63a5\u4e0b\u6765\u4f60\u9700\u8981\u8f93\u51fa\u4e00\u884c\u4e00\u4e2a\u6574\u6570 $q(0\\leq q\\leq \\lceil 0.65c\\rceil)$\uff0c\u8868\u793a\u4f60\u63d0\u51fa\u7684\u95ee\u9898\u6570\u91cf\u3002\u63a5\u4e0b\u6765\u4e00\u884c\u8f93\u51fa $q$ \u4e2a\u7528\u7a7a\u683c\u9694\u5f00\u7684\u6b63\u6574\u6570 $x_1,...,x_q(1\\leq x_i\\leq c)$\uff0c\u8868\u793a\u4f60\u63d0\u51fa\u7684\u5404\u4e2a\u95ee\u9898\u3002\n\n\u5728\u4f60\u63d0\u51fa\u6240\u6709 $q$ \u4e2a\u95ee\u9898\u540e\uff0c\u4ea4\u4e92\u5e93\u4e00\u6b21\u6027\u7ed9\u51fa\u5168\u90e8\u95ee\u9898\u7684\u7b54\u6848\uff0c\u4f60\u53ef\u4ee5\u5728\u8f93\u5165\u4e2d\u8bfb\u5165\u5b83\u4eec\u3002\n\n\u6700\u540e\u4f60\u9700\u8981\u8f93\u51fa $n$ \u4e2a\u7528\u7a7a\u683c\u9694\u5f00\u7684\u4e92\u4e0d\u76f8\u540c\u7684\u6b63\u6574\u6570 $A'_1,...,A'_n$\uff0c\u8868\u793a\u4f60\u627e\u5230\u7684\u96c6\u5408 $A'$ \u4e2d\u7684\u5404\u5143\u7d20\u3002"
}