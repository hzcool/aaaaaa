{
    "description": "Why I have to finish so many assignments???\n\nJamie is getting very busy with his school life. He starts to forget the assignments that he has to do. He decided to write the things down on a to-do list. He assigns a value priority for each of his assignment (lower value means more important) so he can decide which he needs to spend more time on.\n\nAfter a few days, Jamie finds out the list is too large that he can't even manage the list by himself! As you are a good friend of Jamie, help him write a program to support the following operations on the to-do list:\n\n- $ set\\ a_{i}\\ x_{i} $ \u2014 Add assignment $ a_{i} $ to the to-do list if it is not present, and set its priority to $ x_{i} $ . If assignment $ a_{i} $ is already in the to-do list, its priority is changed to $ x_{i} $ .\n- $ remove\\ a_{i} $ \u2014 Remove assignment $ a_{i} $ from the to-do list if it is present in it.\n- $ query\\ a_{i} $ \u2014 Output the number of assignments that are more important (have a smaller priority value) than assignment $ a_{i} $ , so Jamie can decide a better schedule. Output $ -1 $ if $ a_{i} $ is not in the to-do list.\n- $ undo\\ d_{i} $ \u2014 Undo all changes that have been made in the previous $ d_{i} $ days (not including the day of this operation)\n\nAt day $ 0 $ , the to-do list is empty. In each of the following $ q $ days, Jamie will do exactly one out of the four operations. If the operation is a $ query $ , you should output the result of the query before proceeding to the next day, or poor Jamie cannot make appropriate decisions.",
    "inputFormat": "The first line consists of a single integer $ q $ $ (1<=q<=10^{5}) $ \u2014 the number of operations.\n\nThe following $ q $ lines consists of the description of the operations. The $ i $ -th line consists of the operation that Jamie has done in the $ i $ -th day. The query has the following format:\n\nThe first word in the line indicates the type of operation. It must be one of the following four: set, remove, query, undo.\n\n- If it is a set operation, a string $ a_{i} $ and an integer $ x_{i} $ follows $ (1<=x_{i}<=10^{9}) $ . $ a_{i} $ is the assignment that need to be set to priority $ x_{i} $ .\n- If it is a remove operation, a string $ a_{i} $ follows. $ a_{i} $ is the assignment that need to be removed.\n- If it is a query operation, a string $ a_{i} $ follows. $ a_{i} $ is the assignment that needs to be queried.\n- If it is a undo operation, an integer $ d_{i} $ follows $ (0<=d_{i}<i) $ . $ d_{i} $ is the number of days that changes needed to be undone.\n\nAll assignment names $ a_{i} $ only consists of lowercase English letters and have a length $ 1<=|a_{i}|<=15 $ .\n\nIt is guaranteed that the last operation is a query operation.",
    "outputFormat": "For each query operation, output a single integer \u2014 the number of assignments that have a priority lower than assignment $ a_{i} $ , or $ -1 $ if $ a_{i} $ is not in the to-do list.\n\nInteraction\n\nIf the operation is a $ query $ , you should output the result of the query and flush the output stream before proceeding to the next operation. Otherwise, you may get the verdict Idleness Limit Exceed.\n\nFor flushing the output stream, please refer to the documentation of your chosen programming language. The flush functions of some common programming languages are listed below:\n\n- C: fflush(stdout);\n- C++: cout \u00ab flush;\n- Java: System.out.flush();",
    "samples": [
        [
            "8\nset chemlabreport 1\nset physicsexercise 2\nset chinesemockexam 3\nquery physicsexercise\nquery chinesemockexam\nremove physicsexercise\nquery physicsexercise\nquery chinesemockexam\n",
            "1\n2\n-1\n1\n"
        ],
        [
            "8\nset physicsexercise 2\nset chinesemockexam 3\nset physicsexercise 1\nquery physicsexercise\nquery chinesemockexam\nundo 4\nquery physicsexercise\nquery chinesemockexam\n",
            "0\n1\n0\n-1\n"
        ],
        [
            "5\nquery economicsessay\nremove economicsessay\nquery economicsessay\nundo 2\nquery economicsessay\n",
            "-1\n-1\n-1\n"
        ],
        [
            "5\nset economicsessay 1\nremove economicsessay\nundo 1\nundo 1\nquery economicsessay\n",
            "-1\n"
        ]
    ],
    "hint": "",
    "translation": "## \u9898\u76ee\u63cf\u8ff0\n\n\u201c\u4e3a\u4ec0\u4e48\u6211\u8981\u5b8c\u6210\u8fd9\u4e48\u591a\u4f5c\u4e1a\uff1f\u201d\n\nJamie \u6b63\u5fd9\u4e8e\u4ed6\u7684\u5b66\u6821\u751f\u6d3b\u3002\n\n\u4ed6\u5f00\u59cb\u5fd8\u8bb0\u4ed6\u5fc5\u987b\u505a\u7684\u4f5c\u4e1a\u3002\u4ed6\u51b3\u5b9a\u628a\u8fd9\u4e9b\u4e8b\u60c5\u5199\u5728 To-Do List \u4e0a\u3002\n\n\u4ed6\u4e3a\u4ed6\u7684\u6bcf\u9879\u4efb\u52a1\u5206\u914d\u4e00\u4e2a\u4ef7\u503c\u4f18\u5148\u7ea7(\u8f83\u4f4e\u7684\u4ef7\u503c\u610f\u5473\u7740\u66f4\u91cd\u8981)\uff0c\u8fd9\u6837\u4ed6\u5c31\u53ef\u4ee5\u51b3\u5b9a\u4ed6\u9700\u8981\u82b1\u66f4\u591a\u7684\u65f6\u95f4\u5728\u54ea\u4e2a\u4efb\u52a1\u4e0a\u3002\n\n\u51e0\u5929\u540e\uff0cJamie \u53d1\u73b0\u540d\u5355\u592a\u5927\u4e86\uff0c\u4ed6\u751a\u81f3\u4e0d\u80fd\u81ea\u5df1\u7ba1\u7406\u540d\u5355\uff01\u7531\u4e8e\u60a8\u662f Jamie \u7684\u597d\u670b\u53cb\uff0c\u8bf7\u5e2e\u52a9\u4ed6\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\u6765\u652f\u6301\u5f85\u529e\u4e8b\u9879\u5217\u8868\u4e2d\u7684\u4ee5\u4e0b\u64cd\u4f5c:\n\n`set ai xi`\uff1a\u8bbe\u7f6e\u4efb\u52a1 $a_i$ \u7684\u4f18\u5148\u7ea7\u4e3a $x_i$\uff0c\u5982\u679c\u8be5\u5217\u8868\u4e2d\u6ca1\u6709\u51fa\u73b0\u5219\u52a0\u5165\u8be5\u4efb\u52a1\u3002\n\n`remove a_i`\uff1a\u5220\u9664\u8be5\u4efb\u52a1\u3002\n\n`query a_i`\uff1a\u6c42\u4f18\u5148\u7ea7\u6bd4 $a_i$ \u5c0f\u7684\u4efb\u52a1\u4e2a\u6570\uff0c\u5982\u679c\u6ca1\u6709\u5219\u8f93\u51fa $-1$\u3002\n\n`undo sum`\uff1a\u5220\u9664\u6b64\u6b21\u64cd\u4f5c\u4e4b\u524d\u7684 $sum$ \u6b64\u64cd\u4f5c\u3002\n\n\u5728 Day 0\uff0cTo-Do List \u4e3a\u7a7a\uff0c\u5728\u63a5\u4e0b\u6765 $Q$ \u4e2a\u65e5\u5b50\u5185\uff0cJamie \u90fd\u4f1a\u5728\u56db\u4e2a\u64cd\u4f5c\u4e2d\u4efb\u9009\u4e00\u4e2a\u6267\u884c\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u64cd\u4f5c\uff0c\u8f93\u51fa\u5bf9\u5e94\u7684\u7b54\u6848\u3002\n\n## \u8f93\u5165\u683c\u5f0f\n\u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u6574\u6570 $Q$\u3002\n\n\u63a5\u4e0b\u6765\u7684 $Q$ \u884c\u4e3a\u4efb\u4e00\u4e2a\u64cd\u4f5c\uff0c\u7b2c $i$ \u4e3a\u7b2c $i$ \u5929\u7684\u64cd\u4f5c\u3002\n\n**\u4fdd\u8bc1\u6700\u540e\u4e00\u884c\u662f\u8be2\u95ee\u64cd\u4f5c\u3002**\n\n## \u8f93\u51fa\u683c\u5f0f\n\n\u5bf9\u4e8e\u6240\u6709\u7684\u67e5\u8be2\u64cd\u4f5c\uff0c\u8f93\u51fa\u5bf9\u5e94\u7684\u7b54\u6848\u3002\n\n## \u6570\u636e\u8303\u56f4\n\u4fdd\u8bc1\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u7531\u5c0f\u5199\u5b57\u7b26\u6784\u6210\uff0c\u8bbe\u5176\u957f\u5ea6\u4e3a $len$\uff0c\u5219 $1\\leq len\\leq15$\u3002\n\n$1\\le Q\\le10^5$\uff0c\u5e76\u4e14\u4fdd\u8bc1\u5bf9\u4e8e\u6240\u6709\u7684 undo \u64cd\u4f5c\uff0c$1\\le sum $\uff1c$~5$\u3002"
}