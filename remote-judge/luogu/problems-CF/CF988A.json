{
    "description": "There are $ n $ students in a school class, the rating of the $ i $ -th student on Codehorses is $ a_i $ . You have to form a team consisting of $ k $ students ( $ 1 \\le k \\le n $ ) such that the ratings of all team members are distinct.\n\nIf it is impossible to form a suitable team, print \"NO\" (without quotes). Otherwise print \"YES\", and then print $ k $ distinct numbers which should be the indices of students in the team you form. If there are multiple answers, print any of them.",
    "inputFormat": "The first line contains two integers $ n $ and $ k $ ( $ 1 \\le k \\le n \\le 100 $ ) \u2014 the number of students and the size of the team you have to form.\n\nThe second line contains $ n $ integers $ a_1, a_2, \\dots, a_n $ ( $ 1 \\le a_i \\le 100 $ ), where $ a_i $ is the rating of $ i $ -th student.",
    "outputFormat": "If it is impossible to form a suitable team, print \"NO\" (without quotes). Otherwise print \"YES\", and then print $ k $ distinct integers from $ 1 $ to $ n $ which should be the indices of students in the team you form. All the ratings of the students in the team should be distinct. You may print the indices in any order. If there are multiple answers, print any of them.\n\nAssume that the students are numbered from $ 1 $ to $ n $ .",
    "samples": [
        [
            "5 3\n15 13 15 15 12\n",
            "YES\n1 2 5 \n"
        ],
        [
            "5 4\n15 13 15 15 12\n",
            "NO\n"
        ],
        [
            "4 4\n20 10 40 30\n",
            "YES\n1 2 3 4 \n"
        ]
    ],
    "hint": "All possible answers for the first example:\n\n- {1 2 5}\n- {2 3 5}\n- {2 4 5}\n\nNote that the order does not matter.",
    "translation": "\u9898\u76ee\u63cf\u8ff0\uff1a\n\u7ed9\u5b9an\u548ck\u548cn\u4e2a\u5143\u7d20\u7684\u6570\u5217\uff0c\u8bf7\u5728\u8fd9\u4e2a\u6570\u5217\u4e2d\u627ek\u4e2a\u4e0d\u540c\u7684\u5143\u7d20\u3002\n\u5982\u679c\u53ef\u884c\uff0c\u5219\u8f93\u51fa\u201cYES\u201d\u548c\u5176\u4e2d\u4e00\u4e2a\u7b54\u6848\uff08\u53ef\u80fd\u6709\u591a\u4e2a\u7b54\u6848\uff09\u7684\u5143\u7d20\u7f16\u53f7\u3002\n\u5426\u5219\u8f93\u51fa\u201cNO\u201d\u3002\n\n\u8f93\u5165\u683c\u5f0f\uff1a\n\u7b2c\u4e00\u884cn\u548ck\uff0c\u7b2c\u4e8c\u884cn\u4e2a\u6570\u3002\n\n\u8f93\u51fa\u683c\u5f0f\uff1a\n\u6309\u7167\u9898\u76ee\u63cf\u8ff0\uff0c\u82e5\u53ef\u884c\u5219\u8f93\u51fa\u201cYES\u201d\u548ck\u4e2a\u5143\u7d20\u7684\u7f16\u53f7\uff0c\u5426\u5219\u201cNO\u201d\uff0c\u4e0d\u542b\u5f15\u53f7\u3002\n\n\u611f\u8c22@\u5357\u65b9\u4e0d\u8d25 \u63d0\u4f9b\u7ffb\u8bd1"
}