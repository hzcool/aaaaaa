{
    "description": "This week Arkady wanted to cook some pancakes (to follow ancient traditions) and make a problem about that. But then he remembered that one can't make a problem about stacking pancakes without working at a specific IT company, so he decided to bake the Napoleon cake instead.\n\nTo bake a Napoleon cake, one has to bake $ n $ dry layers first, and then put them on each other in one stack, adding some cream. Arkady started with an empty plate, and performed the following steps $ n $ times:\n\n- place a new cake layer on the top of the stack;\n- after the $ i $ -th layer is placed, pour $ a_i $ units of cream on top of the stack.\n\nWhen $ x $ units of cream are poured on the top of the stack, top $ x $ layers of the cake get drenched in the cream. If there are less than $ x $ layers, all layers get drenched and the rest of the cream is wasted. If $ x = 0 $ , no layer gets drenched.\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1501B/d2a848de33f21319239069b9694ee652ecb320b0.png)The picture represents the first test case of the example.Help Arkady determine which layers of the cake eventually get drenched when the process is over, and which don't.",
    "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $ t $ ( $ 1 \\le t \\le 20\\,000 $ ). Description of the test cases follows.\n\nThe first line of each test case contains a single integer $ n $ ( $ 1 \\le n \\le 2 \\cdot 10^5 $ ) \u2014 the number of layers in the cake.\n\nThe second line of each test case contains $ n $ integers $ a_1, a_2, \\ldots, a_n $ ( $ 0 \\le a_i \\le n $ ) \u2014 the amount of cream poured on the cake after adding each layer.\n\nIt is guaranteed that the sum of $ n $ over all test cases does not exceed $ 2 \\cdot 10^5 $ .",
    "outputFormat": "For each test case, print a single line with $ n $ integers. The $ i $ -th of the integers should be equal to $ 1 $ if the $ i $ -th layer from the bottom gets drenched, and $ 0 $ otherwise.",
    "samples": [
        [
            "3\n6\n0 3 0 0 1 3\n10\n0 0 0 1 0 5 0 0 0 2\n3\n0 0 0",
            "1 1 0 1 1 1 \n0 1 1 1 1 1 0 0 1 1 \n0 0 0"
        ]
    ],
    "hint": "",
    "translation": "Arkady\u60f3\u8981\u505a\u86cb\u7cd5\u3002\u8fd9\u4e2a\u86cb\u7cd5\u6709 $n$ \u5c42\uff0cta\u8ba1\u5212\u5728\u7b2c $i$ \u5c42\u653e $a_i$ \u7684\u5976\u6cb9\uff0c\u8fd9\u4e9b\u5976\u6cb9\u4f1a\u6d78\u6e7f\u4e0b\u9762\uff08\u5305\u62ec\u7b2c $i$ \u5c42\uff09\u7684 $a_i$ \u5c42\uff0cArkady\u60f3\u77e5\u9053\uff0c\u4ed6\u505a\u51fa\u6765\u7684\u86cb\u7cd5\u7684\u6240\u6709\u5c42\u662f\u5426\u6709\u5976\u6cb9\u3002\n\ntranslated by @[\u65e0\u53ef\u5339\u654c\u996d\u91cf](https://www.luogu.com.cn/user/246099)"
}