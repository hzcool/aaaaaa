{
    "description": "You are given an array of $ n $ integers $ a_1, a_2, \\dots, a_n $\n\nYou can apply the following operation an arbitrary number of times:\n\n- select an index $ i $ ( $ 1 \\le i \\le n $ ) and replace the value of the element $ a_i $ with the value $ a_i + (a_i \\bmod 10) $ , where $ a_i \\bmod 10 $ is the remainder of the integer dividing $ a_i $ by $ 10 $ .\n\nFor a single index (value $ i $ ), this operation can be applied multiple times. If the operation is applied repeatedly to the same index, then the current value of $ a_i $ is taken into account each time. For example, if $ a_i=47 $ then after the first operation we get $ a_i=47+7=54 $ , and after the second operation we get $ a_i=54+4=58 $ .\n\nCheck if it is possible to make all array elements equal by applying multiple (possibly zero) operations.\n\nFor example, you have an array $ [6, 11] $ .\n\n- Let's apply this operation to the first element of the array. Let's replace $ a_1 = 6 $ with $ a_1 + (a_1 \\bmod 10) = 6 + (6 \\bmod 10) = 6 + 6 = 12 $ . We get the array $ [12, 11] $ .\n- Then apply this operation to the second element of the array. Let's replace $ a_2 = 11 $ with $ a_2 + (a_2 \\bmod 10) = 11 + (11 \\bmod 10) = 11 + 1 = 12 $ . We get the array $ [12, 12] $ .\n\nThus, by applying $ 2 $ operations, you can make all elements of an array equal.",
    "inputFormat": "The first line contains one integer $ t $ ( $ 1 \\le t \\le 10^4 $ ) \u2014 the number of test cases. What follows is a description of each test case.\n\nThe first line of each test case contains one integer $ n $ ( $ 1 \\le n \\le 2 \\cdot 10^5 $ ) \u2014 the size of the array.\n\nThe second line of each test case contains $ n $ integers $ a_i $ ( $ 0 \\le a_i \\le 10^9 $ ) \u2014 array elements.\n\nIt is guaranteed that the sum of $ n $ over all test cases does not exceed $ 2 \\cdot 10^5 $ .",
    "outputFormat": "For each test case print:\n\n- YES if it is possible to make all array elements equal;\n- NO otherwise.\n\nYou can print YES and NO in any case (for example, the strings yEs, yes, Yes and YES will be recognized as a positive answer) .",
    "samples": [
        [
            "10\n2\n6 11\n3\n2 18 22\n5\n5 10 5 10 5\n4\n1 2 4 8\n2\n4 5\n3\n93 96 102\n2\n40 6\n2\n50 30\n2\n22 44\n2\n1 5",
            "Yes\nNo\nYes\nYes\nNo\nYes\nNo\nNo\nYes\nNo"
        ]
    ],
    "hint": "The first test case is clarified above.\n\nIn the second test case, it is impossible to make all array elements equal.\n\nIn the third test case, you need to apply this operation once to all elements equal to $ 5 $ .\n\nIn the fourth test case, you need to apply this operation to all elements until they become equal to $ 8 $ .\n\nIn the fifth test case, it is impossible to make all array elements equal.\n\nIn the sixth test case, you need to apply this operation to all elements until they become equal to $ 102 $ .",
    "translation": "### \u9898\u610f\n\u6bcf\u4e2a\u6d4b\u8bd5\u70b9\u542b\u591a\u7ec4\u6d4b\u8bd5\u6570\u636e\u3002\n\n\u5bf9\u4e8e\u6bcf\u7ec4\u6d4b\u8bd5\u6570\u636e\n\n\u7b2c1\u884c \u4e00\u4e2a\u6574\u6570 $ n $ \uff0c\u8868\u793a\u8be5\u6570\u636e\u4e2a\u6570\n\n\u7b2c2\u884c $ n $ \u4e2a\u6574\u6570\uff0c\u4f60\u9700\u8981\u5224\u65ad\u662f\u5426\u7b26\u5408\u9898\u610f\u7684\u6570\u636e\n\n\u5bf9\u6bcf\u7ec4\u6570\u636e\uff0c\u4f60\u53ef\u4ee5\u5bf9\u5176\u4f5c\u82e5\u5e72\u6b21\uff08\u53ef\u4ee5\u4e3a\u96f6\uff09\u5982\u4e0b\u64cd\u4f5c\uff1a\n\n\u9009\u53d6\u6570\u636e\u4e2d\u7684\u4e00\u4e2a\u6570  $ a_i $  \u5c06\u5176\u66ff\u6362\u4e3a $ a_i + (a_i \\bmod 10) $ \n\n\u95ee\u7ecf\u8fc7\u82e5\u5e72\u6b21\u53d8\u6362\u540e\uff0c\u8be5\u7ec4\u6570\u636e\u80fd\u5426\u5168\u90e8\u76f8\u540c\n\n### \u8f93\u5165\n\n\u7b2c\u4e00\u884c \u4e00\u4e2a\u6574\u6570 $ t $ ( $ 1 \\le t \\le 10^4 $ ) \n\n\u6bcf\u7ec4\u6d4b\u8bd5\u6570\u636e\u7b2c\u4e00\u884c \u4e00\u4e2a\u6574\u6570 $ n $ ( $ 1 \\le n \\le 2 \\cdot 10^5 $ ) \n\n\u6bcf\u7ec4\u6d4b\u8bd5\u6570\u636e\u7b2c\u4e8c\u884c $ n $ \u4e2a\u6574\u6570 $ a_i $ ( $ 0 \\le a_i \\le 10^9 $ ) \n### \u8f93\u51fa\n\n\u5bf9\u6bcf\u7ec4\u6570\u636e\uff0c\u82e5\u6ee1\u8db3\u9898\u610f\uff0c\u8f93\u51fa YES\uff0c\u53cd\u4e4b\u8f93\u51fa NO\uff0c\u5bf9\u5927\u5c0f\u5199\u4e0d\u4f5c\u8981\u6c42\u3002"
}