{
    "description": "You have an integer $ n $ . Let's define following tree generation as McDic's generation:\n\n1. Make a complete and full binary tree of $ 2^{n} - 1 $ vertices. Complete and full binary tree means a tree that exactly one vertex is a root, all leaves have the same depth (distance from the root), and all non-leaf nodes have exactly two child nodes.\n2. Select a non-root vertex $ v $ from that binary tree.\n3. Remove $ v $ from tree and make new edges between $ v $ 's parent and $ v $ 's direct children. If $ v $ has no children, then no new edges will be made.\n\nYou have a tree. Determine if this tree can be made by McDic's generation. If yes, then find the parent vertex of removed vertex in tree.",
    "inputFormat": "The first line contains integer $ n $ ( $ 2 \\le n \\le 17 $ ).\n\nThe $ i $ -th of the next $ 2^{n} - 3 $ lines contains two integers $ a_{i} $ and $ b_{i} $ ( $ 1 \\le a_{i} \\lt b_{i} \\le 2^{n} - 2 $ ) \u2014 meaning there is an edge between $ a_{i} $ and $ b_{i} $ . It is guaranteed that the given edges form a tree.",
    "outputFormat": "Print two lines.\n\nIn the first line, print a single integer \u2014 the number of answers. If given tree cannot be made by McDic's generation, then print $ 0 $ .\n\nIn the second line, print all possible answers in ascending order, separated by spaces. If the given tree cannot be made by McDic's generation, then don't print anything.",
    "samples": [
        [
            "4\n1 2\n1 3\n2 4\n2 5\n3 6\n3 13\n3 14\n4 7\n4 8\n5 9\n5 10\n6 11\n6 12\n",
            "1\n3\n"
        ],
        [
            "2\n1 2\n",
            "2\n1 2\n"
        ],
        [
            "3\n1 2\n2 3\n3 4\n4 5\n5 6\n",
            "0\n"
        ]
    ],
    "hint": "In the first example, $ 3 $ is the only possible answer.\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1228F/1754fd4bf87edec9c525b2fea719abcb3e1c738a.png)In the second example, there are $ 2 $ possible answers.\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1228F/d157817934097a9f3fbcc09dc41c3ec14e3ff427.png)In the third example, the tree can't be generated by McDic's generation.",
    "translation": "#### \u9898\u76ee\u63cf\u8ff0\n\n\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570$n(2\\le n\\le17)$\n\n\u6211\u4eec\u5c06\u4f1a\u5148\u751f\u6210\u4e00\u4e2a\u5927\u5c0f\u4e3a$2^n-1$\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u5176\u6709\u4e00\u4e2a\u6839\n\n\u73b0\u5728\u4ee5\u67d0\u79cd\u89c4\u5219\u5220\u53bb\u4e86\u5176\u4e2d\u7684\u4e00\u4e2a\u975e\u6839\u8282\u70b9\uff0c\u5177\u4f53\u89c4\u5219\u5982\u4e0b\uff1a\n\n\u8bbe\u5220\u53bb\u70b9\u4e3a$u$\n\n\u90a3\u4e48\u6211\u4eec\u4f1a\u5220\u53bb\u6240\u6709$u$\u7684\u51fa\u8fb9\uff0c\u7136\u540e\u5c06\u5176\u6240\u6709\u76f4\u7cfb\u513f\u5b50\u4e0e$u$\u7684\u7236\u4eb2\u8fde\u4e00\u6761\u8fb9\uff0c\u7279\u522b\u7684\uff0c\u5982\u679c$u$\u662f\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u4e0d\u4f1a\u8fde\u8fb9.\n\n\u73b0\u5728\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u5e0c\u671b\u4f60\u6c42\u51fa\u5176\u80fd\u5426\u4ee5\u4e0a\u8ff0\u89c4\u5219\u901a\u8fc7\u5220\u9664\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u4e00\u4e2a\u70b9\u540e\u5f97\u5230\uff0c\u5982\u679c\u53ef\u4ee5\uff0c\u6c42\u51fa\u65b9\u6848\u6570\u5e76\u8f93\u51fa\u6240\u6709\u65b9\u6848\u4e2d$u$\u7684\u7236\u4eb2\uff0c\u4f60\u9700\u8981\u5347\u5e8f\u8f93\u51fa\n\n#### \u8f93\u5165\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u6b63\u6574\u6570$n$\n\n\u63a5\u4e0b\u6765$2^n-3$\u884c\uff0c\u6bcf\u884c\u63cf\u8ff0\u7ed9\u5b9a\u6811\u7684\u4e00\u6761\u8fb9\n\n#### \u8f93\u51fa\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\u8f93\u51fa\u65b9\u6848\u6570\uff0c\u82e5\u4e0d\u4e3a$0$\uff0c\u5219\u7b2c\u4e8c\u884c\u5347\u5e8f\u8f93\u51fa\u6240\u6709\u53ef\u80fd\u7684\u7236\u4eb2\u8282\u70b9\uff0c\u5426\u5219\u4e0d\u8f93\u51fa\u7b2c\u4e8c\u884c"
}