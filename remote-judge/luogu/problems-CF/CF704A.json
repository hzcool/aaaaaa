{
    "description": "Thor is getting used to the Earth. As a gift Loki gave him a smartphone. There are $ n $ applications on this phone. Thor is fascinated by this phone. He has only one minor issue: he can't count the number of unread notifications generated by those applications (maybe Loki put a curse on it so he can't).\n\n $ q $ events are about to happen (in chronological order). They are of three types:\n\n1. Application $ x $ generates a notification (this new notification is unread).\n2. Thor reads all notifications generated so far by application $ x $ (he may re-read some notifications).\n3. Thor reads the first $ t $ notifications generated by phone applications (notifications generated in first $ t $ events of the first type). It's guaranteed that there were at least $ t $ events of the first type before this event. Please note that he doesn't read first $ t $ unread notifications, he just reads the very first $ t $ notifications generated on his phone and he may re-read some of them in this operation.\n\nPlease help Thor and tell him the number of unread notifications after each event. You may assume that initially there are no notifications in the phone.",
    "inputFormat": "The first line of input contains two integers $ n $ and $ q $ ( $ 1<=n,q<=300000 $ ) \u2014 the number of applications and the number of events to happen.\n\nThe next $ q $ lines contain the events. The $ i $ -th of these lines starts with an integer $ type_{i} $ \u2014 type of the $ i $ -th event. If $ type_{i}=1 $ or $ type_{i}=2 $ then it is followed by an integer $ x_{i} $ . Otherwise it is followed by an integer $ t_{i} $ ( $ 1<=type_{i}<=3,1<=x_{i}<=n,1<=t_{i}<=q $ ).",
    "outputFormat": "Print the number of unread notifications after each event.",
    "samples": [
        [
            "3 4\n1 3\n1 1\n1 2\n2 3\n",
            "1\n2\n3\n2\n"
        ],
        [
            "4 6\n1 2\n1 4\n1 2\n3 3\n1 3\n1 3\n",
            "1\n2\n3\n0\n1\n2\n"
        ]
    ],
    "hint": "In the first sample:\n\n1. Application $ 3 $ generates a notification (there is $ 1 $ unread notification).\n2. Application $ 1 $ generates a notification (there are $ 2 $ unread notifications).\n3. Application $ 2 $ generates a notification (there are $ 3 $ unread notifications).\n4. Thor reads the notification generated by application $ 3 $ , there are $ 2 $ unread notifications left.\n\nIn the second sample test:\n\n1. Application $ 2 $ generates a notification (there is $ 1 $ unread notification).\n2. Application $ 4 $ generates a notification (there are $ 2 $ unread notifications).\n3. Application $ 2 $ generates a notification (there are $ 3 $ unread notifications).\n4. Thor reads first three notifications and since there are only three of them so far, there will be no unread notification left.\n5. Application $ 3 $ generates a notification (there is $ 1 $ unread notification).\n6. Application $ 3 $ generates a notification (there are $ 2 $ unread notifications).",
    "translation": "\uff08\u53ef\u80fd\u65e0\u5173\u7d27\u8981\u7684\u5730\u65b9\u6709\u70b9\u6f0f\u6d1e\uff0c\u4f46\u4e0d\u4f1a\u5f71\u54cd\u9898\u610f\uff09\n\u3010\u9898\u76ee\u63cf\u8ff0\u3011\n\n\u96f7\u795e\u5e38\u5e38\u8981\u53bb\u5730\u7403\uff0c\u6240\u4ee5\u6d1b\u57fa\u7ed9**\u5979**\u4e00\u6b3e\u667a\u80fd\u624b\u673a\u4f5c\u4e3a\u793c\u7269\u3002\u624b\u673a\u4e0a\u5b89\u88c5\u4e86n\u6b3e\u5e94\u7528\uff0c\u6bcf\u6b3e\u5e94\u7528\u90fd\u4f1a\u8df3\u51fa\u5f88\u591a\u6d88\u606f\uff0c\u5728\u6bcf\u4e00\u5355\u4f4d\u65f6\u95f4\uff0c\u4f1a\u53d1\u751f\u4ee5\u4e0b3\u79cd\u4e8b\u4ef6\u4e4b\u4e00\uff1a\n\n- 1) \u7b2cx\u4e2a\u5e94\u7528\u8df3\u51fa\u4e86\u4e00\u6761\u6d88\u606f\n\n- 2) \u96f7\u795e\u8bfb\u4e86\u7b2cx\u4e2a\u5e94\u7528\u8df3\u51fa\u7684\u6240\u6709\u6d88\u606f\n\n- 3) \u96f7\u795e\u8bfb\u4e86\u6240\u6709\u5e94\u7528\u8df3\u51fa\u7684\u524dx\u6761\u6d88\u606f\n\n\u96f7\u795e\u5f88\u4e0d\u559c\u6b22\u624b\u673a\u4e0a\u6709\u4e00\u5806\u201c99+\u201d\uff0c\u6240\u4ee5**\u5979**\u5e0c\u671b\u77e5\u9053\uff0c\u6bcf\u4e00\u5206\u949f\u540e\u6709\u591a\u5c11\u6761\u65b0\u6d88\u606f\u672a\u8bfb\u3002\n\n\u3010\u8f93\u5165\u683c\u5f0f\u3011\n\n\u7b2c\u4e00\u884c2\u4e2a\u6574\u6570n,q\u8868\u793a\u5e94\u7528\u7684\u6570\u76ee\u548c\u4e8b\u4ef6\u603b\u6570\n\n\u63a5\u4e0b\u6765\u6709q\u884c\uff0c\u6bcf\u884c2\u4e2a\u6574\u6570i,x\u8868\u793a\u53d1\u751f\u4e8b\u4ef6i(i=1,2,3\u5373\u4e0e\u9898\u76ee\u63cf\u8ff0\u4e2d\u7684\u5e8f\u53f7\u5bf9\u5e94\uff09\u548c\u4e8b\u4ef6\u4e2d\u7684x\n\n\u3010\u8f93\u51fa\u683c\u5f0f\u3011\n\n\u5171q\u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u6574\u6570\u8868\u793a\u6bcf\u4e2a\u4e8b\u4ef6\u53d1\u751f\u540e\u6709\u591a\u5c11\u672a\u8bfb\u6d88\u606f\n\n\u3010\u8f93\u5165\u6837\u4f8b1\u3011\n\n```\n3 4\n1 3\n1 1\n1 2\n2 3\n```\n\n\u3010\u8f93\u51fa\u6837\u4f8b1\u3011\n```\n1\n2\n3\n2\n```\n\u3010\u8f93\u5165\u6837\u4f8b2\u3011\n```\n4 6\n1 2\n1 4\n1 2\n3 3\n1 3\n1 3\n```\n\u3010\u8f93\u51fa\u6837\u4f8b2\u3011\n```\n1\n2\n3\n0\n1\n2\n```\n\u3010\u6570\u636e\u8303\u56f4\u3011\n\u5bf9\u4e8e100%\u7684\u6570\u636e\uff0c\u6ee1\u8db3$1<=n,q<=300000$\uff0c\u4e14\u4fdd\u8bc1\u6bcf\u4e2a\u4e8b\u4ef6\u5408\u6cd5\u3002"
}