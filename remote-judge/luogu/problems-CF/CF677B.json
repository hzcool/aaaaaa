{
    "description": "Vanya smashes potato in a vertical food processor. At each moment of time the height of the potato in the processor doesn't exceed $ h $ and the processor smashes $ k $ centimeters of potato each second. If there are less than $ k $ centimeters remaining, than during this second processor smashes all the remaining potato.\n\nVanya has $ n $ pieces of potato, the height of the $ i $ -th piece is equal to $ a_{i} $ . He puts them in the food processor one by one starting from the piece number $ 1 $ and finishing with piece number $ n $ . Formally, each second the following happens:\n\n1. If there is at least one piece of potato remaining, Vanya puts them in the processor one by one, until there is not enough space for the next piece.\n2. Processor smashes $ k $ centimeters of potato (or just everything that is inside).\n\nProvided the information about the parameter of the food processor and the size of each potato in a row, compute how long will it take for all the potato to become smashed.",
    "inputFormat": "The first line of the input contains integers $ n $ , $ h $ and $ k $ ( $ 1<=n<=100000,1<=k<=h<=10^{9} $ ) \u2014 the number of pieces of potato, the height of the food processor and the amount of potato being smashed each second, respectively.\n\nThe second line contains $ n $ integers $ a_{i} $ ( $ 1<=a_{i}<=h $ ) \u2014 the heights of the pieces.",
    "outputFormat": "Print a single integer \u2014 the number of seconds required to smash all the potatoes following the process described in the problem statement.",
    "samples": [
        [
            "5 6 3\n5 4 3 2 1\n",
            "5\n"
        ],
        [
            "5 6 3\n5 5 5 5 5\n",
            "10\n"
        ],
        [
            "5 6 3\n1 2 1 1 1\n",
            "2\n"
        ]
    ],
    "hint": "Consider the first sample.\n\n1. First Vanya puts the piece of potato of height $ 5 $ into processor. At the end of the second there is only amount of height $ 2 $ remaining inside.\n2. Now Vanya puts the piece of potato of height $ 4 $ . At the end of the second there is amount of height $ 3 $ remaining.\n3. Vanya puts the piece of height $ 3 $ inside and again there are only $ 3 $ centimeters remaining at the end of this second.\n4. Vanya finally puts the pieces of height $ 2 $ and $ 1 $ inside. At the end of the second the height of potato in the processor is equal to $ 3 $ .\n5. During this second processor finally smashes all the remaining potato and the process finishes.\n\nIn the second sample, Vanya puts the piece of height $ 5 $ inside and waits for $ 2 $ seconds while it is completely smashed. Then he repeats the same process for $ 4 $ other pieces. The total time is equal to $ 2\u00b75=10 $ seconds.\n\nIn the third sample, Vanya simply puts all the potato inside the processor and waits $ 2 $ seconds.",
    "translation": "\u74e6\u5c3c\u4e9a\u5728\u4e00\u4e2a\u5782\u76f4\u7684\u98df\u54c1\u5904\u7406\u5668\u4e2d\u7c89\u788e\u571f\u8c46\u3002  \r\n\u4f60\u53ef\u4ee5\u628a\u5b83\u60f3\u8c61\u6210\u4e00\u4e2a\u5706\u67f1\u4f53\uff0c\u4ece\u4e0a\u9762\u585e\u5165\uff0c\u4ece\u4e0b\u9762\u7c89\u788e\u540e\u5410\u51fa\u3002    \r\n\u6bcf\u4e2a\u571f\u8c46\u53ef\u4ee5\u89c6\u4e3a\u6761\u72b6\u3002\r\n\r\n\u5904\u7406\u5668\u4e2d\u7684\u571f\u8c46\u9ad8\u5ea6\u4e0d\u8d85\u8fc7$h$(\u5426\u5219\u4f1a\u6ee1\u51fa\u6765)\uff0c\u5904\u7406\u5668\u6bcf\u79d2\u7c89\u788e$k$\u5398\u7c73\u7684\u571f\u8c46\u3002\u5982\u679c\u5904\u7406\u5668\u91cc\u5269\u4e0d\u5230$k$\u5398\u7c73\u571f\u8c46\uff0c\u5219\u7c89\u788e\u6240\u6709\u5269\u4f59\u7684\u571f\u8c46\u3002\r\n\r\n\r\n\r\n\u74e6\u5c3c\u4e9a\u6709$n$\u6761\u571f\u8c46\uff0c\u7b2c$i$\u5757\u7684\u957f\u5ea6\u7b49\u4e8e$a_i$\u3002\u4ed6\u628a\u5b83\u4eec\u6309\u987a\u5e8f\u4ece$1$\u53f7\u5230$n$\u53f7\u653e\u8fdb\u98df\u54c1\u5904\u7406\u5668\uff0c\u4ece$1$\u53f7\u5f00\u59cb\uff0c\u5230$n$\u53f7\u7ed3\u675f\u3002\r\n\r\n\u6bcf\u79d2\u4f1a\u53d1\u751f\u5982\u4e0b\u4e8b\u4ef6\uff1a\r\n\r\n1.\u5982\u679c\u8fd8\u6709\u81f3\u5c11\u4e00\u6761\u571f\u8c46\u6ca1\u653e\u8fdb\u53bb\uff0c\u74e6\u5c3c\u4e9a\u5c06\u5b83\u4eec\u9010\u4e00\u653e\u5165\u5904\u7406\u5668\uff0c\u76f4\u5230\u6ca1\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u653e\u7f6e\u4e0b\u4e00\u7247\uff0c\u5373\u585e\u5230\u585e\u4e0d\u8fdb\u4e3a\u6b62\u3002\r\n\r\n2.\u5904\u7406\u5668\u7c89\u788e\u4e86$k$\u5398\u7c73\u6216\u5269\u4e0b\u5168\u90e8\u7684\u571f\u8c46\u3002\r\n\r\n\r\n## \u8f93\u5165\u8f93\u51fa\u683c\u5f0f\r\n\r\n### \u8f93\u5165\u683c\u5f0f\uff1a\r\n\r\n\u8f93\u5165\u7684\u7b2c\u4e00\u884c\u5305\u542b\u6574\u6570$n$\u3001$h$\u548c$k$  \r\n\uff08$1\u2264n\u2264100 000,1\u2264k\u2264h\u2264109$\uff09\uff0c\u542b\u4e49\u5982\u4e0a\u3002\r\n\r\n\r\n\r\n\u7b2c\u4e8c\u884c\u5305\u542b$n$\u4e2a\u6574\u6570$a_i$\uff081\u2264a_i\u2264h\uff09\uff0c\u5373\u571f\u8c46\u957f\u5ea6\u3002\r\n\r\n\r\n\r\n### \u8f93\u51fa\u683c\u5f0f\uff1a\r\n\r\n\u6700\u77ed\u9700\u8981\u7c89\u788e\u6240\u6709\u571f\u8c46\u7684\u65f6\u95f4\u3002"
}