{
    "description": "Monocarp and Polycarp are learning new programming techniques. Now they decided to try pair programming.\n\nIt's known that they have worked together on the same file for $ n + m $ minutes. Every minute exactly one of them made one change to the file. Before they started, there were already $ k $ lines written in the file.\n\nEvery minute exactly one of them does one of two actions: adds a new line to the end of the file or changes one of its lines.\n\nMonocarp worked in total for $ n $ minutes and performed the sequence of actions $ [a_1, a_2, \\dots, a_n] $ . If $ a_i = 0 $ , then he adds a new line to the end of the file. If $ a_i > 0 $ , then he changes the line with the number $ a_i $ . Monocarp performed actions strictly in this order: $ a_1 $ , then $ a_2 $ , ..., $ a_n $ .\n\nPolycarp worked in total for $ m $ minutes and performed the sequence of actions $ [b_1, b_2, \\dots, b_m] $ . If $ b_j = 0 $ , then he adds a new line to the end of the file. If $ b_j > 0 $ , then he changes the line with the number $ b_j $ . Polycarp performed actions strictly in this order: $ b_1 $ , then $ b_2 $ , ..., $ b_m $ .\n\nRestore their common sequence of actions of length $ n + m $ such that all actions would be correct \u2014 there should be no changes to lines that do not yet exist. Keep in mind that in the common sequence Monocarp's actions should form the subsequence $ [a_1, a_2, \\dots, a_n] $ and Polycarp's \u2014 subsequence $ [b_1, b_2, \\dots, b_m] $ . They can replace each other at the computer any number of times.\n\nLet's look at an example. Suppose $ k = 3 $ . Monocarp first changed the line with the number $ 2 $ and then added a new line (thus, $ n = 2, \\: a = [2, 0] $ ). Polycarp first added a new line and then changed the line with the number $ 5 $ (thus, $ m = 2, \\: b = [0, 5] $ ).\n\nSince the initial length of the file was $ 3 $ , in order for Polycarp to change line number $ 5 $ two new lines must be added beforehand. Examples of correct sequences of changes, in this case, would be $ [0, 2, 0, 5] $ and $ [2, 0, 0, 5] $ . Changes $ [0, 0, 5, 2] $ (wrong order of actions) and $ [0, 5, 2, 0] $ (line $ 5 $ cannot be edited yet) are not correct.",
    "inputFormat": "The first line contains an integer $ t $ ( $ 1 \\le t \\le 1000 $ ). Then $ t $ test cases follow. Before each test case, there is an empty line.\n\nEach test case contains three lines. The first line contains three integers $ k $ , $ n $ , $ m $ ( $ 0 \\le k \\le 100 $ , $ 1 \\le n, m \\le 100 $ ) \u2014 the initial number of lines in file and lengths of Monocarp's and Polycarp's sequences of changes respectively.\n\nThe second line contains $ n $ integers $ a_1, a_2, \\dots, a_n $ ( $ 0 \\le a_i \\le 300 $ ).\n\nThe third line contains $ m $ integers $ b_1, b_2, \\dots, b_m $ ( $ 0 \\le b_j \\le 300 $ ).",
    "outputFormat": "For each test case print any correct common sequence of Monocarp's and Polycarp's actions of length $ n + m $ or -1 if such sequence doesn't exist.",
    "samples": [
        [
            "5\n\n3 2 2\n2 0\n0 5\n\n4 3 2\n2 0 5\n0 6\n\n0 2 2\n1 0\n2 3\n\n5 4 4\n6 0 8 0\n0 7 0 9\n\n5 4 1\n8 7 8 0\n0",
            "2 0 0 5 \n0 2 0 6 5 \n-1\n0 6 0 7 0 8 0 9\n-1"
        ]
    ],
    "hint": "",
    "translation": "\u521d\u59cb\u6709 $k$ \u884c\uff0c\u7ed9\u5b9a\u4e24\u4e2a\u64cd\u4f5c\u5e8f\u5217 $a$ \u548c $b$ \uff0c\u4f60\u9700\u8981\u5c06\u5b83\u4eec\u5408\u5e76\u4e3a\u4e00\u4e2a\u64cd\u4f5c\u5e8f\u5217\uff0c\u9700\u4fdd\u8bc1\u5b83\u5728\u539f\u6570\u5217\u4e2d\u7684\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u53d8\u3002\u5c06\u64cd\u4f5c\u5e8f\u5217\u4f9d\u6b21\u64cd\u4f5c\uff0c\u5982\u679c\u64cd\u4f5c\u4e3a $0$ \u5219\u5c06 $k$ \u52a0\u4e00\uff0c\u82e5\u4e0d\u4e3a $0$ \u4e14\u5927\u4e8e $k$ \uff0c\u5219\u8be5\u5e8f\u5217\u4e0d\u5408\u6cd5\u3002\u95ee\u662f\u5426\u5b58\u5728\u5408\u6cd5\u5e8f\u5217\uff0c\u5982\u679c\u6709\u8bf7\u7ed9\u51fa\u4e00\u4e2a\u3002\u82e5\u6ca1\u6709\uff0c\u5219\u8f93\u51fa `-1` \u3002"
}