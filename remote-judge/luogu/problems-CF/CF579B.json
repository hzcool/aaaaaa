{
    "description": "There is a programing contest named SnakeUp, $ 2n $ people want to compete for it. In order to attend this contest, people need to form teams of exactly two people. You are given the strength of each possible combination of two people. All the values of the strengths are distinct.\n\nEvery contestant hopes that he can find a teammate so that their team\u2019s strength is as high as possible. That is, a contestant will form a team with highest strength possible by choosing a teammate from ones who are willing to be a teammate with him/her. More formally, two people $ A $ and $ B $ may form a team if each of them is the best possible teammate (among the contestants that remain unpaired) for the other one.\n\nCan you determine who will be each person\u2019s teammate?",
    "inputFormat": "There are $ 2n $ lines in the input.\n\nThe first line contains an integer $ n $ ( $ 1<=n<=400 $ ) \u2014 the number of teams to be formed.\n\nThe $ i $ -th line ( $ i&gt;1 $ ) contains $ i-1 $ numbers $ a_{i1} $ , $ a_{i2} $ , ... , $ a_{i(i-1)} $ . Here $ a_{ij} $ ( $ 1<=a_{ij}<=10^{6} $ , all $ a_{ij} $ are distinct) denotes the strength of a team consisting of person $ i $ and person $ j $ (people are numbered starting from $ 1 $ .)",
    "outputFormat": "Output a line containing $ 2n $ numbers. The $ i $ -th number should represent the number of teammate of $ i $ -th person.",
    "samples": [
        [
            "2\n6\n1 2\n3 4 5\n",
            "2 1 4 3\n"
        ],
        [
            "3\n487060\n3831 161856\n845957 794650 976977\n83847 50566 691206 498447\n698377 156232 59015 382455 626960\n",
            "6 5 4 3 2 1\n"
        ]
    ],
    "hint": "In the first sample, contestant $ 1 $ and $ 2 $ will be teammates and so do contestant $ 3 $ and $ 4 $ , so the teammate of contestant $ 1 $ , $ 2 $ , $ 3 $ , $ 4 $ will be $ 2 $ , $ 1 $ , $ 4 $ , $ 3 $ respectively.",
    "translation": "**\u6709\u4e00\u4e2a\u7a0b\u5e8f\u7ade\u8d5b\uff0c\u540d\u4e3asnakeup\uff0c2n2n\u4eba\u60f3\u7ade\u4e89\u5b83\u3002\u4e3a\u4e86\u53c2\u52a0\u8fd9\u6b21\u6bd4\u8d5b\uff0c\u4eba\u4eec\u9700\u8981\u7ec4\u6210\u4e24\u4e2a\u4eba\u7684\u961f\u4f0d\u3002\u4f60\u88ab\u8d4b\u4e88\u4e86\u4e24\u4e2a\u4eba\u6bcf\u4e00\u4e2a\u53ef\u80fd\u7ec4\u5408\u7684\u529b\u91cf\u3002\u4f18\u52bf\u7684\u6240\u6709\u4ef7\u503c\u89c2\u90fd\u662f\u4e0d\u540c\u7684\u3002\r\n\r\n\u6bcf\u4e2a\u53c2\u8d5b\u8005\u90fd\u5e0c\u671b\u4ed6\u80fd\u627e\u5230\u4e00\u4e2a\u961f\u53cb\uff0c\u8fd9\u6837\u4ed6\u4eec\u7684\u961f\u4f0d\u7684\u529b\u91cf\u5c31\u8d8a\u5927\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53c2\u8d5b\u8005\u5c06\u4ece\u613f\u610f\u4e0e\u4ed6/\u5979\u4e00\u8d77\u6210\u4e3a\u961f\u53cb\u7684\u4eba\u4e2d\u9009\u62e9\u4e00\u4e2a\u5c3d\u53ef\u80fd\u5f3a\u5927\u7684\u961f\u53cb\uff0c\u7ec4\u6210\u4e00\u4e2a\u56e2\u961f\u3002\u66f4\u6b63\u5f0f\u5730\u8bf4\uff0c\u4e24\u4e2a\u4ebaA\u548cB\u53ef\u4ee5\u7ec4\u6210\u4e00\u4e2a\u56e2\u961f\uff0c\u5982\u679c\u4ed6\u4eec\u6bcf\u4e2a\u4eba\u90fd\u662f\u53e6\u4e00\u4e2a\u4eba\u6700\u597d\u7684\u961f\u53cb\uff08\u5728\u6ca1\u6709\u6bd4\u8d5b\u7684\u53c2\u8d5b\u8005\u4e2d\uff09\u3002\r\n\r\n\u4f60\u80fd\u786e\u5b9a\u8c01\u662f\u6bcf\u4e2a\u4eba\u7684\u961f\u53cb\u5417\uff1f**"
}