{
    "description": "This is an interactive problem.\n\nWe hid from you a permutation $ p $ of length $ n $ , consisting of the elements from $ 1 $ to $ n $ . You want to guess it. To do that, you can give us 2 different indices $ i $ and $ j $ , and we will reply with $ p_{i} \\bmod p_{j} $ (remainder of division $ p_{i} $ by $ p_{j} $ ).\n\nWe have enough patience to answer at most $ 2 \\cdot n $ queries, so you should fit in this constraint. Can you do it?\n\nAs a reminder, a permutation of length $ n $ is an array consisting of $ n $ distinct integers from $ 1 $ to $ n $ in arbitrary order. For example, $ [2,3,1,5,4] $ is a permutation, but $ [1,2,2] $ is not a permutation ( $ 2 $ appears twice in the array) and $ [1,3,4] $ is also not a permutation ( $ n=3 $ but there is $ 4 $ in the array).",
    "inputFormat": "The only line of the input contains a single integer $ n $ ( $ 1 \\le n \\le 10^4 $ ) \u2014 length of the permutation.",
    "outputFormat": "The interaction starts with reading $ n $ .\n\nThen you are allowed to make at most $ 2 \\cdot n $ queries in the following way:\n\n- \"? x y\" ( $ 1 \\le x, y \\le n, x \\ne y $ ).\n\nAfter each one, you should read an integer $ k $ , that equals $ p_x \\bmod p_y $ .\n\nWhen you have guessed the permutation, print a single line \"! \" (without quotes), followed by array $ p $ and quit.\n\nAfter printing a query do not forget to output end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use:\n\n- fflush(stdout) or cout.flush() in C++;\n- System.out.flush() in Java;\n- flush(output) in Pascal;\n- stdout.flush() in Python;\n- see documentation for other languages.\n\nExit immediately after receiving \"-1\" and you will see Wrong answer verdict. Otherwise you can get an arbitrary verdict because your solution will continue to read from a closed stream.\n\nHack format\n\nIn the first line output $ n $ ( $ 1 \\le n \\le 10^4 $ ). In the second line print the permutation of $ n $ integers $ p_1, p_2, \\ldots, p_n $ .",
    "samples": [
        [
            "3\n\n1\n\n2\n\n1\n\n0",
            "? 1 2\n\n? 3 2\n\n? 1 3\n\n? 2 1\n\n! 1 3 2"
        ]
    ],
    "hint": "",
    "translation": "\u6709\u4e00\u4e2a\u524d $ n $ \u4e2a\u6b63\u6574\u6570\u7684\u6392\u5217\uff0c\u6bcf\u6b21\u8be2\u95ee $ x,y $ \u5f97\u5230 $ a_x mod a_y $ \u7684\u503c\uff0c\u6700\u591a\u4f7f\u7528 $ 2n $ \u6b21\u8be2\u95ee\uff0c\u731c\u51fa\u8fd9\u4e2a\u5e8f\u5217\u3002"
}