{
    "description": "Consider an infinite triangle made up of layers. Let's number the layers, starting from one, from the top of the triangle (from top to bottom). The $ k $ -th layer of the triangle contains $ k $ points, numbered from left to right. Each point of an infinite triangle is described by a pair of numbers $ (r, c) $ ( $ 1 \\le c \\le r $ ), where $ r $ is the number of the layer, and $ c $ is the number of the point in the layer. From each point $ (r, c) $ there are two directed edges to the points $ (r+1, c) $ and $ (r+1, c+1) $ , but only one of the edges is activated. If $ r + c $ is even, then the edge to the point $ (r+1, c) $ is activated, otherwise the edge to the point $ (r+1, c+1) $ is activated. Look at the picture for a better understanding.\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1506F/2590a689fe7bd1eeca079bb14e0735bc33acbbf0.png)Activated edges are colored in black. Non-activated edges are colored in gray.From the point $ (r_1, c_1) $ it is possible to reach the point $ (r_2, c_2) $ , if there is a path between them only from activated edges. For example, in the picture above, there is a path from $ (1, 1) $ to $ (3, 2) $ , but there is no path from $ (2, 1) $ to $ (1, 1) $ .\n\nInitially, you are at the point $ (1, 1) $ . For each turn, you can:\n\n- Replace activated edge for point $ (r, c) $ . That is if the edge to the point $ (r+1, c) $ is activated, then instead of it, the edge to the point $ (r+1, c+1) $ becomes activated, otherwise if the edge to the point $ (r+1, c+1) $ , then instead if it, the edge to the point $ (r+1, c) $ becomes activated. This action increases the cost of the path by $ 1 $ ;\n- Move from the current point to another by following the activated edge. This action does not increase the cost of the path.\n\nYou are given a sequence of $ n $ points of an infinite triangle $ (r_1, c_1), (r_2, c_2), \\ldots, (r_n, c_n) $ . Find the minimum cost path from $ (1, 1) $ , passing through all $ n $ points in arbitrary order.",
    "inputFormat": "The first line contains one integer $ t $ ( $ 1 \\le t \\le 10^4 $ ) is the number of test cases. Then $ t $ test cases follow.\n\nEach test case begins with a line containing one integer $ n $ ( $ 1 \\le n \\le 2 \\cdot 10^5 $ ) is the number of points to visit.\n\nThe second line contains $ n $ numbers $ r_1, r_2, \\ldots, r_n $ ( $ 1 \\le r_i \\le 10^9 $ ), where $ r_i $ is the number of the layer in which $ i $ -th point is located.\n\nThe third line contains $ n $ numbers $ c_1, c_2, \\ldots, c_n $ ( $ 1 \\le c_i \\le r_i $ ), where $ c_i $ is the number of the $ i $ -th point in the $ r_i $ layer.\n\nIt is guaranteed that all $ n $ points are distinct.\n\nIt is guaranteed that there is always at least one way to traverse all $ n $ points.\n\nIt is guaranteed that the sum of $ n $ over all test cases does not exceed $ 2 \\cdot 10^5 $ .",
    "outputFormat": "For each test case, output the minimum cost of a path passing through all points in the corresponding test case.",
    "samples": [
        [
            "4\n3\n1 4 2\n1 3 1\n2\n2 4\n2 3\n2\n1 1000000000\n1 1000000000\n4\n3 10 5 8\n2 5 2 4",
            "0\n1\n999999999\n2"
        ]
    ],
    "hint": "",
    "translation": "### \u9898\u76ee\u63cf\u8ff0\n\n\u8003\u8651\u4e00\u4e2a\u591a\u5c42\u7684\u201c\u65e0\u7a77\u4e09\u89d2\u5f62\u201d\uff0c\u6bcf\u5c42\u81ea\u4e0a\u5411\u4e0b\u4ece\u4e00\u5f00\u59cb\u7f16\u53f7\u3002\u7b2c $k$ \u5c42\u6709 $k$ \u4e2a\u8282\u70b9\uff0c\u81ea\u5de6\u5411\u53f3\u4ece\u4e00\u5f00\u59cb\u7f16\u53f7\u3002\u4e09\u89d2\u5f62\u4e0a\u6bcf\u4e2a\u70b9\u7531\u5750\u6807 $(r,c)$ \u8868\u793a\uff0c\u5176\u4e2d\u524d\u4e00\u4e2a\u5750\u6807\u8868\u793a\u5c42\uff0c\u540e\u4e00\u4e2a\u5750\u6807\u8868\u793a\u5e8f\u53f7\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9 $(r,c)$ \u8fde\u4e24\u6761**\u6709\u5411**\u8fb9\u5230\u70b9 $(r+1,c)$ \u548c $(r+1,c+1)$\uff0c\u4f46\u662f\u53ea\u6709\u5176\u4e2d\u4e00\u6761\u8fb9\u88ab\u6fc0\u6d3b\u3002\u5982\u679c $r+c$ \u662f\u5076\u6570\uff0c\u5219\u5230 $(r+1,c)$ \u7684\u8fb9\u88ab\u6fc0\u6d3b\u3002\u5426\u5219\u5230 $(r+1,c+1)$ \u7684\u8fb9\u88ab\u6fc0\u6d3b\u3002\u5982\u679c\u60a8\u4e0d\u80fd\u7406\u89e3\u53ef\u4ee5\u770b\u9898\u56fe\u7406\u89e3\u3002\u56fe\u4e2d\u201c\u88ab\u6fc0\u6d3b\u7684\u8fb9\u201d\u4e3a\u9ed1\u8272\uff0c\u5176\u4ed6\u8fb9\u4e3a\u7070\u8272\u3002\u5982\u679c\u53ef\u4ee5\u6cbf\u7740\u88ab\u6fc0\u6d3b\u7684\u8fb9\u81ea $(r_1,c_1)$ \u5230 $(r_2,c_2)$\uff0c\u79f0\u8fd9\u4e24\u4e2a\u70b9\u8fde\u901a\u3002\u4f8b\u5982\uff0c$(1,1)$ \u548c $(3,2)$ \u8fde\u901a\uff0c\u4f46 $(2,1)$ \u548c $(1,1)$ \u4e0d\u8fde\u901a\u3002\n\n\u4e00\u5f00\u59cb\uff0c\u4f60\u5728 $1,1$\u3002\u6bcf\u4e00\u6b65\u53ef\u4ee5\uff1a\n\n- \u6539\u53d8\u6fc0\u6d3b\u6027\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u5c06\u672c\u6765\u5230 $(r+1,c)$ \u7684\u6fc0\u6d3b\u8fb9\u53bb\u6fc0\u6d3b\u5e76\u4f7f\u5f97\u5230 $(r+1,c+1)$ \u7684\u8fb9\u88ab\u6fc0\u6d3b\u3002\u8fd9\u4e2a\u64cd\u4f5c\u82b1\u8d39 $1$ \u7684\u4ee3\u4ef7\u3002\n\n- \u987a\u7740\u6fc0\u6d3b\u7684\u8fb9\u5230\u8fbe\u4e0b\u4e00\u5c42\uff0c\u65e0\u9700\u6d88\u8017\u4ee3\u4ef7\u3002\n\n\u73b0\u5728\u4f60\u88ab\u7ed9\u51fa\u4e00\u4e2a\u201c\u65e0\u7a77\u4e09\u89d2\u5f62\u201d\u4e0a\u7684\u70b9\u7684\u5e8f\u5217 $Q={r_i,c_i}$\uff0c\u73b0\u5728\u8bf7\u4f60\u627e\u5230\u82b1\u8d39\u6700\u5c0f\u7684\u65b9\u5f0f\uff0c\u4f7f\u5f97\u4f60\u987a\u5229\u7ecf\u8fc7\u8fd9\u4e9b\u70b9\uff0c\u4e0d\u5fc5\u8003\u8651\u987a\u5e8f\u3002\n\n### \u8f93\u5165\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570 $T$ \u8868\u793a\u6d4b\u8bd5\u6570\u636e\u7ec4\u6570\u3002\n\n\u6bcf\u4e2a\u6570\u636e\u7ec4\u4ee5\u4e00\u4e2a\u6574\u6570 $n$ \u5f00\u5934\u8868\u793a\u5e8f\u5217 $Q$ \u4e2d\u70b9\u7684\u4e2a\u6570\u3002\uff08\u4e5f\u5c31\u662f\u4f60\u8981\u7ecf\u8fc7\u7684\u70b9\u7684\u603b\u6570\uff09\n\n\u7b2c\u4e8c\u884c\u5305\u62ec $n$ \u4e2a\u6574\u6570\uff0c\u7b2c $i$ \u4e2a\u8868\u793a $r_i$\u3002\n\n\u7b2c\u4e09\u884c\u5305\u62ec $n$ \u4e2a\u6574\u6570\uff0c\u7b2c $i$ \u4e2a\u8868\u793a $c_i$\u3002\n\n\u6570\u636e\u4fdd\u8bc1 $n$ \u4e2a\u70b9\u4e92\u4e0d\u76f8\u540c\uff0c\u5e76\u4e00\u5b9a\u6709\u89e3\u3002\n\n### \u8f93\u51fa\u683c\u5f0f\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u6d4b\u8bd5\u6570\u636e\u7ec4\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5c0f\u7684\u82b1\u8d39\u3002\n\n### \u6570\u636e\u8303\u56f4\n\n$1\\leqslant\\sum n\\leqslant2\\times10^5,1\\leqslant c_i\\leqslant r_i \\leqslant 10^9,1\\leqslant t\\leqslant10^4$"
}