{
    "description": "As you know, every birthday party has a cake! This time, Babaei is going to prepare the very special birthday party's cake.\n\nSimple cake is a cylinder of some radius and height. The volume of the simple cake is equal to the volume of corresponding cylinder. Babaei has $ n $ simple cakes and he is going to make a special cake placing some cylinders on each other.\n\nHowever, there are some additional culinary restrictions. The cakes are numbered in such a way that the cake number $ i $ can be placed only on the table or on some cake number $ j $ where $ j&lt;i $ . Moreover, in order to impress friends Babaei will put the cake $ i $ on top of the cake $ j $ only if the volume of the cake $ i $ is strictly greater than the volume of the cake $ j $ .\n\nBabaei wants to prepare a birthday cake that has a maximum possible total volume. Help him find this value.",
    "inputFormat": "The first line of the input contains a single integer $ n $ ( $ 1<=n<=100000) $ \u2014 the number of simple cakes Babaei has.\n\nEach of the following $ n $ lines contains two integers $ r_{i} $ and $ h_{i} $ ( $ 1<=r_{i},h_{i}<=10000 $ ), giving the radius and height of the $ i $ -th cake.",
    "outputFormat": "Print the maximum volume of the cake that Babaei can make. Your answer will be considered correct if its absolute or relative error does not exceed $ 10^{-6} $ .\n\nNamely: let's assume that your answer is $ a $ , and the answer of the jury is $ b $ . The checker program will consider your answer correct, if ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF629D/c5d4f85807f95b08a3db7aae534822038a5bf1df.png).",
    "samples": [
        [
            "2\n100 30\n40 10\n",
            "942477.796077000\n"
        ],
        [
            "4\n1 1\n9 7\n1 4\n10 7\n",
            "3983.539484752\n"
        ]
    ],
    "hint": "In first sample, the optimal way is to choose the cake number $ 1 $ .\n\nIn second sample, the way to get the maximum volume is to use cakes with indices $ 1 $ , $ 2 $ and $ 4 $ .",
    "translation": "### \u9898\u76ee\u63cf\u8ff0\uff1a\r\n\r\nBabaei\u6253\u7b97\u5236\u4f5c\u4e00\u4e2a\u7279\u6b8a\u7684\u86cb\u7cd5\u3002\u86cb\u7cd5\u7531\u4e00\u4e9b\u5df2\u77e5\u534a\u5f84\u548c\u9ad8\u5ea6\u7684\u5706\u67f1\u4f53\u7ec4\u6210\uff0c\u86cb\u7cd5\u7684\u4f53\u79ef\u7b49\u4e8e\u76f8\u5e94\u5706\u67f1\u4f53\u7684\u4f53\u79ef\u4e4b\u548c\u3002 \r\n\r\n\u4f46\u662f\uff0c\u8fd8\u6709\u4e00\u4e9b\u989d\u5916\u7684\u70f9\u996a\u9650\u5236\u3002\u7f16\u53f7\u4e3a i \u7684\u86cb\u7cd5\u53ea\u80fd\u653e\u5728\u684c\u5b50\u4e0a\u6216\u7f16\u53f7\u4e3a j \u7684\u86cb\u7cd5\u4e0a\uff0c\u5176\u4e2dj < i\u3002 \u6b64\u5916\uff0c\u4e3a\u4e86\u7ed9\u670b\u53cb\u4eec\u7559\u4e0b\u6df1\u523b\u5370\u8c61\uff0c\u53ea\u6709\u5f53\u86cb\u7cd5 i \u7684\u4f53\u79ef\u8d85\u8fc7\u86cb\u7cd5 j \u7684\u4f53\u79ef\u65f6\uff0cBabaei\u624d\u4f1a\u628a\u86cb\u7cd5 i \u653e\u5728\u86cb\u7cd5 j \u4e0a\u9762\u3002\r\n\r\nBabaei\u60f3\u8981\u51c6\u5907\u4e00\u4e2a\u603b\u4f53\u79ef\u6700\u5927\u7684\u751f\u65e5\u86cb\u7cd5\uff0c\u8bf7\u4f60\u5e2e\u52a9\u4ed6\u627e\u5230\u8fd9\u4e2a\u6700\u5927\u4f53\u79ef\u3002\r\n\r\n### \u8f93\u5165\u683c\u5f0f\uff1a\r\n\r\n\u8f93\u5165\u7684\u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570 n\uff081 <= n <= 100000\uff09\u4ee3\u8868  Babaei\u7684\u86cb\u7cd5\u6570\u91cf\u3002\r\n\r\n\u4ee5\u4e0bn\u884c\u4e2d\u7684\u6bcf\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570ri\u548chi\uff081 <= ri\uff0chi <= 10000\uff09\uff0c\u4ee3\u8868\u7b2c i \u4e2a\u86cb\u7cd5\u7684\u534a\u5f84\u548c\u9ad8\u5ea6\u3002\r\n\r\n### \u8f93\u51fa\u683c\u5f0f\uff1a\r\n\r\n\u8f93\u51faBabaei\u53ef\u4ee5\u5236\u4f5c\u7684\u86cb\u7cd5\u7684\u6700\u5927\u4f53\u79ef\u3002\u5982\u679c\u8bef\u5dee\u4e0d\u8d85\u8fc71e-6\uff0c\u5219\u8be5\u7b54\u6848\u5c06\u88ab\u89c6\u4e3a\u6b63\u786e\u3002\u5373\uff1a\u8f93\u51fa\u4e3aa\uff0c\u6807\u51c6\u7b54\u6848\u4e3ab\uff0c\u82e5|a-b|/max(1,b)\u22641e-6\uff0c\u4f60\u53ef\u4ee5AC"
}