{
    "description": "Timur has $ n $ candies. The $ i $ -th candy has a quantity of sugar equal to $ a_i $ . So, by eating the $ i $ -th candy, Timur consumes a quantity of sugar equal to $ a_i $ .\n\nTimur will ask you $ q $ queries regarding his candies. For the $ j $ -th query you have to answer what is the minimum number of candies he needs to eat in order to reach a quantity of sugar greater than or equal to $ x_j $ or print -1 if it's not possible to obtain such a quantity. In other words, you should print the minimum possible $ k $ such that after eating $ k $ candies, Timur consumes a quantity of sugar of at least $ x_j $ or say that no possible $ k $ exists.\n\nNote that he can't eat the same candy twice and queries are independent of each other (Timur can use the same candy in different queries).",
    "inputFormat": "The first line of input contains a single integer $ t $ ( $ 1 \\leq t \\leq 1000 $ ) \u2014 the number of test cases. The description of test cases follows.\n\nThe first line contains $ 2 $ integers $ n $ and $ q $ ( $ 1 \\leq n, q \\leq 1.5\\cdot10^5 $ ) \u2014 the number of candies Timur has and the number of queries you have to print an answer for respectively.\n\nThe second line contains $ n $ integers $ a_1, a_2, \\dots, a_n $ ( $ 1 \\leq a_i \\leq 10^4 $ ) \u2014 the quantity of sugar in each of the candies respectively.\n\nThen $ q $ lines follow.\n\nEach of the next $ q $ lines contains a single integer $ x_j $ ( $ 1 \\leq x_j \\leq 2 \\cdot 10^9 $ ) \u2013 the quantity Timur wants to reach for the given query.\n\nIt is guaranteed that the sum of $ n $ and the sum of $ q $ over all test cases do not exceed $ 1.5 \\cdot 10^5 $ .",
    "outputFormat": "For each test case output $ q $ lines. For the $ j $ -th line output the number of candies Timur needs to eat in order to reach a quantity of sugar greater than or equal to $ x_j $ or print -1 if it's not possible to obtain such a quantity.",
    "samples": [
        [
            "3\n8 7\n4 3 3 1 1 4 5 9\n1\n10\n50\n14\n15\n22\n30\n4 1\n1 2 3 4\n3\n1 2\n5\n4\n6",
            "1\n2\n-1\n2\n3\n4\n8\n1\n1\n-1"
        ]
    ],
    "hint": "For the first test case:\n\nFor the first query, Timur can eat any candy, and he will reach the desired quantity.\n\nFor the second query, Timur can reach a quantity of at least $ 10 $ by eating the $ 7 $ -th and the $ 8 $ -th candies, thus consuming a quantity of sugar equal to $ 14 $ .\n\nFor the third query, there is no possible answer.\n\nFor the fourth query, Timur can reach a quantity of at least $ 14 $ by eating the $ 7 $ -th and the $ 8 $ -th candies, thus consuming a quantity of sugar equal to $ 14 $ .\n\nFor the second test case:\n\nFor the only query of the second test case, we can choose the third candy from which Timur receives exactly $ 3 $ sugar. It's also possible to obtain the same answer by choosing the fourth candy.",
    "translation": "\u6709 $n$ \u9897\u7cd6\uff0c\u5403\u7b2c $i$ \u9897\u7cd6\u53ef\u4ee5\u5f97\u5230 $a_i$ \u7684\u7cd6\u5206\u3002\n\n\u6709 $q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u6700\u5c11\u5403\u591a\u5c11\u9897\u7cd6\u53ef\u4ee5\u5f97\u5230\u4e0d\u5c0f\u4e8e $x$ \u7684\u7cd6\u5206\uff0c\u65e0\u89e3\u8f93\u51fa `-1`\u3002\n\n\u6ce8\u610f\uff1a\u5728\u6bcf\u6b21\u8be2\u95ee\u4e2d\uff0c\u4e0d\u80fd\u591a\u6b21\u5403\u540c\u4e00\u9897\u7cd6\uff1b\u6bcf\u6b21\u8be2\u95ee\u4e92\u76f8\u72ec\u7acb\uff0c\u5373\u4e0d\u540c\u8be2\u95ee\u53ef\u4ee5\u5403\u540c\u4e00\u9897\u7cd6\u3002"
}