{
    "description": "Polycarp often uses his smartphone. He has already installed $ n $ applications on it. Application with number $ i $ takes up $ a_i $ units of memory.\n\nPolycarp wants to free at least $ m $ units of memory (by removing some applications).\n\nOf course, some applications are more important to Polycarp than others. He came up with the following scoring system \u2014 he assigned an integer $ b_i $ to each application:\n\n- $ b_i = 1 $ \u2014 regular application;\n- $ b_i = 2 $ \u2014 important application.\n\nAccording to this rating system, his phone has $ b_1 + b_2 + \\ldots + b_n $ convenience points.\n\nPolycarp believes that if he removes applications with numbers $ i_1, i_2, \\ldots, i_k $ , then he will free $ a_{i_1} + a_{i_2} + \\ldots + a_{i_k} $ units of memory and lose $ b_{i_1} + b_{i_2} + \\ldots + b_{i_k} $ convenience points.\n\nFor example, if $ n=5 $ , $ m=7 $ , $ a=[5, 3, 2, 1, 4] $ , $ b=[2, 1, 1, 2, 1] $ , then Polycarp can uninstall the following application sets (not all options are listed below):\n\n- applications with numbers $ 1, 4 $ and $ 5 $ . In this case, it will free $ a_1+a_4+a_5=10 $ units of memory and lose $ b_1+b_4+b_5=5 $ convenience points;\n- applications with numbers $ 1 $ and $ 3 $ . In this case, it will free $ a_1+a_3=7 $ units of memory and lose $ b_1+b_3=3 $ convenience points.\n- applications with numbers $ 2 $ and $ 5 $ . In this case, it will free $ a_2+a_5=7 $ memory units and lose $ b_2+b_5=2 $ convenience points.\n\nHelp Polycarp, choose a set of applications, such that if removing them will free at least $ m $ units of memory and lose the minimum number of convenience points, or indicate that such a set does not exist.",
    "inputFormat": "The first line contains one integer $ t $ ( $ 1 \\le t \\le 10^4 $ ) \u2014 the number of test cases. Then $ t $ test cases follow.\n\nThe first line of each test case contains two integers $ n $ and $ m $ ( $ 1 \\le n \\le 2 \\cdot 10^5 $ , $ 1 \\le m \\le 10^9 $ ) \u2014 the number of applications on Polycarp's phone and the number of memory units to be freed.\n\nThe second line of each test case contains $ n $ integers $ a_1, a_2, \\ldots, a_n $ ( $ 1 \\le a_i \\le 10^9 $ ) \u2014 the number of memory units used by applications.\n\nThe third line of each test case contains $ n $ integers $ b_1, b_2, \\ldots, b_n $ ( $ 1 \\le b_i \\le 2 $ ) \u2014 the convenience points of each application.\n\nIt is guaranteed that the sum of $ n $ over all test cases does not exceed $ 2 \\cdot 10^5 $ .",
    "outputFormat": "For each test case, output on a separate line:\n\n- -1, if there is no set of applications, removing which will free at least $ m $ units of memory;\n- the minimum number of convenience points that Polycarp will lose if such a set exists.",
    "samples": [
        [
            "5\n5 7\n5 3 2 1 4\n2 1 1 2 1\n1 3\n2\n1\n5 10\n2 3 2 3 2\n1 2 1 2 1\n4 10\n5 1 3 4\n1 2 1 2\n4 5\n3 2 1 2\n2 1 2 1",
            "2\n-1\n6\n4\n3"
        ]
    ],
    "hint": "In the first test case, it is optimal to remove applications with numbers $ 2 $ and $ 5 $ , freeing $ 7 $ units of memory. $ b_2+b_5=2 $ .\n\nIn the second test case, by removing the only application, Polycarp will be able to clear only $ 2 $ of memory units out of the $ 3 $ needed.\n\nIn the third test case, it is optimal to remove applications with numbers $ 1 $ , $ 2 $ , $ 3 $ and $ 4 $ , freeing $ 10 $ units of memory. $ b_1+b_2+b_3+b_4=6 $ .\n\nIn the fourth test case, it is optimal to remove applications with numbers $ 1 $ , $ 3 $ and $ 4 $ , freeing $ 12 $ units of memory. $ b_1+b_3+b_4=4 $ .\n\nIn the fifth test case, it is optimal to remove applications with numbers $ 1 $ and $ 2 $ , freeing $ 5 $ units of memory. $ b_1+b_2=3 $ .",
    "translation": "\u9898\u76ee\u5927\u610f\uff1a\n\n\u6709 $n$ \u4e2a\u7269\u54c1\u548c\u4e00\u4e2a\u6700\u4f4e\u4ef7\u503c $m$ \uff0c\u6bcf\u4e00\u4e2a\u7269\u54c1\u6709\u4e00\u4e2a\u4ef7\u503c $a_i$ \u548c \u4f53\u79ef $b_i$ \u4f53\u79ef\u53ea\u6709\u53ef\u80fd\u4e3a $1$ \u6216 $2$ \u3002\n\n\u4f60\u9700\u8981\u9009\u51fa\u51e0\u4e2a\u7269\u54c1\uff0c\u4f7f\u5f97\u5b83\u4eec\u7684\u4ef7\u503c\u548c\u5927\u4e8e\u7b49\u4e8e $m$ \u4e14\u4f7f\u4f53\u79ef\u6700\u5c0f\u3002\n\n$T$\u7ec4\u8be2\u95ee\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a\n\n$1 \\leq t \\leq 10^4$\uff0c $1 \\leq n \\leq 2 \\cdot 10^5$ \uff0c$1 \\leq a_i \\leq 10^9$\uff0c $1 \\leq b_i \\leq 2$\u3002\n\n\u4fdd\u8bc1 $\\sum n \\leq 2 \\cdot 10^5$\u3002"
}