{
    "description": "Polycarp has $ n $ friends, the $ i $ -th of his friends has $ a_i $ candies. Polycarp's friends do not like when they have different numbers of candies. In other words they want all $ a_i $ to be the same. To solve this, Polycarp performs the following set of actions exactly once:\n\n- Polycarp chooses $ k $ ( $ 0 \\le k \\le n $ ) arbitrary friends (let's say he chooses friends with indices $ i_1, i_2, \\ldots, i_k $ );\n- Polycarp distributes their $ a_{i_1} + a_{i_2} + \\ldots + a_{i_k} $ candies among all $ n $ friends. During distribution for each of $ a_{i_1} + a_{i_2} + \\ldots + a_{i_k} $ candies he chooses new owner. That can be any of $ n $ friends. Note, that any candy can be given to the person, who has owned that candy before the distribution process.\n\nNote that the number $ k $ is not fixed in advance and can be arbitrary. Your task is to find the minimum value of $ k $ .\n\nFor example, if $ n=4 $ and $ a=[4, 5, 2, 5] $ , then Polycarp could make the following distribution of the candies:\n\n- Polycarp chooses $ k=2 $ friends with indices $ i=[2, 4] $ and distributes $ a_2 + a_4 = 10 $ candies to make $ a=[4, 4, 4, 4] $ (two candies go to person $ 3 $ ).\n\nNote that in this example Polycarp cannot choose $ k=1 $ friend so that he can redistribute candies so that in the end all $ a_i $ are equal.\n\nFor the data $ n $ and $ a $ , determine the minimum value $ k $ . With this value $ k $ , Polycarp should be able to select $ k $ friends and redistribute their candies so that everyone will end up with the same number of candies.",
    "inputFormat": "The first line contains one integer $ t $ ( $ 1 \\le t \\le 10^4 $ ). Then $ t $ test cases follow.\n\nThe first line of each test case contains one integer $ n $ ( $ 1 \\le n \\le 2 \\cdot 10^5 $ ).\n\nThe second line contains $ n $ integers $ a_1, a_2, \\ldots, a_n $ ( $ 0 \\le a_i \\le 10^4 $ ).\n\nIt is guaranteed that the sum of $ n $ over all test cases does not exceed $ 2 \\cdot 10^5 $ .",
    "outputFormat": "For each test case output:\n\n- the minimum value of $ k $ , such that Polycarp can choose exactly $ k $ friends so that he can redistribute the candies in the desired way;\n- \"-1\" if no such value $ k $ exists.",
    "samples": [
        [
            "5\n4\n4 5 2 5\n2\n0 4\n5\n10 8 5 1 4\n1\n10000\n7\n1 1 1 1 1 1 1",
            "2\n1\n-1\n0\n0"
        ]
    ],
    "hint": "",
    "translation": "**\u3010\u9898\u76ee\u63cf\u8ff0\u3011**\n\nPolycarp \u6709 $n$ \u4e2a\u670b\u53cb\uff0c\u7b2c $i$ \u4e2a\u670b\u53cb\u6709 $a_i$ \u5757\u7cd6\u679c\u3002Polycarp \u5e0c\u671b\u4ed6\u7684\u6bcf\u4e2a\u670b\u53cb\u62e5\u6709\u7684\u7cd6\u679c\u6570\u91cf\u76f8\u540c\uff0c\u4e14\u4ed6\u80fd\u9009\u62e9\u4efb\u610f\u670b\u53cb\u5c06\u4ed6\u7684\u7cd6\u679c\u4efb\u610f\u5206\u914d\u7ed9\u5176\u4ed6\u670b\u53cb\u3002\u6c42 Polycarp \u6700\u5c11\u9700\u8981\u9009\u62e9\u51e0\u4e2a\u670b\u53cb\uff0c\u5c06\u4ed6\u4eec\u62e5\u6709\u7684\u7cd6\u679c\u91cd\u65b0\u5206\u914d\u5c31\u80fd\u8fbe\u6210\u76ee\u7684\u3002\n\n**\u3010\u8f93\u5165\u683c\u5f0f\u3011**\n\n\u5728\u8f93\u5165\u7684\u7b2c\u4e00\u884c\u4e3a\u4e00\u4e2a\u6574\u6570 $t$\uff08$1 \\le t \\le {10}^4$\uff09\uff0c\u4e3a\u6570\u636e\u7ec4\u6570\u3002\n\n\u63a5\u4e0b\u6765\u5bf9\u4e8e\u6bcf\u7ec4\u6570\u636e\uff0c\u7b2c\u4e00\u884c\u4e3a\u4e00\u4e2a\u6574\u6570 $n$\uff08$2 \\le n \\le 2 \\times {10}^5$\uff09\uff0c\u4e3a\u670b\u53cb\u7684\u6570\u91cf\uff1b\u7b2c\u4e8c\u884c\u6709 $n$ \u4e2a\u6574\u6570 $a_1, a_2, \\ldots , a_n$\uff08$0 \\le a_i \\le {10}^4$\uff09\uff0c\u4e3a\u6bcf\u4e2a\u670b\u53cb\u62e5\u6709\u7684\u7cd6\u679c\u6570\u3002\n\n\u4fdd\u8bc1\u5bf9\u4e8e\u6240\u6709\u7ec4\u6570\u636e $\\sum n \\le 2 \\times {10}^5$\u3002\n\n**\u3010\u8f93\u51fa\u683c\u5f0f\u3011**\n\n\u5bf9\u4e8e\u6bcf\u7ec4\u6570\u636e\uff0c\u8f93\u51fa\u4e00\u4e2a\u6574\u6570 $k$ \u8868\u793a Polycarp \u6700\u5c11\u9700\u8981\u9009\u62e9\u7684\u670b\u53cb\u6570\u91cf\u3002\n\n\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684 $k$\uff0c\u8bf7\u8f93\u51fa $-1$\u3002"
}