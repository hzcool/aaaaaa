{
    "description": "Polycarp has $ 3 $ positive integers $ a $ , $ b $ and $ c $ . He can perform the following operation exactly once.\n\n- Choose a positive integer $ m $ and multiply exactly one of the integers $ a $ , $ b $ or $ c $ by $ m $ .\n\nCan Polycarp make it so that after performing the operation, the sequence of three numbers $ a $ , $ b $ , $ c $ (in this order) forms an [arithmetic progression](https://en.wikipedia.org/wiki/Arithmetic_progression)? Note that you cannot change the order of $ a $ , $ b $ and $ c $ .\n\nFormally, a sequence $ x_1, x_2, \\dots, x_n $ is called an arithmetic progression (AP) if there exists a number $ d $ (called \"common difference\") such that $ x_{i+1}=x_i+d $ for all $ i $ from $ 1 $ to $ n-1 $ . In this problem, $ n=3 $ .\n\nFor example, the following sequences are AP: $ [5, 10, 15] $ , $ [3, 2, 1] $ , $ [1, 1, 1] $ , and $ [13, 10, 7] $ . The following sequences are not AP: $ [1, 2, 4] $ , $ [0, 1, 0] $ and $ [1, 3, 2] $ .\n\nYou need to answer $ t $ independent test cases.",
    "inputFormat": "The first line contains the number $ t $ ( $ 1 \\le t \\le 10^4 $ ) \u2014 the number of test cases.\n\nEach of the following $ t $ lines contains $ 3 $ integers $ a $ , $ b $ , $ c $ ( $ 1 \\le a, b, c \\le 10^8 $ ).",
    "outputFormat": "For each test case print \"YES\" (without quotes) if Polycarp can choose a positive integer $ m $ and multiply exactly one of the integers $ a $ , $ b $ or $ c $ by $ m $ to make $ [a, b, c] $ be an arithmetic progression. Print \"NO\" (without quotes) otherwise.\n\nYou can print YES and NO in any (upper or lower) case (for example, the strings yEs, yes, Yes and YES will be recognized as a positive answer).",
    "samples": [
        [
            "11\n10 5 30\n30 5 10\n1 2 3\n1 6 3\n2 6 3\n1 1 1\n1 1 2\n1 1 3\n1 100000000 1\n2 1 1\n1 2 2",
            "YES\nYES\nYES\nYES\nNO\nYES\nNO\nYES\nYES\nNO\nYES"
        ]
    ],
    "hint": "In the first and second test cases, you can choose the number $ m=4 $ and multiply the second number ( $ b=5 $ ) by $ 4 $ .\n\nIn the first test case the resulting sequence will be $ [10, 20, 30] $ . This is an AP with a difference $ d=10 $ .\n\nIn the second test case the resulting sequence will be $ [30, 20, 10] $ . This is an AP with a difference $ d=-10 $ .\n\nIn the third test case, you can choose $ m=1 $ and multiply any number by $ 1 $ . The resulting sequence will be $ [1, 2, 3] $ . This is an AP with a difference $ d=1 $ .\n\nIn the fourth test case, you can choose $ m=9 $ and multiply the first number ( $ a=1 $ ) by $ 9 $ . The resulting sequence will be $ [9, 6, 3] $ . This is an AP with a difference $ d=-3 $ .\n\nIn the fifth test case, it is impossible to make an AP.",
    "translation": "### \u9898\u76ee\u63cf\u8ff0\n$Polycarp$ \u6709 $3$ \u4e2a\u6574\u6570 $a,b,c$ \u3002\u4f60\u9700\u8981\u9009\u62e9\u4e00\u4e2a\u6574\u6570 $m$ \uff0c\u4f7f $a,b,c$ \u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u6570\u4e58\u4e0a\u5b83\uff0c\u5e76\u8ba9\u4e4b\u540e\u7684 $a,b,c$ \u6784\u6210[**\u7b97\u672f\u7ea7\u6570**](https://en.wikipedia.org/wiki/Arithmetic_progression)\u3002\n\n- [**\u7b97\u672f\u7ea7\u6570**](https://en.wikipedia.org/wiki/Arithmetic_progression)\uff1a\u4e00\u4e2a\u6570\u5217\u4e2d\u6bcf\u4e00\u7ec4\u76f8\u90bb\u7684\u4e24\u4e2a\u6570\u7684\u5dee\u76f8\u7b49\uff08\u5373\u4e3a**\u7b49\u5dee\u6570\u5217**\uff09\uff0c\u5982\uff1a$[5,10,15]$, $[3,2,1]$, $[1,1,1]$, $[13,10,7]$ \u3002\u800c $[1,2,4]$, $[0,1,0]$, $[1,3,2]$ \u5219\u4e0d\u80fd\u5f62\u6210[**\u7b97\u672f\u7ea7\u6570**](https://en.wikipedia.org/wiki/Arithmetic_progression)\u3002\n\n### \u8f93\u5165\u683c\u5f0f\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570 $t$ $(1\u2264t\u226410^4)$ \u8868\u793a\u6d4b\u8bd5\u7528\u4f8b\u7684\u6570\u91cf\u3002\n\n\u4e4b\u540e $t$ \u884c\u6bcf\u4e00\u884c\u662f $3$ \u4e2a\u6574\u6570 $a,b,c$  $(1\u2264a,b,c\u226410 \n^8)$ , \u610f\u4e49\u5982\u9898\u76ee\u63cf\u8ff0\u4e2d\u6240\u793a\u3002\n\n### \u8f93\u51fa\u683c\u5f0f\n\u5982\u679c\u5b58\u5728\u8fd9\u6837\u4e00\u4e2a $m$ , \u8f93\u51fa ```YES``` ,\u5426\u5219\u8f93\u51fa ```NO``` (\u5bf9 ```YES``` \u548c ```NO``` \u7684\u5927\u5c0f\u5199\u4e0d\u505a\u8981\u6c42\uff0c\u5982 ```YeS``` ```yeS``` \u4e5f\u662f\u53ef\u4ee5\u7684)\u3002"
}