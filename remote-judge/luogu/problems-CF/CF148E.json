{
    "description": "During her tantrums the princess usually smashes some collectable porcelain. Every furious shriek is accompanied with one item smashed.\n\nThe collection of porcelain is arranged neatly on $ n $ shelves. Within each shelf the items are placed in one row, so that one can access only the outermost items \u2014 the leftmost or the rightmost item, not the ones in the middle of the shelf. Once an item is taken, the next item on that side of the shelf can be accessed (see example). Once an item is taken, it can't be returned to the shelves.\n\nYou are given the values of all items. Your task is to find the maximal damage the princess' tantrum of $ m $ shrieks can inflict on the collection of porcelain.",
    "inputFormat": "The first line of input data contains two integers $ n $ ( $ 1<=n<=100 $ ) and $ m $ ( $ 1<=m<=10000 $ ). The next $ n $ lines contain the values of the items on the shelves: the first number gives the number of items on this shelf (an integer between $ 1 $ and $ 100 $ , inclusive), followed by the values of the items (integers between $ 1 $ and $ 100 $ , inclusive), in the order in which they appear on the shelf (the first number corresponds to the leftmost item, the last one \u2014 to the rightmost one). The total number of items is guaranteed to be at least $ m $ .",
    "outputFormat": "Output the maximal total value of a tantrum of $ m $ shrieks.",
    "samples": [
        [
            "2 3\n3 3 7 2\n3 4 1 5\n",
            "15\n"
        ],
        [
            "1 3\n4 4 3 1 2\n",
            "9\n"
        ]
    ],
    "hint": "In the first case there are two shelves, each with three items. To maximize the total value of the items chosen, one can take two items from the left side of the first shelf and one item from the right side of the second shelf.\n\nIn the second case there is only one shelf, so all three items are taken from it \u2014 two from the left side and one from the right side.",
    "translation": "\u9898\u610f\uff1a \u6709\u4e00\u4e2a\u516c\u4e3b\u4e00\u751f\u6c14\u5c31\u559c\u6b22\u6454\u4e1c\u897f\u3002\u73b0\u5728\u6709\u5f88\u591a\u4e2a\u67dc\u5b50\uff0c\u6bcf\u4e2a\u67dc\u5b50\u91cc\u9762\u88c5\u7740\u5f88\u591a\u7269\u54c1\uff0c\u516c\u4e3b\u6bcf\u6b21\u6454\u4e1c\u897f\u53ea\u80fd\u968f\u673a\u7684\u9009\u62e9\u4e00\u4e2a\u67dc\u5b50\uff0c\u62ff\u51fa\u6700\u5de6\u8fb9\u6216\u8005\u6700\u53f3\u8fb9\u7684\u4e00\u4e2a\u7269\u54c1\u6454\u788e\uff0c\u7ed9\u51fa\u516c\u4e3b\u6700\u591a\u751f\u6c14\u7684\u6b21\u6570m\uff0c\u6c42\u751f\u5b8c\u6c14\u4e4b\u540e\uff0c\u516c\u4e3b\u6454\u6389\u7269\u54c1\u7684\u4ef7\u503c\u7684\u6700\u5927\u603b\u548c\u3002\n\n\u8f93\u5165\uff1a \u7b2c\u4e00\u884c\u8f93\u5165n(1<=n<=100),m(1<=m<=10000),n\u4e3a\u67dc\u5b50\u7684\u5c42\u6570\uff0cm\u4e3a\u516c\u4e3b\u6700\u591a\u751f\u6c14\u7684\u6b21\u6570m\u3002\n\n\u63a5\u4e0b\u6765n\u884c\uff0c\u6bcf\u884c\u7b2c\u4e00\u4e2a\u8f93\u5165\u8be5\u5c42\u7269\u54c1\u7684\u6570\u91cfk(1<=k<=100),\u63a5\u4e0b\u6765\u8f93\u5165k\u4e2a\u7269\u54c1\u7684\u4ef7\u503cv[i]\u3002\n\n\u8f93\u51fa\uff1a \u8f93\u51fa\u6240\u6254\u7269\u54c1\u7684\u6700\u5927\u4ef7\u503c\nBy @AlphaGo  fix by @\u70c8\u9152\u8bf1\u9e7f"
}