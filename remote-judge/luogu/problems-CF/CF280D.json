{
    "description": "Consider integer sequence $ a_{1},a_{2},...,a_{n} $ . You should run queries of two types:\n\n- The query format is \" $ 0 $ $ i $ $ val $ \". In reply to this query you should make the following assignment: $ a_{i}=val $ .\n- The query format is \" $ 1 $ $ l $ $ r $ $ k $ \". In reply to this query you should print the maximum sum of at most $ k $ non-intersecting subsegments of sequence $ a_{l},a_{l+1},...,a_{r} $ . Formally, you should choose at most $ k $ pairs of integers $ (x_{1},y_{1}),(x_{2},y_{2}),...,(x_{t},y_{t}) $ $ (l<=x_{1}<=y_{1}<x_{2}<=y_{2}<...<x_{t}<=y_{t}<=r;\u00a0t<=k) $ such that the sum $ a_{x1}+a_{x1}+1+...+a_{y1}+a_{x2}+a_{x2}+1+...+a_{y2}+...+a_{xt}+a_{xt}+1+...+a_{yt} $ is as large as possible. Note that you should choose at most $ k $ subsegments. Particularly, you can choose 0 subsegments. In this case the described sum considered equal to zero.",
    "inputFormat": "The first line contains integer $ n $ $ (1<=n<=10^{5}) $ , showing how many numbers the sequence has. The next line contains $ n $ integers $ a_{1},a_{2},...,a_{n} $ $ (|a_{i}|<=500) $ .\n\nThe third line contains integer $ m $ $ (1<=m<=10^{5}) $ \u2014 the number of queries. The next $ m $ lines contain the queries in the format, given in the statement.\n\nAll changing queries fit into limits: $ 1<=i<=n $ , $ |val|<=500 $ .\n\nAll queries to count the maximum sum of at most $ k $ non-intersecting subsegments fit into limits: $ 1<=l<=r<=n $ , $ 1<=k<=20 $ . It is guaranteed that the number of the queries to count the maximum sum of at most $ k $ non-intersecting subsegments doesn't exceed $ 10000 $ .",
    "outputFormat": "For each query to count the maximum sum of at most $ k $ non-intersecting subsegments print the reply \u2014 the maximum sum. Print the answers to the queries in the order, in which the queries follow in the input.",
    "samples": [
        [
            "9\n9 -8 9 -1 -1 -1 9 -8 9\n3\n1 1 9 1\n1 1 9 2\n1 4 6 3\n",
            "17\n25\n0\n"
        ],
        [
            "15\n-4 8 -3 -10 10 4 -7 -7 0 -6 3 8 -10 7 2\n15\n1 3 9 2\n1 6 12 1\n0 6 5\n0 10 -7\n1 4 9 1\n1 7 9 1\n0 10 -3\n1 4 10 2\n1 3 13 2\n1 4 11 2\n0 15 -9\n0 13 -9\n0 11 -10\n1 5 14 2\n1 6 12 1\n",
            "14\n11\n15\n0\n15\n26\n18\n23\n8\n"
        ]
    ],
    "hint": "In the first query of the first example you can select a single pair $ (1,9) $ . So the described sum will be 17.\n\nLook at the second query of the first example. How to choose two subsegments? (1, 3) and (7, 9)? Definitely not, the sum we could get from (1, 3) and (7, 9) is 20, against the optimal configuration (1, 7) and (9, 9) with 25.\n\nThe answer to the third query is 0, we prefer select nothing if all of the numbers in the given interval are negative.",
    "translation": "\u957f\u5ea6\u4e3a$n$ \u7684\u6570\u5217\uff0c\u652f\u6301\u4e24\u79cd\u64cd\u4f5c\uff1a  \n1.\u4fee\u6539\u67d0\u4e2a\u4f4d\u7f6e\u7684\u503c  \n2.\u8be2\u95ee\u533a\u95f4$[l,r]$ \u91cc\u9009\u51fa\u81f3\u591a$k$ \u4e2a\u4e0d\u76f8\u4ea4\u7684\u5b50\u6bb5\u548c\u7684\u6700\u5927\u503c\u3002\n\u4e00\u5171\u6709$m$ \u4e2a\u64cd\u4f5c  \n\n\u611f\u8c22@Fheiwn \u63d0\u4f9b\u7684\u7ffb\u8bd1"
}