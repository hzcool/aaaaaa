{
    "description": "Col. Sheffard is going to make a training for Cpt. Plice. The colonel has a polygon containing infinite number of closed doors placed one by one in a row. Initially Cpt. Plice stands in front of the first door. The captain is able to perform the following two commands:\n\n- open the first closed door and go to the front of the next closed door (mark this command as '(' ),\n- go to the front of the last of currently opened doors and close it (mark this command as ')' ).\n\nA sequence of commands is valid if the following conditions are met:\n\n- there is at least one opened door when the command ')' should be performed (in particular, the first command shouldn't be ')'),\n- all the doors are closed after performing all commands from the sequence (the captain stands in front of the first door).\n\nCol. Sheffard received a template \u2014 a rectangular grid with $ n $ rows and $ m $ columns where each cell contains one of the commands, i.e. '(' or ')'. The colonel has to choose a training plan for the captain \u2014 select a non-empty rectangle from the grid, each row of the rectangle will be an independent training for the captain. The training plan is valid, if each row of the selected rectangle is a valid sequence of commands.\n\nYou are to find the number of ways to select a valid training plan for a given grid. The selected rectangle should be continuous, i.e. without holes. Plans are different if they have different positions of their corners even if their contents are the same.",
    "inputFormat": "The first line contains two integers $ n $ and $ m $ ( $ 1<=n,m<=50000 $ ) \u2014 number of rows and number of columns in the template respectively. Each of the following $ n $ lines contains a string with $ m $ symbols '(' or ')' \u2014 commands of the template. The total number of elements in the template doesn't exceed $ 10^{6} $ .",
    "outputFormat": "Output a single integer \u2014 the number of rectangles on the template, corresponding to a valid training plan. Two rectangles with equal content but different positions of corners should be counted both.",
    "samples": [
        [
            "1 5\n(()()\n",
            "3\n"
        ],
        [
            "3 2\n()\n()\n()\n",
            "6\n"
        ],
        [
            "4 4\n()()\n()()\n)()(\n()()\n",
            "13\n"
        ]
    ],
    "hint": ""
}