{
    "description": "You are given a $ 1 $ by $ n $ pixel image. The $ i $ -th pixel of the image has color $ a_i $ . For each color, the number of pixels of that color is at most $ 20 $ .\n\nYou can perform the following operation, which works like the bucket tool in paint programs, on this image:\n\n- pick a color \u2014 an integer from $ 1 $ to $ n $ ;\n- choose a pixel in the image;\n- for all pixels connected to the selected pixel, change their colors to the selected color (two pixels of the same color are considered connected if all the pixels between them have the same color as those two pixels).\n\nCompute the minimum number of operations needed to make all the pixels in the image have the same color.",
    "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $ t $ ( $ 1 \\le t \\le 10^3 $ ).\n\nThe first line of each test case contains a single integer $ n $ ( $ 1 \\le n \\le 3\\cdot10^3 $ ) \u2014 the number of pixels in the image.\n\nThe second line of each test case contains $ n $ integers $ a_1, a_2, \\ldots, a_n $ ( $ 1 \\le a_i \\le n $ ) \u2014 the colors of the pixels in the image.\n\nNote: for each color, the number of pixels of that color is at most $ 20 $ .\n\nIt is guaranteed that the sum of $ n $ over all test cases does not exceed $ 3\\cdot10^3 $ .",
    "outputFormat": "For each test case, print one integer: the minimum number of operations needed to make all the pixels in the image have the same color.",
    "samples": [
        [
            "3\n5\n1 2 3 2 1\n4\n1 1 2 2\n5\n1 2 1 4 2",
            "2\n1\n3"
        ]
    ],
    "hint": "In the first example, the optimal solution is to apply the operation on the third pixel changing its color to $ 2 $ and then to apply the operation on any pixel that has color $ 2 $ changing its color and the color of all pixels connected to it to $ 1 $ . The sequence of operations is then: $ [1, 2, 3, 2, 1] \\to [1, 2, 2, 2, 1] \\to [1, 1, 1, 1, 1] $ .\n\nIn the second example, we can either change the $ 1 $ s to $ 2 $ s in one operation or change the $ 2 $ s to $ 1 $ s also in one operation.\n\nIn the third example, one possible way to make all the pixels have the same color is to apply the operation on the first, third and the fourth pixel each time changing its color to $ 2 $ .",
    "translation": "\u7ed9\u5b9a\u957f\u5ea6\u4e3a $n$ \u7684\u989c\u8272\u5e8f\u5217 $a_i$\uff0c\u6bcf\u6b21\u4f60\u53ef\u4ee5\u9009\u62e9\u4efb\u610f\u957f\u5ea6\u7684**\u8fde\u7eed\u4e14\u989c\u8272\u76f8\u540c**\u7684\u4e00\u6bb5\u4f4d\u7f6e\uff0c\u5c06\u5176\u5168\u90e8\u53d8\u6210\u4efb\u610f\u540c\u4e00\u79cd\u989c\u8272\uff0c\u95ee\u4f60\u6700\u5c11\u603b\u5171\u9700\u8981\u591a\u5c11\u6b21\u64cd\u4f5c\u624d\u80fd\u4f7f\u5f97\u6574\u4e2a\u5e8f\u5217\u989c\u8272\u76f8\u540c\u3002\n\n**\u9650\u5236\uff1a** \u6bcf\u4e00\u79cd\u989c\u8272\u521d\u59cb\u65f6\u5728\u5e8f\u5217\u4e2d\u6700\u591a\u53ea\u670920\u4e2a\u4f4d\u7f6e\uff08\u662f\u8be5\u79cd\u989c\u8272\uff09\u3002\n\n### \u8f93\u5165\u683c\u5f0f\n\u9996\u5148\u4e00\u4e2a\u6574\u6570 $t\\le 1000$\uff0c\u8868\u793a\u6570\u636e\u7ec4\u6570\uff0c\u7136\u540e\u6bcf\u7ec4\u6570\u636e\u5148\u8f93\u5165\u4e00\u4e2a\u6570 $n\\le 3000$\uff0c\u7136\u540e\u8f93\u5165 $n$ \u4e2a\u6570 $a_i \\le n$\uff0c$\\sum n \\le 3000$\u3002\n\n### \u8f93\u51fa\u683c\u5f0f\n\n\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u6570\u636e\u8f93\u51fa\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u3002"
}