{
    "description": "For the simplicity, let's say that the \"Death Note\" is a notebook that kills a person when their name is written in it.\n\nIt's easy to kill with it, but it's pretty hard to keep track of people you haven't killed and still plan to. You decided to make a \"Death Database Management System\" \u2014 a computer program that provides the easy access to the database of possible victims. Let me describe its specifications to you.\n\nLet's define a victim entity: a victim has a name (not necessarily unique) that consists only of lowercase Latin letters and an integer suspicion value.\n\nAt the start of the program the user enters a list of $ n $ victim names into a database, each suspicion value is set to $ 0 $ .\n\nThen the user makes queries of two types:\n\n- $ 1~i~x $ \u2014 set the suspicion value of the $ i $ -th victim to $ x $ ;\n- $ 2~q $ \u2014 given a string $ q $ find the maximum suspicion value of a victim whose name is a contiguous substring of $ q $ .\n\nJust to remind you, this program doesn't kill people, it only helps to search for the names to write down in an actual notebook. Thus, the list of the victims in the database doesn't change throughout the queries.\n\nWhat are you waiting for? Write that program now!",
    "inputFormat": "The first line contains two integers $ n $ and $ m $ ( $ 1 \\le n, m \\le 3 \\cdot 10^5 $ ) \u2014 the number of victims and the number of queries, respectively.\n\nEach of the next $ n $ lines contains a single string $ s_i $ \u2014 the name of the $ i $ -th victim. Each name consists only of lowercase Latin letters.\n\nEach of the next $ m $ lines contains a query of one of two types:\n\n- $ 1~i~x $ ( $ 1 \\le i \\le n $ , $ 0 \\le x \\le 10^9 $ ) \u2014 change the suspicion value of the $ i $ -th victim to $ x $ ;\n- $ 2~q $ \u2014 given a string $ q $ consisting only of lowercase Latin letters find the maximum suspicion value of a victim whose name is a contiguous substring of $ q $ .\n\nThere is at least one query of the second type. The total length of the strings $ s_i $ doesn't exceed $ 3 \\cdot 10^5 $ . The total length of the strings $ q $ doesn't exceed $ 3 \\cdot 10^5 $ .",
    "outputFormat": "For each query of the second type print an integer value. If there is no victim name that is a contiguous substring of $ q $ , then print $ -1 $ . Otherwise, print the maximum suspicion value of a victim whose name is a contiguous substring of $ q $ .",
    "samples": [
        [
            "5 8\nkurou\ntakuo\ntakeshi\nnaomi\nshingo\n2 nakiraomi\n2 abanaomicaba\n1 3 943\n2 takuotakeshishingo\n1 5 135832\n2 shingotakeshi\n1 5 0\n2 shingotakeshi",
            "-1\n0\n943\n135832\n943"
        ],
        [
            "6 15\na\nab\nba\nb\na\nba\n2 aa\n1 4 4\n2 bbb\n1 2 1\n1 2 18\n2 b\n2 c\n1 6 10\n2 aba\n2 abbbba\n1 2 12\n2 bbaaab\n1 1 11\n1 5 5\n2 baa",
            "0\n4\n4\n-1\n18\n18\n12\n11"
        ]
    ],
    "hint": "",
    "translation": "## \u9898\u76ee\u80cc\u666f\n\n\uff08\u4e0b\u9762\u6709\u7b80\u5316\u63cf\u8ff0\uff0c\u4e0d\u60f3\u770b\u957f\u80cc\u666f\u5c31\u76f4\u63a5\u53bb\u4e0b\u9762\uff09\n\n(\u4e0e\u9898\u610f\u65e0\u5173)\u7b80\u5355\u6765\u8bf4\uff0c\u201c\u6b7b\u4ea1\u7b14\u8bb0\u201d\u662f\u4e00\u4e2a\u80fd\u628a\u540d\u5b57\u88ab\u5199\u5728\u7b14\u8bb0\u4e0a\u7684\u4eba\u6740\u6b7b\u7684\u7b14\u8bb0\u3002\n\n\u7528\u8fd9\u4e2a\u7b14\u8bb0\u6740\u4eba\u5f88\u5bb9\u6613\uff0c\u4f46\u6ca1\u6cd5\u7528\u5b83\u8bb0\u5f55\u4f60\u8ba1\u5212\u6740\u6b7b\u4f46\u5c1a\u672a\u6740\u6b7b\u7684\u4eba\uff08\u5199\u4e0a\u4eba\u540d\u5c31\u76f4\u63a5\u6740\u4e86\uff09\u3002\u6240\u4ee5\u4f60\u51b3\u5b9a\u5f00\u53d1\u4e00\u4e2a\u201c\u6b7b\u4ea1\u6570\u636e\u7ba1\u7406\u7cfb\u7edf\u201d-\u4e00\u4e2a\u80fd\u65b9\u4fbf\u5730\u63d0\u4f9b\u6f5c\u5728\u53d7\u5bb3\u8005\u4fe1\u606f\u7684\u7cfb\u7edf\u3002\u4e0b\u9762\u4e3a\u4f60\u63cf\u8ff0\u8fd9\u4e2a\u7cfb\u7edf\u3002\n\n## \u9898\u76ee\u63cf\u8ff0\n\u4e00\u4e2a\u53d7\u5bb3\u8005\u7531\u4e24\u4e2a\u4fe1\u606f\u63cf\u8ff0\uff1a\u4ec5\u7531\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u7684\u59d3\u540d\uff08\u4e0d\u4fdd\u8bc1\u552f\u4e00\uff09\u548c\u53d7\u6000\u7591\u7a0b\u5ea6\u3002\n\n\u6700\u5f00\u59cb\uff0c\u7cfb\u7edf\u7684\u4f7f\u7528\u8005\u8f93\u5165n\u4e2a\u53d7\u5bb3\u8005\u7684\u59d3\u540d\uff0c\u4ed6\u4eec\u7684\u53d7\u6000\u7591\u7a0b\u5ea6\u6700\u521d\u90fd\u4e3a0\u3002\n\n\u7136\u540e\u4f7f\u7528\u8005\u4f1a\u8fdb\u884c\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n- 1 i x \u5c06\u7b2ci\u4e2a\u53d7\u5bb3\u8005\u7684\u53d7\u6000\u7591\u7a0b\u5ea6\u6539\u4e3ax\n- 2 q \u7ed9\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32q\uff0c\u8be2\u95ee\u6240\u6709\u59d3\u540d\u662fq\u7684\u5b50\u4e32\u7684\u53d7\u5bb3\u8005\u7684\u53d7\u6000\u7591\u7a0b\u5ea6\u7684\u6700\u5927\u503c\n\n**\u6ce8\u610f**\uff0c\u8fd9\u4e2a\u7cfb\u7edf\u4e0d\u8d1f\u8d23\u6740\u4eba\uff0c\u56e0\u6b64\u5728\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u53d7\u5bb3\u8005\u90fd\u662f\u56fa\u5b9a\u7684\n\n## \u7b80\u5316\u63cf\u8ff0\n\n\u7ed9\u51fa$n,m$\uff0c\u7136\u540e\u7ed9\u51fan\u4e2a\u5b57\u7b26\u4e32\uff0c\u6bcf\u4e2a\u5b57\u7b26\u4e32\u90fd\u6709\u4e00\u4e2a\u6743\u503c\uff0c\u6700\u521d\u6743\u503c\u90fd\u4e3a0\n\n\u7136\u540e\u6709m\u4e2a\u64cd\u4f5c\uff0c\u64cd\u4f5c\u6709\u4e24\u79cd\u7c7b\u578b\n\n- 1 i x \u5c06\u7b2ci\u4e2a\u5b57\u7b26\u4e32\u7684\u6743\u503c\u4fee\u6539\u4e3ax\n\n- 2 q \u7ed9\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32q\uff0c\u6c42\u6240\u6709**\u662fq\u7684\u5b50\u4e32**\u7684\u5b57\u7b26\u4e32\u7684**\u6743\u503c\u7684\u6700\u5927\u503c**\n\n## \u8f93\u5165\u683c\u5f0f\n\u7b2c\u4e00\u884c\u7ed9\u51fa$n,m$\uff0c\u5206\u522b\u662f\u53d7\u5bb3\u8005\u6570\u91cf\u548c\u64cd\u4f5c\u6570\u91cf\n\n\u63a5\u4e0b\u6765n\u884c\u6bcf\u884c\u4e00\u4e2a\u5b57\u7b26\u4e32s\uff0c\u8868\u793a\u7b2ci\u4e2a\u53d7\u5bb3\u8005\u7684\u59d3\u540d\uff0c\u4fdd\u8bc1\u4e3a\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\n\n\u63a5\u4e0b\u6765m\u884c\u4e3am\u4e2a\u8be2\u95ee\uff0c\u683c\u5f0f\u5982**\u9898\u76ee\u63cf\u8ff0**\uff08\u6216**\u7b80\u5316\u63cf\u8ff0**\uff09\u4e2d\u6240\u5199\n\n## \u8f93\u51fa\u683c\u5f0f\n\u5bf9\u4e8e\u6bcf\u4e2a\u64cd\u4f5c2\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u59d3\u540d\u662f\u8be2\u95ee\u4e32q\u7684\u5b50\u4e32\u7684\u53d7\u5bb3\u8005\uff0c\u5219\u8f93\u51fa'-1'\uff0c\u5426\u5219\u8f93\u51fa\u6743\u503c\u7684\u6700\u5927\u503c\uff0c\u6bcf\u4e2a**\u64cd\u4f5c**\u7684\u8f93\u51fa**\u5360\u4e00\u884c**\n\n## \u6570\u636e\u8303\u56f4\n$1\\le n,m\\le 3\\times10^5$\n\n$\\sum length(s_i)\\le3\\times 10^5$\uff0c\u5373\u8f93\u5165\u7684\u53d7\u5bb3\u8005\u59d3\u540d\u4e32s\u7684\u957f\u5ea6\u548c\u4e0d\u8d85\u8fc7$3\\times10^5$\n\n\u64cd\u4f5c1\u4e2d$1\\le i\\le n \\space,\\space 0\\le x \\le 10^9$\n\n\u64cd\u4f5c2\u4e2d$\\sum length(q)\\le3\\times 10^5$\uff0c\u5373\u8be2\u95ee\u4e32\u957f\u5ea6\u548c\u4e0d\u8d85\u8fc7$3\\times 10^5$"
}