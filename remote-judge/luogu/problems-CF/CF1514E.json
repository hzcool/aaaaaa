{
    "description": "This is an interactive problem.\n\nBaby Ehab loves crawling around his apartment. It has $ n $ rooms numbered from $ 0 $ to $ n-1 $ . For every pair of rooms, $ a $ and $ b $ , there's either a direct passage from room $ a $ to room $ b $ , or from room $ b $ to room $ a $ , but never both.\n\nBaby Ehab wants to go play with Baby Badawy. He wants to know if he could get to him. However, he doesn't know anything about his apartment except the number of rooms. He can ask the baby sitter two types of questions:\n\n- is the passage between room $ a $ and room $ b $ directed from $ a $ to $ b $ or the other way around?\n- does room $ x $ have a passage towards any of the rooms $ s_1 $ , $ s_2 $ , ..., $ s_k $ ?\n\nHe can ask at most $ 9n $ queries of the first type and at most $ 2n $ queries of the second type.\n\nAfter asking some questions, he wants to know for every pair of rooms $ a $ and $ b $ whether there's a path from $ a $ to $ b $ or not. A path from $ a $ to $ b $ is a sequence of passages that starts from room $ a $ and ends at room $ b $ .",
    "inputFormat": "The first line contains an integer $ t $ ( $ 1 \\le t \\le 30 $ ) \u2014 the number of test cases you need to solve.\n\nThen each test case starts with an integer $ n $ ( $ 4 \\le n \\le 100 $ ) \u2014 the number of rooms.\n\nThe sum of $ n $ across the test cases doesn't exceed $ 500 $ .",
    "outputFormat": "To print the answer for a test case, print a line containing \"3\", followed by $ n $ lines, each containing a binary string of length $ n $ . The $ j $ -th character of the $ i $ -th string should be $ 1 $ if there's a path from room $ i $ to room $ j $ , and $ 0 $ if there isn't. The $ i $ -th character of the $ i $ -th string should be $ 1 $ for each valid $ i $ .\n\nAfter printing the answer, we will respond with a single integer. If it's $ 1 $ , you printed a correct answer and should keep solving the test cases (or exit if it is the last one). If it's $ -1 $ , you printed a wrong answer and should terminate to get Wrong answer verdict. Otherwise, you can get an arbitrary verdict because your solution will continue to read from a closed stream.\n\nInteraction\n\nTo ask a question of the first type, use the format:\n\n- $ 1 $ $ a $ $ b $ ( $ 0 \\le a,b \\le n-1 $ , $ a \\neq b $ ).\n- we will answer with $ 1 $ if the passage is from $ a $ to $ b $ , and $ 0 $ if it is from $ b $ to $ a $ .\n- you can ask at most $ 9n $ questions of this type in each test case.\n\nTo ask a question of the second type, use the format:\n\n- $ 2 $ $ x $ $ k $ $ s_1 $ $ s_2 $ ... $ s_k $ ( $ 0 \\le x,s_i \\le n-1 $ , $ 0 \\le k < n $ , $ x \\neq s_i $ , elements of $ s $ are pairwise distinct).\n- we will answer with $ 1 $ if there's a passage from $ x $ to any of the rooms in $ s $ , and $ 0 $ otherwise.\n- you can ask at most $ 2n $ questions of this type in each test case.\n\nIf we answer with $ -1 $ instead of a valid answer, that means you exceeded the number of queries or made an invalid query. Exit immediately after receiving $ -1 $ and you will see Wrong answer verdict. Otherwise, you can get an arbitrary verdict because your solution will continue to read from a closed stream.\n\nAfter printing a query, do not forget to output end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use:\n\n- fflush(stdout) or cout.flush() in C++;\n- System.out.flush() in Java;\n- flush(output) in Pascal;\n- stdout.flush() in Python;\n- see the documentation for other languages.\n\nHacks:\n\nThe first line should contain an integer $ t $ \u2014 the number of test cases.\n\nThe first line of each test case should contain an integer $ n $ ( $ 4 \\le n \\le 100 $ ) \u2014 the number of rooms.\n\nEach of the next $ n $ lines should contain a binary string of length $ n $ . The $ j $ -th character of the $ i $ -th string should be $ 1 $ if there's a passage from room $ i $ to room $ j $ , $ 0 $ otherwise. The $ i $ -th character of the $ i $ -th string should be $ 0 $ .",
    "samples": [
        [
            "1\n4\n\n0\n\n0\n\n1\n\n1\n\n1",
            "2 3 3 0 1 2\n\n1 0 1\n\n1 0 2\n\n2 2 1 1\n\n3\n1111\n1111\n1111\n0001"
        ]
    ],
    "hint": "In the given example:\n\n![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1514E/d99856b2abe4009b979ccdf65944f218e75effb1.png)\n\nThe first query asks whether there's a passage from room $ 3 $ to any of the other rooms.\n\nThe second query asks about the direction of the passage between rooms $ 0 $ and $ 1 $ .\n\nAfter a couple other queries, we concluded that you can go from any room to any other room except if you start at room $ 3 $ , and you can't get out of this room, so we printed the matrix:\n\n```\n<pre class=\"verbatim\"><br></br>1111<br></br>1111<br></br>1111<br></br>0001<br></br>\n```\n\nThe interactor answered with $ 1 $ , telling us the answer is correct.",
    "translation": "\u4ea4\u4e92\u9898\uff0c\u6709\u4e00\u5f20 $n\\ (n\\le100)$ \u4e2a\u70b9\u7684\u7ade\u8d5b\u56fe\u3002  \n\u8be2\u95ee1\uff1a\u53ef\u4ee5\u8be2\u95ee $x$ \u5230 $y$ \u5355\u5411\u8fb9\u65b9\u5411\uff0c\u8be2\u95ee\u6b21\u6570\u9650\u5236 $9n$\u3002  \n\n\u8be2\u95ee2\uff1a\u53ef\u4ee5\u8be2\u95ee $x$ \u5230 $\\{s_k\\}$ \u4e2d\u6709\u65e0 $x\\rightarrow s_k$ \u65b9\u5411\u7684\u8fb9\uff0c\u8be2\u95ee\u6b21\u6570\u9650\u5236 $2n$\u3002  \n\n\u73b0\u5728\u9700\u8981\u67e5\u8be2\u7ade\u8d5b\u56fe\u4efb\u610f\u4e24\u70b9\u8054\u901a\u72b6\u6001\u3002"
}