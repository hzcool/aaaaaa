{
    "description": "In this problem you will write a simple code generator for a 2D programming language derived from [Brainfuck](https://en.wikipedia.org/wiki/Brainfuck).\n\nThe code in this language is a rectangular grid of characters '.' and 'X'. The code is converted to a Brainfuck program as follows: the characters are read in the usual order (top to bottom, left to right), and each 'X' character is converted a Brainfuck instruction to be executed. The instruction is defined by the left, top and right neighbors of the 'X' character using the following conversion table:\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF952G/de5a0c0bfa2fbc80e44dad1d8d7c9310dc043297.png)You are given a string. Output a program in the described language which prints this string.\n\nYou can download the language interpreter used for judging here: <https://assets.codeforces.com/rounds/952/puzzling-interpreter.cpp> (use C++11 to compile the code). Note several implementation details:\n\n- The first step of the language interpretation is conversion to a Brainfuck program, which is then executed.\n- The code must be rectangular, with all lines of the same length. It can have at most 10,000 lines and 10,000 columns, and can have at most 500,000 'X' characters.\n- The code has toroidal topology, i.e. the 'X' on the first line will have top neighbor in the last line.\n- Brainfuck interpreter has 30000 memory cells which store integers from 0 to 255 with increment/decrement done modulo 256.\n- Console input (, command) is allowed in Brainfuck code but has no effect when executed.",
    "inputFormat": "The input consists of a single string of characters with ASCII codes between 33 ('!') and 122 ('z'), inclusive. The length of the string is between 1 and 10 characters, inclusive.",
    "outputFormat": "Output a program in the described language which, when executed, will print the given message.",
    "samples": [
        [
            "$$$",
            ".......X.......\n......XXX......\n.....XXXXX.....\n....XXXXXXX....\n...XXXXXXXXX...\n..XXXXXXXXXXX..\n.XXXXXXXXXXXXX.\n...............\nX.............X\nX..............\nX..............\nX..............\n"
        ]
    ],
    "hint": "The example corresponds to the following Brainfuck program:\n\n`       -<br></br>      >+<<br></br>     >+++<<br></br>    >+++++<<br></br>   >+++++++<<br></br>  >+++++++++<<br></br> >+++++++++++<<br></br><br></br><             ><br></br>.<br></br>.<br></br>.<br></br>`The triangular block decrements the first memory cell and sets the value of the second memory cell to 36 - the ASCII code of '$' character. The next line after the triangular block moves the memory pointer to the second memory cell, and the next three lines print the '$' character three times.",
    "translation": "**\u3010\u9898\u76ee\u63cf\u8ff0\u3011**\n\n\u73b0\u6709\u4e00\u79cd\u7531 [Brainfuck](https://baike.baidu.com/item/Brainfuck/1152785)\uff08\u4ee5\u4e0b\u79f0\u4e3a BF\uff09\u884d\u751f\u51fa\u7684\u4e8c\u7ef4\u7f16\u7a0b\u8bed\u8a00\u3002\u672c\u9898\u4e2d\uff0c\u4f60\u9700\u8981\u7f16\u5199\u4e00\u4e2a\u53ef\u4ee5\u751f\u6210\u8be5\u8bed\u8a00\u4ee3\u7801\u7684\u7b80\u6613\u751f\u6210\u5668\u3002\n\n\n\u8be5\u8bed\u8a00\u7684\u4ee3\u7801\u662f\u5b57\u7b26 `.` \u548c `X` \u5f62\u6210\u7684\u77e9\u9635\uff0c\u4e14\u53ef\u4ee5\u6309\u7167\u4e0b\u9762\u7684\u65b9\u5f0f\u8f6c\u6362\u4e3a BF \u7a0b\u5e8f\uff1a\u4ee5\u6b63\u5e38\u987a\u5e8f\uff08\u4ece\u4e0a\u5230\u4e0b\u3001\u4ece\u5de6\u5230\u53f3\uff09\u9605\u8bfb\u4ee3\u7801\u4e2d\u7684\u5b57\u7b26\uff0c\u6bcf\u4e2a `X` \u4f1a\u88ab\u8f6c\u6362\u6210 BF \u6307\u4ee4\uff0c\u4e4b\u540e\u4f1a\u8fd0\u884c\u8fd9\u4e9b\u6307\u4ee4\u3002\u8f6c\u6362\u6210\u7684\u6307\u4ee4\u7531\u8fd9\u4e2a `X` \u5de6\u8fb9\u3001\u4e0a\u9762\u548c\u53f3\u8fb9\u76f8\u90bb\u7684\u4e09\u4e2a\u5b57\u7b26\u786e\u5b9a\uff0c\u89c1\u5982\u4e0b\u8f6c\u6362\u8868\uff1a\n\n![img](https://cdn.luogu.com.cn/upload/vjudge_pic/CF952G/de5a0c0bfa2fbc80e44dad1d8d7c9310dc043297.png)\n\n\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8bf7\u4f60\u8f93\u51fa\u4e00\u4e2a\u4ee5\u8be5\u8bed\u8a00\u7f16\u5199\u7684\u3001\u80fd\u6253\u5370\u51fa\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7684\u7a0b\u5e8f\u3002\n\n\u4f60\u53ef\u4ee5\u5728[\u8fd9\u91cc](https://assets.codeforces.com/rounds/952/puzzling-interpreter.cpp)\u4e0b\u8f7d\u8be5\u8bed\u8a00\u7684\u89e3\u91ca\u5668\uff08\u7528 C++11 \u7f16\u8bd1\uff09\uff0c\u8fd9\u4e2a\u89e3\u91ca\u5668\u4e5f\u5c06\u7528\u4e8e\u8bc4\u6d4b\u4f60\u7684\u7a0b\u5e8f\u3002\u9700\u8981\u6ce8\u610f\u4e0b\u9762\u4e00\u4e9b\u5b9e\u73b0\u7684\u7ec6\u8282\uff1a\n\n- \u89e3\u91ca\u5668\u4f1a\u5148\u5c06\u8be5\u8bed\u8a00\u7684\u4ee3\u7801\u8f6c\u6362\u6210 BF \u7a0b\u5e8f\uff0c\u7136\u540e\u4f1a\u8fd0\u884c\u8be5 BF \u7a0b\u5e8f\u5e76\u8f93\u51fa\u7ed3\u679c\u3002\n- \u4ee3\u7801\u5fc5\u987b\u662f\u77e9\u5f62\uff0c\u6240\u6709\u884c\u7684\u957f\u5ea6\u5fc5\u987b\u76f8\u540c\u3002\u4ee3\u7801\u6700\u591a\u6709 $10^4$ \u884c\u548c $10^4$ \u5217\uff0c\u6700\u591a\u6709 $5 \\times 10^5$ \u4e2a\u5b57\u7b26 `X`\u3002\n- \u4ee3\u7801\u7684\u7b2c\u4e00\u884c\u548c\u6700\u540e\u4e00\u884c\u4e0a\u4e0b\u76f8\u90bb\uff0c\u7b2c\u4e00\u5217\u548c\u6700\u540e\u4e00\u5217\u5de6\u53f3\u76f8\u90bb\u3002\n- \u89e3\u91ca\u5668\u6709 $3 \\times 10^4$ \u4e2a\u5b58\u50a8\u5355\u5143\uff0c\u6bcf\u4e2a\u53ef\u4ee5\u5b58\u50a8 $0$ \u5230 $255$ \u7684\u6574\u6570\uff0c\u8fd0\u7b97\u7ed3\u679c\u5bf9 $256$ \u53d6\u6a21\u3002\u82e5\u5f53\u524d\u5904\u4e8e\u7b2c\u4e00\u4e2a\u5b58\u50a8\u5355\u5143\uff0c\u5219\u6307\u9488\u5de6\u79fb\uff08`<`\uff09\u6307\u4ee4\u4f1a\u88ab\u5ffd\u7565\uff1b\u82e5\u5f53\u524d\u5904\u4e8e\u6700\u540e\u4e00\u4e2a\u5b58\u50a8\u5355\u5143\uff0c\u5219\u6307\u9488\u53f3\u79fb\uff08`>`\uff09\u6307\u4ee4\u4f1a\u88ab\u5ffd\u7565\u3002\n- \u5728 BF \u7a0b\u5e8f\u4e2d\u53ef\u4ee5\u51fa\u73b0\u63a7\u5236\u53f0\u8f93\u5165\uff08`,`\uff09\u6307\u4ee4\uff0c\u4f46\u8fd0\u884c\u65f6\u4f1a\u5c06\u5176\u5ffd\u7565\u3002\n\n**\u3010\u8f93\u5165\u683c\u5f0f\u3011**\n\n\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u7684 ASCII \u7801\u90fd\u5728 $33$\uff08`!`\uff09\u5230 $122$\uff08`z`\uff09\u4e4b\u95f4\uff08\u542b\uff09\u3002\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u5728 $1$ \u5230 $10$ \u4e4b\u95f4\uff08\u542b\uff09\u3002\n\n**\u3010\u8f93\u51fa\u683c\u5f0f\u3011**\n\n\u8f93\u51fa\u4e00\u4e2a\u4ee5\u8be5\u8bed\u8a00\u7f16\u5199\u7684\u7a0b\u5e8f\uff0c\u8fd0\u884c\u8be5\u7a0b\u5e8f\u65f6\u4f1a\u6253\u5370\u51fa\u7ed9\u5b9a\u7684\u5b57\u7b26\u4e32\u3002\n\n**\u3010\u6837\u4f8b 1 \u89e3\u91ca\u3011**\n\n\u6837\u4f8b 1 \u8f93\u51fa\u7684\u7a0b\u5e8f\u5bf9\u5e94\u4e0b\u9762\u7684 BF \u7a0b\u5e8f\uff1a\n\n```\n       -\n      >+<\n     >+++<\n    >+++++<\n   >+++++++<\n  >+++++++++<\n >+++++++++++<\n\n<             >\n.\n.\n.\n```\n\n\u4e09\u89d2\u5f62\u90e8\u5206\u8868\u793a\u5c06\u7b2c\u4e00\u4e2a\u5b58\u50a8\u5355\u5143\u7684\u503c\u51cf\u4e00\uff0c\u5e76\u5c06\u7b2c\u4e8c\u4e2a\u5b58\u50a8\u5355\u5143\u7684\u503c\u8bbe\u4e3a $36$\uff0c\u4e5f\u5c31\u662f\u5b57\u7b26 `$` \u7684 ASCII \u7801\u3002\u63a5\u4e0b\u6765\u4e00\u884c\u8868\u793a\u5c06\u6307\u9488\u79fb\u52a8\u5230\u7b2c\u4e8c\u4e2a\u5b58\u50a8\u5355\u5143\u3002\u63a5\u4e0b\u6765\u4e09\u884c\u8868\u793a\u5c06\u5f53\u524d\u5b58\u50a8\u5355\u5143\u7684\u503c\u5bf9\u5e94\u7684\u5b57\u7b26\uff08`$`\uff09\u6253\u5370\u4e09\u6b21\u3002"
}