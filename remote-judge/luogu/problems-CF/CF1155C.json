{
    "description": "Ivan is going to sleep now and wants to set his alarm clock. There will be many necessary events tomorrow, the $ i $ -th of them will start during the $ x_i $ -th minute. Ivan doesn't want to skip any of the events, so he has to set his alarm clock in such a way that it rings during minutes $ x_1, x_2, \\dots, x_n $ , so he will be awake during each of these minutes (note that it does not matter if his alarm clock will ring during any other minute).\n\nIvan can choose two properties for the alarm clock \u2014 the first minute it will ring (let's denote it as $ y $ ) and the interval between two consecutive signals (let's denote it by $ p $ ). After the clock is set, it will ring during minutes $ y, y + p, y + 2p, y + 3p $ and so on.\n\nIvan can choose any minute as the first one, but he cannot choose any arbitrary value of $ p $ . He has to pick it among the given values $ p_1, p_2, \\dots, p_m $ (his phone does not support any other options for this setting).\n\nSo Ivan has to choose the first minute $ y $ when the alarm clock should start ringing and the interval between two consecutive signals $ p_j $ in such a way that it will ring during all given minutes $ x_1, x_2, \\dots, x_n $ (and it does not matter if his alarm clock will ring in any other minutes).\n\nYour task is to tell the first minute $ y $ and the index $ j $ such that if Ivan sets his alarm clock with properties $ y $ and $ p_j $ it will ring during all given minutes $ x_1, x_2, \\dots, x_n $ or say that it is impossible to choose such values of the given properties. If there are multiple answers, you can print any.",
    "inputFormat": "The first line of the input contains two integers $ n $ and $ m $ ( $ 2 \\le n \\le 3 \\cdot 10^5, 1 \\le m \\le 3 \\cdot 10^5 $ ) \u2014 the number of events and the number of possible settings for the interval between signals.\n\nThe second line of the input contains $ n $ integers $ x_1, x_2, \\dots, x_n $ ( $ 1 \\le x_i \\le 10^{18} $ ), where $ x_i $ is the minute when $ i $ -th event starts. It is guaranteed that all $ x_i $ are given in increasing order (i. e. the condition $ x_1 < x_2 < \\dots < x_n $ holds).\n\nThe third line of the input contains $ m $ integers $ p_1, p_2, \\dots, p_m $ ( $ 1 \\le p_j \\le 10^{18} $ ), where $ p_j $ is the $ j $ -th option for the interval between two consecutive signals.",
    "outputFormat": "If it's impossible to choose such values $ y $ and $ j $ so all constraints are satisfied, print \"NO\" in the first line.\n\nOtherwise print \"YES\" in the first line. Then print two integers $ y $ ( $ 1 \\le y \\le 10^{18} $ ) and $ j $ ( $ 1 \\le j \\le m $ ) in the second line, where $ y $ is the first minute Ivan's alarm clock should start ringing and $ j $ is the index of the option for the interval between two consecutive signals (options are numbered from $ 1 $ to $ m $ in the order they are given input). These values should be chosen in such a way that the alarm clock will ring during all given minutes $ x_1, x_2, \\dots, x_n $ . If there are multiple answers, you can print any.",
    "samples": [
        [
            "3 5\n3 12 18\n2 6 5 3 3\n",
            "YES\n3 4\n"
        ],
        [
            "4 2\n1 5 17 19\n4 5\n",
            "NO\n"
        ],
        [
            "4 2\n1 5 17 19\n2 1\n",
            "YES\n1 1\n"
        ]
    ],
    "hint": "",
    "translation": "## \u9898\u76ee\u63cf\u8ff0\n\n```Ivan``` \u8981\u7761\u89c9\u4e86\uff01\u4ed6\u51b3\u5b9a\u5148\u8bbe\u7f6e\u81ea\u5df1\u7684\u95f9\u949f\uff0c\u56e0\u4e3a\u660e\u5929\u6709\u8bb8\u591a\u5fc5\u8981\u7684 $n$ \u4e2a\u6d3b\u52a8\u8981\u53c2\u52a0\u3002\u7b2c $i$ \u4e2a\u6d3b\u52a8\u5c06\u5728 $x_i$ \u5206\u949f\u5f00\u59cb\u3002```Ivan``` \u4e0d\u60f3\u9519\u8fc7\u4efb\u4f55\u6d3b\u52a8\uff0c\u6240\u4ee5 ```Ivan``` \u7684\u95f9\u949f\u5fc5\u987b\u5728 $x_1,x_2,x_3...x_n$ \u5206\u949f\u90fd\u54cd\u4e00\u6b21\uff0c\u8fd9\u6837\u4ed6\u624d\u4e0d\u4f1a\u8d56\u5e8a\u3002\uff08\u7136\u800c\u95f9\u949f\u5728\u6ca1\u6709\u6d3b\u52a8\u7684\u65f6\u5019\u54cd\u8d77\u662f\u5141\u8bb8\u7684\uff09\n\n```Ivan``` \u9700\u8981\u4e3a\u4ed6\u7684\u95f9\u949f\u9009\u62e9\u4e24\u4e2a\u53c2\u6570\u3002$y$ \u8868\u793a\u95f9\u949f\u6700\u521d\u5f00\u59cb\u54cd\u94c3\u7684\u65f6\u95f4 \uff0c$p$ \u8868\u793a\u95f9\u949f\u54cd\u94c3\u7684\u95f4\u9694\u3002 \u95f9\u949f\u53c2\u6570\u8bbe\u7f6e\u597d\u4e4b\u540e\uff0c\u4ed6\u7684\u95f9\u949f\u4f1a\u5728 $y ,y+p,y+2p,y+3p...$\u5206\u949f\u54cd\u8d77\u3002\n\n```Ivan``` \u53ef\u4ee5\u968f\u610f\u8bbe\u7f6e $y$ \uff0c\u4f46\u4ed6\u4e0d\u80fd\u968f\u610f\u8bbe\u7f6e $p$ \uff0c\u56e0\u4e3a\u751f\u4ea7\u5382\u5bb6\u7ed9\u5b9a\u4e86\u53ea\u6709 $m$ \u79cd $p$\uff0c\u5373 $p_1 ,p_2,p_3...,p_m$\n\n\u6240\u4ee5 ```Ivan``` \u9700\u8981\u627e\u5230\u4e24\u4e2a\u53c2\u6570 $y ,p_j$ \uff0c\u4f7f\u5f97\u95f9\u949f\u7684\u54cd\u94c3\u65f6\u95f4\u5305\u542b $x_1,x_2,x_3...x_n$ \u7684\u6240\u6709\u65f6\u95f4\u70b9\u3002\u800c\u4f60\u9700\u8981\u8f93\u51fa $y,j$\u3002\u5982\u679c\u6709\u591a\u79cd\u7b54\u6848\uff0c\u4efb\u610f\u8f93\u51fa\u4e00\u79cd\u3002\n\n## \u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n\n### \u8f93\u5165\u683c\u5f0f\n\n\u7b2c\u4e00\u884c $n,m (2 \\leq n \\leq 3 \\times10^5 ,1\\leq m \\leq3 \\times 10^5)$\n\n\u7b2c\u4e8c\u884c $n$ \u4e2a\u6570\uff0c\u7b2c $i$ \u4e2a\u6570\u8868\u793a $x_i(1\\leq x_i \\leq10^{18})$ \uff0c\u4fdd\u8bc1\u8f93\u5165\u662f\u9012\u589e\u7684\n\n\u7b2c\u4e8c\u884c $m$ \u4e2a\u6570\uff0c\u7b2c $i$ \u4e2a\u6570\u8868\u793a $p_i(1\\leq p_i \\leq10^{18})$ \n\n### \u8f93\u51fa\u683c\u5f0f\n\n\u5171\u4e00\u884c \u8f93\u51fa $y,j$\u3002\u5982\u679c\u6709\u591a\u79cd\u7b54\u6848\uff0c\u4efb\u610f\u8f93\u51fa\u4e00\u79cd\u3002"
}