{
    "description": "Vitaly enrolled in the course Advanced Useless Algorithms. The course consists of $ n $ tasks. Vitaly calculated that he has $ a_i $ hours to do the task $ i $ from the day he enrolled in the course. That is, the deadline before the $ i $ -th task is $ a_i $ hours. The array $ a $ is sorted in ascending order, in other words, the job numbers correspond to the order in which the assignments are turned in.\n\nVitaly does everything conscientiously, so he wants to complete each task by $ 100 $ percent, or more. Initially, his completion rate for each task is $ 0 $ percent.\n\nVitaly has $ m $ training options, each option can be used not more than once. The $ i $ th option is characterized by three integers: $ e_i, t_i $ and $ p_i $ . If Vitaly uses the $ i $ th option, then after $ t_i $ hours (from the current moment) he will increase the progress of the task $ e_i $ by $ p_i $ percent.\n\nFor example, let Vitaly have $ 3 $ of tasks to complete. Let the array $ a $ have the form: $ a = [5, 7, 8] $ . Suppose Vitaly has $ 5 $ of options: $ [e_1=1, t_1=1, p_1=30] $ , $ [e_2=2, t_2=3, p_2=50] $ , $ [e_3=2, t_3=3, p_3=100] $ , $ [e_4=1, t_4=1, p_4=80] $ , $ [e_5=3, t_5=3, p_5=100] $ .\n\nThen, if Vitaly prepares in the following way, he will be able to complete everything in time:\n\n- Vitaly chooses the $ 4 $ -th option. Then in $ 1 $ hour, he will complete the $ 1 $ -st task at $ 80 $ percent. He still has $ 4 $ hours left before the deadline for the $ 1 $ -st task.\n- Vitaly chooses the $ 3 $ -rd option. Then in $ 3 $ hours, he will complete the $ 2 $ -nd task in its entirety. He has another $ 1 $ hour left before the deadline for the $ 1 $ -st task and $ 4 $ hours left before the deadline for the $ 3 $ -rd task.\n- Vitaly chooses the $ 1 $ -st option. Then after $ 1 $ hour, he will complete the $ 1 $ -st task for $ 110 $ percent, which means that he will complete the $ 1 $ -st task just in time for the deadline.\n- Vitaly chooses the $ 5 $ -th option. He will complete the $ 3 $ -rd task for $ 2 $ hours, and after another $ 1 $ hour, Vitaly will complete the $ 3 $ -rd task in its entirety.\n\nThus, Vitaly has managed to complete the course completely and on time, using the $ 4 $ options.\n\nHelp Vitaly \u2014 print the options for Vitaly to complete the tasks in the correct order. Please note: each option can be used not more than once. If there are several possible answers, it is allowed to output any of them.",
    "inputFormat": "The first line of input data contains an integer $ T $ ( $ 1 \\le T \\le 10^4 $ ) \u2014the number of input test cases in the test.\n\nThe descriptions of the input test case follow.\n\nThe first line of each test case description contains two integers $ n $ and $ m $ ( $ 1 \\le n,m \\le 10^5 $ ) \u2014the number of jobs and the number of training options, respectively.\n\nThe next line contains $ n $ numbers $ a_1, a_2, \\dots, a_n $ ( $ 1 \\le a_i \\le 10^9 $ ) \u2014 the time before the deadline of job $ i $ . The array values \u2014 are non-decreasing, that is $ a_1 \\le a_2 \\le \\dots \\le a_n $ .\n\nThe following $ m $ lines contain triples of numbers $ e_i, t_i, p_i $ ( $ 1 \\le e_i \\le n $ , $ 1 \\le t_i \\le 10^9 $ , $ 1 \\le p_i \\le 100 $ ) \u2014 if Vitaly chooses this option, then after $ t_i $ hours he will increase the progress of the task $ e_i $ by $ p_i $ percent. The options are numbered from $ 1 $ to $ m $ in order in the input data.\n\nIt is guaranteed that the sum of $ n+m $ on all test cases does not exceed $ 2 \\cdot 10^5 $ .",
    "outputFormat": "For each test case, print on the first line the number $ k $ , meaning that for $ k $ of options, Vitaly will be able to complete each task by $ 100 $ percent or more on time. The options should not be repeated. Or print -1 if Vitaly is unable to complete all tasks in time.\n\nIf there is an answer, on the next line print $ k $ of different integers from $ 1 $ to $ m $ \u2014 the numbers of the options in the order you want. If there is more than one answer, it is allowed to print any of them.",
    "samples": [
        [
            "5\n3 5\n5 7 8\n1 1 30\n2 3 50\n2 3 100\n1 1 80\n3 3 100\n1 5\n51\n1 36 91\n1 8 40\n1 42 83\n1 3 45\n1 13 40\n2 9\n9 20\n2 8 64\n2 7 64\n1 20 56\n2 8 76\n2 20 48\n1 2 89\n1 3 38\n2 18 66\n1 7 51\n3 2\n7 18 33\n1 5 80\n3 4 37\n2 5\n569452312 703565975\n1 928391659 66\n1 915310 82\n2 87017081 92\n1 415310 54\n2 567745964 82",
            "4\n1 4 3 5 \n3\n2 4 5 \n4\n6 7 1 2 \n-1\n4\n2 4 3 5"
        ],
        [
            "3\n3 9\n20 31 40\n1 9 64\n3 17 100\n3 9 59\n3 18 57\n3 20 49\n2 20 82\n2 14 95\n1 8 75\n2 16 67\n2 6\n20 36\n2 2 66\n2 20 93\n1 3 46\n1 10 64\n2 8 49\n2 18 40\n1 1\n1000000000\n1 1000000000 100",
            "-1\n4\n3 4 1 5 \n1\n1"
        ]
    ],
    "hint": "",
    "translation": "\u6709 $n$ \u4e2a\u4efb\u52a1\uff0c\u6bcf\u4e2a\u4efb\u52a1\u8981\u5728 $a_i$ \u65f6\u523b\u524d\u505a\u5b8c\u3002\uff08$a$ \u5347\u5e8f\uff09\n\n\u6709 $m$ \u4e2a\u8ba1\u5212\uff0c\u6bcf\u4e2a\u8ba1\u5212\u6700\u591a\u53ea\u80fd\u6267\u884c\u4e00\u6b21\uff0c\u6bcf\u4e2a\u8ba1\u5212\u7531 $e_i$, $t_i$, $p_i$ \u63cf\u8ff0\uff1a\u5982\u679c\u6267\u884c\u4e86\u7b2c $i$ \u4e2a\u8ba1\u5212\uff0c\u90a3\u4e48 $t_i$ \u65f6\u95f4\u540e\uff0c\u4efb\u52a1 $e_i$ \u4f1a\u88ab\u5b8c\u6210 $p_i$ \u7684\u767e\u5206\u6bd4\u3002\n\n\u8f93\u5165 $T$ \u7ec4\u6570\u636e\u3002\n\n\u8f93\u51fa\u6bcf\u7ec4\u6267\u884c\u7684\u8ba1\u5212\u4e2a\u6570 $k$\uff0c\u5e76\u6309\u987a\u5e8f\u8f93\u51fa\u6267\u884c\u7684\u8ba1\u5212\uff08\u82e5\u4e0d\u884c\u5219\u8f93\u51fa `-1`\uff0c\u82e5\u6709\u591a\u79cd\u65b9\u6848\u8f93\u51fa\u5176\u4e2d\u4e00\u79cd\u5373\u53ef\uff09\u3002"
}