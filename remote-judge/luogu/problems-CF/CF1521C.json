{
    "description": "This is an interactive problem!\n\nNastia has a hidden permutation $ p $ of length $ n $ consisting of integers from $ 1 $ to $ n $ . You, for some reason, want to figure out the permutation. To do that, you can give her an integer $ t $ ( $ 1 \\le t \\le 2 $ ), two different indices $ i $ and $ j $ ( $ 1 \\le i, j \\le n $ , $ i \\neq j $ ), and an integer $ x $ ( $ 1 \\le x \\le n - 1 $ ).\n\nDepending on $ t $ , she will answer:\n\n- $ t = 1 $ : $ \\max{(\\min{(x, p_i)}, \\min{(x + 1, p_j)})} $ ;\n- $ t = 2 $ : $ \\min{(\\max{(x, p_i)}, \\max{(x + 1, p_j)})} $ .\n\nYou can ask Nastia at most $ \\lfloor \\frac {3 \\cdot n} { 2} \\rfloor + 30 $ times. It is guaranteed that she will not change her permutation depending on your queries. Can you guess the permutation?",
    "inputFormat": "The input consists of several test cases. In the beginning, you receive the integer $ T $ ( $ 1 \\le T \\le 10\\,000 $ ) \u2014 the number of test cases.\n\nAt the beginning of each test case, you receive an integer $ n $ ( $ 3 \\le n \\le 10^4 $ ) \u2014 the length of the permutation $ p $ .\n\nIt's guaranteed that the permutation is fixed beforehand and that the sum of $ n $ in one test doesn't exceed $ 2 \\cdot 10^4 $ .",
    "outputFormat": "To ask a question, print \"? $ t $ $ i $ $ j $ $ x $ \" ( $ t = 1 $ or $ t = 2 $ , $ 1 \\le i, j \\le n $ , $ i \\neq j $ , $ 1 \\le x \\le n - 1 $ ) Then, you should read the answer.\n\nIf we answer with $ \u22121 $ instead of a valid answer, that means you exceeded the number of queries or made an invalid query. Exit immediately after receiving $ \u22121 $ and you will see the Wrong Answer verdict. Otherwise, you can get an arbitrary verdict because your solution will continue to read from a closed stream.\n\nTo print the answer, print \"! $ p_1 $ $ p_2 $ $ \\ldots $ $ p_{n} $ (without quotes). Note that answering doesn't count as one of the $ \\lfloor \\frac {3 \\cdot n} {2} \\rfloor + 30 $ queries.\n\nAfter printing a query or printing the answer, do not forget to output end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use:\n\n- fflush(stdout) or cout.flush() in C++;\n- System.out.flush() in Java;\n- flush(output) in Pascal;\n- stdout.flush() in Python;\n- See the documentation for other languages.\n\nHacks\n\nTo hack the solution, use the following test format.\n\nThe first line should contain a single integer $ T $ ( $ 1 \\le T \\le 10\\,000 $ ) \u2014 the number of test cases.\n\nFor each test case in the first line print a single integer $ n $ ( $ 3 \\le n \\le 10^4 $ ) \u2014 the length of the hidden permutation $ p $ .\n\nIn the second line print $ n $ space-separated integers $ p_1, p_2, \\ldots, p_n $ ( $ 1 \\le p_i \\le n $ ), where $ p $ is permutation.\n\nNote that the sum of $ n $ over all test cases should not exceed $ 2 \\cdot 10^4 $ .",
    "samples": [
        [
            "2\n4\n\n3\n\n2\n\n5\n\n3",
            "? 2 4 1 3\n\n? 1 2 4 2\n\n! 3 1 4 2\n\n? 2 3 4 2\n\n! 2 5 3 4 1"
        ]
    ],
    "hint": "Consider the first test case.\n\nThe hidden permutation is $ [3, 1, 4, 2] $ .\n\nWe print: \"? $ 2 $ $ 4 $ $ 1 $ $ 3 $ \" and get back $ \\min{(\\max{(3, p_4}), \\max{(4, p_1)})} = 3 $ .\n\nWe print: \"? $ 1 $ $ 2 $ $ 4 $ $ 2 $ \" and get back $ \\max{(\\min{(2, p_2)}, \\min{(3, p_4)})} = 2 $ .\n\nConsider the second test case.\n\nThe hidden permutation is $ [2, 5, 3, 4, 1] $ .\n\nWe print: \"? $ 2 $ $ 3 $ $ 4 $ $ 2 $ \" and get back $ \\min{(\\max{(2, p_3}), \\max{(3, p_4)})} = 3 $ .",
    "translation": "\u8fd9\u662f\u4e00\u9053\u4ea4\u4e92\u9898\n\n\u6709\u4e00\u4e2a\u957f\u4e3an\u7684\u6392\u5217p\uff0c\u4f60\u9700\u8981\u5728$\\lfloor\\frac{3n}{2}\\rfloor + 30$ \u6b21\u8be2\u95ee\u5185\u627e\u51fa\u6392\u5217p\u6bcf\u4e00\u4f4d\u6240\u5bf9\u5e94\u7684\u6570\u3002\n\n\u6709\u4e24\u79cd\u64cd\u4f5c\n \n - $ t = 1 : max(min(x, p_i), min(x + 1, p_j))$ \n - $ t = 2 : min(max(x, p_i), max(x +1, p_j))$\n\n$  1 \\le t \\le 2, \\  1 \\le i,j \\le n \\ (i \\ne j), \\ 1 \\le x \\le n - 1$\n\n$1 \\le T \\le 10 \\ 000, \\ 3 \\le n \\le 10^{4}, \\sum n \\le 2\u22c510^4$\n\n\n$T$\u7ec4\u8be2\u95ee \u6bcf\u6b21\u8be2\u95ee\u5f00\u59cb\u65f6\u4f1a\u7ed9\u51fa$p$\u7684\u957f\u5ea6$n$\n\n\u6700\u540e\u8f93\u51fa\u6c42\u5f97\u7684$p$"
}