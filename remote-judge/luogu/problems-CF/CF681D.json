{
    "description": "Sasha lives in a big happy family. At the Man's Day all the men of the family gather to celebrate it following their own traditions. There are $ n $ men in Sasha's family, so let's number them with integers from $ 1 $ to $ n $ .\n\nEach man has at most one father but may have arbitrary number of sons.\n\nMan number $ A $ is considered to be the ancestor of the man number $ B $ if at least one of the following conditions is satisfied:\n\n- $ A=B $ ;\n- the man number $ A $ is the father of the man number $ B $ ;\n- there is a man number $ C $ , such that the man number $ A $ is his ancestor and the man number $ C $ is the father of the man number $ B $ .\n\nOf course, if the man number $ A $ is an ancestor of the man number $ B $ and $ A\u2260B $ , then the man number $ B $ is not an ancestor of the man number $ A $ .\n\nThe tradition of the Sasha's family is to give gifts at the Man's Day. Because giving gifts in a normal way is boring, each year the following happens.\n\n1. A list of candidates is prepared, containing some (possibly all) of the $ n $ men in some order.\n2. Each of the $ n $ men decides to give a gift.\n3. In order to choose a person to give a gift to, man $ A $ looks through the list and picks the first man $ B $ in the list, such that $ B $ is an ancestor of $ A $ and gives him a gift. Note that according to definition it may happen that a person gives a gift to himself.\n4. If there is no ancestor of a person in the list, he becomes sad and leaves the celebration without giving a gift to anyone.\n\nThis year you have decided to help in organizing celebration and asked each of the $ n $ men, who do they want to give presents to (this person is chosen only among ancestors). Are you able to make a list of candidates, such that all the wishes will be satisfied if they give gifts according to the process described above?",
    "inputFormat": "In the first line of the input two integers $ n $ and $ m $ ( $ 0<=m&lt;n<=100000 $ ) are given \u2014 the number of the men in the Sasha's family and the number of family relations in it respectively.\n\nThe next $ m $ lines describe family relations: the $ (i+1)^{th} $ line consists of pair of integers $ p_{i} $ and $ q_{i} $ ( $ 1<=p_{i},q_{i}<=n $ , $ p_{i}\u2260q_{i} $ ) meaning that the man numbered $ p_{i} $ is the father of the man numbered $ q_{i} $ . It is guaranteed that every pair of numbers appears at most once, that among every pair of two different men at least one of them is not an ancestor of another and that every man has at most one father.\n\nThe next line contains $ n $ integers $ a_{1},a_{2},...,a_{n} $ ( $ 1<=a_{i}<=n $ ), $ i^{th} $ of which means that the man numbered $ i $ wants to give a gift to the man numbered $ a_{i} $ . It is guaranteed that for every $ 1<=i<=n $ the man numbered $ a_{i} $ is an ancestor of the man numbered $ i $ .",
    "outputFormat": "Print an integer $ k $ $ (1<=k<=n) $ \u2014 the number of the men in the list of candidates, in the first line.\n\nPrint then $ k $ pairwise different positive integers not exceeding $ n $ \u2014 the numbers of the men in the list in an order satisfying every of the men's wishes, one per line.\n\nIf there are more than one appropriate lists, print any of them. If there is no appropriate list print $ -1 $ in the only line.",
    "samples": [
        [
            "3 2\n1 2\n2 3\n1 2 1\n",
            "-1"
        ],
        [
            "4 2\n1 2\n3 4\n1 2 3 3\n",
            "3\n2\n1\n3\n"
        ]
    ],
    "hint": "The first sample explanation:\n\n- if there would be no $ 1 $ in the list then the first and the third man's wishes would not be satisfied $ (a_{1}=a_{3}=1) $ ;\n- if there would be no $ 2 $ in the list then the second man wish would not be satisfied $ (a_{2}=2) $ ;\n- if $ 1 $ would stay before $ 2 $ in the answer then the second man would have to give his gift to the first man, but he wants to give it to himself $ (a_{2}=2) $ .\n- if, at the other hand, the man numbered $ 2 $ would stay before the man numbered $ 1 $ , then the third man would have to give his gift to the second man, but not to the first $ (a_{3}=1) $ .",
    "translation": "$Sasha$ \u751f\u6d3b\u5728\u4e00\u4e2a\u5e78\u798f\u7684\u5927\u5bb6\u5ead\u91cc\u3002\u5728\u7537\u4eba\u8282\u8fd9\u4e00\u5929\uff0c\u5168\u5bb6\u4eba\u4f1a\u6309\u7167\u81ea\u5df1\u7684\u4f20\u7edf\u805a\u4f1a\u3001\u5e86\u795d\u3002 $Sasha$ \u4e00\u5bb6\u6709 $n$ \u4e2a\u7537\u4eba\uff0c\u6240\u4ee5\u6211\u4eec\u7528 $1$ \u5230 $n$ \u7684\u6574\u6570\u6765\u7ed9\u4ed6\u4eec\u7f16\u53f7\u3002\r\n\r\n\u6bcf\u4e2a\u4eba\u6700\u591a\u6709\u4e00\u4e2a\u7236\u4eb2\uff0c\u4f46\u53ef\u4ee5\u6709\u4efb\u610f\u4e2a\u513f\u5b50\u3002\r\n\r\n\u5982\u679c\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u4e2d\u81f3\u5c11\u4e00\u9879\uff0c\u5219\u5c06 $A$ \u89c6\u4e3a $B$ \u7684\u7956\u5148\uff1a\r\n\r\n- $ A = B $\uff1b\r\n\r\n- $A$ \u53f7\u4eba\u662f $B$ \u53f7\u4eba\u7684\u7236\u4eb2;\r\n\r\n- \u6709\u4e00\u4e2a\u4eba $C$ \uff0c$A$ \u662f\u4ed6\u7684\u7956\u5148\uff0c\u5e76\u4e14 $C$ \u662f $B$ \u7684\u7236\u4eb2\u3002\r\n\r\n\u5f53\u7136\uff0c\u5982\u679c $A$ \u662f $B$ \u7684\u7956\u5148\uff0c\u5e76\u4e14 $A \\neq B$ \uff0c\u5219 $B$ \u4e0d\u662f $A$ \u7684\u7956\u5148\u3002 $\\Longleftarrow$ ~~\uff08\u5e9f\u8bdd\u8bf7\u5ffd\u7565~~\r\n\r\n$Sasha$ \u4e00\u5bb6\u7684\u4f20\u7edf\u662f\u5728\u7537\u4eba\u8282\u90a3\u5929\u9001\u793c\u7269\u3002 \u7531\u4e8e\u4ee5\u6b63\u5e38\u65b9\u5f0f\u8d60\u9001\u793c\u7269\u5f88\u65e0\u804a\uff0c\u56e0\u6b64\u6bcf\u5e74\u90fd\u4f1a\u53d1\u751f\u4ee5\u4e0b\u60c5\u51b5\uff1a\r\n\r\n- \u6709\u4e00\u4efd\u5019\u9009\u4eba\u540d\u5355\uff0c\u4ee5\u67d0\u79cd\u987a\u5e8f\u5305\u542b\u4e86\u4e00\u4e9b\uff08**\u53ef\u80fd\u5168\u90e8**\uff09\u7537\u5b50\u3002\r\n\r\n- $n$ \u4e2a\u7537\u4eba\u4e2d\u7684\u6bcf\u4e2a\u90fd\u51b3\u5b9a\u9001\u793c\u7269\u3002\r\n\r\n- \u4e3a\u4e86\u9009\u62e9\u8981\u9001\u793c\u7269\u7684\u4eba\uff0c\u7537\u4eba $A$ \u6d4f\u89c8\u5217\u8868\uff0c\u4ece\u5217\u8868\u4e2d\u9009\u62e9\u7b2c\u4e00\u4e2a $A$ \u7684\u7956\u5148 $B$ \uff0c\u5e76\u7ed9\u4ed6\u793c\u7269\u3002**\u8bf7\u6ce8\u610f\uff0c\u6839\u636e\u5b9a\u4e49\uff0c\u4e00\u4e2a\u4eba\u53ef\u80fd\u4f1a\u7ed9\u81ea\u5df1\u4e00\u4efd\u793c\u7269\u3002**\r\n\r\n- \u5982\u679c\u5217\u8868\u4e2d\u6ca1\u6709\u67d0\u4e00\u4e2a\u4eba\u7684\u7956\u5148\uff0c\u90a3\u4e48\u90a3\u4e2a\u4eba\u4f1a\u96be\u8fc7\u5730\u79bb\u5f00\u5e86\u5178\u3002**\u4f5c\u4e3a\u62a5\u590d\uff0c\u4ed6\u4e0d\u4f1a\u7ed9\u4efb\u4f55\u4eba\u793c\u7269\u3002**\r\n\r\n\u4eca\u5e74\uff0c\u60a8\u5df2\u51b3\u5b9a\u5e2e\u52a9 $Sasha$ \u4e00\u5bb6\u5e86\u795d\u6d3b\u52a8\uff0c\u5e76\u8be2\u95ee\u4e86\u90a3 $n$ \u4f4d\u7537\u58eb\uff0c\u4ed6\u4eec\u60f3\u5c06\u793c\u7269\u9001\u7ed9\u8c01\uff08\u6b64\u88ab\u9009\u4e2d\u8005\u53ea\u53ef\u80fd\u5728\u5176\u7956\u5148\u4e2d\uff09\u3002 \u60a8\u662f\u5426\u80fd\u591f\u5217\u51fa\u5019\u9009\u4eba\u5217\u8868\uff0c\u4ee5\u4fbf\u4ec5\u6309\u7167\u4e0a\u8ff0\u6d41\u7a0b\u9001\u51fa\u793c\u7269\u5c31\u53ef\u4ee5\u4f7f\u6240\u6709\u4eba\u90fd\u4e0d\u4f1a\u4f24\u5fc3\uff1f"
}