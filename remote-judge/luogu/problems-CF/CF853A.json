{
    "description": "Helen works in Metropolis airport. She is responsible for creating a departure schedule. There are $ n $ flights that must depart today, the $ i $ -th of them is planned to depart at the $ i $ -th minute of the day.\n\nMetropolis airport is the main transport hub of Metropolia, so it is difficult to keep the schedule intact. This is exactly the case today: because of technical issues, no flights were able to depart during the first $ k $ minutes of the day, so now the new departure schedule must be created.\n\nAll $ n $ scheduled flights must now depart at different minutes between $ (k+1) $ -th and $ (k+n) $ -th, inclusive. However, it's not mandatory for the flights to depart in the same order they were initially scheduled to do so \u2014 their order in the new schedule can be different. There is only one restriction: no flight is allowed to depart earlier than it was supposed to depart in the initial schedule.\n\nHelen knows that each minute of delay of the $ i $ -th flight costs airport $ c_{i} $ burles. Help her find the order for flights to depart in the new schedule that minimizes the total cost for the airport.",
    "inputFormat": "The first line contains two integers $ n $ and $ k $ ( $ 1<=k<=n<=300000 $ ), here $ n $ is the number of flights, and $ k $ is the number of minutes in the beginning of the day that the flights did not depart.\n\nThe second line contains $ n $ integers $ c_{1},c_{2},...,c_{n} $ ( $ 1<=c_{i}<=10^{7} $ ), here $ c_{i} $ is the cost of delaying the $ i $ -th flight for one minute.",
    "outputFormat": "The first line must contain the minimum possible total cost of delaying the flights.\n\nThe second line must contain $ n $ different integers $ t_{1},t_{2},...,t_{n} $ ( $ k+1<=t_{i}<=k+n $ ), here $ t_{i} $ is the minute when the $ i $ -th flight must depart. If there are several optimal schedules, print any of them.",
    "samples": [
        [
            "5 2\n4 2 1 10 2\n",
            "20\n3 6 7 4 5 \n"
        ]
    ],
    "hint": "Let us consider sample test. If Helen just moves all flights $ 2 $ minutes later preserving the order, the total cost of delaying the flights would be $ (3-1)\u00b74+(4-2)\u00b72+(5-3)\u00b71+(6-4)\u00b710+(7-5)\u00b72=38 $ burles.\n\nHowever, the better schedule is shown in the sample answer, its cost is $ (3-1)\u00b74+(6-2)\u00b72+(7-3)\u00b71+(4-4)\u00b710+(5-5)\u00b72=20 $ burles.",
    "translation": "Helen\u5728\u5927\u90fd\u4f1a\u673a\u573a\u5de5\u4f5c\uff0c\u5979\u7684\u4efb\u52a1\u662f\u5b89\u6392\u6bcf\u5929\u7684\u822a\u73ed\u8d77\u98de\u65f6\u523b\u3002\u4eca\u5929\u4e00\u5171\u6709n\u67b6\u98de\u673a\u5c06\u8981\u8d77\u98de\uff0c\u7b2ci\u67b6\u98de\u673a\u5c06\u5728\u7b2ci\u5206\u949f\u8d77\u98de\u3002\n\n\u5927\u90fd\u4f1a\u673a\u573a\u662f\u5927\u90fd\u4f1a\u6700\u91cd\u8981\u7684\u4ea4\u901a\u67a2\u7ebd\uff0c\u56e0\u6b64\u60f3\u8981\u539f\u5c01\u4e0d\u52a8\u5730\u6309\u7167\u8d77\u98de\u65f6\u523b\u8868\u7684\u65f6\u523b\u8d77\u98de\u662f\u5f88\u56f0\u96be\u7684\u3002\u4eca\u5929\u7684\u60c5\u51b5\u4e5f\u662f\u5982\u6b64\uff1a\u7531\u4e8e\u6280\u672f\u539f\u56e0\uff0c\u5728\u4eca\u5929\u4e00\u5f00\u59cb\u7684k\u5206\u949f\u5185\u98de\u673a\u4e0d\u5141\u8bb8\u8d77\u98de\uff0c\u56e0\u6b64\u5fc5\u987b\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8d77\u98de\u65f6\u523b\u8868\u3002\n\n\u6240\u6709\u7684\u822a\u73ed\u5fc5\u987b\u5728\u7b2c(k+1)\u5206\u949f\u5230\u7b2c(k+n)\u5206\u949f\u5185(\u5305\u62ec\u4e24\u7aef)\u8d77\u98de\uff0c\u800c\u4e14\u6bcf\u5206\u949f\u4ec5\u80fd\u6709\u4e00\u67b6\u98de\u673a\u8d77\u98de\u3002\u7136\u800c\uff0c\u822a\u73ed\u8d77\u98de\u7684\u5148\u540e\u987a\u5e8f\u53ef\u4ee5\u4e0e\u6700\u521d\u7684\u65f6\u523b\u8868\u6392\u597d\u7684\u987a\u5e8f\u4e0d\u540c\uff0c\u91cd\u6392\u7684\u65f6\u523b\u8868\u53ea\u6709\u4e00\u4e2a\u9650\u5236\uff1a\u98de\u673a\u4e0d\u80fd\u6bd4\u5b83\u5728\u521d\u59cb\u65f6\u523b\u8868\u4e2d\u8d77\u98de\u7684\u65f6\u523b\u8fd8\u8981\u65e9\u7684\u65f6\u523b\u8d77\u98de(\u5373\uff1a\u7b2ci\u67b6\u98de\u673a\u5fc5\u987b\u5728\u7b2ci\u5206\u949f\u540e\u6216\u7b2ci\u5206\u949f\u65f6\u8d77\u98de)\u3002\n\nHelen\u77e5\u9053\u7b2ci\u67b6\u98de\u673a\u8d77\u98de\u65f6\u523b\u6bcf\u5ef6\u8bef\u4e00\u5206\u949f\u673a\u573a\u6240\u9700\u652f\u4ed8\u7684\u989d\u5916\u82b1\u8d39ci\u662f\u591a\u5c11\u3002\u5e2e\u52a9\u5979\u627e\u5230\u989d\u5916\u82b1\u8d39\u6700\u5c0f\u7684\u65b9\u6848\u3002\n\n\u8f93\u5165\u683c\u5f0f\uff1a\n\n\u8f93\u5165\u6570\u636e\u7684\u7b2c\u4e00\u884c\u5305\u62ec\u4e24\u4e2a\u6574\u6570n\u548ck(1<=k<=n<=300000)\u3002\n\n\u7b2c\u4e8c\u884c\u5305\u62ecn\u4e2a\u6574\u6570c1\uff0cc2\uff0c...\uff0ccn(1<=ci<=10^7).\n\n\u8f93\u51fa\u683c\u5f0f\uff1a\n\n\u8f93\u51fa\u6570\u636e\u7684\u7b2c\u4e00\u884c\u5305\u62ec\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5c0f\u989d\u5916\u82b1\u8d39\u3002\n\n\u7b2c\u4e8c\u884c\u5305\u62ecn\u4e2a\u6574\u6570t1\uff0ct2\uff0c...\uff0ctn(k+1<=ti<=k+n)\uff0cti\u8868\u793a\u7b2ci\u67b6\u5bb6\u822a\u73ed\u8d77\u98de\u7684\u65f6\u523b\u3002\u5982\u679c\u540c\u65f6\u5b58\u5728\u591a\u79cd\u65b9\u6848\uff0c\u8f93\u51fa\u4efb\u610f\u4e00\u79cd\u3002\n\n\u8bf4\u660e\uff1a\n\n\u5728\u6837\u4f8b\u4e2d\uff0c\u5982\u679cHelen\u4ec5\u628a\u6bcf\u67b6\u98de\u673a\u7684\u8d77\u98de\u65f6\u523b\u90fd\u63a8\u8fdf2\u5206\u949f\uff0c\u90a3\u4e48\u603b\u989d\u5916\u82b1\u8d39\u662f38\u3002\n\u4f46\u662f\uff0c\u5bf9\u4e8e\u6700\u4f73\u7ed3\u679c\u6765\u8bf4\uff0c\u603b\u989d\u5916\u82b1\u8d39\u4e3a20\u3002\n\n\u611f\u8c22@radish\u5e03\u56e3  \u63d0\u4f9b\u7684\u7ffb\u8bd1"
}