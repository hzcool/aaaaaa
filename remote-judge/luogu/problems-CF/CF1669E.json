{
    "description": "Given $ n $ strings, each of length $ 2 $ , consisting of lowercase Latin alphabet letters from 'a' to 'k', output the number of pairs of indices $ (i, j) $ such that $ i < j $ and the $ i $ -th string and the $ j $ -th string differ in exactly one position.\n\nIn other words, count the number of pairs $ (i, j) $ ( $ i < j $ ) such that the $ i $ -th string and the $ j $ -th string have exactly one position $ p $ ( $ 1 \\leq p \\leq 2 $ ) such that $ {s_{i}}_{p} \\neq {s_{j}}_{p} $ .\n\nThe answer may not fit into 32-bit integer type, so you should use 64-bit integers like long long in C++ to avoid integer overflow.",
    "inputFormat": "The first line of the input contains a single integer $ t $ ( $ 1 \\le t \\le 100 $ ) \u2014 the number of test cases. The description of test cases follows.\n\nThe first line of each test case contains a single integer $ n $ ( $ 1 \\le n \\le 10^5 $ ) \u2014 the number of strings.\n\nThen follows $ n $ lines, the $ i $ -th of which containing a single string $ s_i $ of length $ 2 $ , consisting of lowercase Latin letters from 'a' to 'k'.\n\nIt is guaranteed that the sum of $ n $ over all test cases does not exceed $ 10^5 $ .",
    "outputFormat": "For each test case, print a single integer \u2014 the number of pairs $ (i, j) $ ( $ i < j $ ) such that the $ i $ -th string and the $ j $ -th string have exactly one position $ p $ ( $ 1 \\leq p \\leq 2 $ ) such that $ {s_{i}}_{p} \\neq {s_{j}}_{p} $ .\n\nPlease note, that the answer for some test cases won't fit into 32-bit integer type, so you should use at least 64-bit integer type in your programming language (like long long for C++).",
    "samples": [
        [
            "4\n6\nab\ncb\ndb\naa\ncc\nef\n7\naa\nbb\ncc\nac\nca\nbb\naa\n4\nkk\nkk\nab\nab\n5\njf\njf\njk\njk\njk",
            "5\n6\n0\n6"
        ]
    ],
    "hint": "For the first test case the pairs that differ in exactly one position are: (\"ab\", \"cb\"), (\"ab\", \"db\"), (\"ab\", \"aa\"), (\"cb\", \"db\") and (\"cb\", \"cc\").\n\nFor the second test case the pairs that differ in exactly one position are: (\"aa\", \"ac\"), (\"aa\", \"ca\"), (\"cc\", \"ac\"), (\"cc\", \"ca\"), (\"ac\", \"aa\") and (\"ca\", \"aa\").\n\nFor the third test case, the are no pairs satisfying the conditions.",
    "translation": "\u9898\u76ee\u63cf\u8ff0:\n\n\u4f60\u88ab\u7ed9\u4e88\u4e86$n$\u4e2a\u957f\u5ea6\u4e3a2\u7684\u5b57\u7b26\u4e32\uff0c\u6bcf\u4e2a\u542b\u6709\u4ece$a$\u5230$k$\u7684\u5c0f\u5199\u5b57\u6bcd\u3002\u627e\u51fa\u6240\u6709\u5bf9$(i,j)$\u4f7f\u5f97$i<j$\u5e76\u4e14\u7b2c$i$\u4e2a\u5b57\u7b26\u4e32\u548c\u7b2c$j$\u4e2a\u5b57\u7b26\u4e32**\u521a\u597d**\u67091\u4e2a\u5b57\u7b26\u4e0d\u540c\u3002\n\n\u6362\u53e5\u8bdd\u6765\u8bf4\uff0c\u627e\u5230\u6240\u6709\u7684\u6570\u5b57\u5bf9$(i,j)(i<j)$\u4f7f\u5f97\u7b2c$i$\u4e2a\u5b57\u7b26\u4e32\u4e0e\u7b2c$j$\u4e2a\u5b57\u7b26\u4e32\u6709\u552f\u4e00\u4e00\u4e2a\u6570\u5b57$p(1 \\leq p \\leq 2)$\u4f7f\u5f97$s_{i_p}\\neq s_{j_p}$\n\n\u7b54\u6848\u53ef\u80fd\u8d85\u51fa32\u4f4d\u6570\u7684\u8303\u56f4\uff0c\u6240\u4ee5\u4f60\u5728\u4f7f\u7528c++\u65f6\u5e94\u8be5\u4f7f\u7528long long\u7b4964\u4f4d\u53d8\u91cf\u7c7b\u578b\u6765\u5b58\u50a8\u6570\u636e\u907f\u514d\u6ea2\u51fa\n\n\u6ce8\uff1a\u672c\u9898\u6709\u591a\u6570\u636e\n\n\u8f93\u5165\u683c\u5f0f\uff1a\n\n\u7b2c\u4e00\u884c\u8f93\u5165\u4e00\u4e2a\u6574\u6570$t(1\\leq t \\leq 100)$\u8868\u793a\u6d4b\u8bd5\u7ec4\u6570\n\n\u6bcf\u4e2a\u6d4b\u8bd5\u7ec4\u7684\u7b2c\u4e00\u884c\u8f93\u5165\u4e00\u4e2a\u6574\u6570$n(1\\leq n \\leq 10^5)$\uff0c\u610f\u4e49\u5728\u4e0a\u9762\n\n\u63a5\u4e0b\u6765\u7684$n$\u884c\u6bcf\u884c\u8f93\u5165\u4e00\u4e2a2\u5b57\u7b26\u957f\u7684\u5b57\u7b26\u4e32$s_i$\uff0c\u53ea\u5305\u542b\u5b57\u7b26$a$\u5230$k$\u3002\n\n\u6570\u636e\u4fdd\u8bc1$n$\u7684\u603b\u548c\u4e0d\u8d85\u8fc7$10^5$\n\n\u8f93\u51fa\u683c\u5f0f:\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6d4b\u8bd5\u7ec4\uff0c\u8f93\u51fa\u4e00\u4e2a\u8868\u793a\u6570\u5b57\u5bf9\u7684\u4e2a\u6570\uff0c\u6761\u4ef6\u5728\u80cc\u666f\u91cc\n\n##### \u91cd\u590d\u4e00\u904d(?)\uff1a\u7b54\u6848\u53ef\u80fd\u8d85\u51fa32\u4f4d\u6570\u7684\u8303\u56f4\uff0c\u6240\u4ee5\u4f60\u5728\u4f7f\u7528c++\u65f6\u5e94\u8be5\u4f7f\u7528long long\u7b4964\u4f4d\u53d8\u91cf\u7c7b\u578b\u6765\u5b58\u50a8\u6570\u636e\u907f\u514d\u6ea2\u51fa\n\n\u8bf4\u660e/\u63d0\u793a\n\n\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u6837\u4f8b\uff0c\u7b26\u5408\u7684\u5b57\u7b26\u4e32\u5bf9\u4e3a\uff1a (\"ab\", \"cb\"), (\"ab\", \"db\"), (\"ab\", \"aa\"), (\"cb\", \"db\") \u548c (\"cb\", \"cc\")\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u6d4b\u8bd5\u6837\u4f8b\uff0c\u7b26\u5408\u7684\u5b57\u7b26\u4e32\u5bf9\u4e3a\uff1a (\"aa\", \"ac\"), (\"aa\", \"ca\"), (\"cc\", \"ac\"), (\"cc\", \"ca\"), (\"ac\", \"aa\") \u548c (\"ca\", \"aa\")\u3002\n\n\u5bf9\u4e8e\u6700\u540e\u4e00\u4e2a\u6d4b\u8bd5\u6837\u4f8b\uff0c\u6ca1\u6709\u4e00\u79cd\u60c5\u51b5\u7b26\u5408"
}