{
    "description": "A palindrome is a string that reads the same backward as forward. For example, the strings $ \\texttt{z} $ , $ \\texttt{aaa} $ , $ \\texttt{aba} $ , and $ \\texttt{abccba} $ are palindromes, but $ \\texttt{codeforces} $ and $ \\texttt{ab} $ are not.\n\nThe double of a string $ s $ is obtained by writing each character twice. For example, the double of $ \\texttt{seeing} $ is $ \\texttt{sseeeeiinngg} $ .\n\nGiven a string $ s $ , rearrange its double to form a palindrome. Output the rearranged string. It can be proven that such a rearrangement always exists.",
    "inputFormat": "The first line of input contains $ t $ ( $ 1 \\leq t \\leq 1000 $ ) \u2014 the number of test cases.\n\nThe only line of each test case contains a single string $ s $ ( $ 1 \\leq |s| \\leq 100 $ ) consisting only of lowercase English letters.\n\nNote that the sum of $ |s| $ over all test cases is not bounded.",
    "outputFormat": "For each test case, output a palindromic string of length $ 2 \\cdot |s| $ that is a rearrangement of the double of $ s $ .",
    "samples": [
        [
            "4\na\nsururu\nerrorgorn\nanutforajaroftuna",
            "aa\nsuurruurruus\nrgnororerrerorongr\naannuuttffoorraajjaarrooffttuunnaa"
        ]
    ],
    "hint": "In the first test case, the double of $ \\texttt{a} $ is $ \\texttt{aa} $ , which is already a palindrome.\n\nIn the second test case, the double of $ \\texttt{sururu} $ is $ \\texttt{ssuurruurruu} $ . If we move the first $ \\texttt{s} $ to the end, we get $ \\texttt{suurruurruus} $ , which is a palindrome.\n\nIn the third test case, the double of $ \\texttt{errorgorn} $ is $ \\texttt{eerrrroorrggoorrnn} $ . We can rearrange the characters to form $ \\texttt{rgnororerrerorongr} $ , which is a palindrome.",
    "translation": "## \u9898\u76ee\u63cf\u8ff0\n\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u73b0\u5728\u5c06\u8be5\u5b57\u7b26\u4e32\u7684\u6bcf\u4e00\u5143\u7d20\u540e\u6dfb\u52a0\u540c\u4e00\u4e2a\u5143\u7d20\uff0c\u4f8b\u5982\u5b57\u7b26\u4e32 `abc` \u53d8\u6210 `aabbcc`\uff0c\u73b0\u5728\u8ba9\u4f60\u8f93\u51fa\u8fd9\u4e2a\u5b57\u7b26\u4e32\u91cd\u6392\u5217\u540e\u53ef\u5f97\u5230\u7684\u7684\u56de\u6587\u5b57\u7b26\u4e32\u3002"
}