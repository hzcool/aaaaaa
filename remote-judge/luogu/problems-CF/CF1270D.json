{
    "description": "This problem is interactive.\n\nWe have hidden an array $ a $ of $ n $ pairwise different numbers (this means that no two numbers are equal). You can get some information about this array using a new device you just ordered on Amazon.\n\nThis device can answer queries of the following form: in response to the positions of $ k $ different elements of the array, it will return the position and value of the $ m $ -th among them in the ascending order.\n\nUnfortunately, the instruction for the device was lost during delivery. However, you remember $ k $ , but don't remember $ m $ . Your task is to find $ m $ using queries to this device.\n\nYou can ask not more than $ n $ queries.\n\nNote that the array $ a $ and number $ m $ are fixed before the start of the interaction and don't depend on your queries. In other words, interactor is not adaptive.\n\nNote that you don't have to minimize the number of queries, and you don't need to guess array $ a $ . You just have to guess $ m $ .",
    "inputFormat": "The first line contains two integers $ n $ and $ k $ ( $ 1\\le k < n \\le 500 $ ) \u2014 the length of the array and the number of the elements in the query.\n\nIt is guaranteed that number $ m $ satisfies $ 1\\le m \\le k $ , elements $ a_1, a_2, \\dots, a_n $ of the array satisfy $ 0\\le a_i \\le 10^9 $ , and all of them are different.",
    "outputFormat": "You begin the interaction by reading $ n $ and $ k $ .\n\nTo ask a question about elements on positions $ x_1, x_2, \\dots, x_k $ , in a separate line output\n\n $ ? $ $ x_1 $ $ x_2 $ $ x_3 $ ... $ x_k $\n\nNumbers in the query have to satisfy $ 1 \\le x_i \\le n $ , and all $ x_i $ have to be different. Don't forget to 'flush', to get the answer.\n\nIn response, you will receive two integers $ pos $ and $ a_{pos} $ \u2014 the position in the array $ a $ of the $ m $ -th in ascending order element among $ a_{x_1}, a_{x_2}, \\dots, a_{x_k} $ , and the element on this position.\n\nIn case your query is invalid or you asked more than $ n $ queries, the program will print $ -1 $ and will finish interaction. You will receive a Wrong answer verdict. Make sure to exit immediately to avoid getting other verdicts.\n\nWhen you determine $ m $ , output\n\n $ ! $ $ m $\n\nAfter printing a query do not forget to output end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use:\n\n- fflush(stdout) or cout.flush() in C++;\n- System.out.flush() in Java;\n- flush(output) in Pascal;\n- stdout.flush() in Python;\n- see documentation for other languages.\n\nHack format\n\nFor the hacks use the following format:\n\nThe first line has to contain three integers $ n, k, m $ ( $ 1 \\le m \\le k < n \\le 500 $ ) \u2014 the length of the array, number of elements in the query, and which in the ascending order number the device returns.\n\nIn the next line output $ n $ integers $ a_1, a_2, \\dots, a_n $ ( $ 0\\le a_i \\le 10^9 $ ) \u2014 the elements of the array. They have to be pairwise different.",
    "samples": [
        [
            "4 3\n4 9\n4 9\n4 9\n1 2",
            "? 2 3 4\n? 1 3 4\n? 1 2 4\n? 1 2 3\n! 3\n"
        ]
    ],
    "hint": "In the example, $ n = 4 $ , $ k = 3 $ , $ m = 3 $ , $ a = [2, 0, 1, 9] $ .",
    "translation": "\u6709\u4e00\u4e2a\u957f\u4e3a $n$ \u6570\u5217 $a$\uff0c\u503c\u5df2\u786e\u5b9a\u4e14\u503c\u4e92\u4e0d\u76f8\u7b49\uff0c\u4f46\u662f\u4f60\u4e0d\u77e5\u9053\u3002\n\n\u73b0\u5728\u6709\u4e2a\u8bbe\u5907\uff0c\u4f60\u53ef\u4ee5\u8f93\u5165\u957f\u4e3a $k$ \u7684\u4e0a\u5347\u5e8f\u5217 $p_1,p_2 \\dots p_k$\uff0c\u8fdb\u884c\u8be2\u95ee\uff0c\u5b83\u4f1a\u56de\u7b54 $a_{p_1},a_{p_2} \\dots a_{p_k}$ \u4e2d\u7b2c $m$ \u5c0f\u7684\u6570\u5728\u539f\u6570\u5217\u7684\u5750\u6807\u548c\u8fd9\u4e2a\u6570\u7684\u503c\u3002\u73b0\u5728\u7ed9\u4f60 $n$ \u548c $k$\uff0c\u8ba9\u4f60\u5728\u6700\u591a\u8be2\u95ee $n$ \u6b21\u540e\u56de\u7b54 $m$ \u7684\u5927\u5c0f\u3002\u4fdd\u8bc1\u4e00\u5b9a\u53ef\u4ee5\u6784\u9020\u51fa\u65b9\u6848\u3002"
}