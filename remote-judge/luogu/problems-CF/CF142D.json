{
    "description": "Having learned (not without some help from the Codeforces participants) to play the card game from the previous round optimally, Shrek and Donkey (as you may remember, they too live now in the Kingdom of Far Far Away) have decided to quit the boring card games and play with toy soldiers.\n\nThe rules of the game are as follows: there is a battlefield, its size equals $ n\u00d7m $ squares, some squares contain the toy soldiers (the green ones belong to Shrek and the red ones belong to Donkey). Besides, each of the $ n $ lines of the area contains not more than two soldiers. During a move a players should select not less than $ 1 $ and not more than $ k $ soldiers belonging to him and make them either attack or retreat.\n\nAn attack is moving all of the selected soldiers along the lines on which they stand in the direction of an enemy soldier, if he is in this line. If this line doesn't have an enemy soldier, then the selected soldier on this line can move in any direction during the player's move. Each selected soldier has to move at least by one cell. Different soldiers can move by a different number of cells. During the attack the soldiers are not allowed to cross the cells where other soldiers stand (or stood immediately before the attack). It is also not allowed to go beyond the battlefield or finish the attack in the cells, where other soldiers stand (or stood immediately before attack).\n\nA retreat is moving all of the selected soldiers along the lines on which they stand in the direction from an enemy soldier, if he is in this line. The other rules repeat the rules of the attack.\n\nFor example, let's suppose that the original battlefield had the form (here symbols \"G\" mark Shrek's green soldiers and symbols \"R\" mark Donkey's red ones):\n\n  `-G-R-<br></br>-R-G-<br></br>` Let's suppose that $ k=2 $ and Shrek moves first. If he decides to attack, then after his move the battlefield can look like that:\n\n  `--GR-     --GR-     -G-R-<br></br>-RG--     -R-G-     -RG--<br></br>` If in the previous example Shrek decides to retreat, then after his move the battlefield can look like that:\n\n  `G--R-     G--R-     -G-R-<br></br>-R--G     -R-G-     -R--G<br></br>` On the other hand, the followings fields cannot result from Shrek's correct move:\n\n  `G--R-     ---RG     --GR-<br></br>-RG--     -R-G-     GR---<br></br>` Shrek starts the game. To make a move means to attack or to retreat by the rules. A player who cannot make a move loses and his opponent is the winner. Determine the winner of the given toy soldier game if Shrek and Donkey continue to be under the yellow pills from the last rounds' problem. Thus, they always play optimally (that is, they try to win if it is possible, or finish the game in a draw, by ensuring that it lasts forever, if they cannot win).",
    "inputFormat": "The first line contains space-separated integers $ n $ , $ m $ and $ k $ ( $ 1<=n,m,k<=100 $ ). Then $ n $ lines contain $ m $ characters each. These characters belong to the set {\"-\", \"G\", \"R\"}, denoting, respectively, a battlefield's free cell, a cell occupied by Shrek's soldiers and a cell occupied by Donkey's soldiers.\n\nIt is guaranteed that each line contains no more than two soldiers.",
    "outputFormat": "Print \"First\" (without the quotes) if Shrek wins in the given Toy Soldier game. If Donkey wins, print \"Second\" (without the quotes). If the game continues forever, print \"Draw\" (also without the quotes).",
    "samples": [
        [
            "2 3 1\nR-G\nRG-\n",
            "First\n"
        ],
        [
            "3 3 2\nG-R\nR-G\nG-R\n",
            "Second\n"
        ],
        [
            "2 3 1\n-R-\n-G-\n",
            "Draw\n"
        ],
        [
            "2 5 2\n-G-R-\n-R-G-\n",
            "First\n"
        ]
    ],
    "hint": "",
    "translation": " - \u7ed9\u5b9a\u4e00\u4e2a $n\\times m$ \u7684\u68cb\u76d8\u3002\u68cb\u76d8\u4e2d `-` \u4ee3\u8868\u7a7a\u683c\uff0c`G` \u4ee3\u8868\u7eff\u8272\u68cb\u5b50\uff0c`R` \u4ee3\u8868\u7ea2\u8272\u68cb\u5b50\u3002\u6bcf\u884c\u81f3\u591a\u6709\u4e24\u4e2a\u58eb\u5175\u3002\n - \u5148\u624b\u6267\u7eff\u68cb\u3002\n - \u6bcf\u4e2a\u56de\u5408\u73a9\u5bb6\u53ef\u4ee5\u9009\u62e9 $1$ \u5230 $k$ \u4e2a\u68cb\u5b50\u5728\u5f53\u524d\u884c\u5185\u5411\u5de6\u6216\u5411\u53f3\u4efb\u610f\u79fb\u52a8\u4e00\u6b21\uff0c\u4f46\u4e0d\u80fd\u8d8a\u8fc7\u53e6\u4e00\u4e2a\u68cb\u5b50\uff0c\u4e5f\u4e0d\u80fd\u5728\u4e0d\u540c\u884c\u4e4b\u95f4\u79fb\u52a8\u3002\n - \u82e5\u4e00\u65b9\u5728\u79fb\u52a8\u540e\u80fd\u4f7f\u53e6\u4e00\u65b9\u65e0\u6cd5\u79fb\u52a8\uff0c\u5219\u83b7\u80dc\u3002  \n - \u6c42\u6700\u540e\u8c01\u83b7\u80dc\u6216\u5e73\u5c40\u3002\n - $1\\leq n,m,k\\leq 100$\u3002"
}