{
    "description": "Bankopolis is an incredible city in which all the $ n $ crossroads are located on a straight line and numbered from $ 1 $ to $ n $ along it. On each crossroad there is a bank office.\n\nThe crossroads are connected with $ m $ oriented bicycle lanes (the $ i $ -th lane goes from crossroad $ u_{i} $ to crossroad $ v_{i} $ ), the difficulty of each of the lanes is known.\n\nOleg the bank client wants to gift happiness and joy to the bank employees. He wants to visit exactly $ k $ offices, in each of them he wants to gift presents to the employees.\n\nThe problem is that Oleg don't want to see the reaction on his gifts, so he can't use a bicycle lane which passes near the office in which he has already presented his gifts (formally, the $ i $ -th lane passes near the office on the $ x $ -th crossroad if and only if $ min(u_{i},v_{i})&lt;x&lt;max(u_{i},v_{i}))) $ . Of course, in each of the offices Oleg can present gifts exactly once. Oleg is going to use exactly $ k-1 $ bicycle lane to move between offices. Oleg can start his path from any office and finish it in any office.\n\nOleg wants to choose such a path among possible ones that the total difficulty of the lanes he will use is minimum possible. Find this minimum possible total difficulty.",
    "inputFormat": "The first line contains two integers $ n $ and $ k $ ( $ 1<=n,k<=80 $ ) \u2014 the number of crossroads (and offices) and the number of offices Oleg wants to visit.\n\nThe second line contains single integer $ m $ ( $ 0<=m<=2000 $ ) \u2014 the number of bicycle lanes in Bankopolis.\n\nThe next $ m $ lines contain information about the lanes.\n\nThe $ i $ -th of these lines contains three integers $ u_{i} $ , $ v_{i} $ and $ c_{i} $ ( $ 1<=u_{i},v_{i}<=n $ , $ 1<=c_{i}<=1000 $ ), denoting the crossroads connected by the $ i $ -th road and its difficulty.",
    "outputFormat": "In the only line print the minimum possible total difficulty of the lanes in a valid path, or -1 if there are no valid paths.",
    "samples": [
        [
            "7 4\n4\n1 6 2\n6 2 2\n2 4 2\n2 7 1\n",
            "6\n"
        ],
        [
            "4 3\n4\n2 1 2\n1 3 2\n3 4 2\n4 1 1\n",
            "3\n"
        ]
    ],
    "hint": "In the first example Oleg visiting banks by path $ 1\u21926\u21922\u21924 $ .\n\nPath $ 1\u21926\u21922\u21927 $ with smaller difficulity is incorrect because crossroad $ 2\u21927 $ passes near already visited office on the crossroad $ 6 $ .\n\nIn the second example Oleg can visit banks by path $ 4\u21921\u21923 $ .",
    "translation": "\u7ed9\u51fa $n$ \u4e2a\u70b9\uff0c$m$ \u6761\u8fb9\u7684\u6709\u5411\u56fe\u3002\n\n\u6c42\u51fa\u4e00\u6761\u4efb\u610f\u8d77\u70b9\u3001\u9014\u4e2d\u4e0d\u80fd\u7ecf\u8fc7\u4e4b\u524d\u8d70\u8fc7\u7684\u70b9\uff0c\u5e76\u4e14\u5305\u542b $k$ \u4e2a\u70b9\u7684\u6743\u503c\u6700\u5c0f\u7684\u8def\u5f84\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5c31\u8f93\u51fa $-1$ \u3002\n\n\u8fb9 $(u, v)$\u7ecf\u8fc7\u70b9 $x$\uff0c\u5f53\u4e14\u4ec5\u5f53 $min(u,v) < x < max(u,v)$ \u3002\n\n$1 \\leq n,k \\leq 80, 0\\leq m\\leq 2000, 1\\leq u_i, v_i \\leq n, 1\\leq c_i\\leq 1000$"
}