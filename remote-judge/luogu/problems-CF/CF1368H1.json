{
    "description": "This is an easier version of the problem H without modification queries.\n\nLester and Delbert work at an electronics company. They are currently working on a microchip component serving to connect two independent parts of a large supercomputer.\n\nThe component is built on top of a breadboard \u2014 a grid-like base for a microchip. The breadboard has $ n $ rows and $ m $ columns, and each row-column intersection contains a node. Also, on each side of the breadboard there are ports that can be attached to adjacent nodes. Left and right side have $ n $ ports each, and top and bottom side have $ m $ ports each. Each of the ports is connected on the outside to one of the parts bridged by the breadboard, and is colored red or blue respectively.\n\n  ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1368H1/892efbe6be2ecb5cf3c218155cbe1684041ffb4a.png)Ports can be connected by wires going inside the breadboard. However, there are a few rules to follow:\n\n- Each wire should connect a red port with a blue port, and each port should be connected to at most one wire.\n- Each part of the wire should be horizontal or vertical, and turns are only possible at one of the nodes.\n- To avoid interference, wires can not have common parts of non-zero length (but may have common nodes). Also, a wire can not cover the same segment of non-zero length twice.\n\nThe capacity of the breadboard is the largest number of red-blue wire connections that can be made subject to the rules above. For example, the breadboard above has capacity $ 7 $ , and one way to make seven connections is pictured below.\n\n  ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1368H1/c54dfbe0d7502b7f366741129332f0a68552a265.png) Up to this point statements of both versions are identical. Differences follow below.\n\nGiven the current breadboard configuration, help Lester and Delbert find its capacity efficiently.",
    "inputFormat": "The first line contains three integers $ n, m, q $ ( $ 1 \\leq       n, m \\leq 10^5 $ , $ \\pmb{q = 0} $ ). $ n $ and $ m $ are the number of rows and columns of the breadboard respectively. In this version $ q $ is always zero, and is only present for consistency with the harder version.\n\nThe next four lines describe initial coloring of the ports. Each character in these lines is either R or B, depending on the coloring of the respective port. The first two of these lines contain $ n $ characters each, and describe ports on the left and right sides respectively from top to bottom. The last two lines contain $ m $ characters each, and describe ports on the top and bottom sides respectively from left to right.",
    "outputFormat": "Print a single integer \u2014 the given breadboard capacity.",
    "samples": [
        [
            "4 5 0\nBBRR\nRBBR\nBBBBB\nRRRRR",
            "7"
        ]
    ],
    "hint": "",
    "translation": "## \u9898\u76ee\u63cf\u8ff0\n\n**\u672c\u9898\u4e0e [[CF1368H2] Breadboard Capacity (hard version)](https://www.luogu.com.cn/problem/CF1368H2) \u7684\u5728\u4e8e\uff0c\u672c\u9898\u4e2d $q=0$\uff0c\u5373\u4e0d\u5b58\u5728\u4fee\u6539\u64cd\u4f5c\u3002**   \n   \n\u4f60\u6709\u4e00\u5757 $n\\times m$ \u7684\u683c\u5b50\u72b6\u7a7a\u767d\u7535\u8def\u677f\uff0c\u5b83\u6709 $n$ \u884c $m$ \u5217\u3002\u6bcf\u4e00\u884c\u548c\u6bcf\u4e00\u5217\u7684\u4ea4\u70b9\u4e0a\u6709\u4e00\u4e2a\u8282\u70b9\u3002\u5728\u7535\u8def\u677f\u7684\u5de6\u53f3\u4e24\u4fa7\u5404\u6709 $n$ \u4e2a\u63a5\u53e3\uff0c\u4e0a\u4e0b\u4e24\u4fa7\u5404\u6709 $m$ \u4e2a\u63a5\u53e3\u3002\u6bcf\u4e2a\u63a5\u53e3\u53ef\u4ee5\u88ab\u8fde\u63a5\u5230\u4e00\u4e2a\u76f8\u90bb\u7684\u8282\u70b9\u4e0a\u3002\u6bcf\u4e2a\u63a5\u53e3\u5404\u662f\u7ea2\u8272\u6216\u8005\u84dd\u8272\u3002*\u8fd9\u91cc\u7684\u76f8\u90bb\u6307\u4e0a\u4e0b\u5de6\u53f3\u65b9\u5411\u4e0a\u7684\u7b2c\u4e00\u4e2a\u3002*\n   \n\u4e0b\u9762\u7ed9\u51fa\u4e86\u4e00\u4e2a\u7535\u8def\u677f\u7684\u4f8b\u5b50\uff1a\n   \n![Empty breadboard](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1368H1/892efbe6be2ecb5cf3c218155cbe1684041ffb4a.png)\n   \n\u63a5\u53e3\u53ef\u4ee5\u7531\u7535\u8def\u677f\u5185\u90e8\u7684\u7535\u7ebf\u6765\u8fde\u63a5\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u89c4\u5219\uff1a\n   \n- \u6bcf\u4e00\u6761\u7535\u7ebf\u5fc5\u987b\u8fde\u63a5\u4e24\u4e2a\u5f02\u8272\u63a5\u53e3\u3002\u4e00\u4e2a\u63a5\u53e3\u6700\u591a\u7531\u4e00\u6761\u7535\u7ebf\u8fde\u63a5\u3002   \n- \u4efb\u4f55\u4e00\u90e8\u5206\u7535\u7ebf\u5fc5\u987b\u662f\u6c34\u5e73\u6216\u8005\u7ad6\u76f4\u7684\uff0c\u4e14\u53ea\u80fd\u5728\u8282\u70b9\u5904\u62d0\u5f2f\u3002   \n- \u4e3a\u4e86\u907f\u514d\u4fe1\u53f7\u5e72\u6270\uff0c\u4efb\u610f\u4e24\u6761\u7535\u7ebf\u4e4b\u95f4\u4e0d\u80fd\u6709\u516c\u5171\u7684\u7ebf\u8def\u90e8\u5206\uff0c\u4f46\u662f\u53ef\u4ee5\u7ecf\u8fc7\u516c\u5171\u8282\u70b9\u3002\u4e14\u4e00\u6761\u7535\u7ebf\u4e0d\u80fd\u91cd\u590d\u8986\u76d6\u4e00\u6761\u6709\u957f\u5ea6\u7684\u7ebf\u6bb5\u3002   \n  \n\u6211\u4eec\u5b9a\u4e49\u8fd9\u5757\u7535\u8def\u677f\u7684\u5bb9\u91cf\u4e3a\u9075\u5faa\u4ee5\u4e0a\u8fde\u63a5\u89c4\u5219\u540e\uff0c\u7ea2\u63a5\u53e3\u548c\u84dd\u63a5\u53e3\u7684\u6700\u5927\u8fde\u63a5\u6570\u3002\u4f8b\u5982\uff0c\u4e0a\u56fe\u6240\u793a\u7684\u7535\u8def\u677f\u7684\u5bb9\u91cf\u4e3a $7$ \uff0c\u4e00\u79cd\u8fde\u63a5\u65b9\u6cd5\u8bf7\u89c1\u4e0b\u56fe\uff1a\n   \n![Possible connection](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1368H1/c54dfbe0d7502b7f366741129332f0a68552a265.png)   \n\u7ed9\u5b9a\u4e00\u5757\u7535\u8def\u7684\u72b6\u51b5\uff0c\u8bf7\u627e\u51fa\u5b83\u7684\u5bb9\u91cf\u3002    \n## \u8f93\u5165\u683c\u5f0f\n\u7b2c\u4e00\u884c\u5305\u542b\u4e09\u4e2a\u6574\u6570 $n,m,q(1\\le n,m\\le 10^5, \\bold{q=0})$\u3002$n,m$ \u8868\u793a\u7535\u8def\u677f\u7684\u957f\u548c\u5bbd\u3002\u5728\u8fd9\u4e2a\u95ee\u9898\u4e2d $q$ \u603b\u662f 0\uff0c\u4f60\u53ef\u4ee5\u4e0d\u7ba1\u5b83\u3002\n   \n\u7b2c\u4e8c\u884c\u8f93\u5165\u4e00\u4e2a\u957f $n$ \u7684\u5b57\u7b26\u4e32\uff0c\u63cf\u8ff0\u4e86\u4ece\u4e0a\u5230\u4e0b\u7684\u5de6\u4fa7\u63a5\u53e3\u7684\u989c\u8272\u3002    \n   \n\u7b2c\u4e09\u884c\u8f93\u5165\u4e00\u4e2a\u957f $n$ \u7684\u5b57\u7b26\u4e32\uff0c\u63cf\u8ff0\u4e86\u4ece\u4e0a\u5230\u4e0b\u7684\u53f3\u4fa7\u63a5\u53e3\u7684\u989c\u8272\u3002   \n   \n\u7b2c\u56db\u884c\u8f93\u5165\u4e00\u4e2a\u957f $m$ \u7684\u5b57\u7b26\u4e32\uff0c\u63cf\u8ff0\u4e86\u4ece\u5de6\u5230\u53f3\u7684\u4e0a\u4fa7\u63a5\u53e3\u7684\u989c\u8272\u3002    \n   \n\u7b2c\u4e94\u884c\u8f93\u5165\u4e00\u4e2a\u957f $m$ \u7684\u5b57\u7b26\u4e32\uff0c\u63cf\u8ff0\u4e86\u4ece\u5de6\u5230\u53f3\u7684\u4e0b\u4fa7\u63a5\u53e3\u7684\u989c\u8272\u3002   \n   \n\u6240\u6709\u5b57\u7b26\u4e32\u5747\u4ee5 ```R``` \u8868\u793a\u7ea2\u8272\uff0c```B``` \u8868\u793a\u84dd\u8272\u3002   \n## \u8f93\u51fa\u683c\u5f0f\n\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u7535\u8def\u677f\u7684\u5bb9\u91cf\u3002"
}