{
    "description": "Pasha loves his phone and also putting his hair up... But the hair is now irrelevant.\n\nPasha has installed a new game to his phone. The goal of the game is following. There is a rectangular field consisting of $ n $ row with $ m $ pixels in each row. Initially, all the pixels are colored white. In one move, Pasha can choose any pixel and color it black. In particular, he can choose the pixel that is already black, then after the boy's move the pixel does not change, that is, it remains black. Pasha loses the game when a $ 2\u00d72 $ square consisting of black pixels is formed.\n\nPasha has made a plan of $ k $ moves, according to which he will paint pixels. Each turn in his plan is represented as a pair of numbers $ i $ and $ j $ , denoting respectively the row and the column of the pixel to be colored on the current move.\n\nDetermine whether Pasha loses if he acts in accordance with his plan, and if he does, on what move the $ 2\u00d72 $ square consisting of black pixels is formed.",
    "inputFormat": "The first line of the input contains three integers $ n,m,k $ ( $ 1<=n,m<=1000 $ , $ 1<=k<=10^{5} $ ) \u2014 the number of rows, the number of columns and the number of moves that Pasha is going to perform.\n\nThe next $ k $ lines contain Pasha's moves in the order he makes them. Each line contains two integers $ i $ and $ j $ ( $ 1<=i<=n $ , $ 1<=j<=m $ ), representing the row number and column number of the pixel that was painted during a move.",
    "outputFormat": "If Pasha loses, print the number of the move when the $ 2\u00d72 $ square consisting of black pixels is formed.\n\nIf Pasha doesn't lose, that is, no $ 2\u00d72 $ square consisting of black pixels is formed during the given $ k $ moves, print $ 0 $ .",
    "samples": [
        [
            "2 2 4\n1 1\n1 2\n2 1\n2 2\n",
            "4\n"
        ],
        [
            "2 3 6\n2 3\n2 2\n1 3\n2 2\n1 2\n1 1\n",
            "5\n"
        ],
        [
            "5 3 7\n2 3\n1 2\n1 1\n4 1\n3 1\n5 3\n3 2\n",
            "0\n"
        ]
    ],
    "hint": "",
    "translation": "\u73b0\u5728\u6709\u4e00\u4e2an*m \u7684\u77e9\u9635\uff0c\u4e00\u5f00\u59cb\u5168\u90e8\u683c\u5b50\u88ab\u67d3\u6210\u767d\u8272\u3002\n\u63a5\u4e0b\u6765\u6709k\u4e2a\u64cd\u4f5c\uff0c\u6bcf\u4e00\u4e2a\u64cd\u4f5c\u8868\u793a\u628a\u4e00\u4e2a\u683c\u5b50\u67d3\u6210\u9ed1\u8272\u3002\n\n\u8f93\u5165n,m\u548ck,\u63a5\u4e0b\u6765k\u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6b63\u6574\u6570x,y\uff0c\u8868\u793a\u8981\u67d3\u6210\u9ed1\u8272\u7684\u683c\u5b50\u7684\u5750\u6807\uff1b\n\u8f93\u51fa\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u4e3a\u7b2c\u4e00\u6b21\u51fa\u73b02*2\u7684\u9ed1\u8272\u683c\u5b50\u65f6\u662f\u7b2c\u51e0\u6b21\u64cd\u4f5c\u3002"
}