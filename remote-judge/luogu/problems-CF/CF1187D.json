{
    "description": "You are given an array $ a_1, a_2, \\dots, a_n $ and an array $ b_1, b_2, \\dots, b_n $ .\n\nFor one operation you can sort in non-decreasing order any subarray $ a[l \\dots r] $ of the array $ a $ .\n\nFor example, if $ a = [4, 2, 2, 1, 3, 1] $ and you choose subbarray $ a[2 \\dots 5] $ , then the array turns into $ [4, 1, 2, 2, 3, 1] $ .\n\nYou are asked to determine whether it is possible to obtain the array $ b $ by applying this operation any number of times (possibly zero) to the array $ a $ .",
    "inputFormat": "The first line contains one integer $ t $ ( $ 1 \\le t \\le 3 \\cdot 10^5 $ ) \u2014 the number of queries.\n\nThe first line of each query contains one integer $ n $ ( $ 1 \\le n \\le 3 \\cdot 10^5 $ ).\n\nThe second line of each query contains $ n $ integers $ a_1, a_2, \\dots, a_n $ ( $ 1 \\le a_i \\le n $ ).\n\nThe third line of each query contains $ n $ integers $ b_1, b_2, \\dots, b_n $ ( $ 1 \\le b_i \\le n $ ).\n\nIt is guaranteed that $ \\sum n \\le 3 \\cdot 10^5 $ over all queries in a test.",
    "outputFormat": "For each query print YES (in any letter case) if it is possible to obtain an array $ b $ and NO (in any letter case) otherwise.",
    "samples": [
        [
            "4\n7\n1 7 1 4 4 5 6\n1 1 4 4 5 7 6\n5\n1 1 3 3 5\n1 1 3 3 5\n2\n1 1\n1 2\n3\n1 2 3\n3 2 1\n",
            "YES\nYES\nNO\nNO\n"
        ]
    ],
    "hint": "In first test case the can sort subarray $ a_1 \\dots a_5 $ , then $ a $ will turn into $ [1, 1, 4, 4, 7, 5, 6] $ , and then sort subarray $ a_5 \\dots a_6 $ .",
    "translation": "\u7ed9\u5b9a\u957f\u5ea6\u4e3a $n$ \u7684\u6570\u7ec4 $a$ \u548c $b$\u3002\u4f60\u6bcf\u6b21\u53ef\u4ee5\u9009\u62e9\u4e00\u6bb5\u533a\u95f4 $[l,r]$\uff0c\u4ee4 $a_l\\sim a_r$ \u7684\u5143\u7d20\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\u4f60\u53ef\u4ee5\u8fdb\u884c\u4efb\u610f\u6b21\u64cd\u4f5c\u3002\u95ee\u80fd\u5426\u4f7f $a$ \u4e0e $b$ \u5b8c\u5168\u76f8\u7b49\uff08\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u7684\u5143\u7d20\u76f8\u7b49\uff09\u3002"
}