{
    "description": "You are given a string $ s $ consisting of lowercase letters of the English alphabet. You must perform the following algorithm on $ s $ :\n\n- Let $ x $ be the length of the longest prefix of $ s $ which occurs somewhere else in $ s $ as a contiguous substring (the other occurrence may also intersect the prefix). If $ x = 0 $ , break. Otherwise, remove the first $ x $ characters of $ s $ , and repeat.\n\nA prefix is a string consisting of several first letters of a given string, without any reorders. An empty prefix is also a valid prefix. For example, the string \"abcd\" has 5 prefixes: empty string, \"a\", \"ab\", \"abc\" and \"abcd\".\n\nFor instance, if we perform the algorithm on $ s = $ \"abcabdc\",\n\n- Initially, \"ab\" is the longest prefix that also appears somewhere else as a substring in $ s $ , so $ s = $ \"cabdc\" after $ 1 $ operation.\n- Then, \"c\" is the longest prefix that also appears somewhere else as a substring in $ s $ , so $ s = $ \"abdc\" after $ 2 $ operations.\n- Now $ x=0 $ (because there are no non-empty prefixes of \"abdc\" that also appear somewhere else as a substring in $ s $ ), so the algorithm terminates.\n\nFind the final state of the string after performing the algorithm.",
    "inputFormat": "The first line contains a single integer $ t $ ( $ 1 \\le t \\le 10^4 $ ) \u2014 the number of test cases.\n\nThis is followed by $ t $ lines, each containing a description of one test case. Each line contains a string $ s $ . The given strings consist only of lowercase letters of the English alphabet and have lengths between $ 1 $ and $ 2 \\cdot 10^5 $ inclusive.\n\nIt is guaranteed that the sum of the lengths of $ s $ over all test cases does not exceed $ 2 \\cdot 10^5 $ .",
    "outputFormat": "For each test case, print a single line containing the string $ s $ after executing the algorithm. It can be shown that such string is non-empty.",
    "samples": [
        [
            "6\nabcabdc\na\nbbbbbbbbbb\ncodeforces\ncffcfccffccfcffcfccfcffccffcfccf\nzyzyzwxxyyxxyyzzyzzxxwzxwywxwzxxyzzw",
            "abdc\na\nb\ndeforces\ncf\nxyzzw"
        ]
    ],
    "hint": "The first test case is explained in the statement.\n\nIn the second test case, no operations can be performed on $ s $ .\n\nIn the third test case,\n\n- Initially, $ s = $ \"bbbbbbbbbb\".\n- After $ 1 $ operation, $ s = $ \"b\".\n\nIn the fourth test case,\n\n- Initially, $ s = $ \"codeforces\".\n- After $ 1 $ operation, $ s = $ \"odeforces\".\n- After $ 2 $ operations, $ s = $ \"deforces\".",
    "translation": "\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 $s$\u3002\u73b0\u5728\u5bf9\u5176\u6267\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a\n\n- \u4ee4 $x$ \u4e3a\u6700\u957f\u7684\u4f7f\u5f97\u5176\u7b49\u540c\u4e8e\u4e00\u4e2a\u975e\u524d\u7f00\u7684\u5b50\u4e32\u7684\u524d\u7f00\u957f\u5ea6\uff08\u4f8b\u5982\u5bf9\u4e8e $s=\\texttt{abcabdc}$\uff0c$x=2$\uff09\u3002\u5982\u679c $x=0$\uff0c\u505c\u6b62\u64cd\u4f5c\uff1b\u5426\u5219\uff0c\u53bb\u6389\u957f\u5ea6\u4e3a $x$ \u7684\u524d\u7f00\uff0c\u5e76\u91cd\u590d\u64cd\u4f5c\u3002\n\n\u6c42\u51fa\u5728\u6267\u884c\u4e0a\u8ff0\u64cd\u4f5c\u540e\u5f97\u5230\u7684\u5b57\u7b26\u4e32\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a\n\n- $t$ \u7ec4\u6570\u636e\uff0c$1\\leqslant t\\leqslant 10^4$\u3002\n- $1\\leqslant \\left|s\\right|,\\sum \\left|s\\right|\\leqslant 2\\times 10^5$\u3002\n\nTranslated by Eason_AC"
}