{
    "description": "Let $ a $ be an array consisting of $ n $ numbers. The array's elements are numbered from $ 1 $ to $ n $ , $ even $ is an array consisting of the numerals whose numbers are even in $ a $ ( $ even_{i}=a_{2i} $ , $ 1<=2i<=n $ ), $ odd $ is an array consisting of the numberals whose numbers are odd in $ \u0430 $ ( $ odd_{i}=a_{2i-1} $ , $ 1<=2i-1<=n $ ). Then let's define the transformation of array $ F(a) $ in the following manner:\n\n- if $ n&gt;1 $ , $ F(a)=F(odd)+F(even) $ , where operation \" $ + $ \" stands for the arrays' concatenation (joining together)\n- if $ n=1 $ , $ F(a)=a $\n\nLet $ a $ be an array consisting of $ n $ numbers $ 1,2,3,...,n $ . Then $ b $ is the result of applying the transformation to the array $ a $ (so $ b=F(a) $ ). You are given $ m $ queries $ (l,r,u,v) $ . Your task is to find for each query the sum of numbers $ b_{i} $ , such that $ l<=i<=r $ and $ u<=b_{i}<=v $ . You should print the query results modulo $ mod $ .",
    "inputFormat": "The first line contains three integers $ n $ , $ m $ , $ mod $ ( $ 1<=n<=10^{18},1<=m<=10^{5},1<=mod<=10^{9} $ ). Next $ m $ lines describe the queries. Each query is defined by four integers $ l $ , $ r $ , $ u $ , $ v $ ( $ 1<=l<=r<=n $ , $ 1<=u<=v<=10^{18} $ ).\n\nPlease do not use the %lld specificator to read or write 64-bit integers in C++. Use %I64d specificator.",
    "outputFormat": "Print $ m $ lines each containing an integer \u2014 remainder modulo $ mod $ of the query result.",
    "samples": [
        [
            "4 5 10000\n2 3 4 5\n2 4 1 3\n1 2 2 4\n2 3 3 5\n1 3 3 4\n",
            "0\n5\n3\n3\n3\n"
        ],
        [
            "2 5 10000\n1 2 2 2\n1 1 4 5\n1 1 2 5\n1 1 1 3\n1 2 5 5\n",
            "2\n0\n0\n1\n0\n"
        ]
    ],
    "hint": "Let's consider the first example. First let's construct an array $ b=F(a)=F([1,2,3,4]) $ .\n\n- Step 1. $ F([1,2,3,4])=F([1,3])+F([2,4]) $\n- Step 2. $ F([1,3])=F([1])+F([3])=[1]+[3]=[1,3] $\n- Step 3. $ F([2,4])=F([2])+F([4])=[2]+[4]=[2,4] $\n- Step 4. $ b=F([1,2,3,4])=F([1,3])+F([2,4])=[1,3]+[2,4]=[1,3,2,4] $\n\n Thus $ b=[1,3,2,4] $ . Let's consider the first query $ l=2,r=3,u=4,v=5 $ . The second and third positions in the array $ b $ do not have numbers in the range $ [4,5] $ , so the sum obviously equals zero. Let's consider the second query $ l=2,r=4,u=1,v=3 $ . The second and third positions have two numbers that belong to the range $ [1,3] $ , their sum equals 5.",
    "translation": "\u5bf9\u4e00\u4e2a\u6570\u5217 $s$ \u5b9a\u4e49 $odd_s$ \u662f\u5c06 $s$ \u7684\u5947\u6570\u4f4d\u53d6\u51fa\uff0c\u5373 $odd_s=\\{s_{2i}\\mid1\\le 2i\\le |S|\\}$\uff1b$even_s$ \u662f\u5c06\u5176\u5076\u6570\u4f4d\u53d6\u51fa\uff0c\u540c\u7406\u3002\n\n\u5b9a\u4e49\u4e00\u4e2a\u6570\u5217 $s$ \u7684\u53d8\u6362 $F(s)$\uff1a\n$$\nF(s)=\\begin{cases}\nF(odd_s)+F(even_s)&|s|>1\\\\\ns&|s|=1\n\\end{cases}\n$$\n\n(\u4e0a\u9762\u7684 $+$ \u8868\u793a\u5c06\u4e24\u4e2a\u6570\u5217\u9996\u5c3e\u76f8\u63a5)\n\n\u7ed9\u5b9a\u6b63\u6574\u6570 $n$\uff0c\u6570\u5217 $a=\\{1,2,\\dots,n\\}$\u3002\u901a\u8fc7\u53d8\u6362\u5f97\u5230 $b=F(a)$\u3002\n\n\u7136\u540e\u8fdb\u884c $m$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u7ed9\u51fa\u6b63\u6574\u6570 $l,r,u,v$\uff0c\u6c42\n$$\n\\sum_{l\\le i\\le r}[u\\le b_i\\le v]b_i\n$$\n\n\u5373\u6c42 $b$ \u7684 $[l,r]$ \u533a\u95f4\u5185\uff0c\u6743\u503c\u5728 $u,v$ \u4e4b\u95f4\u7684\u6570\u7684\u6743\u503c\u548c\uff0c\u7b54\u6848\u5bf9\u4e00\u5f00\u59cb\u8f93\u5165\u7684\u6b63\u6574\u6570 $mod$ \u53d6\u6a21\u3002\n\n\u6570\u636e\u89c4\u6a21\uff1a$1\\le n\\le10^{18}$\uff0c$1\\le m\\le10^5$\uff0c$1\\le mod\\le10^9$\uff1b$1\\le l\\le r\\le n$\uff0c$1\\le u\\le v\\le 10^{18}$\u3002"
}