{
    "description": "DZY loves chemistry, and he enjoys mixing chemicals.\n\nDZY has $ n $ chemicals, and $ m $ pairs of them will react. He wants to pour these chemicals into a test tube, and he needs to pour them in one by one, in any order.\n\nLet's consider the danger of a test tube. Danger of an empty test tube is $ 1 $ . And every time when DZY pours a chemical, if there are already one or more chemicals in the test tube that can react with it, the danger of the test tube will be multiplied by $ 2 $ . Otherwise the danger remains as it is.\n\nFind the maximum possible danger after pouring all the chemicals one by one in optimal order.",
    "inputFormat": "The first line contains two space-separated integers $ n $ and $ m $ ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF445B/04c5ea027a40d7547891712e7f413f407f9053ef.png).\n\nEach of the next $ m $ lines contains two space-separated integers $ x_{i} $ and $ y_{i} $ $ (1<=x_{i}<y_{i}<=n) $ . These integers mean that the chemical $ x_{i} $ will react with the chemical $ y_{i} $ . Each pair of chemicals will appear at most once in the input.\n\nConsider all the chemicals numbered from $ 1 $ to $ n $ in some order.",
    "outputFormat": "Print a single integer \u2014 the maximum possible danger.",
    "samples": [
        [
            "1 0\n",
            "1\n"
        ],
        [
            "2 1\n1 2\n",
            "2\n"
        ],
        [
            "3 2\n1 2\n2 3\n",
            "4\n"
        ]
    ],
    "hint": "In the first sample, there's only one way to pour, and the danger won't increase.\n\nIn the second sample, no matter we pour the $ 1 $ st chemical first, or pour the $ 2 $ nd chemical first, the answer is always $ 2 $ .\n\nIn the third sample, there are four ways to achieve the maximum possible danger: 2-1-3, 2-3-1, 1-2-3 and 3-2-1 (that is the numbers of the chemicals in order of pouring).",
    "translation": "DZY\u70ed\u7231\u5316\u5b66.\u4ed6\u6709n\u79cd\u7269\u8d28,\u5176\u4e2dm\u5bf9\u4f1a\u53cd\u5e94.\u4ed6\u628a\u5b83\u4eec\u4e00\u79cd\u4e00\u79cd\u5012\u5230\u70e7\u676f\u91cc.\u6709\u4e00\u4e2a\u5371\u9669\u503c,\u4e00\u5f00\u59cb\u7b49\u4e8e1.\u5982\u679c\u4e00\u79cd\u7269\u8d28\u5012\u5230\u70e7\u676f\u91cc\u4e4b\u540e\u81f3\u5c11\u6709\u4e00\u79cd\u7269\u8d28\u80fd\u548c\u5b83\u53cd\u5e94,\u5219\u5371\u9669\u503c\u4e58\u4ee5\u4e8c;\u5426\u5219\u5371\u9669\u503c\u4e0d\u53d8.\u6c42\u6240\u6709\u7269\u8d28\u5012\u5230\u70e7\u676f\u91cc\u4e4b\u540e\u6700\u5927\u7684\u5371\u9669\u503c.\n\nBy @Fuko_Ibuki "
}