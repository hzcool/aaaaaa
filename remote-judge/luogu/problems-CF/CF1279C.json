{
    "description": "Santa has to send presents to the kids. He has a large stack of $ n $ presents, numbered from $ 1 $ to $ n $ ; the topmost present has number $ a_1 $ , the next present is $ a_2 $ , and so on; the bottom present has number $ a_n $ . All numbers are distinct.\n\nSanta has a list of $ m $ distinct presents he has to send: $ b_1 $ , $ b_2 $ , ..., $ b_m $ . He will send them in the order they appear in the list.\n\nTo send a present, Santa has to find it in the stack by removing all presents above it, taking this present and returning all removed presents on top of the stack. So, if there are $ k $ presents above the present Santa wants to send, it takes him $ 2k + 1 $ seconds to do it. Fortunately, Santa can speed the whole process up \u2014 when he returns the presents to the stack, he may reorder them as he wishes (only those which were above the present he wanted to take; the presents below cannot be affected in any way).\n\nWhat is the minimum time required to send all of the presents, provided that Santa knows the whole list of presents he has to send and reorders the presents optimally? Santa cannot change the order of presents or interact with the stack of presents in any other way.\n\nYour program has to answer $ t $ different test cases.",
    "inputFormat": "The first line contains one integer $ t $ ( $ 1 \\le t \\le 100 $ ) \u2014 the number of test cases.\n\nThen the test cases follow, each represented by three lines.\n\nThe first line contains two integers $ n $ and $ m $ ( $ 1 \\le m \\le n \\le 10^5 $ ) \u2014 the number of presents in the stack and the number of presents Santa wants to send, respectively.\n\nThe second line contains $ n $ integers $ a_1 $ , $ a_2 $ , ..., $ a_n $ ( $ 1 \\le a_i \\le n $ , all $ a_i $ are unique) \u2014 the order of presents in the stack.\n\nThe third line contains $ m $ integers $ b_1 $ , $ b_2 $ , ..., $ b_m $ ( $ 1 \\le b_i \\le n $ , all $ b_i $ are unique) \u2014 the ordered list of presents Santa has to send.\n\nThe sum of $ n $ over all test cases does not exceed $ 10^5 $ .",
    "outputFormat": "For each test case print one integer \u2014 the minimum number of seconds which Santa has to spend sending presents, if he reorders the presents optimally each time he returns them into the stack.",
    "samples": [
        [
            "2\n3 3\n3 1 2\n3 2 1\n7 2\n2 1 7 3 4 5 6\n3 1\n",
            "5\n8\n"
        ]
    ],
    "hint": "",
    "translation": "Santa\u6709\u4e00\u4e2a\u6808\u7684\u793c\u7269\uff0c\u7f16\u53f7\u4ece$1$\u5230$n$\uff0c\u9876\u90e8\u793c\u7269\u7684\u7f16\u53f7\u662f$a_1$\uff0c\u63a5\u4e0b\u6765\u662f$a_2$\u2026\u2026\u5e95\u90e8\u7f16\u53f7\u662f$a_n$\uff0c\u6240\u6709\u7f16\u53f7\u4e0d\u552f\u4e00\u3002  \nSanta\u6709\u4e00\u4e2a\u9001\u793c\u7269\u7684\u6e05\u5355\uff0c\u4ed6\u5fc5\u987b\u6309\u7167\u6e05\u5355\u4e0a\u9762\u7684\u987a\u5e8f\u9001\u793c\u7269\uff0c\u9001\u793c\u7269\u7684\u987a\u5e8f\u662f$b_1,b_2,\u2026,b_n$\u3002  \n\u6bcf\u6b21\u9001\u51fa\u793c\u7269\uff0cSanta\u90fd\u8981\u4ece\u6808\u4e2d\u627e\u5230\u793c\u7269\uff0c\u5982\u679c\u67d0\u4e2a\u88ab\u9009\u4e2d\u7684\u793c\u7269\u4e0a\u9762\u8fd8\u6709$k$\u4e2a\u793c\u7269\uff0c\u90a3\u4e48\u8981\u82b1\u8d39$2*k+1$\u7684\u65f6\u95f4\u5c06\u8fd9\u4e2a\u793c\u7269\u62ff\u51fa\uff0c\u5e76\u5c06\u5176\u4ed6\u793c\u7269\u653e\u56de\uff08\u53ef\u4ee5\u6539\u53d8\u8fd9$k$\u4e2a\u793c\u7269\u7684\u987a\u5e8f\uff09\u3002  \n\u8bf7\u56de\u7b54$t$\u7ec4\u6d4b\u8bd5\u6570\u636e\u5206\u522b\u9001\u51fa\u793c\u7269\u6240\u82b1\u8d39\u7684\u6700\u77ed\u65f6\u95f4\u3002"
}