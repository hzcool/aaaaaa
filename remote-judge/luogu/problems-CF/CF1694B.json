{
    "description": "Let's call a binary string $ T $ of length $ m $ indexed from $ 1 $ to $ m $ paranoid if we can obtain a string of length $ 1 $ by performing the following two kinds of operations $ m-1 $ times in any order :\n\n- Select any substring of $ T $ that is equal to 01, and then replace it with 1.\n- Select any substring of $ T $ that is equal to 10, and then replace it with 0.For example, if $ T =  $ 001, we can select the substring $ [T_2T_3] $ and perform the first operation. So we obtain $ T =  $ 01.\n\nYou are given a binary string $ S $ of length $ n $ indexed from $ 1 $ to $ n $ . Find the number of pairs of integers $ (l, r) $ $ 1 \\le l \\le r \\le n $ such that $ S[l \\ldots r] $ (the substring of $ S $ from $ l $ to $ r $ ) is a paranoid string.",
    "inputFormat": "The first line contains an integer $ t $ ( $ 1 \\le t \\le 1000 $ ) \u2014 the number of test cases. The description of test cases follows.\n\nThe first line of each test case contains a single integer $ n $ ( $ 1 \\le n \\le 2 \\cdot 10^5 $ ) \u2014 the size of $ S $ .\n\nThe second line of each test case contains a binary string $ S $ of $ n $ characters $ S_1S_2 \\ldots S_n $ . ( $ S_i =  $ 0 or $ S_i =  $ 1 for each $ 1 \\le i \\le n $ )\n\nIt is guaranteed that the sum of $ n $ over all test cases doesn't exceed $ 2 \\cdot 10^5 $ .",
    "outputFormat": "For each test case, output the number of pairs of integers $ (l, r) $ $ 1 \\le l \\le r \\le n $ such that $ S[l \\ldots r] $ (the substring of $ S $ from $ l $ to $ r $ ) is a paranoid string.",
    "samples": [
        [
            "5\n1\n1\n2\n01\n3\n100\n4\n1001\n5\n11111",
            "1\n3\n4\n8\n5"
        ]
    ],
    "hint": "In the first sample, $ S $ already has length $ 1 $ and doesn't need any operations.\n\nIn the second sample, all substrings of $ S $ are paranoid. For the entire string, it's enough to perform the first operation.\n\nIn the third sample, all substrings of $ S $ are paranoid except $ [S_2S_3] $ , because we can't perform any operations on it, and $ [S_1S_2S_3] $ (the entire string).",
    "translation": "\u5bf9\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6709\u4ee5\u4e0b\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n- \u5c06\u5b50\u4e32 01 \u66ff\u6362\u4e3a 1\n\n- \u5c06\u5b50\u4e32 10 \u66ff\u6362\u4e3a 0\n\n$t$ \u7ec4\u6570\u636e\uff0c\u6bcf\u7ec4\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684 01 \u4e32 $S$ \u3002\u6c42 $S$ \u7684\u5b50\u4e32\u4e2a\u6570\uff0c\u6ee1\u8db3\u7ecf\u8fc7\u82e5\u5e72\u6b21\u64cd\u4f5c\uff0c\u53ef\u5c06\u8be5\u5b50\u4e32\u957f\u5ea6\u53d8\u4e3a $1$ \u3002\n\n$1\\le t\\le 1000,1\\le n\\le 2\\times 10^5,\\sum n\\le 2\\times 10^5$"
}