{
    "description": "You are given an undirected connected graph with weighted edges. The length of some path between two vertices is the bitwise xor of weights of all edges belonging to this path (if some edge is traversed more than once, then it is included in bitwise xor the same number of times).\n\nThere are three types of queries you have to process:\n\n- $ 1 $ $ x $ $ y $ $ d $ \u2014 add an edge connecting vertex $ x $ to vertex $ y $ with weight $ d $ . It is guaranteed that there is no edge connecting $ x $ to $ y $ before this query;\n- $ 2 $ $ x $ $ y $ \u2014 remove an edge connecting vertex $ x $ to vertex $ y $ . It is guaranteed that there was such edge in the graph, and the graph stays connected after this query;\n- $ 3 $ $ x $ $ y $ \u2014 calculate the length of the shortest path (possibly non-simple) from vertex $ x $ to vertex $ y $ .\n\nPrint the answers for all queries of type $ 3 $ .",
    "inputFormat": "The first line contains two numbers $ n $ and $ m $ ( $ 1<=n,m<=200000 $ ) \u2014 the number of vertices and the number of edges in the graph, respectively.\n\nThen $ m $ lines follow denoting the edges of the graph. Each line contains three integers $ x $ , $ y $ and $ d $ ( $ 1<=x<y<=n $ , $ 0<=d<=2^{30}-1 $ ). Each pair $ (x,y) $ is listed at most once. The initial graph is connected.\n\nThen one line follows, containing an integer $ q $ ( $ 1<=q<=200000 $ ) \u2014 the number of queries you have to process.\n\nThen $ q $ lines follow, denoting queries in the following form:\n\n- $ 1 $ $ x $ $ y $ $ d $ ( $ 1<=x<y<=n $ , $ 0<=d<=2^{30}-1 $ ) \u2014 add an edge connecting vertex $ x $ to vertex $ y $ with weight $ d $ . It is guaranteed that there is no edge connecting $ x $ to $ y $ before this query;\n- $ 2 $ $ x $ $ y $ ( $ 1<=x<y<=n $ ) \u2014 remove an edge connecting vertex $ x $ to vertex $ y $ . It is guaranteed that there was such edge in the graph, and the graph stays connected after this query;\n- $ 3 $ $ x $ $ y $ ( $ 1<=x<y<=n $ ) \u2014 calculate the length of the shortest path (possibly non-simple) from vertex $ x $ to vertex $ y $ .\n\nIt is guaranteed that at least one query has type $ 3 $ .",
    "outputFormat": "Print the answers for all queries of type $ 3 $ in the order they appear in input.",
    "samples": [
        [
            "5 5\n1 2 3\n2 3 4\n3 4 5\n4 5 6\n1 5 1\n5\n3 1 5\n1 1 3 1\n3 1 5\n2 1 5\n3 1 5\n",
            "1\n1\n2\n"
        ]
    ],
    "hint": "",
    "translation": "\u7ed9\u51fa\u4e00\u4e2a\u8fde\u901a\u5e26\u6743\u65e0\u5411\u56fe,\u8fb9\u6709\u8fb9\u6743,\u8981\u6c42\u652f\u6301 $q$ \u4e2a\u64cd\u4f5c:\n\n$1$  $x$  $y$  $d$ \u5728\u539f\u56fe\u4e2d\u52a0\u5165\u4e00\u6761 $x$ \u5230 $y$ \u6743\u503c\u4e3a$b$ \u7684\u8fb9 \n\n$2$  $x$  $y$ \u628a\u56fe\u4e2d $x$ \u5230 $y$ \u7684\u8fb9\u5220\u6389\n\n$3$  $x$  $y$ \u8868\u793a\u8be2\u95ee $x$ \u5230 $y$ \u7684\u5f02\u6216\u6700\u77ed\u8def \n\n\u4fdd\u8bc1\u4efb\u610f\u64cd\u4f5c\u540e\u5f53\u524d\u72b6\u6001\u4e0b\u7684\u56fe\u8fde\u901a\u65e0\u91cd\u8fb9\u81ea\u73af\u4e14\u64cd\u4f5c\u5747\u5408\u6cd5 \n\n$1 \\leq n,m,q\\le200000$\u3002\n\n\u611f\u8c22 @Kelin \u63d0\u4f9b\u7684\u7ffb\u8bd1"
}