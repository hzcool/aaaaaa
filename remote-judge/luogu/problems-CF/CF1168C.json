{
    "description": "Toad Pimple has an array of integers $ a_1, a_2, \\ldots, a_n $ .\n\nWe say that $ y $ is reachable from $ x $ if $ x<y $ and there exists an integer array $ p $ such that $ x = p_1 < p_2 < \\ldots < p_k=y $ , and $ a_{p_i}\\, \\&\\, a_{p_{i+1}} > 0 $ for all integers $ i $ such that $ 1 \\leq i < k $ .\n\nHere $ \\& $ denotes the [bitwise AND operation](https://en.wikipedia.org/wiki/Bitwise_operation#AND).\n\nYou are given $ q $ pairs of indices, check reachability for each of them.",
    "inputFormat": "The first line contains two integers $ n $ and $ q $ ( $ 2 \\leq n \\leq 300\\,000 $ , $ 1 \\leq q \\leq 300\\,000 $ ) \u2014 the number of integers in the array and the number of queries you need to answer.\n\nThe second line contains $ n $ space-separated integers $ a_1, a_2, \\ldots, a_n $ ( $ 0 \\leq a_i \\leq 300\\,000 $ ) \u2014 the given array.\n\nThe next $ q $ lines contain two integers each. The $ i $ -th of them contains two space-separated integers $ x_i $ and $ y_i $ ( $ 1 \\leq x_i < y_i \\leq n $ ). You need to check if $ y_i $ is reachable from $ x_i $ .",
    "outputFormat": "Output $ q $ lines. In the $ i $ -th of them print \"Shi\" if $ y_i $ is reachable from $ x_i $ , otherwise, print \"Fou\".",
    "samples": [
        [
            "5 3\n1 3 0 2 1\n1 3\n2 4\n1 4\n",
            "Fou\nShi\nShi\n"
        ]
    ],
    "hint": "In the first example, $ a_3 = 0 $ . You can't reach it, because AND with it is always zero. $ a_2\\, \\&\\, a_4 > 0 $ , so $ 4 $ is reachable from $ 2 $ , and to go from $ 1 $ to $ 4 $ you can use $ p = [1, 2, 4] $ .",
    "translation": "## \u9898\u76ee\u63cf\u8ff0\n\nToad Pimple \u6709\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 $a_1,\\dots,a_n$\u3002  \n\u5f53 $x < y$ \u4e14 $a_{p_i} \\& a_{p_{i+1}} > 0$ \u65f6\uff0c\u6211\u4eec\u79f0 $y$ \u662f\u53ef\u4ece $x$ \u5230\u8fbe\u7684\u3002  \n\u5176\u4e2d $\\&$ \u8868\u793a\u6309\u4f4d\u4e0e\u8fd0\u7b97\u3002\n\n\u73b0\u5728\u7ed9\u51fa $q$ \u7ec4\u4e0b\u6807\uff0c\u8bf7\u68c0\u67e5\u5b83\u4eec\u53ef\u5426\u5230\u8fbe\u3002\n\n## \u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n\n**\u8f93\u5165\u683c\u5f0f\uff1a**\n\n\u7b2c\u4e00\u884c\uff0c\u4e24\u4e2a\u6574\u6570 $n,q\\;(2 \\le n \\le 300\\,000,1 \\le q \\le 300\\,000)$\uff0c\u8868\u793a\u6570\u7ec4\u7684\u957f\u5ea6\u548c\u67e5\u8be2\u7684\u4e2a\u6570\u3002  \n\u7b2c\u4e8c\u884c\uff0c$n$ \u4e2a\u6574\u6570 $a_1,\\dots,a_n\\;(0 \\le a_i \\le 300\\;000)$\uff0c\u8868\u793a\u7ed9\u5b9a\u7684\u6570\u7ec4\u3002  \n\u63a5\u4e0b\u6765 $q$ \u884c\u4e2d\uff0c\u7b2c $i$ \u884c\u4e24\u4e2a\u6574\u6570 $x_i,y_i\\;(1 \\le x_i < y_i \\le n)$\uff0c\u8868\u793a\u4f60\u9700\u8981\u68c0\u67e5 $y_i$ \u662f\u5426\u53ef\u4ece $x_i$ \u5230\u8fbe\u3002\n\n**\u8f93\u51fa\u683c\u5f0f\uff1a**\n\n\u8f93\u51fa $q$ \u884c\u3002  \n\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u5982\u679c\u53ef\u5230\u8fbe\uff0c\u8f93\u51fa\u300cShi\u300d\uff0c\u5426\u5219\u8f93\u51fa\u300cFou\u300d\u3002\n\n## \u8bf4\u660e\n\n\u7b2c\u4e00\u4e2a\u6837\u4f8b\u4e2d\uff0c$a_3 = 0$\uff0c\u4e0e\u5176\u6309\u4f4d\u4e0e\u7ed3\u679c\u603b\u662f $0$\uff0c\u6240\u4ee5\u4e0d\u53ef\u5230\u8fbe\u3002  \n$a_2 \\& a_4 > 0$\uff0c\u6240\u4ee5 $4$ \u53ef\u4ece $2$ \u5230\u8fbe\u3002  \n\u5e76\u4e14\u4ece $1$ \u5230\u8fbe $4$ \u4e2d\uff0c$p = [1,2,4]$\u3002"
}