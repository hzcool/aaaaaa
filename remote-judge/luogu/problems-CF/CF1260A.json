{
    "description": "Several days ago you bought a new house and now you are planning to start a renovation. Since winters in your region can be very cold you need to decide how to heat rooms in your house.\n\nYour house has $ n $ rooms. In the $ i $ -th room you can install at most $ c_i $ heating radiators. Each radiator can have several sections, but the cost of the radiator with $ k $ sections is equal to $ k^2 $ burles.\n\nSince rooms can have different sizes, you calculated that you need at least $ sum_i $ sections in total in the $ i $ -th room.\n\nFor each room calculate the minimum cost to install at most $ c_i $ radiators with total number of sections not less than $ sum_i $ .",
    "inputFormat": "The first line contains single integer $ n $ ( $ 1 \\le n \\le 1000 $ ) \u2014 the number of rooms.\n\nEach of the next $ n $ lines contains the description of some room. The $ i $ -th line contains two integers $ c_i $ and $ sum_i $ ( $ 1 \\le c_i, sum_i \\le 10^4 $ ) \u2014 the maximum number of radiators and the minimum total number of sections in the $ i $ -th room, respectively.",
    "outputFormat": "For each room print one integer \u2014 the minimum possible cost to install at most $ c_i $ radiators with total number of sections not less than $ sum_i $ .",
    "samples": [
        [
            "4\n1 10000\n10000 1\n2 6\n4 6\n",
            "100000000\n1\n18\n10\n"
        ]
    ],
    "hint": "In the first room, you can install only one radiator, so it's optimal to use the radiator with $ sum_1 $ sections. The cost of the radiator is equal to $ (10^4)^2 = 10^8 $ .\n\nIn the second room, you can install up to $ 10^4 $ radiators, but since you need only one section in total, it's optimal to buy one radiator with one section.\n\nIn the third room, there $ 7 $ variants to install radiators: $ [6, 0] $ , $ [5, 1] $ , $ [4, 2] $ , $ [3, 3] $ , $ [2, 4] $ , $ [1, 5] $ , $ [0, 6] $ . The optimal variant is $ [3, 3] $ and it costs $ 3^2+ 3^2 = 18 $ .",
    "translation": "## \u9898\u76ee\u63cf\u8ff0\n\n\u51ac\u5929\u6765\u4e86\uff0c\u4f60\u9700\u8981\u7ed9\u4f60\u7684\u623f\u5b50\u88c5\u4e0a\u6696\u6c14\n\n\u4f60\u7684\u623f\u5b50\u6709$n$\u4e2a\u623f\u95f4\uff0c\u6bcf\u4e00\u4e2a\u623f\u95f4$i$\u6700\u591a\u53ef\u4ee5\u88c5$c_i$\u4e2a\u6696\u6c14\uff0c\u6e29\u6696\u5ea6\u81f3\u5c11\u4e3a$sum_i$\uff0c\u4e00\u4e2a\u623f\u95f4\u7684\u6e29\u6696\u5ea6\u4e3a\u623f\u95f4\u91cc\u6240\u6709\u6696\u6c14\u6e29\u6696\u5ea6\u4e4b\u548c\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6e29\u6696\u5ea6\u4e3a$k$\u7684\u6696\u6c14\uff0c\u9700\u8981\u82b1\u8d39 $k^2$ \u5143\uff0c\u6c42\u5bf9\u4e8e\u6bcf\u4e2a\u623f\u95f4\uff0c\u6700\u5c11\u9700\u8981\u591a\u5c11\u94b1\u53ef\u4ee5\u8ba9\u5b50\u623f\u95f4\u6ee1\u8db3\u8981\u6c42\n\n## \u8f93\u5165\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570$n$\uff0c\u8868\u793a\u623f\u95f4\u7684\u603b\u6570  \n\u63a5\u4e0b\u6765$n$\u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6574\u6570  \n\u7b2c$i$\u884c\u7684\u4e24\u4e2a\u6574\u6570\u5206\u522b\u8868\u793a$c_i,sum_i$\n\n## \u8f93\u51fa\u683c\u5f0f\n\n$n$\u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u6574\u6570\u8868\u793a\u7b2c$i$\u4e2a\u623f\u95f4\u6240\u9700\u7684\u6700\u5c11\u82b1\u8d39\n\n### \u6570\u636e\u8303\u56f4\n$1\\le n \\le 1000$  \n$1 \\le c_i,sum_i \\le 10^4$"
}