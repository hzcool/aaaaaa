{
    "description": "Polycarp found the string $ s $ and the permutation $ p $ . Their lengths turned out to be the same and equal to $ n $ .\n\nA permutation of $ n $ elements \u2014 is an array of length $ n $ , in which every integer from $ 1 $ to $ n $ occurs exactly once. For example, $ [1, 2, 3] $ and $ [4, 3, 5, 1, 2] $ are permutations, but $ [1, 2, 4] $ , $ [4, 3, 2, 1, 2] $ and $ [0, 1, 2] $ are not.\n\nIn one operation he can multiply $ s $ by $ p $ , so he replaces $ s $ with string $ new $ , in which for any $ i $ from $ 1 $ to $ n $ it is true that $ new_i = s_{p_i} $ . For example, with $ s=wmbe $ and $ p = [3, 1, 4, 2] $ , after operation the string will turn to $ s=s_3 s_1 s_4 s_2=bwem $ .\n\nPolycarp wondered after how many operations the string would become equal to its initial value for the first time. Since it may take too long, he asks for your help in this matter.\n\nIt can be proved that the required number of operations always exists. It can be very large, so use a 64-bit integer type.",
    "inputFormat": "The first line of input contains one integer $ t $ ( $ 1 \\le t \\le 5000 $ ) \u2014 the number of test cases in input.\n\nThe first line of each case contains single integer $ n $ ( $ 1 \\le n \\le 200 $ ) \u2014 the length of string and permutation.\n\nThe second line of each case contains a string $ s $ of length $ n $ , containing lowercase Latin letters.\n\nThe third line of each case contains $ n $ integers \u2014 permutation $ p $ ( $ 1 \\le p_i \\le n $ ), all $ p_i $ are different.",
    "outputFormat": "Output $ t $ lines, each of which contains the answer to the corresponding test case of input. As an answer output single integer \u2014 the minimum number of operations, after which the string $ s $ will become the same as it was before operations.",
    "samples": [
        [
            "3\n5\nababa\n3 4 5 2 1\n5\nababa\n2 1 4 5 3\n10\ncodeforces\n8 6 1 7 5 2 9 3 10 4",
            "1\n6\n12"
        ]
    ],
    "hint": "In the first sample operation doesn't change the string, so it will become the same as it was after $ 1 $ operations.\n\nIn the second sample the string will change as follows:\n\n- $ s $ = babaa\n- $ s $ = abaab\n- $ s $ = baaba\n- $ s $ = abbaa\n- $ s $ = baaab\n- $ s $ = ababa",
    "translation": "## \u9898\u610f\u7b80\u8ff0\n\n\u7ed9\u5b9a\u4e00\u957f\u4e3a $n$ \u7684\u5b57\u7b26\u4e32 $s$\uff08\u4e0b\u6807\u4ece $1$ \u5f00\u59cb\uff09 \u4e0e $1\\sim n$ \u7684\u6392\u5217 $p$\u3002\u5b9a\u4e49 $s^0=s,s^k_i=s^{k-1}_{p_i}$\u3002\u6c42\u6700\u5c0f\u7684 $k>0$ \u4f7f $s^k=s$\u3002$t$ \u7ec4\u6570\u636e\u3002\n\n- $t\\le 5000,n\\le200$\u3002"
}