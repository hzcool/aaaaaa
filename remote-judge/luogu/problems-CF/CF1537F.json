{
    "description": "You have a connected undirected graph made of $ n $ nodes and $ m $ edges. The $ i $ -th node has a value $ v_i $ and a target value $ t_i $ .\n\nIn an operation, you can choose an edge $ (i, j) $ and add $ k $ to both $ v_i $ and $ v_j $ , where $ k $ can be any integer. In particular, $ k $ can be negative.\n\nYour task to determine if it is possible that by doing some finite number of operations (possibly zero), you can achieve for every node $ i $ , $ v_i = t_i $ .",
    "inputFormat": "The first line contains a single integer $ t $ ( $ 1 \\leq t \\leq 1000 $ ), the number of test cases. Then the test cases follow.\n\nThe first line of each test case contains two integers $ n $ , $ m $ ( $ 2 \\leq n \\leq 2\\cdot 10^5 $ , $ n-1\\leq m\\leq \\min(2\\cdot 10^5, \\frac{n(n-1)}{2}) $ ) \u2014 the number of nodes and edges respectively.\n\nThe second line contains $ n $ integers $ v_1\\ldots, v_n $ ( $ -10^9 \\leq v_i \\leq 10^9 $ ) \u2014 initial values of nodes.\n\nThe third line contains $ n $ integers $ t_1\\ldots, t_n $ ( $ -10^9 \\leq t_i \\leq 10^9 $ ) \u2014 target values of nodes.\n\nEach of the next $ m $ lines contains two integers $ i $ and $ j $ representing an edge between node $ i $ and node $ j $ ( $ 1 \\leq i, j \\leq n $ , $ i\\ne j $ ).\n\nIt is guaranteed that the graph is connected and there is at most one edge between the same pair of nodes.\n\nIt is guaranteed that the sum of $ n $ over all testcases does not exceed $ 2 \\cdot 10^5 $ and the sum of $ m $ over all testcases does not exceed $ 2 \\cdot 10^5 $ .",
    "outputFormat": "For each test case, if it is possible for every node to reach its target after some number of operations, print \"YES\". Otherwise, print \"NO\".",
    "samples": [
        [
            "2\n4 4\n5 1 2 -3\n3 3 10 1\n1 2\n1 4\n3 2\n3 4\n4 4\n5 8 6 6\n-3 1 15 4\n1 2\n1 4\n3 2\n3 4",
            "YES\nNO"
        ]
    ],
    "hint": "Here is a visualization of the first test case (the orange values denote the initial values and the blue ones the desired values):\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1537F/1a3ad14db7374ce21cd4060fc1b1fbe532afbff1.png)One possible order of operations to obtain the desired values for each node is the following:\n\n- Operation $ 1 $ : Add $ 2 $ to nodes $ 2 $ and $ 3 $ .\n- Operation $ 2 $ : Add $ -2 $ to nodes $ 1 $ and $ 4 $ .\n- Operation $ 3 $ : Add $ 6 $ to nodes $ 3 $ and $ 4 $ .\n\nNow we can see that in total we added $ -2 $ to node $ 1 $ , $ 2 $ to node $ 2 $ , $ 8 $ to node $ 3 $ and $ 4 $ to node $ 4 $ which brings each node exactly to it's desired value.\n\nFor the graph from the second test case it's impossible to get the target values.",
    "translation": "\u4f60\u6709\u4e00\u5f20 $n$ \u70b9 $m$ \u8fb9\u7684\u65e0\u5411\u8fde\u901a\u56fe\uff0c\u7b2c $i$ \u4e2a\u70b9\u4e0a\u6709\u70b9\u6743 $v_i$ \u548c\u76ee\u6807\u503c $t_i$\u3002\n\n\u5728\u4e00\u6b21\u64cd\u4f5c\u4e2d\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u4e00\u6761\u8fb9 $(i,j)$\uff0c\u5e76\u540c\u65f6\u7ed9 $v_i$ \u548c $v_j$ \u589e\u52a0\u4e00\u4e2a\u4efb\u610f\u6574\u6570\u503c\uff0c\u53ef\u4ee5\u4e3a\u8d1f\u3002\n\n\u4f60\u9700\u8981\u5224\u65ad\uff0c\u8fd9\u5f20\u56fe\u662f\u5426\u53ef\u4ee5\u5728\u6709\u9650\u6b65\u64cd\u4f5c\u4e2d\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u8282\u70b9\u6ee1\u8db3 $v_i = t_i$\u3002"
}