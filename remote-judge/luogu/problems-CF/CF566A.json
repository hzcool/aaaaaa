{
    "description": "Teachers of one programming summer school decided to make a surprise for the students by giving them names in the style of the \"Hobbit\" movie. Each student must get a pseudonym maximally similar to his own name. The pseudonym must be a name of some character of the popular saga and now the teachers are busy matching pseudonyms to student names.\n\nThere are $ n $ students in a summer school. Teachers chose exactly $ n $ pseudonyms for them. Each student must get exactly one pseudonym corresponding to him. Let us determine the relevance of a pseudonym $ b $ to a student with name $ a $ as the length of the largest common prefix $ a $ and $ b $ . We will represent such value as ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF566A/49184e0d721201acb7ec1d32721635b1fa5d0628.png). Then we can determine the quality of matching of the pseudonyms to students as a sum of relevances of all pseudonyms to the corresponding students.\n\nFind the matching between students and pseudonyms with the maximum quality.",
    "inputFormat": "The first line contains number $ n $ ( $ 1<=n<=100000 $ ) \u2014 the number of students in the summer school.\n\nNext $ n $ lines contain the name of the students. Each name is a non-empty word consisting of lowercase English letters. Some names can be repeating.\n\nThe last $ n $ lines contain the given pseudonyms. Each pseudonym is a non-empty word consisting of small English letters. Some pseudonyms can be repeating.\n\nThe total length of all the names and pseudonyms doesn't exceed $ 800000 $ characters.",
    "outputFormat": "In the first line print the maximum possible quality of matching pseudonyms to students.\n\nIn the next $ n $ lines describe the optimal matching. Each line must have the form $ a $ $ b $ ( $ 1<=a,b<=n $ ), that means that the student who was number $ a $ in the input, must match to the pseudonym number $ b $ in the input.\n\nThe matching should be a one-to-one correspondence, that is, each student and each pseudonym should occur exactly once in your output. If there are several optimal answers, output any.",
    "samples": [
        [
            "5\ngennady\ngalya\nboris\nbill\ntoshik\nbilbo\ntorin\ngendalf\nsmaug\ngaladriel\n",
            "11\n4 1\n2 5\n1 3\n5 2\n3 4\n"
        ]
    ],
    "hint": "The first test from the statement the match looks as follows:\n\n- bill $ \u2192 $ bilbo (lcp = 3)\n- galya $ \u2192 $ galadriel (lcp = 3)\n- gennady $ \u2192 $ gendalf (lcp = 3)\n- toshik $ \u2192 $ torin (lcp = 2)\n- boris $ \u2192 $ smaug (lcp = 0)",
    "translation": "\u4e00\u4e2a\u5b66\u6821\u91cc\u6709n\u4e2a\u5b66\u751f\uff0c\u540c\u65f6\u6709n\u4e2a\u7b14\u540d\u3002\u6bcf\u4e2a\u5b66\u751f\u9009\u4e00\u4e2a\u7b14\u540d\uff0c\u627e\u51fa\u4e00\u79cd\u914d\u5bf9\u65b9\u6cd5\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u771f\u540d\u4e0e\u7b14\u540d\u4e4b\u95f4\u7684\u6700\u5927\u516c\u5171\u524d\u7f00\u957f\u5ea6\u4e4b\u548c\u6700\u5927\uff08n<=1e5\uff09\u3002\r\n\r\n\u5982\uff1abill\u4e0ebilbo\u7684\u6700\u5927\u516c\u5171\u524d\u7f00\u957f\u4e3a3\uff08\u524d\u7f00bil\uff09\uff0cgalya\u4e0e galadriel\u7684\u6700\u5927\u516c\u5171\u524d\u7f00\u957f\u4e3a3\uff08\u524d\u7f00gal\uff09\u7b49\u3002"
}