{
    "description": "The Finals of the \"Russian Code Cup\" 2214 will be held in $ n $ hotels. Two hotels (let's assume that they are the main hotels), will host all sorts of events, and the remaining hotels will accommodate the participants. The hotels are connected by $ n-1 $ roads, you can get from any hotel to any other one.\n\nThe organizers wonder what is the minimum time all the participants need to get to the main hotels, if each participant goes to the main hotel that is nearest to him and moving between two hotels connected by a road takes one unit of time.\n\nThe hosts consider various options for the location of the main hotels. For each option help the organizers to find minimal time.",
    "inputFormat": "The first line contains an integer $ n $ ( $ 2<=n<=100000 $ ) \u2014 the number of hotels. The next $ n-1 $ lines contain two integers each \u2014 the numbers of the hotels that have a road between them. Consider hotels are numbered from $ 1 $ to $ n $ .\n\nThe next line contains an integer $ m $ ( $ 1<=m<=100000 $ ) \u2014 the number of queries. The following $ m $ lines contains two distinct integers each \u2014 the numbers of the hotels we assume to be the main.",
    "outputFormat": "For each request of the organizers print a single integer \u2014 the time that all participants need to reach the main hotels.",
    "samples": [
        [
            "3\n2 3\n3 1\n3\n2 1\n2 3\n3 1\n",
            "1\n1\n1\n"
        ],
        [
            "4\n1 4\n1 2\n2 3\n3\n1 4\n1 3\n2 3\n",
            "2\n1\n2\n"
        ]
    ],
    "hint": "",
    "translation": "# \u9898\u76ee\u63cf\u8ff0\n\u201c\u4fc4\u7f57\u65af\u7f16\u7a0b\u676f2214\u201d\u7684\u603b\u51b3\u8d5b\u5c06\u5728$n$\u4e2a\u9152\u5e97\uff0c$2$\u4e2a\u9152\u5e97\uff08\u6211\u4eec\u5047\u8bbe\u8fd9\u4e24\u4e2a\u9152\u5e97\u662f\u4e3b\u9152\u5e97\uff09\u5c06\u4e3b\u6301\u5404\u79cd\u6d3b\u52a8\uff0c\u800c\u5176\u4ed6$n-2$\u4e2a\u9152\u5e97\u5c06\u5bb9\u7eb3\u6240\u6709\u53c2\u8d5b\u8005\u3002\u8fd9\u4e9b\u9152\u5e97\u88ab$n-1$\u6761\u8def\u8fde\u63a5\u7740\uff0c\u4f60\u53ef\u4ee5\u4ece\u4efb\u610f\u4e00\u4e2a\u9152\u5e97\u53bb\u5f80\u4efb\u610f\u53e6\u5916\u4e00\u4e2a\u9152\u5e97\u3002\n\n\u7ec4\u7ec7\u8005\u4eec\u60f3\u77e5\u9053\uff0c\u6700\u5c11\u9700\u8981\u591a\u5c11\u65f6\u95f4\uff0c\u80fd\u591f\u8ba9\u6240\u6709\u53c2\u8d5b\u8005\u4ece\u4ed6\u4eec\u7684\u9152\u5e97\u53bb\u5f80\u4e3b\u9152\u5e97\uff08\u6bcf\u4e2a\u53c2\u4e0e\u8005\u90fd\u53bb\u79bb\u4ed6\u6700\u8fd1\u7684\u4e3b\u9152\u5e97\uff09\uff0c\u5047\u8bbe\u5728\u4e24\u5bb6\u7531\u9053\u8def\u8fde\u63a5\u7684\u65c5\u9986\u4e4b\u95f4\u8d70\u52a8\u9700\u8981$1$\u4e2a\u5355\u4f4d\u7684\u65f6\u95f4\u3002\n\n\u4e3b\u6301\u4eba\u77e5\u9053\u6bcf\u4e2a\u9152\u5e97\u7684\u4f4d\u7f6e\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u5e2e\u52a9\u4e3b\u6301\u4eba\u627e\u5230\u6700\u77ed\u8ddd\u79bb\u3002\n\n# \u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n## \u8f93\u5165\n\u8f93\u5165\u5171$n+m+1$\u884c\u3002\u7b2c\u4e00\u884c\u8f93\u5165\u9152\u5e97\u7684\u4e2a\u6570$n(2<=n<=10^5)$\u3002\u63a5\u4e0b\u6765$n-1$\u884c\uff0c\u6bcf\u4e00\u884c\u8f93\u5165\u4e24\u4e2a\u6574\u6570\u2014\u2014\u4e24\u4e2a\u9152\u5e97\u7684\u4f4d\u7f6e\uff08\u4fdd\u8bc1\u5728\u5b83\u4eec\u4e4b\u95f4\u6709\u4e00\u6761\u8def\uff09\uff0c\u9152\u5e97\u4ece$1$\u5230$n$\u6807\u4e86\u53f7\u3002\n\n\u63a5\u4e0b\u6765\u4e00\u884c\u8f93\u5165\u8be2\u95ee\u7684\u6b21\u6570$m(1<=n<=10^5)$\uff0c\u63a5\u4e0b\u6765\u7684$m$\u884c\uff0c\u6bcf\u4e00\u884c\u4ee3\u8868\u7740\u4e24\u4e2a\u4e3b\u9152\u5e97\u7684\u4f4d\u7f6e\u3002\n## \u8f93\u51fa\n\u8f93\u51fa\u5171$m$\u884c\uff0c\u6bcf\u4e00\u884c\u8f93\u51fa\u5bf9\u5e94\u7684\u7ed3\u679c\uff0c\u8868\u793a\u4ece\u5176\u4ed6\u65c5\u9986\u8fdb\u5230\u4e3b\u65c5\u9986\u7684\u65f6\u95f4\u3002\n\n@[chen_zhe](/space/show?uid=8457) @[yjjr](/space/show?uid=5088) @[\u9f9f\u9f9f\u53f7\u6253\u635e\u8239](/space/show?uid=36482)"
}