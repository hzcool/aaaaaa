{
    "description": "Gottfried learned about binary number representation. He then came up with this task and presented it to you.\n\nYou are given a collection of $ n $ non-negative integers $ a_1, \\ldots, a_n $ . You are allowed to perform the following operation: choose two distinct indices $ 1 \\leq i, j \\leq n $ . If before the operation $ a_i = x $ , $ a_j = y $ , then after the operation $ a_i = x~\\mathsf{AND}~y $ , $ a_j = x~\\mathsf{OR}~y $ , where $ \\mathsf{AND} $ and $ \\mathsf{OR} $ are bitwise AND and OR respectively (refer to the Notes section for formal description). The operation may be performed any number of times (possibly zero).\n\nAfter all operations are done, compute $ \\sum_{i=1}^n a_i^2 $ \u2014 the sum of squares of all $ a_i $ . What is the largest sum of squares you can achieve?",
    "inputFormat": "The first line contains a single integer $ n $ ( $ 1 \\leq n \\leq 2 \\cdot 10^5 $ ).\n\nThe second line contains $ n $ integers $ a_1, \\ldots, a_n $ ( $ 0 \\leq a_i < 2^{20} $ ).",
    "outputFormat": "Print a single integer \u2014 the largest possible sum of squares that can be achieved after several (possibly zero) operations.",
    "samples": [
        [
            "1\n123",
            "15129"
        ],
        [
            "3\n1 3 5",
            "51"
        ],
        [
            "2\n349525 699050",
            "1099509530625"
        ]
    ],
    "hint": "In the first sample no operation can be made, thus the answer is $ 123^2 $ .\n\nIn the second sample we can obtain the collection $ 1, 1, 7 $ , and $ 1^2 + 1^2 + 7^2 = 51 $ .\n\nIf $ x $ and $ y $ are represented in binary with equal number of bits (possibly with leading zeros), then each bit of $ x~\\mathsf{AND}~y $ is set to $ 1 $ if and only if both corresponding bits of $ x $ and $ y $ are set to $ 1 $ . Similarly, each bit of $ x~\\mathsf{OR}~y $ is set to $ 1 $ if and only if at least one of the corresponding bits of $ x $ and $ y $ are set to $ 1 $ . For example, $ x = 3 $ and $ y = 5 $ are represented as $ 011_2 $ and $ 101_2 $ (highest bit first). Then, $ x~\\mathsf{AND}~y = 001_2 = 1 $ , and $ x~\\mathsf{OR}~y = 111_2 = 7 $ .",
    "translation": "### \u9898\u9762\u63cf\u8ff0\n\n\u7ed9\u5b9a $n$ \u4e2a\u975e\u8d1f\u6574\u6570 $a_1,\\cdots,a_n$\u3002\n\n\u4f60\u53ef\u4ee5\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a\u9009\u62e9\u4e24\u4e2a\u4e0d\u540c\u7684\u4e0b\u6807 $i,j$ \u6ee1\u8db3 $1\\leq i,j\\leq n$\uff0c\u5e76\u5c06 $a_i\\gets a_i\\ \\mathsf{AND}\\ a_j,\\ a_j\\gets a_i\\ \\mathsf{OR}\\ a_j$\uff0c**\u4e24\u4e2a\u8d4b\u503c\u540c\u65f6\u8fdb\u884c**\u3002AND \u662f\u6309\u4f4d\u4e0e\uff0cOR \u662f\u6309\u4f4d\u6216\u3002\n\n\u4f60\u53ef\u4ee5\u8fdb\u884c\u4efb\u610f\u6b21\u64cd\u4f5c\u3002\u6c42\u64cd\u4f5c\u540e\u6240\u6709\u6570\u7684\u5e73\u65b9\u548c\u7684\u6700\u5927\u503c\uff0c\u5373 $\\max \\sum a_i^2$\u3002\n\n### \u8f93\u5165\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570 $n\\ (1\\leq n\\leq 2\\times 10^5)$\u3002\n\n\u7b2c\u4e8c\u884c $n$ \u4e2a\u6574\u6570 $a_1,\\cdots,a_n\\ (0\\leq a_i<2^{20})$\u3002\n\n### \u8f93\u51fa\u683c\u5f0f\n\n\u8f93\u51fa\u4e00\u884c\u4e00\u4e2a\u6574\u6570\u8868\u793a\u7b54\u6848\uff0c\u5373\u64cd\u4f5c\u540e\u6240\u6709\u6570\u7684\u5e73\u65b9\u548c\u7684\u6700\u5927\u503c\u3002\n\nTranslated by Alex_Wei."
}