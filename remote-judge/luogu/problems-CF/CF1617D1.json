{
    "description": "This is an interactive problem. The only difference between the easy and hard version is the limit on number of questions.\n\nThere are $ n $ players labelled from $ 1 $ to $ n $ . It is guaranteed that $ n $ is a multiple of $ 3 $ .\n\nAmong them, there are $ k $ impostors and $ n-k $ crewmates. The number of impostors, $ k $ , is not given to you. It is guaranteed that $ \\frac{n}{3} < k < \\frac{2n}{3} $ .\n\nIn each question, you can choose three distinct integers $ a $ , $ b $ , $ c $ ( $ 1 \\le a, b, c \\le n $ ) and ask: \"Among the players labelled $ a $ , $ b $ and $ c $ , are there more impostors or more crewmates?\" You will be given the integer $ 0 $ if there are more impostors than crewmates, and $ 1 $ otherwise.\n\nFind the number of impostors $ k $ and the indices of players that are impostors after asking at most $ 2n $ questions.\n\nThe jury is adaptive, which means the indices of impostors may not be fixed beforehand and can depend on your questions. It is guaranteed that there is at least one set of impostors which fulfills the constraints and the answers to your questions at any time.",
    "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $ t $ ( $ 1 \\le t \\le 100 $ ). Description of the test cases follows.\n\nThe first and only line of each test case contains a single integer $ n $ ( $ 6 \\le n < 10^4 $ , $ n $ is a multiple of $ 3 $ ) \u2014 the number of players.\n\nIt is guaranteed that the sum of $ n $ over all test cases does not exceed $ 2 \\cdot 10^4 $ .",
    "outputFormat": "For each test case, the interaction starts with reading $ n $ .\n\nThen you are allowed to make at most $ 2n $ questions in the following way:\n\n\"? a b c\" ( $ 1 \\le a, b, c \\le n $ , $ a $ , $ b $ and $ c $ are pairwise distinct).\n\nAfter each one, you should read an integer $ r $ , which is equal to $ 0 $ if there are more impostors than crewmates among players labelled $ a $ , $ b $ and $ c $ , and equal to $ 1 $ otherwise.\n\nAnswer $ -1 $ instead of $ 0 $ or $ 1 $ means that you made an invalid query or exceeded the number of queries. Exit immediately after receiving $ -1 $ and you will see Wrong answer verdict. Otherwise you can get an arbitrary verdict because your solution will continue to read from a closed stream.\n\nWhen you have found the indices of all impostors, print a single line \"! \" (without quotes), followed by the number of impostors $ k $ , followed by $ k $ integers representing the indices of the impostors. Please note that you must print all this information on the same line.\n\nAfter printing the answer, your program must then continue to solve the remaining test cases, or exit if all test cases have been solved.\n\nAfter printing the queries and answers do not forget to output end of line and flush the output buffer. Otherwise, you will get the Idleness limit exceeded verdict. To do flush use:\n\n- fflush(stdout) or cout.flush() in C++;\n- System.out.flush() in Java;\n- flush(output) in Pascal;\n- stdout.flush() in Python;\n- Read documentation for other languages.\n\nHacks\n\nYou cannot make hacks in this problem.",
    "samples": [
        [
            "2\n6\n\n0\n\n1\n\n9\n\n1",
            "? 1 2 3\n\n? 3 4 5\n\n! 3 4 1 2\n\n? 7 1 9\n\n! 4 2 3 6 8"
        ]
    ],
    "hint": "Explanation for example interaction (note that this example only exists to demonstrate the interaction procedure and does not provide any hint for the solution):\n\nFor the first test case:\n\nQuestion \"? 1 2 3\" returns $ 0 $ , so there are more impostors than crewmates among players $ 1 $ , $ 2 $ and $ 3 $ .\n\nQuestion \"? 3 4 5\" returns $ 1 $ , so there are more crewmates than impostors among players $ 3 $ , $ 4 $ and $ 5 $ .\n\nOutputting \"! 3 4 1 2\" means that one has found all the impostors, by some miracle. There are $ k = 3 $ impostors. The players who are impostors are players $ 4 $ , $ 1 $ and $ 2 $ .\n\nFor the second test case:\n\nQuestion \"? 7 1 9\" returns $ 1 $ , so there are more crewmates than impostors among players $ 7 $ , $ 1 $ and $ 9 $ .\n\nOutputting \"! 4 2 3 6 8\" means that one has found all the impostors, by some miracle. There are $ k = 4 $ impostors. The players who are impostors are players $ 2 $ , $ 3 $ , $ 6 $ and $ 8 $ .",
    "translation": "**\u8fd9\u662f\u4e00\u9053\u4ea4\u4e92\u9898\u3002**\n\n**\u672c\u9898\u4e0e [CF1617D2](https://www.luogu.com.cn/problem/CF1617D2) \u7684\u552f\u4e00\u533a\u522b\u5728\u4e8e\u6700\u591a\u53ef\u8be2\u95ee\u7684\u6b21\u6570\u3002**\n\n\u6709 $n$ \u4e2a\u73a9\u5bb6\u628a\u53f7\u4e3a $1$ \u5230 $n$\uff0c\u8fd9\u5f53\u4e2d\u6709 $k$ \u4e2a\u574f\u4eba\u548c $n-k$ \u4e2a\u597d\u4eba\uff0c\u4f60\u53ea\u77e5\u9053 $\\frac n3<k<\\frac{2n}3$\uff0c\u5e76\u4e0d\u77e5\u9053 $k$ \u7684\u503c\u3002\u4f60\u9700\u8981\u627e\u5230 $k$ \u7684\u503c\u548c\u6240\u6709 $k$ \u4e2a\u574f\u4eba\u7684\u73a9\u5bb6\u7f16\u53f7\uff0c\u800c\u552f\u4e00\u7684\u65b9\u6cd5\u5c31\u662f\u8fdb\u884c\u82e5\u5e72\u6b21\u8be2\u95ee\u3002\n\n\u5728\u6bcf\u6b21\u8be2\u95ee\u4e2d\uff0c\u4f60\u53ef\u4ee5\u6307\u5b9a\u4e09\u4e2a\u73a9\u5bb6\u7684\u7f16\u53f7 $a,b,c$\uff0c\u5e76\u5e0c\u671b\u77e5\u9053\u8fd9\u4e09\u4e2a\u73a9\u5bb6\u5f53\u4e2d\u662f\u597d\u4eba\u6bd4\u574f\u4eba\u591a\u8fd8\u662f\u574f\u4eba\u6bd4\u597d\u4eba\u591a\u3002\u4f60\u5c06\u5f97\u5230\u4e00\u4e2a\u6574\u6570 $r$ \u4f5c\u4e3a\u56de\u7b54\u3002\u5982\u679c $r=0$\uff0c\u90a3\u4e48\u574f\u4eba\u6bd4\u597d\u4eba\u591a\uff0c\u5426\u5219\u597d\u4eba\u6bd4\u574f\u4eba\u591a\u3002\n\n\u73b0\u5728\uff0c\u8bf7\u4f60\u901a\u8fc7\u6700\u591a $2n$ \u6b21\u8be2\u95ee\u6c42\u51fa $k$ \u7684\u503c\u548c\u6240\u6709 $k$ \u4e2a\u574f\u4eba\u7684\u73a9\u5bb6\u7f16\u53f7\u3002\n\n**\u4ea4\u4e92\u65b9\u5f0f\uff1a**\n\n\u5728\u4ea4\u4e92\u5f00\u59cb\u65f6\uff0c\u4f60\u9700\u8981\u8bfb\u5165\u4e00\u4e2a\u6b63\u6574\u6570 $t$\uff0c\u8868\u793a\u6570\u636e\u7ec4\u6570\u3002\n\n\u5bf9\u4e8e\u6bcf\u7ec4\u6570\u636e\uff0c\u9996\u5148\u8bfb\u5165\u4e00\u4e2a\u6b63\u6574\u6570 $n$\uff0c\u8868\u793a\u73a9\u5bb6\u4e2a\u6570\u3002\n\n\u968f\u540e\u4f60\u53ef\u4ee5\u5f00\u59cb\u8fdb\u884c\u6700\u591a $2n$ \u6b21\u8be2\u95ee\uff0c\u8f93\u51fa\u6bcf\u6b21\u8be2\u95ee\u7684\u683c\u5f0f\u4e3a `? a b c`\uff0c\u9700\u8981\u6ee1\u8db3 $1\\leqslant a,b,c\\leqslant n$ \u4e14 $a,b,c$ \u4e92\u4e0d\u76f8\u540c\u3002  \n\u6bcf\u6b21\u8be2\u95ee\u4e4b\u540e\uff0c\u4f60\u9700\u8981\u8bfb\u5165\u4e00\u4e2a\u6574\u6570 $r$\u3002\u5176\u4e2d\uff1a\n- $r=0$ \u8868\u793a\u574f\u4eba\u6bd4\u597d\u4eba\u591a\uff1b\n- $r=1$ \u8868\u793a\u597d\u4eba\u6bd4\u574f\u4eba\u591a\uff1b\n- $r=-1$ \u8868\u793a\u4f60\u521a\u521a\u8fdb\u884c\u4e86\u4e00\u6b21\u975e\u6cd5\u8be2\u95ee\u6216\u8005\u8be2\u95ee\u6b21\u6570\u5df2\u7ecf\u8d85\u8fc7\u9650\u5236\uff0c\u6b64\u65f6\u8bf7\u7acb\u5373\u9000\u51fa\u7a0b\u5e8f\uff0c\u5426\u5219\u4f60\u53ef\u80fd\u4f1a\u968f\u673a WA/TLE/RE\u3002\n\n\u5728\u82e5\u5e72\u6b21\u8be2\u95ee\u4e4b\u540e\uff0c\u5982\u679c\u4f60\u5df2\u7ecf\u77e5\u9053 $k$ \u7684\u503c\u548c\u6240\u6709 $k$ \u4e2a\u574f\u4eba\u7684\u73a9\u5bb6\u7f16\u53f7\uff0c\u8bf7\u5148\u8f93\u51fa `! `\uff08**\u540e\u9762\u6709\u7a7a\u683c**\uff09\uff0c\u968f\u540e\u8f93\u51fa $k$ \u548c\u6240\u6709 $k$ \u4e2a\u574f\u4eba\u7684\u73a9\u5bb6\u7f16\u53f7\uff0c\u4ee5\u7a7a\u683c\u4e3a\u95f4\u9694\u3002\u968f\u540e\u8bf7\u7acb\u5373\u8fdb\u5165\u4e0b\u4e00\u7ec4\u6570\u636e\uff0c\u5982\u679c\u6ca1\u6709\u4e0b\u4e00\u7ec4\u6570\u636e\u5219\u7ed3\u675f\u7a0b\u5e8f\u3002\n\n\u8bf7\u6ce8\u610f\u8f93\u51fa\u6bcf\u4e00\u884c\u4e4b\u540e\u9700\u8981\u5237\u65b0\u7f13\u51b2\u533a\uff0c\u5426\u5219\u4f60\u5c06\u65e0\u6cd5\u901a\u8fc7\u6b64\u9898\u3002\u90e8\u5206\u5e38\u7528\u8bed\u8a00\u5237\u65b0\u7f13\u51b2\u533a\u7684\u65b9\u5f0f\u5982\u4e0b\u8868\u6240\u793a\uff1a\n\n| \u8bed\u8a00 | \u65b9\u5f0f |\n| :----------: | :----------: |\n| C++ | `fflush(stdout)` \u6216 `cout.flush()` |\n| Java | `System.out.flush()` |\n| Pascal | `flush(output)` |\n| Python | `stdout.flush()` |\n\n\u5bf9\u4e8e\u5176\u4ed6\u8bed\u8a00\uff0c\u8bf7\u81ea\u884c\u67e5\u9605\u76f8\u5173\u6587\u732e\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a\n\n- $1\\leqslant t\\leqslant 100$\u3002\n- $6\\leqslant n\\leqslant 10^4$\uff0c$\\sum n\\leqslant 2\\times 10^4$\u3002\n- **\u4fdd\u8bc1 $n$ \u662f $3$ \u7684\u500d\u6570**\u3002\n\nTranslated by Eason_AC  \n2021.12.17"
}