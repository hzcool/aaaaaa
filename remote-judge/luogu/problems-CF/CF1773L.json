{
    "description": "Lisa loves playing with the sequences of integers. When she gets a new integer sequence $ a_i $ of length $ n $ , she starts looking for all monotone subsequences. A monotone subsequence $ [l, r] $ is defined by two indices $ l $ and $ r $ ( $ 1 \\le l < r \\le n $ ) such that $ \\forall i = l, l+1, \\ldots, r-1: a_i \\le a_{i+1} $ or $ \\forall i = l, l+1, \\ldots, r-1: a_i \\ge a_{i+1} $ .\n\nLisa considers a sequence $ a_i $ to be boring if there is a monotone subsequence $ [l, r] $ that is as long as her boredom threshold $ k $ , that is when $ r - l + 1 = k $ .\n\nLucas has a sequence $ b_i $ that he wants to present to Lisa, but the sequence might be boring for Lisa. So, he wants to change some elements of his sequence $ b_i $ , so that Lisa does not get bored playing with it. However, Lucas is lazy and wants to change as few elements of the sequence $ b_i $ as possible. Your task is to help Lucas find the required changes.",
    "inputFormat": "The first line of the input contains two integers $ n $ and $ k $ ( $ 3 \\le k \\le n \\le 10^6 $ ) \u2014 the length of the sequence and Lisa's boredom threshold. The second line contains $ n $ integers $ b_i $ ( $ 1 \\le b_i \\le 99\\,999 $ ) \u2014 the original sequence that Lucas has.",
    "outputFormat": "On the first line output an integer $ m $ \u2014 the minimal number of elements in $ b_i $ that needs to be changed to make the sequence not boring for Lisa. On the second line output $ n $ integers $ a_i $ ( $ 0 \\le a_i \\le 100\\,000 $ ), so that the sequence of integers $ a_i $ is not boring for Lisa and is different from the original sequence $ b_i $ in exactly $ m $ positions.",
    "samples": [
        [
            "5 3\n1 2 3 4 5",
            "2\n1 0 3 0 5"
        ],
        [
            "6 3\n1 1 1 1 1 1",
            "3\n1 100000 0 1 0 1"
        ],
        [
            "6 4\n1 1 4 4 1 1",
            "1\n1 1 4 0 1 1"
        ],
        [
            "6 4\n4 4 4 2 2 2",
            "2\n4 4 0 2 0 2"
        ],
        [
            "6 4\n4 4 4 3 4 4",
            "1\n4 4 100000 3 4 4"
        ],
        [
            "8 4\n2 1 1 3 3 1 1 2",
            "2\n2 1 1 3 0 1 0 2"
        ],
        [
            "10 4\n1 1 1 2 2 1 1 2 2 1",
            "2\n1 1 100000 2 2 100000 1 2 2 1"
        ],
        [
            "7 5\n5 4 4 3 4 4 4",
            "0\n5 4 4 3 4 4 4"
        ],
        [
            "10 10\n1 1 1 1 1 1 1 1 1 1",
            "1\n1 1 1 1 1 1 1 1 0 1"
        ]
    ],
    "hint": "",
    "translation": "\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u6570\u5217 $b_i$\uff0c\u6c42\u81f3\u5c11\u6539\u53d8\u591a\u5c11\u4e2a\u6570\u4f7f\u5f97\u6700\u957f\u7684\u4e0d\u964d\u6216\u4e0d\u5347\u5b50\u5e8f\u5217 $b_l,b_{l+1},...b_{r}$ \u957f\u5ea6\u5c0f\u4e8e $k$\u3002"
}