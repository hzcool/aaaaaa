{
    "description": "John Doe has a list of all Fibonacci numbers modulo $ 10^{13} $ . This list is infinite, it starts with numbers $ 0 $ and $ 1 $ . Each number in the list, apart from the first two, is a sum of previous two modulo $ 10^{13} $ . That is, John's list is made from the Fibonacci numbers' list by replacing each number there by the remainder when divided by $ 10^{13} $ .\n\nJohn got interested in number $ f $ ( $ 0<=f&lt;10^{13} $ ) and now wants to find its first occurrence in the list given above. Help John and find the number of the first occurence of number $ f $ in the list or otherwise state that number $ f $ does not occur in the list.\n\nThe numeration in John's list starts from zero. There, the $ 0 $ -th position is the number $ 0 $ , the $ 1 $ -st position is the number $ 1 $ , the $ 2 $ -nd position is the number $ 1 $ , the $ 3 $ -rd position is the number $ 2 $ , the $ 4 $ -th position is the number $ 3 $ and so on. Thus, the beginning of the list looks like this: $ 0,1,1,2,3,5,8,13,21,... $",
    "inputFormat": "The first line contains the single integer $ f $ ( $ 0<=f&lt;10^{13} $ ) \u2014 the number, which position in the list we should find.\n\nPlease, do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams or the %I64d specifier.",
    "outputFormat": "Print a single number \u2014 the number of the first occurrence of the given number in John's list. If this number doesn't occur in John's list, print -1.",
    "samples": [
        [
            "13\n",
            "7\n"
        ],
        [
            "377\n",
            "14\n"
        ]
    ],
    "hint": "",
    "translation": "# \u9898\u76ee\u63cf\u8ff0\n\u6590\u6ce2\u90a3\u5951\u6570\u5217\u5bf910^13\u53d6\u6a21\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a\n\n\u3000\u30001\u3001F0 = 0, F1 = 1\n  \n\u3000\u30002\u3001Fi = (Fi-1 + Fi-2) mod (10^13) \uff08i >= 2\uff09\n\u3000  \n  \u8f93\u5165\u4e00\u4e2a\u6570x\uff0c\u95eex\u662f\u5426\u5728\u6590\u6ce2\u90a3\u5951\u6570\u5217\u5f53\u4e2d\u51fa\u73b0\u8fc7\uff0c\u5982\u679c\u51fa\u73b0\u8fc7\uff0c\u6700\u65e9\u51fa\u73b0\u5728\u54ea\u4e2a\u4f4d\u7f6e\u3002\n # \u8f93\u5165\u683c\u5f0f\n \u4e00\u884c\uff0c\u4e00\u4e2a\u6574\u6570x\u3002\n # \u8f93\u51fa\u683c\u5f0f\n \u4e00\u884c\uff0c\u8868\u793ax\u5728\u6570\u5217\u4e2d\u6700\u65e9\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u6ca1\u6709\u51fa\u73b0\u8fc7\uff0c\u5219\u8f93\u51fa-1\u3002"
}