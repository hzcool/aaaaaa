{
    "description": "The only difference between this problem and the other two versions is the maximum number of queries. In this version, you are allowed to ask at most $ \\mathbf{25} $ queries. You can make hacks only if all versions of the problem are solved.\n\nThis is an interactive problem.\n\n\"Everybody! Doremy's Perfect Data Structure Class is about to start! Come and do your best if you want to have as much IQ as me!\" In today's Data Structure class, Doremy is teaching everyone a powerful data structure \u2014 Doremy tree! Now she gives you a quiz to prove that you are paying attention in class.\n\nGiven an array $ a $ of length $ m $ , Doremy tree supports the query $ Q(l,r,k) $ , where $ 1 \\leq l \\leq r \\leq m $ and $ 1 \\leq k \\leq m $ , which returns the number of distinct integers in the array $ \\left[\\lfloor\\frac{a_l}{k} \\rfloor, \\lfloor\\frac{a_{l+1}}{k} \\rfloor, \\ldots, \\lfloor\\frac{a_r}{k} \\rfloor\\right] $ .\n\nDoremy has a secret permutation $ p $ of integers from $ 1 $ to $ n $ . You can make queries, in one query, you give $ 3 $ integers $ l,r,k $ ( $ 1 \\leq l \\leq r \\leq n $ , $ 1 \\leq k \\leq n $ ) and receive the value of $ Q(l,r,k) $ for the array $ p $ . Can you find the index $ y $ ( $ 1 \\leq y \\leq n $ ) such that $ p_y=1 $ in at most $ \\mathbf{25} $ queries?\n\nNote that the permutation $ p $ is fixed before any queries are made.",
    "inputFormat": "",
    "outputFormat": "You begin the interaction by reading an integer $ n $ ( $ 3 \\le n \\le 1024 $ ) in the first line \u2014 the length of the permutation.\n\nTo make a query, you should output\n\n- \"? $ l\\ r\\ k $ \" ( $ 1 \\leq l \\leq r \\leq n $ , $ 1 \\leq k \\leq n $ )\n\n in a separate line. After each query, you should read an integer $ x $ \u2014 the value of $ Q(l,r,k) $ for $ p $ . In this version of the problem, you can make at most $ 25 $ such queries.To give the answer, you should output\n\n- \"! $ y $ \" ( $ 1 \\leq y \\leq n $ )\n\n in a separate line, where $ p_y=1 $ .After printing a query or the answer, do not forget to output the end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use:\n\n- fflush(stdout) or cout.flush() in C++;\n- System.out.flush() in Java;\n- flush(output) in Pascal;\n- stdout.flush() in Python;\n- see documentation for other languages.\n\nHacks Format\n\nThe first line of the hack contains an integer $ n $ ( $ 3 \\le n \\le 1024 $ ) \u2014 the length of the permutation.\n\nThe second line of the hack contains $ n $ distinct integers $ p_1,p_2,\\ldots,p_n $ ( $ 1 \\le p_i\\le n $ ) \u2014 the permutation.",
    "samples": [
        [
            "5\n\n2\n\n2\n\n1\n\n3",
            "? 1 3 4\n\n? 3 5 3\n\n? 3 4 5\n\n? 3 5 2\n\n! 4"
        ]
    ],
    "hint": "The permutation in the example is $ [3,5,2,1,4] $ .\n\nThe input and output for example illustrate possible interaction on that test (empty lines are inserted only for clarity).\n\nIn this interaction process:\n\n- For the first query, $ \\lfloor\\frac{3}{4}\\rfloor=0,\\lfloor\\frac{5}{4}\\rfloor=1,\\lfloor\\frac{2}{4}\\rfloor=0 $ , so the answer is $ 2 $ .\n- For the second query, $ \\lfloor\\frac{2}{3}\\rfloor=0,\\lfloor\\frac{1}{3}\\rfloor=0,\\lfloor\\frac{4}{3}\\rfloor=1 $ , so the answer is still $ 2 $ .\n- For the third query, $ \\lfloor\\frac{2}{5}\\rfloor=0,\\lfloor\\frac{1}{5}\\rfloor=0 $ , so the answer is $ 1 $ .\n- For the fourth query, $ \\lfloor\\frac{2}{2}\\rfloor=1,\\lfloor\\frac{1}{2}\\rfloor=0,\\lfloor\\frac{4}{2}\\rfloor=2 $ , so the answer is $ 3 $ .\n\nThe correct answer is got after $ 4 $ queries, so this process will be judged correct.",
    "translation": "- **\u8fd9\u662f\u4e00\u9053\u4ea4\u4e92\u9898\u3002**\n- \u4ea4\u4e92\u5e93\u6709\u4e00\u4e2a $[1,n]$ \u7684\u6392\u5217 $p$\u3002\n- \u4f60\u53ef\u4ee5\u8be2\u95ee $l,r,k$\uff0c\u4ea4\u4e92\u5e93\u4f1a\u8fd4\u56de $\\left\\lfloor\\dfrac{p_l}k\\right\\rfloor,\\left\\lfloor\\dfrac{p_{l+1}}k\\right\\rfloor,\\cdots,\\left\\lfloor\\dfrac{p_r}k\\right\\rfloor$ \u4e2d\u4e0d\u540c\u6570\u7684\u4e2a\u6570\u3002\n- \u4f60\u9700\u8981\u5728 $25$ \u6b21\u8be2\u95ee\u5185\u627e\u5230 $p$ \u4e2d $1$ \u7684\u4f4d\u7f6e\u3002\n- $n\\in[3,1024]$\u3002"
}