{
    "description": "Doubly linked list is one of the fundamental data structures. A doubly linked list is a sequence of elements, each containing information about the previous and the next elements of the list. In this problem all lists have linear structure. I.e. each element except the first has exactly one previous element, each element except the last has exactly one next element. The list is not closed in a cycle.\n\nIn this problem you are given $ n $ memory cells forming one or more doubly linked lists. Each cell contains information about element from some list. Memory cells are numbered from $ 1 $ to $ n $ .\n\nFor each cell $ i $ you are given two values:\n\n- $ l_{i} $ \u2014 cell containing previous element for the element in the cell $ i $ ;\n- $ r_{i} $ \u2014 cell containing next element for the element in the cell $ i $ .\n\nIf cell $ i $ contains information about the element which has no previous element then $ l_{i}=0 $ . Similarly, if cell $ i $ contains information about the element which has no next element then $ r_{i}=0 $ .\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF847A/91459fe713a7cb4d7c970fe35f97e0c90bbcdc07.png)Three lists are shown on the picture.For example, for the picture above the values of $ l $ and $ r $ are the following: $ l_{1}=4 $ , $ r_{1}=7 $ ; $ l_{2}=5 $ , $ r_{2}=0 $ ; $ l_{3}=0 $ , $ r_{3}=0 $ ; $ l_{4}=6 $ , $ r_{4}=1 $ ; $ l_{5}=0 $ , $ r_{5}=2 $ ; $ l_{6}=0 $ , $ r_{6}=4 $ ; $ l_{7}=1 $ , $ r_{7}=0 $ .\n\nYour task is to unite all given lists in a single list, joining them to each other in any order. In particular, if the input data already contains a single list, then there is no need to perform any actions. Print the resulting list in the form of values $ l_{i} $ , $ r_{i} $ .\n\nAny other action, other than joining the beginning of one list to the end of another, can not be performed.",
    "inputFormat": "The first line contains a single integer $ n $ ( $ 1<=n<=100 $ ) \u2014 the number of memory cells where the doubly linked lists are located.\n\nEach of the following $ n $ lines contains two integers $ l_{i} $ , $ r_{i} $ ( $ 0<=l_{i},r_{i}<=n $ ) \u2014 the cells of the previous and the next element of list for cell $ i $ . Value $ l_{i}=0 $ if element in cell $ i $ has no previous element in its list. Value $ r_{i}=0 $ if element in cell $ i $ has no next element in its list.\n\nIt is guaranteed that the input contains the correct description of a single or more doubly linked lists. All lists have linear structure: each element of list except the first has exactly one previous element; each element of list except the last has exactly one next element. Each memory cell contains information about one element from some list, each element of each list written in one of $ n $ given cells.",
    "outputFormat": "Print $ n $ lines, the $ i $ -th line must contain two integers $ l_{i} $ and $ r_{i} $ \u2014 the cells of the previous and the next element of list for cell $ i $ after all lists from the input are united in a single list. If there are many solutions print any of them.",
    "samples": [
        [
            "7\n4 7\n5 0\n0 0\n6 1\n0 2\n0 4\n1 0\n",
            "4 7\n5 6\n0 5\n6 1\n3 2\n2 4\n1 0\n"
        ]
    ],
    "hint": "",
    "translation": "\u53cc\u5411\u94fe\u8868\u662f\u4e00\u79cd\u57fa\u672c\u7684\u6570\u636e\u7ed3\u6784\u3002\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\u662f\u4e00\u4e32\u5143\u7d20\u5e8f\u5217\u3002\u94fe\u8868\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u94fe\u63a5\u7740\u5b83\u524d\u9762\u548c\u540e\u9762\u7684\u5143\u7d20\u3002\u5728\u8fd9\u4e2a\u95ee\u9898\u4e2d\uff0c\u8fd9\u4e2a\u94fe\u8868\u662f\u4e00\u4e2a\u7ebf\u6027\u5e8f\u5217\u3002\u9664\u4e86\u7b2c\u4e00\u4e2a\u5143\u7d20\u5916\uff0c\u6bcf\u4e2a\u5143\u7d20\u90fd\u6709\u4e00\u4e2a\u76f4\u63a5\u524d\u5bfc\uff1b\u9664\u4e86\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5916\uff0c\u6bcf\u4e2a\u5143\u7d20\u90fd\u6709\u4e00\u4e2a\u76f4\u63a5\u540e\u7ee7\u3002\u8fd9\u4e2a\u94fe\u8868\u4e0d\u5f62\u6210\u4e00\u4e2a\u73af\u3002\r\n\r\n\u5728\u8fd9\u4e2a\u95ee\u9898\u4e2d\uff0c\u4f60\u88ab\u7ed9\u4e88\u4e86$n$\u4e2a\u5355\u5143\u3002\u8fd9\u4e9b\u5355\u5143\u80fd\u591f\u5f62\u6210\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u53cc\u5411\u94fe\u8868\u3002\u6bcf\u4e2a\u5355\u5143\u5305\u542b\u7740\u4e00\u4e9b\u94fe\u8868\u5143\u7d20\u7684\u4fe1\u606f\u3002\u8fd9\u4e9b\u5355\u5143\u7684\u7f16\u53f7\u662f\u4ece$1$\u81f3$n$\u7684\u3002\r\n\r\n\u5bf9\u4e8e\u6bcf\u4e2a\u5355\u5143\uff0c\u6709\u4e24\u4e2a\u5c5e\u6027\uff1a\r\n\r\n$l_i$\u8868\u793a\u7b2c$i$\u4e2a\u5355\u5143\u7684\u524d\u5bfc\uff1b\r\n\r\n$r_i$\u8868\u793a\u7b2c$i$\u4e2a\u5355\u5143\u7684\u540e\u7ee7\u3002\r\n\r\n\u5982\u679c$l_i=0$\uff0c\u8868\u793a\u8fd9\u4e2a\u5355\u5143\u6ca1\u6709\u76f4\u63a5\u524d\u5bfc\u3002\u5982\u679c$r_i=0$\uff0c\u8868\u793a\u8fd9\u4e2a\u5355\u5143\u6ca1\u6709\u76f4\u63a5\u540e\u7ee7\u3002\r\n\r\n\u5bf9\u4e8e\u9898\u76ee\u63cf\u8ff0\u6240\u7ed9\u51fa\u7684\u56fe\u6765\u8bf4\uff1a\r\n\r\n| $i$  | $l_{i}$ | $r_{i}$ |\r\n| ---- | ------- | ------- |\r\n| 1    | 4       | 7       |\r\n| 2    | 5       | 0       |\r\n| 3    | 0       | 0       |\r\n| 4    | 6       | 1       |\r\n| 5    | 0       | 2       |\r\n| 6    | 0       | 4       |\r\n| 7    | 1       | 0       |\r\n\r\n\u4f60\u7684\u4efb\u52a1\u662f\uff0c\u7ed9\u5b9a\u82e5\u5e72\u4e2a\u7531\u5982\u4e0a\u65b9\u5f0f\u8868\u793a\u7684\u53cc\u5411\u94fe\u8868\uff0c\u94fe\u63a5\u8fd9\u4e9b\u53cc\u5411\u94fe\u8868\u4f7f\u5f97\u5176\u4ec5\u6784\u6210\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\u3002\u6ce8\u610f\uff1a\u4f60\u53ea\u80fd\u901a\u8fc7\u94fe\u63a5\u4e24\u4e2a\u53cc\u5411\u94fe\u8868\u7684\u9996\u5c3e\u5355\u5143\u6765\u94fe\u63a5\u8fd9\u4e24\u4e2a\u53cc\u5411\u94fe\u8868\u3002\r\n\r\n\u8f93\u5165\u683c\u5f0f\uff1a\u7b2c\u4e00\u884c\u4e00\u4e2a\u6570$n(1\\leq n\\leq100)$\uff0c\u8868\u793a\u5355\u5143\u7684\u4e2a\u6570\u3002\u540e$n$\u884c\u6bcf\u884c$2$\u4e2a\u6570$l_i$\u548c$r_i$\uff0c\u8fd9\u65e2\u662f\u63cf\u8ff0\u4e86\u4e00\u4e2a\u5355\u5143\u7684\u5c5e\u6027\uff0c\u4e5f\u63cf\u8ff0\u4e86\u53cc\u5411\u94fe\u8868\u7684\u7ed3\u6784\u3002\r\n\r\n\u8f93\u51fa\u683c\u5f0f\uff1a$n$\u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6570$l_i$\u548c$r_i$\uff0c\u8868\u793a\u5728\u5c06\u6240\u6709\u5143\u7d20\u94fe\u63a5\u6210\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\u540e\uff0c\u7b2c$i$\u4e2a\u5355\u5143\u65b0\u7684\u5c5e\u6027\u503c\u3002"
}