{
    "description": "You have a knapsack with the capacity of $ W $ . There are also $ n $ items, the $ i $ -th one has weight $ w_i $ .\n\nYou want to put some of these items into the knapsack in such a way that their total weight $ C $ is at least half of its size, but (obviously) does not exceed it. Formally, $ C $ should satisfy: $ \\lceil \\frac{W}{2}\\rceil \\le C \\le W $ .\n\nOutput the list of items you will put into the knapsack or determine that fulfilling the conditions is impossible.\n\nIf there are several possible lists of items satisfying the conditions, you can output any. Note that you don't have to maximize the sum of weights of items in the knapsack.",
    "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $ t $ ( $ 1 \\le t \\le 10^4 $ ). Description of the test cases follows.\n\nThe first line of each test case contains integers $ n $ and $ W $ ( $ 1 \\le n \\le 200\\,000 $ , $ 1\\le W \\le 10^{18} $ ).\n\nThe second line of each test case contains $ n $ integers $ w_1, w_2, \\dots, w_n $ ( $ 1 \\le w_i \\le 10^9 $ ) \u2014 weights of the items.\n\nThe sum of $ n $ over all test cases does not exceed $ 200\\,000 $ .",
    "outputFormat": "For each test case, if there is no solution, print a single integer $ -1 $ .\n\nIf there exists a solution consisting of $ m $ items, print $ m $ in the first line of the output and $ m $ integers $ j_1 $ , $ j_2 $ , ..., $ j_m $ ( $ 1 \\le j_i \\le n $ , all $ j_i $ are distinct) in the second line of the output \u2014 indices of the items you would like to pack into the knapsack.\n\nIf there are several possible lists of items satisfying the conditions, you can output any. Note that you don't have to maximize the sum of weights items in the knapsack.",
    "samples": [
        [
            "3\n1 3\n3\n6 2\n19 8 19 69 9 4\n7 12\n1 1 1 17 1 1 1",
            "1\n1\n-1\n6\n1 2 3 5 6 7"
        ]
    ],
    "hint": "In the first test case, you can take the item of weight $ 3 $ and fill the knapsack just right.\n\nIn the second test case, all the items are larger than the knapsack's capacity. Therefore, the answer is $ -1 $ .\n\nIn the third test case, you fill the knapsack exactly in half.",
    "translation": "\u60a8\u6709 $n$ $(1\u2264n\u2264200$ $000)$ \u4e2a\u7269\u54c1\uff0c\u7b2c $i$ \u4e2a\u7269\u54c1\u7684\u91cd\u91cf\u4e3a $w_i$ $(1\u2264w_i\u226410^9)$\u3002\u540c\u65f6\u60a8\u8fd8\u6709\u4e00\u4e2a\u5bb9\u91cf\u4e3a $W$ $(1\u2264W\u226410^{18})$\u7684\u80cc\u5305\u3002\n\n\u6211\u4eec\u5e0c\u671b\u5c06\u4e00\u4e9b\u7269\u54c1\u52a0\u5165\u80cc\u5305\u4e2d\uff0c\u4f7f\u5176\u603b\u91cd\u91cf\u8d85\u8fc7 $W$ \u7684\u4e00\u534a\uff0c\u4f46\u4e0d\u8d85\u8fc7 $W$ \u3002\n\n\u5982\u679c\u6709\uff0c\u8bf7\u8f93\u51fa\u7269\u54c1\u7684\u4e2a\u6570\u4ee5\u53ca\u7269\u54c1\u7684\u7f16\u53f7\uff1b\u5982\u679c\u6ca1\u6709\uff0c\u8f93\u51fa \"-1\" \uff08\u4e0d\u5fc5\u8f93\u51fa\u53cc\u5f15\u53f7\uff09\u3002\n\n**\u6ce8\u610f\uff1a\u5982\u679c\u5b58\u5728\u591a\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u7269\u54c1\u5217\u8868\uff0c\u8f93\u51fa\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a**"
}