{
    "description": "Wilbur the pig now wants to play with strings. He has found an $ n $ by $ m $ table consisting only of the digits from $ 0 $ to $ 9 $ where the rows are numbered $ 1 $ to $ n $ and the columns are numbered $ 1 $ to $ m $ . Wilbur starts at some square and makes certain moves. If he is at square ( $ x $ , $ y $ ) and the digit $ d $ ( $ 0<=d<=9 $ ) is written at position ( $ x $ , $ y $ ), then he must move to the square ( $ x+a_{d} $ , $ y+b_{d} $ ), if that square lies within the table, and he stays in the square ( $ x $ , $ y $ ) otherwise. Before Wilbur makes a move, he can choose whether or not to write the digit written in this square on the white board. All digits written on the whiteboard form some string. Every time a new digit is written, it goes to the end of the current string.\n\nWilbur has $ q $ strings that he is worried about. For each string $ s_{i} $ , Wilbur wants to know whether there exists a starting position ( $ x $ , $ y $ ) so that by making finitely many moves, Wilbur can end up with the string $ s_{i} $ written on the white board.",
    "inputFormat": "The first line of the input consists of three integers $ n $ , $ m $ , and $ q $ ( $ 1<=n,m,q<=200 $ ) \u2014 the dimensions of the table and the number of strings to process, respectively.\n\nEach of the next $ n $ lines contains $ m $ digits from $ 0 $ and $ 9 $ giving the table itself.\n\nThen follow $ 10 $ lines. The $ i $ -th of them contains the values $ a_{i-1} $ and $ b_{i-1} $ ( $ -200<=a_{i},b_{i}<=200 $ ), i.e. the vector that Wilbur uses to make a move from the square with a digit $ i-1 $ in it.\n\nThere are $ q $ lines that follow. The $ i $ -th of them will contain a string $ s_{i} $ consisting only of digits from $ 0 $ to $ 9 $ . It is guaranteed that the total length of these $ q $ strings won't exceed $ 1000000 $ .",
    "outputFormat": "For each of the $ q $ strings, print \"YES\" if Wilbur can choose $ x $ and $ y $ in order to finish with this string after some finite number of moves. If it's impossible, than print \"NO\" for the corresponding string.",
    "samples": [
        [
            "1 1 2\n0\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n0000000000000\n2413423432432\n",
            "YES\nNO\n"
        ],
        [
            "4 2 5\n01\n23\n45\n67\n0 1\n0 -1\n0 1\n0 -1\n0 1\n0 -1\n0 1\n0 -1\n0 1\n0 -1\n0000000000\n010101011101\n32232232322\n44343222342444324\n6767\n",
            "YES\nYES\nYES\nNO\nYES\n"
        ]
    ],
    "hint": "In the first sample, there is a $ 1 $ by $ 1 $ table consisting of the only digit $ 0 $ . The only move that can be made is staying on the square. The first string can be written on the white board by writing $ 0 $ repeatedly. The second string cannot be written as there is no $ 2 $ on the table.",
    "translation": "\u7ed9\u5b9a\u4e00\u5f20 $n\\times m $ \u7684\u7f51\u683c\u56fe\uff0c\u6bcf\u4e2a\u683c\u5b50\u4e0a\u90fd\u5199\u7740 $0-9$ \u4e2d\u7684\u4e00\u4e2a\u6570\u3002  \n\u5047\u5982\u5f53\u524d\u5728\u70b9 $(x,y)$\uff0c\u4f4d\u4e8e\u5176\u4e0a\u7684\u6570\u4e3a $d$\uff0c\u5219 $(x,y)$ \u5fc5\u987b\u8d70\u5230 $(x+a_d,y+b_d)$\u3002\u79fb\u52a8\u4e4b\u524d\uff0c**\u53ef\u4ee5**\u5c06 $d$ \u52a0\u5165\u4e32 $S$ \u7684\u672b\u5c3e\uff0c\u521d\u59cb $S$ \u4e3a\u7a7a\u3002\n\n$q$ \u7ec4\u8be2\u95ee\uff0c\u6bcf\u7ec4\u4e2d\u7ed9\u5b9a\u5b57\u7b26\u4e32 $T$\uff0c\u8be2\u95ee\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u4f4d\u7f6e\u4f5c\u4e3a\u8d77\u59cb\u70b9\uff0c\u8fdb\u884c\u82e5\u5e72\u6b21\u79fb\u52a8\u540e\u5f97\u5230\u7ed9\u5b9a\u4e32 $T$\u3002\n\n$1\\leq n,m,q,|a_i|,|b_i|\\leq 200$\uff0c$\\sum |T|\\leq 1000000$\u3002"
}