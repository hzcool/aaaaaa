{
    "description": "Fibonacci strings are defined as follows:\n\n- $ f_{1} $ = \u00aba\u00bb\n- $ f_{2} $ = \u00abb\u00bb\n- $ f_{n} $ = $ f_{n-1}\u00a0f_{n-2} $ , $ n>2 $\n\nThus, the first five Fibonacci strings are: \"a\", \"b\", \"ba\", \"bab\", \"babba\".\n\nYou are given a Fibonacci string and $ m $ strings $ s_{i} $ . For each string $ s_{i} $ , find the number of times it occurs in the given Fibonacci string as a substring.",
    "inputFormat": "The first line contains two space-separated integers $ k $ and $ m $ \u2014 the number of a Fibonacci string and the number of queries, correspondingly.\n\nNext $ m $ lines contain strings $ s_{i} $ that correspond to the queries. It is guaranteed that strings $ s_{i} $ aren't empty and consist only of characters \"a\" and \"b\".\n\nThe input limitations for getting 30 points are:\n\n- $ 1<=k<=3000 $\n- $ 1<=m<=3000 $\n- The total length of strings $ s_{i} $ doesn't exceed $ 3000 $\n\nThe input limitations for getting 100 points are:\n\n- $ 1<=k<=10^{18} $\n- $ 1<=m<=10^{4} $\n- The total length of strings $ s_{i} $ doesn't exceed $ 10^{5} $\n\nPlease do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams or the %I64d specifier.",
    "outputFormat": "For each string $ s_{i} $ print the number of times it occurs in the given Fibonacci string as a substring. Since the numbers can be large enough, print them modulo $ 1000000007 $ $ (10^{9}+7) $ . Print the answers for the strings in the order in which they are given in the input.",
    "samples": [
        [
            "6 5\na\nb\nab\nba\naba\n",
            "3\n5\n3\n3\n1\n"
        ]
    ],
    "hint": "",
    "translation": "**\u9898\u76ee\u63cf\u8ff0:**\r\n\r\n\u6590\u6ce2\u90a3\u5951\u5b57\u7b26\u4e32\u662f\u4e00\u4e2a\u7531a,b\u6784\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u7b2c$n$\u4e2a\u6590\u6ce2\u90a3\u5951\u5b57\u7b26\u4e32=\u7b2c$n-1$\u4e2a\u6590\u6ce2\u90a3\u5951\u5b57\u7b26\u4e32+\u7b2c$n-2$\u4e2a\u6590\u6ce2\u90a3\u5951\u5b57\u7b26\u4e32\u3002\u4f8b\u5982\u524d\u4e94\u9879\u6590\u6ce2\u90a3\u5951\u5b57\u7b26\u4e32\u4e3a\uff1a$a$, $b$, $ba$, $bab$, $babba$\u3002\r\n\r\n\u7ed9\u51fa$m$\u4e2a\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa\u5b83\u5728\u7b2c$k$\u4e2a\u6590\u6ce2\u90a3\u5951\u5b57\u7b26\u4e32\u4e2d\u4f5c\u4e3a\u5b50\u4e32\u7684\u4e2a\u6570\u3002\r\n\r\n**\u8f93\u5165\u683c\u5f0f\uff1a**  \r\n\u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570$k,m$\uff0c\u5206\u522b\u8868\u793a\u6709m\u4e2a\u5b57\u7b26\u4e32\u4ee5\u53ca\u7b2ck\u9879\u6590\u6ce2\u90a3\u5951\u5b57\u7b26\u4e32\u3002\r\n\r\n\u63a5\u4e0b\u6765m\u884c\uff0c \u6bcf\u884c\u4e00\u4e2a\u5b57\u7b26\u4e32s\u3002\r\n\r\n**\u8f93\u51fa\u683c\u5f0f\uff1a**\r\n\u8f93\u51fam\u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u5b57\u7b26\u4e32s\u4f5c\u4e3a\u5b50\u4e32\u5728\u7b2ck\u4e2a\u6590\u6ce2\u90a3\u5951\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002\r\n\r\n**\u63d0\u793a\uff1a**  \r\n\u5bf9\u4e8e30%\u7684\u6570\u636e\uff0c1\u2264$m,k$\u22643000\u3002\r\n\r\n\u5bf9\u4e8e100%\u7684\u6570\u636e\uff0c1\u2264$m$\u2264$10^{4}$, 1\u2264$k$\u2264$10^{18}$\u3002\r\n\r\n\u672c\u9898\u7ffb\u8bd1\u7531@[_tommysun_](https://www.luogu.com.cn/user/203452) \u63d0\u4f9b\u3002"
}