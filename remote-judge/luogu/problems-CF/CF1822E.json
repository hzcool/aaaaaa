{
    "description": "You are given a string $ s $ , consisting of lowercase English letters. In one operation, you are allowed to swap any two characters of the string $ s $ .\n\nA string $ s $ of length $ n $ is called an anti-palindrome, if $ s[i] \\ne s[n - i + 1] $ for every $ i $ ( $ 1 \\le i \\le n $ ). For example, the strings \"codeforces\", \"string\" are anti-palindromes, but the strings \"abacaba\", \"abc\", \"test\" are not.\n\nDetermine the minimum number of operations required to make the string $ s $ an anti-palindrome, or output $ -1 $ , if this is not possible.",
    "inputFormat": "The first line contains a single integer $ t $ ( $ 1 \\le t \\le 10^4 $ ) \u2014 the number of test cases. The description of the test cases follows.\n\nEach test case consists of two lines. The first line contains a single integer $ n $ ( $ 1 \\le n \\le 2 \\cdot 10^5 $ ) \u2014 the length of the string $ s $ .\n\nThe second line contains the string $ s $ , consisting of $ n $ lowercase English letters.\n\nThe sum of $ n $ over all test cases does not exceed $ 2 \\cdot 10^5 $ .",
    "outputFormat": "For each test case, output a single integer \u2014 the minimum number of operations required to make the string $ s $ an anti-palindrome, or $ -1 $ if this is not possible.",
    "samples": [
        [
            "10\n10\ncodeforces\n3\nabc\n10\ntaarrrataa\n10\ndcbdbdcccc\n4\nwwww\n12\ncabbaccabaac\n10\naadaaaaddc\n14\naacdaaaacadcdc\n6\nabccba\n12\ndcbcaebacccd",
            "0\n-1\n1\n1\n-1\n3\n-1\n2\n2\n2"
        ]
    ],
    "hint": "In the first test case, the string \"codeforces\" is already an anti-palindrome, so the answer is $ 0 $ .\n\nIn the second test case, it can be shown that the string \"abc\" cannot be transformed into an anti-palindrome by performing the allowed operations, so the answer is $ -1 $ .\n\nIn the third test case, it is enough to swap the second and the fifth characters of the string \"taarrrataa\", and the new string \"trararataa\" will be an anti-palindrome, so the answer is $ 1 $ .",
    "translation": "## \u9898\u76ee\u63cf\u8ff0\n\u7ed9\u60a8\u4e00\u4e2a\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u7684\u5b57\u7b26\u4e32 $s$\uff0c\u5728\u6bcf\u6b21\u64cd\u4f5c\u4e2d\uff0c\u60a8\u53ef\u4ee5\u4ea4\u6362 $s$ \u4e2d\u7684\u4efb\u610f\u4e24\u4e2a\u5b57\u6bcd\uff0c\u8bf7\u95ee\u628a $s$ \u53d8\u4e3a\u201c\u53cd\u56de\u6587\u4e32\u201d\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u662f\u591a\u5c11\uff1f\n\n\n\u201c\u53cd\u56de\u6587\u4e32\u201d\u5b9a\u4e49\u4e3a\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5b57\u7b26\u4e32 $s$\uff0c\u5982\u679c\u5bf9\u4e8e\u4efb\u610f $1\\leqslant i\\leqslant n$ \u5747\u6709 $s_i\\not=s_{n-i+1}$\uff0c\u90a3\u4e48\u5b57\u7b26\u4e32 $s$ \u5c31\u53eb\u505a\u201c\u53cd\u56de\u6587\u4e32\u201d\u3002\n## \u8f93\u5165\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6b63\u6574\u6570 $ t $ ( $ 1 \\le t \\le 10^4 $ ) \uff0c\u8868\u793a\u8be2\u95ee\u6b21\u6570\u3002\n\n\u6bcf\u6b21\u8be2\u95ee\u5305\u542b\u4e24\u884c\uff0c \u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570 $ n $ ( $ 1 \\le n \\le 2 \\cdot 10^5 $ ) \uff0c\u8868\u793a\u5b57\u7b26\u4e32 $ s $ \u7684\u957f\u5ea6\uff1b\u7b2c\u4e8c\u884c\u4e3a\u4e00\u4e2a\u7531 $ n $ \u4e2a\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u7684\u5b57\u7b26\u4e32 $ s $\u3002\n\n\u6240\u6709\u8be2\u95ee\u7684 $ n $ \u4e4b\u548c\u4e0d\u4f1a\u8d85\u8fc7 $ 2 \\cdot 10^5 $ \u3002\n\n## \u8f93\u51fa\u683c\u5f0f\n\n\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u628a $ s $ \u53d8\u4e3a\u201c\u53cd\u56de\u6587\u4e32\u201d\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570, \u5982\u679c\u65e0\u6cd5\u628a $s$ \u53d8\u4e3a\u201c\u53cd\u56de\u6587\u4e32\u201d\uff0c\u8f93\u51fa `-1`\u3002"
}