{
    "description": "Berland scientists know that the Old Berland language had exactly $ n $ words. Those words had lengths of $ l_{1},l_{2},...,l_{n} $ letters. Every word consisted of two letters, $ 0 $ and $ 1 $ . Ancient Berland people spoke quickly and didn\u2019t make pauses between the words, but at the same time they could always understand each other perfectly. It was possible because no word was a prefix of another one. The prefix of a string is considered to be one of its substrings that starts from the initial symbol.\n\nHelp the scientists determine whether all the words of the Old Berland language can be reconstructed and if they can, output the words themselves.",
    "inputFormat": "The first line contains one integer $ N $ ( $ 1<=N<=1000 $ ) \u2014 the number of words in Old Berland language. The second line contains $ N $ space-separated integers \u2014 the lengths of these words. All the lengths are natural numbers not exceeding $ 1000 $ .",
    "outputFormat": "If there\u2019s no such set of words, in the single line output NO. Otherwise, in the first line output YES, and in the next $ N $ lines output the words themselves in the order their lengths were given in the input file. If the answer is not unique, output any.",
    "samples": [
        [
            "3\n1 2 3\n",
            "YES\n0\n10\n110\n"
        ],
        [
            "3\n1 1 1\n",
            "NO\n"
        ]
    ],
    "hint": "",
    "translation": "### \u3010\u9898\u76ee\u63cf\u8ff0\u3011\n\n$Berland$\u7684\u79d1\u5b66\u5bb6\u77e5\u9053\uff0c\u53e4\u8001\u7684$Berland$\u8bed\u8a00\u4e2d\u6709$n$\u4e2a\u5355\u8bcd\u3002\u8fd9\u4e9b\u5355\u8bcd\u7684\u957f\u5ea6\u4e3a$l_1$,$l_2$,...,$l_n$\u3002\u6bcf\u4e2a\u5355\u8bcd\u7531$0$\u548c$1$\u7ec4\u6210\u3002\n\n\u5c3d\u7ba1\u53e4\u4ee3$Berland$\u4eba\u8bed\u901f\u5f88\u5feb\u5e76\u4e14\u8bf4\u8bdd\u4e0d\u505c\u987f\uff0c\u4f46\u540c\u65f6\u4ed6\u4eec\u4e5f\u80fd\u5f88\u597d\u5730\u7406\u89e3\u5bf9\u65b9\u3002\n\n\u53ef\u80fd\u7684\u539f\u56e0\u662f\uff1a\u6ca1\u6709\u4e00\u4e2a\u5355\u8bcd\u662f\u53e6\u4e00\u4e2a\u5355\u8bcd\u7684\u524d\u7f00\u3002\u5b57\u7b26\u4e32\u7684\u524d\u7f00\u88ab\u8ba4\u4e3a\u662f\u5b50\u4e32\u7684\u5176\u4e2d\u4e00\u4e2a\u5f00\u7aef\u3002\n\n\u8bf7\u4f60\u5e2e\u52a9\u79d1\u5b66\u5bb6\u786e\u5b9a\uff0c\u662f\u5426\u6240\u6709\u7684\u53e4$Berland$\u8bed\u7684\u5355\u8bcd\u90fd\u53ef\u4ee5\u88ab\u91cd\u6784\u3002\u5982\u679c\u53ef\u4ee5\uff0c\u8f93\u51fa\u5355\u8bcd\u672c\u8eab\u3002\n\n### \u3010\u8f93\u5165\u683c\u5f0f\u3011\n\n\u7b2c\u4e00\u884c\uff1a\u4e00\u4e2a\u6574\u6570$n$\uff0c\u8868\u793a\u53e4$Berland$\u8bed\u8a00\u7684\u5355\u8bcd\u4e2a\u6570\uff0c\u5176\u4e2d$1 \\le n\\le 10^3$\u3002\n\n\u7b2c\u4e8c\u884c\uff0c\u6709$n$\u4e2a\u7531\u7a7a\u683c\u9694\u5f00\u7684\u6574\u6570$len$\uff0c\u5206\u522b\u4e3a\u8fd9$n$\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\u3002\u5176\u4e2d$len\\le 10^3$\u3002\n\n### \u3010\u8f93\u51fa\u683c\u5f0f\u3011\n\n\u5982\u679c\u6ca1\u6709\u4efb\u4f55\u7b26\u5408\u7684\u5355\u8bcd\uff0c\u53ea\u8f93\u51fa$NO$\uff1b\n\n\u5426\u5219\uff0c\u5728\u7b2c\u4e00\u884c\u8f93\u51fa$YES$\uff0c\u5e76\u5728\u63a5\u4e0b\u6765\u7684$n$\u884c\uff0c\u6309\u7167\u8f93\u5165\u987a\u5e8f\u8f93\u51fa\u5355\u8bcd\u672c\u8eab\u3002\n\n\u5982\u679c\u7b54\u6848\u4e0d\u552f\u4e00\uff0c\u8f93\u51fa\u4efb\u610f\u4e00\u79cd\u3002"
}