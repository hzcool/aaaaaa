{
    "description": "Vivek has encountered a problem. He has a maze that can be represented as an $ n \\times m $ grid. Each of the grid cells may represent the following:\n\n- Empty \u2014 '.'\n- Wall \u2014 '\\#'\n- Good person \u2014 'G'\n- Bad person \u2014 'B'\n\nThe only escape from the maze is at cell $ (n, m) $ .\n\nA person can move to a cell only if it shares a side with their current cell and does not contain a wall. Vivek wants to block some of the empty cells by replacing them with walls in such a way, that all the good people are able to escape, while none of the bad people are able to. A cell that initially contains 'G' or 'B' cannot be blocked and can be travelled through.\n\nHelp him determine if there exists a way to replace some (zero or more) empty cells with walls to satisfy the above conditions.\n\nIt is guaranteed that the cell $ (n,m) $ is empty. Vivek can also block this cell.",
    "inputFormat": "The first line contains one integer $ t $ $ (1 \\le t \\le 100) $ \u2014 the number of test cases. The description of the test cases follows.\n\nThe first line of each test case contains two integers $ n $ , $ m $ $ (1 \\le n, m \\le 50) $ \u2014 the number of rows and columns in the maze.\n\nEach of the next $ n $ lines contain $ m $ characters. They describe the layout of the maze. If a character on a line equals '.', the corresponding cell is empty. If it equals '\\#', the cell has a wall. 'G' corresponds to a good person and 'B' corresponds to a bad person.",
    "outputFormat": "For each test case, print \"Yes\" if there exists a way to replace some empty cells with walls to satisfy the given conditions. Otherwise print \"No\"\n\nYou may print every letter in any case (upper or lower).",
    "samples": [
        [
            "6\n1 1\n.\n1 2\nG.\n2 2\n#B\nG.\n2 3\nG.#\nB#.\n3 3\n#B.\n#..\nGG.\n2 2\n#B\nB.",
            "Yes\nYes\nNo\nNo\nYes\nYes"
        ]
    ],
    "hint": "For the first and second test cases, all conditions are already satisfied.\n\nFor the third test case, there is only one empty cell $ (2,2) $ , and if it is replaced with a wall then the good person at $ (1,2) $ will not be able to escape.\n\nFor the fourth test case, the good person at $ (1,1) $ cannot escape.\n\nFor the fifth test case, Vivek can block the cells $ (2,3) $ and $ (2,2) $ .\n\nFor the last test case, Vivek can block the destination cell $ (2, 2) $ .",
    "translation": "### \u9898\u76ee\u63cf\u8ff0\n\n\u7ed9\u51fa\u4e00\u4e2a $n$ \u884c $m$ \u5217\u7684\u7f51\u683c\uff0c\u6bcf\u4e2a\u683c\u5b50\u4e0a\u6709\u56db\u79cd\u60c5\u51b5\uff1a\n- `.` \u8868\u793a\u8fd9\u4e2a\u683c\u5b50\u662f\u7a7a\u5730\u3002\n- `#` \u8868\u793a\u8fd9\u4e2a\u683c\u5b50\u662f\u5899\u3002\n- `G` \u8868\u793a\u8fd9\u4e2a\u683c\u5b50\u662f\u597d\u4eba\u3002\n- `B` \u8868\u793a\u8fd9\u4e2a\u683c\u5b50\u662f\u574f\u4eba\u3002\n\n`G`\uff0c`B`\u683c\u5b50\u90fd\u53ef\u4ee5\u8ba4\u4e3a\u662f\u7a7a\u5730\u3002\n\n\u4f60\u9700\u8981\u5224\u65ad\u80fd\u5426 `.` \u683c\u5b50\u4e0a\u653e\u4efb\u610f\u6570\u91cf\u7684\u5899\uff0c\u4fdd\u8bc1\u6240\u6709\u597d\u4eba\u53ef\u4ee5\u901a\u8fc7\u5728\u7a7a\u5730\u95f4\u79fb\u52a8\u5230\u8fbe\u70b9 $(n,m)$ \u800c\u6240\u6709\u574f\u4eba\u90fd\u4e0d\u884c\u3002\n\n### \u8f93\u5165\u683c\u5f0f\n\n**\u672c\u9898\u6709\u591a\u7ec4\u6570\u636e**\n\n\u7b2c\u4e00\u884c\u6709\u4e00\u4e2a\u6b63\u6574\u6570 $T$\uff0c\u8868\u793a\u6709 $T$ \u7ec4\u6570\u636e\u3002  \n\n\u6bcf\u7ec4\u6570\u636e\u7684\u7b2c\u4e00\u884c\u6709\u4e24\u4e2a\u6b63\u6574\u6570 $n, m$\uff0c\u8868\u793a\u7f51\u683c\u56fe\u7684\u884c\u6570\u548c\u5217\u6570\u3002  \n\n\u4e4b\u540e $n$ \u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u957f\u5ea6\u4e3a $m$ \u7684\u5b57\u7b26\u4e32\uff0c\u63cf\u8ff0\u4e86\u8fd9\u5f20\u7f51\u683c\u56fe\u3002\n\n\u4fdd\u8bc1 $1\\le t\\le100$\uff0c$1\\le n, m\\le50$\u3002\n\n### \u8f93\u51fa\u683c\u5f0f\n\n\u6bcf\u7ec4\u6570\u636e\u8f93\u51fa\u4e00\u884c `yes` \u6216 `no`\uff0c\u5927\u5c0f\u5199\u4efb\u610f\u3002"
}