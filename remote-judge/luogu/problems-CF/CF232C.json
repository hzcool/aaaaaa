{
    "description": "John Doe decided that some mathematical object must be named after him. So he invented the Doe graphs. The Doe graphs are a family of undirected graphs, each of them is characterized by a single non-negative number \u2014 its order.\n\nWe'll denote a graph of order $ k $ as $ D(k) $ , and we'll denote the number of vertices in the graph $ D(k) $ as $ |D(k)| $ . Then let's define the Doe graphs as follows:\n\n- $ D(0) $ consists of a single vertex, that has number $ 1 $ .\n- $ D(1) $ consists of two vertices with numbers $ 1 $ and $ 2 $ , connected by an edge.\n- $ D(n) $ for $ n>=2 $ is obtained from graphs $ D(n-1) $ and $ D(n-2) $ . $ D(n-1) $ and $ D(n-2) $ are joined in one graph, at that numbers of all vertices of graph $ D(n-2) $ increase by $ |D(n-1)| $ (for example, vertex number $ 1 $ of graph $ D(n-2) $ becomes vertex number $ 1+|D(n-1)| $ ). After that two edges are added to the graph: the first one goes between vertices with numbers $ |D(n-1)| $ and $ |D(n-1)|+1 $ , the second one goes between vertices with numbers $ |D(n-1)|+1 $ and $ 1 $ . Note that the definition of graph $ D(n) $ implies, that $ D(n) $ is a connected graph, its vertices are numbered from $ 1 $ to $ |D(n)| $ .\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF232C/ef320fe60e1714744a7b026fb199d2799a6e48f5.png)The picture shows the Doe graphs of order 1, 2, 3 and 4, from left to right.John thinks that Doe graphs are that great because for them exists a polynomial algorithm for the search of Hamiltonian path. However, your task is to answer queries of finding the shortest-length path between the vertices $ a_{i} $ and $ b_{i} $ in the graph $ D(n) $ .\n\nA path between a pair of vertices $ u $ and $ v $ in the graph is a sequence of vertices $ x_{1} $ , $ x_{2} $ , $ ... $ , $ x_{k} $ $ (k&gt;1) $ such, that $ x_{1}=u $ , $ x_{k}=v $ , and for any $ i $ $ (i&lt;k) $ vertices $ x_{i} $ and $ x_{i+1} $ are connected by a graph edge. The length of path $ x_{1} $ , $ x_{2} $ , $ ... $ , $ x_{k} $ is number $ (k-1) $ .",
    "inputFormat": "The first line contains two integers $ t $ and $ n $ ( $ 1<=t<=10^{5};\u00a01<=n<=10^{3} $ ) \u2014 the number of queries and the order of the given graph. The $ i $ -th of the next $ t $ lines contains two integers $ a_{i} $ and $ b_{i} $ ( $ 1<=a_{i},b_{i}<=10^{16} $ , $ a_{i}\u2260b_{i} $ ) \u2014 numbers of two vertices in the $ i $ -th query. It is guaranteed that $ a_{i},b_{i}<=|D(n)| $ .\n\nPlease, do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams or the %I64d specifier.",
    "outputFormat": "For each query print a single integer on a single line \u2014 the length of the shortest path between vertices $ a_{i} $ and $ b_{i} $ . Print the answers to the queries in the order, in which the queries are given in the input.",
    "samples": [
        [
            "10 5\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5\n",
            "1\n1\n1\n2\n1\n2\n3\n1\n2\n1\n"
        ]
    ],
    "hint": "",
    "translation": "$0$ \u7ea7 Doe \u56fe\u662f\u4e00\u4e2a\u70b9\uff0c$1$ \u7ea7 Doe \u56fe\u662f\u4e24\u4e2a\u70b9\u52a0\u4e00\u6761\u8fb9\uff0c$k$ \u7ea7 Doe \u56fe\u662f\u4e00\u4e2a $k-1$ \u7ea7 Doe \u56fe\u52a0\u4e0a\u4e00\u4e2a\u7f16\u53f7\u5168\u52a0\u4e86 $k-1$ \u7ea7 Doe \u56fe\u5927\u5c0f\u7684 $k-2$ \u7ea7 Doe \u56fe\u518d\u52a0\u4e0a $(1, |D_{i-1}|+1), (|D_{i-1}|, |D_{i-1}|+1)$ \u4e24\u6761\u8fb9\u3002\u7ed9\u4e00\u4e2a $n$ \u7ea7 Doe \u56fe\uff0c$m$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u67e5\u8be2 $a$ \u548c $b$ \u4e24\u70b9\u95f4\u7684\u6700\u77ed\u8def\u3002\n\n$t \\leq 10^5$\uff0c$n \\leq 1000$\uff0c$a, b \\leq 10^{16}$\u3002"
}