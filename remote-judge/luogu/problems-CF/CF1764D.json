{
    "description": "Doremy has $ n+1 $ pegs. There are $ n $ red pegs arranged as vertices of a regular $ n $ -sided polygon, numbered from $ 1 $ to $ n $ in anti-clockwise order. There is also a blue peg of slightly smaller diameter in the middle of the polygon. A rubber band is stretched around the red pegs.\n\nDoremy is very bored today and has decided to play a game. Initially, she has an empty array $ a $ . While the rubber band does not touch the blue peg, she will:\n\n1. choose $ i $ ( $ 1 \\leq i \\leq n $ ) such that the red peg $ i $ has not been removed;\n2. remove the red peg $ i $ ;\n3. append $ i $ to the back of $ a $ .\n\nDoremy wonders how many possible different arrays $ a $ can be produced by the following process. Since the answer can be big, you are only required to output it modulo $ p $ . $ p $ is guaranteed to be a prime number.\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1764D/39b25225514736b577fbcbcd5d0b5bf29ecc4db4.png) game with $ n=9 $ and $ a=[7,5,2,8,3,9,4] $ and another game with $ n=8 $ and $ a=[3,4,7,1,8,5,2] $",
    "inputFormat": "The first line contains two integers $ n $ and $ p $ ( $ 3 \\leq n \\leq 5000 $ , $ 10^8 \\le p \\le 10^9 $ ) \u2014 the number of red pegs and the modulo respectively.\n\n $ p $ is guaranteed to be a prime number.",
    "outputFormat": "Output a single integer, the number of different arrays $ a $ that can be produced by the process described above modulo $ p $ .",
    "samples": [
        [
            "4 100000007",
            "16"
        ],
        [
            "1145 141919831",
            "105242108"
        ]
    ],
    "hint": "In the first test case, $ n=4 $ , some possible arrays $ a $ that can be produced are $ [4,2,3] $ and $ [1,4] $ . However, it is not possible for $ a $ to be $ [1] $ or $ [1,4,3] $ .",
    "translation": "\u73b0\u5728\u6709 $n+1$ \u4e2a\u9489\u5b50\u3002\u6709\u7ea2\u8272\u9489\u5b50 $n$ \u4e2a\uff0c\u4ed6\u4eec\u5982\u56fe\u6240\u793a\u6392\u5217\u6210\u4e00\u4e2a\u6b63 $n$ \u8fb9\u5f62\uff0c\u4ed6\u4eec\u9006\u65f6\u9488\u4ece $1$ \u5230 $n$ \u8fdb\u884c\u6807\u53f7\uff0c\u4ed6\u4eec\u5206\u522b\u4ee3\u8868\u6b63 $n$ \u8fb9\u5f62\u7684\u9876\u70b9\u3002\u6709\u4e00\u4e2a\u84dd\u8272\u9489\u5b50\u5728\u6b63 $n$ \u8fb9\u5f62\u7684\u6b63\u4e2d\u95f4\uff0c\u5982\u56fe\u6240\u793a\u3002\u73b0\u5728\u8fd8\u6709\u4e00\u4e2a\u6a61\u76ae\u7b4b\u5c06 $n$ \u4e2a\u9876\u70b9\u56f4\u4f4f\uff0c\u5f62\u6210\u4e00\u4e2a\u6b63 $n$ \u8fb9\u5f62\u7684\u8f6e\u5ed3\u5982\u56fe\u6240\u793a\u3002\n![](https://img-blog.csdnimg.cn/eea0221250a64f9ab52e7c343eb25437.png)\n\u73b0\u5728\u6709\u4e00\u4e2a\u7a7a\u5e8f\u5217 $a$\uff0c\u5728\u6a61\u76ae\u7b4b\u6ca1\u6709\u78b0\u5230\u84dd\u8272\u9489\u5b50\u4e4b\u524d\u4f60\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\n- \u9009\u62e9\u4e00\u4e2a\u7f16\u53f7\u4e3a $x$ \u7684\u9489\u5b50\u5e76\u4e14\u8fd9\u4e2a\u9489\u5b50\u5e76\u6ca1\u6709\u88ab\u6d88\u9664\u3002\n- \u5c06\u8fd9\u4e2a\u9489\u5b50\u7ed9\u6d88\u9664\u5e76\u4e14\u5c06 $x$ \u52a0\u5165\u5230 $a$ \u4e2d\u3002\n\n\u4f60\u9700\u8981\u8ba1\u7b97\u51fa\u6700\u7ec8\u53ef\u4ee5\u5f97\u5230\u591a\u5c11\u79cd\u4e0d\u540c\u7684 $a$\uff0c\u8fd9\u4e2a\u7ed3\u679c\u5f88\u5927\uff0c\u4f60\u53ea\u9700\u8981\u8f93\u51fa\u4ed6\u5bf9 $p$ \u8fdb\u884c\u53d6\u6a21\u7684\u503c\uff0c\u4fdd\u8bc1 $p$ \u662f\u4e00\u4e2a\u7d20\u6570\u3002"
}