{
    "description": "You and your friend Ilya are participating in an individual programming contest consisting of multiple stages. A contestant can get between $ 0 $ and $ 100 $ points, inclusive, for each stage, independently of other contestants.\n\nPoints received by contestants in different stages are used for forming overall contest results. Suppose that $ k $ stages of the contest are completed. For each contestant, $ k - \\lfloor \\frac{k}{4} \\rfloor $ stages with the highest scores are selected, and these scores are added up. This sum is the overall result of the contestant. (Here $ \\lfloor t \\rfloor $ denotes rounding $ t $ down.)\n\nFor example, suppose $ 9 $ stages are completed, and your scores are $ 50, 30, 50, 50, 100, 10, 30, 100, 50 $ . First, $ 7 $ stages with the highest scores are chosen \u2014 for example, all stages except for the $ 2 $ -nd and the $ 6 $ -th can be chosen. Then your overall result is equal to $ 50 + 50 + 50 + 100 + 30 + 100 + 50 = 430 $ .\n\nAs of now, $ n $ stages are completed, and you know the points you and Ilya got for these stages. However, it is unknown how many more stages will be held. You wonder what the smallest number of additional stages is, after which your result might become greater than or equal to Ilya's result, at least in theory. Find this number!",
    "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $ t $ ( $ 1 \\le t \\le 1000 $ ). Description of the test cases follows.\n\nThe first line of each test case contains a single integer $ n $ ( $ 1 \\le n \\le 10^5 $ ) \u2014 the number of completed stages.\n\nThe second line contains $ n $ integers $ a_1, a_2, \\ldots, a_n $ ( $ 0 \\le a_i \\le 100 $ ) \u2014 your points for the completed stages.\n\nThe third line contains $ n $ integers $ b_1, b_2, \\ldots, b_n $ ( $ 0 \\le b_i \\le 100 $ ) \u2014 Ilya's points for the completed stages.\n\nIt is guaranteed that the sum of $ n $ over all test cases does not exceed $ 10^5 $ .",
    "outputFormat": "For each test case print a single integer \u2014 the smallest number of additional stages required for your result to be able to become greater than or equal to Ilya's result.\n\nIf your result is already not less than Ilya's result, print $ 0 $ .",
    "samples": [
        [
            "5\n1\n100\n0\n1\n0\n100\n4\n20 30 40 50\n100 100 100 100\n4\n10 20 30 40\n100 100 100 100\n7\n7 59 62 52 27 31 55\n33 35 50 98 83 80 64",
            "0\n1\n3\n4\n2"
        ]
    ],
    "hint": "In the first test case, you have scored $ 100 $ points for the first stage, while Ilya has scored $ 0 $ . Thus, your overall result ( $ 100 $ ) is already not less than Ilya's result ( $ 0 $ ).\n\nIn the second test case, you have scored $ 0 $ points for the first stage, while Ilya has scored $ 100 $ . A single stage with an opposite result is enough for both your and Ilya's overall scores to become equal to $ 100 $ .\n\nIn the third test case, your overall result is $ 30 + 40 + 50 = 120 $ , while Ilya's result is $ 100 + 100 + 100 = 300 $ . After three additional stages your result might become equal to $ 420 $ , while Ilya's result might become equal to $ 400 $ .\n\nIn the fourth test case, your overall result after four additional stages might become equal to $ 470 $ , while Ilya's result might become equal to $ 400 $ . Three stages are not enough.",
    "translation": "#### 1\u3001\u9898\u76ee\u63cf\u8ff0\u7ffb\u8bd1\n\n\u4f60\u548c\u4f60\u7684\u670b\u53cb\u4f0a\u5229\u4e9a\u6b63\u5728\u53c2\u52a0\u7531\u591a\u4e2a\u9636\u6bb5\u7ec4\u6210\u7684\u7f16\u7a0b\u7ade\u8d5b\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u9636\u6bb5\uff0c\u4f60\u548c\u4f0a\u5229\u4e9a\u90fd\u4f1a\u83b7\u5f97\u4e00\u4e2a\u5206\u6570\uff0c\u4fdd\u8bc1\u4e3a $0$ \u5230 $100$ \u4e4b\u95f4\u7684\u6574\u6570\u3002\u5e76\u4e14\uff0c\u6bcf\u4e2a\u4eba\u83b7\u5f97\u7684\u5206\u6570\u90fd\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u4e0d\u53d7\u5bf9\u65b9\u5f71\u54cd\u3002\n\n\u603b\u5206\u662f\u8fd9\u6837\u8ba1\u7b97\u7684\uff1a\u8bbe\u5f53\u524d\u5df2\u8fdb\u884c $k$ \u4e2a\u9636\u6bb5\uff0c\u5219\u4f60\u7684\u603b\u5206\u4e3a\u6700\u9ad8\u7684 $k-\\left\\lfloor k\\div4\\right\\rfloor $\u4e2a\u9636\u6bb5\u5f97\u5206\u4e4b\u548c\u3002\u5176\u4e2d $\\left\\lfloor a\\right\\rfloor$ \u4ee3\u8868 $a$ \u5411\u4e0b\u53d6\u6574\uff08\u4e0d\u5927\u4e8e $a$ \u7684\u6700\u5927\u6574\u6570\uff09\u3002\n\n\u73b0\u5728\uff0c\u8fd9\u4e2a\u7ade\u8d5b\u5df2\u8fdb\u884c\u4e86 $n$ \u4e2a\u9636\u6bb5\uff0c\u4f60\u4e5f\u77e5\u9053\u8fd9\u4e9b\u9636\u6bb5\u4e2d\uff0c\u4e24\u4e2a\u4eba\u83b7\u5f97\u7684\u5206\u6570\u3002\u4f46\u6bd4\u8d5b\u4ecd\u5728\u8fdb\u884c\u3002\u8bf7\u95ee\uff1a\u7406\u8bba\u4e0a\uff0c\u81f3\u5c11\u518d\u8fc7\u591a\u5c11\u4e2a\u9636\u6bb5\uff0c\u4f60\u7684\u603b\u5206\u624d\u80fd\u8d85\u8fc7\u4f0a\u5229\u4e9a\uff1f\u5982\u679c\u4f60\u7684\u603b\u5206\u5df2\u7ecf\u8d85\u8fc7\u4e86\u5979\uff0c\u8bf7\u8f93\u51fa `0`\u3002\n\n#### 2\u3001\u8f93\u5165\u683c\u5f0f\u7ffb\u8bd1\n\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570 $t$\uff08$1\\le t\\le1000$\uff09\uff0c\u4ee3\u8868\u6d4b\u8bd5\u6570\u636e\u7ec4\u6570\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u6d4b\u8bd5\u6570\u636e\uff0c\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570 $n$\uff08$1\\le n\\le10^5$\uff09\uff0c\u4ee3\u8868\u5df2\u7ecf\u8fdb\u884c\u4e86 $n$ \u4e2a\u9636\u6bb5\u3002\n\n\u63a5\u4e0b\u6765\u6709\u4e24\u884c\uff0c\u6bcf\u884c\u90fd\u6709 $n$ \u4e2a\u6570\u3002\u7b2c\u4e00\u884c\u4ee3\u8868\u4f60\u7684\u6bcf\u4e2a\u9636\u6bb5\u7684\u5f97\u5206\uff0c\u7b2c\u4e8c\u884c\u4ee3\u8868\u4f0a\u5229\u4e9a\u6bcf\u4e2a\u9636\u6bb5\u7684\u5f97\u5206\u3002\n\n#### 3\u3001\u8f93\u51fa\u683c\u5f0f\u7ffb\u8bd1\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u6d4b\u8bd5\u6570\u636e\uff0c\u8f93\u51fa\u4e00\u884c\uff0c\u4e00\u4e2a\u6574\u6570\uff0c\u5373\u95ee\u9898\u6240\u6c42\u7684\u7b54\u6848\u3002\u5982\u679c\u4f60\u7684\u603b\u5206\u5df2\u7ecf\u8d85\u8fc7\u4e86\u5979\uff0c\u8bf7\u8f93\u51fa `0`\u3002\n\nTranslated by [dengzijun](https://www.luogu.com.cn/user/387836)"
}