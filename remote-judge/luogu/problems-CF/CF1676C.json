{
    "description": "You are given $ n $ words of equal length $ m $ , consisting of lowercase Latin alphabet letters. The $ i $ -th word is denoted $ s_i $ .\n\nIn one move you can choose any position in any single word and change the letter at that position to the previous or next letter in alphabetical order. For example:\n\n- you can change 'e' to 'd' or to 'f';\n- 'a' can only be changed to 'b';\n- 'z' can only be changed to 'y'.\n\nThe difference between two words is the minimum number of moves required to make them equal. For example, the difference between \"best\" and \"cost\" is $ 1 + 10 + 0 + 0 = 11 $ .\n\nFind the minimum difference of $ s_i $ and $ s_j $ such that $ (i < j) $ . In other words, find the minimum difference over all possible pairs of the $ n $ words.",
    "inputFormat": "The first line of the input contains a single integer $ t $ ( $ 1 \\le t \\le 100 $ ) \u2014 the number of test cases. The description of test cases follows.\n\nThe first line of each test case contains $ 2 $ integers $ n $ and $ m $ ( $ 2 \\leq n \\leq 50 $ , $ 1 \\leq m \\leq 8 $ ) \u2014 the number of strings and their length respectively.\n\nThen follows $ n $ lines, the $ i $ -th of which containing a single string $ s_i $ of length $ m $ , consisting of lowercase Latin letters.",
    "outputFormat": "For each test case, print a single integer \u2014 the minimum difference over all possible pairs of the given strings.",
    "samples": [
        [
            "6\n2 4\nbest\ncost\n6 3\nabb\nzba\nbef\ncdu\nooo\nzzz\n2 7\naaabbbc\nbbaezfe\n3 2\nab\nab\nab\n2 8\naaaaaaaa\nzzzzzzzz\n3 1\na\nu\ny",
            "11\n8\n35\n0\n200\n4"
        ]
    ],
    "hint": "For the second test case, one can show that the best pair is (\"abb\",\"bef\"), which has difference equal to $ 8 $ , which can be obtained in the following way: change the first character of the first string to 'b' in one move, change the second character of the second string to 'b' in $ 3 $ moves and change the third character of the second string to 'b' in $ 4 $ moves, thus making in total $ 1 + 3 + 4 = 8 $ moves.\n\nFor the third test case, there is only one possible pair and it can be shown that the minimum amount of moves necessary to make the strings equal is $ 35 $ .\n\nFor the fourth test case, there is a pair of strings which is already equal, so the answer is $ 0 $ .",
    "translation": "\u4f60\u6709 $n$ \u4e2a\u957f\u5ea6\u4e3a $m$ \u7684\u5355\u8bcd\uff0c\u7b2c $i$ \u4e2a\u5355\u8bcd\u662f $s_i$\u3002\n\n\u5728\u4e00\u4e2a\u64cd\u4f5c\u4e2d\uff0c\u4f60\u53ef\u4ee5\u628a\u4efb\u4f55\u4e00\u4e2a\u5355\u8bcd\u7684\u4efb\u4f55\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u5b57\u6bcd\u6539\u6210\u5b83\u76f8\u90bb\u7684\u5b57\u6bcd\uff0c\u6bd4\u5982\uff1a\n\n- \u4f60\u53ef\u4ee5\u628a 'e' \u6539\u6210 'd' \u6216 'f'\u3002\n- \u4f60\u53ea\u80fd\u628a 'a' \u6539\u6210 'b'\u3002\n- \u4f60\u53ea\u80fd\u628a 'z' \u6539\u6210 'y'\u3002\n\n$s_i$ \u4e0e $s_j$ \u7684\u5dee\u5f02\u5ea6\u4e3a\u4f7f $s_i=s_j$ \u6240\u9700\u7684\u64cd\u4f5c\u6b21\u6570\uff0c\u5982 \"best\" \u4e0e \"cost\" \u5dee\u5f02\u5ea6\u4e3a $1+10+0+0=11$\u3002\n\n\u4f60\u8981\u627e\u5230 $s_i$ \u4e0e $s_j$\uff08\u6ee1\u8db3 $i<j$\uff09\u7684\u5dee\u5f02\u5ea6\u7684\u6700\u5c0f\u503c\uff0c\u4e5f\u5c31\u662f\u6bcf\u4e00\u5bf9\u5355\u8bcd\u5dee\u5f02\u5ea6\u7684\u6700\u5c0f\u503c\u3002"
}