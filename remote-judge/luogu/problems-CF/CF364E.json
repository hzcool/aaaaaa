{
    "description": "You've got an $ n\u00d7m $ table ( $ n $ rows and $ m $ columns), each cell of the table contains a \"0\" or a \"1\".\n\nYour task is to calculate the number of rectangles with the sides that are parallel to the sides of the table and go along the cell borders, such that the number one occurs exactly $ k $ times in the rectangle.",
    "inputFormat": "The first line contains three space-separated integers $ n $ , $ m $ and $ k $ ( $ 1<=n,m<=2500 $ , $ 0<=k<=6 $ ) \u2014 the sizes of the table and the required number of numbers one.\n\nNext $ n $ lines each contains $ m $ characters \"0\" or \"1\". The $ i $ -th character of the $ j $ -th line corresponds to the character that is in the $ j $ -th row and the $ i $ -th column of the table.",
    "outputFormat": "Print a single number \u2014 the number of rectangles that contain exactly $ k $ numbers one.\n\nPlease, do not write the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams or the %I64d specifier.",
    "samples": [
        [
            "3 3 2\n101\n000\n101\n",
            "8\n"
        ],
        [
            "5 5 1\n00000\n00000\n00100\n00000\n00000\n",
            "81\n"
        ],
        [
            "5 5 6\n01010\n10101\n01010\n10101\n01010\n",
            "12\n"
        ],
        [
            "3 3 0\n001\n010\n000\n",
            "15\n"
        ],
        [
            "4 4 0\n0000\n0101\n0000\n0000\n",
            "52\n"
        ]
    ],
    "hint": "",
    "translation": "## \u9898\u76ee\u63cf\u8ff0\uff1a\n\n\u4f60\u6709\u4e00\u4e2an*m\u768401\u77e9\u9635\uff0c\u73b0\u5728\u8be2\u95ee\u5728\u8fd9\u5176\u4e2d\u6709\u591a\u5c11\u4e2a\u5b50\u77e9\u9635\u6ee1\u8db3\u5305\u542bk\u4e2a1\uff0c\u5373\u548c\u4e3ak\u3002\n\n## \u8f93\u5165\u683c\u5f0f\uff1a\n\n\u7b2c\u4e00\u884c\u5305\u542b3\u4e2a\u6b63\u6574\u6570\uff0c\u5206\u522b\u4e3an\uff0cm\uff0ck  \n\n\u4e0b\u9762\u6709n\u884c\uff0c\u6bcf\u884c\u4e2d\u6709m\u4e2a\u75310\u62161\u7ec4\u6210\u7684\u6570\u3002\n\n## \u8f93\u51fa\u683c\u5f0f\uff1a\n\n\u8f93\u51fa\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u8868\u793a\u6ee1\u8db3\u6761\u4ef6\u7684\u5b50\u77e9\u9635\u7684\u4e2a\u6570\u3002\n\n\u6ce8\u610f\uff1a\u8bf7\u4e0d\u8981\u5728\u0421++\u4e2d\u7f16\u5199\uff05lld\u8bf4\u660e\u7b26\u6765\u8bfb\u53d6\u6216\u5199\u516564\u4f4d\u6574\u6570\u3002\u4f18\u9009\u4f7f\u7528cin\uff0ccout\u6d41\u6216\uff05I64d\u8bf4\u660e\u7b26\u3002\uff08cf\u58f0\u660e\uff09\n\n## \u6570\u636e\u8303\u56f4\uff1a\n\n n,m\u22642500\uff1b0\u2264k\u22646\n\n"
}