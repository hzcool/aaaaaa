{
    "description": "A team of three programmers is going to play a contest. The contest consists of $ n $ problems, numbered from $ 1 $ to $ n $ . Each problem is printed on a separate sheet of paper. The participants have decided to divide the problem statements into three parts: the first programmer took some prefix of the statements (some number of first paper sheets), the third contestant took some suffix of the statements (some number of last paper sheets), and the second contestant took all remaining problems. But something went wrong \u2014 the statements were printed in the wrong order, so the contestants have received the problems in some random order.\n\nThe first contestant has received problems $ a_{1, 1}, a_{1, 2}, \\dots, a_{1, k_1} $ . The second one has received problems $ a_{2, 1}, a_{2, 2}, \\dots, a_{2, k_2} $ . The third one has received all remaining problems ( $ a_{3, 1}, a_{3, 2}, \\dots, a_{3, k_3} $ ).\n\nThe contestants don't want to play the contest before they redistribute the statements. They want to redistribute them so that the first contestant receives some prefix of the problemset, the third contestant receives some suffix of the problemset, and the second contestant receives all the remaining problems.\n\nDuring one move, some contestant may give one of their problems to other contestant. What is the minimum number of moves required to redistribute the problems?\n\nIt is possible that after redistribution some participant (or even two of them) will not have any problems.",
    "inputFormat": "The first line contains three integers $ k_1, k_2 $ and $ k_3 $ ( $ 1 \\le k_1, k_2, k_3 \\le 2 \\cdot 10^5, k_1 + k_2 + k_3 \\le 2 \\cdot 10^5 $ ) \u2014 the number of problems initially taken by the first, the second and the third participant, respectively.\n\nThe second line contains $ k_1 $ integers $ a_{1, 1}, a_{1, 2}, \\dots, a_{1, k_1} $ \u2014 the problems initially taken by the first participant.\n\nThe third line contains $ k_2 $ integers $ a_{2, 1}, a_{2, 2}, \\dots, a_{2, k_2} $ \u2014 the problems initially taken by the second participant.\n\nThe fourth line contains $ k_3 $ integers $ a_{3, 1}, a_{3, 2}, \\dots, a_{3, k_3} $ \u2014 the problems initially taken by the third participant.\n\nIt is guaranteed that no problem has been taken by two (or three) participants, and each integer $ a_{i, j} $ meets the condition $ 1 \\le a_{i, j} \\le n $ , where $ n = k_1 + k_2 + k_3 $ .",
    "outputFormat": "Print one integer \u2014 the minimum number of moves required to redistribute the problems so that the first participant gets the prefix of the problemset, the third participant gets the suffix of the problemset, and the second participant gets all of the remaining problems.",
    "samples": [
        [
            "2 1 2\n3 1\n4\n2 5\n",
            "1\n"
        ],
        [
            "3 2 1\n3 2 1\n5 4\n6\n",
            "0\n"
        ],
        [
            "2 1 3\n5 6\n4\n1 2 3\n",
            "3\n"
        ],
        [
            "1 5 1\n6\n5 1 2 4 7\n3\n",
            "2\n"
        ]
    ],
    "hint": "In the first example the third contestant should give the problem $ 2 $ to the first contestant, so the first contestant has $ 3 $ first problems, the third contestant has $ 1 $ last problem, and the second contestant has $ 1 $ remaining problem.\n\nIn the second example the distribution of problems is already valid: the first contestant has $ 3 $ first problems, the third contestant has $ 1 $ last problem, and the second contestant has $ 2 $ remaining problems.\n\nThe best course of action in the third example is to give all problems to the third contestant.\n\nThe best course of action in the fourth example is to give all problems to the second contestant.",
    "translation": "\u7ed9\u51fa\u4e09\u4e2a\u96c6\u5408 $a_1,a_2,a_3$ \uff0c\u5206\u522b\u6709 $k_1,k_2,k_3$ \u4e2a\u5143\u7d20\u3002\u8bbe $k_1+k_2+k_3=n$\uff0c\u4e09\u4e2a\u96c6\u5408\u91cc\u7684\u6240\u6709\u5143\u7d20\u4e24\u4e24\u4e0d\u76f8\u540c\u4e14\u5728 $[1,n]$ \u4e4b\u95f4\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u8fd9\u4e09\u4e2a\u96c6\u5408\u7684\u5e76\u96c6\u6070\u597d\u662f $[1,n]$\u3002\n\n\u79f0\u5c06\u4e00\u4e2a\u96c6\u5408\u91cc\u7684\u5143\u7d20\u5220\u9664\u5e76\u52a0\u5165\u5230\u53e6\u4e00\u4e2a\u96c6\u5408\u4e2d\u4e3a\u4e00\u6b21\u64cd\u4f5c\u3002\u8bf7\u7528\u6700\u5c11\u7684\u64cd\u4f5c\u6b21\u6570\u4f7f\u5f97\uff1a\n\n- $a_1$ \u5305\u542b $[1,n]$ \u5f00\u5934\u82e5\u5e72\u4e2a\u5143\u7d20\uff08\u53ef\u4ee5\u4e3a\u7a7a\uff09\uff1b\n- $a_3$ \u5305\u542b $[1,n]$ \u672b\u5c3e\u82e5\u5e72\u4e2a\u5143\u7d20\uff08\u53ef\u4ee5\u4e3a\u7a7a\uff09\uff1b\n- $a_2$ \u5305\u542b\u5269\u4e0b\u7684\u6240\u6709\u5143\u7d20\u3002"
}