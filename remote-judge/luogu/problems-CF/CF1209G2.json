{
    "description": "This is a harder version of the problem. In this version $ q \\le 200\\,000 $ .\n\nA sequence of integers is called nice if its elements are arranged in blocks like in $ [3, 3, 3, 4, 1, 1] $ . Formally, if two elements are equal, everything in between must also be equal.\n\nLet's define difficulty of a sequence as a minimum possible number of elements to change to get a nice sequence. However, if you change at least one element of value $ x $ to value $ y $ , you must also change all other elements of value $ x $ into $ y $ as well. For example, for $ [3, 3, 1, 3, 2, 1, 2] $ it isn't allowed to change first $ 1 $ to $ 3 $ and second $ 1 $ to $ 2 $ . You need to leave $ 1 $ 's untouched or change them to the same value.\n\nYou are given a sequence of integers $ a_1, a_2, \\ldots, a_n $ and $ q $ updates.\n\nEach update is of form \" $ i $ $ x $ \" \u2014 change $ a_i $ to $ x $ . Updates are not independent (the change stays for the future).\n\nPrint the difficulty of the initial sequence and of the sequence after every update.",
    "inputFormat": "The first line contains integers $ n $ and $ q $ ( $ 1 \\le n \\le 200\\,000 $ , $ 0 \\le q \\le 200\\,000 $ ), the length of the sequence and the number of the updates.\n\nThe second line contains $ n $ integers $ a_1, a_2, \\ldots, a_n $ ( $ 1 \\le a_i \\le 200\\,000 $ ), the initial sequence.\n\nEach of the following $ q $ lines contains integers $ i_t $ and $ x_t $ ( $ 1 \\le i_t \\le n $ , $ 1 \\le x_t \\le 200\\,000 $ ), the position and the new value for this position.",
    "outputFormat": "Print $ q+1 $ integers, the answer for the initial sequence and the answer after every update.",
    "samples": [
        [
            "5 6\n1 2 1 2 1\n2 1\n4 1\n5 3\n2 3\n4 2\n2 1\n",
            "2\n1\n0\n0\n2\n3\n0\n"
        ]
    ],
    "hint": "",
    "translation": "\u7ed9\u4f60 $n$ , $q$\uff0c$n$ \u8868\u793a\u5e8f\u5217\u957f\u5ea6\uff0c$q$ \u8868\u793a\u64cd\u4f5c\u6b21\u6570\u3002\n\n\u6211\u4eec\u9700\u8981\u8fbe\u6210\u8fd9\u4e48\u4e00\u4e2a\u76ee\u6807\u72b6\u6001\uff1a\n\u5982\u679c\u5b58\u5728 $x$ \u8fd9\u4e2a\u5143\u7d20\uff0c\u90a3\u4e48\u5fc5\u987b\u6ee1\u8db3\u6240\u6709 $x$ \u5143\u7d20\u90fd\u5fc5\u987b\u5728\u5e8f\u5217\u4e2d\u8fde\u7eed\u3002\n\n\u7136\u540e\u4f60\u53ef\u4ee5\u8fdb\u884c\u8fd9\u4e48\u4e00\u79cd\u64cd\u4f5c\uff0c\u5c06\u6240\u6709\u7684 $x$ \u5143\u7d20\u7684\u53d8\u4e3a\u4efb\u610f\u4f60\u6307\u5b9a\u7684 $y$ \u5143\u7d20\uff0c\u5e76\u4e14\u82b1\u8d39 $cnt[x]$ \u7684\u82b1\u8d39\uff0c$cnt[x]$ \u4ee3\u8868 $x$ \u5143\u7d20\u7684\u4e2a\u6570\u3002\n\n\u73b0\u5728\u6709 $q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u5355\u70b9\u4fee\u6539\u4e00\u4e2a\u4f4d\u7f6e\u7684\u503c\uff0c\u6c42\u4fee\u6539\u5b8c\u4e4b\u540e\u6700\u5c0f\u82b1\u8d39\u4f7f\u5f97\u5e8f\u5217\u6ee1\u8db3\u76ee\u6807\u72b6\u6001\u3002\n\n\u6ce8\u610f\uff1a\u66f4\u65b0\u4e0d\u662f\u72ec\u7acb\u7684\uff0c\u4e4b\u524d\u7684\u66f4\u65b0\u4f1a\u4fdd\u7559\u3002"
}