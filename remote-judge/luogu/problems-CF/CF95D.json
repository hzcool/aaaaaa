{
    "description": "Petya likes horse racing very much. Horses numbered from $ l $ to $ r $ take part in the races. Petya wants to evaluate the probability of victory; for some reason, to do that he needs to know the amount of nearly lucky horses' numbers. A nearly lucky number is an integer number that has at least two lucky digits the distance between which does not exceed $ k $ . Petya learned from some of his mates from Lviv that lucky digits are digits $ 4 $ and $ 7 $ . The distance between the digits is the absolute difference between their positions in the number of a horse. For example, if $ k=2 $ , then numbers $ 412395497 $ , $ 404 $ , $ 4070400000070004007 $ are nearly lucky and numbers $ 4 $ , $ 4123954997 $ , $ 4007000040070004007 $ are not.\n\nPetya prepared $ t $ intervals $ [l_{i},r_{i}] $ and invented number $ k $ , common for all of them. Your task is to find how many nearly happy numbers there are in each of these segments. Since the answers can be quite large, output them modulo $ 1000000007 $ ( $ 10^{9}+7 $ ).",
    "inputFormat": "The first line contains two integers $ t $ and $ k $ ( $ 1<=t,k<=1000 $ ) \u2014 the number of segments and the distance between the numbers correspondingly. Next $ t $ lines contain pairs of integers $ l_{i} $ and $ r_{i} $ ( $ 1<=l<=r<=10^{1000} $ ). All numbers are given without the leading zeroes. Numbers in each line are separated by exactly one space character.",
    "outputFormat": "Output $ t $ lines. In each line print one integer \u2014 the answer for the corresponding segment modulo $ 1000000007 $ ( $ 10^{9}+7 $ ).",
    "samples": [
        [
            "1 2\n1 100\n",
            "4\n"
        ],
        [
            "1 2\n70 77\n",
            "2\n"
        ],
        [
            "2 1\n1 20\n80 100\n",
            "0\n0\n"
        ]
    ],
    "hint": "In the first sample, the four nearly lucky numbers are 44, 47, 74, 77.\n\nIn the second sample, only 74 and 77 are in the given segment.",
    "translation": "\u5f7c\u4f73\u975e\u5e38\u559c\u6b22\u8d5b\u9a6c\uff0c\u6709\u7f16\u53f7\u4ecel\u5230r\u7684\u9a6c\u53c2\u52a0\u6bd4\u8d5b\u3002\u5e78\u8fd0\u6570\u5b57\u4e3a4\u62167\u3002\u6709\u673a\u4f1a\u8d62\u7684\u9a6c\u7684\u7f16\u53f7\u6ee1\u8db3\u5728\u8fd9\u4e00\u4e32\u6570\u5b57\u4e2d\uff0c\u5b58\u5728\u4e24\u4e2a\u5e78\u8fd0\u6570\u5b57\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e0d\u8d85\u8fc7k\uff08\u4e24\u4e2a\u76f8\u90bb\u7684\u6570\u5b57\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e3a1\uff09\u3002\u95ee\u6709\u673a\u4f1a\u8d62\u7684\u9a6c\u7684\u7f16\u53f7\u4e00\u5171\u6709\u51e0\u4e2a\u3002\u8f93\u51fa\u7b54\u6848\u5bf91e9+7\u53d6\u6a21\u3002"
}