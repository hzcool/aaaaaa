{
    "description": "Polycarpus analyzes a string called abracadabra. This string is constructed using the following algorithm:\n\n- On the first step the string consists of a single character \"a\".\n- On the $ k $ -th step Polycarpus concatenates two copies of the string obtained on the $ (k-1) $ -th step, while inserting the $ k $ -th character of the alphabet between them. Polycarpus uses the alphabet that consists of lowercase Latin letters and digits (a total of 36 characters). The alphabet characters are numbered like this: the 1-st character is \"a\", the 2-nd \u2014 \"b\", ..., the 26-th \u2014 \"z\", the 27-th \u2014 \"0\", the 28-th \u2014 \"1\", ..., the 36-th \u2014 \"9\".\n\nLet's have a closer look at the algorithm. On the second step Polycarpus will concatenate two strings \"a\" and insert the character \"b\" between them, resulting in \"aba\" string. The third step will transform it into \"abacaba\", and the fourth one - into \"abacabadabacaba\". Thus, the string constructed on the $ k $ -th step will consist of $ 2^{k}-1 $ characters.\n\nPolycarpus wrote down the string he got after 30 steps of the given algorithm and chose two non-empty substrings of it. Your task is to find the length of the longest common substring of the two substrings selected by Polycarpus.\n\nA substring $ s[i...\\ j] $ ( $ 1<=i<=j<=|s| $ ) of string $ s $ = $ s_{1}s_{2}...\\ s_{|s|} $ is a string $ s_{i}s_{i+1}...\\ s_{j} $ . For example, substring $ s[2...4] $ of string $ s $ = \"abacaba\" equals \"bac\". The string is its own substring.\n\nThe longest common substring of two strings $ s $ and $ t $ is the longest string that is a substring of both $ s $ and $ t $ . For example, the longest common substring of \"contest\" and \"systemtesting\" is string \"test\". There can be several common substrings of maximum length.",
    "inputFormat": "The input consists of a single line containing four integers $ l_{1} $ , $ r_{1} $ , $ l_{2} $ , $ r_{2} $ ( $ 1<=l_{i}<=r_{i}<=10^{9} $ , $ i=1,2 $ ). The numbers are separated by single spaces. $ l_{i} $ and $ r_{i} $ give the indices of the first and the last characters of the $ i $ -th chosen substring, correspondingly ( $ i=1,2 $ ). The characters of string abracadabra are numbered starting from $ 1 $ .",
    "outputFormat": "Print a single number \u2014 the length of the longest common substring of the given strings. If there are no common substrings, print 0.",
    "samples": [
        [
            "3 6 1 4\n",
            "2\n"
        ],
        [
            "1 1 4 4\n",
            "0\n"
        ]
    ],
    "hint": "In the first sample the first substring is \"acab\", the second one is \"abac\". These two substrings have two longest common substrings \"ac\" and \"ab\", but we are only interested in their length \u2014 2.\n\nIn the second sample the first substring is \"a\", the second one is \"c\". These two substrings don't have any common characters, so the length of their longest common substring is 0.",
    "translation": "## \u9898\u76ee\u63cf\u8ff0\n$Ploycarpus$\u5206\u6790\u4e86\u4e00\u4e2a\u540d\u4e3a$abracadabra$\u7684\u5b57\u7b26\u4e32\uff0c\u8be5\u5b57\u7b26\u4e32\u662f\u7528\u4ee5\u4e0b\u7684\u65b9\u6cd5\u6784\u9020\u7684\uff1a\n\n- \u7b2c\u4e00\u6b65\u65f6\u5b57\u7b26\u4e32\u4ec5\u5305\u542b\u5355\u4e2a\u5b57\u7b26$a$\n- \u5728\u7b2c$k$\u6b65\u4e2d\uff0c\u6211\u4eec\u5c06\u7b2c$k-1$\u6b65\u4e2d\u5f97\u5230\u7684\u5b57\u7b26\u4e32\u590d\u5236\u4e24\u6b21\uff0c\u5e76\u5728\u8fd9\u4e24\u4e2a\u4e32\u4e2d\u95f4\u63d2\u5165\u5b57\u6bcd\u8868\u4e2d\u7684\u7b2c$k$\u4e2a\u5b57\u7b26\u3002$Ploycarpus$\u6240\u4f7f\u7528\u7684\u5b57\u6bcd\u8868\u5305\u62ec\u5c0f\u5199\u7684\u62c9\u4e01\u5b57\u6bcd\u548c\u963f\u62c9\u4f2f\u6570\u5b57\uff0c\u603b\u5171$36$\u4e2a\uff0c\u5206\u522b\u4e3a\uff1a\u7b2c$1$\u4e2a\u662f$a$\uff0c\u7b2c$2$\u4e2a\u662f$b$\uff0c...\uff0c\u7b2c$26$\u4e2a\u662f$z$\uff0c\u7b2c$27$\u4e2a\u662f$0$\uff0c\u7b2c$28$\u4e2a\u662f$1$\uff0c...\uff0c\u7b2c$36$\u4e2a\u662f$9$\u3002\n\n\u6211\u4eec\u6765\u4ed4\u7ec6\u770b\u4e00\u770b\u5b57\u7b26\u4e32\u7684\u6784\u9020\u8fc7\u7a0b\u3002\u5728\u7b2c$2$\u6b65\u4e2d\uff0c$Ploycarpus$\u5c06\u4f1a\u628a\u5b57\u4e32\"a\"\u590d\u5236\u4e24\u6b21\uff0c\u5c06\u5b57\u7b26\"b\"\u63d2\u5728\u4e2d\u95f4\uff0c\u5f97\u5230\u5b57\u4e32$aba$\u3002\u7b2c$3$\u6b65\u4f1a\u53d8\u6210\"abacaba\"\uff0c\u7b2c$4$\u6b65\u4f1a\u53d8\u6210\"abacabadabacaba\"\u3002\u56e0\u6b64\uff0c\u5728\u7b2c$k$\u6b65\u4e2d\uff0c\u5b57\u7b26\u4e32\u4f1a\u5305\u62ec$2^k-1$\u4e2a\u5b57\u7b26\u3002\n\n$Polycarpus$\u5199\u4e0b\u4e86\u7528\u4ee5\u4e0a\u7684\u65b9\u6cd5\u5728$30$\u6b65\u4e4b\u540e\u5f97\u5230\u7684\u5b57\u7b26\u4e32\u7136\u540e\u9009\u62e9\u4e86\u4e24\u4e2a\u5176\u4e2d\u7684\u975e\u7a7a\u5b50\u4e32\u3002\u4f60\u8981\u505a\u7684\u4efb\u52a1\u662f\u627e\u5230\u4e24\u4e2a$Polycarpus$\u9009\u62e9\u7684\u5b57\u4e32\u7684\u6700\u957f\u516c\u5171\u5b50\u4e32\u3002\n\n\u4e00\u4e2a\u5b57\u7b26\u4e32$s=s_1s_2...s_{|s|}$\u7684\u5b50\u4e32$s[i...j](1<=i<=j<=|s|$)\u5373\u4e3a$s_is_{i+1}...s_j$\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5b57\u7b26\u4e32$s=$\"abacaba\u7684\u5b50\u4e32$s[2...4]$\u5c31\u662f$bac$\u3002\u5b57\u7b26\u4e32\u672c\u8eab\u53ef\u4ee5\u662f\u5b83\u7684\u5b50\u4e32\u3002\n\n\u6700\u957f\u516c\u5171\u5b50\u4e32\u5373\u4e3a\u4e24\u4e2a\u5b57\u7b26\u4e32 \u90fd\u5305\u542b\u7684\u6700\u957f\u7684\u5b50\u4e32\u3002\u6bd4\u5982\uff0c\"contest\"\u548c\"test\"\u6700\u957f\u516c\u5171\u5b50\u4e32\u4e3a\"test\"\u3002\u53ef\u80fd\u6709\u591a\u4e2a\u6700\u957f\u516c\u5171\u5b50\u4e32\uff08\u4e0d\u540c\u7ec4\u6210\u540c\u957f\u5ea6\uff09\n## \u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n### \u8f93\u5165\u683c\u5f0f\n\u8f93\u5165\u5305\u62ec\u4e00\u884c\uff0c\u56db\u4e2a\u6574\u6570$l_1$\uff0c$r_1$\uff0c$l_2$\uff0c$r_2(1<=l_i<=r_i<=10^9,i=1,2)$\n\u6570\u5b57\u4e4b\u95f4\u6709\u7a7a\u683c\uff0c\u8868\u793a\u7b2c$i$\u4e2a\u5b57\u7b26\u4e32\uff08\u53ea\u6709\u4e24\u4e2a\uff0c\u4e0a\u9762\u8303\u56f4\u5199\u4e86\uff09\u7684\u8d77\u59cb\u548c\u7ed3\u675f\u4f4d\u7f6e\u3002\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u4f4d\u7f6e\u89c6\u4e3a$1$\n### \u8f93\u51fa\u683c\u5f0f\n\u8f93\u51fa\u4e00\u4e2a\u6570\u5b57\uff0c\u6700\u957f\u516c\u5171\u5b50\u4e32\u7684\u957f\u5ea6\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u8bf7\u8f93\u51fa$0$\u3002\n\n\u6ce8\uff1a$Ploycarpus$\u4f3c\u4e4e\u662f\u4eba\u540d"
}