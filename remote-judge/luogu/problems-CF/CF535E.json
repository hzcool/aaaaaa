{
    "description": "Tavas is a cheerleader in the new sports competition named \"Pashmaks\".\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF535E/0b6da36d56bf0a246e5aa7cfd5aed357a77c0b48.png)This competition consists of two part: swimming and then running. People will immediately start running $ R $ meters after they finished swimming exactly $ S $ meters. A winner is a such person that nobody else finishes running before him/her (there may be more than one winner).\n\nBefore the match starts, Tavas knows that there are $ n $ competitors registered for the match. Also, he knows that $ i $ -th person's swimming speed is $ s_{i} $ meters per second and his/her running speed is $ r_{i} $ meters per second. Unfortunately, he doesn't know the values of $ R $ and $ S $ , but he knows that they are real numbers greater than $ 0 $ .\n\nAs a cheerleader, Tavas wants to know who to cheer up. So, he wants to know all people that might win. We consider a competitor might win if and only if there are some values of $ R $ and $ S $ such that with these values, (s)he will be a winner.\n\nTavas isn't really familiar with programming, so he asked you to help him.",
    "inputFormat": "The first line of input contains a single integer $ n $ ( $ 1<=n<=2\u00d710^{5} $ ).\n\nThe next $ n $ lines contain the details of competitors. $ i $ -th line contains two integers $ s_{i} $ and $ r_{i} $ ( $ 1<=s_{i},r_{i}<=10^{4} $ ).",
    "outputFormat": "In the first and the only line of output, print a sequence of numbers of possible winners in increasing order.",
    "samples": [
        [
            "3\n1 3\n2 2\n3 1\n",
            "1 2 3 \n"
        ],
        [
            "3\n1 2\n1 1\n2 1\n",
            "1 3 \n"
        ]
    ],
    "hint": "",
    "translation": "## \u9898\u76ee\u63cf\u8ff0\n\u73b0\u5728\u6709\u4e24\u4e2a\u6bd4\u8d5b\u9879\u76ee:\u8dd1\u6b65\u548c\u6e38\u6cf3.\u6bcf\u4e00\u4e2a\u4eba\u5728\u8fd9\u4e24\u4e2a\u9879\u76ee\u90fd\u6709\u4e00\u4e2a\u6b63\u6574\u6570\u7684\u503c,\u7b2ci\u4e2a\u4eba\u5206\u522b\u4e3a$a_i,b_i$,\u8868\u793a\u4ed6\u5728\u8fd9\u4e2a\u9879\u76ee\u4e0a\u7684\u901f\u5ea6.\n\u6211\u4eec\u5047\u5b9a\u6e38\u6cf3\u7684\u8ddd\u79bb\u4e3a$S_1$,\u8dd1\u6b65\u7684\u8ddd\u79bb\u4e3a$S_2$(\u90fd\u662f**\u6b63\u5b9e\u6570**),\u77e5\u9053\u6bcf\u4e00\u4e2a\u4eba\u7684\u503c,\u5982\u679c\u5bf9\u4e8e\u7b2ci\u4e2a\u4eba,\u5b58\u5728\u8fd9\u6837\u5b50\u7684$S_1$\u548c$S_2$\u4f7f\u5f97$S_1/a_i+S_2/b_i<=S_1/a_j+S_2/b_j(1<=j<=n)$,\u90a3\u4e48\u5c31\u79f0\u8fd9\u4e2a\u4eba\u53ef\u4ee5\u593a\u51a0.\n\u6c42\u51fa\u6709\u591a\u5c11\u4e2a\u4eba\u53ef\u4ee5\u593a\u51a0.\n\n## \u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n### \u8f93\u5165\u683c\u5f0f\uff1a\n\u7b2c$1$\u884c\u4e00\u4e2a\u6b63\u6574\u6570$n$,\u8868\u793a\u6709$n$\u4e2a\u4eba.\n\u7b2c$2$~$n+1$,\u6bcf\u884c\u6709$2$\u4e2a\u6b63\u6574\u6570\u5206\u522b\u8868\u793a\u6bcf\u4e00\u4e2a\u4eba\u5728\u8dd1\u6b65\u548c\u6e38\u6cf3\u4e0a\u7684\u901f\u5ea6.\n\n### \u8f93\u51fa\u683c\u5f0f\uff1a\n\u4e00\u884c,\u8f93\u51fa\u6240\u6709\u53ef\u4ee5\u593a\u51a0\u7684\u4eba.\n"
}