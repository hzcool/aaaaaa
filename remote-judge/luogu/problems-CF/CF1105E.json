{
    "description": "Hiasat registered a new account in NeckoForces and when his friends found out about that, each one of them asked to use his name as Hiasat's handle.\n\nLuckily for Hiasat, he can change his handle in some points in time. Also he knows the exact moments friends will visit his profile page. Formally, you are given a sequence of events of two types:\n\n- $ 1 $ \u2014 Hiasat can change his handle.\n- $ 2 $ $ s $ \u2014 friend $ s $ visits Hiasat's profile.\n\nThe friend $ s $ will be happy, if each time he visits Hiasat's profile his handle would be $ s $ .\n\nHiasat asks you to help him, find the maximum possible number of happy friends he can get.",
    "inputFormat": "The first line contains two integers $ n $ and $ m $ ( $ 1 \\le n \\le 10^5, 1 \\le m \\le 40 $ ) \u2014 the number of events and the number of friends.\n\nThen $ n $ lines follow, each denoting an event of one of two types:\n\n- $ 1 $ \u2014 Hiasat can change his handle.\n- $ 2 $ $ s $ \u2014 friend $ s $ ( $ 1 \\le |s| \\le 40 $ ) visits Hiasat's profile.\n\nIt's guaranteed, that each friend's name consists only of lowercase Latin letters.\n\nIt's guaranteed, that the first event is always of the first type and each friend will visit Hiasat's profile at least once.",
    "outputFormat": "Print a single integer \u2014 the maximum number of happy friends.",
    "samples": [
        [
            "5 3\n1\n2 motarack\n2 mike\n1\n2 light\n",
            "2\n"
        ],
        [
            "4 3\n1\n2 alice\n2 bob\n2 tanyaromanova\n",
            "1\n"
        ]
    ],
    "hint": "In the first example, the best way is to change the handle to the \"motarack\" in the first event and to the \"light\" in the fourth event. This way, \"motarack\" and \"light\" will be happy, but \"mike\" will not.\n\nIn the second example, you can choose either \"alice\", \"bob\" or \"tanyaromanova\" and only that friend will be happy.",
    "translation": "\u4f60\u5728\u67d0\u793e\u4ea4\u7f51\u7ad9\u4e0a\u9762\u6ce8\u518c\u4e86\u4e00\u4e2a\u65b0\u8d26\u53f7\uff0c\u8fd9\u4e2a\u8d26\u53f7\u6709$n$($n\\leq 10^5$)\u6b21\u8bb0\u5f55\u3002\u8981\u4e48\u5c31\u662f\u4f60\u66f4\u6539\u8fc7\u4e00\u6b21ID\uff0c\u8981\u4e48\u5c31\u662f\u4e00\u4e2aID\u4e3a$s$($|s|\\leq 40$)\u7684\u670b\u53cb\u8bbf\u95ee\u8fc7\u4f60\u7684\u7a7a\u95f4\u3002\r\n\r\n\u4f60\u6709$m$($m\\leq 40$)\u4e2a\u670b\u53cb\u3002\u6bcf\u4e00\u4e2a\u670b\u53cb\u90fd\u4f1a\u8bbf\u95ee\u4f60\u7684\u7a7a\u95f4\u81f3\u5c11\u4e00\u6b21\u3002\u5982\u679c\u8fd9\u4e00\u4e2a\u670b\u53cb\u6bcf\u4e00\u6b21\u8bbf\u95ee\u4f60\u7684\u7a7a\u95f4\u7684\u65f6\u5019\uff0c\u4f60\u7684ID\u548c\u5b83\u7684ID\u4e00\u6837\uff0c\u90a3\u4e48\u4ed6\u5c31\u4f1a\u9ad8\u5174\u3002\r\n\u6c42\u4f60\u6700\u591a\u80fd\u8ba9\u591a\u5c11\u4eba\u9ad8\u5174\u3002\r\n## \u8f93\u5165\u683c\u5f0f\r\n\r\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u4e24\u4e2a\u6b63\u6574\u6570$n$,$m$.\r\n\u63a5\u4e0b\u6765$n$\u884c\u6bcf\u884c\u8868\u793a\u4e00\u6b21\u8bb0\u5f55\uff0c\u6709\u5982\u4e0b\u4e24\u79cd\u683c\u5f0f\uff1a\r\n> $1$\r\n>\r\n> $2$ $s$\r\n\r\n\u5176\u4e2d$1$\u8868\u793a\u4f60\u66f4\u6539\u8fc7\u4e00\u6b21ID\uff0c$2$\u8868\u793a\u4f60\u7684\u4e00\u4e2aID\u4e3a$s$\u7684\u670b\u53cb\u8bbf\u95ee\u8fc7\u4e00\u6b21\u4f60\u7684\u7a7a\u95f4\u3002\r\n\r\n\u4fdd\u8bc1\u7b2c\u4e00\u4e2a\u8bb0\u5f55\u4e00\u5b9a\u662f$1$\u3002\r\n\r\n## \u8f93\u51fa\u683c\u5f0f\r\n\r\n\u4e00\u884c\uff0c\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u8868\u793a\u6700\u591a\u80fd\u8ba9\u591a\u5c11\u4e2a\u670b\u53cb\u9ad8\u5174\u3002"
}