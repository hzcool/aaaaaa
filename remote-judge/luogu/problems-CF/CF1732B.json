{
    "description": "A binary string is a string consisting only of the characters 0 and 1. You are given a binary string $ s_1 s_2 \\ldots s_n $ . It is necessary to make this string non-decreasing in the least number of operations. In other words, each character should be not less than the previous. In one operation, you can do the following:\n\n- Select an arbitrary index $ 1 \\leq i \\leq n $ in the string;\n- For all $ j \\geq i $ , change the value in the $ j $ -th position to the opposite, that is, if $ s_j = 1 $ , then make $ s_j = 0 $ , and vice versa.\n\nWhat is the minimum number of operations needed to make the string non-decreasing?",
    "inputFormat": "Each test consists of multiple test cases. The first line contains an integer $ t $ ( $ 1 \\leq t \\leq 10^4 $ ) \u2014 the number of test cases. The description of test cases follows.\n\nThe first line of each test cases a single integer $ n $ ( $ 1 \\leq n \\leq 10^5 $ ) \u2014 the length of the string.\n\nThe second line of each test case contains a binary string $ s $ of length $ n $ .\n\nIt is guaranteed that the sum of $ n $ over all test cases does not exceed $ 2 \\cdot 10^5 $ .",
    "outputFormat": "For each test case, output a single integer \u2014 the minimum number of operations that are needed to make the string non-decreasing.",
    "samples": [
        [
            "8\n1\n1\n2\n10\n3\n101\n4\n1100\n5\n11001\n6\n100010\n10\n0000110000\n7\n0101010",
            "0\n1\n2\n1\n2\n3\n1\n5"
        ]
    ],
    "hint": "In the first test case, the string is already non-decreasing.\n\nIn the second test case, you can select $ i = 1 $ and then $ s = \\mathtt{01} $ .\n\nIn the third test case, you can select $ i = 1 $ and get $ s = \\mathtt{010} $ , and then select $ i = 2 $ . As a result, we get $ s = \\mathtt{001} $ , that is, a non-decreasing string.\n\nIn the sixth test case, you can select $ i = 5 $ at the first iteration and get $ s = \\mathtt{100001} $ . Then choose $ i = 2 $ , then $ s = \\mathtt{111110} $ . Then we select $ i = 1 $ , getting the non-decreasing string $ s = \\mathtt{000001} $ .",
    "translation": "Feyn \u6709\u4e00\u4e2a\u6570\u5217\uff0c\u8fd9\u4e2a\u6570\u5217\u53ea\u5305\u542b $0$ \u548c $1$\u3002\u5b9a\u4e49\u4e00\u6b21\u64cd\u4f5c\u662f\u9009\u62e9\u4e00\u4e2a\u540e\u7f00\u5e76\u628a\u8fd9\u4e2a\u540e\u7f00\u7684\u6240\u6709\u5143\u7d20\u53d6\u53cd\uff0c\u6c42\u6700\u5c11\u4f7f\u7528\u591a\u5c11\u6b21\u64cd\u4f5c\u53ef\u4ee5\u8ba9\u8fd9\u4e2a\u5e8f\u5217\u5355\u8c03\u4e0d\u964d\u3002"
}