{
    "description": "Shaass has decided to hunt some birds. There are $ n $ horizontal electricity wires aligned parallel to each other. Wires are numbered $ 1 $ to $ n $ from top to bottom. On each wire there are some oskols sitting next to each other. Oskol is the name of a delicious kind of birds in Shaass's territory. Supposed there are $ a_{i} $ oskols sitting on the $ i $ -th wire.\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF294A/73007671070cf7450001e3a2fd81bd3bfb5da54a.png)Sometimes Shaass shots one of the birds and the bird dies (suppose that this bird sat at the $ i $ -th wire). Consequently all the birds on the $ i $ -th wire to the left of the dead bird get scared and jump up on the wire number $ i-1 $ , if there exists no upper wire they fly away. Also all the birds to the right of the dead bird jump down on wire number $ i+1 $ , if there exists no such wire they fly away.\n\nShaass has shot $ m $ birds. You're given the initial number of birds on each wire, tell him how many birds are sitting on each wire after the shots.",
    "inputFormat": "The first line of the input contains an integer $ n $ , $ (1<=n<=100) $ . The next line contains a list of space-separated integers $ a_{1},a_{2},...,a_{n} $ , $ (0<=a_{i}<=100) $ .\n\nThe third line contains an integer $ m $ , $ (0<=m<=100) $ . Each of the next $ m $ lines contains two integers $ x_{i} $ and $ y_{i} $ . The integers mean that for the $ i $ -th time Shaass shoot the $ y_{i} $ -th (from left) bird on the $ x_{i} $ -th wire, $ (1<=x_{i}<=n,1<=y_{i}) $ . It's guaranteed there will be at least $ y_{i} $ birds on the $ x_{i} $ -th wire at that moment.",
    "outputFormat": "On the $ i $ -th line of the output print the number of birds on the $ i $ -th wire.",
    "samples": [
        [
            "5\n10 10 10 10 10\n5\n2 5\n3 13\n2 12\n1 13\n4 6\n",
            "0\n12\n5\n0\n16\n"
        ],
        [
            "3\n2 4 1\n1\n2 2\n",
            "3\n0\n3\n"
        ]
    ],
    "hint": "",
    "translation": "Shaass\u8981\u6253\u4e00\u4e9b\u9e1f\u3002\n\n\u6709 $n$ \u6839\u6c34\u5e73\u7535\u7ebf\u5f7c\u6b64\u5e73\u884c\u6392\u5217\uff0c\u7535\u7ebf\u4ece\u9876\u5230\u5e95\u7f16\u53f7\u4e3a $1$ \u5230 $n$ \uff0c\u6bcf\u6839\u7535\u7ebf\u4e0a\u90fd\u6709\u4e00\u4e9b\u9e1f\u5f7c\u6b64\u76f8\u90bb\uff0c\u7b2c $i$ \u6839\u7535\u7ebf\u4e0a\u6709 $a_i$ \u53ea\u9e1f\u3002\n\n\u5982\u679cShaass\u51fb\u4e2d\u5176\u4e2d\u7684\u4e00\u53ea\u9e1f\uff08\u5047\u8bbe\u8fd9\u53ea\u9e1f\u5728\u7b2c $i$ \u6761\u7535\u7ebf\u4e0a\uff09\uff0c\u5728\u5b83\u5de6\u4fa7\u7684\u9e1f\u4f1a\u8df3\u5411\u7535\u7ebf $i$-1\uff0c\u5728\u5b83\u53f3\u4fa7\u7684\u9e1f\u4f1a\u8df3\u5411\u7535\u7ebf $i$+1 ,\u5982\u679c\u6ca1\u6709\u8fd9\u6837\u7684\u7535\u7ebf\uff0c\u5b83\u4eec\u5c31\u4f1a\u98de\u8d70\u3002\n\nShaass\u6253\u4e86 $m$ \u53ea\u9e1f\uff0c\u544a\u8bc9\u4f60\u6bcf\u6761\u7535\u7ebf\u4e0a\u521d\u59cb\u65f6\u9e1f\u7684\u4e2a\u6570\uff0c\u4f60\u7684\u4efb\u52a1\u662f\u8ba1\u7b97\u51fa $m$ \u6b21\u5c04\u51fb\u540e\u6bcf\u6839\u7535\u7ebf\u4e0a\u6709\u591a\u5c11\u53ea\u9e1f\u3002\n\n**\u8f93\u5165\u8f93\u51fa\u683c\u5f0f:**\n\n\u8f93\u5165\u683c\u5f0f\uff1a\n\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570 $n$, (1<=$n$<=100)\uff0c\u63a5\u4e0b\u6765\u4e00\u884c $n$ \u4e2a\u6574\u6570$a_1,a_2,a_3...a_n$ (0<=$a_i$<=100\uff09.\n\n\u7b2c\u4e09\u884c\u4e00\u4e2a\u6574\u6570 $m$\uff080<=$m$<=100)\uff0c\u63a5\u4e0b\u6765 $m$ \u884c\u6bcf\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 $x_i$ \u548c $y_i$ \uff0c\u610f\u5473\u7740Shaass\u5c04\u51fb\u5728\u7535\u7ebf $x_i$ \u7684\u7b2c $y_i$ \u53ea\uff08\u5de6\u8d77\uff09\u9e1f\uff0c\uff081<=$x_i$<=$n$, 1<=$y_i$\uff09\u3002\u4fdd\u8bc1\u5728\u90a3\u4e00\u65f6\u523b\u7535\u7ebf $x_i$ \u4e0a\u81f3\u5c11\u4f1a\u6709 $y_i$ \u53ea\u9e1f\u3002\n\n\u8f93\u51fa\u683c\u5f0f\uff1a\n\n\u5728\u7b2c $i$ \u884c\u6253\u5370\u7b2c $i$ \u6839\u7535\u7ebf\u4e0a\u9e1f\u7684\u6570\u91cf\u3002"
}