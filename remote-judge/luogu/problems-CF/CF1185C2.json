{
    "description": "The only difference between easy and hard versions is constraints.\n\nIf you write a solution in Python, then prefer to send it in PyPy to speed up execution time.\n\nA session has begun at Beland State University. Many students are taking exams.\n\nPolygraph Poligrafovich is going to examine a group of $ n $ students. Students will take the exam one-by-one in order from $ 1 $ -th to $ n $ -th. Rules of the exam are following:\n\n- The $ i $ -th student randomly chooses a ticket.\n- if this ticket is too hard to the student, he doesn't answer and goes home immediately (this process is so fast that it's considered no time elapses). This student fails the exam.\n- if the student finds the ticket easy, he spends exactly $ t_i $ minutes to pass the exam. After it, he immediately gets a mark and goes home.\n\nStudents take the exam in the fixed order, one-by-one, without any interruption. At any moment of time, Polygraph Poligrafovich takes the answer from one student.\n\nThe duration of the whole exam for all students is $ M $ minutes ( $ \\max t_i \\le M $ ), so students at the end of the list have a greater possibility to run out of time to pass the exam.\n\nFor each student $ i $ , you should count the minimum possible number of students who need to fail the exam so the $ i $ -th student has enough time to pass the exam.\n\nFor each student $ i $ , find the answer independently. That is, if when finding the answer for the student $ i_1 $ some student $ j $ should leave, then while finding the answer for $ i_2 $ ( $ i_2>i_1 $ ) the student $ j $ student does not have to go home.",
    "inputFormat": "The first line of the input contains two integers $ n $ and $ M $ ( $ 1 \\le n \\le 2 \\cdot 10^5 $ , $ 1 \\le M \\le 2 \\cdot 10^7 $ ) \u2014 the number of students and the total duration of the exam in minutes, respectively.\n\nThe second line of the input contains $ n $ integers $ t_i $ ( $ 1 \\le t_i \\le 100 $ ) \u2014 time in minutes that $ i $ -th student spends to answer to a ticket.\n\nIt's guaranteed that all values of $ t_i $ are not greater than $ M $ .",
    "outputFormat": "Print $ n $ numbers: the $ i $ -th number must be equal to the minimum number of students who have to leave the exam in order to $ i $ -th student has enough time to pass the exam.",
    "samples": [
        [
            "7 15\n1 2 3 4 5 6 7\n",
            "0 0 0 0 0 2 3 "
        ],
        [
            "5 100\n80 40 40 40 60\n",
            "0 1 1 2 3 "
        ]
    ],
    "hint": "The explanation for the example 1.\n\nPlease note that the sum of the first five exam times does not exceed $ M=15 $ (the sum is $ 1+2+3+4+5=15 $ ). Thus, the first five students can pass the exam even if all the students before them also pass the exam. In other words, the first five numbers in the answer are $ 0 $ .\n\nIn order for the $ 6 $ -th student to pass the exam, it is necessary that at least $ 2 $ students must fail it before (for example, the $ 3 $ -rd and $ 4 $ -th, then the $ 6 $ -th will finish its exam in $ 1+2+5+6=14 $ minutes, which does not exceed $ M $ ).\n\nIn order for the $ 7 $ -th student to pass the exam, it is necessary that at least $ 3 $ students must fail it before (for example, the $ 2 $ -nd, $ 5 $ -th and $ 6 $ -th, then the $ 7 $ -th will finish its exam in $ 1+3+4+7=15 $ minutes, which does not exceed $ M $ ).",
    "translation": "\u8fd9\u9898\u4e0e$CF1185C1$\u4e0d\u540c\u7684\u53ea\u6709\u6570\u636e\u8303\u56f4~~\u5f53\u7136\u96be\u5ea6\u4e5f\u4f1a\u589e\u5927~~\u3002\r\n\r\n\u5982\u679c\u7528$Python$\u63d0\u4ea4\u7684\u8bdd\uff0c\u90a3\u4e48\u6539\u7528$PyPy$\u4ea4\u53ef\u4ee5\u52a0\u5feb\u8fd0\u884c\u65f6\u95f4\u3002\r\n\r\n\u9898\u610f\u4e0e$CF1185C1$\u76f8\u540c\uff0c\u70b9\u51fb[\u8fd9\u91cc](https://www.luogu.org/problem/CF1185C1)\u67e5\u770b\u9898\u9762\u3002\r\n\r\n\u8be5\u9898\u5f53\u4e2d\uff0c$1\\leqslant n\\leqslant 2*10^5,1\\leqslant\\max t_i\\leqslant m\\leqslant2*10^7$\u3002"
}