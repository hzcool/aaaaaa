{
    "description": "Polycarp invented a new way to encode strings. Let's assume that we have string $ T $ , consisting of lowercase English letters. Let's choose several pairs of letters of the English alphabet in such a way that each letter occurs in at most one pair. Then let's replace each letter in $ T $ with its pair letter if there is a pair letter for it. For example, if you chose pairs (l, r), (p, q) and (a, o), then word \"parallelogram\" according to the given encoding principle transforms to word \"qolorreraglom\".\n\nPolycarpus already has two strings, $ S $ and $ T $ . He suspects that string $ T $ was obtained after applying the given encoding method from some substring of string $ S $ . Find all positions $ m_{i} $ in $ S $ ( $ 1<=m_{i}<=|S|-|T|+1 $ ), such that $ T $ can be obtained fro substring $ S_{mi}S_{mi}+1...\\ S_{mi}+|T|-1 $ by applying the described encoding operation by using some set of pairs of English alphabet letters",
    "inputFormat": "The first line of the input contains two integers, $ |S| $ and $ |T| $ ( $ 1<=|T|<=|S|<=2\u00b710^{5} $ ) \u2014 the lengths of string $ S $ and string $ T $ , respectively.\n\nThe second and third line of the input contain strings $ S $ and $ T $ , respectively. Both strings consist only of lowercase English letters.",
    "outputFormat": "Print number $ k $ \u2014 the number of suitable positions in string $ S $ .\n\nIn the next line print $ k $ integers $ m_{1},m_{2},...,m_{k} $ \u2014 the numbers of the suitable positions in the increasing order.",
    "samples": [
        [
            "11 5\nabacabadaba\nacaba\n",
            "3\n1 3 7\n"
        ],
        [
            "21 13\nparaparallelogramgram\nqolorreraglom\n",
            "1\n5\n"
        ]
    ],
    "hint": "",
    "translation": "# \u9898\u76ee\u63cf\u8ff0\r\n\u5761\u65c5\u7532\u53d1\u660e\u4e86\u4e00\u79cd\u65b0\u7684\u5b57\u7b26\u4e32\u7f16\u7801\u65b9\u6cd5\uff0e  \r\n\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u53d6\u82e5\u5e72\u5bf9\u4e0d\u76f8\u4ea4\u7684\u5c0f\u5199\u5b57\u6bcd\u5bf9(\u6bcf\u4e2a\u5c0f\u5199\u5b57\u6bcd\u81f3\u591a\u51fa\u73b0\u4e00\u6b21),\u7136\u540e\u5bf9\u4e8e\u4e00\u4e2a\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u7684\u5b57\u7b26\u4e32 $T$ \uff0c\u6211\u4eec\u5c06 $T$ \u4e2d\u51fa\u73b0\u5728\u9009\u4e2d\u5b57\u6bcd\u5bf9\u4e2d\u7684\u5b57\u6bcd\u66ff\u6362\u4e3a\u8fd9\u4e2a\u5b57\u6bcd\u5bf9\u4e2d\u7684\u53e6\u4e00\u4e2a\u5b57\u6bcd\uff0e\r\n\r\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a\u6211\u4eec\u9009\u4e2d\u4e86\u4e09\u5bf9\u5b57\u6bcd $(l,r)$ , $(p,q)$ \u548c $(a,o)$ \uff0c\u90a3\u4e48\uff0c\"parallelogram\" \u5c06\u4f1a\u53d8\u4e3a \"qolorreraglom\"  \r\n\r\n\u73b0\u5728\uff0c\u5761\u65c5\u7532\u5df2\u7ecf\u6709\u4e86\u4e24\u4e2a\u5b57\u7b26\u4e32 $S$ \u548c $T$ \uff0e\u4ed6\u60ca\u8bb6\u5730\u53d1\u73b0\uff0c$S$ \u7684\u8bb8\u591a\u5b50\u4e32\u7adf\u7136\u53ef\u4ee5\u901a\u8fc7\u4ed6\u6240\u53d1\u660e\u7684\u65b0\u7f16\u7801\u65b9\u6cd5\u5f97\u5230 $T$\uff0e\u4e8e\u662f\u5761\u65c5\u7532\u60f3\u77e5\u9053\uff0c$S$ \u4e2d\u6709\u591a\u5c11\u4e2a\u5b50\u4e32\u53ef\u4ee5\u7528\u5982\u4e0a\u6240\u63cf\u8ff0\u7684\u5b57\u7b26\u4e32\u7f16\u7801\u65b9\u6cd5\u7f16\u7801\u5f97\u5230 $T$\r\n# \u8f93\u5165\u683c\u5f0f\r\n\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 $n,m$ \uff0c\u8868\u793a $S$ \u548c $T$ \u7684\u4e32\u957f\uff0e  \r\n\u63a5\u4e0b\u6765\u4e24\u884c\u7531\u4e24\u4e2a\u5c0f\u5199\u5b57\u6bcd\u5b57\u7b26\u4e32 $S$ \u548c $T$\r\n# \u8f93\u51fa\u683c\u5f0f\r\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6ee1\u8db3\u6761\u4ef6\u7684\u5b50\u4e32\u4e2a\u6570 $k$  \r\n\u63a5\u4e0b\u6765\u4e00\u884c\u6309\u7167\u5347\u5e8f\u8f93\u51fa $k$ \u4e2a\u6574\u6570\uff0c\u8868\u793a\u6bcf\u4e2a\u5b50\u4e32\u5f00\u59cb\u7684\u4f4d\u7f6e\uff08\u4e0b\u6807\u4ece1\u5f00\u59cb\uff09\r\n\r\n# \u6570\u636e\u8303\u56f4\r\n$n,m\\le2\\times10^5$"
}