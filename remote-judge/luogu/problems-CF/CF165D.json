{
    "description": "Let's define a non-oriented connected graph of $ n $ vertices and $ n-1 $ edges as a beard, if all of its vertices except, perhaps, one, have the degree of 2 or 1 (that is, there exists no more than one vertex, whose degree is more than two). Let us remind you that the degree of a vertex is the number of edges that connect to it.\n\nLet each edge be either black or white. Initially all edges are black.\n\nYou are given the description of the beard graph. Your task is to analyze requests of the following types:\n\n- paint the edge number $ i $ black. The edge number $ i $ is the edge that has this number in the description. It is guaranteed that by the moment of this request the $ i $ -th edge is white\n- paint the edge number $ i $ white. It is guaranteed that by the moment of this request the $ i $ -th edge is black\n- find the length of the shortest path going only along the black edges between vertices $ a $ and $ b $ or indicate that no such path exists between them (a path's length is the number of edges in it)\n\nThe vertices are numbered with integers from $ 1 $ to $ n $ , and the edges are numbered with integers from $ 1 $ to $ n-1 $ .",
    "inputFormat": "The first line of the input contains an integer $ n $ ( $ 2<=n<=10^{5} $ ) \u2014 the number of vertices in the graph. Next $ n-1 $ lines contain edges described as the numbers of vertices $ v_{i} $ , $ u_{i} $ ( $ 1<=v_{i},u_{i}<=n $ , $ v_{i}\u2260u_{i} $ ) connected by this edge. It is guaranteed that the given graph is connected and forms a beard graph, and has no self-loops or multiple edges.\n\nThe next line contains an integer $ m $ ( $ 1<=m<=3\u00b710^{5} $ ) \u2014 the number of requests. Next $ m $ lines contain requests in the following form: first a line contains an integer $ type $ , which takes values \u200b\u200bfrom $ 1 $ to $ 3 $ , and represents the request type.\n\nIf $ type=1 $ , then the current request is a request to paint the edge black. In this case, in addition to number $ type $ the line should contain integer $ id $ ( $ 1<=id<=n-1 $ ), which represents the number of the edge to paint.\n\nIf $ type=2 $ , then the current request is a request to paint the edge white, its form is similar to the previous request.\n\nIf $ type=3 $ , then the current request is a request to find the distance. In this case, in addition to $ type $ , the line should contain two integers $ a $ , $ b $ ( $ 1<=a,b<=n $ , $ a $ can be equal to $ b $ ) \u2014 the numbers of vertices, the distance between which must be found.\n\nThe numbers in all lines are separated by exactly one space. The edges are numbered in the order in which they are given in the input.",
    "outputFormat": "For each request to \"find the distance between vertices $ a $ and $ b $ \" print the result. If there is no path going only along the black edges between vertices $ a $ and $ b $ , then print \"-1\" (without the quotes). Print the results in the order of receiving the requests, separate the numbers with spaces or line breaks.",
    "samples": [
        [
            "3\n1 2\n2 3\n7\n3 1 2\n3 1 3\n3 2 3\n2 2\n3 1 2\n3 1 3\n3 2 3\n",
            "1\n2\n1\n1\n-1\n-1\n"
        ],
        [
            "6\n1 5\n6 4\n2 3\n3 5\n5 6\n6\n3 3 4\n2 5\n3 2 6\n3 1 2\n2 3\n3 3 1\n",
            "3\n-1\n3\n2\n"
        ]
    ],
    "hint": "In the first sample vertices $ 1 $ and $ 2 $ are connected with edge number $ 1 $ , and vertices $ 2 $ and $ 3 $ are connected with edge number $ 2 $ . Before the repainting edge number $ 2 $ each vertex is reachable from each one along the black edges. Specifically, the shortest path between $ 1 $ and $ 3 $ goes along both edges.\n\nIf we paint edge number $ 2 $ white, vertex $ 3 $ will end up cut off from other vertices, that is, no path exists from it to any other vertex along the black edges.",
    "translation": "- \u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u521d\u59cb\u6240\u6709\u8fb9\u90fd\u662f\u9ed1\u8fb9\u3002\n- \u6709 $m$ \u4e2a\u64cd\u4f5c\uff1a\n    1. `1 u`\uff1a\u628a\u7b2c $u$ \u6761\u8fb9\u6539\u6210\u9ed1\u8fb9\u3002\n    2. `2 u`\uff1a\u628a\u7b2c $u$ \u6761\u8fb9\u6539\u6210\u767d\u8fb9\u3002\n    3. `3 u v`\uff1a\u82e5 $u$ \u53f7\u8282\u70b9\u548c $v$ \u53f7\u8282\u70b9\u95f4**\u5b58\u5728**\u767d\u8fb9\uff0c\u8f93\u51fa `-1`\uff0c\u5426\u5219\u8f93\u51fa $u$ \u53f7\u8282\u70b9\u548c $v$ \u53f7\u8282\u70b9\u95f4\u7684\u9ed1\u8fb9\u6570\u3002\n- $2\\le n\\le 10^5$\uff0c$1\\le m\\le 3\\times 10^5$\u3002"
}