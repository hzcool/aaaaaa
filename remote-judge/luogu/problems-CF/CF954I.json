{
    "description": "Suppose you have two strings $ s $ and $ t $ , and their length is equal. You may perform the following operation any number of times: choose two different characters $ c_{1} $ and $ c_{2} $ , and replace every occurence of $ c_{1} $ in both strings with $ c_{2} $ . Let's denote the distance between strings $ s $ and $ t $ as the minimum number of operations required to make these strings equal. For example, if $ s $ is abcd and $ t $ is ddcb, the distance between them is $ 2 $ \u2014 we may replace every occurence of a with b, so $ s $ becomes bbcd, and then we may replace every occurence of b with d, so both strings become ddcd.\n\nYou are given two strings $ S $ and $ T $ . For every substring of $ S $ consisting of $ |T| $ characters you have to determine the distance between this substring and $ T $ .",
    "inputFormat": "The first line contains the string $ S $ , and the second \u2014 the string $ T $ ( $ 1<=|T|<=|S|<=125000 $ ). Both strings consist of lowercase Latin letters from a to f.",
    "outputFormat": "Print $ |S|-|T|+1 $ integers. The $ i $ -th of these integers must be equal to the distance between the substring of $ S $ beginning at $ i $ -th index with length $ |T| $ and the string $ T $ .",
    "samples": [
        [
            "abcdefa\nddcb\n",
            "2 3 3 3 \n"
        ]
    ],
    "hint": "",
    "translation": " - \u7ed9\u5b9a\u5b57\u7b26\u4e32  $S,T$\u3002\n - \u5b9a\u4e49\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u201c\u8ddd\u79bb\u201d\u4e3a\uff1a\u5c06\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6240\u6709\u67d0\u79cd\u5b57\u7b26\u89c6\u4f5c\u53e6\u4e00\u79cd\u5b57\u7b26\uff0c\u4f7f\u5f97\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u7b49\u7684\u6700\u5c11\u6b21\u6570\u3002\n - \u8bd5\u5bf9\u4e8e  $S$ \u7684\u6bcf\u4e00\u4e2a\u957f\u5ea6\u4e3a  $|T|$ \u7684\u5b50\u4e32\uff0c\u6c42\u51fa\u5b83\u548c  $T$ \u7684\u201c\u8ddd\u79bb\u201d\u3002\n -  $1\\leq |S|,|T|\\leq 125000$\uff0c\u6240\u6709\u5b57\u7b26  $\\in\\{a,b,c,d,e,f\\}$\u3002"
}