{
    "description": "You are given a string $ s $ consisting of lowercase Latin characters. In an operation, you can take a character and replace all occurrences of this character with $ \\texttt{0} $ or replace all occurrences of this character with $ \\texttt{1} $ .\n\nIs it possible to perform some number of moves so that the resulting string is an alternating binary string $ ^{\\dagger} $ ?\n\nFor example, consider the string $ \\texttt{abacaba} $ . You can perform the following moves:\n\n- Replace $ \\texttt{a} $ with $ \\texttt{0} $ . Now the string is $ \\color{red}{\\texttt{0}}\\texttt{b}\\color{red}{\\texttt{0}}\\texttt{c}\\color{red}{\\texttt{0}}\\texttt{b}\\color{red}{\\texttt{0}} $ .\n- Replace $ \\texttt{b} $ with $ \\texttt{1} $ . Now the string is $ {\\texttt{0}}\\color{red}{\\texttt{1}}{\\texttt{0}}\\texttt{c}{\\texttt{0}}\\color{red}{\\texttt{1}}{\\texttt{0}} $ .\n- Replace $ \\texttt{c} $ with $ \\texttt{1} $ . Now the string is $ {\\texttt{0}}{\\texttt{1}}{\\texttt{0}}\\color{red}{\\texttt{1}}{\\texttt{0}}{\\texttt{1}}{\\texttt{0}} $ . This is an alternating binary string.\n\n $ ^{\\dagger} $ An alternating binary string is a string of $ \\texttt{0} $ s and $ \\texttt{1} $ s such that no two adjacent bits are equal. For example, $ \\texttt{01010101} $ , $ \\texttt{101} $ , $ \\texttt{1} $ are alternating binary strings, but $ \\texttt{0110} $ , $ \\texttt{0a0a0} $ , $ \\texttt{10100} $ are not.",
    "inputFormat": "The input consists of multiple test cases. The first line contains an integer $ t $ ( $ 1 \\leq t \\leq 100 $ ) \u2014 the number of test cases. The description of the test cases follows.\n\nThe first line of each test case contains an integer $ n $ ( $ 1 \\leq n \\leq 2000 $ ) \u2014 the length of the string $ s $ .\n\nThe second line of each test case contains a string consisting of $ n $ lowercase Latin characters \u2014 the string $ s $ .",
    "outputFormat": "For each test case, output \"YES\" (without quotes) if you can make the string into an alternating binary string, and \"NO\" (without quotes) otherwise.\n\nYou can output the answer in any case (for example, the strings \"yEs\", \"yes\", \"Yes\" and \"YES\" will be recognized as a positive answer).",
    "samples": [
        [
            "8\n7\nabacaba\n2\naa\n1\ny\n4\nbkpt\n6\nninfia\n6\nbanana\n10\ncodeforces\n8\ntestcase",
            "YES\nNO\nYES\nYES\nNO\nYES\nNO\nNO"
        ]
    ],
    "hint": "The first test case is explained in the statement.\n\nIn the second test case, the only possible binary strings you can make are $ \\texttt{00} $ and $ \\texttt{11} $ , neither of which are alternating.\n\nIn the third test case, you can make $ \\texttt{1} $ , which is an alternating binary string.",
    "translation": "\u7ed9\u5b9a\u4e00\u4e32\u957f\u5ea6\u4e3a $n$ \u7684\u5b57\u7b26\u4e32 $s$\uff0c\u4f60\u53ef\u4ee5\u5c06\u6bcf\u79cd\u5b57\u6bcd\u8f6c\u4e3a $0$ \u6216 $1$\uff0c\u5c06\u6240\u6709\u5b57\u6bcd\u8f6c\u6362\u5b8c\u540e\uff0c\u95ee\u80fd\u5426\u5f97\u5230\u4e00\u4e32\u7531 $0$ \u548c $1$ \u4ea4\u66ff\u800c\u6210\u7684\u5b57\u7b26\u4e32\uff08\u5373\u76f8\u90bb\u4e24\u4e2a\u5b57\u7b26\u4e0d\u540c\uff09\u3002\n\nby @[Larryyu](https://www.luogu.com.cn/user/475329)"
}