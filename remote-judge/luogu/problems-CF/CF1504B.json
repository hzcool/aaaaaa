{
    "description": "There is a binary string $ a $ of length $ n $ . In one operation, you can select any prefix of $ a $ with an equal number of $ 0 $ and $ 1 $ symbols. Then all symbols in the prefix are inverted: each $ 0 $ becomes $ 1 $ and each $ 1 $ becomes $ 0 $ .\n\nFor example, suppose $ a=0111010000 $ .\n\n- In the first operation, we can select the prefix of length $ 8 $ since it has four $ 0 $ 's and four $ 1 $ 's: $ [01110100]00\\to [10001011]00 $ .\n- In the second operation, we can select the prefix of length $ 2 $ since it has one $ 0 $ and one $ 1 $ : $ [10]00101100\\to [01]00101100 $ .\n- It is illegal to select the prefix of length $ 4 $ for the third operation, because it has three $ 0 $ 's and one $ 1 $ .\n\nCan you transform the string $ a $ into the string $ b $ using some finite number of operations (possibly, none)?",
    "inputFormat": "The first line contains a single integer $ t $ ( $ 1\\le t\\le 10^4 $ ) \u2014 the number of test cases.\n\nThe first line of each test case contains a single integer $ n $ ( $ 1\\le n\\le 3\\cdot 10^5 $ ) \u2014 the length of the strings $ a $ and $ b $ .\n\nThe following two lines contain strings $ a $ and $ b $ of length $ n $ , consisting of symbols $ 0 $ and $ 1 $ .\n\nThe sum of $ n $ across all test cases does not exceed $ 3\\cdot 10^5 $ .",
    "outputFormat": "For each test case, output \"YES\" if it is possible to transform $ a $ into $ b $ , or \"NO\" if it is impossible. You can print each letter in any case (upper or lower).",
    "samples": [
        [
            "5\n10\n0111010000\n0100101100\n4\n0000\n0000\n3\n001\n000\n12\n010101010101\n100110011010\n6\n000111\n110100",
            "YES\nYES\nNO\nYES\nNO"
        ]
    ],
    "hint": "The first test case is shown in the statement.\n\nIn the second test case, we transform $ a $ into $ b $ by using zero operations.\n\nIn the third test case, there is no legal operation, so it is impossible to transform $ a $ into $ b $ .\n\nIn the fourth test case, here is one such transformation:\n\n- Select the length $ 2 $ prefix to get $ 100101010101 $ .\n- Select the length $ 12 $ prefix to get $ 011010101010 $ .\n- Select the length $ 8 $ prefix to get $ 100101011010 $ .\n- Select the length $ 4 $ prefix to get $ 011001011010 $ .\n- Select the length $ 6 $ prefix to get $ 100110011010 $ .\n\nIn the fifth test case, the only legal operation is to transform $ a $ into $ 111000 $ . From there, the only legal operation is to return to the string we started with, so we cannot transform $ a $ into $ b $ .",
    "translation": "\u6709\u957f\u5ea6\u4e3a $n$ \u7684\u4e24\u4e2a 01 \u5b57\u7b26\u4e32 $a$ \u548c $b$\u3002\u5982\u679c\u5bf9\u4e8e\u4e00\u4e2a $i$\uff0c$a$ \u7684\u533a\u95f4 $[1,i]$ \u4e2d\uff0c$0$ \u7684\u6570\u91cf\u7b49\u4e8e $1$ \u7684\u6570\u91cf\uff0c\u5219\u4f60\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u533a\u95f4\u7684\u6240\u6709 $1$ \u53d8\u6210 $0$\uff0c$0$ \u53d8\u6210 $1$\u3002\u6c42\u662f\u5426\u53ef\u4ee5\u5c06 $a$ \u53d8\u6210 $b$\u3002"
}