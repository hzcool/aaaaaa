{
    "description": "You are given three strings $ s $ , $ t $ and $ p $ consisting of lowercase Latin letters. You may perform any number (possibly, zero) operations on these strings.\n\nDuring each operation you choose any character from $ p $ , erase it from $ p $ and insert it into string $ s $ (you may insert this character anywhere you want: in the beginning of $ s $ , in the end or between any two consecutive characters).\n\nFor example, if $ p $ is aba, and $ s $ is de, then the following outcomes are possible (the character we erase from $ p $ and insert into $ s $ is highlighted):\n\n- aba $ \\rightarrow $ ba, de $ \\rightarrow $ ade;\n- aba $ \\rightarrow $ ba, de $ \\rightarrow $ dae;\n- aba $ \\rightarrow $ ba, de $ \\rightarrow $ dea;\n- aba $ \\rightarrow $ aa, de $ \\rightarrow $ bde;\n- aba $ \\rightarrow $ aa, de $ \\rightarrow $ dbe;\n- aba $ \\rightarrow $ aa, de $ \\rightarrow $ deb;\n- aba $ \\rightarrow $ ab, de $ \\rightarrow $ ade;\n- aba $ \\rightarrow $ ab, de $ \\rightarrow $ dae;\n- aba $ \\rightarrow $ ab, de $ \\rightarrow $ dea;\n\nYour goal is to perform several (maybe zero) operations so that $ s $ becomes equal to $ t $ . Please determine whether it is possible.\n\nNote that you have to answer $ q $ independent queries.",
    "inputFormat": "The first line contains one integer $ q $ ( $ 1 \\le q \\le 100 $ ) \u2014 the number of queries. Each query is represented by three consecutive lines.\n\nThe first line of each query contains the string $ s $ ( $ 1 \\le |s| \\le 100 $ ) consisting of lowercase Latin letters.\n\nThe second line of each query contains the string $ t $ ( $ 1 \\le |t| \\le 100 $ ) consisting of lowercase Latin letters.\n\nThe third line of each query contains the string $ p $ ( $ 1 \\le |p| \\le 100 $ ) consisting of lowercase Latin letters.",
    "outputFormat": "For each query print YES if it is possible to make $ s $ equal to $ t $ , and NO otherwise.\n\nYou may print every letter in any case you want (so, for example, the strings yEs, yes, Yes and YES will all be recognized as positive answer).",
    "samples": [
        [
            "4\nab\nacxb\ncax\na\naaaa\naaabbcc\na\naaaa\naabbcc\nab\nbaaa\naaaaa\n",
            "YES\nYES\nNO\nNO\n"
        ]
    ],
    "hint": "In the first test case there is the following sequence of operation:\n\n1. $ s =  $ ab, $ t =  $ acxb, $ p =  $ cax;\n2. $ s =  $ acb, $ t =  $ acxb, $ p =  $ ax;\n3. $ s =  $ acxb, $ t =  $ acxb, $ p =  $ a.\n\nIn the second test case there is the following sequence of operation:\n\n1. $ s =  $ a, $ t =  $ aaaa, $ p =  $ aaabbcc;\n2. $ s =  $ aa, $ t =  $ aaaa, $ p =  $ aabbcc;\n3. $ s =  $ aaa, $ t =  $ aaaa, $ p =  $ abbcc;\n4. $ s =  $ aaaa, $ t =  $ aaaa, $ p =  $ bbcc.",
    "translation": "## \u9898\u76ee\u63cf\u8ff0\n\n\u4f60\u5c06\u4f1a\u5f97\u5230\u4e09\u4e2a\u7531\u5c0f\u5199\u62c9\u4e01\u5b57\u7b26\u7ec4\u6210\u7684\u5b57\u7b26\u4e32 $s, t, p$\n\n\u6bcf\u4e00\u6b21\u64cd\u4f5c\u4e2d\uff0c\u4f60\u53ef\u4ee5\u5728 $p$ \u4e2d\u4efb\u610f\u9009\u51fa\u4e00\u4e2a\u5b57\u7b26\u5220\u53bb\u5e76\u63d2\u5165\u5728 $s$ \u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u4f4d\u7f6e\n\n\u4f8b\u5982\u5f53 $p$ \u4e3a $\\text{aba}$\uff0c$s$ \u4e3a $\\text{de}$\uff0c\u5219\u4ee5\u4e0b\u64cd\u4f5c\u90fd\u662f\u5408\u6cd5\u7684\n\n$\\text{aba} \\rightarrow \\text{ba}, \\text{de} \\rightarrow \\text{ade}$\n\n$\\text{aba} \\rightarrow \\text{ba}, \\text{de} \\rightarrow \\text{dae}$\n\n$\\text{aba} \\rightarrow \\text{ba}, \\text{de} \\rightarrow \\text{dea}$\n\n$\\text{aba} \\rightarrow \\text{aa}, \\text{de} \\rightarrow \\text{bde}$\n\n$\\text{aba} \\rightarrow \\text{aa}, \\text{de} \\rightarrow \\text{dbe}$\n\n$\\text{aba} \\rightarrow \\text{aa}, \\text{de} \\rightarrow \\text{deb}$\n\n$\\text{aba} \\rightarrow \\text{ab}, \\text{de} \\rightarrow \\text{ade}$\n\n$\\text{aba} \\rightarrow \\text{ab}, \\text{de} \\rightarrow \\text{dae}$\n\n$\\text{aba} \\rightarrow \\text{ab}, \\text{de} \\rightarrow \\text{dea}$\n\n\u4f60\u7684\u4efb\u52a1\u662f\u68c0\u9a8c\u662f\u5426\u80fd\u7ecf\u8fc7\u82e5\u5e72\u6b21\u64cd\u4f5c\uff08\u53ef\u80fd\u96f6\u6b21\uff09\uff0c\u5c06 $s$ \u53d8\u4e3a $t$\n\n## \u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n\n### \u8f93\u5165\u683c\u5f0f\uff1a\n\n\u591a\u7ec4\u6570\u636e\n\n\u7b2c\u4e00\u884c\u5305\u62ec\u4e00\u4e2a\u6b63\u6574\u6570 $q(1\\leq q \\leq 100)$\uff0c\u63cf\u8ff0\u4e86\u6570\u636e\u7684\u7ec4\u6570\n\n\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u6570\u636e\uff0c\u90fd\u4f1a\u7531\u4e09\u6392\u7ec4\u6210\n\n\u7b2c\u4e00\u6392\u4e3a\u7531\u5c0f\u5199\u62c9\u4e01\u5b57\u7b26\u7ec4\u6210\u7684\u5b57\u7b26\u4e32 $s(1 \\leq |s| \\leq 100)$\n\n\u7b2c\u4e8c\u6392\u4e3a\u7531\u5c0f\u5199\u62c9\u4e01\u5b57\u7b26\u7ec4\u6210\u7684\u5b57\u7b26\u4e32 $t(1 \\leq |t| \\leq 100)$\n\n\u7b2c\u4e09\u6392\u4e3a\u7531\u5c0f\u5199\u62c9\u4e01\u5b57\u7b26\u7ec4\u6210\u7684\u5b57\u7b26\u4e32 $p(1\\leq |p| \\leq 100)$\n\n### \u8f93\u51fa\u683c\u5f0f\n\n\u5982\u679c\u80fd\u591f\u5bf9 $s$ \u8fdb\u884c\u82e5\u5e72\u6b21\u64cd\u4f5c\u4f7f\u5176\u53d8\u4e3a $t$\uff0c\u8bf7\u8f93\u51fa $\\text{YES}$\uff0c\u5426\u5219\u8f93\u51fa $\\text{NO}$\n"
}