{
    "description": "Polycarpus has $ t $ safes. The password for each safe is a square matrix consisting of decimal digits '0' ... '9' (the sizes of passwords to the safes may vary). Alas, Polycarpus has forgotten all passwords, so now he has to restore them.\n\nPolycarpus enjoys prime numbers, so when he chose the matrix passwords, he wrote a prime number in each row of each matrix. To his surprise, he found that all the matrices turned out to be symmetrical (that is, they remain the same after transposition). Now, years later, Polycarp was irritated to find out that he remembers only the prime numbers $ p_{i} $ , written in the first lines of the password matrices.\n\nFor each safe find the number of matrices which can be passwords to it.\n\nThe number of digits in $ p_{i} $ determines the number of rows and columns of the $ i $ -th matrix. One prime number can occur in several rows of the password matrix or in several matrices. The prime numbers that are written not in the first row of the matrix may have leading zeros.",
    "inputFormat": "The first line of the input contains an integer $ t $ ( $ 1<=t<=30 $ ) \u2014 the number of safes. Next $ t $ lines contain integers $ p_{i} $ ( $ 10<=p_{i}<=99999 $ ), $ p_{i} $ is a prime number written in the first row of the password matrix for the $ i $ -th safe. All $ p_{i} $ 's are written without leading zeros.",
    "outputFormat": "Print $ t $ numbers, the $ i $ -th of them should be the number of matrices that can be a password to the $ i $ -th safe. Print the numbers on separate lines.",
    "samples": [
        [
            "4\n11\n239\n401\n9001\n",
            "4\n28\n61\n2834\n"
        ]
    ],
    "hint": "Here is a possible password matrix for the second safe:\n\n`<br></br>239<br></br>307<br></br>977<br></br>`Here is a possible password matrix for the fourth safe:\n\n`<br></br>9001<br></br>0002<br></br>0002<br></br>1223 <br></br>`",
    "translation": "Polycarpus \u7684\u4fdd\u9669\u7bb1\n\n\u9898\u76ee\u63cf\u8ff0\nPolycarpus \u6709 t \u4e2a\u4fdd\u9669\u7bb1\u3002\n\u6bcf\u4e2a\u4fdd\u9669\u7bb1\u7684\u5bc6\u7801\u90fd\u662f\u7531\u5341\u8fdb\u5236\u6570\u5b57'0'...'9'\u7ec4\u6210\u7684\u6b63\u65b9\u5f62\u77e9\u9635(\u6bcf\u4e2a\u4fdd\u9669\u7bb1\u77e9\u9635\u5bc6\u7801\u7684\u5927\u5c0f\u53ef\u80fd\u4e0d\u540c)\u3002\u4e0d\u5e78\u7684\u662f\uff0cPolycarpus \u5fd8\u8bb0\u4e86\u6240\u6709\u7684\u5bc6\u7801\uff0c\u6240\u4ee5\u73b0\u5728\u4ed6\u9700\u8981\u627e\u56de\u5bc6\u7801\u3002\nPolycarpus \u559c\u6b22\u8d28\u6570(\u7d20\u6570)\uff0c\u6240\u4ee5\u5f53\u4ed6\u8bbe\u7f6e\u77e9\u9635\u5bc6\u7801\u65f6\uff0c\u4ed6\u6bcf\u4e2a\u5728\u77e9\u9635\u7684\u6bcf\u4e00\u884c\u90fd\u5199\u4e0b\u4e86\u4e00\u4e2a\u8d28\u6570\u3002\u4ee4\u4ed6\u5403\u60ca\u7684\u662f\uff0c\u8fd9\u4e9b\u77e9\u9635\u7adf\u7136\u662f\u5bf9\u79f0\u7684(\u5373\u4ea4\u6362\u4f4d\u7f6e\u540e\u77e9\u9635\u4e0d\u53d8)\u3002\u73b0\u5728\uff0c\u8fc7\u4e86\u51e0\u5e74\uff0cPolycarpus \u751f\u6c14\u5730\u53d1\u73b0\u81ea\u5df1\u53ea\u80fd\u8bb0\u5f97\u8d28\u6570 Pi \uff0c\u90a3\u4e9b\u5199\u5728\u6240\u6709\u5bc6\u7801\u77e9\u9635\u7684\u7b2c\u4e00\u884c\u7684\u8d28\u6570\u3002\n\t\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4fdd\u9669\u7bb1\uff0c\u627e\u5230\u5bc6\u7801\u77e9\u9635\u4e2d\u7684\u6570\u5b57\uff0c\u5c31\u627e\u5230\u4e86\u5bc6\u7801\u3002\n\t\u8d28\u6570 Pi \u7684\u4f4d\u6570\u51b3\u5b9a\u4e86\u7b2c i \u4e2a\u5bc6\u7801\u77e9\u9635\u7684\u884c\u6570\u548c\u5217\u6570\u3002\u4e00\u4e2a\u8d28\u6570\u53ef\u80fd\u51fa\u73b0\u4e8e\u5bc6\u7801\u77e9\u9635\u7684\u51e0\u884c\u4e2d\u6216\u51e0\u4e2a\u5bc6\u7801\u77e9\u9635\u4e2d\u3002\u90a3\u4e9b\u6ca1\u6709\u5199\u5728\u5bc6\u7801\u77e9\u9635\u7b2c\u4e00\u884c\u7684\u8d28\u6570\u53ef\u80fd\u5177\u6709\u524d\u5bfc\u96f6(\u5373\u6570\u5b57\u524d\u9762\u52a0\u6709\u20190\u2019)\u3002\n\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n\u8f93\u5165\u683c\u5f0f\n\t\u8f93\u5165\u7684\u7b2c\u4e00\u884c\u5305\u62ec\u4e00\u4e2a\u6574\u6570 t (1<=t<=30) \u2014\u2014 \u4fdd\u9669\u7bb1\u7684\u6570\u91cf\u3002\u4e0b\u9762 t \u884c\u6bcf\u5305\u542b\u4e00\u4e2a\u6574\u6570 Pi (10<=Pi<=99999)\uff0c Pi \u662f\u7b2c i \u4e2a\u4fdd\u9669\u7bb1\u5bc6\u7801\u77e9\u9635\u7b2c\u4e00\u884c\u7684\u90a3\u4e2a\u8d28\u6570\u3002\u6240\u6709 Pi \u90fd\u6ca1\u6709\u524d\u5bfc\u96f6\u3002\n\t\u8f93\u51fa\u683c\u5f0f\n\t\u8f93\u51fa t \u4e2a\u6570\u5b57\uff0c\u5176\u4e2d\u7b2c i \u4e2a\u6570\u5b57\u662f\u7b2c i \u4e2a\u4fdd\u9669\u7bb1\u53ef\u4ee5\u4f5c\u4e3a\u6b64\u4fdd\u9669\u7bb1\u77e9\u9635\u5bc6\u7801\u7684\u77e9\u9635\u6570\u91cf\u3002\u6bcf\u884c\u8f93\u51fa\u4e00\u4e2a\u6570\u5b57\u3002\n\u8bf4\u660e\n\t\u8fd9\u662f\u6837\u4f8b\u4e2d\u7b2c\u4e8c\u4e2a\u4fdd\u9669\u7bb1\u5bc6\u7801\u77e9\u9635\u7684\u6240\u6709\u53ef\u80fd\uff1a<br></br>239<br></br>307<br></br>977<br></br>\n\t\u8fd9\u662f\u6837\u4f8b\u4e2d\u7b2c\u56db\u4e2a\u4fdd\u9669\u7bb1\u5bc6\u7801\u77e9\u9635\u7684\u6240\u6709\u53ef\u80fd\uff1a<br></br>9001<br></br>0002<br></br>0002<br></br>1223 <br></br>\n"
}