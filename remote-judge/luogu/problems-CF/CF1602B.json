{
    "description": "Black is gifted with a Divine array $ a $ consisting of $ n $ ( $ 1 \\le n \\le 2000 $ ) integers. Each position in $ a $ has an initial value. After shouting a curse over the array, it becomes angry and starts an unstoppable transformation.\n\nThe transformation consists of infinite steps. Array $ a $ changes at the $ i $ -th step in the following way: for every position $ j $ , $ a_j $ becomes equal to the number of occurrences of $ a_j $ in $ a $ before starting this step.\n\nHere is an example to help you understand the process better:\n\n Initial array: $ 2 $ $ 1 $ $ 1 $ $ 4 $ $ 3 $ $ 1 $ $ 2 $ After the $ 1 $ -st step: $ 2 $ $ 3 $ $ 3 $ $ 1 $ $ 1 $ $ 3 $ $ 2 $ After the $ 2 $ -nd step: $ 2 $ $ 3 $ $ 3 $ $ 2 $ $ 2 $ $ 3 $ $ 2 $ After the $ 3 $ -rd step: $ 4 $ $ 3 $ $ 3 $ $ 4 $ $ 4 $ $ 3 $ $ 4 $ ......In the initial array, we had two $ 2 $ -s, three $ 1 $ -s, only one $ 4 $ and only one $ 3 $ , so after the first step, each element became equal to the number of its occurrences in the initial array: all twos changed to $ 2 $ , all ones changed to $ 3 $ , four changed to $ 1 $ and three changed to $ 1 $ .\n\nThe transformation steps continue forever.\n\nYou have to process $ q $ queries: in each query, Black is curious to know the value of $ a_x $ after the $ k $ -th step of transformation.",
    "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $ t $ ( $ 1 \\le t \\le 1000 $ ). Description of the test cases follows.\n\nThe first line of each test case contains an integer $ n $ ( $ 1 \\le n \\le 2000 $ ) \u2014 the size of the array $ a $ .\n\nThe second line of each test case contains $ n $ integers $ a_1, a_2, \\dots, a_n $ ( $ 1 \\le a_i \\le n $ ) \u2014 the initial values of array $ a $ .\n\nThe third line of each test case contains a single integer $ q $ ( $ 1 \\le q \\le 100\\,000 $ ) \u2014 the number of queries.\n\nNext $ q $ lines contain the information about queries \u2014 one query per line. The $ i $ -th line contains two integers $ x_i $ and $ k_i $ ( $ 1 \\le x_i \\le n $ ; $ 0 \\le k_i \\le 10^9 $ ), meaning that Black is asking for the value of $ a_{x_i} $ after the $ k_i $ -th step of transformation. $ k_i = 0 $ means that Black is interested in values of the initial array.\n\nIt is guaranteed that the sum of $ n $ over all test cases doesn't exceed $ 2000 $ and the sum of $ q $ over all test cases doesn't exceed $ 100\\,000 $ .",
    "outputFormat": "For each test case, print $ q $ answers. The $ i $ -th of them should be the value of $ a_{x_i} $ after the $ k_i $ -th step of transformation. It can be shown that the answer to each query is unique.",
    "samples": [
        [
            "2\n7\n2 1 1 4 3 1 2\n4\n3 0\n1 1\n2 2\n6 1\n2\n1 1\n2\n1 0\n2 1000000000",
            "1\n2\n3\n3\n1\n2"
        ]
    ],
    "hint": "The first test case was described ih the statement. It can be seen that:\n\n1. $ k_1 = 0 $ (initial array): $ a_3 = 1 $ ;\n2. $ k_2 = 1 $ (after the $ 1 $ -st step): $ a_1 = 2 $ ;\n3. $ k_3 = 2 $ (after the $ 2 $ -nd step): $ a_2 = 3 $ ;\n4. $ k_4 = 1 $ (after the $ 1 $ -st step): $ a_6 = 3 $ .\n\nFor the second test case,\n\nInitial array: $ 1 $ $ 1 $ After the $ 1 $ -st step: $ 2 $ $ 2 $ After the $ 2 $ -nd step: $ 2 $ $ 2 $ ......It can be seen that:\n\n1. $ k_1 = 0 $ (initial array): $ a_1 = 1 $ ;\n2. $ k_2 = 1000000000 $ : $ a_2 = 2 $ ;",
    "translation": "### \u9898\u76ee\u63cf\u8ff0\n\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u4e00\u6b21\u8f6c\u6362\u662f\u5c06\u4e00\u4e2a\u6570\u53d8\u6210\u8fd9\u4e2a\u6570\u5728\u8fd9\u4e2a\u5e8f\u5217\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n\u5e8f\u5217 $\\{2,1,1,4,3,1,2\\}$ \u4e2d\uff0c$2$ \u51fa\u73b0 $2$ \u6b21\uff0c$1$ \u51fa\u73b0 $3$ \u6b21\uff0c$3$ \u548c $4$ \u51fa\u73b0 $1$ \u6b21\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5e8f\u5217\u8fdb\u884c\u4e00\u6b21\u8f6c\u6362\u4e4b\u540e\u5c31\u53d8\u6210\u4e86 $\\{2,3,3,1,1,3,2\\}$\uff0c\u540c\u7406\uff0c\u8fdb\u884c\u4e24\u6b21\u8f6c\u6362\u540e\u662f $\\{2,3,3,2,2,3,2\\}$\uff0c\u8fdb\u884c\u4e09\u6b21\u8f6c\u6362\u540e\u662f $\\{4,3,3,4,4,3,4\\}$\u3002\n\n\u6709 $q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7b2c $x$ \u4e2a\u4f4d\u7f6e\u7684\u5143\u7d20\u7ecf\u8fc7 $k$ \u6b21\u8f6c\u6362\u4e4b\u540e\u662f\u4ec0\u4e48\u3002\n### \u8f93\u5165\u683c\u5f0f\n\u7b2c\u4e00\u884c\u8f93\u5165\u4e00\u4e2a\u6b63\u6574\u6570 $t$ \u8868\u793a\u6570\u636e\u7ec4\u6570\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u6570\u636e\uff1a\n- \u7b2c\u4e00\u884c\u8f93\u5165\u4e00\u4e2a\u6b63\u6574\u6570 $n$ \u8868\u793a\u5e8f\u5217\u957f\u5ea6\u3002\n- \u7b2c\u4e8c\u884c\u8f93\u5165 $n$ \u4e2a\u6b63\u6574\u6570 $a_i$ \u8868\u793a\u521d\u59cb\u5e8f\u5217\u3002\n- \u7b2c\u4e09\u884c\u8f93\u5165\u4e00\u4e2a\u6b63\u6574\u6570 $q$ \u8868\u793a\u8be2\u95ee\u6b21\u6570\u3002\n- \u63a5\u4e0b\u6765 $q$ \u884c\u6bcf\u884c\u4e24\u4e2a\u6574\u6570 $x,k$ \u8868\u793a\u4e00\u6b21\u8be2\u95ee\uff0c\u542b\u4e49\u89c1\u9898\u76ee\u63cf\u8ff0\u3002\n### \u8f93\u51fa\u683c\u5f0f\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee\u8f93\u51fa\u4e00\u884c\u4e00\u4e2a\u6b63\u6574\u6570\u8868\u793a\u7b54\u6848\u3002\n### \u6570\u636e\u8303\u56f4\n$1\\le t\\le1000,1\\le\\sum n\\le2000,1\\le a_i,x\\le n,1\\le\\sum q\\le10^5\uff0c0\\le k\\le10^9$\u3002"
}