{
    "description": "Dreamoon likes to play with sets, integers and ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF476D/9ecd8274ff74f04a3c110790f7ff835d44a6c25f.png). ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF476D/8ea8f21b5c14716258752d62a549551fbdbf04b7.png) is defined as the largest positive integer that divides both $ a $ and $ b $ .\n\nLet $ S $ be a set of exactly four distinct integers greater than $ 0 $ . Define $ S $ to be of rank $ k $ if and only if for all pairs of distinct elements $ s_{i} $ , $ s_{j} $ from $ S $ , ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF476D/dd0b12b681c32c8696e149f43e49ae7211e0b09c.png).\n\nGiven $ k $ and $ n $ , Dreamoon wants to make up $ n $ sets of rank $ k $ using integers from $ 1 $ to $ m $ such that no integer is used in two different sets (of course you can leave some integers without use). Calculate the minimum $ m $ that makes it possible and print one possible solution.",
    "inputFormat": "The single line of the input contains two space separated integers $ n $ , $ k $ ( $ 1<=n<=10000,1<=k<=100 $ ).",
    "outputFormat": "On the first line print a single integer \u2014 the minimal possible $ m $ .\n\nOn each of the next $ n $ lines print four space separated integers representing the $ i $ -th set.\n\nNeither the order of the sets nor the order of integers within a set is important. If there are multiple possible solutions with minimal $ m $ , print any one of them.",
    "samples": [
        [
            "1 1\n",
            "5\n1 2 3 5\n"
        ],
        [
            "2 2\n",
            "22\n2 4 6 22\n14 18 10 16\n"
        ]
    ],
    "hint": "For the first example it's easy to see that set $ {1,2,3,4} $ isn't a valid set of rank 1 since ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF476D/b50d3b1ab922da09703e2c03eee592786ae2b8c7.png).",
    "translation": "\u8f93\u5165$n,k$\uff0c\u8f93\u51fa$n$\u4e2a\u56db\u5143\u7ec4\u3002\n\n\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\n- \u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u56db\u5143\u7ec4\uff0c\u5176\u4e2d\u4efb\u610f\u4e24\u4e2a\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\u662f$k$\n- \u6bcf\u4e2a\u6570\u4ec5\u5728\u6240\u6709\u7684\u56db\u5143\u7ec4\u5185\u51fa\u73b0\u4e00\u6b21\n\n\u8981\u6c42$n$\u4e2a\u56db\u5143\u7ec4\u5185\u6700\u5927\u7684\u6570\u6700\u5c0f\u3002\n\n\u7b2c\u4e00\u884c\u8f93\u51fa\u6700\u5927\u7684\u6570\uff0c\u4e0b\u9762$n$\u884c\u8f93\u51fa\u56db\u5143\u7ec4\u3002\n\n$1\\le n\\le 10000$\n\n$1\\le k\\le 100$\n\n\u8f93\u51fa\u56db\u5143\u7ec4\u65f6\uff0c\u987a\u5e8f\u548c\u6574\u6570\u7684\u987a\u5e8f\u90fd\u4e0d\u91cd\u8981\uff0c\u4f60\u53ef\u4ee5\u4efb\u610f\u8f93\u51fa\u3002"
}