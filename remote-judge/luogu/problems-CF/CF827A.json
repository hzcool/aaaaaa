{
    "description": "Ivan had string $ s $ consisting of small English letters. However, his friend Julia decided to make fun of him and hid the string $ s $ . Ivan preferred making a new string to finding the old one.\n\nIvan knows some information about the string $ s $ . Namely, he remembers, that string $ t_{i} $ occurs in string $ s $ at least $ k_{i} $ times or more, he also remembers exactly $ k_{i} $ positions where the string $ t_{i} $ occurs in string $ s $ : these positions are $ x_{i,1},x_{i,2},...,x_{i,ki} $ . He remembers $ n $ such strings $ t_{i} $ .\n\nYou are to reconstruct lexicographically minimal string $ s $ such that it fits all the information Ivan remembers. Strings $ t_{i} $ and string $ s $ consist of small English letters only.",
    "inputFormat": "The first line contains single integer $ n $ ( $ 1<=n<=10^{5} $ ) \u2014 the number of strings Ivan remembers.\n\nThe next $ n $ lines contain information about the strings. The $ i $ -th of these lines contains non-empty string $ t_{i} $ , then positive integer $ k_{i} $ , which equal to the number of times the string $ t_{i} $ occurs in string $ s $ , and then $ k_{i} $ distinct positive integers $ x_{i,1},x_{i,2},...,x_{i,ki} $ in increasing order \u2014 positions, in which occurrences of the string $ t_{i} $ in the string $ s $ start. It is guaranteed that the sum of lengths of strings $ t_{i} $ doesn't exceed $ 10^{6} $ , $ 1<=x_{i,j}<=10^{6} $ , $ 1<=k_{i}<=10^{6} $ , and the sum of all $ k_{i} $ doesn't exceed $ 10^{6} $ . The strings $ t_{i} $ can coincide.\n\nIt is guaranteed that the input data is not self-contradictory, and thus at least one answer always exists.",
    "outputFormat": "Print lexicographically minimal string that fits all the information Ivan remembers.",
    "samples": [
        [
            "3\na 4 1 3 5 7\nab 2 1 5\nca 1 4\n",
            "abacaba\n"
        ],
        [
            "1\na 1 3\n",
            "aaa\n"
        ],
        [
            "3\nab 1 1\naba 1 3\nab 2 3 5\n",
            "ababab\n"
        ]
    ],
    "hint": "",
    "translation": "## \u9898\u76ee\u63cf\u8ff0\r\n\r\nIvan\u6709\u4e00\u4e2a\u53ea\u5305\u542b\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7684\u5b57\u7b26\u4e32s\u3002\u7136\u800c\u4ed6\u7684\u670b\u53cbJulia\u4e3a\u4e86\u6349\u5f04\u4ed6\u85cf\u8d77\u4e86\u5b57\u7b26\u4e32s\u3002\r\n\u76f8\u6bd4\u8d77\u627e\u56de\u539f\u6765\u7684\u5b57\u7b26\u4e32\uff0cIvan\u66f4\u503e\u5411\u4e8e\u9020\u4e00\u4e2a\u65b0\u7684\u3002\r\n \r\nIvan\u77e5\u9053\u4e00\u4e9b\u6709\u5173\u4e8e\u5b57\u7b26\u4e32s\u7684\u4fe1\u606f\u3002\u8fd9\u610f\u5473\u7740\u4ed6\u8bb0\u5f97\u5b57\u7b26\u4e32$t_{i}$\u5728\u5b57\u7b26\u4e32s\u4e2d\u81f3\u5c11\u51fa\u73b0\u4e86$k_{i}$\u6b21\uff0c\u4ee5\u53ca$k_{i}$\u4e2a$t_{i}$\u5728s\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e--$x_{i,1}$\uff0c$x_{i,2}$\uff0c$x_{i,3}$\uff0c$x_{i,4}$\uff0c\u2026\uff0c$x_{i,k_{i}}$\u3002\u4ed6\u8bb0\u5f97n\u4e2a\u8fd9\u6837\u7684\u5b57\u7b26\u4e32$t_{i}$\u3002\r\n\r\n \u4f60\u8981\u91cd\u5efa\u51fa\u4e00\u4e2a\u7b26\u5408Ivan\u8bb0\u5f97\u7684\u6240\u6709\u4fe1\u606f\u7684\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u6709\u591a\u4e2a\u7b54\u6848\u7b26\u5408\u8981\u6c42\uff0c\u53d6\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u4e00\u4e2a\u3002\u5b57\u7b26\u4e32$t_{i}$\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002\r\n \r\n ## \u8f93\u5165\u8f93\u51fa\u683c\u5f0f\r\n \r\n ### \u8f93\u5165\u683c\u5f0f\uff1a\r\n\u7b2c\u4e00\u884c\u5305\u62ec\u4e00\u4e2a\u6574\u6570n(1<=n<=$10^{5}$),\u4ee3\u8868\u4e86Ivan\u6240\u8bb0\u5f97\u7684\u5b57\u7b26\u4e32\u6570\u91cf\u3002\r\n\r\n\u4e0b\u9762\u7684n\u884c\u5305\u62ec\u6709\u5173\u4e8e\u8fd9\u4e9b\u5b57\u7b26\u4e32\u7684\u4fe1\u606f\u3002\u7b2ci+1\u5305\u62ec\u4e00\u4e2a\u975e\u7a7a\u5b57\u7b26\u4e32$t_{i}$\uff0c\u4e00\u4e2a\u6b63\u6574\u6570$k_{i}$(\u4ee3\u8868\u4e86$t_{i}$\u5728\u5b57\u7b26\u4e32s\u4e2d\u51fa\u73b0\u7684\u6b21\u6570)\uff0c\u7136\u540e\u662f$k_{i}$\u4e2a\u6b63\u6574\u6570$x_{i,1}$\uff0c$x_{i,2}$\uff0c$x_{i,3}$\uff0c$x_{i,4}$\uff0c\u2026\uff0c$x_{i,k_{i}}$\uff08\u5347\u5e8f\u8f93\u5165\uff09\uff0c\u4ee3\u8868\u4e86$t_{i}$\u5728\u5b57\u7b26\u4e32s\u4e2d\u51fa\u73b0\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002\r\n\r\n\u4fdd\u8bc1\u5b57\u7b26\u4e32$t_{i}$\u7684\u957f\u5ea6\u4e4b\u548c\u4e0d\u8d85\u8fc7$10^{6}$\uff0c1<=$x_{i,j}$<=$10^{6}$\uff0c1<=$k_{i}$<=$10^{6}$\uff0c\u4e14$k_{i}$\u7684\u548c\u4e0d\u8d85\u8fc7$10^{6}$\u3002\u53ef\u80fd\u5b58\u5728\u76f8\u540c\u7684$t_{i}$\u3002\r\n\r\n\u6570\u636e\u4fdd\u8bc1\u4e00\u5b9a\u6709\u89e3\u3002\r\n\r\n### \u8f93\u51fa\u683c\u5f0f\uff1a\r\n\r\n\u8f93\u51fa\u6ee1\u8db3\u6761\u4ef6\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5b57\u7b26\u4e32\u3002"
}