{
    "description": "Ari the monster always wakes up very early with the first ray of the sun and the first thing she does is feeding her squirrel.\n\nAri draws a regular convex polygon on the floor and numbers it's vertices $ 1,2,...,n $ in clockwise order. Then starting from the vertex $ 1 $ she draws a ray in the direction of each other vertex. The ray stops when it reaches a vertex or intersects with another ray drawn before. Ari repeats this process for vertex $ 2,3,...,n $ (in this particular order). And then she puts a walnut in each region inside the polygon.\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF592B/d684226c6afbbf2809548ec3b0c2067be095c4af.png)Ada the squirrel wants to collect all the walnuts, but she is not allowed to step on the lines drawn by Ari. That means Ada have to perform a small jump if she wants to go from one region to another. Ada can jump from one region P to another region Q if and only if P and Q share a side or a corner.\n\nAssuming that Ada starts from outside of the picture, what is the minimum number of jumps she has to perform in order to collect all the walnuts?",
    "inputFormat": "The first and only line of the input contains a single integer $ n $ ( $ 3<=n<=54321 $ ) - the number of vertices of the regular polygon drawn by Ari.",
    "outputFormat": "Print the minimum number of jumps Ada should make to collect all the walnuts. Note, that she doesn't need to leave the polygon after.",
    "samples": [
        [
            "5\n",
            "9\n"
        ],
        [
            "3\n",
            "1\n"
        ]
    ],
    "hint": "One of the possible solutions for the first sample is shown on the picture above.",
    "translation": "### \u9898\u76ee\u6982\u8981\n\n\u6709\u4e00\u4e2a\u6b63n\u591a\u8fb9\u5f62\uff0c\u6bcf\u4e2a\u9876\u70b9\u4ece1\u5230n\u6807\u53f7\uff0c\u4ece\u9876\u70b91\u5f00\u59cb\uff0c\u5411\u6bcf\u4e2a\u9876\u70b9\u7684\u65b9\u5411\u4e0a\u7ed8\u5236\u4e00\u6761\u7ebf\u3002\u7ebf\u5230\u8fbe\u9876\u70b9\u6216\u4e0e\u4e4b\u524d\u7ed8\u5236\u7684\u53e6\u4e00\u6761\u7ebf\u76f8\u4ea4\u65f6\u505c\u6b62\u3002\u4f60\u9700\u8981\u7ecf\u8fc7\u6240\u6709\u7ebf\u5212\u5206\u6210\u7684\u533a\u57df\uff0c\u5f53\u4f60\u5728\u4e00\u4e2a\u533a\u57df\u65f6\uff0c\u5f53\u4e14\u4ec5\u5f53\u53e6\u4e00\u4e2a\u533a\u57df\u4e0e\u4f60\u6240\u5728\u7684\u533a\u57df\u5171\u8fb9\u65f6\uff0c\u4f60\u624d\u80fd\u5230\u8fd9\u4e2a\u533a\u57df\uff0c\u6c42\u4f60\u6700\u5c11\u9700\u8981\u7a7f\u8fc7\u51e0\u6b21\u6240\u753b\u7684\u7ebf\u3002\n\n### \u8f93\u5165\u683c\u5f0f\n\n\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793an\u3002\n\n### \u8f93\u51fa\u683c\u5f0f\n\n\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5c11\u7a7f\u8fc7\u753b\u7684\u7ebf\u7684\u6b21\u6570\u3002"
}