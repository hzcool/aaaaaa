{
    "description": "We call a function good if its domain of definition is some set of integers and if in case it's defined in $ x $ and $ x-1 $ , $ f(x) = f(x-1) + 1 $ or $ f(x) = f(x-1) $ .\n\nTanya has found $ n $ good functions $ f_{1}, \\ldots, f_{n} $ , which are defined on all integers from $ 0 $ to $ 10^{18} $ and $ f_i(0) = 0 $ and $ f_i(10^{18}) = L $ for all $ i $ from $ 1 $ to $ n $ . It's an notorious coincidence that $ n $ is a divisor of $ L $ .\n\nShe suggests Alesya a game. Using one question Alesya can ask Tanya a value of any single function in any single point. To win Alesya must choose integers $ l_{i} $ and $ r_{i} $ ( $ 0 \\leq l_{i} \\leq r_{i} \\leq 10^{18} $ ), such that $ f_{i}(r_{i}) - f_{i}(l_{i}) \\geq \\frac{L}{n} $ (here $ f_i(x) $ means the value of $ i $ -th function at point $ x $ ) for all $ i $ such that $ 1 \\leq i \\leq n $ so that for any pair of two functions their segments $ [l_i, r_i] $ don't intersect (but may have one common point).\n\nUnfortunately, Tanya doesn't allow to make more than $ 2 \\cdot 10^{5} $ questions. Help Alesya to win!\n\nIt can be proved that it's always possible to choose $ [l_i, r_i] $ which satisfy the conditions described above.\n\nIt's guaranteed, that Tanya doesn't change functions during the game, i.e. interactor is not adaptive",
    "inputFormat": "The first line contains two integers $ n $ and $ L $ ( $ 1 \\leq n \\leq 1000 $ , $ 1 \\leq L \\leq 10^{18} $ , $ n $ is a divisor of $ L $ ) \u2014 number of functions and their value in $ 10^{18} $ .",
    "outputFormat": "When you've found needed $ l_i, r_i $ , print $ \"!\" $ without quotes on a separate line and then $ n $ lines, $ i $ -th from them should contain two integers $ l_i $ , $ r_i $ divided by space.\n\nInteraction\n\nTo ask $ f_i(x) $ , print symbol \"?\" without quotes and then two integers $ i $ and $ x $ ( $ 1 \\leq i \\leq n $ , $ 0 \\leq x \\leq 10^{18} $ ). Note, you must flush your output to get a response.\n\nAfter that, you should read an integer which is a value of $ i $ -th function in point $ x $ .\n\nYou're allowed not more than $ 2 \\cdot 10^5 $ questions.\n\nTo flush you can use (just after printing an integer and end-of-line):\n\n- fflush(stdout) in C++;\n- System.out.flush() in Java;\n- stdout.flush() in Python;\n- flush(output) in Pascal;\n- See the documentation for other languages.\n\nHacks:\n\nOnly tests where $ 1 \\leq L \\leq 2000 $ are allowed for hacks, for a hack set a test using following format:\n\nThe first line should contain two integers $ n $ and $ L $ ( $ 1 \\leq n \\leq 1000 $ , $ 1 \\leq L \\leq 2000 $ , $ n $ is a divisor of $ L $ ) \u2014 number of functions and their value in $ 10^{18} $ .\n\nEach of $ n $ following lines should contain $ L $ numbers $ l_1 $ , $ l_2 $ , ... , $ l_L $ ( $ 0 \\leq l_j < 10^{18} $ for all $ 1 \\leq j \\leq L $ and $ l_j < l_{j+1} $ for all $ 1 < j \\leq L $ ), in $ i $ -th of them $ l_j $ means that $ f_i(l_j) < f_i(l_j + 1) $ .",
    "samples": [
        [
            "5 5\n? 1 0\n? 1 1\n? 2 1\n? 2 2\n? 3 2\n? 3 3\n? 4 3\n? 4 4\n? 5 4\n? 5 5\n!\n0 1\n1 2\n2 3\n3 4\n4 5\n",
            "0\n1\n1\n2\n2\n3\n3\n4\n4\n4\n5\n"
        ]
    ],
    "hint": "In the example Tanya has $ 5 $ same functions where $ f(0) = 0 $ , $ f(1) = 1 $ , $ f(2) = 2 $ , $ f(3) = 3 $ , $ f(4) = 4 $ and all remaining points have value $ 5 $ .\n\nAlesya must choose two integers for all functions so that difference of values of a function in its points is not less than $ \\frac{L}{n} $ (what is $ 1 $ here) and length of intersection of segments is zero.\n\nOne possible way is to choose pairs $ [0 $ , $ 1] $ , $ [1 $ , $ 2] $ , $ [2 $ , $ 3] $ , $ [3 $ , $ 4] $ and $ [4 $ , $ 5] $ for functions $ 1 $ , $ 2 $ , $ 3 $ , $ 4 $ and $ 5 $ respectively.",
    "translation": "## \u9898\u76ee\u63cf\u8ff0\n\n**\u8fd9\u662f\u4e00\u9053\u4ea4\u4e92\u9898**\n\n\u6709 $n$ \u4e2a\u51fd\u6570 $f_1,f_2,\\cdots,f_n$\uff0c\u5b9a\u4e49\u57df\u4e3a $0\\sim 10^{18}$ \u4ee5\u5185\u7684\u6574\u6570\uff0c\u6ee1\u8db3 $\\forall x,f(x)=f(x-1)+1$ \u6216\u8005 $f(x)=f(x-1)$ \uff0c\u5e76\u4e14 $f(0)=0,f(10^{18})=L$ \u3002\u4fdd\u8bc1 $n$ \u662f $L$ \u7684\u56e0\u6570\u3002\n\n\u4f60\u53ef\u4ee5\u8be2\u95ee\u4e00\u4e2a\u51fd\u6570\u5728\u4efb\u610f\u4e00\u4e2a\u70b9\u7684\u503c\uff0c\u6784\u9020\u4e00\u7ec4\u7b54\u6848 $(l_1,r_1),(l_2,r_2),\\cdots,(l_n,r_n)$ \uff0c\u4f7f\u5f97 $\\forall i\\in[1,n],f_i(r_i)-f_i(l_i)\\ge \\frac{L}{n}$ \uff0c\u4e14\u7ebf\u6bb5 $[l_i,r_i]$ \u4e92\u4e0d\u76f8\u4ea4\uff08\u53ea\u6709\u7aef\u70b9\u91cd\u5408\u4e0d\u7b97\u76f8\u4ea4\uff09\u3002\u4f60\u6700\u591a\u53ef\u4ee5\u8be2\u95ee $2\\cdot 10^5$ \u6b21\u3002\n\n## \u8f93\u5165\u683c\u5f0f\n\n\u4e00\u884c\u4e24\u4e2a\u6574\u6570$n,L(1\\le n\\le 1000,1\\le L\\le 10^{18})$\uff0c$n$ \u662f $L$ \u7684\u56e0\u6570\n\n## \u4ea4\u4e92\u683c\u5f0f\n\n\u8be2\u95ee\u4e00\u4e2a\u51fd\u6570\u5728\u4efb\u610f\u4e00\u4e2a\u70b9\u7684\u503c\uff1a\u8f93\u51fa`?`\uff08ASCII\u780163\uff09\uff0c\u8ddf\u7740\u4e24\u4e2a\u6574\u6570 $i$ \u548c $x$ \uff08 $1\\le i\\le n,0\\le x\\le 10^{18}$ \uff09\uff0c\u8868\u793a\u8be2\u95ee $f_i(x)$ \u7684\u503c\u3002\u7136\u540e\u6e05\u7a7a\u7f13\u51b2\u533a\u3002\n\n\u4f60\u4e0d\u80fd\u8be2\u95ee\u8d85\u8fc7 $2\\cdot 10^5$ \u6b21\u3002\n\n\u4f60\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u8bed\u53e5\u6765\u6e05\u7a7a\u7f13\u51b2\u533a\uff1a\n\n- \u5bf9\u4e8e C/C++\uff1a`fflush(stdout)`\uff1b\n- \u5bf9\u4e8e Java\uff1a`System.out.flush()`\uff1b\n- \u5bf9\u4e8e Python\uff1a`stdout.flush()`\uff1b\n- \u5bf9\u4e8e Pascal\uff1a`flush(output)`\uff1b\n- \u5bf9\u4e8e\u5176\u4ed6\u8bed\u8a00\uff0c\u8bf7\u81ea\u884c\u67e5\u9605\u5bf9\u5e94\u8bed\u8a00\u7684\u5e2e\u52a9\u6587\u6863\u3002\n\n\u7136\u540e\u4f60\u9700\u8981\u4ece\u6807\u51c6\u8f93\u5165\u4e2d\u8bfb\u5165\u4e00\u4e2a\u6574\u6570\uff0c\u4ee3\u8868\u8bc4\u6d4b\u673a\u8fd4\u56de\u7684\u7ed3\u679c\u3002\n\n\u8f93\u51fa\u7b54\u6848\uff1a\u8f93\u51fa\u4e00\u884c`\uff01`\uff08ASCII\u780133\uff09\u3002\u63a5\u7740\u8f93\u51fa $n$ \u884c\uff0c\u7b2c $i$ \u884c\u4e24\u4e2a\u6574\u6570  $l_i,r_i$ \uff0c\u7528\u7a7a\u683c\u5206\u5f00\u3002"
}