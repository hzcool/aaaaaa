{
    "description": "This is an interactive problem.\n\nJury initially had a sequence $ a $ of length $ n $ , such that $ a_i = i $ .\n\nThe jury chose three integers $ i $ , $ j $ , $ k $ , such that $ 1 \\leq i < j < k \\leq n $ , $ j - i > 1 $ . After that, Jury reversed subsegments $ [i, j - 1] $ and $ [j, k] $ of the sequence $ a $ .\n\nReversing a subsegment $ [l, r] $ of the sequence $ a $ means reversing the order of elements $ a_l, a_{l+1}, \\ldots, a_r $ in the sequence, i. e. $ a_l $ is swapped with $ a_r $ , $ a_{l+1} $ is swapped with $ a_{r-1} $ , etc.\n\nYou are given the number $ n $ and you should find $ i $ , $ j $ , $ k $ after asking some questions.\n\nIn one question you can choose two integers $ l $ and $ r $ ( $ 1 \\leq l \\leq r \\leq n $ ) and ask the number of inversions on the subsegment $ [l, r] $ of the sequence $ a $ . You will be given the number of pairs $ (i, j) $ such that $ l \\leq i < j \\leq r $ , and $ a_i > a_j $ .\n\nFind the chosen numbers $ i $ , $ j $ , $ k $ after at most $ 40 $ questions.\n\nThe numbers $ i $ , $ j $ , and $ k $ are fixed before the start of your program and do not depend on your queries.",
    "inputFormat": "Each test consists of multiple test cases. The first line contains a single integer $ t $ ( $ 1 \\leq t \\leq 100 $ ) \u2014 the number of test cases. Description of the test cases follows.\n\nThe single line of each test case contains a single integer $ n $ ( $ 4 \\leq n \\leq 10^9 $ ). After reading it you should start an interaction process by asking questions for that test case. After giving an answer you should:\n\n- Terminate your program if that is the last test case.\n- Proceed to the next test case otherwise.",
    "outputFormat": "To ask number of inversions on a subsegment $ [l, r] $ , print \"? l r\", where ( $ 1 \\leq l \\leq r \\leq n $ ). You can ask at most $ 40 $ questions in each test case. As a result you should read a single integer $ x $ .\n\n- If $ x = -1 $ , your program made an invalid question or you exceeded the number of questions for that test case. Your program should terminate immediately (otherwise it can get any verdict instead of \"Wrong Answer\").\n- Otherwise $ x $ is equal to the number of inversions on the subsegment $ [l, r] $ of the sequence $ a $ .\n\nTo give the answer, print \"! i j k\", where $ i $ , $ j $ , $ k $ are the numbers you found. You should continue solving the next test cases or terminate the program after that.\n\nAfter printing a question or an answer do not forget to print the end of line and flush the output. Otherwise, you will get an \"Idleness limit exceeded\" verdict. To do this, use:\n\n- fflush(stdout) or cout.flush() in C++;\n- System.out.flush() in Java;\n- flush(output) in Pascal;\n- stdout.flush() in Python;\n- See the documentation for other languages.\n\nHacks\n\nTo make a hack, use the following format:\n\nThe first line contains a single integer $ t $ ( $ 1 \\leq t \\leq 100 $ ) \u2014 the number of test cases.\n\nEach of the next $ t $ lines contains four integers $ n $ , $ i $ , $ j $ , $ k $ ( $ 4 \\leq n \\leq 10^9 $ , $ 1 \\leq i < j < k \\leq n $ , $ j - i > 1 $ ).",
    "samples": [
        [
            "2 \n5 \n\n4 \n\n3 \n\n3 \n\n5 \n\n2 \n\n2 \n\n1",
            "? 1 5\n\n? 2 5\n\n? 3 5\n\n! 1 3 5\n\n? 1 5\n\n? 2 5\n\n? 3 5\n\n! 2 4 5"
        ]
    ],
    "hint": "In the first test case, $ i = 1 $ , $ j = 3 $ , $ k = 5 $ , so the sequence $ a $ is $ [2, 1, 5, 4, 3] $ .\n\nIn the second test case, $ i = 2 $ , $ j = 4 $ , $ k = 5 $ , so the sequence $ a $ is $ [1, 3, 2, 5, 4] $ .",
    "translation": "\u539f\u672c\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a$ \u6ee1\u8db3 $a_i=i$\u3002\u73b0\u5728\u6211\u4eec\u5c06 $[i,j-1]$ \u4e0e $[j,k]$ \u8fdb\u884c\u7ffb\u8f6c\uff0c\u6211\u4eec\u4e0d\u4f1a\u544a\u8bc9\u4f60 $i,j,k$\uff0c\u4f60\u6bcf\u6b21\u53ef\u4ee5\u5411\u4ea4\u4e92\u5e93\u8be2\u95ee\u4e00\u4e2a\u533a\u95f4\u7684\u9006\u5e8f\u5bf9\u6570\uff0c\u8bd5\u5728 $40$ \u6b21\u8be2\u95ee\u5185\u6c42\u51fa $i,j,k$\u3002  \n$4\\le n\\le 10^9$\uff0c$1\\le i< j<k\\le n$\uff0c$j-i>1$\u3002"
}