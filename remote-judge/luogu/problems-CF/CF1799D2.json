{
    "description": "This is a hard version of the problem. The constraints of $ t $ , $ n $ , $ k $ are the only difference between versions.\n\nYou have a device with two CPUs. You also have $ k $ programs, numbered $ 1 $ through $ k $ , that you can run on the CPUs.\n\nThe $ i $ -th program ( $ 1 \\le i \\le k $ ) takes $ cold_i $ seconds to run on some CPU. However, if the last program we ran on this CPU was also program $ i $ , it only takes $ hot_i $ seconds ( $ hot_i \\le cold_i $ ). Note that this only applies if we run program $ i $ multiple times consecutively \u2014 if we run program $ i $ , then some different program, then program $ i $ again, it will take $ cold_i $ seconds the second time.\n\nYou are given a sequence $ a_1, a_2, \\ldots, a_n $ of length $ n $ , consisting of integers from $ 1 $ to $ k $ . You need to use your device to run programs $ a_1, a_2, \\ldots, a_n $ in sequence. For all $ 2 \\le i \\le n $ , you cannot start running program $ a_i $ until program $ a_{i - 1} $ has completed.\n\nFind the minimum amount of time needed to run all programs $ a_1, a_2, \\ldots, a_n $ in sequence.",
    "inputFormat": "Input consists of multiple test cases. The first line contains a single integer $ t $ , the number of test cases ( $ 1 \\le t \\le 10^5 $ ).\n\nThe first line of each test case contains $ n $ and $ k $ ( $ 1 \\le n, k \\le 3 \\cdot 10^5 $ ).\n\nThe second line of each test case contains $ n $ integers $ a_1, a_2, \\ldots, a_n $ ( $ 1 \\le a_i \\le k $ ).\n\nThe third line of each test case contains $ k $ integers $ cold_1, cold_2, \\ldots, cold_k $ ( $ 1 \\le cold_i \\le 10^9 $ ).\n\nThe fourth line of each test case contains $ k $ integers $ hot_1, hot_2, \\ldots, hot_k $ ( $ 1 \\le hot_i \\le cold_i $ ).\n\nIt is guaranteed the sum of $ n $ and the sum of $ k $ over all test cases do not exceed $ 3 \\cdot 10^5 $ .",
    "outputFormat": "For each test case, print the minimum time needed to run all programs in the given order.",
    "samples": [
        [
            "9\n3 2\n1 2 2\n3 2\n2 1\n4 2\n1 2 1 2\n5 3\n2 1\n4 3\n1 2 3 1\n100 100 100\n1 1 1\n5 2\n2 1 2 1 1\n65 45\n54 7\n5 3\n1 3 2 1 2\n2 2 2\n1 1 1\n5 1\n1 1 1 1 1\n1000000000\n999999999\n5 6\n1 6 1 4 1\n3 6 4 1 4 5\n1 1 1 1 4 1\n1 3\n3\n4 5 6\n1 2 3\n8 3\n3 3 3 1 2 3 2 1\n10 10 8\n10 10 5",
            "6\n11\n301\n225\n8\n4999999996\n11\n6\n63"
        ]
    ],
    "hint": "In the first test case, we can do the following:\n\n- Run program $ a_1 = 1 $ on CPU $ 1 $ . It takes $ cold_1 = 3 $ seconds to run.\n- Run program $ a_2 = 2 $ on CPU $ 2 $ . It takes $ cold_2 = 2 $ seconds to run.\n- Run program $ a_3 = 2 $ on CPU $ 2 $ . The last program run on this CPU was also program $ 2 $ , so it takes $ hot_2 = 1 $ second to run.\n\nIn total, we need $ 3 + 2 + 1 = 6 $ seconds to run them all. We can show this is optimal.\n\nIn the second test case, we can use do the following:\n\n- Run program $ a_1 = 1 $ on CPU $ 1 $ . It takes $ cold_1 = 5 $ seconds to run.\n- Run program $ a_2 = 2 $ on CPU $ 2 $ . It takes $ cold_2 = 3 $ seconds to run.\n- Run program $ a_3 = 1 $ on CPU $ 1 $ . The last program run on this CPU was also program $ 1 $ , so it takes $ hot_1 = 2 $ seconds to run.\n- Run program $ a_4 = 2 $ on CPU $ 2 $ . The last program run on this CPU was also program $ 2 $ , so it takes $ hot_2 = 1 $ second to run.\n\nIn total, we need $ 5 + 3 + 2 + 1 = 11 $ seconds. We can show this is optimal.",
    "translation": "\u6709\u4e24\u4e2a CPU \u548c $k$ \u79cd\u7a0b\u5e8f\uff0c\u4f60\u53ef\u4ee5\u5728 CPU \u4e0a\u8fd0\u884c\u7a0b\u5e8f\u3002\n\n\u5982\u679c\u4f60\u9009\u62e9\u7684 CPU \u4e0a\u4e00\u6b21\u8fd0\u884c\u7684\u7a0b\u5e8f\u4e0d\u662f\u4f60\u5f53\u524d\u8fd0\u884c\u7684\u7a0b\u5e8f\uff0c\u5219\u9700\u8981\u82b1\u8d39 $cold_i$ \u7684\u65f6\u95f4\u3002\n\n\u5426\u5219\uff0c\u9700\u8981\u82b1\u8d39 $hot_i$ \u7684\u65f6\u95f4\u3002\n\n\u73b0\u5728\u6709 $n$ \u4e2a\u7a0b\u5e8f\u9700\u8981\u8fd0\u884c\uff0c\u7b2c $i$ \u6b21\u9700\u8981\u8fd0\u884c\u7684\u7a0b\u5e8f\u7c7b\u578b\u4e3a $a_i$\uff0c\u6bcf\u6b21\u53ef\u4ee5\u4efb\u610f\u9009\u62e9\u4e00\u4e2a CPU \u8fd0\u884c\u7a0b\u5e8f\uff0c\u4e00\u4e2a CPU \u540c\u4e00\u65f6\u95f4\u6700\u591a\u8fd0\u884c\u4e00\u4e2a\u7a0b\u5e8f\u3002\n\n\u6c42\u6700\u77ed\u8fd0\u884c\u5b8c\u5168\u90e8\u7a0b\u5e8f\u7684\u65f6\u95f4\u3002\n\n\u5171\u6709 $t$ \u7ec4\u6570\u636e\u3002\n\n$1 \\le n,k \\le 3 \\times 10^5$\uff0c$1 \\le hot_i \\le cold_i \\le 10^9$\uff0c$1 \\le a_i \\le k$\uff0c$1 \\le t \\le 10^5$\uff0c$\\sum k \\le 3 \\times 10^5$\uff0c$\\sum n \\le 3 \\times 10^5$"
}