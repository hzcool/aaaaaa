{
    "description": "In a Berland city S\\*\\*\\* there is a tram engine house and only one tram. Three people work in the house \u2014 the tram driver, the conductor and the head of the engine house. The tram used to leave the engine house every morning and drove along his loop route. The tram needed exactly $ c $ minutes to complete the route. The head of the engine house controlled the tram\u2019s movement, going outside every $ c $ minutes when the tram drove by the engine house, and the head left the driver without a bonus if he was even one second late.\n\nIt used to be so. Afterwards the Berland Federal Budget gave money to make more tramlines in S\\*\\*\\*, and, as it sometimes happens, the means were used as it was planned. The tramlines were rebuilt and as a result they turned into a huge network. The previous loop route may have been destroyed. S\\*\\*\\* has $ n $ crossroads and now $ m $ tramlines that links the pairs of crossroads. The traffic in Berland is one way so the tram can move along each tramline only in one direction. There may be several tramlines between two crossroads, which go same way or opposite ways. Every tramline links two different crossroads and for each crossroad there is at least one outgoing tramline.\n\nSo, the tramlines were built but for some reason nobody gave a thought to increasing the number of trams in S\\*\\*\\*! The tram continued to ride alone but now the driver had an excellent opportunity to get rid of the unending control of the engine house head. For now due to the tramline network he could choose the route freely! Now at every crossroad the driver can arbitrarily choose the way he can go. The tram may even go to the parts of S\\*\\*\\* from where it cannot return due to one way traffic. The driver is not afraid of the challenge: at night, when the city is asleep, he can return to the engine house safely, driving along the tramlines in the opposite direction.\n\nThe city people were rejoicing for some of the had been waiting for the tram to appear on their streets for several years. However, the driver\u2019s behavior enraged the engine house head. Now he tries to carry out an insidious plan of installing cameras to look after the rebellious tram.\n\nThe plan goes as follows. The head of the engine house wants to install cameras at some crossroads, to choose a period of time $ t $ and every $ t $ minutes turn away from the favourite TV show to check where the tram is. Also the head of the engine house wants at all moments of time, divisible by $ t $ , and only at such moments the tram to appear on a crossroad under a camera. There must be a camera on the crossroad by the engine house to prevent possible terrorist attacks on the engine house head. Among all the possible plans the engine house head chooses the plan with the largest possible value of $ t $ (as he hates being distracted from his favourite TV show but he has to). If such a plan is not unique, pick the plan that requires the minimal possible number of cameras. Find such a plan.",
    "inputFormat": "The first line contains integers $ n $ and $ m $ ( $ 2<=n,m<=10^{5} $ ) \u2014 the number of crossroads and tramlines in S\\*\\*\\* respectively. The next $ m $ lines contain the descriptions of the tramlines in \" $ u $ $ v $ \" format, where $ u $ is the initial tramline crossroad and $ v $ is its final crossroad. The crossroads are numbered with integers from $ 1 $ to $ n $ , and the engine house is at the crossroad number $ 1 $ .",
    "outputFormat": "In the first line output the value of $ t $ . In the next line output the value of $ k $ \u2014 the required number of the cameras. In the next line output space-separated numbers of the crossroads, where the cameras should be installed. Output the numbers in increasing order.",
    "samples": [
        [
            "4 5\n1 2\n2 3\n3 4\n4 1\n1 4\n",
            "2\n2\n1 3\n"
        ]
    ],
    "hint": "",
    "translation": "\u7ed9\u5b9a\u4e00\u4e2a$n$\u4e2a\u70b9\uff0c$m$\u6761\u8fb9\u7684\u6709\u5411\u56fe( $2\\leqslant n,m \\leqslant 10^5$ )\uff0c\u53ef\u80fd\u6709\u91cd\u8fb9\uff0c\u65e0\u81ea\u73af\uff0c\u4e14\u6bcf\u4e2a\u7ed3\u70b9\u81f3\u5c11\u6709\u4e00\u6761\u51fa\u8fb9\uff0c\u6bcf\u6761\u8fb9\u7684\u957f\u5ea6\u5747\u4e3a$1$\uff1b\n\n\u6c42\u4e00\u4e2a\u6700\u5927\u7684\u6570$t$,\u4f7f\u5f97\u5b58\u5728\u70b9\u96c6$V$,\u4f7f\u5f97\uff1a\n\n$1\\in V$;\n\n\u5bf9\u4e8e\u4efb\u610f$a\\in V$\uff0c$1$\u5230$a$\u7684**\u6240\u6709**\u8def\u5f84\u957f\u5ea6\u90fd\u662f$t$\u7684\u500d\u6570\uff1b\n\n\u5bf9\u4e8e\u4efb\u610f$a\\notin V$,$1$\u5230$a$\u7684**\u6240\u6709**\u8def\u5f84\u957f\u5ea6\u90fd\u4e0d\u662f$t$\u7684\u500d\u6570\u3002\n\n\u8f93\u51fa\u4e09\u884c\uff1a\n\n\u7b2c\u4e00\u884c\uff0c$t$\u7684\u5927\u5c0f\u3002\n\n\u7b2c\u4e8c\u884c\uff0c$|V|$\u3002\n\n\u7b2c\u4e09\u884c\uff0c\u4ece\u5c0f\u5230\u5927\u8f93\u51fa$V$\u4e2d\u7684\u5143\u7d20\u3002\u5982\u679c\u6709\u591a\u4e2a$V$\u6ee1\u8db3\u8981\u6c42\uff0c\u8f93\u51fa\u4f7f\u5f97$|V|$\u6700\u5c0f\u7684\u4e00\u4e2a$V$\u3002"
}