{
    "description": "The only difference between the two versions is that in this version, the constraints are lower.\n\nInitially, array $ a $ contains just the number $ 1 $ . You can perform several operations in order to change the array. In an operation, you can select some subsequence $ ^{\\dagger} $ of $ a $ and add into $ a $ an element equal to the sum of all elements of the subsequence.\n\nYou are given a final array $ c $ . Check if $ c $ can be obtained from the initial array $ a $ by performing some number (possibly 0) of operations on the initial array.\n\n $ ^{\\dagger} $ A sequence $ b $ is a subsequence of a sequence $ a $ if $ b $ can be obtained from $ a $ by the deletion of several (possibly zero, but not all) elements. In other words, select $ k $ ( $ 1 \\leq k \\leq |a| $ ) distinct indices $ i_1, i_2, \\dots, i_k $ and insert anywhere into $ a $ a new element with the value equal to $ a_{i_1} + a_{i_2} + \\dots + a_{i_k} $ .",
    "inputFormat": "The first line of the input contains an integer $ t $ ( $ 1 \\leq t \\leq 1000 $ ) \u2014 the number of test cases. The description of the test cases follows.\n\nThe first line of each test case contains a single integer $ n $ ( $ 1 \\leq n \\leq 5000 $ ) \u2014 the number of elements the final array $ c $ should have.\n\nThe second line of each test case contains $ n $ space-separated integers $ c_i $ ( $ 1 \\leq c_i \\leq 5000 $ ) \u2014 the elements of the final array $ c $ that should be obtained from the initial array $ a $ .\n\nIt is guaranteed that the sum of $ n $ over all test cases does not exceed $ 5000 $ .",
    "outputFormat": "For each test case, output \"YES\" (without quotes) if such a sequence of operations exists, and \"NO\" (without quotes) otherwise.\n\nYou can output the answer in any case (for example, the strings \"yEs\", \"yes\", \"Yes\" and \"YES\" will be recognized as a positive answer).",
    "samples": [
        [
            "6\n1\n1\n1\n2\n5\n5 1 3 2 1\n5\n7 1 5 2 1\n3\n1 1 1\n5\n1 1 4 2 1",
            "YES\nNO\nYES\nNO\nYES\nYES"
        ]
    ],
    "hint": "For the first test case, the initial array $ a $ is already equal to $ [1] $ , so the answer is \"YES\".\n\nFor the second test case, performing any amount of operations will change $ a $ to an array of size at least two which doesn't only have the element $ 2 $ , thus obtaining the array $ [2] $ is impossible and the answer is \"NO\".\n\nFor the third test case, we can perform the following operations in order to obtain the final given array $ c $ :\n\n- Initially, $ a = [1] $ .\n- By choosing the subsequence $ [1] $ , and inserting $ 1 $ in the array, $ a $ changes to $ [1, 1] $ .\n- By choosing the subsequence $ [1, 1] $ , and inserting $ 1+1=2 $ in the middle of the array, $ a $ changes to $ [1, 2, 1] $ .\n- By choosing the subsequence $ [1, 2] $ , and inserting $ 1+2=3 $ after the first $ 1 $ of the array, $ a $ changes to $ [1, 3, 2, 1] $ .\n- By choosing the subsequence $ [1, 3, 1] $ and inserting $ 1+3+1=5 $ at the beginning of the array, $ a $ changes to $ [5, 1, 3, 2, 1] $ (which is the array we needed to obtain).",
    "translation": "\u672c\u9898\u4e3a\u7b80\u5355\u7248\uff0c\u4e24\u9898\u7684\u552f\u4e00\u533a\u522b\u5728\u4e8e\u6570\u636e\u8303\u56f4\u7684\u5927\u5c0f\u3002\n\n\u6570\u5217 $a$ \u6700\u5f00\u59cb\u53ea\u6709\u4e00\u4e2a\u6570 $1$\uff0c\u4f60\u53ef\u4ee5\u8fdb\u884c\u82e5\u5e72\u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u4f60\u53ef\u4ee5\u9009\u53d6 $k$ \u4e2a\u6570\uff08$k$ \u65e0\u9650\u5236\uff0c\u5c0f\u4e8e\u7b49\u4e8e $a$ \u7684\u5927\u5c0f\u5373\u53ef\uff09\uff0c\u5c06\u8fd9 $k$ \u4e2a\u6570\u7684\u548c\u653e\u5165 $a$ \u7684\u4efb\u610f\u4e00\u4e2a\u4f4d\u7f6e\u3002\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $c$\uff0c\u95ee $a$ \u80fd\u5426\u5728\u8fdb\u884c\u82e5\u5e72\u6b21\u64cd\u4f5c\u540e\u8f6c\u4e3a $c$\u3002\n\n\u6709 $t$ \u7ec4\u6570\u636e\u3002\n\n$1\\leq n\\leq5000,1\\leq c_i\\leq5000,1\\leq t\\leq1000$\n\nby @[Larryyu](https://www.luogu.com.cn/user/475329)"
}