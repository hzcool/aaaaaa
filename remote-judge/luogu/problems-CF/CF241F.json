{
    "description": "The Old City is a rectangular city represented as an $ m\u00d7n $ grid of blocks. This city contains many buildings, straight two-way streets and junctions. Each junction and each building is exactly one block. All the streets have width of one block and are either vertical or horizontal. There is a junction on both sides of each street. We call two blocks adjacent if and only if they share a common side. No two blocks of different streets are adjacent and no two junctions are adjacent.\n\nThere is an annual festival and as a part of it, The Old Peykan follows a special path in the city. This path starts from a block in a street, continues with many junctions and ends in a block of some street. For each street block, we know how much time it takes for the Old Peykan to go from this block to an adjacent block. Also the Old Peykan can go from each junction to its adjacent street blocks in one minute. Of course Old Peykan can't go to building blocks.\n\nWe know the initial position of the Old Peykan and the sequence of junctions that it passes to reach its destination. After passing all the junctions and reaching the destination, it will stay there forever. Your task is to find out where will the Old Peykan be $ k $ minutes after it starts moving. Consider that The Old Peykan always follows the shortest path that passes through the given sequence of junctions and reaches the destination.\n\nNote that the Old Peykan may visit some blocks more than once.",
    "inputFormat": "The first line of input contains three integers $ m $ , $ n $ and $ k $ $ (3<=m,n<=100,1<=k<=100000) $ . Next $ m $ lines are representing the city's map. Each of them containts $ n $ characters, each character is a block:\n\n- Character \"\\#\" represents a building.\n- Digits \"1\", \"2\", $ ... $ , \"9\" represent a block of an street and this digit means the number of minutes it takes for the Old Peykan to pass this block.\n- Characters \"a\", \"b\", $ ... $ , \"z\" means that this block is a junction and this character is it's name. All the junction names are unique.\n\nConsider that all blocks have the coordinates: the $ j $ -th in the $ i $ -th line have coordinates $ (i,j) $ $ (1<=i<=m,1<=j<=n) $ .\n\nThe $ (m+2) $ th line contains two integers $ r_{s} $ and $ c_{s} $ $ (1<=r_{s}<=m,1<=c_{s}<=n) $ , string $ s $ and another two integers $ r_{e} $ and $ c_{e} $ $ (1<=r_{e}<=m,1<=c_{e}<=n) $ . The path starts from block $ (r_{s},c_{s}) $ , continues through junctions in the order that is specified by $ s $ and will end in block $ (r_{e},c_{e}) $ . Length of $ s $ is between $ 1 $ and $ 1000 $ .\n\nIt's guaranteed that string $ s $ denotes a correct path from the start position to the end position and string $ s $ doesn't contain two consecutive equal letters. Also start position $ (r_{s},c_{s}) $ and the end position $ (r_{e},c_{e}) $ are street blocks.",
    "outputFormat": "In a single line print two integers $ r_{f} $ and $ c_{f} $ \u2014 ( $ r_{f},c_{f} $ ) being the position of the Old Peykan after exactly $ k $ minutes.",
    "samples": [
        [
            "3 10 12\n##########\n#z1a1111b#\n##########\n2 3 ab 2 8\n",
            "2 8\n"
        ],
        [
            "10 3 5\n###\n#w#\n#1#\n#a#\n#1#\n#1#\n#1#\n#1#\n#b#\n###\n3 2 abababababababab 6 2\n",
            "8 2\n"
        ],
        [
            "3 10 6\n##########\n#z1a1311b#\n##########\n2 3 ab 2 8\n",
            "2 7\n"
        ]
    ],
    "hint": "",
    "translation": "## \u9898\u76ee\u63cf\u8ff0\n\n\u8001\u57ce\u662f\u4e00\u4e2a\u77e9\u5f62\u57ce\u5e02\uff0c\u8868\u793a\u4e3am\u00d7n\u5757\u7f51\u683c\u3002\u8fd9\u5ea7\u57ce\u5e02\u5305\u542b\u8bb8\u591a\u5efa\u7b51\u7269\u3001\u7b14\u76f4\u7684\u53cc\u5411\u8857\u9053\u548c\u8def\u53e3\u3002\u6bcf\u4e2a\u8def\u53e3\u548c\u6bcf\u4e2a\u5efa\u7b51\u7269\u90fd\u6070\u597d\u662f\u4e00\u4e2a\u8857\u533a\u3002\u6240\u6709\u7684\u8857\u9053\u90fd\u6709\u4e00\u4e2a\u8857\u533a\u7684\u5bbd\u5ea6\uff0c\u53ef\u4ee5\u662f\u5782\u76f4\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u6c34\u5e73\u7684\u3002\u6bcf\u6761\u8857\u7684\u4e24\u8fb9\u90fd\u6709\u4e00\u4e2a\u8def\u53e3\u3002\u5f53\u4e14\u4ec5\u5f53\u5b83\u4eec\u5171\u4eab\u4e00\u4e2a\u516c\u5171\u8fb9\u65f6\uff0c\u6211\u4eec\u624d\u79f0\u4e24\u4e2a\u5757\u76f8\u90bb\u3002\u6ca1\u6709\u4e24\u4e2a\u4e0d\u540c\u8857\u9053\u7684\u8857\u533a\u662f\u76f8\u90bb\u7684\uff0c\u4e5f\u6ca1\u6709\u4e24\u4e2a\u8def\u53e3\u662f\u76f8\u90bb\u7684\u3002\n\n\u6bcf\u5e74\u90fd\u6709\u4e00\u4e2a\u8282\u65e5\uff0c\u4f5c\u4e3a\u8282\u65e5\u7684\u4e00\u90e8\u5206\uff0cPeykan \u6cbf\u7740\u57ce\u5e02\u7684\u4e00\u6761\u7279\u6b8a\u8def\u5f84\u8d70\u3002\u8fd9\u6761\u8def\u5f84\u4ece\u8857\u9053\u7684\u4e00\u4e2a\u8857\u533a\u5f00\u59cb\uff0c\u7ecf\u8fc7\u8bb8\u591a\u4ea4\u53c9\u8def\u53e3\uff0c\u5e76\u5728\u67d0\u4e2a\u8857\u9053\u7684\u4e00\u4e2a\u8857\u533a\u7ed3\u675f\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8857\u533a\uff0c\u6211\u4eec\u77e5\u9053 Peykan \u4ece\u8fd9\u4e2a\u8857\u533a\u5230\u76f8\u90bb\u8857\u533a\u9700\u8981\u591a\u957f\u65f6\u95f4\u3002\u6b64\u5916\uff0cPeykan \u53ef\u4ee5\u5728\u4e00\u5206\u949f\u5185\u4ece\u6bcf\u4e2a\u8def\u53e3\u5230\u8fbe\u5176\u76f8\u90bb\u7684\u8857\u533a\u3002\n\n\u6211\u4eec\u77e5\u9053 Peykan \u7684\u521d\u59cb\u4f4d\u7f6e\u4ee5\u53ca\u5b83\u5230\u8fbe\u76ee\u7684\u5730\u6240\u7ecf\u8fc7\u7684\u8def\u53e3\u5e8f\u5217\u3002\u7ecf\u8fc7\u6240\u6709\u7684\u8def\u53e3\uff0c\u5230\u8fbe\u76ee\u7684\u5730\u540e\uff0c\u5b83\u4f1a\u6c38\u8fdc\u505c\u7559\u5728\u90a3\u91cc\u3002\u4f60\u7684\u4efb\u52a1\u662f\u627e\u51fa Peykan \u5f00\u59cb\u79fb\u52a8 k \u5206\u949f\u540e\u4f1a\u5728\u54ea\u91cc\u3002 \u8003\u8651\u5230 Peykan \u603b\u662f\u9075\u5faa\u901a\u8fc7\u7ed9\u5b9a\u4ea4\u53c9\u8def\u53e3\u5e8f\u5217\u5e76\u5230\u8fbe\u76ee\u7684\u5730\u7684\u6700\u77ed\u8def\u5f84\u3002\n\n\u8bf7\u6ce8\u610f\uff0cPeykan \u53ef\u80fd\u4f1a\u591a\u6b21\u8bbf\u95ee\u67d0\u4e9b\u8857\u533a\u3002\n\n## \u8f93\u5165\u683c\u5f0f\n\n\u8f93\u5165\u7684\u7b2c\u4e00\u884c\u5305\u542b\u4e09\u4e2a\u6574\u6570 m , n \u548c k (3<=m,n<=100,1<=k<=100000). \u63a5\u4e0b\u6765m\u884c\u4ee3\u8868\u57ce\u5e02\u7684\u5730\u56fe\u3002\u6bcf\u884c\u6709n\u4e2a\u5b57\u7b26\uff0c\u6bcf\u4e2a\u5b57\u7b26\u662f\u4e00\u4e2a\u8857\u533a\uff1a\n\n- \u5b57\u7b26\u201c#\u201d\u4ee3\u8868\u5efa\u7b51\u7269\u3002\n- \u6570\u5b57\u201c1\u201d,\u201c2\u201d,......\uff0c\u201c9\u201d\u4ee3\u8868\u4e00\u4e2a\u8857\u533a\uff0c\u8fd9\u4e2a\u6570\u5b57\u8868\u793a Peykan \u901a\u8fc7\u8fd9\u4e2a\u8857\u533a\u6240\u9700\u7684\u65f6\u95f4(\u5355\u4f4d:\u5206\u949f)\u3002\n- \u5b57\u7b26\u201ca\u201d,\u201cb\u201d,....., \"z\" \u8868\u793a\u8fd9\u4e2a\u8857\u533a\u662f\u4e00\u4e2a\u8def\u53e3\uff0c\u8fd9\u4e2a\u5b57\u7b26\u662f\u5b83\u7684\u540d\u5b57\u3002\u6240\u6709\u8def\u53e3\u540d\u79f0\u90fd\u662f\u552f\u4e00\u7684\u3002\n\n\u8003\u8651\u6240\u6709\u8857\u533a\u90fd\u6709\u5750\u6807\uff1a\u7b2ci\u884c\u7b2cj\u4e2a\u6709\u5750\u6807(i,j) (1<=i<=m,1<=j<=n).\n\n\u7b2c $ (m+2) $ \u884c \u5305\u542b2\u4e2a\u6574\u6570 $ r_{s} $ \u548c $ c_{s} $ $ (1<=r_{s}<=m,1<=c_{s}<=n) $ , \u5b57\u7b26\u4e32 $ s $ \u548c\u53e6\u59162\u4e2a\u6574\u6570 $ r_{e} $ \u548c $ c_{e} $ $ (1<=r_{e}<=m,1<=c_{e}<=n) $ . \u8def\u7ebf\u4ece\u8857\u533a $ (r_{s},c_{s}) $ \u5f00\u59cb , \u6309\u7167\u6307\u5b9a\u7684\u987a\u5e8f\u7ee7\u7eed\u901a\u8fc7\u8def\u53e3 $ s $ ,\u5728\u8857\u533a w$ (r_{e},c_{e}) $ \u7ed3\u675f . $ s $ \u7684\u957f\u5ea6\u5728 $ 1 $ \u5230 $ 1000 $ \u4e4b\u95f4 .\n\n\u4fdd\u8bc1\u5b57\u7b26\u4e32 $ s $ \u8868\u793a\u4ece\u5f00\u59cb\u4f4d\u7f6e\u5230\u7ed3\u675f\u4f4d\u7f6e\u7684\u6b63\u786e\u8def\u5f84\u5e76\u4e14\u5b57\u7b26\u4e32 $ s $ \u4e0d\u5305\u542b\u4e24\u4e2a\u8fde\u7eed\u76f8\u7b49\u7684\u5b57\u6bcd. \u8d77\u59cb\u4f4d\u7f6e$\uff08r_{s}\uff0cc_{s}\uff09$\u548c\u7ed3\u675f\u4f4d\u7f6e$\uff08r_{e}\uff0cc_{e}\uff09$\u4e5f\u662f\u8857\u533a.\n\n## \u8f93\u51fa\u683c\u5f0f\n\n\u4e00\u884c,\u8f93\u51fa2\u4e2a\u6574\u6570$ r_{f} $ \u548c $ c_{f} $ \u2014 ( $ r_{f},c_{f} $ )\u6b63\u597d\u662f Peykan \u7b2ck\u5206\u949f\u7684\u4f4d\u7f6e\u3002\n\n## \u6837\u4f8b #1\n\n### \u6837\u4f8b\u8f93\u5165 #1\n\n```\n3 10 12\n##########\n#z1a1111b#\n##########\n2 3 ab 2 8\n```\n\n### \u6837\u4f8b\u8f93\u51fa #1\n\n```\n2 8\n```\n\n## \u6837\u4f8b #2\n\n### \u6837\u4f8b\u8f93\u5165 #2\n\n```\n10 3 5\n###\n#w#\n#1#\n#a#\n#1#\n#1#\n#1#\n#1#\n#b#\n###\n3 2 abababababababab 6 2\n```\n\n### \u6837\u4f8b\u8f93\u51fa #2\n\n```\n8 2\n```\n\n## \u6837\u4f8b #3\n\n### \u6837\u4f8b\u8f93\u5165 #3\n\n```\n3 10 6\n##########\n#z1a1311b#\n##########\n2 3 ab 2 8\n```\n\n### \u6837\u4f8b\u8f93\u51fa #3\n\n```\n2 7\n```"
}