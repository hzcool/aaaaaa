{
    "description": "In this problem you will have to help Berland army with organizing their command delivery system.\n\nThere are $ n $ officers in Berland army. The first officer is the commander of the army, and he does not have any superiors. Every other officer has exactly one direct superior. If officer $ a $ is the direct superior of officer $ b $ , then we also can say that officer $ b $ is a direct subordinate of officer $ a $ .\n\nOfficer $ x $ is considered to be a subordinate (direct or indirect) of officer $ y $ if one of the following conditions holds:\n\n- officer $ y $ is the direct superior of officer $ x $ ;\n- the direct superior of officer $ x $ is a subordinate of officer $ y $ .\n\nFor example, on the picture below the subordinates of the officer $ 3 $ are: $ 5, 6, 7, 8, 9 $ .\n\nThe structure of Berland army is organized in such a way that every officer, except for the commander, is a subordinate of the commander of the army.\n\nFormally, let's represent Berland army as a tree consisting of $ n $ vertices, in which vertex $ u $ corresponds to officer $ u $ . The parent of vertex $ u $ corresponds to the direct superior of officer $ u $ . The root (which has index $ 1 $ ) corresponds to the commander of the army.\n\nBerland War Ministry has ordered you to give answers on $ q $ queries, the $ i $ -th query is given as $ (u_i, k_i) $ , where $ u_i $ is some officer, and $ k_i $ is a positive integer.\n\nTo process the $ i $ -th query imagine how a command from $ u_i $ spreads to the subordinates of $ u_i $ . Typical DFS (depth first search) algorithm is used here.\n\nSuppose the current officer is $ a $ and he spreads a command. Officer $ a $ chooses $ b $ \u2014 one of his direct subordinates (i.e. a child in the tree) who has not received this command yet. If there are many such direct subordinates, then $ a $ chooses the one having minimal index. Officer $ a $ gives a command to officer $ b $ . Afterwards, $ b $ uses exactly the same algorithm to spread the command to its subtree. After $ b $ finishes spreading the command, officer $ a $ chooses the next direct subordinate again (using the same strategy). When officer $ a $ cannot choose any direct subordinate who still hasn't received this command, officer $ a $ finishes spreading the command.\n\nLet's look at the following example:\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1006E/4e341fb3dc019defd152d300119e23ac2a1ee48a.png)If officer $ 1 $ spreads a command, officers receive it in the following order: $ [1, 2, 3, 5 ,6, 8, 7, 9, 4] $ .\n\nIf officer $ 3 $ spreads a command, officers receive it in the following order: $ [3, 5, 6, 8, 7, 9] $ .\n\nIf officer $ 7 $ spreads a command, officers receive it in the following order: $ [7, 9] $ .\n\nIf officer $ 9 $ spreads a command, officers receive it in the following order: $ [9] $ .\n\nTo answer the $ i $ -th query $ (u_i, k_i) $ , construct a sequence which describes the order in which officers will receive the command if the $ u_i $ -th officer spreads it. Return the $ k_i $ -th element of the constructed list or -1 if there are fewer than $ k_i $ elements in it.\n\nYou should process queries independently. A query doesn't affect the following queries.",
    "inputFormat": "The first line of the input contains two integers $ n $ and $ q $ ( $ 2 \\le n \\le 2 \\cdot 10^5, 1 \\le q \\le 2 \\cdot 10^5 $ ) \u2014 the number of officers in Berland army and the number of queries.\n\nThe second line of the input contains $ n - 1 $ integers $ p_2, p_3, \\dots, p_n $ ( $ 1 \\le p_i < i $ ), where $ p_i $ is the index of the direct superior of the officer having the index $ i $ . The commander has index $ 1 $ and doesn't have any superiors.\n\nThe next $ q $ lines describe the queries. The $ i $ -th query is given as a pair ( $ u_i, k_i $ ) ( $ 1 \\le u_i, k_i \\le n $ ), where $ u_i $ is the index of the officer which starts spreading a command, and $ k_i $ is the index of the required officer in the command spreading sequence.",
    "outputFormat": "Print $ q $ numbers, where the $ i $ -th number is the officer at the position $ k_i $ in the list which describes the order in which officers will receive the command if it starts spreading from officer $ u_i $ . Print \"-1\" if the number of officers which receive the command is less than $ k_i $ .\n\nYou should process queries independently. They do not affect each other.",
    "samples": [
        [
            "9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n",
            "3\n6\n8\n-1\n9\n4\n"
        ]
    ],
    "hint": "",
    "translation": "### \u9898\u76ee\u63cf\u8ff0\n\u5728\u8fd9\u4e2a\u95ee\u9898\u4e2d\u4f60\u9700\u8981\u5e2e\u52a9\u4f2f\u5170\uff08\uff1f\uff1f\u6211\u6ca1\u627e\u5230\u6709Berland\u8fd9\u4e2a\u56fd\u5bb6\uff09\u519b\u961f\u7ec4\u7ec7\u4ed6\u4eec\u7684\u6307\u6325\u7cfb\u7edf\n\n\u4f2f\u5170\u519b\u961f\u4e2d\u4e00\u5171\u6709n\u4e2a\u519b\u5b98\u3002\u7b2c\u4e00\u4e2a\u5b98\u5458\u662f\u519b\u961f\u7684\u6307\u6325\u5b98\uff0c\u4ed6\u5e76\u6ca1\u6709\u4efb\u4f55\u4e0a\u7ea7\u3002\u5176\u4ed6\u7684\u519b\u5b98\u90fd\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u76f4\u63a5\u7684\u4e0a\u7ea7\u3002\u5982\u679c\u4e00\u4e2a\u519b\u5b98a\u662f\u519b\u5b98b\u7684\u4e0a\u7ea7\uff0c\u90a3\u4e48\u4f60\u4e5f\u53ef\u4ee5\u8bf4\u519b\u5b98b\u5c31\u662f\u519b\u5b98a\u7684\u4e0b\u5c5e\n\n\u5982\u679c\u6ee1\u8db3\u4e0b\u5217\u6761\u4ef6\uff0c\u90a3\u4e48\u519b\u5b98x\u5c31\u662f\u519b\u5b98y\u7684\u4e0b\u5c5e\uff08\u76f4\u63a5\u6216\u975e\u76f4\u63a5\uff09\uff1a\n\n1.y\u662fx\u7684\u76f4\u63a5\u4e0a\u7ea7 2.x\u7684\u76f4\u63a5\u4e0a\u7ea7\u662fy\u7684\u4e0b\u5c5e\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u4e0b\u56fe\u7684\u5b98\u54583\u7684\u4e0b\u5c5e\u6709:5,6,7,8,9\n\n\u6240\u4ee5\uff0c\u5728\u4f2f\u5170\u519b\u961f\u7684\u7ed3\u6784\u4e2d\uff0c\u9664\u4e86\u6307\u6325\u5b98\uff0c\u5176\u4ed6\u4eba\u90fd\u662f\u6307\u6325\u5b98\u7684\u4e0b\u5c5e\n\n\u5f62\u5f0f\u4e0a\u7684\uff0c\u8ba9\u6211\u4eec\u628a\u4f2f\u5170\u519b\u961f\u770b\u6210\u4e00\u68f5\u62e5\u6709n\u4e2a\u8282\u70b9\u7684\u6811\uff0c\u6811\u7684\u8282\u70b9u\u5c31\u4ee3\u8868\u4e86\u519b\u5b98u\u3002\u6839\uff08\u5373\u4e00\u53f7\u8282\u70b9\uff09\u5c31\u76f8\u5f53\u4e8e\u6307\u6325\u5b98\n\n\u4f2f\u5170\u6218\u4e89\u90e8\u95e8\u547d\u4ee4\u4f60\u5bf9q\u4e2a\u67e5\u8be2\u7ed9\u51fa\u7b54\u6848\u3002\u8fd9q\u4e2a\u67e5\u8be2\u4f1a\u4ee5\uff08ui\uff0cki\uff09\u7684\u5f62\u5f0f\u7ed9\u51fa\uff0cui\u4ee3\u8868\u4e86\u67d0\u4e2a\u519b\u5b98\uff0cki\u662f\u6b63\u6574\u6570\u3002\u4f60\u9700\u8981\u8f93\u51fa\uff0c\u7f16\u53f7\u4e3aui\u7684\u519b\u5b98\u4e0b\u8fbe\u547d\u4ee4\u540e\uff0c\u7b2cki\u4e2a\u5f97\u77e5\u6b64\u547d\u4ee4\u7684\u519b\u5b98\u7f16\u53f7\u662f\u591a\u5c11\uff0c\u5982\u679c\u4f20\u8fbe\u4eba\u6570\u4e0d\u8db3ki\u4e2a\uff0c\u8f93\u51fa-1\u3002\n\n\u8981\u5904\u7406\u7b2ci\u4e2a\u67e5\u8be2\uff0c\u60f3\u8c61\u4e00\u4e0bui\u7684\u547d\u4ee4\u5982\u4f55\u6211\u4e0b\u8fbe\u5230ui\u7684\u4e0b\u5c5e\u3002\u8fd9\u91cc\u4f7f\u7528\u4e86\u5178\u578b\u7684DFS\uff08\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff09\u7b97\u6cd5\u3002\n\n\u5047\u8bbe\u73b0\u5728\u7684\u519b\u5b98\u662fa\uff0c\u4ed6\u8981\u4e0b\u8fbe\u4e00\u4e2a\u547d\u4ee4\u3002a\u519b\u5b98\u9009\u62e9\u4e00\u4e2a\u519b\u5b98b\u2014\u2014\u8fd8\u6ca1\u6709\u6536\u5230\u8fd9\u4e2a\u547d\u4ee4\u7684\u76f4\u63a5\u4e0b\u5c5e\uff08\u5373\u5728\u6811\u4e0a\u7684\u4e00\u4e2a\u5b69\u5b50\uff09\u3002\u5982\u679c\u6709\u8bb8\u591a\u8fd9\u6837\u7684\u76f4\u63a5\u4e0b\u5c5e\uff0c\u90a3\u4e48A\u9009\u62e9\u7f16\u53f7\u6700\u5c0f\u7684\u90a3\u4e00\u4e2a\u3002A\u519b\u5b98\u5411B\u519b\u5b98\u53d1\u51fa\u547d\u4ee4\u3002\u4e4b\u540e\uff0cB\u4f7f\u7528\u5b8c\u5168\u76f8\u540c\u7684\u65b9\u5f0f\u5c06\u547d\u4ee4\u6269\u5c55\u5230\u5b83\u7684\u5b50\u6811\u3002\u5728B\u5b8c\u6210\u547d\u4ee4\u540e\uff0c\u519b\u5b98A\u518d\u6b21\u9009\u62e9\u4e0b\u4e00\u4e2a\u76f4\u63a5\u4e0b\u5c5e\uff08\u4f7f\u7528\u76f8\u540c\u7684\u7b56\u7565\uff09\u3002\u5f53\u519b\u5b98A\u4e0d\u80fd\u9009\u62e9\u4efb\u4f55\u8fd8\u6ca1\u6709\u63a5\u5230\u547d\u4ee4\u7684\u76f4\u63a5\u4e0b\u5c5e\u65f6\uff0c\u519b\u5b98A\u4e0b\u8fbe\u547d\u4ee4\u5b8c\u6210\u3002\n\n\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\uff08\u770b\u4e0b\u9762\u7684\u56fe\uff09\uff1a\n\n\u5982\u679c\u519b\u5b981\u4e0b\u8fbe\u4e86\u547d\u4ee4\uff0c\u519b\u5b98\u4eec\u6536\u5230\u547d\u4ee4\u7684\u987a\u5e8f\u662f\uff1a1,2,3,5,6,8,7,9,4\n\n\u5982\u679c\u519b\u5b983\u4e0b\u8fbe\u4e86\u547d\u4ee4\uff0c\u519b\u5b98\u4eec\u6536\u5230\u547d\u4ee4\u7684\u987a\u5e8f\u662f\uff1a3,5,6,8,7,9\n\n\u5982\u679c\u519b\u5b987\u4e0b\u8fbe\u4e86\u547d\u4ee4\uff0c\u519b\u5b98\u4eec\u6536\u5230\u547d\u4ee4\u7684\u987a\u5e8f\u662f\uff1a7,9\n\n\u5982\u679c\u519b\u5b989\u4e0b\u8fbe\u4e86\u547d\u4ee4\uff0c\u519b\u5b98\u4eec\u6536\u5230\u547d\u4ee4\u7684\u987a\u5e8f\u662f\uff1a9\n\n\u4f60\u5e94\u5f53\u5206\u5f00\u5904\u7406\u8fd9\u4e9b\u67e5\u8be2\u3002\u4e00\u4e2a\u67e5\u8be2\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u67e5\u8be2\u7684\u7ed3\u679c\u3002\n\n### \u8f93\u5165\u683c\u5f0f\n\u7b2c\u4e00\u884c\u5305\u62ec\u4e24\u4e2a\u6574\u6570n,q\uff0c\u8868\u793a\u6709n\u4e2a\u519b\u5b98\u548cq\u4e2a\u67e5\u8be2\uff082\u2264n\u22642\u00d710^5,1\u2264q\u22642\u00d710^5\uff09\n\n\u7b2c\u4e8c\u884c\u5305\u62ecn-1\u4e2a\u6574\u6570,p2\u3001p3\u2026\u2026pn\uff0c(1\u2264p<i )\u8868\u793a\u7f16\u53f7\u4e3ai\u7684\u519b\u5b98\u76f4\u63a5\u4e0a\u7ea7\u4e3api\u3002\u7f16\u53f7\u4e3a1\u7684\u4e3a\u6307\u6325\u5b98\u5e76\u4e14\u4ed6\u6ca1\u6709\u4e0a\u7ea7\uff0c\u4e0d\u5728\u8f93\u5165\u6570\u636e\u4e2d\u3002\n\n\u63a5\u4e0b\u6765\u7684q\u884c\u662fq\u4e2a\u67e5\u8be2\u6bcf\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570(ui,ki)\uff081\u2264ui,ki\u2264n\uff09ui\u8868\u793a\u5f00\u59cb\u4e0b\u8fbe\u547d\u4ee4\u7684\u519b\u5b98\uff0cki\u8868\u793a\u8981\u8f93\u51fa\u7684\u519b\u5b98\u7f16\u53f7\u662f\u7b2c\u51e0\u4e2a\u5f97\u77e5\u547d\u4ee4\u7684\n\n### \u8f93\u51fa\u683c\u5f0f\n\u4e00\u5171q\u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570\u8868\u793a\u7b2ci\u4e2a\u67e5\u8be2\u7684\u7b54\u6848\uff1a\u7f16\u53f7\u4e3aui\u7684\u519b\u5b98\u4e0b\u8fbe\u547d\u4ee4\u540e\uff0c\u7b2cki\u4e2a\u5f97\u77e5\u6b64\u547d\u4ee4\u7684\u519b\u5b98\u7f16\u53f7\u662f\u591a\u5c11\uff0c\u5982\u679c\u4f20\u8fbe\u4eba\u6570\u4e0d\u8db3ki\u4e2a\uff0c\u8f93\u51fa-1\u3002\n\n\u611f\u8c22@hicc0305 \u63d0\u4f9b\u7684\u7ffb\u8bd1\n\n"
}