{
    "description": "Little Petya likes to play a lot. Most of all he likes to play a game \u00abHoles\u00bb. This is a game for one person with following rules:\n\nThere are $ N $ holes located in a single row and numbered from left to right with numbers from 1 to $ N $ . Each hole has it's own power (hole number $ i $ has the power $ a_{i} $ ). If you throw a ball into hole $ i $ it will immediately jump to hole $ i+a_{i} $ , then it will jump out of it and so on. If there is no hole with such number, the ball will just jump out of the row. On each of the $ M $ moves the player can perform one of two actions:\n\n- Set the power of the hole $ a $ to value $ b $ .\n- Throw a ball into the hole $ a $ and count the number of jumps of a ball before it jump out of the row and also write down the number of the hole from which it jumped out just before leaving the row.\n\nPetya is not good at math, so, as you have already guessed, you are to perform all computations.",
    "inputFormat": "The first line contains two integers $ N $ and $ M $ ( $ 1<=N<=10^{5} $ , $ 1<=M<=10^{5} $ ) \u2014 the number of holes in a row and the number of moves. The second line contains $ N $ positive integers not exceeding $ N $ \u2014 initial values of holes power. The following $ M $ lines describe moves made by Petya. Each of these line can be one of the two types:\n\n- $ 0 $ $ a $ $ b $\n- $ 1 $ $ a $\n\n Type $ 0 $ means that it is required to set the power of hole $ a $ to $ b $ , and type $ 1 $ means that it is required to throw a ball into the $ a $ -th hole. Numbers $ a $ and $ b $ are positive integers do not exceeding $ N $ .",
    "outputFormat": "For each move of the type $ 1 $ output two space-separated numbers on a separate line \u2014 the number of the last hole the ball visited before leaving the row and the number of jumps it made.",
    "samples": [
        [
            "8 5\n1 1 1 1 1 2 8 2\n1 1\n0 1 3\n1 1\n0 3 4\n1 2\n",
            "8 7\n8 5\n7 3\n"
        ]
    ],
    "hint": "",
    "translation": "\u6709$N$\u4e2a\u6d1e\uff0c\u6bcf\u4e2a\u6d1e\u6709\u76f8\u5e94\u7684\u5f39\u529b\uff0c\u80fd\u628a\u8fd9\u4e2a\u7403\u5f39\u5230$i+power[i]$ \u4f4d\u7f6e\u3002\u5f53\u7403\u7684\u4f4d\u7f6e$>N$\u65f6\u5373\u89c6\u4e3a\u88ab\u5f39\u51fa\n\n\u8f93\u5165\uff1a\n\u7b2c\u4e00\u884c\u4e24\u4e2a\u6b63\u6574\u6570$N$\uff0c$M$\uff0c\u4e0b\u9762$N$\u4e2a\u6570\u4ee3\u8868\u521d\u59cb\u7684$power[i]$\n\u4e4b\u540e$M$\u884c\u5206\u522b\u4ee3\u8868$M$\u4e2a\u64cd\u4f5c\n\n\u5171\u6709\u4e24\u79cd\u64cd\u4f5c:\n\n   $0$ $a$ $b$ \u628a$a$\u4f4d\u7f6e\u7684\u5f39\u529b\u6539\u6210$b$\n\n   $1$ $a$ \u5728$a$\u5904\u653e\u4e00\u4e2a\u7403\uff0c\u8f93\u51fa\u6700\u540e\u4e00\u6b21\u843d\u5728\u54ea\u4e2a\u6d1e,\u7403\u88ab\u5f39\u51fa\u524d\u5171\u88ab\u5f39\u4e86\u591a\u5c11\u6b21\n\n\u8f93\u51fa\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u64cd\u4f5c2\uff0c\u8f93\u51fa\u4e24\u4e2a\u9898\u76ee\u4e2d\u8981\u6c42\u7684\u503c\uff08\u7a7a\u683c\u9694\u5f00\uff09\n\n$1<=N<=100000$\n\n$1<=M<=100000$"
}