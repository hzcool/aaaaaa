{
    "description": "The process of mammoth's genome decoding in Berland comes to its end!\n\nOne of the few remaining tasks is to restore unrecognized nucleotides in a found chain $ s $ . Each nucleotide is coded with a capital letter of English alphabet: 'A', 'C', 'G' or 'T'. Unrecognized nucleotides are coded by a question mark '?'. Thus, $ s $ is a string consisting of letters 'A', 'C', 'G', 'T' and characters '?'.\n\nIt is known that the number of nucleotides of each of the four types in the decoded genome of mammoth in Berland should be equal.\n\nYour task is to decode the genome and replace each unrecognized nucleotide with one of the four types so that the number of nucleotides of each of the four types becomes equal.",
    "inputFormat": "The first line contains the integer $ n $ ( $ 4<=n<=255 $ ) \u2014 the length of the genome.\n\nThe second line contains the string $ s $ of length $ n $ \u2014 the coded genome. It consists of characters 'A', 'C', 'G', 'T' and '?'.",
    "outputFormat": "If it is possible to decode the genome, print it. If there are multiple answer, print any of them. If it is not possible, print three equals signs in a row: \"===\" (without quotes).",
    "samples": [
        [
            "8\nAG?C??CT\n",
            "AGACGTCT\n"
        ],
        [
            "4\nAGCT\n",
            "AGCT\n"
        ],
        [
            "6\n????G?\n",
            "===\n"
        ],
        [
            "4\nAA??\n",
            "===\n"
        ]
    ],
    "hint": "In the first example you can replace the first question mark with the letter 'A', the second question mark with the letter 'G', the third question mark with the letter 'T', then each nucleotide in the genome would be presented twice.\n\nIn the second example the genome is already decoded correctly and each nucleotide is exactly once in it.\n\nIn the third and the fourth examples it is impossible to decode the genom.",
    "translation": "# \u9898\u76ee\u63cf\u8ff0\n\u7ed9\u5b9a\u957f\u5ea6\u4e3a n \u4e14\u53ea\u542b\u6709 A\u3001T\u3001C\u3001G\u548c? \u7684\u5b57\u7b26\u4e32s\uff0c\u5176\u4e2d?\u53ef\u4ee5\u8f6c\u6362\u4e3a\u4efb\u4f55\u4e00\u4e2a\u5b57\u6bcd\uff0c\u95ee\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4f7f\u5f97\u5c06\u6240\u6709\u7684?\u66ff\u6362\u6210\u5b57\u6bcd\u540e\uff0cA\u3001T\u3001C\u3001G\u4e2a\u6570\u76f8\u7b49\u3002\n# \u8f93\u5165\u683c\u5f0f\n\u4e24\u884c  \n\u7b2c\u4e00\u884c\uff0c\u4e00\u4e2a\u6574\u6570n\uff084<=n<=255\uff09\uff0c\u8868\u793a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6  \n\u7b2c\u4e8c\u884c\uff0c\u4e00\u4e2a\u5b57\u7b26\u4e32s\n# \u8f93\u51fa\u683c\u5f0f\n\u4e00\u884c\uff0c\u8868\u793a\u5c06\u6240\u6709\u7684?\u66ff\u6362\u6210\u5b57\u6bcd\u540e\u4f7f\u5f97A\u3001T\u3001C\u3001G\u4e2a\u6570\u76f8\u7b49\u7684\u5b57\u7b26\u4e32\uff0c\u82e5\u4e0d\u5b58\u5728\u8f93\u51fa\u201c===\u201d\uff08\u4e0d\u542b\u5f15\u53f7\uff09\u3002"
}