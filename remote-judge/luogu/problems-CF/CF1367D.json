{
    "description": "Polycarp wrote on the board a string $ s $ containing only lowercase Latin letters ('a'-'z'). This string is known for you and given in the input.\n\nAfter that, he erased some letters from the string $ s $ , and he rewrote the remaining letters in any order. As a result, he got some new string $ t $ . You have to find it with some additional information.\n\nSuppose that the string $ t $ has length $ m $ and the characters are numbered from left to right from $ 1 $ to $ m $ . You are given a sequence of $ m $ integers: $ b_1, b_2, \\ldots, b_m $ , where $ b_i $ is the sum of the distances $ |i-j| $ from the index $ i $ to all such indices $ j $ that $ t_j > t_i $ (consider that 'a'&lt;'b'&lt;...&lt;'z'). In other words, to calculate $ b_i $ , Polycarp finds all such indices $ j $ that the index $ j $ contains a letter that is later in the alphabet than $ t_i $ and sums all the values $ |i-j| $ .\n\nFor example, if $ t $ = \"abzb\", then:\n\n- since $ t_1 $ ='a', all other indices contain letters which are later in the alphabet, that is: $ b_1=|1-2|+|1-3|+|1-4|=1+2+3=6 $ ;\n- since $ t_2 $ ='b', only the index $ j=3 $ contains the letter, which is later in the alphabet, that is: $ b_2=|2-3|=1 $ ;\n- since $ t_3 $ ='z', then there are no indexes $ j $ such that $ t_j>t_i $ , thus $ b_3=0 $ ;\n- since $ t_4 $ ='b', only the index $ j=3 $ contains the letter, which is later in the alphabet, that is: $ b_4=|4-3|=1 $ .\n\nThus, if $ t $ = \"abzb\", then $ b=[6,1,0,1] $ .\n\nGiven the string $ s $ and the array $ b $ , find any possible string $ t $ for which the following two requirements are fulfilled simultaneously:\n\n- $ t $ is obtained from $ s $ by erasing some letters (possibly zero) and then writing the rest in any order;\n- the array, constructed from the string $ t $ according to the rules above, equals to the array $ b $ specified in the input data.",
    "inputFormat": "The first line contains an integer $ q $ ( $ 1 \\le q \\le 100 $ ) \u2014 the number of test cases in the test. Then $ q $ test cases follow.\n\nEach test case consists of three lines:\n\n- the first line contains string $ s $ , which has a length from $ 1 $ to $ 50 $ and consists of lowercase English letters;\n- the second line contains positive integer $ m $ ( $ 1 \\le m \\le |s| $ ), where $ |s| $ is the length of the string $ s $ , and $ m $ is the length of the array $ b $ ;\n- the third line contains the integers $ b_1, b_2, \\dots, b_m $ ( $ 0 \\le b_i \\le 1225 $ ).\n\nIt is guaranteed that in each test case an answer exists.",
    "outputFormat": "Output $ q $ lines: the $ k $ -th of them should contain the answer (string $ t $ ) to the $ k $ -th test case. It is guaranteed that an answer to each test case exists. If there are several answers, output any.",
    "samples": [
        [
            "4\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0",
            "aac\nb\naba\ncodeforces"
        ]
    ],
    "hint": "In the first test case, such strings $ t $ are suitable: \"aac', \"aab\".\n\nIn the second test case, such trings $ t $ are suitable: \"a\", \"b\", \"c\".\n\nIn the third test case, only the string $ t $ equals to \"aba\" is suitable, but the character 'b' can be from the second or third position.",
    "translation": "\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32s\uff0c\u4fdd\u8bc1\u5b57\u7b26\u4e32\u5185\u7684\u5b57\u7b26\u5728\"a\"\u5230\"z\"\u8303\u56f4\u5185\r\n\r\n\u7136\u540e\u7ed9\u4e00\u5b9a\u4e00\u4e2a\u6574\u6570 m \u548c\u4e00\u4e2a\u957f\u5ea6\u4e3a m \u7684\u5e8f\u5217 b\r\n\r\n\u8981\u6c42\u4eces\u4e2d\u53d6\u51fa m \u4e2a\u5b57\u7b26\u6784\u6210\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32a\uff08\u4e0d\u53ef\u91cd\u590d\u53d6\u76f8\u540c\u4f4d\u7f6e\u7684\u5b57\u7b26\uff09\uff0c\u4efb\u610f\u6392\u5217\u540e\uff0c\u662f\u5176\u6ee1\u8db3\u5bf9\u4e8e\u6bcf\u4e00\u4e2a i \u90fd\u6709 a[i] \u5230 a \u4e2d \u6240\u6709\u6bd4\u5b83\u5927\u7684\uff08\u5373\u5b57\u5178\u5e8f\u6bd4\u5b83\u5927\uff0c\u5982 b > a,z > x \uff09\u7684\u5b57\u7b26\u5728\u5b57\u7b26\u4e32 a \u4e2d\u7684\u8ddd\u79bb\u4e4b\u548c\u4e3a b[i]\r\n\r\n\u8981\u6c42\u8f93\u51fa\u6ee1\u8db3\u6761\u4ef6\u7684\u5b57\u7b26\u4e32 a"
}