{
    "description": "There are $ n $ block towers in a row, where tower $ i $ has a height of $ a_i $ . You're part of a building crew, and you want to make the buildings look as nice as possible. In a single day, you can perform the following operation:\n\n- Choose two indices $ i $ and $ j $ ( $ 1 \\leq i, j \\leq n $ ; $ i \\neq j $ ), and move a block from tower $ i $ to tower $ j $ . This essentially decreases $ a_i $ by $ 1 $ and increases $ a_j $ by $ 1 $ .\n\nYou think the ugliness of the buildings is the height difference between the tallest and shortest buildings. Formally, the ugliness is defined as $ \\max(a)-\\min(a) $ .\n\nWhat's the minimum possible ugliness you can achieve, after any number of days?",
    "inputFormat": "The first line contains one integer $ t $ ( $ 1 \\leq t \\leq 1000 $ ) \u2014 the number of test cases. Then $ t $ cases follow.\n\nThe first line of each test case contains one integer $ n $ ( $ 2 \\leq n \\leq 100 $ ) \u2014 the number of buildings.\n\nThe second line of each test case contains $ n $ space separated integers $ a_1, a_2, \\ldots, a_n $ ( $ 1 \\leq a_i \\leq 10^7 $ ) \u2014 the heights of the buildings.",
    "outputFormat": "For each test case, output a single integer \u2014 the minimum possible ugliness of the buildings.",
    "samples": [
        [
            "3\n3\n10 10 10\n4\n3 2 1 2\n5\n1 2 3 1 5",
            "0\n0\n1"
        ]
    ],
    "hint": "In the first test case, the ugliness is already $ 0 $ .\n\nIn the second test case, you should do one operation, with $ i = 1 $ and $ j = 3 $ . The new heights will now be $ [2, 2, 2, 2] $ , with an ugliness of $ 0 $ .\n\nIn the third test case, you may do three operations:\n\n1. with $ i = 3 $ and $ j = 1 $ . The new array will now be $ [2, 2, 2, 1, 5] $ ,\n2. with $ i = 5 $ and $ j = 4 $ . The new array will now be $ [2, 2, 2, 2, 4] $ ,\n3. with $ i = 5 $ and $ j = 3 $ . The new array will now be $ [2, 2, 3, 2, 3] $ .\n\n The resulting ugliness is $ 1 $ . It can be proven that this is the minimum possible ugliness for this test.",
    "translation": "\u6709 $n$ \u5ea7\u5927\u697c\u6392\u6210\u4e00\u6392\uff0c\u7b2c $i$ \u5ea7\u5927\u697c\u7684\u9ad8\u5ea6\u4e3a $a_i$\u3002\u4f60\u662f\u5efa\u7b51\u56e2\u961f\u7684\u4e00\u5458\uff0c\u4f60\u60f3\u8ba9\u8fd9\u4e9b\u5927\u697c\u770b\u8d77\u6765\u5c3d\u53ef\u80fd\u6f02\u4eae\u3002\n\n\u5728\u4e00\u5929\u4ee5\u5185\u4f60\u53ef\u4ee5\u9009\u62e9\u4e24\u4e2a\u4e92\u4e0d\u76f8\u540c\u7684\u5927\u697c $i,j$\uff0c\u7136\u540e\u4f7f\u5f97 $a_i\\leftarrow a_i+1$\uff0c$a_j\\leftarrow a_j-1$\u3002\n\n\u4f60\u8ba4\u4e3a\u8fd9\u4e9b\u5927\u697c\u7684\u4e11\u964b\u7a0b\u5ea6\u53d6\u51b3\u4e8e\u6700\u9ad8\u7684\u5927\u697c\u548c\u6700\u4f4e\u7684\u5927\u697c\u4e4b\u95f4\u7684\u9ad8\u5ea6\u5dee\u3002\u5f62\u5f0f\u5316\u5730\u8bf4\uff0c\u8fd9\u4e9b\u5927\u697c\u7684\u4e11\u964b\u7a0b\u5ea6\u4e3a $\\max\\limits_{i=1}^na_i-\\min\\limits_{i=1}^n a_i$\u3002\u4f60\u60f3\u77e5\u9053\u82e5\u5e72\u5929\u4e4b\u540e\uff0c\u8fd9\u4e9b\u5927\u697c\u7684\u4e11\u964b\u7a0b\u5ea6\u7684\u6700\u5c0f\u503c\u662f\u591a\u5c11\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a\n- $t$ \u7ec4\u6570\u636e\uff0c$1\\leqslant t\\leqslant 1000$\u3002\n- $2\\leqslant n\\leqslant 100$\u3002\n- $1\\leqslant a_i\\leqslant 10^7$\u3002\n\nTranslated by Eason_AC  \n2021.12.25"
}