{
    "description": "LuoTianyi gives you a tree with values in its vertices, and the root of the tree is vertex $ 1 $ .\n\nIn one operation, you can change the value in one vertex to any non-negative integer.\n\nNow you need to find the minimum number of operations you need to perform to make each path from the root to leaf $ ^{\\dagger} $ has a [bitwise XOR](https://en.wikipedia.org/wiki/Bitwise_operation#XOR) value of zero.\n\n $ ^{\\dagger} $ A leaf in a rooted tree is a vertex that has exactly one neighbor and is not a root.",
    "inputFormat": "The first line contains a single integer $ n $ ( $ 2 \\le n \\le 10^5 $ ) \u2014 the number of vertices in the tree.\n\nThe second line contains $ n $ integers $ a_1, a_2, \\ldots, a_n $ ( $ 1 \\le a_i \\le 10^9 $ ), the $ i $ -th number represents the value in the $ i $ -th vertex.\n\nNext $ n\u22121 $ lines describe the edges of the tree. The $ i $ -th line contains two integers $ u_i $ and $ v_i $ ( $ 1 \\le u_i,v_i \\le n, u_i \\neq v_i $ ) \u2014 the vertices connected by an edge of the tree. It's guaranteed that the given edges form a tree.",
    "outputFormat": "Print a single integer \u2014 the minimum number of operations.",
    "samples": [
        [
            "6\n3 5 7 5 8 4\n1 2\n1 3\n1 4\n3 5\n4 6",
            "3"
        ],
        [
            "8\n7 10 7 16 19 9 16 11\n1 5\n4 2\n6 5\n5 2\n7 2\n2 3\n3 8",
            "3"
        ],
        [
            "4\n1 2 1 2\n1 2\n2 3\n4 3",
            "0"
        ],
        [
            "9\n4 3 6 1 5 5 5 2 7\n1 2\n2 3\n4 1\n4 5\n4 6\n4 7\n8 1\n8 9",
            "2"
        ]
    ],
    "hint": "The tree in the first example:\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1824C/f5037f32236cd0c12f91d642bcd0ee6276190035.png) If we change the value in the vertex $ 2 $ to $ 3 $ , the value in the vertex $ 5 $ to $ 4 $ , and the value in the vertex $ 6 $ to $ 6 $ , then the tree will be ok.\n\nThe bitwise XOR from the root to the leaf $ 2 $ will be $ 3 \\oplus 3=0 $ .\n\nThe bitwise XOR from the root to the leaf $ 5 $ will be $ 4 \\oplus 7 \\oplus 3=0 $ .\n\nThe bitwise XOR from the root to the leaf $ 6 $ will be $ 6 \\oplus 5 \\oplus 3=0 $ .\n\nThe tree in the second example:\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1824C/d9dc7271f6c9662a7281b9aced7a2291ed846421.png) If we change the value in the vertex $ 2 $ to $ 4 $ , the value in the vertex $ 3 $ to $ 27 $ , and the value in the vertex $ 6 $ to $ 20 $ , then the tree will be ok.\n\nThe bitwise XOR from the root to the leaf $ 6 $ will be $ 20 \\oplus 19 \\oplus 7=0 $ .\n\nThe bitwise XOR from the root to the leaf $ 8 $ will be $ 11 \\oplus 27 \\oplus 4 \\oplus 19 \\oplus 7=0 $ .\n\nThe bitwise XOR from the root to the leaf $ 4 $ will be $ 16 \\oplus 4 \\oplus 19 \\oplus 7=0 $ .\n\nThe bitwise XOR from the root to the leaf $ 7 $ will be $ 16 \\oplus 4 \\oplus 19 \\oplus 7=0 $ .\n\nIn the third example, the only leaf is the vertex $ 4 $ and the bitwise XOR on the path to it is $ 1 \\oplus 2 \\oplus 1 \\oplus 2 = 0 $ , so we don't need to change values.\n\nIn the fourth example, we can change the value in the vertex $ 1 $ to $ 5 $ , and the value in the vertex $ 4 $ to $ 0 $ .\n\nHere $ \\oplus $ denotes the bitwise XOR operation.",
    "translation": "\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u6839\u8282\u70b9\u4e3a $1$ \uff0c\u6bcf\u4e2a\u70b9\u6709\u4e00\u4e2a\u70b9\u6743 $a_i$ \uff0c\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a\u70b9\u4efb\u610f\u4fee\u6539\u70b9\u6743\uff0c\u6c42\u6700\u5c11\u7684\u64cd\u4f5c\u6b21\u6570\uff0c\u4f7f\u5f97\u6bcf\u4e00\u6761\u6839\u7ed3\u70b9\u5230\u53f6\u5b50\u7ed3\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u5f02\u6216\u548c\u90fd\u4e3a $0$ \u3002"
}