{
    "description": "As for the technology in the outside world, it is really too advanced for Gensokyo to even look up to.\n\n\u2014Yasaka Kanako, Symposium of Post-mysticism\n\n\n\nThis is an interactive problem.\n\nUnder the direct supervision of Kanako and the Moriya Shrine, the railway system of Gensokyo is finally finished. GSKR (Gensokyo Railways) consists of $ n $ stations with $ m $ bidirectional tracks connecting them. The $ i $ -th track has length $ l_i $ ( $ 1\\le l_i\\le 10^6 $ ). Due to budget limits, the railway system may not be connected, though there may be more than one track between two stations.\n\nThe value of a railway system is defined as the total length of its all tracks. The maximum (or minimum) capacity of a railway system is defined as the maximum (or minimum) value among all of the currently functional system's [full spanning forest](https://en.wikipedia.org/wiki/Spanning_tree#Spanning_forests).\n\nIn brief, full spanning forest of a graph is a spanning forest with the same connectivity as the given graph.\n\nKanako has a simulator only able to process no more than $ 2m $ queries. The input of the simulator is a string $ s $ of length $ m $ , consisting of characters 0 and/or 1. The simulator will assume the $ i $ -th track functional if $ s_i= $ 1. The device will then tell Kanako the maximum capacity of the system in the simulated state.\n\nKanako wants to know the the minimum capacity of the system with all tracks functional with the help of the simulator.\n\nThe structure of the railway system is fixed in advance. In other words, the interactor is not adaptive.",
    "inputFormat": "The first and only line of input contains two integers $ n,m $ ( $ 2 \\leq n \\leq 200 $ , $ 1\\le m \\le 500 $ ) \u2014 the number of stations and tracks.",
    "outputFormat": "Begin the interaction by reading $ n,m $ .\n\nTo make a query, print \"? $ s $ \" (without quotes, $ s $ is a string of length $ m $ , consisting of characters 0 and/or 1). Then you should read our response from standard input \u2014 the maximum capacity of the system in the simulated state.\n\nIf your program has made an invalid query or has run out of tries, the interactor will terminate immediately and your program will get a verdict Wrong answer.\n\nTo give the final answer, print \"! $ L $ \" (without the quotes, $ L $ is the minimum capacity of the system with all tracks functional). Note that giving this answer is not counted towards the limit of $ 2m $ queries.\n\nAfter printing a query do not forget to output end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use:\n\n- fflush(stdout) or cout.flush() in C++;\n- System.out.flush() in Java;\n- flush(output) in Pascal;\n- stdout.flush() in Python;\n- see documentation for other languages.\n\nHacks\n\nThe first line of input must contain two integers $ n,m $ ( $ 2 \\leq n \\leq 200 $ , $ 1\\le m \\le 500 $ ) \u2014 the number of stations and tracks.\n\nThe next $ m $ lines of input must contain exactly $ 3 $ space-separated integers $ u_i $ , $ v_i $ , $ l_i $ ( $ 1\\le u_i,v_i \\le n $ , $ u_i\\ne v_i $ , $ 1 \\leq l_i \\leq 10^6 $ ) \u2014 the endpoints and the length of the $ i $ -th track.",
    "samples": [
        [
            "5 4\n\n0\n\n5\n\n9\n\n7",
            "? 0000\n\n? 1110\n\n? 1111\n\n? 1101\n\n! 7"
        ]
    ],
    "hint": "Here is the graph of the example, satisfying $ l_i=i $ .\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1687B/91ed2595ccd5b28c792f8d64dc85c03cf1c73365.png)",
    "translation": "> \u8fdb\u6b65\uff1f\u867d\u7136\u6839\u636e\u6240\u8a00\u6240\u6307\u7684\u5185\u5bb9\u4f1a\u6709\u6240\u4e0d\u540c\uff0c\u4e0d\u8fc7\u5173\u4e8e\u6280\u672f\u65b9\u9762\u662f\u5e7b\u60f3\u4e61\u6240\u65e0\u6cd5\u6bd4\u62df\u5462\u3002\u2014\u2014\u516b\u5742\u795e\u5948\u5b50\uff0c\u300a\u4e1c\u65b9\u6c42\u95fb\u53e3\u6388\u300b\n\n**\u8fd9\u662f\u4e00\u9053\u4ea4\u4e92\u9898\u3002**\n\n\u5728\u516b\u5742\u795e\u5948\u5b50\u548c\u5b88\u77e2\u795e\u793e\u7684\u76d1\u7763\u4e4b\u4e0b\uff0c\u5e7b\u60f3\u4e61\u5185\u7684\u94c1\u8def\u7cfb\u7edf GSKR \u53d6\u5f97\u4e86\u6210\u529f\u3002\u5b83\u5305\u542b\u7740 $n$ \u4e2a\u7ad9\u70b9\u548c $m$ \u6761\u53cc\u5411\u7684\u94c1\u8def\u9053\u8def\u76f8\u8fde\uff0c\u7b2c $i$ \u6761\u9053\u8def\u6709\u4e00\u4e2a\u957f\u5ea6 $l_i(1 \\leq l_i \\leq 10^6)$\u3002\u7531\u4e8e\u9884\u7b97\u9650\u5236\uff0c\u8fd9\u4e2a\u94c1\u8def\u7cfb\u7edf\u53ef\u80fd\u5e76\u4e0d\u662f\u8054\u901a\u7684\u3002\u4e24\u4e2a\u7ad9\u70b9\u4e4b\u95f4\u4e5f\u6709\u53ef\u80fd\u6709\u591a\u6761\u94c1\u8def\u9053\u8def\u76f4\u63a5\u76f8\u8fde\u3002\n\n\u4e00\u4e2a\u94c1\u8def\u7cfb\u7edf\u7684\u603b\u4ef7\u503c\u662f\u5b83\u4e0a\u9762\u6240\u6709\u9053\u8def\u7684\u957f\u5ea6\u4e4b\u548c\uff0c\u800c\u4e00\u4e2a\u94c1\u8def\u7cfb\u7edf\u7684\u5bb9\u91cf\u7684\u6700\u5927\uff08\u6700\u5c0f\uff09\u503c\u7b49\u540c\u4e8e\u5176\u6700\u5927\uff08\u6700\u5c0f\uff09\u6743\u7684\u6781\u5927\u751f\u6210\u68ee\u6797\u7684\u603b\u4ef7\u503c\u3002\u5176\u4e2d\uff0c\u6781\u5927\u751f\u6210\u68ee\u6797\u6307\u7684\u662f\u4e00\u4e2a\u8fde\u901a\u6027\u4e0e\u539f\u56fe\u76f8\u540c\u7684\u751f\u6210\u68ee\u6797\u3002\n\n\u73b0\u5728\u795e\u5948\u5b50\u6709\u4e00\u4e2a\u6a21\u62df\u88c5\u7f6e\uff0c\u5b83\u53ef\u4ee5\u4ea7\u751f\u4e0d\u8d85\u8fc7 $2m$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u8f93\u5165\u4e00\u4e2a\u957f\u5ea6\u4e3a $m$ \u7684\u5b57\u7b26\u4e32 $s$\uff08\u4ec5\u7531 $0$ \u6216 $1$ \u6784\u6210\uff09\uff0c\u5176\u4e2d\u5f53 $s_i=1$ \u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u6a21\u62df\u88c5\u7f6e\u4f1a\u5047\u5b9a\u7b2c $i$ \u6761\u94c1\u8def\u9053\u8def\u662f\u53ef\u4ee5\u4f7f\u7528\u7684\u3002\u8fd9\u4e2a\u6a21\u62df\u88c5\u7f6e\u4f1a\u544a\u8bc9\u795e\u5948\u5b50\u8fd9\u4e2a\u94c1\u8def\u7cfb\u7edf\u7684\u6700\u5927\u5bb9\u91cf\u3002\n\n\u795e\u5948\u5b50\u5e0c\u671b\u501f\u52a9\u8fd9\u4e2a\u6a21\u62df\u88c5\u7f6e\uff0c\u77e5\u9053\u5982\u679c\u6bcf\u4e00\u6761\u94c1\u8def\u9053\u8def\u90fd\u80fd\u4f7f\u7528\u4e0a\u7684\u8bdd\uff0c\u90a3\u4e48\u94c1\u8def\u7cfb\u7edf\u7684\u6700\u5c0f\u5bb9\u91cf\u4f1a\u662f\u591a\u5c11\u3002\n\n\u8fd9\u4e2a\u94c1\u8def\u7cfb\u7edf\u7684\u7ed3\u6784\u662f\u5df2\u5b9a\u7684\uff0c\u6362\u800c\u8a00\u4e4b\uff0c\u4ea4\u4e92\u5e93\u5e76\u975e\u81ea\u9002\u5e94\u3002\n\n**\u8f93\u5165\u683c\u5f0f**\n\n\u8f93\u5165\u4e00\u884c\u6b63\u6574\u6570 $n$ \u548c $m$\uff08$2 \\leq n \\leq 200$\uff0c$1 \\leq m \\leq 500$\uff09\u3002\n\n**\u4ea4\u4e92\u683c\u5f0f**\n\n\u5982\u679c\u4f60\u9700\u8981\u4f5c\u51fa\u4e00\u6b21\u8be2\u95ee\u7684\u8bdd\uff0c\u5411\u6807\u51c6\u8f93\u51fa\u8f93\u51fa\u4e00\u884c `? s`\uff0c\u5176\u4e2d $s$ \u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a $m$ \u7684\u4ec5\u7531 $0$ \u6216 $1$ \u6784\u6210\u7684\u5b57\u7b26\u4e32\u3002\u63a5\u7740\u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u5165\u4e00\u884c\u8868\u793a\u6700\u5927\u5bb9\u91cf\u3002\n\n\u5982\u679c\u4f60\u8fdb\u884c\u4e86\u4e0d\u5408\u6cd5\u7684\u8be2\u95ee\u6216\u8005\u8d85\u51fa\u4e86\u8be2\u95ee\u6b21\u6570\u4e0a\u9650\uff0c\u5219\u4f60\u7684\u7a0b\u5e8f\u4f1a\u88ab\u5224\u4f5c Wrong Answer\u3002\n\n\u5982\u679c\u4f60\u9700\u8981\u4f5c\u51fa\u6700\u540e\u7684\u56de\u7b54\uff0c\u90a3\u4e48\u5411\u6807\u51c6\u8f93\u51fa\u8f93\u51fa\u4e00\u884c `! L`\uff0c\u5176\u4e2d $L$ \u6307\u7684\u94c1\u8def\u7cfb\u7edf\u7684\u6700\u5c0f\u5bb9\u91cf\u4f1a\u662f\u591a\u5c11\u3002\u662f\u8fd9\u4e00\u6b65\u4e0d\u4f1a\u88ab\u8ba1\u5165\u5230 $2m$ \u6b21\u64cd\u4f5c\u7684\u4e0a\u9650\u3002\n\n\u5728\u6bcf\u4e00\u6b21\u67e5\u8be2\u4e4b\u540e\uff0c\u8bf7\u4e0d\u8981\u5fd8\u8bb0\u5237\u65b0\u7f13\u51b2\u533a\uff0c\u5426\u5219\u4f60\u7684\u7a0b\u5e8f\u4f1a\u88ab\u5224\u4f5c Idleness limit exceeded\u3002"
}