{
    "description": "Vasya has a tree consisting of $ n $ vertices with root in vertex $ 1 $ . At first all vertices has $ 0 $ written on it.\n\nLet $ d(i, j) $ be the distance between vertices $ i $ and $ j $ , i.e. number of edges in the shortest path from $ i $ to $ j $ . Also, let's denote $ k $ -subtree of vertex $ x $ \u2014 set of vertices $ y $ such that next two conditions are met:\n\n- $ x $ is the ancestor of $ y $ (each vertex is the ancestor of itself);\n- $ d(x, y) \\le k $ .\n\nVasya needs you to process $ m $ queries. The $ i $ -th query is a triple $ v_i $ , $ d_i $ and $ x_i $ . For each query Vasya adds value $ x_i $ to each vertex from $ d_i $ -subtree of $ v_i $ .\n\nReport to Vasya all values, written on vertices of the tree after processing all queries.",
    "inputFormat": "The first line contains single integer $ n $ ( $ 1 \\le n \\le 3 \\cdot 10^5 $ ) \u2014 number of vertices in the tree.\n\nEach of next $ n - 1 $ lines contains two integers $ x $ and $ y $ ( $ 1 \\le x, y \\le n $ ) \u2014 edge between vertices $ x $ and $ y $ . It is guarantied that given graph is a tree.\n\nNext line contains single integer $ m $ ( $ 1 \\le m \\le 3 \\cdot 10^5 $ ) \u2014 number of queries.\n\nEach of next $ m $ lines contains three integers $ v_i $ , $ d_i $ , $ x_i $ ( $ 1 \\le v_i \\le n $ , $ 0 \\le d_i \\le 10^9 $ , $ 1 \\le x_i \\le 10^9 $ ) \u2014 description of the $ i $ -th query.",
    "outputFormat": "Print $ n $ integers. The $ i $ -th integers is the value, written in the $ i $ -th vertex after processing all queries.",
    "samples": [
        [
            "5\n1 2\n1 3\n2 4\n2 5\n3\n1 1 1\n2 0 10\n4 10 100\n",
            "1 11 1 100 0 \n"
        ],
        [
            "5\n2 3\n2 1\n5 4\n3 4\n5\n2 0 4\n3 10 1\n1 2 3\n2 3 10\n1 1 7\n",
            "10 24 14 11 11 \n"
        ]
    ],
    "hint": "In the first exapmle initial values in vertices are $ 0, 0, 0, 0, 0 $ . After the first query values will be equal to $ 1, 1, 1, 0, 0 $ . After the second query values will be equal to $ 1, 11, 1, 0, 0 $ . After the third query values will be equal to $ 1, 11, 1, 100, 0 $ .",
    "translation": "\u9898\u610f\uff1a\n\nVasya\u6709\u4e00\u68f5\u6811\uff0c\u5b83\u6709n\u4e2a\u8282\u70b9\uff0c1\u53f7\u8282\u70b9\u4e3a\u6839\u8282\u70b9\uff0c\u521d\u59cb\u6240\u6709\u70b9\u7684\u6743\u503c\u4e3a0\u3002\n\n\u5b9a\u4e49\u4ee5\u4e0b\u4e24\u4e2a\u4e1c\u897f\uff1a\n\n1 \u51fd\u6570d(i,j)\n\n\u6307\u8282\u70b9i\u5230j\u6240\u7ecf\u8fc7\u8fb9\u7684\u6570\u91cf\u3002\n\n2 x\u8282\u70b9\u7684k\u7ea7\u5b50\u6811\n\n\u6307\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u70b9\u7684\u96c6\u5408\uff1a\n\n\u2460 x\u4e3a\u8be5\u70b9\u7684\u7956\u5148\uff0c\u89c4\u5b9a\u81ea\u5df1\u4e5f\u662f\u81ea\u5df1\u7684\u7956\u5148\u3002\n\n\u2461$d(i,j) \\leq k$\u3002\n\nVasya\u6709m\u6761\u8981\u6c42\u8981\u4f60\u6765\u89e3\u51b3\uff1a\n\n\u7ed9\u51fav,d,x\uff0c\u5c06\u4ee5v\u8282\u70b9\u7684d\u7ea7\u5b50\u6811\u7684\u6743\u503c\u52a0\u4e0ax\u3002\n\n\u5f53\u5904\u7406\u5b8cVasya\u6240\u6709\u7684\u8981\u6c42\u65f6\uff0c\u8f93\u51fa\u6240\u6709\u70b9\u7684\u6743\u503c\u3002\n\n\u8f93\u5165\u6570\u636e\uff1a\n\n\u7b2c1\u884c\u5305\u62ec\u4e00\u4e2a\u6574\u6570\uff0cn\uff08$1 \\leq n \\leq 3 \\cdot 10^{5}$\uff09\uff0c\u542b\u4e49\u5982\u4e0a\u3002\n\n\u7b2c2\u884c\u5230\u7b2cn\u884c\uff0c\u5305\u62ec\u4e24\u4e2a\u6574\u6570x\u548cy\uff08$1 \\leq x,y \\leq n$\uff09\uff0c\u7528\u7a7a\u683c\u9694\u5f00\uff0c\u8868\u793a\u4e24\u4e2a\u70b9\u4e4b\u95f4\u6709\u4e00\u6761\u8fb9\u3002\n\n\u7b2cn+1\u884c\u6709\u4e00\u4e2a\u6574\u6570m\uff08$1 \\leq m \\leq 3 \\cdot 10^{5}$\uff09\uff0c\u8868\u793a\u6709m\u4e2a\u8981\u6c42\u3002\n\n\u7b2cn+2\u884c\u5230\u7b2cn+m+1\u884c\uff0c\u6709\u4e09\u4e2a\u6574\u6570v,d,x\uff08$ 1 \\leq  v_{i} \\leq n , 0 \\leq d_{i} \\leq 10^{9} , 1 \\leq x_{i} \\leq 10^{9}$\uff09\uff0c\u7528\u7a7a\u683c\u9694\u5f00\uff0c\u542b\u4e49\u5982\u4e0a\u3002\n\n\u8f93\u51fa\u6570\u636e\uff1a\n\n\u51711\u884c\uff0c\u5305\u62ecn\u4e2a\u6570\u5b57\uff0c\u7528\u7a7a\u683c\u9694\u5f00\uff0c\u7b2ci\u4e2a\u6570\u5b57\u8868\u793ai\u53f7\u8282\u70b9\u7684\u6743\u503c\u3002\n\n\u6837\u4f8b1\u89e3\u91ca\uff1a\n\n\u5728\u7b2c\u4e00\u6b21\u4fee\u6539\u540e\uff0c\u4fee\u6539\u4e861,2,3\u53f7\u8282\u70b9\uff0c\u4ed6\u4eec\u7684\u6743\u503c\u52a01\uff0c\u6240\u6709\u7684\u6743\u503c\u4e3a1,1,1,0,0\u3002\n\n\u5728\u7b2c\u4e8c\u6b21\u4fee\u6539\u540e\uff0c\u4fee\u6539\u4e862\u53f7\u8282\u70b9\uff0c\u4ed6\u7684\u6743\u503c\u52a010\uff0c\u6240\u6709\u7684\u6743\u503c\u4e3a1,11,1,0,0\u3002\n\n\u5728\u7b2c\u4e09\u6b21\u4fee\u6539\u540e\uff0c\u4fee\u6539\u4e864\u53f7\u8282\u70b9\uff0c\u4ed6\u7684\u6743\u503c\u52a0100\uff0c\u6240\u6709\u7684\u6743\u503c\u4e3a1,11,1,100,0\u3002\n\n"
}