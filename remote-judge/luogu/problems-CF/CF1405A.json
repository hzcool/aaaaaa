{
    "description": "A permutation of length $ n $ is an array consisting of $ n $ distinct integers from $ 1 $ to $ n $ in arbitrary order. For example, $ [2,3,1,5,4] $ is a permutation, but $ [1,2,2] $ is not a permutation ( $ 2 $ appears twice in the array) and $ [1,3,4] $ is also not a permutation ( $ n=3 $ but there is $ 4 $ in the array).\n\nLet $ p $ be any permutation of length $ n $ . We define the fingerprint $ F(p) $ of $ p $ as the sorted array of sums of adjacent elements in $ p $ . More formally,\n\n $ $$$F(p)=\\mathrm{sort}([p_1+p_2,p_2+p_3,\\ldots,p_{n-1}+p_n]). $ $ </p><p>For example, if  $ n=4 $  and  $ p=\\[1,4,2,3\\], $  then the fingerprint is given by  $ F(p)=\\\\mathrm{sort}(\\[1+4,4+2,2+3\\])=\\\\mathrm{sort}(\\[5,6,5\\])=\\[5,5,6\\] $ .</p><p>You are given a permutation  $ p $  of length  $ n $ . Your task is to find a <span class=\"tex-font-style-bf\">different</span> permutation  $ p' $  with the same fingerprint. Two permutations  $ p $  and  $ p' $  are considered different if there is some index  $ i $  such that  $ p\\_i \\\\ne p'\\_i$$$.",
    "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $ t $ ( $ 1 \\le t \\le 668 $ ). Description of the test cases follows.\n\nThe first line of each test case contains a single integer $ n $ ( $ 2\\le n\\le 100 $ ) \u2014 the length of the permutation.\n\nThe second line of each test case contains $ n $ integers $ p_1,\\ldots,p_n $ ( $ 1\\le p_i\\le n $ ). It is guaranteed that $ p $ is a permutation.",
    "outputFormat": "For each test case, output $ n $ integers $ p'_1,\\ldots, p'_n $ \u2014 a permutation such that $ p'\\ne p $ and $ F(p')=F(p) $ .\n\nWe can prove that for every permutation satisfying the input constraints, a solution exists.\n\nIf there are multiple solutions, you may output any.",
    "samples": [
        [
            "3\n2\n1 2\n6\n2 1 6 5 4 3\n5\n2 4 3 1 5",
            "2 1\n1 2 5 6 3 4\n3 1 5 2 4"
        ]
    ],
    "hint": "In the first test case, $ F(p)=\\mathrm{sort}([1+2])=[3] $ .\n\nAnd $ F(p')=\\mathrm{sort}([2+1])=[3] $ .\n\nIn the second test case, $ F(p)=\\mathrm{sort}([2+1,1+6,6+5,5+4,4+3])=\\mathrm{sort}([3,7,11,9,7])=[3,7,7,9,11] $ .\n\nAnd $ F(p')=\\mathrm{sort}([1+2,2+5,5+6,6+3,3+4])=\\mathrm{sort}([3,7,11,9,7])=[3,7,7,9,11] $ .\n\nIn the third test case, $ F(p)=\\mathrm{sort}([2+4,4+3,3+1,1+5])=\\mathrm{sort}([6,7,4,6])=[4,6,6,7] $ .\n\nAnd $ F(p')=\\mathrm{sort}([3+1,1+5,5+2,2+4])=\\mathrm{sort}([4,6,7,6])=[4,6,6,7] $ .",
    "translation": "\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u6392\u5217 $p$\uff0c\u5b9a\u4e49\u5176 **fingerprint** $F(p)$ \u4e3a $p$ \u4e2d\u76f8\u90bb\u5143\u7d20\u548c\u6392\u5e8f\u540e\u5f97\u5230\u7684\u6570\u7ec4\u3002\u66f4\u5f62\u5f0f\u5316\u5730\uff0c\n\n$$F(p)=\\text{sort}([p_1+p_2,p_2+p_3,\\cdots,p_{n-1}+p_n])$$\n\n\u6bd4\u5982 $n=4$\uff0c$p=[1,4,2,3]$\uff0c\u5219 $F(p)=\\text{sort}([1+4,4+2,2+3])=\\text{sort}([5,6,5])=[5,5,6]$\u3002\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u6392\u5217 $p$\uff0c\u4f60\u9700\u8981\u627e\u5230\u4e00\u4e2a\u4e0e $p$ \u4e0d\u540c\u4f46 fingerprint \u76f8\u540c\u7684\u6392\u5217 $p'$\u3002"
}