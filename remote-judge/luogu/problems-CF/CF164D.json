{
    "description": "You are given $ n $ points on the plane. You need to delete exactly $ k $ of them $ (k&lt;n) $ so that the diameter of the set of the remaining $ n-k $ points were as small as possible. The diameter of a set of points is the maximum pairwise distance between the points of the set. The diameter of a one point set equals zero.",
    "inputFormat": "The first input line contains a pair of integers $ n,k $ ( $ 2<=n<=1000 $ , $ 1<=k<=30 $ , $ k&lt;n $ ) \u2014 the numbers of points on the plane and the number of points to delete, correspondingly.\n\nNext $ n $ lines describe the points, one per line. Each description consists of a pair of integers $ x_{i},y_{i} $ ( $ 0<=x_{i},y_{i}<=32000 $ ) \u2014 the coordinates of the $ i $ -th point. The given points can coincide.",
    "outputFormat": "Print $ k $ different space-separated integers from $ 1 $ to $ n $ \u2014 the numbers of points to delete. The points are numbered in the order, in which they are given in the input from $ 1 $ to $ n $ . You can print the numbers in any order. If there are multiple solutions, print any of them.",
    "samples": [
        [
            "5 2\n1 2\n0 0\n2 2\n1 1\n3 3\n",
            "5 2"
        ],
        [
            "4 1\n0 0\n0 0\n1 1\n1 1\n",
            "3"
        ]
    ],
    "hint": "",
    "translation": "# \u9898\u76ee\u63cf\u8ff0\r\n\u4f60\u5728\u56fe\u4e0a\u6709N\u4e2a\u70b9\u3002\u4f60\u9700\u8981\u5b8c\u5168\u5220\u9664\u5176\u4e2d\u7684k\uff08k<n\uff09\u4e2a\u70b9\uff0c\u4ee5\u4fbf\u4f7f\u5269\u4f59\u7684n-k\u4e2a\u70b9\u7684\u76f4\u5f84\u5c3d\u53ef\u80fd\u5c0f\u3002\u4e00\u7ec4\u70b9\u7684\u76f4\u5f84\u662f\u8be5\u7ec4\u70b9\u4e2d\u6bcf\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u6700\u5927\u6210\u5bf9\u8ddd\u79bb\u3002\u4e00\u4e2a\u70b9\u7684\u76f4\u5f84\u7b49\u4e8e\u96f6\u3002\r\n# \u8f93\u5165\u8f93\u51fa\u683c\u5f0f\r\n### \u8f93\u5165\u683c\u5f0f\r\n\u7b2c\u4e00\u884c\u5305\u542b\u4e00\u5bf9\u6574\u6570n,k\uff082<=n<=1000,1<=k<=30,k<n\uff09n\u4ee3\u8868\u5e73\u9762\u4e0a\u7684\u70b9\u7684\u6570\u76ee\uff0ck\u4ee3\u8868\u8981\u5220\u9664\u7684\u70b9\u7684\u6570\u76ee\u3002\r\n\u63a5\u4e0b\u6765\u7684n\u884c\u63cf\u8ff0\u70b9\uff0c\u6bcf\u884c\u63cf\u8ff0\u4e00\u4e2a\u70b9\u3002\u6bcf\u884c\u5305\u542b\u4e00\u5bf9\u6574\u6570x\uff0cy\uff080<=x\uff0cy<=32000\uff09\u8868\u793a\u7b2ci\u70b9\u7684\u5750\u6807\u3002\u53ef\u80fd\u6709\u91cd\u70b9\u3002\r\n### \u8f93\u51fa\u683c\u5f0f\r\n\u8f93\u51fak\u4e2a\u4ee5\u7a7a\u95f4\u5206\u9694\u7684\uff0c\u8981\u5220\u9664\u7684\u70b9\u7684\u5e8f\u53f7\uff08\u8f93\u5165\u4e2d\u7684\u70b9\u662f\u6309\u4ece1\u5230n\u7684\u987a\u5e8f\u7f16\u53f7\u7684\uff09\u3002\u4f60\u53ef\u4ee5\u6309\u4efb\u610f\u987a\u5e8f\u8f93\u51fa\u3002\u5982\u679c\u6709\u591a\u4e2a\u89e3\u51b3\u65b9\u6848\uff0c\u8f93\u51fa\u4efb\u610f\u4e00\u79cd\u65b9\u6848\u3002"
}