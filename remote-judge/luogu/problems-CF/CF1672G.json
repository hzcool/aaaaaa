{
    "description": "There is a grid with $ r $ rows and $ c $ columns, where the square on the $ i $ -th row and $ j $ -th column has an integer $ a_{i, j} $ written on it. Initially, all elements are set to $ 0 $ . We are allowed to do the following operation:\n\n- Choose indices $ 1 \\le i \\le r $ and $ 1 \\le j \\le c $ , then replace all values on the same row or column as $ (i, j) $ with the value xor $ 1 $ . In other words, for all $ a_{x, y} $ where $ x=i $ or $ y=j $ or both, replace $ a_{x, y} $ with $ a_{x, y} $ xor $ 1 $ .\n\nYou want to form grid $ b $ by doing the above operations a finite number of times. However, some elements of $ b $ are missing and are replaced with '?' instead.\n\nLet $ k $ be the number of '?' characters. Among all the $ 2^k $ ways of filling up the grid $ b $ by replacing each '?' with '0' or '1', count the number of grids, that can be formed by doing the above operation a finite number of times, starting from the grid filled with $ 0 $ . As this number can be large, output it modulo $ 998244353 $ .",
    "inputFormat": "The first line contains two integers $ r $ and $ c $ ( $ 1 \\le r, c \\le 2000 $ ) \u2014 the number of rows and columns of the grid respectively.\n\nThe $ i $ -th of the next $ r $ lines contain $ c $ characters $ b_{i, 1}, b_{i, 2}, \\ldots, b_{i, c} $ ( $ b_{i, j} \\in \\{0, 1, ?\\} $ ).",
    "outputFormat": "Print a single integer representing the number of ways to fill up grid $ b $ modulo $ 998244353 $ .",
    "samples": [
        [
            "3 3\n?10\n1??\n010",
            "1"
        ],
        [
            "2 3\n000\n001",
            "0"
        ],
        [
            "1 1\n?",
            "2"
        ],
        [
            "6 9\n1101011?0\n001101?00\n101000110\n001011010\n0101?01??\n00?1000?0",
            "8"
        ]
    ],
    "hint": "In the first test case, the only way to fill in the $ \\texttt{?} $ s is to fill it in as such:\n\n 010111010This can be accomplished by doing a single operation by choosing $ (i,j)=(2,2) $ .\n\nIn the second test case, it can be shown that there is no sequence of operations that can produce that grid.",
    "translation": "\u5bf9\u4e8e\u4e00\u4e2a $n\\times m$ \u7684 `01` \u77e9\u9635\uff0c\u6bcf\u6b21\u3010\u64cd\u4f5c\u3011\u53ef\u4ee5\u628a\u4e00\u4e2a\u5143\u7d20 $(i,j)$ \u548c\u4e0e\u5b83\u540c\u884c\u6216\u540c\u5217\u7684\u6240\u6709\u683c\u5b50\u4e00\u8d77\u53d6\u53cd\u3002\n\n\u7ed9\u5b9a\u4e00\u4e2a\u7531 `01?` \u6784\u6210\u7684 $n\\times m$ \u77e9\u9635\uff0c\u95ee\u6709\u591a\u5c11\u79cd\u5c06 `?` \u66ff\u6362\u4e3a `0` \u6216 `1` \u7684\u65b9\u6848\u4f7f\u5f97\u6b64\u77e9\u9635\u53ef\u4ee5\u901a\u8fc7\u4e0a\u8ff0\u64cd\u4f5c\u6d88\u6210\u5168 `0` \u7684\u77e9\u9635\u3002"
}