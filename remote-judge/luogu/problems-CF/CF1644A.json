{
    "description": "The knight is standing in front of a long and narrow hallway. A princess is waiting at the end of it.\n\nIn a hallway there are three doors: a red door, a green door and a blue door. The doors are placed one after another, however, possibly in a different order. To proceed to the next door, the knight must first open the door before.\n\nEach door can be only opened with a key of the corresponding color. So three keys: a red key, a green key and a blue key \u2014 are also placed somewhere in the hallway. To open the door, the knight should first pick up the key of its color.\n\nThe knight has a map of the hallway. It can be transcribed as a string, consisting of six characters:\n\n- R, G, B \u2014 denoting red, green and blue doors, respectively;\n- r, g, b \u2014 denoting red, green and blue keys, respectively.\n\nEach of these six characters appears in the string exactly once.\n\nThe knight is standing at the beginning of the hallway \u2014 on the left on the map.\n\nGiven a map of the hallway, determine if the knight can open all doors and meet the princess at the end of the hallway.",
    "inputFormat": "The first line contains a single integer $ t $ ( $ 1 \\le t \\le 720 $ ) \u2014 the number of testcases.\n\nEach testcase consists of a single string. Each character is one of R, G, B (for the doors), r, g, b (for the keys), and each of them appears exactly once.",
    "outputFormat": "For each testcase, print YES if the knight can open all doors. Otherwise, print NO.",
    "samples": [
        [
            "4\nrgbBRG\nRgbrBG\nbBrRgG\nrgRGBb",
            "YES\nNO\nYES\nNO"
        ]
    ],
    "hint": "In the first testcase, the knight first collects all keys, then opens all doors with them.\n\nIn the second testcase, there is a red door right in front of the knight, but he doesn't have a key for it.\n\nIn the third testcase, the key to each door is in front of each respective door, so the knight collects the key and uses it immediately three times.\n\nIn the fourth testcase, the knight can't open the blue door.",
    "translation": "\u6709\u4e00\u4e2a\u9a91\u58eb\u7ad9\u5728\u4e00\u6761\u8d70\u5eca\u7684\u5de6\u7aef\uff0c\u5728\u8d70\u5eca\u7684\u53f3\u7aef\uff0c\u4e00\u4f4d\u516c\u4e3b\u6b63\u5728\u7b49\u5f85\u4ed6\u7684\u5230\u6765\u3002\n\n\u5728\u6765\u5230\u8fd9\u91cc\u4e4b\u524d\uff0c\u9a91\u58eb\u5c31\u4e86\u89e3\u5230\uff0c\u8fd9\u6761\u8d70\u5eca\u4e00\u5171\u6709\u4e09\u6247\u95e8\uff1a\u7ea2\u95e8\u3001\u7eff\u95e8\u548c\u84dd\u95e8\u3002\u5206\u522b\u5bf9\u5e94\u8fd9\u4e09\u6247\u95e8\u7684\u94a5\u5319\u5206\u522b\u662f\u7ea2\u94a5\u5319\u3001\u7eff\u94a5\u5319\u548c\u84dd\u94a5\u5319\u3002\u4ed6\u8fd8\u62e5\u6709\u4e00\u5f20\u8fd9\u6761\u8d70\u5eca\u7684\u5730\u56fe\uff0c\u5176\u53ef\u4ee5\u8f6c\u5316\u6210\u4e00\u4e2a\u4ec5\u5305\u542b\u4ee5\u4e0b $6$ \u4e2a\u5b57\u7b26\u7684\u5b57\u7b26\u4e32\uff1a\n\n- `R`\u3001`G`\u3001`B`\uff1a\u5206\u522b\u8868\u793a\u7ea2\u95e8\u3001\u7eff\u95e8\u548c\u84dd\u95e8\u3002\n- `r`\u3001`g`\u3001`b`\uff1a\u5206\u522b\u8868\u793a\u7ea2\u94a5\u5319\u3001\u7eff\u94a5\u5319\u548c\u84dd\u94a5\u5319\u3002\n\n\u9a91\u58eb\u80fd\u591f\u7ecf\u8fc7\u4e00\u6247\u95e8\uff0c\u5f53\u4e14\u4ec5\u5f53\u9a91\u58eb\u62e5\u6709\u4e0e\u5176\u5bf9\u5e94\u7684\u94a5\u5319\u3002\u7531\u4e8e\u516c\u4e3b\u4e0d\u613f\u610f\u7b49\u592a\u4e45\uff0c\u56e0\u6b64\u9a91\u58eb**\u53ea\u80fd\u4e00\u76f4\u5411\u53f3\u7aef\u8d70\uff0c\u4e0d\u80fd\u56de\u5934**\u3002\n\n\u8bf7\u5224\u65ad\u9a91\u58eb\u80fd\u5426\u8d70\u5230\u8d70\u5eca\u7684\u53f3\u7aef\u548c\u516c\u4e3b\u4f1a\u5408\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$t$ \u7ec4\u6570\u636e\uff0c$1\\leqslant t\\leqslant 720$\u3002\n\nTranslated by Eason_AC"
}