{
    "description": "Not so long ago, Vlad had a birthday, for which he was presented with a package of candies. There were $ n $ types of candies, there are $ a_i $ candies of the type $ i $ ( $ 1 \\le i \\le n $ ).\n\nVlad decided to eat exactly one candy every time, choosing any of the candies of a type that is currently the most frequent (if there are several such types, he can choose any of them). To get the maximum pleasure from eating, Vlad does not want to eat two candies of the same type in a row.\n\nHelp him figure out if he can eat all the candies without eating two identical candies in a row.",
    "inputFormat": "The first line of input data contains an integer $ t $ ( $ 1 \\le t \\le 10^4 $ ) \u2014 the number of input test cases.\n\nThe following is a description of $ t $ test cases of input, two lines for each.\n\nThe first line of the case contains the single number $ n $ ( $ 1 \\le n \\le 2 \\cdot 10^5 $ ) \u2014 the number of types of candies in the package.\n\nThe second line of the case contains $ n $ integers $ a_i $ ( $ 1 \\le a_i \\le 10^9 $ ) \u2014 the number of candies of the type $ i $ .\n\nIt is guaranteed that the sum of $ n $ for all cases does not exceed $ 2 \\cdot 10^5 $ .",
    "outputFormat": "Output $ t $ lines, each of which contains the answer to the corresponding test case of input. As an answer, output \"YES\" if Vlad can eat candy as planned, and \"NO\" otherwise.\n\nYou can output the answer in any case (for example, the strings \"yEs\", \"yes\", \"Yes\" and \"YES\" will be recognized as a positive answer).",
    "samples": [
        [
            "6\n2\n2 3\n1\n2\n5\n1 6 2 4 3\n4\n2 2 2 1\n3\n1 1000000000 999999999\n1\n1",
            "YES\nNO\nNO\nYES\nYES\nYES"
        ]
    ],
    "hint": "In the first example, it is necessary to eat sweets in this order:\n\n- a candy of the type $ 2 $ , it is the most frequent, now $ a = [2, 2] $ ;\n- a candy of the type $ 1 $ , there are the same number of candies of the type $ 2 $ , but we just ate one, now $ a = [1, 2] $ ;\n- a candy of the type $ 2 $ , it is the most frequent, now $ a = [1, 1] $ ;\n- a candy of the type $ 1 $ , now $ a = [0, 1] $ ;\n- a candy of the type $ 2 $ , now $ a = [0, 0] $ and the candy has run out.\n\nIn the second example, all the candies are of the same type and it is impossible to eat them without eating two identical ones in a row.\n\nIn the third example, first of all, a candy of the type $ 2 $ will be eaten, after which this kind will remain the only kind that is the most frequent, and you will have to eat a candy of the type $ 2 $ again.",
    "translation": "\u5171\u6709 $t$ \u7ec4\u6570\u636e\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u6570\u636e\uff0c\u7ed9\u5b9a\u4e00\u4e2a $n$ \u548c\u4e00\u4e2a\u5143\u7d20\u4e2a\u6570\u4e3a $n$ \u7684\u6570\u5217 $A$\u3002\u5176\u4e2d $n$ \u4e3a\u7cd6\u7684\u79cd\u7c7b\u6570\uff0c$A_i$ \u4e3a\u7b2c $i$ \u4e2a\u79cd\u7c7b\u7cd6\u7684\u4e2a\u6570\u3002\u6709\u4e00\u4e2a\u4eba\u4e00\u6b21\u53ea\u5403\u4e00\u9897\u7cd6\uff0c\u8fd9\u9897\u7cd6\u662f\u5f53\u524d\u6700\u591a\u7684\u90a3\u4e2a\u79cd\u7c7b\u91cc\u7684\u4e00\u9897\uff0c\u4ed6\u4e0d\u5e0c\u671b\u6709\u8fde\u7eed\u4e24\u6b21\u540c\u65f6\u5403\u540c\u4e00\u79cd\u7c7b\u91cc\u7684\u7cd6\uff0c\u8bf7\u95ee\u4ed6\u80fd\u5426\u505a\u5230\uff0c\u80fd\u5c31\u8f93\u51fa $YES$\uff0c\u5426\u5219\u8f93\u51fa $NO$\u3002"
}