{
    "description": "You are given an acyclic directed graph, consisting of $ n $ vertices and $ m $ edges. The graph contains no multiple edges and no self-loops.\n\nThe vertex is called a source if it has no incoming edges. The vertex is called a sink if it has no outgoing edges. These definitions imply that some vertices can be both source and sink.\n\nThe number of sources in the given graph is equal to the number of sinks in it, and each of these numbers doesn't exceed $ 20 $ .\n\nThe following algorithm is applied to the graph:\n\n1. if the graph has no sources and sinks then quit;\n2. choose arbitrary source $ s $ , arbitrary sink $ t $ , add an edge from $ t $ to $ s $ to the graph and go to step $ 1 $ (that operation pops $ s $ out of sources and $ t $ out of sinks). Note that $ s $ and $ t $ may be the same vertex, then a self-loop is added.\n\nAt the end you check if the graph becomes strongly connected (that is, any vertex is reachable from any other vertex).\n\nYour task is to check that the graph becomes strongly connected no matter the choice of sources and sinks on the second step of the algorithm.",
    "inputFormat": "The first line contains two integers $ n $ and $ m $ ( $ 1 \\le n, m \\le 10^6 $ ) \u2014 the number of vertices and the number of edges in the graph, respectively.\n\nEach of the next $ m $ lines contains two integers $ v_i, u_i $ ( $ 1 \\le v_i, u_i \\le n $ , $ v_i \\ne u_i $ ) \u2014 the description of the $ i $ -th edge of the original graph.\n\nIt is guaranteed that the number of sources and the number of sinks in the graph are the same and they don't exceed $ 20 $ . It is guaranteed that the given graph contains no multiple edges. It is guaranteed that the graph contains no cycles.",
    "outputFormat": "Print \"YES\" if the graph becomes strongly connected no matter the choice of sources and sinks on the second step of the algorithm. Otherwise print \"NO\".",
    "samples": [
        [
            "3 1\n1 2\n",
            "NO\n"
        ],
        [
            "3 3\n1 2\n1 3\n2 3\n",
            "YES\n"
        ],
        [
            "4 4\n1 2\n1 3\n4 2\n4 3\n",
            "YES\n"
        ]
    ],
    "hint": "",
    "translation": "## \u9898\u610f\u7ffb\u8bd1\n\n\u7ed9\u51fa\u4e00\u5f20 DAG\uff08$1\\leq n, m\\leq 10^6$\uff0c\u5176\u4e2d $n$ \u4e3a\u7ed3\u70b9\u6570\uff0c$m$ \u4e3a\u8fb9\u6570\uff09\n\n\u79f0\u65e0\u5165\u8fb9\u7684\u7ed3\u70b9\u4e3a \u201c\u6e90\u70b9\u201d\uff1b\u65e0\u51fa\u8fb9\u7684\u7ed3\u70b9\u4e3a \u201c\u6c47\u70b9\u201d\u3002\u6211\u4eec\u8fd8\u4fdd\u8bc1\u8fd9\u5f20 DAG \u7684\u6e90\u70b9\u6570\u91cf\u4e0e\u6c47\u70b9\u6570\u91cf\u76f8\u7b49\uff0c\u4e14\u5747\u4e0d\u8d85\u8fc7 $20$ \u4e2a\n\n\u73b0\u5728\u6211\u4eec\u5bf9\u8fd9\u5f20 DAG \u91cd\u590d\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\n1. \u9009\u62e9**\u4efb\u610f**\u4e00\u5bf9\u6e90\u70b9\u4e0e\u6c47\u70b9 $s, t$\n2. \u6dfb\u52a0\u4e00\u6761\uff08\u6709\u5411\uff09\u8fb9 $(t, s)$\uff1b\u5982\u679c\u4ecd\u8fd8\u6709\u6e90\u70b9\u4e0e\u6c47\u70b9\uff0c\u5c31\u518d\u56de\u5230\u64cd\u4f5c $1$\u3002\u53ef\u4ee5\u53d1\u73b0\u8be5\u6b21\u64cd\u4f5c\u5c06\u4f1a\u5bfc\u81f4 $s$ \u4e0d\u518d\u662f\u4e00\u4e2a\u6e90\u70b9\uff0c$t$ \u4e0d\u518d\u662f\u4e00\u4e2a\u6c47\u70b9\uff1b\u5e76\u4e14\u8be5\u6b21\u64cd\u4f5c\u8fd8\u6709\u53ef\u80fd\u6dfb\u52a0\u4e00\u4e2a**\u81ea\u73af**\n\n\u73b0\u5728\u95ee\uff0c\u65e0\u8bba\u64cd\u4f5c\u4e2d\u7684\u5177\u4f53\u9009\u62e9\u5982\u4f55\uff0c\u8be5\u56fe\u5728\u6240\u6709\u64cd\u4f5c\u7ed3\u675f\u540e\uff0c\u662f\u5426**\u603b\u662f**\u6210\u4e3a**\u4e00\u4e2a**\u5f3a\u8054\u901a\u5206\u91cf\uff08\u5373\u4efb\u610f\u4e00\u5bf9\u7ed3\u70b9\u95f4\u90fd\u53ef\u4ee5\u76f8\u4e92\u5230\u8fbe\uff09\n\n## \u8f93\u5165\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570 $n, m$\uff08$1\\leq n, m\\leq 10^6$\uff09\n\n\u63a5\u4e0b\u6765 $m$ \u6bcf\u884c\u4e24\u4e2a\u6574\u6570 $v_i, u_i$\uff08$1\\leq v_i, u_i\\leq n, v_i\\not=u_i$\uff09\uff0c\u63cf\u8ff0\u56fe\u4e2d\u7684\u4e00\u6761\u6709\u5411\u8fb9 $(v_i, u_i)$\n\n## \u8f93\u51fa\u683c\u5f0f\n\n\u82e5\u6240\u6709\u64cd\u4f5c\u7ed3\u675f\u540e\uff0c\u8be5\u56fe\u603b\u662f\u6210\u4e3a\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\uff0c\u5c31\u8f93\u51fa `YES`\uff1b\u53cd\u4e4b\u8f93\u51fa `NO`"
}