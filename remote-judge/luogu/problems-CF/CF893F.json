{
    "description": "You are given a rooted tree consisting of $ n $ vertices. Each vertex has a number written on it; number $ a_{i} $ is written on vertex $ i $ .\n\nLet's denote $ d(i,j) $ as the distance between vertices $ i $ and $ j $ in the tree (that is, the number of edges in the shortest path from $ i $ to $ j $ ). Also let's denote the  $ k $ -blocked subtree of vertex $ x $ as the set of vertices $ y $ such that both these conditions are met:\n\n- $ x $ is an ancestor of $ y $ (every vertex is an ancestor of itself);\n- $ d(x,y)<=k $ .\n\nYou are given $ m $ queries to the tree. $ i $ -th query is represented by two numbers $ x_{i} $ and $ k_{i} $ , and the answer to this query is the minimum value of $ a_{j} $ among such vertices $ j $ such that $ j $ belongs to $ k_{i} $ -blocked subtree of $ x_{i} $ .\n\nWrite a program that would process these queries quickly!\n\nNote that the queries are given in a modified way.",
    "inputFormat": "The first line contains two integers $ n $ and $ r $ ( $ 1<=r<=n<=100000 $ ) \u2014 the number of vertices in the tree and the index of the root, respectively.\n\nThe second line contains $ n $ integers $ a_{1},a_{2},...,a_{n} $ ( $ 1<=a_{i}<=10^{9} $ ) \u2014 the numbers written on the vertices.\n\nThen $ n-1 $ lines follow, each containing two integers $ x $ and $ y $ ( $ 1<=x,y<=n $ ) and representing an edge between vertices $ x $ and $ y $ . It is guaranteed that these edges form a tree.\n\nNext line contains one integer $ m $ ( $ 1<=m<=10^{6} $ ) \u2014 the number of queries to process.\n\nThen $ m $ lines follow, $ i $ -th line containing two numbers $ p_{i} $ and $ q_{i} $ , which can be used to restore $ i $ -th query ( $ 1<=p_{i},q_{i}<=n $ ).\n\n $ i $ -th query can be restored as follows:\n\nLet $ last $ be the answer for previous query (or $ 0 $ if $ i=1 $ ). Then $ x_{i}=((p_{i}+last)modn)+1 $ , and $ k_{i}=(q_{i}+last)modn $ .",
    "outputFormat": "Print $ m $ integers. $ i $ -th of them has to be equal to the answer to $ i $ -th query.",
    "samples": [
        [
            "5 2\n1 3 2 3 5\n2 3\n5 1\n3 4\n4 1\n2\n1 2\n2 3\n",
            "2\n5\n"
        ]
    ],
    "hint": "",
    "translation": "\u9898\u76ee\u5927\u610f\uff1a\n\n\u7ed9\u4f60\u4e00\u9897\u6709\u6839\u6811\uff0c\u70b9\u6709\u6743\u503c\uff0c$m$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u95ee\u4f60\u67d0\u4e2a\u70b9\u7684\u5b50\u6811\u4e2d\u8ddd\u79bb\u5176\u4e0d\u8d85\u8fc7 $k$ \u7684\u70b9\u7684\u6743\u503c\u7684\u6700\u5c0f\u503c\u3002\uff08\u8fb9\u6743\u5747\u4e3a $1$\uff0c\u70b9\u6743\u6709\u53ef\u80fd\u91cd\u590d\uff0c$k$ \u503c\u6bcf\u6b21\u8be2\u95ee\u6709\u53ef\u80fd\u4e0d\u540c\uff09\n\n**\u672c\u9898\u5f3a\u5236\u5728\u7ebf**\uff0c\u771f\u5b9e\u8be2\u95ee\u8ba1\u7b97\u65b9\u6cd5\uff1a\n\n$x =(x'+\\text{lans})\\bmod n + 1$\uff1b   \n$k=(k'+\\text{lans})\\bmod n$\u3002\n\n\u5176\u4e2d $\\text{lans}$ \u4e3a\u4e0a\u4e00\u6b21\u8be2\u95ee\u7684\u7b54\u6848\uff0c\u5b9a\u4e49\u521d\u59cb $\\text{lans} = 0$\n\n\u3010\u6570\u636e\u8303\u56f4\u3011    \n\u5bf9\u4e8e $100\\%$ \u7684\u6570\u636e\uff1a$1\\le n \\le 10^5$\uff0c$1 \\le a_i \\le 10^9$\uff0c$1 \\le m \\le 10^6$"
}