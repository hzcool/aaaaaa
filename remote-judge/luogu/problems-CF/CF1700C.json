{
    "description": "Little Leon lives in the forest. He has recently noticed that some trees near his favourite path are withering, while the other ones are overhydrated so he decided to learn how to control the level of the soil moisture to save the trees.\n\nThere are $ n $ trees growing near the path, the current levels of moisture of each tree are denoted by the array $ a_1, a_2, \\dots, a_n $ . Leon has learned three abilities which will help him to dry and water the soil.\n\n- Choose a position $ i $ and decrease the level of moisture of the trees $ 1, 2, \\dots, i $ by $ 1 $ .\n- Choose a position $ i $ and decrease the level of moisture of the trees $ i, i + 1, \\dots, n $ by $ 1 $ .\n- Increase the level of moisture of all trees by $ 1 $ .\n\nLeon wants to know the minimum number of actions he needs to perform to make the moisture of each tree equal to $ 0 $ .",
    "inputFormat": "The first line contains a single integer $ t $ ( $ 1 \\le t \\le 2 \\cdot 10^4 $ ) \u2014 the number of test cases. The description of $ t $ test cases follows.\n\nThe first line of each test case contains a single integer $ n $ ( $ 1 \\leq n \\leq 200\\,000 $ ).\n\nThe second line of each test case contains $ n $ integers $ a_1, a_2, \\ldots, a_n $ ( $ -10^9 \\leq a_i \\leq 10^9 $ ) \u2014 the initial levels of trees moisture.\n\nIt is guaranteed that the sum of $ n $ over all test cases doesn't exceed $ 200\\,000 $ .",
    "outputFormat": "For each test case output a single integer \u2014 the minimum number of actions. It can be shown that the answer exists.",
    "samples": [
        [
            "4\n3\n-2 -2 -2\n3\n10 4 7\n4\n4 -4 4 -4\n5\n1 -2 3 -4 5",
            "2\n13\n36\n33"
        ]
    ],
    "hint": "In the first test case it's enough to apply the operation of adding $ 1 $ to the whole array $ 2 $ times.\n\nIn the second test case you can apply the operation of decreasing $ 4 $ times on the prefix of length $ 3 $ and get an array $ 6, 0, 3 $ .\n\nAfter that apply the operation of decreasing $ 6 $ times on the prefix of length $ 1 $ and $ 3 $ times on the suffix of length $ 1 $ . In total, the number of actions will be $ 4 + 6 + 3 = 13 $ . It can be shown that it's impossible to perform less actions to get the required array, so the answer is $ 13 $ .",
    "translation": "\u7ed9\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a$\uff0c\u6bcf\u6b21\u53ef\u4ee5\u8fdb\u884c\u4e09\u79cd\u64cd\u4f5c\u4e2d\u7684\u4e00\u79cd\uff1a\n\n- \u9009\u62e9 $i$\uff0c\u5c06 $a_1,a_2,\\cdots,a_i$ \u51cf $1$\u3002\n- \u9009\u62e9 $i$\uff0c\u5c06 $a_i,a_{i+1},\\cdots,a_n$ \u51cf $1$\u3002\n- \u5c06\u6240\u6709 $a_i$ \u52a0 $1$\u3002\n\n\u6c42\u6700\u5c11\u9700\u8981\u591a\u5c11\u6b21\u64cd\u4f5c\u5c06\u6240\u6709 $a_i$ \u53d8\u4e3a $0$\u3002\n\n$1\\leq T\\leq 2\\times 10^4$\uff0c$1\\leq n\\leq 2\\times 10^5$\uff0c$-10^9\\leq a_i\\leq 10^9$\uff0c$\\sum n\\leq 2\\times 10^5$\u3002"
}