{
    "description": "This is the hard version of this problem. In this version, $ n \\le 5000 $ holds, and this version has no restriction between $ x $ and $ y $ . You can make hacks only if both versions of the problem are solved.\n\nYou are given two binary strings $ a $ and $ b $ , both of length $ n $ . You can do the following operation any number of times (possibly zero).\n\n- Select two indices $ l $ and $ r $ ( $ l < r $ ).\n- Change $ a_l $ to $ (1 - a_l) $ , and $ a_r $ to $ (1 - a_r) $ .\n- If $ l + 1 = r $ , the cost of the operation is $ x $ . Otherwise, the cost is $ y $ .\n\nYou have to find the minimum cost needed to make $ a $ equal to $ b $ or say there is no way to do so.",
    "inputFormat": "The first line contains one integer $ t $ ( $ 1 \\le t \\le 1000 $ ) \u2014 the number of test cases.\n\nEach test case consists of three lines. The first line of each test case contains three integers $ n $ , $ x $ , and $ y $ ( $ 5 \\le n \\le 5000 $ , $ 1 \\le x, y \\le 10^9 $ ) \u2014 the length of the strings, and the costs per operation.\n\nThe second line of each test case contains the string $ a $ of length $ n $ . The string only consists of digits $ 0 $ and $ 1 $ .\n\nThe third line of each test case contains the string $ b $ of length $ n $ . The string only consists of digits $ 0 $ and $ 1 $ .\n\nIt is guaranteed that the sum of $ n $ over all test cases doesn't exceed $ 5000 $ .",
    "outputFormat": "For each test case, if there is no way to make $ a $ equal to $ b $ , print $ -1 $ . Otherwise, print the minimum cost needed to make $ a $ equal to $ b $ .",
    "samples": [
        [
            "6\n5 8 9\n01001\n00101\n6 2 11\n000001\n100000\n5 7 2\n01000\n11011\n7 8 3\n0111001\n0100001\n6 3 4\n010001\n101000\n5 10 1\n01100\n01100",
            "8\n10\n-1\n6\n7\n0"
        ]
    ],
    "hint": "In the first test case, selecting indices $ 2 $ and $ 3 $ costs $ 8 $ , which is the minimum.\n\nIn the second test case, we can perform the following operations.\n\n- Select indices $ 1 $ and $ 2 $ . It costs $ 2 $ , and $ a $ is 110001 now.\n- Select indices $ 2 $ and $ 3 $ . It costs $ 2 $ , and $ a $ is 101001 now.\n- Select indices $ 3 $ and $ 4 $ . It costs $ 2 $ , and $ a $ is 100101 now.\n- Select indices $ 4 $ and $ 5 $ . It costs $ 2 $ , and $ a $ is 100011 now.\n- Select indices $ 5 $ and $ 6 $ . It costs $ 2 $ , and $ a $ is 100000 now.\n\nThe total cost is $ 10 $ .\n\nIn the third test case, we cannot make $ a $ equal to $ b $ using any number of operations.\n\nIn the fourth test case, we can perform the following operations.\n\n- Select indices $ 3 $ and $ 6 $ . It costs $ 3 $ , and $ a $ is 0101011 now.\n- Select indices $ 4 $ and $ 6 $ . It costs $ 3 $ , and $ a $ is 0100001 now.\n\nThe total cost is $ 6 $ .\n\nIn the fifth test case, we can perform the following operations.\n\n- Select indices $ 1 $ and $ 6 $ . It costs $ 4 $ , and $ a $ is 110000 now.\n- Select indices $ 2 $ and $ 3 $ . It costs $ 3 $ , and $ a $ is 101000 now.\n\nThe total cost is $ 7 $ .\n\nIn the sixth test case, we don't have to perform any operation.",
    "translation": "\u4e24\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 $a$ \u548c $b$\u3002\u4f60\u53ef\u4ee5\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\u82e5\u5e72\u6b21\uff1a\n+ \u9009\u4e24\u4e2a\u6570 $l$ \u548c $r\\ $ \uff08 $l<r$ \uff09\uff0c\u5bf9 $a_l$\u3001$a_r$ \u53d6\u53cd\n+ \u5982\u679c $l+1=r$\uff0c\u4ee3\u4ef7\u4e3a $x$\u3002\u5426\u5219\uff0c\u4ee3\u4ef7\u4e3a $y$\u3002\n\n\u5bf9\u4e8e\u6bcf\u7ec4\u6570\u636e\uff0c\u8f93\u51fa\u6700\u5c0f\u4ee3\u4ef7\uff0c\u6216\u662f $-1$ \u8868\u793a\u65e0\u89e3\u3002"
}