{
    "description": "Squirrel Liss lived in a forest peacefully, but unexpected trouble happens. Stones fall from a mountain. Initially Squirrel Liss occupies an interval $ [0,1] $ . Next, $ n $ stones will fall and Liss will escape from the stones. The stones are numbered from 1 to $ n $ in order.\n\nThe stones always fall to the center of Liss's interval. When Liss occupies the interval $ [k-d,k+d] $ and a stone falls to $ k $ , she will escape to the left or to the right. If she escapes to the left, her new interval will be $ [k-d,k] $ . If she escapes to the right, her new interval will be $ [k,k+d] $ .\n\nYou are given a string $ s $ of length $ n $ . If the $ i $ -th character of $ s $ is \"l\" or \"r\", when the $ i $ -th stone falls Liss will escape to the left or to the right, respectively. Find the sequence of stones' numbers from left to right after all the $ n $ stones falls.",
    "inputFormat": "The input consists of only one line. The only line contains the string $ s $ ( $ 1<=|s|<=10^{6} $ ). Each character in $ s $ will be either \"l\" or \"r\".",
    "outputFormat": "Output $ n $ lines \u2014 on the $ i $ -th line you should print the $ i $ -th stone's number from the left.",
    "samples": [
        [
            "llrlr\n",
            "3\n5\n4\n2\n1\n"
        ],
        [
            "rrlll\n",
            "1\n2\n5\n4\n3\n"
        ],
        [
            "lrlrr\n",
            "2\n4\n5\n3\n1\n"
        ]
    ],
    "hint": "In the first example, the positions of stones 1, 2, 3, 4, 5 will be ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF264A/c25aff142a5735311a4288820a328b17b4aeb12a.png), respectively. So you should print the sequence: 3, 5, 4, 2, 1.",
    "translation": "\u677e\u9f20bored\u5728\u770b\u5c0f\u9a6c\uff0c\u73b0\u5728\u4ed6\u8981\u9003\u907f\u6389\u4e0b\u6765\u7684\u77f3\u5934\uff0c\u77f3\u5934\u603b\u662f\u843d\u5728bored\u6240\u5728\u7684\u533a\u95f4\u7684\u4e2d\u95f4\u3002\u4ed6\u6709\u4e24\u79cd\u9009\u62e9\uff0c\u4e00\u79cd\u662f\u5411\u5de6'l'\uff0c\u4f7f\u533a\u95f4\u53f3\u7aef\u70b9\u53d8\u4e3a\u539f\u6765\u7684\u533a\u95f4\u4e2d\u95f4\uff0c\u4e00\u79cd\u662f\u5411\u53f3'r'\uff0c\u4f7f\u533a\u95f4\u5de6\u7aef\u70b9\u53d8\u4e3a\u539f\u6765\u7684\u533a\u95f4\u4e2d\u95f4\u3002bored\u5df2\u7ecf\u60f3\u597d\u4e86\u81ea\u5df1\u7684\u884c\u52a8\u8def\u7ebf\uff0c\u4e3a\u4e86\u8ba9\u4ed6\u53ef\u4ee5\u7ee7\u7eed\u770b\u5c0f\u9a6c\uff0c\u8bf7\u4f60\u544a\u8bc9\u4ed6\u4e0b\u843d\u77f3\u5934\u4ece\u5de6\u5230\u53f3\u7684\u7f16\u53f7\u3002"
}