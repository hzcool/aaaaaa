{
    "description": "There are $ n $ cities in the country of Berland. Some of them are connected by bidirectional roads in such a way that there exists exactly one path, which visits each road no more than once, between every pair of cities. Each road has its own length. Cities are numbered from $ 1 $ to $ n $ .\n\nThe travelling time between some cities $ v $ and $ u $ is the total length of the roads on the shortest path from $ v $ to $ u $ .\n\nThe two most important cities in Berland are cities $ 1 $ and $ n $ .\n\nThe Berland Ministry of Transport decided to build a single new road to decrease the traffic between the most important cities. However, lots of people are used to the current travelling time between the most important cities, so the new road shouldn't change it too much.\n\nThe new road can only be built between such cities $ v $ and $ u $ that $ v \\neq u $ and $ v $ and $ u $ aren't already connected by some road.\n\nThey came up with $ m $ possible projects. Each project is just the length $ x $ of the new road.\n\nPolycarp works as a head analyst at the Berland Ministry of Transport and it's his job to deal with all those $ m $ projects. For the $ i $ -th project he is required to choose some cities $ v $ and $ u $ to build the new road of length $ x_i $ between such that the travelling time between the most important cities is maximal possible.\n\nUnfortunately, Polycarp is not a programmer and no analyst in the world is capable to process all projects using only pen and paper.\n\nThus, he asks you to help him to calculate the maximal possible travelling time between the most important cities for each project. Note that the choice of $ v $ and $ u $ can differ for different projects.",
    "inputFormat": "The first line contains two integers $ n $ and $ m $ ( $ 3 \\le n \\le 3 \\cdot 10^5 $ , $ 1 \\le m \\le 3 \\cdot 10^5 $ ) \u2014 the number of cities and the number of projects, respectively.\n\nEach of the next $ n - 1 $ lines contains three integers $ v_i $ , $ u_i $ and $ w_i $ ( $ 1 \\le v_i, u_i \\le n $ , $ 1 \\le w_i \\le 10^9 $ ) \u2014 the description of the $ i $ -th road. It is guaranteed that there exists exactly one path, which visits each road no more than once, between every pair of cities.\n\nEach of the next $ m $ lines contains a single integer $ x_j $ ( $ 1 \\le x_j \\le 10^9 $ ) \u2014 the length of the road for the $ j $ -th project.",
    "outputFormat": "Print $ m $ lines, the $ j $ -th line should contain a single integer \u2014 the maximal possible travelling time between the most important cities for the $ j $ -th project.",
    "samples": [
        [
            "7 2\n1 2 18\n2 3 22\n3 4 24\n4 7 24\n2 6 4\n3 5 12\n1\n100\n",
            "83\n88\n"
        ]
    ],
    "hint": "The road network from the first example:\n\n![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1016F/ba70d65e76fbf2389730baac3851ee66b5d801de.png)\n\nYou can build the road with length $ 1 $ between cities $ 5 $ and $ 6 $ to get $ 83 $ as the travelling time between $ 1 $ and $ 7 $ ( $ 1 \\rightarrow 2 \\rightarrow 6 \\rightarrow 5 \\rightarrow 3 \\rightarrow 4 \\rightarrow 7 $ $ = $ $ 18 + 4 + 1 + 12 + 24 + 24 = 83 $ ). Other possible pairs of cities will give answers less or equal to $ 83 $ .",
    "translation": "## \u9898\u76ee\u63cf\u8ff0\n\n\nBerland \u738b\u56fd\u6709 $n$ \u5ea7\u57ce\u5e02\uff0c\u6709\u4e9b\u57ce\u5e02\u95f4\u7531\u53cc\u5411\u9053\u8def\u8fde\u63a5\uff0c\u6bcf\u6761\u8fb9\u4e0d\u4f1a\u51fa\u73b0\u8d85\u8fc7\u4e00\u6b21\u3002\u4e14\u6bcf\u4e00\u6761\u8fb9\u90fd\u6709\u5b83\u81ea\u5df1\u7684\u957f\u5ea6\u3002\u57ce\u5e02\u4ece $1$ \u5230 $n$ \u7f16\u53f7\u3002\n\n\u57ce\u5e02 $u$ \u4e0e $v$ \u95f4\u7684\u65c5\u884c\u65f6\u95f4\u4e3a \u4ece $u$ \u5230 $v$ \u7684\u6700\u77ed\u8def\u5f84\u4e0a\u7684\u8fb9\u7684\u8fb9\u6743\u4e4b\u548c\u3002\n\n\u5728 Berland \u738b\u56fd\u7684\u4e24\u5ea7\u6700\u91cd\u8981\u7684\u57ce\u5e02\u662f $1$ \u4e0e $n$ \u3002\n\nBerland \u738b\u56fd\u4ea4\u901a\u8fd0\u8f93\u90e8\u51b3\u5b9a\u4fee\u5efa\u4e00\u6761\u65b0\u9053\u8def\uff0c\u6765\u5206\u62c5\u6700\u91cd\u8981\u7684\u57ce\u5e02\u95f4\u7684\u4ea4\u901a\u538b\u529b\u3002\u7136\u800c\uff0c\u5f88\u591a\u4eba\u5df2\u4e60\u60ef\u4e86\u4ed6\u4eec\u95f4\u7684\u73b0\u5728\u7684\u65c5\u884c\u65f6\u95f4\uff0c\u56e0\u6b64\u65b0\u5efa\u7684\u9053\u8def\u4e0d\u5e94\u9020\u6210\u8f83\u5927\u7684\u5f71\u54cd\u3002\n\n\u65b0\u7684\u9053\u8def\u5e94\u8be5\u5efa\u5728 $u$ \u4e0e $v$ \u95f4\uff0c\u5176\u4e2d $u\u2260v$ \u4e14\u5f53\u524d $u$ \u4e0e $v$ \u95f4\u4e0d\u5b58\u5728\u9053\u8def\u3002\n\n\u4ed6\u4eec\u63d0\u51fa\u4e86 $m$ \u79cd\u53ef\u80fd\u7684\u5de5\u7a0b\u3002\u6bcf\u9879\u5de5\u7a0b\u90fd\u542b\u6709\u65b0\u5efa\u9053\u8def\u7684\u957f\u5ea6 $x$ \u3002\n\nPolycarp \u5728 Berland \u738b\u56fd\u4ea4\u901a\u8fd0\u8f93\u90e8\u62c5\u4efb\u9996\u5e2d\u5206\u6790\u5e08\uff0c\u5904\u7406\u8fd9 $m $ \u9879\u5de5\u7a0b\u662f\u4ed6\u7684\u5de5\u4f5c\u3002\u5bf9\u4e8e\u7b2c $i$ \u9879\u5de5\u7a0b\uff0c\u4ed6\u88ab\u8981\u6c42\u9009\u62e9\u57ce\u5e02 $u$ \u548c $v$ \u53bb\u5efa\u9020\u8fd9\u6761\u9053\u8def\u4f7f\u5f97 \u6700\u91cd\u8981\u7684\u57ce\u5e02\u95f4 \u7684\u65c5\u884c\u65f6\u95f4\u5c3d\u53ef\u80fd\u957f\u3002\n\n\u4e0d\u5e78\u7684\u662f\uff0cPolycarp \u4e0d\u662f\u7a0b\u5e8f\u5458\uff0c\u4e16\u754c\u4e0a\u6ca1\u6709\u5206\u6790\u5e08\u80fd\u591f\u4ec5\u4f7f\u7528\u7b14\u548c\u7eb8\u6765\u5904\u7406\u6240\u6709\u9879\u76ee\u3002\n\n\u56e0\u6b64\uff0c\u4ed6\u8981\u6c42\u4f60\u5e2e\u52a9\u4ed6\u5bf9\u4e8e\u6bcf\u4e2a\u9879\u76ee\u8ba1\u7b97\u6700\u91cd\u8981\u7684\u57ce\u5e02\u4e4b\u95f4\u7684\u6700\u5927\u53ef\u80fd\u7684\u65c5\u884c\u65f6\u95f4\u3002\u6ce8\u610f\uff0c\u5bf9\u4e8e\u4e0d\u540c\u7684\u9879\u76ee\uff0c $u$ \u548c $v$ \u7684\u9009\u62e9\u53ef\u4ee5\u4e0d\u540c\u3002\n\n\n## \u8f93\u5165\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 $n$ \u548c $m$ \uff0c( $ 3 \\le n \\le 3 \\cdot 10^5 $ , $ 1 \\le m \\le 3 \\cdot 10^5 $ )\uff0c\u2014\u2014\u5206\u522b\u4e3a\u57ce\u5e02\u7684\u6570\u91cf\u548c\u5de5\u7a0b\u7684\u6570\u76ee\u3002\n\n\u63a5\u4e0b\u6765 $ n - 1 $ \u884c\u6bcf\u884c\u5305\u62ec\u4e09\u4e2a\u6574\u6570 $ v_i $ , $ u_i $ and $ w_i $ ( $ 1 \\le v_i, u_i \\le n $ , $ 1 \\le w_i \\le 10^9 $ ) \u2014\u2014 \u63cf\u8ff0\u4e86\u7b2c $ i $ \u6761\u9053\u8def \u3002\u53ef\u4ee5\u786e\u4fdd\u6bcf\u4e24\u5ea7\u57ce\u5e02\u95f4\u81f3\u591a\u53ea\u6709\u4e00\u6761\u9053\u8def\uff0c\u4e14\u6bcf\u6761\u9053\u8def\u53ea\u4f1a\u51fa\u73b0\u4e00\u6b21\u3002\n\n\u63a5\u4e0b\u6765 $m$ \u884c\u6bcf\u884c\u5305\u62ec\u4e00\u4e2a\u6574\u6570 $ x_j $ ( $ 1 \\le x_j \\le 10^9 $ ) \uff0c\u2014\u2014\u7b2c $j$ \u4e2a\u5de5\u7a0b\u7684\u9053\u8def\u7684\u957f\u5ea6\u3002\n\n## \u8f93\u51fa\u683c\u5f0f\n\n\u8f93\u51fa $m$ \u884c\uff0c\u7b2c $j$ \u884c\u5e94\u5f53\u5305\u542b\u4e00\u4e2a\u6574\u6570\u2014\u2014\u7b2c $j$ \u4e2a\u5de5\u7a0b\u7684\u4e24\u4e2a\u6700\u91cd\u8981\u7684\u57ce\u5e02\u95f4\u7684\u6700\u5927\u7684\u53ef\u80fd\u65c5\u884c\u65f6\u95f4\u3002\n"
}