{
    "description": "There was an epidemic in Monstropolis and all monsters became sick. To recover, all monsters lined up in queue for an appointment to the only doctor in the city.\n\nSoon, monsters became hungry and began to eat each other.\n\nOne monster can eat other monster if its weight is strictly greater than the weight of the monster being eaten, and they stand in the queue next to each other. Monsters eat each other instantly. There are no monsters which are being eaten at the same moment. After the monster $ A $ eats the monster $ B $ , the weight of the monster $ A $ increases by the weight of the eaten monster $ B $ . In result of such eating the length of the queue decreases by one, all monsters after the eaten one step forward so that there is no empty places in the queue again. A monster can eat several monsters one after another. Initially there were $ n $ monsters in the queue, the $ i $ -th of which had weight $ a_{i} $ .\n\nFor example, if weights are $ [1,2,2,2,1,2] $ (in order of queue, monsters are numbered from $ 1 $ to $ 6 $ from left to right) then some of the options are:\n\n1. the first monster can't eat the second monster because $ a_{1}=1 $ is not greater than $ a_{2}=2 $ ;\n2. the second monster can't eat the third monster because $ a_{2}=2 $ is not greater than $ a_{3}=2 $ ;\n3. the second monster can't eat the fifth monster because they are not neighbors;\n4. the second monster can eat the first monster, the queue will be transformed to $ [3,2,2,1,2] $ .\n\nAfter some time, someone said a good joke and all monsters recovered. At that moment there were $ k $ ( $ k<=n $ ) monsters in the queue, the $ j $ -th of which had weight $ b_{j} $ . Both sequences ( $ a $ and $ b $ ) contain the weights of the monsters in the order from the first to the last.\n\nYou are required to provide one of the possible orders of eating monsters which led to the current queue, or to determine that this could not happen. Assume that the doctor didn't make any appointments while monsters were eating each other.",
    "inputFormat": "The first line contains single integer $ n $ ( $ 1<=n<=500 $ ) \u2014 the number of monsters in the initial queue.\n\nThe second line contains $ n $ integers $ a_{1},a_{2},...,a_{n} $ ( $ 1<=a_{i}<=10^{6} $ ) \u2014 the initial weights of the monsters.\n\nThe third line contains single integer $ k $ ( $ 1<=k<=n $ ) \u2014 the number of monsters in the queue after the joke.\n\nThe fourth line contains $ k $ integers $ b_{1},b_{2},...,b_{k} $ ( $ 1<=b_{j}<=5\u00b710^{8} $ ) \u2014 the weights of the monsters after the joke.\n\nMonsters are listed in the order from the beginning of the queue to the end.",
    "outputFormat": "In case if no actions could lead to the final queue, print \"NO\" (without quotes) in the only line.\n\nOtherwise print \"YES\" (without quotes) in the first line. In the next $ n-k $ lines print actions in the chronological order. In each line print $ x $ \u2014 the index number of the monster in the current queue which eats and, separated by space, the symbol 'L' if the monster which stays the $ x $ -th in the queue eats the monster in front of him, or 'R' if the monster which stays the $ x $ -th in the queue eats the monster behind him. After each eating the queue is enumerated again.\n\nWhen one monster eats another the queue decreases. If there are several answers, print any of them.",
    "samples": [
        [
            "6\n1 2 2 2 1 2\n2\n5 5\n",
            "YES\n2 L\n1 R\n4 L\n3 L\n"
        ],
        [
            "5\n1 2 3 4 5\n1\n15\n",
            "YES\n5 L\n4 L\n3 L\n2 L\n"
        ],
        [
            "5\n1 1 1 3 3\n3\n2 1 6\n",
            "NO"
        ]
    ],
    "hint": "In the first example, initially there were $ n=6 $ monsters, their weights are $ [1,2,2,2,1,2] $ (in order of queue from the first monster to the last monster). The final queue should be $ [5,5] $ . The following sequence of eatings leads to the final queue:\n\n- the second monster eats the monster to the left (i.e. the first monster), queue becomes $ [3,2,2,1,2] $ ;\n- the first monster (note, it was the second on the previous step) eats the monster to the right (i.e. the second monster), queue becomes $ [5,2,1,2] $ ;\n- the fourth monster eats the mosnter to the left (i.e. the third monster), queue becomes $ [5,2,3] $ ;\n- the finally, the third monster eats the monster to the left (i.e. the second monster), queue becomes $ [5,5] $ .\n\nNote that for each step the output contains numbers of the monsters in their current order in the queue.",
    "translation": "\u6709 $n$ \u4e2a\u602a\u517d\uff0c\u7b2c $i$ \u4e2a\u7684\u91cd\u91cf\u662f $a_i$\u3002\n\n\u4e00\u79d2\u949f\u5185\uff0c\u80fd\u8ba9\u6070\u597d\u4e00\u4e2a\u602a\u517d\u5403\u6389\u76f8\u90bb\u7684\u6bd4\u5b83\u91cd\u91cf\u5c0f\u7684\u602a\u517d\u3002\u91cd\u91cf\u5927\u7684\u91cd\u91cf\u52a0\u4e0a\u91cd\u91cf\u5c0f\u7684\u7684\u91cd\u91cf\uff1b\u91cd\u91cf\u5c0f\u7684\u602a\u517d\u6b7b\u6389\u3002\u6b7b\u540e\u91cd\u65b0\u9760\u62e2\u3002\n\n\u6c42\u4e00\u79cd\u987a\u5e8f\uff0c\u53d8\u6210\uff1a\u5171 $k$ \u4e2a\u602a\u517d\uff0c\u7b2c $j$ \u4e2a\u7684\u91cd\u91cf\u662f $b_j$\u3002"
}