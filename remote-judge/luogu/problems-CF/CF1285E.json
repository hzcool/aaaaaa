{
    "description": "There are $ n $ segments on a $ Ox $ axis $ [l_1, r_1] $ , $ [l_2, r_2] $ , ..., $ [l_n, r_n] $ . Segment $ [l, r] $ covers all points from $ l $ to $ r $ inclusive, so all $ x $ such that $ l \\le x \\le r $ .\n\nSegments can be placed arbitrarily \u2014 be inside each other, coincide and so on. Segments can degenerate into points, that is $ l_i=r_i $ is possible.\n\nUnion of the set of segments is such a set of segments which covers exactly the same set of points as the original set. For example:\n\n- if $ n=3 $ and there are segments $ [3, 6] $ , $ [100, 100] $ , $ [5, 8] $ then their union is $ 2 $ segments: $ [3, 8] $ and $ [100, 100] $ ;\n- if $ n=5 $ and there are segments $ [1, 2] $ , $ [2, 3] $ , $ [4, 5] $ , $ [4, 6] $ , $ [6, 6] $ then their union is $ 2 $ segments: $ [1, 3] $ and $ [4, 6] $ .\n\nObviously, union is a set of pairwise non-intersecting segments.\n\nYou are asked to erase exactly one segment of the given $ n $ so that the number of segments in the union of the rest $ n-1 $ segments is maximum possible.\n\nFor example, if $ n=4 $ and there are segments $ [1, 4] $ , $ [2, 3] $ , $ [3, 6] $ , $ [5, 7] $ , then:\n\n- erasing the first segment will lead to $ [2, 3] $ , $ [3, 6] $ , $ [5, 7] $ remaining, which have $ 1 $ segment in their union;\n- erasing the second segment will lead to $ [1, 4] $ , $ [3, 6] $ , $ [5, 7] $ remaining, which have $ 1 $ segment in their union;\n- erasing the third segment will lead to $ [1, 4] $ , $ [2, 3] $ , $ [5, 7] $ remaining, which have $ 2 $ segments in their union;\n- erasing the fourth segment will lead to $ [1, 4] $ , $ [2, 3] $ , $ [3, 6] $ remaining, which have $ 1 $ segment in their union.\n\nThus, you are required to erase the third segment to get answer $ 2 $ .\n\nWrite a program that will find the maximum number of segments in the union of $ n-1 $ segments if you erase any of the given $ n $ segments.\n\nNote that if there are multiple equal segments in the given set, then you can erase only one of them anyway. So the set after erasing will have exactly $ n-1 $ segments.",
    "inputFormat": "The first line contains one integer $ t $ ( $ 1 \\le t \\le 10^4 $ ) \u2014 the number of test cases in the test. Then the descriptions of $ t $ test cases follow.\n\nThe first of each test case contains a single integer $ n $ ( $ 2 \\le n \\le 2\\cdot10^5 $ ) \u2014 the number of segments in the given set. Then $ n $ lines follow, each contains a description of a segment \u2014 a pair of integers $ l_i $ , $ r_i $ ( $ -10^9 \\le l_i \\le r_i \\le 10^9 $ ), where $ l_i $ and $ r_i $ are the coordinates of the left and right borders of the $ i $ -th segment, respectively.\n\nThe segments are given in an arbitrary order.\n\nIt is guaranteed that the sum of $ n $ over all test cases does not exceed $ 2\\cdot10^5 $ .",
    "outputFormat": "Print $ t $ integers \u2014 the answers to the $ t $ given test cases in the order of input. The answer is the maximum number of segments in the union of $ n-1 $ segments if you erase any of the given $ n $ segments.",
    "samples": [
        [
            "3\n4\n1 4\n2 3\n3 6\n5 7\n3\n5 5\n5 5\n5 5\n6\n3 3\n1 1\n5 5\n1 5\n2 2\n4 4",
            "2\n1\n5"
        ]
    ],
    "hint": "",
    "translation": "\u7ed9\u4e00\u4e2a\u6570\u8f74\u4e0a\u7684 $n$ \u6761\u7ebf\u6bb5\uff0c\u7b2c $i$ \u6761\u8986\u76d6\u4e86 $[l_i, r_i]$\uff08\u5982\u679c $l_i = r_i$ \u7684\u8bdd\u5c31\u662f\u4e00\u4e2a\u70b9\uff09\u3002\u4e00\u4e2a\u7ebf\u6bb5\u96c6\u7684 _\u5e76\u96c6_ \u662f\u4e00\u4e2a\u4e0e\u539f\u7ebf\u6bb5\u96c6\u6240\u8986\u76d6\u70b9\u4e00\u6837\u7684\u7ebf\u6bb5\u96c6\uff0c\u4f8b\u5982 $n = 5$\uff0c$5$ \u6761\u7ebf\u6bb5\u5206\u522b\u4e3a $[1,2]$\uff0c$[2,3]$\uff0c$[4,5]$\uff0c$[4,6]$\uff0c$[6,6]$\uff0c\u90a3\u4e48\u5b83\u4eec\u7684 _\u5e76\u96c6_ \u5c31\u662f $[1,3]$ \u548c $[4,6]$ \u4e24\u6761\u7ebf\u6bb5\u3002\u73b0\u5728\uff0c\u4f60\u8981\u6c42\u51fa **\u6b63\u597d\u5220\u53bb\u4e00\u6761\u7ebf\u6bb5**\u540e\uff0c_\u5e76\u96c6_ \u6700\u591a\u5305\u62ec\u591a\u5c11\u6761\u7ebf\u6bb5\u3002\n\n\u5982\u679c\u4e24\u6761\u7ebf\u6bb5\u91cd\u5408\uff0c\u4f60\u4f9d\u7136\u53ea\u80fd\u5220\u53bb\u4e00\u6761\u3002"
}