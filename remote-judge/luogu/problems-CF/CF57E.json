{
    "description": "Brian the Rabbit adores chess. Not long ago he argued with Stewie the Rabbit that a knight is better than a king. To prove his point he tries to show that the knight is very fast but Stewie doesn't accept statements without evidence. He constructed an infinite chessboard for Brian, where he deleted several squares to add some more interest to the game. Brian only needs to count how many different board squares a knight standing on a square with coordinates of $ (0,0) $ can reach in no more than $ k $ moves. Naturally, it is forbidden to move to the deleted squares.\n\nBrian doesn't very much like exact sciences himself and is not acquainted with programming, that's why he will hardly be able to get ahead of Stewie who has already started solving the problem. Help Brian to solve the problem faster than Stewie.",
    "inputFormat": "The first line contains two integers $ k $ and $ n $ ( $ 0<=k<=10^{18},0<=n<=440 $ ) which are correspondingly the maximal number of moves a knight can make and the number of deleted cells. Then follow $ n $ lines, each giving the coordinates of a deleted square in the form $ (x_{i},y_{i}) $ ( $ |x_{i}|<=10,|y_{i}|<=10 $ ). All the numbers are integer, the deleted squares are different and it is guaranteed that the square $ (0,0) $ is not deleted.\n\nPlease, do not use %lld specificator to read or write 64-bit integers in C++. It is preffered to use cin (also you may use %I64d).",
    "outputFormat": "You must print the answer on a single line. As it can be rather long, you should print it modulo $ 1000000007 $ .",
    "samples": [
        [
            "1 0\n",
            "9\n"
        ],
        [
            "2 7\n-1 2\n1 2\n2 1\n2 -1\n1 -2\n-1 -2\n-2 -1\n",
            "9\n"
        ]
    ],
    "hint": "",
    "translation": "\u8ba1\u7b97\u56fd\u9645\u8c61\u68cb\u4e2d\u7684\u9a91\u58eb\u80fd\u591f\u5728k\u6b65\u5185\u5230\u8fbe\u7684\u4e0d\u540c\u7684\u683c\u5b50\u7684\u6570\u76eemod 1000000007\u7684\u503c\u3002\n\n\u5176\u4e2d\u6709n\u4e2a\u683c\u5b50\u88ab\u5220\u9664\u3002\n"
}