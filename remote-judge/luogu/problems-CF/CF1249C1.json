{
    "description": "The only difference between easy and hard versions is the maximum value of $ n $ .\n\nYou are given a positive integer number $ n $ . You really love good numbers so you want to find the smallest good number greater than or equal to $ n $ .\n\nThe positive integer is called good if it can be represented as a sum of distinct powers of $ 3 $ (i.e. no duplicates of powers of $ 3 $ are allowed).\n\nFor example:\n\n- $ 30 $ is a good number: $ 30 = 3^3 + 3^1 $ ,\n- $ 1 $ is a good number: $ 1 = 3^0 $ ,\n- $ 12 $ is a good number: $ 12 = 3^2 + 3^1 $ ,\n- but $ 2 $ is not a good number: you can't represent it as a sum of distinct powers of $ 3 $ ( $ 2 = 3^0 + 3^0 $ ),\n- $ 19 $ is not a good number: you can't represent it as a sum of distinct powers of $ 3 $ (for example, the representations $ 19 = 3^2 + 3^2 + 3^0 = 3^2 + 3^1 + 3^1 + 3^1 + 3^0 $ are invalid),\n- $ 20 $ is also not a good number: you can't represent it as a sum of distinct powers of $ 3 $ (for example, the representation $ 20 = 3^2 + 3^2 + 3^0 + 3^0 $ is invalid).\n\nNote, that there exist other representations of $ 19 $ and $ 20 $ as sums of powers of $ 3 $ but none of them consists of distinct powers of $ 3 $ .\n\nFor the given positive integer $ n $ find such smallest $ m $ ( $ n \\le m $ ) that $ m $ is a good number.\n\nYou have to answer $ q $ independent queries.",
    "inputFormat": "The first line of the input contains one integer $ q $ ( $ 1 \\le q \\le 500 $ ) \u2014 the number of queries. Then $ q $ queries follow.\n\nThe only line of the query contains one integer $ n $ ( $ 1 \\le n \\le 10^4 $ ).",
    "outputFormat": "For each query, print such smallest integer $ m $ (where $ n \\le m $ ) that $ m $ is a good number.",
    "samples": [
        [
            "7\n1\n2\n6\n13\n14\n3620\n10000\n",
            "1\n3\n9\n13\n27\n6561\n19683\n"
        ]
    ],
    "hint": "",
    "translation": "\u7b80\u5355\u96be\u5ea6\u4e0e\u56f0\u96be\u96be\u5ea6\u7684\u552f\u4e00\u5dee\u522b\u662f$n$\u7684\u53d6\u503c\u8303\u56f4\n\n\u73b0\u5728\u7ed9\u51fa\u4e00\u4e2a\u5b9a\u4e49\uff1aGood Number\uff08\u4e0b\u6587\u4ee5\u597d\u6570\u4ee3\u66ff\uff09\uff0c\u597d\u6570\u662f\u6307\u53ef\u4ee5\u53d8\u6210$3$\u7684**\u4e0d\u540c**\u6b21\u5e42\u7684\u52a0\u548c\u7684\u6570\n\n\u4f8b\u5982\uff1a\n\n$30$ \u662f\u597d\u6570 $30=3^3+3^1$\n\n$1$ \u662f\u597d\u6570 $1=3^0$\n\n$12$ \u662f\u597d\u6570 $12=3^2+3^1$\n\n$2$ \u4e0d\u662f\u597d\u6570\uff0c\u56e0\u4e3a$2=3^0+3^0$\uff0c\u4e0d\u7b26\u5408\u4e0d\u540c\u6b21\u5e42\u7684\u6761\u4ef6\n\n$19$ \u4e0d\u662f\u597d\u6570\uff0c\u4f8b\u5982$19=3^2+3^2+3^0=3^2+3^1+3^1+3^1+3^0$\uff0c\u4e0d\u7b26\u5408\u4e0d\u540c\u6b21\u5e42\u7684\u6761\u4ef6\n\n$20$\u4e0d\u662f\u597d\u6570\uff0c\u540c\u7406\u4e0d\u7b26\u5408\u4e0d\u540c\u6b21\u5e42\u7684\u6761\u4ef6\uff0c\u65e0\u6cd5\u628a$20$\u5206\u4e3a$3$\u7684\u4e0d\u540c\u6b21\u5e42\u7684\u52a0\u548c\n\n\u73b0\u5728\u7ed9\u4f60\u4e00\u4e9b\u6b63\u6574\u6570$n$\uff0c\u5bf9\u4e8e\u6bcf\u4e2a$n$\u8bf7\u4f60\u7ed9\u51fa\u4e00\u4e2a\u6700\u5c0f\u7684$m$\u6ee1\u8db3\uff1a\u2460$m$\u662f\u597d\u6570 \u2461$n\u2264m$\n\n### \u8f93\u5165\u683c\u5f0f\n\u8f93\u5165\u7b2c\u4e00\u884c\u4e3a\u4e00\u4e2a\u6b63\u6574\u6570$q(1\u2264q\u2264500)$\uff0c\u8868\u793a\u6709$q$\u4e2a\u6837\u4f8b\n\n\u7136\u540e\u6709$q$\u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u6b63\u6574\u6570$n(1\u2264n\u226410^4)$\n### \u8f93\u51fa\u683c\u5f0f\n\u5bf9\u4e8e\u6bcf\u4e2annn\uff0c\u8f93\u51fa\u6700\u5c0f\u7684$m$\u6ee1\u8db3\uff1a\u2460$m$\u662f\u597d\u6570 \u2461$n\u2264m$\u3002\u6bcf\u4e2a\u8f93\u51fa\u5360\u4e00\u884c"
}