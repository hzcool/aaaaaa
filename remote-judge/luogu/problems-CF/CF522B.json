{
    "description": "One day $ n $ friends met at a party, they hadn't seen each other for a long time and so they decided to make a group photo together.\n\nSimply speaking, the process of taking photos can be described as follows. On the photo, each photographed friend occupies a rectangle of pixels: the $ i $ -th of them occupies the rectangle of width $ w_{i} $ pixels and height $ h_{i} $ pixels. On the group photo everybody stands in a line, thus the minimum pixel size of the photo including all the photographed friends, is $ W\u00d7H $ , where $ W $ is the total sum of all widths and $ H $ is the maximum height of all the photographed friends.\n\nAs is usually the case, the friends made $ n $ photos \u2014 the $ j $ -th ( $ 1<=j<=n $ ) photo had everybody except for the $ j $ -th friend as he was the photographer.\n\nPrint the minimum size of each made photo in pixels.",
    "inputFormat": "The first line contains integer $ n $ ( $ 2<=n<=200000 $ ) \u2014 the number of friends.\n\nThen $ n $ lines follow: the $ i $ -th line contains information about the $ i $ -th friend. The line contains a pair of integers $ w_{i},h_{i} $ ( $ 1<=w_{i}<=10,1<=h_{i}<=1000 $ ) \u2014 the width and height in pixels of the corresponding rectangle.",
    "outputFormat": "Print $ n $ space-separated numbers $ b_{1},b_{2},...,b_{n} $ , where $ b_{i} $ \u2014 the total number of pixels on the minimum photo containing all friends expect for the $ i $ -th one.",
    "samples": [
        [
            "3\n1 10\n5 5\n10 1\n",
            "75 110 60 "
        ],
        [
            "3\n2 1\n1 2\n2 1\n",
            "6 4 6 "
        ]
    ],
    "hint": "",
    "translation": "\n\n\u67d0\u4e00\u5929\uff0cn\u4e2a\u670b\u53cb\u5728\u4e00\u8d77\u805a\u4f1a\uff0c\u4ed6\u4eec\u5df2\u7ecf\u5f88\u4e45\u6ca1\u89c1\u4e86\uff0c\u4e8e\u662f\u4ed6\u4eec\u51b3\u5b9a\u62cd\u7167\u7559\u5ff5\u3002\n\n\u7b80\u5355\u7684\u8bf4\uff0c\u62cd\u7167\u7684\u65f6\u5019\uff0c\u6bcf\u4e2a\u4eba\u6709\u4e00\u4e2a\u9ad8\u5ea6\u548c\u5bbd\u5ea6\uff0c\u7b2ci\u4e2a\u7684\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u5206\u522b\u662fhi\u548cwi\u3002\u8fd9\u4e9b\u4eba\u6392\u6210\u4e00\u6761\u76f4\u7ebf\uff0c\u7167\u7247\u7684\u6700\u5c0f\u7684\u9762\u79ef\u5fc5\u987b\u5305\u542b\u6240\u6709\u7684\u7684\u4eba\uff0c\u6240\u4ee5\u7167\u7247\u7684\u9762\u79ef\u662fW*H\uff0cW\u662f\u6240\u6709\u4eba\u7684\u5bbd\u5ea6\u4e4b\u548c\uff0cH\u662f\u6240\u6709\u4eba\u4e2d\u9ad8\u5ea6\u6700\u9ad8\u7684\u90a3\u4e2a\u4eba\u7684\u9ad8\u5ea6\u3002\u73b0\u5728\u60f3\u8981\u77e5\u9053\u5f53\u7b2ci\u4e2a\u4eba\u4e0d\u5728\u7167\u7247\u4e2d\u7684\u65f6\u5019\uff0c\u7167\u7247\u7684\u6700\u5c0f\u9762\u79ef\u662f\u591a\u5c11\u3002\n\n\u8f93\u5165\n\n\u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u6b63\u6574\u6570N\uff0c\u8868\u793a\u4eba\u7684\u6570\u91cf\u3002\n\n\u63a5\u4e0b\u6765N\u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6574\u6570wi\u548chi\uff0c\u5206\u522b\u8868\u793a\u6bcf\u4e2a\u4eba\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a2<=N<=200000,1<=wi<=10,1<=hi<=1000\u3002\n\n\u8f93\u51fa\n\n\u5305\u542bb1\uff0cb2\uff0cb3\u3002\u3002Bn\uff0cbi\u8868\u793a\u7b2ci\u4e2a\u4eba\u4e0d\u5728\u7167\u7247\u4e2d\u7684\u65f6\u5019\uff0c\u7167\u7247\u7684\u6700\u5c0f\u9762\u79ef\u3002\n"
}