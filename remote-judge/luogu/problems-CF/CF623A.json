{
    "description": "One day student Vasya was sitting on a lecture and mentioned a string $ s_{1}s_{2}...\\ s_{n} $ , consisting of letters \"a\", \"b\" and \"c\" that was written on his desk. As the lecture was boring, Vasya decided to complete the picture by composing a graph $ G $ with the following properties:\n\n- $ G $ has exactly $ n $ vertices, numbered from $ 1 $ to $ n $ .\n- For all pairs of vertices $ i $ and $ j $ , where $ i\u2260j $ , there is an edge connecting them if and only if characters $ s_{i} $ and $ s_{j} $ are either equal or neighbouring in the alphabet. That is, letters in pairs \"a\"-\"b\" and \"b\"-\"c\" are neighbouring, while letters \"a\"-\"c\" are not.\n\nVasya painted the resulting graph near the string and then erased the string. Next day Vasya's friend Petya came to a lecture and found some graph at his desk. He had heard of Vasya's adventure and now he wants to find out whether it could be the original graph $ G $ , painted by Vasya. In order to verify this, Petya needs to know whether there exists a string $ s $ , such that if Vasya used this $ s $ he would produce the given graph $ G $ .",
    "inputFormat": "The first line of the input contains two integers $ n $ and $ m $ ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF623A/e00226d2757b0dbac8cbf07d9c18dbeaaa91e49b.png) \u2014 the number of vertices and edges in the graph found by Petya, respectively.\n\nEach of the next $ m $ lines contains two integers $ u_{i} $ and $ v_{i} $ $ (1<=u_{i},v_{i}<=n,u_{i}\u2260v_{i}) $ \u2014 the edges of the graph $ G $ . It is guaranteed, that there are no multiple edges, that is any pair of vertexes appear in this list no more than once.",
    "outputFormat": "In the first line print \"Yes\" (without the quotes), if the string $ s $ Petya is interested in really exists and \"No\" (without the quotes) otherwise.\n\nIf the string $ s $ exists, then print it on the second line of the output. The length of $ s $ must be exactly $ n $ , it must consist of only letters \"a\", \"b\" and \"c\" only, and the graph built using this string must coincide with $ G $ . If there are multiple possible answers, you may print any of them.",
    "samples": [
        [
            "2 1\n1 2\n",
            "Yes\naa\n"
        ],
        [
            "4 3\n1 2\n1 3\n1 4\n",
            "No\n"
        ]
    ],
    "hint": "In the first sample you are given a graph made of two vertices with an edge between them. So, these vertices can correspond to both the same and adjacent letters. Any of the following strings \"aa\", \"ab\", \"ba\", \"bb\", \"bc\", \"cb\", \"cc\" meets the graph's conditions.\n\nIn the second sample the first vertex is connected to all three other vertices, but these three vertices are not connected with each other. That means that they must correspond to distinct letters that are not adjacent, but that is impossible as there are only two such letters: a and c.",
    "translation": "## \u9898\u610f\r\n\u7ed9\u51fa\u4e00\u4e2a\u7531\u5b57\u7b26\u4e32$s$\u5efa\u56fe\u7684\u8fc7\u7a0b\u3002\r\n\r\n- \u5b57\u7b26\u4ec5\u6709$a,b,c$\u4e09\u79cd\uff0c\u5efa\u51fa\u7684\u56fe\u4e2d\u7b2c$i$\u4e2a\u9876\u70b9\u8868\u793a\u539f\u6765\u7684\u7b2c$i$\u4e2a\u5b57\u7b26\u3002\r\n- $i$\u4e0e$j$\u6709\u8fde\u8fb9\uff0c\u5f53\u4e14\u4ec5\u5f53$s[i]$\u4e0e$s[j]$\u76f8\u540c\u6216$s[i]$\u548c$s[j]$\u662f\u76f8\u90bb\u7684\u5b57\u7b26\uff08$a$\u4e0e$b$\u76f8\u90bb\uff0c$b$\u4e0e$c$\u76f8\u90bb\uff09\r\n\r\n\u73b0\u7ed9\u51fa\u7531\u67d0\u4e2a\u5b57\u7b26\u4e32$s$\u5efa\u51fa\u7684\u56fe\uff0c\u6784\u9020\u4e00\u4e2a\u5b57\u7b26\u4e32\u4f7f\u5176\u7b26\u5408\u4e0a\u9762\u7684\u8981\u6c42\u8981\u6c42\uff0c\u6216\u8005\u56de\u7b54\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u5b57\u7b26\u4e32\u3002\r\n\r\n###### \u8f93\u5165\uff1a\r\n\u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570$n,m$\uff0c\u8868\u793a\u8282\u70b9\u6570\uff08\u5373\u5b57\u7b26\u4e32\u957f\u5ea6\uff09\u548c\u8fb9\u6570\u3002\r\n\r\n\u63a5\u4e0b\u6765$m$\u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6570\u5b57 $u_{i}$ \u548c $v_{i}$\uff0c\u8868\u793a\u8fd9\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u6709\u4e00\u6761\u8fb9\u3002\r\n###### \u8f93\u51fa\uff1a\r\n\u5982\u679c\u5b57\u7b26\u4e32\u5b58\u5728\uff0c\u7b2c\u4e00\u884c\u8f93\u51fa\u4e00\u4e2a$\u201cYes\u201d\uff0c\u7b2c\u4e8c\u884c\u8f93\u51fa\u7b26\u5408\u6761\u4ef6\u7684\u5b57\u7b26\u4e32\u3002\r\n\r\n\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u4ec5\u5728\u7b2c\u4e00\u884c\u8f93\u51fa\u4e00\u4e2a\u201cNo\u201d\u3002\r\n"
}