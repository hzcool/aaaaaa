{
    "description": "Don't put up with what you're sick of! The Smart Beaver decided to escape from the campus of Beaver Science Academy (BSA). BSA is a $ b\u00d7b $ square on a plane. Each point $ x,y $ $ (0<=x,y<=b) $ belongs to BSA. To make the path quick and funny, the Beaver constructed a Beaveractor, an effective and comfortable types of transport.\n\nThe campus obeys traffic rules: there are $ n $ arrows, parallel to the coordinate axes. The arrows do not intersect and do not touch each other. When the Beaveractor reaches some arrow, it turns in the arrow's direction and moves on until it either reaches the next arrow or gets outside the campus. The Beaveractor covers exactly one unit of space per one unit of time. You can assume that there are no obstacles to the Beaveractor.\n\nThe BSA scientists want to transport the brand new Beaveractor to the \"Academic Tractor\" research institute and send the Smart Beaver to do his postgraduate studies and sharpen pencils. They have $ q $ plans, representing the Beaveractor's initial position $ (x_{i},y_{i}) $ , the initial motion vector $ w_{i} $ and the time $ t_{i} $ that have passed after the escape started.\n\nYour task is for each of the $ q $ plans to determine the Smart Beaver's position after the given time.",
    "inputFormat": "The first line contains two integers: the number of traffic rules $ n $ and the size of the campus $ b $ , $ 0<=n $ , $ 1<=b $ . Next $ n $ lines contain the rules. Each line of the rules contains four space-separated integers $ x_{0} $ , $ y_{0} $ , $ x_{1} $ , $ y_{1} $ \u2014 the beginning and the end of the arrow. It is guaranteed that all arrows are parallel to the coordinate axes and have no common points. All arrows are located inside the campus, that is, $ 0<=x_{0},y_{0},x_{1},y_{1}<=b $ holds.\n\nNext line contains integer $ q $ \u2014 the number of plans the scientists have, $ 1<=q<=10^{5} $ . The $ i $ -th plan is represented by two integers, $ x_{i} $ , $ y_{i} $ are the Beaveractor's coordinates at the initial time, $ 0<=x_{i},y_{i}<=b $ , character $ w_{i} $ , that takes value U, D, L, R and sets the initial direction up, down, to the left or to the right correspondingly (the Y axis is directed upwards), and $ t_{i} $ \u2014 the time passed after the escape started, $ 0<=t_{i}<=10^{15} $ .\n\n- to get 30 points you need to solve the problem with constraints $ n,b<=30 $ (subproblem D1);\n- to get 60 points you need to solve the problem with constraints $ n,b<=1000 $ (subproblems D1+D2);\n- to get 100 points you need to solve the problem with constraints $ n,b<=10^{5} $ (subproblems D1+D2+D3).",
    "outputFormat": "Print $ q $ lines. Each line should contain two integers \u2014 the Beaveractor's coordinates at the final moment of time for each plan. If the Smart Beaver manages to leave the campus in time $ t_{i} $ , print the coordinates of the last point in the campus he visited.",
    "samples": [
        [
            "3 3\n0 0 0 1\n0 2 2 2\n3 3 2 3\n12\n0 0 L 0\n0 0 L 1\n0 0 L 2\n0 0 L 3\n0 0 L 4\n0 0 L 5\n0 0 L 6\n2 0 U 2\n2 0 U 3\n3 0 U 5\n1 3 D 2\n1 3 R 2\n",
            "0 0\n0 1\n0 2\n1 2\n2 2\n3 2\n3 2\n2 2\n3 2\n1 3\n2 2\n1 3\n"
        ]
    ],
    "hint": "",
    "translation": "\u5c0f\u6d77\u72f8\u8ba1\u5212\u9003\u51fa\u5b66\u6821\u3002\n\n\u5bf9\u4e8e\u4e00\u5f20 $(b + 1) \\times (b + 1)$ \u7684\u7f51\u683c\u56fe\u4e2d\uff0c\u5de6\u4e0b\u89d2\u4e3a $(0, 0)$ ,\u53f3\u4e0a\u89d2\u4e3a $(b, b)$\u3002\u5411\u4e0a\u4e3a\u7eb5\u5750\u6807\u6b63\u65b9\u5411\uff0c\u5411\u53f3\u4e3a\u6a2a\u5750\u6807\u6b63\u65b9\u5411\u3002\n\n\u7f51\u683c\u4e2d\u6709 n \u4e2a**\u4e92\u4e0d\u76f8\u4ea4**\u7684**\u5e73\u884c\u4e8e\u7f51\u683c\u7ebf**\u7684\u7bad\u5934\uff0c\u6bcf\u5f53\u5c0f\u6d77\u72f8\u78b0\u5230\u7bad\u5934\u5c06**\u7acb\u5373**\u8f6c\u5411\u7bad\u5934\u6240\u6307\u65b9\u5411\u3002\u4e00\u4e2a\u7bad\u5934\u7531\u8d77\u59cb\u5750\u6807 $(x_0, y_0)$ \u6307\u5411\u7ec8\u6b62\u5750\u6807 $(x_1, y_1)$ \u3002\n\n\u4e3a\u4e86\u627e\u51fa\u6700\u4f18\u9003\u5b66\u8def\u7ebf\u5c0f\u6d77\u72f8\u5c06\u7ed9\u51fa $q$ \u6b21\u8be2\u95ee\uff0c \u5bf9\u4e8e\u7b2c $i$ \u4e2a\u8be2\u95ee\u5c06\u7ed9\u51fa\u8d77\u59cb\u5750\u6807 $(x_i, y_i)$\uff0c \u8d77\u59cb\u65b9\u5411 $w_i \\in \\{ U,\\; D,\\; L,\\; R\\}$ \uff0c\u5206\u522b\u8868\u793a\u4e0a\u4e0b\u5de6\u53f3\uff0c\u4ee5\u53ca\u6700\u591a\u8d70\u8fc7\u7684\u957f\u5ea6 $t_i$ \u3002\n\n\u8bf7\u4f60\u7ed9\u51fa\u5c0f\u6d77\u72f8\u662f\u5426\u80fd\u9003\u79bb\u5b66\u6821\uff0c\u5982\u679c\u80fd\uff0c\u8bf7\u8f93\u51fa\u5979\u79bb\u5f00\u5b66\u6821\u524d\u7684\u6700\u540e\u4f4d\u7f6e\uff0c\u5982\u679c\u4e0d\u80fd\uff0c\u8bf7\u8f93\u51fa\u5979\u5728\u7ecf\u8fc7\u957f\u5ea6\u4e3a $t_i$ \u7684\u8def\u5f84\u540e\u7684\u4f4d\u7f6e(\u4ee5\u4e0a\u8bf7\u5747\u4ee5\u5750\u6807\u5f62\u5f0f\u8f93\u51fa)\u3002"
}