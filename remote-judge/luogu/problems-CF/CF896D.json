{
    "description": "Lakhesh loves to make movies, so Nephren helps her run a cinema. We may call it No. 68 Cinema.\n\n![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF896D/c4ab5c88eb89d5d2f9a45a0cad227d56ef890e10.png)\n\nHowever, one day, the No. 68 Cinema runs out of changes (they don't have 50-yuan notes currently), but Nephren still wants to start their business. (Assume that yuan is a kind of currency in Regulu Ere.)\n\nThere are three types of customers: some of them bring exactly a 50-yuan note; some of them bring a 100-yuan note and Nephren needs to give a 50-yuan note back to him/her; some of them bring VIP cards so that they don't need to pay for the ticket.\n\nNow $ n $ customers are waiting outside in queue. Nephren wants to know how many possible queues are there that they are able to run smoothly (i.e. every customer can receive his/her change), and that the number of 50-yuan notes they have after selling tickets to all these customers is between $ l $ and $ r $ , inclusive. Two queues are considered different if there exists a customer whose type is different in two queues. As the number can be large, please output the answer modulo $ p $ .",
    "inputFormat": "One line containing four integers $ n $ ( $ 1<=n<=10^{5}) $ , $ p $ ( $ 1<=p<=2\u00b710^{9}) $ , $ l $ and $ r $ ( $ 0<=l<=r<=n $ ).",
    "outputFormat": "One line indicating the answer modulo $ p $ .",
    "samples": [
        [
            "4 97 2 3\n",
            "13\n"
        ],
        [
            "4 100 0 4\n",
            "35\n"
        ]
    ],
    "hint": "We use A, B and C to indicate customers with 50-yuan notes, customers with 100-yuan notes and customers with VIP cards respectively.\n\nFor the first sample, the different possible queues that there are $ 2 $ 50-yuan notes left are AAAB, AABA, ABAA, AACC, ACAC, ACCA, CAAC, CACA and CCAA, and the different possible queues that there are $ 3 $ 50-yuan notes left are AAAC, AACA, ACAA and CAAA. So there are $ 13 $ different queues satisfying the first sample. Similarly, there are $ 35 $ different queues satisfying the second sample.",
    "translation": "No.68\u7535\u5f71\u9662\u6ca1\u670950\u5143\u96f6\u94b1\u4e86.\n\u6709n\u540d\u987e\u5ba2\u6392\u961f\u8d2d\u4e70\u7535\u5f71\u7968\uff0c\u4e00\u5f20\u7535\u5f71\u796850\u5143\u3002\u987e\u5ba2\u6709\u4e09\u79cd\uff0c\u643a\u5e26\u4e00\u5f2050\u5143\u949e\u7968\u7684\uff0c\u643a\u5e26\u4e00\u5f20100\u5143\u949e\u7968\u7684(\u6211\u4eec\u9700\u8981\u627e\u7ed9\u4ed6\u4e00\u5f2050\u5143)\u4ee5\u53cavip\u5ba2\u6237(\u4e0d\u7528\u4ed8\u94b1).\n\u6c42\u6709\u591a\u5c11\u79cd\u6392\u961f\u7684\u65b9\u6cd5\uff0c\u4f7f\u5f97\u5f53\u961f\u4f0d\u91cc\u7684\u4eba\u5168\u90e8\u5f97\u5230\u7535\u5f71\u7968\u65f6\u7535\u5f71\u9662\u5de5\u4f5c\u4eba\u5458\u624b\u4e0a\u768450\u5143\u949e\u7968\u5728l-r\u4e4b\u95f4(\u643a\u5e26100\u5143\u7684\u987e\u5ba2\u8981\u5f97\u5230\u627e\u94b1).\u53ea\u8981\u961f\u4f0d\u91cc\u6709\u4e00\u540d\u987e\u5ba2\u7684\u79cd\u7c7b\u4e0d\u540c\uff0c\u8fd9\u4e24\u4e2a\u961f\u4f0d\u5c31\u662f\u4e0d\u540c\u7684.\u8f93\u51fa\u7ed3\u679c\u6a21p.\n\n\u611f\u8c22@U49371 Fuko_Ibuki \u63d0\u4f9b\u7684\u7ffb\u8bd1"
}