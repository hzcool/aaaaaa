{
    "description": "There are $ n $ students standing in a row. Two coaches are forming two teams \u2014 the first coach chooses the first team and the second coach chooses the second team.\n\nThe $ i $ -th student has integer programming skill $ a_i $ . All programming skills are distinct and between $ 1 $ and $ n $ , inclusive.\n\nFirstly, the first coach will choose the student with maximum programming skill among all students not taken into any team, and $ k $ closest students to the left of him and $ k $ closest students to the right of him (if there are less than $ k $ students to the left or to the right, all of them will be chosen). All students that are chosen leave the row and join the first team. Secondly, the second coach will make the same move (but all students chosen by him join the second team). Then again the first coach will make such move, and so on. This repeats until the row becomes empty (i. e. the process ends when each student becomes to some team).\n\nYour problem is to determine which students will be taken into the first team and which students will be taken into the second team.",
    "inputFormat": "The first line of the input contains two integers $ n $ and $ k $ ( $ 1 \\le k \\le n \\le 2 \\cdot 10^5 $ ) \u2014 the number of students and the value determining the range of chosen students during each move, respectively.\n\nThe second line of the input contains $ n $ integers $ a_1, a_2, \\dots, a_n $ ( $ 1 \\le a_i \\le n $ ), where $ a_i $ is the programming skill of the $ i $ -th student. It is guaranteed that all programming skills are distinct.",
    "outputFormat": "Print a string of $ n $ characters; $ i $ -th character should be 1 if $ i $ -th student joins the first team, or 2 otherwise.",
    "samples": [
        [
            "5 2\n2 4 5 3 1\n",
            "11111\n"
        ],
        [
            "5 1\n2 1 3 5 4\n",
            "22111\n"
        ],
        [
            "7 1\n7 2 1 3 5 4 6\n",
            "1121122\n"
        ],
        [
            "5 1\n2 4 5 3 1\n",
            "21112\n"
        ]
    ],
    "hint": "In the first example the first coach chooses the student on a position $ 3 $ , and the row becomes empty (all students join the first team).\n\nIn the second example the first coach chooses the student on position $ 4 $ , and the row becomes $ [2, 1] $ (students with programming skills $ [3, 4, 5] $ join the first team). Then the second coach chooses the student on position $ 1 $ , and the row becomes empty (and students with programming skills $ [1, 2] $ join the second team).\n\nIn the third example the first coach chooses the student on position $ 1 $ , and the row becomes $ [1, 3, 5, 4, 6] $ (students with programming skills $ [2, 7] $ join the first team). Then the second coach chooses the student on position $ 5 $ , and the row becomes $ [1, 3, 5] $ (students with programming skills $ [4, 6] $ join the second team). Then the first coach chooses the student on position $ 3 $ , and the row becomes $ [1] $ (students with programming skills $ [3, 5] $ join the first team). And then the second coach chooses the remaining student (and the student with programming skill $ 1 $ joins the second team).\n\nIn the fourth example the first coach chooses the student on position $ 3 $ , and the row becomes $ [2, 1] $ (students with programming skills $ [3, 4, 5] $ join the first team). Then the second coach chooses the student on position $ 1 $ , and the row becomes empty (and students with programming skills $ [1, 2] $ join the second team).",
    "translation": "## Description\n\n\u6709 $n$ \u4e2a\u4eba\u7ad9\u6210\u4e00\u6392\uff0c\u4ed6\u4eec\u6bcf\u4e2a\u4eba\u90fd\u6709\u4e00\u4e2a\u80fd\u529b\u503c\uff0c\u80fd\u529b\u503c\u4e92\u4e0d\u76f8\u540c\u3002\n\n\u6709\u4e24\u4e2a\u6559\u7ec3\uff0c\u5206\u522b\u662f $1$ \u961f\u6559\u7ec3\u548c $2$ \u961f\u6559\u7ec3\u3002\u7531 $1$ \u961f\u6559\u7ec3\u5148\u6311\uff0c\u6bcf\u6b21\u6559\u7ec3\u4f1a\u5c06\u573a\u4e0a\u5269\u4e0b\u7684\u4eba\u4e2d\u80fd\u529b\u503c\u6700\u9ad8\u7684\u548c\u4ed6\u5de6\u53f3\u5404 $k$ \u4e2a\u4eba\u4ece\u573a\u4e0a\u6311\u51fa\uff0c\u52a0\u5165\u81ea\u5df1\u7684\u961f\u4f0d\uff0c\u7136\u540e\u7531\u53e6\u4e00\u540d\u6559\u7ec3\u518d\u6311\u3002\n\n\u5728\u6311\u9009\u65f6\u5982\u679c\u4e00\u4fa7\u4e0d\u8db3 $k$ \u4e2a\u4eba\u5219\u5c06\u8fd9\u4e9b\u4eba\u90fd\u6311\u5165\u961f\u4f0d\u3002\n\n\u8bf7\u6c42\u51fa\u6bcf\u4e2a\u4eba\u6700\u7ec8\u52a0\u5165\u7684\u662f\u54ea\u4e2a\u961f\u4f0d\n\n## Input\n\n\u7b2c\u4e00\u884c\u662f\u4e24\u4e2a\u6574\u6570 $n,~k$\n\n\u4e0b\u9762\u4e00\u884c\u662f\u4e00\u4e2a $1$ \u5230 $n$ \u7684\u6392\u5217\uff0c\u63cf\u8ff0\u6bcf\u4e2a\u4eba\u7684\u80fd\u529b\u503c\n\n## Output\n\n\u8f93\u51fa\u4e00\u884c\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u5982\u679c\u7b2c $i$ \u4e2a\u4eba\u6700\u7ec8\u52a0\u5165 $1$ \u961f\uff0c\u5219\u5b57\u7b26\u4e32\u7b2c $i$ \u4f4d\u4e3a $1$\uff0c\u5426\u5219\u4e3a $2$\u3002\n\n## Limitation\n\n$1~\\leq~k~\\leq~n~\\leq~2~\\times~10^5$\n\nTranslated By @ \u4e00\u6276\u82cf\u4e00"
}