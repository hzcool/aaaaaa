{
    "description": "Iahub is playing an uncommon game. Initially, he has $ n $ boxes, numbered 1, 2, 3, $ ... $ , $ n $ . Each box has some number of candies in it, described by a sequence $ a_{1} $ , $ a_{2} $ , $ ... $ , $ a_{n} $ . The number $ a_{k} $ represents the number of candies in box $ k $ .\n\nThe goal of the game is to move all candies into exactly two boxes. The rest of $ n-2 $ boxes must contain zero candies. Iahub is allowed to do several (possible zero) moves. At each move he chooses two different boxes $ i $ and $ j $ , such that $ a_{i}<=a_{j} $ . Then, Iahub moves from box $ j $ to box $ i $ exactly $ a_{i} $ candies. Obviously, when two boxes have equal number of candies, box number $ j $ becomes empty.\n\nYour task is to give him a set of moves such as Iahub to archive the goal of the game. If Iahub can't win the game for the given configuration of boxes, output -1. Please note that in case there exist a solution, you don't need to print the solution using minimal number of moves.",
    "inputFormat": "The first line of the input contains integer $ n $ ( $ 3<=n<=1000 $ ). The next line contains $ n $ non-negative integers: $ a_{1},a_{2},...,a_{n} $ \u2014 sequence elements. It is guaranteed that sum of all numbers in sequence $ a $ is up to $ 10^{6} $ .",
    "outputFormat": "In case there exists no solution, output -1. Otherwise, in the first line output integer $ c $ $ (0<=c<=10^{6}) $ , representing number of moves in your solution. Each of the next $ c $ lines should contain two integers $ i $ and $ j $ $ (1<=i,j<=n,i\u2260j) $ : integers $ i $ , $ j $ in the $ k $ th line mean that at the $ k $ -th move you will move candies from the $ j $ -th box to the $ i $ -th one.",
    "samples": [
        [
            "3\n3 6 9\n",
            "2\n2 3\n1 3\n"
        ],
        [
            "3\n0 1 0\n",
            "-1"
        ],
        [
            "4\n0 1 1 0\n",
            "0\n"
        ]
    ],
    "hint": "For the first sample, after the first move the boxes will contain 3, 12 and 3 candies. After the second move, the boxes will contain 6, 12 and 0 candies. Now all candies are in exactly 2 boxes.\n\nFor the second sample, you can observe that the given configuration is not valid, as all candies are in a single box and they should be in two boxes. Also, any move won't change the configuration, so there exists no solution.\n\nFor the third sample, all candies are already in 2 boxes. Hence, no move is needed.",
    "translation": "\r\n\u6709$n$\u4e2a\u76d2\u5b50\uff0c\u7b2c$i$\u4e2a\u76d2\u5b50\u91cc\u9762\u6709$a_i$\u4e2a\u7cd6\u679c\u3002\u6bcf\u6b21\u9009\u62e9\u4e24\u4e2a\u76d2\u5b50$i,j$,\u5047\u8bbe$a_i \\le a_j$\u3002\u7136\u540e\u4ece\u7b2c$j$\u4e2a\u76d2\u5b50\u4e2d\u62ff\u51fa$a_i$\u4e2a\u7cd6\u679c\uff0c\u653e\u5230\u7b2c$i$\u4e2a\u76d2\u5b50\u91cc\u9762(\u663e\u7136\uff0c\u5982\u679c$a_i=a_j$\uff0c\u90a3\u4e48\u7b2c$j$\u4e2a\u76d2\u5b50\u4f1a\u53d8\u6210\u7a7a\u7684)\u3002\u4f60\u53ef\u4ee5\u8fd9\u6837\u64cd\u4f5c\u4efb\u610f\u591a\u6b21\u3002\u8981\u6c42\u6700\u540e\u53ea\u6709$2$\u4e2a\u76d2\u5b50\u91cc\u9762\u6709\u7cd6\u679c\u3002\u8f93\u51fa\u65b9\u6848\u3002\u5982\u679c\u65e0\u8bba\u5982\u4f55\u64cd\u4f5c\u4e5f\u65e0\u6cd5\u6ee1\u8db3\u6761\u4ef6\uff0c\u8f93\u51fa\"$-1$\""
}