{
    "description": "You are given a string $ a $ , consisting of $ n $ characters, $ n $ is even. For each $ i $ from $ 1 $ to $ n $ $ a_i $ is one of 'A', 'B' or 'C'.\n\nA bracket sequence is a string containing only characters \"(\" and \")\". A regular bracket sequence is a bracket sequence that can be transformed into a correct arithmetic expression by inserting characters \"1\" and \"+\" between the original characters of the sequence. For example, bracket sequences \"()()\" and \"(())\" are regular (the resulting expressions are: \"(1)+(1)\" and \"((1+1)+1)\"), and \")(\", \"(\" and \")\" are not.\n\nYou want to find a string $ b $ that consists of $ n $ characters such that:\n\n- $ b $ is a regular bracket sequence;\n- if for some $ i $ and $ j $ ( $ 1 \\le i, j \\le n $ ) $ a_i=a_j $ , then $ b_i=b_j $ .\n\nIn other words, you want to replace all occurrences of 'A' with the same type of bracket, then all occurrences of 'B' with the same type of bracket and all occurrences of 'C' with the same type of bracket.\n\nYour task is to determine if such a string $ b $ exists.",
    "inputFormat": "The first line contains a single integer $ t $ ( $ 1 \\le t \\le 1000 $ ) \u2014 the number of testcases.\n\nThen the descriptions of $ t $ testcases follow.\n\nThe only line of each testcase contains a string $ a $ . $ a $ consists only of uppercase letters 'A', 'B' and 'C'. Let $ n $ be the length of $ a $ . It is guaranteed that $ n $ is even and $ 2 \\le n \\le 50 $ .",
    "outputFormat": "For each testcase print \"YES\" if there exists such a string $ b $ that:\n\n- $ b $ is a regular bracket sequence;\n- if for some $ i $ and $ j $ ( $ 1 \\le i, j \\le n $ ) $ a_i=a_j $ , then $ b_i=b_j $ .\n\nOtherwise, print \"NO\".\n\nYou may print every letter in any case you want (so, for example, the strings yEs, yes, Yes and YES are all recognized as positive answer).",
    "samples": [
        [
            "4\nAABBAC\nCACA\nBBBBAC\nABCA",
            "YES\nYES\nNO\nNO"
        ]
    ],
    "hint": "In the first testcase one of the possible strings $ b $ is \"(())()\".\n\nIn the second testcase one of the possible strings $ b $ is \"()()\".",
    "translation": "\u7ed9\u5b9a $T$ \u4e2a\u4ec5\u5305\u542b\u5927\u5199\u5b57\u6bcd `A`\uff0c`B`\uff0c`C` \u7684\u5b57\u7b26\u4e32 $s$\u3002\u95ee\u4f60\u662f\u5426\u80fd\u591f\u901a\u8fc7\u5c06\u6bcf\u4e2a `A`\uff0c`B`\uff0c`C` \u6362\u6210 `(`\uff0c`)` \u4e2d\u7684\u4e00\u4e2a\uff08\u540c\u4e00\u4e2a\u5b57\u6bcd\u5fc5\u987b\u8981\u6362\u6210\u540c\u4e00\u4e2a\u5b57\u7b26\uff09\uff0c\u4f7f\u5f97\u6700\u540e\u5f97\u5230\u7684\u62ec\u53f7\u5e8f\u5217\u80fd\u591f\u5b8c\u5168\u5339\u914d\u3002\n\n**\u6570\u636e\u8303\u56f4\uff1a$1\\leqslant t\\leqslant 10^3$\uff0c$2\\leqslant |s|\\leqslant 50$\u3002**\n\nTranslate by Eason_AC  \n2021.3.5"
}