{
    "description": "There are $ n $ lamps on a line, numbered from $ 1 $ to $ n $ . Each one has an initial state off ( $ 0 $ ) or on ( $ 1 $ ).\n\nYou're given $ k $ subsets $ A_1, \\ldots, A_k $ of $ \\{1, 2, \\dots, n\\} $ , such that the intersection of any three subsets is empty. In other words, for all $ 1 \\le i_1 < i_2 < i_3 \\le k $ , $ A_{i_1} \\cap A_{i_2} \\cap A_{i_3} = \\varnothing $ .\n\nIn one operation, you can choose one of these $ k $ subsets and switch the state of all lamps in it. It is guaranteed that, with the given subsets, it's possible to make all lamps be simultaneously on using this type of operation.\n\nLet $ m_i $ be the minimum number of operations you have to do in order to make the $ i $ first lamps be simultaneously on. Note that there is no condition upon the state of other lamps (between $ i+1 $ and $ n $ ), they can be either off or on.\n\nYou have to compute $ m_i $ for all $ 1 \\le i \\le n $ .",
    "inputFormat": "The first line contains two integers $ n $ and $ k $ ( $ 1 \\le n, k \\le 3 \\cdot 10^5 $ ).\n\nThe second line contains a binary string of length $ n $ , representing the initial state of each lamp (the lamp $ i $ is off if $ s_i = 0 $ , on if $ s_i = 1 $ ).\n\nThe description of each one of the $ k $ subsets follows, in the following format:\n\nThe first line of the description contains a single integer $ c $ ( $ 1 \\le c \\le n $ ) \u2014 the number of elements in the subset.\n\nThe second line of the description contains $ c $ distinct integers $ x_1, \\ldots, x_c $ ( $ 1 \\le x_i \\le n $ ) \u2014 the elements of the subset.\n\nIt is guaranteed that:\n\n- The intersection of any three subsets is empty;\n- It's possible to make all lamps be simultaneously on using some operations.",
    "outputFormat": "You must output $ n $ lines. The $ i $ -th line should contain a single integer $ m_i $ \u2014 the minimum number of operations required to make the lamps $ 1 $ to $ i $ be simultaneously on.",
    "samples": [
        [
            "7 3\n0011100\n3\n1 4 6\n3\n3 4 7\n2\n2 3",
            "1\n2\n3\n3\n3\n3\n3"
        ],
        [
            "8 6\n00110011\n3\n1 3 8\n5\n1 2 5 6 7\n2\n6 8\n2\n3 5\n2\n4 7\n1\n2",
            "1\n1\n1\n1\n1\n1\n4\n4"
        ],
        [
            "5 3\n00011\n3\n1 2 3\n1\n4\n3\n3 4 5",
            "1\n1\n1\n1\n1"
        ],
        [
            "19 5\n1001001001100000110\n2\n2 3\n2\n5 6\n2\n8 9\n5\n12 13 14 15 16\n1\n19",
            "0\n1\n1\n1\n2\n2\n2\n3\n3\n3\n3\n4\n4\n4\n4\n4\n4\n4\n5"
        ]
    ],
    "hint": "In the first example:\n\n- For $ i = 1 $ , we can just apply one operation on $ A_1 $ , the final states will be $ 1010110 $ ;\n- For $ i = 2 $ , we can apply operations on $ A_1 $ and $ A_3 $ , the final states will be $ 1100110 $ ;\n- For $ i \\ge 3 $ , we can apply operations on $ A_1 $ , $ A_2 $ and $ A_3 $ , the final states will be $ 1111111 $ .\n\nIn the second example:\n\n- For $ i \\le 6 $ , we can just apply one operation on $ A_2 $ , the final states will be $ 11111101 $ ;\n- For $ i \\ge 7 $ , we can apply operations on $ A_1, A_3, A_4, A_6 $ , the final states will be $ 11111111 $ .",
    "translation": "\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684 01 \u4e32 $S$\uff0c\u548c $k$ \u4e2a $S$ \u7684\u4e0b\u6807\u5b50\u96c6\uff0c\u4e14\u4efb\u610f\u4e09\u4e2a\u5b50\u96c6\u7684\u4ea4\u96c6\u4e3a\u7a7a\u96c6\u3002\u4e00\u6b21\u64cd\u4f5c\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a\u5b50\u96c6\uff0c\u5c06\u5b50\u96c6\u4e2d\u7684\u4e0b\u6807\u5bf9\u5e94\u7684 $S_i$ \u53d6\u53cd\u3002\u4ee4 $m_i$ \u4e3a\u8ba9 $S_{1 \\sim i} = 1$ \u7684\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\uff0c\u6c42\u51fa\u6240\u6709\u7684 $m_i$\uff0c\u4fdd\u8bc1\u6709\u65b9\u6848\u3002\n\n$1 \\leq n,k \\leq 3 \\times 10^5$\u3002"
}