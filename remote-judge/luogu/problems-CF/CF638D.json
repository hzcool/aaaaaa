{
    "description": "A super computer has been built in the Turtle Academy of Sciences. The computer consists of $ n\u00b7m\u00b7k $ CPUs. The architecture was the paralellepiped of size $ n\u00d7m\u00d7k $ , split into $ 1\u00d71\u00d71 $ cells, each cell contains exactly one CPU. Thus, each CPU can be simultaneously identified as a group of three numbers from the layer number from $ 1 $ to $ n $ , the line number from $ 1 $ to $ m $ and the column number from $ 1 $ to $ k $ .\n\nIn the process of the Super Computer's work the CPUs can send each other messages by the famous turtle scheme: CPU $ (x,y,z) $ can send messages to CPUs $ (x+1,y,z) $ , $ (x,y+1,z) $ and $ (x,y,z+1) $ (of course, if they exist), there is no feedback, that is, CPUs $ (x+1,y,z) $ , $ (x,y+1,z) $ and $ (x,y,z+1) $ cannot send messages to CPU $ (x,y,z) $ .\n\nOver time some CPUs broke down and stopped working. Such CPUs cannot send messages, receive messages or serve as intermediates in transmitting messages. We will say that CPU $ (a,b,c) $ controls CPU $ (d,e,f) $ , if there is a chain of CPUs $ (x_{i},y_{i},z_{i}) $ , such that $ (x_{1}=a,y_{1}=b,z_{1}=c) $ , $ (x_{p}=d,y_{p}=e,z_{p}=f) $ (here and below $ p $ is the length of the chain) and the CPU in the chain with number $ i $ ( $ i&lt;p $ ) can send messages to CPU $ i+1 $ .\n\nTurtles are quite concerned about the denial-proofness of the system of communication between the remaining CPUs. For that they want to know the number of critical CPUs. A CPU $ (x,y,z) $ is critical, if turning it off will disrupt some control, that is, if there are two distinctive from $ (x,y,z) $ CPUs: $ (a,b,c) $ and $ (d,e,f) $ , such that $ (a,b,c) $ controls $ (d,e,f) $ before $ (x,y,z) $ is turned off and stopped controlling it after the turning off.",
    "inputFormat": "The first line contains three integers $ n $ , $ m $ and $ k $ ( $ 1<=n,m,k<=100 $ ) \u2014 the dimensions of the Super Computer.\n\nThen $ n $ blocks follow, describing the current state of the processes. The blocks correspond to the layers of the Super Computer in the order from $ 1 $ to $ n $ . Each block consists of $ m $ lines, $ k $ characters in each \u2014 the description of a layer in the format of an $ m\u00d7k $ table. Thus, the state of the CPU $ (x,y,z) $ is corresponded to the $ z $ -th character of the $ y $ -th line of the block number $ x $ . Character \"1\" corresponds to a working CPU and character \"0\" corresponds to a malfunctioning one. The blocks are separated by exactly one empty line.",
    "outputFormat": "Print a single integer \u2014 the number of critical CPUs, that is, such that turning only this CPU off will disrupt some control.",
    "samples": [
        [
            "2 2 3\n000\n000\n\n111\n111\n",
            "2\n"
        ],
        [
            "3 3 3\n111\n111\n111\n\n111\n111\n111\n\n111\n111\n111\n",
            "19\n"
        ],
        [
            "1 1 10\n0101010101\n",
            "0\n"
        ]
    ],
    "hint": "In the first sample the whole first layer of CPUs is malfunctional. In the second layer when CPU $ (2,1,2) $ turns off, it disrupts the control by CPU $ (2,1,3) $ over CPU $ (2,1,1) $ , and when CPU $ (2,2,2) $ is turned off, it disrupts the control over CPU $ (2,2,3) $ by CPU $ (2,2,1) $ .\n\nIn the second sample all processors except for the corner ones are critical.\n\nIn the third sample there is not a single processor controlling another processor, so the answer is $ 0 $ .",
    "translation": "### \u9898\u76ee\u63cf\u8ff0\n  \u4e00\u4e2a\u8d85\u7ea7\u8ba1\u7b97\u673a\u5728\u6d77\u9f9f\u79d1\u5b66\u9662\u88ab\u5efa\u6210\u4e86\u3002\u8fd9\u4e2a\u8ba1\u7b97\u673a\u5305\u62ec\u4e86 $n\\cdot m\\cdot k$ \u4e2a\u4e2d\u592e\u5904\u7406\u5668\u3002\u8be5\u5efa\u7b51\u662f\u4e00\u4e2a\u5927\u5c0f\u4e3a $n\\cdot m\\cdot k$ \u7684\u5e73\u884c\u7ba1\u9053\uff0c\u5206\u6210 $1\\times 1\\times 1$ \u7684\u7ec6\u80de\uff0c\u6bcf\u4e2a\u7ec6\u80de\u91cc\u542b\u6709\u4e00\u4e2a\u4e2d\u592e\u5904\u7406\u5668\u3002\u56e0\u6b64\uff0c\u6bcf\u4e2a\u4e2d\u592e\u5904\u7406\u5668\u53ef\u4ee5\u540c\u65f6\u6807\u8bc6\u4e3a\u4e09\u4e2a\u6570\u5b57\uff0c\u5c42\u53f7\u4ece 1 \u5230 n\uff0c\u884c\u53f7\u4ece 1 \u5230 m\uff0c\u5217\u53f7\u4ece 1 \u5230 k\u3002\n  \n  \u5728\u8d85\u7ea7\u8ba1\u7b97\u673a\u7684\u5de5\u4f5c\u8fc7\u7a0b\u4e2d\uff0c\u4e2d\u592e\u5904\u7406\u5668\u4e4b\u95f4\u53ef\u4ee5\u901a\u8fc7\u8457\u540d\u7684\u6d77\u9f9f\u8ba1\u5212\u4e92\u76f8\u53d1\u9001\u4fe1\u606f\u3002\u5982\uff0c\u4e2d\u592e\u5904\u7406\u5668 $(x,y,z)$ \u53ef\u4ee5\u5411\u4e2d\u592e\u5904\u7406\u5668 $(x+1,y,z),(x,y+1,z),(x,y,z+1)$ \u53d1\u9001\u4fe1\u606f\uff08\u5f53\u7136\uff0c\u5982\u679c\u5b83\u4eec\u90fd\u5b58\u5728\uff09\u3002\u4f46\u662f\uff0c\u8fd9\u79cd\u53d1\u9001\u6d88\u606f\u7684\u88c5\u7f6e\u662f\u4e0d\u80fd\u56de\u590d\u7684\uff0c\u6240\u4ee5\u540e\u4e09\u8005\u4e0d\u80fd\u5411\u524d\u8005\u53d1\u9001\u6d88\u606f\u3002\n  \n  \u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u4e00\u4e9b\u4e2d\u592e\u5904\u7406\u5668\u574f\u6389\u4e86\u5e76\u4e14\u505c\u6b62\u4e86\u5de5\u4f5c\u3002\u8fd9\u4e9b\u4e2d\u592e\u5904\u7406\u5668\u65e2\u4e0d\u80fd\u6536\u5230\u4fe1\u606f\u548c\u53d1\u9001\u4fe1\u606f\uff0c\u4e5f\u4e0d\u80fd\u5e2e\u52a9\u8f6c\u79fb\u4fe1\u606f\u3002\n  \n  \u5982\u679c\u5b58\u5728\u4e00\u6761\u94fe $(x_i,y_i,z_i)$\uff0c\u6ee1\u8db3 $(x_1=a,x_2=b,x_3=c),(x_p=d,y_p=e,z_p=f)$\uff0c\u5e76\u4e14\u94fe\u5185\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $i<p$\uff08\u8fd9\u91cc\u7684 p \u6307\u8fd9\u6761\u94fe\u7684\u957f\u5ea6\uff09\uff0c\u4e2d\u592e\u5904\u7406\u5668 $(x_i,y_i,z_i)$ \u90fd\u80fd\u5411\u4e2d\u592e\u5904\u7406\u5668 $(x_{i+1},y_{i+1},z_{i+1})$ \u53d1\u9001\u6d88\u606f\uff0c\u90a3\u4e48\u6211\u4eec\u79f0\u4e2d\u592e\u5904\u7406\u5668 $(a,b,c)$ \u63a7\u5236\u4e2d\u592e\u5904\u7406\u5668 $(d,e,f)$\u3002\n  \n  \u6d77\u9f9f\u4eec\u975e\u5e38\u62c5\u5fc3\u8fd9\u4e9b\u5269\u4e0b\u7684\u4e2d\u592e\u5904\u7406\u5668\u4e92\u76f8\u4e4b\u95f4\u7684\u6d88\u606f\u53ef\u4f20\u9012\u6027\u3002\u56e0\u6b64\uff0c\u5b83\u4eec\u60f3\u77e5\u9053\u5173\u952e\u7684\u4e2d\u592e\u5904\u7406\u5668\u7684\u6570\u91cf\u3002\u5f53\u5173\u95ed\u4e2d\u592e\u5904\u7406\u5668 $(x,y,z)$ \u4f1a\u7834\u574f\u4e00\u4e9b\u63a7\u5236\u5173\u7cfb\u65f6\uff0c\u6211\u4eec\u5c31\u79f0\u8fd9\u4e2a\u4e2d\u592e\u5904\u7406\u5668 $(x,y,z)$ \u662f\u5173\u952e\u7684\u3002\u5982\uff0c\u5982\u679c\u5173\u95ed\u4e2d\u592e\u5904\u7406\u5668 $(x,y,z)$ \u4e4b\u540e\uff0c\u539f\u672c\u5904\u4e8e\u63a7\u5236\u5173\u7cfb\u7684\u4e2d\u592e\u5904\u7406\u5668 $(a,b,c)$ \u548c\u4e2d\u592e\u5904\u7406\u5668 $(d,e,f)$ \u53d8\u5f97\u4e0d\u63a7\u5236\u4e86\uff0c\u90a3\u4e48\u4e2d\u592e\u5904\u7406\u5668 $(x,y,z)$ \u662f\u4e00\u4e2a\u5173\u952e\u7684\u4e2d\u592e\u5904\u7406\u5668\u3002\n### \u8f93\u5165\u683c\u5f0f\n  \u7b2c\u4e00\u884c\u8f93\u5165\u8d85\u7ea7\u8ba1\u7b97\u673a\u7684\u89c4\u6a21 n\uff0cm\uff0ck\uff08$1\\leqslant n,m,k\\leqslant 100$\uff09\u3002\n  \n  \u63a5\u4e0b\u6765 n \u4e2a\u5757\uff0c\u5bf9\u5e94\u8d85\u7ea7\u8ba1\u7b97\u673a\u7684\u5c42\u6570\uff1b\n\u6bcf\u4e2a\u5757\u4e2d m \u884c\uff0c\u5bf9\u5e94\u8d85\u7ea7\u8ba1\u7b97\u673a\u7684\u884c\u6570\uff1b\u6bcf\u884c\u4e2d k \u4e2a\u6570\uff0c\u5bf9\u5e94\u8d85\u7ea7\u8ba1\u7b97\u673a\u7684\u5217\u6570\u3002\u201c1\u201d\u8868\u793a\u6b63\u5e38\u8fd0\u884c\u7684\u4e2d\u592e\u5904\u7406\u5668\uff0c\u201c0\u201d\u8868\u793a\u574f\u4e86\u7684\u4e2d\u592e\u5904\u7406\u5668\u3002\u6bcf\u4e24\u4e2a\u5757\u4e4b\u95f4\u7528\u7a7a\u884c\u9694\u5f00\u3002\n### \u8f93\u51fa\u683c\u5f0f\n  \u7b2c\u4e00\u884c\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u5173\u952e\u7684\u4e2d\u592e\u5904\u7406\u5668\u7684\u6570\u91cf\u3002"
}