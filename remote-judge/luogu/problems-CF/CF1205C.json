{
    "description": "This is an interactive problem\n\nYou are given a grid $ n\\times n $ , where $ n $ is odd. Rows are enumerated from $ 1 $ to $ n $ from up to down, columns are enumerated from $ 1 $ to $ n $ from left to right. Cell, standing on the intersection of row $ x $ and column $ y $ , is denoted by $ (x, y) $ .\n\nEvery cell contains $ 0 $ or $ 1 $ . It is known that the top-left cell contains $ 1 $ , and the bottom-right cell contains $ 0 $ .\n\nWe want to know numbers in all cells of the grid. To do so we can ask the following questions:\n\n\" $ ? $ $ x_1 $ $ y_1 $ $ x_2 $ $ y_2 $ \", where $ 1 \\le x_1 \\le x_2 \\le n $ , $ 1 \\le y_1 \\le y_2 \\le n $ , and $ x_1 + y_1 + 2 \\le x_2 + y_2 $ . In other words, we output two different cells $ (x_1, y_1) $ , $ (x_2, y_2) $ of the grid such that we can get from the first to the second by moving only to the right and down, and they aren't adjacent.\n\nAs a response to such question you will be told if there exists a path between $ (x_1, y_1) $ and $ (x_2, y_2) $ , going only to the right or down, numbers in cells of which form a palindrome.\n\nFor example, paths, shown in green, are palindromic, so answer for \" $ ? $ $ 1 $ $ 1 $ $ 2 $ $ 3 $ \" and \" $ ? $ $ 1 $ $ 2 $ $ 3 $ $ 3 $ \" would be that there exists such path. However, there is no palindromic path between $ (1, 1) $ and $ (3, 1) $ .\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1205C/b6805c57783550cbf5043011ffee37b4f451b7b2.png)Determine all cells of the grid by asking not more than $ n^2 $ questions. It can be shown that the answer always exists.",
    "inputFormat": "The first line contains odd integer ( $ 3 \\le n < 50 $ ) \u2014 the side of the grid.",
    "outputFormat": "You begin the interaction by reading $ n $ .\n\nTo ask a question about cells $ (x_1, y_1), (x_2, y_2) $ , in a separate line output \" $ ? $ $ x_1 $ $ y_1 $ $ x_2 $ $ y_2 $ \".\n\nNumbers in the query have to satisfy $ 1 \\le x_1 \\le x_2 \\le n $ , $ 1 \\le y_1 \\le y_2 \\le n $ , and $ x_1 + y_1 + 2 \\le x_2 + y_2 $ . Don't forget to 'flush', to get the answer.\n\nIn response, you will receive $ 1 $ , if there exists a path going from $ (x_1, y_1) $ to $ (x_2, y_2) $ only to the right or down, numbers in cells of which form a palindrome, and $ 0 $ otherwise.\n\nIn case your query is invalid or you asked more than $ n^2 $ queries, program will print $ -1 $ and will finish interaction. You will receive Wrong answer verdict. Make sure to exit immediately to avoid getting other verdicts.\n\nWhen you determine numbers in all cells, output \"!\".\n\nThen output $ n $ lines, the $ i $ -th of which is a string of length $ n $ , corresponding to numbers in the $ i $ -th row of the grid.\n\nAfter printing a query do not forget to output end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use:\n\n- fflush(stdout) or cout.flush() in C++;\n- System.out.flush() in Java;\n- flush(output) in Pascal;\n- stdout.flush() in Python;\n- see documentation for other languages.\n\nHack Format\n\nTo hack, use the following format.\n\nThe first line should contain a single odd integer $ n $ (side of your grid).\n\nThe $ i $ -th of $ n $ following lines should contain a string of length $ n $ corresponding to the $ i $ -th row of the grid. Top left element of the grid has to be equal to $ 1 $ , bottom right has to be equal to $ 0 $ .",
    "samples": [
        [
            "3\n0\n1\n0\n1\n1\n1\n1",
            "? 1 1 1 3\n? 1 1 2 3\n? 2 1 2 3\n? 3 1 3 3\n? 2 2 3 3\n? 1 2 3 2\n? 1 2 3 3\n!\n100\n001\n000"
        ]
    ],
    "hint": "",
    "translation": "\u6709\u4e00\u4e2a$n*n$\u7684\u77e9\u9635\uff08n\u4e3a\u5947\u6570\uff09\uff0c\u77e9\u9635\u5de6\u4e0a\u89d2\u4e3a1\uff0c\u53f3\u4e0b\u89d2\u4e3a0\uff0c\u6240\u6709\u5143\u7d20\u5747\u4e3a0\u62161\u3002\n\n\u4f7f\u7528\"$?~x_1~y_1~x_2~y_2$\"($1\\le{}x_1\\le{}x_2\\le{}n$,$1\\le{}y_1\\le{}y_2\\le{}n$,$x_1+y_1+2\\le{}x_2+y_2$)\u8be2\u95ee\u4ece($x_1,y_1$)\u5230($x_2,y_2$)\u662f\u5426\u5b58\u5728\u4e00\u6761\u4ec5\u5411\u4e0b\u6216\u5411\u53f3\u8d70\u7684\u56de\u6587\u8def\u5f84\u3002\u6700\u591a\u8be2\u95ee$n^2$\u6b21\u3002\n\n\u8f93\u51fa\u65f6\u9996\u5148\u8f93\u51fa'!',\u968f\u540e\u8f93\u51fa\u539f\u77e9\u9635\u3002\n\n"
}