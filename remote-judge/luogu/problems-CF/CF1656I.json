{
    "description": "Given an undirected graph $ G $ , we say that a neighbour ordering is an ordered list of all the neighbours of a vertex for each of the vertices of $ G $ . Consider a given neighbour ordering of $ G $ and three vertices $ u $ , $ v $ and $ w $ , such that $ v $ is a neighbor of $ u $ and $ w $ . We write $ u <_{v} w $ if $ u $ comes after $ w $ in $ v $ 's neighbor list.\n\nA neighbour ordering is said to be good if, for each simple cycle $ v_1, v_2, \\ldots, v_c $ of the graph, one of the following is satisfied:\n\n- $ v_1 <_{v_2} v_3, v_2 <_{v_3} v_4, \\ldots, v_{c-2} <_{v_{c-1}} v_c, v_{c-1} <_{v_c} v_1, v_c <_{v_1} v_2 $ .\n- $ v_1 >_{v_2} v_3, v_2 >_{v_3} v_4, \\ldots, v_{c-2} >_{v_{c-1}} v_c, v_{c-1} >_{v_c} v_1, v_c >_{v_1} v_2 $ .\n\nGiven a graph $ G $ , determine whether there exists a good neighbour ordering for it and construct one if it does.",
    "inputFormat": "The input consists of multiple test cases. The first line contains a single integer $ t $ ( $ 1 \\leq t \\leq 10^4 $ ) \u2014 the number of test cases. Description of the test cases follows.\n\nThe first line of each test case contains two integers $ n $ and $ m $ ( $ 2 \\leq n \\leq 3 \\cdot 10^5 $ , $ 1 \\leq m \\leq 3 \\cdot 10^5 $ ), the number of vertices and the number of edges of the graph.\n\nThe next $ m $ lines each contain two integers $ u, v $ ( $ 0 \\leq u, v < n $ ), denoting that there is an edge connecting vertices $ u $ and $ v $ . It is guaranteed that the graph is connected and there are no loops or multiple edges between the same vertices.\n\nThe sum of $ n $ and the sum of $ m $ for all test cases are at most $ 3 \\cdot 10^5 $ .",
    "outputFormat": "For each test case, output one line with YES if there is a good neighbour ordering, otherwise output one line with NO. You can print each letter in any case (upper or lower).\n\nIf the answer is YES, additionally output $ n $ lines describing a good neighbour ordering. In the $ i $ -th line, output the neighbours of vertex $ i $ in order.\n\nIf there are multiple good neigbour orderings, print any.",
    "samples": [
        [
            "3\n5 6\n0 1\n0 2\n1 2\n2 3\n3 4\n4 1\n2 1\n0 1\n6 10\n0 1\n2 0\n0 3\n0 4\n1 2\n1 4\n2 3\n2 5\n3 5\n4 5",
            "YES\n1 2 \n4 2 0 \n0 1 3 \n2 4 \n3 1 \nYES\n1 \n0 \nNO"
        ]
    ],
    "hint": ""
}