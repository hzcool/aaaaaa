{
    "description": "Two friends are travelling through Bubble galaxy. They say \"Hello!\" via signals to each other if their distance is smaller or equal than $ d_1 $ and\n\n- it's the first time they speak to each other or\n- at some point in time after their last talk their distance was greater than $ d_2 $ .\n\nWe need to calculate how many times friends said \"Hello!\" to each other. For $ N $ moments, you'll have an array of points for each friend representing their positions at that moment. A person can stay in the same position between two moments in time, but if a person made a move we assume this movement as movement with constant speed in constant direction.",
    "inputFormat": "The first line contains one integer number $ N $ ( $ 2 \\leq N \\leq 100\\,000 $ ) representing number of moments in which we captured positions for two friends.\n\nThe second line contains two integer numbers $ d_1 $ and $ d_2 \\ (0 < d_1 < d_2 < 1000) $ .\n\nThe next $ N $ lines contains four integer numbers $ A_x,A_y,B_x,B_y $ ( $ 0 \\leq A_x, A_y, B_x, B_y \\leq 1000 $ ) representing coordinates of friends A and B in each captured moment.",
    "outputFormat": "Output contains one integer number that represents how many times friends will say \"Hello!\" to each other.",
    "samples": [
        [
            "4\n2 5\n0 0 0 10\n5 5 5 6\n5 0 10 5\n14 7 10 5\n",
            "2\n"
        ]
    ],
    "hint": "![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1046I/e27c6b2c3cda43094716b6dff44da554e273a70e.png) Explanation: Friends should send signals 2 times to each other, first time around point $ A2 $ and $ B2 $ and second time during A's travel from point $ A3 $ to $ A4 $ while B stays in point $ B3=B4 $ .",
    "translation": "## **\u9898\u76ee\u63cf\u8ff0**\r\n\u4e24\u4e2a\u670b\u53cb\u6b63\u5728\u82ad\u6bd4\u661f\u7cfb\u65c5\u884c\u3002\u4ed6\u4eec\u8bf4\u201c\u4f60\u597d\u554a\uff01\u201d\u5982\u679c\u8ddd\u79bb\u5c0f\u4e8e\u6216\u7b49\u4e8ed1\u4e14\r\n\u00b7\u8fd9\u662f\u4ed6\u4eec\u7b2c\u4e00\u6b21\u4ea4\u8c08\uff0c\u6216\u8005\r\n\u00b7\u5728\u4ed6\u4eec\u4e0a\u6b21\u8c08\u8bdd\u540e\u7684\u67d0\u4e2a\u65f6\u95f4\u70b9\uff0c\u4ed6\u4eec\u7684\u8ddd\u79bb\u5927\u4e8ed2\u3002\r\n\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u670b\u53cb\u4eec\u8bf4\u201c\u4f60\u597d\u201d\u7684\u6b21\u6570\u3002\u5f7c\u6b64\u4e4b\u95f4\u3002\u5bf9\u4e8en\u4e2a\u65f6\u523b\uff0c\u60a8\u5c06\u4e3a\u6bcf\u4e2a\u670b\u53cb\u63d0\u4f9b\u4e00\u7ec4\u70b9\uff0c\u4ee3\u8868\u4ed6\u4eec\u5728\u90a3\u4e00\u65f6\u523b\u7684\u4f4d\u7f6e\u3002\u4e00\u4e2a\u4eba\u53ef\u4ee5\u5728\u4e24\u4e2a\u65f6\u523b\u4e4b\u95f4\u4fdd\u6301\u76f8\u540c\u7684\u4f4d\u7f6e\uff0c\u4f46\u662f\u5982\u679c\u4e00\u4e2a\u4eba\u79fb\u52a8\u4e86\uff0c\u6211\u4eec\u5047\u8bbe\u8fd9\u4e2a\u79fb\u52a8\u662f\u4ee5\u6052\u5b9a\u7684\u901f\u5ea6\u5728\u6052\u5b9a\u7684\u65b9\u5411\u4e0a\u79fb\u52a8\u3002\r\n## \u8f93\u5165\u8f93\u51fa\u683c\u5f0f\r\n\u8f93\u51fa\u5305\u542b\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u670b\u53cb\u5f7c\u6b64\u4e4b\u95f4\u4f1a\u8bf4\u201c\u4f60\u597d\u554a\uff01\u201d\u7684\u6b21\u6570\u3002"
}