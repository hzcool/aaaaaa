{
    "description": "You are given an array of $ n $ integers: $ a_1, a_2, \\ldots, a_n $ . Your task is to find some non-zero integer $ d $ ( $ -10^3 \\leq d \\leq 10^3 $ ) such that, after each number in the array is divided by $ d $ , the number of positive numbers that are presented in the array is greater than or equal to half of the array size (i.e., at least $ \\lceil\\frac{n}{2}\\rceil $ ). Note that those positive numbers do not need to be an integer (e.g., a $ 2.5 $ counts as a positive number). If there are multiple values of $ d $ that satisfy the condition, you may print any of them. In case that there is no such $ d $ , print a single integer $ 0 $ .\n\nRecall that $ \\lceil x \\rceil $ represents the smallest integer that is not less than $ x $ and that zero ( $ 0 $ ) is neither positive nor negative.",
    "inputFormat": "The first line contains one integer $ n $ ( $ 1 \\le n \\le 100 $ ) \u2014 the number of elements in the array.\n\nThe second line contains $ n $ space-separated integers $ a_1, a_2, \\ldots, a_n $ ( $ -10^3 \\le a_i \\le 10^3 $ ).",
    "outputFormat": "Print one integer $ d $ ( $ -10^3 \\leq d \\leq 10^3 $ and $ d \\neq 0 $ ) that satisfies the given condition. If there are multiple values of $ d $ that satisfy the condition, you may print any of them. In case that there is no such $ d $ , print a single integer $ 0 $ .",
    "samples": [
        [
            "5\n10 0 -7 2 6",
            "4"
        ],
        [
            "7\n0 0 1 -1 0 0 2\n",
            "0"
        ]
    ],
    "hint": "In the first sample, $ n = 5 $ , so we need at least $ \\lceil\\frac{5}{2}\\rceil = 3 $ positive numbers after division. If $ d = 4 $ , the array after division is $ [2.5, 0, -1.75, 0.5, 1.5] $ , in which there are $ 3 $ positive numbers (namely: $ 2.5 $ , $ 0.5 $ , and $ 1.5 $ ).\n\nIn the second sample, there is no valid $ d $ , so $ 0 $ should be printed.",
    "translation": "## \u9898\u76ee\u63cf\u8ff0\n\u6709\u4e00\u4e2a\u5305\u542bnnn\u4e2a\u6574\u6570\u7684\u6570\u7ec4,\u4f60\u9700\u8981\u627e\u5230\u4e00\u4e2a\u975e\u96f6\u6574\u6570$d(-10^3\\leq d \\leq 10^3)$\uff0c\u4f7f\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570\u7ec4\u9664\u4ee5d\u7684\u5546\u4e2d\u81f3\u5c11\u6709\u4e00\u534a\u4e3a\u6b63\u6570(\u5373\u81f3\u5c11\u6709$\\frac{n}{2}$\u4e2a)\u6ce8\u610f:\"\u6b63\u6570\"\u53ea\u8981\u6c42\u5546\u5927\u4e8e0,\u4e0d\u8981\u6c42\u4e00\u5b9a\u662f\u6574\u6570\u3002\u5982\u679c\u6709\u591a\u4e2a$d$\u6ee1\u8db3\u6761\u4ef6\uff0c\u8f93\u51fa\u5176\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a,\u5982\u679c\u6ca1\u6709\u8fd9\u6837\u7684$d$\u5219\u8f93\u51fa$0$\u3002\n## \u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n### \u8f93\u5165\u683c\u5f0f:\n\u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570$n$,\u8868\u793a\u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u6570\u91cf\n\u7b2c\u4e8c\u884c\u5305\u542b\u7531$n$\u4e2a\u6574\u6570,\u6570\u4e4b\u95f4\u7531\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\u3002$a_1,a_2,a_3,...,a_n(-10^3\\leq a_i \\leq 10^3)$\n### \u8f93\u51fa\u683c\u5f0f:\n\u4e00\u4e2a\u6ee1\u8db3\u9898\u76ee\u63cf\u8ff0\u7684\u6574\u6570$d(-10^3\\leq d \\leq 10^3,d \\neq 0)$,\u5982\u679c\u6709\u591a\u4e2a$d$\u6ee1\u8db3\u6761\u4ef6,\u4f60\u53ef\u4ee5\u6253\u5370\u5176\u4e2d\u4efb\u4f55\u4e00\u4e2a\u3002\u5982\u679c\u6ca1\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u6574\u6570$d$,\u8f93\u51fa0"
}