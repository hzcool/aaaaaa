{
    "description": "You have $ n $ gifts and you want to give all of them to children. Of course, you don't want to offend anyone, so all gifts should be equal between each other. The $ i $ -th gift consists of $ a_i $ candies and $ b_i $ oranges.\n\nDuring one move, you can choose some gift $ 1 \\le i \\le n $ and do one of the following operations:\n\n- eat exactly one candy from this gift (decrease $ a_i $ by one);\n- eat exactly one orange from this gift (decrease $ b_i $ by one);\n- eat exactly one candy and exactly one orange from this gift (decrease both $ a_i $ and $ b_i $ by one).\n\nOf course, you can not eat a candy or orange if it's not present in the gift (so neither $ a_i $ nor $ b_i $ can become less than zero).\n\nAs said above, all gifts should be equal. This means that after some sequence of moves the following two conditions should be satisfied: $ a_1 = a_2 = \\dots = a_n $ and $ b_1 = b_2 = \\dots       = b_n $ (and $ a_i $ equals $ b_i $ is not necessary).\n\nYour task is to find the minimum number of moves required to equalize all the given gifts.\n\nYou have to answer $ t $ independent test cases.",
    "inputFormat": "The first line of the input contains one integer $ t $ ( $ 1       \\le t \\le 1000 $ ) \u2014 the number of test cases. Then $ t $ test cases follow.\n\nThe first line of the test case contains one integer $ n $ ( $ 1 \\le n \\le 50 $ ) \u2014 the number of gifts. The second line of the test case contains $ n $ integers $ a_1, a_2, \\dots, a_n $ ( $ 1 \\le a_i \\le 10^9 $ ), where $ a_i $ is the number of candies in the $ i $ -th gift. The third line of the test case contains $ n $ integers $ b_1, b_2, \\dots, b_n $ ( $ 1 \\le b_i       \\le 10^9 $ ), where $ b_i $ is the number of oranges in the $ i $ -th gift.",
    "outputFormat": "For each test case, print one integer: the minimum number of moves required to equalize all the given gifts.",
    "samples": [
        [
            "5\n3\n3 5 6\n3 2 3\n5\n1 2 3 4 5\n5 4 3 2 1\n3\n1 1 1\n2 2 2\n6\n1 1000000000 1000000000 1000000000 1000000000 1000000000\n1 1 1 1 1 1\n3\n10 12 8\n7 5 4",
            "6\n16\n0\n4999999995\n7"
        ]
    ],
    "hint": "In the first test case of the example, we can perform the following sequence of moves:\n\n- choose the first gift and eat one orange from it, so $ a         = [3, 5, 6] $ and $ b = [2, 2, 3] $ ;\n- choose the second gift and eat one candy from it, so $ a =         [3, 4, 6] $ and $ b = [2, 2, 3] $ ;\n- choose the second gift and eat one candy from it, so $ a =         [3, 3, 6] $ and $ b = [2, 2, 3] $ ;\n- choose the third gift and eat one candy and one orange from it, so $ a = [3, 3, 5] $ and $ b = [2, 2, 2] $ ;\n- choose the third gift and eat one candy from it, so $ a =         [3, 3, 4] $ and $ b = [2, 2, 2] $ ;\n- choose the third gift and eat one candy from it, so $ a =         [3, 3, 3] $ and $ b = [2, 2, 2] $ .",
    "translation": "\u7ed9\u5b9a\u957f\u5ea6\u540c\u4e3a $n$ \u7684\u6570\u7ec4 $a$ \u548c\u6570\u7ec4 $b$\uff0c\u6bcf\u6b21\u4f60\u53ef\u4ee5\u8fdb\u884c\u4ee5\u4e0b\u64cd\u4f5c\u4e4b\u4e00\uff08$1\\le i\\le n$\uff09\uff1a\n\n1. $a_i \\gets a_i-1$\n2. $b_i \\gets b_i -1$\n3. \u540c\u65f6\u8fdb\u884c $a_i \\gets a_i-1$ \u548c $b_i \\gets b_i -1$\n\n\u5f53\u7136 $a$ \u548c $b$ \u59cb\u7ec8\u6ee1\u8db3 $a_i,b_i\\ge 0$\u3002\u73b0\u5728\u8981\u6c42\u7ecf\u8fc7\u82e5\u5e72\u6b21\u64cd\u4f5c\u540e\u4f7f\u5f97 $a_1 = a_2 = \\cdots a_n$ \u5e76\u4e14 $b_1 = b_2 = \\cdots b_n$\uff0c\u4e0d\u4e00\u5b9a\u9700\u8981 $a_i=b_i$\u3002\u6c42\u51fa\u6700\u5c11\u7684\u64cd\u4f5c\u6b21\u6570\u3002\n\n\u8f93\u5165\uff1a$t$ \u7ec4\u6570\u636e\uff08$1\\le t\\le 1000$\uff09\uff0c\u6bcf\u7ec4\u6570\u636e\u5305\u62ec\uff1a\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570 $n$\uff08$1\\le n\\le 50$\uff09\uff0c\u7b2c\u4e8c\u884c $n$ \u4e2a\u6570\uff0c\u7b2c $i$ \u4e2a\u6570\u8868\u793a $a_i$\uff08$1\\le a_i\\le 10^9$\uff09\uff0c\u7b2c\u4e09\u884c $n$ \u4e2a\u6570\uff0c\u7b2c $i$ \u4e2a\u6570\u8868\u793a $b_i$\uff08$1\\le b_i\\le 10^9$\uff09\u3002\n\n\u8f93\u51fa\uff1a\u5bf9\u4e8e\u6bcf\u7ec4\u6570\u636e\uff0c\u8f93\u51fa\u6700\u5c11\u7684\u64cd\u4f5c\u6b21\u6570\u3002"
}