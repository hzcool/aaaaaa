{
    "description": "Daemon Targaryen decided to stop looking like a Metin2 character. He turned himself into the most beautiful thing, a bracket sequence.\n\nFor a bracket sequence, we can do two kind of operations:\n\n- Select one of its substrings $ ^\\dagger $ and cyclic shift it to the right. For example, after a cyclic shift to the right, \"(())\" will become \")(()\";\n- Insert any bracket, opening '(' or closing ')', wherever you want in the sequence.\n\nWe define the cost of a bracket sequence as the minimum number of such operations to make it balanced $ ^\\ddagger $ .\n\nGiven a bracket sequence $ s $ of length $ n $ , find the sum of costs across all its $ \\frac{n(n+1)}{2} $ non-empty substrings. Note that for each substring we calculate the cost independently.\n\n $ ^\\dagger $ A string $ a $ is a substring of a string $ b $ if $ a $ can be obtained from $ b $ by deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end.\n\n $ ^\\ddagger $ A sequence of brackets is called balanced if one can turn it into a valid math expression by adding characters $ + $ and $ 1 $ . For example, sequences \"(())()\", \"()\", and \"(()(()))\" are balanced, while \")(\", \"(()\", and \"(()))(\" are not.",
    "inputFormat": "Each test consists of multiple test cases. The first line contains a single integer $ t $ ( $ 1 \\leq t \\leq 10^5 $ ) \u2014 the number of test cases. The description of test cases follows.\n\nThe first line of each test case contains a single integer $ n $ ( $ 1 \\le n \\le 2 \\cdot 10^5 $ ) \u2014 the length of the bracket sequence.\n\nThe second line of each test case contains a string $ s $ , consisting only of characters '(' and ')', of length $ n $ \u2014 the bracket sequence.\n\nIt is guaranteed that sum of $ n $ across all test cases does not exceed $ 2 \\cdot 10^5 $ .",
    "outputFormat": "For each test case, print a single integer \u2014 the sum of costs of all substrings of $ s $ .",
    "samples": [
        [
            "5\n1\n)\n4\n)()(\n3\n())\n5\n(((((\n10\n)(())))())",
            "1\n9\n6\n35\n112"
        ]
    ],
    "hint": "In the first test case, there is the only substring \")\". Its cost is $ 1 $ because we can insert '(' to the beginning of this substring and get a string \"()\", that is a balanced string.\n\nIn the second test case, the cost of each substring of length one is $ 1 $ . The cost of a substring \")(\" is $ 1 $ because we can cyclically shift it to right and get a string \"()\". The cost of strings \")()\" and \"()(\" is $ 1 $ because its enough to insert one bracket to each of them. The cost of substring \")()(\" is $ 1 $ because we can cyclically shift it to right and get a string \"()()\". So there are $ 4 + 2 + 2 + 1 = 9 $ substring of cost $ 1 $ and $ 1 $ substring of cost $ 0 $ . So the sum of the costs is $ 9 $ .\n\nIn the third test case,\n\n- \"(\", the cost is $ 1 $ ;\n- \"()\", the cost is $ 0 $ ;\n- \"())\", the cost is $ 1 $ ;\n- \")\", the cost is $ 1 $ ;\n- \"))\", the cost is $ 2 $ ;\n- \")\", the cost is $ 1 $ .\n\nSo the sum of the costs is $ 6 $ .",
    "translation": "\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u62ec\u53f7\u5e8f\u5217\u3002\n\n\u6211\u4eec\u80fd\u5bf9\u4e00\u4e2a\u62ec\u53f7\u5e8f\u5217\u505a\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\n- \u9009\u62e9\u4e00\u4e2a**\u5b50\u4e32**\uff0c\u5c06\u5176\u5faa\u73af\u53f3\u79fb\u4e00\u4f4d\u3002\u6bd4\u5982\uff0c`(())` \u5faa\u73af\u53f3\u79fb\u4e00\u4f4d\u4e4b\u540e\u53d8\u4e3a `)(()`\u3002\n- \u5728\u62ec\u53f7\u5e8f\u5217\u7684**\u4efb\u610f\u4f4d\u7f6e**\u52a0\u4e00\u4e2a\u5de6\u62ec\u53f7\u6216\u53f3\u62ec\u53f7\u3002\n\n\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u62ec\u53f7\u5e8f\u5217\u7684\u4ee3\u4ef7\u4e3a\u80fd\u5c06\u5176\u53d8\u4e3a**\u5339\u914d\u5e8f\u5217**\u7684\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\u3002\n\n\u6c42\u8fd9\u4e2a\u62ec\u53f7\u5e8f\u5217\u6240\u6709 $\\frac{n(n+1)}{2}$ \u4e2a**\u5b50\u4e32\u7684\u4ee3\u4ef7\u4e4b\u548c**\u3002\uff08\u5b50\u4e32\u4e92\u76f8\u72ec\u7acb\uff09\n\n\u591a\u7ec4\u6570\u636e\u3002$n\\le 2\\times 10^5$\u3002"
}