{
    "description": "The Smart Beaver from ABBYY plans a space travel on an ultramodern spaceship. During the voyage he plans to visit $ n $ planets. For planet $ i $ $ a_{i} $ is the maximum number of suitcases that an alien tourist is allowed to bring to the planet, and $ b_{i} $ is the number of citizens on the planet.\n\nThe Smart Beaver is going to bring some presents from ABBYY to the planets he will be visiting. The presents are packed in suitcases, $ x $ presents in each. The Beaver will take to the ship exactly $ a_{1}+...+a_{n} $ suitcases.\n\nAs the Beaver lands on the $ i $ -th planet, he takes $ a_{i} $ suitcases and goes out. On the first day on the planet the Beaver takes a walk and gets to know the citizens. On the second and all subsequent days the Beaver gives presents to the citizens \u2014 each of the $ b_{i} $ citizens gets one present per day. The Beaver leaves the planet in the evening of the day when the number of presents left is strictly less than the number of citizens (i.e. as soon as he won't be able to give away the proper number of presents the next day). He leaves the remaining presents at the hotel.\n\nThe Beaver is going to spend exactly $ c $ days traveling. The time spent on flights between the planets is considered to be zero. In how many ways can one choose the positive integer $ x $ so that the planned voyage will take exactly $ c $ days?",
    "inputFormat": "The first input line contains space-separated integers $ n $ and $ c $ \u2014 the number of planets that the Beaver is going to visit and the number of days he is going to spend traveling, correspondingly.\n\nThe next $ n $ lines contain pairs of space-separated integers $ a_{i},b_{i} $ ( $ 1<=i<=n $ ) \u2014 the number of suitcases he can bring to the $ i $ -th planet and the number of citizens of the $ i $ -th planet, correspondingly.\n\nThe input limitations for getting 30 points are:\n\n- $ 1<=n<=100 $\n- $ 1<=a_{i}<=100 $\n- $ 1<=b_{i}<=100 $\n- $ 1<=c<=100 $\n\nThe input limitations for getting 100 points are:\n\n- $ 1<=n<=10^{4} $\n- $ 0<=a_{i}<=10^{9} $\n- $ 1<=b_{i}<=10^{9} $\n- $ 1<=c<=10^{9} $\n\nDue to possible overflow, it is recommended to use the 64-bit arithmetic. In some solutions even the 64-bit arithmetic can overflow. So be careful in calculations!",
    "outputFormat": "Print a single number $ k $ \u2014 the number of ways to choose $ x $ so as to travel for exactly $ c $ days. If there are infinitely many possible values of $ x $ , print -1.\n\nPlease do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams or the %I64d specifier.",
    "samples": [
        [
            "2 5\n1 5\n2 4\n",
            "1\n"
        ]
    ],
    "hint": "In the first example there is only one suitable value $ x=5 $ . Then the Beaver takes 1 suitcase with 5 presents to the first planet. Here he spends 2 days: he hangs around on the first day, and he gives away five presents on the second day. He takes 2 suitcases with 10 presents to the second planet. Here he spends 3 days \u2014 he gives away 4 presents on the second and the third days and leaves the remaining 2 presents at the hotel. In total, the Beaver spends 5 days traveling.\n\nFor $ x=4 $ or less the Beaver won't have enough presents for the second day on the first planet, so the voyage will end too soon. For $ x=6 $ and more the Beaver will spend at least one more day on the second planet, and the voyage will take too long.",
    "translation": "## \u9898\u76ee\u63cf\u8ff0\n\u6765\u81eaABBYY\u661f\u7403\u7684\u667a\u80fd\u6d77\u72f8\u8ba1\u5212\u5728\u4e00\u8258\u8d85\u73b0\u4ee3\u5b87\u5b99\u98de\u8239\u4e0a\u8fdb\u884c\u592a\u7a7a\u65c5\u884c\u3002\u5728\u822a\u884c\u671f\u95f4\uff0c\u4ed6\u8ba1\u5212\u8bbf\u95ee $n$ \u4e2a\u884c\u661f\u3002\u5bf9\u4e8e\u884c\u661f $i$ \uff0c $a_{i}$ \u662f\u5916\u661f\u6e38\u5ba2\u88ab\u5141\u8bb8\u5e26\u5230\u8be5\u661f\u7403\u7684\u6700\u5927\u884c\u674e\u7bb1\u6570\u91cf\uff0c $b_{i}$ \u662f\u8be5\u661f\u7403\u4e0a\u7684\u516c\u6c11\u4eba\u6570\u3002\n\n\u806a\u660e\u7684\u6d77\u72f8\u5c06\u628aABBYY\u4e0a\u7684\u4e00\u4e9b\u793c\u7269\u5e26\u5230\u4ed6\u5c06\u8981\u8bbf\u95ee\u7684\u884c\u661f\u4e0a\u3002\u793c\u7269\u88c5\u5728\u884c\u674e\u7bb1\u91cc\uff0c\u6bcf\u4e2a\u884c\u674e\u7bb1\u4e2d $x$ \u4e2a\u3002\u6d77\u72f8\u5c06\u5e26\u5230\u8239\u4e0a\u6070\u597d $a_{1}+\\dots+a_{n}$ \u4e2a\u624b\u63d0\u7bb1\u3002\n\n\u5f53\u6d77\u72f8\u964d\u843d\u5728\u7b2c $i$ \u4e2a\u661f\u7403\uff0c\u4ed6\u5c06\u5e26\u7740 $a_{i}$ \u4e2a\u624b\u63d0\u7bb1\u51fa\u95e8\u3002\u5728\u8be5\u661f\u7403\u4e0a\u7684\u7b2c\u4e00\u5929\uff0c\u6d77\u72f8\u4f1a\u53bb\u6563\u6b65\u4ee5\u4e86\u89e3\u516c\u6c11\u3002\u5728\u7b2c\u4e8c\u5929\u548c\u968f\u540e\u7684\u6240\u6709\u65e5\u5b50\u91cc\uff0c\u6d77\u72f8\u90fd\u4f1a\u5411\u516c\u6c11\u8d60\u9001\u793c\u7269\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u516c\u6c11\u6bcf\u5929\u83b7\u5f97\u4e00\u4efd\u793c\u7269\u3002\u6d77\u72f8\u5728\u7b2c\u4e00\u4e2a\u6ee1\u8db3\u7559\u4e0b\u7684\u793c\u7269\u6570\u91cf\u4e25\u683c\u5c11\u4e8e\u516c\u6c11\u6570\u91cf\u90a3\u4e2a\u665a\u4e0a\u79bb\u5f00\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u4e00\u5929\u665a\u4e0a\u4ed6\u53d1\u73b0\u7559\u4e0b\u7684\u793c\u7269\u6570\u91cf\u4e0d\u8db3\u4ee5\u8ba9\u4ed6\u7b2c\u4e8c\u5929\u7ed9\u6bcf\u4e2a\u516c\u6c11\u4e00\u4efd\u793c\u7269\u7684\u90a3\u4e2a\u665a\u4e0a\u79bb\u5f00\u3002\u4ed6\u4f1a\u628a\u5269\u4e0b\u7684\u793c\u7269\u7559\u5728\u9152\u5e97\u3002\n\n\u6d77\u72f8\u60f3\u77e5\u9053\uff0c\u4ed6\u53ef\u4ee5\u9009\u62e9\u51e0\u4e2a $x$ \uff0c\u4f7f\u5f97\u4ed6\u5c06\u82b1\u8d39\u6070\u597d $c$ \u5929\u65c5\u884c\u3002\uff08\u5728\u884c\u661f\u4e4b\u95f4\u7684\u98de\u884c\u4e2d\u82b1\u8d39\u7684\u65f6\u95f4\u88ab\u8ba4\u4e3a\u662f\u96f6\uff09\n## \u8f93\u5165\u683c\u5f0f\n\u7b2c\u4e00\u884c\u8f93\u5165\u5305\u542b\u7a7a\u683c\u5206\u9694\u7684\u6574\u6570 $n$ \u548c $c$ \u2014\u2014\u6d77\u72f8\u5c06\u8981\u8bbf\u95ee\u7684\u884c\u661f \u6570\u91cf\u4ee5\u53ca\u4ed6\u5c06\u82b1\u8d39\u65c5\u884c\u7684\u5929\u6570\u3002\u4e0b $n$ \u884c\u6bcf\u884c\u5305\u542b\u4e00\u5bf9\u4ee5\u7a7a\u683c\u5206\u9694\u7684\u6574\u6570$a_{i},b_{i}$ $(1\\le i\\le n\uff09$ \u2014\u2014 \u4ed6\u6700\u591a\u53ef\u4ee5\u643a\u5e26\u7684\u884c\u674e\u7bb1\u6570\u91cf\u4ee5\u53ca\u8be5\u661f\u7403\u4e0a\u7684\u516c\u6c11\u4eba\u6570\n## \u8f93\u51fa\u683c\u5f0f\n\u6253\u5370\u5355\u4e2a\u6570\u5b57 $k$ \u2014\u2014 \u9009\u62e9\u65b9\u5f0f\u7684\u6570\u91cf\u3002\u5982\u679c $x$ \u6709\u65e0\u9650\u591a\u4e2a\u53ef\u80fd\u7684\u503c\uff0c\u8bf7\u6253\u5370`-1`\u3002\n## \u8f93\u5165\u8f93\u51fa\u6837\u4f8b\n**\u8f93\u5165 $#1$**\n```\n2 5\n1 5\n2 4\n```\n**\u8f93\u51fa #1**\n```\n1\n```\n## \u8bf4\u660e/\u63d0\u793a\n#### \u6837\u4f8b\u89e3\u91ca\n\u5728\u7b2c\u4e00\u4e2a\u793a\u4f8b\u4e2d\uff0c\u53ea\u6709\u4e00\u4e2a\u5408\u9002\u7684\u503c\uff08$x=5$\uff09\u3002\u6d77\u72f8\u5148\u5e26\u77401\u4e2a\u624b\u63d0\u7bb1\u548c5\u4e2a\u793c\u7269\u53bb\u7b2c\u4e00\u4e2a\u661f\u7403\u3002\u5728\u8fd9\u91cc\uff0c\u4ed6\u82b1\u4e862\u5929\u65f6\u95f4\uff1a\u7b2c\u4e00\u5929\u4ed6\u95f2\u901b\uff0c\u7b2c\u4e8c\u5929\u9001\u51fa\u4e94\u4ef6\u793c\u7269\u3002\u4ed6\u63a5\u7740\u5e26\u77402\u4e2a\u624b\u63d0\u7bb1\u548c10\u4ef6\u793c\u7269\u6765\u5230\u7b2c\u4e8c\u4e2a\u661f\u7403\u3002\u5728\u8fd9\u91cc\uff0c\u4ed6\u82b1\u4e863\u5929 - \u4ed6\u5728\u7b2c\u4e8c\u5929\u548c\u7b2c\u4e09\u5929\u9001\u51fa4\u4efd\u793c\u7269\uff0c\u5e76\u5c06\u5269\u4f59\u76842\u4efd\u793c\u7269\u7559\u5728\u9152\u5e97\u3002\u6d77\u72f8\u603b\u5171\u82b1\u4e865\u5929\u65f6\u95f4\u65c5\u884c\u3002\u5982\u679c $x=4$ \u6216\u8005\u66f4\u5c11,\u6d77\u72f8\u5728\u7b2c\u4e00\u9897\u884c\u661f\u4e0a\u7684\u7b2c\u4e8c\u5929\u6ca1\u6709\u8db3\u591f\u7684\u793c\u7269\uff0c\u6240\u4ee5\u822a\u884c\u4f1a\u7ed3\u675f\u5f97\u592a\u5feb\u3002\u5982\u679c $x=6$ \u6216\u66f4\u591a\uff0c\u7684\u6d77\u72f8\u5c06\u5728\u7b2c\u4e8c\u9897\u884c\u661f\u4e0a\u81f3\u5c11\u518d\u5446\u4e00\u5929\uff0c\u822a\u884c\u5c06\u82b1\u8d39\u592a\u957f\u65f6\u95f4\u3002\n#### \u90e8\u5206\u5206\n- \u5bf9\u4e8e $30\\%$ \u7684\u6570\u636e\uff0c$1\\le n\\le 100$\uff0c$1\\le a_{i},b_{i},c \\le 100$\n- \u5bf9\u4e8e $100\\%$ \u7684\u6570\u636e\uff0c$1\\le n\\le 10^{4}$\uff0c$1\\le a_{i},b_{i},c \\le 10^{9}$\n#### \u6e29\u99a8\u63d0\u793a\n\u7531\u4e8e 32 \u4f4d\u6574\u6570\u53ef\u80fd\u4f1a\u6ea2\u51fa\uff0c\u5efa\u8bae\u4f7f\u7528 64 \u4f4d\u7b97\u672f\u3002\u5728\u67d0\u4e9b\u89e3\u51b3\u65b9\u6848\u4e2d\uff0c\u751a\u81f3 64 \u4f4d\u7b97\u672f\u4e5f\u53ef\u80fd\u6ea2\u51fa\u3002\u6240\u4ee5\u5728\u8ba1\u7b97\u65f6\u8981\u5c0f\u5fc3\uff01\u53e6\u5916\uff0c\u5728`C++`\u4e2d,\u8bf7\u4e0d\u8981\u4f7f\u7528 `%lld` \u8bf4\u660e\u7b26\u8bfb\u53d6\u6216\u5199\u5165 64 \u4f4d\u6574\u6570\u3002\u6700\u597d\u4f7f\u7528 `cin`\u3001`cout` \u6d41\u6216 `%I64d` \u8bf4\u660e\u7b26\u3002\n\n\u611f\u8c22@[\u6211\u4e0d\u662f\u7ba1\u7406\u5458](/user/398726)\u63d0\u4f9b\u7ffb\u8bd1"
}