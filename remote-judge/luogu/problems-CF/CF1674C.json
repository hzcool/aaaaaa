{
    "description": "You are given a string $ s $ , consisting only of Latin letters 'a', and a string $ t $ , consisting of lowercase Latin letters.\n\nIn one move, you can replace any letter 'a' in the string $ s $ with a string $ t $ . Note that after the replacement string $ s $ might contain letters other than 'a'.\n\nYou can perform an arbitrary number of moves (including zero). How many different strings can you obtain? Print the number, or report that it is infinitely large.\n\nTwo strings are considered different if they have different length, or they differ at some index.",
    "inputFormat": "The first line contains a single integer $ q $ ( $ 1 \\le q \\le 10^4 $ ) \u2014 the number of testcases.\n\nThe first line of each testcase contains a non-empty string $ s $ , consisting only of Latin letters 'a'. The length of $ s $ doesn't exceed $ 50 $ .\n\nThe second line contains a non-empty string $ t $ , consisting of lowercase Latin letters. The length of $ t $ doesn't exceed $ 50 $ .",
    "outputFormat": "For each testcase, print the number of different strings $ s $ that can be obtained after an arbitrary amount of moves (including zero). If the number is infinitely large, print -1. Otherwise, print the number.",
    "samples": [
        [
            "3\naaaa\na\naa\nabc\na\nb",
            "1\n-1\n2"
        ]
    ],
    "hint": "In the first example, you can replace any letter 'a' with the string \"a\", but that won't change the string. So no matter how many moves you make, you can't obtain a string other than the initial one.\n\nIn the second example, you can replace the second letter 'a' with \"abc\". String $ s $ becomes equal to \"aabc\". Then the second letter 'a' again. String $ s $ becomes equal to \"aabcbc\". And so on, generating infinitely many different strings.\n\nIn the third example, you can either leave string $ s $ as is, performing zero moves, or replace the only 'a' with \"b\". String $ s $ becomes equal to \"b\", so you can't perform more moves on it.",
    "translation": "\u7ed9\u4e00\u4e2a\u53ea\u542b\u5c0f\u5199\u5b57\u6bcd `a` \u7684\u5b57\u7b26\u4e32 $s$ \u548c\u4e00\u4e2a\u7528\u6765\u66ff\u6362\u7684\u5b57\u7b26\u4e32 $t$ \u3002\n\n\u4f60\u53ef\u4ee5\u5c06 $s$ \u4e2d\u4efb\u610f**\u4e00\u4e2a**\u5b57\u6bcd `a` \u7528 $t$ \u6765\u66ff\u6362\uff0c\u66ff\u6362\u7684\u6b21\u6570\u4e0d\u9650\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $s$ \u548c $t$ \uff0c\u4f60\u53ef\u4ee5\u5f97\u5230\u51e0\u4e2a\u4e0d\u540c\u7684\u5b57\u7b26\u4e32\uff1f\u5982\u679c\u6709\u65e0\u9650\u4e2a\uff0c\u8f93\u51fa `-1` \u3002"
}