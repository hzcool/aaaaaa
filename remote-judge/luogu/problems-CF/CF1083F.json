{
    "description": "The Fair Nut has two arrays $ a $ and $ b $ , consisting of $ n $ numbers. He found them so long ago that no one knows when they came to him.\n\nThe Fair Nut often changes numbers in his arrays. He also is interested in how similar $ a $ and $ b $ are after every modification.\n\nLet's denote similarity of two arrays as the minimum number of operations to apply to make arrays equal (every operation can be applied for both arrays). If it is impossible, similarity will be equal $ -1 $ .\n\nPer one operation you can choose a subarray with length $ k $ ( $ k $ is fixed), and change every element $ a_i $ , which belongs to the chosen subarray, to $ a_i \\oplus x $ ( $ x $ can be chosen), where $ \\oplus $ denotes the [bitwise XOR operation](https://en.wikipedia.org/wiki/Bitwise_operation#XOR).\n\nNut has already calculated the similarity of the arrays after every modification. Can you do it?\n\nNote that you just need to calculate those values, that is you do not need to apply any operations.",
    "inputFormat": "The first line contains three numbers $ n $ , $ k $ and $ q $ ( $ 1 \\le k \\le n \\le 2 \\cdot 10^5 $ , $ 0 \\le q \\le 2 \\cdot 10^5 $ ) \u2014 the length of the arrays, the length of the subarrays, to which the operations are applied, and the number of queries.\n\nThe second line contains $ n $ integers $ a_1, a_2, \\ldots, a_n $ ( $ 0 \\le a_i < 2^{14} $ ) \u2014 elements of array $ a $ .\n\nThe third line contains $ n $ integers $ b_1, b_2, \\ldots, b_n $ ( $ 0 \\le b_i < 2^{14} $ ) \u2014 elements of array $ b $ .\n\nEach of the next $ q $ lines describes query and contains string $ s $ and two integers $ p $ and $ v $ ( $ 1 \\le p \\le n $ , $ 0 \\le v < 2^{14} $ ) \u2014 array, which this query changes (\u00aba\u00bb or \u00abb\u00bb without quotes), index of changing element and its new value.",
    "outputFormat": "On the first line print initial similarity of arrays $ a $ and $ b $ .\n\nOn the $ i $ -th of following $ q $ lines print similarity of $ a $ and $ b $ after applying first $ i $ modifications.",
    "samples": [
        [
            "3 3 1\n0 4 2\n1 2 3\nb 2 5\n",
            "-1\n1\n"
        ],
        [
            "3 2 2\n1 3 2\n0 0 0\na 1 0\nb 1 1\n",
            "2\n-1\n2\n"
        ]
    ],
    "hint": "In the first sample making arrays $ [0, 4, 2] $ and $ [1, 2, 3] $ is impossible with $ k=3 $ . After the modification, you can apply the operation with $ x=1 $ to the whole first array (its length is equal to $ k $ ), and it will be equal to the second array.\n\nIn order to make arrays equal in the second sample before changes, you can apply operations with $ x=1 $ on subarray $ [1, 2] $ of $ a $ and with $ x=2 $ on subarray $ [2, 3] $ of $ b $ .\n\nAfter all queries arrays will be equal $ [0, 3, 2] $ and $ [1, 0, 0] $ . The same operations make them equal $ [1, 2, 2] $ .",
    "translation": "\u5bf9\u4e8e\u4e24\u4e2a\u7b49\u957f\u7684\u975e\u8d1f\u6574\u6570\u5e8f\u5217\uff0c\u6211\u4eec\u5b9a\u4e49\u8fd9\u4e24\u4e2a\u5e8f\u5217\u7684\u76f8\u4f3c\u5ea6\u4e3a\u5c06\u5176\u4e2d\u4e00\u4e2a\u5e8f\u5217\u8f6c\u5316\u4e3a\u53e6\u4e00\u4e2a\u5e8f\u5217\u6240\u9700\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u3002\u4e00\u6b21\u64cd\u4f5c\u5b9a\u4e49\u5982\u4e0b\uff1a\r\n\r\n- \u9009\u62e9\u5e8f\u5217\u4e2d\u7684\u4e00\u4e2a\u957f\u5ea6\u4e3a $k$ \u7684\u5b50\u6bb5\uff0c\u5c06\u5b50\u6bb5\u5185\u7684\u6240\u6709\u5143\u7d20\u5f02\u6216\u4e0a\u4e00\u4e2a\u76f8\u540c\u7684\u503c $x$\uff0c$x$ \u53ef\u4ee5\u4efb\u610f\u51b3\u5b9a\u3002\r\n\r\n\u4f8b\u5982\uff0c\u5f53 $k = 2$ \u65f6\uff0c\u5c06\u5e8f\u5217 $\\{0, 0, 0\\}$ \u7684\u5b50\u6bb5 $[1, 2]$ \u5185\u7684\u6240\u6709\u5143\u7d20\u5f02\u6216\u4e0a $1$ \u5f97\u5230\u5e8f\u5217 $\\{1, 1, 0\\}$\uff0c\u4e4b\u540e\u5c06\u5b50\u6bb5 $[2, 3]$ \u5185\u7684\u6240\u6709\u5143\u7d20\u5f02\u6216\u4e0a $2$ \u5f97\u5230\u5e8f\u5217 $\\{1, 3, 2\\}$\uff0c\u56e0\u6b64\u5e8f\u5217 $\\{0, 0, 0\\}$ \u4e0e\u5e8f\u5217 $\\{1, 3, 2\\}$ \u7684\u76f8\u4f3c\u5ea6\u4e3a $2$\u3002\r\n\r\n\u7279\u6b8a\u5730\uff0c\u82e5\u5176\u4e2d\u4e00\u4e2a\u5e8f\u5217\u65e0\u8bba\u5982\u4f55\u90fd\u4e0d\u80fd\u8f6c\u5316\u5230\u53e6\u4e00\u4e2a\u5e8f\u5217\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u5e8f\u5217\u7684\u76f8\u4f3c\u5ea6\u4e3a $-1$\u3002\r\n\r\n\u7ed9\u5b9a\u4e24\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $\\{a_i\\}$ \u4e0e $\\{b_i\\}$\uff0c\u4f60\u9700\u8981\u6c42\u51fa\u5b83\u4eec\u7684\u76f8\u4f3c\u5ea6\u3002\u8fd9\u4e4b\u540e\uff0c\u5c06\u4f1a\u6709 $q$ \u6b21\u4fee\u6539\u64cd\u4f5c\uff0c\u5355\u6b21\u64cd\u4f5c\u683c\u5f0f\u5982\u4e0b\uff1a\r\n\r\n- `s p v`\uff1a\u5176\u4e2d\uff0c$s$ \u662f\u4e00\u4e2a\u5c0f\u5199\u5b57\u7b26\uff0c\u4e14\u8981\u4e48\u4e3a `a`\uff0c\u8981\u4e48\u4e3a `b`\u3002\u82e5 $s =$ `a`\uff0c\u5219\u8868\u660e\u5c06 $a_p$ \u7684\u503c\u4fee\u6539\u4e3a $v$\uff1b\u82e5 $s =$ `b`\uff0c\u5219\u8868\u660e\u5c06 $b_p$ \u7684\u503c\u4fee\u6539\u4e3a $v$\u3002\r\n\r\n\u5728\u6bcf\u4e00\u6b21\u4fee\u6539\u64cd\u4f5c\u7ed3\u675f\u540e\uff0c\u4f60\u4e5f\u9700\u8981\u6c42\u51fa\u4e24\u4e2a\u5e8f\u5217\u7684\u76f8\u4f3c\u5ea6\u3002\u8f93\u51fa\u6700\u5f00\u59cb\u53ca\u6bcf\u6b21\u4fee\u6539\u540e\u7684\u7b54\u6848\u3002\r\n\r\n$1 \\leq k \\leq n \\leq 2 \\times 10^5, 0 \\leq q \\leq 2 \\times 10^5, 1 \\leq p \\leq n, 0 \\leq a_i, b_i, v < 2^{14}$\uff0c\u8f93\u5165\u4fdd\u8bc1\u7ed9\u51fa\u7684\u4e24\u4e2a\u5e8f\u5217\u957f\u5ea6\u5747\u4e3a $n$\u3002"
}