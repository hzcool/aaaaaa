{
    "description": "Alice and Bob play a game. Alice has $ n $ cards, the $ i $ -th of them has the integer $ a_i $ written on it. Bob has $ m $ cards, the $ j $ -th of them has the integer $ b_j $ written on it.\n\nOn the first turn of the game, the first player chooses one of his/her cards and puts it on the table (plays it). On the second turn, the second player chooses one of his/her cards such that the integer on it is greater than the integer on the card played on the first turn, and plays it. On the third turn, the first player chooses one of his/her cards such that the integer on it is greater than the integer on the card played on the second turn, and plays it, and so on \u2014 the players take turns, and each player has to choose one of his/her cards with greater integer than the card played by the other player on the last turn.\n\nIf some player cannot make a turn, he/she loses.\n\nFor example, if Alice has $ 4 $ cards with numbers $ [10, 5, 3, 8] $ , and Bob has $ 3 $ cards with numbers $ [6, 11, 6] $ , the game may go as follows:\n\n- Alice can choose any of her cards. She chooses the card with integer $ 5 $ and plays it.\n- Bob can choose any of his cards with number greater than $ 5 $ . He chooses a card with integer $ 6 $ and plays it.\n- Alice can choose any of her cards with number greater than $ 6 $ . She chooses the card with integer $ 10 $ and plays it.\n- Bob can choose any of his cards with number greater than $ 10 $ . He chooses a card with integer $ 11 $ and plays it.\n- Alice can choose any of her cards with number greater than $ 11 $ , but she has no such cards, so she loses.\n\nBoth Alice and Bob play optimally (if a player is able to win the game no matter how the other player plays, the former player will definitely win the game).\n\nYou have to answer two questions:\n\n- who wins if Alice is the first player?\n- who wins if Bob is the first player?",
    "inputFormat": "The first line contains one integer $ t $ ( $ 1 \\le t \\le 1000 $ ) \u2014 the number of test cases. Each test case consists of four lines.\n\nThe first line of a test case contains one integer $ n $ ( $ 1 \\le n \\le 50 $ ) \u2014 the number of cards Alice has.\n\nThe second line contains $ n $ integers $ a_1, a_2, \\dots, a_n $ ( $ 1 \\le a_i \\le 50 $ ) \u2014 the numbers written on the cards that Alice has.\n\nThe third line contains one integer $ m $ ( $ 1 \\le m \\le 50 $ ) \u2014 the number of Bob's cards.\n\nThe fourth line contains $ m $ integers $ b_1, b_2, \\dots, b_m $ ( $ 1 \\le b_i \\le 50 $ ) \u2014 the numbers on Bob's cards.",
    "outputFormat": "For each test case, print two lines. The first line should be Alice if Alice wins when she is the first player; otherwise, the first line should be Bob. The second line should contain the name of the winner if Bob is the first player, in the same format.",
    "samples": [
        [
            "4\n1\n6\n2\n6 8\n4\n1 3 3 7\n2\n4 2\n1\n50\n2\n25 50\n10\n1 2 3 4 5 6 7 8 9 10\n2\n5 15",
            "Bob\nBob\nAlice\nAlice\nAlice\nBob\nBob\nBob"
        ]
    ],
    "hint": "Let's consider the first test case of the example.\n\nAlice has one card with integer $ 6 $ , Bob has two cards with numbers $ [6, 8] $ .\n\nIf Alice is the first player, she has to play the card with number $ 6 $ . Bob then has to play the card with number $ 8 $ . Alice has no cards left, so she loses.\n\nIf Bob is the first player, then no matter which of his cards he chooses on the first turn, Alice won't be able to play her card on the second turn, so she will lose.",
    "translation": "### \u9898\u76ee\u63cf\u8ff0\n\n\u7231\u4e3d\u4e1d\u548c\u9c8d\u52c3\u4e00\u8d77\u73a9\u4e00\u4e2a\u7eb8\u724c\u6e38\u620f\uff0c\u7231\u4e3d\u4e1d\u6709$n$\u5f20\u724c\uff0c\u9c8d\u52c3\u6709$m$\u5f20\u724c\uff0c\u6bcf\u5f20\u724c\u4e0a\u6709\u4e00\u4e2a\u6570\u503c\u3002\n\n\u5728\u6e38\u620f\u7684\u7b2c\u4e00\u56de\u5408\uff0c\u7531\u4efb\u610f\u4e00\u65b9\u73a9\u5bb6\u5148\u624b\u6253\u51fa\u624b\u4e2d\u7684\u4efb\u610f\u4e00\u5f20\u724c\uff0c\u7136\u540e\u53e6\u4e00\u4e2a\u73a9\u5bb6\u9700\u4ece\u624b\u4e2d\u7684\u724c\u4e2d\u6253\u51fa\u6570\u503c\u4e00\u5f20\u6bd4\u6b64\u73a9\u5bb6\u6253\u51fa\u7684\u724c\u66f4\u5927\u7684\u724c\uff0c\u82e5\u5728\u67d0\u4e00\u56de\u5408\uff0c\u67d0\u65b9\u65e0\u6cd5\u6253\u51fa\uff0c\u5219\u89c6\u4e3a\u6b64\u65b9\u8f93\u6389\u6e38\u620f\u3002\n\n\u4f8b\u5982\uff1a\u7231\u4e3d\u4e1d\u7684\u624b\u724c\u662f$[10,5,3,8]$\uff0c\u9c8d\u52c3\u7684\u624b\u724c\u662f$[6,11,6]$\uff0c\u4e3e\u4e2a\u6817\u5b50\uff0c\u6e38\u620f\u8fc7\u7a0b\u53ef\u80fd\u5982\u4e0b\uff1a\n\n- \u7231\u4e3d\u4e1d\u9009\u62e9\u5361\u724c$5$\u5e76\u6253\u51fa\u5b83\u3002\n\n- \u9c8d\u52c3\u9009\u62e9\u5361\u724c$6$\u5e76\u6253\u51fa\u5b83\u3002\n\n- \u7231\u4e3d\u4e1d\u9009\u62e9\u5361\u724c$10$\u5e76\u6253\u51fa\u5b83\u3002\n\n- \u9c8d\u52c3\u9009\u62e9\u5361\u724c11\u5e76\u6253\u51fa\u5b83\u3002\n\n- \u7231\u4e3d\u4e1d\u53ef\u4ee5\u9009\u62e9\u5979\u7684\u4efb\u4f55\u5361\u724c\uff0c\u4f7f\u5176\u6570\u5b57\u5927\u4e8e$11$\uff0c\u4f46\u5979\u6ca1\u6709\u8fd9\u6837\u7684\u724c\uff0c\u6240\u4ee5\u5979\u8f93\u4e86\u3002\n\n\u73b0\u5728\uff0c\u9898\u76ee\u8981\u6c42\u4f60\u56de\u7b54\u4e24\u4e2a\u95ee\u9898\uff1a\n\n$1.$\u5982\u679c\u7231\u4e3d\u4e1d\u662f\u5148\u624b\u73a9\u5bb6\uff0c\u8c01\u8d62\u4e86\uff1f\n\n$2.$\u5982\u679c\u9c8d\u52c3\u662f\u5148\u624b\u73a9\u5bb6\uff0c\u8c01\u8d62\u4e86\uff1f\n\n\n### \u8f93\u5165\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570$t(1\\leqslant t \\leqslant1000)$\uff0c\u8868\u793a\u6d4b\u8bd5\u6837\u4f8b\u7684\u6570\u91cf\u3002\n\n\u6bcf\u7ec4\u6d4b\u8bd5\u6837\u4f8b\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570$n(1\\leqslant n \\leqslant50)$\uff0c\u8868\u793a\u7231\u4e3d\u4e1d\u62e5\u6709\u5361\u724c\u7684\u6570\u91cf\u3002\n\n\u7b2c\u4e8c\u884c$n$\u4e2a\u6574\u6570$a_i(1\\leqslant a_i \\leqslant50)$\uff0c\u8868\u793a\u7231\u4e3d\u4e1d\u7684\u624b\u724c\u4e0a\u7684\u6574\u6570\u3002\n\n\u7b2c\u4e09\u884c\u4e00\u4e2a\u6574\u6570$m(1\\leqslant m \\leqslant50)$\uff0c\u8868\u793a\u9c8d\u52c3\u62e5\u6709\u5361\u724c\u7684\u6570\u91cf\u3002\n\n\u7b2c\u56db\u884c$m$\u4e2a\u6574\u6570$b_i(1\\leqslant b_i \\leqslant50)$\uff0c\u8868\u793a\u9c8d\u52c3\u7684\u624b\u724c\u4e0a\u7684\u6574\u6570\u3002\n\n### \u8f93\u51fa\u683c\u5f0f\n\n\u6bcf\u7ec4\u6d4b\u8bd5\u6837\u4f8b\u8f93\u51fa\u4e24\u884c\uff0c\u5206\u522b\u8868\u793a\u95ee\u9898$1,2$\u7684\u7b54\u6848\u3002\n\nTranslated by Code_AC\n2022.5.31"
}