{
    "description": "There is a fence in front of Polycarpus's home. The fence consists of $ n $ planks of the same width which go one after another from left to right. The height of the $ i $ -th plank is $ h_{i} $ meters, distinct planks can have distinct heights.\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF363B/89891f9a8aa0dbd268db12cc4f373a8fc8629b6b.png)Fence for $ n=7 $ and $ h=[1,2,6,1,1,7,1] $ Polycarpus has bought a posh piano and is thinking about how to get it into the house. In order to carry out his plan, he needs to take exactly $ k $ consecutive planks from the fence. Higher planks are harder to tear off the fence, so Polycarpus wants to find such $ k $ consecutive planks that the sum of their heights is minimal possible.\n\nWrite the program that finds the indexes of $ k $ consecutive planks with minimal total height. Pay attention, the fence is not around Polycarpus's home, it is in front of home (in other words, the fence isn't cyclic).",
    "inputFormat": "The first line of the input contains integers $ n $ and $ k $ ( $ 1<=n<=1.5\u00b710^{5},1<=k<=n $ ) \u2014 the number of planks in the fence and the width of the hole for the piano. The second line contains the sequence of integers $ h_{1},h_{2},...,h_{n} $ ( $ 1<=h_{i}<=100 $ ), where $ h_{i} $ is the height of the $ i $ -th plank of the fence.",
    "outputFormat": "Print such integer $ j $ that the sum of the heights of planks $ j $ , $ j+1 $ , ..., $ j+k-1 $ is the minimum possible. If there are multiple such $ j $ 's, print any of them.",
    "samples": [
        [
            "7 3\n1 2 6 1 1 7 1\n",
            "3\n"
        ]
    ],
    "hint": "In the sample, your task is to find three consecutive planks with the minimum sum of heights. In the given case three planks with indexes 3, 4 and 5 have the required attribute, their total height is 8.",
    "translation": "\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a$n$\u7684\u5e8f\u5217$h$,\u73b0\u5728,\u7ed9\u5b9a\u4e00\u4e2a$k$,\u8981\u6c42\u4f60\u5728\u6240\u6709\u957f\u5ea6\u4e3a$k$\u7684\u533a\u95f4\u4e2d\u9009\u53d6\u4e00\u4e2a\u4f7f\u5f97\u5b83\u7684\u533a\u95f4\u548c\u5c3d\u53ef\u80fd\u5c0f,\u8f93\u51fa\u8fd9\u4e2a\u533a\u95f4\u7684\u8d77\u59cb\u4f4d\u7f6e.\u5982\u679c\u6709\u591a\u4e2a\u6ee1\u8db3\u8981\u6c42\u7684\u533a\u95f4,\u8f93\u51fa\u4efb\u610f\u4e00\u4e2a\u5373\u53ef."
}