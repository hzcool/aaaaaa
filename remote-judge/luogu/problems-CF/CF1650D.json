{
    "description": "Petya got an array $ a $ of numbers from $ 1 $ to $ n $ , where $ a[i]=i $ .\n\nHe performed $ n $ operations sequentially. In the end, he received a new state of the $ a $ array.\n\nAt the $ i $ -th operation, Petya chose the first $ i $ elements of the array and cyclically shifted them to the right an arbitrary number of times (elements with indexes $ i+1 $ and more remain in their places). One cyclic shift to the right is such a transformation that the array $ a=[a_1, a_2, \\dots, a_n] $ becomes equal to the array $ a = [a_i, a_1, a_2, \\dots, a_{i-2}, a_{i-1}, a_{i+1}, a_{i+2}, \\dots, a_n] $ .\n\nFor example, if $ a = [5,4,2,1,3] $ and $ i=3 $ (that is, this is the third operation), then as a result of this operation, he could get any of these three arrays:\n\n- $ a = [5,4,2,1,3] $ (makes $ 0 $ cyclic shifts, or any number that is divisible by $ 3 $ );\n- $ a = [2,5,4,1,3] $ (makes $ 1 $ cyclic shift, or any number that has a remainder of $ 1 $ when divided by $ 3 $ );\n- $ a = [4,2,5,1,3] $ (makes $ 2 $ cyclic shifts, or any number that has a remainder of $ 2 $ when divided by $ 3 $ ).\n\nLet's look at an example. Let $ n=6 $ , i.e. initially $ a=[1,2,3,4,5,6] $ . A possible scenario is described below.\n\n- $ i=1 $ : no matter how many cyclic shifts Petya makes, the array $ a $ does not change.\n- $ i=2 $ : let's say Petya decided to make a $ 1 $ cyclic shift, then the array will look like $ a = [\\textbf{2}, \\textbf{1}, 3, 4, 5, 6] $ .\n- $ i=3 $ : let's say Petya decided to make $ 1 $ cyclic shift, then the array will look like $ a = [\\textbf{3}, \\textbf{2}, \\textbf{1}, 4, 5, 6] $ .\n- $ i=4 $ : let's say Petya decided to make $ 2 $ cyclic shifts, the original array will look like $ a = [\\textbf{1}, \\textbf{4}, \\textbf{3}, \\textbf{2}, 5, 6] $ .\n- $ i=5 $ : let's say Petya decided to make $ 0 $ cyclic shifts, then the array won't change.\n- $ i=6 $ : let's say Petya decided to make $ 4 $ cyclic shifts, the array will look like $ a = [\\textbf{3}, \\textbf{2}, \\textbf{5}, \\textbf{6}, \\textbf{1}, \\textbf{4}] $ .\n\nYou are given a final array state $ a $ after all $ n $ operations. Determine if there is a way to perform the operation that produces this result. In this case, if an answer exists, print the numbers of cyclical shifts that occurred during each of the $ n $ operations.",
    "inputFormat": "The first line of the input contains an integer $ t $ ( $ 1 \\le t \\le 500 $ ) \u2014 the number of test cases in the test.\n\nThe descriptions of the test cases follow.\n\nThe first line of the description of each test case contains one integer $ n $ ( $ 2 \\le n \\le 2\\cdot10^3 $ ) \u2014 the length of the array $ a $ .\n\nThe next line contains the final state of the array $ a $ : $ n $ integers $ a_1, a_2, \\dots, a_n $ ( $ 1 \\le a_i \\le n $ ) are written. All $ a_i $ are distinct.\n\nIt is guaranteed that the sum of $ n $ values over all test cases does not exceed $ 2\\cdot10^3 $ .",
    "outputFormat": "For each test case, print the answer on a separate line.\n\nPrint -1 if the given final value $ a $ cannot be obtained by performing an arbitrary number of cyclic shifts on each operation. Otherwise, print $ n $ non-negative integers $ d_1, d_2, \\dots, d_n $ ( $ d_i \\ge 0 $ ), where $ d_i $ means that during the $ i $ -th operation the first $ i $ elements of the array were cyclic shifted to the right $ d_i $ times.\n\nIf there are several possible answers, print the one where the total number of shifts is minimal (that is, the sum of $ d_i $ values is the smallest). If there are several such answers, print any of them.",
    "samples": [
        [
            "3\n6\n3 2 5 6 1 4\n3\n3 1 2\n8\n5 8 1 3 2 6 4 7",
            "0 1 1 2 0 4 \n0 0 1 \n0 1 2 0 2 5 6 2"
        ]
    ],
    "hint": "The first test case matches the example from the statement.\n\nThe second set of input data is simple. Note that the answer $ [3, 2, 1] $ also gives the same permutation, but since the total number of shifts $ 3+2+1 $ is greater than $ 0+0+1 $ , this answer is not correct.",
    "translation": "\u4f60\u6709\u4e00\u4e2a $1\\sim n$ \u7684\u6392\u5217 $a$\uff0c\u6700\u5f00\u59cb\u65f6 $a_i=i$\uff0c\u4f60\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u6392\u5217 $a$ \u6267\u884c $n$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u6307\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570 $x$ \uff0c\u7b2c $i$ \u6b21\u65f6\u5c06 $a_1\\sim a_i$ \u4e2d\u7684\u6bcf\u4e2a\u6570 $a_j$ \u53d8\u6210 $a_{j+x\\bmod i}$\u3002\n\n\u73b0\u5728\u544a\u8bc9\u4f60 $n$ \u6b21\u64cd\u4f5c\u5b8c\u6210\u540e\u7684\u6392\u5217 $a$\uff0c\u8bf7\u4f60\u8fd8\u539f\u51fa\u6bcf\u8f6e\u9009\u62e9\u7684 $x$ \u7684\u503c\u3002\n\n\u6570\u636e\u8303\u56f4\u4fdd\u8bc1\uff1a$n\\le2\\times 10^3$\u3002\n\n\u7ffb\u8bd1\u63d0\u4f9b\u8005\uff1a@DaiRuiChen007"
}