{
    "description": "Malek has recently found a treasure map. While he was looking for a treasure he found a locked door. There was a string $ s $ written on the door consisting of characters '(', ')' and '\\#'. Below there was a manual on how to open the door. After spending a long time Malek managed to decode the manual and found out that the goal is to replace each '\\#' with one or more ')' characters so that the final string becomes beautiful.\n\nBelow there was also written that a string is called beautiful if for each $ i $ ( $ 1<=i<=|s| $ ) there are no more ')' characters than '(' characters among the first $ i $ characters of $ s $ and also the total number of '(' characters is equal to the total number of ')' characters.\n\nHelp Malek open the door by telling him for each '\\#' character how many ')' characters he must replace it with.",
    "inputFormat": "Malek has recently found a treasure map. While he was looking for a treasure he found a locked door. There was a string $ s $ written on the door consisting of characters '(', ')' and '\\#'. Below there was a manual on how to open the door. After spending a long time Malek managed to decode the manual and found out that the goal is to replace each '\\#' with one or more ')' characters so that the final string becomes beautiful.\n\nBelow there was also written that a string is called beautiful if for each $ i $ ( $ 1<=i<=|s| $ ) there are no more ')' characters than '(' characters among the first $ i $ characters of $ s $ and also the total number of '(' characters is equal to the total number of ')' characters.\n\nHelp Malek open the door by telling him for each '\\#' character how many ')' characters he must replace it with.",
    "outputFormat": "Malek has recently found a treasure map. While he was looking for a treasure he found a locked door. There was a string $ s $ written on the door consisting of characters '(', ')' and '\\#'. Below there was a manual on how to open the door. After spending a long time Malek managed to decode the manual and found out that the goal is to replace each '\\#' with one or more ')' characters so that the final string becomes beautiful.\n\nBelow there was also written that a string is called beautiful if for each $ i $ ( $ 1<=i<=|s| $ ) there are no more ')' characters than '(' characters among the first $ i $ characters of $ s $ and also the total number of '(' characters is equal to the total number of ')' characters.\n\nHelp Malek open the door by telling him for each '\\#' character how many ')' characters he must replace it with.",
    "samples": [
        [
            "(((#)((#)\n",
            "1\n2\n"
        ],
        [
            "()((#((#(#()\n",
            "2\n2\n1"
        ],
        [
            "#\n",
            "-1\n"
        ],
        [
            "(#)\n",
            "-1\n"
        ]
    ],
    "hint": " $ |s| $ denotes the length of the string $ s $ .",
    "translation": "\u5f97\u4f60\u4e00\u4e2a\u5305\u542b\"(\"\u548c\"#\"\u7684\u5e8f\u5217\uff0c'#'\u9700\u8981\u8f6c\u6362\u4e3ak\u4e2a\u53f3\u62ec\u53f7 ( k > 0 )\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u62ec\u53f7\u80fd\u5426\u5728\u4f60\u8f6c\u5316\u540e\u5339\u914d\uff0c\u5982\u679c\u53ef\u4ee5\uff0c\u8f93\u51fa\u6bcf\u4e00\u4e2a'#'\u8f6c\u5316\u7684\u53f3\u62ec\u53f7\u6570 k \u7684\u503c\uff1b\u5982\u679c\u4e0d\u80fd\uff0c\u5c31\u8f93\u51fa \u22121\n\n\u53ef\u80fd\u6709\u5f88\u591a\u7ec4\u6ee1\u8db3\u7684\u60c5\u51b5\u53ea\u9700\u8f93\u51fa\u4e00\u7ec4\u5373\u53ef ~~Special Judge \u4e07\u5c81~~"
}