{
    "description": "The robot is placed in the top left corner of a grid, consisting of $ n $ rows and $ m $ columns, in a cell $ (1, 1) $ .\n\nIn one step, it can move into a cell, adjacent by a side to the current one:\n\n- $ (x, y) \\rightarrow (x, y + 1) $ ;\n- $ (x, y) \\rightarrow (x + 1, y) $ ;\n- $ (x, y) \\rightarrow (x, y - 1) $ ;\n- $ (x, y) \\rightarrow (x - 1, y) $ .\n\nThe robot can't move outside the grid.\n\nThe cell $ (s_x, s_y) $ contains a deadly laser. If the robot comes into some cell that has distance less than or equal to $ d $ to the laser, it gets evaporated. The distance between two cells $ (x_1, y_1) $ and $ (x_2, y_2) $ is $ |x_1 - x_2| + |y_1 - y_2| $ .\n\nPrint the smallest number of steps that the robot can take to reach the cell $ (n, m) $ without getting evaporated or moving outside the grid. If it's not possible to reach the cell $ (n, m) $ , print -1.\n\nThe laser is neither in the starting cell, nor in the ending cell. The starting cell always has distance greater than $ d $ to the laser.",
    "inputFormat": "The first line contains a single integer $ t $ ( $ 1 \\le t \\le 10^4 $ ) \u2014 the number of testcases.\n\nThe only line of each testcase contains five integers $ n, m, s_x, s_y, d $ ( $ 2 \\le n, m \\le 1000 $ ; $ 1 \\le s_x \\le n $ ; $ 1 \\le s_y \\le m $ ; $ 0 \\le d \\le n + m $ ) \u2014 the size of the grid, the cell that contains the laser and the evaporating distance of the laser.\n\nThe laser is neither in the starting cell, nor in the ending cell ( $ (s_x, s_y) \\neq (1, 1) $ and $ (s_x, s_y) \\neq (n, m) $ ). The starting cell $ (1, 1) $ always has distance greater than $ d $ to the laser ( $ |s_x - 1| + |s_y - 1| > d $ ).",
    "outputFormat": "For each testcase, print a single integer. If it's possible to reach the cell $ (n, m) $ from $ (1, 1) $ without getting evaporated or moving outside the grid, then print the smallest amount of steps it can take the robot to reach it. Otherwise, print -1.",
    "samples": [
        [
            "3\n2 3 1 3 0\n2 3 1 3 1\n5 5 3 4 1",
            "3\n-1\n8"
        ]
    ],
    "hint": "",
    "translation": "# Deadly Laser\n\n## \u9898\u76ee\u63cf\u8ff0\n\nThe robot is placed in the top left corner of a grid, consisting of $ n $ rows and $ m $ columns, in a cell $ (1, 1) $ .\n\nIn one step, it can move into a cell, adjacent by a side to the current one:\n\n- $ (x, y) \\rightarrow (x, y + 1) $ ;\n- $ (x, y) \\rightarrow (x + 1, y) $ ;\n- $ (x, y) \\rightarrow (x, y - 1) $ ;\n- $ (x, y) \\rightarrow (x - 1, y) $ .\n\nThe robot can't move outside the grid.\n\nThe cell $ (s_x, s_y) $ contains a deadly laser. If the robot comes into some cell that has distance less than or equal to $ d $ to the laser, it gets evaporated. The distance between two cells $ (x_1, y_1) $ and $ (x_2, y_2) $ is $ |x_1 - x_2| + |y_1 - y_2| $ .\n\nPrint the smallest number of steps that the robot can take to reach the cell $ (n, m) $ without getting evaporated or moving outside the grid. If it's not possible to reach the cell $ (n, m) $ , print -1.\n\nThe laser is neither in the starting cell, nor in the ending cell. The starting cell always has distance greater than $ d $ to the laser.\n\n## \u8f93\u5165\u683c\u5f0f\n\nThe first line contains a single integer $ t $ ( $ 1 \\le t \\le 10^4 $ ) \u2014 the number of testcases.\n\nThe only line of each testcase contains five integers $ n, m, s_x, s_y, d $ ( $ 2 \\le n, m \\le 1000 $ ; $ 1 \\le s_x \\le n $ ; $ 1 \\le s_y \\le m $ ; $ 0 \\le d \\le n + m $ ) \u2014 the size of the grid, the cell that contains the laser and the evaporating distance of the laser.\n\nThe laser is neither in the starting cell, nor in the ending cell ( $ (s_x, s_y) \\neq (1, 1) $ and $ (s_x, s_y) \\neq (n, m) $ ). The starting cell $ (1, 1) $ always has distance greater than $ d $ to the laser ( $ |s_x - 1| + |s_y - 1| > d $ ).\n\n## \u8f93\u51fa\u683c\u5f0f\n\nFor each testcase, print a single integer. If it's possible to reach the cell $ (n, m) $ from $ (1, 1) $ without getting evaporated or moving outside the grid, then print the smallest amount of steps it can take the robot to reach it. Otherwise, print -1.\n\n# \u4e2d\u6587\u7ffb\u8bd1\n## \u9898\u76ee\u63cf\u8ff0\n\u6709\u4e00\u4e2a\u957f$n$\u5bbd$m$\u7684\u7f51\u683c\uff0c\u4e00\u4e2a\u673a\u5668\u4eba\u88ab\u653e\u5728\u6b64\u7f51\u683c\u7684\u5de6\u4e0a\u89d2$(1,1)$\u3002\n\u6bcf\u4e00\u6b65\uff0c\u673a\u5668\u4eba\u53ef\u4ee5\u79fb\u52a8\u5230\u4e0e\u5176\u6240\u5728\u683c\u5b50\u76f8\u90bb\u7684\u56db\u4e2a\u683c\u5b50\uff1a\n- $(x,y) \\rightarrow (x,y+1)$;\n- $(x,y) \\rightarrow (x+1,y)$;\n- $(x,y) \\rightarrow (x,y-1)$;\n- $(x,y) \\rightarrow (x-1,y)$\u3002\n\n\u673a\u5668\u4eba\u4e0d\u80fd\u79fb\u51fa\u7f51\u683c\u3002\\\n\u5728$(s_x,s_y)$\u5904\uff0c\u653e\u7f6e\u7740\u81f4\u547d\u7684\u6fc0\u5149\u3002\u6240\u6709\u4e0e\u6fc0\u5149\u6240\u5728\u683c\u5b50\u7684\u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8e$d$\u7684\u683c\u5b50\u90fd\u4e0d\u53ef\u901a\u884c\u3002\uff08$(x_1,y_1)$\u5230$(x_2,y_2)$\u7684\u8ddd\u79bb\u4e3a: $|x_1-x_2|+|y_1-y_2|$\uff09\\\n\u8f93\u51fa\u673a\u5668\u4eba\u4ece$(1,1)$\u79fb\u81f3$(n,m)$\u7684\u6700\u5c0f\u6b65\u6570\u3002\u5982\u679c\u673a\u5668\u4eba\u4e0d\u80fd\u5230\u8fbe$(n,m)$\uff0c\u8f93\u51fa`-1`\u3002\n\n## \u8f93\u5165\u683c\u5f0f\n\u7b2c\u4e00\u884c\u4e3a\u4e00\u4e2a\u6574\u6570$t$($1\\leq t\\leq 10^4$)\uff0c\u4ee3\u8868\u6d4b\u8bd5\u6570\u636e\u7684\u6570\u91cf\u3002\\\n\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u6d4b\u8bd5\u6570\u636e\uff0c\u53ea\u6709\u4e00\u884c\u8f93\u5165\uff0c\u5305\u542b5\u4e2a\u6574\u6570\uff1a$n$, $m$, $s_x$, $s_y$, $d$ ($2\\leq n,m\\leq 1000$; $1\\leq s_x \\leq n$; $1\\leq s_y \\leq m$; $0\\leq d\\leq n+m$)\uff0c\u5176\u610f\u4e49\u4e0e\u4e0a\u65b9\u76f8\u540c\u3002\\\n\u8f93\u5165\u6570\u636e\u4fdd\u8bc1\u6fc0\u5149\u65e2\u4e0d\u5728\u8d77\u70b9\u7684\u683c\u5b50\uff0c\u4e5f\u4e0d\u5728\u7ec8\u70b9\u7684\u683c\u5b50\uff1b\u4fdd\u8bc1\u8d77\u70b9\u7684\u683c\u5b50\u53ef\u4ee5\u901a\u884c\u3002\uff08$(s_x,s_y)\\neq(1,1)$; $(s_x,s_y)\\neq(n,m)$; $|s_x-1|+|s_y-1|>d$\uff09\n\n## \u8f93\u51fa\u683c\u5f0f\n\u5bf9\u4e8e\u6bcf\u7ec4\u6d4b\u8bd5\u6570\u636e\uff0c\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\u3002\u5982\u679c\u673a\u5668\u4eba\u53ef\u4ee5\u8fbe\u5230\u7ec8\u70b9\uff0c\u8f93\u51fa\u5230\u8fbe\u7ec8\u70b9\u6240\u9700\u7684\u6700\u5c0f\u6b65\u6570\u3002\u5426\u5219\uff0c\u8f93\u51fa`-1`\n\n## \u8f93\u5165\u8f93\u51fa\u6837\u4f8b\n### \u6837\u4f8b\u8f93\u5165\n```\n3\n2 3 1 3 0\n2 3 1 3 1\n5 5 3 4 1\n```\n### \u6837\u4f8b\u8f93\u51fa\n```\n3\n-1\n8\n```"
}