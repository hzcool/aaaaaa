{
    "description": "Your friend recently gave you some slimes for your birthday. You have $ n $ slimes all initially with value $ 1 $ .\n\nYou are going to play a game with these slimes. Initially, you put a single slime by itself in a row. Then, you will add the other $ n-1 $ slimes one by one. When you add a slime, you place it at the right of all already placed slimes. Then, while the last two slimes in the row have the same value $ v $ , you combine them together to create a slime with value $ v+1 $ .\n\nYou would like to see what the final state of the row is after you've added all $ n $ slimes. Please print the values of the slimes in the row from left to right.",
    "inputFormat": "The first line of the input will contain a single integer, $ n $ ( $ 1<=n<=100000 $ ).",
    "outputFormat": "Output a single line with $ k $ integers, where $ k $ is the number of slimes in the row after you've finished the procedure described in the problem statement. The $ i $ -th of these numbers should be the value of the $ i $ -th slime from the left.",
    "samples": [
        [
            "1\n",
            "1\n"
        ],
        [
            "2\n",
            "2\n"
        ],
        [
            "3\n",
            "2 1\n"
        ],
        [
            "8\n",
            "4\n"
        ]
    ],
    "hint": "In the first sample, we only have a single slime with value $ 1 $ . The final state of the board is just a single slime with value $ 1 $ .\n\nIn the second sample, we perform the following steps:\n\nInitially we place a single slime in a row by itself. Thus, row is initially 1.\n\nThen, we will add another slime. The row is now 1 1. Since two rightmost slimes have the same values, we should replace these slimes with one with value $ 2 $ . Thus, the final state of the board is 2.\n\nIn the third sample, after adding the first two slimes, our row is 2. After adding one more slime, the row becomes 2 1.\n\nIn the last sample, the steps look as follows:\n\n1. 1\n2. 2\n3. 2 1\n4. 3\n5. 3 1\n6. 3 2\n7. 3 2 1\n8. 4",
    "translation": "\u670b\u53cb\u5728\u4f60\u751f\u65e5\u7684\u65f6\u5019\u9001\u4e86\u4f60n\u53ea\u53f2\u83b1\u59c6\u3002\u73b0\u5728\u4f60\u8ddf\u53f2\u83b1\u59c6\u73a9\u2642\u6e38\u2642\u620f\uff1a\u6bcf\u53ea\u53f2\u83b1\u59c6\u6709\u521d\u59cb\u503c1\uff0c\u9996\u5148\u653e\u4e00\u53ea\u53f2\u83b1\u59c6\uff0c\u7136\u540e\u5728\u5b83\u7684\u53f3\u8fb9\u653e\u5269\u4e0b\u7684\u53f2\u83b1\u59c6\uff0c\u4e24\u4e2a\u503c\u90fd\u4e3an\u7684\u53f2\u83b1\u59c6\u53ef\u4ee5\u5408\u5e76\u6210\u4e00\u4e2a\u503c\u4e3an+1\u7684\u53f2\u83b1\u59c6\u3002\u8f93\u5165n\uff0c\u8f93\u51fa\u6700\u540e\u53f2\u83b1\u59c6\u7684\u6392\u5e03\u60c5\u51b5\u3002"
}