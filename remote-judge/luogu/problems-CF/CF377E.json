{
    "description": "Kostya is playing the computer game Cookie Clicker. The goal of this game is to gather cookies. You can get cookies using different buildings: you can just click a special field on the screen and get the cookies for the clicks, you can buy a cookie factory, an alchemy lab, a time machine and it all will bring lots and lots of cookies.\n\nAt the beginning of the game (time 0), Kostya has 0 cookies and no buildings. He has $ n $ available buildings to choose from: the $ i $ -th building is worth $ c_{i} $ cookies and when it's built it brings $ v_{i} $ cookies at the end of each second. Also, to make the game more interesting to play, Kostya decided to add a limit: at each moment of time, he can use only one building. Of course, he can change the active building each second at his discretion.\n\nIt's important that Kostya is playing a version of the game where he can buy new buildings and change active building only at time moments that are multiples of one second. Kostya can buy new building and use it at the same time. If Kostya starts to use a building at the time moment $ t $ , he can get the first profit from it only at the time moment $ t+1 $ .\n\nKostya wants to earn at least $ s $ cookies as quickly as possible. Determine the number of seconds he needs to do that.",
    "inputFormat": "The first line contains two integers $ n $ and $ s $ ( $ 1<=n<=2\u00b710^{5} $ , $ 1<=s<=10^{16} $ ) \u2014 the number of buildings in the game and the number of cookies Kostya wants to earn.\n\nEach of the next $ n $ lines contains two integers $ v_{i} $ and $ c_{i} $ ( $ 1<=v_{i}<=10^{8} $ , $ 0<=c_{i}<=10^{8} $ ) \u2014 the number of cookies the $ i $ -th building brings per second and the building's price.",
    "outputFormat": "Output the only integer \u2014 the minimum number of seconds Kostya needs to earn at least $ s $ cookies. It is guaranteed that he can do it.",
    "samples": [
        [
            "3 9\n1 0\n2 3\n5 4\n",
            "6\n"
        ],
        [
            "3 6\n1 0\n2 2\n5 4\n",
            "5\n"
        ],
        [
            "3 13\n1 0\n2 2\n6 5\n",
            "7\n"
        ],
        [
            "1 10000000000000000\n1 0\n",
            "10000000000000000\n"
        ]
    ],
    "hint": "",
    "translation": "\u5c0f D \u5728\u73a9\u4e00\u4e2a\u5efa\u7b51\u7c7b\u6e38\u620f,\u6e38\u620f\u4e2d,\u5c0f D \u7684\u76ee\u6807\u662f\u6536\u96c6 S \u679a\u91d1\u5e01, \u4ed6\u4e00\u5f00\u59cb\u6ca1\u6709\u91d1\u5e01;\r\n\r\n\u6709 N \u5ea7\u53ef\u4f9b\u9009\u62e9\u7684\u5de5\u5382,\u7b2c i \u4e2a\u5de5\u5382\u5728\u5efa\u9020\u65f6\u9700\u8981\u82b1\u8d39 $C_i$ \u679a\u91d1\u5e01,\u5efa\u9020\u4e4b\u540e\u7684\u6bcf\u79d2\u4f1a\u4ea7\u51fa $V_i$ \u679a\u91d1\u5e01(\u5982\u679c\u8be5\u5de5\u5382\u5904\u4e8e\u8fd0\u8f6c\u72b6\u6001);\r\n\r\n\u7531\u4e8e\u4e00\u4e9b\u4e0d\u53ef\u6297\u529b,\u540c\u4e00\u79d2\u5185\u53ea\u80fd\u6709\u4e00\u4e2a\u5de5\u5382\u5728\u8fd0\u8f6c;\r\n\u5c0f D \u53ef\u4ee5\u5728\u6bcf\u4e00\u79d2\u5f00\u59cb\u524d\u8fdb\u884c\u4efb\u610f\u6b21\u64cd\u4f5c,\u64cd\u4f5c\u5305\u62ec\u5efa\u7b51\u65b0\u7684\u5de5\u5382,\u9009\u5b9a\u4e0b\u4e00\u79d2\u8fd0\u8f6c\u7684\u5de5\u5382;\r\n\r\n\u82e5\u5728\u67d0\u4e00\u79d2\u7ed3\u675f\u540e,\u5c0f D \u62e5\u6709\u4e86\u81f3\u5c11 S \u679a\u91d1\u5e01,\u6e38\u620f\u7ed3\u675f;\r\n\r\n\u7531\u4e8e\u8fd9\u4e2a\u6e38\u620f\u5b9e\u5728\u662f\u592a\u65e0\u804a\u4e86,\u5c0f D \u60f3\u77e5\u9053\u8fd9\u4e2a\u6e38\u620f\u6700\u5c11\u5728\u591a\u5c11\u79d2\u540e\u7ed3\u675f;\r\n\r\n\u6e38\u620f\u4fdd\u8bc1\u5c0f D \u53ef\u4ee5\u5b8c\u6210\u76ee\u6807\u3002"
}