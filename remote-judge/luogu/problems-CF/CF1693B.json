{
    "description": "We are given a rooted tree consisting of $ n $ vertices numbered from $ 1 $ to $ n $ . The root of the tree is the vertex $ 1 $ and the parent of the vertex $ v $ is $ p_v $ .\n\nThere is a number written on each vertex, initially all numbers are equal to $ 0 $ . Let's denote the number written on the vertex $ v $ as $ a_v $ .\n\nFor each $ v $ , we want $ a_v $ to be between $ l_v $ and $ r_v $ $ (l_v \\leq a_v \\leq r_v) $ .\n\nIn a single operation we do the following:\n\n- Choose some vertex $ v $ . Let $ b_1, b_2, \\ldots, b_k $ be vertices on the path from the vertex $ 1 $ to vertex $ v $ (meaning $ b_1 = 1 $ , $ b_k = v $ and $ b_i = p_{b_{i + 1}} $ ).\n- Choose a non-decreasing array $ c $ of length $ k $ of nonnegative integers: $ 0 \\leq c_1 \\leq c_2 \\leq \\ldots \\leq c_k $ .\n- For each $ i $ $ (1 \\leq i \\leq k) $ , increase $ a_{b_i} $ by $ c_i $ .\n\nWhat's the minimum number of operations needed to achieve our goal?",
    "inputFormat": "The first line contains an integer $ t $ $ (1\\le t\\le 1000) $ \u2014 the number of test cases. The description of the test cases follows.\n\nThe first line of each test case contains a single integer $ n $ $ (2\\le n\\le 2 \\cdot 10^5) $ \u2014 the number of the vertices in the tree.\n\nThe second line of each test case contains $ n - 1 $ integers, $ p_2, p_3, \\ldots, p_n $ $ (1 \\leq p_i < i) $ , where $ p_i $ denotes the parent of the vertex $ i $ .\n\nThe $ i $ -th of the following $ n $ lines contains two integers $ l_i $ and $ r_i $ $ (1 \\le l_i \\le r_i \\le 10^9) $ .\n\nIt is guaranteed that the sum of $ n $ over all test cases doesn't exceed $ 2 \\cdot 10^5 $ .",
    "outputFormat": "For each test case output the minimum number of operations needed.",
    "samples": [
        [
            "4\n2\n1\n1 5\n2 9\n3\n1 1\n4 5\n2 4\n6 10\n4\n1 2 1\n6 9\n5 6\n4 5\n2 4\n5\n1 2 3 4\n5 5\n4 4\n3 3\n2 2\n1 1",
            "1\n2\n2\n5"
        ]
    ],
    "hint": "In the first test case, we can achieve the goal with a single operation: choose $ v = 2 $ and $ c = [1, 2] $ , resulting in $ a_1 = 1, a_2 = 2 $ .\n\nIn the second test case, we can achieve the goal with two operations: first, choose $ v = 2 $ and $ c = [3, 3] $ , resulting in $ a_1 = 3, a_2 = 3, a_3 = 0 $ . Then, choose $ v = 3, c = [2, 7] $ , resulting in $ a_1 = 5, a_2 = 3, a_3 = 7 $ .",
    "translation": "$t$ \u7ec4\u6570\u636e\uff0c\u6bcf\u7ec4\u7ed9\u5b9a\u4e00\u4e2a $n$ \u4e2a\u7ed3\u70b9\u7684\u6811\uff0c **\u6839\u4e3a $1$** \uff0c\u7ed9\u5b9a $2,3,\\ldots ,n$ \u7684\u7236\u7ed3\u70b9 $p_2,p_3,\\ldots ,p_n$ \u3002\u518d\u7ed9\u51fa\u6bcf\u4e2a\u70b9\u6743\u503c $a_i$ \u7684\u8303\u56f4 $[l_i,r_i]$ \u3002\n\n\u521d\u59cb\u6bcf\u4e2a\u70b9\u7684\u6743\u503c\u5747\u4e3a $0$ \u3002\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u9009\u62e9\u4ece $1$ \u5f00\u59cb\u7684\u6811\u4e0a\u8def\u5f84 $b_1,b_2,\\ldots,b_k$ \uff08\u4e0d\u4e00\u5b9a\u8981\u5728\u53f6\u5b50\u5904\u7ed3\u675f\uff09\uff0c\u5c06 $a_{b_i}$ \u52a0\u4e0a $c_i$ \uff0c\u5176\u4e2d $\\{c_i\\}$ \u662f\u4e00\u4e2a **\u975e\u8d1f\u5355\u8c03\u975e\u51cf** \u7684 **\u6574\u6570** \u6570\u5217\u3002\n\n\u95ee\u81f3\u5c11\u591a\u5c11\u6b21\u64cd\u4f5c\uff0c\u53ef\u4ee5\u4ee4\u6240\u6709\u70b9\u70b9\u6743\u5747\u5728 $[l_i,r_i]$ \u8303\u56f4\u5185\u3002\n\n$1\\le t\\le 1000,2\\le n\\le 2\\times 10^5,\\sum n\\le 2\\times 10^5,1\\le p_i<i,1\\le l_i\\le r_i\\le 10^9$"
}