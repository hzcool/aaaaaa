{
    "description": "Bessie is planning a vacation! In Cow-lifornia, there are $ n $ cities, with $ n-1 $ bidirectional roads connecting them. It is guaranteed that one can reach any city from any other city.\n\nBessie is considering $ v $ possible vacation plans, with the $ i $ -th one consisting of a start city $ a_i $ and destination city $ b_i $ .\n\nIt is known that only $ r $ of the cities have rest stops. Bessie gets tired easily, and cannot travel across more than $ k $ consecutive roads without resting. In fact, she is so desperate to rest that she may travel through the same city multiple times in order to do so.\n\nFor each of the vacation plans, does there exist a way for Bessie to travel from the starting city to the destination city?",
    "inputFormat": "The first line contains three integers $ n $ , $ k $ , and $ r $ ( $ 2 \\le n \\le 2 \\cdot 10^5 $ , $ 1 \\le k,r \\le n $ ) \u2014 the number of cities, the maximum number of roads Bessie is willing to travel through in a row without resting, and the number of rest stops.\n\nEach of the following $ n-1 $ lines contain two integers $ x_i $ and $ y_i $ ( $ 1 \\le x_i, y_i \\le n $ , $ x_i \\neq y_i $ ), meaning city $ x_i $ and city $ y_i $ are connected by a road.\n\nThe next line contains $ r $ integers separated by spaces \u2014 the cities with rest stops. Each city will appear at most once.\n\nThe next line contains $ v $ ( $ 1 \\le v \\le 2 \\cdot 10^5 $ ) \u2014 the number of vacation plans.\n\nEach of the following $ v $ lines contain two integers $ a_i $ and $ b_i $ ( $ 1 \\le a_i, b_i \\le n $ , $ a_i \\ne b_i $ ) \u2014 the start and end city of the vacation plan.",
    "outputFormat": "If Bessie can reach her destination without traveling across more than $ k $ roads without resting for the $ i $ -th vacation plan, print YES. Otherwise, print NO.",
    "samples": [
        [
            "6 2 1\n1 2\n2 3\n2 4\n4 5\n5 6\n2\n3\n1 3\n3 5\n3 6",
            "YES\nYES\nNO"
        ],
        [
            "8 3 3\n1 2\n2 3\n3 4\n4 5\n4 6\n6 7\n7 8\n2 5 8\n2\n7 1\n8 1",
            "YES\nNO"
        ]
    ],
    "hint": "The graph for the first example is shown below. The rest stop is denoted by red.\n\nFor the first query, Bessie can visit these cities in order: $ 1, 2, 3 $ .\n\nFor the second query, Bessie can visit these cities in order: $ 3, 2, 4, 5 $ .\n\nFor the third query, Bessie cannot travel to her destination. For example, if she attempts to travel this way: $ 3, 2, 4, 5, 6 $ , she travels on more than $ 2 $ roads without resting.\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1307F/6005795ec1e324d935b2c888363d240a51c05921.png)The graph for the second example is shown below.\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1307F/366ba53d75a05a3319148dbe98d603e18b3769e5.png)",
    "translation": "**\u9898\u76ee\u63cf\u8ff0**\n\nBessie \u6b63\u5728\u51c6\u5907\u5ea6\u5047\u3002\n\n\u4ed6\u6240\u5728\u7684\u4e2a\u6d32\u6709 n \u4e2a\u57ce\u5e02\uff0cn-1 \u6761\u53cc\u5411\u9053\u8def\u8fde\u63a5\u3002\u4fdd\u8bc1\u53ef\u4ee5\u4ece\u4efb\u610f\u4e00\u4e2a\u57ce\u5e02\u5230\u4efb\u610f\u4e00\u4e2a\u57ce\u5e02\u3002\n\nBessie \u8003\u8651\u4e86 v \u79cd\u5ea6\u5047\u65b9\u6848\uff0c\u6bcf\u79cd\u65b9\u6848\u5305\u62ec\u4ece\u57ce\u5e02 ai \u5f00\u59cb\u5230\u57ce\u5e02 bi \u7ed3\u675f\u3002\n\n\u5df2\u77e5\u4e00\u5171\u6709 r \u4e2a\u57ce\u5e02\u62e5\u6709\u4f11\u606f\u70b9\u3002Bessie \u5bb9\u6613\u75b2\u5026\uff0c\u5e76\u4e14\u4ed6\u4e0d\u80fd\u5728\u4e0d\u4f11\u606f\u7684\u60c5\u51b5\u4e0b\u7a7f\u8d8a\u8d85\u8fc7 k \u6761\u8fde\u7eed\u9053\u8def\u3002\u6709\u65f6\uff0c\u4ed6\u8fd8\u4f1a\u56e0\u4e3a\u592a\u60f3\u4f11\u606f\u800c\u591a\u6b21\u7a7f\u8fc7\u540c\u4e00\u4e2a\u57ce\u5e02\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u65c5\u884c\u65b9\u6848\uff0cBessie \u662f\u5426\u6709\u4ece\u51fa\u53d1\u57ce\u5e02\u5230\u7ed3\u675f\u5730\u57ce\u5e02\u7684\u65c5\u884c\u65b9\u5f0f\uff1f\n\n**\u8f93\u5165\u683c\u5f0f**\n\n\u7b2c\u4e00\u884c\u5305\u62ec\u4e09\u4e2a\u6574\u6570\uff0cn\uff0ck\uff0cr\uff08\u8303\u56f4\u5982\u539f\u9898\u6240\u793a\uff09\u3002\u5206\u522b\u8868\u793a\u57ce\u5e02\u7684\u6570\u91cf\uff0cBessie \u613f\u610f\u5728\u4e0d\u4f11\u606f\u7684\u60c5\u51b5\u4e0b\u8fde\u7eed\u901a\u8fc7\u7684\u6700\u5927\u9053\u8def\u6570\uff0c\u4f11\u606f\u70b9\u7684\u6570\u91cf\u3002\n\n\u63a5\u4e0b\u6765 n-1 \u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6574\u6570\u5199 xi \u548c yi\uff08\u8303\u56f4\u5982\u539f\u9898\u6240\u793a\uff09\uff0c\u8868\u793a\u4ece xi \u5230 yi \u6709\u4e00\u6761\u53cc\u5411\u9053\u8def\u8fde\u63a5\u3002\n\n\u63a5\u4e0b\u6765r\u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u6570\u5b57\uff0c\u8868\u793a\u6709\u4f11\u606f\u70b9\u7684\u57ce\u5e02\uff0c\u4fdd\u8bc1\u6bcf\u4e2a\u57ce\u5e02\u6700\u591a\u51fa\u73b0\u4e00\u904d\u3002\n\n\u63a5\u4e0b\u6765\u4e00\u884c\u4e00\u4e2a\u6574\u6570 v\uff08\u8303\u56f4\u5982\u539f\u9898\u6240\u793a\uff09\uff0c\u8868\u793a\u5ea6\u5047\u65b9\u6848\u6570\u3002\n\n\u63a5\u4e0b\u6765v\u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6574\u6570 ai \u548c bi\uff08\u8303\u56f4\u5982\u539f\u9898\u6240\u793a\uff09\uff0c\u8868\u793a\u8be5\u65b9\u6848\u4ece ai \u5f00\u59cb\u5230\u57ce\u5e02 bi \u7ed3\u675f\u3002\n\n**\u8f93\u51fa\u683c\u5f0f**\n\n\u4e00\u5171 v \u884c\uff0c\u8868\u793a\u5982\u679c Bessie \u80fd\u591f\u6309\u8981\u6c42\u5230\u8fbe\uff0c\u8f93\u51fa\u201cYES\u201d\uff0c\u53cd\u4e4b\u8f93\u51fa\u201cNO\u201d\u3002\n\n**\u8bf4\u660e/\u63d0\u793a**\n\n\u7b2c\u4e00\u4e2a\u4f8b\u5b50\u7684\u56fe\u8868\u5982\u4e0b\u6240\u793a\u3002\u4f11\u606f\u7ad9\u7528\u7ea2\u8272\u8868\u793a\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u67e5\u8be2\uff0cBessie \u53ef\u4ee5\u6309\u4ee5\u4e0b\u987a\u5e8f\u8bbf\u95ee\u8fd9\u4e9b\u57ce\u5e02\uff1a1->2->3\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u67e5\u8be2\uff0cBessie \u53ef\u4ee5\u6309\u4ee5\u4e0b\u987a\u5e8f\u8bbf\u95ee\u8fd9\u4e9b\u57ce\u5e02\uff1a 3->2-> 4-> 5\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e09\u4e2a\u67e5\u8be2\uff0cBessie \u65e0\u6cd5\u524d\u5f80\u76ee\u7684\u5730\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5979\u8bd5\u56fe\u8fd9\u6837\u65c5\u884c\uff1a3->2->4->5->6\uff0c\u4ed6\u57282\u6761\u4ee5\u4e0a\u7684\u9053\u8def\u4e0a\u65c5\u884c\u800c\u6ca1\u6709\u4f11\u606f\u3002\n\n\n\n\n\n\n"
}