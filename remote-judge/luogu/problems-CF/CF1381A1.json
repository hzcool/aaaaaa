{
    "description": "This is the easy version of the problem. The difference between the versions is the constraint on $ n $ and the required number of operations. You can make hacks only if all versions of the problem are solved.\n\nThere are two binary strings $ a $ and $ b $ of length $ n $ (a binary string is a string consisting of symbols $ 0 $ and $ 1 $ ). In an operation, you select a prefix of $ a $ , and simultaneously invert the bits in the prefix ( $ 0 $ changes to $ 1 $ and $ 1 $ changes to $ 0 $ ) and reverse the order of the bits in the prefix.\n\nFor example, if $ a=001011 $ and you select the prefix of length $ 3 $ , it becomes $ 011011 $ . Then if you select the entire string, it becomes $ 001001 $ .\n\nYour task is to transform the string $ a $ into $ b $ in at most $ 3n $ operations. It can be proved that it is always possible.",
    "inputFormat": "The first line contains a single integer $ t $ ( $ 1\\le t\\le       1000 $ ) \u2014 the number of test cases. Next $ 3t $ lines contain descriptions of test cases.\n\nThe first line of each test case contains a single integer $ n $ ( $ 1\\le n\\le 1000 $ ) \u2014 the length of the binary strings.\n\nThe next two lines contain two binary strings $ a $ and $ b $ of length $ n $ .\n\nIt is guaranteed that the sum of $ n $ across all test cases does not exceed $ 1000 $ .",
    "outputFormat": "For each test case, output an integer $ k $ ( $ 0\\le k\\le       3n $ ), followed by $ k $ integers $ p_1,\\ldots,p_k $ ( $ 1\\le       p_i\\le n $ ). Here $ k $ is the number of operations you use and $ p_i $ is the length of the prefix you flip in the $ i $ -th operation.",
    "samples": [
        [
            "5\n2\n01\n10\n5\n01011\n11100\n2\n01\n01\n10\n0110011011\n1000110100\n1\n0\n1",
            "3 1 2 1\n6 5 2 5 3 1 2\n0\n9 4 1 2 10 4 1 2 1 5\n1 1"
        ]
    ],
    "hint": "In the first test case, we have $ 01\\to 11\\to 00\\to 10 $ .\n\nIn the second test case, we have $ 01011\\to 00101\\to 11101\\to       01000\\to 10100\\to 00100\\to 11100 $ .\n\nIn the third test case, the strings are already the same. Another solution is to flip the prefix of length $ 2 $ , which will leave $ a $ unchanged.",
    "translation": "\u7ed9\u5b9a\u4e00\u4e2a01\u6784\u6210\u7684\u5b57\u7b26\u4e32 $a$ \u3002\u4f60\u9700\u8981\u5c06\u5b83\u5728$3 n$\u6b21\u64cd\u4f5c\u5185\u53d8\u6210\u5b57\u7b26\u4e32 $b$ \u3002\u6709\u591a\u7ec4\u6570\u636e\u3002\r\n\r\n\u6bcf\u4e00\u6b21\u64cd\u4f5c\uff0c\u4f60\u53ef\u4ee5\u5c06\u5b57\u7b26\u4e32\u7684\u524d $p$ \u4e2a\u98a0\u5012\u987a\u5e8f\uff0c\u5e76\u628a\u5176\u4e2d\u7684 $0$ \u53d8\u6210 $1$ ,$1$ \u53d8\u6210 $0$ \u3002\r\n\r\n\u4e3e\u4f8b:\r\n\r\n$p=3$ \u65f6 ``001011`` \u53d8\u6210 ``011011``\uff0c\r\n``011011`` $p=6$ \u65f6\u53d8\u6210``001001``\r\n\r\n\u73b0\u5728\u7ed9\u5b9a $t$ \u7ec4\u6570\u636e\u548c\u5bf9\u5e94\u7684 $n,a_i,b_i$\uff0c\u4fdd\u8bc1 $|a\\ |=|b\\ |$\r\n\r\n\u8f93\u51fa $t$ \u884c\uff0c\u6bcf\u884c\u5148\u8f93\u51fa$k$,\u8868\u793a\u64cd\u4f5c\u6b21\u6570\uff0c\u7136\u540e\u6309\u987a\u5e8f\u8f93\u51fa$p_1,p_2...p_k$ .\r\n\r\nTranslated by @Error_Eric"
}