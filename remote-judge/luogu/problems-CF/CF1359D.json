{
    "description": "Alice and Bob are playing yet another card game. This time the rules are the following. There are $ n $ cards lying in a row in front of them. The $ i $ -th card has value $ a_i $ .\n\nFirst, Alice chooses a non-empty consecutive segment of cards $ [l; r] $ ( $ l \\le r $ ). After that Bob removes a single card $ j $ from that segment $ (l \\le j \\le r) $ . The score of the game is the total value of the remaining cards on the segment $ (a_l + a_{l + 1} + \\dots + a_{j - 1} + a_{j + 1} + \\dots + a_{r - 1} + a_r) $ . In particular, if Alice chooses a segment with just one element, then the score after Bob removes the only card is $ 0 $ .\n\nAlice wants to make the score as big as possible. Bob takes such a card that the score is as small as possible.\n\nWhat segment should Alice choose so that the score is maximum possible? Output the maximum score.",
    "inputFormat": "The first line contains a single integer $ n $ ( $ 1 \\le n \\le 10^5 $ ) \u2014 the number of cards.\n\nThe second line contains $ n $ integers $ a_1, a_2, \\dots, a_n $ ( $ -30 \\le a_i \\le 30 $ ) \u2014 the values on the cards.",
    "outputFormat": "Print a single integer \u2014 the final score of the game.",
    "samples": [
        [
            "5\n5 -2 10 -1 4",
            "6"
        ],
        [
            "8\n5 2 5 3 -30 -30 6 9",
            "10"
        ],
        [
            "3\n-10 6 -15",
            "0"
        ]
    ],
    "hint": "In the first example Alice chooses a segment $ [1;5] $ \u2014 the entire row of cards. Bob removes card $ 3 $ with the value $ 10 $ from the segment. Thus, the final score is $ 5 + (-2) + (-1) + 4 = 6 $ .\n\nIn the second example Alice chooses a segment $ [1;4] $ , so that Bob removes either card $ 1 $ or $ 3 $ with the value $ 5 $ , making the answer $ 5 + 2 + 3 = 10 $ .\n\nIn the third example Alice can choose any of the segments of length $ 1 $ : $ [1;1] $ , $ [2;2] $ or $ [3;3] $ . Bob removes the only card, so the score is $ 0 $ . If Alice chooses some other segment then the answer will be less than $ 0 $ .",
    "translation": "**Alice**\u548c**Bob**\u6b63\u5728\u73a9\u53e6\u4e00\u573a\u5361\u724c\u6e38\u620f\u3002\u8fd9\u6b21\u7684\u89c4\u5219\u5982\u4e0b\uff1a\r\n\r\n\u9996\u5148,**Alice**\u9009\u53d6\u4e00\u6bb5\u4e0d\u4e3a\u7a7a\u7684\u8fde\u7eed\u533a\u95f4$[l,r],(l\\leq r)$,\u4e4b\u540e**Bob**\u79fb\u53bb\u8fd9\u4e2a\u533a\u95f4\u7684\u4e00\u5f20\u5361\u724c$j(l\\leq j \\leq r)$\u3002\u8fd9\u573a\u6e38\u620f\u7684\u5f97\u5206\u5c31\u662f\u533a\u95f4\u5269\u4f59\u5361\u724c\u503c\u7684\u603b\u548c\u3002\u7279\u522b\u7684\uff0c\u5982\u679c**Alice**\u53ea\u9009\u62e9\u4e86\u4e00\u5f20\u724c\uff0c\u90a3\u4e48\u6700\u7ec8\u7684\u5f97\u5206\u5c31\u662f0.\r\n\r\n**Alice**\u60f3\u8ba9\u8fd9\u4e2a\u5f97\u5206\u8db3\u591f\u5927\uff0c\u800c**Bob**\u4e3a\u4e86\u8ba9\u5f97\u5206\u8db3\u591f\u5c0f\uff0c\u4f1a\u53d6\u51fa\u4e00\u5f20\u8fd9\u4e2a\u533a\u95f4\u4e2d\u503c\u6700\u5927\u7684\u724c\u3002\u73b0\u5728\u8be2\u95ee**Alice**\u5e94\u8be5\u5982\u4f55\u9009\u62e9\u8fd9\u4e2a\u533a\u95f4\u6765\u4f7f\u5f97\u81ea\u5df1\u7684\u5f97\u5206\u5728\u6240\u6709\u60c5\u51b5\u4e2d\u6700\u5927\u3002\u8f93\u51fa\u6700\u5927\u503c\u3002"
}