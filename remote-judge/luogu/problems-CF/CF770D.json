{
    "description": "A sequence of square brackets is regular if by inserting symbols \"+\" and \"1\" into it, you can get a regular mathematical expression from it. For example, sequences \"\\[\\[\\]\\]\\[\\]\", \"\\[\\]\" and \"\\[\\[\\]\\[\\[\\]\\]\\]\" \u2014 are regular, at the same time \"\\]\\[\", \"\\[\\[\\]\" and \"\\[\\[\\]\\]\\]\\[\" \u2014 are irregular.\n\nDraw the given sequence using a minimalistic pseudographics in the strip of the lowest possible height \u2014 use symbols '+', '-' and '|'. For example, the sequence \"\\[\\[\\]\\[\\]\\]\\[\\]\" should be represented as:\n\n`<br></br>+-        -++- -+    <br></br>|+- -++- -+||   |<br></br>||   ||   |||   |<br></br>|+- -++- -+||   |<br></br>+-        -++- -+<br></br>`Each bracket should be represented with the hepl of one or more symbols '|' (the vertical part) and symbols '+' and '-' as on the example which is given above.\n\nBrackets should be drawn without spaces one by one, only dividing pairs of consecutive pairwise brackets with a single-space bar (so that the two brackets do not visually merge into one symbol). The image should have the minimum possible height.\n\nThe enclosed bracket is always smaller than the surrounding bracket, but each bracket separately strives to maximize the height of the image. So the pair of final brackets in the example above occupies the entire height of the image.\n\nStudy carefully the examples below, they adequately explain the condition of the problem. Pay attention that in this problem the answer (the image) is unique.",
    "inputFormat": "The first line contains an even integer $ n $ ( $ 2<=n<=100 $ ) \u2014 the length of the sequence of brackets.\n\nThe second line contains the sequence of brackets \u2014 these are $ n $ symbols \"\\[\" and \"\\]\". It is guaranteed that the given sequence of brackets is regular.",
    "outputFormat": "Print the drawn bracket sequence in the format which is given in the condition. Don't print extra (unnecessary) spaces.",
    "samples": [
        [
            "8\n[[][]][]\n",
            "+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+\n"
        ],
        [
            "6\n[[[]]]\n",
            "+-     -+\n|+-   -+|\n||+- -+||\n|||   |||\n||+- -+||\n|+-   -+|\n+-     -+\n"
        ],
        [
            "6\n[[][]]\n",
            "+-        -+\n|+- -++- -+|\n||   ||   ||\n|+- -++- -+|\n+-        -+\n"
        ],
        [
            "2\n[]\n",
            "+- -+\n|   |\n+- -+\n"
        ],
        [
            "4\n[][]\n",
            "+- -++- -+\n|   ||   |\n+- -++- -+\n"
        ]
    ],
    "hint": ""
}