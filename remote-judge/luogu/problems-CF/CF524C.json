{
    "description": "ATMs of a well-known bank of a small country are arranged so that they can not give any amount of money requested by the user. Due to the limited size of the bill dispenser (the device that is directly giving money from an ATM) and some peculiarities of the ATM structure, you can get at most $ k $ bills from it, and the bills may be of at most two distinct denominations.\n\nFor example, if a country uses bills with denominations $ 10 $ , $ 50 $ , $ 100 $ , $ 500 $ , $ 1000 $ and $ 5000 $ burles, then at $ k=20 $ such ATM can give sums $ 100000 $ burles and $ 96000 $ burles, but it cannot give sums $ 99000 $ and $ 101000 $ burles.\n\nLet's suppose that the country uses bills of $ n $ distinct denominations, and the ATM that you are using has an unlimited number of bills of each type. You know that during the day you will need to withdraw a certain amount of cash $ q $ times. You know that when the ATM has multiple ways to give money, it chooses the one which requires the minimum number of bills, or displays an error message if it cannot be done. Determine the result of each of the $ q $ of requests for cash withdrawal.",
    "inputFormat": "The first line contains two integers $ n $ , $ k $ ( $ 1<=n<=5000 $ , $ 1<=k<=20 $ ).\n\nThe next line contains $ n $ space-separated integers $ a_{i} $ ( $ 1<=a_{i}<=10^{7} $ ) \u2014 the denominations of the bills that are used in the country. Numbers $ a_{i} $ follow in the strictly increasing order.\n\nThe next line contains integer $ q $ ( $ 1<=q<=20 $ ) \u2014 the number of requests for cash withdrawal that you will make.\n\nThe next $ q $ lines contain numbers $ x_{i} $ ( $ 1<=x_{i}<=2\u00b710^{8} $ ) \u2014 the sums of money in burles that you are going to withdraw from the ATM.",
    "outputFormat": "For each request for cash withdrawal print on a single line the minimum number of bills it can be done, or print $ -1 $ , if it is impossible to get the corresponding sum.",
    "samples": [
        [
            "6 20\n10 50 100 500 1000 5000\n8\n4200\n100000\n95000\n96000\n99000\n10100\n2015\n9950\n",
            "6\n20\n19\n20\n-1\n3\n-1\n-1\n"
        ],
        [
            "5 2\n1 2 3 5 8\n8\n1\n3\n5\n7\n9\n11\n13\n15\n",
            "1\n1\n1\n2\n2\n2\n2\n-1\n"
        ]
    ],
    "hint": "",
    "translation": "Problem\r\n\u67d0\u56fd\u7684ATM\u53d6\u6b3e\u673a\u53ef\u4ee5\u63d0\u4f9bn\u79cd\u4e0d\u540c\u9762\u503c\u7684\u7eb8\u5e01\uff0c\u6bcf\u79cd\u9762\u503c\u7684\u7eb8\u5e01\u7684\u6570\u91cf\u53ef\u4ee5\u89c6\u4e3a\u65e0\u9650\u3002\u4f46\u662f\u8be5\u53d6\u6b3e\u673a\u6709\u7279\u6b8a\u7684\u9650\u5236\uff0c\u4e00\u6b21\u53d6\u6b3e\u6700\u591a\u51fak\u5f20\u7eb8\u5e01\uff0c\u800c\u4e14\u6700\u591a\u5305\u542b\u4e24\u79cd\u4e0d\u540c\u7684\u9762\u503c\u7684\u7eb8\u5e01\u3002\r\n\r\n\u6bd4\u5982\uff0c\u67096\u79cd\u4e0d\u540c\u7684\u7eb8\u5e01\uff0c10\uff0c50\uff0c100\uff0c500\uff0c1000\u548c5000\uff0c\u5f53k=20\u65f6\uff0c\u4f60\u53ef\u4ee5\u53d6\u51fa100000\u6216\u800596000\uff0c\u4f46\u662f\u4e0d\u80fd\u53d699000\u548c101000\u3002\r\n\r\n\u73b0\u5728\u4f60\u4e00\u5171\u8981\u53d6q\u6b21\u94b1\uff0c\u8bf7\u8ba1\u7b97\u6bcf\u6b21\u53d6\u94b1ATM\u53d6\u6b3e\u673a\u6700\u5c11\u5410\u51fa\u591a\u5c11\u5f20\u7eb8\u5e01\uff0c\u5982\u679c\u67d0\u4e2a\u91d1\u989d\u6ca1\u6709\u529e\u6cd5\u6784\u6210\uff0c\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\u3002\r\n\r\nInput Data\r\n\r\n\u7b2c\u4e00\u884c\uff0c\u4e24\u4e2a\u6574\u6570n\u548ck\u3002(1\u2264n\u22645000,1\u2264k\u226420)\u3002\r\n\r\n\u7b2c\u4e8c\u884c\uff0cn\u4e2a\u6574\u6570a_i \uff0c\u8868\u793an\u79cd\u4e0d\u540c\u7684\u9762\u503ca_i(1\u2264a\r\n\u200bi\r\n\u200b\u200b \u226410^7)\uff0c\u6309\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u7ed9\u51fa\u3002\r\n\r\n\u7b2c\u4e09\u884c\uff0c\u4e00\u4e2a\u6574\u6570q\uff0c\u8868\u793a\u6709q(1\u2264q\u226420)\u6b21\u53d6\u94b1\u3002\r\n\r\n\u63a5\u4e0b\u6765q\u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u6574\u6570x_i\r\n\u200b\u200b (1\u2264x_i \u22642\u00d710^8),\u8868\u793a\u6bcf\u6b21\u53d6\u94b1\u7684\u6570\u91cf\u3002\r\n\r\nOutput Data\r\n\r\n\u8f93\u51fa\u5171k\u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u6574\u6570\uff0c\u4f9d\u6b21\u8868\u793a\u6bcf\u6b21\u53d6\u94b1\u6700\u5c11\u7684\u7eb8\u5e01\u5f20\u6570\uff0c\u65e0\u89e3\u5219\u8f93\u51fa-1\u3002"
}