{
    "description": "Gerda is travelling to the palace of the Snow Queen.\n\nThe road network consists of $ n $ intersections and $ m $ bidirectional roads. Roads are numbered from $ 1 $ to $ m $ . Snow Queen put a powerful spell on the roads to change the weather conditions there. Now, if Gerda steps on the road $ i $ at the moment of time less or equal to $ i $ , she will leave the road exactly at the moment $ i $ . In case she steps on the road $ i $ at the moment of time greater than $ i $ , she stays there forever.\n\nGerda starts at the moment of time $ l $ at the intersection number $ s $ and goes to the palace of the Snow Queen, located at the intersection number $ t $ . Moreover, she has to be there at the moment $ r $ (or earlier), before the arrival of the Queen.\n\nGiven the description of the road network, determine for $ q $ queries $ l_{i} $ , $ r_{i} $ , $ s_{i} $ and $ t_{i} $ if it's possible for Gerda to get to the palace on time.",
    "inputFormat": "The first line of the input contains integers $ n $ , $ m $ and $ q $ ( $ 2<=n<=1000 $ , $ 1<=m,q<=200000 $ ) \u2014 the number of intersections in the road network of Snow Queen's Kingdom, the number of roads and the number of queries you have to answer.\n\nThe $ i $ -th of the following $ m $ lines contains the description of the road number $ i $ . The description consists of two integers $ v_{i} $ and $ u_{i} $ ( $ 1<=v_{i},u_{i}<=n $ , $ v_{i}\u2260u_{i} $ ) \u2014 the indices of the intersections connected by the $ i $ -th road. It's possible to get both from $ v_{i} $ to $ u_{i} $ and from $ u_{i} $ to $ v_{i} $ using only this road. Each pair of intersection may appear several times, meaning there are several roads connecting this pair.\n\nLast $ q $ lines contain the queries descriptions. Each of them consists of four integers $ l_{i} $ , $ r_{i} $ , $ s_{i} $ and $ t_{i} $ ( $ 1<=l_{i}<=r_{i}<=m $ , $ 1<=s_{i},t_{i}<=n $ , $ s_{i}\u2260t_{i} $ ) \u2014 the moment of time Gerda starts her journey, the last moment of time she is allowed to arrive to the palace, the index of the starting intersection and the index of the intersection where palace is located.",
    "outputFormat": "For each query print \"Yes\" (without quotes) if Gerda can be at the Snow Queen palace on time (not later than $ r_{i} $ ) or \"No\" (without quotes) otherwise.",
    "samples": [
        [
            "5 4 6\n1 2\n2 3\n3 4\n3 5\n1 3 1 4\n1 3 2 4\n1 4 4 5\n1 4 4 1\n2 3 1 4\n2 2 2 3\n",
            "Yes\nYes\nYes\nNo\nNo\nYes\n"
        ]
    ],
    "hint": "",
    "translation": "\u7ed9\u4f60\u4e00\u5f20\u56fe\uff0c\u6bcf\u4e00\u6761\u8fb9\u90fd\u6709\u4e00\u4e2a\u7f16\u53f7 $i$ \uff0c\u7ecf\u8fc7\u6bcf\u6761\u8fb9\u7684\u65f6\u95f4\u4e3a $1$ \uff0c\u5982\u679c\u5f53\u4f60\u5230\u8fbe\u8fd9\u6761\u8fb9\u7684\u65f6\u95f4\u5c0f\u4e8e $i$ \u7684\u8bdd\uff0c\u5c31\u5fc5\u987b\u7b49\u5230i\u624d\u80fd\u8d70\u51fa\u8fd9\u6761\u8fb9\uff0c\u5982\u679c\u5927\u4e8e $i$ \uff0c\u5c31\u8d70\u4e0d\u51fa\u53bb\u4e86\uff0c\u4e5f\u5c31\u662f\u4e0d\u901a\u4e86\u3002\u7136\u540e\u7ed9\u4f60\u4e00\u4e9b\u8be2\u95ee $l$ , $r$ , $s$ , $t$ \uff0c\u95ee\u4f60\u662f\u5426\u53ef\u4ee5\u4ece $s$ \u51fa\u53d1\uff0c\u65f6\u95f4\u4e3a $l$\uff0c\u5728 $r$ \u65f6\u95f4\u4e4b\u524d\u5230\u8fbe $t$ \u3002"
}