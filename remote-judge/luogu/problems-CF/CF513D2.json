{
    "description": "You need to find a binary tree of size $ n $ that satisfies a given set of $ c $ constraints. Suppose that the nodes of the unknown binary tree are labeled using a pre-order traversal starting with $ 1 $ . For the $ i $ -th constraint you are given two labels, $ a_{i} $ and $ b_{i} $ and a direction, left or right. In case of left direction, $ b_{i} $ is an element of the subtree rooted at $ a_{i} $ 's left child. Similarly in the case of right direction $ b_{i} $ is an element of the subtree rooted at $ a_{i} $ 's right child.",
    "inputFormat": "The first line of input contains two integers $ n $ and $ c $ . The next $ c $ lines contain 2 integers $ a_{i} $ , $ b_{i} $ ( $ 1<=a_{i},b_{i}<=n $ ) and either \"LEFT\" or \"RIGHT\" denoting whether $ b $ is in the subtree rooted at $ a_{i} $ 's left child or in the subtree rooted at $ a_{i} $ 's right child.\n\nThe problem consists of multiple subproblems. The subproblems have different constraints on the input. You will get some score for the correct submission of the subproblem. The description of the subproblems follows.\n\n- In subproblem D1 ( $ 9 $ points), the constraints $ 1<=n<=100 $ , $ 1<=c<=50 $ will hold.\n- In subproblem D2 ( $ 8 $ points), the constraints $ 1<=n<=1000000 $ , $ 1<=c<=100000 $ will hold.",
    "outputFormat": "Output will be on a single line.\n\nAny binary tree that satisfies the constraints will be accepted. The tree's nodes should be printed out as $ n $ space separated labels representing an in-order traversal, using the pre-order numbers as labels of vertices.\n\nIf there are no trees that satisfy the constraints, print \"IMPOSSIBLE\" (without quotes).",
    "samples": [
        [
            "3 2\n1 2 LEFT\n1 3 RIGHT\n",
            "2 1 3\n"
        ],
        [
            "3 2\n1 2 RIGHT\n1 3 LEFT\n",
            "IMPOSSIBLE\n"
        ]
    ],
    "hint": "Consider the first sample test. We need to find a tree with 3 nodes that satisfies the following two constraints. The node labeled 2 with pre-order traversal should be in the left subtree of the node labeled 1 with pre-order traversal; the node labeled 3 with pre-order traversal should be in the right subtree of the node labeled 1. There is only one tree with three nodes that satisfies these constraints and its in-order traversal is $ (2,1,3) $ .\n\nPre-order is the \"root \u2013 left subtree \u2013 right subtree\" order. In-order is the \"left subtree \u2013 root \u2013 right subtree\" order.\n\nFor other information regarding in-order and pre-order, see [http://en.wikipedia.org/wiki/Tree\\_traversal](http://en.wikipedia.org/wiki/Tree_traversal)."
}