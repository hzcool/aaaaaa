{
    "description": "A palindrome is a string that reads the same backward as forward. For example, the strings \"z\", \"aaa\", \"aba\", and \"abccba\" are palindromes, but \"codeforces\" and \"ab\" are not. You hate palindromes because they give you d\u00e9j\u00e0 vu.\n\nThere is a string $ s $ . You must insert exactly one character 'a' somewhere in $ s $ . If it is possible to create a string that is not a palindrome, you should find one example. Otherwise, you should report that it is impossible.\n\nFor example, suppose $ s= $ \"cbabc\". By inserting an 'a', you can create \"acbabc\", \"cababc\", \"cbaabc\", \"cbabac\", or \"cbabca\". However \"cbaabc\" is a palindrome, so you must output one of the other options.",
    "inputFormat": "The first line contains a single integer $ t $ ( $ 1\\le t\\le 10^4 $ ) \u2014 the number of test cases.\n\nThe only line of each test case contains a string $ s $ consisting of lowercase English letters.\n\nThe total length of all strings does not exceed $ 3\\cdot 10^5 $ .",
    "outputFormat": "For each test case, if there is no solution, output \"NO\".\n\nOtherwise, output \"YES\" followed by your constructed string of length $ |s|+1 $ on the next line. If there are multiple solutions, you may print any.\n\nYou can print each letter of \"YES\" and \"NO\" in any case (upper or lower).",
    "samples": [
        [
            "6\ncbabc\nab\nzza\nba\na\nnutforajaroftuna",
            "YES\ncbabac\nYES\naab\nYES\nzaza\nYES\nbaa\nNO\nYES\nnutforajarofatuna"
        ]
    ],
    "hint": "The first test case is described in the statement.\n\nIn the second test case, we can make either \"aab\" or \"aba\". But \"aba\" is a palindrome, so \"aab\" is the only correct answer.\n\nIn the third test case, \"zaza\" and \"zzaa\" are correct answers, but not \"azza\".\n\nIn the fourth test case, \"baa\" is the only correct answer.\n\nIn the fifth test case, we can only make \"aa\", which is a palindrome. So the answer is \"NO\".\n\nIn the sixth test case, \"anutforajaroftuna\" is a palindrome, but inserting 'a' elsewhere is valid.",
    "translation": "### \u9898\u76ee\u63cf\u8ff0\n\u5b9a\u4e49\u4e00\u4e2a\u56de\u6587\u4e32\u4e3a\u6b63\u7740\u8bfb\u4e0e\u5012\u7740\u8bfb\u90fd\u76f8\u540c\u7684\u5b57\u7b26\u4e32\uff0c\u6bd4\u5982 `z`\uff0c`aba` \u548c `abccba` \u90fd\u662f\u56de\u6587\u4e32\u3002\u4f60\u6068\u56de\u6587\u4e32\u56e0\u4e3a\u5b83\u7ed9\u4f60\u201c\u65e2\u89c6\u611f\u201d\u3002\n\n\u73b0\u6709\u4e00\u5b57\u7b26\u4e32  $s$\uff0c\u4f60\u5fc5\u987b\u63d2\u5165\u6070\u597d\u4e00\u4e2a\u5b57\u6bcd `a` \u5728  $s$ \u7684\u67d0\u5904\u3002\u82e5\u64cd\u4f5c\u540e\u7684\u65b0\u5b57\u7b26\u4e32\u53ef\u80fd**\u4e0d\u662f**\u56de\u6587\u4e32\uff0c\u4f60\u9700\u8981\u627e\u5230\u4e00\u4e2a\u4f8b\u5b50\uff1b\u53cd\u4e4b\uff0c\u4f60\u9700\u8981\u62a5\u544a\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\n\n\u6bd4\u5982\uff0c\u5047\u8bbe  $s$ \u4e3a `cbabc`\uff0c\u901a\u8fc7\u63d2\u5165\u4e00\u4e2a\u5b57\u6bcd `a`\uff0c\u53ef\u4ee5\u5f97\u5230 `acbabc`\u3001`cababc`\u3001`cbaabc`\u3001`cbabac`\u3001\u6216 `cbabca`\u3002\u7136\u800c\uff0c`cbaabc` \u662f\u56de\u6587\u4e32\uff0c\u6240\u4ee5\u4f60\u5e94\u5f53\u8f93\u51fa\u5176\u5b83\u5b57\u7b26\u4e32\u4e2d\u7684\u4e00\u4e2a\u3002\n\n### \u8f93\u5165\u683c\u5f0f\n\u7b2c  $1$ \u884c\u4e00\u4e2a\u6574\u6570  $t$\uff0c\u4ee3\u8868  $t$ \u7ec4\u6d4b\u8bd5\u6570\u636e\n\n\u7b2c  $2$ \u884c\u81f3\u7b2c  $n+1$ \u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u5b57\u7b26\u4e32\n\n### \u8f93\u51fa\u683c\u5f0f\n\u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u7b26\u4e32\n- \u82e5\u4e0d\u53ef\u80fd\u4f7f\u65b0\u5b57\u7b26\u4e32\u4e0d\u662f\u56de\u6587\u4e32\uff0c\u8f93\u51fa `NO`\n- \u53cd\u4e4b\uff0c\u8f93\u51fa `YES`\uff0c\u6362\u884c\u5e76\u4e3e\u51fa\u4e00\u4f8b\n\n\u6362\u884c\n\n`YES` \u4e0e `NO` \u53ef\u4ee5\u662f\u5c0f\u5199\u6216\u5927\u5199\n\n### \u6570\u636e\u8303\u56f4\n $1 \\leq t \\leq 10^4$\n\n\u5b57\u7b26\u4e32\u603b\u957f\u5ea6\u4e0d\u8d85\u8fc7  $3 \\times 10^5$"
}