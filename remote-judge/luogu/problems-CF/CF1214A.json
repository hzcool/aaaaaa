{
    "description": "Andrew was very excited to participate in Olympiad of Metropolises. Days flew by quickly, and Andrew is already at the airport, ready to go home. He has $ n $ rubles left, and would like to exchange them to euro and dollar bills. Andrew can mix dollar bills and euro bills in whatever way he wants. The price of one dollar is $ d $ rubles, and one euro costs $ e $ rubles.\n\nRecall that there exist the following dollar bills: $ 1 $ , $ 2 $ , $ 5 $ , $ 10 $ , $ 20 $ , $ 50 $ , $ 100 $ , and the following euro bills \u2014 $ 5 $ , $ 10 $ , $ 20 $ , $ 50 $ , $ 100 $ , $ 200 $ (note that, in this problem we do not consider the $ 500 $ euro bill, it is hard to find such bills in the currency exchange points). Andrew can buy any combination of bills, and his goal is to minimize the total number of rubles he will have after the exchange.\n\nHelp him \u2014 write a program that given integers $ n $ , $ e $ and $ d $ , finds the minimum number of rubles Andrew can get after buying dollar and euro bills.",
    "inputFormat": "The first line of the input contains one integer $ n $ ( $ 1 \\leq n \\leq 10^8 $ ) \u2014 the initial sum in rubles Andrew has.\n\nThe second line of the input contains one integer $ d $ ( $ 30 \\leq d \\leq 100 $ ) \u2014 the price of one dollar in rubles.\n\nThe third line of the input contains integer $ e $ ( $ 30 \\leq e \\leq 100 $ ) \u2014 the price of one euro in rubles.",
    "outputFormat": "Output one integer \u2014 the minimum number of rubles Andrew can have after buying dollar and euro bills optimally.",
    "samples": [
        [
            "100\n60\n70\n",
            "40\n"
        ],
        [
            "410\n55\n70\n",
            "5\n"
        ],
        [
            "600\n60\n70\n",
            "0\n"
        ]
    ],
    "hint": "In the first example, we can buy just $ 1 $ dollar because there is no $ 1 $ euro bill.\n\nIn the second example, optimal exchange is to buy $ 5 $ euro and $ 1 $ dollar.\n\nIn the third example, optimal exchange is to buy $ 10 $ dollars in one bill.",
    "translation": "### \u9898\u76ee\u63cf\u8ff0\n\nAndrew\u53c2\u52a0\u4e86Olympiad of Metropolises\uff0c\u73b0\u51c6\u5907\u56de\u56fd\uff0c\u9700\u8981\u5151\u6362\u8d27\u5e01\u3002\n\n\u73b0\u6709\u5982\u4e0b\u9762\u989d\u7684\u7f8e\u5143\u7eb8\u5e01\uff1a$1 , 2 , 5 , 10 , 20 , 50 , 100$\uff0c\u4ee5\u53ca\u4ee5\u4e0b\u9762\u989d\u7684\u6b27\u5143\u7eb8\u5e01\uff1a$5 , 10 , 20 , 50 , 100 , 200$\uff08\u6ce8\u610f\uff0c\u4e0d\u8003\u8651$500$\u6b27\u5143\u7eb8\u5e01\uff0c\u56e0\u4e3a\u5728\u8d27\u5e01\u5151\u6362\u7a97\u53e3\u5f88\u96be\u627e\u5230\u8fd9\u79cd\uff09\u3002\u5df2\u77e5\u5151\u6362$1$\u7f8e\u5143\u9700\u8981$d$\u5362\u5e03\uff0c$1$\u6b27\u5143\u9700\u8981$e$\u5362\u5e03\uff0c\u800cAndrew\u6709$n$\u5362\u5e03\u3002\n\n\u4ed6\u53ef\u4ee5\u5151\u6362\u4efb\u610f\u6570\u91cf\u7684\u7f8e\u5143\u548c\u6b27\u5143\uff08\u4e00\u79cd\u7eb8\u5e01\u53ef\u4ee5\u5151\u6362\u591a\u6b21\uff0c\u53ef\u4ee5\u7f8e\u5143\u548c\u6b27\u5143\u6df7\u5408\uff09\uff0c\u5e76\u4e14\uff0c\u4ed6\u5e0c\u671b\u4f7f\u5151\u6362\u540e\u624b\u91cc\u5269\u4f59\u7684\u5362\u5e03\u6570\u5c3d\u53ef\u80fd\u5c11\u3002\u8bf7\u4f60\u5199\u4e00\u4e2a\u7a0b\u5e8f\u5e2e\u4ed6\u89e3\u51b3\u95ee\u9898\uff08\u53ea\u9700\u6c42\u51fa\u6700\u5c0f\u7684\u5269\u4f59\u5362\u5e03\u6570\uff09\u3002\n\n### \u8f93\u5165\u683c\u5f0f\n\n3\u884c\uff0c3\u4e2a\u6b63\u6574\u6570$n,d,e$\u3002\n\n### \u8f93\u51fa\u683c\u5f0f\n\n1\u884c\uff0c1\u4e2a\u975e\u8d1f\u6574\u6570\u8868\u793a\u6700\u5c0f\u5269\u4f59\u91cf\u3002\n\n### \u6570\u636e\u8303\u56f4\n\n$1 \\leq n \\leq 10^8$\n\n$30 \\leq d,e \\leq 100$\n"
}