{
    "description": "Little Petya likes numbers a lot. Recently his mother has presented him a collection of $ n $ non-negative integers. There's only one thing Petya likes more than numbers: playing with little Masha. He immediately decided to give a part of his new collection to her. To make the game even more interesting, Petya decided to give Masha such collection of numbers for which the following conditions fulfill:\n\n- Let's introduce $ x_{1} $ to denote the $ xor $ of all numbers Petya has got left; and let's introduce $ x_{2} $ to denote the $ xor $ of all numbers he gave to Masha. Value $ (x_{1}+x_{2}) $ must be as large as possible.\n- If there are multiple ways to divide the collection so that the previous condition fulfilled, then Petya minimizes the value $ x_{1} $ .\n\nThe $ xor $ operation is a bitwise excluding \"OR\", that is denoted as \"xor\" in the Pascal language and \"^\" in C/C++/Java.\n\nHelp Petya divide the collection as described above. If there are multiple suitable ways to divide it, find any of them. Please note that after Petya gives a part of his numbers to Masha, he may have no numbers left. The reverse situation is also possible, when Petya gives nothing to Masha. In both cases we must assume that the $ xor $ of an empty set of numbers equals 0.",
    "inputFormat": "The first line contains integer $ n $ ( $ 1<=n<=10^{5} $ ), showing how many numbers Petya's mother gave him. The second line contains the actual space-separated numbers. They are all integer, non-negative and do not exceed $ 10^{18} $ .",
    "outputFormat": "Print $ n $ space-separated integers, the $ i $ -th of them should equal either 1, if Petya keeps the number that follows $ i $ -th in his collection, or it should equal 2, if Petya gives the corresponding number to Masha. The numbers are indexed in the order in which they are given in the input.",
    "samples": [
        [
            "6\n1 2 3 4 5 6\n",
            "2 2 2 2 2 2\n"
        ],
        [
            "3\n1000000000000 1000000000000 1000000000000\n",
            "2 2 2\n"
        ],
        [
            "8\n1 1 2 2 3 3 4 4\n",
            "1 2 1 2 2 2 1 2\n"
        ]
    ],
    "hint": "",
    "translation": "\u7ed9\u4f60$N$ \u4e2a\u6570$a_i$ ,\u8981\u6c42\u628a\u8fd9\u4e9b\u6570\u5206\u6210\u4e24\u5806\n\n\u4f7f\u7b2c\u4e00\u5806\u7684\u5f02\u6216\u548c\u52a0\u7b2c\u4e8c\u5806\u7684\u5f02\u6216\u548c\u6700\u5927\n\n\u5728\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u4e0b\u4f7f\u7b2c\u4e00\u5806\u7684\u5f02\u6216\u548c\u6700\u5c0f,\u8f93\u51fa\u65b9\u6848\u3002\n\n$N\\le10^5,a_i\\le10^{18}$ \n\n\u611f\u8c22@Kelin \u63d0\u4f9b\u7684\u7ffb\u8bd1"
}