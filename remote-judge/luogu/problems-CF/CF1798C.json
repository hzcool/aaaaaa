{
    "description": "The store sells $ n $ types of candies with numbers from $ 1 $ to $ n $ . One candy of type $ i $ costs $ b_i $ coins. In total, there are $ a_i $ candies of type $ i $ in the store.\n\nYou need to pack all available candies in packs, each pack should contain only one type of candies. Formally, for each type of candy $ i $ you need to choose the integer $ d_i $ , denoting the number of type $ i $ candies in one pack, so that $ a_i $ is divided without remainder by $ d_i $ .\n\nThen the cost of one pack of candies of type $ i $ will be equal to $ b_i \\cdot d_i $ . Let's denote this cost by $ c_i $ , that is, $ c_i = b_i \\cdot d_i $ .\n\nAfter packaging, packs will be placed on the shelf. Consider the cost of the packs placed on the shelf, in order $ c_1, c_2, \\ldots, c_n $ . Price tags will be used to describe costs of the packs. One price tag can describe the cost of all packs from $ l $ to $ r $ inclusive if $ c_l = c_{l+1} = \\ldots = c_r $ . Each of the packs from $ 1 $ to $ n $ must be described by at least one price tag. For example, if $ c_1, \\ldots, c_n = [4, 4, 2, 4, 4] $ , to describe all the packs, a $ 3 $ price tags will be enough, the first price tag describes the packs $ 1, 2 $ , the second: $ 3 $ , the third: $ 4, 5 $ .\n\nYou are given the integers $ a_1, b_1, a_2, b_2, \\ldots, a_n, b_n $ . Your task is to choose integers $ d_i $ so that $ a_i $ is divisible by $ d_i $ for all $ i $ , and the required number of price tags to describe the values of $ c_1, c_2, \\ldots, c_n $ is the minimum possible.\n\nFor a better understanding of the statement, look at the illustration of the first test case of the first test:\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1798C/1160d0ae9da0a28139cfb8794bbbd0911d44c66f.png)Let's repeat the meaning of the notation used in the problem:\n\n $ a_i $ \u2014 the number of candies of type $ i $ available in the store.\n\n $ b_i $ \u2014 the cost of one candy of type $ i $ .\n\n $ d_i $ \u2014 the number of candies of type $ i $ in one pack.\n\n $ c_i $ \u2014 the cost of one pack of candies of type $ i $ is expressed by the formula $ c_i = b_i \\cdot d_i $ .",
    "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $ t $ ( $ 1 \\le t \\le 100\\,000 $ ). Description of the test cases follows.\n\nThe first line of each test case contains a single integer $ n $ ( $ 2 \\le n \\le 200\\,000 $ ) \u2014 the number of types of candies.\n\nEach of the next $ n $ lines of each test case contains two integers $ a_i $ and $ b_i $ ( $ 1 \\le a_i \\le 10^9 $ , $ 1 \\le b_i \\le 10\\,000 $ ) \u2014 the number of candies and the cost of one candy of type $ i $ , respectively.\n\nIt is guaranteed that the sum of $ n $ over all test cases does not exceed $ 200\\,000 $ .",
    "outputFormat": "For each test case, output the minimum number of price tags required to describe the costs of all packs of candies in the store.",
    "samples": [
        [
            "5\n4\n20 3\n6 2\n14 5\n20 7\n3\n444 5\n2002 10\n2020 2\n5\n7 7\n6 5\n15 2\n10 3\n7 7\n5\n10 1\n11 5\n5 1\n2 2\n8 2\n6\n7 12\n12 3\n5 3\n9 12\n9 3\n1000000000 10000",
            "2\n1\n3\n2\n5"
        ]
    ],
    "hint": "In the first test case, you can choose $ d_1 = 4 $ , $ d_2 = 6 $ , $ d_3 = 7 $ , $ d_4 = 5 $ . Then the cost of packs will be equal to $ [12, 12, 35, 35] $ . $ 2 $ price tags are enough to describe them, the first price tag for $ c_1, c_2 $ and the second price tag for $ c_3, c_4 $ . It can be shown that with any correct choice of $ d_i $ , at least $ 2 $ of the price tag will be needed to describe all the packs. Also note that this example is illustrated by a picture in the statement.\n\nIn the second test case, with $ d_1 = 4 $ , $ d_2 = 2 $ , $ d_3 = 10 $ , the costs of all packs will be equal to $ 20 $ . Thus, $ 1 $ price tag is enough to describe all the packs. Note that $ a_i $ is divisible by $ d_i $ for all $ i $ , which is necessary condition.\n\nIn the third test case, it is not difficult to understand that one price tag can be used to describe $ 2 $ nd, $ 3 $ rd and $ 4 $ th packs. And additionally a price tag for pack $ 1 $ and pack $ 5 $ . Total: $ 3 $ price tags.",
    "translation": "\u6709 $n$ \u79cd\u7cd6\uff0c\u7b2c $i$ \u79cd\u7cd6\u6709 $a_i$ \u5757\uff0c\u6bcf\u5757 $b_i$ \u5143\u3002\u5bf9\u6bcf\u79cd\u7cd6\uff0c\u4f60\u8981\u9009\u62e9\u4e00\u4e2a $d_i | a_i$\uff0c\u7136\u540e\u6bcf $d_i$ \u5757\u7cd6\u88c5\u8fdb\u4e00\u4e2a\u888b\u5b50\u3002\n\n\u73b0\u5728\u628a\u7cd6\u6446\u4e0a\u8d27\u67b6\uff0c\u7b2c $i$ \u7c7b\u7cd6\u7684\u4ef7\u7b7e\u4e0a\u7684\u4ef7\u683c $c_i$ \u662f\u4e00\u888b\u5b50 $i$ \u7c7b\u7cd6\u7684\u4ef7\u503c\uff0c\u5373 $c_i = d_i \\times b_i$\u3002\n\n\u5bf9\u4e8e\u8d27\u67b6\u4e0a\u4e00\u4e2a\u533a\u95f4 $[l, r]$\uff0c\u5982\u679c\u4ed6\u4eec\u7684\u4ef7\u7b7e\u76f8\u540c\uff0c\u5373 $c_l = c_{l + 1} = \\dots = c_r$\uff0c\u5219\u4ed6\u4eec\u53ef\u4ee5\u5171\u7528\u4e00\u4e2a\u4ef7\u7b7e\u3002\n\n\u8bf7\u95ee\u6700\u5c11\u9700\u8981\u591a\u5c11\u4ef7\u7b7e\uff1f\n\n\u591a\u7ec4\u6570\u636e\uff0c\u4fdd\u8bc1 $n$ \u4e4b\u548c\u4e0d\u8d85\u8fc7 $2 \\times 10^5$\uff0c$1 \\leq a_i \\leq 10^9$\uff0c$1 \\leq b_i \\leq 10^4$\u3002\n\nprovider\uff1a\u4e00\u6276\u82cf\u4e00"
}