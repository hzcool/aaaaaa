{
    "description": "Jamie loves sleeping. One day, he decides that he needs to wake up at exactly $ hh:mm $ . However, he hates waking up, so he wants to make waking up less painful by setting the alarm at a lucky time. He will then press the snooze button every $ x $ minutes until $ hh:mm $ is reached, and only then he will wake up. He wants to know what is the smallest number of times he needs to press the snooze button.\n\nA time is considered lucky if it contains a digit ' $ 7 $ '. For example, $ 13:07 $ and $ 17:27 $ are lucky, while $ 00:48 $ and $ 21:34 $ are not lucky.\n\nNote that it is not necessary that the time set for the alarm and the wake-up time are on the same day. It is guaranteed that there is a lucky time Jamie can set so that he can wake at $ hh:mm $ .\n\nFormally, find the smallest possible non-negative integer $ y $ such that the time representation of the time $ x\u00b7y $ minutes before $ hh:mm $ contains the digit ' $ 7 $ '.\n\nJamie uses 24-hours clock, so after $ 23:59 $ comes $ 00:00 $ .",
    "inputFormat": "The first line contains a single integer $ x $ ( $ 1<=x<=60 $ ).\n\nThe second line contains two two-digit integers, $ hh $ and $ mm $ ( $ 00<=hh<=23,00<=mm<=59 $ ).",
    "outputFormat": "Print the minimum number of times he needs to press the button.",
    "samples": [
        [
            "3\n11 23\n",
            "2\n"
        ],
        [
            "5\n01 07\n",
            "0\n"
        ]
    ],
    "hint": "In the first sample, Jamie needs to wake up at 11:23. So, he can set his alarm at 11:17. He would press the snooze button when the alarm rings at 11:17 and at 11:20.\n\nIn the second sample, Jamie can set his alarm at exactly at 01:07 which is lucky.",
    "translation": "\u9898\u76ee\u63cf\u8ff0\n\nJamie\u975e\u5e38\u559c\u6b22\u7761\u89c9\u3002\u4e00\u5929\uff0c\u4ed6\u51b3\u5b9a\u8981\u5728hh:mm\u7684\u65f6\u5019\u8d77\u5e8a\u3002\u7136\u800c\uff0c\u4ed6\u4e5f\u975e\u5e38\u8ba8\u538c\u8d77\u5e8a\uff0c\u6240\u4ee5\u4ed6\u60f3\u628a\u95f9\u949f\u8bbe\u7f6e\u5728\u4e00\u4e2a\u5e78\u8fd0\u7684\u65f6\u95f4\u3002\u63a5\u7740\u4ed6\u6309\u4e0b\u4e00\u4e2a\u795e\u5947\u7684\u6309\u94ae\uff08\u8d2a\u7761\u6309\u94ae\uff09\uff0c\u5b83\u53ef\u4ee5\u4f7f\u95f9\u949f\u5728x\u5206\u949f\u540e\u54cd\uff0c\u76f4\u5230hh:mm\u3002\u73b0\u5728\uff0c\u4ed6\u60f3\u77e5\u9053\u4ed6\u81f3\u5c11\u8981\u6309\u591a\u5c11\u6b21\u8d2a\u7761\u6309\u94ae\u3002\n\n\u82e5hh:mm\u4e2d\u5305\u542b\u6570\u5b577\uff0c\u5219\u5b83\u662f\u5e78\u8fd0\u7684\uff0c\u5176\u5b83\u65f6\u95f4\u90fd\u4e0d\u662f\u5e78\u8fd0\u7684\u3002\u6bd4\u5982\uff0c13:07\uff0c17:27\u662f\u5e78\u8fd0\u7684\uff0c00:48\uff0c21:34\u5219\u4e0d\u662f\u3002\n\n\u6ce8\u610f\uff1a\u95f9\u949f\u8bbe\u7f6e\u7684\u65f6\u95f4\u548chh:mm\u4e0d\u4e00\u5b9a\u8981\u5728\u540c\u4e00\u5929\uff0cJamie\u7684\u95f9\u949f\u662f24\u5c0f\u65f6\u5236\u7684\uff0c\u572823:59\u540e\u662f00:00\u3002\n\n\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n\n\u8f93\u5165\uff1a\n\n\u7b2c\u4e00\u884c\uff1ax\uff1b\n\n\u7b2c\u4e8c\u884c\uff1ahh mm\uff08\u4e2d\u95f4\u6709\u4e00\u4e2a\u7a7a\u683c\uff09\uff0800\u2264hh\u226423,00\u2264mm\u226459\uff09\u3002\n\n\u8f93\u51fa\uff1a\n\n\u4ec5\u4e00\u884c\uff1aJamie\u6700\u5c11\u9700\u8981\u6309\u4e0b\u795e\u5947\u6309\uff08hai\uff09\u94ae\uff08luo\uff09\u7684\u6b21\u6570\u3002\n\n\u8bf4\u660e \u5728\u7b2c\u4e00\u4e2a\u6837\u4f8b\u4e2d\uff0cJaime\u9700\u8981\u572811:23\u8d77\u5e8a\u3002\u6240\u4ee5\u4ed6\u53ef\u4ee5\u5c06\u95f9\u949f\u8bbe\u7f6e\u572811:17\uff0c\u5e76\u6309\u4e0b\u4e24\u6b21\u8d2a\u7761\u6309\u94ae\u3002\n\n\u5728\u7b2c\u4e8c\u4e2a\u6837\u4f8b\u4e2d\uff0cJaime\u53ef\u4ee5\u76f4\u63a5\u5c06\u95f9\u949f\u8bbe\u7f6e\u572801:07,\u56e0\u4e3a\u5b83\u672c\u8eab\u5c31\u662f\u5e78\u8fd0\u7684\u3002"
}