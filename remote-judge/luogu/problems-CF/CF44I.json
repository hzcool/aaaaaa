{
    "description": "Little Masha loves arranging her toys into piles on the floor. And she also hates it when somebody touches her toys. One day Masha arranged all her $ n $ toys into several piles and then her elder brother Sasha came and gathered all the piles into one. Having seen it, Masha got very upset and started crying. Sasha still can't calm Masha down and mom is going to come home soon and punish Sasha for having made Masha crying. That's why he decides to restore the piles' arrangement. However, he doesn't remember at all the way the toys used to lie. Of course, Masha remembers it, but she can't talk yet and can only help Sasha by shouting happily when he arranges the toys in the way they used to lie. That means that Sasha will have to arrange the toys in every possible way until Masha recognizes the needed arrangement. The relative position of the piles and toys in every pile is irrelevant, that's why the two ways of arranging the toys are considered different if can be found two such toys that when arranged in the first way lie in one and the same pile and do not if arranged in the second way. Sasha is looking for the fastest way of trying all the ways because mom will come soon. With every action Sasha can take a toy from any pile and move it to any other pile (as a result a new pile may appear or the old one may disappear). Sasha wants to find the sequence of actions as a result of which all the pile arrangement variants will be tried exactly one time each. Help Sasha. As we remember, initially all the toys are located in one pile.",
    "inputFormat": "The first line contains an integer $ n $ ( $ 1<=n<=10 $ ) \u2014 the number of toys.",
    "outputFormat": "In the first line print the number of different variants of arrangement of toys into piles. Then print all the ways of arranging toys into piles in the order in which Sasha should try them (i.e. every next way must result from the previous one through the operation described in the statement). Every way should be printed in the following format. In every pile the toys should be arranged in ascending order of the numbers. Then the piles should be sorted in ascending order of the numbers of the first toys there. Output every way on a single line. Cf. the example to specify the output data format. If the solution is not unique, output any of them.",
    "samples": [
        [
            "3\n",
            "5\n{1,2,3}\n{1,2},{3}\n{1},{2,3}\n{1},{2},{3}\n{1,3},{2}"
        ]
    ],
    "hint": "",
    "translation": "\u4e00\u4e2a\u96c6\u5408 $\\{1,2,...,n\\}$ \u628a\u5b83\u5206\u6210\u82e5\u5e72\u4e2a\u5b50\u96c6\u3002\u8981\u6c42\uff1a\n\n1. \u904d\u5386\u6240\u6709\u53ef\u80fd\u7684\u65b9\u5f0f\u3002\n2. \u6bcf\u4e00\u79cd\u5206\u5272\u65b9\u5f0f\u76f8\u5bf9\u4e8e\u524d\u4e00\u79cd\u5206\u5272\u65b9\u5f0f\u53ea\u80fd\u62c6\u5f00\u4e00\u4e2a\u5b50\u96c6\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u6216\u628a\u4e00\u4e2a\u5355\u5143\u7d20\u7684\u5b50\u96c6\u5e76\u5230\u5176\u4ed6\u5b50\u96c6\uff0c\u6216\u628a\u4e00\u4e2a\u5b50\u96c6\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\u79fb\u5230\u5176\u4ed6\u5b50\u96c6\u3002\n3. \u6bcf\u4e00\u4e2a\u65b9\u6848\u4e2d\u7684\u5b50\u96c6\u6309\u7b2c\u4e00\u4e2a\u5143\u7d20\u4ece\u5c0f\u5230\u5927\u6392\uff0c\u5b50\u96c6\u5185\u90e8\u7684\u5143\u7d20\u4ece\u5c0f\u5230\u5927\u6392\u3002\n\n\u6ee1\u8db3\u4ee5\u4e0a\u6761\u4ef6\u7684\u6240\u6709\u65b9\u5f0f\u90fd\u662f\u53ef\u884c\u7684\uff0c\u6709 SPJ\u3002"
}