{
    "description": "Andrew and Eugene are playing a game. Initially, Andrew has string $ s $ , consisting of digits. Eugene sends Andrew multiple queries of type \" $ d_{i}\u2192t_{i} $ \", that means \"replace all digits $ d_{i} $ in string $ s $ with substrings equal to $ t_{i} $ \". For example, if $ s=123123 $ , then query \" $ 2\u219200 $ \" transforms $ s $ to $ 10031003 $ , and query \" $ 3\u2192 $ \" (\"replace 3 by an empty string\") transforms it to $ s=1212 $ . After all the queries Eugene asks Andrew to find the remainder after division of number with decimal representation equal to $ s $ by $ 1000000007\u00a0(10^{9}+7) $ . When you represent $ s $ as a decimal number, please ignore the leading zeroes; also if $ s $ is an empty string, then it's assumed that the number equals to zero.\n\nAndrew got tired of processing Eugene's requests manually and he asked you to write a program for that. Help him!",
    "inputFormat": "The first line contains string $ s $ ( $ 1<=|s|<=10^{5} $ ), consisting of digits \u2014 the string before processing all the requests.\n\nThe second line contains a single integer $ n $ ( $ 0<=n<=10^{5} $ ) \u2014 the number of queries.\n\nThe next $ n $ lines contain the descriptions of the queries. The $ i $ -th query is described by string \" $ d_{i} $ -> $ t_{i} $ \", where $ d_{i} $ is exactly one digit (from 0 to 9), $ t_{i} $ is a string consisting of digits ( $ t_{i} $ can be an empty string). The sum of lengths of $ t_{i} $ for all queries doesn't exceed $ 10^{5} $ . The queries are written in the order in which they need to be performed.",
    "outputFormat": "Print a single integer \u2014 remainder of division of the resulting number by $ 1000000007\u00a0(10^{9}+7) $ .",
    "samples": [
        [
            "123123\n1\n2-&gt;00\n",
            "10031003\n"
        ],
        [
            "123123\n1\n3-&gt;\n",
            "1212\n"
        ],
        [
            "222\n2\n2-&gt;0\n0-&gt;7\n",
            "777\n"
        ],
        [
            "1000000008\n0\n",
            "1\n"
        ]
    ],
    "hint": "Note that the leading zeroes are not removed from string $ s $ after the replacement (you can see it in the third sample).",
    "translation": "### \u9898\u610f\n\u6709\u4e00\u4e2a\u7531\u6570\u5b57\u7ec4\u6210\u7684\u5b57\u7b26\u4e32$s$\u548c$n$\u6761\u6307\u4ee4$d_i->t_i$\u3002\u610f\u601d\u662f\u7528$t_i$\u66ff\u6362\u6240\u6709\u5b57\u7b26\u4e32\u4e2d\u7684$d_i$\u3002\u4f8b\u5982\uff0c\u5982\u679c$s=123123$\uff0c\u5219\u201c2\u219200\u201d\u5c06\u628a$s$\u8f6c\u6362\u4e3a$10031003$\uff0c\u67e5\u8be2\u201c3\u2192\u201d(\u7528\u7a7a\u5b57\u7b26\u4e32\u66ff\u6362$3$),\u5c06$s$\u8f6c\u6362\u4e3a$s=1212$\u3002\u5728\u6240\u6709\u7684\u6307\u4ee4\u4e4b\u540e\uff0c\u8bf7\u5728\u5341\u8fdb\u5236\u6570\u7b49\u4e8e$s$\u7684\u60c5\u51b5\u4e0b\u53d6\u6a21$mod=1000000007(10^9+7)$\u3002\n\n\u540c\u65f6**\u9700\u8981\u6ce8\u610f\uff0c\u5728$s$\u8868\u793a\u4e3a\u5341\u8fdb\u5236\u6570\u65f6\uff0c\u9700\u8981\u5ffd\u7565\u524d\u5bfc$0$\uff1b\u5982\u679c$s$\u662f\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u5c31\u9ed8\u8ba4\u4e3a$0$**\u3002\n\n-------\n\n### \u8f93\u5165\u683c\u5f0f\n\u7b2c\u4e00\u884c\uff0c\u4e00\u4e2a\u5b57\u7b26\u4e32$s(1\\le\\vert{s}\\vert\\le 10^5)$\uff1b    \n\u7b2c\u4e8c\u884c\uff0c\u4e00\u4e2a\u6574\u6570$n(0\\le n\\le 10^5)$,\u8868\u793a\u6307\u4ee4\u7684\u6761\u6570\uff1b   \n\u7b2c\u4e09\u884c\u5230\u7b2c$n+2$\u884c\uff0c\u6bcf\u884c\u4e00\u6761\u6307\u4ee4\uff0c\u683c\u5f0f\u4e3a$d_i->t_i$,\u5176\u4e2d\u6bcf\u4e00\u4e2a\u5b57\u7b26\u90fd\u662f\u7531$0-9$\u7684\u6570\u5b57\u7ec4\u6210\u3002**\u6ce8\u610f\uff0c$t_i$\u53ef\u80fd\u4e3a\u7a7a\uff0c\u4fdd\u8bc1\u6240\u6709$t_i$\u7684\u957f\u5ea6\u603b\u548c\u4e0d\u8d85\u8fc7$10^5$**\u3002\u5bf9\u4e8e\u6240\u6709\u7684\u6307\u4ee4\uff0c\u90fd\u662f\u6309\u7167\u8f93\u5165\u7684\u987a\u5e8f\u8fdb\u884c\u5de5\u4f5c\u7684\u3002\n\n-------\n\n### \u8f93\u51fa\u683c\u5f0f\n\u4e00\u4e2a\u6574\u6570\uff0c**\u5e76\u5bf9$1000000007(10^9+7)$\u53d6\u6a21**\u3002\n\n-------\n### \u6570\u636e\u6837\u4f8b\n**\u8f93\u5165**\n```\n123123\n1\n2->00\n```\n\n**\u8f93\u51fa**\n```\n10031003\n```"
}