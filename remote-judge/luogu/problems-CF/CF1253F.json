{
    "description": "You're given a simple, undirected, connected, weighted graph with $ n $ nodes and $ m $ edges.\n\nNodes are numbered from $ 1 $ to $ n $ . There are exactly $ k $ centrals (recharge points), which are nodes $ 1, 2, \\ldots, k $ .\n\nWe consider a robot moving into this graph, with a battery of capacity $ c $ , not fixed by the constructor yet. At any time, the battery contains an integer amount $ x $ of energy between $ 0 $ and $ c $ inclusive.\n\nTraversing an edge of weight $ w_i $ is possible only if $ x \\ge w_i $ , and costs $ w_i $ energy points ( $ x := x - w_i $ ).\n\nMoreover, when the robot reaches a central, its battery is entirely recharged ( $ x := c $ ).\n\nYou're given $ q $ independent missions, the $ i $ -th mission requires to move the robot from central $ a_i $ to central $ b_i $ .\n\nFor each mission, you should tell the minimum capacity required to acheive it.",
    "inputFormat": "The first line contains four integers $ n $ , $ m $ , $ k $ and $ q $ ( $ 2 \\le k \\le n \\le 10^5 $ and $ 1 \\le m, q \\le 3 \\cdot 10^5 $ ).\n\nThe $ i $ -th of the next $ m $ lines contains three integers $ u_i $ , $ v_i $ and $ w_i $ ( $ 1 \\le u_i, v_i \\le n $ , $ u_i \\neq v_i $ , $ 1 \\le w_i \\le 10^9 $ ), that mean that there's an edge between nodes $ u $ and $ v $ , with a weight $ w_i $ .\n\nIt is guaranteed that the given graph is simple (there is no self-loop, and there is at most one edge between every pair of nodes) and connected.\n\nThe $ i $ -th of the next $ q $ lines contains two integers $ a_i $ and $ b_i $ ( $ 1 \\le a_i, b_i \\le k $ , $ a_i \\neq b_i $ ).",
    "outputFormat": "You have to output $ q $ lines, where the $ i $ -th line contains a single integer : the minimum capacity required to acheive the $ i $ -th mission.",
    "samples": [
        [
            "10 9 3 1\n10 9 11\n9 2 37\n2 4 4\n4 1 8\n1 5 2\n5 7 3\n7 3 2\n3 8 4\n8 6 13\n2 3\n",
            "12\n"
        ],
        [
            "9 11 3 2\n1 3 99\n1 4 5\n4 5 3\n5 6 3\n6 4 11\n6 7 21\n7 2 6\n7 8 4\n8 9 3\n9 2 57\n9 3 2\n3 1\n2 3\n",
            "38\n15\n"
        ]
    ],
    "hint": "In the first example, the graph is the chain $ 10 - 9 - 2^C - 4 - 1^C - 5 - 7 - 3^C - 8 - 6 $ , where centrals are nodes $ 1 $ , $ 2 $ and $ 3 $ .\n\nFor the mission $ (2, 3) $ , there is only one simple path possible. Here is a simulation of this mission when the capacity is $ 12 $ .\n\n- The robot begins on the node $ 2 $ , with $ c = 12 $ energy points.\n- The robot uses an edge of weight $ 4 $ .\n- The robot reaches the node $ 4 $ , with $ 12 - 4 = 8 $ energy points.\n- The robot uses an edge of weight $ 8 $ .\n- The robot reaches the node $ 1 $ with $ 8 - 8 = 0 $ energy points.\n- The robot is on a central, so its battery is recharged. He has now $ c = 12 $ energy points.\n- The robot uses an edge of weight $ 2 $ .\n- The robot is on the node $ 5 $ , with $ 12 - 2 = 10 $ energy points.\n- The robot uses an edge of weight $ 3 $ .\n- The robot is on the node $ 7 $ , with $ 10 - 3 = 7 $ energy points.\n- The robot uses an edge of weight $ 2 $ .\n- The robot is on the node $ 3 $ , with $ 7 - 2 = 5 $ energy points.\n- The robot is on a central, so its battery is recharged. He has now $ c = 12 $ energy points.\n- End of the simulation.\n\nNote that if value of $ c $ was lower than $ 12 $ , we would have less than $ 8 $ energy points on node $ 4 $ , and we would be unable to use the edge $ 4 \\leftrightarrow 1 $ of weight $ 8 $ . Hence $ 12 $ is the minimum capacity required to acheive the mission.\n\n\u2014\n\nThe graph of the second example is described here (centrals are red nodes):\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1253F/a26fbeba71b5c3f08f761ccd3ba5eda79178ef04.png)The robot can acheive the mission $ (3, 1) $ with a battery of capacity $ c = 38 $ , using the path $ 3 \\rightarrow 9 \\rightarrow 8 \\rightarrow 7 \\rightarrow 2 \\rightarrow 7 \\rightarrow 6 \\rightarrow 5 \\rightarrow 4 \\rightarrow 1 $\n\nThe robot can acheive the mission $ (2, 3) $ with a battery of capacity $ c = 15 $ , using the path $ 2 \\rightarrow 7 \\rightarrow 8 \\rightarrow 9 \\rightarrow 3 $",
    "translation": "\u7ed9\u4f60\u4e00\u5f20 $N$ \u4e2a\u70b9\u7684\u5e26\u6743\u65e0\u5411\u8fde\u901a\u56fe\uff0c\u5176\u4e2d\u7ed3\u70b9 $1,2,\u2026,k$ \u4e3a\u5145\u7535\u4e2d\u5fc3\u3002\n\n\u4e00\u4e2a\u673a\u5668\u4eba\u5728\u56fe\u4e2d\u884c\u8d70\uff0c\u5047\u8bbe\u673a\u5668\u4eba\u7684\u7535\u6c60\u5bb9\u91cf\u4e3a $c$\uff0c\u5219\u4efb\u4f55\u65f6\u523b\uff0c\u673a\u5668\u4eba\u7684\u7535\u91cf $x$ \u90fd\u5fc5\u987b\u6ee1\u8db3 $0\\le x\\le c$\u3002\u5982\u679c\u673a\u5668\u4eba\u6cbf\u7740\u4e00\u6761\u8fb9\u6743\u4e3a $w$ \u7684\u8fb9\u4ece\u7ed3\u70b9 $i$ \u8d70\u5230\u7ed3\u70b9 $j$\uff0c\u5b83\u7684\u7535\u91cf\u4f1a\u51cf\u5c11 $w$\u3002\u673a\u5668\u4eba\u53ef\u4ee5\u5728\u5230\u8fbe\u67d0\u4e2a\u5145\u7535\u4e2d\u5fc3\u65f6\u628a\u7535\u91cf\u5145\u6ee1\u3002\n\n\u73b0\u5728\u6709 $q$ \u4e2a\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u673a\u5668\u4eba\u8981\u4ece $a$ \u70b9\u5230\u8fbe $b$ \u70b9\uff0c\u7535\u6c60\u5bb9\u91cf\u81f3\u5c11\u4e3a\u591a\u5c11\uff0c\u5404\u4e2a\u8be2\u95ee\u76f8\u4e92\u72ec\u7acb\u3002\u4fdd\u8bc1 $a$ \u70b9\u548c $b$ \u70b9\u90fd\u662f\u5145\u7535\u4e2d\u5fc3\u3002\n\ntranslated by vectorwyx"
}