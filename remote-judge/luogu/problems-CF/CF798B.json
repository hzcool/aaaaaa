{
    "description": "Mike has $ n $ strings $ s_{1},s_{2},...,s_{n} $ each consisting of lowercase English letters. In one move he can choose a string $ s_{i} $ , erase the first character and append it to the end of the string. For example, if he has the string \"coolmike\", in one move he can transform it into the string \"oolmikec\".\n\nNow Mike asks himself: what is minimal number of moves that he needs to do in order to make all the strings equal?",
    "inputFormat": "The first line contains integer $ n $ ( $ 1<=n<=50 $ ) \u2014 the number of strings.\n\nThis is followed by $ n $ lines which contain a string each. The $ i $ -th line corresponding to string $ s_{i} $ . Lengths of strings are equal. Lengths of each string is positive and don't exceed $ 50 $ .",
    "outputFormat": "Print the minimal number of moves Mike needs in order to make all the strings equal or print $ -1 $ if there is no solution.",
    "samples": [
        [
            "4\nxzzwo\nzwoxz\nzzwox\nxzzwo\n",
            "5\n"
        ],
        [
            "2\nmolzv\nlzvmo\n",
            "2\n"
        ],
        [
            "3\nkc\nkc\nkc\n",
            "0\n"
        ],
        [
            "3\naa\naa\nab\n",
            "-1\n"
        ]
    ],
    "hint": "In the first sample testcase the optimal scenario is to perform operations in such a way as to transform all strings into \"zwoxz\".",
    "translation": "## \u9898\u76ee\u63cf\u8ff0\uff1a\r\n\r\nMike\u6709n\u4e2a\u5b57\u7b26\u4e32s1,s2,\u2026\u2026\uff0csn\uff0c\u6bcf\u4e2a\u5b57\u7b26\u4e32\u5747\u7531\u5c0f\u5199\u5b57\u6bcd\u6784\u6210\u3002 \u6bcf\u6b21\u79fb\u52a8\u4f60\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a\u5b57\u7b26\u4e32si, \u7b2c1\u4e2a\u5b57\u7b26\u79fb\u52a8\u6700\u540e\uff0c\u6bd4\u5982\u5b57\u7b26\u4e32 \"coolmikecoolmike\", \u79fb\u52a81\u6b21\u53d8\u6210\u5b57\u7b26\u4e32 \"oolmikecoolmikec\"\u3002\r\n\r\n\u8bf7\u8ba1\u7b97\u81f3\u5c11\u9700\u8981\u79fb\u52a8\u591a\u5c11\u6b21\uff0c\u53ef\u4ee5\u4f7f\u5f97n\u4e2a\u5b57\u7b26\u4e32\u90fd\u53d8\u6210\u76f8\u540c\u3002\r\n\r\n## \u8f93\u5165\u683c\u5f0f\uff1a\r\n\r\n\u7b2c\u4e00\u884c\uff0c\u4e00\u4e2a\u6574\u6570n(1\u2264n\u226450)\u3002 \u63a5\u4e0b\u6765n\u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u76f8\u5f53\uff0c\u4e14\u957f\u5ea6\u4e0d\u8d85\u8fc750\u3002\r\n\r\n## \u8f93\u51fa\u683c\u5f0f\uff1a\r\n\r\n\u8f93\u51fa\u6700\u5c0f\u79fb\u52a8\u6b21\u6570\uff0c\u65e0\u89e3\u5219\u8f93\u51fa-1."
}