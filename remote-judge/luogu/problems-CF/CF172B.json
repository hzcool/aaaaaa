{
    "description": "Polycarpus has recently got interested in sequences of pseudorandom numbers. He learned that many programming languages generate such sequences in a similar way: ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF172B/02c4eeecb957768b3b96e1481a979d6934aab656.png) (for $ i>=1 $ ). Here $ a $ , $ b $ , $ m $ are constants, fixed for the given realization of the pseudorandom numbers generator, $ r_{0} $ is the so-called $ randseed $ (this value can be set from the program using functions like RandSeed(r) or srand(n)), and ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF172B/99fd5677ca5c02520be7595d9b1eaf3e9972e601.png) denotes the operation of taking the remainder of division.\n\nFor example, if $ a=2,b=6,m=12,r_{0}=11 $ , the generated sequence will be: $ 4,2,10,2,10,2,10,2,10,2,10,... $ .\n\nPolycarpus realized that any such sequence will sooner or later form a cycle, but the cycle may occur not in the beginning, so there exist a preperiod and a period. The example above shows a preperiod equal to 1 and a period equal to 2.\n\nYour task is to find the period of a sequence defined by the given values of $ a,b,m $ and $ r_{0} $ . Formally, you have to find such minimum positive integer $ t $ , for which exists such positive integer $ k $ , that for any $ i>=k $ : $ r_{i}=r_{i+t} $ .",
    "inputFormat": "The single line of the input contains four integers $ a $ , $ b $ , $ m $ and $ r_{0} $ ( $ 1<=m<=10^{5},0<=a,b<=1000,0<=r_{0}&lt;m $ ), separated by single spaces.",
    "outputFormat": "Print a single integer \u2014 the period of the sequence.",
    "samples": [
        [
            "2 6 12 11\n",
            "2\n"
        ],
        [
            "2 3 5 1\n",
            "4\n"
        ],
        [
            "3 6 81 9\n",
            "1\n"
        ]
    ],
    "hint": "The first sample is described above.\n\nIn the second sample the sequence is (starting from the first element): $ 0,3,4,1,0,3,4,1,0,... $\n\nIn the third sample the sequence is (starting from the first element): $ 33,24,78,78,78,78,... $",
    "translation": "\u6700\u8fd1\uff0c\u73c2\u6735\u8389\u5728\u5b66\u4e60`rand()`/`random()`\uff0c\u5979\u89c9\u5f97\u8fd9\u4e2a\u5f88\u6709\u8da3\uff0c\u6240\u4ee5\u51b3\u5b9a\u81ea\u5df1\u5f04\u4e00\u4e2a\u4f2a\u968f\u673a\u5e8f\u5217\u3002\n\n\u73c2\u6735\u8389\u81ea\u5df1\u7684\u4f2a\u968f\u673a\u7684\u751f\u6210\u673a\u5236\u3002\n```\ni=1\nwhile true:\n  x=(a*x+b)%m\n  print(x)\n```\n\u9898\u76ee\u8f93\u5165abmx\uff0c\u6c42\u4f2a\u968f\u673a\u6570\u5faa\u73af\u8282\u7684\u957f\u5ea6\u3002\n\n> 1. \u6837\u4f8bI\uff1a\n> - \u73c2\u6735\u8389\u751f\u6210\u7684\u6570\u5217\u4e3a`4 2 10 2 10 2...`\uff0c\u5faa\u73af\u8282\u4e3a`2 10`\uff0c\u957f\u5ea6\u4e3a2\n> 2. \u6837\u4f8bII\uff1a\n> - \u73c2\u6735\u8389\u751f\u6210\u7684\u6570\u5217\u4e3a`0 3 4 1 0 3 4 1 0...`\uff0c\u5faa\u73af\u8282\u4e3a`0 3 4 1`\uff0c\u957f\u5ea6\u4e3a4\n> 3. \u6837\u4f8bIII\n> - \u73c2\u6735\u8389\u751f\u6210\u7684\u6570\u5217\u4e3a`33 24 78 78 78...`\uff0c\u5faa\u73af\u8282\u4e3a`78`\uff0c\u957f\u5ea6\u4e3a1\n"
}