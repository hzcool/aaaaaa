{
    "description": "You are given an integer $ n $ .\n\nYou can perform any of the following operations with this number an arbitrary (possibly, zero) number of times:\n\n1. Replace $ n $ with $ \\frac{n}{2} $ if $ n $ is divisible by $ 2 $ ;\n2. Replace $ n $ with $ \\frac{2n}{3} $ if $ n $ is divisible by $ 3 $ ;\n3. Replace $ n $ with $ \\frac{4n}{5} $ if $ n $ is divisible by $ 5 $ .\n\nFor example, you can replace $ 30 $ with $ 15 $ using the first operation, with $ 20 $ using the second operation or with $ 24 $ using the third operation.\n\nYour task is to find the minimum number of moves required to obtain $ 1 $ from $ n $ or say that it is impossible to do it.\n\nYou have to answer $ q $ independent queries.",
    "inputFormat": "The first line of the input contains one integer $ q $ ( $ 1 \\le q \\le 1000 $ ) \u2014 the number of queries.\n\nThe next $ q $ lines contain the queries. For each query you are given the integer number $ n $ ( $ 1 \\le n \\le 10^{18} $ ).",
    "outputFormat": "Print the answer for each query on a new line. If it is impossible to obtain $ 1 $ from $ n $ , print -1. Otherwise, print the minimum number of moves required to do it.",
    "samples": [
        [
            "7\n1\n10\n25\n30\n14\n27\n1000000000000000000\n",
            "0\n4\n6\n6\n-1\n6\n72\n"
        ]
    ],
    "hint": "",
    "translation": "### \u9898\u76ee\u63cf\u8ff0\n\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570$n$\n\n\u4f60\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u6570\u8fdb\u884c\u4efb\u610f\u591a\u6b21\uff08\u53ef\u4ee5\u4e3a$0$\uff09\u5982\u4e0b\u7684\u64cd\u4f5c\n\n1. \u5982\u679c$n$\u662f$2$\u7684\u500d\u6570\uff0c\u628a$n$\u66ff\u6362\u6210$\\frac{n}{2}$\n2. \u5982\u679c$n$\u662f$3$\u7684\u500d\u6570\uff0c\u628a$n$\u66ff\u6362\u6210$\\frac{2n}{3}$\n3. \u5982\u679c$n$\u662f$5$\u7684\u500d\u6570\uff0c\u628a$n$\u66ff\u6362\u6210$\\frac{4n}{5}$\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u64cd\u4f5c$1$\u628a$30$\u53d8\u6210$15$\uff0c\u7528\u64cd\u4f5c$2$\u628a$30$\u53d8\u6210$20$\uff0c\u7528\u64cd\u4f5c$3$\u628a$30$\u53d8\u6210$24$\n\n\u4f60\u7684\u4efb\u52a1\u662f\u627e\u5230\u628a$n$\u53d8\u6210$1$\u7684\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\uff0c\u6216\u8005\u8bf4\u4e0d\u53ef\u80fd\u505a\u5230\n\n\u4f60\u9700\u8981\u56de\u7b54$q$\u4e2a\u72ec\u7acb\u7684\u8be2\u95ee\n\n### \u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n#### \u8f93\u5165\u683c\u5f0f\n\u8f93\u5165\u7684\u7b2c\u4e00\u884c\u5305\u62ec\u4e00\u4e2a\u6574\u6570$q$\uff08$1\\leq q\\leq 1000$\uff09\u2014\u2014\u8be2\u95ee\u7684\u6570\u91cf\n\n\u63a5\u4e0b\u6765$q$\u884c\u6bcf\u884c\u4e00\u4e2a\u8be2\u95ee\uff0c\u6bcf\u4e2a\u8be2\u95ee\u7ed9\u4f60\u4e00\u4e2a$n$\uff08$1\\leq n\\leq 10^{18}$\uff09\n\n#### \u8f93\u51fa\u683c\u5f0f\n\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u4e00\u884c\u8f93\u51fa\u4e00\u4e2a\u7b54\u6848\uff0c\u5982\u679c\u4e0d\u53ef\u80fd\u4ece$n$\u53d8\u6210$1$\uff0c\u8f93\u51fa$-1$\uff1b\u5426\u5219\u8f93\u51fa\u64cd\u4f5c\u7684\u6700\u5c11\u6b21\u6570\n\n"
}