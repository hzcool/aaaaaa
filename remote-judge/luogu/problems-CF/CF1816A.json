{
    "description": "Ian and Mary are frogs living on lattice points of the Cartesian coordinate plane, with Ian living on $ (0,0) $ and Mary living on $ (a,b) $ .\n\nIan would like to visit Mary by jumping around the Cartesian coordinate plane. Every second, he jumps from his current position $ (x_p, y_p) $ to another lattice point $ (x_q, y_q) $ , such that no lattice point other than $ (x_p, y_p) $ and $ (x_q, y_q) $ lies on the segment between point $ (x_p, y_p) $ and point $ (x_q, y_q) $ .\n\nAs Ian wants to meet Mary as soon as possible, he wants to jump towards point $ (a,b) $ using at most $ 2 $ jumps. Unfortunately, Ian is not good at maths. Can you help him?\n\nA lattice point is defined as a point with both the $ x $ -coordinate and $ y $ -coordinate being integers.",
    "inputFormat": "The first line contains a single integer $ t $ ( $ 1 \\le t \\le 500 $ ) \u2014 the number of test cases. The description of test cases follows.\n\nThe first and only line of each test case contains two integers $ a $ and $ b $ ( $ 1\\le a,b\\le 10^9 $ ) \u2014 the coordinates of the lattice point where Mary lives.",
    "outputFormat": "For each test case, print an integer $ n $ ( $ 1 \\le n \\le 2 $ ) on the first line, denoting the number of jumps Ian uses in order to meet Mary. Note that you do not need to minimize the number of jumps.\n\nOn the $ i $ -th line of the next $ n $ lines, print two integers $ 0 \\le x_i,y_i \\le 10^9 $ separated by a space, denoting Ian's location $ (x_i,y_i) $ after the $ i $ -th jump. $ x_n = a $ , $ y_n = b $ must hold.\n\nIan's initial location and his locations after each of the $ n $ jumps need not be distinct.\n\nIf there are multiple solutions, output any.",
    "samples": [
        [
            "8\n3 4\n4 4\n3 6\n2 2\n1 1\n7 3\n2022 2023\n1000000000 1000000000",
            "1\n3 4\n2\n3 2\n4 4\n2\n5 3\n3 6\n2\n1 0\n2 2\n1\n1 1\n1\n7 3\n1\n2022 2023\n2\n69420420 469696969\n1000000000 1000000000"
        ]
    ],
    "hint": "In the first test case:\n\n![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1816A/7f33abd00d526ffaeea8e4d3c101d5177c138947.png)\n\n $ (0,0) \\to (3,4) $\n\nIn the second test case:\n\n![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1816A/577a06cfefe0531c32a45b390d77d0693528c842.png)\n\n $ (0,0) \\to (3,2) \\to (4,4) $\n\nIn the third test case:\n\n![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1816A/657d3f3136c48035420c8d1a7eecdfe06cc7f59d.png)\n\n $ (0,0) \\to (5,3) \\to (3,6) $",
    "translation": "### \u9898\u76ee\u63cf\u8ff0\n\n$\\textrm{lan}$ \u548c $\\textrm{Mary}$ \u662f\u751f\u6d3b\u5728\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u683c\u70b9\u4e0a\u7684\u9752\u86d9\uff0c$\\textrm{lan}$ \u5728 $(0,0)$\uff0c\u800c $\\textrm{Mary}$ \u5728 $(a,b)$\u3002\n\n$\\textrm{lan}$ \u60f3\u5728 \u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u4e0a\u8df3\u6765\u8df3\u53bb\u53bb\u8bbf\u95ee $\\textrm{Mary}$\u3002\u6bcf\u4e00\u79d2\uff0c\u4ed6\u4f1a\u4ece\u5f53\u524d\u4f4d\u7f6e $(x_p,y_p)$ \u8df3\u5230\u6574\u70b9 $(x_q,y_q)$\uff0c\u4f7f\u5f97\u82e5\u7528\u4e00\u6761\u7ebf\u6bb5\u8fde\u63a5 $(x_p,y_p)$ \u548c $(x_q,y_q)$\uff0c\u6ca1\u6709\u6574\u70b9\u5728\u8fd9\u6761\u7ebf\u6bb5\u4e0a\u3002\n\n$\\textrm{lan}$ \u60f3\u5c3d\u5feb\u89c1\u5230 $\\textrm{Mary}$\uff0c\u6240\u4ee5\u4ed6\u60f3\u7528\u6700\u591a\u4e24\u6b21\u8df3\u8dc3\u5230 $(a,b)$\u3002\u4e0d\u5e78\u7684\u662f\uff0c$\\textrm{lan}$ \u4e0d\u592a\u4f1a\u6570\u5b66\uff0c\u4f60\u80fd\u5e2e\u5e2e\u4ed6\u5417\uff1f\n\n\u6574\u70b9\u88ab\u5b9a\u4e49\u4e3a $x$ \u5750\u6807\u548c $y$ \u5750\u6807\u90fd\u662f\u6574\u6570\u7684\u70b9\u3002\n\n### \u8f93\u5165\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570 $t$ ( $1\\le t\\le 500$ )\uff0c\u8868\u793a\u6d4b\u8bd5\u6570\u636e\u7684\u6570\u91cf\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\u636e\uff1a\n\n\u53ea\u6709\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6b63\u6574\u6570 $a,b$ ( $1\\le a,b\\le 10^9$ )\uff0c\u542b\u4e49\u5982\u9898\u9762\u6240\u793a\u3002\n\n### \u8f93\u51fa\u683c\u5f0f\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\u636e\uff1a\n\n\u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u6b63\u6574\u6570 $n$ ( $1\\le n\\le 2$ )\uff0c\u8868\u793a $\\textrm{lan}$ \u9700\u8981\u51e0\u6b21\u8df3\u8dc3\u8bbf\u95ee $\\textrm{Mary}$\u3002**\u6ce8\u610f\uff1a\u4f60\u4e0d\u9700\u8981\u8ba9 $n$ \u6700\u5c0f\u3002**\n\n\u4e0b\u9762\u662f $n$ \u884c\uff0c\u5728\u7b2c $i$ \u884c\u6709\u7528\u7a7a\u683c\u5206\u5f00\u7684\u4e24\u4e2a\u6574\u6570 $x_i,y_i$ ( $0\\le x_i,y_i\\le 10^9$ )\uff0c\u8868\u793a $\\textrm{lan}$ \u7b2c $i$ \u6b21\u4f1a\u8df3\u8dc3\u5230 $(x_i,y_i)$\u3002\u5fc5\u987b\u6ee1\u8db3 $x_n=a,y_n=b$\u3002\n\n$\\textrm{lan}$ \u6bcf\u6b21\u8df3\u8f6c\u540e\u7684\u4f4d\u7f6e\u4e0d\u9700\u8981\u662f\u4e0d\u540c\u7684\u3002\n\n\u5982\u679c\u6709\u591a\u7ec4\u89e3\uff0c\u8f93\u51fa\u4efb\u610f\u4e00\u4e2a\u3002"
}