{
    "description": "Little Susie, thanks to her older brother, likes to play with cars. Today she decided to set up a tournament between them. The process of a tournament is described in the next paragraph.\n\nThere are $ n $ toy cars. Each pair collides. The result of a collision can be one of the following: no car turned over, one car turned over, both cars turned over. A car is good if it turned over in no collision. The results of the collisions are determined by an $ n\u00d7n $ matrix $ \u0410 $ : there is a number on the intersection of the $ \u0456 $ -th row and $ j $ -th column that describes the result of the collision of the $ \u0456 $ -th and the $ j $ -th car:\n\n- $ -1 $ : if this pair of cars never collided. $ -1 $ occurs only on the main diagonal of the matrix.\n- $ 0 $ : if no car turned over during the collision.\n- $ 1 $ : if only the $ i $ -th car turned over during the collision.\n- $ 2 $ : if only the $ j $ -th car turned over during the collision.\n- $ 3 $ : if both cars turned over during the collision.\n\nSusie wants to find all the good cars. She quickly determined which cars are good. Can you cope with the task?",
    "inputFormat": "The first line contains integer $ n $ ( $ 1<=n<=100 $ ) \u2014 the number of cars.\n\nEach of the next $ n $ lines contains $ n $ space-separated integers that determine matrix $ A $ .\n\nIt is guaranteed that on the main diagonal there are $ -1 $ , and $ -1 $ doesn't appear anywhere else in the matrix.\n\nIt is guaranteed that the input is correct, that is, if $ A_{ij}=1 $ , then $ A_{ji}=2 $ , if $ A_{ij}=3 $ , then $ A_{ji}=3 $ , and if $ A_{ij}=0 $ , then $ A_{ji}=0 $ .",
    "outputFormat": "Print the number of good cars and in the next line print their space-separated indices in the increasing order.",
    "samples": [
        [
            "3\n-1 0 0\n0 -1 1\n0 2 -1\n",
            "2\n1 3 "
        ],
        [
            "4\n-1 3 3 3\n3 -1 3 3\n3 3 -1 3\n3 3 3 -1\n",
            "0\n"
        ]
    ],
    "hint": "",
    "translation": "### \u9898\u76ee\r\n\u6709n\u8f86\u73a9\u5177\u8f66\u3002\u4e24\u4e24\u5bf9\u649e\u3002\u78b0\u649e\u7684\u7ed3\u679c\u53ef\u80fd\u662f\u4e0b\u5217\u4e4b\u4e00\uff1a\u6ca1\u6709\u4efb\u4f55\u8f66\u7ffb\u8f66\uff0c\u6709\u4e00\u8f86\u8f66\u7ffb\u8f66\uff0c\u6216\u662f\u4e24\u8f86\u8f66\u7ffb\u8f66\u3002\u78b0\u649e\u7ed3\u679c\u7531\u4e00\u4e2an\u00d7n\u77e9\u9635AAA\u786e\u5b9a\uff1a\u5728\u7b2ci\u884c\u548c\u7b2cj\u5217\u7684\u4ea4\u53c9\u70b9\u4e0a\u6709\u4e00\u4e2a\u6570\u5b57\uff0c\u63cf\u8ff0\u4e86\u7b2ci\u8f86\u8f66\u548c\u7b2cj\u8f86\u8f66\u78b0\u649e\u7684\u7ed3\u679c\uff1a\r\n-1\uff1a\u5982\u679c\u8fd9\u5bf9\u8f66\u6ca1\u6709\u78b0\u649e\u3002\r\n-1\u53ea\u51fa\u73b0\u5728\u77e9\u9635\u7684\u5bf9\u89d2\u7ebf\u4e0a\u3002\r\n0\uff1a\u78b0\u649e\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u4efb\u4f55\u4e00\u8f86\u8f66\u7ffb\u8f66\u3002\r\n1\uff1a\u53ea\u6709\u7b2ci\u8f86\u8f66\u5728\u78b0\u649e\u4e2d\u7ffb\u8f66\u3002\r\n2\uff1a\u53ea\u6709J\u8f66\u5728\u78b0\u649e\u4e2d\u7ffb\u8f66\u3002\r\n3\uff1a\u4e24\u8f86\u8f66\u5728\u78b0\u649e\u8fc7\u7a0b\u4e2d\u7ffb\u8f66\u3002\r\n\u82cf\u897f\u60f3\u77e5\u9053\u6709\u591a\u5c11\u8f86\u7684\u6ca1\u6709\u7ffb\u7684\u8f66\u3002\u4f60\u80fd\u5e94\u4ed8\u8fd9\u9879\u4efb\u52a1\u5417\uff1f\r\n### \u8f93\u5165\r\n\u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u6574\u6570n\uff0c\u63a5\u4e0b\u6765\u662f\u4e00\u4e2an*n\u7684\u77e9\u9635\r\n### \u8f93\u51fa\r\n\u4e00\u4e2a\u6574\u6570\uff0c\u6240\u6709\u6ca1\u6709\u7ffb\u7684\u8f66\u7684\u6570\u91cf\r\n\r\n\u63a5\u4e0b\u6765\u4e00\u884c\uff0c\u8868\u793a\u6ca1\u6709\u7ffb\u7684\u8f66\u7684\u7f16\u53f7\uff0c\u4e24\u6570\u4e4b\u95f4\u7528\u7a7a\u683c\u9694\u5f00\r\n### \u6570\u636e\u8303\u56f4\r\n0<n<101,\u4fdd\u8bc1\u6240\u6709\u6570\u636e\u5408\u6cd5\r\n"
}