{
    "description": "After a revolution in Berland the new dictator faced an unexpected challenge: the country has to be somehow ruled. The dictator is a very efficient manager, yet he can't personally give orders to each and every citizen. That's why he decided to pick some set of leaders he would control. Those leaders will directly order the citizens. However, leadership efficiency turned out to vary from person to person (i.e. while person A makes an efficient leader, person B may not be that good at it). That's why the dictator asked world-famous berland scientists for help. The scientists suggested an innovatory technology \u2014 to make the leaders work in pairs.\n\nA relationship graph is some undirected graph whose vertices correspond to people. A simple path is a path with no repeated vertices. Long and frighteningly expensive research showed that a pair of people has maximum leadership qualities if a graph of relationships has a simple path between them with an odd number of edges. The scientists decided to call such pairs of different people leader pairs. Secret services provided the scientists with the relationship graph so that the task is simple \u2014 we have to learn to tell the dictator whether the given pairs are leader pairs or not. Help the scientists cope with the task.",
    "inputFormat": "The first line contains integers $ n $ and $ m $ ( $ 1<=n<=10^{5},0<=m<=10^{5} $ ) \u2014 the number of vertices and edges in the relationship graph correspondingly. Next $ m $ lines contain pairs of integers $ a $ and $ b $ which mean that there is an edge between the $ a $ -th and the $ b $ -th vertices (the vertices are numbered starting from $ 1 $ , $ 1<=a,b<=n $ ). It is guaranteed that the graph has no loops or multiple edges.\n\nNext line contains number $ q $ ( $ 1<=q<=10^{5} $ ) \u2014 the number of pairs the scientists are interested in. Next $ q $ lines contain these pairs (in the same format as the edges, the queries can be repeated, a query can contain a pair of the identical vertices).",
    "outputFormat": "For each query print on a single line \"Yes\" if there's a simple odd path between the pair of people; otherwise, print \"No\".",
    "samples": [
        [
            "7 7\n1 3\n1 4\n2 3\n2 4\n5 6\n6 7\n7 5\n8\n1 2\n1 3\n1 4\n2 4\n1 5\n5 6\n5 7\n6 7\n",
            "No\nYes\nYes\nYes\nNo\nYes\nYes\nYes\n"
        ]
    ],
    "hint": "Notes to the samples:\n\n1\\) Between vertices 1 and 2 there are 2 different simple paths in total: 1-3-2 and 1-4-2. Both of them consist of an even number of edges.\n\n2\\) Vertices 1 and 3 are connected by an edge, that's why a simple odd path for them is 1-3.\n\n5\\) Vertices 1 and 5 are located in different connected components, there's no path between them.",
    "translation": "\u7ed9\u4f60\u4e00\u4e2a$N$\u4e2a\u70b9$M$\u6761\u8fb9\u7684\u65e0\u5411\u56fe, \u65e0\u91cd\u8fb9\u65e0\u81ea\u73af,$Q$\u6b21\u8be2\u95ee,\n\u6bcf\u6b21\u8be2\u95ee\u70b9 $u$,$v$ \u4e4b\u95f4\u662f\u5426\u5b58\u5728\u4e00\u6761\u957f\u5ea6\u4e3a\u5947\u6570\u7684**\u7b80\u5355\u8def\u5f84**.\n\uff08\u5b9a\u4e49\u7b80\u5355\u8def\u5f84\u4e3a\u4e0d\u7ecf\u8fc7\u91cd\u590d\u7684\u70b9\u7684\u8def\u5f84.\uff09\n$N,M \u2264 10^5$\n\n\n**\u8f93\u5165\u683c\u5f0f\uff1a**\n\n\u7b2c\u4e00\u884c\u8f93\u5165 $n$ , $m$\uff1b\n\n\u4e0b\u9762$m$\u884c\u6bcf\u884c$a$\uff0c$b$\u53d9\u8ff0\u4e00\u6761\u8fb9\uff1b\n\n\u8f93\u5165$Q$\uff1b\n\n\u6bcf\u884c$u$ , $v$\u8868\u793a\u4e00\u4e2a\u8be2\u95ee\n\n\u7ffb\u8bd1\u63d0\u4f9b\u8005\uff1afeng_chengjie"
}