{
    "description": "You are given $ n $ sequences. Each sequence consists of positive integers, not exceeding $ m $ . All integers in one sequence are distinct, but the same integer may appear in multiple sequences. The length of the $ i $ -th sequence is $ k_{i} $ .\n\nEach second integers in each of the sequences are shifted by one to the left, i.e. integers at positions $ i&gt;1 $ go to positions $ i-1 $ , while the first integers becomes the last.\n\nEach second we take the first integer of each sequence and write it down to a new array. Then, for each value $ x $ from $ 1 $ to $ m $ we compute the longest segment of the array consisting of element $ x $ only.\n\nThe above operation is performed for $ 10^{100} $ seconds. For each integer from $ 1 $ to $ m $ find out the longest segment found at this time.",
    "inputFormat": "The first line of the input contains two integers $ n $ and $ m $ ( $ 1<=n,m<=100000 $ ) \u2014 the number of sequences and the maximum integer that can appear in the sequences.\n\nThen follow $ n $ lines providing the sequences. Each of them starts with an integer $ k_{i} $ ( $ 1<=k_{i}<=40 $ ) \u2014 the number of integers in the sequence, proceeded by $ k_{i} $ positive integers \u2014 elements of the sequence. It's guaranteed that all integers in each sequence are pairwise distinct and do not exceed $ m $ .\n\nThe total length of all sequences doesn't exceed $ 200000 $ .",
    "outputFormat": "Print $ m $ integers, the $ i $ -th of them should be equal to the length of the longest segment of the array with all its values equal to $ i $ during the first $ 10^{100} $ seconds.",
    "samples": [
        [
            "3 4\n3 3 4 1\n4 1 3 4 2\n3 3 1 4\n",
            "2\n1\n3\n2\n"
        ],
        [
            "5 5\n2 3 1\n4 5 1 3 2\n4 2 1 3 5\n1 3\n2 5 3\n",
            "3\n1\n4\n0\n1\n"
        ],
        [
            "4 6\n3 4 5 3\n2 6 3\n2 3 6\n3 3 6 5\n",
            "0\n0\n2\n1\n1\n2\n"
        ]
    ],
    "hint": "",
    "translation": "\u7ed9\u5b9a $n$ \u4e2a\u6570\u5217\uff0c\u7b2c $i$ \u4e2a\u6570\u5217\u5305\u542b $k_i$ \u4e2a\u4e0d\u8d85\u8fc7 $m$ \u7684\u4e92\u4e0d\u76f8\u540c\u7684\u6b63\u6574\u6570(\u4ece $1$ \u5f00\u59cb\u6807\u53f7)\u3002\r\n\r\n\u6bcf\u4e00\u79d2\u5c06\u6bcf\u4e2a\u6570\u5217\u4e2d\u7684\u6570\u5de6\u79fb\u4e00\u4e2a\u4f4d\u7f6e(\u5373\u5c06\u6bcf\u4e2a\u6570\u7684\u4e0b\u6807 $-1$ , \u4e0b\u6807 $1$ \u7684\u6570\u4e0b\u6807\u53d8\u4e3a $k_i$), \u5e76\u8bb0\u5f55\u7531\u6bcf\u4e2a\u6570\u5217\u7684\u7b2c\u4e00\u4e2a\u6570\u7ec4\u6210\u7684\u5e8f\u5217\u3002\r\n\r\n$10^{100}$ \u79d2\u8fc7\u540e\uff0c\u5bf9\u4e8e\u6240\u6709\u7684 $1\\leqslant x\\leqslant m$ \uff0c\u6c42 $x$ \u5728\u8bb0\u5f55\u4e0b\u6765\u7684\u5e8f\u5217\u4e2d\u51fa\u73b0\u7684\u6700\u957f\u7684\u8fde\u7eed\u7684\u4e00\u6bb5\u957f\u5ea6\u3002"
}