{
    "description": "The only difference between this problem and the hard version is the maximum number of questions.\n\nThis is an interactive problem.\n\nThere is a hidden integer $ 1 \\le x \\le n $ which you have to find. In order to find it you can ask at most $ \\mathbf{53} $ questions.\n\nIn each question you can choose a non-empty integer set $ S $ and ask if $ x $ belongs to $ S $ or not, after each question, if $ x $ belongs to $ S $ , you'll receive \"YES\", otherwise \"NO\".\n\nBut the problem is that not all answers are necessarily true (some of them are joking), it's just guaranteed that for each two consecutive questions, at least one of them is answered correctly.\n\nAdditionally to the questions, you can make at most $ 2 $ guesses for the answer $ x $ . Each time you make a guess, if you guess $ x $ correctly, you receive \":)\" and your program should terminate, otherwise you'll receive \":(\".\n\nAs a part of the joking, we will not fix the value of $ x $ in the beginning. Instead, it can change throughout the interaction as long as all the previous responses are valid as described above.\n\nNote that your answer guesses are always answered correctly. If you ask a question before and after a guess, at least one of these two questions is answered correctly, as normal.",
    "inputFormat": "The only line of the input contains a single integer $ n $ ( $ 1 \\le n \\le 10^5 $ ), the maximum possible value of $ x $ .",
    "outputFormat": "For each question, if you want to ask about a set $ S $ , first print the character '?', then print the size of $ S $ and then print the elements of $ S $ one by one. Each element should be an integer between $ 1 $ and $ n $ , the elements must be distinct. After each question, read a string \"YES\" or \"NO\", as explained in the statement. You can make at most $ 53 $ such questions.\n\nIf you want to guess for $ x $ , first print the character '!' and then print your guess. After each guess, read \":)\" or \":(\". If you guess $ x $ correctly, the answer is \":)\" and your program should terminate immediately, otherwise you'll receive \":(\". You can make at most $ 2 $ such guesses.\n\nAfter printing a query do not forget to output end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use:\n\n- fflush(stdout) or cout.flush() in C++;\n- System.out.flush() in Java;\n- flush(output) in Pascal;\n- stdout.flush() in Python;\n- see documentation for other languages.\n\nHacking is not allowed in this problem.",
    "samples": [
        [
            "6\n\nNO\n\n:(\n\nNO\n\n:)",
            "? 5 1 2 5 4 3\n\n! 6\n\n? 4 1 2 3 4\n\n! 5"
        ]
    ],
    "hint": "If the answer of the first question were correct, then $ x $ would have been equal to $ 6 $ , but as we can see in the first guess, $ 6 $ is not the answer.\n\nSo the answer of the first question is joking. As we know, the answer of at least one of our two questions is correct, since the answer of the first question was joking, the answer of the second question should be correct.\n\nSo we will understand that $ x $ is not equal to $ 1, 2, 3 $ or $ 4 $ , and we also knew that $ x $ is not equal to $ 6 $ either. Hence $ x $ should be equal to $ 5 $ .",
    "translation": "**\u672c\u9898\u548c[\u7b80\u5355\u7248](https://www.luogu.com.cn/problem/CF1746E1)\u7684\u533a\u522b\u5728\u4e8e\u8be2\u95ee\u6b21\u6570\u7684\u9650\u5236\uff0c\u5728\u672c\u9898\u4e2d\u4f60\u53ef\u4ee5\u8be2\u95ee\u81f3\u591a $\\mathbf{53}$ \u6b21**\u3002  \n**\u672c\u9898\u662f IO \u4ea4\u4e92\u9898\u3002**  \n\n### \u9898\u76ee\u63cf\u8ff0\n\n\u7ed9\u5b9a\u6574\u6570 $n$\u3002  \n\u4ea4\u4e92\u5668\u6709\u4e00\u4e2a\u9690\u85cf\u7684\u6574\u6570 $x$\uff0c\u6ee1\u8db3 $1\\leq x\\leq n$\uff0c\u4f60\u9700\u8981\u901a\u8fc7\u81f3\u591a $\\mathbf{53}$ \u6b21\u4e0b\u5217\u8be2\u95ee\u6c42\u51fa\u8fd9\u4e2a $x$\uff1a\n\n- \u7ed9\u5b9a\u975e\u7a7a\u6574\u6570\u96c6\u5408 $S$\uff0c\u6ee1\u8db3 $S$ \u4e2d\u7684\u5143\u7d20\u90fd\u662f $[1,n]$ \u4e2d\u7684\u6574\u6570\u3002  \n\u4ea4\u4e92\u5668\u4f1a\u544a\u8bc9\u4f60 $x\\in S$ \u662f\u5426\u6210\u7acb\u3002\u6210\u7acb\u4f1a\u56de\u590d `YES`\uff0c\u5426\u5219\u4f1a\u56de\u590d `NO`\u3002\n\n\u4f46\u662f\uff0c\u4ea4\u4e92\u5668\u53ef\u4ee5\u9009\u62e9\u8bf4\u8c0e\u8bdd\uff0c\u6211\u4eec\u53ea\u4fdd\u8bc1\u4ea4\u4e92\u5668\u5bf9\u4efb\u610f\u4e24\u6b21\u8fde\u7eed\u8be2\u95ee\u7684\u56de\u590d\u4e2d\u81f3\u5c11\u6709\u4e00\u6b21\u56de\u590d\u662f\u771f\u7684\u3002  \n\u9664\u6b64\u4e4b\u5916\uff0c\u4f60\u8fd8\u53ef\u4ee5\u5bf9 $x$ \u8fdb\u884c\u81f3\u591a $\\mathbf{2}$ \u6b21\u76f4\u63a5\u731c\u6d4b\uff1a\n\n- \u7ed9\u5b9a\u6574\u6570 $y$\uff0c\u6ee1\u8db3 $1\\leq y\\leq n$\u3002  \n\u4ea4\u4e92\u5668\u4f1a\u544a\u8bc9\u4f60 $x=y$ \u662f\u5426\u6210\u7acb\u3002\u6210\u7acb\u4f1a\u56de\u590d `:)`\uff0c\u5426\u5219\u4f1a\u56de\u590d `:(`\u3002  \n\u5f53\u4f60\u5f97\u5230 `:)` \u4f5c\u4e3a\u56de\u590d\u65f6\u4f60\u7684\u7a0b\u5e8f\u5c31\u4f1a\u88ab\u89c6\u4e3a\u901a\u8fc7\u3002\n\n\u4ea4\u4e92\u5668**\u4e0d\u4f1a**\u5728\u5bf9 $x$ \u7684\u76f4\u63a5\u731c\u6d4b\u4e0a\u8bf4\u8c0e\u3002  \n\u5982\u679c\u4f60\u5728\u67d0\u6b21\u731c\u6d4b\u7684\u524d\u540e\u5404\u8fdb\u884c\u4e86\u4e00\u6b21\u8be2\u95ee\uff0c\u8fd9\u4e24\u6b21\u8be2\u95ee\u7684\u56de\u590d\u4e5f\u81f3\u5c11\u6709\u4e00\u4e2a\u662f\u771f\u7684\u3002  \n**\u4ea4\u4e92\u5668\u662f\u9002\u5e94\u6027\u7684**\uff0c\u5373 $x$ \u7684\u503c\u53ef\u80fd\u4f1a\u5728\u4ea4\u4e92\u8fc7\u7a0b\u4e2d\u6539\u53d8\u3002\u4fdd\u8bc1\u4ea4\u4e92\u5668\u7684 $x$ \u603b\u662f\u6ee1\u8db3\u4e0a\u8ff0\u8be2\u95ee\u9650\u5236\u3002\n\n### \u4ea4\u4e92\u683c\u5f0f\n\n\u9996\u5148\uff0c\u8bfb\u5165\u4e00\u4e2a\u6574\u6570 $n(1\\leq n\\leq10^5)$ \u8868\u793a $x$ \u7684\u8303\u56f4\u3002\u63a5\u4e0b\u6765\uff1a\n\n- \u5982\u679c\u4f60\u5e0c\u671b\u8fdb\u884c\u8be2\u95ee\uff1a  \n\u6309\u7167 `? k S[1] S[2] ... S[k]` \u7684\u683c\u5f0f\u8f93\u51fa\u4f60\u60f3\u8be2\u95ee\u7684\u96c6\u5408 $S$ \u7684\u5927\u5c0f $k$ \u548c\u96c6\u5408 $S$ \u4e2d\u7684\u6240\u6709\u5143\u7d20 $S_1,S_2,\\cdots,S_k$\u3002  \n\u7136\u540e\u8bfb\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff08\u53ea\u4f1a\u662f `YES` \u548c `NO` \u4e2d\u7684\u4e00\u4e2a\uff09\u8868\u793a\u4ea4\u4e92\u5668\u7684\u56de\u590d\u3002  \n\u4f60\u9700\u8981\u4fdd\u8bc1 $1\\leq k,S_i\\leq n$ \u4e14 $S$ \u4e2d\u7684\u5143\u7d20\u4e92\u4e0d\u76f8\u540c\u3002  \n\u4f60\u53ea\u80fd\u8fdb\u884c\u81f3\u591a $\\mathbf{53}$ \u6b21\u4e0a\u8ff0\u8be2\u95ee\u3002\n- \u5982\u679c\u4f60\u5e0c\u671b\u8fdb\u884c\u731c\u6d4b\uff1a  \n\u6309\u7167 `! y` \u7684\u683c\u5f0f\u8f93\u51fa\u4f60\u60f3\u731c\u6d4b\u7684\u6574\u6570 $y$\u3002  \n\u7136\u540e\u8bfb\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff08\u53ea\u4f1a\u662f `:)` \u548c `:(` \u4e2d\u7684\u4e00\u4e2a\uff09\u8868\u793a\u4ea4\u4e92\u5668\u7684\u56de\u590d\u3002  \n\u4f60\u9700\u8981\u4fdd\u8bc1 $1\\leq y\\leq n$\u3002  \n\u4f60\u53ea\u80fd\u8fdb\u884c\u81f3\u591a $\\mathbf{2}$ \u6b21\u4e0a\u8ff0\u8be2\u95ee\u3002  \n\u4e00\u65e6\u4f60\u5f97\u5230\u4e86 `:)` \u4f5c\u4e3a\u56de\u7b54\uff0c\u4f60\u9700\u8981\u7acb\u523b\u7ed3\u675f\u7a0b\u5e8f\u3002\n\n\u6ce8\u610f\u5237\u65b0\u7f13\u51b2\u533a\u3002\n\n### \u6837\u4f8b\u89e3\u91ca\n\n\u4e0b\u9762\u5c55\u793a\u4e86\u6837\u4f8b\u7684\u4ea4\u4e92\u8fc7\u7a0b\uff1a\n\n- \u7ed9\u5b9a $n=6$\u3002\n- \u9996\u5148\u6837\u4f8b\u7a0b\u5e8f\u8be2\u95ee\u96c6\u5408 $\\{1,2,5,4,3\\}$\uff0c\u4ea4\u4e92\u5668\u7ed9\u51fa `NO` \u7684\u56de\u590d\u3002  \n\u53ef\u4ee5\u63a8\u65ad\u51fa\uff0c\u5982\u679c\u4ea4\u4e92\u5668\u5728\u7b2c\u4e00\u6b21\u7684\u8be2\u95ee\u4e2d\u8bf4\u4e86\u771f\u8bdd\uff0c\u7b54\u6848\u5c31\u662f $6$\u3002\n- \u63a5\u4e0b\u6765\u6837\u4f8b\u7a0b\u5e8f\u731c\u6d4b $x=6$\uff0c\u4ea4\u4e92\u5668\u7ed9\u51fa `:(` \u7684\u56de\u590d\u3002  \n\u53d1\u73b0\u7b54\u6848\u5e76\u4e0d\u662f $6$\uff0c\u8bf4\u660e\u4ea4\u4e92\u5668\u5728\u7b2c\u4e00\u6b21\u8be2\u95ee\u4e2d\u8bf4\u4e86\u8c0e\u3002  \n\u5229\u7528\u201c\u4ea4\u4e92\u5668\u4e24\u6b21\u8fde\u7eed\u8be2\u95ee\u7684\u56de\u590d\u5fc5\u5b9a\u6709\u81f3\u5c11\u4e00\u4e2a\u662f\u771f\u7684\u201d\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u63a8\u65ad\u51fa\u4e0b\u4e00\u6b21\u8be2\u95ee\u4ea4\u4e92\u5668\u4e0d\u80fd\u8bf4\u8c0e\u3002  \n- \u63a5\u4e0b\u6765\u6837\u4f8b\u7a0b\u5e8f\u8be2\u95ee\u96c6\u5408 $\\{1,2,3,4\\}$\uff0c\u4ea4\u4e92\u5668\u7ed9\u51fa `NO` \u7684\u56de\u590d\u3002  \n\u7531\u4e8e\u4ea4\u4e92\u5668\u8fd9\u6b21\u6ca1\u6709\u8bf4\u8c0e\uff0c$1\\sim6$ \u7684\u6574\u6570\u4e2d\u5c31\u53ea\u5269\u4e0b $5$ \u53ef\u80fd\u662f $x$\u3002\n- \u6700\u7ec8\u6837\u4f8b\u7a0b\u5e8f\u731c\u6d4b $x=5$\uff0c\u4ea4\u4e92\u5668\u7ed9\u51fa `:)` \u7684\u56de\u590d\u3002"
}