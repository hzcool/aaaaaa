{
    "description": "A bracket sequence is a string, containing only characters \"(\", \")\", \"\\[\" and \"\\]\".\n\nA correct bracket sequence is a bracket sequence that can be transformed into a correct arithmetic expression by inserting characters \"1\" and \"+\" between the original characters of the sequence. For example, bracket sequences \"()\\[\\]\", \"(\\[\\])\" are correct (the resulting expressions are: \"(1)+\\[1\\]\", \"(\\[1+1\\]+1)\"), and \"\\](\" and \"\\[\" are not. The empty string is a correct bracket sequence by definition.\n\nA substring $ s[l...\\ r] $ $ (1<=l<=r<=|s|) $ of string $ s=s_{1}s_{2}...\\ s_{|s|} $ (where $ |s| $ is the length of string $ s $ ) is the string $ s_{l}s_{l+1}...\\ s_{r} $ . The empty string is a substring of any string by definition.\n\nYou are given a bracket sequence, not necessarily correct. Find its substring which is a correct bracket sequence and contains as many opening square brackets \u00ab\\[\u00bb as possible.",
    "inputFormat": "The first and the only line contains the bracket sequence as a string, consisting only of characters \"(\", \")\", \"\\[\" and \"\\]\". It is guaranteed that the string is non-empty and its length doesn't exceed $ 10^{5} $ characters.",
    "outputFormat": "In the first line print a single integer \u2014 the number of brackets \u00ab\\[\u00bb in the required bracket sequence. In the second line print the optimal sequence. If there are more than one optimal solutions print any of them.",
    "samples": [
        [
            "([])\n",
            "1\n([])\n"
        ],
        [
            "(((\n",
            "0\n\n"
        ]
    ],
    "hint": "",
    "translation": "## \u9898\u76ee\u63cf\u8ff0\uff1a\n\u5bf9\u4e8e\u4e00\u4e2a\u62ec\u53f7\u5e8f\u5217\uff0c\u53ea\u542b\u6709```(```\u3001```)```\u3001```[```\u3001```]```\u8fd9\u56db\u79cd\u62ec\u53f7\u3002\u4e00\u4e2a\u62ec\u53f7\u5e8f\u5217\u662f\u5408\u6cd5\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u80fd\u5728\u91cc\u9762\u52a0\u4e0a\u82e5\u5e72\u4e2a```1```\u548c```+```\uff0c\u4f7f\u5176\u6210\u4e3a\u4e00\u4e2a\u6b63\u786e\u7684\u8868\u8fbe\u5f0f\uff08\u5176\u4e2d\u4e24\u79cd\u62ec\u53f7\u5747\u53ef\u4ee5\u4e92\u76f8\u5d4c\u5957\uff09\u3002\u7ed9\u5b9a\u4e00\u4e2a\u62ec\u53f7\u5e8f\u5217\uff0c\u8bf7\u627e\u5230\u5b83\u7684\u4e00\u4e2a\u5b50\u4e32\uff0c\u4f7f\u5f97\u5b83\u662f\u5408\u6cd5\u7684\uff0c\u4e14\u5176\u4e2d```[```\u6700\u591a\u3002\n## \u8f93\u51fa\u683c\u5f0f\uff1a\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u6570\uff0c\u8868\u793a```[```\u6700\u591a\u7684\u6b21\u6570\uff1b\\\n\u7b2c\u4e8c\u884c\u8f93\u51fa\u6b64\u65f6\u7684\u5b50\u4e32\u3002"
}