{
    "description": "You have a string $ s=s_{1}s_{2}...s_{|s|} $ , where $ |s| $ is the length of string $ s $ , and $ s_{i} $ its $ i $ -th character.\n\nLet's introduce several definitions:\n\n- A substring $ s[i..j] $ $ (1<=i<=j<=|s|) $ of string $ s $ is string $ s_{i}s_{i+1}...s_{j} $ .\n- The prefix of string $ s $ of length $ l $ $ (1<=l<=|s|) $ is string $ s[1..l] $ .\n- The suffix of string $ s $ of length $ l $ $ (1<=l<=|s|) $ is string $ s[|s|-l+1..|s|] $ .\n\nYour task is, for any prefix of string $ s $ which matches a suffix of string $ s $ , print the number of times it occurs in string $ s $ as a substring.",
    "inputFormat": "The single line contains a sequence of characters $ s_{1}s_{2}...s_{|s|} $ $ (1<=|s|<=10^{5}) $ \u2014 string $ s $ . The string only consists of uppercase English letters.",
    "outputFormat": "In the first line, print integer $ k $ $ (0<=k<=|s|) $ \u2014 the number of prefixes that match a suffix of string $ s $ . Next print $ k $ lines, in each line print two integers $ l_{i} $ $ c_{i} $ . Numbers $ l_{i} $ $ c_{i} $ mean that the prefix of the length $ l_{i} $ matches the suffix of length $ l_{i} $ and occurs in string $ s $ as a substring $ c_{i} $ times. Print pairs $ l_{i} $ $ c_{i} $ in the order of increasing $ l_{i} $ .",
    "samples": [
        [
            "ABACABA\n",
            "3\n1 4\n3 2\n7 1\n"
        ],
        [
            "AAA\n",
            "3\n1 3\n2 2\n3 1\n"
        ]
    ],
    "hint": "",
    "translation": "\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3an\u7684\u957f\u5b57\u7b26\u4e32\uff0c\u201c\u5b8c\u7f8e\u5b50\u4e32\u201d\u65e2\u662f\u5b83\u7684\u524d\u7f00\u4e5f\u662f\u5b83\u7684\u540e\u7f00\uff0c\u6c42\u201c\u5b8c\u7f8e\u5b50\u4e32\u201d\u7684\u4e2a\u6570\u4e14\u7edf\u8ba1\u8fd9\u4e9b\u5b50\u4e32\u7684\u5728\u957f\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\n\n\u611f\u8c22@\u8f6c\u8eab\u3001\u5df2\u964c\u8def \u63d0\u4f9b\u7684\u7ffb\u8bd1"
}