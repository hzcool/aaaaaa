{
    "description": "A substring of some string is called the most frequent, if the number of its occurrences is not less than number of occurrences of any other substring.\n\nYou are given a set of strings. A string (not necessarily from this set) is called good if all elements of the set are the most frequent substrings of this string. Restore the non-empty good string with minimum length. If several such strings exist, restore lexicographically minimum string. If there are no good strings, print \"NO\" (without quotes).\n\nA substring of a string is a contiguous subsequence of letters in the string. For example, \"ab\", \"c\", \"abc\" are substrings of string \"abc\", while \"ac\" is not a substring of that string.\n\nThe number of occurrences of a substring in a string is the number of starting positions in the string where the substring occurs. These occurrences could overlap.\n\nString $ a $ is lexicographically smaller than string $ b $ , if $ a $ is a prefix of $ b $ , or $ a $ has a smaller letter at the first position where $ a $ and $ b $ differ.",
    "inputFormat": "The first line contains integer $ n $ ( $ 1<=n<=10^{5} $ ) \u2014 the number of strings in the set.\n\nEach of the next $ n $ lines contains a non-empty string consisting of lowercase English letters. It is guaranteed that the strings are distinct.\n\nThe total length of the strings doesn't exceed $ 10^{5} $ .",
    "outputFormat": "Print the non-empty good string with minimum length. If several good strings exist, print lexicographically minimum among them. Print \"NO\" (without quotes) if there are no good strings.",
    "samples": [
        [
            "4\nmail\nai\nlru\ncf\n",
            "cfmailru\n"
        ],
        [
            "3\nkek\npreceq\ncheburek\n",
            "NO\n"
        ]
    ],
    "hint": "One can show that in the first sample only two good strings with minimum length exist: \"cfmailru\" and \"mailrucf\". The first string is lexicographically minimum.",
    "translation": "\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5b50\u4e32\u51fa\u73b0\u7684\u6b21\u6570\u5927\u4e8e\u4efb\u4f55\u5b50\u4e32\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5b50\u4e32\u5c31\u662f $\\text{most frequent}$\u3002\n\n\u7ed9 $n$ \u4e2a $\\text{most frequent}$ \u5b50\u4e32\uff0c\u95ee\u6700\u77ed\u7684\u539f\u4e32\u3002\n\n\u5982\u679c\u6709\u591a\u4e2a\u6700\u77ed\u539f\u4e32\uff0c\u53d6\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u90a3\u4e2a\u3002\u6ca1\u6709\u5c31\u8f93\u51fa `NO`\u3002"
}