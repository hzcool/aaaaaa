{
    "description": "During the loading of the game \"Dungeons and Candies\" you are required to get descriptions of $ k $ levels from the server. Each description is a map of an $ n\u00d7m $ checkered rectangular field. Some cells of the field contain candies (each cell has at most one candy). An empty cell is denoted as \".\" on the map, but if a cell has a candy, it is denoted as a letter of the English alphabet. A level may contain identical candies, in this case the letters in the corresponding cells of the map will be the same.\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF436C/c09385c75e1e3c00ab7d9905ff0e52aa5d43a3f9.png)When you transmit information via a network, you want to minimize traffic \u2014 the total size of the transferred data. The levels can be transmitted in any order. There are two ways to transmit the current level $ A $ :\n\n1. You can transmit the whole level $ A $ . Then you need to transmit $ n\u00b7m $ bytes via the network.\n2. You can transmit the difference between level $ A $ and some previously transmitted level $ B $ (if it exists); this operation requires to transmit $ d_{A,B}\u00b7w $ bytes, where $ d_{A,B} $ is the number of cells of the field that are different for $ A $ and $ B $ , and $ w $ is a constant. Note, that you should compare only the corresponding cells of levels $ A $ and $ B $ to calculate $ d_{A,B} $ . You cannot transform the maps of levels, i.e. rotate or shift them relatively to each other.\n\nYour task is to find a way to transfer all the $ k $ levels and minimize the traffic.",
    "inputFormat": "The first line contains four integers $ n,m,k,w $ $ (1<=n,m<=10;\u00a01<=k,w<=1000) $ . Then follows the description of $ k $ levels. Each level is described by $ n $ lines, each line contains $ m $ characters. Each character is either a letter of the English alphabet or a dot (\".\"). Please note that the case of the letters matters.",
    "outputFormat": "In the first line print the required minimum number of transferred bytes.\n\nThen print $ k $ pairs of integers $ x_{1},y_{1},x_{2},y_{2},...,x_{k},y_{k} $ , describing the way to transfer levels. Pair $ x_{i} $ , $ y_{i} $ means that level $ x_{i} $ needs to be transferred by way $ y_{i} $ . If $ y_{i} $ equals 0, that means that the level must be transferred using the first way, otherwise $ y_{i} $ must be equal to the number of a previously transferred level. It means that you will transfer the difference between levels $ y_{i} $ and $ x_{i} $ to transfer level $ x_{i} $ . Print the pairs in the order of transferring levels. The levels are numbered 1 through $ k $ in the order they follow in the input.\n\nIf there are multiple optimal solutions, you can print any of them.",
    "samples": [
        [
            "2 3 3 2\nA.A\n...\nA.a\n..C\nX.Y\n...\n",
            "14\n1 0\n2 1\n3 1\n"
        ],
        [
            "1 1 4 1\nA\n.\nB\n.\n",
            "3\n1 0\n2 0\n4 2\n3 0\n"
        ],
        [
            "1 3 5 2\nABA\nBBB\nBBA\nBAB\nABB\n",
            "11\n1 0\n3 1\n2 3\n4 2\n5 1\n"
        ]
    ],
    "hint": "",
    "translation": "### \u9898\u76ee\u63cf\u8ff0\n\n\u7ed9\u5b9a $k$ \u6b21\u6587\u4ef6\uff0c\u6bcf\u6b21 $n*m$ \u4e2a\u5b57\u7b26\u3002\n\n\u4f20\u8f93\u6587\u4ef6\uff0c\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\n\n1.\u76f4\u63a5\u4f20\u8f93\uff0c\u8017\u8d39 $n*m$ \u4e2a\u5b57\u7b26\u3002\n\n2.\u901a\u8fc7\u6bd4\u8f83\u8fd9\u4e2a\u6587\u4ef6\u4e0e\u524d\u9762\u67d0\u4e2a\u6587\u4ef6\u7684\u5dee\u522b\uff0c\u8017\u8d39 $\u8fd9\u4e2a\u6587\u4ef6\u4e0e\u90a3\u4e2a\u6587\u4ef6\u4e0d\u540c\u7684\u5b57\u7b26\u6570*w$ \u4e2a\u5b57\u7b26\uff0c\u5176\u4e2d $w$ \u662f\u5e38\u6570\u3002\n\n\u6587\u4ef6\u987a\u5e8f\u53ef\u4efb\u610f\u4ea4\u6362\u3002\n\n\u6c42\u6700\u5c0f\u8017\u8d39\u5b57\u7b26\u6570\uff0c\u5e76\u8f93\u51fa\u65b9\u6848\uff0c\u6709\u591a\u79cd\u65b9\u6848\u65f6\u4efb\u610f\u8f93\u51fa\u4e00\u4e2a\u3002\n\n### \u8f93\u5165\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\uff0c\u56db\u4e2a\u6574\u6570\uff0c$n,m,k,w$\u3002\n\n\u63a5\u4e0b\u6765 $n*k$ \u884c\uff0c\u6bcf\u884c $m$ \u4e2a\u5b57\u7b26\uff0c\u8868\u793a $k$ \u4e2a\u6587\u4ef6\u3002\n\n### \u8f93\u51fa\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570\uff0c\u6700\u5c0f\u82b1\u8d39\u3002\n\n\u63a5\u4e0b\u6765 $k$ \u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6574\u6570\uff1a\n\n\u7b2c\u4e00\u4e2a\u6574\u6570\u8868\u793a\u8fd9\u6b21\u8f93\u51fa\u7684\u6587\u4ef6\u662f\u7b2c\u51e0\u4e2a\uff08\u56e0\u4e3a\u4f20\u8f93\u987a\u5e8f\u53ef\u4ee5\u4efb\u610f\u8c03\u6362\uff0c\u6240\u4ee5\u8fd9\u4e2a\u662f\u6709\u5fc5\u8981\u7684\uff09\u3002\n\n\u7b2c\u4e8c\u4e2a\u6574\u6570\u5982\u679c\u662f $0$\uff0c\u8868\u793a\u7528\u4e86\u65b9\u6cd51\uff1b\u5426\u5219\u8868\u793a\"\u90a3\u4e2a\u6587\u4ef6\"\u662f\u7b2c\u51e0\u4e2a\uff0c\u5373\u7528\u4e86\u65b9\u6cd52\u3002\n\n### \u6570\u636e\u8303\u56f4\n\n$1<=n,m<=10$\n\n$1<=k,w<=1000$\n\n\u5b57\u7b26\u53ea\u4f1a\u662f '.' \u6216\u5927\u5c0f\u5199\u5b57\u6bcd\u3002"
}