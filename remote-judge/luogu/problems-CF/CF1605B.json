{
    "description": "Ashish has a binary string $ s $ of length $ n $ that he wants to sort in non-decreasing order.\n\nHe can perform the following operation:\n\n1. Choose a subsequence of any length such that its elements are in non-increasing order. Formally, choose any $ k $ such that $ 1 \\leq k \\leq n $ and any sequence of $ k $ indices $ 1 \\le i_1 \\lt i_2 \\lt \\ldots \\lt i_k \\le n $ such that $ s_{i_1} \\ge s_{i_2} \\ge \\ldots \\ge s_{i_k} $ .\n2. Reverse this subsequence in-place. Formally, swap $ s_{i_1} $ with $ s_{i_k} $ , swap $ s_{i_2} $ with $ s_{i_{k-1}} $ , $ \\ldots $ and swap $ s_{i_{\\lfloor k/2 \\rfloor}} $ with $ s_{i_{\\lceil k/2 \\rceil + 1}} $ (Here $ \\lfloor x \\rfloor $ denotes the largest integer not exceeding $ x $ , and $ \\lceil x \\rceil $ denotes the smallest integer not less than $ x $ )\n\nFind the minimum number of operations required to sort the string in non-decreasing order. It can be proven that it is always possible to sort the given binary string in at most $ n $ operations.",
    "inputFormat": "The first line contains a single integer $ t $ $ (1 \\le t \\le 1000) $ \u2014 the number of test cases. The description of the test cases follows.\n\nThe first line of each test case contains an integer $ n $ $ (1 \\le n \\le 1000) $ \u2014 the length of the binary string $ s $ .\n\nThe second line of each test case contains a binary string $ s $ of length $ n $ containing only $ 0 $ s and $ 1 $ s.\n\nIt is guaranteed that the sum of $ n $ over all test cases does not exceed $ 1000 $ .",
    "outputFormat": "For each test case output the following:\n\n- The minimum number of operations $ m $ in the first line ( $ 0 \\le m \\le n $ ).\n- Each of the following $ m $ lines should be of the form: $ k $ $ i_1 $ $ i_2 $ ... $ i_{k} $ , where $ k $ is the length and $ i_1 \\lt i_2 \\lt ... \\lt i_{k} $ are the indices of the chosen subsequence. For them the conditions from the statement must hold.",
    "samples": [
        [
            "3\n7\n0011111\n5\n10100\n6\n001000",
            "0\n1\n4 1 3 4 5 \n1\n3 3 5 6"
        ]
    ],
    "hint": "In the first test case, the binary string is already sorted in non-decreasing order.\n\nIn the second test case, we can perform the following operation:\n\n- $ k = 4: $ choose the indices $ \\{1, 3, 4, 5\\} $  $ \\underline{1} $ $ 0 $ $ \\underline{1} $ $ \\underline{0} $ $ \\underline{0} $ $ \\rightarrow  $ $ \\underline{0} $ $ 0 $ $ \\underline{0} $ $ \\underline{1} $ $ \\underline{1} $\n\nIn the third test case, we can perform the following operation:\n\n- $ k = 3: $ choose the indices $ \\{3, 5, 6\\} $  $ 0 $ $ 0 $ $ \\underline{1} $ $ 0 $ $ \\underline{0} $ $ \\underline{0} $ $ \\rightarrow  $ $ 0 $ $ 0 $ $ \\underline{0} $ $ 0 $ $ \\underline{0} $ $ \\underline{1} $",
    "translation": "\u9898\u76ee\u63cf\u8ff0\uff1a\n\n\u9898\u76ee\u5171\u7ed9\u51fa $t(1 \\le t \\le 1000)$ \u7ec4\u6570\u636e\uff0c\u6bcf\u7ec4\u6570\u636e\u5305\u542b\u4e00\u4e2a\u6b63\u6574\u6570 $n(1 \\le n \\le 1000)$ \u548c\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684 $01$ \u4e32 $s$\uff0c \u73b0\u5728\u4f60\u9700\u8981\u5728 $s$ \u4e2d\u9009\u51fa\u4e00\u4e2a\u5b50\u5e8f\u5217\uff0c\u5c06\u8fd9\u4e2a\u5b50\u5e8f\u5217\u4e2d\u7684\u5b57\u7b26\u7ffb\u8f6c\uff08\u5982\u5b57\u7b26\u4e32 $10100$\uff0c \u9009\u51fa\u5b50\u5e8f\u5217 $1100$\uff0c \u7ffb\u8f6c\u5f97\u5230 $0011$\uff0c \u653e\u56de\u539f\u4e32\u4e2d\u5f97\u5230 $00011$\uff09\uff0c\u4f7f\u5f97\u7ffb\u8f6c\u540e\u7684\u5b57\u7b26\u4e32\u5b57\u5178\u5e8f\u6700\u5c0f\u3002\n\n\u8f93\u5165\u683c\u5f0f\uff1a\n\n\u7b2c\u4e00\u884c\u4e00\u4e2a $t$\uff0c \u8868\u793a\u6837\u4f8b\u7ec4\u6570\u3002\n\n\u6bcf\u7ec4\u4e00\u4e2a\u6b63\u6574\u6570 $t$ \u548c\u4e00\u4e2a\u5b57\u7b26\u4e32 $s$\uff0c \u8868\u793a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u548c\u4f60\u5c06\u8981\u8fdb\u884c\u64cd\u4f5c\u7684\u5b57\u7b26\u4e32\u3002\n\n\u8f93\u51fa\u683c\u5f0f\uff1a\n\n\u5bf9\u4e8e\u6bcf\u7ec4\u6570\u636e\uff0c\u7b2c\u4e00\u884c\u8f93\u51fa\u9700\u8981\u64cd\u4f5c\u7684\u6b21\u6570\uff08\u4e00\u6b21\u63d0\u53d6\u548c\u4e00\u6b21\u7ffb\u8f6c\u603b\u79f0\u4e3a\u4e00\u6b21\u64cd\u4f5c\uff0c\u82e5\u4e0d\u9700\u4fee\u6539\u5219\u8f93\u51fa $0$\uff0c\u8be6\u89c1\u6837\u4f8b\uff09\uff0c\u82e5\u64cd\u4f5c\u6b21\u6570\u4e0d\u4e3a\u96f6\uff0c\u5219\u5728\u7b2c\u4e8c\u884c\u8f93\u51fa\uff1a\n\n\u7b2c\u4e00\u4e2a\u6570\u5b57 $k$\uff0c\u8868\u793a\u9700\u8981\u63d0\u53d6\u51fa\u6765\u7684\u6570\u5b57\u4e2a\u6570\uff0c\u540e $k$ \u4e2a\u6570\u5b57\uff0c\u8868\u793a\u63d0\u53d6\u51fa\u6765\u7684\u6570\u5b57\u5728\u539f\u4e32\u4e2d\u7684\u4f4d\u7f6e\uff08\u4e0b\u6807 + 1\uff09\n\n\u6837\u4f8b\u89e3\u91ca\uff1a\n\n\u5bf9\u4e8e\u7b2c\u4e00\u7ec4\u6837\u4f8b\uff0c\u4e0d\u9700\u8981\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\uff0c\u672c\u8eab\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u8f93\u51fa $0$\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u7ec4\u6837\u4f8b\uff0c\u9700\u8981\u8fdb\u884c\u4e00\u6b21\u64cd\u4f5c\uff0c\u5373\u5c06 $10100$ \u4e2d\u7684 $1100$ \u63d0\u53d6\u51fa\u6765\u7ffb\u8f6c\uff0c\u539f\u4e32\u53d8\u4e3a $00011$\n\n\u5bf9\u4e8e\u7b2c\u4e09\u7ec4\u6837\u4f8b\uff0c\u9700\u8981\u8fdb\u884c\u4e00\u6b21\u64cd\u4f5c\uff0c\u5373\u5c06 $001000$ \u4e2d\u7684 $100$ \u63d0\u53d6\u51fa\u6765\u7ffb\u8f6c\uff0c\u539f\u4e32\u53d8\u4e3a $000001$"
}