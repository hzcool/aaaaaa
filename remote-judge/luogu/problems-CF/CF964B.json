{
    "description": "There are $ n $ incoming messages for Vasya. The $ i $ -th message is going to be received after $ t_{i} $ minutes. Each message has a cost, which equals to $ A $ initially. After being received, the cost of a message decreases by $ B $ each minute (it can become negative). Vasya can read any message after receiving it at any moment of time. After reading the message, Vasya's bank account receives the current cost of this message. Initially, Vasya's bank account is at $ 0 $ .\n\nAlso, each minute Vasya's bank account receives $ C\u00b7k $ , where $ k $ is the amount of received but unread messages.\n\nVasya's messages are very important to him, and because of that he wants to have all messages read after $ T $ minutes.\n\nDetermine the maximum amount of money Vasya's bank account can hold after $ T $ minutes.",
    "inputFormat": "The first line contains five integers $ n $ , $ A $ , $ B $ , $ C $ and $ T $ ( $ 1<=n,A,B,C,T<=1000 $ ).\n\nThe second string contains $ n $ integers $ t_{i} $ ( $ 1<=t_{i}<=T $ ).",
    "outputFormat": "Output one integer \u2014 the answer to the problem.",
    "samples": [
        [
            "4 5 5 3 5\n1 5 5 4\n",
            "20\n"
        ],
        [
            "5 3 1 1 3\n2 2 2 1 1\n",
            "15\n"
        ],
        [
            "5 5 3 4 5\n1 2 3 4 5\n",
            "35\n"
        ]
    ],
    "hint": "In the first sample the messages must be read immediately after receiving, Vasya receives $ A $ points for each message, $ n\u00b7A=20 $ in total.\n\nIn the second sample the messages can be read at any integer moment.\n\nIn the third sample messages must be read at the moment T. This way Vasya has $ 1 $ , $ 2 $ , $ 3 $ , $ 4 $ and $ 0 $ unread messages at the corresponding minutes, he gets $ 40 $ points for them. When reading messages, he receives $ (5-4\u00b73)+(5-3\u00b73)+(5-2\u00b73)+(5-1\u00b73)+5=-5 $ points. This is $ 35 $ in total.",
    "translation": "**\u9898\u76ee\u63cf\u8ff0**\uff1a\n\n\n------------\n\nVasya\u6709n\u5c01\u4fe1\u3002\u7b2ci\u5c01\u4fe1\u5c06\u5728ti\u79d2\u4e4b\u540e\u63a5\u6536\u3002 \u6bcf\u5c01\u4fe1\u90fd\u5f00\u59cb\u90fd\u503ca\u5143\uff0c\u4f46\u6536\u5230\u6d88\u606f\u540e\uff0c\u6d88\u606f\u7684\u6210\u672c\u6bcf\u5206\u949f\u51cf\u5c11B\u5143(B\u53ef\u80fd\u53d8\u4e3a\u8d1f\u6570)\u3002Vasya\u53ef\u4ee5\u5728\u4efb\u610f\u65f6\u523b\u63a5\u6536\u5230\u4efb\u4f55\u6d88\u606f\uff0c\u4e5f\u53ef\u5728\u4efb\u610f\u65f6\u523b\u8bfb\u53d6\u5b83\u3002\u8bfb\u5b8c\u6d88\u606f\u540e\uff0cVasya\u7684\u94f6\u884c\u8d26\u6237\u4f1a\u6536\u5230\u8be5\u6d88\u606f\u7684\u5f53\u524d\u6210\u672c\u3002\u6700\u521d\uff0cVasya\u7684\u94f6\u884c\u8d26\u6237\u4e3a0\u3002 \u540c\u65f6,\u6bcf\u5206\u949fVasya\u7684\u94f6\u884c\u8d26\u6237\u4f1a\u6536\u5230C\u00b7k\u5143,k\u662f\u6536\u5230\u4e86\u4f46\u672a\u8bfb\u4fe1\u7684\u6570\u91cf\u3002 Vasya\u975e\u5e38\u8d2a\u5a6a\uff08\u53c8\u4e00\u4e2a\u845b\u6717\u53f0\uff09\uff0c\u6b63\u56e0\u4e3a\u5982\u6b64\uff0c\u4ed6\u60f3\u8ba9\u6240\u6709\u7684\u4fe1\u606f\u5728T\u5206\u949f\u540e\u88ab\u9605\u8bfb\uff0c\u4f7f\u5176\u5229\u76ca\u6700\u5927\u5316\u3002\n\n\n------------\n\n**\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\uff1a**\n\n\n------------\n\n_\u8f93\u5165\u683c\u5f0f\uff1a_\n\n\n------------\n\n\u7b2c\u4e00\u884c\u8f93\u51655\u4e2a\u6570 n , A , B , C \u4e0e T\n( 1<=n,A,B,C,T<=1000 ).\n\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32\u5305\u542bn\u4e2a\u6574\u6570\nti\n\u200b ( 1<=ti<=T \uff09\n\n\n------------\n\n_\u8f93\u51fa\u683c\u5f0f\uff1a_\n\n\n------------\n\n\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u95ee\u9898\u7684\u7b54\u6848\u3002"
}