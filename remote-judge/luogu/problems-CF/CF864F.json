{
    "description": "There are $ n $ cities in Berland. Some pairs of them are connected with $ m $ directed roads. One can use only these roads to move from one city to another. There are no roads that connect a city to itself. For each pair of cities $ (x,y) $ there is at most one road from $ x $ to $ y $ .\n\nA path from city $ s $ to city $ t $ is a sequence of cities $ p_{1} $ , $ p_{2} $ , ... , $ p_{k} $ , where $ p_{1}=s $ , $ p_{k}=t $ , and there is a road from city $ p_{i} $ to city $ p_{i+1} $ for each $ i $ from $ 1 $ to $ k-1 $ . The path can pass multiple times through each city except $ t $ . It can't pass through $ t $ more than once.\n\nA path $ p $ from $ s $ to $ t $ is ideal if it is the lexicographically minimal such path. In other words, $ p $ is ideal path from $ s $ to $ t $ if for any other path $ q $ from $ s $ to $ t $ $ p_{i}<q_{i} $ , where $ i $ is the minimum integer such that $ p_{i}\u2260q_{i} $ .\n\nThere is a tourist agency in the country that offers $ q $ unusual excursions: the $ j $ -th excursion starts at city $ s_{j} $ and ends in city $ t_{j} $ .\n\nFor each pair $ s_{j} $ , $ t_{j} $ help the agency to study the ideal path from $ s_{j} $ to $ t_{j} $ . Note that it is possible that there is no ideal path from $ s_{j} $ to $ t_{j} $ . This is possible due to two reasons:\n\n- there is no path from $ s_{j} $ to $ t_{j} $ ;\n- there are paths from $ s_{j} $ to $ t_{j} $ , but for every such path $ p $ there is another path $ q $ from $ s_{j} $ to $ t_{j} $ , such that $ p_{i}>q_{i} $ , where $ i $ is the minimum integer for which $ p_{i}\u2260q_{i} $ .\n\nThe agency would like to know for the ideal path from $ s_{j} $ to $ t_{j} $ the $ k_{j} $ -th city in that path (on the way from $ s_{j} $ to $ t_{j} $ ).\n\nFor each triple $ s_{j} $ , $ t_{j} $ , $ k_{j} $ ( $ 1<=j<=q $ ) find if there is an ideal path from $ s_{j} $ to $ t_{j} $ and print the $ k_{j} $ -th city in that path, if there is any.",
    "inputFormat": "The first line contains three integers $ n $ , $ m $ and $ q $ ( $ 2<=n<=3000 $ , $ 0<=m<=3000 $ , $ 1<=q<=4\u00b710^{5} $ ) \u2014 the number of cities, the number of roads and the number of excursions.\n\nEach of the next $ m $ lines contains two integers $ x_{i} $ and $ y_{i} $ ( $ 1<=x_{i},y_{i}<=n $ , $ x_{i}\u2260y_{i} $ ), denoting that the $ i $ -th road goes from city $ x_{i} $ to city $ y_{i} $ . All roads are one-directional. There can't be more than one road in each direction between two cities.\n\nEach of the next $ q $ lines contains three integers $ s_{j} $ , $ t_{j} $ and $ k_{j} $ ( $ 1<=s_{j},t_{j}<=n $ , $ s_{j}\u2260t_{j} $ , $ 1<=k_{j}<=3000 $ ).",
    "outputFormat": "In the $ j $ -th line print the city that is the $ k_{j} $ -th in the ideal path from $ s_{j} $ to $ t_{j} $ . If there is no ideal path from $ s_{j} $ to $ t_{j} $ , or the integer $ k_{j} $ is greater than the length of this path, print the string '-1' (without quotes) in the $ j $ -th line.",
    "samples": [
        [
            "7 7 5\n1 2\n2 3\n1 3\n3 4\n4 5\n5 3\n4 6\n1 4 2\n2 6 1\n1 7 3\n1 3 2\n1 3 5\n",
            "2\n-1\n-1\n2\n-1\n"
        ]
    ],
    "hint": "",
    "translation": "\u9898\u610f:\n    \u7ed9\u5b9a\u4e00\u4e2a\u6709\u5411\u56fe,\u8be2\u95ee\u7531s\u5230t\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u8def\u5f84\u7684\u7b2ck\u4e2a\u70b9\n\u8f93\u5165:\n    \u7b2c\u4e00\u884c\u4e09\u4e2a\u6574\u6570n(2<=n<=3000),m(0<=m<=3000),q(1<=q<=400000)\n    \u63a5\u4e0b\u6765m\u884c\u6bcf\u884c\u4e24\u4e2a\u6574\u6570x,y(1<=x,y<=n\u4e14x\u2260y)\u8868\u793a\u7531x\u5230y\u6709\u4e00\u6761\u8def(\u7531\u57ce\u5e02x\u5230y\u6700\u591a\u53ea\u6709\u4e00\u6761\u8def)\n    \u63a5\u4e0b\u6765q\u884c\u6bcf\u884c\u4e09\u4e2a\u6574\u6570s,t(1<=s,t<=n\u4e14s\u2260t),k(1<=k<=3000)\n\u8f93\u51fa:\n    q\u884c,\u6bcf\u884c\u5bf9\u5e94\u4e00\u4e2a\u7b54\u6848\n    \u82e5s\u4e0et\u4e0d\u8fde\u901a\u8f93\u51fa-1\n    \u82e5\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u8def\u5f84\u6784\u6210\u73af\u8f93\u51fa-1\n\n\u611f\u8c22@\u51cc\u5e7d \u63d0\u4f9b\u7684\u7ffb\u8bd1"
}