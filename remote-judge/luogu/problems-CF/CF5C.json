{
    "description": "This is yet another problem dealing with regular bracket sequences.\n\nWe should remind you that a bracket sequence is called regular, if by inserting \u00ab+\u00bb and \u00ab1\u00bb into it we can get a correct mathematical expression. For example, sequences \u00ab(())()\u00bb, \u00ab()\u00bb and \u00ab(()(()))\u00bb are regular, while \u00ab)(\u00bb, \u00ab(()\u00bb and \u00ab(()))(\u00bb are not.\n\nYou are given a string of \u00ab(\u00bb and \u00ab)\u00bb characters. You are to find its longest substring that is a regular bracket sequence. You are to find the number of such substrings as well.",
    "inputFormat": "The first line of the input file contains a non-empty string, consisting of \u00ab(\u00bb and \u00ab)\u00bb characters. Its length does not exceed $ 10^{6} $ .",
    "outputFormat": "Print the length of the longest substring that is a regular bracket sequence, and the number of such substrings. If there are no such substrings, write the only line containing \"0 1\".",
    "samples": [
        [
            ")((())))(()())\n",
            "6 2\n"
        ],
        [
            "))(\n",
            "0 1\n"
        ]
    ],
    "hint": "",
    "translation": "\u7ed9\u51fa\u4e00\u4e2a\u62ec\u53f7\u5e8f\u5217\uff0c\u6c42\u51fa\u6700\u957f\u5408\u6cd5\u5b50\u4e32\u548c\u5b83\u7684\u6570\u91cf\u3002\n\u5408\u6cd5\u7684\u5b9a\u4e49\uff1a\u8fd9\u4e2a\u5e8f\u5217\u4e2d\u5de6\u53f3\u62ec\u53f7\u5339\u914d"
}