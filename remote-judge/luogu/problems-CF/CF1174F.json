{
    "description": "This is an interactive problem.\n\nYou're given a tree consisting of $ n $ nodes, rooted at node $ 1 $ . A tree is a connected graph with no cycles.\n\nWe chose a hidden node $ x $ . In order to find this node, you can ask queries of two types:\n\n- d $ u $ ( $ 1 \\le u \\le n $ ). We will answer with the distance between nodes $ u $ and $ x $ . The distance between two nodes is the number of edges in the shortest path between them.\n- s $ u $ ( $ 1 \\le u \\le n $ ). We will answer with the second node on the path from $ u $ to $ x $ . However, there's a plot twist. If $ u $ is not an ancestor of $ x $ , you'll receive \"Wrong answer\" verdict!\n\nNode $ a $ is called an ancestor of node $ b $ if $ a \\ne b $ and the shortest path from node $ 1 $ to node $ b $ passes through node $ a $ . Note that in this problem a node is not an ancestor of itself.\n\nCan you find $ x $ in no more than $ 36 $ queries? The hidden node is fixed in each test beforehand and does not depend on your queries.",
    "inputFormat": "The first line contains the integer $ n $ ( $ 2 \\le n \\le 2 \\cdot 10^5 $ ) \u2014 the number of nodes in the tree.\n\nEach of the next $ n-1 $ lines contains two space-separated integers $ u $ and $ v $ ( $ 1 \\le u,v \\le n $ ) that mean there's an edge between nodes $ u $ and $ v $ . It's guaranteed that the given graph is a tree.",
    "outputFormat": "To print the answer, print \"! x\" (without quotes).\n\nInteraction\n\nTo ask a question, print it in one of the formats above:\n\n- d $ u $ ( $ 1 \\le u \\le n $ ), or\n- s $ u $ ( $ 1 \\le u \\le n $ ).\n\nAfter each question, you should read the answer: either the distance or the second vertex on the path, as mentioned in the legend.\n\nIf we answer with $ -1 $ instead of a valid answer, that means you exceeded the number of queries, made an invalid query, or violated the condition in the second type of queries. Exit immediately after receiving $ -1 $ and you will see Wrong answer verdict. Otherwise, you can get an arbitrary verdict because your solution will continue to read from a closed stream.\n\nAfter printing a query, do not forget to output end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use:\n\n- fflush(stdout) or cout.flush() in C++;\n- System.out.flush() in Java;\n- flush(output) in Pascal;\n- stdout.flush() in Python;\n- See the documentation for other languages.\n\nHacks:\n\nThe first line should contain two integers $ n $ and $ x $ ( $ 2 \\le n \\le 2 \\cdot 10^5 $ , $ 1 \\le x \\le n $ ).\n\nEach of the next $ n-1 $ lines should contain two integers $ u $ and $ v $ ( $ 1 \\le u,v \\le n $ ) that mean there is an edge between nodes $ u $ and $ v $ . The edges must form a tree.",
    "samples": [
        [
            "5\n1 2\n1 3\n3 4\n3 5\n3\n5",
            "d 2\ns 3\n! 5"
        ]
    ],
    "hint": "In the first example, the hidden node is node $ 5 $ .\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1174F/2fc09cdc0e97e7f39493296632ab302b06fdb975.png)We first ask about the distance between node $ x $ and node $ 2 $ . The answer is $ 3 $ , so node $ x $ is either $ 4 $ or $ 5 $ . We then ask about the second node in the path from node $ 3 $ to node $ x $ . Note here that node $ 3 $ is an ancestor of node $ 5 $ . We receive node $ 5 $ as the answer. Finally, we report that the hidden node is node $ 5 $ .",
    "translation": "\u8fd9\u662f\u4e00\u9053\u4ea4\u4e92\u9898\u3002\n\n\u4f60\u6709\u4e00\u68f5$n$\u4e2a\u8282\u70b9\u7684\u6709\u6839\u6811\uff0c$1$\u53f7\u70b9\u662f\u6839\u8282\u70b9\u3002\n\n\u8fd9\u68f5\u6811\u4e2d\u6709\u4e00\u4e2a\u9690\u85cf\u7684\u8282\u70b9$x$\uff0c\u4f60\u9700\u8981\u901a\u8fc7\u8be2\u95ee\u628a$x$\u627e\u51fa\u6765\u3002\n\n\u4f60\u53ef\u4ee5\u8fdb\u884c\u5982\u4e0b\u4e24\u79cd\u8be2\u95ee\uff1a\n\n1\u3001$d$ $u$ $(1\\le u\\le n)$\u3002\u4ea4\u4e92\u5e93\u4f1a\u8fd4\u56de\u8282\u70b9$u$\u548c$x$\u7684\u8ddd\u79bb\u3002\n\n2\u3001$s$ $u$ $(1\\le u\\le n)$\u3002\u4ea4\u4e92\u5e93\u4f1a\u8fd4\u56de\u4ece$u$\u5230$x$\u7684\u8def\u5f84\u4e0a\u7b2c\u4e8c\u4e2a\u70b9\u7684\u6807\u53f7\u3002\u6ce8\u610f\uff0c\u4f60\u8be2\u95ee\u7684$u$\u5fc5\u987b\u662f$x$\u7684\u7956\u5148\uff0c\u5426\u5219\u4f1aWrong Ans\u3002\n\n\u4f60\u9700\u8981\u5728\u4e0d\u8d85\u8fc7$36$\u6b21\u8be2\u95ee\u4e4b\u5185\u627e\u51fa$x$\u3002$x$\u662f\u9884\u5148\u8bbe\u5b9a\u597d\u7684\uff0c\u4e0d\u4f1a\u968f\u7740\u8be2\u95ee\u800c\u6539\u53d8\u3002"
}