{
    "description": "Vasya has a set of $ 4n $ strings of equal length, consisting of lowercase English letters \"a\", \"b\", \"c\", \"d\" and \"e\". Moreover, the set is split into $ n $ groups of $ 4 $ equal strings each. Vasya also has one special string $ a $ of the same length, consisting of letters \"a\" only.\n\nVasya wants to obtain from string $ a $ some fixed string $ b $ , in order to do this, he can use the strings from his set in any order. When he uses some string $ x $ , each of the letters in string $ a $ replaces with the next letter in alphabet as many times as the alphabet position, counting from zero, of the corresponding letter in string $ x $ . Within this process the next letter in alphabet after \"e\" is \"a\".\n\nFor example, if some letter in $ a $ equals \"b\", and the letter on the same position in $ x $ equals \"c\", then the letter in $ a $ becomes equal \"d\", because \"c\" is the second alphabet letter, counting from zero. If some letter in $ a $ equals \"e\", and on the same position in $ x $ is \"d\", then the letter in $ a $ becomes \"c\". For example, if the string $ a $ equals \"abcde\", and string $ x $ equals \"baddc\", then $ a $ becomes \"bbabb\".\n\nA used string disappears, but Vasya can use equal strings several times.\n\nVasya wants to know for $ q $ given strings $ b $ , how many ways there are to obtain from the string $ a $ string $ b $ using the given set of $ 4n $ strings? Two ways are different if the number of strings used from some group of $ 4 $ strings is different. Help Vasya compute the answers for these questions modulo $ 10^{9}+7 $ .",
    "inputFormat": "The first line contains two integers $ n $ and $ m $ ( $ 1<=n,m<=500 $ ) \u2014 the number of groups of four strings in the set, and the length of all strings.\n\nEach of the next $ n $ lines contains a string $ s $ of length $ m $ , consisting of lowercase English letters \"a\", \"b\", \"c\", \"d\" and \"e\". This means that there is a group of four strings equal to $ s $ .\n\nThe next line contains single integer $ q $ ( $ 1<=q<=300 $ ) \u2014 the number of strings $ b $ Vasya is interested in.\n\nEach of the next $ q $ strings contains a string $ b $ of length $ m $ , consisting of lowercase English letters \"a\", \"b\", \"c\", \"d\" and \"e\" \u2014 a string Vasya is interested in.",
    "outputFormat": "For each string Vasya is interested in print the number of ways to obtain it from string $ a $ , modulo $ 10^{9}+7 $ .",
    "samples": [
        [
            "1 1\nb\n2\na\ne\n",
            "1\n1\n"
        ],
        [
            "2 4\naaaa\nbbbb\n1\ncccc\n",
            "5\n"
        ]
    ],
    "hint": "In the first example, we have $ 4 $ strings \"b\". Then we have the only way for each string $ b $ : select $ 0 $ strings \"b\" to get \"a\" and select $ 4 $ strings \"b\" to get \"e\", respectively. So, we have $ 1 $ way for each request.\n\nIn the second example, note that the choice of the string \"aaaa\" does not change anything, that is we can choose any amount of it (from $ 0 $ to $ 4 $ , it's $ 5 $ different ways) and we have to select the line \"bbbb\" $ 2 $ times, since other variants do not fit. We get that we have $ 5 $ ways for the request.",
    "translation": "\u6709 $n$ \u7ec4\uff0c\u6bcf\u7ec4\u542b\u6709 $4$ \u4e2a\u5b8c\u5168\u76f8\u540c\u7684\u5b57\u7b26\u4e32\uff0c\u6240\u6709\u7684 $4n$ \u4e2a\u5b57\u7b26\u4e32\u957f\u5ea6\u76f8\u540c\uff0c\u4e14\u6bcf\u4e2a\u5b57\u7b26\u4e32\u5747\u7531\u5c0f\u5199\u5b57\u6bcd `a`,`b`,`c`,`d`,`e` \u7ec4\u6210\u3002\u53e6\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u5b57\u7b26\u4e32 $a$ \u5168\u7531\u5b57\u6bcd `a` \u7ec4\u6210\uff0c\u5b57\u7b26\u4e32 $a$ \u7684\u957f\u5ea6\u4e0e\u8fd9 $4n$ \u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u76f8\u540c\uff0c\u5747\u4e3a\u8f93\u5165\u4e2d\u7ed9\u5b9a\u7684\u6570\u5b57 $m$ \u3002\n\n\u4e3a\u4e86\u628a\u5b57\u7b26\u4e32 $a$ \u53d8\u6210\u4e00\u4e9b\u56fa\u5b9a\u7684\u5b57\u7b26\u4e32 $b$ \uff0c\u53ef\u4ee5\u6309\u7167\u4efb\u4f55\u987a\u5e8f\u4f7f\u7528\u7ed9\u51fa\u7684\u8fd9\u4e9b\u5b57\u7b26\u4e32\u3002\u5f53\u4f7f\u7528\u5b57\u7b26\u4e32 $x$ \u65f6\uff0c $a$ \u4e2d\u7684\u6bcf\u4e2a\u5b57\u6bcd\u90fd\u4f1a\u53d8\u6210\u5bf9\u5e94\u7684\u4e0b\u4e00\u4e2a\u5b57\u6bcd\uff0c\u5e76\u91cd\u590d\u82e5\u5e72\u6b21\uff0c\u91cd\u590d\u6b21\u6570\u4e0e $x$ \u4e2d\u5bf9\u5e94\u4f4d\u7f6e\u5b57\u6bcd\u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u76f8\u540c\uff08\u4ece\u96f6\u5f00\u59cb\uff09\u3002\u7279\u522b\u5730\uff0c\u5728 `e` \u540e\u7684\u4e0b\u4e00\u4e2a\u5b57\u6bcd\u662f `a` \u3002\n\n\u4f8b\u5982\uff0c $a$ \u4e2d\u7684\u67d0\u4e2a\u5b57\u6bcd `b` \u548c $x$ \u4e2d\u7684 `c` \u4f4d\u7f6e\u76f8\u540c\uff0c\u5219 $a$ \u4e2d\u7684\u5b57\u6bcd\u53d8\u4e3a `d`\uff0c\u56e0\u4e3a `c` \u662f\u7b2c\u4e8c\u4e2a\u5b57\u6bcd\u8868\u5b57\u6bcd\uff0c`b`\u66ff\u6362\u4e24\u6b21\u5c31\u53d8\u4e3a `d` \u3002\u5982\u679c $a$ \u4e2d\u7684\u67d0\u4e2a\u5b57\u6bcd `e` \u548c $x$ \u4e2d\u7684 `d` \u4f4d\u7f6e\u76f8\u540c\uff0c\u5219 $a$ \u4e2d\u7684\u5b57\u6bcd\u53d8\u4e3a `c` \uff0c\u5373 `e` \u53d8\u6362\u4e09\u6b21\u540e\u7684\u7ed3\u679c\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5b57\u7b26\u4e32 $a$ \u7b49\u4e8e `abcde` \uff0c\u800c\u5b57\u7b26\u4e32 $x$ \u7b49\u4e8e `baddc` \uff0c\u5219 $a$ \u53d8\u4e3a `bbabb` \u3002**\u53ef\u4ee5\u628a\u8fd9\u4e2a\u64cd\u4f5c\u770b\u6210\u4e24\u4e2a\u4e94\u8fdb\u5236\u6570\u5b57\u8fdb\u884c\u4e0d\u8fdb\u4f4d\u7684\u52a0\u6cd5\u8fd0\u7b97\u3002**\n\n\u88ab\u4f7f\u7528\u8fc7\u7684\u5b57\u7b26\u4e32\u5c06\u4f1a\u6d88\u5931\uff0c\u4f46\u53ef\u4ee5\u591a\u6b21\u4f7f\u7528\u76f8\u7b49\u7684\u5b57\u7b26\u4e32\u3002\n\n\u73b0\u5728\u7ed9\u51fa $q$ \u4e2a\u8be2\u95ee $b$ \uff0c\u8981\u6c42\u5bf9\u6bcf\u4e2a\u8be2\u95ee\u6c42\u51fa\uff0c\u4f7f\u7528\u7ed9\u5b9a\u7684 $4n$ \u4e2a\u5b57\u7b26\u4e32\uff0c\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u53ef\u4ee5\u8ba9 $a$ \u53d8\u6210 $b$ \u3002\u4e24\u4e2a\u65b9\u6848\u4e0d\u540c\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u67d0\u4e00\u7ec4\u5b57\u7b26\u4e32\uff0c\u5176\u5728\u4e24\u79cd\u65b9\u6848\u4e2d\u88ab\u4f7f\u7528\u7684\u5b57\u7b26\u4e32\u7684\u4e2a\u6570\u4e0d\u540c\u3002\u8f93\u51fa\u7b54\u6848\u5bf9 $10^9+7$ \u53d6\u6a21\u540e\u7684\u7ed3\u679c\u3002\n\n`by DeaphetS,Modification cfkk`"
}