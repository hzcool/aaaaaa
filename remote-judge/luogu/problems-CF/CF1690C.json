{
    "description": "Recently, Polycarp completed $ n $ successive tasks.\n\nFor each completed task, the time $ s_i $ is known when it was given, no two tasks were given at the same time. Also given is the time $ f_i $ when the task was completed. For each task, there is an unknown value $ d_i $ ( $ d_i>0 $ ) \u2014 duration of task execution.\n\nIt is known that the tasks were completed in the order in which they came. Polycarp performed the tasks as follows:\n\n- As soon as the very first task came, Polycarp immediately began to carry it out.\n- If a new task arrived before Polycarp finished the previous one, he put the new task at the end of the queue.\n- When Polycarp finished executing the next task and the queue was not empty, he immediately took a new task from the head of the queue (if the queue is empty \u2014 he just waited for the next task).\n\nFind $ d_i $ (duration) of each task.\n\n### \u9898\u76ee\u7ffb\u8bd1\n\nPolycarp\uff08\u4ee5\u4e0b\u79f0\u4e3aPc\uff09\u5f97\u5230\u4e86 $n\\ (1\\le n\\le2\\times 10^5)$ \u4e2a\u4efb\u52a1\u3002\n\n\u6bcf\u4e2a\u4efb\u52a1\u6709\u4e24\u4e2a\u5c5e\u6027 $s_i$ \u548c $f_i$\uff0c\u5206\u522b\u8868\u793a\u8fd9\u4e2a\u4efb\u52a1\u5f00\u59cb\u548c\u7ed3\u675f\u7684\u65f6\u95f4\u3002\n\nPc\u5728\u4efb\u52a1\u5f00\u59cb\u65f6\u95f4\u6ca1\u5230\u7684\u65f6\u5019\u4ec0\u4e48\u90fd\u4e0d\u4f1a\u505a\uff0c\u65f6\u95f4\u4e00\u5230\u5c31\u4f1a\u7acb\u9a6c\u5f00\u59cb\u3002\n\n\u5728\u4efb\u52a1\u671f\u95f4\uff0c\u4e0b\u4e00\u4e2a\u4efb\u52a1\u6765\u4e86Pc\u4f1a\u628a\u8fd9\u4e2a\u4efb\u52a1\u52a0\u5230\u4efb\u52a1\u5217\u8868\u7684\u672b\u5c3e\u3002\n\n\u5f53\u5904\u7406\u5b8c\u4e00\u4e2a\u4efb\u52a1\u540e\uff0c\u5982\u679c\u4efb\u52a1\u5217\u8868\u8fd8\u6709\u4efb\u52a1\u65f6\uff0c\u4f1a\u7acb\u9a6c\u5904\u7406\u7b2c\u4e00\u4e2a\u4efb\u52a1\u3002\n\n\u5f53\u5904\u7406\u5b8c\u4e00\u4e2a\u4efb\u52a1\u540e\uff0c\u5982\u679c\u4efb\u52a1\u5217\u8868\u6ca1\u6709\u4efb\u52a1\u4e86\uff0cPc\u4ec0\u4e48\u90fd\u4e0d\u4f1a\u505a\u76f4\u5230\u4e0b\u4e00\u4e2a\u4efb\u52a1\u6765\u4e34\u3002\n\n\u5904\u7406\u6bcf\u4e2a\u4efb\u52a1\u7684\u65f6\u95f4\u5c31\u662f\u539f\u6587\u4e2d\u7684 $d_i$\u3002\n\n\u6d4b\u8bd5\u6570\u636e\u4e2a\u6570 $t\\ (1\\le t\\le 10^4)$\u3002\n\n**\u8f93\u5165\uff1a**\n\n\u7b2c\u4e00\u884c\uff0c$t$\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6d4b\u8bd5\u6570\u636e\uff1a\n\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u4efb\u52a1\u6570 $n$\uff0c\n\n\u7b2c\u4e8c\u884c $n$ \u4e2a\u6b63\u6574\u6570\uff0c\u8868\u793a $s_1<s_2<s_2<...<s_n\\ (0\\le s_i\\le 10^9)$\uff0c\n\n\u7b2c\u4e09\u884c $n$ \u4e2a\u6b63\u6574\u6570\uff0c\u8868\u793a $f_1<f_2<f_3<...<f_n\\ (s_i<f_i\\le 10^9)$\u3002\n\n**\u8f93\u51fa\uff1a**\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6d4b\u8bd5\u6570\u636e\uff0c\u4e00\u884c $n$ \u4e2a\u6b63\u6574\u6570\uff0c\u8868\u793a $d_i$\u3002",
    "inputFormat": "The first line contains a single integer $ t $ ( $ 1 \\le t \\le 10^4 $ ) \u2014 the number of test cases.\n\nThe descriptions of the input data sets follow.\n\nThe first line of each test case contains one integer $ n $ ( $ 1 \\le n \\le 2 \\cdot 10^5 $ ).\n\nThe second line of each test case contains exactly $ n $ integers $ s_1 < s_2 < \\dots < s_n $ ( $ 0 \\le s_i \\le 10^9 $ ).\n\nThe third line of each test case contains exactly $ n $ integers $ f_1 < f_2 < \\dots < f_n $ ( $ s_i < f_i \\le 10^9 $ ).\n\nIt is guaranteed that the sum of $ n $ over all test cases does not exceed $ 2 \\cdot 10^5 $ .",
    "outputFormat": "For each of $ t $ test cases print $ n $ positive integers $ d_1, d_2, \\dots, d_n $ \u2014 the duration of each task.",
    "samples": [
        [
            "4\n3\n0 3 7\n2 10 11\n2\n10 15\n11 16\n9\n12 16 90 195 1456 1569 3001 5237 19275\n13 199 200 260 9100 10000 10914 91066 5735533\n1\n0\n1000000000",
            "2 7 1 \n1 1 \n1 183 1 60 7644 900 914 80152 5644467 \n1000000000"
        ]
    ],
    "hint": "First test case:\n\nThe queue is empty at the beginning: $ [ ] $ . And that's where the first task comes in. At time $ 2 $ , Polycarp finishes doing the first task, so the duration of the first task is $ 2 $ . The queue is empty so Polycarp is just waiting.\n\nAt time $ 3 $ , the second task arrives. And at time $ 7 $ , the third task arrives, and now the queue looks like this: $ [7] $ .\n\nAt the time $ 10 $ , Polycarp finishes doing the second task, as a result, the duration of the second task is $ 7 $ .\n\nAnd at time $ 10 $ , Polycarp immediately starts doing the third task and finishes at time $ 11 $ . As a result, the duration of the third task is $ 1 $ .\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1690C/d2350660c42c220190947ba223600b0328cd0bf5.png)An example of the first test case."
}