{
    "description": "The Bitlandians are quite weird people. They do everything differently. They have a different alphabet so they have a different definition for a string.\n\nA Bitlandish string is a string made only of characters \"0\" and \"1\".\n\nBitHaval (the mayor of Bitland) loves to play with Bitlandish strings. He takes some Bitlandish string $ a $ , and applies several (possibly zero) operations to it. In one operation the mayor may take any two adjacent characters of a string, define one of them as $ x $ and the other one as $ y $ . Then he calculates two values $ p $ and $ q $ : $ p=x\u00a0xor\u00a0y $ , $ q=x\u00a0or\u00a0y $ . Then he replaces one of the two taken characters by $ p $ and the other one by $ q $ .\n\nThe $ xor $ operation means the bitwise excluding OR operation. The $ or $ operation is the bitwise OR operation.\n\nSo for example one operation can transform string 11 to string 10 or to string 01. String 1 cannot be transformed into any other string.\n\nYou've got two Bitlandish strings $ a $ and $ b $ . Your task is to check if it is possible for BitHaval to transform string $ a $ to string $ b $ in several (possibly zero) described operations.",
    "inputFormat": "The first line contains Bitlandish string $ a $ , the second line contains Bitlandish string $ b $ . The strings can have different lengths.\n\nIt is guaranteed that the given strings only consist of characters \"0\" and \"1\". The strings are not empty, their length doesn't exceed $ 10^{6} $ .",
    "outputFormat": "Print \"YES\" if $ a $ can be transformed into $ b $ , otherwise print \"NO\". Please do not print the quotes.",
    "samples": [
        [
            "11\n10\n",
            "YES\n"
        ],
        [
            "1\n01\n",
            "NO\n"
        ],
        [
            "000\n101\n",
            "NO\n"
        ]
    ],
    "hint": "",
    "translation": "\u7ed9\u5b9a\u4e24\u4e2a$01$ \u4e32$,$ \u95ee$A$ \u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u76f8\u90bb\u4e24\u4f4d\u7684\u5f02\u6216\u548c\u6216\u64cd\u4f5c\u5f97\u5230$B$ \u4e32\u3002\n\n>\u5f02\u6216$:01/10\\to11,11\\to10/01$  \n\n>\u6216$:10/01\\to11$  \n\n\u611f\u8c22@Kelin \u63d0\u4f9b\u7684\u7ffb\u8bd1"
}