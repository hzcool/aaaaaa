{
    "description": "Piegirl has found a monster and a book about monsters and pies. When she is reading the book, she found out that there are $ n $ types of monsters, each with an ID between $ 1 $ and $ n $ . If you feed a pie to a monster, the monster will split into some number of monsters (possibly zero), and at least one colorful diamond. Monsters may be able to split in multiple ways.\n\nAt the begining Piegirl has exactly one monster. She begins by feeding the monster a pie. She continues feeding pies to monsters until no more monsters are left. Then she collects all the diamonds that were created.\n\nYou will be given a list of split rules describing the way in which the various monsters can split. Every monster can split in at least one way, and if a monster can split in multiple ways then each time when it splits Piegirl can choose the way it splits.\n\nFor each monster, determine the smallest and the largest number of diamonds Piegirl can possibly collect, if initially she has a single instance of that monster. Piegirl has an unlimited supply of pies.",
    "inputFormat": "The first line contains two integers: $ m $ and $ n $ ( $ 1<=m,n<=10^{5} $ ), the number of possible splits and the number of different monster types. Each of the following $ m $ lines contains a split rule. Each split rule starts with an integer (a monster ID) $ m_{i} $ ( $ 1<=m_{i}<=n $ ), and a positive integer $ l_{i} $ indicating the number of monsters and diamonds the current monster can split into. This is followed by $ l_{i} $ integers, with positive integers representing a monster ID and -1 representing a diamond.\n\nEach monster will have at least one split rule. Each split rule will have at least one diamond. The sum of $ l_{i} $ across all split rules will be at most $ 10^{5} $ .",
    "outputFormat": "For each monster, in order of their IDs, print a line with two integers: the smallest and the largest number of diamonds that can possibly be collected by starting with that monster. If Piegirl cannot possibly end up in a state without monsters, print -1 for both smallest and the largest value. If she can collect an arbitrarily large number of diamonds, print -2 as the largest number of diamonds.\n\nIf any number in output exceeds $ 314000000 $ (but is finite), print $ 314000000 $ instead of that number.",
    "samples": [
        [
            "6 4\n1 3 -1 1 -1\n1 2 -1 -1\n2 3 -1 3 -1\n2 3 -1 -1 -1\n3 2 -1 -1\n4 2 4 -1\n",
            "2 -2\n3 4\n2 2\n-1 -1\n"
        ],
        [
            "3 2\n1 2 1 -1\n2 2 -1 -1\n2 3 2 1 -1\n",
            "-1 -1\n2 2\n"
        ]
    ],
    "hint": "",
    "translation": "### \u9898\u610f\n\n\u6709 $n$ \u79cd\u666e\u901a\u6750\u6599\u548c $m$ \u79cd\u53d8\u6362\u89c4\u5219\u3002\u666e\u901a\u6750\u6599\u7f16\u53f7\u4ece $1$ \u5230 $n$\uff0c\u6b64\u5916\u8fd8\u6709\u4e00\u79cd\u7f16\u53f7\u4e3a $-1$ \u7684\u7279\u6b8a\u6750\u6599\u3002\n\n\u6bcf\u79cd\u53d8\u6362\u89c4\u5219\u5747\u5f62\u5982\uff0c\u6d88\u8017\u4e00\u4efd**\u666e\u901a\u6750\u6599** $x_i$\uff0c\u83b7\u5f97\u6750\u6599 $p_{i,1}\\dots p_{i,k_i}$ \u5404\u4e00\u4efd\u3002\n\n\u4fdd\u8bc1\u5bf9\u4e8e\u7f16\u53f7 $1\\dots n$ \u7684\u6bcf\u79cd\u6750\u6599\u81f3\u5c11\u6709\u4e00\u4e2a\u53d8\u6362\u89c4\u5219\u6d88\u8017\u8be5\u6750\u6599\uff0c\u4fdd\u8bc1\u6bcf\u79cd\u53d8\u6362\u89c4\u5219\u81f3\u5c11\u4ea7\u751f\u4e00\u4efd\u7279\u6b8a\u6750\u6599\u3002\n\n\u5bf9\u4e8e\u6bcf\u79cd\u666e\u901a\u6750\u6599\uff0c\u4f60\u9700\u8981\u6c42\u51fa\uff0c\u82e5\u521d\u59cb\u65f6\u6070\u6709\u4e00\u4efd\u8be5\u6750\u6599\uff0c\u4e00\u76f4\u8fdb\u884c\u53d8\u6362\u76f4\u81f3\u65e0\u6cd5\u53d8\u6362\u65f6\uff0c\u6700\u5c11\u548c\u6700\u591a\u5404\u53ef\u83b7\u5f97\u591a\u5c11\u7279\u6b8a\u6750\u6599\u3002\n\n\u8f93\u51fa\u89c4\u5219\u5982\u4e0b\uff1a\n\n1. \u82e5\u65e0\u8bba\u5982\u4f55\uff0c\u53d8\u6362\u5747\u65e0\u6cd5\u505c\u6b62\uff0c\u8be5\u884c\u8f93\u51fa `-1 -1`\u3002\n2. \u82e5\u4f60\u53ef\u4ee5\u505c\u6b62\u53d8\u6362\uff0c\u4e5f\u53ef\u4ee5\u83b7\u5f97\u65e0\u9650\u591a\u7684\u7279\u6b8a\u6750\u6599\uff0c\u5219\u8be5\u884c\u6700\u5927\u503c\u7684\u4f4d\u7f6e\u8f93\u51fa `-2`\u3002\n3. \u82e5\u4e0d\u6ee1\u8db3\u4ee5\u4e0a\u4e24\u70b9\uff0c\u5219\u4f60\u8f93\u51fa\u7684\u7b54\u6848\u5bf9 $314000000$ \u53d6 $\\min$\u3002\n\n### \u8bfb\u5165\n\n\u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570 $m,n$\uff0c\u6ce8\u610f\u5148 $m$ \u540e $n$\u3002\n\n\u63a5\u4e0b\u6765 $m$ \u884c\uff0c\u6bcf\u884c\u63cf\u8ff0\u4e00\u4e2a\u53d8\u6362\u89c4\u5219\u3002\n\n\u9996\u5148\u4e24\u4e2a\u6b63\u6574\u6570 $x_i,k_i$\uff0c\u8868\u793a\u6d88\u8017\u7684\u6750\u6599\u548c\u8f6c\u5316\u540e\u7269\u54c1\u6570\u3002\u63a5\u4e0b\u6765 $k_i$ \u4e2a\u6570 $p_{i,1}\\dots p_{i,k_i}$\u3002\n\n$n,m,\\sum k_i\\le 10^5$\u3002"
}