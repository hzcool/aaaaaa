{
    "description": "The fox Yae climbed the tree of the Sacred Sakura. A tree is a connected undirected graph that does not contain cycles.\n\nThe fox uses her magical powers to move around the tree. Yae can jump from vertex $ v $ to another vertex $ u $ if and only if the distance between these vertices does not exceed $ 2 $ . In other words, in one jump Yae can jump from vertex $ v $ to vertex $ u $ if vertices $ v $ and $ u $ are connected by an edge, or if there exists such vertex $ w $ that vertices $ v $ and $ w $ are connected by an edge, and also vertices $ u $ and $ w $ are connected by an edge.\n\nAfter Yae was able to get the sakura petal, she wondered if there was a cyclic route in the tree $ v_1, v_2, \\ldots, v_n $ such that:\n\n- the fox can jump from vertex $ v_i $ to vertex $ v_{i + 1} $ ,\n- the fox can jump from vertex $ v_n $ to vertex $ v_1 $ ,\n- all $ v_i $ are pairwise distinct.\n\nHelp the fox determine if the required traversal exists.",
    "inputFormat": "The first line contains one integer $ n $ ( $ 2 \\le n \\le 2 \\cdot 10^5 $ ) \u2014the number of vertices of the tree.\n\nEach of the following $ n - 1 $ lines contains two integers $ u $ and $ v $ ( $ 1 \\le u, v \\le n $ , $ u \\ne v $ ) \u2014 vertices connected by an edge. It is guaranteed that these edges form a tree.",
    "outputFormat": "On the first line, print \"Yes\" (without quotes) if the required route of the tree exists, or \"No\" (without quotes) otherwise.\n\nIf the required tree traversal exists, on the second line print $ n $ integers of different integers $ v_1, v_2, \\ldots, v_n $ ( $ 1 \\le v_i \\le n $ ) \u2014 the vertices of the tree in traversal order.\n\nIf there are several correct traversals, output any of them.",
    "samples": [
        [
            "5\n1 2\n1 3\n3 4\n3 5",
            "Yes\n4 5 1 2 3"
        ],
        [
            "3\n1 2\n1 3",
            "Yes\n1 2 3"
        ],
        [
            "15\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n4 8\n4 9\n5 10\n5 11\n6 12\n6 13\n7 14\n7 15",
            "No"
        ]
    ],
    "hint": "The tree from the first example is shown below. The bold arrows indicate the fox's route.\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1819C/6bad1e734d7bf7c06ffb23793e442c0a26b52d93.png)In the second example, any sequence of three different vertices is a correct route, because the fox can jump from any vertex to any vertex.\n\nThe tree from the third example is shown below. It can be shown that there is no required route for it.\n\n ![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1819C/270f409ccf855282cb41fd1408a0109c9993ae84.png)",
    "translation": "### \u9898\u76ee\u63cf\u8ff0\n\n\u7ed9\u5b9a\u6574\u6570 $n$ \u548c\u4e00\u68f5\u5305\u542b $n$ \u4e2a\u8282\u70b9\u7684\u6811\u3002  \n\u8bb0 $\\text{Dist}(x,y)$ \u8868\u793a\u6811\u4e0a\u8282\u70b9 $x,y$ \u4e4b\u95f4\u6700\u77ed\u8def\u5f84\u7684\u8fb9\u6570\u3002  \n\u4f60\u9700\u8981\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e00\u4e2a $1\\sim n$ \u7684\u6392\u5217 $p$\uff0c\u6ee1\u8db3\uff1a\n\n- $\\text{Dist}(p_i,p_{i+1})\\leq 2$ \u5bf9\u4efb\u610f\u6574\u6570 $i(1\\leq i<n)$ \u6210\u7acb\u3002\n- $\\text{Dist}(p_1,p_n)\\leq2$\u3002\n\n\u5b58\u5728\u5219\u8f93\u51fa `Yes` \u7136\u540e\u8f93\u51fa\u4efb\u610f\u4e00\u4e2a\u6ee1\u8db3\u8981\u6c42\u7684 $p$\uff0c\u4e0d\u5b58\u5728\u5219\u8f93\u51fa `No`\u3002  \n\n### \u8f93\u5165\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\u8f93\u5165\u4e00\u4e2a\u6574\u6570 $n(2\\leq n\\leq2\\times10^5)$\u3002  \n\u63a5\u4e0b\u6765\u8f93\u5165 $n-1$ \u884c\uff0c\u6bcf\u884c\u8f93\u5165\u4e24\u4e2a\u6574\u6570 $u,v(1\\leq u,v\\leq n;u\\not=v)$\uff0c\u8868\u793a\u6811\u7684\u8282\u70b9 $u,v$ \u4e4b\u95f4\u6709\u4e00\u6761\u8fb9\u3002  \n\u4fdd\u8bc1\u7ed9\u5b9a\u7684\u662f\u68f5\u6811\u3002\n\n### \u8f93\u51fa\u683c\u5f0f\n\n\u5bf9\u4e8e\u6bcf\u7ec4\u6570\u636e\uff1a  \n\u5982\u679c\u4e0d\u5b58\u5728\u6ee1\u8db3\u8981\u6c42\u7684 $p$\uff0c\u8f93\u51fa\u4e00\u884c `No`\u3002  \n\u5426\u5219\uff1a\n\n- \u9996\u5148\u8f93\u51fa\u4e00\u884c `Yes`\u3002\n- \u63a5\u4e0b\u6765\u8f93\u51fa\u4e00\u884c $n$ \u4e2a\u6574\u6570\u8868\u793a\u4f60\u6240\u6784\u9020\u7684\u6ee1\u8db3\u8981\u6c42\u7684\u6392\u5217 $p$\u3002\n\n\u5982\u679c\u6709\u591a\u4e2a\u6ee1\u8db3\u8981\u6c42\u7684 $p$\uff0c\u8f93\u51fa\u4efb\u610f\u4e00\u4e2a\u5373\u53ef\u3002\n\n### \u6837\u4f8b\u89e3\u91ca\n\n\u4e0b\u65b9\u7684\u56fe\u7247\u5206\u522b\u5c55\u793a\u4e86\u6837\u4f8b\u4e00\u548c\u6837\u4f8b\u4e09\u5bf9\u5e94\u7684\u6811\u3002"
}