{
    "description": "Monocarp is playing a tower defense game. A level in the game can be represented as an OX axis, where each lattice point from $ 1 $ to $ n $ contains a tower in it.\n\nThe tower in the $ i $ -th point has $ c_i $ mana capacity and $ r_i $ mana regeneration rate. In the beginning, before the $ 0 $ -th second, each tower has full mana. If, at the end of some second, the $ i $ -th tower has $ x $ mana, then it becomes $ \\mathit{min}(x + r_i, c_i) $ mana for the next second.\n\nThere are $ q $ monsters spawning on a level. The $ j $ -th monster spawns at point $ 1 $ at the beginning of $ t_j $ -th second, and it has $ h_j $ health. Every monster is moving $ 1 $ point per second in the direction of increasing coordinate.\n\nWhen a monster passes the tower, the tower deals $ \\mathit{min}(H, M) $ damage to it, where $ H $ is the current health of the monster and $ M $ is the current mana amount of the tower. This amount gets subtracted from both monster's health and tower's mana.\n\nUnfortunately, sometimes some monsters can pass all $ n $ towers and remain alive. Monocarp wants to know what will be the total health of the monsters after they pass all towers.",
    "inputFormat": "The first line contains a single integer $ n $ ( $ 1 \\le n \\le 2 \\cdot 10^5 $ ) \u2014 the number of towers.\n\nThe $ i $ -th of the next $ n $ lines contains two integers $ c_i $ and $ r_i $ ( $ 1 \\le r_i \\le c_i \\le 10^9 $ ) \u2014 the mana capacity and the mana regeneration rate of the $ i $ -th tower.\n\nThe next line contains a single integer $ q $ ( $ 1 \\le q \\le 2 \\cdot 10^5 $ ) \u2014 the number of monsters.\n\nThe $ j $ -th of the next $ q $ lines contains two integers $ t_j $ and $ h_j $ ( $ 0 \\le t_j \\le 2 \\cdot 10^5 $ ; $ 1 \\le h_j \\le 10^{12} $ ) \u2014 the time the $ j $ -th monster spawns and its health.\n\nThe monsters are listed in the increasing order of their spawn time, so $ t_j < t_{j+1} $ for all $ 1 \\le j \\le q-1 $ .",
    "outputFormat": "Print a single integer \u2014 the total health of all monsters after they pass all towers.",
    "samples": [
        [
            "3\n5 1\n7 4\n4 2\n4\n0 14\n1 10\n3 16\n10 16",
            "4"
        ],
        [
            "5\n2 1\n4 1\n5 4\n7 5\n8 3\n9\n1 21\n2 18\n3 14\n4 24\n5 8\n6 25\n7 19\n8 24\n9 24",
            "40"
        ]
    ],
    "hint": "",
    "translation": "### \u9898\u610f\u7b80\u8ff0\n\n\u4e00\u4e2a\u5854\u9632\u6e38\u620f\u3002\n\n\u4e00\u5171\u6709 $n$ \u4e2a\u5854\u6309 $1 \\sim n$ \u7684\u987a\u5e8f\u6392\u6210\u4e00\u5217\uff0c\u6bcf\u5ea7\u5854\u90fd\u6709\u9b54\u529b\u5bb9\u91cf $c_i$ \u548c\u9b54\u529b\u6062\u590d\u901f\u7387 $r_i$\u3002\u5bf9\u4e8e\u4e00\u5ea7\u5854 $i$\uff0c\u6bcf\u8fc7\u4e00\u79d2\u5b83\u7684\u9b54\u529b $m_i$ \u4f1a\u53d8\u4e3a $\\min(m_i+r_i, c_i)$\u3002\u6bcf\u5ea7\u5854\u521d\u59cb\u65f6\u6ee1\u9b54\u529b\u3002\n\n\u4e00\u5171\u6709 $q$ \u4e2a\u602a\u7269\uff0c\u6bcf\u4e2a\u602a\u7269\u6709\u4e24\u4e2a\u5c5e\u6027 $t_i$ \u548c $h_i$\uff0c\u8868\u793a\u8fd9\u4e2a\u602a\u7269\u4f1a\u5728\u7b2c $t_i$ \u79d2\u51fa\u73b0\u5728\u7b2c\u4e00\u5ea7\u5854\u524d\u9762\u3002\u5f53\u5b83\u5230\u4e00\u5ea7\u5854 $j$ \u9762\u524d\u65f6\uff0c\u81ea\u5df1\u7684\u8840\u91cf $h_i$ \u4f1a\u51cf\u5c11 $\\min(h_i,m_j)$\uff0c\u5854\u7684\u9b54\u529b\u4e5f\u4f1a\u51cf\u5c11\u8fd9\u4e2a\u6570\u3002\u5f53\u602a\u7269\u8840\u91cf $h_i=0$ \u65f6\u505c\u6b62\u79fb\u52a8\uff0c\u5426\u5219\u5b83\u4e0b\u4e00\u79d2\u4f1a\u79fb\u52a8\u5230\u4e0b\u4e00\u5ea7\u5854\u3002\n\n\u6709\u4e9b\u602a\u7269\u5728\u7ecf\u8fc7\u5854 $n$ \u540e\u8840\u91cf\u4ecd\u672a\u51cf\u5c11\u81f3 $0$\uff0c\u8bf7\u4f60\u6c42\u51fa\u8fd9\u6837\u7684\u602a\u7269\u6700\u7ec8\u5269\u4e0b\u7684\u8840\u91cf\u603b\u548c\u3002\n\n### \u6570\u636e\u8303\u56f4\n\n- $1\\le n,q\\le2\\times10^5$\n- $1\\le c_i,r_i\\le 10^9$\n- $1\\le h_i\\le10^{12}$\n- $0\\le t_i\\le 2\\times10^5$\n- $\\forall 1\\le j<q,t_j<t_{j+1}$"
}