{
    "description": "ZS the Coder and Chris the Baboon has arrived at Udayland! They walked in the park where $ n $ trees grow. They decided to be naughty and color the trees in the park. The trees are numbered with integers from $ 1 $ to $ n $ from left to right.\n\nInitially, tree $ i $ has color $ c_{i} $ . ZS the Coder and Chris the Baboon recognizes only $ m $ different colors, so $ 0<=c_{i}<=m $ , where $ c_{i}=0 $ means that tree $ i $ is uncolored.\n\nZS the Coder and Chris the Baboon decides to color only the uncolored trees, i.e. the trees with $ c_{i}=0 $ . They can color each of them them in any of the $ m $ colors from $ 1 $ to $ m $ . Coloring the $ i $ -th tree with color $ j $ requires exactly $ p_{i,j} $ litres of paint.\n\nThe two friends define the beauty of a coloring of the trees as the minimum number of contiguous groups (each group contains some subsegment of trees) you can split all the $ n $ trees into so that each group contains trees of the same color. For example, if the colors of the trees from left to right are $ 2,1,1,1,3,2,2,3,1,3 $ , the beauty of the coloring is $ 7 $ , since we can partition the trees into $ 7 $ contiguous groups of the same color : $ {2},{1,1,1},{3},{2,2},{3},{1},{3} $ .\n\nZS the Coder and Chris the Baboon wants to color all uncolored trees so that the beauty of the coloring is exactly $ k $ . They need your help to determine the minimum amount of paint (in litres) needed to finish the job.\n\nPlease note that the friends can't color the trees that are already colored.",
    "inputFormat": "The first line contains three integers, $ n $ , $ m $ and $ k $ ( $ 1<=k<=n<=100 $ , $ 1<=m<=100 $ ) \u2014 the number of trees, number of colors and beauty of the resulting coloring respectively.\n\nThe second line contains $ n $ integers $ c_{1},c_{2},...,c_{n} $ ( $ 0<=c_{i}<=m $ ), the initial colors of the trees. $ c_{i} $ equals to $ 0 $ if the tree number $ i $ is uncolored, otherwise the $ i $ -th tree has color $ c_{i} $ .\n\nThen $ n $ lines follow. Each of them contains $ m $ integers. The $ j $ -th number on the $ i $ -th of them line denotes $ p_{i,j} $ ( $ 1<=p_{i,j}<=10^{9} $ ) \u2014 the amount of litres the friends need to color $ i $ -th tree with color $ j $ . $ p_{i,j} $ 's are specified even for the initially colored trees, but such trees still can't be colored.",
    "outputFormat": "Print a single integer, the minimum amount of paint needed to color the trees. If there are no valid tree colorings of beauty $ k $ , print $ -1 $ .",
    "samples": [
        [
            "3 2 2\n0 0 0\n1 2\n3 4\n5 6\n",
            "10"
        ],
        [
            "3 2 2\n2 1 2\n1 3\n2 4\n3 5\n",
            "-1"
        ],
        [
            "3 2 2\n2 0 0\n1 3\n2 4\n3 5\n",
            "5"
        ],
        [
            "3 2 3\n2 1 2\n1 3\n2 4\n3 5\n",
            "0"
        ]
    ],
    "hint": "In the first sample case, coloring the trees with colors $ 2,1,1 $ minimizes the amount of paint used, which equals to $ 2+3+5=10 $ . Note that $ 1,1,1 $ would not be valid because the beauty of such coloring equals to $ 1 $ ( $ {1,1,1} $ is a way to group the trees into a single group of the same color).\n\nIn the second sample case, all the trees are colored, but the beauty of the coloring is $ 3 $ , so there is no valid coloring, and the answer is $ -1 $ .\n\nIn the last sample case, all the trees are colored and the beauty of the coloring matches $ k $ , so no paint is used and the answer is $ 0 $ .",
    "translation": "\u9898\u610f\uff1a\n\n\u6709 $n$ \u68f5\u6811\uff0c $m$ \u79cd\u989c\u6599\uff0c\u8981\u6c42\u73b0\u5728\u8981\u7ed9\u8fd9\u4e9b\u6811\u6d82\u4e0a\u989c\u6599\uff0c\u6700\u540e\u6d82\u6210 $k$ \u6bb5\uff08\u8fde\u7eed\u989c\u8272\u76f8\u540c\u5212\u4e3a\u4e00\u6bb5\u5982 $2$ ,\u2009$1$ , $1$ ,\u2009$1$ ,\u2009$3$ ,\u2009$2$ ,\u2009$2$ ,\u2009$3$ ,\u2009$1$ ,\u2009$3$ \u662f$7$\u6bb5\uff09\uff0c\u6709\u4e9b\u6811\u5df2\u7ecf\u6d82\u4e86\uff0c\u5219\u4e0d\u6d82\u4e86\u53ea\u80fd\u6d82\u4e00\u6b21\uff0c\u8f93\u5165$n$\u4e2a\u6570\uff08\u6bcf\u4e2a\u6570\u4e3a$0$~$m$\uff09\uff0c0\u8868\u793a\u8fd8\u6ca1\u6709\u6d82\uff0c$1$~$m$\u8868\u793a\u5df2\u7ecf\u6d82\u4e86\u54ea\u79cd\u989c\u6599\u3002\u63a5\u4e0b\u6765\u8f93\u5165 $n$ \u884c $m$ \u5217\uff0c\u8868\u793a\u6bcf\u68f5\u6811\u6d82\u6210\u6bcf\u79cd\u989c\u8272\u6240\u8981\u7684\u989c\u6599\u91cf\u3002\u73b0\u5728\u8981\u628a\u6240\u6709\u6811\u90fd\u6d82\u4e0a\u989c\u6599\u6d82\u6210 $k$ \u6bb5\uff0c\u6c42\u6700\u5c11\u8981\u7528\u7684\u989c\u6599\u91cf\n\n\u7ffb\u8bd1 $by$ @Happynewyear"
}