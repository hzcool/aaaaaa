{
    "description": "This is the hard version of the problem. In this version, you need to find the answer for every prefix of the monster array.\n\nIn a computer game, you are fighting against $ n $ monsters. Monster number $ i $ has $ a_i $ health points, all $ a_i $ are integers. A monster is alive while it has at least $ 1 $ health point.\n\nYou can cast spells of two types:\n\n1. Deal $ 1 $ damage to any single alive monster of your choice.\n2. Deal $ 1 $ damage to all alive monsters. If at least one monster dies (ends up with $ 0 $ health points) as a result of this action, then repeat it (and keep repeating while at least one monster dies every time).\n\nDealing $ 1 $ damage to a monster reduces its health by $ 1 $ .\n\nSpells of type 1 can be cast any number of times, while a spell of type 2 can be cast at most once during the game.\n\nFor every $ k = 1, 2, \\ldots, n $ , answer the following question. Suppose that only the first $ k $ monsters, with numbers $ 1, 2, \\ldots, k $ , are present in the game. What is the smallest number of times you need to cast spells of type 1 to kill all $ k $ monsters?",
    "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $ t $ ( $ 1 \\le t \\le 10^4 $ ). The description of the test cases follows.\n\nEach test case consists of two lines. The first line contains a single integer $ n $ ( $ 1 \\le n \\le 2 \\cdot 10^5 $ ) \u2014 the number of monsters.\n\nThe second line contains $ n $ integers $ a_1, a_2, \\ldots, a_n $ ( $ 1 \\le a_i \\le n $ ) \u2014 monsters' health points.\n\nIt is guaranteed that the sum of $ n $ over all test cases does not exceed $ 2 \\cdot 10^5 $ .",
    "outputFormat": "For each test case, print $ n $ integers. The $ k $ -th of these integers must be equal to the smallest number of times you need to cast spells of type 1 to kill all $ k $ monsters, if only monsters with numbers $ 1, 2, \\ldots, k $ are present in the game.",
    "samples": [
        [
            "2\n3\n3 1 2\n6\n4 1 5 4 1 1",
            "2 1 0\n3 2 4 4 4 4"
        ]
    ],
    "hint": "In the first test case, for $ k = n $ , the initial health points of the monsters are $ [3, 1, 2] $ . It is enough to cast a spell of type 2:\n\n- Monsters' health points change to $ [2, 0, 1] $ . Since monster number $ 2 $ dies, the spell is repeated.\n- Monsters' health points change to $ [1, 0, 0] $ . Since monster number $ 3 $ dies, the spell is repeated.\n- Monsters' health points change to $ [0, 0, 0] $ . Since monster number $ 1 $ dies, the spell is repeated.\n- Monsters' health points change to $ [0, 0, 0] $ .\n\nSince it is possible to use no spells of type 1 at all, the answer is $ 0 $ .\n\nIn the second test case, for $ k = n $ , the initial health points of the monsters are $ [4, 1, 5, 4, 1, 1] $ . Here is one of the optimal action sequences:\n\n- Using a spell of type 1, deal $ 1 $ damage to monster number $ 1 $ . Monsters' health points change to $ [3, 1, 5, 4, 1, 1] $ .\n- Using a spell of type 1, deal $ 1 $ damage to monster number $ 4 $ . Monsters' health points change to $ [3, 1, 5, 3, 1, 1] $ .\n- Using a spell of type 1, deal $ 1 $ damage to monster number $ 4 $ again. Monsters' health points change to $ [3, 1, 5, 2, 1, 1] $ .\n- Use a spell of type 2:\n  - Monsters' health points change to $ [2, 0, 4, 1, 0, 0] $ . Since monsters number $ 2 $ , $ 5 $ , and $ 6 $ die, the spell is repeated.\n  - Monsters' health points change to $ [1, 0, 3, 0, 0, 0] $ . Since monster number $ 4 $ dies, the spell is repeated.\n  - Monsters' health points change to $ [0, 0, 2, 0, 0, 0] $ . Since monster number $ 1 $ dies, the spell is repeated.\n  - Monsters' health points change to $ [0, 0, 1, 0, 0, 0] $ .\n- Using a spell of type 1, deal $ 1 $ damage to monster number $ 3 $ . Monsters' health points change to $ [0, 0, 0, 0, 0, 0] $ .\n\nSpells of type 1 are cast $ 4 $ times in total. It can be shown that this is the smallest possible number.",
    "translation": "\u4f60\u9762\u524d\u6709 $n$ \u4e2a\u602a\u517d\uff0c\u7b2c $i$ \u4e2a\u602a\u517d\u7684\u751f\u547d\u503c\u662f $a_i$\u3002\u4f60\u6709\u4e24\u79cd\u64cd\u4f5c\u53ef\u4ee5\u4f7f\u7528\uff1a\n\n\u64cd\u4f5c\u4e00\uff1a\u9009\u62e9\u4e00\u53ea\u602a\u7269\uff0c\u9020\u6210\u4e00\u70b9\u4f24\u5bb3\u3002\n\n\u64cd\u4f5c\u4e8c\uff1a\u5bf9\u6240\u6709\u602a\u7269\u9020\u6210\u4e00\u70b9\u4f24\u5bb3\uff0c\u82e5\u6709\u602a\u7269\u56e0\u4e3a\u6b64\u64cd\u4f5c\u751f\u547d\u503c\u964d\u4e3a\u96f6\uff0c\u5219\u91cd\u590d\u6b21\u64cd\u4f5c\u4e00\u6b21\u3002\n\n\u64cd\u4f5c\u4e8c\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\uff0c\u6c42\u51fa\u80fd\u4ee4\u6240\u6709\u602a\u7269\u751f\u547d\u503c\u964d\u5230\u96f6\u53ca\u4ee5\u4e0b\u7684\u6700\u5c0f\u64cd\u4f5c\u4e00\u7684\u6b21\u6570\u3002"
}