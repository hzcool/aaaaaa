{
    "description": "You are given a binary string $ s $ consisting of only characters 0 and/or 1.\n\nYou can perform several operations on this string (possibly zero). There are two types of operations:\n\n- choose two consecutive elements and swap them. In order to perform this operation, you pay $ 10^{12} $ coins;\n- choose any element from the string and remove it. In order to perform this operation, you pay $ 10^{12}+1 $ coins.\n\nYour task is to calculate the minimum number of coins required to sort the string $ s $ in non-decreasing order (i. e. transform $ s $ so that $ s_1 \\le s_2 \\le \\dots \\le s_m $ , where $ m $ is the length of the string after applying all operations). An empty string is also considered sorted in non-decreasing order.",
    "inputFormat": "The first line contains a single integer $ t $ ( $ 1 \\le t \\le 10^4 $ ) \u2014 the number of test cases.\n\nThe only line of each test case contains the string $ s $ ( $ 1 \\le |s| \\le 3 \\cdot 10^5 $ ), consisting of only characters 0 and/or 1.\n\nThe sum of lengths of all given strings doesn't exceed $ 3 \\cdot 10^5 $ .",
    "outputFormat": "For each test case, print a single integer \u2014 the minimum number of coins required to sort the string $ s $ in non-decreasing order.",
    "samples": [
        [
            "6\n100\n0\n0101\n00101101\n1001101\n11111",
            "1000000000001\n0\n1000000000000\n2000000000001\n2000000000002\n0"
        ]
    ],
    "hint": "In the first example, you have to remove the $ 1 $ -st element, so the string becomes equal to 00.\n\nIn the second example, the string is already sorted.\n\nIn the third example, you have to swap the $ 2 $ -nd and the $ 3 $ -rd elements, so the string becomes equal to 0011.\n\nIn the fourth example, you have to swap the $ 3 $ -rd and the $ 4 $ -th elements, so the string becomes equal to 00011101, and then remove the $ 7 $ -th element, so the string becomes equal to 0001111.\n\nIn the fifth example, you have to remove the $ 1 $ -st element, so the string becomes equal to 001101, and then remove the $ 5 $ -th element, so the string becomes equal to 00111.\n\nIn the sixth example, the string is already sorted.",
    "translation": "\u7ed9\u5b9a\u4e00\u4e2a $01$ \u5b57\u7b26\u4e32\uff0c\u4f60\u53ef\u4ee5\u8fdb\u884c\u4ee5\u4e0b\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n1. \u4ea4\u6362\u76f8\u90bb\u7684\u4e24\u4e2a\u5143\u7d20\uff0c\u6b64\u64cd\u4f5c\u9700\u8981\u82b1\u8d39 $10^{12}$ \u4e2a\u91d1\u5e01\u3002\n\n2. \u5220\u9664\u67d0\u4e2a\u5143\u7d20\uff0c\u6b64\u64cd\u4f5c\u9700\u8981\u82b1\u8d39 $10^{12}+1$ \u4e2a\u91d1\u5e01\u3002\n\n\u4f60\u8981\u901a\u8fc7\u4ee5\u4e0a\u4e24\u79cd\u64cd\u4f5c\u4f7f\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5355\u8c03\u4e0d\u964d\uff0c\u6c42\u6700\u5c0f\u91d1\u5e01\u82b1\u8d39\u3002"
}