{
    "description": "Let's suppose you have an array $ a $ , a stack $ s $ (initially empty) and an array $ b $ (also initially empty).\n\nYou may perform the following operations until both $ a $ and $ s $ are empty:\n\n- Take the first element of $ a $ , push it into $ s $ and remove it from $ a $ (if $ a $ is not empty);\n- Take the top element from $ s $ , append it to the end of array $ b $ and remove it from $ s $ (if $ s $ is not empty).\n\nYou can perform these operations in arbitrary order.\n\nIf there exists a way to perform the operations such that array $ b $ is sorted in non-descending order in the end, then array $ a $ is called stack-sortable.\n\nFor example, $ [3,1,2] $ is stack-sortable, because $ b $ will be sorted if we perform the following operations:\n\n1. Remove $ 3 $ from $ a $ and push it into $ s $ ;\n2. Remove $ 1 $ from $ a $ and push it into $ s $ ;\n3. Remove $ 1 $ from $ s $ and append it to the end of $ b $ ;\n4. Remove $ 2 $ from $ a $ and push it into $ s $ ;\n5. Remove $ 2 $ from $ s $ and append it to the end of $ b $ ;\n6. Remove $ 3 $ from $ s $ and append it to the end of $ b $ .\n\nAfter all these operations $ b=[1,2,3] $ , so $ [3,1,2] $ is stack-sortable. $ [2,3,1] $ is not stack-sortable.\n\nYou are given $ k $ first elements of some permutation $ p $ of size $ n $ (recall that a permutation of size $ n $ is an array of size $ n $ where each integer from $ 1 $ to $ n $ occurs exactly once). You have to restore the remaining $ n-k $ elements of this permutation so it is stack-sortable. If there are multiple answers, choose the answer such that $ p $ is lexicographically maximal (an array $ q $ is lexicographically greater than an array $ p $ iff there exists some integer $ k $ such that for every $ i<k $ $ q_{i}=p_{i} $ , and $ q_{k}>p_{k} $ ). You may not swap or change any of first $ k $ elements of the permutation.\n\nPrint the lexicographically maximal permutation $ p $ you can obtain.\n\nIf there exists no answer then output -1.",
    "inputFormat": "The first line contains two integers $ n $ and $ k $ ( $ 2<=n<=200000 $ , $ 1<=k<n $ ) \u2014 the size of a desired permutation, and the number of elements you are given, respectively.\n\nThe second line contains $ k $ integers $ p_{1} $ , $ p_{2} $ , ..., $ p_{k} $ ( $ 1<=p_{i}<=n $ ) \u2014 the first $ k $ elements of $ p $ . These integers are pairwise distinct.",
    "outputFormat": "If it is possible to restore a stack-sortable permutation $ p $ of size $ n $ such that the first $ k $ elements of $ p $ are equal to elements given in the input, print lexicographically maximal such permutation.\n\nOtherwise print -1.",
    "samples": [
        [
            "5 3\n3 2 1\n",
            "3 2 1 5 4 "
        ],
        [
            "5 3\n2 3 1\n",
            "-1\n"
        ],
        [
            "5 1\n3\n",
            "3 2 1 5 4 "
        ],
        [
            "5 2\n3 4\n",
            "-1\n"
        ]
    ],
    "hint": "",
    "translation": "\u7ed9\u4f60\u4e00\u6392\u5217\u7684\u4e00\u90e8\u5206,\u8ba9\u4f60\u8865\u5168\u6574\u4e2a\u6392\u5217\u4f7f\u5176\u5b57\u5178\u5e8f\u6700\u5927\u5e76\u4e14\u7ecf\u8fc7\u4e00\u4e2a\u6808\u8c03\u6574\u987a\u5e8f\u4e4b\u540e\u80fd\u591f\u987a\u5e8f\u8f93\u51fa"
}