{
    "description": "You are given a number $ k $ and a string $ s $ of length $ n $ , consisting of the characters '.' and '\\*'. You want to replace some of the '\\*' characters with 'x' characters so that the following conditions are met:\n\n- The first character '\\*' in the original string should be replaced with 'x';\n- The last character '\\*' in the original string should be replaced with 'x';\n- The distance between two neighboring replaced characters 'x' must not exceed $ k $ (more formally, if you replaced characters at positions $ i $ and $ j $ ( $ i < j $ ) and at positions $ [i+1, j-1] $ there is no \"x\" symbol, then $ j-i $ must be no more than $ k $ ).\n\nFor example, if $ n=7 $ , $ s= $ .\\*\\*.\\*\\*\\* and $ k=3 $ , then the following strings will satisfy the conditions above:\n\n- .xx.\\*xx;\n- .x\\*.x\\*x;\n- .xx.xxx.\n\n But, for example, the following strings will not meet the conditions: - .\\*\\*.\\*xx (the first character '\\*' should be replaced with 'x');\n- .x\\*.xx\\* (the last character '\\*' should be replaced with 'x');\n- .x\\*.\\*xx (the distance between characters at positions $ 2 $ and $ 6 $ is greater than $ k=3 $ ).\n\nGiven $ n $ , $ k $ , and $ s $ , find the minimum number of '\\*' characters that must be replaced with 'x' in order to meet the above conditions.",
    "inputFormat": "The first line contains one integer $ t $ ( $ 1 \\le t \\le 500 $ ). Then $ t $ test cases follow.\n\nThe first line of each test case contains two integers $ n $ and $ k $ ( $ 1 \\le k \\le n \\le 50 $ ).\n\nThe second line of each test case contains a string $ s $ of length $ n $ , consisting of the characters '.' and '\\*'.\n\nIt is guaranteed that there is at least one '\\*' in the string $ s $ .\n\nIt is guaranteed that the distance between any two neighboring '\\*' characters does not exceed $ k $ .",
    "outputFormat": "For each test case output the minimum number of '\\*' characters that must be replaced with 'x' characters in order to satisfy the conditions above.",
    "samples": [
        [
            "5\n7 3\n.**.***\n5 1\n..*..\n5 2\n*.*.*\n3 2\n*.*\n1 1\n*",
            "3\n1\n3\n2\n1"
        ]
    ],
    "hint": "",
    "translation": "\u6709\u4e00\u4e2a\u7531 `.` \u548c `*` \u7ec4\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u4f60\u9700\u8981\u5c06 `*` \u4fee\u6539\u6210 `x` \uff0c\u4f7f\u5f97\u6bcf\u4e24\u4e2a\u6ca1\u6709\u5176\u4ed6 `x` \u7684 `x` \u4e4b\u95f4\u7684\u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8e $k$\u3002\n\n\u7279\u522b\u5730\uff0c\u7b2c\u4e00\u4e2a `*` \u548c\uff0c\u6700\u540e\u4e00\u4e2a `*` \u5fc5\u987b\u8981\u6539\u53d8\u3002\n\n\u6c42\u51fa\u5f53\u5b57\u7b26\u4e32\u6ee1\u8db3\u6761\u4ef6\u65f6\uff0c\u6700\u5c11\u9700\u8981\u6539\u53d8\u7684\u6b21\u6570\u3002\n\n**\u672c\u9898\u6709 $t$ \u7ec4\u6d4b\u8bd5\u6570\u636e**\n\n\u7b2c\u4e00\u884c\u6709\u4e00\u4e2a\u53d8\u91cf $t$ $(1\\leq t \\leq 500)$\uff0c \u8868\u793a\u6d4b\u8bd5\u6570\u636e\u7684\u6570\u91cf\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u6d4b\u8bd5\u6570\u636e\uff0c\u7b2c\u4e00\u884c\u6709\u4e24\u4e2a\u53d8\u91cf $n$ \u548c $k$ $(1\\leq k \\leq n \\leq 500)$\u3002\u7b2c\u4e8c\u884c\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u53ea\u5305\u542b `.` \u548c `*` \u3002\n\n\u6570\u636e\u4fdd\u8bc1\u5b57\u7b26\u4e32\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a`*`\uff0c\u4e14\u4efb\u610f\u4e24\u4e2a\u76f8\u90bb\u7684`*`\u5b57\u7b26\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e0d\u8d85\u8fc7  $k$ \u3002"
}