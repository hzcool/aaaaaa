{
    "description": "You are given a binary string $ s $ of length $ n $ . We define a maximal substring as a substring that cannot be extended while keeping all elements equal. For example, in the string $ 11000111 $ there are three maximal substrings: $ 11 $ , $ 000 $ and $ 111 $ .\n\nIn one operation, you can select two maximal adjacent substrings. Since they are maximal and adjacent, it's easy to see their elements must have different values. Let $ a $ be the length of the sequence of ones and $ b $ be the length of the sequence of zeros. Then do the following:\n\n- If $ a \\ge b $ , then replace $ b $ selected zeros with $ b $ ones.\n- If $ a < b $ , then replace $ a $ selected ones with $ a $ zeros.\n\nAs an example, for $ 1110000 $ we make it $ 0000000 $ , for $ 0011 $ we make it $ 1111 $ . We call a string being good if it can be turned into $ 1111...1111 $ using the aforementioned operation any number of times (possibly, zero). Find the number of good substrings among all $ \\frac{n(n+1)}{2} $ non-empty substrings of $ s $ .",
    "inputFormat": "Each test consists of multiple test cases. The first line contains a single integer $ t $ ( $ 1 \\leq t \\leq 10^5 $ ) \u2014 the number of test cases. The description of test cases follows.\n\nThe first line of each test case contains $ n $ ( $ 1 \\le n \\le 2 \\cdot 10^5 $ ) \u2014 the length of the string $ s $ .\n\nThe second line of each test case contains the binary string $ s $ of length $ n $ .\n\nIt is guaranteed that sum of $ n $ across all test cases doesn't exceed $ 2 \\cdot 10^5 $ .",
    "outputFormat": "For each test case, print a single integer \u2014 the number of good substrings.",
    "samples": [
        [
            "4\n6\n100011\n3\n101\n5\n11111\n6\n010101",
            "8\n5\n15\n18"
        ]
    ],
    "hint": "Let's define a substring from index $ l $ to index $ r $ as $ [l, r] $ .\n\nFor the first test case, the good substrings are:\n\n- $ [1,1] $ ,\n- $ [1,2] $ ,\n- $ [3,6] $ ,\n- $ [4,5] $ ,\n- $ [4,6] $ ,\n- $ [5,5] $ ,\n- $ [5,6] $ ,\n- $ [6,6] $ .\n\nIn the second test case, all substrings are good except $ [2,2] $ .\n\nIn the third test case, all substrings are good.",
    "translation": "\u4f60\u6709\u4e00\u4e2a\u53ea\u7531 $0$ \u548c $1$ \u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u3002\u6211\u4eec\u5b9a\u4e49\u4e00\u6b21\u64cd\u4f5c\u4e3a\u9009\u53d6\u4e00\u5bf9\u76f8\u90bb\u7684\u6781\u957f\u76f8\u540c\u5b50\u6bb5\uff08\u5fc5\u7136\u4e00\u4e2a\u4e3a\u82e5\u5e72 $0$\uff0c\u4e00\u4e2a\u4e3a\u82e5\u5e72 $1$\uff09\uff0c\u8bbe\u8fde\u7eed $0,1$ \u7684\u4e2a\u6570\u5206\u522b\u4e3a $a,b$ \uff0c\u82e5$a\\le b$ \u5219\u5c06\u5176\u4e2d $0$ \u53d8\u6210 $1$ \uff1b\u53cd\u4e4b\u5219\u5c06\u5176\u4e2d $1$ \u53d8\u6210 $0$ \u3002\u95ee\u4f60\u7684\u5b57\u7b26\u4e32\u6709\u591a\u5c11\u8fde\u7eed\u5b50\u6bb5\u53ef\u4ee5\u7ecf\u8fc7\u82e5\u5e72\u64cd\u4f5c\u5168\u53d8\u6210 $1$ \u3002"
}