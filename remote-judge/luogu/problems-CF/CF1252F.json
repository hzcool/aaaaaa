{
    "description": "A forestation is an act of planting a bunch of trees to grow a forest, usually to replace a forest that had been cut down. Strangely enough, graph theorists have another idea on how to make a forest, i.e. by cutting down a tree!\n\nA tree is a graph of $ N $ nodes connected by $ N - 1 $ edges. Let $ u $ be a node in a tree $ U $ which degree is at least $ 2 $ (i.e. directly connected to at least $ 2 $ other nodes in $ U $ ). If we remove $ u $ from $ U $ , then we will get two or more disconnected (smaller) trees, or also known as forest by graph theorists. In this problem, we are going to investigate a special forestation of a tree done by graph theorists.\n\nLet $ V(S) $ be the set of nodes in a tree $ S $ and $ V(T) $ be the set of nodes in a tree $ T $ . Tree $ S $ and tree $ T $ are identical if there exists a bijection $ f : V(S) \\rightarrow V(T) $ such that for all pairs of nodes $ (s_i, s_j) $ in $ V(S) $ , $ s_i $ and $ s_j $ is connected by an edge in $ S $ if and only if node $ f(s_i) $ and $ f(s_j) $ is connected by an edge in $ T $ . Note that $ f(s) = t $ implies node $ s $ in $ S $ corresponds to node $ t $ in $ T $ .\n\nWe call a node $ u $ in a tree $ U $ as a good cutting point if and only if the removal of $ u $ from $ U $ causes two or more disconnected trees, and all those disconnected trees are pairwise identical.\n\nGiven a tree $ U $ , your task is to determine whether there exists a good cutting point in $ U $ . If there is such a node, then you should output the maximum number of disconnected trees that can be obtained by removing exactly one good cutting point.\n\nFor example, consider the following tree of $ 13 $ nodes.\n\n![](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1252F/3ac5ebb3c1888c727ec26f8cc5bfb5407a38403b.png)\n\nThere is exactly one good cutting point in this tree, i.e. node $ 4 $ . Observe that by removing node $ 4 $ , we will get three identical trees (in this case, line graphs), i.e. $ \\{5, 1, 7, 13\\} $ , $ \\{8, 2, 11, 6\\} $ , and $ \\{3, 12, 9, 10\\} $ , which are denoted by $ A $ , $ B $ , and $ C $ respectively in the figure.\n\n- The bijection function between $ A $ and $ B $ : $ f(5) = 8 $ , $ f(1) = 2 $ , $ f(7) = 11 $ , and $ f(13) = 6 $ .\n- The bijection function between $ A $ and $ C $ : $ f(5) = 3 $ , $ f(1) = 12 $ , $ f(7) = 9 $ , and $ f(13) = 10 $ .\n- The bijection function between $ B $ and $ C $ : $ f(8) = 3 $ , $ f(2) = 12 $ , $ f(11) = 9 $ , and $ f(6) = 10 $ .\n\n Of course, there exists other bijection functions for those trees.",
    "inputFormat": "Input begins with a line containting an integer: $ N $ ( $ 3 \\le N \\le 4000 $ ) representing the number of nodes in the given tree. The next $ N - 1 $ lines each contains two integers: $ a_i $ $ b_i $ ( $ 1 \\le a_i < b_i \\le N $ ) representing an edge $ (a_i,b_i) $ in the given tree. It is guaranteed that any two nodes in the given tree are connected to each other by a sequence of edges.",
    "outputFormat": "Output in a line an integer representing the maximum number of disconnected trees that can be obtained by removing exactly one good cutting point, or output -1 if there is no such good cutting point.",
    "samples": [
        [
            "13\n1 5\n1 7\n2 4\n2 8\n2 11\n3 12\n4 7\n4 12\n6 11\n7 13\n9 10\n9 12\n",
            "3\n"
        ],
        [
            "6\n1 2\n1 3\n2 4\n3 5\n3 6\n",
            "-1\n"
        ]
    ],
    "hint": "Explanation for the sample input/output #1\n\nThis is the example from the problem description.",
    "translation": "\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u8be2\u95ee\u6811\u4e0a\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u8282\u70b9\uff0c\u4f7f\u5f97\u5220\u53bb\u8fd9\u4e2a\u8282\u70b9\u540e\uff0c\u5269\u4e0b\u6765\u7684\u51e0\u68f5\u6811\u540c\u6784\uff0c\u5982\u679c\u6709\uff0c\u8f93\u51fa\u8fd9\u4e2a\u8282\u70b9\u6700\u591a\u5c06\u6811\u5206\u6210\u4e86\u51e0\u68f5\u5b50\u6811\uff0c\u5426\u5219\u8f93\u51fa-1"
}