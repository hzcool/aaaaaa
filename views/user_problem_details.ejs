<% this.title = user.username + ' - 用户'; %>
<style>
    .ui.label.pointing.below.left::before { left: 12%; }
</style>
<% include header %>

<div class="padding" >

    <link href="<%- lib('element-plus/2.2.28/index.min.css') %>" rel="stylesheet">
    <script src="<%- lib('vue/3.2.36/vue.global.min.js') %>"></script>
    <script src="<%- lib('element-plus/2.2.28/index.full.min.js') %>"></script>
    <script src="<%- lib('echarts/echarts.js') %>"></script>


    <div id="app">
        <div>
            <div class="ui pointing below left label"> {{start_date}} </div>
        </div>
        <div>
            <el-slider v-model="value" :format-tooltip="formatTooltip" @change="handle" placement="bottom"/>
        </div>

        <div style="display: flex; justify-content: center;margin-top: 50px">
            <div ref="barChartRef" style="width: 1000px;height:600px;"> </div>
        </div>

        <div>
            <el-radio-group v-model="radio" @change="handle(false, true)">
                <el-radio v-for="item in bigs" :label="item" size="large"> {{item}} </el-radio>
            </el-radio-group>
        </div>

        <div style="display: flex; justify-content: center;margin-top: 50px">
            <div ref="pieChartRef" style="width: 1000px;height:650px;"> </div>
        </div>
    </div>


    <script>
        const {createApp, ref, onMounted} = Vue;
        const mp =  {'贪心': {'贪心': {'tag_id': '1', 'color': 'pink'}, '哈夫曼编码': {'tag_id': '127', 'color': 'olive'}, '拟阵': {'tag_id': '220', 'color': 'red'}}, '动态规划': {'DP': {'tag_id': '2', 'color': 'pink'}, '背包 DP': {'tag_id': '9', 'color': 'olive'}, '轮廓线 DP': {'tag_id': '102', 'color': 'olive'}, '插头 DP': {'tag_id': '103', 'color': 'olive'}, '树形 DP': {'tag_id': '108', 'color': 'olive'}, '数位DP': {'tag_id': '166', 'color': 'olive'}, '动态DP': {'tag_id': '179', 'color': 'olive'}, 'DP套DP': {'tag_id': '212', 'color': 'olive'}, '数位 DP': {'tag_id': '289', 'color': 'olive'}, '区间 DP': {'tag_id': '296', 'color': 'olive'}, '线头DP': {'tag_id': '301', 'color': 'olive'}}, '策略': {'二分': {'tag_id': '4', 'color': 'pink'}, '随机化': {'tag_id': '11', 'color': 'pink'}, '扫描线': {'tag_id': '55', 'color': 'olive'}, '莫队': {'tag_id': '62', 'color': 'olive'}, '剪枝优化': {'tag_id': '64', 'color': 'olive'}, '搜索': {'tag_id': '65', 'color': 'pink'}, '离线': {'tag_id': '72', 'color': 'pink'}, '模拟': {'tag_id': '87', 'color': 'pink'}, '树上启发式合并': {'tag_id': '90', 'color': 'olive'}, '决策单调性': {'tag_id': '94', 'color': 'olive'}, '模拟退火': {'tag_id': '110', 'color': 'olive'}, '爬山法': {'tag_id': '111', 'color': 'olive'}, '近似算法': {'tag_id': '112', 'color': 'olive'}, '差分': {'tag_id': '116', 'color': 'olive'}, '整体二分': {'tag_id': '128', 'color': 'olive'}, '拓扑排序': {'tag_id': '129', 'color': 'olive'}, '枚举': {'tag_id': '138', 'color': 'olive'}, 'CDQ 分治': {'tag_id': '151', 'color': 'olive'}, '三分': {'tag_id': '158', 'color': 'pink'}, '数论分块': {'tag_id': '159', 'color': 'olive'}, '分治': {'tag_id': '164', 'color': 'olive'}, 'BFS': {'tag_id': '165', 'color': 'olive'}, 'meet-in-the-middle': {'tag_id': '171', 'color': 'olive'}, '尺取': {'tag_id': '172', 'color': 'olive'}, 'Baby Step Giant Step': {'tag_id': '176', 'color': 'olive'}, 'wqs二分': {'tag_id': '193', 'color': 'olive'}, '启发式合并': {'tag_id': '196', 'color': 'olive'}, '单调性': {'tag_id': '197', 'color': 'olive'}, '二进制分组': {'tag_id': '202', 'color': 'olive'}, 'A*': {'tag_id': '207', 'color': 'olive'}, '分块打表': {'tag_id': '218', 'color': 'olive'}, '二次离线': {'tag_id': '222', 'color': 'olive'}, '回滚莫队': {'tag_id': '243', 'color': 'olive'}, '滑动窗口': {'tag_id': '300', 'color': 'olive'}, 'dfs': {'tag_id': '327', 'color': 'blue'}, '暴力': {'tag_id': '329', 'color': 'blue'}, '调度': {'tag_id': '330', 'color': 'blue'}}, '图论': {'图论': {'tag_id': '6', 'color': 'pink'}, '斯坦纳树': {'tag_id': '10', 'color': 'olive'}, '网络流': {'tag_id': '14', 'color': 'pink'}, '费用流': {'tag_id': '15', 'color': 'olive'}, '最短路': {'tag_id': '41', 'color': 'olive'}, '二分图匹配': {'tag_id': '49', 'color': 'olive'}, '欧拉回路': {'tag_id': '60', 'color': 'olive'}, '并查集': {'tag_id': '71', 'color': 'olive'}, '虚树': {'tag_id': '78', 'color': 'olive'}, '2-SAT': {'tag_id': '79', 'color': 'olive'}, '点分治': {'tag_id': '80', 'color': 'olive'}, '树链剖分': {'tag_id': '82', 'color': 'olive'}, 'DFS 序': {'tag_id': '83', 'color': 'olive'}, '矩阵树定理': {'tag_id': '85', 'color': 'olive'}, '长链剖分': {'tag_id': '89', 'color': 'olive'}, '强连通分量': {'tag_id': '91', 'color': 'olive'}, '点双连通分量': {'tag_id': '92', 'color': 'olive'}, '边双联通分量': {'tag_id': '93', 'color': 'olive'}, '最小生成树': {'tag_id': '95', 'color': 'olive'}, '树的直径': {'tag_id': '115', 'color': 'olive'}, '最大权闭合子图': {'tag_id': '132', 'color': 'olive'}, '树的重心': {'tag_id': '134', 'color': 'olive'}, '二分图': {'tag_id': '135', 'color': 'olive'}, '最小割': {'tag_id': '137', 'color': 'olive'}, '强连通': {'tag_id': '152', 'color': 'olive'}, '基环树': {'tag_id': '156', 'color': 'olive'}, 'LCA': {'tag_id': '160', 'color': 'olive'}, '割点': {'tag_id': '163', 'color': 'olive'}, '圆方树': {'tag_id': '178', 'color': 'olive'}, '最大独立集': {'tag_id': '189', 'color': 'olive'}, '最大匹配': {'tag_id': '194', 'color': 'olive'}, '平面图': {'tag_id': '211', 'color': 'olive'}, '差分约束系统': {'tag_id': '223', 'color': 'olive'}, '弦图': {'tag_id': '227', 'color': 'olive'}, '带花树算法': {'tag_id': '231', 'color': 'orange'}, 'tarjan': {'tag_id': '240', 'color': 'olive'}, '树': {'tag_id': '244', 'color': 'red'}, 'Voronoi 图': {'tag_id': '248', 'color': 'olive'}, '支配树': {'tag_id': '249', 'color': 'olive'}, 'DFS 树': {'tag_id': '270', 'color': 'olive'}, '树上差分': {'tag_id': '276', 'color': 'olive'}, '连通分量': {'tag_id': '299', 'color': 'olive'}, '上下界网络流': {'tag_id': '311', 'color': 'olive'}, '瓶颈路': {'tag_id': '314', 'color': 'olive'}, '竞赛图': {'tag_id': '315', 'color': 'olive'}, '哈密尔顿回路': {'tag_id': '316', 'color': 'olive'}, '图匹配': {'tag_id': '334', 'color': 'blue'}}, '数学': {'计算几何': {'tag_id': '7', 'color': 'pink'}, '数论': {'tag_id': '12', 'color': 'pink'}, '线性基': {'tag_id': '13', 'color': 'olive'}, '组合计数': {'tag_id': '39', 'color': 'pink'}, '多项式 / 形式幂级数': {'tag_id': '43', 'color': 'olive'}, '容斥原理': {'tag_id': '44', 'color': 'olive'}, '行列式': {'tag_id': '53', 'color': 'olive'}, '辛普森积分': {'tag_id': '54', 'color': 'olive'}, '凸包': {'tag_id': '81', 'color': 'olive'}, '概率与期望': {'tag_id': '98', 'color': 'olive'}, '高斯消元': {'tag_id': '99', 'color': 'olive'}, 'DFT(含 NTT)及FFT': {'tag_id': '104', 'color': 'olive'}, '生成函数 / 母函数': {'tag_id': '105', 'color': 'olive'}, '抽象代数': {'tag_id': '109', 'color': 'pink'}, '矩阵': {'tag_id': '113', 'color': 'olive'}, '斜率优化': {'tag_id': '119', 'color': 'olive'}, '质因数分解': {'tag_id': '120', 'color': 'olive'}, '博弈论': {'tag_id': '133', 'color': 'pink'}, 'prufer序列': {'tag_id': '136', 'color': 'olive'}, '映射与反演': {'tag_id': '140', 'color': 'red'}, '杜教筛': {'tag_id': '141', 'color': 'olive'}, '莫比乌斯反演': {'tag_id': '142', 'color': 'olive'}, '高精度': {'tag_id': '143', 'color': 'pink'}, '线性规划': {'tag_id': '144', 'color': 'red'}, '单纯形': {'tag_id': '145', 'color': 'olive'}, 'FWT': {'tag_id': '146', 'color': 'olive'}, 'SG定理': {'tag_id': '147', 'color': 'olive'}, 'Lucas 定理': {'tag_id': '148', 'color': 'olive'}, '中国剩余定理': {'tag_id': '149', 'color': 'olive'}, '斯特林数': {'tag_id': '154', 'color': 'olive'}, '数学': {'tag_id': '155', 'color': 'red'}, '物理': {'tag_id': '157', 'color': 'red'}, '三元环': {'tag_id': '173', 'color': 'olive'}, '正则表达式': {'tag_id': '174', 'color': 'olive'}, '半平面交': {'tag_id': '183', 'color': 'olive'}, '二项式反演': {'tag_id': '184', 'color': 'olive'}, '置换群': {'tag_id': '186', 'color': 'olive'}, '递推': {'tag_id': '187', 'color': 'olive'}, '推性质': {'tag_id': '188', 'color': 'olive'}, '导数': {'tag_id': '190', 'color': 'olive'}, '矩阵乘法': {'tag_id': '191', 'color': 'olive'}, '插值': {'tag_id': '192', 'color': 'olive'}, '因子分解': {'tag_id': '199', 'color': 'olive'}, '切比雪夫距离': {'tag_id': '200', 'color': 'olive'}, '钩子定理': {'tag_id': '201', 'color': 'olive'}, '积性函数': {'tag_id': '203', 'color': 'olive'}, '牛顿迭代': {'tag_id': '204', 'color': 'olive'}, '子集卷积': {'tag_id': '205', 'color': 'olive'}, '扩展欧几里德算法': {'tag_id': '208', 'color': 'olive'}, 'Burnside 引理与 Pólya 定理': {'tag_id': '213', 'color': 'olive'}, 'Taylor 展开': {'tag_id': '216', 'color': 'olive'}, '集合幂级数': {'tag_id': '217', 'color': 'olive'}, '原根': {'tag_id': '224', 'color': 'olive'}, '二次剩余': {'tag_id': '226', 'color': 'olive'}, '拉格朗日反演': {'tag_id': '228', 'color': 'olive'}, '三维计算几何': {'tag_id': '229', 'color': 'olive'}, '离散对数': {'tag_id': '230', 'color': 'olive'}, '拉格朗日插值': {'tag_id': '232', 'color': 'olive'}, '狄利克雷前缀和': {'tag_id': '234', 'color': 'blue'}, '线性代数': {'tag_id': '237', 'color': 'red'}, 'Miller Rabin': {'tag_id': '238', 'color': 'olive'}, '二进制': {'tag_id': '239', 'color': 'olive'}, '线性筛': {'tag_id': '242', 'color': 'olive'}, '下降幂多项式': {'tag_id': '246', 'color': 'olive'}, 'Prüfer 序列': {'tag_id': '278', 'color': 'olive'}, '类欧几里得算法': {'tag_id': '280', 'color': 'olive'}, '快速幂': {'tag_id': '284', 'color': 'olive'}, '乘法逆元': {'tag_id': '285', 'color': 'olive'}, 'LGV 引理': {'tag_id': '309', 'color': 'olive'}, '旋转卡壳': {'tag_id': '318', 'color': 'olive'}, '洲阁筛': {'tag_id': '321', 'color': 'olive'}, '分数规划': {'tag_id': '325', 'color': 'pink'}, '位运算': {'tag_id': '335', 'color': 'blue'}, '保序回归': {'tag_id': '10005', 'color': 'olive'}}, '数据结构': {'堆': {'tag_id': '8', 'color': 'olive'}, '线段树': {'tag_id': '16', 'color': 'olive'}, '前缀和': {'tag_id': '40', 'color': 'olive'}, '数据结构': {'tag_id': '47', 'color': 'pink'}, '单调队列': {'tag_id': '50', 'color': 'olive'}, '平衡树': {'tag_id': '51', 'color': 'olive'}, '可持久化': {'tag_id': '73', 'color': 'olive'}, '分块及按大小分类': {'tag_id': '84', 'color': 'olive'}, 'Link-Cut Tree': {'tag_id': '96', 'color': 'olive'}, '后缀平衡树': {'tag_id': '114', 'color': 'olive'}, '主席树': {'tag_id': '122', 'color': 'olive'}, '树状数组': {'tag_id': '123', 'color': 'olive'}, '倍增': {'tag_id': '131', 'color': 'olive'}, 'set': {'tag_id': '139', 'color': 'olive'}, '树套树': {'tag_id': '150', 'color': 'olive'}, '单调栈': {'tag_id': '161', 'color': 'olive'}, '笛卡尔树 / Kruskal 重构树': {'tag_id': '162', 'color': 'olive'}, '线段树合并': {'tag_id': '167', 'color': 'olive'}, '线段树分治': {'tag_id': '168', 'color': 'olive'}, 'DFS栈': {'tag_id': '169', 'color': 'olive'}, '可并堆': {'tag_id': '175', 'color': 'olive'}, '动态点分治': {'tag_id': '177', 'color': 'olive'}, 'Kd-Tree': {'tag_id': '180', 'color': 'olive'}, 'st表': {'tag_id': '181', 'color': 'olive'}, '高维前缀和': {'tag_id': '182', 'color': 'olive'}, 'STL': {'tag_id': '195', 'color': 'olive'}, 'bitset': {'tag_id': '198', 'color': 'olive'}, '链表': {'tag_id': '206', 'color': 'olive'}, '仙人掌': {'tag_id': '210', 'color': 'olive'}, 'Splay': {'tag_id': '214', 'color': 'olive'}, '替罪羊树': {'tag_id': '215', 'color': 'olive'}, '李超树': {'tag_id': '221', 'color': 'olive'}, '标记永久化': {'tag_id': '247', 'color': 'olive'}, '三维偏序': {'tag_id': '271', 'color': 'olive'}, 'RMQ': {'tag_id': '281', 'color': 'olive'}, '树分块': {'tag_id': '290', 'color': 'olive'}, 'Stern-Brocot树': {'tag_id': '307', 'color': 'olive'}, 'hash 表': {'tag_id': '310', 'color': 'olive'}, '后缀数据结构': {'tag_id': '331', 'color': 'blue'}, '杨氏矩阵': {'tag_id': '10004', 'color': 'olive'}}, '字符串': {'回文树': {'tag_id': '57', 'color': 'olive'}, 'Manacher': {'tag_id': '58', 'color': 'olive'}, '哈希': {'tag_id': '59', 'color': 'olive'}, '字符串': {'tag_id': '63', 'color': 'pink'}, '字典树': {'tag_id': '106', 'color': 'olive'}, 'KMP': {'tag_id': '124', 'color': 'olive'}, '后缀数组': {'tag_id': '125', 'color': 'olive'}, '后缀自动机': {'tag_id': '126', 'color': 'olive'}, 'AC自动机': {'tag_id': '153', 'color': 'olive'}, '树hash': {'tag_id': '170', 'color': 'olive'}, 'Border理论': {'tag_id': '236', 'color': 'olive'}, '扩展kmp': {'tag_id': '245', 'color': 'blue'}}, '其他': {'交互题': {'tag_id': '3', 'color': 'teal'}, 'NOI': {'tag_id': '30', 'color': 'blue'}, 'NOIP': {'tag_id': '31', 'color': 'blue'}, 'WC': {'tag_id': '32', 'color': 'blue'}, 'CTSC': {'tag_id': '33', 'color': 'blue'}, 'APIO': {'tag_id': '34', 'color': 'blue'}, '集训队互测': {'tag_id': '42', 'color': 'blue'}, '状态压缩': {'tag_id': '46', 'color': 'olive'}, '构造': {'tag_id': '61', 'color': 'pink'}, '结论题': {'tag_id': '86', 'color': 'pink'}, '复杂度分析': {'tag_id': '100', 'color': 'pink'}, '提交答案': {'tag_id': '107', 'color': 'teal'}, '括号匹配': {'tag_id': '225', 'color': 'olive'}, '模型转化': {'tag_id': '233', 'color': 'blue'}, '程序实现': {'tag_id': '287', 'color': 'pink'}, '自动机': {'tag_id': '288', 'color': 'olive'}, '异或': {'tag_id': '294', 'color': 'pink'}, '分类讨论': {'tag_id': '326', 'color': 'olive'}, '排序': {'tag_id': '332', 'color': 'blue'}, '特殊题': {'tag_id': '333', 'color': 'blue'}}}
        const mpBig = {'贪心': '贪心', 'DP': '动态规划', '交互题': '其他', '二分': '策略', '图论': '图论', '计算几何': '数学', '堆': '数据结构', '背包 DP': '动态规划', '斯坦纳树': '图论', '随机化': '策略', '数论': '数学', '线性基': '数学', '网络流': '图论', '费用流': '图论', '线段树': '数据结构', 'NOI': '其他', 'NOIP': '其他', 'WC': '其他', 'CTSC': '其他', 'APIO': '其他', '组合计数': '数学', '前缀和': '数据结构', '最短路': '图论', '集训队互测': '其他', '多项式 / 形式幂级数': '数学', '容斥原理': '数学', '状态压缩': '其他', '数据结构': '数据结构', '二分图匹配': '图论', '单调队列': '数据结构', '平衡树': '数据结构', '行列式': '数学', '辛普森积分': '数学', '扫描线': '策略', '回文树': '字符串', 'Manacher': '字符串', '哈希': '字符串', '欧拉回路': '图论', '构造': '其他', '莫队': '策略', '字符串': '字符串', '剪枝优化': '策略', '搜索': '策略', '并查集': '图论', '离线': '策略', '可持久化': '数据结构', '虚树': '图论', '2-SAT': '图论', '点分治': '图论', '凸包': '数学', '树链剖分': '图论', 'DFS 序': '图论', '分块及按大小分类': '数据结构', '矩阵树定理': '图论', '结论题': '其他', '模拟': '策略', '长链剖分': '图论', '树上启发式合并': '策略', '强连通分量': '图论', '点双连通分量': '图论', '边双联通分量': '图论', '决策单调性': '策略', '最小生成树': '图论', 'Link-Cut Tree': '数据结构', '概率与期望': '数学', '高斯消元': '数学', '复杂度分析': '其他', '轮廓线 DP': '动态规划', '插头 DP': '动态规划', 'DFT(含 NTT)及FFT': '数学', '生成函数 / 母函数': '数学', '字典树': '字符串', '提交答案': '其他', '树形 DP': '动态规划', '抽象代数': '数学', '模拟退火': '策略', '爬山法': '策略', '近似算法': '策略', '矩阵': '数学', '后缀平衡树': '数据结构', '树的直径': '图论', '差分': '策略', '斜率优化': '数学', '质因数分解': '数学', '主席树': '数据结构', '树状数组': '数据结构', 'KMP': '字符串', '后缀数组': '字符串', '后缀自动机': '字符串', '哈夫曼编码': '贪心', '整体二分': '策略', '拓扑排序': '策略', '倍增': '数据结构', '最大权闭合子图': '图论', '博弈论': '数学', '树的重心': '图论', '二分图': '图论', 'prufer序列': '数学', '最小割': '图论', '枚举': '策略', 'set': '数据结构', '映射与反演': '数学', '杜教筛': '数学', '莫比乌斯反演': '数学', '高精度': '数学', '线性规划': '数学', '单纯形': '数学', 'FWT': '数学', 'SG定理': '数学', 'Lucas 定理': '数学', '中国剩余定理': '数学', '树套树': '数据结构', 'CDQ 分治': '策略', '强连通': '图论', 'AC自动机': '字符串', '斯特林数': '数学', '数学': '数学', '基环树': '图论', '物理': '数学', '三分': '策略', '数论分块': '策略', 'LCA': '图论', '单调栈': '数据结构', '笛卡尔树 / Kruskal 重构树': '数据结构', '割点': '图论', '分治': '策略', 'BFS': '策略', '数位DP': '动态规划', '线段树合并': '数据结构', '线段树分治': '数据结构', 'DFS栈': '数据结构', '树hash': '字符串', 'meet-in-the-middle': '策略', '尺取': '策略', '三元环': '数学', '正则表达式': '数学', '可并堆': '数据结构', 'Baby Step Giant Step': '策略', '动态点分治': '数据结构', '圆方树': '图论', '动态DP': '动态规划', 'Kd-Tree': '数据结构', 'st表': '数据结构', '高维前缀和': '数据结构', '半平面交': '数学', '二项式反演': '数学', '置换群': '数学', '递推': '数学', '推性质': '数学', '最大独立集': '图论', '导数': '数学', '矩阵乘法': '数学', '插值': '数学', 'wqs二分': '策略', '最大匹配': '图论', 'STL': '数据结构', '启发式合并': '策略', '单调性': '策略', 'bitset': '数据结构', '因子分解': '数学', '切比雪夫距离': '数学', '钩子定理': '数学', '二进制分组': '策略', '积性函数': '数学', '牛顿迭代': '数学', '子集卷积': '数学', '链表': '数据结构', 'A*': '策略', '扩展欧几里德算法': '数学', '仙人掌': '数据结构', '平面图': '图论', 'DP套DP': '动态规划', 'Burnside 引理与 Pólya 定理': '数学', 'Splay': '数据结构', '替罪羊树': '数据结构', 'Taylor 展开': '数学', '集合幂级数': '数学', '分块打表': '策略', '拟阵': '贪心', '李超树': '数据结构', '二次离线': '策略', '差分约束系统': '图论', '原根': '数学', '括号匹配': '其他', '二次剩余': '数学', '弦图': '图论', '拉格朗日反演': '数学', '三维计算几何': '数学', '离散对数': '数学', '带花树算法': '图论', '拉格朗日插值': '数学', '模型转化': '其他', '狄利克雷前缀和': '数学', 'Border理论': '字符串', '线性代数': '数学', 'Miller Rabin': '数学', '二进制': '数学', 'tarjan': '图论', '线性筛': '数学', '回滚莫队': '策略', '树': '图论', '扩展kmp': '字符串', '下降幂多项式': '数学', '标记永久化': '数据结构', 'Voronoi 图': '图论', '支配树': '图论', 'DFS 树': '图论', '三维偏序': '数据结构', '树上差分': '图论', 'Prüfer 序列': '数学', '类欧几里得算法': '数学', 'RMQ': '数据结构', '快速幂': '数学', '乘法逆元': '数学', '程序实现': '其他', '自动机': '其他', '数位 DP': '动态规划', '树分块': '数据结构', '异或': '其他', '区间 DP': '动态规划', '连通分量': '图论', '滑动窗口': '策略', '线头DP': '动态规划', 'Stern-Brocot树': '数据结构', 'LGV 引理': '数学', 'hash 表': '数据结构', '上下界网络流': '图论', '瓶颈路': '图论', '竞赛图': '图论', '哈密尔顿回路': '图论', '旋转卡壳': '数学', '洲阁筛': '数学', '分数规划': '数学', '分类讨论': '其他', 'dfs': '策略', '暴力': '策略', '调度': '策略', '后缀数据结构': '数据结构', '排序': '其他', '特殊题': '其他', '图匹配': '图论', '位运算': '数学', '杨氏矩阵': '数据结构', '保序回归': '数学'}
        const bigs = ['贪心',  '策略', '图论', '数学', '字符串', '动态规划', '数据结构', '其他']


        const info = <%- serializejs(info) %>
        const min_time = parseInt('<%= min_time%>')
        const now = parseInt('<%= now%>')
        const dur = now - min_time

        const barChartRef = ref(null)
        const pieChartRef = ref(null)

        const dateFormat= (date, fmt = "YYYY-mm-dd HH:MM:SS") => {
            let ret
            const opt = {
                "Y+": date.getFullYear().toString(),        // 年
                "m+": (date.getMonth() + 1).toString(),     // 月
                "d+": date.getDate().toString(),            // 日
                "H+": date.getHours().toString(),           // 时
                "M+": date.getMinutes().toString(),         // 分
                "S+": date.getSeconds().toString()          // 秒
            }
            for (let k in opt) {
                ret = new RegExp("(" + k + ")").exec(fmt);
                if (ret) {
                    fmt = fmt.replace(ret[1], (ret[1].length == 1) ? (opt[k]) : (opt[k].padStart(ret[1].length, "0")))
                }
            }
            return fmt
        }

        // 指定图表的配置项和数据
        const barOpt = {
            title: { text: '解题分类统计' },
            tooltip: {},
            legend: {
                data: ['过题数量']
            },
            xAxis: {
                data: []
            },
            yAxis: {},
            series: [
                {
                    name: '过题数量',
                    type: 'bar',
                    data: [5, 20, 36, 10]
                }
            ]
        }
        const pieOpt = {
            title: {
                text: '图论',
                subtext: '知识点分析',
                left: 'center'
            },
            color: [],
            tooltip: {
                trigger: 'item'
            },
            legend: {
                orient: 'vertical',
                left: 'left'
            },
            series: [
                {
                    name: '过题量',
                    type: 'pie',
                    radius: '50%',
                    data: [ { value: 1048, name: '最短路' },],
                    emphasis: {
                        itemStyle: {
                            shadowBlur: 10,
                            shadowOffsetX: 0,
                            shadowColor: 'rgba(0, 0, 0, 0.5)'
                        }
                    }
                }
            ]
        };
        let barChart = undefined
        let pieChart = undefined

        const value = ref(100)
        const get_ts = () => min_time + parseInt(value.value / 100 * dur)
        const formatTooltip = () => dateFormat(new Date(get_ts() * 1000))
        const radio = ref(bigs[0])

        const handle = (barChange = true, pieChange = true) => {
            const ts = get_ts()
            let counter = {}
            let pie_data = {}
            for(let item of info) {
                if(item.submit_time > ts) continue
                for(let tag of item.tags) {
                    let type = mpBig[tag.name]
                    if(!type) continue
                    if(!counter[type]) counter[type] = 0;
                    counter[type] += 1
                    if(type === radio.value) {
                        if(!pie_data[tag.name]) pie_data[tag.name] = 0
                        pie_data[tag.name] += 1
                    }
                }
            }


            if(barChange) {
                barOpt.xAxis.data = []
                barOpt.series[0].data = []
                for (let key of bigs) {
                    if(counter[key]) {
                        barOpt.xAxis.data.push(key)
                        barOpt.series[0].data.push(counter[key])
                    }
                }
                barChart.setOption(barOpt)
            }

            if(pieChange) {
                pieOpt.series[0].data = []
                pieOpt.title.text = radio.value
                pieOpt.color = []
                for (let key in pie_data) {
                    pieOpt.series[0].data.push({name: key, value: pie_data[key]})
                    pieOpt.color.push(mp[mpBig[key]][key].color)
                }
                pieChart.setOption(pieOpt)
            }
        }


        const App = {
            setup() {

                onMounted(() => {
                    //柱状图
                    barChart = echarts.init(barChartRef.value);
                    pieChart = echarts.init(pieChartRef.value)
                    handle()
                })
                return {start_date: dateFormat(new Date(min_time * 1000)) ,value, formatTooltip, radio, barChartRef, pieChartRef, handle, bigs}
            },
        }
        createApp(App).use(ElementPlus).mount('#app')
    </script>


</div>
<% include footer %>
